id	label	hovertext	author	x	y	type	relevance	size	year	umap1d
37732472	TypeScript Monorepo with NPM Workspa	TypeScript Monorepo with NPM Workspaces	skwee357	8.63726	8.979509	story	3.0	21.0	1696206130	13.833057
14974197	As I understand, Daniel Vetter is pr	"As I understand, Daniel Vetter is proposing a ""monotree"" as a source code control pattern where a monorepo (and its branches) is not the primary place where development is done, but is rather where works are integrated from subordinate repositories.  In partic"	clarkevans	8.631477	8.990181	comment	3.0	16.0	1502316667	13.840441
35291640	Not just that it doesn't integrate w	Not just that it doesn't integrate well with external tools. Cmake works better here.We had a googler at our company switch everything to bazel and it just slowed everyone down.There really is something about Google engineers, this sort of subtle arrogance tha	HervalFreire	8.810745	9.166377	comment	3.0	10.5	1679675859	-5.331535
15700996	Hi! I’m one of the engineers on this	Hi! I’m one of the engineers on this. We’ve got some work we’re collaborating on - all of which is going upstream - and we wanted a shared place to stage it while we prepare PRs. I’ll be pushing a statement to our fork tomorrow.(I’m personally working on Bazel	lexlash	8.808049	9.167152	comment	3.0	17.0	1510712167	13.691062
15741787	Repo style wars: mono vs. multi	Repo style wars: mono vs. multi	zeveb	8.632363	8.989352	story	3.0	30.0	1511201059	13.844598
27008641	We have repository systems built for	We have repository systems built for centralized atomic updates, and giant monorepos, like SVN. Question is why are we trying to have Git do this, which was explicitly designed with the exact opposite goal? Is this an attempt to do SVN in Git so we get to keep	slver	8.631678	8.989441	comment	3.0	13.0	1619894364	13.844619
33614247	In the argument of monorepo vs not, 	In the argument of monorepo vs not, the usual argument goes like this:- It's too hard to scale for a large monorepo!- Google does it just fine!- But I don't have access to Google's tools!So kudos to Meta for both solving the problem and making it available to 	jedberg	8.632481	8.988354	comment	3.0	11.0	1668542613	-10.777949
34057363	From the announcement:> One of Bazel	From the announcement:> One of Bazel's most powerful features is its ability to use remote caching and remote execution.What's the value proposition of Bazel when build systems like cmake support this out of the box with third-party tools like distcc and ccach	simplotek	8.810277	9.166534	comment	3.0	13.0	1671482392	13.665575
34057853	Probably because building targets wi	Probably because building targets with tools outside of the workspace is an antipattern, as it violates hermiticity principles. In fact, Bazel generally makes it quite hard to do this, so anyone who ends up in this scenario must have jumped through many hoops 	lopkeny12ko	8.809302	9.168661	comment	3.0	11.0	1671484692	13.681795
15889911	Good point.It's important to stress 	Good point.It's important to stress that Google uses Perforce and not git (at least for that monorepo, they use git/gerrit for Android).A monorepo this size would simply not scale on git, at least not without huge amounts of hacks (and to be fair, Google built	hota_mazi	8.632267	8.986059	comment	3.0	15.5	1512880050	13.836689
15890831	The trick is that Google have their 	The trick is that Google have their own VCS, build tooling, automated refactoring tools, etc etc, specifically designed to deal with their monorepo. Nobody else has that - we're stuck with git and a complex landscape of tools for managing code in ad-hoc ways. 	vertex-four	8.632351	8.984825	comment	3.0	27.0	1512902452	13.843958
15891060	Google has that, Facebook has that, 	Google has that, Facebook has that, Microsoft partially has that, some investment banks have that too.Everywhere I've seen mono repo, mono repo was better than multi repo.They all built special tooling and have dedicated teams to support it.	user5994461	8.6322	8.987582	comment	3.0	25.5	1512907283	13.842971
15891097	I wish someone would create an open-	I wish someone would create an open-source vcs that supports mono-repos at scale out of the box.	perfmode	8.631398	8.988253	comment	3.0	12.5	1512908245	13.847979
17057569	The point is that git doesn't do the	The point is that git doesn't do the right thing.A random git user with just the URL for my submodule-using repository isn't going to know to use some special thing to clone the repository.  They're going to run `git clone URL` and then be frustrated by the re	newnewpdro	8.616802	9.004838	comment	3.0	10.5	1526191810	-11.997171
22994666	> I wonder which company successfull	> I wonder which company successfully runs a monorepo in git.Microsoft	Kipters	8.631458	8.9870825	comment	3.0	12.0	1587984647	13.846474
28241667	I have a project, a programming envi	I have a project, a programming environment/runtime, that contains a number of overlapping applications. I started with a small number of repos, including one main one. I had a number of frustrations with that. One of them is I didn't like having shared and un	gpsx	8.6296625	8.979465	comment	3.0	15.5	1629425670	13.808266
28244362	I have worked with all of these mode	I have worked with all of these models.I have figured out that monorepo mainly covers for faults in maintaining separation between components (like ensuring only single direction of dependencies and no cycles, ensuring backwards compatibility, self-service, et	lmilcin	8.632801	8.990071	comment	3.0	14.5	1629452919	13.840659
27844865	The problem is that large codebases 	"The problem is that large codebases tend to have a huge footprint if you need to clone the whole repo. Git as-is does not allow you to only pull a subset, i.e. specific paths representing a sub project. That's what josh is trying to solve: a ""virtual"" repo tha"	ganafagol	8.630425	8.988301	comment	3.0	15.5	1626357998	13.836918
21214430	I use bazel at work heavily in a ver	I use bazel at work heavily in a very large project. I’ve always worked with scripting languages so I’m much less familiar with build systems.I’m not sure I get what makes bazel so good. It seems pretty simple to me. You have a bunch of directories with BUIILD	dickeytk	8.809361	9.168374	comment	3.0	14.0	1570715444	13.680328
21234878	Can you elaborate on “monorepos do n	Can you elaborate on “monorepos do not prevent you from checking packages into source control” and how that helps to avoid recompiling everything? Why would you check a package into source control anyway? Surely source control is for source code? And I lean to	weberc2	8.633375	8.988939	comment	3.0	18.5	1570902459	13.849047
21385655	Firefox will currently build on more	Firefox will currently build on more platforms than Bazel does. Getting fed up of the endless list of new build systems.	rjsw	8.810301	9.167942	comment	3.0	21.0	1572345754	13.659311
21457548	While I love these projects, neither	While I love these projects, neither one of these actually fix the problem of an ecosystem of dependencies.Buck and Bazel were created for complex internal dependencies.You'll have just as easy/hard of a time getting Boost installed with Bazel as you would for	paulddraper	8.808406	9.164546	comment	3.0	12.0	1572993671	13.68356
39093816	Monorepos are indeed causing problem	"Monorepos are indeed causing problems with git, and this is one of the main arguments against them (see [1]).
Some companies are building their own solutions (Google, Meta), and some are splitting their monorepos because of these problems. IMO if a company wan"	sasham	8.630717	8.9897175	comment	3.0	13.5	1705950286	13.852168
30687044	Monorepo is just one small part of t	"Monorepo is just one small part of the puzzle. If you want to actually achieve the dream state that is alluded to when someone says ""monorepo"", you have to be willing to endure a super-deep and honest evaluation of your tech stack and processes.We have been su"	bob1029	8.632617	8.989837	comment	3.0	10.5	1647360375	13.842459
18813499	I think there's a nuance to this tha	I think there's a nuance to this that should be pointed out: Monorepos allow you to do very bad hacks (I need this other component over there; let me just put in a Symlink. Done.). And if people can, they will use those hacks.If you split your repo up from the	btschaegg	8.62769	8.993041	comment	3.0	13.5	1546500616	13.857534
18813991	Not always. It makes absolutely sens	"Not always. It makes absolutely sense to have a repository for the gui and one for the server.
When writing a new feature you usually write some gui code and some server code and create different pull requests.
I think monorepos are seriously wrong and I compl"	tigershark	8.632704	8.989247	comment	3.0	22.5	1546509257	13.852638
18814339	“why on earth would google invest en	“why on earth would google invest enormous effort constructing an entire ecosystem around a monorepo?”Didn’t google have a monorepo before git was created? And was created by academics? Legacy and momentum have a strong influence on the future. Hasn’t google a	ashelmire	8.635909	8.980296	comment	3.0	12.5	1546514342	13.832266
18820494	I think that the reason of the argum	"I think that the reason of the argument is that both authors understand the definition of ""large repository"" very differently.With 100 engineers a monorepo might seem a good idea. With 500 it becomes nearly impossible to do anything involving a build. Some iso"	totallysnowman	8.631777	8.990059	comment	3.0	13.5	1546558696	13.850223
18820874	My org went from a monorepo where ev	My org went from a monorepo where every project had to obey the same CI model and you could not introduce entirely new CI tools for new prototypes over to a polyrepo with separated semver library repos for shared dependencies, and it simplified everything so m	mlthoughts2018	8.632706	8.9903145	comment	3.0	16.0	1546562000	-13.739515
18856778	You list three items here:“- library	You list three items here:“- library developers can easily see the impact their changes will have on their consumers- library changes that introduce regressions in their consumers can be caught pre-merge given good test coverage- dependency version updates bet	mlthoughts2018	8.638965	8.978387	comment	3.0	12.0	1546964934	13.8325615
17268208	Google. monorepo with almost full vi	Google. monorepo with almost full visibility, code search/cross referencing/review tools, good infrastructure support, great videoconference and collaboration tools, a culture of written knowledge vs. oral lore, clear strategy in many parts of the business (lo	jshute	8.63292	8.989347	comment	3.0	11.5	1528481531	13.848398
16364277	Eventual consistency. The great thin	Eventual consistency. The great thing about multi repo is the ease of decoupling the pieces so they can evolves separately (you can do that in monorepos too, but it's not quite as natural).You're free to PR changes gradually, making sure things work a couple o	shados	8.631762	8.988691	comment	3.0	10.5	1518488854	13.847225
16364334	With multiple repos, how do you solv	With multiple repos, how do you solve the issue that the private dependencies installed by package managers are not themselves under source control when you edit them? They are in /vendor or /node_modules or whatever. It's easy to pull them down and of course,	mnm1	8.630997	8.981971	comment	3.0	14.5	1518489657	13.745068
16364461	And how do you test if a change in o	And how do you test if a change in one of these repos fixes the problem you’re seeing?  This is what we’re failing at with our multirepo.That and resectioning code to split or combine responsibilities in different ways. Something a monorepo makes trivial.	hinkley	8.631763	8.989988	comment	3.0	11.0	1518491782	13.847843
36720002	Source Depot's largest disadvantage 	Source Depot's largest disadvantage VS git how hard it is to share changes with others.But I miss the ability to only pull down a portion of a monorepo, and the ability to remap where folders are at, or to pull down a single folder into multiple locations.So m	com2kid	8.627711	8.987923	comment	3.0	10.5	1689314440	13.835096
24454486	I can't say for sure, but I'd be inc	I can't say for sure, but I'd be incredibly surprised if they weren't. What else would they be on? (Don't say Git, they tried to make Git scale for their monorepo and it would have required a lot of changes that the Git community wasn't interested in.)	sulam	8.631493	8.986583	comment	3.0	17.0	1599936421	13.849031
24493957	Had to build bazel from scratch, you	"Had to build bazel from scratch, you need:- a previous version of Bazel- GCC/Clang- JDK- Python- Zip and UnzipNot sure I'd call that ""huge"". Perhaps the JDK?"	steeve	8.809798	9.167431	comment	3.0	10.5	1600272339	13.664018
24509870	I think the key difference here is t	I think the key difference here is that there is no network in between components in a componentized monolith, each component runs the entire “monorepo”	jurre	8.632896	8.9914875	comment	3.0	19.0	1600376294	13.852634
32134362	Blaze/Bazel actually sucks imo.  The	Blaze/Bazel actually sucks imo.  The only good thing about it is that all of google uses that one piece of shit, making things nice and uniform and consistent.There's a reason it isn't popular outside of elgoog.IRL, every project tends to do a little bit or a 	metadat	8.809922	9.16842	comment	3.0	18.0	1658115546	13.682879
32134513	Bazel can be clunky, but not having 	Bazel can be clunky, but not having some bazel equivalent can have very significant costs that are easy to get accustomed to or overlook.Things like engineers losing time wondering why their node dependencies weren't correctly installed, or dealing with a pre-	dub	8.809799	9.1679325	comment	3.0	14.5	1658116928	13.67337
22020728	Naive questionCan't we call Github a	Naive questionCan't we call Github a monorepository, as it is a single area one can use to access code?Implementation details likely differ from whatever Google and her engineers are cooking up, but at the end of the day I point to an archive and pull artifact	tomrod	8.632778	8.988266	comment	3.0	10.5	1578760573	13.8503895
22022000	Don't try a monorepo unless you have	Don't try a monorepo unless you have a team of engineers who can work full time on maintaining the build tooling, enforcing good practices, and training the rest of the engineers on how to behave in a monorepo.	twblalock	8.635136	8.990923	comment	3.0	12.0	1578773706	13.8401
22079909	Interesting. I've been wanting somet	Interesting. I've been wanting something like that for submodules. Can the two features be combined?For instance, if you need a single file/directory from another project in your repository.	MayeulC	8.617698	9.004153	comment	3.0	13.5	1579298386	-11.994385
32830137	That's like saying you should never 	That's like saying you should never build a house with concrete foundations because they take so long to dig and pour and the first layer of bricks doesn't need them anyway!Get back to me when you work for a company with a monorepo that has to build and test e	IshKebab	8.772829	9.130931	comment	3.0	12.0	1663102925	13.72769
32830217	In general, if someone wants to beef	"In general, if someone wants to beef up the tooling in my project that I know is fine to begin with, I still say ""I don't mind, go ahead, but I will continue using my old tooling until yours works with no regression."" Half the time, they abandon it. I don't ev"	hot_gril	8.808554	9.165849	comment	3.0	13.5	1663103419	13.676977
16483267	A significant hurdle for the univers	A significant hurdle for the universal adoption of Bazel is its too many dependencies.	netheril96	8.810137	9.168436	comment	3.0	12.5	1519828876	13.665319
16487447	This looks so similar to Bazel..What	This looks so similar to Bazel..What's the advantage of using Please?	egnehots	8.809562	9.169045	comment	3.0	16.0	1519854886	-4.6474123
16488053	"What's hard about ""brew install baze"	"What's hard about ""brew install bazel""?"	iainmerrick	8.809344	9.168787	comment	3.0	12.0	1519858865	13.668932
16807694	Start working in a repo with submodu	Start working in a repo with submodules and you suddenly have to understand a lot more and can get into trouble with no idea how you did it.	flatline	8.617536	9.003478	comment	3.0	13.5	1523415510	-12.020669
19590556	How difficult would this be to add G	How difficult would this be to add GIPO to?This crushes the Raspi3 for the value.	robertAngst	8.631555	8.979226	comment	3.0	10.5	1554556543	-11.976483
19693820	Adrian Colyer dug into this a little	"Adrian Colyer dug into this a little further on the morning paper:https://blog.acolyer.org/2019/04/18/keeping-master-green-at-...His analysis indicates that what uber does as part of its build pipeline is to break up the monorepo into ""targets"" and for each ta"	underrun	8.632967	8.989723	comment	3.0	15.5	1555614176	13.842455
19793303	I'm a bit confused.Are you critical 	I'm a bit confused.Are you critical of the size of the monorepo, or the number of builds?	algorithmsRcool	8.635763	8.994434	comment	3.0	13.5	1556669480	13.846052
35756784	>For example, if an engineer is unsu	>For example, if an engineer is unsure how to use a library, they can find examples just by searchingIsn't that the case with all libraries? How does the monorepo help here?	falcor84	8.635275	8.986255	comment	3.0	12.0	1682799735	13.845523
34361308	''I am here to tell you: if you are 	''I am here to tell you: if you are running a software business and you aren't at, like, Google-tier scale, just throw it all in a monorepo.''Google _is_ a monorepo	xiphias2	8.673578	8.947814	comment	3.0	16.5	1673563417	13.838492
34886368	I'm not trying to be overly critical	I'm not trying to be overly critical here, in fact, I want to share the type of empathetic feedback I'd hope to receive as a founder.Have you actually talked to Blaze/Bazel users to understand what frustrations (if any) they have with their current build syste	Denzel	8.80998	9.168564	comment	3.0	11.0	1677010252	13.666081
36964083	What is your spiciest take on monore	What is your spiciest take on monorepos	pperi11	8.63206	8.990898	story	3.0	5.0	1690928844	13.844165
29195687	> No one has claimed that a monorepo	> No one has claimed that a monorepo lets you magically do atomic RPC API migrations.Plenty of people have claimed and continue to claim that a monorepo lets you magically do atomic API migrations, and skate over how the fact that many APIs go over RPC these d	lmm	8.632769	8.99074	comment	3.0	13.0	1636683898	13.851788
29510150	> The Commission will make its softw	> The Commission will make its software available as open source in one single repositoryLet's hope this is not a git monorepo...I wonder where they will release it? Github would be the easy choice. They could self-host a forge or just a web frontend, publish 	MayeulC	8.631893	8.986109	comment	3.0	11.5	1639146172	-11.757835
36258360	Ask HN: Branching strategies for mon	Ask HN: Branching strategies for monorepos, what is your approach?	floppydisc	8.631416	8.990939	story	3.0	2.0	1686321044	13.841616
36400671	I doubt the fact they use a monorepo	"I doubt the fact they use a monorepo has any impact on this thinking. A versioned sourced repository is no different from a file server. If some ""ai copyright infringed"" code made it into the monorepo it doesn't compromise the whole thing. There are still clea"	samwillis	8.632395	8.989056	comment	3.0	15.0	1687245007	13.842317
25907222	Ask HN: Monorepo design best practic	Ask HN: Monorepo design best practices? (naming convention etc.)	bredren	8.632662	8.989168	story	3.0	2.0	1611601469	13.847114
31515321	This is an interesting write up!The 	This is an interesting write up!The only question I have is around your point on monorepos - every monorepo I’ve seen has been a discoverability nightmare with bespoke configurations and archaic incantations (and sometimes installing Java!) necessary to even f	zer01	8.633296	8.990122	comment	3.0	11.0	1653546589	13.842424
31763897	> questionable tools (with large sha	"> questionable tools (with large shadows) such as Bazel and gRPC,Bazel and gRPC, whilst both saddled with problems stemming from Google's inwardly-focused engineering culture (and also just some sub-optimal historical decisions) are not ""questionable tools"" in"	patrec	8.813805	9.154907	comment	3.0	13.5	1655370313	13.650001
14411508	Why split it into separate modules? 	Why split it into separate modules? Seeing that big companies are very successful with monorepos (Google, Facebook, Microsoft), has made me reconsider if repository modularization is actually worth it. There are a host of advantages to not modularizing repos, 	arjie	8.630456	8.991457	comment	3.0	17.0	1495645284	13.844716
14412979	I'd rather see google open up their 	I'd rather see google open up their monorepo as a platform, and compete with github.  git is fine, but there's something compelling about a monorepo.  Whether they do it one-monorepo-per-account, or one-global-monorepo, or some mix of the two, would be interes	daxfohl	8.632154	8.987281	comment	3.0	13.0	1495656017	13.844007
20567094	My team just switched to a monorepo.	My team just switched to a monorepo. It's been only a few weeks, so I can't claim any results yet, but we've lived w/ the pain of poly-repo for long enough that we were ready to invest in a single repo.We've spent a lot of time building and iterating a unified	DanFeldman	8.632139	8.990285	comment	3.0	12.0	1564507907	13.841536
24173670	I think if git submodules were archi	I think if git submodules were architectured differently, they could have been a really interesting solution for package management. In fact my last place of work uses a layer on top of submodules as part of their internal package manager. I think they could b	anchpop	8.614819	9.007675	comment	3.0	14.5	1597537419	-11.999753
34049286	Monorepos and monoliths are orthogon	Monorepos and monoliths are orthogonalMonorepos are a tooling nightmare. Monorepos are a bandwidth black hole.Monorepos make some things possible that are just not possible or very very hard when you have multiple independent repos that are built and tested in	ithkuil	8.632685	8.989313	comment	4.0	14.0	1671432807	13.846362
26479390	Nice work, really interesting blog p	Nice work, really interesting blog post!On a sidenote, git itself can also get painfully slow with large monorepos. Hope GitHub can push some changes there as well.I know FB moved off git to mercurial because of performance issues.	iliekcomputers	8.633296	8.986372	comment	4.0	14.0	1615913565	13.824696
26479399	Offtopic, but I often wonder if ther	Offtopic, but I often wonder if there are people using `git worktree` to have several related code trees within the same repo.Technically it works the mostly the same as multiple repos, but theoretically allows to have something like a bootstrap script with ev	tuyiown	8.629493	8.981832	comment	4.0	12.0	1615913586	-11.897061
26688549	> Dflat at the moment requires Bazel	> Dflat at the moment requires Bazel.Very few people use Bazel for Android or iOS. Anyone not from Google care to let us know if you're using Bazel for mobile development?	throw14082020	8.809907	9.16877	comment	4.0	11.5	1617535314	13.6577635
26719573	Also, how does Bazel compare to Grad	Also, how does Bazel compare to Gradle?JetBrains and it seems basically every library has support for Gradle and sometimes Maven, but not Bazel. Gradle is verbose and has a really steep learning curve, but it's battle-tested and does its job really well. I don	Jakobeha	8.809894	9.168134	comment	4.0	11.0	1617759232	13.646409
26719689	For me, the main advantage of Bazel 	For me, the main advantage of Bazel is speed, when properly structured and configured, a Bazel build can:* Perform incremental build a magnitude faster than Maven, zero changes build finishes immediately.* Can have global caches for all builds across organizat	dikei	8.803773	9.160521	comment	4.0	12.5	1617760269	13.644469
26730016	How does Bazel deal with different p	How does Bazel deal with different platforms? For example, run tests on Windows, BSD, Android, Raspberry Pi, RISCv5, or even custom hardware?	qznc	8.810067	9.167412	comment	4.0	10.5	1617824366	13.667344
27010518	I’ve always found that the biggest i	I’ve always found that the biggest issue with monorepos is the build tooling. I can’t get my head around Bazel and other Blaze derivatives enough to extend them to support any interesting case, and Nix has too many usability issues to use productively (and I’v	throwaway894345	8.647735	9.001252	comment	4.0	15.0	1619908673	13.824677
27181988	I have been working with Bazel in my	I have been working with Bazel in my personal monorepo (~6 months now), and the fact that Justine, someone I believe knows Bazel/Blaze well, uses GNU Make, makes me re-think my decision: perhaps I should re-consider it. I have quite a few issues with Bazel, wh	motiejus	8.807568	9.163023	comment	4.0	16.0	1621247704	13.682551
12737307	Then maybe you can answer a few ques	Then maybe you can answer a few questions:- Do you have zero external dependencies on 3rd party library not own by Google? These must still be managed anyway? How do you deal with project X is not ready to move to external library version N but project Y needs	pierrebai	8.632848	8.989583	comment	4.0	11.5	1476815438	-9.282005
13598968	> Git is more pleasant when you brea	> Git is more pleasant when you break your codebase into isolated components. These can be pretty large—the Linux kernel has 16 million lines of code—but if your codebase is many times larger than a complete modern kernel, you might want to split it.As part of	izacus	8.623487	8.9969225	comment	4.0	12.5	1486567907	-11.967117
27844640	From the title I expected it to be a	From the title I expected it to be a tool for treating multiple separate repos as though they were all just one single monorepo. But from the description in the README, it seems to be for treating subsets of a monorepo as though they were separate repositories	codetrotter	8.632069	8.991403	comment	4.0	21.0	1626356825	13.846626
27845593	What are these tools designed for mo	What are these tools designed for monorepos and sub trees?	endisneigh	8.634915	8.9794655	comment	4.0	12.0	1626361517	13.844571
27904772	The advantage of a monorepo in this 	The advantage of a monorepo in this particular case is that it makes easy things easy: if you want to remove a parameter of a function in some library and that function has just a few callers in dependent executables, you can just do that in a single commit. W	bla3	8.63285	8.990376	comment	4.0	25.5	1626866210	13.8474655
35471168	Hrmm, it makes performance claims wi	Hrmm, it makes performance claims with regard to Buck1 but not to Bazel, the obvious alternative. Hardly anyone uses Buck1 so you'd think it would be relevant.	jeffbee	8.809692	9.168995	comment	4.0	13.0	1680800263	13.655998
35472263	The fact that Buck2 is written in a 	"The fact that Buck2 is written in a statically-compilable language is compelling, compared to Bazel and others. It's also great that Windows appears to be supported out of the box [1,1a] -- and even tested in CI. I'm curious how much ""real world"" usage it's go"	ihnorton	8.808458	9.163339	comment	4.0	11.0	1680805144	13.560951
19851830	my own anicdata:  Integrate a defaul	"my own anicdata:  Integrate a default proxy into our existing ""choose proxy"" workflow takes about 2 weeks, and I'm currently on my 3rd month of those 2 weeks :)Reasons for the delay:1) Proxy is a stand-alone application.  Needs it's own deployment and build co"	novaleaf	8.632356	8.989326	comment	4.0	19.5	1557251790	13.865008
15889912	I have two main concerns when I see 	"I have two main concerns when I see monorepos being used.First, like in other areas, I see companies that want to ""google 
scale"" and blindly copy the idea of monorepos but without the requisite tooling teams or cloud computing background / infrastructure that"	epage	8.632267	8.989893	comment	4.0	12.5	1512880059	13.848222
15890819	Software A version 1 consumes format	Software A version 1 consumes format F1 and produces format G1 data, and software B version 1 consumes format G1 and produces H1.To upgrade format G2 we must change both software A and B.First, software B version 2 must accept both G1 and G2. To do this we may	geocar	8.63222	8.990853	comment	4.0	14.0	1512901956	13.850252
18164031	I call this: Headline Driven Develop	I call this: Headline Driven DevelopmentAnother good example are monorepos. A decision maker sees a headline about Google and Facebook using monorepos and mandates his company to switch. Unfortunately, he or she didn't read or didn't understand the actual arti	latch	8.635709	8.976865	comment	4.0	13.0	1538970969	13.825029
18537647	I'd like to hear the logical conclus	"I'd like to hear the logical conclusion of ""Large Modules Considered Harmful."" Is he implying infrastructure code (e.g., terraform or ansible or cloud formation) should be split between the repositories for each component? Or just saying, ""be smart about how y"	Boxxed	8.628255	8.989935	comment	4.0	10.5	1543273292	13.8404665
18738853	I've used bazel pretty extensively a	I've used bazel pretty extensively and I have to say it's not fully baked unless you're using it the way Google does internally (vendor all dependencies) and you're using a language Google does internally.Additionally, it wants to take over your entire build p	habitue	8.808945	9.167689	comment	4.0	12.0	1545451750	13.671806
18809702	I wish this had touched on polyrepos	I wish this had touched on polyrepos' ability to pin known-good versions of dependencies; that tends to be the Achilles' heel of monorepos.	erik_seaberg	8.633337	8.991026	comment	4.0	13.0	1546459954	13.845091
18809904	Alternate title: monorepos - ideal f	Alternate title: monorepos - ideal for teams under 100 devs	pbiggar	8.634979	8.991208	comment	4.0	16.0	1546461210	13.886989
18813682	My rule of thumb is: if you need to 	My rule of thumb is: if you need to do PRs in several repositories to do one features, you should probably merge the repositories. At work, we have code spread among a bunch of repositories, and having to link to the 2/3 related PRs in other repos is a major P	forty	8.63029	8.957512	comment	4.0	29.5	1546504449	13.731884
18812069	I’ve found monorepos to be extremely	I’ve found monorepos to be extremely valuable in an immature, high-churn codebase.Need to change a function signature or interface? Cool, global find & replace.At some point monorepos outgrow their usefulness. The sheer amount of files in something that’s 10K+	olingern	8.632782	8.990499	comment	4.0	11.5	1546479272	13.85186
18820699	the fact that essentially 100% of bi	the fact that essentially 100% of big tech companies use monorepos seems like evidence that it is at least possible to do it in a scalable way...	thurn	8.633701	8.991157	comment	4.0	11.5	1546560280	13.840988
18820755	"""Shared responsbility"" is one of tho"	"""Shared responsbility"" is one of those ideas that sounds good on paper, but doesn't really scale terribly well in the real world.  As the old saying goes ""when everybody is responsible, nobody is responsible"".More to the point, as the author of TFA allows, onc"	mindcrime	8.634099	8.981987	comment	4.0	11.0	1546560898	-11.837103
18825031	So, the thing that is still buzzing 	So, the thing that is still buzzing in my head now and not mentioned in the article (maybe I didn't read carefully enough), what actually gets released into prod after a change is reviewed and merged.If the monorep contains let's say five different products an	stillworks	8.632568	8.990432	comment	4.0	10.5	1546618286	13.855766
18856980	Whenever I hear smart and reasonable	Whenever I hear smart and reasonable people argue well for both sides of an engineering issue, my experience is that it will turn out that we're arguing the wrong question.  The perspective is wrong.  We can't get past thinking in terms of our old terminology.	ken	8.631536	8.988695	comment	4.0	12.0	1546966172	13.85143
29719417	I second Bazel. People keep on menti	I second Bazel. People keep on mentioning how steep the learning curve is, but   the conceptual model is really simple, elegant, and intuitive.What is steep is the technical know-hows:1. When things don't work as expected. For example, while it worked flawless	lolski	8.808168	9.1672735	comment	4.0	15.5	1640732814	13.669268
29993555	Out of curiosity, why the hate for g	"Out of curiosity, why the hate for git submodules? They've worked really well for me over the years. They solve the problem of ""pin a specific version of some external 3rd-party repo"" really nicely.The only complaint I have is that the git-submodule CLI has un"	nrclark	8.618174	9.002004	comment	4.0	16.5	1642600016	-11.992166
16364285	> With a monorepo, projects can be o	> With a monorepo, projects can be organized and grouped together in whatever way you find to be most logically consistent, and not just because your version control system forces you to organize things in a particular way. Using a single repo also reduces ove	tzs	8.629837	8.992558	comment	4.0	13.0	1518488954	13.846861
17267192	My startup's monorepo has 2 root com	My startup's monorepo has 2 root commits as well. When the company was first starting out, my co-founder and I created independent git repos. I was writing OCR type research-y code and he was doing more traditional CRUD REST webserver things.When it came time 	rraval	8.631663	8.990757	comment	4.0	14.0	1528476142	13.850457
22993940	In the last few years, I saw a lot o	In the last few years, I saw a lot of people using monorepos, and discouraging using submodules.Frankly, I don't know why. For small projects, sure - it it an overhead. For anything larger, I find it useful to encapsulate things - be it installable packages, o	stared	8.627571	8.994678	comment	4.0	16.0	1587975435	-11.971133
22994018	Once your code grows and you end up 	Once your code grows and you end up with too many repos you'll be yearning to get back to monorepos. It allows to make changes in one go instead of having 3-4 PRs that all have to be merged at same time or otherwise the build breaks.Having separate repos only 	edwintorok	8.631994	8.989346	comment	4.0	13.0	1587976381	13.856293
22994133	Because it turns out big corporation	Because it turns out big corporations that use multirepos tend to be even less efficient (about versioning) than those that use monorepos.What are those far simpler, better, more open alternatives?	beagle3	8.633296	8.990221	comment	4.0	17.0	1587977793	13.84395
22994600	In git I fully agree, and I wonder w	In git I fully agree, and I wonder which company successfully runs a monorepo in git.For me, I prefer git submodules, which seem to have the benefit of both monorepo and separate repo's.	koonsolo	8.630498	8.993548	comment	4.0	16.0	1587983980	13.863323
23283543	Boy look at that architecture diagra	Boy look at that architecture diagram, I'm going in the opposite direction. A mono repo that compiles to one single binary that does everything. Sort of like how an fertilised egg divides and each cell finds its place in the organism. A self organising archite	wrnr	8.631777	8.990791	comment	4.0	12.5	1590246550	13.833932
25536257	Git submodules just don't seem to wo	Git submodules just don't seem to work in practice, and that could be a big chance for a competing scm to overtake git. Having dependency management inline with scm would allow for more simplicity in the overall process.	seanalltogether	8.617091	9.005293	comment	4.0	21.5	1608901801	-0.11026541
26165111	IME submodules are mostly fine for e	IME submodules are mostly fine for external dependencies that only very rarely change and remain pinned at a specific version over weeks or months.Giving submodules a special set of git commands, and providing the users so many easy opportunities to shoot them	flohofwoe	8.617114	9.005114	comment	4.0	14.5	1613560188	-12.007615
26165151	I've found that git subtrees are a m	I've found that git subtrees are a much better option. Good intro here:https://www.atlassian.com/git/tutorials/git-subtreeThey're like submodules, but you can edit them and they're embedded in your history, not just a reference.	wheybags	8.616933	9.001222	comment	4.0	13.0	1613560519	-11.946993
36975565	There are no true monorepo companies	There are no true monorepo companies	fosterfriends	8.633664	8.985039	story	4.0	12.0	1691003309	13.836963
37121763	DISCLAIMER 1: Current Googler here, 	DISCLAIMER 1: Current Googler here, but opinions are my own.DISCLAIMER 2: I think from a hands-on-keyboard SWE there is a lot of useful stuff. What you mentioned about Google culture of killing products and such I am not gonna talk about.I recommend chapters a	marcyb5st	8.633054	8.987947	comment	4.0	13.5	1692024996	13.845538
24618220	You don't have to build from scratch	You don't have to build from scratch if you have high confidence that an incremental build is correct. You get this from modern build systems like Bazel.	klodolph	8.805248	9.157574	comment	4.0	13.5	1601309578	13.681862
24925816	While Bazel design seems not bad, co	While Bazel design seems not bad, could they have used a build system that doesn't require Java? It's especially important for bootstrapping. CMake requires only C++ at least.	xvilka	8.8105955	9.168265	comment	4.0	29.0	1603931782	13.668634
24925876	In practice, this isn't generally no	In practice, this isn't generally noticeable. Bazel is pretty damn fast, and even ships with its own JVM so installing it is pretty much painless.I agree on the bootstrapping issues resulting from that, though.	q3k	8.8086405	9.169001	comment	4.0	25.0	1603932380	13.652909
25218175	Can I ask a monorepo question: what 	Can I ask a monorepo question: what do you when you’re trying to upgrade dependency XYZ, and a moderate or large refactor is required in another team’s code?	dannyw	8.632911	8.990873	comment	4.0	11.5	1606380795	13.859614
38876170	Honestly Bazel and Java is actually 	Honestly Bazel and Java is actually a really nice experience. Pull in third party stuff from https://github.com/bazelbuild/rules_jvm_external. There is built in support for uber jar builds by adding a _deploy.jar suffix to binary jars. Protobuf and other codeg	rockwotj	8.811723	9.170936	comment	4.0	11.0	1704434222	13.683801
39052528	> Code at Google3 is one giant monol	> Code at Google3 is one giant monolithI’ve heard this stated before, and something about it feels off. There’s no way all of Google’s code is in one repo.Like, does that monorepo contain the full Android operating system with Google Services and the firmware 	Uehreka	8.634405	8.9832535	comment	4.0	11.0	1705648753	13.847179
15486837	Ask HN: How do you build your Golang	Ask HN: How do you build your Golang based repo ?	naanandtech	8.8084955	9.164561	story	4.0	3.0	1508189947	13.687767
15724961	Are there advantages to using a mono	Are there advantages to using a monorepo rather than having a proper package manager? Seems like the problems they're trying to solve would be better solved by not insisting on using a monorepo.	philipov	8.633802	8.99107	comment	4.0	14.5	1510945394	13.8445015
15726144	IMHO it is a major failure that git 	IMHO it is a major failure that git doesn’t scale for org-wide mono repos. Software development process should not be dictated by limitations in the VCS. It surprises me that others are so willing to settle.	perfmode	8.630687	8.985934	comment	4.0	20.5	1510954417	13.841187
17548154	Well, Google has succesfully defende	Well, Google has succesfully defended their monorepo approach on multiple occasions.So, before dissing this approach as 'non-SV-canon', read Google's [1] and Twitters [2] accounts on why they do what they do.[1] Why Google Stores Billions of Lines of Code in a	edejong	8.632582	8.9881	comment	4.0	13.0	1531815605	13.848111
17606933	Same line of thinking, just differen	Same line of thinking, just different conclusions.I feel terrible for anyone trying to run a company with open-source style independent repos. On a popular github project, you have MANY potential contributors that will tell you if a PR, or a release candidate 	wirrbel	8.632496	8.99088	comment	4.0	11.5	1532493390	-13.728402
17606573	"Both monorepo or ""micro repo"" end up"	"Both monorepo or ""micro repo"" end up falling apart at scale without some devops work involved. Either will work if you only have a few dozen projects. Neither will work once you hit 10s of millions of lines of code.But people seem to forget that it wasn't that"	shados	8.631772	8.988651	comment	4.0	13.5	1532486641	13.845897
17607121	"I call this ""Google Imposter Syndrom"	"I call this ""Google Imposter Syndrome"". Because Google (insert Facebook, Apple, Amazon, etc) has success with Monorepos (insert gRPC, Go, Kubernetes, React/Native, etc), it must be a great idea, we should do it. You see this everywhere. Also known as an Appeal"	013a	8.63256	8.989777	comment	4.0	10.5	1532497448	13.838902
21234677	The main driver of success in either	The main driver of success in either model is in the tooling and practices invested in it to make it work in an organization. Google is successful with their monorepo because they have invested in building (blaze), source control (piper, code search), and comm	Cedricgc	8.633492	8.988855	comment	4.0	17.5	1570900801	13.840714
21352739	You should definitely take a look at	You should definitely take a look at bazel. This is not say bazel is better than the one you wrote but cleary bazel is becoming a industry standard making other build tools obsolete.	troysand	8.808971	9.168462	comment	4.0	13.5	1571989251	13.674619
21389206	Hermetic declarative build systems l	Hermetic declarative build systems like Bazel feel exactly like sound statically typed languages to me. It's really hard to get all of your dependencies precisely specified declaratively. The urge to hack in a little imperative code or jam in a build step that	munificent	8.809058	9.159061	comment	4.0	40.0	1572367584	13.66441
21607323	> Counter-argument: Just let it sit 	"> Counter-argument: Just let it sit there and keep working? Outside of security patches, if there even are any, there's always the option of ""just stop touching it.""That's not exactly possible with a monorepo that has no branches and everything has to be maint"	q3k	8.633407	8.989796	comment	4.0	21.5	1574441481	13.846197
39219407	Show HN: Makex Automation Tool	Show HN: Makex Automation Tool	nateskulic	8.809175	9.164226	story	4.0	4.0	1706812259	13.697467
32831169	Bazel is a fully reproducible and he	Bazel is a fully reproducible and hermetic build system. A lot of painstaking work goes into it producing the exact same artifacts build after build. And that provides some interesting properties that you can leverage for artifact caching, deployments, and CIC	jsw	8.79607	9.147644	comment	4.0	24.0	1663109324	13.682558
31792691	Git submodules aren't bad in that th	Git submodules aren't bad in that they're buggy, they do what the documentation suggests.I think they're difficult to use, because it breaks my mental model of how I expect a repository to work. It creates a new level of abstraction for figuring out how everyt	d_watt	8.618638	9.000611	comment	4.0	12.5	1655578611	-11.973966
31792728	Beyond how hard to use they may or m	Beyond how hard to use they may or may not be, my personal hatred of git submodules is about bypassing your normal dependency management system. See 12 Factors on Dependencies[1].I've not seen many uses of submodules that weren't better served by adding the pa	FrenchyJiby	8.617094	9.004732	comment	4.0	12.5	1655578913	-12.014587
31793805	There are git options for managing t	"There are git options for managing these difficulties like:git config --global submodule.recurse truehttps://git-scm.com/book/en/v2/Git-Tools-Submodules search for ""git config"""	agilob	8.617543	9.003315	comment	4.0	13.5	1655586229	-12.012099
31882822	Well, it's not that easy. Let's say 	Well, it's not that easy. Let's say you have this layout :- applications: front, backend, background-worker- libs: database-ormIn a multi-repo layout, if you want to make a change in database-orm, you'll make your PR in its repo, test, and make a release with 	ZeKK14	8.632581	8.990432	comment	4.0	15.0	1656241531	13.847577
31883226	> Alternatively don't use monoreposA	> Alternatively don't use monoreposAnd now you get into the fun situation of having to handle ecosystemic asynchronous updates between your multiple repositories.	masklinn	8.632534	8.990107	comment	4.0	18.5	1656245372	13.826501
39439788	I was skeptical of your claims about	I was skeptical of your claims about building it so I went ahead and downloaded skia and built it myself. It was simple and on my 4 year old desktop (8 cores) it took under a minute to compile skia after it had downloaded its dependencies. All I did was run 2 	charcircuit	8.807897	9.163867	comment	4.0	11.0	1708426302	13.699428
39636236	Ctrl+F 'Sapling'Ctrl+F 'Eden'Yeah th	Ctrl+F 'Sapling'Ctrl+F 'Eden'Yeah the author of this doesn't really know what's going on with regards to source control at Facebook/Meta.Meta doesn't actually use Mercurial and hasn't for several years now. They basically wrote their own custom centralized ver	sneed_chucker	8.630345	8.969517	comment	4.0	11.0	1709856924	-11.923609
32294850	I'd be interested to know why projec	I'd be interested to know why projects like this don't make use of git submodules. They take some getting used to but once understood seem to do a reasonable job of multi-repository projects to me.	zmmmmm	8.618825	9.002626	comment	4.0	12.0	1659266984	-12.055006
22021014	Monorepos are cool but I hate perfor	Monorepos are cool but I hate perforce with a passion.  How can we use git?A lot of work is going into making git scale better which is nice but there will always be small open source repos. You could mirror them but it seems like it would be nice to not have 	jayd16	8.631743	8.987737	comment	4.0	15.5	1578763335	13.834747
23834879	Bazel is fucking awful. Most miserab	Bazel is fucking awful. Most miserable years of my career is when I was tasked with maintaining a build system based on it. Same for gRPC, which TFA also does a good job of shutting down.Google doesn't get credit for Go, Bell Labs does.	ddevault	8.810436	9.166831	comment	4.0	11.5	1594747479	-10.40743
23884079	I'm no blaze/bazel expert (hopefully	"I'm no blaze/bazel expert (hopefully someone will add their own thoughts), but:    1. build graphs are trees/acyclic : bazel enforces this, no cyclic dependencies allowed
    2. Compilers will always modify the timestamps on every file they are expected to out"	sabujp	8.809169	9.166177	comment	4.0	11.5	1595100419	13.677457
23884588	For some historical perspective, con	For some historical perspective, consider this. When Tomboy was new, people complained about its ‘bloat’. Why? Because it’s ‘unnecessarily’ written in .NET, and Mono was a ‘huge and bloated’ dependency.	FooBarWidget	8.634595	8.98197	comment	4.0	11.5	1595104271	-9.195078
24110531	This would be insanity in a mono rep	This would be insanity in a mono repo. A developer would have to look over every PR to make sure some critter from the marketing department didn't accidentally change an important bit of code.	scoopertrooper	8.632472	8.989805	comment	4.0	10.5	1597074434	-11.832982
20567484	Does anybody know some monorepo horr	Does anybody know some monorepo horror stories?I have heard plenty of people complain about their many-repo structure and wishing for a monorepo. I would like to hear some concrete  story where a monorepo went wrong. This article is just abstract opinion.	qznc	8.632873	8.989849	comment	4.0	14.5	1564509966	13.837576
20637020	Would have hoped they would use baze	"Would have hoped they would use bazel instead.
It's open-source, and so much easier to deal with than CMake."	halflings	8.816124	9.163166	comment	4.0	15.5	1565199987	13.661495
13806854	I'd give this a look: https://github	I'd give this a look: https://github.com/GoogleCloudPlatform/cloud-builders/tree/m... (unfortunately key links to Bazel docs are 404'ing.)Bazel is a general purpose build system that focuses on reproducibility (same build inputs -> same build outputs) and stri	jacobparker	8.806235	9.158197	comment	4.0	10.5	1488841000	13.687077
14411905	How does a mono-repo company manage 	"How does a mono-repo company manage open sourcing a single part of their infrastructure if things are in one large repo? 
For example, if everything lived in one repo, how does Facebook manage open sourcing React?
Or if I personally wanted to switch to one pri"	jonathanpoulter	8.632502	8.9906025	comment	4.0	10.5	1495647830	13.847195
30946524	That's factually untrue. Google, Mic	That's factually untrue. Google, Microsoft, Facebook, Twitter, Airbnb all have a huge monorepo. Splitting it out is obviously not necessary with the right tools.	exitheone	8.6333685	8.986729	comment	4.0	11.0	1649348186	13.85549
30946690	One upside of smaller repos that I r	One upside of smaller repos that I rarely hear about is that it forces you to think about versioning. If you have a monorepo, you often don't version individual components, you just have master that always builds. If your product is a user facing website, that	captainmuon	8.632619	8.98748	comment	4.0	14.0	1649348781	13.847845
31762821	I feel like I've read about several 	I feel like I've read about several big companies using monorepos, but I've never understood why. It feels like the source-control equivalent of writing your code in one big file.Does anyone have any good resources for why and how best to implement a monorepo?	barbs	8.63298	8.990737	comment	4.0	12.0	1655358746	13.844747
31762947	One of the benefits of monorepo is r	One of the benefits of monorepo is refactoring. You can just apply a renaming command across all of the files in the solution and all the related names are properly updated.Not that easy to get this to work on multiple repos.	nsoonhui	8.632332	8.991006	comment	4.0	19.0	1655360227	13.844356
29190743	I'm glad you're having a good experi	I'm glad you're having a good experience now, and git as a monorepo will work fine at smaller scales, but you will outgrow it at some point.When you do, you have two choices.  You can either commit to the monorepo direction and start using non-standard tooling	anon9001	8.631455	8.989595	comment	4.0	17.0	1636652601	13.8473425
34361613	My 2 cents: monorepos try to solve w	My 2 cents: monorepos try to solve what is actually a series of devops problems, by essentially abusing the way an organization or individual uses git (or VCS of your choice). These tools that were never designed for devops in the first place.To elaborate: I t	fullstackchris	8.625156	8.978474	comment	4.0	11.0	1673565306	13.830833
34362129	Could it be that submodules are unde	Could it be that submodules are underused?	solarkraft	8.620163	9.002168	comment	4.0	14.0	1673568228	-12.003826
34364770	I strongly prefer the simplicity of 	I strongly prefer the simplicity of a monorepo, but I once worked on a project that used three repos, and kept them in sync by having IntelliJ keep the branches in sync. Make a new branch, and you make it in all three branches simultaneously. Switch branch, an	mcv	8.631922	8.989498	comment	4.0	11.0	1673593441	13.847968
34768936	Effort to update something is high b	Effort to update something is high because there's a lot of code, not because it's in a monorepo.  Updating the same code scattered across multiple repositories takes as much work in the best case.  More realistically, some copy of the same code will stay unup	yongjik	8.632906	8.989332	comment	4.0	20.0	1676250151	13.849948
34768415	> There's no requirement to have sin	> There's no requirement to have single versions of dependencies in a monorepo. Google allows[0] multiple versions of third-party dependencies such as jQuery or MySQL, and internal code is expected to specify which version it depends on.Sure, but this is unsus	lopkeny12ko	8.632599	8.989981	comment	4.0	17.5	1676245277	13.84732
34885962	Bazel has a heavy focus on correctne	Bazel has a heavy focus on correctness (pretty much to the exclusion of everything else). Where does Moon fall on the correctness gradient? Does it enforce hermecity or deterministic builds or give me tools to accomplish it?In the same vein as those questions 	jpgvm	8.809131	9.166768	comment	4.0	18.0	1677008626	13.674383
34886598	IMHO, if you're targeting the Javasc	IMHO, if you're targeting the Javascript ecosystem, this area is already fairly crowded, with Turborepo, Nx and various open source tools providing various degrees of functionality (Bazel, Pants, Lerna, etc) already competing in the space.I'm a tech lead for t	lhorie	8.637122	8.983557	comment	4.0	18.5	1677011140	-9.466973
34892347	I think it's hilarious to say bazel 	I think it's hilarious to say bazel focuses on correctness when it doesn't ship with any hermetic toolchains by default. Properly setting up hermetic toolchains is poorly documented and left as an exercise to the reader.I say this as someone who wants to love 	hamandcheese	8.810108	9.168066	comment	4.0	13.0	1677047279	13.669872
35007822	The fact some developers hate them i	The fact some developers hate them is reason alone to never use them. Using them means you don't care about developer productivity.You will incur thousands or tens of thousands of dollars in additional costs by using submodules, via wasted developer time.	0xy	8.621866	9.000445	comment	4.0	11.0	1677838809	-11.990192
35008240	For avoidance of confusion, a submod	For avoidance of confusion, a submodule is just:- committing a commit hash from a foreign repository in a text file (.gitmodules), along with- some convenience tooling to check out that repository's tree at that commit in a subdirectory.It is useful exactly wh	juped	8.618164	9.003995	comment	4.0	16.0	1677843296	-11.997234
35008399	>  This is basically never a good id	>  This is basically never a good ideaI find this to be one of the most useful features of git submodules. I can easily just cd into the module and do whatever related work I need to do there and then commit to both projects when I'm ready.	michaelmior	8.616643	9.005506	comment	4.0	12.0	1677844830	-12.004953
17354558	That repo encourages mindless microo	That repo encourages mindless microoptimization. Don't waste your time worrying how to iterate a slice. Most of the time it makes no difference.	lmb	8.635022	8.960659	comment	5.0	12.5	1529496404	-11.917713
17606028	But what are the alternatives to the	But what are the alternatives to the monorepo in git?All the ways of splitting code up and deploying multiple git repos for one project seem terrible.	acomjean	8.631217	8.991443	comment	5.0	27.5	1532478454	13.844647
17606236	We moved to a monorepo about 2 years	We moved to a monorepo about 2 years ago and it has been nothing but success for us.We have quite a few projects but only 4 major applications. Maybe it is that a few of our projects intertwine a bit so making spanning changes in separate repositories was a pa	adamrt	8.631349	8.988633	comment	5.0	19.0	1532481189	-13.340588
19795967	Hmm, if you're working on a single p	Hmm, if you're working on a single product (like the author is), then of course it makes sense to stick them in the same repository. But isn't this just common sense?I mean, if you have a single product split over many repositories then you will run into the i	royjacobs	8.631397	8.967575	comment	5.0	17.0	1556707964	13.814792
19796416	These benefits do exist, but drawbac	"These benefits do exist, but drawbacks still exist too. The ""constantly updating, constantly recompiling"" problem can get pretty bad when there are many developers. Developers either lose time recompiling more than they should need to, or keep working in out-o"	notacoward	8.632506	8.990885	comment	5.0	24.5	1556713481	13.848713
33602655	I'm going to channel the efficient m	I'm going to channel the efficient market hypothesis (I apologize) here and say that people have done that cost comparison and not one of them bought mainframes. Heck, Google ported their entire monorepo to Power but not to z.	wmf	8.6389065	8.968554	comment	5.0	16.0	1668467085	13.833037
35475149	I'm missing some historical context 	I'm missing some historical context here. This article goes out of its way to compare and contrast with Bazel. Even the usage conventions, build syntax (Starlark), and RBE API are the same as in Bazel.Did FB fork Bazel in the early days but retain basically ev	lopkeny12ko	8.809473	9.168661	comment	5.0	14.5	1680818561	13.670778
35475542	Do smaller companies (smaller than M	Do smaller companies (smaller than Meta and Google) use these kinds of build tools much? It seems like a system that rebuilds everything whenever a dependency changes is more suited an environment that has very few, if any, external dependencies.Is anyone usin	yurodivuie	8.808439	9.157552	comment	5.0	13.0	1680821130	13.671772
27580534	Yes. Especiallygit init --submodule 	"Yes. Especiallygit init --submodule --recursiveOr is itgit submodule --init --recursive?God I hate this UX so much I usually have a ./fetch-subrepos.sh that runs a bunch of ""git clone"" commands.And if I push without first pulling, must it always punish me with"	dheera	8.617087	9.005115	comment	5.0	27.5	1624291626	-12.041102
27763039	Having hundreds of developers work o	Having hundreds of developers work on the same code repository seems insanely complicated. What are the advantages? Where can I read more about monorepos?	prionassembly	8.631766	8.992763	comment	5.0	16.5	1625675881	13.841273
27788880	Can anyone who's familiar with Earth	Can anyone who's familiar with Earthly explain why somebody would want to use it instead of Bazel?	wikibob	8.809423	9.168841	comment	5.0	12.5	1625867059	-4.5274634
27789260	I can imagine a big company with a m	I can imagine a big company with a monorepo (i.e. Google) reaching that number in a few years.	988747	8.640415	8.967201	comment	5.0	19.5	1625869966	2.8363185
27789316	Generously, there are about 40,000 p	Generously, there are about 40,000 people at Google who might commit to the monorepo. That's only 6,000 or so commits per person, a fairly achievable number. Although since they're not purposely generating every shorthash, it would take significantly longer fo	whatshisface	8.632553	8.988439	comment	5.0	15.5	1625870367	13.8455105
27845135	disclaimer: I haven't seen for mysel	disclaimer: I haven't seen for myself what benefits monorepos actually provide so I don't fully grok them.This is the kind of talk about monorepos that makes me think they are a bad idea. Why would someone want to maintain a monorepo and then pretend it's not 	Jenk	8.633878	8.991444	comment	5.0	16.5	1626359251	13.848798
27846281	IANAMU (I Am Not A Monorepo User), b	IANAMU (I Am Not A Monorepo User), but as far as I understand monorepos and their advantages, I'm not sure what the use-case for this tooling is.Most of the time, when an org chooses to move to having a monorepo (rather than just being left with one by acciden	derefr	8.63228	8.991311	comment	5.0	23.0	1626365052	13.846088
22787599	Bazel uses a subset of Python for de	Bazel uses a subset of Python for describing build rulesBazel's configuration language is called Starlark[0] (used to be Skylark). It's not a strict subset of Python. It has implementations in Java[1] and Go[2]. I haven't had a chance to use it yet, but it see	conroy	8.810081	9.167057	comment	5.0	15.0	1586113052	13.674719
23181077	The article says that monorepos are 	"The article says that monorepos are more efficient but also that ""As the monorepo grew, the build target list increased to a point where it became too long to pass it through Bazel’s command line interface."".Monorepos are not efficient. They are easier to mana"	agounaris	8.648321	9.004416	comment	5.0	14.5	1589471921	13.843209
26480883	Semi-related: when people talk about	Semi-related: when people talk about monorepos, is it implied that all the project has only one version number? Why not just version subprojects of the monorepo, that way you have a small vetting process when cutting a release of a specific subproject. The res	lalos	8.63276	8.991231	comment	5.0	13.0	1615919448	13.851394
26614650	What do people think of git subtrees	What do people think of git subtrees?https://codewinsarguments.co/2016/05/01/git-submodules-vs-gi...Or the non-standard git-subrepo?https://github.com/ingydotnet/git-subrepo	skyfaller	8.61778	9.003468	comment	5.0	15.5	1616966041	-12.005685
26614824	I've been the git fixer for a few di	I've been the git fixer for a few different teams. I want to like submodules, but there's something that doesn't fit my brain the way the rest of git does. It feels half-baked. I think we're still missing the best way to model the problem as a tree of related 	erik_seaberg	8.617394	9.003652	comment	5.0	13.5	1616967098	-11.984735
27009109	Very well written post and upstream 	Very well written post and upstream work is always appreciated.I also really like monorepos, but Git and GitHub really don't work well at all for them.On the Git side there is no way to clone only parts of a repo or to limit access by user. All the Git tooling	the_duke	8.63257	8.989323	comment	5.0	22.5	1619897524	13.84302
27229019	I'm in a devops role where we actual	I'm in a devops role where we actually reroll the Tensorflow whl in-house (to get a few tweaks like specific AVX flags turned on), but because the rest of our deployment is apt/debs, we then turn around and wrap that whl in a deb using Spotify's excellent dh-v	mikepurvis	8.810304	9.167539	comment	5.0	15.5	1621555501	13.681223
14976140	Especially in a world where GVFS is 	Especially in a world where GVFS is a thing (not quite yet), I fail to see the advantage of a monotree over a monorepo with lots of branches and scripting around a MAINTAINERS file.What's wrong with branches and folders? Why are upstream repositories needed? (	rattray	8.631922	8.989047	comment	5.0	14.5	1502336446	13.840919
28940487	Like versioning services, deployment	Like versioning services, deployment of the code base, breaking out new microservices, transitioning to any container based deployment solution. Monorepos aren’t just a nightmare for release management, they’re a nightmare for any sort of single responsibility	randmeerkat	8.6325445	8.989369	comment	5.0	19.0	1634792484	-13.762663
28940384	You lost me at monorepo. That might 	You lost me at monorepo. That might work at a very small scale, but past that monorepos create more problems than they solve.	randmeerkat	8.632355	8.987874	comment	5.0	24.0	1634791647	13.845218
23432138	How do you achieve this technically?	How do you achieve this technically? Monorepo would be a pain to break.Or just break up Google into two but let both of them keep the access to the same repo? Then what would this achieve?	kediz	8.632369	8.989345	comment	5.0	13.5	1591382161	13.848876
30946127	Any suggestions for how to go from m	Any suggestions for how to go from multiple Git repos to a monorepo? Preserving history would be really nice. I've looked at submodules and subtrees and both seem to have huge downsides and don't deliver the same benefits of a true monorepo.	liminal	8.631934	8.990432	comment	5.0	13.5	1649346564	13.843467
30946614	I know some of the FAANGs do monorep	I know some of the FAANGs do monorepo (Google being the biggest) but AWS does not.A monorepo is an organizational mess when trying to manage and transfer ownership across thousands of teams, contain the blast radius of changes, unless you invest a ton of resou	oceanplexian	8.632367	8.989187	comment	5.0	20.5	1649348533	13.845977
30946741	Honestly I would 100% do a monorepo 	Honestly I would 100% do a monorepo every single time if there was good tooling for incrementally building and testing libraries. Having to rebuild every image from scratch for every single change scales miserably. Things like Bazel exist, but you basically ha	throwaway894345	8.675834	9.028315	comment	5.0	16.5	1649348981	13.794307
30959291	Well done and congrats to the Turbor	Well done and congrats to the Turborepo team on the launch as well as the Vercel merger, which I think is a great thing for the JS ecosystem!We now have a healthy competition between several JS domain-specific build tools bit.dev, Nx, Turborepo, and Rush. This	steven-xu	8.652387	8.988473	comment	5.0	19.0	1649435784	13.7941675
31260124	I generally agree, but two things I'	I generally agree, but two things I'd like to point out.If you're using python for the web you're already part of the complexity problem, atleast from the perspective of someone deploying php 15 years ago.  I use python for web development, and I love it, but 	dec0dedab0de	8.632756	8.989236	comment	5.0	23.5	1651671200	-13.808488
31598163	Surprised you haven't heard of or us	Surprised you haven't heard of or used lerna (with yarn workspaces), which is the defacto monorepo setup in JS world. I use it to maintain a bunch of monorepos and works pretty flawlessly.	halfmatthalfcat	8.633759	8.990812	comment	5.0	15.5	1654191909	13.841732
34767675	Monorepos are great... but only if y	"Monorepos are great... but only if you can invest in the tooling scale to handle them, and most companies can't invest in that like Google can.  Hyrum Wright class tooling experts don't grow on trees.A good article to reference when this topic gets raised: 
ht"	zdw	8.633537	8.986268	comment	5.0	16.5	1676240009	13.84396
34887152	Nx is hot garbage imo. Buggy, overly	Nx is hot garbage imo. Buggy, overly verbose, inflexible, poorly documented, and I'm dubious about their peer review process.If I don't need build caching I'm not using any tool but PNPM and its workspace toolset - that's literally all most people need for a m	andrew_	8.634541	8.985666	comment	5.0	13.0	1677013049	13.8308325
16364164	The catch is the tooling.  If you ha	The catch is the tooling.  If you have the time and resources to make the tooling that is necessary to make it work specifically for your org, than great!But if you don't, then a monorepo will generally slow you down because it will require coordinating change	jedberg	8.63285	8.987454	comment	5.0	20.0	1518487210	-13.805918
16565299	Mononoke – A Mercurial source contro	Mononoke – A Mercurial source control server designed to support large monorepos	gfortaine	8.630529	8.991534	story	5.0	106.0	1520811088	13.887165
21214871	Isn’t Bazel jre based? I don’t think	Isn’t Bazel jre based? I don’t think that something like Qt will ever go for a build tool that requires the whole java runtime as a dependency.(Also, cmake has become the de facto solution for open source libraries, not sure why they would select something els	dgellow	8.8123	9.165395	comment	5.0	22.0	1570717620	13.664899
21234785	Monorepo shortcomings 1 and 2 seem l	Monorepo shortcomings 1 and 2 seem like bullshit to me.  Perforce, the popular monorepo at most companies I've worked at, supports access control.  Monorepos do not prevent you from segmenting your code into modules and pushing binary/source packages into sour	01100011	8.632339	8.990026	comment	5.0	29.0	1570901677	13.8528385
21288473	Bazel is almost a standard for build	Bazel is almost a standard for build systems at this point.Did you ever use it, or at least see what a bazel build rule looks like [1] before calling it arcane?[1] https://docs.bazel.build/versions/1.0.0/tutorial/cpp.html#un...	halflings	8.808607	9.167672	comment	5.0	13.5	1571370386	13.672933
18813238	Can anyone here explain to me how a 	Can anyone here explain to me how a monorepo like Google or Facebook handles security?If I pull the repo - I have the entire contents of Google or Facebook? Is that right?Surely that lacks the normal security measures around what must be highly sensitive infor	laurencei	8.6325245	8.989126	comment	5.0	14.5	1546496161	13.848037
18813417	You can't split monorepos after the 	You can't split monorepos after the fact, at least not without immense costs. You can always just put all your small repos into a big one.	adrianN	8.63138	8.98922	comment	5.0	26.5	1546499009	13.852604
18815380	I think this article is complete hor	I think this article is complete horseshit. A monorepo will serve you 99% of the time until you hit a certain level of scale when you get to worry about whether a monorepo or a polyrepo is actually material. Most cases are never going to get there. Before that	yowlingcat	8.632713	8.989899	comment	5.0	29.0	1546526516	13.849635
18815893	I work on CI/CD systems, and that’s 	I work on CI/CD systems, and that’s one thing that definitely gets harder in a monorepo.So you made a commit.  What artifacts change as a result?  What do you need to rebuild, retest, and redeploy?  It doesn’t take a large amount of scale to make rebuilding an	thanatos_dem	8.632815	8.989991	comment	5.0	14.5	1546530151	13.845932
18824590	People who like multirepos are alway	People who like multirepos are always saying how easy it is to pin dependencies but like you I haven’t seen anyone doing it right since I left Google. The monorepo third-party system works well in practice.Ps thanks for getting scipy into third_party all those	shereadsthenews	8.63274	8.990512	comment	5.0	19.5	1546615380	13.847197
18855923	In my case, I'm struggling to find g	In my case, I'm struggling to find good tooling to support monorepos. We're running a microservice architecture, but our CI is triggered by GitHub web hooks. Currently we're either doing a full build of everything on each webhook event or we're doing some erro	weberc2	8.633694	8.990116	comment	5.0	14.5	1546959905	13.830006
24926342	Ran some benchmarking with cmake+nin	Ran some benchmarking with cmake+ninja vs these bazel BUILD files on a soyoustart GAME-2. Build from scratch...- cmake: ~2900 files @ 28:21.07 total (https://snapshot.raintank.io/dashboard/snapshot/ijkptI1dlteB...)- bazel: ~5k targets @ 23:55.13 total (https:/	gravypod	8.808553	9.162667	comment	5.0	14.0	1603937466	13.670187
24971288	My Thoughts on Monorepo	My Thoughts on Monorepo	shekhargulati	8.632317	8.988677	story	5.0	37.0	1604341499	13.847126
31955057	For Lua, just to be safe, I fork all	For Lua, just to be safe, I fork all my dependencies and when I work on a project I add those forked dependencies as git submodules. Just to feel a bit more secure any dependencies never disappear.Not sure if this is good practice.	wsc981	8.617493	9.003498	comment	5.0	16.0	1656724499	-11.9814205
32376983	One of the nice things about Bazel t	One of the nice things about Bazel that the article didn't get a chance to go into is it uses SHA hashes of files, rather than file timestamps, to determine when an artifact has changed and therefore needs to be updated. It's slightly more costly to compute ha	jart	8.807747	9.163611	comment	5.0	25.0	1659884360	13.670901
39478610	Since it uses SQLite under the hood,	Since it uses SQLite under the hood, Fossil as a version control system might be able to scale much more gracefully than git for huge monorepos. I think about this often but haven't found a way to effectively use this knowledge yet, since I haven't worked in a	hiAndrewQuinn	8.632148	8.987997	comment	6.0	18.0	1708680269	13.830619
24203915	> It's unfortunate that CMake is the	> It's unfortunate that CMake is the least bad build system we have.With caveats--I've switched to Bazel. Bazel does solve the very real, very hairy problems of compiling C++ programs for different platforms, on different platforms. It is a damn beautiful thin	klodolph	8.809092	9.165686	comment	6.0	24.5	1597782336	13.675588
19531938	Editors need to be able to support o	Editors need to be able to support our very unique way of storing code (monorepo).	ilovecaching	8.633088	8.984406	comment	6.0	17.5	1553980879	13.848476
15890440	Large-scale refactorings are actuall	Large-scale refactorings are actually pleasant.My team owns a framework and set of libraries that are widely used within the Google monorepo.  We confidently forward-update user code and prune deprecated APIs with relative ease — with benefits of doing it stag	matttproud	8.632651	8.98969	comment	6.0	29.0	1512891887	13.838034
15891299	Must have: Tooling that can interact	Must have: Tooling that can interact on a file or sub directory level. Git cannot do that.Should have: Access control to view and change file on a subdirectory basis. Everyone can see the repo so you can't permissions users per repo anymore. It's optional but 	user5994461	8.632575	8.988207	comment	6.0	21.5	1512912897	13.837356
18810604	My problem with polyrepos is that of	My problem with polyrepos is that often organizations end up splitting things too finely, and now I'm unable to make a single commit to introduce a feature because my changes have to live across several repositories. Which makes code review more annoying becau	mrgriffin	8.632939	8.988561	comment	6.0	23.5	1546465991	13.84855
18814027	Hilariously misguided.Pretty funny t	Hilariously misguided.Pretty funny to read that the things I do every day are impossible.Monorepo and tight coupling are orthogonal issues. Limits on coupling come from the build system, not from the source repository.Yes, you should assume there is a sophisti	rossjudson	8.632664	8.990103	comment	6.0	27.0	1546509642	13.848704
30635888	Monorepos are changing how teams bui	Monorepos are changing how teams build software	gk1	8.633458	8.989202	story	6.0	8.0	1646970137	13.847075
17239313	Makes sense. Google runs a mono-repo	"Makes sense. Google runs a mono-repo. Microsoft ran codeplex[2]. 
Microsoft wanted to be in Github's space but couldn't compete, so bought the space.[1]: https://cacm.acm.org/magazines/2016/7/204032-why-google-stor...[2]:https://en.wikipedia.org/wiki/CodePlex"	maerF0x0	8.633863	8.979806	comment	6.0	18.5	1528216192	-11.7672825
17504357	It seems like splitting into separat	It seems like splitting into separate repos was a rash response to low-value automated tests. If tests don't actually increase confidence in the correctness of the code they're negative value. Maybe they should have deleted or rewritten a bunch of tests instea	Floegipoky	8.632849	8.986875	comment	6.0	23.0	1531281101	13.842713
17606103	Maybe I'm not cool enough to underst	Maybe I'm not cool enough to understand this, but I don't see the draw for monorepos. Imagine if you're a tool owner, and you want to make a change that presents significant improvements for 99.9% of people, but causes significant problems for 0.1% of your use	whack	8.632856	8.990541	comment	6.0	27.0	1532479329	13.845971
21288397	My experience with using the Google-	My experience with using the Google-internal version of Bazel is that yes, you want to give up all other tools to use this.  Having a proper dependency graph makes it possible to cache maximally and accurately, and that results in fast builds.  You don't need 	jrockway	8.808055	9.166598	comment	6.0	19.0	1571369213	13.675244
21289219	One of the major time savers of baze	One of the major time savers of bazel is Remote Build Execution (RBE), which allows you to build modules in parallel in the cloud.  So if you have 1000 CPUs, you can really just have a client do `bazel build -j 1000 //...` and you can get a huge speed-up.  Rem	choppaface	8.807526	9.163751	comment	6.0	17.5	1571381632	13.679367
21616363	What do people here think of Bazel [	What do people here think of Bazel [1]? In my understanding it is an open-sourced version of the build system that Google uses internally.[1] https://bazel.build/	kinkrtyavimoodh	8.808971	9.169036	comment	6.0	19.5	1574541332	-10.282276
21626047	Git-subtrac: all your Git submodules	Git-subtrac: all your Git submodules in one place	mrzool	8.61674	9.005113	story	6.0	132.0	1574665287	-12.0451355
27906155	This is the reason for monorepos.It'	This is the reason for monorepos.It's not about migrating APIs or coordinating deployments. That's an impossible problem to solve with your repo. It's to update libraries and shared code uniformly and patch dependencies (eg. for vulns) all in one go.Imagine up	echelon	8.632457	8.990445	comment	6.0	18.0	1626875093	13.825358
12413547	So many build systems have regressed	So many build systems have regressed in that they don't have incremental process built into their core functionality, like Make did. Ant, Maven, Grunt, SBT, Gulp, Gradle...basically everything sucks at this compared to Make. Awful.But anyone interested in a ne	paulddraper	8.807342	9.153945	comment	6.0	17.5	1472829189	13.66805
35286224	One question I have after all these 	One question I have after all these articles and internal company presentations is: how exactly does Bazel track dependencies? Module A importing module B importing module C is a language-level feature, not a build system-level feature.	illiarian	8.810955	9.1681185	comment	6.0	20.0	1679644207	13.676519
28384169	Monorepos will ruin your life – but 	Monorepos will ruin your life – but they're worth it	tyson-cadenhead	8.635668	8.98331	story	6.0	64.0	1630522755	13.842312
22576236	Has anyone used Git submodules to is	Has anyone used Git submodules to isolate large binary assets into their own repos? Seems like the obvious solution to me. You already get fine-grained control over which submodules you initialize. And, unlike Git LFS, it might be something you’re already usin	derefr	8.617629	9.003048	comment	6.0	19.0	1584201620	-12.005851
34055006	What's New in Bazel 6.0	What's New in Bazel 6.0	siggi	8.80958	9.167753	story	6.0	69.0	1671471866	13.672475
26718760	Exodus: Easily migrate your JVM code	Exodus: Easily migrate your JVM code from Maven to Bazel	zdw	8.809878	9.168293	story	6.0	70.0	1617752573	13.664403
13621569	Is the practice of shoving all dispa	Is the practice of shoving all disparate pieces of proprietary software (or individual projects) in the same repo a common occurrence?  I have found that pulling unrelated changes just so that I can push my changes is an inconvenience.  Furthermore, tracking t	__strisk	8.632716	8.985567	comment	6.0	22.0	1486797716	13.826887
13865427	This looks like a clone of Google's 	This looks like a clone of Google's Blaze/Bazel: https://bazel.build/	spankalee	8.809842	9.166962	comment	6.0	17.5	1489472192	-10.291196
14411502	Really good question. Actually, spli	Really good question. Actually, splitting Windows up was the first approach we investigated. Full details here: https://www.visualstudio.com/learn/gvfs-design-history/Summary:- Complicates daily life for every engineer- Becomes hard to make cross-cutting chang	vtbassmatt	8.632389	8.978856	comment	6.0	34.5	1495645198	13.789645
30946116	It's very simple: with a monorepo yo	It's very simple: with a monorepo you always have access to everything you need, together with a ton of stuff you don't.  Whether or not this is advantageous boils down to whether the cost of not having access to something you need is greater than the cost of 	lisper	8.631666	8.983716	comment	6.0	25.5	1649346493	13.820385
31597057	What is the beneficial distinction b	What is the beneficial distinction between this and composing the monorepo with git submodules? I have been doing that in my codebase after suffering from all the regrets of attempting to emulate npm package releases of my modules. I feel that utilizing submod	blorenz	8.623669	8.998237	comment	6.0	18.5	1654187678	-11.989997
31763078	"Right, it's ""I have to send 5 PRs to"	"Right, it's ""I have to send 5 PRs to 5 different repos, get them all cross merged, and then at the end it's wrong anyways so I have to start all over"".Multirepo management is extremely frustrating compared to ""it's all in the same folder""."	rtpg	8.632015	8.987746	comment	6.0	18.0	1655361409	13.791946
31763154	They made a bad design decision 10 y	They made a bad design decision 10 years ago, have been fighting the fallout for years, and will be doing so forever and ever because things will only ever grow.They wrote a blog post on how clever they think all their workarounds are, at least one of which in	the_biot	8.633686	8.989973	comment	6.0	20.0	1655362177	13.843024
36333580	> If done in a company with a monore	> If done in a company with a monorepo I'd be especially interested in hearing moreAre there any big companies left which haven't adopted a monorepo?	aeyes	8.627104	8.976164	comment	6.0	19.0	1686781191	13.869219
29190439	Monorepos create more issues than wh	Monorepos create more issues than what they solve.	speedgoose	8.6335745	8.989564	comment	6.0	17.5	1636651134	13.847921
29190664	> Monorepos are much easier for ever	> Monorepos are much easier for everyone to use, and are the only natural way to manage code for any project.I strongly disagree with that, but I'll let this blog post explain it better than I can: https://medium.com/@mattklein123/monorepos-please-dont-e9a27..	anon9001	8.632363	8.988112	comment	6.0	17.0	1636652212	13.843271
29191108	The more I've come to rely on techni	The more I've come to rely on techniques like canary testing and opt-in version upgrades the more firmly I believe one of the main motivations for  monorepos is flawed: at any given time there may not be a fact of the matter as to which single version of an ap	aranchelk	8.633854	8.988745	comment	6.0	28.5	1636654635	13.84998
34361697	As a big fan of the monorepo approac	As a big fan of the monorepo approach personally, I would say the biggest benefit is being able to always know exactly what state the system was in when a problem occurred.I've worked in large polyrepo environments. By the time you get big enough that you have	xmodem	8.632689	8.989931	comment	6.0	37.0	1673565851	13.848583
24874114	Monorepo Is a Bad Idea	Monorepo Is a Bad Idea	treypitt	8.632592	8.989961	story	6.0	8.0	1603486822	13.844473
25001784	Is there demand for this?Most real c	Is there demand for this?Most real complaints about git are around scalability of giant monorepos, and a lot of work has gone into various solutions.The secondary complaints about usability seem to be papered over by popularity, and of course the relevant xkcd	wocram	8.630418	8.984429	comment	6.0	23.0	1604609223	13.846196
32831847	> Bazel is a fully reproducible and 	> Bazel is a fully reproducible and hermetic build system.Yes, and it's very important to note that Bazel does nothing to solve the problem about having a reproducible and hermetic runtime. Even if you think you aren't linking against anything dynamically, you	bobsomers	8.810408	9.1662445	comment	6.0	23.5	1663115371	13.67598
31849149	Anyone got any stories about migrati	"Anyone got any stories about migrating big, crufty, multiplatform cmake C++ projects to Bazel? ""It sucked but was worth it"" or ""it was surprisingly easy"" or ""LOL don't even try?"""	corrral	8.812161	9.164825	comment	6.0	23.0	1655992463	13.677905
31882920	"Is it just me or most of those ""mono"	"Is it just me or most of those ""monorepo"" articles are about how the company switches to monorepo then just has to fight all the problems that come up with it?Use multiple repos. It doesn't hurt you know. And you can have proper granularityThe costs of monorep"	raverbashing	8.62988	8.987623	comment	6.0	16.0	1656242430	13.832141
32261470	I’m using Bazel to build my rust pro	I’m using Bazel to build my rust project (Using the rules_rust rules) and it’a become quite a pain to use in concert with docker.This is not a complaint about Bazel specifically, its fantastic, and easily my favourite build system bar none.However it cannot cr	hazz99	8.810692	9.1598835	comment	6.0	16.5	1658993800	13.64247
32377264	For the first decade and a half of G	"For the first decade and a half of Google's company lifecycle, they got along just fine with GNU Make???   Google was started in 1998, and Bazel was created ~2006 as a replacement for Python + GNU Make (""gconfig"").  I was on that team, though I only worked on "	chubot	8.808038	9.163266	comment	6.0	20.5	1659886563	13.678081
22020213	Seems like this gets re-posted every	Seems like this gets re-posted every few months.We don't actually have a single repository, although Google3/Piper really is huge and dominant. Android, Chrome, Fuchsia, and myriads of other projects don't exist in the monorepo (well, they are mirrored there) 	cmrdporcupine	8.633152	8.988915	comment	6.0	30.5	1578755414	13.846651
35812377	Another pain with monoliths is that 	Another pain with monoliths is that they can only be deployed if the entire monolith is passing all tests. When you cannot deploy your changes because someone else on an entirely orthogonal team broke something in the monolith which is not related to you it ge	__turbobrew__	8.632397	8.988094	comment	7.0	27.0	1683185273	13.836405
19353692	Instead, currently, all packages bec	Instead, currently, all packages become lint-unclean, all maintainers need to read up on what the new thing is, how it might break, whether/how it affects them, manually run some tests, and finally decide to opt in. This causes a lot of overhead and manually e	chubot	8.632877	8.988474	comment	7.0	23.5	1552244800	13.84542
15889543	Google's mono-repo is interesting th	Google's mono-repo is interesting though, in that you can check out individual directories without having to check out the entire repo. It's very different from checking out a bajillion-line git repo.	chias	8.632148	8.986322	comment	7.0	36.5	1512873891	13.847607
15889691	So as someone who previously worked 	So as someone who previously worked for Google and now works for Facebook, it's interesting to see the differences.When people talk about Google's monolithic repo they're talking about Google3. This excludes ChromeOS, Chrome and Android, which ard all Git repo	cletus	8.6345625	8.9839525	comment	7.0	28.0	1512876422	13.845459
16364012	On the other end of the spectrum, a 	"On the other end of the spectrum, a colleague of mine recently told me about when his previous company (big, 100k+ employees) were starting to adopt git, some people seriously considered having a separate repository per file! ""Because then you can just set up "	amag	8.6314945	8.98893	comment	7.0	27.5	1518485086	13.846398
16528375	Thanks for the comments on Bazel -- 	Thanks for the comments on Bazel -- I am evaluating a proper build system for us right now for a data science codebase almost entirely in Python, with a lot of scientific computing dependencies. Bazel doesn't yet seem to have first-class support for Python, so	sarabande	8.809735	9.163298	comment	7.0	18.0	1520339268	13.668445
17606173	> you’ve just lost your ability to e	> you’ve just lost your ability to easily make breaking changes to the common codeI haven't lost anything, I've gained the ability to make breaking changes because I don't have to update everything that breaks all at once. I don't have to do it at all because 	flukus	8.632159	8.990169	comment	7.0	23.0	1532480090	13.855217
18812782	Can a monorepo support module- or su	Can a monorepo support module- or subdirectory-level ownership controls?  Or do teams using a monorepo just do without them?Partially answering my own question: SVN, recommended in a prior comment [0], supports path-based authorization [1].  But what about tea	Mxtetris	8.632212	8.99009	comment	7.0	19.0	1546489058	2.8733132
30439408	I wish they explained how to merge e	I wish they explained how to merge existing repos into one new (mono)repo while keeping git history. Still haven’t cracked that problem	wdb	8.631218	8.989476	comment	7.0	22.0	1645609383	13.847177
34047785	Can someone explain the rationale be	Can someone explain the rationale behind switching to a monorepo? I just don't get it.Does it mean also having a single unified production environment build?I have been managing a stack composed of 500+ repositories, communicating through webservices, files an	Galanwe	8.63348	8.988073	comment	7.0	26.0	1671418452	13.849341
26479865	kind of an aside, but what's the bes	"kind of an aside, but what's the best practice for pushing and building separate projects in a monorepo?say you have a structure like:
  projectA
  projectB
  sharedUtilsEach time you push you might have a build for projectA and projectB but it builds both eac"	endisneigh	8.633852	8.991709	comment	7.0	23.5	1615915335	13.840559
26480586	As a few others have mentioned this 	As a few others have mentioned this is something that build systems handle since they understand the dependency graph. For example, Bazel is often used to this end.However... I would strongly advise not going for a monorepo. No, I don't mean something like ten	alfalfasprout	8.632606	8.989634	comment	7.0	18.0	1615918151	13.847726
26719078	To ask the obvious unanswered questi	To ask the obvious unanswered question: Why would someone want to move to Bazel from Maven?   What advantages does it bring?	Twirrim	8.810425	9.168263	comment	7.0	35.0	1617755257	13.648423
35286516	Lol, Googler here, I can't deny  tha	Lol, Googler here, I can't deny  that I have he urge to force Bazel into the world.It's just, when I joined Google I found a build system I didn't hate. This was the first time. I don't actually love Bazel (Blaze internally), but I love that I don't hate it.Ev	bjackman	8.809888	9.167797	comment	7.0	32.0	1679646937	-10.195027
35472845	Great to see this. I hope it takes o	Great to see this. I hope it takes off - Bazel is useful but I really like the principled approach behind it (see the Build Systems a la Carte paper), and Neil is scarily good from my experience of working with him so I'd expect that they've come up with somet	oggy	8.809431	9.166324	comment	7.0	19.0	1680807655	13.660289
23183238	Might make sense if you use Go or an	Might make sense if you use Go or any other language with a straightforward tooling landscape (compilers, package management etc.).That changes drastically if your codebase contains a lot of C++ and your SW model doesn't quite match the way Bazel tries to push	simfoo	8.811043	9.162189	comment	7.0	23.0	1589480080	13.656656
34768220	  > The single version dependencies 	"  > The single version dependencies are asinine. We are migrating to
  > a monorepo at work, and someone bumped the version of an open
  > source JS package that introduced a regression.

There's no requirement to have single versions of dependencies in a mono"	jmillikin	8.634245	8.988374	comment	7.0	29.5	1676243790	13.844533
31007803	It’s interesting that they prefer  t	It’s interesting that they prefer  to develop such a tool rather than giving up on the monorepo concept.	speedgoose	8.634203	8.994531	comment	7.0	22.5	1649795051	13.839904
31762908	What's the value of a monorepo if de	What's the value of a monorepo if developers only ever check out a small subset of it? Wouldn't multiple repos allow greater scale without any practical reduction in utility?For example, all the localisation files could live in a separate project (if we accept	urban_winter	8.632694	8.989586	comment	7.0	29.0	1655359749	13.819506
37292494	"How does a ""monorepo"" differ from, s"	"How does a ""monorepo"" differ from, say, using a master project containing many git submodules[1], perhaps recursively? You would probably need a bit of tooling. But the gain is that git commands in the submodules are speedy, and there is only O(logN) commit mu"	avidiax	8.622954	8.997201	comment	7.0	23.5	1693222540	-11.990758
24910704	I wish more people were taking a loo	I wish more people were taking a look at Bazel, and the Bazel-family, of build systems. I've looked at Meson/Ninja/Make and it works but it's truely very complicated and very difficult to get hermetic & reproducible builds from these systems. In my opinion, Ba	gravypod	8.808906	9.162565	comment	7.0	22.0	1603825830	13.675267
25239947	> If you're familiar with Blaze / Ba	> If you're familiar with Blaze / Bazel, Buck or Pants you will probably find Please very familiarYes, so why would I use Please over any of them? I've spent close to 10min reading and have no idea why this exists or why anyone would use it. It looks like Baze	japgolly	8.809669	9.168963	comment	7.0	32.5	1606592873	-4.4042892
31847594	Incremental Builds for Haskell with 	Incremental Builds for Haskell with Bazel	ingve	8.807938	9.165511	story	7.0	92.0	1655983743	13.692089
31849779	I really can't emphasize enough how 	"I really can't emphasize enough how much I love using Bazel. The ability to tell a less technical user ""just run `bazel run //amazing/server`"" regardless of language and know that everything will magically work (toolchain installation, future toolchain upgrade"	aschleck	8.80972	9.163508	comment	7.0	22.5	1655995388	13.6972475
32183792	Use the Bazel Build System	Use the Bazel Build System	eka1	8.809058	9.169	story	7.0	19.0	1658431852	13.673961
32876866	Monorepo Support	Monorepo Support	bauerpl	8.634018	8.991251	story	8.0	71.0	1663416629	13.847229
31792396	Git submodules are fine and can be r	Git submodules are fine and can be really useful, but they are really hard. I've run into problems like:1. Git clone not cloning submodules. You need `git submodule update` or `git clone --recursive`, I think2. Git submodules being out-of-sync because I forgot	armchairhacker	8.618656	9.002541	comment	8.0	58.5	1655576536	-11.987611
31883168	Monorepos have the big advantage tha	Monorepos have the big advantage that cross-project changes can be made together in one PR.	de_keyboard	8.632801	8.991222	comment	8.0	42.0	1656244726	13.849226
31897920	Are Git submodules really that bad? 	Are Git submodules really that bad? Really? Maybe it's me that haven't yet discovered their true dark side. They're not perfect, but works well for mid-sized projects at least.	vodou	8.618316	9.002642	comment	8.0	22.5	1656351500	-11.998117
13865567	I don't work in a shop where perform	"I don't work in a shop where performance/speed is important, but I am looking for other ways to do things I would do in Make but...not in Make.For example, my use-case is similar to what Mike Bostock described in ""Why Use Make"" [0] when explaining how he uses "	danso	8.810157	9.16263	comment	8.0	26.5	1489474260	13.6745205
14411398	I wonder why Windows is a single rep	I wonder why Windows is a single repository - Why not split it in separate modules? I can imagine tools like Explorer, Internet Explorer/Edge, Notepad, Wordpad, Paint, etc. all can stay in its own repository. I can imagine you can even further split things up,	tobyhinloopen	8.631209	8.983843	comment	8.0	61.5	1495644524	13.817951
14412933	At Sun Microsystems, Inc., (RIP) we 	"At Sun Microsystems, Inc., (RIP) we have many ""gates"" (repos) that made up Solaris.  Cross-gate development was somewhat more involved, but still not bad.  Basically: you installed the latest build of all of Solaris, then updated the bits from your clones of t"	cryptonector	8.63203	8.985324	comment	8.0	34.5	1495655658	13.831614
14662592	From the arguments I've seen, the to	"From the arguments I've seen, the top highlights of single vs multi repo:Single repo enables company-wide code sharing and refactoring with the least amount of friction. E.g. A programmer can modify ""foobar(x,y,z)"" to ""foobar2(z,y,x)"" and update all the corpor"	jasode	8.632118	8.984379	comment	8.0	27.5	1498738507	13.813611
29190281	This is well written and deserves my	This is well written and deserves my upvote, because sparse-checkout is part of git and knowing how it works is useful.That said, there's absolutely no reason to structure your code in a monorepo.Here's what I think GitHub is doing:1)  Encourage monorepo adopt	anon9001	8.632641	8.986851	comment	8.0	43.0	1636650320	13.846326
34362909	For everyone who complains about mon	For everyone who complains about monorepos, remember some of the most forward thinking engineering companies like Google and FB also use monorepos. All the arguments that people make in favor of polyrepo are making so because of lack of strong tooling for mono	ankitdce	8.63268	8.987692	comment	8.0	25.0	1673574121	13.842153
19693487	facebook, google, airbnb, quora, man	facebook, google, airbnb, quora, many more all use monorepoobviously there are many others who do not use monorepo (amazon comes to mind) but it's reasonable to claim that they are actually widely used and fundamental when used	huac	8.632577	8.988156	comment	8.0	25.0	1555611918	13.8274145
17607262	Is it just me, or are a lot of peopl	Is it just me, or are a lot of people here conflating source control management and dependency management? The two don't have to be combined. For example, if you have Python Project X that depends on Python Project Y, you can either have them A) in different s	jgibson	8.633568	8.985691	comment	8.0	29.0	1532500364	13.841021
21215225	Bazel may be 1.0 and the internal ab	Bazel may be 1.0 and the internal abstractions of dag solving etc are rock solid from years of use inside Google, but the ecosystem around Bazel is quite bad at the moment. They've been breaking backwards compatibility constantly, so rules authors have struggl	habitue	8.809838	9.1615715	comment	8.0	34.5	1570719521	13.68188
21289097	We didn't have Bazel on ARM for NixO	We didn't have Bazel on ARM for NixOS because we can't bootstrap openJDK on ARM. There's no source code for a JVM that compiles on ARM afaik. Though in theory we could package binary blobs from oracle and bootstrap JDK and Bazel from there, it means now our tr	arianvanp	8.810547	9.166956	comment	8.0	27.5	1571379749	13.673636
18824796	> The monorepo third-party system wo	> The monorepo third-party system works well in practice.It's worth noting that this is only viable at Google because they don't use git. Git's insistence on every client having a full copy of all history of every file in the repository makes monorepo much mor	pjc50	8.632471	8.988243	comment	8.0	21.0	1546616807	13.846396
18855857	I’ve never understood the debate bet	I’ve never understood the debate between mono and multi repos. With the right tooling, the line seems to vanish and you just have folders anyway.Each repo may have their own policies and permissions, which is the biggest reason I see to keep them separate, but	azhenley	8.631657	8.99051	comment	8.0	29.5	1546959407	13.841524
27845573	I've come to learn that git monorepo	I've come to learn that git monorepos are becoming quite popular. What I don't understand is why people are using git for this kind of workflow. It forces you to actively work against git's design goals and implementation. Which then compels the use of several	im_down_w_otp	8.632078	8.989178	comment	8.0	27.0	1626361406	13.795914
28243034	How far does this have to go before 	How far does this have to go before people realize how ridiculous this is. The Multi-mono-multi-monorepo stage?You don't need a monorepo. It's an anti-pattern that people resort to when their code is a tangled, tightly coupled mess.If the modules are loosely c	cryptica	8.625506	8.985288	comment	8.0	24.0	1629438212	13.846987
28560639	Monotype acquires Hoefler&Co	Monotype acquires Hoefler&Co	mikedc	8.634335	8.984213	story	8.0	145.0	1631846469	13.887514
22994555	After working on a monorepo and then	After working on a monorepo and then the split up repos for the same codebase, I cannot fathom why somebody would want to take small repos and merge them in a single repo. The mess and complexity just increase.	frollo	8.631907	8.987721	comment	8.0	38.0	1587983389	13.852118
34055764	I'm still not sure if I should go th	I'm still not sure if I should go the bazel route... recently found a long good explanation why anki switched away from bazel: https://github.com/ankitects/anki/commit/5e0a761b875fff4c9e4...I'd love to have cachable builds but I wonder how much effort it takes	nisa	8.809754	9.167749	comment	8.0	28.0	1671474992	13.655441
26991505	Scaling monorepo maintenance	Scaling monorepo maintenance	pimterry	8.632764	8.989694	story	8.0	296.0	1619776328	13.841388
19303082	Case Study: Monolithic Repository at	Case Study: Monolithic Repository at Google (2018) [pdf]	svat	8.634498	8.982015	story	9.0	113.0	1551720653	13.848498
18813211	I'm not familiar with how monorepos 	I'm not familiar with how monorepos work in practice, but it seems obvious to me that it's going to complicate everyday tasks.Ready to commit? Whoops, another team made a bunch of commits to their project, and you need to rebase your project before you can com	wtracy	8.63249	8.990436	comment	9.0	26.0	1546495666	13.872437
22481176	Don't monorepos solve this? Lets pre	Don't monorepos solve this? Lets presume I'm not a FAANG company (though some of those have monorepos) with a bazillion services, I'm just a startup with say 10 services. At that scale I think its pretty realistic to maintain a monorepo for all 10 services. Th	dgrin91	8.632829	8.989393	comment	9.0	26.5	1583295686	13.853456
22947395	Incremental Builds in Gatsby Cloud	Incremental Builds in Gatsby Cloud	Dockson	8.804051	9.1440325	story	9.0	130.0	1587573340	13.643964
29548592	Ask HN: Monorepo vs. Multi-Repo	Ask HN: Monorepo vs. Multi-Repo	johnnypangs	8.633088	8.985989	story	9.0	18.0	1639460173	-13.81183
34768141	Context: Staff Eng @ Google for 7+ y	Context: Staff Eng @ Google for 7+ years1) This is solved by 2 interlocking concepts: comprehensive tests & pre-submit checks of those tests. Upgrading a version shouldn’t break anything because any breaking changes should be dealt with in the same change as t	gresrun	8.633857	8.986514	comment	9.0	46.5	1676243210	13.839141
24490089	Bazel For Open-Source C/C++ Librarie	Bazel For Open-Source C/C++ Libraries Distribution	todsacerdoti	8.807969	9.166251	story	9.0	64.0	1600237720	13.672367
23377012	What is the best and right way to op	What is the best and right way to open-source packages from a company monorepo?	vaughan	8.632447	8.989248	story	10.0	46.0	1591007000	13.846288
30958653	Turborepo 1.2: High-performance buil	Turborepo 1.2: High-performance build system for monorepos	leerob	8.634131	8.989754	story	10.0	157.0	1649432611	13.799013
29188863	Make your monorepo feel small with G	Make your monorepo feel small with Git’s sparse index	CRConrad	8.633995	8.985076	story	10.0	221.0	1636644433	13.828498
34362196	I always find monorepo/polyrepo disc	I always find monorepo/polyrepo discussions tiresome, mostly because people take the limitations of git and existing OSS tooling as a given and project those failings onto whichever paradigm they are arguing against.I'm pretty excited for new OSS source contro	scarmig	8.619168	8.973137	comment	10.0	37.0	1673568644	-11.645766
21568599	"The use case:
A build system runs 10"	"The use case:
A build system runs 100's of compile/test jobs that use the same underlying git repo. The git repo is massive so giving each process its own copy is not practical. Instead each subprocess gets a unique overlay to do it's work. After a subprocess "	nwellinghoff	8.618742	8.993733	comment	10.0	26.5	1574114695	-11.929256
18738261	Building TypeScript Projects with Ba	Building TypeScript Projects with Bazel	mgechev	8.809001	9.168128	story	10.0	90.0	1545441835	13.689937
18811368	My advice is that if components need	My advice is that if components need to release together, then they ought to be in the same repo.  I'd probably go further and say that if you just think components might need to release together then they should go in the same repo, because you can in fact pr	curtis	8.627164	8.984677	comment	10.0	53.5	1546471694	13.800957
28220113	From a Single Repo, to Multi-Repos, 	From a Single Repo, to Multi-Repos, to Monorepo, to Multi-Monorepo	leoloso	8.632439	8.9901905	story	10.0	122.0	1629289168	13.841728
14875640	CMake is a big improvement, but it's	CMake is a big improvement, but it's a shame they didn't opt for Buck or Bazel. These two build systems are as much an improvement over the previous generation as autoconf and GNU Make were improvements over random ad-hoc configure scripts. Both take pains to 	quotemstr	8.81264	9.160101	comment	10.0	29.5	1501260815	13.59298
24925368	Bazel Build System Support for LLVM	Bazel Build System Support for LLVM	mshockwave	8.809843	9.167426	story	11.0	118.0	1603927880	13.722293
32594915	Best practices for TypeScript monore	Best practices for TypeScript monorepo	iddan	8.634516	8.984749	story	11.0	115.0	1661440948	13.840789
31883018	It seems to me that an easier way to	It seems to me that an easier way to avoid this problem is to not have monorepos in the first place. Uber's architecture is, AFAIK, heavily based on microservices, so I wonder what's the advantage they get in using a monorepo.	hiyer	8.635157	8.9920635	comment	11.0	68.0	1656243293	13.8889065
22078125	Bring your monorepo down to size wit	Bring your monorepo down to size with sparse-checkout	Amorymeltzer	8.632242	8.989691	story	11.0	137.0	1579288741	13.8376875
15890660	I've worked with both a distributed 	I've worked with both a distributed repo model and a monorepo model and vastly prefer the distributed approach (given the right tooling). The trade-offs are complementary and no doubt with proper discipline you can try to maximize the benefits, while minimizin	nickm12	8.631337	8.986934	comment	11.0	59.5	1512898187	13.845572
16483112	I wonder if Bazel takes off across m	I wonder if Bazel takes off across many languages. It wouldn't hurt to have a modern autotools & co. replacement across ecosystems. I don't think it's doable, considering the fact that we have language specific package managers and build tools, but you never k	oblio	8.808922	9.167132	comment	11.0	33.5	1519827778	13.67871
30438579	Everything you need to know about mo	Everything you need to know about monorepos	SerCe	8.632683	8.989031	story	11.0	76.0	1645600930	13.851928
32829754	Last year I tried doing a side proje	Last year I tried doing a side project with a talented ex-Google buddy who insisted we set up Bazel to replace my simple Makefile. Three weeks later it still wasn’t working on my Windows box. We had a mixed Python and C++ code base and I like to use MinGW64 gc	trzy	8.809796	9.16766	comment	12.0	58.5	1663100763	13.6702585
17055919	Git submodules revisited	Git submodules revisited	fanf2	8.617701	9.004035	story	12.0	102.0	1526157782	-11.997902
21385013	Evaluating Bazel for building Firefo	Evaluating Bazel for building Firefox	dochtman	8.809596	9.168692	story	12.0	194.0	1572336361	13.668718
16528112	Bazel Fawlty	Bazel Fawlty	elrodeo	8.809368	9.167235	story	13.0	75.0	1520334259	-4.454733
12736514	I know this is slightly tangental bu	I know this is slightly tangental but I'm always a little shocked that Facebook (and I think Google to some extent) have massive mono repositories.The benefits of having one repository do not seem to be worth the serious performance issues as well as potential	agentgt	8.631979	8.986261	comment	13.0	46.5	1476810341	13.84502
26721300	I know nothing about Bazel, but I've	I know nothing about Bazel, but I've never understood the JVM community's obsession with getting off Maven.My experience of Gradle is Gradle projects require a PhD in Gradle AND intimate familiarity with the tastes of whoever implemented that particular projec	bedobi	8.80975	9.167909	comment	13.0	40.5	1617778770	13.633271
31924554	Improve Git monorepo performance wit	Improve Git monorepo performance with a file system monitor	chmaynard	8.632071	8.986165	story	13.0	203.0	1656530423	13.814004
35286355	Hey, what a surprise, ex-google engi	Hey, what a surprise, ex-google engineers dragging everyone into bazel...Maybe you have some really complicated use case that makes cargo insufficient, but really, it's pretty damn nice and it's integrated with everything.There are languages that need bazel, r	habitue	8.8131275	9.159049	comment	14.0	62.5	1679645434	13.655859
23180255	Building Uber’s Go Monorepo with Baz	Building Uber’s Go Monorepo with Bazel	dayanruben	8.698687	9.054283	story	14.0	158.0	1589468007	13.76146
26479127	Improving large monorepo performance	Improving large monorepo performance on GitHub	todsacerdoti	8.634527	8.984821	story	14.0	317.0	1615912620	13.837872
26165445	Here's the lesson I've learned from 	Here's the lesson I've learned from my experience with submodules in git in several different companies: avoid them like the plague. NEVER USE THEM FOR ANYTHING. Use any other solution available to you: use package managers, use monorepos, use subtrees, just c	OskarS	8.617856	9.004137	comment	15.0	49.0	1613563407	-12.00757
29652451	Ask HN: Mono-Repo or Multi-Repo?	Ask HN: Mono-Repo or Multi-Repo?	niros_valtos	8.631831	8.989751	story	15.0	18.0	1640194399	13.848215
35270660	Scaling Rust Builds with Bazel	Scaling Rust Builds with Bazel	zdw	8.811154	9.166267	story	15.0	107.0	1679546951	13.659099
22986303	Monorepoize – Bash scripts for creat	Monorepoize – Bash scripts for creating a monorepo out of smaller repos	deepaksurti	8.632561	8.990193	story	15.0	137.0	1587899684	13.843577
32878240	I don't get the case against monorep	I don't get the case against monorepos, and why it's so polarizing.You can share code without having to stand up infrastructure to host packages and whatnot.You can separate concerns without introducing the infinite complexity of network io, queues etc. This i	corytheboyd	8.632199	8.987186	comment	16.0	55.0	1663428183	-13.8204
21288388	I only wish Bazel had been written i	I only wish Bazel had been written in a language that produced native binaries like C++ or Go instead of Java. It seems like a waste for me as a non-Java developer to install Java on my dev machine just for Bazel.	RcouF1uZ4gsC	8.809665	9.167886	comment	16.0	74.5	1571368985	13.667848
31882512	We Halved Go Monorepo CI Build Time	We Halved Go Monorepo CI Build Time	kiyanwang	8.63395	8.98873	story	18.0	161.0	1656237667	13.822955
19795482	Benefits of a Monorepo	Benefits of a Monorepo	ingve	8.6329975	8.991455	story	18.0	142.0	1556700215	13.8477745
23480198	Speeding up a Git monorepo	Speeding up a Git monorepo	illuminated	8.6342535	8.987429	story	20.0	147.0	1591812485	13.83171
34767995	There's a lot of love for monorepos 	There's a lot of love for monorepos nowadays, but after more than a decade of writing software, I still strongly believe it is an antipattern.1. The single version dependencies are asinine. We are migrating to a monorepo at work, and someone bumped the version	lopkeny12ko	8.632711	8.987335	comment	20.0	99.5	1676242237	13.845892
21234560	Monorepo or Multirepo? Role-Based Re	Monorepo or Multirepo? Role-Based Repositories	optician_owl	8.632301	8.990663	story	20.0	141.0	1570899662	13.844926
27844363	Josh: Get the advantages of a monore	Josh: Get the advantages of a monorepo with multirepo setups	oftenwrong	8.635159	8.993178	story	20.0	246.0	1626355502	13.843664
38493940	Ask HN: Anyone using Bazel at startu	Ask HN: Anyone using Bazel at startups? or migrated to/away from Bazel?	grrandalf	8.8095875	9.168768	story	20.0	27.0	1701472761	13.671608
17605920	I feel terrible for anyone who sees 	I feel terrible for anyone who sees this and thinks, “ah! I should move to a monorepo!” I’ve seen it several times, and the thing they all seem to overlook is that Google has THOUSANDS of hours of effort put into the tooling for their monorepo. Slapping lots o	hobls	8.631683	8.988436	comment	21.0	106.0	1532476990	13.848829
18855660	Monorepos and the Fallacy of Scale	Monorepos and the Fallacy of Scale	loevborg	8.6325	8.991173	story	21.0	104.0	1546957485	13.846694
31596419	Monorepos in JavaScript and TypeScri	Monorepos in JavaScript and TypeScript	rwieruch	8.636566	8.98168	story	22.0	106.0	1654185216	13.844387
21288185	Bazel 1.0	Bazel 1.0	vips7L	8.809906	9.167044	story	22.0	411.0	1571366239	13.672938
12170755	Manul – the madness vendoring utilit	Manul – the madness vendoring utility for Go with Git submodules	kovetskiy	8.588706	9.033134	story	22.0	97.0	1469598227	-12.001615
14662312	We’ll Never Know Whether Monorepos A	We’ll Never Know Whether Monorepos Are Better	kalimatas	8.634174	8.9913	story	23.0	50.0	1498735629	13.850049
27903282	A monorepo misconception – atomic cr	A monorepo misconception – atomic cross-project commits	askl	8.631669	8.991941	story	23.0	102.0	1626851800	13.840989
26164790	Git Submodules: Adding, Using, Remov	Git Submodules: Adding, Using, Removing, Updating (2009)	tigerlily	8.617679	9.0044155	story	24.0	110.0	1613557065	-12.005546
28845570	Monorepos and Forced Migrations	Monorepos and Forced Migrations	zdw	8.632086	8.989823	story	24.0	101.0	1634075932	13.845542
18820258	Monorepo: please do	Monorepo: please do	Soliah	8.634398	8.99154	story	27.0	234.0	1546556792	13.845498
26613473	I Hate Git Submodules	I Hate Git Submodules	Addono	8.617414	9.004962	story	27.0	108.0	1616959967	-12.005462
30664891	Monorepos done right	Monorepos done right	fixel	8.633129	8.98911	story	28.0	141.0	1647200024	13.834419
21213240	Bazel Release 1.0	Bazel Release 1.0	klodolph	8.809489	9.168905	story	29.0	263.0	1570707262	13.67457

id	label	hovertext	author	x	y	type	relevance	size	year	umap1d
33126223	Apple’s use of Swift and SwiftUI in 	Apple’s use of Swift and SwiftUI in iOS 16	WoodenChair	10.45447	-7.826179	story	3.0	59.0	1665172838	-10.86102
33241770	Sadly, Swift will remain a niche lan	Sadly, Swift will remain a niche language, much like Objective-C was.	msie	10.478089	-7.7972717	comment	3.0	13.5	1666055223	-10.829777
33332048	"It reminds me of ""Mel""in 1983 which "	"It reminds me of ""Mel""in 1983 which was in response to ""Real Programmers write in FORTRAN.""https://www.cs.utah.edu/~elb/folklore/mel.html"	shafoshaf	10.47888	-7.3710303	comment	3.0	17.0	1666712255	8.830802
33379414	Swift concurrency – things they don’	Swift concurrency – things they don’t tell you	teichmann	10.5226555	-7.8195887	story	3.0	28.0	1667000556	-10.843012
26565616	I find 1) especially challenging wit	I find 1) especially challenging with microservices. What technologies do you use/recommend to help with this?	gnrlst	9.785787	-7.3583198	comment	3.0	12.5	1616583401	-13.814463
26514728	Going All-In with Ada: A Manifesto	Going All-In with Ada: A Manifesto	tate	10.639516	-7.729044	story	3.0	12.0	1616168919	-5.0843253
26603206	If anyone is looking for an alternat	If anyone is looking for an alternative to R or python, there's Julia already.	iagovar	10.228238	-7.950806	comment	3.0	12.5	1616860681	10.728971
26659377	I don't understand what you're sayin	I don't understand what you're saying, what is the problem with L<Integer> ?	riffraff	10.635593	-7.099606	comment	3.0	11.5	1617278510	8.811276
26760555	This is part of the reason microserv	This is part of the reason microservices are becoming reasonably popular. They facilitate scaling people. If you think about it one of the biggest projects we have, the military, scales through assembling near-identical pieces structurally (but not functionall	oblio	9.782243	-7.360493	comment	3.0	11.0	1618052235	-13.807186
37595626	fortran is call by reference, it's a	fortran is call by reference, it's all aliasing, you can even in some implementations change the value of literalsc is call by value, you have to at least try to alias	fsckboy	10.528094	-7.3518977	comment	3.0	11.0	1695291535	8.827717
37595298	> The performance difference comes f	> The performance difference comes from the fact that Fortran says aliasing is not allowed [...]This is one of the legacies modern C++ is still wrestling with today, supposedly solved by Rust, Zig, Val and the likes.	pipo234	10.51557	-7.3818593	comment	3.0	21.0	1695288788	8.755414
37699295	JAX GPU support is limited to Linux 	JAX GPU support is limited to Linux only. Even the WSL2 support is experimental. https://jax.readthedocs.io/en/latest/installation.html#suppo...	subhrm	10.001941	-7.954022	comment	3.0	12.0	1695962022	10.559227
37739498	I'm holding out hope for a Fortran r	I'm holding out hope for a Fortran resurgence.It's a tiny hope. But a hope nonetheless. Fortran is fun.	tomrod	10.449518	-7.414339	comment	3.0	12.0	1696261020	8.810217
37900171	Post might have signed integer overf	Post might have signed integer overflow => undefined behaviour => delete all the code in mind. Which can be avoided if you remember that hazard is there.What's integer divide by zero in C? Would you consider that safe?	JonChesterfield	10.66791	-7.0638394	comment	3.0	11.0	1697465743	-6.9917264
37901850	An error does not rewrite your entir	An error does not rewrite your entire code on the assumption that it can not happen.Signed overflow is not an error in C.	marcosdumay	10.657055	-7.051256	comment	3.0	10.5	1697472313	-7.025983
14800557	A few years ago, I rewrote an `R` sc	A few years ago, I rewrote an `R` script into Fortran, for better than order-of-magnitude speed increase.The script optimized the placement of samplers in a building, in order to maximize the probability of detecting airborne pollutants, or to minimize the exp	dmlorenzetti	10.497153	-7.370324	comment	3.0	22.0	1500417029	8.846832
14800629	This is the first time that I have e	"This is the first time that I have ever encountered someone who used Fortran for something other than earth sciences related modeling.Thank you, now I have a second example the nest time someone claims ""nobody used fortran anymore""."	fhood	10.458944	-7.4180365	comment	3.0	17.0	1500417771	8.820091
14803634	Julia, C++ with libraries, Python wi	Julia, C++ with libraries, Python with Cython or Numba, etc.You could also get much faster if most of your work is matrix multiplication if you make use of libraries like ViennaCL and a modern C++ compiler.	gravypod	10.401808	-7.4410644	comment	3.0	10.5	1500465588	9.005604
14848956	Convincing people that microservices	Convincing people that microservices are not a cure-all but just another design pattern.You have to start out with a monolith and only if you realise along the way that some components might work better as a service (micro or not) you should extract those. Unt	BjoernKW	9.793165	-7.360517	comment	3.0	13.0	1500999433	-13.86829
14880716	A binary coder for Swift	A binary coder for Swift	chmaynard	10.48336	-7.8023505	story	3.0	108.0	1501328966	-10.857944
14973618	Regarding iOS and macOS kits, all of	Regarding iOS and macOS kits, all of the documentation is in Objective-C. The libraries' Obj-C is imported and usable with Swift-only code, but the Swift documentation lazily links you to examples in the Obj-C docs. You have to perform trial-and-error by manua	developer2	10.522086	-7.7408566	comment	3.0	10.5	1502312863	-10.830184
15035694	Data Science Rosetta Stone: Classifi	Data Science Rosetta Stone: Classification in R, Python, Matlab, SAS, Julia	jeffheaton	10.192173	-7.958917	story	3.0	61.0	1502969149	6.9087687
12581740	>Apple isn't telling people to go us	>Apple isn't telling people to go use Swift on the server, IBM is.I'm aware. This is the (humorous) point I'm attempting to make. IBM is adopting technologies faster then Apple. While Apple started it's life out as the Anti-IBM. Indeed it is still fulfilling t	valarauca1	10.460349	-7.8206573	comment	3.0	14.0	1474897603	-10.85116
12581880	Overall I like Swift and it's certai	Overall I like Swift and it's certainly a massive quality of life improvement for Mac/iOS devs.But I don't see as much upside for enterprise development. Server side tooling and deployment is still TBD, reference counting adds non-negligible cognitive overhead	cageface	10.467501	-7.8257346	comment	3.0	21.0	1474898754	-10.839727
12599824	What I Wish Small Startups Had Known	What I Wish Small Startups Had Known Before Implementing A Microservices Architecture:Know your data. Are you serving ~1000 requests per second peak and have room to grow? You're not going to gain much efficiency by introducing engineering complexity, latency,	agentultra	9.786815	-7.345861	comment	3.0	20.5	1475085843	-13.816041
12601610	You don't need to build a distribute	You don't need to build a distributed system for that. Just build the ShippingServiceLibrary, let others import the jar file (or whatever) and maintain a stable interface.I wrote about this a couple of years ago in more detail, so I'll just reference that: htt	yummyfajitas	9.77656	-7.332975	comment	3.0	10.5	1475099202	-13.835501
12601320	I have no idea why people keep think	I have no idea why people keep thinking microservices is all about scalability. Almost like they've never worked on a problem with them before.Microservices is all about taking a big problem and breaking it down into smaller components, defining the contracts 	threeseed	9.78032	-7.3474364	comment	3.0	16.5	1475096280	-13.810462
12661404	So, it seems reasonably dplyrish and	So, it seems reasonably dplyrish and I like that there's a pipe-forward operator available (and I do like the look of the F#/Erlang style |> more than I do the %>% one R gets).This seems like it's written for someone who has a bit more of familiarity with Juli	cwyers	10.27827	-7.932613	comment	3.0	15.0	1475854141	10.730417
12774996	"""The method name getAbsoluteDifferen"	"""The method name getAbsoluteDifference() means to get the absolute difference between the pair of numbers. The method name contains a verb get. 
It would not make much sense to name the method simply absoluteDifference(), because such name does not indicate an"	delinka	10.592238	-7.774824	comment	3.0	12.0	1477250721	-10.838224
12851346	Ada is like Smalltalk or Lisp at thi	Ada is like Smalltalk or Lisp at this point. It's not new and shiny. It's not being marketed. It's seen as outdated, or even extinct (how many people know an Ada developer or project)? Like it or not, people bandwagon technologies. Not to say anything against 	goatlover	10.665211	-7.721652	comment	3.0	17.5	1478046305	-5.0953393
27572217	I find the argument that vectorized 	I find the argument that vectorized code is more difficult to read weird. Having to write out the loops becomes tedious very quickly and does often significantly decrease readibility. Take for example the element wise multiplication of two 2d square arrays and	cycomanic	10.21874	-7.8883495	comment	3.0	11.5	1624210757	10.634705
27572736	The julia implementation was also su	The julia implementation was also suboptimal to be fair. I sped it up considerably here:https://discourse.julialang.org/t/i-just-decided-to-migrate-...and then even further here:https://discourse.julialang.org/t/i-just-decided-to-migrate-...I'd actually be ver	eigenspace	10.19359	-7.9766355	comment	3.0	17.5	1624214260	10.685634
27603058	I've read the book on ada language r	I've read the book on ada language recently and it looked interesting, but the developer experience is a mess. IDE that' s provided got kicked out from ubuntu repositories due to complicated build process. Language server is there, but there is not much docume	can3p	10.656774	-7.7239327	comment	3.0	11.5	1624446140	-5.113412
27603205	Ada and C++ are worlds apart, how is	"Ada and C++ are worlds apart, how is it possible to come so close as to be ""just syntax"" with static analyzers and their known limitations? Unless we are talking about all programming languages being ""just syntax"" for a turing machine..."	zurn	10.6724	-7.7159147	comment	3.0	11.0	1624447604	-5.1357813
27749326	Since you have written it as a symme	Since you have written it as a symmetric, positive definite, sparse linear system, why don't use a standard solver like CHOLMOD which is available in Julia?  (and behind octave's anti-slash operator).  It should be faster than the ad-hoc single-scale Gauss-Sei	enriquto	10.171912	-7.933192	comment	3.0	19.5	1625582744	10.516599
27804632	Compilers are sane and written by ve	Compilers are sane and written by very smart people. They do have bugs just like any other software. In my 20+ yrs of coding, I can count the number of bugs I've encountered on one hand.memset tend to be optimized out in the dead code elimination pass and high	halayli	10.631605	-7.0450225	comment	3.0	38.0	1626038789	-7.133953
27804669	Isn't memset different in that it's 	Isn't memset different in that it's an external function that compiler writers have chosen to intercept and perform themselves? Why is saying 'use memset_s' acceptable when they could have stopped treating memset as a special case?	secondcoming	10.589949	-7.0239353	comment	3.0	15.0	1626039300	-7.084092
27800041	Mutating and non-mutating Swift cont	Mutating and non-mutating Swift contexts	tempodox	10.510218	-7.8265653	story	3.0	36.0	1626003625	-10.841115
35368683	Today, there is a Python package for	Today, there is a Python package for everything. The ecosystem is possibly best in class for having a library available that will do X. You cannot separate the language from the ecosystem. Being better, faster, and stronger means little if I have to write all 	fbdab103	10.551702	-7.3667927	comment	3.0	11.5	1680156354	8.887823
35406554	This would mean you’d have to insert	This would mean you’d have to insert a check every time you add two signed integers together, because signed overflow is UB. You’d also have to wrap every memory access with bounds checks, because OOB memory access is UB.There are also tons and tons of loop op	chongli	10.642804	-7.017732	comment	3.0	14.0	1680402761	-7.031768
35493244	And since no implementation has ever	And since no implementation has ever supported it, it has been deprecated in ISO Ada 95 and further removed from it on ISO Ada 2012.https://en.wikibooks.org/wiki/Ada_Programming/Pragmas/Contro...	pjmlp	10.62916	-7.677377	comment	3.0	31.5	1680962718	-5.105903
22399395	Swift Soars Ever Higher	Swift Soars Ever Higher	wux	10.440702	-7.831592	story	3.0	25.0	1582490646	-10.8536
22590581	And I believe that's wrong. Memset c	And I believe that's wrong. Memset copies values to bytes, regardless if they are padding or not. You just can't rely on padding bytes keeping that value. In particular, writing to a member may fill padding with arbitrary garbage (though the standard goes beyo	cygx	10.649809	-7.0596952	comment	3.0	10.5	1584341342	-7.043698
22626461	Mathematica is only trapware because	Mathematica is only trapware because it's so much better than anything else available	joeberon	10.307997	-7.17253	comment	3.0	11.0	1584617301	9.91848
22632824	It's crazy to think that if:1. Apple	It's crazy to think that if:1. Apple had bought Be instead of Next.2. Then OS X would have been based on BeOS instead of OpenStep.3. Which in turn means it would have been written in C++ instead of Objective-C.4. Which means iOS wouldn't have chosen Objective-	munificent	10.492716	-7.780678	comment	3.0	12.5	1584660009	4.4849653
15168291	I always tell people: Microservices 	I always tell people: Microservices sacrifice everything at the alter of scalability. Everything but scalability gets harder, not easier. You point out some good examples of places where this is true.You should not be doing microservices unless you need that s	jdmichal	9.789379	-7.3605375	comment	3.0	13.0	1504534123	-13.813331
15210821	A piece of more recent history that 	A piece of more recent history that people might not know: the 32-bit SPARC chips had some special instructions for adding and subtracting integers, assuming a representation in which the two low-order bits were used as tag bits, and a value of 00 in those bit	ScottBurson	10.60738	-7.0314536	comment	3.0	11.5	1505021435	-7.0475907
15274141	But if you wanted to use Java 8, whi	"But if you wanted to use Java 8, which has been available since 2014, on Android you need to target at least Android 7.0, skipping out on 4.4-6 which is a huge market.
On iOS however, you can use Swift on many more devices, even the latest version of Swift."	rahkiin	10.617976	-7.6465	comment	3.0	10.5	1505722231	-10.840618
15290282	"""Swift 4 includes a faster, easier t"	"""Swift 4 includes a faster, easier to use String implementation that retains Unicode correctness and adds support for creating, using and managing substrings.""This alone is grounds for opening and drinking very expensive champagne and/or wine."	swivelmaster	10.543317	-7.7115345	comment	3.0	17.5	1505874116	-10.834551
15290384	The new JSON parser is really slick.	The new JSON parser is really slick. https://developer.apple.com/documentation/swift/codable	valine	10.510088	-7.8188734	comment	3.0	12.5	1505875626	-10.829059
15290805	> Some source migration will be need	> Some source migration will be needed for many projects, although the number of source changes are quite modest compared to many previous major changes between Swift releases.It seems like the language still needs some time to be completely mature, or am I wr	jorgemf	10.464829	-7.820837	comment	3.0	17.0	1505880907	-10.849773
15291444	The other responses to your comment 	The other responses to your comment are correct: C generally can't do those optimizations, unless you manually write `restrict`, and this can hinder optimization.  But to complete the picture -> Is there some other characteristic of Swift that makes this harde	comex	10.632161	-7.816124	comment	3.0	12.0	1505891640	-10.80937
15294409	what does & do in Swift then? And wh	what does & do in Swift then? And what's the purpose of even having inout and & if you can't count on the code to actually be an address?	leshow	10.520342	-7.8136373	comment	3.0	12.0	1505919389	-10.850011
15343079	Sure. Digging through my old emails,	"Sure. Digging through my old emails, here's the particular example (a very stiff Van der Pol equation) I was looking at, taken from Intel's own examples, which for MATLAB would be:  tic;
  [t, x] = ode15s(
    @(t, x) [x(2); ((1 - x(1)^2) * x(2) - x(1)) * 10^6"	throwaway613834	10.235377	-7.8567905	comment	3.0	12.0	1506464438	10.64795
15359782	How easy is it to build a Swift app 	How easy is it to build a Swift app that uses the same codebase for Mac, Windows, and Android?What are the target environments like in non-Apple systems?	mozumder	10.491439	-7.7206464	comment	3.0	11.0	1506624779	-10.749196
15421727	from https://www.tutorialspoint.com 	"from https://www.tutorialspoint.com (high seo, I do not personally endorse)Objective-C:    - (return_type) method_name:( argumentType1 )argumentName1   
    joiningArgument2:( argumentType2 )argumentName2 ...  
    joiningArgumentn:( argumentTypen )argumentNam"	texuf	10.614419	-7.7723083	comment	3.0	11.0	1507339990	-10.7769985
15421764	Swift is great for a small app, with	Swift is great for a small app, with a handful of developers. For a platform, which interops with multiple languages, being worked on by a large team of engineers, switching to Swift would just be silly.Oh yeah, let me increase my compile times, the size of my	iOSGuy	10.453934	-7.7886624	comment	3.0	15.0	1507340537	-10.833964
15472933	Any time 1-based indexing is mention	Any time 1-based indexing is mentioned as a shortcoming of Julia reminds me of PG's 'Blub paradox' [1].> As long as our hypothetical Blub programmer is looking down the power continuum, he knows he's looking down. Languages less powerful than Blub are obviousl	ssivark	10.240441	-7.8848224	comment	3.0	11.5	1507999033	10.660456
15477617	> Interestingly, C/C++ beats Fortran	> Interestingly, C/C++ beats Fortran on all but two of the benchmarks, although they are fairly close on most.I think this is fairly recent that C/C++ wins. I don’t know how recent exactly, but I remember a colloquium not too long ago by a compiler researcher 	dahart	10.513795	-7.358764	comment	3.0	12.0	1508082484	8.828054
15501480	Microservices in Java – A Second Loo	Microservices in Java – A Second Look	emforce	9.791316	-7.3569255	story	3.0	16.0	1508350417	-13.798489
15599281	> But an alternative often doesn't e	> But an alternative often doesn't exist.Python, Julia, Matlab, Java, Scala don't exist for doing what? Are there specific R libraries and functions that aren't reproduced in other languages?	goatlover	10.294912	-7.8988943	comment	3.0	14.0	1509519381	10.71901
15583868	Show HN: Attributed strings in Swift	Show HN: Attributed strings in Swift 4	nirma	10.533029	-7.7595296	story	3.0	28.0	1509356073	-10.891762
15700986	This is being used as a staging plac	This is being used as a staging place for putting patches so they can be turned into pull requests, nothing more. Sorry to bust any conspiracy theories.(You can see this happens on >100 of the swift forks :P)	DannyBee	10.464624	-7.8258414	comment	3.0	13.0	1510712002	-10.858039
15749212	Mesa-dev: GBM and the Device Memory 	Mesa-dev: GBM and the Device Memory Allocator Proposals	aneeshneelam	10.631231	-7.0808754	story	3.0	43.0	1511282905	8.713236
37948447	One takeaway from these charts is th	One takeaway from these charts is that the great majority of binaries in iOS are still written in Objective-C.	mrtesthah	10.465286	-7.713785	comment	3.0	38.5	1697748129	5.663506
37949588	As a mobile dev, so far the biggest 	As a mobile dev, so far the biggest issue keeping me from adopting SwiftUI stems from its greenness and UIKit being so well fleshed out.The newness is an issue because new SwiftUI revisions ship with new iOS releases, which means that big chunks of it are gate	jwells89	10.455507	-7.811055	comment	3.0	19.5	1697754146	-10.818127
37949743	It's sort of dismaying that SwiftUI 	It's sort of dismaying that SwiftUI is regarded as a superior native choice as opposed to second-citizen cross-platform frameworks, then see examples like the macOS System Settings app. Though perhaps that is more of a case of poorly-executed Catalyst iOS to m	Apocryphon	10.451848	-7.8242745	comment	3.0	18.0	1697755043	-10.846247
37950314	SwiftUI definitely has an iOS/mobile	SwiftUI definitely has an iOS/mobile bent to it, no doubt because iOS is its flagship platform. macOS no longer has the corporate gravity that it enjoyed prior to the iPhone, when AppKit received most of its post-NeXT development.This problem isn’t exclusive t	jwells89	10.425358	-7.812087	comment	3.0	13.5	1697758947	-10.861537
37975689	I've worked on a couple of extremely	I've worked on a couple of extremely large micro services projects.And the thing is that nobody ever needs to run the entire stack other than end to end tests which get run in the cloud.You just checkout the services you need and because they are designed to b	threeseed	9.796902	-7.3361316	comment	3.0	11.0	1697984958	-13.824681
37979163	Do all of those need to be microserv	Do all of those need to be microservices or you could you instead have one monolithic payment service that handled all those use cases?	lamontcg	9.785013	-7.3581443	comment	3.0	11.5	1698009361	-13.815942
38070619	That's technical, and not architectu	That's technical, and not architectural. I'm _all about_ technical solutions to lack of discipline, and in fact I think technical and process solutions are the only immediate way to create cultural solutions (which are the long-term ones). I'd even consider mi	nevinera	9.819776	-7.3294926	comment	3.0	11.5	1698679501	-13.8192005
38073048	No one says you can't have all of yo	No one says you can't have all of your microservices use the same language...	tsss	9.808031	-7.359409	comment	3.0	15.5	1698688416	-13.771934
38198496	If you want the code to run slower, 	If you want the code to run slower, yes, you could do that. Because there are no pointers in Fortran, only arrays, and because arguments to functions aren't allowed to alias (let's ignore the horror of COMMON blocks for now), aggressive optimization and vector	not2b	10.496612	-7.386873	comment	3.0	13.0	1699484507	8.825495
38381295	Fortran can be faster than C because	Fortran can be faster than C because it has a more restrictive memory model (compiler can make more optimizations when it knows nothing else is aliasing some memory)	smacke	10.507067	-7.3561864	comment	3.0	10.5	1700670202	8.84882
38446843	Strange... Presumably production dep	Strange... Presumably production deployments of FDB are on Linux. Last time I heard, Swift support on Linux is second-class. Is the plan to deploy on Mac OS instead of Linux? Or is Swift support on Linux sufficient for FDB needs?I must say I am not a fan of th	boris	10.467643	-7.8277526	comment	3.0	10.5	1701185991	-10.839301
38500185	The object oriented part of Objectiv	The object oriented part of Objective-C was never meant for high performance code. Apple documentation always recommended using C when performances are an issue, which can be easily done because Objective-C is in fact C plus a bunch of object oriented concepts	galad87	10.507155	-7.6812124	comment	3.0	13.5	1701538251	5.7067375
26935859	Just like Objective-C, it is a langu	Just like Objective-C, it is a language for Apple platforms and that is about it.Try to use GNUStep to see how much an Apple language has managed to thrive outside of the ecosystem.	pjmlp	10.495766	-7.6661377	comment	3.0	11.0	1619379425	-7.1742735
26978801	For folks who have never used Fortra	For folks who have never used Fortran, how is the day to day life compared to Python or Java?	oblio	10.4883795	-7.4163437	comment	3.0	11.0	1619686239	8.897047
27266987	True, the APIs are usually top notch	True, the APIs are usually top notch, but I really hope SwiftUI will get another revision or something. It looks good on paper, but you constantly run into things that are really weird, odd, and feel like hacks. State management is too complicated as well.	sarsway	10.456064	-7.8235626	comment	3.0	12.5	1621876323	-10.84871
27314679	The downvotes are utterly ridiculous	The downvotes are utterly ridiculous.Unlike other parts of GCC, GNAT copyright is held by AdaCore due to some special arrangement with the FSF.For the compiled CE releases on their website, AdaCore strips the runtime exception:  -- As a special exception under	tobiasu	10.573301	-7.5183783	comment	3.0	11.0	1622205648	-6.631818
27371901	They wants to run JS faster, on plat	They wants to run JS faster, on platforms where they can run Swift/native with zero overhead. As of why? Go figure.	skratlo	10.526132	-7.7392564	comment	3.0	14.5	1622656751	-10.850809
27395519	Who still uses Objective-C?	Who still uses Objective-C?	throw14082020	10.481482	-7.7372713	story	3.0	4.0	1622825051	5.67826
33479769	Is there a reasonably neutral compar	Is there a reasonably neutral comparison of Mathics vs Mathematica anywhere?Based on an amazing showcase[1] Mathematica is right at the top of my list of languages to learn if it (and at least some of the surrounding tooling) ever becomes open source. I wonder	l0b0	10.315627	-7.2309556	comment	3.0	17.5	1667641936	9.9091015
33492978	But doesn't this have the same overf	But doesn't this have the same overflow issue, e.g. if R is a large positive number and L is a large negative one?	mqus	10.612015	-7.018313	comment	3.0	12.0	1667744991	-6.984532
33597322	That he puts microservices scare quo	That he puts microservices scare quotes says it all, really. He clearly doesn’t understand modern large scale software architectures and is falling back on his archaic, outdated, and limited experience.This isn’t the guy you want making these kinds of decision	_djo_	9.784082	-7.354787	comment	3.0	10.5	1668446005	-13.816156
33603491	jfc the idiot turned off core servic	"jfc the idiot turned off core services for the system and now people can't log in
https://twitter.com/kenklippenstein/status/15922599381095219...how much does it cost to run some microservices, what a tool"	superchroma	9.783576	-7.362076	comment	3.0	17.5	1668471925	-13.809924
33770623	It's still braindead and idiotic. Ev	It's still braindead and idiotic. Every relevant platform nowadays has well defined overflow for signed ints. A sane C compiler should go with that and base its optimizations on it. GCC has been a pile of garbage in this regard for many years now. Its devs get	iforgotpassword	10.630684	-7.0247517	comment	3.0	16.5	1669619894	-7.020917
33772615	The biggest problem with UB, as inte	The biggest problem with UB, as interpreted by C/C++ compilers is the unfounded belief that the spec says that you can assume any path that leads to UB is defacto incorrect and can be ignored. That's the bogus logic required for steps 13-16 to be true.That int	olliej	10.652184	-7.104947	comment	3.0	12.5	1669637424	-7.1034374
33774478	Can someone provide explanation why 	Can someone provide explanation why SwiftUI is slow? My intuition was that it should be extremely fast, especially on the modern MacBooks. I write quite a lot of desktop apps in Flutter (or run mobile apps as MacOS builds, because it's easier to develop and de	divan	10.46931	-7.8226323	comment	3.0	11.5	1669647886	-10.887262
33777037	I've worked with both SwiftUI (iOS/M	"I've worked with both SwiftUI (iOS/Mac) and Jetpack Compose (Android).Surprisingly, I've found that Compose is hands-down better on both the ""developer experience"" front as well as the ""UI quality"" frontSwiftUI is ""clever"" and it's a black box. You get what yo"	iamcalledrob	10.451948	-7.8049984	comment	3.0	11.5	1669658561	-10.870132
33766782	A Fortran-Compiled List Processing L	A Fortran-Compiled List Processing Language (1959) [pdf]	abrax3141	10.492565	-7.3702197	story	3.0	22.0	1669582176	-6.102246
33808648	Are they? The last time I tried to u	Are they? The last time I tried to use DifferentialEquations.jl, most of the examples were broken. I've not yet run into a broken scipy example...	patrick451	10.14624	-7.7911534	comment	3.0	12.5	1669846562	10.70645
33833638	PyTorch and JAX are both open-source	PyTorch and JAX are both open-source libraries for developing machine learning models, but they have some important differences. PyTorch is a more general-purpose library that provides a wide range of functionalities for developing and training machine learnin	staunch	10.0182	-7.9238105	comment	3.0	15.0	1670002218	10.541795
33833819	I was reading this and thinking it w	I was reading this and thinking it was a pretty terrible answer - glad it is just generated by an AI and not you personally so I'm not insulting you.JAX is basically numpy on steroids and lets you do a lot of non-standard things (like a differentiable physics 	whimsicalism	10.01739	-7.92895	comment	3.0	13.5	1670002923	10.527032
33889141	Well, I mean really most of the micr	Well, I mean really most of the micro service architectures are just monoliths with network calls between the components.	kemiller2002	9.793042	-7.3463316	comment	3.0	10.5	1670373134	-13.809477
34030479	Swift and Objc? Sure. Swiftui and ui	Swift and Objc? Sure. Swiftui and uikit? Not as easy.Is it technically possible? Yes. is it easy? Maybe not.	admax88qqq	10.462369	-7.815699	comment	3.0	11.0	1671300810	-10.826383
34056311	Checked overflow operations are kind	"Checked overflow operations are kind of the goto operation for ""it's easy in assembly, hard in programming languages""--in hardware terms, it's usually check a flag, but since flag registers are not provided for in high-level languages, it becomes a game of try"	jcranmer	10.640145	-7.298205	comment	3.0	10.5	1671477443	-6.945403
22715369	A monolith can handle millions of da	A monolith can handle millions of daily unique users. The database is the hard part.In the web world, if you have less than 10s of millions of daily users, as long as you design an application that holds no state itself, the architecture is usually more import	bcrosby95	9.807055	-7.310185	comment	3.0	14.0	1585441612	-13.816246
22752962	UBSan ␇ Runtime	UBSan ␇ Runtime	gok	10.654907	-7.057774	story	3.0	22.0	1585771246	-7.1008177
22796671	For every microservices system I've 	"For every microservices system I've seen, this feels about right.It oversimplifies things a bit, though.It's odd; I've never seen a ""monolith"" simplified by moving to microservices, but everyone seems to be doing them."	woofie11	9.79144	-7.360003	comment	3.0	12.0	1586199429	-13.831291
22813390	I continue to wonder how does JAX co	I continue to wonder how does JAX compare to Zygote.jl see https://twitter.com/oxinabox_frames/status/12394957113324789... for a good start	xiaodai	10.018896	-7.939779	comment	3.0	12.0	1586357196	10.56789
22821048	I’ve been writing Swift since the da	I’ve been writing Swift since the day it was announced.I believe in the language as a system programming language (and I’ve done systems programming in the past).That said, like C#, it is strongly associated with Apple as a “private” language (despite being op	ChrisMarshallNY	10.474517	-7.8205547	comment	3.0	20.5	1586425307	-10.831731
22822595	Even worse, macOS is tied to hardwar	Even worse, macOS is tied to hardware years, so even though I've got 3 working Macintoshes here, only 1 of them can run the current version of Swift (and just barely).  My quad-Xeon can't run the latest minor upgrade, even though the compiler is faster than th	ken	10.470232	-7.8205304	comment	3.0	10.5	1586440773	-10.842737
22823120	Google creating a new language? To s	Google creating a new language? To shut it down in 3 years? Swift will be around in 15 years. It would be Microsofts F#, or Googles Dart all over again. It's a monumental task to create a language that people want to use, and an even bigger task to create tool	danielscrubs	10.56441	-7.7534146	comment	3.0	32.5	1586444118	-10.832565
17913064	How do you prefer to use e.g. malloc	How do you prefer to use e.g. malloc?	rightbyte	10.671889	-7.14478	comment	3.0	13.5	1536097331	8.891583
18945132	> It's very hard to recommend that s	> It's very hard to recommend that students and colleagues grow invested in toolchains involving proprietary software that they may not reliably be able to afford/activate/use in the future, particularly when some students may end up working in developing nati	wjn0	10.196152	-7.773995	comment	3.0	12.5	1547868388	10.425582
18954074	Microservices failure stories?  “All	Microservices failure stories?  “All of them.  The End”	coredog64	9.7824335	-7.3599615	comment	3.0	18.0	1548004253	-13.814957
18954877	The biggest reason for choosing micr	The biggest reason for choosing microservices _should_ be scaling development teams: microservices allow multiple teams to work on different code bases, without stepping on each other's toes.What actually happens, tough, is that (uninformed) people choose it b	stingraycharles	9.784392	-7.3631897	comment	3.0	12.0	1548011155	-13.818939
18999792	Someone could even implement the fea	Someone could even implement the feature in a dynamic language like Python or Lisp for a particular application. Does that mean the application is infringing the patent because they didn't use Swift?	black-tea	10.464196	-7.809936	comment	3.0	11.0	1548435254	5.5911293
19029578	I still find it hard to write mainta	I still find it hard to write maintainable multi-threaded code for macOS or iOS [...] without having to worry about the minutiae of parallelism (threads, semaphores, locks, barriers, etc.).I find this surprising, as GCD does insulate you from that low-level st	iainmerrick	10.533563	-7.81585	comment	3.0	13.5	1548794126	-10.820166
18992981	Swift 5 Release Notes for Xcode 10.2	Swift 5 Release Notes for Xcode 10.2 beta	Austin_Conlon	10.453719	-7.828064	story	3.0	33.0	1548364102	-10.830028
19139718	I find that wolfram mathematica is i	I find that wolfram mathematica is incredibly painful to use except for symbolic math. And even then.. the kernel often crashes, syntax (and the combination of how it is entered) is weird, and overall often things (like dynamic graphics) would just stop workin	zwaps	10.32838	-7.1497736	comment	3.0	11.5	1549929224	9.900752
19197994	> Fortran is going to make a big com	> Fortran is going to make a big comeback. I can feel it.It is indeed one of the few existing languages appropriate for generic experimentation in numeric programming.For example, computing the product of two matrices in C or Fortran is exactly as fast by writ	enriquto	10.519354	-7.389206	comment	3.0	10.5	1550572378	9.1293545
19186113	Inline types and functions in Swift	Inline types and functions in Swift	ingve	10.5376	-7.8147917	story	3.0	40.0	1550429767	-10.82918
19192856	Chris Lattner on the Origins of Swif	Chris Lattner on the Origins of Swift	ingve	10.467022	-7.832898	story	3.0	120.0	1550514383	-10.849671
19235143	"It's not bikeshedding because:
1) it"	"It's not bikeshedding because:
1) it is pervasive and fairly importsnt
2) it's kind of a deep indication that something is amiss. It's like a language written in 2019 that has default dynamic not lexical binding, not in terms of importance but in terms of it's"	zimablue	10.173731	-7.9749413	comment	3.0	15.0	1550951653	10.734714
19233800	I actually like 1-based for numerica	I actually like 1-based for numerical work. A lot of great languages (Smalltalk, APL, Lua...etc) use it too.It makes sense with matrices.	4thaccount	10.47049	-7.467888	comment	3.0	24.5	1550936895	9.43393
19288213	In an engineering setting, MatLab ha	In an engineering setting, MatLab has more mindshare, but that may be changing.The related product Simulink is not uncommon in larger engineering firms also.Back in the day, the community around MatLab was quite large, but likely has declined in size in the la	TickleSteve	10.188727	-7.7843785	comment	3.0	10.5	1551514263	10.444872
19288234	Can anyone comment on how Octave com	Can anyone comment on how Octave compares specifically to Mathematica, in terms of features and ease of use?	rwmj	10.186864	-7.789479	comment	3.0	12.5	1551514590	10.420062
19288321	Great job to the Octave team!Octave 	Great job to the Octave team!Octave is a great tool, and it addresses a very real need - breaking MATLAB's stranglehold on academic computing.Every programming course I took as an EE undergrad (other than Intro to Programming) was in MATLAB. 14 years later, an	nrclark	10.193005	-7.795296	comment	3.0	11.0	1551516375	10.464802
15880953	Objective-C was the first language I	Objective-C was the first language I used where I looked under the covers and tried to understand the machinery of the language, and its extremely dynamic nature makes it a great place to start to understand language runtimes.It's so conceptually simple, and (	favorited	10.513463	-7.6966305	comment	3.0	12.5	1512759361	5.6873746
15978148	Because like any design pattern micr	Because like any design pattern microservices should be used to address a specific problem. Martin Fowler describes that particular design pattern here in great detail: https://martinfowler.com/articles/microservices.htmlMicroservices however unfortunately hav	BjoernKW	9.783141	-7.3611965	comment	3.0	10.5	1513857259	-13.81308
16015423	I'm watching some OOP videos from mi	I'm watching some OOP videos from mid-eighties right now. Can't shake the feeling that the original notion of OOP was solving the same problems as microservices try to solve today, but with far more elegance and more coherent theoretical framework.(Example: ht	romaniv	9.79951	-7.3576646	comment	3.0	10.5	1514390006	-13.82869
16016349	Or microservices are strongly indica	Or microservices are strongly indicated if you are in a SaaS industry as we are (HR software), where individual customers want choice over the components making up their own stack.	abraae	9.781663	-7.3633075	comment	3.0	12.0	1514396048	-13.812841
16011521	An Introduction to Microservice Base	An Introduction to Microservice Based Architecture Through Story – Part 2	emforce	9.781581	-7.364793	story	3.0	59.0	1514328197	-13.81426
16817983	Backwards-compatibility is an intere	"Backwards-compatibility is an interesting story on the mac. The Objective-C ABI on 32-bit macOS is what is called the ""fragile"" runtime because it has the fragile base class problem. Originally Objective-C had the same design flaw as C++: the ivars of every cl"	xenadu02	10.480912	-7.716369	comment	3.0	13.0	1523507424	5.694642
16841297	It's not, but for most people it may	It's not, but for most people it may not matter. Mathematica seems to have a much larger set of integrals, differential equations, special functions, etc. that it can recognize. So as much as I dislike the language itself, I do keep Mathematica installed becau	ChrisRackauckas	10.18193	-7.8998766	comment	3.0	11.0	1523768153	10.723994
16868733	> In static languages expression hav	> In static languages expression have type. In dynamic languages values have type.I don't think this is true. In a dynamic language all values, including expressions, share a single type - a union of all possible types. In a static language you can limit which	staticassertion	10.315444	-7.9638214	comment	3.0	11.0	1524069300	10.755104
16901026	Yes, but it’s not officially “condon	Yes, but it’s not officially “condoned”, so it feels “out of place”. This is very individual, of course, but I don’t like bending the system to get patterns that are not “natively” supported.In Swift, you cannot currently create classes in code, enhance and sw	LeoNatan25	10.478	-7.8004637	comment	3.0	11.0	1524466122	-10.83376
16892501	Show HN: FunctionKit – Approachable 	Show HN: FunctionKit – Approachable functional concepts brought to Swift	mpangburn	10.505777	-7.8121667	story	3.0	51.0	1524334314	-10.847177
16929141	It's not like it's the first. Doesn'	It's not like it's the first. Doesn't Fortran default to 1-based? R and Matlab are also 1-based. Julia like those two are aimed at a mathematical domain, not zero-based offsets.Anyway, it's not hard to get used to.	goatlover	10.2642	-7.8088236	comment	3.0	13.5	1524721730	10.669517
16937762	Still a bit more verbose than Python	Still a bit more verbose than Python. What would you gain by doing the same in Swift actually? If you have to type more code to do some experiments, and still have to import Python libraries for extra functions as they do in that example, what's the selling po	bitL	10.487533	-7.8188753	comment	3.0	11.0	1524792745	-10.8377
16936151	Does Swift have a large community be	Does Swift have a large community beyond iOS apps? Last I used it was years ago, right after it was introduced by Apple. I'm curious if it has found growth in other areas.	waleedka	10.459343	-7.824493	comment	3.0	12.5	1524779164	-10.858421
16990584	Swift expands continuous integration	Swift expands continuous integration system to support more platforms	alex_marchant	10.465025	-7.8227916	story	3.0	41.0	1525386448	-10.817523
17017975	Swift LispKit	Swift LispKit	arm	10.479755	-7.8302455	story	3.0	10.0	1525741668	-10.794076
21065436	Yep, I love objective-c, sure with a	Yep, I love objective-c, sure with a few syntax frustrations: ([[]]). I don't do any apple work anymore, but I'd love to be able to use named parameters, and it's message passing in plain c. Every couple of years I waste an enjoyable few days on exploring gith	monkeycantype	10.506169	-7.72866	comment	3.0	13.0	1569365039	5.667853
21086815	Swift feels like a Frankenstein lang	Swift feels like a Frankenstein language though, there are so many keywords and new ones get added in every update. This article here [1] stack ranked a few languages by number of keywords and Swift is #4 on the list. And in Swift 2.1 they added some more, lik	choxi	10.519255	-7.8176513	comment	3.0	11.5	1569540958	-10.841943
22866245	Just going to inject that this impac	"Just going to inject that this impacts a bunch of random optimizations and benchmarks. Just to fabricate an example:    for (int i = 0; i < N; i += 2) {
        //
    }

Reasonably common idea but the compiler is allowed to assume the loop terminates precisel"	klodolph	10.655604	-7.044216	comment	3.0	12.5	1586873772	-6.9981956
22866760	No, it's exactly the opposite. Witho	No, it's exactly the opposite. Without UB the compiler must assume that the corner case may arise at any time. Knowing it is UB we can assert `n+1 > n`, which without UB would be true for all `n` except INT_MAX. Standardising wrap-on-overflow would mean you ca	andrepd	10.626299	-7.0785837	comment	3.0	15.0	1586876141	-7.0811205
22866785	Does it concern you how aggressively	Does it concern you how aggressively compiler teams are exploiting UB?	3JPLW	10.670387	-7.15229	comment	3.0	31.5	1586876238	-7.02272
22866507	Another approach would be a standard	Another approach would be a standard library of arithmetic routines that signal overflow.If people used them while parsing binary inputs that would prevent a lot of security bugs.The fact that this question exists and is full of wrong answers suggests a langua	tlb	10.650763	-7.0460534	comment	3.0	11.0	1586875014	-7.0355253
22898675	of the links you put on the last pag	of the links you put on the last page (or other gpu languages you might not have included) what's the most mature way to write decent gpu code right now (even if not necessarily optimal). i'm right this moment working on a project where i'm trying to speed up 	throwlaplace	10.092449	-7.918569	comment	3.0	13.0	1587129311	10.697404
22949694	This is yet another unsafe language 	This is yet another unsafe language bug. I know it's no easy task, but the sooner Apple gets iOS rewritten in Swift the better.	zionic	10.471754	-7.8137603	comment	3.0	11.5	1587586423	-10.865521
22886239	Testing Memory Allocators on Real Wo	Testing Memory Allocators on Real World Work Loads (2018)	signa11	10.63979	-7.1076818	story	3.0	27.0	1587013482	8.828338
22997549	memset is not required to do anythin	memset is not required to do anything if the side effects are not observable; this is the entire reason why memset_s needed to be added (and also why __attribute__((packed)) is recommended for anything that is being sent directly over the wire, if this kind of	saagarjha	10.634904	-7.0525784	comment	3.0	14.0	1588006290	-7.0896816
23017589	Yeah, the problem with microservices	Yeah, the problem with microservices is because the organisation structure is wrong. I’ve literally heard every excuse about microservices at this point. My architecture is better but it doesn’t have a snappy name; it’s called the smallest possible number of s	andy_ppp	9.782466	-7.357571	comment	3.0	17.5	1588156420	-13.821708
23102513	I'm pretty sure Matlab will last for	I'm pretty sure Matlab will last forever. There is a healthy company backing it with technology lock in from many, many companies where programming is not their core competence.	newswasboring	10.20712	-7.775466	comment	3.0	10.5	1588856946	10.431591
23171952	I have not kept up with recent devel	I have not kept up with recent developments, but Fortran has historically been noticeably faster than even C/C++ for numerical computations. This difference used to be quite stark due to limitations in C itself: http://www.ibiblio.org/pub/languages/fortran/ch1	ojnabieoot	10.500633	-7.375826	comment	3.0	13.0	1589404783	8.848159
23173124	> Fortran has historically been noti	> Fortran has historically been noticeably faster than even C/C++ for numerical computationsNowadays: faster - maybe, noticeably - I doubt it.> supercomputers have better-optimized Fortran compilers than C compilersI don't know about supercomputer compilers bu	jjdredd	10.490049	-7.4036007	comment	3.0	11.5	1589412672	8.825508
23199671	No OP, and I don't know much about g	"No OP, and I don't know much about game development, but ""without any change at all"" is too strong. SDL only does so much, and you still need platform-specific APIs for file access, networking (if applicable), threading, etc. So you'll still need platform-spec"	RussianCow	10.449358	-7.8246965	comment	3.0	12.5	1589593173	-10.802734
23200664	I really enjoy swiftUI. It appears l	I really enjoy swiftUI. It appears like it tried to emulate react and succeeded on a few fronts, is better in a few fronts (child modifying parent variable), and worse in a few fronts (side effects).That being said, my experience with SwiftUI users is that the	Diesel555	10.474244	-7.819697	comment	3.0	16.0	1589605813	-10.851862
23201766	I'd say swift is currently probably 	I'd say swift is currently probably the best languages out there. Language features, standard library, performance, memory management.	jbverschoor	10.483795	-7.8409996	comment	3.0	11.5	1589619997	-10.837055
23229055	Well I think that's one of the benef	Well I think that's one of the benefits of microservices actually.Cut out all the services that have deep tribal knowledge from people let go and replace them with new services if the service is actually important or just remove it altogether.	MisterPea	9.772962	-7.361858	comment	3.0	11.5	1589840335	-13.84843
23229911	I kind of wonder if modern FORTRAN w	I kind of wonder if modern FORTRAN would be the right option... Or pushing towards something like Oberon or a Pascal dialect.	madhadron	10.4882345	-7.4026613	comment	3.0	12.0	1589847332	8.832698
23294726	> The ubiquity of parenthesis has a 	> The ubiquity of parenthesis has a purpose - it lets you treat code as data. Your argument only makes sense if syntax choice were 100% based on taste. But it's not (simplicity of syntax brings with it practical features), so it's great that some people are ex	doublesCs	10.316609	-7.877396	comment	3.0	10.5	1590354081	10.746844
23354310	If you have tons of Swift code that 	If you have tons of Swift code that needs to run in watchOS, iOS, iPadOS AND the cloud, this would kinda make sense... but how frequently is that the case?  When I was still doing mobile the goal was to write as LITTLE client-side code as possible and put as m	mikece	10.475808	-7.82382	comment	3.0	12.0	1590779725	-10.8136015
28015263	Strict memcpy() bounds checking for 	Strict memcpy() bounds checking for the Linux kernel	pabs3	10.643067	-7.017645	story	3.0	70.0	1627705180	-7.0966835
28091990	Why redo something if it works? Peop	Why redo something if it works? People are still using Fortran because it works well for certain applications. Just because its old doesn't mean its outdated.I could even argue that since Emacs hasn't been phased out (and still has a decent user base) that it 	grae_QED	10.472245	-7.405167	comment	3.0	13.0	1628279525	8.795046
28114462	It is weird that Fortran was moderni	"It is weird that Fortran was modernized 30 years ago, but the old prejudicies live on. Maybe programming languages teachers in CS departments are now telling their students the same jokes ""look how primitive FORTRAN is"" that their own teachers told them a gene"	sampo	10.46239	-7.4089637	comment	3.0	18.0	1628501903	8.79017
28115446	I like how constrained the language 	I like how constrained the language was:> All arithmetic in B is integer, unless special functions are written. There is no equivalent of the Fortran IJKLMN convention, no floating point, no data types, no type conversions, and no type checking. Users of doubl	yiyus	10.498978	-7.384617	comment	3.0	12.5	1628509103	8.83825
28312035	A simple string handling library for	A simple string handling library for Microsoft Fortran-80	CTOSian	10.483194	-7.374626	story	3.0	53.0	1629966020	8.775331
28345672	> The last point was also in retrosp	> The last point was also in retrospect not sot good for the language ecosystem: buyers wanted a 100% on this test suite before considering your Ada compiler, which means dev had hundreds of compiler bugs to fix and no paying customers.You mean, they couldn't 	mike_hock	10.656525	-7.727471	comment	3.0	11.0	1630233495	-5.0940332
28367192	Yeah the fact that they forbid bench	Yeah the fact that they forbid benchmarks pretty much tells you all you need to know. Anyway once you get to something that autovectorises array operations there's not really anywhere to go is there?I seriously doubt it is really any faster than Matlab, Fortra	IshKebab	10.490452	-7.2783513	comment	3.0	18.0	1630413357	8.835794
28378541	A couple of people seem surprised th	"A couple of people seem surprised that the ""idiomatic"" Swift code seems to perform much worse. Unfortunately the blog post doesn't provide much details on the code it is actually running, so I tried my hand at guessing:  let vC = [Float](repeating: 1, count: 4"	saagarjha	10.551674	-7.8135295	comment	3.0	12.0	1630496267	-10.842719
28441957	If you think that Qt is more bloated	If you think that Qt is more bloated than Cocoa I don't know what to say. That objc runtime is so heavy and slow, good luck making it run on microcontrollers	jcelerier	10.479084	-7.7085176	comment	3.0	15.0	1630999533	5.662982
28558940	Scientific computing has the reputat	Scientific computing has the reputation, perhaps unfair, of being write-only programming. True?In the 60+ years since Fortran was invented, enormous strides in computer languages have made source code more readable, and 99.9% of new programmers learn on only t	AlbertCory	10.475494	-7.407553	comment	3.0	10.5	1631833556	8.893916
28564042	I think it's mostly targeted at C or	I think it's mostly targeted at C or C++ users. Swift is garbage collected.	Zababa	10.492325	-7.8114815	comment	3.0	10.5	1631877651	-10.825336
28620002	How is this true? Swift is very stra	How is this true? Swift is very straightforward, and similar to other languagesThat's the argument, most people want to program in JavaScript or C++, learning is such a bother.  The Swift syntax is more characters than ObjC's syntax.	protomyth	10.529697	-7.808908	comment	3.0	15.5	1632335799	-10.831951
28620738	> Meanwhile Objective-C is slow, uns	> Meanwhile Objective-C is slow, unsafe by default, with super ugly syntax only a mother could love. More than half of Apple's CVE/iOS vulnerabilities lately have been from parts of the OS that still use ObjC,Objective-C is quite fast–in many cases faster than	saagarjha	10.484559	-7.7770433	comment	3.0	16.5	1632339246	5.7352233
28624424	The new generation doesn't seem to h	The new generation doesn't seem to have a need for extracting substrings from strings then. The existing Swift syntax for slicing strings [1] is horrible.[1] https://www.cocoaphile.com/posts/string-slicing-in-swift	selcuka	10.544631	-7.752734	comment	3.0	10.5	1632362186	-10.842904
28634455	Is this the path to a tightly couple	Is this the path to a tightly coupled distributed monolith?	baldeagle	9.813564	-7.326587	comment	3.0	14.5	1632427084	13.486879
28638460	Don’t update your apps till after Ap	Don’t update your apps till after Apple releases a patch. The first two are API calls that apps can make.An exploit wishing to exploit these vulnerabilities has to be coded to make these calls. Most apps don’t dynamically construct arbitrary API calls. In fact	babesh	10.484337	-7.796665	comment	3.0	13.5	1632455870	-10.796718
28640634	I am not able to compile the first t	I am not able to compile the first two of these (after the first two I stopped trying) with the newest Xcode on iOS 15.0. I haven't tried the other two or older tools.The source code as given also had syntax errors in it.	raspasov	10.463995	-7.748689	comment	3.0	13.0	1632479654	5.5957155
28662089	Exciting stuff.With async/await land	Exciting stuff.With async/await landing last week and the leaps and bounds of the package manager over the last couple years, the ergonomics of using Swift for non-iOS work has gotten significantly better. Coupled with the built in safety and elegance of the l	joshuawright11	10.466198	-7.821333	comment	3.0	14.0	1632672755	-10.829009
27886770	Beyond malloc efficiency to fleet ef	Beyond malloc efficiency to fleet efficiency	LeegleechN	10.666492	-7.164448	story	3.0	40.0	1626725423	8.919052
27898277	Microservices at Snapchat	Microservices at Snapchat	chadd	9.78099	-7.363712	story	3.0	7.0	1626810051	-13.814162
12015160	Serious question: Why would Apple th	Serious question: Why would Apple then create Swift and Swift Playgrounds for iPad in order to get more people to program? Seems like they are giving us some tools.	donkeyd	10.463309	-7.8006024	comment	3.0	12.0	1467372024	-10.864992
12135287	You are if you care about whether yo	You are if you care about whether you're deploying things that aren't necessary. With microservices you can take a single specific service that two projects share and reuse it. With a monolith you can't unless you deploy everything else as well. That can easil	onion2k	9.793643	-7.354457	comment	3.0	10.5	1469085439	-13.825219
12279638	None of the material in these posts 	"None of the material in these posts could be used directly to complete assignments for the class.  I suppose someone could attempt to ""back-port"" some of the Python code to Octave, but if you're going to that much trouble it's probably easier to just solve it "	jdwittenauer	10.234168	-7.758015	comment	3.0	14.5	1471048173	10.359374
12288256	I love Swift and work on the web, so	"I love Swift and work on the web, so I would love to see a serious Swift to JS compiler. Unfortunately, this isn't it.One major part of Swift is its value types; many core types, including arrays, are passed by value, like a C struct. So  var a = [1, 2]
  var "	spicyj	10.527125	-7.792294	comment	3.0	18.0	1471227590	-10.74148
12303629	> Any positive experiences with micr	> Any positive experiences with micro-services here?Yep. We already had a feature flag system, a minimal monitoring system, and a robust alerting system in place. Microservices make our deployments much more granular. No longer do we have to roll back perfectl	humanrebar	9.792342	-7.3538175	comment	3.0	11.5	1471430684	-13.813264
12509023	"The title should be ""I've never impl"	"The title should be ""I've never implemented microservices properly, so you should avoid them."""	gjolund	9.782719	-7.364098	comment	3.0	10.5	1473967396	-13.811364
12535286	This could either be brilliant or a 	"This could either be brilliant or a total nightmare:""Support for arrays with indexing starting at values different from 1. The array types are expected to be defined in packages, but now Julia provides an API for writing generic algorithms for arbitrary indexi"	jmde	10.248579	-7.890641	comment	3.0	12.5	1474323928	10.665434
12908287	So my point was actually about the s	So my point was actually about the specifics of picking up a language to do a new project, and then complaining about it.  (Hence my example of writing a serious book in a language you don't know.)I think you really go into superlatives here.  It's not fair fo	logicallee	10.467246	-7.807382	comment	3.0	13.5	1478682455	-10.883084
12968891	Was hoping for Objective C support w	Was hoping for Objective C support when I saw it. Would love to get rid of Xcode.	scosman	10.4774885	-7.7296705	comment	3.0	11.0	1479315493	5.6670427
13025620	Thank you for the kind words. I cann	Thank you for the kind words. I cannot comment on the performance hit yet but this is something I plan to examine soon. Based on experience I can guess that the performance decrease from using recursion could be about an order of magnitude or more for large ar	milancurcic	10.498994	-7.3863344	comment	3.0	13.0	1479933181	8.7967415
12994132	DeepLearningKit: Open source framewo	DeepLearningKit: Open source framework for Apple platforms using Swift	markwhiting	10.464325	-7.820699	story	3.0	55.0	1479572733	-10.848796
13168169	I think the popular counterpoint has	I think the popular counterpoint has been - microservices _forces_ consideration of a good API because you are now on the network even if its just localhost.	eej71	9.780289	-7.36145	comment	3.0	11.0	1481647520	-13.831652
13186464	Dijkstra's handwriting is quite char	Dijkstra's handwriting is quite charming. If you've never seen it, it's worth clicking the “EWD831” link at the top right to see the scan of the handwritten original.	mayoff	10.449446	-7.139145	comment	3.0	14.5	1481823966	-9.4667425
13205583	I'm not sure I agree.My girlfriend h	I'm not sure I agree.My girlfriend has decided to learn programming. She started with Swift because she wanted to write iOS apps. The course she's using targets Swift 2 but her install is Swift 3, or something like that (I haven't looked into it much).XCode co	mike_hearn	10.466752	-7.802883	comment	3.0	12.5	1482064534	-10.831341
13213132	"""In server-side Swift, you don’t use"	"""In server-side Swift, you don’t use interface builder, so that reduces most of your crashes to none.""You don't use that in iOS app development either unless you are completely insane or are just beginning iOS development and don't know how to make UI properly"	illuminati1911	10.460937	-7.8272667	comment	3.0	13.0	1482168751	-10.8306875
13222566	All the Hacker News kids are crazy a	"All the Hacker News kids are crazy about microservices right now.In three years, people will have realized it wasn't such a good idea, and moved on to the next ""this will solve everything"" fad.Once you have seen enough of these fads go by, it's pretty obvious."	jblow	9.786656	-7.3560896	comment	3.0	11.5	1482258932	-13.81798
13334185	I know it's proprietary as hell, but	I know it's proprietary as hell, but, honestly, you can't beat Mathematica for general symbolic math use.  It has an incredible array of libraries available for just about every need, and the language is very pleasant to work with.	pmiller2	10.317557	-7.187008	comment	3.0	17.0	1483680466	9.87485
13336014	I've devoted my life to beating Math	I've devoted my life to beating Mathematica for general symbolic math use.  Don't tell me I can't. :-)	williamstein	10.350961	-7.119255	comment	3.0	10.5	1483708795	9.897137
13371008	Pretty much none of Apple's current 	Pretty much none of Apple's current software is written in Swift though, from what I can tell.	shiny	10.463476	-7.812077	comment	3.0	11.5	1484098194	-10.84342
13334835	Ask HN: Are startup hiring practices	Ask HN: Are startup hiring practices asking too much?	alangibson	9.764494	-7.324802	story	3.0	4.0	1483692992	-13.804203
13429761	At the last company I was at, our se	At the last company I was at, our search microservice was fast (average response was well under 100ms) and it didn't crash once while I was there. At a larger company, this may not be an accomplishment. At a startup, this is the bees knees.Meanwhile, the rest 	brwr	9.783351	-7.359092	comment	3.0	10.5	1484769642	-13.820751
13431266	"Swift: better OO, syntax, IDE;
Go: b"	"Swift: better OO, syntax, IDE;
Go: built-in concurrency;Swift is a great joy for iOS development, where compatibility with Objective C makes things smooth, and operation queues are good enough for concurrency. Xcode is a big productivity booster. Good to break"	yvsong	10.477422	-7.8324494	comment	3.0	17.0	1484780279	-10.848146
13431555	Everything you saîd about swift is c	Everything you saîd about swift is correct for small sized projects. The story becomes much much different once you work on a piece of code for a few months with a team. Then xcode crashes, swift builds slowly ( in minutes), you start to be crippled because of	bsaul	10.475662	-7.7932115	comment	3.0	12.5	1484782660	-10.840247
13512711	There is (at least) a FORTRAN and a 	There is (at least) a FORTRAN and a C edition. The interesting thing is that it is not a simple translation. The FORTRAN edition is completely (text and code) written using 1-based indexing, the C edition uses 0-based indexing. If I remember correctly the fore	weinzierl	10.568465	-7.3999915	comment	3.0	15.5	1485673111	9.610988
13534217	Swift is a nice language.  What's re	Swift is a nice language.  What's really missing is better non-Mac support.  Tools, libraries, etc.  It'll become a Top 10 language (by popularity) once it becomes a real option for Linux and Windows.	melling	10.494066	-7.8075476	comment	3.0	11.0	1485890433	-10.824754
13487339	How to build Apache modules in Swift	How to build Apache modules in Swift	helge5	10.466506	-7.8229694	story	3.0	61.0	1485387658	-10.870474
21226535	> We run about 1,100 microservices w	> We run about 1,100 microservices written in GoAsking as a university student: is this a common number of microservices to have running in production? It looks like monzo has about 1,351 total employees [0]. If all of them were software engineers, this would 	Shoop	9.782073	-7.3630633	comment	3.0	10.5	1570815080	-13.823242
21368377	I would say use C.  Interfacing C wi	I would say use C.  Interfacing C with Java is simple JNI.  Interfacing C with Swift is very simple, too.	ww520	10.5388565	-7.7556	comment	3.0	19.0	1572162335	-8.130997
21412562	I'm not sure why the discussion is a	I'm not sure why the discussion is always framed as Swift vs. Rust vs. Go.  It's not like any of them are the dominant backend languages.Swift can be a great choice for backends for lots of reasons (shared code between client and server, client devs become ful	favorited	10.612104	-7.8929954	comment	3.0	22.5	1572549544	-10.832842
21412604	> This idea that for Swift to thrive	> This idea that for Swift to thrive as a server language it has to win some contest against Go and Rust makes absolutely no sense to me.That's not the point! It's that engineers have to use Mac machines to develop Swift because they're tied to a development p	echelon	10.575854	-7.886685	comment	3.0	14.5	1572549835	-10.838069
21409145	Functional Fortran	Functional Fortran	SiempreViernes	10.465236	-7.4005404	story	3.0	63.0	1572531993	8.793403
21455559	I’m interested in the term “distribu	I’m interested in the term “distributed monolith” and why shared libraries are bad, can you elaborate? (I’m an experienced dev who’s never worked on micro services). Say a service that consumed 6 other services became a service that consumed 3 other services a	d4nt	9.809171	-7.3345757	comment	3.0	15.5	1572980917	-13.81894
21460811	It seems crazy to me that you'd have	It seems crazy to me that you'd have to do a HTTP(S) request to find out whether a day was a working day. A HTTP(S) call which then probably does a DB lookup over the network. Just seems like an extra layer of overhead, when you could just have a library inste	trollied	9.791259	-7.367767	comment	3.0	13.0	1573030893	-13.809799
21490649	> translates into hundreds of execut	"> translates into hundreds of executed instructionsMy guess is that this would also be true under Rust, as soon as you start using some pretty common facilities such as Rc and RefCell. (Swift does essentially the same things under the hood.)That said, ""hundred"	zozbot234	10.606284	-7.8706565	comment	3.0	11.0	1573294471	8.49715
21496091	Using the widget set provided by the	Using the widget set provided by the platform is not easy, and that's not what druid tries to do. Rather, there's a platform abstraction layer (druid-shell) that takes care of all this stuff for you, and has all that nasty unsafe code in it, then it draws its 	raphlinus	10.576456	-7.872012	comment	3.0	12.5	1573354088	-10.865045
21545020	> but as soon as you enter a physics	> but as soon as you enter a physics-institution anywhere in the world, FORTRAN likely reigns supremeNot at CERN, but it used to be the case. It's C++ now.> It turns out that FORTRAN is a very good match for the way physicists think about their workI don't eve	atilaneves	10.630431	-7.446354	comment	3.0	10.5	1573827984	9.402981
21674911	Unfortunately it is hard to give an 	"Unfortunately it is hard to give an answer were all advocates of ""Swift ARC performance"" are able to read, thus urban myths keep being spread.ARC makes sense given Objective-C compatibility, as otherwise a layer similar to RCW on .NET for dealing with COM/UWP "	pjmlp	10.624152	-7.72516	comment	3.0	10.5	1575198467	-10.756452
21679777	I would say for me that's a pretty r	I would say for me that's a pretty reasonable estimate for microservice architecture applications / services, of course large legacy monoliths take longer but not more than say 15-20 minutes at most.	smcleod	9.8603325	-7.2792416	comment	3.0	11.5	1575260122	-13.814281
21682131	"While Swift may be the ""latest and g"	"While Swift may be the ""latest and greatest"" language with official support, if you look at https://www.tensorflow.org/api_docs, it's only one of several (the others being C++, Java, JS, Go and of course Python). Plus, there are community-supported bindings fo"	rob74	10.451961	-7.839341	comment	3.0	11.5	1575293579	-10.84815
21691596	Differentialequations.jl v6.9.0: Mul	Differentialequations.jl v6.9.0: Multi-GPU Implicit Ode Solves, SciPy/R Bindings	ChrisRackauckas	10.143875	-7.7872577	story	3.0	5.0	1575373556	10.748625
39252784	When I think about it, it astonishes	When I think about it, it astonishes me that there are people in the world who take Apple's developer tools, and make some really beautiful and useful iOS apps. I've tried on and off since high school and have never been able to do it. I started in high school	gymbeaux	10.464595	-7.7874727	comment	3.0	11.0	1707070669	-10.819604
39315340	Story time: I worked at Facebook and	Story time: I worked at Facebook and had to work with someone who came from Netflix. He was one of those people who, when he went to a new company, simply tried to reinvent everything he came from with no care or consideration given to what's already there.FB 	cletus	9.780295	-7.3383512	comment	3.0	10.5	1707490193	-13.813056
39320216	Lately I have seen developers are nu	Lately I have seen developers are nuking the bloat by converting existing applications to hundreds/thousands of ultra slim micro services. I applaud this approach of taking this issue head on at least in server side domains.	geodel	9.783288	-7.350758	comment	3.0	14.0	1707511171	-13.806433
39330178	Taylor Swift is preferred by a much 	Taylor Swift is preferred by a much larger number of people than Thelonius Monk is; does that make Swift 'better' than Monk?The quality of something and validity of people's preferences doesn't depend on popularity.	wolverine876	10.448157	-7.802629	comment	3.0	12.5	1707598944	-10.438271
39338496	The language is far from stable, but	The language is far from stable, but I have had a LOT of fun writing Mojo code. I was surprised by that! The only promising new languages for low-level numerical coding that can dislodge C/C++/Fortran somewhat, in my opinion, have been Julia/Rust. I feel like 	WeatherBrier	10.575075	-7.5861244	comment	3.0	12.0	1707684224	8.895383
17190907	I'd like to see some actual evidence	I'd like to see some actual evidence of some significant optimization that depends on UB.	vyodaiken	10.632194	-7.1104736	comment	3.0	13.0	1527708488	-7.1173306
17191373	I found the title a little misleadin	I found the title a little misleading: there isn’t much about where the standard is heading or even where it’s been.I would vote for the title “a rant on undefined behavior in C.”——Simple example: the article complains that unsigned integer overflow is defined	maxlybbert	10.655692	-7.030856	comment	3.0	11.0	1527711517	-7.049409
18070596	The compiler has a -swift-version fl	The compiler has a -swift-version flag which gates the source-incompatible changes. There were a number of changes between -swift-version 3 and -swift-version 4, including the two you highlighted. The delta between -swift-version 4 and 4.2 released this year w	slavapestov	10.463994	-7.832546	comment	3.0	10.5	1537910513	-10.892986
18070628	Have you ever developped anything se	Have you ever developped anything serious with swift ? Honestly, this is by far the best language i've developped in (including go, java, c#).Note that i'm talking about the language here. The libs are of various quality. But powerful enums & switch + null saf	bsaul	10.528795	-7.868	comment	3.0	13.0	1537910833	-10.874328
18078419	Side note: For anyone interested, th	Side note: For anyone interested, the third picture down[1] in the article is a fairly high resolution photo of a computer monitor where you can see Xcode and some very neat Objective-C code.[1]: https://static01.nyt.com/images/2018/09/25/business/25INSTAG...	princekolt	10.47798	-7.711732	comment	3.0	12.5	1537983845	5.640903
18091695	I wonder if there is a way to correl	I wonder if there is a way to correlate the number of bug / issues related to binaries with Swift. It’d be interesting to see if Swift correlates positively with bugs/crashes.	elcritch	10.481856	-7.7909265	comment	3.0	23.5	1538121436	-10.869346
18091744	If anything, since a lot of stuff is	If anything, since a lot of stuff is being rewritten from scratch, a lot of new bugs appear that were not there. At least that's my experience on the Mac with software that has been rewritten in Swift.Obviously, it's not Swift's fault for that, but even if peo	LeoNatan25	10.476464	-7.812031	comment	3.0	14.0	1538122205	-10.887681
18185499	> The ideal for me would be a functi	"> The ideal for me would be a function that marked some memory as ""these addresses are taken, do not give them out to malloc, or anything else"", but which still required me to actually ""ask"" for the memory before using it, so it didn't look like I was using 64"	boomlinde	10.665101	-7.029404	comment	3.0	14.0	1539183630	8.708338
18245417	My Math Teacher's Friend's Hurricane	My Math Teacher's Friend's Hurricane Simulation Story	gjsman-1000	10.436114	-7.383252	story	3.0	2.0	1539829172	8.794148
29850666	I don't think 1 based indexing is th	I don't think 1 based indexing is that useful. A lot of mathematics formulae start from 0 too and 1-indexing makes that more awkward.Although I agree that some languages like Julia and say MATLAB feel more fluent to express mathematics.	flubflub	10.670489	-7.3081717	comment	3.0	18.5	1641641223	9.681091
29857428	Again, to be clear, Julia does not h	Again, to be clear, Julia does not have arbitrary indexing as in Fortran. It has an external package that can mimic arbitrary indexing of Fortran.	TheRealKing	10.2332945	-7.90079	comment	3.0	11.0	1641682516	10.659384
30001649	Pretty sure microservices will be re	Pretty sure microservices will be remembered as a horribly convoluted stop gap once we have better language modularization.They encourage modular patterns which is usually good, but all that plumbing will eventually become unnecessary. I can’t help but remembe	rapind	9.78465	-7.3610106	comment	3.0	12.0	1642633036	-13.804374
30315941	Still is.Trying to outperform Fortra	Still is.Trying to outperform Fortran relies on C developers putting the right annotations on the right places and never get them misplaced, otherwise it will trigger UB.	pjmlp	10.450158	-7.4095573	comment	3.0	17.5	1644696827	8.822634
30396396	Yeah, I started noticing huge flaws 	Yeah, I started noticing huge flaws in Apple's Music app, which I told them about and work around mostly, but...are they because Apple software is written in C?  C++, Objective-C, same thing.  Like can C code ever really be airtight?	daniel-cussen	10.493788	-7.6945124	comment	3.0	13.0	1645271342	-10.50418
30417839	> In is obvious that Swift has outgr	"> In is obvious that Swift has outgrown my influence, and some of the design premises I care about (e.g. ""simple things that compose"") don't seem in vogue any more.If not Lattner, what figure or faction is now in control of steering the future of the language?"	Apocryphon	10.472118	-7.822052	comment	3.0	16.5	1645462139	-10.855024
30418707	I clicked on this thread because I k	I clicked on this thread because I knew exactly what I wanted to comment about, and was surprised to see that Chris mentioned exactly it in his message:>After several discussions generating more heat than light, when my formal proposal review comments and conc	rockbruno	10.482263	-7.813618	comment	3.0	12.5	1645466683	3.0205038
30418712	That would actually be an interestin	That would actually be an interesting direction. Swift would be an amazing server side language.	shtopointo	10.4775305	-7.828712	comment	3.0	14.0	1645466706	-10.8830385
30419122	I think Swift was a strategic mistak	I think Swift was a strategic mistake mainly due to the niche effect, even if it's a better language.It would have been much more productive to team up with the C# team as C# is a mature language, and a combined Apple + Microsoft would have been able to compet	silvestrov	10.4835005	-7.812776	comment	3.0	14.0	1645468742	-10.844971
30421488	I don't know about optimal, but I've	I don't know about optimal, but I've been a Swift developer since day 1 and yet never heard anyone I know complain about Swift being to Apple centric. It's typically armchair philosophers online that have purity concerns, not practical developers.	Grustaf	10.478994	-7.8047504	comment	3.0	11.5	1645482226	-10.808119
30432319	C++ is the only language where excep	C++ is the only language where exceptions are such an ideology war.All the other ones that have born with exceptions don't have this issue, including Ada.	pjmlp	10.660705	-7.717092	comment	3.0	10.5	1645557692	-5.1227803
30478030	SWIFT is just a messaging system, th	SWIFT is just a messaging system, they can probably still use Telex which is the precursor to SWIFT.	askmike	10.463882	-7.8271422	comment	3.0	10.5	1645887529	-10.841087
30511257	One would need some inside baseball 	One would need some inside baseball knowledge to effectively hack SWIFT. Not only do you need 1 (or more) BO or Senior BO PINs to verify the send, a hacker also needs to properly format the send without including any details that will tip the recipient off tha	atdrummond	10.481512	-7.8161035	comment	3.0	11.0	1646123673	-10.834684
30583682	You can't implement `malloc()` in C 	You can't implement `malloc()` in C because the pointers it returns are defined to be pointers to different objects, and if you can see the implementation of `malloc` then you know it's returning pointers to the same object (the page it gets from mmap/sbrk). T	astrange	10.6677265	-7.139014	comment	3.0	14.0	1646621224	8.879255
18333271	No, it's due to performance. C++ oop	"No, it's due to performance. C++ oop is somewhat close to the idea (purists don't say that it's not) without sacrificing too much perf. Objective-C spends like half of CPU time in objc_msgSend. And that's ignoring the cost of ""far"" jumps."	adamnemecek	10.496298	-7.684136	comment	3.0	15.0	1540862612	5.6933513
18396366	Swift's String implementation is jus	Swift's String implementation is just porn to me. They had a few misguided attempts in Swift 1 through 3, but their final design is truly marvelous and points programmers who have no idea about encodings towards the right solutions, like by simply counting gra	iknowstuff	10.566391	-7.6603174	comment	3.0	12.0	1541552857	-10.838402
18398375	Show HN: Lima, a Swift-based DSL for	Show HN: Lima, a Swift-based DSL for responsive iOS development	gk_brown	10.466193	-7.8190923	story	3.0	37.0	1541588637	-10.849156
18538070	Very outdated thinking. As per Marti	Very outdated thinking. As per Martin Fowler's advice if you write microservices you should organize your code around products and use vertical teams. The guy who writes the frontend should be able to write the deployment code for it too and maintain it for th	fogetti	9.78913	-7.335549	comment	3.0	17.0	1543277665	-13.806589
18545768	I understood the Ship of Theseus to 	I understood the Ship of Theseus to have been rebuilt with new materials, not with a new design. I suppose the interpretation is somewhat flexible but I don’t think it quite applies to this case. If a modern program doesn’t compile on an older version, I would	techbio	10.45174	-7.410208	comment	3.0	11.5	1543346682	8.783402
18548335	> C people just do not get multidime	> C people just do not get multidimensional arrays. They think an array of arrays is good enough.I have to say, i dont get what you are trying to say. Do you have a source that explains it?What is the difference between a multi dimensional array and arrays of 	cf498	10.536267	-7.3684273	comment	3.0	11.5	1543366406	8.878886
18685848	It will put more pressure on the all	It will put more pressure on the allocator when running, doing that a lot will likely have some kind of cumulative consequence down the line. I know from experience [0] that even reusing allocated memory rather than bouncing it back to malloc can have dramatic	sifoobar	10.6572485	-7.082435	comment	3.0	12.0	1544829785	8.722217
18773212	The only thing I want from Swift 5 i	The only thing I want from Swift 5 is easier string handling. I just want an easy and concise way to do things like split a filename into parts, extract regex matches, etc. At the moment it's faster to write string handling code in Objective C...	jakobegger	10.530776	-7.7420225	comment	3.0	15.0	1545949670	-10.845469
18883221	Have you used Swift? It’s not going 	Have you used Swift? It’s not going away, it’s only going to grow.	lupinglade	10.4605875	-7.8296385	comment	3.0	14.0	1547211557	-10.835319
18913875	Kong Launches AI/ML Features to Auto	Kong Launches AI/ML Features to Automate Microservices Management at Scale	mikejulietbravo	9.779248	-7.3604083	story	3.0	10.0	1547579156	-13.820579
17231400	Hope significant are the differences	Hope significant are the differences between cocoa and uikit? I don't have any experience besides some light source browsing and it seemed the big difference is the NS to UI prefix change. Anyone care to summarize for the unenlightened?	nxc18	10.457456	-7.7763977	comment	3.0	12.0	1528140896	-10.727828
17261352	There's a passage in the article tha	There's a passage in the article that I either misunderstood, or the author is somewhat being agressive/hostile towards computer scientists and engineers:> Its users are scientists and engineers; not computer scientists and software engineers, but the real one	aneutron	10.484999	-7.3951745	comment	3.0	11.0	1528414978	8.799565
17281092	As someone with a significant amount	As someone with a significant amount of experience in both ObjC and Swift (4+ full-time years in each), I don't agree with this article. Yes, Swift isn't perfect, it has its flaws. Totally agree there. It's not perfectly integrated with Cocoa either, as the au	jordansmithnz	10.478336	-7.801433	comment	3.0	14.0	1528680181	-10.834293
17281200	As a Rubyist, I was about to jump on	As a Rubyist, I was about to jump on the Crystal train, but then server-side Swift started getting really good. Crystal is awesome, but I feel it’s not solving any problem particularly better than Swift. With Swift being compilable even on a Raspberry Pi and o	briandear	10.478648	-7.8394747	comment	3.0	14.0	1528682289	-10.885851
17335389	Well, this article is about Result t	"Well, this article is about Result types in Swift,
and my point is, I think this kind of thing is overkill.
It tends to make the learning curve for a new programmer steeper because there's all these extra bells and whistles provided by the language that have t"	khitchdee	10.497801	-7.812922	comment	3.0	10.5	1529286395	-10.8032675
17349703	How to Control Microservices Costs	How to Control Microservices Costs	Arbinv	9.7849655	-7.3659234	story	3.0	14.0	1529437367	-13.78617
17361667	What about Julia? It’s what we’ve be	What about Julia? It’s what we’ve been teaching our Stanford ML class with and it’s fast! Also typed and JIT with multiple dispatch. Arrays here don’t have the Numpy/Scipy weirdness of matrices vs. ndarrays and linalg is truly first-class.This comes from someo	LolWolf	10.300939	-7.7206583	comment	3.0	14.5	1529548814	10.064743
17366172	Java has been around a long time now	Java has been around a long time now and machines were a lot slower in the JDK 1.0 days so they were probably considering the poor performance of requiring a minimum Object overhead.And the distinction has worked elsewhere.  Objective-C for instance has an NSO	makecheck	10.5139065	-7.720425	comment	3.0	11.0	1529595877	5.6313376
17373890	"""It is a class-based concurrent scri"	"""It is a class-based concurrent scripting language with a modern Swift like syntax.""So, it looks like every other language designed in the last 40 years? This is good?"	mcguire	10.481675	-7.815482	comment	3.0	10.5	1529675136	-10.811916
17501314	I think what was missed, in the arti	I think what was missed, in the article, is that the fundamental problem was centered around a shared architecture of destinations and shared code.You cannot possibly have every destination be a separate repo and then have the development lifecycle of your sha	johndubchak	9.777377	-7.355511	comment	3.0	23.5	1531250956	-13.819731
17547618	IMO, the fact that 1726 modules is a	IMO, the fact that 1726 modules is a “reasonable” number for a web app is a clear indication that there is something seriously wrong with this process.	bradknowles	10.471519	-7.8287697	comment	3.0	10.5	1531807346	-10.825373
17727987	> Objective-C under the hood compile	> Objective-C under the hood compiles every method call into a call to the function objc_msgSend().Well, kinda. You need a family of functions (objc_msgSend, of course, but also objc_msgSend_stret, objc_msgSendSuper, and objc_msgSendSuper_stret), to get this t	saagarjha	10.550961	-7.590827	comment	3.0	18.0	1533845104	-7.2051697
17739511	Those 16MHz processors were two or m	Those 16MHz processors were two or more orders of magnitude slower than anything anyone's running Objective-C on these days. Is there really a need for C any more?	lmm	10.523701	-7.6198187	comment	3.0	11.0	1533992499	5.778876
17739541	I have used Objective-C since 1997 w	I have used Objective-C since 1997 when I worked with WebObjects back then and I don't miss it for a second. When I have to touch our one codebase with Objective-C I have to groan. It was amazing for its day and I did enjoy it despite its shortcomings. But I c	coldcode	10.487839	-7.785423	comment	3.0	21.0	1533993168	-10.858822
17739584	When people criticize C as a languag	When people criticize C as a language they are usually referring to the fact that it easily and frequently allows for many classes of bugs that riddle C code. For decades, as an industry we've been apologizing and fixing critical exploits and bugs (ex HeartBle	flipgimble	10.501971	-7.8015914	comment	3.0	24.0	1533993995	-10.829486
17740187	Totally agree that generics in objec	"Totally agree that generics in objective c are very bare. And that's what frustrates me the most. Apple/Lattner could have improved them, but chose not to, by focusing all their energy on Swift.""Simple"" things I want from generics:1. Carry over generic informa"	tsycho	10.60975	-7.8200765	comment	3.0	11.0	1534003317	-10.80866
17739588	Objective-C in 1997 and in 2017 are 	Objective-C in 1997 and in 2017 are almost two different languages. Between ARC and generics, auto-synthesized ivars, and blocks, there's not much missing from being a modern C#/Java-like language.	0x0	10.495071	-7.7698574	comment	3.0	15.5	1533994063	-10.798252
17827026	Fred Brooks vs. Dijkstra? (2015)	Fred Brooks vs. Dijkstra? (2015)	hmijail	10.444721	-7.153064	story	3.0	35.0	1535030697	-9.537494
16200375	Best use I've found for microservice	Best use I've found for microservices is highly isolated and well-defined stateless functions which make a significant (read compute intense) change to some data and drop it somewhere else e.g. image compression.Now you can use this microservice anywhere and j	CryoLogic	9.783323	-7.359465	comment	3.0	10.5	1516573101	-13.81197
16200452	> A microservice should generally no	> A microservice should generally not have side effectsI gotta ask, how is this realistic?  A salient feature of most of the software I've worked on is that it has useful side effects.	sk5t	9.7802	-7.3640804	comment	3.0	12.5	1516574110	-13.816447
16200670	Will someone enlighten me as to why 	Will someone enlighten me as to why a microservice should have no dependent services? Seems reasonable to me.	linkmotif	9.78351	-7.361117	comment	3.0	10.5	1516576554	-13.8259945
16227333	> Another weird omission is lack of 	> Another weird omission is lack of any kind of concurrency storyGrand Central Dispatch (GCD or libdispatch) is generally the concurrency story on Darwin platforms.  There has been an ongoing effort to port it to Linux.  Not sure how complete that is but I lin	eunoia	10.519049	-7.831786	comment	3.0	10.5	1516836644	-10.838754
16242236	Gentlemen, we must do something abou	Gentlemen, we must do something about the memset function in C++ programs	AndreyKarpov	10.620901	-7.0172267	story	3.0	12.0	1516995712	-7.1156363
16190914	Swift Forums	Swift Forums	damuellen	10.453321	-7.8286695	story	3.0	43.0	1516404562	-10.846066
36657088	If the new macOS settings panel is i	If the new macOS settings panel is indicative of SwiftUIs overall qualities, I really hope it wont be the future (eg if even Apple themselves can't get such a trivial thing like a settings panel right, I don't even know what the point of SwiftUI is after so ma	flohofwoe	10.454298	-7.822782	comment	3.0	11.5	1688925943	-10.847341
36678898	For us at my present and former work	For us at my present and former workplaces, the decision of using microservices didn't depend solely on number of developers. We needed something very scalable, something that different teams can work on without stepping on each other's foot, something that su	DeathArrow	9.783482	-7.3577476	comment	3.0	21.5	1689070924	-13.819959
36679063	That also works with monoliths ... U	That also works with monoliths ... Usually you would make your monolith stateless and distribute the incoming requests / events across many instances that can be spawned / killed depending on volume of requests and health status of instances.	fvdessen	9.8210745	-7.327399	comment	3.0	18.0	1689072050	-13.828518
36681536	You can scale monoliths independentl	You can scale monoliths independently too.  Depending on the language that means paying some additional memory overhead for unused code but practically it's small compared to the typical amount of ram on a server these days.	treis	9.820633	-7.3330064	comment	3.0	13.0	1689086031	-13.831854
36655764	Difference Between Implicit and Expl	Difference Between Implicit and Explicit Animations in SwiftUI	leopug	10.48157	-7.8046303	story	3.0	68.0	1688919383	-10.845654
36671786	Ada and C: differences as the langua	Ada and C: differences as the language for system programming (1993) [pdf]	hazelnut-tree	10.6689415	-7.6913614	story	3.0	39.0	1689017713	-5.136912
36797749	I feel that wholly depends on how yo	I feel that wholly depends on how you’re classifying those.What makes a service micro vs macro?	olliej	9.786025	-7.3577423	comment	3.0	10.5	1689837910	-13.829824
36838220	I would be fine with slow, if the Sw	I would be fine with slow, if the Swift compiler could actually compile all valid Swift programs.  It’s pretty commonplace for me to have to break a large or complicated function into smaller bite-size pieces because the compiler can’t type check it all at onc	cvwright	10.528142	-7.784668	comment	3.0	12.0	1690137088	-10.853559
36851633	Dumb question: how is Julia better t	Dumb question: how is Julia better than Fortran to write numerical models (for example, finite element simulations) ?In the lab where I work there are plenty of people real good at the physics/maths but not that good at writing code. Since they need performanc	wiz21c	10.18873	-7.970362	comment	3.0	11.0	1690220563	10.724518
36877859	> One particular issue we fixed a co	> One particular issue we fixed a couple of times in TigerBeetle is replacing by-value with by-pointer loops:I don't know about other tools and places, but one nice thing about working at Facebook is the internal Infer linter tool[1] is generally good about pr	loeg	10.670892	-7.07294	comment	3.0	12.0	1690380091	8.409884
24466550	Fricas (a fork of Axiom, which is a 	Fricas (a fork of Axiom, which is a rename of Scratchpad 2) is another very old CAS implemented with Lisp, also now open sourced. I think Fricas is more powerful than Maxima (maybe much more) regarding symbolic integration and its type system, but it sadly has	nsajko	10.401223	-7.11424	comment	3.0	16.5	1600054991	-9.2837515
24473185	We do, but, it's mostly because we w	We do, but, it's mostly because we were raised on it and have a lot of ingroup memes for discrediting other options - my company forcing me to work outside iOS for the first time in several years was a real eye-opener.I don't think Apple developers have the ex	anoncareer0212	10.439721	-7.795886	comment	3.0	15.5	1600106872	-10.806247
24480248	Hi, developer of a PDF scanning app 	"Hi, developer of a PDF scanning app for macOS (PDFScanner) here. I always toyed with the idea of developing a PDF engine from scratch but the spec scares me. Kudos for being that brave!
Just curious: Why did you choose Objective-C for a new lib?"	planb	10.484439	-7.7501616	comment	3.0	12.0	1600171593	-10.669105
24489637	Ada, not ADA.  It’s named after Ada 	Ada, not ADA.  It’s named after Ada Lovelace, not an abbreviation.	svvcfb1212	10.644858	-7.7300906	comment	3.0	12.5	1600231888	-5.019373
24496539	Going for Swift means competing with	Going for Swift means competing with XCode, which wouldn't make sense as Swift is generally used along with the entire iOS/macOS Dev tools (Simulators, UI Builders, Device Manager etc). Not a wise thing to do.	asadlionpk	10.462458	-7.808697	comment	3.0	17.0	1600284513	-10.846204
24534085	I recently spend some days playing w	"I recently spend some days playing with differentiable programming in Swift on Linux:* as you said, auto-diff is in a branch or the Google fork of the project
* the only pre-built images are for Ubuntu 18.04
* on Linux, the REPL seems to somewhat broken
* many"	turbinerneiter	10.542062	-7.8587203	comment	3.0	12.5	1600610406	-10.836887
24561486	SwiftUI being closed source is a hug	SwiftUI being closed source is a huge issue for developers. Apple behaves as if every user is immediately on the latest version but the reality is the _lucky_ developers support one major version back. SwiftUI is broken in completely different ways for each mi	myko	10.451171	-7.829241	comment	3.0	11.0	1600819470	-10.833236
24533629	The Rise and Fall of High Performanc	The Rise and Fall of High Performance Fortran (2011)	Anon84	10.45444	-7.4103823	story	3.0	34.0	1600605090	8.813914
24594809	The type errors you start running in	The type errors you start running into with generics with all of their weird limitations in swift can make things complicated fast.  That and RxSwift.Also swift as a language doesn't scale well.  There are a lot of bottlenecks in the build process that doesn't	novok	10.503311	-7.827324	comment	3.0	11.5	1601073318	-10.84404
24595010	Swift ships with an extremely polish	"Swift ships with an extremely polished, well designed standard library out-of-the-box. You can use it with a simple ""import Swift""…wait, you don't even need to do that, because it's available by default."	saagarjha	10.471642	-7.821159	comment	3.0	13.0	1601075554	-10.855375
24595097	>  Dinging it for its syntax is some	">  Dinging it for its syntax is something that I didn't think I would ever hear.Not just syntax, but the amount of it, and the amount of special cases in it.> SwiftUI is not part of Swift, so 1 and 2 are not relevantSwiftUI exposes deficiencies in the ""one of "	dmitriid	10.506055	-7.841058	comment	3.0	12.0	1601076657	-10.856785
24594908	One of Swift's strengths is that mos	One of Swift's strengths is that most of its features really make sense if you read them, even if you aren't aware they existed. The entire language is optimized around readability. (No, I'm not counting the function builder fiasco.) For example, you may not k	saagarjha	10.500459	-7.817069	comment	3.0	14.0	1601074463	-10.845469
24609621	> For Swift it's a modern language t	> For Swift it's a modern language that doesn't need to have backward compatibility with C that Objective-C had.That doesn't seem accurate. Interoperability with C and Objective-C was a fundamental design requirement of Swift. C interoperability is not particu	_qulr	10.490259	-7.78688	comment	3.0	14.5	1601236306	-10.811884
24610828	I would also say that Swift by desig	I would also say that Swift by design is very much constrained, you might say held back, by the needs of Cocoa compatibility. For example, Swift takes features that are mere conventions in Objective-C, such as initializer patterns (which can be ignored when th	_qulr	10.498534	-7.8121476	comment	3.0	12.0	1601247046	-10.812193
24613009	Your comment is refreshing.I made th	Your comment is refreshing.I made the mistake of choosing iOS and SwiftUI for the first platform of a niche app, a few months ago.  Trying to do things in the way Apple wants seems a good strategy in general, but the experience was bad in countless ways.  The 	neilv	10.452007	-7.8192716	comment	3.0	10.5	1601267829	-10.842224
24657914	This is cool. It does address (partl	This is cool. It does address (partly) some of the issues with Swift threading.That said, I’m not a systems programmer, and basic threads, like those provided by the standard “blunt instrument” approach of standard Swift, will pretty much always give me what I	ChrisMarshallNY	10.502418	-7.8168406	comment	3.0	14.0	1601602553	-10.82479
24716719	I would love to go and use swift at 	I would love to go and use swift at my work (working in robotics). But swift just doesn't feel mature enough for barely anything outside of iOS/macOS. I had a great time using it for that purpose. The community outside of that ecosystem is barely there.I've pi	mikkelam	10.470964	-7.834476	comment	3.0	11.5	1602141574	-10.824454
38612518	Ada people scratching their heads...	Ada people scratching their heads....	projektfu	10.634728	-7.728679	comment	3.0	11.0	1702391323	-5.0625277
38663554	The raisons d'être between the CLR (	The raisons d'être between the CLR (and C#) and Swift are entirely different.Apple has explicitly set out to adopt Swift as a successor language to C, Objective-C, C++, and Objective-C++[0][1]. This stands in stark contrast to Microsoft's vision for the CLR, w	nrr	10.489417	-7.7870793	comment	3.0	10.5	1702727076	-10.832753
38663982	I'm surprised that Apple didn't opt 	I'm surprised that Apple didn't opt for a hybrid approach.They control the OS. They also control Swift. So why not embed the Swift version that the app was built against, and then download that swift version to the user's device when they download an app that 	kstenerud	10.462486	-7.8023667	comment	3.0	11.5	1702732876	-10.831283
38665006	I think this tight coupling between 	I think this tight coupling between the language and the platform compromised a very promising language. Swift is one of few if not the only modern language that, at the same time, has excellent performance (due to AOT compilation and optimization, determinist	cornholio	10.494125	-7.8007026	comment	3.0	17.0	1702741389	-10.83515
38733855	Objective-S	Objective-S	ptx	10.506066	-7.729242	story	3.0	19.0	1703251220	5.742722
38801199	"The sad thing about these ""monolith "	"The sad thing about these ""monolith vs microservice"" debates is that to this day we have programming languages which favor shared mutable state, so a program written like this is an absolute hell (or a very leaky abstraction) to distribute. And it doesn't have"	3cats-in-a-coat	9.817386	-7.3800364	comment	3.0	12.0	1703817023	6.5477605
38879541	Be real: Apple is not going to rewri	Be real: Apple is not going to rewrite MacOs/iOs in Swift. Objective-C will always be there, offering faster and more robust features.Just look at the Microsoft equivalent: yes, C# is good and all, but the hardcore Windows apps are still using (lightly-skinned	toyg	10.474068	-7.7818227	comment	3.0	18.5	1704465763	-10.758645
38880001	> Categories in Objective-C are a wa	> Categories in Objective-C are a way to add new methods to any existing class, including framework classes (categories can also be used to replace methods, which is both powerful and scary ). I use them to harmonize the API. So if a method in UITextField is c	saagarjha	10.493149	-7.7718744	comment	3.0	11.5	1704468306	-10.789514
38891682	I think free is the thing. Python re	I think free is the thing. Python replaced MATLAB and Mathematica, not COBOL or Fortran, which was already out.	esafak	10.347505	-7.5799356	comment	3.0	11.0	1704551343	10.149042
31807491	I'd really love to use ada for some 	I'd really love to use ada for some real world application. Is there a gRPC implementation?	ithkuil	10.65507	-7.7144403	comment	3.0	11.0	1655711986	-5.15101
31822005	A single server is much faster than 	A single server is much faster than most people think, too!In the microservice or serverless arrangements I've seen, data is scattered across the cloud.It's common for the dominant factor in performance to be data locality, most times this talk about data loca	srer	9.812688	-7.318577	comment	3.0	11.0	1655803711	-13.82532
31929774	That's the perspective of a software	"That's the perspective of a software developer. Neither Mathematica nor Matlab actually try to address this market. Both are languages for mathematicians, scientists and engineers and are still mostly unrivalled when it comes to domain knowledge.
Python has th"	sveme	10.228296	-7.7818956	comment	3.0	11.0	1656575449	10.462371
31969876	I find that SwiftUI is fantastic for	I find that SwiftUI is fantastic for small, self-contained views, that don’t have any complex custom behaviour, and don’t deal with navigation logic. For anything more complex that that, I’d strongly urge falling back to UIKit	spideymans	10.453907	-7.8206363	comment	3.0	10.5	1656873107	-10.782451
31970554	I’m baffled as to how this has been 	I’m baffled as to how this has been so downvoted. It’s just a fact. Been using SwiftUI for two-some years and while I use it for prototyping, when I actually want to get ‘real’ things done, I go back to UIKit quick as a bolt of lightning.	lostgame	10.4593725	-7.817887	comment	3.0	11.5	1656878652	-10.85054
32026162	"It always baffled me to hear:"" Oh we"	"It always baffled me to hear:"" Oh we're gonna do microservices, because our monolith is a total mess and we're very unproductive"". If you can't organize a monolith, what makes you think you will be able to organize microservices which are vastly more complicat"	jfabre	9.788172	-7.358111	comment	3.0	11.0	1657282488	-13.82585
32100549	Do you have an actual specific disag	Do you have an actual specific disagreement with c# or are you just venting because you are not familiar with the language?C# is a robust language with a lot of features like lambdas pattern matching etc.  I also find that most of the people who know Swift are	throwaway675309	10.502822	-7.7994146	comment	3.0	10.5	1657827286	-10.821807
32251372	Micro-services also good when an org	Micro-services also good when an organization has a numbers of teams with different domains and release cycles, at some point it would be easier to spit code in some ways and have a boundaries. In this case splitting to services/micro-services creates those bo	vasergen	9.784511	-7.3590317	comment	3.0	11.5	1658934413	-13.820308
32265638	I actually see it in the exactly opp	I actually see it in the exactly opposite way.  A couple years ago, Swift was a nicely designed language, with a manageable number of composable features which could be used to do just about anything.With the features which were released alongside SwiftUI, it 	skohan	10.464183	-7.8185396	comment	3.0	11.0	1659022040	-10.846557
32322696	Why would you break apart a microser	Why would you break apart a microservice? Any why do you need to use/split into microservices anyway?99% of apps are best fit as monolithic apps and databases and should focus on business value rather than scale they'll never see.	manigandham	9.7872925	-7.360336	comment	3.0	11.0	1659465839	-13.821845
32255709	Jetpack Compose 1.2 is now stable	Jetpack Compose 1.2 is now stable	mikece	10.256584	-7.518111	story	3.0	37.0	1658950800	9.644365
32429331	Objective-C, maybe. Not C++ or Java,	"Objective-C, maybe. Not C++ or Java, which trace their lineage to Simula, which Smalltalk also cribbed from. But it is hard to see Objective-C as important, limited as it is to a walled garden.It also once seemed like ""object-oriented"" would be important. Now "	ncmncm	10.645601	-7.6766443	comment	3.0	13.0	1660239950	6.816603
32444566	> By allowing general architectures,	> By allowing general architectures, Objective-S is the first general purpose programming language.Really? I stopped reading at this spot, since this claim is so ridiculous.https://en.wikipedia.org/wiki/General-purpose_programming_la...	munchler	10.503561	-7.743587	comment	3.0	27.5	1660342317	5.780149
32444864	I read the rest of the About page an	"I read the rest of the About page and didn't see anything supporting this claim. What makes Objective-S more general than other languages? If it's the four architecture ""styles"" listed, I'm pretty sure other languages can do the same:* OO and Call/Return: Supp"	munchler	10.50837	-7.7596807	comment	3.0	12.5	1660344359	5.7108784
22031260	Using sbrk(2) as an application stac	Using sbrk(2) as an application stack seems like a bad idea. A lot of times that is where malloc gets its heap addresses from.The article even says this but not strongly enough:> It is worth mentioning that the C library malloc might be using and caching the r	asveikau	10.657189	-7.1232514	comment	3.0	12.5	1578881068	8.8851795
22120988	Google has this thing called “Testin	Google has this thing called “Testing on the Toilet” where they post factoids about Google’s codebase and best practices. I read one and it said FORTRAN is a highly secure language (or there haven’t been any security vulnerabilities found in the language in a 	yingw787	10.463626	-7.4090657	comment	3.0	10.5	1579720750	8.837088
22120911	Looks vulnerable to SQL injection at	Looks vulnerable to SQL injection attacks. (https://fortran.io/static/model.html)	velcrovan	10.4543085	-7.4121485	comment	3.0	10.5	1579720374	8.73542
22122677	After Fortran got its array syntax 2	After Fortran got its array syntax 29 years ago, there aren't many languages that you can use to write array-manipulating code like in Fortran. Maybe just Julia and NumPy?	sampo	10.527837	-7.422769	comment	3.0	10.5	1579731508	8.984237
22138050	I work in HFT and now use Julia for 	I work in HFT and now use Julia for all my research, and a couple of my colleagues now do too. Personally I'd rather retire and farm goats than go back to having to write Python professionally: there's just soo much that can go wrong that doesn't happen in a t	logicchains	10.210493	-7.9750495	comment	3.0	10.5	1579873061	10.735031
22148904	Microservices has been misunderstood	Microservices has been misunderstood in how they scale	WolfOliver	9.786047	-7.3594346	story	3.0	24.0	1579989765	-13.813485
22163185	In the business domain one is often 	"In the business domain one is often counting and tracking explicit things: widgets, contracts, customers, complaints, pizzas, etc. When counting, you almost always start with 1. ""1"" fits the domain more naturally, and if you deviate, you'll likely spend code c"	tabtab	10.533108	-7.1801476	comment	3.0	13.0	1580155243	7.0889354
22194887	There are two big reasons to go to m	There are two big reasons to go to microservices (note that the exact definition of microservice can vary a lot).1. Organizational streamlining.  If the team working on the monolith becomes to large, then coordinating and pushing out changes quickly can become	tynpeddler	9.787141	-7.3535686	comment	3.0	15.0	1580414487	-13.862713
22228319	>This will allow Swift developers, r	>This will allow Swift developers, regardless of the platform on which they deploy their applications, to access these APIs for a common set of cryptographic operations.How often is swift used on a non-Apple platform? Also why?	duckqlz	10.459678	-7.8233705	comment	3.0	13.0	1580760060	-10.839048
22166631	Dijkstra: Philips and I – a few snap	Dijkstra: Philips and I – a few snapshots (2001) [pdf]	tomrod	10.462416	-7.1678743	story	3.0	16.0	1580188094	-9.416512
22281826	The great thing is anyone could take	The great thing is anyone could take the output of the Fortran LLVM front-end, and then compile that however they wanted with their own compiler technology. LLVM doesn't need to mean consolidation of backends. It can just mean you get a front-end for free, if 	chrisseaton	10.498487	-7.2538624	comment	3.0	13.0	1581252368	-8.240246
38966336	"""offering almost a Python like exper"	"""offering almost a Python like experience""Do you mean Python like easy syntax or do you mean Python like extensive std library?Never used Fortran but really curious to understand whether Fortran has good standard library support to try my hand at it. I've been"	mapreduce	10.51871	-7.3995495	comment	3.0	11.0	1705055305	8.900908
38978875	C++ makes people disgusted, from ios	"C++ makes people disgusted, from iostreams to meta-templates
that slow-down compilation to a crawl. Its natural they wanted
 to replace C++ with something, but turns out the big bad C++ 
 optimizes to better code and Swift isn't that great.
Perhaps instead of "	countWSS	10.496861	-7.810395	comment	3.0	11.0	1705143555	3.2097328
38978679	Tim Daly here...Axiom is alive, well	"Tim Daly here...Axiom is alive, well, and under active development. The current effort is merging the 
LEAN [0] proof technology with the Axiom algebra. This involves some deep restructuring.
The target result is proven algorithms, something missing in current"	daly	10.441381	-7.065969	comment	3.0	10.5	1705141579	-5.3259478
39020913	There is no problem with memcpy othe	There is no problem with memcpy other than that you can't use a null pointer. You can memcpy zero bytes as long as the pointer is valid. This works in a good many circumstances; just not circumstances where the empty array is represented by not having an addre	kazinator	10.6656475	-7.1014977	comment	3.0	23.0	1705449113	-7.0835495
39063293	Ask HN: Why is there only one widely	Ask HN: Why is there only one widely accepted syntax for mathematics?	owenpalmer	10.569805	-7.3360004	story	3.0	3.0	1705710259	8.816075
32549196	The point is not to limit the size o	The point is not to limit the size of the industry. It is to limit the size of a company.Think of a oil refinery as a monolith, and that such a mandate would enforce that you'd have to build the whole system a set of independent microservices. The industry as 	rglullis	9.785601	-7.359297	comment	3.0	12.5	1661160409	-13.828974
32630891	The author talks about SwiftUI on ma	The author talks about SwiftUI on macOS, which I also find to be much much more buggy than what's on iOS.Very unexpected things happen, like items in a specific region in the App UI stop responding to clicks next time once you interact with them.However I find	mrtksn	10.44682	-7.8292456	comment	3.0	24.0	1661712542	-10.857554
32635725	What it’s like to work as an embedde	What it’s like to work as an embedded microservices SRE	kiyanwang	9.7704735	-7.353269	story	3.0	36.0	1661759823	10.997849
39443291	I've given up on Apple platform deve	I've given up on Apple platform development, but I strongly prefer Objective-C over Swift for a variety of reasons, including elegance, compatibility, stability, etc.It's important to note that there's still tons of Objective-C written inside Apple to this day	runjake	10.470596	-7.7782183	comment	3.0	10.5	1708446608	-10.842219
39443271	> Services, or even microservices, a	"> Services, or even microservices, are more of a strategy to allow teams to scale than services or products to scale.I've never really understood why you couldn't just break up your monolith into modules. So like if there's a ""payments"" section, why isn't that"	camgunz	9.792934	-7.3552604	comment	3.0	15.5	1708446511	-13.826132
39443753	As a counter-anecdote from someone w	As a counter-anecdote from someone who also runs their own company, I began dabbling in Swift in 2014. I held off on full Swift adoption until after the big API renaming that happened with Swift 3, so language migrations haven’t been a big deal. The compiler i	sandofsky	10.487711	-7.813854	comment	3.0	13.0	1708448742	-10.841809
39452556	I'm not sure any hobbyists are progr	I'm not sure any hobbyists are programming in FORTRAN. But, then again, some people's idea of fun is being paying to be tortured in someone's basement, so maybe.	hermitcrab	10.458799	-7.415655	comment	3.0	13.0	1708515030	8.767063
39456455	"- They pay like shit (compared to ""s"	"- They pay like shit (compared to ""sexy employers"")- Headquartered in Champaign, Illinois (not a bad town, but not sexy)- As ""cool"" as their software is, not a lot of people use it. Python is eating their lunch, ESPECIALLY outside of academia. Although, they'r"	martinky24	10.345273	-7.690331	comment	3.0	10.5	1708535264	10.373869
39488418	The problem isn’t overflow, the prob	"The problem isn’t overflow, the problem is the backwards logic of the compiler assuming there will never be any execution that leads to overflow, so the code that overflows just vanishes completely.In other words,    bool overflowed = (x+1)<x;

should be meani"	wrs	10.62726	-7.0376472	comment	3.0	12.0	1708739511	-6.983644
39502028	Now that Swift is on other platforms	Now that Swift is on other platforms, I think it’s a good fit, especially as Foundation is being rewritten in pure Swift .Really good ergonomics, safe by default for many cases and getting more of rusts safety for others.Easy interop with C/ObjC/C++, which is 	dagmx	10.535658	-7.852374	comment	3.0	12.0	1708878055	-10.829514
39525891	Wow, didn't expect this tool to be o	Wow, didn't expect this tool to be on Hacker News six years after publication! Herbgrind author here, ask me any questions you like! Also, if you're interested in this stuff, the Herbie project (which I also worked on) for numerical program synthesis is also r	aSanchezStern	10.46593	-7.4309874	comment	3.0	10.5	1709050870	8.901206
39529367	"A ""Why Pure?"" section would be usefu"	"A ""Why Pure?"" section would be useful. The symbolic manipulation part is something I haven't encountered in other mainstream languages (at the level of the language). It's equivalent to Python's SymPy, right?"	elbear	10.662155	-7.1570654	comment	3.0	13.0	1709065607	9.862223
39538564	There is a benchmark of Sympy vs Mat	"There is a benchmark of Sympy vs Mathematica at 
https://www.12000.org/my_notes/CAS_integration_tests/reports...The results were Mathematica failed to solve 1,523 problems, Sympy failed to solve 48,529.So it has some catching up to do."	tableofzero	10.314495	-7.217059	comment	3.0	22.5	1709131407	9.91111
39539274	Do you know why there's such a big d	Do you know why there's such a big difference ? For example, is the way sympy does its job fundamentally flawed ?	wiz21c	10.314885	-7.209235	comment	3.0	13.0	1709134512	9.913993
39570180	I think people often don't realize t	"I think people often don't realize that depending on the language runtime, micro-services can easily be a must.Most service boundaries at organizations are ""I need a different version of a pinned package we can't upgrade."". This is common in languages where th"	parhamn	9.787497	-7.357718	comment	3.0	24.0	1709358716	-13.81739
39570101	> How is it better have service A re	> How is it better have service A request to a proxy, which requests to another proxy, which requests to service B? I get the security benefits of that, but the network architecture is boggling. How many PBs of data are sent each day for what could be a monoli	pm90	9.773404	-7.340052	comment	3.0	13.5	1709357573	-13.783237
39609969	Swift 5.10 Released	Swift 5.10 Released	todsacerdoti	10.4578495	-7.832802	story	3.0	25.0	1709677738	-10.847013
39646044	Iterate over Parameter Packs in Swif	Iterate over Parameter Packs in Swift 6.0	todsacerdoti	10.552622	-7.805599	story	3.0	33.0	1709929917	-10.838767
39677293	From what I see helping some friends	From what I see helping some friends not well versed with programming doing their PhDs, FORTRAN still has a lot of penetration with scientists. Lots of climate models are FORTRAN code.Also, through helping them I can see the dire state of scientific code, it's	piva00	10.471231	-7.403083	comment	3.0	12.5	1710231985	8.846927
32688286	Ask HN: Native App Development Stack	Ask HN: Native App Development Stack	edimoldovan	10.468343	-7.8126206	story	3.0	9.0	1662108347	-10.796025
32745834	MATLAB is fairly impressive for deve	MATLAB is fairly impressive for development. It works ok for communication. What are the areas for improvement you have in mind, and what are the alternatives I should consider?	galangalalgol	10.212814	-7.7948413	comment	3.0	18.5	1662519048	10.504782
32748935	Here's a thorough answer by someone 	Here's a thorough answer by someone who has worked a lot on types, optimizations and numerical libraries, and who still uses Python as his first language (for academic purposes):Why not: from Common Lisp to Juliahttps://gist.github.com/digikar99/24decb414ddfa1	vindarel	10.210404	-7.9766707	comment	3.0	20.0	1662547872	10.78677
33006281	Not sure how to approach that commen	Not sure how to approach that comment really, I don't think it matters if the pattern used is microservices or not, the basic premise that we're still way far off reusability of software that's basically identical across thousands of orgs stands. Most devs are	asim	9.786717	-7.357314	comment	3.0	12.5	1664359498	-13.813875
16470319	 Shame that Swift is pretty much con	" Shame that Swift is pretty much confined to iOS app development.    protocol Weapon {}
    class Staff: Weapon {}
    class Sword: Weapon {}

    protocol Player {
       associatedtype T: Weapon
       var weapon: T  { get set } 
    }

    class Wizard: Pla"	bushin	10.58167	-7.814081	comment	3.0	11.5	1519693045	-10.827034
16521110	what is more interesting is his othe	"what is more interesting is his other project to make an application in pure C: https://github.com/richardjrossiii/CBasediOSApp.
When you are doing cross-platform, you may be more at ease with a few lines of C for some utilities call if you don't want to learn"	FraKtus	10.498725	-7.710081	comment	3.0	14.5	1520259029	5.6102095
16550414	With microservice, I mean an applica	"With microservice, I mean an application that speaks HTTP, accepts requests, speaks to a database, returns a response (possibly serving HTML), packaged up in a Docker container and ready to be dropped somewhere in the cloud.Huh? That's a CRUD app. A ""microserv"	Animats	9.781098	-7.3602595	comment	3.0	12.0	1520583065	-13.80317
16669553	Ada didn't take off (despite some de	Ada didn't take off (despite some decent level of enthusiasm in the industry) because a compiler cost $$$$. We're all using languages today that had a zero or near zero cost to use in the era that mattered (when 32-bit micros were being introduced). Or newer a	dboreham	10.663431	-7.7233124	comment	3.0	11.0	1521932565	-5.094361
16711096	It would be helpful if Apple did a r	It would be helpful if Apple did a review of the sample code in the developer's library and fix all the software that won't even compile anymore.  It doesn't help people trying to learn this language if the sample code won't work.	protomyth	10.507038	-7.620413	comment	3.0	18.5	1522358184	-6.8242197
16712524	My impression has been that Swift is	My impression has been that Swift is still very much seen as an “Apple” language, rather than a cross platform one. Another issue is that there are some operations that lead to crashes if they detect illegal behavior, in the name of providing safety and consis	saagarjha	10.466935	-7.824536	comment	3.0	16.0	1522369389	-10.842317
16711501	> Swift 4.1 is a minor language rele	> Swift 4.1 is a minor language release. It is source compatible with Swift 4.0.Nothing should break?	dep_b	10.458734	-7.831175	comment	3.0	16.5	1522361159	-10.858951
19322119	"> when ""easier testing"" (from OP) is"	"> when ""easier testing"" (from OP) is said to be an advantage of microservices specifically...I am not sure what to say.I think the service boundary ends up being a very good place to inject ""fakes"", because that boundary is not artificial like it is when you f"	jrockway	9.809046	-7.2856054	comment	3.0	11.0	1551901958	-13.819831
19384381	Every time I read a pro-monolith art	"Every time I read a pro-monolith article it's just ""oh you don't need a microservice arch, monoliths are simpler"" and every time I read a microservice article it's ""microservices are more scalable"" and both claims sound valid to me.Yet I never see anyone talki"	t0astbread	9.788528	-7.361897	comment	3.0	12.0	1552514757	-13.824095
19465201	Hey.  In your C code, you write to m	"Hey.  In your C code, you write to memory beyond what you malloc'd.  You malloc'd 9 bytes for 'pw', but later do ""pw[9] = '\0'"", which accesses the 10th byte, which doesn't belong to you."	matmann2001	10.663108	-7.135233	comment	3.0	13.5	1553278090	8.880315
19485166	Computational Mathematics with SageM	Computational Mathematics with SageMath (2018)	lainon	10.245779	-7.1958156	story	3.0	86.0	1553538056	9.771312
19664075	Whenever possible, I like using tech	Whenever possible, I like using tech that I can mostly understand.A small simple language is something Swift is not.	tambourine_man	10.501763	-7.7903023	comment	3.0	22.5	1555319161	-10.836331
19664167	What’s your ideal simple language?I’	"What’s your ideal simple language?I’d argue that with type inference, immutability, and non-null as a default, Swift is an easy language for anyone to be productive quite quickly.    let x = “I’m immutable and not null”

    let favorite = [“Java“, “Perl”, “Sw"	melling	10.521446	-7.8327565	comment	3.0	19.5	1555320955	-10.821947
19675465	Most of Matlab's source code is visi	Most of Matlab's source code is visible too and its license allows you to modify its visible source code and share it with other license holders too.But that's still not enough and that's why I still sometimes work on Octave (although I've been semi-inactive f	jordigh	10.194617	-7.775461	comment	3.0	11.5	1555435235	10.44231
19706006	Ahhh... FORTRAN -- my first language	Ahhh... FORTRAN -- my first language: CDC 3100, 1965. What magic.	GnarfGnarf	10.466484	-7.405405	comment	3.0	12.0	1555760665	8.848069
19710510	I was an early preacher of microserv	I was an early preacher of microservices.  In theory, it was great.  Independently scalable, rewriteable in any language, and of course a fault in one piece won't bring down the others.I learned the hard way what it really meant.  A fault in one affects the ot	axaxs	9.787706	-7.3557963	comment	3.0	18.5	1555820191	-13.808036
19768669	Technically I don't think memset for	Technically I don't think memset forces the compiler to clear the padding and keep it clear either though.  The magic of the C abstract machine.	Dylan16807	10.639699	-7.0639925	comment	3.0	15.0	1556413594	-7.048858
19788526	Why we created LFortran	Why we created LFortran	johndcook	10.460504	-7.390734	story	3.0	12.0	1556636462	8.810467
19881654	> Modern Java micro-services in cont	> Modern Java micro-services in contrast are really fast to develop.This attitude is a bit surprising to me. The main point of micro-services is that they address a complexity problem when dealing with large organizations. That is, they allow a large organizat	hn_throwaway_99	9.7813835	-7.365979	comment	3.0	11.5	1557518201	-13.817814
19894070	The Road to Zig 1.0 [video]	The Road to Zig 1.0 [video]	FraaJad	10.671832	-7.5418677	story	3.0	44.0	1557690453	12.521394
24777333	Personally, I've always thought this	Personally, I've always thought this letter was the plainest proof that Dijkstra's pithy quotes (and those that parrot them) should not be taken seriously, no matter how entertaining they are.  That list covers most the major languages of the day; what he woul	ThrowawayR2	10.533545	-7.1485496	comment	3.0	22.5	1602687966	-9.420169
24809321	Name some swift features that add to	Name some swift features that add too much complexity / conflict with existing features. Then your reasoning could become more than a mere heuristic	The_rationalist	10.4757805	-7.8270454	comment	3.0	21.0	1602935600	-10.851798
24840220	Julia is pretty neat, but I'm still 	Julia is pretty neat, but I'm still using Python at the moment for numerical computing work. Julia does have built-in sparse arrays, but I don't think it's on par with scypy.sparse yet.	7thaccount	10.205034	-7.911507	comment	3.0	33.5	1603215586	10.591686
24840379	The nice thing about julia is that i	The nice thing about julia is that its much simpler to roll your own things. With numpy, you might have to be writing C.	adamnemecek	10.20942	-7.9608192	comment	3.0	31.0	1603216431	10.690255
24845884	Personally, I think Discipline is on	Personally, I think Discipline is one of the things that separate “coders” from “engineers.”This sounds like it’s really a treatise on “learning to build a house by making your own nails.”Of course that won’t scale. Especially if most houses, these days, are p	ChrisMarshallNY	10.477134	-7.818026	comment	3.0	12.0	1603269113	-10.859097
24900843	The performance comparison in Fig. 7	The performance comparison in Fig. 7 is quite limited.Python with Numpy and JIT, as well as Matlab, R and FORTRAN could also be included with suitable tasks. The code should be optimized in each case.	aborsy	10.292148	-7.8768144	comment	3.0	11.0	1603743408	10.578598
24944494	People used to say of my alma mater 	People used to say of my alma mater that the teaching was decent but the facilities were amazing.There was a feel on campus that the people who were really going to 'make it' were only putting in B- or C+ work and spending the rest of their time working on sid	hinkley	10.504463	-7.1233773	comment	3.0	17.5	1604078159	-9.483542
24945522	> I'd be curious to know if Dijkstra	> I'd be curious to know if Dijkstra had access to a similar embarrassment of riches.Dijkstra spent a good chunk of the latter part of his career at the University of Texas in Austin. There was plenty of access to facilities there, but that wasn't really what 	mschaef	10.4710455	-7.1572423	comment	3.0	15.5	1604083452	-9.515747
24975285	That's the Linux way to do it    uni	"That's the Linux way to do it    union { int i; float f } u { .f = 1.23f };
    int i = u.i; 

Another way is a memcpy, which I believe is the most defined way to do type punning    int i; 
    float f; 
    memcpy(&i, &f, 4);

But you also have to assume the "	qppo	10.620938	-7.04939	comment	3.0	14.0	1604365538	8.97903
24975406	> A huge part of my career has been 	> A huge part of my career has been splitting monoliths into cohesive smaller codebasesDid that ... create business value for your company?> Eg, currently we have user profiles (user id > the users names, email etc) in one microservice, relationships between u	jeremyjh	9.7876835	-7.3553042	comment	3.0	21.5	1604366708	-13.821961
24975509	Yes, it did create business value.* 	Yes, it did create business value.* our enterprise db was bursting at the seams containing Literally Everything. Now, every part of the split up monolith has it's own self contained data store tailored to what is appropriate for that particular thing. (some us	bedobi	9.793625	-7.351973	comment	3.0	13.5	1604367708	-13.823475
24977377	We looked very hard at microservices	"We looked very hard at microservices some 5-6 years ago, and estimated we'd need ~40000 of them to replace our monoliths, and given a scale like that, who'd keep track of what does what ?Instead we opted for ""macroservices"". It's still services, they're still "	8fingerlouie	9.784589	-7.3599176	comment	3.0	12.5	1604389618	-13.814772
25048632	Already a thing:https://apps.apple.c	Already a thing:https://apps.apple.com/us/app/a-companion-for-swiftui/id1485...No affiliation. It's sad and a bit pathetic that trillion dollar company can't hire even one person to work on public documentation.	Ronsenshi	10.454529	-7.8117733	comment	3.0	18.5	1605030058	-10.8789015
25058900	FORTRAN can be compiled on ARM Macs,	FORTRAN can be compiled on ARM Macs, but only commercially for now. https://www.nag.com/news/first-fortran-compiler-apple-silico...	BooneJS	10.472217	-7.3627152	comment	3.0	12.5	1605106866	8.781044
25262404	>Furthermore, it's ridiculous to con	>Furthermore, it's ridiculous to condescendingly imply that Dijkstra was simply unaware of Piaget whose work was already at the height of popularity well before that time.It's not so condenscending given that his entire essay is basically a bunch of unsubstant	Barrin92	10.505061	-7.1205697	comment	3.0	10.5	1606797930	-9.442015
25374303	Apple's botched introduction of Swif	Apple's botched introduction of Swift is easily responsible for billions of dollars in lost productivity across the industry since 2014.	pavlov	10.457478	-7.837508	comment	3.0	10.5	1607612335	-10.81906
25329592	Ask HN: “undefined behavior” or “tar	Ask HN: “undefined behavior” or “target machine behavior”?	jpegqs	10.652667	-7.02067	story	3.0	1.0	1607319148	-7.074476
25498500	From what I understand (never actual	"From what I understand (never actually worked with MS, so no hands-on experience) a ""proper"" MS architecture will also include separate data persistence layers for each service.I.e. if your service manages persisted data, it will access (and own) a dedicated s"	Pamar	9.794734	-7.3580074	comment	3.0	11.0	1608579280	-13.811322
25498808	Monolithic software maintained in a 	Monolithic software maintained in a single computer/repository is so much better than software spread across many computers and repositories. There are some first-order arguments against a monolithic codebase, but the higher-order points will win out every tim	bob1029	9.786431	-7.3602533	comment	3.0	16.0	1608580611	-13.814999
25504842	Yea.Once you have good domain bounda	Yea.Once you have good domain boundaries you can use microservices to make the split more visible for less thoughtful devs and use the associated tooling (contract testing, ... ) to reduce operational coupling around deployments and tests.But aside from that, 	konschubert	9.789283	-7.3570304	comment	3.0	10.5	1608632912	-13.823372
25569751	> numpy should be in the stdlib, per	"> numpy should be in the stdlib, period.I disagree strongly with this.  Numerical facilities should not be in the stdlib, they should be in the language itself, without need to ""import"" anything.  I can create strings and dictionaries without any imports.  I s"	enriquto	10.5988	-7.375672	comment	3.0	10.5	1609250320	9.053097
35685833	Do you think it's good idea to migra	Do you think it's good idea to migrate from monolith to microservices before scaling the team?We are essentially doing this right now, I personally don't think the teams are yet large enough to warrant this migration, but leadership says that we can't scale fu	Olphs	9.783719	-7.355932	comment	3.0	15.5	1682332715	-13.811134
35703938	Show HN: What a designer can ship wi	Show HN: What a designer can ship with GPT in 8 days	raffichill	10.459395	-7.817138	story	3.0	12.0	1682444409	-10.845502
35801849	> The good news for some HPC simulat	> The good news for some HPC simulations and models, both inside of the National Nuclear Security Administration program at the DOE and in the HPC community at large, is that many large-scale physics codes have been rewritten or coded from scratch in C++When C	sampo	10.481394	-7.4226356	comment	3.0	13.0	1683118677	8.767286
35811837	As for me,I have been trying to disc	As for me,I have been trying to discover that 5% that cannot be done without microservices.	wg0	9.778476	-7.3622127	comment	3.0	11.5	1683181376	-13.820725
35837651	"Before ""microservices"" there are ser"	"Before ""microservices"" there are services, which are also composable. And in the realm of monoliths there are also modules. Which are the key to composability.What microservices give you is a hard boundary that you cannot cross (though you can weaken it, you c"	Jtsummers	9.79702	-7.354896	comment	3.0	11.5	1683343424	-13.818852
35838878	A good rule of thumb is that if you’	A good rule of thumb is that if you’re starting a new project and immediately implement microservices, you’ve already failed.Never seen it work, don’t think I ever will. The only way microservices can ever work is if they’re extracted over time as the monolith	Zanfa	9.78433	-7.364209	comment	3.0	11.5	1683356617	-13.821974
35854453	What's funny to me, is that I focuse	What's funny to me, is that I focused on something completely different; how independent these teams at Amazon are. The move from pretty different infrastructure services, all at the same company. I can't think of a single place I've worked at in 20 years wher	mr_tristan	9.79134	-7.3566046	comment	3.0	10.5	1683485902	-13.821339
28845307	Isn't this more of a comment about m	"Isn't this more of a comment about microservices than it is about SRE? It reads to me like ""once you hit a number of microservices it ends up looking like a monolith"":http://highscalability.com/blog/2020/4/8/one-team-at-uber-is..."	mbesto	9.784588	-7.339045	comment	3.0	19.5	1634074134	11.094692
28889219	To expand on that microservices poin	To expand on that microservices point, there's a particular form of systems blindness that happens when people focus on one part of a system, think they understand that one part, and then ignore all the others, as if all you need to know is what's right in fro	throwaway984393	9.783687	-7.344907	comment	3.0	11.0	1634403194	-13.819193
28939846	That's a little extreme.Maybe instea	That's a little extreme.Maybe instead you could probe at interview time whether they are happy with their microservices, how many do they have, do they feel happy that the service boundaries they finished up with are the best possible etc.Not all microservice 	abraae	9.782459	-7.3451123	comment	3.0	10.5	1634786836	-13.823924
28990200	I have inherited overengineered unwi	I have inherited overengineered unwieldy architectures from programmers who had solved much harder technical problems than making our product successful.Having to live with this kind of complexity slows you down in ways that you can't even really quantify (bec	zomglings	9.803902	-7.333737	comment	3.0	11.5	1635181232	-13.815506
34134444	Thanks for the alternative microserv	Thanks for the alternative microservices quip, it was better than the original. Indeed, I find that “microservices should only perform a single task” is a really dangerous way to phrase it because we have no idea what the article means by “task.” The classic m	crdrost	9.788925	-7.364961	comment	3.0	10.5	1672027361	-13.831356
34231087	I don’t mean to be snarky but how is	I don’t mean to be snarky but how is that an “unexpected consequence”? Were the pros and cons just never considered when deciding to use micro services? Additional networks calls are one of the most obvious things to go on the cons list!	padjo	9.787982	-7.3534017	comment	3.0	12.0	1672752884	-13.819342
34231113	> Microservices [..] actually solve 	"> Microservices [..] actually solve for a human problem in scaling up an organization.So does modularity.""The benefits expected of modular programming are: (1) managerial_development time should be shortened because separate groups would work on each module wi"	mpweiher	9.794742	-7.3565183	comment	3.0	16.5	1672753076	-13.815174
34231394	Those boundaries also increase the c	Those boundaries also increase the cost of development.  If you are institutionally incapable of enforcing coding standards such that you can't prevent juniors from coupling your modules, perhaps it's worth it.  But there are more efficient ways to build and r	BackBlast	9.789926	-7.3577023	comment	3.0	12.0	1672754657	-13.8218775
34232094	You can deploy modules independently	You can deploy modules independently, but the technical and organisational measures you need in place to do it safely are an extra step you need to take whereas with microservices they're built in.  Modules live in the same execution context, so you need a goo	regularfry	9.794816	-7.3556767	comment	3.0	13.0	1672757686	-13.813238
34233016	devil's advocate:> A few ways, the e	devil's advocate:> A few ways, the easiest being to scale up the whole monolith with more instanceas far as I know, there's no way to granularly scale up a monolith. if the monolith has 20 or 50 or 100 modules and you need 1 or 2 of them scaled, you have to sc	MuffinFlavored	9.795549	-7.355376	comment	3.0	12.5	1672761176	-13.817604
34235624	> Servers can only get so big. If yo	> Servers can only get so big. If your monolith needs more resources than a single server can provide, then you can chop it up into microservices200 threads, 12TB of RAM, with a pipe upwards of 200GB/s.  This isn't even as big as you can go, this is a reasonab	locutous	9.788506	-7.356237	comment	3.0	12.0	1672770604	-13.824567
34242060	Jaxtyn? I googled it, and sure enoug	Jaxtyn? I googled it, and sure enough there are a lot of little Jaxtyn's running around.	fortran77	10.019616	-7.934258	comment	3.0	11.0	1672806684	-4.130687
34258097	I’ve not used Mathematica before, bu	I’ve not used Mathematica before, but I managed to get it twerking.	robga	10.306111	-7.1241994	comment	3.0	17.0	1672915023	-9.280881
34292959	In the coming years we will probably	In the coming years we will probably see a lot of complicated microservice architectures be replaced by well-designed and optimized Rust (and modern C++) monoliths that use simple replication to scale horizontally.	keewee7	9.778186	-7.3541327	comment	3.0	10.5	1673126494	-13.817538
34330566	I'd say it doesn't have to be.There 	"I'd say it doesn't have to be.There is a certain kind of ""freedom"" that is really slavery,  but people feel so free when they hear about it is they often squee and hurt themselves with uncontrolled movements.Microservices can be that way.  Now that you have 25"	PaulHoule	9.788384	-7.3583446	comment	3.0	13.0	1673380525	-13.8038435
34343252	This will take a while, but I'm look	"This will take a while, but I'm looking forward to it.It's probably another big step towards ""Swift everywhere,"" without worrying about bridging to C.I've been doing little but Swift since 2014, and really like the language. I'm still ""on the fence"" about Swif"	ChrisMarshallNY	10.463236	-7.814682	comment	3.0	44.5	1673465171	-10.834848
34343560	I don't particularly care, whether o	"I don't particularly care, whether or not Swift ever leaves the Apple ecosystem (like ObjC). In that domain, Rust will never ""win."" I think that Rust is an awesome server language, though, and I'm glad to see it gain traction. I just hope that it doesn't get t"	ChrisMarshallNY	10.584105	-7.850733	comment	3.0	11.5	1673466386	-10.772353
34345339	Correction: rewrite of PARTS of Foun	"Correction: rewrite of PARTS of FoundationThere already was an open-source project to rewrite ALL of foundation, but it had stalled on the shores of having to re-implement everything:  https://github.com/apple/swift-corelibs-foundation

The news is actually th"	w10-1	10.442553	-7.822499	comment	3.0	14.0	1673473310	-10.848031
34350618	It looks like an important step in p	It looks like an important step in progressively retiring ObjC. Swift is built from the start with a ObC compatibility in mind, which is a source of much ugliness and inefficiency in the language. With the Swift team working in a value semantic first language 	ribit	10.476648	-7.803934	comment	3.0	10.5	1673511407	5.670935
34467320	I used to use it a lot, but the pyth	I used to use it a lot, but the python libraries are much further ahead at this point. For my uses (essentially image processing and statistics) Octave is always playing catchup with Matlab but python is mostly at par or ahead of Matlab. With the exception of 	fluidcruft	10.208789	-7.910291	comment	3.0	22.0	1674317050	10.585937
34467766	Still trying to learn swift. My impr	Still trying to learn swift. My impression is that it’s an ugly language designed by committee (largeness and some extraneous features like guard) and part of the reason why the compiler is slow and why xcode has problems with slow syntax checking sometimes.	msie	10.478216	-7.8135257	comment	3.0	15.0	1674320034	-10.838861
34505506	This says again that the right behav	This says again that the right behaviour for int overflow should be to trap, rather than wrap around or go into the weeds with UB.	throwaway81523	10.618602	-7.0593576	comment	3.0	17.0	1674576794	-7.0193205
34557169	> It could — and really should — hav	> It could — and really should — have been easier, especially considering SwiftUI has had three major updates since it was announced in 2019.Apple (and Next) have been iterating on AppKit for three decades.  The UIKit fork of AppKit for iOS is a decade and a h	GeekyBear	10.436041	-7.829851	comment	3.0	15.5	1674910335	-10.81805
34545771	Ask HN: Matlab vs Python	Ask HN: Matlab vs Python	ipunchghosts	10.20885	-7.8187976	story	3.0	3.0	1674826425	10.438752
23412927	I Just Heard That Monoliths Are the 	I Just Heard That Monoliths Are the Future of Software Development	kiyanwang	9.84093	-7.2807126	story	3.0	6.0	1591249168	-13.794576
23517941	>  Smalltalk-like syntax would not h	>  Smalltalk-like syntax would not have been nearly quite as marketableThis was one bit I left out:  with Objective-C, Apple had firmly established keyword syntax in a Tiobe top 3 language, albeit within square brackets, so there was absolutely no need to do t	mpweiher	10.57015	-7.811641	comment	3.0	10.5	1592145471	6.8817
23520389	Ignoring the problem with calling so	Ignoring the problem with calling something a “GC-based” language, Objective-C is most typically used with ARC these days, which is definitely GC.	jolux	10.615826	-7.6982307	comment	3.0	10.5	1592161673	-10.749221
23637663	I find this hard to believe from a m	I find this hard to believe from a mathematical point of view - octaves are as far as you can get from arbitrary which is I guess what gives the headline it’s shock value.	klysm	10.137169	-7.756475	comment	3.0	13.5	1593068420	10.232244
23717015	Not much of a Fortran yet without ar	Not much of a Fortran yet without arrays, complex numbers, or strings.	baggy_trough	10.507608	-7.40033	comment	3.0	14.5	1593718095	8.902068
23717551	I think Eigen's template strategy is	"I think Eigen's template strategy is probably hard to beat from the perspective of combining operations.
How well Fortran does is probably mostly up to the compiler implementation. In some of my benchmarks, gfortran sometimes seems to fuse the operations and e"	celrod	10.49399	-7.3008475	comment	3.0	10.5	1593721115	8.967404
20175564	SwiftUI looks like it can bridge tha	SwiftUI looks like it can bridge that final gap I’ve had with my Metal and SpriteKit projects, which were almost entirely cross platform. There will still likely be distinctions in touch handling vs mouse — I haven’t had time to fully explore SwiftUI yet — but	gdubs	10.452987	-7.8237605	comment	3.0	11.0	1560438300	-10.844187
20288874	If you like this, you'll love Mathem	If you like this, you'll love Mathematica.If you're at university and have a site license, that is :(	jjoonathan	10.32791	-7.110213	comment	3.0	11.0	1561581407	9.83513
20302106	Makes sense to write it in Julia. Pr	Makes sense to write it in Julia. Pretty much the only non commercial language that deals natively with mathematical objects in a way that makes sense to non CS people doing statistics. Plus, it is fast out of the box.Like, when I first saw how you work with m	zwaps	10.194093	-7.9585066	comment	3.0	16.5	1561705208	10.710151
13656242	Hmm, very good question. I don't rea	"Hmm, very good question. I don't really know. I wouldn't expect you to memorize the Swift original.I searched ""How to attribute a fake quote"" and nothing useful came up. Maybe:""– Apocryphal quote incorrectly attributed to Jonathan Swift""But that's not very sat"	graeme	10.470129	-7.8253508	comment	3.0	10.5	1487199314	-10.852967
13680883	Swift 3 had a purposeful effort to p	Swift 3 had a purposeful effort to prioritize syntax-impacting changes and API changes as possible with the idea that Swift 4 and beyond would have backward compatibility for Swift 3 code.Swift 4/5 will establish ABI compatibility, so that binary swift librari	dwaite	10.471659	-7.8259788	comment	3.0	10.5	1487526933	-10.8537245
13665473	Ask HN: How are you solving the micr	Ask HN: How are you solving the microservices data problem?	johnnycarcin	9.793325	-7.3556633	story	3.0	4.0	1487298451	-13.82841
13669001	Manifesto: Adding memory ownership t	Manifesto: Adding memory ownership to Swift	mpweiher	10.579239	-7.8247957	story	3.0	118.0	1487346625	-10.849082
13762921	Jonathan Swift: Not entirely the mis	Jonathan Swift: Not entirely the misanthrope we thought	pepys	10.459468	-7.8352203	story	3.0	30.0	1488367460	-10.891178
13803620	It supports closures and higher orde	It supports closures and higher order functions. The sample code doesn't show any of it.It basically looks a lot like a subset of Swift designed to allow someone familiar with Swift to get going faster with Creo. Creo looks interesting mainly as a better integ	Tloewald	10.520566	-7.7687345	comment	3.0	12.5	1488817079	-10.790603
13888038	You can't use dynamic libraries on i	You can't use dynamic libraries on iOS because they fail iTunes Connect validation. The only dylibs it allows are the Swift standard library. You can, however, use clang to take a static library and throw it into anything you want (framework, dylib, executable	conradev	10.524925	-7.620439	comment	3.0	11.0	1489691141	-10.753655
13929886	I find this article lacking, since i	"I find this article lacking, since it paints a too simplified brush over monoliths. Some missing points:""Monolith"", at least if you define it as a single process rather than a network of (micro)services, can still be modular in nature. Using a flexible core, y"	icebraining	9.798193	-7.3395715	comment	3.0	12.5	1490179983	-13.788997
13908771	Show HN: Extensible framework to man	Show HN: Extensible framework to manage Microservices/Multirepos in pure shell	ahmadassaf	9.807417	-7.352832	story	3.0	33.0	1489947959	10.178368
13960429	We build a modular system based on J	We build a modular system based on Java with OSGi. It served us well but now we feel we have reached the limits of such a system and are looking at a more microservice based approach.For example a modular system is not going to help you when a module is misbeh	jsiepkes	9.80213	-7.3630805	comment	3.0	10.5	1490531418	-13.822109
13961077	I don't think using micro-services f	I don't think using micro-services from day 1 is a wise use of resources. What if one of your engineers, who probably owns an entire service, quits? And it's in Haskell because she felt like it?	mylons	9.804133	-7.3682055	comment	3.0	14.0	1490540177	-13.822016
13961347	If the alternative to microservices 	If the alternative to microservices is a monolith, and you can run the monolith locally, then logically microservices can also be run locally. If it's difficult to run all the microservices locally then that's just a sign of weak tooling.	nawitus	9.785372	-7.3564057	comment	3.0	12.0	1490543457	-13.819338
13973601	I like Swift but I hate the Xcode an	I like Swift but I hate the Xcode and the Apple tools. Is so painful to code with it. Apple needs to change its entire development flow. Even working with the react-native I need to use Xcode. =l	adrianotadao	10.472347	-7.773606	comment	3.0	14.5	1490668581	-10.920134
30730677	Understanding Why Resilience Faults 	Understanding Why Resilience Faults in Microservice Applications Occur	cmeiklejohn	9.790321	-7.3551307	story	3.0	48.0	1647660464	-13.81656
30766314	Coming from Matlab, I have the oppos	Coming from Matlab, I have the opposite feeling.I truly, genuinely dislike the language.  I think it's very productive, and I appreciate that Matlab costs an arm and a leg (and god help you once you start paying for some of the nicer packages on top) - but Mat	horsawlarway	10.235701	-7.79535	comment	3.0	10.5	1647958355	10.498548
30937489	Most of them did not reach parity, a	Most of them did not reach parity, at least not in performance. The fast languages are C, C++, Fortran, and Julia. Those are the only ones used for teraflop computing. Fortran is a great tool for scientific computing, but for new projects, where you are not ex	leephillips	10.227752	-7.899431	comment	3.0	12.0	1649279659	10.728683
30939876	If your code is performance critical	If your code is performance critical, it absolutely matters. Most Fortran code is FORTRAN 77, and 2-20x slower than it could be because it was written for processors without vectorization, out of order execution, modern branch predictors, or any of the other h	adgjlsfhk1	10.477559	-7.4015517	comment	3.0	10.5	1649297295	8.828926
30957937	The fact that Apple's developer tool	The fact that Apple's developer tooling is described as great makes me suspicious if the author has used JS tooling in a serious way. VS Code is just so much better than XCode. My experience developing native apps in SwiftUI is also that the documentation is v	vikeri	10.4937105	-7.767064	comment	3.0	11.5	1649430284	-10.758326
34681867	If you're not writing command line p	If you're not writing command line programs (99% of what I do) I suggest adopting SwiftUI for your interface.It's Apple's future for cross platform (ios/macos/watch) applications.  Hardcore longtime mac devs find it frustratingly unable to do some complex thin	gumby	10.460866	-7.7533374	comment	3.0	11.0	1675708226	-10.780698
34690306	Stop Doing Microservices	Stop Doing Microservices	swyx	9.79124	-7.369485	story	3.0	36.0	1675759490	-13.816833
34941054	The fact that you have to declare ev	The fact that you have to declare every single variable makes it a non-starter for me.In Mathematica, I have written calculations that involve dozens of variables. In sympy that will be very annoying.	abdullahkhalids	10.3379135	-7.210853	comment	3.0	13.5	1677363847	9.820156
34941418	I like sagemath. They have integrati	I like sagemath. They have integration with sympy, and they also have many features making python simpler when you want to do mathematical things.There's latex display feature when in notebook. It looks good, can even have symbolical matrices and display them 	machina_ex_deus	10.375804	-7.1593246	comment	3.0	16.0	1677366907	9.865541
34988816	Are microservices still what Google 	Are microservices still what Google chooses for Google-scale problems?	jamiesonbecker	9.7841835	-7.3499837	story	3.0	1.0	1677707296	-13.801261
37067695	> Some languages will wrap the value	> Some languages will wrap the value around, and some will actually abortWhat if a language had clamped int and modular mod types ? Overflow on mod would work as advertised and, if you disabled abort, overflow on int would be closer to its virtual value than i	alcover	10.594846	-7.021291	comment	3.0	12.0	1691611666	-6.994303
37095548	Very curious to learn more about wha	Very curious to learn more about what the monolith was doing so incredibly poorly that you managed to squeeze that much performance out of it. Poorly written queries? Too many queries?  Lack of any caching? Doing things synchronously when they could've been do	smarkov	9.82075	-7.3121376	comment	3.0	11.0	1691798967	13.833212
37099937	> Are people still using it today?Ye	> Are people still using it today?Yes, I am. Apple is too:https://blog.timac.org/2022/1005-state-of-swift-and-swiftui-...In my estimation, these are the primary reasons why some developers continue to use Objective-C:1) Rewriting an existing code base is almos	lapcat	10.477314	-7.7930636	comment	3.0	29.5	1691846813	-10.835236
37174878	Knowing nothing about micro, is ther	Knowing nothing about micro, is there a reason why development has slowed down over the last 1-2 years?https://github.com/zyedidia/micro/tags	alberth	9.799942	-7.321536	comment	3.0	11.5	1692362671	-13.814043
37228296	If you are doing transactions across	"If you are doing transactions across Microservices you have done ""Microservices"" incorrectly. Divide your microservices along business, not technical, concerns.While Microservices themselves can/should absolutely use transactions internally, they should be coa"	exabrial	9.789329	-7.3572507	comment	3.0	12.0	1692737250	-13.79849
37290002	It's unclear exactly what you mean b	It's unclear exactly what you mean by your remark that Ada's syntax hasn't aged well, let alone what a 21st-century overhaul would look like.Is there any chance you'd expand on that? I'm curious to know your thoughts.	nrr	10.647668	-7.714911	comment	3.0	12.0	1693199335	-5.1155972
37292055	Off topic: it's a bit shocking to se	Off topic: it's a bit shocking to see that a language like FORTRAN, with its enormous history, has a web page like that of Nim or Vale. It doesn't seem to be an official one, or is it?	tgv	10.473884	-7.394446	comment	3.0	11.5	1693218556	8.769716
37291976	An evaluation of risks associated wi	An evaluation of risks associated with relying on Fortran	reikonomusha	10.455967	-7.4171286	story	3.0	20.0	1693217967	8.806232
37477335	> Splitting a system into subsystems	> Splitting a system into subsystems allows each team to focus on their piece of the puzzle while minimizing the amount of peer-to-peer coordination.This does not happen at all. When you break a system into subsystems, all the previous connections that get rem	brhsagain	9.796886	-7.3276873	comment	3.0	15.5	1694498259	-13.814784
37477453	They are talking about deployment.Wi	They are talking about deployment.With micro-services if you screw up a deployment the service is down and if your platform is well designed the system will be degraded but not down.With a monolith the whole system is down.	threeseed	9.790338	-7.3579497	comment	3.0	10.5	1694499585	-13.809164
37532708	14 million doing not so complex thin	14 million doing not so complex things is an easy achievement. When you get into a lot of microservices providing tons of features your teams will balloon.	Sparkyte	9.781918	-7.359531	comment	3.0	22.5	1694848982	-13.814886
35110075	> Why use Octave instead of R, Pytho	> Why use Octave instead of R, Python, or Julia?I use Octave daily, for many numerical tasks (and also python and julia).  It has some advantages with respect to Python:1. The sparse linear solvers in octave are considerably more performant than those availabl	enriquto	10.224885	-7.91924	comment	3.0	12.0	1678553409	10.626886
28997512	Glad they went with NeXT though--Obj	Glad they went with NeXT though--Obj-C is a much better framework language than C++.I honestly think Objective-C is a big part of Apple's OS success.Edit:Building system APIs based on message passing provides a lot of flexibility and capability without having 	nielsbot	10.485718	-7.7316227	comment	3.0	12.0	1635234369	5.7125306
29010483	(the example I used is so simple it 	(the example I used is so simple it didn't really highlight the difficulty)My point is that one microservice cannot easily generate links for another.How does the customer microservice (that wants to be hypermediaful), generate a deep link into the order micro	abraae	9.7829685	-7.358097	comment	3.0	11.0	1635319635	7.2115316
29124002	Not the same thing.malloc() can tell	Not the same thing.malloc() can tell everybody it has the memory but when push comes to shove the OS will have to admit overbooking.	lmilcin	10.639541	-7.0501466	comment	3.0	11.5	1636141855	8.80081
29124245	Indeed. It's totally dumb that the O	Indeed. It's totally dumb that the OS is allowed lie to you when you've asked for some resources. And because of this behaviour people no longer check for success from malloc(), etc, because of laziness. It's a bad situation.	secondcoming	10.634628	-7.1151443	comment	3.0	23.5	1636143201	8.86752
29190812	Is there a point in having a monorep	Is there a point in having a monorepo if you're all in on the microservices approach? I'm a big microservices skeptic, but as far as I understand it, the benefit of microservices is independence of change & deployment enforced by solid API contracts—don't you 	nightpool	9.781689	-7.3560686	comment	3.0	11.0	1636653048	-13.823519
29459364	Jax is just a tool to generate XLA, 	Jax is just a tool to generate XLA, which produces extremely high performance computational graphs which can map to arbitrarily fast hardware, so I'm very skeptical of the utility of the conclusions of thelink you provided (which seems to be comparing single p	dekhn	10.02992	-7.938553	comment	3.0	11.5	1638796871	10.642369
29539772	> You want to know an unpopular opin	> You want to know an unpopular opinion?? I love Objective-C and I think it is better—way better than Swift. And—if you have discipline, the preprocessor is excellent.Very curious to the reasoning here. If you can get to the pointer level of Swift, you basical	anonymouse008	10.488751	-7.783936	comment	3.0	14.0	1639405277	5.497709
29576836	Maybe I'm too old, but I don't even 	Maybe I'm too old, but I don't even want to have to worry about all that. I think in terms of functions and I don't care if they are being called remotely or local.That was the promise back in the day of J2EE, and it seems to me Microservices are just a rehash	kkjjkgjjgg	9.782929	-7.362026	comment	3.0	15.5	1639650049	-13.781122
29576854	Unless you have a strong technical o	Unless you have a strong technical or organizational reason to use microservices, using microservices is just more work to achieve the same results.Organizational reason would be multiple people/teams who don't want or can't talk much to each other, so they de	deniska	9.783918	-7.35708	comment	3.0	18.5	1639650276	-13.815324
29578627	For Mathematica, the graphical outpu	For Mathematica, the graphical outputs and the vast pallette of functions is truly marvelous. IMO it feels a much superior product to Maple & MATLAB. If only they could make it bit more affordable to individual hobbyists. If I remember right, it is $200 per ye	srvmshr	10.2324095	-7.579994	comment	3.0	17.0	1639665998	10.233697
29584905	My theory is that microservices beca	"My theory is that microservices became vogue along with dynamically typed languages. Lack of static types means that code becomes unmanageable at a much lower level of complexity. So the complexity was ""moved to the network"", which looks like a clear win if yo"	stickfigure	9.786714	-7.355811	comment	3.0	11.0	1639694026	-13.795481
29610689	> It really doesn't. It doesn't even	> It really doesn't. It doesn't even have native support for bitfields.Many people would consider C bitfields half-baked in the first place, given that the feature is well-known to be underspecified in a way that leads to compatibility/portability concerns. Is	zozbot234	10.582006	-7.088151	comment	3.0	10.5	1639879533	-5.707659
29619909	Swift was conceived and sold as an a	"Swift was conceived and sold as an all purpose language. 
To an extreme degree, in fact. Lattner has said many times that it's intended from scripting to system programing[1]. Currently it's good at neither.I think a language that's simultaneously productive a"	tambourine_man	10.508711	-7.8418674	comment	3.0	12.0	1639957992	-10.834855
29558409	Abrahams on the Design of Swift	Abrahams on the Design of Swift	mpweiher	10.47018	-7.8289633	story	3.0	11.0	1639518577	-10.839342
29574023	Hardened_malloc	Hardened_malloc	Seirdy	10.650615	-7.1441894	story	3.0	8.0	1639620559	8.900626
29580598	Orchestration and Microservices – A 	Orchestration and Microservices – A match made in heaven	hackerdad	9.775071	-7.3321223	story	3.0	15.0	1639674637	-13.640269
29595017	Patterns for authorization in micros	Patterns for authorization in microservices	gkaemmer	9.796667	-7.3410745	story	3.0	23.0	1639760935	-13.727598
35885136	>Matlab users should switch to Julia	>Matlab users should switch to Julia. [...] What prevents matlab users from switching? The syntax is similar.Choosing a programming language based on just comparing the language syntax only works for academic settings or toy projects for self-curiosity and lea	jasode	10.201499	-7.867002	comment	3.0	22.0	1683708106	10.599074
35885281	I really don't feel that there is ma	I really don't feel that there is magic in PyTorch or jax, but that may be because I have written my own autograd libs.In PyTorch you have a graph that is created on runtime by connecting the operations together in a transparent manner.Jax may feel a bit magic	PartiallyTyped	10.0914135	-7.9767737	comment	3.0	11.5	1683709988	10.622356
35885427	A lot has changed in a few years. Th	"A lot has changed in a few years. This release is a big one.1. I run Julia on my smartphone and often use it as calculator.2. You typically only need Plots.jl for most needs. See
https://docs.juliaplots.org/stable/3. See https://juliaacademy.comAnother alterna"	markkitti	10.186834	-7.918198	comment	3.0	12.0	1683711785	10.593609
35931783	"> I think the reason why the ""pro Ob"	"> I think the reason why the ""pro Obj C"" lobby strikes such a nerve is that their personal preference is holding back the whole team.You appear to be complaining about some anecdotal experience of yours. Exactly how many different teams have you been on where "	lapcat	10.485296	-7.7645683	comment	3.0	10.5	1684005772	5.6328297
35960351	I'm gradually moving to (modern) For	I'm gradually moving to (modern) Fortran, and it's just lovely to see all this activity.  Fortran really reaches a sweet spot if all you want to do is write straightforward numerical algorithms that run reasonably fast.	enriquto	10.477615	-7.3939085	comment	3.0	18.0	1684236906	8.8653555
36027062	Why is it not better for Apple to ma	Why is it not better for Apple to make Swift truly cross-platform?Is it just that the maintenance cost is not worth it? Or would it threaten its ecosystem in a way that I don't understand?It would seem that making Swift cross-platform would make Apple's ecosys	nequo	10.467004	-7.8212147	comment	3.0	11.5	1684725367	-10.845705
36027091	> just... completely don't understan	> just... completely don't understand the appeal of Swift beyond it being Apple's in-house language.It's like Rust in that it offers memory safety by default without a big performance hit.	GeekyBear	10.487474	-7.820377	comment	3.0	19.5	1684725675	-10.806428
36027888	While it’s true that the language is	While it’s true that the language is really only useful on just Apple platforms, it is still quite an amazing language. I have professionally used about half a dozen languages over the last many years, written hundreds of thousands of lines each in all those l	jb1991	10.481682	-7.803494	comment	3.0	14.0	1684734760	-10.797784
36124295	I recommend reducing the warning lim	"I recommend reducing the warning limit on slow compilation in Swift.  -Xfrontend -warn-long-function-bodies=<limit-ms>
  -Xfrontend -warn-long-expression-type-checking=<limit-ms>

Set these to ~100ms and add a few explicit types whenever they log, and compile "	danpalmer	10.538969	-7.8026323	comment	3.0	11.0	1685451364	-10.856303
36124900	Also, a reminder that JS engines do 	Also, a reminder that JS engines do regularly have to contend with enormous JSON and do not generally display pathological behavior for large literals.I'm not sure who posted that comment, but if they are on the Swift team and blaming users, that should stop. 	titzer	10.497302	-7.8187375	comment	3.0	15.5	1685454680	-10.800071
36101090	Clojure programmers – is it still re	Clojure programmers – is it still relevant?	sourya95	9.7824	-7.358353	story	3.0	4.0	1685247568	-13.811452
36215901	It’d be interesting to see a perform	It’d be interesting to see a performance comparison of SwiftData vs. (objc?) CoreData vs. plain XML for large datasets. I recall plain XMLs being faster than CoreData a few years ago in certain scenarios.	trinix912	10.478637	-7.8186207	comment	3.0	12.0	1686071149	-10.82489
36215992	I’m actually really looking forward 	I’m actually really looking forward to this. I tried building a few apps in 100% SwiftUI coming from React/Node.js and it was a pretty major pain. I also don’t know UIKit so I couldn't easily fallback.	koinedad	10.469318	-7.818645	comment	3.0	13.0	1686071541	-10.862084
36220089	I find it very notable that Graydon 	"I find it very notable that Graydon Hoare, the ""founder"" of Rust, went on to work at Apple on Swift for a while.Also, Swift had tremendous work to implement ABI stability[1], which really allows it to be used as an OS API, which Rust can't do.[1] https://fault"	AceJohnny2	10.663235	-7.923657	comment	3.0	12.5	1686091240	-10.830505
36219181	Ownership in Swift: Manifesto and me	Ownership in Swift: Manifesto and meta-proposal (2017)	praseodym	10.506165	-7.8311963	story	3.0	92.0	1686085923	-10.841951
36383055	Microservices: Software complexity s	Microservices: Software complexity solutions to human organisation problems.Remember when microservices were pitched as 'allowing you to use the right language for the job'? What a wonderful life the person who thinks a balkanised tech stack is good must have 	anotherhue	9.781876	-7.355919	comment	3.0	18.5	1687113773	-13.812232
36383220	My issue with microservices isn't th	My issue with microservices isn't the network calls, it's the extra work to keep the source code up to date.New spring library? Have fun applying the same changes to 14 different microservices.Microservices might make sense with completely different teams deve	ars	9.792697	-7.3587065	comment	3.0	10.5	1687114855	-13.814605
36429763	It's the second, younger generation 	"It's the second, younger generation of devs who are realizing that ""complexity kills"". Those of us who started in 2000's have already seen this. It's a natural cycle. We are seeing a spring-back to monoliths and away from micro-services and crazy tooling chain"	papito	9.797054	-7.3763127	comment	3.0	14.5	1687426149	-13.82087
36473566	Forget about 8B people in this conte	Forget about 8B people in this context. If you have 1000 microservices in the company and each has 100 rps, you are looking at ca. 100k rps to a Zanzibar-style system to authorize every request (not to authenticate a user).	smarx007	9.788142	-7.313001	comment	3.0	12.5	1687734245	-13.785495
36488127	Domain-Oriented Microservice Archite	Domain-Oriented Microservice Architecture (2020)	yla92	9.785147	-7.3582096	story	3.0	69.0	1687831258	-13.805314
25800495	I think a big reason is that microse	I think a big reason is that microservice architecture forces teams to establish clear boundaries rather than leave it to team diligence.For less centralized organizations, I think it can be a useful forcing function.	marshmellman	9.783867	-7.359667	comment	3.0	11.5	1610777743	-13.819146
25821559	Cython - in fact I think in 2021 if 	Cython - in fact I think in 2021 if you want to write a pure C or pure C++ program, Cython is the best way to go, and just disable use of CPython.The “need to rewrite” is actually a sort of advantage with Cython. You only target small pieces of your program to	mlthoughts2018	10.258834	-7.9542923	comment	3.0	11.0	1610976537	10.647098
25825657	DSP Performance Comparison Numpy vs.	DSP Performance Comparison Numpy vs. Cython vs. Numba vs. Pythran vs. Julia	cycomanic	10.287154	-7.9166484	story	3.0	3.0	1610998790	10.666553
25844375	But we don't need to rely on Dijkstr	But we don't need to rely on Dijkstra's opinion at all. Plenty of us have programmed with both 1-based and 0-based languages and (most of us) will tell you that it doesn't really make much of a difference in practice. It (generally) doesn't change how you conc	josephg	10.632706	-7.1864185	comment	3.0	11.5	1611135057	-9.506956
25879568	Objective-C, at least these days, is	Objective-C, at least these days, is plenty fast, with a the cost of a message send being comparable to a virtual function call. The fast path of objc_msgSend is just over a dozen instructions.	saagarjha	10.514344	-7.653102	comment	3.0	12.0	1611375154	5.729228
25889044	I don't understand splitting an API 	"I don't understand splitting an API into a bunch of ""microservices"" for scaling purposes. If all of the services are engaged for every request, they're not really scaled independently. You're just geographically isolating your code. It's still tightly coupled "	potta_coffee	9.805812	-7.3476706	comment	3.0	13.0	1611460452	-13.817764
25974526	It has a pretty large cost for small	It has a pretty large cost for small amounts of work, but Z3 seems like a good dependency for an optimizing compiler - asking it to do nothing from C++ seems to cost about 4ms, which isn't cheap but you can batch these things.I'm not sure exactly what data str	mhh__	10.61375	-7.2123723	comment	3.0	10.5	1612053394	12.543398
26067206	I'd get an expert witness in there t	I'd get an expert witness in there to testify basically that.I also don't think you should code anything mission critical like this in Matlab. It's a decent language for prototyping, not for production.	carlmr	10.208186	-7.7475142	comment	3.0	11.5	1612804183	10.554185
26117759	I disagree with the pitch, but the p	I disagree with the pitch, but the pitch I heard when this was announced was:* Swift lets you write code that's as concise as Python while still being fast, and therefore allows you to get away from the problem of having to write ML code in multiple languages 	SatvikBeri	10.481421	-7.8291287	comment	3.0	12.5	1613159202	-10.845892
26118045	I suspect that we'll be seeing ObjC 	I suspect that we'll be seeing ObjC for a long time, as the lower-level system language for Apple devices. I know that Apple still uses it for much of their system programming. No idea if that's by choice, or legacy (possibly both).I was looking at the upcomin	ChrisMarshallNY	10.481641	-7.8048663	comment	3.0	14.0	1613160881	-10.827605
26118087	>I think Serverless would be another	>I think Serverless would be another ideal use-case for Swift, where the productivity, clarity and correctness tools it offers would be a huge benefit.Oh yes, I would love to have Swift framework for Firebase on server, not only for iOS. Its atrocity to write 	mrtksn	10.479619	-7.821873	comment	3.0	16.5	1613161132	-10.85031
26119266	I love Julia in general, but yeah, I	I love Julia in general, but yeah, I hate `end`.Re: 0-indexing vs 1-indexing. If you use 0-indexing, you turn off a lot of  non-engineering scientific programmers. My personal experience is that 0-indexing is better for more engineering applications, while 1-i	SatvikBeri	10.31402	-7.8269935	comment	3.0	10.5	1613168933	10.582053
26190750	I'm embarrassed to say that I recent	I'm embarrassed to say that I recently built microservices first, and am now kicking myself as I merge them back in to a monolith.	foreigner	9.785925	-7.361674	comment	3.0	11.0	1613722175	-13.822781
26191595	I think my biggest gripe with orgs t	I think my biggest gripe with orgs that adopt microservices is they don't build out any of the testing, CI/CD, monitoring and debugging workflows to support it.  It goes from shitty, slow monolithic application that super-pro can debug in a few minutes to.. Sl	Mandatum	9.781894	-7.352272	comment	3.0	16.0	1613731100	-13.817139
26192490	I mean, you can always deploy your m	I mean, you can always deploy your microsevices on the same host, it would just be a service mesh.Adding network is not a limitation. And frankly, I don't understand why you say things like understanding network. Like reliability is taken care of, routing is t	bulleyashah	9.787095	-7.3584137	comment	3.0	11.0	1613738442	-13.825285
26193208	Monoliths don't have to be deployed 	Monoliths don't have to be deployed as single instance.In any case, too many rush for micro-services with the intent reason to use the network as a package boundary.Have you ever tried to debug spaghetti RPC calls across the network?I sadly have.	pjmlp	9.790222	-7.352071	comment	3.0	12.0	1613743348	-13.825592
26192555	Monoliths are also distributed syste	Monoliths are also distributed systems and will run on multiple hosts, most probably co-ordinating on some sort of state (and that state management will need to take care of concurrency, consistency). Some hosts will go down. Service traffic will increase.I un	bulleyashah	9.819406	-7.325423	comment	3.0	12.0	1613738931	-13.802261
26206576	The experience from a few years ago:	"The experience from a few years ago: ""Then we hit a wall with the dynamic linker. At the time you could only link Swift libraries dynamically. Unfortunately the linker executed in polynomial time so Apple’s recommend maximum number of libraries in a single bin"	lehi	10.486528	-7.7997265	comment	3.0	11.0	1613846244	-10.826759
26212668	I don’t do “boring,” as much as I do	I don’t do “boring,” as much as I do “mature and robust.” I like shipping products, as opposed to just “writing” them, and shipping is boring. Lots of annoying intricacies and processes.I’m writing a fairly large-scale app, right now.It’s written in Swift (fro	ChrisMarshallNY	10.462486	-7.820256	comment	3.0	12.0	1613906909	-10.8172
26383485	It’s always going to be orders of ma	It’s always going to be orders of magnitude more difficult/expensive to retrofit testability. I’d argue that they were successful despite their approach not because of it.I actually have a lot of time for their design choices (monolith, scale up as much as pos	beny23	9.803273	-7.2855935	comment	3.0	12.0	1615192965	-13.81104
26454695	It took until C99 for C to have comp	It took until C99 for C to have complex numbers and `restrict`. Those are two features FORTRAN has had for a much longer time, right?	TazeTSchnitzel	10.485939	-7.387783	comment	3.0	12.0	1615724251	8.827497
26455763	Engineers are horrified to learn tha	Engineers are horrified to learn that mathematical modeling is done in a language created in the 50s, but aren't bothered by the fact that the dominant computer interaction model used in the field right now dates back to pre-WW2 teleprinters. Someone is lackin	colllectorof	10.465555	-7.4169855	comment	3.0	10.5	1615732474	8.835125
31062858	I am generally in the camp of maxima	I am generally in the camp of maximally explicit and consistent semantics for integer types. The old C-style types (short, int, etc) and related promotion rules was the source of numerous bugs in practice, particularly when porting code across architectures wi	jandrewrogers	10.631647	-7.0249543	comment	3.0	17.5	1650218861	-6.964503
31087201	https://docs.sympy.org/ is down …see	https://docs.sympy.org/ is down …seems like a lame move for a programming-oriented company.The takedown message is here – https://github.com/github/dmca/blob/master/2022/04/2022-04-1...And the offending page is archived here, I wonder what part they wanted rem	hrldcpr	10.317729	-7.2033234	comment	3.0	12.0	1650393900	9.885481
31202483	It’s only “brilliant” if you think d	It’s only “brilliant” if you think data corrupting bugs that fail to run expected code and silently spread “nil” throughout your application’s data model are brilliant.If something can be nil, handle the case. There’s nothing brilliant about objective-C’s nil 	teakettle42	10.534958	-7.7546296	comment	3.0	13.5	1651218219	5.609066
31225999	Swift gets weirder and more difficul	Swift gets weirder and more difficult, C++ gets better. Will the two lines intersect? Probably not, but I'm starting to wonder.I wish C++ had a few more cosmetic and convenient things that I've gotten used to in Swift. 1. Properties with get/set/didSet blocks.	rnikander	10.597111	-7.7846503	comment	3.0	17.5	1651420100	-10.809026
31226099	Google basically withdraw from clang	Google basically withdraw from clang after they lost the ABI vote, and Intel is now taking care of what used to be mostly Google stuff.If I remember correctly some discussions on /r/cpp.As for Apple, OP is right, Metal Shaders are based on C++14 dialect, IOKit	pjmlp	10.580648	-7.149494	comment	3.0	11.5	1651420813	-7.3659067
31275107	Yours is the first positive comment 	Yours is the first positive comment I read on HN about SwiftUI.	copperx	10.454515	-7.8251467	comment	3.0	11.0	1651766708	-10.855257
31275920	It's not C code. It calls into a mix	It's not C code. It calls into a mixture of C, CUDA, Fortran, and a slew of other things. Someone did the work of finding the best library for me, and integrating them.As for me, I write:A * BIt multiplies two matrices. C can't do that. In C, I'd have some unr	blagie	10.597452	-7.301461	comment	3.0	15.5	1651770363	8.984414
31331631	So use transactions? I don't underst	So use transactions? I don't understand what part of microservices prevents that. In fact, transactions are pretty fundamental to reliable systems.https://www.hpl.hp.com/techreports/tandem/TR-85.7.pdfFrom the abstract:>It is pointed out that faults in producti	staticassertion	9.785426	-7.3597474	comment	3.0	13.0	1652211517	-13.789399
31331184	> Network boundaries cause far more 	> Network boundaries cause far more problems than they solve,They cause exactly 0 extra problems. A call from function A to function B can fail due to B having a bug. A call from service A to service B can fail due to B having a bug or a network failure. Eithe	staticassertion	9.844887	-7.2995214	comment	3.0	25.0	1652209436	-13.796814
31377456	So why isn't C the baseline (and zig	So why isn't C the baseline (and zig and rust being pretty close to it quite expected), but both luajit and julia are significantly faster??	throw827474737	10.234876	-7.934032	comment	3.0	16.5	1652532863	10.76989
31377564	C, C++, Zig, Rust, D, and Haskell ar	C, C++, Zig, Rust, D, and Haskell are all similar because they're basically doing the same thing. Someone else linked to the blog post, but Lua and Julia aren't doing the same thing, so they get different results.> both luajit and julia are significantly faste	bachmeier	10.271938	-7.9279447	comment	3.0	10.5	1652533664	10.740186
31447221	This reminds me of a professor I had	This reminds me of a professor I had on numerical methods.The guy was an absolute genius.  He helped write some amount (a lot?) of the FORTRAN compiler for at least one of its variants. And... we used state of the art numerical methods.  We had a textbook on n	Enginerrrd	10.445421	-7.397082	comment	3.0	20.5	1653054029	8.813739
31505950	If you like SwiftUI, I challenge you	If you like SwiftUI, I challenge you to a SwiftUI fizzbuzz:a square, screen width, 10x padding, red background.inside it, a little square, centered and a little square, top left corner, 10px padding, blue background for both.Tell me that was easy, so that I kn	alexashka	10.458708	-7.816394	comment	3.0	14.5	1653492528	-10.864406
31715149	I'm surprised it doesn't mention sel	"I'm surprised it doesn't mention selling ""mash ups"".  I imagine there's some opportunities to talking to one service and decorating it with associated data from another service.  Or even just better thought out aggregated services from one provider.  I suppose"	tyingq	9.789804	-7.3231287	comment	3.0	11.0	1655047168	-13.765992
31676258	Distributed Actors in Swift	Distributed Actors in Swift	todsacerdoti	10.570178	-7.8247447	story	3.0	17.0	1654734550	12.819154
31728190	Yeah, I agree.I've worked with a var	Yeah, I agree.I've worked with a variety of monoliths. The biggest complaint I've had from companies who utilize that architecture is that I shouldn't have to run entire pre and post pipelines to make a minor change to an internal function that only affects on	ar_lan	9.786703	-7.34825	comment	3.0	11.5	1655139353	-13.824118
31728812	Yup I've seen it at just about every	Yup I've seen it at just about every company I've worked for. A cluster of microservices that is really just a distributed monolith. Is it really a microservice if changing one part of it requires making echoing changes to every service downstream? Is it reall	ryanmcbride	9.785412	-7.364222	comment	3.0	19.5	1655142146	-13.823411
14118105	Global optimizations mostly do not r	Global optimizations mostly do not rely on UB in order to get speed-ups, so this is not an A:B test of the value of UB.	pizlonator	10.665654	-7.137468	comment	3.0	11.0	1492211349	-7.0431857
14116613	ObjC equivalents to Swift solutions 	ObjC equivalents to Swift solutions #1: Avoiding ObjC class name collisions	penpapersw	10.527291	-7.796255	story	3.0	12.0	1492198379	5.74124
14137036	5 key learnings after 8 years of iOS	5 key learnings after 8 years of iOS development	antonholmquist	10.412829	-7.8100505	story	3.0	16.0	1492499999	-10.814849
14208983	>  The reason for this is that, as m	>  The reason for this is that, as much as I know, that a compiler does type checking for every single file. So if you spawn 200 processes of Swift compilers, it needs to 200x check all the other files and make sure that you're using the correct types.I'm a bi	hota_mazi	10.493231	-7.814484	comment	3.0	13.0	1493263813	-10.846785
14209093	Ada does not have parametric polymor	Ada does not have parametric polymorphism, algebraic data types, Objective-C interoperability, etc.	slavapestov	10.659179	-7.7204595	comment	3.0	11.0	1493265888	-5.1273594
14209895	It's such a pity these days there is	It's such a pity these days there is no modern tool chain/workflow for Ada (or C++ for that matter). I mean, a package manager, a build tool with integrated dependencies. As far as I know, there is very little open source software for Ada. It's a shame, becaus	evacchi	10.66372	-7.7195134	comment	3.0	14.5	1493279465	-5.130376
14269664	I fully agree and if you look at my 	I fully agree and if you look at my other comments in this thread you will see the things that I think are done better and the advantages that I feel modern languages have.In this case age has something to do with it. There are far fewer people who know fortra	gravypod	10.484797	-7.398225	comment	3.0	11.0	1493939118	8.81648
14265307	NASA wants YOU (to make its Fortran 	NASA wants YOU (to make its Fortran code run faster)	drhurdle	10.460281	-7.404274	story	3.0	2.0	1493910210	8.810591
14275203	TL;DR:  memcmp(received_passwd_hash,	"TL;DR:  memcmp(received_passwd_hash, correct_passwd_hash, received_pwd_hs_len)

Hey, at least they didn't read past the submitted buffer.edit:Note that this is only pseudocode and rumor has it that ME firmware is actually written mostly in Java. It's not immed"	qb45	10.6467905	-7.03926	comment	3.0	10.5	1494005560	-7.039775
14285001	The big question is would the Python	The big question is would the Python script crash or handle the error when obvious problems like not valid JSON or file not found happen?My experience with Swift vs Objective-C is that clean Swift is crash free but more verbose when all other things are equal.	dep_b	10.488926	-7.805913	comment	3.0	10.5	1494157975	-10.834644
14364797	Swift has both external and internal	"Swift has both external and internal parameter names for functions. This is to make API design more readable, easier to parse through.For example, you can have a function like so:    func greet(with greeting: String, to personName: String) {
        print(""\(g"	Watabou	10.604866	-7.778373	comment	3.0	12.0	1495081394	-10.806268
14415682	There are good points in there, but 	There are good points in there, but I disliked some of the scare quotes.Microservices were not just concocted by a team at Netflix, and everyone then followed. Instead, microservices emerged across many different companies and teams concurrently. The architect	afpx	9.780295	-7.3625636	comment	3.0	15.5	1495694377	-13.819931
14649050	Also a problem for Octave. Remember 	"Also a problem for Octave. Remember this?https://news.ycombinator.com/item?id=13603575It also stings a little when people say that it's completely obsolete because Matlab itself is ""legacy"" and we should all be abandoning the language, Octave included... and y"	jordigh	10.210587	-7.7962685	comment	3.0	16.0	1498595131	10.446736
14650668	Octave’s “business model” is “give a	Octave’s “business model” is “give away for free an inferior clone of a commercial product”. Why is anyone surprised that that isn’t lucrative? Anyone who has the money to spend on Octave is likely to just pay for Matlab. The defining feature of Octave users i	jacobolus	10.18982	-7.79625	comment	3.0	13.0	1498607871	10.457885
14673506	 Wow, he just really really does not	 Wow, he just really really does not like C++. He is certainly an extremely knowledgeable C++ guy, obviously Swift is written in C++, but it's hard to entirely agree with his opinion on it across all fronts.	hellofunk	10.575202	-7.686912	comment	3.0	13.5	1498855548	-10.758649
14677544	A C implementation of objc_msgSend w	"A C implementation of objc_msgSend would look like:    ... objc_msgSend(id self, SEL _cmd, ...) {
        fptr = ...lookup code...
        return fptr(self, _cmd, args...)
    }

There's no way to express that args... argument when calling the function pointer"	mikeash	10.545038	-7.5844607	comment	3.0	20.5	1498923679	-7.2262516
20346616	Subscripts and superscripts are prob	"Subscripts and superscripts are probably some of my most-used unicode identifiers.  Supported in Julia but not Python 3.    In [1]: α₁ = 1
      File ""<ipython-input-1-3c2973844bb9>"", line 1
        α₁ = 1
         ^
    SyntaxError: invalid character in ident"	3JPLW	10.211875	-7.927691	comment	3.0	15.0	1562175735	10.675651
20346679	Yeah, I was more than a little surpr	Yeah, I was more than a little surprised to see his perspective - I thought for sure he was going to rave about Julia, pick on Python a little, and skewer Matlab.  My graduate thesis advisor forced me to use Matlab to do all of my master’s thesis work, and I f	commandlinefan	10.222939	-7.779146	comment	3.0	11.0	1562176139	10.507503
20464448	It seems like most or all of the ben	It seems like most or all of the benefits listed in this post could have been achieved just as easily by changing code in their monolith. Like the ElasticSearch optimizations and the decoupling from the relational database.Similarly the benefits they do tie ex	trishume	9.80019	-7.3490434	comment	3.0	19.0	1563400583	-13.822817
20464622	I do not disagree with your comment.	"I do not disagree with your comment. As I mentioned in the article the main reasons to break into micro-services are:1. Independent releases
2. Easier for on-boarding new engineers
3. Scale micro-services independentlyThe rest of the article is about how to us"	seperman	9.784293	-7.357747	comment	3.0	14.5	1563402034	-13.821591
20489909	WASM Builds of the Z3 SMT Solver	WASM Builds of the Z3 SMT Solver	espeed	10.61829	-7.0799556	story	3.0	55.0	1563682247	-6.5419755
20538900	Should I Py or Should I Fortran?	Should I Py or Should I Fortran?	milancurcic	10.509891	-7.407536	story	3.0	4.0	1564180046	8.882242
20604602	Ada is my favorite 'almost' language	Ada is my favorite 'almost' language. I'm writing a Kalman filter example in it right now. Just about every programming error from some large C/C++ codebase wouldn't happen in Ada. It's got manual and automatic memory management, separate storage pools, packed	inamberclad	10.6555805	-7.717149	comment	3.0	14.5	1564896855	-5.139124
20662769	Why our team cancelled our move to m	Why our team cancelled our move to microservices	jose_zap	9.781747	-7.3593693	story	3.0	27.0	1565452840	-13.817907
20839267	Can someone explain to a C/C++ newbi	Can someone explain to a C/C++ newbie why the iPhone is so vulnerable to overflows? My understanding is that tools exist to check your code and identify overflow-able areas or general unsafe pointer areas. Am I incorrect here?Also, from a broader point of view	xvector	10.607743	-7.162162	comment	3.0	12.0	1567177286	-6.5676227
20873412	Objective-C uses a hash table cache 	Objective-C uses a hash table cache for all method calls. It's a bit different in that Objective-C deals with collisions by just not handling them: since it's only a cache, collisions will result in going through the slow name lookup path.Mike Ash has a nice s	pcwalton	10.524007	-7.665436	comment	3.0	12.0	1567563716	5.6874957
20892007	I'm not a Swift programmer, so perha	"I'm not a Swift programmer, so perhaps my confusion is just a symptom of broader ignorance, but I find two things unclear here:
- What does 'first-class' mean, really?
- Which of these benefits are unique to integrating notions of derivatives into the language"	abeppu	10.478413	-7.8210816	comment	3.0	20.0	1567730563	-5.4737015
20933192	Many of the 'programmers' of those d	Many of the 'programmers' of those days lacked the sophistication and education to appreciate Ada.Just the mojo required to print an integer (having to instantiate a generic) was considered complicatedAda was also very slow to compile, on the order of 10 times	bdavis__	10.646865	-7.729333	comment	3.0	38.0	1568146679	-5.1107407
20934158	As I've probably posted before, I wa	"As I've probably posted before, I was at a Dijkstra lecture in the early 80s where he put up one of his famous hand-drawn slides that said ""Ada: The latest government boondoggle that will take 5 years and 5 million dollars to kill."" [5 million dollars was a lo"	dreamcompiler	10.629711	-7.7131066	comment	3.0	11.5	1568151953	-5.081878
23856206	Julia also has 1-based indexing .. Y	Julia also has 1-based indexing .. You get used to it pretty quickly.	sriku	10.243011	-7.8909616	comment	3.0	10.5	1594878910	10.579387
23945640	Depending on what angle you come at 	"Depending on what angle you come at this from, you could say that DOMA groups services into clusters (""domains""), as Uber has done here, or that services always should have been domain-driven, and DOMA welcomes the networking layer inside the bounded context a"	Twisol	9.787914	-7.3575153	comment	3.0	14.0	1595634610	-13.82234
24003453	When did Ada become popular in the e	When did Ada become popular in the embedded RTOS space? First I've heard of it and I've been working in the space for two decades.	staycoolboy	10.638301	-7.7234907	comment	3.0	15.5	1596147418	-5.092997
24019446	> For the consumer market, the abili	> For the consumer market, the ability to run iOS apps becomes an additional huge benefit.I see it more as a stepping stone.  It's difficult to imagine how a UI designed for iOS would ever not feel strange on a laptop.  But SwiftUI seems like a great tool for 	skohan	10.46741	-7.7968826	comment	3.0	15.0	1596279081	-10.765888
24118233	> Platform vendors like Apple, Googl	> Platform vendors like Apple, Google, MS don't want to let developers target multiple ecosystemsIs this actually true? As in, I see how we may arrive at the same outcome anyway, but at this point, do those companies actually care about aggressive lock-in?- Ap	viraptor	10.467737	-7.802724	comment	3.0	11.0	1597133303	-10.812416
24287733	The Monolith That Breaks Up Itself	The Monolith That Breaks Up Itself	mbellotti	9.838883	-7.26796	story	3.0	31.0	1598478862	13.426672
24405297	You can also realistically learn Swi	You can also realistically learn Swift and then never have to write anything else again, until iOS stops being a career at least.	xenihn	10.4571495	-7.821545	comment	3.0	12.5	1599540572	-10.834348
24405312	People used to think the same thing 	People used to think the same thing about Objective C	usrnm	10.47151	-7.7425733	comment	3.0	11.0	1599540745	5.736781
33095894	Something I notice when dabbling in 	Something I notice when dabbling in random client side frameworks is how it’s not obvious how to go from the building blocks in the docs to more complex use cases.SwiftUI is a great example of this struggle where the docs show API building blocks but tend to e	hombre_fatal	10.433288	-7.8297787	comment	4.0	11.0	1664979552	-10.859195
33276688	SOA is just Spaghetti Architecture. 	SOA is just Spaghetti Architecture. I haven't seen an implementation that convinces me otherwise.	soperj	9.898738	-7.2820487	comment	4.0	16.0	1666281651	1.5242069
33410329	I'd like to take this moment to call	I'd like to take this moment to call out how atrocious Apple developer documentation is. This is honestly embarrassing. I would reject contributions at my company that shipped APIs/headers with this caliber of documentation. People who do it regularly get bad 	duped	10.507661	-7.798108	comment	4.0	12.0	1667240947	-10.833799
33481599	The thing about Mathematica / the Wo	The thing about Mathematica / the Wolfram language is that it's quite a bit harder to create an open source interpreter than it was for eg R (which is actually a FOSS interpteter for the commercial package S) or for Matlab (not sure what the status of Octave, 	c7b	10.26973	-7.545911	comment	4.0	12.0	1667657235	10.282195
33506955	I would actually really love Ada if 	I would actually really love Ada if it weren't for a couple extremely frustrating syntax decisions: using parentheses for both call arguments and array subscripts, and making parentheses optional for calls with no arguments. Those two decisions make it incredi	CivBase	10.657648	-7.718472	comment	4.0	12.0	1667834633	-5.1402264
33510975	I worked on NSInvocation during Appl	I worked on NSInvocation during Apple's 64 bit transition. NSInvocation is an FFI: it allows you to construct calls to ObjC methods given a runtime signature, which means implementing the calling conventions of four platforms (PPC and x86, 32 and 64 bit).My ap	ridiculous_fish	10.517343	-7.2756987	comment	4.0	11.5	1667849122	-7.3844776
33587560	Microservices vs. monoliths is a fal	Microservices vs. monoliths is a false dichotomy in the present day.If you put microservices in a monorepo with a good build tool (like NX), put the common auth/logging/types/dtos/etc. functions in reusable libs, and version/release all the apps together, you 	basicallybones	9.796976	-7.350005	comment	4.0	12.0	1668375172	-13.823901
33601855	A lot of people may not remember thi	A lot of people may not remember this, but the microservices bandwagon was pushed heavily by Heroku, which (at the time) was a ubiquitous and influential platform among devs working at startups.Why did they care? Because their particular hosting model at the t	smt88	9.777619	-7.354197	comment	4.0	19.0	1668463201	-13.818048
33659767	I am fascinated by how the general c	I am fascinated by how the general community perceives swift. The PL theory community seems to appreciate its innovations, while the (online) dev community sees it as Apple's own C#.Ultimately, I think Swift is a hugely underrated language, mainly because of o	hazn	10.459157	-7.8282895	comment	4.0	19.5	1668797020	-10.843348
33691635	Introduction to Embedded Systems Pro	Introduction to Embedded Systems Programming (Ada)	gusthoff	10.652828	-7.6820927	story	4.0	135.0	1669032185	-5.1257186
33770633	C standards fault. GCC has intrinsic	C standards fault. GCC has intrinsics that let you do arithmetic safely with overflow checksJust use themhttps://gcc.gnu.org/onlinedocs/gcc/Integer-Overflow-Builtins...	nly	10.591656	-7.0171285	comment	4.0	13.0	1669620003	-6.9733624
33771457	I think it was a mistake when CPU an	I think it was a mistake when CPU and language designers decided to make overflow in arithmetic operations not an error. This is wrong. Overflow can produce invalid data, which can break something elsewhere. Overflow has been a reason for security vulnerabilit	codedokode	10.645017	-7.0330644	comment	4.0	13.5	1669627875	-6.9471107
33772519	"> ""If my program contains UB, and th"	"> ""If my program contains UB, and the compiler produced a binary that does X, is that a compiler bug?"" It's not a compiler bug.True, if the language spec is the only thing in the universe you care about. But there are better and worse things compilers can do i"	vintermann	10.661903	-7.089424	comment	4.0	23.0	1669636712	-7.054831
33772803	No it doesn't. Modern processors do 	No it doesn't. Modern processors do out-of-order execution, so your program might be doing UB before you expect.	suprjami	10.652078	-7.043199	comment	4.0	14.5	1669638763	-7.0566587
33770905	> The moment you enter a compilation	"> The moment you enter a compilation unit (assuming no link optimizations) with a state which at some point will run into undefined behavior all bets are of. [...] Yes, UB can ""time travel""Close, but not quite. This is a common misconception in the reverse dir"	dataflow	10.656739	-7.132042	comment	4.0	18.0	1669622347	-7.121124
33773218	Haven't done Swift and Cocoa in a wh	Haven't done Swift and Cocoa in a while, but is there any major disadvantage to just not using SwiftUI?	sgt	10.453808	-7.8283005	comment	4.0	15.5	1669641263	-10.938368
33781575	> You quickly start getting compile 	"> You quickly start getting compile errors if your method bodies are deemed too complex (""The compiler is unable to type-check this expression in reasonable time; try breaking up the expression into distinct sub-expressions"").I had no idea that was a thing! I'"	saghm	10.511083	-7.8050365	comment	4.0	12.0	1669679128	-10.828512
34048206	Like some of the sibling posters, I'	Like some of the sibling posters, I'll use this opportunity to share my feelings on Ada. I checked it out a few years ago, and I was amazed at how much it has to offer. Despite being designed by committee in the late 70s, Ada has many features that remain nove	ajxs	10.649522	-7.715695	comment	4.0	12.0	1671421579	-5.1430807
26487219	Every time I read about new Swift fe	"Every time I read about new Swift features, I'm reminded of this paragraph from Aaron Hillegass's book ""Cocoa Programming for Mac OS X"". I don't know why.    Once upon a time, there was a company called Taligent, which was created by IBM and Apple to develop a"	sai_c	10.469769	-7.830627	comment	4.0	12.5	1615961673	-10.823017
26500388	Tough luck. Using 0-indexing would h	Tough luck. Using 0-indexing would have lost Matlab users to the Julia community. So they consciously decided to rather lose you. :-)I got used to switching between 0/1-indexing. The only place it actually hurts is when using modulo to remain within some range	jpfr	10.254175	-7.8801904	comment	4.0	10.5	1616053049	10.607415
26519606	One of the things I took away from t	One of the things I took away from trying Julia was that unicode is incredibly dumb in some aspects. Unicode lacks support for parts of the latin alphabet in subscript and superscript formatting(similar for the greek alphabet)[0].As Julia relies on Unicode for	alpaca128	10.159542	-7.9259906	comment	4.0	13.0	1616200191	10.726653
26550199	Slightly unfortunate name - z3 is th	Slightly unfortunate name - z3 is the name of a widely-used theorem prover written at Microsoft.	johnday	10.563854	-7.278012	comment	4.0	14.5	1616465564	12.424432
26591305	"""Anything involving a large framewor"	"""Anything involving a large framework. What part of ""micro"" are folks missing?What on earth is a ""large"" framework? What does the size of a framework (by whatever metric) has to do with the ""micro"" which refers to a slice of the domain the service is taking ca"	sorokod	9.79247	-7.3457646	comment	4.0	11.0	1616762054	-13.820499
26591559	I agree, but I think the author is m	I agree, but I think the author is missing one big point:- microservices is not a tech concept, it's a management conceptWe (devs) like to think that microservices is all about tech, but in reality it's a disguised tech concept used by management to:- grow the	sdevonoes	9.78062	-7.357882	comment	4.0	14.5	1616763501	-13.817797
26591232	Microservices brings a lot of comple	Microservices brings a lot of complexity. Yeah you're not analyzing a stack trace, instead you put correlation IDs in your requests and you analyze a network call stack.And you'll need a centralized logging mechanism to not have to log to hundreds of servers (	linkdd	9.785024	-7.365871	comment	4.0	20.5	1616761510	-13.825365
26628836	We are simply programmable machines,	We are simply programmable machines, its pretty interesting that all of human life can be reduced down to 30k editable microservices.	wonderwonder	9.781594	-7.36426	comment	4.0	12.0	1617055479	-13.814171
26609473	The Fortran I Compiler (2000) [pdf]	The Fortran I Compiler (2000) [pdf]	Bostonian	10.463044	-7.388654	story	4.0	71.0	1616931370	8.795675
26719094	Even more than the efficiency penalt	Even more than the efficiency penalties, it's the drastic increase in complexity that makes me want to stay far, far away from microservice architectures.	musicale	9.790415	-7.3545575	comment	4.0	20.5	1617755428	-13.81675
26760614	Microservices may help scaling but t	Microservices may help scaling but tend to come with a fixed amount of overhead which makes them more effort at a very low and low scale. They are also perfect as long as you got the overall architecture right and do not have to make cross-cutting changes beca	heisenbit	9.786238	-7.3578267	comment	4.0	11.0	1618053063	-13.825082
26762218	This is all outlined by Fred Brooks 	This is all outlined by Fred Brooks in 1975. I've beat this dead horse before, but I suppose I'll beat it again.In the late '90s and early aughts everyone read Mythical Man-Month. There is even a law attributed to him, Brooks' law [1]. It really feels like no 	deckard1	9.778058	-7.341491	comment	4.0	12.5	1618068898	-13.820099
26767780	This is probably because I never rea	This is probably because I never read these kinds of blogposts but this is one of the most flagrantly clickbait titles I've ever seen. Like the article doesn't even suggest ditching numpy in favor of jax or some kind of other hot take (which would at least war	anon_tor_12345	10.120122	-7.871346	comment	4.0	12.5	1618120416	10.445232
26904324	The author seems to completely ignor	The author seems to completely ignore the possibility that language designers get better at designing languages over time, and people simply prefer to develop new projects in well-designed over poorly designed languages.This to me seems to be the null-hypothes	meetups323	10.475415	-7.7879367	comment	4.0	17.0	1619107435	5.4220223
26935926	Does Apple use Swift (on Linux) for 	Does Apple use Swift (on Linux) for their own backend services?	GoOnThenDoTell	10.472712	-7.827254	comment	4.0	15.0	1619379792	-10.85311
26971969	Found a link with a meaningful type 	Found a link with a meaningful type sample for each of the new possibilities: https://www.thurrott.com/cloud/microsoft-365/249574/microsof...	nyx	9.789789	-7.347966	comment	4.0	11.0	1619631156	-13.81074
26978066	This is... built using Fortran, NICE	This is... built using Fortran, NICE.Writing a TOML parser in Fortran is precisely my definition of FUN.	volta83	10.503943	-7.3822236	comment	4.0	10.5	1619678462	8.786327
27096102	Service-Oriented vs. Monolith: Organ	Service-Oriented vs. Monolith: Organizational Perspective	gtoprak	9.799659	-7.3672786	story	4.0	68.0	1620570096	-13.822045
27114143	Sure, in the fields of computer scie	Sure, in the fields of computer science, data science, etc. However, this is not the case in more traditional engineering fields (electrical, mechanical, etc.) which tend to teach MATLAB throughout undergraduate education and subsequently rely on it throughout	sidpatil	10.210537	-7.773361	comment	4.0	12.5	1620706422	10.459426
27225535	You are mistaken, the C standard is 	You are mistaken, the C standard is quite clear that it does not make any guarantees regarding the behavior of programs that exhibit undefined behavior, and that signed integer overflow is undefined behavior.	dooglius	10.617399	-7.045733	comment	4.0	13.0	1621537100	-7.061217
27240930	My current idea of how to do a non-j	My current idea of how to do a non-javascript multi-platform app strategy:Apple SwiftUI for iOS & macOS.Flutter for Android, Windows, Linux and possibly a web client.	novok	10.591174	-7.7932496	comment	4.0	12.0	1621637459	-10.906689
27280884	Huh. There's something to this.I've 	Huh. There's something to this.I've often wondered why certain people feel so attached to static typing when in my experience it's rarely the primary source of bugs in any of the codebases I work with.But it's true, I do generally feel like a codebase that's s	danShumway	9.846327	-7.351802	comment	4.0	13.0	1621969171	-13.818851
27308476	"> I don't see how ""special rules of "	"> I don't see how ""special rules of arithmetic and a robust mathematical model"" makes it ""extremely difficult to have a serious malfunction.""The only way would be to have arbitrary precision integers by default and thus no overflows ever. (IIRC smalltalk was s"	ithkuil	10.611093	-7.03122	comment	4.0	11.0	1622149218	-6.9825344
27354918	Isn't this why microservices are a t	Isn't this why microservices are a thing? :).More seriously though, it's part of skilled project management to organize work in such a way that seniors don't need to constantly collaborate to stay in sync.	TeMPOraL	9.782304	-7.361088	comment	4.0	10.5	1622557309	-13.817643
37595734	This might be a bit irrelevant but,m	This might be a bit irrelevant but,my professor who teaches computer programming (who previously worked as a nuclear physicist) loved mentioning Fortran whenever possible.He truly enjoy the language and believes it is well suited for heavy computation. He said	Alifatisk	10.466146	-7.414456	comment	4.0	23.0	1695292575	8.823339
37600085	People mention the no-aliasing, the 	People mention the no-aliasing, the compilers, the intrinsics, the libraries, and the expressivity but one aspect of the difference is ignored and it is this: C is a language for specifying behaviour of hardware (time sequence of detailed states), Fortran is a	theodorethomas	10.488325	-7.3774033	comment	4.0	15.0	1695313843	8.837231
12578227	Haven't used C++ in a decade - how i	Haven't used C++ in a decade - how is the modern functional programming working out without a GC? Isn't object ownership tricky to untangle?I read your option 3 and nodded - I'm using Julia for much the same reasons. I didn't expect C++ to be the answer, but i	ced	10.657499	-7.743815	comment	4.0	16.5	1474848666	10.686915
12581471	How is it going with Linux, Windows,	How is it going with Linux, Windows, BSD, etc. platforms?  Anyone with experience using Swift on something other than an Apple product have a story?	protomyth	10.465484	-7.812291	comment	4.0	10.5	1474895479	-10.822616
12599731	I work at a microservice company. An	I work at a microservice company. An example microservice is our geoservice which simply takes a lat/lon and tells you what service region the user is in (e.g. New York, San Francisco, etc..). You can see how dozens of these services might be needed when handl	lnanek2	9.789057	-7.3546867	comment	4.0	12.5	1475085006	-13.809671
12602956	It amazes me they have 1,700 service	It amazes me they have 1,700 services. It would be hilarious satire to actually see the description of each. And the debugging scenarios he listed make it sound like they have very poor engineers working for them. Who on earth lets an application get to prod t	iamleppert	9.788435	-7.1322465	comment	4.0	12.5	1475116732	-13.723536
12567848	A note from the editor-in-chief abou	A note from the editor-in-chief about Chris Ziegler	tommccabe	10.671555	-7.584554	story	4.0	44.0	1474663841	12.528327
12791264	Dumb question: I'd love to learn mor	Dumb question: I'd love to learn more about Swift and try out writing Swift code, but is development still limited to XCode/macOS?	ldayley	10.460825	-7.804198	comment	4.0	11.0	1477426460	-10.8177805
12763965	Ask HN: Women iOS Swift Meetup Group	Ask HN: Women iOS Swift Meetup Group in Oakland, CA. Interested?	mightybrenden	10.454388	-7.827171	story	4.0	32.0	1477079158	-10.852467
12852453	Using Microservices to Encode and Pu	Using Microservices to Encode and Publish Videos at The New York Times	kawera	9.776252	-7.34869	story	4.0	60.0	1478064135	-13.804971
12864349	Is there any evidence that memcpy/me	Is there any evidence that memcpy/memmove outperform malloc?	stompin	10.669683	-7.1259723	comment	4.0	15.5	1478184465	8.847251
12931504	> Note -- this is much slower than t	> Note -- this is much slower than the python versionSurprising. Swift, a compiled, static language, is slower than python in this use case?	hellofunk	10.477863	-7.827762	comment	4.0	20.0	1478878494	-10.849994
12993753	The biggest hit in performance that 	The biggest hit in performance that people see is the lack of a JIT compiler. If you are able to write your code without loops, Octave performs comparably to Matlab. No, we still do not have a JIT compiler. It is difficult to attract this kind of talent, becau	jordigh	10.206988	-7.786063	comment	4.0	13.0	1479567888	10.474638
13009285	Ask HN: What do you use to build mic	Ask HN: What do you use to build micro-front ends?	pscanf	9.806956	-7.3374066	story	4.0	13.0	1479762974	-13.800558
13025420	Any information about the performanc	Any information about the performance implications of this library? This looks quite nice to use, but I imagine it has some performance cost versus more traditional ways of writing Fortran code, which could (sadly) mean this won't ever get much use in real-wor	nv-vn	10.5012865	-7.358092	comment	4.0	20.0	1479931512	8.806072
13026081	I really like your project. I do que	I really like your project. I do question its usefulness however. If you get any performance hit from using these, you beat the point of using Fortran (over say Python) in the first place :) Don't you think?	chm	10.48639	-7.382258	comment	4.0	12.0	1479938151	8.830252
13056088	While I like a lot of what's in here	"While I like a lot of what's in here,    for (size_t i = 9; i <= 9; --i)

is a pretty terrible example to put in the second chapter.  I would not let that line pass code review.  There is no need or place for cutesy cleverness in C.EDIT: Ugh, just found this t"	colanderman	10.650569	-7.0579896	comment	4.0	18.5	1480347832	-7.0225577
13061384	Fantastic until you need to malloc. 	Fantastic until you need to malloc. You're reimplementing libc, but at least you know what's going on at every level.	capnfantasic	10.65994	-7.059573	comment	4.0	15.0	1480402710	8.935907
13024702	Show HN: Functional programming for 	Show HN: Functional programming for modern Fortran	milancurcic	10.489404	-7.340152	story	4.0	98.0	1479926196	8.796564
13167407	The author never discusses the most 	The author never discusses the most important pieces of microservices. The biggest one in my mind being organizational scalability. He talks about scalability from a performance viewpoint but not an org standpoint. Same with speed. Yes microservices add overhe	nhumrich	9.785955	-7.3671904	comment	4.0	18.5	1481642551	-13.843254
13204237	I've recently started working on an 	I've recently started working on an iOS app in Swift 3 and it's a mostly pleasant experience, even though XCode doesn't have Vim keybinds.I hope Swift can break out of the app-building niche, but from these slides it sounds like it will be a while until it can	scribu	10.519105	-7.8336697	comment	4.0	11.5	1482033328	-10.833868
13207332	I'm ignorant about FORTRAN, have the	I'm ignorant about FORTRAN, have there been attempts to modernize it? Maybe something like coffeescript/typescript?	thescribe	10.485512	-7.397746	comment	4.0	11.0	1482091564	8.808305
13209176	It is simply due to apprenticeship. 	It is simply due to apprenticeship. Physicists do research, and their code is research code. Like most other research, the research code is maintained and used in-house. As most in-house non-shared code (in any language), it is impenetrable unless you take app	hzhou321	10.468694	-7.4210706	comment	4.0	13.0	1482115754	8.836598
13213279	I am iOS developer and I really want	I am iOS developer and I really wanted to say swift is headache and not a good language for Server development. I want to see how it goes but as far I know it is not flexible enough. I mean if you are building a production server you really do not want to thin	codesternews	10.478905	-7.828376	comment	4.0	15.0	1482169585	-10.861035
13367242	Ted Kremenek doesn't seem to be a ve	Ted Kremenek doesn't seem to be a very active contributor of Swift.https://github.com/tkremenekhttps://github.com/apple/swift/graphs/contributors	dorianm	10.450489	-7.823417	comment	4.0	10.5	1484071944	-10.899924
13370818	Swift, XCode, and Apple software in 	Swift, XCode, and Apple software in general don't scream reliability to me. No doubt Lattner is a smart guy, but I'd be more comfortable with a smart guy from NASA or somewhere similar with experience developing survival-critical software systems.	freyir	10.515887	-7.738787	comment	4.0	19.5	1484096031	-10.837376
13388337	Depending on how micro your microser	Depending on how micro your microservice is and if it really is high volume (not sure what high volume means to you) then I would recommend just stick with the standard library to start and grabbing other libs as you need. I wrote a simple internal microservic	volker48	9.788196	-7.357183	comment	4.0	10.5	1484280626	-13.817472
13428435	> Microservices probably reduces the	> Microservices probably reduces the asymptotic cost of scaling but add a huge constant factor.If this were Medium, I'd highlight the hell out of that.That's so true, and so nicely, succinctly put - it ought to be the reply to end every argument about whether 	OJFord	9.783655	-7.357525	comment	4.0	26.5	1484761682	-13.820738
13429476	One caveat is that if you need to fi	One caveat is that if you need to fix a bug in your library in an API-compatible way, you can't reach into all the codebases that are using your library. You can deploy a new version of the microservice, though.	tunesmith	9.810251	-7.340215	comment	4.0	13.5	1484767569	-13.804642
13493514	They should finish the free Foundati	They should finish the free Foundation implementation[1] already which is the true standard library. Swift is not very useful without it, and they're talking about 4.0. It seems like Apple's giving their minimum to the communityhttps://github.com/apple/swift-c	paxcoder	10.465677	-7.824989	comment	4.0	13.5	1485453224	-10.847943
13513032	Still not decided. Matlab, and more 	Still not decided. Matlab, and more recently Julia, also adopted Fortran’s stupid convention.	jacobolus	10.281602	-7.7237277	comment	4.0	14.5	1485678654	10.501114
13513265	I remember there was quite some crit	"I remember there was quite some critique of the algorithms used in NR and why you should not use them [1]. Not sure if they fixed the issues in the third edition though. Some alternatives can be found here [2].        ""It is naïve to hope that every computatio"	splittingTimes	10.467252	-7.372049	comment	4.0	11.0	1485681692	-6.9678226
13534393	Better Mac support would be nice too	Better Mac support would be nice too. Using Swift in a larger code base in Xcode often results in long compile times, auto completion and code syntax highlighting failures and other terribleness.	monocularvision	10.461885	-7.7771106	comment	4.0	11.5	1485891350	-10.829273
13583506	I work on high-performance scientifi	I work on high-performance scientific simulation software in C++, and, I have to say, it works really well for us.Our competitors do a bunch of code generation to accomplish the same things in Fortran that we do with templates and policy classes.Sometimes, for	neutronicus	10.465641	-7.414127	comment	4.0	11.0	1486412760	8.700058
13601750	pcwalton is not framing the problem 	pcwalton is not framing the problem in a particularly useful way.This is a question of risk management and his argument is basically that one should always reduce the risk of memory management errors to zero. Others say that they can tolerate some risk, as lon	blub	10.657246	-7.048075	comment	4.0	14.0	1486585835	8.63267
27493581	People do microservices for the wron	People do microservices for the wrong reasons. There are only a few somewhat valid reasons:1) something has different run time needs than something else. Think CPU, memory, network. Breaking stuff up allows you to make different choices here. Although I have d	jillesvangurp	9.778959	-7.3612113	comment	4.0	33.5	1623599526	-13.825724
27494179	There are plenty more reasons than t	There are plenty more reasons than the three you've mentioned...However, the one thing that's not a reason to use microservices and which the article brought up a lot, is to increase resilience. Microservices do not increase resilience: at best they can avoid 	Diggsey	9.781768	-7.3605576	comment	4.0	13.5	1623603691	-13.82916
27649078	I think a lot of others here are goi	"I think a lot of others here are going to have the question ""what does it do with UB"", which is partially answered in the doc:https://compcert.org/man/manual005.html#language-referenceOverflow in arithmetic over signed integer types is defined as taking the ma"	userbinator	10.621951	-7.019802	comment	4.0	28.5	1624774699	-7.0278344
27650275	There was a CPPCon talk [I think?] a	"There was a CPPCon talk [I think?] about changes in this direction for C++ and the ""problem"" with this approach goes like this:Although lots of things blow up (and a few of them literally) due to overflow, very few blew up because it was UB, most of them blew "	tialaramex	10.625368	-7.0414224	comment	4.0	16.5	1624789296	-7.0250754
27663098	One thing I observed as a data analy	"One thing I observed as a data analyst (prev job) was that modularity could make data anlysis pretty difficult.Example: 
In a monolistic application you can easily send out telemetrics of different ""components"", e.g. player hitpoints, coins in inventory, days "	markus_zhang	9.794111	-7.3596077	comment	4.0	13.5	1624893823	-13.822791
27778421	Apply to TRC! You personally can get	Apply to TRC! You personally can get the same computing resources. https://blog.gpt4.org/jaxtpuFor some reason, everyone is reluctant to apply. I wrote that to dispel some of the hesitation. Wanting to play with TPUs is a fine reason to join.Some reasons why T	sillysaurusx	10.032351	-7.90551	comment	4.0	11.0	1625783499	10.474653
27805373	Let me paraphrase this differently, 	Let me paraphrase this differently, on a more pragmatic level. From the perspecitve of a compiler user, rather than a compiler author: How likely do you think is it that a program that contains memset and has this optimisation applied how diverts from the inde	1ris	10.662773	-7.029018	comment	4.0	18.0	1626046007	-7.1362934
12057105	"By ""some stupid thing to their heade"	"By ""some stupid thing to their headers"" are you referring to nullability annotations? I'm not sure what else Apple would have added to pure C headers (as opposed to obj-c) any time in the past few years."	eridius	10.549752	-7.563832	comment	4.0	11.0	1467998215	5.321621
12062278	Yes, it totally is a thing, although	"Yes, it totally is a thing, although it's usually described more as ""C(++)'s undefined behavior isn't a problem because any good programmer should be able to easily avoid it""--a sentiment that I have seen (and challenged) on Hacker News a fair amount. The cont"	jcranmer	10.649952	-7.0660334	comment	4.0	15.0	1468084261	-6.939936
12071284	Microservices makes sense, I suppose	Microservices makes sense, I suppose, but the cases in which distributed services and isolated processes are critical just aren't comment enough in my experience to require sticking specifically to a SOA-like architecture for everything. Especially in a web ap	rpazyaquian	9.802389	-7.3453584	comment	4.0	13.5	1468247631	-13.773922
12154422	Interesting. I almost though this wa	"Interesting. I almost though this was going to be an advertisement for Swift, since I saw this exact argument in a WWDC talk.Apple calls Swift a ""protocol-oriented"" programming language, and with the addition of first class value types, tries to solve these pr"	EdJiang	10.589097	-7.8042336	comment	4.0	10.5	1469388103	-10.860051
12177645	Swift is faster than C++	Swift is faster than C++	Procedural	10.502172	-7.7872663	story	4.0	10.0	1469666861	-10.833783
12250949	I always thought low-level programme	I always thought low-level programmers (C, C++, assembly, etc.) cared more about minimal abstractions and minimizing dependencies. But it turns out it's the same story no matter what level of the stack you are on. Currently working on a project with 200+ requi	dkarapetyan	9.7947235	-7.361985	comment	4.0	14.0	1470691200	-13.845232
12293007	What does this even mean?The previou	"What does this even mean?The previous poster is basically saying ""they screwed it up last time in 6 months, they'll screw it up again"".Microservices don't help. If they couldn't properly design their code without micro-services, throwing docker and micro-servi"	mattmanser	9.775625	-7.347184	comment	4.0	12.0	1471291615	-13.819161
12303587	I think that splitting into micro se	I think that splitting into micro services is valuable if and only if you reach a scale where it makes sense to split into micro services. By scale, I mean the number of people on the team (if you have a lot of people, it can make sense to split into micro-ser	nicolas_t	9.759449	-7.342007	comment	4.0	22.5	1471430170	-13.821998
12217331	Ask HN: Why isn't native mobile libr	Ask HN: Why isn't native mobile libraries written in C?	Svenskunganka	10.497289	-7.666118	story	4.0	2.0	1470226276	-7.4620028
12433316	Could someone please explain what th	Could someone please explain what this project is about? I gather it's a new implementation of the Swift language without using Xcode's compiler and Swift standard library, but I find the full readme very undescriptive of what this is and why it's useful.EDIT:	paulvs	10.459849	-7.8251667	comment	4.0	13.0	1473129115	4.767631
12495019	It makes a lot of sense, though. Lik	It makes a lot of sense, though. Like many new languages Swift was invented hastily and without much care with the main goal of locking in developers and preventing cross-platform development. If Apple made major releases backwards-compatible, this would invar	jonathanstrange	10.47232	-7.7379603	comment	4.0	11.5	1473842343	-10.738117
35305048	This is related to my main issue wit	This is related to my main issue with Swift.It started out as a very usable, mid-sized language, with many tooling issues. Now it is a kitchen-sink language with almost every imaginable feature (and more coming!) that still has tooling issues. It's no longer a	WoodenChair	10.473082	-7.8251243	comment	4.0	12.0	1679766169	-10.843662
35310950	What's an analogy in the software wo	What's an analogy in the software world to this sort of tragic disappointment? Going from building fun videogame side projects to having to crank out dozens of over-engineered B2B SaaS microservices, for the sake of job security, for yet another sales workflow	8f2ab37a-ed6c	9.788348	-7.3197007	comment	4.0	11.0	1679805020	-13.798533
35505002	Tons of folks in industry use Ada, t	Tons of folks in industry use Ada, they just don't talk about it much (or are forbidden). Ada is the darling of USDOD, so there's untold LoC in missiles, fighter jets, and spy satellites.	kortex	10.644667	-7.7203317	comment	4.0	11.0	1681063422	-5.07466
28114957	Zig Pathtracer	Zig Pathtracer	ibobev	10.661884	-7.565176	story	4.0	85.0	1628505574	12.540938
28345599	> dev had hundreds of compiler bugs 	> dev had hundreds of compiler bugs to fix and no paying customers.From what I understand, a principal rationale of Ada, was to have a “100% reliable” toolchain, and compile-time assurance. So this is actually a reasonable posture.It seems that Ada can be chal	ChrisMarshallNY	10.6532345	-7.7231283	comment	4.0	14.5	1630232450	-5.169828
28438147	Objective-c has bounds checks and le	Objective-c has bounds checks and lengths built into NSData, NSArray, and NSString… so many of the buffer overflow techniques likely won’t work against it. However, images and video seem to hit C++ code and from all of the past CVEs it seems this is a giant at	azinman2	10.578433	-7.3283997	comment	4.0	11.5	1630962643	-6.687607
28478791	Here is another one, Ada Core is the	Here is another one, Ada Core is the only Ada vendor.There are still 7 companies around selling Ada compilers, granted not all of them support the very latest standard.https://www.adacore.com/https://www.ghs.com/products/ada_optimizing_compilers.htmlhttps://ww	pjmlp	10.652782	-7.6973233	comment	4.0	17.0	1631259846	-5.221366
28480946	Did you got to the University of Yor	Did you got to the University of York? I did and I've never met anyone from another uni who learned Ada.I think I was lucky to go and work for a company where I got to do both Ada (specifically SPARK) and Prolog in a professional capacity. It wasn't until I us	noneeeed	10.655553	-7.728552	comment	4.0	11.0	1631279142	-5.1118627
28506383	There really aren't a myriad of simi	There really aren't a myriad of similar efforts. Eigen is pretty much the only C++ linear algebra library. BLAS is a C library which is the de facto standard, and ATLAS is an alternative implementation of the BLAS API.Other than this, there really isn't much m	rualca	10.632416	-7.163695	comment	4.0	10.5	1631491433	-12.242614
28619404	> I think my main objection to Swift	> I think my main objection to Swift is that it seems to be written by people who hate Objective-CI mean that's the vast majority of people>and made the calling syntax much more complicated.How is this true? Swift is very straightforward, and similar to other 	zionic	10.49204	-7.785082	comment	4.0	33.0	1632332794	-10.828297
28619640	I'm surprised he doesn't bring up mi	I'm surprised he doesn't bring up minor features that lead to huge compile time issues, like operator overloading and imports being module sized vs file or folder wide and type inference in some cases.  Not to mention how the language doesn't actually scale th	novok	10.4989395	-7.794687	comment	4.0	27.0	1632333930	-10.839865
28620084	C++ is of course a vastly more compl	C++ is of course a vastly more complex language than Swift. I don't think anyone would want to code in C++ these days if they can avoid it.	zozbot234	10.524246	-7.799315	comment	4.0	12.0	1632336135	-10.83051
28634841	"""In the olden days, a software appli"	"""In the olden days, a software application was built as a large monolith (...)"" - people should stop writing this kind of shit.You can hear this nonsense from some poor quality bloggers. People who are serious about it say things like ""for most startups micros"	mirekrusin	9.798476	-7.3507977	comment	4.0	17.0	1632428870	-13.823132
22327872	I've been probably jumping the gun o	I've been probably jumping the gun on using SwiftUI in my app. It shows some promise conceptually, but I've encountered some severe pain points.- UI that is more stateful (like text fields, which have a selection range, etc.) aren't well supported. Say you wan	tayistay	10.464106	-7.8219	comment	4.0	11.5	1581697961	-10.849518
22335816	Correct me if I'm wrong, but this se	Correct me if I'm wrong, but this seems to be missing array programming (APL, Matlab, Julia, etc).	chroem-	10.273964	-7.8150854	comment	4.0	12.0	1581780748	10.686568
22376567	Using Ansible is what made me lose f	Using Ansible is what made me lose faith in DSL's in all the ways mentioned (eventually wanted loops, conditions, variables and namespaces...). Ansible is an API over a domain and if it were originally just represented through a Python language library I don't	threatofrain	9.790233	-7.0360107	comment	4.0	11.0	1582218643	-13.262431
22382838	They'll have to coin a less deragato	They'll have to coin a less deragatory term than monolith first.  Cohesive Apps? Macroservices?	tyingq	9.808159	-7.3367133	comment	4.0	11.0	1582291187	-13.803017
22399505	The title here is misleading. Most o	The title here is misleading. Most of this applies to Objective-C. There's nothing wrong with the article as far as programming advice goes, but it has nothing to do with Swift idioms.> So, to make our code more “Swifty” from a performance point of view, somet	setpatchaddress	10.465678	-7.817826	comment	4.0	11.5	1582491846	-10.838724
22413784	Observing the launch of SwiftUI as a	Observing the launch of SwiftUI as a bystander (I'm not developing for any Apple platform), it seems that people are very excited about SwiftUI, but also get burned by it a lot. This is mostly Apple's fault by releasing this framework without any caveats. But 	bouke	10.456132	-7.8233957	comment	4.0	11.5	1582643704	-10.847148
22446981	Can we please have a 'New Version', 	Can we please have a 'New Version', 'Old Version' comparison, side by side.If this is an improvement, why are you telling me instead of showing me?Personally, the problem is command line tools, not argument parsing. Why would anyone create a command line tool 	alexashka	10.483555	-7.8190455	comment	4.0	11.0	1582928705	-10.837093
22475724	The thinking is backwards, if you ar	"The thinking is backwards, if you are only 10 people, there I no need to shape the system in a microservicr fashion. You just extract the pieces that need scaling.
If you are 60 devs, you need to split the system so that everyone can work on it without walking"	serbrech	9.791679	-7.352177	comment	4.0	11.5	1583251939	-13.8279085
22491156	Delivering pre-packaged meals to peo	Delivering pre-packaged meals to people requires _hundreds of microservices_. That is truly astounding.	core-questions	9.780139	-7.363884	comment	4.0	14.5	1583385441	-13.810657
22403563	Managing Service-to-Service Comms in	Managing Service-to-Service Comms in Microservices	danielbryantuk	9.785565	-7.367968	story	4.0	74.0	1582548488	-13.822285
22598468	  A series of fatal errors caused th	"  A series of fatal errors caused the majority of servers to become unavailable. We are working to revive all of these resources. Most users will be unable to connect while this work is ongoing.

That's microservices for you. Instead of one fatal error you hav"	CORBLIMEY-19	9.810537	-7.33941	comment	4.0	12.0	1584396003	-13.813318
22625481	Mathematica is worth learning and us	Mathematica is worth learning and using since it's so far ahead of the open source alternatives (e.g. Python/Jupyter and associated libraries ) in usability/interactivity/rapid development that it comes across like future-tech.Unfortunately it's also the singl	armitron	10.3355255	-7.184336	comment	4.0	17.5	1584604910	9.909865
22542323	Ask HN: Turning a research paper int	Ask HN: Turning a research paper into a startup, but it's written in Matlab	kbumsik	10.185925	-7.8133354	story	4.0	4.0	1583893169	10.432237
22680374	Looks like a solid update on first g	Looks like a solid update on first glance. I nearly tore my hair out last month building a SwiftUI app. The error messages were terrible—I had never seen such poor error messages. I'm so glad they're addressing that.	ashton314	10.450723	-7.818302	comment	4.0	16.0	1585094067	-10.841371
22712553	>The latest paradigm “Microservices”	>The latest paradigm “Microservices” became popular in the mid 2010s.Microservices isn't for re-usability. It's main benefit is better encapsulation, which should let you do independent resource management/deployments/failures.>If we look at reusability, we no	ivanbakel	9.789792	-7.341157	comment	4.0	10.5	1585415842	-13.808316
22715167	Basically it comes down toDistribute	Basically it comes down toDistributed logging:hardDistributed debugging: hardDistributed versioning: hardDistributed transactions: very hardAnd on 95% of projects these problems aren't worth solving for the benefits of microservices.	JamesBarney	9.785323	-7.35849	comment	4.0	23.0	1585438840	-13.805572
22715574	With microservices, you lose the abi	With microservices, you lose the ability to use database transactions across services/tables. Later on, when people realize this, it's too late.It's priceless to see their expressions when senior mgmt. and business owners finally find out.	redis_mlc	9.790696	-7.3556075	comment	4.0	11.5	1585444569	-13.798146
18944992	I work as an applied mathematician w	I work as an applied mathematician writing numerical codes and I prefer to prototype in MATLAB/Octave for a number of reasons:1.  I believe it to be far easier to debug an algorithm in MATLAB/Octave than Python.  When I drop into the debugger, I can immediatel	kxyvr	10.192648	-7.7987714	comment	4.0	14.5	1547865821	10.45525
22712217	Tale of OpenBSD secure memory alloca	Tale of OpenBSD secure memory allocator internals – malloc(3)	zdw	10.6587715	-7.076261	story	4.0	117.0	1585413344	8.84006
18966566	Standard ML has existed for 35 years	Standard ML has existed for 35 years.  Even if you started programming with Fortran, it's been around longer than half of your career.	kod	10.45691	-7.409896	comment	4.0	13.0	1548141021	8.809185
19000221	Just to bring clarity on what has be	"Just to bring clarity on what has been patented on one of the patents:    Monad Maybe where
        Nothing  >>= _ = Nothing
        (Just x) >>= f = f x

Those three lines, implementing the Maybe Monad/bind operation, are commonplace in all functional languag"	fabianhjr	10.497557	-7.8133507	comment	4.0	13.5	1548437648	-10.828616
19013513	I had to learn Fortran about 3 years	I had to learn Fortran about 3 years ago, when I got into particle physics.I had the same reaction: Fortran? Still used? Omg! But after three years, I learned to like it. In its modern form, it is simple, fully vectorized, and fast. I like its syntax more than	atemerev	10.469394	-7.4083743	comment	4.0	18.0	1548619651	8.836673
19013652	Which are not free for the most part	Which are not free for the most part, right?As of 2019, the speed argument is mostly academic though. IMO. Few people do cosmo simulations on a daily basis to really care about this.	x3tm	10.416598	-7.253721	comment	4.0	12.0	1548621477	8.21594
19022891	Apple's application programming has 	Apple's application programming has fallen off a cliff in the last 4 years. I blame Swift. There's nothing wrong with the language itself, but its outward similarities to.... other dynamic languages I feel has led to a rot in the core of what was once a rock s	aphextron	10.487703	-7.755799	comment	4.0	20.5	1548725367	-10.772781
19090196	"I put Swift into the category of ""al"	"I put Swift into the category of ""almost memory managed"" languages and it's never fully clicked in my brain. Thinking about strong/weak/unowned references is more difficult in my opinion than when to malloc/free something. Following the examples in the article"	kris-s	10.627459	-7.825389	comment	4.0	32.5	1549403278	-10.841751
19091835	This is an example of title that cou	"This is an example of title that could benefit from a simple, non-editorialized, and purely factual change: ""Programming the Z3 SMT solver"".I am sure I was not the first to think it was related to Konrad Zuse's Z3."	vonuebelgarten	10.590573	-7.247812	comment	4.0	10.5	1549416132	12.455031
19062414	Swift value constant can mutate usin	Swift value constant can mutate using Copy-on-Write (CoW) and multi-threading	mpweiher	10.636414	-7.8325844	story	4.0	15.0	1549105571	-10.831193
19129944	I also wonder how much of this coinc	I also wonder how much of this coincidentally lines up with Chris Lattner landing at Google. As Chris will admit, and as was left out of this analysis, Swift has also been given the humble goal of achieving world domination. All joking aside I'm very thrilled 	elpakal	10.46544	-7.831617	comment	4.0	11.0	1549831817	-10.84499
19137009	If monoliths almost always end up sp	If monoliths almost always end up spaghetti code, and the problem is that people always tend towards writing spaghetti code, then the problem is monoliths.Programming is for people. I can count on zero hands how many times I've seen monoliths not end up... glo	jhall1468	9.878978	-7.2763844	comment	4.0	19.0	1549910459	-13.802579
19137269	> Is it a problem of the pattern? Wi	"> Is it a problem of the pattern? Will another pattern fix the problem?Man, I agree so much with this. I've been on too many teams now which cargo cult _hard_ around microservices. In the best case, they think it'll solve the problems that plague the team (""we"	goostavos	9.782198	-7.358146	comment	4.0	12.0	1549911892	-13.842459
19241658	My understanding is that the point o	My understanding is that the point of microservices isn't to just move what would have been a relational join in SQL to an equivalent join in the service layer, which is what the author is implying.  Instead, the order service should already have the subset of	thoman23	9.794236	-7.361684	comment	4.0	11.0	1551054404	-13.8113165
19288477	> Every MATLAB using scientist I kno	> Every MATLAB using scientist I know ends up with a code base that is too complex (~1000-5000 lines of code) for the language, but is perfect for Python.Exactly! And I feel R has a similar problem.	microtherion	10.231657	-7.818886	comment	4.0	15.0	1551519774	10.433657
19321762	It is possible to build balls of mud	"It is possible to build balls of mud either with microservices or larger-sized services.There are pros and cons to both.But when ""easier testing"" (from OP) is said to be an advantage of microservices specifically...I am not sure what to say.I mean it is not li"	dagss	9.79645	-7.3172812	comment	4.0	24.0	1551900113	-13.816526
19383040	>I’m sure our specs were good enough	>I’m sure our specs were good enough that APIs are clean and service failure is isolated and won’t impact others.Surely if you're building microservices, this line of thinking would be a failure to stick to the design? If your failures aren't isolated and your	ivanbakel	9.8728895	-7.11268	comment	4.0	13.0	1552507049	9.254353
19383204	I doubt if the author had '150 micro	I doubt if the author had '150 micro-services' in real life. A monolithic that could be separated into more than 100 micro-services is already too complicated like hell and engineers live with pains on it.	xissy	9.777205	-7.349723	comment	4.0	10.5	1552507804	-13.820109
19384599	Heh, I like that “Spaghetti Microser	Heh, I like that “Spaghetti Microservices”.You are right. It should not happen. It is difficult to see these pitfalls when unwinding an unwieldy monolith, and, as an organization all you’ve ever done are unwieldy monoliths, that have a gazillion dependencies, 	mirkules	9.787638	-7.35541	comment	4.0	10.5	1552516220	-13.826245
19459589	We've been eye-ing it for a while at	We've been eye-ing it for a while at remind.com. Our hangup has been that we're heavily aws focused, but https://github.com/amzn/smoke-aws is looking promising.We're interested because it's one of a handful of statically typed functional programming languages.	phamilton	10.503453	-7.8376117	comment	4.0	19.0	1553228640	-10.823622
19466002	malloc allocates aligned memory [1],	malloc allocates aligned memory [1], so technically it's correct that he writes past the allocated memory, but technically it's also impossible for that write to fail or for that write to overwrite something else.[1] bonus point: for what kind of alignment? (T	blattimwind	10.65365	-7.100599	comment	4.0	13.5	1553282757	8.886871
19485989	I didn't post this item, but I am th	I didn't post this item, but I am the person that started SageMath in 2004, so if anybody has any questions I will try to answer them...	williamstein	10.248434	-7.2050676	comment	4.0	12.0	1553542400	9.773047
19415362	Microservice Architecture Book (ORei	Microservice Architecture Book (OReilly) available for free now [pdf]	yarapavan	9.789079	-7.3663745	story	4.0	54.0	1552846126	-13.808314
19642043	If a Fortran compiler were self-host	If a Fortran compiler were self-hosting, I might think twice before using it... I can't imagine implementing a parser/lexer in Fortran of all languages. Considering that loops and procedures are the main supported models of indirection/abstraction, I expect th	TimTheTinker	10.479083	-7.3905354	comment	4.0	12.5	1555044230	8.81541
19664034	Swift is a really cool language. Qui	Swift is a really cool language. Quite similar to Rust, but easier to use. ( GC, no borrow checker, no multi-threading safeguards, ...)I just wish cross platform support was a real priority. The Ubuntu packages are all there is, and much of the ecosystem is ce	the_duke	10.533513	-7.8334193	comment	4.0	25.0	1555318482	-10.80794
19684308	I'm really disappointed (with my imp	I'm really disappointed (with my impression) that UW doesn't seem to appreciate what has been accomplished with Sage and the value of a major open source competitor to Mathematica, Maple, Matlab, etc. I hope William and Cocalc are tremendously successful.	adenadel	10.247999	-7.2038717	comment	4.0	14.0	1555520392	9.793618
19709777	This all looks good on paper.In prac	This all looks good on paper.In practice, this assumes that all of the concerns presented there will necessarily become bottlenecks. And that is simply not true.You can have modules with completely different deployment lifecycles, speed of development and perf	Daishiman	9.797225	-7.345371	comment	4.0	12.5	1555806496	-13.796942
19710541	You say you were using microservices	"You say you were using microservices, but you say that a bug in one service led to redeploying many services. That sounds really odd, and like you weren't doing microservices at all, but actually just a monolith with many pieces.I think ""Can I deploy a bugfix "	staticassertion	9.78344	-7.3565683	comment	4.0	18.5	1555820797	-13.840407
19711033	and so you don't have a microservice	and so you don't have a microservice, but just code that's spread out.a feature of microservices is a way to add new apis while retaining old apis (for compatibility). So you'd write the new signature, and deploy. Everything still works fine. Then the other se	chii	9.796123	-7.348007	comment	4.0	11.5	1555832815	-13.807012
19725471	"I don't see the problem.  
You are f"	"I don't see the problem.  
You are free to use such a modern library (Google does, it's called absl).The good thing here is that the standard library doesn't require 'magic' to be implemented (unlike Swift where the standard library relies on hidden language h"	fooker	10.46131	-7.803768	comment	4.0	23.5	1555991487	-10.791051
19767715	I'd be curious to hear from iOS devs	I'd be curious to hear from iOS devs what they think is going on here.  Did anyone try moving to Swift and what was the specific reason for going back to Obj-C?	VectorLock	10.461775	-7.7949443	comment	4.0	13.5	1556400207	-10.846983
19769139	This simply won't happen till Swift 	This simply won't happen till Swift can interop with C, C++ and possibly even ASM, fluently.Even then, you need structure, data types, and actual foresight while writing code, which leaves out all the less CS/SE trained peeps, such as scientists.And Swift is n	sk0g	10.491392	-7.815476	comment	4.0	12.5	1556421776	-10.82619
19877367	Very nice lecture that connects calc	Very nice lecture that connects calculus to the laws of nature. I've always thought applied math has a leg up on abstract math because of the connections to real-world ideas.I encourage anyone who liked the talk to try out some of the calculations on their own	ivan_ah	10.327783	-7.2030606	comment	4.0	13.5	1557493992	-11.64349
19881576	i really really really like swift. i	"i really really really like swift. it's by far the best language i've ever used but i wish it weren't so ""monoculture"" (ios dev). i guess this is good for that but i really wish the open source port of foundation were the focus of the community."	mlevental	10.46346	-7.823408	comment	4.0	16.5	1557517646	-10.84169
19906900	Author here. IBM is currently focusi	Author here. IBM is currently focusing on the combination of machine learning and reasoning, also called neural-symbolic AI [1], to combine the best of both worlds (noise robustness and explainability, etc.). I am from Tokyo and will join MIT-IBM lab soon to p	guicho271828	10.257505	-7.8886123	comment	4.0	23.0	1557810130	-7.4998446
19962080	Why not slowly decompose the functio	Why not slowly decompose the functionality of your software into modules, abstract those behind some kind of abstract interface, and then move those abstracted modules into microservices when the time comes? Just by slowly rebuilding components as you need to 	gravypod	9.801587	-7.3424935	comment	4.0	13.0	1558369654	-13.817836
19895208	Matlab's First Customer	Matlab's First Customer	gballan	10.193086	-7.7969575	story	4.0	73.0	1557702797	10.511579
15819647	Show HN: Single-spa micro front-ends	Show HN: Single-spa micro front-ends that co-exist each with their own framework	blittle	9.860495	-7.3071895	story	4.0	8.0	1512076848	-13.799148
15921530	I see this so often with academics. 	I see this so often with academics. They’re not developers and only have basic coding ability. So they make all kinds of basic mistakes like trying to load a bunch of images converting them to float (IR images for example) and wondering where their memeory wen	knolan	10.483156	-7.4049997	comment	4.0	14.5	1513251840	8.855535
15977972	Please can you explain why using mic	Please can you explain why using microservoces is over engineering? Is it because it’s a relatively new approach? Im getting involved in a new project that is using microservices and a new framework...	majjam	9.778011	-7.359275	comment	4.0	14.5	1513855253	-13.818976
16053164	I have to say I'm sick of the micros	I have to say I'm sick of the microservices fad.  For the 99% it makes no sense to incur the complexity cost because YAGNI unless you seriously plan on scaling to FB/Google/etc levels...and realistically if your little app blows up to that level, you can figur	GiorgioG	9.781034	-7.341745	comment	4.0	12.5	1514912192	-13.8091955
16161233	> ...especially since integer handli	> ...especially since integer handling in C is so treacherous.I'm still learning C, having not had much reason to do so until recently, so I'm not quite sure I understand this statement. How is integer handling in C treacherous (any more so than any other lang	korethr	10.631177	-7.0180926	comment	4.0	10.5	1516130013	-7.0878363
16092468	Show HN: PL/Swift – PostgreSQL Funct	Show HN: PL/Swift – PostgreSQL Functions in Swift	helge5	10.517895	-7.7835593	story	4.0	84.0	1515356539	-10.907536
17897792	I'll just leave this here:> Conventi	I'll just leave this here:> Conventionally, Julia's arrays are indexed starting at 1https://www.google.com/search?q=arrays%20start%20at%201&tbm=...	21	10.2132435	-7.9417863	comment	4.0	12.0	1535909725	10.702353
17933579	That book is ancient, but probably s	That book is ancient, but probably still pretty relevant. John Harrop himself posted on reddit awhile back that he hadn't personally used OCaml in a long time when someone asked about the book on the OCaml sub reddit. His username starts with jdh I think. Hone	3rdAccount	10.256652	-7.971319	comment	4.0	29.0	1536321863	10.700837
17995267	Sage is something I keep meaning to 	Sage is something I keep meaning to learn.Every time I've tried it though, it just didn't feel as polished and integrated as Mathematica.	messe	10.2311535	-7.2074337	comment	4.0	17.5	1537033980	9.764056
18003644	Objective-C never had much love outs	Objective-C never had much love outside NeXT and this was even an issue for Apple, which offered Java support in the begging on parity with Objective-C while they weren't sure about the Mac OS developer's receptivity to it.They only dropped Java after being va	pjmlp	10.4861765	-7.7246633	comment	4.0	18.0	1537165559	5.6341743
18010157	Well, there are some interesting new	Well, there are some interesting new languages out there already: https://julialang.org/In fact Moore’s law must have been the reason why Python is what it is today: “Who cares if it’s slow, tomorrow’s computers will be faster!”	stellalo	10.335425	-7.866079	comment	4.0	10.5	1537218985	10.757434
18092373	As a counter-example, the macOS Dock	As a counter-example, the macOS Dock was rewritten in Swift in macOS 10.12, and Mission Control was super buggy for me then. I'm not blaming this on Swift, most rewrites are buggy at first. And it never outright crashed, but getting stuck in inconsistent state	gurkendoktor	10.493307	-7.7485776	comment	4.0	15.5	1538131872	-10.728345
18093081	I have been writing code for over 10	I have been writing code for over 10 years and I can comfortably say that Swift is one of the best languages today than many other languages at a much later stage in their life (hey there Java!). I'm not talking about the standard lib, I'm talking primarily ab	ppeetteerr	10.492514	-7.7909355	comment	4.0	14.0	1538141021	-10.821712
18017981	“Dijkstra is Wrong and So am I” – an	“Dijkstra is Wrong and So am I” – an argument against 0-based arrays	beachie	10.60825	-7.171179	story	4.0	7.0	1537296186	-9.407434
18163742	The need for microservices has littl	The need for microservices has little to do with company size, they have to be the right tool for the job. People mistakenly use them for scalability, or to partition work between teams.I'm in a small engineering org, and I split out a bunch of security critic	oppositelock	9.782864	-7.36114	comment	4.0	12.0	1538965389	-13.802395
18185682	Excellent and detailed post!Up until	Excellent and detailed post!Up until now I've been focusing on Julia and Swift for projects that can use a new language, as the Rust pain/productivity ratio has looked too high.Perhaps things are changing...correctness is certainly a worthy goal!	Accipitriform	10.2669525	-7.971968	comment	4.0	29.5	1539184828	10.839228
18186351	"Indeed! Our ""architect"" (cough) stuc"	"Indeed! Our ""architect"" (cough) stuck us with mass microservices even though we are too small a group to need them. Bloatville. He kept quoting ""separation of concerns"" and other ""magic Legos"" abstraction/reuse/modularity BS memes. Plain ol' OOP classes do all"	tabtab	9.793551	-7.3565707	comment	4.0	10.5	1539188592	-13.828019
18239314	Hear me out here; Apple's Swift Play	"Hear me out here; Apple's Swift Playgrounds on an iPad.I'm involved in an extracurricular thing in Scotland focused on giving kids an environment they can figure out computers. We've seen a lot of different approaches to the problem of ""how can we get kids to "	alliecat	10.46397	-7.789734	comment	4.0	14.0	1539786105	-10.817216
18255636	> Definitely agree you shouldn't sta	> Definitely agree you shouldn't start with a ton of services, but I think you should definitely start with more than one. The jump from monolith to service-oriented thinking is a huge one.I can't get my head around this.Why should you start with more than one	collyw	9.786358	-7.3606644	comment	4.0	10.5	1539945302	-13.8147545
18282412	> or any other kind of offset that y	> or any other kind of offset that you so desireThis is too often the attitude of Julia people. But zero-based indexing is not just some arbitrary offset. Programmers just like it. You say that many things are more intuitive with one-based indexing, but many t	red-tea	10.606728	-7.378804	comment	4.0	21.0	1540293903	9.706501
18215866	Building DSLs in Swift	Building DSLs in Swift	ingve	10.482581	-7.834001	story	4.0	73.0	1539555900	-10.807857
18332415	The author worked very hard to deter	The author worked very hard to determine the root cause of the problem but he was stymied because the APFS source code is not available. Why not? Apple has open-sourced the Swift compiler with great success, but there seems to be no movement within Apple to op	chmaynard	10.462289	-7.824779	comment	4.0	21.5	1540853939	-10.845235
18378536	This might be contentious, but I'm g	This might be contentious, but I'm going to say it. If your program is multithreaded in a nontrivial way, Swift is not the language for you, at least yet.First, this article understates the danger significantly. It's not just that your token loader might be ca	raphlinus	10.542855	-7.822688	comment	4.0	16.0	1541372776	-10.827896
18389258	Swift Intermediate Language Ownershi	Swift Intermediate Language Ownership Model Proposal	pjmlp	10.50969	-7.8286614	story	4.0	81.0	1541492466	-10.849746
18394640	Swift String’s ABI and UTF-8	Swift String’s ABI and UTF-8	ingve	10.549435	-7.7001176	story	4.0	159.0	1541536057	-10.836028
18544202	I've done a bit of HPC work, and For	"I've done a bit of HPC work, and Fortran is very much ""still a thing"" there. MPI[1] is pretty much the only game in town for between-node parallelism, and MPI comes with interfaces for C, C++ and Fortran. The only other language that's even been run at petasca"	cbkeller	10.463587	-7.439693	comment	4.0	16.0	1543338823	-10.950847
18690145	As far as “bottlenecks”.Almost all a	As far as “bottlenecks”.Almost all applications have data separate from code. Most implementations don’t run their applications on the same server as their databases.Most app servers shouldn’t be “caching state locally” anyway. Once you do that it makes scalin	scarface74	9.842037	-7.294022	comment	4.0	30.5	1544905075	-13.795519
18774292	I really wish Swift closures were mo	I really wish Swift closures were more uniform. I remember Alan Kay (or maybe Dan Ingalls) was famed for saying “its ok to cheat, as long as you don’t get caught” (re. Language implementation).I really like swift, but there are times when I feel I need a magic	travisgriggs	10.613726	-7.7840505	comment	4.0	13.0	1545961737	-10.789598
18855257	If iOS had required Lisp instead of 	If iOS had required Lisp instead of Objective-C, then Lisp would have been popular right now.  Ruby really needed Rails to get people to try it.I think the killer use problem is more an explanation then anything else.  Java also showed a good marketing, well f	protomyth	10.510054	-7.716643	comment	4.0	13.5	1546953078	5.607721
18883181	Language Server implementation for S	Language Server implementation for Swift... meaning that writing, compiling, and debugging Swift (and Obj-C) in Visual Studio Code is just around the corner? What other editors/IDEs use Language Server?	mikece	10.498895	-7.812671	comment	4.0	12.0	1547211138	-10.798017
29704358	How is that any more explicit or int	How is that any more explicit or intentional than calling malloc though? You have to tell it exactly how many bytes you want on the heap.	ModernMech	10.65867	-7.114016	comment	4.0	10.5	1640625300	8.875564
29898340	No it probably won't end. No you are	No it probably won't end. No you are not a dinosaur, but development has changed. Decades ago you could build an app from the ground up. This gave you a bunch of different layers to compose, and probably made the app overall simpler. Now most developers are gi	dexwiz	9.791795	-7.34847	comment	4.0	13.5	1641937030	-13.81992
29927925	> three competing app frameworks won	> three competing app frameworks won’t create it> Apple splitting their resources to support AppKit, SwiftUI, and Catalyst probably doesn't help.Yup.  After years trying to coalesce development around AppKit (transitioning away from the original Toolbox API), 	valleyer	10.444527	-7.8330975	comment	4.0	16.0	1642113321	-10.7992
29966909	So... I checked the nbodies code.Pyt	So... I checked the nbodies code.Python: simple, short, very obvious what's going on, completely unoptimized. I wonder how much faster it would be, if it was (1) vectorized with numpy, and then (2) numba on top. I doubt it would be much less readable.Julia: hi	tomp	10.200771	-7.9744163	comment	4.0	14.0	1642430277	10.713412
30023673	One thing that is not mentioned in t	One thing that is not mentioned in the article, is that next to undefined behavior, there is also implementation defined behavior.For example, if signed integer overflow would be implementation defined behavior, then any weirdness would be limited to just the 	phicoh	10.670275	-7.0244784	comment	4.0	44.5	1642774263	-7.089884
30078921	> We have approximately 12 developer	> We have approximately 12 developers spread across 2 feature teams and a support team.If I were consulting for this company, I would have told them to stop right there, microservices are probably not for them.  Unless you build from the start for microservice	jedberg	9.784181	-7.3564377	comment	4.0	16.5	1643149143	-13.813947
30175444	This is a very interesting move from	This is a very interesting move from AdaCore. I've been a vocal advocate of Ada as a general purpose programming language for a little while. I hope that this helps expose the language to a wider audience, and gives the wider programming community cause to rea	ajxs	10.656476	-7.7236123	comment	4.0	30.5	1643793922	-5.128444
30282832	That's pretty cool! What are they us	That's pretty cool! What are they using Ada for? I'd love to have a reason to learn and use Ada. Spark looks really cool, I love invariants, it just seems the perfect language for me.	exdsq	10.671034	-7.736512	comment	4.0	12.5	1644471932	-5.015799
30316264	>> for numerical computation there i	>> for numerical computation there is likely no faster languageWhat does the author mean by this? How can you get faster than any other compiled language like C where you can check the generated assembly? Does the Fortran compiler do anything special that othe	lentil_soup	10.50467	-7.347894	comment	4.0	10.5	1644698884	8.839189
30276534	Ask HN: How to deal with un-agile ag	Ask HN: How to deal with un-agile agile development?	baalimago	9.798144	-7.35763	story	4.0	4.0	1644432101	-13.825868
30418581	Fork it!Call it Bird or Goose or som	Fork it!Call it Bird or Goose or something.Pull out SwiftUI and keep it simple. Focus on the server market more.	echelon	10.469716	-7.832094	comment	4.0	21.5	1645465967	-10.844896
30418350	which sucks because apple had the ch	which sucks because apple had the chance not to repeat their mistake with Objective-C .. but history repeats itself.No matter how much apple market share in whatever market grows, developers want to be able to switch platforms and not have to think about the l	username_my1	10.468689	-7.729785	comment	4.0	18.5	1645464838	-7.216394
30424512	As someone who started learning Obje	As someone who started learning Objective-C only after Swift become firmly established, I have to say I strangely like the language. I picked it up fast and have had no issues with adding features to a legacy codebase.When I started, I thought it would be some	lenkite	10.482741	-7.7647295	comment	4.0	15.5	1645509948	-10.799883
30468541	Think of SWIFT like the internet. Yo	Think of SWIFT like the internet. You can build your own new internet, but you also need everyone else to connect to it as well. If a Russian oligarch wants to transfer money to a Swiss bank to buy a new boat, they'd need to convince that Swiss bank to be part	dsl	10.466364	-7.823947	comment	4.0	12.0	1645804250	-10.862421
30472684	How does one connect to the SWIFT ne	How does one connect to the SWIFT network? Say, someone wants to start a company for providing some financial service like fund transfer across borders, then connecting to SWIFT will be very helpful. I was always fascinated by how all this works and what does 	_448	10.457204	-7.826131	comment	4.0	10.5	1645825220	-10.848503
30398057	Ask HN: Best first language for a bu	Ask HN: Best first language for a budding MechE	GlenTheMachine	10.231636	-7.942163	story	4.0	1.0	1645286509	1.8822522
30417780	Lattner: Swift Core Team toxic and d	Lattner: Swift Core Team toxic and departure	anaerobicover	10.452604	-7.8274975	story	4.0	81.0	1645461841	-10.830857
30511392	How does SWIFT play with ISO20022, i	How does SWIFT play with ISO20022, is that the same thing but different message format?Also I get it that SWIFT filled a need in the olden days, but with internet+messaging systems in general now available ww why don't banks use something more modern and less 	miraculixx	10.457482	-7.8305645	comment	4.0	11.5	1646124630	-10.8347
30583545	You kinda did this to yourself by us	You kinda did this to yourself by using Swift when it was not stable yet. Meanwhile old Objective-C code continues to work just fine on iOS 15.	xuki	10.4703865	-7.7635927	comment	4.0	18.5	1646620073	5.5639787
16200732	I think it has to do with control. I	I think it has to do with control. I've written microservices and microservices tooling now for a long time... so long when I started we were just calling it something like (isolated-responsibility) SOA and we didn't have a fancy buzzword.Developers want to ow	meddlepal	9.77152	-7.3683167	comment	4.0	12.5	1516577273	-13.824682
16347949	It makes me laugh that 'insane backw	It makes me laugh that 'insane backwards compatibility ' now adays means that 10 year old software still works.	mempko	10.6492405	-7.6954064	comment	4.0	25.0	1518280034	-5.180769
16490176	Apple/swift-nio: Event-driven networ	Apple/swift-nio: Event-driven network framework for high perf. protocol servers	mpweiher	10.568016	-7.781296	story	4.0	137.0	1519887218	-10.815975
16591694	Ada is in practice almost completely	"Ada is in practice almost completely maintained by one single (consulting) company, Adacore, who, except for the GNAT compiler, release all of their OSS contributions under GPLv3 ""to limit your freedom [of use/reuse]"" (it's mentioned explicitly on their Websit"	Hasknewbie	10.655563	-7.719559	comment	4.0	12.0	1521110820	-5.16785
16668366	"""Also, Ada’s strictness and correctn"	"""Also, Ada’s strictness and correctness may be perceived as an anti-feature. When talking about general-purpose programming, businesses need fast development cycles and short delivery times. For the companies, to be successful, it’s far more important to be ah"	PikelEmi	10.639466	-7.7184696	comment	4.0	34.5	1521919501	-5.1067934
16681090	It's far from a solved problem.Many 	"It's far from a solved problem.Many ecosystems haven't gotten past the ""single dependency file and lock file"" system where an entire project has to use a single version of each dependency. There are people splitting their project into a thousand ""microservices"	bobbyi_settv	9.79705	-7.340243	comment	4.0	11.0	1522088027	-13.812279
16721359	This is actually surprising. Are the	This is actually surprising. Are the machine learning engineers at Google (besides Chris Lattner) admitting that Swift is a better language than Go? :) I would be surprised to find out if he was the only one involved in the decision	relyks	10.471223	-7.8350754	comment	4.0	12.5	1522463870	-10.8514385
16852482	Fun fact: the icon for my Objective-	Fun fact: the icon for my Objective-C Mac app is larger than the executable binary (517 vs 394 KB).	dchest	10.479833	-7.7296267	comment	4.0	16.5	1523910835	5.7315907
16857606	There's a pull request with 127.0.0.	There's a pull request with 127.0.0.1 in it.https://github.com/zapret-info/z-i/pull/10/commits/8394b2026...Wonder if they'll merge it.	pandasun	10.652628	-7.4084344	comment	4.0	11.0	1523967653	12.430805
16934028	Introducing Swift for TensorFlow	Introducing Swift for TensorFlow	runesoerensen	10.438466	-7.827798	story	4.0	40.0	1524765230	-10.853704
16977583	Trivia: Ju-py-ter = Julia Python Ter	Trivia: Ju-py-ter = Julia Python TerminalAlthough it's gone far beyond just Julia and Python now.Edit: Ahurmazda is right....the core programming languages supported by Jupyter are Julia, Python and R. While the name Jupyter is not a direct acronym for these l	msravi	10.20978	-7.9673	comment	4.0	16.5	1525273587	10.784641
16977817	> signed integer overflow is now und	> signed integer overflow is now undefined by default at all optimization levelsNow I'm all for this at -O1 and above, but having this enabled by default and -O0 [0] is just reckless. Default/-O0 should consist of only completely safe transformations like cons	dooglius	10.581407	-7.0351753	comment	4.0	13.0	1525274774	-7.039752
17032862	The Paved PaaS To NodeJS Microservic	The Paved PaaS To NodeJS Microservices at Netflix [video]	kapv89	9.785443	-7.3480296	story	4.0	28.0	1525892868	-13.79244
17193617	The real issue isn't that C doesn't 	The real issue isn't that C doesn't have a standard int overflow, but that it's undefined.What they could have done is made it implementation defined, like sizeof(int), which depends on the implementation (hardware) but on the other hand isn't undefined behavi	greenhouse_gas	10.638073	-7.053233	comment	4.0	19.5	1527735380	-7.0400596
17193770	> Overflow in the positive direction	> Overflow in the positive direction shall wrap aroundThis appears to be defining signed integer overflow semantics, which prevents the compiler from doing certain basic optimizations, for example, that (x*2)/2 == x. Is that part of this? Has anyone measured t	ridiculous_fish	10.61623	-7.045649	comment	4.0	15.5	1527737718	-7.0301714
17204455	It's mainly targeting MATLAB, and to	It's mainly targeting MATLAB, and to a slightly lesser extent scientific and numeric programming in Python and R. It's a well thought out language that allows you to write MATLAB-like high level code with an easy gradient for progressive typing and optimizatio	aschampion	10.229403	-7.796676	comment	4.0	40.5	1527854155	10.47985
17205841	I'm not talking about execution spee	"I'm not talking about execution speed but the human interface. The syntax of Python just is not nice and using libraries just adds more and more boilerplate.I don't expect anyone who has not spent a lot of time with Matlab to ""get"" it."	Gravityloss	10.256223	-7.785068	comment	4.0	12.5	1527865143	10.463479
17231678	The differences are more in implemen	The differences are more in implementation than anything else:- AppKit isn't layer-backed by default, requiring you to handle this. Something as simple as setting the background color for an NSView is far more of a ritual than it is for a UIView.- NSColor/NSIm	Klonoar	10.471179	-7.784147	comment	4.0	12.5	1528142316	-10.733455
17260293	Of course FORTRAN still matters. Som	Of course FORTRAN still matters. Somebody has to write real neural network code. We can't all be Python script kiddies!	PredictorY	10.566651	-7.376363	comment	4.0	12.0	1528405742	8.873055
22783448	It really is remarkable that Python'	It really is remarkable that Python's numerical computing libraries have such poor performance. When doing chains of elementwise operations on large arrays (such as toy example `elementwise cos(sqrt(sin(pow(array, 2))))`), Julia appears to outperform Python by	bobbylarrybobby	10.211754	-7.9498606	comment	4.0	14.0	1586056298	10.68318
22796762	Microservice design was not meant fo	Microservice design was not meant for [only] a simpler system but ease of dividing people into smaller teams where a team could focus on a single objective without worrying about rest of the company.If the microservice architecture has made you less productive	KorematsuFred	9.779579	-7.357396	comment	4.0	12.0	1586199963	-13.81442
22820937	Does anyone here use Swift for Deep 	Does anyone here use Swift for Deep Learning work ? I'm yet to see any real advantage, and even if there were or were to be added, I think Julia would almost always be a better choice here.	threw4234324	10.408254	-7.8692417	comment	4.0	24.0	1586423708	-10.847381
22821208	There is more in that rationale than	There is more in that rationale than being privately owned. In comparison to C#, Swift is not natively adopted by any of the three big cloud providers (AWS, Azure and GCS) despite being the go-to language for half of all mobile apps (which is a huge market). C	oaiey	10.457006	-7.8277125	comment	4.0	20.0	1586427934	-10.815734
22821305	I feel differently. I read the docs 	"I feel differently. I read the docs when it was first released and felt it was potentially hitting the sweet spot for ""static yet expressive"" and ""familiar yet modern"". I was mainly Python at the time and the readability and clarity impressed me and those are "	andybak	10.479846	-7.810461	comment	4.0	14.5	1586429252	-10.841009
22822032	One thing to bear in mind with Swift	One thing to bear in mind with Swift is how difficult it is to stay up to date with the latest version. Swift versions are tied to Xcode versions and Apple has a history of leaving older versions of OS X in the dust. I'm on OS X Mojave, which is only one versi	cutler	10.458533	-7.828543	comment	4.0	15.0	1586436839	-10.852603
22823319	I don't understand why Swift for Win	I don't understand why Swift for Windows has not been updated for 2 years. I guess no one, especially Apple, cares about Swift becoming a general purpose language. For that reason alone, I'm skipping over it, although I hear interesting things about it.https:/	okareaman	10.470376	-7.8124447	comment	4.0	14.5	1586445273	-10.822859
22839932	I wonder if there is a difference in	I wonder if there is a difference in terminology between the way I use microservices and the industry? I have worked on a number of systems, both monoliths and microservices, and when a service gets big enough (think Spotify or Uber) monoliths simply don't sca	mfDjB	9.787269	-7.3596473	comment	4.0	14.5	1586585347	-13.816519
22840337	Fortran (standardized without caps f	Fortran (standardized without caps for at least the last couple decades) is current to the 2018 release. I haven't come across anybody who cares or is using it. You do eventually see a lot of older code in it in symbolic and algebraic maths in the deeper code 	metreo	10.473577	-7.410468	comment	4.0	13.5	1586592270	8.818094
22960393	Sorry about the naive question, but 	Sorry about the naive question, but if the memory management overhead is worse in Swift, is the hardware it runs on typically better? I'm assuming some of this because I've noticed Android devices tend to require more CPU/memory compared to iOS devices in the 	etse	10.499355	-7.8087387	comment	4.0	11.0	1587671541	8.304558
23005829	This is a great idea. I maintain tha	"This is a great idea. I maintain that Ada is a better ""better C"" than any of the alternatives I've looked into, but it has an obvious big hurdle: while it has approximately the same use cases as C, it is completely different in terms of looks and handling. One"	kqr	10.649868	-7.7211065	comment	4.0	22.0	1588072459	-5.00149
23017319	I have this thing about micro-servic	I have this thing about micro-services/complexity in that it follows Conway's Law - the architecture follows the organisational structure.If you push authority and decision making and responsibility for a service to a (2 pizza) team then guess what, microservi	lifeisstillgood	9.781103	-7.363767	comment	4.0	14.0	1588153868	-13.819769
23022470	Starting with a monolith could lead 	Starting with a monolith could lead to really difficult refactorings unless you structure the code in a way that it can be easily decoupled.	eweise	9.865205	-7.293603	comment	4.0	11.5	1588184794	13.4551115
23030401	I'm not sure how I should be reading	I'm not sure how I should be reading the article so maybe it's going over my head.> Rule 10: When to make a microservice> I would use a microservice when I have a relatively small and simple chunk of code that needs to run every once in a while.Isn't this wron	maps7	9.787198	-7.3612213	comment	4.0	10.5	1588252336	-13.819273
23041798	Interesting to see how Swift-inspire	Interesting to see how Swift-inspired this feature is.	chhum	10.469986	-7.8282013	comment	4.0	11.5	1588339971	-10.8329525
22906682	Face Recognition and Detection on iO	Face Recognition and Detection on iOS Using Native Swift Code, Core ML,and ARKit	omarmhaimdat	10.473243	-7.81551	story	4.0	56.0	1587205168	-10.856477
23082261	Do you have any extra readings on th	Do you have any extra readings on the rationale of building their own malloc rather than integrating mimalloc or jemalloc?	liuliu	10.652918	-7.137313	comment	4.0	12.0	1588698493	8.871615
23199811	> It is not clear at the moment if A	> It is not clear at the moment if Apple has any plans to port Swift UI to Windows and/or LinuxIt seems pretty clear they have 0 plans on doing that. They could've open sourced it in the first place, along with Combine.Not open sourcing Combine seems like a pr	myko	10.4653425	-7.814112	comment	4.0	13.5	1589594515	-10.773498
23200197	XCode (and hence most of the useful 	XCode (and hence most of the useful parts of using the Apple development ecosystem) as of v11.4 won't install on Macs running Mojave it's actually better, in my view, to use Mono/C# and things like Xamarin than start off with Swift and think you can port the o	brigandish	10.457828	-7.7937975	comment	4.0	13.5	1589599114	-10.8627615
23212440	As far as I can get the argument boi	"As far as I can get the argument boils down to ""the model is stochastic"", ""Fortran is old"" and ""the code is spaghetti"". Of which the first one is deliberate, the second one I don't see as a problem, and the last one is definitely a risk factor, but is far from"	cnorthwood	10.454348	-7.423055	comment	4.0	18.0	1589727453	8.812273
23229658	If they're hard to kill because ther	If they're hard to kill because there are a web of dependencies then I would argue they are doing microservices wrong.	jakemal	9.77974	-7.3577833	comment	4.0	10.5	1589845042	10.672361
23230023	Biologists are text-mungers extraord	Biologists are text-mungers extraordinaire so I don't think Fortran will ever be right for them	neutronicus	10.455949	-7.4026203	comment	4.0	11.0	1589848392	8.812963
23228763	Are they going to regret having 4,00	Are they going to regret having 4,000 micro services now?	schnable	9.774776	-7.32939	comment	4.0	17.5	1589838434	-13.820339
23238096	This is a fun benchmark in C++, wher	"This is a fun benchmark in C++, where you can see that GCC has a more restrictive small string optimization. On my desktop the main python example runs in 3.1s. Then this code    void example() {
      for (int64_t i = 1; i <= 20; ++i) {
        for (int64_t j"	stabbles	10.19846	-7.9531536	comment	4.0	16.0	1589911825	10.697309
37805009	Swift was not given the chance to pr	Swift was not given the chance to prove itself as a language	troupo	10.475005	-7.8286643	story	4.0	15.0	1696708592	-10.828108
37849628	As someone who contributed to this b	As someone who contributed to this benchmark it really isn't a great one. First of the JSON parsing is done before the timer starts. If you look at the raw results you can see that the full runtime of the Julia solution for 60k posts is actually 9.6 seconds (c	PMunch	10.254285	-7.952798	comment	4.0	14.0	1697054929	10.724181
37853657	That’s the part I vehemently disagre	That’s the part I vehemently disagree with. There are servers written in a whole lot of languages. I’d bet there are Java servers written in Java. How are you going to link that into an editor written in C? What if the server’s written in Python? A shell scrip	kstrauser	10.612579	-7.689306	comment	4.0	13.0	1697087547	-10.649031
37930059	Micro-anything tends to cause engine	Micro-anything tends to cause engineering orgs to spend more time drawing boxes and fantasising about what tech would be 'just-perfect' for that particular box than actually considering their users needs.The killer truth is, the connections between your compon	anotherhue	9.788183	-7.348111	comment	4.0	22.5	1697642875	-13.818145
37930272	Separate services helps a lot with b	Separate services helps a lot with bigger teams. No matter how much you modularize code -- which will gradually fall apart anyway unless you have custom tooling that enforces API boundaries programmatically -- you're still tying people to the same runtime envi	mjr00	9.792936	-7.353414	comment	4.0	13.0	1697643625	-13.820016
37931337	Your code structure should  match yo	Your code structure should  match your org chart is the best advice I've seen for splitting code.  Each team in the org maintains their own micro service.  They do whatever  they want within it, but when going  to a different one they go to an interface.  It i	bluGill	9.793009	-7.352815	comment	4.0	11.0	1697647764	-13.817985
37949361	SwiftUI exists to solve exactly this	SwiftUI exists to solve exactly this problem - the ui is declarative and state driven.However, its predecessor UIKit is mostly imperative and it takes a lot of manual code to keep the UI reflective of the underlying data model.  For this reason I find many IOS	turdprincess	10.462215	-7.8233743	comment	4.0	27.0	1697753048	-10.856264
37950555	Can Swift even be used for kernel de	Can Swift even be used for kernel development?	Wowfunhappy	10.465806	-7.8157997	comment	4.0	13.5	1697761013	-10.861798
37951162	Working code can hold unknown bugs, 	Working code can hold unknown bugs, including those Swift could help prevent.There are reasons to rewrite it, though I’m sure it will take a long time and they’re prioritizing risk vs reward.	MBCook	10.4824095	-7.8259845	comment	4.0	15.0	1697765136	-10.8304205
37952353	I really do enjoy working in Swift t	I really do enjoy working in Swift too, but the anemic cross-platform story is a colossal hurdle to selection as the primary development language in many commercial cases.It seems to me that Apple's strongly insular instincts serve them well for integrated pro	inopinatus	10.458543	-7.8012023	comment	4.0	12.5	1697775570	-10.817299
38070112	"    Microservices
    
    grug wond"	"    Microservices
    
    grug wonder why big brain take hardest problem, factoring system correctly, and introduce network call too

    seem very confusing to grug

https://grugbrain.dev/#grug-on-microservices"	jihadjihad	9.814107	-7.359287	comment	4.0	37.0	1698677370	-13.8110895
38070380	_Services_ are obviously a good idea	_Services_ are obviously a good idea (nobody is arguing something like PostgreSQL or Redis or DNS or what have you should all run in the same process as the web server)._Microservices_ attract the criticism. It seems to assume something about the optimal size 	Scarblac	9.79556	-7.3562994	comment	4.0	12.5	1698678535	-13.803654
38073580	> God forbid you find yourself with 	"> God forbid you find yourself with a need to rewrite one of these shitpiles.
Actually, this is much easier with micro services as you have a clear interface you need to support and the code is not woven into the rest of the monolith like a French plat. The be"	cpill	9.794228	-7.351967	comment	4.0	16.5	1698690401	-13.8611555
38074385	If the monolithic application is wri	If the monolithic application is written in a language with sufficient encapsulation and good tooling around multi-module projects, then you can indeed have well known and encapsulated interfaces within the monolith.  Within the monolith itself you can create 	lemmsjid	9.793962	-7.3515835	comment	4.0	14.0	1698693740	-13.830742
37967990	Ogre 14.1	Ogre 14.1	the-dude	10.650869	-7.3296695	story	4.0	69.0	1697904394	7.3647976
25483119	My company is migrating a huge monol	My company is migrating a huge monolith to microservices. One of the proposed benefits is that it makes end to end testing easier because each service only interacts with a couple other services, so each service will be easier to write integration tests for. B	daxfohl	9.810027	-7.2721486	comment	4.0	14.5	1608429091	-13.811806
25498429	This article absolutely nails it. Fi	"This article absolutely nails it. Finally, recognition that microservices are a technical tool for solving a people and organizational problem. We need to understand that a lot of ""new"" technology paradigms (especially those coming down from FAANG or other lar"	eightysixfour	9.78351	-7.3601103	comment	4.0	32.5	1608578903	-13.8153
25503800	I have worked at several companies w	I have worked at several companies with SOA. In fact, I was lead at one of the companies where we were breaking monolith to smaller services. We were having lots of issues with scalability with monolith. First we tried breaking to scale it horizontally by crea	slad	9.793333	-7.3598146	comment	4.0	13.5	1608621217	-13.808924
25600019	>I don't know why so many engineers 	>I don't know why so many engineers let their foundational skills to be locked behind a proprietary ecosystem like that.Because no open source toolkit can do what Matlab can do.The same is true of a lot of high end software: Photoshop, pretty much any serious 	ChrisLomont	10.219887	-7.7922063	comment	4.0	14.5	1609466409	10.430198
25610376	The personal/political aspect aside,	The personal/political aspect aside, I can think of multiple projects that could have benefited from an approach like this.I'm often astonished by the inefficiency of project delivery, particularly in large companies.Teams spending months building sub-systems 	WatchDog	9.800625	-7.2860746	comment	4.0	13.5	1609561539	-13.738496
25621094	I use Matlab-likes (actually Scilab 	I use Matlab-likes (actually Scilab rather than Octave) for one offs and interactive use. That’s usually playing with a dataset, test some analysis techniques, quick regressions, solving linear equations systems, this sort of things. I hate having to set up th	kergonath	10.233386	-7.791168	comment	4.0	23.5	1609672131	10.450291
25621875	Couple of interesting snippets:Apple	Couple of interesting snippets:Apple languages don’t reach the top-10 of languages used on GitHub. While this is likely impacted by the Objective-C/Swift split, it still shows how niche development for that platform is.The rise of China in Open Source contribu	bergie	10.4798355	-7.7423587	comment	4.0	14.0	1609683385	-10.888893
25631766	Matrix has such incredible potential	Matrix has such incredible potential, but is still missing a mainstream-focused IM client with a beautiful UI and appealing UX. If there are any Swift devs looking for a passion/side project like this, hit me up (link in bio)!	dexwell	10.433763	-7.825408	comment	4.0	12.0	1609770721	9.944185
25870365	That sounds scary. Going from a mono	That sounds scary. Going from a monolith to a microservices architecture doesn't seem like a great move for a software like ownCloud. I think rewriting this as a Go application with a modern JS-based frontend might make sense, I just don't get why you need to 	ThePhysicist	9.827789	-7.304951	comment	4.0	20.5	1611311616	-13.78854
25878446	I'm curious--what happened to Object	I'm curious--what happened to Objective-C in that fight with C++? Why didn't people go for its simplicity?	yawaramin	10.497119	-7.705639	comment	4.0	15.5	1611363717	5.72739
25888242	I like to half jokingly assert that 	I like to half jokingly assert that microservices are a pysop to sell cloud hosting	blabitty	9.77948	-7.3614783	comment	4.0	12.0	1611453607	-13.834104
26004942	> Microservices are meant to help gi	> Microservices are meant to help giant engineering teams isolate the things different teams work on, but in a startup with only one team you don't have that bureaucratic overhead in your org, so you probably don't need it in your code.We had these discussions	dominotw	9.781308	-7.361884	comment	4.0	11.0	1612291863	-13.8230715
26019460	You forgot to mention microservices 	You forgot to mention microservices brah. If your services aren't micro enough, forget about it, you aren't gonna make it.	potta_coffee	9.780139	-7.3624997	comment	4.0	11.0	1612388137	-13.81345
26069924	170,000 lines of Matlab code for a p	170,000 lines of Matlab code for a project is not a good sign. Unless they’re also including the source of various Matlab toolboxes which are already tested by the Mathworks.It’s such a high-level language it’s hard to imagine what the hell they’re doing with 	knolan	10.206401	-7.776941	comment	4.0	11.0	1612817437	10.47176
26117730	No surprises there. There were maybe	No surprises there. There were maybe a total of 5 people excited about adding automatic differentiation to Swift. Too bad they didn't try improving Julia instead.	ipsum2	10.276258	-7.9733486	comment	4.0	27.0	1613159053	10.930418
26117845	While I love using Julia for many th	While I love using Julia for many things, I prefer having a Python monoculture for AI to be able to mix and match different algorithms.At the end the engine that compiles the mathematical expression to hardware is what matters, and I don't think that LLVM IR t	xiphias2	10.195173	-7.9382324	comment	4.0	20.0	1613159737	-8.413138
26118153	We'll see it in legacy code for a lo	We'll see it in legacy code for a long time, sure, but there's every indication that all new Apple frameworks are being written in Swift. Anyone starting a new project in Objective-C is in the minority.	raydev	10.4706745	-7.784882	comment	4.0	13.0	1613161563	-10.816778
26121914	As weird as it sounds, the only thin	As weird as it sounds, the only thing that stops me from trying Julia is 1 indexing	sida	10.211858	-7.9386024	comment	4.0	13.5	1613199184	10.655901
26133487	I've tried Julia and really liked it	I've tried Julia and really liked it, but the user experience was pretty bad. The language really needs faster interactivity or a strong type checker. I found myself waiting after than compiler a lot more than in some AOT compiled language like Rust... I fear 	saiojd	10.288621	-7.923622	comment	4.0	35.5	1613319001	10.7119665
26134000	I cannot fathom how ttfp is importan	I cannot fathom how ttfp is important. It's time to first plot, not to every plot. After it's down to ~10 seconds, why on earth does anyone care?	DNF2	10.180902	-7.972408	comment	4.0	21.0	1613322569	10.832933
26191288	If I recall correctly (it's been a w	If I recall correctly (it's been a while) a good way is to use Ada fixed-length strings wherever you can, and use something like Dmitry Kazakov's UTF-8 library in other places. People often use unbounded strings in places they don't need to instead of declarin	jonathanstrange	10.664098	-7.622442	comment	4.0	11.5	1613728130	-5.2180758
26193258	> there is no need to put a network 	"> there is no need to put a network in the middle to do the linker's job.Absolutely. More people need to understand the binding hierarchy:- ""early binding"": function A calls function B. A specific implementation is selected at compile+link time.- ""late binding"	pjc50	9.851978	-7.277926	comment	4.0	18.5	1613743572	-13.812193
26231239	ZZT holds a special place in my hear	"ZZT holds a special place in my heart. I played the shareware ""Town of ZZT"" as a teenager, made my own (very incomplete) worlds, and had fun with the programming language, ZZT-OOP -- a very quirky beast.Every few years I have a silly notion I want to write a s"	benhoyt	10.67026	-7.310352	comment	4.0	12.5	1614031199	12.457332
26317344	I enjoyed Fortran/FORTRAN. Is a nice	"I enjoyed Fortran/FORTRAN. Is a nice succinct language.""Lovecraftian hieroglyphics of Fortran"" <-- the author never programmed in Perl, I presume."	linuxlizard	10.508834	-7.4087124	comment	4.0	13.5	1614704124	8.811794
26317411	Ada shouldn't be all caps I don't th	Ada shouldn't be all caps I don't think.(I always expand that to the American Dental Association)	butterisgood	10.6443615	-7.7267213	comment	4.0	11.5	1614704416	-5.0838003
26317867	I tend to like Ada, but it is a tiri	I tend to like Ada, but it is a tiring language to read with the all caps.  Also, it 'feels' like it has a gatekeeper group and really doesn't come up in any mobile conversation.  I still believe someone will do something akin to a syntax substitution and come	protomyth	10.6255665	-7.571886	comment	4.0	14.5	1614706503	-0.79066586
26340517	I am writing an app for iOS in Swift	I am writing an app for iOS in Swift and I have an array of structs with some 70,000 elements or thereabouts and for some bizarre reason the compiler uses so much memory if I define it as such directly in the source, that I run out of memory. So instead as a w	codetrotter	10.599472	-7.7814345	comment	4.0	10.5	1614851360	7.8201804
26354771	Can someone explain to me what's wro	Can someone explain to me what's wrong with memcpy?	junippor	10.654553	-7.0419836	comment	4.0	10.5	1614936116	3.6937704
26426306	I played with Nim a little bit, lovi	I played with Nim a little bit, loving it for a while, and I quickly ran into the same issue I had with Julia, which was that I had trouble staying in the basic language. Both Nim and Julia's documentation, and many modules/imports/includes/whatever of those l	salamanderman	10.40313	-7.9101524	comment	4.0	11.5	1615482417	10.804848
26427353	A lot of semi companies have built t	A lot of semi companies have built their own simulation environments because the EDA vendor's provided tools are very limited in what they can do and difficult to use.  Many users go to Python, Excel or MATLAB because the programming/math capabilities of the E	multiply	10.186162	-7.912535	comment	4.0	14.5	1615487832	10.695873
26434954	Doesn't even malloc do this under th	Doesn't even malloc do this under the hood by only occasionally calling sbrk and otherwise handing out blocks from an internally managed contiguous region?What's the point of doing this again, manually? Or am I mistaken in my memory of the common modern malloc	kqr	10.652912	-7.1332383	comment	4.0	11.5	1615551423	8.89562
26455527	Hint for commenters: Since Fortran 9	Hint for commenters: Since Fortran 90, it's spelled Fortran, not FORTRAN. By using the latter you signal that your experience on the topic is from 30 years ago.https://en.wikipedia.org/wiki/Fortran#Fortran_90	sampo	10.448577	-7.4158225	comment	4.0	10.5	1615730658	8.825292
26455403	I work at one of the labs mentioned 	I work at one of the labs mentioned and get paid for running not only the climate models but mesoscale models as well, which are also written in Fortran.The premise of the article is that Fortran, 70 years later is still an appropriate tool to use for crunchin	Hankenstein2	10.458112	-7.4185605	comment	4.0	13.0	1615729847	8.802818
35552824	Zylin ZPU: 32 bit CPU with GCC toolc	Zylin ZPU: 32 bit CPU with GCC toolchain	panic	10.642117	-7.0196967	story	4.0	91.0	1681376687	-7.498648
36648791	Often overlooked, the Ada embedded e	Often overlooked, the Ada embedded ecosystem has advantages of maturity in static analysis, debugging, and target support.	sacnoradhq	10.6641	-7.7217293	comment	4.0	11.0	1688850468	-5.157406
36656998	Awesome article.  SwiftUI is still '	Awesome article.  SwiftUI is still 'not there yet'.  It makes the easier things, much easier compared to UIKit.  But, as soon as you get to more advanced views, it shows its immaturity.I know Apple is pushing it, and at some point it will be the default UI fra	ardit33	10.452784	-7.8259635	comment	4.0	17.0	1688925549	-10.844442
36707440	use in what ?I severely doubt anythi	use in what ?I severely doubt anything I do touches fortran millions times a day unless it's google search that runs on it.	ilyt	10.450286	-7.412797	comment	4.0	14.0	1689246678	1.7601655
36837554	Currently developing both in swift a	Currently developing both in swift and go and i have the exact inverse feeling.Go seems to have been developped by true masters that really understand that less is more. They've also kept a laser sharp focus on working on things that really matters and took th	bsaul	10.529176	-7.835044	comment	4.0	38.5	1690133431	-10.789362
36834675	Valgrind recieves a development micr	Valgrind recieves a development microgrant from FUTO	pabs3	10.670361	-7.0301385	story	4.0	90.0	1690114925	8.7481165
36948038	Note that the individual license for	Note that the individual license for Matlab is $149/year [0], which isn't crazy IMHO.0 - https://www.mathworks.com/pricing-licensing.html?prodcode=ML...	javajosh	10.207343	-7.7753835	comment	4.0	12.0	1690833922	10.477335
36985441	At a consulting gig I did, we were b	At a consulting gig I did, we were bootstrapping a brand new python engineering team for a new line of products. We chose the frameworks, set standards via decision records, wrote a template service that you would copy paste, and build on top. Cross cutting co	lijok	9.837042	-7.209949	comment	4.0	14.5	1691068427	1.1521127
37003680	Question: is Objective-C post 2.0 be	Question: is Objective-C post 2.0 being actively maintained outside of Apple?Can I use the new features that Apple added in cross platform projects or open source environment  like this?I loved Objective-C very much (yes, really) and I'd like to continue using	sharikous	10.475847	-7.746218	comment	4.0	13.0	1691172888	5.628747
37077186	Brevity forces thought, which I pref	"Brevity forces thought, which I prefer to ""Putting a Sentence in a File Name.docx"".FORTRAN originally had the same limitation for function names, and that lead to some classics such as GEMM and SAXPY."	queuebert	10.59697	-7.2815237	comment	4.0	13.5	1691680362	8.789825
37101215	Almost no new projects within Apple 	Almost no new projects within Apple are written using Objective-C, and old code is actively rewritten for many reasons, with security being a large one.	catiopatio	10.472817	-7.7291093	comment	4.0	17.5	1691854482	5.610286
37187521	This. So much this. We are 5 years i	This. So much this. We are 5 years into a microservices wank-fest. So far the net ROI is negative, the user experience sucks more than ever, the complexity is so high that people can't get things done, nothing works properly any more and no one owns anything b	baz00	9.784935	-7.3496504	comment	4.0	12.0	1692443137	-13.81896
37248034	I wonder why this discussion about t	I wonder why this discussion about tooling does not include .NET languages or Swift, even if the first class tooling are IDEs such as Visual Studio or Xcode. Most probably because the open source world escapes big tech dependencies?	wslh	10.607594	-7.6614633	comment	4.0	12.0	1692880361	-10.730113
37289254	I completely agree. 'Design-by-commi	I completely agree. 'Design-by-committee' gets a bad rap, but Ada's designers got a lot of things right when it came to bare-metal programming. The ability to specify the in-memory representation of a type is one of my personal favourites. I don't think Ada's 	ajxs	10.661815	-7.720403	comment	4.0	18.0	1693192095	-5.1209984
37292305	When a job I'm interested in uses a 	When a job I'm interested in uses a language I haven't used before I say that I've learned a couple already and I'll quickly learn the next one. I'd generally say each additional language has been easier than the last. I've landed contracts to code in language	8organicbits	10.464196	-7.4223404	comment	4.0	12.5	1693220922	8.806107
37292605	Fortran is unpopular because program	Fortran is unpopular because programming is fashion driven. That is basically all.It is very suitable for it’s domain, but it’s old. Programmers have no attention span and love new and shiny things. They would rather reimplement known solutions in new language	sseagull	10.489176	-7.394081	comment	4.0	10.5	1693223216	8.828154
37292187	About:> 1. It is very likely that we	"About:> 1. It is very likely that we will be unable to staff Fortran projects with top-rate computer scientists and computer engineers.They are mentioning ""top-rate"", I'm assuming salary is not an issue. I can understand for a scientist who's job is not progra"	jraph	10.40997	-7.34057	comment	4.0	20.0	1693219780	8.820332
37292343	Fortran is in a very strange positio	Fortran is in a very strange position in the current tech landscape.There is a race of sorts going on, to simplify and commoditize high performance computing in the post-Moore's era. This means enabling things like easy GPU programming, easy multi-core program	nologic01	10.474419	-7.4091988	comment	4.0	22.0	1693221298	8.811343
37295729	I’ve done computational physics and 	I’ve done computational physics and used Fortran. There are some warts, like line length requirements. But for actual math, Fortran takes the cake	ecshafer	10.416217	-7.396196	comment	4.0	18.5	1693236746	8.835731
37329981	"The Saga is Antipattern
https://serg"	"The Saga is Antipattern
https://sergiy-yevtushenko.medium.com/the-saga-is-antipatter...Microservices distributed transactions are an anti pattern"	banq	9.776406	-7.358478	comment	4.0	12.5	1693434488	-13.804705
37477302	if you have a well modularized monol	if you have a well modularized monolith, you can get best of both worlds.	meowtimemania	9.870024	-7.292916	comment	4.0	17.0	1694497930	-13.798134
37477990	A common pattern I've seen is:- Curr	A common pattern I've seen is:- Current CTO/VPs built/helped build original monolith- Nobody wants to tell the CTO that their code is shit (and/or is from a different era and needs a complete overhaul), unrelated to that fact it's a monolith. CTOs are too busy	switch007	9.777262	-7.358442	comment	4.0	11.0	1694505194	-13.825546
37532753	That's why it's important to keep th	That's why it's important to keep the number of devs low, it makes it less likely that one starts talking about microservices.	Scarblac	9.782117	-7.3653355	comment	4.0	22.5	1694849601	-13.827955
24472709	I appreciate the author putting this	I appreciate the author putting this post together. I am, however, having trouble squaring the overall positive tone of the piece with what seem like multiple show stopping problems. The bottom line I am taking away from this is you might not be able to ship y	matt2000	10.454638	-7.823379	comment	4.0	11.5	1600104412	-10.842131
24472959	Building clients on other platforms 	Building clients on other platforms makes you appreciate the freedom we have on the web.Instead of waiting for Apple to fix SwiftUI, it's completely viable to bring your own abstractions, from React to Reason to Elm, to the web. And the cottage community that 	hombre_fatal	10.454625	-7.8115935	comment	4.0	29.0	1600105645	-10.836306
24534243	I know where you're coming from, but	I know where you're coming from, but TF in my opinion was very user-hostile even on arrival. I can't tell you how much hair-pulling I did over tf.conds, tf.while_loops and the whole gather / scatter paradigm for simple indexing into arrays. I really think the 	bodono	10.023897	-7.9349766	comment	4.0	11.5	1600612032	10.592924
24559544	The docs are very incomplete and com	The docs are very incomplete and common third party dependencies are missing. I know it’s a chicken and egg type situation but vapor is not an appealing option for backend unless you really want/need to use Swift.	jamil7	10.4573345	-7.818797	comment	4.0	11.5	1600806777	-10.834689
24576092	This is essentially Swift’s problem 	This is essentially Swift’s problem on the server. If you have a service running and serving hundreds of clients, then any one of those threads can cause a trivial panic if there’s an overflow and take the entire service down.As a result, a number of use cases	alblue	10.520712	-7.7949142	comment	4.0	12.5	1600931169	-10.850073
24576103	The problem with integer overflow, i	The problem with integer overflow, in the general context of UB, isn't that it's expensive to trap.The problem is that the C (and C++) specs insist on overflow being undefined behavior. Then compilers insist on abusing the UB as meaning that they get to do wha	olliej	10.643496	-7.077463	comment	4.0	24.0	1600931293	-7.025703
24576666	> Aborting the program on integer ov	> Aborting the program on integer overflow seems so drastic.Disagree. Overflowing of a signed integer type is undefined behaviour, which deserves to be taken seriously.I was surprised to see that the article doesn't mention the signed/unsigned distinction, or 	MaxBarraclough	10.601574	-7.022224	comment	4.0	20.0	1600937751	-7.0293403
24593628	I will gather a lot of downvotes, bu	I will gather a lot of downvotes, but still: I find Swift a very haphazardly designed language with very little foresight and forethought. This is further compounded by its standard libraries which are directly lifted from MacOS with all of their idiosyncrasie	dmitriid	10.49402	-7.819892	comment	4.0	17.0	1601064461	-10.892256
24593819	Minor nitpick but it does not have s	Minor nitpick but it does not have seamless interfacing with anything other than Objective C.C can be exposed as Objective C, but C++ has to go through C (potential objective C++) first.This is really no different than most other languages.What it does do is p	dagmx	10.525543	-7.7297297	comment	4.0	10.5	1601065995	5.683618
24594139	OP said systems language, and what’s	OP said systems language, and what’s Swift lacking there on other platforms?	sedatk	10.468537	-7.82195	comment	4.0	19.0	1601068237	-10.837223
24594451	Firstly, wants wrong with being “the	Firstly, wants wrong with being “the C# of Apple”? I think they wanted a language that can coexist with objective-C libraries, and is reasonably memory-efficient (adding RAM to phones decreases battery life) that they could control, and created it.They certain	Someone	10.525159	-7.6594954	comment	4.0	14.5	1601070405	-10.84037
24609502	Advantages of Swift and SwiftUI? Nev	Advantages of Swift and SwiftUI? Nevermind, I'll try to answer both:For Swift it's a modern language that doesn't need to have backward compatibility with C that Objective-C had. It has a very expressive syntax and uses modern idioms you see in JS, Kotlin, Rus	ratww	10.472506	-7.826238	comment	4.0	32.5	1601235327	-10.832192
24616451	I’ve often wanted to try out Zig at 	I’ve often wanted to try out Zig at work but the dependency on the latest LLVM meant doing that first. Building LLVM from scratch on our platform takes more resources (including time) than I normally have available (LLDB needs like 6GB of RAM to link?)So, I we	butterisgood	10.606712	-7.2688265	comment	4.0	12.0	1601300204	12.518697
24635509	Is there something about Fortran tha	"Is there something about Fortran that makes is a more attractive language for WebAssembly than, say, C?Or is this project more of a ""I did it because it was there and I can"" (which is certainly a good reason as well)"	ineedasername	10.476853	-7.400391	comment	4.0	16.5	1601437488	8.817302
24659779	Question to anyone more knowledgeabl	Question to anyone more knowledgeable about swift, why does it recommend against using atomics? It makes a joke about thread sanitizer, but what actual steps do you have to go through to use atomics in swift safely?	PaulBGD_	10.55297	-7.8182197	comment	4.0	12.0	1601622076	8.963701
24683974	This article triggers my Scrum™️ PTS	This article triggers my Scrum™️ PTSD.  The Way of DevOps?  Am I going to have to fight off DevOps™️ certified consultants for the next five years now?By the way, I would recommend not trying to make your systems clever and “learn”, as the Third Way™️ suggests	cle	9.785943	-7.320129	comment	4.0	10.5	1601864553	1.9859562
24716226	As an iOS engineer, I'm a bit biased	As an iOS engineer, I'm a bit biased, but I'd still say it's currently not practical to learn it if you're not doing Apple development.That said, I love the language, and it's a big part of what motivates me to continue being an iOS engineer (I'm not sure I'd 	austinl	10.464704	-7.8229413	comment	4.0	11.0	1602136003	-10.852655
24748817	This is a good list of positives. I'	"This is a good list of positives. I'm surprised there's no mention of bitfields though.I like the u32::from_le_bytes and into() and so on, but I feel like Rust would be a perfect match for explicit ""u3"" types when dealing with low-level protocols.https://immun"	boulos	10.669837	-7.0407944	comment	4.0	12.0	1602448016	-3.3980408
24809311	While the assumption that you can ma	While the assumption that you can make changes to swift’s stl is not that far-fetched, doing so to cpp’s is completely mental.I’ve got a feeling that swift is becoming a very polluted mashup of features that come from parties with conflicting interests. AFAIK,	3jckd	10.466525	-7.8228583	comment	4.0	27.5	1602935504	5.3845854
24688381	Separation of concerns between code 	Separation of concerns between code and service layout (2010)	iou	9.806335	-7.343643	story	4.0	16.0	1601910249	-13.822945
24786430	Malloc as a Service	Malloc as a Service	pabs3	10.654311	-7.146568	story	4.0	84.0	1602752544	8.915358
24840632	Not to sound dismissive but I rememb	Not to sound dismissive but I remember when that was true of Python (vis-a-vis Perl and some other things). My recollection of discussions on forums when it was starting to gain mindshare were arguments largely about the aesthetics of the syntax.Numerical comp	teorema	10.267367	-7.902042	comment	4.0	16.5	1603217784	10.73871
24842820	Honestly, I just wish that this was 	Honestly, I just wish that this was 0-indexed. 1-indexing annoys me enough that I haven't really started playing with Julia.	sida	10.252308	-7.8838024	comment	4.0	11.5	1603231680	10.5814905
24946011	I read Dijkstra's goto considered ha	I read Dijkstra's goto considered harmful in college, circa 1970. I was a young programmer at the time, and it made me think and reconsider how and why big programs were often hard to understand.Years later, in grad school, my research was on program verificat	todd8	10.617045	-7.077186	comment	4.0	13.0	1604086470	-9.433918
24946978	could you imagine having a function 	"could you imagine having a function with many arguments and trying to find the async.internal func refreshPlayers(firstParameter: String, secondParameter: Int, thirdParameters: Float) async {
}these small mistakes are starting to add up with Swift. They should"	onelovetwo	10.59823	-7.8016357	comment	4.0	14.5	1604092596	-10.83541
24957055	This seems useful. One thing Ada has	This seems useful. One thing Ada has been lacking is a central place to upload and use dependencies.However, I’ve found that pure Ada code without a package manager is pretty easy to integrate using the gprbuild tool; you just copy the dependency’s .ads and .a	csb6	10.663719	-7.683835	comment	4.0	10.5	1604202116	-5.222887
24975516	> > A huge part of my career has bee	> > A huge part of my career has been splitting monoliths into cohesive smaller codebases> Did that ... create business value for your company?Not OP, but the big value of splitting into microservices is isolation.In production, this isolation offers a limited	kenrose	9.783436	-7.358568	comment	4.0	14.5	1604367805	-13.824678
25103241	It's mostly just clean UI that I lik	It's mostly just clean UI that I like. And that it's in Swift, makes it easier to contribute than C.	nikivi	10.458885	-7.805241	comment	4.0	11.0	1605463475	-10.814786
25129787	Ok, I think I've got it this time --	"Ok, I think I've got it this time -- and incidentally, a new interview question.  if (((a > 0) && (a > INT_MAX - b)) ||
      ((a < 0) && (a < INT_MIN - b))) { /* Would Overflow */ }

Not standard, but not undefined either are the checked intrinsics:  __builti"	arcticbull	10.658126	-7.046081	comment	4.0	11.5	1605646936	-7.0157266
25158111	I want Swift-on-server to be a thing	I want Swift-on-server to be a thing because context switching from UI to backend development is taxing enough, at least the language and some of the tooling could remain the same.Maybe you can do that with JS+HTML+CSS on the front end and NodeJS on the backen	mrtksn	10.473529	-7.8294	comment	4.0	13.0	1605857582	-10.852455
25172871	I don’t understand why Apple doesn’t	I don’t understand why Apple doesn’t just document this. Is the team responsible for it just pro-UIKit and doesn’t actually want people to use SwiftUI or something? Because the lack of documentation for so long really does give me the impression that they actu	jrsj	10.451493	-7.8095055	comment	4.0	13.5	1605993790	-10.827655
25252793	Ask HN: Can GNU Octave be used as fu	Ask HN: Can GNU Octave be used as full MATLAB replacement?	tutfbhuf	10.191261	-7.7988477	comment	4.0	11.5	1606736384	10.405736
25331301	"""Even if a company has a few brillia"	"""Even if a company has a few brilliant C programmers on staff, they won't be able to find all the issues the mediocre programmers produce.""Also, I am very sceptical, that even brilliant C programmers won't have a bad day, lack of sleep or distracted by persona"	hutzlibu	10.6616125	-7.7258854	comment	4.0	12.0	1607342027	-5.101748
25403968	Implementing a memory allocator seem	Implementing a memory allocator seems to require system calls. What happens when there's no OS? For example on an MCU like Arduino, is the memory allocator packaged along with the program data? If so and in the case of an Arduino, is the code for it available 	ajfjrbfbf	10.672629	-7.1020527	comment	4.0	11.5	1607828938	8.822076
25426742	Yea I don’t disagree, but what devel	Yea I don’t disagree, but what development team has the luxury of choosing SwiftUI?Most places hiring are looking for cross platform “2 developers for the price of one” ... and the burden of dealing with cumbersome react native falls on the developer.	rubicon33	10.484283	-7.810153	comment	4.0	11.0	1608004044	-11.024968
25454127	Using JAX to Accelerate Research	Using JAX to Accelerate Research	umangkeshri	10.015015	-7.938149	story	4.0	54.0	1608198852	10.573959
38749876	Uhh they time the vmap of the jit on	Uhh they time the vmap of the jit on Jax, basically skipping a ton of optimizations,.esp if there is any linear algebra in there.  They also include the cost of building the vmap functional.  Not a valid comparison.https://github.com/utkarsh530/GPUODEBenchmark	yablak	10.031294	-7.931003	comment	4.0	14.0	1703378585	10.568618
38801833	Lets step back a second. If the rati	Lets step back a second. If the rationale behind adopting microservices for everything is PURE orgitecture rather than software architecture, then that's not really a rationale at all.Instead of having one instance, you now have dozens of little service fiefdo	LarsDu88	9.787935	-7.3607135	comment	4.0	11.0	1703825276	-13.813553
38818692	iSH has compiled the binaries for ar	iSH has compiled the binaries for arm64 so they actually run natively. When they do a syscall to malloc they are actually doing a syscall to malloc.iDOS is interpreting the bytecode and wrapping the unavailable things with its own implementation. When a DOS ap	KMnO4	10.624927	-7.087858	comment	4.0	11.0	1703967500	8.883245
38958680	I remember several years ago when di	I remember several years ago when differentiable programming was an object of interest to the programming community and Lattner was trying to make Swift for Tensorflow happen[1].I'm of the opinion that it was ahead of its time: Swift hadn't (and still hasn't) 	dwrodri	10.441712	-7.8418975	comment	4.0	10.5	1705005536	-10.833595
38966463	Yet reality contradicts you.> What d	Yet reality contradicts you.> What does python offer you? Lists, dictionaries, strings (none of which is of any use to scientific computing)pandas/numpy/scipy/etc, so basically you get a blas/la pack equivalent, with a R/matlab feel.> there's no hope that your	Galanwe	10.273609	-7.755025	comment	4.0	14.0	1705056282	10.481202
38968265	As someone who has to use Fortran fo	As someone who has to use Fortran for their job fairly frequently, I say Fortran is a pretty awful experience compared to Python.Although Fortran is good at arrays, it is terrible at any other kind of data structure. You don't get a standard set of useful data	xioxox	10.464594	-7.4060183	comment	4.0	10.5	1705069468	8.895756
38978555	No surprise. Apple likely wants to r	No surprise. Apple likely wants to run LLMs on their devices and provide developers with the possibility to create iOS apps using that. C++ is essential in that sense.	whirlwin	10.608113	-7.294977	comment	4.0	14.0	1705140015	-7.367596
38980571	Since a lot of people are discussing	Since a lot of people are discussing Apple’s plans to replace C/C++ in performance critical areas, I’m curious to discuss it. How do they plan to make Swift actually match those languages in speed? Last I checked, classes, along with fundamental struct types l	meisel	10.50315	-7.805367	comment	4.0	12.0	1705158265	-10.833219
39046138	I think most programming languages h	"I think most programming languages have syntactically significant whitespace. I believe Fortran doesn't (or didn't), which helped a bug fly under the radar at NASA:  DO 10 I=1.10

Which got interpreted as:  DO10I = 1.10

Whereas the programmer wanted:  DO 10 I"	tmtvl	10.516891	-7.3674664	comment	4.0	21.5	1705604774	8.801502
39055512	Nothing against AdaFruit, but this r	Nothing against AdaFruit, but this really should link to Roy Longbottom's detailed comparisons [1] that this very short post links to.[1] http://www.roylongbottom.org.uk/Cray%201%20Supercomputer%20P...	klelatti	10.670226	-7.7001786	comment	4.0	12.5	1705672916	-5.09386
32525722	It's really not an impressive showin	"It's really not an impressive showing for SwiftUI. 4 iterations later and after being told it's ""the future"" in unequivocal terms, it's still at 12% (and only like 3% without any AppKit combined (last chart)). It's not dogfooded for any productivity apps. For "	WoodenChair	10.453253	-7.8232026	comment	4.0	16.0	1660941973	-10.817953
32562188	While interesting, every time I take	While interesting, every time I take a look at the Swift forums I fear that Swift becomes even more bloated. The community seems to like adding every language feature and their grandmother. Introducing a different object model means either some breaking change	tonyjstark	10.461833	-7.8619647	comment	4.0	14.0	1661244910	-10.732392
32577956	It's actually the perfect litmus tes	It's actually the perfect litmus test, and a good way to check someone's seniority or competence in in about 5 minutes flat:Developers who disclaim responsibility, or show no interest in, how their software is scaled, securely locked down, deployed or monitore	mickeyp	9.799294	-7.2897735	comment	4.0	14.5	1661340867	-13.779902
32630953	People burn an astounding amount of 	"People burn an astounding amount of CPU and brain cycles pretending that UIs are something they are not. (i.e. ""pure"" functions)I hope Apple never goes the way Microsoft did with their fad UI toolkits that utterly destroyed developer trust in native Windows de"	aaaaaaaaaaab	10.462774	-7.8113937	comment	4.0	17.0	1661712961	-10.820018
32631172	At my company we've been slowly rewr	"At my company we've been slowly rewriting our UIKit app in SwiftUI. We were due for a rewrite when SwiftUI dropped. I'd say we're about 75% done.For those ""stupidly complex UIs"", SwiftUI just doesn't have enough hooks for customization. And the improvements ar"	dpmitu	10.45205	-7.822386	comment	4.0	13.5	1661714231	-10.853904
32631198	I'm building an IDE in (mostly) Swif	I'm building an IDE in (mostly) SwiftUI, and have been using it since release, so I feel like I've worked with it more than most people.A couple observations:- SwiftUI is really complexIt's going to take you at least a year to get used to the declarative way i	rudedogg	10.457489	-7.8222094	comment	4.0	12.0	1661714405	-10.879335
32647543	Bit fields in C are notoriously non-	Bit fields in C are notoriously non-portable (exact physical layout depends on the compiler).  Is Zig any better (apart from the fact that there is only one Zig compiler for now)?	tempodox	10.659939	-7.484884	comment	4.0	15.5	1661843924	12.526699
32658379	Moving “The Swift Programming Langua	Moving “The Swift Programming Language” Book to Open Source	hasheddan	10.461148	-7.821557	story	4.0	97.0	1661920137	-10.844136
32674600	Ask HN: Swift is a good language, so	Ask HN: Swift is a good language, so why doesn't it get much attention?	_448	10.58059	-7.877459	story	4.0	11.0	1662029507	-10.824841
32745923	The 2 biggest problems with Matlab a	The 2 biggest problems with Matlab are price and lack of community. The price is an issue even if you can afford it because it makes it really hard to deploy widely since anyone who wants to run the code also needs to be paying Mathworks. This closely ties in 	adgjlsfhk1	10.213011	-7.781499	comment	4.0	18.5	1662520017	10.481937
32746131	I once got on a call with MATLAB com	I once got on a call with MATLAB compiler engineer and had him fix a bug in an afternoon. I should have written a blog post about it but it is too late, I have very little recollection of the details. It was kinda awesome though. How often can you do just call	systemvoltage	10.248379	-7.7566485	comment	4.0	13.5	1662522693	10.48663
38198378	Very naive question, but are the sem	Very naive question, but are the semantics of Fortran so different that it can't be translated to C first and then compiled using a C compiler? Perhaps maintained in C going forward?I can't imagine there are a lot of Fortran folks around maintaining these old 	mattbillenstein	10.471192	-7.403777	comment	4.0	17.5	1699483848	8.753414
38379900	For a summary of changes to the lang	"For a summary of changes to the language, see John Reid's slides here:
https://fortran.bcs.org/2022/AGM22_Reid.pdfMore info, The Home of Fortran Standards:
https://wg5-fortran.org/"	hardmaru	10.449554	-7.3875613	comment	4.0	13.5	1700664430	8.8433695
38382173	Numpy probably calls Fortran and C l	Numpy probably calls Fortran and C libraries under the hood.Is Fortran still considerably faster than Numpy?	aborsy	10.61202	-7.396616	comment	4.0	12.0	1700674154	9.066503
38385073	Fortran first appeared in 1957... It	Fortran first appeared in 1957... It's probably older than most people here on HN.	nolist_policy	10.447056	-7.4189982	comment	4.0	10.5	1700687064	8.80281
38410888	Thanks for your feedback about the o	Thanks for your feedback about the octaves!There is one question that I haven't entirely figured out how to ask but am curious about -- if we let you adjust the octaves, and if you select the correct note but the wrong octave, would you want the game to highli	lpnotes	10.158382	-7.7732806	comment	4.0	10.5	1700882420	10.199246
38418947	I understand the need for such a thi	I understand the need for such a thing, but the wild amount of indirection that is needed in microservices world is astounding.Hmm, that request didn’t make it through! I wonder if it was dropped by the database, the business logic, the spring http-handling fr	timeagain	9.783651	-7.361903	comment	4.0	14.0	1700969845	-13.8114195
38455247	What does distribute monolith mean? 	What does distribute monolith mean? Is it just a monolith app deployment with distributed (master and replica) db servers in this case?	ssd532	9.802031	-7.3459296	comment	4.0	13.0	1701229216	-13.825133
38490538	I don't get the amount of effort peo	I don't get the amount of effort people out into the replacement-strategy, I did perfectly fine without it and the code is about as complex as the examples I've seen.https://github.com/codr7/swift-interpreter/blob/main/part10/...	codr7	10.511193	-7.805102	comment	4.0	11.0	1701456180	-10.861076
38516558	Cool! Writing math-heavy code in Jul	Cool! Writing math-heavy code in Julia is such a pleasure. C++ is a pain, numpy is alright but Julia just makes sense. I really wish I could use it for my day-job.Back when I was on ATLAS we mostly did things in C++. If I never have to do another matrix multip	fnands	10.205075	-7.930087	comment	4.0	44.5	1701693765	10.684123
38516757	Julia is great for numerical simulat	Julia is great for numerical simulations. Companies such as Google and Facebook should have supported Julia for machine learning, in my opinion.Numpy is OK, but verbose and a bit of a pain.	aborsy	10.197787	-7.9649997	comment	4.0	23.5	1701695184	10.720948
14755669	I expected something more creative, 	I expected something more creative, replacing posts with my friends, like my grandmother sharing why React is awesome and my primary school friends discussing how did they go microservices.	CSDude	9.776862	-7.363301	comment	4.0	13.0	1499887000	12.92357
14779002	> Almost all the cases where I've he	> Almost all the cases where I've heard of a system that was built as a microservice system from scratch, it has ended up in serious trouble.I wholeheartedly disagree with this point.I've found that if I build monolith first, it becomes harder to draw the line	olingern	9.792067	-7.375754	comment	4.0	16.0	1500153516	-13.850815
14802907	> I never understood why people hate	> I never understood why people hate native languages so muchYou actually need to know some programming if you want to write applications in Swift, Java or .NET. That's why.	romanovcode	10.509203	-7.797008	comment	4.0	11.0	1500455391	-10.8300495
14849365	"One rules of thumb is ""one team one "	"One rules of thumb is ""one team one service"".  If you have multiple teams working on a service then it might start making sense to migrate to multiple microservices."	JamesBarney	9.7829275	-7.3608966	comment	4.0	13.5	1501001426	-13.816809
14973285	Hardest part isn't the language. Swi	Hardest part isn't the language. Swift is among the best languages you can get today. IOS sdk, on the other hand, has become a bit of a mess, due largely to the pace at which the field is moving ( although not as bad as android).Stanford courses are the best y	bsaul	10.486388	-7.7741423	comment	4.0	27.0	1502310618	-10.825954
14973649	>> For ios : look at the number of v	>> For ios : look at the number of various apis you can use to do widget positionning and animations : calayer, uiview spring n struts, constraints, physic based, and yet none compose well with each other. IOS also doesn't have any good tech for offline storag	k-mcgrady	10.501248	-7.7192354	comment	4.0	14.5	1502313031	-10.792885
15042256	As someone who doesn't develop for t	As someone who doesn't develop for the Apple ecosystem, I can't quite find one place that articulates well what the Swift development philosophy is and what it brings to the table besides just being modern language with shims for interacting with legacy Apple 	jzelinskie	10.470323	-7.8265786	comment	4.0	23.5	1503015004	-10.892138
15104188	This unfortunately just isn't possib	"This unfortunately just isn't possible if you want your research to be able to be read in the future. ""download?"" from where? Links rot. ""run?"" which language, compiler, cpu architecture? Dependencies? Code bit rots. And data formats become unreadable - unless"	cjbillington	10.628576	-7.3475227	comment	4.0	12.0	1503724669	8.857074
15233846	Getting Started with Swift on Window	Getting Started with Swift on Windows	hellofunk	10.449236	-7.818762	story	4.0	86.0	1505257666	-10.880373
15265213	This has been around for a while. Ho	This has been around for a while. However, it's clear to most people now that Python/Scipy is a better solution, rather than simply trying to copy Matlab. Python as a language is far, far better than Matlab. And the ecosystem has matured a lot, to the point th	joelthelion	10.229728	-7.7667446	comment	4.0	15.0	1505577741	10.452471
15290402	If I already have swift-3 and Xcode 	If I already have swift-3 and Xcode 8, how do I install only swift-4?	hasenj	10.45653	-7.822724	comment	4.0	10.5	1505875897	-10.844004
15290447	They implemented what looks like the	They implemented what looks like the Rust ownership model: SE-0176 Enforce Exclusive Access to Memory (https://github.com/apple/swift-evolution/blob/master/proposa...), but I'm having a hard time understanding the proposal, can anyone shed some light on this?	sinhpham	10.641236	-7.872112	comment	4.0	27.0	1505876429	-10.8150015
15359863	I really tried couple of times to us	I really tried couple of times to use swift in production. One of my MAS apps is pure swift. However I can't force myself to like it. Maybe I am missing some brilliant part of it that I missed but I just can't love it.	binaryapparatus	10.463608	-7.829808	comment	4.0	16.0	1506625482	-10.846144
15391832	> However, it was never meant to all	"> However, it was never meant to allow compiler to assume ""ok, I can see your code is totally broken, so let's break it more, cause you don't care anyway"".That's nevertheless how compiler writers are interpreting the standard right now.  Take integer overflow "	loup-vaillant	10.6387	-7.0544066	comment	4.0	12.5	1507032692	-6.996027
15421735	For people coming from C/C++/ObjC, c	"For people coming from C/C++/ObjC, certain things in Swift can take some time to get used to, e.g.  if case .Success(let person) = personResult { ... } 

My first thought when I saw this was, ""only a mother could love this syntax"", but later you come to apprec"	Koshkin	10.594207	-7.7868996	comment	4.0	22.0	1507340098	-10.82443
15422065	The real point that I think this art	The real point that I think this article misses is framework development. Swift still has not achieved ABI compatibility. If you are using an iOS device, very likely framework code I have written in the past few years is running inside one of the many apps you	greensamuelm	10.46261	-7.8018947	comment	4.0	10.5	1507345781	-10.824002
15472426	It is ugly because 1) 1-based indexi	It is ugly because 1) 1-based indexing and x-based indexing are treated differently; 2) x-based indexing has to use more complex syntax, which in effect discourages the use of non-1 indexing; 3) this strategy sets potential pitfalls (e.g. implementing length a	attractivechaos	10.247887	-7.8960166	comment	4.0	13.5	1507993072	10.649473
15477643	As someone working on an Exascale pr	As someone working on an Exascale project for electronic structure calculations, I have a theory about the longevity of Fortran. It's the fact that many of these codes were started years ago and the people who have the credentials and ability to get funding fo	quadruplebond	10.475996	-7.4057555	comment	4.0	16.5	1508082924	8.842817
15477870	A lot of the arguments in this post 	"A lot of the arguments in this post can simply be rebutted with basic abstractions. Things like ""Dynamically allocating and deallocating ... 2D array"" is easy in C++. You could easily have someone define a MathArray<Type, Rows, Columns> class and turn this mes"	gravypod	10.653848	-7.2857103	comment	4.0	10.5	1508085490	-7.003109
15477955	"His response was ""You could do that "	"His response was ""You could do that and it would probably be enough to earn your PhD, since it'll take you at least three years. But I suspect you'll want to work on something else during that time"".as someone who had contact with that codebase, do you have an"	serf	10.470198	-7.403587	comment	4.0	16.5	1508086681	8.845422
15478259	> Now you need to do a follow on stu	> Now you need to do a follow on study to see how much science the 'rival' group does with a more modern codebase than your 'legacy' group does.I would guess that a C++ codebase written by PhD students, not by seasoned C++ experts, is more complicated and much	sampo	10.474533	-7.395563	comment	4.0	12.5	1508090788	8.8039875
15561301	Apart from a diminishing population 	Apart from a diminishing population of old farts and a clutch of national labs and universities that Mathworks keeps well greased, is MATLAB even relevant anymore ?	srean	10.2044115	-7.7866654	comment	4.0	11.5	1509040290	10.458581
15566473	> This is in part because of the wor	"> This is in part because of the work by Google on the NVPTX LLVM back-end.I'm one of the maintainers at Google of the LLVM NVPTX backend.  Happy to answer questions about it.As background, Nvidia's CUDA (""CUDA C++?"") compiler, nvcc, uses a fork of LLVM as its"	jlebar	10.140867	-7.9740553	comment	4.0	13.0	1509090828	10.646406
15673526	Assessing the Ada Language for Audio	Assessing the Ada Language for Audio Applications	gusthoff	10.641559	-7.7134137	story	4.0	72.0	1510352165	-5.1244583
15688802	At this point in time, Fortran is ba	At this point in time, Fortran is basically a domain specific language, analogously to using regular expressions for text processing. It is a nightmare to write full applications in it. The f2py approach to Fortran is undervalued IMHO, as Fortran is brilliant 	pletnes	10.4685335	-7.409832	comment	4.0	15.5	1510598281	8.821706
15700956	Perhaps this is the start of moving 	"Perhaps this is the start of moving Android Apps to Swift.Which, per rumor was considered last year:""About the time Swift was going open source, representatives for three major brands — Google, Facebook and Uber — were at a meeting in London discussing the new"	nawtacawp	10.482687	-7.8039947	comment	4.0	13.5	1510711656	-10.87053
17336490	And it is fast.  I clocked it at ove	And it is fast.  I clocked it at over 200K lines/sec.  Swift, on a typical project, will do around 20.  Not K, just lines/sec.Of course the C code was a lot simpler, but still...	mpweiher	10.496489	-7.6206074	comment	4.0	15.5	1529306721	6.6386337
17360498	I haven’t seen a good explanation of	I haven’t seen a good explanation of the arguments against this kind of thing. Who doesn’t want to fix the UB weirdness? Are there really many people worried it will completely break optimization? If so I’d love to hear about it.Even if you don’t agree with th	iainmerrick	10.657533	-7.1281276	comment	4.0	23.0	1529534286	-7.1093373
17505000	I’ve been tracking the comments and 	I’ve been tracking the comments and my sense is that almost no one here believes the business domain drives the technical solution.Microservices, when constructed from a well-designed model, provides a level of agility I’ve never seen in 33 years of software d	ChicagoDave	9.85206	-7.330089	comment	4.0	17.5	1531293091	-13.767992
17612911	Ada is a great language, I learned i	Ada is a great language, I learned it and planned on using it for programs and libraries that need performance. I gave up because of the licensing situation.Unless you plan to write 100% GPL software it's pointless. The FSF version of GNAT under mGPL license i	jonathanstrange	10.653093	-7.7035737	comment	4.0	11.0	1532553484	-5.2226076
17545529	SwiftTLS – A TLS implementation in S	SwiftTLS – A TLS implementation in Swift	andreasley	10.478619	-7.8237863	story	4.0	68.0	1531778406	-10.849116
17610762	A learning platform to teach the Ada	A learning platform to teach the Ada and SPARK programming languages	xeeeeeeeeeeenu	10.671814	-7.734233	story	4.0	81.0	1532537777	-5.0161023
17692074	Wow, Heisen-Swift, where the Heisenb	"Wow, Heisen-Swift, where the Heisenbugs are in the language specification!What an object is, which is roughly equivalent to its observed behavior, should never depend on how it is declared.   let greeter = LazyGreeter()
   let greeter1: Greeter = greeter
   pr"	mpweiher	10.658933	-7.7628007	comment	4.0	20.5	1533486792	-10.789295
17734830	Checking the return of malloc() for 	Checking the return of malloc() for NULL is not currently considered good practice, because (a) on most platforms malloc is guaranteed not to return NULL, even if the system is out of memory, and (b) on the few platforms where malloc can return NULL, handling 	jimrandomh	10.653551	-7.1357965	comment	4.0	15.0	1533919291	8.881967
17739468	Swift is nice, although it’s too clo	Swift is nice, although it’s too close to objc.I think it’s time for Apple (and Google) to embrace JavaScript as the app development language.	sheeshkebab	10.47885	-7.800336	comment	4.0	16.5	1533991489	-10.866415
17739630	That’s why LLVM is such a great idea	That’s why LLVM is such a great idea - any llvm language can interoperate with any other, within the same binary, with no overhead. Apple isn’t throwing away their C code any time soon either. LLVM provides a smooth upgrade path via mixed language binaries.I s	josephg	10.475211	-7.7986336	comment	4.0	11.5	1533994886	-10.779709
17740551	There's a tremendous amount of value	There's a tremendous amount of value, in any creative task, in being able to sketch out ideas quickly. The less time you spend seeing if the shape of the thing you're making is broadly okay, the more shapes you will be able to try, and the higher the chance th	wool_gather	10.518348	-7.830418	comment	4.0	11.5	1534007719	-10.843273
17761467	Swift should not be the future of iO	Swift should not be the future of iOS, and why TypeScript should.	sbjs	10.529443	-7.807187	story	4.0	7.0	1534277590	8.989872
17820806	Microservices from a startup perspec	Microservices from a startup perspective: don't.Microservices are great. They are also complex, expensive and require much higher expertise.Start with a well groomed monolith that is well modularized then split it when scale (user scale, team scale) makes sens	vorpalhex	9.780268	-7.354958	comment	4.0	20.5	1534962676	-13.822383
17863364	How good is symbolic math in compari	How good is symbolic math in comparison to Mathematica?	vasili111	10.302028	-7.1603117	comment	4.0	11.5	1535494055	9.858365
21038277	I have actually worked on a system w	I have actually worked on a system where malloc() was forbidden. In fact it always returned null. Buffers were all statically allocated and stack usage was kept to a minimum (it was only a few kB anyways).The software was shipped with a memory map file so you 	GuB-42	10.6629925	-7.1092596	comment	4.0	18.5	1569104886	8.873663
21038735	Why even define a malloc() in this e	Why even define a malloc() in this environment if it always returns NULL?	loeg	10.656865	-7.1288085	comment	4.0	13.5	1569110703	8.878479
21066757	Is it really dead? In other words ar	Is it really dead? In other words are there examples of applications you can build with Swift that you simply can’t in Objective C? I haven’t built iOS apps since before Swift existed so I’m genuinely curious. If I got back into it I’d obviously prefer Objecti	ryandrake	10.450662	-7.780448	comment	4.0	11.0	1569375957	5.5789566
21085140	Pure Swift now.It wasn't viable as v	Pure Swift now.It wasn't viable as v1, but now it's solid & clean.Seems like it was a good opportunity to take a well understood language (C/C++/Obj-C) and after 30 years rebuild it ground-up into what it should be. Some constructs & workarounds just weren't g	ctdonath	10.486731	-7.8183165	comment	4.0	31.5	1569529603	-10.829283
21087786	That verbosity isn't even a big deal	That verbosity isn't even a big deal as you write once, but read many times.One of the first things about Swift that I fell in love with was the difference between things like DrawRect(10, 20, 30, 40) in languages like C#, and DrawRect(at: origin, width: 30, h	Scapeghost	10.504795	-7.8171277	comment	4.0	18.5	1569550209	-10.829982
21128946	I have to ask. Isn't this just micro	I have to ask. Isn't this just microservices ? Also isn't this terrible for latency and debugging ?	mav3rick	9.78479	-7.349666	comment	4.0	11.0	1569954689	-13.816571
21286210	Compiler errors in SwiftUI have been	Compiler errors in SwiftUI have been especially unhelpful. Is this something that this effort is intended to improve?	pohl	10.488842	-7.820664	comment	4.0	12.5	1571345170	-10.828599
21305209	Stack is relevant though. If you nee	Stack is relevant though. If you need a front-end architect, and you hire someone with 10+ years Java experience, they aren't going to know the first thing about web accessibility, polyfills, bundlers, cross-browser support, etc. The domains of implementing mi	JMTQp8lwXL	9.839876	-7.335014	comment	4.0	24.5	1571589531	-13.808632
21307630	It's interesting to me that they are	It's interesting to me that they are going down this path instead of the microservices path.  This seems like something ripe for slowly breaking down into microservices.Someone made a change that took down production because of non-deterministic outcomes?  How	jedberg	9.785153	-7.359228	comment	4.0	12.0	1571609922	-13.8201475
21216388	Swift compiler driver rewritten in S	Swift compiler driver rewritten in Swift	rvz	10.474479	-7.8265824	story	4.0	115.0	1570724848	-10.83894
21347151	Insert any framework in place of Swi	Insert any framework in place of SwiftUI. You're describing Qt, essentially.The approach has been tried, and succeeded to some degree. But the web is the only app where cross-platform is the default, and it's truly hard to avoid it. Even if the widgets all loo	scrollaway	10.462825	-7.812394	comment	4.0	13.0	1571939150	-10.844893
21399301	Fortran from the 1980s is still supp	Fortran from the 1980s is still supported...	sadfklsjlkjwt	10.452627	-7.40117	comment	4.0	10.5	1572452058	8.77893
21456876	Maybe I'm just dumb, but there seem 	Maybe I'm just dumb, but there seem to be arcane tricks that SwiftUI's native types can do but I can't replicate in my own types.	Razengan	10.5077	-7.826295	comment	4.0	19.0	1572989152	-10.851993
21378148	Show HN: Cortex – Living Documentati	Show HN: Cortex – Living Documentation for your Microservice Architecture	anishdhar	9.803573	-7.3611746	story	4.0	20.0	1572278655	10.2170725
21478570	Thanks, it is a well written article	Thanks, it is a well written article. The only part which tarnishes an otherwise excellent article is the language comparisons portion. Such things are best avoided as they almost always reflect the biases of or where the author has the most experience.As you 	Cybiote	10.267208	-7.969177	comment	4.0	19.0	1573169833	-7.187611
21479727	Does anyone use Swift (in production	Does anyone use Swift (in production) for backend services not related at all to the Apple ecosystem? It seems like a better Golang to me, but the tooling space only targets Apple stuff.	zelly	10.491242	-7.8404546	comment	4.0	13.5	1573183216	-10.850268
21487347	`malloc` won't fail, right?	`malloc` won't fail, right?	benburleson	10.653989	-7.1189227	comment	4.0	12.0	1573250666	8.872662
21490022	I really enjoy Swift's philosophy of	"I really enjoy Swift's philosophy of setting up higher-level abstractions, and then pirouetting under the hood to get performance near the ballpark of C++ and family. I'm a big believer in ""Just Works pretty-fast by default, optimal by deep-dive"".Too bad Apple"	_bxg1	10.486493	-7.821314	comment	4.0	16.5	1573281530	-10.838303
21490933	"From the article:""... Swift's Stabil"	"From the article:""... Swift's Stabilized ABIs on Apple platforms ... are not actually properly documented, xcode just implements it and the devs will do their best not to break it. Apple is not opposed to documenting it, it's just a lot of work and shipping wa"	chmaynard	10.4582	-7.783297	comment	4.0	22.0	1573299584	-10.822181
21492107	You are right, that for most use cas	You are right, that for most use cases using microservices isn't necessary, but it doesn't mean they can't be still useful. Although there is some added cost in the beginning, providing separation of concerns can be quite useful for security and in later phase	Hitton	9.780699	-7.3639345	comment	4.0	12.0	1573313857	-13.820283
21492088	Micro services don't only provide ho	Micro services don't only provide horizontal scaling but also operational scaling, including risk of deployments, downtime, release coordination and contributions from multiple workstreams or teams.Sometimes applications with only 100s of users need microservi	alttab	9.786416	-7.3553605	comment	4.0	11.0	1573313694	-13.830566
21522695	Interesting detail about Square that	"Interesting detail about Square that I learnt on Twitter shortly after SwiftUI was launched...Square sold iPads with their software on as ""appliances"", so they can't deprecate them on a schedule like most software. For this reason the Square iOS codebase (whic"	danpalmer	10.449724	-7.821945	comment	4.0	12.0	1573641519	-10.845185
21615393	Symbolic Maths in Python (2017)	Symbolic Maths in Python (2017)	vyuh	10.418777	-7.170542	story	4.0	90.0	1574531641	9.865037
21660337	Does malloc lazily create the backin	Does malloc lazily create the backing pages for an allocation on Linux? (2009)	tzhenghao	10.634412	-7.035117	story	4.0	38.0	1574976965	8.803392
39095299	I've seen the exact opposite - many 	I've seen the exact opposite - many projects are going back towards monolithic structures and then decoupling a minority of components that need to horizontally scale.	teknopurge	9.8291	-7.2356677	comment	4.0	12.0	1705956871	1.9877818
39141197	Understanding Mesh Allocator	Understanding Mesh Allocator	signa11	10.667637	-7.216612	story	4.0	70.0	1706266450	8.869231
39266087	It amazes me that with all the focus	It amazes me that with all the focus on memory safety, most PLs still don't handle integer overflow sensibly by default: you either get guaranteed wraparound (which silently gives wrong values), or straight up undefined behavior as in C and C++. The latter won	int_19h	10.604804	-7.0661345	comment	4.0	16.5	1707162372	-6.988998
39276164	On a practical note if privacy and s	On a practical note if privacy and security is so important to Swift she could easily use a fractional program to rotate tail and serial numbers.Not sure why I find this so grating but the idea that an aircraft using the public commons, funded by taxpayers,  a	sklargh	10.486904	-7.839502	comment	4.0	12.5	1707236365	-10.80795
39284471	> should be a trap representationIn 	> should be a trap representationIn a new, green field programming language design: maybe.You will have FFI interop issues: what if some foreign gives you such a value, which is correct in its domain. It will have to be specially handled and widened/promoted t	kazinator	10.66094	-7.03435	comment	4.0	13.0	1707279792	-6.9562287
39218617	Ask HN: Are Mathematica, Sage and ot	Ask HN: Are Mathematica, Sage and other algebra software worth it?	in9	10.37608	-7.1482415	story	4.0	12.0	1706808725	9.906468
39337511	Ask HN: Learning Swift as an Existin	Ask HN: Learning Swift as an Existing Programmer?	solardev	10.471924	-7.7818475	story	4.0	2.0	1707678093	-10.830143
32894273	I think it's the optimization the co	I think it's the optimization the compiler writers insist on that developers absolutely do not want. When the compiler detects UB any code that depends on it can be 'safely' deleted.It's the sort of arrogant attitude that's behind driving people away from C/C+	Gibbon1	10.672481	-7.1588774	comment	4.0	13.0	1663561556	-7.0444736
32921124	I think it’s a great idea, except th	I think it’s a great idea, except that instead of BFF, we should call that layer “a view”. The microservices can be then called “controllers and models”	nomdep	9.817136	-7.3432517	comment	4.0	10.5	1663738073	-13.828558
32858508	Swift was poised to replace Python. 	Swift was poised to replace Python. Then it tanked	rbanffy	10.467097	-7.84093	story	4.0	2.0	1663276261	-10.841532
31776426	Fortran Intrinsics (2018)	Fortran Intrinsics (2018)	Bostonian	10.453675	-7.407128	story	4.0	39.0	1655463372	8.7809305
31938203	God I would love for Unity to offer 	God I would love for Unity to offer a Swift (no GC, fully type safe, compiled, fast) API with a rethought API surface. And have only one renderer to choose from instead of 3 with all different features.	wilg	10.465557	-7.811092	comment	4.0	13.5	1656621191	-10.797802
31961248	Very difficult to do that in practic	Very difficult to do that in practice, because there’s currently no way to bridge C++ directly to Swift. You could bridge it via C, but any reasonable implementation would have to severely limit the amount of direct Swift interaction with the core code, or you	KerrAvon	10.490385	-7.804633	comment	4.0	11.0	1656786853	-10.804575
31962800	> When SwiftUI works it is a nigh-ma	> When SwiftUI works it is a nigh-magical delight, but when it behaves unexpectedly or when behavior outside the prescribed path is desired, it can be difficult to understand and work around its limitations.The author is being kind. Once outside the prescribed	tambourine_man	10.477054	-7.825701	comment	4.0	13.0	1656798755	-10.844843
31969406	I wrote a short mostly-AI book on Sw	I wrote a short mostly-AI book on Swift and Core ML last year and the last example was an app using SwiftUI (the example is in Apple's App Store). I was pleasantly surprised how straightforward it was to use SwiftUI. I read the Apple docs and spent about $10 f	mark_l_watson	10.446077	-7.8271723	comment	4.0	15.0	1656869692	-10.830192
32001261	A lot of those steps just seem like 	A lot of those steps just seem like good engineering. (I personally prefer modular monoliths over microservices though, in all but very few cases.)	Akronymus	9.786103	-7.361321	comment	4.0	13.5	1657116801	-13.809854
32002862	If you have a large engineering team	If you have a large engineering team (hundreds+ devs) with a large codebase then having a monolith can slow down developer velocity.There’s massive scope with the monolith, build tools start to strain, etc	LewisVerstappen	9.830028	-7.263619	comment	4.0	19.5	1657123174	-13.803088
31946419	Fermyon wants to reinvent the way pr	Fermyon wants to reinvent the way programmers develop microservices	kiyanwang	9.781783	-7.359041	story	4.0	14.0	1656683690	-13.805167
39441716	Services, or even microservices, are	Services, or even microservices, are more of a strategy to allow teams to scale than services or products to scale. I think thats one of the biggest misconceptions for engineers. On the other end you have the monorepo crew, who are doing it for the same reason	scient	9.784295	-7.3579636	comment	4.0	22.5	1708439205	-13.758897
39441779	Microservices can help with performa	Microservices can help with performance by splitting off performance critical pieces and allowing you to rewrite in a different stack or language (Rust or go instead of Ruby or Python)But yeah, they also tend to explode complexity	nijave	9.799667	-7.3543897	comment	4.0	13.5	1708439574	-13.79331
39443413	absolutely the same here.the problem	absolutely the same here.the problem with Swift is that it is a systems programming language and not an app-development language. far to cumbersome, complicated and unproductive for writing apps.	dinkblam	10.474661	-7.8205404	comment	4.0	11.0	1708447201	-10.850199
39596116	MongoDB's BSON library calls abort()	MongoDB's BSON library calls abort() on malloc failure because they can't be bothered to handle OOM gracefully.	kevin_thibedeau	10.639218	-7.08839	comment	4.0	12.0	1709586446	8.914233
39634248	Can anybody who knows or understands	Can anybody who knows or understands better, how applicable is this new technique to being used in a GEMM implementation in a BLAS library in mainstream numerical libraries?	sevagh	10.483919	-7.1431704	comment	4.0	11.0	1709843510	8.879646
32083053	If Adacore had published a full feat	If Adacore had published a full featured free compiler for students/universities by the time Ada 95 standard was published, I am sure that Ada could have occupied the space C++ takes today.Mostly what Ada lacks is not the features but the comunity effect, we s	DoingIsLearning	10.659163	-7.733515	comment	4.0	12.5	1657721784	-5.1364536
32100957	Yes, I know C# reasonably well. I us	Yes, I know C# reasonably well. I use it in Unity for game development, where it is the only option.C# is better than many alternatives, but Swift is simply a better language in every regard.C#'s GC is a constant issue for games, and it makes using things like	wilg	10.522067	-7.795209	comment	4.0	11.0	1657829933	-10.834731
32101991	Ironically, I think Brad Cox had som	Ironically, I think Brad Cox had something like this in mind, after coming up with Objective C. Or at least, pluggable components [1]I wonder what the threat model would be? Injectable binaries seem like a decent attack vector. But, if we're talking 2040, mayb	musesum	10.517231	-7.6329274	comment	4.0	16.5	1657836206	5.680751
32101009	Hot Reloading in Swift	Hot Reloading in Swift	mgrayson	10.521613	-7.7484784	story	4.0	99.0	1657830331	-10.890536
32245563	I am old enough that I started with 	I am old enough that I started with Purify and I used Valgrind starting from the version 1.0, because Purify was commercial and Solaris only. It saved my behind multiple multiple times.	mynegation	10.664329	-7.0360613	comment	4.0	12.0	1658880406	8.766125
32252009	Same. I keep hearing that people hav	Same. I keep hearing that people have had bad experiences with microservices, but I'm not sure what those bad experiences are. I certainly don't relate to them. We had a monolith, and it devolved into a mess--managers would insist on people taking dependencies	throwaway894345	9.7875	-7.3518596	comment	4.0	17.0	1658937180	-13.809047
32264384	Not sure what this means, but I'm le	Not sure what this means, but I'm learning Swift and SwiftUI right now, since i'm in the apple eco system and hoping i've made the right choice, because my time is fairly limited, being an adult in my late 30's and having a full time job, it does seem a bit of	ChildOfChaos	10.448925	-7.8191686	comment	4.0	12.5	1659016809	-10.848304
32348323	A seal walks into a bar, hops on a c	"A seal walks into a bar, hops on a chair and orders a beer.Bar tender: ""A talking seal! I've never seen anything like this. You should go work in a circus!""Seal: ""Why? Does the circus need microservice architects?"""	fleddr	9.780339	-7.356876	comment	4.0	11.0	1659647424	-13.774735
32401137	I'm surprised that they aren't makin	"I'm surprised that they aren't making a bigger effort for Linux support.
Last time I tried swift on linux it wasn't even packaged by ubuntu.If you `apt install swift` you get some object store tool."	humanwhosits	10.464013	-7.8236837	comment	4.0	15.0	1660066795	-10.843443
32429869	Objective-C was doing sufficiently-f	Objective-C was doing sufficiently-fast UI updates for it to run well on iPhones 10 years ago, while relying on objc_msgsend, which is _much_ slower than a virtual function call or even a Qt signal.You wouldn't want to use ObjC's message sending OR Qt's signal	msbarnett	10.500586	-7.6877522	comment	4.0	11.0	1660242682	5.7328787
32457253	Revirt – Virtualization on Redox OS	Revirt – Virtualization on Redox OS	cassepipe	10.651649	-7.7477765	story	4.0	54.0	1660462243	-9.37849
32492613	This looks like not a reskin of an e	This looks like not a reskin of an existing FreeBSD or Linux windows system, but an actual reimplementation of macOS. Very interesting if they can pull it off!I wonder though, why start with old Objective-C cocoa APIs instead of Swift?	adastra22	10.495196	-7.753816	comment	4.0	23.0	1660713363	-9.003486
32493508	“Objective-C is done, time to move o	“Objective-C is done, time to move on” … except for Apple themselves, where we still see a steep rise in ObjC year over year with no visible sign of slowing that incline.Likewise for AppKit.Apple, the “do as we say, not as we do” company.	LeoNatan25	10.475987	-7.7396364	comment	4.0	13.5	1660722547	5.675795
32495316	> (easy to do if you never, ever mal	> (easy to do if you never, ever malloc)Not an embedded systems developer so an honest question. What do you do instead of malloc? Have a large array on stack and manage memory within that manually?	ctrlmeta	10.671537	-7.0880294	comment	4.0	12.5	1660739127	8.79959
22002536	In this alternative universe, Object	In this alternative universe, Objective-C would have died, Swift would never happened, and C++ would rule across desktop and mobile OSes (thinking only of Windows, BeOS X, Symbian, Windows CE and what might have been BeOS based iOS).Also POSIX would be even le	pjmlp	10.483531	-7.7538114	comment	4.0	14.5	1578587373	4.312719
22120784	Fortran actually isn't a static lang	Fortran actually isn't a static language. It's evolved over time. The last significant revision according to wikipedia is just over a year old. The beauty and horror of it probably depends which era of it you're looking at.	6gvONxR4sf7o	10.475188	-7.3972406	comment	4.0	22.0	1579719709	8.825103
22121138	Lots of number crunching code relies	Lots of number crunching code relies on Fortran libraries even today.Install numpy, it will pull in Fortran stuff.	throwaway2048	10.495192	-7.3665957	comment	4.0	15.0	1579721649	8.868076
22121681	Numpy actually explicitly doesn't ne	Numpy actually explicitly doesn't need fortran. It will use some fortran lapack libraries for optimizations if they're present, but it doesn't depend on fortran at all.Scipy is a different story.The need for a fortran compiler was a big part of the original ra	jofer	10.528123	-7.4121346	comment	4.0	13.0	1579725039	9.037288
22163418	Here,https://swift.org/getting-start	"Here,https://swift.org/getting-started/#using-the-repl> On macOS    1> import Darwin
    2> arc4random_uniform(10)
    $R0: UInt32 = 4

> On Linux    1> import Glibc
    2> random() % 10
    $R0: Int32 = 4

Any of the languages that Swift is competing against,"	pjmlp	10.468265	-7.827621	comment	4.0	16.0	1580156742	-10.832163
22197339	> Most people think a micro-service 	"> Most people think a micro-service architecture is a panacea because ""look at how simple X is,"" but it's not that simple. It's now a distributed system, and very likely, it's a the worst-of-the-worst a distributed monolith. Distributed system are hard, I know"	rumanator	9.790427	-7.3571224	comment	4.0	17.0	1580428319	-13.821301
22197455	I don't want advocate one way or ano	I don't want advocate one way or another (micro vs. monoliths) because tomato tomato. However here are a few arguments in defense of microservices regarding these three signs you commented:1. Microservices do not have some inherent property of having to duplic	yes_man	9.78551	-7.35953	comment	4.0	11.5	1580429132	-13.826186
22201618	Putting it in a microservice should 	Putting it in a microservice should get around that, right?	gruez	9.782973	-7.3599024	comment	4.0	10.5	1580478814	-13.833136
22281921	I am not a compiler expert but I won	I am not a compiler expert but I wonder if FORTRAN will lose its speed advantages  it still supposedly has if it goes through LLVM.	Ididntdothis	10.460669	-7.367582	comment	4.0	17.5	1581253926	-8.1659155
22289983	though, Julia is faster than Python.	though, Julia is faster than Python. Does anyone mind explaining why Python can't have a JIT ?	dzonga	10.267428	-7.9375253	comment	4.0	11.5	1581349086	10.740617
35685734	A monolith doesn’t have to be one gi	A monolith doesn’t have to be one giant ball of mud.  It can be discrete, well-factored services all by itself.  I recently worked on decomposing a monolith into micro services, but it felt like we were just spreading one big problem over multiple services.  A	devoutsalsa	9.812719	-7.366948	comment	4.0	11.5	1682331958	-13.825032
35751420	Can Fortran survive another 15 years	Can Fortran survive another 15 years?	zaikunzhang	10.444399	-7.4199	story	4.0	1.0	1682760198	8.840523
35695864	Evaluation of risks associated with 	Evaluation of risks associated with relying on Fortran for the next 15 years	zaikunzhang	10.455315	-7.420641	story	4.0	4.0	1682389513	8.818336
35801539	I would expect that most HPC program	I would expect that most HPC programmers can learn Fortran or Cobol in a week or two. They are reasonably small languages, and Fortran would be sufficiently familiar to people who have both C/C++ with Matlab/Julia experience (typical for HPC). Would it be more	krastanov	10.475482	-7.401757	comment	4.0	12.0	1683116790	8.856751
35801552	None of this is particularly surpris	None of this is particularly surprising. I think there are a multitude of factors:* Universities are teaching Python more than ever. When I started my undergrad in Physics everyone took C++, by the time I graduated it was all Python.* Academia as a career trac	rpep	10.506223	-7.3974676	comment	4.0	15.5	1683116901	8.846136
35812363	My team owns an API monolith that ho	My team owns an API monolith that hosts several completely unrelated endpoints. I keep thinking this would be a good candidate for breaking into microservices, but I do wonder if I'm buying into the hype.	cglong	9.787999	-7.357398	comment	4.0	11.5	1683185130	-13.822459
35829114	> The minimum requirement for a lang	> The minimum requirement for a language to take off: first class Windows support.Swift is doing quite well, and it didn’t need Windows support to drive adoption.	latexr	10.463102	-7.831949	comment	4.0	13.5	1683294401	-10.846769
35837582	> Okay, so your microservices are ea	> Okay, so your microservices are each very simple, but that made the interactions and resource provisioning very complex. What was the net gain?The net gain was composability of microservices, distribution of computing resources, and the ability to marshall o	sublinear	9.78359	-7.3560553	comment	4.0	16.5	1683342539	-13.839408
35837456	I think the first step toward sanity	I think the first step toward sanity is to stop factoring services by team  sizes - “we have 100 people so require 20 microservices”.Instead, factor services along natural fault lines. These are areas in the solution that scale differently from other parts and	osigurdson	9.794958	-7.3453636	comment	4.0	20.5	1683340994	-13.810453
35837769	I'm convinced that micro-service hel	I'm convinced that micro-service hell happens when the primary app calcifies and becomes too difficult to modify.	Spivak	9.761559	-7.327039	comment	4.0	12.0	1683344650	-13.79482
35853522	It’s interesting that there are folk	It’s interesting that there are folks who think there must be only one architecture to be the best in all cases.It reeks of inexperience and being highly opinionated followers of popular opinion instead of playing with both personally.So few projects actually 	j45	9.784173	-7.3520627	comment	4.0	14.5	1683479842	-13.81498
35918470	Yesterday, I had a sticky Swift/iOS 	Yesterday, I had a sticky Swift/iOS issue.Checked SO, Apple Discussions, etc. Then, on a whim, I asked ChatGPT for a suggestion.> They are also prone to confident assertions of statements that are blatantly false.It suggested something that referenced a nonexi	ChrisMarshallNY	10.60155	-7.7914677	comment	4.0	11.0	1683909073	-10.816712
35962383	How fast ? I gather, for example, th	How fast ? I gather, for example, that Intel's Fortran is a frontend to LLVM. So the speed of that Fortran can't be much different than anything compiled by LLVM such as rust or C. Correct ?	wiz21c	10.651254	-7.1424155	comment	4.0	16.0	1684247334	-7.972439
35976371	Indeed DataFrames.jl isn't and won't	Indeed DataFrames.jl isn't and won't be the fastest way to do many things. It makes a lot of trade offs in performance for flexibility. The columns of the dataframe can be any indexable array, so while most examples use 64-bit floating point numbers, strings, 	ChrisRackauckas	10.238284	-7.9674225	comment	4.0	12.0	1684336070	10.630848
35993622	Any resources for learning Fortran i	"Any resources for learning Fortran in 202X that don't bother going over the old cruft?Last time I looked (admittedly, years ago), most resources seemed to be in the vein of ""here's Fortran 1990, and once you've learned that here are a few chapters on F03 and F"	nvy	10.458477	-7.4066243	comment	4.0	10.5	1684441615	8.787926
35995633	The Zig compiler is significantly li	The Zig compiler is significantly limited in performance by the llvm backend. Even with a different backend, I also suspect that the language is already complex enough that it is difficult to write a genuinely fast compiler (by which I mean a compiler that can	norir	10.664445	-7.241894	comment	4.0	11.5	1684451725	12.518145
36152055	One annoying thing I ran into when t	One annoying thing I ran into when trying zig is they don't distribute debs any more for Debian distributions. They just tell  you to use a snap. I don't have snap, and don't want it.Compiling it requires the latest llvm toolchian (16), which is only realistic	ok123456	10.634425	-7.359907	comment	4.0	10.5	1685631809	12.536045
36216631	One of the things I like about CoreD	One of the things I like about CoreData is that all the relationships and entities are defined in one file, and its easier to browse the history of that schema to see how the models evolved. One of the things I dislike though is that it doesn't interop well wi	seanalltogether	10.503141	-7.8115344	comment	4.0	17.0	1686074187	-10.861611
36210986	Introduction to the ZX-Calculus	Introduction to the ZX-Calculus	EvgeniyZh	10.62483	-7.392494	story	4.0	62.0	1686050227	12.348873
36216550	What’s New in Swift 5.9?	What’s New in Swift 5.9?	Someone	10.460552	-7.8333817	story	4.0	33.0	1686073818	-10.846515
36291102	I'm confused about the comparison he	I'm confused about the comparison here. I've never heard of Mojo before, but reading this and all the discussion of the main languages on Apple's platform, you'd think that Mojo was somehow an alternative for development on iOS or macOS, replacing Objective-C 	jb1991	10.608933	-7.718199	comment	4.0	10.5	1686564973	10.730551
36476677	I’ve written a lot of Objective C.It	I’ve written a lot of Objective C.It is by far the worst language I’ve used professionally.While I don’t love Swift it is still a breath of fresh air compared to ObjC.	orasis	10.474656	-7.78874	comment	4.0	18.0	1687763768	5.6164474
36477170	Objective-C is probably the worst la	Objective-C is probably the worst language I’ve ever encountered (speaking as a compiler guy).A language where you can’t prove anything is dead, where you can’t make any changes to the runtime to deal with the dynamic semantics is not great.ObjC did one neat t	zer0zzz	10.492192	-7.731557	comment	4.0	21.5	1687768096	5.653174
28694544	Modern C has the restrict keyword fo	Modern C has the restrict keyword for that. There isn't any competitive advantage left for Fortran over C or C++, the only reason why Fortran is still part of the modern numeric stack is that BLAS, LAPACK, QUADPACK and friends run the freaking world and nobody	qsort	10.499979	-7.37824	comment	4.0	12.0	1632927537	8.816291
23413669	LLVM is one of the most critical pie	LLVM is one of the most critical pieces of infrastructure out there. And yet you can modify master without actually passing any tests.I build LLVM from source a lot, and master not even building because somebody made a change that doesn't even compiler is asto	fluffything	10.494878	-7.0940127	comment	4.0	20.0	1591255560	-8.820414
23447097	One time, I had to maintain C code T	One time, I had to maintain C code That somebody had #define'd to look like FORTRAN. It was impressive.	russfink	10.477813	-7.393304	comment	4.0	12.5	1591535679	8.801379
23450158	A major benefit to microservices (ov	A major benefit to microservices (over monoliths) that I haven’t seen mentioned yet is testability. I find it hard, or improbable to achieve a healthy Pyramid of Tests on a large monolith.For example: a high level, black box test of a service endpoint requires	trentdk	9.806275	-7.281415	comment	4.0	14.5	1591559284	-13.824686
23449672	Microservices were never about code 	"Microservices were never about code architecture, they were an organisational pattern to enable teams to own different services. Most ""microservices"" don't actually look micro to those implementing them, because it's really just ""a lot of services"".For my pers"	cameronbrown	9.782726	-7.360951	comment	4.0	11.5	1591556229	-13.819282
28813150	Ask HN: How much time do you lose ev	Ask HN: How much time do you lose evaluating tech stack options?	personjerry	10.485998	-7.7952976	story	4.0	2.0	1633812485	-10.862985
28807741	The Majestic Pseudo-Monolith	The Majestic Pseudo-Monolith	sergiomattei	9.845263	-7.252919	story	4.0	26.0	1633763923	13.422439
23511941	Graduate educational background in m	Graduate educational background in math here and working in software engineering and machine learning. Like your coworker said, I do my work in Python and libraries like Sympy/pandas/numpy, not Sage. Sage never made more sense than Python since Python covers e	watwatinthewat	10.203128	-7.7180204	comment	4.0	14.0	1592076218	10.350306
23516921	Yes, and I still think it still is g	Yes, and I still think it still is great concept. :-)I also don't think it's really how we do everything, the original concept caught on only very partially, and appears to be more and more forgotten.See Software-ICs, Binary Compatibility, and Objective-Swifth	mpweiher	10.466938	-7.7833815	comment	4.0	15.0	1592134628	-10.809289
23519508	As is tradition, I'm going to take t	As is tradition, I'm going to take the discussion one level up and talk about the language as a whole, although my issue is related to this syntactical change. The problem Swift has right now is that the review process is marred by huge conflicts-of-interests.	saagarjha	10.472025	-7.817589	comment	4.0	16.0	1592155663	-10.861425
23521336	I'd take it up a few more levels and	I'd take it up a few more levels and ask about the elephant in the room: in what significant way is this language better than C#?This outrage over closures reminds me of tabs vs spaces - it's one level above utter lunacy. Who gives a shit what the syntax is? D	alexashka	10.469235	-7.807101	comment	4.0	13.5	1592168428	-10.784111
23566455	The goal of micro-frontends (differe	"The goal of micro-frontends (different teams being able to deploy ""their"" parts of an application) is nice and all, but I still don't see how this is going to work when the shared modules release breaking changes. So now all those different teams that work on "	Vinnl	9.79256	-7.3497143	comment	4.0	10.5	1592506945	-13.8126135
23655002	What's Micronaut?(Of course I've fou	What's Micronaut?(Of course I've found more info by searching, but my real question is: why do teams proudly make major announcements without even including a link to their project, or at least an inline blurb about it for those first hearing about it via the 	gojomo	9.8196	-7.342841	comment	4.0	11.0	1593194554	-13.813262
23717666	Wish lisp have these like jupyter in	Wish lisp have these like jupyter integration.And my first computer lecture many decades ago is really about how he hated fortran and why FORTRAN is still not dead (Mainly negative view due to haveGOTO that time). And it is still not dead.	dng88	10.467413	-7.41444	comment	4.0	10.5	1593721856	8.800046
23718726	fortran - one of only a handful of l	fortran - one of only a handful of languages that natively supports multidimensional arrays, maybe the only low level one?	dm319	10.6066065	-7.3432417	comment	4.0	15.0	1593728017	9.160419
23757600	Ex Amazon SDE here. Amazon uses a se	Ex Amazon SDE here. Amazon uses a service based architecture where one team (e.g. 4 to 8 engineers) maintains one service.The main benefit is organizational and lies in having a small and very measurable interface between services.Crucially, the team the devel	ex_amazon_sde	9.782966	-7.3554816	comment	4.0	11.5	1594117552	-13.817067
23767184	I think you are drawing the wrong co	I think you are drawing the wrong conclusions here... Microservices is not the boogyman here.  It more likely has to do with speed of development, developer turnover and a plethora of other things that result in insufficient knowledge transfer.Microservices (l	bstar77	9.786474	-7.3580165	comment	4.0	11.0	1594186697	-13.8218155
23847851	This is an interesting article.  I h	This is an interesting article.  I have often wondered if there would be benefits to porting scientific simulation codes to more modern languages.  In the end I've always reluctantly stayed in C or Fortran for scientific simulations.  The article touched on th	atrettel	10.488366	-7.4243283	comment	4.0	12.5	1594831638	8.8585615
23848972	Although Fortran compilers may produ	Although Fortran compilers may produce fast code (they have to - there's no chance to play with SIMD intrinsics or templates unless you want to use C++), I don't find them very good. I've personally hit several bugs in gfortran. The code I maintain now has som	xioxox	10.490094	-7.3899527	comment	4.0	14.0	1594835701	8.850948
23852898	~= and 1-indexing are only weird if 	~= and 1-indexing are only weird if you haven't seen them before. MATLAB uses them as well.	ebg13	10.543234	-7.4336286	comment	4.0	22.5	1594851331	9.920962
23856459	Maybe if swift had something like ru	Maybe if swift had something like rustup, people would consider it more when developing for Linux. Also other popular languages like Rust and Go work well even on weird architectures and little known operating systems, while Swift does not even properly suppor	qalmakka	10.558357	-7.872933	comment	4.0	39.5	1594881860	-10.835849
23946874	I'm looking forward to the article a	I'm looking forward to the article about the problems DOMA introduced for them and what they came up with next. Wonder if we will see a full circle back to monoliths.I know I'm being snarky and I have used micro-services myself, but only when it was smacking m	systematical	9.783808	-7.3593254	comment	4.0	21.0	1595651933	-13.815233
24188228	This is complete bullshit, top to bo	This is complete bullshit, top to bottom.Microservices add complexity, they don't remove it.Monolithic architecture doesn't force tight coupling. Tight coupling doesn't depend on an architecture. Making a monolith crash-proof is easier than dealing with interm	marcus_holmes	9.787844	-7.3585625	comment	4.0	18.0	1597678563	-13.820381
24362620	I spent about 4 years of my early ca	I spent about 4 years of my early career working with Ada in the aerospace industry (specifically, I worked on the GPS satellite program).  It was rather career-limiting because I ended up as a young engineer with a lot of experience in an extremely niche lang	jcadam	10.656657	-7.7188168	comment	4.0	18.5	1599129147	-5.102364
24361359	What an ugly, unintuitive language. 	What an ugly, unintuitive language. Are there any benefits to Ada over something like c++?	aronpye	10.662673	-7.717597	comment	4.0	12.0	1599114969	-5.108264
24348394	Zstandard	Zstandard	gjvc	10.621597	-7.4079347	story	4.0	26.0	1599003520	12.36112
20014002	Understanding the Objective-C Runtim	Understanding the Objective-C Runtime (2010)	beefhash	10.498325	-7.726447	story	4.0	76.0	1558863020	5.664632
20074394	I've used Z3 a lot for CTF challenge	I've used Z3 a lot for CTF challenges, but in my day-to-day work have never encountered any problems that it would be useful for. I'm interested to know how people have used it in the course of their work?	hyper_reality	10.6694975	-7.400631	comment	4.0	18.5	1559467502	12.428999
20134311	This article seems a bit arrogant. B	This article seems a bit arrogant. But I have to acknowledge that they pioneered the trend of microservices in terms of overcomplicated designs and slowness.Honestly. Some of the most horrifying systems I have worked with were based on the idea that you should	kaio	9.814508	-7.3613367	comment	4.0	13.0	1560020195	-13.810753
20143808	Also if you have any need to generat	Also if you have any need to generate plots & graphs - RIP Julia. I was excited to try Julia, since it seemed to integrate some of the best features of each MATLAB, R, and Python. I was truly disappointed to discover that Julia would take minutes to render the	subroutine	10.182581	-7.9252763	comment	4.0	15.0	1560138909	-11.300779
20151854	While I can see some benefits in ter	While I can see some benefits in terms of deployment flexibility, this really seems like a case of prioritizing your organizational chart over the end user experience. Its already hard enough to optimize a large JavaScript SPA so that it runs well on mobile de	mrsharpoblunto	9.804893	-7.336307	comment	4.0	11.5	1560209235	-13.80463
20177139	This is supposed to be aimed at high	"This is supposed to be aimed at high school students.I majored in math in college, and yet there were things which I could not decipher in the first few pages of chapter 1. For example, on page 43, what is ""nonzero residues modulo p""? I guess you start with so"	kangnkodos	10.5630865	-7.1409097	comment	4.0	14.5	1560448346	8.774681
20260489	I have spent more time than I'm comf	I have spent more time than I'm comfortable with over the last couple of years railing against microservices. But this seems like a classic case where microservices are needed. Each team can handle their own writing/validation and expose them to themselves and	JamesBarney	9.799188	-7.3508754	comment	4.0	14.0	1561349282	-13.809133
20324045	It's weird that there are 49 comment	It's weird that there are 49 comments and not a single mention of React.SwiftUI is basically React implemented in Apple's proprietary language rather than a preprocessed JavaScript-XML hybrid [1]. More options is a good thing, but it hardly seems revolutionary	pavlov	10.506724	-7.799209	comment	4.0	15.5	1561977411	8.130879
20346651	Matlab has its quirks, but I've neve	Matlab has its quirks, but I've never come across a better IDE for debugging 'scientific' code/scripts. Seeing current values by hovering over variables, the ability to pause and execute some 'testing' code, or overwrite things and carry on, being able to easi	ggcdn	10.218828	-7.796114	comment	4.0	14.0	1562175967	10.471255
20347121	The author of this post is in academ	The author of this post is in academia, so Matlab outside of academia may be as rare as you think.	scott_s	10.2131405	-7.7678823	comment	4.0	11.5	1562178548	10.4843645
20348202	> And there’s zero-indexing (as oppo	"> And there’s zero-indexing (as opposed to indexes that start at 1)What, and that's exactly the part I dislike about both Matlab and Julia! The amount of ""+ 1"" and ""- 1""s in matlab indices you need when subdividing matrices into multiple equal sized parts is h"	Aardwolf	10.377005	-7.6763873	comment	4.0	13.5	1562184314	10.110076
20440668	This seems like a common side-effect	This seems like a common side-effect of an overly segmented microservice architecture.I’ve noticed this pattern numerous times, my guess is service/feature teams want to avoid at all costs taking another service dependency (and all the testing and coordination	tatersolid	9.785079	-7.3579717	comment	4.0	13.5	1563197904	-13.825345
20464698	This is why a lot of scientific code	This is why a lot of scientific code still uses fortran, code written several decades ago still compiles and has the same output.How long has the code which was transitioned to python lasted?	colechristensen	10.55177	-7.3811707	comment	4.0	13.0	1563402699	8.887886
20733927	The article claims that adding subsc	The article claims that adding subscript support to your own types is unique to Swift, but I immediately thought of how you would do it in Python:https://docs.python.org/3/reference/datamodel.html#object.__...I admit I don’t have a ton of experience in other l	williamjackson	10.515333	-7.8245826	comment	4.0	10.5	1566174889	-10.85196
20788141	People have asked for evidence on th	People have asked for evidence on this thread, so let me share my experience. A couple of years ago, I was developing an E-Commerce platformm internally for my company. I follow Martin Fowlers' articles on using DDD (Domain Driven Design) and Microservices to 	neya	9.835734	-7.324084	comment	4.0	13.0	1566664962	-13.810324
20853775	Micro Front end done right	Micro Front end done right	alonronin	9.837469	-7.3512354	story	4.0	35.0	1567362020	-13.85718
20930773	If you've done VHDL, you'll be famil	If you've done VHDL, you'll be familiar with Ada's syntax. When the DoD commissioned the design of VHDL, they required that its syntax be based on Ada.https://en.wikipedia.org/wiki/VHDL#History	AceJohnny2	10.645991	-7.709189	comment	4.0	16.0	1568136529	-5.130369
20934797	I can sympathize with resistance to 	"I can sympathize with resistance to Ada in a sense:  Big ""enterprise-y"" languages can feel unwieldy and cumbersome if you're used to bit-twiddling and struct-packing in something like C.But as the recent Boeing debacle has shown, the avionics domain is in need"	na85	10.646455	-7.7225943	comment	4.0	30.0	1568156585	-5.1395583
13655340	"The author says ""Objective-C and Swi"	"The author says ""Objective-C and Swift cannot continue to coexist indefinitely."" but their only supporting argument is that a multi-lingual platform is bad because nobody will know what language to choose.This is the same charge that has been leveled against M"	WayneBro	10.487937	-7.777199	comment	4.0	18.0	1487192755	-10.721043
13655604	First off, this is very well written	First off, this is very well written. Secondly, I'd like to state that I think that Objective-C and Cocoa were really good. I disagree with most of the design paradigms today, but I think the Objective-C/Cocoa ecosystem represented something approaching a loca	tolmasky	10.481207	-7.7690954	comment	4.0	18.0	1487194917	5.513574
13655914	He's missing a crucial piece of evid	He's missing a crucial piece of evidence. Apple has done a lot of work to make sure that Swift and Objective-C can coexist in same project. You can call Swift code from Objective-C and Objective-C code from Swift with little fuss. This is completely unlike Mic	fauigerzigerk	10.474018	-7.7867393	comment	4.0	16.5	1487197313	-10.820194
13673980	Swift doesn't have memory ownership 	Swift doesn't have memory ownership because your supposed to use DispatchQueues for that.The end.People asking for this are the people not familiar with Apple's SDK. And btw, DispatchQueues are also available in Linux, GCD has been ported to Linux since the be	Tanegashima	10.611928	-7.8101077	comment	4.0	15.5	1487403822	-10.840324
13676520	I work in Swift 7 days a week (sadly	I work in Swift 7 days a week (sadly 7) but I am quite happy despite the changes, it's an open source language built entirely in the open by contributions from people who care. What the hell is there to complain about, would you rather work in 50+ year old cob	coldcode	10.492128	-7.823538	comment	4.0	10.5	1487449777	-10.812649
13807790	they are truly scummy esp with their	they are truly scummy esp with their ADA shakedowns.ADA was a great way for people with disabilities to get equal access but now I fear its future due to the constant abuse by scumbags like Prenda and others.	vermontdevil	10.625869	-7.706121	comment	4.0	17.0	1488852832	-1.6600857
13826232	Note that your example seems to only	Note that your example seems to only matter if I use differently spec'd instances for different services.  If they all have the same ratio of e.g. memory to cpu to disk, I'm not sure what slicing my instances across services really gets me.  If you slice it ac	sbov	9.818284	-7.246963	comment	4.0	11.0	1489025229	-13.816886
13830248	The consultancy Nodes reports that t	"The consultancy Nodes reports that their framework Vapor[0] that is written in Swift is ""around 100 times faster"" than other frameworks written in PHP, Ruby and Python, you can see his bold claim 4 minutes in here: https://vimeo.com/193549098, but of course no"	kawsper	10.488178	-7.792405	comment	4.0	11.0	1489076241	-10.841563
13884791	Am I reading this incorrectly, or th	Am I reading this incorrectly, or there is more movement from Swift to Objective-C than the other way around? Do I sense a methodological error?	fishnchips	10.491548	-7.7848506	comment	4.0	12.5	1489670940	-10.83664
13792501	A Cross-Platform String Library Writ	A Cross-Platform String Library Written in Swift	febin	10.471974	-7.7820907	story	4.0	32.0	1488655887	-10.7980585
13929991	Author without even knowing it descr	Author without even knowing it described common microservice architecture problems that are faced in front-end. (Because in microservices front-end is consuming API and is usually a SPA)- The single point of fragilityYeah, if you have an js error in your synta	romanovcode	9.795988	-7.3483706	comment	4.0	11.5	1490181201	-13.828849
13961370	Given how they described their org, 	Given how they described their org, it seems like a valid scenario. Extreme examples are tools for illustrating a point.Micro services from day one is a premature optimization. Just saying that doesn't necessarily paint a picture of why it might be.	mylons	9.782011	-7.357142	comment	4.0	10.5	1490543764	-13.840625
13961391	Beginning in 2003, and until the hei	Beginning in 2003, and until the height of the SOA craze around 2010, the Service Component Architecture (SCA) was seen as the holy grail of service integration. It encompassed both local/in-process (or in-JVM) as well as networked services (SOAP and REST), wa	tannhaeuser	9.78948	-7.3612475	comment	4.0	11.0	1490543998	-13.816828
13962377	We've used microservices for around 	"We've used microservices for around 6-7 years now. One thing we realized quite early was that letting each microservice store state ""silos"" independently was a bad idea. You run into the synchronization issue you describe.Instead, we've moved the state to a ce"	lobster_johnson	9.788687	-7.3563094	comment	4.0	14.5	1490554157	-13.813002
13964225	All these architectural discussions 	All these architectural discussions seem to assume a kind of black box business system where the microservices vs monolith discussion is an internal one, conducted by and for techies, and limited to a rigid view of the business requirements.Perhaps the early m	abraae	9.786609	-7.358644	comment	4.0	15.0	1490574157	-13.815883
13971966	Of course, just did. Very surprised 	Of course, just did. Very surprised that this happens for a 'source compatible' point release of Swift. Especially as this can be triggered with only five fairly simple lines of code. Not good.	misterdata	10.47109	-7.8223615	comment	4.0	13.0	1490650290	-10.863295
14015392	Fortran, Ada, D? I guess D is out be	Fortran, Ada, D? I guess D is out because of the garbage collector, and I've not heard of Fortran being used as a systems language, but it's certainly performant with C.However, OSes have been written in Lisp, and it has been used for embedded programming, so 	goatlover	10.537481	-7.360695	comment	4.0	12.5	1491099414	8.813822
14032660	Some of these corporations are exper	Some of these corporations are experts in shooting in the foot.I wanted to read 'The Swift Programming Language (Swift 3.1 Edition)'. It is just an epub, just distributed via Apple iBooks, right?When trying to open in on an Android tablet, I found out that it 	vetinari	10.456288	-7.8253145	comment	4.0	11.5	1491314608	-10.85941
13961963	Ask HN: How do you meet founders if 	Ask HN: How do you meet founders if you haven't built anything cool?	free2rhyme214	10.464524	-7.8086143	story	4.0	16.0	1490550214	-10.883633
14107500	My experience with this requirement 	"My experience with this requirement was that each of our ""microservices"" ended up consuming between 0.5 to 1 GB of RAM just to start up and connect to a database and a message bus. And these were simple CRUD services. Developers with older laptops couldn't eve"	jrs95	9.813066	-7.311768	comment	4.0	13.0	1492095537	-13.810979
14208525	The languages actually aren't really	The languages actually aren't really the big investment.  It's really two things:1)  Learning new concepts in computer science.  For example Swift uses a lot of modern concepts around type safety, closures, parallelism, synchronization, etc.  These are a big l	WhitneyLand	10.571694	-7.6814423	comment	4.0	21.0	1493256859	-10.813002
14209293	One other big contributor to app siz	One other big contributor to app size we've noticed at Khan Academy: extensive use of value types, particularly ones whose fields require more than a couple words of storage.The big picture observation is that for value types with storage larger than a few wor	andymatuschak	10.524186	-7.7934146	comment	4.0	10.5	1493269319	7.0124145
14209892	So how does Ada go speed wise (real 	So how does Ada go speed wise (real world not micro benchmarks)? Were/are there legitimate reasons to opt for c over Ada?	flukus	10.6658325	-7.7262197	comment	4.0	18.0	1493279441	-5.151197
14210154	Here is my list of shortcomings when	Here is my list of shortcomings when it comes to Ada1) Ada is not a magic bullet, the seminal case study of why computer bugs are bad taught in CS courses around the world is the failed 1996 Ariane 5 rocket launch where the rocket veered off course and then ex	ewanm89	10.654812	-7.7274218	comment	4.0	14.5	1493283850	-5.099752
14235964	I'm not sure what's the problem with	"I'm not sure what's the problem with setters? In my eyes, they are just a convenient shorthand for a common message. For example, Objective-C before version 2.0 didn't have setters; so the libraries had lots of methods like ""setTitle:"", ""setDelegate:"" etc. Set"	jakobegger	10.651743	-7.733158	comment	4.0	15.0	1493620491	8.703215
14266264	Putting up two TL;DR filters right a	"Putting up two TL;DR filters right away:
US citizens only, Fortran codebase :-/"	mynegation	10.458853	-7.4032636	comment	4.0	34.0	1493915773	8.806929
14279171	Notes about deallocation. This alloc	Notes about deallocation. This allocator does not explicitly release memory. Because of this, memory debugging programs like valgrind or purify may notice leaks: sorry about this inconvenience. Operating systems will reclaim allocated memory at program termina	CamperBob2	10.672896	-7.1039376	comment	4.0	15.5	1494055939	8.819159
14338954	Why do you claim C++ relates to poor	"Why do you claim C++ relates to poor security? OSX and iOS are primarily C, C++, and assembly, (objective C at the higher levels). And linux of course is C and assembly.Are you saying all of the major operating systems have poor security because they use ""vuln"	zild3d	10.613489	-7.439776	comment	4.0	12.0	1494818940	-7.4030237
14389999	Android will eventually adopt Swift.	"Android will eventually adopt Swift. It is not a matter of ""if"" but ""when"". Who knows 5 year from now, you all will be coding in Swift (for servers, iOS and Android)."	awaisraad	10.490884	-7.778155	comment	4.0	12.5	1495411420	-10.814718
14390110	Is it really that great? Seems like 	Is it really that great? Seems like Swift for the JVM. Sure it's great, but there are a lot of similar things out there.	throwaway7645	10.47515	-7.819535	comment	4.0	13.5	1495413046	-10.856778
14411500	The REST architecture always include	The REST architecture always included the possibility of gateways and proxies in the end-to-end communication path to delegate shared responsibilities out of the user agent or origin server.   This balances the need for centralized admin of some things and dec	parasubvert	9.800936	-7.37322	comment	4.0	13.0	1495645195	-13.816689
14415669	This frankly adds nothing new to the	This frankly adds nothing new to the conversation.And if you find scaling microservices harder than a giant stateful monolith well then clearly you've done something wrong.Likewise local development should be far easier if you define your APIs and contract bou	threeseed	9.799381	-7.35704	comment	4.0	10.5	1495694195	-13.82117
14415824	But if you are changing the factorin	But if you are changing the factoring of the microservices you are necessarily rewriting more than one.  Sure it can be done, but you know what's easier than refactoring microservice boundaries?  Refactoring service object boundaries in a single app with one c	dasil003	9.781864	-7.3546495	comment	4.0	11.0	1495696639	-13.820208
14416208	Microservices are just one option of	Microservices are just one option of refactoring that can be considered at later stage of life of the system.Even big guys who are using microservices started with monolith. Many people can't seem to catch this important detail - they started as monolith that 	mirekrusin	9.78677	-7.3583183	comment	4.0	13.0	1495704655	-13.829619
14464850	App development with Swift gets you 	App development with Swift gets you great things such as upgrading your iPhone, but then getting locked out of development because xcode is out of date. But wait, the next version of xcode requires your OSX installation to be Sierra (which your computer is not	anonnyj	10.459975	-7.783084	comment	4.0	15.0	1496351861	-10.787716
14476212	And I thought 2017 is the year when 	And I thought 2017 is the year when I start a new app in swift... guess will be sticking to objc and react native depending on what makes sense where.	sheeshkebab	10.497652	-7.7888494	comment	4.0	11.5	1496495211	-10.89503
14476299	This post hits it right on ... the r	This post hits it right on ... the renaming thing and the removal of traditional for loops ... I'm just bewildered by it. When I saw it, my reaction was ... WHY??? The incompatibilities between swift 2 and swift 3 made me thankful I did not invest the language	brutus1213	10.490474	-7.803738	comment	4.0	13.5	1496496713	-10.859449
14476300	I'm actually pretty happy swift move	"I'm actually pretty happy swift moves the server side story forward, because i'm convinced the ""next big language"" will have to run on mobile and server. Actually, i think they don't go fast enough, especially regarding concurrency ( which on the server goes b"	bsaul	10.491862	-7.8045473	comment	4.0	11.5	1496496730	-10.875558
14476814	I think the author misses the fact t	I think the author misses the fact that Swift wasn't truly 'done' when it was introduced, (and still isn't). Objective-C had some 30+ years to evolve, but Swift can't have 3?I get that if you're shipping Swift in production you want to refactor as little as po	AsyncAwait	10.479686	-7.8082175	comment	4.0	25.0	1496503726	-10.818765
14476841	Anyone shipping swift code one day o	Anyone shipping swift code one day one had to be pretty masochistic. I just couldn't understand why people were doing it. It was obviously not ready for production use, and still isn't.But I'm happy that people are playing with it and the language is being ref	nicky0	10.4614315	-7.82076	comment	4.0	20.5	1496503967	-10.851112
14535674	I feel like we are inching closer to	I feel like we are inching closer to being able to write code on iOS. Swift storyboards on the iPad kind of opened the door and I hope we can keep chipping away at this.The day I can run and write Python natively on iOS is the day I buy an iPad Pro. Right now 	ferdterguson	10.503696	-7.737567	comment	4.0	14.0	1497253179	-7.2792425
14575403	I wonder how likely it'll be they ke	I wonder how likely it'll be they keep Objective-C support. Ultimately, there's a huge amount of useful legacy code available they would be throwing away.I think the way it's set up right now with interoperability works pretty well, and using it for new apps i	charlesdm	10.469619	-7.7489676	comment	4.0	11.5	1497699357	5.583487
14618361	I wonder what the plan is for gettin	I wonder what the plan is for getting swift interop with C++, given that all the Be/Haiku APIs are C++ (IIRC) and swift has no ability to call into C++ code directly.	quux	10.498085	-7.8152146	comment	4.0	12.0	1498217033	-10.877825
14605208	Swift Creator Chris Lattner Leaves T	Swift Creator Chris Lattner Leaves Tesla After Only Six Months in the Job	macinjosh	10.4333515	-7.8110347	story	4.0	30.0	1498062386	3.9227474
14673013	I've been working in a related space	I've been working in a related space for a few years and wanted to offer a few counterpoints to the article.First, if you're doing request/response using messaging, you're probably doing it wrong. Pub/sub and request/response are totally different animals. I f	eldavido	9.799187	-7.351706	comment	4.0	10.5	1498849874	-13.779404
14677275	What would hardware acceleration for	What would hardware acceleration for objc_msgSend look like? If the success of RISC architectures taught us anything, it's that replacing simple primitive operations with special-purpose combinations is rarely worth the transistors. You can win if you're tryin	twoodfin	10.499133	-7.601345	comment	4.0	11.5	1498919926	5.680701
30741584	Generating the overflow bit and stor	Generating the overflow bit and storing it adds a completely negligible cost to a 64-bit adder, so touting this as a cost saving measure is just a lie, even if indeed this claim has always been present in the RISC-V documentation.Most real cases of overflow ch	adrian_b	10.548086	-7.0170417	comment	4.0	12.5	1647772927	-7.0100517
30759515	I found microservices had the benefi	I found microservices had the benefit of increasing release cadence and decreasing merge conflicts.Are there complications? Sure. Are they manageable? Relatively easily with correct tooling. Do microservices (with container management) allow you better use of 	sarks_nz	9.782504	-7.3589983	comment	4.0	16.5	1647895676	-13.817746
30760062	I grew up using unix where the philo	"I grew up using unix where the philosophy is ""do one thing and do it well"" and I think that carries over well into microservices.But honestly I'm not sure there is much of a line between the two.  I've seen microservices that just return True/False and ones th"	jedberg	9.789105	-7.360013	comment	4.0	11.0	1647898833	-13.814769
30760188	Yes, that is a fair distinction that	Yes, that is a fair distinction that I simplified over.  You don't really get a lot of the gains of microservices if you're using a monorepo, so while they do have multiple binaries/services, you still have to check into a single repo and wait for all the test	jedberg	9.77705	-7.351854	comment	4.0	13.0	1647899581	-13.827506
30764885	I had some Matlab experience about 3	I had some Matlab experience about 3 decades ago.  What's you take in Matlab vs R as programming languages?	pantulis	10.247694	-7.7832046	comment	4.0	11.0	1647949481	10.529843
30813793	It’s because Matlab (and Mathematica	It’s because Matlab (and Mathematica, etc) is proprietary, and therefore you always have to pay the Danegeld. So we use numpy instead because it’s extensible, it uses all the super fast C/C++/FORTRAN stuff on the backend, and is fairly easy to learn.I actually	Robotbeat	10.252263	-7.791935	comment	4.0	15.5	1648316836	10.40559
14676236	Dissecting objc_msgSend on ARM64	Dissecting objc_msgSend on ARM64	ingve	10.502394	-7.5159507	story	4.0	80.0	1498901183	-7.4757524
30854950	This is slightly beside the point, b	This is slightly beside the point, but those stack traces are C++ functions. I was pretty surprised by that (though, granted, I don't know anything about macOS internals). I would have expected either pure C for the kernel, or maybe Objective-C if they wanted 	OskarS	10.640592	-7.03881	comment	4.0	13.5	1648646997	-7.466035
30936724	For what it is worth - I write Fortr	For what it is worth - I write Fortran professionally (in some of the use cases you describe) and I doubt its usefulness.The way I see it, Fortran exists today because of inertia, not because it still has technical superiority.These mountains of Fortran code r	necheffa	10.459852	-7.412026	comment	4.0	21.0	1649274707	8.83206
31325177	In the Era of zstandard, do we reall	In the Era of zstandard, do we really need this?	joelthelion	10.621546	-7.4259152	comment	4.0	15.5	1652175715	12.364076
31328455	I think the biggest pain point for m	"I think the biggest pain point for me is the almost constantly-changing definition of ""microservices"" - at work, whenever someone says ""microservices"" they really mean a services architecture. I can largely get behind that. Because when you say services archit"	roflyear	9.784759	-7.3646255	comment	4.0	11.0	1652197375	-13.815942
31400373	"Is ""for i in 1:length(A)"" ever corre"	"Is ""for i in 1:length(A)"" ever correct? Should Julia just emit a warning any time it encounters that pattern? Or maybe something slightly more complicated, such as that pattern followed by usage of i to index into A inside the loop?"	rcthompson	10.2769985	-7.872377	comment	4.0	11.0	1652720803	10.634551
31436623	OTOH, the time I spent learning Octa	OTOH, the time I spent learning Octave/Matlab for Andrew Ng's course was 100% wasted time, because I've never used it again in the 10+ years since I took the class, whereas time spent learning Python would've been useful to me in myriad other ways.	bonniemuffin	10.215816	-7.7842255	comment	4.0	14.0	1652977174	10.399503
31516698	Thousands of classes with indirectio	Thousands of classes with indirection is not clean code and write code as simply as possible is tautology. Of course it should be as simple as possible. The interesting question is what counts as simple.Setting that aside though, the author seemed to mostly be	thinkharderdev	9.838774	-7.321837	comment	4.0	11.0	1653560983	-13.832411
31570061	> Surely the people at these labs wi	> Surely the people at these labs will want to run ordinary DL frameworks at some pointI don't know about that. A lot of these labs are doing physics simulations and are probably happy to stick with their dense-matrix multiply / BLAS routines.Deep learning is 	dragontamer	10.449916	-7.387074	comment	4.0	16.0	1654008133	8.759249
31686794	Cranelift, Part 4: A New Register Al	Cranelift, Part 4: A New Register Allocator	cfallin	10.645037	-7.091076	story	4.0	156.0	1654808350	8.793375
28984155	If abs(int) were being defined now i	If abs(int) were being defined now in C, I would advocate that the return value be signed int.Why?  Because it's quite likely the result will be used in arithmetic expressions involving other signed ints and/or subtraction.  That goes with the kinds of things 	jlokier	10.619806	-7.017878	comment	4.0	14.5	1635131516	-6.973301
28985890	No matter how careful you are with t	No matter how careful you are with the initial architecture of your microservices system, it is inevitable to re-architect as you go. Specifically to properly distribute service responsibilities.	mulkave	9.776028	-7.359176	comment	4.0	11.5	1635153568	-13.813339
29046560	Ada is just another programming lang	Ada is just another programming language.	transfire	10.658471	-7.718379	comment	4.0	19.0	1635575939	-5.109059
29046751	True, but nevertheless Ada is an imp	True, but nevertheless Ada is an important language in the history of programming languages.After 1970, there were less and less innovations in programming languages, in the sense of features that have not existed in any earlier languages.Many new languages ha	adrian_b	10.662429	-7.722216	comment	4.0	17.0	1635578434	-5.168342
29128998	Show HN: How does JAX allocate memor	Show HN: How does JAX allocate memory on a TPU? An interactive C++ walkthrough	sillysaurusx	10.264313	-7.8144455	story	4.0	78.0	1636193799	10.556015
29296502	Goodbye Microservices	Goodbye Microservices	ahmd	9.78783	-7.362141	story	4.0	18.0	1637506031	-13.817279
29191760	Ada on any ARM Cortex-M device, in j	Ada on any ARM Cortex-M device, in just a couple minutes	okl	10.6570425	-7.724167	story	4.0	73.0	1636657610	-5.0912933
29302646	The more services you have, the high	The more services you have, the higher the latency, to a point it is unbearable. So you know what the engineers do? They have to go back and make some services monolithic again.This is also applicable to microkernel model, where everything is almost processes 	stevefan1999	9.795492	-7.3405976	comment	4.0	12.5	1637554492	-13.766187
29303287	> It is extremely difficult to chang	> It is extremely difficult to change a monolith’s technology or language or framework because all components are tightly coupled and dependent on each other. As a result, even relatively small changes can require lengthy development and deployment times.I dis	westoque	9.7912035	-7.3549337	comment	4.0	14.0	1637560725	-13.830082
29311636	Interesting; I was wondering if they	Interesting; I was wondering if they had added some magic feature to Clang to enable Objective-C in pure C++ mode, but no, it really is C++.  It just directly calls the Objective-C runtime functions like sel_registerName, objc_lookUpClass, objc_msgSend, etc.  	comex	10.560572	-7.4629903	comment	4.0	19.5	1637615637	-7.4827986
29357802	Let’s not ignore the giant elephant 	Let’s not ignore the giant elephant in the room: 1-based indexing. I don’t particularly care since I use R and Python but Java, C, C/C++, C# all used 0-based indexing. It’s truly a bizarre choice Julia made there.	laichzeit0	10.322146	-7.7809086	comment	4.0	15.0	1637991789	10.565463
29359416	If Julia had wanted to be taken seri	If Julia had wanted to be taken seriously then it shouldn't have dropped the ball at the very first hurdle by having 1-based array indexing.	anothernewdude	10.231956	-7.9228	comment	4.0	11.5	1638013462	10.576615
29371294	Which step in that process could not	Which step in that process could not be automated? What's so fucking difficult on either writing a Cross-Platform UI or using a Cross-Platform framework?<rant>Is it not instead the case that today's hipster developers simply want to ignore that platforms exist	choeger	9.792724	-7.336292	comment	4.0	16.0	1638123366	-13.815799
29401136	Multidimensional array construction 	"Multidimensional array construction is something I had looked forward to in Julia. I am not convinced that the approach taken in julia1.7 compares favorably with other language implementations (Ignoring R)
In my view the numpy syntax has more clarity for this "	matjet	10.296865	-7.883462	comment	4.0	12.0	1638338324	10.444122
29419349	The Surprising Cost of Protocol Conf	The Surprising Cost of Protocol Conformances in Swift	sond813	10.516469	-7.8235846	story	4.0	59.0	1638466277	-10.867644
29475240	Should I be penalized if an upstream	Should I be penalized if an upstream dependency, owned by another team, fails? Did I lack due diligence in choosing to accept the risk that the other team couldn't deliver? These are real problems in the micro-services world, especially since I own UI and ther	88913527	9.863036	-7.153839	comment	4.0	16.0	1638897235	-13.8036175
29571552	Does anyone have personal experience	"Does anyone have personal experiences of seeing beginner using Swift Playground to learn to code and understanding programming ideas? How effect is it? How ready are they to enter ""actual programming"" after completing the playground?"	slmjkdbtl	10.475478	-7.824968	comment	4.0	10.5	1639601998	-10.82342
29576643	> - DB is not an obligatory part of 	> - DB is not an obligatory part of microservices.If the microservices don't have their own store, but are all mucking around in a shared data store, everything will be much harder. I wouldn't even call that a microservice, it's a distributed something. It can	formerly_proven	9.794921	-7.3619184	comment	4.0	12.0	1639648174	-13.824335
29576869	Monolith and Micro-services at diffe	Monolith and Micro-services at different times during the progression of a business can have their places. I have experienced the pains of having to work with both within the same company over 9+ years and here is what I think are forces that can pull you in e	armanm	9.78863	-7.355218	comment	4.0	17.0	1639650453	-13.828993
29577355	That's a fallicy. You've optimized f	That's a fallicy. You've optimized for one use case, but you've made everything else more complicated as a consequence.Deploying a single monolith is faster than deploying 10 microservices, especially if you find yourself in the model where your microservices 	gwbas1c	9.789023	-7.3591824	comment	4.0	11.0	1639656282	-13.819522
29576992	All ideas that are good in principle	All ideas that are good in principle, become absurd the moment they are elevated to a kind of dogma, applied to every problem, no matter if it makes sense to do so or no.Microservices are no exception from that rule, and often repeat the same mistake as OOP di	usrbinbash	9.780447	-7.3529673	comment	4.0	12.0	1639651779	-13.815183
29577383	Caveat: I am really not qualified to	"Caveat: I am really not qualified to discuss the nuances (because I have never used microservices so the little I know is based on reading a bit on those here and on other online forums).""Single writer multiple readers"", yes, this is what I would probably use,"	Pamar	9.795696	-7.356626	comment	4.0	10.5	1639656579	-13.8021555
29577882	Mathematica is amazing, but I wish i	Mathematica is amazing, but I wish it were open-source.	nynx	10.287129	-7.139041	comment	4.0	17.0	1639661447	9.842939
29578102	In my experience with enterprise sof	In my experience with enterprise software one of the things that cause most trouble is premature modularization (sibling to the famous premature optimization).Just like I can't understand how people can come up with the right tests before the code in TDD, I ca	farias0	9.815292	-7.329587	comment	4.0	10.5	1639663023	-13.798801
29578740	IMO modern MATLAB with the right too	IMO modern MATLAB with the right toolboxes is much more capable than Mathematica. Pricing is similar.	pwr-electronics	10.208749	-7.7820096	comment	4.0	13.5	1639666590	10.458207
29580260	Former Netflix engineer and manager 	Former Netflix engineer and manager here.  My advice:Start a greenfield project using what you know (unless your main goal is learning) keeping things as simple as possible.Microservices is more often an organization hack than a scaling hack.Refactor to separa	trunnell	9.78394	-7.358872	comment	4.0	13.5	1639673268	-13.823104
29580906	The interesting thing about microser	The interesting thing about microservices is not that it lets you split up your code on module boundaries. Obviously you can (and should!) do that inside any codebase.The thing about microservices is that it breaks up your data and deployment on module boundar	jameshart	9.800967	-7.3525314	comment	4.0	16.5	1639675754	-13.83525
29619696	>Out of all the binaries in iOS 15:8	>Out of all the binaries in iOS 15:89% are using Objective-C17% are using C++13% are using Swift8% are entirely written in C2% are using SwiftUIObjective C looks healthy.	ksec	10.48934	-7.7480106	comment	4.0	24.5	1639956654	5.5033617
29632268	Author here. Thanks! The other proje	Author here. Thanks! The other projects I'm known for here on HN are:https://news.ycombinator.com/item?id=26271117 Redbean (2011) is a single file distributable web server. Here's a video of me giving a talk about it https://youtu.be/1ZTRb-2DZGshttps://news.yc	jart	10.448094	-7.404413	comment	4.0	12.0	1640046220	8.825394
29672421	It's interesting how from one side S	It's interesting how from one side Swift seems to be trying to be higher level (for example the actors) and from the other it seems to be trying to be lower level too. It's like it's developped in a world where other languages don't really exist and adding mor	Zababa	10.465881	-7.8208075	comment	4.0	10.5	1640342080	-10.846876
34158149	Does SwiftUI really count as native 	Does SwiftUI really count as native on the Mac? My experience is that Apple has not invested enough for that to be true. Apple is Apple, so when they say jump, developers jump. But if any other company tried pulling what they’re pulling with SwiftUI, they’d be	n8cpdx	10.46202	-7.8091145	comment	4.0	13.0	1672209479	-10.76171
34164227	I wonder if Matlab being most hated 	I wonder if Matlab being most hated relates to people being forced to learn it in undergrad and it being poorly taught etc. I’ve found it very useful but it took a fair amount of time to build up the set of tricks to doing things right. I would imagine a good 	xt00	10.221212	-7.7496185	comment	4.0	11.5	1672253133	10.424732
34209188	The more I read about Fortran the mo	The more I read about Fortran the more fascinated I become with it. Its treatment of arrays is similar to Pandas/Numpy. The performance is close to C without any optimizations. Without the pointer laden complexity and gotchas that come with C/C++.	sheepscreek	10.518999	-7.386762	comment	4.0	11.0	1672598027	8.923049
34234362	I used to be monolith-curious, but w	I used to be monolith-curious, but what sold me on micro-services is the distribution of risk. When you work for a company where uptime matters having a regression that takes down everything is not acceptable. Simply using separate services greatly reduces the	therealdrag0	9.787933	-7.358015	comment	4.0	14.5	1672766155	-13.824989
34265566	Using Swift for Scripting (2019)	Using Swift for Scripting (2019)	mgrayson	10.498991	-7.815378	story	4.0	5.0	1672948449	-10.822799
34287606	Ask HN: In 2023, what’s the easiest 	Ask HN: In 2023, what’s the easiest way to build an (iOS, Android) app?	bakhlawa	10.457601	-7.7622585	story	4.0	3.0	1673096075	-10.783569
34338197	"Scalability and stability.
You need "	"Scalability and stability.
You need to process more requests? Launch more virtual machines, easy.
Your microservice is a shit and it crashes every second? Don't care, it will be relaunched automatically."	samsaga2	9.790435	-7.351599	comment	4.0	22.5	1673443993	-13.816886
34338371	> Monoliths can also scale horizonta	> Monoliths can also scale horizontallyAt a (potentially much) bigger cost.	thatwasunusual	9.829685	-7.305526	comment	4.0	13.5	1673444902	13.324858
34342485	“A reimplementation of Calendar in S	“A reimplementation of Calendar in Swift is 1.5x to 18x as fast as the C one (calling from Swift in various synthetic benchmarks like creation, date calculation).”I’m sure it is, but this is not solving the right problem at all. Calendar is all UI. It needs to	hyperhello	10.483549	-7.7954307	comment	4.0	10.5	1673462224	-10.877951
34343341	Yes, and it means Swift scripts and 	Yes, and it means Swift scripts and modules that don’t reference UIKit/AppKit/SwiftUI/Combine will run on Linux and possibly Windows with zero or little modification.I‘m a little sad though that they didn’t start this endeavor years ago, because IMO Rust has a	manmal	10.502271	-7.8371716	comment	4.0	45.0	1673465549	-10.795396
34345288	Forgive me, is swift not in the c fa	Forgive me, is swift not in the c family? I could have sworn that it was, but I'm not overly familiar with it.	danielvaughn	10.452298	-7.8340216	comment	4.0	11.0	1673473079	-10.841941
34379901	Ask HN: Is Swift evolution out of co	Ask HN: Is Swift evolution out of control?	msie	10.460643	-7.8230166	story	4.0	2.0	1673700585	-10.850335
34483235	labels are strictly better. idk if y	labels are strictly better. idk if you've ever had to renumber your basic or fortran code	convolvatron	10.408891	-7.424525	comment	4.0	11.0	1674428448	8.799656
34556912	I also fell in love with swift   whe	I also fell in love with swift   when I had to learn it trying metal. it just succs how you have to use xcode with it.	jalino23	10.477629	-7.821264	comment	4.0	20.5	1674907379	-10.82803
34575090	That's definitely the elephant in th	That's definitely the elephant in the room.And the fact that it does not have clean and easy C integration.If you could do direct memory stuff and control the ARC stuff, and easily integrate with C ...... and the docs were clean, and you could easily use somet	jasmer	10.539724	-7.8329334	comment	4.0	21.0	1675044987	-10.82062
34550457	30k lines of SwiftUI in production l	30k lines of SwiftUI in production later, we love it, but	faridh	10.459884	-7.826098	story	4.0	19.0	1674847169	-10.839403
34682112	"""I am looking for explanations that "	"""I am looking for explanations that will help me build a conceptual understanding of macos UI development.""it depends on your learning style of course, but if you like lecture / course-style learning, i highly recommend paul hegarty's CS193P, it will definitel"	mysticllama	10.466987	-7.7522016	comment	4.0	14.0	1675709197	-10.80293
34690434	Huh? I always thought that the point	Huh? I always thought that the point of microservices was that you can scale the parts that need to be scaled.For example, I have a main server that serves all client requests. I separate and deploy functions that require heavy processing away from the main se	senttoschool	9.787086	-7.3553963	comment	4.0	12.5	1675760803	-13.821566
34753987	I love this. I wish every big librar	I love this. I wish every big library had something like this. It helped me contribute to JAX in the past, and is a great educational resource and source of inspiration for my own tools.I’ve tried to find something similar for pytorch and numpy in the past and	6gvONxR4sf7o	10.010701	-7.894538	comment	4.0	10.5	1676134503	10.436532
34766939	> For Dijkstra programming meant to 	"> For Dijkstra programming meant to think about a problem, then sit for a few minutes at your desk and write with pen on paper ""in one go"" the perfect algorithm/program, no bugs, no errors, no corrections, from the first try, and also, in beautiful handwriting"	microtherion	10.547256	-7.151119	comment	4.0	18.5	1676235957	-9.432846
34845122	Communication turns to shit either w	Communication turns to shit either way.When I was dealing with a micromanager I just stopped letting him know what I was actually doing - because bothering to communicate with him only ever made my job harder than it needed to be.As an example, we had two very	yarg	9.803532	-7.123558	comment	4.0	13.0	1676708899	-11.817781
34845190	Let’s say my site has a download ima	Let’s say my site has a download image feature that embeds per-user digital licenses into downloaded images at download time. This might take some processing so there is a queue and an abstraction representing the downloaded file. There are also several endpoi	eurasiantiger	9.862186	-7.2404146	comment	4.0	11.5	1676709786	6.996451
34928308	The abstractions provided by JAX for	The abstractions provided by JAX for parallelism are  beautiful. JAX is an absolute master-class in programming-interface design and a lesson in the power of providing composable primitive operations and FP inspired design. An astounding amount of complexity i	jdeaton	10.0204525	-7.9391413	comment	4.0	14.0	1677264680	10.562389
34944437	IIRC, this has been the case for a w	IIRC, this has been the case for a while. I seem to recall getting a Raspberry Pi ~5 years ago which had Mathematica on it. Admittedly it was quite slow, but as far as I can recall it did work.	bradrn	10.31279	-7.171651	comment	4.0	10.5	1677406506	9.883463
34951479	Microservices became a synonym for S	Microservices became a synonym for Services Orientated Architecture years ago.It's almost always relatively normal sized services split by functional area e.g. Auth, Cache etc.	threeseed	9.782363	-7.364332	comment	4.0	11.5	1677457966	-13.816021
35007171	> but with FANTASTIC libraries writt	> but with FANTASTIC libraries written in C _and FORTRAN_ftfy - it's the only way a tragically slow language like Python can keep up.Edit: didn't forget FORTRAN	deafpolygon	10.6102915	-7.365951	comment	4.0	12.5	1677832485	8.91594
35044443	This post has an introduction that i	"This post has an introduction that is noteworthy of its disrespect towards proponents of unsigned integers.""Oftentimes it’s a novice coming from C/C++ or C# who has worked with unsigned types before, 
 or one who wants to guarantee no negative numbers in certa"	ablob	10.613768	-7.046438	comment	4.0	12.5	1678124671	-6.956927
35108642	Yeah I can't really see a reason to 	Yeah I can't really see a reason to use Octave. The Matlab language is mediocre at best. People use Matlab because it has a great IDE, great plotting support and rock solid toolboxes for just about everything. Yes Octave really only duplicates the language.The	IshKebab	10.198383	-7.796301	comment	4.0	13.0	1678545870	10.475553
16900900	No, and if you do, then I suggest yo	"No, and if you do, then I suggest you visit a doctor.Rant:Objective-C is a wonderful language, once you learn it properly.
There's a lot of Swift fanboiism (is that a word?) and a lot of Objective-C hate. I have an opinion on why.The vast majority of people th"	jmpt	10.471538	-7.788198	comment	5.0	24.0	1524463905	5.57742
16933496	I feel that the C ABI is local maxim	"I feel that the C ABI is local maximum, with a massive associated opportunity cost. Imagine if all the operators that have been written, ""bottom up"", in one language could be easily accessible from others. And the only way to leverage that today is to go throu"	superlopuh	10.638392	-7.4511223	comment	5.0	13.0	1524761194	-7.4536376
16945728	Bill Stein is a genius programmer, a	Bill Stein is a genius programmer, and Sage is quite the accomplishment. I wish he was more Chern, less Yau. I go to talks where people credit Sage where I know decades of Singular effort were responsible. (I coauthored a similar system; this is a life's work 	Syzygies	10.254735	-7.1450663	comment	5.0	14.0	1524880427	9.698023
17001340	Vapor 3.0.0 released - Swift web fra	Vapor 3.0.0 released - Swift web framework	basil	10.465942	-7.827194	story	5.0	42.0	1525519216	-10.831972
17028999	I've always got the impression that 	I've always got the impression that micro-services are a bad idea most of the time, apart from sometimes where they're not. Mainly if you're really big.There are a lot of advantages to having a monolith, especially in statically typed languages.Every extra ser	mattmanser	9.792092	-7.3666863	comment	5.0	20.0	1525865397	-13.824688
17204663	It's for high-performance numerical 	It's for high-performance numerical work. The language of choice in scientific computing is still Fortran, and for good reason. Julia has become my go-to language for new codes, but Fortran still has its place. In particular, Julia is slow to be adopted by sup	drjesusphd	10.366166	-7.63623	comment	5.0	15.0	1527856406	10.730827
17216114	An Introduction to WebObjects, in Sw	An Introduction to WebObjects, in Swift	helge5	10.509795	-7.8007417	story	5.0	37.0	1527969881	-10.862105
17280112	Its interesting how languages divide	Its interesting how languages divide opinion. For me I think Swift is the best language around. One of the issues not addressed in the article (I believe) is performance, Swift is faster than Objective C because of the static type checking, which is a good thi	chadcmulligan	10.506279	-7.826124	comment	5.0	22.0	1528664358	-10.830992
17382493	How does having FooService and FooSe	How does having FooService and FooServiceImpl help with code organization at all? It brings nothing but unnecessary noise.	hocuspocus	9.786949	-7.3613205	comment	5.0	16.0	1529777225	-13.832448
17400665	Having a discussion with someone who	Having a discussion with someone who quotes Dijkstra can be frustrating. He wrote Go To Statement Considered Harmful and On the Cruelty of Really Teaching Computer Science and left behind a bunch of pithy quotes to mine besides. You end up having to explain wh	klodolph	10.6046	-7.1725736	comment	5.0	12.5	1530021935	-9.4156475
17438965	There's absolutely zero evidence for	There's absolutely zero evidence for the headline in the actual bulk of the article.SWIFT launched a new service last year, that is now handling 25% of all cross-border transactions, to the tune of 100 billion USD per day.Meanwhile, Bitcoin peaked last year at	henrikschroder	10.45469	-7.8296514	comment	5.0	22.5	1530498908	-10.830288
17500096	Am I understanding correctly that th	Am I understanding correctly that they had 3 engineers and >140 microservices?  Microservices definitely have their own costs and tradeoffs, but 140 services and 3 engineers sounds like just a terrible engineering choice.	dpark	9.780054	-7.355695	comment	5.0	14.0	1531242704	-13.815724
17500230	It's worse than that; it's my observ	"It's worse than that; it's my observation that most microservice architectures just ignore consistency altogether (""we don't need no stinking transactions!"") and blindly follow the happy path.I've never quite understood why people think that taking software mo"	stickfigure	9.784097	-7.3581104	comment	5.0	20.0	1531243533	-13.820242
17500605	> Usually microservices have their o	"> Usually microservices have their own databasesThat's news to me, and seems insane.Unless you mean ""their own database tables"", not ""database servers"". But that's just the same as having multiple directories and files in a Unix filesystem."	kolpa	9.7897215	-7.360824	comment	5.0	21.0	1531245706	-13.803395
17671463	Ask HN: How do you find a bug in a s	Ask HN: How do you find a bug in a software?	0x54MUR41	9.782625	-7.353973	story	5.0	6.0	1533218898	-13.79639
17677107	Ask HN: Is this microservices madnes	Ask HN: Is this microservices madness?	throwaway3265	9.775772	-7.345473	story	5.0	8.0	1533266859	-13.824012
17701079	It’s nice that Apple isn’t tying thi	It’s nice that Apple isn’t tying this functionality to OS updates. It was pretty bad a few months back when typing prediction went haywire and we had to wait weeks for a fix.Separately, I’m surprised Apple didn’t do this with Swift. I thought one of the goals 	ChrisLTD	10.471001	-7.8137093	comment	5.0	19.5	1533584843	-10.83857
17715252	µUBSan: clean-room reimplementation 	µUBSan: clean-room reimplementation of the Undefined Behavior Sanitizer runtime	ingve	10.654841	-7.042777	story	5.0	182.0	1533730898	8.492896
17724002	Yeah, I agree with your comments abo	Yeah, I agree with your comments about error handling. It’s far from ideal in non-interactive contexts. It’s especially disappointing since you could easily imagine something like Julia replicating Python’s success at transitioning code from interaction (e.g. 	Q6T46nT668w6i3m	10.244474	-7.8910623	comment	5.0	42.0	1533821528	10.691215
17724181	> 1-based indexing now seems like a 	> 1-based indexing now seems like a poor choice since Julia has become something more than the original mission of a better MATLAB or Octave. It’s a, admittedly, minor tragedy of Julia’s success.I’m curious as to why this is a problem outside numerical computi	peatmoss	10.502335	-7.5303593	comment	5.0	27.0	1533822976	9.809173
17728139	There's no inline caching is there t	There's no inline caching is there though? And so no 'mother of all optimisations' inlining. Or is my understanding of how Objective C works mistaken?You wouldn't dream of implementing a dynamic language these days designed for performance without basic polymo	chrisseaton	10.529621	-7.6206594	comment	5.0	16.0	1533846268	-7.391608
17739528	Yeah, but you forgot to copy the oth	Yeah, but you forgot to copy the other relevant part.> The fundamental problem was Objective-C was built on top of C. C inherently has pointers. It has uninitialized variables. It has array overflows. It has all these problems that even if you have full contro	pjmlp	10.548118	-7.637448	comment	5.0	42.0	1533992980	5.7294497
17739647	If Swift lets you override dealing w	"If Swift lets you override dealing with errors (think force unwrapping) then such security is pointless because ""someone will perpetrate it sooner or later.""
In practice, what we get is an overly pedantic language that gets in the way of the developer."	jmpt	10.493238	-7.8206067	comment	5.0	26.0	1533995400	-10.805252
17739575	I can understand the need to create 	I can understand the need to create a new programming langauge, but as the previous poster wrote, they rather recreated all the complexity of C++, instead of a more lean language. Also, Swift seems to suffer from overly static typing in its object oriented app	_ph_	10.487031	-7.819812	comment	5.0	12.5	1533993871	-10.84293
17808386	Microservices from a Startup Perspec	Microservices from a Startup Perspective	andima	9.783221	-7.353922	story	5.0	47.0	1534846258	-13.81602
18944617	GNU Octave: A high-level interactive	GNU Octave: A high-level interactive language for numerical computations [pdf]	mindcrime	10.229563	-7.675896	story	5.0	132.0	1547860417	10.0789385
18954225	I have two. One was caused by data i	I have two. One was caused by data inconsistency between services and regions. One is more hypothetical: the microservices had gotten to the point that no one knew how to start the system if all services are down, and it's possible that services have circular 	dehrmann	9.787405	-7.349743	comment	5.0	14.0	1548005568	-13.810085
18978832	Julia is interesting, but the block 	Julia is interesting, but the block syntax is a little off-putting. I'm not sure why someone would design a language that uses 'end' to delineate a block. Curly brackets make sense. Tabs make sense. But 'end'? All it does is make code harder to read and harder	mruts	10.213116	-7.968537	comment	5.0	18.5	1548256771	10.813048
18993585	I've been using Swift a few years no	I've been using Swift a few years now and at the start it was a massive pain moving to the new versions (1-2 was awful, 2-3 was bad but at least 3 was so much better it was worth it).It seems to have stabilised a bit now through 3, 4 and so far as I can tell t	jonplackett	10.472631	-7.8038087	comment	5.0	13.0	1548368120	-10.855876
18998271	Thats not the only thing, no? Doesn'	Thats not the only thing, no? Doesn't it also prevent e.g. other people/company from including that feature in their own programming language that doesn't use Swift at all?	hdra	10.4821415	-7.8205085	comment	5.0	33.5	1548427594	-10.835433
19012102	If Apple is indeed granted the paten	If Apple is indeed granted the patent on Swift's optional chaining (as was recently posted https://forums.swift.org/t/apple-is-indeed-patenting-swift-f... ), we wouldn't see this in future Javascript, would we?	hsavit1	10.469321	-7.8200707	comment	5.0	14.0	1548604134	5.6406674
19130063	Well written explanation! I really e	Well written explanation! I really enjoy Swift but it's not as accessible as some of the other languages mentioned. I have a 2011 Macbook Pro and wanted to use the latest and greatest new Swift features. Unfortunately, my machine is too old to upgrade to Mojav	igotsideas	10.4574375	-7.8191814	comment	5.0	14.5	1549833200	-10.851092
19195296	@50m in they discuss the problems of	@50m in they discuss the problems of using Swift on non-iOS platforms.  How far is Swift from being a good cross-platform language?	melling	10.459984	-7.818436	comment	5.0	30.5	1550531160	-10.823603
19233759	I did a 5000 line dissertation proje	I did a 5000 line dissertation project in Octave after rejecting Julia. Reason : I had derived the math in linear algebra including Kronecker products; the math mapped to Octave pretty directly, but Julia requred me to translate all the Kronecker products to l	forkandwait	10.189431	-7.9205823	comment	5.0	15.5	1550936388	10.665949
19239952	Yes, shared database is an anti-patt	Yes, shared database is an anti-pattern in micro services architecture.If one shared database can serve your system well then you don't need microservices. You should build a monolith instead.The main reason for using microservices is scale. First ability to s	pritambarhate	9.80018	-7.3602743	comment	5.0	16.5	1551034452	-13.812307
19288170	GNU/Octave has a great strength and 	GNU/Octave has a great strength and weakness that it uses the Matlab language. This is great for many who are educated with Matlab but don't know much else. After some time I found Python and the ecosystem around numpy/scipy/matplotlib fit my problems much bet	std_throwawayay	10.217153	-7.7782545	comment	5.0	28.0	1551513730	10.434395
19383194	> It feels like we’re starting to pa	> It feels like we’re starting to pass the peak of the hype cycle of microservicesI feel like any article I see on microservices bemoans how terrible/unnecessary they are. If anything, we're in the monolith phase of the hype cycle =)If you're moving to microse	scarmig	9.77887	-7.363263	comment	5.0	16.5	1552507734	-13.8221855
19383784	Funny, but we saw a debate around mo	Funny, but we saw a debate around monolithic codebases and the monolithic image in Smalltalk.A team of three engineers orchestrating 25 microservices sounds insane to me. A team of of thirty turning one monolith into 10 microservices and splitting into 10 team	stcredzero	9.781439	-7.3630786	comment	5.0	30.0	1552511181	-13.827588
19511441	I learned Ada because I took a new j	I learned Ada because I took a new job back in 2008 (at Boeing, doing spacecraft modeling and simulation) and discovered on my first day that I would be using Ada.  Naturally, I was expected to just pick it up on my own (Not complaining, that's pretty much how	jcadam	10.657604	-7.723919	comment	5.0	26.5	1553775663	-5.1160946
19705861	What's the degree of backward compat	What's the degree of backward compatibility with FORTRAN releases? I imagine most FORTRAN codebases as being huge and old, so it makes me wonder how many can adopt the latest versions.	bberrry	10.455921	-7.4138556	comment	5.0	13.0	1555757991	8.768891
19710906	> Independent ScalabilityThis reason	"> Independent ScalabilityThis reason for microservices comes up over and over but I’ve never understood it.If you scale a monolith, only the hot code paths will use any resources. 
Having a monolith makes it _easier_ to scale as you can just scale a single app"	flibble	9.791438	-7.3595033	comment	5.0	12.5	1555830408	-13.824747
19717470	We should NOT do this. Swift is not 	We should NOT do this. Swift is not cross-platform! As nice a language as it is, Swift support for Linux and Windows seriously lags behind Mac.If we choose to elect Swift as an ML language, we're handing keys to a certain platform vendor. I don't want to be ti	echelon	10.470374	-7.8154726	comment	5.0	12.5	1555923496	-10.821702
19881629	This could be really cool given that	This could be really cool given that Swift is already very JavaScript-like (Edit: TypeScript, really). A JavaScript-like that you can run on the web and is just faster out of the box is appealing.Now if only Apple would put more effort into cross-platform supp	_bxg1	10.482355	-7.8127832	comment	5.0	24.5	1557518072	-10.843757
37610242	Hmm...Swift never struck me as a par	"Hmm...Swift never struck me as a particularly interoperable design.  Really rather the opposite.  It has weird and super-specific calling conventions, requires mangled identifiers, is uber-static, uses Swift syntax for its ""module"" files etc.And it turns out.."	mpweiher	10.498532	-7.8146133	comment	5.0	13.5	1695378360	-10.876582
37699628	Having used JAX quite a bit for nume	Having used JAX quite a bit for numerical computing (and having lectured on this use-case) I would say that a surprisingly large number of algorithms can be expressed as array[0] operations (even if it sometimes takes a bit of thinking).And, more importantly, 	nestorD	10.035945	-7.92477	comment	5.0	13.5	1695965397	10.5474415
37948969	Objective-C programmers say this, bu	Objective-C programmers say this, but I note that I've never once heard a Swift developer complain that it's too hard to discover API interface or keep things non-`public`.	glhaynes	10.465294	-7.8163443	comment	5.0	13.0	1697750938	-10.921577
37951330	It’s not nebulous.There are kinds of	It’s not nebulous.There are kinds of bugs that Swift can provably catch that Objective-C can’t.There are bits of safety that Swift can ensure without needing to do additional boundary checks or something else, leading to faster/smaller code.Perhaps biggest of 	MBCook	10.523522	-7.776273	comment	5.0	14.5	1697766330	-10.838577
37975878	Question for you: how does performan	Question for you: how does performance measurement and optimization work in that environment? Is the key some sort of meta tooling that understands relationships between microservices? How would you express such relationships in the first place?Q2: How do you 	x86x87	9.786556	-7.3585057	comment	5.0	13.0	1697986456	-13.819087
38070491	Network calls are a powerful thing t	Network calls are a powerful thing to introduce. It means that you have an impassable boundary, one that is actually physically enforced - your two services have to treat each other as if they are isolated.Isolation is not anything to scoff at, it's one of the	insanitybit	9.822117	-7.318251	comment	5.0	16.5	1698678977	-13.811677
38071694	If a monolith is well-factored, what	If a monolith is well-factored, what is the difference between it and co-located microservices?Probably just the interface - function calls become RPC. You accept some overhead for some benefits of treating components individually (patching!)What is the differ	wnolens	9.787049	-7.360203	comment	5.0	16.5	1698683235	-13.824953
38073224	Monolith->microservice is not a triv	Monolith->microservice is not a trivial change no matter how well-factored it is to begin with -- though being poorly architected could certainly make the transition more difficult!> Probably just the interface - function calls become RPC.This sounds simple, b	elevation	9.790674	-7.3616676	comment	5.0	12.5	1698689005	-13.824513
38073506	I think this is a false dichotomy. M	I think this is a false dichotomy. Most places I've worked with microservices had 2 or 3 approved languages for this reason (and others) and exceptions could be made by leadership if a team could show they had no other options.Microservices doesn't need to mea	superfrank	9.784862	-7.364178	comment	5.0	13.0	1698690101	-13.819447
38080441	It's a pretty common issue. If you h	It's a pretty common issue. If you have 2-3 services, it's pretty easy to manage. And if you have 1000, you likely have the infra to manage them and get the full benefit.But if you have 20 engineers and 60 services, you're likely in a world of pain. That's not	shados	9.783839	-7.353738	comment	5.0	16.5	1698727501	-13.814335
38382484	There are a few other active project	There are a few other active projects porting weather, ocean, and climate models to Julia, C++, or Python.Getting a weather or climate model from zero to production grade requires approximately 100 person-years, or $20M (personal experience). Because of extrem	milancurcic	10.469705	-7.3013196	comment	5.0	13.5	1700675420	8.784918
38455698	Microservices usually solve organisa	Microservices usually solve organisational problems not the technical ones. Like here it is probably very painful to deploy to the production.	antupis	9.787146	-7.352939	comment	5.0	15.5	1701233413	-13.794036
38594313	I really wish there was a more react	I really wish there was a more react/swiftui-esque TUI library. One day I'll get around to fixing the fundamental flaws in my crate [0][0]: https://docs.rs/intuitive/latest/intuitive/	enricozb	10.490521	-7.8258395	comment	5.0	12.5	1702237529	-10.846129
33237002	Compiling Swift Generics [pdf]	Compiling Swift Generics [pdf]	matt_d	10.533526	-7.816552	story	5.0	93.0	1666028098	-10.8425045
33242221	At some point I might have somewhat 	At some point I might have somewhat agreed with you but not so much lately.I've been using a lot of swift lately and it's one of the most expressive (and impressive) language of late.I've been blown away by its terseness which leads to incredible functionality	keyle	10.485317	-7.8170357	comment	5.0	16.0	1666059607	-10.828175
33330814	To everyone who worked on System Set	To everyone who worked on System Settings, you put in a ton of work, and you're all very talented to ship something in a new framework (SwiftUI) that has gone on to millions of devices.I only have one question: who was in charge of the thumbs up / thumbs down 	anonymouse008	10.448104	-7.825649	comment	5.0	23.5	1666707676	-10.83971
33332663	"Correctness please.
Zig is a way too"	"Correctness please.
Zig is a way too simple language to justify all the really easy to hit bugs.I'd give everything for a zig compiler that's 10 times as slow but actually compiles my code.Also testing infrastructure. Zig really needs fuzzing and property test"	j-pb	10.671393	-7.5036397	comment	5.0	34.0	1666714782	12.517729
33489744	Great post! So great that this will 	Great post! So great that this will be the first time I post a comment here on HN. I’m from Sweden and I’m passionate about two things currently.The first thing is that me, my wife, my mother and my father is building a house from scratch to me and my wife. I’	zuric	10.4780035	-7.8199425	comment	5.0	17.0	1667715611	12.867328
33500930	That's the point, Fortran today is a	That's the point, Fortran today is a DSL for computational science, that's it and mainly what it focuses on today. It is not (if it ever was) a general programming language.	noobermin	10.476933	-7.3984804	comment	5.0	20.5	1667793155	8.802492
33580186	I don't believe the spec ever calls 	I don't believe the spec ever calls out what is exactly supposed to happen for multiplication overflow, and this was left up to the implementation to decide what to do. That being said, libmusl implemented a short but sweet check [1]. Fun stuff.[1]: https://gi	warmwaffles	10.626102	-7.0572057	comment	5.0	41.5	1668314882	-6.9554534
33587727	You can try to build a monolith that	You can try to build a monolith that is modular enough to break up later. But I have never seen it happen, and I’ve been around for a while now.What actually happens, 100% of the time in my personal experience, is that you end up with both the old monolith and	twblalock	9.790637	-7.3587513	comment	5.0	12.5	1668376281	-13.82384
33628226	> All of this was being done before 	> All of this was being done before terms like service-oriented architecture existed.I feel like the first time I heard the term was early 2000's, and wasn't it a mainframe thing first? Dunno, just wondering.Anyhow, it's nicely written, very concise, and worth	kerblang	9.798453	-7.325255	comment	5.0	13.0	1668623933	-13.783383
33770566	Of course with well defined overflow	Of course with well defined overflow you can still end up with a nonsense result that just happens to be in your valid range of values. If you don't plan to harden your code against integer overflow manually you need a language that actively checks it for you 	josefx	10.623882	-7.0550456	comment	5.0	13.5	1669619272	-6.985689
33773507	SwiftUI might be slower than UIKit a	"SwiftUI might be slower than UIKit at the moment, but it has significantly more potential for performance improvements in the frameworks.With UIKit, developers mostly express the ""how"" – put this control at these coordinates etc. This makes it quite hard for t"	danpalmer	10.464474	-7.81725	comment	5.0	25.5	1669642836	-10.828782
33889339	In your monolith if you offload a re	In your monolith if you offload a request to a queue and have a background process processing the queue messages, what do you call that module processing messages? Is it a component of your monolith? I think a lot of teams would call it a microservice, I could	ramenmeal	9.850036	-7.3173304	comment	5.0	14.0	1670374591	-13.85365
33894582	This should be possible for static l	This should be possible for static languages? Since the width of the operands are known ahead of time, a wider integer can be unconditionally reserved on the stack for the result of the operation.I'm curious which dynamic language reallocates to store larger i	webstrand	10.661627	-7.0168977	comment	5.0	20.0	1670422771	8.708515
33938207	Zero-Cost Well-Defined Signed Intege	Zero-Cost Well-Defined Signed Integer Overflow in C++	signa11	10.623973	-7.053873	story	5.0	21.0	1670715130	-7.023855
35335699	My favorite personal Fortran story: 	My favorite personal Fortran story: I was passing by a WAY SMARTER THAN I COULD EVER HOPE FOR guy who was pouring over a two inch Print-out of some scientific code. He had been trying to troubleshoot a problem. I guess a comma was in the 80th column, which I r	zippyman55	10.463156	-7.4043207	comment	5.0	31.5	1679975578	8.83419
35371047	Has this guy not heard of Matlab? He	"Has this guy not heard of Matlab? He's acting like the idea of everything as an array is some niche forgotten thing in a long dead language, meanwhile practically every Engineering department is choc o bloc of people who take the ""everything is an array"" idea "	IIAOPSW	10.296326	-7.706176	comment	5.0	13.0	1680175868	-5.174541
35407444	Another option would be to define be	Another option would be to define behaviors for integer overflow and out of bounds memory access. Presumably they happen fairly often and it might be a good idea to nail down what should happen in those cases.	DangitBobby	10.607288	-7.040891	comment	5.0	15.5	1680412971	-6.9356265
28175586	How Actors Work Internally in Swift	How Actors Work Internally in Swift	andrekandre	10.6189	-7.8132586	story	5.0	123.0	1628894068	12.813673
28478764	Two other beliefs about Ada:1. It wa	Two other beliefs about Ada:1. It was designed by committee.According to Wikipedia, it was designed by a small team at Honeywell Bull in France. A different connotation from the label 'committee'. What is the more accurate description? It may seem unimportant,	open-source-ux	10.670091	-7.72977	comment	5.0	14.0	1631259628	-5.1215672
28511084	Why is that, though?  Is it merely b	Why is that, though?  Is it merely because it's been institutionalized, or is there an inherent advantage that Fortran has (over say C or Rust) for things like weather forecasting?By no means am I suggesting that it wouldn't have an advantage; I'm just a young	ravenstine	10.451929	-7.422364	comment	5.0	20.5	1631538991	8.827937
12589230	Swift 3.0 Unsafe World	Swift 3.0 Unsafe World	robjperez	10.451042	-7.849536	story	5.0	74.0	1474981025	-10.822546
12687603	Ask HN: Any direct experience using 	Ask HN: Any direct experience using QA services	JourneymanCoder	9.890354	-7.209038	story	5.0	10.0	1476213201	-13.816226
12739817	For anyone interested in similar too	For anyone interested in similar tools, Microsoft recently published a protocol[1] for this type of service, and an implementation[2] of it for VSCode+NodeJS.Swift also has a library[3] called SourceKit which does the same thing for Swift – it can run as an ou	favorited	10.56762	-7.7803836	comment	5.0	28.0	1476835247	-10.81478
12790288	Great. Great great great. A thousand	Great. Great great great. A thousand times great. We've been slowly converting our iOS projects over to Swift over the past year and the results have been tremendous (a ~40% drop in LOC from ObjC, among many other benefits). Really the only language-level feat	ruddct	10.476267	-7.8232045	comment	5.0	59.5	1477419991	-10.844061
12854081	Not really.GNU/Linux doesn't have de	Not really.GNU/Linux doesn't have desktop stack capable of matching Objective-C, Swift frameworks both in feature set and related GUI tooling.	pjmlp	10.473247	-7.7767215	comment	5.0	27.5	1478090622	-10.782251
12994004	Introduction to Swift Intermediate L	Introduction to Swift Intermediate Language [video]	adamnemecek	10.475343	-7.822949	story	5.0	46.0	1479571254	-10.854067
13067807	As per Wikipedia FORTRAN II appeared	As per Wikipedia FORTRAN II appeared in 1958 [1]. Don't remember Javascript being around at that time. Am I missing something?[1] https://en.wikipedia.org/wiki/Fortran#FORTRAN_II	dgudkov	10.473844	-7.402513	comment	5.0	13.0	1480471046	8.763718
13118060	  Java uses table dispatch by defaul	"  Java uses table dispatch by default, but you can opt into
  direct dispatch by using the final keyword. C++ uses direct
  dispatch by default, but you can opt into table dispatch by
  adding the virtual keyword. Objective-C always uses message
  dispatch, bu"	CalChris	10.666833	-7.699373	comment	5.0	17.5	1481056478	10.279582
13132749	Passing the very first 4 bytes you r	Passing the very first 4 bytes you receive straight to malloc with no sanity checking? I suspect that application is riddled with other vulnerabilities!	jstanley	10.659181	-7.1127925	comment	5.0	38.5	1481221913	8.833313
13205285	Funny how people here mention source	Funny how people here mention source breaking change as the main issue with the language. I think it's because they haven't used swift on a large codebase. The main issue once you start to work on a big project are compiler crash ( https://github.com/practical	bsaul	10.481155	-7.826479	comment	5.0	27.5	1482058177	-10.881275
13207648	Agreed. I want to write numeric soft	Agreed. I want to write numeric software, but don't want to use Fortran or C++. Rust looked great, but I couldn't find anything in this domain.	throwaway7645	10.647019	-7.4961166	comment	5.0	19.0	1482095343	8.773084
13210090	Linear Algebra is already a solved p	Linear Algebra is already a solved problem - there's no need to rewrite the many established C/C++/Fortran code that has been optimized for linear algebra over the last 40 years.Why re-write what has already been done? Stand on the shoulders of giants.	cbcoutinho	10.483833	-7.4010267	comment	5.0	14.0	1482133578	8.849867
13225799	To an extent... but their swansong v	To an extent... but their swansong vision of portable OPENSTEP was quickly shut down by Apple, which is a crying shame because if OPENSTEP was still around it would be keeping Microsoft competitive on the desktop front - instead of today's languished desktop d	DaiPlusPlus	10.448091	-7.702278	comment	5.0	17.0	1482280966	-10.695094
13272323	What programming language should the	What programming language should the OS be?  That's the problem.  What he's saying will never happen, because nobody can design a programming language that will fit all use cases.  Unix is polyglot by design; that's a feature and not a bug.Everybody wants the 	chubot	10.502151	-7.3931413	comment	5.0	22.5	1482948584	8.872886
13308656	In the Top 10 there are only two lan	In the Top 10 there are only two languages which are not self-hosted. Swift with C++ and PHP with C.I know the reasoning for Swift being that it's just not practical at this point reimplementing everything in Swift, but looking at the others it seems to be the	kiliankoe	10.524922	-7.749878	comment	5.0	15.5	1483446442	-10.84386
27536981	Article mentioned Apple with their o	Article mentioned Apple with their own mainstream language, I suppose Swift. But it's far from being mainstream, didn't gain the desired attention and failed miserably with TensorFlow. Thus, it's a niche language making no sense outside of the Apple ecosystem.	xvilka	10.475909	-7.829414	comment	5.0	12.5	1623914522	-10.852056
27570891	At the Fortran Wiki http://fortranwi	"At the Fortran Wiki http://fortranwiki.org/fortran/show/Articles there are links to benchmarks comparing Fortran to Julia and other languages.Looking at 
https://github.com/arturofburgos/Assessment-of-Programming-L...
https://www.matecdev.com/posts/numpy-julia"	Bostonian	10.210801	-7.911181	comment	5.0	18.0	1624202558	10.664917
27572043	And slower (to start) than both of t	And slower (to start) than both of them. I tried julia to write some scripts that were previously in numpy, but the slow start threw me off. I hope they solve this because it's a great language.	elcomet	10.206387	-7.9627767	comment	5.0	21.5	1624209589	10.653266
27703519	Honest question, why should you use 	Honest question, why should you use FORTRAN?Does FORTRAN have any traction outside of scientific computation?	tored	10.469998	-7.4081087	comment	5.0	13.0	1625168075	8.818104
27768305	Avoid microservices entirely and you	"Avoid microservices entirely and you won't adopt 50 unnecessary cloud services and external SaaS platforms to help you manage those 50 services. If each business unit/domain has their own ""monolith"" it serves the same goals without the hype and complexity."	dreyfan	9.784526	-7.353639	comment	5.0	17.5	1625716503	-13.822704
12095063	Writing your library in Objective-C 	Writing your library in Objective-C is silly if you mean to use it from Swift. The languages are incredibly different (value types, powerful protocols, generics vs. just objects and simple C types), so you'll heavily limit yourself by writing in Objective-C. N	chris_7	10.559643	-7.7715383	comment	5.0	19.0	1468512931	9.631875
12109751	    The following line will give an 	"    The following line will give an error if you try to compile it in Swift 3:

    let a: Double = -(1 + 2) + -(3 + 4) + 5

Reminds me when Golang said you should avoid using numbers greater than about 20k in your program to avoid GC problems. I.e. farcical."	smegel	10.566247	-7.8050604	comment	5.0	16.5	1468753746	-10.847787
12134188	"Equating ""Microservices"" with ""Infor"	"Equating ""Microservices"" with ""Information Superhighway"" really shows the tech bubble that this article is written in.  ""Information Superhighway"" was a vacuous but mainstream term used by politicians and public figures.  ""Microservices"" is a tech hype train l"	dasil003	9.784399	-7.3599014	comment	5.0	21.5	1469067842	-13.816302
12134881	I see several people criticize micro	I see several people criticize microservices here. We've been doing it for about 6 years and are extremely happy with it.A core principle which a lot of people and articles ignore, though, is reusability. I bring this up on HN every time there's a discussion a	lobster_johnson	9.790242	-7.3519564	comment	5.0	28.5	1469078130	-13.820111
12304084	In practice micro services mean that	In practice micro services mean that you turn a function or method call into a network request. This doesn't really limit communication bottlenecks. It is often more difficult to argee on a network interface than on a simple function or object interface. It's 	jules	9.782249	-7.3404737	comment	5.0	19.0	1471436317	-13.813823
12377248	Ask HN: Microservices testing best p	Ask HN: Microservices testing best practises?	surprised_dev	9.845716	-7.148909	story	5.0	15.0	1472403487	-13.798806
12390134	Lessons Learned While Building Micro	Lessons Learned While Building Microservices	sundip	9.7865095	-7.356767	story	5.0	60.0	1472565437	-13.813115
12392300	The canonical open source alternativ	The canonical open source alternative to S3 https://wiki.openstack.org/wiki/Swift	frugalmail	10.479221	-7.809453	comment	5.0	17.5	1472579729	-10.816857
12509173	My approach is to design like micros	My approach is to design like microservices and develop like a monolith. Thinking about microservices will force you to define module, their boundary and interfaces. A monolith will simplify deployment, refactoring. Once your code matures, you'll know if any m	blackoil	9.833201	-7.325922	comment	5.0	12.5	1473968551	-13.804363
12512534	Type Erasure Magic in Swift	Type Erasure Magic in Swift	ulhas_sm	10.586055	-7.8057013	story	5.0	61.0	1474012222	-10.863712
12519776	But consider this:You are using mysq	But consider this:You are using mysql, you make a transaction with say deposit and withdraw.What happens on the mysql machine if you pull the plug exactly when mysql has done the deposit but not the withdraw?The ONLY difference between SQL transactions and NoS	bullen	9.78735	-7.361487	comment	5.0	14.5	1474103095	-13.817075
28596361	The RC had a lot of bugs and was unu	The RC had a lot of bugs and was unusable for some users on r/iOSBeta. The actual release is indeed two builds newer (19A346) so hopefully they've fixed these issues.Edit: looks like it's only available for people seeking it out[0]. Maybe they won't auto-updat	judge2020	10.467423	-7.766594	comment	5.0	15.0	1632159215	5.592118
28618802	Swift has way too many shorthand syn	Swift has way too many shorthand syntaxes. It feels nice from a language design perspective but when teaching Swift, you can see how confusing it is for the students. In larger codebases a lot of shorthands are forbidden by the organizations for consistency. S	msoad	10.478913	-7.8246074	comment	5.0	19.5	1632330164	-10.835437
28619406	I find it hard to believe that anybo	I find it hard to believe that anybody is faster coding in objc than swift, if you control for garbage code. It was easy to quickly write buggy messes in objc - swift made that a lot harder, and is also a much more ergonomic and productive language in my exper	kennywinker	10.494238	-7.795464	comment	5.0	21.5	1632332799	-10.842491
28619614	This just isn't true. Given equal fa	This just isn't true. Given equal familiarity, Swift will be vastly more productive at any skill level. Of course you can always tunnel deeper into more sophisticated solutions using Swift, since Obj-C lacks most of its capabilities, but that's hardly an equal	jshier	10.480145	-7.797824	comment	5.0	15.5	1632333793	-10.831247
28623157	So is Objective-C kinda going away a	So is Objective-C kinda going away after all?If I did a greenfield iOS or OSX app would it be malpractice to do it in Objective-C?Because I actually adore that language. Haven’t used it lately, but I do love it.	whiddershins	10.481172	-7.744392	comment	5.0	14.5	1632351713	5.652375
28635245	I especially dislike when people tal	I especially dislike when people talk about microservices and scalability like they are a solution. Most companies won't see the kind of scale Facebook/Google/etc sees, not because they won't have that much clients, but also because there's a good chance that 	Zababa	9.784521	-7.354404	comment	5.0	14.5	1632430506	-13.820326
22316166	Microservices are for companies with	Microservices are for companies with 500+ engineers.They help teams manage complex interdependencies by creating strong ownership boundaries, strong product definition, loose coupling, and allow teams to work at their own velocities and deployment cadences.If 	echelon	9.7809105	-7.3593283	comment	5.0	27.5	1581582030	-13.817908
22404769	Edge case removed:   for i=0 to 10 {	"Edge case removed:   for i=0 to 10 {print(a[i])} vs for x in a {print(x)}

With functional programming it gets even better:a.filter {}.map{print}Pseudo code, of course.  I list several “functional“ examples in Swift here:https://github.com/melling/SwiftCookBoo"	melling	10.643667	-7.785755	comment	5.0	24.0	1582558004	-10.836647
22414764	I was really excited about SwiftUI a	I was really excited about SwiftUI after having done a lot of React development recently. The declarative style is so much nicer than the MVC/procedural code that regular UIKit code becomes.After 30 minutes of updating Xcode I was able to start writing SwiftUI	erikrothoff	10.455753	-7.8198147	comment	5.0	16.0	1582649694	-10.794016
22538080	And you trust a message from an unkn	And you trust a message from an unknown source? You can't simply memcpy according to some length indicator, that's just not safe. You still have to parse and validate.	cptwunderlich	10.641255	-7.0468073	comment	5.0	20.0	1583864920	-7.0681715
22625974	I have tried Mathematica for small d	"I have tried Mathematica for small duration and in general was wowed by it.For free CAS I would recommend to give Axiom or FriCAS(more actively developed) a run.http://fricas.sourceforge.net/
https://en.wikipedia.org/wiki/Axiom_(computer_algebra_system..."	veer-chah	10.316453	-7.140553	comment	5.0	14.5	1584611486	9.798699
22713716	CQRS and microservices has so much o	CQRS and microservices has so much overhead, I'm amazed at how many companies adopt microservices without having anyone know a single thing about distributed systems. I think people underestimate the glue required to make microservices be useful. I had a simil	cameronfraser	9.78732	-7.3564987	comment	5.0	31.0	1585423860	-13.761485
22823211	I would disagree, first Go has been 	I would disagree, first Go has been tremendously successful and yes will have generics soon. The ML community really needs a better language than Python, the current alternatives (Julia, Nim, R) are alright but seem to miss the mark in this arena. I see few da	yahyaheee	10.583513	-7.8561816	comment	5.0	31.5	1586444647	2.6193242
22824262	None of them use Python either. A lo	None of them use Python either. A lot just use MATLAB.	zmk5	10.254094	-7.7440147	comment	5.0	18.5	1586449996	10.412958
23017239	How many places have gone from monol	How many places have gone from monolith to microservices and back to monolith?  I'm sure there's been quite a few.	fouc	9.798914	-7.3439574	comment	5.0	17.0	1588153248	-13.826386
23021732	We do separate code repos, my last p	We do separate code repos, my last place did separate repos, place before that did monolith(s) but still did separate repos for anything not in the same monolith. I'm pretty sure it's more common to do separate repos, rather than mono-repo, for separate servic	zzbzq	9.78626	-7.3449273	comment	5.0	12.5	1588180977	-13.825611
23047492	“The trap is insidious in software a	“The trap is insidious in software architecture. When we adopt something like microservices, we try to make it so that each service is individually simple. But unless this simplicity is so constraining that your actual application inherits it and is forced int	x3haloed	9.7800045	-7.3573117	comment	5.0	13.5	1588375036	-13.819554
23082344	A credible leak has been that Xcode 	A credible leak has been that Xcode is coming to iPad (and iOS?). Not sure how I feel about it, I'd prefer more time be spent improving it for Mac use (where, in my opinion, 99% of developers will do their work anyway).My guesses from the software side:- A new	rudedogg	10.465381	-7.8105993	comment	5.0	16.0	1588698951	-10.834007
23126285	This image on Acer's Swift product p	This image on Acer's Swift product page really answered the question for me.https://static.acer.com/up/Resource/Acer/Laptops/Swift_7/Ove...	PaulWaldman	10.460706	-7.8318467	comment	5.0	12.5	1589043252	-10.818905
23137610	LLVM has devolved into complete garb	LLVM has devolved into complete garbage in Xcode for large Swift projects. Slowless aside, at least half the time it won't display values for variables after hitting a breakpoint, and my team has to resort to using print statements to debug issues.	dangwu	10.506882	-7.8067417	comment	5.0	14.5	1589156679	-10.826512
23160114	Fortran Standard Library	Fortran Standard Library	sedachv	10.456994	-7.40263	story	5.0	97.0	1589318885	8.779685
23170899	If Fortran has been around for this 	If Fortran has been around for this long without a standard library, then what do people use now? Does each compiler have its own? Are they very different? Is there much of a need for this since it hasn't existed for 60+ years?	azhenley	10.472791	-7.396428	comment	5.0	15.0	1589398799	8.799776
23202369	"    Creating a good cross-platform
 "	"    Creating a good cross-platform
    GUI framework is probably harder
    than creating a good cross-platform
    language.

Way way way way way harder, I'd think. It's basically never been done in the modern era. All the successful ones from the past look ("	veidr	10.466361	-7.8197722	comment	5.0	16.0	1589626332	-10.835647
23354668	Is there any recent rundown on the s	Is there any recent rundown on the state of server-side Swift in general? I know there was a lot of discussion when IBM stopped working on it back in January.At the broadest level, I wonder what the footprint of Swift at runtime is, both in terms of CPU and RA	avolcano	10.51626	-7.830337	comment	5.0	16.0	1590781706	-10.842899
34042758	I once learned Ada for a NATO projec	I once learned Ada for a NATO project. I was amazed by the simplicity you could start a thread and monitor it.Its not dead but you will never see it trending. Its just a niche language as most of the languages at the post are.	melenaos	10.638548	-7.722356	comment	5.0	17.5	1671395113	-5.1560187
26500078	This video is bananas awesome. I'd s	This video is bananas awesome. I'd start writing Julia right now if it wasn't for the 1-indexing.	tptacek	10.183626	-7.97817	comment	5.0	26.5	1616048339	10.674985
26521681	>To achieve goals 1 and 2 together, 	>To achieve goals 1 and 2 together, we use static knowledge of the element type: when it is statically known that the element type is not a class, code and checks accounting for the possibility of wrapping an NSArray are eliminated. An Array of Swift value typ	coldtea	10.615783	-7.79891	comment	5.0	13.0	1616229570	-10.825482
26809571	And then there's the languages named	And then there's the languages named after people, like Ada, Julia or Turbo	m463	10.574431	-7.5646925	comment	5.0	16.5	1618418556	-4.7065873
27048439	Fortran is suddenly hot again. But i	Fortran is suddenly hot again. But its future is still far from certain	hkmaxpro	10.450329	-7.4113865	story	5.0	24.0	1620212672	8.820134
27097482	> So far in the article, I’ve been u	> So far in the article, I’ve been using service-oriented and microservices as interchangeable terms. They are the same thing, I believeMicro services and SOA are actually different things, despite sharing similarities.> however microservices term does lead so	cygned	9.788724	-7.3602395	comment	5.0	13.5	1620578969	-13.814408
27117505	IME the strict conversion rules in R	IME the strict conversion rules in Rust and Zig can be quite a bummer for somebody coming from C because they may add a surprising amount of friction in day-to-day coding. Yes, C code is often way too sloppy when it comes to picking the right type (signed vs u	flohofwoe	10.668934	-7.21206	comment	5.0	23.5	1620737813	-6.9791937
27335594	This probably means that a significa	This probably means that a significant number of important apps are still coded in Objective-C, which would not be a big surprise. Is the momentum of Swift language adoption slowing down? If so, perhaps Apple is also hedging their bets.	chmaynard	10.478726	-7.775607	comment	5.0	12.5	1622401049	-10.788289
14779720	I all comes back to Conway's Law (Yo	I all comes back to Conway's Law (Your software will look like your organization).Microservices allow and require low coupling in the organization. If you want to reduce coupling in your org, you'll be well served by microservices. If you want tight collaborat	phamilton	9.782484	-7.3629055	comment	5.0	16.0	1500162117	6.624943
14938183	I don't see what's micro about losin	I don't see what's micro about losing your job for wrongthink.	amiga-workbench	9.760782	-7.3307433	comment	5.0	25.0	1501970955	-13.816648
14973107	One of the problems I find with Swif	One of the problems I find with Swift is that Apple doesn't go back and properly update their sample code at developer.apple.com.  They have examples that will not build.  If you search you can find folks that have patch sets, but they really need to fix the e	protomyth	10.469112	-7.819632	comment	5.0	17.5	1502309438	-10.84641
14973509	For ios : look at the number of vari	"For ios : look at the number of various apis you can use to do widget positionning and animations : calayer, uiview spring n struts, constraints, physic based, and yet none compose well with each other.
IOS also doesn't have any good tech for offline storage ("	bsaul	10.560846	-7.694474	comment	5.0	23.0	1502312144	-10.784012
15051877	All this and handling overflow still	All this and handling overflow still doesn't make the list.  Had it been the case that easy considerations for overflow were baked into C back then, we probably wouldn't be dealing with hardware where handling overflow is even more difficult than it would have	carussell	10.561992	-7.046443	comment	5.0	13.5	1503121311	-6.968771
15075353	How would a therom prover like z3 ha	How would a therom prover like z3 handle this, out of interest? Isn't it the ideal domain for it?	orf	10.5715065	-7.2630935	comment	5.0	12.5	1503428083	12.451949
15116155	It is not surprising that C gets tha	It is not surprising that C gets that much of a bad reputation when devoloper show such poor capacity at managing errors;  malloc(3) return values are never checked and everything is expected to always succeed, throughout the source tree.	alacombe	10.668251	-7.110827	comment	5.0	21.5	1503924492	8.855066
15136457	A Discussion on Dijkstra's Algorithm	A Discussion on Dijkstra's Algorithm	WindUpDurb	10.446125	-7.1670837	story	5.0	46.0	1504130424	-9.431732
15155933	Obj-C is nice, but it's not like the	Obj-C is nice, but it's not like they couldn't use C++.So why not just C++? why this obsession with C even when it makes no sense?	camus2	10.625377	-7.4718523	comment	5.0	21.0	1504359899	5.606278
15161421	reading old C like this, I always wo	reading old C like this, I always wonder how could people code like this back then but apparently it was transpiled from fortran. So I'd assume the original code looked better. I dug around and found it, for comparison here is the original rooms.f vs. rooms.c:	larrykwg	10.467619	-7.3976464	comment	5.0	22.0	1504447031	8.785006
15166189	Seems to imply that because there ar	Seems to imply that because there are features in the software, it would be preferable to get a build with fewer features for the sake of quality; but that makes no sense, removing features from your build isn't going to improve the features you keep. A lot of	microcolonel	9.761109	-7.3223515	comment	5.0	12.5	1504507037	-13.803649
15346058	On the other hand I can't wait when 	"On the other hand I can't wait when Swift becomes general, non-Apple language, available on most platforms (including the most popular one) ""with batteries"" - that will be the end of Go and Rust I think :)"	zerr	10.501202	-7.836672	comment	5.0	32.0	1506503426	-10.867824
15358843	What's New in Swift 4	What's New in Swift 4	astigsen	10.463478	-7.832913	story	5.0	71.0	1506618305	-10.859627
15404303	I really wish Swift could find a way	I really wish Swift could find a way to be useful on platforms other than Apple. I'd be willing to commit more to it if I could write truly portable code in it. It's got a good start on Linux, but Windows and Android would be cool too. Though Kotlin won out ov	hellofunk	10.48658	-7.797274	comment	5.0	20.0	1507148938	-10.845457
15458326	Optimization makes a huge difference	"Optimization makes a huge difference with arrays in Swift. The following took 2.37 seconds (!) on my machine un-optimized:     var bytes = [UInt8](count: 16_737_732, reapeatedValue: 0)

This was slow enough to block my UI (spinning pizza) -- so I ran it on a b"	waynecochran	10.507629	-7.7891135	comment	5.0	16.0	1507819493	-10.833351
15478474	One of the key points of the article	One of the key points of the article is that there is a lot of legacy code written in Fortran. As a former high energy physicist, I have an anecdote here that some people might find interesting.There was a library written in Fortran called CERNLIB which includ	foob	10.476679	-7.4011345	comment	5.0	13.5	1508092780	8.819781
15479226	I have to be honest with you, as som	I have to be honest with you, as someone who writes in both C++ and Python, I really do not see Python being more of a candidate than C++ for displacing Fortran.Can you clarify why you think Python might be able to do it? For scientific computation with high p	dsacco	10.533849	-7.4059005	comment	5.0	17.0	1508100572	8.826998
15478135	David Baker's Rosetta code, which ma	David Baker's Rosetta code, which made him a pile of money, is IMO a spectacular example of craptastic C++ written by people who really didn't understand C++ but didn't let that deter them from using every single feature of the language, badly.  Some years bac	scottlegrand2	10.472288	-7.405334	comment	5.0	16.0	1508089424	8.842613
28886764	None of that has really anything to 	None of that has really anything to do with systems thinking. That models change, omit information and don't represent reality as such is true for any kind of thinking, systems or otherwise. That's just a truism.At its core systems thinking is an antidote to r	Barrin92	9.771189	-7.3442593	comment	5.0	20.0	1634378912	-13.8184805
29000459	Nah Zimmers atrocious score was at l	Nah Zimmers atrocious score was at least a tad worse.	tokai	10.662661	-7.5325623	comment	5.0	13.0	1635256805	12.548713
29034578	This seems like a super interesting 	This seems like a super interesting feature to have as part of a language. I hope Swift can eventually become more of a general purpose language, as its actually pretty nice and they're introducing features like this that clearly targets server-side programmin	DenseComet	10.482448	-7.815272	comment	5.0	29.5	1635475111	-10.839885
29035328	They are adding features they 'took'	They are adding features they 'took' to put it kindly from other existing, mature implementations without giving any credit or acknowledgement.Not only that, they expect people to test their beta grade software because they keep releasing it half baked ever si	alexashka	10.469098	-7.804321	comment	5.0	15.5	1635483742	-10.846194
29124055	This is why some embedded systems do	This is why some embedded systems don't do malloc (IIRC...been a while since I've read much about those).	davidw	10.668637	-7.1128535	comment	5.0	14.5	1636142145	8.880856
29129234	They're pretty rad. You can even get	They're pretty rad. You can even get a few (dozen) for free: https://blog.gpt4.org/jaxtpuIncidentally, that blog runs on a TPU. You can just SSH into them.Stuff like that is why I think Jax will beat pytorch in the long run: https://blog.gpt4.org/mlmindA coupl	sillysaurusx	10.016394	-7.9360743	comment	5.0	18.0	1636197292	10.563062
29216907	PyTorch Fortran Bindings	PyTorch Fortran Bindings	Bostonian	10.477444	-7.4136925	story	5.0	23.0	1636894207	8.791344
29403426	Microservices are not a solution, th	Microservices are not a solution, they're a capability. It's powerful for a team to be able to deploy a tiny service with the absolute minimum amount of explicit plumbing to meet operational requirements. Whether they should break their system up this way is a	acjohnson55	9.785052	-7.360338	comment	5.0	17.5	1638365275	-13.816002
29403523	Splitting a system into microservice	Splitting a system into microservices can help individual teams be better stewards of their part of the system.  They can release on their own schedule, they can use their own linting rules, heck even a different language, and they can have better control of i	foobarian	9.789422	-7.3547587	comment	5.0	19.5	1638366118	-13.8222475
29429451	Supercharged high-resolution ocean s	Supercharged high-resolution ocean simulation with Jax	dionhaefner	10.030929	-7.9139743	story	5.0	90.0	1638536196	10.572248
29548736	"7 vulnerabilities with impact ""may b"	"7 vulnerabilities with impact ""may be able to execute arbitrary code with kernel privileges"" :-(Are these things in Objective-C or Swift? Does Swift memory management make buffer overflows and use-after-free mistakes harder to make?"	cyounkins	10.506695	-7.7575192	comment	5.0	12.5	1639461932	-10.811174
29576857	Maybe it is just me, but I always un	Maybe it is just me, but I always understood that properly designed microservices have their own specific datastore, which is not shared with other microservices even if these all collaborate to the same process.If this is actually (still) true, that means tha	Pamar	9.781873	-7.361729	comment	5.0	16.5	1639650304	6.6166515
29582293	Guy who hates micro services here (w	Guy who hates micro services here (worked at a startup that tried to adopt them because the CTO's consulting friend who works in enterprise convinced him of how great it was).From what I can tell, micro services are primarily a solution to an organizational pr	drbojingle	9.782449	-7.35984	comment	5.0	14.0	1639681222	-13.817511
29584157	You're talking about something very 	You're talking about something very odd here... a monorepo, with a monolithic build output, but that... transforms into any of a number of different services at runtime based on configuration?Is this meant to be simpler than straight separate codebase microser	jameshart	9.78956	-7.34882	comment	5.0	13.5	1639690066	-13.816778
29619604	is anybody doing anything with swift	is anybody doing anything with swift outside of iphone or mac app development?  I recall there was some effort to make it something more than that but I think that's been mostly abandoned at this point since there are so many much better languages already	VWWHFSfQ	10.464673	-7.8129983	comment	5.0	15.5	1639956058	-10.830993
25466498	I find JAX really exciting. The idea	I find JAX really exciting. The idea of numpy with autograd is exactly what Pythonistas want. The elephant in the room, though, is “why not Pytorch?”Everyone knows JAX is what Google realised Tensorflow should have been when they realised how much of a joy Pyt	jphoward	10.018989	-7.924631	comment	5.0	13.5	1608295303	10.508652
25499397	This is a great article - One thing 	"This is a great article - One thing I always try and vouch for is that you don't need to go ""all-in"" on microservices. There is nothing wrong with having a main monolithic application with a few parts separated out into microservices that are necessary for per"	dpix	9.789895	-7.3584332	comment	5.0	15.5	1608583843	-13.844681
25500052	> ...microservices are a technical t	> ...microservices are a technical tool for solving a people and organizational problemThey're also available to solve technical problems. For instance, it's hard to run some python3.5 and some python3.9 in a python monolith. A monolith must choose one python 	humanrebar	9.792576	-7.354746	comment	5.0	17.5	1608587485	-13.821714
25568221	I guess it isn’t popular in these pa	I guess it isn’t popular in these parts, but there is a simplicity to Matlab that’s hard to beat for lowly mechanical engineers. The documentation is also generally excellent.Unfortunately most undergraduates get locked in early with free student versions and 	knolan	10.229186	-7.763491	comment	5.0	16.5	1609234810	10.412267
25683741	SymPy is fantastic and impressive an	SymPy is fantastic and impressive and I am a fan. It however does few things better than the program it is directly trying to compete with, namely Mathematica. This gives me scary flashbacks to the early 'Linux on the desktop' advocates, whose main argument wa	prof-dr-ir	10.316506	-7.2110667	comment	5.0	15.0	1610107072	9.916689
25720993	I've seen this in other Julia discus	I've seen this in other Julia discussions. Can someone show me a use case other than trying to cycle over the same data (EDIT: or range) repeatedly where 0-based is fundamentally better than 1-based? I mean, that's the only case I can think of where 0-based is	Jtsummers	10.2334795	-7.9022217	comment	5.0	18.0	1610318584	10.640444
25782818	Saw this earlier in Swift forum too.	Saw this earlier in Swift forum too. It demonstrate that performant Swift code is possible, but with a lot of profiling. I initially choose to use Swift in hope of better performance characteristics than Python (for some pretty heavy data preprocessing prior f	liuliu	10.48641	-7.8135924	comment	5.0	13.5	1610659565	-10.842036
26184529	Ask HN: Converted a monolith to micr	Ask HN: Converted a monolith to microservices? Did you quantify the savings?	jedberg	9.7907295	-7.3540297	story	5.0	3.0	1613677670	-13.821345
26195689	This isn't really true though. It's 	This isn't really true though. It's not like you're suddenly adding consensus problems or something, you don't need to reinvent RAFT every time you add a new service.Microservices put function calls behind a network call. This adds uncertainty to the call - bu	staticassertion	9.846735	-7.3408146	comment	5.0	18.0	1613756712	12.84627
26249065	> NB: one may also just call them “s	"> NB: one may also just call them “services” with no practical loss of generality and sounding less like technobabble to everyone else.This is completely untrue, and I think it's part of the problem with discussions about microservices. People think it means """	staticassertion	9.784663	-7.3584504	comment	5.0	16.0	1614168470	-13.819504
26278358	I’m the founder of a YC company in t	I’m the founder of a YC company in the current batch focused on solving this exact problem! https://www.emergetools.comWe parse Obj-C and Swift runtime metadata to determine size contributions of individual types and functions in your app. We use this analysis	sond813	10.4944515	-7.7714505	comment	5.0	16.5	1614365775	2.601996
13676567	This is already being done.Swift 4 (	This is already being done.Swift 4 (unreleased) has source compatibility with Swift 3 [0], so all Swift code working today should work in the next version, no migrator necessary.Additionally, the goal of Swift 4 is to finalize the ABI.  Once that is done, you 	drewcrawford	10.485409	-7.83368	comment	5.0	16.0	1487450404	-10.842946
13697705	Show HN: Swift SOAP Client library t	Show HN: Swift SOAP Client library through code generation	bouke	10.544691	-7.775482	story	5.0	15.0	1487700016	-10.885084
13749472	I announced two weeks ago that we ar	I announced two weeks ago that we are shutting down Staffjoy [1] and open sourcing our code. Last week, our primary V1 repo was submitted to HN [2]. Yesterday, I open-sourced our V1 microservice Chomp for computing shift scaffolds from forecasts [3]. I also al	philip1209	9.771136	-7.350526	comment	5.0	14.5	1488237352	-13.814258
13820908	Sorry to be OT, but since you're the	Sorry to be OT, but since you're the CEO I do hope you found out if Rollout supports swift as well :^)https://news.ycombinator.com/item?id=8158046	gattilorenz	10.452322	-7.844083	comment	5.0	13.0	1488987365	-10.855352
13830234	Why? Why choose Swift over a languag	Why? Why choose Swift over a language with an established framework ala python, ruby, ASP.NET, Node.js ?	Perignon	10.479376	-7.828884	comment	5.0	13.5	1489076100	-10.8434725
13830379	Swift is fast and the language is ni	Swift is fast and the language is nice and all, but this feels more like propaganda. Let's not forget IBM and Apple have become friends recently.[1]I really don't see Swift becoming a popular full stack solution outside of environments invested in iOS and macO	pier25	10.490759	-7.7820272	comment	5.0	15.0	1489077306	-10.738363
13830358	While Swift will compile on differen	While Swift will compile on different backends now, XCode is still the premiere Swift dev environment and will be for a good while. So a non Mac Swift dev won't be having a great time.The target market is really iOS devs who want the same language on the back 	wmil	10.46694	-7.8156457	comment	5.0	13.0	1489077168	-10.828845
13939027	Using Pseudo-URIs with Microservices	Using Pseudo-URIs with Microservices	pcalcado	9.781944	-7.362689	story	5.0	62.0	1490270814	-13.816674
13961053	I co-founded startup 6 months ago, s	I co-founded startup 6 months ago, since day 1 we use micro-services. For us the biggest benefit was that at the begin we could hire people knowing different programming languages (we managed to build a team of 5 in 3-4 weeks) and they could build a small part	vojant	9.784439	-7.3514037	comment	5.0	23.5	1490539906	-13.8250675
13960168	In Defence of the Monolith, Part 2	In Defence of the Monolith, Part 2	pieterr	9.839006	-7.265993	story	5.0	41.0	1490526608	13.4463215
14013772	Not sure why Ada is not taking off t	Not sure why Ada is not taking off these days. It is mature and has all the safety and concurrency bells and whistles:http://www.adacore.com/uploads_gems/07_safe_secure_ada_2005_...https://en.wikibooks.org/wiki/Ada_Programming/Taskinghttp://courses.cs.vt.edu/c	eternalban	10.666662	-7.7239637	comment	5.0	24.5	1491075808	-5.0992913
14107274	> A requirement of a specific framew	> A requirement of a specific framework for all services.Eh, I don't see this as an antipattern. Building disparate services but using the same frameworks/languages has tons of advantages and relatively few(none?) disadvantages.A few:- Engineers can move betwe	rco8786	9.802242	-7.3421755	comment	5.0	24.5	1492094098	-13.80968
14267555	> Compared to C or C++ it has the ad	> Compared to C or C++ it has the advantages of better complex floating point number support and better control of reproducible math resultsNo it does not have better complex types. C++11 added std::complex which is a standardized implementation of complex typ	gravypod	10.514259	-7.3796034	comment	5.0	26.5	1493923605	8.803922
14364860	Ugh, I know it's something that lite	Ugh, I know it's something that literally every programmer on earth can and often does bikeshed, but Swift just got string interpolation syntax wrong. Parentheses are something that are often part of the interpolated expression... they shouldn't be part of the	veidr	10.617962	-7.7487407	comment	5.0	16.5	1495082586	-10.81524
14368153	I'm really interested in Fortran bec	I'm really interested in Fortran because I love super down-to-the-metal optimisation stuff, but I have no meaningful use-case for it. Where would you recommend someone start if they wanted to get into modern Fortran?	nonsince	10.456207	-7.417739	comment	5.0	16.0	1495122043	8.777378
14368487	what advantages over gfortran does t	what advantages over gfortran does this have and if its performance why not just pony up for the intel fortran	walshemj	10.448208	-7.4104414	comment	5.0	15.0	1495124238	8.804044
14415700	The projects I've seen getting to te	The projects I've seen getting to technical bankruptcy have been with no exception monoliths.With microservices you have the ability to take one service and fix it, reimplement it or replace it if necessary. Also use whatever technology makes more sense for th	partycoder	9.784731	-7.3556914	comment	5.0	20.5	1495694617	-13.818581
14415708	I keep forgetting the old axiom: don	I keep forgetting the old axiom: don't use technology to solve a social problem.The biggest problem I have with microservice is that they lock you into a particular data flow up front.  And the only times I've worked on a project where the data flow didn't cha	hinkley	9.782206	-7.3569713	comment	5.0	25.0	1495694777	-13.836051
14472241	Why? Would you also abort on other r	Why? Would you also abort on other resource allocation errors, such as opening a socket, or creating a process wide mutex or whatever?I mean sometimes for some apps aborting on such errors (on some embedded platforms where they must work within specific resour	ensiferum	10.609376	-7.0557837	comment	5.0	14.0	1496428065	8.759599
14627309	It's not Swift. App sizes are mostly	It's not Swift. App sizes are mostly increased by graphic assets, and libraries. Here is a 15,000 line swift app that compiles to 11 megs.https://blog.halide.cam/one-weird-trick-to-lose-size-c0a4013...I'm skeptical Swift creates significantly larger binaries, 	valuearb	10.494332	-7.7912207	comment	5.0	13.0	1498335745	-10.82644
23449744	> A recent blog post by neobank Monz	> A recent blog post by neobank Monzo explains that they have reached the crazy amount of 1500 microservices (a ratio of ~10 microservices per engineer)That’s wild. Microservices are mostly beneficial organizationally — a small team can own a service and be ab	plandis	9.779519	-7.3619046	comment	5.0	17.0	1591556675	-13.817431
23497747	While iOS seems to pioneer every mit	While iOS seems to pioneer every mitigation technique ever described in the literature, they also shipped ancient versions of C image parsing libs (OpenEXR), have an endless stream of remote code execution vulnerabilities from their peculiar serialization sche	stefan_	10.458037	-7.661147	comment	5.0	19.5	1591956900	-6.5560126
23517960	Curious question as I am not a compi	Curious question as I am not a compiler expert.I have to do front-end iOS work from time to time and it's surprising how bad auto-complete can be in Xcode with Swift even after all these years: still randomly sluggish, randomly stops working inside closures in	weiming	10.521069	-7.814642	comment	5.0	15.0	1592145607	-10.841686
23722082	Modern fortran is surpisingly pleasa	Modern fortran is surpisingly pleasant to write.The last time optimisation came up, I tried the author's problem - multiplying two 4096x4096 matrices - in numpy, FORTRAN and Rust, on a standard laptop. Supposedly it took 9 hours in naive Python (I didn't try).	yodelshady	10.578857	-7.43804	comment	5.0	15.5	1593764237	-8.8619375
23756636	You're making a point that Microserv	You're making a point that Microservices help teams to solve the problem of increasing communication needs for larger teams. While your statement makes a lot of sense I'd like to ask why this problem cannot be solved with packages or classes within a monolith?	jensneuse	9.783222	-7.362956	comment	5.0	15.0	1594107312	-13.850334
23767233	How does it compare to sage math? I 	How does it compare to sage math? I used sage math today and was pleasantly surprised. Even has a latex option. If you name your variables correctly, it even outputs Greek symbols and subscript correctly!	smabie	10.248469	-7.200094	comment	5.0	13.0	1594187230	9.715272
23966957	I agree but I think the issue here i	I agree but I think the issue here is complexity. This app is built with Swift, probably because most developers prefer high-level languages like that over system-level languages like ObjectiveC. Unfortunately, OS vendors typically don’t provide interfaces for	toyg	10.486823	-7.771821	comment	5.0	12.5	1595869211	-10.834114
24179080	Python handles that pretty well. May	Python handles that pretty well. Maybe Julia does it marginally better, but I don't think it's worth learning a whole new language for this unless your day job is only 'Numerics and ml'	Majestic121	10.220351	-7.9213185	comment	5.0	29.5	1597595360	10.699299
24222696	I work in a bank and we have a team 	"I work in a bank and we have a team of people writing microservices on top of mainframe ""programs"". I'm not sure how it works in the mainframe because I work mostly on the front-end, but apparently what we are used to in modern REST apis are just called progra"	harrygeez	9.792588	-7.328944	comment	5.0	14.0	1597928090	-7.1857424
24360669	Ada is one of those languages that I	Ada is one of those languages that I always wish I had a reason to program in	stolen_biscuit	10.657011	-7.7265368	comment	5.0	19.5	1599105127	-5.0895495
24360770	Petty and inconsequential as this so	Petty and inconsequential as this sounds, I'm convinced Ada go have gone farther if it didn't have capitals and underscores in all their libs, and long keywords like `procedure`.  All that shift-key action makes Ada a physically painful language to work in.	khazhoux	10.641587	-7.7195377	comment	5.0	21.0	1599106862	-5.1560464
24364126	The reason for having UB in the firs	"The reason for having UB in the first place is so compilers can exploit them so we can have more optimized programs.UB is a feature, not a bug. So you don't really ""clean"" it up. Cleaning up of UB means a lot of overhead for programs."	shultays	10.663231	-7.1299777	comment	5.0	19.5	1599141735	-6.993778
20067413	The Z3 Theorem Prover	The Z3 Theorem Prover	____Sash---701_	10.567049	-7.267651	story	5.0	137.0	1559366689	12.412821
20112077	But that's teaching a new generation	But that's teaching a new generation of coders a set of tools designed only for Apple. Ruby (Python etc) are open and easily available on other platforms, Swift may be in the future but it isn't now.	bnt	10.474174	-7.808734	comment	5.0	13.0	1559802353	-10.843002
20145015	The title here is just blatantly fal	The title here is just blatantly false; there are certainly some scenarios in which it won't fail, but many in which it will. The author is aware of this since he fixes the claim toward the end:> To clarify, the surprising behaviour malloc has does not mean we	dooglius	10.633383	-7.017106	comment	5.0	22.5	1560157129	8.797941
20149171	We do this, with a few hundred apps 	We do this, with a few hundred apps all loosely linked to each other, for many of the same benefits (and drawbacks!) as micro services.Teams being able to own their stuff without needing permission from the rest of the org, being able to punt on some architect	shados	9.798842	-7.325332	comment	5.0	20.5	1560189754	-13.783922
20174179	I've decided to renounce the web aft	I've decided to renounce the web after more than 7 years as a professional web developer. My current plan is to see if I can transition to making Swift apps for Apple devices instead.This was partly triggered by the recent news that Google is taking aim at ad-	archiepeach	10.4757	-7.802383	comment	5.0	15.0	1560429623	-10.852925
20174683	SwiftUI and Catalyst: Apple executes	SwiftUI and Catalyst: Apple executes its invisible transition strategy	colinprince	10.447144	-7.8275456	story	5.0	164.0	1560432948	-10.84876
20289364	The times I have used CAS to help wi	The times I have used CAS to help with algebraic simplification, I've found the same problem, regardless of using SymPy or the more feature-filled Mathematica: the package's rules for simplification often obscure useful forms that lead to insight. The CAS give	jmwilson	10.327011	-7.2069883	comment	5.0	13.0	1561584317	9.8907995
20294018	Dijkstra Archive (1930-2002)	Dijkstra Archive (1930-2002)	tosh	10.454408	-7.175183	story	5.0	50.0	1561640924	-9.420358
20310735	I've read the article and part of th	"I've read the article and part of the documentation and I still don't have an idea what's the added value?Looking at the code doesn't seem specially appealing:  export default UICell.with(
  UICenterRow.with(
    UILabel.withText(bindf(""${foo}, world!"")),
    "	hartator	10.472763	-7.8006845	comment	5.0	12.5	1561780608	-6.802131
20334403	That's a false analogy, because the 	That's a false analogy, because the micro was a category changer. It was literally the basis of entire new markets.A lot of people saw that coming.A lot of other people - like DEC and DG - didn't. IBM mostly didn't, but was lucky enough to have a small divisio	TheOtherHobbes	9.785727	-7.337682	comment	5.0	12.5	1562071103	-13.839691
20346334	Personally, matlab drives me absolut	Personally, matlab drives me absolutely up the wall when it comes to ANYTHING other that flipping big matricies around.  As a domain-specific tool for linear algebra, I certainly prefer it over R, but as a general purpose tool it makes me want to pull my own t	hprotagonist	10.220321	-7.8088293	comment	5.0	27.5	1562174072	10.443894
20422862	I can't believe I'm jumping into the	"I can't believe I'm jumping into the inevitable 1-based indexing discussion, but I'm surprised to see you say that one-based indexing results in ""less ""+ 1"" or ""- 1"" things in your code"". Most arguments I've seen come out to ""it's fine"" (certainly) or ""it's mo"	kbd	10.664038	-7.3436346	comment	5.0	22.5	1562954474	9.46473
20434768	Monday: Manage your development envi	Monday: Manage your development environment when working with microservices	eko	9.78895	-7.3523283	story	5.0	63.0	1563127001	-13.811749
20482424	Zstandard v1.4.1	Zstandard v1.4.1	felixhandte	10.617492	-7.419023	story	5.0	60.0	1563570296	12.337963
20567178	"> ""...The simplicity you try to reac"	"> ""...The simplicity you try to reach is a false simplicity.""Also applies to some microservice architectures I've seen. People completely disregard the complexity (and overhead!) of the interactions between microservices."	bartread	9.8384695	-7.283027	comment	5.0	17.0	1564508379	-13.820584
20879744	Sign confusion: malloc takes size_t,	Sign confusion: malloc takes size_t, so negative numbers are just really large numbers to malloc. A negative int passes the check after adding the cast, because we’re now comparing with signs and now a negative number is smaller than a positive one, so malloc 	jchw	10.660988	-7.1012793	comment	5.0	22.0	1567619885	8.8509865
20930801	I first read about Ada in JARGON:   	"I first read about Ada in JARGON:   Ada:: n. A {{Pascal}}-descended language that has been made
   mandatory for Department of Defense software projects by the
   Pentagon.  Hackers are nearly unanimous in observing that,
   technically, it is precisely what o"	auvi	10.637524	-7.675648	comment	5.0	17.5	1568136722	-5.092555
30813723	Julia is the next big thing. I am al	Julia is the next big thing. I am always blown away by its readability and speed.But it will take years to build a library ecosystem that can rival the python one.	whatever1	10.240455	-7.9686246	comment	5.0	15.5	1648316373	10.697207
30880834	Love this article. My favourite part	"Love this article. My favourite part is:> ""So the logical thing to do is to implement an authorization service and everybody would be able to use that and keep your precious service boundaries, right? WRONG. Your hell, has just begun!Drawing the right boundary"	samjs	9.833464	-7.2876787	comment	5.0	21.0	1648834184	-13.747554
30895764	It's been a very long time since I'v	It's been a very long time since I've used NR, but it was pretty terrible code that was a poor competitor for NAG and IMSL.The discussion of algorithms, being informal and well-illustrated, was the high point of the books.  The code, not so much.I had the Fort	bluenose69	10.503293	-7.384865	comment	5.0	12.5	1648980090	8.84256
30908537	Ask HN: I want to make a native UI f	Ask HN: I want to make a native UI for macOS. What do I use?	throwaddzuzxd	10.462862	-7.786266	story	5.0	18.0	1649089633	-10.820426
30935927	Please note there's been some uptick	Please note there's been some uptick in the intensity of discussion on generics lately [0].Generics are necessary to bring performant data structures to Fortran, and yet they are nowhere near Go's generics.For the usual naysayers doubting Fortran's place in a 	throwawaybutwhy	10.566438	-7.4237127	comment	5.0	34.0	1649270725	8.84161
30936993	Last I checked, you had to write out	Last I checked, you had to write out your program on paper, using the special Fortran coding forms.  Then you just gave the written out forms to someone who would type out your codes at a keypunch and give you a deck of freshly punched cards, or you could take	zozbot234	10.46635	-7.38157	comment	5.0	13.5	1649276371	8.761874
30936381	Modern Fortran is beautiful and I lo	Modern Fortran is beautiful and I love coding in it.However, my understanding is that its main focus is on array computations. Now with hierarchical data structures and graphs becoming ever pervasive, I wonder if Fortran will ever try to compete in this space 	hatmatrix	10.468259	-7.4056644	comment	5.0	13.0	1649272823	8.835689
31048503	When I did interviews @ Google (I on	When I did interviews @ Google (I only do hiring committee work now, thank god :-) I usually asked questions around bugs I added to an existing codebase, to see if the candidate can avoid the pitfalls I ran into by making bad assumptions.As I'm a pure C coder,	jra_samba	10.6653	-7.109094	comment	5.0	27.0	1650074620	8.880241
31315571	I write UI apps, using Apple's UIKit	I write UI apps, using Apple's UIKit. I can generally write a fully functional app, in a day (or less). I do it all the time, for test harnesses. I spend more time on apps that I'll actually be shipping (mostly doing stuff like aligning UI elements and applyin	ChrisMarshallNY	10.463418	-7.7483616	comment	5.0	15.5	1652110956	-10.797752
31316917	I do not see why a startup would not	I do not see why a startup would not go with microservices today. It is a nice way of separating concerns. The knowledge on how to do this in a good way is out there. It allows for smaller isolated changes, feature focused development and much shorter time to 	AtNightWeCode	9.78164	-7.3659096	comment	5.0	16.0	1652116785	-13.786716
31328532	Come to Erlang/Elixir (and OTP), you	"Come to Erlang/Elixir (and OTP), you get the best of both worlds:  - a mono repository
  - a single codebase for a single system
  - your micro services are supervisors and gen servers (and a few other processes) in a supervision tree
  - you decide which erla"	linkdd	9.800239	-7.3544106	comment	5.0	17.0	1652197756	-13.826739
31328646	> Microservices was always a solutio	> Microservices was always a solution to the organisational problem of getting more developers working on a system at once.Hmm? You can do that simply with API boundaries inside a program. Linux kernel has huge development team that compiles a all binary.	gowld	9.787354	-7.3469234	comment	5.0	19.0	1652198284	-13.821492
31504649	$0.02 on this is that I see a great 	$0.02 on this is that I see a great many people doing the typical “all or nothing” with SwiftUI. I think this is a mistake. Like every single other engineering tool in existence, this one has costs and benefits.For the people saying it doesn’t work: use UIKit 	tikimcfee	10.457754	-7.822493	comment	5.0	19.5	1653487343	-10.843483
31504705	Has anyone gotten SwiftUI previews t	Has anyone gotten SwiftUI previews to work at all with a project that has more than 20 files or some dependencies?My project utilizes Firebase as the backend and as soon as you add that dependency - SwiftUI previews never compile, due to build time outs.	akmarinov	10.458434	-7.8214283	comment	5.0	14.0	1653487625	-10.8333025
31505218	I'm really looking forward to what c	I'm really looking forward to what comes of it, but I have chosen to do my current major project in UIKit.A couple of reasons:1) The documentation for SwiftUI, when I started (about two years ago) was awful. I was shocked at how bad it was. I believe that it h	ChrisMarshallNY	10.475768	-7.7988935	comment	5.0	21.5	1653489564	-10.815627
31505400	The point of comparison is that it h	The point of comparison is that it has given people the ability to develop their own iOS apps from scratch, when previously they could not as UIKit was too daunting and the tools were not as advanced (live preview with swiftui/etc).	PStamatiou	10.442975	-7.808982	comment	5.0	17.0	1653490323	-10.8274555
31553927	Fortran Assembly Program (FAP) for t	Fortran Assembly Program (FAP) for the IBM 709/7090 (1961)	abrax3141	10.446107	-7.4122224	story	5.0	40.0	1653867441	8.791342
31570205	> Given all the talk about OpenMP co	"> Given all the talk about OpenMP compatibility and Fortran... my guess is that they're largely running legacy code in Fortran.The must used linear algebra library is written in Fortran. There's nothing ""legacy"" about it, it's just that nobody was able to repl"	marcosdumay	10.486588	-7.365519	comment	5.0	13.5	1654008745	8.712473
31654172	"""My first attempt at a benchmark inv"	"""My first attempt at a benchmark involved allocating and freeing blocks of random size. Twitter friends correctly scolded me and said that's not good enough. I need real data with real allocation patterns and sizes.""""The goal is to create a ""journal"" of memory"	abainbridge	10.603097	-7.029339	comment	5.0	16.5	1654609340	8.731596
31729710	> prioritizing new features every sp	> prioritizing new features every sprint and constantly pushing housekeeping, bugsquashing, and system improvements will result in a broken collection of microservices just as quickly as it resulted in a broken monolith.Now, HTF do you convince a C-Level of th	cogman10	9.779073	-7.328754	comment	5.0	21.5	1655145706	-13.816742
26473567	You're learning this stuff because y	You're learning this stuff because you're an engineer not a computer scientist.  Deploying to prod is the goal, not writing code.>seperate mini applications that don't talk to eachother at all, essentially 4 web services.I mean, that sounds pretty good.  If yo	jayd16	9.788789	-7.3671694	comment	5.0	22.0	1615875292	-13.811274
26473585	> I mean, that sounds pretty good. I	> I mean, that sounds pretty good. If you can do that why couple them?Because what is the point in separating each one into their own deployed service and having to deal with network issues when they could just be services inside a monolith?	ZephyrBlu	9.810801	-7.320036	comment	5.0	17.0	1615875461	-13.834204
35685403	One critique I have is that this pre	One critique I have is that this presents a binary option of either full monolith and microservices.The truth is somewhere in between where you have dependent services large enough to warrant being their own monolith being split off. Breaking up of a monolith 	dumpster_fire	9.788525	-7.3556123	comment	5.0	25.5	1682328642	-13.8183
35761218	Does Fortran need to? Does Fortran s	Does Fortran need to? Does Fortran still have any real advantage over Julia, MATLAB, etc.?Please forgive my ignorance. I've never written any Fortran. I understand how and where it's used in modern computing though. I also understand why it's faster than C in 	stoppingin	10.468111	-7.417203	comment	5.0	28.0	1682850027	8.855708
35811839	microservices make a lot of sense or	microservices make a lot of sense organizationally where each feature team can own their own feature service.	alkibiades	9.786643	-7.3559914	comment	5.0	18.0	1683181398	-13.820103
35812296	Microservices works better if you do	Microservices works better if you don't trust other team. While having trust seem like a basic thing, this is absolutely not the case for a lot of companies.With microservices, it is easy to see services which are down or have high error rate or latency, have 	YetAnotherNick	9.775799	-7.359721	comment	5.0	28.0	1683184505	-13.745724
35853632	Am I alone in feeling there is nothi	Am I alone in feeling there is nothing left to be said on this topic? Correct application design, and balancing that against the constraints of getting a product out the door, the requirements of a particular application, and the resources on hand (skill-sets,	jack_squat	9.786903	-7.356533	comment	5.0	14.0	1683480545	-13.8245325
35885151	I don't know if you genuinely want f	I don't know if you genuinely want feedback... But I'll share my very short experience. I tried Julia one time a few years back. I'll be honest, I didn't put in a lot of effort into (but nor will most potential Matlab converts - bc people are busy and have stu	geokon	10.181711	-7.943581	comment	5.0	19.0	1683708256	9.724876
35990521	"""Ondřej [Certik] is the original aut"	"""Ondřej [Certik] is the original author of SymPy, SymEngine and LFortran"".https://www.sympy.org/en/index.htmlhttps://symengine.org/https://lfortran.org/ << ""Modern interactive LLVM-based Fortran compiler""~Raise your hand if you first encountered Fortran in (en"	eternalban	10.471835	-7.3466635	comment	5.0	13.5	1684427896	-8.297632
36097977	SwiftUI shines because you get to wr	SwiftUI shines because you get to write Swift code and embrace the DSLYou'll never be able to write that kind of code with Zig, or C or C++, it's impossible: https://github.com/amosgyamfi/open-swiftui-animationsSo the main advantage here would be to be able to	WhereIsTheTruth	10.459615	-7.819353	comment	5.0	20.5	1685219237	-10.85889
36168022	Question since you appear familiar w	Question since you appear familiar with math simulation, could you do what you're describing with Matlab with Octave instead?	thx-2718	10.219738	-7.8040185	comment	5.0	15.0	1685726346	10.454187
36291140	I don’t understand the essential cla	I don’t understand the essential claims of this, which I think are“Mojo […] doesn't repeat Objective-C's mistake of using the component language as the base (which, inexplicably, Swift didn't just repeat, but actually doubled down on by largely deprecating obj	Someone	10.489568	-7.8058767	comment	5.0	16.0	1686565228	-10.832853
36340816	I've worked in a number of projects 	I've worked in a number of projects where they decided to move to microservices for reasons they wish they had, while not fully understanding microservices or applying basic litmus tests to where to split off services.So we ended up with great puzzles like how	Cthulhu_	9.780013	-7.361993	comment	5.0	17.0	1686838443	-13.810895
36361302	I’ve been dabbling in this space for	I’ve been dabbling in this space for a long time and I’ve become convinced there will be no good cross-platform mobile UI story. The UIs are too different for there to be a one size fits all solution.(as an aside I really like Swift too and have been enjoying 	afavour	10.479165	-7.8131647	comment	5.0	15.5	1686939671	-10.771475
36383222	One of the pros of microservices is 	One of the pros of microservices is that each individual microservice is so simple that it really doesn't matter what language it's written in because it can be easily rewritten.	bheadmaster	9.799771	-7.362998	comment	5.0	16.0	1687114867	-13.809777
36490582	I'm also generally micro-service ske	I'm also generally micro-service skeptical, but I'll do my best to give what I believe an answer is. The industry had a huge micro service phase for like the last decade, and I think in the end most of the same arguments given for micro services could be answe	asimpletune	9.787929	-7.3519826	comment	5.0	15.5	1687856867	-13.825093
36492519	Ask HN: Resources for getting starte	Ask HN: Resources for getting started with modern Fortran?	tt567x	10.456715	-7.4059715	story	5.0	10.0	1687872996	8.803119
36529777	With the amount Zig promoted being a	With the amount Zig promoted being able to use it to compile c (and maybe c++ I forget) only to decide no LLVM at all seems wild. Without a LOT more people chipping in to support the odds of even coming close to the platform support of LLVM seems incredibly un	runevault	10.550446	-7.0198045	comment	5.0	13.0	1688091650	12.531572
36530849	Andrew is super sharp so I imagine h	Andrew is super sharp so I imagine he and the team will get there now that it's declared as a goal.But man, it seems to me (uneducated on the challenges zig faces w/LLVM) that this shifts the team's capacity away from zig and towards things like binutils.  Whe	wyldfire	10.660715	-7.4353704	comment	5.0	25.5	1688102865	12.533201
34156710	Existing FEA codes, including popula	Existing FEA codes, including popular commercial ones are based on huge bodies of academic fortran code.  Does this system replace all that (well maybe expect for stuff like matrix math and linear solvers) with a novel framework?What kind of work goes in to va	nullc	10.462789	-7.4058404	comment	5.0	17.0	1672193510	8.862276
34230862	I’m surprised none of the big 3 clou	I’m surprised none of the big 3 cloud providers have come out with a cloud native language where modules or even classes gets deployed as micro services that scales horizontally.Then you can have a mono repo that deploys to multiple micro services / cloud func	wodenokoto	9.794907	-7.3550396	comment	5.0	13.0	1672751216	-13.812338
34230923	The article above, and most if not a	"The article above, and most if not all the comments I read right before posting this, seem to be very quiet about what I thought was one of the main ""distinctive elements"" of Microservices.I.e. the idea that each microservice has direct access to its own, dedi"	Pamar	9.781149	-7.3501673	comment	5.0	20.5	1672751726	-13.820814
34232365	Time to throw the cat amongst the pr	Time to throw the cat amongst the proverbial pigeons and start the year 2023 off with discord and disharmony.Microservices are a solution to a problem. TDD is a solution to a problem, the same problem. Both are solutions that themselves create more, and worse,	Guid_NewGuid	9.78462	-7.3588023	comment	5.0	21.5	1672758894	-13.814102
34332874	You know more about the subject than	You know more about the subject than I do, but I don't think you're entirely contradicting one of the author's key points: It's incredibly hard to rewrite a system from scratch - and in effect, to just write a system from scratch.But it would make sense to hav	kerblang	10.477845	-7.3930974	comment	5.0	13.0	1673392717	8.839568
34338124	Microservices is a team organization	Microservices is a team organization technique, whereby disparate teams only communicate by well defined APIs. Any technology choices that come out of that are merely the result of Conway's Law.Any time you lean on code in a random GitHub repository, where you	randomdata	9.778601	-7.360709	comment	5.0	30.0	1673443587	-13.824003
34338530	The move to microservices is often m	"The move to microservices is often more about scaling change management when an organization grows from tens to hundreds of engineers.Change management becomes the bottleneck when organizations exceed Dunbar's Number, and a ""reverse Conway maneuver"" is needed "	ericalexander0	9.780317	-7.355428	comment	5.0	14.5	1673445741	-13.813721
34342700	I don't know Swift too well but my i	I don't know Swift too well but my impression is that the support on Linux within the Foundation is not complete. (Also, is Foundation the same thing as what one might normally term a standard library? I can't tell.)Does this change imply better (eventual) sup	eatonphil	10.46107	-7.8263364	comment	5.0	16.5	1673463016	-10.847756
34346015	The article quotes this:> With a nat	The article quotes this:> With a native Swift implementation of Foundation, the framework no longer pays conversion costs between C and Swift, resulting in faster performance.and this:> A reimplementation of Calendar in Swift is 1.5x to 18x as fast as the C on	Octokiddie	10.473751	-7.796717	comment	5.0	13.0	1673476436	-10.875295
34397698	JAX should be mentioned [1]. It's al	JAX should be mentioned [1]. It's also from Google and is getting popular these days. Not PyTorch-popular, but the progress and investment seem promissing.[1] https://github.com/google/jax	flakiness	10.014956	-7.9351115	comment	5.0	15.0	1673852201	10.493616
34476483	Fortran H and PL.8: Papers about Gre	Fortran H and PL.8: Papers about Great Optimizing Compilers [pdf] (2015)	Bostonian	10.519662	-7.2738557	story	5.0	43.0	1674388390	-7.281378
34557218	> It took a few hours to fall in lov	> It took a few hours to fall in love with SwiftUI.>  It was in development for 12 months. It would have been less if SwiftUI just gave.> At the end, we didn’t drop it for a couple of reasons. We were too deep into the process. Being a bootstrapped operation t	SpaghettiX	10.453556	-7.8252954	comment	5.0	13.5	1674910781	-10.835767
34664429	My favorite microservices pattern is	My favorite microservices pattern is having lots of separate little services, so you get that sweet overhead and complicated debugging, with a shared database, so you can still enjoy systemwide single points of failure and obscure side effects on data.	rippercushions	9.789672	-7.3556314	comment	5.0	14.0	1675600596	-13.815611
34745779	Ask HN: Has Apple abandoned Objectiv	Ask HN: Has Apple abandoned Objective-C?	rubicon33	10.483837	-7.766378	story	5.0	9.0	1676062833	5.629286
34974856	Common Microservices Misconceptions	Common Microservices Misconceptions	ohjeez	9.782906	-7.3599358	story	5.0	13.0	1677618493	-13.816139
34995207	I see we're rebranding SOA/microserv	I see we're rebranding SOA/microservices again.I did enjoy reading the preview book for EventStorming, seems like a decent format for getting stakeholders involved in the design process and capturing business details. I'm pretty sure you can also do this with 	CodexArcanum	9.782835	-7.351417	comment	5.0	22.0	1677762720	-13.825088
35159961	FastGPT: Faster than PyTorch in 300 	FastGPT: Faster than PyTorch in 300 lines of Fortran	chl	10.538984	-7.317093	story	5.0	51.0	1678832768	8.837259
39358499	That's exactly why we need to modula	That's exactly why we need to modularize and componentize. We need to reduce dependency, loose the coupling and eliminate side effects. Monolithic is a dead end. Microservices when things get too complex.	sinuhe69	9.7915325	-7.3534017	comment	5.0	12.5	1707838275	-13.811277
39440636	I'd argue that this article could be	"I'd argue that this article could be read more like ""start as a monolith, and then move towards microservices when sensible"", except the penny hasn't fully dropped for the author that the sensible time for their organisation is right now.The company appears do"	Shrezzing	9.78864	-7.360702	comment	5.0	21.5	1708433734	-13.824497
39446522	> I've never really understood why y	> I've never really understood why you couldn't just break up your monolith into modulesYou can! We used to do this! Some of us still do this!It is, however, much more difficult. Not difficult technically, but difficult because it requires discipline. The orga	lll-o-lll	9.794849	-7.3506794	comment	5.0	15.0	1708461172	-13.820732
39489721	I'm curious, this is a cross-platfor	"I'm curious, this is a cross-platform UI library. Does anybody know of any alternatives out here that are (if necessary) MacOS-specific but also easy to use and more ""native looking""? Maybe a bit drag-and-droppy?Sometimes I want to build quick and dirty things"	adlpz	10.509793	-7.6985345	comment	5.0	13.5	1708757786	-8.920618
39533753	"If you are testing a microservices """	"If you are testing a microservices ""ball of mud"", you can (and probably should) setup a testing environment and do your integration tests right there, against real dependencies. The tool seems nice for simple dependencies and local testing but I fail to see it"	gui77aume	9.852957	-7.0943637	comment	5.0	14.5	1709092237	-13.80467
39538327	Is there any GUI for SymPy one could	Is there any GUI for SymPy one could easily use to solve symbolic math like Maple/Maxima/Macsyma?	treprinum	10.335708	-7.1883035	comment	5.0	13.5	1709130325	9.848416
39646417	This is a very cool feature, but I'm	This is a very cool feature, but I'm starting to see why people say that Swift has crammed every other language's feature into one place. Not that that's necessarily bad, but this is a pretty specific feature to have that probably won't benefit the majority of	jjice	10.469845	-7.822937	comment	5.0	14.5	1709931620	-10.825333
38663558	> It is of no surprise to me these A	> It is of no surprise to me these Apple or Apple-like systems tend to be better overallThis might have been true in the past, but it's been getting worse over the last decade.For instance: The new parts in macOS that are written in Swift seem to be mostly inf	flohofwoe	10.465051	-7.789382	comment	5.0	17.5	1702727118	-10.854189
38746290	The article's example of a Fortran p	The article's example of a Fortran program is an anachronism. In 1975, what we had was Fortran IV which didn't have any of the structuring stuff shown in the example. This example of Fortran IV shows where most of BASIC came from although there are important f	vajrabum	10.4700775	-7.396414	comment	5.0	13.0	1703353945	8.805307
38801914	> Can you elaborate on this? What is	> Can you elaborate on this? What is the primary benefit of running 100-300 components vs a monolith specifically with a 12 person team?> More directly, what's wrong with a monolith at the dozen person team size?Great question. It's honestly a hard question to	hmeh	9.8293	-7.3052144	comment	5.0	29.0	1703826284	-13.761126
38802077	Something I’ve wanted for a while no	Something I’ve wanted for a while now is a language / framework that behaves like networked micro services but without the network overheads.E.g.: the default hosting model might be to have all of the services in a single process with pass-by-copy messages. On	jiggawatts	9.800639	-7.320878	comment	5.0	12.5	1703828150	-13.785437
38879876	They're literally rewriting in Swift	They're literally rewriting in Swift right now. Foundation is being rewritten entirely in Swift. All new code is in Swift. All new frameworks are Swift-only. They're using Swift from low level firmware on the Secure Enclave to apps. This is already real.	jshier	10.448619	-7.8240485	comment	5.0	18.5	1704467603	-10.841286
38905018	For Mac desktop programming and Swif	For Mac desktop programming and Swift in general, I find ChatGPT quite helpful. It’s been quite good at dredging up the kind of “one weird trick” I tend to need to work with these kind of closed source framework that you can’t truly understand. I don’t think I	jitl	10.456743	-7.7878714	comment	5.0	14.5	1704660782	-10.828325
38923689	This reminds me of Hello World Enter	This reminds me of Hello World Enterprise Edition: https://gist.github.com/lolzballs/2152bc0f31ee0286b722Sometime people really like to complicate instead of keeping things simple. Not just for show off but they genuinely believe something more complicated is 	DeathArrow	9.794228	-7.3461423	comment	5.0	13.5	1704788738	-13.819253
38970035	Fortran is hardly dead, but neither 	Fortran is hardly dead, but neither is it is well.On the plus side, Fortran has more actively developed implementations than any other language.  It is critical to some of the most important applications that exist.  One can write code in the portable subset o	pklausler	10.475406	-7.4075646	comment	5.0	14.0	1705076852	8.815305
32526214	I recently took to rewriting what sh	I recently took to rewriting what should be a very simple app from Obj-C to Swift with SwiftUI - because it's the future. The CPU usage was at 5% while idle, just for having a simple tiny pie chart that updates. Not to mention that for some seemingly basic thi	dangelov	10.457077	-7.817452	comment	5.0	12.5	1660944853	-10.849165
32560137	The Val Object Model: Template for a	The Val Object Model: Template for a possible future Swift object model	matt_d	10.496545	-7.821979	story	5.0	62.0	1661224872	-10.837907
15627674	i don’t understand how microservices	i don’t understand how microservices solves the problem of broken interfaces. if an api changes or disappears, how is that different from the locations.txt file changing or disappearing?i think it’s just another instance of humans making things more complicate	johnwheeler	9.785794	-7.360044	comment	5.0	13.0	1509844422	-13.82297
16015312	it depends on your reasons.- if you 	it depends on your reasons.- if you need to scale the number of teams working on the same product you need to introduce microservices to make the teams work independently from each other.- if you need to scale the (monolith) service and it is too expensive to 	je42	9.787327	-7.3589015	comment	5.0	25.0	1514389001	-13.814163
16038782	Microservices in Java? Never	Microservices in Java? Never	LaSombra	9.798187	-7.369114	story	5.0	5.0	1514683739	-13.809564
16143420	> Nobody with a sane mind would writ	> Nobody with a sane mind would write C or CPP micro-serviceswhy? I do this all the time. Maybe I should check into a nearby asylum.	banachtarski	9.881419	-7.32949	comment	5.0	18.0	1515920852	-13.797304
16179106	This looks awesome and I can't wait 	"This looks awesome and I can't wait to give it a whirl with my kids.I am, however, a little concerned about one of Dijkstra's ""unpleasant truths""[0]:> It is practically impossible to teach good programming to students that have had a prior exposure to BASIC: a"	felideon	10.561681	-7.118149	comment	5.0	16.0	1516296767	-9.371818
16200488	A microservice, imo, should just be 	A microservice, imo, should just be a simple black box that takes in some input and returns some output (sometimes asynchronously). No side-effects necessary. No fiddling with database flags or global state, and definitely no hitting other microservices. See @	dvt	9.784278	-7.3579316	comment	5.0	12.5	1516574392	-13.808155
16244406	Could Swift be the reason why Apple 	Could Swift be the reason why Apple software post 2010ish has been so buggy? I'm just trying to put 2 and 2 together here because Swift was released with iOS7 circa 2010.	checker659	10.466546	-7.809508	comment	5.0	18.0	1517018373	-10.8820505
16285851	Server-Side Swift from Scratch	Server-Side Swift from Scratch	mbw234	10.470029	-7.8326387	story	5.0	41.0	1517518900	-10.855685
16354906	So many companies I've interviewed f	So many companies I've interviewed for are rushing toward microservices and containerization as the cure to all problems. The problem is that the champions often have no clue what any of this means.I recently spoke with a company that had no testing whatsoever	mailslot	9.784232	-7.3508167	comment	5.0	18.5	1518384352	-13.820473
16385340	Proofs and Refutations Using Z3	Proofs and Refutations Using Z3	yminsky	10.594263	-7.232733	story	5.0	77.0	1518712558	12.435255
16420403	As someone who used Matlab and Mathe	As someone who used Matlab and Mathematica in college, I'm not sure I'd want to have a closed source solution really take off again at this point. While they provided great products and documentation, they also made it much more difficult to share code/visuali	pmart123	10.216234	-7.756522	comment	5.0	22.0	1519136051	10.438086
16720542	"Shouldn't it be called ""TesnsorFlow "	"Shouldn't it be called ""TesnsorFlow for Swift""? Like in ""MySQL driver for Java"", not ""Java for MySQL driver"".I'm not native English speaker, so I wonder..."	Max-q	10.465179	-7.824195	comment	5.0	12.5	1522451152	-10.840515
16721244	Curious why not Go. Google has much 	Curious why not Go. Google has much more control over Go than Swift.	riku_iki	10.633124	-7.874431	comment	5.0	17.5	1522461791	-10.84235
16734109	Recently I wrote a service using emb	Recently I wrote a service using embedded tomcat libraries. It  contains few lines of code to boot up tomcat, add servlets, set some context parameters. There are no configuration files, no annotations or a readymade stack of libs that I must use. Now it works	geodel	9.862914	-7.355759	comment	5.0	13.0	1522674015	-13.795466
16772206	Ask HN: How does your team maintain 	Ask HN: How does your team maintain a high level overview of its microservices?	jcfausto	9.785503	-7.359412	story	5.0	24.0	1523010614	-13.81433
21043669	> Don’t use Objective-C/Swift on the	> Don’t use Objective-C/Swift on the audio thread.His argumentation is that Objective-C uses locks internally.But isn't it possible that those locks (as opposed to application-level locks) cause just negligible pauses, because there's no contention on them?I g	vemv	10.479249	-7.7248545	comment	5.0	18.0	1569183421	-10.811821
21232237	Are there any conditions where the c	Are there any conditions where the compiler can optimize away the call to objc_msgSend? Or is it always used for any call between 2 ObjC/Swift methods?	andr	10.503724	-7.6277246	comment	5.0	17.0	1570879893	5.8580227
21231726	Objc_msgSend's New Prototype	Objc_msgSend's New Prototype	beefhash	10.515127	-7.570144	story	5.0	85.0	1570872616	5.7858086
21272773	You don't need microservices if you 	You don't need microservices if you think your business will eventually fail. On the other hand, if its a success then at some point microservices are much more maintainable. Its extremely difficult to change a monolith to microservices. Right now there is a h	eweise	9.781754	-7.3653846	comment	5.0	16.0	1571245890	-13.819615
21404484	I had to touch a little bit of Fortr	I had to touch a little bit of Fortran 77 when I interned at Lockheed Martin nine years ago.While I don't know that I would use Fortran for anything nowadays, I do kind of have to appreciate how completely simple Fortran was in comparison to my favorite langua	tombert	10.467299	-7.4102387	comment	5.0	28.0	1572481154	8.806114
21455941	Static Types in SwiftUI	Static Types in SwiftUI	gok	10.537941	-7.820661	story	5.0	142.0	1572983274	-10.833817
21490683	I want to try swift but the fact tha	"I want to try swift but the fact that there is no windows support is a deal killer for me.  And it perplexes me how over the years there have been no serious attempts to make it happen. 
Is it just a cult of Apple + Linux masterrace thing?"	rishav_sharan	10.454959	-7.8061223	comment	5.0	15.0	1573295248	-10.788481
21583072	So you want to learn Microservices?	So you want to learn Microservices?	charlysl	9.778298	-7.3607063	story	5.0	90.0	1574250774	-13.809992
21678472	Learning new environments can be pai	Learning new environments can be painful so it’s good it starts off easy.I’m trying to solve them with Swift Playgrounds on the iPad, for example.  And I can’t figure out how to create a simple text file for the data.	melling	10.462145	-7.8228908	comment	5.0	15.5	1575242106	-10.825326
39284517	Wait so we're going to give up -fwra	Wait so we're going to give up -fwrapv (a UB mitigation) for the explicit purpose of introducing more undefined behavior?I don't see any way this change wouldn't lead to an enormous number of bugs, all for the (dubious) goal of having the range of signed integ	torstenvl	10.591684	-7.030482	comment	5.0	16.0	1707280312	-6.9968944
39288575	"I get this message:""Waking up... To "	"I get this message:""Waking up... To keep Glitch projects fast for everyone inactive projects go to sleep and wake up on request.""Ok so this website appears to be hosted by microservice. ""to keep ... fast for everyone."" Is anyone else bothered by this line that"	adamddev1	9.786583	-7.3561373	comment	5.0	13.0	1707314100	-13.8153105
17934875	I work professionally as an applied 	I work professionally as an applied mathematician and I've struggled to understand where Julia fits into the tools already available.In terms of prototyping algorithms, MATLAB/Octave still seems to be the best choice.  We have access to an enormous number of b	kxyvr	10.170996	-7.965394	comment	5.0	25.0	1536333272	10.743215
18050615	This collection is bad. I had a look	This collection is bad. I had a look at several implementations and pretty much everything I looked at was bad, and not in a subtle way. It may well be that some of things in there are good, but given the amount of bad, you really shouldn't use this for learni	lorenzhs	10.472142	-7.1676464	comment	5.0	15.0	1537702916	-9.469052
18070510	My memory might fail me, but I thoug	"My memory might fail me, but I thought Swift 4 was supposed to be ""the last major breakage""? Swift has a new major revision every year.Compare this to Go (no major revisions after 6 years, probably a backwards-compatible major revision in 2-3 years) and Rust ("	ainar-g	10.455328	-7.8313613	comment	5.0	25.0	1537909893	-10.868423
18070593	Neither of those languages launched 	Neither of those languages launched out of the gate with a stable ABI. Prior to Rust 1.0 it was much the same, with regular breaking changes. C++ famously took many years to have a stable ABI.Swift 5 represents a stable ABI. That means from this point forward 	xenadu02	10.59918	-7.88981	comment	5.0	16.5	1537910503	-10.837889
18091474	Glad to see Apple moving away from O	Glad to see Apple moving away from ObjC (when it makes sense to).This seems to contrast MS when they released .NET but shied from using it in their own systems (though I might be wrong)	raverbashing	10.460172	-7.6297174	comment	5.0	17.5	1538116977	5.7224736
18163160	Understatement of the month. Last I 	Understatement of the month. Last I heard, the HN consensus was that it's better to delay microservices (personally I'd say wait until profitable or >100 engineers).Even Twitter, probably the most successful performant microservice-at-scale company advocates w	alexandercrohde	9.791606	-7.341591	comment	5.0	19.5	1538954466	-13.825663
18214738	Show HN: Dangless-malloc – Safe dang	Show HN: Dangless-malloc – Safe dangling pointer errors (master thesis)	mettamage	10.671346	-7.1282287	story	5.0	66.0	1539545644	8.880435
18255277	What I love about microservices is i	What I love about microservices is isolation and forcing you to do thing well from the beginning. Monoliths tend to become horrible to maintain after few years. On the opposite change one small 50 lines microservice is a lot less risky!	js4ever	9.78607	-7.3566213	comment	5.0	16.5	1539939876	-13.822932
18255484	Indeed. It just replaces internal ca	Indeed. It just replaces internal calls between services of your monolith with flaky and slower network calls.	kabes	9.848362	-7.2988315	comment	5.0	16.5	1539943046	12.4442215
18270103	Why not use {,u}int{8,16,32,64}_t fr	Why not use {,u}int{8,16,32,64}_t from stdint.h? Then you don't have to think twice whether some type is signed or unsigned.	wereHamster	10.57655	-7.0582795	comment	5.0	19.5	1540154500	-7.0450234
18282289	Julia is a great language, but I'm s	Julia is a great language, but I'm still waiting for someone to create a Julia fork that uses 0-based indexing.	0-_-0	10.253463	-7.878457	comment	5.0	35.0	1540291904	10.6678295
18521769	Integer overflow and SMT-solvers	Integer overflow and SMT-solvers	dennis714	10.611369	-7.017495	story	5.0	53.0	1543063359	-7.011513
18544016	What is modern Fortran good at? It s	What is modern Fortran good at? It seems like Fortran's niche has been scientific computing, specifically high performance linear algebra. (I wonder if that makes Fortran good for neural networks.)In college, I remember attending a great talk by a visiting Sta	dahart	10.470096	-7.4151177	comment	5.0	18.5	1543337844	8.826308
18666762	Ask HN: Bad time to start iOS/Swift 	Ask HN: Bad time to start iOS/Swift development?	jamil7	10.477542	-7.8009725	story	5.0	16.0	1544641777	-10.831677
18687802	Fun with Unicode in Swift	Fun with Unicode in Swift	Razengan	10.532874	-7.6644626	story	5.0	62.0	1544867537	-10.836517
18788265	"Personally, I'd call this writing ""S"	"Personally, I'd call this writing ""Safer and More Secure Drivers in High-Level Languages"", because there are still unsafe operations going on (for DMA, etc.): https://github.com/ixy-languages/ixy.swift/search?q=UnsafeWhile it's great that you get improved safe"	saagarjha	10.489871	-7.7643323	comment	5.0	13.5	1546161904	-10.78095
18876759	High Performance Numeric Programming	High Performance Numeric Programming with Swift: Explorations and Reflections	parrt	10.493971	-7.8191485	story	5.0	113.0	1547146519	-10.824713
18883527	For me the takeaway is that Apple is	For me the takeaway is that Apple is _really_ serious about supporting the use of Swift outside their own ecosystem. After all XCode won't be using this, at least for a while, so clearly it's aimed at making it easier to use Swift outside their own tool chain.	simonh	10.46341	-7.823392	comment	5.0	20.5	1547214596	-10.830387
29847638	"So I don't doubt that ""modern Fortra"	"So I don't doubt that ""modern Fortran"" is a nice language, but last I'd heard, it also effectively didn't exist in the wild; Fortran remains king of numerical computation by virtue (largely if not exclusively) of having a vast number of packages already writte"	yjftsjthsd-h	10.471695	-7.4069195	comment	5.0	16.5	1641606139	8.849301
29849662	"Well, ignoring the presence of ""(,)"""	"Well, ignoring the presence of ""(,)"" in Fortran is exactly what one should do.Recall that FORTRAN stands for FORmula TRANslator.FORTRAN is built for math. It makes math expressions — particularly, linear algebra stuff — easy to write, and running very, very fa"	romwell	10.524464	-7.392122	comment	5.0	17.5	1641628796	9.08854
29973363	Indeed. I have a dozen or so microse	Indeed. I have a dozen or so microservices supported by team. Most are SpringBoot a couple of them I wrote myself with plain java and embedded tomcat. Needless to say Springboot stuff is rather complicated for such a simple business functionality. Errors are i	geodel	9.806274	-7.3564224	comment	5.0	31.0	1642465715	-13.817919
30037705	It's interesting to contrast this ag	It's interesting to contrast this against the concepts in Team Topologies (https://teamtopologies.com/)- Kartik argues for better mutual understanding and additional communication- Team Topologies states you should match system boundaries to team boundaries, s	NAR8789	9.780057	-7.336169	comment	5.0	14.5	1642866895	10.638973
30078501	It took me a while to accept that mi	It took me a while to accept that microservices are better. Not in every case, but in a surprising number of cases. They really shine when combined with serverless computing. Clear seperation of code by a networking call is the next logical step in the encapsu	fdgsdfogijq	9.78925	-7.356984	comment	5.0	17.0	1643146924	-13.814805
30078739	It was SOA (Service Oriented Archite	It was SOA (Service Oriented Architecture) where you would split them up, that predates Microservices by quite a bit. I remember doing that in the early 2000s.What I think he is saying is that Microservices people pitch their service against monolith as better	Clubber	9.7923155	-7.356803	comment	5.0	13.5	1643148100	-13.827334
30109674	Great article, very cool to read. Bu	Great article, very cool to read. But I can’t help but wonder if it’s time for Apple to provide its developers with a pure Swift IDE - all of my CLI apps and anything Swift server related always end up working a lot easier in CLion (which I happily pay for). I	elpakal	10.4668865	-7.750684	comment	5.0	15.0	1643333751	-10.785086
30418093	> I was able to get leadership to ev	> I was able to get leadership to eventually discuss the situation with me last Fall, but after avoiding dealing with it, they made excuses, and made it clear they weren't planning to do anything about it. As such, I decided not to return. They reassure me the	anonymouse008	10.476773	-7.8167424	comment	5.0	41.0	1645463522	-10.835036
30418285	Should an individual still bother le	Should an individual still bother learning Swift now in 2022? Is it a bad investment of time?	xwdv	10.4638	-7.823569	comment	5.0	13.0	1645464479	-10.878925
30418320	Key takeaway for me was the note tha	Key takeaway for me was the note that it “definitely isn’t a community designed language”. This is telling, I’ve watched a lot of neat languages over the years and absolutely none of the ones without community involvement have grown beyond the sphere of influe	techdragon	10.471876	-7.82063	comment	5.0	32.0	1645464665	-10.808124
30572703	I think Catalyst is no longer releva	I think Catalyst is no longer relevant with the SwiftUI framwork	Kibranoz	10.440221	-7.8187203	comment	5.0	13.5	1646520094	-10.84839
30683371	Could not agree more. The solution t	"Could not agree more. The solution to tech debt is the one nobody wants to hear: Slow down!Steve Jobs' presentation of Snow Leopard should be mandatory viewing for every manager. ""No new features"" to a standing ovation. Customers actually like stable, responsi"	sirwhinesalot	9.783201	-7.3169823	comment	5.0	17.5	1647337398	-14.015485
32730869	Swift was poised to replace Python. 	Swift was poised to replace Python. Then it tanked	behnamoh	10.470098	-7.834085	story	5.0	11.0	1662422026	-10.823245
32878827	Because in larger monorepos, by defi	Because in larger monorepos, by definition most of the stuff in there is irrelevant to most people. So you're waiting for checkouts to finish because of a bunch of irrelevant stuff. You're waiting for tests to finish because of a bunch of irrelevant stuff. You	camgunz	9.786509	-7.3568025	comment	5.0	17.5	1663432507	-13.82867
32890100	Ada Programming Language	Ada Programming Language	jayp1418	10.648179	-7.7248936	story	5.0	63.0	1663525973	-5.181792
32961250	And the market for available ADA dev	And the market for available ADA devs is ... <crickets>Even the USAF and defense contractors like Lockheed Martin switched to C++ from ADA for the F-35.ADA is basically dead and buried outside of maintenance for 35+ year old planes, but I doubt those are seein	ChuckNorris89	10.65865	-7.721028	comment	5.0	17.5	1664015181	-5.114892
36679071	I've had this thought for a long tim	I've had this thought for a long time that if you have a completely functional code base (as in no side-effects), making the decision between a microservice approach and a monolith approach is fundamentally transparent. Any functional code can not only be spli	AndrewPGameDev	9.796687	-7.375366	comment	5.0	12.5	1689072110	-13.826923
36707220	Fortran is a beast. People crap on i	Fortran is a beast. People crap on it all the time yet use it often millions of times a day without realizing it.	thumbuddy	10.461355	-7.408559	comment	5.0	19.0	1689245064	8.809032
36838649	indeed that would be number 1 by a V	"indeed that would be number 1 by a VERY high margin. It's pretty ridiculous to start with ""world domination"" as an objective and end up 10 years later without a portable stdlib (aka foundation).Another issue would be a coherent concurrency system. Today we hav"	bsaul	10.53234	-7.818698	comment	5.0	18.5	1690139619	-10.8196945
37068766	Most of the microservice code I see 	"Most of the microservice code I see is  response = fetch(url, payload)
  if (response.error) ...

but 99% of the folks I ask what is going to happen when the fetch does NOT error out but instead takes 10 seconds look at me like I'm speaking gibberish.This is t"	tra3	9.787226	-7.351345	comment	5.0	23.0	1691616931	-13.806141
37145804	> To be quite blunt, the sages' abil	> To be quite blunt, the sages' abilities are implemented absolutely horribly in this gameI agree 100%. I loved the game, but I don't understand how anyone at Nintendo thought that these mechanics were a good idea. To make matters even worse, the button is the	ot	10.250254	-7.198933	comment	5.0	15.5	1692187786	9.727214
37187544	"Can your ""facade"" ""isolate"" interns "	"Can your ""facade"" ""isolate"" interns making change in your service as well so that the whole service which powers the system doesn't go down. Microservices can."	prakhar897	9.781989	-7.3671694	comment	5.0	14.0	1692443254	-13.821839
37228403	I kind of feel that every single per	"I kind of feel that every single person that has had good experiences with microservices actually experienced something that doesn't fit the ""micro"" description, and often enough not even ""service"".If the thing can encapsulate an entire transaction, then it's "	marcosdumay	9.787668	-7.3608427	comment	5.0	13.5	1692737771	-13.815975
37291764	"TIL ""Fortran is a natively parallel "	"TIL ""Fortran is a natively parallel programming language"". I guess we aren't talking about FORTRAN 77 then."	martyvis	10.472054	-7.410408	comment	5.0	19.0	1693215993	8.794017
37293901	I wish there were more serious studi	"I wish there were more serious studies on ""Matlab risk"". There's a lot on $old_lang risk already, and Excel risk is now a serious thread of research, but many in academia (and very possibly greybeards in industrial R&D) just won't budge from Matlab. So e.g. al"	thanatropism	10.2120285	-7.783718	comment	5.0	13.5	1693230454	10.494681
37296717	This is probably fantastic from a ma	This is probably fantastic from a maintainability perspective, but I'm curious if some performance is left on the table by using LLVM IR instead of compiling directly to machine code. I know there are a number of optimizations that can be made for Fortran that	ruste	10.566085	-7.067173	comment	5.0	26.0	1693240352	-8.300378
37470054	Great. It should be fixed by replaci	Great. It should be fixed by replacing the FORTRAN systems with a modern solution. It's not that it can't be done, it's that the engineers don't bother to start the process (which is a side-effect of bad incentive structure at the employment level).	rglover	10.454693	-7.4134765	comment	5.0	16.0	1694451232	8.809281
37477231	I am literally working on a project 	I am literally working on a project where the backend team consists of three coders, and the backend currently consists 33 microservices. Common tasks for this platform involves calling around 7+ microservices.Thankfully I am working on the frontend side of th	Maxion	9.785939	-7.3540025	comment	5.0	17.5	1694497150	-13.821348
24462854	The amount of compiler magic used by	The amount of compiler magic used by SwiftUI is staggering. By itself it's not a deal breaker, but closed source makes it almost impossible to understand what is going on.	krzat	10.485706	-7.8129396	comment	5.0	14.0	1600021574	-10.836389
24490015	Does anyone use Ada for general purp	Does anyone use Ada for general purpose programming, like for where one might otherwise use Python, Go, nodejs, or something like that? Is it used for any low-reliability areas?	etaioinshrdlu	10.660113	-7.719821	comment	5.0	13.5	1600236765	-5.1563735
24496201	> malloc() return isn't checkedsmall	> malloc() return isn't checkedsmall digression, but I thought that at least on Linux, malloc() never returns an error because the actual allocation happens lazily, when the memory is first used?	stingraycharles	10.647768	-7.1142015	comment	5.0	14.5	1600283036	8.876062
24511818	Ah, just the right time to publish a	Ah, just the right time to publish about numpy - right when everyone is moving over to Julia because of numpy's warts.	throrthaway	10.233305	-7.9493437	comment	5.0	23.0	1600390419	10.634139
24534033	I'm not sure this is really going to	I'm not sure this is really going to take off, it seems that most people who are abandoning TF are moving to Jax or pytorch. My own experience with Jax is that it is much easier to use then TF, just an all round more pleasant experience. It would be interestin	bodono	10.021877	-7.9315467	comment	5.0	23.5	1600609892	10.532449
24533937	Careful, folks. S4TF is pretty much 	Careful, folks. S4TF is pretty much dead on arrival. It was pushed aggressively by Chris Lattner (for obvious reasons) but he left Google a while ago and since then most internal users lost interest. There's nothing in Swift that's inherently suitable for ML a	throw6606	10.465624	-7.825359	comment	5.0	30.0	1600608839	-10.857256
24585647	A deep dive into Swift’s function bu	A deep dive into Swift’s function builders	taksintikk	10.524329	-7.814033	story	5.0	64.0	1600997192	-10.888182
24635672	I suppose the #1 reason to pick Fort	I suppose the #1 reason to pick Fortran over C is knowing Fortran and not C. Then doing it because you can.Maybe you have a math library in there worth putting into wasm.	LanceH	10.487138	-7.371978	comment	5.0	13.5	1601439725	8.837335
24680646	Ask HN: What are the best resources 	Ask HN: What are the best resources to learn app development for Macs?	mailarchis	10.4646225	-7.7139273	story	5.0	9.0	1601832270	-6.830271
24715746	Is Swift worth learning if you're no	Is Swift worth learning if you're not going to be doing Apple development?	typon	10.447764	-7.804669	comment	5.0	15.5	1602130738	-10.860173
24773294	I've spent a lot of time over the pa	"I've spent a lot of time over the past couple of months thinking about how it would be great to move to microservice architecture to help with the ""ball of mud"" our codebase has turned into. The benefits seem really great, but it's such a daunting hill to clim"	yeswecatan	9.761258	-7.341795	comment	5.0	16.0	1602652173	-13.808269
24975031	I prefer lower devops complexity and	I prefer lower devops complexity and higher software application complexity. Any day.Microservices is higher devops complexity in exchange for lower software application complexity. A really terrible deal IMO.	boltefnovor	9.787568	-7.351092	comment	5.0	21.5	1604363101	-13.823255
24975809	I love my service based architecture	I love my service based architecture.  It's about 10 years old and I can't imagine a better way of separating concerns and keeping a clean, maintainable, and resilient e-commerce operation up and running.  I don't have hundreds of services, there are maybe 30.	jacob019	9.789956	-7.3571763	comment	5.0	14.0	1604371065	-13.827475
25255543	SymPy is pretty niche, but it saved 	SymPy is pretty niche, but it saved my butt many years ago in my years of collegiate robotics. We spent months unsuccessfully trying to compute kinematics and sensor coordinate transformations on vectors of quarternions by “hand” with numpy. I wouldn’t wish it	nitsuaeekcm	10.322566	-7.2004113	comment	5.0	14.5	1606753894	9.879233
25255649	For those wondering, like me, what S	For those wondering, like me, what SymPy is, the top of https://docs.sympy.org/latest/index.html explains it:> SymPy is a Python library for symbolic mathematics.Both the release notes as well as the readme of the github repository don't explain it (or at leas	jdubb	10.331616	-7.2012854	comment	5.0	12.5	1606754334	9.872559
25268988	Tom Swift and His Electric Rifle (20	Tom Swift and His Electric Rifle (2017)	Hooke	10.4640465	-7.838198	story	5.0	39.0	1606851790	-10.847618
25322987	I write in Swift.Swift is six years 	I write in Swift.Swift is six years old.The difference is that Apple, the most valuable corporation on Earth, has backed it 100%. They do occasionally kill initiatives (Can you say “OpenDoc”? I knew you could!), but not at the 50% rate that Google does, so I k	ChrisMarshallNY	10.453782	-7.8056793	comment	5.0	16.0	1607256523	-10.862209
25375015	Appreciate your insight, and I'm sor	"Appreciate your insight, and I'm sorry to hear about the AMS team.The OP indicates that a rewrite was necessary regardless. Even if Swift was not yet mature, do you think it was more worthwhile than rewriting in ObjC? Given that the goal was to ""sustain mobile"	nwsm	10.460133	-7.802039	comment	5.0	15.5	1607615736	-10.854544
25385770	Having spent much of my time in Fort	"Having spent much of my time in Fortan 90 the last couple of months - I'm going to have to go ahead and disagree with you on this one. You know all these people saying ""when will I ever have to write mu own hash table?"" Well, when you start working in Fortran."	roel_v	10.446699	-7.4167786	comment	5.0	13.5	1607695079	8.846335
25441710	An annoying aspect of getting into O	An annoying aspect of getting into Octave was realizing that  it had only very basic support for Unicode (no Unicode in filenames, variable names, comments...)The main issue seems to be Matlab compatibility, which is stuck with UTF-16 (like some Windows intern	BlueTemplar	10.1945	-7.798015	comment	5.0	18.0	1608121306	10.349223
25442089	GNU Octave is a much better language	GNU Octave is a much better language for linear algebra problems that python+numpy.  If all you have to do is state and solve some systems, you can typically do it in one or two lines of octave, while in python you need to import libraries and use a bizarre no	enriquto	10.261357	-7.7541113	comment	5.0	27.5	1608124454	10.387901
25443888	MATLAB seems ill condusive for struc	"MATLAB seems ill condusive for structuring and organising code in a sane manner. It tends to give its users bad habits with respect to structuring code is what I observe.
It seems to lack data structures that are quite pervasive in modern programming practise."	billfruit	10.220684	-7.7909517	comment	5.0	18.0	1608133407	10.396656
31805501	How is the open source development s	"How is the open source development story for Ada these days? Is there good ""getting started"" material? Are there many projects in Ada? I learned it in college and really liked it, but that was more than a decade ago at a point when there might've been an open "	throwaway894345	10.652002	-7.716773	comment	5.0	13.5	1655690298	-5.105377
31842563	Microservicesgrug wonder why big bra	Microservicesgrug wonder why big brain take hardest problem, factoring system correctly, and introduce network call tooThat made me laugh. The microservices madness of the past decade is now starting to settle down to more mature understandings, but there are 	twhitmore	9.781654	-7.358967	comment	5.0	26.0	1655936314	-13.806169
31883476	It seems like the author isn't reall	It seems like the author isn't really defending against the bulk of the criticisms, which revolve around correctness and reliability, and instead highlights 'cool' language features. If you can't trust gradients or probability distributions / sampling to be co	t_mann	10.201152	-7.904572	comment	5.0	23.5	1656248170	10.80933
31969871	SwiftUI looks promising, but it is n	SwiftUI looks promising, but it is not ready at all.  It is fine for 'toy apps' but if you want to do anything serious UIKit is unbeatable.I think it will take few more years until SwiftUI can get to feature parity with UIKit.	ardit33	10.455762	-7.822989	comment	5.0	18.0	1656873086	-10.809349
32003015	fundamental problem is cargo cult de	fundamental problem is cargo cult developers trying to copy massive companies architectures as a startup. They fail to realize those companies only moved to microservices because they had no other option. Lots of startups hurting themselves by blindly followin	ren_engineer	9.777193	-7.3430896	comment	5.0	23.0	1657123890	-13.839526
32113644	> On macOS ... going forward, it’s l	> On macOS ... going forward, it’s likely that new capabilities and evolutions of the design language will be provided for the latter [SwiftUI] but not the former [AppKit].I think this is vastly over-stating the technical churn of UI development on macOS.While	favorited	10.458392	-7.8142366	comment	5.0	19.0	1657926015	-10.837603
32165694	> Micro-services require justificati	> Micro-services require justificationSince the micro-service craze started, I've been yelling this from the rooftops.  Making everything a micro-service by default is pure insanity.  The overhead to maintain them requires exponentially more resources than a m	mcg_oseng	9.780972	-7.363114	comment	5.0	13.0	1658324641	-13.827321
32251005	Aren't microservices nice because th	Aren't microservices nice because they allow you to have different teams own different parts of the code and minimize the communication overhead?	goncalo-r	9.784219	-7.3593626	comment	5.0	17.5	1658933087	-13.819466
32264008	I have wasted many, many hours track	I have wasted many, many hours tracking down reference cycles, so in some sense, I welcome this change.However, the scope creep of Swift is becoming nightmarish - nothing just makes sense anymore.My hopes for Swift are that it teaches a whole generation how to	anonymouse008	10.458028	-7.8254766	comment	5.0	18.0	1659014980	-10.829028
32265225	Swift’s focus continues to be “how d	Swift’s focus continues to be “how do we make the compiler happy to help it emit faster code” IMO. Very much in line with Lattner's, a compiler guy par excellence, original vision.Unfortunately for me, it's not aligned with my preferences. I like small languag	tambourine_man	10.483553	-7.821059	comment	5.0	31.0	1659020254	-10.827965
32401410	> However, it would be a significant	> However, it would be a significant bump in requirements for using the compiler on macOS: currently, the compiler can run on macOS 10.9 or newer. This would move that requirement to macOS 10.15.Is this even relevant?  For using a newer Swift with Xcode I'm fo	tempodox	10.457411	-7.770329	comment	5.0	16.0	1660067862	-10.751401
32444422	I still remember my horror when I sa	I still remember my horror when I saw the pain of something as simple as string concatenation in Objective-C. The community literally has to write special micros to make joining a string palatable [1]. I salute the brave souls who made OSX/iOS apps before Swif	Xeoncross	10.52371	-7.7019186	comment	5.0	23.5	1660341512	-10.592737
22120813	In the late 90s I remember a saying 	"In the late 90s I remember a saying roughly ""I don't know what language scientists will be using in 20 years, but it will probably be named Fortran"""	aidenn0	10.456934	-7.400698	comment	5.0	17.5	1579719902	8.811171
22120866	IIRC, most people who use Fortran us	IIRC, most people who use Fortran use it because there are extremely specialized physics libraries (or astronomy, or chemistry, and so on) that were probably written three to four decades ago by an extremely intelligent PhD student who lacks a proper programmi	vanderZwan	10.470625	-7.4093084	comment	5.0	14.0	1579720139	8.873673
22137381	> “ Many of the large tech companies	> “ Many of the large tech companies are investing in alternative languages such as Swift and Julia in order to build the next iterations of these libraries because of the hard limitations of CPython.”I would be interested in evidence of this. I work at a big 	mlthoughts2018	10.433925	-7.87926	comment	5.0	27.5	1579867890	10.769585
22161112	Here's what I'm not getting:Most the	Here's what I'm not getting:Most the tasks that require heavy computation in R are done through C/C++/Fortran APIs - why can't D interface with them without the intermediate R layer?The ones that are R-native - visualisation/dataframes - are best done through 	vnpc1	10.519097	-7.447774	comment	5.0	13.5	1580143995	10.316623
22161317	I wonder what's going to happen to t	I wonder what's going to happen to tensorflow Swift now, seemed like Chris was the main champion there.	forgotmyhnacc	10.447589	-7.8345537	comment	5.0	28.0	1580144891	-10.858249
22161780	It will most likely fade away.Swift 	It will most likely fade away.Swift for Tensorflow could never be taken seriously outside Apple community.On Linux, Foundation barely works and one still needs to selectively do either import Darwin or import Glibc for basic IO stuff.Then we are already at Swi	pjmlp	10.440145	-7.8312836	comment	5.0	23.5	1580147045	-10.858274
22193812	Why do we need to choose one of mono	"Why do we need to choose one of monolith and microservices? What about simply ""services""? Monolith doesn't have to be split into 50 microservices, it can be split to 3 services"	MosheZada	9.792525	-7.3651214	comment	5.0	14.0	1580408775	-13.819333
22227417	> On Apple platforms, Swift Crypto d	> On Apple platforms, Swift Crypto defers directly to CryptoKit, while on all other platforms it uses a brand-new implementation built on top of the BoringSSL library.Oh great, more pointless differences. Just pick one and stick to it. If you trust the BoringS	Nullabillity	10.525987	-7.8379693	comment	5.0	19.5	1580755343	-10.8222275
22282024	As far as I know, the main speed adv	As far as I know, the main speed advantage is that Fortran supports arrays, which are known to not alias.C/C++ does not have alias-annotations built-in. Although with template constructs like done in e.g. the Eigen library, alias-optimal code can be generated.	Fronzie	10.495075	-7.374008	comment	5.0	16.5	1581255400	8.854548
22282124	I've never seen a fortram codebase i	I've never seen a fortram codebase in my life. Is it still alive? What advantages does it offer over C/C++?	fctorial	10.49518	-7.417787	comment	5.0	14.5	1581256897	8.857499
39440556	Monolith is fine if you have a fairl	Monolith is fine if you have a fairly simple process for manipulating your data. Like posting an article, then a comment, with some moderation thrown in.But when you start adding business rules, and start transforming your data and moving it around, then your 	rugger	9.805496	-7.343369	comment	6.0	18.0	1708433151	-13.815109
39443000	"In my experience the boring ""I deliv"	"In my experience the boring ""I delivered a project very fast with X,Y and Z and saved the company $100mil"" will win over ""I rearchitected a massive system to run on microservices""At a certain point in your career, you'll realize that the business manager can o"	JAlexoid	9.765987	-7.3482847	comment	6.0	24.0	1708445402	-13.818884
39526775	I never worked with micro services, 	I never worked with micro services, but I have this question. Do micro services require more and better management?I can imagine that you need to keep track of all these services, along with information about dependencies, code version, API version and others.	torcete	9.781707	-7.362306	comment	6.0	18.0	1709054908	-13.818071
39610064	Who uses Mathematica, in this age of	Who uses Mathematica, in this age of python/Julia etc?  The Grad student world seems to be captured by Matlab	caycep	10.208704	-7.738182	comment	6.0	17.0	1709678430	10.385767
39611284	Dart has it, last 12 months or so.Fu	Dart has it, last 12 months or so.Funnily enough, I sort of had the opposite journey, Swift seems horribly complicated and over-specified. The Dart compiler knows if I do a null-check, it can treat following references as safe, instead of if let x = x etc.And 	refulgentis	10.52093	-7.8330216	comment	6.0	32.0	1709689233	-10.839118
39611261	Super cool! I absolutely adore swift	Super cool! I absolutely adore swift, it has so many simple features I love that I am sometimes surprised to find are missing in other languages. (ex off the top of my head: switching on enum's with associated values is super powerful in Swift and I was surpri	RetpolineDrama	10.541042	-7.861037	comment	6.0	50.5	1709689036	-10.853539
36678694	This is hn so obviously your comment	This is hn so obviously your comment has to be the top voted comment. I am really tired of this trend here.No. microservice vs monolith is not the deciding factor of the developer speed or bugs. It wouldn't even be top 5 factor for good developers. Difference 	YetAnotherNick	9.789894	-7.352638	comment	6.0	19.0	1689069656	-13.825021
36741990	Ada Outperforms Assembly: A Case Stu	Ada Outperforms Assembly: A Case Study	todsacerdoti	10.627482	-7.7056975	story	6.0	58.0	1689464992	-5.1027718
36835412	Mixing Swift and C++	Mixing Swift and C++	oumua_don17	10.506049	-7.8022556	story	6.0	84.0	1690121093	-10.824781
36837845	I’ve been bitten enough by Objective	I’ve been bitten enough by Objective-C++ compiler bugs (Apple’s attempt at mixing Objective-C and C++), as well as bugs in Apple’s code in the Swift ecosystem, not to trust the stability here for at least several years. I also don’t see how this is much better	meisel	10.504002	-7.7336097	comment	6.0	17.5	1690134900	5.65496
36905382	Microservices are essential at any l	Microservices are essential at any large company. Can you imagine if Facebook was still a PHP monolith? They'd need 5,000,000 instances to run the app.	0xy	9.782364	-7.3417234	comment	6.0	17.5	1690543815	-13.837872
37085604	Objective-C Internals	Objective-C Internals	ingve	10.499797	-7.716966	story	6.0	96.0	1691734072	5.6846437
23517990	I don't really get this complaint:> 	I don't really get this complaint:> The already weird-ish addition of Smalltalk/Objective-C keywords inside the f(x) syntax: f(arg:x)I'm a huge fan of named arguments in Swift.  It's one of the things I miss most when working with languages which don't have it	skohan	10.626564	-7.75419	comment	6.0	55.0	1592145831	-10.769839
23717169	I use C++ Eigen extensively. I wonde	I use C++ Eigen extensively. I wonder if it feasible to write a C++ programs that hands off blocks of linear algebra code to Fortran subroutines. Eigen does a wonderful job of late binding and lazy evaluation so that something like the following is fairly effi	waynecochran	10.485076	-7.384741	comment	6.0	20.5	1593718936	8.855414
23757577	Am I the only architect that hates m	Am I the only architect that hates microservices with gusto?I've only seen bad implementations out there (tens of products), and have yet to encounter one that looks reasonable. If your average developer has trouble implementing something sane when the only pr	francasso	9.782229	-7.3525233	comment	6.0	15.5	1594117288	-13.8273325
24019719	I still raise an eyebrow whenever Ap	I still raise an eyebrow whenever Apple pushes running iOS apps on Mac as a big plank of its desktop strategy. SwiftUI is still incomplete, badly documented, and a bit of an arse to work with. A shame, because it has the potential to be really enjoyable to wor	drawfloat	10.456847	-7.82019	comment	6.0	20.0	1596282413	-10.847501
24171926	I had to dig through some fortran co	I had to dig through some fortran code for my thesis and still don't quite undedsta what exactly it is that makes it so appealing or faster than the same programs written in C/C++. The syntax seemed excruciatingly old and verbose. Is there actually a reason fo	awild	10.493047	-7.391609	comment	6.0	15.5	1597521937	8.857707
19971830	Can anyone explain the difference be	Can anyone explain the difference between the Wolfram Language and Matlab/Julia? I understand it has a better story for symbolic mathematics, but how often do people need that? Personally, I've found numeric computation more useful in 99% of the cases; do othe	pron	10.182526	-7.937513	comment	6.0	29.0	1558456841	10.62318
20149813	There is no description on how micro	"There is no description on how micro frontends can be structured in practice. The run down in the marketing section is feels like a sales talk. No serious mentions of downside.
Pretty blunt article hosted on martin fowlers domain.What I would expect is an anal"	gcpwnd	9.80721	-7.3441954	comment	6.0	17.5	1560194147	-13.800166
18944852	What benefit does Octave have over t	What benefit does Octave have over the Python ecosystem? Esp as a clone of proprietary software?The only thing I can see is as a way of running Matlab codes in clusters on cloud w/o having to also run the license servers.	sitkack	10.192269	-7.7944236	comment	6.0	22.5	1547863770	10.461951
19088350	Swift 5 Exclusivity Enforcement	Swift 5 Exclusivity Enforcement	return_0e	10.564486	-7.803967	story	6.0	115.0	1549392283	-10.834066
19223966	I am flabbergasted that you were not	I am flabbergasted that you were not aware of JAXA.How is this possible. What are people been taught?https://en.wikipedia.org/wiki/JAXA	TheSpiceIsLife	10.019707	-7.9373293	comment	6.0	17.5	1550825405	10.577431
19242647	There's a bit of an emperor's clothe	There's a bit of an emperor's clothes problem with microservices. If microservices are never combined together, they are essentially monoliths under a cooler name. But as soon as you combine them, you run into the same problems that are solved by traditional s	quizotic	9.79399	-7.3583703	comment	6.0	20.5	1551065295	-13.80953
19252320	I've spent a large percentage of my 	I've spent a large percentage of my life in bookstores and I have never seen an Ada book.  I've never met an Ada programmer or met someone who knew an Ada programmer.  Is there any proof that the language actually existed?  Maybe it was a CIA plot to trick the	lamarpye	10.647792	-7.7265115	comment	6.0	16.5	1551161320	-5.133539
19384525	> So naturally, branching, building 	> So naturally, branching, building and testing across all these different microservices is difficult. Imagine having to roll back a commit, then having to find the equivalent commit in the two other parent services, then rolling back the horizontal services t	merb	9.785923	-7.353908	comment	6.0	27.5	1552515719	-13.804796
19453234	The Fortran Automatic Coding System 	The Fortran Automatic Coding System (1957) [pdf]	headalgorithm	10.488352	-7.353741	story	6.0	56.0	1553181092	8.794002
19487021	Swift 5 Release Notes for Xcode 10.2	Swift 5 Release Notes for Xcode 10.2	jaynagpaul	10.45529	-7.8321247	story	6.0	68.0	1553550317	-10.823132
19508986	> Real Programmers use FORTRAN.Ahem.	> Real Programmers use FORTRAN.Ahem. No. Real Programmers use machine code.http://www.catb.org/jargon/html/story-of-mel.html	a1369209993	10.490314	-7.3768535	comment	6.0	16.5	1553744056	8.80428
19632326	F18 Fortran compiler and runtime pro	F18 Fortran compiler and runtime project is accepted as part of LLVM project	ingve	10.481344	-7.334627	story	6.0	141.0	1554974154	-8.335307
19644118	Microservices are an organizational 	"Microservices are an organizational pattern: ""we have 500 programmers working on one application, how the hell do we do it.""Solution: break up application into independent projects, each team of developers works on one of them, have extra team that builds tool"	itamarst	9.782664	-7.3613324	comment	6.0	17.5	1555071603	-13.820146
15889704	List Comprehension in Swift	List Comprehension in Swift	DaNmarner	10.566242	-7.805957	story	6.0	56.0	1512876686	-10.838457
15916468	">""Before we start, Objective-C is a "	">""Before we start, Objective-C is a runtime-oriented language, which means that all of the links between your methods and variables and classes are deferred to the last moment possible to when your app is actually running, ...""I had not heard the term ""runtime"	bogomipz	10.503127	-7.7313814	comment	6.0	19.5	1513191209	5.650583
15947640	Anyone brave enough to bet which one	Anyone brave enough to bet which ones are going to turn out big ?Swift has a big potential in the sense that it's backed by Apple, and looks like Objective C reimagined for Apple's purposes.Rust has Mozilla backing, and it's already popular around here, so I w	b0rsuk	10.509429	-7.813009	comment	6.0	15.0	1513544563	-10.823353
16226429	What's new in Swift 4.1	What's new in Swift 4.1	OberstKrueger	10.465203	-7.832334	story	6.0	84.0	1516828790	-10.857144
16227207	Is this used outside the Apple eco-s	Is this used outside the Apple eco-system much? I admit I haven't looked at Swift in 2 years or more.I find the omission of features like namespaces really strange. I realize that namespaces don't jive with how Obj-C and Obj-C frameworks see the world and that	PopsiclePete	10.489308	-7.786235	comment	6.0	25.0	1516835341	-10.845598
16246544	A Letter from Dijkstra on APL (1982)	A Letter from Dijkstra on APL (1982)	sevensor	10.474272	-7.171023	story	6.0	62.0	1517067177	-9.431076
18162949	Can anyone recommend good examples o	Can anyone recommend good examples of monoliths in open source? Preferably in Go?I inherited a bunch of micro services at my current job with a fairly small team. My feelings have been that the code had been prematurely micro-serviced considering the team is s	red_hare	9.793238	-7.3526645	comment	6.0	21.5	1538951206	-13.821808
18255900	I don't believe it os reasonable to 	I don't believe it os reasonable to portray microservices as the result of incompetence and blame-shifting.Microservices are actually a very basic and fundamental principle of software engineering: separation of concerns.  If your system is extensive enough so	geezerjay	9.785364	-7.363165	comment	6.0	15.0	1539948658	-13.817211
18378036	Avoiding race conditions in Swift	Avoiding race conditions in Swift	ingve	10.518128	-7.82182	story	6.0	63.0	1541365243	-10.843329
18544424	Do you know of any learning opportun	Do you know of any learning opportunities such as internships where one can learn and apply Fortran?	tejassanap	10.4593115	-7.409697	comment	6.0	20.5	1543339842	8.822043
18895856	Writing custom tools with Swift	Writing custom tools with Swift	ingve	10.481337	-7.820685	story	6.0	96.0	1547370295	-10.813154
18898126	Swift tries to be a jack of all trad	Swift tries to be a jack of all trades, but I think as a scripting language (as in this example) it falls short. Having to start a run loop, write asynchronous callbacks (completion handlers), and implement custom JSON decoders just to make a web request is in	rgovostes	10.485166	-7.828279	comment	6.0	30.0	1547406521	-10.784099
30000174	Do you know what kind of software ha	Do you know what kind of software has an absurd level of horizontal scalability by default? Web servers.The idea of splitting your web servers into multi-tiered web servers for scalability is, well, weird. Yet, somehow it's the main reason people keep pushing 	marcosdumay	9.793913	-7.3522778	comment	6.0	22.5	1642626596	-13.837759
30079239	One of the questions I like asking d	One of the questions I like asking developer pals is what ratio their company has between engineers and services/deployable units. Anybody reading this care to share?For me, that number says a lot more about the day-to-day life of devs than the microservices v	wpietri	9.782471	-7.3589478	comment	6.0	17.0	1643150952	-13.822093
30176160	I think the visual style of the lang	I think the visual style of the language rubs off.  There is for exampleC-like: Curly brackets, small keyword count, etc ...   This is a language for people who want to write fast code that gets things done, not a gram of weight too much.  Hacker spirit.Python	hyperman1	10.650587	-7.7222524	comment	6.0	25.5	1643800955	-5.084208
30315692	What a weird post. There's so many c	What a weird post. There's so many cool things Fortran does better than C-like languages, but instead the post focuses on superficial syntax like labelled loops and dangling elses. The labelled loops thing particularly irks me because it's a so often repeated 	nmilo	10.60909	-7.3791423	comment	6.0	29.0	1644695329	-9.288915
30349687	Using JAX in 2022	Using JAX in 2022	SleekEagle	10.017036	-7.9407506	story	6.0	66.0	1644946340	10.554112
30405851	Ask HN: How to gain a meaningful exp	Ask HN: How to gain a meaningful experience at work?	kartoshechka	9.765042	-7.2885528	story	6.0	7.0	1645366547	1.8451748
30416986	Any of you guys mind sharing your ex	Any of you guys mind sharing your experiences and use cases for Mathematica? I have yet to see someone using it in the wild.	spyremeown	10.30582	-7.1337595	comment	6.0	16.0	1645457793	9.71312
30439643	> And then we have 45 micro services	"> And then we have 45 micro services running on a lot of expensive hardware (somewhere) doing less and with worse performance than what we used to do 15 years ago in a monolith on a single server.And yet, the ""expensive"" hardware of now is cheaper than your si"	mschuster91	9.797682	-7.311537	comment	6.0	18.0	1645611603	-13.794064
30520167	"""Based on rough usage patterns, we a"	"""Based on rough usage patterns, we assumed an average iOS engineer does around five clean builds and 30 incremental builds each day...""...wait, what? I know YMMW, but for me and most of my colleagues it's 1-2 clean build per day and 30 incremental... per hour,"	luigi23	10.442783	-7.826961	comment	6.0	22.5	1646169675	-10.847333
16455059	Understanding Dijkstra's Algorithm	Understanding Dijkstra's Algorithm	exist	10.460911	-7.168735	story	6.0	128.0	1519502725	-9.436663
16722473	What happened to good old returning 	What happened to good old returning NULL when no memory is available?No let's do overcommit (malloc always works) and OOM-kill some random process when under memory pressure!	ben_bai	10.643432	-7.0394726	comment	6.0	24.5	1522487321	8.852348
16900063	I actually prefer Objective-C to Swi	I actually prefer Objective-C to Swift.	_diyu	10.483241	-7.7894607	comment	6.0	34.5	1524450195	-10.839299
16899658	Bringing Objective-C to the Amiga	Bringing Objective-C to the Amiga	Midar	10.473574	-7.7215934	story	6.0	137.0	1524444217	5.657434
17166861	Writing self-documenting Swift code	Writing self-documenting Swift code	ingve	10.4918	-7.7863646	story	6.0	73.0	1527428725	-10.749618
17215299	Google Swift Style Guide	Google Swift Style Guide	dkmar	10.456974	-7.8357964	story	6.0	55.0	1527957945	-10.856748
17250107	I'm not sure what the point is here.	I'm not sure what the point is here. It feels like a bunch of disconnected thoughts and observations about Swift, none of them pursued very far. Some of them seem to contradict each other. And none of them are particularly striking or insightful.	skywhopper	10.461877	-7.827148	comment	6.0	15.5	1528312258	-10.83655
17500884	I'd wager that microservices, a lot 	"I'd wager that microservices, a lot of the time, are basically used as a management structure rather than for their benefits as pure tech, so less mature teams can silo themselves off and avoid communication (e.g. ""I can work just on my backend image processin"	ljm	9.782889	-7.3599124	comment	6.0	35.5	1531247420	-13.813985
17503062	> ... the fundamental problem was ce	> ... the fundamental problem was centered around a shared architecture of destinations and shared code.From an architectural perspective, there is absolutely no difference between a micro service and a library.  The only real difference is in the dispatch mec	mikekchar	9.796752	-7.3533807	comment	6.0	19.5	1531264818	-13.825274
17505131	As a microservice agnostic, i wonder	As a microservice agnostic, i wonder how you can deal elegantly with transactions across services, concurrent access & locks, etc. [Disclaimer: i have not read the article yet]	lolive	9.788127	-7.3595576	comment	6.0	17.0	1531295104	-13.770383
17585936	Ask HN: At what size do Microservice	Ask HN: At what size do Microservices make sense?	stephenheron	9.784574	-7.354351	story	6.0	21.0	1532250428	-13.820566
17612389	I have a soft spot for languages wit	I have a soft spot for languages with strong type systems and was always attracted by ADA, but newer met anyone using it in the wild.Is it used anywhere outside of defense and flight industry?	insulanian	10.645329	-7.732496	comment	6.0	22.0	1532549768	-5.129202
17739560	"""It’s really about taking the best i"	"""It’s really about taking the best ideas from where we can get them and assembling them together."" ~ Chris LattnerI think this is the root of my dislike of Swift. ""Assembling"" together the best ideas, which may only be 'best' within a specific context does not"	sandbags	10.495791	-7.8234425	comment	6.0	18.0	1533993592	-10.854591
17740963	google’s push for kotlin and apple’s	google’s push for kotlin and apple’s push for swift seems like ego-ism and aiming for glory to me.What new does kotlin or swift offer which python or ruby can not? Why reinvent the damned wheel for syntax sake when they could have worked for their device centr	m23khan	10.542878	-7.817218	comment	6.0	17.0	1534012799	-11.032399
17808491	Catching integer overflows in C	Catching integer overflows in C	fanf2	10.626934	-7.0352674	story	6.0	54.0	1534848184	-7.025672
21018950	To me this looks like perl golfing, 	"To me this looks like perl golfing, but for some reason perl golfing is bad but writing extremely terse functional programs is not.Personally I like to combine both approaches. In swift I would write something like this:    let l = [""abc"", ""ab"", ""abcdef"", ""abc"	yoz-y	10.642261	-7.6424074	comment	6.0	20.5	1568916901	-10.816366
21042353	Small but significant improvements i	Small but significant improvements in Swift 5.1	ingve	10.467915	-7.82878	story	6.0	78.0	1569171068	-10.857726
21085264	Anyone here using Swift on the serve	Anyone here using Swift on the server? Perhaps something in production even?	aloer	10.467084	-7.8295817	comment	6.0	17.5	1569530280	-10.83703
21087084	or as Objective C:    [[NSFileManage	"or as Objective C:    [[NSFileManager defaultManager] copyItemAtPath:src toPath:target error:&error];

Inspired by smalltalk, of course. ObjC's verbosity is legendary, and I'm not its hugest fan, but there's a key innovation here that I am a huge fan of: the l"	jjoonathan	10.501718	-7.729756	comment	6.0	29.5	1569542947	5.570136
21412371	Swift isn't comfortable to use on no	Swift isn't comfortable to use on non-Mac platforms. Because of this I can't see it taking over from Go or Rust in the server space. (I mention Rust because the language type system feels similar to Swift's and Rust is gunning for the same server space.)If the	echelon	10.530892	-7.84915	comment	6.0	33.0	1572548462	-10.835299
21523247	> I like differentiable programming 	> I like differentiable programming a lot, but can anyone explain the motivation for Swift as their language of choice for this?Back in January, Jeremy Howard (of fast.ai fame) wrote up a blog post talking about why he was exploring using Swift for this purpos	gwd	10.477526	-7.827378	comment	6.0	17.5	1573647635	-10.839775
21626007	Lightweight API Design in Swift	Lightweight API Design in Swift	ingve	10.475746	-7.821345	story	6.0	109.0	1574664742	-10.824509
39125392	I would love to be corrected:  do yo	I would love to be corrected:  do you have some specific examples or some underlying principles?My professional and academic background is in numerical analysis and scientific computing (including BLAS/LAPACK level implementations), but I admit I haven't done 	quanto	10.405263	-7.264863	comment	6.0	15.0	1706148262	8.890282
39140595	It was controversial at the time.Dij	"It was controversial at the time.Dijkstra advocated ""single entry, single exit"" for each control block. Programs should be composed of such blocks. Makes for very neat flowcharts. Good for entry and exit conditions.Single entry wasn't that controversial. Singl"	Animats	10.576517	-7.1849713	comment	6.0	20.5	1706262047	-9.450777
12753882	Kill “Microservices” Before Its Too 	Kill “Microservices” Before Its Too Late by Chad Fowler	devnulled	9.781841	-7.3596096	story	6.0	37.0	1476981648	10.66231
12831051	Kind of interesting overview, but it	Kind of interesting overview, but it doesn't support XCode nor the Objective-C and Swift frameworks I care about.	pjmlp	10.452715	-7.7637205	comment	6.0	19.5	1477849141	-10.776618
13006459	Swift and the Legacy of Functional P	Swift and the Legacy of Functional Programming	ckurose	10.541536	-7.819036	story	6.0	91.0	1479744548	-10.828524
13150878	Ask HN: Would any one pay for a pyth	Ask HN: Would any one pay for a python to objc transpiler, with iOS integration?	noidax	10.514824	-7.764581	story	6.0	3.0	1481461098	5.7713423
13212928	Its cool that you can run Swift on t	Its cool that you can run Swift on the server, but that sure does seem like a lot of hoops to jump through, coupled with equally many gotchas. No threading on Linux, NSUnimplemented all the time, no built in random, poorly implemented foundation types, etc. se	nxc18	10.461211	-7.815706	comment	6.0	23.0	1482167457	-10.823286
13366944	I'm wondering if this means that the	I'm wondering if this means that the major work on Swift the language is complete?  I've avoided it since it seems every year the language or the API changes... has it now settled?  I really didn't want to go back rewriting code every year.	mozumder	10.464747	-7.8305106	comment	6.0	20.5	1484070427	-10.853458
13369808	There's got to be more to this story	There's got to be more to this story. You don't spend years developing a language (Swift) as culmination of previous work (LLVM) and then abandon it for a job in a relatively new and different discipline. It doesn't make much sense to me.	gtrubetskoy	10.472473	-7.8212123	comment	6.0	18.0	1484087443	-10.854419
13370752	ARC is a whole debate, but the one t	ARC is a whole debate, but the one thing it is not is simple and I would argue its more error prone than a traditional GC. I've used it for most of my career and I have seen what sloppy/unaware coding can do to it.Lattner is a well known expert on compilers. H	devsquid	10.57102	-7.7387986	comment	6.0	39.5	1484095331	-10.800588
13427314	No, it's not just you and yes, we of	No, it's not just you and yes, we often do overcomplicate software development.It's been that way long before agile methodology or microservices though. Complexity-for-the-sake-of-complexity EverthingHasToBeAnAbstractClass frameworks have been plaguing the sof	BjoernKW	9.777864	-7.3510118	comment	6.0	18.5	1484755445	-13.819129
13575357	Building a Lisp from scratch with Sw	Building a Lisp from scratch with Swift	ingve	10.487515	-7.823897	story	6.0	122.0	1486337140	-10.645546
13604147	The problem is I think Octave missed	The problem is I think Octave missed its window. 20 years ago when I was in grad school, everybody was using Matlab and a competitive open source version would have been a killer app. I looked into Octave at the time, but it was basically a toy at that point. 	jhbadger	10.198868	-7.7998314	comment	6.0	15.5	1486607526	10.432756
13607780	These two points are very important.	These two points are very important. I've wanted to make Octave a business, but I just never knew how to start. I tried to find people who would help us get started, but the only ones I could find wanted to either compromise Octave's freedom (e.g. sell non-fre	jordigh	10.1777935	-7.790946	comment	6.0	17.0	1486655810	1.3749985
27522126	To me this editor gets it right in t	To me this editor gets it right in the sense that we don’t need to get rid of code as the “nocode” movement is trying. Instead we need to make coding more enjoyable and figure out ways to make it more interactive.One specific thing Utopia addresses to me is th	sktrdie	10.458218	-7.8240037	comment	6.0	19.0	1623794714	-10.888196
27576959	Going Beyond Ada 2022	Going Beyond Ada 2022	pjmlp	10.629771	-7.728549	story	6.0	123.0	1624258990	-5.0815735
27884002	What's the argument against using R 	What's the argument against using R and dropping into RCpp for very limited tasks? I (helped) write a very widely used R modelling package and while I wasn't doing anything on the numerical side, we seemed to get great performance from this approach -- and wor	notafraudster	10.221769	-7.9693666	comment	6.0	17.5	1626710052	10.812963
27904729	Useful algorithms that are not optim	Useful algorithms that are not optimized by Jax, PyTorch, or TensorFlow	ChrisRackauckas	10.01411	-7.9023876	story	6.0	214.0	1626865832	10.487685
12077646	I've tried to use Octave, I really d	"I've tried to use Octave, I really did. Passed few classes with projects made in Octave. Then I nearly failed some classes because of simple, reproductible bugs no one gave a flying fuck about. 
None of PCs I've installed the thing on could produce a fully wor"	emp_zealoth	10.187893	-7.8048816	comment	6.0	20.5	1468313679	10.414539
12108876	Exponential time complexity in the S	Exponential time complexity in the Swift type checker	adamnemecek	10.57362	-7.7999163	story	6.0	133.0	1468725224	-10.811455
12134743	Speaking as a young engineer, I can 	Speaking as a young engineer, I can tell you many are already looking past microservices towards things like AWS Lambda, AMQs, and BaaS, which make a great deal more sense. Why? Because it helps reduce dev effort down to purely the logic you'd have to write no	sp527	9.792944	-7.344402	comment	6.0	18.5	1469076736	-13.804459
12135208	You are not getting more reusability	You are not getting more reusability from a bunch of microservices, compared to one big service, I don't see where you got that?	carterehsmith	9.793116	-7.360954	comment	6.0	23.0	1469083816	-13.820127
12200478	If only it was also available for C+	If only it was also available for C++.  Armadillo is nice but it has a lot of important differences, and doesn't seem to support more than 3 dimensional matrices.	jdlyga	10.609808	-7.101018	comment	6.0	15.5	1470031492	9.23468
12364859	I agree with Woz, Swift is too advan	I agree with Woz, Swift is too advanced and complicated for kids. They are better starting out with MIT Scratch or something like that.	suyash	10.468117	-7.827413	comment	6.0	16.5	1472197862	-10.828116
12390956	I've done a lot of work on monoliths	I've done a lot of work on monoliths, and a fair amount with microservices. I've never observed the perceived simplicity of the former to bear out in practice; there's just as much complexity, but instead of being reasonably well contained and prevented from s	throwanem	9.792022	-7.3566027	comment	6.0	19.5	1472570579	-13.824303
12494860	> It is not source-compatible with S	> It is not source-compatible with Swift 2.2 and 2.3.This created havoc in Python. Hopefully it won't happen here.	insulanian	10.480653	-7.8201423	comment	6.0	22.0	1473839268	-10.851686
12509129	Microservices, like nosql databases,	Microservices, like nosql databases, and complex deployment systems (docker) are very important solutions to problems a very small percentage of the development community has.It just so happens that the portion of the community is the one most looked up to by 	throwaway13337	9.777447	-7.321868	comment	6.0	27.5	1473968182	-13.783102
12527452	In my experience, there's a costly d	"In my experience, there's a costly dimension to DRY that doesn't get enough love: dependencies.DRY incurs a significant dependency cost.  This has been painful for me, since I work on distributed systems a lot.  When you have an ardent follower of ""DRY"" who re"	cle	9.82105	-7.2944174	comment	6.0	16.0	1474236477	-13.776853
35261588	Yesterday, Copilot could not write a	Yesterday, Copilot could not write a program with SymPy, which is a library for doing symbolic math in Python. (e.g., it would consistently confuse symbols in equations with Python variables). Today it uses SymPy as well as it uses NumPy (occasional mistakes, 	elil17	10.323445	-7.2138352	comment	6.0	31.0	1679495402	9.915184
28348865	Martin Fowler has been a big advocat	Martin Fowler has been a big advocate of micro services. I think micro services has been one of the biggest mistakes ever promulgated on software development and is responsible for developer misery, un-productivity, failed projects, and unintelligible rats nes	seibelj	9.777901	-7.3531413	comment	6.0	23.5	1630259523	-13.815558
28511319	What is Matlab's moat? Did free soft	What is Matlab's moat? Did free software not catch up?	aitchnyu	10.213049	-7.770418	comment	6.0	16.5	1631540338	-4.75465
22301735	Looks very nice! It almost made me w	Looks very nice! It almost made me want to learn Swift.The only thing is that it's used only on iOS systems. If I'm going to spend the time to learn a new programming language, I'd like to use it everywhere like I do with JS.	adriansky	10.453552	-7.8219504	comment	6.0	20.0	1581449196	-10.819718
22316059	I recently did some reading on micro	I recently did some reading on microservices, since I had to create a multi-service deployment.I really don't understand how people are able to manage the complexity when they split every single small domain of an application into its own service. You have to 	emerongi	9.788529	-7.3616242	comment	6.0	34.0	1581580187	-13.849292
22316177	I was one of two developers who buil	I was one of two developers who built a large micro-service system from scratch. It was the correct way to do it given the requirements and limitations. The dev-ops overhead was HUGE. Handling multiple repositories, versions, version-dependencies, documenting/	bszupnick	9.772465	-7.3318105	comment	6.0	15.5	1581582192	-13.822208
22381578	This article signals to me that we m	This article signals to me that we may have reached ‘peak microservice’ and should now expect a flood of blog posts extolling the virtues of monoliths and lots of industry effort to combine microservices into self-contained monoliths.	aserafini	9.786745	-7.359102	comment	6.0	20.5	1582271228	-13.859035
22474733	But microservices are an example of 	But microservices are an example of simpler systems. Each microservice does far less than the whole monolith does. You can read all the code in ~15 minutes.I've worked at companies that have monoliths that are 50x more difficult to work on because of the size.	nickbauman	9.784336	-7.3564863	comment	6.0	18.0	1583246150	-13.818834
22492698	Export SwiftUI code from Figma desig	Export SwiftUI code from Figma designs	insomnie	10.45663	-7.8246827	story	6.0	100.0	1583408047	-10.833518
22561729	1.0 was released 5 years ago.Swift i	1.0 was released 5 years ago.Swift is younger and I think it’s a great language.If the tooling is ready and I don’t have to fight it, I’d be fine using Rust. I just need a reason.  Anyone using it for iOS development?	melling	10.633031	-7.900545	comment	6.0	19.5	1584047167	-10.824966
22643162	Why wouldn't they use Swift?  Seems 	Why wouldn't they use Swift?  Seems odd.	1over137	10.464559	-7.829061	comment	6.0	30.5	1584750648	-10.839051
22822411	Google really messed up here, they h	Google really messed up here, they had an unprecedented opportunity to create a new language for numeric computation and rally the scientific community around that. They hired Chris Lattner and he basically steamrolled that dream by forking Swift.I don’t see p	mountainriver	10.442261	-7.844393	comment	6.0	58.5	1586439588	-10.841718
22837875	I've never bought into this idea of 	I've never bought into this idea of microservices. Always wrote high performance native servers and have yet to encounter the situation when well designed monolith running on multicore monster with gobbles of RAM failed to satisfy client. Granted it will not w	FpUser	9.781745	-7.3343916	comment	6.0	27.5	1586556977	-13.8176365
23017594	Noo! Building teams around software 	Noo! Building teams around software components cements your architecture and prevents most cross-cutting improvements.I'll claim that splitting a well-structured monolith into microservices will always make it less maintanable, but it might be worth it if you 	strictfp	9.78921	-7.3454137	comment	6.0	21.0	1588156473	-13.8072605
23018326	I agree. I hate the term microservic	I agree. I hate the term microservice for the same reason I hate superlative infected clickbait titles. There's no need for half of the word to exist. Service. What's wrong with service?	yowlingcat	9.784628	-7.3545637	comment	6.0	18.5	1588163669	-13.789211
23256589	Safe-Linking – Eliminating a 20 year	Safe-Linking – Eliminating a 20 year-old malloc() exploit primitive	eyalitki	10.663497	-7.130891	story	6.0	115.0	1590055089	8.872728
33499890	I have recently went through Fortran	I have recently went through Fortran from zero to all advanced features. My take is the following.The language is verbose but pleasant to work with. The latest 2008 version is really nice to look at. My assumption is that working with Fortran 77 and earlier is	rad_gruchalski	10.524088	-7.370383	comment	6.0	30.5	1667784529	8.8588
33580275	> if (n && m > (size_t)-1/n)Am I the	> if (n && m > (size_t)-1/n)Am I the only one that doesn’t think this is “sweet”?I mean I know what it does and why and how it works, but IMHO a good language should let you express your intention and algorithm in human terms and logic in which there is no -1 	noncoml	10.651211	-7.0179653	comment	6.0	24.0	1668316406	-6.979665
33602118	Yep. Microservices were pushed hard 	Yep. Microservices were pushed hard by Martin Fowler who gives terrible programming advice that always yields extremely lucrative returns for cloud platforms.	datalopers	9.78268	-7.354742	comment	6.0	17.5	1668464454	-13.816537
33603890	Related to this discussion, Elon mad	Related to this discussion, Elon made a tweet saying there are over 1200 microservices. Are there any tech talks or explanation videos showing a rough outline of what all these microservices do or how they're broken up? It's difficult to wrap my head around th	TheAceOfHearts	9.77608	-7.3567257	comment	6.0	15.5	1668474587	-13.815709
33660991	Apple has its own better Rust nowSwi	Apple has its own better Rust nowSwift:- Servers- OS- Apps with a wonderful SwiftUI framework- C++ Interop- Ownership model- Crossplatform	Kukumber	10.649533	-7.8869085	comment	6.0	19.0	1668800892	-10.848161
33740894	> But do you know what helps? Having	"> But do you know what helps? Having physical boundaries you can't cross so easily. Microservices. Or as I call them... just ""services"". Eric Evans has said that people using microservices may represent the most successful application of DDD's principles, not "	marginalia_nu	9.830205	-7.340972	comment	6.0	26.0	1669370147	-13.832817
33775192	Other commenters have pointed to Swi	Other commenters have pointed to SwiftUI being declarative as a big part of this problem, but I take a more nuanced view: the problem is actually that SwiftUI is a complexity-hiding abstraction. Specifically it hides the complexity of when UI is refreshed and 	georgelyon	10.464717	-7.8268127	comment	6.0	22.5	1669651085	-10.846375
33775221	It seems like every time a new UI fr	"It seems like every time a new UI framework comes around, a tradeoff is made between convenience and flexibility, with the advertising always being around ""look how easy it is to make a table view"", but this doesn't particularly impress me anymore, because as "	mfDjB	10.471543	-7.792349	comment	6.0	19.5	1669651185	-10.830014
33847443	When your code fails it's never the 	"When your code fails it's never the fault of the language. It's always ones own fault, a typo, some error in the logic, or something. Debugging always reveals that with a stone face. Always.Except> ""It turns out, there was a bug in Set.intersection(_:), but it"	stareatgoats	10.495353	-7.817051	comment	6.0	17.0	1670102220	-10.837447
33939273	When I hear about making overflow sa	When I hear about making overflow safe by making it wrap my main question is how much code is actually ready for overflow? I've seen many vulnerabilities where a bounds check was bypassed because a computation overflowed. It seems that the only really safe beh	kevincox	10.602167	-7.0734916	comment	6.0	20.0	1670724332	-6.9267282
34049844	Moduliths: Because we need to scale,	Moduliths: Because we need to scale, but we also cannot afford microservices	firstSpeaker	9.784309	-7.3553886	story	6.0	51.0	1671439068	-13.843191
34054270	I posted overflow checking of signed	"I posted overflow checking of signed integer arithmetic as a puzzle yesterday[1]. I got some good responses but none quite as minimal wrt number of instructions as my own solution:    bool add_will_overflow(int32_t a, int32_t b) {
        uint32_t c = (uint32_"	raphlinus	10.585751	-7.1001697	comment	6.0	20.5	1671468551	-6.936098
34056889	This is the first I've heard of Obje	This is the first I've heard of Objective-C++ [1]. What kind of masochist would you have to be to pick that?[1] https://en.wikipedia.org/wiki/Objective-C#Objective-C++	scrame	10.517393	-7.693891	comment	6.0	19.0	1671480211	5.678143
34096080	I have spent a lot of time thinking 	I have spent a lot of time thinking about this problem. I would gladly pay for a product that could make a real, honest to god preview environment that you could spin up on-demand and populate it with all of the data you need.This isn't it, and I think it's pr	echelon	9.813152	-7.253878	comment	6.0	18.0	1671730960	-13.807604
26610372	Ask HN: Why isn't ADA more popular?	Ask HN: Why isn't ADA more popular?	gerryeng	10.652382	-7.734072	story	6.0	8.0	1616939336	-5.0838995
26713924	Fortran, a 70-year-old computer lang	Fortran, a 70-year-old computer language, lands back on the top 20	jdkee	10.47995	-7.394434	story	6.0	9.0	1617726686	8.80988
26832202	The problems are that:- most such in	The problems are that:- most such interfaces do have a constant overhead that all programmers using the language have to pay.- some major operating systems (like Linux, ehem) make these interfaces useless for all their user space apps by enabling overcommit by	volta83	10.642838	-7.0340242	comment	6.0	34.5	1618570013	8.883519
27020582	Anyone using Matlab these days?  See	Anyone using Matlab these days?  Seems a bit niche.I used Octave in Andrew Ng’s ML class and wanted to learn more Matlab so I signed up for a Coursera course on it.It’s a nice tool.	melling	10.185729	-7.795303	comment	6.0	15.5	1620003862	10.406624
27224961	> meticulously written, previously f	> meticulously written, previously fine programsWith relatively few exceptions, if your program hits undefined behavior, then your program was already doing something pretty wrong to begin with. Signed overflow is a poignant example: in how many contexts is IN	jcranmer	10.650803	-7.0571194	comment	6.0	31.0	1621534576	-7.03766
27359327	Yes and no.Apple is perfectly willin	Yes and no.Apple is perfectly willing to maintain, say, Swift and LLVM as Free projects; but they also have a proprietary fork with extra bits exclusive to their own hardware. For example, their proprietary GPU drivers compile shaders with it. LLVM being permi	kmeisthax	10.556299	-7.057976	comment	6.0	19.0	1622572880	-4.5129504
27493324	> Some teams were suffering from ser	> Some teams were suffering from servicitis. Even worse than that, it generated a lot of friction while developing. One could not just look into a project in their IDE, but it required to have multiple projects open simultaneously to make sense of all that mes	kevmo314	9.802464	-7.3414574	comment	6.0	18.5	1623597638	-13.820756
37598482	But microservices are standalone ser	But microservices are standalone services.Anyone who correctly implements ms wouldn't make it depend on other ms or get it shipped to prod anyway.Edit: /s	ranting-moth	9.78739	-7.360505	comment	6.0	16.5	1695307827	-13.826166
37699098	I've been playing around with Swift 	I've been playing around with Swift and SwiftUI for the past few months and the thing that baffles me is why are certain features only available with a minimum iOS version.For example async required iOS 15.0. Why is this tied to the OS? Why can't they include 	keltex	10.459625	-7.818531	comment	6.0	20.0	1695959588	-10.818569
37699970	I think JAX is cool, but I do find i	"I think JAX is cool, but I do find it slightly disingenuous when it claims to be ""numpy by on the GPU"" (as opposed to PyTorch), when actually there's a fundamental difference; it's functional.  So if I have an array `x` and want to set index 0 to 10, I can't d"	jphoward	10.005849	-7.8988442	comment	6.0	19.5	1695968754	10.513141
37700349	Swift async/await is such a foot gun	Swift async/await is such a foot gun that induces deadlock over deadlock, and whats even worse, deadlocks the entire app so you cannot report and  notice this deadlock state in the app itself, which makes you blind.  I almost never had this problem with dispat	novok	10.589005	-7.810054	comment	6.0	15.5	1695972116	-10.832706
37950116	A lot of the low level code is worki	A lot of the low level code is working code in ObjC.There is no reason to replace perfectly working code that is battle tested if the requirements don't change.The fact that the new binaries on it are written in Swift is showing their 100% commitment to Swift,	keyle	10.474673	-7.79199	comment	6.0	38.0	1697757555	5.6738434
38014861	Correct me if I'm wrong, but adoptio	"Correct me if I'm wrong, but adoption of ""server-side"" (aka non-App) Swift by people who weren't already Mac/iOS app developers seems to have been microscopic. Surely the language must be considered a colossal failure in that regard, because the goals espoused"	frou_dh	10.475908	-7.819374	comment	6.0	21.0	1698252534	-10.844511
38015518	> Swift was sold to me as a safe lan	> Swift was sold to me as a safe language. But I think it would be more accurate to describe it as a thin veneer of safety over a deep pit of peril. The linux version of swift replicates a large number of native mac frameworks using whatever mix of C and C++ g	estebank	10.513058	-7.824038	comment	6.0	19.0	1698255052	-10.823424
38070122	The right time to extract something 	The right time to extract something into a separate service is when there's a problem that you can't tractably solve without doing so.Increasing architectural complexity to enforce boundaries is never a solution to a lack of organizational discipline, but mids	nevinera	9.789838	-7.3503675	comment	6.0	56.0	1698677423	-13.81956
38070334	our team of 300 - we _can't_ enforce	our team of 300 - we _can't_ enforce the clear abstractions. New dev gets hired, team feels pressured to deliver despite leadership saying to prioritize quality, they are not aware of all the access controls, they push a PR, it gets merged.We have an org wide 	sethammons	9.786329	-7.352631	comment	6.0	18.5	1698678351	-13.818865
38074384	> Wouldn't it be a hell of a lot eas	> Wouldn't it be a hell of a lot easier if it was all in one place where each commit is globally consistent?I always find this sentence to be a bit of a laugh. It's so commonly said (by either group of people with a dog in this fight) but seemingly so uncommon	starttoaster	9.793003	-7.360591	comment	6.0	17.0	1698693736	-13.864356
38185406	Found this bizarre: the authors resp	Found this bizarre: the authors response has a whole section that reads like an ad for MATLAB: https://twitter.com/dangaristo/status/1707165711427063902Not sure what the point of that is, it almost sounds like ChatGPT	superconduct123	10.184685	-7.7474427	comment	6.0	16.0	1699405290	9.871115
38206169	Microservices can be done right - bu	"Microservices can be done right - but then they're just Service Oriented Architecture.As a concept, they have been one of the most toxic concepts to be released on the tech world.I remember a conference where some influential person had a slide ""if your servic"	jokethrowaway	9.783769	-7.3508983	comment	6.0	21.5	1699543533	-13.81522
38444876	Swift as C++ Successor in Foundation	Swift as C++ Successor in FoundationDB [video]	cube2222	10.483532	-7.8295665	story	6.0	79.0	1701173374	-10.819799
38485717	I know the department of defense use	I know the department of defense used to use Ada because it was a “safety critical” language. I feel like when it comes to this devices there should be more stringent guidelines around coding practices. Is that not the case?	Decabytes	10.66417	-7.717329	comment	6.0	22.5	1701431156	-5.1147757
14778810	If you don't have a product yet or t	If you don't have a product yet or the parameters could change quickly with new business insight, you need to be able to change it fast. With microservices you will be spending half your time figuring out orchestration, building data flows that people can unde	taurath	9.791152	-7.3467426	comment	6.0	49.5	1500151242	-13.8194275
15290526	Swift has no quality high-level conc	Swift has no quality high-level concurrency primitives - until those arrive, Swift is a complete non-starter as a server language.Concurrency is at the level of proposals currently, so it'll be another couple of years until they come up with something, and ano	alexashka	10.509293	-7.8258247	comment	6.0	20.0	1505877490	-10.840591
15309805	Ask HN: What are some sources to lea	Ask HN: What are some sources to learn about microservices architecture?	lostPoncho	9.781024	-7.3620877	story	6.0	17.0	1506061267	-13.814003
15422047	All the junior mobile engineers I’m 	All the junior mobile engineers I’m interviewing now are learning iOS development on Swift. Junior engineers are probably the most pragmatic programmers on the planet. When they’re choosing to learn Swift vs ObjC, none of them are saying “...but ABI stability!	madrox	10.460483	-7.7953734	comment	6.0	17.5	1507345434	-10.831418
15457285	On Performant Arrays in Swift	On Performant Arrays in Swift	jordansmithnz	10.539792	-7.8063607	story	6.0	53.0	1507808982	-10.794535
15478260	So the article basically says:1) Som	So the article basically says:1) Some stuff is already written in Fortran so they don't want to rewrite that. I dig it.2) It's fast (except C sometimes) but easier to write than c. Like 100x faster than python.I'm not sure about number two. With the gpu proces	jxcole	10.468603	-7.4071937	comment	6.0	18.0	1508090801	8.772379
20880005	For those wondering how this works:I	For those wondering how this works:In C, like most languages, all binary operators on numbers – including arithmetic as well as comparisons – 'natively' require two operands of the same type.  When you pass operands of different types, the language usually con	comex	10.657411	-7.033262	comment	6.0	34.5	1567621474	-7.132478
20930858	What is the employment market like f	What is the employment market like for Ada?	Catsandkites	10.609622	-7.7284446	comment	6.0	17.0	1568136984	-5.097744
20931242	> Ada code controls rockets like the	> Ada code controls rockets like the Ariane 4 and 5, many satellites, and countless other systems where small glitches can have major consequences.A somewhat amusing endorsement given that the infamous failure of the maiden launch of the Ariane 5 due to series	ch_123	10.655743	-7.7198277	comment	6.0	32.0	1568138762	-5.294688
13656398	This article is the best example I'v	This article is the best example I've ever seen of how smart people can convince themselves of anything, no matter how absurd, if they want to believe it enough.The author likes Objective C and doesn't like Swift. That's fine. But he's let that emotional state	stupidcar	10.462598	-7.8186445	comment	6.0	18.5	1487200410	-10.841472
13720312	Some old IBM environments initialize	Some old IBM environments initialized fresh allocations to 0xDEADBEEF, which had the advantage that the result you got from using such memory would (usually) be obviously incorrect.  The fact that it was done decades ago is pretty good evidence that it's not a	amalcon	10.640048	-7.0807962	comment	6.0	19.0	1487902978	8.892229
13831030	For Swift on the server you only nee	For Swift on the server you only need an editor like Sublime, Atom, or whatever suits your fancy. That's it, nothing else. Get one of the most popular frameworks like Kitura, Vapor, Perfect, Zewo or the dozens of smaller ones and be ready to deploy to Heroku, 	Entangled	10.465785	-7.8315187	comment	6.0	16.0	1489081165	-10.842925
13849638	When the memory allocator works agai	When the memory allocator works against you	bostik	10.662784	-7.0785494	story	6.0	89.0	1489303574	8.8515415
14168655	Knowing where you are: custom array 	Knowing where you are: custom array indices in Julia	jrevels	10.21813	-7.9403176	story	6.0	98.0	1492803227	10.625728
14240023	Speaking of GC, why aren't more newe	Speaking of GC, why aren't more newer languages designed using the ARC system that Objective-C uses? It seems to work amazingly well, it's very high performant from what I hear, and although it has a few small caveats, they seem worth the trade-off.	penpapersw	10.603919	-7.7077856	comment	6.0	27.5	1493662717	-10.746574
14267142	There is sadly a huge amount of Fort	There is sadly a huge amount of Fortran code bases in science. Not old. Not left over libraries. Not software written for a bygone age.No... New software. Huge, mission critical, core project, software.The best part: No documentation, no maintainer, and no mig	gravypod	10.474589	-7.4096823	comment	6.0	35.5	1493920837	8.808435
14363639	Further hardening glibc malloc() aga	Further hardening glibc malloc() against single byte overflows	scarybeast	10.619348	-7.102989	story	6.0	131.0	1495063177	8.908128
14416058	Microservices were not just concocte	"Microservices were not just concocted by a team at NetflixIn the distant past, ""microservices"" were called ""loosely coupled architectures"" and these have been around since the early 80's I believe, but probably earlier. There isn't anything new about microserv"	mdekkers	9.781617	-7.355781	comment	6.0	19.5	1495701444	-13.811727
14617968	I just feel like this project has lo	I just feel like this project has lost track of priorities, or doesn't want to be a credible alternative OS anymore. As a long time fan of the project - who cares about Swift? Where's the next release?	bantunes	10.457094	-7.827995	comment	6.0	21.0	1498210247	-10.88686
30760016	I think this is a bit naive. Startup	"I think this is a bit naive. Startup founders do not care about providing careers for engineers, and usually want to stop being a ""startup founder"" as soon as they possibly can - they are chasing huge exits and being a founder is incredibly stressful.The real "	phpnode	9.77899	-7.357998	comment	6.0	27.5	1647898568	-13.827537
30907357	Using it for years, and mostly happy	Using it for years, and mostly happy with that library. The performance is awesome for very long vectors / large matrices.It’s less than ideal for small things when the size is known at compile-time. If one knows SIMD intrinsics, in some of these cases the Eig	Const-me	10.462638	-7.061022	comment	6.0	24.5	1649084062	-12.254503
31066857	I don’t see the justification for th	I don’t see the justification for the end user to do their programming in C++ versus Python+Numpy or Julia.Python is already the de facto replacement for Matlab in academia and engineering.And Julia is up and coming, offering many of the benefits of Python+Num	_aavaa_	10.30801	-7.8407364	comment	6.0	23.0	1650250854	10.635593
31397135	Wait, are those examples real?I reme	"Wait, are those examples real?I remember complaining about 1-bsaed indexing only to be told ""julia is great!  we have offsetindex"".  If it's a source of bugs, that ... greatly reduces my future interest in adopting the language."	dekhn	10.296854	-7.8301387	comment	6.0	49.5	1652708973	10.540981
31504435	I looked a bit of the posts on Twitt	I looked a bit of the posts on Twitter, and wow, it’s really polarized. People seem to either love it or hate it. Is SwiftUI still that controversial, or is it just an effect of people posting on Twitter?	dgellow	10.455814	-7.8271623	comment	6.0	17.0	1653486378	11.73757
31505555	Yeah UIKit is deeply MVC. It may not	Yeah UIKit is deeply MVC. It may not be the most conceptually elegant but in my experience you're almost always better off cutting with the grain of the underlying platform's abstractions instead of trying to superimpose a new leaky abstraction on top of them.	cageface	10.459403	-7.8040876	comment	6.0	18.5	1653490930	-10.825594
31504981	How is Objective-C easier than Swift	How is Objective-C easier than Swift.	adamnemecek	10.49223	-7.79479	comment	6.0	15.0	1653488752	-10.821606
25684173	SymPy's problem is that it is based 	SymPy's problem is that it is based on an object-oriented language. This results in SymPy (and friends) demanding that users abandon hundreds of years of math notation, to conform to the whims of a programming language.In SymPy you do M.diagonalize(), which ma	abdullahkhalids	10.3163595	-7.2135277	comment	6.0	26.0	1610110570	9.89316
25877293	> On one scuba diving excursion whil	> On one scuba diving excursion while in the compound having lunch, Brad engaged a couple from Germany in conversation. Brad asked about the fellow travelers occupation and discovered he was a computer programmer. Lifewise, Brad was asked about his life's work	bartmika	10.49904	-7.739527	comment	6.0	25.0	1611355914	5.647009
25967816	"I recently read Dijkstra's ""On the f"	"I recently read Dijkstra's ""On the fact that the Atlantic Ocean has two sides"". [1] In vast parts, it's not much more than mildly disguised US-bashing (Dijkstra was always a grumpy old man) but that's not what caught my eye. What did was the fact that he descr"	kleiba	10.456242	-7.1501913	comment	6.0	42.5	1612001060	-0.7153759
26064527	> Mark Perlin, is said to have argue	> Mark Perlin, is said to have argued against source code analysis by claiming that the program, consisting of 170,000 lines of MATLAB code, is so dense it would take eight and a half years to review at a rate of ten lines an hour.So it’s definitely riddled wi	ABeeSea	10.198543	-7.751308	comment	6.0	25.5	1612792923	10.453491
26108556	The tech churn cycle is getting more	The tech churn cycle is getting more and more insane. It's the same process repeating endlessly.1. Identify one problem you want to fix and ignore everything else.2. Make a tool to manage the problem while still ignoring everything else.3. Hype the tool up and	colllectorof	9.782807	-7.336869	comment	6.0	24.0	1613084117	-13.796393
26191055	With this in mind, if I were to star	With this in mind, if I were to start a new project today (using Go, which is all I use anymore). I would segment my code inside of a monolith using interfaces. This would incur a very slight initial cost in the organization of the codebase prior to building. 	ngngngng	9.821244	-7.3466034	comment	6.0	16.0	1613725533	-13.820088
26248343	My observation is that much of indus	My observation is that much of industry does not care about any of these technical or security issues.In theory microservices are technical artifacts, but what they tend to be are cultural artifacts.Microservice adoption is often driven by cargo culting, or (b	xyzzy123	9.778475	-7.3579807	comment	6.0	26.5	1614160574	-13.82326
26354220	How can you ban memcpy effectively i	How can you ban memcpy effectively if it’s just a simple for loop everybody can implement in less than 20 seconds?	protoman3000	10.648792	-7.022281	comment	6.0	21.5	1614931967	8.504071
26453607	1. There are thousands of scientific	1. There are thousands of scientific subroutines written in Fortran that are stable and well tested - in fact, there are well established formal libraries of them that go back over 60 years. The researchers know and trust them.2. Despite the sneers and derisio	hilbert42	10.464137	-7.4216366	comment	6.0	24.0	1615709873	8.840385
35807758	10 years ago or so I really wanted t	"10 years ago or so I really wanted to NOT use Fortran for my PhD.In my effort to try to use Python instead in my field, I fell down countless rabbit holes along the way (like being for a year or so one of the core contributors to Cython, in an effort to make """	dagss	10.49775	-7.405625	comment	6.0	26.5	1683147728	8.828991
35811298	After my experience with swift and t	After my experience with swift and the bone headed decisions made in lower level design items of the language to make it more 'ergonomic' at the expense of compile speed and debug-ability, I worry about chris latner making the same mistakes again.Swift literal	novok	10.498142	-7.8055663	comment	6.0	24.5	1683175281	-10.824979
35838622	HN could be a little less pessimisti	HN could be a little less pessimistic. People aren't choosing microservices merely because of the hype.Here's why I'd choose microservices for a large project:1. People don't produce uniform code quality. With microservices, the damage is often contained.2. Ev	jeswin	9.786411	-7.353584	comment	6.0	17.5	1683354059	-13.819654
35929684	could not agree more with the author	could not agree more with the author here.Swift certainly is a nice, impressive, modern language but it seems like Apple created a language they want themselves to rewrite OS frameworks with millions of lines of code. i could also see it as a rival to C++ in G	dinkblam	10.465846	-7.813292	comment	6.0	24.0	1683993853	-10.8589115
36220238	I’ve been interested in Swift for a 	I’ve been interested in Swift for a while, but have no MacOS devices. What’s the status of swift on Windows/Linux?	rychco	10.460076	-7.802816	comment	6.0	16.5	1686092208	-10.794757
36476934	Nobody loved objc. Apple forced peop	Nobody loved objc. Apple forced people to do so. Sometimes people get Stockholm syndrome	seydor	10.486319	-7.6619196	comment	6.0	19.5	1687766063	5.663758
29035269	> MHO, the Swift Foundation needs to	> MHO, the Swift Foundation needs to move much more of the ecosystem to platforms other than Apple's.I suspect Apple is trying to do this for straightforward reasons like wanting to remain relevant and foster community growth as to retain credibility… while al	DaiPlusPlus	10.469479	-7.812067	comment	6.0	21.5	1635482912	-10.820565
29152057	The problem with bugs deep in the st	The problem with bugs deep in the stack is that it is really time consuming to establish that they are in fact as deep as they are.I wrote a Swift iOS app once, and came across an issue with one of the collection classes.Of course, nobody thinks that the Swift	lordnacho	10.515736	-7.8060894	comment	6.0	17.0	1636394162	5.4940085
29403092	One should probably not even think o	One should probably not even think of microservices if one employs fewer than 100 programmers. In many cases microservices are introduced because of fashion and/or resume driven design not because it actually makes sense. I prefer refactoring a poorly structur	cjfd	9.779854	-7.360225	comment	6.0	36.5	1638362188	-13.825931
29403293	The whole problem starts with callin	The whole problem starts with calling them microservices. Just call it a service oriented architecture please. The whole micro thing is already an indication of the kind of trouble you are getting yourself into. More respect to the monolith please.	belter	9.788518	-7.35783	comment	6.0	16.5	1638363989	-13.824618
29577057	The only issue I have with microserv	The only issue I have with microservices is when you're dealing with atomic things. Like in a monolith you'd probably just stick it all in a database transaction. But I can't find any good reads about how to deal with this in a distributed fashion. There's alw	Philip-J-Fry	9.781496	-7.350921	comment	6.0	18.5	1639652445	-13.806855
29586042	The benchmarks speak volumes of dish	The benchmarks speak volumes of dishonesty.They sorted the results by speed of 1st run. For a language like Julia, which is JIT-compiled, that's not a fair comparison, considering that you compile once and run millions of times.Note also that Julia would be nu	sdfgsdf	10.2344885	-7.910117	comment	6.0	22.0	1639700954	10.717732
29619563	> an app I developed, Clatters, wher	> an app I developed, Clatters, where I use Swift, SwiftUI, Objective-C and C, the most appropriate programming language being used to solve each specific problem.Slightly OT, but when might one choose to write part of a new app in Objective-C instead of Swift	cglong	10.480699	-7.783071	comment	6.0	18.0	1639955764	5.5959945
29619669	This was a great write up.My hunch i	This was a great write up.My hunch is that older binaries will stay Objective-C forever, until the app is completely replaced. It will linger around, similar to C and C++. There is no major win to just write something in a different language, but using he same	ardit33	10.478557	-7.791206	comment	6.0	18.5	1639956515	-10.8452015
34231271	I think most criticisms around micro	I think most criticisms around microservices are about good practices and skills beating microservices in theory.And the virtue of microservices is that they create hard boundaries no matter your skill and seniority level. Any unsupervised junior will probably	leidenfrost	9.784896	-7.3603406	comment	6.0	23.0	1672753937	-13.818837
34234790	I just want to point out that for th	I just want to point out that for the second problem (scalability of CPU/memory/io), microservices almost always make things worse. Making an RPC necessarily implies serialization and deserialization of data, and nearly always also means sending data over a so	eklitzke	9.790064	-7.3473372	comment	6.0	58.5	1672767582	-13.809657
34235087	You know, I don't really think micro	"You know, I don't really think microservices are fundamentally more scalable.  Rather, they expose scaling issues more readily.When you have a giant monolith with the ""load the world"" endpoint, it can be tricky to pinpoint the the ""load the world"" endpoint (or"	cogman10	9.788871	-7.35729	comment	6.0	28.5	1672768729	-13.821582
34238086	Ask HN: Why the hatred towards Micro	Ask HN: Why the hatred towards Microservices?	Octabrain	9.784268	-7.358101	story	6.0	5.0	1672780114	-13.819605
34338677	No, they aren't. The entire point of	No, they aren't. The entire point of the big ball of mud is that there are no meaningful divisions in the code. Everything uses everything willy-nilly, at the smallest possible level of abstraction. There is, metaphorically if not always entirely literally, no	jerf	9.780489	-7.360873	comment	6.0	23.0	1673446479	-13.818647
34345645	It simply sounds like there isn't mu	It simply sounds like there isn't much demand for Swift from the Open Source community. Apple certainly makes a big push for it internally, but outside their platform, Swift doesn't have much momentum.If Apple wants people to use Swift like a first-class runti	smoldesu	10.459048	-7.8263803	comment	6.0	18.5	1673474634	-10.84042
34348382	Who else remembers when they re-impl	Who else remembers when they re-implemented the (at the time version of) the Foundation framework in Java for WebObjects? That was, what, 1998? Right around when NeXT got re-absorbed by Apple, not sure if the rewrite was started before or after.https://develop	jrochkind1	10.483737	-7.7272673	comment	6.0	18.5	1673490532	-7.9545293
34784664	Tell HN: I got my first macOS app ac	Tell HN: I got my first macOS app accepted to the App Store	graderjs	10.490628	-7.75515	story	6.0	23.0	1676343507	5.4666657
34979201	JAX – Augments numpy and Python code	JAX – Augments numpy and Python code with function transformations (2019)	auraham	10.033616	-7.9337378	story	6.0	65.0	1677649780	10.56363
37228229	I kind of feel like the moment you'r	"I kind of feel like the moment you're trying to run a transaction across data stored in multiple separate microservices, you're in trouble.""Can entirely encapsulate a transaction"" is a good rule of thumb for designing your microservice boundaries.Once that tra"	simonw	9.79	-7.3626475	comment	6.0	22.5	1692736906	-13.765628
37228396	How this usually turns out...1. We g	How this usually turns out...1. We got into this microservices fad and built this really granular service architecture which we're so proud of but is actually a pile of steaming shit and we're in denial.2. We forgot to consider that a service boundary is a tra	baz00	9.790848	-7.355071	comment	6.0	23.0	1692737738	-13.799928
37229352	I know a few people who work at a pl	I know a few people who work at a place where they stuffed all their databases on the same server, and all their systems just write to whatever database they feel like on that same server, share data via database, join data across databases etc. And they use u	VincentEvans	9.791675	-7.3360276	comment	6.0	17.0	1692742978	-13.807157
37238654	50+ SwiftUI Components that you can 	50+ SwiftUI Components that you can copy paste in your next iOS project	vdthatte	10.465351	-7.82359	story	6.0	66.0	1692808723	-10.858111
37297148	As someone who's only played with Fo	As someone who's only played with Fortran, and never done anything too serious with it, can you explain an optimization that can be done in Fortran that can't be done in a C-like language?I'm not being argumentative, I'm actually really curious.	tombert	10.501367	-7.3834777	comment	6.0	19.5	1693241879	8.7723465
37430437	This is only tangentially related to	This is only tangentially related to the post, but one thing I feel sore about is the lack of consolidation of computer algebra efforts. A computer algebra system is one of the most difficult pieces of software to build and make/keep useful, yet it continues t	reikonomusha	10.335463	-7.1901546	comment	6.0	16.5	1694156725	9.888438
24558549	"To abuse an old meme: ""...yes, but d"	"To abuse an old meme: ""...yes, but does it run on Linux...""It seems like Windows already has a glut of similar tools; if you wanted to make a real impact with a fairly new language, which Swift is, with massive corporate backing, which Swift has, the one would"	jabofh	10.46741	-7.8025656	comment	6.0	16.0	1600801781	-10.833439
24593375	Swift is slowly evolving into a form	Swift is slowly evolving into a formidable competitor to C++, and Rust. SwiftNIO, Swift on Windows and now this multiplatform System library, Swift is truly on its way to become a mainstream systems language. Exciting Tim times indeed!	FlyingSnake	10.522217	-7.8370647	comment	6.0	33.5	1601062817	-10.850176
24609422	It has been 6 years since the debate	It has been 6 years since the debate of using Swift or Objective C for iOS development began.It was like pulling teeth trying to convince developers to use Swift.https://h4labs.wordpress.com/2016/02/09/should-i-use-objecti...The “shiny new toy” argument doesn’	melling	10.472187	-7.7852216	comment	6.0	27.0	1601234637	-10.851527
24657500	Swift Atomics	Swift Atomics	Austin_Conlon	10.505387	-7.813512	story	6.0	209.0	1601597409	-10.843065
24713795	Memcmp being wrongly stripped like s	Memcmp being wrongly stripped like strcmp	luu	10.664462	-7.01652	story	6.0	250.0	1602111516	-7.085793
24777928	What modern language would Dijkstra 	What modern language would Dijkstra approve of?	qntty	10.500393	-7.1645813	comment	6.0	17.5	1602690342	-9.421255
24808968	Interoperability Between Swift and C	Interoperability Between Swift and C++	DeusExMachina	10.494727	-7.8118706	story	6.0	123.0	1602930093	-10.855026
24815102	This is why I am against the current	This is why I am against the current trend of over-complicating stacks for political or marketing reasons. Every startup nowadays wants microservices and/or serverless and a mashup of dozens of different SaaS (some that can't easily be simulated locally) from 	Nextgrid	9.81609	-7.3191133	comment	6.0	32.0	1602988347	-13.782736
24945758	I wish seeing the name Dijkstra didn	"I wish seeing the name Dijkstra didn't immediately remind me of his oft-quoted BASIC comment:""It is practically impossible to teach good programming to students that have had a prior exposure to BASIC: as potential programmers they are mentally mutilated beyon"	mysterydip	10.611352	-7.099121	comment	6.0	18.5	1604085129	-9.368439
24975365	> In my experience, monoliths are un	> In my experience, monoliths are universally bad in every imaginable way.I just imagined a different way.  Monoliths can do transactionally consistent stuff.	recursive	9.841554	-7.3078074	comment	6.0	18.5	1604366339	-13.791245
25157942	SwiftNIO SSH	SwiftNIO SSH	hutattedonmyarm	10.468191	-7.830309	story	6.0	99.0	1605855658	-10.843141
25172215	I've been working full time on an ap	"I've been working full time on an app in SwiftUI for the past 8 months or so. I'll sum it up this way: I frequently oscillate between thinking ""This is amazing, it truly is a joy to work with SwiftUI"" and ""Holy FUCK this is the most infuriating thing I've ever"	mikenew	10.456543	-7.82661	comment	6.0	23.5	1605987654	-10.839473
25239900	I like BASIC and recently been think	I like BASIC and recently been thinking it might be nice to do some modern game dev on BASIC. My father got me into programming on a TI-99/4A [0] machine, so the BASIC language always has a place in my heart.However, I recently also came across a nice game dev	wsc981	10.47714	-7.7599993	comment	6.0	17.0	1606592483	-10.821391
25252819	I've always preferred MATLAB to Pyth	I've always preferred MATLAB to Python as the more engineer-friendly programming language. The interface was a plus as well. That being said, given the sheer amount of scientific libraries for Python and universities moving towards it as well, I'm wondering if	wallwart	10.197489	-7.795664	comment	6.0	18.5	1606736692	10.461096
25253000	What value can Octave give me, relat	What value can Octave give me, relative to python?	3dsynd	10.146955	-7.7674694	comment	6.0	15.5	1606738493	10.333802
25253427	I wish Octave the best of luck, but 	I wish Octave the best of luck, but it faces an uphill battle against MATLAB (established engineering projects) and Python (new starts).The biggest issue with Octave for me is the slowness of its plotting compared to MATLAB. A major use case for me is visualiz	ptero	10.195883	-7.8932257	comment	6.0	22.5	1606742588	-11.316105
25354234	Why did I build monoliths all around	Why did I build monoliths all around the world? [video]	geoah	9.8415365	-7.259856	story	6.0	16.0	1607477467	13.419255
25374838	I was part of the team in Amsterdam 	I was part of the team in Amsterdam on this. Insane days. Had some great engineers we hired in AMS. We were moving the whole source code into a monorepo as well which was another crazy project. I think if we had not had some of the engineers we did at those ex	nobunaga	10.451026	-7.8044195	comment	6.0	26.0	1607614906	-10.892921
25427051	Is SwiftUI just an abstraction over 	Is SwiftUI just an abstraction over AppKit and UIKit ? Does it bring any widgets of its own - ie something native to SwiftUI as opposed to being wrapped ? (apart from the declarative stuff)	lenkite	10.453495	-7.8293023	comment	6.0	15.0	1608007023	-10.847713
38880018	> Swift has come a long way and my g	> Swift has come a long way and my guess is Apple has either embedded it into their platforms or added some fancy tree shaking for the binary.It went ABI around Swift 5 or so.I took a huge leap of faith, in 2014, and started using Swift, exclusively. It's turn	ChrisMarshallNY	10.462725	-7.8194833	comment	6.0	23.0	1704468389	-10.842102
38966431	> offering almost a Python like expe	> offering almost a Python like experienceIf you do scientific computing, the fortran experience is much better than python's.   You never feel out of place.  Multi-dimensional arrays of floats are a native type, loops are fast, and the system is extremely sta	enriquto	10.45906	-7.4621367	comment	6.0	23.5	1705055970	9.259705
38966594	I went to local job website and sear	"I went to local job website and searched new jobs in last month:    365 java
    324 javascript
    299 python
    69 c#
    59 c++
    59 php
    5 delphi
    0 fortran

So yes, I would say fortran is dead language"	dvh	10.485093	-7.3931127	comment	6.0	16.0	1705057241	8.785275
38978551	I love how Apple has somewhat come f	I love how Apple has somewhat come full circle on C++. There was a time they somewhat shunned the language publicly and highly discouraged anyone from using it in apps. A lot changed a few years ago when they started dedicating WWDC sessions to new C++ languag	jb1991	10.609696	-7.469531	comment	6.0	31.5	1705139958	-7.3305106
32518722	Flang: LLVM’s Fortran Front End	Flang: LLVM’s Fortran Front End	amirmasoudabdol	10.466884	-7.3651605	story	6.0	88.0	1660898327	-8.351496
32630588	SwiftUI is a big opportunity that Ap	SwiftUI is a big opportunity that Apple's not investing enough in, IMHO. It's good tech, and the reactive approach is excellent for many typical view-based needs, but at the same time the docs are terribly lacking at how to handle any kind of edge cases.Succes	jph	10.46399	-7.8197746	comment	6.0	33.0	1661710498	-10.826248
32636197	I've joined a company with a silent 	"I've joined a company with a silent majority monolith, and joined at the inflection point where they realise their monolith is strangling them...If your dev guide in the wiki says ""to run unit tests, use docker-compose exec monolith test some.package.test_clas"	EdwardDiego	9.7910385	-7.326843	comment	6.0	18.0	1661764842	-13.829407
32713950	These examples do look scary. Howeve	These examples do look scary. However, in my 16 years of experience of mostly writing In C, I have never found a single chance that I need to actually use the expressions that I got the answers wrong.Never mix unsigned and signed integer comparison unless you 	up2isomorphism	10.642363	-7.020712	comment	6.0	20.5	1662304548	-7.0238347
32767910	> I am a loyal C++/Fortran user but 	> I am a loyal C++/Fortran user but would like to try out Python as it is gaining increasing popularity. However, rewriting code in Python is a nightmare - I feel the performance must be more than 100x slower than before!I think I found your problem. TBH you m	bragr	10.559754	-7.4309325	comment	6.0	19.0	1662654550	8.959065
32967193	OK, fair 'nuff.Right now, I'm workin	OK, fair 'nuff.Right now, I'm working on a data parser for a backend API that fetches a JSON response, using the built-in NSURLSession stuff, turns it into a Swift Dictionary, then I sort through that Dictionary, and emit a bunch of Swift struct instances for 	ChrisMarshallNY	10.502067	-7.82373	comment	6.0	18.5	1664059158	-10.846382
31929677	> yet it remains unrivalled in contr	> yet it remains unrivalled in control engineeringNo, its usage is just declining slower in those areas because ppl don't want unnecessary change introducing unnecessary defects, esp since safety and reliability matters a lot for some equipments, and also engi	catchclose8919	10.206859	-7.759753	comment	6.0	18.0	1656574460	10.463693
31965175	I was questioning why WeatherKit nee	"I was questioning why WeatherKit needs a ""platform-specific Swift API"" at all.If the general REST API in Swift is good then WeatherKit can be integrated into Swift apps as easily as any other service. If it's not easy then improvements to the general REST API "	cube00	10.454305	-7.8156805	comment	6.0	19.5	1656824051	-10.826625
32026177	> You need a fairly sophisticated De	> You need a fairly sophisticated DevOps organization to successfully run microservices. This doesn't really make a difference if you run at a scale that requires that sophistication anyhow, but it is very likely that you are not GoogleCorrect. Don't use tools	oxff	9.789846	-7.3550563	comment	6.0	25.0	1657282536	-13.804298
32214980	"Wow. Swift, touted as ""safe by desig"	"Wow. Swift, touted as ""safe by design and (...) runs lightning-fast""[1] is more of a screw-up than I thought. Almost twice as slow as Lua and behind even Pascal and Forth.[1] https://developer.apple.com/swift/"	gary17the	10.478273	-7.818098	comment	6.0	22.0	1658680131	-10.841088
32251660	I’d argue bashing microsevices is mo	I’d argue bashing microsevices is more in vogue than microservices themselves. They’ve reached that point on the hype cycle where you can get a whole bunch of likes by saying “microservices bad amirite?!”	blowski	9.784442	-7.3583145	comment	6.0	21.5	1658935796	-13.802654
32325511	Why Swift Sucks	Why Swift Sucks	hot_gril	10.466892	-7.8300853	story	6.0	16.0	1659482089	-10.852895
22121338	I'd like to hear some thoughts as to	I'd like to hear some thoughts as to why one would choose FORTRAN over R, JMP, Excel, Python... other than for fun or familiarity?	0xff00ffee	10.504293	-7.424918	comment	6.0	16.0	1579722921	8.830921
22195243	The solution to this is just writing	The solution to this is just writing modular code and using an artifact repository. It's a model I've rarely seen attempted even though it's much easier than microservices and serves the same purpose.You can have individual dev teams, with their own repo ,back	tootie	9.788232	-7.3401856	comment	6.0	24.0	1580416431	-13.81279
23823747	Well, for one, this means that Apple	Well, for one, this means that Apple Silicon has no Fortran compiler, which breaks a decent chunk of the scientific computing ecosystem.	KenoFischer	10.4978695	-7.3056264	comment	7.0	31.0	1594663966	-7.3284564
23841594	I'm sure Dijkstra could get away wit	I'm sure Dijkstra could get away with saying that, but how would you phrase something equivalent to someone above you in the food chain without getting nuked from orbit in response? I can just see how the conversation would go:PHB: You've only added two lines 	l0b0	10.509766	-7.1044297	comment	7.0	18.0	1594789986	-9.462525
23847527	I used to maintain a large FORTRAN c	I used to maintain a large FORTRAN codebase - it seemed like every time new grad students showed up, everyone got a wise idea to re-build everything in a modern language.This question is revisited a lot, but the general consensus has been that FORTRAN is fast,	codezero	10.475326	-7.397779	comment	7.0	32.5	1594830359	8.790363
23856229	Introducing Swift Service Lifecycle	Introducing Swift Service Lifecycle	hutattedonmyarm	10.467955	-7.830047	story	7.0	136.0	1594879178	-10.857152
23859330	Swift as a language/ecosystem does s	Swift as a language/ecosystem does seem to check all the boxes in contrast to other modern, mainstream languages; it looks, to me at least, like a much more ergonomic alternative for building applications compared to Rust and Go. It's considerably faster and m	ralmidani	10.47638	-7.8177104	comment	7.0	30.5	1594909940	-10.821948
24040536	> the time to generate the first plo	> the time to generate the first plot goes from 11.7 seconds to 7.8 secondsThis should not take more than 100 milliseconds in this day and age, folks.	m0zg	10.197171	-7.945359	comment	7.0	29.5	1596475072	-11.376958
20245754	C, Fortran, and single-character str	C, Fortran, and single-character strings	ingve	10.58804	-7.284088	story	7.0	102.0	1561146478	-7.0252395
20604667	Ada is hindered by the compiler situ	Ada is hindered by the compiler situation.The GCC frontend has always been second-tier at best, and AdaCore is very expensive (it's technically GPL, but you will never get a copy, except directly from AdaCore with further contractual restrictions).They finally	Tomte	10.654283	-7.6857615	comment	7.0	21.0	1564898320	-5.200727
20802509	Swift on Raspberry Pi	Swift on Raspberry Pi	ingve	10.467907	-7.8324184	story	7.0	94.0	1566845103	-10.871375
25502362	I'll take it one step further.Don't 	I'll take it one step further.Don't just write pure functions. Write point free combinators.Have you guys ever wondered why no matter how much care or planning you use to organize your code when you begin a project, some time down the line you will always enco	Geminidog	9.790702	-7.360606	comment	7.0	43.5	1608605768	-13.824058
25504527	It's not about microservices or not,	It's not about microservices or not, it's about domain boundaries, application architecture, coupling. Whether it runs in a service or in a monolith isn't the deciding factor of wether its good or bad.Architecture and design is. A 100 services app with 5000 li	TeeWEE	9.786161	-7.362224	comment	7.0	25.5	1608629611	-13.817085
25553539	Under the hood of the Subaru Levorg:	Under the hood of the Subaru Levorg: ADAS and programmable logic	80mph	10.641231	-7.70112	story	7.0	38.0	1609097232	-5.1089363
25620448	A new release for GNU Octave	A new release for GNU Octave	signa11	10.164709	-7.7861886	story	7.0	198.0	1609662374	10.312577
25877529	There is no doubting the legacy of O	There is no doubting the legacy of Objective-C (especially given the high likelihood you are reading this post on a mobile device, using app written in Objective-C), but to truly appreciate Brad's legacy, am curious about the appeal of using Objective-C.Having	gigantor	10.486171	-7.7546206	comment	7.0	46.5	1611357326	5.6433525
26191071	There is one approach Fowler suggest	There is one approach Fowler suggested is SacrificialArchitecture. You build your monolith quickly, get to market fit and once you understand service boundaries you move to microservices.Personally I would like to try Umbrella Projects[1]. You can design it as	Chyzwar	9.79444	-7.3563776	comment	7.0	24.0	1613725624	-13.821849
26191415	It is much harder to enforce the dis	It is much harder to enforce the discipline of those practices across modules boundaries than around network boundaries. So in theory yes you could have a well modularized monolith. In practice it is seldom the case.The other advantage of the network boundary 	fvdessen	9.820722	-7.337654	comment	7.0	28.5	1613729538	-13.81366
26191525	Hahaha. I have been saying the same 	Hahaha. I have been saying the same for years but have either been punished by my managers or mercilessly downvoted on HN.Somehow mentioning that microservices might not be perfect solution in every case triggers a lot of people.I have actually helped save at 	lmilcin	9.787057	-7.3358226	comment	7.0	31.0	1613730492	-13.819235
26242690	“A typical organization in the 2020s	“A typical organization in the 2020s has:Hundreds of microservices”Can people with expertise in this situation speak about how typical it is? I guess if you have all those services then you need your IDE to help - but surely this isn’t super common? If it is, 	aidos	9.781599	-7.359229	comment	7.0	19.5	1614113435	-13.847566
26318100	A nitpick, but why is Ada in all cap	A nitpick, but why is Ada in all caps in the title?  It isn't in the article, nor is the name an acronym.	eplanit	10.642512	-7.7257004	comment	7.0	20.5	1614707590	-5.0751386
26355857	OTOH PyTorch seems to be highly expl	OTOH PyTorch seems to be highly explosive if you try to use it outside the mainstream use (i.e. neural networks). There's sadly no performant autodiff system for general purpose Python. Numba is fine for performance, but does not support autodiff. JAX aims to 	jampekka	10.090248	-7.8555603	comment	7.0	20.5	1614945575	10.415887
26408020	The title, while correct, is mislead	The title, while correct, is misleading.  The actual results are:Drivers using Level 2 ADAS who are experienced with L2 ADAS have more situational awareness.  The ones using it for the first time have the least, while regular drivers were in the middle.Presuma	gumby	10.634429	-7.731039	comment	7.0	18.0	1615353070	-4.9671826
35854257	the fact that there are repeated sta	"the fact that there are repeated statements like ""why X"" where X = some language, points to rationalization more than reality; if the language is really so good, there won't be any need for a ""why"" articles on it. I haven't seen a repeated series of ""Why C#"" o"	iloveCS	10.497011	-7.813881	comment	7.0	17.5	1683484749	-0.4838824
36026496	Considering Swift 1.0 was released i	Considering Swift 1.0 was released in September 2014 I'm not exactly bowled over by how long it's taken Apple, with all their resources, to rewrite Foundation.	cutler	10.458883	-7.825573	comment	7.0	19.5	1684719988	-10.889289
36047376	Robotics is really really really rea	Robotics is really really really really hard.  So let's turn the entire thing into a system of distributed microservices, using CORBA/DDS for pubsub...It'd be like if you designed a video game so that the physics engine (motion planning) happened in one proces	cheeselip420	9.789897	-7.3308387	comment	7.0	40.5	1684861802	1.8414574
36381898	It makes no sense. Why not just crea	It makes no sense. Why not just create modular monolith?	mati365	9.902771	-7.2684097	comment	7.0	22.5	1687106865	-13.807687
36382316	How about just stop making microserv	How about just stop making microservices and go back to monoliths? Then you don’t have to shoehorn two things at the same time!	civilitty	9.790106	-7.362789	comment	7.0	36.5	1687109348	-13.82413
36489245	> I disliked C++ because abstraction	> I disliked C++ because abstractions are leaky. So I am building a new abstraction on the cloud.Oh boy, buddy. Let me know how that works out for you.I've worked on app code, OS code, on-prem services, datacenter services, cloud on Azure and AWS. No matter wh	nerdile	9.817063	-7.28282	comment	7.0	18.5	1687843982	-8.96574
28712784	Anyone here using ADA? Seems really 	Anyone here using ADA? Seems really interesting	exdsq	10.653497	-7.719779	comment	7.0	20.0	1633046576	-5.075434
28792434	Bringing Objective-C to the Amiga (2	Bringing Objective-C to the Amiga (2018)	todsacerdoti	10.477515	-7.7065415	story	7.0	102.0	1633642633	5.6888146
28985889	Microservices and the layers to watc	Microservices and the layers to watch for when architecting your system	mulkave	9.783475	-7.363995	story	7.0	78.0	1635153567	-13.816096
29051720	Dangerous Logging in Swift	Dangerous Logging in Swift	ingve	10.494777	-7.8097935	story	7.0	61.0	1635622845	-10.838796
29193025	Anyone here using ADA for general de	Anyone here using ADA for general development?	exdsq	10.652177	-7.7175546	comment	7.0	18.0	1636664049	-5.1246185
29328678	J2ObjC is a command-line tool that t	J2ObjC is a command-line tool that translates Java to Objective-C	SerCe	10.512869	-7.7318525	story	7.0	56.0	1637750273	5.6297083
12573185	I'm living the Microservices nightma	I'm living the Microservices nightmare every day at work! Every single function is a service and you have to run 40 docker containers to get something show up in your browser!If there is an issue in one those services it takes a long time to figure out which s	msoad	9.773295	-7.32233	comment	7.0	20.5	1474761868	-13.799999
12619632	I did a bunch of stuff with Ada, and	I did a bunch of stuff with Ada, and like it a great deal; the core language is rock solid, fast, expressive, and extremely easy to work with. But I still have a laundry list of issues, and probably would pick something else for future projects. (My current on	david-given	10.655781	-7.734139	comment	7.0	19.0	1475351972	-5.13102
12789080	I've been thinking a lot about this 	I've been thinking a lot about this recently.I'm in between jobs and thinking of starting a SAAS on the side in order to support my goal to go backpacking for a few months next year.However, the amount of microservices I'm thinking of putting it all together w	sarreph	9.813681	-7.2854795	comment	7.0	18.5	1477411756	-13.798431
12994033	In the Stanford/Coursera machine lea	In the Stanford/Coursera machine learning class, Andrew Ng said that his teaching experience is that students pick up octave/matlab quicker and the course can cover more actual machine learning, compared to python where more time is spent learning the language	sampo	10.240152	-7.770796	comment	7.0	27.5	1479571588	10.385301
13042199	Mulle-objc: A New Objective-C Compil	Mulle-objc: A New Objective-C Compiler and Runtime	WoodenChair	10.499806	-7.7113643	story	7.0	102.0	1480143477	5.6965675
13075974	>The only proper way to reason about	>The only proper way to reason about the cost of these>abstractions is to inspect the generated machine code.To me, that's a big problem with a lot of these Heldencompilers.  They may generate really optimal machine code.  Then again, they may not, and the dif	mpweiher	10.634865	-7.5056586	comment	7.0	36.5	1480552345	6.208571
13116741	Method dispatch in Swift	Method dispatch in Swift	adamnemecek	10.529822	-7.8092527	story	7.0	107.0	1481047278	-10.813382
13167658	Microservices always struck me as a 	Microservices always struck me as a reinvention of service oriented architecture from the 90s and early 2000s. This was done using RPC protocols like Java RMI or CORBA, while microservices are normally done with http(s) or event/pubsub systems.Basically you're	api	9.784871	-7.3553734	comment	7.0	19.5	1481644313	-13.792547
13207543	> Interestingly, C/C++ beats Fortran	> Interestingly, C/C++ beats Fortran on all but two of the benchmarks, although they are fairly close on most.Unless I missed something, this directly contradicts the quotes benchmark source[1], where C beat Fortran on all tests except one (where they were tie	supergarfield	10.484944	-7.3901176	comment	7.0	29.5	1482094032	8.8348875
13207719	Fortran is an excellent choice for n	Fortran is an excellent choice for numerical computation. Its non-aliasing assumption allows for compiler optimizations that dramatically speed up computations. It is even easy to get started with concurrent code through OpenMP. When I need to run a simulation	bmh100	10.489334	-7.3821535	comment	7.0	35.0	1482096045	8.865209
13266463	I always felt that Objective-C was a	"I always felt that Objective-C was a great take on a ""better C""... Definitely not conceptually better in the ways that Rust is, but simply better for a lot of the practical things where C suffers the worst.Obj-C was an appealingly simple extension to C from th"	pavlov	10.483529	-7.7569304	comment	7.0	20.0	1482875097	5.6054735
13428941	I believe, for small shops, the real	I believe, for small shops, the real benefit of microservices is the logic split that forces good design and reduces cognitive load.You reap the scaling benefits way later, if ever.	FatalBaboon	9.783827	-7.3498263	comment	7.0	26.0	1484764539	-13.816011
13599938	Java-micro – A lightweight framework	Java-micro – A lightweight framework for building Java microservices	domwong	9.812881	-7.347932	story	7.0	68.0	1486573831	-13.796604
13603758	It seems that octave has been overta	It seems that octave has been overtaken (in mindshare) by python/numpy.  Why is that the case?	supahfly_remix	10.186516	-7.790244	comment	7.0	26.0	1486602629	10.362696
27961315	I have to admit never really dug int	"I have to admit never really dug into Julia.
When it was new I read about it as I was looking for a replacement of python/numpy.
But then I was really repulsed by the fact that array indices don't start at 0.c.f. https://www.cs.utexas.edu/users/EWD/ewd08xx/EWD"	cetu86	10.21658	-7.9409294	comment	7.0	20.0	1627316298	10.658621
12060956	Understanding Integer Overflow in C/	Understanding Integer Overflow in C/C++ (2012) [pdf]	0xmohit	10.628282	-7.0217967	story	7.0	65.0	1468063128	-7.0298157
12304327	"Yeah, we do micro services, the ""rea"	"Yeah, we do micro services, the ""real"" kind. Not the ""SOA with a new name kind"", but the ""some services are literally a few douzan lines of code and we have 100x the amount of services as we do devs"" kind.The thing is, you need a massive investment in infrastr"	shados	9.786209	-7.312647	comment	7.0	21.5	1471439080	-13.801233
18950685	A Bridge Too Far: E.W. Dijkstra and 	A Bridge Too Far: E.W. Dijkstra and Logic	akkartik	10.481064	-7.1777325	story	7.0	127.0	1547953245	-9.439541
18959630	For those interested in Dijkstra, th	For those interested in Dijkstra, this website has a lot to offer: http://www.dijkstrascry.com/I also followed some lectures given by the guy that runs that website. Apparently Dijkstra was not an easy person to get along with, there are stories of him being b	evertheylen	10.45476	-7.1677995	comment	7.0	27.0	1548070574	-9.43148
19013269	I'm surprised for 2 reasons: 1/ CS f	I'm surprised for 2 reasons: 1/ CS folks are still talking about Fortran. 2/ The word Modern and Fortran in the same sentence.Up to a few years ago, I found often myself in discussions with colleagues on the benefits of Fortran vs. less horrible languages such	x3tm	10.501653	-7.3957596	comment	7.0	25.5	1548616775	8.848544
19034255	When a Memory Allocator Hides Securi	When a Memory Allocator Hides Security Bugs	hannob	10.670181	-7.1127334	story	7.0	66.0	1548847757	8.806853
19166751	1 based indexing? is there any parti	1 based indexing? is there any particular reason Julia uses 1 based indexing? seems like a pointless thing to differentiate from other languages	pageandrew	10.241324	-7.8857265	comment	7.0	31.0	1550183853	10.610123
19214577	This is very cool. Meanwhile, in the	This is very cool. Meanwhile, in the xi-editor project, we're struggling with the fact that Swift JSON parsing is very slow. My benchmarking clocked in at 0.00089GB/s for Swift 4, and things don't seem to have improved much with Swift 5. I'm encouraging people	raphlinus	10.483111	-7.8115993	comment	7.0	43.0	1550723889	-10.85818
19298557	Microservices. They seemed really co	Microservices. They seemed really cool until I worked on a few large projects using them. Disaster so epic I watched most of engineering Management walk the plank.  TLDR: The tooling available is not good enough.The biggest cause lies in inter-service communic	spricket	9.82654	-7.293346	comment	7.0	28.0	1551670114	-13.782972
19322141	There's so much to comment on in thi	There's so much to comment on in this article. First off gravity looks like an interesting product, it's shame a blog article on that hadn't made it onto the front page.I hate to be nit-picky but I do feel that articles like this do more harm than good by over	thinkersilver	9.821684	-7.190337	comment	7.0	24.0	1551902100	-13.789397
19383869	It might depend a bit on how you sco	It might depend a bit on how you scope it, too.I once worked at a company where a team of 3 produced way more than 25 microservices. But the trick was, they were all running off the same binary, just with slightly different configurations. Doing it that way ga	bunderbunder	9.783582	-7.359251	comment	7.0	19.0	1552511617	-13.803363
19641441	Apply Unix Principles to Write Testa	Apply Unix Principles to Write Testable Microservices	ashish5887	9.788774	-7.3502584	story	7.0	135.0	1555036431	-13.809951
19795262	Creating LFortran, an interactive Fo	Creating LFortran, an interactive Fortran compiler built on top of LLVM	bauta-steen	10.494112	-7.310821	story	7.0	86.0	1556696988	-8.222389
19884273	Swift for Tensorflow 0.3.1	Swift for Tensorflow 0.3.1	asparagui	10.450887	-7.8265486	story	7.0	100.0	1557543960	-10.851432
15915542	The Objective-C Runtime and Swift Dy	The Objective-C Runtime and Swift Dynamism	mrkd	10.497435	-7.781741	story	7.0	94.0	1513184886	5.6685953
15931875	Type Erasure in Swift	Type Erasure in Swift	ingve	10.581094	-7.814672	story	7.0	76.0	1513347083	-10.846716
16200916	I really think microservices are a p	I really think microservices are a process win not a technical win.  It's easier and better to have 5 teams of 10 managing 5 services.  Then having one team of 50 managing a one super service.When I see a team of 7 deciding to go with microservices for a new p	JamesBarney	9.781507	-7.360264	comment	7.0	53.0	1516580195	-13.814685
16201377	How micro can it possibly be if it t	How micro can it possibly be if it takes 10 people to deal with it? Seriously.	jblow	9.781023	-7.3599153	comment	7.0	17.5	1516586518	-13.8327675
16673189	Microservice Antipatterns: The Queue	Microservice Antipatterns: The Queue Explosion	cpitman	9.787315	-7.3598776	story	7.0	58.0	1521998240	-13.805079
16710895	Swift 4.1 Released	Swift 4.1 Released	stablemap	10.456973	-7.8313813	story	7.0	174.0	1522356507	-10.847822
16718402	Zstandard v1.3.4 – faster everything	Zstandard v1.3.4 – faster everything	terrelln	10.66305	-7.428368	story	7.0	202.0	1522433102	12.32933
16804214	Avoiding the Distributed Monolith	Avoiding the Distributed Monolith	jetheredge	9.817835	-7.3283305	story	7.0	132.0	1523387668	13.727565
16848643	Not by me. Not by most people I reck	"Not by me. Not by most people I reckon.Consider the lone factorial problem: Every array programmer will do some kind of the product of, one plus array of all ints up to x    apl: ×/⍳X
    q: prd 1+til x
    j: */1+i.x
    k: */1+!x

Notice how similar they are"	geocar	10.490219	-7.4085717	comment	7.0	23.5	1523883874	8.888477
16874895	I'm glad to see that Apple is puttin	I'm glad to see that Apple is putting work into making their tooling better and easier to work with, but I'm still not clear on the benefits of this change. Would someone care to enlighten me? Currently, the benefits of libclang that I see are that I can easil	saagarjha	10.483943	-7.82646	comment	7.0	28.0	1524136773	-10.869474
17242160	ServiceFabric: a distributed platfor	ServiceFabric: a distributed platform for building microservices in the cloud	deegles	9.771384	-7.3530874	story	7.0	142.0	1528233467	-13.767619
17281250	Is server-side Swift really that goo	Is server-side Swift really that good now? I’m in the market for a new statically typed language, and it was looking like Java still might be my best option...and I’m really not a huge fan of that.	jrs95	10.499858	-7.8305044	comment	7.0	18.0	1528683250	-10.875883
17376984	Looks really interesting. The readme	"Looks really interesting. The readme actually got me started with lots of good examples.Side note though: I won't ever use a symbols-instead-of-words language unless I have to.    let { (*>), (<*), wrap } = import! std.applicative

This is not my idea of good "	Xeoncross	10.52519	-7.6887546	comment	7.0	31.0	1529698472	-10.630308
17500398	Microservices are an organizational 	Microservices are an organizational and design choice that is intended to mirror the structure of the teams or engineers, the actual human beings doing this stuff.It seems like Segment didn’t really understand this at all, and instead decided to have seemingly	iamleppert	9.782096	-7.3645744	comment	7.0	22.0	1531244380	-13.822724
21477490	Swift Numerics	Swift Numerics	hiraki9	10.470796	-7.827032	story	7.0	177.0	1573162123	-10.848292
21490560	I love Swift very much but every tim	I love Swift very much but every time I look at the disassembly view in Xcode while debugging, I lose faith in it bit by bit. With my (rather limited) knowledge of what a C or C++ program would compile into I have some expectations of what I'll see in Swift's 	mojuba	10.499359	-7.8033524	comment	7.0	30.0	1573292444	-10.812249
21681300	Rust will never work except in niche	Rust will never work except in niche areas because it doesn't allow for easy experimentation and does not provide an iterative workflow like Python, R, or Julia.I think the future is Julia, as it's as easy to write as Python, is interactive, and can be compile	xiaodai	10.345925	-7.972813	comment	7.0	22.0	1575282686	10.707063
21710725	This is amazing.• This seems to be t	This is amazing.• This seems to be their main page: https://www.swiftlatex.com/• Not all the source code is on GitHub; crucially their modification of the TeX engine seems to be distributed only as the two `.wasm` binary files). Not sure if they plan to share 	svat	10.465447	-7.830981	comment	7.0	26.5	1575533591	-10.772978
39153919	Zig Roadmap 2024 [video]	Zig Roadmap 2024 [video]	YuukiRey	10.672947	-7.5598693	story	7.0	65.0	1706346285	12.528906
39248292	Visual overview of a custom malloc()	Visual overview of a custom malloc() implementation	signa11	10.665663	-7.1723337	story	7.0	92.0	1707030714	8.881479
39281104	I'm curious: what do you do for deve	I'm curious: what do you do for developer environments? Do you have a need to spin up a partial subgraph of microservices, and have them talk to each other while developing against a slice of the full stack?	zellyn	9.783673	-7.3584867	comment	7.0	20.5	1707255842	-13.816806
18162984	The famous J2EE + ESB style pattern.	The famous J2EE + ESB style pattern.Many of us have worked on dozens of these before and sure they work but microservices were invented specifically to address the serious concerns with these patterns.1) It's far too easy to create spaghetti code that spreads 	threeseed	9.79675	-7.354283	comment	7.0	24.5	1538951647	-13.808113
18255364	Ask HN: Great iOS / Swift Blogs?	Ask HN: Great iOS / Swift Blogs?	rayascott	10.449632	-7.815693	story	7.0	32.0	1539941078	-10.840098
18547902	FORTRAN has multidimensional arrays,	FORTRAN has multidimensional arrays, and the compilers know about them and optimize aggressively. Most other languages don't. C people just do not get multidimensional arrays. They think an array of arrays is good enough. I tried to convince the Go people to p	Animats	10.663385	-7.357454	comment	7.0	29.5	1543361672	8.891448
29813941	I'd also add Pluto notebooks[1], whi	I'd also add Pluto notebooks[1], which when deployed[2] powers interactive sites like MIT's Intro to Computational Thinking[3].I also get a ton of mileage creating Pluto notebooks and sharing the results for others to run or view a static webpage of the result	thetwentyone	10.24813	-7.834965	comment	7.0	21.5	1641412050	7.438063
30078586	> Microservices are relatively new a	> Microservices are relatively new and unproven.They are so old, buddy, actually. Splitting monolith into services(not always been micro) is a natural evolution for any software.	glintik	9.786979	-7.35992	comment	7.0	21.5	1643147361	-13.82235
30078722	Microservices shift complexity from 	Microservices shift complexity from code to operations - microservices don't remove complexity - they spread it wider, making the whole more complex.	andrewstuart	9.783757	-7.3566484	comment	7.0	32.0	1643148026	-13.820538
30419159	Swift has turned into a hot garbage 	"Swift has turned into a hot garbage of a language, that is starting making Enterprise Java from 2001 look good.
The sheer complexity (especially with v5.5) of it has just become unmanageable and just looking something more like a mashup of Kotlin, Go, TypeScri"	ardit33	10.508452	-7.809734	comment	7.0	17.5	1645468907	-1.8040267
33647064	Languages Pre-Fortran	Languages Pre-Fortran	Bostonian	10.485146	-7.394345	story	7.0	71.0	1668725368	8.809682
33889065	why does everything have to be micro	why does everything have to be microservice oriented and what's wrong with a simple monlithic application that runs the whole thing?also, when are those ice cream machines going to get fixed?	b20000	9.788656	-7.3576994	comment	7.0	31.0	1670372598	-13.818573
26481942	I can't help but feel the opposite, 	I can't help but feel the opposite, as if Swift is a dog chasing cars. Function builders are a really awkward unnecessary feature that was implemented so that SwiftUI could have a decent looking DSL. Some types showed that the whole protocol oriented programmi	blacktriangle	10.514221	-7.8192453	comment	7.0	23.5	1615924182	-10.829785
26538918	So, how do professional C programmer	So, how do professional C programmers deal with this in general? Do they manually check for `x > MAX_INT || x < MIN_INT` every time they want to do some arithmetic? Do they manually check the CPU overflow flag after an operation? Or something else?(I only have	dgellow	10.617105	-7.019735	comment	7.0	23.5	1616409173	-7.0469675
26610302	Ada seems like a really good languag	Ada seems like a really good language. Is there any reason why it isn't more popular?	gerryeng	10.659096	-7.7184024	comment	7.0	19.0	1616938773	-5.0853047
26873475	We just made all the microservices i	We just made all the microservices into one big monorepo and we deploy all at the same time.To be honest we tried to avoid the monorepo but it was hellish. Maybe if each microservices was larger and our team was larger but then are they microservices any more?	bhouston	9.784119	-7.3551393	comment	7.0	27.0	1618920426	-13.832098
26981330	Maybe a dumb question on standalone 	Maybe a dumb question on standalone authorization services: does the authorization service end up having a representation for every single object in all of the rest of your datastores? (e.g. every document, every blob of storage, every user in every org).If so	aaronharnly	9.80234	-7.334423	comment	7.0	22.0	1619705239	-13.756276
37579061	I've seen Tibco Rendezvous used in m	I've seen Tibco Rendezvous used in manufacturing. ~300 megabytes per hour of raw log generated 24/7/365 by tools and control systems in a factory setting. Probably on the order of 10k+ participants in the pub/sub network.If you are running something like a fac	bob1029	9.847142	-7.2999105	comment	7.0	21.5	1695170551	-13.782199
37948599	Oof, hard disagree. I absolutely hat	Oof, hard disagree. I absolutely hated writing Objective-C for years– I felt like I had to write unnecessary 'glue' with header files, handling of 'nil' was always jarring, and square brackets at the start and end of every call felt horrendous, to me at least.	sneakymichael	10.512632	-7.7735615	comment	7.0	24.5	1697748936	5.531725
37950090	What is interesting to me is the dec	What is interesting to me is the decline in C, from 52% in iPhone OS 1 to 5% in iOS 17.I am a bit surprised to see Objective-C still dominating. It goes to show that transitioning languages is extremely difficult, even when you are applying the impetus to your	zoogeny	10.4844475	-7.7901897	comment	7.0	46.0	1697757331	-10.841905
38071156	"Wouldn't this just be ""having one or"	"Wouldn't this just be ""having one or two services""? I don't think that's the same as ""microservices"".Correct me if I'm wrong, but isn't ""microservices"" when you make internal components into services by default, instead of defaulting to making a library or cla"	eduction	9.78846	-7.3592877	comment	7.0	30.5	1698681389	-13.815624
38166156	When you program FORTRAN with punch 	When you program FORTRAN with punch cards, does the computer run the program and provide the output, or is there an intermediate step of having the compiled executable output which you then need to feed back into the computer?	commandersaki	10.4617195	-7.3905773	comment	7.0	19.5	1699293761	8.765628
38204511	Microservices – State of Developer E	Microservices – State of Developer Ecosystem 2022 (JetBrains)	nullxone	9.781454	-7.3538446	story	7.0	69.0	1699535306	-13.838172
14868612	Swift is 3 years old. Most people wh	Swift is 3 years old. Most people who use it will be on the latest version Swift 4 within a few months. Apple won’t let developers stay behind.While it was unrealistic for Python to be that aggressive given its larger community, not forcing the issue created a	melling	10.472233	-7.8313403	comment	7.0	21.5	1501184026	-10.847102
14872101	A Closer Look at Swift Playgrounds f	A Closer Look at Swift Playgrounds for iPad	jordansmithnz	10.460925	-7.8219094	story	7.0	104.0	1501218127	-10.8268175
14976770	I'm interested - what type of app ca	I'm interested - what type of app can you run on 64mb of ram? What languages are suitable for building these types of microservices?	mjmein	9.889161	-7.2150536	comment	7.0	19.5	1502343587	-13.779772
15113420	Matlab has a nice sort-of-repl featu	Matlab has a nice sort-of-repl feature which I miss in every other language: you can separate the code in a file into several blocks and then execute the current block (the one with which contained the cursor) with ctrl+enter. With this feature you still have 	yoodenvranx	10.295356	-7.714075	comment	7.0	25.5	1503876714	-10.315925
15403882	Dictionary and Set Improvements in S	Dictionary and Set Improvements in Swift 4.0	Nuance	10.484629	-7.8244076	story	7.0	116.0	1507146564	-10.827425
15421900	That’s the biggest reason I don’t li	That’s the biggest reason I don’t like Swift- it’s terrible syntax.I hate let, var, func. I hate the backwards variable definitions. I hate the crazy punctionation symbols (dots, question marks).I agree with a lot of what Smith says about Objective-C. But my b	apple4ever	10.493573	-7.789311	comment	7.0	22.5	1507342786	-10.807874
15461241	If you're using microservices and ca	If you're using microservices and care about security, do yourself a favor and use a monorepo.A lot of improving security is about changing things in small ways but across the entire fleet. If you have microservices without a monorepo you oftentimes need to ma	ejcx	9.782153	-7.3551326	comment	7.0	26.0	1507841628	-13.824519
15660321	As a Mac and iOS dev since 2005: For	As a Mac and iOS dev since 2005: For long-term survival and maintenance of your software, XIB and autolayout are slow toxins, and Swift is a swift-acting toxin. You won't be able to recompile your Swift code in a year. Or worse, it'll compile but be semantical	mdhughes	10.465301	-7.7990246	comment	7.0	26.0	1510208937	-10.781718
15710051	Developing iOS 11 Apps with Swift	Developing iOS 11 Apps with Swift	Nuance	10.4603405	-7.821053	story	7.0	99.0	1510802523	-10.846019
12508957	"From personal experience
Microservic"	"From personal experience
Microservices enforce a clear interface and isolation pattern.  This is achievable many ways, but having discrete deployed code makes it very hard to violate rather than being disciplined.Licensing costs can go drastically up as most m"	mey	9.783092	-7.359732	comment	7.0	22.0	1473966984	-13.821731
35334299	The perils of polishing old Fortran 	The perils of polishing old Fortran libraries	Bostonian	10.463069	-7.40433	story	7.0	116.0	1679964513	8.881192
35405574	This is written with quite a lot of 	This is written with quite a lot of hyperbole.The predominant focus is realloc(pre,0) becoming UB instead of what the author misleadingly describes as useful, consistent behaviour. It is far from that, and that’s the entire reason that it was declared UB in th	i-use-nixos-btw	10.664271	-7.200975	comment	7.0	72.5	1680393901	8.92031
28009230	Swift Protocol Oriented Programming 	Swift Protocol Oriented Programming and Testing	geekylife	10.537416	-7.8074336	story	7.0	58.0	1627659973	-10.794234
28555498	I've used Fortran for scientific com	I've used Fortran for scientific computing work, mainly because it's ultra-fast and my advisor still used it. If we are going to invest a high-performance computing ecosystem and community, why would Fortran make more sense than e.g. Rust?(I have never used Ru	glial	10.475763	-7.4190936	comment	7.0	22.5	1631817682	8.819905
28563870	A Short History of Objective-C (2017	A Short History of Objective-C (2017)	noch	10.491672	-7.7321067	story	7.0	68.0	1631876696	5.6510024
28589438	Ask HN: What's your favorite framewo	Ask HN: What's your favorite framework for making apps (with GUIs) for yourself?	rajlego	10.4530945	-7.794582	story	7.0	4.0	1632099887	-10.766467
28658090	The oldest program source I still ha	The oldest program source I still have is Empire written in Fortran-10 for the DecSystem 10, circa 1978 or so.https://github.com/DigitalMars/Empire-for-PDP-10I thought backing it up using github was a good idea.A modern version that will run on Windows can be 	WalterBright	10.445346	-7.373724	comment	7.0	35.0	1632625532	8.785758
28660814	Swift Syntax and Structured Editing 	Swift Syntax and Structured Editing Library	codetrotter	10.503948	-7.8082757	story	7.0	93.0	1632663635	-10.8176155
22549568	What would Dijkstra do? Proving the 	What would Dijkstra do? Proving the associativity of min	selff	10.438959	-7.1773763	story	7.0	89.0	1583955169	-9.429025
22680119	Swift 5.2	Swift 5.2	andrewbarba	10.464925	-7.826126	story	7.0	155.0	1585091988	-10.834049
22807791	Uber Moving Away from Microservices	Uber Moving Away from Microservices	jswny	9.781647	-7.356982	story	7.0	62.0	1586295876	-13.809939
22838752	Some other commenters have discussed	Some other commenters have discussed it, but one thing to make very clear that I think a lot of people are missing:1. I fervently believe, after having lots of experience with both microservices and monoliths, that microservices do not provide any technical ad	hn_throwaway_99	9.782337	-7.362384	comment	7.0	25.5	1586565035	-13.816248
23201258	But why?Sure, there are people who w	But why?Sure, there are people who want to tinker with it for fun, but outside of that what is the point in having Swift on Linux and Windows?You can't use it to build mac or iOS apps on Linux because the important libraries aren't there. There is no cross pla	sime2009	10.477572	-7.7545223	comment	7.0	25.5	1589614749	-10.743303
23356007	Chalk one up for time wasted not add	Chalk one up for time wasted not addressing what people really need...I truly love Swift, like god-damn is it my cup of tea, but I can't really bring myself to write it anymore. I've written over 10,000+ lines , shipped and maintained a few different productio	rubyn00bie	10.473147	-7.810918	comment	7.0	19.0	1590789305	-10.820216
29576747	Microservices aren't implemented to 	Microservices aren't implemented to solve technical problems,rather they are used to solve organizational problems. Having 10 developers working on a single monolith? Probably fine. 100? Good luck managing that.Yes they add technical complexity. But they reduc	adflux	9.781767	-7.355305	comment	7.0	21.0	1639649145	-13.821788
29577248	> no good reasonHow about deployment	> no good reasonHow about deployment speed? If I’ve got a microservice collecting events off a queue and writing a csv out to S3 on a schedule, it’s really nice to be able to add a column and deploy in minutes without having to rebuild and deploy a giant monol	bspammer	9.788125	-7.3592577	comment	7.0	23.5	1639655041	-13.832465
29620291	Swift is a language that feels right	Swift is a language that feels right to me in ways that others don't. I code on Linux and Windows, not on Macs. Swift on Linux works OK, but it's there that you really see how few pure Swift libraries there are. For example, on the project we were exploring, t	ternaryoperator	10.4817095	-7.812111	comment	7.0	22.5	1639960877	-10.825599
29620598	My professional development work is 	My professional development work is primarily done with Visual Studio and C#, but I’ve been working on some projects in my downtime with Swift and SwiftUI. I’ve found them to be pretty delightful in many ways - frustrating in others.Xcode, of course is a big w	logbiscuitswave	10.461611	-7.814021	comment	7.0	27.5	1639963660	8.122497
29619650	Is swift docs still bad? I remember 	Is swift docs still bad? I remember developing for swift was a pain when you need to look for docs. Most of my resource came from Raywenderlich instead of official apple docs lol.I have since moved away, but current company wants to move from RN to Native dev 	robertwt7	10.463019	-7.80296	comment	7.0	22.0	1639956354	-10.808104
29667071	Swift Roadmap for performance predic	Swift Roadmap for performance predictability: ARC improvements and ownership	ksec	10.539731	-7.7767305	story	7.0	73.0	1640297374	-10.805537
34338579	Yeah, it's crazy the hate microservi	Yeah, it's crazy the hate microservices get. I happen to work on a product that needs to scale to handle millions of transactions distributed all over the world and the cloud microservice system is just flawless for this purpose. Is it harder to debug than a m	ThereIsNoWorry	9.790911	-7.3504615	comment	7.0	20.0	1673445977	-13.82469
34465787	Ask HN: How do you test your microse	Ask HN: How do you test your microservices?	simplotek	9.795317	-7.2581425	story	7.0	9.0	1674301899	-13.806043
34574878	A lot of people who are invested in 	A lot of people who are invested in the Apple ecosystem have been trying to present Swift as a general competitor to Rust, but no matter how many bullet points you list, as far as I can tell, it hasn't made any progress at all on that front, and I haven't been	jchw	10.596317	-7.8830566	comment	7.0	58.5	1675043034	-10.821977
34701407	I pulled open the app and looked for	I pulled open the app and looked for frameworks with approximately 9 static initializers, one of which called into NSBundle. ServiceCore was the one that matched.	saagarjha	10.600768	-7.746738	comment	7.0	17.5	1675812103	0.85556895
34926778	Training Deep Networks with Data Par	Training Deep Networks with Data Parallelism in Jax	sebg	10.013338	-7.9345	story	7.0	122.0	1677258355	10.556374
13712333	It IS a 90s language! ;-)My main iss	It IS a 90s language! ;-)My main issue with Python is distribution. Oh, you're using it on Windows? No worries, just install matplotlib using pip. Oh wait, you need to install cygwin and a C compiler and for some weird reason it won't compile but no worries th	donquichotte	10.239818	-7.78388	comment	7.0	28.5	1487835746	-11.342211
13961359	I don't have much ideology behind go	I don't have much ideology behind going with microservices vs. monolith, but what we've done on some recent projects is organize our code into modules that only communicate with each other through a narrow and well defined boundary layer.  If we need to split 	AtticusTheGreat	9.791212	-7.357264	comment	7.0	32.5	1490543620	-13.821531
13963487	Catching integer overflows with temp	Catching integer overflows with template metaprogramming (2015)	jgeralnik	10.620964	-7.0384564	story	7.0	88.0	1490564741	-7.02272
14498249	How Thou Canst Maketh a Fine Program	How Thou Canst Maketh a Fine Program in Fortran	AdamFernandez	10.456909	-7.4031262	story	7.0	97.0	1496765015	8.789747
14676882	> objc_msgSend is written in assembl	> objc_msgSend is written in assembly. There are two reasons for this: one is that it's not possible to write a function which preserves unknown arguments and jumps to an arbitrary function pointer in C.Wow... this is a bit off topic but can anyone expand on t	pakl	10.519359	-7.5708113	comment	7.0	38.5	1498913310	-7.356689
30760213	Honestly, we originally did microser	Honestly, we originally did microservices because it sounded like a fun idea and because it would look really cool in our marketing materials. At the time, this was a very shiny new word that even our non-tech customers were dazzled by.As oxidation and reality	bob1029	9.790615	-7.3495145	comment	7.0	36.5	1647899686	-13.819586
30904728	> more than 20,000 containerised wor	> more than 20,000 containerised workloads across more than 2000 microservices to date.This is insane. What am I missing here that an organization is bragging about having 2000 moving parts?	Narkov	9.761119	-7.3408003	comment	7.0	19.0	1649064893	-13.797441
30936597	The fact that “The State of Fortran”	The fact that “The State of Fortran” is a paper on arXiv instead of a blog post actually says a lot about the state of Fortran.	jordemort	10.458869	-7.4085226	comment	7.0	18.5	1649274065	8.775997
31052234	Hello HN! Here is some context to de	Hello HN! Here is some context to decorate this announcement:The Zig self-hosted compiler codebase consists of 197,549 lines of code.There are several different backends, each at varying levels of completion. Here is how many behavior tests are passing:       	AndyKelley	10.640403	-7.309046	comment	7.0	65.0	1650116445	12.510501
31329652	> Fundamentally, microservices allow	> Fundamentally, microservices allow you to isolate state. I can take two services and split them up - and now I've split their state spaces. I can put a queue service between them and now I've sliced out the state of their communication.Dr. Alan Kay would lik	a4isms	9.819478	-7.3194337	comment	7.0	23.0	1652203028	-13.80962
31401490	The big language design problem that	The big language design problem that I think this post highlights is that the flip side of Julia's composability is that composing generic code with types that implement abstractions can easily expose bugs when the caller and the callee don't agree on exactly 	StefanKarpinski	10.203599	-7.9739776	comment	7.0	22.0	1652725785	10.710755
31411714	Zstandard Worked Example	Zstandard Worked Example	stargrave	10.626543	-7.401066	story	7.0	175.0	1652799656	12.330807
39438771	Winteracter – The Fortran GUI Toolse	Winteracter – The Fortran GUI Toolset	andsoitis	10.453024	-7.396833	story	7.0	76.0	1708413381	8.842608
39442874	I use Objective-C exclusively (no Sw	I use Objective-C exclusively (no Swift) in my App Store apps.I wrote a Swift app for a hobby/free project a few years ago and regretted it. They changed the language and deprecated some of my code, which isn't easily replaceable without a significant rewrite.	lapcat	10.480667	-7.8007236	comment	7.0	40.5	1708444854	-10.898781
37219513	Transactions in a Microservice World	Transactions in a Microservice World	kiyanwang	9.785011	-7.361848	story	7.0	75.0	1692687185	-13.800733
37423286	Who would risk using a closed-source	Who would risk using a closed-source language? I know some academic groups using Matlab, and I know some engineering companies use tools like Simulink, but these are very established products. I don't think I could even get sign-off for using a new closed lang	eddtests	10.222188	-7.7602835	comment	7.0	21.5	1694110711	10.468575
37434140	The unfortunate thing is that core C	"The unfortunate thing is that core CAS functionality (and performance) should be based on a SAT/SMT engine to discover the rewrite rules and it goes without saying (but I'll say it anyway) implementing that is ""hard"". Naively (i.e., I haven't really thought th"	mathisfun123	10.312831	-7.2113013	comment	7.0	26.5	1694184196	9.940367
37477424	> And then, when you start growing, 	> And then, when you start growing, that's when you break out an independently scalable part of the system into a microserviceRespectfully disagree. At this point you start refactoring your monolith into components and actually look at performance measurements	aledalgrande	9.787039	-7.357816	comment	7.0	22.5	1694499277	-13.822247
24473055	Any software developer using any sof	Any software developer using any software released by Apple within it's first 2-3 years is a free beta tester.Swift's core team recently found out that they don't understand the type system they've created - they were fixing compiler 'bugs' for months without 	alexashka	10.585406	-7.779343	comment	7.0	24.0	1600106111	-10.81435
24593613	I think one of Swift's advantages is	I think one of Swift's advantages is its progressive disclosure. It can be written without using any of its more advanced features, making it approachable without limiting possibilities for more advanced users.	kitsunesoba	10.485463	-7.8204727	comment	7.0	37.0	1601064364	-10.847727
25252794	When I left university and did not h	When I left university and did not have access to MATLAB anymore, I spent many a nights hacking away at GNU Octave. I have fond memories of Octave.I thought Octave will be a valuable skill when I enter the industry but I could not have been more wrong. Does an	chriszhang	10.190192	-7.795018	comment	7.0	20.0	1606736396	10.478033
25375285	"The ""curmudgeon"" ending line in this"	"The ""curmudgeon"" ending line in this story rubs me the wrong way. The ObjC people were right, basically, and it seems like the problem was essentially no one in the right place was going to drop Swift at that point.Seems less like they weren't offering answers"	XorNot	10.461799	-7.8241024	comment	7.0	22.0	1607617159	-10.854952
25426655	Why learn SwiftUI?  If you want a de	Why learn SwiftUI?  If you want a declarative UI framework wouldn’t you be better served for your time to learn something like React Native or Flutter?  I’m not trying to knock SwiftUI, I am genuinely curious what the value proposition is for anyone considerin	rubicon33	10.478185	-7.8257346	comment	7.0	24.0	1608003184	-10.859966
38871347	2023 Was a Turning Point for Microse	2023 Was a Turning Point for Microservices	mavelikara	9.782655	-7.359112	story	7.0	31.0	1704397574	-13.813796
38940253	I miss the chaos of Obj-C. Swift mak	I miss the chaos of Obj-C. Swift makes way too much sense.	ironlake	10.477339	-7.7960753	comment	7.0	20.0	1704903609	5.627106
32528887	This guy has no idea what he’s talki	This guy has no idea what he’s talking about. One language, one gui framework, and one API paradigm - unified across all contextual devices - is exactly what Apple should do.SwiftUI is not it by any means, but to say that the idea of SwiftUI tries to achieve i	anonymouse008	10.456912	-7.818574	comment	7.0	23.0	1660967421	-10.837735
32636062	I don't think microservices are sile	I don't think microservices are silent majority.  They seem like more of a blogger architect who likes to tinker with stuff thing.I would expect the true silent majority just uses monoliths.  If it works and doesn't make people complain every day when they wor	eternityforest	9.783147	-7.358079	comment	7.0	27.0	1661763265	-13.813957
32646690	Packed structs in Zig make bit/flag 	Packed structs in Zig make bit/flag sets trivial	slimsag	10.640207	-7.021333	story	7.0	187.0	1661834369	8.957068
33006244	One of the biggest issues we face in	One of the biggest issues we face in the industry is the lack of reusability in softwareDisagree with this core premise.The biggest problems we face are that every developer is coached into believing everything they make needs to be unicorn scale and quality, 	weego	9.790531	-7.3585763	comment	7.0	27.0	1664359094	-13.82204
33034112	I'd like to see integer types for C/	I'd like to see integer types for C/C++ that are able to saturate or trap on overflow - or both types. I'm pretty sure it's even been proposed as a C standard but was rejected or postponed.It seems like a really obvious feature that's easy to support but isn't	wyldfire	10.646138	-7.08807	comment	7.0	35.5	1664541932	-6.990008
31961909	Curious what boilerplate is common i	Curious what boilerplate is common in C++ that isn’t needed in Swift.  I find the repetitive boilerplate level of C++ pretty minimal, especially compared to languages like Java.Template specification used to need a lot of decoration but with auto most of that 	gumby	10.51422	-7.8116713	comment	7.0	24.0	1656792495	3.9668138
32026002	I think people think about microserv	I think people think about microservice because they themselves failed to achieve modular monothlic.	revskill	9.800556	-7.3457127	comment	7.0	34.0	1657281608	-13.816929
32251223	Microservice is to manage junior lev	Microservice is to manage junior level programmers who don't know how to make loosely coupling architecture. That's it. Because your job is to manage low quality code produced by junior devs, you need to use microservice to prevent bad code to break the monoth	revskill	9.7830105	-7.3595085	comment	7.0	25.5	1658933854	-13.855995
32328394	The architecture of our systems has 	The architecture of our systems has gotten a lot more sophisticated and complex over the past 20 years. We’re not running monoliths on a few beefy servers these days.I am running a monolith, and troubleshooting is still pretty easy.We’re operating distributed 	aaronbrethorst	9.78189	-7.3451724	comment	7.0	28.5	1659509061	-13.79928
22195970	"If you are ""export[ing] data in its "	"If you are ""export[ing] data in its raw, natural state"" then haven't you lost the isolation benefits of microservices?  Now you have external systems dependent on your implementation details, and changing your schema will break them."	satyrnein	9.834336	-7.334177	comment	7.0	20.5	1580420232	-13.809288
22259117	Eh. Improved error messages is good.	"Eh. Improved error messages is good.The rest look like they aren't worth complicating the language over. Consider:    map(\.name)

Isn't really more concise than    map { $0.name }

There's one more character and the conventions for whitespace are different. B"	jmull	10.660111	-7.746415	comment	7.0	27.0	1581015775	-10.813652
23517798	I would really hate to be learning S	I would really hate to be learning Swift now. I started using it around the v2 release and I think it had nice syntax & was relatively small and opinionated.Now there are so many ways to the same thing it must be a nightmare to teach. Each way of doing the sam	AJRF	10.474947	-7.8218675	comment	8.0	23.0	1592144408	-10.845779
23945748	Somewhat off topic but maybe someone	Somewhat off topic but maybe someone can enlighten me:> Uber has grown to around 2,200 critical microservicesEven thinking about the very largest systems I’ve worked on, I can’t think of what could possibly be split into 2000 separate individual services. What	dkersten	9.7698145	-7.3302927	comment	8.0	25.0	1595635729	-13.805073
24166771	> Let’s say hypothetically that Appl	> Let’s say hypothetically that Apple was dumb enough to pull a Guido van Rossum, and declare that Swift 6.0 is backwards-incompatible with Swift 5.0, much in the way that Python 3 is incompatible with Python 2.Damn, I was waiting for this. The whole essay was	sitkack	10.448569	-7.8497453	comment	8.0	36.0	1597476197	-10.843175
24182196	> a certain component (electronic ci	> a certain component (electronic circuits) was being produced in 4-5 places. I eventually replaced them all with one centralised production array to simplify the factory.Nah, electronic (green) circuits are high-volume but low-complexity to build. They are a 	kentonv	9.781197	-7.3598857	comment	8.0	39.0	1597619541	12.937231
24330678	It never forced anyone to use it.  C	It never forced anyone to use it.  C was forced into use by the popularity of unix.  Java by its association with the browser at the time.  Nobody would have used objective C if Mac OS X had been based on C++ (BeOS).  Ruby would be a niche if it weren’t for ra	projektfu	10.525153	-7.639886	comment	8.0	24.0	1598876436	5.609131
19984518	OP developer here. I am excited to s	OP developer here. I am excited to share my beautiful new Hacker News client with you all. After building apps in Objective C for many years, this is my very first all Swift app. I finally decided to transition completely to Swift when Apple announced it's sta	busymom0	10.462143	-7.810654	comment	8.0	29.5	1558552784	-10.899482
20096604	Adafruit Founder Limor Fried: Open-S	Adafruit Founder Limor Fried: Open-Source Hardware Revolution [video]	CrankyBear	10.585284	-7.512783	story	8.0	190.0	1559665949	-5.0002236
20145013	Very relevant, because containers ar	Very relevant, because containers are often under what basically is ulimit.Not that you can do much when malloc fails...	dullgiulio	10.61169	-7.137325	comment	8.0	36.0	1560157053	8.960641
39611111	Embedded Swift on the Raspberry Pi P	Embedded Swift on the Raspberry Pi Pico	goranmoomin	10.459343	-7.8350306	story	8.0	291.0	1709687449	-10.846221
36797402	“50 thousand API endpoints exposed b	“50 thousand API endpoints exposed by microservices”Feels that their problem may just be they went a bit too far on the microservices band wagon.	iamflimflam1	9.77964	-7.3626013	comment	8.0	51.5	1689833877	-13.787684
37291910	Quoting what I wrote a couple of mon	"Quoting what I wrote a couple of months ago in another thread, regarding the advantages of (Modern) Fortran vs. C/C++:""""""Just an example on how to declaring a couple of input float pointers in a fully optimized way, avoiding aliases and declaring it readonly ("	m_mueller	10.500961	-7.388445	comment	8.0	28.5	1693217314	8.80471
37292082	> big iron imperative language offer	"> big iron imperative language offers over the dozens of other superficially similar choicesGiven the capabilities of modern machines and the fact that non-homogenous hardware (GPUs, different processors like in Apple Silicon) is back, the ""winning"" strategy i"	qsort	10.58051	-7.357105	comment	8.0	31.0	1693218822	8.84555
37293385	I am currently working on a project 	I am currently working on a project trying to convert some numerical linear algebra from Fortran90 into Python and was frankly shocked at how much more performant some relatively naive Fortran is, even over using Numpy/Scipy for matrix operations. Orders and o	aqme28	10.590801	-7.397399	comment	8.0	21.0	1693228329	9.044477
37469567	This is basically how the Cocoa-Java	This is basically how the Cocoa-Java bridge worked 25 years ago, except of course Java has GC.The article makes no mention of memory management. ARC is a compiler feature, so I guess this C code makes a ton of calls to an nsobject_release() function for everyt	pavlov	10.666397	-7.6407514	comment	8.0	28.5	1694449342	-10.754751
24496501	It's strange that Nova would target 	It's strange that Nova would target web tech as their top priority, and not Swift. If you're Mac-exclusive, why not advertise top-class support for Apple ecosystem app development?Since Nova is prioritizing web workflows, VSC is the elephant in the room and a 	threatofrain	10.456003	-7.806069	comment	8.0	36.5	1600284370	-10.605395
24507552	Great article. Main takeaway: micros	Great article. Main takeaway: microservices is not the only option when managing big codebases. In a parallel universe I imagine that the coolest trend in software development right now is a tool for monoliths: all code in a single repo, independent deployable	lmarcos	9.782162	-7.3550596	comment	8.0	41.5	1600364352	-13.821783
24575918	Aborting the program on integer over	Aborting the program on integer overflow seems so drastic.  Say you do that in a server program.  Then convincing it to overflow an integer somewhere (possibly somewhere where it is harmless) causes denial of service and all unrelated connections in the proces	asveikau	10.612103	-7.051392	comment	8.0	39.5	1600929425	7.6267657
24575997	Efficient Integer Overflow Checking 	Efficient Integer Overflow Checking in LLVM (2016)	ot	10.620109	-7.021648	story	8.0	84.0	1600930164	-6.9658747
24633895	Fortran Compiled to WebAssembly	Fortran Compiled to WebAssembly	todsacerdoti	10.470482	-7.401795	story	8.0	73.0	1601419097	8.78645
24947919	Yikes. Swift is becoming horribly co	Yikes. Swift is becoming horribly complex and opaque. Yet another set of @shoehornedKeywords... Colored functions...Let me ramble a bit here.Apple’s platforms had always put users before developers, that’s why they were so successful. They’ve built the best us	layoutIfNeeded	10.485089	-7.798267	comment	8.0	30.0	1604101858	-10.826474
25012420	I would like to see the other perspe	I would like to see the other perspective, why it is good to micromanage.I’m a non tech founder And I outsource my teach overseas. I don’t trust my team.I really feel over billed (I pay US prices (over six figures per year per programmer) even though this team	mynameisslim	9.778688	-7.3291097	comment	8.0	21.0	1604709489	-13.81861
32890659	I took a look at Ada recently and wa	"I took a look at Ada recently and was disappointed by how they've adopted an NPM-style package management approach. This was seemingly inspired by Rust -- Ada even calls its packages ""crates"" -- but the ""bazillion micropackages owned by Internet randos"" struct"	csande17	10.64684	-7.748003	comment	8.0	24.5	1663529278	-5.22644
31842881	I don't know if this is universal, b	"I don't know if this is universal, but in my circles ""microfrontends"" are now all the rage.How do you bring up concerns with that in good faith? It's so obviously terrible that I've no idea where to begin."	strix_varius	9.796732	-7.341372	comment	8.0	25.5	1655938165	-13.812749
31845971	Ziggurats are temple platforms of an	Ziggurats are temple platforms of ancient Mesopotamia (2013)	akbarnama	10.668197	-7.5104365	story	8.0	59.0	1655967685	12.434561
32179262	Well if you're distributing requests	Well if you're distributing requests over multiple servers, I wouldn't call that a monolith.	sdrwefgfvb	9.815077	-7.346173	comment	8.0	20.0	1658410880	-13.828528
32251612	I’ve worked for decades now as both 	I’ve worked for decades now as both a developer and an SRE and have never once thought either “man I wish these microservices were monolithic” nor “man this monolith is so great I’m glad it’s not a collection of microservices”. These kinds of articles seem to 	DoneWithAllThat	9.785227	-7.353821	comment	8.0	37.5	1658935597	-13.831576
32320742	Breaking apart a stateless microserv	Breaking apart a stateless microservice and then basing it around a giant single monolithic database is pretty pointless - at that stage you might as well just build a monolith and get on with it as every microservice is tightly coupled to the db.	Closi	9.79371	-7.3599925	comment	8.0	28.0	1659457407	-13.810233
32399663	Implementing parts of the Swift comp	Implementing parts of the Swift compiler in Swift	ingve	10.506076	-7.817876	story	8.0	109.0	1660060705	-10.79986
32400527	How’s this language doing? Any big p	How’s this language doing? Any big projects on Swift in the last years?	kensai	10.464991	-7.8300357	comment	8.0	30.5	1660064249	-10.813493
22160707	So what's gonna happen to MLIR and T	So what's gonna happen to MLIR and TensorFlow Swift now? Dead?	m0zg	10.440445	-7.8436155	comment	8.0	33.5	1580142012	-10.8645735
22193737	With respect to the author, who prob	"With respect to the author, who probably is a much smarter person than I am, this is yet another in a long, long series of HN articles that should be grouped under ""I don't know what the hell X is, but I was an expert in it, and I can tell you it sucks""I've se"	DanielBMarkham	9.780155	-7.3569813	comment	8.0	24.5	1580408390	-13.823009
22281804	On one hand this is a great news and	On one hand this is a great news and as Fortran user pretty happy about it.On the other I’m a bit worried that once LLVM backend will take off for real, so much focus will concentrate on it, that other compilers (PGI, gfortran, Intel Fortran) development will 	tikej	10.48299	-7.32794	comment	8.0	52.5	1581252045	-8.20575
13673090	I'm at work and went diving into the	I'm at work and went diving into the doc looking for one specific thing. I found it, but it turns out to be a put unfortunate.https://github.com/apple/swift/blob/master/docs/OwnershipMan...> Swift is permitted to destroy a value (and thus call deinit) at any t	jsolson	10.621295	-7.786859	comment	8.0	22.0	1487380911	-10.779006
14291080	One of the big ones: For a small sta	One of the big ones: For a small startup, granular microservices are often very premature, and will slow you down rather than speed you up.	bpicolo	9.778395	-7.361488	comment	8.0	26.5	1494248298	-13.817914
30759721	The last microservice architecture I	"The last microservice architecture I worked on consisted of 7 python repositories that shared one ""standard library"" repository. Something as simple as adding an additional argument to a function required a PR to 7 repos and sign off on each. When it came to r"	glouwbug	9.772509	-7.3498893	comment	8.0	27.0	1647896806	-13.848004
30936366	What kind of editor support does For	What kind of editor support does Fortran have? I think a language is more than just a language as such, and the surrounding environment is at least as important if not more. I've used things like Mathematica, RStudio and Matlab, as well as Java IDEs, and these	ogogmad	10.4857235	-7.3961897	comment	8.0	25.5	1649272751	8.804135
31329043	> Microservices was always a solutio	> Microservices was always a solution to the organisational problem of getting more developers working on a system at once.I don't really agree. It's probably the most agreed upon benefit, but there are others. Fundamentally, microservices allow you to isolate	staticassertion	9.810107	-7.3434215	comment	8.0	57.5	1652200222	-13.814969
31436289	Checked if he moved it away from Mat	Checked if he moved it away from Matlab, and yes he did! That's what steered me away from his course.	cypress66	10.2068405	-7.7810254	comment	8.0	37.5	1652975728	10.547459
31474076	Microservices is just OOP/dependency	Microservices is just OOP/dependency-injection, but with RPCs instead of function calls.The same criticisms for microservices (claims that it adds complexity, or too many pieces) are also seen for OOP.Curiously, while folks sometimes complain about breaking up	Mr_P	9.797244	-7.376214	comment	8.0	22.0	1653264311	-13.813762
26293079	Making SoA Tollerable	Making SoA Tollerable	ingve	9.89708	-7.3076744	story	8.0	35.0	1614517051	10.222449
26445438	Resurrecting Fortran	Resurrecting Fortran	yomritoyj	10.439137	-7.427985	story	8.0	116.0	1615629423	8.817982
35811998	I agree, my intuition would put it t	I agree, my intuition would put it to 1% vs. 99% (difficult to quantify of course).I haven't yet seen a project/product which would need microservice architecture for technical reasons. If you need to scale, you can just scale monoliths (perhaps serving in dif	The_Colonel	9.7853565	-7.358517	comment	8.0	31.0	1683182498	-13.822719
35812294	I built a little microservice on the	I built a little microservice on the side of my monolith for PDF creation. It used headless chrome and ghostscript to render html to a nice PDF. The problem I had with having that code inside the monolith was that it increased my docker image creation for depl	boxed	9.782671	-7.3572907	comment	8.0	22.5	1683184475	-13.8268795
35836930	If you can have a monolith for $500/	If you can have a monolith for $500/month with a team of 2, or a distributed system for $50,000/month with a team of 50, what manager in their right mind would choose the former. Zero prestige in that.	Aeolun	9.790992	-7.334793	comment	8.0	26.5	1683334788	-13.817133
35861856	It looks like monoliths are official	It looks like monoliths are officially back in fashion.	m_a_g	9.845161	-7.257001	comment	8.0	24.0	1683556041	13.414271
36045348	> the ability to bring compute to da	> the ability to bring compute to data eliminates the need for as many microservices — run those in the database instead!Isn’t that a step backwards? De linking them means you can scale the two appropriately independently.I guess if you’re using could and can 	Havoc	9.788137	-7.348683	comment	8.0	20.5	1684854292	-13.810649
29136713	Funny that you needed to use microse	Funny that you needed to use microservices as the base analogy for embedded MCUs. It illustrates how large the gaps are between hardware engineering, software engineering, and programming, compared to when I entered the field in the 80's. It was possible for o	SavantIdiot	9.781076	-7.357272	comment	8.0	50.0	1636261107	-13.811508
29261083	This seems like a desperate attempt 	This seems like a desperate attempt to justify not moving on from a language whose death knell rang a long time ago.You might as well try to convince me I should start my next business with cutting edge software written in Fortran or COBOL.	dolni	10.505867	-7.392025	comment	8.0	28.5	1637198811	8.855758
29292918	Customizing the Cocoa Text System (2	Customizing the Cocoa Text System (2006)	littlecosmic	10.471537	-7.6711173	story	8.0	103.0	1637452675	-9.724774
29572225	How's swift doing as a language? Is 	How's swift doing as a language? Is it being adopted by developers in a way Apple was hoping?	neals	10.472133	-7.8176975	comment	8.0	27.0	1639606261	-10.836398
29576743	There is a lot of talk about monolit	There is a lot of talk about monoliths vs microservices lately.. I just want to throw into the ring that you can do both at the same time. easily. And noone is going to kill you for it either.maybe we are getting caught up in sematics because its christmas, bu	jhoelzel	9.791933	-7.35751	comment	8.0	47.0	1639649128	-13.825074
34573941	I have heard great things about Swif	I have heard great things about Swift but haven't spent a second looking into it because I assumed it's an Apple exclusive language - making it unsuitable for my use case of services deployed on Linux, developed from any OS.To what extent, if any, is Swift exc	apatheticonion	10.451232	-7.810909	comment	8.0	31.0	1675035079	-10.839879
34717457	Hot take but I wish they’d start a n	Hot take but I wish they’d start a new lang in the spirit of what’s happening in swift/Kotlin instead of evolving C#. I use it everyday. I love the new pattern matching, it simplifies a lot of gnarly reflective type checks and feels good. Records are nice too.	zengid	10.490524	-7.8196654	comment	8.0	32.5	1675899984	-10.817578
34942023	As someone who does research with co	As someone who does research with computer algebra systems (mainly Wolfram Mathematica) many hours a day, I think that SymPy is still far behind Mathematica. The fundamental design of Mathematica based on replacement rules and a style of functional programming	vacuumcl	10.3343	-7.206251	comment	8.0	22.5	1677373004	9.860153
18960128	Ask HN: How many developers should y	Ask HN: How many developers should you have before you switch to micro services?	drbojingle	9.781986	-7.3622513	story	8.0	14.0	1548076350	-13.819176
18978224	So does:APL, AWK, COBOL, Fortran, Lu	So does:APL, AWK, COBOL, Fortran, Lua, Mathematica, MATLAB, R, Smalltalk, WolframBecause it is Mathmatics and have 1 be based on 0 makes no sense, you then have to switch between the two and it is easy to make a mistake. This is why I don't use Python and Pand	baldfat	10.658491	-7.447864	comment	8.0	36.5	1548252856	10.765234
19453826	Swift UTF-8 String	Swift UTF-8 String	gok	10.545187	-7.6812	story	8.0	123.0	1553183735	-10.843671
19459518	Is anyone using Swift outside of App	Is anyone using Swift outside of Apple specific stuff professionally? When they first announced swift it felt like it might catch on as general purpose gced language. The language itself is quite beautiful in a lot of ways (although being OO was obviously an a	ilovecaching	10.449607	-7.8207726	comment	8.0	42.0	1553227470	-10.849633
19527086	Couple points (I've worked on app se	Couple points (I've worked on app servers):1- This is exactly how we should all be thinking about server engineering moving forward, as we aim to drastically reduce carbon footprint within 11 years. Efficiencies at the language level are one of biggest bangs f	abalone	10.507426	-7.8261743	comment	8.0	37.5	1553910447	-10.900323
19663667	Swift Generics Evolution	Swift Generics Evolution	mpweiher	10.537689	-7.822749	story	8.0	80.0	1555312456	-10.8414755
19676216	I wish Mathematica was more affordab	I wish Mathematica was more affordable. I loved using it as a student, but now I can no longer afford it.A professional license costs 3500€. Which is probably worth it if you use it every day, but not so much if you just use it just once a month to make a grap	jakobegger	10.297652	-7.1172924	comment	8.0	27.0	1555440589	9.853151
19880464	SwiftWasm: Run Swift in Browsers	SwiftWasm: Run Swift in Browsers	gyre007	10.464565	-7.830889	story	8.0	187.0	1557511248	-10.913801
19884481	To those that are upvoting this and 	To those that are upvoting this and previous Swift + TF announcements: What are you excited about, specifically? Why Swift? Why not Julia? Is it the syntax? Types? Compilation? Performance? Community?I like Swift and all but our ML/DL/RL/DS tools and libraries	jimfleming	10.458165	-7.8376355	comment	8.0	23.5	1557547465	-10.87945
16260898	To me, this was the money quote:> Yo	To me, this was the money quote:> You might say, “But event sourcing is so elegant! Having a SPA on top of microservices is so clean!” Sure, it can be, but not when you’re the person writing all ten microservices. It is that kind of additional complexity that 	whack	9.787103	-7.366898	comment	8.0	44.0	1517262330	-13.814341
16934050	Swift for TensorFlow Design Overview	Swift for TensorFlow Design Overview	asparagui	10.449307	-7.8331137	story	8.0	198.0	1524765427	-10.85312
17499777	I'm not sure what they've been left 	I'm not sure what they've been left with is a monolith after all. I would say they just have a new service, which is the size of what they should have originally attempted before splitting.In particular, as to their original problem, the shared library seems t	alexrbarlow	9.798519	-7.344966	comment	8.0	36.5	1531241125	-13.820191
17500056	"""Need to"" and ""sane"" are among my fa"	"""Need to"" and ""sane"" are among my favourite subjective terms!(Further below, I'll go into in which contexts I'd agree with your assessment and why. But for now the other side of the coin.)In the real world, current-day, why do many enterprises and IT departmen"	dualogy	9.793606	-7.354796	comment	8.0	34.0	1531242461	-13.804536
17578979	Python for the code, Postgres for th	Python for the code, Postgres for the backend, Markdown for the frontend. Because I am too lazy to reinvent the wheel, and most of that is good enough.I would have much preferred to use Perl, R, dotnet, or just about anything else, but there was an already mad	1996	9.79359	-7.017741	comment	8.0	45.5	1532121133	-13.321219
21272327	> With this transformation, microser	> With this transformation, microservice architectures have become the standard for building cloud native applications, and it is predicated that by 2022, 90% of new apps will feature microservice architectures.What do other engineers think of this statement w	shaneprrlt	9.783173	-7.361915	comment	8.0	33.0	1571243818	-13.810409
21411787	Swift Server Work Group Annual Updat	Swift Server Work Group Annual Update	Austin_Conlon	10.454902	-7.83949	story	8.0	84.0	1572545153	-10.878201
21491927	Not knocking the OP, or his/her effo	Not knocking the OP, or his/her effort, but I think the number of microservice frameworks exceeds the number of organizations that actually have the problems that microservice architecture was designed to solve.We're doing it for the project I'm working on at 	GiorgioG	9.7882395	-7.3686	comment	8.0	31.5	1573312182	-13.815328
21523981	"Current top 10:1. ""Apple introduces "	"Current top 10:1. ""Apple introduces 16-inch MacBook Pro, the world’s best pro notebook"" Bad: 0.9964 - Good: 0.00382. ""Developing open-source FPGA tools"" Bad: 0.3381 - Good: 0.66523. ""Show HN: Can a neural network predict if your HN post title will get up votes"	michjedi	10.4977865	-7.749207	comment	8.0	23.0	1573653277	-10.831273
21584786	Well, the problem is that master is 	Well, the problem is that master is a bottleneck. Trying to build CI on every branch before merging to master just won't work with the scale they are dealing with. At 1000 developers, the rate of PRs coming in makes it impossible to determine what current mast	latortuga	9.75989	-7.338343	comment	8.0	28.5	1574264150	-13.822308
39141571	"> ""Whether written using a fountain "	"> ""Whether written using a fountain pen or typewriter, Dijkstra’s technical reports were composed at a speed of around three words per minute. “The rest of the time,” he remarked, “is taken up by thinking.”9 For Dijkstra, writing and thinking blended into one "	archixe	10.50419	-7.132834	comment	8.0	44.0	1706269507	-9.449602
39315372	Does anyone have any reading materia	Does anyone have any reading material on the reliability of systems that use microservices? I've had a bit of basic probability rattling around in the back of my head that makes me suspect microservices are in general less reliable. I'd be interested in seeing	VyseofArcadia	9.782464	-7.3604064	comment	8.0	24.0	1707490405	-12.008641
18636054	JAX: Numpy with Gradients, GPUs and 	JAX: Numpy with Gradients, GPUs and TPUs	one-more-minute	10.01958	-7.9053073	story	8.0	132.0	1544287598	10.475421
30418368	> It is obvious that Swift has outgr	"> It is obvious that Swift has outgrown my influence, and some of the design premises I care about (e.g. ""simple things that compose"")As someone who was heavily invested in Swift, and an active member of the community from around 2015-2019, I'm a bit sad to se"	skohan	10.4880905	-7.822657	comment	8.0	104.5	1645464894	-10.829079
30418241	[Edit: I might be the worst develope	[Edit: I might be the worst developer on the planet, so take it all with a grain of fine salt]Yup, hot take: SwiftUI is hot garbage.Declarative rendering is the worst rendering: it's code written that doesn't have to be written. The beautiful thing about UIKit	anonymouse008	10.459659	-7.8176074	comment	8.0	31.0	1645464282	-10.871944
12856166	I am hoping that with cross platform	I am hoping that with cross platform Swift we can start seeing more libraries to help us port Mac apps to Linux. I am a Mac developer but I'd love to make stuff available on Linux.I really like Linux as a backup plan, in case Apple totally drops the ball on pr	jernfrost	10.468163	-7.7631793	comment	8.0	77.5	1478102311	-10.767427
12971241	From NeXTSTEP to Cocoa: Erik Buck on	From NeXTSTEP to Cocoa: Erik Buck on the Development of Cocoa and Objective-C	ingve	10.477435	-7.715661	story	8.0	82.0	1479328640	-7.29804
13051073	The legacy of Ada Lovelace (2015)	The legacy of Ada Lovelace (2015)	mxschumacher	10.6371765	-7.722754	story	8.0	58.0	1480276503	-4.813427
13207586	Fortran is still better at multidime	Fortran is still better at multidimensional arrays. Other than Matlab, few other languages do multidimensional arrays at all. C-derived languages use arrays of arrays, and use templates, macros, or objects for multidimensional arrays. Fortran optimizers have l	Animats	10.588573	-7.361596	comment	8.0	44.5	1482094493	8.999672
13212857	butwhy.gifi get that isomorphism is 	"butwhy.gifi get that isomorphism is very helpful long term for larger code bases, and being able to share libraries between your ios and server/backend would be very awesome, but at what cost?there are proven server ecosystems that are going to be much less ""i"	bigdubs	10.460898	-7.823484	comment	8.0	25.0	1482167065	-10.840233
13369996	I think it is disingenuous to say th	I think it is disingenuous to say that the lead programmer of Swift and Director of Machine Learning won't make a difference.I know if my company lost two important people in one week would be very significant.	baldfat	10.465681	-7.8305755	comment	8.0	30.0	1484088781	-10.838824
13492457	What's new in Swift 3.1	What's new in Swift 3.1	ihsw	10.463411	-7.831396	story	8.0	111.0	1485446763	-10.776239
27792161	While I agree with your point, I won	While I agree with your point, I wonder why that does not seem to be the case with programming languages.For example, in iOS development (and, more in general, on Apple platforms), there has been a huge shift from Objective-C to Swift.The same arguments should	DeusExMachina	10.481731	-7.7965703	comment	8.0	26.5	1625908105	5.4396224
27798764	A commemoration of Edsger Dijkstra [	A commemoration of Edsger Dijkstra [pdf]	cion	10.461352	-7.182587	story	8.0	133.0	1625983412	-9.409627
27983008	"I'm curious about the trope ""microse"	"I'm curious about the trope ""microservices are more closely coupled than a monolith"" - in my experience this is because the microservice architecture is very badly thought out. There are many ways to refactor it and produce a decoupled and robust system. So - "	sgt101	9.785234	-7.3602314	comment	8.0	21.0	1627475769	-13.823722
12051768	µSOA – a powerful alternative and co	µSOA – a powerful alternative and complement to SOA	nkurz	9.801593	-7.3465095	story	8.0	39.0	1467921880	7.9647593
12509467	My company built from the ground up 	My company built from the ground up with micro-architecture and it is an unmitigated disaster. Totally unnecessary, mind-numbing problems unrelated to end-user features, unpredictability at every step, huge coordination tax, overly-complex deployments, borderl	pbreit	9.824514	-7.316735	comment	8.0	24.5	1473970589	-13.810859
35342160	To me it's a bit worrying that someo	To me it's a bit worrying that someone who is still is a student, builds such a complicated and hard to maintain architecture (https://github.com/alexander0042/pirateweather/raw/main/docs...). Maybe it's complicated on purpose, to educate themselves on how to 	capableweb	9.809885	-7.340492	comment	8.0	36.5	1680015586	-13.808642
35436688	> #elif SIZEOF_SIZE_T == 2 // LOLFun	> #elif SIZEOF_SIZE_T == 2 // LOLFun fact - for a while, this was true for the third most popular processor architecture in the world, one that most people haven't heard of.CSR (the bluetooth chip maker) was originally a spin-out from Cambridge Consultants, an	rkangel	10.668889	-7.0204806	comment	8.0	26.5	1680596834	-7.1335635
35453631	Apparently there's a kernel config f	Apparently there's a kernel config flag to zero the memory on free (CONFIG_INIT_ON_FREE_DEFAULT_ON) but it has a quite expensive performance cost (3-5% according to the docs). I wonder in what kind of scenario it would make sense to enable it.	seri4l	10.672274	-7.0202317	comment	8.0	46.0	1680700634	8.67975
35474968	4000x Speedup in Reinforcement Learn	4000x Speedup in Reinforcement Learning with Jax	_hark	10.024811	-7.9363446	story	8.0	131.0	1680817582	10.582043
28402907	I think people don't read error mess	I think people don't read error messages if fixing the issue is beyond their immediate capabilities.Computers are scary things that fail in counterintuitive ways.  When the handle of your tea cup breaks, the issue is intuitive and most people will be able to u	mrtksn	10.495379	-7.8028007	comment	8.0	27.0	1630669538	-10.835217
28510348	Always interesting to me to see how 	"Always interesting to me to see how much ""IT-first"" educated people think that Fortran is a dead language. While when learning physics first you will quickly see how very much alive it still is (newest standard is ""Fortran 2018"" btw)
Every weather forcast you "	Flocular	10.453698	-7.406729	comment	8.0	37.5	1631534151	8.821601
28554211	Toward Modern Fortran Tooling and a 	Toward Modern Fortran Tooling and a Thriving Developer Community	milancurcic	10.4638	-7.4090714	story	8.0	60.0	1631811395	8.859272
28595129	Show HN: A microservice framework, l	Show HN: A microservice framework, listed in CNCF Landscape, 1 year 10k+ stars	patrickevans	9.80154	-7.3630095	story	8.0	65.0	1632152935	-13.830294
22325735	Data in SwiftUI, Part 2: Views as a 	Data in SwiftUI, Part 2: Views as a Function of Data	sarunw	10.467701	-7.8228	story	8.0	74.0	1581680076	-10.823884
22672152	Adafruit deemed an essential service	Adafruit deemed an essential service to make Personal Protection Equipment	jonbaer	10.638269	-7.698359	story	8.0	79.0	1585026669	-5.027567
22825891	Reading through the top level commen	Reading through the top level comments, they are all a form of surface level aversion to the unfamiliar. It really highlights that many industry trends are based on hot takes and not any sort of deep analysis. This makes sense why Javascript and C++ will remai	flipgimble	10.47503	-7.8186345	comment	8.0	39.0	1586458313	-10.842245
23017615	>Shared libraries were created to pr	>Shared libraries were created to provide behavior that was similar for all workers. However, this created a new bottleneck, where changes to the shared code could require a week of developer effort, mostly due to testing constraints.That is a big red flag. Mi	kkapelon	9.794012	-7.358693	comment	8.0	28.0	1588156713	-13.819843
23021580	I see a lot of places that seem to e	I see a lot of places that seem to either think that:1. Microservices will let them ship things faster or2. It's microservices everywhere or nothingMicroservices might let you ship faster if you are really good at deciding where to draw the lines between servi	dpix	9.790956	-7.360323	comment	8.0	32.5	1588180272	-13.824361
26556080	I am doing Andrew Ng’s ML Coursera c	I am doing Andrew Ng’s ML Coursera course with Matlab.I’ve now got the crazy desire to see matrices and vectors built into every language in a clean and succinct way.	melling	10.291278	-7.6962676	comment	8.0	33.5	1616512960	10.022989
26711698	Fortran is back on the top 20 TIOBE 	Fortran is back on the top 20 TIOBE index list	milancurcic	10.472615	-7.4067607	story	8.0	36.0	1617716920	8.784501
26978597	Just curious is Fotran Still being u	Just curious is Fotran Still being used in Newer Projects	mraza007	10.47017	-7.4063296	comment	8.0	27.5	1619684100	8.779157
27045771	Z3 Tutorial	Z3 Tutorial	todsacerdoti	10.642097	-7.2962403	story	8.0	195.0	1620184436	12.410728
27155857	Zstandard v1.5.0	Zstandard v1.5.0	ascom	10.620718	-7.4187055	story	8.0	150.0	1621008711	12.360627
27313294	Gnat 2021 GPL Community Edition Ada 	Gnat 2021 GPL Community Edition Ada 202x compiler released	berkeleynerd	10.653991	-7.676118	story	8.0	101.0	1622193766	-5.2223325
38015175	This is a nice critique of the Swift	This is a nice critique of the Swift toolchain UX on Linux, but perhaps not of the server-side Swift developer experience in general. Each of these problems looks like the sort of thing that you solve quickly once and move on from.I have recently been developi	danpalmer	10.48355	-7.823014	comment	8.0	31.0	1698253764	-10.837723
38499894	I know basically nothing about the A	I know basically nothing about the Apple language ecosystem but why does no one ever mention or seemingly use Objective C++?Is it that Objective C is a better version of C with OO and C++ features?If that’s the case why was Objective C++ created?	lloydatkinson	10.478146	-7.7390895	comment	8.0	21.5	1701535811	5.7432165
14972821	Maybe someone will explain this to m	"Maybe someone will explain this to me. Does Swift use this confusing ""rapid release"" versioning? Does Swift 4 break backwards compatibility with Swift 3?In my company people are looking for a language to rewrite some legacy Objective-C to. Swift is often disca"	ainar-g	10.463629	-7.820947	comment	8.0	29.0	1502307696	-10.855195
14972891	Can someone with Swift experience co	Can someone with Swift experience comment on the status of Swift on non-Apple platforms? Is it being used outside of the Apple ecosystem? How is the tooling, deployment, availability/support, etc.	jswny	10.459431	-7.819511	comment	8.0	22.5	1502308113	-10.848597
15421715	I work for a company that writes iOS	"I work for a company that writes iOS apps, large and small. When Swift 2 came out, any new projects we started were in Swift. We still maintain several large and small ObjC apps.If I had my way while were planning out a ""big"" app, it would be ObjC.- ObjC isn't"	orbitur	10.473302	-7.8017907	comment	8.0	38.5	1507339780	-10.825933
15735439	Show HN: Example of a polyglot micro	Show HN: Example of a polyglot microservice app	me_elgris	9.755176	-7.3010826	story	8.0	92.0	1511119559	10.200116
23449736	I wish Dijkstra had named his articl	"I wish Dijkstra had named his article on the go to statement[1] something else. It feels like every other author nowadays want to use the sense of authority that the ""considered harmful"" gives them. Like it's obvious and widely accepted that it's harmful, and "	nindalf	9.822092	-7.3649116	comment	9.0	24.0	1591556640	-13.8211975
23516334	The origins of Objective-C at PPI/St	The origins of Objective-C at PPI/Stepstone and its evolution at NeXT	fanf2	10.492345	-7.7320266	story	9.0	124.0	1592127786	5.6568255
23881539	Show HN: I made an elegant SwiftUI t	Show HN: I made an elegant SwiftUI timeline	thasian	10.485425	-7.7607217	story	9.0	92.0	1595081970	4.2155423
24284517	Jetpack Compose Alpha is released	Jetpack Compose Alpha is released	yrezgui	10.324	-7.6259637	story	9.0	76.0	1598461604	9.608664
20090370	GitHub Package Registry Will Support	GitHub Package Registry Will Support Swift Packages	guessmyname	10.492744	-7.7818575	story	9.0	169.0	1559606608	-11.499962
20322418	SwiftUI, and the underlying system f	SwiftUI, and the underlying system for embedded DSLs that it's built upon, is pure genius.It has excited me and invigorated my creativity in a way that I had not felt since Microsoft's WPF/XAML, but unlike WPF+XAML you don't have to work in 2 different languag	Razengan	10.472351	-7.8075767	comment	9.0	45.0	1561954474	-10.8462
18945119	As somebody in an academic field whe	As somebody in an academic field where many scripts exist for MATLAB (mostly digital signal processing focused), there are few projects I want to succeed more than Octave.It's very hard to recommend that students and colleagues grow invested in toolchains invo	wanderfowl	10.206272	-7.7875648	comment	9.0	37.5	1547868099	10.481858
19012403	How to write code in modern Fortran 	How to write code in modern Fortran (2011) [pdf]	pjmlp	10.475162	-7.3903856	story	9.0	86.0	1548607386	8.782635
19130301	It's interesting how it's going to p	It's interesting how it's going to play out. On one hand side, Swift is a pleasant language to work with (despite its infancy). But on the other, having a Tensorflow API doesn't suddenly give it a bunch of libraries for statistics, comp. vision, modeling, visu	3jckd	10.438344	-7.846824	comment	9.0	35.0	1549835537	-10.864837
19678115	Zstandard v1.4.0	Zstandard v1.4.0	terrelln	10.62544	-7.425337	story	9.0	158.0	1555455965	12.363173
19805909	There seems to be a missing question	There seems to be a missing question in the FAQ: Why is Fortran worth saving? What are the advantages of writing code in Fortran? Why not just allow the ports to C++ to happen?There might well be good answers to these; but it seems that if you want to make For	archgoon	10.461353	-7.40855	comment	9.0	32.0	1556786557	8.824971
16719615	Swift for TensorFlow	Swift for TensorFlow	gok	10.440576	-7.8307233	story	9.0	206.0	1522442300	-10.842948
16899941	Does anyone else look at Objective-C	Does anyone else look at Objective-C code, and just want to puke?	blackrock	10.482751	-7.733431	comment	9.0	67.0	1524448262	5.6264544
17028077	This is highly misleading.What made 	"This is highly misleading.What made ""Service-orientated-architecture"" stand out in the 90's and 2000's was standardized communication protocols. It made integrating across teams, and even across companies easier than it's ever been before.But there were no bes"	deanCommie	9.800562	-7.3628144	comment	9.0	41.5	1525852141	-13.81864
17264936	WWDC 2018 What's New in Swift Recap	WWDC 2018 What's New in Swift Recap	jtbrown	10.461104	-7.8334246	story	9.0	75.0	1528463703	-10.858408
17722616	Can you recreate Objective-C in C?	Can you recreate Objective-C in C?	ingve	10.502633	-7.697869	story	9.0	62.0	1533804925	5.654825
17739485	Chris Lattner writes:”One of the bes	Chris Lattner writes:”One of the best and most annoying things about Objective-C is that it has C in it. This has been hugely important for Objective-C in practice, because if you run into a performance problem with objc_msgSend, you can always rewrite that al	pavlov	10.499487	-7.770122	comment	9.0	96.0	1533992034	-10.82021
17820853	> They are also complexI would say t	> They are also complexI would say the complexity is largely in deployment. Otherwise, I find microservices much simpler to reason about.As an example, keeping a bunch of small, isolated microservices behind queues means that I can reason about them very local	staticassertion	9.799473	-7.3544397	comment	9.0	26.5	1534963025	-13.806947
21064689	A Eulogy for Objective-C (2015)	A Eulogy for Objective-C (2015)	fortran77	10.528249	-7.700088	story	9.0	60.0	1569359570	5.6231246
21226454	> Uber have well over 1,500 microser	> Uber have well over 1,500 microservices written in Go1500?! I can't even imagine how micro a microservice could be such that Uber could have so many.edit: Having said that, the Monzo blog post also on the front page says it has 1100 microservices, so I suppo	OJFord	9.781395	-7.363234	comment	9.0	24.0	1570814574	-13.803149
21521733	I like differentiable programming a 	I like differentiable programming a lot, but can anyone explain the motivation for Swift as their language of choice for this? I assume it was simply because they wanted to get Chris Lattner, and Swift was his baby. Julia seems like a much better target for th	dual_basis	10.3866625	-7.8875117	comment	9.0	43.5	1573628520	-10.816013
21594342	I'm one of the most staunch Apple su	I'm one of the most staunch Apple supporters but even I must admit that since WWDC 2019, I have spent more time fighting Apple's bugs than actually using any of the new features...or the old features that used to work flawlessly (like iTunes/Music.)Not just on	Razengan	10.474087	-7.7673273	comment	9.0	44.5	1574346788	-10.763138
18070175	Swift 5.0 release process	Swift 5.0 release process	OberstKrueger	10.453724	-7.832326	story	9.0	95.0	1537906979	-10.854163
18582383	Upvoted for the signed integer overf	"Upvoted for the signed integer overflow example. I'll admit that I actually don't know the most idiomatic, bulletproof way of testing for signed overflow in C; if you google ""how to test signed integer overflow in C"", the very first result is essentially equiv"	kibwen	10.624834	-7.0348	comment	9.0	32.5	1543760279	-7.025052
18772120	Custom string delimiters in Swift 5	Custom string delimiters in Swift 5	ingve	10.561569	-7.7104087	story	9.0	80.0	1545940830	-10.829954
30000782	I have done the full theme park ride	"I have done the full theme park ride on monolith->microservices->monolith. Both have ups and downs.The most important thing I learned is that ""microservices"" in absolutely no way necessitates ""bullshit spread across multiple cloud vendors and other scenarios i"	bob1029	9.791202	-7.3541756	comment	9.0	40.5	1642629242	-13.822752
30127523	Professor Fortran's Encyclopedia	Professor Fortran's Encyclopedia	pkdpic	10.456755	-7.4064474	story	9.0	46.0	1643473167	8.807922
30602326	Nice, interesting article.But I woul	"Nice, interesting article.But I would stress less that ""Seeing Like a State"" -- that is a top-down, global solution -- was not the problem.The problem was that ""Tim"" didn't really understand the problem he was trying to solve (well, none of us truly understand"	jmull	9.783519	-7.3511653	comment	9.0	28.5	1646759108	-13.861344
12850919	A Random Walk Through Ada (2014)	A Random Walk Through Ada (2014)	akalin	10.613195	-7.71917	story	9.0	123.0	1478041327	-5.1033063
13116783	This seems totally misguided and inf	"This seems totally misguided and inflammatory. The points made boil down to:1. Overflow checking adds about a 2x overhead to ""+"" in a loop2. Using ""reduce"" rather than a loop also has ~2x overheadNeither is really surprising, and hardly seems to warrant the fi"	iainmerrick	10.544609	-7.7845984	comment	9.0	37.0	1481047521	-10.7868595
13167804	I'd like to hear some background fro	I'd like to hear some background from the author on his situation(s).  Personally my current company is over 100,000 employees.  We have a few 100 developers and many stacks, web apps, mobile apps etc.  Our API is essential and is currently a giant monolith wr	dsmithatx	9.786511	-7.3491125	comment	9.0	38.0	1481645316	-13.825112
12433796	    Horrible Taylor Swift puns in Sw	"    Horrible Taylor Swift puns in Swift development 
    considered harmful. 

It's already been done[1], it makes your project completely un-Googleable, and it also pollutes the search corpus making it harder for automatons to weed out Taylor Swift stories ev"	veidr	10.467192	-7.8194556	comment	9.0	25.0	1473139016	-10.792278
28039542	Unix and Microservice Platforms	Unix and Microservice Platforms	brandonbloom	9.794111	-7.3518744	story	9.0	97.0	1627924506	-13.823399
28061932	"In the cons of monoliths: ""High coup"	"In the cons of monoliths: ""High coupling between components"" is listed. I think this is a misconception, and a popular one: some people apparently believe that if you take software, and introduce some RPC form at ""component"" boundaries, things are magically de"	rollulus	9.832475	-7.320312	comment	9.0	31.0	1628089957	-13.814654
28071725	Show HN: Made an internal communicat	Show HN: Made an internal communication app with just SWIFTUI	amseun	10.46122	-7.8075347	story	9.0	30.0	1628157990	-10.919274
28619339	I guess I was in the minority who lo	I guess I was in the minority who loved Objective-C and it's selector syntax.  I think my main objection to Swift is that it seems to be written by people who hate Objective-C and made the calling syntax much more complicated.  I dearly wish a more mature F-Sc	protomyth	10.482323	-7.7726817	comment	9.0	52.5	1632332529	5.547629
22399082	What makes code “Swifty”?	What makes code “Swifty”?	Austin_Conlon	10.4931755	-7.820271	story	9.0	68.0	1582487306	-10.84392
22446204	Swift: Announcing ArgumentParser	Swift: Announcing ArgumentParser	zdw	10.514536	-7.8144584	story	9.0	118.0	1582922829	-10.814735
22481714	Turns out the latest hype is a dud f	Turns out the latest hype is a dud for most companies ^_^There are good reasons to use microservices, like when you have 100+ engineers working on your planet-scale cloud or social network. At that scale, you need to have internal API documentation to ensure p	fxtentacle	9.790609	-7.3474417	comment	9.0	29.0	1583304677	-13.816068
22865862	Now that C2x plans to make two's com	Now that C2x plans to make two's complement the only sign representation, is there any reason why signed overflow has to continue being undefined behavior?On a slightly more personal note: What are some undefined behaviors that you would like to turn into defi	beefhash	10.632785	-7.053514	comment	9.0	57.5	1586871986	-6.997895
23078994	Deleting data distributed throughout	Deleting data distributed throughout a microservice architecture	rrampage	9.786548	-7.3554554	story	9.0	115.0	1588679366	-13.81842
33194773	A modern Fortran scientific programm	A modern Fortran scientific programming ecosystem	Bostonian	10.483382	-7.4039745	story	9.0	117.0	1665686295	8.79301
33658376	Swift Project in 2023	Swift Project in 2023	Austin_Conlon	10.459945	-7.834006	story	9.0	52.0	1668793052	-10.893815
34093219	As someone who’s primarily worked wi	As someone who’s primarily worked with monoliths, I often wonder how often this exact problem happens, but where A and B are [micro]services owned by two different teams, one is required by company policy to use their APIs not their raw databases, and escalati	btown	9.790738	-7.353624	comment	9.0	25.0	1671717319	-13.828201
27100887	It looks interesting. But stuff like	It looks interesting. But stuff like this:> Objective-S is the first general purpose programming languageThose kind of statements annoy me to be honest. Is it really true? Or is it over-the-top marketing hype?For me – and I'm sure I'm not the only person who f	skissane	10.4981	-7.7557855	comment	9.0	30.0	1620603005	5.801414
27104376	Swift Actors: A practical example, p	Swift Actors: A practical example, part 1	tosh	10.5551405	-7.8257422	story	9.0	104.0	1620641061	12.824065
27264631	Ask HN: Resources to Learn Scientifi	Ask HN: Resources to Learn Scientific Computing?	TripleH	10.204904	-7.787603	story	9.0	10.0	1621865858	10.412397
27428016	As someone preparing to transition f	As someone preparing to transition from C# to Swift dev, async/await was a big missing piece. I’ll be curious to see how quickly the ecosystem picks it up as I move forward on my journey.My experience interacting with teams and devs targeting Swift is that whe	nxc18	10.495954	-7.8242555	comment	9.0	32.5	1623104675	-10.874879
27455230	iOS4 Built in SwiftUI	iOS4 Built in SwiftUI	mattei	10.452526	-7.8271494	story	9.0	124.0	1623284686	-10.846704
37791897	When allocators are hoarding your pr	When allocators are hoarding your precious memory (2021)	marcodiego	10.6458235	-7.086674	story	9.0	94.0	1696605330	8.840048
37948492	Having written ObjC since 2009 or so	Having written ObjC since 2009 or so, honestly it's a fine language, and although I wrote a fair bit in Swift, I don't really see it as a significant improvement over ObjC, which is Good Enough™ to keep using. Something has to cause serious friction to be repl	sbjs	10.468703	-7.777956	comment	9.0	45.0	1697748371	5.6708035
38070217	I find it odd that there is this wid	I find it odd that there is this widespread meme—on HN, not in the industry—that microservices are never justified. I think everyone recognizes that it makes sense that domain name resolution is performed by an external service, and very few people are out the	jeffbee	9.784569	-7.36069	comment	9.0	31.0	1698677814	12.333806
38198638	On-Crash Backtraces in Swift	On-Crash Backtraces in Swift	yaglo	10.50696	-7.7928247	story	9.0	127.0	1699485383	-10.848055
38262320	Announcing the MonoGame Foundation	Announcing the MonoGame Foundation	pjmlp	9.866864	-7.2346535	story	9.0	127.0	1699963910	13.423718
15166177	Scaling Your Org with Microservices 	Scaling Your Org with Microservices [slides]	kiyanwang	9.787019	-7.360817	story	9.0	68.0	1504506940	-13.830625
15566339	Front-end Microservices at HelloFres	Front-end Microservices at HelloFresh	mcenedella	9.785812	-7.3612285	story	9.0	22.0	1509088811	4.1292334
30753584	Ask HN: Book Recommendation for macO	Ask HN: Book Recommendation for macOS Development	soapdog	10.4667015	-7.713054	story	9.0	86.0	1647867614	-10.740116
25779611	Rendering Moana with Swift	Rendering Moana with Swift	hutattedonmyarm	10.44829	-7.830845	story	9.0	163.0	1610646945	-10.855005
25821846	My gripes, feel free to disagree:1. 	"My gripes, feel free to disagree:1. Julia uses base-1 indexing.2. Julia uses an ""end"" keyword everywhere, which is imho too verbose (and the corresponding ""begin"" is missing so it's inconsistent)."	amelius	10.200898	-7.9575768	comment	9.0	25.0	1610978484	10.668813
35561534	Ask HN: Why is no one competing with	Ask HN: Why is no one competing with Apple / Googles keyboard?	Alifatisk	10.447413	-7.813165	story	9.0	6.0	1681417206	-10.8483515
36097321	Integrating Zig and SwiftUI	Integrating Zig and SwiftUI	ingve	10.479542	-7.811841	story	9.0	165.0	1685214546	-10.894476
36359652	100 Days of SwiftUI	100 Days of SwiftUI	sanketpatrikar	10.453457	-7.833172	story	9.0	210.0	1686933806	-10.829249
36488655	> A single regression within a monol	> A single regression within a monolithic code base can bring the whole system (in this case, all of Uber) down.Serious question: why though? I can't think of a backend system where a single regression could bring the whole thing down. If something blows it up	xwowsersx	9.803676	-7.348715	comment	9.0	33.0	1687837608	3.3020446
29281360	Zstandard RFC 8878	Zstandard RFC 8878	itroot	10.616481	-7.419802	story	9.0	102.0	1637350877	12.368294
29403289	Fundamentally, I don't really see mu	Fundamentally, I don't really see much difference between monoliths and microservices.In a monolith, you just call another function/class, but in microservices that function is a http call. I guess the benefit of microservices is the ability to independently s	FinanceAnon	9.793809	-7.3615794	comment	9.0	28.0	1638363944	-13.824844
34332104	From my time in academia, there are 	From my time in academia, there are two reasons:1. It's fast.2. It's tolerant of poor programmers.Regarding item 2: People who want to specialize in scientific computing intentionally avoid becoming good programmers. Most of them are not in CS, but in some oth	BeetleB	10.472279	-7.394301	comment	9.0	35.5	1673387666	8.823145
34377102	Ask HN: Please Help, Should I Quit M	Ask HN: Please Help, Should I Quit My Job?	roflyear	9.794676	-7.342798	story	9.0	8.0	1673666690	-13.823264
34455598	I feel like I was a 10x when we did 	"I feel like I was a 10x when we did monoliths. With ""fake team microservices"" - which is extremely prevalent these days, I feel like a 1x developer. The second I have to open another repo and do something - pull, yarn, build, and start updating, push, go back "	rhacker	9.781227	-7.349391	comment	9.0	32.5	1674232699	-13.818504
34466841	I wonder how big the market is for t	I wonder how big the market is for this. Despite being an actually nice language, Swift is not that popular outside Apple's ecosystem, so I guess most developers would use XCode for it's integration (with Apple Developer, SwiftUI/preview etc).	d12bb	10.464487	-7.8142333	comment	9.0	32.0	1674313319	-10.835881
34687322	The article is grouping things toget	The article is grouping things together that don't belong in the same categories.OO, functional, imperative, declarative: these are ways of controlling dispatch.Monoliths and microservices are both ways to organize codebases and  teams of programmers and contr	twblalock	9.7934065	-7.3571863	comment	9.0	31.5	1675733569	-13.824917
39526713	…let's say, your TV, or your iOS dev	…let's say, your TV, or your iOS device will just do 10 network calls to these different microservices. It will just not scale at all. You would have a very bad customer experience. It would feel like using the Disney app. It's just not ideal.That’s some shade	iammiles	9.795231	-7.343785	comment	9.0	31.0	1709054659	-13.802122
39613244	Swift is really an underrated langua	"Swift is really an underrated language mainly due to the Apple baggage.
It hits the sweet spot between Rust and C++ due to it's sane design choices like structured concurrency or simple things like tagged enums, Result<T,E> etc.I wish it gains more popularity "	FlyingSnake	10.588002	-7.861456	comment	9.0	38.5	1709709818	-10.840629
37099682	I learned to program in Objective C,	I learned to program in Objective C, it was fun. Spent many hours digging behind the scenes, but the only fun fact I remember is that it’s a strict superset of C, so any C program is a valid Objective C program. Always found this fascinating.Are people still u	atorodius	10.484328	-7.762233	comment	9.0	46.5	1691844879	5.7275243
37186877	You don't need a damn network betwee	"You don't need a damn network between two pieces of code just to ""do one thing and do it well"", for God's sake, I'm so sick of this rampant cluelessness in the industry.Do you saturate the resources of one machine and need to split things off? Do you have mult"	francasso	9.790704	-7.356325	comment	9.0	47.0	1692435554	-13.822409
24593423	To me Swift is one of the most inter	To me Swift is one of the most interesting languages right now. It's killer for iOS development of course, but Swift for Tensorflow[0] is exciting and could become a refreshing alternative to python for machine learning. Here Swift System + Swift for Linux cou	usmannk	10.466029	-7.8403	comment	9.0	105.5	1601063086	-10.934612
24594279	There's nothing about Swift that has	There's nothing about Swift that has me interested, curious or excited. That said, I haven't done much research into it. What is new and interesting about Swift?From looking through the swift official site, it just seems like a new C# or Java with ahead of tim	didibus	10.499041	-7.8227887	comment	9.0	39.0	1601069245	-10.843471
24690947	Monolith -&gt; Services: A Sketchy A	Monolith -&gt; Services: A Sketchy Approach	KentBeck	9.810301	-7.3458223	story	9.0	59.0	1601925096	-13.7779875
24815640	Temporal: open-source microservices 	Temporal: open-source microservices orchestration platform	rgbrgb	9.769738	-7.290598	story	9.0	123.0	1602997057	-13.663454
24975661	In my opinion, microservices are all	In my opinion, microservices are all the rage because they're an easily digestible way for doing rewrites.  Everyone hates their legacy monolith written in Java, .NET, Ruby, Python, or PHP, and wants to rewrite it in whatever flavor of the month it is.  They g	candiddevmike	9.783159	-7.3568964	comment	9.0	33.0	1604369193	-13.820311
38879199	That experiment was done in 2015, wh	That experiment was done in 2015, when the Swift runtime had to be included. If you build an app now, it will link to the system runtime and be close to 100kb as well.This seems to be premature optimization. The author forced himself to learn archaic Objective	KMnO4	10.493521	-7.781675	comment	9.0	27.0	1704463790	5.5049233
22121896	Latin was dead long before it stoppe	"Latin was dead long before it stopped being used in written works. It died when it stopped being spoken and stopped changing.I don't know if Fortran would be considered dead by the ""no longer adapting"" definition, but that it's still in use isn't proof it's al"	lolinder	10.473594	-7.406909	comment	9.0	35.0	1579726346	8.785534
22295536	> Our policy for evolving the API ov	> Our policy for evolving the API over time is that new functionality can be added, while removing or changing existing functionality can only be done if the benefits exceed the (often significant) costs to users and only after giving clear deprecation warning	dragonsh	10.467753	-7.82384	comment	9.0	37.5	1581389094	-10.853641
23756409	I think that many people look at Mic	I think that many people look at Microservices from a purely technical standpoint. How much compute power do I get per dollar spent. What about the monitoring complexities and the logging problems?Microservices are actually often driven by business requirement	soonnow	9.781094	-7.357353	comment	10.0	43.0	1594104424	-13.816994
20090260	Lots of engineers are suggesting tha	"Lots of engineers are suggesting that SwiftUI, plus other declarative frameworks, might be ""the future"" of app development. However, I can't help but feel that this paradigm would work best when your app is a fairly basic CRUD thing. If you're working with hig"	archagon	10.459066	-7.82389	comment	10.0	28.0	1559605659	-10.824777
20463381	Faster, cheaper, and better: A story	Faster, cheaper, and better: A story of breaking a monolith	seperman	9.841656	-7.2810187	story	10.0	148.0	1563393751	13.437979
13738204	Ask HN: How to convince my team that	Ask HN: How to convince my team that microservices are not a good idea to us?	mxh_ht	9.783169	-7.361635	story	10.0	8.0	1488128357	-13.817346
13739310	Ask HN: How microservices works?	Ask HN: How microservices works?	CCing	9.779625	-7.3629866	story	10.0	13.0	1488137980	-13.775557
14367662	Flang – A Fortran compiler targeting	Flang – A Fortran compiler targeting LLVM	swills	10.497351	-7.324402	story	10.0	176.0	1495118949	-8.315095
14673059	Chris Lattner on the Realm WWDC 2017	Chris Lattner on the Realm WWDC 2017 Swift Panel	king7532	10.454616	-7.835857	story	10.0	121.0	1498850460	-10.853556
30836345	Swift on Mac OS 9 (2020)	Swift on Mac OS 9 (2020)	Detrus	10.462368	-7.821495	story	10.0	122.0	1648506306	-10.851839
31225108	I like that story, and wish the auth	"I like that story, and wish the author luck.I never thought of myself as a ""niche programmer,"" but, as it turns out, I sort of, am.I write native UIKit applications, using Swift. No PWAs, no hybrid systems (like React, Electron, or Ionic). I'm pretty good at i"	ChrisMarshallNY	10.469078	-7.797676	comment	10.0	36.5	1651413984	-10.828769
31328909	I wonder if anyone who wants to brin	I wonder if anyone who wants to bring back the monolith has ever worked on a true large monolithic codebase? Not something that's like 5-10k lines of code excluding frameworks, but monsters that are 100k+. Where test suites take an hour to run end-to-end and y	ascendantlogic	9.835983	-7.293392	comment	10.0	29.0	1652199558	13.745852
31727453	> Organizing your local software sys	> Organizing your local software systems using separate processes, microservices that are combined using a REST architectural style, does help enforce module boundaries via the operating system but at significant costs. It is a very heavy-handed approach for a	ajsharp	9.808588	-7.349192	comment	10.0	49.5	1655136495	-13.824278
26318674	> I can’t help but think that compli	> I can’t help but think that complicated programming paradigms would seem more intuitive to beginners if taught through Ada instead of C and its derivative languages, as is common in computer science and engineering faculties worldwide.At my university, the f	iamevn	10.660597	-7.718009	comment	10.0	64.0	1614710130	-5.130525
35986906	SciPy: Interested in adopting PRIMA,	SciPy: Interested in adopting PRIMA, but little appetite for more Fortran code	zaikunzhang	10.524877	-7.3818984	story	10.0	126.0	1684412542	8.835247
36183763	Decoupling a core service from your 	Decoupling a core service from your monolith the right way	eallam	9.801953	-7.3514385	story	10.0	61.0	1685863872	-13.8245125
28845408	dumb question time but what exactly 	dumb question time but what exactly makes something a micro service.Is the separation of a specific functionality from a wider array of functions to its own vm make it a microservice?When does something stop being a microservice i guess?	wara23arish	9.784555	-7.361924	comment	10.0	31.5	1634074819	-13.799362
29023529	Ada is not just another programming 	Ada is not just another programming language (1986)	kickitover	10.657249	-7.716932	story	10.0	81.0	1635407872	-5.1216407
34234904	Microservices are less efficient, bu	Microservices are less efficient, but are still more scalable.Servers can only get so big. If your monolith needs more resources than a single server can provide, then you can chop it up into microservices and each microservice can get its own beefy server. Th	dahfizz	9.789418	-7.353453	comment	10.0	60.5	1672767988	-13.828659
34338141	Microservices - let’s replace as man	Microservices - let’s replace as many interfaces as possible with the slowest, flakiest, most complex mechanism - the network layer. Why call a function when you can wrap that function in an entire application and call it via API? Why have a single database wh	monero-xmr	9.800594	-7.35633	comment	10.0	53.0	1673443690	-13.803364
34410879	Dijkstra Maps Visualized	Dijkstra Maps Visualized	NKosmatos	10.462925	-7.159639	story	10.0	128.0	1673950173	-9.513154
35108364	GNU Octave 8.1	GNU Octave 8.1	jrepinc	10.156893	-7.792322	story	10.0	176.0	1678543583	10.297489
37177203	Helidon Níma: A Java microservices f	Helidon Níma: A Java microservices framework based on virtual threads	philonoist	9.829979	-7.3569517	story	10.0	92.0	1692373361	-13.80118
37178515	>For example, a common thing program	">For example, a common thing programmers expect is that you can test for signed integer overflow by checking whether the result is less than one of the operands, as in this program:    #include <stdio.h>

    int f(int x) {
        if(x+100 < x)
            pr"	philosopher1234	10.63169	-7.03352	comment	10.0	51.0	1692377803	-6.9682302
37199660	The arguments in this blogpost are f	"The arguments in this blogpost are fundamentally flawed. The fact that they opened a bug based on them but got shut down should have raised all red flags.When compiling and running a C program, the only thing that matters is ""what the C abstract machine does""."	volta87	10.65472	-7.0899215	comment	10.0	57.5	1692542845	-7.1206813
24462511	How Swift 5.3 enhances SwiftUI’s DSL	How Swift 5.3 enhances SwiftUI’s DSL	yannikyeo	10.4617815	-7.8268147	story	10.0	146.0	1600018581	-10.880368
24462903	I’m starting to learn macOS developm	I’m starting to learn macOS development and I’m a bit torn on SwiftUI. As someone who’s primarily done web development the last few years, and comfortable with React, SwiftUI is pretty appealing from the standpoint of being a similar mental model.On the other 	dceddia	10.463477	-7.8198557	comment	10.0	47.5	1600022040	-10.844945
24720505	Ask HN: Is there much future in bein	Ask HN: Is there much future in being a Swift developer?	windowshopping	10.468773	-7.8124013	story	10.0	10.0	1602173519	-10.767269
24944777	Swift Concurrency Roadmap	Swift Concurrency Roadmap	rainworld	10.516243	-7.8258	story	10.0	158.0	1604079404	-10.833486
24975239	I've never understood all this drama	I've never understood all this drama. In my experience, monoliths are universally bad in every imaginable way. A huge part of my career has been splitting monoliths into cohesive smaller codebases which could be called microservices.How to split them has never	bedobi	9.797301	-7.3545814	comment	10.0	50.5	1604365154	-13.821803
25164271	i code iOS (native) app for a living	i code iOS (native) app for a living.I'm already stuck developing for the app store, using xcode to sign and deploy, using a programming language (that i love) swift that only really works on mac OS.My personal situation isn't going to change anytime soon unfo	bsaul	10.472553	-7.7439613	comment	10.0	25.5	1605902299	-10.767827
32524462	Apple’s Use of AppKit, Mac Catalyst 	Apple’s Use of AppKit, Mac Catalyst and SwiftUI in macOS	phenylene	10.475995	-7.8107367	story	10.0	161.0	1660933501	-10.847874
31967965	SwiftUI for Mac 2022	SwiftUI for Mac 2022	allenleein	10.457314	-7.8264475	story	10.0	151.0	1656858738	-10.84305
32026082	The big advantage of microservices i	The big advantage of microservices is organizational not technical. You can hire teams and tell them that they are responsible for an API that receives specific data and should return specific data. These teams can operate independently. You don't have to forc	gitfan86	9.78498	-7.361345	comment	10.0	30.0	1657282073	-13.820816
32265494	Lattner wanted it all: a language gr	Lattner wanted it all: a language great at system programming, scripting and web framework and building apps. It's very ambitious and unheard of, but so was LLVM, so who knows, maybe he was onto something.8 years later, it's safe to say it's not the language o	tambourine_man	10.471159	-7.8117247	comment	10.0	31.0	1659021491	-10.860727
39538262	Working in the field of robotics, I 	Working in the field of robotics, I often have to write big vectors (usually computed as the result of 3D transformations) and then compute their Jacobian (their derivative with respect to several state-variables), which quickly becomes very nasty equations. I	abricq	10.340179	-7.1761293	comment	10.0	34.5	1709129996	9.827635
22193929	My employer adopted microservices fo	My employer adopted microservices for a very specific reason: it became nearly impossible to deploy the monolith. With hundreds of commits trying to go out every day, probability that at least one would break something approached 1. Then everything had to be r	closeparen	9.785064	-7.356311	comment	10.0	42.0	1580409399	-13.825143
22196951	I couldn't agree more with an articl	"I couldn't agree more with an article.Most people think a micro-service architecture is a panacea because ""look at how simple X is,"" but it's not that simple. It's now a distributed system, and very likely, it's a the worst-of-the-worst a distributed monolith."	rubyn00bie	9.7889595	-7.355663	comment	10.0	49.5	1580425608	-13.812727
19246097	Regarding Conway's Law:We have found	Regarding Conway's Law:We have found that by changing our software/system architecture we have also inadvertently changed our organisation structure.- Inverse Conway Law or just Roy's Law ;-)Before we had four cross functional teams, working on a single applic	redcodenl	9.782051	-7.352968	comment	10.0	40.0	1551107237	-13.802861
19271772	A few years ago I had to update some	A few years ago I had to update some FORTRAN code written in the 1980s that did bond valuations and some other financial stuff.  It hadn't been touched since it was written and was now running out of space because the number of bonds keeps increasing year afte	bigpicture	10.4622555	-7.413806	comment	10.0	82.0	1551366404	8.809553
19714622	Embracing Swift for Deep Learning	Embracing Swift for Deep Learning	zeristor	10.469421	-7.830069	story	10.0	127.0	1555881208	-10.858357
17279989	"I agree with the author.""So now cont"	"I agree with the author.""So now contrast that to Swift. First of all: Which question did it desire to answer? Think about it. There is no one clean answer.""I feel that Swift is more just like a language designed to be a syntax swap of objective-c, making few t"	ardit33	10.491783	-7.820343	comment	10.0	31.0	1528662416	-10.82768
17797003	What Did Ada Lovelace’s Program Actu	What Did Ada Lovelace’s Program Actually Do?	weebst	10.640072	-7.722019	story	10.0	410.0	1534724984	-4.7851334
21084327	JetBrains had a recent survey that s	JetBrains had a recent survey that showed half of all iOS developers were using Swift only.https://www.jetbrains.com/lp/devecosystem-2019/swift-objc/How about HN devs?	melling	10.462316	-7.811707	comment	10.0	66.0	1569524737	-10.834581
21583924	One of the points listed as the prom	"One of the points listed as the promises of microservices is: ""Easy to test""A microservice might be easy to test in isolation, but testing a microservices based system is FAR more difficult than testing a monolith - personally, I find that to be the worst part"	danmaz74	9.808087	-7.306302	comment	10.0	31.0	1574258468	-13.819754
18427965	Building iPad Pro features in Swift	Building iPad Pro features in Swift	ingve	10.459614	-7.8241725	story	10.0	116.0	1541963592	-10.832354
18627035	Front-End Microservices	Front-End Microservices	kostspielig	9.79143	-7.353663	story	10.0	91.0	1544185135	-13.8087225
30000412	I have a theory that auto-wired Depe	I have a theory that auto-wired Dependency Injection in a single DI container is partly to blame for monolith spaghetti. Once an app reaches a certain size and anything can depend on anything else, reasoning about the whole can become difficult.I think there i	scanr	9.799735	-7.343766	comment	10.0	30.5	1642627705	-13.825161
30160501	Swift and C++ interoperability workg	Swift and C++ interoperability workgroup announcement	pjmlp	10.488267	-7.825641	story	10.0	122.0	1643709276	-10.879316
30270994	Lessons from Learning Ada in 2021	Lessons from Learning Ada in 2021	pjmlp	10.6243305	-7.7320204	story	10.0	94.0	1644401550	-5.100375
30307478	Meanwhile, HPC software will continu	Meanwhile, HPC software will continue to be written with C+MPI, or Fortran+MPI.Source: was involved in development of multiple HPC frameworks, attended multiple HPC conferences, despite wailing and gnashing of teeth all actual software continues to be written 	floren	10.395583	-7.321032	comment	10.0	42.0	1644616497	8.291733
12581524	"So... what's the ""elevator pitch"" fo"	"So... what's the ""elevator pitch"" for Swift?It has anything interesting over Elixir or Go (well, go's feature is ""lack of feature"" but you know what I mean) or Scala or Kotlin?I know that iOS and MacOS desperately needed a modern language, and great for them t"	nnq	10.478537	-7.8292303	comment	10.0	44.5	1474896010	-10.859308
12915904	Dijkstra's Algorithm	Dijkstra's Algorithm	hn-user	10.46139	-7.1627727	story	10.0	119.0	1478733790	-9.440543
13174743	Conductor – A microservices orchestr	Conductor – A microservices orchestration engine that runs in the cloud	Nimsical	9.755154	-7.2597556	story	10.0	71.0	1481706940	-13.612682
13186780	Dijkstra is of course brilliant and 	"Dijkstra is of course brilliant and I recognize much of his tone is tongue in cheek and irreverant but sometimes I find his writing so nasty, pompous and arrogant that it becomes irritating; claiming, after a series of opinions about what he personally finds """	wfo	10.592246	-7.183163	comment	10.0	64.0	1481826085	-9.450422
13227193	Modern fortran dialect is actually n	Modern fortran dialect is actually not so bad. It's actually pretty awesome and let you develop program that take advantage of distributed computing and gpu processing easily. Also, I don't think any mainstream languages these days have vector operations as go	neurostimulant	10.49459	-7.3824997	comment	10.0	35.0	1482301568	8.824226
12003045	Universal rendering with SwiftShader	Universal rendering with SwiftShader, now open source	ingve	10.459317	-7.8633294	story	10.0	63.0	1467220355	-10.819237
12080658	100 Days of Swift: The Tutorials	100 Days of Swift: The Tutorials	letterhtml	10.475523	-7.8229303	story	10.0	115.0	1468343056	-10.832707
12292039	Here's a question: if you have a tea	Here's a question: if you have a team and an internal culture that managed to create a legacy code mess in as little as six months in their existing app, how is giving them a microservices architecture and Docker to play with going to help?If you give that tea	kristianc	9.774288	-7.36378	comment	10.0	65.0	1471283116	-13.822528
28054211	Knuth on Dijkstra (2014)	Knuth on Dijkstra (2014)	wglb	10.454564	-7.1654196	story	10.0	111.0	1628024706	-9.421401
28058398	Ask HN: Please recommend a serious b	Ask HN: Please recommend a serious book on Microservices	kosolam	9.7821	-7.360843	story	10.0	40.0	1628063380	-13.802056
22726233	I hate to rain on the parade, but on	I hate to rain on the parade, but on the face of it, this sounds utterly ridiculous.I simply cannot believe that their product really calls for an architecture consisting of 1600 individual microservices.Don't get me wrong, I don't think one huge monolith is i	SheinhardtWigCo	9.789523	-7.35737	comment	10.0	32.5	1585557395	-13.807794
22836883	Untangling microservices, or balanci	Untangling microservices, or balancing complexity in distributed systems	ablekh	9.779136	-7.3584995	story	10.0	156.0	1586549416	-13.818519
23032276	Distributed transactions are not mic	Distributed transactions are not microservices	ratneshsingh35	9.785845	-7.3598027	story	10.0	58.0	1588262247	-13.789061
26935739	It's 2021 and Swift is still nowhere	It's 2021 and Swift is still nowhere to be found in the repositories of any of the Linux distributions I usually use. It's a big PITA to install, with nothing comparable to `rustup` or even truly universal prepackaged binaries - the official website only offer	qalmakka	10.476718	-7.8255944	comment	10.0	42.0	1619378763	-10.841123
27210008	A Gentle Introduction to Ted Nelson'	A Gentle Introduction to Ted Nelson's ZigZag Structure (2002)	breck	10.660717	-7.452756	story	10.0	89.0	1621437940	12.453053
27456172	This file is insane: https://github.	This file is insane: https://github.com/zzanehip/The-OldOS-Project/blob/master/Ol...I hate to say it but SwiftUI is tricky to write for very complex user interface...the one in that file is a nightmare imo.	MrGando	10.46567	-7.830685	comment	10.0	30.5	1623293555	-10.835021
37595240	Is Fortran easier to optimize than C	Is Fortran easier to optimize than C for heavy calculations?	jokoon	10.493807	-7.3701744	story	10.0	94.0	1695288406	8.838749
15167754	I have yet to see a good technical i	I have yet to see a good technical implementation of microservices. It always seem to get messy, inefficient and hard to organize.Everything seems so hard. To follow and debug requests for example. How do you do that in a good way? Running a local microservice	staticelf	9.787768	-7.373739	comment	10.0	39.5	1504528246	-13.812649
15460645	Securing Microservices	Securing Microservices	prabaths	9.787528	-7.363315	story	10.0	162.0	1507836889	-13.792608
23716211	LFortran: Modern interactive LLVM-ba	LFortran: Modern interactive LLVM-based Fortran compiler	kergonath	10.501706	-7.3122597	story	11.0	151.0	1593713429	-8.276823
13971313	Swift 3.1 Released	Swift 3.1 Released	okket	10.458409	-7.831385	story	11.0	167.0	1490645773	-10.848465
30759925	I'm a huge proponent of microservice	I'm a huge proponent of microservices, having worked on one of the earliest and largest ones in the cloud.  And I absolutely think that they provide huge advantages to large companies -- smaller teams, easier releases, independently scaling, separation of conc	jedberg	9.78454	-7.3557253	comment	11.0	50.5	1647898132	-13.81518
30935633	The State of Fortran	The State of Fortran	MakisH	10.4570265	-7.407894	story	11.0	137.0	1649269219	8.804163
25720712	Like Matlab and Lua, 1-based indexin	Like Matlab and Lua, 1-based indexing :(	erwincoumans	10.672033	-7.3050637	comment	11.0	43.5	1610317203	9.6189785
25888168	As an engineer-turned-manager, I spe	As an engineer-turned-manager, I spend a lot of time asking engineers how we can simplify their ambitious plans. Often it’s as simple as asking “What would we give up by using a monolith here instead of microservices?”Forcing people to justify, out loud, why t	PragmaticPulp	9.7837715	-7.358123	comment	11.0	46.0	1611453005	-13.825925
26383574	Somewhere down the line, developers 	Somewhere down the line, developers will start to realize that single applications running in the same server memory and CPU cache will run much faster than Micro services applications that makes api calls over the network.Depending on your organization scale 	acd	9.785404	-7.3377986	comment	11.0	38.5	1615193961	-13.786704
39611426	How usable/useful is Swift on not-Ap	How usable/useful is Swift on not-Apple platforms in general nowadays? I've been giving it a wide berth since I got the impression that other platforms were more of an afterthought, but maybe things have improved when I wasn't looking.	jsheard	10.465362	-7.8191433	comment	11.0	35.5	1709690701	-10.837992
36577651	I remain confused about how Zig make	I remain confused about how Zig makes it to the front page of Hacker News so often. As far as I know, no one is using it in production after 7 years of development.Are people just really excited about this project? Are the people behind it just really good at 	andrewedstrom	10.660228	-7.588381	comment	11.0	36.5	1688412218	12.543562
37106560	Solving a simple puzzle using SymPy	Solving a simple puzzle using SymPy	somat	10.320289	-7.201815	story	11.0	101.0	1691899190	9.829931
37477259	Microservices is mostly an RDD (Resu	Microservices is mostly an RDD (Resume Driven Development) practice I've found. Really, as the article says correctly and hilariously, unless you're a greenfield or exceptionally large, you end up with a fleet of shitty golf carts.My personal anecdote is, watc	baz00	9.782839	-7.3588758	comment	11.0	30.5	1694497465	-13.816742
24609096	Apple’s use of Swift and SwiftUI in 	Apple’s use of Swift and SwiftUI in iOS 14	Timac	10.455288	-7.8283935	story	11.0	186.0	1601232183	-10.834575
25199509	Monoliths are supposed to be made of	Monoliths are supposed to be made of stone, hence the name...	Grustaf	9.843403	-7.2649026	comment	11.0	44.0	1606233083	13.402383
25254648	SymPy 1.7	SymPy 1.7	happy-go-lucky	10.317008	-7.2045355	story	11.0	127.0	1606749736	9.888819
25440787	A new release for GNU Octave	A new release for GNU Octave	Tomte	10.163716	-7.7849464	story	11.0	208.0	1608112816	10.314477
38663416	While it's good to have core technol	While it's good to have core technology as part of OS, it also makes it non-updateable separately from the OS itself, which slows the spread of developments.That's my main gripe with apple's approach to swift and swiftui. Yes, tech is getting better every day,	NwpierratorR	10.496484	-7.766707	comment	11.0	57.5	1702725164	-10.846456
38892010	Personally, I think Python's success	Personally, I think Python's success is down to the productivity of its peudocode-like syntax letting you hack prototypes out fast and easy. In turn, that makes building libraries more attractive, and these things build on each other. FORTRAN is very fast but 	arc619	10.570205	-7.4036713	comment	11.0	38.5	1704553722	8.892919
32802888	My crazy advice: Build a monolith as	My crazy advice: Build a monolith as microservices.By which I mean focus on Domain Driven Development, focus strongly on modularity even when, and this is the key part, it's not required because it's in a monolith.There are a great deal of advantages to micros	preommr	9.794144	-7.3637943	comment	11.0	41.0	1662927304	-13.823204
31804843	What's New in Ada 2022	What's New in Ada 2022	skibz	10.641504	-7.73089	story	11.0	175.0	1655684053	-5.0757937
32001944	Does each microservice really need i	Does each microservice really need its own database? I have recently proposed my team initially not do this, and I'm wondering if I am creating a huge problem.	whiddershins	9.791837	-7.355866	comment	11.0	30.5	1657119439	-13.8068075
22194474	> But you do not simply go and poke 	> But you do not simply go and poke your reporting fingers into individual service databases.This is why I distrust all of the monolith folks. Yes, it's easier to get your data, but in the long run you create unmaintainable spaghetti that can't ever change wit	echelon	9.793743	-7.356306	comment	11.0	44.5	1580412257	-13.825177
22281619	Flang: The Fortran frontend of LLVM 	Flang: The Fortran frontend of LLVM [video]	pjmlp	10.457018	-7.4032416	story	11.0	135.0	1581248246	-8.271458
12581662	When I recently interviewed at Apple	When I recently interviewed at Apple I was told my position would primarily be coding in Java, but the team would be open to other languages as the project progressed and needs changed. I asked if they would consider Swift. Then was told that Swift wasn't prod	valarauca1	10.486973	-7.826718	comment	11.0	46.0	1474896921	-10.836486
12675708	The Julia Programming Language for N	The Julia Programming Language for Number Crunching	bauta-steen	10.207948	-7.9231105	story	11.0	66.0	1476086094	10.689105
19705561	The new features of Fortran 2018 [pd	The new features of Fortran 2018 [pdf]	Tomte	10.457282	-7.406165	story	11.0	173.0	1555752115	8.814068
16015097	I have been doing microservices for 	I have been doing microservices for 4 years now and I can tell you something: do not go there. The tools are simply not there.Although I am working on one platform like that right now (see https://github.com/1backend/1backend) the reason I started it was more 	friendly_chap	9.781013	-7.355877	comment	11.0	51.0	1514387218	-13.821981
16200419	"Biggest issue with microservices: ""M"	"Biggest issue with microservices: ""Microservices can be monoliths in disguise"" -- I'd omit the can and say 99% of the time are.It's not a microservice if you have API dependencies. It's (probably) not a microservice if you access a global data store. A microse"	dvt	9.783395	-7.360234	comment	11.0	56.0	1516573685	-13.813191
16712272	"Is ""server side Swift"" becoming less"	"Is ""server side Swift"" becoming less niche?  I'm not clear on why it isn't competing more with Go and Rust."	tyingq	10.591184	-7.878055	comment	11.0	43.5	1522366912	-10.839525
17333966	The power of Result types in Swift	The power of Result types in Swift	ingve	10.540609	-7.813223	story	11.0	95.0	1529264936	-10.833155
21083850	Apple’s Use of Swift in iOS 13	Apple’s Use of Swift in iOS 13	Timac	10.461223	-7.824085	story	11.0	174.0	1569522224	-10.835656
21409791	Not directly related to the article,	Not directly related to the article, but given a green field, what project qualities would lead one to choose Fortran as a tool to solve the problem over anything else?	totalperspectiv	10.452519	-7.4135017	comment	11.0	32.5	1572535490	8.825133
21457207	Ogre 1.12.3	Ogre 1.12.3	bbmario	10.639197	-7.3822684	story	11.0	108.0	1572991272	7.4479456
39122286	BLIS: A BLAS-like framework for basi	BLIS: A BLAS-like framework for basic linear algebra routines	ogogmad	10.50327	-7.0678105	story	11.0	156.0	1706128368	9.157641
17996243	Hi - I am the guy who started Sage. 	Hi - I am the guy who started Sage.  If you have any questions I can try to answer them here.	williamstein	10.256887	-7.197225	comment	11.0	32.0	1537049120	9.747275
13226929	1) What makes a language like Fortra	"1) What makes a language like Fortran so intimidating?I know it's the butt of many jokes (together with Cobol and Assembly - especially in the context ""really hard to learn/use languages) but just scrolling through the github repo (frontpage), the code doesn't"	phantom_oracle	10.495478	-7.3833222	comment	11.0	50.0	1482296935	8.827826
12331743	Learning from Ada	Learning from Ada	rspivak	10.62951	-7.7189965	story	11.0	144.0	1471800307	-5.145164
28009609	“Swift is the only language I could 	“Swift is the only language I could find with over 100 keywords”	alexobenauer	10.47894	-7.8276863	story	11.0	29.0	1627662128	-10.84822
22812312	Jax – Composable transformations of 	Jax – Composable transformations of Python and NumPy programs	lelf	10.048144	-7.9220543	story	11.0	235.0	1586349145	10.528426
23019096	Are there any case studies where mic	Are there any case studies where microservices went well?From an end user perspective, Netflix runs in “constantly degraded” mod.From an engineering perspective, they track “number of successful stream starts”, instead of percentage of the time 100% of their s	hedora	9.784232	-7.3556533	comment	11.0	31.5	1588168058	-13.7934475
23171248	How many people are writing new Fort	"How many people are writing new Fortran code? I know it has its niches, and is used in some popular numerical Python packages, but what about outside that? I've seen it mentioned in a few job postings for government contractors or ""scientific programmer"" (more"	non-entity	10.473097	-7.4005356	comment	11.0	45.0	1589400596	8.830856
26523212	ZPL: (Almost) C99 Powerkit	ZPL: (Almost) C99 Powerkit	up2isomorphism	10.598108	-7.0159345	story	11.0	73.0	1616248043	7.705004
26711759	The article didn't say the reason fo	The article didn't say the reason for Fortran's renewed popularity. Anyone know why? Only thing I can think of is either due to AI/ML or robotic-y needs.	RoyTyrell	10.42559	-7.4051714	comment	11.0	37.0	1617717267	8.803118
26977499	Fortran Package Manager	Fortran Package Manager	rbanffy	10.434502	-7.3877406	story	11.0	118.0	1619670833	8.824911
38072226	> And think of the sheer number of l	> And think of the sheer number of libraries - one for each language adopted - that need to be supported to provide common functionality that all services need, like logging.This is the #1 reason we quit the microservices game. It is simply a complete waste of	bob1029	9.793089	-7.356742	comment	11.0	54.0	1698685457	-13.842943
38498934	Understanding Objective-C by transpi	Understanding Objective-C by transpiling it to C++	ingve	10.487093	-7.7201877	story	11.0	94.0	1701528326	5.6291337
20142130	Matlab–Python–Julia Cheatsheet	Matlab–Python–Julia Cheatsheet	tomrod	10.179259	-7.978682	story	12.0	265.0	1560116655	10.783413
20932467	This article promotes a popular misc	"This article promotes a popular misconception of the programming situation for defense projects in the 1970s. There may have been ""hundreds of specialized programming languages"" in existence that could be used, but just a handful actually predominated. Most ae"	wrp	10.66673	-7.709637	comment	12.0	76.0	1568143597	-5.2624555
14397001	Scale API (S16) helps engineers outs	Scale API (S16) helps engineers outsource microtasks	ayw	9.788101	-7.322693	story	12.0	93.0	1495487837	-13.888208
25455314	Zstandard v1.4.7	Zstandard v1.4.7	varbhat	10.620435	-7.4162426	story	12.0	211.0	1608211365	12.361433
25683420	Doing Symbolic Math with SymPy	Doing Symbolic Math with SymPy	signa11	10.320318	-7.2067485	story	12.0	131.0	1610103032	9.873832
26191201	When the same practices used to sell	When the same practices used to sell microservices get applied to modules, packages and libraries, there is no need to put a network in the middle to do the linker's job.But too many are eager to jump into distributed computing without understanding what they 	pjmlp	9.787998	-7.3455057	comment	12.0	72.5	1613727198	-13.814792
35884581	Matlab users should switch to Julia.	Matlab users should switch to Julia. It’s a real programming language, and better in many ways.I provide the option of Julia in my tutorials. Students are lazy, and don’t want to explore something new. Most of them stick with matlab.What prevents matlab users 	aborsy	10.181457	-7.9370294	comment	12.0	58.0	1683702649	10.621273
28822886	Software for Math Research	Software for Math Research	mathematically	10.26779	-7.2061157	story	12.0	64.0	1633908393	9.816842
29294267	Microservices Architecture on Google	Microservices Architecture on Google Cloud	hliyan	9.777612	-7.344951	story	12.0	70.0	1637470259	-13.762734
34231532	This has been my major criticism of 	This has been my major criticism of them; you cement the design of the app by creating an organizational structure around your software components.What happens if you need to redesign the architecture to meet new needs? That's right; it's not going to happen, 	strictfp	9.786569	-7.3598485	comment	12.0	41.5	1672755264	-13.821723
35018854	Unsigned int considered harmful for 	Unsigned int considered harmful for Java (2014)	networked	10.613116	-7.0179944	story	12.0	28.0	1677913263	-7.0075774
36742679	Does anyone use Ada in 2023? Back in	Does anyone use Ada in 2023? Back in college (~2008), I had a prof who was obsessed with it but AFAIK almost nobody used it even back them.	necroforest	10.614279	-7.7058673	comment	12.0	41.5	1689471469	-5.0763254
37273957	SwiftUI is convenient, but slow (202	SwiftUI is convenient, but slow (2022)	goranmoomin	10.466926	-7.8239555	story	12.0	64.0	1693065358	-10.850238
37295144	Lfortran: Modern interactive LLVM-ba	Lfortran: Modern interactive LLVM-based Fortran compiler	zaikunzhang	10.500757	-7.314703	story	12.0	165.0	1693234843	-8.280668
37430759	Towards a new SymPy	Towards a new SymPy	asmeurer	10.316286	-7.209986	story	12.0	141.0	1694159449	9.795332
24714488	Swift Algorithms	Swift Algorithms	Austin_Conlon	10.516359	-7.816786	story	12.0	270.0	1602117833	-10.847183
32002074	Here's a quote from https://grugbrai	Here's a quote from https://grugbrain.dev/ (discussed here on HN a while ago) which seems very appropriate:> Microservices: grug wonder why big brain take hardest problem, factoring system correctly, and introduce network call too. seem very confusing to grug	codethief	9.801329	-7.3580356	comment	12.0	70.0	1657119983	-13.797653
32263630	Swift Proposal: Move Function	Swift Proposal: Move Function	todsacerdoti	10.518904	-7.8040895	story	12.0	98.0	1659012855	-10.815926
19287809	GNU Octave 5.1.0	GNU Octave 5.1.0	lelf	10.165137	-7.78532	story	12.0	185.0	1551505786	10.316385
16220262	Ask HN: Is RSS making a real resurge	Ask HN: Is RSS making a real resurgence?	vfulco	9.782791	-7.3601794	story	12.0	34.0	1516767298	-13.817268
17745779	Dijkstra's in Disguise	Dijkstra's in Disguise	ColinWright	10.470236	-7.1648393	story	12.0	450.0	1534099545	-9.425301
21456821	Anyone who has managed to figure out	Anyone who has managed to figure out anything substantial about SwiftUI has done so purely through a labor of love.It's a really amazing system, but the sparseness of proper official documentation, Xcode bugs (like marking errors on a line far away from where 	Razengan	10.453924	-7.825902	comment	12.0	52.0	1572988796	-10.851579
21681773	Although I am a python guy, if I had	Although I am a python guy, if I had to bet on an alternative language here - its going to be Swift.The amount of evangelism money that Google is spending on Tensorflow is staggering. Its not just t-shirts, but an entire ecosystem - TensorBoard.dev, Tensorflow	sandGorgon	10.44536	-7.8200817	comment	12.0	45.0	1575289431	-10.887625
39140606	Dijkstra is a wonderful source of me	Dijkstra is a wonderful source of memorable quotes and hot takes from the early days of software.A sampling:> “The competent programmer is fully aware of the limited size of his own skull. He therefore approaches his task with full humility, and avoids clever 	rcbdev	10.605926	-7.1036806	comment	12.0	58.5	1706262186	-9.386907
30078405	> A benefit of microservices is that	> A benefit of microservices is that each team can be responsible for releasing their services independently and without coordination with other teams.Sounds almost sarcastic. How do you deliver API changes without alerting other teams?	nurettin	9.784532	-7.359262	comment	12.0	38.5	1643146447	-13.8186035
12810826	Common swifts can stay aloft for up 	Common swifts can stay aloft for up to 10 months	mhb	10.46149	-7.830505	story	12.0	122.0	1477606853	-10.84173
12249708	An open question independent of the 	An open question independent of the author:  What do people use Mathematica for that can't be done in R, SAS, Matlab, SPSS or Python libraries.Is it a great innovation that other tools have caught up with, or is it still getting a lot of use at the bleeding ed	mathattack	10.306766	-7.182043	comment	12.0	44.0	1470679720	9.919019
22609474	The Reconstruction of ZZT	The Reconstruction of ZZT	endgame	10.627173	-7.38296	story	12.0	141.0	1584474541	12.42739
33333155	We probably are close to the same ag	"We probably are close to the same age.  My dad was an engineer who also learned to program FORTRAN in the 70's.When I asked him a similar question his reply was (quotes are paraphrased): ""It was way too tedious to do.   You'd spend hours getting the cards just"	nervousvarun	10.448735	-7.378651	comment	12.0	65.0	1666716898	8.721766
33595520	Less than 20% of Twitter's microserv	Less than 20% of Twitter's microservices are needed for it to work	nstart	9.778497	-7.3498836	story	12.0	57.0	1668440223	-13.816446
26609060	Ada for the C++ and Java Developer [	Ada for the C++ and Java Developer [pdf]	pjmlp	10.656398	-7.7194233	story	12.0	152.0	1616924374	-5.163494
27027522	I wonder if there is a collection so	I wonder if there is a collection somewhere of practical uses of z3? (The simpler the better)I have also used z3 to solve puzzles and toy problems, and found it magical, but can't seem to find any use case for it in practical problems :(	Recursing	10.618084	-7.3873835	comment	12.0	30.5	1620060989	12.438179
37593398	Interoperability: Swift’s Super Powe	Interoperability: Swift’s Super Power	tambourine_man	10.51265	-7.816042	story	12.0	156.0	1695272476	-10.834476
14973182	And just today I was contemplating w	And just today I was contemplating writing my first native iOS and macOS app... I was looking at the options and decided to go native with Swift. I have never written Objective-C app and never used x-code for dev. But I have ~10 years of dev experience, mostly	ssijak	10.467664	-7.7842236	comment	12.0	62.5	1502309956	-10.831003
24187347	How to Start Using Microservices	How to Start Using Microservices	savovaleks	9.765444	-7.3519087	story	13.0	31.0	1597673371	-13.800228
13829985	Is Swift on the server a good idea? 	Is Swift on the server a good idea? I don't own (or plan to own) a Mac. Does Apple support cross-platform tooling? I honestly don't know, but given their history, my default assumption is to be skeptical.Why would you choose this over Go or Rust? (Rust is tota	echelon	10.574462	-7.871891	comment	13.0	48.5	1489074021	-10.868462
14498669	I'm thoroughly surprised to see that	I'm thoroughly surprised to see that Fortran is still being updated (with an upgrade still in the works for next year apperantly). I had no idea.I'll give it a shot as it seems interesting to at least have worked in it a bit, but I do wonder, where is Fortran 	Insanity	10.463923	-7.411916	comment	13.0	33.5	1496767532	8.744903
31263516	Jax vs. Julia (Vs PyTorch)	Jax vs. Julia (Vs PyTorch)	sebg	10.066322	-7.9663763	story	13.0	141.0	1651685809	10.636436
25730358	"Classic ""confused deputy"" problem. W"	"Classic ""confused deputy"" problem. What is the current recommendation in the modern microservices world to solve it?When user agent (UA) makes authenticated call to service A, which in turn makes call to service B:UA -[user auth]-> A -[????]-> Bhow to pass aut"	rossmohax	9.853956	-7.285433	comment	13.0	38.5	1610379646	-13.740995
26117764	It's a shame. I had high hopes at th	It's a shame. I had high hopes at the beginning that S4TF - and the investment in Swift from Google - would help Swift break out of the iOS ghetto and cement it as a mainstream language.Swift's a delightful language to use.  It has a lot of the nice things abo	skohan	10.508323	-7.843142	comment	13.0	106.5	1613159225	-10.810629
26401047	Phoenix is practically built with th	Phoenix is practically built with this idea in mind.My startup is built out of a single phoenix monolith. Only external dependency is postgres.Despite this, I've managed to completely avoid all the typical scaling issues of a monolith. Need a service or backgr	cultofmetatron	9.85538	-7.348619	comment	13.0	49.0	1615310535	-13.777673
29492662	Also, how come Swift has not taken o	Also, how come Swift has not taken off outside of Apple?	jay_kyburz	10.452173	-7.828027	comment	13.0	38.5	1639012389	-10.830643
29578712	Because there is no newly invented a	"Because there is no newly invented architecture called ""modular monolith"" - monolith was always supposed to be MODULAR from the start.Micro services were not an answer to monolith being bad. Something somewhere went really wrong with people's understanding and"	ozim	9.796142	-7.3501487	comment	13.0	54.5	1639666464	-13.792572
34184703	His final conclusion is that C has t	His final conclusion is that C has to go, just like COBOL, Fortran, and PL/I. I wonder how long it will take before C will be gone totally when you realize how much COBOL and Fortran are still around. Not so long ago, I came along a module for Python 'SciPy.in	fjfaase	10.630808	-7.3201756	comment	13.0	82.0	1672406124	8.885262
34467193	Open science depends on open tools! 	Open science depends on open tools! Octave is such a good resource for otherwise walled off code (that doesn't use newer matlab features). But I'm curious where octave is popular. Does anyone pick it over julia or python when starting a new project/research?I 	wwfn	10.197479	-7.793281	comment	13.0	73.5	1674316175	10.456578
37288446	Writing Linux Modules in Ada (2016)	Writing Linux Modules in Ada (2016)	slondr	10.66578	-7.719713	story	13.0	134.0	1693184724	-5.1357536
37291968	Very recently, Los Alamos National L	"Very recently, Los Alamos National Lab published a report An evaluation of risks associated with relying on Fortran for mission critical codes for the next 15 years [1]. In their summary, they write:<quote>
Our assessment for seven distinct risks associated wi"	reikonomusha	10.465551	-7.4052486	comment	13.0	73.0	1693217896	8.829945
19851934	Mathics – A free, light-weight alter	Mathics – A free, light-weight alternative to Mathematica	dvfjsdhgfv	10.290498	-7.204074	story	13.0	360.0	1557252586	9.861294
17500657	This is a classic case of not unders	This is a classic case of not understanding micro services and trying to fit a problem around a tool.At work, we have close to ~50 services(no one calls them microservices), but they do not suffer from this brittleness. We segregate our services based on langu	acroback	9.784728	-7.3562546	comment	13.0	76.5	1531246029	-13.8260765
17527706	I'm quite tired of everyone wanting 	"I'm quite tired of everyone wanting to build ""large scale systems"" and play at being Netflix. The truth of the matter is the vast vast majority of people will never need to do this with their project and instead will just end up making an expensive to maintain"	ris	9.793572	-7.3342147	comment	13.0	41.5	1531524588	-13.807743
21522464	OpenSwiftUI – An Open Source Re-Impl	OpenSwiftUI – An Open Source Re-Implementation of SwiftUI	rvz	10.460037	-7.826204	story	13.0	196.0	1573638370	-10.847708
17995031	SageMath – Open-Source Mathematical 	SageMath – Open-Source Mathematical Software System	lainon	10.253279	-7.20076	story	13.0	446.0	1537031299	9.784393
18272093	I desperately want to write my ML co	I desperately want to write my ML code in a statically typed language. I hope one of these Swift-based projects takes off. But I am worried that they will not treat Linux as a first-class platform.	blt	10.478903	-7.833968	comment	13.0	37.5	1540180985	-10.863669
18544021	I'm actively working on multiple For	I'm actively working on multiple Fortran projects, including one that's being written from scratch just in the last year in modern Fortran 2018.Modern Fortran looks completely different from the old school FORTRAN77 most people probably imagine. Gone are the d	wycy	10.464531	-7.4039884	comment	13.0	60.5	1543337855	8.808656
18882662	Language Server Protocol implementat	Language Server Protocol implementation for Swift and C-based languages	Kryptoshi	10.565584	-7.790175	story	13.0	232.0	1547205791	-10.742626
30078510	"The term ""Monolith"" was devised by p"	"The term ""Monolith"" was devised by people who wanted to brand microservices as newer and superior.It's almost as if in order to succeed these days you need to discredit and disparage your competition rather than simply having a better product, and that's why I"	winternett	9.785038	-7.3580823	comment	13.0	56.0	1643146966	-13.821925
30314189	What Fortran does better than C-like	What Fortran does better than C-like languages	Bostonian	10.493255	-7.40224	story	13.0	76.0	1644684851	8.844267
13015581	Katana – Modern Swift framework for 	Katana – Modern Swift framework for creating iOS apps, inspired by React/Redux	Feanim	10.48265	-7.8083415	story	13.0	162.0	1479835038	-11.150879
12190641	Looking back on Swift 3 and ahead to	Looking back on Swift 3 and ahead to Swift 4	dalbin	10.464374	-7.8274665	story	13.0	156.0	1469832723	-10.853148
12509533	You need to be this tall to use [mic	You need to be this tall to use [micro] services:* Basic Monitoring, instrumentation, health checks* Distributed logging, tracing* Ready to isolate not just code, but whole build+test+package+promote for every service* Can define upstream/downstream/compile-ti	rdsubhas	9.778724	-7.28427	comment	13.0	35.0	1473971149	-13.800801
35247759	Java Was Strongly Influenced by Obje	Java Was Strongly Influenced by Objective-C	lproven	10.504973	-7.7042427	story	13.0	55.0	1679413159	5.71491
23200236	> . It is hard to think that any Win	> . It is hard to think that any Windows programmer would prefer Swift as a language over .NET languages, as many commenters pointed out on Reddit, but a port of Swift UI on Windows could be a game changer.Everybody would jump to Swift [for new projects] if it	judge2020	10.465728	-7.8028464	comment	13.0	92.5	1589599493	-10.824402
26482250	I love actors, but baking them into 	"I love actors, but baking them into the language like this seems like the wrong approach to me.The language should provide all the necessary abstractions to create an isolated context. Actors can then ""just"" be a default abstraction provided by the standard li"	the_duke	10.608491	-7.825683	comment	13.0	45.5	1615925831	12.826904
38379893	Fortran 2023	Fortran 2023	hardmaru	10.454811	-7.408947	story	13.0	184.0	1700664390	8.801508
38380255	hmm, wonder which fields people are 	hmm, wonder which fields people are using fortran now ?did a search, ha- numerical weather prediction,- finite element analysis,- computational fluid dynamics,- geophysics,- computational physics,- crystallography and computational chemistry.	nittanymount	10.457066	-7.4196615	comment	13.0	55.5	1700665743	8.815621
38381215	I wonder exactly why that is, though	I wonder exactly why that is, though.  I imagine it has more to do with historical use of Fortran in those fields than anything that Fortran specifically has to offer.  There's no real reason to switch to another language, I suppose, except that you're limitin	ravenstine	10.483435	-7.3960247	comment	13.0	43.0	1700669907	8.823261
15264915	Scilab – Open source software for nu	Scilab – Open source software for numerical computation	zuron7	10.358489	-7.271535	story	13.0	139.0	1505574080	9.035416
15290200	Swift 4.0 Released	Swift 4.0 Released	runesoerensen	10.457183	-7.831092	story	13.0	386.0	1505872901	-10.853643
24773555	Has anybody legitimately had good ex	Has anybody legitimately had good experiences with microservices these days? Especially if you're not starting with a monolith that has done well? My experience at several companies, several projects, has been that what was actually just a poorly built, inflex	andrewstuart2	9.785495	-7.359949	comment	13.0	44.5	1602655082	-13.821687
25058886	The question is why in 2020 R still 	The question is why in 2020 R still uses a Fortran compiler?	Thaxll	10.4751835	-7.401041	comment	13.0	36.5	1605106740	8.765366
25252543	GNU Octave 6.1.0	GNU Octave 6.1.0	freddypaulo	10.162853	-7.786611	story	13.0	221.0	1606733716	10.246696
38651690	Swift was always going to be part of	Swift was always going to be part of the OS (2022)	harporoeder	10.458505	-7.8284984	story	13.0	182.0	1702623017	-10.831563
38802353	Reading the responses/comments in he	Reading the responses/comments in here, a question arises...Are things really that black and white as people here paint them - with monoliths unavoidably and necessarily becoming a tangled mess of spaghetti, and micro-services being the singular, only way to a	hooby	9.794528	-7.3546658	comment	13.0	40.5	1703832721	-13.822531
31850573	Julia ranks in the top 5 most loved 	Julia ranks in the top 5 most loved programming languages for 2022	logankilpatrick	10.239314	-7.952106	story	13.0	43.0	1655998457	10.858779
22226532	Swift Crypto	Swift Crypto	johns	10.492667	-7.834517	story	13.0	242.0	1580751247	-10.8319025
23999815	I think this is a rather strange way	I think this is a rather strange way of thinking.Fortran has been extensively used for nuclear weapons development. Let's stay away from Fortran!C was and is widely used in weapons control systems. Let's stop using C!Computers themselves were initially designe	nine_k	10.472992	-7.3989587	comment	14.0	71.5	1596125449	8.778879
20287486	SymPy makes math fun again	SymPy makes math fun again	maximilianroos	10.323419	-7.2139397	story	14.0	267.0	1561572208	9.883137
13929757	The Cracking Monolith: Forces That C	The Cracking Monolith: Forces That Call for Microservices	markoa	9.782253	-7.361748	story	14.0	107.0	1490178079	-13.820831
31314881	> 2 - Monoliths still make sense in 	> 2 - Monoliths still make sense in many contextsYes and I'd argue it makes sense in most contexts for small startups.Also, Monolith is sometimes synonymous with tangled spaghetti code but it doesn't have to be. If code is kept organized, it can be split into 	hu3	9.803936	-7.345774	comment	14.0	61.0	1652108240	-13.823525
26117590	Swift now being a 100% Apple-sponsor	Swift now being a 100% Apple-sponsored & owned project again makes me a bit nervous.Anyone knows if chris latner is at least using swift in his new company ? I have the feeling swift never really worked in the server side, data science is now officially a fail	bsaul	10.458832	-7.82392	comment	14.0	69.5	1613158325	-10.845904
26190832	A more common scenario I see is that	A more common scenario I see is that people start with a monolith that ends up inheriting all the conceptual debt that accumulates as a project evolves. All this debt builds up a great desire for change in the maintaining team.A champion will rise with a clean	ser0	9.785252	-7.351796	comment	14.0	96.5	1613723070	-13.826707
36476565	A love letter to Objective-C	A love letter to Objective-C	ingve	10.479506	-7.723512	story	14.0	62.0	1687762585	3.3799467
29553617	As a researcher in RL & ML in a big 	As a researcher in RL & ML in a big industry lab, I would say most of my colleagues are moving to JAX [https://github.com/google/jax], which this article kind of ignores.  JAX is XLA-accelerated NumPy, it's cool beyond just machine learning, but only provides 	tehf0x	10.035419	-7.9270244	comment	14.0	45.5	1639500004	10.538938
34346544	Is there anything genuinely innovati	"Is there anything genuinely innovative about Swift or is it just another ""cross-platform scripting language"" that I'll only see on 1 platform?The only reason I learned Powershell is because I have to admin for Windows.  At least Powershell is interesting for i"	thrwawy74	10.470354	-7.8192267	comment	14.0	45.5	1673479400	-10.851283
39441508	This is what I tell engineers. Micro	This is what I tell engineers. Microservices aren't a performance strategy. They are a POTENTIAL cost saving strategy against performance. And an engineering coordination strategy.Theoretically If you have a monolith that can be scaled horizontally there isn't	from-nibly	9.785437	-7.3539243	comment	14.0	61.5	1708438323	-13.827496
39682143	Byte-Sized Swift: Building Tiny Game	Byte-Sized Swift: Building Tiny Games for the Playdate	rauhul	10.500289	-7.8373675	story	14.0	89.0	1710263889	-10.8883505
36677828	So many companies shoot themselves i	So many companies shoot themselves in the foot chasing Google/Meta/Netflix backend architectures. If your developer count is in the 10s, you are committing professional negligence chasing a microservices architecture.	rapsey	9.786258	-7.3389864	comment	14.0	77.0	1689062555	-13.793997
24558794	Swift has this weird sort of ecosyst	Swift has this weird sort of ecosystem where Apple builds much of the platform in a very secret (most of the roadmap isn't shared), closed-source variant for its own OS. Then it has this open source version, with a very public compiler (roadmap IS shared) that	jarjoura	10.519504	-7.843893	comment	14.0	60.0	1600803077	-10.836661
24575780	How expensive is integer-overflow tr	How expensive is integer-overflow trapping in C++?	ingve	10.613003	-7.048787	story	14.0	103.0	1600927936	-7.000512
24586279	I must have a different idea of what	I must have a different idea of what “deep dive” means; this is simply going through the (relatively simple) motions of implementing a builder. “Deep dive”, to me, would look at how the compiler translates statements using these builders, for example, or rever	LeoNatan25	10.474952	-7.8245406	comment	14.0	39.0	1601004227	-10.83474
19167874	Could someone please point me in the	Could someone please point me in the direction of some solid documentation about deciding on when / how to split out microservices? So many of the cases I see them used are overkill and just make development and devops far more complicated for the scale of the	reustle	9.778358	-7.3561726	comment	14.0	42.5	1550195678	-13.8413725
16044732	Testing Microservices the sane way	Testing Microservices the sane way	alfiedotwtf	9.810479	-7.251566	story	14.0	160.0	1514781527	-13.808614
17260224	Fortran is still a thing (2017)	Fortran is still a thing (2017)	aphextron	10.452207	-7.4124413	story	14.0	63.0	1528405246	8.803454
18090991	Apple’s use of Swift in iOS 12	Apple’s use of Swift in iOS 12	glhaynes	10.460545	-7.8267035	story	14.0	184.0	1538107687	-10.823425
18422631	Zig: software should be perfect [vid	Zig: software should be perfect [video]	luu	10.6721525	-7.539571	story	14.0	218.0	1541874188	12.515127
12639612	Show HN: Dijkstra’s algorithm in the	Show HN: Dijkstra’s algorithm in the web browser with OpenStreetMap	ctcliff	10.45872	-7.160785	story	14.0	158.0	1475616268	-9.436235
13212566	Building a Production Server Swift A	Building a Production Server Swift App	ckurose	10.464908	-7.827552	story	14.0	137.0	1482165388	-10.836059
27702168	Fortran adds conditional expressions	Fortran adds conditional expressions	Bostonian	10.479888	-7.4035	story	14.0	158.0	1625162145	8.789377
12134648	I'll tell you the real reason behind	"I'll tell you the real reason behind microservices: developer fiefdoms. ""Faux-Specialization"". It allows developers to feel like they have control over certain pieces of infrastructure and run the gambit on their strategy for getting ever more increasing piece"	iamleppert	9.78629	-7.3563504	comment	14.0	49.5	1469075134	-13.812972
22754667	Swift on Mac OS 9	Swift on Mac OS 9	bdash	10.464617	-7.8274794	story	14.0	272.0	1585783990	-10.894715
22796017	Microservices [video]	Microservices [video]	abhisuri97	9.781146	-7.3427944	story	14.0	261.0	1586195546	-13.8008175
23017388	I think that the problem here was th	I think that the problem here was that they were fighting against Conway's Law: https://en.wikipedia.org/wiki/Conway%27s_law> Any organization that designs a system (defined broadly) will produce a design whose structure is a copy of the organization's communi	nickcw	9.781722	-7.360021	comment	14.0	71.0	1588154514	-13.826738
27181661	Who actually wants this? People want	Who actually wants this? People want good libraries for doing this with the languages they already use, not to have to make compromises just so they can have a microservice. Notice that the front page gives lots of examples of the servicey parts of the code, b	danellis	9.808125	-7.3408885	comment	14.0	40.0	1621245105	-13.828094
37699324	It took me a while to realize it, bu	It took me a while to realize it, but Jax is actually a huge opportunity for a lot of scientific computing.  Jax was originally developed as a more flexible platform for doing machine learning research.  But Jax's real superpower is that it bundles XLA and mak	antognini	10.020189	-7.9404783	comment	14.0	55.5	1695962286	10.58049
15041712	Concurrency in Swift: One possible a	Concurrency in Swift: One possible approach	spearo77	10.530733	-7.8201957	story	14.0	188.0	1503009495	-10.80996
23517269	The Curious Case of Swift's Adoption	The Curious Case of Swift's Adoption of Smalltalk Keyword Syntax	mwcampbell	10.559144	-7.807677	story	15.0	147.0	1592138642	-10.785481
34329913	Why Fortran is a scientific powerhou	Why Fortran is a scientific powerhouse	todsacerdoti	10.460264	-7.413813	story	15.0	74.0	1673377902	8.814117
36587875	Makie, a modern and fast plotting li	Makie, a modern and fast plotting library for Julia	simondanisch	10.184861	-7.9569936	story	15.0	260.0	1688484150	-11.312369
36676810	Meta’s Microservice Architecture [pd	Meta’s Microservice Architecture [pdf]	mfiguiere	9.785331	-7.3690376	story	15.0	115.0	1689054065	-13.818355
37468031	Develop with Cocoa for Apple devices	Develop with Cocoa for Apple devices without using Objective-C	quelsolaar	10.467323	-7.701242	story	15.0	130.0	1694443448	5.6675344
25257087	Dijkstra Was Wrong About 'Radical No	Dijkstra Was Wrong About 'Radical Novelty'	azhenley	10.474345	-7.1728134	story	15.0	77.0	1606760723	-9.463326
25441312	Is GNU Octave still relevant in the 	Is GNU Octave still relevant in the fields where it once was considered as a FOSS alternative to MATLAB?Since it seems researchers are migrating away from MATLAB itself to python (numpy/scipy).BTW, GNU Octave is fantastic! You can setup termux ([1]) in your an	ducktective	10.206783	-7.789538	comment	15.0	60.5	1608117515	10.453012
22258373	I frequently am disenchanted with th	I frequently am disenchanted with the new sugar the Swift project introduces. They add way too much surface area to the language by allowing too many ways to do a given thing. When you're looking at a particular line of code, it's very difficult to tell what e	sixstringtheory	10.497856	-7.812296	comment	15.0	65.5	1581011834	-10.821201
16014278	A pattern language for microservices	A pattern language for microservices	exploreshaifali	9.781976	-7.3624573	story	15.0	207.0	1514376310	-13.800416
16200390	I have recently been thinking about 	I have recently been thinking about doing microservices by simply having a shared MySql DB that all modules connect to.So for example one developer can create the backend and one developer can create the frontend. The codebases can be completely independent. O	TekMol	9.793283	-7.3580008	comment	15.0	45.0	1516573256	-13.810191
17692912	many people have tried to build open	many people have tried to build open source alternatives to mathematica for decades (sage, sympy) and it's just too developer intensive a task. there is so much work and not to mention IP in just Simplify[] that I don't know why people bother. no one that seri	mlevental	10.267853	-7.6364064	comment	15.0	54.0	1533496337	10.163798
21107072	Bounded Integer: Header-only C++ lib	Bounded Integer: Header-only C++ library replaces integers, adds explicit bounds	olvy0	10.630503	-7.0425735	story	15.0	144.0	1569765738	-7.028385
18255500	Most of the time, I've found a push 	Most of the time, I've found a push to microservices within an organization to be due to some combination of:1) Business is pressuring tech teams to deliver faster, and they cannot, so they blame current system (derogatory name: monolith) and present microserv	adamdrake	9.780605	-7.363233	comment	15.0	50.0	1539943191	-13.819325
18645582	Seemingly Impossible Swift Programs	Seemingly Impossible Swift Programs	wool_gather	10.486917	-7.8255696	story	15.0	179.0	1544421795	-10.859418
29757176	Speeding up my Advent of Code soluti	Speeding up my Advent of Code solution with Dijkstra's Algorithm	siraben	10.466951	-7.152395	story	15.0	94.0	1641032720	-9.438878
12926082	Clinton’s data-driven campaign relie	Clinton’s data-driven campaign relied heavily on an algorithm named Ada	ryan_j_naughton	10.648026	-7.708392	story	15.0	38.0	1478823326	-5.112923
12958451	"About two months ago I shared my ""pr"	"About two months ago I shared my ""primitive"" project and it was well received: https://news.ycombinator.com/item?id=12539109As a result, I decided to follow through and make more of it. So today I am announcing Primitive for macOS, now available on the Mac App"	fogleman	10.594097	-7.759434	comment	15.0	45.0	1479221668	10.025433
13430640	Go vs. Swift [pdf]	Go vs. Swift [pdf]	jakerockland	10.618377	-7.869596	story	15.0	166.0	1484776316	-10.828454
27744355	How big should a microservice be? (2	How big should a microservice be? (2013)	sidcool	9.782949	-7.3596163	story	15.0	54.0	1625547315	-13.816992
28477046	Clearing up Myths about Ada	Clearing up Myths about Ada	jayp1418	10.644419	-7.727782	story	15.0	138.0	1631240371	-5.0718303
28603794	Swift Regrets	Swift Regrets	tempodox	10.462935	-7.830422	story	15.0	173.0	1632222227	-10.855529
22315810	Questions to ask before adopting mic	Questions to ask before adopting microservices	ebineva	9.781687	-7.363503	story	15.0	135.0	1581576243	-13.821172
22725989	How does Monzo keep 1,600 microservi	How does Monzo keep 1,600 microservices spinning? Go, clean code, strong team	dustinmoris	9.778854	-7.3597407	story	15.0	39.0	1585554133	-13.8477545
38174614	Show HN: Patterns – Habit Tracker Ap	Show HN: Patterns – Habit Tracker App	degisner	10.454763	-7.825694	story	15.0	73.0	1699346794	-10.846234
38418449	Let's Write a Malloc (2014)	Let's Write a Malloc (2014)	yla92	10.6572895	-7.145785	story	15.0	129.0	1700962137	8.892393
15477823	"""Professors usually have this legacy"	"""Professors usually have this legacy code on hand (often code they wrote themselves decades ago) and pass this code on to their students. This saves their students time, and also takes uncertainty out of the debugging process.""This is so true. I'm a PhD studen"	thicknavyrain	10.464642	-7.405896	comment	15.0	90.5	1508084898	8.816975
13829509	Pushing Swift to the Server	Pushing Swift to the Server	bezalmighty	10.464501	-7.834613	story	16.0	144.0	1489070072	-10.867897
31478562	How Uber Uses Zig	How Uber Uses Zig	kristoff_it	10.664242	-7.553199	story	16.0	345.0	1653311522	12.535883
25891672	Octave Compass	Octave Compass	leephillips	10.162524	-7.7800126	story	16.0	134.0	1611493127	10.292185
26247052	Modules, Monoliths, and Microservice	Modules, Monoliths, and Microservices	kozmico	9.790376	-7.357773	story	16.0	322.0	1614146052	-13.833081
36372283	Make microservices look like monolit	Make microservices look like monoliths	friendly_chap	9.790938	-7.3589277	story	16.0	86.0	1687022793	-13.805242
37154939	Intel QuickAssist Technology Zstanda	Intel QuickAssist Technology Zstandard Plugin for Zstandard	ot	10.615365	-7.426245	story	16.0	144.0	1692226376	12.321929
22257889	What’s New in Swift 5.2	What’s New in Swift 5.2	ingve	10.463958	-7.8303595	story	16.0	126.0	1581009091	-10.863265
17248602	The rise and fall of Apple's Swift	The rise and fall of Apple's Swift	sandrobfc	10.469514	-7.822524	story	16.0	38.0	1528303076	-10.826579
17739272	On Apple's Love Affair with Swift	On Apple's Love Affair with Swift	doener	10.450454	-7.8362756	story	16.0	154.0	1533987080	-10.833552
39253944	Dijkstra's interview on Dutch TV (20	Dijkstra's interview on Dutch TV (2000)	pncnmnp	10.460283	-7.167991	story	16.0	139.0	1707077789	-9.498061
13204088	Swift: Challenges and Opportunity fo	Swift: Challenges and Opportunity for Language and Compiler Research [pdf]	Jerry2	10.504677	-7.818218	story	16.0	158.0	1482030296	-10.823039
12095967	Learning to code as a 30-year-old ki	Learning to code as a 30-year-old kid with Apple’s Swift Playgrounds	shawndumas	10.463482	-7.8157783	story	16.0	143.0	1468519149	-10.82658
22480904	Microservices – Combinatorial Explos	Microservices – Combinatorial Explosion of Versions	taleodor	9.792739	-7.362217	story	16.0	78.0	1583291618	-13.817356
13675844	Swift Changes Considered Harmful	Swift Changes Considered Harmful	tambourine_man	10.484442	-7.821488	story	17.0	47.0	1487441292	-10.8613205
35738763	Can Fortran survive another 15 years	Can Fortran survive another 15 years?	pjmlp	10.450059	-7.4159603	story	17.0	26.0	1682669394	8.816468
35836729	Software would be 50% better if ever	"Software would be 50% better if every developer understood Tesler's Law:""Complexity can neither be created nor destroyed, only moved somewhere else.""The drive to simplify is virtuous, but often people are blind to the complexity that it adds.Okay, so your micr"	paulddraper	9.784347	-7.3577743	comment	17.0	68.5	1683332574	-13.847146
36215357	SwiftData	SwiftData	koinedad	10.477834	-7.824367	story	17.0	190.0	1686069205	-10.874572
34335819	Swift Quit – Automatic App Quitting 	Swift Quit – Automatic App Quitting on Mac	alin23	10.469678	-7.774985	story	17.0	72.0	1673419729	-10.803454
37477279	Microservices are a solution to a so	Microservices are a solution to a social problem, not a technical one.A team of N engineers requires N² coordination. Large teams get mired in endless meetings, email, design reviews. Small teams are more effective, but struggle to maintain large systems.Split	synack	9.781505	-7.3553853	comment	17.0	81.5	1694497687	-13.819601
25424126	SwiftUI tutorials rewritten complete	SwiftUI tutorials rewritten completely	Austin_Conlon	10.464175	-7.824937	story	17.0	243.0	1607984186	-10.841337
38966342	I think the meaningful definition of	I think the meaningful definition of “dead language” is “nobody will begin a new code base in it any more, except as a hobby or research project”.Pretty likely that’s the case with COBOL, definitely Algol, PL/1, Pascal, and Prolog.Though uncommon or domain spe	gumby	10.672781	-7.3251204	comment	17.0	77.0	1705055355	-5.1298833
19383447	I don't think I blame the author at 	I don't think I blame the author at all. I'm not sure why you would start with microservices, unless you wanted to show that you could build a microservices application. Monoliths are quicker and easier to setup when you're talking about a small service in the	padobson	9.785935	-7.3578095	comment	17.0	125.5	1552509307	-13.810737
16411876	Norris Numbers – Walls you hit in pr	Norris Numbers – Walls you hit in program size (2014)	dhotson	10.488527	-7.360981	story	17.0	189.0	1519034122	8.855768
39299599	Rebuilding Netflix's video processin	Rebuilding Netflix's video processing pipeline with microservices	samaysharma	9.779548	-7.326279	story	17.0	197.0	1707380576	-7.1371417
27872596	Zig cc: A drop-in replacement for GC	Zig cc: A drop-in replacement for GCC/Clang (2020)	AlexeyBrin	10.672228	-7.2798653	story	17.0	301.0	1626613449	-7.5040507
37654904	Control Center on macOS is always re	Control Center on macOS is always re-rendering its SwiftUI causing 1% CPU load	atomlib	10.460217	-7.820937	story	17.0	221.0	1695706861	-10.853795
23843434	Rewriting Fortran Software in Rust	Rewriting Fortran Software in Rust	fanf2	10.649958	-7.663785	story	18.0	151.0	1594809794	8.679881
20235018	Forget monoliths vs. microservices: 	Forget monoliths vs. microservices: cognitive load is what matters	fancyfish	9.788525	-7.358814	story	18.0	430.0	1561051158	-13.827157
25970583	Language constraints aside, the real	Language constraints aside, the real world is not something that can be cleanly modeled without the notion of circular dependencies between things. Not very many real, practical activities can be truly isolated from other closely-related activities and wrapped	bob1029	9.807302	-7.3379025	comment	18.0	79.5	1612025379	-1.1335324
35959991	Optimization Without Derivatives: Pr	Optimization Without Derivatives: Prima Fortran Version and Inclusion in SciPy	zaikunzhang	10.549118	-7.3618126	story	18.0	169.0	1684234169	8.902989
36360726	Tangent but I'm holding out from lea	"Tangent but I'm holding out from learning Swift until I see how the ""Cross platform UI"" wars shake out. We've got at least Kotlin, Dart, and JavaScript all battling it out (via Kotlin Multiplatform, Flutter, React Native) to be the king of UI languages across "	zengid	10.47353	-7.795463	comment	18.0	77.0	1686937534	-10.840022
34231022	I am working on a project that uses 	I am working on a project that uses a microservice architecture to make the individual components scalable and separate the concerns. However one of the unexpected consequences is that we are now doing a lot of network calls between these microservices, and th	c-fe	9.790793	-7.358538	comment	18.0	61.5	1672752501	-13.815214
34467237	Octave seems great since it’s open a	Octave seems great since it’s open and let’s you run Matlab scripts.A bit offf topic, but is Matlab relevant still? I’ve heard it’s still in use a lot, but what’s the benefit of going with a walled off proprietary $$$ tool when you can use something like this?	sporedro	10.206107	-7.78844	comment	18.0	65.0	1674316474	10.446957
35108523	Last time I tried Octave it was seve	Last time I tried Octave it was several times slower than Matlab. Why use Octave instead of R, Python, or Julia? There is nothing Octave/Matlab can do that they can't. And anybody needing Matlab surely can afford to pay the licence fee?	BrandonS113	10.1879635	-7.819743	comment	18.0	73.0	1678545043	10.47793
24472063	The State of SwiftUI	The State of SwiftUI	tosh	10.466734	-7.8292084	story	18.0	137.0	1600101033	-10.822366
25047213	I’ve been picking at SwiftUI recentl	I’ve been picking at SwiftUI recently and run into this myself. You want to know how something works or how to use it, so you go to Apple’s documentation. “Here’s the type signature, have fun!”Thanks. But I was hoping something more than what Xcode’s autocompl	wlesieutre	10.451248	-7.826965	comment	18.0	88.5	1605023176	-10.828092
16668217	Is Ada a failed language?	Is Ada a failed language?	todd8	10.651222	-7.722755	story	18.0	63.0	1521917938	-5.1294093
12954432	Malloc Challenge	Malloc Challenge	codr4life	10.644977	-7.1448865	story	18.0	147.0	1479167663	8.885498
28509333	Fortran Web Framework	Fortran Web Framework	neatze	10.460699	-7.407653	story	18.0	272.0	1631525317	8.808097
23106155	Show HN: I built an open-source Swif	Show HN: I built an open-source SwiftUI app with an Airtable back end	kine	10.506087	-7.7755156	story	18.0	108.0	1588875083	-11.043309
14972637	Swift 5: start your engines	Swift 5: start your engines	mpweiher	10.459926	-7.8350024	story	18.0	274.0	1502306307	-10.85636
20320820	SwiftWebUI	SwiftWebUI	tambourine_man	10.45907	-7.840092	story	19.0	405.0	1561931931	-10.864007
31581727	All About Libpas, Phil's Super Fast 	All About Libpas, Phil's Super Fast Malloc	Jarred	10.659244	-7.131464	story	19.0	287.0	1654091144	8.910551
35801265	The skills gap for Fortran looms lar	The skills gap for Fortran looms large in HPC	rbanffy	10.466547	-7.4088216	story	19.0	84.0	1683115045	8.786872
34556370	30k lines of SwiftUI in production l	30k lines of SwiftUI in production later	serhack_	10.461869	-7.8185043	story	19.0	87.0	1674898263	-10.861701
32000598	How to Improve Your Monolith Before 	How to Improve Your Monolith Before Transitioning to Microservices	ahamez	9.788162	-7.3607655	story	19.0	235.0	1657114300	-13.825771
32168380	Naming microservices needs to be tri	Naming microservices needs to be trivial, not cryptic (2018)	arthurjj	9.779234	-7.354324	story	19.0	28.0	1658335309	-13.815138
19767454	What's Going Down at the Tiobe Index	What's Going Down at the Tiobe Index? Swift, Surprisingly	mpweiher	10.47241	-7.823503	story	19.0	70.0	1556396953	-10.8456
17499807	I've always said if the Linux kernel	I've always said if the Linux kernel can be a giant monolith, in C no less, than there's maybe 100 web applications in the world that need to be split into multiple services.I've worked with microservices a lot. It's a never-ending nightmare. You push data con	thermodynthrway	9.801721	-7.3336935	comment	19.0	109.0	1531241248	-13.799526
12493603	Swift Playgrounds – Learn to code on	Swift Playgrounds – Learn to code on your iPad	fred256	10.460511	-7.816562	story	19.0	296.0	1473815946	-10.829793
28061265	Is there any place for monoliths in 	Is there any place for monoliths in 2021? (2020)	clubdorothe	9.841833	-7.2689257	story	19.0	38.0	1628086679	-13.786629
33478611	I'm never sure why projects try to c	I'm never sure why projects try to claim themselves as a free alternative to Mathematica. For one, they never seem to reach anywhere near the polish and power of Mathematica. And secondly, is Mathematica really that expensive if you use it in your job/industry	bmitc	10.298465	-7.134816	comment	19.0	69.0	1667630362	9.857682
33498501	Reasons why Fortran is still used (2	Reasons why Fortran is still used (2021)	ngcc_hk	10.457881	-7.410131	story	19.0	119.0	1667775860	8.8197155
26935152	Swift on the Server (2020)	Swift on the Server (2020)	gozzoo	10.475141	-7.8314505	story	19.0	101.0	1619374956	-10.861606
37947772	Apple's use of Swift and SwiftUI in 	Apple's use of Swift and SwiftUI in iOS 17	ingve	10.457353	-7.830743	story	19.0	346.0	1697744929	-10.8601
38232930	Ask HN: What are good books on SW ar	Ask HN: What are good books on SW architecture that don't sell microservices?	dondraper36	9.786529	-7.358791	story	19.0	55.0	1699726778	-13.799475
23747133	SymPy - a Python library for symboli	SymPy - a Python library for symbolic mathematics	ogogmad	10.342885	-7.1995683	story	20.0	209.0	1594038322	9.871468
20791049	The Path to Dijkstra’s Handwriting (	The Path to Dijkstra’s Handwriting (2013)	bangonkeyboard	10.444391	-7.1550455	story	20.0	167.0	1566701322	-9.42245
14476001	Swift's Evolution	Swift's Evolution	carpeaqua	10.47604	-7.8287287	story	20.0	106.0	1496491445	-10.843434
30878926	Authorization in a Microservices Wor	Authorization in a Microservices World	zaplin	9.802332	-7.328995	story	20.0	253.0	1648825905	-13.77007
30906376	Eigen: A C++ template library for li	Eigen: A C++ template library for linear algebra	cpp_frog	10.648972	-7.119353	story	20.0	173.0	1649078812	-12.195275
35811826	I'm pretty convinced that microservi	I'm pretty convinced that microservices are one of those things that make sense 5% of the time and the other 95% is cargo culting.	bawolff	9.782096	-7.3588004	comment	20.0	113.5	1683181260	-13.846655
35914330	Thoughts on Swift and Objective-C (2	Thoughts on Swift and Objective-C (2022)	pketh	10.480518	-7.7951894	story	20.0	61.0	1683887657	-10.856341
36026875	I just... completely don't understan	I just... completely don't understand the appeal of Swift beyond it being Apple's in-house language.  I was excited for Foundation to become open-source.  Using a language you'll really only find in 1 environment is a negative.  I'm going to go feel ashamed fo	thrwawy74	10.469933	-7.8105636	comment	20.0	110.0	1684723560	-10.838725
36124025	Why is Swift so slow (timeout) in co	Why is Swift so slow (timeout) in compiling this code? (2022)	bluedino	10.504591	-7.7926707	story	20.0	129.0	1685449849	-10.81124
36538344	Ask HN: LLVM vs. C?	Ask HN: LLVM vs. C?	danielEM	10.625732	-7.0614977	story	20.0	38.0	1688144206	12.510207
29570871	Swift Playgrounds 4	Swift Playgrounds 4	tosh	10.469534	-7.812351	story	20.0	256.0	1639598484	-10.828045
34464512	GNU Octave	GNU Octave	MonkeyClub	10.162679	-7.7757573	story	20.0	313.0	1674284682	10.305463
24593028	Swift System Is Now Open Source	Swift System Is Now Open Source	NobodyNada	10.465487	-7.818881	story	20.0	500.0	1601060454	-10.819256
38978289	Apple hiring compiler developers for	Apple hiring compiler developers for improving Swift / C++ interoperability	pjmlp	10.494113	-7.786551	story	20.0	214.0	1705136380	-10.821472
32921910	System memory allocator free operati	System memory allocator free operation zeroes out deallocated blocks in iOS 16	ingve	10.632043	-7.028552	story	20.0	163.0	1663746203	8.679337
19384499	We’ve done exactly this - turned a t	We’ve done exactly this - turned a team of 15 engineers from managing one giant monolith to two teams managing about 10 or so microservices (docker + kubernetes, OpenAPI + light4j framework).Even though we are in the early stages of redesign, I’m already seein	mirkules	9.790096	-7.3380146	comment	20.0	94.5	1552515505	-13.800416
19708997	Should that be a microservice? Facto	Should that be a microservice? Factors to keep in mind	jbkavungal	9.7871065	-7.3631134	story	20.0	213.0	1555795994	-13.817665
16928169	Why data scientists should start lea	Why data scientists should start learning Swift	Ethcad	10.459963	-7.8320746	story	20.0	55.0	1524707200	-10.852233
39131522	Ask HN: Is it just me, or is softwar	Ask HN: Is it just me, or is software development crazy	tracker1	9.782516	-7.343826	story	20.0	21.0	1706201047	-13.806629
12993521	GNU Octave	GNU Octave	jordigh	10.161813	-7.7784367	story	20.0	415.0	1479564304	10.304128
12993856	Serious Question.....Matlab usage is	Serious Question.....Matlab usage is on a dramatic downswing from my vantage point in quantitative fiance.  I don't really know anyone under 40 who uses it anymore as one of their main tools.And I've never once seen anyone use octave as a substitute, I'm guess	chollida1	10.196639	-7.7978487	comment	20.0	83.0	1479569323	10.460109
13332781	Symbolic mathematics on Linux	Symbolic mathematics on Linux	leephillips	10.375554	-7.1521516	story	20.0	209.0	1483662106	9.832308
22511623	I liked that. I am am 68 and althoug	I liked that. I am am 68 and although I 'retired' last year (from managing a deep learning team at Capital One), I stay active. Currently I am writing a combined iOS and macOS app (so I needed to spin up on Swift and SwiftUI, and how to use built in support fo	mark_l_watson	10.468804	-7.7954435	comment	20.0	62.5	1583590759	-10.797003
22824007	IMO the first three lines of the pro	"IMO the first three lines of the program basically explain why academics and data programmers are never going to use Swift:Python:  import time
  for it in range(15):
     start = time.time()

Swift:  import Foundation
  for it in 0..<15 {
     let start = CFA"	sparrc	10.500805	-7.8169026	comment	20.0	91.5	1586449085	-10.829516
26580472	Honest Microservices	Honest Microservices	tate	9.77982	-7.3631096	story	20.0	93.0	1616681310	-13.81241
38010021	An aborted experiment with server Sw	An aborted experiment with server Swift	ibotty	10.47874	-7.823584	story	20.0	207.0	1698217238	-10.851446
14207752	Swift architecture at Uber	Swift architecture at Uber	tsycho	10.455298	-7.8285193	story	21.0	305.0	1493247163	-10.850092
24556245	Swift on Windows	Swift on Windows	gok	10.467684	-7.8108163	story	21.0	325.0	1600791074	-10.808891
32971599	Ask HN: Xcode users – how do you mak	Ask HN: Xcode users – how do you make it more usable?	isomorph	10.467401	-7.7945514	story	21.0	78.0	1664115647	-10.839971
19510074	Learning Ada	Learning Ada	weinzierl	10.633484	-7.7295313	story	21.0	176.0	1553758257	-5.09078
17278175	My misalignment with Apple's love af	My misalignment with Apple's love affair with Swift	mgrayson	10.4546385	-7.837266	story	21.0	139.0	1528639757	-10.845598
17686624	Swift: When Unused Code Is a Bug	Swift: When Unused Code Is a Bug	ileitch	10.54668	-7.795466	story	21.0	137.0	1533386229	-10.809941
21656891	Ask HN: How do you deal with atomici	Ask HN: How do you deal with atomicity in microservice environments?	c89X	9.788148	-7.3571486	story	21.0	116.0	1574945320	-13.810188
29833977	Fortran is easy to learn	Fortran is easy to learn	Bostonian	10.456211	-7.407455	story	21.0	100.0	1641522280	8.823683
12493822	Swift 3.0 Released	Swift 3.0 Released	olenhad	10.459766	-7.8277473	story	21.0	210.0	1473819389	-10.839906
28344885	Summary After Four Months with Ada	Summary After Four Months with Ada	thindil	10.611604	-7.7210317	story	21.0	286.0	1630221721	-5.1114244
33477793	Mathics: A free, open-source alterna	Mathics: A free, open-source alternative to Mathematica	memorable	10.30228	-7.2557163	story	21.0	561.0	1667620799	9.804151
38195856	Microservices aren't the problem. In	Microservices aren't the problem. Incompetent people are	thunderbong	9.785197	-7.356985	story	21.0	42.0	1699472591	-13.814202
20143277	Malloc Never Fails (2012)	Malloc Never Fails (2012)	KirinDave	10.646534	-7.11638	story	22.0	125.0	1560132164	8.881618
29034188	Swift Distributed Actors	Swift Distributed Actors	samcat116	10.5964985	-7.82515	story	22.0	168.0	1635470864	12.814061
34339218	I really do not understand the debat	I really do not understand the debate on monoliths and microservice anymore.Context matters so much. Should you have absolutely everything in 1 system. No. And I think no one thinks that anymore.Should you spilt your system into as many pieces as possible?No, 	sisve	9.790598	-7.3618345	comment	22.0	68.5	1673449662	-13.837063
32802129	Microservices – Please, Don’t (2016)	Microservices – Please, Don’t (2016)	h3mb3	9.783973	-7.359156	story	22.0	136.0	1662921618	-13.810343
17026215	Everything old is new again: Microse	Everything old is new again: Microservices	CrankyBear	9.783088	-7.359763	story	22.0	148.0	1525821544	-13.816565
13390539	Apple’s culture of secrecy wore down	Apple’s culture of secrecy wore down Swift creator and Xcode lead Chris Lattner	itg	10.456282	-7.818344	story	22.0	234.0	1484313239	-10.83564
26480922	Swift Evolution: Actors	Swift Evolution: Actors	mpweiher	10.495039	-7.820242	story	22.0	264.0	1615919626	12.793631
15700902	Google forked Swift	Google forked Swift	eonil	10.464516	-7.83452	story	22.0	118.0	1510710772	-10.849118
31328485	Microservices was always a solution 	Microservices was always a solution to the organisational problem of getting more developers working on a system at once. A lot of people working on one code base over the top of each other often causes problems and issues with ownership. The solution was serv	PaulKeeble	9.7859955	-7.3576975	comment	23.0	129.5	1652197527	-13.81706
34230748	I suspect that most people would be 	"I suspect that most people would be better off favoring inlined code over modules and microservices.It's okay to not organize your code. It's okay to have files with 10,000 lines. It's okay not to put ""business logic"" in a special place. It's okay to make merg"	surprisetalk	9.794568	-7.353716	comment	23.0	109.0	1672750359	-13.8360195
38964272	Ask HN: I've never met someone who u	Ask HN: I've never met someone who uses Mathematica, I imagine its users are even rarer outside the academic circles. I've met many who use Matlab, R, Python, Excel, etc.If you're using it, what are you using it for exactly? In what way is it irreplaceable by 	rayxi271828	10.294889	-7.219375	comment	23.0	74.0	1705037460	10.025533
15974483	Implementing Malloc: Students and Sy	Implementing Malloc: Students and Systems Programming [pdf]	ingve	10.654044	-7.143913	story	23.0	283.0	1513808994	8.901097
17538322	A Parable by Dijkstra (1973)	A Parable by Dijkstra (1973)	fpvsoop	10.43332	-7.187765	story	23.0	296.0	1531707673	-9.43993
21272098	Dapr: an open-source project to make	Dapr: an open-source project to make it easier to build microservices	gabrtv	9.7792015	-7.348253	story	23.0	180.0	1571242767	-13.774826
27492594	Disasters I've seen in a microservic	Disasters I've seen in a microservices world	gregdoesit	9.783215	-7.3616896	story	23.0	256.0	1623592306	-13.799975
37720806	-Werror Is not your friend (2017)	-Werror Is not your friend (2017)	todsacerdoti	10.655865	-7.1644855	story	23.0	125.0	1696115053	-7.009928
23755841	Building Domain Driven Microservices	Building Domain Driven Microservices	grzm	9.794437	-7.355726	story	24.0	160.0	1594098032	-13.763169
20344675	Matlab vs. Julia vs. Python	Matlab vs. Julia vs. Python	mbauman	10.183286	-7.948517	story	24.0	151.0	1562164960	10.678133
35597622	Forgive my ignorance, but what exact	"Forgive my ignorance, but what exactly does swiftkey offer over the usual keyboard?  A quick google seems to bring up ""better predictive text"" and ""better multi-language support"" - is that it?"	Daneel_	10.464763	-7.814026	comment	24.0	72.0	1681715391	-10.864257
35834037	Monoliths are not dinosaurs	Monoliths are not dinosaurs	davidrupp	9.848912	-7.2450514	story	24.0	266.0	1683314884	13.421255
29379926	Some thoughts on microservices	Some thoughts on microservices	filipn	9.785635	-7.3578672	story	24.0	146.0	1638194385	-13.812963
24615916	Zig's New Relationship with LLVM	Zig's New Relationship with LLVM	todsacerdoti	10.647838	-7.449539	story	24.0	446.0	1601296344	-9.274811
25171532	Should I use SwiftUI in production? 	Should I use SwiftUI in production? A code-to-code comparison to help you decide	danielwbean	10.457847	-7.8294115	story	24.0	94.0	1605982730	-10.87752
22301652	Swift Playgrounds for macOS	Swift Playgrounds for macOS	rock_artist	10.466679	-7.822628	story	24.0	434.0	1581448786	-10.811711
20930652	Why Ada Is the Language You Want to 	Why Ada Is the Language You Want to Be Programming Your Systems With	fogus	10.657019	-7.721116	story	25.0	301.0	1568135949	-5.1130066
25620796	I’m curious, are there any Octave us	I’m curious, are there any Octave users on HN? What are your use cases, in particular different to just an open-source Matlab-like clone? Why Octave not Python?I’m curious, not saying either option is bad.	rich_sasha	10.1827545	-7.8069763	comment	25.0	92.5	1609667705	10.466848
26451966	Why are most climate models in Fortr	Why are most climate models in Fortran?	JohannMac	10.453968	-7.4254127	story	25.0	119.0	1615685869	8.815396
36281245	Mojo is a much better “Objective-C w	Mojo is a much better “Objective-C without the C” than Swift ever was	mpweiher	10.481866	-7.77726	story	25.0	160.0	1686490659	10.749472
29619207	Apple’s use of Swift and SwiftUI in 	Apple’s use of Swift and SwiftUI in iOS 15	ingve	10.452731	-7.8353357	story	25.0	248.0	1639953450	-10.89133
34944058	Wolfram Language and Mathematica Fre	Wolfram Language and Mathematica Free on Every Raspberry Pi	punnerud	10.382819	-7.0922356	story	25.0	297.0	1677401083	7.258084
39537448	SymPy: Symbolic Mathematics in Pytho	SymPy: Symbolic Mathematics in Python	tosh	10.341163	-7.193389	story	25.0	258.0	1709126248	9.847633
37291504	Fortran	Fortran	qsort	10.4585285	-7.408192	story	25.0	290.0	1693213300	8.802568
37477361	I am one of the biggest proponents o	I am one of the biggest proponents of microservices.  I helped build the platform at Netflix, I've literally traveled around the world extolling the virtues of microservices.But I also advise a lot of startups, and you know what I tell them nearly every time?B	jedberg	9.804331	-7.355431	comment	25.0	100.5	1694498685	-13.814386
13226174	A Fortran Web Framework	A Fortran Web Framework	da02	10.455666	-7.405399	story	25.0	165.0	1482285000	8.820587
13478234	Ask HN: Swift or Objective-C for new	Ask HN: Swift or Objective-C for new iOS app in 2017?	beacham	10.459283	-7.8329835	story	25.0	26.0	1485315287	-10.895614
28195580	Zx 3.0	Zx 3.0	medv	10.632951	-7.385791	story	25.0	189.0	1629096711	12.430042
33585104	Build the Modular Monolith First	Build the Modular Monolith First	kiyanwang	9.867708	-7.2423077	story	25.0	144.0	1668360234	13.420665
23511183	SageMath – Open-Source Mathematical 	SageMath – Open-Source Mathematical Software System	gnramires	10.2503605	-7.2020264	story	26.0	380.0	1592070512	9.745214
23937005	Domain-Oriented Microservice Archite	Domain-Oriented Microservice Architecture	amadk	9.783793	-7.358515	story	26.0	130.0	1595578453	-13.76661
36026038	Apple is rewriting Foundation in Swi	Apple is rewriting Foundation in Swift	hnand	10.442909	-7.8252397	story	26.0	261.0	1684715479	-10.851603
25299598	Monoliths as a Service	Monoliths as a Service	gdeglin	9.803556	-7.3560734	story	26.0	113.0	1607062954	-13.824287
38793015	It's not microservice or monolith; i	It's not microservice or monolith; it's cognitive load	DevOpsy	9.788573	-7.3573437	story	26.0	218.0	1703768162	-13.8243
16166645	Ask HN: How do you keep track of rel	Ask HN: How do you keep track of releases/deployments of dozens micro-services?	vladholubiev	9.785762	-7.3456516	story	26.0	108.0	1516181613	-13.814678
12581250	IBM says Swift is ready for the ente	IBM says Swift is ready for the enterprise	okket	10.446376	-7.818242	story	26.0	176.0	1474893329	-10.796907
13205899	Why physicists still use Fortran	Why physicists still use Fortran	urs	10.456882	-7.413506	story	26.0	205.0	1482071536	8.841628
27571019	Julia: Faster than Fortran, cleaner 	Julia: Faster than Fortran, cleaner than Numpy	cs702	10.274328	-7.891082	story	26.0	281.0	1624203269	10.613438
12133670	The End of Microservices	The End of Microservices	reimertz	9.786669	-7.362932	story	26.0	258.0	1469061073	-13.814432
37698740	JAX – NumPy on the CPU, GPU, and TPU	JAX – NumPy on the CPU, GPU, and TPU	peter_d_sherman	10.033741	-7.9141207	story	26.0	276.0	1695955662	10.456548
15474891	Micro Front ends – extending the mic	Micro Front ends – extending the microservice idea to front end development	fagnerbrack	9.822415	-7.345945	story	26.0	114.0	1508023414	-13.799984
13655125	Whither Swift?	Whither Swift?	tambourine_man	10.468056	-7.8430414	story	27.0	102.0	1487190803	-10.81252
29999191	Starting with microservices	Starting with microservices	feross	9.784543	-7.359559	story	27.0	146.0	1642622586	-13.813444
12572859	Microservices – Please, don’t	Microservices – Please, don’t	JensRantil	9.783294	-7.3606873	story	27.0	123.0	1474754981	-13.817537
13167188	Microservices? Please Don't	Microservices? Please Don't	kellet	9.780771	-7.359209	story	27.0	192.0	1481641129	-13.816033
30942146	rand() may call malloc()	rand() may call malloc()	adunk	10.636052	-7.1491294	story	28.0	212.0	1649321257	8.891899
26302344	Giving Ada a Chance	Giving Ada a Chance	jayp1418	10.636635	-7.723739	story	28.0	177.0	1614603678	-5.068904
37075730	Show HN: Applite – Clean Homebrew fr	Show HN: Applite – Clean Homebrew front end app for macOS built with SwiftUI	milanvarady	10.464671	-7.810778	story	28.0	280.0	1691673237	-10.882301
13960107	Modules vs Microservices	Modules vs Microservices	swah	9.781052	-7.3573112	story	29.0	278.0	1490525419	-13.8337
31202292	The Brilliance of “nil” in Objective	The Brilliance of “nil” in Objective-C	ingve	10.659476	-7.7387867	story	29.0	91.0	1651216484	5.6578856
34940505	SymPy makes math fun again	SymPy makes math fun again	okaleniuk	10.327569	-7.208175	story	29.0	323.0	1677359390	9.871377
16557644	Ask HN: What is your best way to lea	Ask HN: What is your best way to learn a new programming language?	deadcoder0904	10.54052	-7.7790675	story	29.0	58.0	1520669057	-10.830976
18997302	Apple is patenting Swift features	Apple is patenting Swift features	maxdesiatov	10.461278	-7.80941	story	30.0	580.0	1548418195	5.5756545
19129641	Why Swift for TensorFlow?	Why Swift for TensorFlow?	nnd	10.4351425	-7.8384495	story	30.0	212.0	1549828709	-10.846066
16200703	"I think ""microservices"" is so appeal"	"I think ""microservices"" is so appealing because so many Developers love the idea of tearing down the ""old"" (written >12 months ago), ""crusty"" (using a language they don't like/isn't in vogue) and ""bloated"" (using a pattern/model they don't agree with) ""monolit"	shitloadofbooks	9.786017	-7.3510528	comment	30.0	165.5	1516576949	-13.823256
29729931	You can't copy code with memcpy	You can't copy code with memcpy	hyperrail	10.664226	-7.0445056	story	30.0	423.0	1640811434	-7.1770964
22413355	SwiftUI Defaults Considered Harmful	SwiftUI Defaults Considered Harmful	Aqua_Geek	10.470767	-7.823569	story	30.0	185.0	1582640224	-10.881476
14778685	Monolith First (2015)	Monolith First (2015)	levosmetalo	9.846002	-7.259067	story	30.0	430.0	1500149448	13.435536
35597152	Microsoft deleted the public support	Microsoft deleted the public support forums for SwiftKey	luu	10.451179	-7.821646	story	30.0	313.0	1681709472	-10.841899
29577336	I wonder why no one ever talks about	I wonder why no one ever talks about architectures in the middle between those two - modular monoliths.The point in time where you're splitting your codebase up in modules (or maybe are a proponent of hexagonal architecture and have designed it that way from t	KronisLV	9.798092	-7.3452287	comment	30.0	120.5	1639656066	-13.820802
34231020	Microservices, while often sold as s	Microservices, while often sold as solving a technical problem, usually actually solve for a human problem in scaling up an organization.There's two technical problems that microservices purport to solve: modularization (separation of concerns, hiding implemen	barrkel	9.786063	-7.3583393	comment	30.0	190.5	1672752486	-13.812255
32994937	Real World Micro Services	Real World Micro Services	asim	9.781969	-7.3595614	story	30.0	189.0	1664285125	-13.812674

id	label	hovertext	author	x	y	type	relevance	size	year	umap1d
33197015	Forth is still interpreted. Forth's 	Forth is still interpreted. Forth's genius is that it's interpreter is so tiny that it fits as a runtime.	terminalcommand	15.0325165	-3.830714	comment	3.0	23.0	1665698484	6.220543
26496339	> Some people argue Janet is not rea	> Some people argue Janet is not really a lisp.Out of curiosity: on what basis?Janet is definitely a Lisp, although it's not the (Common) Lisp.	klibertp	15.14721	-3.9408617	comment	3.0	14.5	1616012688	-10.523881
26653412	Lisp totally works for scientific/st	Lisp totally works for scientific/statistical computing! Julia, for example, is commonly called a Lisp. And S/R/&c. are also very lispy. As is APL, to a lesser extent.	snicker7	15.140617	-3.9456306	comment	3.0	11.5	1617226239	-10.422919
26707569	SBCL's great. So is CLISP. GNU has t	SBCL's great. So is CLISP. GNU has the best Lisp going in 2021.	Klwohu	15.128006	-3.954295	comment	3.0	11.0	1617678472	-10.410493
14726429	> Can somebody comment on the status	> Can somebody comment on the status of Lisp in 2017?Sadly the only Lisp environments that resemble in any way the old Lisp Machine or Xerox PARC ones are comercial.Emacs is kind of ok with SLIME, but it still isn't the same as using Allegro Common Lisp[0] or 	pjmlp	15.134629	-3.941868	comment	3.0	17.0	1499536958	-10.431902
14726608	The Lisp Works page is kind of cute,	The Lisp Works page is kind of cute, but in bad way as far as marketing goes, at least in my opinion.The IDE screenshots for Windows show off Windows XP.	oblio	15.174527	-3.91531	comment	3.0	11.5	1499539011	-10.451623
14817720	>My point was that I have never seen	">My point was that I have never seen any evidence that such an idea was ever called Lisp.I'm not the only one who has this view.From Paul Graham, http://www.paulgraham.com/rootsoflisp.html""There were already models of computation, of course - most notably the "	doall	15.135487	-3.9568465	comment	3.0	18.5	1500605418	-10.382219
14861619	>In the paper McCarthy mentions also	">In the paper McCarthy mentions also:
>'6. A ``program feature'' allows programs containing assignment and go to statements in the style of ALGOL.'
>'7. Computation with floating point numbers is possible in the system'This part is about the status of LISP I a"	doall	15.125554	-3.9628437	comment	3.0	15.0	1501114988	-10.399349
14997223	There is no language definition or i	"There is no language definition or implementation called ""LISP"". Both Scheme and OCaml lexically capture variables by value, as if they have been passed in as arguments. This is not how it works in e.g. Python."	willtim	15.13433	-3.9586039	comment	3.0	12.0	1502530674	-10.434538
14937424	The Evolution of Lisp (1993) [pdf]	The Evolution of Lisp (1993) [pdf]	tosh	15.151763	-3.9332871	story	3.0	103.0	1501961292	-10.4510565
15055977	Scheme allows practically infinite p	Scheme allows practically infinite possibility of language extension due to its syntax (this is same with lisp and scheme, but I prefer scheme due to its lexical scoping, a minimal standard like R7RS etc). (Note that I'm a big advocate of Python-C hybrid progr	fizixer	15.147491	-3.9230602	comment	3.0	10.5	1503181500	-10.446012
15057309	Lisp is a beautiful language (or, to	Lisp is a beautiful language (or, to be more precise, set of languages). It is absolutely essential to a computer science education.It also gets unwieldy when programs get complex.	Fej	15.1435585	-3.9472542	comment	3.0	18.0	1503212653	-10.44297
15057849	No, it shouldn't be. Lisp is not pra	No, it shouldn't be. Lisp is not practical(try to prove it otherwise, there's no evidence) and it's only a thing now because some ppl likes its esoteric syntax. It's way too overhyped.	sds2	15.133767	-3.9581075	comment	3.0	11.0	1503225637	-10.456466
15081187	> You don't need database providers 	> You don't need database providers to be integrated in the language spec. Not in CL and not in many other successful languages.Many people underestimate how useful Perl DBI, JDBC, ODBC, Python DB-API, ADO.NET are.Which is why, in spite of all design flaws, ev	pjmlp	15.071415	-4.0148215	comment	3.0	10.5	1503493673	10.036692
12584347	That's not very Lisp-like.Personally	That's not very Lisp-like.Personally I really don't like it when files are modules. For me that's orthogonal.	lispm	15.107908	-3.9629	comment	3.0	11.0	1474914548	-10.434772
12617408	Now see, that's much clearer. From t	Now see, that's much clearer. From the perspective of someone who knows Lisp, perhaps. I find it very confusing. Moreover, you are using an example from a tutorial, which is meant to explain how things work, not to show what the best way to write some macro is	flyx86	15.0878315	-4.012922	comment	3.0	14.5	1475320977	-10.35518
12654835	They were also really expensive, and	They were also really expensive, and there have always been people who hated Lisp for the syntax.	qwertyuiop924	15.143086	-3.941991	comment	3.0	18.5	1475778570	-10.4604225
12657896	Including Bayes in the standard libr	Including Bayes in the standard library is cool, but newLISP must be one of the slowest LISP interpreters out there.Its certainly useable - usually on par with Python... But picolisp, Gambit, SBCL are more on par with D or Rebol.So when newLISP claims to be gr	shakna	15.125615	-3.9493887	comment	3.0	14.0	1475810256	-10.387178
12657960	For me Picolisp is a very nice Lisp 	For me Picolisp is a very nice Lisp implementation; easy to understand, enthused founder who has been at it since the 80s. Which is amazing in it's own right. And a solid community. Won't go away any time soon. Gambit is the same age, but I find the source cod	tluyben2	15.135052	-3.9251924	comment	3.0	11.0	1475811297	-10.385645
12660150	> why should we suddenly start writi	"> why should we suddenly start writing Lisp? The language is older than C, for god's sake.If so many ""modern"" languages still copy features from Lisp (hello C++) then why not use the real thing?All those nice ""new"" features which Python and C++ are praised for"	progman	15.119176	-3.964876	comment	3.0	12.0	1475843965	-10.389418
12704555	> The language is not beautiful, it 	> The language is not beautiful, it is full of signature and func naming inconsistencies [1] it inherited from C.It was consistent with the thing it inherited most of it's syntax from so that makes it inconsistent?> The devs are ultra-conservative and stubborn	gravypod	15.118289	-3.978155	comment	3.0	10.5	1476396961	10.279374
12799836	My favorite quote:    We feel that t	"My favorite quote:    We feel that the time for such radical changes 
    to Common Lisp passed, and it would be the job 
    of future Lisp designers to take lessons from 
    Common Lisp and Scheme to produce an improved 
    Lisp. 

I don't know if it is tr"	taeric	15.141398	-3.9531276	comment	3.0	18.0	1477511419	-10.485275
27621706	There’s a small, somewhat quiet, but	There’s a small, somewhat quiet, but very welcoming and very vibrant community of Common Lisp games developers. #lispgames on Libera is where many of them hang out.There are a few people who are trying their darndest to build and support libraries for graphics	reikonomusha	15.151668	-3.9309158	comment	3.0	11.0	1624558461	-10.435077
27682645	> Written in a memory-safe-ish langu	"> Written in a memory-safe-ish language that a plebeian like me can understand, review and contribute to, like rust and go or even lua or V, but please no lisp, elisp or haskell.Would ""a plebeian like them"" care to explain why they don't like Lisp? Lisp as I s"	qwerty456127	15.133343	-3.981098	comment	3.0	11.0	1625006158	-10.454776
27805701	>Lisp doesn’t really have many, if a	>Lisp doesn’t really have many, if at all, super weird concepts that need months of thinking about in order to understand.I dunno, using a DSL for linked lists as the only syntax construct is pretty radical. CAR/CDR and CONS pair dot notation must feel pretty 	dTal	15.121559	-3.9726615	comment	3.0	17.5	1626049933	-10.395181
35445547	Review of 8 Common Lisp IDEs Which O	Review of 8 Common Lisp IDEs Which One to Choose? [EN Subs]	svetlyak40wt	15.14633	-3.9404345	story	3.0	13.0	1680640525	-10.44519
22315948	>Garbage collection was developed fo	">Garbage collection was developed for Lisp. That way, any language with GC borrows directly from Lisp.The English language borrows a lot of things directly from other languages. That doesn't mean it is ""a dialect of"" any of them, which was the claim being obje"	yesenadam	15.141252	-3.9513705	comment	3.0	16.5	1581578364	-10.45884
22414582	The above post didn't say unpopular,	"The above post didn't say unpopular, they said 'underpopular'.  While that's a bit of a neologism, it just implies that it's less popular than it should be.Also: ""Lisp is the most fun you can have programming, yeah from the start,"" while subjective, is by most"	kick	15.145404	-3.9451048	comment	3.0	11.0	1582648712	-10.493889
22414155	First off, Lisp is chronically POPUL	First off, Lisp is chronically POPULAR not unpopular. (It is critically unpopular.) Secondly, Lisp is the most fun you can have programming, yeah from the start. You apparently had either a very poor teacher, or taught yourself Lisp ... same thing.	abrax3141	15.147132	-3.9427834	comment	3.0	13.0	1582646147	-10.500056
22582754	C is not good. At least, not in the 	C is not good. At least, not in the way parent means “good”.C is this brilliant awful crazy-successful hack, yak-shaved into existence just to bootstrap an entire brand new OS (UNIX) in record time; subsequently Peter-Principled into domains it really has no b	hhas01	15.12441	-3.9656022	comment	3.0	21.5	1584270507	-10.410225
15187653	I don't have to explain why Lisp fai	I don't have to explain why Lisp failed to take off. I just have to explain why C did, because network effects are more significant than language advantages. This is my central thesis.I don't think awareness of Lisp was evenly distributed among people developi	fusiongyro	15.128874	-3.9563937	comment	3.0	18.5	1504737002	-10.375165
15116842	Lispyville: a lisp-editing environme	Lispyville: a lisp-editing environment suited towards evil users	pmoriarty	15.127154	-3.946718	story	3.0	67.0	1503931594	-10.401864
15211704	"""you've been stacked""-- HP calc owne"	"""you've been stacked""-- HP calc ownerLast year I finally read the whole manual (as a teen I only used the symbolic differentiator, most useful and magical to my brain at the time). Since I learned about Lisp, so RPN programming features appealed to me. I reali"	agumonkey	15.062362	-3.9638886	comment	3.0	12.5	1505041763	7.224562
15251144	A real shame that Forth wasn't inclu	A real shame that Forth wasn't included in the tested languages.  Chuck Moore has been an advocate for more energy efficient computation for a while now.	mtm	15.009033	-3.8156083	comment	3.0	12.0	1505414641	-5.9747963
15257610	> }))}`] } }Yet only things called L	"> }))}`] } }Yet only things called Lisp ever get flamed for this.If it is just )))))) you only have to just auto-repeat ) until the editor indicates a match to the one you are trying to close. It's only ""how many you owe"", not ""what kinds do you owe, in what o"	kazinator	15.124404	-3.9664338	comment	3.0	11.0	1505487146	-10.363669
15208041	Numbers and tagged pointers in early	Numbers and tagged pointers in early Lisp implementations	jsnell	15.131641	-3.9538217	story	3.0	89.0	1504977905	-10.398509
15359678	Ever since I found out about Lisp ma	Ever since I found out about Lisp machines I've been a bit obsessed with them. When I got the leaked distribution of Symbolics Genera going in Linux I felt like I was in possession of a crashed UFO. The user experience of the Listener, with its rich output (al	richardjdare	15.1190815	-3.9490597	comment	3.0	10.5	1506623811	-10.325029
15387549	TXR Lisp, a dialect I created:  $ tx	"TXR Lisp, a dialect I created:  $ txr
  This is the TXR Lisp interactive listener of TXR 185.
  Quit with :quit or Ctrl-D on empty line. Ctrl-X ? for cheatsheet.
  1> (set a.b 3)
  ** warning: (expr-1:1) qref: symbol b isn't the name of a struct slot
  ** warn"	kazinator	15.101402	-3.9940186	comment	3.0	12.0	1506975554	-10.354286
15397195	Yes, Chez & Stalin are the fastest i	Yes, Chez & Stalin are the fastest in these benchmarks, which seems to match what the community usually answers when asked about quick implementations.Sadly Stalin is unmaintained. Its whole program optimization techniques were really advanced. I remember it e	nextos	15.164723	-3.914279	comment	3.0	13.0	1507074404	-10.440052
15407571	How can you call lisp an inaccessibl	How can you call lisp an inaccessible language? It has less syntax than anything else. It is as simple as a language gets.	edem	15.139891	-3.9494052	comment	3.0	11.5	1507193022	-10.457267
15417949	I've read this book, and what I love	I've read this book, and what I love about it is that it really brings to mind the programming books of my youth, when nobody would argue that programming should be fun.It's goofy, has bad jokes, and you learn something.Having said that, the code style seemed 	midgetjones	15.1494	-3.9306152	comment	3.0	26.5	1507306578	-10.3963
15418396	A common complaint about Lisp code i	"A common complaint about Lisp code in general is that programmers tend to write code that is idiosyncratic [ED: I previously used the word ""idiomatic"" here in reply to the OP but was conflating terms, making this post rather irrelevant but at least it provoked"	dwringer	15.137405	-3.9567504	comment	3.0	16.0	1507309842	-10.463618
15419668	This book comes up in #lisp on freen	This book comes up in #lisp on freenode every so often, and the channel is generally split on whether or not to recommend it.  I generally do.It's fun and lighthearted.  Using games as a medium to teach the language is something some people enjoy, and is a lot	stevelosh	15.147028	-3.9362102	comment	3.0	13.5	1507317989	-10.425191
15420134	>The main issue people have with the	>The main issue people have with the book is that it uses CLISP-specific code in a few places.This makes sense for a tutorial book, since CLISP is easy to install, very small to download (compared to SBCL), and is a fully featured (ANSI compliant) implementati	flavio81	15.126856	-3.9575286	comment	3.0	11.0	1507321491	-10.423527
15466940	Does this roughly offer the same ben	Does this roughly offer the same benefits that the old lisp machines provided?I've never used one, but have heard people rave about how productive they were on them.	tyingq	15.144942	-3.9391403	comment	3.0	26.0	1507911396	-10.466103
15525638	Parentheses aren't an issue if you w	Parentheses aren't an issue if you write Lisp in Emacs.	sn9	15.097959	-3.9982445	comment	3.0	13.0	1508657831	-10.333834
15560418	"I disagree with the ""single ... lang"	"I disagree with the ""single ... language"" right off the bat before any deeper considerations.Lisp is a great collection of design patterns for making languages.> The key was not so much “Lisp” but the kinds of thinking that this kind of representational approa"	kazinator	15.136417	-3.9572587	comment	3.0	12.5	1509035673	-10.458065
15572026	And these operating systems in both 	And these operating systems in both Smalltalk and Lisp were both better and easier to write than the standard ones of today.Look, I love Lisp as much as the next hacker, but is Alan Kay for real?  Where's the Lisp equivalent to this C code?https://github.com/d	xenophonf	15.119383	-3.9481118	comment	3.0	12.5	1509136578	-10.3332615
38272806	> I used an S-expression syntax, ins	> I used an S-expression syntax, instead of designing my own syntax and writing a parser for it.> This meant I was able to experiment with the semantics and virtual machine of the language, instead of worrying over what keyword to use for function definitions.	matheusmoreira	15.114731	-3.9823308	comment	3.0	11.5	1700017278	-10.382649
38319676	Emacs Lisp is nobody’s favorite lisp	Emacs Lisp is nobody’s favorite lisp, yet it is the most widely used lisp by a wide margin.Emacs proves that having a free and open source cross platform GUI editor where you can introspect and modify the editor’s state, and where a visual step debugger and lo	BaculumMeumEst	15.07851	-3.9746406	comment	3.0	12.0	1700316066	-10.366225
38399899	I think people came to the conclusio	I think people came to the conclusion in the mid 1980s that you couldn’t really get ahead with a specialized “LISP machine” compared to an advanced general purpose processor, particularly when you put caching, pipelining and superscalarity into the mix.The gen	PaulHoule	15.135018	-3.9419117	comment	3.0	12.0	1700790311	-10.375343
38402513	> Developers from Fuji Xerox wrote a	> Developers from Fuji Xerox wrote a portable VM in C to run the environment on different host platforms, called Maiko.I'm always confused by the relationship of C and Lisp(s). Here the VM is written in C. Yet elsewhere there seem to be at least one good examp	uticus	15.133685	-3.956033	comment	3.0	14.0	1700822312	-10.413321
38449905	We’ve had Lisp for 60 years, but ins	We’ve had Lisp for 60 years, but instead of using that, we’re going to have LLMs write the boilerplate for us.You will still have to read the boilerplate of course.	cgdub	15.148565	-3.9366853	comment	3.0	11.0	1701198708	-10.468839
26832789	I used to work at an AI firm that us	I used to work at an AI firm that used it. Large Lisp codebases are a minefield with near impossible security and debugging issues. I still love it as a programming language tho.	fidesomnes	15.13876	-3.9406188	comment	3.0	11.0	1618574355	-10.461056
26924304	The Evolution of Forth	The Evolution of Forth	tosh	15.040138	-3.802122	story	3.0	95.0	1619266015	6.060806
27013635	I like Lisp, and I'm not a fan of e.	I like Lisp, and I'm not a fan of e.g. Python's whitespace sensitivity. That said, for niches such as ML and data science, I find you just can't beat the Python ecosystem.	PeterStuer	15.118898	-3.9724038	comment	3.0	26.5	1619947301	-10.391701
27037032	in the 1970s there were two common i	"in the 1970s there were two common interpreted languages on small-RAM (say 4k) microcomputers and those were BASIC and FORTH; the second of which is almost ""take the parenthesis out of your LISP program, reverse the order of the tokens, and... it works!""By 198"	PaulHoule	15.120518	-3.9570706	comment	3.0	14.5	1620132900	-10.395687
27038242	"> FORTH ... is almost ""take the pare"	"> FORTH ... is almost ""take the parenthesis out of your LISP program, reverse the order of the tokens, and... it works!""Strictly speaking, FORTH does not have a lambda syntax.  But if you literally ""reverse the order"" of function application (while keeping lam"	zozbot234	15.075452	-3.889968	comment	3.0	10.5	1620139994	-10.370208
27046991	Note that this is not Lisp interpret	Note that this is not Lisp interpreted in Python, but transpiled into Python AST on the fly. Which is how Lisps should be implemented on top of modern environments.(IIRC the ‘gisp’ project takes that approach even further: it transpiles a Lisp to the AST, and 	aasasd	15.095849	-3.9945674	comment	3.0	10.5	1620198089	-10.183078
27158170	Forth has almost no syntax, which le	Forth has almost no syntax, which leads to every project becoming some kind of domain specific DSL. This is not necessarily a problem, but it leaves Forth without a strong sense of identity as a programming language. This is my opinion, of course.	haolez	15.045329	-3.8184552	comment	3.0	11.5	1621017882	6.0692363
27311096	Is this really about syntax? I think	Is this really about syntax? I think this is about homoiconicity. But homoiconicity is NOT the same thing as parenthesis, (or brackets as here)! Homoiconicity is not a (concrete) syntax issue, it's an AST and semantics issue in my view.Why are we so hung up on	jampekka	15.085206	-4.0051255	comment	3.0	12.0	1622168771	-10.332811
27311395	What I like about Lisp's syntax is t	What I like about Lisp's syntax is that the cursor (point) is always in a complete Lisp program. You move up one set of parenthesis, again a complete program. Move up further .... till you reach the top (file-level).So this gives good opportunity to Editor mak	jangid	15.100837	-3.9823463	comment	3.0	12.5	1622172150	-10.370195
33463177	Because Lisp gives you all of these 	Because Lisp gives you all of these things.  Functional programming.  Fast development.  Incremental compilation.  Interactive debugging.But the main thing Lisp gives you is almost unlimited malleability.  If there is ever anything in the language you don't li	lisper	15.126105	-3.9622583	comment	3.0	12.5	1667546604	-10.422748
33521496	Like any language, Lisp has readabil	Like any language, Lisp has readability issues when you’re not familiar with it. You find it hard to read because it’s alien to you. To my eyes – because Lisp is what I’m used to – every non-Lisp language has readability issues. These days I do a significant a	Oreb	15.109694	-3.9886408	comment	3.0	14.0	1667927926	-10.419976
33722034	Yup, I would love to see a bit more 	Yup, I would love to see a bit more love for Lisp style languages. They're incredibly powerful and it's a shame they're relegated to the fringes of professional programming.	falcolas	15.132278	-3.951384	comment	3.0	20.5	1669224455	-10.467549
33725015	Lisp evolved into ML and Haskell and	Lisp evolved into ML and Haskell and these have influenced professional programming enormously over the last few decades. Or are you advocating we ditch all progress and go back to Lisp? Have you tried an ML such as OCaml? It has built-in cons lists, convenien	grumpyprole	15.127326	-3.9712377	comment	3.0	15.5	1669240461	-10.489663
33726718	Frankly, yes, I wouldn't mind going 	"Frankly, yes, I wouldn't mind going back to boring old lisp. Particularly when confronted with Java or Javascript. I also have no real desire to dive into strongly typed functional languages - see the ""dynamic"" part of the original title.And all of those moder"	falcolas	15.128046	-3.967829	comment	3.0	10.5	1669252497	-10.455068
33786092	I have tried Forth and failed many t	"I have tried Forth and failed many times.The biggest problem for me was the amount of effort needed to keep track of ""local"" variables.Was I missing something? Is there a way to let Forth keep track of where on the stack ""foo"" lives if it is needed several tim"	dottedmag	15.016052	-3.831829	comment	3.0	15.5	1669720237	6.1756806
33852852	Because I want to follow my vision. 	Because I want to follow my vision. There is space for more than one thing in the world. Also, Common Lisp is nice but it's anything but minimal. One of the questions I want to answer is what is the minimum amount of constructs you need to have complete contro	sph	15.102666	-3.9384966	comment	3.0	10.5	1670155074	-10.2877445
22821288	Why would a language where it is pos	Why would a language where it is possible to manipulate certain functions to get their derivatives require a new revision control system or IDE?And speaking of Lisp - wasn't symbolic differentiation a fairly common thing in Lisp? (basically as a neat example o	arethuza	15.12845	-3.9633553	comment	3.0	14.0	1586429059	9.468628
17959032	Lots of Lisp interest today! Here ar	Lots of Lisp interest today! Here are a few resources.On Lisp: https://www.lurklurk.org/onlisp/onlisp.pdfLumen - a Lisp for JavaScript and Lua: https://github.com/sctb/lumenThe Art of the Interpeter: https://dspace.mit.edu/bitstream/handle/1721.1/6094/AIM-453.	shawn	15.100368	-3.9748116	comment	3.0	12.5	1536668591	-10.328278
17958413	A micro manual for Lisp – Not the wh	A micro manual for Lisp – Not the whole truth (1978) [pdf]	tosh	15.151144	-3.9294388	story	3.0	109.0	1536660889	-10.424268
18956215	Lisp is the canary in the mind shaft	"Lisp is the canary in the mind shaft.All programming languages have a bracket problem; Lisp just has a more intense bracket problem. Until the recent advent of 4K and ""retina"" displays, it wasn't practical to have significant weight variations in screen fonts "	Syzygies	15.093917	-4.0052004	comment	3.0	14.5	1548025805	-10.278046
18008585	Ask HN: Lisp and the Personal Comput	Ask HN: Lisp and the Personal Computer Revolution	Kinnard	15.09015	-3.9256754	story	3.0	2.0	1537208947	6.8215604
18989795	Lisp, Jazz, Aikido – Three Expressio	Lisp, Jazz, Aikido – Three Expressions of a Single Essence (2018) [pdf]	Tomte	15.171614	-3.9080155	story	3.0	22.0	1548345720	-10.456515
19110709	> My belief is that we've been slowl	> My belief is that we've been slowly building up to using general purpose languages, one small step at a time, throughout the infrastructure as code, DevOps, and SRE journeys this past 10 years.I think that you’re right, and I think it’s great, because we hav	rauhl	15.130218	-3.953024	comment	3.0	11.0	1549590951	-10.468178
19127128	Was it ever implemented? Are there a	Was it ever implemented? Are there any usable (at least working in a VM with networking) Lisp OSes out there?	d33	15.133517	-3.9416387	comment	3.0	18.5	1549792852	-10.423218
19244622	> Another thing that's driving me cr	"> Another thing that's driving me crazy is case insensitivity. I would never
  willfully choose a language with case insensitive identifiers. It's driving
  me nuts.What about it annoys you? Do you often define a lot of variables whose names
differ only by cas"	kbp	15.1139	-3.9816957	comment	3.0	11.5	1551091654	-10.411575
19271668	I'm currently working through the im	I'm currently working through the implementation of my own personal Lisp, following the awesome MAL process [0]. It's instructive to compare the result with the language as defined in the early 60s and available to programmers then (e.g. as defined by the Lisp	KineticLensman	15.145476	-3.941485	comment	3.0	11.0	1551365708	-10.376269
19277542	Much of Emacs is written in its own 	Much of Emacs is written in its own version of Lisp. There has been some effort to use Scheme, using GNU Guilehttps://www.emacswiki.org/emacs/GuileEmacsEmacs with a better Lisp option would be a big improvement. With a faster Lisp, perhaps less of Emacs would 	melling	15.1158085	-3.9569445	comment	3.0	14.5	1551408510	-10.396619
19277760	What would make most sense is just t	What would make most sense is just to have it Lisp all the way down. SBCL, top to bottom!	girzel	15.157611	-3.9302156	comment	3.0	11.5	1551411932	-10.466502
15882455	>Lisp seems to take the exact opposi	>Lisp seems to take the exact opposite approach as Go. The power of languages like Lisp appeal to me, so I have a hard time understanding why people want a language that intentionally limits itself.Me too.I don't understand how people in HN vouch for restricti	flavio81	15.12976	-3.9648616	comment	3.0	10.5	1512770561	10.210574
15882605	Code as data is such a big deal that	Code as data is such a big deal that - whatever you say - I will never ever understand why we don't all do Lisps.	patkai	15.116458	-3.975252	comment	3.0	22.0	1512771797	-10.40562
15840054	Mal Lisp for TempleOS	Mal Lisp for TempleOS	bagnalla	15.141655	-3.9269733	story	3.0	120.0	1512340415	-10.474539
16899175	Not a very unique style as claimed t	Not a very unique style as claimed though. Common Lisp implementations often have a very full featured debugger coupled with conditional restarts the experience is awesome and really should be a preresquite for any dynamic language to be called fit for serious	Guthur	15.090865	-3.9825735	comment	3.0	13.5	1524438156	-10.375102
16899412	Not related to your point, but I do 	"Not related to your point, but I do think it's entertaining that every time I post something about programming languages, there is always at least one person who says ""Lisp already solved it!"" [1] [2][1] https://news.ycombinator.com/item?id=16726379[2] https:/"	wcrichton	15.134937	-3.9529607	comment	3.0	12.0	1524441321	-10.46654
16860646	Running Lisp in Production (2015)	Running Lisp in Production (2015)	tosh	15.1383095	-3.9420078	story	3.0	138.0	1523987541	6.493825
16934388	Reading some of the replies that int	"Reading some of the replies that interpret pg's essay as talking about ""libraries"" or ""frameworks"" or ""metaprogramming"" doesn't look quite right to me.I argue that instead of those 3, the most applicable terminology to map to pg's idea would be a ""DSL"" (""Domai"	jasode	15.120674	-3.968333	comment	3.0	13.5	1524767832	-10.315439
17028357	Scheme is a Lisp like language, not 	Scheme is a Lisp like language, not a Lisp.Parenthesis is probably the only thing they have in common.	pjmlp	15.120306	-3.9682064	comment	3.0	12.5	1525856259	-10.416276
17042359	{by whom}Not by me. I'm a skilled Li	{by whom}Not by me. I'm a skilled Lisp programmer, yet Scheme isn't usable to me a the rudimentary coding level using the core language. There are stumbling blocks at every turn against straightforward Lisp coding. How can it be a Lisp?I can't even rely on Sch	kazinator	15.13929	-3.9533792	comment	3.0	12.0	1525981724	-10.44311
17117664	I like how code in both Python and L	"I like how code in both Python and Lisp can often look similar despite different syntaxes, different conventions, and different philosophies.Here is a toy example of file I/O in Python 3:  with open('foo.txt', 'w') as f:
      print('hello, world', file=f)

  "	susam	15.105841	-3.9914503	comment	3.0	19.0	1526903328	-10.3290825
17121614	One of my favorite languages, pity t	One of my favorite languages, pity that is has had even harder time than Lisp getting mainstream acceptance.	pjmlp	15.135381	-3.9510403	comment	3.0	38.0	1526934947	-10.445343
21104869	Interesting. I suppose you use it fo	Interesting. I suppose you use it for servers and you don't deploy SBCL to end-user machines?	cheez	15.124072	-3.9397306	comment	3.0	10.5	1569727960	-10.343019
21105394	Still I think it could be much bette	Still I think it could be much better with the graphical tooling of the surviving commercial Lisps.	pjmlp	15.1540785	-3.9336936	comment	3.0	11.5	1569736933	-10.460501
21148616	You're still thinking of languages a	"You're still thinking of languages as these huge things that can be offered as products. It's not the way a Lisper thinks about it.> To which I would respond, ""Sounds like you took the long way to implementing a library.""And I'd respond, that library is the la"	TeMPOraL	15.116865	-3.9776337	comment	3.0	11.5	1570119023	-10.233394
21134724	#Script Lisp	#Script Lisp	mythz	15.1397505	-3.9450898	story	3.0	88.0	1570009193	-10.336198
23042441	Not OP, but Lisp isn’t really a func	Not OP, but Lisp isn’t really a functional language — it’s a usual language that also has some functional ideas inside. Mutation is common, don’t think Lisp will be a language like Haskell.For resources, I would recommend Practical Common Lisp[0] and PAIP[1].F	pcr910303	15.128403	-3.971107	comment	3.0	11.0	1588344170	-10.465293
23042982	If I may ask, what are the benefits 	If I may ask, what are the benefits of building this app in LispWorks instead of any other implementation (sbcl or else)?	w3mmpp	15.134392	-3.9455745	comment	3.0	11.0	1588346963	-10.426624
23068453	You don't need to rewrite packages i	You don't need to rewrite packages if you have a layer where Emacs Lisp is compiled/interpreted as Common Lisp.You can easily hack the readtable in Lisp, and rewrite Emacs Lisp sexps as Common Lisp sexps.Some interesting things to consider are file-local varia	junke	15.122031	-3.9691188	comment	3.0	15.0	1588602460	-10.444753
23068496	Emacs contains a quarter million lin	"Emacs contains a quarter million lines of C. What do you do with all the elisp that calls into it? Maybe that could be turned into a ""libemacs"" and used from FFI."	kazinator	15.1119175	-3.9583218	comment	3.0	10.5	1588602663	2.9602077
23087046	It can do absolutely everything lisp	It can do absolutely everything lisp macros can do, with more flexible input syntax, and zero runtime overhead, while being both strongly typed and giving the macro body access to the types(PS: Lisp fanboys downvoting this, how about attempting to make a count	TylerE	15.10195	-3.998765	comment	3.0	12.0	1588728395	-10.300824
23133021	There was a tradition of such self-d	There was a tradition of such self-deprecating names for lisp dialects specifically -- an early system called PLANNER had an offshoot which was named CONNIVER, and SCHEME itself was another branch off this tree (originally named SCHEMER, and truncated because 	rst	15.134144	-3.9468703	comment	3.0	11.5	1589122088	-10.432145
23164915	I'm surprised that this didn't bring	"I'm surprised that this didn't bring up Paul Graham's ""Blub"" concept, in which non-Lisp languages are thought to be objectively less powerful than the universal language of Lisp. That's been a lot to blame for the mystical reverence of Lisp in the 21st century"	jhbadger	15.142303	-3.9472833	comment	3.0	16.0	1589360114	-10.476536
23164973	> but when I try to reason about com	> but when I try to reason about common subproblems I really have no idea how to map them to something like Lisp. For example how to efficiently implement a message bus with observers that can register for certain events.I think that's a badly posed question. 	phoe-krk	15.135356	-3.9559994	comment	3.0	11.0	1589360780	-10.408172
23165093	I wonder if his question was not rhe	I wonder if his question was not rhetorical, as in: It is really Lisp if it doesn't have cons?	oblio	15.144021	-3.914219	comment	3.0	11.0	1589362281	-10.445615
23166838	I have heard for decades how Lisp is	I have heard for decades how Lisp is transformative, how just having learned it, even if you leave, you will never look at things the same way again.  Like having served in the Armed Forces.Every so often I get interested in Lisp, but I always run up against t	at_a_remove	15.12942	-3.961404	comment	3.0	17.5	1589377688	-10.471465
23165914	A lot of people, including some prom	A lot of people, including some prominent faces in the programming world in general, have been writing about Lisp as secret sauce, silver bullet, God's language, source of programming enlightenment, yadda yadda; basically a set of mystic-sounding buzzwords tha	phoe-krk	15.144953	-3.9459918	comment	3.0	14.0	1589371008	-10.468449
23169404	I never thought I'd see a Lisp witho	I never thought I'd see a Lisp without lists. Oh wait, I didn't because this isn't a Lisp.I know naming is hard, but this is getting out of hand. Don't say you're a Lisp when you're clearly not. Say Lisp-inspired. Don't use the term 'modern Lisp', 9/10 it's si	armitron	15.115901	-3.977311	comment	3.0	11.0	1589391491	-10.499831
23233654	Guile is almost 30 years old. It’s G	Guile is almost 30 years old. It’s GNU’s Scheme implementation.  People wanted to replace the nonstandard Emacs Lisp with Scheme but since so much code was written in elisp, they didn’t want to throw it out.At this point someone should abstract out the Emacs d	melling	15.186064	-3.80602	comment	3.0	17.5	1589887565	-10.301169
23233990	Honest question: what are the benefi	Honest question: what are the benefits of Guile Emacs in 2020 and after? Guile speed? I'm aware Guile (especially) later versions got really good VM and general optimizations, but with recent work in gccemacs [1] and having complete gcc optimization engine und	dig1	15.186509	-3.7959275	comment	3.0	19.0	1589890625	-10.252996
23234018	Usually using Lisp in production mea	Usually using Lisp in production means making use of either LispWorks or Allegro Common Lisp, and not the FOSS offerings.	pjmlp	15.144968	-3.9389632	comment	3.0	11.0	1589890834	-10.44095
23234095	these days many newer languages have	these days many newer languages have macros: lisp is not alone	alehander42	15.109009	-3.9871423	comment	3.0	19.5	1589891420	-10.313428
23234105	I sometimes feel that someone needs 	"I sometimes feel that someone needs to declare ""elisp bankruptcy"" in the same vein as one declares inbox bankruptcy, accept that implementing all of elisp in another superior lisp is too much work, write a better emacs-alike from the ground up in a proper, per"	na85	15.108349	-3.9569805	comment	3.0	13.0	1589891507	-10.430029
23236455	When Ralph was new, it was essential	When Ralph was new, it was essentially a hybrid of Common Lisp and Scheme. It was very much a Lisp--not just technically, or in matters of surface syntax, but down in its bones.The surface language was basically Scheme, with some special forms removed and othe	mikelevins	15.133918	-3.9497278	comment	3.0	16.0	1589904580	-10.438437
23236675	I think it's safe to say at this poi	I think it's safe to say at this point -more than 10 years later- that Andy Wingo was very optimistic.Absolutely nothing of what he described in that email materialized. And it's no wonder it didn't, since a lot of it is simply wishful thinking. In addition, h	metroholografix	15.108185	-3.9345067	comment	3.0	12.0	1589905343	-10.385601
23294416	I will explain it for you.Lisp is ha	"I will explain it for you.Lisp is hard to master, like playing the violin, but if you master it you can get enormous rewards.Other languages are more like ""playing guitar hero"", most of the work is done for you and it it way easier to learn.HN is like a musici"	pritovido	15.152273	-3.9383004	comment	3.0	15.5	1590352038	-10.46764
28042874	But you just touched on the reason p	But you just touched on the reason programmers don't like Lisp: they prefer a language that has a lot of little bits of available functionality that they can mix and match, without having to do any real programming. Programming, as we knew it, is a dead art, m	coliveira	15.117159	-3.9635344	comment	3.0	10.5	1627939527	-10.444187
28025136	LISP Comes of Age	LISP Comes of Age	tosh	15.154918	-3.9308124	story	3.0	24.0	1627811793	-10.473111
28077389	Practical? Common Lisp on the JVM: A	Practical? Common Lisp on the JVM: A quick intro to ABCL for modern web apps	eatonphil	15.12758	-3.9608698	story	3.0	69.0	1628187047	-10.496914
28154127	can anyone expound on what he means 	"can anyone expound on what he means when he says that lisp macros defined syntax but not semantics?---  > The folks at Rust tried to do a decent job of fitting macros in the language.

  > Other languages, like all of the Lisp family, managed to fit them in mo"	andrekandre	15.109592	-3.9913013	comment	3.0	10.5	1628761377	-10.391276
28180462	It's the old 'I wanna make something	It's the old 'I wanna make something, gimme libs! vs 'I wanna make something completely new, gimme lisp' dichotomy.BTW the Wolfram language isn't 'a bit like lisp'. It _is_ a lisp with an alternate syntax. This becomes extremely apparent in any kind of symboli	rscho	15.123246	-3.970114	comment	3.0	12.5	1628947816	-10.42531
28189121	Lisp has always seemed like the most	Lisp has always seemed like the most teachable FP language to me. I imagine it would be hard to start elsewhere.	Igelau	15.1465025	-3.9402754	comment	3.0	16.5	1629038550	-10.414849
28189325	FP with dynamic scoping?Lisp is not 	FP with dynamic scoping?Lisp is not a FP language anymore than C.	rightbyte	15.130829	-3.9581082	comment	3.0	11.0	1629039911	10.431103
28255499	That's a weird language. At first gl	That's a weird language. At first glance it looks like a hyper-imperative lisp (except turns out it doesn't Process LISts).	masklinn	15.09235	-3.9907157	comment	3.0	12.5	1629537791	-10.405219
28338256	Hopefully pure-gtk branch will be me	Hopefully pure-gtk branch will be merged prior to Emacs 28, addressing (2).On (1), I'm not much of a programmer, but Emacs-lisp fine, so I'm not sure what benefit changing languages could bring.	clircle	15.09081	-3.9739766	comment	3.0	11.0	1630160167	6.3164134
28339212	> [Lisp macros] by their nature woul	> [Lisp macros] by their nature would be hard to implement properly in a language without turning it into a dialect of Lisp.Camlp4, Template Haskell, and Rust procedural macros all serve as counterexamples to this claim.	dfranke	15.114351	-3.9820158	comment	3.0	11.5	1630167431	-10.365247
28346239	The deepest and most radical opinion	The deepest and most radical opinions of Lisp are:- You should be able to implement Lisp-in-Lisp within a few pages of code. This a profound and remarkable design constraint. (See http://languagelog.ldc.upenn.edu/myl/llog/jmc.pdf (PDF) for an introduction.)- S	ekidd	15.09588	-4.002947	comment	3.0	12.0	1630240951	-10.485736
28376231	> I think hardcore Lispers see stuff	> I think hardcore Lispers see stuff like a Lisp GUI and natively-graphical Lisp editors as pointless bells and whistles – Emacs was good enough for John McCarthy and it still is for me! – but they really are not in 2021.That's almost the last line of the arti	PaulDavisThe1st	15.11385	-3.952332	comment	3.0	16.0	1630467838	5.856053
28376574	Lisp enthusiasts don’t get why Lisp 	Lisp enthusiasts don’t get why Lisp isn’t popular. And they keep repeating the same thing over and over again: that somehow it isn’t Lisp that’s the problem but something else. Nope. The problem is Lisp. I have written my own Lisp interpreters just for fun. An	mbrodersen	15.13561	-3.9532385	comment	3.0	11.5	1630472395	-10.451161
28376795	There exists a product that meets mo	There exists a product that meets most of the suggestions in this article called LispWorks. It has an IDE runs on multiple platform and has the features that a majority of Lisp programmers would consider mandatory. There is a listener, editor, debugger, variou	diskzero	15.050945	-3.9928234	comment	3.0	19.5	1630475791	-10.421592
28376755	If you happen to already be a Vim/Ne	If you happen to already be a Vim/Neovim user, the Vlime plugin + Parinfer (or at least Paredit) is pretty good.If you don't use either Vim or Emacs... that's harder. You can use the Lispworks IDE, although that's limited if you're not paying for it.I don't th	nerdponx	15.091832	-3.9674175	comment	3.0	11.5	1630475274	-10.41065
28654797	> (And yes, despite what the Common 	> (And yes, despite what the Common Lisp community has to say, Janet is a lisp, even if it’s not a Lisp)I love this and understand both the sentiment expressed and (as a recovering member of the Cult Of Lisp) the reason why it was said.	chris_st	15.144752	-3.9387677	comment	3.0	12.0	1632591193	-10.495317
12123526	You cannot. Because Lisp is homoicon	You cannot. Because Lisp is homoiconic, you don't code in (what I personally believe to be) reasonable syntax, you code in abstract syntax trees. Lisp is so easy to metaprogram because everything is parentheses and the burden is on the user, not the parser, to	wcrichton	15.1122465	-3.9814517	comment	3.0	13.5	1468951354	-10.346054
12200214	Heh, yeah.  Lisp has powerful featur	Heh, yeah.  Lisp has powerful features, I'm sure, but something that's always stumped me is, if that power mattered for delivering better code, would we have to strain so hard to find examples of why it's better?Paul Graham's viaweb story, well, that's great, 	Frondo	15.130711	-3.954348	comment	3.0	15.5	1470026052	-10.461642
12200346	For UI application programming You c	For UI application programming You can do without FP language features. Hell, you can even do without smart pointers checked arrays or GC.But you cannot do without a decent desktop or web development experience. I got involved with pretty large desktop applica	nurettin	15.121389	-3.9634345	comment	3.0	11.5	1470029026	-10.416688
12238832	Are we going back to programming in 	Are we going back to programming in Forth now?	kasajian	15.015195	-3.777129	comment	3.0	17.0	1470502866	1.8003166
12249252	I do wonder if they have ever though	I do wonder if they have ever thought of building a Mathematica  Machine like the old Lisp and Smalltalk machines?	protomyth	15.118788	-3.939221	comment	3.0	11.0	1470676118	-10.354515
12327149	It is absolutely more verbose. The L	It is absolutely more verbose. The Lisp form can store N constants into N variables in 2N+3 tokens: two parentheses, plus the variables and constants and one symbol. Assignment statements require 3N tokens: N vars, N constants, N assignment operators. That's a	kazinator	15.115935	-3.975001	comment	3.0	11.5	1471709294	-10.395783
12327303	That assignment has 9 pieces of extr	"That assignment has 9 pieces of extra syntax above a b c 10 20 30. By contrast,  (setf a 10 b 20 c 30) has only three: two parens and setf. Let's count the crumbs:  [a, b, c] = [10, 20, 30]
  1 2  3  4 5 6  7   8   9

In Common Lisp, you an express that 10 20 "	kazinator	15.084969	-4.0093927	comment	3.0	13.0	1471711764	-10.380997
12431894	Good context on why Forth didn't pan	Good context on why Forth didn't pan out can be found here:http://yosefk.com/blog/my-history-with-forth-stack-machines....I adore Forth and feel that it's in the small handful of languages / approaches to language that will permanently change a developer's und	samatman	15.027911	-3.8419006	comment	3.0	11.5	1473104296	6.223461
12435371	So Lisp is not a functional language	So Lisp is not a functional language...	jerven	15.1334	-3.9525537	comment	3.0	13.5	1473164151	-10.45188
12437483	I was hoping Shel would talk about u	I was hoping Shel would talk about using Lisp in the early days of Amazon.https://sites.google.com/site/steveyegge2/tour-de-babel#TOC-...	strangetimes	15.150019	-3.9354901	comment	3.0	14.0	1473181696	-10.438399
12939377	This is far from ideal (and a bad id	"This is far from ideal (and a bad idea in general):  (load ""~/quicklisp/setup.lisp"")
   
  (ql:quickload '(:datafly        ;; for database access
  
                  ;; WEB SERVER:
                  :hunchentoot    ;; for providing a web server
              "	armitron	15.097945	-3.9564023	comment	3.0	14.5	1478975939	-10.406892
12989134	by relaxing constrains, constant exp	by relaxing constrains, constant expressions became so powerful that a C compiler can be implemented in!I wonder how long it will take before C++ accidentally becomes a Lisp.	wsmith	15.110559	-3.973858	comment	3.0	12.5	1479495290	-10.261344
12999074	Once you look at enough of it, your 	Once you look at enough of it, your brain starts to see lisps differently. The parens fade away, and you mostly just see the indentation. It looks a little like Python once you adjust.	actsasbuffoon	15.112233	-3.9752836	comment	3.0	17.0	1479653303	-10.329622
13137467	A few notes:* Google actively develo	A few notes:* Google actively develops one of the Lisp compilers. Google Flights powers Orbitz, Kayak, etc. That's Lisp.* There are several Lisp compilers in active open source development.* There's a graph database written in Lisp called AllegroCache. It's go	reikonomusha	15.156605	-3.9281993	comment	3.0	11.0	1481272052	-10.431977
13137665	That's not cheeky, it's a perfectly 	That's not cheeky, it's a perfectly fair question.  Yes, that is certainly possible.  And there have been a few cool new ideas that have come along that are not easily subsumed by CL, like Haskell's type system.  It's easy to implement Hindley-Milner, but actu	lisper	15.095212	-4.011988	comment	3.0	26.5	1481275650	-10.4711685
13183544	Not sure why I'm taking the bait but	Not sure why I'm taking the bait but here I go:> Now we have much more powerful thingsLike what? Off the top of my head, Rust, Haskell and F# are probably the only ones that come close, and they're about as popular as the Lisps (i.e. not).> you should have try	kaoD	15.112305	-3.9889753	comment	3.0	18.0	1481795927	-10.354874
13214244	Lack of macro hygiene is just peachy	Lack of macro hygiene is just peachy keen among Scheme programmers as long as you are explicit about which identifier bindings can leak into, or out of, the macro definition from the macro call site.Scheme standards before R6RS[0] were a rough consensus on whi	bitwize	15.098272	-3.990273	comment	3.0	17.5	1482175616	-10.269359
13355867	Building a community around lisp is 	"Building a community around lisp is tricky. While there are many criticisms to this article [1], there are some elements of the ""Lisp Curse"" which is true - each programmer tends to rewrite his/her own libraries and so a collaborative framework seldom emerges "	hatmatrix	15.128335	-3.9649339	comment	3.0	13.0	1483965274	-10.36523
13379106	Meh.As a long time Emacs user, the o	Meh.As a long time Emacs user, the only way I'd even consider switching off of GNU Emacs would be if there was a port written in Common Lisp that replaced ELisp with Common Lisp.  Even then, I'd only switch if it had replacements for the ELisp modules I use (E	jlarocco	15.101735	-3.9695928	comment	3.0	17.0	1484183973	-10.349018
13422013	SBCL does not create binaries per se	SBCL does not create binaries per se, but dumps the program image.  While it practically is a binary, it's not equal to an executable that a conventional compiler/linker produces.	gkya	15.123507	-3.9486637	comment	3.0	11.5	1484691731	-10.393312
13539965	That could work within a single, wel	"That could work within a single, well coordinated project. Beyond that, the Common Lisp package system doesn't cooperate the way you'd like it to, so you're back at    (libraryA:bar (libraryB:foo object))

Since the package system is not hierarchical and doesn"	cronjobber	15.056346	-4.002382	comment	3.0	11.5	1485949830	-10.182024
13601343	This is complete and utter hogwash.>	This is complete and utter hogwash.> Clearly lisp procedures are not functionsSome are.  Others are not.The only thing a language needs to be legitimately called a functional language is for functions to be first-class data objects.  It's helpful but not neces	lisper	15.123326	-3.9860613	comment	3.0	13.5	1486582812	-10.4729805
13600920	> In fact it can be argued that lisp	> In fact it can be argued that lisp is one of the least functional languages ever createdCome on. Returning a value from an (if ...) already makes it more functional than a lot of languages. Sure, it's not functional in the sense Haskell is functional, but yo	orthecreedence	15.117855	-3.9921348	comment	3.0	12.5	1486580009	-10.460377
21231391	The parens are the shadow cast by Li	The parens are the shadow cast by Lisp's consistency, which is the reason to wish for Lisp in the first place.The solution is not to look at the parens. It's a bit like not listening to tinnitus, which is harder for some than for others. Tools help.	dang	15.124375	-3.9631896	comment	3.0	18.0	1570867383	-10.433429
21231628	It's used to implement a generalizat	"It's used to implement a generalization of assignment. If you have a special form that can tell you where something is stored, you can make macros to set it. E.g.  > (set x '(a b c))
  (a b c)
  > (set (2 x) 'z)
  z
  > x
  (a z c)

which you can do in Common "	pg	15.086906	-4.01516	comment	3.0	10.5	1570871103	-10.433496
21235001	This is a good point, in that Lisp i	"This is a good point, in that Lisp is better than the other languages. But why not go all the way, and drop the parens? If the goal of Bel is to be a ""good language"", with shorter programs, why oh why not also strive for shorter syntax?I love Lisp and have got"	breck	15.116875	-3.978902	comment	3.0	11.0	1570903659	-10.372337
21251896	From a 2002 Stallman lecture:There w	From a 2002 Stallman lecture:There was no free software Emacs editor that ran on Unix. I did, however, have a friend who had participated in developing Gosling's Emacs. Gosling had given him, by email, permission to distribute his own version. He proposed to m	tjr	15.1206	-3.9558597	comment	3.0	18.0	1571081660	-10.368422
21352775	Retrofitting an existing language wi	Retrofitting an existing language with flexible syntax (in this case, LISP) to non-English languages is relatively easy. They are not necessarily bad and can be useful for learners and casual users, but deviating from ASCII alone doesn't remove a cultural bias	lifthrasiir	15.133936	-3.9576008	comment	3.0	13.0	1571989851	-10.372952
21400089	"""It was done at least once"" != ""it w"	"""It was done at least once"" != ""it was a good choice"", though.There's a reason why most OSes are not written in Lisp, and it's not because the OS writers aren't smart enough to learn Lisp.  It's not because they don't know it exists.  It's because there are be"	AnimalMuppet	15.14409	-3.9451187	comment	3.0	10.5	1572455838	-10.415298
21579542	A totally different comment: any one	A totally different comment: any one know if arbitrary word order so important feature of Latin as a language, why no such thing in computer language.Lisp is Most flexible I suppose but basically it is fixed form (verb x).  Whatever verb is it governs how x is	ngcc_hk	15.120033	-3.9769654	comment	3.0	11.0	1574206322	-10.422991
21639243	I think the germane point about Emac	I think the germane point about Emacs here is that some people like writing Lisp and some people hate it. If you hate it Emacs is likely not going to be your best environment, and that’s fine.I really like writing Lisp so Emacs has a simple way of doing anythi	benreesman	15.110251	-3.9637892	comment	3.0	11.0	1574783140	-10.36851
21643894	The thing that matters is that code 	The thing that matters is that code is written as s-expressions, which has a simple textual serialization format with lists, symbols, numbers, strings, vectors and a bunch of other data types. Thus any Lisp form is automatically data: not simple strings or com	lispm	15.108443	-3.9893012	comment	3.0	11.5	1574811741	-10.37769
21672068	Couldn't emacs lisp be simply ported	Couldn't emacs lisp be simply ported to work on the JVM? Then emacs would get a battle tested virtual machine, and the emacs devs could focus on the editor, instead of dealing with VM speed.	dmortin	15.052526	-3.9955227	comment	3.0	16.0	1575146945	-10.379837
21677208	Forth is truly amazing in terms of w	Forth is truly amazing in terms of what you can do with very little RAM and CPU power. It is quite possible to have a working interactive development environment and production implementation in only 4-8 kibibytes of RAM. In the world of small memory 8 bit com	dwheeler	15.040028	-3.8170497	comment	3.0	11.5	1575227417	6.0843625
21624911	Similarities Between C++ and Lisp	Similarities Between C++ and Lisp	pcr910303	15.129646	-3.9621024	story	3.0	2.0	1574647701	-10.401958
21665987	Gccemacs: Experiment with native com	Gccemacs: Experiment with native compiled Emacs Lisp	pjmlp	15.116504	-3.9590342	story	3.0	86.0	1575052569	-10.3180485
39075892	Could you clarify what you mean by '	Could you clarify what you mean by 'there is nothing new under the sun' when referring to programming with Common Lisp? Are you indicating that Lisp has already introduced many of the concepts and features that are now found in modern programming languages, im	waynesonfire	15.140317	-3.9531217	comment	3.0	11.0	1705815279	-10.458932
39074568	Common Lisp's block / return-from an	Common Lisp's block / return-from and unwind-protect	bshanks	15.128987	-3.958619	story	3.0	126.0	1705801055	-10.412997
39143416	I keep trying to dedicate time to ge	I keep trying to dedicate time to getting comfortable with lisp, and it hasn't happened yet. So I just live vicariously through posts about lisps.One thing that stands out about them is that they're all so happy.  Try it. Search up a HN post about a Lisp. They	__MatrixMan__	15.14948	-3.939512	comment	3.0	14.0	1706281496	-10.475407
18051762	Lisp in Dart 2.0	Lisp in Dart 2.0	tosh	15.142658	-3.953621	story	3.0	105.0	1537719610	-13.910217
18083373	Sly: Sylvester the Cat's Common Lisp	Sly: Sylvester the Cat's Common Lisp IDE	molteanu	15.160924	-3.9226842	story	3.0	86.0	1538045843	-10.443304
18193342	The one that kills me, every time I 	The one that kills me, every time I look at CL, is the lack of a real Boolean type. Maybe I'm nuts, but that really isn't acceptable in this century.	s_kilk	15.054367	-4.007033	comment	3.0	11.5	1539264635	-10.373745
18193377	I think most programmers today would	I think most programmers today wouldn't have heard about Lisp Machines.Unless some one describes it to us, we wouldn't even know what that experience even felt like.	kamaal	15.139742	-3.937559	comment	3.0	12.5	1539264939	-10.430471
18226339	Lisp - oh what it could have been. I	Lisp - oh what it could have been. It had such potential, but then it got broken. I find it fascinating that those who are dedicated to the proselytisation of Lisp don't see the brokenness of the language. For them, all of the broken things are the features of	oldandtired	15.134748	-3.95665	comment	3.0	17.0	1539662252	-10.462807
18227690	Well, at some point we have to face 	Well, at some point we have to face reality. There have been hundreds if not thousands of successful projects with teams of hundreds if not thousands of developers working on them, at the same time or over time. These projects have been generally in Cobol (ok,	oblio	15.12981	-3.9540105	comment	3.0	13.0	1539678810	-10.472391
29773141	The thing is that trying to understa	"The thing is that trying to understand ""the power of Lisp"" via the toy interpreter from The Roots of Lisp[0] is like trying to understand ""the beauty of the sea"" after seeing a single five-minute YouTube video explaining it.It will give you the basic idea, but"	phoe-krk	15.087935	-4.020529	comment	3.0	35.0	1641153860	-10.900137
29773317	While I don’t disagree with Josh’s b	While I don’t disagree with Josh’s blog, concentrating on just language features leaves out the style of Lisp development: bottom up REPL style development. When I have to use Haskell or Python, I find myself working as if I were using Lisp: I still favor the 	mark_l_watson	15.116899	-3.9739194	comment	3.0	12.0	1641154694	-10.419821
29857115	Funny, but the premise is insane: th	Funny, but the premise is insane: that Lisp is ful of things that are done better elsewhere and that Lisp is the weapon against bugs.  I worked professionally in Lisp (Scheme) and this is 100% false.  In my experience dynamically typed languages (incl. Lisp, P	FullyFunctional	15.134274	-3.960261	comment	3.0	18.0	1641680721	-10.381239
29896445	I probably don't have the Common Lis	I probably don't have the Common Lisp chops to comprehend them, but is any implementation of these macros available to browse?	twoodfin	15.125299	-3.9631026	comment	3.0	11.0	1641929049	-10.300262
29872943	Where Lisp Fails: At Turning People 	Where Lisp Fails: At Turning People into Fungible Cogs	signa11	15.149138	-3.9371471	story	3.0	4.0	1641812030	-10.472645
29990059	"Why? Is there a reason other than ""m"	"Why? Is there a reason other than ""most people don't know lisp and it's cheaper not to teach them?"	boppo1	15.1513815	-3.9346387	comment	3.0	10.5	1642567526	-10.4773855
30009687	"Just to add: the built-in ""Introduct"	"Just to add: the built-in ""Introduction to Programming in Emacs Lisp"" is also really really great.  I have been using emacs for a while, with one framework or another, but always hesitated actually learning lisp.  I was too focused on learning the kinds of lan"	beepbooptheory	15.125785	-3.9579039	comment	3.0	20.0	1642690815	-10.4488945
30011203	"How do you access the built-in ""Intr"	"How do you access the built-in ""Introduction to Programming in Emacs Lisp""?"	gypsyharlot	15.136163	-3.9452717	comment	3.0	16.5	1642696779	-10.427161
30045836	Lisp: Good News, Bad News, How to Wi	Lisp: Good News, Bad News, How to Win Big (1990) [pdf]	capableweb	15.153741	-3.9289672	story	3.0	72.0	1642942856	-10.439373
30174612	> It's really not that much more eff	> It's really not that much more efficient when you compare Lisps to modern languages that share features like interactive (REPL) development, garbage collection, large standard libraries, concurrency primitives and abstractions, object/functional programming 	duped	15.129681	-3.9621043	comment	3.0	14.5	1643784902	-10.446433
30317975	pretty much lisp macros with the con	pretty much lisp macros with the constraints of a compile language.haskell templates are similar.	dmead	15.109215	-3.9944725	comment	3.0	22.5	1644713675	-10.374775
30612770	Visible Lisp Computer: embedded real	Visible Lisp Computer: embedded real-time display of Lisp workspace using uLisp	Gollapalli	15.133593	-3.9371483	story	3.0	55.0	1646820064	-10.416914
18254451	My main beef with treating the Commo	My main beef with treating the Common Lisp spec as a sacred text is simple:1. There were things at the time that were not quite standardizable that are now. Examples: Some degree of concurrency, system definition, the CLOS meta-object protocol, networking.2. T	eschaton	15.130846	-3.958228	comment	3.0	21.0	1539927895	-10.468755
18257409	It's good because it offers the oppo	"It's good because it offers the opportunity to simplify and rationalize the type system and associated protocols without losing features.In the early 1990s I worked on an experimental Newton OS written in Dylan. At that time, Dylan was still called ""Ralph,"" an"	mikelevins	15.129431	-3.9723077	comment	3.0	12.5	1539963174	-10.514347
18268167	What is the purpose of this? Educati	What is the purpose of this? Education? It sounds like yet another reinvention of Lisp.	another-cuppa	15.156272	-3.9329662	comment	3.0	12.0	1540132933	-10.494837
18309333	I thought it would be a down with Li	I thought it would be a down with Lisp article, but it was like my experience with the language, omg, how cool. From that ancient introduction to Lisp all I learned was that Lisp was as close to perfection and beauty as I would get in a programming language.	kleopullin	15.142542	-3.9501197	comment	3.0	41.0	1540562920	-10.436102
18309801	I would like to make the controversi	I would like to make the controversial claim that homoiconicity counts against adoption; the single representation carries little structural information and the meaning of a symbol is highly dependent on its containing context. Whereas the ALGOL-derived langua	pjc50	15.094844	-3.9966533	comment	3.0	14.0	1540565944	-10.412669
18309424	If this presentation of Lisp and mod	If this presentation of Lisp and model of computation clicks with you, you owe it to yourself to read Structures and Interpretations of Computer Programs (SICP).The Abelson from the OP's lecture is the co-author, and the presentation described exactly follows 	dharmon	15.145933	-3.9386477	comment	3.0	30.0	1540563580	-10.44919
18377215	It's actually quite amazing that it'	It's actually quite amazing that it's possible to run Lisp in 48k of RAM, but it is.http://www.flownet.com/ron/plisp.html	lisper	15.136866	-3.9396224	comment	3.0	10.5	1541355364	-10.4138155
18343652	Fun with Symbolic Derivatives in Lis	Fun with Symbolic Derivatives in Lisp	taeric	15.126369	-3.962348	story	3.0	84.0	1540965852	-10.397972
18477509	> The INCITS 226–1994 standard consi	> The INCITS 226–1994 standard consists of 1153 pages. This was only beaten by C++ ISO/IEC 14882:2011 standard with 1338 pages some 17 years after. C++ has to drag a bag of heritage though, it was not always that big. Common Lisp was created huge from the scra	jorams	15.123457	-3.9630606	comment	3.0	10.5	1542490493	3.9817255
18505059	I don't see how that follows at all.	I don't see how that follows at all.If you're implying all program languages are derived from C, that's simply false. Lisp is based on the lambda calculus and predates C, as one easy counter-example.If you're implying that all languages run on top of C, that's	TheDong	15.129082	-3.9585743	comment	3.0	20.5	1542826749	-10.410903
18505076	Show me a lisp which is used by enou	Show me a lisp which is used by enough people to fill a conference in 2018 that isn't implemented in C. Show me a lisp machine which was manufactured any time in the past 10 years.	Sir_Cmpwn	15.144662	-3.937978	comment	3.0	18.0	1542826851	-10.428196
18505465	The runtime is written in C. That's 	The runtime is written in C. That's the important bit. Just because the compiler, standard library, etc, isn't - doesn't mean it's not based on C. You cannot use SBCL without a C compiler.	Sir_Cmpwn	15.128721	-3.948119	comment	3.0	14.5	1542829870	-10.367866
18519382	I would also buy a Lisp Machine, pro	I would also buy a Lisp Machine, provided I could afford one. I'm really interested to see this software environment that I've heard spoken so highly of. What I've understood so far of it sounds amazing.	jolmg	15.130999	-3.9392862	comment	3.0	16.5	1543013790	-10.442956
18522036	C'mon, you are really proving gp rig	C'mon, you are really proving gp right here with that kind of superlative language. It's plain untrue. If the s/w was even very good for it's time, why would nobody have cared to just port it to a general purpose machine? After all LISP is all high level stuff	_0ffh	15.13423	-3.9517672	comment	3.0	11.5	1543068138	-10.441466
18535539	"I had to lookup ""opinionated"" to mak"	"I had to lookup ""opinionated"" to make sure I understand this statement correctly...Forth is on the contrary very opinionated. When you want to implement something in Forth, you have to take into account it's very limited ability to support complexity. Which fo"	astrobe_	15.030125	-3.8153193	comment	3.0	10.5	1543256453	6.1479573
18617156	If you missed it, the tiny section o	If you missed it, the tiny section on ITS has some gems:When you connected to one of the ITs machines (even over the net) and wanted to log in, ECC suggests checking to see if anyone is logged in with the name you wanted and if not, login in with that name. No	gumby	15.100815	-3.9513974	comment	3.0	14.5	1544096506	-8.688293
18668805	"Instead of using a vague term like """	"Instead of using a vague term like ""power"", perhaps the LISP fans should promote the concept ""leverage"", whereby you can talk about getting a task done with the fewest words of code. Small LISP programs can be incredibly clever, and transformation languages li"	magicmouse	15.129074	-3.9543622	comment	3.0	11.0	1544659769	-10.370913
18765008	"""Scheme"" implies a unified/central s"	"""Scheme"" implies a unified/central schemer, though. We can already call it a fad, or a mania (a la tulip mania)."	GavinMcG	15.104154	-3.9671435	comment	3.0	11.0	1545859143	-10.380148
18783140	> Compared to C, Python is the bette	> Compared to C, Python is the better choice. However, it seems like you haven't learned a Lisp dialect. I would love to know if you would still prefer Python once you know Scheme.the school I went used to teach C, Python and Scheme in the first year (nowadays	jcelerier	15.099746	-3.990097	comment	3.0	11.5	1546082854	13.371683
18842024	Isn't changing the head of a Lisp li	Isn't changing the head of a Lisp lisp by referring to the same tail from a new head an example of a persistent data structure?	chrisseaton	15.141552	-3.9345357	comment	3.0	13.0	1546824361	-10.523636
18855736	But that's because all the languages	But that's because all the languages you know are basically dialects of each other because they all descend from ALGOL, not because they are inherently easier to understand. Similarly, someone trained in Lisp would find things like Scheme and Clojure easier to	jhbadger	15.1237755	-3.9701786	comment	3.0	12.5	1546958349	-10.395333
18855896	> not because they are inherently ea	> not because they are inherently easier to understandI'm honestly not sure that that's true. I would bet money that someone who primarily works in Lisp would still have an easier time sitting down and reading Python code than someone who works in Python sitti	wycy	15.12385	-3.9767942	comment	3.0	10.5	1546959697	-10.406833
18910975	I only skimmed, but parts of this ar	"I only skimmed, but parts of this article read as just another pro-LISP piece... A rant against other languages (which the author terms ""DSLs"" simply because they're not Turing complete) like LaTeX, HTML, regex, SQL etc. and lists alternatives, all of which ar"	tomp	15.100359	-4.0119553	comment	3.0	11.5	1547559039	-10.352464
18912583	I'm not sure it should really count 	"I'm not sure it should really count as a ""Lisp book"", but The Art of the Metaobject Protocol"" is one of my favorite technical books ever.It takes some knocks for not really containing anything about how to use CLOS. Instead, it's how CLOS is built. At a higher"	deong	15.140984	-3.9448912	comment	3.0	10.5	1547571439	-10.431688
17439828	LISP always makes me sad. It's a lan	LISP always makes me sad. It's a language from which all modern languages could learn so much (and currently a lot of features of LISP get cloned). LISP Machines pioneered basically 90% of what modern computers and the internet do today.Yet, it's a very niche 	zaarn	15.141632	-3.950773	comment	3.0	52.5	1530515663	-10.474773
17440124	Languages don't create unmaintainabl	Languages don't create unmaintainable code, people do. I don't get why there's such hate against Lisp. (Granted, as others have noted, the author of this paper obviously drank from the Lisp kool-aid fountain)	quantisan	15.134208	-3.9579346	comment	3.0	12.5	1530520414	-10.450711
17440318	"If you think that is why Lisp is a """	"If you think that is why Lisp is a ""niche language"" then you should check out C. It has a ""preprocessor"" and you can do all kinds of things that make it hard to read your code, yet it is by any metric very popular, which provides a counterexample to your claim"	bachmeier	15.131285	-3.9657109	comment	3.0	11.5	1530523284	-10.450132
17441516	Modern languages have learned a lot 	Modern languages have learned a lot from Lisp. In fact they've stolen just about every major feature from it, except for s-expr syntax. Which should tell you something about s-expr syntax.	cageface	15.1109085	-3.984789	comment	3.0	12.5	1530538959	-10.401644
17480678	SBCL is together with luajit the fas	SBCL is together with luajit the fastest dynamic programming implementation there is. It runs laps around things like python and ruby. It does not have a steep learning curve. You become quite capable quite fast,but there is a lot to an implementation like SBC	bjoli	15.125631	-3.9526038	comment	3.0	10.5	1530998752	-10.40868
17507457	Debugging is an extraordinarily firs	Debugging is an extraordinarily first-class, up-front, frequent activity in Common Lisp, as the facilities are built into the language itself. While Lisp gets a lot of flak for basically (up to a few daring power-user exceptions) requiring Emacs, SLIME/SLY [1,	reikonomusha	15.105166	-3.9685123	comment	3.0	11.0	1531321389	-10.373777
17535918	What are the core features that diff	What are the core features that differentiate Arc from other lisp dialects?	georgewsinger	15.145268	-3.9473765	comment	3.0	18.5	1531672551	-10.494109
17645052	Note that while this is one of the r	Note that while this is one of the really good books on Common Lisp it is not new. The copyright is 2003-2005.	todd8	15.153512	-3.9301357	comment	3.0	10.5	1532964280	-10.488303
17605954	Workshop on the Psychological Realit	Workshop on the Psychological Reality of Lisp (1981)	kazinator	15.155068	-3.9323466	story	3.0	25.0	1532477372	-10.48172
17821951	Evaluating Vax Lisp 3.1	Evaluating Vax Lisp 3.1	mr_tyzic	15.144004	-3.936986	story	3.0	106.0	1534970421	-10.416047
16313982	> The problem with these schemes is 	> The problem with these schemes is that they're at odds with metaprogramming. One huge advantage of s-expressions is that the code is expressed using data literals.I don't think it is necessary for there to be a single uniform syntax for code to be able to fu	kmill	15.055664	-4.04356	comment	3.0	11.5	1517883641	-10.35905
16310017	S-Expressions (1997)	S-Expressions (1997)	panic	15.078066	-4.008407	story	3.0	125.0	1517849506	-10.309099
16388332	This is the most pedantic post I hav	This is the most pedantic post I have ever read on the subject. The point is that code is data, enough said. You manipulate your functions the same way you manipulate lists, because they are the same thing.Stuff like this is frankly why so many programmers shy	whalesalad	15.100264	-3.995308	comment	3.0	12.0	1518733481	-10.442796
16397878	There is one more thing that frequen	There is one more thing that frequently comes up -- for good reason -- but is not really a feature unique to Lisp, only a strong part of Lisp culture: live coding, inspection, self-documentation and hotswapping, or what we call hackability.If you don't like ho	kqr	15.106927	-3.9818993	comment	3.0	12.0	1518826401	-10.384707
16407572	I’d take advantage of this opportuni	I’d take advantage of this opportunity to start a discussion about a somewhat related article, the famed Blub article:http://www.paulgraham.com/avg.html> The more of an IT flavor the job descriptions had, the less dangerous the company was. The safest kind wer	oblio	15.140643	-3.9415271	comment	3.0	26.5	1518980681	-10.411644
16407822	Reading the article, I'm a little bi	Reading the article, I'm a little bit curious - I've heard a lot that more productive languages become less productive over a certain team size, since productivity typically comes from a lesser degree of strictness.  Does lisp have similar problems?	pasabagi	15.138961	-3.9494452	comment	3.0	19.0	1518982737	-10.466947
36594502	That explains why Lisp is so conveni	That explains why Lisp is so convenient for implementing DSLs.  Homoiconicity skips all the bike shedding around syntax and parsing.	giovannibonetti	15.112817	-3.979759	comment	3.0	35.5	1688519909	-10.397784
36597138	> I know what I am talking about.Sor	"> I know what I am talking about.Sorry, but you manifestly don't:> there's no magic to them (compared to macros you could do as pre-processing in any other language)The ""magic"" of s-expressions is that they make it easy to operate on the source code of a progr"	lisper	15.096329	-3.9960756	comment	3.0	15.0	1688543732	-10.3327465
36640367	Don't hold your breath, these rumors	"Don't hold your breath, these rumors have been going for well over a decade:2018: ""The current owner of Symbolics displayed interest in open-sourcing Genera a few years ago but nothing happened since then."" https://news.ycombinator.com/item?id=178243302014: ""T"	pdw	15.186391	-3.8727775	comment	3.0	18.0	1688778863	-10.238073
36640417	Having never used a lisp machine, an	Having never used a lisp machine, and only having a basic understanding of it -- but if the whole system is a lisp image + apps are just calling into the OS as if they were lisp functions, woulden't a 'pure GPL' be problematic becuase EVERYTHING running in it 	jasonjayr	15.130566	-3.9494863	comment	3.0	13.5	1688779334	-10.412116
36640984	I bet there is a valid argument that	I bet there is a valid argument that there’s nothing here of any commercial value anymore.The industry has gone beyond “catching up” to surpassing the values of the Lisp Machine and Genera. Any grand ideas of this era have been considered, and either mined, re	whartung	15.14087	-3.939473	comment	3.0	15.0	1688785180	-10.425602
36700578	It's interesting that folks go down 	It's interesting that folks go down this hacky route when they can use something like Vespa, which is orders of magnitude better from a performance, relevance, scalability, and developer ergonomics perspective.	binarymax	15.06537	-3.9629993	comment	3.0	11.0	1689191038	-10.406488
36713595	Ask HN: What Were the Differences Be	Ask HN: What Were the Differences Between Symbolics Genera and Xerox Interlisp-D	linguae	15.137411	-3.9419034	story	3.0	8.0	1689271768	-10.42319
36887967	Lots of languages that are not lisp 	Lots of languages that are not lisp have this ability.	dleslie	15.13653	-3.955255	comment	3.0	14.0	1690423533	-10.418283
36889812	">The ""Wolfram Language"" user typical"	">The ""Wolfram Language"" user typically does not write code in FullForm. It's used as an internal representation.I have no clue what you're talking about - it's an available primitive and I use it all the time.>and not so good at compiling code...Lol I am 100% "	mathisfun123	15.127238	-3.9646306	comment	3.0	12.0	1690440176	-10.444073
24581256	For a very simple, very readable Lis	For a very simple, very readable Lisp reader, see Lumen's reader.l file: https://github.com/sctb/lumen/blob/master/reader.lIt compiles to Javacript and Lua, so if you prefer reading those, you can:https://github.com/sctb/lumen/blob/master/bin/reader.jshttps://	sillysaurusx	15.126364	-3.9545958	comment	3.0	11.5	1600969454	-10.290846
24643754	Lisp's Mysterious Tuple Problem	Lisp's Mysterious Tuple Problem	fishmaster	15.143589	-3.940231	story	3.0	2.0	1601499507	-10.484363
24717118	Just tried the code in SBCL and it d	"Just tried the code in SBCL and it definitely gives a compiler warning even without executing the function:    This is SBCL 1.5.6, an implementation of ANSI Common Lisp.
    More information about SBCL is available at <http://www.sbcl.org/>.
    
    SBCL is f"	dunefox	15.1227	-3.949939	comment	3.0	12.5	1602145785	-10.39939
38912942	Forth is super cool for embedded wor	Forth is super cool for embedded work. The normal dev cycle of build, burn, not work, tweak, build, burn, repeat is quite slow and annoying. It was kind of revolutionary for me to discover Mecrisp[0], which demonstrates how can provide a (fast!) language that 	xelxebar	15.0212	-3.8287582	comment	3.0	13.5	1704726334	6.0881286
31811268	Why is it easy to implement a Lisp?	Why is it easy to implement a Lisp?	Tomte	15.142951	-3.9433496	story	3.0	19.0	1655737757	-10.449752
31886308	It is good to see languages like Cry	It is good to see languages like Crystal and Julia having both a compiler and an interpreter.I would really like to see a hybrid approach, where an interpreter is used for the outer loop and a compiler for the inner loop. I believe Guile takes this approach by	snicker7	15.118345	-3.8879514	comment	3.0	13.5	1656266846	-7.5279574
31934970	I know it's a total pipe dream, but 	I know it's a total pipe dream, but this is what makes me most sad about lisp never being taken seriously.It could have been common practice to create and pull in new language constructs like what this is doing.	spicybright	15.142184	-3.9477618	comment	3.0	12.0	1656606775	-10.45133
32057728	I have a theory about it, as someone	I have a theory about it, as someone who used Lisp since 1987 and Scheme more thereafter:  there's no concise version of what https://docs.python.org is and that makes ALL the difference.I know what exists, have the books, etc, but nothing is as well organized	jjtheblunt	15.096016	-3.9938614	comment	3.0	10.5	1657554587	-10.17571
32059913	Ah, a Lisp user. Common Lisp is Exhi	Ah, a Lisp user. Common Lisp is Exhibit A for standardization. Every Lisp user claims it is great because of either standardization of advanced features in the days when the Berlin Wall has barely fallen or the mere existence of macros. No real first-party imp	melony	15.134833	-3.9637716	comment	3.0	13.5	1657564440	-10.477115
32095845	One of the nice things about Lisp is	One of the nice things about Lisp is there are no statements, only expressions.  It's easier to think about your code.Lisp was the first language I used (other than assembly code) so when I encountered C I was puzzled why they even bothered to have statements 	gumby	15.112264	-3.983436	comment	3.0	11.0	1657805371	-10.350962
32122683	This looks very interesting, there i	This looks very interesting, there is definitely need for SBOM generators that can handle multiple languages.Do HN got a recommendation for other CLI based SBOM generators?Dependency Track is too resource intensive for a small scale company, I just need a simp	DethNinja	15.119364	-3.957495	comment	3.0	10.5	1658011907	-10.431995
32177403	Could you elaborate on this a bit ? 	Could you elaborate on this a bit ? Lisp has next to no numerical libraries IIRC ?	tpejrl23432	15.127227	-3.9577637	comment	3.0	12.0	1658397012	-10.414237
32266462	Cmacro: Lisp Macros for C	Cmacro: Lisp Macros for C	thesephist	15.057087	-4.0350304	story	3.0	67.0	1659025281	-10.285913
32458238	Emacs would be a fine choice, but is	Emacs would be a fine choice, but is not mandatory, if you can live with less support for parens found in other editors. Emacs traditionally excels at working with lispy languages and REPLs.I started working through the book, but did not feel like using Common	zelphirkalt	15.131935	-3.9484613	comment	3.0	11.5	1660474610	-10.352767
32480909	Why Lisp is the most productive prog	Why Lisp is the most productive programming language [video]	gibsonf1	15.136796	-3.9498997	story	3.0	3.0	1660643437	-10.496559
22063792	IMO Lisp is just overrated, it lacks	IMO Lisp is just overrated, it lacks visual clues, reads right to left with horrible nesting etc..Sure it has some good concepts. But fanboys on internet make it seem like some God tier thing.	terminaljunkid	15.148588	-3.9361844	comment	3.0	32.5	1579177013	-10.452796
22087621	I'm glad that Lisp is not used in sp	I'm glad that Lisp is not used in spacecraft control system.	zerr	15.152133	-3.9329276	comment	3.0	21.5	1579385202	-10.466486
22087656	This just reminds me of how many tim	"This just reminds me of how many times I've been told things like ""you can't use that java code that is open source and working and does exactly what we want - we're a python shop!"" and other such nonsenses.I'm always amazed at how people have strong feelings "	cbanek	15.101383	-3.9811172	comment	3.0	11.5	1579385508	-10.412704
22087937	When was the last time you saw a kid	"When was the last time you saw a kid who made a cool game or software and made money using LISP?The best motivator is recognition. Kids don't care if a language has books and whether there ""exists"" a game development kit. They only care about how much satisfac"	cocktailpeanuts	15.146681	-3.935527	comment	3.0	11.5	1579387821	-10.557188
22088445	Pretty sure Logo was originally impl	Pretty sure Logo was originally implemented with a lisp, no?Don't fall into the trap thinking lisp is just functional.	taeric	15.117322	-3.916721	comment	3.0	13.0	1579393421	-10.484247
22088885	That's a good question.  The honest 	That's a good question.  The honest answer is I don't know.  It's hard to do controlled experiments on this sort of thing.I can say this though: the ability to meta-abstract the language is a HUGE lever that no other language has.  And one can also observe sub	lisper	15.134753	-3.9484904	comment	3.0	10.5	1579399871	-10.465186
22088662	> I can get things done in Lisp with	> I can get things done in Lisp with 1/10th the effort it would take in any other languageShould that be read as 1/10th the effort it would take you in any other language (because of your long history with lisp), or do you suppose it would apply to arbitrary o	westoncb	15.143704	-3.947307	comment	3.0	12.0	1579396559	-10.483873
38925657	To the contrary.  In CL some flexibi	To the contrary.  In CL some flexibility was given up (compared to other LISP dialects) in favor of enabling optimizing compilers, e.g. the standard symbols cannot be reassigned (also preserving the sanity of human readers).  CL also offers what some now call 	guenthert	15.103993	-3.9926927	comment	3.0	11.5	1704805189	-10.211133
32609294	Depending in Common Lisp	Depending in Common Lisp	Tomte	15.151211	-3.9299822	story	3.0	112.0	1661530435	-10.478287
39379189	> Also: a maintenance nightmare as s	> Also: a maintenance nightmare as soon as you have more than ~1 person working on the codebase!Lisp isn't any harder to maintain than any other language. The Lisp codebases I've worked on, even professionally, were originally written by talented, experienced 	bitwize	15.137808	-3.9507222	comment	3.0	13.5	1707972152	-10.461004
39467217	I love it that Paolo says that Medle	I love it that Paolo says that Medley is his preferred environment. I try Medley periodically, and for me in modern times, Emacs with SBCL or LispWorks fits my needs better.I was fortunate enough to have had a Xerox 1108 Lisp Machine purchased for me in 1982. 	mark_l_watson	15.171694	-3.857649	comment	3.0	10.5	1708610711	7.2403464
39467760	Common Lisp doesn't have a top level	Common Lisp doesn't have a top level lexical scope, which seems to be what you're looking for here.Putting something like VAR everywhere now causes issues because it's not a form that returns a value.  Also, there's no place to hang declare forms on it.  And i	pfdietz	15.088212	-4.0061526	comment	3.0	16.5	1708612894	-10.295581
39615736	In college, my programming languages	"In college, my programming languages class used a language called ""Mystery"" (I believe created by my professor), which was configurable. Assignments would be like ""write some test programs to figure out whether the language is configured to use pass-by-value o"	sanderjd	15.11475	-3.979645	comment	3.0	16.0	1709731803	-10.31736
39617988	I have the same dream.  A part of me	I have the same dream.  A part of me wishes Richard Stallman set out on making a Lisp OS instead of making a Unix clone, but this was the mid-1980s and thus I understand the technical limitations and the social environment of the time.  The 1990s could’ve been	linguae	15.103949	-3.9515438	comment	3.0	11.5	1709744320	-10.335598
39649805	I don't even know why we have any *M	I don't even know why we have any *ML. Everything they can do can be done with Lisp-syntax better.	435345345	15.11224	-3.9822195	comment	3.0	10.5	1709965205	-10.394795
39666627	Given Peter Norvig's work on Lisp an	"Given Peter Norvig's work on Lisp and Python, pity that after 24 years, his ""Python for Lisp Programmers"" essay from 2000 is still mostly true.Python might have overtaken Lisp's role in AI, but still needs some catching up in tooling.""The two main drawbacks of"	pjmlp	15.132795	-3.9623258	comment	3.0	11.5	1710155611	-10.335685
32724639	And so the knowledge of a poor devel	And so the knowledge of a poor development experience for Common Lisp keeps spreading.	pjmlp	15.150292	-3.9276638	comment	3.0	11.5	1662387893	-10.484434
32727325	Unfortunately, I think perhaps might	"Unfortunately, I think perhaps might have come to a different conclusion if you'd tried Racket's so-called ""hygienic"" macros in anger. I've found them difficult to properly understand, not very usable in practice, and overly complex for non-trivial cases.This "	pyb	15.202866	-3.8663378	comment	3.0	11.0	1662401519	-10.3998575
32823162	I couldn't tell you exactly why (tho	I couldn't tell you exactly why (though I have some ideas), but Lisps seem to settle into amazingly stable languages. Even Clojure, with all its initial trendiness, has been remarkably resistant to bloat and churn. Such things as it's added have largely been e	jwmcq	15.136282	-3.9561234	comment	3.0	10.5	1663070326	-10.535371
16448716	> Like - it's 2018 and people are st	> Like - it's 2018 and people are still using 'cdr' and 'cons' as terminology and happily expecting other people to learn those words and not even feeling bad about it.Oh please, cry me a river. Like monads, promises, or props are any better.> If the person ju	felideon	15.124362	-3.9717488	comment	3.0	10.5	1519414525	-10.466579
16584226	> Honestly curious why Lisp has so m	> Honestly curious why Lisp has so much admiration and praise on HN.Paul Graham and Robert Tappan Morris, two of the founders of YCombinator, love Lisp/Scheme. They got rich by selling their company Viaweb to Yahoo. You guessed it: Viaweb was written in LISP a	wolfgke	15.144353	-3.9292693	comment	3.0	10.5	1521030245	-10.488437
16584082	Your confusion will go away once you	Your confusion will go away once you recognize that Scheme is not Lisp. For most purposes, Lisp means Common Lisp, or one of the Lisps that ended up merging into Common Lisp. That means that Lisp does all of these things and more, which you might not expect if	Jach	15.157417	-3.929996	comment	3.0	14.5	1521028730	-10.452163
16616068	> What would the LISP machines have 	> What would the LISP machines have been like? It still kills me to think that an OS crash on one of those took you into the Lisp debugger.Sometimes I think a lot of people do use LISP machines. It's just called emacs.I joked on here once that I think the end 	SllX	15.125719	-3.9475787	comment	3.0	13.5	1521431226	-10.396116
16796282	You don't need a language to be a LI	You don't need a language to be a LISP in order for them to be able to interpret themselves. There are several Java interpreters which can interpret themselves, for example.	chrisseaton	15.134212	-3.9557328	comment	3.0	11.5	1523302979	-10.4251175
19333180	Aren't s-expressions all one really 	Aren't s-expressions all one really needs?	lsh	15.089198	-4.008875	comment	3.0	18.0	1551997499	-10.347423
19313850	Common Lisp Koans	Common Lisp Koans	bibyte	15.155555	-3.9271252	story	3.0	151.0	1551817165	-10.488966
19342933	I am always amazed at how many libra	I am always amazed at how many libraries and tools there are for programming in Elisp. One of the things that make it so fun.	celeritascelery	15.111595	-3.9715538	comment	3.0	15.0	1552084991	-10.472332
19439464	That's why I wrote 'more like'. Give	"That's why I wrote 'more like'. Given that you haven't defined any semantics of your operators, it's more like a guess.Not sure if this helps you. But let's define a macro A:    CL-USER 32 > (defmacro a (b c)
                   (print (list :macro-expansion b "	lispm	15.075178	-4.023794	comment	3.0	22.0	1553062056	-10.311889
19440795	Different name for the same thing, w	Different name for the same thing, whats your point? Lambdas/AF are used to delay evaluation but keep the default semantics.Macros are more than simple code transformers, that wording somehow implies that they somehow retain the semantics of the data passed to	j-pb	15.092525	-4.0024776	comment	3.0	13.0	1553078967	-10.279271
19480410	The fundamental problem with S-expre	The fundamental problem with S-expressions is that they are intended for (1950s) machine readability and human ergonomics takes a back seat.	kevin_thibedeau	15.082688	-4.016641	comment	3.0	15.5	1553490353	-10.284902
19520000	I'm not confused, and nothing I'm ta	I'm not confused, and nothing I'm talking about is novel, eg:http://matt.might.net/articles/metacircular-evaluation-and-f...SICP is a great way to learn lisp and learning macros by extending the evaluator is a natural progression.I don't care how many lisp exp	reitzensteinm	15.119603	-3.9778433	comment	3.0	12.5	1553848307	-10.415667
19575170	It's the unreasonable effectiveness 	It's the unreasonable effectiveness of a language and an approach that has some real mathematical backing behind it (relational algebra).Lisps are unreasonably effective because they have lambda calculus behind them. The Hindley-Milner type system and linear t	nine_k	15.063369	-4.0386496	comment	3.0	13.5	1554400468	9.88538
19550713	Symbolics Lisp: Using the DEC Alpha 	Symbolics Lisp: Using the DEC Alpha as a Programmable Micro-Engine (1993) [pdf]	kristianp	15.118076	-3.9551587	story	3.0	78.0	1554174381	-10.34039
19677965	This book is well worn, dog eared, a	This book is well worn, dog eared, and on my home office book shelf. While many people criticize it, for legitimate reasons, it is still a fun and wonderful journey through Common Lisp. I wish more books were written in this irreverent and whimsical style.If h	Dangeranger	15.150342	-3.9332092	comment	3.0	24.0	1555454594	-10.440774
19678436	Is there such a thing as a bad Lisp 	Is there such a thing as a bad Lisp book? ;) Maybe there are only ones you're not ready for yet... (I've been unsuccessfully searching for a hardcover of Art of the Metaobject Protocol for a while, I can make myself ready for it once I have it.)In HN tradition	Jach	15.150249	-3.9328732	comment	3.0	12.0	1555459146	4.8497524
19679456	Hey Dr Barski. I'm actually reading 	"Hey Dr Barski. I'm actually reading your book right now. I do have a question. How do you write Lisp effectively? And by that I mean, Lisp seems to be written from the inside out due to the nested lists. Is there something that makes it more natural to write:
"	Riverheart	15.114937	-3.9835548	comment	3.0	13.5	1555470953	-10.418558
19732490	You should check out SBCL, it's comp	You should check out SBCL, it's competitive.	madmax96	15.121036	-3.9417906	comment	3.0	30.5	1556051273	-10.341839
19953515	I have written books on Common Lisp 	I have written books on Common Lisp and Scheme. Their power feature to me is the combination of functional programming (functions without side effects) and how these small functions can be built bottom-up in an interactive repl. Other languages like Python and	mark_l_watson	15.1164	-3.9876513	comment	3.0	12.5	1558277015	-10.490973
33058734	I wanted to love Lisp after learning	"I wanted to love Lisp after learning about it in ""Gödel, Escher, Bach"", and then in PG's Blub essay (which is why I'm a HN fan).The syntax is just off-putting and I was never compelled to learn it in school, so I remain in algol-land. If time and focus allowed"	pstuart	15.152037	-3.9374146	comment	3.0	26.0	1664735103	-10.472094
33058861	Lisp really doesn’t have syntax… it’	Lisp really doesn’t have syntax… it’s an abstract syntax tree which is the output of most parsers	waynecochran	15.101229	-3.9878883	comment	3.0	13.5	1664735858	-10.222766
33058825	No personal attack intended, but wha	No personal attack intended, but what I always find funny: the complaints about Lisp's syntax. Lisp's syntax is regular prefix notation all over and one of the defining features of the language.Algol languages on the other hand, and math even on paper, are a r	jcynix	15.102297	-3.9901986	comment	3.0	21.0	1664735710	-10.356319
24871215	If anyone else is wondering what the	"If anyone else is wondering what the Lisp ""condition system"" is...Apparently it's analogous to ""exception handling"" in other languages, but with some extra features.Props to the author for getting out his first book!"	javert	15.117935	-3.9730709	comment	3.0	14.5	1603470750	-10.380272
24893014	So what does Lisp make harder to imp	So what does Lisp make harder to implement than today's programming languages?It seems like large-scale composition relies on a well-structured way to define and enforce APIs, and oh wow, typing facilities.Performance has historically been an issue for Lisp be	trevyn	15.111214	-3.9767694	comment	3.0	12.5	1603689202	-10.391291
24893661	> This is maybe the best introductio	"> This is maybe the best introductions to Lisp i have seen, especially for a js dev like me it could hardly get more approachable and convincing.The classical one is ""The Nature of Lisp""[0], which introduces data-as-code through XML and Java build tools. Same "	TeMPOraL	15.09386	-3.9949596	comment	3.0	13.0	1603697876	13.353643
24894734	It is and it isn't :)Obviously opini	It is and it isn't :)Obviously opinions on the language shouldn't be given too much weight if a person hasn't spent too much time investigating/ using it.As a non-JavaScript person,  all the JavaScript examples looks like gobbledygook unless I sit down and con	ACow_Adonis	15.118741	-3.9816885	comment	3.0	13.0	1603709549	-10.548251
24894342	I was a teenage Lisp enthusiast. One	I was a teenage Lisp enthusiast. One thing that's struck me as I've gained more professional experience is that writing the code isn't actually the difficult part of software engineering. It seems that way for personal projects, or if you're just getting start	foldr	15.16362	-3.97207	comment	3.0	19.0	1603705356	-10.429784
24932701	On Fexprs and Defmacro	On Fexprs and Defmacro	sea6ear	15.132067	-3.963046	story	3.0	42.0	1603991393	-10.378202
25180366	Well, certainly no one seems to unde	Well, certainly no one seems to understand how e.g. syntax-case works. But my impression is that macro hygiene in itself is a solution looking for a problem. The key advantage e.g. racket's macro system has over clojure or common lisp is not hygiene but being 	patrec	15.118232	-3.9741626	comment	3.0	12.5	1606074094	-10.266853
25204053	Remember Lisp machines?  The M1 is a	Remember Lisp machines?  The M1 is a Swift machine.	lisper	15.144093	-3.9356592	comment	3.0	26.5	1606258979	-10.44249
25237355	Just started learning Emacs Lisp. Co	Just started learning Emacs Lisp. Common Lisp is on my todo list. Glancing through these tasks, I realize I have a lot to learn before I can call myself proficient. But I am very eager. Started reading Guy Steele and Touretzky. Love the concepts, the simplicit	submeta	15.149719	-3.9386346	comment	3.0	10.5	1606569744	-10.420756
25319404	I prefer the syntax of CL over Schem	I prefer the syntax of CL over Scheme, but the latter is definitely a wonderful language and goes hand in hand with the wizard book, SICP.At the end of the day, language choice, much like choice of editors or mechanical keyboards, is not that important — what 	abhinav22	15.157118	-3.8986173	comment	3.0	13.5	1607210392	-10.370645
25291861	WebAsm: Forth with Lisp Syntax	WebAsm: Forth with Lisp Syntax	marksmillibend	15.1198	-3.949962	story	3.0	41.0	1607017509	-10.45387
25562274	Aside from legitimate gripes about a	Aside from legitimate gripes about a recycled name, there's a lot of undue negativity in this thread.Not one person cares that HN-LISPER is not impressed that OP wrote yet-another-Lisp-interpreter-in-language-X or that you're unhappy with the style of their pa	ethagnawl	15.146761	-3.9340625	comment	3.0	11.0	1609183276	-10.473783
25627095	The problem with lisp is that most p	The problem with lisp is that most programmers find the syntax extremely off putting. I've been watching this debate go around and around in circles for 20 years now and nothing has changed. And as much as I appreciate the power of macros I feel like the featu	cageface	15.118399	-3.9793203	comment	3.0	17.0	1609724268	-10.382225
35521743	timonoko|3 years ago|parent|on: Lisp	"timonoko|3 years ago|parent|on: Lisp and Haskell (2015)Common Lisp could evolve into totally parenthesis-free language. By expanding the ""powerfull and versatile"" Loop-macro into full powerfullness and versatileness. Unfortunately two parenthessis needed, but "	timonoko	15.102328	-3.990362	comment	3.0	12.0	1681196197	-10.36665
35540195	I would like to compare this thing w	I would like to compare this thing with real Lisps in the terms of abilities.Also I would like to know the correct transcription of the name.	eimrine	15.148701	-3.9358766	comment	3.0	22.0	1681309444	-10.460729
35543997	I found his remarks about how (moder	I found his remarks about how (modern, ML-based) AI is the winter for Lisp interesting and congruent with how I see things currently. At the end of the day, many of the hardest problems in computing are solved best by simply throwing more compute (esp. matrix 	bitwize	15.14478	-3.9329116	comment	3.0	11.5	1681322479	-10.449111
35610104	It was strange at the time to put a 	It was strange at the time to put a lisp on the king of OOP languages, given all the lispers so fiercely dismissive of OOP, but never has a lisp language enjoyed such a huge ecosystem of libraries available.I use Erlang as my main language. I like that so many	JimmyRuska	15.134901	-3.9575424	comment	3.0	11.0	1681793742	-10.440856
35632197	LISP has been singing homoiconicity 	LISP has been singing homoiconicity as its feature. I lately start to think homoiconicity is really a wart. The macros are a system to program the code, while the code is a system to program the application. They are two different cognition tasks and making th	hzhou321	15.108778	-3.987939	comment	3.0	12.5	1681932165	-10.366422
35757259	I'm starting to see the allure of pl	I'm starting to see the allure of plain Lisp. All it has is functions and functions have names which convey a meaning. Plus some syntax for creating macros.Now CAR and CDR don't convey a lot of meaning I agree. But that's just a matter of poor naming. They sho	galaxyLogic	15.097235	-3.992149	comment	3.0	10.5	1682802841	-10.442748
35852583	> On the other hand, Lisp code writt	> On the other hand, Lisp code written some 30 years ago will most of the time, without issue, work on a modern Common Lisp implementation.Yeah, just like Perl. Or Latin. No one uses them, these are dead languages that belong to a museum.It can be fun to study	cynicalsecurity	15.130811	-3.957714	comment	3.0	12.5	1683474179	-10.452465
35855037	Comparing it to C++ compilers... doe	Comparing it to C++ compilers... does Lisp have zero-cost abstractions?	sva_	15.128995	-3.9573455	comment	3.0	26.5	1683489404	-10.39374
35862867	Success stories like this make a bet	"Success stories like this make a better argument for ""Why Lisp?"" than abstract blog posts.We know macros are awesome, but if you're trying to convert others please provide code, screenshots, or even an interactive web demo."	Archit3ch	15.133402	-3.9524534	comment	3.0	10.5	1683560554	-10.397422
28714390	I can’t believe anyone made Adventur	I can’t believe anyone made Adventure Construction Set in Forth.  That was a great C64 game.  I’ve never programmed in Forth, but I can’t imagine writing something so complex in it.	kenjackson	15.025295	-3.8020356	comment	3.0	12.0	1633061150	6.05946
28726543	In my lessons about scheme (given by	In my lessons about scheme (given by the french translator of TAOCP), I have the following essential characteristics:- static binding- closures (true)- tail recursion- garbage collectors-expression or typing is a matter of choice, but, IMHO, if you lack one of	webreac	15.136663	-3.9496584	comment	3.0	15.5	1633157288	-10.450597
28728445	I wish LISP 2 was never abandoned. h	I wish LISP 2 was never abandoned. https://en.wikipedia.org/wiki/LISP_2	zerr	15.143667	-3.9391544	comment	3.0	12.5	1633181664	-10.470184
28729513	Hey, I made this! Feel free to ask a	"Hey, I made this! Feel free to ask anything.I released this in 2016. It was a significant undertaking and I burned out pretty hard afterwards. I was operating under a naive ""if you build it, they will come"" model whereby building a modern-looking website, the "	zetalyrae	15.145695	-3.9416213	comment	3.0	11.0	1633189533	4.168498
28963391	> It was the norm for a single progr	> It was the norm for a single programmer to be doing the work that would normally be a team (sometimes multiple teams).Be careful with what you conclude from this observation. Is it that A) Lispers are generally 10x Programmers, or that B) Lisps are generally	pphysch	15.131835	-3.9563558	comment	3.0	16.5	1634940616	-10.463567
28963315	> The article also mentioned they ha	> The article also mentioned they have 3 programmersOne of the problems we had with promoting commercial use of Scheme and then Racket was that -- although some companies were using it to great success -- there weren't any job postings for it.It was the norm f	neilv	15.141147	-3.9353867	comment	3.0	22.5	1634940173	-10.460019
34148058	>it will be written so that it first	>it will be written so that it first defines everything as functions and then at the very end makes a single function call. This ensures that the script will only do anything if it has been completely downloaded.This is not sufficient. More care is required.  	Arnavion	15.131172	-3.9518719	comment	3.0	11.0	1672144062	-10.334431
34183868	My only gripe with Forth is that whe	"My only gripe with Forth is that whenever I ask Forth people ""what software do you build in Forth?"" they say ""Forths"". I guess that means they are making their own specific Forth for their purposes. I tried to make some basic TODO list style app that reads and"	bowsamic	15.036054	-3.8100183	comment	3.0	10.5	1672397586	6.1089406
34199138	What are the enduring innovations of	What are the enduring innovations of Lisp? (2022)	eslaught	15.152027	-3.9333456	story	3.0	15.0	1672511014	-10.498824
34315051	OT, we used to joke about LISP sourc	OT, we used to joke about LISP source code contains mostly brackets. Nowadays we  literally store, transform and pass around willy nillily	a_c	15.11449	-3.9780412	comment	3.0	19.0	1673293761	-10.369139
34321761	I use CL for hobby projects and do l	I use CL for hobby projects and do love it. The main difficulty with “industrial strength lisp” is finding places in the industry that want to do so. :/	Insanity	15.1396475	-3.9391632	comment	3.0	22.0	1673336916	-10.4462385
34341447	Hey, why does it matter if it's made	Hey, why does it matter if it's made in 'common lisp' ?	keldami	15.152572	-3.936071	comment	3.0	11.0	1673458712	-10.438933
34355057	I know what s-expressions are, vague	"I know what s-expressions are, vaguely. Vaguely in terms of ""I couldn't write a grammar for them off the top of my head."", that is, not ""what are they"".Is there a single agreed-upon defined grammar that everyone can use? Preferably one simple enough that like "	jerf	15.066731	-4.0233717	comment	3.0	10.5	1673537746	-10.416562
34413160	"My favourite is ""Practical Common Li"	"My favourite is ""Practical Common Lisp"" by Peter Seibel (https://gigamonkeys.com/book/)Not only is the book free to read (although I would suggest to pay for it if you like it!) The code to parse binary files actually ""inspired"" my design of an actual producti"	twawaaay	15.147605	-3.935134	comment	3.0	14.0	1673967596	-10.417131
34552382	Carp: A Statically Typed Lisp	Carp: A Statically Typed Lisp	bobnamob	15.086609	-3.9926631	story	3.0	20.0	1674856278	-10.284569
23451690	I've read that page and I'm still wo	I've read that page and I'm still wondering why they're using FORTH.C has excellent portability and performance. The article agrees with the general consensus that C is also generally a better language for the programmer. So why use FORTH? What does it matter 	MaxBarraclough	15.011759	-3.7967536	comment	3.0	12.0	1591569891	-6.8233156
23486034	Lisp-1 Has Won	Lisp-1 Has Won	galfarragem	15.15442	-3.930578	story	3.0	5.0	1591859720	-10.443509
23559047	Lisp programmers realized in the 70s	Lisp programmers realized in the 70s that having an artificial division between code and data was frequently problematic, hopefully other languages continue to catch on as well :)	thurn	15.119875	-3.965417	comment	3.0	20.0	1592445880	-10.445194
23600338	If you need someone online to justif	If you need someone online to justify for you learning new things in your field you have probably already lost.  This field is unrelenting, it requires constant learning.  I'm nearing 40 and it hasn't stopped. The one advantage is the more you learn the more s	nightski	15.145229	-3.945183	comment	3.0	11.5	1592834855	-10.439575
19989119	For a Vim user, what is a good plugi	For a Vim user, what is a good plugin to provide SLIME like paredit and REPL capabilities for programming in Common Lisp? Is there a clear winner plugin in Vim like there is SLIME for Emacs?	hoveractive	15.068113	-3.9709234	comment	3.0	10.5	1558593666	-10.393066
19998252	Write-only, because only the functio	Write-only, because only the functions (‘WORDS’) are named - no parameter names.  There are also no local variables in standard Forth, you have to push (and pop!) them from the separate return stack. Accessing parameters is done by manipulating the stack, whic	wrycoder	15.001921	-3.846023	comment	3.0	13.0	1558669034	6.13526
19997661	>High-level, what makes Forth intere	>High-level, what makes Forth interesting? What are it’s major strengths and weaknesses?Strengths: Lisp-level metaprogramming facilities while also being extremely fast and close to the metal. Weakness: the Perl problem (write-only) but worse.	unixbeard1337	15.137839	-3.950248	comment	3.0	15.5	1558660991	-10.440316
20197381	Re statically typed Lisp, I’m keepin	Re statically typed Lisp, I’m keeping an eye on Carp [1] which seems to be a quite active project.[1] https://github.com/carp-lang/Carp	andrenth	15.113056	-3.969872	comment	3.0	17.0	1560713143	-10.305167
20211782	LISP has been a system programming l	LISP has been a system programming language. Still is.People just don't think about it much but forget that for a time, LISP was the shit in computer science, we invented half of the modern desktop on LISP machines!	zaarn	15.139816	-3.9500492	comment	3.0	19.0	1560857108	-10.437982
20231329	Reading PG's ANSI Common Lisp was a 	Reading PG's ANSI Common Lisp was a pivotal event on my career as a programmer. I wrote a high-resolution star map generation tool in CL about 14 years ago, and have been working on it and selling the maps it produces for many years.Now I am moving away from t	juanre	15.142268	-3.9174452	comment	3.0	15.5	1561024893	4.670961
20313776	> I'm just pointing out that there a	"> I'm just pointing out that there are millions of developers that won't useYou are just stating it. Without any reason. One can't argue against a statement, you have to provide reasons behind your statement for there to be an argument.For example: ""Asking peo"	PuercoPop	14.978168	-4.053394	comment	3.0	11.0	1561830073	-10.366858
20322915	I disagree. The C programming langua	I disagree. The C programming language is directly responsible for countless damning flaws in modern software and can be credited for the existence of the majority of the modern computer security industry.You can write system software in many languages, includ	verisimilitudes	15.119513	-3.9697154	comment	3.0	11.5	1561962521	-10.401533
13621953	A small Lisp-Machine in an FPGA	A small Lisp-Machine in an FPGA	poindontcare	15.139963	-3.9380932	story	3.0	90.0	1486806481	-10.418676
13797566	Performance and Evaluation of Lisp S	Performance and Evaluation of Lisp Systems (1985) [pdf]	mpweiher	15.142596	-3.9425132	story	3.0	66.0	1488738701	-10.418547
13933218	> The assumption is that the machine	> The assumption is that the machine code of the C++ compiler is significantly faster than that emitted by a comparable dynamic language compiler. While this may hold true in general, it does not necessarily hold true with Lisp. Lisp is a programmable programm	vvanders	15.10193	-3.9970832	comment	3.0	17.5	1490205940	-10.407602
13941016	Most of those jokes are completely o	"Most of those jokes are completely out of date. ""Eight Megs and Constantly Swapping"" used to be a big deal, but today it's not.I don't think running Elisp in Emacs takes away from it being ""native."" At least insofar as there are no popular text editors (that I"	gmfawcett	15.02447	-3.9756951	comment	3.0	13.0	1490285178	-10.32755
13981279	which lisp interpreter did you use ?	which lisp interpreter did you use ?	netmask	15.127287	-3.9535394	comment	3.0	13.0	1490739408	-10.327644
13983003	The biggest problem with lisp adopti	The biggest problem with lisp adoption imo is that the first step of every path begins with emacs.Emacs needs to die for lisp to flourish in a more modern editor.Light Table was a good start, but we need some power behind similar projects.I always thought guil	killin_dan	15.113866	-3.9529552	comment	3.0	10.5	1490756632	5.8867264
30813006	I think many people have conjectures	"I think many people have conjectures, such as this one, but I don't think it's a tech problem, or a ""Lisp is too powerful for its own good"" problem. It's a ""people aren't writing software"" problem. History has demonstrated umpteen times that developing large, "	reikonomusha	15.135542	-3.9553146	comment	3.0	10.5	1648310472	-10.419241
30962648	The Art of Lisp and Writing	The Art of Lisp and Writing	exdsq	15.145411	-3.9361815	story	3.0	37.0	1649452867	-10.465298
34624671	If it's +(1 2 3) then the language i	If it's +(1 2 3) then the language is no longer homoiconic and you will lose the primary leverage of being a Lisp. The fact that Lisp code consists entirely of Lisp data literals (code as data) is what enables Lisp macros and the superior REPL experience.	simongray	15.119339	-3.9757423	comment	3.0	11.0	1675333536	-10.459694
34747589	This is my really high level and poo	This is my really high level and poorly explained thoughts on this. I have enormous trouble reading functional programming languages.Python gets away significant whitespace by reading like pseudo code and is fairly clean. It uses words rather than symbols.C sy	kayodelycaon	15.096734	-4.005712	comment	3.0	18.0	1676072353	-10.392983
34845036	I think its a pretty nice language.T	"I think its a pretty nice language.Those extra bits of syntax that makes it ""not a lisp"" are mostly around defining ""not list"" kind if data structures. I find it practical."	progre	15.118574	-3.9812264	comment	3.0	18.5	1676707975	-10.434003
34863299	(I've done a lot of Lisp, for money,	(I've done a lot of Lisp, for money, and for open source platform&community buildout.)HN articles about exotic things, not just Lisp, do seem to get upvoted disproportionately.Also, PG declared Lisp as something you're supposed to think is important or a super	neilv	15.150434	-3.9319468	comment	3.0	15.0	1676851559	-10.457001
35031516	LISP isn't a pure functional languag	LISP isn't a pure functional language, it's a multi-paradigm language that is as dynamic as they come. Its problem isn't lack of expressivity, it's probably that it's too flexible (and of course the syntax throws people off).As for Haskell, I guess that gets i	lolinder	15.118081	-3.9923384	comment	3.0	18.0	1678036049	-10.480395
35094426	Many have tried. The upshot is, it i	Many have tried. The upshot is, it is either not as cool as it is in our heads if you get it, or it isn't as easy as it is in our heads.You don't even really need s-expressions to do what you're talking about. You can do it off of any grammar, which all curren	jerf	15.064785	-4.031724	comment	3.0	14.0	1678457215	-10.342021
35085617	European Lisp Symposium 2023	European Lisp Symposium 2023	gjvc	15.15449	-3.9284866	story	3.0	114.0	1678390826	-10.466931
36961618	I wish I had the enthusiasm, grit an	"I wish I had the enthusiasm, grit and dare I say ""sisu"" that lisp developers possess. I worked with a guy - very skilled Clojure developer - who was an absolute wizard in Emacs. If a car company sold a vehicle that was powered by emacs, he would have bought it"	whalesalad	15.139561	-3.9461286	comment	3.0	13.0	1690919193	-10.545997
36997051	The problem with Lisp is that there 	The problem with Lisp is that there are different dialects, and if you program in more than one, you need to be aware of the differences between them.   It would be nice to be able to switch between them on different projects without being caught out by their 	DonaldFisk	15.120514	-3.9761972	comment	3.0	14.0	1691137426	-10.545951
37087627	ADDENDUM: I love Lisp but I want to 	ADDENDUM: I love Lisp but I want to clarify that its secret sauce is that it enables exploratory programming: programming from inside the system.While most languages are akin to preparing a detailed blueprint and executing it (then stop to update the blueprint	sph	15.137837	-3.953134	comment	3.0	14.5	1691754722	-10.48759
37103317	One of the ideas of Lisp is that you	"One of the ideas of Lisp is that you can extend/change the language to bring it near the actual domain level. The so-called ""Embedded Domain Specific Language"" is common in Lisp."	lispm	15.119247	-3.9670615	comment	3.0	11.0	1691867867	-10.389163
37103852	I once recorded a demo video, runnin	I once recorded a demo video, running Concordia on an actual Symbolics Lisp Machine.https://vimeo.com/83886950	lispm	15.13238	-3.946676	comment	3.0	13.5	1691871378	-10.373971
37323774	"> :class=""alert"" is strictly worse t"	"> :class=""alert"" is strictly worse than ((class . ""alert"")) or any other variation that actually leverages s-expressions instead of merging key and value into the same symbol. Ew.I hear you, but I wasn't aiming for leveraging the power of macros. Using `((clas"	lelanthran	15.091727	-4.006638	comment	3.0	17.0	1693409778	10.126047
37458188	Lisp has a profound effect on the bu	Lisp has a profound effect on the business model because it can give you a dramatic productivity boost (like an order of magnitude or more) but it makes staffing more difficult because there aren't many experienced Lisp programmers because very few organizatio	lisper	15.134583	-3.9606085	comment	3.0	18.0	1694368106	-10.455838
37499679	So basically Emacs with Elisp replac	So basically Emacs with Elisp replaced with Fennel and a more responsive UI...	ducktective	15.108114	-3.887722	comment	3.0	10.5	1694628349	-10.365997
29134822	If you want a Scheme that's embedded	If you want a Scheme that's embedded in another program as an extension language, or to make software that's distributed normally as part of a Linux or BSD distro... probably Guile.For most other practical purposes... probably Racket.There are a few other opti	neilv	15.118406	-3.9677994	comment	3.0	17.5	1636241044	-10.349847
29140521	Common Lisp code optimisation	Common Lisp code optimisation	lokedhs	15.134905	-3.9410722	story	3.0	128.0	1636300837	-10.417857
29203207	> Lisp is one of more familiar thing	> Lisp is one of more familiar things in programmingSimply not true in practice.https://insights.stackoverflow.com/survey/2021#section-most-...edit: fixed link, header was pointing at wrong section	pphysch	15.141398	-3.9490519	comment	3.0	13.0	1636743629	-10.454245
29259070	It's about as fun and easy to implem	It's about as fun and easy to implement a simple thing that looks like a forth as it is to implement a simple thing that looks like a lisp. But that's where the ease of forth ends for me.I find forth basically impossible to read even when, at best, authors lea	eatonphil	15.091406	-3.8722315	comment	3.0	34.5	1637184591	6.0909333
29261053	Good programming in Forth is all abo	Good programming in Forth is all about scope. As soon as you make a word do too much you will end up with all of the problems you listed. But if you keep your scope down, not for elegance but simply to avoid cognitive overload and the potential for errors then	jacquesm	15.045984	-3.8187191	comment	3.0	15.0	1637198534	6.1287208
29328688	> Most languages not directly influe	"> Most languages not directly influenced by C (new or old) simply don't have these bizarre issuesI don't agree.  Lisp is ""easy"" to parse, but difficult to add structure to.  Tcl similarly.  Typeless languages are now out of favor--everybody wants to be able to"	bsder	15.113717	-3.9763048	comment	3.0	11.0	1637750385	-7.2441993
29348924	Paper is acm-walled but code repo is	Paper is acm-walled but code repo is https://github.com/udem-dlteam/ribbit .  I would like to have seen Hedgehog Lisp ( https://github.com/sbp/hedgehog ) in the comparison chart, since it has actually been used for practical projects.  Its VM is around 20KB of	throwaway81523	15.194227	-3.879419	comment	3.0	11.0	1637921637	13.633435
29507107	Common lisp is surprising not functi	Common lisp is surprising not functional.  It embraces that all things can be first class things.  But mutable code is very very easy in common lisp.	taeric	15.134459	-3.9575753	comment	3.0	14.5	1639118735	-10.499154
29508371	Until everyone and their dog decided	Until everyone and their dog decided to turn functional as a synonym for as Haskell does it, Lisp was quite functional.	pjmlp	15.116465	-3.9901733	comment	3.0	10.5	1639132067	-10.454261
36107154	Steel Bank Common Lisp 2.3.5 release	Steel Bank Common Lisp 2.3.5 released	mm007emko	15.144073	-3.933978	story	3.0	130.0	1685303486	-10.453462
36154867	notably not 'lisp features that have	notably not 'lisp features that have been absorbed elsewhere' but instead the opposite, lisp features that still make it uniquetl;dr1. no part of the system off limits2. pervasive interactivity3. homoiconicity	smegsicle	15.148962	-3.941682	comment	3.0	16.0	1685642183	-10.490237
36155569	Honestly just using Steel Bank Commo	Honestly just using Steel Bank Common Lisp is the best choice if you are looking to build high quality software which just works.A lot of my software which earns a $4 million profit per year has SBCL sub systems though that is slowly decreasing as we are movin	ilrwbwrkhv	15.127536	-3.9482143	comment	3.0	11.0	1685645294	-10.444109
36194924	Can you share where do you use lisp?	Can you share where do you use lisp? I'm curious what are its niches nowadays.	gostsamo	15.143579	-3.938796	comment	3.0	30.0	1685964956	-10.46409
36195181	The blub paradox strikes the lispers	The blub paradox strikes the lispers hardest, for they have been reassured by PG and each other that there is no language better than lisp. Those of us using more powerful languages should learn from their hubris.	hoosieree	15.139987	-3.9434423	comment	3.0	12.5	1685967276	-10.4533615
36241731	Oh boy.> Guile is also the default e	Oh boy.> Guile is also the default extension language for the GNU project.AFAIK Guix is the only project that uses Guile and has any actual users (I'm not counting Shepherd because outside GuixSD it is nothing).  Guile is like 30 years old, and has been envisi	cmm	15.19331	-3.7817235	comment	3.0	16.0	1686231673	-10.233918
36241799	If this project interests you but is	If this project interests you but is a bit more minimal than you need, the Janet language is a slightly-less but still pretty lightweight embeddable Lisp with a strong library and community: https://janet-lang.org/	joeatwork	15.134477	-3.942733	comment	3.0	12.0	1686231938	-10.513741
36265812	Why the AI community still needs Lis	Why the AI community still needs Lisp (1996)	mepian	15.142491	-3.9374406	story	3.0	17.0	1686353820	-10.426929
36270565	The Embeddable Common Lisp (2005) [p	The Embeddable Common Lisp (2005) [pdf]	andsoitis	15.1467285	-3.9341557	story	3.0	42.0	1686405998	-10.420322
36500333	What Lisp needs is an IntelliJ IDE.F	What Lisp needs is an IntelliJ IDE.Failing that, true support for out-of-the-box with Visual Studio Code would be nice. Yes, I know about Alive and that... what I mean is, you open up a Lisp file and it asks to download the LSP for Lisp, Alive, and other suppo	bitwize	15.098654	-3.9613574	comment	3.0	10.5	1687909695	-10.428624
25886630	Ask HN: LISPers, do you use homoicon	Ask HN: LISPers, do you use homoiconicity (code-as-data)?	lopatin	15.123472	-3.9697027	story	3.0	3.0	1611439934	-10.430318
26066273	Interestingly, not much about ML. Su	Interestingly, not much about ML. Surprinsing for lisp which, if I understand correctly, has roots in AI...	wiz21c	15.134928	-3.944931	comment	3.0	15.0	1612800216	-10.390281
26067478	As someone who has written a lot of 	As someone who has written a lot of CL and now deals mostly in scheme, why is an unhygienic macro system important? I don't think it matters much, and frankly I think something like vanilla syntax-case isn't hygienic enough. Either I don't want to care about a	bjoli	15.107565	-3.9812045	comment	3.0	18.0	1612805429	-10.321599
26067353	To me, the entire point of Lisp, the	To me, the entire point of Lisp, the thing that sets it apart from other languages, is unhygeinic macros. Since that is my view, I can only recommend Common Lisp. CL is the opposite of modern, but just because something is modern doesn't make it good, nor does	tines	15.129106	-3.964482	comment	3.0	21.0	1612804760	-10.458455
26035837	Script Lisp	Script Lisp	rcarmo	15.11715	-3.9688041	story	3.0	88.0	1612530284	-10.299931
26298338	Yeah but none of those are inherent 	"Yeah but none of those are inherent advantages of Lisp...I really don't get this sort of ""Lisp is cool"" article touting advantages the Author was impressed by during their childhood that have long since been overtaken by technical advancements in other languag"	FeepingCreature	15.144353	-3.943954	comment	3.0	11.5	1614557236	-10.436464
26298738	Continuation on “Not This Lisp Again	Continuation on “Not This Lisp Again”	p_l	15.147625	-3.9378555	story	3.0	49.0	1614561052	-10.438865
26389133	Almost 20 years ago, I met Patrick a	Almost 20 years ago, I met Patrick at a Lisp meetup in a pub in London where he talked to us about Croma, the Lisp he developed for Web use.  I learned that he was looking for a Lisp machine, and as I had a Symbolics 3630 which I hardly ever used, I arranged f	DonaldFisk	15.149338	-3.9367518	comment	3.0	10.5	1615226474	-10.43998
31055667	I suppose it depends on what you mea	"I suppose it depends on what you mean by ""static types"" since you can optionally specify types in Common Lisp. SBCL even does precise type checking[1]:""If a variable is declared to be (integer 3 17) then its value must always be an integer between 3 and 17. If"	bachmeier	15.113296	-3.96849	comment	3.0	11.0	1650139715	-10.31732
31149681	> Any sufficiently complicated C or 	> Any sufficiently complicated C or Fortran program contains an ad hoc, informally-specified, bug-ridden, slow implementation of half of Common Lisp.I call BS on that “rule”. 25+ years of experience here working on very large C/C++ code bases used by large com	mbrodersen	15.123823	-3.9610152	comment	3.0	11.0	1650847641	-10.364445
31179632	“LISP is worth learning for a differ	“LISP is worth learning for a different reason — the profound enlightenment experience you will have when you finally get it. That experience will make you a better programmer for the rest of your days, even if you never actually use LISP itself a lot.”— http:	teddyh	15.139466	-3.946692	comment	3.0	13.5	1651066357	-10.477056
31179958	"Honestly, ""just because I want to"" s"	"Honestly, ""just because I want to"" sounds like a more compelling argument than talking about enlightenment. Mainly because the latter implies that people who don't know lisp are somehow unenlightened or lacking in some way - that comes across as really arrogan"	jstx1	15.152667	-3.9343631	comment	3.0	11.0	1651067958	-10.474606
31203563	LISPer looks at this and rolls his e	LISPer looks at this and rolls his eyes. Pfft. Muggles.	twjerh34234	15.142108	-3.9103985	comment	3.0	11.0	1651229190	-10.49024
31252448	> all the parentheses are unnecessar	> all the parentheses are unnecessary tooThat's not quite true.  In Forth it is impossible to tell syntactically where the function calls are.> it is the closest thing to Lisp machines experience you can get today.I think Clozure Common Lisp running on a Mac (	lisper	15.099342	-3.9955437	comment	3.0	13.0	1651606189	-10.3314
31328469	Common Lisp has had this for decades	Common Lisp has had this for decades: DEFINE-COMPIILER-MACRO.	lisper	15.107636	-3.9822743	comment	3.0	16.0	1652197445	-10.292072
31497496	Author of this blogpost here.  I thi	"Author of this blogpost here.  I think the post is good, though it's mostly aimed at the perspective of ""Racket is a very practical Lisp, for getting things done, akin to how Python is a very practical lisp"" and also ""DrRacket gives an accessible entry-point f"	paroneayea	15.169237	-3.9232736	comment	3.0	21.5	1653426078	-10.420431
31501118	I think I must be really bad at comm	I think I must be really bad at communicating, because you aren't responding to any point I was trying to make.  Let me try again :-)I think Racket, Scheme, and some Lisps are conceptually elegant, but they don't read well to people like me (or apparently the 	xscott	15.183732	-3.896844	comment	3.0	16.5	1653458726	-10.378277
31561569	> There's absolutely nothing wrong w	"> There's absolutely nothing wrong with Emacs being programmed in Lisp and it sure as hell isn't ""a poor architectural decision""I love Scheme and Lisp. I've probably written several million lines of code in both Scheme and Lisp and I've contributed code to sev"	light_hue_1	15.116508	-3.9612238	comment	3.0	11.0	1653932874	-10.467693
31584997	Funny enough I was talking with some	Funny enough I was talking with someone who wanted to make a lisp run on a very small ARM SoC and we discovered that the 7090 Lisp 1.5 was developed on likely had more core+drum than the SoC had ram.	aidenn0	15.134847	-3.9423842	comment	3.0	15.0	1654103713	-10.395252
14248502	7 - It's too easy to make a mess. An	7 - It's too easy to make a mess. And the mess made by brilliant people who are looking for any excuse to put higher order metaprogramming and functional concepts into production is considerable.8 - It has consistently lost in the marketplace in the last 20 ye	Will_Parker	15.132052	-3.960119	comment	3.0	24.0	1493746319	-10.538685
14249400	SICP uses Scheme, which is not Lisp.	"SICP uses Scheme, which is not Lisp. It was taught at an introductory level because some concepts of computation can be taught nicely with Scheme, up to making a compiler for another language (perhaps a ""real"" language in the student's minds?), but it doesn't "	Jach	15.131184	-3.9544506	comment	3.0	22.5	1493751167	-10.527447
14249826	> 1 - All those parenthesis. (Still 	> 1 - All those parenthesis. (Still a top objection)If you actually count parens fairly you will find that Lisp has no more than any other language, it's just that other languages use a mix of parens, square brackets and curly braces whereas Lisp only uses par	lisper	15.110371	-3.9842885	comment	3.0	26.0	1493753890	-10.34745
14252252	To me, that's a sign that maybe a la	To me, that's a sign that maybe a language has too little syntax.I can read C++, Javascript and PHP just as well in plain text because the other non-paren elements provide necessary contextual cues, along with nesting. Syntax coloring is helpful, but it should	krapp	15.082142	-4.0040555	comment	3.0	11.0	1493774000	-10.141367
14269307	Basically 'Relational Lisp' won. Jus	Basically 'Relational Lisp' won. Just three hours development time.	lispm	15.140847	-3.9434276	comment	3.0	11.0	1493935757	-10.457017
14248419	Lively Linear Lisp – 'Look Ma, No Ga	Lively Linear Lisp – 'Look Ma, No Garbage' (1991)	breck	15.156036	-3.926496	story	3.0	131.0	1493745875	-10.445836
14480806	>Keep in mind that a compiler like S	>Keep in mind that a compiler like SBCL will put Lisp performancewise in the rangeSimple short benchmarks don't show a complete picture of the language, since they're  easy to optimize>written in Macintosh Common Lisp needed 20 MB RAMAt the time when computers	FrozenVoid	15.11715	-3.9686835	comment	3.0	15.5	1496574881	-10.368671
14482286	For me the problem with Lisp is that	For me the problem with Lisp is that it's just ugly to look at. Compare some Lisp code to an equivalent in Python, just in terms of the raw visual appeal of the text. The parentheses and indentations obscure the logical meaning of the code.	d_burfoot	15.112073	-3.9828053	comment	3.0	10.5	1496594211	-10.304228
14516792	I'm curious about Forth, as it's pro	I'm curious about Forth, as it's probably the most important language I've never learned. I've done a fair bit of low-level, micro-optimised coding in C and assembly, but don't get much time for that kind of thing these days.How would you describe Forth in rel	robert_tweed	15.034497	-3.8170729	comment	3.0	15.0	1496952196	6.080826
14526968	L2 is an experimental programming la	"L2 is an experimental programming language that maps efficiently to machine code (like C). I think it is interesting because I have not seen
1) control flow primitives that are like Scheme's continuations but that are also efficient
2) L2's variant of s-expres"	murisitarusenga	15.118502	-3.9764194	comment	3.0	11.0	1497094131	-10.428879
14582073	I agree Emacs Lisp is pretty inferio	I agree Emacs Lisp is pretty inferior as far as lisps go, but IMO this seems pretty misguided.Technically impressive, I'm sure, but will it be around for another 30 years?If someone writes a module using this, will I be able to rely on that module keeping on w	josteink	15.114008	-3.9581873	comment	3.0	14.0	1497810670	5.8020697
14662105	> All is javaPossible tip: sneak in 	> All is javaPossible tip: sneak in ABCL when they're not looking. ABCL is a Common Lisp implementation for JVM, with (what seems like) relatively OK interop between Lisp and Java code.	TeMPOraL	15.118759	-3.9714072	comment	3.0	13.5	1498732247	-10.525057
20357850	I believe every new LISP author shou	I believe every new LISP author should begin their presentation with how does their language compare to other LISPs (CommonLisp, Racket and Clojure in particular). Mentioning it's a LISP-1 in the beginning is nice but not really enough.	qwerty456127	15.164591	-3.9341218	comment	3.0	16.5	1562274770	-10.7903
20375622	I wonder what is the most widely use	I wonder what is the most widely used, popular program, that has been written in Lisp?  Is it Emacs?Every time I sit down to try to learn Lisp, I end up wondering what the hell I'll use it for.  Functional programming languages seem to have flipped a bit in my	fit2rule	15.136947	-3.956642	comment	3.0	11.0	1562513978	-10.445688
20375694	Lisp hasn't failed. Software enginee	Lisp hasn't failed. Software engineering has failed to reach the conceptual level that Lisp operates at.	abrax3141	15.147538	-3.9417152	comment	3.0	21.0	1562514933	-10.444786
20376441	Was Pascal a failure? Lots of progra	Was Pascal a failure? Lots of programs were written in it. It had killer apps. Lots of programmers learned it. It made its way into the education system.Lisp might be viewed similarly. It’s not a fad and big companies don’t use it widely, but does that make it	reikonomusha	15.142527	-3.9451194	comment	3.0	15.5	1562521530	-10.44989
20378507	>Common Lisp is about on a par with 	>Common Lisp is about on a par with Python in what it has built in, inferior in its ecosystemabout 20x+ faster than Python, too; speed in the same order of magnitude than C.>and for some modern stuff (threads, sockets)pretty amazing you bring out threads in th	flavio81	15.121715	-3.9773455	comment	3.0	15.5	1562539837	-10.387381
20433525	Even if you give LISP a role, one al	Even if you give LISP a role, one also has to consider that it was a time when the most popular languages (C++, early Java, Perl) were pretty low-level and not at all web-friendly or async-friendly. LISP could bridge that gap because it makes it very easy to b	toyg	15.129662	-3.9651444	comment	3.0	11.5	1563114081	-10.435481
20519632	I wish I had internalized this earli	I wish I had internalized this earlier in my career — to write code for human readers first, and compilers second.I hope someone proves me wrong, but I think you really need a Lisp to do this right.  Things always break apart with other languages because they 	pieterk	15.122144	-3.9699185	comment	3.0	15.5	1564002023	-10.418307
20582036	> It is much easier to explain Lisp 	> It is much easier to explain Lisp if we begin from a blank slate.More so than any other language I know of, Lisp's reputation precedes it. Everyone seems to know all about Lisp. It's remarkably rare to find people who genuinely want to  explore Lisp the way 	zshrdlu	15.151467	-3.9375365	comment	3.0	19.5	1564647606	-10.486959
20607489	Lisp is not typically a low-level pr	"Lisp is not typically a low-level programming language, but rather extremely high-level (high level of abstraction)[0].The ""dialect language of Lisp"" quote just means that it's a variation of Lisp, but running in a Python environment.The term ""domain-specific "	jnbiche	15.152606	-4.000439	comment	3.0	14.5	1564936249	-10.414691
20699367	Lisp is the light saber of languages	Lisp is the light saber of languages : an elegant weapon for a more (mumble) age. Blasters and death stars are more effective.Nobody builds anything important with it, but it feels more pure to build toys with it than more practical languages. Some people make	ncmncm	15.132121	-3.960877	comment	3.0	10.5	1565812821	-10.448974
20736280	Each time I see a LISP related artic	Each time I see a LISP related article on Hacker News, I always ask myself why LISP is so popular only on HN. This is the only website where I hear about LISP. Is LISP popular on HN because it brings advantages to the table or is it popular because it looks co	madiathomas	15.151694	-3.9354422	comment	3.0	15.0	1566207704	-10.4949255
20940604	This was an incredibly enjoyable rea	This was an incredibly enjoyable read. A lesson to take away is that many of the ideas of Lisp can be taken advantage of without reeling in the entirety of an existing stack.Writing a Lisp parser is easy. Walking Lisp code is easy. Serializing Lisp code is eas	reikonomusha	15.132384	-3.9548004	comment	3.0	18.0	1568212452	-10.388271
20946952	They did parse it, albeit indirectly	They did parse it, albeit indirectly, by Racket’s reader. Co2 is a language, not a bunch of function calls, so it’s not quite the same as building a library in your favorite language. The article even gives examples of new syntax they produced.Parsing Lisp in 	reikonomusha	15.117998	-3.965443	comment	3.0	12.0	1568253168	-10.337605
23763203	I think it's perfectly fine to use a	I think it's perfectly fine to use a nested list object that gets picked apart with destructuring until the point that it becomes a maintenance or performance problem. (That point could arrive later that same day, or it might come never).This approach is one o	kazinator	15.09836	-4.0047407	comment	3.0	13.5	1594151028	-10.52042
23766165	> Symbol guidelines: You should use 	"> Symbol guidelines: You should use lower caseLike flipping through for the soft porn in a friend's ""romance"" novel, I must confess I searched straight for this guideline.It astonishes me that Lisp systems still default to all caps. Of course one can quickly d"	Syzygies	15.085437	-3.986384	comment	3.0	13.5	1594172805	-10.401286
23730107	Closos: Specification of a Lisp oper	Closos: Specification of a Lisp operating system (2013) [pdf]	ska80	15.132999	-3.946708	story	3.0	90.0	1593836648	-10.42743
23812437	This nicely provides empircal eviden	This nicely provides empircal evidence on the slowdown of using Forth, which seems to be around 10 to 20 times slower than optimized assembly. I was initially surprised by how poorly Forth performed on all counts of speed, memory usage and development time.  F	siraben	15.027473	-3.8294587	comment	3.0	11.0	1594570896	6.164697
23827057	This is a cute quote, especially if 	This is a cute quote, especially if one's difficult decisions involve letting other men do the actual work.It does not really apply to software, where most good programmers are obsessive and hard working. Yes, that also applies to Lisp, where someone has to wr	NLAIWhdj	15.1351595	-3.9467373	comment	3.0	18.5	1594684583	-10.432032
23905062	> Emacs Lisp, or Elisp, is generally	"> Emacs Lisp, or Elisp, is generally hatedThat seems unnecessary; of all the options above, it might be the one seeing the /most/ active development, and (given that ""Guile-macs"" isn't happening anytime soon) will continue to be in active development for a lon"	agambrahma	15.136646	-3.8717365	comment	3.0	10.5	1595317427	-10.343363
24031607	Any particular reason why Lisp doesn	Any particular reason why Lisp doesn't also tend to compose with smaller functions? Did it just happen to evolve that way? Is it easier to get the types of the smaller functions right when you have a compiler to help you like you do in Haskell?	m12k	15.129082	-3.9725657	comment	3.0	16.0	1596401359	-10.42628
24031742	Common Lisp doesn’t just have LOOP, 	Common Lisp doesn’t just have LOOP, it also has Series [1]. I think the actual philosophical difference may be that Haskell does this with  compiler support for stream function composition, whereas Common Lisp does it with a set of language-level macros any us	wrs	15.11677	-3.987316	comment	3.0	10.5	1596402377	-10.447847
24032124	I followed a (pure) mathematics educ	I followed a (pure) mathematics education, and I totally dig lisp.  On the other hand, I abhor haskell and hate almost everything about it!	enriquto	15.122351	-3.9807038	comment	3.0	14.5	1596405443	-10.474544
24032433	There's a more fundamental philisoph	There's a more fundamental philisophical difference:Common Lisp promotes the use of doclines and apropos tools in order to discover and understand behaviour, with symbol names that tend to describe the function of what they represent.Haskell leans on type sign	dleslie	15.119547	-3.9977174	comment	3.0	10.5	1596408203	-10.431718
33197955	I know that lisp compilers compile c	I know that lisp compilers compile compute heavy trivial functions directly to machine code. But how is the output of a program containing a lisp macro for example. Let's say define a lisp macro don't call it and generate its assembly. What is the machine code	terminalcommand	15.106175	-3.9851792	comment	4.0	14.0	1665704797	-10.336651
33289078	Wayflan: a from-scratch Wayland clie	Wayflan: a from-scratch Wayland client for Common Lisp	susam	15.137682	-3.9420156	story	4.0	118.0	1666366309	-10.43606
33463424	>After writing Lisp there is just so	>After writing Lisp there is just something wrong about how most languages have an additional step in order to generate the AST. Why?Because it's possible to have a lot better representations of computer code for humans than AST.	vegai_	15.087734	-4.0023603	comment	4.0	13.0	1667549532	-10.242803
33463862	You claim that Lisp is not dead but 	You claim that Lisp is not dead but is there any proof to that? I mean, beside the few posts on HN praising it.I have encountered hundreds of software engineers over the years and literally not one has ever mentioned Lisp.Could it be that Lisp is not dead beca	iLoveOncall	15.144261	-3.9391139	comment	4.0	13.0	1667554052	-10.442924
33575788	He certainly implies that he thinks 	He certainly implies that he thinks Common Lisp (and maybe Dylan) would have been as popular as Java is today if the lottery had played out differently.I wonder if anyone else feels this way. The programming world would be a different place.I can’t help but fa	comfypotato	15.136488	-3.9496715	comment	4.0	43.5	1668278686	-10.443279
33577298	> I have never really understood peo	"> I have never really understood people‘s aversion to parenthesesA common refrain from Lisp family language enthusiasts. (Personally I prefer Smalltalk-style ""conversational"" syntax to Lisp-style or C-style syntax, yet it's similarly unpopular.)For better or f"	musicale	15.123737	-3.9737165	comment	4.0	15.0	1668288546	-10.381368
33578176	The early LISP crowd just didn't get	The early LISP crowd just didn't get the concept of making a product. The idea that eventually you generate an executable and leave the development environment behind was totally alien. I used Berkeley's Franz LISP in my years at the aerospace company. That wa	Animats	15.131325	-3.9440846	comment	4.0	15.5	1668294907	-10.3468685
33605806	Doesn’t VS do that too though?  Also	Doesn’t VS do that too though?  Also if you’re talking about performance or memory profiling, why are you using a Lisp in the first place?	jimbob45	15.138054	-3.9488018	comment	4.0	20.0	1668491751	-10.445475
33617193	At first, I thought it was referring	At first, I thought it was referring to the conversation program, Eliza.Then I thought it was referring to a programming language, Eliza.Now I think it is referring to a modern programming language created to replicate the implementation of the conversation pr	zomglings	15.13518	-3.9341354	comment	4.0	17.5	1668557937	-10.302631
33752920	Paredit changed the way I write Comm	Paredit changed the way I write Common Lisp, and I personally consider it a sort of killer feature of developer experience. Combined with canonical indentation of Lisp code (where every line can be indented in essentially just a single correct way, determined 	reikonomusha	15.095368	-3.9919372	comment	4.0	14.0	1669473019	-10.370928
33753921	Is it worth trying to make a serious	Is it worth trying to make a serious effort with things like paredit, if you're already happy with default Emacs lisp modes? I feel like they're already overpowered.When I last tried this, I felt like I was struggling against the mode's understanding of my syn	perihelions	15.090922	-3.988837	comment	4.0	12.5	1669479608	-10.372367
33756038	Is there a particular tutorial or me	Is there a particular tutorial or method you followed to be fluent with Paredit. I like Lisp/Scheme but have never adopted any of the tools like Paredit or Parinfer but would be interested in doing so.	bmitc	15.089318	-3.9922457	comment	4.0	10.5	1669492553	-10.278107
33679816	Reader Macros in Common Lisp (2014)	Reader Macros in Common Lisp (2014)	susam	15.122077	-3.9616997	story	4.0	93.0	1668939728	-10.364741
33981454	You just need Lisp then, and you can	You just need Lisp then, and you can have all your DSLs you want for the problem at hand, instead of writing a new tokenizer, lexer, parser, interpreter every time. ;-)	sph	15.092129	-3.9964654	comment	4.0	12.5	1671008622	-10.237967
34016484	Such anger for this question. One go	Such anger for this question. One good answer (so far) and two unhelpfuls. It’s a good question perhaps asked badly. So I’ll take the liberty of rephrasing. Why learn lisp today instead of haskell, rust, kotlin, or any of the myriad other languages on offer?	johnnylambada	15.132318	-3.9559433	comment	4.0	11.0	1671208135	-10.451042
34017701	I tend to write with an excessive am	I tend to write with an excessive amount of parenthesis with context/tangents. I used to joke it was due to Lisp/Scheme being one of my first languages. Took me a few years to realize the ADD connection.	mrexroad	15.099733	-3.9839356	comment	4.0	13.0	1671213056	-10.359236
26633555	Depends on how hard you want to stre	"Depends on how hard you want to stretch the definition of ""Lisp"" here. But I guess if someone would make a proper Lisp for CLR and marry Emacs with PowerShell, then we'd be half-way towards resurrecting the corpse of Lisp Machine into a functioning zombie."	TeMPOraL	15.14064	-3.9439557	comment	4.0	14.0	1617105456	-10.445645
26631308	Compiling a Lisp to x86_64 (2020)	Compiling a Lisp to x86_64 (2020)	sillysaurusx	15.129695	-3.9487925	story	4.0	128.0	1617079120	-10.371433
26670734	A Critique of Common Lisp (1984) [pd	A Critique of Common Lisp (1984) [pdf]	susam	15.157523	-3.9281013	story	4.0	22.0	1617365092	-10.423135
26724182	Did we really “lose” the Lisp Machin	Did we really “lose” the Lisp Machine, or did we just realize that compiling Lisp to a general-purpose instruction set like x86 and then having someone else in charge of creating hardware to efficiently execute that is much more clever?	runeks	15.134546	-3.9415677	comment	4.0	25.5	1617800241	-10.405145
26694972	Early Lisp Part II	Early Lisp Part II	wglb	15.154371	-3.9323227	story	4.0	82.0	1617592716	-10.438996
26968152	ThinLisp (Threaded Interpreted Lisp)	ThinLisp (Threaded Interpreted Lisp) and Microprocessors	daly	15.12573	-3.954	story	4.0	3.0	1619609277	-10.393041
27036862	> I'm convinced Lisp self-asphyxiate	> I'm convinced Lisp self-asphyxiated by fighting a last stand on parentheses, which is so far from the point of Lisp.I think the reason Lisp self-asphyxiated is because people don't get it.Most try to spend a little bit time programming it as if it was C/Java	lmilcin	15.129232	-3.9629483	comment	4.0	13.0	1620131517	-10.313681
27060649	I don’t think it’s the parents, but 	I don’t think it’s the parents, but the s-expression themselves.LISPs forces you to maintain the stack for the parse tree in your head, something humans aren’t that great at — s-expressions are the programming language equivalent of center embedding, which is 	snotrockets	15.105984	-3.9898016	comment	4.0	16.5	1620291183	-10.331698
27005000	Emacs Lisp book revived: Marcin Bork	Emacs Lisp book revived: Marcin Borkowski	nanna	15.150606	-3.9326985	story	4.0	91.0	1619864153	-10.445116
27279379	As I've been learning more Emacs Lis	As I've been learning more Emacs Lisp and Common Lisp, I've found that they're really quite similar.  So I've been wondering why Emacs wasn't written in Common Lisp.  Of course, I think the answer to that one is the age of Emacs -- it was around before CL? -- 	acdw	15.137889	-3.9569457	comment	4.0	16.0	1621962246	-10.465353
27298202	> Does the Common Lisp standard need	> Does the Common Lisp standard need to be revamped?Yes.  Will it happen?  Almost certainly not, though I would like nothing better than to be proven wrong about this.> it just always amazes me how much innovation is still happening from simple, unfancy s-expr	lisper	15.101708	-3.997327	comment	4.0	14.0	1622077957	-10.362789
27309794	I know different pedagogical approac	I know different pedagogical approaches work for different people, but in my experience the fastest and easiest way to learn Lisp is to bite the bullet and jump right into it.   I think when it comes to the parentheses of Lisp, the premise is straightforward; 	wearywanderer	15.102402	-3.9968982	comment	4.0	15.5	1622157503	-10.324181
27311827	Wouldn't lisp done with indents and 	Wouldn't lisp done with indents and newlines instead of brackets and whitespace be fun?Edit: Apparently there's alternative syntax for Scheme called wisp.	scotty79	15.125202	-3.9617903	comment	4.0	13.0	1622177238	-10.430612
12553247	What's the state of other language i	What's the state of other language interpreters for guile? It's one of this things I always wanted to have a play with until I remember how much I hate lisp.	flukus	15.145712	-3.886206	comment	4.0	13.0	1474501441	-10.241491
12584491	I have been trying to get into the w	I have been trying to get into the whole Lisp paradigm for 1-2 years now.  I own Realm of Racket, amongst a collection of Lisp books.Racket is all the promise of developer-centric power tooling that puts Common Lisp to shame.I recommend you watch one of the co	616c	15.145056	-3.940698	comment	4.0	16.0	1474915571	-10.377362
12659439	I'm 26, and modulo the kids, this is	I'm 26, and modulo the kids, this is how I feel as well. I've been programming professionally for almost ten years, and I feel less and less pressure to keep up with the latest packages on NPM or whatever the flavor of the month is. It's much more interesting 	toxik	15.124818	-3.9600244	comment	4.0	17.0	1475835008	-10.448205
12703913	Symbolics made some really cool tech	Symbolics made some really cool tech. I just wish everybody would stop complaining about it. Yes, it was amazing. Yes, nothing modern can ever compare, not even Emacs, an environment arising from the same culture. Yes, we who experienced The Glory of the Lispm	qwertyuiop924	15.123221	-3.9494243	comment	4.0	42.0	1476391727	-9.132537
12704232	I used to work with a number of LISP	I used to work with a number of LISP machine believers at the MIT AI Lab/CSAIL. They all had more modern computers for day to day tasks, but used the lispm for most of their programming. This wasn't that long ago (I left in 2010), and I suspect that those mach	noahm	15.139894	-3.9380877	comment	4.0	30.0	1476394461	-10.405696
12704832	It was by far the most productive pr	It was by far the most productive programming environment I have ever used.  The level of integration of the editor, debugger, IO system, and interpreted and compiled code is unparalleled.  Interestingly it philosophically descended from MACLISP development on	gumby	15.083225	-3.9748895	comment	4.0	13.0	1476399286	-10.336257
12778708	I'm always impressed how the magic o	I'm always impressed how the magic of interpreters and compilers can be explained so succinctly.Inspired by Jonesforth, I wrote a complete Lisp interpreter in a single ARM assembly file: https://github.com/marcpaq/arpilisp	marcpaq	15.123844	-3.9525442	comment	4.0	11.0	1477316899	-10.331066
12801083	Why would functions in a lisp-2 be m	Why would functions in a lisp-2 be more awkward than in a lisp-1?PHP has been too long ago for me to understand your comparison.Would you please explain it differently?	aerique	15.119308	-3.9808786	comment	4.0	13.0	1477519438	-10.439327
12832560	My nomination for what we get wrong 	My nomination for what we get wrong over and over again: working under the assumption that there is One True Syntax.  There isn't.  Different syntaxes are suitable for different needs.A single language can support multiple syntaxes if the AST is exposed as a f	lisper	15.109288	-3.9888065	comment	4.0	11.5	1477864174	-10.366398
13012812	I was keeping a close eye on Eve unt	I was keeping a close eye on Eve until it changed direction from programming for everyone to yet another lisp. Is there any writeup/discussion on why this happened?I do like learning about mind-expanding languages, and something resonated with me when the Card	0x01	15.141083	-3.9488845	comment	4.0	16.0	1479806167	-10.466932
13096776	Practical Common Lisp is intro + rec	Practical Common Lisp is intro + recipes.I think Paul Grahams ANSI Common Lisp is the best if you are learning Common Lisp and Lisp. The language reference in the end is the extremely handy compact  reference for CL. http://www.paulgraham.com/acl.htmlCommon Li	nabla9	15.150695	-3.928421	comment	4.0	15.0	1480789535	-10.429867
13097333	Quicklisp is not panacea, even thoug	Quicklisp is not panacea, even though it simplifies matters to a substantial degree for people new to Common Lisp.On the other hand Quicklisp has serious issues:+ Minimal if any documentation of internals.+ A substantial chunk of the codebase can only be descr	armitron	15.134449	-3.9301732	comment	4.0	14.5	1480796549	-10.363562
13193167	Lisp was developed because McCarthy 	"Lisp was developed because McCarthy needed a tool for experimenting with AI. Found a video of McCarthy talking about AI: https://www.youtube.com/watch?v=Ozipf13jRr4And if anyone cares, here is nice Shirt with McCarthy on it ;)
https://www.teepublic.com/t-shirt"	kluck	15.1415205	-3.9479198	comment	4.0	20.0	1481896089	-10.462509
13195345	I don't think actual Lisp programmer	"I don't think actual Lisp programmers share this obsession with purity and ideal forms. It's more something that shows up in blog posts about Lisp by people who probably don't actually use it. The title of this one is telling: it's about ""the idea of Lisp.""On "	mbrock	15.135993	-3.949609	comment	4.0	23.5	1481911990	-10.420554
13195350	Garbage collection is not necessary 	Garbage collection is not necessary for lisp. Garbage collection only provides the illusion of infinite memory. Just like malloc/free.	crististm	15.103903	-3.9874153	comment	4.0	19.0	1481912057	-10.393296
13216290	I was only a lowly content builder a	I was only a lowly content builder and quest manager, so I can't speak much to how the server mechanics worked.But essentially, each entity (usually a mob) would have a set of event scripts (attached to some kind of internal lookup table), and each time an eve	SomeStupidPoint	15.133083	-3.957808	comment	4.0	10.5	1482193478	-10.411607
13253831	Lisp gets nothing but loving praise 	Lisp gets nothing but loving praise from most people who've really looked into it. To me, it's a really good indicator of someone's quality as a programmer - someone who treats programming as just a job will probably never run into it in any meaningful way, bu	kahrkunne	15.14006	-3.9457974	comment	4.0	14.5	1482667115	-10.456318
13257388	It's not a shame for a language to l	"It's not a shame for a language to lose against Python. Python has by far the best focus on usability of the standard libraries of all the languages I have ever seen (which includes major ones). As they say, ""practicality beats purity"".Let me compare for examp"	js8	15.10859	-3.9868636	comment	4.0	13.0	1482738115	-10.367899
13373794	Not evidence, only subjective gut fe	Not evidence, only subjective gut feelings, and I've had adoption in mind. But I'm hesitant to answer this question, because it will invariably lead to language flame-wars. Anyway, it seems to me that Algol68, Pascal, and Ada are less obscure than C and C++, b	jonathanstrange	15.106491	-3.9886358	comment	4.0	17.5	1484142232	-10.514967
13420856	http://www.red-lang.org for those wh	http://www.red-lang.org for those who doesn't necessarily need Lisp, but appreciates homoiconicity and other nice things.> This executable is a full blown native interpreter with a JIT, GC, etc.> A small, fast, native lispI have issue with the use of the word 	xaduha	15.118762	-3.9620123	comment	4.0	22.0	1484684842	-10.383772
13406663	Coroutine iters in Common Lisp	Coroutine iters in Common Lisp	codr4life	15.147742	-3.9388049	story	4.0	59.0	1484517880	-10.443003
13603675	Yep... Lisp machines were thoroughly	"Yep... Lisp machines were thoroughly in the ""mini""computer (cabinet-sized) category and completely missed out on the microcomputer revolution. IBM PCs were cheaper and got the job done. To an extent.The AI winter didn't help Lisp's popularity."	milcron	15.1383295	-3.9410422	comment	4.0	11.0	1486601649	-10.485897
27621014	Cl-bodge: a cross-platform Common Li	Cl-bodge: a cross-platform Common Lisp game and application framework	bananaoomarang	15.139521	-3.9369712	story	4.0	93.0	1624555835	-10.33708
27724010	Chuck Moore wouldn't consider ANS Fo	Chuck Moore wouldn't consider ANS Forth a .. Forth. There is something to be said about the spirit of Forth as expressed through Moore and his ideas versus the sterilized, industrial or more elaborate offshoots. For us loyal Moore acolytes, things like 8th and	creamytaco	15.011916	-3.785252	comment	4.0	12.5	1625339843	-8.271513
27715043	Architecture of Lisp Machines (2008)	Architecture of Lisp Machines (2008) [pdf]	todsacerdoti	15.13703	-3.9401958	story	4.0	150.0	1625250644	-10.418171
27805591	Lisp doesn’t really have many, if at	Lisp doesn’t really have many, if at all, super weird concepts that need months of thinking about in order to understand.Training seems like some lost art as we collectively move toward a more disposable programming ethos. Training a good programmer how to wri	reikonomusha	15.137693	-3.9501247	comment	4.0	30.5	1626048491	-10.437998
27877616	It's oh so convenient until it isn't	It's oh so convenient until it isn't; until you need to make distinctions between missing values and booleans.I still haven't decided if it's a good idea or not, and I've been hacking Common Lisp for more than 20 years.	codr7	15.129864	-3.9609683	comment	4.0	16.0	1626650456	-10.473893
12025702	"Lisp is close to syntaxless. What ""l"	"Lisp is close to syntaxless. What ""lisp syntax"" means is principled to the bones systems, including syntax. The fact that everything in lisp was in recursively defined lists meant you could reuse recursive thinking everywhere. An `infinite` tower of reuse. You"	agumonkey	15.112925	-3.9836943	comment	4.0	14.0	1467546127	-10.419266
27916876	Ask HN: Best way to learn Smalltalk?	Ask HN: Best way to learn Smalltalk?	avindroth	15.144463	-3.9432805	story	4.0	14.0	1626944706	-10.466501
12112781	> However, the good features of Lisp	> However, the good features of Lisp are now normal features of any modern language. And some of those features have gone into the dustbin for good reasons. And some of them (static vs dynamic typing) are personal taste.I definitely agree that with each passin	aidenn0	15.141351	-3.9483514	comment	4.0	14.0	1468805425	-10.432083
12113124	> I really miss that in other langua	> I really miss that in other languages.Elixir has a pretty good lisp-inspired macro system. And it's hygienic by default, too.And Elixir's pattern matching actually makes manipulating the forms even easier.	wtetzner	15.108851	-3.9886003	comment	4.0	15.5	1468813310	-10.373652
12197372	For me, it's a question of tooling.I	For me, it's a question of tooling.I would love to see a Common Lisp expert do an entire book on Armed Bear Common Lisp (Common Lisp entirely on the JVM). Edi Weitz hinted at what might be possible in his book, Common Lisp Recipes, but only very superficially.	claystu	15.145331	-3.9392743	comment	4.0	28.5	1469979081	-10.515049
12197450	> For me, it's a question of tooling	> For me, it's a question of tooling.emacs & slime[1]> I would love to see a Common Lisp expert do an entire book on Armed Bear Common LispI'm curious what you'd expect from such a book. There are some excellent books on CL in general and good libraries that p	jlg23	15.1286	-3.9665568	comment	4.0	24.5	1469980554	-10.425339
12197658	This article appears on HN on a regu	"This article appears on HN on a regular basis, so I thought people might be interested in a bit of historical trivia: the reason this article is called ""Lisp as an Alternative to Java"" instead of some other language is that it cribbed the title off my original"	lisper	15.109404	-3.9882169	comment	4.0	20.0	1469983818	-10.442238
12200123	I like Scheme/Lisp but I don't know 	"I like Scheme/Lisp but I don't know if I buy the whole ""learning Lisp turns you into a better programmer"". Maybe more knowledgeable but not necessarily a better a developer.In some ways learning a really flexible language like Lisp can turn you even into a rea"	agentgt	15.135605	-3.9587817	comment	4.0	17.0	1470023942	-10.486811
12200208	With Lisp I get the data thing but w	With Lisp I get the data thing but with ML you learn almost everything is a language.I can't really explain it but the whole variant/ADT pattern matching really forces to make you think of your problem domain as a specification or language (e.g. DSL). It is on	agentgt	15.113817	-3.9811723	comment	4.0	11.0	1470025962	-10.360033
12231738	Haskell and Lisp complement each oth	Haskell and Lisp complement each other in a lot of ways. Lisp is about empowering the programmer, and building on that empowerment. Haskell is about restricting the programmer, and then building on those restrictions. For a clear example, consider STM, how it 	jerf	15.125403	-3.9733188	comment	4.0	16.5	1470400262	-10.45205
12232568	I would like to see a light-syntax d	I would like to see a light-syntax dialect of Lisp that recognized semantic white space to get you out of the parentheses maze. (But you could still optionally use parens when you wanted.)Disclaimer: I've been coding almost exclusively F# and SQL for nearly 3 	jackfoxy	15.096716	-3.9956279	comment	4.0	11.0	1470407369	-10.335074
12327247	"Every Lisp article promoting the ""el"	"Every Lisp article promoting the ""elegance"" of its syntax will do the exact opposite to non-users of Lisp.This is no exception.From the first example on there is not one case where the Lisp syntax is a clearer expression of the concept and it's hard to justify"	abritinthebay	15.101102	-3.9996426	comment	4.0	26.0	1471710956	-10.386955
12359212	Part of the problem is that JSON and	Part of the problem is that JSON and Sexprs aren't that they AREN'T serialization formats. They've been pressed into service as such, but they are actually notation for datastructures: In python, it may not be idiomatic to crawl dicts like this, but in JS, tho	qwertyuiop924	15.107688	-3.9894702	comment	4.0	21.5	1472135069	-10.44485
12439249	EB and I both worked at Lucid, which	EB and I both worked at Lucid, which produced a Common Lisp system, not to my knowledge a version of Emacs (though maybe so after I left in 1989?).  Some other early employees knew and liked Lisp, but we didn't use it on any core functionality.  The text subst	skaphan	15.12767	-3.9499848	comment	4.0	12.0	1473195533	-10.444362
12499913	What is the scheme equivent of ANSI 	What is the scheme equivent of ANSI C or Common Lisp?By that I mean what is the default/main/vanilla scheme?	na85	15.14046	-3.9400444	comment	4.0	19.0	1473877896	-10.439535
28004869	We’re working on it :) [1]The intere	We’re working on it :) [1]The interesting problem is that it’s still kind of a developer experience mess. We can get pretty far with libbpf skeleton, libbpf-rs, etc, but I think we’re still waiting on the “killer” framework for this (or some other kind of lang	alexgartrell	15.099603	-3.973646	comment	4.0	15.5	1627624222	-10.31383
28042537	The ecosystem is a function of popul	The ecosystem is a function of popularity.Lisp isn't very popular because, at least in my opinion, it requires a relatively high level of maturity and experience to be used effectively on nontrivial projects.Every single project in Lisp (Common Lisp, Clojure) 	lmilcin	15.132912	-3.9606175	comment	4.0	15.0	1627937838	-10.461303
28042789	Lisp is a wonderful language (Common	Lisp is a wonderful language (Common Lisp in particular, but I am dabbling in Scheme now too), and absolutely fantastic for web development - seriously people should give it a chance in that space, I would totally develop any SPA in Lisp[1].QuickLisp is simply	abhinav22	15.110899	-3.9568264	comment	4.0	13.0	1627939115	-10.383292
35497834	Making IELM (Emacs Lisp REPL) More C	Making IELM (Emacs Lisp REPL) More Comfortable	billiob	15.135516	-3.9361775	story	4.0	83.0	1680989501	-10.499971
28109726	I'd like to hear your opinion about 	I'd like to hear your opinion about the following vision of language comparisons:Lisp as a language is much more malleable to the problem at hand.  This will mean it will attract a small group of smarter people, but create code which is harder to read and henc	hyperman1	15.123274	-3.96598	comment	4.0	16.0	1628453682	-10.42962
28165525	It has been discussed many times alr	It has been discussed many times already. Projects like this don't produce a Lisp. It's a toy, Lisp-like language at best. Calling it a Lisp does a disservice to the proper languages in the family.	nesarkvechnep	15.14048	-3.9469986	comment	4.0	14.0	1628829671	-10.469106
28166908	Surely a tour de force to do this in	Surely a tour de force to do this in this many languages. It’s been helpful to me to see how I might write a parser.On a different tangent: what is it about lisp that people love so much? Are lisp programmers much more productive? Is the code better in terms o	gigatexal	15.11386	-3.9795954	comment	4.0	11.0	1628845569	-10.328482
28179950	Plain old Common Lisp has similar is	Plain old Common Lisp has similar issues on the Mac. (And possibly Windows too - I haven't looked.)There's supposed a one click dev system installer, but it hasn't been updated for a while. There's a many click recommended collection of tools, but it looks lik	TheOtherHobbes	15.121863	-3.9522698	comment	4.0	10.5	1628942280	-10.40982
28285833	Lignum Nephriticum	Lignum Nephriticum	leto_ii	15.1353855	-3.9004714	story	4.0	42.0	1629787947	10.214377
28340114	> A concrete example: Lisp macros.Wh	> A concrete example: Lisp macros.Who didn't see this coming?For someone who's constantly extolling the importance of other languages and flexible thinking, Paul doesn't seem to ever be able to get his mind out of Lisp.> [Lisp macros] by their nature would be 	hota_mazi	15.128709	-3.9622655	comment	4.0	10.5	1630173974	-10.450617
28340765	I've been using Emacs for more than 	I've been using Emacs for more than 20 years, these are all (for the most part) non-issues, brought up by folks who either are new to Emacs or never read the documentation / dived below the surface.1. Emacs Lisp is great (for the problem domain), exists and wo	creamytaco	15.110553	-3.9483838	comment	4.0	14.0	1630178982	-10.354016
28376422	Emacs is a huge stumbling block for 	Emacs is a huge stumbling block for me. Everyone used emacs and expected you to as well.Common Lisp seems great - I'm so curious about CLOS - but I cannot get along with emacs, and I have tried.	LAC-Tech	15.10674	-3.9588366	comment	4.0	16.5	1630470302	-10.357099
28549730	I program multiple languages includi	I program multiple languages including Common Lisp.I don't buy that Common Lisp is too large. I would say the opposite is true. The base language is rather simple and what you mistake for language are just standard library.What is complex is it being Lisp lang	lmilcin	15.131907	-3.9602034	comment	4.0	21.0	1631785506	-10.42245
22313831	Why is that? What’s special about li	Why is that? What’s special about lisp?	dr_j_	15.151812	-3.932116	comment	4.0	23.5	1581549335	-10.48362
22413663	Assuming that the subtext here is wa	Assuming that the subtext here is wanting to address potential reasons for Lisp's chronic underpopularity, I think that all conversations like this miss the mark. Lisp was never failing to attract many users because people hadn't experienced sufficient evangel	mumblemumble	15.165336	-3.9274557	comment	4.0	24.0	1582642689	-10.452694
22414170	"I hate the ""lists of myths"" (that ar"	"I hate the ""lists of myths"" (that aren't) genre.> Common Lisp does not have compile-time type checking.Nothing in the standard mentions compile time checking requirements and there is no useful de-facto standard that you (or tooling!) could seriously build upo"	patrec	15.125186	-3.959984	comment	4.0	20.5	1582646262	-10.425151
22456471	In what way is PostScript worse than	In what way is PostScript worse than Forth? Please answer with specific details, and provide links to code if you can. I programmed a lot of Forth code before learning and moving on to programming a lot of PostScript code, so I've used each of them extensively	DonHopkins	15.005599	-3.8297482	comment	4.0	10.5	1583063515	-9.394933
22473260	Sure lisp is a wonderful language, b	Sure lisp is a wonderful language, but let's not pretend there's no difference between incidental and accidental complexity.	jdc	15.143647	-3.9462504	comment	4.0	14.0	1583230889	-10.470295
22474677	One of the traditional criticisms of	One of the traditional criticisms of Lisp, though, is that it lets programmers re-introduce a whole lot of accidental complexity in their Lisp code, and, worse, everyone introduces a completely different set of accidental complexities into their code.	jerf	15.1369915	-3.9539053	comment	4.0	11.0	1583245691	-10.480159
22584022	I've only written a little bit of it	I've only written a little bit of it, but it brings me anxiety.Any language without static types brings me a certain degree of anxiety, thinking at all times about all the ways a  given piece of code might be misused and go terribly wrong.But in Lisp you add a	_bxg1	15.142842	-3.9488754	comment	4.0	13.5	1584286727	-10.480879
22728913	What are you interested in? The reco	What are you interested in? The recommendations I can make for someone fascinated with LISP are different than the ones I can make for someone interested in computing history are different than the ones I can make for someone interested in processor design and	kick	15.145919	-3.9449275	comment	4.0	15.0	1585583202	-0.25109902
19112125	The super-complicated LIFO example i	The super-complicated LIFO example is, unfortunately, a contrived example:“Ich stimme dem Maler, der die Meinung, dass Rot keine Farbe ist, vertritt, zu.”This sentence can be rewritten in German just as in the English translation:“Ich stimme dem Maler zu, der 	kara_jade	15.134665	-3.9442477	comment	4.0	12.0	1549609460	-10.405873
19122578	This article is chock-full of misinf	This article is chock-full of misinformation.> an s-expression [is] a fancy term for a list of [cons] cellsNo, it's not.  An S-expression is a serialization of a (single) cons cell, whose elements might be other cells.>  We're using a vector instead [of cons c	lisper	15.112458	-3.984247	comment	4.0	26.5	1549724337	-10.516081
19175423	> Due to COBOL's lack of functions a	> Due to COBOL's lack of functions and recursion, the recursion required for Lisp is built from the ground up using file processing.Does this mean that they are storing the stack as records on a file ? Hopefully they will implement tail recursion as soon as po	mrighele	15.099467	-3.97312	comment	4.0	13.0	1550270562	-10.4759655
19222164	Mathematica is literally the worst P	Mathematica is literally the worst PL I've ever used, especially since you effectively have to use their built-in editor that doesn't even have multiple undo. Of course, it is the least-worst symbolic system out there currently. But, it's not like lisp wouldn'	lenticular	15.089622	-3.9822056	comment	4.0	11.5	1550797094	-10.300437
19304819	One of the reasons why Pre-Scheme wa	One of the reasons why Pre-Scheme was so lovely to use is because when it transpiled to C, the C was highly readable. You could follow the output of the Pre-Scheme compiler and know exactly what it was doing, provided you knew idiomatic C.From a readability st	bitwize	15.226765	-3.772128	comment	4.0	11.0	1551729970	-7.511563
19318394	I always wonder if Common Lispers wh	I always wonder if Common Lispers who bash Scheme know that Guy Steele (who also is the chairman of the Common Lisp standards committee) was the co-creator of Scheme.	jhbadger	15.140876	-3.9468195	comment	4.0	13.0	1551875760	-10.484365
19346797	Common Lisp currently isn’t so great	Common Lisp currently isn’t so great for purely functional programming. The language has the equivalent of GOTO, imperative loops, mutable objects, etc. But work is being done to make it a better functional language.	reikonomusha	15.119874	-3.9853108	comment	4.0	11.0	1552148285	-10.467114
19407924	Lisp is pretty ugly :)    (eql (* x 	"Lisp is pretty ugly :)    (eql (* x (+ y z)) (+ (* x y) (* x z)))

I wonder if its famed sense of enlightenment is partly just overcoming the mental hurdle of it's syntax.Edit: typo fix, had x/z mixed up"	QuadrupleA	15.105874	-3.990739	comment	4.0	17.0	1552746069	-10.376991
19407962	Some would argue that the fact that 	Some would argue that the fact that you have all of those alternative forms is part of the problem. Lisp is one of the (if not the) most individualistic programming languages around. Lisp makes it easy for a programmer to create their very own impenetrable, ar	chongli	15.150705	-3.9424286	comment	4.0	11.0	1552746645	-10.457653
19408072	he doesn’t make any coherent argumen	he doesn’t make any coherent argument as to why one is more clear or preferred than the other. he simply states it and moves on with this bias. for example, when he compares 2 to 2a, i feel he doesn’t really address anything and just states his preference as t	nikofeyn	15.076631	-4.0232806	comment	4.0	12.5	1552747883	-10.349793
19408025	Why all Lisp editors/IDE's look like	Why all Lisp editors/IDE's look like Emacs?	badsectoracula	15.064059	-3.9799387	comment	4.0	10.5	1552747383	-10.326539
19546993	As much as I love Forth, I am a bit 	"As much as I love Forth, I am a bit troubled by the list in the article:Some interesting but by no means complete Forth properties:    no errors
    no files
    no operating systems
    no syntax

uhm...  Forth does have errors like Stack Underflow.  When I p"	protomyth	15.01957	-3.8257174	comment	4.0	18.5	1554145885	6.1034784
19678120	I second the recommendation for Prac	I second the recommendation for Practical Common Lisp, even for complete beginners and newcomers to Lisp. It covers the very basics, and the writing style is accessible and patient.	nothrabannosir	15.143816	-3.940775	comment	4.0	16.0	1555456034	-10.455397
19671775	Lisp Machine Hacking (2018)	Lisp Machine Hacking (2018)	kristianp	15.131179	-3.9407656	story	4.0	90.0	1555399579	-10.434674
19684433	Sounds like Lisp Machine Lisp reborn	Sounds like Lisp Machine Lisp reborn.	guicho271828	15.145738	-3.9356272	comment	4.0	11.0	1555521287	-10.447557
19905409	Maybe this will need C based highly 	Maybe this will need C based highly optimized backend as well, however, the code looks very clean and beautiful to me. I hope someday differentiable programming becomes possible in common lisp.	chunsj	15.126787	-3.9565573	comment	4.0	21.0	1557792474	-10.404657
15882370	Lisp seems to take the exact opposit	Lisp seems to take the exact opposite approach as Go. The power of languages like Lisp appeal to me, so I have a hard time understanding why people want a language that intentionally limits itself. Read Graham's book and he's talking about how macros are great	goatlover	15.103945	-3.9972227	comment	4.0	17.5	1512769849	10.264263
15893380	    One strange phenomenon when codi	"    One strange phenomenon when coding in C is using macros. This is not something which can be seen in other programming languages (other than C++).

This is false. Lisp is a language, or rather, a family of languages, where macros play a giant role, and the "	phoe-krk	15.114562	-3.9766128	comment	4.0	12.5	1512938384	-10.423331
17909302	Why not use lisp syntax, at all? Why	Why not use lisp syntax, at all? Why do we have to reinvent syntax every single generation? I'm not an old school engineer (I'm in my early 20s and in my first job, freshly outta college) but I can't see why we don't use lisp, prolog or ML syntax for everythin	gnulinux	15.105362	-3.9916961	comment	4.0	21.5	1536071676	-10.413501
17980697	Heh.  Emacs/lisp users always make p	"Heh.  Emacs/lisp users always make posts like: ""look at this great [thing] to completely simplify [thing]"" while simultaneously posting 82 steps to get it all working and automated :)"	pixelrevision	15.104267	-3.9884887	comment	4.0	13.0	1536860813	-10.392842
18105985	> Development convenience was also a	"> Development convenience was also among the collateral damage.Don't you find that web & javascript are pretty much a straight denial of your argument ?They're ""secure"" (meaning we let anyone's javascript code just run in our browsers, even embedded in other p"	candiodari	15.099146	-3.9890685	comment	4.0	12.0	1538312336	-10.418768
18030386	Ask HN: Any good Lisp-lile language 	Ask HN: Any good Lisp-lile language that compiles to both JS and Python?	nnq	15.112803	-3.9753006	story	4.0	7.0	1537428007	-10.441608
18183986	And there are related efforts to upg	And there are related efforts to upgrade the lisp used in emacs to a more modern and standardized version.I think it is GuileEmacs I am remembering.I hope to two efforts are compatible.	wscott	15.126199	-3.9284554	comment	4.0	12.0	1539172676	-10.422914
18193079	> Allegro CL or Franz Lisp.Same thin	"> Allegro CL or Franz Lisp.Same thing.  Franz is the company.  Allegro Lisp is the product.  Like ""Apple Macintosh computer.""> But why is it 'high performant' compared to other implementations? Like say CMU CL(now SBCL).Somewhat better compiler, but mainly lot"	lisper	15.135489	-3.9496999	comment	4.0	13.0	1539262551	-10.430254
18203374	I'm just now starting to crack open 	I'm just now starting to crack open some Lisp tutorials, coming from the OOP side of the fence, so please excuse the ignorance. For my learning purposes, would you be open to explaining how symbolic expressions would circumvent the need for a file system?	jj12345	15.122398	-3.9628398	comment	4.0	26.5	1539367611	-10.37502
18215967	Why do people keep implementing LISP	Why do people keep implementing LISP on everything? Aren’t there more interesting things to do?	iddan	15.1445265	-3.9439893	comment	4.0	12.5	1539556970	-10.453676
18226237	The lisp circle jerk is a little too	The lisp circle jerk is a little too much sometimes.	adamnemecek	15.155507	-3.9326775	comment	4.0	11.5	1539661225	-10.427031
18227631	Chuck Moore always says he did not i	Chuck Moore always says he did not invent FORTH, but discovered it.It's fascinating the relationship between Lisp and Forth. I am quite sure there is something about these two old simple languages and the concept of duality in mathematics that we are missing.	yiyus	15.077766	-3.8539188	comment	4.0	24.0	1539678056	6.116839
18227697	> It's fascinating the relationship 	"> It's fascinating the relationship between Lisp and Forth.Is there more to the relationship than ""Lisp is written as a preorder tree, and Forth is written as a postorder tree""?"	thaumasiotes	15.093347	-3.890808	comment	4.0	13.5	1539678894	5.9170094
18267493	Elisp is awesome! Emacs is truly an 	Elisp is awesome! Emacs is truly an integrated development environment also thanks to this great extension language.This paper provides a nice overview of past and also very recent language developments. For example, support for bignums (Section 7.3) is one of	triska	15.099376	-3.9662414	comment	4.0	27.0	1540119833	-10.338018
18282262	C++ is getting more and more like Li	C++ is getting more and more like Lisp.	nemoniac	15.124194	-3.9648864	comment	4.0	11.0	1540291541	-10.414612
18309404	Lisp is a fun language to program in	"Lisp is a fun language to program in. I learned Lisp after already being familiar with Java / Python and some other languages, which maybe made it even more beautiful.One of my favourite pieces of code is a Lisp REPL in Lisp:    (defun repl()
            (loop"	Insanity	15.116363	-3.9685235	comment	4.0	22.5	1540563446	-10.448288
18309616	So the author was excited about the 	So the author was excited about the concept of function composition? I'm a fan of lisp but I'm not seeing what's particularly novel about lisp here.	pweissbrod	15.141103	-3.9484055	comment	4.0	10.5	1540564862	-10.442031
18310164	> the number of parentheses is just 	> the number of parentheses is just mind bogglingThere aren't actually more parens in a Lisp program than a program written in a C-like syntax (which is really an algol-like syntax).  They just stand out more for two reasons:1.  There is less punctuation in ge	lisper	15.10179	-3.9986043	comment	4.0	12.5	1540567849	-10.422092
18310706	my question is yes, lisp.. but what 	my question is yes, lisp.. but what is beyond lisp?	moocowtruck	15.143238	-3.9438884	comment	4.0	10.5	1540571099	-10.477421
18348320	A few questions for the Lisp fans ou	"A few questions for the Lisp fans out there:1. The summary here seems to be ""modern high-level languages, used, well, are just as productive as Lisp."" Does that seem right?2. One of the tensions for me in technology is between love of simplicity and love of co"	wpietri	15.138971	-3.9523146	comment	4.0	12.5	1541012078	-10.487727
18348294	My summary: he worked at Google in t	My summary: he worked at Google in the early 2000's (when there were indeed many astonishingly productive progammers), and he saw them being super productive in languages like Python.  And he himself became productive in such non-Lisp languages.He uses the has	chubot	15.102195	-3.9815824	comment	4.0	11.0	1541011912	-10.501146
18428811	> Is this really true?Yes. There com	> Is this really true?Yes. There comes a moment in which you suddenly stop minding parentheses. For me it was when I started reading SICP and doing its exercises on paper. After writing a couple Lisp expressions by hand, something clicked in my brain, and sinc	TeMPOraL	15.104566	-3.9937248	comment	4.0	10.5	1541972789	-10.33842
18428908	I’ve used Lisp for decades, so it’s 	I’ve used Lisp for decades, so it’s hard to remember a time when the parentheses bothered me, but every new programming language has some surface syntax that can be off-putting. I used to hate the hard to type curly braces when I started with C, my fingers did	todd8	15.105577	-3.9925423	comment	4.0	12.5	1541973732	-10.3661375
18433582	> what Lisp developers have had sinc	> what Lisp developers have had since the early '80sWe absolutely did not have a globally, network-accessible terminal with pay-as-you-go computer time.I have no experience or interest in repl.it, but I think you're understating things somewhat.	geocar	15.124945	-3.960407	comment	4.0	12.5	1542040568	-10.584625
18484628	Because most of the time they repres	Because most of the time they represent a huge debugging effort.For example, how do you step a macro expansion in Rust at any given point in a source level debugger?Yep, you don't.Even on Lisp, if we want something more developer friendly than (macroexpand) th	pjmlp	15.101076	-4.0016747	comment	4.0	12.0	1542611138	-10.388098
18532162	What part of the code that will comp	What part of the code that will compile under this simple compiler (i.e. `(+ 2 (+ 3 4))`) _doesn't_ have lisp semantics?	fao_	15.112752	-3.9765363	comment	4.0	10.5	1543225457	-10.3749075
18533768	I will admit that this stuff is way 	I will admit that this stuff is way over my head, but it's things like this that make me wonder why the Lisp machines/processors never really caught on...can anyone here shed some light into this for me?	tombert	15.143144	-3.9389193	comment	4.0	13.0	1543244617	-10.427913
18449408	Introducing SourceKit-LSP	Introducing SourceKit-LSP	mbroncano	15.084019	-3.9581249	story	4.0	61.0	1542199479	-10.436093
18540221	What makes Lisp macros so special?	What makes Lisp macros so special?	neokantian	15.11918	-3.9809945	story	4.0	7.0	1543303111	-10.381831
18667951	> When you speak of non lisps are ‘b	> When you speak of non lisps are ‘blub’ you disregard the actual characteristic of those languages and how they fit to the task.What does 'blub' mean?	FigBug	15.147609	-3.93792	comment	4.0	23.5	1544650425	-10.464741
18705005	This is fascinating to me because co	This is fascinating to me because coming at it as a Lisp programmer, my impression of LLVM is that it's primarily a library for doing Lispy things in C.  It kind of makes sense, then, that you should be able to use the codegen parts of LLVM for implementing Li	ken	15.125361	-3.9545863	comment	4.0	15.0	1545116703	-10.393344
18801682	I love the story of this and the shi	I love the story of this and the shirt turned out pretty good in my opinion. There's just one problem: I really don't know anything about Forth or its creator. Which is probably a shame, I realize. I simply came into programming as a hobby when C was the hotne	jchw	15.023547	-3.8120246	comment	4.0	15.5	1546369940	5.9660044
18855667	I'd love to know Lisp, just like I'd	I'd love to know Lisp, just like I'd love to know Python. I have no experience in either (I come mostly from Java, javascript with some Ruby and some ancient C/C++ experience). When I look at Python code, I understand what it does. I don't think I've ever writ	mcv	15.120471	-3.972681	comment	4.0	20.0	1546957586	-10.34413
18883910	I wish someone would release a good 	I wish someone would release a good book on Metasploit. Every book and tutorial I've found has been either helpful but too short, out of date, or used an example which you couldn't follow along with (either because they used a feature in the paid for product o	nobody271	15.139978	-3.940382	comment	4.0	10.5	1547218494	4.8269196
29780307	Is there any big corp using it massi	Is there any big corp using it massively? why the shift up? It's kind of curious that a lisp is at the top of the list (according to SO). Not surprising, but curious. What do you think? any ideas?	ihojman	15.152299	-3.9351447	comment	4.0	11.0	1641214722	-10.443081
29858477	This book is probably the most fun I	This book is probably the most fun I have had with a programming book. I remember going through most of it the first day I cracked it open.Curious if anyone knows other books that take a similar approach: fun but not dumbed down.I tried a few from nostarch, in	joe8756438	15.1496935	-3.9305146	comment	4.0	10.5	1641689110	-10.4453125
29861201	I was slightly surprised to learn ho	I was slightly surprised to learn how well Common Lisp had implemented its types. I keep wondering why CL almost completely failed to break into the minds of people in early 2000s. That was about the time I first learned about python, which kind of seemed to b	vegai_	15.130565	-3.9592328	comment	4.0	16.0	1641714327	-10.459648
29891523	Common Lisp: Macroexpand-time branch	Common Lisp: Macroexpand-time branching	CapitalistCartr	15.110887	-3.9765983	story	4.0	70.0	1641909722	-10.325654
29948263	That sounds a lot like a macro. Is t	That sounds a lot like a macro. Is the main difference that macros evaluate at compile time and fexprs evaluate at EVAL time? I imagine a facility like EVAL-WHEN[1] can blur the distinction.[1] http://www.lispworks.com/documentation/HyperSpec/Body/s_eval...	User23	15.120519	-3.9801946	comment	4.0	10.5	1642267516	-10.291746
29988180	Naughty Dog transitioned away from G	Naughty Dog transitioned away from GOAL after they were purchased by Sony. Uncharted and TLOU are mostly written in C++.	dharmab	15.131936	-3.8945272	comment	4.0	13.5	1642551660	-6.845038
29989968	In the cause of Naughty Dog, it was 	In the cause of Naughty Dog, it was Andy Gavin who introduced Lisp and GOAL and was one of the co-founders of Naughty Dog. He came from MIT and was a student of Rodney Brooks.https://en.wikipedia.org/wiki/Game_Oriented_Assembly_Lisphttps://all-things-andy-gavi	bmitc	15.111542	-3.9033225	comment	4.0	18.0	1642566438	2.0942261
30045522	Writing a Lisp interpreter an Lisp i	Writing a Lisp interpreter an Lisp is cheating. You get the reader and garbage collector for free.Don't get me wrong, it's fun. But if you want to learn about things, writing a Lisp interpreter in some (relatively speaking) low-level language like C/C++ is a m	krylon	15.119921	-3.9681714	comment	4.0	11.5	1642938926	-10.364044
30174122	> With paredit, you get meta level d	> With paredit, you get meta level direct AST manipulation support in emacs that is still light years ahead of any programming IDE out there.Do you happen to know of a video or article with visual examples that demonstrates this? I always hear about these thin	bmitc	15.079169	-3.9983091	comment	4.0	15.5	1643780095	-10.253404
30174171	Lots of reasons.1) Lisp acquired a r	"Lots of reasons.1) Lisp acquired a reputation of being associated with AI, back when that was a bad thing, lots of government-funded ""expert system"" boondoggles and the like. It is not considered a general purpose language, despite being one.2) Lisp is thought"	bitwize	15.137565	-3.950282	comment	4.0	15.5	1643780511	-10.432069
30186395	When you capitalize lisp as in Lisp,	When you capitalize lisp as in Lisp, that usually refers to Common Lisp (also the lisp being discussed in the whole thread). Have you implemented Common Lisp?	medo-bear	15.140921	-3.9404345	comment	4.0	15.5	1643847346	-10.478759
30271989	Lisp in Production: an interview wit	Lisp in Production: an interview with the guys behind Nyxt Browser [video]	pedrodelfino	15.111589	-3.9341671	story	4.0	105.0	1644410926	-10.246807
30372056	Lisp Alien 3D Model	Lisp Alien 3D Model	kikytokamuro	15.142087	-3.9381154	story	4.0	61.0	1645098219	-10.3836355
30685183	> the system language is awkward (no	> the system language is awkward (no namespaces, dynamic scoping by default, ...)RMS's dislike of Common Lisp really caused a colossal amount of damage.  Imagine an Emacs written in Common Lisp instead of Emacs Lisp, with decades and decades of improvements.  	zeveb	15.122118	-3.9570749	comment	4.0	10.5	1647352016	-10.445925
16308922	> So this is literally LispNo, it's 	> So this is literally LispNo, it's close to S-expressions, but it's not a programming language like Lisp.> just with curly braces instead of parenthesisWell, and more syntax than S-expressions: it's got both objects and arrays as fundamental structures instea	dragonwriter	15.094644	-3.9980304	comment	4.0	13.5	1517841026	-10.386367
16313736	The problem with these schemes is th	The problem with these schemes is that they're at odds with metaprogramming. One huge advantage of s-expressions is that  the code is expressed using data literals. You can take any piece of code transform it as you would any regular data and then run it.The b	yogthos	15.056209	-4.0526395	comment	4.0	16.5	1517879722	-10.541616
16351023	Common Lisp Brazil Community	Common Lisp Brazil Community	lerax	15.154069	-3.9329162	story	4.0	63.0	1518319962	-10.488537
16392727	See what I did there?Despite the goo	See what I did there?Despite the good intention, no, because you're trying to explain lisp using lisp. If I knew lisp, I wouldnt need you to explain what code-as-data means.Maybe it's time for a different strategy. As a matter of fact, I've tried to explain co	quadcore	15.112502	-3.9812205	comment	4.0	39.5	1518793070	-10.413175
16394173	Can you elaborate what you would exp	Can you elaborate what you would expect from such a system ?As someone not having much familiarity with CLIM or common lisp, I seem to be lacking the perspective to appreciate the relevance of this technology in 2018.Things like support for truetype rendering,	lf-non	15.083642	-3.9940455	comment	4.0	12.5	1518803416	-10.436038
16405083	Is there any flavor of lisp that is 	Is there any flavor of lisp that is close to luajit performances and still small?	egnehots	15.151784	-3.9336371	comment	4.0	15.5	1518943490	-10.439554
16407689	As much as I like Lisp, I don't thin	As much as I like Lisp, I don't think your choice of language will make or break your startup.	didibus	15.138453	-3.947378	comment	4.0	11.0	1518981656	-10.48282
16411457	Not the grandparent poster, but step	Not the grandparent poster, but stepping in.Lisp, due to its easy metaprogramming, gives abstraction enthusiasts rather more rope to hang themselves than languages which make abstraction inconvenient (e.g. Go, which has a simple type system, or Java, which is 	kornish	15.110344	-3.9788997	comment	4.0	14.0	1519027428	-10.307314
16593084	I started to learn Lisp, and struggl	I started to learn Lisp, and struggled after trying to use:- Quicklisp (lisp package manager)- ASDF (builder)They are very complicated to use and understand.Then I abandoned Common Lisp...	weeber	15.135161	-3.948335	comment	4.0	12.0	1521124001	-10.441573
16612366	I wonder if Forth is still used toda	I wonder if Forth is still used today for some applications of if anyone has stumbled over some production Forth code lately.For me, Forth is a language in which you can easily shoot yourself in the foot. One element more or less on the stack and you run into 	s-macke	15.034054	-3.817496	comment	4.0	12.5	1521386829	6.113063
16695002	I'm a forth programmer, I've impleme	I'm a forth programmer, I've implemented an editor in forth, a more(1) clone in forth, a grep(1) in forth and I did a bunch of stuff I've forgotten in forth for the geophysics department at UW Madison.I HATE forth.  It's a miserable language, I just hate it.An	luckydude	15.037913	-3.8181832	comment	4.0	15.5	1522207523	6.103786
16765831	I think for people who want to be ab	I think for people who want to be able to have a bit of lisp into their daily lives, Clojure is where the majority of the current industry-focused mindshare is going. At least as far as new development of language features is concerned.For people who are less 	peatmoss	15.1394205	-3.9637454	comment	4.0	16.0	1522942534	-10.843286
16743856	Common Lisp Standard Draft	Common Lisp Standard Draft	tosh	15.182184	-3.9037244	story	4.0	103.0	1522757377	-10.464446
16819998	I'm biased but I'd go Common LispThe	I'm biased but I'd go Common LispThe basics:- SBCL: generates fast[0] code. runs well on windows- Quicklisp: The package manager which lets you install the packages mentioned belowI've got a video here that should help with getting set up on windows https://ww	baggers	15.132394	-3.928093	comment	4.0	11.5	1523535029	-10.422332
16900787	I find this comment frustrating, jus	"I find this comment frustrating, just like many of the Lisp comments. Asserting a condescending statement with zero explanation. These Lisp comments aren't taking the form ""oh, Lisp has something like this too, we can learn from it,"" instead it's, ""something l"	wcrichton	15.145825	-3.9461348	comment	4.0	11.0	1524462240	-10.460219
16952539	Common Lisp’s object system (CLOS) a	Common Lisp’s object system (CLOS) allows you to specify on a method by method basis whether or not the most-specific method has priority or the least-specific one does. Generally people just use the default behavior—least specific first—but this post makes th	fiddlerwoaroof	15.112738	-3.9739146	comment	4.0	13.5	1525017612	-10.453303
16973691	> It annoys me when people conflate 	> It annoys me when people conflate a terse and/or illegible programming style with functional programming.The problem is, functional programming languages are almost always harder to read than other languages. Haskell is the obvious example, but Lisp is prett	twblalock	15.110003	-3.9928694	comment	4.0	14.0	1525229702	-10.408504
17037285	> I sometimes wonder why Lisp has no	> I sometimes wonder why Lisp has not been more popular in the technology industry. Is it the lack of sufficient marketing? Is it the lack of an extensive library ecosystem?Data-point of one here, but I was instantly turned off by the conflation of the empty-l	s_kilk	15.138727	-3.9592295	comment	4.0	22.0	1525942871	-10.651803
17040077	> I sometimes wonder why Lisp has no	> I sometimes wonder why Lisp has not been more popular in the technology industry.Larry Wall said that a language should make the easy things easy, and the hard things possible.  I think the problem is that Lisp doesn't make the easy things easy.Before you ta	AnimalMuppet	15.135313	-3.9562755	comment	4.0	13.5	1525968041	-10.412702
17042315	You quoted two companies using Lisp 	You quoted two companies using Lisp when there are millions of Java devs. That's like a boxer with a record of 1-500. I love Lisp, but c'mon...I guarantee it has far more hobby users than professional users.ABCL, FRANZ, ALLEGRO, SBCL, CLISP, GNU CL, Clozure mi	FractalLP	15.131583	-3.956609	comment	4.0	16.5	1525981384	-10.453511
17120465	Some points:- Yes, the original publ	Some points:- Yes, the original publication year was 2000. I've added that to the file.- @HelloNurse: You've got the key point. I provided Lisp code to teach AI; but my goal was to teach AI, not Lisp. As more schools and students were familiar with Python and 	norvig	15.132179	-3.9599588	comment	4.0	11.0	1526926681	-10.461719
22861273	Interestingly, though, some language	"Interestingly, though, some languages get it right:    northrup@Topaz:~/Desktop$ perl -de1
    
    Loading DB routines from perl5db.pl version 1.55
    Editor support available.
    
    Enter h or 'h h' for help, or 'man perldebug' for more help.
    
    ma"	yellowapple	15.127233	-3.9532194	comment	4.0	16.0	1586820215	-10.378415
23042311	If I may ask, what references would 	If I may ask, what references would you recommend to someone interested in something like Lisp, but who has never touched a functional language before?	PythagoRascal	15.141488	-3.9496334	comment	4.0	16.0	1588343385	-10.439462
23054556	After learning s-expression based sy	After learning s-expression based syntax, I am just baffled why we even bother with anything else.When you play around with different Lisps, the syntax is always the same, the language differences becomes the semantics only.Other languages put too much emphasi	didibus	15.093056	-4.0009584	comment	4.0	16.0	1588450374	-10.353733
23068151	This seems convoluted compared to sa	This seems convoluted compared to say moving the Lisp implementation from Emacs Lisp to Common Lisp, of which several native code compiling implementations exists.	fmakunbound	15.1292095	-3.9545507	comment	4.0	24.5	1588600877	-10.409153
23164966	Is it really Lisp without cons?	Is it really Lisp without cons?	pjc50	15.155348	-3.9317927	comment	4.0	15.5	1589360695	-10.478148
23167779	I don't use lisp languages, but one 	"I don't use lisp languages, but one basic difference this has from other lisps is that functions accept multiple expressions, e.g.:    (defn greet [firstname lastname]
      (def fullname (string firstname "" "" lastname))
      (string ""Hello, "" fullname))

In "	frankpf	15.1067295	-3.9901311	comment	4.0	11.0	1589383531	-10.3689
23234112	Yep, I've used Common Lisp in produc	Yep, I've used Common Lisp in production. Several times. I'm in the middle of writing a new app with Lispworks right now.Common Lisp is generally the first thing I think of for any new work I undertake. There are exceptions, but usually my first choice is Comm	mikelevins	15.130364	-3.949197	comment	4.0	25.5	1589891548	-10.439202
37898848	Im curious - what is it about forth 	Im curious - what is it about forth that makes you consider it to map more closely to the machine?I've done a handful of forth projects as part of a code-dojo years ago. I wouldn't have considered it low-level.	Normal_gaussian	15.04151	-3.8111928	comment	4.0	11.0	1697459051	6.073744
25492099	> Lisp has extremely powerful code g	> Lisp has extremely powerful code generation, but makes serious performance compromisesThis is a serious exaggeration.Common Lisp has extremely good compilers that can meet C performance.There are plenty of Scheme implementations (I use Chez) with very good p	elgatonegro	15.118337	-3.9656756	comment	4.0	21.5	1608524411	-10.359173
25559503	I'd prefer C++ interpreter written i	I'd prefer C++ interpreter written in Lisp...	rini17	15.118307	-3.9909117	comment	4.0	22.0	1609166500	-10.350493
25661701	Debugging Lisp (2015)	Debugging Lisp (2015)	wooby	15.12451	-3.9580412	story	4.0	117.0	1609963908	-10.331693
26054118	I think a much bigger consideration 	"I think a much bigger consideration would be the utter difficulty of reading something like this:  a-b - a - b

Even though I personally love hyphenated-identifiers in Lisp, I would not want them in any language that has infix operators, whether it cares about"	tsimionescu	15.110277	-3.9843478	comment	4.0	10.5	1612695369	-10.372782
26070131	Rather than rehash the ancient argum	Rather than rehash the ancient argument once again, I defer to this post:https://www.xach.com/naggum/articles/3225161536947499@naggum...(KMP was on both Common Lisp and Scheme standard committees; Erik Naggum was an eloquent, if controversial, Lisp expert)	varjag	15.14525	-3.9469848	comment	4.0	14.0	1612818421	-10.484118
26270819	> who sent me a Lisp program computi	> who sent me a Lisp program computing ...I don't really know Lisp, but how do you get a Lisp to run that expression? I tried it in Emacs Lisp, Racket, Common Lisp.It runs just fine in Python, and returns: 29760	thundergolfer	15.123775	-3.9712207	comment	4.0	10.5	1614306277	-10.193418
26375576	This all seems cool until you realis	This all seems cool until you realise that Lisp had full compile time access to the whole language for decades.	dunefox	15.135381	-3.9526694	comment	4.0	15.5	1615122548	-10.435747
35550392	I mean, let's be real: if you have S	I mean, let's be real: if you have SBCL and QuickLisp most newer S-expression based languages don't have much to offer.	tmtvl	15.116886	-3.964126	comment	4.0	19.5	1681355069	-10.380214
36564435	I can code code in C, Python, and Ja	I can code code in C, Python, and Java. But I don't have courage to learn Lisp.	lavventura	15.130777	-3.9588146	comment	4.0	10.5	1688323845	-10.434729
35521351	Lispy vs. Pseudo-English Syntax (198	Lispy vs. Pseudo-English Syntax (1984)	djha-skin	15.120164	-3.969282	story	4.0	26.0	1681192534	-10.384301
36640222	Is there still some kind of revenue 	Is there still some kind of revenue stream from Symbolics Lisp or does the owner just want it to die with him?	User23	15.150222	-3.938058	comment	4.0	17.5	1688777724	-10.435085
36640278	This would be a major development sh	This would be a major development should this come to pass.  Even if Genera doesn’t get released under a OSS-compliant license, this will be beneficial for hobbyists and historians (though I don’t know how restrictive non-commercial licenses are for people in 	linguae	15.103423	-3.9460125	comment	4.0	32.5	1688778243	-10.303617
36640681	I just don’t know why much of the Li	I just don’t know why much of the Lisp ecosystem is closed/commercial, like if you wanna do Common lisp you have to pay for Lisp Works. Could it be one reason for Lisp’s low popularity? If I want to pick up Python now, there’s amazing free tooling for it. If I	behnamoh	15.138226	-3.9514046	comment	4.0	19.5	1688782159	-10.434274
36651554	Honest question-- why weren't the to	Honest question-- why weren't the tools glued together or perhaps replaced entirely with the lisp inside Emacs? What was it missing?	jancsika	15.129454	-3.9473345	comment	4.0	13.5	1688877548	-10.379662
36803630	Not only that. Now precisely because	Not only that. Now precisely because multicore is the only path to follow when we reach the end of the Moore’s law, we need more than ever functional programming. Is no coincidence that there are so much new languages that are trying to use those concepts, inc	f1shy	15.118078	-3.9785192	comment	4.0	11.5	1689873489	-10.439686
36870577	I don't believe that I can change yo	I don't believe that I can change your mind on this, so I didn't intend to respond, but as this is the top comment, I do want to provide a rebuttal on why we do think this is actually a programming language, that the code we have written is actually a compiler	ISV_Damocles	15.133178	-3.9578798	comment	4.0	11.5	1690324249	-10.45254
36874513	"Their point was that the ""superpower"	"Their point was that the ""superpowers"" and mythology of Lisp come from a time (the 80s) in which C was the primary alternative, popular language. Standard ML came later and the further MLs in OCaml and F# came much, much later. Erlang was proprietary. Prolog w"	bmitc	15.136578	-3.95738	comment	4.0	19.0	1690358924	-10.52253
36890858	At no point in time did I claim to k	At no point in time did I claim to know lisp well. I stated my familiarity at the outset. But what you all did was claim to know a lot about every other interpreted runtime without a grain of salt.>Next you can find out what optimizing compilers do to avoid it	mathisfun123	15.108627	-3.9837186	comment	4.0	11.0	1690448631	-10.3861065
36920781	  The -P convention: turning a word 	"  The -P convention: turning a word into a question by appending the syllable ""P""; from the LISP convention of appending the letter ""P"" to denote a predicate (a Boolean-values function). The question should expect a yes/no answer, though it needn't. (See T and"	reaperducer	15.128707	-3.960031	comment	4.0	11.0	1690641728	-10.40531
36930928	"Is the configuration still ""paste th"	"Is the configuration still ""paste this mystery lisp code somewhere in a config / ini file in x,y,z place"" or is it finally plug-and-play like in VSC?"	oslacci	15.135078	-3.9463036	comment	4.0	14.0	1690723439	-10.386948
36992678	Common Lisp: The Good, the Bad, the 	Common Lisp: The Good, the Bad, the Ugly, the Legacy, the Ambivalent	behnamoh	15.151182	-3.9337323	story	4.0	44.0	1691100334	-10.466727
37103070	I prefer Go over Lisp on the cover b	I prefer Go over Lisp on the cover because I prefer the explicit, low magic code of Go with all its boiler plate and using my brain power on business problems not what makes me more productive or feel better / clever while doing my work.Horses for courses - I 	leetrout	15.142657	-3.9499934	comment	4.0	22.5	1691866146	-10.470649
37261058	"the project's stated goal is:""I hope"	"the project's stated goal is:""I hope that Lisp will become more popular. I hope many people enjoy it. EISL aims to be user-friendly.""other lisps work towards a similar goal. racket, for example, has:- a large standard library- extensive documentation- a full-f"	BaculumMeumEst	15.115862	-3.9582798	comment	4.0	11.5	1692967331	-10.437069
37559095	Show HN: Liz – Collaborative Lisp co	Show HN: Liz – Collaborative Lisp coding on Discord	D4ckard	15.135619	-3.9194565	story	4.0	44.0	1695057772	-10.4195385
24644812	Why people are speaking a lot about 	Why people are speaking a lot about Forth this year? Nothing against (I love Forth), just curious.	emersonrsantos	15.041741	-3.806036	comment	4.0	11.5	1601505139	6.0575833
24647013	On the other hand, according to this	On the other hand, according to this[0] author who ported a game from assembly to C and Forth, Forth seems to drastically  increase development time and perform 10-20 times worse than the equivalent assembly.[0] http://calc6502.com/RobotGame/summary.html	siraben	15.031631	-3.8335142	comment	4.0	11.0	1601522784	-7.319047
24549098	The Nature of Lisp	The Nature of Lisp	dunefox	15.148707	-3.937401	story	4.0	20.0	1600726999	-10.476215
24580453	Compiling a Lisp: Reader	Compiling a Lisp: Reader	azhenley	15.13409	-3.9492872	story	4.0	115.0	1600965344	-10.360505
24716449	Common Lisp could evolve into totall	"Common Lisp could evolve into totally parenthesis-free language. By expanding the ""powerfull and versatile"" Loop-macro into full powerfullness and versatileness. Unfortunately two parenthessis needed, but you can redefine the language having those by default a"	timonoko	15.103583	-3.9908557	comment	4.0	21.5	1602138650	-10.386048
24760413	I hate to be a downer, but I just do	"I hate to be a downer, but I just don't trust automatic code generation. 
Proof automation is nice because proofs are ultimately irrelevant. It doesn't matter what the proof is, only that there is one. With code, it's another matter. If I have to depend on heu"	ImprobableTruth	15.036798	-4.029206	comment	4.0	14.0	1602543135	-10.156408
24775364	Why would you add macros to the most	Why would you add macros to the most succinct widely used programming language that is loved for its readability?Macros are generally useful because they A) make something more succinct, B) improve performance by doing something at compile time instead of runt	WoodenChair	15.092973	-4.001371	comment	4.0	12.5	1602674706	-10.347049
24815323	Has anyone ever bootstrapped first t	Has anyone ever bootstrapped first to a Forth and then to a Lisp?	wwweston	15.148202	-3.9318283	comment	4.0	12.0	1602991794	-10.45571
24853643	Viewpoints Research Institute claims	Viewpoints Research Institute claims that they did all of personal computing (including antialiased graphics needed to do SVGs, TCP/IP and an office application which could run both word processing workloads and PowerPoint) in under 20,000 lines of code. (Usua	crdrost	15.136023	-3.94755	comment	4.0	10.5	1603324912	-10.327647
24894076	The argument isn't whether less, rea	The argument isn't whether less, readable, higher-abstraction code is better than its opposite, it is. It's whether or not a real-world LISP code-base espouses these qualities.Which I don't believe it does, IMO the primary reason LISP isn't mainstream is becau	mythz	15.13343	-3.96162	comment	4.0	12.0	1603702665	-10.430339
24894346	I think that should be the marketing	I think that should be the marketing of Lisp: A necessary evil ;)But seriously speaking, for me Lisp would be much more appealing if it had been introduced to me as a specialized niche language, though for an important niche nonetheless, instead of as the be-a	Perseids	15.132478	-3.959539	comment	4.0	12.0	1603705412	-10.476552
24894354	Everything is so extremely context s	Everything is so extremely context sensitive and has much more focus on text over symbols than other languages, which isn't a problem for computers but is a huge problem for humans. Therefore lisp is objectively harder to read for humans. If you have never rea	username90	15.121832	-3.9693375	comment	4.0	10.5	1603705455	-10.412838
24945396	Early LISP implementations used dyna	Early LISP implementations used dynamic scope. This means that non-local references in a function search for the variable's binding in the call chain: if A calls B then when B uses nonlocal variable x it refers to the x in A, not necessarily the x that belongs	todd8	15.088769	-4.003587	comment	4.0	11.5	1604082620	-10.309601
24894104	The Nature of Lisp (2006)	The Nature of Lisp (2006)	tosh	15.151141	-3.9341621	story	4.0	67.0	1603702881	-10.45211
24931577	Compiling a Lisp to x86-64: Labelled	Compiling a Lisp to x86-64: Labelled procedure calls	tekknolagi	15.134755	-3.9486609	story	4.0	93.0	1603985468	-10.388029
25241868	Common Lisp Revival 2020 Fundraiser	Common Lisp Revival 2020 Fundraiser	thephoeron	15.153176	-3.9335873	story	4.0	2.0	1606609951	-10.445728
25294628	I've read the SBCL manual before, se	I've read the SBCL manual before, several times.  It's not suitable for learning Lisp; it's written for people who already know Lisp but need an implementation-specific question answered.Let me illustrate:Suppose I want to compile my lisp code into an executab	na85	15.127436	-3.947872	comment	4.0	12.0	1607028483	-10.411786
25319446	> Then again, in Common Lisp it’s so	> Then again, in Common Lisp it’s somewhat rarer to have C extensions, so I don’t know how ASDF handles that.CFFIhttps://common-lisp.net/project/cffi/	pfdietz	15.10973	-3.9693332	comment	4.0	13.0	1607211090	-10.361374
25320112	The piece has the usual complaining 	"The piece has the usual complaining about CL being a Lisp-2.When I ask to have the advantage of a Lisp-1 explained to me, I get some handwaving about ""elegance"", rather than a specific explanation for why someone would want that.  Personally, I find a Lisp-2 ("	pfdietz	15.134154	-3.9585724	comment	4.0	13.0	1607218215	-10.467143
25320588	Any good guides on how to get starte	Any good guides on how to get started in Lisps, from a programming languages theory perspective?	MH15	15.144371	-3.9403975	comment	4.0	13.5	1607222949	-10.457312
25330945	Will you say it is ok for a complete	Will you say it is ok for a complete new person to lisp to learn sugar? Example is someone who has never learnt lisp in life?Or will you recommend learning sugar after learning some other lisp?	chriszhang	15.156676	-3.9302166	comment	4.0	12.5	1607337852	-10.458921
25341028	An indentation way to Lisp(based on 	An indentation way to Lisp(based on Cirru)	jiyinyiyong	15.10993	-3.981785	story	4.0	7.0	1607395432	-10.3447
25441886	If you mean Common Lisp, I'd say ins	If you mean Common Lisp, I'd say install SBCL and start playing with with the repl. Choose the editor you know best; even notepad is useful to copy and paste expressions to/from the repl. Any editor that's suited for programming will have a way to send express	harperlee	15.140777	-3.9409208	comment	4.0	12.0	1608122827	-10.38638
25443184	Why is common lisp ugly? Many people	Why is common lisp ugly? Many people here suggested common lisp. I was considering it. I like to learn for fun but I am looking for something practical. I will want to build some useful apps in the end with it.	priyanshuraj	15.153009	-3.934189	comment	4.0	11.0	1608130408	-10.434613
25443221	I forgot to ask in my main question.	I forgot to ask in my main question. I can't edit it anymore.I am seriously thinking of learnijg common lisp. Thank you for all the suggestions.Is it possible to build web apps in common lisp or any lisp? Any frameworks available?Is it possible to build multit	priyanshuraj	15.128382	-3.9547732	comment	4.0	10.5	1608130558	-10.4574
25443350	Can I read SICP while learning Cloju	Can I read SICP while learning Clojure? Is lisp very different?	coold	15.128344	-3.969621	comment	4.0	12.5	1608131017	-10.7832775
38611667	A closing parenthesis was missing in	A closing parenthesis was missing in its Lisp source code. Took 3 hours and 9 engineers to find where	ttoinou	15.110344	-3.9893823	comment	4.0	15.0	1702386745	-10.35282
38690058	If you were teleported back to the e	If you were teleported back to the early 1990s then what, at that time, was the most progressive programming language available?I note that both ML and Erlang were around at the time.  I have no experience with or knowledge of Lisp in production to know if it’	gorgoiler	15.133433	-3.9567623	comment	4.0	11.0	1702943898	-10.459964
38768407	They were complicated to use but the	They were complicated to use but they were also self-teaching. I learned how to use a Lisp machine by sitting in front of one and trying things. By the end of a week I was fluent. And this was before the Internet; there was no Google. The machine itself contai	dreamcompiler	15.142878	-3.9401307	comment	4.0	11.5	1703557442	-10.473911
38693439	Common Lisp interface to the pigpio 	Common Lisp interface to the pigpio Raspberry Pi hardware library	rcarmo	15.136358	-3.947771	story	4.0	96.0	1702977003	-10.371254
38982190	Isn't lisp a list language? Isn't ea	Isn't lisp a list language? Isn't easy to index but gives similar functionality	theusus	15.098219	-3.9989972	comment	4.0	11.5	1705166799	-10.4886465
32631479	Most well-written Lisp code has its 	Most well-written Lisp code has its structure indicated primarily by the indentation.  Some form of offset rule is the most commonly suggested alternative Lisp syntax.  It does make the tree structure more obvious:    define                          (define (p	retrac	15.097476	-3.9950757	comment	4.0	33.0	1661716437	-10.388238
32627723	My Road to Lisp (2007)	My Road to Lisp (2007)	AlexeyBrin	15.155199	-3.929484	story	4.0	50.0	1661688167	-10.47643
32724332	A Common Lisp example that leaves ou	A Common Lisp example that leaves out Lispworks and Allegro Common Lisp focusing only on SBCL + emacs, as usual.	pjmlp	15.132247	-3.9436326	comment	4.0	41.5	1662386240	-10.431855
32784340	>Use compiler-friendly languages, by	>Use compiler-friendly languages, by which he is really taking about languages that are good for implementing compilers, like Lisp and MLwhy?	tester756	15.121593	-3.963003	comment	4.0	12.0	1662754539	-10.305286
32734615	My Lisp Experiences and the Developm	My Lisp Experiences and the Development of GNU Emacs	ctrlmeta	15.112209	-3.955431	story	4.0	32.0	1662454545	-10.3942995
38159611	I always thought of FORTH as the #1 	I always thought of FORTH as the #1 hardest to think of uses for, out of all the non-esoteric and non-obsolete languages.  That's a really neat application!	eternityforest	15.039709	-3.8150554	comment	4.0	19.5	1699253735	6.042195
38273618	There's literally dozens of us!If yo	"There's literally dozens of us!If you're serious about learning a Lisp but motivated more by, as you say, ""having more fun"" rather than, say, landing a six-figure job writing it professionally... then may I recommend Janet[0] for your consideration. Janet is a"	cfiggers	15.13236	-3.9668722	comment	4.0	15.5	1700025933	-10.695088
38319818	> outweigh the niceties that other l	> outweigh the niceties that other lisps provide.But don’t people only use Emacs Lisp to program Emacs?	TerrifiedMouse	15.109135	-3.9600546	comment	4.0	12.5	1700316868	-10.38454
38399881	My company bought me a Xerox 1108 Li	My company bought me a Xerox 1108 Lisp Machine running Interlisp D in 1982. I write a commercial product for that environment that we sold for $5K, and it was a lot of fun. I run the latest Medley releases occasionally just for nostalgia. For present day hacki	mark_l_watson	15.132117	-3.936463	comment	4.0	23.0	1700790127	-10.383872
38512508	How do you look at the latter and kn	How do you look at the latter and know the code structure? Are you counting parentheses? Or are you relying on conventions around white space indentation. If the latter, are you not concerned a misplaced parentheses might make the code different from it appear	adastra22	15.113741	-3.9815483	comment	4.0	11.0	1701651606	-10.375259
14914391	It's just training. Buy and use a RP	It's just training. Buy and use a RPN calculator and lisp suddenly seems normal.(To answer your question directly, yes it's readable. You learn to look past the syntax in lisp the same as you stop reading semi-colons and curly braces in other languages)	evilduck	15.132808	-3.9575963	comment	4.0	11.5	1501706455	-10.43414
14925740	I am very interested in the s-expres	I am very interested in the s-expression stylesheet format. I think it would be preferable for me at least to CSS, especially the code for alternating rows; I imagine that people write programs in this language might have well done away with the need for CSS p	ue_	15.064165	-4.0230336	comment	4.0	11.0	1501811437	-10.397358
14878893	Common Lisp Runtime Redefinition (20	Common Lisp Runtime Redefinition (2002)	brudgers	15.135019	-3.9483917	story	4.0	71.0	1501290307	-10.399823
14997976	> It's unfortunate that ML and Lisp 	"> It's unfortunate that ML and Lisp didn't gain greater traction but that's likely due to Unix.Lisp and ML are competing by nature(MLs are famous from their typesystems) and their ""failure"" is not because of unix, but because of their inability to deliver 'fas"	sds2	15.141158	-3.9461236	comment	4.0	13.0	1502547726	-10.391311
15033702	yeah, lisp is cool, but I'd need a c	"yeah, lisp is cool, but I'd need a computer to run it on... I'm seriously considering one of those 8070 Series I Business System..... it has dual floppies, 591K bytes of storage a 19"" color display, a 60 cps impact matrix computer, and!! they say at twice the "	keithnz	15.12709	-3.9412704	comment	4.0	10.5	1502942158	5.9949017
15034744	After grokking the tokenisation, par	After grokking the tokenisation, parsing and eval of lisp like languages, what's the next step up?I usually have a bit of fun mocking out a language I'd like but end up getting into details like type systems. I never really get to expressing as a CFG.I'm wonde	jwdunne	15.1367445	-3.951986	comment	4.0	12.0	1502958079	-10.471152
15057755	The attitude in this screenshot may 	The attitude in this screenshot may explain why Lisp environments don't take off:https://common-lisp.net/project/mcclim/static/media/screensh...	pavlov	15.145017	-3.939102	comment	4.0	22.5	1503223389	-10.452593
15228986	Writing/understanding a lisp interpr	Writing/understanding a lisp interpreter is a longstanding item on my TODO list.Question:  how do I go from tackling this to tackling compilers?	omginternets	15.127313	-3.9677272	comment	4.0	10.5	1505235354	-10.400331
15230418	"There is a similar project called ""B"	"There is a similar project called ""Build Your Own Lisp""[0] (BYOL), which is a book that walks one through making a Lisp in C. Has anybody here done BYOL? How does it compare to MAL? If you had to choose one to learn how to create a Lisp, which would you choose"	sassy_samurai	15.140598	-3.9480011	comment	4.0	10.5	1505242411	-10.4025135
15147665	Searching a Million Lines of Lisp	Searching a Million Lines of Lisp	pmoriarty	15.1495695	-3.936394	story	4.0	73.0	1504267730	-10.420655
15279115	How easy is to embed this? If I wann	"How easy is to embed this? If I wanna make a language and use a lisp as the ""backend"" this one is good for this?"	mamcx	15.137916	-3.941428	comment	4.0	24.0	1505765592	-10.430984
15275026	Going Faster with Lisp	Going Faster with Lisp	foob	15.146999	-3.9385865	story	4.0	124.0	1505735408	-10.419618
15426018	I get that this is important to the 	I get that this is important to the Lisp crew, but is this at all relevant to the general audience of HN?What's the takeaway: avoid Closure because of one drama? Rich is right about everything? Copmuters are terrible?	falsedan	15.126084	-3.8960588	comment	4.0	13.0	1507414884	2.2876966
15471702	A few things I know about Lisp Machi	A few things I know about Lisp Machines	gkya	15.147207	-3.9369202	story	4.0	85.0	1507980259	-10.430327
15571832	There are also plenty of Lisp progra	There are also plenty of Lisp programmers that think that it's a real tool to solve real problems, not just an educational oddity.  There are a bunch of Lisps out there, and plenty of them are by no means toys.  My laptop's initial RAM disk and init system are	davexunit	15.156598	-3.9272957	comment	4.0	16.5	1509135202	-10.459649
15593781	>I mean, why was I unhappy as a prog	">I mean, why was I unhappy as a programmer after 18 years and said, ""if I can't switch to something like Common Lisp, I'm going to switch careers"". Why am I saying that? I'm saying it because I'm frustrated with a bunch of limitations in what I was using.>So, "	flavio81	15.106094	-3.986867	comment	4.0	15.5	1509462670	-10.470182
15710781	Was / is Forth good and useful? Bonu	Was / is Forth good and useful? Bonus; is it fun?	unixhero	15.044177	-3.8099127	comment	4.0	13.5	1510817103	6.116473
17440171	> Languages don't create unmaintaina	> Languages don't create unmaintainable code, people doHave you ever seen so-called academic code? If your developers are PhDs without a programming background, you're bound to get programs that reflect the complexity of their own throught process plus the sub	vanderZwan	15.13072	-3.9621656	comment	4.0	13.0	1530521068	-10.428299
17442108	It tells me that the vast majority o	It tells me that the vast majority of software developers do not want to read or maintain code in raw s-expression format, for the same reason that the vast majority of software developers do not want to read or maintain code in machine code.  S-expressions an	dwheeler	15.091673	-4.0096135	comment	4.0	10.5	1530543153	-10.330965
17553911	This is the problem I have with Lisp	"This is the problem I have with Lisp, but exponentially worse. Languages like this try and stretch ever-closer to an imaginary ""perfectly pure language"". It's an interesting exercise, but in the process they get further and further away from concepts that are "	_bxg1	15.137286	-3.952269	comment	4.0	24.0	1531865365	-10.454228
17633751	When I think about LISP and parens i	When I think about LISP and parens it just feels redundant if you’re gonna use indentation anyway.Parens are only useful if everything is on a single line. With new lines and indentation, things can become a lot cleaner like python style.I strongly believe pyt	nojvek	15.108701	-3.9891396	comment	4.0	14.5	1532794602	-10.2985735
17633929	Thanks for these comments. I didn't 	Thanks for these comments. I didn't realise alternative notations were planned and never took off. (Dylan in particular looks really interesting.)I can see the value of homoiconicity / code as data from the perspective of someone writing a parser.I've asked wh	modernerd	15.093738	-4.0073004	comment	4.0	10.5	1532797010	-10.419049
17761696	IMHO switching to Guile from C is mo	IMHO switching to Guile from C is moving in the wrong direction: rather than going from a poor-but-performant systems programming language like C to a pedagogic language like Scheme, it’d be a better idea to move to an rich-and-performant language meant for in	rauhl	15.156987	-3.8779898	comment	4.0	17.5	1534279239	-10.339237
17761698	"> I hate to be ""that guy,"" but what "	"> I hate to be ""that guy,"" but what happened to the Guile-Emacs project? Guile performs way better than Elisp tooI’m sorry to be that guy, but did you ever try it out for yourself?Just starting Emacs took as long as a full regular Emacs elc-build, if not longe"	josteink	15.1870775	-3.801261	comment	4.0	11.5	1534279268	-10.317625
17762798	Stallman hates Common Lisp.https://w	Stallman hates Common Lisp.https://www.gnu.org/gnu/rms-lisp.en.html	melling	15.1441	-3.9415295	comment	4.0	13.5	1534289756	-10.428518
17797377	The key problem with this article is	The key problem with this article is, that Norvig cherry-picked features of Lisp that are present with the languages that he contrasts it with. So, what happens then is that it will give the impression that Lisp somehow lost its uniqueness, or whatever makes i	ebzzry	15.131002	-3.9622273	comment	4.0	14.0	1534732465	-10.43486
17798255	As I see it, Lisp is a language in (	As I see it, Lisp is a language in (pretty much) pure prefix notation and of which the core data structure is a linked list and in which functions are first-class values. The advantages of the prefix notational purity are manifold, but schools train people in 	neokantian	15.112574	-3.9864125	comment	4.0	14.0	1534749981	-10.408354
17801970	I've always been intellectually fasc	"I've always been intellectually fascinated by Lisp, but would NOT want to use it in a production (team) environment. It has two problems:First, is that it's too ""meta"" in that one can shape it to be just about anything they want. This can make it difficult for"	tabtab	15.115451	-3.9884646	comment	4.0	13.5	1534786663	-10.473689
21058846	Talk of metaprogramming intrigues me	Talk of metaprogramming intrigues me. I'd like to hear what a Lisp user makes of it because I find non-Lisp users are usually amazed by any metaprogramming at all and can't be as critical about it.	marble-drink	15.130716	-3.9491465	comment	4.0	17.5	1569325132	-10.383161
17846522	History of Lisp (1979) [pdf]	History of Lisp (1979) [pdf]	taylodl	15.153443	-3.9258604	story	4.0	98.0	1535300373	-10.417012
21147584	Writing a compiler is still almost a	Writing a compiler is still almost always overkill, because implementing the compiler is one of the smallest parts of creating an effective programming language.Let's say you're starting a project, and you're choosing a language to write it in. You have two op	kerkeslager	15.084068	-4.000185	comment	4.0	17.0	1570113939	-10.438805
21354626	Sometimes I wonder if the people of 	Sometimes I wonder if the people of the 1960s (i.e the people who came up with lisp, multics, unix) had the right idea: to use a computer you should program it.There are many programs, each does a different thing, you program your final product by composing pr	chewxy	15.121594	-3.9566915	comment	4.0	11.5	1572009651	-10.376563
21560061	I do have some testing that showed m	I do have some testing that showed me the Common Lisp was roughly the same speed as the C, when testing against a file of a few dozen megabytes.  As I explain, I wasn't interested in optimizing it further, as I feel showing this achieved in just a few minutes 	verisimilitudes	15.104603	-3.976636	comment	4.0	12.0	1574024982	-10.395257
21643626	I think the appeal of the syntax for	I think the appeal of the syntax for those who get used to it is the regularity, like you said.The advantage of the regularity isn't its human readability, but its ability to macro, no?What I'd like to see is better tools for reading and editing such a regular	manifestsilence	15.115264	-3.9812486	comment	4.0	12.0	1574809230	-10.405188
21644697	I have designed a programming langua	I have designed a programming language that borrows an important part of its architecture from Lisp(s) (maybe mostly Scheme, but also Kernel: http://klisp.org). However, I have always opposed to the concrete syntax of S-expressions (being mostly unable to be p	rusini	15.097905	-3.99965	comment	4.0	11.5	1574820414	-10.370754
21671994	I've always wished Emacs would have 	I've always wished Emacs would have been written in Common Lisp.  It would already support this, and it's all around just a better language (IMO).There's Climacs, but it's so far behind...	jlarocco	15.111066	-3.9644098	comment	4.0	24.5	1575145942	-10.378506
21675461	The thing that's wrong with Forth is	The thing that's wrong with Forth is it promotes eschewing verbal identification of variables for the sake of positional. This is promoted as good mental exercise, but is just bad language design. As Rich Hickey said, we humans prefer to identify things in ter	LessDmesg	15.018033	-3.8055882	comment	4.0	14.0	1575208112	6.1163216
21729447	Lisp in Vim with Slimv or Vlime	Lisp in Vim with Slimv or Vlime	susam	15.089809	-3.96468	story	4.0	8.0	1575713346	-10.389031
39142380	I’d argue modern languages have take	I’d argue modern languages have taken many of the attributes of LISP, not least the garbage collector, development tools, higher-order functions, etc.  The difference is that other languages use parsing technology based on Chomsky’s grammar whereas blub langua	PaulHoule	15.136637	-3.95516	comment	4.0	15.0	1706275802	-10.435553
39097681	Self-contained Linux applications wi	Self-contained Linux applications with lone Lisp	goranmoomin	15.129404	-3.947263	story	4.0	114.0	1705970047	-10.378256
39256864	This is one of the hills to climb wh	"This is one of the hills to climb when learning a lisp. Seasoned lispers don't edit text, or traverse text; they edit and traverse lisp forms (AST nodes). In my experience, vim/neovim work very well for this, due to their notion of ""text objects"". With a coupl"	Jeaye	15.097559	-3.97752	comment	4.0	12.0	1707102711	7.540985
39298252	> I've enjoyed reading about FORTH a	"> I've enjoyed reading about FORTH and LISP over the years and I think LISP advocates have a similar philosophy.Want to make a hacker laugh? Say ""Forth is the dual of Lisp"" to someone familiar with both languages. It seems they reach the same goal of a totally"	bitwize	15.138035	-3.941688	comment	4.0	12.5	1707367346	5.9443717
39344263	We actually need to talk about lists	"We actually need to talk about lists. The single reason why Lisp uses parentheses is the list notation -> programs are actually lists, not just text.The same code which runs    CL-USER 10 > (let* ((foo 10)
                       (bar (+ foo 32)))
             "	lispm	15.082954	-4.021417	comment	4.0	11.5	1707742640	-10.389041
39345999	Programming languages are user inter	Programming languages are user interfaces. The syntax of a programming language is part of that user interface. Some choices are poor by virtually any measure (stropped keywords come to mind; as visually hideous as they are unpleasant to type), but most choice	RodgerTheGreat	15.140244	-3.9531233	comment	4.0	15.0	1707752151	-10.418189
39347388	Parens are powerful in lisp(s) becau	Parens are powerful in lisp(s) because it means the syntax is its own AST and can be manipulated by itself (macros). It's one of those exploding head moments that you (including me) can get totally ensorceled by. But--as with all language features--I think pra	camgunz	15.119287	-3.9776535	comment	4.0	13.0	1707757755	-10.324706
32840420	After years of reading Lisp articles	After years of reading Lisp articles, my take is that the macro system is what sets Lisp languages apart. I was surprised then that the author didn't find them that useful.[Paul Graham] describes Lisp as his “secret weapon”. OK, so what’s the secret? He says “	michaelwww	15.123469	-3.9711099	comment	4.0	13.5	1663176582	-10.406992
32881788	As author of the Binary Lambda Calcu	"As author of the Binary Lambda Calculus (BLC), I find this quite fascinating.
It implements LISP in 163,654 bits of BLC.
For comparison, minimal esoteric languages like BLC itself can be implemented in 232 bits of BLC, and Brainfuck in 893 bits.I'm still readi"	tromp	15.1085005	-3.9925666	comment	4.0	11.5	1663450292	-10.499714
32882462	Let's not sell Lisp short here.  LC 	Let's not sell Lisp short here.  LC might be mathematically foundational, but I think it's fair to say that Lisp is computationally foundational.  Mathematics and computation are related, of course, but they are not identical.  Computation is the study of mech	lisper	15.123077	-3.9736428	comment	4.0	35.5	1663455591	-10.397888
32883213	LC is only computationally foundatio	LC is only computationally foundational; it describes recursive functions. It's just another universal turing machine.LC has a great disadvantage: it's difficult to write a LC interpreter in LC.  This project shows exactly what that means. To write an LC inter	kazinator	15.108042	-3.99311	comment	4.0	22.5	1663462022	-10.337552
32824468	Ask HN: Lisp Macros for Self-Improvi	Ask HN: Lisp Macros for Self-Improving AI?	behnamoh	15.108029	-3.982211	story	4.0	17.0	1663078049	-10.233236
33061224	Ok, you can use libraries, of course	Ok, you can use libraries, of course - so shouldn't say that there is no reuse. But libraries are not the same as built-in syntax. Built-in syntax for the basic things, as in the Algol-family is a) standard so everybody uses it. b) optimized for the right mix 	jstimpfle	15.114054	-3.9528854	comment	4.0	11.5	1664751161	-10.455102
31866041	The Key of Lisp (1987)	The Key of Lisp (1987)	mr_tyzic	15.154087	-3.9311519	story	4.0	80.0	1656091253	-10.468011
31816455	Sunstone – the last unreleased Lisp 	Sunstone – the last unreleased Lisp machine architecture from Symbolics [pdf]	mepian	15.124725	-3.9504187	story	4.0	76.0	1655761503	-10.327286
39376571	I disagree. I have no problem with l	I disagree. I have no problem with lists obsession in other languages like OCaml.The parentheses are just too much. I get how elegant and unambiguous they are for computers but I am not a computer. It's like RPN. It's elegant and easy for code to parse and una	IshKebab	15.105438	-3.992771	comment	4.0	23.5	1707950416	-10.381773
39377161	You want to learn programming. Lets 	"You want to learn programming. Lets get started - how long does that take to bang out 10 exercises? Order the estimated results from quickest to slowest. Here's my estimates (don't like them, show yours! It'll be interesting):  - Scratch
  - python/perl/ruby/j"	harry8	15.14248	-3.945096	comment	4.0	14.5	1707954086	-10.449613
39377649	I didn't see mentioned in the thread	I didn't see mentioned in the thread (maybe missed it) the #1 reason, IMO, that Lisp can't be popular in companies.Everyone should take the time to learn Lisp and do a handful of personal projects with it. It'll help your growth as a software engineer. Just do	jjav	15.136107	-3.9558249	comment	4.0	24.5	1707957593	-10.461289
39379693	I'm tackling a significant lisp proj	I'm tackling a significant lisp project right now, and the thing that holds me up right now is that the code is difficult to organize. Python, java, rust, go etc have well-defined patterns to figure out where code lives and where you might expect certain behav	breather	15.1282835	-3.9627788	comment	4.0	11.0	1707978041	-10.434178
39667323	Lisp is not the language for that un	Lisp is not the language for that unfortunately, it is very much an imperative language with better syntax and _some_ macros.Scheme is close but quotation isn't thought about nearly enough. It is generally a CS problem as logic systems with quotation are very 	llm_trw	15.109035	-3.991685	comment	4.0	13.0	1710160122	-10.341967
39671413	"You think lisp is ""weird and siniste"	"You think lisp is ""weird and sinister or ghostly"" and that 'we' are still wrestling with something 66 years later?This sounds more like someone getting caught up in the pageantry of a niche that pragmatic people have left behind a long time ago. Lisp was very "	CyberDildonics	15.150974	-3.9411058	comment	4.0	13.5	1710180155	-10.472921
39619009	Ask HN: A Lisp with Cargo/NPM like b	Ask HN: A Lisp with Cargo/NPM like build system?	nate-sys	15.110736	-3.974953	story	4.0	3.0	1709748858	-10.367857
32030579	Antimony – computer-aided design too	Antimony – computer-aided design tool from the Lisp machine parallel universe	pabs3	15.123766	-3.9441023	story	4.0	31.0	1657331956	4.056809
32043740	>> One thing I do have to mention th	>> One thing I do have to mention though is that the workflow in Lisp allows me to create these support libraries much faster than I can in other languages.I'm at that stage in my lisp journey (~18 months) where i know enough to be dangerous to others around m	CraigJPerry	15.137675	-3.949786	comment	4.0	14.5	1657452661	-10.478878
32102376	"All these ""small lisps / lisp-in-go "	"All these ""small lisps / lisp-in-go / lisp-to-xyz"" are great and I do applaud the exercise and what is produced, and I also appreciate many of of these projects are for learning or fun projects.BUT if by chance you or your project is one of the more ""serious l"	rawoke083600	15.092419	-3.9932897	comment	4.0	12.5	1657839334	-10.43564
32216520	The point is that these computers do	The point is that these computers don't come with development tools installed by default and made available in the default environment. They don't provide any equivalent to the BASIC interpreters of old, or to the REPL of a Lisp Machine workstation.  You can i	zozbot234	15.12822	-3.9548113	comment	4.0	14.5	1658689236	-10.427556
32361051	This exactly matches my thoughts. It	This exactly matches my thoughts. It seems that machine language and LISP are the only two languages (that i know anyway) where code and data are fundamentally the same kind of thing.	aap_	15.09433	-3.9871202	comment	4.0	15.0	1659728817	-10.327041
32364456	266 pages of well-written, edited, f	266 pages of well-written, edited, fact-checked electronics and computer programming. Monthly. Let that sink in.There is so much good info packed into this one issue, it is worth terabytes of crap on stack overflow. Clearly there was less information back then	sbf501	15.121727	-3.96293	comment	4.0	16.0	1659755530	-10.349123
32390685	Lisp also really benefits from an ed	Lisp also really benefits from an editor that colourizes ( ) in matching pairs.  Even C benefits from colour-matching {} in my experience.  I'm surprised it's not more common.	retrac	15.11798	-3.979658	comment	4.0	12.0	1659990982	-10.39394
32453997	If I recall correctly, the common li	If I recall correctly, the common lisp community doesn't like nor recommend the book at all.I remember going through the first 6 chapters and often going on the CommonLisp channel on free node to ask questions and eventually found out it was either wrong or mi	epolanski	15.150869	-3.9269593	comment	4.0	10.5	1660426404	-10.4642515
32384320	Lively Linear Lisp – 'Look Ma, No Ga	Lively Linear Lisp – 'Look Ma, No Garbage!' (1992) [pdf]	Tomte	15.155227	-3.9298303	story	4.0	83.0	1659958406	-10.492027
32459246	It is interesting how almost none of	It is interesting how almost none of these paradigms/principles are relevant to what we think of as AI today. Lisp, a language specifically formulated for AI applications, is now mostly relevant in the context of programming language theory (and essentially ir	MontyCarloHall	15.127478	-3.948136	comment	4.0	12.0	1660485119	-10.484051
32505975	Brave warriors use Forth. I came to 	Brave warriors use Forth. I came to find out about it in the Computer History Museum.I think that the information provided is a bit messy. There is a link to a German language website which feature a lot of projects the society is currently working on, with st	_the_inflator	15.033758	-3.8145096	comment	4.0	12.0	1660803727	6.0498824
22035317	1. no garbage collector2. No tail re	1. no garbage collector2. No tail recursion3. There is no cons, cdr or car stuff. Lists are just vector objects and you use push, cat, slice etc to manipulate elements.Only this much is radical enough to say that it isn't a Lisp but disguised in Lisp syntax.  	DannyB2	15.1246805	-3.9684718	comment	4.0	15.5	1578929772	-10.45588
22067685	"As far as ""Lisp lacks visual clues"","	"As far as ""Lisp lacks visual clues"", after many heated debates on this, I've concluded that the ugliness and rigidness of ""production"" languages enforces certain visual and syntactic standards that makes reading others' code easier. Indentation of Lisp won't """	tabtab	15.124259	-3.9700472	comment	4.0	20.0	1579201220	-10.465116
22087624	"they’re practically two sides of
the"	"they’re practically two sides of
the same coin. I keep thinking it should be possible to build a toy language that has both a forth-like mode and a lisp-like mode, that use the same standard library"	jes5199	15.137426	-3.9511168	comment	4.0	11.0	1579385215	6.0400763
22088209	zerr's post reads like Lisp is some 	zerr's post reads like Lisp is some kind of terminal disease that will cause spacecraft to slowly get cancer or something.  It sounds like completely irrational hostility.But the article reads like blatant fanboy-ism, as if Lisp turned spacecraft into unicorns	AnimalMuppet	15.1459875	-3.9422517	comment	4.0	13.5	1579390924	-10.431081
35829010	I bought this book in paper time ago	I bought this book in paper time ago, put it aside (I bought half a dozen at the same time) and when I finally got to read it, I found out that I had brought the wrong version. Too late to return it...A question: is any of the currently hot software written al	narag	15.151381	-3.9341345	comment	4.0	12.5	1683293599	9.764677
35852931	The article seems like mostly about 	The article seems like mostly about Common Lisp, but how many of the points are applicable to rest of Lisps? (Scheme, Emacs Lisp, Janet, etc)	eimrine	15.148105	-3.9352806	comment	4.0	18.0	1683475984	-10.456573
35853318	After learning Python, I wanted to t	After learning Python, I wanted to take the next step and find what was better. I looked into a lot of languages reading books on Haskell and Lisp and many others. At least for my use cases (desktop scripting, numerical work... etc) I didn't find Lisp to be su	7thaccount	15.115675	-3.9740272	comment	4.0	13.5	1683478494	-10.325514
35936856	Is Lisp being used today for anythin	Is Lisp being used today for anything particularly significant, like C and JavaScript are, or is it merely a niche academic language, like Haskell and Rust?	bhiply	15.1354885	-3.9606698	comment	4.0	10.5	1684059000	-10.483482
35936965	Which alternatives?  Sbcl:- Requires	Which alternatives?  Sbcl:- Requires manual type annotations to achieve remotely reasonable performance- Does no interesting optimisations around method dispatch- Chokes on code which reassigns variables- Doesn't model memory (sroa, store forwarding, alias ana	moonchild	15.099643	-3.975233	comment	4.0	17.0	1684060596	-10.398942
35942527	I think you’re looking for this:http	I think you’re looking for this:https://en.wikipedia.org/wiki/Greenspun%27s_tenth_rule> Any sufficiently complicated C or Fortran program contains an ad hoc, informally-specified, bug-ridden, slow implementation of half of Common Lisp.	tshaddox	15.120269	-3.960033	comment	4.0	11.5	1684108901	-10.359351
35927790	MGL: Common Lisp machine learning li	MGL: Common Lisp machine learning library	oumua_don17	15.139292	-3.9363008	story	4.0	216.0	1683981529	-10.444095
36017748	> And I’ve not seen anything like th	> And I’ve not seen anything like that in the, albeit casual, contact I’ve had with the Lisp community since then (mostly IRC).I spent a lot of time in an IRC channel with a Scheme guy who would get mad whenever anyone mentioned JavaScript, because it'd given 	astrange	15.094057	-3.9902859	comment	4.0	15.5	1684639384	-10.44275
36194906	I write Lisp professionally and love	I write Lisp professionally and love s-expressions, but the comparison with ALTER TABLE's grammar is pretty unfair. Postgres can detect many invalid ALTER TABLE formulations by checking the grammar, whereas in Lisp it's much easier to have grammatically-correc	tsm	15.113144	-3.9843392	comment	4.0	35.5	1685964788	-10.356358
36194983	> Lisp’s unusual syntax is connected	> Lisp’s unusual syntax is connected to its expressive power. [...] It’s because of uniformity.Okay...> Lisp (and XML) have a uniform syntax... ookay. The rest of the arguments, and the conclusion, can then be equally applied to XML, specifically the:> I maint	senko	15.128806	-4.0242743	comment	4.0	14.0	1685965473	9.050838
36195236	Okay, other than Skyscanner, Grammar	Okay, other than Skyscanner, Grammarly, HackerNews, Emacs, CircleCI, Metabase, Crash Bandicoot, Nubank, other Clojure projects etc, what has Lisp done for us?	kirubakaran	15.154938	-3.9381855	comment	4.0	15.0	1685967700	-10.524165
36283867	Is there anything similar for Common	Is there anything similar for Common Lisp?For now, I’m using JSON because I’m paranoid about code injection attacks around print/read.I’ve seen a handful of libraries, but each one claims to protect against a different kind of attack, so that makes me think th	schemescape	15.135882	-3.946399	comment	4.0	13.0	1686506668	-10.421165
36282798	Csexp: S-Expressions over the Networ	Csexp: S-Expressions over the Network	thefilmore	15.0776005	-4.0123973	story	4.0	109.0	1686500881	-10.311609
36545026	SBCL is an implementation I love wor	SBCL is an implementation I love working with because updates are steady and the software is stable.But the real superpower, in my opinion, is that, because the compiler and standard library are written in Common Lisp, you can reach in into the internals of SB	reikonomusha	15.128264	-3.9424617	comment	4.0	12.0	1688173287	-10.404269
28694771	I’ve always wanted something like th	I’ve always wanted something like this extension, but where the brackets aren’t colorized, but rather change size depending on their nesting level, with the outermost brackets becoming increasingly large as the total nesting level of the expression increases —	derefr	15.068402	-4.027254	comment	4.0	11.0	1632928393	-10.370682
28730568	I like Common Lisp but I no longer u	I like Common Lisp but I no longer use it. I'm pretty much completely burned out on dynamic typing. It feels like building on sand. I want calmer programming, even if it's less powerful. At present I'm building a new language[0] with that goal in mind.[0]: htt	zetalyrae	15.117294	-3.9704266	comment	4.0	10.5	1633197530	-10.427588
28816860	> There are lots of standard functio	> There are lots of standard functions still missing, but rather than implement them as built-ins, they can be implemented from the primitives already available.I'd be interested in reading more about this.  For example, how was that set of primitives chosen? 	WalterGR	15.129184	-3.9610486	comment	4.0	15.0	1633855697	-10.403728
23426023	I think this is close, but sort of m	I think this is close, but sort of missing the point: it’s possible to extend Common Lisp to take code in the form of Python source code (clpython), JavaScript source code (cljs) or many other textual syntaxes: originally, the iconic s-expression syntax of lis	fiddlerwoaroof	15.111222	-3.9911492	comment	4.0	18.5	1591342998	-10.37271
23451077	this might be a dumb question but ca	this might be a dumb question but can someone briefly explain why Forth is more suitable over C or other languages in general on post-apocalyptic OS?	mshockwave	15.039505	-3.808706	comment	4.0	12.0	1591565796	6.0481176
23453784	For me, the main problem with forth 	For me, the main problem with forth is a lack of names -- most languages (functional or imperative or even declarative) assign names to things -- things like function parameters, temporary values and so on.Even Prolog, which is as far from traditional structur	theamk	15.033169	-3.819034	comment	4.0	11.5	1591593439	6.1263804
23552998	Interesting: https://github.com/robp	"Interesting: https://github.com/robpike/lisp/blob/master/lisp1_5/parse.go...    // Expr represents an arbitrary expression.
    type Expr struct {
        // An Expr is either an atom, with atom set, or a list, with car and cdr set.
        // Car and cdr can "	klodolph	15.0908375	-4.017646	comment	4.0	13.0	1592410027	-10.461094
23699710	What are the fundamental differences	"What are the fundamental differences that are ""difficult or impossible to 'just' teach over""? Looking at a language like Racket, you have classes and objects, (first class) functions, recursion, ""for"" iteration, threads, mutability, etc. Aren't these features "	evdubs	15.126055	-3.968943	comment	4.0	14.5	1593596985	-10.403399
23766685	I use my own preprocessor for Chez S	"I use my own preprocessor for Chez Scheme. Comments begin flush left, code is indented. Indentation implies the parentheses that it can. ""|"" opens a group that self-closes at the next unbalanced "")"" or the end of the line. ""$"" is a placeholder where there's no"	Syzygies	15.113198	-3.9802434	comment	4.0	10.5	1594179692	-10.365202
23800777	Common Lisp Elitism is a real thing.	"Common Lisp Elitism is a real thing. This person appears to be from the ""Clojure is not Lisp"" clan of gatekeepers."	divs1210	15.120646	-3.9922671	comment	4.0	19.0	1594460303	-10.9921665
23845798	Let me answer by posting an introduc	Let me answer by posting an introduction to the condition system by Kent M. Pitman. It is the first subchapter of the book.------There have been many attempts to declare the Lisp family of languages dead, and yet it continues on in many forms. There are many e	phoe-krk	15.117425	-3.976042	comment	4.0	29.5	1594823957	-10.414541
23885208	There seems to be no mention of the 	There seems to be no mention of the Common Lisp condition system, which allows for handling of exceptional situations actually done right. Is this omission purposeful?See https://news.ycombinator.com/item?id=23843525 for a recent long discussion about my upcom	phoe-krk	15.125962	-3.962914	comment	4.0	11.5	1595109667	5.9413753
24032243	Yep, sorry.This is a matter of feeli	Yep, sorry.This is a matter of feeling, completely irrational, but just my experience.When I program in lisp I get the same feeling when I'm solving an ODE by hand, or a Diophantine equation, or designing a numerical method to approximate the solution of a PDE	enriquto	15.121647	-3.9807007	comment	4.0	13.0	1596406455	-10.477877
24228682	As a newbie im getting a bit confuse	As a newbie im getting a bit confused. What is the difference between guile and chicken scheme? There's also chez. Im even more confused	grugagag	15.247483	-3.7281544	comment	4.0	12.5	1597956098	11.339931
24258228	I would like to know as well. I woul	"I would like to know as well. I would also be interested in opinions about ""Lisp system implementation by Nils M Holm"".
I tried to read ""Lisp in small pieces"" at least 3 times but never managed to go further than the 1st chapter. I find the prose pedantic and "	register	15.153983	-3.9274483	comment	4.0	11.5	1598253840	-10.455996
24330620	You're missing the forest for the tr	You're missing the forest for the trees. What's the tiniest x86-64 code generator that can bootstrap John McCarthy's meta-circular evaluator, as it is written in his original paper. Now that's something I'd love to see. What he accomplished there is so profoun	jart	15.132493	-3.9434123	comment	4.0	13.5	1598875929	-10.389165
20216105	It demonstrates that Quake could wel	It demonstrates that Quake could well be written in Lisp.	stcredzero	15.137646	-3.9406276	comment	4.0	14.0	1560880512	-10.4735155
20312710	I’ve always thought it unfortunate t	I’ve always thought it unfortunate that fexprs were dropped for macros in lisp. For a language that touts homoiconicity and first class functions/objects, it feels strange that macros aren’t first class.My understanding is that fexprs have some perfomance prob	mruts	15.1654	-3.9241903	comment	4.0	12.0	1561817852	-10.407185
20182564	Common Lisp: Numbers	Common Lisp: Numbers	tosh	15.14312	-3.943748	story	4.0	148.0	1560516942	-10.418853
20375720	Sorry but that's just wrong. He is c	Sorry but that's just wrong. He is complaining about DSLs making things hard to read. That's not fixed by switching to another language or a package manager. That's purely a software engineering problem - nobody forces you to write code in that style.And LISP 	janoc	15.13272	-3.9581447	comment	4.0	12.5	1562515199	-10.434798
20375988	Unpopular opinion, but I find readab	Unpopular opinion, but I find readability really hard on lisp projects. Everything has to be read backward, and just because you can nest 10 lambdas doesn't mean that you need to nest 10 lambdas all over the place. So the code you end up with is write-only nes	grumpy8	15.134022	-3.9636428	comment	4.0	10.5	1562517815	-10.446667
20376979	There've been so many attempts at re	There've been so many attempts at removing the parentheses from Lisp, to make it look more like C/C++/Java, or (more recently) Python, or other.FWIW, there've been many attempts in Scheme (and Racket), including one by the core Racket developers (Honu [1]), bu	neilv	15.102399	-3.995899	comment	4.0	14.0	1562525643	-10.354171
20378241	Lisp has never been noticeably bette	Lisp has never been noticeably better overall.- In the past, it was better at abstraction, but slow and niche and you needed to shell out for hardware.- In the present it is not better. Common Lisp is about on a par with Python in what it has built in, inferio	JulianMorrison	15.130497	-3.9558606	comment	4.0	21.5	1562537026	-10.449676
20377122	"""a god like language"" Such hyperbole"	"""a god like language"" Such hyperbole can only be found in the lisp world. You guys need to take lisp off its pedestal."	AlexanderDhoore	15.144252	-3.9404864	comment	4.0	11.0	1562526746	-10.492445
20433429	Because it can easily solve or altog	Because it can easily solve or altogether eschew a lot of the issues that object-oriented JavaScript developers are struggling with and that's barely scraping the tip of the iceberg of problems which Lisp doesn't suffer from.Alas one of the problems Lisp does 	Annatar	15.130914	-3.9542935	comment	4.0	21.5	1563113049	-10.411037
20481355	>  s-expressions have no central spe	>  s-expressions have no central specification on precise syntaxThere is: https://people.csail.mit.edu/rivest/Sexp.txtIt's imperfect, but it does get the job done.  Among its advantages is that it's both pure text and binary: there's a canonical representation	zeveb	15.057681	-4.0305414	comment	4.0	14.5	1563561742	-10.33738
20495609	Kind off-topic but related: sometime	Kind off-topic but related: sometimes I wonder how web development would be if Lisp had somehow won as standard, since we can use to do everything the stack HTML+CSS+JS+Backend-language does, in addition to standardized syntax and standard everything.Oh, stand	Pmop	15.104248	-3.979397	comment	4.0	14.0	1563774629	-10.481187
20551031	Forth is pretty amazing. It really d	Forth is pretty amazing. It really delivers on that old promise of “a language that will make you a better programmer in other languages”.However, from my experience, since there is basically no syntax, all Forth programs tend to be a DSL for the problem at ha	haolez	15.040834	-3.8174856	comment	4.0	20.0	1564366773	6.073859
20551457	Can anyone recommend an editor like 	Can anyone recommend an editor like Emacs that doesn’t use LISP?  I find the syntax to be an abomination.	new_realist	15.096488	-3.9724648	comment	4.0	11.5	1564373560	-10.337694
20590967	You realize the person whose code yo	You realize the person whose code you are criticizing wrote one of the classic books on Lisp right?	sansnomme	15.137996	-3.949623	comment	4.0	11.5	1564726734	-10.387624
20697881	It's elegant. It's (relatively) easy	It's elegant. It's (relatively) easy to write a basic parser. LISP code is readily expressible in the same basic data structures provided in the language so you get meta programming almost for free and thus extending LISP is (relatively) easy too. Whereas C fe	aeorgnoieang	15.133243	-3.9627662	comment	4.0	16.5	1565804164	-10.394854
20697842	- you can make your own domain speci	- you can make your own domain specific language in Lisp (e.g. imagine that you want to create a custom 'for' statement, or some kind of a new pattern matching operator)- you can easily write programs that edit themselves	kolinko	15.087927	-3.9901588	comment	4.0	13.5	1565803961	-10.341916
20698745	I think the general consensus is tha	"I think the general consensus is that it's great for ""getting big shit done"" – in other words, it's hard to beat for creating large, complex programs, but relatively crap for scripting or smaller tasks. I'm still kind of amazed how difficult it is to create a "	girzel	15.133826	-3.953442	comment	4.0	11.0	1565808850	-10.456195
20782512	It's pretty easy to write dreadfully	It's pretty easy to write dreadfully unmaintainable lisp.	miloshadzic	15.146258	-3.9432309	comment	4.0	12.5	1566594059	-10.47795
20820161	Previous discussions from last year:	"Previous discussions from last year:
https://news.ycombinator.com/item?id=16860646
https://news.ycombinator.com/item?id=16679963(Common) Lisp usually gets more use than exposure, so it's nice to see large-scale Lisp success stories.  Makes me feel warm and fuz"	gilesgate	15.160865	-3.9063168	comment	4.0	14.5	1567002819	-10.471099
20821434	This sounds kind of like an absolute	This sounds kind of like an absolutely miserable experience. Can someone point out why a company would choose lisp over some other language which is just as fast performance wise?	Exuma	15.145371	-3.9459114	comment	4.0	14.0	1567010477	-10.487081
20921468	> Lisp allows you to just chuck thin	> Lisp allows you to just chuck things off so easilyLisp people (like Paul Graham) say that a lot, but they also admit that there’s a pretty steep learning curve before you get to that point - at least, I’ve never heard anybody say that Lisp is both easy to us	commandlinefan	15.14017	-3.9465444	comment	4.0	15.0	1568057275	-10.433885
13628600	Author here.  I'm on the road today 	Author here.  I'm on the road today so latency will be high but I'm happy to answer any questions people have.  Also, a shameless plug: I'm still coding in and writing about Lisp.  Some currently active projects:https://github.com/rongarret/ergolibhttps://gith	lisper	15.152472	-3.9294705	comment	4.0	14.5	1486911550	-10.479231
13683313	As someone who has to use Guice at w	As someone who has to use Guice at work, and not by choice, the following critique best sums up my thoughts on Guice.http://omaritech.blogspot.com/2014/03/why-google-guice-is-ev...Am I in the minority here? Do most people really think that the Guice framework 	whack	15.208916	-3.7478693	comment	4.0	14.0	1487551754	-10.181894
13888438	0) Guile is a GNU project1) Guile ha	0) Guile is a GNU project1) Guile has no Global Interpreter Lock.2) Guile is a scheme, so it is homo-iconic cf. https://en.wikipedia.org/wiki/Homoiconicity3) Scheme (and lisp in general) are nice to write Domain Specific Languages.4) Guile doesn't have a parti	amirouche	15.191742	-3.783652	comment	4.0	14.5	1489693275	-10.22538
13902098	It is even better. They also have co	It is even better. They also have code guidelines. Easing the choosing of technologies (open source!) and configuration.Less opportunities for that crazy developer who wants to implement your costumer facing site in Common Lisp.	neves	15.143163	-3.9309049	comment	4.0	11.0	1489855478	-10.457153
13933620	Lisp does support more than just lis	Lisp does support more than just lists as data structures.Arrays are also available, including specialized versions that hold value types.https://www.cs.cmu.edu/Groups/AI/html/cltl/clm/node15.htmlYou can also stack allocate if required, via dynamic-extent, htt	pjmlp	15.083367	-4.0118456	comment	4.0	14.5	1490208710	-10.487321
13949936	Seriously. I just started looking in	Seriously. I just started looking into Common Lisp last weekend, and if it weren't for the active communities on Reddit and IRC, you'd get the impression that the language was abandoned some time in 2012.	nerdponx	15.140445	-3.9484096	comment	4.0	16.0	1490372185	-10.501371
13950659	Does Lisp Suck?If HN had a FAQ this 	Does Lisp Suck?If HN had a FAQ this might be near the top.  As new people go into CS they seem to be aesthetically drawn to, or repulsed by, Lisp.  The irony is there is no objective truth so these two groups of people spend a lot of time supporting their argu	WhitneyLand	15.154517	-3.9345832	comment	4.0	19.5	1490376928	-10.459868
13981539	I have a couple REPLs for specific p	I have a couple REPLs for specific projects that I routinely keep running for months at a time.The idea that user = programmer was part of the MIT AI Lab culture before there were Lisp Machines.  For example, the top level of ITS, the PDP-10 OS they used, was 	ScottBurson	15.095124	-3.9513776	comment	4.0	11.0	1490741238	-10.349951
14167668	"It's too bad, since being a ""standar"	"It's too bad, since being a ""standard"" has helped CL to grow so much, despite some warts that the language inherited from old times habits.Without a standard, it seems most efforts to build a new Lisp come to a naught (think Racket and Clojure and Arc and ...)"	behnamoh	15.1449	-3.9633675	comment	4.0	14.0	1492796933	-10.456833
14173956	Has there been any update to the sta	"Has there been any update to the status of GuileEmacs? I have read that it aims to be ""the future of Emacs"", but I rarely see mention of Guile from the Emacs community."	nagvx	15.194065	-3.7874074	comment	4.0	10.5	1492885991	-10.287466
14072121	Mezzano – Common Lisp OS: Demo 3 rel	Mezzano – Common Lisp OS: Demo 3 released	phoe-krk	15.115848	-3.9395907	story	4.0	48.0	1491743683	-10.270772
14248232	It's been stated a number of times, 	It's been stated a number of times, butx.f(y, z) has just as many parens as (f x y z). And Haskell particularly comes with so many syntax quirks. There is a lot of cruft you need to learn to get to the underlying functional core of haskell. Lips you can get 10	BoiledCabbage	15.114159	-3.990709	comment	4.0	12.0	1493744849	-10.449052
14249908	Keyword: dialect. But Erik Naggum, 2	"Keyword: dialect. But Erik Naggum, 2002 [0]:> The ""Lisp"" Scheme is a dialect of is no longer the current meaning of
  ""Lisp"".  It is somewhat like calling English a dialect of German because
  of ancient history that has since between invalidated by each of th"	Jach	15.138594	-3.927311	comment	4.0	14.0	1493754481	-4.763329
14250107	>> 1 - All those parenthesis. (Still	">> 1 - All those parenthesis. (Still a top objection)> If you actually count parens fairly you will find that Lisp has no more than any other languageBull. For example, compare the Lisp factorial function from the article:    (define (fact x)
      (if (zero? "	brianberns	15.063285	-4.0320606	comment	4.0	26.5	1493755751	-10.35332
14249480	To me the hard part about lisp is th	To me the hard part about lisp is that every programmer that uses lisp tailors it so to their own taste that it can become quite hard to read the 'top level' of a lisp program without first having gone through all the lower layers. It is as if every project in	jacquesm	15.135662	-3.9565413	comment	4.0	12.0	1493751601	-10.340313
14258004	To any lisp enthusiasts who wonder w	"To any lisp enthusiasts who wonder why the language family isn't more popular: this is 99% of why. You have to use an editor where ""copy"" is called ""Kill-ring-save"" is invoked with ""Meta-w"". Any attempt to use any other tool will be met with incredulous respon"	dTal	15.120189	-3.9575398	comment	4.0	11.5	1493832516	9.311911
14311996	Yeah right.Elisp was dynamic-scoping	Yeah right.Elisp was dynamic-scoping-only until version 24.1. That means elisp code written before that (i.e., 99.999% of emacs code that's not in C) as well as most of the code written after that, has essentially the feel of hacky cruft which will drown a mod	fizixer	15.094524	-3.964443	comment	4.0	11.0	1494452587	12.9501705
14287943	A History of CLU – Barbara Liskov (1	A History of CLU – Barbara Liskov (1992) [pdf]	tjalfi	15.140153	-3.9250019	story	4.0	75.0	1494194515	-10.397837
14347100	Lisp 1.5 Primer (1967) [pdf]	Lisp 1.5 Primer (1967) [pdf]	tjalfi	15.149597	-3.9338915	story	4.0	103.0	1494904287	0.056814637
14445549	Slight tangent: Am I the only one th	Slight tangent: Am I the only one that's a little bit annoyed that it seems like you need to start using the complex beast that is Emacs to get first class Lisp support? There are one-off apps, but everyone swears by SLIME mode or similar.Yes, I get it. The ed	Karunamon	15.105719	-3.9674826	comment	4.0	11.0	1496154053	-10.393727
14481514	> I don't doubt that you can write p	"> I don't doubt that you can write productive systems in CL (bit of a fan myself), but the ""oh we have smart compilers that just make it as fast as C"" just isn't true.But 50% of C is great. Imagine in Lisp you can achieve 50% performance of C. That means you c"	lispm	15.1230135	-3.9668026	comment	4.0	19.0	1496583426	-10.374963
14516856	Forth is probably the smallest true 	Forth is probably the smallest true high level language there is. It is entirely self-contained, needs just about nothing in terms of hardware support and can run in as little as 2K of memory.It is well suited to things like real-time control, you'll probably 	jacquesm	15.038132	-3.823715	comment	4.0	12.0	1496952728	6.1510777
14688189	If they allowed FORTH it would be ev	If they allowed FORTH it would be even worse -- everything in FORTH is redefinable -- you could make 1 equal to 2 if you want.	jhbadger	15.037714	-3.808411	comment	4.0	13.5	1499089708	6.1043925
30777090	Is there any progress made on modern	"Is there any progress made on modernizing Emacs internals? Like* disentangling it from GTK to make Emacs a proper GUI citizen or
* the shift from Emacs Lisp towards ... is it Guile?"	jhoechtl	15.169835	-3.8156042	comment	4.0	14.5	1648032681	-10.294012
30978934	For those who may not be familiar wi	"For those who may not be familiar with Erik's thinking and style, here is a sample post[1] from Erik on Paul Graham's Arc dialect of Lisp, which, I recall, still powers HN:I have briefly looked at Arc. It is yet another demonstration of the
problem of too stro"	jonjacky	15.152008	-3.9239688	comment	4.0	13.0	1649609541	13.122806
31056266	I have been using Common Lisp profes	I have been using Common Lisp professionally for over a decade. Largest codebase was probably ~100k lines for an embedded optical fingerprint analysis and booking system for US law enforcement agencies. The largest Lisp team I've worked on was about 30 people 	reikonomusha	15.143465	-3.9415388	comment	4.0	18.5	1650144675	-10.463231
31056711	how do you go about producing static	how do you go about producing static binaries for sbcl?	someguy101010	15.125337	-3.9440906	comment	4.0	15.0	1650148678	-10.400955
31057725	You don't. As others noted, you can 	You don't. As others noted, you can save a core image. Cross compiling, tree shaking, and other such things don't exist in the sbcl world and (from what I've read in the past) the people developing it have little or no interest in those features.If you need th	d110af5ccf	15.130903	-3.9408112	comment	4.0	12.5	1650160183	-10.367081
31123987	First-class functions, lambdas, and 	First-class functions, lambdas, and closures are mostly unheard of in the top 20 programming languages. Aside from JS, you're pretty much out of luck.Proper tail calls. Technically not part of the CL spec, but implemented by the best CL variants (and by scheme	hajile	15.088023	-4.0175395	comment	4.0	15.0	1650645444	-10.370948
31120359	Common Lisp Resources	Common Lisp Resources	oumua_don17	15.145063	-3.9413788	story	4.0	200.0	1650627066	-10.442344
31179399	Good to see, but at this point in it	Good to see, but at this point in its lifecycle I don't really believe a lack of good tutorials is a barrier or even impediment for CL.The problem is after the tutorial is done, all the libraries (look (like (this))) and the language is so powerful it is diffi	roenxi	15.145795	-3.9386766	comment	4.0	16.5	1651065033	-10.439753
31181866	Practical Common Lisp gets you up to	Practical Common Lisp gets you up to speed very fast.I wish there was something similar for scheme. Most scheme books focus on teaching  you compsci with the language and not on teaching you how to build practical things with it.It's quite hard to onboard some	latenightcoding	15.1185465	-3.9612103	comment	4.0	10.5	1651076026	-10.434101
31187093	I wonder how difficult it would be t	I wonder how difficult it would be to port elisp to Common Lisp and then get GNU Emacs running hosted in SBCL or whatever. I really like the idea of my editor running in the image.	User23	15.109292	-3.9569478	comment	4.0	11.5	1651102117	-10.3952875
31202614	Lisp macros are really cool. Program	Lisp macros are really cool. Programming is not satisfying to me without a similar feature.But, most people are happy with just typing and copy pasting stuff around. They don't care. I've shown them before and after macro refactoring code comparisons and they 	TurboHaskal	15.103837	-3.9929283	comment	4.0	15.0	1651219520	-10.366773
31207476	I love that we now live in an age wh	I love that we now live in an age where older languages can suddenly start seeing a renaissance. I hope something similar comes to common lisp.	cultofmetatron	15.141606	-3.9406574	comment	4.0	12.0	1651250629	-10.418174
31250191	Hy is a false promise.  It looks lik	Hy is a false promise.  It looks like a lisp; depending on your idea of a Platonic lisp, it may be a lisp --- but it preserves Python semantics, including its odd scoping rules, and it doesn't feel like writing actual lisp.  Scheme or Common Lisp simply feel m	JasonFruit	15.096826	-3.9949446	comment	4.0	13.0	1651595128	-10.087074
31288761	Why is Emacs lisp absurd ? It’s an e	Why is Emacs lisp absurd ? It’s an editor that is widely popular .	zitterbewegung	15.132249	-3.946052	comment	4.0	11.5	1651864763	-10.392589
31494983	I find it's better to think in terms	"I find it's better to think in terms of ""familiar"" vs ""not familiar"" rather than ""easy"" / ""hard"". Lisp syntax to me is the easiest -maybe with Forth and Smalltalk- syntax around, certainly orders of magnitude easier than Python's. And I don't mean just semanti"	metroholografix	15.124936	-3.9704008	comment	4.0	19.0	1653413118	-10.384944
31587250	People really underestimate how much	People really underestimate how much RAM a Lisp/Scheme needs.Building lists out of pairs and then using them as your intermediate format creates a lot of garbage.	bsder	15.100737	-3.9930687	comment	4.0	13.0	1654113749	8.900298
31593681	Great work!  You write,> …wasm has a	Great work!  You write,> …wasm has a few poor decisions in its design that make it less-than-conducive to being a target for Common Lisp…Could you say a bit more about those design decisions?	gumby	15.154588	-3.928263	comment	4.0	15.0	1654170101	7.6898084
31637415	Lisp advocacy (for the last few deca	Lisp advocacy (for the last few decades) is always about how you can write anything in 10 lines of macros, but I never see anyone discuss security or whether the result actually does what you meant it to do.	astrange	15.119726	-3.9730875	comment	4.0	20.0	1654492520	-10.383964
31637532	The irony of the 2 + 3 = 5 example i	The irony of the 2 + 3 = 5 example is that it shows how domain-specific languages work best with iconic forms. Paralinguistic symbols as constituency tends toward mismatched metaphors and visual sameness. However, crafted carefully, such tools represent the be	rileyphone	15.115422	-3.976978	comment	4.0	20.5	1654494126	-10.331082
31561240	Nonrecursive Lisp Reader	Nonrecursive Lisp Reader	eklitzke	15.141669	-3.9443264	story	4.0	39.0	1653931197	-10.434678
28847916	As unsatisfying as it may sound, Com	As unsatisfying as it may sound, Common Lisp taught me that, truly, none of this function binding capture stuff really matters in practice. Millions of lines of Common Lisp code have been running for decades without running into problems with capture. So I pur	reikonomusha	15.089883	-4.0056653	comment	4.0	18.5	1634095663	-10.3339615
28875071	Anyone who had used or tried Carp an	Anyone who had used or tried Carp and Janet (that was on frontpage the other day)?What are some strong points on Carp vs. Janet?	fuzzythinker	15.061399	-3.887201	comment	4.0	15.0	1634280764	9.9349165
28875903	I was thinking of building my own LI	I was thinking of building my own LISP-like language, but seeing so many pop up on here I don't think I'll bother.	billpg	15.133666	-3.9473379	comment	4.0	13.0	1634290394	-10.445034
28962833	>  Lisp allows us to scale dramatica	>  Lisp allows us to scale dramatically and manage a large code base.Wow, really? How big is your company?> Right now, in our core company we have three people, two here in Virginia and one in Mexico City.	pphysch	15.140837	-3.9457002	comment	4.0	13.0	1634937319	-10.449355
29007312	> Getting Lisp to run as fast as C t	> Getting Lisp to run as fast as C takes major effort when at all possible.The Computer Language Benchmarks Game shows Lisp Code as generally being between 2x and 10x slower than C++[1]. As fast as C? No. Way faster than Python, and more than fast enough to be	throw10920	15.123754	-3.958362	comment	4.0	20.5	1635288152	-10.383279
29007501	Can I be extremely shallow? Because 	Can I be extremely shallow? Because the language feels like it's from the 60s. Like writing Fortran or Ada or Algol in 2021. C is timeless, it doesn't count.I love lisps, but Racket, for example, feels more modern than Common Lisp to me. And for shallow people	1_player	15.128861	-3.9564698	comment	4.0	17.0	1635289428	-10.449347
29007642	That article partially validates my 	That article partially validates my idea on why some people think that Lisp is such a force multiplier. The idea would be that compilers are one of the most important tool productivity-wise, and that Lisp allows you write your compilers yourself.That would als	Zababa	15.135994	-3.9573448	comment	4.0	12.0	1635290285	-10.434051
29008148	> ... AAA video games? Yes.One of my	> ... AAA video games? Yes.One of my favorite stories of the ideas of lisp commercially is a dialect that Naughty Dog developed for their game development.It started as being developed for Crash Banicoot on the PS1.Which is really interesting given how limited	spicybright	15.119012	-3.944869	comment	4.0	14.5	1635293954	-8.076944
29006889	Performance:Getting Lisp to run as f	Performance:Getting Lisp to run as fast as C takes major effort when at all possible.Resources:Lisp needs a lot of space to do it's thing; and while it's certainly possible to downsize it, you're left with something that's not really Lisp anymore.Ecosystem:Fin	codr7	15.133261	-3.9517376	comment	4.0	25.5	1635285618	-10.493349
28990878	History of Lisp (1979) [pdf]	History of Lisp (1979) [pdf]	iamcurious	15.153091	-3.9256647	story	4.0	153.0	1635184084	-10.405552
29056026	I'll always vote up submissions refe	I'll always vote up submissions referencing anything FORTH related.  For me FORTH is as much fun as lisp appears to be for others.  I've never really done much with it, but I always like the simplicity and the ability to reason about it.Sure FORTH has problems	stevekemp	15.093974	-3.875838	comment	4.0	13.0	1635677022	6.154295
29202207	Having never used Common Lisp, it's 	Having never used Common Lisp, it's one of the languages I wish I've used for a long time.However, working with Clojure and Scheme, I understand the power of repl driven development that is difficult to explain outside the experience of it.	jmkr	15.08098	-4.035763	comment	4.0	46.5	1636738862	-10.724762
29204449	> I would spend a lot of time trying	> I would spend a lot of time trying to figure out the actual type of the thing that I a given functionThat's just because your were a noob. You hadn't learned and internalized the standard library yet, and you hadn't learned to understand flow and structure o	didibus	15.141988	-3.948295	comment	4.0	15.0	1636750713	-10.457928
29205265	Lisp code I write today may run 10 y	Lisp code I write today may run 10 years from now, but would I be able to read it a month from now? Maybe I just never got familiar enough with it, but code I wrote for my AI class was meaningless to me 6 months later.	jmugan	15.14115	-3.941849	comment	4.0	10.5	1636756021	-10.405432
29247392	Are there any pictures of the hand-w	Are there any pictures of the hand-wired LISP Machine online?I searched, but couldn't find it.Also - when LISP was invented (1958) - what was the state of computers at the time? Doing some research - it seems like direct keyboard input to computers was only av	onlyrealcuzzo	15.144937	-3.9397762	comment	4.0	11.0	1637103923	-10.42621
29259436	My point is that Forth's general goa	My point is that Forth's general goal is to be a higher-level assembly language for embedded systems.Common Lisp and Scheme's general goal is to be a high-level programming language for application development (also PL research in Scheme's case).By general goa	eatonphil	15.140466	-3.9384432	comment	4.0	12.0	1637186530	-10.427677
29260683	The specific issue with reading Fort	The specific issue with reading Forth is that unlike other languages, you, the reader, need to be intimately familiar with the call semantics of every word that you're trying to read. In most other languages, this is not a problem as (most) are explicit in wha	whartung	15.034156	-3.8306837	comment	4.0	13.0	1637194854	6.120679
29292788	That's hilarious, because the Wolfra	That's hilarious, because the Wolfram Language is actually quite lispy.  Or, at least you can write it in a very lispy style.	actually_a_dog	15.134279	-3.9534535	comment	4.0	11.0	1637451358	-10.421297
29310278	> The establishment of protocols is 	"> The establishment of protocols is a sort of before-the-fact hedge against the ""prisoner's dilemma""; that is, it creates an obvious way for two people who are not directly communicating to structure independently developed code so that it works in a manner th"	smegsicle	15.045962	-4.040611	comment	4.0	10.5	1637607578	-10.247138
29630890	Am I the only one who dislikes S-exp	Am I the only one who dislikes S-expressions and prefers XML or JSON or even YAML? The parenthesis are way too confusing when editing manually and the format doesn't have enough semantic information to always correctly parse into common structures in any langu	shatteredgate	15.069689	-4.0250506	comment	4.0	12.0	1640037589	-10.343878
34157441	Write it in Lisp and don't tell the 	Write it in Lisp and don't tell the boss! I wonder if anyone has ever gotten this to work. I sure hope so.	djha-skin	15.147478	-3.9359837	comment	4.0	11.5	1672200502	-10.387558
34181446	The reason Forth is not used in prod	The reason Forth is not used in production is that its philosophy goes against that of commercial software. The goal of commercial software is to create complex and over-engineered solutions that will force people to pay in one way or another. Languages like C	coliveira	15.036798	-3.808542	comment	4.0	17.0	1672370964	6.07774
34203240	The syntax is probably the only thin	The syntax is probably the only thing left that other languages haven’t copied/implemented? Directly exposing the AST to the programmer is a truly unique Lisp feature as far as I know.Maybe the ability to reprogram the Reader is another one that other language	deterministic	15.08921	-3.9966342	comment	4.0	10.5	1672543146	-10.253289
34285535	3 months ago you described yourself 	"3 months ago you described yourself as a ""non-techie"", and you come here of all places, and cry about too much Lisp? You've taken a wrong turn, pal. This house was built with parens.Sent from my Lisp Machine."	sph	15.140621	-3.945538	comment	4.0	12.5	1673069403	-10.455944
34327461	The problem with almost all LISP tut	The problem with almost all LISP tutorials, books,... is there's no guide on how to install toolings at the beginning. Instead, there's just praise and praise.Such a missed opportunity.	revskill	15.146088	-3.9351642	comment	4.0	19.5	1673368623	-10.479756
34525986	I think you're maybe just a little c	"I think you're maybe just a little confused, or I'm missing something. Kebab case is in general not viable to implement unless you have very a special/quirky syntax, because there is no way differentiate to `a-b` from `Id(""a-b"")` and `Subtract(Id(""a""), Id(""b"")"	gnulinux	15.096874	-3.994744	comment	4.0	14.5	1674691202	-10.325343
34558009	And how nice when those scouts lay g	And how nice when those scouts lay groundwork that is useful for others, rather than creating something only they can use?Yes, you may think better in lisp than c++, but that doesn't help your team when you created something and moved right along. Better to sp	jvanderbot	15.131063	-3.9605784	comment	4.0	12.5	1674917868	-10.423979
34675510	"This article doesn't use the name ""L"	"This article doesn't use the name ""Lisp"" enough. The language with the best chance of lasting a long time is the one with the simplest syntax. That is Lisp. It is already one of the oldest programming languages and the lisp family of languages are still mutual"	roenxi	15.137444	-3.951757	comment	4.0	19.5	1675678204	-10.452595
34675834	What is Lisp used for in production 	What is Lisp used for in production these days? The wiki didn’t really specify, just that it’s connected to mathmatics and AI research.	prox	15.142059	-3.9443464	comment	4.0	12.0	1675681445	-10.471523
34844881	I love Lisp (particularly Scheme), a	"I love Lisp (particularly Scheme), and heard that Janet was strongly inspired by Lisp and is ""really Lisp underneath"", but is really fast and strong at math, so I thought I'd give it a try, and after learning it I started wondering to myself, ""why am I not sim"	pmoriarty	15.137626	-3.9566774	comment	4.0	24.5	1676706160	-10.442098
34845505	"vaguely kinda related.
I want to lik"	"vaguely kinda related.
I want to like lisp for its features but the syntax is too much for me to pick up without serious time investment, which I am not sure I want to make.are there any other languages that support for example lisp-like interactive REPL, eg a"	return_to_monke	15.111384	-3.970005	comment	4.0	10.5	1676713403	-10.43418
34863107	I've been digging into Common Lisp a	I've been digging into Common Lisp again lately. I'm really enjoying some parts: CLIM is weird but interesting, and the fact that I'm basically developing inside a debugger makes testing and iterating on stuff pretty straightforward. On the other hand, library	floren	15.09749	-3.9663537	comment	4.0	11.0	1676850281	-10.338314
34910371	Are there any serious attempts at re	Are there any serious attempts at reworking the Common Lisp standard for more modern problems?I know the space is active, but when I see the old bright yellow CLHS linked to from documentation sites, I just frown a bit. The Lisp community very nearly goes out 	l_theanine	15.142465	-3.9479942	comment	4.0	10.5	1677159382	-10.497362
34939356	LISP is worth learning for a differe	LISP is worth learning for a different reason – the profound enlightenment experience you will have when you finally get it. That experience will make you a better programmer for the rest of your days, even if you never actually use LISP itself a lot. (You can	teddyh	15.137597	-3.9516633	comment	4.0	13.0	1677351437	-10.422077
34951048	We (professional developers using li	"We (professional developers using lisp-like languages daily) don't have the reaction of ""ewww"" as soon as we see something foreign, but instead we think ""hmm, that looks different, I wonder why it looks different?"" and then we start to try to understand it. Th"	capableweb	15.132328	-3.9580653	comment	4.0	13.0	1677455238	-10.538338
35019317	It seems dirty to use parser combina	It seems dirty to use parser combinators and a tokenizer generator for lisp instead of just... writing the parser. That's part of the beauty of lisp.Maybe a different syntax would have fit this sort of post better.	eldenring	15.098961	-3.9947762	comment	4.0	14.0	1677919467	-10.285802
16830856	I think most modern programmers pref	I think most modern programmers prefer explicit destructuring and taking an element from a collection by its key rather than excplicitly traveling node links using car and cadr. The 'original' lisp has some really arbitrary naming conventions. Languages are co	fsloth	15.125918	-3.970079	comment	5.0	14.5	1523633191	4.731267
16861362	I wrote some high-performance lisp a	I wrote some high-performance lisp applications in production. My main was was a threaded queue worker, driven off beanstalkd, that processed large volumes of data. This was highly successful and didn't require overly-provisioned servers (was using CCL/linux x	orthecreedence	15.1167555	-3.9703124	comment	5.0	17.5	1523992338	-10.413892
16861062	> While the industry waits for Light	> While the industry waits for LightTable and similar tools to mature, Lisp programmers have been silently and haughtily enjoying such capabilities with SLIME for many years.Were a significant number of Lispers really waiting for LightTable to be usable for th	aeorgnoieang	15.143095	-3.9307837	comment	5.0	16.5	1523990181	-10.443068
17037027	"What exactly is meant by the line ""D"	"What exactly is meant by the line ""Design patterns disappear as you adapt the language to your problem domain.""The word ""disappear"" is a hyperlink to a pdf, which refers to domain-specific design-patterns. I don't quite seem to grasp what is being implied on t"	pure-awesome	15.13759	-3.9549172	comment	5.0	14.5	1525937512	-10.443269
17037511	What confused me a lot is that nobod	What confused me a lot is that nobody seems to give an example on how to build a binary out of a Lisp program/make it runnable from command-line.Also most tutorials/books I found don't guide you on how to build an application/structure your code – which is rat	thibran	15.128547	-3.9568264	comment	5.0	13.0	1525946055	-10.424865
17038107	This is a very nice web site describ	This is a very nice web site describing a programming language with unparalleled expressiveness, power and permanence.I am heavily invested in Common Lisp. We are developing a programming environment for designing new materials and molecules called Cando (http	drmeister	15.120242	-3.9675198	comment	5.0	43.5	1525953989	-10.39723
17106874	The older I become the more I realiz	The older I become the more I realize how influential Lisp is/was. The Lisp memory model presented here looks like object oriented data structures, if you squint a little. Java dragged C++ programmers 'halfway to Lisp' [1]. I now do a lot of programming on Pyt	AlexanderDhoore	15.13008	-3.9644127	comment	5.0	16.0	1526710426	-10.415101
17115728	Symbolics Lisp Machine Museum	Symbolics Lisp Machine Museum	ghosthamlet	15.130587	-3.9484444	story	5.0	52.0	1526867895	-10.3444395
17388266	Ask HN: Why aren’t libraries inter-c	Ask HN: Why aren’t libraries inter-callable by default?	abrax3141	15.124584	-3.9593434	story	5.0	14.0	1529872499	-10.403333
17404379	Oh, DOS.It's always sad to read hist	Oh, DOS.It's always sad to read histories of computing during the 80s. It was a lost decade in many ways. Much more powerful and competent paradigms were alive and vital at the start, but by the end, they were all collapsing. A few different choices, a little 	pnathan	15.142795	-3.921724	comment	5.0	25.0	1530051143	-10.342269
17439988	It's been so sad to see that while t	It's been so sad to see that while the AI winter ended, the Lisp winter that started around the same time never did.  Maybe it's coming back after consolidation on the languages end:  SBCL and Clojure are coming ahead as clear winners, and are quite powerful.I	daniel-cussen	15.140421	-3.9468474	comment	5.0	21.0	1530518406	-10.505235
17440013	The guys that wrote this piece have 	The guys that wrote this piece have drunk the kool aid of Lisp.To say that library support for bioinformatics is on the early stages is quite a misunderstanding. Lisp was one if not the first language to be used in everything, including bioinformatics. If it i	hevi_jos	15.121859	-3.9839303	comment	5.0	13.5	1530518807	-10.817414
17535534	Anarki – Community-managed fork of t	Anarki – Community-managed fork of the Arc dialect of Lisp	christianbryant	15.143379	-3.94406	story	5.0	126.0	1531667233	-10.452576
17625363	Slightly off the topic: if I have to	"Slightly off the topic: if I have to start using Lisp now, how do I start?
I tried curating things on my own but felt overwhelmed with the alternatives and resources.Will appreciate your take on this."	aryamaan	15.149931	-3.935303	comment	5.0	12.5	1532693616	-10.465625
17644580	Ferret: a Lisp implementation for re	Ferret: a Lisp implementation for real time embedded control systems	tosh	15.119859	-3.9501183	story	5.0	135.0	1532960895	-10.401038
17720488	This is not particularly accurate, a	"This is not particularly accurate, and doesn't seem maintained. Just looking at the start of the first column, Common Lisp, for a bit:- ""command line program"" is empty, but should contain    sbcl --eval '(+ 1 1)'

- ""identifier"" says ""case insensitive, cannot "	jorams	15.120033	-3.9569101	comment	5.0	14.5	1533770535	-10.358619
17797149	The premise of the title is a bit od	The premise of the title is a bit odd, because technically anything a lisp can do assembly language can do. The bar on being able to do 'anything' is so low that many things accidentally become Turing complete.Can lisp programmers still feel smug about using l	roenxi	15.140047	-3.9503262	comment	5.0	23.5	1534727943	-10.445675
17797184	>> because it has basically no synta	>> because it has basically no syntax, so any program will be a direct representation of a programmer's mental model for how their program worksThat's actually a problem with Lisp, because every programmer would have different mental model and without some syn	mamon	15.136811	-3.9539223	comment	5.0	21.0	1534728457	-10.429584
17823846	Makes one wonder if an OS should be 	Makes one wonder if an OS should be built using LISP these days to make available that kind of hackability.  Or port Genera OS [1] to x86 or arm.  The languages used by the VPRI project were bootstrapped on lisp if I recall correctly [2].  It would be great if	kristianp	15.129065	-3.945232	comment	5.0	13.5	1534988263	-10.33567
17853496	In Freenode's #mercurial, sjl said t	"In Freenode's #mercurial, sjl said this about common lisp:   <sjl_>	CL code from the early 90's runs just fine on SBCL from a month ago
   <sjl_>	But trying to run five-year-old python/ruby/scala makes me hate life.

This echoes his earlier blog post, volatile"	jordigh	15.1285715	-3.951326	comment	5.0	19.5	1535396365	-10.416002
19079943	MIT went with the Berkeley editor. A	MIT went with the Berkeley editor. A lost opportunity to introduce programmers to the beauty of using Emacs and Lisp.	melling	15.12545	-3.9489026	comment	5.0	14.0	1549309730	-10.425206
19263550	A Lisp machine isn't just some hardw	A Lisp machine isn't just some hardware with Lisp on top. You can do that today with x86. A Lisp machine is supposed to have support for lisp primitives at a hardware level.	mruts	15.132583	-3.9509878	comment	5.0	17.5	1551278980	-10.437786
19317133	Do you think it is useful for a Lisp	Do you think it is useful for a Lisp noob?	damsdu78	15.144467	-3.9404438	comment	5.0	15.5	1551859406	-10.457164
19317622	Still, its a trip to hell to maintai	Still, its a trip to hell to maintain any lisp codebase -- especially if it contains macros. I think it is actively hostile to collaborative programming, and that is a structural problem where there is no remedy but obscure programming patterns (which are ampl	maze-le	15.124988	-3.9642754	comment	5.0	20.0	1551865643	-10.431277
19319451	Is there a prominent open source pro	Is there a prominent open source project written in Common Lisp? Something like Pandoc for Haskell or RabbitMQ for Erlang?	rhizome31	15.135055	-3.9502652	comment	5.0	14.0	1551885254	-10.457928
19479039	Only if you don't consider a forest 	Only if you don't consider a forest of parens to be noise. I do. I'm sure I could get used to it after a while, but at first glance, Python code is definitely cleaner than Lisp.	istjohn	15.125927	-3.9662201	comment	5.0	15.0	1553464940	-10.443587
19547065	People talk about forth having no sy	People talk about forth having no syntax the same way people talk about lisp having no syntax: not entirely correctly. Of course, every textual representation of anything has a syntax, but when people talk about something not having a syntax what they really m	mruts	15.0915365	-3.9951515	comment	5.0	12.5	1554146299	-10.260662
19683320	I would love to get my hands on an o	I would love to get my hands on an old Lisp machine, just to play with it.  While there's obviously nothing pragmatic about using one of them nowadays, I think they're an incredibly interesting footnote in computing history, and I always like to think about th	tombert	15.142116	-3.940223	comment	5.0	20.0	1555514320	-10.461411
19953823	More lines of prose praising lisp ar	More lines of prose praising lisp are being written than lines of lisp these days it seems.I recently asked how to write a tree shaker in #sbcl because I thought it’d be cool. All I got was a “why would you do that?” and “ok fine your time to waste” and no sub	gaze	15.150899	-3.9382808	comment	5.0	22.5	1558280579	-10.458126
37840482	How does Common Lisp compare with el	How does Common Lisp compare with elixir. I'm trying to find a good functional language to learn.	movingmovie	15.1353	-3.9555645	comment	5.0	12.5	1696994036	-10.4418545
37840410	Steel Bank Common Lisp is what I bui	Steel Bank Common Lisp is what I built my businesses on. Interactive software building is the work of magic.Nothing comes close.Once I retire and have some more free time I want to make videos and make open source contributions to make it more palatable and se	ilrwbwrkhv	15.13716	-3.9458349	comment	5.0	20.5	1696993389	-10.482664
38024477	so... there's no lisp or forth.  i g	so... there's no lisp or forth.  i guess that means you can't write security bugs in lisp, right?	retrocryptid	15.131651	-3.956645	comment	5.0	13.0	1698322242	-10.461986
38122267	Ask HN: Looking for statically typed	Ask HN: Looking for statically typed, No-GC and compiled Lisp/scheme	soulbadguy	15.071562	-3.9015224	story	5.0	3.0	1698969945	-5.6000624
38168680	Very cool project. Not commenting on	Very cool project. Not commenting on that. Lisp and it's derivatives often hits the front page of HN and I always wonder why. What is it about lisp that is so powerful? so much so that some see it as the platonic ideal of programming languages or so it seems?	gigatexal	15.150533	-3.9362743	comment	5.0	13.5	1699303317	-10.451847
38275661	The odd lack of verbs (in the title 	The odd lack of verbs (in the title and the text) made me immediately suspect this was an unfortunate AI submission.  Is omitting verbs part of the inside joke of Lisp communities?	ezekiel68	15.127511	-3.9496794	comment	5.0	14.0	1700048400	-10.437559
38343933	Interactive Common Lisp Development	Interactive Common Lisp Development	billiob	15.1341715	-3.9477394	story	5.0	118.0	1700465262	-10.4151125
38400175	I often fantasize about a world wher	I often fantasize about a world where lisp or smalltalk machines took off instead of the Windows/Linux we have now. I know things weren't perfect, but it just seems like such a cool system and that we've evolved in a much less powerful direction.	7thaccount	15.116621	-3.9567192	comment	5.0	22.0	1700793786	-10.375168
38570491	Every once in a while I come back to	"Every once in a while I come back to this, and walk away feeling like it's not worth my time to learn.The language might be ""objectively"" simple, but it's not at all a simple language. There is no user guide, nor is there a nice readable language spec like R7R"	nerdponx	15.115576	-3.9734075	comment	5.0	19.0	1702051045	9.241473
38586002	I've heard this about Lisp, but I do	I've heard this about Lisp, but I don't really get how this doesn't apply to other languages. How is writing special operators in Lisp different from writing special functions in any other language?	smlavine	15.125899	-3.9705737	comment	5.0	15.0	1702155376	-10.521496
33194389	Shared structure is overrated. The c	"Shared structure is overrated. The cases where you need a tree-like mutable structure are vanishingly small in modern times. Mostly it boils down to ""just use hash tables.""This isn't just a dismissive observation. It's the heart of why Lisp is so hard to imple"	sillysaurusx	15.07146	-4.024984	comment	5.0	23.5	1665684208	-10.341142
33194570	You're right, I was imprecise. I mea	"You're right, I was imprecise. I meant specifically shared list structure in Lisp contexts, not shared structures in general.There's a fascination in the Lisp world for cons cells. Specifically the cell aspect. If you represent lists as:   l = [x, [y, [z]]]

T"	sillysaurusx	15.099151	-4.002728	comment	5.0	19.0	1665685289	-10.573151
33349329	The Importance of Lisp	The Importance of Lisp	veryniceborat	15.150499	-3.9328423	story	5.0	39.0	1666817829	-10.471127
33463117	I can see why someone would learn Li	I can see why someone would learn Lisp as learning a different paradigm than what you are currently using helps you see thing in different ways and improves your overall ability to solve problems.What I miss is what classes of problems Lisp helps you to solve 	DeathArrow	15.140994	-3.9521785	comment	5.0	30.0	1667545970	-10.457852
33463363	I've been hearing similar arguments 	I've been hearing similar arguments from lisp advocates for decades but lisp is still a tiny niche in the programming world. Is this because programmers are just slow to catch on to superior technology or because infinite malleability is not that helpful in ac	cageface	15.100886	-3.9942715	comment	5.0	12.5	1667548727	-10.378944
33464215	> There is this list https://common-	> There is this list https://common-lisp.net/lisp-companiesIf you have so few that you can maintain a list, it kinda proves OP's point.Also as an addendum to his point, what about projects being written in the last decade or two?Emacs is cool, but it was creat	iLoveOncall	15.122891	-3.9391088	comment	5.0	23.0	1667556996	-10.433802
33521792	My windmill is simply I still can't 	My windmill is simply I still can't think in prefix for math.It's trivial for me to write x = (-b + sqrt(b^2 + 4 * a * c)) / (2 * a).But writing (setf x (/ (+ (- b) (sqrt (+ (* 4 a c) (* b b)))) (* 2 a))).That's a mind bender. Were this my source code, I'd pro	whartung	15.101263	-3.9940372	comment	5.0	15.5	1667929210	-10.3429985
33573108	"""Ur-Lisp"" – what is the exact defini"	"""Ur-Lisp"" – what is the exact definition of this?"	dustingetz	15.1456785	-3.9317496	comment	5.0	17.5	1668261659	-10.421458
33573215	"""Ur"" is a German prefix meaning ""old"	"""Ur"" is a German prefix meaning ""old"", ""original"", ""predecessor"".So Ur-Lisp would be the old original Lisp that is predecessor to all other Lisps.Other examples include Urrind (Rind == Bovine) which would be the predecessor of all species of bovine. Urzeit (Ze"	throwaway294566	15.132859	-3.9353504	comment	5.0	13.0	1668262471	-10.444387
33680178	Beside embedded system or firmware, 	Beside embedded system or firmware, what are Forth's popular use cases these days?Personally I never see backend development or mobile frontend job vacancies that require Forth skill, for example.	anta40	15.0238085	-3.8153427	comment	5.0	17.0	1668944632	6.1406226
33680238	Great timing. It's my turn to write 	Great timing. It's my turn to write a Lisp, and I was just thinking about implementing reader macros this morning :-)My goal is to create the barest-metal Lisp OS (basically Lisp REPL with full ring-0 access, the OS) with an asm reader macro to write low level	sph	15.101485	-3.9749792	comment	5.0	15.5	1668945272	-10.3265295
33746528	Haven't quite reached the ceiling ye	Haven't quite reached the ceiling yet. Go parenless. https://www.draketo.de/software/wisp	arboles	15.13746	-3.9399827	comment	5.0	13.5	1669408914	-10.417859
33747077	Anyone have any recommendations (boo	Anyone have any recommendations (books, courses, videos, etc.) on learning LISP? I've been intrigued by it and want to integrate it into a game I'm building as a development tool but not sure where to start on learning the language.	throw149102	15.149973	-3.9341826	comment	5.0	15.0	1669412203	-10.442099
33747277	Dunno if I'm in the minority, but I 	Dunno if I'm in the minority, but I just can't warm to [], either in lieu of or augmenting, () in SEXPRs. Just never felt they were necessary and, if anything, I find them distracting. Likely because I'm not used to them (baby duck syndrome and all), but the r	whartung	15.110647	-3.9859345	comment	5.0	15.0	1669413507	-10.408746
33891064	> And Lisp is not that hard to learn	> And Lisp is not that hard to learn anyway.Lisp is much, much harder to learn than JS is. Aside from that JS is a very transferrable skill, but Lisp is not.	shepherdjerred	15.094974	-3.9843829	comment	5.0	16.0	1670392255	-10.448923
35387370	So the word LISP does not appear in 	So the word LISP does not appear in the entire introduction. If you’re introducing a language thats a LISP, that’s really the kind of thing you’ve got to state up front.You can define the term for those unfamiliar, and you don’t have to dwell on it, but people	Uehreka	15.146395	-3.9424434	comment	5.0	14.0	1680271648	-10.486755
35388178	"As a wise programmer once said: ""Lis"	"As a wise programmer once said: ""Lisps are created by those who are lazy to write proper parsers""Homoiconicity does not mean your syntax should be backwards. Look at Io language: it is basically a Lisp, but it has parens in the familiar places.Same with Forth:"	oleganza	15.115657	-3.9838893	comment	5.0	12.5	1680275094	-10.398307
28113434	Lisping at JPL (2020)	Lisping at JPL (2020)	signa11	15.153997	-3.9302142	story	5.0	56.0	1628492151	-10.493867
28186131	Ask HN: Common Lisp for Startups in 	Ask HN: Common Lisp for Startups in 2021?	exdsq	15.141617	-3.9385753	story	5.0	6.0	1628999586	-10.410918
28209633	Ask HN: What are the current state-o	Ask HN: What are the current state-of-the-art Lisp implementations doing?	sfgweilr4f	15.119546	-3.9682555	story	5.0	13.0	1629207156	-10.42389
28349355	The thing is, if you start with Comm	The thing is, if you start with Common Lisp, it's pretty easy to write a DSL that adds the constraints and provides the guarantees that you need.  If you start with Rust or Haskell, it is impossible to remove the constraints those languages impose short of inv	lisper	15.085071	-3.9952006	comment	5.0	27.0	1630262679	-3.3178408
12552288	Fibers in Guile Scheme	Fibers in Guile Scheme	srean	15.173565	-3.7675858	story	5.0	74.0	1474492351	9.307093
12706986	Let’s Run Lisp on a Microcontroller	Let’s Run Lisp on a Microcontroller	gattilorenz	15.133256	-3.941108	story	5.0	135.0	1476437696	6.36241
12799227	Technical Issues of Separation in Li	Technical Issues of Separation in Lisp Function Cells and Value Cells (1988)	adgasf	15.13076	-3.948838	story	5.0	85.0	1477507453	-10.499915
13074640	Why do Lisps separate these related 	"Why do Lisps separate these related semantics? Are there implementation reasons, or is it mostly ""the way it's always been""?Edit: thanks folks! You've helped me get over the facepalm from years ago :)"	AceJohnny2	15.136777	-3.9568324	comment	5.0	18.0	1480539579	-10.435135
13096906	The biggest problem in spreading lis	"The biggest problem in spreading lisp nowadays is the fragmentation of the documentation.""Lisp"" means so little when you're writing real code.Each implementation has its own quirks and even venerable books fall when confronted with real world code at learning."	znpy	15.1334	-3.9557612	comment	5.0	14.5	1480791093	-10.497899
13193457	If you like everything being an expr	If you like everything being an expression, check out tcl. A lot of ideas from lisp show up in tcl, especially the idea of everything as an expression. Tcl embodies this idea while also having the look of an algol-like language. Funny it can pull this off whil	mroll	15.110586	-3.9840379	comment	5.0	50.5	1481898914	-10.388193
13195068	It's interesting, I'm reading Black 	It's interesting, I'm reading Black Swan at the moment by Nassim Taleb, and one of his big rants is about how we get blinded by idealized, platonic forms and ideas when the real world is messy and inherently unpredictable. E.g. trying to explain the forms of n	QuadrupleA	15.1445265	-3.9433932	comment	5.0	29.5	1481910031	-10.51124
13197479	ANSI Common Lisp is rather a design-	"ANSI Common Lisp is rather a design-by-committee monstrosity which was forced on the unwilling Lisp vendors by the Defense Department.Most of the feature set was designed via backroom political horse trading (""We'll let you include pet feature X if you support"	pjlegato	15.080113	-3.9519165	comment	5.0	19.5	1481927353	-10.251362
13226387	One of these days I going to release	"One of these days I going to release my web framework for Common Lisp.I call it ""Railth""."	StevePerkins	15.124635	-3.9546769	comment	5.0	13.0	1482287761	-10.469307
13255826	I want to learn compiler development	I want to learn compiler development.  My goal is to get enough of an understanding to be able to work on other people's compilers, such as SBCL.I'd like to:-Build a lisp that targets LLVM IR-Build an HDL out of lisp that can be compiled into a simulation, as 	DigitalJack	15.11002	-3.9634714	comment	5.0	15.0	1482706256	-10.2989855
13342054	Lispy sets	Lispy sets	codr4life	15.156459	-3.9291127	story	5.0	66.0	1483756322	-10.478252
13466597	I'm still struggling with my own leg	I'm still struggling with my own legacy code problem. I'm reviving an old LISP program from the early 1980s. Parts of it were written for the original Stanford AI Lab SAIL system in the 1970s.  It last ran under Franz LISP in 1986.My current struggle is with o	Animats	15.107534	-3.9862666	comment	5.0	15.0	1485209552	-10.470806
13475566	This article is in the same vein as 	"This article is in the same vein as that execrable Lisp article that showed up today: ""Alas, poor brilliant misunderstood me, cursed by my genius and unwillingness to ~play the silly games of the lesser people who surround me~"""	jff	15.15557	-3.9303184	comment	5.0	15.5	1485292673	-10.458951
13570965	Licecap definitely changed how I wor	Licecap definitely changed how I worked. If you want the rest of your frontend development team to think you're a god, include licecap or other gifs of features/bugfixes on code reviews. It's a thing most developers don't even think of doing (at least most did	hardwaresofton	15.150409	-3.9370077	comment	5.0	13.0	1486271020	-10.439574
27570975	How can I learn enough Lisp to under	How can I learn enough Lisp to understand Emacs well?	sudhirkhanger	15.143518	-3.9351046	comment	5.0	13.0	1624202978	-10.44604
27599708	I like this tutorial, but it's worth	I like this tutorial, but it's worth noting that you're building your own lisp with the author's bespoke parser generator.	EamonnMR	15.105721	-3.9761474	comment	5.0	14.5	1624412022	-10.305016
27720813	Unpopular opinion here - and maybe i	Unpopular opinion here - and maybe it’s because I’m jealous of the Lispers.But is Lisp used for anything real?I mean, even teaching - is it worth it to learn lisp? Aren’t other languages more practical to learn?Isn’t learning lisp like learning a a dead langua	eric4smith	15.148056	-3.939014	comment	5.0	12.5	1625310877	-10.445647
27805491	Speaking impersonally, and not direc	Speaking impersonally, and not directly to OP, you can program in Common Lisp in industry, you just don’t want to that badly, and then you justify why you can’t by making up reasons about not being able to hire, not being mainstream, not finding jobs, etc. etc	reikonomusha	15.200615	-3.8871346	comment	5.0	22.5	1626047231	-10.514595
12004614	The difference between adding symbol	The difference between adding symbols to a language with product types (i.e. consing) and simply having algebraic data types in your language is that symbols are untyped, and so you're allowed to compare apples and oranges (they're inequal).This isn't terribly	gue5t	15.118909	-3.974319	comment	5.0	24.5	1467232427	-10.311016
12113393	"It's all about the read.
But a diffe"	"It's all about the read.
But a different one.
The human ability to read code.You can write very dense code in Lisp (and the author makes the point several times on how little lines of code you need for this vs. that).
However, who's going to read that and unde"	beders	15.125604	-3.974357	comment	5.0	14.5	1468820376	-10.357599
12117177	FYI, Racket's syntax macros is from 	FYI, Racket's syntax macros is from its Scheme roots. For further information on what Scheme provides, by standard revision:R5RS: [0]R6RS: [1]R7RS: [2] (Page 22)And many Schemes provide non-standard extensions; for instance, Chicken supports non-hygienic macro	dleslie	15.211372	-3.860169	comment	5.0	24.0	1468867138	-10.263864
12456111	In the early 2000's, Teemu Kalvas cr	"In the early 2000's, Teemu Kalvas created ""Lisp 500"": 500 lines of C (plus a .lisp file that provides a library and goes as far as featuring a compiler, which works by emitting C).I can't find the sources for this.Incomplete, no .lisp file: http://www.s2.org/~"	kazinator	15.132093	-3.9560387	comment	5.0	15.0	1473360959	-10.323092
12470108	I really like the growing interest i	I really like the growing interest in making lisps that compile to C, and one that is purely function is even better. I'd be curious how the GC in this compares to the fascinating work in Chicken for novel GC in C environments.	hellofunk	15.132495	-3.9512355	comment	5.0	17.0	1473528129	-10.3804245
12470929	Python users are essentially discove	Python users are essentially discovering what Lispers have known all along - code is data. Once you fully comprehend that idea, you'll never be bothered by Lisp's odd syntax because of the freedom in expressibility it gives you.There are some fantastic Python 	madmax96	15.10446	-3.9903479	comment	5.0	17.5	1473542362	-10.306355
12471017	I'm glad to see this, and even more 	I'm glad to see this, and even more interested that it was  written in 2005. I've read lots of rants about how awesome Lisp is supposed to be from Paul Graham and Steve Yegge and all. But I never see anything significant being written in it or using it, so I h	ufmace	15.150296	-3.9470663	comment	5.0	25.0	1473543935	-10.45766
12499276	As of GSoC 2014, I believe Guile Ema	As of GSoC 2014, I believe Guile Emacs works with only some performance regressions (I believe due to overuse of dynamic scope?). In any case, you can run it today if you wanted to, just follow the process outlined on the wiki [0]. That said, I don't think the	ThatGeoGuy	15.180683	-3.7909882	comment	5.0	15.0	1473874174	-10.26865
12513710	I've said it before and I'll say it 	I've said it before and I'll say it again: go and learn Brainfuck. Just write a program that outputs your name or does FizzBuzz or something trivial, that's enough to get a grasp of it.Brainfuck is to Turing machines what Lisp is to Lambda calculus. Minimum vi	exDM69	15.125692	-3.9572887	comment	5.0	19.0	1474031580	-10.237098
22370649	I met Larry in about 1992 when I wen	I met Larry in about 1992 when I went to work on the Newton project. I had seen him around Apple before, and I knew who he was and what he was known for, but I didn't actually meet him until I joined the Newton team. I found him friendly, modest, smart, shrewd	mikelevins	15.095664	-3.9058452	comment	5.0	15.5	1582150316	-10.323458
22412937	This doesn't scratch my itch at all.	This doesn't scratch my itch at all. I love Lisp but boring old Python has the libraries I need.EDIT: Based on a comment and downvote I suppose I didn't make my point clear above. I am saying that myths are not the only thing holding Lisp back. (I may be wrong	tom-thistime	15.129028	-3.9632235	comment	5.0	16.5	1582636897	-10.422495
22580085	Something they don't tell you when y	"Something they don't tell you when you start learning lisp is the sense of calm it bringsIt's such a elegant thing, it ruins me for doing ""professional"" programming"	slifin	15.138707	-3.9502003	comment	5.0	50.0	1584233405	-10.46402
22581379	Erm.. I think it's a bit overrated T	Erm.. I think it's a bit overrated TBH. Don't get me wrong - lisp is quite simply magical (and very ahead of the curve). However, when you look back at code, those written in Python just seem much nicer. The AIMA/PAIP code in Common Lisp, for instance, are ugl	thrw34234	15.133569	-3.957767	comment	5.0	12.5	1584248045	-10.40426
22683735	TXR Lisp	TXR Lisp	chrispsn	15.144789	-3.9348915	story	5.0	77.0	1585137507	9.1630335
22809876	I never had a lisp class, so I'm sit	I never had a lisp class, so I'm sitting here wondering why there is one single quote.	onionisafruit	15.156812	-3.9317868	comment	5.0	12.5	1586317960	-10.513361
23041360	Peter tech-reviewed the second editi	Peter tech-reviewed the second edition of my Java AI book and made the comment that Java was half as good as Common Lisp for AI and that was probably good enough (we had both written Common Lisp books). He then went to Google and I had lunch with him; I was su	mark_l_watson	15.132246	-3.9546654	comment	5.0	27.0	1588336535	-10.407898
23166006	This looks so awesome! It's got the 	This looks so awesome! It's got the best parts of a lot of languages. This is what sticks out to me:- Really simple lisp like scheme, but reminds me of lua (and not bloated like CL)- Has resumable fibers, no callcc like scheme- Not missing the lack of lists tb	ristos	15.11071	-3.9721377	comment	5.0	19.5	1589371863	-10.418449
23201888	History of Lisp (1979) [pdf]	History of Lisp (1979) [pdf]	alokrai	15.153713	-3.9260323	story	5.0	101.0	1589621294	-10.436979
34062350	I thought lisp was supposed to be Ub	I thought lisp was supposed to be Uber functional. This code all looks very OO and imperative to me. It looks very intuitive.	gigatexal	15.123579	-3.9511251	comment	5.0	14.0	1671517727	-10.430323
34101160	Kind of amazing they are still a goi	Kind of amazing they are still a going business. I didn't realise any companies really used lisp for anything. I assume whoever is paying them money is doing so for some really niche or legacy?	morelish	15.144131	-3.9376245	comment	5.0	13.0	1671757865	-10.454345
26502568	So many programming languages poppin	"So many programming languages popping up like mushrooms overnight...That does it - I'm creating my own programming language (again) which is going to be a mashup of C++ and Lisp; I shall call it ""Thee-Pluth-Pluth""."	lelanthran	15.134328	-3.94711	comment	5.0	13.0	1616074874	-10.384752
26512384	Ask HN: Gnu Guile or Racket for Perf	Ask HN: Gnu Guile or Racket for Performance?	gypsyharlot	15.131175	-3.9578485	story	5.0	7.0	1616156172	-10.477437
26584752	I advise you to check Common Lisp CL	I advise you to check Common Lisp CLOS and Dylan.	pjmlp	15.154135	-3.9301898	comment	5.0	17.5	1616702803	-10.439437
27038201	This is really cool, I would love to	This is really cool, I would love to program my fleet of ESP8266s with anything but C. And I’ve been passively interested in using Lisp for many years. Using Lisp for my program as glue for the normal ESP C libraries would be awesome. I’ve read the documentati	quchen	15.136871	-3.944048	comment	5.0	15.0	1620139799	-10.420893
27039136	FORTH is very different from LISP bu	FORTH is very different from LISP but it's very similar in that you can use the quote operator to write control structures the same way you write any other function.Common LISP had CLOS that implemented object-oriented programming in a style not too different 	PaulHoule	15.092925	-3.8853836	comment	5.0	13.0	1620144505	6.001176
27141979	From the article:> But if you need s	From the article:> But if you need some complex algorithms — particularly algorithms that do a lot of heavy mathematical lifting — then Lisp is the ideal choice.Is this right? I never thought of LISP as good fit for numerical processing.	rowland66	15.138264	-3.9494376	comment	5.0	12.5	1620913396	-10.438872
27251265	Re: your edit, I've heard people say	Re: your edit, I've heard people say similar things about Lisp. I wonder if that applies to functional languages in general?	Karunamon	15.129334	-3.9652019	comment	5.0	14.0	1621727386	-10.421079
27281068	X has been the bane of McCLIM for th	X has been the bane of McCLIM for the last 20 years. It limited adoption and delivered horrible first impressions to not-hardened Lisp users / McCLIM developers: Basic-level functionality that's supremely important for a positive experience such as font render	metroholografix	15.1054945	-3.948609	comment	5.0	15.5	1621969814	-10.393777
27296685	Is there anything new, since.... say	Is there anything new, since.... say 2014? Anyone familiar with the project care to comment on how viable a sicl is today, as a common lisp?	e12e	15.143622	-3.934925	comment	5.0	12.5	1622066667	-10.485057
27306500	And this is how LISP is invented.Any	And this is how LISP is invented.Any sufficiently complicated program contains an ad hoc, informally-specified, bug-ridden, slow implementation of half of Common Lisp. (Greenspun's tenth rule)	ktpsns	15.133271	-3.955403	comment	5.0	12.5	1622140710	-10.326313
27306842	A lot of shallow, smug snark coming 	A lot of shallow, smug snark coming into the comments section from people who know what s-expressions are and I guess want to brag about that for some reason. S expressions are cool but that's just _a syntax_, there are other possible syntaxes for expressions,	joshlemer	15.053771	-4.0460773	comment	5.0	20.5	1622142458	-10.445436
27310769	Well, also give up infix functions/o	Well, also give up infix functions/operators, operator precedence, readable equations, etc.Most Lisps have syntax anyways, in order to make the language less verbose.There's a reason people like syntax, because it is expressive.	smabie	15.104441	-3.990664	comment	5.0	14.0	1622165500	-10.395127
14726332	Professional and open source impleme	Professional and open source implementations of Common Lisp are stable but nonetheless under active development.Many hobbyists and professionals use Lisp to solve their problems and make money.IDEs are in a sorry state. If you're an Emacs user, you'll be happy	reikonomusha	15.088714	-3.977559	comment	5.0	16.0	1499535760	-10.393723
14755251	I don't think it's as easy as that. 	I don't think it's as easy as that. In fact there's probably no single reason accountable for Lisp's lack of popularity. Here's my own personal pet peeve: Declaring local variables creates a level of nesting. Local variables are a great tool for improving code	soberhoff	15.096328	-3.9991727	comment	5.0	15.0	1499884691	-10.338113
14902948	~12 years ago, it was Patrick Collis	~12 years ago, it was Patrick Collison that was named young scientist of the year for developing a dialect of Lisp called Croma:http://lemonodor.com/archives/001038.htmlI'm glad to see he has continued to do well.	mschaef	15.159606	-3.8955622	comment	5.0	18.5	1501607427	-10.424801
14943127	Getting Started in Star Lisp (1991) 	Getting Started in Star Lisp (1991) [pdf]	tosh	15.156034	-3.922682	story	5.0	63.0	1502049349	-10.448204
15229736	Whatever.I learned how to implement 	Whatever.I learned how to implement Lisp by reading the source code for multiple compilers. Started with Franz Lisp, then KCL and CMUCL. I don't feel that a toy interpreter is going to teach the same things.	rjsw	15.107957	-3.9718447	comment	5.0	13.0	1505239710	10.848566
15360045	I really wish the GNU project would 	I really wish the GNU project would standardise on Common Lisp rather than Scheme.  Lisp-2, false NIL, full-powered macros — Common Lisp has a lot going for it.An emacs written in Common Lisp, running in StumpWM, running atop a CL Guix, Shepherd & GuixSD would	zeveb	15.149303	-3.9343405	comment	5.0	19.5	1506627207	-10.384468
15360236	About a year ago or so I was bitten 	About a year ago or so I was bitten by the Lisp and Smalltalk bugs, and since then I've become very interested in Lisp machines, particularly Symbolics machines running the Genera operating system.  I'm in my late 20's and thus I wasn't around when Lisp machin	linguae	15.131785	-3.9418235	comment	5.0	13.0	1506628779	-10.333816
15366796	This still doesn't solve the problem	"This still doesn't solve the problem of upstream security,
since it requires clients trust the Quicklisp repository
which is centralized rather than the individual package authors. The chain of trust is now bigger and more fragile.Quicklisp works by periodical"	armitron	15.079319	-3.9668694	comment	5.0	15.5	1506703129	-10.370961
15464340	A Lisp that runs Python (2016)	A Lisp that runs Python (2016)	malloryerik	15.099277	-3.9894676	story	5.0	81.0	1507889243	-10.29654
15572385	Lisp, Scheme, and Racket and related	Lisp, Scheme, and Racket and related languages have many distinct syntax forms, just like other languages. The syntax forms appear visually similar due to the use of parentheses, but the forms themselves are distinct.For example, here are some of the distinct 	jcrites	15.144706	-3.9502087	comment	5.0	15.0	1509139852	-10.411728
15592756	Please forgive some ignorance here, 	Please forgive some ignorance here, but I thought that LISP couldn't have a proper type system since it would muck with homoiconicity.  Clearly I'm wrong about this, but now I'm curious why more LISPs aren't typed.Can anyone here enlighten me?	tombert	15.13571	-3.9668345	comment	5.0	14.0	1509453671	-10.336321
28722835	Is it weird that I don’t like Common	Is it weird that I don’t like Common Lisp at all but I like Scheme a lot? I just never liked Lisp 2s and separate name spaces for functions and variables. But really that is the biggest issue for me. I’m sure if only Common Lisp existed it wouldn’t bother me a	Decabytes	15.136324	-3.9480937	comment	5.0	14.5	1633118732	-10.464584
28728200	That's my personal opinion, but I th	"That's my personal opinion, but I think that programming language pages should have more information density. I also think that using your average ""startup template"" for Common Lisp is a bit weird. A good example of what I like might be the OCaml homepage http"	Zababa	15.138897	-3.9493513	comment	5.0	14.0	1633179219	-10.430763
28815724	Lisp in a Weekend	Lisp in a Weekend	kelseyfrog	15.152504	-3.9291596	story	5.0	173.0	1633839608	-10.451235
28915478	Ask HN: Do you still use JSP?	Ask HN: Do you still use JSP?	roschdal	15.1123085	-3.977165	story	5.0	7.0	1634626208	-10.470398
28961987	Kina Knowledge, using Common Lisp ex	Kina Knowledge, using Common Lisp extensively in their document processing stack	p_l	15.136872	-3.9410727	story	5.0	192.0	1634932911	8.319007
28963788	I can’t imagine the choice of langua	I can’t imagine the choice of language being strongly correlated with programmer skill (it would be elitist to think so, and everybody feels best in the language they spend the most time in).I think C) Lisp is well suited to certain applications, from what I c	math-dev	15.132973	-3.9567003	comment	5.0	17.0	1634943541	-10.452849
28966966	> The only language where macros are	> The only language where macros aren't just C's #define to replace text. You're working directly with the ASTIt's hardly the only such language. In my experience, Haskell, Rust, Common Lisp, and Scheme all have macros that operate by syntax trees rather than 	thewakalix	15.044832	-4.0409675	comment	5.0	15.5	1634981741	-10.21731
28980074	Wow, mouse-over the Lisp code in thi	Wow, mouse-over the Lisp code in this article.  The coloring of nested expressions is awesome.  I wish my editor could do that.	tempodox	15.100118	-3.983747	comment	5.0	14.0	1635096529	-10.354119
29006736	Lisp probably was invented in the ag	Lisp probably was invented in the age of the typewriter.If you look at mathematical notation, written with quill pens and paper…it’s even more concise. Functions are like lisp, f(x). Vectors are laid out on the page in an array and surrounded by two strokes. M	hasmanean	15.129521	-3.959405	comment	5.0	15.5	1635284767	-10.431743
29008339	I started my programming in the more	"I started my programming in the more ""traditional"" way i.e., C/C++ and then later python. When I started doing python, I was flabbergasted to find that I could just do 100**100 and get a complete number without using any additional libraries. Similarly, revers"	pddpro	15.124067	-3.9657753	comment	5.0	13.0	1635295453	-10.451011
29107859	Ah, but Javascript is a profoundly t	Ah, but Javascript is a profoundly terrible language to do anything in, while Lisp is a joy to write in.Being a Lisp machine is core to the value of Emacs.  Emacs-without-Lisp is just another editor.	eadmund	15.041417	-4.026207	comment	5.0	13.5	1636037199	-10.337299
29159258	Elisp is a really poor language comp	Elisp is a really poor language compared to almost anything else, more work should be done to allow Emacs to be configured in other languages.	deworms	15.096729	-3.948639	comment	5.0	14.5	1636448200	-10.364838
29292522	Ironic, considering that Stephen Wol	Ironic, considering that Stephen Wolfram insisted in the 80s that Lisp was 100x slower than C, and so a fast mathematics package could not be written in it.	bitwize	15.13765	-3.9534466	comment	5.0	15.5	1637448592	-10.401202
29309082	Condition Handling in the Lisp Langu	Condition Handling in the Lisp Language Family (2001)	Jtsummers	15.126858	-3.96326	story	5.0	52.0	1637602259	-10.429481
29631643	Femtolisp – A lightweight, robust, s	Femtolisp – A lightweight, robust, scheme-like Lisp implementation	thetwentyone	15.157931	-3.921171	story	5.0	133.0	1640041374	-10.4477825
25531871	Vacietis, a C compiler targeting Com	Vacietis, a C compiler targeting Common Lisp	reikonomusha	15.125232	-3.9611928	story	5.0	97.0	1608847387	-10.382631
25562553	I think I understand the sentiment o	I think I understand the sentiment of the above commenter. I feel it with Lisp too.There are amazing claims about how Haskell (or Lisp or Erlang or ...) give you these amazing superpowers and allow you to write immensely more correct programs immensely faster.	reikonomusha	15.132494	-3.9687696	comment	5.0	16.5	1609185164	-10.449811
25603559	ToriLisp – an ersatz Lisp for tiny b	ToriLisp – an ersatz Lisp for tiny birds	grzm	15.151079	-3.9018762	story	5.0	71.0	1609512268	10.557899
26070651	I just don't get the appeal of Lisps	I just don't get the appeal of Lisps. They look so ugly and the syntax seems crazy((((((((((((((((( by the way	pid_0	15.13871	-3.9522967	comment	5.0	14.0	1612820999	-10.414002
26172880	The difference is that Forth compile	The difference is that Forth compilers can be bootstrapped from not-very-much assembler on an embedded system. That's not really true for Lisp and Smalltalk. Forth impresses me because of the degree of leverage that bootstrapping process affords for small comp	dreamcompiler	15.03289	-3.8349717	comment	5.0	18.0	1613602172	6.09221
26261098	Static Executables with SBCL v2	Static Executables with SBCL v2	todsacerdoti	15.12638	-3.944196	story	5.0	113.0	1614244260	-10.416521
26262545	Back when I programmed in CL and par	Back when I programmed in CL and participated in comp.lang.lisp, the topic of Static Executables was a recurring thing. I never understood why people were so obsessed with it, but somehow this became the Major Showstopper for wider CL adoption, in the eyes of 	jwr	15.071123	-4.0050397	comment	5.0	17.5	1614260073	-10.202009
13884838	For me this is the most exciting par	"For me this is the most exciting part: Complete Emacs-compatible Elisp implementation    Thanks to the work of Robin Templeton, Guile's Elisp implementation is now fully Emacs-compatible,
     implementing all of Elisp's features and quirks in the same way as "	pkd	15.180395	-3.803649	comment	5.0	18.5	1489671242	-10.326862
13888351	"Every few months I think to myself """	"Every few months I think to myself ""maybe I should learn Lisp,"" but then I see things like this, and my suspicion that Lisp has been fetishized beyond all reason starts seeming more likely, and I decide to put that exercise off a while more.At this point, I su"	nolemurs	15.171456	-3.914596	comment	5.0	21.0	1489692743	-10.468661
13888407	One of the things that slows me down	One of the things that slows me down is that whenever I see Lisp code, my mind goes to the equivalent Haskell code, and the comparison is basically never favorable.I'm a firm believer in the value of learning a functional language, and I totally understand tha	nolemurs	15.117925	-3.987508	comment	5.0	13.0	1489693046	-10.474192
13920747	I've just skimmed through the first 	I've just skimmed through the first couple of pages, but didnt find anything about which lisp to use/howto. Any ideas?	laxentasken	15.145421	-3.9297473	comment	5.0	15.5	1490087784	-10.45914
13951006	I've always wondered why LISP was su	I've always wondered why LISP was such a hot-topic of discussion for CS people. I'm not technical myself, but the idea of different computing languages being more/less efficient in certain tasks is interesting.I don't know how valid this is, since I've only sp	acalderaro	15.133777	-3.9593766	comment	5.0	16.5	1490379617	-10.436162
13980113	Some notes based on my (brief) exper	Some notes based on my (brief) experience toying with Common Lisp:* Why hasn't anyone made a more eye-frendly version of the Common Lisp Hyper Spec ? Having good, easily-browsable documentation is a core-problem.* The relation between the various native data-t	znpy	15.147578	-3.9426122	comment	5.0	14.5	1490731151	-10.458051
14145297	Lisp macros for C	Lisp macros for C	wooby	15.084081	-4.007585	story	5.0	113.0	1492573656	-10.3208275
14244641	Simplified Common Lisp reference	Simplified Common Lisp reference	macco	15.134154	-3.9512763	story	5.0	74.0	1493710825	-10.484185
14368319	Writing a Lisp: Continuations	Writing a Lisp: Continuations	reinvdwoerd	15.127987	-3.9642124	story	5.0	136.0	1495123004	-10.346331
14480712	All this poetic non-sense about flex	All this poetic non-sense about flexibility and writing prototype programs is irrelevant. Lisp has real technical flaws that prevent its use:1.GC that prevents it from using real-time and performance-oriented code.2.Pervasive use of inefficient lists and dynam	FrozenVoid	15.12832	-3.9648457	comment	5.0	36.0	1496572343	-10.420309
14511355	I've been working on a Lisp for the 	I've been working on a Lisp for the last couple of years. There's one major downside to reader macros / syntax extension: Your editor probably won't understand it, and in extreme cases won't know how to indent or read it.Note that Lisp macros do not suffer thi	sillysaurus3	15.101673	-4.0000706	comment	5.0	17.0	1496887529	-10.388563
14520100	Can anyone point me to a Forth imple	Can anyone point me to a Forth implementation where the absolute bare minimum is written in (C/assembly/whatever) and everything possible is then bootstrapped in Forth itself?I recall reading what the minimal word set needed to be able to write the rest of sta	andybak	15.034381	-3.821924	comment	5.0	12.5	1496998311	6.0898237
14582142	> It's solving a problem people don'	"> It's solving a problem people don't really have.Isn’t ""I want to script Emacs but I don’t like LISP"" a problem to solve?"	hk__2	15.1296625	-3.9553523	comment	5.0	24.5	1497811375	-10.412116
14609526	I keep hearing this kind of talk abo	I keep hearing this kind of talk about lisp. I've never actually written anything in it, but if you asked me why, it would have nothing to do with parens or syntax. It has everything to do with the fact that, for most purposes, Python suits me just fine, and f	Retra	15.114593	-3.9824803	comment	5.0	16.0	1498095642	-10.337623
23452252	I think I've had my own moment of cl	I think I've had my own moment of clarity that spans both Forth(s) and Lisp(s) and explains why neither is as common as other languages.In most common languages, there is a complicated base spec that covers many cases and defines a broad range of affordances, 	zentiggr	15.084372	-3.870757	comment	5.0	16.5	1591574818	6.0309577
23699164	I've said this before, but I've come	I've said this before, but I've come to think of Lisp and Forth as the left-handed scissors of software: for 10% of the population they're significantly easier to use, to such an extent that it can feel like a revelation. The remaining 90% of the population tr	pjc50	15.134742	-3.9267142	comment	5.0	21.0	1593591628	-10.383659
23731142	If you're starting from scratch, why	If you're starting from scratch, why not design a new Lisp? CL has never struck me as a particularly inspired language, and neither has the kind of code people write with it.Or, if the idea is to leverage existing CL code, I'm sure with a little bit of effort 	smabie	15.129721	-3.9495716	comment	5.0	19.0	1593853946	-10.415515
23731306	> why not design a new Lisp?Hell no.	> why not design a new Lisp?Hell no.  Here is why:1. The Common Lisp standard is brilliant.  If your new Lisp is designed by anything less than a committee with people like Kent Pitman, Guy Steele, and Richard P. Gabriel, chances are that you will end up with 	heisig	15.097247	-3.9955978	comment	5.0	16.5	1593856811	-10.482118
24387166	I always wondered why we rarely see 	I always wondered why we rarely see more efforts like an LLVM based Lisp or Scheme language, especially when some projects like Racket are looking to improve performance by switching their runtimes (and I assume other benefits that come from consolidating unde	giancarlostoro	15.132502	-3.9556396	comment	5.0	16.0	1599342977	-10.496111
20071357	Of course if you'd use Lisp in the f	"Of course if you'd use Lisp in the first place you could make a new syntax to input those things in the visually safest manner without waiting for a language revision.Compile-time computing is precisely about this, e.g. 
https://medium.com/@MartinCracauer/a-ge"	cracauer	15.115427	-3.9734714	comment	5.0	16.0	1559419857	-10.364177
20071756	Note that this appears to be yet ano	Note that this appears to be yet another Webkit shell, and not an implementation of parsing/rendering pages in Lisp.	userbinator	15.094819	-3.9691727	comment	5.0	17.5	1559423831	-10.380035
20195740	Cl-cpp-generator – A Common Lisp lib	Cl-cpp-generator – A Common Lisp library to generate C/C++ code	eatonphil	15.115309	-3.96231	story	5.0	60.0	1560696758	-10.25967
20207532	I guess this applies for Java and C+	"I guess this applies for Java and C++ style ""classes"". This does not precisely apply to the first ANSI-standardized OOP system, Common Lisp's. Standard classes do not own methods, instead methods are specializations of a generic function that stands alone and "	Jach	15.1213875	-3.9793785	comment	5.0	13.5	1560806636	-10.488965
20311817	The Evolution of Lisp (1993) [pdf]	The Evolution of Lisp (1993) [pdf]	steven741	15.149758	-3.9361672	story	5.0	91.0	1561804395	-10.43571
20358163	I'm new to LISPs. What's the differe	I'm new to LISPs. What's the difference between LISP-1 and LISP-2?	wishinghand	15.143039	-3.9469457	comment	5.0	17.5	1562277852	-10.444788
20377200	Lisp, as McCarthy proposed it in 195	Lisp, as McCarthy proposed it in 1958, actually had an alternate syntax called M-expressions that would be perfectly readable to any JavaScript programmer: (foo a b) became foo[a,b].It never took off. From the earliest days -- before video terminals were a thi	bitwize	15.10841	-3.989485	comment	5.0	16.5	1562527512	-10.397619
20516351	Tutorial on Good Lisp Programming St	Tutorial on Good Lisp Programming Style (1993) [pdf]	fanf2	15.138601	-3.9445167	story	5.0	121.0	1563982983	-10.40784
20521482	> to write code for human readers fi	> to write code for human readers first, and compilers second.I find this very ironic in this context. After all lisp is a language where the human does half of the job the compiler is doing, because you need to write directly in AST instead of higher level la	zaro	15.125897	-3.9662619	comment	5.0	17.0	1564013900	-10.378365
20606941	No one actually likes the parens of 	No one actually likes the parens of Lisp. I mean, just look at Racket2. Even the dedicated lispers who work on Racket think they suck.I’ve written both Racket and Common Lisp professionally and consider myself very competent in both. In fact, I think they’re b	mruts	15.128113	-3.9682307	comment	5.0	19.0	1564931110	-10.334786
20614878	I don't know why no one seems to thi	I don't know why no one seems to think about symbolic programming which was the original killer feature of lisp, and one of the main reasons for doing macros.In math oriented programming this should be one of the most powerful features and skills in order to s	nudpiedo	15.11815	-3.9797297	comment	5.0	14.0	1565018506	-10.357942
20614888	Common Lisp folks should really star	Common Lisp folks should really start designing a more modern version of CL.I'm pretty sure some old Lispers would come and say, 'Common Lisp's stability is a great feature', 'There are lots of new dialects', and while they are right in some aspects, Common Li	pcr910303	15.106057	-3.998842	comment	5.0	24.5	1565018615	-10.618137
20669336	"How about ""defining"" homoiconic to m"	"How about ""defining"" homoiconic to mean that it's easy to manipulate programs? More specifically, say a programming language is homoiconic if (1) the standard library for the language includes a parser, and (2) the parser returns data structures that are easil"	omaranto	15.107851	-3.9902394	comment	5.0	17.5	1565545380	-10.383859
20695550	Visible Lisp Computer	Visible Lisp Computer	lispm	15.136922	-3.9363039	story	5.0	97.0	1565790829	-10.40801
20697414	"The post quotes McCarthy:""one of the"	"The post quotes McCarthy:""one of the myths concerning LISP that people think up or invent for themselves becomes apparent, and that is that LISP is somehow a realization of the lambda calculus, or that was the intention. The truth is that I didn't understand t"	vga805	15.136207	-3.95745	comment	5.0	38.0	1565801773	5.6903625
20733134	But in the last 60 years, simply gra	But in the last 60 years, simply grab­bing these dissenters by the lapels and fumi­gating them with the stinky garlic breath of paren­the­sized S-expres­sions has not been a winning strategy.If Lisp parti­sans want different results in the next 60 years, we ne	lacampbell	15.145001	-3.9470868	comment	5.0	17.0	1566164822	-10.462547
20820798	Does anyone in the HN crowd know of 	Does anyone in the HN crowd know of any other brand-name orgs using Lisp?	reaperducer	15.137419	-3.9376764	comment	5.0	16.0	1567006391	-10.457586
20837214	Lisp as a Vehicle for Rapid Prototyp	Lisp as a Vehicle for Rapid Prototyping (1997)	deepaksurti	15.129614	-3.9476216	story	5.0	78.0	1567159810	6.1115527
14663867	If you want your brain stretched, I 	If you want your brain stretched, I recommend Common Lisp.The #1 issue for folks in my experience had been getting an environment set up. Emacs, SLIME, encodings, paredit, ... . It's a big barrier to entry.	reikonomusha	15.10976	-3.959492	comment	5.0	17.5	1498748757	9.058271
31183920	I don't like REPL driven development	I don't like REPL driven development. REPLs are celebrated as some sort of achievement in interactivity, but they're hopelessly puny, barely imitating a UNIX shell.When I write Emacs Lisp, I don't have a REPL. I just put point at the end of a random s-expressi	momentoftop	15.072691	-4.0033803	comment	5.0	18.5	1651084362	-10.598701
31183993	What are people using LISP for? Othe	What are people using LISP for? Other than the Emacs flavor, and some companies using Clojure, I'm not really sure what I'd use it for?  Would I use it to replace Python or Shell scripting for my custom CLI tooling?  Anyway, I've seen a lot of people talking a	taude	15.12498	-3.974142	comment	5.0	13.0	1651084633	-10.608029
31242479	Can someone help me understand the b	Can someone help me understand the benefits of a Lisp or Lisp-like language? To me they feel overly verbose and make it more difficult to read code. What is the point of all the parentheses? I get that other languages have some weird syntax, but Lisp seems mas	encryptluks2	15.1224985	-3.9759235	comment	5.0	14.5	1651534187	-10.3909855
31257740	I always thought the main reason lis	I always thought the main reason lisp did not become the world's dominant language (or, at least, dominant language with garbage collection) is that writing(/ (+ (- b) (sqrt (- (* b b) (* 4 (* a c)))) (* 2 a))is a pain in the neck, and even more so when you ha	casualrandomcom	15.124254	-3.9675472	comment	5.0	12.5	1651649514	-10.435132
31291215	Roll a Lisp in C – Evaluation	Roll a Lisp in C – Evaluation	swatson741	15.131736	-3.9516158	story	5.0	86.0	1651885263	-10.371068
31637723	I'm wanting to learn lisp, can someo	I'm wanting to learn lisp, can someone eli5 metaprogramming?	account-5	15.149483	-3.9379861	comment	5.0	18.5	1654496587	-10.428194
31646769	Has anyone used the “Land of Lisp” b	Has anyone used the “Land of Lisp” book, or Exercism.org to learn Common Lisp? Any other fun alternatives for learning lisp?	worder0	15.151583	-3.9300332	comment	5.0	13.5	1654551975	-10.457586
26470868	The Emacs community, like the Lisp c	The Emacs community, like the Lisp community with which it overlaps, is very conservative, in the sense that it doesn't throw things away quickly or make huge changes lightly.  For that reason, I'd be very surprised if this took off — even though it sounds lik	JasonFruit	14.974968	-4.059794	comment	5.0	38.0	1615851776	-10.397287
35552197	Strongly disagree. SBCL is not embed	Strongly disagree. SBCL is not embeddable. It produces huge binaries. Managing and versioning dependencies is very difficult.Newer dialects like Janet and Fennel address these deficiencies.	BaculumMeumEst	15.127449	-3.9437377	comment	5.0	14.0	1681370963	-10.368348
35726033	Learn C and build your own Lisp (201	Learn C and build your own Lisp (2014)	pelasaco	15.134319	-3.9513352	story	5.0	151.0	1682591951	-10.377938
35830316	Does anyone have any other free Comm	Does anyone have any other free Common Lisp book recommendations?I decided to give CL a try after reading about REPL-driven development, especially CL’s interactive condition/debugging experience. I’m almost done going through Practical Common Lisp. It’s been 	schemescape	15.146341	-3.9385617	comment	5.0	14.0	1683299768	-10.450884
35855415	You could write safe-ish C++ and Rus	You could write safe-ish C++ and Rust that is both readable and fast.Could you point me to some benchmarks of Lisp being comparable to C?Also, unless I am mistaken, Common Lisp doesn't have strong types. How can you make either fast or safe language without co	eterevsky	15.107943	-3.977331	comment	5.0	14.0	1683491917	-10.380081
36017110	I really don't understand how this c	I really don't understand how this company fell so far from grace. Their product was excellent. Don't get me wrong, I've read the history and understood how they failed to pivot from hardware Lisp machines, but they have completely vanished without even chuggi	thrtythreeforty	15.134618	-3.942425	comment	5.0	16.5	1684631772	-10.399179
36043102	As a rule of thumb, I find that the 	As a rule of thumb, I find that the quality of a language’s LSP server is strongly indicative of how suitable that language is for a serious software project.If you’re curious about what that means for Haskell, try opening a Haskell project, starting LSP, and 	BaculumMeumEst	15.123119	-3.9754684	comment	5.0	22.0	1684843362	10.361332
36155815	Hygienic macros and a strict phase s	Hygienic macros and a strict phase separation are not distinctive to scheme, many languages have this now, most importantly Rust. And just like Rust macros scheme macros are not really an organic part of the language but some extra edifice bolted on top. Schem	patrec	15.122715	-3.9825017	comment	5.0	13.0	1685646214	-10.298297
36239944	I once wrote a tiny DSL language. I 	I once wrote a tiny DSL language. I used LISP (S-Expressions with parenthesis) because it semantically fit and made the parser much easier to write. I was laughed at and ridiculed by my peers. Everyone hated it that I had to attempt two other language styles j	sirsuki	15.098296	-4.0047903	comment	5.0	16.0	1686222706	-10.299726
36519663	"""It can generate an executable"" ; bu"	"""It can generate an executable"" ; but how slow will this executable be ? Compared to something compiled with SBCL or a non-LISP ?"	phtrivier	15.124201	-3.955764	comment	5.0	28.5	1688042872	-10.367559
36545207	What is the dominant flavor of Lisp 	What is the dominant flavor of Lisp these days?	tiffanyh	15.151995	-3.934603	comment	5.0	25.0	1688174473	-10.443711
34181401	Honestly I think that for many, Fort	Honestly I think that for many, Forth may be a bit too much of a green field to build upon.Out of the box, out of the standard, there no real structured data type ala records, there's no strings, there's no modular coding construct. All of those can be added, 	whartung	15.125571	-3.9483943	comment	5.0	12.5	1672370361	-10.433412
34326897	From just reading the TOC, and the f	From just reading the TOC, and the first bit, this looks great. Like the author, I have been into Common Lisp “forever.” I do sometimes feel conflicted when I can get something done in Python much faster because I can find a library that solves the problem I a	mark_l_watson	15.126646	-3.9616857	comment	5.0	15.0	1673366608	-10.420265
34414968	I've been learning lisp this past we	"I've been learning lisp this past week. I think I get the main idea of ""code is data and data is code"", but I struggle to understand how it's more powerful than, say, making a function factory in Python."	halkony	15.125337	-3.9739718	comment	5.0	16.0	1673974602	-10.449986
34419067	Maybe I've just been blind to it but	Maybe I've just been blind to it but feels like CL has been getting mentioned more on HN lately (I do remember the early days when Lisp/Scheme/Arc were mentioned a lot since this site runs on Arc). Actually gone through some of that Common Lisp the hard way th	runevault	15.144739	-3.9433446	comment	5.0	22.0	1673989396	-10.508499
34909393	I just spent months working on a lar	I just spent months working on a large piece of software and could say without a doubt, Lisp is awesome! But I also want to say that most implementations are hashing out a spec written decades ago and not trying to improve what's obviously lacking -- a full mo	u89012	15.130426	-3.9525523	comment	5.0	19.5	1677153856	-10.423739
34909570	The commercial aspect is not a probl	The commercial aspect is not a problem in my opinion (but again english is not my main language so I might have conveyed the wrong tone). The issue is the pricing model which may work for established company ready to invest money from the start, but is simply 	galdor	15.13387	-3.941663	comment	5.0	28.0	1677155276	-10.416654
34909678	I would like to learn Lisp but am ea	I would like to learn Lisp but am easily confused with where to start. What implementation do I use? On a general level do I start with CL, schema, racket, etc (apologies I know this thread is about common lisp). It's all very confusing.I'm like this with most	account-5	15.149632	-3.9345255	comment	5.0	19.0	1677156094	-10.520235
35033741	This seems like an easy fix, re-rele	This seems like an easy fix, re-release LISP with cleaner syntax. Lexers have come so far this seems like an easy fix.I can't say i've ever read the opinion that LISP's syntax allows more expressive programming; rather LISP itself allows more expressive progra	CrimsonCape	15.1202135	-3.9712114	comment	5.0	15.5	1678048958	-10.347456
35129898	I know the basics of Emacs as an edi	I know the basics of Emacs as an editor, and I understand that it is possible to use Lisp to extend it, but I have not come in contact with a good resource to teach me the fundamentals of how to do so. I know a bit of Lisp, I am more curious about how to expos	jwrallie	15.111734	-3.9567459	comment	5.0	12.5	1678673370	-10.44461
35131256	Emacs Lisp is probably the worst lan	"Emacs Lisp is probably the worst language for ""programming in the large"". (After Javascript.)Sorry, but it has to be said. Using a more sane language would cut down on the bugs and dependency problems in Emacs in a huge way.P.S. Been using Emacs for over 25 ye"	otabdeveloper4	15.077931	-4.0000486	comment	5.0	21.0	1678683303	-10.386101
39376323	Package management kind of sucks, th	Package management kind of sucks, the ecosystem sucks, other languages continually improve but nobody will ever advance the CL standard. There is nothing compelling about the language to people who aren't already Lisp people.	BaculumMeumEst	15.1117	-3.9740682	comment	5.0	14.5	1707948850	-10.369678
39380581	> I think you might be on to somethi	> I think you might be on to something. Symbolics was very much in danger of making large software projects possible by one person or a small team of people. It seems as if the corporate world has responded to the proliferation of more powerful software develo	Capricorn2481	15.138985	-3.946232	comment	5.0	15.5	1707988200	-10.410461
39453887	Seems cool. But I'm not convinced ex	Seems cool. But I'm not convinced extensible languages benefit from adding a variety of syntactic forms. As your ability to extend the feature-set increases, the need for a single regular syntactic form increases. Lisp may not be appealing to beginners because	netbioserror	15.121099	-3.9798417	comment	5.0	22.5	1708524064	-10.432522
39490341	Only tangentially related; but tree-	Only tangentially related; but tree-sitter, lsp and friends are actually some of the most exciting developments for lisp programmers because we are finally seeing a model where Emacs and IDE support for lisp can properly decouple. One of the in-practice proble	roenxi	15.126086	-3.9723628	comment	5.0	14.0	1708767306	-10.695039
39576154	So, I have a kind of dumb question.A	"So, I have a kind of dumb question.As someone born after C and its derivatives took over the world, Forth has always been this ""weird cool old language"".  It seems like Forth was this very beloved language by a small set of enthusiasts, but I'm not entirely su"	tombert	15.040575	-3.8176074	comment	5.0	18.0	1709416902	6.0527134
39655535	This made me think of Kernel, a prog	This made me think of Kernel, a programming language of the Lisp family where the main primitive is vau rather than lambda, defining a fexpr rather than a function.Juste like lambdas, fexprs are lexically binded closures. The difference is that a fexpr argumen	p4bl0	15.12268	-3.9781184	comment	5.0	18.0	1710027635	-10.337783
38964465	How does it compare to Lisp for symb	How does it compare to Lisp for symbolic programming?	Zambyte	15.135973	-3.9541852	comment	5.0	13.5	1705038864	-10.489777
32628812	Common Lisp Wiki: Naming Conventions	Common Lisp Wiki: Naming Conventions	susam	15.180228	-3.9673362	story	5.0	81.0	1661698117	-10.435052
15757685	I don't understand your post at all.	I don't understand your post at all. Can you give some examples maybe?>In most languages you end up with large configuration files and huge number of strings as parameter.Not in the languages I'm familiar with at least. I don't understand what configuration fi	simias	15.115484	-3.9813633	comment	5.0	13.0	1511365879	-10.363524
16256222	Isn't Lisp particularly good at maki	Isn't Lisp particularly good at making your own DSL?Anyway, the majority of the programming community tends to dislike that sort of freedom, preferring maintainability and the ability to work as a team where every team member isn't off creating their own diale	goatlover	15.106509	-3.9858258	comment	5.0	21.0	1517215330	-10.318606
16313646	Is it impossible to improve on s-exp	Is it impossible to improve on s-expression notation?https://srfi.schemers.org/srfi-110/srfi-110.html#cant-improv...	mitchtbaum	15.062182	-4.0234284	comment	5.0	30.0	1517878635	-10.331611
16388578	> The point is that code is dataThat	"> The point is that code is dataThat's the popular slogan, but there'a actually quite a lot more to it than that.  After all, strings are data too, and C programs are represented as strings, so ""code is data"" in C too.  But that is obviously missing the point."	lisper	15.1165905	-3.9791887	comment	5.0	14.5	1518736008	-10.408671
16393254	I theorize lisp isn't used more beca	I theorize lisp isn't used more because of the massive amounts of parenthesis.I think the concepts are great, and it's a great language for certain task, but my right pinky finger hurts just looking at it.New programmers and developers look at that and compare	oregontechninja	15.114768	-3.9782197	comment	5.0	14.5	1518797018	-10.404259
16459477	Ergonomics of the Symbolics Lisp Mac	Ergonomics of the Symbolics Lisp Machine (2012)	icc97	15.137601	-3.9447627	story	5.0	29.0	1519574066	-10.359992
16584094	I came to Lisp (Scheme/Racket) from 	I came to Lisp (Scheme/Racket) from that another side (C++, Java, Perl) and it was an enlightening experience.Now I use Lisp nearly everywhere in a form of a small .NET runtime module.Lisp is excellent at templating tasks. Just for comparison: StringTemplate f	garganzol	15.1270685	-3.9662719	comment	5.0	18.5	1521028854	-10.417463
16695285	[I'm sticking this here because ther	[I'm sticking this here because there was a dude who said this was a good reply and I tried to reply to him and HN say s his post was deleted.  I don't know why, his post seemed pretty reasonable to me, he was asking if forth was a good boot loader.  Shrug.]I 	luckydude	15.039718	-3.8331413	comment	5.0	15.5	1522211241	6.104598
21287218	1. I have a vague idea what the seco	"1. I have a vague idea what the second ""do"" is for. I don't have the slightest idea what the first ""do"" does.2. I have some idea what ""$"" is, but I have no idea what it does in this context.3. param ""uri"" is presumably extracting a parameter, presumably from t"	microtherion	15.0953455	-3.988221	comment	5.0	15.5	1571353955	-10.419409
21559955	Do you have actual benchmarks compar	Do you have actual benchmarks comparing the the runtimes to justify the competitiveness between the two programs? With no types declared and no optimization declarations, I feel it would still be around 2-10x slower than C. (I have no quantitative evidence for	reikonomusha	15.12396	-3.9640214	comment	5.0	19.5	1574023385	-10.360875
21638293	Lisp had this kind of interactive pr	Lisp had this kind of interactive programming support for a long time using SLIME and Emacs. Why isn't this a more common feature in the more recent languages?	jimws	15.120682	-3.959508	comment	5.0	16.0	1574776896	-10.434337
21662893	Fleck: A Lisp that runs wherever Bas	Fleck: A Lisp that runs wherever Bash is	rcarmo	15.093623	-3.9706986	story	5.0	148.0	1575015078	-10.27258
21730973	String Algorithms in Lisp	String Algorithms in Lisp	tosh	15.1207905	-3.95866	story	5.0	70.0	1575735162	-10.381201
21734624	An unrelated question. For those usi	An unrelated question. For those using Vim, what plugins do you use to get a SLIME-like development environment?I have read great things about SLIME and how it helps in hot-reloading code into a Lisp REPL using Emacs. But is it necessary to learn Emacs to do L	foo101	15.081237	-3.9679692	comment	5.0	14.0	1575786505	-10.388731
21758359	I'm amazed it literally has a class 	"I'm amazed it literally has a class    public final class Cons extends LispObject
    {
      public LispObject car;
      public LispObject cdr;
    }

I would have thought it would provide that abstraction to the programmer but use another representation int"	chrisseaton	15.11656	-3.9747674	comment	5.0	16.5	1576024489	-10.402216
39075940	I'm learning programming at age fift	I'm learning programming at age fifty-four and have chosen Common Lisp as my one language for life. If you want something easy to learn with a ton of support pick Python, Elixir, and/or JS. CL sucks for mini-projects since the learning curve requires serious c	corinroyal	15.166054	-3.9215233	comment	5.0	15.0	1705815848	-10.511559
39183357	I feel like I say this a lot, but if	"I feel like I say this a lot, but if you like Guile you should really check out Gauche. It has more ""batteries"" included than Python, several of the ""alien technology"" features that people expect from Common Lisp, and good documentation to help you navigate it"	nerdponx	15.112275	-3.9823236	comment	5.0	14.0	1706565842	-10.484443
39183258	While I agree with the author that t	While I agree with the author that there's something about Rust (my day-job lang & goto personal lang these days) that just lacks... elegance... I've also never found the Lisp (and many other FPs) emphasis on recursion all that compelling. Aesthetically or com	cmrdporcupine	15.096551	-3.9939816	comment	5.0	23.0	1706565321	-10.41728
39219062	Well, the funny thing is that for ba	Well, the funny thing is that for base Common Lisp, it's less dynamic than you think.The functions and symbols in the core packages (e.g. COMMON-LISP package) are considered fixed and immutable. For example, out of the box, the compiler can assume that things 	whartung	15.121671	-3.973939	comment	5.0	15.0	1706810618	-10.421918
39297862	"""In fact, you shouldn’t write any se"	"""In fact, you shouldn’t write any serious application in Forth; as a lan-
guage it’s simply not powerful enough. What you should do is write your own
language in Forth (lexicons) to model your understanding of the problem, in
which you can elegantly describe i"	OldGuyInTheClub	15.055063	-3.8398108	comment	5.0	20.5	1707364452	6.10102
39343743	> humans can’t immediately parse str	> humans can’t immediately parse structure with a glance, and sometimes we have to count parentheses by hand.This is why automatic indentation is important when working with Lisp. This is mentioned later in the article, but I consider it mandatory because of t	phoe-krk	15.064562	-4.0370436	comment	5.0	19.0	1707737574	-10.382825
39346909	This comes off more as a series of r	This comes off more as a series of rationalizations than a compelling argument. Lisp is easy for a computer to parse, not great for humans. There other languages with comparably rich metaprogramming that syntactically have a better tradeoff between computer an	norir	15.129013	-3.966305	comment	5.0	13.5	1707755853	-10.359761
17945431	Lisp for the Web (2008)	Lisp for the Web (2008)	wheresvic1	15.131993	-3.9484885	story	5.0	90.0	1536493058	-10.455745
17959272	Yes! I've been fascinated with GOAL 	Yes! I've been fascinated with GOAL / GOOL for nearly a decade. I ripped a copy of Last of Us and tore through the game data looking for the lisp code, but unfortunately they only ship the compiled output.What I wouldn't give to see the source... And Viaweb's 	shawn	15.152656	-3.9342296	comment	5.0	14.5	1536670592	-10.44538
18017684	> There's already a blazing fast lis	> There's already a blazing fast lisp with a large library ecosystem... It's called Common Lisp.sorry what ? where does this meme comes from ? Most CL implementations are at best multiple times slower than your average JITted language	jcelerier	15.125858	-3.958182	comment	5.0	17.5	1537294074	-10.408971
18124275	As someone who felt that C was the p	"As someone who felt that C was the path to knowledge for how modern computer systems ""work"", Forth and QEMU have become my ""stretch challenge"" for those with the motivation to tinker.For me, working thru the resources on the OSDev wiki by taking jonesforth and"	sharkbot	15.028625	-3.8229287	comment	5.0	14.5	1538504553	-4.8804784
18188154	I like the idea a lot, although the 	I like the idea a lot, although the kind of people who don't like shell scripts for init would likely flip completely out at packages using guile lisp rather than some obscure DSL, and then parenthesis-ophobes are going to react very poorly to the libgit2 exte	VLM	15.14724	-3.8984911	comment	5.0	18.5	1539200105	-10.144346
18226369	Lisp is a powerful language that all	Lisp is a powerful language that allows one to mix multiple logical levels within a program (especially through it's homoiconicity).Shrdlu is perhaps the most classic illustration of Lisp's power[1], A classic program from 1968-70 that allowed natural language	joe_the_user	15.130805	-3.9611707	comment	5.0	43.0	1539662520	-10.435875
18335893	C++ has a whole scripting language e	C++ has a whole scripting language embedded into itself. They're trying to reinvent lisp, of course a much less efficient lisp.	gnulinux	15.109615	-3.9760065	comment	5.0	20.5	1540902800	-10.390555
18351635	Great post! A few observations.- It 	"Great post! A few observations.- It seems like the difficulty level ramps up really quickly starting with the ""So, what makes the lisp example different?"" section. This was jarring enough that I pretty much glossed over it (too much effort required to process "	meken	15.125417	-3.971844	comment	5.0	13.0	1541049589	-10.456399
18373350	Beside the REPL, another impressive 	Beside the REPL, another impressive feat of Common Lisp is meta-programming. You can write software to write software. Say what? Yeah, that was my initial reaction too, but Common Lisp’s macro system allows you to write functions that return code snippets. It 	apo	15.124618	-3.9723125	comment	5.0	17.0	1541292396	-10.377369
18405888	Is there some lisp that has offers n	Is there some lisp that has offers nearly as powerful and fast data processing and tensor algebra facilities like Pandas and Numpy of Python? I would love to use a lisp but am not sure how well are they going to manage with huge 2-3D arrays.	qwerty456127	15.117895	-3.9699445	comment	5.0	21.0	1541681637	-10.386959
18415146	Lisp:- Avoids the use of gratuituous	Lisp:- Avoids the use of gratuituous special characters: (a b c)- use-dashes-in-symbol-names-instead-of-underline-so-its-easier-to-type (you can still use underlines or most any special character, but we like to keep it simple and easy).- has a simple prefix s	informatimago	15.1302395	-3.9577782	comment	5.0	19.0	1541777828	-10.449171
18461756	> SourceKit-LSP is built on top of s	> SourceKit-LSP is built on top of sourcekitd 23 and clangd 23 for high-fidelity language support, and provides a powerful source code index as well as cross-language support.That's pretty much been Apple's motto for a while: need language support for anything	sdegutis	15.076133	-3.9726672	comment	5.0	14.5	1542305848	-10.433767
18668735	I think we see more posts about Lisp	I think we see more posts about Lisp community drama than we see posts about people actually doing things with Lisp.	Semiapies	15.151267	-3.9332294	comment	5.0	14.0	1544658989	-10.477097
18741263	Lessons Learned Implementing Common 	Lessons Learned Implementing Common Lisp with LLVMhttps://www.youtube.com/watch?v=mbdXeRBbgDM	blojayble	15.143466	-3.9373713	comment	5.0	13.0	1545497087	-10.424671
18756545	Creating a Non-Trivial Lisp Game in 	Creating a Non-Trivial Lisp Game in 2018	oumua_don17	15.1437	-3.9299078	story	5.0	149.0	1545725812	-10.444277
29775771	I have the same response to this as 	I have the same response to this as I do to every other lisp article. It’s cool, but how have you personally leveraged this advantage that everyone talks about? What big lisp project has the author contributed to, such that they have enough data to sing it’s p	gaze	15.150495	-3.9318895	comment	5.0	24.5	1641169534	-10.478725
29800067	Intriguing idea. This would be very 	Intriguing idea. This would be very interesting to try with a Lisp or Scheme like language. Does it have any support for S-exp based languages?	rajandatta	15.106341	-3.9854763	comment	5.0	15.0	1641328572	-10.36787
29855044	Having learned a number of Lisp syst	Having learned a number of Lisp systems in the past, I wouldn't necessarily recommend ANSI Common Lisp as a first choice for a Lisp unless your needs are very particular, because it is an enormous design-by-committee language having a draft standard of about 1	dandotway	15.121915	-3.968942	comment	5.0	15.0	1641669127	-10.575854
29889984	The Art of Lisp and Writing	The Art of Lisp and Writing	signa11	15.144317	-3.9362168	story	5.0	91.0	1641899211	-10.451837
29945235	Lisp Badge (2021)	Lisp Badge (2021)	tosh	15.146454	-3.9329588	story	5.0	112.0	1642241273	-10.469874
29950782	"Maybe a twist on the ""why is this us"	"Maybe a twist on the ""why is this useful"" question ...Users of lisp often are enthusiastic about the idea that lisp is at its core a minimal wrapper around the untyped lambda calculus (e.g. plus naming, primitive values and operations, etc).Why do we not gener"	abeppu	15.129039	-3.970662	comment	5.0	13.5	1642284071	-10.384034
29953289	It's hard to tell but it looks like 	It's hard to tell but it looks like they have open- and close-parenthesis on the base (un-shifted) layer, which is awesome.That always puzzled me about the Space Cadet on the Symbolics Lisp Machines... you designed a machine from scratch that is ostensibly int	na85	15.148442	-3.931725	comment	5.0	13.0	1642306875	-10.361831
29964013	Building a neural network in pure Li	Building a neural network in pure Lisp using only atoms and lists	signa11	15.136029	-3.9380367	story	5.0	107.0	1642402275	-10.386223
30139142	SBCL: New in Version 2.2.1	SBCL: New in Version 2.2.1	susam	15.126116	-3.9434588	story	5.0	107.0	1643564118	-10.377962
30173610	I hear sentiments like this often wi	I hear sentiments like this often with lisp, but if this were the case, why isn't everyone using lisp?	ducharmdev	15.143273	-3.941581	comment	5.0	33.0	1643775045	-10.465391
30173966	Much like the sibling comment I have	Much like the sibling comment I have heard variations of this proposition before. But instead of wondering why don’t more groups take this approach, I want to know what make it possible in the first place. So, in your experience, or even just via some passes d	throwaway17_17	15.139108	-3.951231	comment	5.0	22.0	1643778518	-10.411242
32724839	How do you use SLIME in Vim? Isn't S	How do you use SLIME in Vim? Isn't SLIME written in Emacs Lisp which runs only in Emacs? Honest question how you could run an Emacs package in Vim?	ctrlmeta	15.09173	-3.95619	comment	5.0	13.0	1662388897	-10.397878
32795085	Ask HN: Is Lisp code _too_ verbose a	Ask HN: Is Lisp code _too_ verbose and hard to read?	behnamoh	15.095324	-4.0068846	story	5.0	2.0	1662849080	-10.434187
32842037	Is Lisp Regaining Popularity?	Is Lisp Regaining Popularity?	whispersnow	15.17394	-3.911809	story	5.0	12.0	1663183430	-10.429157
32958314	Hmm, many languages but no common li	Hmm, many languages but no common lisp.	gibsonf1	15.136701	-3.9476433	comment	5.0	13.5	1663975994	-10.430212
36548914	My impression is that language innov	My impression is that language innovation in lisp dialects is largely stagnant at present.Common lisp is flexible enough that it's reasonable for projects to stay within the immutable standard, so only library progress happens.Scheme has given up on the minima	JonChesterfield	15.161904	-3.9373598	comment	5.0	14.0	1688210322	-10.695986
36887220	Steel Bank Common Lisp is the workho	Steel Bank Common Lisp is the workhorse which led me to build profitable software companies. I don't think I would be as productive without it. The repl driven workflow is amazing and the lisp images are rock solid and highly performant.	ilrwbwrkhv	15.13905	-3.9440918	comment	5.0	81.0	1690418210	-10.445151
36888797	The reason for this is quite simple:	The reason for this is quite simple: portability. Quicklisp also uses plain TAR files to distribute dists. Why? Because quicklisp has a built-in TAR extractor written in 100% standard/portable CL. This allows Quicklisp to run on just about everything, from you	koito17	15.085236	-3.963482	comment	5.0	15.5	1690431049	-10.30684
37124846	"Ask HN: ""Lisp can be written in Lisp"	"Ask HN: ""Lisp can be written in Lisp.” Why is it a big deal?"	behnamoh	15.139538	-3.949547	story	5.0	4.0	1692038281	-10.450398
37507878	I wonder why there aren't more tools	I wonder why there aren't more tools to allow structural editing like Lisp has. This way the file can never be in an unparsable state.	aeonik	15.118085	-3.9673553	comment	5.0	13.0	1694693641	-10.376933
24434717	April, an APL Compiler for Common Li	April, an APL Compiler for Common Lisp [video]	tosh	15.223559	-3.7197464	story	5.0	103.0	1599759954	-10.493386
24569167	Direct link to one of the early adop	Direct link to one of the early adopter wikis: https://fr.wikipedia.org/wiki/Wikip%C3%A9dia:Accueil_princip...	wormslayer666	15.1439295	-3.8957949	comment	5.0	13.0	1600880268	-10.452493
24581607	Ask HN: Why were people crazy about 	Ask HN: Why were people crazy about Lisp during 70s and 80s?	luizfzs	15.139439	-3.9549603	story	5.0	5.0	1600971061	-10.458186
24729874	This might sound harsh, but Common L	This might sound harsh, but Common Lisp fans should stop whining about what everybody else is doing and start making some killer apps to bring back some life into their language. Hearing all about Lisp's past glories is far less convincing than working code. I	kryptiskt	15.142378	-3.9370542	comment	5.0	14.0	1602251381	-10.473634
24871547	To what extent is the CL condition s	To what extent is the CL condition system inherently tied to Lisp(s)? Is there anything about it that makes it a natural fit for Lisp but not for other languages?Macros, for example, are a natural fit for Lisp because of the parentheses. It would be difficult 	nickdrozd	15.1317425	-3.9621596	comment	5.0	21.5	1603472575	-10.411908
24897724	I've been wondering this for a while	I've been wondering this for a while, and this seems like a reasonable time to ask it:If I understand correctly, you use macros to change the syntax of Lisp.  But if I'm trying to write a DSL, why would I need new syntax?  Why aren't new functions and data str	AnimalMuppet	15.10546	-3.9907591	comment	5.0	15.0	1603728771	-10.274771
25320063	Urgent appeal to Paul Graham, etc.: 	Urgent appeal to Paul Graham, etc.: Please help kickstart Common Lisp revolution	Hexstream	15.153303	-3.9286911	story	5.0	7.0	1607217704	-10.445236
25442267	There are obviously many possible pa	There are obviously many possible paths, so I can only really tell you what I've done. I can't say it's necessarily the best approach.For me, I decided to start with Common Lisp. I installed SBCL, Slime for Emacs, and started working through the book Practical	mindcrime	15.130847	-3.9468205	comment	5.0	18.0	1608125559	-10.440423
33046482	While Lisp had to have some path fro	While Lisp had to have some path from then to now, it is interesting to ask how important the mathematical foundations really are. Lisp is really a celebration of the humble function - everything bar nothing is some variant of (function arg arg arg). While the	roenxi	15.126149	-3.9707465	comment	5.0	19.5	1664631298	-10.439839
31775821	As an old lisp fan, I never got this	"As an old lisp fan, I never got this. (f x) and f(x) have the same number of parenthesis.and the nice thing about (f x) is that the parenthesis group f with x; so you have the whole call inside the (). Consistent and simple to understand.vs i.e. print(f""a stri"	mellavora	15.0686655	-4.026791	comment	5.0	23.5	1655457258	-10.177546
31998149	I loath these and related libraries.	I loath these and related libraries.  They promote a style that diverges from regular Emacs Lisp code that makes it hard to read if you are not familiar with the additional language, and on top of that frequently promote a wasteful and inefficient style (e.g. 	daptaq	15.101353	-3.9716465	comment	5.0	16.5	1657095409	-10.378839
32043026	Technical overview of Kandria, a gam	Technical overview of Kandria, a game and game engine developed in Common Lisp	trocado	15.127141	-3.9213204	story	5.0	343.0	1657444127	-10.434448
32159798	My theory is this is also why Lisp n	My theory is this is also why Lisp never took off. Powerful macros are wonderful for the solo programmer but difficult for a large team to reason about.	klipt	15.120735	-3.9756477	comment	5.0	14.5	1658277097	-10.381759
32285632	Lisp in Vim (2019)	Lisp in Vim (2019)	susam	15.1098	-3.9566689	story	5.0	42.0	1659176556	-10.413661
32288193	Paredit.vim – Paredit Mode: Structur	Paredit.vim – Paredit Mode: Structured Editing of Lisp S-Expressions	susam	15.089098	-4.0007343	story	5.0	38.0	1659199642	-10.319965
32288472	SBCL – New in Version 2.2.7	SBCL – New in Version 2.2.7	susam	15.126863	-3.9408264	story	5.0	86.0	1659201389	-10.418899
32360378	The first article in this issue of B	"The first article in this issue of BYTE has a very interesting characterization of Lisp that I have not come across before. I mean, famous quotes like ""Lisp is a programmable programming language"" by John Foderaro and ""The greatest single programming language "	susam	15.135703	-3.9525046	comment	5.0	21.0	1659725832	-10.439008
32461425	The Blub-paradox is that everyone th	The Blub-paradox is that everyone thinks those other languages are blub but their own favorite language is the non-blub pinnacle of creation.	goto11	15.136021	-3.9380004	comment	5.0	16.0	1660500319	-10.455149
32470833	> > there is a very real sense in wh	> > there is a very real sense in which programming languages haven’t really progressed since the early 80s.> 1980 is the debut of Smalltalk.1972, actually!> Standardisation of CommonLisp happened sometimes in the mid 1980s.Finished in the mid 90s.  But Lisp w	eadmund	15.118179	-3.9778135	comment	5.0	14.0	1660576870	-10.534081
22033759	This is cool, but the code is... str	This is cool, but the code is... strange? https://github.com/vygr/ChrysaLisp/blob/master/gui/canvas/tg...The code doesn’t look like Lisp at all. Is this some sort of lower assembler language that Lisp is implemented on top of?	smabie	15.129621	-3.9507828	comment	5.0	13.5	1578917825	-10.424131
22067628	Which is the better introduction to 	Which is the better introduction to Lisp: On Lisp (by pg), SICP, or another text (maybe on Common Lisp)?Or is it better to just go straight to Clojure these days?	jammygit	15.138843	-3.9681427	comment	5.0	13.5	1579200840	-10.790634
22075979	I remember when people were claiming	"I remember when people were claiming Common Lisp community is toxic, but I find that it is the languages which tend to focus on ""building community"" with Community Managers and Codes of Conduct that end up becoming truly toxic cesspools in the end. See also no"	Grue3	15.141381	-3.9430249	comment	5.0	12.5	1579278149	-10.441846
22084755	I want to give Common Lisp a try. My	I want to give Common Lisp a try. My previous experience with Lisp (any variant) is almost nil. Would this be a good book to start with?	elteto	15.148618	-3.9320526	comment	5.0	15.5	1579359650	-10.444453
22088539	LISP is weird - I used it a lot in t	LISP is weird - I used it a lot in the late 80s and enjoyed it a lot but then moved on and, looking back, never missed it. I think it has a hypnotizing effect on programmers brains, feeding the endorphin feedback cycle, but ultimately there are just too many d	zwieback	15.148587	-3.9427722	comment	5.0	17.0	1579394615	-10.451091
22088781	> Why is lisp always rejected?My bes	> Why is lisp always rejected?My best guess is performance.In the 70s, computers were slow. When the decade started, the competing languages of the time were Fortran, Algol and Cobol. All were imperative languages with manual memory management that would compi	didibus	15.1308365	-3.959627	comment	5.0	16.5	1579398399	-10.438147
22101583	Oh, goody, another tiny LISP (I've b	Oh, goody, another tiny LISP (I've been keeping track of them at http://taoofmac.com/space/LISP, will add this one ASAP).	rcarmo	15.138162	-3.9436486	comment	5.0	14.5	1579549747	-10.456028
22189944	I find it a bit strange that the pos	"I find it a bit strange that the post lists both LISP and Python as ""truly elegant software system[s]"". To me Python is a super-pragmatic language that sacrifices intellectual elegance to allow people (even, but not necessarily) without a CS/Math background to"	timkam	15.120734	-3.9722612	comment	5.0	14.0	1580374698	-10.397489
39376451	Because most programming is done by 	Because most programming is done by people trying to do a job and it requires broad tooling support and familiarity, LISP is a language that has neither.LISP, (similarly to Haskell) requires you to bend your mind and pay an upfront mental cost in order to acce	thot_experiment	15.126864	-3.9711893	comment	6.0	31.5	1707949657	-10.451067
39377602	I like python significantly more tha	I like python significantly more than lisp.There are so many ways to express yourself in python that are troublesome in lisp.I actually think list manipulation is easier in python than lisp.I don't know, is there a lisp dialect that makes common data structure	m463	15.111987	-3.990014	comment	6.0	16.0	1707957275	-10.450586
39574240	Interlisp-D and MIT CADR Lisp Machin	Interlisp-D and MIT CADR Lisp Machine demos for IJCAI Conference (1981)	lispm	15.106912	-3.9621289	story	6.0	63.0	1709401766	6.264236
39666610	What I find promising about LISP is 	What I find promising about LISP is the ability to do term rewriting and macros.But people write lisps in imperative style rather than definitions of desired behaviour declaratively. I don't think we've sufficiently solved how to define desired behaviour to a 	samsquire	15.111259	-3.9884481	comment	6.0	26.5	1710155477	-10.335762
36595669	I used to like Lisp's homoiconicity.	I used to like Lisp's homoiconicity.  These days, I'm not even sure the concept makes any sense?  What is it even supposed to mean?Lisp has (simple) syntax for creating literals and writing code.  But when you inspect your data from the inside of Lisp, they do	eru	15.106596	-3.98955	comment	6.0	32.0	1688533239	-10.366486
36890569	>Common Lisp programs run by default	>Common Lisp programs run by default in a way that calls to undefined functions are detected.Cool so what you're telling me is that by default every single function call incurs the unavoidable overhead of indirecting through some lookup for a function bound to	mathisfun123	15.113543	-3.976382	comment	6.0	21.5	1690446327	-10.353331
36891734	LISP continues to be a very interest	LISP continues to be a very interesting language.But REPL development is a mixed blessing. There are many situations where you want to start from a blank slate with no previous state.LISP would be a more practical language if it included a trivial option to ma	TheOtherHobbes	15.128577	-3.9614244	comment	6.0	18.0	1690455364	-10.57279
37002021	Sharpscript: Lisp for Scripting	Sharpscript: Lisp for Scripting	behnamoh	15.112058	-3.9771252	story	6.0	64.0	1691165725	-10.191195
23451804	If I had to put my finger on why For	If I had to put my finger on why Forth is hard for most programmers, it's like this: the structured program theorem suggests using sequence, selection, and iteration to control program logic. Assembly code on hardware architectures will assign all meaning sequ	megameter	15.024736	-3.8296044	comment	6.0	18.5	1591570668	6.060068
23491462	The Lisp 2 Project (2018)	The Lisp 2 Project (2018)	mhdhn	15.152602	-3.9427323	story	6.0	83.0	1591897969	-10.436456
23674517	> emacs outshines all other editing 	> emacs outshines all other editing software in approximately the same way that the noonday sun does the starsWhat makes Emacs genuinely great? Not that it was built a long time ago and withstood the test of time. Not the fact that it is absolutely free to use	iLemming	15.061009	-3.9830382	comment	6.0	24.5	1593407068	-10.359765
23738587	Ask HN: Is Lisp still used as a prog	Ask HN: Is Lisp still used as a programming language?	abhayhegde	15.132601	-3.9660678	story	6.0	3.0	1593956703	-10.45445
23878612	Typed Lisp, a Primer (2019)	Typed Lisp, a Primer (2019)	jedimind	15.147615	-3.9394655	story	6.0	107.0	1595042357	-10.3885145
24180879	Can someone direct me to some code w	Can someone direct me to some code where I can see the full potential of Lisp?I have programmed in Scheme before while taking a course using SICP. Final project was a Scheme interpreter. But I didn't have any epiphany/awakening like many others seems to have.	hackingthenews	15.138452	-3.9457076	comment	6.0	19.0	1597609009	-10.458312
24276881	Creating a Common Lisp implementatio	Creating a Common Lisp implementation, part 1 [video]	zeveb	15.1483755	-3.9382718	story	6.0	127.0	1598393865	-10.379951
24328998	Writing a Lisp to x86-64 compiler	Writing a Lisp to x86-64 compiler	tekknolagi	15.136503	-3.943492	story	6.0	81.0	1598855647	-10.366853
19987804	The Common Lisp Cookbook	The Common Lisp Cookbook	ghosthamlet	15.16279	-3.8874037	story	6.0	248.0	1558578676	-10.441257
20104655	Of note is that these are all associ	"Of note is that these are all associations. It's possible the associations are all due to selection effects (or even that the ""better"" language are actually worse but their effects are reversed by selecting for programmers who are better).In the early days of "	salmonellaeater	15.130412	-3.9564095	comment	6.0	18.0	1559744620	-10.475792
20196027	Ultralisp: A fast-moving Common Lisp	Ultralisp: A fast-moving Common Lisp software distribution	lerax	15.129421	-3.9508162	story	6.0	164.0	1560699903	-10.417443
19245739	Or Greenspun's Tenth Rule of Program	"Or Greenspun's Tenth Rule of Programming:    Any sufficiently complicated C or Fortran program contains an ad-hoc,
    informally-specified, bug-ridden, slow implementation of half of CommonLisp."	BerislavLopac	15.10373	-3.9697342	comment	6.0	15.0	1551104382	-10.30221
19273567	you obviously know lisp and might be	you obviously know lisp and might be biased but i have a serious question, if i was going to waste a bunch of time learning a functional language in 2019 and wanted to use it in production (I am in consulting, so I would be recommending this to my clients) wou	misiti3780	15.125123	-3.9817939	comment	6.0	19.0	1551377801	-10.467856
19439051	What are lisp macros for if not to d	"What are lisp macros for if not to delay evaluation? I assume you're making a distinction between purpose and mechanism here?I've always understood the semantics to be:fn:
(a b c) => (call a (eval b) (eval c))mac:
(a b c) => (eval (call a b c))"	reitzensteinm	15.084305	-4.0162253	comment	6.0	34.5	1553056815	-10.300829
19626018	Ask HN: Should I learn (E)Lisp befor	Ask HN: Should I learn (E)Lisp before switching to Emacs?	rooam-dev	15.1455555	-3.9390848	story	6.0	8.0	1554912258	-10.4526825
19727982	Absence of syntax!  I really wish ev	Absence of syntax!  I really wish every language were a lisp.  Like, Rust, the lisp, Swift, the lisp.  Who needs rules of precedence and associativity and statements vs expressions and all the other stuff that languages that aren't lisps impose on you?  Just s	paultopia	15.111558	-3.9863162	comment	6.0	26.0	1556023312	-10.398926
19905793	Sympathetic, but as long as lisp req	Sympathetic, but as long as lisp requires one to write math as function composition it won't catch on with computational types. Of course, I imagine that sort of thing could be a set of macros away...then that would be awesome, familiar infix mathematical expr	noobermin	15.116383	-3.9811282	comment	6.0	26.0	1557795870	-10.421901
15756996	>as a project grows and grows you en	>as a project grows and grows you end up inventing your own little dialect of the language which is opaque to any 3rd party reading your code unless they take the time to unravel your macros.This is bad use of macros, or an ugly macro system.Macros, at least i	flavio81	15.084472	-4.00682	comment	6.0	23.0	1511361111	-10.346649
15882989	Do you like Python? Python is basica	Do you like Python? Python is basically simplified Lisp. Common Lisp is Python plus first-class lexical closures (rather than second-class) plus true multithreading plus a real compiler so it runs much faster.Plus parentheses rather than indentation to delimit	dreamcompiler	15.109539	-3.9836988	comment	6.0	19.5	1512775421	-10.352211
15973324	A Common Lisp REPL on Android	A Common Lisp REPL on Android	zeveb	15.134679	-3.949734	story	6.0	74.0	1513800724	-10.504687
17946855	“Lisp is actually a family of langua	“Lisp is actually a family of languages discovered by John McCarthy 50 years ago.”McCarthy was deep in the Amazon when suddenly out of nowhere...	melling	15.1441965	-3.947379	comment	6.0	22.5	1536513936	5.7031054
18076490	For anyone interested in guile, guil	For anyone interested in guile, guile 3.0 will have a JIT, making it even faster than 2.2 (by quite a large margin).Guile is becoming really nice, and I find myself reaching for other lisps less and less.	bjoli	15.172	-3.8045728	comment	6.0	20.0	1537973363	-10.267536
18184406	Not an Emacs user, so forgive me if 	"Not an Emacs user, so forgive me if I'm being dense, but is this (from the README) really true?  Emacs will change how you think about programming.

  Emacs is an incremental programming environment. There's no 
  edit-compile-run cycle. There isn't even an ed"	mrec	15.0686035	-3.9873688	comment	6.0	20.0	1539176461	-10.397851
18193009	As someone new to Lisp. The followin	As someone new to Lisp. The following thing has always fascinated me. I've read some older posts on comp.lang.lisp and people insist on buying a 'high performant' Lisp. I think what they mean is Allegro CL or Franz Lisp.But why is it 'high performant' compared	kamaal	15.139383	-3.9528465	comment	6.0	25.5	1539261993	-10.432511
18203260	When you have Lisp, why do you still	When you have Lisp, why do you still need a so called filesystem?The idea of flat text files sounds odd, when you can have structured S-exp's.	jxy	15.096378	-3.972846	comment	6.0	35.5	1539366790	-10.469833
18227515	Having spent months learning Haskell	Having spent months learning Haskell, I'm interested to pickup another mind-expanding language. If I read SICP (and also watch the MIT lectures), what dialect should I follow along in? Ideally I would learn something people are using today so there would be us	ancarda	15.133502	-3.9674928	comment	6.0	15.0	1539676677	-10.538072
18226879	> Lisp is a powerful language that a	> Lisp is a powerful language that allows one to mix multiple logical levels within a program (especially through it's homoiconicity).Statement like these are what make me suspect Lisp code would be a maintenance nightmare. I am regularly refactoring code to s	tunesmith	15.133099	-3.9669096	comment	6.0	35.5	1539668619	-10.44565
18338884	Ask HN: I want to learn Wolfram Lang	Ask HN: I want to learn Wolfram Language	gsaga	15.038148	-4.025182	story	6.0	13.0	1540919368	-10.420986
18551097	Alternatively - you can choose to pr	Alternatively - you can choose to program in Common Lisp - an industrial strength language that has been demonstrated in large projects like the QPX flight search engine (Google Flights).For anyone who doesn't know - a big difference that Common Lisp brings to	drmeister	15.130517	-3.9619708	comment	6.0	21.0	1543410165	-10.459216
18635600	I have a few software packages in mi	I have a few software packages in mind:1.  The Genera operating system for Symbolics Lisp machines.  Ever since I've gotten bitten by the Smalltalk and Lisp machine bugs, I've been wanting to use Genera, but I was born at the beginning of the last AI winter, a	linguae	15.111772	-3.949461	comment	6.0	17.0	1544282331	-10.383431
18647562	Making Games in Lisp with Hypergiant	Making Games in Lisp with Hypergiant and Chicken Scheme	bananicorn	15.133475	-3.872675	story	6.0	155.0	1544447011	11.508244
18662321	Ask HN: Lisp in 2018?	Ask HN: Lisp in 2018?	Zeyad	15.138022	-3.9488885	story	6.0	6.0	1544603910	-10.45108
18854849	It's kind of interesting in the 2001	It's kind of interesting in the 2001 essay that invented blub it was suggested as a hypothesis as to>And if Lisp is so great, why doesn't everyone use it?Suggesting programmers in a blub language don't realise it's power. I get the impression in the 18 or so y	tim333	15.144746	-3.945028	comment	6.0	30.0	1546947545	-10.521173
29722417	Bass – Lisp dialect for scripting th	Bass – Lisp dialect for scripting the infrastructure beneath your project	yjftsjthsd-h	15.095176	-3.9618564	story	6.0	77.0	1640758549	-10.352108
29751506	> Lisp is the most expressive and fl	> Lisp is the most expressive and flexible language. You can reach a flow-state where ideas can freely flow from your mind into codeThis kind of claim typically comes from someone pretty new to the world of software development.You can say this of any language	hota_mazi	15.137541	-3.9586334	comment	6.0	16.5	1640978495	-10.524929
29947768	This is an interesting article, but 	This is an interesting article, but it unaccountably fails to say what an fexpr is. As fexprs are not present in either Common Lisp or Scheme, only aficionados of the history of Lisp will know. Here is the definition from the Wikipedia article:> A fexpr is a f	foldr	15.127809	-3.971673	comment	6.0	18.5	1642264794	-4.350861
30054081	Why does everything about Lisp immed	Why does everything about Lisp immediately make the front page?I've seen many interesting submissions about Java or C# - arguably much more popular languages; unlike with Lisp most of those we'll never see on the front page.Why is HN so biased towards this one	bitcharmer	15.146309	-3.941198	comment	6.0	20.0	1643002853	-10.451148
30139736	Yes. I have deployed mobile applicat	Yes. I have deployed mobile applications using native UI (SwiftUI, etc.) with all the shared logic in Lisp. To me, this was a better alternative than the usual C/C++ shared logic approach.My current application is a music hardware device that is mostly Lisp. A	diskzero	15.019726	-4.0172405	comment	6.0	22.5	1643567674	-10.415388
30174596	I wonder why do developers use CCL. 	I wonder why do developers use CCL.  I haven't work with SBCL and Lisp in general for years, but Emacs + Slime + SBCL worked very good.	comonoid	15.129203	-3.94801	comment	6.0	15.0	1643784695	-10.408352
30655664	Has anyone here read LISP in small p	Has anyone here read LISP in small pieces? I've never used LISP but would still like to read it. Would you recommend it? (it's not cheap, otherwise I'd just buy it without the due diligence)	nomilk	15.154042	-3.9281666	comment	6.0	15.0	1647124762	-10.487847
30656709	I don’t understand why old programme	I don’t understand why old programmers are so much fascinated by lisp. If it would have been good it would have survived today.	master_yoda_1	15.142836	-3.9458086	comment	6.0	15.5	1647132497	-10.470427
16409204	I absolutely love lisp. It's crazy h	I absolutely love lisp. It's crazy how it's one of the oldest language around, yet it still has more features than many other newer mainstream languages.At the same time, one of the reasons I don't like it too much for daily work, is how it encourages cleverne	dimatura	15.137205	-3.953336	comment	6.0	20.0	1518992990	-10.43806
16448156	"""Why on Earth would anyone want to u"	"""Why on Earth would anyone want to use a language with such horrific syntax?!""What is it with statements like this?  It just sounds like a 'meme' to me, that everyone hears (even from advocates like this one) at first that the 'syntax' (of which there is a lot"	kruhft	15.1017	-3.9940877	comment	6.0	45.5	1519410063	-10.303415
16583845	> knowing Lisp made me all too keenl	"> knowing Lisp made me all too keenly aware of Java's shortcomings, and I had a very hard time not being angry at how stupid it was that I was being forced 
to use it.I would take this as a the thing to remember from this. When you are too angry at something, "	watwut	15.143159	-3.9497662	comment	6.0	19.0	1521025972	-10.463174
16821292	Can anyone recommend a Lisp dialect 	Can anyone recommend a Lisp dialect / environment which is suitable for web-based publication, and game multimedia (graphics, audio, control, etc.)?	gnode	15.162308	-3.9249952	comment	6.0	17.0	1523543564	-10.41464
16941133	Slightly unrelated, but to those who	Slightly unrelated, but to those who have never tried Lisp because of the parenthesis (like me until recently), here's my take:I've recently started hacking with Elisp, and I really like it. Parenthesis are obviously pretty awkward at first. But now I wouldn't	globuous	15.095482	-4.0048623	comment	6.0	27.5	1524840465	-10.361864
17041348	Thing is, except for CS theory evolv	Thing is, except for CS theory evolving, the programming language environment from 30 years ago is in my opinion irrelevant from a maturity perspective. The number of practitioners was probably 1 million or so worldwide, now there’s probably 20-40+ million pro	oblio	15.089148	-3.9851117	comment	6.0	25.5	1525975081	-6.679971
17110819	History of Symbolics Lisp Machines (	History of Symbolics Lisp Machines (2007)	kristianp	15.130242	-3.9496508	story	6.0	108.0	1526782782	-10.279826
17259814	I've been shat on HN before for sayi	"I've been shat on HN before for saying this but I stand by it: you're not a programmer/developer/""whatever it's called now"" until you have done a parser for something at least as complicated as lisp in whatever the lex/yacc equivalent is in your language of ch"	zeth___	15.133729	-3.9553397	comment	6.0	27.0	1528402538	-10.377465
17440323	What's a good lisp ide other than em	What's a good lisp ide other than emacs?To me, learning lisp and Emacs at the same time seems like a tall order	wodenokoto	15.120758	-3.957659	comment	6.0	16.5	1530523395	-10.413868
17443076	Is SBCL winning in anything? One of 	Is SBCL winning in anything? One of my acquaintances, a Lisp zealot, convinced me to jump in and make my next project in SBCL. Short story, it was a joke. Nobody seems to have done any serious work in SBCL in over a decade. Basic things are either completely m	workinfunk	15.114389	-3.9691124	comment	6.0	17.0	1530549121	-10.53411
17653362	I still don't understand why after s	"I still don't understand why after so many years people are still trying to write a ""SICP, but with language X"".""The language doesn't really matter"", as such it's imperative Scheme is used.I strongly feel that if you've worked your way through SICP, and, once "	craigsmansion	15.13799	-3.9236379	comment	6.0	24.5	1533047040	-10.514946
17714459	Hyperpolyglot: Lisp	Hyperpolyglot: Lisp	tosh	15.147685	-3.9296741	story	6.0	127.0	1533722173	-10.459339
17761261	"I hate to be ""that guy,"" but what ha"	"I hate to be ""that guy,"" but what happened to the Guile-Emacs project? Guile performs way better than Elisp too, but (perhaps more importantly) raises the possibility of writing configuration and extensions in Lua and Scheme."	fusiongyro	15.1808	-3.8141215	comment	6.0	28.0	1534276166	-10.341562
17853172	Yes. I don't mind the parens (syntax	Yes. I don't mind the parens (syntax highlighting can subdue them), but every time I actually fire up Common Lisp to try it, I see all caps somewhere, like someone even older than me is shouting at me, or I stumbled across a box of my Fortran punched cards fro	Syzygies	15.117136	-3.9688642	comment	6.0	18.0	1535393823	-10.440253
21104414	SBCL 20: Steel Bank Common Lisp's 20	SBCL 20: Steel Bank Common Lisp's 20th Anniversary Workshop	kristianp	15.1432	-3.9367163	story	6.0	157.0	1569720900	-10.451937
21231303	I can't say I'm familiar with Lisp (	I can't say I'm familiar with Lisp (or its dialects).How does one get started learning a Lisp variant (in terms of learning resources/guides), and why use Lisp over other languages?	applecrazy	15.14426	-3.9379292	comment	6.0	15.5	1570866014	-10.453413
21231768	I remember reading pg's article on L	I remember reading pg's article on Lisp and startups, and at the time questioned if it was just mere luck. Then having a cursory look at Lisp, I questioned its relevance to the modern world.... fast forward a decade later and I'm reading books on functional an	alfiedotwtf	15.143323	-3.9462566	comment	6.0	52.0	1570873134	-10.531195
21670442	Mal – Make a Lisp, implemented in 79	Mal – Make a Lisp, implemented in 79 languages	tony-allan	15.136358	-3.946884	story	6.0	218.0	1575129136	-10.413793
21758098	A bit off topic, but is Common Lisp 	A bit off topic, but is Common Lisp still a good choice?I spent a lot of time learning and coding CL during the last decade. I love lots of things about the language. Overall, it's great it's true multiparadigm. Few languages achieve that.However, the implemen	nextos	15.129624	-3.9742858	comment	6.0	17.5	1576021729	-10.576028
39075390	Gah, another Lisp post to tempt me t	Gah, another Lisp post to tempt me to add yet another mini project to my plate...I always am curious about trying more Lisp because I keep seeing commentary about how powerful it is to actually build applications once you get moving on building things.Anyone h	wait_a_minute	15.1359	-3.9536285	comment	6.0	29.5	1705809554	-10.473569
39218584	It's always amazes me how common lis	It's always amazes me how common lisp is so much more dynamic than, say, python, and is still compiled down to native code, and has running speed in the same ballpark as java/go/c#.Unfortunately it's not a simple language, and has much historical baggage (the 	dgan	15.127846	-3.9659126	comment	6.0	22.0	1706808581	-10.445625
12583965	I'd think Common Lisp is the Lisp be	I'd think Common Lisp is the Lisp beyond Clojure.Also, I just see slides that have (googleable) terms, is there a recording of this presentation?EDIT: see mkozlows' comment (THANKS!!!)	noobermin	15.138821	-3.9635031	comment	6.0	42.5	1474912198	-10.736091
12710437	Question: I've looked at Forth a num	Question: I've looked at Forth a number of times and I think it's a fascinating looking language but I've never bothered picking it up. I've also never had a chance to talk to a Forth programmer. Can you tell me what type of application you're working on, if i	freehunter	15.038007	-3.814032	comment	6.0	18.5	1476472821	6.055828
12790042	...or Java or C# or Scala or Haskell	...or Java or C# or Scala or Haskell or Rust or OCaml or...There's a whole lot to the programming world than disproportionately popular dynamic languages.What is so great about Lisp that other languages don't have? Macros? Simple syntax? I mean, that's basical	sdegutis	15.115413	-3.977651	comment	6.0	20.0	1477418270	-10.4128065
12923171	When I think about writing my own la	When I think about writing my own language, I think of something with as few parenthesis as possible and all the examples use Lisp.	k__	15.107457	-3.988728	comment	6.0	19.0	1478804548	-10.358391
13137172	One of the things that has made me o	"One of the things that has made me old (52) and crotchety is that I learned Lisp very early in my career.  That gave me the ability to see that 99% of ""new"" technologies were really just poor re-inventions of (parts of) Lisp.  Even today, Common Lisp -- despit"	lisper	15.145484	-3.9440584	comment	6.0	56.5	1481266583	-10.452951
13184391	Pretty good advice, along with some 	Pretty good advice, along with some good pointers about what NOT to do when learning a languages (ex. reading some instructional book cover-to-cover, forgetting most of the stuff along the way).I often suggest the read-a-chapter-write-a-program-based-on-it rou	hardwaresofton	15.072248	-4.0030093	comment	6.0	23.0	1481808376	-10.375023
13193244	Does anybody have a few examples of 	"Does anybody have a few examples of DSLs people make in a lisp (ideally clojure because I have worked with it a tad)? I've seen plenty of cases where people make a pseudo-dsl via optional arguments, but not seen this so-oft mentioned ""yeah we just wrote a dsl "	bpicolo	15.093202	-3.9918764	comment	6.0	18.0	1481896808	-10.288098
13317836	Portacle – A Portable Common Lisp De	Portacle – A Portable Common Lisp Development Environment	AlexeyBrin	15.107402	-3.9315104	story	6.0	136.0	1483534559	-10.347146
13441793	This illustrates the power & the pro	This illustrates the power & the problem of Common Lisp: the power is that it really is easy to add channels (and pretty much every other feature) to the language yourself; the problem is that it's generally easier to write your own code to do this than to use	wtbob	15.141265	-3.948842	comment	6.0	25.0	1484887775	-10.452433
27699793	Homoiconicity isn't required for tha	Homoiconicity isn't required for that, all you need is to be able to map between source and AST enough to identify expression boundaries.Plenty of development environments for non-homoiconic languages provide the ability to evaluate a selected expression (not 	dragonwriter	15.111578	-3.9854128	comment	6.0	23.0	1625151974	-10.344601
27715081	Lisp machines were an interesting id	Lisp machines were an interesting idea. Unfortunately they were very expensive and fairly slow compared to other machines at the time.	aliasEli	15.13529	-3.9367943	comment	6.0	27.0	1625250874	-10.431725
27950040	Many newer programming languages hav	Many newer programming languages have focused on reducing hidden control flow and ugly text macros in favor of more transparent metaprogramming, which may help to illustrate one of the bigger issues with Lisp. Lisp itself is simple and elegant, but that doesn'	jchw	15.122792	-3.9760113	comment	6.0	21.5	1627228164	-10.438896
12090985	Advanced Forth Programming Topics	Advanced Forth Programming Topics	eatonphil	15.012311	-3.8108904	story	6.0	105.0	1468457830	6.0679164
12119228	I have a hard time imagining how som	I have a hard time imagining how some tasks could be managed while using the disciplines that make Forth useful.What are some examples of highly complex tasks that have had Forth programs written for?Something like Starcraft in Forth.  Or perhaps the most comp	Lerc	15.035743	-3.8099954	comment	6.0	15.0	1468896446	6.0494013
12197533	> emacs & slime[1]I've spent a lot o	> emacs & slime[1]I've spent a lot of time with emacs, and slime was what I used when I was exploring Common Lisp: both SBCL and CLISP. Emacs is really powerful and I'm fairly at home with it, but I've come to prefer more graphical IDE's. Judging from the popu	claystu	15.102743	-3.958946	comment	6.0	19.5	1469981845	-10.408492
12200164	"""The question is where will we be in"	"""The question is where will we be in five years, the answer is using Common Lisp, because of language features"" says the author in the comments.  This was 8 years ago.Kind of rude of me to take that potshot, but it's there.  I've been reading these ""Why Lisp?"""	krupan	15.134283	-3.9528103	comment	6.0	32.0	1470024976	-10.410137
12200301	Okay, I've spent a lot of time writi	Okay, I've spent a lot of time writing Common Lisp and even more time reading about Common Lisp, and to be honest, I'm just a little tired of the cult around it. People who know it well gloat about how great Common Lisp is, which just so happens to make them l	unpop-opinion	15.130596	-3.9609177	comment	6.0	19.5	1470028015	-10.431447
12200526	Well, no, I'm not confusing powerful	Well, no, I'm not confusing powerful and popular.  I'm asking why, for all lisp's power, there's almost no examples of that power actually doing anyone any good.Is it because most projects don't need something powerful?  The benefits of that power aren't actua	Frondo	15.147705	-3.9413447	comment	6.0	19.0	1470032599	-10.461759
12327051	I guess I'm never to actually “get L	I guess I'm never to actually “get Lisp” to appreciate its syntax.>Aside from the prefix ordering, Common Lisp’s syntax is already a bit more elegant because you can set arbitrarily many variables without repeating the assignment operator over and over again: 	expression	15.100623	-3.9934032	comment	6.0	28.5	1471707849	-10.418336
35323915	Funny to see this now, when AI is do	Funny to see this now, when AI is done by using Python to orchestrate numeric kernels written in C++ or Fortran. GOFAI lost, big time, and the key to success in AI is the ability to perform matrix multiplications as fast as machinely possible -- which means th	bitwize	15.127906	-3.9512863	comment	6.0	21.0	1679902497	-10.463146
28353454	HN loves the toy Lisps. I don't unde	HN loves the toy Lisps. I don't understand what this is good for.Implementing a toy Lisp is a great exercise, a meta circular evaluator is a great way to see how simple an implementation of Lisp can be... but to do anything serious with Lisp requires a serious	fsckboy	15.141681	-3.9433725	comment	6.0	18.5	1630308446	-10.455929
28393031	Ask HN: Is there an easy example of 	Ask HN: Is there an easy example of a Lisp pretty-printer?	jonathanstrange	15.135017	-3.950897	story	6.0	14.0	1630595519	10.346188
28450473	SBCL: Assembly code breadboard (2014	SBCL: Assembly code breadboard (2014)	isaac21259	15.1183605	-3.9432192	story	6.0	134.0	1631052070	-10.339229
22585733	Lisp: Good News, Bad News, How to Wi	Lisp: Good News, Bad News, How to Win Big (1991)	simonpure	15.158788	-3.9253433	story	6.0	120.0	1584298830	-10.457502
22886889	A book on algorithmic programming in	A book on algorithmic programming in Lisp	vseloved	15.128931	-3.9430444	story	6.0	141.0	1587020629	-10.4091215
22887293	Is there consensus on the most commo	Is there consensus on the most common and advisable tooling setup for newcomers in Common Lisp?	traderjane	15.143764	-3.9440742	comment	6.0	15.5	1587025376	-10.462092
23296851	"Can you elaborate on the part ""Lisp "	"Can you elaborate on the part ""Lisp as a great code generating language""? Just curious. I tried to learn Scheme for SICP but then switched to the Python version."	markus_zhang	15.134972	-3.9474347	comment	6.0	15.0	1590370749	-10.46785
33162722	Format is awesome, it is a domain sp	Format is awesome, it is a domain specific language for printing things. It can walk across lists, print all sorts of number radixes, make tables of data, and has its own condition system. I don't get the hate. It is not lispy at all in style, but isn't making	mtreis86	15.113945	-3.9782019	comment	6.0	29.5	1665492625	-10.29542
33197202	I think building everything out of c	I think building everything out of conses held Lisp back. It was possible, and it was deemed to be elegant, so people went too far with it. YMMV since my adventures with Lisp were around twenty years ago, but reading code, you'd see somebody constructing a lis	dkarl	15.137934	-4.0112486	comment	6.0	18.5	1665699567	-10.492645
33464197	What significantly else? These seems	What significantly else? These seems to be many reasons why people dont use Lisp.	_s_a_m_	15.149349	-3.93709	comment	6.0	15.5	1667556847	-10.4507475
33576615	I think S-expressions are fundamenta	I think S-expressions are fundamentally too difficult to work with, without good editor support, to make Lisp anything other than a niche power tool for the highly motivated. I love CL, Scheme, Clojure, Janet, Fennel, etc. but I don't blame anyone for finding 	nerdponx	15.08357	-4.0108275	comment	6.0	41.0	1668284262	-10.376743
33601688	I don't get it.  I am a Smug Lisp We	I don't get it.  I am a Smug Lisp Weenie.  Lisp is not a syntactic sugar - the only reason it looks like it does is for metaprogramming.  Those parens are not syntax - they indicate the underlying structure of the code, a tree which may be manipulated by Lisp 	giantdude	15.122147	-3.972008	comment	6.0	24.5	1668462518	-10.429548
33681361	I'd love to learn (a) Forth. As a be	I'd love to learn (a) Forth. As a beginner, where do you begin? Like Lisp there seems to be different variants. I always struggle with where to start.	account-5	15.145166	-3.9303787	comment	6.0	20.0	1668956378	-10.44983
34011770	Kilo Lisp: A Kilo Byte-Sized Lisp Sy	Kilo Lisp: A Kilo Byte-Sized Lisp System	KnuthIsGod	15.131772	-3.9412286	story	6.0	140.0	1671175726	-10.411899
34036825	The fact that about 10% maintains an	The fact that about 10% maintains an elisp package, and that about 90% can program in elisp, makes me suspect the outcomes are skewed. Either that, or emacs is doomed.	tgv	15.100557	-3.9635677	comment	6.0	29.5	1671364025	12.913731
34097967	One thing that puts me off about Com	One thing that puts me off about Common Lisp is functions that do multiple different things depending on a flag passed to them. (format nil s) formats a string, whereas (format t s) formats a string and prints it to stdout. This doesn't look like good design.	xigoi	15.133361	-3.9574294	comment	6.0	23.0	1671739730	-10.4379835
34102604	Ask HN: Is structural editing consid	Ask HN: Is structural editing considered mandatory for Lisp?	HexDecOctBin	15.113562	-3.9789054	story	6.0	9.0	1671773466	-10.354857
27157663	It seems that as interesting as Fort	It seems that as interesting as Forth is, the community of such languages is very niche and small, even smaller than Lisp. Can anyone speak to recent changes in velocity or energy?	threatofrain	15.137131	-3.9499524	comment	6.0	23.0	1621015791	-10.455079
27431180	Embedding Lisp in C++ – A Recipe	Embedding Lisp in C++ – A Recipe	pieterk	15.127186	-3.9628477	story	6.0	84.0	1623132767	-10.390435
38303694	> The main advantage Emacs has over 	> The main advantage Emacs has over other, more modern IDEs is ELisp, and the vast ecosystem built around it.Ecosystem yes, and also it's architecture and culture. ELisp I would say no. If we ignore the specific flavor, then 99% of what's realistically done wi	PurpleRamen	15.015496	-4.0115547	comment	6.0	25.5	1700229914	-10.381348
38352926	Great resource! Forgive my ignorance	Great resource! Forgive my ignorance but why do so many modern functional programming courses use Standard ML instead of a Lisp dialect? Is it because of its built-in type-checking, or is it just how it's always been taught?	agomez314	15.1058655	-3.9890618	comment	6.0	23.0	1700507657	-10.288357
38509258	When I tried to introduce s-expressi	When I tried to introduce s-expressions to a DSL my co-workers nearly lynched me. The parenthesis were so violently hated I sunk into a deep hole and still haven’t came back out of it.	sirsuki	15.086722	-4.005098	comment	6.0	38.0	1701626919	-10.29696
14726594	Any recommendations for a Lisp IDE o	Any recommendations for a Lisp IDE outside of Emacs?Also, aren't there any other OSS or free Lisp IDEs outside of Emacs? Or are they all crap?	oblio	15.091205	-3.9743478	comment	6.0	15.5	1499538840	-10.399639
14879556	What is even more amazing is to star	"What is even more amazing is to start a web server from the Lisp command line (the ""REPL""), and then change the definition of a function. The app will use the new function without stopping and/or restarting. And this includes the intermediate step of compiling"	flavio81	15.1147785	-3.976836	comment	6.0	19.0	1501304056	-10.416784
15057273	What are some examples of open sourc	What are some examples of open source Lisp projects and codebases whose features and elegance could have only been executed as well as they are in the language, or are just great codebases in general to study?	olewhalehunter	15.126955	-3.9564548	comment	6.0	16.5	1503211849	-10.45418
15078326	The author, a famous and well-liked 	The author, a famous and well-liked lisper,  is not consider ing portability features. CL is an ANSI standard and code often runs with no changes in many distinct CL implementations/compilers/interpreters.Also, related to that point: There are many different C	flavio81	15.136631	-3.9506996	comment	6.0	28.5	1503459308	-10.40236
15419799	When I discovered lisp several years	When I discovered lisp several years ago, it was indeed the textbook moment of enlightenment that you've heard about. This book was a part of that introduction for me (along with Practical Common Lisp). After working in C-like languages, I had no idea that pro	hellofunk	15.140252	-3.9526143	comment	6.0	20.5	1507319034	-10.482979
15571619	There seem to be two big camps that 	"There seem to be two big camps that preach a ""learn this weird new programming paradigm because it'll help you see things from a new perspective and will make you a better engineer"" message: the lispy languages, and the ML-like languages. Both of these languag"	ohazi	15.05626	-4.046686	comment	6.0	38.5	1509133676	-10.379745
20368880	I've never used Common Lisp, I know 	I've never used Common Lisp, I know some Clojure, used emacs-lisp, tried Racket, Fennel. I love Lisps. But I always wondered: What happened to Common Lisp? Some of the opinions I heard:- CL is too big (compared to Racket and Clojure)- Lisp-1 vs Lisp-2- recursi	iLemming	15.142763	-3.9511478	comment	6.0	15.0	1562407723	-10.484665
20433419	Oh really, that's interesting.  Is t	Oh really, that's interesting.  Is that sort of info widely known among the HN user base and I'm an ignoramus or is it a case of some of the users of longer standing being vocal about Lisp?	s_Hogg	15.116965	-3.9725463	comment	6.0	22.0	1563112937	-10.471571
20433021	In May 2009 O'Reilly agreed to publi	In May 2009 O'Reilly agreed to publish a book about Common Lisp (2011)	tosh	15.154411	-3.9279375	story	6.0	133.0	1563106915	-10.565033
20922124	The curse of Lisp is not its power, 	"The curse of Lisp is not its power, elegance, flexibility, etc. The curse of Lisp is its syntax! Both ""all those parentheses"" and what they represent is the curse of Lisp.Lisp forces coders to think in terms of infix trees. These trees need to be carried aroun"	cy_hauser	15.108112	-4.00005	comment	6.0	22.0	1568061030	-10.363747
13858367	besides, that shows me how well read	besides, that shows me how well readable lisp code is. even better than python.	raocah	15.115293	-3.975814	comment	6.0	17.0	1489417450	-10.351589
13858332	Code is not literature the same way 	Code is not literature the same way equations are not mathematics. Take any math or physics book, extract all of the equations, and throw away the text. That's how we write programs... just the equations.However, look at Physically Based Rendering (http://www.	daly	15.109038	-3.9632144	comment	6.0	17.5	1489417243	-10.375244
13949951	If you are really in a hurry and can	If you are really in a hurry and can't commit to learning the hundreds of forms in Common Lisp, Scheme is a minimalist alternative. The entire language has only a few forms on which make up everything else.	daliwali	15.133159	-3.9523072	comment	6.0	20.5	1490372267	-10.435491
13953086	What are some compelling examples of	What are some compelling examples of Lisp languages in use today in apps/situations/use-cases that we might all know about?A lot of people (likely mistakenly) think that it's just a language you learn in CS classes and then leave behind.	plg	15.144792	-3.945512	comment	6.0	16.5	1490398158	-10.468653
13979547	I wish an experienced LISPer would e	I wish an experienced LISPer would explain why should one use Common Lisp over a language like Golang. Golang now has https://github.com/glycerine/zygomys for scripting. For that matter, why would one choose Common Lisp over GNU guile ? (guile now supports fib	lenkite	15.160368	-3.8871772	comment	6.0	20.5	1490727533	-10.391257
13979721	Can someone point me at an argument 	Can someone point me at an argument for why I'd want to write CL in 2017, given all the great alternatives available now?	AlexCoventry	15.098768	-3.9662938	comment	6.0	24.0	1490728598	-10.509379
13981037	I started a big project at work usin	I started a big project at work using Common Lisp in 2017 and could not be happier. Sure, most nice features have trickled down to other languages, but they are rarely as nicely integrated. And Lisp still has many advantages that are not found elsewhere: Unmat	hydandata	15.132713	-3.9577236	comment	6.0	41.5	1490737749	-10.450964
14167428	Ask HN: Will the committee that buil	Ask HN: Will the committee that built Common Lisp make a new one in the future?	behnamoh	15.152107	-3.9351156	story	6.0	41.0	1492795150	-10.514848
14249271	_My_ main objection to lisp is that 	_My_ main objection to lisp is that it's confusing.I don't mean the syntax is hard to grasp. I mean the way it looks. It becomes very confusing when the program grows in size.This is not unique to Lisp. It applies to all dynamic languages that don't have stron	hasenj	15.123375	-3.968554	comment	6.0	15.5	1493750561	-10.415865
14512018	Lisp syntax is like no syntax at all	Lisp syntax is like no syntax at all, it's all just direct parse trees. It is unviable without more secondary formatting than syntactic forms since it is really difficult for the eyes to balance parantheses on their own.That LISP-style (non) syntax is successf	seanmcdirmid	15.1167555	-3.983718	comment	6.0	17.5	1496898306	-10.369616
14609412	This is pretty incredible work wrapp	This is pretty incredible work wrapped in an unassuming name. It basically presents an entirely new way to interact with any programming language. You could make an emacs mode that worked this way, for example.I could see this being one of the fundamental ways	sillysaurus3	15.117524	-3.9966085	comment	6.0	24.5	1498094037	-10.695232
14661239	The Common Lisp Cookbook	The Common Lisp Cookbook	macco	15.15714	-3.8898733	story	6.0	264.0	1498718363	11.362668
14661927	For a more modern and up to date gui	"For a more modern and up to date guide, Edi Weitz's ""Common Lisp Recipes"" is a great reference: https://www.amazon.com/Common-Lisp-Recipes-Problem-Solution-...The more I use Common Lisp, the more disappointed I am that it hasn't become more popular.  It really"	jlarocco	15.145097	-3.9417818	comment	6.0	68.0	1498729517	-10.414414
30776878	Statistical Analysis with Lisp-Stat	Statistical Analysis with Lisp-Stat	ngcc_hk	15.14423	-3.934015	story	6.0	101.0	1648030379	-10.4322195
30812939	"> We don't ""need"" Lisp machines. We "	"> We don't ""need"" Lisp machines. We ""need"" Lisp software. What made a Lisp machines extraordinary wasn't the hardware, it was the software. Nothing today is impeding one from writing such software, except time, energy, willpower, and/or money.Discussed here ht"	zozbot234	15.135309	-3.9514937	comment	6.0	32.5	1648310071	-10.432461
31044510	The History of Franz and Lisp	The History of Franz and Lisp	lisper	15.151039	-3.922152	story	6.0	109.0	1650050201	-10.46998
31115221	New blog about my journey to develop	New blog about my journey to develop a Common Lisp 3D software	kaveh808	15.143867	-3.9327312	story	6.0	115.0	1650575366	-10.446671
31244753	A recent comment from LWN on that no	A recent comment from LWN on that note:https://lwn.net/Articles/893608/I asked about this on their IRC channel and got this response from oriansj:Well we did bootstrap a FORTH from hex: https://github.com/oriansj/stage0/blob/master/stage2/forth.sand we did boo	pabs3	15.060729	-3.976215	comment	6.0	20.0	1651553323	-7.703233
31340595	I hate to break it to you, but sayin	I hate to break it to you, but saying your favorite language is Scheme would get A LOT of interviewers to laugh, especially in the enterprise world where Java and C# are dominant. These aren't usually Hacker News browsing people, and if they have any associati	pipeline_peak	15.140552	-3.9428074	comment	6.0	19.5	1652279892	-10.416462
25493495	Getting Started with Lisp (2019)	Getting Started with Lisp (2019)	wheresvic4	15.145603	-3.937	story	6.0	82.0	1608544695	-10.434345
25541919	Manga Guide to Lisp	Manga Guide to Lisp	_zhqs	15.147902	-3.935957	story	6.0	137.0	1608965868	-10.44208
25760381	A rabbit hole full of Lisp	A rabbit hole full of Lisp	mpereira	15.123084	-3.9876235	story	6.0	218.0	1610534615	-10.455824
25768360	I don't have anything against Lisp, 	I don't have anything against Lisp, I program Emacs with it, but wouldn't you get mostly the same features if Emacs used Javascript for its programming, for example?	dmortin	15.086611	-3.994664	comment	6.0	19.5	1610574288	-10.414503
25774173	I've seen a lot of embedded Forth st	I've seen a lot of embedded Forth stuff recently but I don't get the appeal. Clearly there is some benefit over writing assembly, but why is it preferred over portable C, or even higher level languages such as Python on more powerful mcus?FWIW I felt the same 	sandwell	15.097585	-3.939551	comment	6.0	19.0	1610616933	-10.415096
26066411	Hi, I'm the author.For those who hav	Hi, I'm the author.For those who haven't heard about the book yet: it is a practical description of the main data structures and algorithms in use today. The book is also featuring a presentation of the most important algorithm development techniques, as well 	vseloved	15.133798	-3.9340081	comment	6.0	20.0	1612800864	-10.442248
26067320	Out of topic, but as somebody who in	Out of topic, but as somebody who interested in lisp generally, I have a question, from which dialect would you suggest to start? I am a little bit lost. I am considering clojure, racket and common lisp. I am reading at the moment sicp book and do exercises in	vasergen	15.175782	-3.924034	comment	6.0	33.5	1612804620	-10.657944
26170206	A different Forth I enjoy to hobby c	A different Forth I enjoy to hobby code puzzles in is [Factor](https://factorcode.org/) and is probably an easier place for people to start. Forths are wonderful languages that everyone should have some exposure to, they are like a cross of Lisp and Smalltalk.	Pet_Ant	15.046089	-3.8221698	comment	6.0	27.0	1613588987	6.0756702
35853634	Appreciating what Lisp is capable of	Appreciating what Lisp is capable of doing (think macros), and having worked through SICP some twenty years ago, and after having tried to make a deep dive in CL and Emacs Lisp two years ago, I come to the conclusion that there is no silver bullet in Lisp-land	submeta	15.118799	-3.9675782	comment	6.0	17.0	1683480567	-10.374243
35856351	Here's a question the article doesn'	Here's a question the article doesn't answer: why Common Lisp?  I.e. why not Scheme?  Scheme is a plenty powerful language these days with all the libraries it has available.  Granted, it doesn't have history going back to the 1950s, but it does date back to t	Paul-Craft	15.118458	-3.9740465	comment	6.0	22.0	1683499766	-10.4669695
35947217	CMU Common Lisp 21e	CMU Common Lisp 21e	mepian	15.140327	-3.9347982	story	6.0	115.0	1684154382	-10.42521
35973000	Ocicl – An ASDF system distribution 	Ocicl – An ASDF system distribution and management tool for Common Lisp	gjvc	15.141001	-3.9407306	story	6.0	41.0	1684315698	-10.435069
36017368	Lisp was always such an odd animal, 	Lisp was always such an odd animal, kind of the rotary engine of computer science.  Although provably superior in every respect, no one ever seemed to build anything with it.Programmers in the thread, when was the moment you bailed on lisp? For me it was when 	idlewords	15.143086	-3.9428313	comment	6.0	30.5	1684634913	-10.479057
36163969	Has any lisp like language become po	Has any lisp like language become popular ? I think the most popular was Dylan and o know the racket team is doing something similar.	zitterbewegung	15.140035	-3.9462283	comment	6.0	19.5	1685707203	-10.431512
36249546	The TI (Lisp) Explorer Project	The TI (Lisp) Explorer Project	mepian	15.149449	-3.9017034	story	6.0	76.0	1686260373	-10.507008
28722523	Some weeks ago I tried to start lear	Some weeks ago I tried to start learning Lisp too.I found it odd, but I’ve seen weirder. Then I tried the simple example of writing a function to compute the nth fibonacci number (it’s almost the first example). After testing some numbers, I thought it seemed 	xondono	15.084726	-4.004143	comment	6.0	31.5	1633116907	-10.466275
28728644	I feel inspired to start with Lisp a	"I feel inspired to start with Lisp after being disappointed with the ""open"" source scene of 2021. I'd rather pay LispWorks a yearly fee and be left alone than dealing with unbalanced people in the Python space. The free Lisp implementations also look somewhat "	cnbland	15.13315	-3.9524817	comment	6.0	15.5	1633183521	-10.391773
28816849	One of these days I'm gonna sit down	One of these days I'm gonna sit down and properly learn Lisp. My career as a programmer is still relatively young ( < 5 years), and learning lisp won't provide any value in my day-to-day work. But understand the concepts and paradigms of Lisp certainly has to 	lprd	15.147587	-3.9389672	comment	6.0	21.0	1633855561	-10.454126
28834034	For anyone not in the loop, Norvig w	For anyone not in the loop, Norvig was the author of Paradigms of Artificial Intelligence Programming. This was a substantial contribution to the field of educational computer science literature, and helped to kickstart the idea that the way to learn is to rea	metagame	15.127465	-3.9194221	comment	6.0	35.5	1633992871	-10.411166
28979482	Controlling the terminal with Common	Controlling the terminal with Common Lisp (2020)	winkywooster	15.150774	-3.9358733	story	6.0	91.0	1635093362	-10.316979
29006469	Better question: why not Lisp?	Better question: why not Lisp?	firebaze	15.144534	-3.943408	comment	6.0	47.0	1635283479	-10.464638
29056035	Forth fans live in what seems to be 	"Forth fans live in what seems to be a world of delusion. They rail against modern software, claiming to have an enlightened ""system"", and yet cannot communicate anything about the real capabilities of their system. If you ask most Forth users ""what do you do i"	joeberon	15.038791	-3.8083398	comment	6.0	24.0	1635677090	6.1313744
29494255	Lessons learned after working one ye	Lessons learned after working one year as a Common Lisp Developer (2018)	xept	15.14961	-3.9367552	story	6.0	194.0	1639028866	-10.436637
29536703	Weird: Generative Art in Common Lisp	Weird: Generative Art in Common Lisp	alaq	15.148465	-3.927933	story	6.0	267.0	1639370655	-10.438824
29630875	Author here. You know it when you se	Author here. You know it when you see it. LISP is a tool that people want to use. People write production software using it. For example, this website (Hacker News) was written in LISP. Languages like BrainFuck are usually only called programming languages if 	jart	15.134638	-3.955363	comment	6.0	15.5	1640037472	-10.421557
34322401	I was /that guy/ at my last place an	I was /that guy/ at my last place and I agree that it's not well received.Though once I was writing some lisp to fix a problem we were having and I had a developer beside me and he was blown away by what was happening. I think that the interactivity is somethi	smcn	15.124374	-3.9576304	comment	6.0	26.0	1673343326	-6.4563885
34373472	I believe that any programmer should	"I believe that any programmer should at least know a little about Forth. It's like Lisp. Just knowing about them is extremely enlightening, even if you don't use them in your daily life.Obligatory link:
https://github.com/nornagon/jonesforth/blob/master/jonesf"	amalgamated_inc	15.03111	-3.8139262	comment	6.0	29.5	1673641861	6.0896273
34515137	Ask HN: What's Your Story with Lisp?	Ask HN: What's Your Story with Lisp?	divyaranjan1905	15.151358	-3.9311192	story	6.0	4.0	1674628632	-10.4314995
34541212	I'm going to straw man a bit, but it	I'm going to straw man a bit, but it feels like lisp enthusiasts are desperate to find stories of commercial software being written in lisp.I'm sure there's many examples I haven't heard of that are legitimate (using lisp for almost all of a specific domain at	spicybright	15.152272	-3.930394	comment	6.0	21.0	1674781762	-10.4507065
34564155	LispMe – the Scheme system for PalmO	LispMe – the Scheme system for PalmOS (2008)	app4soft	15.13485	-3.9414978	story	6.0	94.0	1674958095	-10.378369
34846737	I went there, saw the Lisp syntax, a	I went there, saw the Lisp syntax, and noped back out.	mike_hock	15.137963	-3.9472456	comment	6.0	24.0	1676726466	-10.411677
34903985	    define('ISEMAIL_STRING_AT'  , '@	"    define('ISEMAIL_STRING_AT'  , '@');
    define('ISEMAIL_STRING_BACKSLASH' , '\\');
    define('ISEMAIL_STRING_DOT'  , '.');
    define('ISEMAIL_STRING_DQUOTE'  , '""');
    define('ISEMAIL_STRING_OPENPARENTHESIS' , '(');
    define('ISEMAIL_STRING_CLOSEPARE"	puffoflogic	15.097366	-4.000012	comment	6.0	16.5	1677105404	-10.282278
35009355	Just use vim. Yes, emacs has a lisp 	Just use vim. Yes, emacs has a lisp engine, but so does nvim[1]. Really, though, using vim properly means that it doesn't need to swallow the kitchen sink[2]. Just use vim.1: https://github.com/Olical/aniseed2: https://blog.djha.skin/p/emacs-users-im-okay-i-pr	djha-skin	15.075161	-3.9678986	comment	6.0	19.5	1677850401	-10.287127
37323435	"    (h1 :disabled Hello world!)
    "	"    (h1 :disabled Hello world!)
    (div :class=""alert""
          So long, and (b thanks) for all the (em fish))

I hate that syntax for attributes.:class=""alert"" is strictly worse than ((class . ""alert"")) or any other variation that actually leverages s-expre"	sph	15.062459	-4.018235	comment	6.0	29.5	1693408431	10.2511425
24430272	As a non Emacs user, is the speed of	As a non Emacs user, is the speed of Emacs Lisp a frustration in typical day to day  usage?	5h	15.066444	-3.999647	comment	6.0	16.0	1599728327	-10.390347
24467534	I’ve been in a “retro computing” dee	I’ve been in a “retro computing” deep dive lately and it’s been fascinating to discover Forth. I was surprised that an entirely novel paradigm was hidden despite much digging over many years. All of the sudden I am seeing it everywhere now too - confirmation b	dfischer	15.048341	-3.8195322	comment	6.0	24.5	1600066417	6.077859
24604482	Author here! This was a super fun pr	Author here! This was a super fun project that consumed over a month of evenings and weekends. In the past couple of days I finished the examples, and I'm glad to finally put it out there.I don't quite remember how I fell into the Forth rabbit hole, but I thin	cblum	15.038354	-3.82537	comment	6.0	20.5	1601185470	6.091373
24770982	Interesting that COMP.LANG.LISP has 	Interesting that COMP.LANG.LISP has posts dating last month. I guess the network isn't dead. I wonder if there are groups with interesting recent activity.	jolmg	15.12409	-3.9255595	comment	6.0	16.5	1602627714	-10.344614
25147970	Archive of Lisp Machine, Inc	Archive of Lisp Machine, Inc	kristianp	15.145172	-3.9323661	story	6.0	130.0	1605780870	-10.378529
25319819	If  CL had only two namespaces, it w	If  CL had only two namespaces, it would be odd and random, but not unique.   It's like writing `./foo` vs `foo` in shell. Common Lisp is naturally more like operating system than programming language anyway.But once you realize that CL has more than two names	nabla9	15.127011	-3.9729338	comment	6.0	22.0	1607214942	-10.449871
32604484	Corman Lisp development environment 	Corman Lisp development environment for MS Windows	eggy	15.12104	-3.9499693	story	6.0	62.0	1661501023	-10.4100275
32616396	So fun to see this — I worked on 3-L	So fun to see this — I worked on 3-Lisp for Brian at PARC back in the early 1980s.A simple way to state the proposition is: in any language there are things you cannot write in the language itself: they have to be supplied by your interpreter (or the compiler 	gumby	15.097398	-3.9938128	comment	6.0	23.0	1661582275	-10.307645
32632468	Lisp is inspiring at first glance, b	Lisp is inspiring at first glance, but when you need to solve complex problems like references, pointers, macros, byte-compilation and native compilation it just is not expressive enough like C, C++, or Rust. Neither is Javascript. Lisp could not replace all o	cjohansson	15.090528	-3.9949648	comment	6.0	16.0	1661723753	-10.451681
32699983	SBCL 2.2.8	SBCL 2.2.8	susam	15.131627	-3.9360342	story	6.0	112.0	1662194730	-10.394825
32913301	GTK4 Bindings for Common Lisp	GTK4 Bindings for Common Lisp	oumua_don17	15.132804	-3.949185	story	6.0	125.0	1663688570	-10.378087
33003614	What Makes Lisp Unique?	What Makes Lisp Unique?	socialdemocrat	15.156808	-3.9301984	story	6.0	33.0	1664332104	-10.445213
33054430	Emacs-like editors written in Common	Emacs-like editors written in Common Lisp	ducktective	15.095932	-3.968781	story	6.0	120.0	1664703244	-10.359797
31812084	"[speaking broadly about any ""easy Li"	"[speaking broadly about any ""easy Lisp"" type projects]- Because you've not created anything even remotely for production use- Because you're getting any/all of the following from a host language. - garbage collection. - I/O. - numbers. - exception handling. - "	kazinator	15.117092	-3.966919	comment	6.0	16.0	1655741722	-10.379977
32114757	Rob Pike famously explained that C n	"Rob Pike famously explained that C needed its space-insensitive braces and semicolons in case code was transmitted through a channel that mangled whitespace.Those days predate most people reading this, yet many new language syntaxes opt for ""familiarity"". I wi"	Syzygies	15.098795	-3.9988563	comment	6.0	21.5	1657938403	-10.305791
32390085	Part of the formative process of eve	Part of the formative process of every true Lisp programmer is at some point to spend 2 months creating a parens-free lisp dialect, and then abandoning it.	drcode	15.127621	-3.9614556	comment	6.0	19.5	1659987706	-10.386099
32478797	World Building and Alternate Reality	World Building and Alternate Reality Common Lisp	kaveh808	15.154941	-3.9301496	story	6.0	64.0	1660619547	-10.472532
22063860	"""Some good concepts""?It was the firs"	"""Some good concepts""?It was the first language to add ""if/else"" constructs, GC, closures, first class functions, reference semantics, and recursion.It took between 5 to 40 years before these became available in mainstream languages (conditionals like if/else w"	coldtea	15.12782	-3.9662209	comment	6.0	32.0	1579177702	-10.464448
22069064	I would like to ask a genuine questi	I would like to ask a genuine question (not trying to provoke anyone!).  Where is a good use case for Scheme these days (in any form?).  I really love the idea of the language but I can't figure out where it really does a _better_ job that these things:-- Java	wsgeek	15.087741	-4.002932	comment	6.0	15.0	1579209516	-10.389286
22255695	Why?  If you really want to do scrip	Why?  If you really want to do scripting in lisp, why would you not just use guile?This is just embracing complexity when scheme is a perfect fit, and already exists in multiple ways in the domain.Did Gauche stop existing?http://practical-scheme.net/gauche/	arnautdaniel	15.1770315	-3.8358257	comment	6.0	19.5	1580994609	-10.311579
23729970	Lisp Badge: A single-board computer 	Lisp Badge: A single-board computer that you can program in uLisp	lnyan	15.140896	-3.936871	story	7.0	162.0	1593834849	-10.483389
23761955	> You must not use INTERN or UNINTER	> You must not use INTERN or UNINTERN at runtime.I.e. you must not read Lisp data at run time, if it contains symbols, because that will call intern.> You should avoid using a list as anything besides a container of elements of like type.Good-bye, code-is-data	kazinator	15.120183	-3.9754336	comment	7.0	47.0	1594144158	-10.350742
23843525	The Common Lisp Condition System – U	The Common Lisp Condition System – Upcoming Book	phoe-krk	15.130661	-3.9590647	story	7.0	183.0	1594810581	-10.434924
24386826	Compiling a Lisp to x86-64: primitiv	Compiling a Lisp to x86-64: primitive functions	tekknolagi	15.131481	-3.9513686	story	7.0	126.0	1599339827	-10.378142
20059513	Lisp System Implementation	Lisp System Implementation	nils-m-holm	15.136344	-3.9468033	story	7.0	195.0	1559296004	-10.424534
20145734	Common Lisp: The Untold Story (2012)	Common Lisp: The Untold Story (2012)	tosh	15.146403	-3.9355762	story	7.0	100.0	1560166964	-10.4603405
20231749	> PG's ANSI Common LispWould you say	"> PG's ANSI Common LispWould you say PG's ANSI Common Lisp is better or worse (as a zero-to-hero intro to CL for an ""experienced"" programmer in other languages) than Peter Seibel's Practical Common Lisp?I'm curious because I'm currently teaching myself CL (slo"	nnq	15.130286	-3.9691827	comment	7.0	20.5	1561030352	-10.495564
20239234	I kind of wish there was a lisp with	"I kind of wish there was a lisp with the ""recompile on error and continue"" feature of Common Lisp but without a massive standard library. A standalone SBCL program seems to be around 40MB at minimum. It feels like it would be doable if only CL wasn't designed "	nonbirithm	15.125645	-3.9522364	comment	7.0	22.5	1561082413	-10.398126
20365490	SBCL – Past, Present, Future [pdf]	SBCL – Past, Present, Future [pdf]	tosh	15.129307	-3.9417257	story	7.0	206.0	1562357692	-10.390527
20369522	Lively Linear Lisp – 'Look Ma, No Ga	Lively Linear Lisp – 'Look Ma, No Garbage' (1992)	tosh	15.153786	-3.931356	story	7.0	124.0	1562419374	-10.458062
20628987	C-mera – Lisp syntax with C semantic	C-mera – Lisp syntax with C semantics	lukego	15.093473	-3.9912033	story	7.0	59.0	1565122025	-10.32551
20631407	Programming Algorithms in Lisp: Data	Programming Algorithms in Lisp: Data Structures	nafizh	15.124611	-3.956101	story	7.0	124.0	1565143280	-10.406609
20647009	Don't take it bad, but here is my at	"Don't take it bad, but here is my attempt in creating a new ""Lisp dialect"" compiling into BASIC:  (main
    (linenumber 10 (print ""hello world""))
    (linenumber 20 (print ""Hey!""))
    (goto 10))

More seriously, is Hy anything more than writing Python with so"	baruchel	15.078853	-4.0130787	comment	7.0	19.0	1565287929	-10.061043
20789547	It’s a romantic idea but it’s simply	It’s a romantic idea but it’s simply not true. I have two examples.The first example is easy: Implement an O(1) jump table in Common Lisp that respects the lexical environment. (You can’t, unless CASE is itself optimized to a jump table, which it usually isn’t	reikonomusha	15.122886	-3.9727805	comment	7.0	30.0	1566678884	-10.353242
25579236	SBCL: New in Version 2.1.0	SBCL: New in Version 2.1.0	susam	15.128905	-3.9423385	story	7.0	174.0	1609310414	-10.415528
25623118	To not go absolutely insane with Lis	To not go absolutely insane with Lisps, you need some kind of parentheses tool with your editor such as ParEdit. The up side is once you get used to your tool, you can do really cool things and navigate/change code in higher level ways. But the massive downsid	city41	15.106843	-3.984621	comment	7.0	28.0	1609694256	-10.340606
25623151	While I would agree that paredit in 	While I would agree that paredit in Emacs is fantastic, the real shock comes when you have to go back to editing code in those languages that have the weird arbitrary punctuation. I mean, your editor can't even properly manipulate those expressions most of the	jwr	15.072066	-4.004917	comment	7.0	23.0	1609694530	-10.293233
25940439	A Shell Language in Lisp	A Shell Language in Lisp	todsacerdoti	15.109082	-3.9682553	story	7.0	83.0	1611831357	-10.185388
26222374	Python for Lisp Programmers (2000)	Python for Lisp Programmers (2000)	optimalsolver	15.095499	-3.993641	story	7.0	78.0	1613985354	-10.167429
26297854	I must admit that I never understood	I must admit that I never understood what these particular examples had to do with Lisp being such a great programing language given that you can implement exactly the same logic in basically any programing language, including for instance C (although you'd ha	simias	15.109531	-3.9811187	comment	7.0	23.0	1614552551	-10.346753
35521327	Conversation with Larry Masinter abo	Conversation with Larry Masinter about standardizing Common Lisp	djha-skin	15.150547	-3.9336317	story	7.0	110.0	1681192168	-10.457918
35552789	I'm eager to jump into a Lisp.Janet 	I'm eager to jump into a Lisp.Janet seems really tempting for tiny footprint, distributability etc.But I'm currently leaning towards to Racket just because it would be more or less compatible with a whole host of Scheme books that I'd like to read (The Little 	phonebucket	15.161591	-3.9160585	comment	7.0	17.5	1681376368	-10.514975
36103946	Build Your Own Lisp	Build Your Own Lisp	curious16	15.139121	-3.94101	story	7.0	115.0	1685281467	-10.448056
36155900	Which Lisp is the most practical and	Which Lisp is the most practical and easy to pick up for a programmer? I already tried emacs lisp but the experience of running emacs was not great, so I gave up	akkad33	15.114386	-3.9664648	comment	7.0	20.0	1685646550	-10.413757
36195055	But other than a Skyscanner predeces	But other than a Skyscanner predecessor (VIA), a computer algebra engine, and Grammarly, are there any other modern high profile lisp powered products?	KRAKRISMOTT	15.1397505	-3.9415534	comment	7.0	33.0	1685966254	-10.417009
36267083	A comment about Christian Queinnec's	A comment about Christian Queinnec's book Lisp in Small Pieces (1996)	vector_spaces	15.153302	-3.926351	story	7.0	55.0	1686365224	-10.445282
36367922	So I've read that they wrote it in L	So I've read that they wrote it in Lisp at Paul Graham's request or to win favor. Does anyone know if writing your startup code in Lisp still has that benefit?	mchaver	15.135131	-3.9428184	comment	7.0	25.0	1686984411	12.083978
36478908	"Are there ""conversions"" for other la"	"Are there ""conversions"" for other languages as well? I know it's almost required reading for any software developer worth their salt, but I have several failed starts with the original version and have sworn to never have to read Lisp code. I get the gist. I g"	alkonaut	15.111646	-3.973397	comment	7.0	23.5	1687782919	-10.397124
36520985	Clog – The Common Lisp Omnificent GU	Clog – The Common Lisp Omnificent GUI	marcodiego	15.126953	-3.942778	story	7.0	157.0	1688049617	-10.386727
36522360	When I read things like the second p	When I read things like the second paragraph above, I start to wonder if maybe I am actually a terrible programmer because I only ever learned what you might generously call “applied computer science” aka only the languages commonly used in typical workplaces 	xp84	15.136288	-3.9507277	comment	7.0	18.0	1688054915	-10.419319
29008699	Why does it feel like there’s more p	Why does it feel like there’s more prose about lisp being written than lisp code? I swear there’s like 15 people writing Common Lisp — Nikodemus, Shirakumo, Stylewarning, Christian Schafmeister, Borodust, the ITA folks, and maybe 2 startups.	gaze	15.140256	-3.9489434	comment	7.0	21.5	1635299161	-10.475783
12640736	No. Stop it. I don't want to hear th	No. Stop it. I don't want to hear that we should be re-writing all of our systems code in Rust, or that Oberon and the Wirth family should have won, or that C is crap, and Linux should die, and be re-written, or that this wouldn't have happened if we had all j	qwertyuiop924	15.115495	-3.9576569	comment	7.0	37.0	1475626840	-10.30901
12658145	From a Lisp POV, the only thing wron	"From a Lisp POV, the only thing wrong with NewLisp is the name.It flouts McCarthy's wish that no language be called just Lisp. Well, okay, it's not literally called Lisp; it has the ""New"" in front. On the surface, it seems to be sticking to the letter of the w"	kazinator	15.142712	-3.9464574	comment	7.0	35.0	1475813955	-10.454188
13156206	Seeing as you know something about F	Seeing as you know something about Forth. Is it used somewhere in production outside of purely academic setting?	Senji	15.04118	-3.810547	comment	7.0	18.0	1481526413	6.0997877
13193218	Is there a kind of walkthrough/tutor	"Is there a kind of walkthrough/tutorial about how to develop a little Lisp interpreter? 
That sounds like a fun experiment.PS: Sorry, I am a Java OO developper. But I like to learn :)"	lolive	15.1387005	-3.9486768	comment	7.0	18.0	1481896586	10.820735
13311952	Many folks have said it here but I'l	Many folks have said it here but I'll say it again: Common Lisp.I have been using it professionally for 5+ years as a full-time employee at various companies. Some big-name ones, some smaller start-up ones. The mean Lisp team size has been around 4, but I did 	reikonomusha	15.123591	-3.966537	comment	7.0	22.0	1483470095	-10.488683
13355731	When I started working in bioinforma	When I started working in bioinformatics I was excited to use Lisp for my work. I wrote a considerable amount of library code and programs at first. But I always found resistance when it came to other people using my programs and even more if the program was t	torrent-of-ions	15.118387	-3.979038	comment	7.0	30.0	1483963578	13.144873
13441272	Channels in Common Lisp	Channels in Common Lisp	codr4life	15.152631	-3.933586	story	7.0	94.0	1484878594	-10.457964
13447571	Joxa – A concurrent, distributed Lis	Joxa – A concurrent, distributed Lisp	emidln	15.118443	-3.953747	story	7.0	122.0	1484952300	-10.393093
27640984	BLisp: A Statically Typed Lisp Like 	BLisp: A Statically Typed Lisp Like Language	agentofuser	15.109629	-3.9816208	story	7.0	121.0	1624706804	-10.307843
12060734	Ask HN: Which Lisp/Scheme to go for?	Ask HN: Which Lisp/Scheme to go for?	ngeek_13	15.1258135	-3.9476297	story	7.0	8.0	1468055057	-10.462265
18950137	I don't really know forth, but it se	I don't really know forth, but it seems like people who learn it really like it; can someone give me a high-level explanation to while it's easier to write Forth instead of C for low-level programming?	tombert	15.027264	-3.830703	comment	7.0	18.5	1547943789	-7.050813
19174236	A Common Lisp Interpreter Built in C	A Common Lisp Interpreter Built in Cobol	abrax3141	15.135062	-3.9422538	story	7.0	88.0	1550261230	-10.223022
19276774	It’s interesting that they chose to 	It’s interesting that they chose to use Common Lisp for their entire quantum stack. Maybe it hit the sweet spot between expressiveness and performance? Choosing a Lisp makes sense, but I’m not sure I would choose CL. The macro system is primitive and the whole	mruts	15.156583	-3.928988	comment	7.0	32.5	1551399117	-10.434423
15782849	Writing your own Lisp-ette is a bril	Writing your own Lisp-ette is a brilliant evening or weekend project, regardless of the language. It's some of the simplest non-toy parsing you can attempt, a bit of light data structure work, and understanding eval/apply is 80% of the work in implementing it.	sago	15.061833	-4.0028367	comment	7.0	24.5	1511728808	-10.323303
15882061	Every time, I see one of these links	Every time, I see one of these links or videos, I feel the urge to learn Lisp. But after some time, I lose the motivation. I think that is because I don't know what benefit learning lisp will provide me concretely. Anyone has any suggestion?	nafizh	15.183187	-3.9032352	comment	7.0	55.0	1512767377	-10.465374
16009280	I've programmed a lot in various dia	I've programmed a lot in various dialects of Lisp, and I like car and cdr. Using names like first and rest might make a language more attractive to new users, but there is something to be said for designing at least some languages for experienced users rather 	montrose	15.090489	-4.0096345	comment	7.0	27.5	1514305916	-10.551759
16387603	The languages I know typically have 	The languages I know typically have a fairly standard way of implementing functions - either values or references to values are passed as arguments and then the function does something. Maybe it returns a value. That means a construct that short circuits, such	roenxi	15.117175	-3.9797316	comment	7.0	18.0	1518728578	-10.359546
16387820	I'm starting to think that the reaso	I'm starting to think that the reason Lisp has never taken off outside a minority of users is that homoiconicity is a downside for the human readers of the language; computers are happy to count brackets, but humans prefer either different types of brackets or	pjc50	15.109782	-3.987156	comment	7.0	21.5	1518730235	-10.374197
16447905	The Nature of Lisp (2006)	The Nature of Lisp (2006)	peterkelly	15.149643	-3.9356222	story	7.0	109.0	1519407938	-10.462182
16819425	This looks like it could be fun. I d	This looks like it could be fun. I don't know Lisp, but I might be willing to learn one just for this jam. Can someone recommend a Lisp version that works on Windows and is easy to setup? Simple 2D graphics like SDL will be enough for me.	skocznymroczny	15.150456	-3.9200509	comment	7.0	23.0	1523528692	-10.417048
17038246	Type declarations in Common Lisp are	Type declarations in Common Lisp are unsafe. Violating a declaration at runtime is UB.What SBCL is doing to Common Lisp is similar to what C compiler vendors did to C. In order to win at benchmarks, C compiler vendors started to use UB as a license to miscompi	YouAreGreat	15.127645	-3.9554038	comment	7.0	29.5	1525955741	-10.333634
17440046	I don't get the downvote. This is my	I don't get the downvote. This is my experience too. You browse a code source, unable to understand some of it. You google it and find nothing. Only to realize that the author defined it's own little world. As usual, zero unitest or tutorials. It makes lisp a 	sametmax	15.14879	-3.940151	comment	7.0	27.0	1530519280	-10.429121
17532943	Lisp, Jazz, Aikido – Three Expressio	Lisp, Jazz, Aikido – Three Expressions of a Single Essence	kuwze	15.159619	-3.9243948	story	7.0	28.0	1531611302	-10.457919
17534603	My problem with Haskell is that it i	"My problem with Haskell is that it is not pragmatic and the reason I stopped using it. The philosophy of separating pure and impure code – and to enforce it – does more harm than good. Often its difficult to understand what your ""forth level of abstraction cod"	thibran	15.114399	-3.9932387	comment	7.0	37.0	1531649697	-10.477375
17534828	The ability to come up with new synt	The ability to come up with new syntax in LISP is in my opinion vastly overrated.Yes, LISP code can be easily parsed for as long as you stick to lists. However the ability to do anything complicated with LISP code is simply not there because LISP code loses ty	bad_user	15.118521	-3.9779859	comment	7.0	25.0	1531655344	-10.418925
17644067	Practical Common Lisp (2009)	Practical Common Lisp (2009)	tosh	15.140176	-3.9443257	story	7.0	144.0	1532955415	-10.421607
17645275	Can anyone please comment what advan	"Can anyone please comment what advantages and short-comings Common LISP has over ""modern LISP"" (i.e. Clojure)?"	m0skit0	15.125561	-3.974799	comment	7.0	45.0	1532965644	-10.622659
17743747	History of editors for Lisp	History of editors for Lisp	tosh	15.145545	-3.929954	story	7.0	105.0	1534068683	-10.427402
21757201	ABCL – Common Lisp on the JVM	ABCL – Common Lisp on the JVM	simonpure	15.133435	-3.9551175	story	7.0	145.0	1576014343	-10.515903
39183613	The problem with CL is not that it d	The problem with CL is not that it does everything, but that it does everything with a mish-mash of inconsistent idioms, thick layers of jargon, and implementation-specific behavior in places where you wouldn't really expect, leading to a combination of implem	nerdponx	15.114569	-3.9551926	comment	7.0	19.5	1706567153	-10.372707
18193015	It’s interesting seeing lisp try and	It’s interesting seeing lisp try and make a comeback, I wonder if it’ll work.As one of the few programmers who has worked in CL commercially in this century, my general analysis is that the language has way too much rope. The code base I worked on wasn’t too c	village-idiot	15.132595	-3.9518294	comment	7.0	47.5	1539262041	-10.438495
18202863	Interim OS: minimalist OS influenced	Interim OS: minimalist OS influenced by Lisp machines and Plan 9	pmoriarty	15.120858	-3.942703	story	7.0	197.0	1539363926	-10.296002
18267897	If you are used to any reasonably mo	If you are used to any reasonably modern programming language, writing any serious Elisp is an exercise in frustration, it is hard to even find out at all how to accomplish basic things, and once you do, there are tons of pitfalls, it is a legacy platform and 	stiff	15.099466	-3.993026	comment	7.0	26.0	1540128914	-10.455072
18428683	> Even after a short while, you'll f	> Even after a short while, you'll find these brackets seem to become automatic and mentally disappearIs this really true? It's by far the most off-putting thing about Lisp dialects to me. Trying to get nested parentheses to match is extremely tedious when I h	zmmmmm	15.0664	-4.028734	comment	7.0	24.0	1541971458	-10.294295
29850694	Ask HN: What is a good resource to l	Ask HN: What is a good resource to learn Lisp in 2022?	bikramgig	15.153019	-3.9283454	story	7.0	25.0	1641641616	-10.4463215
30043224	Llisp: Lisp in Lisp	Llisp: Lisp in Lisp	stopachka	15.141534	-3.9452696	story	7.0	86.0	1642907102	-10.427848
30053293	How to make Lisp go faster than C (2	How to make Lisp go faster than C (2006) [pdf]	marinesebastian	15.137038	-3.9516127	story	7.0	84.0	1642993911	-10.440746
33194162	I’ve been meaning to read Practical 	I’ve been meaning to read Practical Common Lisp for some time. Would you recommend this even for complete beginners to Lisp?	cepher	15.153451	-3.9378467	comment	7.0	18.0	1665682774	-10.455435
33201363	Zero Feet: a proposal for a systems-	Zero Feet: a proposal for a systems-free Lisp	contrapunctus	15.13255	-3.942285	story	7.0	148.0	1665739507	-10.430402
33559198	The one about Lisp interactivity	The one about Lisp interactivity	lycopodiopsida	15.147326	-3.9375126	story	7.0	107.0	1668164073	-10.432733
33765735	Emacs Lisp shorthands as namespacing	Emacs Lisp shorthands as namespacing system	gjvc	15.116079	-3.9723282	story	7.0	102.0	1669576696	6.6500854
34005913	Common Lisp (1986)	Common Lisp (1986)	luu	15.157831	-3.9225852	story	7.0	101.0	1671139158	-10.437343
34012632	Neat, another one to add to my colle	Neat, another one to add to my collection: https://taoofmac.com/space/dev/lisp(you can find most small LISPs there, reply here if you know more to add)	rcarmo	15.119594	-3.9444356	comment	7.0	18.5	1671183470	-10.451673
34022276	I think John Carmack made a good poi	I think John Carmack made a good point on this topic which I did not think of before.He stated that albeit he spent years working with Lisps (CL and Racket mostly) or Haskell he stated that jumping on projects in those languages instantly requires you pay the 	epolanski	15.12174	-3.965617	comment	7.0	20.0	1671234445	-10.453267
34097682	Common Lisp – Myths and Legends (200	Common Lisp – Myths and Legends (2002)	susam	15.152167	-3.9295914	story	7.0	107.0	1671738504	-10.470335
26527415	This is pretty tangential, but I don	This is pretty tangential, but I don't understand why there isn't a roguelike framework available for Emacs. It seems like the perfect roguelike platform for playtesting and hacking on and would on-board a lot of new people into the Emacsen ecology without any	cheezymoogle	15.107581	-3.9543502	comment	7.0	17.5	1616290330	-10.406787
26527996	"I've been hearing the ""code is data"""	"I've been hearing the ""code is data"" mantra often, but the reason I never thought this was a desirable property is that it seems trivial to define any number of languages as their own AST.  But there is a good reason that we don't program by writing out ASTs -"	foobarian	15.111919	-3.9789014	comment	7.0	18.0	1616299007	-10.330149
26663135	Bash-LSP: A language server for Bash	Bash-LSP: A language server for Bash	ducktective	15.073028	-3.985562	story	7.0	224.0	1617296386	-10.227371
26677630	Starting Forth: An Introduction to t	Starting Forth: An Introduction to the Forth Programming Language	optimalsolver	15.020471	-3.8195076	story	7.0	96.0	1617412874	6.064783
26722907	We programmers are very picky someti	We programmers are very picky sometimes. I wonder if the Lisp would have taken off better if it had parentheses free syntax. It could have been easier to sell for uninitiated that way.I just found out that there exists Wisp [1], that basically removes the pare	Ciantic	15.105186	-3.990019	comment	7.0	21.5	1617791917	-10.338099
27007893	I've found the lack of resources to 	I've found the lack of resources to learning Elisp a challenge. I haven't finished it, but Robert J. Chassell's 'An introduction to programming in Emacs Lisp' seems to run through basic concepts but doesn't really get to the meat of actually putting everything	nanna	15.154823	-3.9270966	comment	7.0	25.5	1619889106	-10.428114
27035731	I learned programming around 1985 on	I learned programming around 1985 on one of these Casio pocket computers. It ran Basic interpreter not lisp. Incredible little machine. It looked like this: https://www.ebay.com/itm/143595147094 I probably would not be a software engineer at a top company toda	flowerlad	15.122303	-3.9480326	comment	7.0	18.0	1620122468	-10.378813
27039048	I love lisps, but isn't using a garb	I love lisps, but isn't using a garbage collected language on a micro a bit bizarre? I'm sure in lots of cases it won't matter, but then you could probably can use some cheap ARM SBC and IO pins (and a full dev environment).the Venn diagram of situations where	geokon	15.137668	-3.9392939	comment	7.0	19.5	1620144154	-10.417161
27298110	Does the Common Lisp standard need t	Does the Common Lisp standard need to be revamped? I remember seeing stuff about CL21 a while back...I keep my eyes peeled for anything Scheme on GitHub, I love reading Scheme code, and seeing R7RS march eternally forward has brought me a lot of joy over the p	adenozine	15.13031	-3.9671404	comment	7.0	27.0	1622077114	-10.600351
27307024	Ultimately it’s all data. The differ	Ultimately it’s all data. The difference between this and lisp is just a bunch of extra characters and noise in the stream.What is really the meaningful difference between this and an s-expression language? “” and {}, really. It’s a different way to serialize 	whalesalad	15.097379	-4.0022783	comment	7.0	20.5	1622143313	-10.414367
14725878	Show HN: A notebook-style Common Lis	Show HN: A notebook-style Common Lisp environment	cddadr	15.118178	-3.9486804	story	7.0	180.0	1499530101	-10.04692
15033769	Lisp is the only high-level programm	Lisp is the only high-level programming language that has no syntax. In Lisp, s-expressions are used to encode both form (data structures) and function (algorithms) of computer programs. Since code and data are seen for what they are (two sides of the same coi	idibidiart	15.097265	-4.000774	comment	7.0	26.0	1502943289	-10.394948
15057548	McCLIM: A GUI Toolkit for Common Lis	McCLIM: A GUI Toolkit for Common Lisp	tosh	15.127956	-3.9453433	story	7.0	165.0	1503218580	-10.450127
15418762	This book is destined to be a classi	"This book is destined to be a classic programming book, just as ""The C programming language"", ""The Little Schemer"" or ""Operating systems: Design and implementation"".I would really like to meet Conrad Barski and give him a great hug. And invite him a good beer."	flavio81	15.147463	-3.9328525	comment	7.0	24.5	1507312207	-10.446118
15571286	Counterpoint:The words he says are n	Counterpoint:The words he says are nice, and his depth of knowledge is profound, but he hasn't actually provided any evidence making the case that lisp is better and/or in what scenarios it is better.That this sort of rhetoric is the way almost all programmers	jackmott	15.148995	-3.937982	comment	7.0	25.0	1509131352	-10.44259
12498049	GNU Guile 2.1.4 released	GNU Guile 2.1.4 released	rekado	15.190197	-3.774607	story	7.0	113.0	1473867525	-10.235729
12498351	"Anyone here know of any ""real"" progr"	"Anyone here know of any ""real"" programs and projects using Guile? Would be curious to hear of any blazing success-stories."	s_kilk	15.185596	-3.7872274	comment	7.0	25.5	1473869216	-10.229031
35208166	CIEL is a ready-to-use collection of	CIEL is a ready-to-use collection of Lisp libraries	gjvc	15.131216	-3.9444091	story	7.0	65.0	1679139093	-10.412603
28109398	I am Ron Garret (f.k.a. Erann Gat), 	I am Ron Garret (f.k.a. Erann Gat), the author of the followup study mentioned in TFA.  I am, frankly, amazed that this work is getting the amount of attention that it is over 20 years after it was published.  I have a couple of comments about this latest crit	lisper	15.142714	-3.944224	comment	7.0	31.0	1628451024	-10.448809
22429496	Market share, maybe.Mindshare - Lisp	Market share, maybe.Mindshare - Lisp has its zealots. C++ is tolerated rather than adored, because it's more of a Katamari Damacy of stray CS than a language with a coherent focus.How many other languages have a Turing complete sublanguage built into them just	TheOtherHobbes	15.117904	-3.9733372	comment	7.0	22.0	1582767112	-7.001327
22748352	I find that Practical Common Lisp ha	"I find that Practical Common Lisp has not aged well. Maybe it's the ""practical"" part with the specific examples the author used -that are now terribly dated- that is mainly responsible, but the end result is that I no longer recommend it.My goto recommendation"	metroholografix	15.168818	-3.920461	comment	7.0	23.0	1585748258	-10.457658
22887226	The Guile in TeXmacs (2019) [pdf]	The Guile in TeXmacs (2019) [pdf]	mgubi	15.203437	-3.7484612	story	7.0	73.0	1587024627	-10.188039
34301284	Many people who read about Lisp Mach	Many people who read about Lisp Machines are not aware that the InterLisp-D world and the MIT world (CADR, LMI, Symbolics etc) had significantly different approaches to how the systems should work, so even if you have read or used the MIT-style systems you wil	gumby	15.106379	-3.9205043	comment	7.0	29.5	1673200351	-10.440306
34374033	Agree with the parent, it's a langua	Agree with the parent, it's a language worth knowing like LISP is worth knowing, but (unlike LISP) it is not a good language choice for almost all use cases in 2023 (almost all use cases are not that memory constrained any more, even embedded systems), for the	jll29	15.12571	-3.953095	comment	7.0	23.0	1673644848	-10.436661
34909975	There's a weird spike in new account	There's a weird spike in new accounts with what appear to be AI generated comments in this thread.One problem I run into when learning Common Lisp is ASDF. For some reason I can't figure out how to use it properly. For example, when I open a system definition 	147	15.138332	-3.9453752	comment	7.0	20.0	1677157458	-10.409531
34940466	My biggest problem with forth has al	My biggest problem with forth has always been the curmudgeonly-ness of the community, it's like they feel compelled to do things at exactly 180⁰ to how the rest of the computer industry works, even this webpage throws out every norm about how web pages must be	NikkiA	15.041895	-3.8095767	comment	7.0	20.5	1677359117	6.1165113
34950743	What makes people see Lisp-like lang	"What makes people see Lisp-like languages and think to themselves ""yep, this is how I want my code to look like"" is beyond me"	brap	15.129388	-3.961261	comment	7.0	26.5	1677453310	-10.427413
35077738	Sorry if I am being ignorant, but ca	Sorry if I am being ignorant, but can someone explain to me Hackernews' obsession with Lisp? I don't hear anyone talk about Lisp or use Lisp anywhere except on Hackernews.	Arbortheus	15.148782	-3.9340637	comment	7.0	21.0	1678329489	-10.464908
13626074	Lisping at JPL (2002)	Lisping at JPL (2002)	gkya	15.153891	-3.9304807	story	7.0	71.0	1486863686	-10.475629
13887097	Can anyone tell me if Guile is relev	Can anyone tell me if Guile is relevant? The list of example programs written in Guile is small. EmacsLisp and not Scheme seems to be the Gnu lisp of choice. The VM is not the fastest and not the most portable. Is there any driver behind it?	didibus	15.185673	-3.7985468	comment	7.0	32.0	1489686270	-10.247964
13933762	"""Modern C++ has shifted focus from a"	"""Modern C++ has shifted focus from an emphasis on type (objects) which accommodate algorithm to an emphasis on algorithms parametrized over types.""That may be a bug, not a feature. The Boost crowd won the battle, making extremely complex templates an essential"	Animats	15.13074	-3.9633968	comment	7.0	25.5	1490209747	-10.380407
14013797	But all those parentheses!I know it 	But all those parentheses!I know it sounds like a lame reason to dislike a language, but I've always found staring at Lisp to be so much more difficult and distracting than C-style syntax.	bluejekyll	15.105413	-3.988762	comment	7.0	18.5	1491076085	-10.3661785
14480736	He writes a seductive argument, but 	"He writes a seductive argument, but it isn't very satisfying to conclude ""this language is so powerful that it defeats itself"". Likely there are other, more mundane reasons why the theoretical purity of the lisps isn't useful in practice.For example, the endle"	roenxi	15.135802	-3.9568655	comment	7.0	18.5	1496573075	-10.423417
14511771	I know at first it looks confusing, 	I know at first it looks confusing, but the lisp syntax is pretty much the best. I can teach it to someone in 1 minute:(<function or macro name> arg1 arg2 ...)That's it. This is 100% of the syntax.If dealing with a function, the evaluation will always be argum	didibus	15.09133	-4.0207524	comment	7.0	44.5	1496893493	-10.472873
30812626	I'm as big of a Lisp fan as can be. 	I'm as big of a Lisp fan as can be. I'm a proud owner of Symbolics and TI hardware: a MicroExplorer, a MacIvory, two 3650, and two 3620. Not to mention an AlphaServer running OpenGenera.Today, we have computers that run Lisp orders of magnitude faster than any	reikonomusha	15.138184	-3.9546442	comment	7.0	47.0	1648308245	-10.39991
31054796	Using SBCL Common Lisp as a Dynamic 	Using SBCL Common Lisp as a Dynamic Library	goranmoomin	15.127542	-3.9418461	story	7.0	167.0	1650133826	-10.401489
31153702	The Mysteries of Lisp (2015)	The Mysteries of Lisp (2015)	wslh	15.148114	-3.934349	story	7.0	106.0	1650890988	-10.441354
31292715	What language constructs should a (T	What language constructs should a (Turing complete) Lisp have to be considered one? Is there a spec somewhere, a minimal conformance guide? I don’t think it’s just the parens that make the Lisp.I suppose it needs:* car and cdr* if* list* eval* quoting and quas	sph	15.123605	-3.97011	comment	7.0	21.0	1651907012	2.9333968
39575127	I said this in another thread too, b	"I said this in another thread too, but the problem with Lisp is that it's sorta bundled with Emacs, so if you want to use LISP's powerful REPL you really have no choice other than learning Emacs. Essentially, Lisp is not just a ""language""; it's a whole system "	behnamoh	15.147396	-3.9380422	comment	7.0	17.5	1709407941	-10.469004
36665498	Sounds like it’s mostly lisp. How ma	Sounds like it’s mostly lisp. How mathematically correct and proven (in the math sense) is lisp?	ianai	15.137244	-3.9503565	comment	7.0	20.0	1688992941	-10.374117
36704396	The LISP 2 Project (2017)	The LISP 2 Project (2017)	mepian	15.140368	-3.937559	story	7.0	61.0	1689215757	-10.418271
36844673	Mark Watson's Lisp books	Mark Watson's Lisp books	KRAKRISMOTT	15.148781	-3.9330292	story	7.0	235.0	1690187951	-10.433399
36888454	I have some cons!Last time I checked	I have some cons!Last time I checked on it, QuickLisp doesn't support fetching packages over anything except for plain http, with no encryption and no verification mechanism in place to detect files that may have been tampered with during transmission.I think 	chlorion	15.084668	-3.950436	comment	7.0	25.5	1690427588	-10.402907
36926227	> First, read a textbook about progr	> First, read a textbook about programming in some language, then manuals for several programming languages including Lisp. If they make natural intuitive sense to you, that indicates your mind is well-adapted towards programming.> If they don't make intuitive	Wowfunhappy	15.13602	-3.9427214	comment	7.0	22.0	1690675625	-10.456428
37021173	Lisp in Space	Lisp in Space	dargscisyhp	15.153543	-3.9268813	story	7.0	147.0	1691324291	-10.470652
37416544	I would bet that He writes Lisp. Ult	I would bet that He writes Lisp. Ultimately everything is the same. Particles. Above it: particles made of particles.	galfarragem	15.153776	-3.932008	comment	7.0	22.5	1694078658	-10.453947
37443200	It is still fascinating that lisp la	It is still fascinating that lisp languages lost to python for AI and data processing and now pretty much everything else. In a perfect world , we would be using lisp or lisp like languages for everything	anoy8888	15.134927	-3.9511795	comment	7.0	22.5	1694246327	-10.43331
24430241	Emacs Lisp is slow.  There has been 	Emacs Lisp is slow.  There has been a multi-decade effort to make Guile support ELisp, and using Guile to make Emacs more performant.Cross platform UI, with a faster Lisp, would allow Emacs to be even more special.	melling	15.154372	-3.860522	comment	7.0	27.0	1599728011	-10.31157
24652842	Compiling a Lisp to x86-64: Let expr	Compiling a Lisp to x86-64: Let expressions	todsacerdoti	15.13439	-3.9473515	story	7.0	131.0	1601569585	-10.394658
24653390	In this I agree with Paul Graham (an	In this I agree with Paul Graham (and note I don't worship the guy). When talking about some lisps, he wrote [1]:> As names, car and cdr are great: short, and just the right visual distance apart. The only argument against them is that they're not mnemonic. Bu	the_af	15.133498	-3.9560075	comment	7.0	35.5	1601571807	-10.484082
24729547	Common Lisp has had multiple dispatc	"Common Lisp has had multiple dispatch for decades. Yet another Lisp feature ""taken"" by another language - why not just start with a Lisp and improve it (e.g. Typed Racket, for performance) rather then repeatedly creating new languages and just adding a tiny pi"	fouric	15.129722	-3.9608803	comment	7.0	28.0	1602249174	-10.458097
24809293	Lisp from Nothing	Lisp from Nothing	nils-m-holm	15.152581	-3.9341269	story	7.0	182.0	1602935297	-10.4554825
25236822	Lisp Koans	Lisp Koans	phoe-krk	15.151359	-3.9301314	story	7.0	156.0	1606560203	-10.523111
25440690	Show HN: Emacs4CL: 35 line .emacs to	Show HN: Emacs4CL: 35 line .emacs to turn Emacs into Common Lisp dev environment	susam	15.102555	-3.960757	story	7.0	80.0	1608111928	-10.304007
32592492	Lisp can be “hard” real time [pdf] (	Lisp can be “hard” real time [pdf] (2000)	ducktective	15.1462755	-3.932455	story	7.0	154.0	1661428591	-10.474059
32631702	I don't buy that, when you do the sa	"I don't buy that, when you do the same in other languages you get:    for (var i = 1; i < 101; i++) {
        if (i % 15 == 0) {
          console.log(""FizzBuzz"");}
        else if (i % 3 == 0) {
          console.log(""Fizz"");}
        else if (i % 5 == 0) {
 "	Jensson	15.123323	-3.9720178	comment	7.0	18.0	1661718088	-10.372773
32763525	By the way, I always wondered why no	By the way, I always wondered why not just take a lisp, put every single thing (even an operator) on a separate line and indent every level of parentheses with a space or two (4 spaces is too much - deep nesting would go too much to the right). So there would 	qwerty456127	15.085884	-4.007555	comment	7.0	17.5	1662631921	-10.32902
32055565	Slightly off-topic, but what would b	Slightly off-topic, but what would be a good book to learn guile (scheme, lisp) for someone with solid programming background (C, ruby, php, golang but no lisp at all)? I always wanted to give it a try but not sure where to start.	_wolfie_	15.183896	-3.8331559	comment	7.0	20.5	1657544249	-10.328033
22049381	Can someone who knows more about For	"Can someone who knows more about Forth clarify this for me: what ""level"" is something like Forth? Is it higher or lower-level than something like C?The reason I'm confused is that I see Forth in a lot of areas that look like they're typically for ""C and lower"""	tombert	15.038373	-3.8118255	comment	7.0	22.5	1579037045	6.0795703
22094722	Femtolisp: A lightweight, robust, sc	Femtolisp: A lightweight, robust, scheme-like Lisp implementation	lelf	15.143596	-3.933836	story	7.0	146.0	1579474545	-10.4188795
22103363	Controversial opinion but I believe 	Controversial opinion but I believe that eventually these grammars and complex parsers will be found to have been a huge mistake for computer science. A mistake made for the sole reason of making programming languages resemble natural languages, even though th	snidane	15.102239	-3.9941297	comment	7.0	34.5	1579567954	-10.327718
23697753	LISP has an insidious parenthetical 	"LISP has an insidious parenthetical notation, and is well known to be a ""write only"" language, where nobody but the author can understand large programs written in LISP. It is avoided commercially for this reason."	magicmouse	15.109017	-3.9849076	comment	8.0	21.5	1593577772	-10.421621
19997515	I’m not too familiar with Forth, but	I’m not too familiar with Forth, but I see posts about it and variants like this on HN from time to time.High-level, what makes Forth interesting? What are it’s major strengths and weaknesses?	burlesona	15.040358	-3.8111649	comment	8.0	36.5	1558659395	6.100993
20366920	Learn you a Lisp in 0 minutes	Learn you a Lisp in 0 minutes	goranmoomin	15.170103	-3.9132047	story	8.0	32.0	1562372702	-10.485954
20505378	I'm writing a book about algorithms 	I'm writing a book about algorithms and Lisp	ska80	15.126541	-3.9315822	story	8.0	407.0	1563872512	-10.397372
20503742	The best way to kill a good Lisp is 	The best way to kill a good Lisp is to remove the parentheses.The people who complain about parens are still going to ignore your language even after you remove the parens, and then the Lispers will ignore you too. See Dylan.This debate is exasperating. It's l	dreamcompiler	15.14723	-3.943889	comment	8.0	31.0	1563845222	-10.479462
20505807	Common Lisp Style Guide	Common Lisp Style Guide	ska80	15.148878	-3.9368236	story	8.0	114.0	1563879988	-10.457433
20774358	It just breaks my heart to see Uncle	It just breaks my heart to see Uncle Bob seduced by a Java-family language right when C++ is getting increasingly fun. He suffered through the bad old days when C++ was only fast and powerful, and is now missing out on the good new days.I guess he's happy. At 	ncmncm	15.125686	-3.9608643	comment	8.0	20.5	1566531756	-10.427191
39466417	"Reading ""A Programmer's Guide to Com"	"Reading ""A Programmer's Guide to Common Lisp"""	Tomte	15.143751	-3.9375503	story	8.0	195.0	1708606822	-10.440033
36561897	A curated list of Emacs Lisp develop	A curated list of Emacs Lisp development resources	andsoitis	15.133421	-3.9449995	story	8.0	122.0	1688308892	-10.422816
37209654	Ask HN: Is Lisp Simple?	Ask HN: Is Lisp Simple?	erlich	15.113185	-3.9872475	story	8.0	7.0	1692626354	-10.403174
24642998	Lisp (Common Lisp) beats all the oth	Lisp (Common Lisp) beats all the other dynamic languages by a considerable margin. This is why I am developing Clasp - a Common Lisp implementation based on LLVM that interoperates with C++/C (https://github.com/clasp-developers/clasp.git) for scientific progr	drmeister	15.127972	-3.9607975	comment	8.0	34.5	1601495558	-10.379195
24867548	Show HN: My book, The Common Lisp Co	Show HN: My book, The Common Lisp Condition System	phoe-krk	15.130122	-3.933809	story	8.0	177.0	1603445507	-10.41878
24892881	I've never really bothered to learn 	I've never really bothered to learn lisp, but this is incredible. I get it now.That being said, I wonder how data types would work as opposed to lists. What would a language based around maps look like?	nynx	15.107477	-3.9912274	comment	8.0	23.0	1603687266	-10.40909
24893821	Can anybody recommend resources for 	"Can anybody recommend resources for the ""next level""? I get that ""code is data"", the ""unless"" example is nice, but what I don't get is: why would I want to do that?As a non-LISP developer I get by without macros and all the fancy things that are possible with "	blackbear_	15.13565	-3.9529815	comment	8.0	25.0	1603699695	-10.402318
32631578	> )))))You could stack them like thi	> )))))You could stack them like this in every language but only in Lisp do people actually do it. Lisps bad habbit of stacking all the parentheses like that is what makes it so hard to read. It is easier to write that way, but it is very hard to understand ho	Jensson	15.085549	-4.011302	comment	8.0	32.5	1661717077	-10.359557
32630675	An Intuition for Lisp Syntax (2020)	An Intuition for Lisp Syntax (2020)	cercatrova	15.124509	-3.9697878	story	8.0	175.0	1661711088	-10.430007
32058142	Uhoh.  Author of the post here.  You	Uhoh.  Author of the post here.  You know, when a post leaves its target audience, it can really make all the difference, huh?  Last week I had a post on HN's frontpage and it was aimed at a general audience, it was an introductory topic (an intro to Scheme, w	paroneayea	15.150043	-3.938007	comment	8.0	22.0	1657556332	-7.3735023
32227800	Programming languages! It is ironic 	Programming languages! It is ironic because I am a programmer and I write programs and develop software for a living. But proliferation of programming languages has made my life worse. Too many programming languages and every company has their own favorites!It	commonlisper	15.135213	-3.9529974	comment	8.0	21.0	1658770027	-10.435901
22030649	Ask HN: Why Shouldn’t I Use Lisp?	Ask HN: Why Shouldn’t I Use Lisp?	nicholas-cc	15.143196	-3.9483235	story	8.0	11.0	1578873389	-10.479719
22141407	This is what drove me away from lisp	This is what drove me away from lisp.If everyone says you have to use a plugin to auto-insert parentheses, that means computers know where they go. So why are we writing them??	Swizec	15.100338	-3.9928708	comment	8.0	24.0	1579892959	-10.3193245
13886441	> The super advantage of Lisp (inclu	> The super advantage of Lisp (including Scheme): Its format for defining data is the same as for writing code, making macros a natural part of the syntax: You can change your source code just like you’d change any other list (or rather tree) data type.I've he	branchly2	15.11837	-3.9793398	comment	8.0	25.5	1489682407	-10.409187
14419407	I'm still left with the question of 	"I'm still left with the question of ""why all the parenthesis?""While it might sound silly and reductionist, it is ostensibly the single hurdle I could never overcome when it came to lisp languages. The majority resides with the fact that it could work without t"	graphememes	15.096498	-3.9977431	comment	8.0	36.0	1495739869	-10.345882
14506108	D-Expressions: Lisp Power, Dylan Sty	D-Expressions: Lisp Power, Dylan Style (1999) [pdf]	mpweiher	15.141622	-3.9431322	story	8.0	82.0	1496841297	-10.466468
31582494	The First Lisp Compiler	The First Lisp Compiler	texdraft	15.123488	-3.957837	story	8.0	208.0	1654094620	-10.394534
31590819	Show HN: Common Lisp running nativel	Show HN: Common Lisp running natively over WebAssembly for the first time	metagame	15.133171	-3.9544258	story	8.0	97.0	1654138972	-10.418358
25541005	Dev-cpp, mingw, and allegro where my	Dev-cpp, mingw, and allegro where my gateway drug back in 2000 or so, nice to hear it’s still around.	marktangotango	15.141086	-3.9278347	comment	8.0	22.0	1608951642	-10.449428
25744186	A Brief Introduction to Forth (1993)	A Brief Introduction to Forth (1993)	Cieplak	15.039651	-3.8039465	story	8.0	62.0	1610442513	6.020168
26051255	Mezzano: Operating system written in	Mezzano: Operating system written in Common Lisp	ingve	15.114735	-3.9417276	story	8.0	224.0	1612655187	-10.281217
35608877	Lisp Is the Linux of Languages	Lisp Is the Linux of Languages	jrberendt	15.135155	-3.952837	story	8.0	19.0	1681781319	-10.361078
35853809	> The developers of Lisp give you th	> The developers of Lisp give you the full powers that they had to develop the language.So someone joining the project doesn't just have to learn Lisp, they have to learn Inhouse Lisp? And the abstractions provided by modern languages are woefully incomplete?>	dehrmann	15.142638	-3.9457598	comment	8.0	21.5	1683481685	-10.445876
36178942	Reduce vs. Fold in Common Lisp	Reduce vs. Fold in Common Lisp	billiob	15.144586	-3.9389098	story	8.0	92.0	1685815404	-10.5010805
36195584	As someone who isn't a trained progr	"As someone who isn't a trained programmer (and has no background or understanding of lisp) that looks like you took something sensible and turned it into gibberish.Is there a recommended ""intro to understanding lisp"" resource out there for someone like myself "	digdugdirk	15.147842	-3.9355571	comment	8.0	26.0	1685970015	-10.436976
36498107	Emacs4CL: A DIY kit to set up vanill	Emacs4CL: A DIY kit to set up vanilla Emacs for Common Lisp programming	susam	15.109356	-3.9550104	story	8.0	112.0	1687897112	-10.372512
28722137	I found Common Lisp to be surprising	I found Common Lisp to be surprisingly ahead of its time in many regards (debugging, repl, compilation and execution speed, metaprogramming), but unfortunately it doesn't have a large community, and it's showing its age (no standard package management, threadi	kubb	15.122808	-3.955269	comment	8.0	47.0	1633114415	-10.416723
29153440	Modern, functional Common Lisp: myth	Modern, functional Common Lisp: myths and tips (2020)	dunefox	15.140084	-3.9436796	story	8.0	110.0	1636401156	-10.467975
29612209	Lisp in Vim with Slimv or Vlime (201	Lisp in Vim with Slimv or Vlime (2019)	Tomte	15.089355	-3.957085	story	8.0	89.0	1639900297	-10.425929
34328267	That is interesting. I am wondering 	That is interesting. I am wondering though, in what areas does Lisp get used these days?What would be a good project to showcase the strengths of Lisp, versus other well-known languages?How/why do people end up learning Lisp, what is the usual route to entry?G	dockleaves	15.141253	-3.9466062	comment	8.0	20.5	1673371528	-10.4503355
34609877	History of Lisp Parentheses (2019)	History of Lisp Parentheses (2019)	sph	15.1131	-3.9825532	story	8.0	80.0	1675256948	-10.365884
34622992	> A more conventional notation was p	> A more conventional notation was planned but never happened:This is evidence that S-expressions are objectively superior to other serializations.  They are objectively simpler (this is why they were chosen in the first place -- writing a parser for sexprs is	lisper	15.093694	-4.001026	comment	8.0	39.0	1675319982	-10.339736
34862607	I still Lisp (2021)	I still Lisp (2021)	mgrayson	15.151393	-3.9302578	story	8.0	127.0	1676846360	-10.479614
19037283	Scripting in Common Lisp	Scripting in Common Lisp	mr_tyzic	15.13426	-3.9494512	story	8.0	130.0	1548870111	-10.349332
19407811	One persistent problem I see in the 	One persistent problem I see in the Common Lisp (love the language!) space is the wide availability of crapware that not only doesn't bring something new to the table but is actively damaging to the community since it's diluting the set of good libraries and m	insertcredit	15.124316	-3.9631803	comment	8.0	25.0	1552744253	-10.441868
15882908	What's the most popular Lisp in use 	What's the most popular Lisp in use today? Does it come with a static compile type checking?	xstartup	15.107037	-3.9787865	comment	8.0	27.0	1512774491	-10.264364
16419918	For a person who loves Scala, Haskel	For a person who loves Scala, Haskell and Python and have heard a lot about LISP (and even uses a DIY LISP notation to serialize some stuff in some projects) yet didnt't have time to actually study LISP yet... In what parts can LISP or Scheme be better than Ha	qwerty456127	15.120839	-3.987623	comment	8.0	23.5	1519131011	-10.471491
16448191	That said, it would be nice if lisp 	That said, it would be nice if lisp used square brackets for this instead. Easier to type on boring old US QWERTY.	VyseofArcadia	15.087802	-4.001711	comment	8.0	24.0	1519410416	-10.307673
16448438	I don't really mind the parens, but 	I don't really mind the parens, but the whole attitude feels indicative of a problem. Like - it's 2018 and people are still using 'cdr' and 'cons' as terminology and happily expecting other people to learn those words and not even feeling bad about it.If the p	ajkjk	15.141031	-3.9521031	comment	8.0	31.5	1519412379	-10.439793
16584140	Ask HN: What is the best way to get 	Ask HN: What is the best way to get started with practical LISP?	wheresvic1	15.143197	-3.9403625	story	8.0	28.0	1521029451	-10.485361
17525877	Yep, that's where I stopped. What I 	Yep, that's where I stopped. What I think is going on... Some people think predominantly in abstraction and don't really care about syntax. As Paul Graham once said, LISP doesn't really have syntax - you write parse trees directly. That may be fine for people 	phkahler	15.1053705	-3.991188	comment	8.0	30.0	1531509640	-10.312785
17706589	Quick question: why did we stop prod	Quick question: why did we stop producing lisp machines, or any other machine more closely related to Lambda calculus model of computation than a Turing machine? Is it merely cultural, or are there technical reasons as to why we stopped producing them competit	gnulinux	15.139454	-3.9451542	comment	8.0	41.0	1533650178	-10.4340925
21643606	I'm amused by the fact that when you	I'm amused by the fact that when you criticize LISP's syntax, defenders always say the syntax doesn't matter and real Lisp programmers don't even see the parenthesis. But then you look at these implementations of Lisp-like variants of existing programming lang	c3534l	15.109126	-3.9891121	comment	8.0	35.5	1574809050	-10.3647785
21722104	As a lover of Lisp, I find these sor	As a lover of Lisp, I find these sorts of initiatives really depressing and frustrating.  They seem to come up over and over again, where someone has the bright idea to make Lisp less Lisp-like, often by getting rid of all the parenthesis and making the langua	pmoriarty	15.103483	-3.9907057	comment	8.0	25.5	1575643185	-10.339179
39120734	Common Lisp has bad marketing (even 	"Common Lisp has bad marketing (even OCaml has Twitch streamers and ""influencers"" now), and bad support for general editors, both of which make it a non-starter for most curious people who have an afternoon to try something. But behind all that is magnificent a"	reikonomusha	15.126329	-3.9626145	comment	8.0	64.0	1706120392	-10.454253
39216904	Compiling a Lisp (2020)	Compiling a Lisp (2020)	swatson741	15.133747	-3.9457695	story	8.0	114.0	1706801007	-10.419765
39347453	K Isn't Lisp (2004)	K Isn't Lisp (2004)	RodgerTheGreat	15.148426	-3.9386303	story	8.0	51.0	1707758012	-10.453879
18267285	Evolution of Emacs Lisp [pdf]	Evolution of Emacs Lisp [pdf]	tarsius	15.148275	-3.9339504	story	8.0	194.0	1540114063	-10.441261
18518807	Lisp Machine Inc. K-machine (2001)	Lisp Machine Inc. K-machine (2001)	mepian	15.146879	-3.9351153	story	8.0	114.0	1543005815	-10.438779
18530260	Compiler basics: Lisp to Assembly	Compiler basics: Lisp to Assembly	eatonphil	15.093483	-3.977609	story	8.0	242.0	1543194850	-10.359965
18882335	uLisp: Lisp for microcontrollers	uLisp: Lisp for microcontrollers	tosh	15.131677	-3.9419513	story	8.0	97.0	1547201806	-10.42836
29842271	"Not in Lisp! (""foo"" ""bar"") and (""foo"	"Not in Lisp! (""foo"" ""bar"") and (""foobar"") are lists of length 2 and 1, respectively.(Python copies some bad ideas from C. Another one is having to import everything you use. It seems that since Python is written in C, its designer took it for granted that ther"	kazinator	15.107925	-3.9897661	comment	8.0	34.5	1641578081	-10.377837
29987965	GOAL / games written in Lisp have be	GOAL / games written in Lisp have been a lifelong obsession. I used to search for hours for any scrap of information about the language. I would have traded a lot for this repo when I was 19.Thank you to the authors for fulfilling a teenage dream. Please consi	sillysaurusx	15.145884	-3.9210455	comment	8.0	28.5	1642550321	-10.449402
30173580	you don't need to run lisp in a larg	you don't need to run lisp in a large team. if you adopt lisp you only need 10 programmers to do what 100 will do in another language :)	medo-bear	15.137401	-3.9507105	comment	8.0	80.5	1643774803	-10.473337
30174557	We've also been using Lisp in produc	We've also been using Lisp in production. It has gone wonderfully, and has allowed some of the most simultaneously maintainable, resilient, and efficient code I've seen in my career. It's also attractive differentiator to some programmers who don't want to dro	reikonomusha	15.134408	-3.953897	comment	8.0	31.5	1643784269	-10.468088
30543581	A Modern Lisp Machine from Scratch (	A Modern Lisp Machine from Scratch (2018)	hugo-abreu	15.138071	-3.9392781	story	8.0	64.0	1646327071	-10.4169235
12552513	Anyone using Guile for their project	Anyone using Guile for their projects? Any feedback on their experience with it?I only know Scheme from reading SICP and enjoyed Clojure but hated the java/JVM part of it. I currently use Erlang for when I need concurrency/performant backends. But I'm not tota	dmix	15.187866	-3.788448	comment	8.0	20.0	1474494048	-10.20296
12659167	I genuinely would love to see apps w	I genuinely would love to see apps written in lisp. It's all Javascript nowadays, with about 5-8 frameworks dominating this sad landscape.Imagine how refreshing it'd be to see Lisp driving webapps, front and back-end.Not even saying that should be the one size	keyle	15.11243	-3.9717965	comment	8.0	26.5	1475831156	-10.435223
13137393	Even today, Common Lisp is still one	Even today, Common Lisp is still one of the best choices for many applications.Then why don't people build amazing and popular things with it? I don't mean one or two people build one or two things, but lots of people building lots of things.Nobody uses it, bu	jodrellblank	15.132342	-3.962	comment	8.0	34.0	1481270443	-10.483209
13193877	This great idea of Lisp (the simple 	This great idea of Lisp (the simple syntax of function calls in round brackets) isn't much different than a good macro assembler even back in the 1960's. The only major difference was that more than 1 function could be defined in 1 source code line. (I think t	clarkd99	15.107985	-3.9776936	comment	8.0	34.5	1481902155	-10.386226
27623198	I think Lisp is wonderful, and I wou	I think Lisp is wonderful, and I would love to develop games using Lisp. However, I was under the impression that, by all accounts, developing games in Lisp is completely unrealistic due to the garbage collector.I'm not familiar with Common Lisp, but in Racket	vladharbuz	15.233859	-3.825335	comment	8.0	27.0	1624565666	13.591973
27805294	From the article: “My heart was brok	From the article: “My heart was broken because Common Lisp is such a fine fine language and it is a joy to work in and hardly anyone uses it in industry. The industry has a lot of code in Java even when it takes much less time to write code in Lisp. What happe	linguae	15.12502	-3.9742115	comment	8.0	53.0	1626045242	-10.429335
12465298	Tiny Lisp Computer	Tiny Lisp Computer	jabits	15.136475	-3.93879	story	8.0	153.0	1473448816	-10.405104
28363230	Ask HN: Why Should I Learn Lisp?	Ask HN: Why Should I Learn Lisp?	testing_1_2_3_4	15.150349	-3.9355838	story	8.0	8.0	1630375964	-10.4601755
22459871	Why don’t lisp fans use older lisp i	Why don’t lisp fans use older lisp implementations like Common Lisp or scheme? Is it just a lack of libraries and frameworks?	gentleman11	15.140459	-3.9489965	comment	8.0	36.5	1583102135	-10.396204
22643760	Best place/resource to learn Lisp?	Best place/resource to learn Lisp?	____Sash---701_	15.154365	-3.929101	comment	8.0	21.0	1584757944	-10.447973
22770163	There are too many incomplete lisp-o	There are too many incomplete lisp-on-js solutions. No, CLJS doesn't count. It would be so awesome if one ever made it to actual usable maturity.Is it too hard?  Is there something that makes everyone give up?  Or is lisp just too academic for most people to c	hashkb	15.194241	-3.901686	comment	8.0	33.5	1585927521	-10.585022
23038054	I'll admit I don't think I've really	I'll admit I don't think I've really noticed the presence of lisp online other than when people want to talk about lisp. Can someone share some practical examples of where lisp is being used?  Maybe a popular open source project I never realised was written in	Waterluvian	15.144016	-3.9435892	comment	8.0	26.5	1588294477	-10.453478
23164938	Lisp languages should be great for e	Lisp languages should be great for embedding into games to implement game logic, instead of more straightforward solutions such as embedding Lua. I've always wanted to explore this for my iOS side-project game, which now uses an event-based system inspired by 	w0utert	15.127395	-3.9633517	comment	8.0	25.5	1589360402	-10.48952
23211273	Ronin – A Lisp-based image processin	Ronin – A Lisp-based image processing tool	Gormisdomai	15.132471	-3.9402604	story	8.0	366.0	1589715215	-10.432091
23217094	State of Emacs Lisp on Guile	State of Emacs Lisp on Guile	todsacerdoti	15.210132	-3.773594	story	8.0	93.0	1589763687	-10.303691
23233262	I think Reddit's decision to move fr	I think Reddit's decision to move from Common Lisp to Python is interesting and their reasoning (ecosystem) is still valid 15 years later.The historical timeline is especially interesting because Reddit's cofounders Steve Huffman & Aaron Swartz were alumni of 	jasode	15.134682	-3.9497364	comment	8.0	48.0	1589883666	-10.315621
23234145	C has macros. They are nothing like 	C has macros. They are nothing like lisp macros. Please cite a non-lisp language with macros a powerful as lisp's.	dreamcompiler	15.100859	-3.989574	comment	8.0	21.5	1589891766	-10.291732
33176482	Both forth and lisp seem similar to 	"Both forth and lisp seem similar to me. They have a ""three sentences to explain how everything works"" vibe. Forth uses a stack and so ""reverses"" the order of things. Lisp uses trees and so ""indents"" everything. I wonder if there is some kind of underlying rule"	JohnDeHope	15.093533	-3.9201972	comment	8.0	22.5	1665580604	-10.396375
33455274	TeX and Literate Programming (and Li	"TeX and Literate Programming (and Lisp) are my fundamental, day-to-day tools.Code it, explain it, generate a Literate PDF containing the code.The programming cycle is simple. Write the code in a latex block. Run make.
The makefile extracts the code from the la"	daly	15.109251	-3.9573665	comment	8.0	22.0	1667500077	5.44331
33575863	He's overlooking an incredibly impor	He's overlooking an incredibly important factor:Java and C++ had capable, even enterprise quality free compilers at a time when Common Lisp environments were typically either hideously expensive or poorly supported or both.You could grab Sun's JDK for free, or	dleslie	15.118929	-3.9641094	comment	8.0	39.0	1668279190	-10.388916
34014909	Can someone explain me why is Lisp s	Can someone explain me why is Lisp still use today ?	ForcedPush	15.145097	-3.9411893	comment	8.0	25.0	1671201339	-10.469943
26632429	Lisp-stat: An environment for Statis	Lisp-stat: An environment for Statistical Computing	sieste	15.139772	-3.939479	story	8.0	101.0	1617094583	-10.465647
26710858	Why do so many HN'ers like lisp?It's	Why do so many HN'ers like lisp?It's just... archaic.	antiquark	15.148255	-3.9423554	comment	8.0	21.0	1617711261	-10.455201
27041008	Forth – The Early Years (1991)	Forth – The Early Years (1991)	susam	15.023718	-3.7829084	story	8.0	68.0	1620153081	5.916465
27480194	FORTH is a fun little class of langu	FORTH is a fun little class of languages. These are easy to implement; in a few KB you can have a working development environment, with a screen editor, debugger and whatnot.In my experience, FORTH doesn't really scale to big projects, or things that need a lo	kabdib	15.031887	-3.8217483	comment	8.0	27.5	1623458109	6.1064487
38273510	Note to self: learn a lisp. Lisp peo	Note to self: learn a lisp. Lisp people appear to be having more fun than the rest of us.	__MatrixMan__	15.147605	-3.9412513	comment	8.0	32.5	1700024535	-10.4990015
38363110	Lisp is amazing. Interesting why Pyt	Lisp is amazing. Interesting why Python won the race to become the language of choice for the neural networks wave of AI.	borissk	15.142686	-3.9507315	comment	8.0	30.0	1700571826	-10.428638
38569129	TXR Lisp	TXR Lisp	tosh	15.160812	-3.899877	story	8.0	152.0	1702044126	9.209319
15057773	The home page looks like a tombstone	The home page looks like a tombstone of Common Lisp with a bunch of epitaphs on it.On the other hand, the spirit of Lisp has successfully taken over the world. The modern Lisp is called JavaScript.I am perfectly aware of all the differences between Lisp and Ja	dmytrish	15.100281	-3.9945095	comment	8.0	30.0	1503224122	-10.453802
15185827	Lisp Machine Manual (1984)	Lisp Machine Manual (1984)	sillysaurus3	15.147951	-3.9318972	story	8.0	142.0	1504721521	-10.430158
15231748	I am curious why is hackernews alway	I am curious why is hackernews always so happy and obsessed with lisp, there is almost daily a lisp post on the frontpage. I dont really care/mind but I am just curious as why people love lisp so much. The only thing that I notice about Lisp are the bracket jo	Sjenk	15.149736	-3.9365845	comment	8.0	27.0	1505246368	-10.471845
23592596	Lisp is large, important, and also n	Lisp is large, important, and also not statically typed. It's worked out ok for Lisp programmers. JS itself isn't strongly typed and is the most successful and important language in the world (probably in the history of programming), so that's two game-changer	mimixco	15.055258	-4.0225563	comment	9.0	47.0	1592754089	-10.439256
19979545	Lisp in Web-Based Applications (2001	Lisp in Web-Based Applications (2001)	tosh	15.1225605	-3.9581935	story	9.0	92.0	1558519288	-10.441834
20210557	There are still people explaining to	There are still people explaining to me why you need a 'system programming language' like C or Rust for certain tasks.  Meanwhile, I'm playing a game of Quake on Mezzano, where everything from drivers to the actual videogame is written in pure Common Lisp.In c	heisig	15.122582	-3.964162	comment	9.0	37.5	1560844628	-10.441586
20374467	My Lisp Experiences and the Developm	My Lisp Experiences and the Development of GNU Emacs (2002)	tosh	15.118625	-3.954877	story	9.0	177.0	1562495769	-10.40841
20513056	> The best we can do is to recover f	> The best we can do is to recover from a failure and maybe somehow retry what we were doing, but we can’t magically “go back” to where we were, and do something different. But with algebraic effects, we can.This is literally Common Lisp's condition system whi	phoe-krk	15.120574	-3.969505	comment	9.0	29.0	1563953807	-10.299726
20814511	Running Lisp in Production (2015)	Running Lisp in Production (2015)	wglb	15.136833	-3.9439125	story	9.0	167.0	1566941009	6.412396
13967401	Make your own Lisp	Make your own Lisp	macco	15.145186	-3.9285429	story	9.0	187.0	1490620433	-10.478745
14333157	Lisp, Smalltalk, and the Power of Sy	Lisp, Smalltalk, and the Power of Symmetry (2014)	saturnian	15.143429	-3.9416213	story	9.0	136.0	1494711516	-10.4229355
16078047	I don't understand, what are lisp/sc	I don't understand, what are lisp/scheme/racket/haskell being used for? I mean how are those languages good from a software engineering point of view? From a project management point of view?Is it possible to hear bad things about those languages? Why aren't t	jokoon	15.146527	-3.9428527	comment	9.0	31.0	1515152970	-10.490313
16584612	> a very large hammer for every prob	> a very large hammer for every problem you might find, be it list comprehensions or generators or whatever OO voodoo you can come up with.List comprehensions, to me, are what makes Python a productive (or the most productive) prototyping language. It allows m	jstimpfle	15.110903	-3.986203	comment	9.0	27.0	1521034489	-10.388878
16861141	I like lisp as a programming languag	I like lisp as a programming language.But, this article gives one of the reasons for avoiding its use in a high performance production environment. Provisioning a VM with over 25GB RAM for an application which requires about 4GB of it is a huge waste of resour	sacheendra	15.145139	-3.9389331	comment	9.0	41.0	1523990876	-10.430187
16993330	Lisp, Jazz, Aikido	Lisp, Jazz, Aikido	mpweiher	15.152595	-3.9257162	story	9.0	114.0	1525427265	-10.47409
17117046	Okay, I certainly don't want to star	Okay, I certainly don't want to start a language war, so let me be kind. There is one legitimate reason to switch from Lisp to Python: The number of packages and extensions. Python really has more than just batteries included, it's probably the language with t	jonathanstrange	15.122328	-3.9646764	comment	9.0	36.5	1526893069	-10.336455
17133557	Lisp in Jak and Daxter	Lisp in Jak and Daxter	tosh	15.131571	-3.9471946	story	9.0	120.0	1527078699	-10.378822
17653818	Maybe I came to SICP too late in lif	Maybe I came to SICP too late in life, but I've always struggled to get the hype. It seems so... Basic. Making a linked list is trivial in lisp. Lisp itself is trivial. Why does everyone care about this book so much?	3pt14159	15.148012	-3.9362378	comment	9.0	23.0	1533050141	-10.557752
21735148	Lisp Programming in Vim with Slimv o	Lisp Programming in Vim with Slimv or Vlime	gitrebase	15.0632515	-3.9574354	story	9.0	85.0	1575799022	-10.397121
18702178	Lessons Learned Implementing Common 	Lessons Learned Implementing Common Lisp with LLVM [video]	StreamBright	15.136508	-3.9430985	story	9.0	152.0	1545080441	-10.399011
18875475	Lisp Badge – Self-contained ATmega12	Lisp Badge – Self-contained ATmega1284 Lisp computer	lispm	15.14222	-3.9335334	story	9.0	129.0	1547139689	-10.531059
29801769	We Hate Lisp	We Hate Lisp	math-dev	15.184741	-3.904487	story	9.0	25.0	1641335862	-10.426247
29947329	On Pitman's “Special forms in Lisp” 	On Pitman's “Special forms in Lisp” (2011)	HexDecOctBin	15.15201	-3.933603	story	9.0	56.0	1642262342	-10.416936
29987849	As far as I know, GOAL/GOOL remains 	As far as I know, GOAL/GOOL remains the only time Lisp has ever successfully been used in a video game. Given Lisp's near-mythic status of productivity, it at least piques my interest to see how ND might have used it creatively in the codebase.That and I've al	jimbob45	15.151471	-3.9348407	comment	9.0	27.0	1642549634	-1.7319385
30443949	(How to Write a (Lisp) Interpreter (	(How to Write a (Lisp) Interpreter (In Python)) (2010)	ivanvas	15.0977745	-3.990963	story	9.0	66.0	1645638497	-10.082639
12703498	Symbolics Lisp Machine Museum	Symbolics Lisp Machine Museum	rbc	15.131489	-3.9498742	story	9.0	126.0	1476388260	-10.317351
13194124	This article has many misstatements 	This article has many misstatements in its first half.> John McCarthy wrote 6 easy things in machine code, then combined them to make a programming language.John McCarthy didn't implement Lisp in machine code. Steve Russell did. Implementing Lisp properly in m	rntz	15.124128	-3.96969	comment	9.0	44.5	1481904039	-10.386949
28039094	No way. The ecosystem is just not th	No way. The ecosystem is just not there.All the libraries - both open source and commercial that do a million things - do not exist in the Lisp ecosystem.Even in 2000	eric4smith	15.133887	-3.9477196	comment	9.0	61.0	1627922724	-10.472196
28108806	Revisiting Prechelt’s paper comparin	Revisiting Prechelt’s paper comparing Java, Lisp, C/C++ and scripting languages	mahmoudimus	15.1207	-3.9663317	story	9.0	118.0	1628446748	-10.452472
33162318	They Called It LISP for a Reason: Li	They Called It LISP for a Reason: List Processing (2005)	susam	15.122267	-3.9604454	story	9.0	115.0	1665489763	-10.484679
33575225	Ok. What’s a good lisp like language	Ok. What’s a good lisp like language without the embedded parentheses? I know it’s subjective, but I just can’t get past them.	stevenally	15.125857	-3.961144	comment	9.0	23.5	1668274719	-10.360943
33739996	I want to get my head wrapped around	I want to get my head wrapped around lisp but I just see code like this and my head hurts	gigatexal	15.14597	-3.940228	comment	9.0	30.5	1669360018	-10.430249
26720403	Lisp as an alternative to Java (2000	Lisp as an alternative to Java (2000)	azhenley	15.121958	-3.9685314	story	9.0	156.0	1617767357	-10.493249
26830411	Lisp and the Web: Creating Web Apps 	Lisp and the Web: Creating Web Apps Through Lisp and GCE	abhinav22	15.124527	-3.9563434	story	9.0	162.0	1618555470	-10.464977
26924344	Mal – Make a Lisp	Mal – Make a Lisp	AlexeyBrin	15.14419	-3.928885	story	9.0	170.0	1619266511	-10.435445
14795992	Back to the Future: Lisp as a Base f	Back to the Future: Lisp as a Base for a Statistical Computing System [pdf]	tosh	15.141089	-3.9389565	story	9.0	98.0	1500381184	-10.465967
14915425	I'm a Lisper (and Pythoner) and stro	I'm a Lisper (and Pythoner) and strongly agree, the first one is not readable. I would say it's gross. It boggles my mind that Lispers haven't taken that problem seriously. I have taken it very seriously and have been working on it for years.I just started pub	breck	15.095122	-4.000628	comment	9.0	40.0	1501714605	-10.381538
15070137	Answers from 2017 Common Lisp expert	Answers from 2017 Common Lisp experts	drdre2001	15.149016	-3.9370503	story	9.0	104.0	1503382207	-10.456298
15355979	A Brief History of Lisp Machines (20	A Brief History of Lisp Machines (2008)	type0	15.144419	-3.9364462	story	9.0	106.0	1506593364	8.285071
14662380	As someone currently learning CL, I 	As someone currently learning CL, I think part of the reason it doesn't have widr adoption is that there is a huge number of features.Consider a language like Python. Aggressive duck typing means consistent syntax for different data structures and types. Stuff	nerdponx	15.129808	-3.9621806	comment	9.0	43.5	1498736410	-10.451272
30801856	If Lisp is do efficient for developm	If Lisp is do efficient for development, why are there essentially no commercial products that use it?	stevenally	15.147419	-3.9401634	comment	9.0	36.5	1648214737	-10.444671
31179701	I’ve never did anything serious with	I’ve never did anything serious with Common Lisp, but my light experience on it was that- the idea that almost all language constructs are user-implementable with macros is quite impressive (but I don’t buy the argument that “real” macros are only able in s-ex	pcr910303	15.126754	-3.9667096	comment	9.0	38.5	1651066605	-10.545873
31234338	Lisp in Space	Lisp in Space	todsacerdoti	15.153731	-3.9313715	story	9.0	190.0	1651495030	-10.434944
31372204	The only thing anyone ever seems to 	The only thing anyone ever seems to do with forths is write another forth. Why is this?Unrelatedly (perhaps) I tried writing some basic software in forth and it was pretty horrific. Even something as simple as representing a variable length array feels like fi	bowsamic	15.031372	-3.814054	comment	9.0	28.0	1652473714	6.1143155
31554141	> There's something magically expres	> There's something magically expressive about S-expressions and processing them.A downside I see with S-expressions – you often end up with something like (FOO BAR BAZ), where FOO identifies the type of thing, and BAR and BAZ are parameters/slots/etc – but yo	skissane	15.06014	-4.039456	comment	9.0	28.5	1653869176	-10.501807
25495997	Every now and then I see posts like 	Every now and then I see posts like this and yet, the Lisp languages never took off after the 2000s. I understand that there might be some value to learning Lisp, but much of the things that made Lisp attractive before are already available in Python, Java, et	behnamoh	15.139018	-3.949518	comment	9.0	25.5	1608566121	-10.460362
26024776	McCLIM – GUI toolkit for Common Lisp	McCLIM – GUI toolkit for Common Lisp	lelf	15.131097	-3.9424567	story	9.0	145.0	1612441648	-10.423725
26053567	What is the reason why Lisp allows y	What is the reason why Lisp allows you to use the hyphen for an identifier name?This overloads the subtraction operator. And it makes the code very confusing to read.And plus, Lisp also uses the hyphen as the subtraction operator.	blackrock	15.110647	-3.9809492	comment	9.0	29.0	1612686493	-10.37308
26165090	This is great! Forth is such an inte	This is great! Forth is such an interesting language.Does anyone know of uses in industry?	Munksgaard	15.041292	-3.808156	comment	9.0	23.5	1613560017	6.1418967
26298324	- I don't get lisp's (lisp-2) dynami	- I don't get lisp's (lisp-2) dynamic scoping (a big reason I haven't switched from vim to emacs). I'm much more comfortable with the lexical scoping of scheme (lisp-1).- I don't get big schemes (like R6RS). For a while, I thought of my own implementation of R	yudlejoza	15.1169	-3.9794233	comment	9.0	27.0	1614557077	-10.658222
35630361	This post persuaded me to not take m	This post persuaded me to not take much of a look at Janet. This is also related to why I think that Lisps haven't become the most widely-used programming languages.Lisp enthusiasts like to point out the power of macros, and macros are the raison d'être for Li	kerkeslager	15.108003	-3.9868011	comment	9.0	37.5	1681922755	-10.389236
29031580	Animated guide to Symex: Emacs struc	Animated guide to Symex: Emacs structural editing with Lisp	inetsee	15.116298	-3.9564168	story	9.0	145.0	1635453405	-10.365896
29234170	Ergonomics of the Symbolics Lisp Mac	Ergonomics of the Symbolics Lisp Machine (2014)	gjvc	15.135321	-3.942316	story	9.0	94.0	1637017812	-10.329249
34131310	What help is needed for Lisp communi	What help is needed for Lisp community in order to make Lisp more popular?	eimrine	15.132196	-3.953475	story	9.0	6.0	1672002658	-10.406401
34225742	Ask HN: If you were designing Common	Ask HN: If you were designing Common Lisp today, what would you change?	Decabytes	15.151868	-3.935204	story	9.0	18.0	1672705360	-10.465951
34909405	I always like seeing Common Lisp lin	I always like seeing Common Lisp links, but personally I was a bit put off by the very strong anti-commercial comments about LispWorks and Franz.I had a business idea requiring Common Lisp a few years ago and I purchased a LispWorks Professional license. Small	mark_l_watson	15.123492	-3.930881	comment	9.0	57.5	1677154008	-5.7342577
35094037	To me, the most interesting aspect o	To me, the most interesting aspect of S-expression programming languages is that they are very well suited for other editors than the text editor. I know of a number of experiments in this regard but I have yet to see anything quite as ground breaking as what 	kristiandupont	15.089639	-4.0063267	comment	9.0	33.0	1678454680	-10.389102
39666370	> The beauty of Scheme is that the f	"> The beauty of Scheme is that the full language only needs 5 keywords and 8 syntactic forms.Is there a learning resource that covers exactly this for those wanting to write software in lisp in 2024?As ""first principle thinkers"" in some ways all hackers crave "	kingkongjaffa	15.139478	-3.9462104	comment	9.0	23.5	1710152267	-10.479525
39670350	This might sound crazy or stupid but	This might sound crazy or stupid but I really want to know if there is some Lisp with manual memory management? I love Lisp syntax. People complain about the parentheses but for me they are a blessing. I like how extremely uniform and regular they look.But all	mapreduce	15.110699	-3.980255	comment	9.0	23.0	1710175049	-10.38078
37031852	I've been circling around lisp for a	I've been circling around lisp for a couple of years. I'm starting in a month, I'll spend several hours a day. I still don't know what language I want to learn.I was drawn to Clojure because it looked like a lisp for getting stuff done. But a few things put me	psd1	15.147875	-4.0024014	comment	9.0	23.5	1691397056	-10.681036
37442649	Embeddable Common Lisp 23.9.9	Embeddable Common Lisp 23.9.9	jackdaniel	15.1469	-3.9373515	story	9.0	94.0	1694238963	-10.418747
24716635	Every once in a while, there's a pos	Every once in a while, there's a post on front page HN about Haskell and/or Lisp. Sometimes these posts get a lot of traction, but what confuses me is despite the apparent popularity of these languages among developers, still they are seldom used in serious so	behnamoh	15.124812	-3.9765	comment	9.0	25.0	1602140676	-10.467495
25322596	Sugar – a typed lispy language targe	Sugar – a typed lispy language targeting webasm/wat	marksmillibend	15.12674	-3.9542294	story	9.0	84.0	1607250986	-10.4387865
32700219	I just wish we could build and run i	I just wish we could build and run it on macOS 12.  The bootstrapping compiler required (sbcl-1.2.11) is nonfunctional there.	tempodox	15.125532	-3.9396238	comment	9.0	26.0	1662197725	-10.394274
32084556	One of the best essays of my youth. 	One of the best essays of my youth. Launched a decade long quest to understand and use lisp. The most surprising thing is there people still dismiss it. Irony of ironies is that the dismissal comes on a site powered by lisp. Indeed, HN wouldn’t have been possi	sillysaurusx	15.17386	-3.9170668	comment	9.0	30.0	1657728085	-10.463705
32164102	Lisp.py	Lisp.py	memorable	15.110391	-3.984472	story	9.0	85.0	1658315822	-1.0086944
32458189	Can anyone recommend a source for se	Can anyone recommend a source for setting up an environment in Linux to run the code in this book?Do I need to learn eMacs to get close to a “modern lisp” programming environment?	wodenokoto	15.123791	-3.9515042	comment	9.0	29.0	1660474082	-10.37734
22062799	The Roots of Lisp (2001)	The Roots of Lisp (2001)	afurrysolver	15.155407	-3.9265943	story	9.0	124.0	1579165328	-10.461918
22083507	ANSI Common Lisp (1995)	ANSI Common Lisp (1995)	todsacerdoti	15.16752	-3.911919	story	9.0	129.0	1579341679	-10.442811
22085232	Why is lisp still so uncommon today 	Why is lisp still so uncommon today as a practical, business-needs language? Everyone I know who uses it loves it, but it’s virtually nonexistent in today’s enterprise.	3fe9a03ccd14ca5	15.139287	-3.9515584	comment	9.0	27.5	1579364585	-10.452992
22117241	uLisp – ARM Assembler in Lisp	uLisp – ARM Assembler in Lisp	eggy	15.080467	-3.9903271	story	9.0	172.0	1579698942	-10.355873
22118434	I asked a question on HN but didn't 	I asked a question on HN but didn't get any answers - this might be an easier forum to get one.I'm working on a hobbyist rocketry project where I'm helping build the flight computer - basically an Arduino Nano connected to modules like a GPS system, accelerato	exdsq	15.157931	-3.9272704	comment	9.0	29.5	1579707697	-10.610505
20012953	MakerLisp: Embedded Lisp Machine	MakerLisp: Embedded Lisp Machine	tosh	15.13563	-3.9436443	story	10.0	130.0	1558842329	-10.4104595
20732238	Getting Started with Lisp in 2019	Getting Started with Lisp in 2019	wheresvic3	15.145113	-3.9419336	story	10.0	125.0	1566156005	-10.46423
13906120	It is, I think, going to be very dif	It is, I think, going to be very difficult to enjoy writing code in a less powerful language when you are exposed to languages that hold awesome power.In fact, this has been the basis for much writing on Lisp too. Paul Graham has written entire essays along th	jwdunne	15.13105	-3.9502814	comment	10.0	107.0	1489915928	-10.354132
14392519	Little Lisp interpreter	Little Lisp interpreter	astdb	15.127054	-3.9601269	story	10.0	117.0	1495451269	-10.348056
31248085	I encourage people to try out Common	I encourage people to try out Common Lisp because, unlike with Hy, you will get: speed, ability to build binaries, truly interactive image-based development (yes, more interactive than ipython), more static type checks, more language features (no closures in H	vindarel	15.078169	-4.012661	comment	10.0	47.0	1651584790	-10.068695
31585480	> In LISP 1.5, function definitions 	"> In LISP 1.5, function definitions were stored on the property list of the function's name...The fact that this was once the norm but has since been done away with saddens me. I've always been fascinated with ""live environments"" but felt they only went half w"	dmux	15.10124	-3.9760208	comment	10.0	30.0	1654105830	-10.377935
25559291	Wisp: A light Lisp written in C++	Wisp: A light Lisp written in C++	azhenley	15.124273	-3.9616482	story	10.0	140.0	1609164902	-10.368226
25886325	It warms my heart to know that astro	It warms my heart to know that astronauts are using LISP in space because they want to. On the other hand, I wonder how practical it is. I've more or less converted from LISPy langs to Python for real work because I was tired of re-inventing wheels and wanted 	lopatin	15.132646	-3.972596	comment	10.0	37.0	1611437579	-10.428533
26059023	A Lisp REPL as my main shell	A Lisp REPL as my main shell	qazwse_	15.124623	-3.9565685	story	10.0	149.0	1612738762	-10.391048
36016649	Symbolics Lisp Machines Graphics Dem	Symbolics Lisp Machines Graphics Demo (1990) [video]	mepian	15.12881	-3.9502308	story	10.0	148.0	1684626526	-10.320498
34181109	I regularly see Forth related materi	I regularly see Forth related material appear on HN. I love a lot of the concepts that get brought up in these article’s comments, particularly those that discuss the often small and personalized implementations of Forth that appear ubiquitous among those inte	throwaway17_17	15.03677	-3.8122988	comment	10.0	38.5	1672367755	6.044131
34415889	Common Lisp and Music Composition	Common Lisp and Music Composition	wglb	15.140084	-3.9239788	story	10.0	131.0	1673978066	-10.46944
34594675	Typed Lisp, A Primer (2019)	Typed Lisp, A Primer (2019)	tagfowufe	15.146348	-3.9389408	story	10.0	77.0	1675171240	-10.402775
36887555	This sounds so amazing, why is Commo	This sounds so amazing, why is Common Lisp not the most popular language out there? (asking as someone who almost never writes code)	peanutz454	15.135385	-3.9600742	comment	10.0	46.0	1690420306	-10.441684
37400398	Writing Small CLI Programs in Common	Writing Small CLI Programs in Common Lisp (2021)	mooreds	15.123139	-3.9544687	story	10.0	144.0	1693964412	-10.344421
37402539	Awesome, but there is kind of a deal	Awesome, but there is kind of a deal-breaker here:AFAIK, there isn't an official and hassle-free way to generate a statically-compiled binary with SBCL the way Go and Rust can. Like you develop on a debian 12 system, then move the binary to your debian 11 serv	ducktective	15.125381	-3.9465253	comment	10.0	36.0	1693988231	-10.374928
24893416	This is maybe the best introductions	This is maybe the best introductions to Lisp i have seen, especially for a js dev like me it could hardly get more approachable and convincing.I could not help but thinking at the end, this is really awesome but s-expressions are kind of hard to read and reaso	jFriedensreich	15.091057	-3.9974852	comment	10.0	58.5	1603694808	-10.344161
38850961	A lightweight Lisp interpreter in Ma	A lightweight Lisp interpreter in Malbolge	noteness	15.120228	-3.952769	story	10.0	114.0	1704258482	-10.355834
22141580	> I have to admit, that at the begin	> I have to admit, that at the beginning using brackets was not easy for me. Once I’ve realized that the brackets are just on the other side of the function name, everything was simple and I could code very fast.A question to fellow Lispers: is there a good re	kotutku	15.091355	-4.0042667	comment	10.0	33.5	1579893979	-10.357298
19121443	LispOS: Specification of a Lisp oper	LispOS: Specification of a Lisp operating system (2013) [pdf]	molteanu	15.127978	-3.942785	story	10.0	140.0	1549703280	-10.385593
19270886	Let’s LISP like it’s 1959 [video]	Let’s LISP like it’s 1959 [video]	DyslexicAtheist	15.156069	-3.930836	story	10.0	183.0	1551357205	-10.472555
19407548	Lem: A Common Lisp editor/IDE with h	Lem: A Common Lisp editor/IDE with high expansibility	lelf	15.104029	-3.9620602	story	10.0	159.0	1552740553	-10.379829
17037083	Lisp is quite popular at my current 	Lisp is quite popular at my current workplace. A few popular open source projects published by our organization have been written in Clojure (a dialect of Lisp that runs on JVM and CLR). A few domain specific languages used internally in our organization are a	susam	15.1313715	-3.9638631	comment	10.0	88.5	1525938763	-10.432974
17959441	Its not exactly equivalent, but havi	Its not exactly equivalent, but having spent the last month debugging a nightmare of C++ template meta programming mixed with a lot of C macros...  I think things like this can be nice if they’re applied tastefully but I wouldn’t trust 99% of programmers to be	overgard	15.110862	-3.988906	comment	10.0	41.0	1536671859	-10.388635
18253596	This Old Lisp	This Old Lisp	lispm	15.157952	-3.93015	story	10.0	238.0	1539910823	-10.477134
18518988	I wonder if a kickstarter to create 	I wonder if a kickstarter to create a new Lisp Machine could work.I envision something like a Raspberry Pi, but with the hardware designed to run Lisp, and taking inspiration from the original Lisp Machines.	pmoriarty	15.141767	-3.9389007	comment	10.0	47.5	1543008285	6.4566193
29975334	Ask HN: How does Common Lisp deal wi	Ask HN: How does Common Lisp deal with side effects?	iamwil	15.125176	-3.9665377	story	10.0	10.0	1642482154	-10.415846
13096705	I've been working in JS full time fo	I've been working in JS full time for a couple of months now, except for a short break to build a JSX parser for Emacs. Switching to lisp was such a breath of fresh air. The code was denser, and every line took longer to write, so not sure about overall produc	fovc	15.090035	-3.995158	comment	10.0	34.5	1480788557	-10.407662
13193376	I wonder why lisp isn't as popular a	I wonder why lisp isn't as popular as say python for AI, ML, and stuff. I see these fields as having a strong academic tone, and it feels like racket or clojure could be bigger when it comes to that.	erik14th	15.152516	-3.9410963	comment	10.0	35.5	1481898154	-10.636086
13296991	Ask HN: Learning Lisp?	Ask HN: Learning Lisp?	jonaf	15.153614	-3.933581	story	10.0	21.0	1483300350	-10.451206
12202163	Guile-lips: Scheme as a generic macr	Guile-lips: Scheme as a generic macro language	ruste	15.184398	-3.7997987	story	10.0	40.0	1470057920	-10.215263
12351187	Dinosaur and Lisp	Dinosaur and Lisp	VitoVan	15.156231	-3.9284627	story	10.0	237.0	1472037805	-10.535416
12354236	Apart from Clojure (which is not LIS	"Apart from Clojure (which is not LISP, really), I haven't seen end-user applications written in LISP dialects (I don't think emacs is end-user software). Scheme (and its PLT dialect Racket) was in academia for so long that it literally got ""friend-zoned"" and h"	behnamoh	15.115726	-3.9823434	comment	10.0	55.0	1472063766	-10.431153
35301138	Common Lisp Quick Reference (2018)	Common Lisp Quick Reference (2018)	abudabi123	15.146225	-3.938732	story	10.0	148.0	1679738445	-10.445463
28036679	Lisp as an Alternative to Java (2000	Lisp as an Alternative to Java (2000)	susam	15.126411	-3.9638047	story	10.0	150.0	1627913220	-10.488924
22591194	GNU Make Guile Integration	GNU Make Guile Integration	gebt	15.1697445	-3.7787526	story	10.0	117.0	1584350465	-9.901603
22935650	Forth Lisp Python Continuum: A small	Forth Lisp Python Continuum: A small highly-dynamic self-bootstrapping language	kick	15.09848	-3.9875066	story	10.0	152.0	1587482229	-10.195903
33282865	Between Two Lisps (2020)	Between Two Lisps (2020)	podiki	15.14915	-3.935471	story	10.0	106.0	1666313901	-10.467479
33324106	Ask HN: Lisp and Artificial Intellig	Ask HN: Lisp and Artificial Intelligence	nyc111	15.137358	-3.9449685	story	10.0	15.0	1666654587	-10.46112
33572019	The German School of Lisp (2011)	The German School of Lisp (2011)	tosh	15.150848	-3.922403	story	10.0	148.0	1668251310	-10.445588
33572930	I still don't get Lisp. Why does the	I still don't get Lisp. Why does there need to be an endless amount of dialects? Doesn't this completely needlessly fracture the ecosystem into hundreds of pieces making it impossible to effectively support?Isn't the point of Lisps to be endlessly customizable	solarkraft	15.137838	-3.9509072	comment	10.0	33.5	1668260316	-10.450835
33574311	A brief interview with Common Lisp c	A brief interview with Common Lisp co-creator Dr. Scott Fahlman	dorfsmay	15.152303	-3.9348114	story	10.0	169.0	1668269272	-10.451467
26882117	Lisp in Forth	Lisp in Forth	tosh	15.143108	-3.9238296	story	10.0	155.0	1618954746	-10.439726
37660025	Spinneret: A modern Common Lisp HTML	Spinneret: A modern Common Lisp HTML generator	nanna	15.11991	-3.948552	story	10.0	116.0	1695738978	-10.427957
37830342	Common Lisp: An Interactive Approach	Common Lisp: An Interactive Approach (1992)	nanna	15.131547	-3.9422615	story	10.0	119.0	1696933418	-10.423276
20232435	I keep hearing about Common Lisp, bu	"I keep hearing about Common Lisp, but I just don't ""get it"". Is it really as mind-blowing as people say when you ""get it""?"	umvi	15.152495	-3.9366496	comment	11.0	33.0	1561035765	-10.476102
20550656	Levels of code in Forth programming 	Levels of code in Forth programming (2002)	pointfree	15.015522	-3.7989342	story	11.0	163.0	1564360912	6.045933
20590439	How to Write a Lisp Interpreter In P	How to Write a Lisp Interpreter In Python (2010)	KibbutzDalia	15.108626	-3.984292	story	11.0	132.0	1564715412	-10.224165
20845458	> homoiconicity, meaning code can be	> homoiconicity, meaning code can be represented as a data structure inside the same language> generating strings and passing them into eval like for example in PythonPython has become a pinata for language enthusiasts?  Python lets you pin a decorator on a fu	marmaduke	15.097178	-3.9985209	comment	11.0	35.0	1567245369	-10.2814
13929355	Modern C++ and Lisp Programming Styl	Modern C++ and Lisp Programming Style	deepaksurti	15.123265	-3.9679182	story	11.0	145.0	1490171984	-10.408782
25554756	A Tiny Lispy Transpiler	A Tiny Lispy Transpiler	oumua_don17	15.112481	-3.9640105	story	11.0	110.0	1609107494	9.23253
26162522	Ask HN: Why should we learn Lisp?	Ask HN: Why should we learn Lisp?	smlckz	15.14188	-3.9377697	story	11.0	16.0	1613534571	-10.439307
35752221	That book is a little bit controvers	"That book is a little bit controversial. Here is the main criticism leveled at it:
https://gist.github.com/no-defun-allowed/7e3e238c959e27d4919...> The interpreter uses very dubious implementation decisions, and the language that is created as a side-effect ma"	cardanome	15.14577	-3.9360878	comment	11.0	41.0	1682770935	-10.441198
35936878	What value would learning Lisp provi	What value would learning Lisp provide, if you're not curious and learning for the love of learning, or you're not an emacs user?	jossclimb	15.142138	-3.9478636	comment	11.0	30.5	1684059426	-10.477743
36195276	Personally I find that LISP syntax r	"Personally I find that LISP syntax remove a layer of complexity by directly exposing the AST to my brain instead of adding a layer of internal parsing.    1 + x * 2 - 3 % x

is longer to decipher than    (% (- (+ (* x 2) 1) 3) x)

which is itself harder than  "	yogsototh	15.107569	-3.9887843	comment	11.0	43.5	1685968025	-10.37188
28725958	Common Lisp	Common Lisp	astdb	15.149254	-3.935279	story	11.0	172.0	1633148825	-10.4602785
29403876	"I wonder how popularity of ""exotic"" "	"I wonder how popularity of ""exotic"" languages increases when AoC's aroundF#, Lisp and so on"	tester34	15.134617	-3.9419844	comment	11.0	40.5	1638368920	-10.429974
29507078	So... I want to like Lisp, and every	So... I want to like Lisp, and every time I read stories like these I understand why people enjoy it.But then I see a code snippet, something like this manual datetime string parser. Apparently the programmer needed to roll their own, and I wonder: how on eart	isoprophlex	15.128259	-3.9623778	comment	11.0	33.5	1639118488	-10.387527
36548071	Whenever a post about Lisp graces th	Whenever a post about Lisp graces the front page of Hacker News, I typically observe two main categories of commenters. The first group is composed of devout Lisp enthusiasts who have either applied it to solve problems in the past or continue to utilize it in	submeta	15.142746	-3.9496229	comment	11.0	48.5	1688200680	-10.508223
36635373	Owner of Symbolics Lisp machines IP 	Owner of Symbolics Lisp machines IP is interested in a non-commercial release	mepian	15.137008	-3.9386256	story	11.0	230.0	1688751580	-10.319554
36887744	Wow, wasn't expecting to see my post	Wow, wasn't expecting to see my post on here! Eventually, I want to write a follow-up, but I'm still a beginner.Here's what I've liked about Common Lisp so far:* The condition system is neat and I've never used anything like it -- you can easily control code f	schemescape	15.121958	-3.9683187	comment	11.0	50.0	1690421803	-10.423579
37222669	HCSL: Hand coded stringy lisp	HCSL: Hand coded stringy lisp	0x3444ac53	15.119164	-3.964217	story	11.0	26.0	1692712111	-10.378004
32632382	Having played around with Clojure an	Having played around with Clojure and Scheme for a while (but never got too serious), I always thought homoiconicity and macros were extremely cool concepts, but I never actually ran into a need for them in my everyday work.>Now, if we agree that the ability t	reifyx	15.101129	-3.9995277	comment	11.0	33.5	1661723070	-10.505541
19272913	> The reason s-expressions are bette	> The reason s-expressions are better than text is that they are more expressiveThat has got to be a joke right? S-expressions are a subset of text it’s axiomatically impossible for them to be more expressive.	hjk05	15.086317	-4.0132437	comment	11.0	32.0	1551373896	-10.428417
16829278	Carp: A statically typed Lisp, witho	Carp: A statically typed Lisp, without a GC, for real-time applications	tosh	15.1111355	-3.9702332	story	11.0	202.0	1523622201	-10.332561
17633055	Parinfer – Simpler Lisp Editing	Parinfer – Simpler Lisp Editing	espeed	15.109843	-3.9765332	story	11.0	200.0	1532784494	-10.322104
17796518	Is Lisp Still Unique? Or at Least Di	Is Lisp Still Unique? Or at Least Different? (2002)	tosh	15.153941	-3.9322946	story	11.0	78.0	1534717518	-10.454682
21231362	Wish I could have Lisp without all t	Wish I could have Lisp without all the parentheses. Parentheses just sour the experience for me.	m0zg	15.094723	-4.002732	comment	11.0	41.0	1570866957	-10.343551
21535165	PAIP: Run Common Lisp in Browser?	PAIP: Run Common Lisp in Browser?	register	15.142676	-3.936389	story	11.0	68.0	1573738008	6.367231
21675297	Understanding What It's Like to Prog	Understanding What It's Like to Program in Forth (2008)	goranmoomin	15.025177	-3.8024893	story	11.0	84.0	1575205721	6.0794034
18105948	> Why are programming environments s	> Why are programming environments still so primitive?Because we as an industry made a strategic decision in the late 20th century to value run-time efficiency over all other quality metrics, a decision which has manifested itself in the primacy of C and its d	lisper	15.098012	-3.9879506	comment	11.0	49.0	1538311658	-10.3427305
18254243	I know I am going to write an unpopu	"I know I am going to write an unpopular opinion and get downvoted for it, but here it goes...I am still not convinced by the general ""we don't need to upgrade the Common Lisp specification"" attitude.It surely is remarkable as a specification, encompassing so m"	znpy	15.132074	-3.9602995	comment	11.0	56.5	1539923385	-10.491801
18663298	Response to 'Reasons why Lisp games 	Response to 'Reasons why Lisp games suffer'	etiam	15.157465	-3.9301128	story	11.0	106.0	1544617537	-10.467268
18900887	Halo was written with a Lisp dialect	Halo was written with a Lisp dialect called blamscript (2014)	kuwze	15.136157	-3.9504347	story	11.0	119.0	1547443770	-10.494156
18911940	Some Lisp books (2012)	Some Lisp books (2012)	deepaksurti	15.15231	-3.9328778	story	11.0	192.0	1547567177	-10.450898
29771957	Understanding the Power of Lisp (202	Understanding the Power of Lisp (2020)	susam	15.149171	-3.9357626	story	11.0	123.0	1641148593	-10.444602
30631590	Paredit mnemonics for slurping and b	Paredit mnemonics for slurping and barfing Lisp symbolic expressions	susam	15.108387	-3.9729064	story	11.0	70.0	1646941912	-10.273949
12777852	How to Write a Lisp Interpreter in P	How to Write a Lisp Interpreter in Python (2010)	xorbox	15.107698	-3.9838538	story	11.0	130.0	1477306927	-10.233593
13471401	excuse my ignorance, but other than 	excuse my ignorance, but other than emacs, what are the uses of LISP?	0wl3x	15.137783	-3.9463387	comment	11.0	32.5	1485267243	-10.493861
12358177	Mezzano – An operating system writte	Mezzano – An operating system written in Common Lisp	arm	15.099778	-3.9345274	story	11.0	213.0	1472124180	-10.23116
28040351	The philosophy of Lisp encourages wr	The philosophy of Lisp encourages writing your own libraries because it's so easy to do. You're expected to know how to program if you use Lisp; not to depend on tiny prewritten functions in the npm universe that may or may not solve your problem, that may or 	dreamcompiler	15.130209	-3.955915	comment	11.0	46.5	1627927435	-10.423756
22578824	Lisp Comes of Age (1980)	Lisp Comes of Age (1980)	lproven	15.157181	-3.9257677	story	11.0	147.0	1584221078	-10.467839
23304457	Guilemacs – Emacs with Guile Scheme	Guilemacs – Emacs with Guile Scheme	MintelIE	15.188646	-3.7845187	story	11.0	120.0	1590437494	-10.23716
26493588	Writing Small CLI Programs in Common	Writing Small CLI Programs in Common Lisp	reikonomusha	15.116836	-3.960751	story	11.0	174.0	1615999320	-10.377632
37615783	Chez Scheme: Lisp with native code s	Chez Scheme: Lisp with native code speed	simonpure	15.247481	-3.797176	story	11.0	101.0	1695407337	13.580508
38180062	Ask HN: Does anyone Lisp without Ema	Ask HN: Does anyone Lisp without Emacs?	potta_coffee	15.116332	-3.9567819	story	11.0	17.0	1699378932	9.1157875
15055966	Lispers	Lispers	tosh	15.148071	-3.9109359	story	11.0	113.0	1503181396	-10.475364
15467373	No.I expect this will be a fairly co	No.I expect this will be a fairly controversial comment, so I want to preface this by saying that I'm a big Lisp fan (just look at my handle).  Lisp is my favorite programming language.  I've been using it for nearly forty years.  My first Lisp was P-Lisp on a	lisper	15.132263	-3.9557061	comment	11.0	40.5	1507913858	-10.407314
23761346	Google Common Lisp style guide	Google Common Lisp style guide	fanf2	15.142612	-3.944591	story	12.0	196.0	1594141655	-10.443552
23843533	Author here. The book has just gone 	Author here. The book has just gone to production and will be available at the end of the year in dead-tree and electronic formats.The book happened because I got annoyed at the fact that there is no good reference that shows how the condition system works, wh	phoe-krk	15.126313	-3.9652355	comment	12.0	68.0	1594810626	-10.364818
20376377	Readable Lisp S-expressions Project 	Readable Lisp S-expressions Project (2013)	singularity2001	15.09225	-4.001172	story	12.0	86.0	1562521044	-10.339427
20659557	Ask HN: How do you “get” Lisp?	Ask HN: How do you “get” Lisp?	khaledh	15.133275	-3.9612358	story	12.0	18.0	1565399964	-10.437771
14641658	History of Lisp Editing	History of Lisp Editing	lemming	15.147413	-3.9356413	story	12.0	157.0	1498524101	-10.438843
31199992	Why Lisp macros are cool, a Perl per	Why Lisp macros are cool, a Perl perspective (2005)	pcr910303	15.123166	-3.9766033	story	12.0	132.0	1651192709	-10.365569
31593786	...god, my eyes ...why is everything	...god, my eyes ...why is everything CL plagued by such horrible design choices (hyperspec, Lisp-IDEs... all!) - why such ugly colors, ugly typography, bad contrasts, ugly logos, ugly diagrams, ugly supporting graphics?!I know that even the language itself is 	catchclose8919	15.138697	-3.9307137	comment	12.0	41.5	1654171251	-10.433289
25895807	I am interested in LISP-type languag	I am interested in LISP-type languages, but I have a serious case of decision paralysis.GNU Guile? Common Lisp? Clojure (JVM)? Racket? Judging by my understanding of the difference between Common Lisp and Scheme, I think I am more of a Scheme type (I prefer C 	gypsyharlot	15.160071	-3.92247	comment	12.0	41.0	1611521179	-10.516259
26065511	State of the Common Lisp ecosystem, 	State of the Common Lisp ecosystem, 2020	lelf	15.155252	-3.9345334	story	12.0	311.0	1612797053	-10.450103
36030937	Lem v2.0.0 – Common Lisp IDE with hi	Lem v2.0.0 – Common Lisp IDE with high expansibility	mepian	15.110613	-3.9562025	story	12.0	129.0	1684760721	-10.411266
36195008	In my long journey to make computers	In my long journey to make computers do what I want spanning several decades, systems, languages and trends, I've come across a certain class of geeks.This group would swear by Lisp. And by that I mean, they would treat Lisp as the gold standard. Sometimes, th	magic_hamster	15.144159	-3.941775	comment	12.0	81.0	1685965744	-10.457362
29007537	What's a good Lisp dialect to write 	What's a good Lisp dialect to write small programs in? I have some Emacs Lisp experience but I wouldn't use it to automate small tasks. For that, I typically use Python.	hesk	15.064725	-4.002182	comment	12.0	31.0	1635289685	-10.361998
29064942	Differences with other Lisps	Differences with other Lisps	susam	15.142266	-3.9465303	story	12.0	159.0	1635762648	-10.47904
29633566	Serious question: who uses Lisp thes	"Serious question: who uses Lisp these days?
Been in software dev industry for over 20 years. Never encountered a single project employing the language.There must be some reason Lisp is so popular on HN."	bitcharmer	15.144808	-3.9443438	comment	12.0	30.5	1640058075	-10.525213
37086335	I quite enjoyed this article, but I 	"I quite enjoyed this article, but I reckon they're talking about ADHD rather than ""bipolar"" mind. Seen under that lens, I resonate with his caricature.Focus is a precious, rare resource outside my control. Mainstream languages, made for collaboration in big te"	sph	15.101073	-3.984833	comment	12.0	52.0	1691742137	-10.366687
33058450	I Just Can't Kick Lisp	I Just Can't Kick Lisp	djha-skin	15.157165	-3.9304457	story	12.0	63.0	1664733398	-10.47521
22088311	I've read this story a couple times 	I've read this story a couple times as it's popped up on the internet in different places. I've enjoyed it each time because it promises that lisp is an uber-powerful and easy (?) language.I'm always curious though: what's the other side of the story? Why is l	maliker	15.1261425	-3.974882	comment	12.0	52.5	1579392008	-10.481528
19415735	Kilo LISP	Kilo LISP	geocar	15.149462	-3.9330606	story	12.0	221.0	1552849423	-10.499217
19746122	Lisp Operating System (2015)	Lisp Operating System (2015)	antipropaganda	15.136964	-3.9394546	story	12.0	173.0	1556180882	-10.43555
17480435	Honest question: why do people like 	Honest question: why do people like lisp so much? Everything I've been able to learn about the language is that it was designed for a non-register based hardware that never caught on, so now it's just a less effective language that doesn't run as fast as anyth	guywithahat	15.13948	-3.9540434	comment	12.0	37.5	1530995812	-10.43583
21625848	Lisp-Flavored Programming Languages	Lisp-Flavored Programming Languages	goranmoomin	15.124376	-3.9621153	story	12.0	98.0	1574661829	-10.39867
18192614	A new version of Common-Lisp.net has	A new version of Common-Lisp.net has been launched	kamaal	15.16265	-3.923226	story	12.0	165.0	1539257886	-10.478903
18226738	> McCarthy built Lisp out of parts s	"> McCarthy built Lisp out of parts so fundamental that it is hard to say whether he invented it or discovered it.I loved that sentence! I'm guessing epistemology or a similar field has pondered the ""invented or discovered"" question already, and if so, I want t"	default-kramer	15.160855	-3.9063783	comment	12.0	54.0	1539666940	9.269671
12197131	Lisp as an Alternative to Java (1999	Lisp as an Alternative to Java (1999)	nwhitfield1	15.123511	-3.9659646	story	12.0	77.0	1469975862	-10.471381
12231137	I am fairly deep into learning Haske	I am fairly deep into learning Haskell. After I am done, should I learn Lisp (SICP)? Smalltalk? Prolog?I am learning these languages for mind-expansion.I am also studying AI, will learning Lisp be relevant? (e.g. Help me reason about and write AI systems)	avindroth	15.129372	-3.9703975	comment	12.0	48.5	1470392242	-10.470526
28114356	A Lisp interpreter written in Lisp (	A Lisp interpreter written in Lisp (2017)	capableweb	15.118256	-3.9614944	story	12.0	160.0	1628501238	-10.401931
33162283	Eliminating FORMAT from Lisp (2003)	Eliminating FORMAT from Lisp (2003)	susam	15.137084	-3.9477699	story	12.0	70.0	1665489590	-10.461508
33463517	I really wanted to get Lisp. I thoug	I really wanted to get Lisp. I thought, I can't get onto the pedantic train of Haskell, but maybe I can do for Lisp. Had a play with Common Lisp and Scheme and... Nothing.It's not that I found either to be bad. I quite like the syntax actually. There were some	rich_sasha	15.110362	-3.9804375	comment	12.0	35.0	1667550688	-10.408076
33718011	Common Lisp Object System (CLOS)	Common Lisp Object System (CLOS)	memorable	15.122141	-3.9607377	story	12.0	113.0	1669204035	-10.448062
26957792	Symbolics Lisp Machine demo (2013) [	Symbolics Lisp Machine demo (2013) [video]	lelf	15.128357	-3.9489052	story	12.0	139.0	1619539492	-10.338507
27036566	Processing parentheses is still pars	Processing parentheses is still parsing. It's kindergarten-level parsing, but it's still parsing.I've written thousands of lines of scheme code preprocessed to  eliminate most parenthesis. I'm convinced Lisp self-asphyxiated by fighting a last stand on parenth	Syzygies	15.098971	-3.9961302	comment	12.0	42.5	1620129030	-10.373142
27282814	SICL: A New Common Lisp Implementati	SICL: A New Common Lisp Implementation	tosh	15.152655	-3.9219968	story	12.0	147.0	1621977540	-10.37881
38511519	Can someone explain these scheme and	"Can someone explain these scheme and lisp languages to me?
Every time I look at these languages, I can't grasp what you can use them for.
And why one would use them.I always feel like I'm missing something.
In the example scripts and code snippets, I can see t"	SushiHippie	15.122944	-3.9689949	comment	12.0	34.0	1701643350	-10.453556
15359391	I still fantasize about having lisp 	"I still fantasize about having lisp ""all the way down"", but I'm not sure what I mean or ought to mean when I am fantasizing. On the one hand, I mean implementing lisp in hardware as fundamentally as possible (don't really know why this would be valuable, but I"	ra88it	15.142114	-3.9428608	comment	12.0	56.5	1506621598	-10.447823
30800520	The Lisp Curse (2017)	The Lisp Curse (2017)	gphilip	15.151607	-3.9305634	story	13.0	64.0	1648205060	-10.464954
31302086	(Yet Another) Lisp in Go	(Yet Another) Lisp in Go	tosh	15.137124	-3.94804	story	13.0	80.0	1651996013	-10.370094
31552349	Lisp, Smalltalk, and the power of sy	Lisp, Smalltalk, and the power of symmetry (2014)	behnamoh	15.142651	-3.943005	story	13.0	166.0	1653854317	-10.418739
31645558	A Road to Common Lisp (2018)	A Road to Common Lisp (2018)	jsfcoding	15.146563	-3.9372373	story	13.0	182.0	1654546401	-10.455971
26053467	Does anyone find Lisp readable?I hav	Does anyone find Lisp readable?I haven't used Lisp professionally, but find the code terribly confusing to read (mostly due to the look of it, I assume), while I can usually follow code of an unknown language reasonably well.	enw	15.129648	-3.9541924	comment	13.0	52.5	1612685205	-10.440815
34321090	Common Lisp: 2022 in review	Common Lisp: 2022 in review	Tomte	15.14839	-3.9341457	story	13.0	195.0	1673330557	-10.451345
34327306	A question I have that's not answere	A question I have that's not answered by the link is why would I want to learn lisp? If you were starting a project today, what are some of the features Lisp offers that make it a better choice than any other (more popular) language? And do those features outw	JLCarveth	15.146271	-3.9400277	comment	13.0	40.5	1673368079	-10.474438
39376417	It's the lists.No, not the prefix no	It's the lists.No, not the prefix notation, parenthesis, what have you, although that doesn't help. The lists themselves. In Lisp, code is data, and data is lists.Yes, of course, there are hashmaps, arrays, strings. But idiomatic Lisp code really does use link	samatman	15.110583	-3.9908319	comment	13.0	92.5	1707949444	-10.445654
39570679	KamilaLisp – A functional, flexible 	KamilaLisp – A functional, flexible and concise Lisp	tluyben2	15.143709	-3.9445498	story	13.0	123.0	1709364570	-10.467967
15880172	Lisp at the Frontier of Computation 	Lisp at the Frontier of Computation [video]	reikonomusha	15.147909	-3.9303687	story	13.0	202.0	1512753176	-10.42601
16308844	So this is literally Lisp, just with	So this is literally Lisp, just with curly braces instead of parenthesis :).I don't understand this part of the readme:> The advantage of Mark over S-expressions is that it is more modern, and can directly run in browser and node.js environments.Does this mean	TeMPOraL	15.072945	-4.025149	comment	13.0	48.5	1517840378	-10.407826
16407914	Lisps are like tiling window manager	Lisps are like tiling window managers... Some have a taste for them. Most, don't.Unfortunately some of the Lisp cool features are hard to implement without its simple syntax. Maybe the lesson is that we should find a f way to have syntax-independent programmin	nnq	15.11273	-3.9838738	comment	13.0	53.0	1518983309	-10.391411
16419181	Overview and Introduction to Lisp (1	Overview and Introduction to Lisp (1986) [video]	tosh	15.135139	-3.9443948	story	13.0	156.0	1519121842	-10.457002
17852194	A Road to Common Lisp	A Road to Common Lisp	stevelosh	15.150571	-3.9364552	story	13.0	343.0	1535385265	-10.464295
29850703	Practical Common Lisp (2005)	Practical Common Lisp (2005)	bikramgig	15.144064	-3.930288	story	13.0	144.0	1641641697	-10.447944
13354035	How Lisp-family languages facilitate	How Lisp-family languages facilitate building bioinformatics applications	abrax3141	15.130262	-3.9638155	story	13.0	118.0	1483936474	-10.430296
12111811	Lisp: it's not about macros, it's ab	Lisp: it's not about macros, it's about READ (2012)	lisper	15.115226	-3.9760115	story	13.0	154.0	1468789466	-10.270671
23292805	Running Lisp in Production (2015)	Running Lisp in Production (2015)	lisper	15.137885	-3.94291	story	13.0	139.0	1590339324	6.425473
23293736	I seriously don’t get why lisp is so	I seriously don’t get why lisp is so popular on HN, it’s basically unreadable to very most of developers. It’s an ivory tower.	dirtnugget	15.149207	-3.9383523	comment	13.0	62.0	1590346745	-10.459097
34026414	Carp – a statically typed, non-GC Li	Carp – a statically typed, non-GC Lisp language	sph	15.102932	-3.976652	story	13.0	135.0	1671270809	-10.278051
27032277	Casio AI-1000 Pocket Lisp Computer f	Casio AI-1000 Pocket Lisp Computer from 1989 [video]	akuzi	15.129885	-3.9334624	story	13.0	178.0	1620084850	-10.338359
27277575	Second Climacs – Emacs Implementatio	Second Climacs – Emacs Implementation in Common Lisp	xvilka	15.12823	-3.9536252	story	13.0	131.0	1621954392	-10.402451
14754535	Lisp's mysterious tuple problem	Lisp's mysterious tuple problem	AndrewBissell	15.143454	-3.9385402	story	13.0	17.0	1499880682	-10.445788
15226110	Mal – Make a Lisp, in 68 languages	Mal – Make a Lisp, in 68 languages	ingve	15.142089	-3.9364722	story	13.0	236.0	1505211399	-10.40712
25287034	State of Common Lisp Survey 2020	State of Common Lisp Survey 2020	michaelanckaert	15.151022	-3.9328697	story	13.0	117.0	1606986243	-10.45729
32175820	New Lisp-Stat Release	New Lisp-Stat Release	Lisp-Stat	15.142848	-3.9404771	story	13.0	105.0	1658378149	-10.477274
13948966	Lisp Quickstart	Lisp Quickstart	macco	15.14876	-3.934351	story	14.0	327.0	1490364466	-10.382505
26067697	I think this article (of sorts) is d	"I think this article (of sorts) is definitely helpful for onlookers to Common Lisp, but doesn't provide the full ""story"" or ""feel"" of Common Lisp, and I want to offer to HN my own perspective.Disclaimer #1: I've been working professionally as a Common Lisp pro"	reikonomusha	15.135651	-3.9554646	comment	14.0	48.5	1612806468	-10.437273
36154069	Cakelisp: A performance-oriented Lis	Cakelisp: A performance-oriented Lisp-like language	ducktective	15.130449	-3.957273	story	14.0	112.0	1685638973	-10.38133
29181404	Clog – The Common Lisp Omnificent GU	Clog – The Common Lisp Omnificent GUI	podiki	15.134396	-3.937885	story	14.0	163.0	1636581016	-10.389316
34557347	Lisping at JPL Revisited	Lisping at JPL Revisited	lisper	15.14939	-3.9326975	story	14.0	219.0	1674911934	-10.511238
39397942	The Emacsen family, the design of an	The Emacsen family, the design of an Emacs and the importance of Lisp (2023)	oumua_don17	15.127939	-3.9494872	story	14.0	140.0	1708095735	-10.400693
25313311	Between two Lisps	Between two Lisps	galfarragem	15.152242	-3.9349365	story	14.0	142.0	1607163368	-10.478448
32802308	Common Lisp names all sixteen binary	Common Lisp names all sixteen binary logic gates	optimalsolver	15.12445	-3.9541314	story	14.0	158.0	1662923007	-10.240545
33055150	I'm really curious: do people consid	I'm really curious: do people consider common lisp to be the go-to lisp today?if yes, that's awesome, I'll look into it.if no, what is the go-to? and is there an emacs-like using that lisp?	pvinis	15.143471	-3.941995	comment	14.0	50.5	1664711958	10.244568
22063772	GNU Guile 3.0	GNU Guile 3.0	Fice	15.179575	-3.7804158	story	14.0	193.0	1579176758	-10.233936
22087583	I really feel like they should teach	I really feel like they should teach LISP in elementary school. It has extremely simple rules to get started and helps people intuitively understand programming concepts. Maybe an updated The Little Schemer style curriculum:https://www.amazon.com/Little-Scheme	proximitysauce	15.164353	-3.917547	comment	14.0	83.5	1579384828	-10.472944
19677292	Land of Lisp (2010)	Land of Lisp (2010)	tosh	15.156274	-3.9289653	story	14.0	247.0	1555448568	-10.462457
21231515	It amuses and pleases me to see that	It amuses and pleases me to see that pg will continue to play around with lisp presumably forever, regardless of how wealthy he becomes.I hope I'll never stop coding passion projects myself.John Carmack talked about this on Joe Rogan's show recently, about how	PostOnce	15.1230345	-3.9297013	comment	14.0	64.0	1570869203	1.8958551
21559737	Beating C with Common Lisp	Beating C with Common Lisp	verisimilitudes	15.1377325	-3.9439914	story	14.0	95.0	1574020834	-10.368101
29855453	Land of Lisp (2010)	Land of Lisp (2010)	rg111	15.154223	-3.9282033	story	14.0	183.0	1641671425	-10.482027
13467473	The Bipolar Lisp Programmer (2007)	The Bipolar Lisp Programmer (2007)	olieidel	15.136875	-3.9471607	story	14.0	102.0	1485215657	-10.452482
33736005	A few examples of Lisp code typograp	A few examples of Lisp code typography (2013)	reikonomusha	15.12387	-3.9505491	story	14.0	121.0	1669322557	-10.390097
38126052	A standalone zero-dependency Lisp fo	A standalone zero-dependency Lisp for Linux	keepamovin	15.124679	-3.9483054	story	14.0	191.0	1699001091	12.533584
14782470	This looks like a lot of work for wh	This looks like a lot of work for what amounts to very little end-user benefit.Honestly, I'd rather see more progress on the Emacs Lisp/Guile migration than on a putative C/Rust migration. At least with the Guile switch, it's something that will have an obviou	mschaef	15.168707	-3.8245091	comment	14.0	82.0	1500220078	-10.238883
20919819	The Lisp Curse (2011)	The Lisp Curse (2011)	felipelalli	15.153878	-3.931786	story	15.0	59.0	1568047653	-10.467391
14480157	The Lisp Curse (2011)	The Lisp Curse (2011)	mpweiher	15.154483	-3.9327848	story	15.0	86.0	1496558014	-10.459938
14581228	Goism – Use Go instead of Emacs Lisp	Goism – Use Go instead of Emacs Lisp inside Emacs	demiol	15.114532	-3.9921253	story	15.0	164.0	1497801648	10.221479
25583506	Anyone here use SBCL or Common Lisp?	Anyone here use SBCL or Common Lisp? Curious what you guys think of it.	gautamcgoel	15.127712	-3.9484046	comment	15.0	56.0	1609348480	-10.431202
26297040	Not Lisp again (2009)	Not Lisp again (2009)	caslon	15.150342	-3.9335477	story	15.0	246.0	1614546237	-10.475844
35826104	Paradigms of A.I. Programming: Case 	Paradigms of A.I. Programming: Case Studies in Common Lisp (1991)	abudabi123	15.134011	-3.9531252	story	15.0	237.0	1683269809	-10.461897
35936463	Successful Lisp: How to Understand a	Successful Lisp: How to Understand and Use Common Lisp (1999)	medo-bear	15.147717	-3.9435003	story	15.0	172.0	1684054313	-10.4859495
36195173	Same for FORTH. I don't think I've e	Same for FORTH. I don't think I've ever seen a FORTH programmer and a LISP programmer in the same room; I can't imagine the discussion terminating.Over the years, as a left-handed person, I've come to see this as evidence of underlying diversity in thought pat	pjc50	15.099054	-3.8903217	comment	15.0	50.0	1685967206	-10.482555
36544573	Steel Bank Common Lisp	Steel Bank Common Lisp	swatson741	15.144313	-3.9321125	story	15.0	262.0	1688170717	-10.492716
28850861	Janet – a Lisp-like functional, impe	Janet – a Lisp-like functional, imperative programming language	tsujp	15.089377	-3.998844	story	15.0	224.0	1634124372	-10.520799
28880888	Mezzano on Librebooted ThinkPads	Mezzano on Librebooted ThinkPads	lispm	15.091366	-3.9312873	story	15.0	226.0	1634320941	-8.004456
34863017	I have a suspicion that outside of t	I have a suspicion that outside of the 10 people writing lisp seriously—shirakumo, stylewarning, lispm, and some others— there’s more characters of prose praising lisp being written than lisp being written. It’s a great language. I really like it and am using 	gaze	15.147726	-3.9369144	comment	15.0	71.0	1676849625	-10.436388
35092027	Carp lang: statically typed Lisp, no	Carp lang: statically typed Lisp, no GC	fbn79	15.110499	-3.9672017	story	15.0	237.0	1678437472	-10.283088
32761113	Kamby – A programming language based	Kamby – A programming language based on Lisp that doesn't seem like Lisp	henriquegogo	15.138196	-3.95088	story	15.0	155.0	1662610445	-10.473519
19121828	Build me a Lisp	Build me a Lisp	KayEss	15.140883	-3.939781	story	15.0	127.0	1549712305	-10.455365
16395810	Yes, code is data, but that's not wh	Yes, code is data, but that's not what makes Lisp cool	lisper	15.1152115	-3.9772294	story	15.0	154.0	1518812981	-10.441461
16583973	Honestly curious why Lisp has so muc	Honestly curious why Lisp has so much admiration and praise on HN. I played around with Scheme some long time ago, read SICP, learned a lot. And I know Lisp inspired many programmers like the founder of Ruby. But I would not think of Lisp when it comes to solv	submeta	15.15043	-3.9312506	comment	15.0	74.0	1521027550	-10.446709
17116780	Python for Lisp Programmers (2000)	Python for Lisp Programmers (2000)	bshanks	15.096129	-3.9947627	story	15.0	133.0	1526888263	-10.1357155
17439916	Lisp is part of the family of langua	Lisp is part of the family of languages that J. Backus referred to as 'transformational languages'. Its ability to self-modify creates programs that are almost impossible for people other than the author to understand. This is why after 50 years it is still a 	magicmouse	15.135473	-3.955701	comment	15.0	75.5	1530517381	-10.451334
17636843	A Pamphlet against R: Computational 	A Pamphlet against R: Computational Intelligence in Guile Scheme (2016)	tosh	15.180013	-3.7889445	story	15.0	48.0	1532846225	-10.225867
21285543	Conflicts in the GNU project now aff	Conflicts in the GNU project now affect Guile	iso-8859-1	15.190107	-3.7739913	story	15.0	60.0	1571340489	-10.235595
39118438	Embracing Common Lisp in the modern 	Embracing Common Lisp in the modern world	joaogui1	15.147442	-3.9389787	story	15.0	183.0	1706110063	-10.484192
18309383	Serious question: what is it about t	"Serious question: what is it about the ""beauty"" of Lisp that the HN community seems to like so much? To me, how Lisp looks is its worst quality--the number of parentheses is just mind boggling. I want to understand why it is so loved."	wycy	15.150214	-3.9324589	comment	15.0	63.5	1540563318	-10.419037
12920700	Honest question: why do tutorials in	Honest question: why do tutorials in this topic seem to always use functional languages/syntax as examples? Our compilers class at MST had us re-implement a lisp compiler, but didn't touch on why we used lisp specifically (other than the professor liking it; w	drusepth	15.113306	-3.9934032	comment	15.0	57.5	1478788890	-10.464478
27569839	Common Lisp Books	Common Lisp Books	katzeilla	15.1505	-3.9332395	story	15.0	125.0	1624196358	-10.448522
12039268	Carp: a statically typed lisp, witho	Carp: a statically typed lisp, without a GC, for high performance applications	adamnemecek	15.107161	-3.9730713	story	15.0	196.0	1467750053	-10.318509
28180204	> I have met a lot of people who sai	> I have met a lot of people who said that they could do things with Lisp 20, 30 years ago that languages either cannot do today, or could only do recently.> It looks to me like the Lisp community knows something the rest of the world does not. They are not se	jdmichal	15.143055	-3.9489698	comment	15.0	55.5	1628945261	-10.453849
22412148	Modern, functional Common Lisp: myth	Modern, functional Common Lisp: myths and best practices	Ambrevar	15.137743	-3.945169	story	15.0	226.0	1582626844	-10.450535
22747932	Restarts in Common Lisp	Restarts in Common Lisp	sulami	15.1222515	-3.961086	story	15.0	139.0	1585744398	-10.403829
14247269	Not Lisp again (2009)	Not Lisp again (2009)	solidsalvia	15.150527	-3.933063	story	16.0	266.0	1493739633	-10.480466
29006172	Why Lisp? (2015)	Why Lisp? (2015)	oumua_don17	15.148375	-3.9417143	story	16.0	157.0	1635281911	-10.468645
29157859	My Emacs Lisp book is finished	My Emacs Lisp book is finished	greenSunglass	15.145816	-3.9346895	story	16.0	410.0	1636433349	-10.41236
34380373	Project Mage is an effort to build a	Project Mage is an effort to build a power-user environment in Common Lisp	zdw	15.139955	-3.9403067	story	16.0	190.0	1673704952	-10.437708
19508616	I Built a Lisp Compiler	I Built a Lisp Compiler	kristianp	15.1248665	-3.9597957	story	16.0	354.0	1553740040	-10.355359
16406761	What Made Lisp Different (2002)	What Made Lisp Different (2002)	montrose	15.152563	-3.936121	story	16.0	184.0	1518971427	-10.461368
16714225	Never played around with Lisp, so ex	Never played around with Lisp, so excuse the ignorance. Is this typical to construct HTML in Lisp? This feels incredibly verbose and error prone, not to mention confusing and hard to grok. Good luck having a designer mockup/write HTML.    (defun login-panel ()	nodesocket	15.134888	-3.9465373	comment	16.0	49.0	1522392495	-10.4527
21735257	Two questions:With the advent of cap	Two questions:With the advent of capable editors like Visual Studio Code, is Vim still a relevant skill to have?Is SLIME still the state of the art for Lisp development environment? Is there no way to get started with Lisp programming without having to learn E	travislane	15.083375	-3.9634945	comment	16.0	44.5	1575801522	-10.40735
18346961	How I lost my faith in Lisp (2002)	How I lost my faith in Lisp (2002)	Scarbutt	15.157645	-3.9262679	story	16.0	96.0	1541002476	-10.541722
27598424	Learn C and build your own Lisp (201	Learn C and build your own Lisp (2014)	katzeilla	15.13559	-3.952746	story	16.0	231.0	1624402883	-10.391151
12112665	Okay, I'll put something heretical o	"Okay, I'll put something heretical out there:Lisp just isn't that much better than our current languages.  Sorry.Sure, when Lisp came out it was ""advanced"".  Garbage collection, AST parsing and manipulation, macros, packages, a standard library, modules, homoi"	bsder	15.1184025	-3.9672172	comment	16.0	60.0	1468803076	-10.41906
12199748	Ooh Ooh My Turn Why Lisp? (2008)	Ooh Ooh My Turn Why Lisp? (2008)	bootload	15.152825	-3.9341478	story	16.0	99.0	1470015176	-10.479741
35387255	My question for why Janet was answer	My question for why Janet was answered:> My favorite feature of Janet, though, is something that sounds really dumb when I say it out loud: you can actually distribute Janet programs to other people. You can compile Janet programs into statically-linked native	djha-skin	15.136243	-3.9489877	comment	16.0	68.5	1680271087	-10.45049
33600941	Lisp-stick on a Python	Lisp-stick on a Python	tosh	15.106168	-3.981341	story	16.0	198.0	1668459535	-10.2805195
14726108	Can somebody comment on the status o	Can somebody comment on the status of Lisp in 2017?If one were to learn a functional language, is Lisp a good choice today? Or is Haskell more appropiate?	21	15.132933	-3.9696028	comment	16.0	90.0	1499532961	-10.486001
15186598	Asbestos suit on.There are many posi	Asbestos suit on.There are many positive things you can say about Lisp.However, many day-to-day developers, and their managers, believe that Lisp's syntax creates nigh-unreadable programs. For example, there's no built-in infix syntax, as opposed to practicall	dwheeler	15.127044	-3.9654965	comment	16.0	57.0	1504727486	-10.399266
15466124	ChrysaLisp – A 64-bit Lisp OS with G	ChrysaLisp – A 64-bit Lisp OS with GUI	bespoke_engnr	15.11226	-3.9457223	story	16.0	306.0	1507905917	-10.317839
23600277	I'm studying CS but haven't heard an	I'm studying CS but haven't heard any concrete examples of why I should learn a lisp (scheme, Clojure). Every time I ask i get pseudo-intellectual answers of how it will expand my mind, make it easier to express complex human problems/domains into code or even	yagodragon	15.144195	-3.958421	comment	17.0	50.5	1592834540	-10.704596
13884322	GNU Guile 2.2.0	GNU Guile 2.2.0	amirouche	15.184785	-3.7763789	story	17.0	331.0	1489666087	-10.218435
31494932	This part was counterintuitive for m	"This part was counterintuitive for me:> We found the age-old belief that ""lisp syntax is just too hard"" is simply false; the main thing that most people lack is decent lisp-friendly tooling with a low barrier to entry, and DrRacket provides that.If the syntax "	zestyping	15.143053	-3.9533134	comment	17.0	59.0	1653412882	-10.387041
25622756	How to open a file in Emacs: a story	How to open a file in Emacs: a story about Lisp, technology, and human progress	mpereira	15.153191	-3.9271789	story	17.0	262.0	1609691548	-10.385368
36367241	Reddit 1.0 was written in Lisp	Reddit 1.0 was written in Lisp	newsoul	15.138427	-3.934414	story	17.0	218.0	1686975563	-10.406932
28830677	Companies that use Lisp extensively	Companies that use Lisp extensively	tosh	15.141902	-3.9430413	story	17.0	215.0	1633973044	-10.45144
29243476	Forth vs Lisp	Forth vs Lisp	monological	15.120976	-3.9097588	story	17.0	120.0	1637083889	-10.443363
32053083	Guile Steel: a proposal for a system	Guile Steel: a proposal for a systems Lisp	pabs3	15.143658	-3.930276	story	17.0	104.0	1657522491	-10.400427
17439171	The Machine That Builds Itself: The 	The Machine That Builds Itself: The Strengths of the Lisp Languages (2016)	kuwze	15.135725	-3.9517884	story	17.0	239.0	1530502297	-10.43527
18373159	Why I love Common Lisp and hate Java	Why I love Common Lisp and hate Java (2012)	pmoriarty	15.137749	-3.955697	story	17.0	121.0	1541289190	-10.490697
13598123	Lisp is not functional (2010)	Lisp is not functional (2010)	saint-loup	15.143574	-3.9444299	story	17.0	67.0	1486561774	-10.458075
28532442	The Tragedy of the Common Lisp: Why 	The Tragedy of the Common Lisp: Why Large Languages Explode (2019)	abecedarius	15.135291	-3.949917	story	17.0	77.0	1631658890	-10.425615
15575505	Ask HN: Learning Lisp, and I have so	Ask HN: Learning Lisp, and I have some questions	maxpert	15.12512	-3.9535694	story	17.0	94.0	1509205799	-10.431313
20433368	Why is HN this interested in Lisp an	Why is HN this interested in Lisp anyway? Not saying it's a good or bad language, just don't quite get why it receives as much attention as it does.	s_Hogg	15.148931	-3.9399946	comment	18.0	79.0	1563112418	-10.449488
14247959	The objections the author had way ba	The objections the author had way back in the day are no longer the objections programmers of mainstream languages have to Lisp today.Today the objections I hear are more along the lines of:1 - All those parenthesis.  (Still a top objection)2 - Lisp doesn't lo	pmoriarty	15.154494	-3.9375274	comment	18.0	108.5	1493743303	-10.452818
25152882	Vodka is a creative coding environme	Vodka is a creative coding environment for creative writers (LISP)	tartoran	15.144546	-3.9397929	story	18.0	104.0	1605811624	-10.460785
32382977	Wisp: Whitespace to Lisp	Wisp: Whitespace to Lisp	signa11	15.135556	-3.948756	story	18.0	82.0	1659941509	-10.402258
22087419	Lisping at JPL (2002)	Lisping at JPL (2002)	sandinmyjoints	15.152559	-3.9306145	story	18.0	307.0	1579383267	-10.481827
16591592	Portacle – A Portable Common Lisp De	Portacle – A Portable Common Lisp Development Environment	wheresvic1	15.119627	-3.9468749	story	18.0	254.0	1521109405	-10.375597
39213261	Ask HN: Guide for Implementing Commo	Ask HN: Guide for Implementing Common Lisp	HexDecOctBin	15.128719	-3.9601195	story	18.0	82.0	1706769017	-10.418164
28048072	Lisp in an “impossible” language, th	Lisp in an “impossible” language, the most complex Malbolge program to date	palaiologos	15.128809	-3.9502625	story	18.0	263.0	1627991058	-10.392457
22301595	Li Wenliang	Li Wenliang	Anon84	15.154699	-3.8757508	story	18.0	350.0	1581448445	-10.488473
33464007	I see a lot of posts justifying why 	I see a lot of posts justifying why Lisp is nice and should be used. These are good. I agree with them. But I would also like to see posts about actual projects written in Lisp.Compare with Rust and Go. Rust and Go devs write articles evangelizing Rust but tha	ctrlmeta	15.141692	-3.9441447	comment	18.0	82.5	1667555334	-10.438152
23502964	I don't see why people won't just ta	I don't see why people won't just take the step D and Lisp do-- allowing full use of the programming language at compile time.You can execute an ordinary functions at compile-time to read a DSL from a string or read attributes (reflective metaprogramming) on y	crazypython	15.107586	-3.98008	comment	19.0	66.5	1591991050	-10.232569
20233220	The Tragedy of the Common Lisp: Why 	The Tragedy of the Common Lisp: Why Large Languages Explode	mpweiher	15.155146	-3.9306238	story	19.0	113.0	1561040783	-10.43004
20375596	I think Lisp failed because it had n	I think Lisp failed because it had no killer app. Most developers don't pick a language, they pick a project and the select the most appropriate language.Web frontend -> JavascriptUnix / Linux -> CWordpress plugins -> PHPWindows apps -> .NetiOS -> Objective C 	FigBug	15.113644	-3.9803243	comment	19.0	87.0	1562513684	-10.453734
14079573	Dale – A Lisp-flavoured C	Dale – A Lisp-flavoured C	macco	15.140657	-3.9430501	story	19.0	192.0	1491839848	-10.4514065
31654257	Joy: A maximalist web framework for 	Joy: A maximalist web framework for Lisp aficionados	memorable	15.134235	-3.9477253	story	19.0	209.0	1654609706	-10.430326
34524552	The rise and fall of Lisp at the Jet	The rise and fall of Lisp at the Jet Propulsion Lab (2002)	todsacerdoti	15.151609	-3.9341624	story	19.0	236.0	1674682895	-10.472404
32100035	Lisp in 99 lines of C and how to wri	Lisp in 99 lines of C and how to write one yourself [pdf]	jstanley	15.130155	-3.9523733	story	19.0	289.0	1657824776	-10.363185
30172641	Running Lisp in Production (2020)	Running Lisp in Production (2020)	myth_drannon	15.142201	-3.9371622	story	19.0	268.0	1643767634	6.4940386
13192738	The Idea of Lisp	The Idea of Lisp	rbanffy	15.148819	-3.936705	story	19.0	488.0	1481890743	-10.456438
13420092	Pixie – A small, fast, native Lisp	Pixie – A small, fast, native Lisp	throwaway7645	15.154489	-3.9083333	story	19.0	315.0	1484679633	-10.431578
12230869	The truth about Lisp (2006)	The truth about Lisp (2006)	0xmohit	15.148392	-3.9325566	story	19.0	120.0	1470387266	-10.474688
27139356	The Lisperati1000 is a cyberdeck ter	The Lisperati1000 is a cyberdeck terminal dedicated to Lisp programming	benwen	15.146481	-3.929735	story	19.0	171.0	1620890748	-10.4028845
37682273	Lisp Badge LE	Lisp Badge LE	rcarmo	15.147448	-3.9330866	story	19.0	271.0	1695853631	-10.493865
15186053	There seems to be plenty of people w	"There seems to be plenty of people who think Lisp is awesome.If so, then why hasn't it become ""mainstream""?"	hoodoof	15.145885	-3.9424741	comment	19.0	110.0	1504723245	-10.466928
29202021	Why Lisp?	Why Lisp?	susam	15.1548815	-3.9303758	story	20.0	271.0	1636738176	-10.463857
34326311	Learn Lisp the Hard Way	Learn Lisp the Hard Way	Tomte	15.155339	-3.9283845	story	20.0	294.0	1673364705	-10.479125
39665939	(How to Write a (Lisp) Interpreter (	(How to Write a (Lisp) Interpreter (In Python)) (2010)	selvan	15.099836	-3.9923563	story	20.0	96.0	1710146875	-10.139274
33605019	I've been hearing claims my entire p	"I've been hearing claims my entire programming career about how Lisp is supposedly ""superior"" to mainstream programming languages, but I've never seen a concise code example that actually demonstrates this.For instance, it's easy to demonstrate how Rust is sup"	p-e-w	15.111446	-3.9824724	comment	20.0	87.0	1668483990	-10.456918
15031855	Ask HN: Lispers: Which dialect of Li	Ask HN: Lispers: Which dialect of Lisp do you use and why?	acalderaro	15.181011	-3.8985307	story	20.0	39.0	1502921970	-10.463669
31029478	Fennel: A Practical Lisp	Fennel: A Practical Lisp	mattroelle	15.089606	-3.9898992	story	21.0	261.0	1649954722	-10.237688
28875051	Carp – A statically typed Lisp, with	Carp – A statically typed Lisp, without a GC, for real-time applications	fuzzythinker	15.106129	-3.9675124	story	21.0	259.0	1634280559	-10.308862
39142295	If Lisp is so great	If Lisp is so great	molteanu	15.145389	-3.941823	story	21.0	33.0	1706275132	-10.459396
22770023	I see a lot of Lisp stuff on HN : do	I see a lot of Lisp stuff on HN : do a lot of people use it ?	_threads	15.149159	-3.938339	comment	21.0	64.5	1585926774	-10.4994135
23163596	How Lisp Became God's Own Programmin	How Lisp Became God's Own Programming Language (2018)	Qaphqa	15.133907	-3.9523706	story	21.0	151.0	1589345642	-10.435176
33462454	Why Lisp?	Why Lisp?	signa11	15.15377	-3.9302504	story	21.0	152.0	1667538552	-10.468134
27307388	An Intuition for Lisp Syntax	An Intuition for Lisp Syntax	codetrotter	15.12145	-3.9751122	story	21.0	130.0	1622145033	-10.424234
20210227	Mezzano – An operating system writte	Mezzano – An operating system written in Common Lisp	pjmlp	15.107923	-3.9372058	story	22.0	396.0	1560839506	-10.242138
31178737	Tutorial Series to learn Common Lisp	Tutorial Series to learn Common Lisp quickly	oumua_don17	15.15199	-3.932552	story	22.0	279.0	1651060112	-10.452234
18402567	Chicken Scheme 5.0	Chicken Scheme 5.0	mario-goulart	15.225386	-3.750085	story	22.0	303.0	1541626081	11.540825
27045375	Hy: A dialect of Lisp that's embedde	Hy: A dialect of Lisp that's embedded in Python	lnyan	15.096252	-3.99259	story	22.0	166.0	1620180659	-10.1199
31547765	Ask HN: What does a developer need t	Ask HN: What does a developer need to know to build their own Lisp from scratch?	stolen_biscuit	15.138019	-3.9526968	story	23.0	81.0	1653816500	-10.4124565
36154531	What are the enduring innovations of	What are the enduring innovations of Lisp? (2022)	eslaught	15.15088	-3.9354658	story	23.0	180.0	1685640799	-10.489882
22087742	You don't understand why kids would 	You don't understand why kids would want to learn programming. At least those who do, want to learn because they can build cool things they can show off to friends.It's not about whether a programming language is simple or not. (I actually think LISP is not as	cocktailpeanuts	15.147795	-3.9375901	comment	23.0	85.5	1579386222	10.891786
17478489	Learn C and Build Your Own Lisp (201	Learn C and Build Your Own Lisp (2014)	AlexeyBrin	15.134873	-3.9543595	story	23.0	603.0	1530971483	-10.38793
13096576	Practical Common Lisp (2005)	Practical Common Lisp (2005)	tosh	15.147999	-3.9274633	story	23.0	296.0	1480786742	-10.439301
37022525	Are there any popular lisps without 	Are there any popular lisps without parentheses or at least with minimal parentheses?	leke	15.106113	-3.98655	comment	24.0	70.5	1691333248	-10.372238
28366292	Some thoughts about raising the prof	Some thoughts about raising the profile of Lisp	AndrewDucker	15.152466	-3.9336195	story	24.0	93.0	1630407783	-10.45978
32359655	Byte Magazine: LISP (1979)	Byte Magazine: LISP (1979)	PaulHoule	15.143685	-3.925474	story	25.0	259.0	1659722598	-5.494454
17036497	Common Lisp homepage	Common Lisp homepage	t-sin	15.154093	-3.9295852	story	25.0	292.0	1525928195	-10.475556
18308721	Not Lisp again (2009)	Not Lisp again (2009)	kamaal	15.150627	-3.9337633	story	25.0	403.0	1540558425	-10.467163
29987501	OpenGOAL: Port of Jak and Daxter, wr	OpenGOAL: Port of Jak and Daxter, written in GOAL, a custom Lisp by Naughty Dog	msk-lywenn	15.137198	-3.9384177	story	25.0	381.0	1642547628	-10.372067
15417735	The Land of Lisp	The Land of Lisp	adgasf	15.153659	-3.9290283	story	25.0	477.0	1507305016	-10.464658
36887091	It's 2023, so of course I'm learning	It's 2023, so of course I'm learning Common Lisp	behnamoh	15.151268	-3.9306986	story	26.0	373.0	1690417306	-10.467088
37086301	The Bipolar Lisp Programmer (2007)	The Bipolar Lisp Programmer (2007)	sph	15.135524	-3.9470391	story	26.0	163.0	1691741633	-10.472671
35852321	Why Lisp?	Why Lisp?	mepian	15.154659	-3.927981	story	27.0	244.0	1683472544	-10.462789
32383525	Ask HN: What Is the Lisp “Enlightmen	Ask HN: What Is the Lisp “Enlightment”?	armchairguy	15.139438	-3.9528239	story	27.0	43.0	1659948831	-10.46417
15781883	Lisp in fewer than 200 lines of C	Lisp in fewer than 200 lines of C	jfo	15.12698	-3.9547343	story	27.0	443.0	1511716989	-10.316338
24892297	An Intuition for Lisp Syntax	An Intuition for Lisp Syntax	simonpure	15.120746	-3.9754584	story	28.0	551.0	1603679214	-10.380175
13979002	How to write Common Lisp in 2017 – a	How to write Common Lisp in 2017 – an initiation manual	macco	15.150561	-3.9345777	story	29.0	476.0	1490724334	-10.422214
39182721	A Tour of the Lisps	A Tour of the Lisps	medo-bear	15.152639	-3.9338667	story	29.0	358.0	1706562936	-10.46138
23164614	Janet: a lightweight, expressive and	Janet: a lightweight, expressive and modern Lisp	galfarragem	15.14201	-3.9371696	story	29.0	408.0	1589356930	-10.495962
14909786	Hy – A Lisp-flavored Python	Hy – A Lisp-flavored Python	tosh	15.055864	-4.0309815	story	29.0	625.0	1501675280	-10.034568
15033439	BYTE Magazine's Lisp issue (1979) [p	BYTE Magazine's Lisp issue (1979) [pdf]	pmoriarty	15.143564	-3.9280448	story	29.0	250.0	1502938557	-10.420768

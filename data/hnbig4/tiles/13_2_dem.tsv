id	label	hovertext	author	x	y	type	relevance	size	year	umap1d
33085407	Neat to see a RISC V laptop but they	Neat to see a RISC V laptop but they must be smoking crack if they think I’m paying $1500 for the privilege of recompiling my operating system really, really slowly. And the 5k option is outright predatory. Someone needs to protect the vulnerable enthusiast market (you know who I’m referring to) from this kind of pricing. Ask a fair price. It’s an $800 laptop, maxed out.	thom_	9.346106	-5.663251	comment	3.0	14.0	1664911353	-10.570604
33099687	I'm bothered a bit about the use of 	I'm bothered a bit about the use of llvm-mos (or really any C compiler) for developing low-level 6502 code. The 6502 is my favourite CPU, but it's not very well suited to C, and most C compilers don't emit well-optimized 6502 assembly compared to what a manual coder would do.If he had to use a C compiler just so he didn't go insane, however (which I sympathize with), it seems to me that cc65 would have been a better choice and certainly more widely used. But most assemblers implement a good macro system which helps with sanity.	classichasclass	9.664006	-5.59812	comment	3.0	14.0	1664995694	-7.54827
33120146	> Now we have some RedHat employees 	"> Now we have some RedHat employees getting the news they are being transferred to an IBM area. I wonder how that's viewed from the RedHat side.Shocking absolutely no one. Every acquisition comes with the promise of ""X will let Y operate exactly like it always has been, and we'll never steer their direction"" and it has never been true."	capableweb	9.907177	-5.465235	comment	3.0	15.0	1665144603	-9.467041
33129989	After apple silicon was released, I 	"After apple silicon was released, I was wondering if intel and amd would respond with some arm socs down the line due to the seeming ""end of road"" for x86. But now what if they are intending to hold out on x86 long enough (~5-7 years) to be able to go all in on riscV?"	getcrunk	9.536123	-5.360452	comment	3.0	49.0	1665206681	-10.392928
33130937	Lots of comment here about Intel ado	Lots of comment here about Intel adopting RISC-V or Arm and what this means for x86. I think it's worth considering the commercial issues from Intel's (and AMD's) perspective.Firstly, adopting Arm would mean giving their blessing to an architecture that is now competing with x86 head on in key markets. That would only accelerate the demise of x86. So unless they have absolutely world beating products available on day 1, I don't think that's going to happen.Secondly, adopting either architecture means that they would remove a key part of the 'x86 moat' and open up competition from anyone else with deep pockets who can put together a top quality silicon design team.So I think it's likely that ultimately - whatever ISA they adopt - they will look for any way they can to distinguish themselves	klelatti	9.52473	-5.365774	comment	3.0	72.0	1665220903	-10.423432
33143846	Wow, you can use Rosetta to run x86 	Wow, you can use Rosetta to run x86 Linux binaries inside the VM on ARM? That seems pretty awesome. https://developer.apple.com/documentation/virtualization/run...	modeless	9.9285965	-5.2732615	comment	3.0	32.0	1665339611	-8.035156
33144427	> VirtualBox doesn't work on ARM by 	> VirtualBox doesn't work on ARM by the way, they only release for x86(_64).Because VirtualBox is not a CPU emulator, unlike QEMU, MAME/MESS, and other emulators. Virtualization software such as Fusion and Parallels run VMs of operating systems that match the architecture of the host OS. Intel VMs like those in VirtualBox will not run on Apple Silicon, and Apple Silicon VMs won't run on Intel. The CPU instruction sets are not compatible, nor can Rosetta 2 solve this.But an OS is arguably a tool used to run architecture compatible software, and much software will compile on different architecture platforms, so while it may not be possible to run VirtualBox on Apple Silicon, it may be possible to recompile whatever software is running on the virtual OS to native Apple Silicon. This is true f	Maursault	9.888055	-5.238717	comment	3.0	22.0	1665344019	-7.9938893
33148984	Linus Torvalds’s faulty RAM slows ke	Linus Torvalds’s faulty RAM slows kernel development	redbell	9.440648	-5.8181534	story	3.0	19.0	1665389272	-8.184862
33153260	I played around with this a few mont	I played around with this a few months back and really wished they were targeting ARM. I wonder if that will ever be on the cards...	rcarmo	9.563966	-5.208018	comment	3.0	13.0	1665418766	-7.710135
33163007	How did Linus not go on a rampage af	How did Linus not go on a rampage after breaking userspace for an entire year? Is NILFS not part of the kernel mainline, I guess?	CGamesPlay	9.450365	-5.8109007	comment	3.0	10.0	1665494311	-8.114003
33163899	How did Linus convince hordes of peo	"How did Linus convince hordes of people of contributing to his kernel, his trademark, for free? The official repo is under his personal account at github.com/torvalds/linuxAnd regular for profit companies aren't incompatible with Linux. Canonical, Red Hat, etc. make billions from open source.Let me stress this again: the only reason the Linux desktop sucks is organizational. Not monetary, not technological. Linux would be a niche project  today if Linus had been replaced by a committee or other loose organization. The Linux kernel is successful because there is a person at the top saying ""No.""The Linux desktop has no such thing. None of the singular desktop environment have  such a thing. GNOME has no BDFL, nor does KDE. So its endless bikeshedding and churning and going nowhere."	sph	9.55026	-5.706875	comment	3.0	14.0	1665499205	-8.182863
33201475	I'm in the market for a laptop with 	"I'm in the market for a laptop with ECC memory that runs linux well. I haven't found any good options. Despite AMD not following Intel's insane ECC product segmentation, there are no AMD laptops that support ECC. On the Intel side, there are maybe 3 laptops that support ECC memory: Dell Precision 7670, HP zbook fury g9, Thinkpad P16. They are all quite similar with the major downside that the iGPU is shit for all the Intel CPUs that support ECC. Intel sells only high core count variants (HX) with ECC, which means less silicon for the iGPU. They expect ""workstation"" users to use a discrete GPU, which is so silly. I have no use for a discrete GPU in a laptop, especially an NVIDIA one. If any of the newer laptop companies (framework, starlabs, etc.) see this, please make a reasonable laptop w"	bubblethink	9.407458	-5.4703603	comment	3.0	12.0	1665740878	8.200501
33209215	"The concept of ""reasonably torturous"	"The concept of ""reasonably torturous"" is pretty wild."	virgildotcodes	9.349678	-5.7958455	comment	3.0	27.0	1665784078	-5.441791
33212340	1) it looks a lot worse than 1%, 2) 	1) it looks a lot worse than 1%, 2) it is on x86 not risc-v, 3) code bloat.Meanwhile risc-v and everything else checks overflow for floating point arithmetic because it is mandated by the IEEE standard.  That doesn't seem to cause slowdowns.There is a code sequence in the risc-v docs someplace for doing a checked integer addition and it takes 3 or 4 instructions in the general case.  Blecch.  Better to set a flag like the FPU does, and check it at the end of a basic block.	throwaway81523	9.569121	-5.83001	comment	3.0	11.0	1665815731	-10.534973
33212999	>You'll hear a lot of people insist 	>You'll hear a lot of people insist that ISA doesn't matter; they're provably clueless.One of them being Torvalds, the transmeta guy (also known for Git, and a couple other hobby projects)Now I tend to fall on your side of this argument, but I have to say I'd like to see the formal proof of cluelessness :)Having read previous iterations of the same arguments, I've yet to see anything quite that decisive.	tux3	9.553875	-5.5824623	comment	3.0	10.0	1665823074	-7.800932
33218542	That emoji exists because of the blo	That emoji exists because of the blood type.🅰🅱🆎🅾There was a meme a while back where people would use 🅱 all over the place. Not sure why it was funny but it was.	teaearlgraycold	9.828039	-6.255379	comment	3.0	14.0	1665867227	-13.959132
33221553	This looks like a timeout.- same req	"This looks like a timeout.- same request with ""s"" removed from ""emojis"": works, but in 5.03 seconds (!)- ""how many emoji symbols on ios"": 
1.37 secondsOther modifications further decrease the request time."	stncls	9.83841	-6.249215	comment	3.0	14.0	1665902171	-13.950415
33223302	I can’t find the tweet right now but	I can’t find the tweet right now but I follow the developer on twitter and his rationale was essentially that he wanted to focus on nailing single core speeds before expanding to multi core.I assume this has to do with how extremely experimental bun is at the moment anyway. So they are focusing on nailing the fundamentals before attempting anything that would make it „production ready“ such as multi core support.	bjornf	9.6231	-5.3988376	comment	3.0	13.0	1665925485	7.9679875
33224826	I'm waiting for Linus to discover th	I'm waiting for Linus to discover the power supply industry conspiracy next lolJoking aside, power supplies are probably the next largest source of random hardware issues in PCs today	orangepurple	9.3576355	-5.786728	comment	3.0	34.0	1665937431	4.2363844
33224970	> I absolutely detest the crazy indu	"> I absolutely detest the crazy industry politics and bad vendors that have made ECC memory so ""specialHaven’t bought RAM for awhile, what’s he talking about?  ECC RAM should be at least 1/8 more expensive (plus something for the handler)"	helsinkiandrew	9.464517	-5.532701	comment	3.0	18.0	1665938370	8.2037525
33225051	"""- If you start getting errors (as i"	"""- If you start getting errors (as in more than the one off cosmic flare) later you can test the memory again and determine it's damaged- Most memory you buy for builds has a lifetime warranty"""	themitigating	9.854616	-5.6834173	comment	3.0	19.0	1665938841	8.273471
33225071	In reality ECC is like twice the pri	In reality ECC is like twice the price, the CPU support is close non-existent too (Intel just has been disabling in the memory controller for ages... unless it's an i3 laptop - then it's available again)Just try and buy a reasonable non-server class machine that has ECC.	xxs	9.410871	-5.4855337	comment	3.0	15.0	1665938968	8.201602
33228020	I'm curious to see the niche, if any	I'm curious to see the niche, if any, that this is able to carve out for itself. It's low on RAM, but might fit the same sort of profile as a Raspberry Pi W, even on price. That said, the RISC-V architecture will make things interesting--ARM cross-compilation is pretty well supported by most tiolchains now, even for older architectures. Should be interesting to see if that affects community interest, as I think onboard compilation of anything remotely complicated is probably going to be a no-go.	qchris	9.544354	-5.5725336	comment	3.0	14.0	1665961785	-10.554588
33229567	Newer ESP32 replaced the exotic CPU 	Newer ESP32 replaced the exotic CPU with a RISC-V core.It is apparently their intention to focus on RISC-V from now on. Which is great, because RISC-V has good open toolchains.	snvzz	9.474566	-5.2391396	comment	3.0	16.0	1665977386	-10.02555
33259835	Icestudio: Drag and Drop FPGA progra	Icestudio: Drag and Drop FPGA programming and learning	harvie	9.081962	-5.3721285	story	3.0	69.0	1666173574	8.418435
33265118	Looks interesting, but which FPGA ch	Looks interesting, but which FPGA chips and boards are actually supported?	guenthert	9.103607	-5.286039	comment	3.0	10.0	1666199694	8.275935
33275154	Disappointing that with all of this 	Disappointing that with all of this power available, ECC is only supported on W680 motherboards which are impossible to find from 1st party sellers.	PaulWaldman	9.411144	-5.5191517	comment	3.0	19.0	1666275950	8.232059
33296432	"Should be ""32-ish architectural regi"	"Should be ""32-ish architectural registers"".  Real processors have a lot more registers but they are not directly visible.  This is the whole reason why x86-64 is usable despite having only 16 architectural integer registers (or actually a little less than that).The article doesn't get RISC-V instruction encoding right.  It mentions compressed instructions, but instructions can also be longer than 32 bits.  The important thing about RISC-V is that the instruction stream can easily be divided at instruction boundaries (unlike, say, x86 which is horrific to decode).  This gives you most of the benefits of fixed size instructions and the benefits of extensibility when you need it."	rwmj	9.551914	-5.728999	comment	3.0	21.0	1666426158	-10.420192
33301392	RISC didn't hit its stride until the	RISC didn't hit its stride until the early 80s, using caches. The 801 was an experiment.  When the 801 shipped, almost no system had hard coded microcode. Being able to update microcode in the field isn't the reason RISC thrived.	sitkack	9.432676	-5.672843	comment	3.0	10.0	1666467354	-10.536039
33310643	The Linux Kernel May Finally Phase O	The Linux Kernel May Finally Phase Out Intel I486 CPU Support	axelfontaine	9.516009	-5.2004824	story	3.0	16.0	1666562010	7.698376
33312400	Matt Godbolt: Five things you didn't	Matt Godbolt: Five things you didn't realise your CPU did for you	tambourine_man	9.492852	-5.2541685	story	3.0	28.0	1666578684	7.7739687
33320291	Is there potential for UEFI-based aa	Is there potential for UEFI-based aarch64 systems?  Or is the code too specific to x86?	sigjuice	9.734321	-5.3466883	comment	3.0	18.0	1666635394	-7.8118224
33334307	It's interesting to see CI wait time	It's interesting to see CI wait times as core engineering metric. I 100% agree, so much so that I'm building a product specifically to speed up CI. We have redesigned how hosted CI works focusing on speed as our north star. We don't have CI wait time - your test starts immediately and we run your tests super fast. How do we do it? We have many workers with your test environment pre-built so we can split your tests and start running your tests in seconds. If anyone is interested you can check it out at https://brisktest.com/, I'd love to hear any feedback from the community.	reillyse	9.733863	-6.389579	comment	3.0	22.0	1666722137	6.1772885
33346848	Sure, but does the separate co-proce	Sure, but does the separate co-processor needs access to network stack? for a typical end user? definitely not.	Xelbair	9.735166	-5.1928725	comment	3.0	21.0	1666805606	7.8176794
33349378	Now you can run Ubuntu on a RISC-V c	Now you can run Ubuntu on a RISC-V computer that costs less than $20	AlexKraken	9.371274	-5.6523967	story	3.0	40.0	1666818054	-10.572358
33372199	I don't know exactly how it's mainta	I don't know exactly how it's maintained, but you're 100% right -- it can be modified elsewhereFor example, on my AMD Threadripper system I can make a VM that pretends to be essentially any XeonIt may perform horribly where features/extensions don't line up, but it'll report whatever.For physical devices it's possible too, just not nearly as common	bravetraveler	9.835529	-5.372281	comment	3.0	15.0	1666969198	7.912044
33402859	>5. THE RISC-V ECOSYSTEM IS GROWING 	">5. THE RISC-V ECOSYSTEM IS GROWING RAPIDLYIs there a desktop class CPU and a server class CPU in RISC-V space which can compete for money with X86 and ARM?If not, the how much time it will take?I'm trying to understand what ""growing rapidly"" means."	DeathArrow	9.406946	-5.6449566	comment	3.0	11.0	1667200652	8.1873045
33419458	My own conspiracy theory: Since Nuvi	My own conspiracy theory: Since Nuvia is led by former Apple engineers and Apple doesn't want Qualcomm to have a toe-to-toe fight, Apple pressured Arm to either keep getting the high premium license fee from Apple and destroy Qualcomm and consequently relationships with all other licensees (which includes but not limited to Qualcomm, Samsung, AMD and even embedded market), or Apple would move away and start their new architecture in secret and ditch ARM architecture in long term just like Apple ended its course with x86.This is a very good news for RISC-V and with the recent news of Android RISC-V port upstreamed to AOSP [1] I will say 2024 (not until 2023 Q4 I guess) will be the year RISC-V starting to explode.[1]: https://riscv.org/blog/2022/10/risc-v-celebrates-upstreaming...	stevefan1999	9.403208	-5.5597277	comment	3.0	14.0	1667300148	-10.563053
33420150	> RISC-V starting to explode.I hope 	> RISC-V starting to explode.I hope for that!! But will it be better in regards to not every instantiation needings its very own tiny Linux kernel patch and device trees? Or similar one level down into the embedded world, a true CMSIS like HAL that includes peripherals, not the half-assed attempt of ARM-CMSIS where you still always need to fiddle with vendor's peripheral driver SDKs? That would be so great!	throw827474737	9.402562	-5.666634	comment	3.0	11.0	1667304947	-10.578689
33421130	Apple transitioned from x86 to ARM i	Apple transitioned from x86 to ARM in less than a year.It can be  done, using mix of native applications and emulation. And as long the emulation speed is indistinguishable from native (Like Rosetta 2), end users won't notice it and won't complain.Google & Meta can team up to transition all their apps to RISC-V and that would be 70% of the most used daily apps, other will follow the lead.	Varloom	9.711831	-5.2177696	comment	3.0	13.0	1667310194	-7.644143
33421656	I think Western Digital has been shi	"I think Western Digital has been shipping disk drives driven by RISC-V microcontrollers in volume for years.  I think they won't sell you the microcontrollers, but they definitely aren't the only company doing this, just the loudest.  They do offer their designs as free IP cores https://www.westerndigital.com/en-us/company/innovation/open... and apparently run Linux on some of them: https://www.techinsights.com/blog/wd-licenses-risc-v-cpusThis last article says, ""Since the storage company isn’t a traditional IP vendor, it has worked with Codasip to support its CPU licensees. Including [WD's] Swerv cores and other open-source designs, Codasip has helped customers ship two billion RISC-V chips over the past few years.""  (Emphasis mine.)But I think instead of ""an entity like Google or Apple"","	kragen	9.442796	-5.508612	comment	3.0	12.0	1667312765	-10.463464
33425391	"This core is targeted at ""smaller-is"	"This core is targeted at ""smaller-is-better"" applications with few actual instruction-throughput requirements. If it reaches 200 MHz on a Xilinx KU060, I will be delighted. (That specific clock frequency on that specific part carries heavy hints about what this core is intended for.)With that in mind: the single instruction-per-clock design is for simplicity's sake, not performance's sake. If the execution stage were pipelined, it'd be a different core. If performance is the goal, I'd start by ripping out some of the details that distinguish this core from other (excellent) RISC-V cores."	gsmecher	9.485697	-5.5489235	comment	3.0	13.0	1667327540	-10.597547
26478833	Sounds like you want something along	Sounds like you want something along the line of what Purism is offering. Not sure about ECC ram on a laptop. Haven't seen that one yet.https://puri.sm/products/librem-14/	no-dr-onboard	9.481248	-5.475446	comment	3.0	11.0	1615911441	8.213036
26487526	Designing a RISC-V CPU, Part 2: Succ	Designing a RISC-V CPU, Part 2: Successfully executing (some) instructions	slyall	9.434729	-5.7003665	story	3.0	36.0	1615965072	-10.571522
26505459	I tried an openMOSIX cluster back in	I tried an openMOSIX cluster back in the day when it was fashionable. Cluster-Knoppix could transform a bunch of old pc's in an instant SSI cluster with almost zero configuration needed. Though I know it is not the most efficient way, I miss the simplicity of it.A shell script that simply launches a new process on the most idle node of a network would be enough to get back some of that experience. Live migration would be even better, almost perfect for that. Hope some day I can easily build a bewolf cluster out of my ARM SBC's with an experience similar to the old days of Cluster-Knoppix.	marcodiego	9.824333	-5.580423	comment	3.0	14.0	1616089981	8.693041
26508431	I love writing 6502, or maybe just 8	I love writing 6502, or maybe just 8bit assembler in general . I got hooked after writing some NES games. Writing efficient (NOT “performant”) code that should not be possible is very addictive. Stay away if you value your time	CyberRabbi	9.612604	-5.408456	comment	3.0	14.0	1616108342	-7.350106
26509548	MIX/MMIX are close to how CPUs work 	MIX/MMIX are close to how CPUs work physically.  scheme is close to how computation works theoretically.The pedagogical approach that appeals to individuals tends to align with how they are most comfortable thinking about it.	ska	9.637804	-5.36054	comment	3.0	23.0	1616119323	-1.2192675
26513806	I thought M1 is deprived of hardware	I thought M1 is deprived of hardware support for virtualization? Wouldn't that botch dev workflows considerably?	aasasd	9.924028	-5.221836	comment	3.0	10.0	1616164553	7.5134373
26519937	So you mean, if I am a state actor a	So you mean, if I am a state actor able to kidnap the child of an Intel high level employee... say I m Joe Biden, I can ask Intel to... remote unlock my CPU and read arbitrary memory block ?Or you mean Intel had to physically handle your CPU with a debug cable or whatever ?Cause I really dont feel it s okay that the only safety we have from a newly discovered exploit is that there needs to be another newly discovered exploit :D	xwolfi	9.512857	-5.2350593	comment	3.0	33.0	1616203561	7.7323456
26521516	Can you give an example of a process	Can you give an example of a processor whose microcode was publicly documented?(Barely-public documents like patent filings don't count.)	duskwuff	9.594993	-5.3906245	comment	3.0	15.0	1616226942	7.700173
26521811	For the 6502 there were manuals that	For the 6502 there were manuals that detailed how many clock ticks every instruction takes and what happens during the ticks, which is pretty much the same.	tinus_hn	9.556925	-5.301176	comment	3.0	12.0	1616232255	-7.465246
26526082	my personal rule of thumb is that my	my personal rule of thumb is that my software must be useable at -O0 with address sanitizers on my desktop - so far that has meant that at -O3 it stays useable on raspberry pi-3 level hardware.A few months ago I tried to make a build which targetted ivybridge-level CPUs, it took no more than one day for a few users to report that it didn't work on their machines, turns out a lot of people still rock some old AMD Phenom or Q6600-era machines	jcelerier	9.534465	-5.2932425	comment	3.0	19.0	1616274500	8.038268
26526406	I'm surprised that there aren't any 	"I'm surprised that there aren't any specialised instructions or hardware resources to handle the RISC-V instruction decoding/dispatching. [1]Like, sure, it's not meant to be a fast implementation, but even just a ""mask byte with 0x7C and set PC to that value times 8"" instruction (which in an FPGA implementation is just rearranging the wires) could save 5-6 cycles per instruction.Is it really ""microcoded"" when all you're doing is writing a RISC-V emulator that runs on what looks to be a fairly standard 8 bit CPU?[1] https://github.com/brouhaha/glacial/blob/master/ucode/ucode...."	kiwidrew	9.475993	-5.720752	comment	3.0	12.0	1616278135	-10.518101
26528494	What's the cheapest FPGA that 1) has	What's the cheapest FPGA that 1) has / can fit a CPU, and 2) has high-speed (~5 GHz) IO?In my quick searches, I found that high speed FPGAs are around $10k+, and have much more fabric than I really need or want.	Scene_Cast2	9.119515	-5.304058	comment	3.0	10.0	1616307558	8.196905
26556804	A question to parallel programming e	A question to parallel programming experts. Can we assume that a task that is well seperated to perform on single core is always better than multi-core?I meant using multiple instances working on single core vs. single instance with multi threads.	belgesel	9.732031	-5.4945335	comment	3.0	13.0	1616516461	8.14075
26572051	As someone who has had to endure ove	"As someone who has had to endure over a year of very close to the metal (in this case, imagine centuries old, gnarly, rusty random pot metal, maybe) development on a Renesas platform, I'm tempted to think ""fewer Renesas products? Awesome!!"" but obviously that would be childish.I'm sorry for all the people hurt by this, fire is no joke.Edit: added missing words."	unwind	9.298868	-5.1837654	comment	3.0	10.0	1616615273	3.1076338
26590832	I wonder how many years it'll take f	I wonder how many years it'll take for someone to train a neural network to generate emojis for all possible modifiers, regardless of whether they're currently real combinations.	vanderZwan	9.8013	-6.2709	comment	3.0	11.0	1616758434	-13.954764
26591537	I’m curious: is the no-emoji rule a 	I’m curious: is the no-emoji rule a rule that happens to block emoji or a hardcoded rule? What I mean is: emojis (in UTF-16) have to use surrogate pairs because all their code points are in the U+1xxxx plane. Is the software just disallowing any characters needing two code points to encode (which would include emoji)? Or is it specifically singling out the emoji blocks?	colejohnson66	9.85144	-6.265459	comment	3.0	10.0	1616763349	-13.956439
26591548	Emojis aren’t professional (dependin	Emojis aren’t professional (depending on who you ask) and can be overused (look at a few popular GitHub projects’ READMEs - emojis on every bullet point of the feature list, for example)	colejohnson66	9.7943945	-6.260204	comment	3.0	10.0	1616763413	-13.948409
26592244	Also, looking at the article, they a	Also, looking at the article, they are quite complex!  It looks like handling emojis in a proper manner has a large investment and the payoff is somewhat small.	at_a_remove	9.796665	-6.2625785	comment	3.0	11.0	1616767357	-13.948033
26610846	Is it technically possible to run z/	"Is it technically possible to run z/OS, or some interesting approximation thereof, on a ""normal"" x86 box?Configurations that would be unusable in any sort of production scenario would probably remain interesting."	exikyut	9.796317	-5.1858177	comment	3.0	11.0	1616943195	-7.9906907
26615032	sorry i'm a newb in this space (gett	sorry i'm a newb in this space (getting into fpga dev through chisel): is this basically ltspice? or is it more powerful? i'm guessing it's more powerful because you can specify asics using vhdl/verilog and you can also export the entire circuit (netlist?) to vhdl/verilog. basically i'm wondering if i can use this to start to understand verilog/vhdl since it could function is a graphical frontend. i'm also wondering if there's more mature tool for that same purpose.	anon_tor_12345	9.116745	-5.4864125	comment	3.0	11.0	1616968496	8.570679
26616558	You can name PostgreSQL tables with 	You can name PostgreSQL tables with poop emoji	elchief	9.820093	-6.268449	comment	3.0	14.0	1616979380	-13.892823
26639345	There is no x86 equivalent at that p	There is no x86 equivalent at that price point & form factor.	robert_foss	9.685663	-5.2434697	comment	3.0	24.0	1617133134	-7.7862654
26689145	You think Intel would publish if the	"You think Intel would publish if they had found spectre themselves?Edit: Okay, this reads like a snarky question ala ""as if Intel would have done that!"" but that wasn't what I were aiming for. Sorry about that."	Daho0n	9.584294	-5.511253	comment	3.0	15.0	1617541868	7.7868133
26701393	> IP holder companies will become ev	> IP holder companies will become even more common: they will be used to hold copyright to one API and license it out to customersNot after this precedent, which says that APIs are free.What will happen: Intel licensing the i86 instruction set will not be possible from now on, same for ARM.	amelius	9.514731	-5.263088	comment	3.0	13.0	1617641383	-10.411611
26716584	There is a slow but seismic shift to	There is a slow but seismic shift to AMD within data centers right now.	ryan_j_naughton	9.247221	-5.190588	comment	3.0	12.0	1617738789	7.828519
26726082	> 1) Use ECC memoryNot exactly. When	> 1) Use ECC memoryNot exactly. When I was in telco, where I had this problem was in FPGA's, we had all ECC memory and I never linked any problems to bit flips in RAM. But as I remember, the FPGA's we had were using a type of SRAM cell, but because it's not a memory module the FPGA programming could bit flip. So the product had a checksum function, that read back the program on a cycle and reset itself if the program no longer matched the checksum. So we would see 1-2 crashes / restarts per week in our FPGAs that we believe were bit flips.We then ran an anlysis on any of these that higher than expected error rates to try and identify actually bad hardware and replace them.I think the vendor eventually came up with a way to reprogram the FPGA without just crashing and rebooting the entire b	kevin_nisbet	9.659918	-5.5448575	comment	3.0	10.0	1617808419	8.236942
26728574	Exactly - the winning OS was MS-DOS 	"Exactly - the winning OS was MS-DOS and successors and so the 8086 went to the 80386 because nothing ""famous"" really used the 286 capabilities (Windows 286 aside)."	bombcar	9.6034355	-5.22661	comment	3.0	13.0	1617818741	-7.714879
26735675	Considering AMDs software chops, I g	Considering AMDs software chops, I guess that won’t be coming from them.	AlphaSite	9.257549	-5.1921268	comment	3.0	19.0	1617862890	7.9349313
26735960	That was my hope as well, I still dr	That was my hope as well, I still dream of Xilinx or Intel deciding to 'LLVM' their toolchain down to bitstream, I keep looking with a lot of interest at Lattice and the Yosys project as it is maturing.These companies make money selling hardware, just open the tools and let people use what they want instead of forcing this 'visual programming' paradigm with half-baked IDEs on everyone.My worry with AMD is what will happen to the SoC chips that have actual ARM cores in the fabric (like the Zynq family)?	DoingIsLearning	9.196277	-5.2578073	comment	3.0	12.0	1617865964	-9.404032
26736099	I'd like to see some numbers compari	"I'd like to see some numbers comparing ""backwards compatible"" x86_64 performance with ""bleeding edge"" x86_64. That was something I had never considered, but it seems obvious in hindsight that you cannot use any modern instruction sets if you want to retain binary compatibility with all x86_64 systems."	ulrikrasmussen	9.691742	-5.478143	comment	3.0	19.0	1617867636	-7.742177
26735200	> Most acquisitions of FPGA companie	> Most acquisitions of FPGA companies> any example of a FPGA providerAre there lots of FPGA companies that have gotten acquired in the first place? Only Altera comes to my mind.	dataflow	9.095171	-5.341844	comment	3.0	14.0	1617857375	8.327314
26737577	"I voted ""no"" on this.  I didn't want"	"I voted ""no"" on this.  I didn't want to see Xilinx spend years working on getting acquired instead of working on new chips (which happened to Altera), and I thought that the acquisition price was too low given the current premium that AMD stock carries."	pclmulqdq	9.127603	-5.2745647	comment	3.0	13.0	1617882215	8.11325
26742588	Run Bhyve in FreeBSD jails – The vie	Run Bhyve in FreeBSD jails – The view from inside the forest (2020)	rodrigo975	9.761832	-6.366771	story	3.0	98.0	1617909447	10.493293
26762637	Or when you have a robust CI process	Or when you have a robust CI process in place	imdsm	9.238542	-6.3982487	comment	3.0	10.0	1618071944	6.1332197
26781702	You do realize that RISC-V processor	You do realize that RISC-V processors aren't free right? Making an open source ISA is no small feat, but all they really did was help save some megacorporations a little extra money.Perhaps it will lead to a processor startup, but follow that to its logical conclusion: it takes a huge, profitable company to sustain processor delivery for years. There's a very good reason why only a handful of companies make the top 6 CPU architectures. There's still Synopsys ARC, Renesas, Atmel, PIC just to name a few of RISC-V competitors.In reality, the Berkeley Four just made a handful of semi companies richer. WDC, NXP, NVIDIA, Microchip, etc. don't have to pay Arm for IP if they use RISC-V. Did that really help anything? Meh.	SavantIdiot	9.416442	-5.605336	comment	3.0	23.0	1618246095	-10.536603
26782213	Being ARM has something to do with i	Being ARM has something to do with it. The x86 instruction decoder may be only about ~5% of the die, but it's 5% of the die that has to run all the time. Think about how warm your CPU gets when you run e.g. heavy FPU loads and then imagine that's happening all the time. You can see the power difference right there.It's also very hard to achieve more than 4X parallelism (though I think Ice Lake got 6X at some additional cost) in decode, making instruction level parallelism harder. X86's hack to get around this is SMT/hyperthreading to keep the core fed with 2X instruction streams, but that adds a lot more complexity and is a security minefield.Last but not least: ARM's looser default memory model allows for more read/write reordering and a simpler cache.ARM has a distinct simplicity and low	api	9.68599	-5.4784193	comment	3.0	27.0	1618248082	-7.6830473
26782861	The x86 decoder is not running all t	The x86 decoder is not running all the time; the uops cache and the LSD exist precisely to avoid this. With instructions fed from the decoders you can only sustain 4 instructions per cycle, while to get to 5 or 6 your instructions need to be coming from either the uops cache or the LSD. In the case of the Zen 3, the cache can deliver 8 uops per cycle to the pipeline (but the overall thoughput is limited elsewhere at 6)!Furthermore, the high-performance ARM designs, starting with the Cortex-A77, started using the same trick---the 6-wide execution happens only when instructions are being fed from the decoded macro-op cache.	pbsd	9.710394	-5.6061397	comment	3.0	18.0	1618250777	-7.751075
26784471	I hear what you are saying, and that	"I hear what you are saying, and that is a good point, and I do agree with the: ""Why isn't there an open ISA?""I think the key difference with an OS like Linux and an ISA like RISC-V is that Linux helped literally millions of smart, curious kids get exposed to Unix and tinkering in a OS that wasn't a locked down behemoth: Windows. It changed lives. I don't think it is an exaggeration to overstate the democrization Linux had.However, I don't see RISC-V touching the world in an analogous way. No kid is gonna tinker with an ISA and fab a CPU. Maybe they will stick it on an FPGA? But it seems less accessible.Plus RISC-V's biggest propopent, Patterson, isn't really giving the world anything like Linus Torvald did. Linus busted his butt (and still does!) whereas Patterson flies around getting big "	SavantIdiot	9.431605	-5.5961933	comment	3.0	18.0	1618257876	-10.502015
26787347	Automotive ECUs solve the humidity p	Automotive ECUs solve the humidity problem by putting the boards in a pot of epoxy (talk about overkill!), and as for reliability, all my ancient computers still work just fine, the only things that ever die seems to be the capacitors or leaky CMOS batteries, i'd be happy to buy a car with an intel xeon (ECC PLEASE!) as the ECU.	chubs	9.395614	-5.380969	comment	3.0	10.0	1618278660	8.164798
37604132	idk why you would use a virtual mach	idk why you would use a virtual machine. clustrix did for a while until the instruction dispatch loop dominated profiling. then one particularly clever and energetic engineer just lowered onto x86	convolvatron	9.843629	-5.538019	comment	3.0	15.0	1695329518	-7.6234655
37613411	I mean GH Actions is basically a re-	"I mean GH Actions is basically a re-brand of Microsoft's ""Azure Pipelines"".  As somebody who used all previous incarnations of TFS/VSTS/AzDO build and release pipelines: they are not good at this. This is not a team with a record of success. That Azure Pipelines is moderately usable only happened because they failed literally every other approach they tried.There was a project to allow you to run the pipelines locally so you could do the edit-run-debug loop on your own private environment without committing.  It was, of course, canned.https://github.com/microsoft/azure-pipelines-agent/pull/2687...However, there are tools to improve QOL.  For example:https://marketplace.visualstudio.com/items?itemName=ms-azure...A vscode extension that's syntax-aware.Now, I'll "	Pxtl	8.8050995	-6.3444276	comment	3.0	15.0	1695396909	-8.766181
37638325	Is this still true? It seems like mo	Is this still true? It seems like most IoT stuff has chips that easily eclipse the capabilities of my Amiga1000 and are 32bitbwith hardware floats. Looking around, I'm having trouble finding something that isn't a 32bitHF in my house. Possibly my Keurig machine?  Even using digital instead of an RLC implementation in a coffee machine seems like a waste, but I'm old.	galangalalgol	9.645713	-5.1993136	comment	3.0	12.0	1695600116	7.957525
37677484	It would be quite sad if we've gotte	"It would be quite sad if we've gotten to a point where saying ""I think my patch is better than yours"" from a domain expert to a newbie is considered humiliating and violating.Talking about utilitarian consequences, Linus had been way worse and while I fully agree from a moral perspective that his most extreme behaviors were bad, from a purely utilitarian perspective that didn't prevent Linux from being one of the most successful OSS projects out there."	hnfong	9.368688	-5.842179	comment	3.0	11.0	1695833468	4.26459
37707696	UTM is pretty coolQEMU's x86 emulati	UTM is pretty coolQEMU's x86 emulation is outrageously slow compared to Rosetta2. Is it theoretically be possible to hook Rosetta2 for full x86 machine emulation (like oldschool vmware did before VT)?	gorkish	9.83297	-5.3661156	comment	3.0	21.0	1696009292	7.6248126
37709597	Yeah, I were programming 6502 assemb	Yeah, I were programming 6502 assembly at 12. Not that easy to do for a 12 year old now with today's computers	Max-q	9.661266	-5.4709554	comment	3.0	11.0	1696018545	-7.3739867
37716578	Many CPUs have claimed to be competi	Many CPUs have claimed to be competitive with x86, but it rarely pans out. Being able to match the IPC on a microbenchmark is good, but they often struggle with poorly tuned, low bandwidth cache and memory controllers.	Scaevolus	9.557143	-5.232987	comment	3.0	20.0	1696088915	7.8804994
37716910	How flip-flops are implemented in th	How flip-flops are implemented in the Intel 8086 processor	Tomte	9.588147	-5.3671536	story	3.0	146.0	1696090740	-7.39149
37717823	> However, the enable input is a fai	> However, the enable input is a fairly obscure feature for a flip-flop component; most flip-flop chips have a clock input, but not an enable.The clock-enable is actually really common for flops in an integrated circuit; it might have been unusual in the days of discrete TTL, but as the article concedes, practically every cell library or FPGA fabric you can find will have it.Not only is it commonly present, but the CE is used all the time by the synthesis/technology-mapping process, indeed any time you write an `if` without an `else` within a clock-edge sensitive process, the tool is probably going to use a CE.On an FPGA, the only other option is a LUT-based feedback mux which can be undesirable for various reasons, including the use of additional routing resources if the fabric has no ded	denotational	9.394813	-5.2379136	comment	3.0	11.0	1696095604	8.4025
37751190	Hmm. If this memory is faster than D	Hmm. If this memory is faster than DRAM, wouldn't it be quick to test, say, ten trillion write/erase cycles?Why stop at 10M? Is the erase operation really slow?	runeks	9.785313	-5.318701	comment	3.0	16.0	1696337581	8.011244
37751435	The paper says they tested the durab	"The paper says they tested the durability of the ram with a 5ms program-read-erase-read loop. Meaning each time they program-read-erase-read, it takes 5 milliseconds.Ten trillion cycles would take over 150 years.I'm guessing a silicon lab doesn't have ""the rest of the computer"" that would allow them to run this ram at full speed constantly. This UltraRAM isn't something they can just slot into their motherboard."	dahfizz	9.725359	-5.185712	comment	3.0	13.0	1696339071	7.989043
37768896	Whenever I see talk about Intel's FP	Whenever I see talk about Intel's FPGA unit, I link back to an invention I submitted to Intel while I was an intern there [0]. I went through the patent pipeline, but to my knowledge they never did anything with it. This was during the excitement of Intel's original acquisition of Altera.In fairness, I never mocked up a true enough implementation in Verilog to get an idea of real world speedup, and even now, I'm not sure exactly what operations you could see real gain with from small reconfigurable fabrics near the CPU. Still, I liked the elegance of having L1-L3+ FPGA's for speeding up operations of increasing levels of complexity, and I figured programmers smarter than me would find creative ways of using the FPGA's with the added instructions.[0] https://patents.google.com/patent/US1031	throwaway4590	9.0872755	-5.400045	comment	3.0	14.0	1696441526	8.248152
37769225	Every time I see an FPGA article, I 	Every time I see an FPGA article, I feel a little sad that Tabula[1] didn't make it -- 1.6Ghz clock and reprogrammable on the fly. RIP.1. https://en.wikipedia.org/wiki/Tabula,_Inc.	thenobsta	9.102968	-5.340415	comment	3.0	12.0	1696442860	8.329315
37770970	They did not ignore the low end by c	They did not ignore the low end by choice.The entire story of Altera inside Intel can be summarized as:Intel fabs make amazing promises about process performance and availability. Altera builds their product stack on that. In the end, the fabs fail to deliver either performance, or sufficient amount of manufacturing capability. Now Altera has to pick which products they want to ship. They obviously can the low end. Even the high end that ships is horribly late, because of manufacturing issues.There would have been massive demand for the combined Intel+Altera products. Many large customers built their future based on the marketing promises Intel made, and when they couldn't deliver, those customers had to redevelop everything on something else. As an example, look up Nokia Reefshark.	Tuna-Fish	9.19887	-5.2183685	comment	3.0	10.0	1696450187	8.053778
37773074	> nobody really wants FPGA fabric on	> nobody really wants FPGA fabric on a CPU.Not true... Xilinx sells a lot of their Zynq, MPSoC, and RFSoC chips. Though I guess those are more CPU on an FPGA.	rthomas6	9.13256	-5.319542	comment	3.0	15.0	1696461875	8.207702
37789702	US-China tech war: RISC-V chip techn	US-China tech war: RISC-V chip technology emerges as new battleground	_bohm	9.342728	-5.6481867	story	3.0	20.0	1696594563	-10.536607
37796610	It's odd how arguably the most relev	It's odd how arguably the most relevant of the lot was fairly obscure at the time: Acorn computers, creator of the ARM processor.https://en.m.wikipedia.org/wiki/Acorn_ComputersYou can run RISC OS on a modern ARM like the Raspberry PI - it gets weirder the longer you work with it - menu items with input boxes and other GUI widgets, a strange DOS VMS UNIX hybrid CLI that appears at the bottom of the framebuffer, scrolling your graphic screen up as you type and full of terminology that's incredibly excessively British.Go to 10 minutes to see the shell https://youtu.be/oL4w3AK6Qpw?si=Vdu2ur1fM0N9Tl2X&t=10m and http://www.riscos.com/support/users/userguide3/book3b/book3_... for the documentationAlso see 8:50 for the British terminology	kristopolous	9.497097	-5.5503607	comment	3.0	23.0	1696627369	-10.450521
37797011	ISA certainly isn't the most importa	"ISA certainly isn't the most important factor, but your ISA has to be a good enough baseline. History is littered with ISAs that made bad enough choices that were limiting at the time (VLIW, Itanium) or handicapped future generations couldn't  (MIPS delay slots).Arguably x86 and arm are the ""RISCiest CISC"" and ""CISCiest RISC"" architectures, and have succeeded due to ISA pragmatism (and having the flexibility to be pragmatic without breaking compatibility) as much as anything else."	cpgxiii	9.5700655	-5.502783	comment	3.0	25.0	1696630158	-7.7381434
37798447	"> ""require any American person or co"	"> ""require any American person or company to receive an export license prior to engaging with PRC (People's Republic of China) entities on RISC-V technology.""How would that end up working?I've seen situations in which exports restrictions came up, and which resulted in design or manufacturing being restructured, so that more work was shifted to be done in the restricted country.  Which also meant that more know-how was developed in the restricted country.  Which I don't think was the (ostensible) intended outcome.  It might've had short-term benefits for some companies, though."	neilv	9.354773	-5.660033	comment	3.0	15.0	1696644803	-3.7768607
37799041	What is the incentive for big giants	What is the incentive for big giants like Intel, Qualcomm, and Nvidia to adopt RISC-V? Isn't their moat their in-house chips?I guess it is more about companies which don't have their own proprietary chips or companies in developing nations.	aiunboxed	9.353403	-5.6221504	comment	3.0	11.0	1696653342	-10.566272
37814829	In other news the US is looking to l	In other news the US is looking to limit China’s access to RISC-Vhttps://www.reuters.com/technology/us-china-tech-war-risc-v-...Discussed herehttps://news.ycombinator.com/item?id=37798178	miohtama	9.340352	-5.6784067	comment	3.0	23.0	1696802903	-10.597794
37815195	The US is clearly targeting Google r	The US is clearly targeting Google releasing Android for RISC-V, or Qualcomm releasing RISC-V chips which can run RISC-V Android.RISC-V has been an 'obvious' choice for Android for a long time - particularly for lower end devices or set-top-box type designs where the vendor has control of all the software (no third party binaries that need arm emulation).The fact an official RISC-V port is soon to be released, I suspect is the reason behind this activity now.	londons_explore	9.391997	-5.6336136	comment	3.0	11.0	1696806044	-10.564514
37827431	> ”Unfortunately, when the AMD Ryzen	"> ”Unfortunately, when the AMD Ryzen 7000 ‘Raphael’ CPUs were launched along with the brand new Socket AM5, all mention of ECC support was gone.”Had no idea that 7000s series doesn’t official state support
of ECC."	tiffanyh	9.386416	-5.456806	comment	3.0	10.0	1696899534	8.211835
37828711	Oooh, nice find. Now to find some 52	Oooh, nice find. Now to find some 5200MHz (or more) Unbuffered ECC dimms...	bick_nyers	9.519822	-5.3960347	comment	3.0	10.0	1696914638	8.182129
37830748	I feel the need for ECC is a bit ove	I feel the need for ECC is a bit overstated, probably confused by listening too much to people in the server space.  In servers, ECC is critical because servers simply have more RAM than PCs do.  You can easily find systems with 32 sticks of RAM. If you roll 32 dice, odds of a rare freak error is a lot bigger than if you roll 2.  It's the same reason why you probably don't need RAID on a computer with one or two disks.  Stick 48 disks in a machine however, and you're a fool to go without it (or a plan at least).  It's why you don't need an automatic fire suppression system in or homelab, because the odds of a fire in one or a few PSUs is fairly small, but stick a few thousands in a room and suddenly it's a very real problem.That, and most memory problems in PCs tend to be from dodgy overcl	marginalia_nu	9.488371	-5.5378385	comment	3.0	14.0	1696937060	8.226378
37833350	I don't believe Valve currently targ	I don't believe Valve currently targets any ARM systems with any of its games.	mminer237	9.5500345	-5.1845827	comment	3.0	11.0	1696951726	-7.723379
37845628	What's the current status of 64-Bit 	What's the current status of 64-Bit on Raspberry Pi? My knowledge is pretty outdated, I remembered that initially, even the Raspberry Pi 4 was still running 32-Bit Raspbian and that 64-Bit was a hack/experimental. Is that all resolved and done and dusted now, and we have a full 64-Bit system? Or will that require Bookworm?	MenhirMike	9.854554	-5.265963	comment	3.0	10.0	1697037690	-7.893033
37847178	In what way is RISC-V more suited fo	In what way is RISC-V more suited for writing assembly than, say, AArch64?From what I know of each, they're fairly close together, but a few small things like the clever encoding of logical immediates (e.g. and x1, x1, 0x3fff70000000 is a single instruction; you don't need to waste a register to load the immediate) in AArch64 make it seem friendlier to me.	remexre	9.537556	-5.7871637	comment	3.0	14.0	1697044075	-10.521893
37847698	100%. RISC-V at least requires a mac	100%. RISC-V at least requires a macro assembler of some kind to be more pleasant.That's not to say RISC-V isn't a good ISA. The whole point of RISC is to be a good target for compilation, not humans.	cmrdporcupine	9.441073	-5.7238936	comment	3.0	11.0	1697046080	-10.554414
37849414	The servers in development have huge	The servers in development have huge i-caches and gobs of memory bandwidth so compressed instructions don't really benefit there.   (They are much more appropriate in embedded designs.)The real issues are two-fold: Compressed instructions consume 75% of the instruction encoding space.  The thought is that without compressed instructions occupying that space, more 32-bit extensions can be added before we need to use longer instructions.Secondly verifying designs which use unaligned instructions is difficult because there are many different cases to consider (especially instructions crossing cache lines and pages).  The verification thing comes from a particular vendor who already design very high end chips - you are likely to have several in your possession - and I have to assume they know 	rwmj	9.792912	-5.753342	comment	3.0	13.0	1697053853	7.874001
37852629	>highly relevantIt is a SIMD extensi	">highly relevantIt is a SIMD extension, despite Vector era (RISC-V Vector 1.0, ARM SVE2). Far from relevant.>desktop CPUsWill too be RISC-V. Not far from now.Some chips (likely from Intel and AMD) will offer ""x86 acceleration"" to run legacy software, for a transitional period lasting a few years."	snvzz	9.454373	-5.5832777	comment	3.0	17.0	1697075773	-10.459932
37852654	And vector is a misnomer.ARM SVE2 an	And vector is a misnomer.ARM SVE2 and RISC-V Vector 1.0 are vector extensions. AVX is just SIMD with marketing.	snvzz	9.483399	-5.7467723	comment	3.0	17.0	1697076007	-10.5219
37853279	> Microsoft and Intel could literall	> Microsoft and Intel could literally do this today on existing hardware by trapping unsupported instructions and then having the OS scheduler promote the process but they don't because it takes so stupidly long and requires an immense burst of resources.Why not just determine the right cpu to run on by examining the arch of the binary? Waiting for an instruction failure seems ridiculous.	diogenes4	9.676293	-5.4583874	comment	3.0	18.0	1697082210	7.905404
37852038	"Intel: ""We've unified the many diffe"	"Intel: ""We've unified the many different vector instruction sets into a single standard!""Me: ""Page one of the unified standard lists its many variants, which seem to be the same number that existed before?""Intel: ""We've renamed them all! See! Unified!"""	jiggawatts	9.597762	-5.53367	comment	3.0	20.0	1697069695	7.5421576
37853867	Executable formats like ELF and PE a	"Executable formats like ELF and PE already allow pretty much arbitrary tags - just define one that says ""This executable uses instruction set extension X"" and you don't even need the cost of a trap or modifying the file/filesystem metadata at runtime.Sure, old apps might not then have that flag, but old apps aren't using avx512 either."	kimixa	9.664734	-5.563796	comment	3.0	12.0	1697090068	8.014348
37879332	AMD forgot to detour the VAC integri	AMD forgot to detour the VAC integrity checks too.	no_time	9.298102	-5.21829	comment	3.0	33.0	1697277884	7.8712497
37881132	> Nobody tests, CI automation is unh	> Nobody tests, CI automation is unheard of.This seems like a very dangerous attitude from a plane maker, a drug maker, and a healthcare data provider.	MattGaiser	9.336256	-6.3635044	comment	3.0	11.0	1697296559	5.972279
37881589	If I’m understanding the feature you	If I’m understanding the feature you’re talking about, that’s not an automatic reaction based on expressions (like this article/feature). That was shown because someone clicked the thumbs up emoji on their Meet UI.I think these are completely different things.	jader201	9.78902	-6.2639146	comment	3.0	13.0	1697299544	-13.947211
37885835	It's this slow not because of the MC	It's this slow not because of the MCU, though, but because the author is emulating another architecture in software. It would be fairly sluggish on a PC too.This is both very impressive in terms of the sheer amount of work that went into that, but also a tiny bit disappointing because it's not really Linux running natively on an 8-bit chip.I suspect that native Linux is technically doable and would be a lot faster, but would require a lot of fiddling with the kernel, to the point where you'd be rewriting as much as you're keeping. A lot of assembly shims to port, gotta get rid of all the MMU code, etc. AVR chips in particular also also a bit weird because they follow the Harvard architecture - separate addressing for code and data, which is not something the Linux kernel is made for.FWIW, 	PumpkinSpice	9.77305	-5.284172	comment	3.0	14.0	1697331980	-8.270351
37894487	This chap has also built a 8088 PC c	This chap has also built a 8088 PC clone. I'm just wondering why not a 8086?	mrlonglong	9.608616	-5.227989	comment	3.0	29.0	1697413783	-7.5291076
37894886	Is the 8086 so different from the 80	Is the 8086 so different from the 8088 that it requires a different BIOS?	vasac	9.597646	-5.205958	comment	3.0	17.0	1697418545	-7.5412645
37900236	Per my last paragraph, I am not conv	"Per my last paragraph, I am not convinced about any of them.One of these days I really need to post my ""ideas for languages"" that I've got banging around on my hard drive, but one of them is ""a language that deals with the increasingly heterogeneous nature of the computer"". You've got the CPU, the GPU, efficiency cores, whoknows what else in the future (NN cores), and it's only a small hop from there to consider other computers as resources too.Full disclosure: I have no idea whatsoever what this looks like. Especially in light of the fact that you need to build not just for the exact machine you're developing on but for machines in the future as well. Some sort of model of what is being computed and some guestimate at the costs? (Something like an SQL query builder where you declare your "	jerf	9.774037	-5.4129095	comment	3.0	10.0	1697466103	8.082571
37915348	Ordinarily I'd agree, e.g. within a 	Ordinarily I'd agree, e.g. within a company or team, I would not accept this kind of tone, it's not how peers communicateBut it's also not Torvald's job to tutor here or be a mentor. He has limited time in the day. And the company doing the proposal here is Google. They probably should have come in with a more-better-finished product.The consequences to design errors in kernel syscalls are rather intense.	cmrdporcupine	9.516575	-5.809016	comment	3.0	18.0	1697551902	-8.149179
37916118	What do my HN colleagues think about	"What do my HN colleagues think about the assertion by some in the US congress that RISC-V is a clever conspiracy by China to dodge sanctions and get clever American universities to do their research for free?While I think ""information wants to be free"" and that stopping CPU collab is like trying to stop encryption in the 90s, I can't help but wonder that RISC-V neuters attempts to lock China out of military AI advancements.Then again, don't they have x86 factories there? If China has a factory, doesn't the government pretty brazenly learn trade secrets from it?---edit to Nickik, since HN has throttled me for more than an hour. Gotta get around the system somehow, since the goddamned rules are so opaque. I'll move this to a comment when I am in the site's good graces again.---Highlight wher"	unethical_ban	9.337171	-5.6706953	comment	3.0	10.0	1697554567	-10.598606
37916683	The issue isn't directness. The issu	"The issue isn't directness. The issue is repeatedly taking needless swipes at the author's competency or intent (""worthless"", ""complete nonsense"", ""totally illogical""), when Linus' criticisms are really mostly just small (if valid!) gripes about naming conventions and readability.This is particularly funny because I remember that several years ago, he publicly apologized for being abrasive and promised to get better... but old habits die hard.He has every right to run the project as he sees fit, but then, people here have every right to be mildly cranky about that too."	PumpkinSpice	9.283497	-5.90083	comment	3.0	12.0	1697556567	4.2119865
14697085	Hi,I do use git tags but I also incl	"Hi,I do use git tags but I also include version numbers in my commit messages so that I can easily determine in which version a given commit was published.
I find it pretty useful. I know some people prefer to create a dev branch, then squash merge, but sometimes you got multiple features and I feel it is more convenient to separate them into multiple commits that will belongs to the same release.
Do you have some other suggestions, I would be interested :)Concerning epoll/poll, the networking part was first based on it.
However, the poll implementation on windows is buggy and thus it is more advised to use select on windows apparently... So to keep consistency between unix and windows versions, I decided to switch back to select for both platform for now.
I'm planning to switch back to po"	cylix	8.745307	-6.3318048	comment	3.0	12.0	1499188743	-11.8057165
14695537	Even without bytecode and VMs, a x86	Even without bytecode and VMs, a x86 machine has virtually no advantage over $otherARchMachine in these niches.	dom0	9.64906	-5.258428	comment	3.0	34.0	1499172560	-7.762384
14708575	But once again they have included a 	"But once again they have included a second ""processor"" on each chip with a bunch of restricted backdoors that can not be removed [1]. There have already been bugs [2] and exploits [3] found and therefore no Intel or AMD chip can be used if you care about security and/or privacy.If I think Microsoft isn't free enough for me, then I can remove Windows and install Linux (or BSD). If I think Chrome is sending my data to Google, then I can remove it and install Firefox.But if don't like that Intel can take over my PC at any time, watch my screen, log my keystrokes, prevent me from installing another operating system, manipulate what I see on the screen, and much much more, then there is nothing I can do. I can not remove the second chip or remove the code. I must have a proprietary blob [4] (of"	turblety	9.429236	-5.2361555	comment	3.0	11.0	1499323365	7.7980614
14709787	I have started to use emojis almost 	I have started to use emojis almost excessively in situations where there is risk of misinterpretation due to my terseness. It comes across a bit unprofessional, but I prefer that over being considered rude or lacking empathy. I believe the latter impression is harder to recover from.	jacobr	9.783065	-6.26455	comment	3.0	10.0	1499343675	-13.956734
14712068	My dad cured me of that by pointing 	"My dad cured me of that by pointing out that if I had that third arm there would always be a project where I'd want a fourth anyway.  It's the same argument that Danny Hillis gave me for the 1-bit ALU in the original connection machine design: ""well, what number is correct?  This way you can build any size you want"" which was almost true.However the second thumb is a great idea.  I have long though that if there were some sort of god it must have been quite mean to choose five as the number of digits.  Six, with an extra opposable thumb on the opposite side, would have been much much better (and even the same architecture but with a total of four would have been superior to the current setup).Also annoying was turning the knobs for pi and e to irrational values."	gumby	9.66912	-5.461332	comment	3.0	10.0	1499361726	-7.6132193
14723677	"The difficulty is ""prove you did it "	"The difficulty is ""prove you did it right"". I'd guess that only works for cheap-to-verify (trapdoor""?) functions. However, Intel SGX does enable this. You would need an SGX-attested renderer, but the output would include a signature on the inputs in addition to the actual output image. You could verify this signature was made by the SGX-secured renderer code, then you'd know it executed as designed (i.e. the person didn't just draw an image in paint).SGX would also enable hidden contract data. Right now, you can't publish a contract like ""guess my weight and win $100"", because the guess code is public (has to be, for miners to exec it). With an SGX-enabled system, this is now totally doable. (Though, you must trust Intel, and assume hackers can't reverse engineer the Intel chips with magic"	MichaelGG	9.533384	-5.1931	comment	3.0	14.0	1499479814	-5.6821294
14733815	Linus has the proverbial moral autho	Linus has the proverbial moral authority to bootstrap an init system and the technical skill to pull it off. Amusingly, this strikes me something like the chairman of the Federal reserve hinting that he thinks interest rates are too high. Hopefully, the systemd developers will take notice and clean up some of their act. (Not to insinuate anything. They have widely known problems in playing nice with other projects, taking feedback, etc.)	theonemind	9.625868	-5.8974724	comment	3.0	17.0	1499668361	4.2930727
14738136	> Today the longest-running configur	> Today the longest-running configuration takes over 2 hours.I'm curious which configuration that is, and how it could be accelerated.	JoshTriplett	9.833503	-5.20254	comment	3.0	19.0	1499708922	-8.723504
14743611	When you're running megabytes of pro	When you're running megabytes of proprietary code on numerous processors in your laptop completely out of your control, why do you focusing on Intel ME? What about your network card which runs dedicated processor with some kind of operating system, executing firmware and processing every network frame before your OS receives it, for example?	vbezhenar	9.464872	-5.186365	comment	3.0	10.0	1499776932	7.83607
14746784	This looks like a solid if not amazi	This looks like a solid if not amazing comeback of AMD into the server market. Sure, single threaded performance may not beat Skylake-SP, nor will the LINPACK (and most wide SIMD/FMA-heavy works) performance, but that still leaves most of the HPC/engineering applications that either do not have workload that lends itself to heavy vectorization or are simply not tuned for it (and won't be overnight).All in all, whhen you have a server that seems so close in performance to Intel for less money and consuming less power, I can't imagine that EPYC won't see broad adoption and Intel won't be squeezed.I'm glad AMD is back and there is renewed competition in the server market!	slizard	9.304905	-5.1854496	comment	3.0	18.0	1499798318	7.9552817
14746862	Looks like die-to-die latency isn't 	"Looks like die-to-die latency isn't all that great on EPYC, as expected:""What does this mean to the end user? The 64 MB L3 on the spec sheet does not really exist. In fact even the 16 MB L3 on a single Zeppelin die consists of two 8 MB L3-caches. There is no cache that truly functions as single, unified L3-cache on the MCM; instead there are eight separate 8 MB L3-caches.""Also:""AMD's unloaded latency is very competitive under 8 MB, and is a vast improvement over previous AMD server CPUs. Unfortunately, accessing more 8 MB incurs worse latency than a Broadwell core accessing DRAM. Due to the slow L3-cache access, AMD's DRAM access is also the slowest. The importance of unloaded DRAM latency should of course not be exaggerated: in most applications most of the loads are done in the caches. S"	DuskStar	9.719417	-5.328608	comment	3.0	11.0	1499798844	8.063963
14747371	It will take some time until that qu	It will take some time until that question can be answered. For some it will likely matter a lot, e.g. engineering or HPC applications that rely heavily on dense solvers. however, even for non FP-heavy workloads (like integer-heavy stuff say databases) the wider SIMD with the new mask and blend instructions [1] _could_ make a significant difference. Still, in many cases significant difference will likely be seen only after careful tuning!Also note that Intel is refining their pesky market segmentation game: the full  2x 512-bit FMA/cycle is only available on high-end CPUs, only lower-end it's only 1 FMA/cycle and you still get the extra AVX512 clock throttle hit [2]!I really like the fact that AMD stayed away from such devil-in-the-details feature-based market segmentation![1] https://soft	slizard	9.455845	-5.536916	comment	3.0	10.0	1499802464	8.068823
14747374	Either: Linus's behavior is fine and	Either: Linus's behavior is fine and this is expected in the FSF communityORWe burn all those MLs into the ground.Terrible culture in these projects is basically how everyone is conditioned to interact from the top down. We can't pick and choose which assholes are okay and which are not. We either push back on all of them to make a more professional environment or we accept this is what we want.	KirinDave	9.278126	-5.891908	comment	3.0	24.0	1499802497	4.2526197
14756849	Dell Precision 5520 with a Xeon supp	Dell Precision 5520 with a Xeon supports ECC memory (up to 64G DDR4) and it's the same size as an XPS.	dijit	9.450735	-5.4860597	comment	3.0	25.0	1499894888	8.2490425
14761957	Not a lot. Most software isn't very 	"Not a lot. Most software isn't very parallel. I think 2 fast cores would be the sweet spot for most people, for the foreseeable future.I think a question like this will get very biased answers, since most people aren't very inclined to post ""paid a lot, don't really use it"" and rather stay mum.BTW taken out of context, ""people with many CPU cores"" would mostly consist of 8-core Android phone owners. They also do little with all those cores."	fulafel	9.57655	-5.297558	comment	3.0	10.0	1499958834	7.927581
14762357	Compare what you can get today: an I	Compare what you can get today: an Intel CPU without a hyperthreading problem (fixed in a microcode update months back) or an AMD CPU with a hyperthreading problem (being investigated by AMD for 3 months).Edit: thanks, s/unacknowledged/being investigated/	ivank	9.501643	-5.294363	comment	3.0	10.0	1499961358	7.9927254
14762867	The typical PC-building online commu	"The typical PC-building online communities have been mindlessly drumming the line ""Only servers need ECC"" into each other's heads for so long that they'll probably end up refusing it, even when it's offered to them on a plate."	frou_dh	9.456162	-5.519586	comment	3.0	16.0	1499964724	8.301085
14761839	I'm still waiting for a more diverse	I'm still waiting for a more diverse set of synthetic and real-world benchmarks.  It'll be interesting to see how IPC performance holds up with Threadripper, however I think the most interesting debate will be whether the 1920x or lowest end Epyc CPU are a better buy.Unfortunately, even as an enthusiast $799 is more than I'm willing to spend on a CPU.  I'm also still hard pressed to build a Ryzen 1700 System since I can purchase an i7 7700 from MicroCenter for about $10 less than the Ryzen part (and have equal or better general performance with notable better IPC).	arcaster	9.330631	-5.2013845	comment	3.0	15.0	1499958170	7.8961377
14763914	On my system if an uncorrectable err	On my system if an uncorrectable error were to happen the system goes into a 'machine check' state (a halt). In theory, the BIOS supports 'chip kill' which is that it reboots with a bit set to not use that specific chip in the DIMM. I've never seen that happen on my desktop but in the data center when it happened a system that should have 128GB of memory would reboot and come back with less than the full amount (as expected by the DIMMs plugged in) reported by the BIOS.	ChuckMcM	9.819802	-5.482958	comment	3.0	11.0	1499970984	8.182662
14763604	I manage many servers with >=384GB R	I manage many servers with >=384GB RAM. They maybe detect an error once a year, with several never reporting an error in its life. If I noticed a server reporting errors more than twice a year I'd probably swap its memory, and if that didn't fix the problem I'd probably replace the server.	vel0city	9.843539	-5.507203	comment	3.0	11.0	1499968996	8.2614565
14772180	i am curious why traders don't look 	i am curious why traders don't look to labview for some of their work. multi-core support is inherent to the language and fpga programming is just a step away with the same language. crunching away on things in parallel is what it's great at.	nikofeyn	9.128921	-5.347336	comment	3.0	16.0	1500057535	8.357081
14773644	Are there Intel specific instruction	Are there Intel specific instructions that may not be implemented on the AMD processors?  I do allot of EM simulation, and my software installs the Intel MPI Library:https://software.intel.com/en-us/intel-mpi-libraryWill I take a performance hit; maybe that question can only be answered by the software developers?I know the VOLK library used by GNU Radio is used to abstract away vector operation, so your code can take advantage of specific instructions on Intel, ARM, etc.	madengr	9.504922	-5.479784	comment	3.0	21.0	1500070499	8.100168
14786678	Based on some of the prior documents	Based on some of the prior documents, I believe they are:MACRO-32 (The compiler for VAX assembly), C++, AdaMACRO-32 works at a lower level than the other languages, and needs to generate assembly directly instead of an IR. The C++ compiler is being replaced by Clang, and the previous VMS releases used Adacore's compilers, so Adacore will need to be convinced to port their compiler to x86 VMS.	ch_123	9.692383	-5.803524	comment	3.0	10.0	1500281100	-7.719083
14794243	I looked over the code to guage how 	I looked over the code to guage how big this 32-bit problem is. It's going to be a lot of work. 32-bit is hardcoded everywhere. Compiler, linker, libc calls.So, on one hand, there's massive cross-platform support. On the other hand, those platforms are all obsolete, or about to be. Even the mobile and embedded ones have all gone 64-bit.Maybe backwards compatibility will be maintained for a few years. But it ruins the embed-red-in-C story already.	m-j-fox	9.9100275	-5.378458	comment	3.0	11.0	1500351664	-7.770297
14801496	It seems to me that the main fundame	It seems to me that the main fundamentally new idea of the Mill is the deferred load mechanism described in the Memory talk. They claim that it can complete with OoO execution with a much simpler implementation. It does require some of the other Mill mechanisms for full efficiency, e.g. it uses the belt to defer loads across calls.If this mechanism doesn't work as expected with real software, then there's no reason to think that the Mill will fare any better for general-purpose computation than any earlier VLIW/EPIC machine, for all the same reasons as before. And in that same talk they make some claims about OoO that seem a bit naive. The state-of-the-art has evolved a lot since the company was founded in 2003.	cwzwarich	9.676038	-5.706765	comment	3.0	13.0	1500428071	8.09449
14801977	>> One of the perennial questions th	">> One of the perennial questions that I've never received a satisfactory answer to is: Where's the ILP?Anyone with any experience in the field can come up with an instruction encoding structure that produces more instruction level parallelism in theory. It's usually a simple mental exercise to determine that such a CPU isn't implementable in the ""real world."" That's exactly what is happening here with Mill except they have really dived off the deep end and do so much handwaving that it's hard to tell exactly how mill is supposed to work.Take branch prediction: Last time I checked they wanted the processor to load what they described as an ""exit table"" associated with a module of code that serves as a branch prediction unit. The problem is that this doesn't work at all.  You can't have a C"	cpleppert	9.67915	-5.6544156	comment	3.0	13.0	1500438055	8.059612
14806418	Yes, silicon implementation provide 	"Yes, silicon implementation provide the JTAG, but it's very likely their implementation will not be reusable for FPGA project (including JTAG debug things) because of their over complicated (but powerfull) solutions which would consume way to much area and restrict the FMax.Then this specific VexRiscv ecosystem also provide a basic SoC with an multi master AXI4 inteconnect, SDRAM controller, embedded ram, APB3 interconnect, some slave like GPIO, UART, Timer, VGA. It's not incredible, but it's already a starting point ^^
See https://github.com/SpinalHDL/VexRiscv#briey-soc"	Dolu	9.305443	-5.425301	comment	3.0	22.0	1500487380	-5.4288626
14806757	Kinda off-topic. SpinalHDL is the se	Kinda off-topic. SpinalHDL is the second HDL, that I come across, being implemented in Scala. It seems that every popular programming language has at least one HDL implemented in it these days. Any obvious reasons for this trend?	quigonjinn	9.09697	-5.494705	comment	3.0	13.0	1500489765	8.641846
14842435	"Maybe ""The software currently requir"	"Maybe ""The software currently requires an AVX2 and FMA capable CPU, e.g. Haswell."" holds the secret? Some kind of experimental test bed for using CPU vector instructions to speed up compression/decompression?Disclaimer: I have no idea what I am talking about. For all I know possible use of these instructions is already a feature of HEIF and that statement is irrelevant."	mattnewton	9.674643	-5.5709915	comment	3.0	10.0	1500928659	7.8908424
14847988	Because no one looks at an Arduino o	"Because no one looks at an Arduino or a Raspberry Pi and says, ""I would pay top dollar for a version of this thing that has x86 instructions."""	gonewest	9.681797	-5.297176	comment	3.0	10.0	1500993212	-7.7635007
14868693	Are there any performance benchmarks	Are there any performance benchmarks associated with building software? Similar to your point, gaming benchmarks are totally meaningless to me, but I would love to learn about the difference in time it takes to build some large software (e.g. Chrome) on various cpus.	cbcoutinho	9.823044	-5.3637753	comment	3.0	11.0	1501184439	7.8390427
14871259	I would guess PC is most recently re	"I would guess PC is most recently retired instruction? Or would it be not retired? Although that is an interesting scenario.    slow eax, ebx
    fast ecx, ecx

Assuming slow and fast always finish at the same time, will the profiler ever see the CPU executing slow?"	tedunangst	9.567433	-5.1982937	comment	3.0	16.0	1501206203	7.838925
14872819	tl'dr of the slides:    Found on one	"tl'dr of the slides:    Found on one processor... instruction
    Single malformed instruction in ring 3 locks
    Tested on 2 Windows kernels, 3 Linux kernels
    Kernel debugging, serial I/O, interrupt analysis seem to confirm
    Unfortunately, not finished with responsible disclosure
    No details available [yet] on chip, vendor, or instructions

He's found a new f00f bug, winter 2017 is going to be interesting :)"	_wmd	9.777927	-5.500222	comment	3.0	16.0	1501230213	7.8617864
14932909	Not the first bug reported for Ryzen	Not the first bug reported for Ryzen. Wasn't there a couple of others too, one with linux locking up and another triggered by the ocaml compiler emitting opcodes refering AH/BH/CH/DH registers in a tight loop?Edit: Sorry, the ocaml bug was Intel Skylake. It's interesting how so many new CPUs have breaking bugs. Feels like it's been quiet since the original pentium F00F bug and then all of a sudden everyone's new CPUs break.	0x0	9.399181	-5.257269	comment	3.0	11.0	1501885890	7.9145923
14937574	I have the same with a Kaby Lake lap	I have the same with a Kaby Lake laptop btw (XPS 13) where random segfaults happen. This is with the very latest BIOS update from a day or two ago. Modern CPUs suck.	sofaofthedamned	9.503024	-5.29432	comment	3.0	22.0	1501963072	7.849044
14937714	Note that it appears that a large nu	Note that it appears that a large number of the segfaults which Michael (phoronix) is reporting may be coming from a software issue.  In particular, people on the phoronix forums are reporting that conftest segfaults are a known software issue and also one has reported that he was able to reproduce the conftest segfaults on an intel CPU.So not saying that there's not a problem with Ryzen, but it is possible a large number of the errors are false positives arising from a known software issue.I would wait Michael runs the same test on an Intel CPU with no problems to pass judgement.	vancan1ty	9.37497	-5.226051	comment	3.0	11.0	1501964744	7.8268924
14943837	Every post I see on HM about Linus i	"Every post I see on HM about Linus is about how cool it is that LT is an asshole.What's with the skewed asshole-bias? Same people will bitch about ""asshole people"" on there own teams that are tough on PRs."	odammit	9.276593	-5.8957505	comment	3.0	13.0	1502056450	4.2753687
14943889	Linus is not an asshole and no one t	Linus is not an asshole and no one thinks assholes are 'cool'. This comes across as a distorted framing of the issue to fit a preconceived bias.There are millions of lkml posts that don't get posted here, only the ones where Linus has to tick someone off or express a disagreement, usually posted with zero context or history.If your impression of Linus is based solely on posts that make it to HN you have a lot of catching up to do.	throw2016	9.280868	-5.8940625	comment	3.0	10.0	1502056922	4.2376833
14956546	Only 4 core CPUs, a tad disappointin	Only 4 core CPUs, a tad disappointing.	gbrown_	9.45377	-5.187237	comment	3.0	12.0	1502190562	7.887967
14973526	Maybe, but solving truly big problem	Maybe, but solving truly big problems relies on people working together. Linus (and the unfortunate proliferation of jackasses who emulate him) do more to hinder progress than help it.	jowiar	9.309204	-5.8776007	comment	3.0	27.0	1502312233	4.252401
14973555	I imagine after the Bitkeeper fiasco	I imagine after the Bitkeeper fiasco, Linus and others are disinclined to become dependent on a proprietary service.	mmagin	9.377291	-5.8389254	comment	3.0	16.0	1502312418	-11.839687
14973566	He solved the problem with git, he's	He solved the problem with git, he's upset that the company trying to make money off it broke it again.Most of the times Linus is an asshole are completely justified. Being rude to groups like Nvidia isn't hindering progress.	boomboomsubban	8.774651	-6.266698	comment	3.0	20.0	1502312502	-11.921553
14973726	Seriously. Linux will likely outlive	Seriously. Linux will likely outlive GH[1], and more importantly, it doesn't need GH. The current workflow works fine, and I hardly think any potential kernel hackers are choosing not to work on the kernel because it is email-driven.[1] Nothing against them that I don't have with any other commons that depends on corporate beneficence. But companies fail all the time; I can't think of a reason GH is immune.	__jal	8.807567	-6.0183754	comment	3.0	41.0	1502313572	4.6127663
14979401	How long until we can get chips with	How long until we can get chips with this many cores while still maintaining the clock speed needed for good single threaded performance?	samcat116	9.450698	-5.206197	comment	3.0	10.0	1502371760	7.8156614
14979420	AMD have acknowledged there is an is	AMD have acknowledged there is an issue with their mainstream Ryzen CPUs that can cause segfaults on Linux, but they claim it doesn't affect their Threadripper or Epyc models.http://www.phoronix.com/scan.php?page=news_item&px=Ryzen-Seg...	jsheard	9.350934	-5.2437005	comment	3.0	19.0	1502371915	7.8706913
14979449	I was looking to build myself a new 	I was looking to build myself a new (Dual) Xeon workstation, but looking at these specs and performance, I am going to consider threadripper instead.With this many threads, ECC support and 64 PCIe lanes this CPU looks perfect for my intended workload. It's also gonna be slightly cheaper than a dual xeon.Exciting times!	LeonM	9.376297	-5.201949	comment	3.0	15.0	1502372122	7.9397807
14979986	Barring a major technical problem be	Barring a major technical problem being uncovered (hopefully the segfault thing won't be an issue) or nefarious action by Intel I cannot see how this thing can fail. So much power at the price point. As soon as the price drops a bit I'll be replacing my FX-8350 setup with one of these. Go competition! Go AMD!	Boothroid	9.307333	-5.2122765	comment	3.0	13.0	1502375133	7.882508
14984025	not sure where you're getting that f	not sure where you're getting that from, x86 chips are swappable with little design considerations apart from socket, TDP and in very edge cases - IO.As for hololens, the current version is approaching EOL anyway.	zeusk	9.613824	-5.2957277	comment	3.0	10.0	1502397711	-7.7616405
15003748	Does c65 turn structs into parallel 	"Does c65 turn structs into parallel arrays?If you have something like    struct Monster {
      unsigned char hitPoints;
      unsigned char damage;
      unsigned char shieldLevel;
      char* name;
    };
    static Monster s_monsters[] = {
      { 5,   1, 0, ""orc"", },
      { 50, 10, 5, ""dragon"", },
      { 10,  3, 1, ""goblin"", },
    };

that's a no-no on 6502. You generally need to store those in parallel byte arrays including the string pointer's upper and lower bytes each in separate arrays. That was usually done with assembler macros or compile time tools but it was important not to have to generate addresses that have to manually assembled in 6502. Similarly there's no multiply so math like sizeof(Monster) * index."	greggman	9.733753	-5.7077303	comment	3.0	12.0	1502643993	-7.334528
15019754	I recently discovered .to domains al	I recently discovered .to domains allow for emoji like .ws and a few other ccTLDs.While they have some (technical) downsides I figured they'd be interesting to experiment with so I was curious if any good ones were still available. Manually checking them one-by-one was kinda cumbersome, so I wrote a simple script to check availability for each possible single-emoji .to domain.Turns out many were still available (about 70% at the time). I registered a few and decided to publicise the list. That was my weekend project ~2 weeks ago. Today I finally launched it.I wrote more about the timeline and how I built it here: https://medium.com/@marckohlbrugge/get-your-own-emoji-domain...Disclosure: I worked out an affiliate deal with my registrar so I get a 10% commission for each registration. Of cou	keesj	9.784262	-6.257115	comment	3.0	12.0	1502814934	13.034579
15019669	Show HN: All available Emoji domains	Show HN: All available Emoji domains in one place	keesj	9.800545	-6.258699	story	3.0	22.0	1502814435	13.03163
15026571	Aren't FPGAs mainly for design phase	Aren't FPGAs mainly for design phase and the real crunching in the industry done on ASICs? At least whole automotive industry works that way - FPGAs to design/test stuff, ASICs for production and making money.	bitL	9.085068	-5.335936	comment	3.0	10.0	1502882199	8.286449
15027417	> proprietary software that only doe	"> proprietary software that only does as much as qemu? Any advantages to this?Well, they claim it's ""like QEMU but 5 times faster!"" but that's probably in some specific test conditions. I can't find any proof to this claim such as an independent review of their software across a variety of productive use scenarios.> You can even run Windows applications on your ARM Mini PC using x86 Wine.Or, wait until Microsoft finalises their x86 translation layer for Windows 10 ARM, and don't bother with running an i686 Linux distribution under emulation and running Wine within that. They don't seem to support x86_64 Linux distributions, so I wonder what they're planning to do since some distributions will be dropping i686 support soon. [0]If you wanted to run Windows binaries on an ARM board, I can't s"	kogepathic	9.919776	-5.3395	comment	3.0	15.0	1502891542	-8.10768
15031788	If there's anything we've seen, over	If there's anything we've seen, over and over again, it's that theoretical and infeasible attacks eventually become, in order:1) possible2) feasible; and3) reliable to the point of weaponizationIt may take 5 years. It may take 20 years. It will invariably require a huge amount of other research, only some of which will appear relevant. Then all of a sudden the intermediate pieces are all understood and the first practical attack becomes possible.Even if this attack only works against an ideal target, it still shows a new way of thinking about particular attacks.> Any read pattern that hammers a particular location will trigger garbage collection or data rewrite to a fresh location.I can't help thinking that you may have inadvertantly outlined how an eventual practical attack will be perfor	bostik	9.624526	-5.675873	comment	3.0	11.0	1502921300	-13.904445
15043403	That seems like it could less destru	That seems like it could less destructively be done by setting CPU affinities appropriately. And, by extension, automatically through better kernel code.Or is there more to it than that?	Filligree	9.856678	-5.3667736	comment	3.0	16.0	1503028104	8.031841
15043369	I thought that it disabled SMT, not 	"I thought that it disabled SMT, not the actual cores.
That would make it 16c/16t not 8c/16t."	yarg	9.518333	-5.270449	comment	3.0	20.0	1503027617	7.8947196
15043421	I wonder if NT considers Threadrippe	I wonder if NT considers Threadripper a NUMA.	microcolonel	9.757569	-5.5198135	comment	3.0	12.0	1503028420	8.067074
15062904	This is super awesome and fun but pe	"This is super awesome and fun but personally I had to migrate my micro datacenter from pis to nucs.The ""armhf tax"" is that you tend to have to build your own images for stuff :(   Then you need your own build infra (or ""heath robinson"" qemu builds) because pis run out of memory building a lot of stuff... but mainly if C++ is involved so ymmv.That said, I got a rack of 8 pis doing nothing right now, so...(unrelated http://www.bitscope.com/product/BB04/ is handy if you want to rack a lotta pis, not affliated...)There is probably a micro business for someone running a slick docker build system for armhf handling the qemu emulation or toolchain dirtiness ""under the hood"" in the cloud somewhere, on x86-64 boxes with a lot more than 1GB of RAM."	zxcmx	9.574197	-6.427691	comment	3.0	11.0	1503304716	9.982644
15063342	How about some consumer desktop ones	How about some consumer desktop ones with ECC RAM support?	Aardwolf	9.465977	-5.5049386	comment	3.0	26.0	1503310113	8.19884
15063378	"Never gonna happen. ECC is ""pro"" fea"	"Never gonna happen. ECC is ""pro"" feature for Intel, reserved for Xeons only. They have to justify high price of Xeons somehow."	mamon	9.393011	-5.43443	comment	3.0	13.0	1503310517	8.189615
15063605	Okay. Well, you should wait for benc	Okay. Well, you should wait for benchmarks. If like in the anandtech article mentioned the clock rate gets decreased, and that would be very normal when adding more cores, then a single thread performance increase is very unlikely. In the last launch Intel did not get close to those numbers, and that was without a core increase.Also, there seems to be some confusion whether those processors now are a kaby lake refresh or the new coffee lake architecture. The videocardz article mentions Coffee Lake (and some other news articles call those processors that as well), but the anandtech article defines them as a Kaby Lake Refresh. A new architecture would make a single thread performance increase more likely.	onli	9.468476	-5.27095	comment	3.0	13.0	1503313656	7.877709
15067259	Personally, I find it kind of ridicu	Personally, I find it kind of ridiculous that new emojis are considered flagship features of mobile OS updates. I'd think that it would be possible to decouple emoji updates from kernel/security updates, so I imagine that Android/iOS tie them to the OS updates solely as a way to motivate non-technical users to update.	saghm	9.800757	-6.252458	comment	3.0	15.0	1503344942	-13.958489
15074358	As someone who has used assembly in 	As someone who has used assembly in production code, I am much more than merely curious.  I would like to assemble / generate microcode directly.  I would like to know exactly what the CPUs are doing, and not rely on voodoo.	mmphosis	9.69434	-5.552062	comment	3.0	12.0	1503421719	-7.414392
15074396	I have similar concerns.  I'm all fo	"I have similar concerns.  I'm all for using my machine to its fullest, but in large, applications like web browsing should be an additional thing I am doing on my computer, not something that thinks it can take the full computer.Though, I have to admit I am also a little torn on this.  Yes, browsing is typically done ""during compile"" or some other task.  However, I have also begun doing most of that work remotely so that I can save battery on my laptop.  To that end, it is now less of a concern on preserving cores for my tasks that actually need it."	taeric	9.864596	-5.2519307	comment	3.0	23.0	1503421917	7.983334
12558920	Ahh, the quirks of FPGA development.	Ahh, the quirks of FPGA development. If I recall correctly, you shouldn't use tristate signals internally because there's actually no such thing within any modern or even semi-modern FPGA (and I believe the same may even be true of ASIC development).	makomk	9.113097	-5.338442	comment	3.0	11.0	1474568498	8.295272
12564349	There is a whole parallel smiley his	There is a whole parallel smiley history from Asia that either hasn't been documented as well as the western smileys or simply hasn't been translated.The notable thing about asian smileys is that they have the same horizon as the text, whereas western smileys needs to be turned 90 degrees. Compare (^.^) with :-)So given that ¯\_(ツ)_/¯ is both unicode and horizontal indicates that it is either from Asia or came to be after asian smileys became more prevalent in the west.	wodenokoto	9.846698	-6.2266226	comment	3.0	11.0	1474636925	-4.6958632
12564393	Emojis are stunningly ugly to me, th	Emojis are stunningly ugly to me, though I did appreciate throwing out the custom doge and Doom space marine ones at random when my team used Slack.	cholantesh	9.789668	-6.2637672	comment	3.0	21.0	1474637265	-13.9590645
12564581	I'm with you. I put a space between 	I'm with you. I put a space between the : and the ) to prevent the graphic emoji : )	katurian	9.82931	-6.2459235	comment	3.0	11.0	1474638715	-13.951291
12565368	Emojis are in Unicode. They aren't p	Emojis are in Unicode. They aren't parsed or converted to multiple glyphs anymore, the text editor will provide them directly.http://unicode.org/emoji/charts/full-emoji-list.htmlI was doubtful of emojis at first, but now I'm loving the concept. They really help me communicate emotions that I wouldn't put into actual words. Smileys can't really do that.Culturally I see it as a the first universal (limited) language, using standardized ideograms. Maybe in a few decades we can express full sentences and we will have a written language for all Humans to use. 21st century hieroglyphs.	jobigoud	9.810678	-6.265813	comment	3.0	12.0	1474644874	-13.962896
12570480	Intel seems to be captured in its ow	Intel seems to be captured in its own x86 world. There were no big changes to the instruction set for ages, even the x64 extensions were designed by AMD. So while Intel still excels at manufacturing, the few projects for breaking out of their box failed (Ithanium, Larrabee). And also: why are there no Intel chips yet who include all the nice things USB-C can offer to the market? E.g. Thunderbolt, newest DisplayPort.	_ph_	9.4261675	-5.2129865	comment	3.0	33.0	1474715926	7.784219
12571780	Not disagreeing that hardware is har	"Not disagreeing that hardware is hard, but IMHO Its possible to get a comparable level of AI/DL performance in the ""Asteria"" device, using relatively available technology like Zynq FPGA[0] based boards like the Parallella[1]. I got my Parallella board from Kickstarter about 2 years ago.[0] http://www.xilinx.com/products/silicon-devices/soc/zynq-7000...[1] http://www.parallella.org/"	neurotech1	9.101864	-5.2481422	comment	3.0	10.0	1474738612	8.2601
12584794	To the programmer, the Alto's instru	"To the programmer, the Alto's instruction set is the same as the 16-bit Data General Nova minicomputer, with the addition of a few crazy instructions such as ""copy character bitmap from font file to screen"".The Alto's CPU is built from a whole pile of TTL chips on three boards. The Alto's arithmetic-logic unit, like many computers of that era, uses 74181 ALU chips. The CPU runs a crazy multitasking microcode, with one of the tasks emulating the Nova's instruction set. The hardware manual refers to the ""microprocessor"", meaning the microcode processor, not a microprocessor chip since microprocessors as such were in their infancy at the time.There's a picture of the Alto's ALU board in one of my earlier articles [1]. You can see the individual CPU registers, as they are made out of multiple "	kens	9.630245	-5.3529963	comment	3.0	10.0	1474917863	-7.2241406
12588583	@Yoavm, what pisses me more is that 	@Yoavm, what pisses me more is that both Apple & Google now have a yearly update of their OS and all they shamelessly showcase on stage is emoji's and notifications.	rajeshp1986	9.8118305	-6.241756	comment	3.0	11.0	1474973520	-13.948286
12605464	As the x86_64 world continues to get	As the x86_64 world continues to get more locked down, it's going to be interesting to see whether a market niche opens up for a less-constrained platform.	sevensor	9.680845	-5.2125287	comment	3.0	20.0	1475159373	-7.790619
12606883	How do they deal with the intel mana	How do they deal with the intel management engine in all intel chips? https://libreboot.org/faq/	brian_herman	9.501006	-5.2094336	comment	3.0	48.0	1475168506	7.7712126
12634311	Is having physical RISC-V hardware r	Is having physical RISC-V hardware required, or would using an fpga-based risc-v cpu or a risc-v emulator be acceptable?	tbirdz	9.3843	-5.621971	comment	3.0	17.0	1475573838	-10.595393
12634320	The qemu support for RISC-V is being	The qemu support for RISC-V is being upstreamed right now and there is also the Spike RISC-V simulator that you can use. There are various soft CPUs that can be run in FPGAs too.	mynameislegion	9.416273	-5.612459	comment	3.0	12.0	1475573925	-10.463615
12635636	Why wouldn't it be possible to versi	Why wouldn't it be possible to version control in the same way we version control other random files? Just treat it as a stream of arbitrary data.	NikolaeVarius	8.8473425	-6.38481	comment	3.0	14.0	1475590339	-11.693779
12638135	Sourcegraph launches a new semantic 	Sourcegraph launches a new semantic code search and browsing interface	beliu	8.753733	-6.075365	story	3.0	87.0	1475606755	-11.192378
12646108	Consider that many instruction and d	Consider that many instruction and data caches are at the 16-32 KB scale.  It's obviously a big criticism of the microarchitecture but you have a linear tradeoff between number of cores and available core memory.  One core with 64 MB of memory seems less useful than 1024 cores with 64 KB of memory each (which can directly access all other core memory).  But 65,536 cores with 1KB of memory each doesn't sound very useful either.	jamesaross	9.686678	-5.4063287	comment	3.0	10.0	1475689975	8.068533
12646189	I have read it but in the past he wr	I have read it but in the past he wrote a blog post that risc-v will be used as isa in future products.So maybe 64 bit risc-v with backwards compatibility with epiphane?(it sounds a bit strange)	algorithm314	9.462495	-5.7092066	comment	3.0	11.0	1475690502	-10.533364
12646822	HW design is not that different from	"HW design is not that different from SW design. Comp table below:HW         SW  
Verilog --> C/Java/etc  
EDA     --> GCC/LLVM  
GDS     --> Binary (elf)The GDS is completely tied up in NDAs due to the foundry. The EDA combines/translates open source code with proprietary blobs to produce a ""super secret"" GDS binary blob that gets sent to the foundry for manufacturing."	adapteva	9.32108	-5.2898097	comment	3.0	24.0	1475694747	8.748674
12645970	Two things immediately jump out    C	"Two things immediately jump out    Custom ISA extensions for deep learning, communication, and cryptography
    DARPA/MTO
    autonomous drones cognitive radio

The radar geeks are gonna love to get their hands on ~250GFLOP, 4watt processor."	valarauca1	9.506206	-5.388231	comment	3.0	17.0	1475689176	-7.706206
12646021	You need think of it as aggregate me	You need think of it as aggregate memory, not as per core memory to use if effectively. Are you aware of a chip with more than 64MB of on chip RAM?	adapteva	9.857032	-5.2900577	comment	3.0	11.0	1475689477	7.977021
12682677	I've been working lately on getting 	I've been working lately on getting Visual Studio Code to compile for ARM. Its working fairly reliably but Travis doesnt support the toolchain so Im having to use Gitlab CI in the meantime.I want to give this a little more polish before I release, but can I gauge from the folks here if there would be any interest in ARM nightlies for Raspberry Pi (and other ARM SBCs)/ARM Chromebooks?If so, I'll move some things around to get it done in the next few days.Works really well on Chrome OS with Crouton, owing to the integrated terminal:https://twitter.com/headmelted/status/778458660003393536	headmelted	9.929231	-5.242674	comment	3.0	10.0	1476176386	-10.31456
12707946	>Writing different backends for each	>Writing different backends for each supported target would either be taking on a lot of work or shedding some targets.Do any non statistical outliers care about non amd64 and ARM?	coldtea	9.641658	-5.241105	comment	3.0	15.0	1476452225	7.704928
12709323	It felt so buried in the article, it	"It felt so buried in the article, it's worth pointing out:
 OpenCAPI == ""Open Coherent Accelerator Processor Interface"""	bch	9.381199	-5.1839843	comment	3.0	11.0	1476463761	-9.827949
12709988	Your comment represents some of the 	"Your comment represents some of the best of HN (detailed, illuminating, informative), but is incredibly depressing for someone with an idle curiosity in FPGAs. This is what I've long suspected, and it seems that the barrier to entry is generally a bit too high for ""software"" people."	yid	9.098275	-5.356276	comment	3.0	16.0	1476468602	8.380642
12710107	I do think there's some light at the	"I do think there's some light at the end of the tunnel. IceStorm is a thousand times better than any of the existing EDA tools if you just want to learn, and has effectively done a full reverse engineering of the iCE40 series. It only has a Verilog frontend, but it's a great starting point.You can get an iCE40 FPGA for ~$50 USD, or as low as $20. It'll take you probably 30 minutes to compile all the tools and install them (you'll spend at least 2x that much time just fucking with stupid, traditional EDA tools, trying to make sense of them, and you'll still do that more than once probably), and you're ready.The learning material stuff is much more difficult... Frankly, just about every Verilog tutorial out there, IMO, totally sucks. And Verilog is its own special case of ""terrible language"""	aseipp	9.077571	-5.4258056	comment	3.0	12.0	1476469508	8.543263
12715220	Why is the author consistently mixin	"Why is the author consistently mixing up ""
""instructions per cycle"" with ""instructions per second""?Surely, phrases such as ""We observed the following Instructions per Second (IPC)"" and ""assuming a perfect 1 instruction per second on the general purpose processor"" should have activated some neurons in some brain, even assuming it got distorted by doing this research?"	Someone	9.633187	-5.32728	comment	3.0	10.0	1476558065	7.9104543
12730567	Not to support OP's point, but there	"Not to support OP's point, but there is a decent example. Intel, for a while, kept AMD in the game and licensed them x86 simply to avoid anti-trust laws (basically, Microsoft just got shafted so they wanted to be able to point to AMD and say ""we have competition""). IIRC they later on actually invested in AMD to keep them solvent for the same reasons."	rocqua	9.29317	-5.1862473	comment	3.0	10.0	1476744841	7.8190966
12765485	Can you recommend some resources on 	Can you recommend some resources on chisel? I've been an ASIC/FPGA designer for 20 years. We mostly do VHDL and SystemVerilog for design, and SystemVerilog for verification.I've only heard about chisel briefly, used in reference to a risc design I think.I've considered making a lisp like language for design on a few occasions. But maybe chisel solves the pain points?	DigitalJack	9.151055	-5.501732	comment	3.0	16.0	1477089143	8.566389
12774660	This is an interesting topic and I'd	This is an interesting topic and I'd really like to know the answer. But many SIMD and vector machines had have gather scatter, or even general instruction sets which include indirection. The article kind of says this, but tries to distinguish between some kind of limited table lookups vs general indirection. Maybe this is really only relevant to SSE/AVX models?I guess it kind of useless to try to backwards-engineer from marketing derived terms. But if anyone sees a bright line between a GPU and a bunch of intel hardware threads with vector units, please share.	convolvatron	9.693417	-5.7985053	comment	3.0	12.0	1477246638	8.059639
12775168	"From abstract: ""Provided  a  library"	"From abstract: ""Provided  a  library  of  application-specifc
processors,  we  load  on-the-fly  the  specifc  processor  in  the  FPGA,  and  we  transfer  the
execution from the CPU to the FPGA-based accelerator.""Key takeaways: (2.2.2) neat trick to accelerate reconfiguration; (3) sample applications involving BCD arithmetic; (4) efficient scheduling to avoid thrashing the reconfiguration.(Personally, I suspect that until we have a good, open or OS provided API to FPGA configuration we're going nowhere. 3D acceleration required this in the form of OpenGL and DirectX.)"	pjc50	9.087772	-5.2687078	comment	3.0	14.0	1477253015	8.289918
12777048	It's clever because you aren't a mem	"It's clever because you aren't a memory design or test engineer. This type of problem has been known and tested for since shortly after DRAM was invented.E.g. here's a 1977 databook from Mostek, at the time the premier DRAM manufacturer: https://archive.org/stream/bitsavers_mostekdataryProducts_17...Look at these tests in particular:   Adjacent Row Disturb Refresh
   Column Disturb
   Pattern Sensitivity

Look at the details of the column disturb test:Column is written with an all ones data pattern an ""0"" is then written into row of the column 100 times followed by reading all other bits of the column and checking each bit for a logic ""1"" output. Row of the column is then rewritten to a ""1"" and the procedure is repeated for rows 1,2,3, ... 63 of the column under test. The entire procedure "	PhantomGremlin	9.71964	-5.536106	comment	3.0	11.0	1477291309	-13.866995
12777297	Dont count on laptops, Intel treats 	Dont count on laptops, Intel treats ECC as one of the market segmentation features. AMD on the other hand supports ECC on everything, even the lowest budget cpu models.	rasz_pl	9.388769	-5.465173	comment	3.0	15.0	1477296542	8.081233
12808544	I don't know, I see emoji infiltrati	I don't know, I see emoji infiltrating my tools more and more. For example, I had to submit a PR to Yarn [1] to add a flag to disable the terrible things. GitHub uses emoji to indicate the type of commit [2].I hate it.Edit: I mean GitHub the company, not the product. Atom is maintained by GitHub.[1]: https://github.com/yarnpkg/yarn/pull/922[2]: https://github.com/atom/atom/commits/master	jakebasile	9.771439	-6.2784843	comment	3.0	11.0	1477595172	-13.978633
12810192	> The more we fully utilize those co	> The more we fully utilize those cores, the smoother we should be able to make the whole web.I wonder why the GC/CC are not multithreaded though. It seems like those are fairly isolated components, considering the entire application gets suspended so they can do their job, i.e. prime candidates for parallelism.When forcing a collection on a large firefox instance it can easily spend 20+ seconds collecting on a single thread while a java VM can munch churn through something like 1 gigabyte per second per core.In other words, from the outside it looks like a low-hanging fruit that has not been plucked.	the8472	9.731471	-5.4988317	comment	3.0	10.0	1477602676	8.3991995
12814622	Why do you think not having ECC Ram 	Why do you think not having ECC Ram is a problem? I'm on scaleway, and I see zero harm coming from that. Different usage?	onli	9.480013	-5.5133166	comment	3.0	12.0	1477651480	8.269694
12822438	ECC isn't really the golden solution	ECC isn't really the golden solution.  It will likely just turn rowhammer into a DoS instead of something which is exploitable (and even with ECC it can still be exploitable just harder).  While this is an improvement I wouldn't call it a golden solution.	ryuuchin	9.5650215	-5.6302104	comment	3.0	14.0	1477710822	-13.870431
12822809	5th RISC-V Workshop Preliminary Agen	5th RISC-V Workshop Preliminary Agenda	cheiVia0	9.379691	-5.7063003	story	3.0	41.0	1477720645	3.6162784
12832398	Here's the relevant bit from the ove	"Here's the relevant bit from the overview:  Programmable logic circuits are presented as hardware libraries called overlays. These overlays are analogous to software libraries. A software engineer can select the overlay that best matches their application. The overlay can be accessed through an application programming interface (API). Creating a new overlay still requires engineers with expertise in designing programmable logic circuits.

In other words, you're not doing direct programming of the FPGA with these new apis.  Instead it looks like they are making it easier to select and use existing overlays (aka existing hardware designs) by wrapping it up in some nice Python interfaces.  So as more overlays are released (right now it looks like there is only the ""base"" overlay) it should be"	kmod	9.102105	-5.3875136	comment	3.0	11.0	1477862481	8.388079
12848654	So they have an LLVM target for RISC	So they have an LLVM target for RISC-V. They could submit that but they choose to divide it up into pieces and submit them piecemeal. This is the first piece of that meal. If you want to skip to the dessert:https://github.com/riscv/riscv-llvm	CalChris	9.385831	-5.7095685	comment	3.0	10.0	1478024039	-10.613646
12849038	Wouldn't you also have to look at th	Wouldn't you also have to look at the average number of instructions, not just the average instruction size? x86 instructions tend to do more, too.	mikeash	9.835992	-5.749777	comment	3.0	12.0	1478026567	-7.520405
12850183	This.  In today's world it is easy t	This.  In today's world it is easy to support multiple instruction sets in the same silicon using the same registers and ALU.  So why in the name of all that is holy does the x86 not have a nice clean 64-bit instruction set that you can swap in?  It's all RISC under the hood anyway, why not give us access to it?  The only explanation I can think of is that Intel wants to keep things complicated as a barrier to entry for competition.	lisper	9.685117	-5.6125503	comment	3.0	14.0	1478035662	-7.6765914
27505328	Genuine question, can you be sure th	Genuine question, can you be sure the conversion wouldn't introduce a wrong bit here or there? Maybe in a different architecture or something?I'm not that good with CPUs past 16 bits, this is really out of my comfort zone heh	jalbertoni	9.643711	-5.4133463	comment	3.0	11.0	1623691412	7.7503457
27509587	If it could be evolved to have POPCO	If it could be evolved to have POPCOUNT in (at least) the base 64-bit instruction set, that would be helpful. Every other mainstream ISA either has had it from the outset, or got it added later at substantial expense. For reasons.It is hard to understand how it could have been omitted.	ncmncm	9.701571	-5.6584125	comment	3.0	13.0	1623712648	-7.614731
27534443	Emojis need more serious attention. 	Emojis need more serious attention. A lot of online conflicts start from miscommunication due to lack of facial expressions. To the point thats its driving a social crisis and division in the real world.	dukeofdoom	9.77763	-6.269034	comment	3.0	17.0	1623884228	-13.975187
27535688	Do you have any examples of current 	"Do you have any examples of current emojis that clearly have a very different meaning on different platforms? What you're saying might have been true 5+ years ago, but over time emojis have become more and more similar.Here is just one random article from Emojipedia about the history of the ""folded hands"" emoji: https://blog.emojipedia.org/emojiology-folded-hands/ There are many more examples.In addition to that, almost all emoji keyboards now autocomplete the emoji based on standard names, so if you search for ""disappointed"" on most any emoji keyboard, you will get the same face.For reference, here is the current official emoji set, including the standard names and images showing how they render on different platforms: https://unicode.org/emoji/charts/full-emoji-list.html"	alisonatwork	9.798698	-6.2694483	comment	3.0	11.0	1623897994	-13.962775
27544346	I'm not sure that they succeeded: 32	"I'm not sure that they succeeded: 32bit instructions aligned as 16bit makes decoding harder, I wonder if we're ever going to see a 8wide decoder RISC-V..
And I remember seeing here a comparison between ARM's SVE and RISC-V, I wasn't very convinced by the RISC-V vector's extension."	renox	9.507416	-5.738495	comment	3.0	10.0	1623962605	-10.498312
27559939	Who is ultimately at risk because of	Who is ultimately at risk because of Spectre and Meltdown? What additional risks am I taking on by disabling mitigations?	nerdponx	9.654816	-5.5708737	comment	3.0	13.0	1624106245	7.796766
27560713	I would love to see new chips that t	"I would love to see new chips that take all of the transistors used for speculation and use them for more cores. I asked electrical engineers once how many of the transistors on a chip serve speculation, and they said, ""To a first approximation, 100%.""That means we could add a lot more cores. Add enough, and the OS could easily pin basically all processes/threads to their own cores.And that, I believe, might win some performance back.I have more ideas at [1].[1]: https://gavinhoward.com/2020/02/computing-is-broken-and-how-..."	ghoward	9.447938	-5.192641	comment	3.0	13.0	1624113049	7.7583346
27562107	How would Intel go bankrupt when the	How would Intel go bankrupt when their net income is still $20 billion?Sure they’re loosing some ground, but I see no indicators they’re at risk of a near-term bankruptcy...	eulers_secret	9.241987	-5.1879883	comment	3.0	12.0	1624121566	7.6418085
27562385	I'd be surprised if x86 is still a m	I'd be surprised if x86 is still a major thing in 5 years, and very surprised if it was still a major thing in 10 years. It's had a good run, but it's 40 years old (with, granted, many extensions and improvements). Sometimes you need to start with a fresh sheet of paper.Apple's M1 was the first shot across the bow, and I believe AMD has an ARM-like architecture in development as well.	Turing_Machine	9.644667	-5.2930045	comment	3.0	20.0	1624123431	-7.714969
27562481	I've been hearing that about ARM for	I've been hearing that about ARM for more than a decade. Whats different now?	passivate	9.53716	-5.2101483	comment	3.0	15.0	1624124137	-7.697055
27565568	>desktop executes untrusted and rath	>desktop executes untrusted and rather arbitrary code pretty oftenAren’t the most affected group of users cloud users (and providers), not desktop users? I thought the biggest risk of specter attacks is the ability to glean information on other server residents who should be segmented off. There are many more concerns in user space which make attacking a desktop with specter pretty cumbersome for low reward wrt opportunity cost.The performance savings of speculative execution do seem to be worth the risk on a desktop IMO.	kurikuri	9.68421	-5.5907483	comment	3.0	11.0	1624145834	7.7988033
27586732	If this is really what's making the 	If this is really what's making the difference... I wonder if these mitigations shouldn't be automatically enabled for home users.The chances of Spectre or Meltdown actually managing to acquire sensitive data seems incredibly low. Is that worth the very large performance impact?	Wowfunhappy	9.654623	-5.579782	comment	3.0	23.0	1624323679	7.8340354
27588667	"""I am not convinced that removing an"	"""I am not convinced that removing any optimization which can be used in a timing-based side channel is sustainable."" basically boils down over two decades of JavaScript (now WebAssembly) API and language design, where one subset of the committees fervently argues against any feature or primitive that could possibly be used to acquire timing information, no matter how useful. It's tough, because they are ALSO trying to make sure any advertiser on the planet can run code on your PC without your permission, so it is pretty important to stop that code from using timing side channels to capture your credit card number or something. Once it was proven that JavaScript could trigger rowhammer (I remember having debates about this during wasm spec meetings at the time when it was still speculative)"	kevingadd	9.841656	-5.625191	comment	3.0	12.0	1624343833	-5.6931424
27589125	First, it's still a fairly closed pl	First, it's still a fairly closed platform. Whatever work being done on reverse engineering it and finding out what its components do is being done by third parties and even though it's already possible to run Linux somewhat, it's hard to say we'll be ever able to use 100% of the platform capabilities without Apple's help. Even if we do that with M1, Apple will change things in M2, it's going to be a cat-and-mouse game. Apple has zero motivation to help these efforts (heck, they would try to stop it if the law allowed). So although RISC-V is far away behind M1 now, I very much hope in quiet gradual improvements here until a tipping point when somebody realizes it's actually a competitive platform not just for industrial use cases but also for general computing.	dvfjsdhgfv	9.434372	-5.583079	comment	3.0	14.0	1624348898	-10.577837
27590619	Hm... I'm on a host OS with Meltdown	Hm... I'm on a host OS with Meltdown mitigations disabled, but I can seemingly run a VM with the mitigations enabled, verified via InSpectre[1]. I guess that's different somehow?1: https://www.grc.com/inspectre.htm	Wowfunhappy	9.66793	-5.529376	comment	3.0	10.0	1624363501	7.893259
27591925	I've looked before at these high-lev	I've looked before at these high-level things generating Verilog and I don't see what they bring that's so much better than what I can do with well-established VHDL. VHDL is rather verbose but that's nothing a bit of preprocessing/templating can't fix. Does slice offer something more here? I've looked at the readme but nothng jumps out. And I'm not even talking about vhdl-2019, which looks awesome (I can't wait to use in 2039 when it becomes supported in my tools)!	kingosticks	9.104182	-5.4996023	comment	3.0	12.0	1624371495	8.561283
27592566	Hopefully the recent acquisition rum	Hopefully the recent acquisition rumors don't spell the end of this healthy competition between x86 and RISC-V.I wonder what we'll see as a result of this partnership with Intel:SiFive also confirmed that the IFC RISC-V application development platform will use the Performance P550 core on Intel's 7nm Horse Creek platform.Link: https://www.phoronix.com/scan.php?page=news_item&px=SiFive-P...	1MachineElf	9.4002495	-5.6203475	comment	3.0	24.0	1624374230	-10.566402
27592874	Reads like the Onion, Intel and RISC	Reads like the Onion, Intel and RISC in the same line. Good news for RISC-V though.	rataata_jr	9.367243	-5.6630816	comment	3.0	20.0	1624375608	-10.565859
27593189	"There is no ""healthy competition bet"	"There is no ""healthy competition between x86 and RISC-V""."	Koshkin	9.432293	-5.6439223	comment	3.0	20.0	1624376901	-10.563536
27594545	ARM is a collection of many differen	ARM is a collection of many different cores. So yes, RISC-V probably competes well vs ARM-M, but I wouldn't say that RISC-V competes against ARM-A (which is starting to become big enough to compete against x86).Just because ARM-M and ARM-A shares an instruction set doesn't mean that those chips are anything alike. Heck, ARM-M0+ is a completely different chip than ARM-M4.ARM-R is roughly the target of RISC-V. (Realtime cores).	dragontamer	9.408858	-5.6285696	comment	3.0	11.0	1624383086	-10.546763
27595913	How does RISC-V places itself in mar	How does RISC-V places itself in market? What would be the advantage of going RISC over let say ARM (or x86)?	truncate	9.4247265	-5.6743903	comment	3.0	20.0	1624389480	-10.557442
27606867	"An approach that combined ""no code r"	"An approach that combined ""no code reviews"" with ""continuous deployment"" would be similar to coding on the production server, but with a better audit trail and consistent deployment across machines."	throwaaskjdfh	8.769581	-6.316227	comment	3.0	10.0	1624467768	2.179275
27607161	NEORV32: A customizable RISC-V SoC	NEORV32: A customizable RISC-V SoC	_quarks_	9.400787	-5.662585	story	3.0	73.0	1624468916	-10.56393
27623134	No AMD Zen 1st gen support:https://d	No AMD Zen 1st gen support:https://docs.microsoft.com/en-us/windows-hardware/design/min...Zen+ supported.I wonder why.	virgulino	9.247086	-5.193746	comment	3.0	11.0	1624565328	7.8815575
27630529	> They had no version control.Had to	> They had no version control.Had to read this two times and check the year of the article to make sure this wasn't from 2001	phatbyte	8.866005	-6.346124	comment	3.0	10.0	1624627799	-11.657907
27633842	> Linux health happened despite Linu	> Linux health happened despite Linus' manners, not because of them.I don't care. Telling incompetent people to fuck off is cool AF.	embeddTrway690	9.36885	-5.8452215	comment	3.0	11.0	1624642253	4.3174944
27640454	ARM is potentially soon owned by an 	"ARM is potentially soon owned by an enemy. RISC-V is owned by no one.Arm64 and riscv64 are pretty close to equivalent in a technical sense for general purpose computing, especially once consumer ARM chips ship with SVE2 and RISC-V with their Vector extension (which are both going to be out at pretty much the same time).Someone with a lot of money, such as Intel, investing in RISC-V will vastly accelerate RISC-V getting to being able to be used in a high end phone or laptop. Intel has the ability to ""do an M1"" with RISC-V, leapfrogging ARM."	brucehoult	9.416736	-5.635785	comment	3.0	17.0	1624699869	-10.540946
27644529	What needs to happen is to bring ECC	What needs to happen is to bring ECC to all levels of a chips logic to solve this. ARM vs RISC-V vs x64 doesn't address the problem as nothing in them inherently solves the problem. Making adders that add with ECC will.If all of the logic also operates on ECC with the data, chip yields will also be improved. Say an core of the chip only produces the correct result 99% of the time, currently you have to disable that core. With ECC logic, you can still use it, as it doesn't matter if it has an additional 1% chance of a bit flip, as all of your logic is now immune to single bitflips. For mission critical logic/applications, one can scale up the ECC so its immune to more bitflips before an error is introduced.	extrapickles	9.532665	-5.774512	comment	3.0	12.0	1624732183	-10.5451
27655753	I just noticed that my Threadripper 	"I just noticed that my Threadripper 1950x isn't ""supported"".  Completely ludicrous.  I'd love to see the technical justification for that."	g051051	9.439574	-5.3160357	comment	3.0	15.0	1624830421	8.191372
27656329	These are good examples and this mig	These are good examples and this might be slightly off topic but I wish that there were more resources on how modern x86 platforms actually work instead of using these legacy interfaces that are either emulated in SMM with IO port trapping or relegated to requiring chipset hacks to keep them working (such as VGA device hacks in the PCI spec or well known chipset legacy IO ports decoding to the LPC bridge).While it is essentially impossible to truly understand every aspect of todays platforms I think that one can build a lot of intuition about how things work by studying how transaction routing is handled in the platform, e.g. how the uncore and chipset routes TLPs (whether it's raw PCIe or packets essentially wrapped by other interconnect protocols like IF/HyperTransport/DMI/QPI/etc) throu	emily-c	9.626595	-5.2189054	comment	3.0	14.0	1624835343	-7.685157
27665807	Why not go all they way and let ever	Why not go all they way and let everything run in ring 0? Then Intel can prefetch beyond kernel entry calls again! And we also can see how AMD will performing under the same conditions!With Intels wave of TSX disabling patches going over all the previous CPU generations, AMD apparently got it right by never bringing their own version into production at all.	PixelOfDeath	9.304281	-5.190237	comment	3.0	11.0	1624905414	7.8603206
27672809	So is there any reason at all to use	"So is there any reason at all to use the original ARM64 ABI? Adding another ABI seems like a huge undertaking. Isn't the original ARM64 windows ABI a fairly recent invention, too? Too bad they didn't make it ""ARM64EC"" from the get-go?Will there be two versions of every system dll, one for each ABI?"	0x0	9.701352	-5.4478993	comment	3.0	16.0	1624950758	-7.759972
27706939	Overall, this is a reasonable articl	Overall, this is a reasonable article, which may or may not be applicable for your situation.I am a big fan of CI (continuous integration) and automated tests, but please don't do this:> Even better: continuous deployment! When the tests pass, deploy.Continuous deployment (CD) means deploying to your production environment. This is dangerous and should always be a conscious decision by someone (preferably even multiple persons). Normally, a new release either fixes a bug or adds new functionality.If your using CD and your software has a bug, that means that your original tests were not sufficient. The fact that you now have new software and new tests does not mean that you have solved the original bug.If you want to add new features, you will also have to add tests that these features work	aliasEli	9.206925	-6.4372497	comment	3.0	10.0	1625189211	6.0888624
27712794	I like Whitehurst and have had the c	"I like Whitehurst and have had the chance to meet him a few times. If you want to understand his ethos check out ""The Open Organization"". It details his transition from Delta to Red Hat and the transformation of his leadership style being around a lot of smart engineers and team players ready to constructively challenge each other. Good read for anyone interested in building inclusive company culture in tech.Honestly, I thought IBM would be feel less rudderless with him at the helm. I wanted IBM to become more 'red' and not RH to become more 'big blue'- but it appears this isn't the case after all... seems like a short tenure.Anyone know more about the new leadership?"	datahead	9.904014	-5.3960614	comment	3.0	59.0	1625239872	-9.492408
27715080	I'm a paying customer and I agree.Me	I'm a paying customer and I agree.Meanwhile many core features are still unpolished e.g.: running your own runners sucks and you can't test CI/CD locally.	carlosf	9.611276	-5.328086	comment	3.0	11.0	1625250855	6.066669
27717558	"This is not a ""sensitive"" issue, unl"	"This is not a ""sensitive"" issue, unless you consider GP's opinion ""sensitive"". I don't. I also don't think it would lead to a curious, constructive conversation. There is probably nothing OP could offer which would change what the experience of 8 years in RH engineering showed me. At best, it would lead to another long reply where I tried to explain what RH was actually like versus GP's impression.It's essentially GP posting on the Debian/OpenBSD/LK ML and saying ""wow, these guys are arrogant"". Well, they have strong opinions, and they need to justify them. If you don't have thick skin, you should probably avoid upstream discussions. It doesn't mean you should cast aspersions on the developers or their communities/companies. Linus is an incredibly nice person, but you wouldn't think it if "	evol262	9.308937	-5.8576875	comment	3.0	16.0	1625263768	4.232963
27725513	Interesting. Does this mean that if 	Interesting. Does this mean that if you are not going to use all HT threads it's better to turn off HT?	undfg	9.930289	-5.735068	comment	3.0	16.0	1625351663	8.352762
27726847	By this proposal's logic, it would m	By this proposal's logic, it would make total sense for processes on a boosting CPU core to report more than 100% cpu usage.	phire	9.619101	-5.241629	comment	3.0	19.0	1625366176	7.8641305
27729687	This is just learned helplessness be	This is just learned helplessness because Intel were stingy as shit for over a decade and wanted to segregate their product lines. Error correction is literally prevalent in every single part of every PHY layer in a modern stack, it is an absolute must, and the lack of error correction in RAM is, without question, a ridiculous gap that should have never been allowed in the first place in any modern machine, especially given that density and bandwidth keeps increasing and will continue to do so.When you are designing these systems, you have two options: you either use error correcting codes and increase channel bandwidth to compensate for them (as a result of injected noise, which is unavoidable), or you lower the transfer rate so much as to be infeasible to use, while also avoiding as much	aseipp	9.653384	-5.4861455	comment	3.0	24.0	1625407298	8.149589
27729909	Utterly brilliant. It's inspiring to	Utterly brilliant. It's inspiring to see a modern microservices architecture approach used to such great effect. While the performance penalty seems somewhat steep at first blush, we know this problem solves itself as computers get faster. And in return we get a library of highly portable opcodes which can be efficiently re-purposed by other processor implementations.	simondotau	9.908372	-6.157009	comment	3.0	13.0	1625409327	-13.696711
27739497	Are there higher level abstraction e	"Are there higher level abstraction efforts in the linux kernel to prevent a hypothetical custom RISC-V diversity explosion from ending up quite as messily as custom ARM did?Afaict, most of the ARM ugliness was around non-""CPU"" SoC components. But it definitely seemed like kernel code organization wasn't ready for a 10x (or 100x) explosion of popular SoCs.And the entire point of open sourced RISC-V cores is that they would enable even more chip diversity, no?"	ethbr0	9.41833	-5.6561556	comment	3.0	16.0	1625502094	-10.50795
27740252	The RISC-V ISA specifically allows f	The RISC-V ISA specifically allows for custom extensions.Unfortunately, the licensing model does require the implementations to be FLOSS. This encourages creating a lot of closed stuff with different and incompatible extensions.	goodpoint	9.418831	-5.701131	comment	3.0	11.0	1625507438	-10.55806
27740476	Why would you switch from a 100GBps 	Why would you switch from a 100GBps NUMA connection (800 gigabits per second) over NUMA fabric into a 10 Gbps Ethernet fabric?If you are scaling horizontally, NUMA is the superior fabric than Ethernet or Infiniband (100Gbps)Horizontal scaling seems to favor NUMA. 1000 chips over Ethernet is less efficient than 500 dual socket nodes over Ethernet. Anything you can do over Ethernet seems easier and cheaper over NUMA instead.	dragontamer	9.899552	-5.190683	comment	3.0	13.0	1625508808	7.727506
27756428	Using ECC is very strange in this co	Using ECC is very strange in this context. eMMC storage already provides for data correctness (and wear leveling of flash). If flash is corrupted to a point where internal error correction cannot compensate for it, eMMC will return no data, simply returning an error. This means that the additional level of error correction that they added will never ever be used.Perhaps earlier revisions of this used raw NAND? Either that, or somebody got overzealous without thinking through.	dmitrygr	9.519025	-5.529564	comment	3.0	13.0	1625621940	8.323115
27759036	Oh, wow, it's indeed nice (even thou	"Oh, wow, it's indeed nice (even though it's more like TransMeta's x86 implementation than a silicon-level design!) Reminds me of the efforts to implement the Japanese SuperH(2) RISC instruction set.(To you: you might want to clarify in the title that this is the VAX architecture they're talking about (since ""vax"" unfortunately might be confused here with the now-used shorthand for vaccine).)"	zinekeller	9.588425	-5.487096	comment	3.0	16.0	1625649178	-10.46033
27761465	The first-gen PDP-11's CPU was just 	The first-gen PDP-11's CPU was just a couple of boards full of good old TTL chips.	cbm-vic-20	9.747333	-5.3386254	comment	3.0	10.0	1625667921	-7.537559
27761592	Why does train control need to be 10	Why does train control need to be 100% cycle accurate?PDP-11s ran at what, 1.25Mhz?  I'd think that a modern CPU software emulating a PDP-11 CPU could get to below those cycle times.	VectorLock	9.608326	-5.216767	comment	3.0	15.0	1625668608	7.6396914
27767293	(Intel maintains a database with pas	(Intel maintains a database with passwords of all manufactured chips.)I find this... somewhat hard to believe, both because Intel's volumes are huge and it would mean something like the original Pentium III Processor Serial Number came back to haunt us.There was recently a leak of Intel internal information, but based on the contents of this article, it seems that was really mundane (schematics, etc. --- which any companies buying and using their chips would easily have access to) in relation to the true depth of the secrets that lie within these processors... part of me really wishes there was far more that got leaked, because besides the security aspect, and the despicable practice of companies hiding information on devices from their actual owners and locking them out, this stuff is jus	userbinator	9.510165	-5.208251	comment	3.0	11.0	1625704218	7.7511134
27783868	The TL;DR is that the VAX was the fi	The TL;DR is that the VAX was the first and most powerful line of 32-bit computer systems ever developed, the culmination of 20 long years of work by the world's best team of computer scientists (at DEC) competing day and night against the world's second best team of computer scientists (at Data General). On a technical level, the VAX platform came under attack when Sun Microsystems (now Oracle) brought out the more limited, but much faster, RISC-based SPARC architecture (that no CISC based architecture, even the VAX, could compete with) running UNIX (that lacked decades of advancements made by the VAX's operating system, VMS). DEC's elite team responded to Sun's SPARC with its 64-bit Alpha architecture, but DEC was allegedly betrayed when DEC showed Intel the design for its new Alpha chip	vaxman	9.634091	-5.321591	comment	3.0	13.0	1625840082	7.69592
27808018	The word Emoji makes it sound to an 	The word Emoji makes it sound to an English speaker like it should have something to do with emotions (like emoticon does), but that is pure coincidence: it just means 'picture character' in Japanese (see e.g. https://en.wikipedia.org/wiki/Emoji)	silvester23	9.814141	-6.2594504	comment	3.0	23.0	1626075782	-13.957572
27808132	Yep, in the UK for example the cryin	Yep, in the UK for example the crying laughing emoji has mixed meaning depending on context.It still has the innocent “this is really funny” meaning but it’s also known as the “c*%t emoji”[1] after English comedian David Baddiel noticed that anti-Semitic trolls would always sign off their messages to him with it.He was able to turn his experiences into a stage show called “Trolls, not the dolls”[2].1. For those that don’t know, in this context “c#%^” is a nasty but non gender specific insult that might be used for anyone being particularly unpleasant.2. https://www.theguardian.com/stage/2020/feb/10/david-baddiel-...	Lio	9.787696	-6.249022	comment	3.0	12.0	1626077247	-13.956241
27808526	My old man opinion is that you shoul	My old man opinion is that you should probably reconsider as I believe our online arguing has gone way down since we started using emoji in the workplace. Emoji are a useful tool to prevent misunderstanding. Tone, especially aggression, is difficult to express in short text form and so much of short business-oriented messaging looks curt and aggressive.	sambeau	9.788092	-6.2618136	comment	3.0	13.0	1626081819	-13.9576
27808724	We have that in Estonia too, but we 	We have that in Estonia too, but we also have the extreme-surprise emoji Ö	kuratkull	9.798065	-6.2593822	comment	3.0	15.0	1626083872	-13.9580555
27809249	Are you under the impression that em	"Are you under the impression that emojis ""mean"" the same for everyone? We kinda invented words to specify the meaning; emojis are a horrible step back.If you need a better word, use a thesaurus."	pmlnr	9.792615	-6.2742043	comment	3.0	14.0	1626089871	-13.957615
27807901	Fuck emojis.I have enough trouble in	Fuck emojis.I have enough trouble interpreting the facial expressions of the real-time humans who I am conversing with, whose immediate emotional response to what I or they are saying is meaningful and important to me and which inform my own social behavior.Now you want to shrink that whole set of social cues down to a handful of pixels, with loads of cultural and meta-cultural interpretation built in, and also give respondents as much time as they want to choose some tragically and perhaps intentionally vague icon to reply with that I’m then supposed to make sense of?No. Already had that with words, thanks. Fuck emojis.Red cheeks with wide eyes and an “o” mouth means one thing, while virtually the same thing but with a purple forehead instead of the red cheeks means something entirely dif	filoeleven	9.788489	-6.264257	comment	3.0	26.0	1626074452	-13.962278
27818618	The language here is so imprecise th	The language here is so imprecise that if someone had intentions to treat someone unequally, they’ll do that anyways whether they have a framework in place or not.This is just a bunch of corporate malarkey, let’s be brutally nakedly honest here. The fact is that this is just a more SV version of corporate bullshit with emojis - same exact thing you find in an old corporation like GE or IBM, just dressed up differently.	systemvoltage	9.786653	-6.2664566	comment	3.0	12.0	1626163933	-13.985862
35171152	How do I get into the layers between	How do I get into the layers between differential pairs and drivers running on my computer? I think we need at least a mid-end FPGA board in ordor to play with all the high speed goodness. The crypto crash gave us a bunch of those boards but now supply is drying up.	gaudat	9.199124	-5.322871	comment	3.0	10.0	1678899197	-8.07297
35216414	Thanks! Who is driving the developme	Thanks! Who is driving the development of RISC-V in LLVM? Are there companies investing in it or is it individual contributors?	celeritascelery	9.368616	-5.6855035	comment	3.0	10.0	1679205378	-10.59684
35222571	Most important for who? Basically th	Most important for who? Basically the winner if the western toolchains support RISC-V will be China.	azinman2	9.337782	-5.6741695	comment	3.0	10.0	1679254060	-10.584968
35232843	> It’s firmware time. Your machine h	"> It’s firmware time. Your machine has a motherboard, there is a chip on it which has had BIOS (Basic Input/Output System) flashed on it.I wonder if it's worth it to call out the ""processor microcode"" firmware? Any cool startup things happen at that low level as well?"	MuffinFlavored	9.657479	-5.343649	comment	3.0	12.0	1679325691	7.779951
35234048	Did I miss the pricing? I quite fanc	"Did I miss the pricing? I quite fancy the ""StarFive's VisionFive 2"" that was mentioned here a while back (assuming software improves a bit), but once again not clear what this new board offers in terms of RISC-V extensions/level of support.  btw I noticed today that Pine64 are also planning a cheap RISC-V board maybe next month."	whitehexagon	9.386585	-5.569616	comment	3.0	22.0	1679329668	-10.571527
35268872	Transcript:    0:00 hi so this is a 	"Transcript:    0:00 hi so this is a project I'm working on
    0:02 it's uh well you can see uh LPC to ISA
    0:05 adapter basically it allows you to
    0:07 connect old Isa cards like this sound
    0:09 blaster 16 here up to Modern
    0:11 motherboards this is a socket 1155
    0:13 motherboard with a Intel 6 series
    0:15 chipset and the ISA adapter is connected
    0:18 up to it through its TPM Port which is
    0:20 normally used for an encryption key it's
    0:23 got a Sandy Bridge Core i5 in it so you
    0:25 know it's still a little bit older but
    0:27 it's certainly got no business having an
    0:28 Isa slot connected to it but yeah if I
    0:31 just uh do the old standard Doom test
    0:35 we have audio
    0:37 as you can hear that's full audio music
    0:40 and so"	skissane	9.551892	-5.256968	comment	3.0	24.0	1679530267	7.429114
35269503	"Unfortunately that's not a truly ""mo"	"Unfortunately that's not a truly ""modern"" motherboard as it's from around 2011, and newer ones no longer support LPC DMA. If my research is correct, the last Intel chipset to support LPC DMA should be the X99 from 2014, but even before that, e.g. Atom x2000 series (2012), LPC DMA was already missing.I've not had the time to prove this out, but I believe it should still be possible to have full ISA support, including DMA, via a PCI/PCIe bridge that also needs to contain a pair of 8237-compatible DMA controllers and act as a bus master to buffer and translate ISA DMA requests to PCI/PCIe requests. It'll probably need an option ROM to configure the interrupt controllers and related signal paths in an ISA-compatible fashion. It might make a good exercise to implement one using an FPGA."	userbinator	9.622571	-5.2707834	comment	3.0	26.0	1679535975	-7.714127
35271818	"For some definition of ""far far away"	"For some definition of ""far far away"".CPU-wise, there are cores that match or beat popular ARM designs extensively used in SoCs driving the current generation of smartphones.The Android RISC-V port is now upstream, and it is considered a priority by Google[0]. The JIT support was merged a few weeks after.Their current intent, as I understand it, is to influence RVA23 to ensure it is in good shape, and to make it a requirement for official support (e.g. google play services).The Chinese might, however, jump the gun and release something earlier than that, without google play services, possibly as soon as this year.As for most of the world, based on past latency from spec to hardware, we'll have some phones by 2025 at the earliest, 2026 for sure.By 2027, I expect the majority of phones will "	snvzz	9.403247	-5.5601764	comment	3.0	16.0	1679560069	-10.546591
35274648	This will never work due to incentiv	This will never work due to incentive structure, unless the compiler devs are working for the same company that makes the CPU. Otherwise, compiler devs will target a lowest common denominator and call it a day. And even if the compiler devs perfectly support new CPU instructions, compiler users usually want a single binary that can run on as many CPUs as possible, and so will use the lowest common denominator once again. Currently, your CPU will 99% of the time run basic AMD64 instructions, regardless of its capabilities. So Intel and AMD try to make their CPUs really good at running AMD64 code.	tormeh	9.519645	-5.4187713	comment	3.0	18.0	1679578939	7.930802
35278742	I think that review might be from be	I think that review might be from before Linus invested in Framework.Not that I can verify it because the Linus Tech Tips channel is still banned.	Hamuko	9.30959	-5.820319	comment	3.0	11.0	1679594342	4.1544514
35294279	Feeling the pressure from Risc-V per	Feeling the pressure from Risc-V perhaps?	strangattractor	9.37803	-5.702059	comment	3.0	12.0	1679686251	-10.598677
35294351	"""A dream scenario for RISC-V""What ab"	"""A dream scenario for RISC-V""What about POWER?There's this RISC-V dream about an high performance CPU with a fleshed out, open source ISA, with a company championing it with a big proven core you can buy, and decent compiler support in place... but we already have it! Its right over there!Also, I think POWER is a bad omen. If IBM can't sustain POWER's hype (even with good CPUs you can buy right now), I'm not sure how RISC-V is supposed to surpass that from square one."	brucethemoose2	9.389355	-5.6034193	comment	3.0	20.0	1679686570	-10.554534
35295896	Bookmarked this to read about optimi	"Bookmarked this to read about optimizers, because it looks great.That said, I clicked on the link because it had ""6502"" in the title.  And... this isn't very interesting as a retrocomputing activity.  To be blunt: there's absolutely no way in hell a compiler architecture like that is ever going to be self-hosting in 64k of memory space."	ajross	9.637488	-5.5040135	comment	3.0	28.0	1679693604	-7.444166
35300199	ARM is a mess as an architecture ( e	ARM is a mess as an architecture ( every ARM has different ISA, you need blobs for the majority of it to make it work and OS support is lacking). RISC-V is almost nonexistent (where can i buy one at a reasonable price? ) and it seems that it has the same fragmentation problem.	hulitu	9.423921	-5.6452813	comment	3.0	13.0	1679727564	-10.558928
35299449	I suspect the same holds true for ha	I suspect the same holds true for hardware bugs in silicon, given the increasing complexity of CPUs. ;)	layer8	9.68958	-5.3029647	comment	3.0	17.0	1679718902	7.7713633
35302087	What's Red Hat's business model here	What's Red Hat's business model here? They seem hell bent on destroying Docker as a company but what's the end game there for them?	revelio	9.7879505	-6.0047593	comment	3.0	11.0	1679748093	-9.486541
35303151	Clarify something for me: If a DRAM 	Clarify something for me: If a DRAM chip is operated within its specifications, and suffers even a single bit-flip from this effect, is it not defective, either by manufacture or by design? Memory has a profoundly simple job, to return the data that was stored. Returning something other than what was stored is pretty fundamentally wrong -- either it needed more refreshes, or the specification should've prohibited repeated access patterns, or the memory controller allowed access patterns that were prohibited by the specification.Are we all pretending this is mysterious and novel just because it would be uncomfortable to admit so much has been so wrong for so long?	myself248	9.68163	-5.502865	comment	3.0	46.0	1679755682	8.188977
35303461	Fundamentally irrational market forc	"Fundamentally irrational market forces, we might add. No person compares spec sheets and chooses the chip with a 10% efficiency advantage but with a rowhammer style vulnerability instead of the 10% less efficient chip without a rowhammer style vulnerability. At least I've never seen ""is susceptible to rowhammer"" in a spec sheet. So as consumers, we don't really have the choice to select the more expensive or less efficient but more robust chip. Hell, ECC isn't even an option for most classes of CPU."	mort96	9.435836	-5.4729223	comment	3.0	22.0	1679757281	8.228995
35304353	How can it be fundamentally rational	How can it be fundamentally rational when you're making choices without critical pieces of information?And why are you discussing crashes? Rowhammer is usually considered a security vulnerability, not a general reliability issue, right?I'm confused by what you're trying to say.	mort96	9.60988	-5.6592145	comment	3.0	11.0	1679762412	-13.894933
35318960	One of the things that landed in my 	"One of the things that landed in my lap early on (System 8?) at Apple was the color picker. We were moving to PPC (PowerPC) and much of the HSL (hue, saturation, lightness)picker (HSV, hue, saturation, value?) was in raw 68K assembly.Having never written assemble (68K or otherwise), I knew I was out of my league ... but I persisted.Line by line, I replaced the assembler code with straight C. I was able to scare up a Motorola 68K assembler book around Apple and I recall that there was one assembler code I could not find: it turned out that it was a 68020-specific operator (and since we're talking color picker I suppose an '020 could be assumed — some kind of bit-shift-with-mask or some such weirdness, FWIW).(I guess each pixel of the ""color wheel"" was a rather complex calculation that someo"	JKCalhoun	9.800751	-5.689295	comment	3.0	15.0	1679861092	-7.575597
35323518	The practice continued with AMD Athl	The practice continued with AMD Athlon X3.	hulitu	9.246291	-5.187406	comment	3.0	12.0	1679898676	7.810785
35372303	I'm not sure that I like the fact th	"I'm not sure that I like the fact that gut pushes the emoji thing onto users. IMO a good commit message will be descriptive enough that you really don't need an explanatory emoji. For example, if I have a commit titled ""Add documentation for SomeAPIClass"", I really don't need a book emoji in front of that, because I made it clear that it was documentation.If you are going to add emoji to a git commit, make sure it's appropriate. For example, if you add a feature to your app that shows confetti, you might add a party popper emoji to the commit message, but you shouldn't litter your git history with emoji unnecessarily.I guess I could continue ranting about the people who add ""feat:"", ""chore:"", and the like to their commit messages, but what I've written about emojis here really applies to t"	LorenDB	9.758968	-6.289892	comment	3.0	10.0	1680182631	-14.003479
35379835	The smallest Lattice iCE40 are under	"The smallest Lattice iCE40 are under $2 in volume, it may be ""overkill"" but also pretty tough to beat economically at low quantities. Especially keeping in mind one of the limitations of these MPW silicon runs is the parts you get are untested... reasonable in prototyping but an obstacle to scaling up to low volume production.Dialog (nee Silego) Greenpak is a cheaper programmable option if you can find one that your design fits in. The design flow is a little more idiosyncratic.Of course often the cheapest option these days for low-end digital logic requirements is to emulate your logic in a microcontroller, if you can get away with that speed wise. It might not feel very elegant but the economy of scale is tough to beat.Personally it's analog and mixed signal design that I'd love to see c"	tesseract	9.116007	-5.3161135	comment	3.0	11.0	1680216054	8.206858
35379533	I submitted 2 CPUs to TT2 and a PDP8	I submitted 2 CPUs to TT2 and a PDP8 (12 bits) to the current TT3.The major limitations are the relatively small number of gates, and the external interface (8 inputs including clock/reset, and 8 outputs) - and the external multiplexor which essentially limits clock frequencies to tens of kilohertz.TT4 and later will have a redesigned pin interface and likely have roughly twice  as many external pins and far faster clocks - a lot of my designs are gates spent talking over that tiny interface	Taniwha	9.486484	-5.19649	comment	3.0	10.0	1680214464	7.633892
35383775	Now I'm worried some enterprising se	Now I'm worried some enterprising security researcher will find a Spectre vulnerability in my thought process	saghm	9.656844	-5.5843673	comment	3.0	10.0	1680247424	7.7230506
35389646	The author isn't saying that long-ru	The author isn't saying that long-running tests aren't valuable, though. They're asking the question: how much more valuable would they be if they ran in minutes instead of days?Slow CI/CD and slow releases are a big problem because they change your entire workflow. Critical bugfix that needs to be shipped? If your CI/CD takes minutes, not a problem: fix it, test it, ship it and have a 5 whys. If it takes days, well, you either have a side-channel process where all your senior engineers have to gather around and speculate about the impact of the change, then you have them sign off, and get the VP to sign off to approve the hotfix, then hope for the best. Or you just wait for days while your customers complain on Twitter.Tests should, ideally, run really quickly. Not at the expense of corre	mjr00	9.881707	-6.399114	comment	3.0	12.0	1680280821	6.073551
35393617	Maybe it's weird, but for all the wo	"Maybe it's weird, but for all the work I have ever done, I have never used CI/CD in the way that it was meant to be used, or never really leveraged it. Maybe all of my past jobs were unprofessional, but like, I see a lot of jobs using ""CI/CD experience required"" and I think... huh I wonder if they actually do it"	calvinmorrison	9.187332	-6.411694	comment	3.0	11.0	1680296595	6.2054214
35396361	But Intel actively contributes to th	But Intel actively contributes to the Linux kernel	arnaudsm	9.765916	-5.2138357	comment	3.0	13.0	1680315252	7.802116
35413740	A lot of RISC CPU arches which were 	A lot of RISC CPU arches which were popular in the 1990's declined because their promulgators stopped investments and bet on switching to IA64 instead. Around the year 2000, VLIW was seen as the future and all the CISC and RISC architectures were considered obsolete.That strategic failure by competitors allowed x86 to grow market share at the high end, which benefited Intel more than the money lost on Itanium.	l1k	9.507885	-5.5291343	comment	3.0	21.0	1680460814	-10.39419
35413891	Itanic was a flop due to AMD releasi	Itanic was a flop due to AMD releasing 64bit CPU. And I still think Intel learned a lot from its failure if not from the technology but business-wise. Just stick to improving the existing architecture while keeping backward-compatibility.	_0w8t	9.512542	-5.4815483	comment	3.0	19.0	1680461820	-7.783574
35416361	There's something about this that gi	"There's something about this that gives the impression of an ISA that was developed in simulation without any real regard for hardware and then just tossed over the wall to be realized in silicon. I'm particularly baffled by instructions not being byte-aligned. Is there any successful processor that takes this ""stream of bits"" approach?"	djur	9.6280775	-5.577547	comment	3.0	19.0	1680477231	-7.6890326
35429924	Since most of us don't design CPUs o	Since most of us don't design CPUs or micros, does it matter much whether it's RISC-V vs ARM? In other words, is there any way to contribute in the RISC-V space and gain an advantage? I can see how it could work out for Intel or Nvidia but for an end-user I can't see how I would jump away from the architecture I've spent the last 10 years on.	zwieback	9.3969345	-5.666449	comment	3.0	11.0	1680550163	-10.585003
35430068	But since AMD owns amd64, can't you 	But since AMD owns amd64, can't you get a license from them?	iso8859-1	9.395105	-5.2342	comment	3.0	11.0	1680550771	7.840695
35430461	This emphasis on price is a bit misl	This emphasis on price is a bit misleading imho. Arm had revenues of less than $800m in the last reported quarter and there were 8 billion Arm cores shipped. So that’s less than 10c per core. And that’s not the fee for the ISA it’s the total cost of licensing the core. So if you’re expecting a big cost saving on the end user price from the ISA being open source then you’ll be likely to be disappointed.More important is that more competition may lead to better designs and the RISC-V gives more freedom for firms to innovate.	klelatti	9.439366	-5.580431	comment	3.0	17.0	1680552292	5.8202896
35443421	Microcode (the concept) is very much	Microcode (the concept) is very much older than the 1970's.  Per Wikipedia ([1]) the earliest system with something like 'microcode' dates back to 1947.What is 'special' for the 8086 is that this was a low cost microprocessor using microcode, as opposed to a multi-million dollar mainframe CPU.[1] https://en.wikipedia.org/wiki/Microcode#Historyedit: fix typo	pwg	9.606038	-5.450702	comment	3.0	10.0	1680630555	7.730306
35443969	It's always boggled my mind that the	It's always boggled my mind that they'd have 32 bits of addressing registers, but overlap 12 bits, leaving just 20 useful bits. What a waste. I guess the segment:offset scheme had some advantages, but honestly, I've never felt like I had a good understanding of them.But, what if the overlap had been just 10 bits, or just 8, leaving a much larger functional address range before we got clobbered by the 20-bit limit; what if it was 22 or 24 bits of useful range? Can you speculate what effect such a decision would've had, and why it wasn't taken at the time? I understand in 1978 even 20 bits was a lot, but was that optimal?	myself248	9.918893	-5.8047886	comment	3.0	28.0	1680632850	-7.540791
35444059	The 20 bits of address was likely a 	The 20 bits of address was likely a direct result of Intel's decision to package the 8086 in a 40-pin package.They already multiplex the 16-bit data bus on top of 16 of the 20 pins of the address bus.  But with only 40 pins, that 20-bit address bus was already using half of the total chip pinout.And, at the time the 8086 was being designed (circa. 1976-1978) with other microprocessors of the time having 16-bit or smaller address buses, the jump to 1M of possible total address space was likely seen as huge.  We look back now, comfortable with 12+GB of RAM as a common size, and see 1M as small.  But when your common size is 16-64k, having 1M as a possibility would likely seem huge.	pwg	9.753081	-5.4219227	comment	3.0	18.0	1680633263	-7.569226
35450128	"From the page : ""Andromeda, a 13.5 M"	"From the page : ""Andromeda, a 13.5 Million Core AI Supercomputer"". Blown away by the number of cores (I considered myself lucky to have 2 10000+ cores GPU in my workstation) I then realized that the word ""core"" is singular in the sentence. Is it just a mistake or does it mean something else ? (genuine question, English is not my first language)EDIT: Ahhh a bit below on the page it is written ""13.5 million AI-optimized cores"" and there it's plural. So it was probably just a mistake."	wiz21c	9.487966	-5.294782	comment	3.0	13.0	1680675974	7.895672
35455003	The idea is that the tenstorrent car	"The idea is that the tenstorrent cards dynamically prune out codepaths that aren't used.Transformers naturally have a big part  of the network that is unused on any particular token flowing through the model. You could see that by how little RAM ended up being used in llama.cpp when they moved to mmaping the model.So my understanding is that the tenstorrent cards are drastically more efficient, even on ""dense"" models like transformers because of the sparsity of any specific forward pass.Also: I wouldn't bet on AMD accelerators for ML. They've disappointed every time. I would trust Jim Keller, whose every project in the last decade ended up being impactful.I think the internet access is just to download the driver. It's not some sort of DRM setup where it needs to be always-online."	VHRanger	9.268107	-5.2264857	comment	3.0	13.0	1680705429	-8.641517
35474862	Dumb question: how much lead would i	Dumb question: how much lead would it take to shield an unhardened cpu for space missions?	jahnu	9.495571	-5.185947	comment	3.0	14.0	1680817054	7.7758503
35504382	There is one for arm64 is there one 	There is one for arm64 is there one for the rpi4 ? I already run containers on mine this would be even better.	trustingtrust	9.618767	-6.052717	comment	3.0	12.0	1681059136	-7.8098946
22311843	Heh, TravisCI got acquired and laid 	Heh, TravisCI got acquired and laid off a bunch of staff but at least externally appear to have increased their velocity.CircleCI has raised 115M, hire the best people, and are struggling to release a half-baked UI remake that has been in progress for seemingly ever(that is now being forced on everyone this quarter supposedly).Not sure what the take away is.. Hard to make sense of it externally; interesting things going on under the surface perhaps.	Rapzid	8.872508	-6.4064794	comment	3.0	10.0	1581535343	1.3018497
22316052	I agree. An even bigger problem is t	I agree. An even bigger problem is that most of the benchmark suite is completely irrelevant to what these CPU's are going to be used for. These are meant for servers. They should keep that in mind when selecting what benchmarks and which operating system to use.	btmorex	9.608648	-5.247678	comment	3.0	15.0	1581580059	7.927285
22315928	I wish I could see a statistic on th	I wish I could see a statistic on the number of people that would have bought Win 10 Home to run on their 64 core machine if only it had support for 64 cores!	dvdbloc	9.508865	-5.27909	comment	3.0	13.0	1581577952	7.932239
22324975	> The PC architecture is extremely w	> The PC architecture is extremely well-documented in practice (as are alternatives like WebAssembly), and there are going to be emulators for them around for the foreseeable future.Intel has patents on the x86 ISA. Though the basics of the instruction set (386, 486, Pentium) are outside the scope of a patent, it's impossible to write a complete emulator for a chip made within the past 20 years without infringing on Intel's IP.	bitwize	9.562795	-5.2029896	comment	3.0	12.0	1581669579	-7.612016
22336659	There is no mention in the article w	There is no mention in the article whether the software suite was vetted for support of more than 64 threads on Win32. The API has a peculiar weakness that limits thread scheduling to a single processor group by default and a group can have no more than 64 hardware threads. To get above this limit, the application must explicitly adjust the processor affinity of its threads to include the additional hardware threads. MS was not in a hurry to adjust the C++ STL and their OpenMP runtime after the basic processor group API appeared in Vista. I am not sure if they managed to do it by now. Some of the benchmark results look to me like the missing scaling from 64 to 128 hardware threads on Windows might be caused by this.	gmueckl	9.753431	-5.4963603	comment	3.0	18.0	1581788624	8.045239
22358147	Is that with spectre/meltdown/etc pr	Is that with spectre/meltdown/etc protection on?	dilyevsky	9.619924	-5.556471	comment	3.0	12.0	1582048097	7.819995
22384937	I'm not sure why I'm being downvoted	I'm not sure why I'm being downvoted. This is a legitimate question. Does this bug make the cpu unusable? Does the work around for it slow down the per core performance to the point of unusability?	ehutch79	9.590834	-5.2962008	comment	3.0	10.0	1582306418	7.751403
22386840	> The x86 ISA really is a mess!No, i	"> The x86 ISA really is a mess!No, it's not. I've written the compilers for both x86 and x64. One should not look for too much idealistic ""symmetry"" but look at it as a domain specific encoding language. Behind that encoding is anyway huge machinery that significantly speeds up that what is written in the language, and it's even proven that, when there is enough silicon, it is of advantage that some optimizations are actually done during the execution. Some execution statistics are simply dependent on the information which dynamically depends on execution and can't be pre-coded by a compiler.Since long ago, even those processors that started as RISC got more and more instructions and started to worry about having them encoded with less bits.And that all doesn't mean that the compilers shou"	acqq	9.723952	-5.7088623	comment	3.0	34.0	1582319826	-7.6961255
22387438	The CPU contains essentially no hard	The CPU contains essentially no hardware that is there only to support real mode, which is simply an documented combination of configurations of various protected mode relevant mechanism plus changed behavior of exactly one microarchitectural operation, which involves replacing bunch of nontrivial microcoded logic with simple 4 bit left shift.	dfox	9.781406	-5.346113	comment	3.0	11.0	1582323080	-7.869231
22399949	There is a tangible benefit. For use	There is a tangible benefit. For users.64-bit only, Project Catalyst, BitCode, HTTPS only connections etc are examples of initiatives which definitely has caused pain to developers but has immensely benefited users as a whole. And if you don't passionately care about users then frankly find another platform to develop on.	threeseed	9.833276	-5.3906655	comment	3.0	11.0	1582496397	-7.8838434
22413523	How widely deployed are IOMMUs these	How widely deployed are IOMMUs these days? I thought they became a standard thing a few years ago.	jjoonathan	9.74252	-5.1856985	comment	3.0	20.0	1582641459	-13.427422
22425098	That's amazing! After using Emacs fo	That's amazing! After using Emacs for years, I switched to VS Code. Magit was one one of the things I really, _really_ missed from Emacs and I've never found anything remotely as nice. I'll definitely give this a try.	kstrauser	8.871591	-6.416326	comment	3.0	15.0	1582737973	-11.378141
22430153	downthread there's a USB-ISA adapter	downthread there's a USB-ISA adapter (lets you use ISA boards via a USB port) and that was so odd I chipped in actual money to see it happen	joshu	9.668825	-5.193373	comment	3.0	10.0	1582774130	-10.891145
22433421	Testing a Chinese x86 CPU: A Deep Di	Testing a Chinese x86 CPU: A Deep Dive into Zen-Based Hygon Dhyana Processors	vanburen	9.296836	-5.2024035	story	3.0	47.0	1582813100	7.928548
22437159	Yikes. The snarky answer: find a bet	Yikes. The snarky answer: find a better place to work.I mean... people have been using version control for decades. It's not controversial.	davidw	8.804237	-6.3680105	comment	3.0	17.0	1582833584	-11.751384
22440201	I think you're missing a fourth opti	I think you're missing a fourth option: VMware or some open-source tool doing dynamic binary translation to run Windows on an ARM CPU.As far as I know, qemu can do this today.	XMPPwocky	9.920335	-5.399018	comment	3.0	12.0	1582859766	-8.109057
22440216	There is something seriously wrong w	There is something seriously wrong with their engineering vision when they can dedicate developers to adding new emoticons to iMessanger when they don't even have Time Machine backups to iCloud for MacOS.	laichzeit0	9.7708235	-6.20798	comment	3.0	12.0	1582859939	-13.869077
22440244	Moving away from Intel sounds like a	Moving away from Intel sounds like a huge benefit to me due to the number of ways they have held back computers over the decades. I believe that ECC memory, for example, would be standard in all desktops and laptops today if Intel didn't use it for market segmentation. That doesn't even touch on all the security issues.	Lammy	9.399908	-5.3139353	comment	3.0	14.0	1582860227	7.842464
22442804	Securing Memory at EPYC Scale	Securing Memory at EPYC Scale	jgrahamc	9.469524	-5.384339	story	3.0	80.0	1582898670	8.050999
22451330	"How are they defining ""workstation c"	"How are they defining ""workstation class""? You can get SMT-4 18-core and 22-core POWER9 workstations with 72 and 88 hardware threads respectively in a single socket."	classichasclass	9.485557	-5.1941175	comment	3.0	15.0	1582993687	7.91411
22453405	Do you need the `arm_64bit=1` flag t	Do you need the `arm_64bit=1` flag to get 64-bit kernel, 64-bit userland or no? I would have thought 64-bit everything would have been the default.	MuffinFlavored	9.772143	-5.238579	comment	3.0	10.0	1583013295	-7.807884
22454183	So maybe it's time to create a succe	So maybe it's time to create a successor to x86-64.  Nobody is preventing that from happening.	ColanR	9.788012	-5.4029036	comment	3.0	11.0	1583021575	-7.793086
22456964	We tried to switch to ARM. We mainta	"We tried to switch to ARM. We maintain our ARM port of all our code for the day there are servers we can use. However, we are in production with AMD now.From one of the posts: ""Readers of our blog might remember our excitement around ARM processors. We even ported the entirety of our software stack to run on ARM, just as it does with x86, and have been maintaining that ever since even though it calls for slightly more work for our software engineering teams. We did this leading up to the launch of Qualcomm’s Centriq server CPU, which eventually got shuttered. While none of the off-the-shelf ARM CPUs available this moment are interesting to us, we remain optimistic about high core count offerings launching in 2020 and beyond, and look forward to a day when our servers are a mix of x86 (Inte"	jgrahamc	9.516273	-5.1845737	comment	3.0	20.0	1583073194	-7.6954875
22456921	"Title is ""Technical Details of Why C"	"Title is ""Technical Details of Why Cloudflare Chose AMD EPYC for Gen X Servers"""	bluedino	9.297065	-5.2314153	comment	3.0	11.0	1583072366	-7.573357
22496113	It looks like finally users may have	It looks like finally users may have complete control over their Intel computers without Intel having the final say. I, for one, am quite happy about this.	blendergeek	9.43333	-5.1930265	comment	3.0	41.0	1583431145	7.7671514
22506039	There was a brief period in the earl	There was a brief period in the early 2000s when AMD had a clear performance lead in 32-bit and x86-64 datacenter stuff.This was at the time of the first generation Opteron CPUs (single core), which could be configured in a dual socket motherboard in a 1U server. They had a good price/performance advantage over Intel, which was also at the time a single core per socket.Around 2006 or so Intel started pulling ahead and AMD never really caught up.With the development of things based on the zen/zen2 cores, now may finally be the time...	walrus01	9.281403	-5.1837945	comment	3.0	13.0	1583519804	7.8834953
22507022	They need to work on making faster c	They need to work on making faster cores instead of just throwing a ton of cores at the problem. In the datacenter, we commonly have to pay per-core license costs for certain vendor software. I'm not going to pay 7 figures to grow our Oracle license for example by switching to AMD when we can get Intel CPUs with faster, fewer cores.	RKearney	9.506793	-5.255543	comment	3.0	13.0	1583526591	7.8735867
22507697	I think I see a comment to this effe	I think I see a comment to this effect on every post about AMD, that their software ecosystem isn't as advanced.But, isn't it a pretty narrow market that benefits from Intel's tooling here?Startups running their entire business on JITed runtimes on top of multiple layers of virtualization in cloud providers aren't using this. Enterprises with enough resources to revise their entire stack to work on ARM (Cloudflare, Microsoft, Google, Amazon) likely have the internal resources and skills already to build the missing tooling and profile statistically using massive fleets of servers.How large is the target market of Intel purchasers that are large enough and performance sensitive enough that it's profitable to micro-optimize assembly, and yet not large enough that it's a rounding error to bui	AaronFriel	9.280739	-5.1896787	comment	3.0	11.0	1583531706	7.8470106
22516302	BCM is Body Control Module. ECU is E	BCM is Body Control Module. ECU is Engine Control Unit. 2 different parts (logically). Both are physically PCB's (Printed Circuit Board) that physically can sit either side by side or in very different sides of the car - that's car maker decision. I can't explain it simpler than this.	unnouinceput	9.477496	-5.5338335	comment	3.0	10.0	1583640714	8.269482
22521439	Physical register <-> L1 <-> Fill Bu	Physical register <-> L1 <-> Fill Buffer <-> L2 <-> L3 [<-> L4 ] <-> [bus buffer <->] memory moduleI wouldn't count buffer registers inside DRAM chips as a separate cache.	blattimwind	9.936883	-5.5381985	comment	3.0	10.0	1583710088	8.127467
22537518	the closest I can think of was the f	the closest I can think of was the famous floating point error that caused Intel to recall lots of parts[1].  Even that didn't render the CPUs useless for most users, only some scientific and business use cases really had problems.[1] https://en.wikipedia.org/wiki/Pentium_FDIV_bug	metalliqaz	9.491984	-5.2922487	comment	3.0	15.0	1583861746	7.879287
22537556	For those of you considering alterna	For those of you considering alternate instance types remember that it it is important to do scientific benchmarks.I just completed a us-west to us-east migration for a client because after a lengthy benchmark session we learned that the instances we really needed for our specific workload could not be AMD based. I tried a handful of AMD boxes and sent them through the ringer, but the Intel boxes always came out on top. The cost of these is significantly lower in us-east, hence the migration.Not to knock AMD, but in the presented configuration from AWS the comparative Intel<>AMD instance types vary greatly. There is also no compute-heavy instance type from AMD at this time (AFAIK please correct me).For reference our workload is network (outside AWS), Compute and RAM heavy. The c5.2xlarge s	whalesalad	9.414451	-5.1965494	comment	3.0	11.0	1583861976	-8.360624
22537818	It's probably a bit of both. Intel s	It's probably a bit of both. Intel started implementing speculative execution decades ago but the first exploits like Specter/Meltdown weren't published until a few years ago so that alone is strong evidence that there might be ancient attack vectors that we haven't even considered yet.On the other hand, interest in this topic among the public has definitely grown since branding departments started getting their hands on the exploits and Bloomberg published that sensationalist Micro story so it's a self reinforcing cycle.	akiselev	9.625573	-5.552392	comment	3.0	16.0	1583863217	7.7692366
22538506	"The ""new"" AMD attack depends on lack"	"The ""new"" AMD attack depends on lack of already existing spectre mitigations. If I understand correctly, this one is a real new one that works against a correctly patched system."	temac	9.432034	-5.3899655	comment	3.0	18.0	1583867313	7.8594375
22545097	You are probably joking, but I am se	You are probably joking, but I am seriously annoyed there's no donkey emoji.	samastur	9.781958	-6.266026	comment	3.0	11.0	1583928796	-13.964639
22552265	That already exists with AMD SME and	That already exists with AMD SME and AMD SEV (https://en.wikipedia.org/wiki/Zen_(microarchitecture)#Enhanc...). But to protect against bit flipping attacks like rowhammer you need authentication, not encryption, and I don't think these features authenticate the encrypted memory (since they would need extra memory to hold the authentication tag).	cesarb	9.790245	-5.3233457	comment	3.0	10.0	1583972622	8.016282
22552464	Googler here. We have the same Code 	Googler here. We have the same Code Search tool internally, this is honestly one of my favorite things about working at Google. Great to see this open sourced.	vikinghckr	8.79644	-6.0249996	comment	3.0	22.0	1583975091	-11.270858
22554341	Code search was “too good to be true	Code search was “too good to be true, gotta pinch myself” awesome. I miss it to this day.Here is how I used it - I’d type in some code I was working on and the search result would show similar code and how it was used. Great for debugging and thinking by looking at similar solutions. Sigh.	rkhassen9	8.832523	-6.0335264	comment	3.0	12.0	1583994773	-11.265887
22564360	I've so far been quite happy with th	I've so far been quite happy with the iCE40UP5k[1] based dev kit I got, though there are a lot of options out there[2].The iCE40 FPGAs are a bit whimpy compared to Altera and Xilinx offerings from what I understand, but I really liked the idea of an open-source toolchain[3][4] being available.To get a taste without committing cash you could just use a simulator[5], which I imagine you'd be using a fair bit anyway as it allows you easier access to the internal state.As to actually programming, I've found the following resources useful. I started with Verilog mainly because code-gen tools like nMigen[6] generate Verilog, but for writing by hand it seems VHDL is preferred.Anyway, links, first off some exercises to get going[7]. Introduction to Verilog[8], also has a nice general overview of H	magicalhippo	9.105104	-5.4514213	comment	3.0	12.0	1584068793	8.600125
22581560	Intel-Funded Study Finds AMD Procs I	Intel-Funded Study Finds AMD Procs Incl. Ryzen Vulnerable to Side-Channel Hack	Fjolsvith	9.456471	-5.339418	story	3.0	1.0	1584250664	7.827099
22617344	> The Triton chip will have eight me	> The Triton chip will have eight memory controllers supporting memory running at 3.2 GHz, which is the same number of controllers in the Vulcan chip, which maxxed out at 2.67 GHz memory speeds. That’s a 20 percent increase in memory bandwidth, and the question is how that will balance out against the high core counts in some of the Triton SKUs.96 cores, seems like it would be tricky to keep them busy with modest memory throughput increases.	wyldfire	9.717374	-5.317677	comment	3.0	12.0	1584543543	8.004196
22616654	ECC would be cool for using these fo	ECC would be cool for using these for remote builds. Don't know if that's ever going to happen.	klodolph	9.433534	-5.4939594	comment	3.0	10.0	1584539706	8.219127
22626712	Wow yes... Are specific emojis allow	Wow yes... Are specific emojis allowed over others?Test:⏩⏫⏪⏬◀▶⤵↩↔↙↘↖↗⬆⬇⬅↕↪ℹ⤴🆒🈳🈶🈚🈵🆓🆗🆖🈴🈲🉐🈹🈁🆕🆙🈺🆔🆘🆑㊗㊙🈂Ⓜ🉑🈸🈷🅰🅱🆎🅾©®™‼⁉⭕〰◼◻◾◽▪⬜⬛▫〽Course HN does just fine without Emojis. I can only imagine the amount of downvoting that would ensue. I could see maybe some being useful like the arrows.Edit:By the looks of it the emojis that are meant to be signs work. The ones that are actual faces do not.	giancarlostoro	9.806776	-6.267933	comment	3.0	15.0	1584620048	13.023423
22626879	> Course HN does just fine without E	> Course HN does just fine without Emojis. I can only imagine the amount of downvoting that would ensue.You're probably right on the downvotes but I do wonder why. Is there anything inherently bad about emoji or is HN sometimes just a counterculture for the sake of being a counterculture?	t0astbread	9.802318	-6.2612453	comment	3.0	12.0	1584621854	13.0269
22628225	"It looks interesting, great work! 
I"	"It looks interesting, great work! 
I'm curious why you chose x86 emulation instead of arm emulation though, provided that this is running on an arm processor?"	madushan1000	9.688977	-5.259713	comment	3.0	11.0	1584630735	-7.738494
22628281	#4 on the list is taking sleeping pi	#4 on the list is taking sleeping pills. In a comment thread somewhere else, the author also said she stopped consuming caffeine, which is notably dismissed in this list.I need HN to start accepting eyeroll emojis in comments.	ebg13	9.799984	-6.2673025	comment	3.0	30.0	1584631182	13.031421
22654743	The iAPX 432 was long after the 8086	The iAPX 432 was long after the 8086, not before.And the 80286 predated the 80386 as a 32-bit processor, so the 80286 was Intel's first 32-bit offering. It was still segmented, missing the paging hardware. I helped write an operating system for it. Short-lived.	JoeAltmaier	9.534508	-5.2594514	comment	3.0	11.0	1584883170	7.6124845
22659491	> One day they _may_ be sufficiently	> One day they _may_ be sufficiently better than Intel that Apple could pull a “Rosetta” a second time on the Mac, translating apps from x86 to ARM at the software level.Emulating x86 on ARM is very hard because x86 has a strong memory model while ARM has a weak one. This either makes emulation very slow or will break lots of multithreaded applications.The other emulation direction (ARM on x86) works much better.	wolfgke	9.744965	-5.2253	comment	3.0	17.0	1584917337	-7.7306166
22660357	Don’t they still have to deal with t	Don’t they still have to deal with the fact that Intel has been vocal about suing anyone doing x86 emulation?	doyouevensunbro	9.499834	-5.203409	comment	3.0	10.0	1584925578	7.7152414
15094216	We've come a long way, but it is rea	We've come a long way, but it is really cool how easy is to tell that it is the x86-64's ancestor.	noncoml	9.720312	-5.3807044	comment	3.0	18.0	1503610163	-7.7750053
15094718	Noncoml, did you really read the man	Noncoml, did you really read the manual? The 4004 is unrelated to the x86-64.Perhaps you are confusing it with the 8008 which is related to the 8080 which is related to the 8086 which is related to the 80286, 80386, 80486, and so forth.	drallison	9.595381	-5.384882	comment	3.0	12.0	1503614687	-7.5281777
15101739	what did you study/how did you learn	what did you study/how did you learn to design FPGAs?  I had an early intro to verilog in school but it all seemed so opaque to me.  Do you think it's possible for people to teach themselves?  Thanks.	tastythrowaway	9.068888	-5.4084563	comment	3.0	20.0	1503691541	8.441248
15101846	I taught myself and now design FPGAs	I taught myself and now design FPGAs for a living as well.  Had 1 class in college that, like your experience, was totally opaque.  But it sparked my curiosity.Not sure I can advise exactly _how_; I'm usually strong at self learning.  Just letting you know it's possible.  Personally I'd start with IntelFPGA (formerly Altera) products; I found them easier to use.	fpgaminer	9.067707	-5.363897	comment	3.0	17.0	1503692407	8.429805
15102141	I wouldn't recommend Icarus Verilog,	I wouldn't recommend Icarus Verilog, it's not a very good simulator. You're much better off downloading either the free Altera/IntelFPGA copy of Modelsim or using the free version of Xilinx's Vivado.The DE10 Nano is a great board though, huge FPGA that can hold big designs and the HPS gives you a lot of extra capabilities.	mattcoles	9.121415	-5.393344	comment	3.0	12.0	1503694406	8.564497
15103913	A bit late to the party, but my advi	A bit late to the party, but my advice: unlesss your goal is to learn high-performance design, try to save yourself a lot of effort by using a higher-level HDL. Depending on how cool your professor is and what their pedagogical goals are, they'll be fine with it. Using something like CLaSH will statically prevent you from doing a lot of hardware stuff that's non-synthesizable, flammable, or just plain dumb. You can do a lot of things in standard HDLs that just don't make any sense, and a lot of students get confused and do them. Not only will something like CLaSH or Chisel prevent you from doing dumb things, but they will get you in the mindset of doing things correctly.	wyager	9.1101055	-5.4842153	comment	3.0	12.0	1503718283	8.652591
15116975	If ME is not a backdoor then why doe	If ME is not a backdoor then why doesn't Intel allow to disable it? Why don't they publish detailed descriptions? Why don't they allow user to run their programs on ME CPU?	codedokode	9.489703	-5.2227893	comment	3.0	50.0	1503932839	7.7314215
15117009	If ME isn't a backdoor why did Russi	If ME isn't a backdoor why did Russia and China start efforts to surplant Intel with locally sourced processors (even before US embargo'd Intel from china)	valarauca1	9.507859	-5.202926	comment	3.0	32.0	1503933022	7.637263
15117026	TL;DR: Intel put a special High Assu	TL;DR: Intel put a special High Assurance Platform (HAP) mode in ME for the US government. If toggled on, it disables all non-critical ME functionality. Questioned, Intel responded:> In response to requests from customers with specialized requirements we sometimes explore the modification or disabling of certain features. In this case, the modifications were made at the request of equipment manufacturers in support of their customer’s evaluation of the US government’s “High Assurance Platform” program.  These modifications underwent a limited validation cycle and are not an officially supported configuration.	discreditable	9.468345	-5.2140956	comment	3.0	16.0	1503933108	7.7804713
15149140	I saw mentioned in another thread th	I saw mentioned in another thread that all AMD processors support ECC RAM, provided you pick a motherboard that does it.	wlesieutre	9.401388	-5.470583	comment	3.0	22.0	1504279254	8.173604
15172514	A question that constantly reoccurs 	A question that constantly reoccurs for me is this: who does the scheduling of threads and/or processes in a unikernel?I know unikernels are single process, but are they also intended to be single core? If not, without the kernel scheduler, what is providing that function to the unikernel? Is it just an optional module, say in the case of rumprun?	bluejekyll	9.932287	-6.2264166	comment	3.0	10.0	1504585506	-12.381023
15172703	Would IoT be the killer app for unik	Would IoT be the killer app for unikernel?  Since most IoT apps are simple single purpose app and require fast boot time.	ww520	9.910736	-6.229408	comment	3.0	17.0	1504588815	-12.384892
15187357	From your link:> In particular, MINI	From your link:> In particular, MINIX was chosen as the basis for the operating system (previously, ThreadX RTOS had been used). Now ME firmware includes a full-fledged operating system [...]Woah, did I read that correctly? That there is a version of MINIX running inside of the Intel processors of presumably almost every modern computer with an Intel CPU that has Intel ME in it? If so then that's insanely cool! I mean I still dislike Intel ME itself and wish I could disable it easily and without risking damage/destruction but the idea of there being a version of MINIX running on my computer right now is quite cool.	unkown-unknowns	9.896891	-5.188017	comment	3.0	10.0	1504734251	-8.354415
15197811	I imagine most usecases where this p	I imagine most usecases where this performance would matter would be if you were compressing a ton of pngs at once. In which case wouldn't it be much faster just to run several different processes instead of one process using multiple cores?	Houshalter	9.779793	-5.3408656	comment	3.0	16.0	1504844076	7.6291685
15197965	Well it must have taken them a ton o	Well it must have taken them a ton of work to parallelize their algorithm also. It would have been better to just have a batch mode that lets you process multiple images at once on different cores.	Houshalter	9.891712	-5.650473	comment	3.0	12.0	1504846871	8.168668
15225699	And then the intel ME debacle became	"And then the intel ME debacle became widely known and, as usual, the tinfoil hatted among us got to say ""told you"""	zdkl	9.409381	-5.266181	comment	3.0	29.0	1505204814	7.7161846
15230378	600 billion instructions per second 	600 billion instructions per second to show a poop emoji.	fivesigma	9.803298	-6.2659936	comment	3.0	11.0	1505242265	-13.954231
15247575	> I even migrated my install in-plac	> I even migrated my install in-place from x86 to amd64 after upgrading the CPUMy hat is off to you -- I would have guessed that wasn't possible!	sevensor	9.586683	-5.363107	comment	3.0	10.0	1505394647	-7.7805996
15253958	I'm surprised that there's even a pr	I'm surprised that there's even a processor (as in a Turing-complete machine) in those ASICs at all --- at those speeds, I would've expected more along the lines of lots of hardcoded switching circuitry with any programmability restricted to lookup tables and configuration registers, closer to an FPGA than CPU in concept. Certainly, a lot of slower switch ASICs are designed as hardcoded switches; here's one example:https://www.intel.com/content/dam/www/public/us/en/documents...	userbinator	9.100221	-5.345446	comment	3.0	13.0	1505439952	8.281611
15267784	Let me try to offer a slightly more 	Let me try to offer a slightly more substantial comment than the others here so far.This proposal is motivated by trying to get more applications running off the shelf or with minimal changes, which is a worthy goal. But to achieve that, it seems like the concept of a unikernel is growing more and more complexity. At some point, isn't it just Linux (or any other traditional kernel/OS) with a (slightly?) more modular design, statically linked applications, and no memory protection or scheduler (but it might even have that)?Wasn't the point of a unikernel to be small and simple? Aren't we losing something by bringing the kitchen sink back (even if there's a compile time option to turn it off)?And even once you have all that complexity, you still can't SSH in and diagnose problems, poke aroun	btrask	9.9227	-6.222146	comment	3.0	16.0	1505612476	-12.381261
15270285	The only real question is:When am I 	The only real question is:When am I going to be able to name my variable as emojis?	VHRanger	9.800883	-6.26758	comment	3.0	10.0	1505664862	-8.403508
15288413	I haven't studied it in detail but m	"I haven't studied it in detail but my mental picture of RISC-V is it being an attempt at a modern, clean, patent-unencumbered ISA suitable for use from microcontrollers to large systems. The suitability progress in this effort may naturally be uneven (low-power microcontrollers with ""straightforward"" basic implementations would be usable long before large SMP servers with wide out-of-order cores and powerful atomics and IPC features, for example).At this point, it would be very lovely and educational to see an Oberon system (http://www.projectoberon.com/) ported to these small boards. (It could definitely use more memory to run a desktop system, though.)"	jhgb	9.413265	-5.6204653	comment	3.0	16.0	1505852261	-10.532065
15288794	"""The reality is that no digital logi"	"""The reality is that no digital logic design can work 'without a clock'. ""This is not true.""HDL based hardware loops are not like this at all. Instead, the HDL synthesis tool uses the loop description to make several copies of the logic all running in parallel.""This is not true as a general statement.  There are for loops in HDLs that behave exactly like software loops.  And there are generative for loops that make copies of logic.Also, the ""everything happens at once"" is not true either.  In fact with out the delay between two events happening, synchronous digital design would not work. (specifically flip-flops would not work)."	DigitalJack	9.129149	-5.445909	comment	3.0	12.0	1505855107	8.327447
15290518	When you've got a generation of top 	"When you've got a generation of top talent tinkering with an ISA that doesn't suck like x86, you're going to see adoption in actual industry.RISC V is not much more than a slightly tweaked MIPS, the previous ""preferred academic architecture"", and we all know what happened to that... much to the chagrin of those who thought MIPS would be ""the future of computing"".My prediction is that it will probably replace MIPS where it's currently used (very low-end tablets and phones, and a lot of home routers), but won't really displace ARM or x86. A ""pure RISC"" like MIPS and now RISC V just doesn't have the ""CISCness"" that makes successful CPUs beyond the theoretical.https://www.extremetech.com/extreme/188396-the-final-isa-sho...Look at the results for the Loongson. It has at least twice as much cach"	userbinator	9.474434	-5.6211004	comment	3.0	13.0	1505877380	-10.508971
15290013	I don't. When I was setting this up 	I don't. When I was setting this up I didn't find any guides or blogs about doing this so I thought it was not of interest to anyone. So I just went about implementing it a piece at a time. Installing pam_jail, then getting /etc/pam.d/sshd configured to use it (which is a one-line addition, very easy). Now by default pam_jail simply puts the user into a jail of their home directory. This is where you can go a few routes with this. If simply jailing the user on the host OS to their home directory is all you are interested in doing you can stop there. Configure FreeBSD to not allow users to see other processes, user processes and group processes not owned by them, and they won't know anyone else is on the system.security.bsd.see_other_gidssecurity.bsd.see_other_uidsThe above are the two sysc	X86BSD	9.75015	-6.395933	comment	3.0	14.0	1505869633	10.493673
15313281	(author here)The support I received 	(author here)The support I received during the last three weeks has been phenomenal! Thanks again! The only disappointment was that the campaign did not get a lot of press outside the Emacs community, which was a bit frustrating because I published a lot of the articles that are intended for potential users who are not Emacs users.Until now that is - please have a look [1]. I found it quite challenging to explain why someone who is not familiar with Emacs would want to use Magit even though the majority of those who have given it a chance swear by it. It's a bit like explaining to someone who has only every used GUIs, why the command-line can be an empowering interface. But I think I did a fairly good job at [2].Also, please excuse the crappy video - the Magit campaign might be the Kicksta	tarsius	8.8885355	-6.4128165	comment	3.0	10.0	1506095691	-11.348091
15331944	> At this point, does it matter much	> At this point, does it matter much? I have a Celeron Qnap 25X that chews up everything I throw at it, the only limitation is the 8GB of RAM.It surely chews no code containing AVX/AVX instructions. Also support vor VT-d is probably missing, just as TSX. Not to speak of AVX-512, which is planned by Intel to come to prosumer processors in near future.	wolfgke	9.461351	-5.548993	comment	3.0	14.0	1506358042	8.166266
15343105	To succinctly convey emotions, opini	"To succinctly convey emotions, opinions, viewpoints, ""feels"". To simply have a non-verbal vocabulary, to have a different quality to certain parts of the communication, to signify a different quality of seriousness/playfulness/feeling.It's the new emoticon. :-)"	pas	9.796733	-6.2597785	comment	3.0	12.0	1506464636	-13.960365
15344261	How will it perform relative to othe	"How will it perform relative to other ISAs, given that RISC-V is basically a slight variant of the MIPS --- the other ""academic ISA"" that probably received as much if not more attention and hype as RISC-V does today? Not long ago, a 4-way OoO MIPS fared poorly against ARM and x86:https://www.extremetech.com/extreme/188396-the-final-isa-sho...It would be interesting to see that comparison performed again on more recent ARM and x86, as well as real RISC-V silicon."	userbinator	9.444532	-5.637871	comment	3.0	12.0	1506477065	-10.496577
15343555	The Mill architecture team is workin	The Mill architecture team is working on a static-scheduled architecture, but only time will tell if compilers can reasonably get good enough at it to make it viable. One major problem with static schedules is that if you want more IPC, you generally have to change the ISA or have machine-specific loaders which mutate the code at load time (this is the approach the Mill folks take).Standard ISAs let you write a program with a linear model, and let the hardware get better at scheduling the micro ops over time, or just let it be linear (as is generally preferred on low end microcontrollers and low-power mobile cores).	microcolonel	9.768872	-5.691946	comment	3.0	15.0	1506468467	7.9466906
15369169	Looking forward to CPUs getting on-d	Looking forward to CPUs getting on-die FPGAs so we can actually chuck some fully deterministic timing tasks onto them. Even if you're running on metal without an OS, there are heaps of things that can stop your code from running with predictable timing, and it seems like it's getting worse as CPUs are getting more complex.	cjbillington	9.650222	-5.3865147	comment	3.0	14.0	1506718876	7.7953773
15373897	I have no idea why you're downvoted.	I have no idea why you're downvoted. Email is great especially because it's an open standard. I don't understand why people expect Linux kernel development to adopt some kind of proprietary platform for communications. I think it's a terrible idea.	AndyMcConachie	8.750557	-6.055947	comment	3.0	16.0	1506792163	4.630314
15380612	"I don't agree. 
If it's non trivial,"	"I don't agree. 
If it's non trivial, I don't have the more advanced verification tools such as UVM if I prototype via FPGA.The ability to perform constrained randomised verification is only workable via UVM or something like it. For large designs that is arguably the best verification methodology. Without visibility through the design to observe and record the possible corner cases of transactions, you can't be assured of functional coverage.While FPGAs can run a lot more transactions, the ability to observe coverage of them is limited.I have worked on multiple SoCs for Qualcomm, Canon and  Freescale. FPGAs don't play a role in any SoC verification that I've worked on."	gluggymug	9.154488	-5.4205837	comment	3.0	11.0	1506901883	8.260133
15383153	As explained in the article: Because	"As explained in the article: Because experimentally, ""smaller diffs"" cause people to nitpick on pointless things like whitespace instead of performance, features, and future-proofing the architecture (i.e. the fucking point)."	geocar	9.063416	-6.3471937	comment	3.0	14.0	1506945425	-11.554899
15391053	In the case of Lisp and Smalltalk an	In the case of Lisp and Smalltalk and other highly dynamic languages, would these on-die FPGAs open new compiler optimisation opportunities?	AriaMinaei	9.1346655	-5.4055104	comment	3.0	16.0	1507020420	8.373851
15391163	Tooling tooling tooling. FPGA hardwa	Tooling tooling tooling. FPGA hardware is cool but the tooling fucking sucks. Like stepping back into the time where you needed to pay thousands of dollars to get decent compilers and debuggers.The ability for anyone to develop software for CPUs at zero-cost is an amazing freedom. You literally cannot do that on certain fpgas--not only do they cost thousands, so do the tools to actually create a working design.Until that changes, FPGAs will always be niche.	nimish	9.078654	-5.3724475	comment	3.0	28.0	1507022216	8.455678
15391362	FPGA's are extremely powerful, but t	FPGA's are extremely powerful, but the toolchain is absolute dog shit. Xilinx, shame on you. Intel, will you change anything here?The compound problem of this in reality is that finding the right people who have the right strain of semi-insanity to do this really well, is very slim. And most of them are tied up with a massive salary from some aerospace company such as Raytheon, GE, Honeywell, or someone like Philips (building medical devices).Add to that compile times of an hour or a day, and you have a glacial development cycle on your hands.	nakedrobot2	9.098339	-5.3531804	comment	3.0	11.0	1507025994	8.380457
15403375	Hi, I'm one of the co-founders of th	Hi, I'm one of the co-founders of the lowRISC project. You're right that SiFive's licensing arrangements can be somewhat confusing. Although they sell licenses (like https://static.dev.sifive.com/business/sifive-license-and-su...) which look like a typical proprietary IP agreement, the SiFive Coreplex IP is a derivative of the open-source Rocket chip generator. SiFive was founded by a team from Berkeley who produced Rocket, and are almost certainly now the biggest contributor to ongoing Rocket development.	asb	9.385694	-5.6347313	comment	3.0	15.0	1507143686	-10.58014
15404084	Instruction set can't be patented. I	Instruction set can't be patented. Intel tries to patent   ways to implement  and functions those instructions carry.RISC-V will have less problems with those kind of patents, but it's impossible to design high-end microarchitecture without  cross-licensing.I may sound negative, but I'm actually positive about RISC-V in embedded and IoT arena. People just attach too much hype for the architecture.	Nokinside	9.404481	-5.6185126	comment	3.0	13.0	1507147610	-10.526526
15404224	RowHammer is a category of security 	RowHammer is a category of security vulnerabilities that work by exploiting DRAM that suffers from bit-flips when accessed in particular patterns. It can be used for local privilege escalation; for example a cell-phone app without permissions could use it to take full control of the phone, a server on a shared cloud host could attack other sites on the same host, or in the worst case, a browser Javascript program could break out of the browser (not done in this paper, but done as a proof-of-concept with caveats in one of the papers it cites). The main finding of this paper is that none of the existing mitigations is fully adequate, not even ECC.On the plus side, using RowHammers to make a fully working exploits is much harder than most other types of exploits, and the exploits people have 	jimrandomh	9.628066	-5.6554937	comment	3.0	14.0	1507148500	-13.894115
15405962	Looks awesome. Seems like this hardw	Looks awesome. Seems like this hardware may be the start of a pivot back towards RISC for general computing.Anybody have an idea if work has started on build of OpenBSD or FreeBSD for Risc-v? Would make an excellent chip for building super secure network edge devices or FreeNAS box.	Timothycquinn	9.410545	-5.6580477	comment	3.0	11.0	1507163426	-10.557592
15408425	I wonder how the EPYC 7401P would co	I wonder how the EPYC 7401P would compare with the 1950X in terms of performance/price? It has 24 cores v. 16, but with a lower clock speed, and is $51 more. If you can actually use all the cores, I suspect better?	gsnedders	9.340546	-5.2004356	comment	3.0	10.0	1507205048	7.8962283
15408511	ECC is a market segmentation tool. K	ECC is a market segmentation tool. Keeping ECC away from consumer hardware means you can charge more to make it available for industrial, professional etc. use.	barrkel	9.455486	-5.4911413	comment	3.0	25.0	1507205970	8.318138
15408792	Not really. Most people don't care a	Not really. Most people don't care about ECC and gamers actually prefer the faster non-ECC ram. Since ECC is more expensive to make, the industry is obviously not going to sell ECC to people not willing to pay more for it.And in a lucky coincidence it turns out that those who want ECC are willing to pay the moon for it, which of course gatekeepers like Intel exploit.	tormeh	9.468963	-5.513319	comment	3.0	15.0	1507208696	8.206686
15408817	Just to offer a partial counterpoint	"Just to offer a partial counterpoint to the popular ""ECC is a must for real work"" sentiment, I've ran many 60-day simulations where a few bit errors would be completely irrelevant. Many physics simulations include internal checks (that must be there regardless of ECC, for algorithmic reasons) that would catch virtually all such issues. While a bit error could certainly crash the simulation, long running simulations can be resumed from checkpoints with minimal loss of time and the probability of a crash is still very low for most real workloads.In truth, there are plenty of good reasons, both for data integrity and security, to have ECC. However, there are real costs to ECC too - 10-30% immediate performance overhead (depending on your application) and much more than that for memory-bound w"	keldaris	9.498153	-5.5305634	comment	3.0	50.0	1507208986	8.263127
15409515	According to a 21 years long term AM	According to a 21 years long term AMD user. Compared to my dual 2969v4's multithreaded performance, 1950x is sloooow. Please don't bother mentioning 2p EPYC, you simply can not order it and expect a reliable ETA, most models were released on paper.what is your first AMD processor? mine was AM486DX4-120	dis-sys	9.3380165	-5.2086515	comment	3.0	11.0	1507214317	7.909153
15415940	scientific computing and simulation.	"scientific computing and simulation. 
I have had need for machines like this - for a project that was very compute heavy but embarrassingly parallel, but also was very ""chatty"" - I.e updated the data structures a lot during computeI can't be too specific about it, but if involved creating a very large tree structure and updating, pruning and transversing the tree a lotIf the algorithm is updating and reading a large data structure a lot it's only practical from a speed point of view to hold the whole structure in RAM"	malux85	9.874441	-5.4268627	comment	3.0	15.0	1507289755	8.199176
15416706	If a VM with 96 cpus is being offere	If a VM with 96 cpus is being offered, how many cpus does the bare metal behind the VM have?  What is the hardware like here?	jackmott	9.530467	-5.214654	comment	3.0	12.0	1507297491	7.748106
15424007	Would be nice if there was a summary	"Would be nice if there was a summary page describing what ""open source processor"" means in this context.I understand the ISA is open source, but SiFive does appear to be selling their IP.https://dev.sifive.com/coreplex-risc-v-ip/buy/Royalty-free seems like a better term to describe what they are offering than ""open source""."	tyingq	9.44689	-5.4861565	comment	3.0	13.0	1507388419	-10.530256
15437050	I wonder who's actually going to use	I wonder who's actually going to use the breastfeeding emoji.	ErikVandeWater	9.786249	-6.267059	comment	3.0	13.0	1507579819	-13.958732
15438985	I can't think of a corresponding emo	I can't think of a corresponding emoji for many of these, like sarcasm, certitude, snark (maybe the one with its tongue sticking out?), doubt, irony, etc.	3131s	9.797935	-6.268985	comment	3.0	10.0	1507604566	-13.957328
15442764	> Send an email any time an API acce	"> Send an email any time an API access token is created. Add a setting to allow org-wide disabling of API token creation.I wish more apps supported this.Also on my list is a ""Don't ever let me disable 2FA"" setting. I'm more worried about malicoius resets than I am about ever losing my 2FA device and backup codes.> Add an option to delete old logs. If you have ever dumped env vars to the log file, an attacker can export these.I surprised that secrets make it into the logs at all. I would have expected them to filter anything that's in an env secret from the log output. Pretty sure Travis does this.> Enable subresource integrity, or serve JS from each of these companies from the CircleCI domain.That's not much of an option for this type of thing as the third parties would then have a PITA ti"	koolba	8.8624525	-6.315343	comment	3.0	18.0	1507650625	-9.157451
15445547	That's a blatant misinterpretation o	"That's a blatant misinterpretation of that article. Here's the main quote:""According to a highly technical blog post, Positive Technologies experts revealed they discovered a hidden bit inside the firmware code, which when flipped (set to ""1"") it will disable ME after ME has done its job and booted up the main processor.The bit is labelled ""reserve_hap"" and a nearby comment describes it as ""High Assurance Platform (HAP) enable.""High Assurance Platform (HAP) is an NSA program that describes a series of rules for running secure computing platforms.Researchers believe Intel has added the ME disabling bit at the behest of the NSA, who needed a method of disabling ME as a security measure for computers running in highly sensitive environments.""TL;DR the evidence is that the NSA made Intel give "	openasocket	9.512893	-5.222056	comment	3.0	15.0	1507671664	7.765396
15445569	Can I get a serious alternative view	Can I get a serious alternative view on this? What purpose does Intel have for things like this exactly? Also, are AMD chips an alternative that can help here?	noobermin	9.329323	-5.185273	comment	3.0	22.0	1507671821	7.8440332
15445073	So I guess it comes down to what you	So I guess it comes down to what you think the point of the ME is. If its for what Intel claims, then having the ME have to access the NIC through the OS is useless - the whole point is to bypass the OS, so you can manipulate the computer regardless of its state (as long as its plugged in anyways).If you were worried about NSA spyware that tunnels through your OS... well, then you may as well just be worried about NSA spyware in your NIC.Because in the end, even if the ME was directly connected to the NIC, it still needs to know how to talk to the NIC (thus why NICs have drivers...). When you use an Intel NIC, the ME knows how to talk to it, and everything is hunky dorey. In practice, Intel could probably build a database of common non-Intel NICs and load all of their drivers into the ME. 	icegreentea2	9.463839	-5.221501	comment	3.0	12.0	1507667350	7.7851915
15458703	No, I was thinking non-uniform memor	"No, I was thinking non-uniform memory architecture, which is to say an SMP machine where the ""speed"" at which you can access RAM is dependent on the core or 'thread' from which you accessed it. Lack of memory uniformity was the compromise to achieve larger effective address spaces and ""simple"" programming.Today on a 24/48 core dual socket server you'll see the same sorts of thing, having a core using memory on the 'other' physical chip's memory bus will impact the overall performance significantly.In the 2000's, before multi-core chips were a thing, there were two major camps, the 'super computer' camp, and the 'cluster' camp.The 'super computer' camp insisted on cache coherent memory between all of the cores or threads. You got these very expensive fabrics from people like cray that would"	ChuckMcM	9.79575	-5.4182444	comment	3.0	10.0	1507822291	8.1275
15465446	This post seems outdated considering	"This post seems outdated considering these more recent HN posts:Disabling Intel ME 11 via undocumented mode (ptsecurity.com)
https://news.ycombinator.com/item?id=15116719How to hack a turned-off computer, or running unsigned code in Intel ME (blackhat.com)
https://news.ycombinator.com/item?id=15298833Personally I am extremely curious about the upcoming blackhat presentation. If it is really true this might be very big."	moppl	9.472214	-5.2211323	comment	3.0	10.0	1507901613	7.7907515
15468734	> Currently it generates 16-bit and 	> Currently it generates 16-bit and 32-bit 80386+ assembly code for NASM that can then be assembled and linked into DOS, Windows and Linux programs.I wonder why not 64Bit? Hardly anyone uses 32bit processors anymore, and even in the Windows world 64Bit systems are slowly taking over, so it would seem more logical to me to compile for modern processors, instead of 16bit architecture.	linopolus	9.846595	-5.396831	comment	3.0	12.0	1507923934	-7.924923
15477054	Rv8: a high performance RISC-V to x8	Rv8: a high performance RISC-V to x86 binary translator [pdf]	ingve	9.4635725	-5.6926045	story	3.0	71.0	1508074793	-10.550364
15514480	You can also order Dell machines wit	You can also order Dell machines with ME disabled. Additionally, most current Dell systems can disable Intel ME in the BIOS settings as well. This is a trap door setting - once disabled, there is no way to turn it back on.From what I've heard, this disabling is done through the Intel HAM (high assurance mode), but I have no idea what the differences between the Dell and Purism approaches are.	sspiff	9.515079	-5.2113853	comment	3.0	12.0	1508490759	7.7997556
15517343	When the recent Netflix FreeBSD kern	When the recent Netflix FreeBSD kernel optimization article was posted, all I could think of was why they didn't use a POWER machine for its higher memory throughput. Same would be true for SPARC, but that hardware is even less available and I wouldn't trust Oracle with my money or engineering effort.Then I checked to see FreeBSD's POWER port and it didn't look as readily supported as Linux is, so I assumed that's one reason. Contrary to SPARC, POWER servers can be had from more than the main vendor and it's the only high performance server where you have a chance to get the source code for the microcode and firmware in auxiliary mainboard chips, leaving just the GPU and NIC. This alone I would think would be a reason for safety-conscious users to consider and buy it instead of trying to d	throwawaysml	9.852657	-5.34649	comment	3.0	10.0	1508519025	10.602569
15578581	BSD Jails and Solaris Zones then.Eve	BSD Jails and Solaris Zones then.Everything old is new again, this time with an orchestration layer.	dijit	9.759354	-6.374158	comment	3.0	11.0	1509267471	10.371216
15580940	> Unfortunately anyone who takes the	"> Unfortunately anyone who takes their security or privacy seriously will be totally unable to use this. Every AMD chip contains a likely backdoored system called AMD Secure ProcessorThis is fear mongering to the extreme. Intel has the exact same type of system embedded in their processors called Intel Management Engine. You can't escape this problem by buying Intel.I notice you provided a lot of sources, but none for the claim ""a likely backdoored system"". Your post reads like something a bad Intel astroturfing shill would say."	kbhn	9.453823	-5.2232213	comment	3.0	11.0	1509305659	7.7498446
15593405	The only thing I disagree with in th	The only thing I disagree with in this article is the leeway given to supposedly legendary programmers who can somehow write bug-free code without tests, specifications, or an inkling of communication with others.First, it's probably not true. Linus Torvalds is not a legendary human being who can write critical systems without a single flaw. He relies on legions of human beings to carefully check and review every line of code before he even looks at it. There are discussions on mailing lists. There are arguments and disagreements. There's a process there. He doesn't just flit his fingers across the keyboard and output amazing, error free code. It probably has tonnes of errors.Linus' philosophy is that errors aren't the end of the world and someone will patch them when they are uncovered.Fo	agentultra	9.356145	-5.8526545	comment	3.0	10.0	1509459643	4.2481866
15601332	they won praises from users who don'	they won praises from users who don't actually understand what they got.Ryzen has a doggy memory controller, as of today, for quite of 2400Mhz RAM sticks, you simply can not install 4 sticks.Many users are still running chips that is known to segfault when highly parallel workload such as parallel gcc compilation.Technical praises? Maybe solve the memory compatibility issue first?	dis-sys	9.280493	-5.190755	comment	3.0	10.0	1509546079	7.854508
15609616	> - we don't cause regressionsClearl	> - we don't cause regressionsClearly false.> and the corollary is that when regressions do occur, we admit to them and fix them, instead of blaming user space.Clearly not a corollary...	OJFord	9.72003	-5.729374	comment	3.0	15.0	1509624660	0.23711878
15610010	I'm glad Linus has this attitude and	I'm glad Linus has this attitude and it is unfortunate it's not present in some other placesThough it is annoying if you're at the receiving end of it, own up (the opposite of what the patch author was doing)	raverbashing	9.291716	-5.888268	comment	3.0	20.0	1509627942	4.279334
15610677	"""a return to a former or less develo"	"""a return to a former or less developed state.""See, it's the fact that Linus doesn't even know the real definition of 'regression' that makes me think I cant' trust him or anything he produces. That level of idiocy is simply intolerable."	lightedman	9.326568	-5.8734345	comment	3.0	13.0	1509632942	4.1993866
15610760	Disagree. It seems like Linus’ acerb	Disagree. It seems like Linus’ acerbic and direct means of communicating is the only thing keeping garbage code out of the kernel. He’s also made his views on “why not be nicer” well known. People need to get over it - his project, his rules.Plenty of other projects out there to hack on if getting yelled at when you disengage your brain is too much. Most of which don’t have the obsession with not breaking stuff for the end user...	Karunamon	9.305381	-5.8664303	comment	3.0	38.0	1509633428	4.1864862
15610839	He's being stupid, using words he do	He's being stupid, using words he doesn't understand (He already failed in the usage of the word 'regression.') He's throwing a childish tantrum and THAT is the primary reason I won't touch Linux (well that and I can hardlock any Linux system by making a 4kb encrypted RAMDisk, and it's been left unfixed for years, allowing me to find dozens of nice memory issues, [especially with the buffer cache,] and most of these issues are ELEMENTARY-GRADE MISTAKES, which matches very well with Linus' elementary school attitude.)	lightedman	9.448847	-5.825909	comment	3.0	14.0	1509633954	4.2778234
15610985	If it was anyone else we'd be callin	If it was anyone else we'd be calling them an utter asshole and then citing them as reasons why Silicon Valley has a reputation for <insert bad behaviour here>.Linus is still a dick and it isn't funny, refreshing or cool.	res0nat0r	9.279977	-5.8956428	comment	3.0	13.0	1509634803	4.265107
15611824	I personally think Unikernals will o	I personally think Unikernals will overshadow Containers in a few years. They just in my mind offer a model that is much more security and speedy. I give them a few years because Unikernals still need to figure out better tooling; debugging, producing and deploying them is currently difficult.	RubenSandwich	9.787482	-6.4064865	comment	3.0	10.0	1509639910	-12.399863
15635021	If you're a sysadmin for a machine t	"If you're a sysadmin for a machine that you don't have physical access to, and the main OS is hosed, how do you fix it?It's a very useful feature for large enterprises, and pretty much only for them.  The interesting question is why doesn't Intel charge ""enterprise pricing"" for the feature, just like they do for stuff like ECC?"	bryanlarsen	9.460202	-5.21822	comment	3.0	12.0	1509972011	7.737405
15635167	Is anyone actually using Intel Manag	Is anyone actually using Intel Management Engine? I understand why Intel would have it as a feature, but the majority of all users, including large companies and other organisation with 1000+ desktops, don't need it or use other solutions.Besides not being able to turn it of, it actually seems like a nice enough offer, I just never heard of anyone using it.Is there a demo of the ME somewhere?	mrweasel	9.482161	-5.2072325	comment	3.0	11.0	1509974041	7.841457
15635304	Here is some Russian guys having suc	Here is some Russian guys having success in almost fully disabling the Intel ME.http://www.pvsm.ru/informatsionnaya-bezopasnost/262876(you can use Google translator from the top of the page, to translate content from Russian to English)	cryogenic_soul	9.4916525	-5.2306376	comment	3.0	10.0	1509975737	7.8185463
15644410	You're conflating different things. 	You're conflating different things. Intel is free to use MINIX which is exactly the freedom the creator of MINIX intended when selecting the license. You are not a party to that transaction.That Intel uses this software for a purpose you disagree with is immaterial to this discussion. Had MINIX not been available under a permissive license, Intel would have found some other (but presumably more expensive) way to largely achieve the same thing. They did not come up with and implement the management engine because MINIX was BSD licensed.	mseebach	9.723121	-5.20736	comment	3.0	13.0	1510070045	10.43162
15654736	I have mixed feelings about this. On	I have mixed feelings about this. On the one hand, good news since it means more work on architectures people use. On the other hand, this means there is really just _one_ architecture which usually hurts portability, and that matters if arch linux ever decides to support arm or something.	uluyol	9.720451	-5.271226	comment	3.0	15.0	1510162739	-7.8274803
15653993	>Your operating system is being used	">Your operating system is being used by Intel to, potentially, take full control of any machine powered by their chips.I would phrase it differently.""Intel has developed a product, which they sell (to anyone), to allow companies to manage their computers so that you can do things like re-image machines remotely, change BIOS settings, etc""I honestly can't understand the mass hysteria around this. As a 'de-facto' sys-admin in a small company, I find this immensely useful."	ksk	9.475805	-5.191519	comment	3.0	20.0	1510158724	7.7050767
15669502	Any reason Intel doesn't just offer 	Any reason Intel doesn't just offer IME-free CPUs too? There's obviously interest considering the lengths organisations like Google go to to disable it and Intel supposedly already has such offers for governments.	Asdfbla	9.458157	-5.1922317	comment	3.0	13.0	1510318435	7.749458
15670573	Right. ME does make sense as a featu	Right. ME does make sense as a feature for sysadmins. Except . . . . Well, can you shed light on the following:1. Why did your team deem it necessary to deny the end-user the capability to disable this feature?2. Why did your team decide to enable ME on ALL consumer grade chips? You could have only enabled it on, say, Xeon, as a value-add - exactly like you do for ECC support. You could have made more money this way. But . . . you didn't.Without legitimate, sensical answers to the above questions, there is no reason for anyone to believe your team did anything other than design a backdoor for the Feds. Sorry.	daxorid	9.516292	-5.269957	comment	3.0	16.0	1510328716	7.6856256
15670689	Why doesn't Intel offer their chips 	Why doesn't Intel offer their chips without an ME, as an option? The mandatory nature makes it malicious.	kazagistar	9.425691	-5.1927786	comment	3.0	11.0	1510329416	7.752264
15677481	That is a different issue. The artic	That is a different issue. The article was about an external USB device.Also I don't understand the concern with people not trusting Intel. By using their hardware in any form you are inherently trusting them. Unless you are able to check their design and fabrication process, they could easily hide something in there to disable protections in Windows or Linux based on certain patterns of network traffic.	pkaye	9.56708	-5.2554393	comment	3.0	15.0	1510425519	7.791034
15684461	ARM can’t be killed at this s point.	ARM can’t be killed at this s point. Positioning themselves as ARM killer would not be the wisest move on anyone’s part.	0xbear	9.555444	-5.2073793	comment	3.0	15.0	1510550374	-7.6364713
15684515	Glad to hear that they'll be taping 	Glad to hear that they'll be taping out one of the Shakti chips so soon. Can't wait to see what comes of the higher-end server (or workstation, if you're me) chips.That said...> “The capitalist computing bourgeoisie want to enslave us all with proprietary processing architectures, but the proletariat eventually produces its own processor alternative – an ISA for and by the people, where instruction sets aren’t subject to the whim of the royalty-driven class, and where licensing fees don’t oppress the workers’ BOMs (bill of materials),” writes Kevin Morris in the Electronics Engineering journal, lending colour and gravitas to what’s at stake in the processor industry.Comparing RISC-V to communism is pretty grody. RISC-V is precisely a capitalist revolution, shedding a layer of state protect	microcolonel	9.422805	-5.676282	comment	3.0	21.0	1510551223	-10.478327
15690474	Torvalds never pounce on someone out	Torvalds never pounce on someone out on tail end of the patch chain. He comes down hard on those that have been in charge of maintaining major sections of the kernel for years, and should know what is expected of them.I don't think that's necessarily good enough.  Even if he is personally restrained in whom he acts like a jerk towards, his behaviour establishes norms within the project and contributes to how other people behave.Project leaders need to set good examples.	cperciva	9.33242	-5.85809	comment	3.0	13.0	1510608939	3.902458
15690213	I've known Linus for a long time and	I've known Linus for a long time and don't believe him to be malicious.  Do you have context for that statement?Linus has a sly sense of humor, I bet it was either directed at some code or it was in jest.	luckydude	9.286262	-5.8888803	comment	3.0	14.0	1510606962	4.2663803
15712444	I love how once this exists in all t	I love how once this exists in all the standard tools, anybody can just make a new chip and practically instantly run huge amounts of software on it and have the right base to add to it. A free ISA is a great interfacing point, innovation can go on above and below mostly independently, no licences or anything required. A good example of permission less innovation.The road is long for RISC-V but I think the project is progressing about as fast as one can hope for. Thanks to everybody who helps with this.	nickik	9.431661	-5.6042075	comment	3.0	63.0	1510838887	-10.514309
15712650	Can someone explain what having RISC	Can someone explain what having RISC-V support in the kernel means for Linux OSes ?Also, how is this different to: https://wiki.debian.org/RISC-V ?	phantom_oracle	9.407197	-5.687626	comment	3.0	10.0	1510841072	-10.559494
15721291	I wonder how the checked in the fix 	I wonder how the checked in the fix to the source control system?	abainbridge	8.83059	-6.3146677	comment	3.0	10.0	1510920066	-11.687779
15730311	Does this mean they're also looking 	Does this mean they're also looking to rip out 16bit real mode support entirely from their x86/x86_64 CPUs?	0x0	9.761607	-5.354395	comment	3.0	32.0	1511034118	-7.8280487
15730371	Because it's a piece of hw that's on	Because it's a piece of hw that's only used for 1s before your OS boots.Wonder why ARM consumes much less than x86? That's one (small) reason why.	raverbashing	9.672804	-5.3389206	comment	3.0	14.0	1511035125	-7.663853
15730014	Advantages of monolithic version con	Advantages of monolithic version control	eadmund	8.860273	-6.36526	story	3.0	3.0	1511029032	-11.728483
15740413	I like that this article doesn't foc	I like that this article doesn't focus too much on the technical aspects of auto-deploys and CI. I've been in a lot of places where the concepts were lumped together, and while we could have easily delivered software continuously, we falsely believed we needed every last thing to be perfectly automated before we did.It's important that your deployment process is repeatable and simple (i.e. typing one or two commands into a terminal), but if a human is still kicking it off that's still a net positive over big timed releases.	ryanbrunner	9.225296	-6.365264	comment	3.0	10.0	1511190826	6.1328015
15743438	> I wonder if this will at all dissu	> I wonder if this will at all dissuade either Intel or AMD into continuing to make these super privileged processors whose functions are completely hidden.I think many discussions miss the nuance here.  The problem is that the functionality is hidden, not necessarily that the function is there.In corporate use, these tools can be incredibly useful.  If they were more transparent, then they could be used by normal users for remote administration as well.But it needs to be secure, and it needs to exist without secrecy.  If this portion were free for the user to configure, or if they allowed complete disabling via motherboard jumper, or simply open sourced it, that would be a better step.However, the NSA's activities have destroyed all trust in these sorts of features coming from an American	white-flame	9.520933	-5.189004	comment	3.0	35.0	1511213130	7.8504047
15751093	Here is the commit that introduces t	Here is the commit that introduces the bug: https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/lin...Can you spot the error?Here is the commit that fixes the bug: https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/lin...	__david__	9.50053	-5.854634	comment	3.0	36.0	1511294938	-8.177053
37922501	was there really a 6502 version? I r	was there really a 6502 version? I ran Wordstar on my CP/M Z80 card on the Apple 2	zwieback	9.566782	-5.2002873	comment	3.0	19.0	1697582027	-7.4256325
37929255	Roughly a decade ago, that's what pe	"Roughly a decade ago, that's what people said about ARM too: ""A licensed RISC ISA? Why use that when MIPS and PowerPC and x86 exist?""For the most part, all it took to put ARM on the board was to get it's core designs on newer silicon. RISC-V will likely be the same, with the added advantage that most software projects already support RISC arches through ARM."	smoldesu	9.421677	-5.616986	comment	3.0	15.0	1697639630	-10.529569
37929368	Not really. ARM servers are quite ha	Not really. ARM servers are quite hard to find (e.g. none at Digitalocean), and ARM builds of common software projects are often missing. The server world overwhelmingly still runs on X86.	dboreham	9.651268	-5.21645	comment	3.0	11.0	1697640046	-7.758091
37937073	I have one of those, although I boug	I have one of those, although I bought it for the Zynq FPGA SoC.I tried to find a use for the Epiphany cores, but the speeds and feeds were too unbalanced for anything I was looking at at the time.The way that particular story played out suggests that I wasn't alone.	jsolson	9.263953	-5.2068214	comment	3.0	13.0	1697678682	8.13003
37941433	Chinese CPU Maker Phytium Unveils Ne	Chinese CPU Maker Phytium Unveils Next-Gen 3 GHz Chip on Par with 4 GHz AMD Zen3	tanelpoder	9.271388	-5.2090254	story	3.0	14.0	1697715360	7.8842063
37942157	Epyc uses SP3, SP5 or SP6 sockets de	Epyc uses SP3, SP5 or SP6 sockets depending on model.You can get perfectly normal ATX motherboards for Epyc. There's even a mini-ITX one for some reason:https://www.asrockrack.com/general/productdetail.asp?Model=R...	dale_glass	9.358586	-5.2205663	comment	3.0	10.0	1697719817	-4.88291
37945190	Does compiling the Linux kernel real	Does compiling the Linux kernel really scale to that many cores?	sapiogram	9.883875	-5.4559236	comment	3.0	10.0	1697733743	7.9589486
37965499	Since the 1990s PowerPC/POWER has be	Since the 1990s PowerPC/POWER has been touted as viable alternative to the x86 architecture. Initially, they gained traction through PowerMacs and Amigas with accel-cards, as well as via PPC versions of Windows and OS/2. Next, they aimed to compete in the cloud, where ARM eventually outpaced them.I have first-hand experience porting https://phoenix-rtos.com/ to PowerPC back in the early 2000s and it's a very sane CPU arch (in comparison to x86). However, it's evident that POWER lags behind x86, ARM, and now RISC-V, both in terms of use and public attention.	jagrsw	9.545866	-5.264647	comment	3.0	21.0	1697882839	-7.7536597
37983725	OCaml is a good language but perhaps	OCaml is a good language but perhaps unikernel does not mean what I thought it did:> fully-standalone, specialised unikernel that runs under a Xen or KVM hypervisor.Or maybe xen / kvm are no longer called operating systems?I'm interested in having my code be responsible for thread scheduling and page tables - no OS layer to syscall into - but am not as keen on DIYing the device drivers to get it talking to the rest of the world.	JonChesterfield	9.9377365	-6.229692	comment	3.0	10.0	1698056713	-12.382205
37989712	"Reducing ""gate"" counts for Kyber-512"	"Reducing ""gate"" counts for Kyber-512 contradicting NIST's calculation"	nabla9	9.840851	-5.577441	story	3.0	30.0	1698086084	-10.187
37990356	The key results:> Cascade discovered	The key results:> Cascade discovered 12 bugs that produce wrong computations under certain microarchitectural conditions (Uarchvals) in Kronos and VexRiscv> Cascade discovered 3 bugs that cause hangs in Kro- nos, PicoRV32 and VexRiscvThese are the hard bugs to find in the implementation of the CPU> Cascade discovered 4 bugs in BOOM and CVA6 that produce wrong output val- ues regardless of the microarchitectural stateThese are unacceptable bugs, showing a lack of architectural tests. It means no one ever ran those instructions and checked the result. The community should be able to fix this.	alain94040	9.63438	-5.414225	comment	3.0	13.0	1698089076	-9.255563
37991953	> With the introduction of Game Mode	> With the introduction of Game Mode in Sonoma, CPU scheduling can now work differently, with E cores being reserved for the use of games.- shouldn't that be 'P cores'?	Angostura	9.546419	-5.2937894	comment	3.0	44.0	1698097203	7.9591546
37994232	what's the difference between a P-co	what's the difference between a P-core and an E-core?  special machinery for caching, branch prediction and speculative execution?i still have the antiquated view that performance and efficiency are essentially the same metric and these are the only kinds of ideas i can come up with that would separate them..	a-dub	9.558614	-5.332144	comment	3.0	10.0	1698114125	7.962267
37995079	It's interesting to see AMD's take o	It's interesting to see AMD's take on big-little.  The only difference between their Zen 4 core (big) and Zen 4c (little) cores is the speed and thermal characteristics.  Owing to the same architecture (RTL) being implemented by both, with only the layout and cell density differing. https://youtu.be/h80TB8K-Rfo?t=260	ta8645	9.281094	-5.199608	comment	3.0	10.0	1698125137	7.8899455
37996933	Alibaba's already taking the lead on	Alibaba's already taking the lead on RISC-V, they've even got quad core 2.6 GHz RISC-V laptops: https://www.notebookcheck.net/New-spec-details-and-pricing-f...	logicchains	9.371952	-5.591797	comment	3.0	11.0	1698142532	-10.564574
37996592	Not an industry expert.. just a curi	Not an industry expert.. just a curious onlooker, but this is not surprising in the slightest - though I am surprised the VC firehose has been turned off this soon. I thought they'd float along on stupid money for longer.From the start they seemed overfunded and with no real good long term business model. They have no lock-in because of the whole open nature of RISC-V.- They're not designing for any specific in-house purpose like Alibaba/Western-Digital- The low end will always be dominated by Allwinner and company and they can't win- The high end is competing with x64 and huge companies like Intel.. also can't win unless you're AppleThey make non-pricecompetitive middle of the road chips that nobody really needs other than RISC-V enthusiasts.. And at the end of the day effectively anyone 	contrarian1234	9.379864	-5.5921197	comment	3.0	39.0	1698139139	-10.583552
38000592	Have they commercialized any of thei	Have they commercialized any of their designs ? I don't think they are competing with Sifive yet!	mardifoufs	9.384508	-5.6458406	comment	3.0	12.0	1698161588	8.57675
38001423	As a chip designer who has made a fe	As a chip designer who has made a few RISC-V cores (including one open-source one that nobody uses), I personally hate the C instructions, and I am on Qualcomm's side here.  There are just too many of them, and they really muck up instruction decoding without providing large benefits for anything but the smallest MCUs.Maybe I should weigh in on this issue in the official channels.	pclmulqdq	9.477431	-5.7421246	comment	3.0	16.0	1698164606	-10.598573
38021520	> When someone replaced :-) with a s	> When someone replaced :-) with a smiley picture, there was a debate about whether they should be called emoticons or emojis[citation needed].The history of the word emoji isn't some mysterious thing - the wikipedia article linked in your parent post has it all laid out.Emoji is a Japanese word meaning pictograph, it isn't derived from the word 'emoticon'. They were developed by Japanese phone companies as an idiomatic expressive addition to Japanese writing, not because 'someone replaced :-) with a smiley picture'. There was no time when they might have ended up being called emoticons.	jameshart	9.808139	-6.264071	comment	3.0	10.0	1698293489	-13.960168
38024305	What makes you think so? According t	What makes you think so? According to their website, the compute bit is based on AMD EPYC 7713P CPUs.I can buy these at my local electroncis retailer. So pretty much commodity x86.	steve1977	9.590146	-5.2646565	comment	3.0	31.0	1698320794	7.8607163
38037369	Why not ECC ram? Lot of AM4 boards s	Why not ECC ram? Lot of AM4 boards support it.	TwoNineA	9.439259	-5.4731336	comment	3.0	22.0	1698408045	8.164574
38047906	Just a nitpicking, but calling an Al	"Just a nitpicking, but calling an Altra system ""the fastest ARM desktop"" is misleading. The CPU does have a huge flops number, but nothing ""desktop"" can saturate that many cores, especially when the system comes with a GPU. Altra is design for cloud workloads, and might be useful for some specialized tasks, but high core count (>8) has little-to-no impact in the ""desktop"" context. Single-core performance is more important because it can improve response time without performing peculiar synchronization dances."	esjeon	9.569102	-5.2592864	comment	3.0	10.0	1698478053	7.8600674
38048993	It is always the time to read again 	"It is always the time to read again the book ""Only the Paranoid Survive"" [1] where Andy Grove, CEO of Intel at the book time, has a specific chapter about RISC/CISC.[1] https://en.wikipedia.org/wiki/Andrew_Grove#Only_the_Paranoid..."	wslh	9.431495	-5.6921754	comment	3.0	21.0	1698492731	-10.547589
38055772	I wish there were better low power E	I wish there were better low power ECC options.  I don't think the N100 supports ECC RAM, and I can't find any ARM ECC boards aside from industrial stuff.  Small AMD boards are hit or miss with no guaranteed ECC comparability either.	candiddevmike	9.41059	-5.4505205	comment	3.0	17.0	1698552877	8.180796
38063495	> Menuet64 is closed source because 	> Menuet64 is closed source because M32 was forked and new copyrights just slapped at the beginning of practically all 32bit source files (multitasking, drivers, GUI, networking..) without any permission. You can take a guess about the country in question.https://board.flatassembler.net/topic.php?t=22194	jiripospisil	9.852092	-5.3613067	comment	3.0	17.0	1698618578	-7.769645
38067807	It's interesting that that they are 	It's interesting that that they are arguing strongly (vs Qualcomm) for retaining an approach in the ISA that probably requires macro-op fusion - whilst holding at least one patent that relates to macro-op fusion.	klelatti	9.514604	-5.491284	comment	3.0	10.0	1698662977	-8.579146
38068173	Layoffs aside, it's hard as an enthu	Layoffs aside, it's hard as an enthusiast consumer to get excited about RISC-V for the same reason it's hard to get excitrd about ARM. Availability is limited to prepackaged SBCs and tinkering-discouraged consumer products.I'd be so excited if I could buy a chip and a motherboard and just drop them into a standard ATX case. But I don't think there exists a consumer-purchaseable RISC-V or ARM chip that isn't a whole system on a chip.	VyseofArcadia	9.404053	-5.5864997	comment	3.0	24.0	1698666159	-10.53097
38070389	> Increasing architectural complexit	> Increasing architectural complexity to enforce boundaries is never a solution to a lack of organizational discipline,And yet we do this all the time. Your CI/CD blocking your PRs until tests pass? That's a costly technical solution to solve an issue of organizational discipline.	insanitybit	9.225881	-6.391868	comment	3.0	53.0	1698678562	6.1312757
38069294	The RISC-V instruction set is not en	The RISC-V instruction set is not encumbered by intellectual property. This means they are cheaper to make, licensing costs being 0. Cheaper to make can translate to the customer into cheaper to buy.	persnickety	9.388823	-5.6760993	comment	3.0	17.0	1698672907	-10.527952
38077520	> PPC offered tremendous promise in 	> PPC offered tremendous promise in the early 1990s at the same time Motorola's evolution of M68k was lackluster at bestApple entered into a trio with IBM & Motorola to develop the PowerPC in early 90's.But at that time, there already was MIPS around.Anyone know why this PowerPC project was started despite that? Especially if -per the article- the main goal was to move from CISC to RISC?Even if MIPS cpus around at the time had performance/W issues (I've no idea yes or no), then improving technology for existing ISA would be easier than inventing entire new architecture, no? (+ all the software tools)And there was also SPARC then.So why invent new wheel, vs. improve MIPS (or SPARC) & use that? Not-invented-here syndrome? Licensing issues?	RetroTechie	9.507317	-5.5032306	comment	3.0	16.0	1698709080	-7.9463406
38078822	This isn't as much the case anymore.	This isn't as much the case anymore. There are typically arm64 images available for the more popular images, and anything you build locally is native, unless you're trying to build x86 software.Redis, Memcached, PostgreSQL, MySQL- it's all native arm64 images now.	0x6c6f6c	9.741545	-5.375114	comment	3.0	11.0	1698715420	-7.781844
38079381	Bootstrapping GCC in RISC-V: Milesto	Bootstrapping GCC in RISC-V: Milestone: MesCC builds TinyCC and fun C errors	pabs3	9.489259	-5.8377976	story	3.0	71.0	1698718836	-10.570564
38081413	So will this require the C extension	"So will this require the C extension that Qualcomm seems to be so opposed to?See the subthread at https://news.ycombinator.com/item?id=37996820Qualcomms latest: https://lists.riscv.org/g/tech-profiles/attachment/400/0/AOS...  where they claim that their proposed ""make RISC-V a bit like aarch64"" Zics extension plus a 32-bit long jump achieves better code density than RV64GC, and without the downsides of the C extension they've been harping about."	jabl	9.503364	-5.6918845	comment	3.0	16.0	1698738519	-10.511106
38086104	I'm just as OCD about changes as the	I'm just as OCD about changes as the next competent programmer, but when it comes to say Starcraft, which is a beautiful one person creation (like most software that reaches a large audience for a long time) it now makes me uneasy as the tables are switching fast underneath.Emulating X86 on ARM/Risc-V is an abstraction tree I don't want to climb f.ex.Wine hides that power consumption.It's a false sense of security.	bullen	9.651966	-5.2927237	comment	3.0	18.0	1698765345	-7.7508864
38091489	AMD and Intel both have their share 	"AMD and Intel both have their share of proprietary blobs, in their ""open source"" packages, including microcode. Where do you see a secure path, for any computing, especially high performance?"	nomel	9.54419	-5.1840696	comment	3.0	13.0	1698786991	7.785344
38114173	So, perhaps a good time to start a n	So, perhaps a good time to start a new business selling inexpensive RISC-V based micro computers?	FourHand451	9.381628	-5.6086197	comment	3.0	17.0	1698936267	-10.580076
38114315	I think one of the biggest fears fro	I think one of the biggest fears from ARM would be the popularity of the Raspberry Pi and their community.There are better boards than the Raspberry Pi (strictly speaking specifications here).  I took that path of playing with a lot of alternative boards, my biggest issue is lack of support, some boards had kernels never updated, etc...(YMMV).If Raspberry Pi released a RISC-V board I have no reason to believe the community would not be just as strong.  Sure in the beginning they would support both, but eventually the ARM support would wither.	siffland	9.402161	-5.5902658	comment	3.0	34.0	1698936860	-10.562709
38118387	If you think .java is brave, wait un	If you think .java is brave, wait until you hear about Mojo's extension: https://en.m.wikipedia.org/wiki/Mojo_(programming_language)They allow the extension to be the fire emoji	hn92726819	9.814353	-6.254866	comment	3.0	17.0	1698951558	13.061237
38126454	Sounds very useful. Even just for te	Sounds very useful. Even just for testing.Does x86 have something comparable?	soulbadguy	9.7118635	-5.3501043	comment	3.0	12.0	1699004918	-7.758842
38133841	If only there was a decentralized sy	If only there was a decentralized system to allow version management of code.	antoineMoPa	8.813838	-6.3200607	comment	3.0	28.0	1699039673	-11.742925
38135815	Really, no discussion on a $150 SBC 	Really, no discussion on a $150 SBC with an FPGA? Seems like a useful combination, see what that RISC-V is all about, and I can learn me some FPGA on the cheap. Or is this not the decent price I think it is?	mikestew	9.378219	-5.4302397	comment	3.0	19.0	1699050113	-10.540866
38137742	"What does ""hardware compatible"" mean"	"What does ""hardware compatible"" mean here though? It runs on the same FPGA hardware, but has unrelated CPU architecture?"	mkj	9.192718	-5.2719007	comment	3.0	12.0	1699066941	8.24021
38138420	>CPU-Z's benchmark is designed to gi	">CPU-Z's benchmark is designed to give results that reflect the ""average IPC"" across many generations of processor without privileging specific architectural and microarchitectural choices.If it was the case, it should have limited itself to the top eight instructions that matter[0], rather than the relatively esoteric SSE.CPU-Z is just a terrible benchmark. With this article, now we can point somewhere every time someone treats CPU-Z's result as if it was meaningful. Thus I am thankful for it.0. https://www.anandtech.com/show/16762/an-anandtech-interview-..."	snvzz	9.443219	-5.2021265	comment	3.0	19.0	1699075570	7.8019347
38138458	"I'm pretty sure the ""bespoke"" toolin"	"I'm pretty sure the ""bespoke"" tooling was just older versions of those industry standard tools because of poor upstreaming of architecture support.  And there are probably many, very reasonable, justifications for that having been the case... the least of which is shipping toolchains with their own design tools.RISC-V doesn't seem like the ""strongest"" ISA ecosystem, unless you mean among soft core CPUs?"	opello	9.434156	-5.6595597	comment	3.0	10.0	1699076002	-10.574414
38139075	Surprised not to see Itanium in that	Surprised not to see Itanium in that list. Maybe that's number four.	entuno	9.532188	-5.533083	comment	3.0	15.0	1699085895	2.7324226
38146317	As necessity is the mother of invent	"As necessity is the mother of invention, Itanium did lead to UEFI, thoughThe Chicken and the Egg
The very first effort that is considered a direct ancestor of UEFI technology had a very specific tactical goal. In the course of 1997 people at Intel were working on how to boot computers based on the prospective Itanium® Processor
family....""from 
https://www.intel.com/content/dam/www/public/us/en/documents..."	the_panopticon	9.5366955	-5.502557	comment	3.0	10.0	1699140486	-7.8152523
38145457	On the one hand, I am not surprised 	On the one hand, I am not surprised -- at my workplace, we only ever had one Itanium system, an SGI Altix 3000-series computer. It was kind of niche even when we bought it, and core-for-core, the Itanium CPUs were slower than their competitors. What the SGI was really good at was MPI parallelism. I don't know how much of that was the CPU and how much was the overall system design of the Altix, which featured a pretty amazing interconnection fabric (CrayLink, I think?), and cache-coherency and a sophisticated memory model. But not all problems parallelized well, so the system ended up kind of being this weird outlier that was a good answer to some classes of problems, but you had to remember it existed.On the other hand, it's a bit of a shame to formally, officially lose another option out 	reidacdc	9.525856	-5.4362993	comment	3.0	16.0	1699134164	-7.6862946
38147503	Alpha would have been such a better 	Alpha would have been such a better path to follow, and Intel even ended up with a license for it because of Compaq/HP's incompetence.	cmrdporcupine	9.529017	-5.3273067	comment	3.0	17.0	1699151543	-7.9066906
38157177	I've always been interested in coaxi	I've always been interested in coaxing extreme performance in a computational task by using FPGA or ASIC.This seems like a mad science. Is there a recommended entry point like a book or learning resource?The only exposure I have is from the FPGA stereo disparity module on the Mars Rover. And sadly I left before I could really pick any brains. Or ASIC Bitcoin mining.	jvanderbot	9.089256	-5.3281083	comment	3.0	11.0	1699229316	8.31961
38157452	Last I looked Microchip's Libero FPG	Last I looked Microchip's Libero FPGA/FPGASoC development tools were paid, either on an expensive one-time fee for a specific version, or an expensive-compared-to-this-board annual subscription.  It won't even show me current pricing without logging in, which is a bad sign, and none of the press has mentioned if these come with a comped board-locked license or something to make them tenable for hobbyists.The big FPGA players have mostly quit that shit; AMD/Xilinx, Intel/Altera/Whatever dumb name its about to be spun back out as, and Lattice all have free versions of their dev tools for at least their parts small players can afford.  They just want you to buy chips and IP.I haven't heard of the Yosis folks making a PolarFire backend, so I don't think there's an open alternative.Libero is ev	PAPPPmAc	9.111146	-5.3389254	comment	3.0	15.0	1699231568	8.459401
38157459	Reading the NEC V20/V30 user manual[	Reading the NEC V20/V30 user manual[0] is like viewing a document from some bizarro world where stuff is almost like things in our world. The register naming is close, the instructions are all there but with different names, and there are a few more instructions (I can see PUSHA and POPA in there-- two instructions I loved on my 286).I've got an old V20-based NEC laptop (the PC-1702, arguably an Ultrabook in its day) and I really should dig it out and try the 8080 emulation out. It doesn't look like it'd be too difficult to execute short 8080 routines. (Getting CP/M up and going looks like more work than would be reasonable for fun.)[0] https://www.ceibo.com/eng/datasheets/NEC-V20-V30-Users-Manua...	EvanAnderson	9.602423	-5.3454685	comment	3.0	11.0	1699231636	-7.4702983
38157904	Thats an interesting alternative his	Thats an interesting alternative history thought experiment.I wonder how early one could capture the complexity of the full PDP-11 microarchitecture on a single chip? Would it have been affordable? What about the support hardware?	Aloha	9.785017	-5.4005084	comment	3.0	45.0	1699235835	-7.515753
38159933	That's what allows the Alpha to be m	That's what allows the Alpha to be multi-processor.And if you like the 'Java Memory Model' I'm not sure what your point really is, you're comparing a virtual machine with actual hardware.	jacquesm	9.850263	-5.6114974	comment	3.0	13.0	1699257894	-7.749818
38160740	Intel evolved the x86 line beyond 38	Intel evolved the x86 line beyond 386, into Pentium Pro and then to amd64. Why did Motorolla not do the same with the 68k?I have seen discussion that treats it as assumed knowledge that 68k was obsolete and needed to be replaced by powerpc. But it seems like conjecture - I have not seem technical arguments, and 68k seems like a cleaner architecture to ride forward than post-286 x86.	cturner	9.541691	-5.196054	comment	3.0	11.0	1699265923	-7.511945
38161341	Random hardware bit flips can cause 	Random hardware bit flips can cause invalid RSA signatures, which baddies can use to deduce private keys.Edit: Don't ask me questions, i don't know shit, i just rephrased stuff from the linked paper.	blueflow	9.753749	-5.6253967	comment	3.0	14.0	1699271472	8.109428
38162331	Can I make a suggestion - the DE0-Na	Can I make a suggestion - the DE0-Nano and DE0-CV. Lots of legacy IO while being an older device family that still has a very fast and efficient compilation time. Hardware wise, both have vanilla SDRAM, the CV board has 7segments, PS/2 ports and VGA out.If you want to learn FPGAs, don't let tools get in the way of learning. Stick to Altera/Intel if for only 1 reason: Signaltap.SignalTap is the single best tool you can get for getting somewhere in your FPGA journey, primarily if you ever plan on interfacing with hardware or ICs outside your FPGA. That is what FPGAs are designed for, anyway. It's like superman x-ray vision for your bugs.I would recommend not using the open source tools with ice40 if only because there is no equivalent of SignalTap. Imagine having no gdb, no printf debugging,	mips_r4300i	9.097446	-5.3585253	comment	3.0	11.0	1699277411	8.341264
38165519	The fact that RISC-V jumped to Switz	The fact that RISC-V jumped to Switzerland after being funded by the US during its development makes me inclined to say screw RISC-V.It also makes RISC-V foreign just as the author complains that ARM is foreign.I think placing restrictions on Americans working with PRC on RISC-V related stuff is a pretty reasonable thing to do.	TinkersW	9.352539	-5.6813335	comment	3.0	12.0	1699291323	-10.593201
38166063	Something I have noticed lately, Fir	Something I have noticed lately, First startup idea that every Devops person starts with is to create a CI/CD project because they think world is inefficient and workflows can be optimized, and then they pivot to other ideas.	debarshri	9.1816	-6.391753	comment	3.0	12.0	1699293423	6.1637664
38166404	Well... I'm thinking from the perspe	"Well... I'm thinking from the perspective of a hobby-engineer. Not so much F35 scale.iCE40 is a $6 surface mount chip, which means I'm comparing it against all other $1 to $20 chips within my capability to put into OSHPark's 6-layer PCB-layout service.My toolbox includes 8-bit uCs like AVR (ATMega, AVR DD, AVR EA), 16-bits like MSP430, 32-bits like Cortex-M0+, M4, M7. It includes Linux-scale Microprocessors like Microchip SAMA5D2, Microchip SAM9x60-D1G, or Boards like Beaglebone or Rasp. Pi. (And yes, I've double-checked. These 0.80mm pitch BGAs seem like they fit and route on OSHPark's 6layer 5mil trace/space impedance controlled specifications)So where does an FPGA fit inside of here?--------Strangely enough, ""Glue Logic"" is an 8-bit territory these days. AVR DD has CCL, which are a 4x 3"	dragontamer	9.138372	-5.275303	comment	3.0	12.0	1699294628	8.257254
38166658	> Are US lawmakers that dumb?I poste	> Are US lawmakers that dumb?I posted the numbers as a top level comment here [0], but the short version is that a lot of the signatories of this letter received (small) donations from Intel in the last election cycle.My best guess is that Intel is actively lobbying against RISC-V using China as the boogeyman, and that these lawmakers were persuaded (sincerely or otherwise) to treat RISC-V as a threat.[0] https://news.ycombinator.com/item?id=38166311	lolinder	9.341861	-5.596595	comment	3.0	28.0	1699295489	-10.612894
38189220	Well geopolitically it makes sense t	"Well geopolitically it makes sense to some degree. Probably no other country would benefit more from RISC-V catching up with ARM/AMD64 than China (and unlike those US won't have as much direct control over transfer/licensing of IP etc.)They seem to be extremely clear about  motivations:> The intellectual property used to design semiconductor chips is currently dominated by
western firms, including ARM, Intel, and AMD. The U.S. and other governments have typically
required licenses for certain use and users of chip architecture, but RISC-V allows the PRC to
use open-source architecture to develop advanced chips without needing a license from the U.S.
governmentOne might justifiable strongly disagree with that, I wouldn't it's ""stupid"", though."	qwytw	9.356361	-5.644277	comment	3.0	27.0	1699444669	-10.581222
38197574	One nit to pick: as far as I am awar	"One nit to pick: as far as I am aware, ""aarch64"" and ""arm64"" are the same thing. Am I off?"	gamache	9.701424	-5.4595532	comment	3.0	11.0	1699480091	-7.760744
38218385	Is there a way to make it use the nu	Is there a way to make it use the number of CPU cores instead of hardcoding a fixed value into a config file that’s used on different machines?	codeflo	9.762263	-5.4701614	comment	3.0	11.0	1699622060	8.124002
38219908	"Does a ""clean"" vs. ""messy"" ISA reall"	"Does a ""clean"" vs. ""messy"" ISA really affect power utilisation more than low single digits?I can't see what the difference is outside the FE decoding.Perhaps an ISA having more useful instructions would matter, as we would then be able to implement hardware optimisations. But just having poor ISA encoding or inconsistency seems, to my uneducated eyes, more of a human problem than a machine problem?"	flumpcakes	9.613187	-5.5963883	comment	3.0	13.0	1699629554	-7.878253
38222818	Your 8-bit system is a weird PDP-11	Your 8-bit system is a weird PDP-11	jen_h	9.85644	-5.4634423	story	3.0	46.0	1699642074	-7.5163717
38230463	RISC-V Board of Directors decision o	RISC-V Board of Directors decision on the Compressed extension	rwmj	9.430809	-5.731756	story	3.0	15.0	1699712253	-10.539301
38235465	RISC-V Ox64 BL808 SBC: Starting Apac	RISC-V Ox64 BL808 SBC: Starting Apache NuttX Real-Time Operating System	lupyuen	9.452584	-5.630636	story	3.0	48.0	1699743596	-10.575315
38241155	This is the way. It also lets you pr	This is the way. It also lets you pretty much seamlessly switch CI tools at any time.	dinkleberg	9.1898985	-6.4161596	comment	3.0	12.0	1699804042	6.1849866
38242127	I’m always surprised there isn’t a m	I’m always surprised there isn’t a movement toward pairing a few low latency cores with a large number of high throughput cores. Surround single Intel P core with a bunch of E cores. Then, hanging off the E cores, stick a bunch of iGPU cores and/or AVX-512 units.Call it Xeon Chi.	bee_rider	9.408257	-5.201751	comment	3.0	11.0	1699809471	7.8970757
38248684	x86 is a legacy platform, ia64 could	x86 is a legacy platform, ia64 could've served the niche this article is catering toward, f.e. HPC and data center. Sadly intel squandered Itanium by being actively hostile towards developers	mise_en_place	9.653605	-5.3817806	comment	3.0	14.0	1699869990	-7.7896934
38252802	I wonder why RISC-V wasn't designed 	I wonder why RISC-V wasn't designed from the ground up to use separate stacks for data and subroutines. x86 and ARM have the excuse of maintaining compatibility with legacy design decisions, but RISC-V is less than 10 years old. Were there other implementation constraints that prevented such a design?	10000truths	9.453752	-5.722452	comment	3.0	10.0	1699896920	-10.551771
38268613	It looks like Intel was cutting corn	It looks like Intel was cutting corners to be faster than AMD and now all those thigs come out. How much slower will all those processors be after multiple errata? 10%? 30%? 50%?In a duopoly market there seems to be no real competition. And yes I know that some (not all) bugs also happen for AMD.	rvba	9.309895	-5.196789	comment	3.0	14.0	1699991377	7.9018846
38272318	An Empirical Comparison of the Riscv	An Empirical Comparison of the Riscv and AArch64 Instruction Sets	brucehoult	9.575705	-5.7440996	story	3.0	6.0	1700012413	-10.407605
38272805	> This ran in CI and would fail the 	> This ran in CI and would fail the build if it didn't pass.I don't mean to be pedantic, but since we're talking about what should happen instead, this is insufficient.  It works until the day you realize you made some kind of manual change to your CI infra, or that CI has some non-standard configuration that makes it work for you but not some significant fraction of the fleet.People should do what you described in CI, but as well as that, you need phased rollout, where e.g. the build can only be rolled out to the next percentage point of randomly selected users in a specific segment (e.g. each hardware revision and country as independent segments) after meeting a ratio of successful check-ins, in the field, from the new build by production customers in that segment.  That's the actual met	cjbprime	9.23674	-6.3699055	comment	3.0	10.0	1700017276	6.009204
38279641	Arm in inevitable for the server. It	Arm in inevitable for the server. It's interesting how now days, efficiency/power consumption is a consideration over pure raw performance.	monlockandkey	9.603935	-5.1875367	comment	3.0	29.0	1700069846	-7.720147
38283967	yes and no.  no or little OS abstrac	yes and no.  no or little OS abstraction, but still there's layers in the way, and it's still sequential in places where an FPGA could be parallel, etc.a Pi etc has a huge advantage in raw clock speed. FPGAs are pretty slow. at least the ones that you and i can afford	cmrdporcupine	9.140191	-5.3608856	comment	3.0	12.0	1700091541	8.382672
38287485	Yep. I'm very curious to know who ac	"Yep. I'm very curious to know who actually use itanium cpus anymore. I've only seen it referenced in a couple of research papers that are from... 2015-2016? I even went out of my way to see if a local refurbished electronics seller had itaniums many months ago and they said, ""Itanium, huh. Haven't heard that name in a long time""."	sneela	9.51827	-5.508343	comment	3.0	18.0	1700127700	-7.723105
38287970	> basementI was looking for an itani	> basementI was looking for an itanium server for a while and literally couldn't find one that wasn't silly money	mhh__	9.537882	-5.470557	comment	3.0	17.0	1700131554	5.357423
38288004	"""We need more time to fix the proble"	"""We need more time to fix the problems"" seems a bit late. Itanium is not a new architecture.From a previous thread:[1]> And with the already severely limited choice of current architectures for the masses (x86, arm), it becomes even more important to keep what we have or had in the past, to not end in a 'If all you have is a hammer, everything looks like a nail.' type of future.Which seems like a rather odd argument, considering Linux supports 18 other architectures, and IA-64 was about as far removed ""from the masses"" as possible and only ever available in ""Call To Get a Quote""-priced server hardware.I can't see a single good reason to keep it alive: there is extremely limited hobby interest (""a guy in Germany who wants to keep support for ideological reasons and can't even afford the ene"	arp242	9.5233755	-5.4579535	comment	3.0	18.0	1700131784	-7.82317
38288051	Back in the day, we reluctantly aban	Back in the day, we reluctantly abandoned PowerPC, UltraSPARC, PA-RISC, Alpha AXP, MIPS... because the bright future was Intel Itanium. Bye, bye, SUN, Silicon Graphics, Acorn, DEC/Compaq, Hewlett Packard, Sony NEWS.That future never materialized.	repelsteeltje	9.478384	-5.2314353	comment	3.0	14.0	1700132151	-7.6251974
38341485	Fwiw, a single u-12tb1.112xlarge has	Fwiw, a single u-12tb1.112xlarge has 448 cores.	fragmede	9.478194	-5.254444	comment	3.0	10.0	1700447553	7.916187
38359043	How do you merge changes between the	How do you merge changes between the source trees?Keep in mind this predates basically ANY kind of source control. It would have been nearly 3x the work.	adastra22	8.758226	-6.341639	comment	3.0	12.0	1700539574	-11.7812395
38367643	IIUC, the main thing that Google's i	IIUC, the main thing that Google's internal codesearch does that makes it superior to external systems (outside of an IDE, like GitHub code search) is that Google actually builds everything, and so it can incorporate that information into its index. There's only so much text search can do when you have macros generating code.	j2kun	8.781675	-6.013436	comment	3.0	12.0	1700590671	-11.283238
38401570	Isn’t this the same idea behind unik	Isn’t this the same idea behind unikernels?	Osiris	9.926293	-6.2316875	comment	3.0	16.0	1700812589	-12.385098
38417767	This is the site that convinced me t	This is the site that convinced me to seek out and buy a PDP-8 of my own back in 2008. Not a PiDP-8, a 1971 PDP-8/e with 12KW of core memory, a TU56 DECtape, a VC8E vector boardset, and a couple teletypes. And then a '73 8/m. And a '75 8/f. And many, many boards and gizmos. And and and. It's been a 6-digit...mistake? Investment? Hobby? Labor of love?They're not particularly powerful computers, particularly in 2023 - basically a microcontroller in today's terms - but man are they visceral.SIMH does a good job of letting you run PDP-8 software, but if you want to poke around inside a PDP-8 I really recommend Brian Shelburne's PDP8MAIN simulator (for DOS, but runs perfectly in DOSBox). You can get everything you need here: https://github.com/rrutt/PDP8/tree/masterA PDP-8 programmer's referenc	theodric	9.832192	-5.470145	comment	3.0	11.0	1700955015	-7.4764714
38422340	Falcon Down: Breaking Falcon Signatu	Falcon Down: Breaking Falcon Signature Scheme Through Side-Channel Attacks [pdf] (2021)	znano	9.80015	-5.585288	story	3.0	26.0	1701012821	-5.766386
38422466	I'm unsure that they'd actually do t	I'm unsure that they'd actually do this. As I recall, the original Rosetta required Apple to pay royalties to IBM and it was basically only useful for Mac OS X binary compatibility. Being able to translate x86 binaries is somewhat more general in application and I don't think Apple is paying royalties on Rosetta 2.	mod50ack	9.792798	-5.3342123	comment	3.0	15.0	1701013758	7.610445
38459128	Oral History of Robert P. Colwell – 	Oral History of Robert P. Colwell – Chief Architect for Intel's IA32 [pdf]	areoform	9.434006	-5.2261233	story	3.0	54.0	1701264872	7.6919637
38459476	If that's a bug that only happens wi	"If that's a bug that only happens with AMD CPUs, I think that's totally fair.If we start adding in exceptions at the top of the software stack for individuals failures of specific CPUs/vendors, that seems like a strong regression from where we are today in terms of ergonomics of writing performance-critical software. We can't be writing individual code for each N x M x O x P combination of hardware + software + workload + configuration (even if you can narrow down the ""relevant"" ones)."	hobofan	9.871917	-5.6774983	comment	3.0	13.0	1701266902	-6.6595845
38463481	MIPS64 unless Loongson changed direc	MIPS64 unless Loongson changed direction recently.	tyingq	9.492219	-5.5963006	comment	3.0	24.0	1701283842	-10.433863
38473480	Yep. I imagine adding support for di	Yep. I imagine adding support for different CPU architectures will be... well good luck with that.Perhaps not every OS needs to be portable like Linux...	anta40	9.659334	-5.1940374	comment	3.0	12.0	1701352212	-8.00778
38480513	Boy, 10, starts petition to get Appl	Boy, 10, starts petition to get Apple to change 'nerd' glasses emoji	timthorn	9.795476	-6.266271	story	3.0	3.0	1701385566	-13.957719
38478881	"Which mcu are you using ?
The possib"	"Which mcu are you using ?
The possibility of noise becoming a flash command is practically 0. Also too much noise will more importantly corrupt you ram.
Flash can be sensitive to noise and that can cause bit flips."	mghardal	9.764607	-5.4795527	comment	3.0	14.0	1701377511	8.063953
38487244	Great channel for side attacks btw.	Great channel for side attacks btw.	ungamedplayer	9.814523	-5.5965943	comment	3.0	10.0	1701441978	3.5774887
38487402	This person has also stated the Linu	This person has also stated the Linux kernel is hard-coded for 8 cores.https://news.ycombinator.com/item?id=38260935	ChoGGi	9.613144	-5.3285327	comment	3.0	10.0	1701442582	7.981484
38505427	Wow, looking at the history of the A	Wow, looking at the history of the ARM generation the original versions of the Raspberry Pi uses, it’s hard to believe it’s so old! When the Raspberry Pi B+ was released (2014), the ARM core it used was already 11 years old (using the ARM1176 core from 2003). So it’s not unbelievable that you might need to start supplying an arch flag to produce compatible code building on a different platform (like the newer Raspberry Pi the article says they first built on).As others have said, it does seem like a misconfiguration (perhaps in the defaults shipped by their distribution) that the correct arch is not picked by default when building on the Raspberry Pi B+ itself.	stephen_g	9.725554	-5.309143	comment	3.0	58.0	1701587250	-7.7939677
38513752	Magnetic Cores – Part I (1961) [vide	Magnetic Cores – Part I (1961) [video]	pyinstallwoes	9.598669	-5.2200904	story	3.0	45.0	1701664068	8.049788
38521247	8-bit CPUs have 8 data pins (D0-D7) 	8-bit CPUs have 8 data pins (D0-D7) and anything going in or out of the CPU is doing so 8 bits at a time.  This includes all external accesses such as RAM, ROM, and I/O.But 8-bit CPUs have more than 8 address lines, because 256 bytes total for combined RAM, ROM and I/O space is not useful.  That number I think is typically 16 although Signetics 2650 had only 12 (with the instruction set only supporting 12-bit addresses), and the Atari 6507 (6502 derivative) had 13 (instruction set still supporting 16-bit addresses but the upper 3 bits of addresses were basically ignored).> Is it just a matter of replacing all instructions/chips/buses to be 32 bit/lane?Depends on the 8-bit CPU really.- The Z80 lets you combine specific register pairs to work with 16 bits and address memory through them.- Th	tenebrisalietum	9.603108	-5.290769	comment	3.0	10.0	1701715502	-7.351297
38529438	Like Itanium, it was one of those In	Like Itanium, it was one of those Intel projects that was simultaneously too ambitious and not ambitious enough.If Intel really wanted to redesign the Von Neumann architecture, they would have had to be prepared to absorb losses for much longer, way north of a decade.The alternative might have been to focus exclusively on providing SSDs using the new technology and maybe try to segue into this new memory architecture 10 years later. Like Itanium should have initially focused on beating competing x86_32 chips of the era in benchmarks and ship the new ISA as an afterthought.Thank you, Intel, for trying to push the envelope, though.	mike_hock	9.518607	-5.47149	comment	3.0	11.0	1701774501	-7.7814746
38571518	I migrated from BuildJet this week b	I migrated from BuildJet this week because BuildJet’s caching is broken. Installing cached pnpm dependencies takes about 12s on GitHub and WarpBuild runners. It takes 2m on BuildJet, which is about half the runtime, effectively negating the cost savings of BuildJet over GitHub.I reported this issue to BuildJet over a week ago and haven’t received any response.	clintonb	9.63509	-6.2323494	comment	3.0	11.0	1702056179	-11.500032
38574083	Hi, quick question:> Runners are ass	"Hi, quick question:> Runners are assigned to hardware that is ideal for build workloads with [...] high single-core performanceIn my kind of projects (C++, Rust, C) the builds are highly parallelizable, so single core performance is generally not what you want, if you can instead get a lot of cores.The main bottleneck to my own build pipelines on github was how painful it is to use containers, and how ""helpful to idiots but not experts"" a lot of the github actions docs are (microsofts style, I guess?).Good luck though!"	lionkor	9.410637	-5.636328	comment	3.0	10.0	1702068294	-11.7304535
38582539	Did they release the source code or 	Did they release the source code or benchmarks for their new 8x model?	ilaksh	9.574399	-5.198892	comment	3.0	11.0	1702134849	7.7013116
38585795	None of that core is standardized ac	None of that core is standardized across even a hand full of distros.	zer0zzz	9.615758	-5.3142405	comment	3.0	16.0	1702154178	7.928395
38589993	Performance per core is the same as 	Performance per core is the same as (even a little better than) Arm A72, as found in the Raspberry Pi 4 or -- more appropriately -- the Graviton 1, both from 2019, except it has 16x more cores than the Pi 4 and 4x more cores than the Graviton.That puts shipping RISC-V hardware four years behind Arm.By mid 2024, shipping RISC-V hardware will be competitive with Arm A76 SoCs such as the RK3588 (shipped on boards such as the Rock 5 and Orange Pi 5 1.5 to 2 years earlier) or the Raspberry Pi 5, which is only about 6 months ahead (I received mine, ordered at announcement, this week).By the end of 2024, shipping RISC-V hardware will have 16x Arm A78 equivalent cores, on a board that realistically will cost $300.	brucehoult	9.408966	-5.557823	comment	3.0	11.0	1702195730	-10.595205
38590663	This particular chip is very slow, s	This particular chip is very slow, so definitely not.  However Sophgo are going to switch the cores to using SiFive P670 in the next iteration (SG2380) and those cores have much faster single thread performance.	rwmj	9.592704	-5.353465	comment	3.0	12.0	1702204773	7.982036
26825966	It doesn't help the yaml ui/ux is aw	"It doesn't help the yaml ui/ux is awful.   - if ${{ github.event_name == 'why do you think this is acceptable?"" }}
      run:|
         echo ""I need programmatic CI no matter how much you think I don't""

Just let us write our entire pipelines in typescript. People are already using Actions for bitcoin mining, hosting porn, or whatever - if I can do arbitrary shell stuff you're not making my life easier by putting it behind a yaml DSL pretending to be ""no code.""If it were just typescript with a reasonable library we could run and debug it locally without jumping through hoops./rant"	hctaw	8.9218025	-6.4308624	comment	3.0	15.0	1618519896	-11.762336
26829529	I tried using docker for x86 builds 	"I tried using docker for x86 builds for Lambda (which doesn't support ARM), and hit this brick wall, unfortunately:
https://github.com/docker/for-mac/issues/5123I went and checked the issue when i saw they've made a formal release but it doesn't appear to be resolved. So maybe keep it in mind if anyone has issues trying to use docker now :)Edit: I see Docker has closed the issue and encouraged people to simply use ARM containers instead. Unfortunately that's not an option for cross-compilation when you're using x86 servers. Something for people to keep in mind when deciding what laptop to buy next, i guess."	chubs	9.592104	-6.3093505	comment	3.0	10.0	1618547920	10.031967
26865300	You haven't explained why Intel is e	You haven't explained why Intel is entering the licensing business.  If vendors have no desire to get their licensing from a company that competes in the space, there should be no demand for licensing from Intel, all of those OXMs should be going to ARM.	tw04	9.388391	-5.1889052	comment	3.0	13.0	1618852526	7.7886095
26866964	So this feels like it begs the quest	So this feels like it begs the question: What's the big deal with RISC-V if this exists? If we've had a Linux-capable BSD-licensed patent-free processor since 2015, why did we spend so much time and effort and money to make another completely new ISA?	yjftsjthsd-h	9.412546	-5.6474004	comment	3.0	16.0	1618860582	-10.544245
26889865	In short - endless battle between RI	In short - endless battle between RISC or CISC.	mobilio	9.420121	-5.702667	comment	3.0	15.0	1619013993	-10.569284
26890949	> To not leave you hanging: Intel ha	> To not leave you hanging: Intel has an official x86 encoder/decoder library called XED. According to Intel’s XED, as of this writing, there are 1503 defined x86 instructions (“iclasses” in XED lingo), from AAA to XTEST (this includes AMD-specific extensions too, by the way). Straightforward, right?Hopefully this will have either saved you a click or validated your time in reading the article.	davidkuhta	9.703033	-5.6393404	comment	3.0	15.0	1619018965	-7.5671716
26891177	More than 1,500! Holy cow!While havi	More than 1,500! Holy cow!While having instructions for everything that are slow in early models but can be significantly improved in silicon over time is one way to look at CISC, I genuinely wonder how much silicon is spent on instructions that are so rarely used they'd be better in software.Or to ask another way: how many instructions are in billions of x86 cores that rarely if ever get used? Hmmm...	johnklos	9.532747	-5.4801736	comment	3.0	26.0	1619019960	7.6179266
26891586	I'd also be curious to discover how 	"I'd also be curious to discover how many distinct x86 instructions gcc can even emit? I expect the answer is ""a lot less than all of them."""	dreamcompiler	9.937164	-5.922654	comment	3.0	13.0	1619021636	-7.4801655
26901652	Emoji are for communicating to other	Emoji are for communicating to other people. I can’t imagine why you would ever send someone a message with a ram stick in it. OP sounds like they want the icon for a task bar. In that case they can simply import any SVG they want.	PurpleFoxy	9.81308	-6.269128	comment	3.0	12.0	1619092048	-13.939058
26911123	That struck me as an extremely odd m	That struck me as an extremely odd metric to differentiate products by, given its low relevance to non-technical users who don't know what a GPU core even is (except gamers, but they are not buying iMacs). Additionally, most people are going to think adding one more core is hardly worth the price upgrade, and its quite strange to see an odd number of cores.	morpheuskafka	9.389108	-5.1916456	comment	3.0	16.0	1619154060	7.91474
26911001	The CPU microarchitecture is truly a	The CPU microarchitecture is truly a quantum leap ahead of x86 processors. The fixed-width nature of arm instructions means there's way more front-end bandwidth for decode, which can then feed a much larger out-of-order engine. Having memory so close is also a huge win. TBH, I don't know what wizardry they have managed to get power consumption so low, but wow. 15W TDP and trouncing desktop processors pulling 12x that power!	titzer	9.584028	-5.2534847	comment	3.0	15.0	1619152096	-7.6756706
26913356	It could be clearer but I suspect th	"It could be clearer but I suspect they do it on purpose for a purpose I've never understood.I've always thought that a system like    i7-4-8-10-M (4 cores, 8 threads, 10th gen - Mobile)
    i5-8-8-11-H (8 cores, 8 threads, 11th gen - High perf/Desktop)

There has to be a reason they haven't just been explicit with it.When I shop for a cpu I care about a handful of things, manufacturer, cores, threads, generation, model"	noir_lord	9.491776	-5.218596	comment	3.0	15.0	1619175482	7.8824263
26915179	I think that’s because 99% of regula	I think that’s because 99% of regular computer tasks don’t need 24 cores operating at 5 billion cycles per second.The differences between an i7-4xxx and i7-11xxx are more about hardware acceleration, eg HEVC and SIMD. That’s why they look so much better in benchmarks that are designed with that in mind.My main desktop is an unRAID server that hosts multiple VMs. Only yesterday I discovered that I accidentally only gave Windows four (of my 16) cores. Literally 3/4 of the processor was unused for months, and I didn’t notice any slow performance the entire time.	KMnO4	9.480246	-5.183959	comment	3.0	64.0	1619188566	7.8517303
26927696	I have no idea what the author is tr	"I have no idea what the author is trying to say.Given that they ""just recently"" learned about microcode, I'd not hold my breath expecting a profound insight about computer architecture or anything computer science though."	ganafagol	9.61434	-5.4200125	comment	3.0	16.0	1619293208	7.5659
26929315	I think one of the best code search 	I think one of the best code search tools I've seen is the one here: https://source.chromium.org/chromiumI guess that's what Google uses internally? Is there an open source alternative?	29athrowaway	8.822775	-6.008606	comment	3.0	10.0	1619309931	-11.25886
26931926	Hm, it’s different for me. Since at 	Hm, it’s different for me. Since at work I don’t really do the Continuous Integration/Delivery stuff (or anything with “real infrastructure”), I find it very enjoyable to fiddle with it at home. There’s no pressure to accomplish anything and I can just leave it alone for months or even years before coming back to it.There’s a nice side-effect, too: The CI definition documents how to compile the project. I recently dug out an old LaTeX “project” and there was nothing, no Makefile or anything. Had to look up everything again to get it to run (with XeLaTeX and Biber).	fuzzy2	9.219963	-6.4224777	comment	3.0	11.0	1619349927	6.1557307
26942664	A Hack to Update RAM Initialization 	A Hack to Update RAM Initialization Contents in Intel FPGA Bitstreams	parsecs	9.562688	-5.381026	story	3.0	67.0	1619446298	8.285984
26946582	Ok well then we are missing a metric	Ok well then we are missing a metric shit ton of emojis related to me, and now I am HYPER offended that they're not included.For one, I'm tall. I see now emoji which emphasizes my tallness. I lie awake each night in excruciating agony at being under represented.I also have a large amount of cowlicks that make my hair unlike any haircut currently available in emojis, as I need to cut my hair a weird way. I find this egregious that no one has ever thought to include it and now I feel grossly under represented. I would go so far as to call it inhumane.Furthermore, they have no 5-oclock shadow emoji. As a programmer, other 5-oclock shadow humans will understand my SEARING discomfort that this group has not been properly represented. Thankfully I can grow a beard, but I suspect people who can o	Exuma	9.786972	-6.265006	comment	3.0	13.0	1619463786	-13.963266
26945766	Why? Some women, especially in certa	Why? Some women, especially in certain cultures, do indeed have beards. It takes nothing away from people who won't use that emoji, but it lets them be represented while giving others another optional emoji to use.	dagmx	9.790925	-6.267441	comment	3.0	16.0	1619460180	12.064867
26948556	Lol @ your attempt to shame me. It d	Lol @ your attempt to shame me. It doesn't work because I regret nothing, and apologize for nothing. It's not illegal to seek feedback about self from others. It's not illegal to be tall, young, male, english speaking. And most of all, it's not illegal to think a woman with a beard emoji is ridiculous.	Exuma	9.773079	-6.265231	comment	3.0	10.0	1619473261	-13.956568
26955118	What would that look like?AFAIK, tod	What would that look like?AFAIK, today, you can already build your unikernel app into an AMI and run it on EC2. No?Is there a service which would be more useful for unikernels than this?One thing would be for there to be an official AWS unikernel SDK - basically, a rump operating system that has everything you need to run nicely on EC2, and nothing else.	twic	9.905824	-6.246786	comment	3.0	14.0	1619527550	-12.37745
26958203	It's pretty crazy how good the Gravi	It's pretty crazy how good the Graviton processors are.What's even more crazy is that you cannot buy them.  Such price/perf is literally only available to rent from AWS.I hope Oxide does something about this soon; it is a sort of dangerous situation to have such a competitive advantage only be available via rental from a single (large and anticompetitive) company.	sneak	9.475991	-5.1912446	comment	3.0	16.0	1619541176	-8.368928
27001673	Spectre could too, but again, my poi	Spectre could too, but again, my point was that I didn't hear of actual attacks on people in the wild, at least not on any scale that seemed to make the news. Is there a reason to believe this will be different?	dataflow	9.648281	-5.5921345	comment	3.0	11.0	1619829934	7.7318764
27003098	Maybe EPIC [1] architectures need a 	Maybe EPIC [1] architectures need a revival. Rely on compilers to take advantage of explicit instruction-level parallelism, and keep the CPU dumb.[1] https://en.wikipedia.org/wiki/Explicitly_parallel_instructio...	smasher164	9.476462	-5.245485	comment	3.0	11.0	1619843291	7.8645425
27006803	I can’t trust this article and insta	I can’t trust this article and instantly turned off by the excessive use of Emojis. You might argue - what’s the problem? I’d say, what’s the need! Do they add any value? Why combine semiological characters with an otherwise perfectly fine and widely accepted English orthography? Are they accessible? Is there a emotion being conveyed? Why add cognitive load? Is the design severely broken or dysfunctional without Emojis? Are you able to write well and convincingly without using Emojis as a crutch? Is there an ambiguity where emotional importance can make or break the central arguments being presented in text?	systemvoltage	9.788165	-6.2670984	comment	3.0	10.0	1619880845	-13.957154
27007236	The latency of your CI process doesn	The latency of your CI process doesn't matter[1].What matters is the development process - local build & test should be fast.Otherwise, with CI/CD, it's a continually-moving release train where changes get pushed, built, tested, and deployed non-stop and automatically without human intervention. Once you remove humans from the process, and you have guard rails (quality) built into the process, it doesn't matter if your release process for a single change takes 1min, 1hour, or 1day.Even if it takes 1 day to release commit A, that's OK b/c 10min later commit B has been released (because it was pushed 10min after commit A).I've seen pipelines that take 2 weeks to complete because they are deploying to regions all over the world - the first region deploys within an hour, and the next 2weeks ar	jasonpeacock	9.236069	-6.406796	comment	3.0	15.0	1619884174	6.1422462
27013151	Besides ARM and AMD64, what other ar	Besides ARM and AMD64, what other arch do you need to support? RISC-V?I'm using MacPorts and I have no idea how to hand compile just libgccjit there. The libgcc port doesn't even produce the jit language.	wyuenho	9.497596	-5.7666564	comment	3.0	12.0	1619941681	-10.239327
27017298	> The MCL65+ is a 6502 accelerator c	> The MCL65+ is a 6502 accelerator card which uses a 600Mhz Arduino Teensy4.1 microcontroller to emulate a 6502 microprocessor as well as its bus interface signals. It was designed to be a drop-in replacement for the original 6502 processorOh man, that is really cool. The possibility for retro computers to be actually usable tools by giving them a little more horsepower and RAM is really neat!	titzer	9.523942	-5.233678	comment	3.0	15.0	1619978242	-7.469258
27023518	People regularly run untrusted Javas	"People regularly run untrusted Javascript in their browsers. Spectre is exploitable via Javascript as well. There are some mitigations, but those are generally just of the kind ""make the timer API suck more"" and the likes. Those mitigations don't really fully mitigate the problem and get more and more toothless with new variants of Spectre-like problems.Spectre and the like needs to be dealt with on everything that isn't strictly an embedded fixed-code device."	corty	9.781474	-5.624481	comment	3.0	24.0	1620039136	7.4111366
27047119	Can someone comment with relevant ex	Can someone comment with relevant experience about the fact that maybe emojis should not be part of unicode? And that we should literally just send tiny images as part of text?This way, you know the host system is 100% going to represent what you want to say correctly, that the emoji will look right, and you don't need to worry the system will replace it, that it supports it etc..And you can literally use 'any emoji' you want.There is an infinite number of things we can put in emojis, why are we trying to standardize such things?I wonder if someone has some insight as to the history around this?	jariel	9.863169	-6.261787	comment	3.0	12.0	1620199483	-13.953299
27047093	I find it a bit sad that skin tone e	I find it a bit sad that skin tone emojis exist. When I was young I was taught that skin colour doesn't matter. I actually believed it. Then emojis happened. I leave mine set to yellow.	globular-toast	9.777548	-6.266699	comment	3.0	17.0	1620199304	-13.965385
27048802	I think skin tone color band aids ar	I think skin tone color band aids are different, people have different skin tones and the old default only blended well on people with light skin so the new ones are nice for people.With emoji people took a neutral non-racial thing and inserted race into it. In addition to the complexity of doing that well it just puts race and all the identity issues tied to it into a place it didn’t need to be. I think this generally makes things worse.	fossuser	9.777259	-6.270203	comment	3.0	19.0	1620216019	-13.964462
27048879	> also on our descendants who may ha	> also on our descendants who may have different sensibilitiesUnicode describes flags of nations that no longer exist, dead languages, etc - I don’t see why having a few pictograms that may or may not be relevant in 1000 years time is the place to draw the line. If skin tones play a role in pictographic communication today, then that’s good enough for inclusion.Put another way: Unicode seeks to describe all human written language. Emojii is unusual in that TUC is actively playing a role in the evolution of the language, but they’re still trying to describe a written language the way people want to use it. This feature sees a lot of use, which to me says that TUC has correctly described how people want to use pictographic communication.	542458	9.937487	-6.249553	comment	3.0	17.0	1620216574	-13.9199505
27048826	You've missed the point completely a	You've missed the point completely and have created a strawman-based rant.The problem with emoji is that there is no dictionary, no standardised meaning or interpretation guidelines; no unified, context-dependent cues that everyone subconsciously agrees to. When you try to communicate non-verbal cues using them, it works well because there is a general understanding of what is meant though even there, cultural differences sometimes get in the way. Something like a smile cuts across cultures pretty universally.When emoji start getting overused to the point where you have to draw meaning from the skin tones involved in a handshake, that's a step too far IMHO. This is precisely why we struggle with deciphering hieroglyphics and precisely why emoji must remain a supplement to language, not a r	eldaisfish	9.794524	-6.2681146	comment	3.0	14.0	1620216193	-13.959529
27066580	SVE was designed mindful of how CPUs	"SVE was designed mindful of how CPUs currently operate, whereas RISC-V vector extensions were designed with fondness for how CPUs operated decades ago.Well that's somewhat of an exaggeration, but XT-910 speculatively executes vector instructions based on a prediction of how vsetvl(i) modifies register configurations in order to achieve good performance, so changing this register configuration causes speculation failures as though it were a mispredicted branch. Which you need to do if you're doing any mixed precision operations, or mixed integer/floating point, and discourages small SIMD functions. Quote from their white paper: ""this is not friendly to deeply pipelined processor architecture.""Fundamentally, I dislike how completely the meaning of RISC-V vector instructions depends on what i"	brigade	9.548879	-5.8292356	comment	3.0	15.0	1620322384	-10.562667
27076043	Yes, but where can I buy a SPARC CPU	Yes, but where can I buy a SPARC CPU? How many of those who have/can have it are running Illumos and are putting money/time in it? And more importantly what's the outlook for SPARC?	PedroBatista	9.906899	-5.5426545	comment	3.0	10.0	1620396547	-7.8400183
27074735	Reticle: Virtual Machine for Program	Reticle: Virtual Machine for Programming Modern FPGAs [pdf]	ingve	9.103996	-5.3486686	story	3.0	56.0	1620387137	8.271397
27075223	One of the things I like most about 	One of the things I like most about interviews with Linus is that there are rarely any lofty ideas or ideological thinking. He seems like an extremely focus person, who avoids speaking to subjects that he knows little or nothing about (Something I suppose I could learn from).It's nice to see someone in his position not trying to use it to bring about changes outside his area of expertise.	mrweasel	9.2844515	-5.891862	comment	3.0	14.0	1620391138	4.2879257
27099717	Cloud is skipping amd and going stra	Cloud is skipping amd and going straight to ARM.I suspect AMD is getting a bigger chunk of a smaller pie as ARM makes headwind.	bushbaba	9.269736	-5.19398	comment	3.0	13.0	1620594160	7.5315332
27105593	I ran Alpine on many of my computers	I ran Alpine on many of my computers for years and currently run it (PMOS really) on my phone.Documentation is a separate package so unless you're careful to always install it you tend to not have it.Busybox is definitely not 100% compatible with coreutils, lots of sloppy scripts tend to break.For a while the default kernel was the grsec one which breaks pretty much everything. Thankfully that seems to have changed.musl libc lacks some of the new instrumentation and bounds checking features in glibc, also the subtle differences can change how often bugs in incorrect programs get triggered. Of course musl libc is not binary compatible so closed source software won't work. (no widevine or chrome)Some larger packages are missing, I don't know if they ever managed to package Gnome (I certainly	swiley	9.932981	-6.366074	comment	3.0	12.0	1620652264	-12.327072
27109488	They're replacing openbmc, thankfull	They're replacing openbmc, thankfully - the build system is absolutely ridiculous. The motivation is to escape binary blob ARM world. You know that POWER and RISC-V are competing solutions, right?	sennight	9.430583	-5.6339984	comment	3.0	20.0	1620672913	-10.560727
27115645	x86-64 isn't going anywhere. Not in 	x86-64 isn't going anywhere. Not in the next decade or two anyway.	raptorxp	9.749141	-5.3655176	comment	3.0	13.0	1620721864	-7.758395
27116382	You know, I've spent the past two we	You know, I've spent the past two weeks tinkering with a toy x86_64 bootloader/kernel, and I think that x86 as an ISA is okay. Not great, but okay. Yes, 16-bit addressing modes are restrictive, the encoding hack that enables addressing of r8-r15 in the long mode is probably against one of Geneva conventions, the constant proliferation of control registers is vexing, and CPUID will one day probably be able to dump a full 10-volume PDF of Software Developer's Manual into the provided memory...  but still, it's kinda okay.But what's absolutely terrible is the interface between the CPU and everything else attached to the mainboard (and with the mainboard itself, for that matter). The interrupt handling somehow gets worse when moving from PIC to APIC, ACPI is nauseating, I/O ports are insanely 	Joker_vD	9.66039	-5.532745	comment	3.0	11.0	1620729318	-7.694779
27123822	Yeah, iSH is cool, but x86?  Seems o	Yeah, iSH is cool, but x86?  Seems odd that they didn't run an ARM version of linux in a container or VM.	dev_tty01	9.805585	-5.3038216	comment	3.0	10.0	1620768960	-7.966714
27130312	It seems more likely RISC-V will dis	It seems more likely RISC-V will displace ARM on the low-end where margins on things like licencing are the tightest.  There are already high performance ARM designs for servers in particular, and that's more applicable to desktops than any RISC-V chip currently available.  X86 will give them both a run for their money but it no longer seems completely obvious that everything hefty will still be running on x86 five or ten years from now, for the first time in a couple decades, really.	retrac	9.426474	-5.6314287	comment	3.0	11.0	1620827539	-10.555112
27170062	As a (former) FPGA developer, this r	As a (former) FPGA developer, this revolution has been coming for a while, and I'm still waiting.  Unfortunately, the programming model actually makes things really difficult for people who think in a software frame of mind.  High-level synthesis gets part of the way, but not for low-level peripherals.PMODs are good for university/hobby projects with FPGAs, though, and I'm glad the bar is getting lower and lower.  FPGAs are usually built on very high-tech processes, so the gap between an FPGA (at 28 nm) configured like an SoC and an actual microcontroller (at 90 nm) may be smaller than we think, and that may be the saving grace of FPGAs as hobbyist devices.	pclmulqdq	9.113517	-5.334401	comment	3.0	12.0	1621123308	8.337967
27170598	The talk mentioned a number of small	The talk mentioned a number of small flag boards. Can someone recommended one of them to get started playing with fpgas ?	ozmaverick72	9.087349	-5.3185425	comment	3.0	11.0	1621130582	8.360222
27170602	This talk struck me as conflicting i	This talk struck me as conflicting in a sort of have-your-cake-and-eat-it-too kind of way. The wrinkles part[1] summarizes a lot of what this individual is advocating. Paraphrasing (with equivalent liberal handwaving of details as the talk does):I want to write FPGA code like any other high-level programming language (but quickly dismiss that the hard part of developing native HDL is in fact that it's fundamentally a lot more akin to architecting physical hardware).I want to use FPGAs because they're powerful (but only when a conceptual design aligns with a traditional microcontroller architecture).I want to use FPGAs because they're flexible (but I need to nerf proprietary building blocks that endow specific devices with competitive edge, or trade significant performance in other ways to 	metaphor	9.089792	-5.425436	comment	3.0	25.0	1621130632	8.492904
27171109	Q for the community. FPGA seems to b	Q for the community. FPGA seems to be used for three things: 1) Custom I/O or high performance interfaces that aren't widely standardized 2) Prototyping boards / processor cores 3) Blazing fast implementations of algorithms that are hard to run otherwise.Is that about right?If even close, (3) is very interesting to me for a variety of reasons. Is my understanding correct that this is a reasonable use of FPGAs and that maybe now is a reasonable time to get into it?	jvanderbot	9.095126	-5.351547	comment	3.0	11.0	1621137639	8.36705
27182643	It's nice but with additional limita	It's nice but with additional limitations - on a normal Unix system even if you nice everything to the lowest level possible they'll still take over all cores. This limits things below a certain nice level to the efficiency cores, meaning that the performance cores are always available for foreground action.	bombcar	9.62722	-5.441162	comment	3.0	14.0	1621254261	8.176107
27195072	Adding a bunch of tiny cores to an S	Adding a bunch of tiny cores to an SOC is easy. What’s much harder is writing the software to make use of them.	xadhominemx	9.541742	-5.2395325	comment	3.0	18.0	1621348373	7.8442636
27195177	Only for ~2 more years. I had a Moto	Only for ~2 more years. I had a Motorola machine and when they switched to x86, it was useless pretty quickly, far before its time.	redm	9.652897	-5.229583	comment	3.0	10.0	1621348750	-7.674811
27197437	That seems a bit weird to me.  Many 	That seems a bit weird to me.  Many programs are hard to multithread but I'd expect that if any given program can make effective use of 8 threads it can probably keep scaling to 16 and 32.  The hard part is getting from 1 to 2 and 2 to 4.  So I'd expect that in most cases having more than 8 high performance cores doesn't make that much sense.	Symmetry	9.676994	-5.4474144	comment	3.0	20.0	1621356528	8.018406
27203094	As in some examples that I think wer	"As in some examples that I think were posted recently on HN, you can make a simple multi-cycle ""CPU"" based entirely on lookup tables (and possibly a bit of SRAM for storage.)"	musicale	9.758437	-5.554571	comment	3.0	10.0	1621383849	8.368511
27219329	Something I don't understand here: d	"Something I don't understand here: do we really have to pay ARM for their instruction set? Does AMD pays Intel a fee for using x86? Does Intel pay AMD a fee for using their 64 bit extensions? Does anybody pay the inventor of the SSE and AVX instruction sets? Does anybody pays Nintendo for deploying emulators?The ISA is an interface, and as such may not be copyrightable or even patentable. Even if it was, we've had various interoperability exceptions, and one does need an ARM ISA to run a program compiled for ARM.Besides, as far as I know ARM doesn't just license the ISA. It licenses cores. There's a good chance that if you make your own cores to implement an ARM ISA, you wouldn't have to pay any fee. You may however have to get around trademark, and not call your CPUs ""ARM CPUs"". Though I "	loup-vaillant	9.497345	-5.286791	comment	3.0	12.0	1621505248	-7.6420946
27219690	I don't know if getting Itanium to m	I don't know if getting Itanium to more people would've saved the platform because of their architecture. The first models had trouble with their memory performance, which was fixed in hardware. The compiler also needed to watch the instructions it outputted, as not putting out the right combination of instructions in order would leave CPU hardware underutilized. Instructions were very wide, causing more frequent cache misses as the cache was full of instructions that were shorter in other architectures. Furthermore, the compiler needed to emit certain hints for the branch predictor and other speculative execution units to function well.I think the lack of availability certainly didn't help, but the architecture itself was probably the biggest downfall of the IA-64 platform. When it was in	jeroenhd	9.536337	-5.5087423	comment	3.0	12.0	1621509363	-7.829084
27242371	Fully agree. It seems so stupid. Why	Fully agree. It seems so stupid. Why do people care about what color the emoji is? Don't they have real problems?	eloff	9.788157	-6.2627034	comment	3.0	26.0	1621647427	10.447201
27244941	CPU Bugs (2018)	CPU Bugs (2018)	for_xyz	9.503882	-5.232802	story	3.0	98.0	1621675592	7.809732
27253316	Short of decapping and studying RK80	Short of decapping and studying RK808 silicon, there is probably no way to tell with certainty whether this is a hardware bug, or a software bug, in what could easily turn out to be ROM for an internal 8051 core.	nousermane	9.582573	-5.210542	comment	3.0	24.0	1621758583	-7.480957
27256690	Five Tips to Writing RISC-V Assembly	Five Tips to Writing RISC-V Assembly	azhenley	9.516496	-5.793284	story	3.0	73.0	1621790132	-10.526511
27267109	I have been looking for a cheap fpga	I have been looking for a cheap fpga devboard for this sort of thing, but results have been somewhat disappointing. The tinyfpgas look great but have been sold out for a long time. I have seen some interesting ones on tindie but the selection is quite limited. Does anyone here have any good pointers? (Plus for one with a hand-solderable fpga)	birktj	9.085996	-5.3166327	comment	3.0	10.0	1621876872	8.362871
27278110	The cost of continuing support is in	The cost of continuing support is increased decoder complexity. The simplicity/orthogonality of the ARM ISA allows simpler instruction decoders. Simpler, faster, and easier to scale. Intel and AMD instruction decoders are impressive beasts that consume considerable manpower, chip space, and physical power.	undersuit	9.657831	-5.544293	comment	3.0	33.0	1621956519	-7.7598186
27279244	x86 die breakdowns put the area of t	x86 die breakdowns put the area of the decoder as bigger than the integer ALUs. While unused ALUs can power gate, there's almost never a time when the decoders are not in use.Likewise, parsing is a well-studied field and parallel parsing has been a huge focus for decades now. If you look around, you can find papers and patents around decoding highly serialized instruction sets (aka x86). The speedups over a naive implementation are huge, but come at the cost of many transistors while still not being as efficient or scalable as parallel parsing of fixed-length instructions. The insistence that parsing compressed, serial streams can be done for free mystifies me.I believe you can still find where some AMD exec said that they weren't going wider than 4 decoders because the power/performance r	hajile	9.7148	-5.6836276	comment	3.0	11.0	1621961645	-7.670326
27284571	The more I learn about security the 	The more I learn about security the less I can understand anyone trusting the security of hardware that is not in a secure location they own.Yes rowhammer is an issue, but if you know you're a target then you have no business computing somewhere that has untrusted individuals accessing the hardware.	willis936	9.621969	-5.657996	comment	3.0	10.0	1621988446	-13.885828
27309595	I don't really think anyone with any	I don't really think anyone with anything less than an 8 figure budget can get the perf/watt of Graviton2.  They're literally not available for sale - AWS had them fabbed and then kept all of them to rent out.	sneak	9.466301	-5.185249	comment	3.0	11.0	1622155953	-8.410503
27318690	Article title is slightly misleading	Article title is slightly misleading: by smaller they mean process size, increasing the range of the rowhammer attacks logically due to decreased distance between memory cells even though the physics limited distance is the same.	CobaltFire	9.63793	-5.663919	comment	3.0	20.0	1622225625	-13.894457
27319383	I am not familiar with DRAM spec she	"I am not familiar with DRAM spec sheets, but are manufacturers specifying that there will be zero errors?Without a specification that says so, I don't think it's necessarily the fault of the manufacturer if they cannot build perfect RAM!Suppose someone builds a car with one these computers in a safety-critical role, and then someone gets injured because of an error that ""originated"" with the RAM."	gugagore	9.72754	-5.4732857	comment	3.0	10.0	1622229408	8.175522
27322913	ECC is at best a temporary workaroun	"ECC is at best a temporary workaround, and at worst an implicit approval of the creation of defective products. It's purpose is to prevent transient bitflips due to cosmic rays and such, not consistently reproducible errors from what is otherwise perfectly normal operation.Plus you can detect attack attempts as the memory controller will report increased error rates.Now you've turned specific access patterns into ""attack attempts"", and by discriminating against them as such, entirely destroyed a fundamental part of general-purpose computing. What's next, CPUs that are only guaranteed to do certain operations correctly, and everything else is considered an ""attack""? That is NOT a direction that we should be heading. Hell fucking no!!!RAM should always hold what was last written to it, under"	userbinator	9.493407	-5.5457664	comment	3.0	21.0	1622260505	8.246759
27327636	The 6502 is notoriously difficult to	The 6502 is notoriously difficult to write a compiler for because it has only three general-purpose registers and it doesn’t have a stack-relative addressing mode, meaning there’s not really an efficient way to implement local variables.When writing 6502 assembly by hand, you usually just create a few global variables as “temporaries” for storage, parameter passing, etc. and you write your code carefully to make sure any subroutines you call don’t try to use a temporary you’re already using, or anything like that. Obviously, this doesn’t look anything like idiomatic C.For this reason, I’m really interested in seeing what kind of code this generates and how it performs, especially compared to the dominant 6502 compiler cc65 (https://cc65.github.io/).	NobodyNada	9.699264	-5.6324105	comment	3.0	10.0	1622316412	-7.460704
27346011	This is not at all what a softcore i	"This is not at all what a softcore is to me. 
This simply means that it is not a cpu which takes physical space on the FPGA whether you use it or not, it would only takes some celle of the logical array if inferred.But it is rather redundant to say vhdl and softcore, plus there are no riscv hardcore yet on FPGA."	fischert	9.3257475	-5.469433	comment	3.0	12.0	1622480321	-10.555555
27347649	I didn't realize Intel had shipped a	I didn't realize Intel had shipped a mobile chip with AVX-512.Also, Intel for the love of God sort out your product names, use a proper system rather than /dev/random Lake	mhh__	9.404498	-5.434781	comment	3.0	27.0	1622491877	8.067506
27350897	Here comes another knockdown punch f	Here comes another knockdown punch for Intel.Now they got a solution to add hundreds of megs of cache for cheap.More importantly SRAM can be binned/tested/KGDed separately!And it can be fabbed on its own customised process!And also, they can throw in an eDRAM there instead on a moment notice.And as they already have silicon interposer here, adding HBM2/3 will be also a triffle.	baybal2	9.493206	-5.266722	comment	3.0	19.0	1622524107	7.937201
27351502	In short, yes, higher capacity will 	In short, yes, higher capacity will involve higher latency.The thing here is balancing core speed vs “effective” memory latency (factoring in cache hits, misses, etc).Cache management is a hard problem, and the equilibrium point is load dependent (i.e. depends on what type of program you use).AMD has been smart enough to understand that sometimes it’s better to just brute force your way in (with higher cache sizes) than being super clever about how you handle it.	xondono	9.907002	-5.41318	comment	3.0	19.0	1622531693	8.003593
27357785	Porting the Oberon system to the RIS	Porting the Oberon system to the RISC-V [video]	pjmlp	9.393466	-5.6785097	story	3.0	63.0	1622567101	5.762723
27361899	> I know that cross-compiling Linux 	> I know that cross-compiling Linux on an Intel X86 CPU isn't necessarily going to be as fast as compiling on an ARM64-native M1 to begin withIs that true?  If so, why?  (I don't cross compile much, so it isn't something I've paid attention to).The architecture the compiler is running on doesn't change what the compiler is doing.  It's not like the fact that it's running on ARM64 gives it some special powers to suddenly compile ARM64 instructions better.  It's the same compiler code doing the same things and giving the same exact output.	fpgaminer	9.827521	-5.5320745	comment	3.0	18.0	1622584430	2.830745
27367342	Things like this make me want to hav	Things like this make me want to have more free time to start my own paid CI service. I can likely start from a few languages I know and take it from there.I wonder how hard it is to write your own CI/CD though? Anybody has thoughts on this?	pdimitar	9.184291	-6.398147	comment	3.0	11.0	1622632899	6.1649494
27398370	You mean like the Intel i860?https:/	You mean like the Intel i860?https://en.wikipedia.org/wiki/Intel_i860Or the Intel Itanium?https://en.wikipedia.org/wiki/ItaniumOr the AMD Am29000?https://en.wikipedia.org/wiki/AMD_Am29000Or the AMD K12 which was a 64-bit ARM?https://www.anandtech.com/show/7990/amd-announces-k12-core-c...All of these things were either rejected by the market or didn't even make it to the market.Binary compatibility is one of the major if not the major reason that x86 has hung around so long.  In the 1980's and 90's x86 was slower than the RISC workstation competitors but Intel and AMD really took the performance crown around 2000.	lizknope	9.465994	-5.22279	comment	3.0	17.0	1622836460	7.8104315
27412397	If anybody is wondering why those un	"If anybody is wondering why those undocumented instructions exist:https://www.pagetable.com/?p=39...it's basically a tolerated side effect of the very simple table-based instruction decoding on the 6502. The main design goal of the 6502 was to create a very cheap yet practical CPU (compared to more complex and more expensive CPUs like the Z80), and one way to achieve this was to simplify the instruction decoding with a simple ""switch board"" even if this means that there's nonsensical ""cross-talk"" for some opcode bit patterns.Here's also a very nice blog post by Ken Shirriff about the instruction decoding differences on ARM1, 6502 and Z80:https://www.righto.com/2016/02/reverse-engineering-arm1-inst..."	flohofwoe	9.58516	-5.3686347	comment	3.0	21.0	1622979162	-7.476576
27412632	I started as a teenager coding 6502 	I started as a teenager coding 6502 assembly on a Vic20. The three letter opcodes definitely made my code look beautiful.Z80 assembly a few years later was a real disappointment. No doubt the instruction set was more powerful. But the code always looked ugly to me.I've never forgotten my love for 6502 assembly. My mobile number ends with the 4 digits '6502'. <3	stevesimmons	9.612972	-5.4205046	comment	3.0	12.0	1622981823	-7.4125967
27428299	In theory this should open possibili	In theory this should open possibility to unlock all the market segmentation gated Intel bullshit like ECC, AVX, multiplier change overclocking, etc. Maybe even manipulating CPUID.	rasz	9.418897	-5.2723427	comment	3.0	18.0	1623106201	-4.4704833
27428612	I don't think you read the article c	"I don't think you read the article closely enough. You only need ""red state"" (aka Debug mode) if you are using the instructions with unsigned microcode updates. But if you have a way to pop the machine into redstate you can exfiltrate the secret key and actually sign microcode changes that will be accepted as legit. All of those things are well within the capability of an APT, especially if you don't need the EXACT target system[1].Personally I thought IME was a huge problem when Intel announced it, and I haven't changed that opinion.[1] Open question I don't know the answer too is whether all CPU SKUs share the same secret key. (which would be logical if you wanted to push a microcode  change for a particular SKU)."	ChuckMcM	9.559636	-5.36755	comment	3.0	10.0	1623108017	7.821105
27442844	I run everything python under Rosett	I run everything python under Rosetta. Easiest way is to install home brew for Intel processors then make an alias to that version for managing rosetta stuff	qmmmur	9.888182	-5.3681297	comment	3.0	14.0	1623198710	7.5267153
27450721	You can also stack SRAM bumplessly u	You can also stack SRAM bumplessly using the wireless ThruChip Interface: https://en.wikichip.org/wiki/thruchip_interface	Sephr	9.487225	-5.1946545	comment	3.0	18.0	1623260125	7.8993063
27466626	I am not sure why one would care abo	I am not sure why one would care about what Linus, or the person he is talking to says, Neither is an expert in the field.	miked85	9.2897	-5.8848534	comment	3.0	10.0	1623363906	4.231456
27470098	"> When Linus starts out with ""Please"	"> When Linus starts out with ""Please keep your insane"" - the reader/original poster will enter a defensive modeYou're assuming the goal is convincing the original poster. Given that goal, you are correct.The counterargument: OP doesn't matter. Their effect on third parties is key. Reasonably engaging with OP validates their thinking. (Which, to reiterate, is nonsense.) Yes– calm, patient rhetoric has a higher chance of succeeding with them. But it's also likely to leave bystanders neutral or open to OP's arguments. Excoriating OP guarantees they'll hate you. But it increases the chance that third parties get the message.You're a good soul. You care about OP. We're...well, we're bastards. To us, OP is beyond saving. What matters is the people around her. The people on the internet, who migh"	JumpCrisscross	9.269467	-5.888844	comment	3.0	10.0	1623394108	4.3387737
27475507	The issue is that DDR4 is like that 	The issue is that DDR4 is like that too. Not only the 64 byte cache line, but DDR4 requires a transfer to the sense amplifiers (aka a RAS, row access strobe) before you can read or write.The RAS command eradicated the entire row, like 1024 bytes or so. This is because the DDR4 cells only have enough charge for one reliable read, after that the capacitors don't have enough electrons to know if a 0 or 1 was stored.A row close command returns the data from the sense amps back to the capacitors. Refresh commands renew the 0 or 1 as the capacitor can only hold the data for a few milliseconds.------The CAS latency statistic assumes that the row was already open. It's a measure of the sense amplifiers and not of the actual data.	dragontamer	9.716983	-5.237172	comment	3.0	15.0	1623429608	7.9069552
27488530	>This is recalling the old Linus deb	>This is recalling the old Linus debates, but the aggressiveness _doesn't improve the clarity_, and is basically upping the word count.It drives the point home though, and keeps the energy levels higher.	coldtea	9.265249	-5.869333	comment	3.0	10.0	1623542690	4.2635303
33428119	the actual Verilog source is incredi	the actual Verilog source is incredibly small. I would have thought that implementing a CPU, even a toy one, would take more than 500 lines. is this normal for hardware?	sterlind	9.261902	-5.498947	comment	3.0	13.0	1667339717	8.496584
33454509	I think it's important to call out t	I think it's important to call out that Rosetta 2 on Apple silicon uses a special mode that changes how the memory model works to support x86 style memory ordering. That massively reduces the amount of work needed to emulate x86 and x86-64. Pretty sure apple both has a patent on it and a special dispensation from ARM to use it. Where qualcomm and MS don't have either. Which means emulation on Qualcomm CPUs is going to be painfully slow in comparison because it has to use a lot more locks and fences than is actually necessary with that mode available.	leeter	9.789274	-5.2796946	comment	3.0	15.0	1667496842	7.610931
33457155	This makes me so angry to see. I fee	This makes me so angry to see. I feel like all the things I find important in technology are getting obliterated and the organizations I used to rely on turn out to be useless. If we ever lose Linus it's fucking over	snapcaster	9.302689	-5.878829	comment	3.0	17.0	1667507864	4.226253
33473397	How close is RISC-V to RISC-I? (2017	How close is RISC-V to RISC-I? (2017)	cpeterso	9.373829	-5.6994066	story	3.0	73.0	1667594033	-10.626835
33474289	I'm going to call you out on this on	I'm going to call you out on this one, because it's a bold claim, and I'd love to see an explanation and some perf numbers.For example, I'm wondering how the CPU knows what the next item in the list to prefetch it. Unlike the next item in an array, list items could be pointing anywhere in process memory.Also, what counts as a modern CPU in this context? Are we talking latest generation desktop CPUs from Intel, or anything after Core 2 Duo? How about mobile devices with ARM CPUs? Would those just be ignored?Is there a benchmark?	optymizer	9.668186	-5.38861	comment	3.0	33.0	1667598415	7.9149466
33492584	> They pulled something off I think 	> They pulled something off I think would be difficult for many others and have shown they're not married to a single architecture.You mean like how MS Windows ran on the DEC Alpha as well as X86?  Or how Linux runs on X86 and ARM CPU's?Running an OS on multiple CPU types goes back a very long time.	kennend3	9.656276	-5.2022324	comment	3.0	17.0	1667742440	-7.7572784
33501004	RISC-Vlim, a RISC-V Framework for Lo	RISC-Vlim, a RISC-V Framework for Logic-in-Memory Architectures	SanjayMehta	9.43267	-5.71549	story	3.0	52.0	1667793916	-10.570016
33518751	AMD’s Zen 4, Part 2: Memory Subsyste	AMD’s Zen 4, Part 2: Memory Subsystem and Conclusion	zdw	9.27491	-5.2383246	story	3.0	153.0	1667914466	7.9480824
33533520	I hope Rosetta is here to stay and c	I hope Rosetta is here to stay and continues developement. And I hope what is learned from it can be used to make a RISC-V version of it. translating native ARM to RISC-V should be much easier than x86 to ARM as I understand it, so one could conceivably do x86 -> ARM -> RISC-V.	Vt71fcAqt7	9.696846	-5.431885	comment	3.0	62.0	1668009769	-10.54193
33533919	> Rosetta 2 translates the entire te	> Rosetta 2 translates the entire text segment of the binary from x86 to ARM up-front.Do I understand correctly that the Rosetta is basically a transpiler from x86-64 machine code to ARM machine code which is run prior to the binary execution? If so, does it affect the application startup times?	menaerus	9.763454	-5.3876476	comment	3.0	22.0	1668011266	7.5887933
33534255	>That's not going to happen unless A	>That's not going to happen unless Apple decides to switch from ARM to RISC-V, and... why would they? They've got 15 years experience and essentially full control on ARM.Two points here.• First off, Apple developers are not binded to Apple. The knkwledge gained can be used elsewhere. See Rivos and Nuvia for example.• Second, Apple reportedly has already ported many of it's secondary cores to RISC-V. It's not unreasonable that they will switch in 10 years or so.	Vt71fcAqt7	9.400316	-5.56869	comment	3.0	17.0	1668012538	-10.572004
33534475	Apple reportedly has already ported 	Apple reportedly has already ported many of it's secondary cores to RISC-VReally? In current hardware or is this speculation?	jrmg	9.405985	-5.5178814	comment	3.0	13.0	1668013283	-10.517722
33537716	Huh, this is timely. Incredibly rand	Huh, this is timely. Incredibly random but: do you know if there was anything that changed as of Ventura to where trying to mmap below the 2/4GB boundary would no longer work in Rosetta 2? I've an app where it's worked right up to Monterey yet inexplicably just bombs in Ventura.	Klonoar	9.795036	-5.345648	comment	3.0	12.0	1668027469	7.614157
33537854	> To me it’s more of an argument tow	"> To me it’s more of an argument towards distributing software in intermediate form (like Apple Bitcode) and compiling on install, tailoring for the current processor.This turns out to be quite difficult, especially if you're using bitcode as a compiler IL. You have to know what the right ""intermediate"" level is; if assumptions change too much under you then it's still too specific. And it means you can't use things like inline assembly.That's why bitcode is dead now.By the way, I don't know why this thread is about how JITs can optimize programs when this article is about how Rosetta is not a JIT and intentionally chose a design that can't optimize programs."	astrange	9.842382	-5.418766	comment	3.0	15.0	1668028139	-9.022413
33538269	> However the first version of Mac O	> However the first version of Mac OS X that shipped without Rosetta 1 support was 10.7 LionYes, but I was pointing out when the last version of OS X that did support Rosetta shipped.I have no concrete evidence that Apple dropped Rosetta because IBM wanted to alter the terms of the deal after they bought Transitive, but I've always found that timing interesting.In comparison, the emulator used during the 68k to PPC transition was never removed from Classic MacOS, so the change stood out.	GeekyBear	9.78952	-5.2916484	comment	3.0	12.0	1668029961	7.6679897
33586603	Much agreed. Intel syntax just seems	Much agreed. Intel syntax just seems somewhat alien.	aap_	9.484076	-5.347206	comment	3.0	12.0	1668368769	7.747006
33597821	My way of getting around the emoji c	My way of getting around the emoji conversions from ':)' to a smiley face is typing it in reverse: '(:' or '):'.	kaladin-jasnah	9.810326	-6.2612224	comment	3.0	10.0	1668447702	-13.954264
33605158	You remember correctly: the 603 was 	"You remember correctly: the 603 was never intended for multiprocessing. It was amazing it worked as well as it did on the BeBox, but AFAIK it was the only 603-based computer ever to try. The G3, the 603's more-or-less direct follow-on, doesn't support it either. From the BeBox FAQ: ""We use the Motorola 105 'Eagle' support chip, which allows for either one processor and an L2 cache or two processors without L2 caches. So, our two-processor PowerPC BeBox has no provision for an L2 cache."""	classichasclass	9.767118	-5.513068	comment	3.0	11.0	1668485404	8.138585
33626997	The primary issue is the subsets of 	The primary issue is the subsets of possible extensions to the core.Can it replace ARM? maybe in some roles that only require core features.Will it  become the popular standard? probably not, as the groups failed to learn what ARM did wrong.  Most popular ARM cores have many advanced features disabled in the compilers for a few reasons:1. Some ARM ASIC advanced features would err on some chips, or were simply unavailable on some silicon revisions.2. Deploying chip specific compilers is unsustainable commercially when your competitor can port in billions of dollars of work with gcc (as bad  as it is)3. a complete RISC-V implementation with floating point and DSP extensions should have been the minimum core.  Without these features, it dropped the whole generation 1 chip hardware into the lo	Joel_Mckay	9.464439	-5.5046377	comment	3.0	21.0	1668619968	-10.456674
33627134	Judging from the number of instructi	"Judging from the number of instructions in all its necessary extensions, RISC-V is RISC in name only. ARM (""Acorn RISC Machine"") instructions are as absurdly many as x86's, which does not even pretend to be RISC. So it is silly to say RISC has won."	pencilguin	9.429623	-5.675864	comment	3.0	19.0	1668620386	-10.542794
33627274	>Do not doubt that the number of ins	">Do not doubt that the number of instructions will grow as large as is found in x86 and ARMx86 has at least ~1,000 instructions,[0][1] maybe more depending on how you count. I can't believe RISC-V will approach that number. I couldn't easily find how many instructions arm64 has. But you may be right about RISC-6, only I think any ""RISC-6"" will just be RISC-V with less useful instructions depreciated[0]https://www.unomaha.edu/college-of-information-science-and-t... 
[1]https://fgiesen.wordpress.com/2016/08/25/how-many-x86-instru..."	Vt71fcAqt7	9.549027	-5.728603	comment	3.0	12.0	1668620809	-10.521361
33627308	The number of instructions is alread	The number of instructions is already becoming quite large if you consider the V and P extensions. Here's the vector instructions: https://github.com/riscv/riscv-v-spec/blob/master/inst-table...The set of RISC-V features that each CPU supports is going to be so widely varied that you will need dozens of compiler switches to make full use any processor, and since most software will be compiled for the lowest-common-denominator, some capabilities will go largely unused. This is already the case with x86 with AVX-512, the full capabilities are only leveraged in specific workloads.Either that or developers are going to rethink the way they distribute software. No longer as compiled binaries, but as an IR which is then compiled on each processor, since the best way to learn what features are su	sparkie	9.509982	-5.7104983	comment	3.0	29.0	1668620894	-10.516399
33627626	"I think ""do something simple"" is goi"	"I think ""do something simple"" is going to get phased out and replaced by ""do something useful"" over time.Consider if you want to load a 64-bit immediate into a register under the current RISC-V spec. Takes so many instructions that it's easier to just load a constant from memory, despite memory access being much slower.    lui r1, 0x01234
    lui r2, 0x89ABC
    addi r1, 0x567
    addi r2, 0xDEF
    shl r1, 32
    or r1, r2

24-bytes, 6 instruction cycles and 2 registers.In x86_64:    movabs rax, 0x0123456789ABCDEF

11-bytes, 1 instruction cycle, 1 register."	sparkie	9.625392	-5.8538494	comment	3.0	12.0	1668621811	-10.507898
33656805	Micro is a μ, so it’s fine too.	Micro is a μ, so it’s fine too.	aikinai	9.874529	-5.2057195	comment	3.0	15.0	1668787915	6.244824
33658453	Firecracker is pretty great, good to	Firecracker is pretty great, good to see it can be used in a CI environment like this, definitely peaking my interest.I know its the backbone of what runs fly.io[0] as well[0]: https://fly.io/docs/reference/architecture/#microvms	no_wizard	9.934851	-5.9573474	comment	3.0	13.0	1668793205	-8.432032
33661222	Sounds similar to webapp.io (layerci	Sounds similar to webapp.io (layerci) that has been discussed quite a few times here: https://news.ycombinator.com/item?id=31062301> Friction starts when the 7GB of RAM and 2 cores allocated causes issues for usWell, I just create a 20GB swap. There's ample disk space but swap is slow for sure.> MicroVMCoincidentally, QEMU now sports a firecracker-inspired microvm: https://github.com/qemu/qemu/blob/a082fab9d25/docs/system/i3... / https://mergeboard.com/blog/2-qemu-microvm-docker/	ignoramous	9.898336	-5.7556863	comment	3.0	10.0	1668801797	10.024968
33666256	m6.12xl are 48 vCPU systems. 25 mill	m6.12xl are 48 vCPU systems. 25 million cores is a hilariously huge amount of compute to use to run a site of twitter size, which I guess does point to how much tech debt they have ignored over time.	the8bit	9.474256	-5.232001	comment	3.0	13.0	1668825931	7.857716
33679818	Running Arm64.aarch64 FreeBSD on QEM	Running Arm64.aarch64 FreeBSD on QEMU/UTM.app on Apple Silicon	ingve	9.921607	-5.4182096	story	3.0	82.0	1668939743	-8.079289
33679897	Would it be possible to use the Appl	Would it be possible to use the Apple Virtualization framework instead of emulating AArch64? That should result in more performance.	abyssal512	9.789175	-5.2643323	comment	3.0	11.0	1668940894	-7.8234234
33688255	> The certification took 20 months o	> The certification took 20 months on an AMD 3990x computer (64 cores); and verification took about 13 hours.I'm absolutely dumbfounded (and awestruck) that there are people who dedicate this much compute power to solving these tasks.	smoldesu	9.400918	-5.357447	comment	3.0	35.0	1669000249	-5.141843
33713009	> Why not ARM then? Because NASA can	"> Why not ARM then? Because NASA can use their own implementations in FPGA without paying a bunch of extra money for the privilege.It would not surprise me if ARM were to offer NASA such a license rather cheaply, possibly even for free. The marketing/P&R/etc benefits of ""NASA uses our technology"" likely outweigh any potential revenue – especially if the choice comes down to ""NASA uses our technology for free"" versus ""NASA uses a competing technology instead""."	skissane	9.534543	-5.2160316	comment	3.0	14.0	1669159584	-7.6924644
33720589	Pi Cluster vs. Ampere Altra Max 128-	Pi Cluster vs. Ampere Altra Max 128-Core ARM CPU	ingve	9.552998	-5.2567053	story	3.0	48.0	1669218249	7.8357544
33720178	I think almost all problems with my 	I think almost all problems with my computers so far have been bad memory or OCZ SSDs. But the performance hit you take for games and some other things is also very real and big. The very best DDR4 ECC memory on the market is DDR4-3600 CL16-19-19-39, which a) is not a good bin to start with, almost certainly with bad tertiary timings and b) costs more than twice as much as equivalent non-ECC.	formerly_proven	9.516736	-5.514078	comment	3.0	10.0	1669216609	8.225424
33720357	I don't get the outrage. Normally, t	I don't get the outrage. Normally, these features would just be fused off during the CPU binning phase. Even working areas of the chip are fused off for market segmentation. If you have a 4 core chip, it's probably a 6 or 8 core internally.All this seems to do is make the fused off area, that was previously unusable, now usable. For the average consumer, it doesn't change anything. But now a business can purchase a CPU that doesn't support, say, AVX-512, and enable it on-demand when they need it. Is there a reason we should be more upset about this than the CPU binning that's been happening for decades?Side-note: Intel's market segmentation on ECC memory is, however, garbage.	colejohnson66	9.405446	-5.263755	comment	3.0	13.0	1669217312	7.7736263
33724102	From memory.(The original) VAX 11/78	From memory.(The original) VAX 11/780 was a 1 MIPS machine.  32 Bit.pdp 11 was a slower machine. plus it was 16 bit. slow clock, a relatively cheap o'scope could be used to snoop the buses.	bdavis__	9.58885	-5.2529325	comment	3.0	10.0	1669235229	-7.602447
33754222	Compiler and Runtime Specializations	Compiler and Runtime Specializations for Accelerating Managed Languages on FPGAs	mpweiher	9.146767	-5.430143	story	3.0	31.0	1669481317	8.389473
33762921	Am I right that this is all simulate	"Am I right that this is all simulated in software? I mean for the ""implemented on FPGA"" part, is there a physical FPGA running this OS? If so, how does it talk to the rest of the computer (i.e. drivers, etc)?"	bo1024	9.198713	-5.278769	comment	3.0	11.0	1669557079	8.213994
33832527	Totally unfair in my opinion:1) They	"Totally unfair in my opinion:1) They have excluded i386. It is well known that 64-bit archs waste lot of memory and 32-bit arch could probably save something2) They should have disabled position-independent code generation because on i386 it takes more memory3) Instead of optimizing for speed whole program it is better to optimize for speed only ""hot"" parts and optimize the rest for size. Or optimize everything for size."	codedokode	9.785871	-5.439402	comment	3.0	12.0	1669997928	-7.933707
33833083	The comparison was not really unbias	The comparison was not really unbiased, because for RISC-V the compressed instruction extension was used, which artificially makes RISC-V appear to have shorter programs.RISC-V with the compressed instruction extension should be compared only with ARMv8-M (i.e. Thumb2), nanoMIPS or other such ISA's, which target similar levels of CPU performance, not with ARMv8-A, which is intended to be implemented at much higher levels of performance.The graph with the number of instructions reveals that the RISC-V programs were not shorter than the AArch64 programs, but longer by more than 12% (all AArch64 and RISC-V instructions have the same length).RISC-V has only one great feature that is the cause of a significant program length reduction, the combined compare-and-branch instructions, which save on	adrian_b	9.525406	-5.754723	comment	3.0	12.0	1670000220	-10.548679
33846248	I always thought microcode was featu	I always thought microcode was feature that started with cyrix and pentium processors. Not once did I think it was a thing on the 8086.	theyeenzbeanz	9.620369	-5.44448	comment	3.0	27.0	1670094231	7.674714
33846364	Microcode goes back to the PDP-11 an	"Microcode goes back to the PDP-11 and beyond; in a CISC mindset (""our job as ISA designers is to make it easier for assembly programmers to express their programs"") it's a pretty obvious tool for increasing instruction set richness without proportionally increasing transistor budget."	addaon	9.569109	-5.438546	comment	3.0	13.0	1670095103	7.6668105
33846665	Most computers were microcoded from 	Most computers were microcoded from the invention of the technique early in the 1950s, until the present.  Really, it would make more sense to list the exceptions that weren't microcoded.Some small minicomputers like the PDP-8 in the 60s/70s were hardwired logic; they were so simple that microcode wasn't necessary to cheaply implement them.  Along the same lines, some early microprocessors like the 6502 also weren't microcoded (though they still tended to use large ROM lookup tables driven by a custom state machine so sort of half-microcoded).Some very large early supercomputers were also hardwired; the CDC 6000 series, Cray-1, or IBM's largest System/370 models, for example.  Microcode was avoided to minimize the logic delay during a single cycle and get things running as fast as possible	retrac	9.567949	-5.295116	comment	3.0	17.0	1670097159	7.6539993
33847449	I don't think that ARM implementatio	I don't think that ARM implementations are usually microcoded.	garaetjjte	9.6553955	-5.3747625	comment	3.0	10.0	1670102241	-7.688431
33870858	I recently powered on my model 1 B f	I recently powered on my model 1 B for the first time to see what it was like.The Linux desktop experience on this single core device is horrific.What is MUCH more impressive is RiscOS on it. It flies. The whole OS is written in assembler. It's fast. It's a what-if of computing. https://www.riscosopen.org/content/downloads/raspberry-pi if you're curious to take a look.Curiosity of RiscOS aside, those single core 700 MHz devices I would only advise using them in terminal mode, no desktop, whether Linux, FreeBSD or something else.	Sunspark	9.480335	-5.600257	comment	3.0	11.0	1670269706	-10.552552
33887339	I suppose Rive [0] will have to make	I suppose Rive [0] will have to make a response to this to clarify just how much better it is than Lottie - as far as performance goes.[0]: https://rive.app/	skilled	9.413574	-5.6883793	comment	3.0	30.0	1670362257	-10.56525
33889882	Linus Torvalds?  He has videos?	Linus Torvalds?  He has videos?	pimlottc	9.29977	-5.876335	comment	3.0	10.0	1670378844	-8.13712
33920071	Modern vcpu is much faster than a 20	Modern vcpu is much faster than a 2008 CPU.There is a significant IPC increase with every generation.	Delemono	9.499638	-5.2194552	comment	3.0	11.0	1670584367	8.035299
33920345	Disclaimer: Co-founder of https://bu	"Disclaimer: Co-founder of https://buildjet.com/for-github-actionsWhile more cores can certainly help with certain types of projects, such as those that can be easily parallelized, this is not always the case. For example, web app projects won't benefit as much from additional cores.Another important factor to consider is the single-core performance of each vCPU. Many server-class CPUs, such as those used by GitHub, are built with a very high-core count but with a very low single-core speed. In contrast, BuildJet uses consumer CPUs, such as the 5950x, which offer slightly less core count but an excellent single-core speed.It's quite astonishing how slow ""the cloud""/server-class CPUs can be, we compared my old MacBook Pro 2015 vs. a 2vCPU GitHub actions runner and the MBP 2015 won most of th"	thinkafterbef	9.319825	-5.7258873	comment	3.0	10.0	1670587313	-11.750532
33927121	Didn't it use the 80 column screen? 	Didn't it use the 80 column screen? It was my experience that the C128's 80 column screen was an absolute dog. I was pretty handy with 6502 assembly language but trying to get anything onto that screen was just disappointingly slow. Maybe I was doing it wrong, but it seemed like you had to put every last screen address into that display controller, and that controller itself required you to select register numbers before putting the values in.So just to write one character onto the actual screen required six writes into the controller chip. Adress-low-register-number into D600, screen address LSB into D601. Then address-high-register-number into D600, then screen address MSB into D601. Now you're ready to write 'A' into the actual screen buffer! So, write-data-register-number into D600 and	greenbit	9.867719	-5.792327	comment	3.0	12.0	1670624247	-7.477928
33991696	There's already talk of STT-MRAM or 	There's already talk of STT-MRAM or SOT-MRAM replacing SRAM. They offer similar performance while also being non-volatile. If SRAM scaling ends, this becomes a much more promising technology.https://semiengineering.com/sot-mram-to-challenge-sram/	_hypx	9.755435	-5.2997985	comment	3.0	22.0	1671057390	8.080931
33997291	is out of order processing part of t	is out of order processing part of the open spec for RISC-V? or something they added on top?	iiiiiggggjjjh	9.393334	-5.6714153	comment	3.0	21.0	1671097730	-10.555921
34016094	Hi folks. :)I'm so glad that my hit-	Hi folks. :)I'm so glad that my hit-and-run post has been so useful. After seeing Fabien's blog post I did a quick search and it turns out that the solution has spread fairly broadly to other forums. My choice of 0x33 was arbitrary so makes a nice canary for seeing it spread out. I'm thrilled. Sharing experiences and solutions is so essential to learning. I've benefited enormously from the generosity of open source developers and communities and from individuals documenting pieces of their projects, glad to have raised the ocean a little in return.My use case was (and remains) having a Xilinx Artix 7 FPGA in an external Thunderbolt 3 enclosure for testing the development of DSP accelerators using open source tooling. I didn't want to have the FPGA board inside the PC to be able to swap it 	dkozel	9.109946	-5.3423004	comment	3.0	14.0	1671206612	8.304697
34028803	> RISC-V cannot become the dominant 	> RISC-V cannot become the dominant ISAI absolutely want RISC-V to succeed but there is a difference between wanting it to succeed and wanting it to become 'dominant' or a 'lingua franca'. I find it a bit unnerving that to 'dominate' other ISAs is something that is being discussed.	klelatti	9.411044	-5.6940665	comment	3.0	17.0	1671292415	-10.577059
34027915	It's complicated by patents for some	It's complicated by patents for some of the low level implementations. Typically, you'd license x86 from Intel if you want to build an x86 chip, whereas there are no licenses/patents around RISC-V as far as I know.The huge advantage of RISC-V is the lowered barrier to entry for chip manufacturers. It's now becoming possible for tech companies to make their own processors for their specific hardware and requirements.In my mind, the even bigger advantage is that the door is now open for open source RISC-V implementations, so that people/companies can work together on high performance/low energy CPUs. It seems such a waste of talent for different companies all spending time and effort to implement similar features in their chips, when they could be building and extending open source chip desi	ndsipa_pomu	9.388169	-5.645194	comment	3.0	13.0	1671286603	-10.556083
34050297	Did the talk offer any solutions to 	Did the talk offer any solutions to this? Its not like any of the secondary processors he could be talking about have any kind of open source support or even public specifications of their programmability or ISAs or similar.	pabs3	9.528616	-5.2287507	comment	3.0	14.0	1671443541	-7.812788
34050527	Thanks for your answer.How does CI w	Thanks for your answer.How does CI work in practice? how do you avoid rebuilding and retesting the whole repo at every change? That would be an insane waste of resource and time.	Galanwe	9.04393	-6.421588	comment	3.0	10.0	1671445714	6.1292996
34094433	That's because you lack imagination,	"That's because you lack imagination, you lack knowledge about how we've gotten to where we are, and you lack understanding about the value of keeping software portable.There are many, many reasons for maintaining support for alternate architectures. How many problems would be baked in if we always had this attitude?Back in the day when ""all the world is an i386"", people complained when told about how their code has bugs when compiled on 64 bit processors. Imagine if we had baked in all of those 32-bit-centric bugs that broke compiling on 64 bit.People do the same thing now when told their code doesn't compile cleanly on 32 bit, on PowerPC, on ARM, on big endian, et cetera. Imagine if we now acted like ""all the world is an amd64"", and lots of code was simply broken on aarch64?If you were al"	johnklos	9.80406	-5.3306365	comment	3.0	12.0	1671723639	-7.8848977
34096523	Hyperthreads aren't real CPU cores, 	"Hyperthreads aren't real CPU cores, claiming that your 48 hyperthreads were ""only"" 50% utilized means all the real cores under the hood are fully utilized."	malfist	9.659682	-5.427164	comment	3.0	30.0	1671733036	8.105602
34096682	> Hyperthreads aren't real CPU cores	"> Hyperthreads aren't real CPU coresI can't think of a good principled reason to say SMT cores aren't ""real"".I'm assuming the answer isn't ""because they share some computing stuff"".  What I think you'd call ""real"" cores also share resources like L2/L3 caches, sometimes DMA engines, etc.And IIRC, each Intel SMT (hyper-thread) unit has its on instruction pointer and (non-SIMD?) register set."	CoastalCoder	9.724461	-5.5254316	comment	3.0	26.0	1671733879	8.187734
34097878	I did an experiment and effectively 	I did an experiment and effectively proved this to myself many years ago.I had just upgraded to an i7-3770K (8 threads, 4 cores) from a Core 2 Quad (4 threads, 4 cores).  I did a POV-Ray render several times using 1, 2, 4, and 8 threads.  2 was nearly double the speed of 1, 4 was nearly double the speed of 2, but 8 was only about 15% faster than 4.To ensure I wasn't bottlenecking RAM at that level, I tried again with 2 threads, but forced both threads onto a single core, and it was only 15% faster than 1 thread.That was all the proof I needed of how you really can't treat two CPU threads as two cores.That said, I've never personally found an instance where allowing a processes to span all CPU threads actually reduced performance, and I'm not sure I've ever seen a real-world case where it d	Sohcahtoa82	9.584803	-5.3770814	comment	3.0	10.0	1671739325	8.08462
34103359	> In fact, we would argue that the s	> In fact, we would argue that the study of assembly language is extremely important to the building of competent software engineers. Further, we would argue that teaching the x86 instruction set is cruel as that ISA was born in the 1970s and has simply gotten more muddled with age.> The MIPS instruction set is another ISA that is often covered in College level courses. While kinder and gentler than the x86 ISA, the MIPS processor isn't nearly as relevant as the ARM family.I disagree. My university taught me MIPS assembly and its only utility has been in enabling me to understand x86_64 assembly poorly. When I look at the disassembly of my code, it is in x86_64 assembly, yet I realized yesterday that I have no clue what the difference is between signed and unsigned subtraction on x86_64. H	ryao	9.825046	-5.848545	comment	3.0	21.0	1671782414	-7.5990896
34108228	I'm not talking about Qualcomm, real	I'm not talking about Qualcomm, really. I'm talking about companies like Apple, who really only have a cursory attachment to ARM as an ISA. Then there's the hundreds of smaller manufacturers who have zero attachment to ARM and would much rather build hardware on their own terms. Those are ARM's moneymakers, and those are the companies that frankly have the most to gain from using RISC-V.If Qualcomm is a relevant topic regarding ARM's success, then they've arguably already failed.	smoldesu	9.454802	-5.4277525	comment	3.0	14.0	1671815656	-10.527657
34108875	> The only pre-RISC legacy ISA in us	> The only pre-RISC legacy ISA in use is x86, and it is only losing market share.And for many generations now, x86 machines are basically RISC processors with a CISC frontend.Empirically it seems that CISC has 'failed' as a way to design processors, and it's better to let the compiler do that job when you're building a general purpose computer.	error503	9.505473	-5.624828	comment	3.0	14.0	1671819151	-10.469433
34109501	Not yet. With a couple of exceptions	Not yet. With a couple of exceptions, the RISC-V CPUs described in the article are all closed source.RISC-V is an open instruction set, so anyone can implement their own design using it, often with their own proprietary extensions.Because the instruction set is open, there are indeed hundreds of open source RISC-V designs out there, because basic CPU design is fun, easy and educational.However, at the moment, nearly all physical RISC-V CPUs you can actually buy, dev boards etc, and devices containing them, use closed source CPU designs.	jlokier	9.40429	-5.6451607	comment	3.0	10.0	1671822556	-10.553769
34109510	As a high level language programmer,	As a high level language programmer, I look forward to understanding my computer all the way down i.e. including the ISA which is not happening on amd64.	user3939382	9.624081	-5.5463867	comment	3.0	16.0	1671822614	-7.722395
34111109	Around 2001, I ran the contemporary 	Around 2001, I ran the contemporary BeOS demo on a Pentium MMX 200 MHz machine with 32 MB of RAM. Even with those limitations, the thing screamed. I believe it was live CD you downloaded and burned.I am absolutely not surprised it works well on Athlon 64.	xattt	9.412188	-5.2058496	comment	3.0	10.0	1671833090	7.8217516
22674138	We Started Putting Unpopular Assets 	We Started Putting Unpopular Assets in Memory	jgrahamc	9.902287	-5.5330014	story	3.0	16.0	1585051361	3.163166
22700866	I was thinking about this the other 	I was thinking about this the other day, wondering why modern RISC machines (like RISC-V). that don't have call/return instructions that hard code stack direction, simply have coding models that grow their stacks upwards - this would avoid most of these sorts of problems	Taniwha	9.497632	-5.760755	comment	3.0	10.0	1585291952	-10.549695
22707801	> In fact, if my calculations are co	> In fact, if my calculations are correct, out of 65,745 lines in the original nsprpub, 36,046 are present unchanged in the current version of nsprpub, i.e. 54.8%.This supports the statement that code is read many times more than written. So think about that when trying to be clever.	hu3	9.845685	-5.839442	comment	3.0	60.0	1585351478	1.0778626
22724171	This seems like way overcomplicated 	"This seems like way overcomplicated design - why do they need two CPUs? They claim ""real time control"", but this doesn't check out: their main CPU, esp8266, has a DMA that can emit stable protocol timings. And the higher level effects don't care about millisecond or ten of jitter.I am running two such simple strips right now, and it works very well."	theamk	9.579528	-5.2344155	comment	3.0	14.0	1585528935	-5.5857854
22729695	> Error: you cannot open another Chr	> Error: you cannot open another Chrome tab because all your cores are already used up by Slack and VSCodeYou would probably still want to preempt, because you're not going to rewrite all the widely used software to actually yield.Because that's the thing about cooperative multithreading, the participating parties need to cooperate.And if you look at the amount of threads that some software open it's just crazy. Looking on my machine the top5 are:1. 260 threads System (ok, that's basically the OS that could be changed).2. 145 threads Dropbox.exe (that's enough to lock all cores on any single consumer CPU).3. 87 threads SearchIndexer.exe  (also OS, could be rectified).4. 74 threads EpicGamesLauncher (looks like an i9 is no longer enough)5. 70 threads MemoryCompression (also OS)I know not al	Bigpet	9.833054	-5.5066814	comment	3.0	13.0	1585587263	7.976718
22735388	Celerity – High-level C++ for Accele	Celerity – High-level C++ for Accelerator Clusters	pjmlp	9.410429	-5.537574	story	3.0	32.0	1585636762	-7.430798
22739101	I don't have the patience to go fix 	"I don't have the patience to go fix Wikipedia, but microcode is a patching system (it's what ""processor microcode updates"" means). Most of the time, that's adjusting chicken bits and other flags. Instructions can be implemented in microcode, but they are really, really slow so it's typically done for security reasons or to emulate some new features that don't require fast performance.Micro-ops are part of the micro-architecture of the processor, and are in hardware. They are not patchable and are not software."	Jasper_	9.620973	-5.46786	comment	3.0	14.0	1585671484	7.7119994
22747807	Spectre, meltdown reduce Intel's per	"Spectre, meltdown reduce Intel's performance by quite a lot.
https://www.phoronix.com/scan.php?page=article&item=linux-41...And seeing how AMD is already a faster and better CPU in general (I mean the latest AMD Ryzen 3000 vs Intel 9000 series, at time of writing this), I'm not sure what about that needs citation?"	Ygg2	9.552929	-5.486561	comment	3.0	11.0	1585742643	7.8492985
22797089	VHDL support for open-source FPGA to	VHDL support for open-source FPGA toolchain YoSys	ur-whale	9.090717	-5.4048376	story	3.0	116.0	1586202435	8.469486
22809287	Around 12-13 years ago, I was workin	"Around 12-13 years ago, I was working (as a team of one on a highly technical upgrade, 32-64 bit upgrade, new compilers, OS changes, etc. Basically everything was changing). Naturally, I was falling behind debugging obscure issues largely due to 32->64 bit (this was C++ cross platform between windows and Linux).My director offered to toss some offshore resources my way to help. Bluntly told him: I think I have 3 months work ahead of me. Give me offshore resources, it'll more likely be a 9-12 months, because by the time ive described the problem in sufficient detail, I could have just done the work. Instead, id have to review a broken ""solution"" that doesnt work, probably makes things worse.Offshore is fine when you need grunt work, pounding out CRUD interfaces or already having a detailed "	hermitdev	9.895222	-5.4703894	comment	3.0	11.0	1586309708	-7.590512
17880093	"> ""Intel has gotten better at this,"""	"> ""Intel has gotten better at this,"" he said.Someone should let the BSD folks know and see what they think..."	rrix2	9.410099	-5.2953024	comment	3.0	19.0	1535658386	7.8397946
17881112	Such systems also most likely are no	Such systems also most likely are not vulnerable to Meltdown/Spectre.	proginthebox	9.620347	-5.5659027	comment	3.0	11.0	1535665856	7.7861805
17897467	I would approach it like this:1) fin	I would approach it like this:1) find some graphics problems which people say are not possible on any near-term hardware2) study the algorithms and identify low level calculations which, if you could do orders of magnitude more of them, would allow you to solve the problem.3) get a bunch of FPGAs and try to design a machine which can (very slowly) run that architecture4) once you’ve got it working, slowly replace the FPGAs with ASICs5) build a box with 16-64 of everything.I would avoid polygons, since the current architectures are all extremely good at filling polygons. SDFs and raytracing are where you may find the “not on current gen” problems.	erikpukinskis	9.06923	-5.2135534	comment	3.0	10.0	1535904906	8.163215
17903593	Zen is already light on vector units	Zen is already light on vector units, and microcodes 256-bit operations.It's certainly possible to build a more lightweight core, but most of that work is reducing the complexity of the out-of-order machinery.  The FPU+ALU is under a quarter of each Zen core. https://en.wikichip.org/w/images/c/cb/amd_zen_core_%28annota...	Dylan16807	9.284961	-5.2260265	comment	3.0	14.0	1535993708	7.890388
17903478	Not every workload is memory bandwid	"Not every workload is memory bandwidth bound like his ""make -j16"" compile. Some workloads need memory latency or fast inter-core (and inter-socket) operations (e.g. RDBMS OLTP), some need CPU throughput (e.g. HPC), some need best possible single thread CPU performance (e.g. some gaming).As he wrote, CPUs are most efficient (compute per Watt) at a specific frequency, and if his CPU mostly waits for RAM, this can be done at low power.It's probably possible to create x86-64 CPUs with narrower backends (fewer execution units) with microcode-emulated 128 and 256 bit registers/operations (and maybe even emulated FPU) and get a cheaper and faster build server, if it was economical to fab such narrow-use-case chips (those would be good for redis/memcached too I imagine)."	wolf550e	9.557183	-5.261303	comment	3.0	20.0	1535992497	7.849094
17911141	Can this run a RISC-V core?It would 	Can this run a RISC-V core?It would be very nice to bring the cost of experimentation in CPU cores down to something easily accessible to even students. In the same way that RPI brought computing and hardware interfacing down to basically anyone who can afford a cup of coffee.	spitfire	9.387964	-5.586726	comment	3.0	10.0	1536083341	-10.563375
17911189	Fortunately microcode updates are no	Fortunately microcode updates are not persistent and need to be applied on every boot.	Boulth	9.57517	-5.370126	comment	3.0	16.0	1536083577	7.7574315
17920234	Is it possible to run a Raspberry Pi	Is it possible to run a Raspberry Pi in a VM on x86?  It would be slow, since it's a different ISA, but probably fast enough.  Has anyone tried this?	supahfly_remix	9.88977	-5.278541	comment	3.0	11.0	1536169117	-8.064437
17937381	How many server models have HP and D	How many server models have HP and Dell switched to using Epyc?	LinuxBender	9.347452	-5.213862	comment	3.0	29.0	1536352055	7.854899
17937836	Are there specific people that are b	Are there specific people that are back at AMD that had not been there during the last decade?	xattt	9.231768	-5.186621	comment	3.0	12.0	1536355909	7.852801
17938319	Semi accurate most definitely has a 	Semi accurate most definitely has a big bias against Intel, but they are pretty open with it. They have a ton of insider information that nobody else does, there is a reason they have an insanely expensive paywall, and people gladly pay it.	throwaway2048	9.363138	-5.1914124	comment	3.0	16.0	1536361763	7.783692
17956035	6502 was an amazing assembly languag	6502 was an amazing assembly language. I wrote a VT-100 terminal emulator from scratch in a week or so way back then. Thankfully I had an Apple III with an assembler to build it in. The syntax was so simple to learn, but you could build interesting and sophisticated code by taking advantage of the quirks and tricks in the design. Of course I remember none of it any more. I am still in awe of Woz building the Apple I ROM without any tools at all.	coldcode	9.570141	-5.4068866	comment	3.0	12.0	1536622589	-7.4253726
17966066	You can prove correctness of softwar	"You can prove correctness of software, firmware and hardware and still have it all come crashing down the moment a bit flips.There is no solution to such things as ""bitflip in memory"" because once that happens, all bets are off. Instructions could be entirely wrong, page tables could have been corrupted, pointers in kernel memory pointing anywhere but where they belong, fire and brimstone raining from the sky, the dead walking among the living and the local supermarket running out of chocolate.You can however reduce the risk that such a bitflip results in a full system-, security- or application failure via various means (the Apollo 11 computer for example was capable of simply restarting a program at various checkpoints if they crashed and had multiple software and hardware safeguards aga"	zaarn	9.808252	-5.596406	comment	3.0	16.0	1536734429	8.205066
17989050	Well, just for one:Spectre affects a	Well, just for one:Spectre affects almost all CPUs. It affects ARM CPUs.But Meltdown only affects x86 CPUs. [1][1] https://en.wikipedia.org/wiki/Meltdown_(security_vulnerabili...Maybe Intel used such an old core design in their baseband that it's not affected? Nah, that'd just be too good to be true.	sounds	9.552253	-5.4940577	comment	3.0	11.0	1536945677	7.8390865
17989067	What is the relationship between the	What is the relationship between the instruction set and the power efficiency?	umanwizard	9.570992	-5.298499	comment	3.0	23.0	1536945823	0.6070564
17989241	There isn't anything to really indic	There isn't anything to really indicate that this processor has many more instructions than a 8086, befitting its role as an embedded device.  I'm not aware of any difference in x86 and ARM semantics in embedded that might cause a problem.Now, the fact that an x86 instruction stream isn't self-synchronizing can represent a danger in theory.  That is, you can craft a sequence of x86 instruction such that if you start executing form 0x0000 they're safe and friendly but if you start executing from 0x0001 you'll see a different, equally valid, stream of instructions that might do something malicious.  But that doesn't seem like a credible attack vector in this case given the embedded nature of the code.	Symmetry	9.7193775	-5.5654006	comment	3.0	20.0	1536947125	-7.687906
17990747	Yep, that pretty's pretty much it. B	Yep, that pretty's pretty much it. Back in 1985 when the 386 and ARM 1 came out, neither had any cache at all.But I think the paper is a bit narrow in scope, relative to the discussion here. For any given application, you want to find a cheap part that can run that application. If you can run the application on an 8051 with a few K of ROM, then you can save a lot of money and reduce power consumption by switching to the 8051. If you need a powerful DSP to do some SDR for your cell phone radio, you're going to pick a different instruction set and pick a part that draws a lot more power.I think the paper is taking as fixed the part functionality and considering how the encoding can be changed, but for a core running code that is not user accessible, the engineers are free to choose a core wi	klodolph	9.595672	-5.2716923	comment	3.0	14.0	1536957601	-7.7111406
18001028	Can’t you blend them?  In other word	Can’t you blend them?  In other words I’d love to work in an organization that can politely call bullshit early and often. It is possible to fundamentally disagree without making it personal.Really good to see him acknowledge this and tackle it head on.  I hope he gains a better perspective. Thank goodness for Linus and Linux!	dstroot	9.314685	-5.8661284	comment	3.0	10.0	1537131044	4.2620144
18001755	"I feel like anyone who says ""Linus w"	"I feel like anyone who says ""Linus was harsh but fair"" never really read much of what Linus said.Many of his attacks, especially long ago, were quite vitriolic and very much not technical. Oftentimes they weren't rants, just flat out insults, short and mean (I remember, in particular, posts directed towards PaX). They weren't productive, there wasn't a brash technical take buried in them - they were just insults.Many people seem to just remember snippets of his more popular, more recent rants, which sometimes have some technical take in there at the least, but also, in my opinion, cross well over the line into personal attacks.Glad he's owning up to the fact that he has some serious social baggage to deal with. I don't foresee the linux kernel community changing much in the near term thoug"	staticassertion	9.297966	-5.882526	comment	3.0	11.0	1537138874	4.2630305
18001954	> Linus Torvalds is uniquely qualifi	> Linus Torvalds is uniquely qualifiedGotta stop you right there. Hero worship should not be considered a good thing in our industry.The kernel subsystem maintainers, who actually review the code prior to getting it merged, are the ones with the real power and the necessary knowledge, and I'd argue they are more qualified to oversee the project's future than Torvalds.	moosingin3space	9.385597	-5.843944	comment	3.0	16.0	1537141223	-8.174966
18002175	Are we seriously putting Linus in th	Are we seriously putting Linus in the same category as Newton	jXCw1N0jtH3	9.283732	-5.888734	comment	3.0	17.0	1537143907	4.200323
18002568	> people who are able to accomplish 	> people who are able to accomplish their goals by rallying others to their cause.Like Linus.	hyperpallium	9.27836	-5.8934813	comment	3.0	98.0	1537148961	4.249366
18005139	Scaling AFL to a 256 thread machine	Scaling AFL to a 256 thread machine	DyslexicAtheist	9.765581	-5.521712	story	3.0	25.0	1537186780	8.289053
18012079	I am tangentially aware of the blow 	"I am tangentially aware of the blow ups the Linus delivered, having read stuff here, but am curious, and an honest question, where the blowups based on what the code of conduct covers?"" age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.""My impression was he would call people idiots, in as many ways as possible, and such, but was not aware that these code of conduct identified groups were used."	mbfg	9.27164	-5.8717613	comment	3.0	10.0	1537238898	4.2616644
18013730	No, Itanium failed because Intel mad	No, Itanium failed because Intel made the error to allow other companies to compete on the x86 space with their patents cross licensing deal.Competition from other architectures was always there.	pjmlp	9.518881	-5.4981885	comment	3.0	10.0	1537262726	-7.7569966
18018519	Agreed. Luckily, we as a community h	Agreed. Luckily, we as a community have tools like Sourcegraph which are based on battle-tested pragmatic systems from places like Google.Disclaimer: no affiliation, just love the team and product.	kornish	8.861658	-5.987671	comment	3.0	10.0	1537300030	8.896134
18944817	It doesn't really provide extra secu	It doesn't really provide extra security for processes managed by the Linux kernel, but it allows you to co locate Linux and some other code.  I could see a model where you have an untrusted Linux land running next to some unikernel like rtos-esque components that are protected from the Linux side.  The sel4 guys had a CTF where they ran hard realtime heleicopter software next to a Linux kernel on the same system, and gave you a root shell to the Linux side to start off with.That being said, last time I checked even sel4 wasn't really hardened against Spectre attacks.	monocasa	9.917191	-5.5451536	comment	3.0	12.0	1547863253	7.9243493
18952603	Is the baseband firmware open source	Is the baseband firmware open source?It would be exciting to have an open source phone based on the risc-v processor. Until the hardware is open source, it will never be truly secure.	wpdev_63	9.38692	-5.6064434	comment	3.0	11.0	1547984810	-10.602675
18978650	Does Circle-CI offers Mac runner for	Does Circle-CI offers Mac runner for public/open-source projects? This is the reason I haven't been able to migrate from Travis to Circle-CI for all my projects, I have an open-source Electron module that I need to test cross platform so Travis covers Linux and Mac and AppVeyor for Windows.	bithavoc	8.834848	-6.419207	comment	3.0	10.0	1548255650	-5.6724234
18980236	We switched from Travis CI to Circle	We switched from Travis CI to Circle CI because Circle CI was (a) significantly faster and (b) a little cheaper	imwm	8.87177	-6.4233975	comment	3.0	13.0	1548264025	-5.378224
18982739	Well, in the past it was one of the 	Well, in the past it was one of the main arguments in favor of open source. There is even a related article on the WP: https://en.wikipedia.org/wiki/Linus%27s_Law (it has nothing to do with Linus though)	dvfjsdhgfv	9.391353	-5.7917147	comment	3.0	10.0	1548276484	4.224097
18989940	> Your career is a direct result of 	> Your career is a direct result of your own hard work and passion.If your code isn't using your own libraries compiled by your own compiler hosted on your own OS running on your self-built machine using a CPU you designed, no, it isn't. Sure, your own hard work and passion goes a long way but you rely heavily on the works of others and the privilege of being able to use them.	zimpenfish	9.806612	-5.2236953	comment	3.0	10.0	1548346455	-7.194833
18992178	So as there's no branch prediction, 	So as there's no branch prediction, this is good defense against spectre type attacks?	benj111	9.682192	-5.67128	comment	3.0	10.0	1548358915	-7.1164575
18992359	Of course, no post like this is comp	Of course, no post like this is complete without OISC:https://en.wikipedia.org/wiki/One_instruction_set_computer(Then, there's my contribution: NISC -- the Null Instruction Set Computer! It's a revolutionary architecture, in that die sizes and TDP can be scaled down, seemingly arbitrarily, with no loss in functionality. In fact, NISC can transcend the solid state entirely, and be implemented directly on the quantum foam of the vacuum!Another benefit: NISC machines are entirely immune to all buffer overflow and use after free exploits! In fact, they are free of all exploits, whatsoever!)	stcredzero	9.557578	-5.652195	comment	3.0	15.0	1548360106	-10.393654
18995739	If that holds. Intel will sue AMD in	"If that holds. Intel will sue AMD into the ground. ""The 8086 API and instruction set, is an original, curated taxonomy of classes, methods, and interfaces, organized by authors"""	lucio	9.539018	-5.326283	comment	3.0	12.0	1548393247	7.807737
18997897	Your criticism seems a bit idiosyncr	Your criticism seems a bit idiosyncratic, to put it kindly. So it doesn't use the flavor of C++ you prefer? Sure, but there's a lot of room for argument about whether shared_ptr or template-instantiation bloat would be good choices for an IoT-level embedded system. Similarly, the fact that it doesn't use  cmake seems like more a matter of preference than of actual suitability. As for being supported by ARM, well hey, at least it's open source. It could theoretically be forked for RISC-V. Lacking any mention of alternatives, that criticism also seems rather hollow. Beggars can't be choosers, y'know.BTW, you maybe should have mentioned that you work on a competing project.	notacoward	9.482982	-5.6107626	comment	3.0	11.0	1548424967	-10.516437
19009855	First of all, kudos to WD. This make	First of all, kudos to WD. This makes me feel good about spending $1500 on their spinning drives just last week.But on a more practical note, what kind of board and toolchain does one need to get this going on an FPGA? Is there a readme somewhere that would walk one through the process?	m0zg	9.081245	-5.354355	comment	3.0	26.0	1548552955	8.346021
19010298	It's surprising to me that the RISC-	It's surprising to me that the RISC-V ISA specification is loose enough that a core could be considered RISC-V-compliant and yet also need a linker script to accommodate its peculiarities.	haberman	9.437131	-5.6888547	comment	3.0	12.0	1548562015	-10.5409355
19010109	Since RISC-V uses Chisel instead of 	Since RISC-V uses Chisel instead of Verilog, you will probably need this first: https://github.com/freechipsproject/chisel-bootcampFor actually learning RISC-V, you can check out these books: https://riscv.org/risc-v-books/The Patterson and Hennessy book is a great starting point and the RISC-V reader is great reference.	eBombzor	9.423909	-5.728011	comment	3.0	14.0	1548557690	-10.56029
19011568	“I - or Rumor, then - acted a little	“I - or Rumor, then - acted a little on impulse; jumped out of the bushes and snatched the hat off Ibelin. Stay silent for a moment, we looked at each other. Then I ran away with his hat, without thought for where I ran, says Lisette and smiles.”You can’t do that in the game.	kubakan	9.283404	-5.882994	comment	3.0	12.0	1548595136	4.172364
19025445	I assume they’re counting them as RI	I assume they’re counting them as RISC cores plus microcode that makes them compatible with older x86 CISC designs. Modern x86 is RISC under the covers by any meaningful definition-/and also shares pretty much all the problems.	ghaff	9.56901	-5.5798154	comment	3.0	17.0	1548760620	-10.470708
19063698	The original RISC/Unix players were 	The original RISC/Unix players were most of my career.  Pyramid MIPS/OSX, then Sparc/SunOS, AIX, PA-RISC/HPUX, Dec Ultrix followed by Alpha, etc.  I remember trying to tell my co-workers that Linux would wipe it all out, shortly after AMD rolled out Opteron.  Most of them chuckled.	tyingq	9.766796	-5.350253	comment	3.0	33.0	1549123759	-8.158476
19064301	"x86-64 is anything but ""boring"" and "	"x86-64 is anything but ""boring"" and ""safe"". :)Real mode, Mod R/M and SIB byte encoding weirdness, REX prefixes, 80-bit floats, parity flag, hard-wired registers for shifts/multiplies/divisions, builtin CRC32 over the wrong polynomial, Pascal calling convention support, binary-coded decimal, high halves of 16-bit registers, MMX overlap with x87 floating point, etc. etc."	pcwalton	9.790852	-5.602017	comment	3.0	27.0	1549128806	-7.598498
19065076	True, my point is that itanium itsel	True, my point is that itanium itself was a laughingstock, and clearly with no future, so must have been embarrassing to talk to your friends about what you do for work.Making spare parts for the B-52, or maintaining security fixes for Solaris (which has its fanatic fans) can be rewarding, no question.  But to work on the Itanium any time in the last decade must have been soul-sucking.	gumby	9.512575	-5.509862	comment	3.0	10.0	1549135733	-7.7514277
19065643	MIPS today isn't what it used to be.	"MIPS today isn't what it used to be. It mostly occupies the ""we're too cheap to use ARM"" segment of the market these days, which is an ignominious fate for what used to be a great architecture. But it's well known and it still has its wonderful instruction set, so maybe someone can make it shine again once it goes fully open."	classichasclass	9.504504	-5.5726085	comment	3.0	10.0	1549140770	-10.39191
19081007	Wouldn't it make more sense to add s	Wouldn't it make more sense to add support for this machine family to QEMU? 68k cpu emulation is already included in QEMU, all it needs is general support for the platform itself.	zozbot123	9.9355955	-5.461838	comment	3.0	10.0	1549317264	-8.320641
19082929	Alternating merging yes, but many pe	Alternating merging yes, but many people probably don't wait until the last possible opportunity to do so. Some merge as soon as they can and think late-mergers are trying to cut ahead.	aquabeagle	8.750098	-6.433684	comment	3.0	12.0	1549339111	9.206144
19084208	Can this be used practically to reco	Can this be used practically to recompile a binary from one platform (e.g. Intel) to another (e.g. ARM)? It would be interesting to compare the performance with an emulator like QEMU.	amelius	9.865552	-5.40447	comment	3.0	12.0	1549363836	-7.9557624
19119343	Now if the HiFive could be scaled uo	Now if the HiFive could be scaled uo to match the performance of a current x86 CPU, this might become a serious contender for a decent set of applications.	gmueckl	9.479661	-5.2923403	comment	3.0	18.0	1549665341	-10.53164
19119146	> super low cost hardware developmen	> super low cost hardware development.There are lots of things that cost money in hardware design, and ISA licensing is a very small part of them.Edit: I wonder if I should do a rather confrontational blog post telling people why Open hardware is never going to be the free lunch that open source software is..	pjc50	9.491641	-5.4540606	comment	3.0	13.0	1549663713	-7.7653704
19123180	We have today 32+ cores CPUs with mi	We have today 32+ cores CPUs with minimal or no branch prediction and speculation. They work spectacularly well on some specific workloads but are terrible for general purpose computation. They are called GPUs.Speculation and branch prediction is not going away. On the contrary is going to get more and more sophisticated.What needs to die is the belief that you can rely on just software (i.e. memory safety) for isolation between trusted and untrusted code[1].[1] Yes, meltdown bypasses hardware protection, but that's an intel specific fuck up, not inherent issue with speculation.	gpderetta	9.668363	-5.611715	comment	3.0	25.0	1549730423	7.8529716
19126554	I'm not sure I understand why people	I'm not sure I understand why people think that we should add the other emojis that were suggested. Emojis are in no way supposed to represent every single thing that you could possibly want to talk about; that's why many of them end up representing other things based on context (for example, the eggplant or peach emojis). The blood emoji is fine, but the soiled underwear is just…weird. That would be like asking for a used toilet paper emoji–it's super specific and not all that pleasant.	saagarjha	9.788414	-6.2692695	comment	3.0	24.0	1549778068	-13.958215
19126730	"In the first place it is sad that ""e"	"In the first place it is sad that ""emojis"", ""emoticons"", etc. are so broadly used. It only shows how writing skills are deteriorating. Mark Twain or Hemingway didn't need emojis to express sadness or humor."	piokoch	9.78502	-6.2666454	comment	3.0	14.0	1549783530	-13.953352
19125826	Learn Multi Platform 6502 Assembly P	Learn Multi Platform 6502 Assembly Programming for Monsters	ingve	9.70991	-5.6262836	story	3.0	91.0	1549761583	-7.433423
19126793	"Also:  > A new ""people holding hands"	"Also:  > A new ""people holding hands"" emoji will let users mix and match 
  > different skin tones and genders, with 171 possible combinations.[1]

This reminds me of the article ""Code Inflation"". [2][1] https://www.npr.org/2019/02/07/692260599/interracial-couples...[2] https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7057573"	plainOldText	9.799636	-6.2641354	comment	3.0	13.0	1549785125	10.662451
19132814	OK. I'll bite.  I only have experien	"OK. I'll bite.  I only have experience  with verilog, but it's basically uncomfortable to work with in the sense that there are absolutely no developer ergonomics.  We're well into the 21st century and you'd think that our HDLs would learn from everything that the software world has learned.1) the syntax is very finicky (slighttly more so than C, I'd say).  Most software languages (thanks to more experience with parsers and compilers) have moved on from things like requiring semicolons, verilog has not.2) writing tests is awful.  Testbenches are crazy confusing.  Much better would be some sort of unit testing system that does a better job of segregating of what constitutes ""testing code"" versus the ""language of the gates"".  You would have a hard time doing something like, say, property tes"	dnautics	9.103628	-5.4988647	comment	3.0	19.0	1549873040	8.552302
19136651	Since it usually comes up in discuss	Since it usually comes up in discussion about Ryzen, here's the deal with ECC RAM support:  http://www.hardwarecanucks.com/forum/hardware-canucks-review...Tldr: Works for motherboards that support it, but not officially supported/tested/etc.	tyingq	9.403962	-5.470089	comment	3.0	50.0	1549908735	8.192898
19136815	So an interesting thing happened to 	So an interesting thing happened to me last month. I had a gigabyte ecc pro 150 with a Xeon processor, and it died (hardware failure, it refused to POST after having it for two years).I run Debian Stable. When I swapped out the CPU (Ryzen T 2700X), Motherboard, and RAM, and I powered on Debian, it booted up normally, and it automatically configured itself to run the new CPU, motherboard, and RAM.	kop316	9.591874	-5.2994246	comment	3.0	17.0	1549909579	8.032208
19136986	ECC RAM by design is more expensive.	ECC RAM by design is more expensive. Usually every 8 bits need a 9th parity bits, so you need 9/8ths more RAM to support ECC. Plus you need to make the parity calculation for everytime you go to RAM.Whether it's needed or not...that's use case dependent.	kop316	9.478095	-5.5224314	comment	3.0	27.0	1549910347	8.244539
19138257	I hear good things about magit, does	I hear good things about magit, does anyone have any good learning resources for someone who is relatively new to emacs?	mattnewport	8.862026	-6.411673	comment	3.0	13.0	1549918630	-11.430518
19143693	"Most VPS hosters ""share"" CPU time be"	"Most VPS hosters ""share"" CPU time between users on a host server (Which mean CPU type/speed doesn't mean much).So it would be great if you could filter for that on serverhunter to paint a fair(er) picture, because a few hosters give dedicated cores by default.When we tried benchmarks on the Hetzner Cloud we found that some servers had as low as 10% max CPU on a crowded host server, which makes sense as to why they charge 8 times more for dedicated CPU cores."	tmikaeld	9.585376	-5.311918	comment	3.0	18.0	1549981850	7.913128
19160507	Grown men using emojis... Now that's	Grown men using emojis... Now that's something I will never understand.	pexaizix	9.790064	-6.2675343	comment	3.0	10.0	1550133740	-13.95782
19165333	Sadly everything that's come since x	Sadly everything that's come since x86 has done bootstrapping much more device-specifically and it always comes with signed bootloaders.  If you're lucky you can opt-out.  RISC-V will likely be designed with the goal of eliminating royalties, not making extensible/portable bootloaders.	wyldfire	9.444826	-5.6534595	comment	3.0	11.0	1550173865	-10.548447
19165688	New high performance microarchitectu	New high performance microarchitecture costs hundreds of millions to develop. You need to develop new  microarchitecture every five years or so to stay competitive.It's not hacking VHDL in your basement type thing where everyone can adds new stuff and it just works together trough common agreed api. All changes must run trough long chain of verification and testing from functional models to physical placement, testing and verification.	Nokinside	9.119484	-5.462793	comment	3.0	12.0	1550176260	8.60427
19171820	Has there been an in-the-wild exploi	Has there been an in-the-wild exploit found for many of these micro-arch side channel attacks?I still have reservations that Specter can be actually exploited, and certainly not by JavaScript running in a browser it seems (even without the timing fixes -- just too much noise in the system to get a real world exploit). All the proof of concepts I saw effectively needed a running start (and a much lower bar to clear). I'm still not sure if we are just making too much out of many of these attacks.Also, many of these exploits require running native code to really even be possible, and a JIT offers a large degress of protection. Most of the machines I use, if you are already able to run native code, the battle has already been lost.I think the security community can sometimes have Chicken Littl	jnordwick	9.75631	-5.5719376	comment	3.0	13.0	1550245801	7.6666265
19172775	How about CPUs without speculative e	How about CPUs without speculative execution and simultaneous multithreading (SMT / Hyper-Threading, which has similar issues)? We would, of course, need other optimizations to claw back the performance loss--an engineering problem I feel we can solve.I've wondered if the solution is more, simpler cores. We concentrate on smaller, faster cores, and the programming to utilize them better. Perhaps advances in memory architectures as well. Hardware isn't my specialty, so I'm just brainstorming here.Perhaps this is where ARM and even RISC-V based systems can step in.But I'm a software guy, so what do I know? I just know I'd feel more comfortable with systems based on simpler CPUs that just cannot be exploited by the recent side-channel attacks discovered, rather than trying playing whack-a-mol	rickmode	9.679298	-5.5620637	comment	3.0	17.0	1550251553	7.929321
19172729	So, if that's true, why is Chrome co	So, if that's true, why is Chrome considered to have solved Spectre? Browser content processes from different domains share some memory. Moreover, if process boundaries don't have any effect on the branch predictor on current hardware, then why is process separation relevant at all? Doesn't all this mean Spectre is still an issue?	pcwalton	9.736063	-5.603145	comment	3.0	10.0	1550251309	7.532474
19179388	Western Digital’s RISC-V “SweRV” Cor	Western Digital’s RISC-V “SweRV” Core Design Released for Free	osivertsson	9.376492	-5.6596146	story	3.0	43.0	1550335018	-10.545687
19182749	Formal Verification of Y86-64 Proces	Formal Verification of Y86-64 Processors	deepaksurti	9.829894	-5.6814694	story	3.0	49.0	1550379650	7.7834597
19200830	For those wondering what is a side-c	For those wondering what is a side-channel attack : here is a definition from Wikipedia :In computer security, a side-channel attack is any attack based on information gained from the implementation of a computer system, rather than weaknesses in the implemented algorithm itself (e.g. cryptanalysis and software bugs). Timing information, power consumption, electromagnetic leaks or even sound can provide an extra source of information, which can be exploited.https://en.wikipedia.org/wiki/Side-channel_attack	edelans	9.808442	-5.602224	comment	3.0	16.0	1550597473	-5.701225
19206867	Isn't the whole point of SIMD being 	Isn't the whole point of SIMD being as similar to original x86 instructions as possible? reusing as much the existing cpu as possible? Otherwise you would have something like the ps3?	hohohmm	9.933765	-6.0872602	comment	3.0	12.0	1550657325	8.1018915
19206895	> IA-32 instruction set has grown fr	> IA-32 instruction set has grown from 80 to around 1400 instructions since 1978, largely fueled by SIMD.Holy quack! I didn't even know there were 80 (feels too much already, I barely used a tiny portion when exercising in assembly), 1400 sounds really insane.	qwerty456127	9.877067	-5.81406	comment	3.0	17.0	1550657924	-7.564703
19206835	IIRC the Mill CPU handles this by pe	IIRC the Mill CPU handles this by performing a translation at install time.For Mill CPU variants with wide vector units the CPU could execute certain instructions in one go, while for variants with narrow units it might have to issue multiple instructions.Their idea is to handle this by basically doing ahead of time compilation of a generic program image, turning it into a specialized version for the installed CPU.Sounds neat, proof is in the pudding.	magicalhippo	9.725622	-5.651183	comment	3.0	12.0	1550656687	7.96387
19219144	Whelp, I might be looking at CircleC	Whelp, I might be looking at CircleCI vs TravisCI again.	urda	8.8652315	-6.417059	comment	3.0	13.0	1550773283	1.0969696
19219407	In what sane business is 50$ a month	In what sane business is 50$ a month over a free tier the deciding factor in choosing a CI system?	YawningAngel	9.17208	-6.334656	comment	3.0	11.0	1550774686	1.1338952
19227304	I don't think you are not really dis	I don't think you are not really disagreeing with Linus - he's not saying ARM is not viable - he is saying it will not win. With your current setup (cross-compiling), are your ARM executables more performant than x86? Or do they have any other advantage at all over x86? Without an advantage, ARM can't possibly win.Having a cheap, viable ARM-native development platform drastically increases the chances of ARM-only killer apps to exist, this would be an advantage over the currently dominant x86 (just as there were Windows-only and Linux-only killer apps that cemented their ascent). However, if everyone is cross-compiling due to the cost, it means ARM will always be a secondary platform (at most)- it can't win by being the Windows Phone of platforms.[edited for clarity]	sangnoir	9.666319	-5.2555084	comment	3.0	14.0	1550857545	-7.8241286
19228021	> I can pretty much guarantee that a	> I can pretty much guarantee that as long as everybody does cross-development, the platform won't be all that stable.Even if that's technically true, there's no reason there can't be ARM workstations.  There aren't many because they're still generally slower, but there's no fundamental reason (that I know of) why an ARM workstation can't work just as well as an x86 workstation in almost every case.	jlarocco	9.725303	-5.185224	comment	3.0	11.0	1550861844	-7.790424
19228345	Don't you see that his answer has no	Don't you see that his answer has nothing to do with a hacker mindset? It's an assertion that making your development and production environments as close as possible will save you from unexpected grief, coupled with an observation that this has driven server architectures historically. Especially with subtle problems like performance issues. I find it a very sensible conclusion.Of course it didn't hurt that x86 quickly became the price/performance leader for servers, but he makes a good case that this will continue for at least the near future.	mark-r	9.728516	-5.3365664	comment	3.0	35.0	1550863849	-8.173041
19229081	I write Java but I seriously doubt t	I write Java but I seriously doubt that ARM has comparable JVM, it’s probably slow compared to x86. Cross platform in theory, not so much in practice.	vbezhenar	9.769129	-5.4145455	comment	3.0	11.0	1550869372	-7.7380023
19236359	At the time that Apple went from PPC	At the time that Apple went from PPC to x86, x86 had a significant performance advantage such that emulation wasn’t a big deal. Currently, there is no such advantage. In addition, many professional Mac programs make use of SIMD instructions such as AVX. Trying to emulate these will further increase the performance penalty. In addition, x86 has relatively strong memory ordering compared to ARM. There may be code that get away with stuff on x86, that will cause subtle bugs on ARM. Again, it is likely professional programs that do this.	RcouF1uZ4gsC	9.698156	-5.2316732	comment	3.0	13.0	1550969032	-7.7317104
19236374	I think, for me, the biggest fear is	I think, for me, the biggest fear is using an ARM-based Mac to build cloud-based software that runs on Linux x86.Much of my development environment emulates production in Docker x86, but an ARM-based development environment would have to emulate x86, no?Alternatively, this could make for building apps in ARM cloud more viable...	jasonjei	9.594124	-6.156741	comment	3.0	20.0	1550969279	10.050051
19245953	This is true of the 8-bit Basics.How	This is true of the 8-bit Basics.However, later 80's 16-bit Basic (think Amiga, ST, QuickBasic for the PC, etc.) at least had functions, libraries, etc.Going back to 8-bit is probably too far...	icedchai	9.721668	-5.2341433	comment	3.0	13.0	1551106073	-7.06014
19263387	Hetzner lists VMs that are ultra che	Hetzner lists VMs that are ultra cheap but then has separate listing for more expensive VMs with dedicated cores. Alibaba does the same.With these shared core machines, I wonder what the performance reliability guarantees available and how it compares to the dedicated core machines.	jimmy_ruska	9.556931	-5.2912245	comment	3.0	14.0	1551277614	7.9193664
19267757	How did you manage to use emojis on 	How did you manage to use emojis on HN?	colejohnson66	9.804538	-6.2603526	comment	3.0	10.0	1551309113	13.032758
15775381	I sometimes wonder: what will happen	I sometimes wonder: what will happen to Linux when there is no Linus Torvalds as a lead architect anymore?I just have an outsider perspective, but it seems that he still has to intervene every now and then to maintain a coherent architecture. Could anyone else fill this role, ie. be willing, able and empowered?	fh973	9.392339	-5.840485	comment	3.0	11.0	1511606076	-8.256001
15801296	 This was what I exactly predicted o	 This was what I exactly predicted one year ago. Risk-V ISA is coming for all of them{x86,arm,mips}.And this is very smart move by WD to jump into Risk-V wagon.Update: Why do people downvote? I honestly don’t understand.	0xFFC	9.498733	-5.5281286	comment	3.0	21.0	1511901668	-7.742527
15801354	I think the level of industry enthus	I think the level of industry enthusiasm for RISC-V is so palpable, in part, because the messaging from day one has been unequivocally: RISC-V will be the standard ISA for every form factor, in every market.Can't wait to put a RISC-V SBC in my ThinkPad X220 chassis. :- )	microcolonel	9.389509	-5.6557364	comment	3.0	12.0	1511901889	-10.566808
15801554	whether this will help provide the k	whether this will help provide the kind of production volume needed to make consumer products (like laptops and desktops) more likely to be viable?It probably won't, despite a lot of wishful thinking to the contrary.Are general purpose chips likely to be one result of the development of RISC-V, or have I missed something fundamental?Out of the whole RISC-V ecosystem it looks like only SiFive is working on that, so it will take time.	wmf	9.375526	-5.642945	comment	3.0	12.0	1511902807	-10.576299
15811229	And day two: http://www.lowrisc.org/	And day two: http://www.lowrisc.org/blog/2017/11/seventh-risc-v-workshop-...	jabl	9.380476	-5.7103953	comment	3.0	33.0	1511992544	3.6138337
15815247	Seventh RISC-V Workshop: Day Two	Seventh RISC-V Workshop: Day Two	rbanffy	9.378294	-5.7019963	story	3.0	85.0	1512045468	3.54869
15820934	Can you please consider offering ECC	"Can you please consider offering ECC memory in your laptops? 
ECC is a very important technology for businesses. Errors in non-ECC memory, while somewhat rare, are not once-in-lifetime-of-universe, they are more like 1 bitflip per year kind of thing, which for some businesses can be considered worth talking about.There is a demand for this, and almost no one is doing this. 
The only other company that has done it so far is Lenovo, and if you know anything about privacy and hidden adware and history of spyware - you will not buy any Lenovo product.ECC memory would require a Xeon, but it would be possible to underclock it to bring it to a mobile heat emission profile."	Erlich_Bachman	9.512538	-5.453454	comment	3.0	12.0	1512087691	8.254336
15821822	I'm not too familiar with the inner 	I'm not too familiar with the inner workings of Intel ME. Have you verified that setting the HAP bit is effective with the ME code removed? If so, then that is obviously the way to go. However, if the code that interprets the HAP bit and shuts down the ME is removed (as well as everything else not necessary for the computer to run), which option is actually safer, HAP or code removal?	gnu8	9.548642	-5.2456803	comment	3.0	12.0	1512101232	7.740196
15843791	> So rather than bothering to begin,	> So rather than bothering to begin, you wrote an email.This is where Theo appears to me to be quite different to eg Linus. He plays the man, not the ball, with personal attacks.	JetSetWilly	9.916253	-5.8713346	comment	3.0	15.0	1512395822	4.212101
15843939	At this point i386 is legacy for mos	At this point i386 is legacy for most of the world. OpenBSD is an ultra-conservative, orthodox project, therefore they will probably support i386 for years into the future - I mean, they supported VAX until 2016.That is a choice they are entitled to make, the trade-off being it would appear to make most modern technologies a poor fit for adoption in OpenBSD - that's the price they have to pay. It is a problem of their own making.	JetSetWilly	9.935084	-5.6235085	comment	3.0	16.0	1512397010	10.700972
15851580	Is Epyc really going to make any big	Is Epyc really going to make any big impact on the global server market? Call me old-fashioned, but I just can't imagine enterprises moving to Epyc any time soon. Intel has built a really powerful brand with Xeon over the years.	stingraycharles	9.328008	-5.2364054	comment	3.0	10.0	1512480934	7.8794804
15855369	Yeah, AMD64 applications don't yet w	Yeah, AMD64 applications don't yet work on this, only Intel ones. I think the stuff for a standard AMD64 machine isn't quite yet out of patent.	microcolonel	9.417141	-5.255507	comment	3.0	16.0	1512504944	7.818771
15855645	As far as I understand, they don't e	As far as I understand, they don't emulate the x86 instruction set, but instead cross-compile it to ARM native instructions. That means that whatever implementation details are behind the patented x86 instructions are irrelevant, since there is no emulation of those instructions, they are just replaced by equivalent ARM instructions. Intel will probably still sue, but I expect them to settle out of court.http://www.techradar.com/news/a-closer-look-at-windows-10-s-...	Joeri	9.679768	-5.206244	comment	3.0	10.0	1512506483	-7.7958074
15860118	Intel chips are more RISC-like on th	Intel chips are more RISC-like on the “inside” after the instructions are decoded, and in that sense RISC is successful. ARM is RISC and very successful. But most RISC and CISC vendors alike are failures by comparison to Intel and ARM, and the IBM Power processors are just not that performant per watt. You don’t even have to wait 2 years, they’re already not as good.Part of this may be due to Intel’s lead in manufacturing technology, and have nothing to do with architecture.(Historically, RISC was much more competitive. Talking about current state of affairs.)	klodolph	9.437795	-5.571102	comment	3.0	14.0	1512557470	-10.531928
15869455	Eventually we'll face the fact cores	Eventually we'll face the fact cores won't get any faster and that even phones will have a dozen of them.Porting our code to run well on such machines is a bet people should start making.	rbanffy	9.54648	-5.226634	comment	3.0	13.0	1512649676	7.9326496
15869471	The difference here is that the indi	The difference here is that the individual cores on this are very fast.  Unfortunately I cannot publish benchmarks because of NDAs, so you'll have to believe me on this until the hardware is more widely available.https://rwmj.wordpress.com/2017/11/20/make-j46-kernel-builds...	rwmj	9.601606	-5.328784	comment	3.0	19.0	1512649938	8.025017
15872296	> Roughly 1000x slower?Not really. A	> Roughly 1000x slower?Not really. A modern Coffee Lake i7 has several distinct advantages over GPUs. (AMD Ryzen also has similar advantages, but I'm gonna focus on Coffee Lake)1. AVX2 (256-bit SIMD), for 32-bit ints / floats that's 8 operations per cycle. AVX512 exists (16 operations per cycle) but it its only on Server architectures. Also, AVX512 has... issues... with the superscaling point#2 below. So I'm assuming AVX2 / 256-bit SIMD.2. Superscalar execution: Every Skylake i7 (and Coffee Lake by extension) has THREE AVX ports (Port0, Port1, and Port5). We're now up to 24-operations per cycle in fully optimized code... although Skylake AVX2 can only do 16 Fused-multiply-adds at a time per core.3. Intel machines run at 4GHz or so, maybe 3GHz for some of the really high core-count models. 	dragontamer	9.363922	-5.2280197	comment	3.0	12.0	1512669437	7.986459
15881900	MRAM-Like Device Could Make Logic Ru	MRAM-Like Device Could Make Logic Run Backwards	rbanffy	9.7105055	-5.5333853	story	3.0	46.0	1512766010	-13.880728
15890026	Dram and nand manufacturers have bee	Dram and nand manufacturers have been under producing. The logic being that last time there was an undersupply everyone upped production and flooded the market. They see this as a massive negative as it dropped prices and sunk everyone into losses.Dram and nand fabbing does not use the same process as cpus. Thus it has its own seperate supply and those machines can only be used to make that supply. Thus there is no simple mechanism for the market to self regulate. Unless a maker is willing to idle multi million dollar machines supply is fixed. Which is just another way of saying that a significant portion of the cost in dram and nand manufacturing are fixed costs and thus even if you lose money overall because you make money on the marginal unit you are forced to keep making more units eve	Danieru	9.691213	-5.2211246	comment	3.0	19.0	1512882194	7.95164
15891216	Boom v2: Open-source out-of-order RI	Boom v2: Open-source out-of-order RISC-V core [video]	nickik	9.387042	-5.665683	story	3.0	75.0	1512910896	6.6286144
15889701	How would they do CI/CD if it's all 	"How would they do CI/CD if it's all in one big repo?I suppose you could do it if you had a very strict rule where absolutely everything that could affect a ""unit"" was inside its own directory (but never and nothing higher up than that ""project root"").So you could check which sub-directory is affected within a commit and so on."	borplk	8.926382	-6.35985	comment	3.0	24.0	1512876618	6.169849
15892781	"The ""official"" response is that ever"	"The ""official"" response is that everything will be fine because the simpler instructions will be fused together automatically by high-performance CPUs.  (The technique is called macro-op fusion).  In fact there was a talk last year by Chris Celio (same person as in this video) on the subject:https://riscv.org/wp-content/uploads/2016/07/Tue1130celio-fu...Also note that RISC-V has a standardized compressed instruction extension which is expected to be present on just about any high-performance 64 bit chip, and that makes the case for macro-op fusion more persuasive, since n x 16 bit instructions might be fused and still take the same space as a specialized CISC instruction.I guess we won't really know until the hardware exists though."	rwmj	9.6044235	-5.8070154	comment	3.0	13.0	1512931354	-10.457905
15909455	Intel 64 and IA32 Architectures Perf	Intel 64 and IA32 Architectures Performance Monitoring Events [pdf]	ingve	9.656755	-5.4888387	story	3.0	48.0	1513112676	7.8512278
15917938	One thing to note is that the benchm	One thing to note is that the benchmark is running on a Skylake Platinum chip which has two AVX512 FMAs.You need a Gold 6000 series and above to see any benefit from AVX512. In most other cases the CPU throttles down some insane amount and there’s no to little benefit.	foobarbazetc	9.428768	-5.414245	comment	3.0	10.0	1513201311	7.9306016
15933355	Looking over [the contributors list]	"Looking over [the contributors list][1], looks like the plugin was written entirely by Mozilla employees. So, no ""Mr Robot marketing department"", as some commenters here have been speculating.[1]: https://github.com/gregglind/addon-wr/graphs/contributors"	Ajedi32	8.827236	-5.9552517	comment	3.0	16.0	1513358702	3.4967577
15948993	Not to diminish this feat, but I won	Not to diminish this feat, but I wonder how the Phoronix benchmarks compare between an ARM cluster and a single x86 chip. Consider the OpenSSL benchmark.A Sopine A64 compute module costs $29 and performs 15.05 OpenSSL signs / second [0].An AMD Ryzen 1700 costs ~$300 and performs 986.73 OpenSSL signs / second [1].So, if you spent $300 on 10 Pine64's, you would achieve approximately 150 signs / second, but for the same cost you could just buy the AMD chip and achieve approximately 6.5x better performance for the dollar.[0] https://www.phoronix.com/scan.php?page=article&item=pine-64-...[1] https://www.phoronix.com/scan.php?page=article&item=amd-ryze...	trendia	9.535401	-5.3746004	comment	3.0	13.0	1513564523	-8.724496
15952507	Magit in emacs. Probably one of the 	Magit in emacs. Probably one of the killer applications for emacs.	aoeuhtns	8.869578	-6.4167376	comment	3.0	14.0	1513612831	-11.412725
15988707	It will be a while before AVX-512 be	It will be a while before AVX-512 becomes practical however. AMD doesn't support it (so any RyZen or Threadripper fans will miss out), and even Intel 8th Gen Coffee-lake doesn't support it.Only Intel Extreme i9 and Xeon Silver / Gold / Platinum seems to support it. So the market for this instruction set is quite limited.	dragontamer	9.442271	-5.5208116	comment	3.0	20.0	1513960664	8.049804
16008014	Good God, copy-pasting emoji in prod	Good God, copy-pasting emoji in production code is now a thing. Damn you, millennials, damn you to code maintenance Hell!	cornholio	9.858672	-6.2572966	comment	3.0	13.0	1514284126	-13.963141
16016847	I would presume that in large corpor	I would presume that in large corporations where AMT isn't actively used for configuration management, corporate IT will almost always have disabled AMT in the BIOS. Am I wrong about this?	derefr	9.402714	-5.2456775	comment	3.0	10.0	1514399867	7.7978296
16017499	>Seeing about as many critical vulns	">Seeing about as many critical vulns in the AMT as in, say, the entire Linux kernel... yeah, I'd call that ""awful code quality"".But that is not the case. Linux has had 400+ security bugs this year (as you point out, in part due to its greater attack surface) versus the 2 from AMT. I'm trying to reconcile this idea that ""ME = BAD"" in a practical way by comparing it to software that's in mass use and already being exploited. The tech press over time has needlessly over-hyped such security issues making it harder to put things in perspective. So far, I'm not seeing anything special about ME that would also not apply to many many other products.https://www.cvedetails.com/vulnerability-list/vendor_id-238/...https://www.cvedetails.com/vulnerabili"	ksk	9.415864	-5.263339	comment	3.0	19.0	1514404326	7.866033
16017778	Why aren't companies pressuring Inte	Why aren't companies pressuring Intel to remove or disable the ME? It seems like a huge security risk for entire organizations. It's especially difficult to fix when running Linux, and many organizations/servers use Linux.	JoshMnem	9.500964	-5.236261	comment	3.0	15.0	1514406681	7.794358
16024864	Once these are working well will fac	Once these are working well will factory workers be able to attach a third and fourth arm for extra productivity?	bcaulfield	9.55497	-5.200283	comment	3.0	14.0	1514495047	-7.719621
16027329	Given that the microscope inspection	Given that the microscope inspection saw the individual bits in the microcode tables, I wonder how possible it would be to visually extract crypto keys baked into the processor for newer models.  I doubt they'd be in a nice orderly addressed ROM area like this, but they still have to be hardcoded somewhere.	white-flame	9.572235	-5.227722	comment	3.0	11.0	1514518940	-5.638227
16034089	Disabling Intel ME on Boot Guard Com	Disabling Intel ME on Boot Guard Computers	gnustomp	9.515783	-5.219413	story	3.0	52.0	1514614064	7.7837543
16047423	I'm confused about the TLB impact. T	"I'm confused about the TLB impact. The pythonsweetness link claims these patches now require TLB flushes when crossing the kernel/user boundary, but the description of KAISER @ lwn[1] suggests that these flushes are unnecessary with ""more recent"" processors supporting PCIDs. How recent is ""more recent"", and is the PCID support likely to be ported back to earlier kernels along with KPTI?TLB flushes for syscalls would be absolutely brutal for many performance-critical applications.[1] https://lwn.net/Articles/738975/"	twoodfin	9.774478	-5.456555	comment	3.0	16.0	1514833136	7.9140234
16048723	I guess Intel decided to speculate d	I guess Intel decided to speculate data access regardless of privilege level of the target address, with the theory that what has been successfully speculated can't be accessed anyway before the permission are really checked, and somebody found a bug (or given all Intel processors are taggued as unsecure, maybe a quasi-architectural hole) that let read the speculated data or a significant subset or trace of it.My wild guess is that you can read a good portion (if not all) of the memory (or a significant subset or trace of it) of the whole computer from unprivileged userspace programs.	wilun	9.628036	-5.4304686	comment	3.0	11.0	1514850289	3.642123
16054883	I have to wonder:Can intel release a	"I have to wonder:Can intel release a drop in CPU that will avoid or mitigate this issue?The infrastructure investment in intel cores is huge, if a drop in replacement lets me minimize downtime, re-gain performance and is ""cost effective"" compared to a cost prohibitive replacement does this result in intel having a sales INCREASE where it replaces bad silicon?I don't know enough about this issue to speak to the issue either way, but I would love to hear if this fix is possible/viable."	zer00eyz	9.39204	-5.1856875	comment	3.0	18.0	1514922384	7.7233076
16054785	No. That's exactly what I'm saying. 	No. That's exactly what I'm saying. Most people don't care. Enterprise users do care because ME is useful for them. It's a feature, not a nefarious backdoor that the NSA made Intel include under the cover of darkness. They'll see this as a small problem that should be fixed and will ask Intel to do so. Intel will fix it, most everyone will move on. I don't think ME will take down Intel stock, and neither will this page isolation bug.Intel's value is 99% engineering + manufacturing ability + customer relations. It would be a poor CEO indeed who'd direct their IT to start buying AMD because of this alone.	IgorPartola	9.2621565	-5.188109	comment	3.0	29.0	1514921925	7.835845
16059092	Don't worry. I don't think that ther	Don't worry. I don't think that there will be two separate kernels for Intel and AMD. I think performance drop will be on both CPUs no matter has it the bug or not.	vasili111	9.361805	-5.2268524	comment	3.0	11.0	1514962459	7.874532
16059440	Out of curiosity, if you notice a CP	Out of curiosity, if you notice a CPU bug in a computer under warranty, is there anything the vendor is usually obligated do, or are they under no obligation to do anything about a CPU bug? Is that considered a defect they have to handle?(Edit: I'm assuming the USA, and I'm assuming bugs that were not known to the vendor at the time of the sale.)	dataflow	9.495048	-5.1893306	comment	3.0	32.0	1514968730	7.8044715
16059685	Thanks for posting this!It seems sel	Thanks for posting this!It seems self-contradictory to me. How can Intel warrant that> the Product will substantially conform to Intel’s publicly available specificationswhile simultaneously disclaiming warranty for> design defects or errors in the Product (Errata)?If an instruction does something different than what their specs say on occasion, do they take that to mean it's substantially conforming to their specs?	mehrdadn	9.424309	-5.233996	comment	3.0	13.0	1514972394	7.817042
16061647	> I know that bugs happenThis isn’t 	> I know that bugs happenThis isn’t an excuse for Intel consistently having terrible verification practices and shipping horrendous hardware bugs. From 2015: https://danluu.com/cpu-bugs/ There have been more since then.I’ve talked to multiple people who work in intel’s testing division and think “verification” means “unit tests”. The complexity of their CPUs has far surpassed what they know how to manage.	wyager	9.560791	-5.364157	comment	3.0	33.0	1514992807	7.7996845
16061723	I don't know much about CPUs, so wha	I don't know much about CPUs, so what prevents a fix via microcode update?	tapoxi	9.579433	-5.3678827	comment	3.0	11.0	1514993256	7.7538266
16061845	Superficially, it seems like the per	Superficially, it seems like the performance hit mostly scales with IOPS or transactions per second, which might have some pretty serious implications for performance/dollar in the kinds of intensive back-end applications where Intel currently dominates and AMD is trying to make inroads with EPYC.	0xcde4c3db	9.380028	-5.242658	comment	3.0	48.0	1514993993	7.9467964
16064554	Intel response https://newsroom.inte	Intel response https://newsroom.intel.com/news/intel-responds-to-security-r...	runesoerensen	9.407787	-5.1995583	comment	3.0	10.0	1515010019	7.734028
16065056	Not defending Intel here, but devils	Not defending Intel here, but devils advocate...You will find many clients asking how to disable, for example, the Linux patch. Linux is releasing with a flag to disable it, so there is some merit. Why would you want that? There are a lot of times you trust everything running on your box and don't need to take the perf hit.Intel (and possibly other archs/families) found a perf win that ends up having security implications. A perf nonetheless. If you're willing to bet on your userspace not reading kernel pages, does Intel have a feature for you!	thezilch	9.526415	-5.248174	comment	3.0	11.0	1515013051	7.7414927
16065062	We know that AMD is not affected:htt	We know that AMD is not affected:https://lkml.org/lkml/2017/12/27/2	betterunix2	9.233595	-5.188755	comment	3.0	19.0	1515013076	7.9316225
16065400	Yeah, I had to read the “bug” or “fl	Yeah, I had to read the “bug” or “flaw” part twice to be sure they're not saying it isn't a bug or flaw, they're only saying it isn't unique to Intel.And then as you say, they immediately mention AMD to imply that everyone has the issue, but they also avoid actually saying that.Your excellent analysis of what they're really saying reminds me of user thaumaturgy's analysis of Adancing Our Amazing Bet[1].[1] https://news.ycombinator.com/item?id=12793033	Nition	9.355149	-5.235499	comment	3.0	14.0	1515015195	7.850876
16064947	“Workload dependent” clearly implies	“Workload dependent” clearly implies (despite the spin they are trying to put on it) that some users will be worse off than others. What isn’t my at all clear (to me) is what they mean by ”will be mitigated over time”. Are they implying that when we buy new professors (from them) there’ll be a hardware fix that won’t require the performance-sapping patch?Quoting ARM and AMD is really a bit pathetic too, IMHO, especially if it turns out that AMD chips are immune to the flaw.	qubex	9.343512	-5.199596	comment	3.0	21.0	1515012442	7.829772
16066167	Is this saying that AMD is affected?	Is this saying that AMD is affected? Is this the same as the Intel bug reported earlier?	ionforce	9.296881	-5.196137	comment	3.0	14.0	1515019898	7.850088
16066708	Speculative execution as a concept s	Speculative execution as a concept should not be flawed. My take is that the results of illegal speculation should never be leaked in a visable way.	mtanski	9.6839485	-5.6468334	comment	3.0	23.0	1515024082	-6.73279
16066963	This is so incredibly bad. Spectre i	This is so incredibly bad. Spectre is basically unpatchable. We can do better than we are now with patches but it's all just turd polishing, essentially. A proper fix will require new CPU hardware. And as a kicker? Leaks are basically undetectable.	InclinedPlane	9.6310005	-5.565211	comment	3.0	16.0	1515026830	7.780408
16067157	So is there no way to disable the pe	So is there no way to disable the performance crippling fix? If you ran an air gapped or highly controlled environment wouldn’t you want th option of disabling this to keep performance? How many Giga Terra or Exo FLops will be lost to this fix in super computers? Or is the way to disable it just not merge this patch into your custom kernel code?	dexwiz	9.845299	-5.4008236	comment	3.0	18.0	1515028721	7.9096866
16067424	I can't really see how it would be f	I can't really see how it would be fixable even with new hardware.Speculative execution is fundamental to getting decent performance out of a CPU.  Without it you should probably divide your performance expectations by 5 at least.Rolling back all state rather than just user visible state in the CPU is neigh on impossible.  When you evict something from the cache, you delete it.  Undeleting is hard.   There are also a lot of other non-user-visible bits of state in a CPU.	londons_explore	9.672966	-5.6257577	comment	3.0	11.0	1515031768	-6.8362613
16067710	Yes, that's what I said. Transmeta i	"Yes, that's what I said. Transmeta is out of business; all their clever ideas have nothing to show. It is entirely possible that a ""competent CPU engineer"" needs to make certain things absolutely work with high performance even if the cost is leaky side channels, and someone who worked at a failed CPU company does not know that because they never got to see their product succeed in the market."	geofft	9.414752	-5.306942	comment	3.0	10.0	1515035269	-7.7156153
16068262	Almost as disgusting as Intel's resp	"Almost as disgusting as Intel's response.> ""It is important to note that this method is dependent on malware running locally which means it's imperative for users to practice good security hygiene by keeping their software up-to-date and avoid suspicious links or downloads.""If you're running something on your ARM CPU, it's running locally!, they're using careful language to make the problem seem to impact them less than it does and lay the blame on the user.This affects a huge number of processors out there, not just in phones and tablets but in embedded, industrial and network devices - many of which will never seem workarounds from their OS / software for the hardware fault.Also OH: ""The bug doesn’t happen if you don’t use our product"""	mrmondo	9.502211	-5.243677	comment	3.0	35.0	1515043554	7.730081
16068326	None of the Cortex M cores seem to b	None of the Cortex M cores seem to be affected, according to ARM. These are the ones mostly used in embedded applications.	ENOTTY	9.563129	-5.1991134	comment	3.0	17.0	1515044722	7.8656054
16068714	This is a general explanation of sid	This is a general explanation of side channel attacks, as I understand.	fooker	9.839009	-5.572722	comment	3.0	10.0	1515053163	-5.6402287
16068957	Not that we currently know about. RI	Not that we currently know about. RISC instead of CISC is better here as it shortens the pipeline, but even RISC processors do speculative predictions due to the cost of waiting till a branch is fully decided.	richardwhiuk	9.428097	-5.6917624	comment	3.0	13.0	1515057252	-10.564243
16069905	I find it highly ironic that this li	I find it highly ironic that this link has appeared on Hacker News literally hours after Meltdown and Spectre vulnerabilities have been officially announced and described.	phoe-krk	9.633739	-5.552523	comment	3.0	23.0	1515069851	7.763546
16070518	>early processorsEarly processors ha	>early processorsEarly processors had speculative execution? I thought this had been added to Intel/AMD/ARM about 20 years ago?	FLUX-YOU	9.657217	-5.588388	comment	3.0	11.0	1515076249	7.806973
16070745	I have a hunch that the era of side-	I have a hunch that the era of side-channel attacks is only now dawning, and that we should expect many more painful exploits and cumbersome mitigations in the coming years.What do people more knowledgeable in the field think about this?	vfaronov	9.812542	-5.5958176	comment	3.0	21.0	1515078166	-5.6473784
16071420	A new thing that's going to become a	A new thing that's going to become a standard part of systems engineering: deciding whether any given system needs to run with or without these kinds of protections. Do you want the speed of speculative execution or do you want Meltdown/Spectre protection? In some cases lack of protection is fine. But figuring out the answer for any given system is often going to take expert-level security knowledge. Security is all about multiple layers of protection, and even a non-public facing machine might benefit from these layers depending on the context.	jzl	9.679193	-5.5714593	comment	3.0	12.0	1515082213	7.7365575
16071469	I think the main takeaway should be 	"I think the main takeaway should be ""speculative execution creates exploitable side-channels, and you should assume your hardware is exploitable until proven otherwise."" AMD and ARM are probably still exploitable with unknown exploits, possibly even at Meltdown-levels of exploitability, but people haven't taken the time to reverse-engineer the microarchitecture enough to find the exploits.If I were developing processors, I'd be having emergency meetings on trying to craft exploits to figure out where our processors' weaknesses are. While being happy that Intel is getting all the bad PR for this and I'm not."	jcranmer	9.634837	-5.573946	comment	3.0	11.0	1515082552	7.8266826
16071095	> leveraging fundamental assumptions	> leveraging fundamental assumptions about high-performance CPU design.I believe the generalized fix is to restore the entire CPU state after a mispredict. You’d either need to add an extra copy of the entire processor state (tens of megabits) for every simultaneous predict you support ($$$) or keep track of how to revert all changes and revert them one at a time ($, slow).	wyager	9.600267	-5.4009256	comment	3.0	11.0	1515080325	7.880042
16071645	It's not that it makes the practice 	It's not that it makes the practice of breaking into computers that much more interesting so much as it makes the underlying field much more interesting to work in. The engineering problems just got a lot more complex. We're all taking an attack vector seriously --- microarchitectural side channels --- that we weren't taking as seriously before, except as an abstract threat to crypto and a way of defeating a mitigation --- KASLR --- that nobody believed in anyways.What's glorious is that serious software security people now have to start being literate about what it means to reverse engineer and dump the branch history buffers on different CPUs. Getting dragged through this kind of minutiae is the reason I'm still in this field after 22 years.And I'm just a bystander here. Imagine what it 	tptacek	9.675844	-5.491993	comment	3.0	12.0	1515083779	7.675896
16071663	Can't it be fixed with a microcode u	Can't it be fixed with a microcode update?	sebazzz	9.572437	-5.3615828	comment	3.0	14.0	1515083911	7.7824554
16071959	Meltdown: affects only Intel CPUs, i	Meltdown: affects only Intel CPUs, is the 'biggy' short-term, but patches to mitigate it are landing as we speak and patches to eliminate it using trampolines are described in the paper.  So no need to replace your Intel CPUs unless you can't live with the performance drop, but a good reason for buying AMD going forward.Spectre: hits AMD too.  Hits everyone today.  Hope for a new arch (bias: I am a Mill CPU dev ;) )	willvarfar	9.522526	-5.4299045	comment	3.0	16.0	1515085706	7.8173814
16072506	They don't explicitly say. Is part o	They don't explicitly say. Is part of this a microcode update?	discreditable	9.572022	-5.35514	comment	3.0	24.0	1515089177	7.714306
16072551	>  Intel has developed and is rapidl	>  Intel has developed and is rapidly issuing updates for all types of Intel-based computer systems — including personal computers and servers — that render those systems immune from both exploits (referred to as “Spectre” and “Meltdown”) reported by Google Project Zero.Now I really wonder how they managed to patch both? Does someone know how you could patch something like that from Intel's side of things?	317070	9.544787	-5.3972354	comment	3.0	12.0	1515089450	7.8417277
16072778	If the microcode update requires mot	If the microcode update requires motherboard vendors to issue BIOS updates we are all doomed.	markphip	9.620154	-5.3137155	comment	3.0	14.0	1515090835	7.754951
16073084	I don't agree.  If a spec leaves out	I don't agree.  If a spec leaves out details, the impelmentors are free to make reasonable decisions on how to implement it.  It's more likely the spec didn't really have much to say about promises on the visible effects of speculative execution (the specs are often highly detailed about what side effects can be visible, this is a consequence of modern complex processors, which have very subtle designs).A bug would occur in the case where the specification specified that there were no visible side effects from these mispredicted speculative executions, and the processor implementor failed to implement that part of the specification.  This is a big deal because if it's a bug, Intel is liable.It's likely all processors with these kinds of features, the specs will get updated to be more speci	dekhn	9.672269	-5.6176634	comment	3.0	16.0	1515092793	7.799851
16073144	Should I hold off on buying a comput	Should I hold off on buying a computer until this spectre and meltdown issues are fixed?	crimsonalucard	9.576629	-5.513304	comment	3.0	11.0	1515093181	7.8185897
16073318	So just to be clear, I'd need to ins	So just to be clear, I'd need to install the OS patch as well as the OEM update (to BIOS? Processor?) in order to mitigate both Meltdown and Spectre.Additionally, how does this interact with VMs? It makes the most sense to me that I'd need to microcode patch the hosts, but what about the guests?	swasheck	9.680232	-5.5519714	comment	3.0	26.0	1515094396	7.825765
16071813	Developers are busy with workarounds	Developers are busy with workarounds for serious bugs in Intel's Core 2 (2007)	rsync	9.483784	-5.292375	story	3.0	17.0	1515084742	7.7708154
16071866	Intel was aware of the chip vulnerab	Intel was aware of the chip vulnerability when its CEO sold off $24M	vinnyglennon	9.290727	-5.1951785	story	3.0	3.0	1515085136	7.7501283
16073835	Oh nice. I know the average user is 	Oh nice. I know the average user is going to go right ahead and update their CPU microcode.	orblivion	9.579718	-5.3774023	comment	3.0	14.0	1515098182	7.7908535
16075418	They say the watches aren’t effected	They say the watches aren’t effected.Is it possible that they don’t do speculative execution?	MBCook	9.6788225	-5.6324553	comment	3.0	11.0	1515111829	-6.828577
16075632	Intel CEO cashed in on shareholding 	Intel CEO cashed in on shareholding after becoming aware of chip flaws	hickeygareth	9.276044	-5.1886177	story	3.0	41.0	1515114435	7.7340603
16076291	Don't think this is right on one det	Don't think this is right on one detail.Spectre2 should allow malicious JavaScript to read data from other processes.Running browser tabs in separate processes (e.g. Google Chrome's new Site Isolation) should protect data from Spectre1 alone but not Spectre2.See the table here:https://security.googleblog.com/2018/01/more-details-about-m...If that's not right I'd love to be corrected.Probably no known exploit of this yet.	javert	9.768399	-5.637236	comment	3.0	16.0	1515123345	7.499579
16076788	> Industry experts have been express	> Industry experts have been expressing concerns for this for ten years.AFAICT, de Raadt was concerned about Intel in general, but not the recent exploits in particular. We can find endless criticisms of every major company from the last 10 years (including on HN!); picking this one mailing list posting is bit arbitrary in the context of these exploits, even if de Raadt makes some good general points.	forapurpose	9.388707	-5.2057385	comment	3.0	12.0	1515130529	7.722888
16077241	I don't get how site per process can	"I don't get how site per process can mitigate these new attacks. It's not about reading reading other process memory, but reading kernel memory, which is mapped into every process.I'm not saying ""site per process"" is bad thing. Of course it can help to prevent some kind of attacks, just not these new cpu related."	finchisko	9.784379	-5.6446495	comment	3.0	16.0	1515138815	7.811071
16076969	Linus Torwalds is furious at Intel	Linus Torwalds is furious at Intel	rmason	9.344228	-5.393384	story	3.0	24.0	1515133828	-8.225181
16078738	Occam's Razor suggests to me that in	Occam's Razor suggests to me that intelligence agencies have not had to push for processor bugs, on the grounds that A: we can adequately explain the initial existence of these bugs by normal engineering, marketing, and management considerations such as almost everyone here has experienced personally and B: the field of the bugs that come from my first point is so ripe that the intelligence agencies are better served by examining them carefully and finding their own exploits. The primary reason for this is that the best hidden paper trail is the non-existent paper trail; by finding bugs independently and holding all knowledge within the agency, there is zero risk of it ever being revealed that they deliberately inserted bugs into the CPU, which would be a PR disaster for all concerned (and	jerf	9.484296	-5.2445736	comment	3.0	11.0	1515162501	7.7349443
16077737	Apple's Statement on Meltdown and Sp	Apple's Statement on Meltdown and Spectre	jbernardo95	9.617828	-5.5462055	story	3.0	14.0	1515147424	7.750282
16078017	Momentum builds for open-source proc	Momentum builds for open-source processors (2001)	ashitlerferad	9.48015	-5.221777	story	3.0	56.0	1515152520	7.7781053
16080551	> The lack of speculation in the ARM	> The lack of speculation in the ARM1176, Cortex-A7, and Cortex-A53 cores used in Raspberry Pi render us immune to attacks of the sort.I didn't check, but these will almost certainly have branch prediction. What they probably lack is a predictor advanced enough to speculate on indirect branches, which AIUI is the primary vector of Spectre.	blattimwind	9.729027	-5.7589107	comment	3.0	12.0	1515177458	-7.0512047
16081373	> can anyone tell me why the accessi	> can anyone tell me why the accessibility check for protected memory doesn't happen before the cache loads the contents of RAM?From what I understand, it does happen on AMD, which is why AMD CPUs are not vulnerable to the more dangerous Meltdown attack (any code reading kernel / hypervisor host memory).Intel / ARM delays the checks until later, to the time when the speculated instructions are actually finalised and make their results available. This is faster, and loading some memory into the cache is normally invisible to the unprivileged code. The checks would still be done when actually reading that memory. But nobody spent enough time considering the timing side-effects of the cache.Now even if the protected memory reads are fixed by the OS updates - then it still leaves the Spectre a	ProblemFactory	9.910364	-5.8352847	comment	3.0	12.0	1515183992	8.16471
16081565	In the past few days there were a ha	In the past few days there were a handful of links dated as far back as 2006, directly explaining the attack vector, or strongly hinting at it. So, the likelihood that NSA and a bunch of other groups knew is 100%.Unfortunately, Intel knew, too, and didn't bother fixing it in the next 6 generations of their CPUs since they originally admitted the issue with the Intel Core 2.	andr	9.509397	-5.2148814	comment	3.0	13.0	1515185858	7.757459
16080489	When F00F bug hit 20 years ago, Inte	When F00F bug hit 20 years ago, Intel reacted the same way	sharjeelsayed	9.47511	-5.2582912	story	3.0	130.0	1515176907	7.827344
16082109	Having the source for anything in th	"Having the source for anything in the cpu here won't help when the architecture design itself is at issue. If you have to respin new silicon, all the software in the world won't help you.Ever see a wire on pcb boards going from one end of the board to another? Thats the hardware equivalent of a: ""we can't fix this properly, but we can hack a fix on until we can fix it right in the next revision"" hack."	mitchty	9.48371	-5.2675138	comment	3.0	14.0	1515189666	7.8012295
16082587	That must be only Spectre, where did	That must be only Spectre, where did you read Meltdown...? This title is wildly inaccurate!	chx	9.620231	-5.5613155	comment	3.0	13.0	1515193700	7.7689114
16084813	Considering the performance impact, 	Considering the performance impact, I wonder how console manufacturers are going to handle this (assuming that the processors they used are vulnerable to Spectre/Meltdown).	ZenoArrow	9.506441	-5.3001904	comment	3.0	34.0	1515238353	7.7595897
16085116	Aren't they still vulnerable to Spec	Aren't they still vulnerable to Spectre?	arien	9.643558	-5.579696	comment	3.0	10.0	1515244224	7.7140512
16085494	Implementing a cool optimization tha	Implementing a cool optimization that happens to break your processor's security features is cheating, yes, even if you did it unintentionally, like accidentally taking a performance-enhancing drug.	lmm	9.875549	-5.2753377	comment	3.0	14.0	1515250556	-6.0893025
16085786	The website serves JS and does not s	The website serves JS and does not serve it over https, and discusses Spectre bug and how to patch it. I know he is the second most important guy on linux, but the irony.	proginthebox	9.7934675	-5.5977106	comment	3.0	19.0	1515254539	7.1130543
16085159	Everyone is affected by Spectre, but	"Everyone is affected by Spectre, but my understanding is that Meltdown is a particularly powerful ""version"" of Spectre that only affects Intel CPUs ?"	roblabla	9.591279	-5.5279417	comment	3.0	18.0	1515245353	7.841458
16086152	Someone please correct me if I'm wro	Someone please correct me if I'm wrong, but both spectre and meltdown seem to me to be local root exploits, not remote vulns.  They can be used to break out of (say) a VM into the host hypervisor, and thence into other VMs running on the same hardware, but cannot be used to break into a machine from outside its hardware perimeter.  Is that right?	lisper	9.660127	-5.580182	comment	3.0	23.0	1515258533	7.842071
16086154	They do, and it's what runs the Inte	They do, and it's what runs the Intel ME.	wilun	9.365876	-5.193868	comment	3.0	10.0	1515258537	7.7219186
16086360	I share your concern.  Based on my a	"I share your concern.  Based on my admittedly loose understanding, although the Spectre vulnerability is ""more difficult"" to exploit, I suspect it's a matter of time before exploits become more common.  And the Spectre vulnerability is the one that requires a BIOS/firmware update.So that's a bit alarming for me since at least one of my several workstations is using a 5+ year old desktop board (an Intel board, ironically) that has been end-of-lifed according to its BIOS downloads support page.  Meanwhile, some of the bigger server motherboard vendors (e.g., SuperMicro) are not yet prepared to supply firmware updates for recent motherboards.Recognizing that the operating system vendors/maintainers are not responsible for our systems' BIOS and hardware, the flippant advice to ""talk with your "	bhauer	9.622954	-5.4912653	comment	3.0	10.0	1515260080	7.7603564
16087824	Prgmr.com has been participating on 	Prgmr.com has been participating on the Slack channel this article mentions.  Being able to share notes gleaned from reaching out to vendors and sort through the information and mitigations for Spectre and Meltdown has been a huge help.	alanpost	9.617995	-5.549097	comment	3.0	12.0	1515277712	7.743224
16090500	Nineties probably wants its CISC vs 	Nineties probably wants its CISC vs RISC fight back.Nowadays it just doesn't matter, because CPUs translate ISA into whatever they please.Cache and out of order buffers (speculation) is what is behind latest security issues.	vardump	9.470018	-5.720268	comment	3.0	16.0	1515326034	-10.535574
16092217	> ECC ramI'm not sure how Apple has 	> ECC ramI'm not sure how Apple has people convinced they need ECC. It's practically worthless outside of very specific workloads. A workstation user does not fill several gigabytes of RAM with terse important data, query it millions of times/day, and do so 24/7 all year long.	thomastjeffery	9.480037	-5.5167255	comment	3.0	22.0	1515353813	8.254255
16095495	Are Meltdown and Spectre pre-install	Are Meltdown and Spectre pre-installed or do I have to download them via the Intel ME? \sI don't know how they have the audacity to release new CPUs while all their products just went to shit...	dna_polymerase	9.584171	-5.515775	comment	3.0	19.0	1515401315	7.8074236
16101864	This hit Twitter today because a sho	This hit Twitter today because a short section towards the end mentions a prefetch bug. But that bug is from 1992, and concerned instruction prefetch. It predates not only out-of-order execution and speculative execution (introduced in the P6 microarchitecture) but superscalar x86 altogether (introduced in the P5).There is an interesting history to covert channel analysis and modern side channels. It wasn't until the late 1990s (as far as I can tell) that anyone made the leap from covert channels --- which have cooperating agents on either end of the channel --- to side channels, in which the transmitter is unwitting.It's possible that there's other interesting side channel stuff lurking in covert channel analyses. But I think the research link there is also pretty well known.At any rate, 	tptacek	9.777756	-5.6183653	comment	3.0	13.0	1515453679	-5.9514728
16102839	Isn't Intel and AMD shipping new fen	Isn't Intel and AMD shipping new fence instructions that prevent speculative execution from progressing beyond a certain point? Why doesn't Webkit use those?	ENOTTY	9.671772	-5.6276565	comment	3.0	13.0	1515462977	-6.6124215
16103685	These mitigations feel like a half m	"These mitigations feel like a half measure. To quote the Spectre paper:""Even code that contains no conditional branches can potentially be at risk.""""long-term solutions will require that instruction set architectures be updated to include clear guidance about the security properties of the processor, and CPU implementations will need to be updated to conform.""It seems too early  to declare Spectre class attacks mitigated by the mechanisms presented in the OP."	80x25	9.666087	-5.5799146	comment	3.0	16.0	1515473324	7.786211
16109228	Wasn't it sourceforge that injected 	Wasn't it sourceforge that injected malware into downloaded programs? At least that's what pops into my head every time I see a sourceforge link, and why I avoid anything that's hosted on there.	MikkoFinell	8.754849	-5.993412	comment	3.0	23.0	1515527242	-11.651816
16110051	> by the way, that PoC was intense. 	"> by the way, that PoC was intense. Makes you wonder if the NSA knew about it all along :)Colin Percival found a very similar issue with Intel's implementation of SMT on the Pentium 4 in 2005: http://www.daemonology.net/papers/htt.pdfSo the general idea of using timing attacks against the cache to leak memory has been known for at least that long.In 2016, two researchers from the University of Graz gave a talk at the 33C3, where they showed that they had managed to use that technique to establish a covert channel between VMs running on the same physical host. They even managed to run ssh over than channel. 
https://media.ccc.de/v/33c3-8044-what_could_possibly_go_wron...In light of that, I would be surprised if the NSA had not known about this."	krylon	9.731433	-5.513443	comment	3.0	18.0	1515531883	-5.7220283
16110888	https://wiki.debian.org/MicrocodeThe	https://wiki.debian.org/MicrocodeThe real news here is that Intel thinks they can fix this via microcode. This is surprising because initially there were some strong arguments that this wouldn't be possible.	nickysielicki	9.565946	-5.3669834	comment	3.0	19.0	1515537955	7.7615356
16110928	Intel's not patching anything. They'	Intel's not patching anything. They're relying on Windows, Linux and macOS patches to work around the vulnerability. Presumably that's how the 90% claim can be made. Very disingenuous of Intel tho.EDIT: There are microcode updates included in the OS updates: https://access.redhat.com/articles/3311301	donaldihunter	9.50995	-5.300251	comment	3.0	23.0	1515538208	7.7324753
16114754	High-level programmer here. Can some	"High-level programmer here. Can someone explain please (already read the ELI5 in previous threads) how does the attacker extract the actual data from the processor L1 cache after tricking the branch prediction and have the CPU read from an unauthorized memory location?I understood the ""secret"" data stays in the caches for a very short time until the branch prediction is rolled back, which makes this a timing attack but don't get how you actually read it.EDITSo perhaps someone can ELI5 me ""4.2 Building a Covert Channel"" [1] from the Meltdown paper which is what I didn't understand.[1] https://meltdownattack.com/meltdown.pdf"	samsonradu	9.914147	-5.8287196	comment	3.0	13.0	1515591092	-6.9975924
16119896	>Would this entire Meltdown/Spectre 	">Would this entire Meltdown/Spectre thing count as the biggest mess-up of computing history? When yesterday the PoC repo was posted here, the spy.mp4 demo video gave me some chills.It must be up there amongst the greats, probably with the ""halt and catch fire"" op code. Normally they just patch this stuff with microcode and never really tell anybody, this time that won't work.I'm not entirely convinced it was a mistake at all (dons tin foil hat), Intel have been making suspicious design decisions to their chips for a well now (think this, Intel Me, hidden instructions, etc). It seems clear to me that this security by obscurity approach is quite frankly crap.>And now I can't update my OS before making an installation USB because Canonical can't just follow Linus' releases. Thanks.Linus' rele"	bArray	9.5923605	-5.449526	comment	3.0	30.0	1515624688	-12.540278
16125228	> Since this flaw is not fundamental	"> Since this flaw is not fundamental, that is, not even every currently existing processor exhibits it, it appears to be reasonable to replace the flawed design of the bricks, and not to re-engineer house construction.Timing leaks are an absolutely fundamental flaw of computers. It may be the case that this specific instance of speculation-based attacks that leak information via timing channels can be fixed by stopping speculation or by complete rollback of speculated state including caches. ""It's the chip's fault"" is true for Spectre and Meltdown, yes, and it will take some time for Intel and other manufacturers to design new chips that stop leaking information due to speculation.However, timing attacks are probably everywhere. They are covert channels that subvert language safety. The qu"	titzer	9.763138	-5.601357	comment	3.0	66.0	1515688576	6.5393314
16818063	Rosetta II being the x64 -> ARM tran	Rosetta II being the x64 -> ARM translation layer for when they start putting the AX chips in Macbooks?HP already has it's Snapdragon convertable out that has Windows 10 x86 emulation. But surprisingly this is only _32-bit_ not 64. Looks like performance is understandably poor as well.I'd expect Apple to take their usual strategy and wait a bit until chips are a little faster/they have a more mature emulator before they make the switch.Interesting times though!	seabrookmx	9.751151	-5.207145	comment	3.0	16.0	1523508394	7.522367
16819016	This looks like like RCS keywords, w	This looks like like RCS keywords, which are used also by other version control systems, such as CVS or Subversion:http://svnbook.red-bean.com/en/1.7/svn.advanced.props.specia...I... I don't know why would anyone put one in a TXT record. It's likely a mistake.The other example domains (example.org, example.net) don't have such record.	jwilk	8.757379	-6.387821	comment	3.0	11.0	1523522160	8.546609
16822361	Intel FPGAs Go Mainstream for Enterp	Intel FPGAs Go Mainstream for Enterprise Workloads	rbanffy	9.114134	-5.328785	story	3.0	21.0	1523549576	8.328414
16839337	I think you are talking about a diff	I think you are talking about a different sourceforge. The business has changed hands multiple times.	srean	8.745904	-5.99257	comment	3.0	10.0	1523738209	-11.686167
16844643	Hey folks, I'm the owner of the Intr	Hey folks, I'm the owner of the Intrinsics Guide at Intel. Let me know if you have any specific feedback or questions you have.	SoManyIntrinsic	9.465288	-5.230047	comment	3.0	11.0	1523822748	7.724636
16853506	Obv. feel the same way, which is why	Obv. feel the same way, which is why I started being the trivial patch monkey which Linus refers to.That's long ago been handed over, but I like to think that it did expand the developer base. Not just for Linux, but for FOSS generally.	RustyRussell	9.445052	-5.791666	comment	3.0	10.0	1523918269	4.270541
16871320	> Considering each BrainFuck command	"> Considering each BrainFuck command
on  average  takes  5  or  more  assembly  instructions  to  implement,
even  assuming  a  perfect  1  instructions  per  second  on  a  3GHz
processor, it would require almost one hundred cores to compete 
with this performanceI assume the authors intended to mean ""1 instructions per cycle"" here, but even with that amendment isn't that pretty poor performance for modern CPU? I was under the impression that modern CPUs have peak performance way above 1 IPC, although if that is realizable with BF interpreter is another question. It would have been nice to see comparison to some reasonably high-performance BF compiler."	zokier	9.669642	-5.507313	comment	3.0	10.0	1524086577	7.8692293
16875828	"On the comments: ""Intel CPUs were te"	"On the comments: ""Intel CPUs were tested with Meltdown/Spectre patches, that's probably the discrepancy you're seeing."""	mping	9.54787	-5.378299	comment	3.0	23.0	1524145586	7.764971
16875925	So every other reviewer is not using	So every other reviewer is not using those patches (isn't Windows installing them automatically?), and the performance impact is that huge that it completely negates every performance advantage Intel had for now almost a decade?	onli	9.496886	-5.201944	comment	3.0	12.0	1524146477	7.8712997
16876202	> What is anandtech doing different?	"> What is anandtech doing different?AMD's officially supported memory is 2933 MT/s. Intel's officially supported memory is 2600 MT/s.Other review sites overclock memory and run both systems at 3200 MT/s RAM (closer to reality: you may have to spend $20 on RAM but the faster speeds seem to be worth it these days). It seems like Anandtech prefers to run the system on default settings however.Its definitely a discrepancy. But I don't necessarily think Anandtech is in the wrong. It just goes to show how much these little decisions matter in benchmarking, and why its good to have multiple benchmarks from different sites.So, do you go for the ""obvious overclock"" with 3200 MT/s RAM, or do you actually follow the official recommendations from the manufacturers? Regardless, its good to see that dif"	dragontamer	9.314271	-5.19415	comment	3.0	17.0	1524148515	7.878351
16879999	Isnt HFT implemented on FPGAs these?	Isnt HFT implemented on FPGAs these?	dclusin	9.135427	-5.326487	comment	3.0	10.0	1524170780	8.436568
16893853	I'd say it's uncontested if you like	I'd say it's uncontested if you like using emacs. Because - for me - it's awful. Mostly because I find using vim or emacs awful and only use either of them when I absolutely can't avoid it.But that said - it does it's job very well and magit is certainly excellent software for those that are interested in that interface.	abritinthebay	8.920359	-6.415702	comment	3.0	10.0	1524352004	-11.340991
16924148	 Really, the article should be title	 Really, the article should be titled “Intel CPU suffer performance hit with HPET bug”	ComputerGuru	9.475765	-5.1987786	comment	3.0	17.0	1524678776	7.8017664
16943553	Ask HN: Resources for learning ARM A	Ask HN: Resources for learning ARM Assembly?	jason_slack	9.7562065	-5.470367	story	3.0	4.0	1524856958	-7.557996
16963208	The github is a little more descript	The github is a little more descriptive and answers a few more questions: https://github.com/kelu124/un0rick/ (though don't expect all your questions to be answered here either).I'm curious what the FPGA approach offers above a regular CPU/DSP approach in plain English (quod non intellegunt: technerdese attracts followers, latinnerdese less so).  I've been interested in FPGA's since dabbling with them a couple years ago but haven't come across a use case that's tangibly beneficial yet.  If this is one, I'd love to contribute, but I'm not so far gleaning that from the docs.  Can OP assist here?	daxfohl	9.08974	-5.365007	comment	3.0	20.0	1525128875	8.340876
16973836	For all you know they'll task you wi	For all you know they'll task you with writing assembler for a 1980s vintage cpu controlling m113 Bradley internal combustion engines.	walrus01	9.771605	-5.634854	comment	3.0	15.0	1525231920	-7.5730596
16977556	Travis merges private and open sourc	Travis merges private and open source repositories into one platform	robinhood	8.823948	-6.375626	story	3.0	116.0	1525273479	-5.6037793
16989941	Within 10 years every mainstream com	"Within 10 years every mainstream computing hardware environment will have some kind of TEE. They already exist on the iPhone (the SEP), Google's Android phones (the ARM TEE), upcoming high-end ARM processors in general (I think they were calling it ""CryptoIsland""?), high-end Intel processors (SGX) and high-end AMD processors (SEV).The whole point of Asylo is to provide a hardware abstraction layer to make applications portable across different enclaves; it's the opposite of reinforcing Intel's position."	tptacek	9.479613	-5.19986	comment	3.0	10.0	1525381321	8.01058
17013688	Wouldn't you always compile and test	Wouldn't you always compile and test locally before uploading to CI? I understand that CI can provide some confidence about working in a standard hermetic environment, vs. potentially only on one developer's laptop, in a team environment. But why would a CI build ever fail for a personal project?	closeparen	9.2455635	-6.4272695	comment	3.0	15.0	1525708172	6.099411
17025319	You kind of summed it up right there	You kind of summed it up right there...'it's just an arithmetic logic unit for tensors'...whether its a matrix multiply engine or implmenting sha256 still a custom rapidly iterated chip for narrow very specific use case. Google accomplishment here clearly the software, but doubt they only ones going to crack asic systolic arrays. At some point china inc figures this out in mass...maybe bitmain themselves.	ai2323	9.720561	-5.5505037	comment	3.0	11.0	1525814851	8.104446
17030721	As an early adopter of CoreOS, paid 	As an early adopter of CoreOS, paid Tectonic user, I find this distressing, disappointing, and it leaves me wondering where I can turn.This is the opposite direction of what RedHat should have done.I was hoping this was a acquisition to move RedHat's technology stack moving forward and instead it's one to move an innovative and solid platform backward.Acquire, assimilate and kill off competition, just like other RedHat acquisitions before it. :(	crad	9.886144	-5.719346	comment	3.0	11.0	1525880824	-9.394274
17055172	As an hardware engineer, I'm always 	As an hardware engineer, I'm always skeptical of these homebrewed high level design flows, they usually never seem to translate to good hardware.And it seems to be the case for this one too. I quickly generated some Verilog code from one of the given examples and I was surprised to see flip-flops without reset. Also, not all registers are even being reset'ed at all.I have some serious doubts about the quality of the hardware generated by this tool.	sweden	9.184866	-5.452336	comment	3.0	19.0	1526147462	8.503632
17059208	Personally, I think it’s valuable to	Personally, I think it’s valuable to take advantage of new features. AVX512 can be dozens of times faster than scalar operations, and clhash is the fastest strongly universal string hash library. There’s no good reason to pass on these kinds of performance improvements.I know these aren’t the features in question, but casually dismissing the benefits of CPU improvements doesn’t strike me as productive.	stochastic_monk	9.557716	-5.62074	comment	3.0	10.0	1526223393	8.093388
17074294	It’s about time Intel offers consume	It’s about time Intel offers consumers ECC RAM support.	corv	9.459819	-5.4947968	comment	3.0	17.0	1526395701	8.189494
17074654	How is this different exactly from T	How is this different exactly from Throwhammer?	ccnafr	9.625647	-5.6966724	comment	3.0	10.0	1526398066	-13.88787
17074766	ECC wont help, you need row access c	ECC wont help, you need row access counters(target row refresh/TRR) directly in ram chips, or in memory controller. With switch to DDR4 JEDEC had a chance of standardizing those mitigations, but that would cost additional cents per chip, cant have that!	rasz	9.495355	-5.4965863	comment	3.0	14.0	1526398742	-12.256503
17074906	Do you have any links to more inform	"Do you have any links to more information on that? Googling ""row access counters"" leads to a lot of comments you've made on the internet, and nothing else.I'm skeptical that ""ECC won't help,"" that's not a commonly held opinion. It might be true but it'd be interesting to read some actual analysis as to why."	justin66	9.557584	-5.52972	comment	3.0	10.0	1526399804	-12.227946
17073560	Nethammer: Inducing Rowhammer Faults	Nethammer: Inducing Rowhammer Faults Through Network Requests	razer6	9.625678	-5.6597953	story	3.0	87.0	1526389044	-13.894767
17077527	The 68K was such a glorious processo	The 68K was such a glorious processor to program, especially after coming from the 6502. Hardware multiply and divide? Sign me up! :DThe assembly code looked like poetry.	eludwig	9.597443	-5.382134	comment	3.0	24.0	1526415579	-7.5179515
17077922	M68k assembler was so straightforwar	M68k assembler was so straightforward and beautiful. Easy to read and easy to write. Too bad that the monstrous x86 won out.	hansjorg	9.8980255	-5.7531295	comment	3.0	12.0	1526418816	-7.622319
17093199	Upgrading to 64-bit address space wo	Upgrading to 64-bit address space would also require a rip and replace of all carrier routers, customer CPEs, and re-writing of software.We might as well take advantage of a compatibility breaking upgrade to fit in all of the other upgrades.	supertrope	9.915945	-5.4840856	comment	3.0	11.0	1526577098	-14.247324
17096027	HDLs are fine. I've found the toolin	"HDLs are fine. I've found the tooling around them to be quite atrocious (slow, buggy, opaque, gui-based) though.
Be it for synthesis, simulation, or even just compiler errors it's pretty bad compared to software."	obl	9.102958	-5.479613	comment	3.0	10.0	1526592192	8.635996
17096837	> that bag needs people that write H	> that bag needs people that write HDL and understand computer architecture to make good use ofOver time I suppose they could have some machine learning that automatically configures the FPGA based on which programs you are running and the types of computations they have historically used.	bonestamp2	9.081531	-5.3461027	comment	3.0	10.0	1526597440	8.363026
17101146	To be clear these (Resistive RAM and	To be clear these (Resistive RAM and Magnetic RAM) are really competitors to Flash (EPROM) rather than DRAM or 3D XPoint from Intel.  Their main advantages are process simplification (Flash requires a LOT of extra layers) and cost rather than speed. In the industry people are very careful with new Non-volatile memories, because the failures may have long (delayed) failure modes that cause horrible problems and liability.I'm fairly positive on these two choices (Re&M-RAM) mostly because people have learned to be fairly sceptical and require a lot of testing and they are porting to mulitiple Fabs. Even with the license it will be at least 12 months before there could be customer samples from the first licensee, Microsemi.	kurthr	9.782863	-5.195567	comment	3.0	11.0	1526649181	7.983979
17126621	Spectre chip security vulnerability 	Spectre chip security vulnerability strikes again; patches incoming	CrankyBear	9.631232	-5.556893	story	3.0	34.0	1527002937	7.771109
17126917	I hope there's a way for users to di	I hope there's a way for users to disable these patches. I for one would rather have a fast processor that does speculative execution than one that takes a significant N% performance hit but is armored against speculative attacks.Security compliance is becoming more and more like a ball and chain shackled to our legs. I expect security to slowly eat up a bigger and bigger share of processing power which translates to more sluggish chips, more sluggish software, etc.	ythn	9.680556	-5.6196775	comment	3.0	16.0	1527004894	-6.853656
17145320	'We develop new AI processors on the	'We develop new AI processors on the open RISC-V architecture'	rbanffy	9.381792	-5.6591005	story	3.0	34.0	1527177888	-10.579319
17150741	Could this be a hint at Intel's supe	Could this be a hint at Intel's supercomputing and AI strategy? They cannot compete with GPUs on flops with Xeon, but an embedded FPGA might get them closer.It is a risky strategy however. Even if they can attain similar performance, which I doubt, programmability remains the big problem for FPGAs. I know Intel is pushing openCL but it simply does not have an ecosystem for software right now, and it remains to be seen if they can  even enable much of the feature set of openCL on an FPGA.	arcanus	9.09855	-5.28283	comment	3.0	29.0	1527224417	8.097684
17151024	>programmability remains the big pro	>programmability remains the big problem for FPGAsI agree because there's added levels of complexity with HDLs that SW doesn't have to deal with. What would be nice is if there was a tool that you could declare your problem (functions) and your constraints (throughput, LUTs available) and it would figure out the memory, ALUs and pipe-lining needed to solve the problem.	vegetablepotpie	9.115803	-5.4447274	comment	3.0	12.0	1527228455	8.454163
17167752	Oh, interesting point! Yes let's jus	"Oh, interesting point! Yes let's just use OpenBLAS, no need for anyone but one or two people to understand these things. Sure.Okay so let's have a look at OpenBLAS's Skylake kernel. Maybe we can learn some deep wisdom this author hasn't considered! Go and have a look for it, I'll wait here.Ah, what's that? THERE IS STILL NO SKYLAKE KERNEL IN OPENBLAS? Interesting.In fact if you do ""sudo apt-get install libopenblas"" on Ubuntu 16.04 (the one every deep learning tutorial will be recommending), you'll find you get version 2.18 of OpenBLAS. You'll find that this version of the software is quite old now, and it has a bug that causes it to fail to detect your CPU correctly. You'll find that instead of using any AVX instructions, it'll fall-back to the Prescott kernel. You'll also find this is rea"	syllogism	9.287072	-5.336617	comment	3.0	19.0	1527439631	-2.922641
17177865	Challenges in Large FPGA-Based Logic	Challenges in Large FPGA-Based Logic Emulation Systems	godelmachine	9.108661	-5.2227902	story	3.0	39.0	1527589111	8.314362
21003512	What are those users doing that can’	What are those users doing that can’t be automated and run in CI?	chrisseaton	9.269317	-6.335841	comment	3.0	11.0	1568797894	6.111799
21025378	What is more, you can:1. clone https	"What is more, you can:1. clone https://github.com/torvalds/linux into https://github.com/<YOURNAME>/linux.2. push a fake ""torvalds"" commit into your repo.3. check the SHA of the the commit that you made.4. the commit will be visible at the original repo URL with your SHA (https://github.com/torvalds/linux/commit/<SHA>), with no indication whatsoever that this is coming from a different repoI have reported this problem to GitHub a while ago and they replied to me that this is a well known feature of the  repo ""network""."	warpech	8.979973	-6.1389227	comment	3.0	35.0	1568978677	-11.764321
21029417	One challenge with AVX-512 is that i	One challenge with AVX-512 is that it can actually _slow down_ your code.  It's so power hungry that if you're using it on more than one core it almost immediately incurs significant throttling.  Now, if everything you're doing is 512 bits at a time, you're still winning.  But if you're interleaving scalar and vector arithmetic, the drop in clock speeds could slow down the scalar code quite substantially.https://blog.cloudflare.com/on-the-dangers-of-intels-frequen...	3JPLW	9.468719	-5.5529995	comment	3.0	10.0	1569001940	8.09244
21028617	The Campaign to Take Torvalds Out of	The Campaign to Take Torvalds Out of Linux	bin0	9.404309	-5.829431	story	3.0	11.0	1568997675	-8.154429
21031000	By what mechanism would the multicor	By what mechanism would the multicore performance rise 2x without increased single-core performance?  I'm kind of confused.  Eliminating intra-CPU concurrency bottlenecks, I guess?	loeg	9.655803	-5.431597	comment	3.0	17.0	1569011758	8.037187
21031806	I happen to know of several companie	I happen to know of several companies doing physics problems that scale poorly across cores that spend far north of that, usually building out small clusters. Then you run 100s of independent simulations since each individual one doesn't really scale.	eyegor	9.73481	-5.3360176	comment	3.0	13.0	1569017197	7.891881
21032464	Is AVX512 really an advantage though	Is AVX512 really an advantage though?Intel is infamous for severely downclocking the processor for these and other AVX/SSE family instructions, to a point where sometimes using them makes the program slower than it would be otherwise, especially if you're constantly provoking frequency switches between them and regular instructions.AMD might not have implemented AVX512 specifically yet (there's nothing legally keeping them from doing so however, they have patent sharing agreements with Intel regarding the entire x86/x64 ISA and extensions), but what they currently DO have is all common SIMD extensions implemented (up to SSE4 and AVX2 if I'm not mistaken) without incurring any frequency penalties on clock speeds for using them.I can live without AVX512 for now, even though I'd be happier to	luizfelberti	9.453409	-5.5241055	comment	3.0	12.0	1569023452	8.068932
21036552	Indeed, and also what about the effe	Indeed, and also what about the effect of multiple cores? You could have 7 cores working on game logic and one doing GC.	facorreia	9.538999	-5.3312097	comment	3.0	10.0	1569086139	7.97571
21041438	But is a ISA that wasn’t designed fo	But is a ISA that wasn’t designed for embedded really that well suited for it?And if the silicon design is new, we are not benefiting all the much from decades of battle testing, right?I can’t imagine how a clean, embedded first 32bit ISA design wouldn’t be more appropriate.	tambourine_man	9.563349	-5.477303	comment	3.0	11.0	1569161528	-7.712107
21040057	Xv6 for RISC-V	Xv6 for RISC-V	ingve	9.397364	-5.6982336	story	3.0	114.0	1569135773	-10.5608
21048817	Wow everyone all excited about hoste	Wow everyone all excited about hosted FreeBSD jailsSome of us had deploy pipelines into “containers” working like a Lambda in 2003.Nothing in software is all that novel these days, IMO.All these features that have been there for a decade plus are just wrapped in a corporate brand now.Progress.	jririi82zxn	9.714828	-6.421907	comment	3.0	11.0	1569246058	10.533336
21054620	That thing came out over a year ago,	That thing came out over a year ago, and the page hasn't been updated in nearly as long. From what I've understood you don't get direct access to the FPGA, rather they've made a few basic peripherals like SPI, UART etc that you can enable.So it is more like a configurable microcontroller, rather than a fully programmable FPGA, at least that's my understanding.Which I guess makes sense, given that FPGA programming isn't exactly n00b friendly from what I've gathered.	magicalhippo	9.08887	-5.35347	comment	3.0	13.0	1569279125	8.306694
21055680	Question for experts in the field: a	Question for experts in the field: are there any reasonable FPGA options capable of hosting a small (~2MiB) quantized deep learning model for which there's any sort of a viable, open toolchain?I've looked into some of Lattice's stuff, and some of their chips seem pretty capable for this, but as with all the other FPGA manufacturers, the toolchain is crazy proprietary. I'm not a huge fan of sinking my time into tooling I have no control over.	m0zg	9.065342	-5.346935	comment	3.0	11.0	1569289613	8.323161
21058108	"""130,000 processor cores with 1 ns/d"	"""130,000 processor cores with 1 ns/day""Still a bit to slow... I guess it is progress :)"	callesgg	9.575666	-5.2275143	comment	3.0	12.0	1569318304	7.9154353
21067330	This is pretty much the same process	"This is pretty much the same process we went though to reverse engineer the custom ""VPU"" instruction set for the co-processor that the Raspberry Pi's firmware runs on.We used the publicly available bootcode.bin and loader.bin to RE most of the ISA before the Pis even started shipping, though there were some more obscure instructions that we weren't sure about until we could run our own code.But when my pi did arrive, we knew enough to write a binary that would blink an LED on more-or-less the first attempt.I guess the real lesson, custom ISAs are not a good form of security."	phire	9.613078	-5.5331254	comment	3.0	17.0	1569382075	-7.709622
21067591	Right now, the homebrew electronics 	Right now, the homebrew electronics industry is buzzing like linux and open source was in 1996.  PCB design and manufacturing has been opened up to millions by cost reductions and open source software in the past few years.  FPGA development is following suit as well.One of the big drawbacks of using an Arduino is that it is so limited in the number of modern devices it can access (USB 3, SATA, HDMI In or Out, etc).To that end I think LiteX maybe the most intriguing thing I've seen this year if it catches on popularity.  It's an SoC builder, which would allow for DIY SoC's (including using a RISC V core).https://github.com/enjoy-digital/litexI'm not saying it's guaranteed, but it's looking more and more possible that FPGA's using LiteX or similar technology could disrupt the embedded micro	bb88	9.430504	-5.2514286	comment	3.0	23.0	1569385500	-10.493059
21070521	>https://blog.invisiblethings.org/pa	">https://blog.invisiblethings.org/papers/2015/x86_harmful.pdfThe author dismisses CPU-level backdoors in favor of Intel ME backdoors mainly on the basis that, since CPUs can't save state, they can't protect themselves against replay-""attacks"", and hence Intel would lose any sort of plausible deniability once an ""activation sequence"" was ever found in the wild.But I don't really see how ME is protected against replay-""attacks"" either. Sure, you might not be able to replay the sequence to the same CPU, but you can definitely replay it to a different CPU - unless every single CPU out there has a different activation sequence, which is possible, but would be vastly less efficient (if you want to hack someone you now have to know / guess some sort of unique production ID of the CPUs he's using?"	pingyong	9.496226	-5.23841	comment	3.0	13.0	1569417915	7.773536
21113578	As an observer from the outside i ha	"As an observer from the outside i have to say, that i am as an ""privileged white male"" will pay much attention to what i will say in the future. This is my conclusion about what happened here and happened to Linus.The feeling that you have to be super sensitive will close more doors then before - prove me wrong."	gunibert	9.276359	-5.895342	comment	3.0	14.0	1569840209	4.226422
21132376	Some much truth to this. Those that 	Some much truth to this. Those that think Linus or RMS are abrassive have obviously never met Drepper.I once had the (dis)pleasure of meeting him once at a former company when he came onsite and he came across as every bit the condescending asshole as he does on bigzilla. Didn't really get the chance to get to know him as a person, but as they say, first impressions... I get that he's in a tough spot maintaining glibc, but a bit of tack in correspondence would go a long way.	hermitdev	9.281001	-5.8568306	comment	3.0	11.0	1569976407	4.2585263
21135405	> they only work in the real-address	> they only work in the real-address modeSo it's not for i386, it's for XT by the sounds of it.	tus88	9.702824	-5.3481894	comment	3.0	19.0	1570017099	-7.832189
21135672	At risk of missing sarcasm, a large 	"At risk of missing sarcasm, a large reason all these vulnerabilities in Intel are found is their market share. Same as when OSX was considered ""unhackable"" - it just wasn't worth the effort. AMD is likely just as bad, but it's not uncovered (yet).Supporting the underdog is a good idea nonetheless, but not for this reason per se."	Grangar	9.319815	-5.230764	comment	3.0	24.0	1570019704	7.8272405
21142296	What are the arguments against versi	What are the arguments against version control here (if any)?Honestly the project sounds quite interesting, but I can imagine the circumstances make it painful.	thijsvandien	8.801384	-6.3846498	comment	3.0	44.0	1570062259	-11.731795
21161799	"""The adoption of FPGA technology in "	"""The adoption of FPGA technology in the market has always been limited by the severe learning curve required to take advantage of it.""I vehemently disagree with this. FGPAs and their toolchains are notoriously expensive and proprietary. I have no doubt that if tool chains were opened up and an average person could program for it, you would see much more.rapid adoption because then an average person could start the learning curve much easier"	kop316	9.083327	-5.3769364	comment	3.0	22.0	1570222491	8.400245
21161826	This. It's not so hard, any competen	This. It's not so hard, any competent software engineer could learn HDLs in one or two weeks. The fucking toolchain though? Months...	rowanG077	9.099385	-5.487446	comment	3.0	12.0	1570222742	8.618422
21166383	Which intel found bugs are you talki	Which intel found bugs are you talking about? There was the late 90s sqrt bug (IIRC incorrectly initialized lookup table, unfortunately in ROM), and the lower than specified precision of the x87 transcendentals.Those FPU bugs weren’t due to design complexity - the former was presumably a mask bug, and the latter is “maths is hard”.There was an errata for some of the arm thumb2 cpu designs that led to incorrect branching when a jump instruction spanned a page boundary, which is the only cpu bug I ever encountered.	olliej	9.562346	-5.4099	comment	3.0	11.0	1570292891	7.895815
21169178	I'm not sure it would be less confus	I'm not sure it would be less confusing to name the ISA 'RISC' instead of 'RISC-V'. The 'R' in 'ARM' stands for 'RISC'.	leggomylibro	9.426097	-5.68521	comment	3.0	10.0	1570324810	-10.537133
21172423	Briefly, there is something very sim	Briefly, there is something very similar to Amdahl’s Law for parallel speedup but for removing the thin layer of defects checkable by static typing. Most defects in any real system aren’t like that, to such a degree that the whole correctness bottleneck is concentrated so heavily in unit and integration testing and the extra language complexity, extra lines of code for type annotation or registry of type system designs, slow compile times or constraints on mutation imposed by the static typing don’t pay for themselves through meaningful defect reduction. It’s like the cost of shipping data to a GPU. The efficiency gained by processing it in parallel on the GPU device must be much greater than the transport cost, or it’s not worth it.But in terms of me ever wanting to write this up with rig	mlthoughts2018	9.641058	-5.3515344	comment	3.0	19.0	1570373724	-8.489683
21175819	Maybe, but I don't see why vendors m	Maybe, but I don't see why vendors making RISC-V chips are inherently more trustworthy? There are lots of dodgy vendors building standardized parts. It seems like they'd be easy to counterfeit?	skybrian	9.369128	-5.6599135	comment	3.0	11.0	1570402792	-10.561637
22830801	To be clear, SPECTRE leaks privilege	"To be clear, SPECTRE leaks privileged memory at an OS-level -- up to in some cases allowing arbitrary virtual memory reads.While Javascript is the most likely attack vector for most people, you should not use this command on a system that's running untrusted code from anywhere in any context, and you should consider moving sensitive information like passwords off of the computer.I use uMatrix to disable Javascript by default on every site I visit, and I still would not feel safe running this command on anything other than a single-purpose device.That's not to say that there would never be a good reason to run it. A very imprecise, easy test I would propose is, ""is your Linux system vetted enough or just unimportant enough that you would feel comfortable getting rid of users and running all"	danShumway	9.746471	-5.615088	comment	3.0	33.0	1586503801	-6.4488463
22834409	Reminder that nothing is a panacea: 	Reminder that nothing is a panacea: I've heard from game engine authors and cryptographers that on Intel chips _over-using_ SIMD can actually heat up the chips too much such that it'll cause the system to then adjust the clockrate lower to cool down and you can degrade performance beyond not using SIMD at all. Before hearing that, I had never considered thermal properties of particular instructions.	jzelinskie	9.715611	-5.783211	comment	3.0	10.0	1586534910	8.144737
22846618	Intel SGX is really a big gift to se	Intel SGX is really a big gift to security researchers, second only to speculative execution and friends. Intel is selling it as a way to keep secrets safe inside the processor against attackers with root/hypervisor software access or even physical access. Of course, a bevy of attacks in the recent months have demonstrated that this isn’t really achievable given the extremely large attack surface.SGX has opened Intel up to physical attacks on the chip in a way that really hasn’t been interesting in the past. Previously attacking a CPU physically wouldn’t give you any more capabilities than you already had (with unlimited ability to tamper I/O and memory). Now, physically attacking the CPU can be used to reveal SGX secrets or mess with SGX computations. Expect a lot more attacks like this t	nneonneo	9.503524	-5.24325	comment	3.0	19.0	1586676750	-5.8355584
22848010	> This article is spot on. Verifying	> This article is spot on. Verifying hardware is a much more complex task than designing it.Are we sure about that? They start out talking about how hard it is to write correct state machines in Verilog, and they follow that with a lot of skepticism about RISC-V processor designs. But most RISC-V designs use Chisel, not Verilog. Chisel is much higher level than Verilog and using it should also make it quite a bit easier to prevent many design-level errors.	zozbot234	9.379804	-5.661845	comment	3.0	14.0	1586697025	-10.55374
22855635	I wonder at what point might we impl	I wonder at what point might we implement a very old CPU like the 6502/6510 on this and demonstrate the proof of concept of e.g. a very very slow fully homomorphic Commodore 64 emulator.Has it been done?	api	9.540626	-5.3167553	comment	3.0	37.0	1586784512	-7.502223
22862688	Absolutely terrible naming collision	Absolutely terrible naming collision with another Go Unikernel project:https://github.com/solo-io/unik	meddlepal	9.921885	-6.2389174	comment	3.0	12.0	1586837677	-12.378061
22875636	> by 4,5x on AVX2I would expect a mu	> by 4,5x on AVX2I would expect a much smaller gap as AVX2 is also available through intrinsics on C ?!	tromp	9.461026	-5.5658107	comment	3.0	13.0	1586938903	-8.199265
22880282	You might want to consider a new nam	You might want to consider a new name - Zynq is Xilinx's flagship family of FPGA/ARM SoCs. With Xilinx being a pretty large corporation I'd be surprised if they don't immediately try to defend their trademark.	q3k	9.167145	-5.3448906	comment	3.0	17.0	1586970685	8.283268
22892184	> Despite the protestations of l33t 	> Despite the protestations of l33t Cyberhaxxing Z3r0 Cools everywhere, you only have to turn off hyper-threading if you are sharing a machine with someone you don't trust.If you're reading this reply, you probably automatically executed `hn.js`. Are you _sure_ you know what it does?Unless you're browsing the web with Javascript completely disabled, and you also don't have any applications that automatically update themselves from a remote source (are you _sure_ you know what those various auto-updaters are downloading?), you're running untrusted code on your machine.Perhaps you don't particularly care about that risk, or you don't feel the risk is severe enough to warrant the performance hit, which is fair, but the risk is there nonetheless.	theevilsharpie	9.888457	-5.5908003	comment	3.0	16.0	1587062378	6.519857
22916548	"But if an attacker is already ""insid"	"But if an attacker is already ""inside"" your system and is able to access the interface for configuring the FPGA, I think you have already lost..."	alexdowad	9.112145	-5.3502173	comment	3.0	11.0	1587310281	8.25555
22936785	Anyone know if these have ECC suppor	Anyone know if these have ECC support? I need to build a few (3) really cheap x86 boxes but need ECC support.	rubyn00bie	9.413647	-5.4963393	comment	3.0	10.0	1587488337	8.206963
22937366	I usually go to PassMark CPU charts 	I usually go to PassMark CPU charts and sort by value:https://www.cpubenchmark.net/cpu_value_alltime.htmlOr visit their high-end CPU chart and scroll until I see a price I'm willing to pay.	yboris	9.460172	-5.1850576	comment	3.0	15.0	1587491296	7.8206906
22951152	They do an amazing job keeping it se	"They do an amazing job keeping it secret too. Can't even find them on the contributor list
https://github.com/aol/moloch/graphs/contributors"	gyehuda	8.773395	-6.0154448	comment	3.0	10.0	1587596602	3.074129
22951431	MIPS is typically seen in computer a	MIPS is typically seen in computer architecture class because it is simple and regular (at least the original version seen in class). However, for Assembly programming, MIPS, like (almost?) all RISC instructions sets, is tedious. Give me any CISC with a generous range of addressing modes, and I take any day over MIPS/RISC.We can make a parallel between those low-level ISA and high-level languages: a language like Lisp is lean and simple so it is taught and presented as good design (and people who went through that education keep that in memory), but when it comes to produce real program almost everybody chooses a much less regular language, which is way more practical. (Same could be said for stack-based languages like Forth, which present an extremely simple model to apprehend, but that d	wott	9.568747	-5.7094464	comment	3.0	12.0	1587599658	-10.4149
22951479	I don't think MIPS is going to compl	"I don't think MIPS is going to completely disappear as long as Linux works on it.  Someone somewhere in some country 
will keep making them as long as the licensing situation is more favorable for whatever use than ARM or x86.  If the owning company is going bankrupt that means making MIPS CPUs will be cheaper than ARM or x86."	tenebrisalietum	9.504943	-5.5217752	comment	3.0	12.0	1587600184	2.6514678
22951745	I like the idea of a utility that ca	I like the idea of a utility that can add ECC to any arbitrary file.  You'd need to ensure you had an uncorrupted copy of the utility that you could use in the future though, or the images become unreadable even if they're uncorrupted themselves - unless the ECC is contained in a sidecar file.	mark-r	9.491104	-5.5421352	comment	3.0	14.0	1587602947	8.276061
22987493	The key words in the parent post are	The key words in the parent post are 'for me'.Imagine you have a single core compilation process that takes two minutes that you must run 50 times a day. This can happen. Ten percent brings 12 seconds per compile or ten minutes a day. This might not sound great but it means you can get an extra five compiles done. You can also get increased likelihood that you can remember what you were working on. Therefore the marginal gain in single thread performance is well worth having in this use case. The expense of genuine Intel becomes worth it even if you don't have so many cores.	Theodores	9.54456	-5.3211536	comment	3.0	23.0	1587912322	7.936857
22987611	I have a dual core dev machine. Usin	I have a dual core dev machine. Using -j 2 builds twice as fast (approx 35 mins -> 17 mins). Are current compiles really obligatory single thread? Because I sure would like to prop up intel with my wallet.	throwaway_pdp09	9.687038	-5.456254	comment	3.0	14.0	1587913237	8.110481
23032781	> We also all know that a single cor	> We also all know that a single core with twice the performance and twice the cache space costs a lot more than two cores. It's a lot more expensive than even 3 cores.I'm a programmer, I don't care how much it costs the hardware manufacturer. I want a single core. Multi-threaded programming sucks. I don't care if that's implemented via multiple cores acting together and only presents itself as a single core. I just want a single core.> I'd rather have 3 4Ghz cores than 1 8Ghz core (except for the novelty value).I'd much rather avoid multi-threaded programming and get the 8GHz core. But your comment is missing the point, really, which is that single-core performance matters. If the 8GHz core existed then you'd still be able to get 3 8GHz cores. Still want the 3x4GHz?	globular-toast	9.549163	-5.2886834	comment	3.0	12.0	1588264401	7.8894787
23041699	RISC-V ISA  is just a programming in	RISC-V ISA  is just a programming interface and non-physical IP.The license fees for ARM Processor families are mostly for physical IP for microarchitecture.ARM provides selection of 40+ highly optimized physical processor IP cores for different purposes. Maybe you get  eventually similar selection  RISC-V architectures but they are not free. It takes lots of full time work to test and optimize those cores. If you write processor core implementation in verilog and give it away free you have done just 10% of the work.	Nokinside	9.411909	-5.6263857	comment	3.0	14.0	1588339118	-10.546762
23042693	Intel is dying under the weight of i	Intel is dying under the weight of its own technical debt.  AMD will eventually have this problem too as ARM catches up.Meanwhile, it's 2020 and and x86 instruction sets upgrades are infrequent compared to ARM. And x86 CPUs still are required to support 16-bit devices from 35 years ago.	CyanLite2	9.453811	-5.1862216	comment	3.0	28.0	1588345624	7.792418
23046621	I don't see how multithreaded stuff 	I don't see how multithreaded stuff will ever emulate well given arm's more relaxed memory consistency model.	cma	9.74522	-5.469825	comment	3.0	10.0	1588368021	-7.717572
23054499	"Also running on the emulator:
PDP-10"	"Also running on the emulator:
PDP-10 Logo,
PDP-11 Logo,
Applle II Logo.The emulator doesn't support the robot arm yet."	larsbrinkhoff	9.778784	-5.2110667	comment	3.0	12.0	1588449918	-7.5259438
23057377	Yea, that was disappointing indeed. 	"Yea, that was disappointing indeed. After reading the first several paragraphs,
I was hoping that the answer would be get an AMD processor instead of Intel , but nope.I hope that in the future some manufacturer(s) start making fully open source verifiably secure RISC-V (or ARM) processors, and that we have a migration over to that."	winter_blue	9.383837	-5.6167636	comment	3.0	14.0	1588489299	-10.592559
23058422	> Could a user tell it's happening? 	> Could a user tell it's happening? What signals would indicate this? Is it increased CPU usage disguised as a system process?Intel AMT allows redirecting graphics output and keyboard/mouse/USB input over network connection. It's like a hardware device connected to HDMI port to capture screen and to USB ports to send inputs, but it's built right into the motherboard. It doesn't spawn a process in the operating system or use resources to any meaningful degree. The OS knows about AMT only what the hardware tells it, if anything at all.Unlike software-based remote desktop solutions (VNC, TeamViewer), it's independent from the operating system. As long as the system is connected to power, AMT can run. You can log into a fully shut down computer, power it on and see boot logos and access BIOS b	mopsi	9.430832	-5.258631	comment	3.0	11.0	1588506088	7.843422
23059527	I just posted a comment asking about	I just posted a comment asking about multiprocessing/preemption - how do the root OS and virtualized OS share the CPU core when the virtual OS assumes it is the only thing responsible for scheduling thread execution?	evancox100	9.781772	-5.514995	comment	3.0	14.0	1588519440	-3.4369416
23061283	> I don't think it's meant to be use	> I don't think it's meant to be used by consumers, but for servers or supercomputers, that kind of stuff.Why would servers/supercomputers care about heterogeneous hardware (including multiple ISAs, even!)? If I'm playing around at home, that's great; I'd love to make a cluster out of a couple of old laptops, an old phone, and a Raspberry Pi. But at work, I'd just... buy a dozen identical servers. Even across generations, x86 is mostly uniform enough to just ignore the changes (with some minor gotchas around extensions, but if you only migrate forward that should be fine too).	yjftsjthsd-h	9.607179	-5.235638	comment	3.0	14.0	1588534692	-7.7533693
23067261	4 cores? Pro? 2020? lolEDIT:maybe 4 	4 cores? Pro? 2020? lolEDIT:maybe 4 cores are enough for development using non-compiled languages, and if you don't use Chrome and Electron apps, and not running several VMs and docker containers.Some programming languages like Julia and Erlang/Elixir will happily use all the cores available on your laptop to speed up calculations, run builds, tests and other development tasks.	nivertech	9.590423	-5.2537045	comment	3.0	16.0	1588596338	7.994131
23067315	4 cores is actually more than enough	4 cores is actually more than enough to do almost all development. I work on a four core PC right now (i7-4770k) running Linux and couple VMs and containers, one VM dedicated to running Windows 10 which is in turn running Citrix client. I have two 4K monitors and bunch of hardware. I work on webapps, backend software, have couple IDEs running at the same time and probably Zoom session, not to mention huge amount of Chrome tabs.It all works without hitch and if there is a hitch it is typically Chrome or Gnome misbehaving, not lack of cores.	lmilcin	9.660793	-5.2800145	comment	3.0	12.0	1588596573	7.9144917
23078834	I have a Ryzen 9 3900X. Officially i	I have a Ryzen 9 3900X. Officially it doesn't support ECC memory. In practice unregistered ECC DIMMs work fine, and ECC functions properly (single-bit correction, dual-bit detection).I assume the 3950X is the same way. The hardware is there, the official blessing is not.	Borealid	9.401537	-5.4682508	comment	3.0	17.0	1588678038	8.181608
23104360	How about single core performance? M	How about single core performance? Many games are pegged to one or two cores only. I've always found the AMD approach of throwing more cores at the problem not to be optimal.	bzb3	9.49967	-5.273299	comment	3.0	39.0	1588866555	7.955173
23104493	Definitely. But in my case I don't p	Definitely. But in my case I don't play the last of the last. Most games I play such as world of Warcraft or csgo use old engines and don't take advantage of many cores.	bzb3	9.508496	-5.22745	comment	3.0	15.0	1588867233	7.900129
23104703	I know it's not new stuff, go look a	"I know it's not new stuff, go look at Bluespec and their open-source HDL.For most hardware designers though, it is new. Most hardware designers are EEs and not CS people. I know many designers that do not even want to learn a programming language like python which has a relatively easy to read syntax. ML/Functional Programming languages require a completely different mindset, just like hardware designing does if you come from programming languages.I think the world is ripe for a new HDL. But the right foundations need to be there. It needs first class support with existing HDLs (VHDL, Verilog/SV). It needs to integrate with all the existing EDA tools in mixed language environments, and be easy to debug. Debugging is a huge problem in the ""new HDL"" space right now. Go look at Chisel. Google"	ancharm	9.097106	-5.4905996	comment	3.0	14.0	1588868341	8.559553
23108449	The C10k problem was challenging aro	The C10k problem was challenging around the turn of the century. I suppose it's now not. I wonder how much CPU would be saved using an event-based architecture.	kccqzy	9.574283	-5.3096814	comment	3.0	11.0	1588886142	7.9071393
23114407	"From a paper in that article:""Intel "	"From a paper in that article:""Intel has recently added support for monotonic counters [5] as an optional SGX feature that an enclave developer may use for rollback attack pro- tection, when available. However, the security and per- formance properties of this mechanism are not precisely documented. We performed a detailed analysis of SGX
counters and report our findings in Appendix B.
To summarize, we found out that counter updates take 80-250 ms and reads 60-140 ms. The non-volatile mem- ory used to implement the counter wears out after ap- proximately one million writes, making the counter func- tionality unusable after a couple of days of continuous use. Thus, SGX counters are unsuitable for systems where state updates are frequent and continuous.""permanently breaks lol"	pram	9.560709	-5.294841	comment	3.0	15.0	1588943247	-5.8005476
23114982	How long until we see an SGX-damagin	How long until we see an SGX-damaging malware in the wild that simply eats up all the monotonic counters?	rkagerer	9.521179	-5.266565	comment	3.0	12.0	1588946700	-5.834631
23139946	Aghh Linus... Now my feed will be fu	Aghh Linus... Now my feed will be full of him again!	bilekas	9.279231	-5.8941298	comment	3.0	10.0	1589184960	4.254293
23143555	Reminds me a lot of the Parallax Pro	Reminds me a lot of the Parallax Propeller: many simple cores optimized for bit-banging I/O and programmable logic. Of course this is much lower power and has many more cores.I think that many core architectures can actually be simpler to program in an embedded context than the traditional single core systems. It's akin to a hardware implementation of the actor model rather than an interrupt state machine or interrupt event loop. Being able to dedicate cores to single I/O tasks means you can bitbang almost anything. Here's HDMI running in a few lines of code on a Propeller 2 with no external components but the HDMI connector: https://forums.parallax.com/discussion/comment/1475075/#Comm...	mastax	9.537157	-5.28394	comment	3.0	13.0	1589213043	8.036998
23145823	I've been playing around embedded st	I've been playing around embedded stuff and hardware design recently and mostly started with arduino's and esp8266/32's, but have wanted to play around with both FPGA's and ARM boards for designing more complex things.I'm kinda lost on what ARM board to get though. This thing seems pretty cool, and others have recommended an STM32 board, but theres dozens of those in various form factors and chip features and I'm just not sure.Anyone know a good comparison of ARM based dev boards that gives a good description of the differences and maybe recommended applications?	non-entity	9.622712	-5.204712	comment	3.0	10.0	1589224462	-7.6843357
23149384	They are, indeed, impressive.  Keep 	"They are, indeed, impressive.  Keep in mind, though, that a Graviton ""vCPU"" is an actual core.  They are making direct comparisons to an Intel ""vCPU"", which is basically 1/2 a core (hyperthreading). I suppose what actually matters is performance per dollar, but it still feels a bit misleading."	tyingq	9.499834	-5.2353806	comment	3.0	11.0	1589244848	-8.51162
23159198	This is awesome. I've been following	This is awesome. I've been following along for a while, so please keep it up.I wish someday we'll get something like the ESP32 boards but with RISCV.	fluffything	9.382757	-5.625795	comment	3.0	19.0	1589314899	-10.503535
23160756	I tried some of SiFive's evaluation 	I tried some of SiFive's evaluation cores. They limit you quite a bit unless you pay. Furthermore, many of the FPGAs worth their salt were quite expensive. The K210 in the MaixBit form is only $20, and it comes with a camera and LCD. For hobbyists, I think it's a good compromise.I looked at the Xilinx FPGAs--the ones SiFive recommends, but they're quite pricey.Which FPGAs had you had luck with?	pavehawk2007	9.150804	-5.305194	comment	3.0	11.0	1589322099	8.171031
23180621	Well, OP didn't say MKL works well o	Well, OP didn't say MKL works well on AMD. But you can at least run it on a non-Intel CPU. Compare CUDA.	hyperbovine	9.265776	-5.3223605	comment	3.0	16.0	1589469761	7.978277
23189887	And the situation has only gotten wo	And the situation has only gotten worse since everyone and their coffee machine is running on x86. It is high time we created alternatives.	classified	9.68195	-5.261063	comment	3.0	14.0	1589528788	-7.719821
23194297	They can also be ambiguous.  Some pe	"They can also be ambiguous.  Some people think ""high five"" emojis are actually ""prayer hands"".  Which convey wildly different reactions to something.  Told your friend your Dad was diagnosed with cancer?  high five"	bcrosby95	9.787635	-6.273821	comment	3.0	12.0	1589561353	-13.954276
23195014	Emojis can have ambiguity too. My fr	"Emojis can have ambiguity too. My friends and have been using the eye roll emoji to signal we're being sarcastic for about 10 years. The un-animated version of this emoji looks like ""I'm not really thinking what I'm saying"", especially on Discord/Twitter.I've recently a colleague who used the tongue out emoji for sarcasm and the eye roll one for, well, eye rolling with disdain in reaction to something.The first chat discussions were then quite awkward, because when I were to write something like ""You should have tested your code before deploying it... :eyeroll:"", he was thinking I was openly looking down on him in front of the team.We had to have a real discussion about it. It made me tone down my use of emojis - and sarcasm. I suppose using animated emojis (they were in MSN I think?), or "	bchanudet	9.769083	-6.282243	comment	3.0	10.0	1589564709	-13.962889
23197405	I wonder if there's an economic argu	I wonder if there's an economic argument, at useful scales, to using FPGA's in general purpose servers to accelerate network performance. The purpose-built ASICs would win on cost-per-unit every time, but the FPGA would have some adaptability to new protocols or algorithms that the ASIC wouldn't.	EvanAnderson	9.087965	-5.326792	comment	3.0	10.0	1589576819	8.283359
23210724	This seems to be using some sort of 	This seems to be using some sort of homegrown python system (migen) for fpga development.If you really want to learn fpga/asic development do yourself a favor and learn a real hardware description language such as verilog or vhdl. It is really not that hard. If you have some minimal knowledge in digital systems you will be up and running in a few hours.And with a good teacher it will be really fun:https://www.fpga4fun.com/	panpanna	9.080406	-5.3621817	comment	3.0	14.0	1589706570	8.411248
23223047	As an expert witness, I would be exp	As an expert witness, I would be expected to present  evidence that the code is wrong in a way that produces  scientifically-invalid output. If instead I produced a bunch of nonsense about how the code would be in my opinion more efficient if it ran on multiple cores, that would be strong evidence that I failed in my task and was blowing smoke to cover it up.	matthewdgreen	9.764157	-5.4985347	comment	3.0	19.0	1589813475	7.95023
23225120	Maybe slightly off-topic, but how do	Maybe slightly off-topic, but how do y'all feel about the Epyc for workstation-type workloads?  I really want ECC for my next workstation, and my understanding is that Ryzen/Threadripper ECC support is very hit or miss (the common failure mode is that it will claim it's on, but not actually detect or correct memory errors).  But on the other hand, these Epyc chips sure seem slow on paper compared to consumer-grade stuff.  I am not sure it matters, though, and am interested in what HN's thoughts are there.	jrockway	9.383535	-5.3166733	comment	3.0	14.0	1589821482	7.9567204
23238166	Also, the whole Emoji's thing is dis	Also, the whole Emoji's thing is distracting to me. I just want to see plain text in simple san-serif fonts, with borders (which are apparently outdated in favor of massive emptiness of negative space).Visual cognitive load is ok as far as the brain can process blocks of information. Such as a table with borders. When you have emojis, colors, effects, etc without clarity of separation, you get something that becomes tiring after a little while to look at.	fermienrico	9.80284	-6.2685585	comment	3.0	14.0	1589912206	-13.958166
23239411	How heavy is the performance cost re	How heavy is the performance cost really? On x86, wouldn't a JO to a higher address take care of it? It would be a never-taken branch with perfect predictability.	jeffbee	9.816247	-5.6503434	comment	3.0	11.0	1589918309	-7.6978106
23240082	This really worries me: now the safe	This really worries me: now the safety of my data hinges on Intel's remote attestation and a password I can remember.	zeveb	9.518333	-5.213468	comment	3.0	11.0	1589921729	7.6801443
23247738	That is but not beyond what most PSU	That is but not beyond what most PSU’s can do these days. Also it’s only when you’re stressing all 10 cores. But it is significant.	Synaesthesia	9.527339	-5.2524624	comment	3.0	25.0	1589987224	7.794286
23249662	"""That said, Ivy Bridge and Haswell r"	"""That said, Ivy Bridge and Haswell really have to take the crown for ""longest-lived worthwhile CPUs"""".Sandy Bridge era CPUs (i5-2500/k, i7-2600/k, etc) were the ones that really shook up the market. Much lower power envelope and a large jump in performance from Nehalem. Ivy Bridge was the Tick-Tock iteration of SB, providing higher power usage/heat output (counterintuitively), with about a 5% IPC increase IIRC, based on the famous 3D Tri-Gate process. It was widely considered a bust at the time."	fishtacos	9.318613	-5.185109	comment	3.0	10.0	1589996661	7.799402
23266010	FPGA Noob here. I have 2 questions a	FPGA Noob here. I have 2 questions about FPGA's that I'm hoping someone here can help me out with:1. For the FPGAs i've looked at, you seem to have to initially configure them before being able to run your programs on them, kind of like EEPROM. I feel it would be much more interesting from a reconfigurable computing perspective if the devices were able to programatically re-configure on the fly as easily as it is to read and write to DRAM or Flash Memory. So what are the barriers that prevent the hardware from being able to do this?2. Its exciting to see projects like Symbiflow making great progress, but after reading some expert opinions[1] it seems like an extremely difficult challenge to attempt to reverse engineer hardware from commercial FPGA vendors who wish to keep their designs clo	acrossthepond10	9.103312	-5.359179	comment	3.0	11.0	1590098560	8.358802
23296665	Core count is not that important for	Core count is not that important for games.	TwoNineA	9.531329	-5.265583	comment	3.0	14.0	1590369128	7.9729457
23308018	The main point of running a CI proce	The main point of running a CI process is to stop you breaking the build, so you need it to run before the point where your first build happens. For most teams that will be on a merge to develop, because develop is deployed to a test or QA server. It'd be odd to run CI locally but you definitely want it to happen a long time before anything is ready to go to production.	onion2k	9.191973	-6.428756	comment	3.0	10.0	1590474260	6.1032453
23339221	I suppose the answer is to simply no	I suppose the answer is to simply not use Emoji in your documents.	dhritzkiv	9.798713	-6.261602	comment	3.0	16.0	1590683434	-13.934612
23338931	I don't like Emojis in my documents.	I don't like Emojis in my documents. I think they are distracting. Tools like Notion is actively promoting it like this new Github profile docs. Does anyone else feel the same? :-)	fermienrico	9.800707	-6.2590356	comment	3.0	21.0	1590682105	-13.962368
23347020	There's substantial difference betwe	There's substantial difference between AVX and SSE. You can get a performance boost just by compiling with AVX2 or AVX512 support.	29athrowaway	9.500878	-5.5430517	comment	3.0	13.0	1590735639	-3.8054879
23354453	It seems you're trying to emulate on	"It seems you're trying to emulate one of Linus's classic rants with that comment, but if you wouldn't mind a bit of constructive feedback:* The word selection in your comment isn't quite right. Linus has been known to use expletives others deem inappropriate when reviewing another human being's work - but since that's what you seem to be going for, you might as well commit to the bit.* The big difference between your comment and Linus's rants is that he's doing it when giving feedback that other people actually requested, rather than going off at some random person on the internet.* It seems your Linus impression is also a bit out-of-date, as he has publicly apologized for being a jerk in 2018. Maybe you were going for ""vintage Linus"", but it just didn't cut it for me.Although you've naile"	fasterthanlime	9.278953	-5.8856916	comment	3.0	19.0	1590780546	4.255184
28006021	> In 2003, AMD launched their 64-bit	> In 2003, AMD launched their 64-bit, but Pentium-compatible, Opteron CPU. Everyone stopped buying Intel CPUs for a while. [...] almost everyone immediately embraced AMD's instruction set and no one but HP wanted anything to do with Itanium.Huh, I never really connected the dots before, but TIL that this is why 64-bit images and package repositories of various Linux distributions were referred to as `amd64`...	shrikant	9.561907	-5.3687253	comment	3.0	12.0	1627636369	-7.82248
28006232	I note that Debian still has an unof	I note that Debian still has an unofficial ia64 port:https://www.debian.org/ports/ia64/ https://wiki.debian.org/Ports/ia64	pabs3	9.724238	-5.370744	comment	3.0	10.0	1627638395	-7.8668175
28006650	> it fairly flew on expert-tuned ass	> it fairly flew on expert-tuned assemblyThere's your problem.Given the bajillion programs out there already, how many companies wanted to dig into assembly instead of just waiting 18-24 months for Moore's Law to speed up their software?It's all very well and nice to have nice hardware in theory, but if you can't compile existing code to be fairly fast, then in practice you just have some expensive sand (silicon) in the shape of a square.> People let their (understandable) hatred of Intel-the-company colour their technical judgement.So getting back to your first statement: no they didn't. Everyone was basically all-in on Itanium. All the Unix vendors (except Sun) dropped their own architectures and steered their customers toward Intel. Microsoft released software for it.But it seems the ma	throw0101a	9.654239	-5.2317147	comment	3.0	12.0	1627642814	7.72267
28007248	> It killed a lot of other interesti	> It killed a lot of other interesting architectures and gave nothing in return.What sort of architectures (if any) got killed as a direct result of developing IA-64?That aside, though odd and impractical, I found Itanium to be at least a technically interesting perspective (both in terms of architecture, ie VLIW, and in terms of the amount of technical work it inspired at HP and Intel, such as the Itanium C++ abi [1])[1] https://itanium-cxx-abi.github.io/cxx-abi/abi-eh.html	frjalex	9.538576	-5.487539	comment	3.0	13.0	1627648358	-7.800123
28008419	Alpha was DEC, HP had PA-RISC. I had	Alpha was DEC, HP had PA-RISC. I had a PA-RISC in my office and had to have facilities come and adjust air conditioning airflow because the computer put off so much heat.	throwaway9870	9.554351	-5.33595	comment	3.0	12.0	1627655678	-7.865451
28009728	I wish I knew which parts Linus was 	"I wish I knew which parts Linus was talking about. Segmented addressing? Can't be that. Assymetric registers? Probably not that. Vitual 86 mode? Meh. Variable instruction length? God I hope not. Begs the question: what oddities?I think this is the most astute statement he makes: ""yeah, and the fact that they are everywhere.""> ARM's Johnny-come-lately 64-bit implementation that has gone farther up and downWhat do you mean? Arm is primarily embedded IP, where 64b only recently has come en vogue (unless you mean A5/A7?, I'm talking Cortex-M). Arm competitors are really Renesas, Synopsys, TI, and a number of Chinese chips, and 64b isn't a prioirity in most of that space. Not defending anyone, just not sure what you mean."	SavantIdiot	9.68116	-5.4936466	comment	3.0	16.0	1627662952	-7.720421
28040971	One of the great successes of Intel 	One of the great successes of Intel has definitely been establishing their processors as the default optimization status quo. Beyond the scheduler, compilers also optimize (by default) for Intel instruction latencies and pipelines.One way to remedy this would be to ship more distros with march=native as the default. You only need to specify the architecture when you are building binaries for distribution (which mostly happens on CI servers these days). This would result in better perf on not only AMD chips, but also newer Intel chips.	zamalek	9.3274145	-5.2419825	comment	3.0	17.0	1627930027	7.880717
28062296	To be clear, the blade adds TPM 2.0 	To be clear, the blade adds TPM 2.0 via an Infineon chip, and you can interact with the chip, but features like secure boot require bootloader-level integration, and at this time, since no other Pi hardware has TPM, the Pi's closed-source bootloader doesn't support it.Also something interesting to noodle on: technically the Pi 4/CM4/Pi 400 have ECC RAM [1] — but some ECC functionality may require CPU-level integration... which I'm guessing isn't present on the Pi's SoC (but who knows? I posted this forum topic asking for clarification: [2]).[1] Product brief mentions LPDDR4 with on-die ECC:  https://datasheets.raspberrypi.org/rpi4/raspberry-pi-4-produ...[2] https://www.raspberrypi.org/forums/viewtopic.php?t=315415	geerlingguy	9.55485	-5.406291	comment	3.0	18.0	1628091667	-8.362673
28130466	If only we had a decentralized versi	If only we had a decentralized version control system.	singlow	8.812439	-6.36708	comment	3.0	14.0	1628611225	-11.74401
28136883	> Things like inline-kTLS (where the	> Things like inline-kTLS (where the NIC does the TLS encryption) reduce the memory bandwidth requirements by roughly halfIf storage is accessed via PCI-e, couldn't one just pipe it straight from the storage to the NIC, using p2pdma[1][2] or similar? Seems you could skip all of the main DRAM round-trip this way.Or aren't things that simple?[1]: https://www.kernel.org/doc/html/latest/driver-api/pci/p2pdma...[2]: https://youtu.be/LDOlqgUZtHE?t=612	magicalhippo	9.7846	-5.2147064	comment	3.0	12.0	1628645503	7.4540596
28145405	Congratulations! You have managed to	Congratulations! You have managed to put an emoji on HN!	speedgoose	9.804117	-6.2561474	comment	3.0	10.0	1628704881	13.025573
28147454	Gigabyte servers hacked: 112GB of se	Gigabyte servers hacked: 112GB of secret data from AMD, Intel leaked	dmitrygr	9.421293	-5.228902	story	3.0	34.0	1628714385	7.8558455
28152425	what kind of psychopath puts emojis 	what kind of psychopath puts emojis in filenames??	cerved	9.848723	-6.2601037	comment	3.0	12.0	1628746943	-13.970116
28187169	You can put emojis almost everywhere	You can put emojis almost everywhere.	soheil	9.796024	-6.2669177	comment	3.0	10.0	1629016779	-13.951178
28200499	It's not just a problem for font aut	"It's not just a problem for font authors. What happens with this can change the intent of what people are writing pretty radically. If someone tweets ""I support [afghanistan flag]"" and that's seen by the wrong people with the wrong font it can literally mean the difference between life and death for the poster.Edit: Flag emojis aren't supported on HN"	shaftway	9.833147	-6.2350054	comment	3.0	10.0	1629134265	6.448264
28225340	> Following this list for a hobby, s	> Following this list for a hobby, side project, or for the 0.1.0 release of a new library is entirely unnecessary.This may be a hot take, but I'll go and take my chances.Following this list for a hobby or side project or even an initial release of a library is a very good idea. It's hard to tell what kinds of libraries will or won't catch on. As soon as you have downstream users, they will get annoyed by churn. If given a checklist, it seems reasonable to me to expect people to actually follow it out of obligation to your future downstream consumers of the library.Not only that, but I believe that most of the things on that list boils down to good engineering. Following good practice  early on even just in a hobby/side project will be rewarded as the project grows.By releasing a library (	rdpintqogeogsaa	9.736047	-5.638447	comment	3.0	10.0	1629311707	-6.0705566
28250258	Always love to see a 6502 post here 	"Always love to see a 6502 post here on HN. It's a really unique processor compared to other 8-bit processors at the time. With only one general purpose register, and memory mapped IO, the 6502 offers a ton of ""addressing modes"" to solve problems that the 8080 would solve with register transfers.Ben Eater (http://beneater.net/) makes a neat video series and accompanying product kit where you build a 6502 on a breadboard, if you're looking for something a little more approachable than this (very cool) project!"	cdcarter	9.609529	-5.400986	comment	3.0	17.0	1629487271	-7.3919935
28261874	I'll have a glass of whatever you're	I'll have a glass of whatever you're having.Intel's first proper competitor to Zen is coming out soon, and from what I've seen so far it looks like a monster. Couple this with them launching GPU's into the most demand-heavy market we might ever see, they don't have to do much to have a good few years.Also, every measure I've ever seen has AMD still at least a doubling away from parity with Intel, so I find your figure very hard to believe.	mhh__	9.254028	-5.1923137	comment	3.0	10.0	1629592148	7.8718367
28280734	The secret sauce is in the software.	The secret sauce is in the software. The hardware isn’t that revolutionary. On top of that, fpga vendors have this habit of outsourcing every little thing. This makes it super difficult for them to embrace open source give the IP liabilities.	deelowe	9.079822	-5.354105	comment	3.0	12.0	1629746696	8.375341
28298789	Didn't Intel already try something l	Didn't Intel already try something like this with Lakefield? It didn't go well.Let's say the thread starts on a high performance core and enables the code paths for features the efficiency core doesn't have. How will the software know to not move the thread to the efficiency core? If it did do so wouldn't it throw errors? I frankly don't see how they can solve this problem with software and not have to recompile everything to be hybrid arch aware. In the android space everyone throws their phones away every few years so this hasn't been an issue. To me it seems like Intel is creating another Itanic situation where no one is going to compile their software to target the hybrid paradigm.	kfprt	9.407019	-5.2308292	comment	3.0	24.0	1629875281	7.831776
28298874	Alder Lake fixes this issue by inclu	Alder Lake fixes this issue by including all features on the efficiency cores, so a thread should be able to move between performance and efficiency cores seamlessly.It also drops AVX-512 support entirely, presumably because the efficiency cores don’t support it and the problem you mention isn’t easily solvable.	praseodym	9.44344	-5.509143	comment	3.0	15.0	1629876055	8.074808
28323648	I could be dead wrong, but isn't x86	I could be dead wrong, but isn't x86 not an architecture suited for embedded systems?	gchamonlive	9.696966	-5.3207994	comment	3.0	10.0	1630030960	-7.7968287
28325790	This also supports ecc memory...	This also supports ecc memory...	accountofme	9.477965	-5.491117	comment	3.0	12.0	1630056503	8.220785
28377764	Admittedly, I got a B in 410 and onl	Admittedly, I got a B in 410 and only managed to TA 213, but I do work in the space now.Yes, it’s hard to do research if you start at “let’s design a kernel from scratch,” but you’d never need to do that. You can just hack Linux or a bsd, or even use something like bpf to extend it.The thing that annoyed me about 410 is that when I switched to Linux I realized that pusha/popa didn’t matter at all. It was a good course for writing reentrant C and learning the very basics of hardware, but the really hard stuff is in the weird dynamics of memory management on NUMA systems and work conserving io, which you can’t get anywhere near if you are starting from scratch.	alexgartrell	9.771234	-5.3072286	comment	3.0	13.0	1630487798	-7.764081
28378346	My case for having 8 fast Firestorm 	"My case for having 8 fast Firestorm cores instead of 4 fast + 4 slow cores is simple - the majority of Desktop PC users don't care about sacrificing performance to save a few watts. When a PC is running slow because of a cpu intensive task, nobody is going to appreciate that it is saving a few more watts.And from the figures in the article, it looks like 1 Firestorm core is very roughly equal to 2 Icestorm cores -    Relative to their Firestorm times, Icestorms performed more slowly by:

      190% running assembly language
      330% running simd (Accelerate) library functions
      280% running simple Swift
      550% running ‘idiomatic’ Swift

So 5 or 6 Firestorm cores could have matched the current 4 + 4 config (disregarding the valid point you made about the die area)."	webmobdev	9.529316	-5.217911	comment	3.0	12.0	1630494303	7.908686
28387212	Ask HN: What server or CPU/motherboa	Ask HN: What server or CPU/motherboard combo offers maximum memory bandwidth?	kloch	9.778149	-5.328461	story	3.0	3.0	1630541963	7.879195
28390250	AMD64 hit the market in 2003. Adopti	AMD64 hit the market in 2003. Adoption on the software, desktop side was mostly delayed because Vista as a whole failed and XP64 was very niche (on servers and Linux desktops everyone jumped on it). 32 bit Windows outside VMs is only really needed for Intels gimped low end SoCs which lacked AMD64 support for a long time.The value prop of AMD64 was very clear from the start: better performance, more memory, without porting to a 64 bit RISC which coincidentally were all dying or dead at the time. The only other option at the time was IA64 - Itanium - which sucked and was way more expensive.The value prop of v6 is: ??? Learn an entirely new networking stack! Enjoy degraded service because v6 will cause inexplicable hangs and timeouts! Deal with a weird ass protocol founded on perimeter securi	formerly_proven	9.603922	-5.290149	comment	3.0	22.0	1630576330	-7.7824574
28399270	> I’m honestly shocked there are HN 	"> I’m honestly shocked there are HN users who are unaware of the tone implications.The tone implications are not an objective fact. They are a quirk of your social group.As I wrote above, I'm ""aware"" of the implication in that I have seen it described many times. But it's not an implication that actually exists in any context I am part of.By contrast, the belief that the ordinary smile emoji U+14642 constitutes an insult rather than a smile is a very real, and therefore more painful and annoying, part of my personal context."	thaumasiotes	9.788633	-6.2539296	comment	3.0	14.0	1630630304	-13.968806
28402509	RISC-V isn't an architecture you'd w	RISC-V isn't an architecture you'd want to run a computer on. They'd want to use it for various embedded processors that are either on die or off die. For example adding a RISC-V based co-processor on to an apple silicon chip.Alternatively they could also be doing it as a backstop in case ARM gets bought by NVidia and NVidia tries to shut them out. They can threaten RISC-V against them.	mlindner	9.390322	-5.647538	comment	3.0	62.0	1630665696	-10.551875
28402601	There was an article on HN where som	There was an article on HN where someone called RISC-V a bit too RISCy. ARM has instructions that combine things that are commonly combined, which increases code density and requires fewer instruction decoders (as well as possibly instruction combine logic if there are micro/macro-ops) for the same performance.	ahartmetz	9.474967	-5.713579	comment	3.0	16.0	1630666724	-10.518473
28402621	Not knowledgeable in the area, but f	Not knowledgeable in the area, but from what I gather RISC-V is not as performant as ARM or Intel/AMD. Yes it can run at faster clock speeds due to its simplicity, but the flip side is that it requires more instructions (and more memory and more cache) to do the same job.Besides, there don't seem to be good multicore architectures for RISC-V, that's probably the biggest show stopper in this age of multicore computing.	mojuba	9.40142	-5.645496	comment	3.0	36.0	1630666871	-10.5447645
28412584	I noticed that when I click the thum	I noticed that when I click the thumbs-up emoji in Slack, I now have to select its skin color. That's fucking dystopian.	KKKKkkkk1	9.753316	-6.2472568	comment	3.0	13.0	1630736538	-13.938525
28425900	The intentional weakening of ECC has	The intentional weakening of ECC has been an open secret for decades, and it's suspicious that this wasn't known by Juniper.I wonder if they were coerced into including it?https://www.schneier.com/blog/archives/2007/11/the_strange_s...	jorblumesea	9.49115	-5.4884276	comment	3.0	10.0	1630862265	8.277118
28430443	I don't think Mac/Darwin has cgroups	I don't think Mac/Darwin has cgroups but it's based on BSD to it might have jails?	jamesfinlayson	9.848638	-6.3717055	comment	3.0	20.0	1630904402	10.04789
28433258	Precisely. It is not an emoji and is	Precisely. It is not an emoji and is under the miscellaneous unicode symbols in most OSes and the like. Not exactly 'Emojis'.But of course on Twitter, misinformation is ok.Downvoters: So you're telling me it is an emoji then?Is '' an emoji then? Can you see it?	rvz	9.823925	-6.2637396	comment	3.0	16.0	1630933421	-13.973071
28434278	A very simple question: Is '' aka (	A very simple question: Is '' aka (U+F8FF) and 'U+261A' emojis?Yes or No?	rvz	9.871993	-6.255048	comment	3.0	10.0	1630940179	-13.951503
28437937	That's the biggest thing to learn fr	That's the biggest thing to learn from bullies like Linus - he hates everything and thinks everyone's an idiot, so where does he go when he actually needs to express something strongly? He can't go anywhere. It's not an effective way to communicate.	chrisseaton	9.276328	-5.884638	comment	3.0	19.0	1630961314	4.2780905
28445150	Remember, versioning rules are like 	Remember, versioning rules are like D&D. The purpose of the rules is to give you a framework to operate in that is easily understood in the vast majority of situations, not to comprehensively define every aspect. You don't get any rewards for following the rules, after all. When things get weird, you just ask the DM, they make a ruling, and then you keep the game moving forward.There's always going to be corner cases. Fortunately, there is always a person available to act as a referee.	da_chicken	8.850895	-6.3262777	comment	3.0	10.0	1631024189	1.0026083
28468936	"""Of the 100+ customers, I'd say abou"	"""Of the 100+ customers, I'd say about a third of them are interested in that x86ish of our ecosystem,"" said Gelsinger.Put another way two thirds are not interested in x86.Sorry to say that this article reads like an Intel press release."	klelatti	9.579319	-5.2322106	comment	3.0	17.0	1631190747	7.7058597
28469229	RISC-V sooner than later, the uncert	RISC-V sooner than later, the uncertainty around ARM the company due to the buyout and the whole thing with ARM China is just yuck. But honestly nothing the M1 does x86/RISC-V can't do. At this point ISA is just an ABI it's more about keeping execution pipes filled, as long as a frontend can do that it can absolutely clean up on the metrics.Another thing although speculative: Windows 11's move to require UEFI/x64/SecureBoot could be prep for AMD and Intel to completely drop a ton of legacy support (16bit etc.) in the chips. I'd give it about 20% chance of happening, but I definitely wouldn't rule it out given you can emulate a 386 easier than you virtualize one.	leeter	9.515241	-5.474592	comment	3.0	13.0	1631192898	-10.371509
28469957	No kidding, my thoughts exactly.Nowa	No kidding, my thoughts exactly.Nowadays embedded development is revolving around ARM pretty heavily. Maybe RISC-V in the future, but for now, it's ARM, definitely not x86.Had Intel done that 20-25 years ago the story might be completely different.	vardump	9.623332	-5.390797	comment	3.0	17.0	1631197136	-7.8140903
28481074	At least Intel ME is actually in the	At least Intel ME is actually in the PCH, so it's theoretically possible to bring up an Intel CPU without it by developing a replacement chip but from what I understand the PSP is integrated into AMD CPUs so there would be no way to develop a replacement. Both have had a lot of vulnerabilities though and there's been some success in partially disabling ME, nothing that I know of on PSP though. There have been plenty of vulnerabilities in both, so I wouldn't say it's hopeless even if ME did get chip integrated.I'm not sure why you think the government has anything to do with it though. I don't know what motivated them but I would suspect DRM lobbies first.	guerrilla	9.400091	-5.210825	comment	3.0	10.0	1631279715	7.8250656
28482173	On essentially every PC that support	"On essentially every PC that supports different sizes of RAM modules the firmware has to jump through somewhat interesting hoops in order to configure/enable the memory controller. DDR4 training is just one part of this. Typical flow goes something like this:* All cores are brought out of reset. All cores start executing code from the end of 32b physical address space, hopefully some EPROM with firmware lives there. (One thing of note is that yes, intel says that there is no such thing as ""unreal mode"", but everything after i386 boots into unreal mode)* Initial state of EDX signifies the position of CPU in SMP system, one core is designated as system processor, all other are application processors and thus do minimal APIC initialization and then enter halt and wait for IPI.* The system pro"	dfox	9.858531	-5.3481083	comment	3.0	10.0	1631284655	7.993411
28506715	Has anyone reversed-engineered the A	Has anyone reversed-engineered the Apple emoji dictionary that maps some keywords to emojis? Last time I checked, they only shipped binaries on the newest MacOS. Would love to use that mapping to elevate search on my custom emoji picker.	bhl	9.805617	-6.262208	comment	3.0	11.0	1631494669	12.935523
28510558	Weakest part of CI/CD workflows is w	Weakest part of CI/CD workflows is when code requires corresponding infrastructure change, such as creation or modification of S3 bucket, IAM permission or pubsub creation. Worst part is when such changes require carefull  orchestration.I am yet to see a development workflow, capable of developing and releasing something as simple as no dowmtime migration of API to another load balancer.	rossmohax	9.202149	-6.422825	comment	3.0	12.0	1631535814	-10.014142
28516367	I am surprised by the reactions. The	"I am surprised by the reactions. The author is just proposing a workflow where PRs are optional. For many years we worked without PRs at all.It bothers me that it seems like developers no longer do  ""Continuous Integration"" which IMHO is one of the most important software engineering practices. Companies do CI/CD pipelines, but that is not even close to ""Continuous Integration""  - Maintain a Single Source Repository.

  - Automate the Build

  - Make Your Build Self-Testing

  - Everyone Commits To the Mainline Every Day

  - Every Commit Should Build the Mainline on an Integration Machine

  - Fix Broken Builds Immediately

  - Keep the Build Fast

  - Test in a Clone of the Production Environment

  - Make it Easy for Anyone to Get the Latest Executable

  - Everyone can see what's happe"	corpMaverick	9.116604	-6.4174037	comment	3.0	10.0	1631564574	5.992611
28525083	I very nearly want them to double do	I very nearly want them to double down on this disastrous strategy so in 3-5 years we’ll all be saved from Windows by an MS-run Linux distro (with windows theming, naturally) that just runs Wine+some MS internal goodies for backwards compat. It’s really not that different from Apple’s approach with Rosetta 2 in M1.	vanilla_nut	9.787567	-5.2195144	comment	3.0	11.0	1631628634	7.544071
28541053	I'm convinced that David Harland's R	I'm convinced that David Harland's Rekursiv[1:] machine _is_ the manner by which lambda et al. might be implemented at the machine level. Unfortunately, Rekursiv seems to have died an ignominious death, with the last Rekursiv chip having fallen off the side of a steamboat (apocrypha; I remember having read this, but I'm unable to find the original citation.)The Rekursiv advantage is its ability to do recursion on the bare-metal. It's described as an object-oriented architecture. Its memory was a persistent store of objects, with each object having its size, type, and position known in memory.[1] https://en.wikipedia.org/wiki/Rekursiv	cybernautique	9.519352	-5.189464	comment	3.0	18.0	1631722890	8.159328
28543017	> The Unicode Consortium is working 	"> The Unicode Consortium is working to limit the number of new emoji added in each new version of the standard to stay ""focused on what is useful"" and reduce the amount of work that OS and app developers need to do to support new emoji every year.That ship already sailed. I'll repeat my usual rant against emojis. The emojis to convey emotions are great and an useful addition to text-based communication, I like them. The emojis describing objects are useless at best and terrible at worse. The reality they describe is at best that of a few people living in something like San Francisco, at worse an imaginary world that's a grotesque approximation of our reality. Just look at the food emojis: https://emojipedia.org/food-drink/. It's like what people would eat in a TV series, not what most peop"	Zababa	9.810336	-6.261463	comment	3.0	31.0	1631732771	-13.952729
28564440	Russian Company Develops 32-Bit RISC	Russian Company Develops 32-Bit RISC-V Microcontroller	rbanffy	9.400863	-5.665564	story	3.0	39.0	1631880195	-10.545993
28566916	I'm curious why the Neoverse N1/N2 d	"I'm curious why the Neoverse N1/N2 designers left SMT off of the table?I'd assume that any workload that benefits from 80 cores would benefit from 160-threads (on those 80 cores). Apple's decision to avoid SMT on M1 kinda-sorta makes sense, from the perspective that phones probably don't have throughput-sensitive workloads like servers.But if databases / other systems with lots of I/O or RAM-heavy wait times start coming up, surely SMT would easily improve performance without much costs in area or power?---------It seems like the lower-power E1 core (Efficiency core) has SMT. So the ARM / Neoverse team has the experience to bring SMT should they desire it. This suggests that there's some design reason they left SMT off the table.The N1/N2 cores are more ""general purpose"", so I'd assume tha"	dragontamer	9.555466	-5.2348638	comment	3.0	13.0	1631893934	8.060921
28567309	What is the size comparison to a sys	What is the size comparison to a system with x86 cores and similar RAM etc? Epyc has 64 cores right?	belltaco	9.362494	-5.233925	comment	3.0	10.0	1631895614	7.9384193
28578543	I figure someone might as well go wh	I figure someone might as well go whole-hog on that and build a PC with just a big ol' FPGA.	autoliteInline	9.138864	-5.2524676	comment	3.0	13.0	1631992916	8.267152
28578868	Someone should ban Linus Torvalds th	"Someone should ban Linus Torvalds then. C'mon we are adults: we resolve things by talking, not by calling the @admins.And based on the imgur you posted, I think it all started with Tim's message at 11:00 am (just after Peter's message at 10:58 am): Peter got ""clicked"" by Tim."	sdevonoes	9.28969	-5.8763857	comment	3.0	11.0	1631995624	4.2449293
28579134	How does the open/libre/trustworthy 	How does the open/libre/trustworthy potential of PPC and Power products compare with RISC-V?  Current, and near future?This is something I've been wondering.  It's started looking like there will be a lot more hardware options based on RISC-V.  Thus far, PPC/Power has had better libre options due to: https://www.raptorcs.com/  I hope there will be healthy competition from open/libre/trustworthy and performant RISC-V boards.	neilv	9.381095	-5.6408634	comment	3.0	13.0	1631997717	-10.573271
28601661	> Thus begins the slide from RISC to	> Thus begins the slide from RISC to (what POWER/PowerPC ended up calling) FISC.You mean from RISC to CISC, right?	marcodiego	9.435333	-5.7136254	comment	3.0	12.0	1632193270	-10.482831
28607548	>That tool – a small screwdriver – i	>That tool – a small screwdriver – is also sufficient to upgrade the CPUCPU isn't up-gradable without switching out the entire mainboard, which I'm fine with, once I get an AMD version that is :)	MMS21	9.327465	-5.1959734	comment	3.0	27.0	1632246209	7.8132114
28608132	Linus has shown his flagrant disrega	Linus has shown his flagrant disregard for impartiality or any form of integrity over and over again. Look through the LTT back catalogue and you’ll see that Intel is big sponsor of theirs. The fact that he gives “honest” reviews of Intel products doesn’t magically make it okay.You’d never see Dr. Ian Cutress of AnandTech or Steve from GamersNexus pulling this shit.Of course he makes much more money than both of them combined. Make no mistake that he is an entertainer and a businessman.	jagger27	9.3099375	-5.4567027	comment	3.0	13.0	1632248966	4.194911
28610910	> performancehttps://wccftech.com/in	> performancehttps://wccftech.com/intel-and-amd-x86-mobility-cpus-destroy...	2OEH8eoCRo0	9.431059	-5.199078	comment	3.0	10.0	1632263973	7.8358865
28624229	Apologies if this is obvious - is th	Apologies if this is obvious - is this ISA specific, or does it sit upon cross platform libs?I ask because I'm *very* interested in this, but am working on ARMEdit - just to be clear why I'm interested. For me it matters not if Ruby is slow, until it does, which is usually a very specific and obvious piece of code.	throwawaygimp	9.619565	-5.5559254	comment	3.0	11.0	1632360424	-7.775088
28658489	For those people that have a PDP-10 	For those people that have a PDP-10 sitting around :P	Aeolun	9.822294	-5.4543266	comment	3.0	11.0	1632631979	-7.5128436
27879713	PDP-10 Live Coding	PDP-10 Live Coding	larsbrinkhoff	9.817297	-5.393139	story	3.0	12.0	1626674754	-7.519484
27899243	I don’t see this happening unless it	I don’t see this happening unless it makes it into the ARM ISA.	saagarjha	9.55649	-5.4008665	comment	3.0	12.0	1626814763	-7.720452
27929099	> In real world tasks (web browsing,	> In real world tasks (web browsing, opening an IDE)My real-world task is not opening an IDE, it’s using that IDE. Modern C++ compilers are using all available CPU cores just fine.> It only loses to AMD in multi threaded benchmarksThese are the only workloads I care about. Not just compilation, many other things as well.You only need single-threaded performance for 2 things, for the stuff that’s inherently serial like gzip, or to run programs made more than 5-10 years ago.I don’t normally play games on a laptop, but even videogames use multiple cores for decades now, since the Xbox 360 / PS3 generation.	Const-me	9.693586	-5.37797	comment	3.0	14.0	1627035799	8.004797
27931202	How do they get the cycles/elem and 	How do they get the cycles/elem and instrs/cycle counts? Is it via the perf utility? Or something they calculate? Or they get it some other way?	codetrotter	9.670602	-5.2356324	comment	3.0	14.0	1627051219	7.6108856
27941028	AMD's SEV and Intel's SGX should pro	AMD's SEV and Intel's SGX should protect from this. Of course, you still have to take the VPS provider's word that they've enabled them on their CPUs.	10000truths	9.423202	-5.3029084	comment	3.0	10.0	1627135403	8.01606
27960470	I know ARM in principal supports BE,	I know ARM in principal supports BE, but never heard real BE ARM products yet. Is there one? I am just curious.	kbumsik	9.59821	-5.250256	comment	3.0	11.0	1627312696	-7.6777115
27972003	Yeah, that's irritating.  I do recog	Yeah, that's irritating.  I do recognize that mainframes had many of the things, forever, that are buzzwords now.But trying to tie an extremely compute intensive requirement (AI) to an environment with probably the highest $$/MIPS is just...dumb.	tyingq	9.579968	-5.5578594	comment	3.0	12.0	1627391700	-10.377297
27997564	I had to maintain an IA-64 Linux sys	I had to maintain an IA-64 Linux system at a previous job, and it was such an odd duck. The OS did a decent job of abstracting away most of the weirdness, but at the end of the day it was just a very slow server. The compiler breakthroughs that Intel was counting on to make it competitive never happened, and since its unusual architecture made it bad at running code not specifically tuned to it, the end result was that nothing ran great on it. I’m sure that HP had some highly optimized code that ran like greased lightning, but that never worked its way out to the general public.I admit that I’m glad Itanium finally died. It killed a lot of other interesting architectures and gave nothing in return.	kstrauser	9.541563	-5.503751	comment	3.0	16.0	1627571971	-7.8076553
12015523	Intel has had some bad luck trying t	Intel has had some bad luck trying to move past x86.  ia432, i860, i960 (which found niche markets), and ia64.The revisions to the sales forecasts from market research companies were ugly https://en.wikipedia.org/wiki/File:Itanium_Sales_Forecasts_e...And it killed MIPS and ALPHA architectures on the server, but I guess ended up pushing everyone towards x86 while ia64 was delayed until AMD jumped in an released x86-64.	rrmm	9.500937	-5.2889457	comment	3.0	29.0	1467377059	-7.780054
12017222	I believe if AMD hadn't released x86	I believe if AMD hadn't released x86-64, our desktops would be running on Itaniums.It would take some time to sort of the issues, but given the Wintel stronghold on the desktop,  everyone would be moving screaming into Itanium and feel happy about it later on.But AMD gave people an alternative, so Itanium died.	pjmlp	9.4940605	-5.436825	comment	3.0	16.0	1467388792	-7.77966
12018879	> Designing a manycore CPU, which th	> Designing a manycore CPU, which the Post-K processor will almost certainly be, with a simpler RISC core as its base, is inherently more efficient than trying to do that with a more complex architecture like SPARC64.Honestly, ARM is a very complex architecture these days.  There's somewhere in the neighborhood of a thousand instructions.  It's very close to x86 in complexity.  Tons of cruft built up over the past thirty years too (although it was a cleaner architecture than x86 to start off with so it has that going for it).	monocasa	9.58768	-5.4596505	comment	3.0	26.0	1467400145	-10.435734
12019484	interesting, to say the least, choic	"interesting, to say the least, choice for Fujitsu, i mean they do have SPARC/RISC experience and given that the current top dog in the world is Alpha/RISC based https://en.wikipedia.org/wiki/Sunway_TaihuLight , it seem strange to make such a huge bet on completely new architecture - Top500 has no ARM systems at least at the top of the list.Beside big picture, there are such pesky details as ""Fortran for ARM"" HPC compiler. All these bearded and not so guys who walked Sun hallways for years ... The Intel HPC compilers also well established. What is available for ARM in that department?"	trhway	9.559151	-5.210698	comment	3.0	11.0	1467405699	-7.7521224
12035550	"As so happens, an article in the ""po"	"As so happens, an article in the ""popular press"" totally misses the point.This is about the ""Megaprocessor"" - a CPU built entirely from discrete components.  It's an amazing project, superbly executed, and submitted/discussed here on HN many times.You can see some of the previous submissions by using this search:https://hn.algolia.com/?query=megaprocessor&sort=byDate&date...Recent submissions haven't had much discussion, but it deserves it.  The testing and verification processes alone are fascinating - just how do you test something like this?Amazing project."	CarolineW	9.672203	-5.4618473	comment	3.0	22.0	1467716046	7.8214645
12037114	What are we up to now? Three preload	What are we up to now? Three preloaded spyware scandals, possible remote execution via the Intel stack and now this vulnerability. That's just what we know about, who knows what else exists. I don't think I can buy another one, which is sad as I think it was a timeless and great design.	jkldotio	9.490254	-5.2479796	comment	3.0	18.0	1467732815	7.7999277
12048997	I used to use MSE as it was so light	I used to use MSE as it was so light, but it seems to be awful.https://www.av-test.org/en/compare-manufacturer-results/	Sarkie	9.554799	-5.352364	comment	3.0	12.0	1467896386	8.046463
12053198	I am curious if someone could shed s	"I am curious if someone could shed some light on page 15 - ""Illusion: Consistent Memory Models"", specifically:X86 is very conservative, so is Sparc
 Power, MIPS less so
 IA64 & Azul very aggressiveI dont't thing I've heard the term ""conservative memory model"" before, in what sense are x86 and SPARC conservative?Also why is Azul mentioned as an ISA?"	bogomipz	9.652785	-5.581471	comment	3.0	16.0	1467943306	-7.7132125
12066341	The title is cutting out an importan	"The title is cutting out an important part of my report's story: ""Avoiding ISA Bloat with Macro-Op Fusion"".You can still specialize your processor to eke out more performance, but you (often) don't need to change the ISA to do it!Why add load-pair instructions (like ARMv8 did) when you can simulate the exact same effects using macro-op fusion? And code size doesn't matter, since RISC-V's compressed ISA extension makes RISC-V the densest ISA out there without throwing away performance to get it."	_chris_	9.561936	-5.751215	comment	3.0	15.0	1468172095	-10.391252
12066716	Thanks for the explanation.In the x8	Thanks for the explanation.In the x86 code, is there an advantage of using the xor instead of a load/mov?Is it to avoid a fetch?(I programmed 6502/6510 assembly as a kid, but have no experience with x86 assembly)	KSS42	9.880902	-5.877744	comment	3.0	12.0	1468177122	-7.613205
12067065	Thanks, I've skimmed though it and h	"Thanks, I've skimmed though it and have a few questions and comments.  I know very little about RISC-V, but I've recently been diving into issues of macro- and micro-fusion on recent Intel x64.The first question would be: Why do we care about instruction counts?  Historically it's been used as a proxy for computational cost, but as you point out it no longer correlates that well.  Additionally, many modern processors have µop caches that greatly reduce the importance of the initial instructions.  But instead of suggesting that we ignore instruction count, the paper seems to suggest that we need to consider both instruction and µop count.  Why?You mention that ""Compiler tool chains are a continual work-in-progress"" and mention that you ""used GCC for all targets as it is widely used and the "	nkurz	9.742339	-5.893263	comment	3.0	13.0	1468181397	-10.405687
12110858	> An instruction set is a language o	> An instruction set is a language of commands given to a machine. Nobody can patent, copyright, or otherwise own a language or an instruction set.This is wrong. Intel owns patents which protect the Itanium ISA. Non-Intel Itanium implementations would infringe on the patents, not that anyone would want to make one.	bitwize	9.538724	-5.355148	comment	3.0	11.0	1468775883	-7.595381
12112019	But they didn't. Berkeley RISC preda	But they didn't. Berkeley RISC predates MIPS and simply punts on the issue of unaligned loads. Other contemporary designs handled them in microcode.	rayiner	9.473699	-5.659609	comment	3.0	10.0	1468791817	-10.455006
12115348	NFV Platforms with MirageOS Unikerne	NFV Platforms with MirageOS Unikernels	amirmc	9.9367075	-6.1909766	story	3.0	38.0	1468853331	-12.432591
12155820	This is a 2015 story that I remember	"This is a 2015 story that I remember reading, then. Google news search shows only a couple articles this year about Rex Computing and only one tiny bit of news, that they're at tapeout. That's probably par for the course for a startup creating product (or prototype) one. 
http://semiengineering.com/power-centric-chip-architectures/also a speaking engagement:
http://insidehpc.com/2016/01/call-for-papers-supercomputing-...and a comment elsewhere that mentions another approach: the ""Mill CPU of Mill Computing""As I recollect (perhaps quite wrongly) Itanium (VLIW) failed because compiler-writers couldn't really be bothered or couldn't mount the learning curve. So I'm most curious about what progress is being made on the compiler side."	Nomentatus	9.530852	-5.424131	comment	3.0	28.0	1469408438	-7.405203
12158502	The raspberry pi 3 only runs in 32-b	The raspberry pi 3 only runs in 32-bit mode right now [1]. There is no 64-bit kernel for it currently.[1]: https://www.linux.com/news/raspberry-pi-3-still-essentially-...	choudanu4	9.814566	-5.2719936	comment	3.0	16.0	1469453290	-7.980891
12169377	It's interesting (and no coincidence	"It's interesting (and no coincidence?) that the one caveat with the OK Labs (now General Dynamics) verified micro-kernel was ""assuming the hardware satisfies its specification"".  This work neatly plugs that gap, so the verification goes further down (with the new caveat that the EDA tools correctly implement the verilog source?)Does ARM have a supervisor mode, along the lines of the Intel Management Engine, which would leave a chink in the provably correct operation?"	femto	9.635108	-5.274462	comment	3.0	12.0	1469574309	-7.6272697
12176597	"""Interestingly enough, there are act"	"""Interestingly enough, there are actually comparable Intel SHA extensions to the ARM equivalents. Linux 4.4 has added support for this but so far we have not been able to identify any CPUs that will actually run this code.""Intel Goldmont is the only microarch that implements the instructions. It was ""released"" in April: http://www.extremetech.com/computing/226800-intels-new-low-c...
But it is one of these annoying soft launches where the processors are not for sale anywhere, the specs are incomplete, and even ark.intel.com doesn't know about them. sigh"	mrb	9.652736	-5.4080257	comment	3.0	11.0	1469654468	7.7177634
12184651	I think it makes sense to depend on 	"I think it makes sense to depend on the ""native"" virtualization solutions for each operating system (Hyper-V and xhyve).We have been using Vagrant and VirtualBox heavily and the new Docker for Windows/Mac is making us reconsider that since you can't easily use more than one hypervisor on the same dev machine without some hassle. We might be building our Vagrant boxes for these other hypervisors soon. VirtualBox still seems easier to work with but there isn't anything much exciting happening with it lately.Let's see..."	gtirloni	9.710567	-6.4083204	comment	3.0	14.0	1469758374	10.02918
12191967	Hmm this made me wonder: what would 	Hmm this made me wonder: what would happen if you made a system that supported multiple architectures (ARC, PPC, x86, FPGA, ...) at the same time ?	Qantourisc	9.675475	-5.2887864	comment	3.0	12.0	1469862152	-7.7919426
12197210	Or just use zones or jails. They don	Or just use zones or jails. They don't solve all your problems, but they ARE secure, and you don't have to run them on a vm in production.Just sayin'.	qwertyuiop924	9.837565	-6.238009	comment	3.0	18.0	1469976842	10.414074
12197287	You know Oracle is about to release 	You know Oracle is about to release a Docker for Solaris port? Using zones? Docker is a set of tooling that makes process isolation technology easy to use, if you don't like Linux that is a different issue.	justincormack	9.898541	-6.2353973	comment	3.0	14.0	1469977845	-12.298747
12214296	Shameful to see @intel.com in the si	Shameful to see @intel.com in the signed-off-by on this spam train	0x0	9.425976	-5.2118926	comment	3.0	16.0	1470181204	7.746157
12238932	If the creators are on HN, curious t	If the creators are on HN, curious to know what sets this apart from other threat intel services like IBM X-Force, ThreatConnect, VirusTotal, Carbon Black, etc.	kolanos	9.404162	-5.199393	comment	3.0	13.0	1470504295	7.7302437
12239999	"The one ""standardized"" one that alwa"	"The one ""standardized"" one that always messes up my communication is "":-P"".  To me, in ASCII, that's not a playful, smiling, stick out your tongue at your friend sort of thing, but rather an exasperated ""Just found out I had to refile all my TPS reports. :-P"".While the only places I tend to have ascii->emoticon functionality is Skype and Slack, the auto-replacement for that usage never fits the mood, and I never seem to find a good representation of how I interpret "":-P"".But more to the point, I think that these stickers have already caught on as what we would call meme images, especially on image boards.  They're just not well integrated elsewhere."	white-flame	9.845066	-6.235825	comment	3.0	12.0	1470518593	-13.9453125
12240734	Question for those who are fine with	Question for those who are fine with what Apple did: What if Apple had implemented a text filter which changes all occurences of the word “pistol” to “water pistol”.  Would that be fine too?Also, what if the Unicode Consortium later adds an emoji for “WATER PISTOL”?  How should it be distinguished from the “PISTOL” emoji?  Or should they be identical?	teddyh	9.828703	-6.260989	comment	3.0	15.0	1470535470	-13.965174
12245669	I find the real world analogies quit	I find the real world analogies quite weak and unnecessary.If you haven't read it already, this is worth mentioning: https://people.freebsd.org/~lstewart/articles/cpumemory.pdf	forgotpwtomain	9.599754	-5.3390503	comment	3.0	18.0	1470634249	7.7496357
12248102	Isn't cost the reason ?That is, the 	Isn't cost the reason ?That is, the reason you don't use battery backed DRAM for all of your photos is not because you don't want to, but because 8TB of the stuff would be very expensive.  And so most of us have RAM leading to SSD leading to spinning platters.So the reason to have a CPU cache at all is (insert interesting explanations of caches here).  But the reason to have more than one CPU cache is because of the relative cost of the first cache, right ?If cost was no object, wouldn't you just have a huge primary cache ?	rsync	9.824861	-5.355245	comment	3.0	13.0	1470667091	8.079026
12249761	I doubt it.  I think the big take aw	"I doubt it.  I think the big take away lesson from the language specific machines was that it's not worth it.  LOTS of money is spent on the R&D that goes into making x86, ARM, etc. faster and better each iteration, and without the economies of scale that come with a huge install base, it's basically just a money pit.  Even if a dedicated Mathematica CPU was faster now, the x86 version will be faster in a few years anyway.It might make sense one day when when processor improvements level off even more than they already have.On the other hand, it might be a neat idea to OEM a high end x86 system and sell it as a purpose built ""mathematica machine,"" with Mathematica pre-installed, the best supported GPU, optimal RAM and CPU, etc."	jlarocco	9.632062	-5.239255	comment	3.0	12.0	1470680211	-7.7311864
12286981	ARM Cortex-M, Interrupts and FreeRTO	ARM Cortex-M, Interrupts and FreeRTOS	another	9.78251	-5.4660926	story	3.0	93.0	1471203634	-2.2564926
12302424	RISC versus CISC was a non-issue eve	RISC versus CISC was a non-issue even 10 years ago. X86 was never that CISC-y, and x86-64 is straight up a pretty clean architecture, with a memory model that doesn't suck.	rayiner	9.515319	-5.692086	comment	3.0	11.0	1471406325	-10.51871
12303019	If this were entirely true, VLIW wou	If this were entirely true, VLIW would have been a clear win, but in practice it wasn't.ARM conditional execution is very clever.	gaius	9.647773	-5.6164007	comment	3.0	12.0	1471419071	-7.7915516
12303980	Off Topic: Your commits are all pref	Off Topic: Your commits are all prefixed with emojis, which is useful when trying to determine (at a glance) which file was changed with which commit. Are you choosing your own emojis, or is it automated with a `commit-msg` git hook?	JosephRedfern	9.759422	-6.289539	comment	3.0	12.0	1471435127	-13.985515
12304062	Because common desktop applications 	Because common desktop applications still don't do much with multiple cores, and thus a few fast cores are better (and techniques like TurboBoost are useful, where cores sleep to free the energy budget to allow a single core to clock even higher). And for many things, CPUs have been fast enough for quite a while now.So the common CPUs have only a few cores, people who really want more get to pay the premium for the gamer models or Xeons, since they don't really have alternatives, and Intel knows that ;)For servers, you can get CPUs with 4-16 small(er), low-power cores instead of a few large ones. (Atom C2xxx, Xeon-D)	detaro	9.511232	-5.1915884	comment	3.0	14.0	1471436117	7.887189
12315156	AMD: Zen Outperforms Intel's Broadwe	AMD: Zen Outperforms Intel's Broadwell-E CPUs – Microrchitecture Detailed	mrb	9.264463	-5.213432	story	3.0	19.0	1471545145	7.861406
12316673	The most important thing for me. Zen	The most important thing for me. Zen cores have the AMD equivalent of Intel AMT ? (I don't remember the name).If it haves it, I would avoid it like a pest, and get an FX-8370 or 8350 to replace my now aging FX-4100. The last thing that I like to have on my computer is a hidden uncontrollable CPU doing things that could affect to my privacy.	Zardoz84	9.27188	-5.189163	comment	3.0	14.0	1471558060	7.8765864
12317831	What's really attractive to me is th	"What's really attractive to me is that it's also an existing, ""real"" architecture instead of a custom one-off (which may have been designed specifically to ease a particular implementation.) It would be fun to see a discrete 8080, Z80, or even 8086, for much the same reason."	userbinator	9.578624	-5.219742	comment	3.0	12.0	1471577821	7.040192
12320354	This is such an old fud thing to say	This is such an old fud thing to say. As if using an emoji wasn't a mainstream thing for the vast majority of people to do.Personally I like the inflections and emoji brings, plus it makes statements that might otherwise be taken as hostile either as well intentioned or just good old fashioned ribbing.	FussyZeus	9.78835	-6.257334	comment	3.0	12.0	1471618011	-13.959812
12328423	I'm not sure where you've seen this 	"I'm not sure where you've seen this ""increasing use of icons and emoji"". When I encounter people (this is pretty much limited to teenagers) use emoji, they have very little communicative value.In the modern era the use of pictographs has become Chinese's Achilles' heel: the hanzi are not sortable. The very things that define the Chinese are what makes it stupidly difficult to get computers to grok the language."	Kirth	9.803113	-6.261745	comment	3.0	10.0	1471729804	-13.945941
12329324	Imagine outfitting a datacenter with	Imagine outfitting a datacenter with these, and using them to understand the rate of bit flips in your processors. Maybe we'll find some parts of the Earth have fewer cosmic rays hitting there, and are thus are more naturally suited to being datacenters.	stephengillie	9.63844	-5.512713	comment	3.0	13.0	1471752806	8.122259
12341256	That was my thought too. I guess it 	That was my thought too. I guess it worked well for them, but it certainly wouldn't be my first choice. I wonder what the 10 custom instructions were?ARM licensed cores don't have an easy way to add instructions, but they do have the TCM bus which might be low latency enough, depending on what they were trying to do.	TD-Linux	9.575258	-5.336123	comment	3.0	10.0	1471924071	-7.574201
12351340	ME Analyzer – Intel Engine Firmware 	ME Analyzer – Intel Engine Firmware Analysis Tool	walterbell	9.555563	-5.1894975	story	3.0	80.0	1472039835	7.751783
12351622	I'm not too familiar with the PowerP	"I'm not too familiar with the PowerPC world, so maybe someone could help me out. I know I should just search, but I'm feeling lazy.Is this a new ISA or just the latest revision in their existing ISA?Also, what's the relationship with Freescale (NXP) here, who sells pretty decent ""PowerPC"" chips for server-ish platforms, such as the T2080.Do they license the ISA from IBM sort of like how ARM works?"	Unklejoe	9.539472	-5.3967814	comment	3.0	11.0	1472043151	-7.6276264
12351919	ISA 3.0 adds a new instruction 'darn	ISA 3.0 adds a new instruction 'darn' -- Deliver a Random Number. That's a pretty good asm mnemonic :) I wonder if anyone has dug into the details of how that works yet?	apaprocki	9.621429	-5.611443	comment	3.0	15.0	1472046317	-7.715197
12353443	24-core seems odd here, 32-core will	24-core seems odd here, 32-core will be a more symmetric design ? What is main reason for this ? Cost ?	crudbug	9.507862	-5.277475	comment	3.0	10.0	1472058067	7.9370365
12354445	In general:* x87 floating point is g	In general:* x87 floating point is generally unused (if you have SSE2, which is guaranteed for x86-64)* BCD/ASCII instructions* BTC/BTS/related instructions. These are basically a & (1 << b) operations, but because of redundant uses, it's generally faster to do the regular operations* MMX instructions are obsoleted by SSE* There's some legacy cruft (e.g., segment management) that's generally unused by anyone not in 16-bit mode.* There are few odd instructions that are basically no-ops (LFENCE, branch predictor hints)* Several instructions are used in hand-written assembly, but won't be emitted by a compiler except perhaps by intrinsics. The AES/SHA1 instructions, system-level instructions, and several vector instructions fall into this category.* Compilers usually target relatively old ins	jcranmer	9.893457	-5.984308	comment	3.0	11.0	1472065633	8.479547
12355257	I'm an FPGA/ASIC engineer that does 	I'm an FPGA/ASIC engineer that does some software as a hobby (mostly clojure, some python.  C and Pascal if you go back far enough).Although I focus more on verification these days, I've done ASIC design for about 16 years.I'd be very interested in working with anyone on figuring out if we can make something better by leveraging hardware.	DigitalJack	9.095869	-5.2763014	comment	3.0	11.0	1472072750	-3.8966448
12359285	Your examples are all instruction se	Your examples are all instruction sets that were developed with the idea in mind that they run together with the other instruction sets. What I meant with unrelated is instruction sets that have been developed independently and were not meant to run on the same cpu from the beginning. For instance a cpu that supports both the Risc-V and the Power architecture.	legulere	9.643175	-5.6584854	comment	3.0	10.0	1472135561	-7.7145324
12387498	VHDL is really verbose compared to V	"VHDL is really verbose compared to Verilog. Some people love that verbosity, but I prefer to see more ""action"" in a screen of code."	blackguardx	9.105282	-5.4907784	comment	3.0	15.0	1472530434	8.514269
12388793	It's excellent to see FPGAs being in	It's excellent to see FPGAs being increasingly utilised.As moore's law no longer holds true for CPU, there is increasing interest turning to FPGAs. You can create a truly bespoke Processor for any task.Of course this is trade of between development time / cost vs processing needs of task.I suspect FPGAs demand to only increse over the coming years. Intel's integration of FPGA into their line of processors is a promising step and sign of where things may be heading.	doc_holliday	9.123178	-5.3119082	comment	3.0	13.0	1472553303	8.227822
12389372	So what's changed that FPGA's are ma	So what's changed that FPGA's are making a come back? They were all the rage in 2008/9...however that faded relatively quickly when people realized programming them was a hassle and that programming had direct implications to synthesizability/clock speed/area. Looks like Google Trends shows a downward spiral in interest from 2004 to present, so my intuition was close. OpenCL->HDL and Vivado's C/C++ -> HDL makes the process a bit easier, but it's still not as easy as writing optimized C code.To get perf on an FPGA over a hard core you must go very wide (as in lots of parallelism). I suspect you could order custom hard cores from places like Tensilica and get far better perf/watt. I love FPGA's, they thrive on parallel integer/fixed point codes if enough time is put into designing the pipeli	jcbeard	9.107637	-5.369817	comment	3.0	11.0	1472560322	8.299775
12410342	"> The rowhammer ""attack"" is successf"	"> The rowhammer ""attack"" is successful only because the hardware is just plain brokenI too am of this opinion and am surprised this view isn't widely shared. With DDR4, we should be asking for a refund and/or starting a class-action suit, yet we're putting up with software 'mitigations' instead.This isn't like the 2008 Phenom TLB bug [1] where the CPU was locking up so AMD released a workaround that kept it from freezing at the expense of a 14% performance penalty. This is like the floating point division bug [2] where the device no longer meets basic operational and accuracy guarantees. RAM cells bleeding into each other ought to be considered a fatal flaw, not some intellectual curiosity.[1] http://techreport.com/review/13741/phenom-tlb-patch-benchmar...[2] https://en.wikipedia.org/wiki/"	niftich	9.636736	-5.6605735	comment	3.0	16.0	1472782265	-13.903808
12435136	This seems to be very odd. May be so	This seems to be very odd. May be someone wanted to make access easy and fucked it up. Then they left it and defined it as feature.The original feature is may be, that data access is byte wise, but as it is 32-bit CPU the instruction access is double-word wise. As it is also little endian someone may wanted to make the access easy.	PinguTS	9.923203	-5.7505937	comment	3.0	11.0	1473160737	-7.3537784
12482073	Stupid question but does that work i	Stupid question but does that work in a virtualised environment where your program can be live-migrated to another physical machine with a different CPU?	cm2187	9.934336	-5.2969627	comment	3.0	11.0	1473703463	-8.072086
12491283	As much as people are freaked out by	As much as people are freaked out by the capabilities of ME, I really like the concept of AMT.I built a headless compile-slave box recently, and was looking forward to using AMT features to manage it and keep it headless, but found out too late that the board I ordered didn't have AMT support. Now, whenever its fragile boot-stack of GRUB+iSCSI+Xen+LVM decides to wedge into single-user mode on a reboot, I have to power the box off and carry it over to a monitor to see what's wrong. I'd much rather just fix it from my laptop.	derefr	9.389499	-5.2679873	comment	3.0	11.0	1473793680	7.866819
12512077	It's just a matter of time before we	It's just a matter of time before we see ARM's in Macbooks.I wonder if we'll see Rosetta make an appearance for binary backward-compatibility again.	plantain	9.780237	-5.312486	comment	3.0	13.0	1474004595	7.6339145
12519807	They did it before in the PowerPC to	They did it before in the PowerPC to Intel change. Migration was helped by:- Fat binaries (Mach-O binaries can support multiple platforms).- A PowerPC emulator for applications that are not ported.I think they are even better positioned for an architecture change than during PowerPC -> Intel. They now have the app store where they can impose certain requirements (like supporting two architectures). And they now have their own compiler backend, which opens the possibility of supporting architecture-independent IR (along the lines of bitcode).	danieldk	9.665555	-5.19488	comment	3.0	45.0	1474104010	4.681447
12865662	Having done some Verilog professiona	Having done some Verilog professionally, this is my initial reaction too. It is quality advice for anyone needing to use Verilog.Yet if I put on my software cap and think of how things should be, the whole point of a language is to create an abstraction. This allows a designer to think and express their intent at a higher level. If an abstraction is not complete then the designer can never stop thinking in the lower level terms, which nullifies the benefit.	mindslight	9.1198635	-5.496213	comment	3.0	13.0	1478191918	8.581047
12865559	Well, what you want and the physical	"Well, what you want and the physical realities of synthesis are different :-)In the early days of compilers, of course, you were mostly writing C as a macro language for your system's assembly language.  If you wanted your program to perform well, you'd have to write C that was, more or less, a translation of assembly that you'd constructed in your head first.  If you wrote bizarre C, you'd either get incorrect results, or if you were lucky, you'd get correct but inefficient results.But that's also Dan's point: Verilog isn't a ""high level language"".  You don't write programs with it, you describe hardware with it.  (In fact, that is why it is called a 'hardware description language'!)  So if you try to write a program, instead of describing hardware, you'll get something that isn't really "	jwise0	9.1628	-5.533347	comment	3.0	15.0	1478191334	8.564905
12922677	Oh so he meant to say Intel 64/amd64	Oh so he meant to say Intel 64/amd64. IA-64 is Intel Itanium. I just skipped it because I know nothing about IA-64 at all.	innocenat	9.613538	-5.3556423	comment	3.0	10.0	1478801228	-7.776148
12937419	"Regarding ""38 cores"": can anyone com"	"Regarding ""38 cores"": can anyone comment on whether that's sufficient to perfectly analyse the game in near-real-time, or is it just good enough to provide interesting analysis? I.e. would Stockfish running on 38 cores be competitive with / better than World Championship players?"	semi-extrinsic	9.504007	-5.3482504	comment	3.0	10.0	1478948762	7.9568787
12943885	As others have said below, issues th	As others have said below, issues that have little to do with parallelisation can heavily influence performance, e.g. caching and I/O.Referring to the list on wikipedia again, compare two different 4-core CPUs:Intel Core i5-2500K 4-core: 83,000 MIPS at 3.3 GHzIntel Core i7 875K: 92,100 MIPS at 2.93 GHz	biofox	9.55326	-5.2736583	comment	3.0	12.0	1479052385	7.8993134
12951896	Your argument is shit. (Another Linu	"Your argument is shit. (Another Linus quote) And here's why.""I'm a bastard. I have absolutely no clue why people can ever think otherwise. Yet they do.People think I'm a nice guy, and the fact is that I'm a scheming, conniving bastard who doesn't care for any hurt feelings or lost hours of work, if it just results in what I consider to be a better system.And I'm not just saying that. I'm really not a very nice person. I can say ""I don't care"" with a straight face, and really mean it.""-- Linus Torvalds, 09/06/2000, LKML""I like offending people, because I think people who get offended should be offended.""-- Linus, 2012.Linus Torvalds on why he isn't nice: ""I don't care about you.""http://arstechnica.com/business/2015/01/linus-torvalds-on-wh..."	peterwwillis	9.272187	-5.8989005	comment	3.0	35.0	1479147165	4.304511
12952198	Has Linus ever been rude to you? Hav	"Has Linus ever been rude to you? Have any of your friends complained about taking the brunt of his rudeness? If so, that would be really interesting. From what I've seen, there is basically nobody who has actually complained, ""Linus was rude to me."" It seems to be a meme that consists almost entirely of putting words in other people's mouths."	chc	9.271341	-5.898935	comment	3.0	14.0	1479149307	4.305582
12952508	https://lkml.org/lkml/2012/12/23/75F	https://lkml.org/lkml/2012/12/23/75For what it's worth, coworkers have pointed out to me how much of a bully Linus has been. I'm not sure it matters that the bullying wasn't directed at them. Bullying is still bullying.To put it another way, would you want your manager to speak to you how Linus spoke to Mauro? Even if it was deserved?Linus also doubles down and insists it's ok: http://arstechnica.com/information-technology/2013/07/linus-...We have civility rules on HN for a reason, for example. I don't think civility is artificial in the ways that Linus is saying. You can be courteous to someone you're in command of.	sillysaurus3	9.274388	-5.89513	comment	3.0	11.0	1479151741	4.2620316
12957256	As good as this project seems. I wou	As good as this project seems. I would never clone any project with emojis in the commit messages.	ainiriand	9.770021	-6.293492	comment	3.0	10.0	1479210231	4.2945647
12961536	Just interested: What's your use cas	Just interested: What's your use case for ECC? Do you intend to run a server on it and aim for highest stability?	Matthias247	9.48557	-5.5010667	comment	3.0	24.0	1479239377	8.264928
13009492	Microsoft says it themselves and who	"Microsoft says it themselves and who are we to disagree?  https://msdn.microsoft.com/en-us/library/windows/desktop/aa3...""WOW64 is the x86 emulator that allows 32-bit Windows-based applications to run seamlessly on 64-bit Windows""."	sigjuice	9.924089	-5.210482	comment	3.0	17.0	1479764585	-7.9229345
13011489	It's easy to see this is but one sid	"It's easy to see this is but one side to the story from the level of emotion in the blog post.  Does anyone have more information regarding the decision itself?The post also misses the second half of the paragraph, which suggests a method to get emoji working again:  If some symbols, such as emoji, do not display, we suggest to install
  an appropriate font, such as Symbola; then they will be displayed,
  albeit without the color effects."	beefsack	9.83828	-6.259893	comment	3.0	19.0	1479786993	-13.960604
13042621	I don't really see the point of thes	I don't really see the point of these TIS-100 style games that use made-up instruction sets. Wouldn't it be more interesting if the game used a real instruction set (e.g. AVR, x86)? Then we could be learning something useful while playing, and make use of the results.	RossBencina	9.737066	-5.626563	comment	3.0	12.0	1480150591	-7.54251
13057896	This appears to be a legitimate ME n	"This appears to be a legitimate ME neutralization.The ME is purportedly placed in ""recovery"" mode:  According to Nicola Corna, the current ME state should have been changed from “normal” to “recovery”.

Since the MEI interface is disabled (not visible from a PCI bus scan), there is no way to activate the ME at runtime, even after a full system compromise. It would still be possible to rewrite the BIOS flash chip with a new ME image, but the system would need to be restarted before the ME would read the changes.I don't speak for the FSF, but it sounds like this is as close to an FSF RYF certification as any Intel CPU is going to get. FSF approval of a device requires that all user-modifiable software be Free Software. Previously, no recent Intel CPUs could be FSF certified as ""RYF"" because "	sounds	9.517716	-5.2080564	comment	3.0	15.0	1480363050	7.8204145
13058469	Their discussion may have consisted 	"Their discussion may have consisted of ""too bad these extremists don't realize that the ME is harmless if you don't have an Intel NIC""."	wmf	9.405317	-5.218955	comment	3.0	16.0	1480367587	7.8032713
13060267	Bestcase seems like a poor metric wh	Bestcase seems like a poor metric when the CPU scheduler could certainly cause 7% variation. I would be interested to see, say, 100x the number of runs, and see mean rather than best, since one usually cares about average more than best.I also wish I knew what optimization settings GCC/etc was using, and what effect tweaking those has.	sweettea	9.526531	-5.217836	comment	3.0	12.0	1480386732	7.8956876
13066147	Sounds like a super neat uC.  Is any	Sounds like a super neat uC.  Is anyone planning a generally available RISC-V with typical ARM or x86-sized caches and memory controllers?RISC-V is open, but so is the SH-esque j-core.  Why is RISC-V so much more popular?	wyldfire	9.411363	-5.6865077	comment	3.0	11.0	1480452564	-10.557996
13067138	Agree, for some who has no idea what	"Agree, for some who has no idea what RISC-V is, which I'm guessing is more than 50% of visitors, the ""why"" on the page needs to sell me on why RISC-V is better or at least better for certain things."	fuzzythinker	9.373509	-5.7079053	comment	3.0	12.0	1480462183	-10.613608
13067200	320mhz clock speed but only 16KB of 	320mhz clock speed but only 16KB of RAM.RISC-V is appealing but if I'm stuck at 32KB or less of RAM I'd stick with the Parallax Propeller which has 8 parallel 100mhz cores.	cmrdporcupine	9.401346	-5.6459904	comment	3.0	13.0	1480462772	-10.539252
13072516	All low-end VPS offerings use shared	All low-end VPS offerings use shared cores, so # of cores is a fairly useless comparison unless they also tell you the oversubscription rate or all of your neighbors are idle.	bryanlarsen	9.595959	-5.3437138	comment	3.0	13.0	1480526068	7.923647
13074319	For complex designs the simulator th	For complex designs the simulator that comes with the Vivado tools (Mentor's modelsim) is not going to cut it.  I wonder if they are working on deals with Mentor (or competitors Cadence and Synopsys) to license their full-featured simulators.Even better, maybe Amazon (and others getting into this space like Intel and Microsoft) will put their weight behind an open source VHDL/Verilog simulator.  A few exist but they are pretty slow and way behind the curve in language support.  Heck, maybe they can drive adoption of one of the up-and-coming HDL's like chisel, or create one even better.  A guy can dream...	krupan	9.094473	-5.3404613	comment	3.0	11.0	1480537098	8.507047
13075852	These FPGAs are absolutely _massive_	"These FPGAs are absolutely _massive_ (in terms of available resources).  AWS isn't messing around.To put things into practical perspective my company sells an FPGA based solution that applies our video enhancement technology in real-time to any video streams up to 1080p60 (our consumer product handles HDMI in and out).  It's a world class algorithm with complex calculations, generating 3D information and saliency maps on the fly.  I crammed that beast into a Cyclone 4 with 40K LEs.It's hard to translate the ""System Logic Cells"" metric that Xilinx uses to measure these FPGAs, but a pessimistic calculation puts it at about 1.1 million LEs.  That's over 27 times the logic my real-time video enhancement algorithm uses.  With just one of these FPGAs we could run our algorithm on 6 4K60 4:4:4 st"	fpgaminer	9.125512	-5.298286	comment	3.0	15.0	1480550677	8.223282
13081652	I'm trying to find if they offer or 	I'm trying to find if they offer or plan to offer these features:1. Caching. CircleCI and Travis cache intermediate build artifacts (e.g., virtualenv in python) to reduce build time.2. Github pull request integration (red cross on pull requests if the build fails).3. Chat integration. Sending a message to slack or hipchat when the build fails.4. SSH into build container. Very handy for rare but difficult to locally reproduce build bugs.Interesting offer though. We found that we would pay less than 5$ a month for our build needs and they would run concurrently.	St-Clock	8.823785	-6.3926463	comment	3.0	10.0	1480615025	-5.532384
13098733	Sweet! IPv6 perfection. besides GPUs	Sweet! IPv6 perfection. besides GPUs, does anyone have experience with any processors that support 128 natively?	bluejekyll	9.433216	-5.230173	comment	3.0	11.0	1480824266	7.8657017
13102025	The truth is that we can't trust INT	"The truth is that we can't trust INTEL.  Their CPU micro-code or ME (Management engine) can and does ""phone home"" to the internet, grab updates and update the CPU.  They don't allow the customer to turn this OFF, which betray's the customer who purchased the CPU.  Anyone who can sign the update and intercept the download channel can update your CPU with you having no ability to protect yourself.  We can't trust intel.Intel needs to allow 3rd parties to build a small piece of hardware for private key storage, generation, signing and encryption, with self-distruction upon tampering.  Then customers need to be able to go to the store, pick which vendor they want, and they plug it into their motherboard.  By selling them in the store when the customer can make a surprise purchase, then that pr"	HashThis	9.473122	-5.190306	comment	3.0	30.0	1480889127	7.746656
13126360	Is the situation appreciably better 	Is the situation appreciably better with ARMv8? How about ARMv7?	mwcampbell	9.604211	-5.3009186	comment	3.0	32.0	1481145993	-7.7740693
13127271	So AArch64 is simpler? Could we expe	So AArch64 is simpler? Could we expect a simpler architecture to take a performance lead in future?	flukus	9.696236	-5.4247313	comment	3.0	13.0	1481154338	-7.7653575
13127372	Does that include all the secret doc	"Does that include all the secret documentation for stuff like LOADALL, ICEBP etc?http://www.drdobbs.com/undocumented-corner/184410285http://www.rcollins.org/articles/loadall/tspec_a3_doc.htmlYou will love this paragraph:""Unlike the 286 LOADALL, the 386 LOADALL is still an Intel top secret. l do not know of any document that describes its use, format, or acknowledges its existence. Very few people at Intel wil1 acknowledge that LOADALL even exists in the 80386 mask. The official Intel line is that, due to U.S. Military pressure, LOADALL was removed from the 80386 mask over a year ago. However, running the program in Listing-2 demonstrates that LOADALL is alive, well, and still available on the latest stepping of the 80386.""Just imagine whats in Intel chips now due to NSA pressure :/"	rasz_pl	9.540254	-5.390535	comment	3.0	12.0	1481155308	-7.6005373
13127526	I'm not very familiar with the AVR i	I'm not very familiar with the AVR instruction set, what makes it difficult to emulate?	teiche	9.6280155	-5.299857	comment	3.0	12.0	1481157420	7.9544034
13127797	...well that helps explain the famou	...well that helps explain the famous 4x speed difference between the Z80 and the 6502.	qwertyuiop924	9.528413	-5.2445464	comment	3.0	26.0	1481161531	7.073945
13127473	So this post is supposed to show a r	So this post is supposed to show a relationship between transistors and documentation. Fine.x86 has 4181 pages of documentation. Quad-core Skylake has 1.75 billion transistors. This is 418560 transistors per page.The 6502 had 12 pages of documentation. It had 3,510 transistors. This is 292 transistors per page.Advantage x86.	CalChris	9.4765415	-5.2451177	comment	3.0	14.0	1481156792	7.744696
13128651	It seems to me more and more that In	It seems to me more and more that Intel has relied way too much on x86 to shut out competition in the last 10-15 years. The world is currently moving onto greener pastures (lower power / higher performance per watt) and Intel is loosing more and more of their market at the bottom and top ends. Xeon Phi and their failed x86 mobile adventures to me are the prime indications that they bet too much on one horse.	m_mueller	9.457317	-5.1953773	comment	3.0	23.0	1481175877	7.762294
13128994	Nah. Intel tried several times to qu	Nah. Intel tried several times to quit the x86. They couldn't  because the market rejected anything that wasn't backwards compatible.	Double_Cast	9.533674	-5.2074046	comment	3.0	11.0	1481183141	7.711315
13154064	> but I agree with the author that t	> but I agree with the author that the solution for most software should be to ship separate AVX-enabled and non-AVX-enabled binariesI don't think this scales. I work on text search, and there are distinct algorithms that use at most SSSE3, some use at most SSE 4.2 and some use at most AVX2. Should I then ship 4 different versions for every platform I support? What are my instructions to users on the download page?	burntsushi	9.52899	-5.5477223	comment	3.0	12.0	1481498126	-3.8567796
13171527	AMD typically includes ECC support i	"AMD typically includes ECC support in ""consumer"" chips. Not all boards, do. I'm worried too, though, that this still hasn't been confirmed yet. An 8-core at 3.4+ GHz sounds perfect for a workstation."	kinghajj	9.388675	-5.4452667	comment	3.0	10.0	1481666496	8.169447
13171918	I never understood what were the fai	I never understood what were the failure and what could AMD have done better. When intel started to be ahead in single threaded IPC, AMD tried to innovate by bringing low consumption, multi threaded, with embedded GPUs cheap SoC. It seemed quite in touch with the early netbooks where people would need a blend of capabilities (hardware video accel, compositing / CSS3 able GPU) instead of a compilation workhorse.I don't know if the designs were really absurd, or if the market couldn't understand AMD's value prop. Or if the programmers couldn't (or wouldn't) tap into their APU idea.Multiple papercuts made them fall I guess.	agumonkey	9.283799	-5.2158475	comment	3.0	14.0	1481669015	7.8236423
13178795	Currently I'm seeing a lot of 400 er	"Currently I'm seeing a lot of 400 errors: ""Matching code was not found or was already used."""	svens_	8.757324	-6.0691447	comment	3.0	17.0	1481742831	-11.580234
13184858	Why does Xen need x86 emulation code	Why does Xen need x86 emulation code anyway?	Sintendo	9.816364	-5.470581	comment	3.0	10.0	1481813080	9.490481
13204374	Speaking of which... I'd really love	Speaking of which... I'd really love to have a reference manual on one of the early x86 processors. Maybe the 386, since it is one of the iconic ones (or the one I have the most nostalgia for) that also started to get interesting features like protected mode, but still wasn't so complicated as to be a multi-volume, 5,000-page series (maybe?).Back in the 1990s, when I was doing assembly language on the Amiga, Motorola sent me the official 68000 manual for free when I called and asked them. It was a really cool book to have on the shelf and occasionally lead through.I looked at abebooks.com, and there are Intel books, but I wouldn't know exactly which one would be the reference manual. Anyone got an ISBN?	lobster_johnson	9.553297	-5.2108574	comment	3.0	10.0	1482036284	-7.4763265
13208861	I took the MITx MOOC version of MIT'	"I took the MITx MOOC version of MIT's 6.004 (Computation Structures) class. In that class students design and implement in logic gate level simulator a 32-bit RISC CPU.I was going to try to build it out of 74' series logic as a summer project last summer. Then I did a count of the gates I was using. In the following, a number after a gate type means the number of inputs. My gate count:  295 AND2
    8 AND3
    3 NOR2
    4 OR2
   96 OR3
   20 OR4
  226 XOR2
    6 NOT
  563 MUX2
  161 MUX4
   32 D FLIP FLOPS

I'm not including memory for the registers. I would probably not have tried to make that out of 74' series logic.In terms of chips, it is something like  140 4xMUX2
   75 4xAND2
   81 2xMUX2
   55 4xXOR2

plus a few more.The project pretty much died at that point.I could cut a lot of t"	tzs	9.46808	-5.4000416	comment	3.0	10.0	1482111265	6.038383
13212657	The serious answer might be that a h	The serious answer might be that a hardware RISC-V deployment is very unlikely to be running Fedora in production.  All the existing planned devices are MCUs which are much too small (and lack MMUs in many cases).The more glib one is that if you're interested in building a CPU emulator from source but don't want to rebuild a kernel, you're probably skipped a few important skills along the way.	ajross	9.422705	-5.6286626	comment	3.0	13.0	1482165965	-10.52958
13213336	Chisel is pretty cool in its own rig	Chisel is pretty cool in its own right. But the best I can say about RISC-V is that it's clean and open source. It is clean. Basically, it's a clean up. Get rid of register windows, branch delays slots, tagged integers, ..., every wart that previous RISCs thought were a good idea but turned out very bad.Clean is good but in 2016 that's not enough for me. x86 is very ugly but Intel has spent decades making it fast, low power, ... Anything you want it to be but never perfect.I think RISC was sort of a good idea in the 80s. Not great but good. It continued the ld/st/register approach of Saint Seymour. IBM ran with it and arguably started it.But it's been tried and found ... wanting.	CalChris	9.386254	-5.654035	comment	3.0	30.0	1482169925	-10.556748
13213414	To address a couple of these points:	To address a couple of these points:- Assembler syntax is a matter of personal preference.  I also loved programming the 68K, writing OS-9/68k drivers back in 1990.  However the vast majority of even kernel/embedded programmers rarely touch assembler these days.- SPARC & register windows.  A very unfortunate design choice in hindsight.  The RISC-V ISA developers have paid very close attention to existing designs, and other ISAs and microarchitectures are frequently referenced.  Have a look at the discussions on the ISA-Dev mailing list: https://groups.google.com/a/groups.riscv.org/forum/#!forum/i...- RISC-V is trying to avoid patents, so they cannot necessarily reuse existing ISAs, even open ones.	rwmj	9.469388	-5.682807	comment	3.0	27.0	1482170487	-10.510716
13213453	- SPARC & register windows. A very u	"- SPARC & register windows. A very unfortunate design choice in hindsight.What do you mean, unfortunate design choice? The register windows help compilers and provide 256 virtual registers, thus significantly boosting performance. It's one of the biggest, best features of the Scalable Processor ARChitecture.And that's the exact feature RISC-V considers ""unfortunate"". I cannot believe it!Considering that the OpenSPARC cores are under the GPL, what impact do patents have in that case?"	Annatar	9.620863	-5.7714806	comment	3.0	21.0	1482170703	-10.405957
13218925	FWIW, Circle CI offers the ability t	FWIW, Circle CI offers the ability to SSH in to build nodes and free nodes for public projects	Kudos	8.919074	-6.405619	comment	3.0	12.0	1482232698	-10.036789
13219341	As mentioned, the whole RISC approac	As mentioned, the whole RISC approach came out of the 80s, but it's important to remember that this was at a time when RAM was (briefly) faster than the CPU, so memory bandwidth was largely unused and the CPU instruction execution was the bottleneck. Thus the idea of sacrificing fetch bandwidth to achieve lower cycle times and thus more instruction throughput, along with simplifying the CPU core in the effort to speed up instruction decode/execute to allow raising clock speeds.Today, memory bandwidth is the bottleneck, caches are essentially mandatory for reasonable performance, and newer implementations of even architectures classically considered RISC, e.g. ARM, do uop-based decoding. Physical limits also put an end to increasing clock speeds, and because of OoO execution and the memory 	userbinator	9.512753	-5.693497	comment	3.0	12.0	1482238127	-10.496284
13219455	In the beginning, the main commercia	"In the beginning, the main commercial interest in RISC-V, is as an internal MCU core which is not customer-programmable. In my previous job, we used an OpenRISC core, and it was awful. If I didn't quit I would have made a very strange push for developing a simple RISC-V core, at least once the compressed ISA was finalized.It's very simple to make a small and efficient RISC-V core in-house, and if that means we can avoid paying a huge amount of money to ARM, that's fantastic. For some products (radio microcontrollers), it's possible that RISC-V will live alongside ARM for a while. Maybe if RISC-V is lucky, semiconductor companies will start to allow customers to program the RISC-V core, and that creates an opening to take on ARM. All it takes is one big customer that says ""we are willing to"	audunw	9.402712	-5.6194205	comment	3.0	10.0	1482239351	-10.540347
13220372	    However, if I put my business ha	"    However, if I put my business hat on and am preparing to bid on a project, I find myself without a strong argument for favoring RISC-V instead of ARM or MIPS.

I think I agree with you on that. It is still early days for RISC-V and it would be a big risk to use the core in an SoC now. Every time I take a look at it as an SoC engineer I see a lot of work that needs doing to integrate it.- Basically you would be using a heap of dev tools that you never touched before.- The bus is something called TileLink which is their own protocol so all your peripherals have to be compatible or wrappers have to be made.- Verification IP seems minimal and not SystemVerilog so you'd have to write it all yourself.- Your SW guys would need a good emulator. Don't know if theirs is any good.Other posts are "	gluggymug	9.393666	-5.6673236	comment	3.0	14.0	1482246303	-10.519695
13231127	DVCS is fundamentally a simple conce	DVCS is fundamentally a simple concept. And, every use case should be possible with a series of elemental operations. Any 'advanced' use cases can and should just be 'macros'.	ap22213	8.856311	-6.320095	comment	3.0	13.0	1482343197	-11.849105
13240191	Ok Mr Tanenbaum, Linus and you alrea	Ok Mr Tanenbaum, Linus and you already had this argument </sarcasm>	SEJeff	9.280765	-5.8927183	comment	3.0	23.0	1482439164	4.197204
13243518	This is likely getting upvoted becau	"This is likely getting upvoted because it shouldn't take that long to ship a damn emoji picker / this use of resources is why Twitter is in decline, etc.From a QA perspective, an emoji picker, with emoji searching and color setting, is tricker than it looks. For example, which emoji would you expect to see for a search query of ""happy""? http://i.imgur.com/HU3sP7N.png(Actually, why isn't the smiling cat a result for a ""happy"" query?)"	minimaxir	9.793637	-6.268075	comment	3.0	13.0	1482479484	12.995144
13243559	Do you really need to know the full 	Do you really need to know the full story? 3.5 years ago somebody started working on an emoji picker.Perhaps he was only working on it 1 day a month, but even if thats the case, there is even a wtf that a side project made it into the main release.How does somebody even stay interested and passionate about such a small piece of work for so long?	jay_kyburz	9.790671	-6.27139	comment	3.0	10.0	1482480100	2.07856
13251614	From a security perspective, how fea	From a security perspective, how feasible is it for a state-level actor to usefully backdoor a FPGA? I imagine that part of the appeal of personally-fabricated hardware is that, if you validate the design, you have greater assurance about the code executing on your machine. Sort of like the difference between compiling from source and trusting a binary blob (though, just like compilers can be backdoored, I imagine there are theoretical attacks involving subverting the fab itself...).	kibwen	9.11093	-5.342917	comment	3.0	20.0	1482613506	8.327876
13270786	Emojis/emoticons shouldn't become a 	"Emojis/emoticons shouldn't become a form of language, thats because they're meant to be something else closer to punctuation. They're really in-line annotation glyphs that add context, meaning and emotion to writing which enables clarity.They can almost be thought of as parenthetical asides which are intended by the writer to aid the reader in understanding tone and emotion in a compact way.For example, which form unambiguously conveys sarcasm the best?""Oh, it's Sam, isn't that great!""""Oh, it's Sam, isn't that great! (jerk)""Now replace (jerk) with an appropriate glyph and we're at emojis.What written language sorely lacks is a standardized update to the punctuation system we use. We're limited to single digit tone marks and a couple ways of modifying the text to try to convey a tremendous "	bane	9.807365	-6.26627	comment	3.0	12.0	1482936688	-13.991138
13271823	So the single-thread, integer-only, 	So the single-thread, integer-only, no-branch performance (admittedly a niche, but an interesting one) is still a fair way behind what was possible with the Pentium 4 (which could clock up to 11GHz)? I get that these days performance/watt is what matters and losing 100-odd cycles when you mispredict a branch isn't great, but it's still sad to think we might never match the best-case performance of the older line.	lmm	9.4594	-5.2743106	comment	3.0	10.0	1482944701	7.873995
13282279	The last time I read about TSX it wa	The last time I read about TSX it was a story about how Intel pushed a microcode update to disable TSX because it was flawed. Has this been fixed in newer CPUs? Is there a risk of TSX being flawed on CPUs in the wild (for example, if you're missing the latest microcode updates?)http://www.anandtech.com/show/8376/intel-disables-tsx-instru...	0x0	9.551785	-5.3998327	comment	3.0	14.0	1483068487	8.015115
13302563	It is not the speed, reliability, or	It is not the speed, reliability, or processes.There are numerous flash manufacturers all racing each other to build out capacity and increase density because they want to eat the HDD market.DRAM is controlled by a small cabal, all of whom have multiple convictions for price fixing and collusion. I believe Hynix shipped some sacrificial C-suite execs to do prison time in the US over it.  To a large degree no one is building out DRAM fab capacity as well.DRAM prices have stayed high because the manufacturers want it to stay high and are colluding (either explicitly or implicitly) to keep prices up. The capital cost to compete is enormous: many billions before you can make your first sale. The day you break ground memory prices will mysteriously drop so low as to make your venture unprofitab	xenadu02	9.732678	-5.242969	comment	3.0	19.0	1483377598	7.9883447
13311732	you are overstating things significa	you are overstating things significantly, ARM is still way behind (an order of magnitude or more) on single thread preformance. Nobody cares about preformance per watt if it means everything lags a massive amount.	tossedaway334	9.584682	-5.192469	comment	3.0	12.0	1483468998	-7.7252483
13334826	We designed an architecture for repl	We designed an architecture for replaceability during the summer for our UAV project. Our current architecture has been based on the Zynq-7000 which is a two ARM-core + FPGA SoC. Here we had custom logic for doing things such as controlling signals to the servos in the FPGA and then software drivers communicating with the FPGA through memory maps. This resulted in a tight coupling between the drivers on the compute platform and the IO hardware.Our next hardware generation will have a dedicated FPGA handling the communication with the GPS, IMU, servos. The compute platform will communicate with the FPGA over Ethernet. This means that all hardware drivers can be written against a network based interface, resulting in a loose coupling between the compute and IO. This means that both the IO ha	pveierland	9.1286335	-5.379959	comment	3.0	12.0	1483692681	8.309145
13363731	JTAG is a protocol for testing elect	"JTAG is a protocol for testing electrical connectivity and package pins, all the debug capability is proprietary vendor extensions. Which is to say that for any retail product, the CPU will have had a fuse set to make it ""protected"" which typically includes disabling debug JTAG functionality."	revelation	9.569578	-5.261508	comment	3.0	12.0	1484041078	-5.331906
13382431	I think the real answer is: time, pl	I think the real answer is: time, place, design set. In another time and place, we'd might be using LEON/SPARC. We don't get to choose our time, though.In particular, LEON is just about the only SPARC implementation I'm aware of whenever it's brought up, while RISC-V already has at least 3-or-4 implementations that have gone to fabrication in the past few years. It has toolchain support and stuff, at least. Oracle being the steward of the latest 10yrs of SPARC design probably has not helped, though, especially wrt IP concerns. LEON is still 32-bit only apparently from a quick search?OR1k has realistically never really had support in almost anything, it seems, other than some binutils/Linux forks and an implementation or two. But it also differs architecturally: delay slots, no 2008 IEEE754	aseipp	9.579316	-5.64263	comment	3.0	11.0	1484231550	-10.545591
13384558	I am not sure. I heard about the Mil	"I am not sure. I heard about the Mill some years ago and watched some presentations about the belt and my feeling was that it would be simpler to map functional languages onto it.Maybe that was more wishful interpretation, but if I remember correctly the idea is to put more logic into the compiler (good old ""sufficiently smart compiler"") to do the optimization than do it at runtime in HW. IMHO this implies less logic in the HW which might make the implementation simpler (I am SW guy so my computer architecture knowledge might we skewed).Further more I believe that we might be able to infer more and more bounds about runtime behavior that could possibly give rise to more aggressive optimizations. In particular the Mill provides more predictable performance than traditional architectures whi"	protomikron	9.667157	-5.6991615	comment	3.0	13.0	1484244422	8.080213
13403270	Excellent post, thank you!By the way	Excellent post, thank you!By the way, I've sometimes heard that it was the popularity of emoji that finally made American and Western European coders learn about the particulars of unicode. Is this just a jokingly told anecdote, or did emoji really help?	GolDDranks	9.861929	-6.2574897	comment	3.0	16.0	1484473537	-13.956765
13418345	">A simple ""off"" switch for Intel ME "	">A simple ""off"" switch for Intel ME would please a lot of people.But not a corporate security team, of course. It's not that simple."	ComodoHacker	9.470405	-5.205281	comment	3.0	16.0	1484667357	7.739544
13428259	It's completely unreasonable to expe	It's completely unreasonable to expect some underdog architecture to get anywhere close to the big ones, which have pured dozens of billions of dollars into research over decades to optimize their designs, tooling and fabrication.A reasonable expectation is to get some low-end-ish CPUs out that might be on the same level (in terms of efficiency) than older, not really optimised ARM designs.The biggest incentive RISC-V can offer is less legacy bullshit (like AArch64) and the fact that you don't have to pair royalties to ARM. Perhaps better standardisation of peripherals compared to ARM, so less time/money spent on integration, BSPs and stuff like that.(And even then: Looking at recent POWER one can see that they can outperform related Intel offerings, while being drastically less efficient.	throwawayish	9.427462	-5.532853	comment	3.0	22.0	1484760764	-10.541332
13470108	Ask HN: Good open source hardware pr	Ask HN: Good open source hardware project to learn from and contribute to?	EvgeniyZh	9.1015835	-5.489288	story	3.0	6.0	1485252488	8.603223
13513224	But hyper threading doesn't really d	But hyper threading doesn't really double the performance of the CPU, I understood it's a marginal improvement. It seems odd to double the cost of the license if hyper threading is switched on.	cm2187	9.716144	-5.470802	comment	3.0	15.0	1485681115	8.239032
13513273	HT performance grew from generation 	"HT performance grew from generation to generation. In many cases a HT ""core"" has 80% of the performance of a ""normal"" core. A current 2-core+HT i3 CPU is almost on par with a 4-core i5 (the i3 has faster cores but less L3 cache)."	miahi	9.532099	-5.307605	comment	3.0	12.0	1485681752	8.056306
13539011	> The Ars Technica article on this i	"> The Ars Technica article on this issue cuts to the heart of why this is so devastating: there is tons of software--software which was really interesting and I dare say ""seminal"" for this important era of computing; and which is not old or outdated by any sane standard--that this destroys access to going forward, for essentially no benefit.It's not zero benefit. Supporting multiple ABIs means that you need to have multiple copies of system libraries paged in at a time if they're used, which is not an insignificant amount of memory (which then has resulting power/price costs). It's possibly even bigger of a problem on iOS than Android, because Apple changed the floating point ABI between ARMv6 and ARMv7, so they have to support multiple different 32-bit ABIs."	jmgao	9.693749	-5.2872467	comment	3.0	42.0	1485933814	-7.6946893
13545829	NeXT had an Intel version as a hedge	NeXT had an Intel version as a hedge as well. Seems those two projects were destined to merge together.	astrodust	9.400286	-5.2050886	comment	3.0	14.0	1485986814	7.72702
13546271	Intel needs to sacrifice Microsoft a	Intel needs to sacrifice Microsoft and make x86 a legacy architecture.The last time Intel did this it was called Itanium and it was horrible. Historically, almost all attempts to replace an enormously successful product line with something incompatible have failed.	wmf	9.481038	-5.235946	comment	3.0	10.0	1485990006	7.7652087
13563511	This is a great project, but the ide	This is a great project, but the idea is not as exotic as it may sound. This is more or less how an FPGA works.Edit: Should also add that there were commercial products built like this in the 80-90's.	bostand	9.102183	-5.341792	comment	3.0	15.0	1486157511	8.299699
13563660	The lookup table part, sure, many fp	The lookup table part, sure, many fpgas use that. The clever part of  this was turning a ROM into a flip flop.	DigitalJack	9.158169	-5.3136783	comment	3.0	10.0	1486158802	8.310092
13568240	I don't know. People are constantly 	I don't know. People are constantly learning new things and making mistakes is part of the learning process. If everyone told Linus a kernel is too complicated for newbies there would be no Linux.This constant scare tactics and putting crypto on a needless pedestal is counterproductive as it may well turn potential learners off. It may be complicated but people learn complicated things all the time. No one is born an expert.	throw2016	9.468158	-5.8270254	comment	3.0	10.0	1486233363	-8.136416
13572485	Field: embedded software. To me RISC	Field: embedded software. To me RISC-V is the most exciting thing for the next few years. The performance appears to be awesome, and free CPU IP will allow more varieties of specialized low-cost chips for specific use cases. It should also have a positive effect on development environments by encouraging wider use of free toolchains.	phkahler	9.401408	-5.590807	comment	3.0	13.0	1486304454	-10.565024
13579664	There is a fix and it is not crazy. 	"There is a fix and it is not crazy. The gist is they were able to brute force the PRNG of the machines and predict their future state. Hardware RNG is thr answer. In crypto it is obviously bad if someone can predict anything about your random values (keys / IVs). A hardware RNG, ""cryptographically strong"" RNG algorithms, and resetting the RNG very often make this problem go away."	bitexploder	9.83662	-5.2799773	comment	3.0	12.0	1486391374	-8.051519
13590109	Huh, hasn't wallstreet being doing t	Huh, hasn't wallstreet being doing this, and even putting these things into FPGA's for nearly a decade now? Hell I wouldn't be surprised if they're printing ASICs with their algos.	bfrog	9.104159	-5.359182	comment	3.0	12.0	1486482710	8.30793
13601598	I've never understood why jails didn	I've never understood why jails didn't take off. I guess maybe since linux took off and the bsds didn't, but they're just nice and elegant.	jimktrains2	9.771482	-6.342553	comment	3.0	23.0	1486584857	10.453418
21182549	Linus Torvalds isn't worried about M	Linus Torvalds isn't worried about Microsoft taking over Linux	CrankyBear	9.430764	-5.8121066	story	3.0	28.0	1570464706	-8.208098
21187163	I think Linus will end up working at	I think Linus will end up working at Microsoft some day.	sys_64738	9.392309	-5.815488	comment	3.0	10.0	1570491463	4.2511873
21192859	The Taiwan Flag Emoji topic got a lo	The Taiwan Flag Emoji topic got a lot of attention too.  I think that's a fair spread.  Censorship, Unicode standards, and Blizzard is kind of the expected overlap of interest topics for Hacker News.	Timpy	9.793048	-6.2637405	comment	3.0	18.0	1570545869	-13.940973
21201974	I wonder if they target RISC-V platf	I wonder if they target RISC-V platform too. Or OpenPOWER (the case of Raptor Engineering).	xvilka	9.384411	-5.6509156	comment	3.0	12.0	1570619344	-10.56683
21219497	It's kind of impressive how much man	It's kind of impressive how much manufacturers mess up implementations of PD when there's single-chip PD and Type-C controllers that manage the whole show for you [1] like the TPS65986.[1] https://www.digikey.com/en/product-highlight/t/texas-instrum...	arcticbull	9.860179	-5.420076	comment	3.0	10.0	1570743938	-7.4340434
21236933	Why though? He literally chose to st	Why though? He literally chose to stick with the old software, protesting with his money. Seriously though, what's the problem with expecting 32bit software to keep working?	KenanSulayman	9.88769	-5.224702	comment	3.0	31.0	1570920854	-7.8705983
21239346	Yeah, aren’t most games single-threa	Yeah, aren’t most games single-threaded? I doubt this affects gaming performance very much.	azeotropic	9.845642	-5.601892	comment	3.0	10.0	1570957677	8.338238
21242034	Sorry, I'm very new to this, how do 	Sorry, I'm very new to this, how do notebooks/shared notebooks play with version control?	Traster	8.87519	-6.3724623	comment	3.0	17.0	1570992117	-11.543125
21249980	Thank you for the detailed write up!	Thank you for the detailed write up!Why are their many processors? If it’s all one thread, why not just use one processor?	erikpukinskis	9.615644	-5.395815	comment	3.0	13.0	1571070312	8.156162
21277961	I recently got a TinyFPGA-BX, and ha	I recently got a TinyFPGA-BX, and have been slowly working through the tutorials. The amusing thing is that, for the actual applications I'm working on, a contemporary microcontroller can actually keep up just fine, and is easier for me to comprehend. Still, one of these days, a use will for an FPGA will crop up for which I'll be glad that I learned.	analog31	9.086021	-5.334405	comment	3.0	11.0	1571274244	8.299738
21278023	This is a pretty nice tutorial! My c	This is a pretty nice tutorial! My courses in FPGA design in school taught me a ton about 1) concurrency and 2) good state machine design. In modern backend web development these topics receive so little attention (from interviewing all the way to writing technical specs, I've rarely encountered these topics brought up explicitly) but are important. I was a bit hesitant for this guide to suggest using C++ since I tend to dislike mixing traditional languages with hardware languages but I realized it was just for testbenches, which is very reasonable (and even VHDL exposes things like `for` loops that are really only useful for testing and meaningless otherwise - sans some special cases[1]).[1] You can abuse some imperative paradigms to implement things like Conway's Game of Life as a systol	omeze	9.149702	-5.574323	comment	3.0	12.0	1571274902	8.668665
21278594	Nice work.  FPGA design appears to b	Nice work.  FPGA design appears to be very similar to GPU shader programming.  First time I've read anything about FPGA design that connected.  Usually FPGA stories get lost in data flow jargon and I learn nothing.	topspin	9.062026	-5.3364286	comment	3.0	17.0	1571281804	8.360799
21277670	I've been looking for something like	I've been looking for something like this for a while.  It's hard to break into FPGA design coming from a Software Engineering viewpoint, but I think it teaches how the machine REALLY works and can produce better Software developers.	sideshowmel	9.074592	-5.3781576	comment	3.0	22.0	1571271744	8.446472
21281605	Thats why they should sell cpus that	Thats why they should sell cpus that sacrifice security for speed. I'll take a cpu thats vulnerable to spectre/meltdown if its 20% faster.	plopz	9.50274	-5.334358	comment	3.0	10.0	1571317773	7.745275
21280256	AMD Lists Threadripper 3000 CPU with	AMD Lists Threadripper 3000 CPU with 32 Cores, Possible New Socket	rbanffy	9.355227	-5.219017	story	3.0	72.0	1571304569	7.9533844
21282714	> Fixed support for amd64 machines w	> Fixed support for amd64 machines with greater than 1023GB physical memory.Don't I wish. What would be the memory test time for something like that?	wglb	9.654404	-5.3413043	comment	3.0	12.0	1571324256	8.102925
21283431	Off the top of my head:* version con	"Off the top of my head:* version control* environment mismatches (think managing dev, staging, prod with multiple devs)* deployment management* discoverability of where things live so you can maintain them, and autocomplete in IDEsThe last is the big one. If a client asks me to change the header, and me going to my IDE and quick searching ""header"" doesn't automatically show me all header related files/code then your platform has already lost the developer experience battle. Something like this would need tooling to match what is already possible in that regard."	ehnto	8.978457	-6.360462	comment	3.0	13.0	1571328146	-11.625416
21304323	I stand corrected!I really should ge	I stand corrected!I really should get the DRAM working on the G2. How hard could it be?	tverbeure	9.752203	-5.3298216	comment	3.0	12.0	1571581448	8.021547
21315821	No relation. SPIR-V is the fifth ite	No relation. SPIR-V is the fifth iteration of the Standard Portable Intermediate Representation, originally based on the LLVM IR.It's an intermediate representation between the high level shader programming language and the GPU's native machine code. It's expected that the GPU will compile the SPIR-V to its own internal instruction set, rather than executing it natively.RISC-V, on the other hand, is a native instruction set for CPUs.	slavik81	9.312514	-5.5769553	comment	3.0	14.0	1571683752	-10.461173
21326463	I have to say, I'm really happy that	I have to say, I'm really happy that this seems a sort of resurgence of a proper CPU architecture diversity. I'm getting bored of the x86/ARM dichotomy.	frabert	9.587198	-5.2567067	comment	3.0	25.0	1571765944	-7.81329
21328696	Oh yeah, I guess I remember hearing 	Oh yeah, I guess I remember hearing about that now.Well, in that case I don't like it because IBM made it. Also it's old. It's not coming back. RISC-V is new and sexy.	gridlockd	9.394052	-5.654385	comment	3.0	18.0	1571779933	-10.591067
21337622	AMD's apparent velocity is likely du	"AMD's apparent velocity is likely due to multiple factors, first and foremost is Intel has essentially been stuck, trying to shrink die sizes (something AMD has essentially outsourced), suffering from shortcuts leading to Spectre/Meltdown and the performance regressions due to patching those, and inability to get their new architecture out the door.All this coupled with really good execution from AMD, new architecture that has turned out to work really well and not really having to deal with Spectre/Meltdown regressions.So yes AMD is doing very well, Intel's current problems makes them look even better.
How much of this is hiring and how much is just trucking along? Who knows."	cpuguy83	9.242048	-5.1895146	comment	3.0	27.0	1571856694	7.881439
21337840	64c EPYC with 3.4TFlops - wow! That'	64c EPYC with 3.4TFlops - wow! That's GPU territory!	bitL	9.317304	-5.217411	comment	3.0	22.0	1571858098	7.913035
21337947	AMD chips suffer from Spectre too (w	"AMD chips suffer from Spectre too (which is the hard to fix issue). They didn't really take any fewer ""shortcuts"" than Intel. And they weren't ""shortcuts""."	IshKebab	9.4761915	-5.360937	comment	3.0	17.0	1571858729	7.8278074
21339654	One can equally think of the entire 	One can equally think of the entire code base as a single document, and of the release version as an executed document. In the long run the non-release repository states don't matter that much either, they're just helpful for anyone willing to gain an insight on why the things work the way they do.	durnygbur	8.749535	-6.110681	comment	3.0	18.0	1571869009	-6.057279
21344475	offtopic, but how'd you get an emoji	"offtopic, but how'd you get an emoji in a HN comment??(maybe it doesn't get stripped bc the flag is encoded as [U][K], two ""letterlike symbols"" but still it's the first time i've seen one!)"	uryga	9.808428	-6.2713876	comment	3.0	15.0	1571923840	13.022951
21345104	I guess it is probably because most 	I guess it is probably because most people are using desktops/laptops to browse HN. I feel like Emoji use on QWERTY keyboards is harder/less common. It is possible though: 🇺🇳	bb123	9.815329	-6.261516	comment	3.0	12.0	1571928021	13.025247
21350276	There are an absolute ton of customi	There are an absolute ton of customization options available. In the context of the decisions that can be made, making FP optional isn't surprising.I do have to wonder about whether they've got tools for real customers that can effectively test the tradeoffs being made, at least for performance options like cache size & associativity. Even with all the options at your disposal and an intimate knowledge of your problem domain, beating a handful of well made and broadly tested off the shelf designs won't be easy.I love this stuff, but I'm a bit skeptical if it's actually something the market is asking for. If there were more substantial options like crypto accelerators, GPGPU, video encoding/decoding, FPGA, mixing big and lots of small cores, vector extensions, being able to size up the ALU 	reitzensteinm	9.26048	-5.223514	comment	3.0	11.0	1571960183	7.9840455
21384352	Interesting! I hadn't thought this d	"Interesting! I hadn't thought this deeply about text editing before.I disagree that the ""Bad #3"" example in the ""Emoji Modifiers"" section is actually bad though - it's the outcome I would expect of an editor."	Thorentis	9.80006	-6.265739	comment	3.0	10.0	1572325215	-13.959532
21387618	I think this works great for apps li	I think this works great for apps like Slack, in user-land so to speak, but isn't realistic for the Unicode standard, not only because these entry formats are in English.Modifiers and combinators aren't exclusive to emojis, but apply to all kinds of glyphs in other languages and writing systems as well. Arabic script even has some common ligatures for common expressions.A lot of complexity simply doesn't stem from emoji in Unicode, a lot of the complexity comes from all the writing systems that Unicode supports. Admittedly, emoji are kind of an oddball addition to Unicode, but they're by far not the most complex part of it.	philplckthun	9.922242	-6.2551413	comment	3.0	12.0	1572359828	-13.955625
21386293	I'm not sure why you're being downvo	I'm not sure why you're being downvoted, I had the same reaction.  CPU microcode is updateable by the kernel at boot.On Ubuntu, he'd want to use the amd64-microcode package: https://launchpad.net/ubuntu/+source/amd64-microcode	drewg123	9.56219	-5.386933	comment	3.0	22.0	1572351720	7.7679005
21399980	God I hate that term.  It's not your	"God I hate that term.  It's not your secret sauce intellectual property, it's a fucking library.Possibly the biggest reason FPGA/ASIC tech has lagged so hard behind CPU/GPGPU in terms of consumer use is because they have managed to use their hardware to completely stifle all open source software (they even go to some lengths to distance themselves from the term ""software"").  FPGA libraries are almost always encrypted and have to be treated as a true black box when designing.  Doing things as mundane as interacting with a PCIe bus or simple signal filtering are all locked away behind ludicrously overpriced ""IP"" packages that are often vendor specific."	AWildC182	9.08419	-5.3574343	comment	3.0	11.0	1572455252	8.422065
21400300	Is there a risc-v chip on the market	Is there a risc-v chip on the market which includes Bluetooth?	yhvh	9.429689	-5.386131	comment	3.0	13.0	1572456963	-10.509722
21410349	>... a 40-year-old 16-bit ISA design	>... a 40-year-old 16-bit ISA designed to be source-compatible with a 50-year-old 8-bit ISA.In fairness to the Intel of that era, they actually did a really good job with this. They gained basically zero warts from the 8080 assembler source compatibility. They mostly set out to make the best variable length 16 bit instruction set they could. They had significant competition at the time and they pretty much had to make the 8086 instruction set something very usable. The x86 instruction set horror mostly came after that.	upofadown	9.602054	-5.429584	comment	3.0	38.0	1572538460	-7.5993724
21410477	Tangent but: what's the additional o	Tangent but: what's the additional overhead on a modern chip of parsing this crazy instruction set vs. a simpler to parse one like PPC64 or ARM64? Is it significant compared to all the other stuff that almost all modern CPUs do like out of order execution, register renaming, SIMD, virtualization, etc. etc. etc.?I've seen many people argue that it's significant but I never see anything in depth from anyone who really knows. People just assume it is.A counterargument I heard once is that there is kind of a fixed complexity to parsing it and that it was significant in the past but as CPU feature sizes have shrunk and transistor counts increased (Moore's law) it's stayed relatively constant and become insignificant today compared to all the other uses of die space.	api	9.762019	-5.7038856	comment	3.0	12.0	1572539023	-7.6051393
21410576	ARM64 (aka AArch64) is the best vers	"ARM64 (aka AArch64) is the best version of x86 yet.It's clean, very little warts, they learned from their mistakes with ARMv7/Thumb2 (specifically the IT instruction).It helps that Apple controls the whole ecosystem and could seamlessly move to ARM64. The Android transition has been making progress also.Maybe someday we'll drop 32bit and 16bit support in x86 systems (and also in ""modern"" programming languages!)."	withzombies	9.732365	-5.2285957	comment	3.0	14.0	1572539407	-7.7633204
21409697	Every time Intel has tried to more a	Every time Intel has tried to more away from x86 (i960? Itanium? Maybe others...) they end up coming back. The years of backwards compatibility are a big selling point.	tyoma	9.480448	-5.229964	comment	3.0	39.0	1572535003	7.7576113
21410726	ARM64 is what Intel would design if 	ARM64 is what Intel would design if they learned from the lessons of x86 and got a chance to restart.	withzombies	9.64244	-5.3092318	comment	3.0	10.0	1572540176	-7.77201
21426916	Ask HN: Why are there emojis in comm	Ask HN: Why are there emojis in commits?	____Sash---701_	9.767242	-6.286874	story	3.0	3.0	1572691178	-13.974943
21427990	RISC-V userspace emulator library	RISC-V userspace emulator library	ingve	9.417206	-5.6817875	story	3.0	43.0	1572706203	10.82973
21431496	"""The reason we're stuck with this sh"	"""The reason we're stuck with this shitty fifty year old architecture that's steadily gotten worse through every iteration,"" ""Satan,"" ""Evil Computational War Criminal,"" a few less nice terms.If you ask a Sun employee: ""Enemy #1.""Less sarcastically: ""slightly above average.""x86_64 is a nightmare, and we're a decade behind where we could be because it was what the industry settled for."	kick	9.721466	-5.4035063	comment	3.0	24.0	1572745839	-7.7438145
21432148	Not that unique; the early Athlon64s	Not that unique; the early Athlon64s were miles ahead of Intel, who'd gone a long way down the wrong road at the time. This feels very similar, but doesn't bode that well for AMD if they can only do this once a decade.	CamouflagedKiwi	9.302755	-5.18667	comment	3.0	15.0	1572754823	7.8157883
21444251	With the exception of talos and vari	With the exception of talos and various bits of used hardware POWER has only been available in rather expensive systems-- so no onramp.Even with things this announced it remains the case that EPYC, not power9, is the king of memory bandwidth per dollar at least at most price-points.	nullc	9.404872	-5.254344	comment	3.0	14.0	1572889988	7.998345
21454309	Which leads us back closer to the ug	Which leads us back closer to the ugly reality of people owning other people. ISA used to stand for Indentured Servitude Agreement.(Not saying Incoming Sharing Agreements's are bad, we just have to be careful...)	pcmaffey	9.55093	-5.447725	comment	3.0	21.0	1572973816	-7.7014303
21460203	Great use of AVX-512 VBMI!Note that 	Great use of AVX-512 VBMI!Note that not many Intel processors support the two specific CPU instructions used (vpermb and vpmultishiftqb).Cannon Lake Core i3 (not many of these around due to delays with intel's 10nm fabrication)Ice Lake Core i3, i5 and i7: Released in September 2019	emirp	9.433715	-5.4712152	comment	3.0	17.0	1573021781	8.068356
21460395	You're mostly right. It's often not 	You're mostly right. It's often not that hard to completely saturate memory bus.However, base64 has weird mappings that take some processing to undo in SIMD – can't use lookup tables and need to regroup bits from 8 bit to 6 bit width. That does take a lot of cycles without specialized bit manipulation instructions.Also the data you'll need to process is often probably already hot in the CPU caches. Disk/network I/O can be DMA'd directly into L3 cache.So I think this decoder is a useful contribution. But also somewhat no-brainer once you have those AVX-512 instructions available.	vardump	9.805049	-5.705203	comment	3.0	13.0	1573024564	-8.068702
21460490	"Why do they say then ""We use the SIM"	"Why do they say then ""We use the SIMD (Single Instruction Multiple Data) instruction set AVX-512 available on commodity processors"" ?"	darkwater	9.538909	-5.633988	comment	3.0	13.0	1573025916	8.129604
21462126	By the requisites they list, which f	By the requisites they list, which focus on the ISA, the original 68000 was already a 32bit architecture in 1979, but it would indeed take until 68020 in 1984 for the CPU to have a 32bit bus and for 32bit operations to not be internally split into 16bit ones.I admire the foresight of Motorola in making the ISA itself 32bit from the get go.	snvzz	9.593101	-5.242181	comment	3.0	14.0	1573045887	-7.562362
21463868	They used the Intel compiler. We kno	They used the Intel compiler. We know for a fact Intel’s compilers deliberately don’t optimize as well for non-Intel chips.That’s damning in and of itself.	xenadu02	9.609904	-5.537119	comment	3.0	14.0	1573056375	-7.3432374
21464685	You absolutely need Spectre/Meltdown	"You absolutely need Spectre/Meltdown mitigation otherwise someone could attack you with JavaScript running in your web browser.https://linuxreviews.org/HOWTO_make_Linux_run_blazing_fast_(...   noibrs - We don't need no restricted indirect branch speculation
   noibpb - We don't need no indirect branch prediction barrier either
   nospectre_v1 and nospectre_v2: Don't care if some program can get data from some other program when it shouldn't
   l1tf=off - Why would we be flushing the L1 cache, we might need that data. So what if anyone can get at it.
   nospec_store_bypass_disable - Of course we want to use, not bypass, the stored data
   no_stf_barrier - We don't need no barriers between software, they could be friends
   mds=off - Zombieload attacks are fine
   mitigations=off - Of course"	computerex	9.728587	-5.5997944	comment	3.0	27.0	1573061016	7.838355
21464738	You are not supposed to disable the 	You are not supposed to disable the mitigations... Especially on servers and workstations... And keep in mind that the usual mitigations aren't even holistic. The only truly 100% secure fix for Spectre/Meltdown is to disable hyperthreading altogether.	computerex	9.651932	-5.572889	comment	3.0	14.0	1573061279	7.875029
21464821	Disabling Spectre/Meltdown mitigatio	Disabling Spectre/Meltdown mitigations on a server especially would be the dumbest thing imaginable. These attacks are not restricted to JavaScript, they are side-channel attacks and have a huge exploitable surface. Just look at the number of patches for the MS SQL server needed to mitigate:https://support.microsoft.com/en-us/help/4073225/guidance-pr...	computerex	9.764252	-5.613329	comment	3.0	13.0	1573061708	7.398951
21465031	What will you use that many cores fo	What will you use that many cores for?	mattmar96	9.549723	-5.3064885	comment	3.0	11.0	1573062939	7.980622
21465034	There was a proof-of-concept include	There was a proof-of-concept included in the whitepaper:https://spectreattack.com/spectre.pdfThat's a working exploit, not a hypothetical.	deaddodo	9.668661	-5.606803	comment	3.0	10.0	1573062946	7.7462997
21470366	This just seems like a less flexible	This just seems like a less flexible alternative to RIs for those who don't want to bother purchasing them.	kingbirdy	9.375658	-5.6930766	comment	3.0	12.0	1573100609	-10.585572
21470786	ECC UDIMM RAM is way too expensive c	ECC UDIMM RAM is way too expensive comparing to LRDIMM and you can barely get 32GB ECC UDIMM modules. Not going to happen...	bitL	9.458835	-5.4878216	comment	3.0	14.0	1573105956	8.215671
21471555	Outside of our bubble, people don't 	"Outside of our bubble, people don't care about ECC memory on their laptop or desktop. It also adds ~12% (iirc) more memory cells, meaning higher memory cost, which is going to be a hard sell given that it's a solution to a problem that most customers don't even know about, nor would most care much if it was explained to them. From a user perspective, memory is fine as it is, and if memory corruption does occur, it's probably blamed on buggy software. That would make any such push look like a desperate ""we need a differentiator to tell people why they should buy our CPUs and upsell them in the process"" move. Competing on price, speed, and (for laptops) power consumption would appear much more promising."	lorenzhs	9.459487	-5.51512	comment	3.0	10.0	1573116892	8.340427
21473687	Phoronix does compilation benchmarks	Phoronix does compilation benchmarks (for the Linux kernel and LLVM), the existing Ryzen chips do perform quite well on them.  The i5-8400 is probably the closest thing on the chart to your 8850h.But there are diminishing returns to adding more cores past a certain point which will depend on your codebase and compiler. If your builds are at 100% CPU utilization most of the time then you will probably see pretty large gains, but sometimes a significant chunk of the time ends up being bottlenecked by single threaded performance.https://www.phoronix.com/scan.php?page=article&item=ryzen-37...	opencl	9.439896	-5.2699437	comment	3.0	12.0	1573138511	7.9109282
21474523	If you do lots of compiling, and run	If you do lots of compiling, and run the typical suite of things a developer might (IDE, terminal apps, compilers, your backend, emulators, web browser) these kinds of cpu's can be a large benefit.for the average user, not as much.	shrewduser	9.756359	-5.2957892	comment	3.0	11.0	1573143535	7.855223
21488354	Really great performance, buttery-sm	Really great performance, buttery-smooth. Excellent job!Looking at the 6502, I've got to wonder if today's most powerful Place 'n Route tools could make any significant improvement to it.	microcolonel	9.506096	-5.2756505	comment	3.0	16.0	1573257931	-7.4229918
21503505	Not a huge secret that they have a 6	Not a huge secret that they have a 64-core Threadripper 3990x ready to go.But also no hurry to release it, as even the 24 core wipes the floor with anything Intel has to offer.	alecmg	9.398008	-5.2076917	comment	3.0	22.0	1573467124	7.8629065
21503866	> wipes the floor with anything Inte	> wipes the floor with anything Intel has to offer* in synthetic benchmarks that uses down to the last coreedit: my bad I mistook this for a technical audience	LoSboccacc	9.433184	-5.221647	comment	3.0	19.0	1573471269	7.7913895
21509110	Without ECC that's a risky way to co	Without ECC that's a risky way to compute.	kevin_thibedeau	9.474185	-5.5327497	comment	3.0	18.0	1573507745	8.315496
21521906	AMD is suffering much less from thes	AMD is suffering much less from these flaws. Seems they didn't ignore as many security boundaries with their implementation.	iforgotpassword	9.349511	-5.2440352	comment	3.0	26.0	1573631622	7.8780017
21521934	AMD (and ARM OoO chips) are vulnerab	AMD (and ARM OoO chips) are vulnerable to Spectre variant 1 (bypass in-process array bounds checking) but not to the vast majority (any?) of the other issues which are Intel-only.AMD chips don't have the feature that speculation failure is determined at instruction commit time when it is already too late, so most issues just can't happen.	wolf550e	9.614435	-5.5757384	comment	3.0	23.0	1573632007	7.822615
21522108	There have been more Chrome/Firefox 	There have been more Chrome/Firefox 0-days than speculative execution vulnerabilities exploitable in Javascript (0). Sure, there is a chance that the Chrome/Firefox teams missed something, but there have been sighted no exploits since the release (of spectrev1) and the browser fixes.It's not a crazy threat model to have on a personal PC, the risk is so very minimal. If your threat model is that strict you shouldn't be running JS anyway.	scandinavian	9.775559	-5.6575327	comment	3.0	31.0	1573634341	7.425494
21522238	I wonder whether writing whole syste	I wonder whether writing whole system in verilog, synthesizing cycle accurate simulator with verilator would yield better results...	artemonster	9.139463	-5.4563627	comment	3.0	13.0	1573635543	8.582183
21523180	Ok this has been bugging me for a wh	Ok this has been bugging me for a while. How does speculative execution roll back side effect like write to disk or send a packet on the network, when the speculation is wrong. At a guess there are safe instructions that can be run when doing branch prediction?	zaphirplane	9.706088	-5.686475	comment	3.0	11.0	1573646980	-6.80553
21534007	"The title ""Intel disables hardware l"	"The title ""Intel disables hardware lock elision on all current CPUs"" seems too broad. Intel is disabling the backward ISA compatible implicit HLE capability--I can't remember exactly how it worked without looking it up, but IIRC it was a hack that leveraged existing cache coherency and ISA semantics to permit optimized spin-lock implementations that without feature detection still worked correctly on older chips.Explicit TSX instructions are now merely opt-out, where previously they couldn't be disabled by the kernel. The posted patch doesn't seem to disable it but simply adds some of the bits needed to do so.EDIT: Okay, I guess it is disabling Hardware Lock Elision (HLE), proper. But ""hardware lock elision"", lower case, implies all TSX-based lock elision code will stop being optimized. AF"	wahern	9.560054	-5.388229	comment	3.0	20.0	1573723086	8.210558
21534009	Is https://github.com/speed47/spectr	Is https://github.com/speed47/spectre-meltdown-checker the best tool? Impressive chunk of sh.	jakeogh	9.633082	-5.5869083	comment	3.0	32.0	1573723089	7.7446823
21536523	I believe that some of the YouTube c	I believe that some of the YouTube channels have started including compilation benchmarks. GamersNexus [1] and Linus Tech Tips [2] both do![1] https://www.gamersnexus.net/guides/3460-new-cpu-bench-method...[2] https://youtu.be/stM2CPF9YAY?t=4m49s	mmastrac	9.750948	-5.402485	comment	3.0	13.0	1573747667	7.8065143
21536682	Any problems with AMD cpus and conta	Any problems with AMD cpus and containers or virtualization?(Really? Wow. Sorry for asking a question!)	wayneftw	9.299735	-5.2227573	comment	3.0	11.0	1573748609	7.91596
21539911	I don't really get how they reached 	I don't really get how they reached their conclusion. It seems like on most of the tests this new part gets beat by a cheaper one from Intel. It seems like a kinda unfair approach to use handbrake without AVX-512 support? Also not sure why they include the 3-d particle thing without AVX ... I guess because Intel is just too fast on that?If you look through the results, the things most people want to do with a computer, like browse the web and start their applications, are noticeably faster with the Intel i9-9900K at half the price.  And the only game where the CPU makes a difference in these benchmarks is also a lot faster with the Intel part.	seminatl	9.3966875	-5.246258	comment	3.0	17.0	1573768688	7.9062223
21546603	It is possible to use an Intel machi	"It is possible to use an Intel machine without the ME. Since there are constant vulnerabilities and exploits around the ME, many enthusiasts do not like the idea of a vulnerable and secret super-admin computer on their computer. There is the option to disable the ME on supported devices (usually old Thinkpads) using me_cleaner[1].I personally run Coreboot on my Thinkpad with the ME ""disabled"" (essentially just broken and stuck in a constant bring-up state), and System76[2], Purism[3], and Dell sell machines with the option of disabling the ME entirely, if one is super-paranoid.[1] https://github.com/corna/me_cleaner[2] https://system76.com/laptops[3] https://puri.sm/learn/intel-me/"	elagost	9.524855	-5.218394	comment	3.0	12.0	1573838134	7.7977214
21556258	There is a reason why every design t	There is a reason why every design that attempts to use asynchronous design has been a disaster.  That's because:Asynchronous design is a bloody stupid idea.Non-deterministic behavior is the LAST thing anybody wants.  And software people go to great lengths to mitigate it.  And when they fail, we leak crypto keys, allow people to read privileged memory, etc.People like John Carmack even advocate adding time as an input to many of your functions so that you are fully functional and deterministic and easier to debug and test. ie. doing the same thing as VLSI designers and providing a global clock.And, for reference, designers didn't just get stuck in a local minimum with synchronous design.  Designers did use asynchronous designs back in the day--mostly S-R latches--and they discovered that 	bsder	9.309298	-5.3346653	comment	3.0	12.0	1573958939	8.184236
21559100	Hang on, did he just buy essentially	Hang on, did he just buy essentially a freely reprogrammable FPGA with built-in RAM, A/D converter and USB support - for $20? Seems to me, you could do a lot more with those devices, now that the wire protocol is known.(Edit) It doesn't appear that he decoded the bitstream format though, so some more work would be needed before you could use it as a general-purpose FPGA.	xg15	9.105528	-5.332383	comment	3.0	20.0	1574014188	8.306182
21564248	If I’m understanding this right, Int	If I’m understanding this right, Intel looks at your web browsing to optimize their drivers? Why would you ever willfully share this information with Intel?	saagarjha	9.32099	-5.2053723	comment	3.0	16.0	1574084949	7.7481914
21608998	No, emojis are incredibly expressive	No, emojis are incredibly expressive and enrich all forms of writing. I'm excited to see this style of communication penetrate more spaces :slightly-smiling-face:.Edit: The emoji I added to the above message was stripped by HN's submission system.	dcwca	9.797169	-6.2633667	comment	3.0	35.0	1574450355	-13.959964
21609055	>Edit: The emoji I added to the abov	>Edit: The emoji I added to the above message was stripped by HN's submission system.One more reason to love HN	EpicEng	9.808889	-6.262155	comment	3.0	31.0	1574450657	13.024253
21610118	What compilers are people using for 	What compilers are people using for FPGAs? It seems all the compilers are proprietary, and not much fun to use on Linux.	amelius	9.113353	-5.38503	comment	3.0	10.0	1574457081	8.397079
21613113	While I like this idea, I think supp	While I like this idea, I think supporting a full x86-64 instruction set for high-performance applications, from scratch, is likely years out. This company will need a 10-year runway to see any market impact.	discardable_dan	9.717396	-5.349371	comment	3.0	21.0	1574498283	-7.75652
21613326	Where is x86-64 mentioned? I assumed	Where is x86-64 mentioned? I assumed they were building ARM chips.In any case, they don't mention any secret sauce. Intel has strong channels, fabs and the x86-64 ISA with massive software compatibility on the server side. Even with better performance/power, Intel can simply undercut the competition to drive them out of business. If Qualcomm's sales channels couldn't dent the server space, I am sceptical about upstarts, unless their [power, performance, cost] is significantly better than Intel.	throwGuardian	9.62726	-5.2499456	comment	3.0	14.0	1574502846	-7.762016
21611835	In multi-thread benchmarks of raw me	In multi-thread benchmarks of raw memory I/O we found a clear performance leader in Ampere’s eMAG, outperforming both AMD’s EPYC and Intel’s XEON CPUs by a factor of 6 or higherThat doesn't sound right. Neither AMD nor Intel get more than a handful of GB/s in basic memory I/O? Any idea what could be wrong?	alain94040	9.4597225	-5.218494	comment	3.0	10.0	1574472941	7.882403
21613531	"""Nobody"" cares about x86 anymore exc"	"""Nobody"" cares about x86 anymore except those married to the platform.Even Windows runs on Arm nowFor servers they care about price, performance, support and volume/availabilityIf you can have a non-x86 platform that will save power/cooling to the big datacenter users (FAANG basically) they will be willing to give you money"	raverbashing	9.64847	-5.198587	comment	3.0	10.0	1574506891	-7.813119
21630163	Because of the throttling penalty it	Because of the throttling penalty it's often worse for a compiler to produce avx512 code. It's only worth it for very specialized tasks, not even gaming. This may change when throttling is no longer required on newer process nodes. But for now, it's mostly a gimmick.	eloff	9.448562	-5.556184	comment	3.0	11.0	1574701441	8.08681
21631839	> In Intel's case, libraries like MK	> In Intel's case, libraries like MKL/IPP don't decide which implementation to use based on available features but CPUID, and fall back to slow versions even if the CPU supports all features required for the optimization.The CPU features indicates if a feature is available, but doesn't indicate if it's advisable or fast -- that's why Intel built a table for their hardware, and they'd need a table for AMD hardware too, except they don't care, because it's not their hardware. AMD or someone could build that table and patch it in, or try to convince Intel to include it, but expecting Intel to build it themselves is wishful thinking at best.	toast0	9.327691	-5.2895155	comment	3.0	10.0	1574710294	7.924046
21629981	> (maybe game physics?)Not game phys	> (maybe game physics?)Not game physics, as it puts the CPU in a lower speed regime it'd have negative implications on the rest of the games performance. So far, that AVX512 requires this lower speed (due to thermals) is an implementation detail, and it could be expected that newer processes (Intels 10 or 7 nm?) would allow them to work AVX512 tasks on full speed.Until that happens, and everyone has AVX512 (because it'd be a massive fail to have a game that requires you to have a HEDT Intel processor to play), it'd be a nice gimmick to have on very specific tech demos, and performance sensitive scientific code that you know will run on a certain machine with certain characteristics.	dr_zoidberg	9.445016	-5.5391226	comment	3.0	16.0	1574700530	8.118081
21638802	I'm not sure this move accomplishes 	I'm not sure this move accomplishes that much. It seems none of the technology is moving abroad, just the legal seat. And on trade issues, Switzerland moves pretty much in lockstep with the US, at least officially (cf. Iran sanctions).To me, this smacks of the kind of legalist thinking that software engineers are prone to: Assuming that if some legal construct is implemented according to some rules, governments and the legal system will disregard the actual physical reality, and will refrain from employing their political leverage.Then again, I'm sure the RISC-V Foundation has professional legal advice at their disposal.	microtherion	9.353537	-5.684569	comment	3.0	11.0	1574780552	-10.637535
21650702	Intel rushed their new CPU's to come	"Intel rushed their new CPU's to come out before AMD's new CPU's.
So they can only compare these new intel CPU's to the older, slower AMD CPU's, making intel look better in comparison. 
THIS is important BECAUSE its ALWAYS the first reviews that gets the most attention, they will be the first results in any search because they have more views.
and they can only compare to the old AMD stuff because its not out yet.
SO intel is trying to fool uninformed people, into thinking their stuff is better then it is, its a dirty tactic, because most people won't know the difference, they'll search for the intel CPU see the reviews showing how it performs against the old stuff and think its better then the current Threadripper.
basically what they always do, sneaky tactics to get more mindshare against"	superasn	9.268742	-5.18447	comment	3.0	11.0	1574880426	7.825991
21658182	it is quite the reverse: multicore s	it is quite the reverse: multicore systems means that shared memory monoliths need to be fast and a lot of transistors are spent to make sure that they are. There is a reason that multicore cpus do not look like networked machines.Cache coherency is optimistic, message passing is pessimistic.	gpderetta	9.704825	-5.456928	comment	3.0	13.0	1574956713	8.199
21676636	alternatively in 15 years there will	alternatively in 15 years there will be less than 0.01% workloads that a mainstream 2-way Epyc XXXX Server with 512 physical cores 64TB RAM and 10,000,000 IOPS will not handle so 90% of cloud services will become meaningless :).	qaq	9.439008	-5.2056265	comment	3.0	11.0	1575221846	7.8279977
21679666	- EPYCs market share is around 3%- I	- EPYCs market share is around 3%- Intel makes in a few weeks as much as AMD in the whole year- AMD doesn't own fabs and can't saturate market (as seen with 39XXx shortages)	bitL	9.256673	-5.1952157	comment	3.0	16.0	1575258467	7.8783884
21679781	Well from that roadmap, I see 6 core	Well from that roadmap, I see 6 core Comet Lake U (high end mobile) set for Q2 2020; we don't know how many cores AMD is planning for Zen2 mobile. If AMD sticks to 4, and Intel has 6, that's going to swing some buyers. The (leaked) Intel roadmaps tend to have more specifics than the AMD ones though.	toast0	9.241345	-5.2341566	comment	3.0	26.0	1575260243	7.907294
21680904	Possibly. The Intel version is bette	Possibly. The Intel version is better publicised. I have no idea what PSP can do, but Intel's IME makes it possible to remotely completely override anything about a PC, which can be convenient for sysadmins for large organisations, but hasn't been disabled for consumer products.I have no idea whether the same is true for PSP.	mcv	9.396168	-5.198065	comment	3.0	11.0	1575276884	7.705996
21690156	I have some good ideas for emojis, b	I have some good ideas for emojis, but I'm guessing that's even harder to get through...	blt	9.796434	-6.2680244	comment	3.0	10.0	1575350652	-13.98061
21691977	Now if only we could get Hacker News	Now if only we could get Hacker News to support emojisEdit: This comment ended in man-shrugging, but Hacker News stripped the emoji.	yoloClin	9.8032465	-6.2576923	comment	3.0	10.0	1575378896	-13.958035
21692625	Even terminal based weechat is perfe	Even terminal based weechat is perfectly capable of rendering emojis.	minxomat	9.83567	-6.2427526	comment	3.0	12.0	1575384336	-13.922643
21698972	The hyperscalers all have lots of id	The hyperscalers all have lots of idle compute, I'm not sure how many cores they have, but I believe the big three cloud services operate on the order of millions of servers, most of which have tens of cores now. If a 1024 bit key is proportionally more complex to solve, it seems they could solve it with idle compute.I don't think any of them would want the negative publicity that could arise.	AaronFriel	9.615607	-5.210094	comment	3.0	10.0	1575424839	7.9356914
21715126	I think one of the big issues may be	I think one of the big issues may be with high performance multi-threaded code. x86(I am including x64 in this designation) is a lot stronger memory model than ARM. This has two implications. First, x86 is a lot more tolerant of data races, and missing explicit memory fences. When you port server applications that have been running well on x86 to ARM, you may be in for some surprises as data races and missing fences now manifest as data corruption. The other implication is that on x86, the gap between a sequentially consistent memory order and a relaxed memory order is not that great. Thus, many programmers may use atomics with sequentially consistent memory order to reduce the complexity. On x86, this will generally yield decent performance. On ARM, that gap is much bigger and you are lia	RcouF1uZ4gsC	9.712504	-5.4726973	comment	3.0	20.0	1575572123	-7.7353277
21726348	i've heard of it before. i'll be hon	"i've heard of it before. i'll be honest: i don't much like haskell. for example, this makes me crazy (haha):  mmult mA mB = result
    where
      mBT      = transpose mB
      dot a b  = sum $ zipWith (*) a b
      result   = map (\ar -> dot ar <$> mBT) mA

either way, this is along the right lines. however, what FPGAs can you target? any xilinx chips?it's really gonna take xilinx or altera to innovate in this space, but that is unlikely any time soon."	nikofeyn	9.103647	-5.388459	comment	3.0	10.0	1575669221	8.439026
21726892	I love playing with fpgas, but the c	I love playing with fpgas, but the compile time and size limitations are always horrendous or simply not tenable for most applications. This library narrows that down to be even worse [0]. On most of alteras chips you'd be hard pressed to fit a few of their own filter libraries, let alone your own code. Honestly I'm not sure what you would use a tool like this for. If you want asic development, you will likely need to use an hdl for better synthesis. If you want dot net languages, you are going to want a regular cpu.Can someone tell me what this would actually be used for? I'm sitting here scratching my head.[0] > Currently only the Nexys 4 DDR board (which is NOT the same as the non-DDR Nexys 4, be sure to purchase the linked board!) is supported, so you'll need to purchase one. Note that	eyegor	9.127357	-5.371758	comment	3.0	12.0	1575673286	8.441222
21726777	FPGAs are fundamentally a dataflow s	FPGAs are fundamentally a dataflow system. You have geographically distributed compute units, with reconfigurable routing. CPUs (obviously) work by bringing the data to a single fixed central processing unit. So the key question for all these software->FPGA tools, is how they handle this transformation. The problem is that often the way you layout your program is introducing implicit constraints that prevent optimization that aren't real but simply an artefact of how you write software.The thing is, I don't believe that transformation is a solvable problem (not least because really clever people keep trying and keep releasing terrible attempts). In real life, people program GPUs using special constructs and instructions. Hell, they use special instructions for the vector operations on CPUs	Traster	9.099244	-5.3785334	comment	3.0	16.0	1575672297	8.33407
21733446	Many instructions (that likely see h	Many instructions (that likely see heavy use in MKL) are approximations, the exact implementation and behavior of these approximations varies across platforms (including possibly architecture versions).The docs you quoted describes the necessary conditions for using an instruction to avoid crashes/illegal instruction issues. That doesn't cover these kinds of more subtle differences that exist.For example, I just made a plot of |1/x - rcpps(x)|: https://snipboard.io/Rei74t.jpg	creato	9.81582	-5.8824353	comment	3.0	35.0	1575762716	-7.566912
21733192	Until the opposite has been shown, t	Until the opposite has been shown, the assumption should be that a CPU that indicates that it supports AVX2 does support AVX2.	nemetroid	9.435244	-5.504709	comment	3.0	11.0	1575759677	8.023186
21734648	I’ve just recently started looking i	I’ve just recently started looking into implementing a minimal ALU, and I’ve been having trouble finding good resources to answer the question “other than a one-instruction computer, what is the smallest number of instructions needed in a Turing-complete RISC?”I’m guessing it would be NAND, ADD, increment, and some sort of branch?NAND covers all of the bitwise ops.  If you have ADD, NOT and increment, you can get SUB.  If you have ADD and SUB, you can get MUL and DIV.Am I missing anything?	cellularmitosis	9.748023	-5.834432	comment	3.0	10.0	1575787162	-10.4815
21747793	I guess the choice thus comes down t	"I guess the choice thus comes down to how much potential benefits may be possible, versus what software actually needs? (I can see first-hand we don't need more single-thread performance in so many use cases)I just have no idea ""how good it can get"", compared to what we have now. Is there an alternative world where CPUs vastly outperform ours in performance/power using the same materials? But more importantly how much can ""vastly"" be?"	K0SM0S	9.456934	-5.1882043	comment	3.0	21.0	1575933810	7.8366046
21756598	Someone should make a graph quantify	"Someone should make a graph quantifying the number of ""mitigations"" and performance impacting patch work for popular Intel SKU's since release.It would be interesting to see how many times they've patched the same processor and how much slower they are now than when they were made due to all the mitigations."	zelon88	9.410082	-5.2927804	comment	3.0	19.0	1576010328	7.8268075
21760338	Cmd+Ctrl+Space brings up the emoji p	Cmd+Ctrl+Space brings up the emoji palette on MacOS. This palette is easy to use from the keyboard and works in the terminal too.Some MacBooks famously also have a TouchBar that makes emoji easy to type.I can't remember the last time I had issues rendering emoji, and I have no idea why they'd be difficult to search for or how they would pose any accessibility issues.	bluerobotcat	9.8541765	-6.2331557	comment	3.0	13.0	1576048958	-13.950663
21760263	Plus the benefit of not being ambigu	Plus the benefit of not being ambiguous like a lipstick emoji :)	larusso	9.810929	-6.2680917	comment	3.0	11.0	1576048004	-13.960575
21761385	> [tulip emoji]Is that what it looks	> [tulip emoji]Is that what it looks like for you? For me it’s a flame (which seems to make more sense for removing code).	Aeolun	9.823151	-6.2695985	comment	3.0	11.0	1576062367	-13.956083
39090248	That ship sailed years ago. We could	"That ship sailed years ago. We could have had ""pipes between hosts"" with a distributed OS design like Plan9. But Linus doesn't care, so we've got what we got. Until somebody forks the kernel and goes their own way for fun, it will never change."	throwawaaarrgh	9.447415	-5.814669	comment	3.0	13.0	1705936255	4.2167106
39105192	> To fix that, the Itanium has the o	"> To fix that, the Itanium has the option to do a speculative load, which may or may not succeed at a later point. So you can do a load from a dubious pointer, then check if the pointer is fine (e.g. is it in bounds? Is it a null pointer?), and only once it has been validated you make use of the result.Way back in the day, as a fairly young engineer, I was assigned to a project to get a bunch of legacy code migrated from Alpha to Itanium.  The assignment was to ""make it compile, run, and pass the tests.  Do nothing else. At all.""We were using the Intel C compiler on OpenVMS and every once in a while would encounter a crash in a block of code that looked something like this:   if(ptr != NULL && ptr->val > 0) {
     //do something
   } else {
     //init the ptr
   }

It was evaluating both "	Kon-Peki	9.546885	-5.627777	comment	3.0	10.0	1706025928	-7.7478495
39115765	> I’d be interested in understanding	> I’d be interested in understanding why the compilers never panned out but have never seen a good writeup on that. Or why people thought the compilers would be able to succeed in the first place at the mission.It's a fundamentally impossible ask.Compilers are being asked to look at a program (perhaps watch it run a sample set) and guess the bias of each branch to construct a most-likely 'trace' path through the program, and then generate STATIC code for that path.But programs (and their branches) are not statically biased! So it simply doesn't work out for general-purpose codes.However, programs are fairly predictable, which means a branch predictor can dynamically learn the program path and regurgitate it on command. And if the program changes phases, the branch predictor can re-learn th	_chris_	9.845568	-5.890026	comment	3.0	10.0	1706092331	8.104533
39123770	Well...You can learn a lot by progra	Well...You can learn a lot by programming FPGAs.In theory, while I think you could build an SSI manufacturing device at home if you really wanted to -- just how many people build an internal combustion engine themselves to learn about it?	chx	9.078625	-5.336571	comment	3.0	19.0	1706137005	-10.861157
39123896	It's even much worse than that ;)The	It's even much worse than that ;)The fastest Z80 instructions are 4 clock cycles, at least 7 clock cycles if they also need to load or store an 8-bit value from/to memory, and at least 10 clock cycles for instructions that load or store a 16-bit value.I did a little deep dive into Z80 timings a little while ago using the Z80 netlist simulation from visual6502.org:https://floooh.github.io/2021/12/06/z80-instruction-timing.h...But for BASIC programs those timings don't matter much, since BASIC on 8-bit home computers was easily 100x times slower than assembly code doing the same thing (the difference is probably less though when floating point math is involved, since this also needs to be 'software-emulated' in assembly).	flohofwoe	9.514038	-5.2042327	comment	3.0	10.0	1706137836	7.0762815
39165868	This wikipedia article must surely b	"This wikipedia article must surely be inaccurate:https://en.wikipedia.org/wiki/Row_hammer    The initial research into the row hammer effect, published in June 2014, described the nature of disturbance errors and indicated the potential for constructing an attack, but did not provide any examples of a working security exploit. [1]

[1] (June 24, 2014). ""Flipping Bits in Memory Without Accessing Them: An Experimental Study of DRAM Disturbance Errors""By my recollection there was a discussion of rowhammer and making it work on a (original) Freenode channel circa 2010 (or earlier) in response to a related thread on a reddit security hacking subreddit.ie: it was being discussed in public channels some four years prior to a paper cited as ""initial research"".Addendum: Mind you, lots of things get"	defrost	9.632303	-5.675554	comment	3.0	11.0	1706450739	-13.890203
39172378	No.Do not want.Rowhammer is a hardwa	"No.Do not want.Rowhammer is a hardware problem ---- defective RAM --- not a software one.The sooner everyone starts returning defective RAM and putting pressure on the hardware manufacturers to maintain correctness, the sooner we can stop this descent into insanity.""They can always work around it in software"" is the attitude that let Rowhammer exist, and continuing to fulfill that expectation will only make things worse."	userbinator	9.629561	-5.6559076	comment	3.0	20.0	1706498655	-13.900748
39172487	Linus Torvalds flames Google kernel 	Linus Torvalds flames Google kernel contributor over filesystem suggestion	mfiguiere	9.472297	-5.8550143	story	3.0	14.0	1706500089	-8.283874
39175641	Linus Torvalds flames Google kernel 	Linus Torvalds flames Google kernel contributor over filesystem suggestion	LinuxBender	9.471113	-5.8565364	story	3.0	8.0	1706532527	-8.295022
39193273	I would take it as a point of pride 	I would take it as a point of pride to be on the receiving end of one of Linus' rants. If I have his attention and he is even looking at something I wrote, it lets me know I made it :)	_xerces_	9.280304	-5.8930864	comment	3.0	10.0	1706637192	4.292617
39197439	It interesting, because VAX had neve	It interesting, because VAX had never been used much in the USSR. The main architectures were PDP-derived or IBM-derived.	cyberax	9.654256	-5.3716497	comment	3.0	10.0	1706657180	7.661151
39238593	I wouldn't call syscall (and strace)	"I wouldn't call syscall (and strace) knowledge, ""hardware knowledge"". It's mostly about OS knowledge. You can go a long way with strace without knowing how a PCI bus work or other hardware details.Which brings me to another point.Virtualization ensured you could decouple (to an extent) the behavior of an operating system from the actual hardware used underneath. Therefore, some hardware knowledge is often ignored, but you still need to know about the OS.With containers, you are decoupling the application from the host operating system! Which means some OS knowledge is often ignored.That said, abstractions can be leaky. Most of the time and in the most common scenarios, you can ignore the lower level details. No one develops a simple website thinking about NUMA cores or C-state transitions."	arter4	9.83255	-6.3203216	comment	3.0	12.0	1706949818	-8.050272
39249050	There were Dutch computers with weir	There were Dutch computers with weird combinations like 27 bit registers and 15 bit address lines made by Electrologica.	forinti	9.700758	-5.2462606	comment	3.0	15.0	1707042223	7.080404
39250848	Beyond being 60-bits, programming th	"Beyond being 60-bits, programming the 6400/6500/6600/6700 was interesting and memorable in other ways.- Ones' complement (rather than two's complement) binary representation of integers, and thus the need to cope with ""-0"" in your code.  Modern programmers are surprised that there was a day when ""-1"" had a different binary representation than today.- The CPU/CPUs were not actually 'in charge' of the machine.  There were ten 12-bit processors called PPU's (peripheral processing units) which did all I/O, and which had the unique capability of doing an ""Exchange Jump"" instruction to do a CPU task switch.  In a sense, the CPUs were 'compute peripherals' to the PPUs.- The architecture was fascinating in terms of memory hierarchy.  The ""centeral memory"" used by the CPUs was augmented by a much l"	rozzie	9.720601	-5.5013638	comment	3.0	12.0	1707060022	-7.637827
39260930	c7a servers have dedicated CPUs. Per	c7a servers have dedicated CPUs. Personally I like seeing benchmarks on AWS instances because anyone can reproduce them without needing to buy the same hardware. The virtualization overhead is basically nil; what’s not to like?	ericpauley	9.675767	-5.287399	comment	3.0	16.0	1707139145	7.9161825
39265249	China's strategic bet on open-source	China's strategic bet on open-source RISC-V chips	giuliomagnifico	9.361674	-5.6561475	story	3.0	33.0	1707159168	-10.581714
39267439	Hmm... Is China betting on RISC-V ch	"Hmm... Is China betting on RISC-V chips? China is too big to rely solely on a single chip architecture. I saw another attempt to develop a new chip architecture in China, called Loongson64.
In recent years, I've seen a lot of contributions to libraries/software, such as the Linux Kernel, Chromium, LLVM, V8, and ffmpeg, by Loongson, a Chinese chip company that produces an architecture called Loongson64.
Apparently, China wants to develop its own chip architecture, chip design, and chip manufacturing capabilities, and RISC-V is one of the options, but there isn't a single path to achieving that."	r2vcap	9.347639	-5.6662283	comment	3.0	20.0	1707168434	-10.597438
39267223	Serious question, x86 has obviously 	Serious question, x86 has obviously gotten us very far, but has legacy baggage, plus licensing restrictions.Is RISC-V so much better that the future (whatever long horizon) is inevitable? Or are we likely to continue x86 forever? RISC for specialized (matmul, embedded) applications and x86 will remain CPUs?If China injects $$ into the problem, will Intel and AMD have to follow?	0cf8612b2e1e	9.428407	-5.630092	comment	3.0	14.0	1707167384	-10.523033
39287790	I just implemented versioning in a C	"I just implemented versioning in a CMS and I read about every article about it I could find. My conclusion is that while all articles had their point and strengths, what a version is can vary widely between applications.For example, is my app, we decided that versions would represent ""committed"" modifications, for example you can modify a chapter title 60 times and then publish and get only one version. For ""undo"" we use browser storage. We came to this solution because it is a shared collaborative editor. In the end it is very git inspired.The other big ""problem"" is structure. There are things that should and should not be versionned.My point is that a usefull version system is very tightly coupled with the business logic, and it is not just snapshot."	kuon	8.821291	-6.3912306	comment	3.0	10.0	1707309387	-11.749256
39294665	Yes, but the latter is a fork of the	Yes, but the latter is a fork of the former's core components.	LordDragonfang	9.61834	-5.2670736	comment	3.0	16.0	1707342012	7.9306145
39298575	Ask HN: Getting into RISC-V, which b	Ask HN: Getting into RISC-V, which board should I get?	weinzierl	9.380992	-5.673195	story	3.0	18.0	1707369993	-10.572808
39324278	The Complete Bus Logic of the Intel 	The Complete Bus Logic of the Intel 8088	ingve	9.543927	-5.30438	story	3.0	81.0	1707549545	-7.559668
39344444	The main advantage of FPGA emulation	The main advantage of FPGA emulation is concurrency. When you’re emulating a piece of hardware with multiple chips in software, you’re often forced to run the emulation in batches (i.e. run the CPU for 10 cycles, then run the video chip for 10 cycles, then run the audio chip for 10 cycles) for performance reasons. This matters because some games require a higher level of timing accuracy to (for example) paper over bugs in the game code, or perform fancy graphical tricks. There are cycle-accurate software emulators, but they aren’t really playable for consoles after the 16-bit era and require relatively powerful CPUs. FPGAs allow you to run multiple chips in parallel, which eliminates this issue, allowing for accurate emulation in a small battery-powered handheld device.	ndiddy	9.086691	-5.2212076	comment	3.0	16.0	1707744104	8.246414
17189099	AFAIK, all the CPU microcode updates	AFAIK, all the CPU microcode updates were for fixing Meltdown, not Spectre. Unless and until CPU manufacturers find a way to fix speculative execution for good, software-based mitigations would seem to be mandatory.	kibwen	9.617076	-5.529152	comment	3.0	18.0	1527697840	7.794875
17191452	Linus did a video about Optane I fou	Linus did a video about Optane I found helpful.https://youtu.be/cwy4ujt0qHM	konceptz	9.361047	-5.825129	comment	3.0	12.0	1527712186	8.026457
18023470	If you're on UEFI, the 16bit environ	"If you're on UEFI, the 16bit environment is very likely running inside a UEFI ""hypervisor"" (ie, it puts the CPU into 16bit mode after setting up the appropriate interrupt handlers and hardware drivers). If you boot Windows or Linux via UEFI and not BIOS methods, then you never leave 64bit mode during boot.Real BIOS that boots from 16bit is quite a rarity these days."	zaarn	9.87421	-5.29882	comment	3.0	11.0	1537357556	-7.9965763
18036142	That's the spirit that got Linus Tor	"That's the spirit that got Linus Torvalds where he is now —""Be abrasive, don't pull punches, be a 'git'. People don't care about you, so you can't really hurt them anyway"""	theoh	9.27529	-5.902051	comment	3.0	19.0	1537485516	-8.165348
18059071	FPGAs have been used in the industry	FPGAs have been used in the industry for decades, basically every time you need high throughput and/or very low latencies and you don't have the volume to justify making an ASIC then FPGAs and CPLDs are the way to go.The article is not really talking about that though, it's more about having FPGAs in mainstream desktop computers. This is still far from a reality, even if Intel seems to be pushing for it.	simias	9.088875	-5.338912	comment	3.0	11.0	1537806857	8.265661
18059688	Milkymist: VJ on an FPGA	Milkymist: VJ on an FPGA	brian-armstrong	9.129801	-5.37928	story	3.0	53.0	1537811038	8.342209
18074297	I always thought this was quite eleg	I always thought this was quite elegant; in the original ARM ISA most ALU operations and register moves (and even some load/store indexing) could pass through the barrel shifter at no extra cost, so a 'ROR' was just a move from a register to itself with a pass through the shifter. This made up (somewhat) for the low code density implied by fixed-length instructions and uniform load/store architecture. AArch64 removes this capability from most of the arithmetic operations I believe.The design of the orginal ARM ISA is very interesting historically, mainly informed by many man years of hand-optimising 6502. As such it was quite idiosyncratic, nice to write by hand, and rather awkward for compilers...	jlarcombe	9.744376	-5.707348	comment	3.0	10.0	1537954820	-7.6442094
18074865	To let everyone in on a little !secr	To let everyone in on a little !secret, the 'objections' to these encodings is satire, something that was laid on a bit thick at the end of this post. There have been no real objections to ARM so far. x86 is a different story, the AAD/AAM instructions being the biggest example. In that case, being able to do something at the machine level that the assembly level abstracts away (converting bases other than base 10). Regardless of any kind of usefulness, any non 1-to-1 mappings between abstractions highly interest me.	XlogicX	9.749411	-5.5914464	comment	3.0	11.0	1537962043	-7.682325
18081125	And also completely not dangerous, y	And also completely not dangerous, yet it received the banhammer	jghn	9.616776	-5.6731834	comment	3.0	12.0	1538004644	-13.891011
18084378	IMO the most interesting part - espe	"IMO the most interesting part - especially relative to the discussions I've seen right here - is near the end.""But if people at least realise that I'm not part of the disgusting underbelly of the internet that thinks it's OK to show the kind of behaviour you will find if you really have been reading up on the 'discussions' about the code of conduct, then even that will be a really good thing.""Yes indeed, if you look at many of the anti-CoC comments (e.g. in the ""killswitch"" thread) you get to see a lot of that underbelly. There are people who will oppose any kind of general rule restraining behavior, because that would prevent them from exercising their own more personal and arguably more subtle kind of coercion against those they don't like for whatever reason. The other alternative is fo"	notacoward	9.269874	-5.8835044	comment	3.0	25.0	1538055857	4.169196
18084391	You are highlighting the false dicho	"You are highlighting the false dichotomy that a lot of folks in this thread--and, if I'm being frank, not for good, decent, or ethical reasons--are piling in on.You can do something that makes people upset without being an asshole.It's really that simple.""No, I won't merge this pull request because of X, Y, and Z."" Somebody's probably not going to be happy. But you have not needed to stoop to insulting them. You have not been an asshole. You have done your job, you have kept whatever level of high technical quality you care about. But you have not been an asshole.It is not hard to do both, and if you are but-forring Linus's decision to maybe be less of an asshole it's probably look-in-the-mirror time."	eropple	9.27069	-5.9030857	comment	3.0	27.0	1538055943	4.26615
18106712	How does Jane St. use FPGAs to make 	How does Jane St. use FPGAs to make money trading?  My impression was that unless the application demands real speed (i.e., microseconds), write it as software that run in a general purpose processor, not in an FPGA.  x86s always get the latest semiconductor processes, while FPGAs always lag.	supahfly_remix	9.091193	-5.3562326	comment	3.0	28.0	1538323478	8.331126
18125072	The commetization of the CPU market 	"The commetization of the CPU market was bound to happen eventually. As modern production techniques for chips and FPGA programming start to converge rapidly.What is the ETA until we get a GNX ""GNX is Not X86""? An Open source i386 core that people can run existing applications on? Much like GNU offered a standardized FOSS platform people could run existing Unix workloads on."	valarauca1	9.612738	-5.190126	comment	3.0	16.0	1538509729	-7.7628574
18126027	If you're just joining us, Arm very 	"If you're just joining us, Arm very much sees the up and coming RISC-V stack as an immediate threat to the future of their business and is taking pro-active countermeasuresBy any chance, does anyone know if Intel is funding RISC-V? According to the logic of ""Commoditizing the Complement"" one way of hurting a competitor is to make their product a commodity."	stcredzero	9.392157	-5.658345	comment	3.0	10.0	1538517232	-10.557045
18126056	How suitable is RISC-V for military 	How suitable is RISC-V for military use? If we were to redesign the F-16 from scratch in 2018, would be able to make it using hardened Arm or RISC-V chips in place of x86 processors?	stcredzero	9.397505	-5.6444726	comment	3.0	10.0	1538517462	-10.5546875
18128590	I understand and agree with you to a	I understand and agree with you to a certain extent, but we're not just talking about a couple of assembly commands that could be misused. The Intel ME is a FULL Operating System running MINIX Linux (edit: MINIX is not Linux, as corrected by @dragonwriter). It has it's own network and apps, that run inside a running kernel, of which you have no access to.Even if the intentions are 100% legit, this is an operating system that you can not update (as frequently as your main operating system), and has many attack vectors.Yes, it could pretend to run your firmware, but secretly load it's own, but it's actually quite hard to hide a 5mb (2mb min) piece of firmware in the chip. Research microchip decapping. You can clearly see the different regions of the chip.But yes, it could be possible to hide	turblety	9.531668	-5.220005	comment	3.0	10.0	1538556559	7.729215
18139063	You may be able to run certain moder	You may be able to run certain modern CPU units on an FPGA, maybe even one modern core, but compare the 4 million LUTs the biggest FPGA has to the 19 billion transitors a 32 core AMD EPYC has. With a LUT wildly variable equivalence of 1 to 1-50 ASIC transistors depending on the logic implemented, there's still one order of magnitude gap between them at best.In practice, Verilog simulators are used instead, they're slow as a dead horse on smack, but it's the only way to have full (logic) system integration of such big designs.	Uberphallus	9.174859	-5.3400025	comment	3.0	12.0	1538654396	8.295698
18163811	No, but this does it the way JavaScr	No, but this does it the way JavaScript wants it. FCVTZS has always been therr. FJCVTZS[1] is new.[1]: http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc....Did someone say ARM is RISC?	angelsl	9.501009	-5.610827	comment	3.0	10.0	1538966732	-10.511666
18169422	The amd probably can be built with E	The amd probably can be built with ECC ram while the intel cannot, as well. I hope that’s a hat trick amd pushes them to release on the i7s.	ianai	9.390958	-5.4523635	comment	3.0	31.0	1539019905	8.121078
18169618	Where will Linus Torvalds blog now?	Where will Linus Torvalds blog now?	MikusR	9.295202	-5.894129	comment	3.0	12.0	1539021022	3.8497305
18170399	That study is faulty.  The intern wh	That study is faulty.  The intern who did that study didn't know that Google would buy DRAM chips that failed manufacturers QA, but them on DIMMs themselves, and retest them at lower frequencies and with ECC turned on.  When they already have to be tolerant of any node failing because of their scale, they can start playing fast and loose with this sort of thing if it makes financial sense.EDIT:  At -3 so far, does anyone want to explain the downvotes?  I saw the google slides first hand, and there are comments from 2009 in that article saying the same thing.	monocasa	9.684614	-5.330337	comment	3.0	11.0	1539026122	8.125536
18168992	Hardware mitigations for Meltdown an	Hardware mitigations for Meltdown and Spectre are the real heroes here, and the main reason I've been holding off on building a new machine. Once I can find the ninth gen stuff without being bled dry on cost, I'll be building with these.	ocdtrekkie	9.563024	-5.4737606	comment	3.0	16.0	1539017129	7.790086
18175150	"Not too happy with the ""will be"" par"	"Not too happy with the ""will be"" part, because these types of endeavors are really hard, and it's unclear what likelihood of success the project has.But apart from that ... I really wish these guys will be successful.The FPGA world sorely needs to open up.My favorite analogy is that the FPGA world (and the ASIC design world in general) needs a project equivalent to LLVM: something that sorts out once and for all all the gnarly and nasty low-level stuff, offering a consistent high level view of hardware (a hard feat of course, given how different H/W might be from one vendor or chip gen to the next, but LLVM did pull it off) - even if it's not as optimal as coding down to the metal would be - and lets the rest of the world build amazing, high-level tech. on top of it.As a matter of fact, I "	ur-whale	9.089776	-5.3648043	comment	3.0	13.0	1539086327	8.32148
18191841	This is when I miss the days of big 	This is when I miss the days of big iron.  The Burroughs B5500, 6500 and 6700 all had massive light displays of registers.  The idle process loaded the registers with a bit pattern that showed the Burroughs logo, a circle with a B in it. You could watch the panel and see how busy the system was by how often you could see the logo flash in the lights.	AstroJetson	9.695045	-5.4285493	comment	3.0	16.0	1539247329	-7.3160033
18223892	I think that's a far smaller risk th	I think that's a far smaller risk than fragmentation. Without one company to control the ISA are we going to end up with a gazillion variants and extensions? How do you compile a program for that?Hell there are already a ton of variants defined in the base standard. I guess at the moment they are targeting embedded systems where it's reasonable that you compile your program specifically for one chip. Hard to imagine that working on the desktop though.	IshKebab	9.610258	-5.5283575	comment	3.0	11.0	1539638521	-7.736471
18224999	Most of the changes are removals of 	Most of the changes are removals of architectures other than x86_64. What a joke.	lowry	9.73814	-5.351426	comment	3.0	20.0	1539645914	-7.779703
18231824	Arm Announces Neoverse Infrastructur	Arm Announces Neoverse Infrastructure IP Branding and Future Roadmap	apress	9.4951935	-5.2026777	story	3.0	23.0	1539714167	-7.6918683
18233002	What is there to wrap your head arou	What is there to wrap your head around?You can send people a cute little bagel when you message them. It's funny. It's entertaining. Makes life a little more interesting.Don't lose your sense of humor, or get too jaded as you age. The world has it's flaws but I hope we can all find some small joy in things like emoji.	askafriend	9.799624	-6.257687	comment	3.0	13.0	1539722131	-13.976987
18237275	>The goal is to take standard applic	>The goal is to take standard applications and JIT them to their AVX-512 equivalent such that we can fuzz 16 VMs at a time per thread.What happens if the executable already contains AVX512 (or other SIMD) instructions?Though I guess you can rewrite them into their scalar equivalent first, and convert that into AVX512.	aaaaaaaaaab	9.518967	-5.5915565	comment	3.0	14.0	1539765933	8.071854
18243279	> Titan M's CPU is an ARM Cortex-M3 	> Titan M's CPU is an ARM Cortex-M3 microprocessor specially hardened against side-channel attacks and augmented with defensive features to detect and respond to abnormal conditions.It would be nice to see this being replaced by an an open-source RISC-V processor in the future, too.	mtgx	9.381299	-5.6032786	comment	3.0	11.0	1539807083	-10.5131855
18246653	x86 really does decode CISC into RIS	x86 really does decode CISC into RISC-like instructions. They're called micro-ops. Some of the instruction cache stores these translated instructions. People research the details of this. See https://www.agner.org/optimize/blog/read.php?i=142&v=tThe article looked about right to me.I didn't watch the (3 hour!) video you linked to. Can you give the time offset where the myth you refer to is explained?	abainbridge	9.516783	-5.734004	comment	3.0	16.0	1539848722	-10.505461
29681246	This makes no sense at all. Your lif	This makes no sense at all. Your life would have been strictly easier if MIQ didn't exist, so why are you grateful for it?	josephcsible	9.493923	-5.536586	comment	3.0	11.0	1640417543	-12.743649
29705614	Would parallelizing it to two distin	Would parallelizing it to two distinct cores help with the issue?	up6w6	9.729358	-5.487005	comment	3.0	11.0	1640631816	8.144377
29728463	> It is about tendency and attempt t	> It is about tendency and attempt to make it a norm/legalize to sell personal computers without respecting right of the owner to have a full control over their own computer. If owner cannot fully control own computer this computer cannot be called 'personal' anymore.I have bad news about Intel CPUs.>[Intel] processors are running a closed-source variation of the open-source MINIX 3. We don't know exactly what version or how it's been modified since we don't have the source code. We do know that with it there Neither Linux nor any other operating system have final control of the x86 platform.https://www.zdnet.com/article/minix-intels-hidden-in-chip-op...	GeekyBear	9.554414	-5.216581	comment	3.0	16.0	1640804254	7.977296
29753937	> Because there are 4 cores, the thr	> Because there are 4 cores, the throughput increases linearly up to 4 threads. Then it increases slightly more up to 8 threads, thanks to hyper-threading that squeezes a bit more performance out of each core. Obviously there is no performance improvement beyond 8 threads, because all CPU resources are saturated at this point. [emphasis mine]Can someone more knowledgeable than I please explain the obvious part of this? Why is the performance identical for 8-12 threads? What is it that is saturated at 8 threads even though there are 4 more threads hanging around?	pc86	9.63238	-5.42508	comment	3.0	10.0	1640995855	-5.5813575
29793375	Came across this very useful project	Came across this very useful project. It provides Docker images with Android running directly in Docker, without qemu or an emulator. I've never seen this before, all other solutions that I'm aware of either run the Android emulator in Docker or use qemu directly (like Anbox).Advantage of this is that it's very lightweight and does not require VT-X or AMD-V, ideal for running in cloud environments that typically do not expose this CPU capability.	PascalW	9.6471195	-6.341468	comment	3.0	15.0	1641292551	10.061515
29793841	Good point. Intel's 40 cores are bas	Good point. Intel's 40 cores are basically 80 cores due to hyper threading. Some people don't like hyperthreading for various reasons but it would be better to say the comparison is between 128 cores of Ampere and 80 cores of Intel.But then again, number of cores is really a crude measure. We need to measure what those machines can really do...P.S. Surprised I am being downvoted. If you only want to compare number of cores then I was implying that 80 is a better number than 40 to compare with 128. It gives you a rough idea of parallelism even though obviously HT does not give you 2x available cores all the time.I also added a caveat that that number of cores is a crude measure anyways.	sidkshatriya	9.600762	-5.4007854	comment	3.0	19.0	1641297182	8.00739
29794246	Q32-17 may have 32 cores, may have 4	Q32-17 may have 32 cores, may have 45W TDP and may have whooping 128 pcie 4.0 lanes but it is still only 1.7GHz.What this means in practice is that this will heavily depend on the type of load you are running. A lot of workstation type loads just can't make use of 32 threads and on that CPU it will have to just to offset for the slower single core performance.	lmilcin	9.520445	-5.1865053	comment	3.0	12.0	1641301384	7.897495
29809802	Extremely disappointing.Also the CES	Extremely disappointing.Also the CES didn't say anything about the next Threadrippers. :(They did tease the next Zen architecture but not much details sadly.But having Microsoft-designed hardware as a backdoor in my system? Absolutely not.	pdimitar	9.269314	-5.1933904	comment	3.0	57.0	1641395019	7.785787
29810276	Sure but I'd be paranoid about not h	Sure but I'd be paranoid about not having ECC RAM whereas Threadrippers support it officially. But I am sure there's a curated list of Ryzen motherboards that do in fact support ECC...	pdimitar	9.401407	-5.4704013	comment	3.0	20.0	1641397082	8.21989
29825362	Some years ago I joined a small comp	Some years ago I joined a small company, replacing a guy who was their only developer. He was pretty disorganised, and one of the first tasks I gave myself was to get the source code for the company's main product into a revision control system (Visual SourceSafe, I think). This turned out to be far from easy because his idea of versioning was to have multiple copies of the full source tree with the root directory named with a woman's name.Its been a while, but I remember it took me weeks to satisfy myself that I'd identified the correct sources for the builds that were then in production.	andyjohnson0	8.824162	-6.373151	comment	3.0	12.0	1641485428	-11.7385025
29838601	Do both E and P cores handle avx ins	Do both E and P cores handle avx instructions or are some instructions specific to p-cores? In that case, how does a processor with heterogeneous cores deal with processes (or, how does the OS/driver do it in automatic mode when affinity isn’t guided)?	alkonaut	9.525252	-5.499997	comment	3.0	10.0	1641560563	8.03527
29839783	> The real solution would be for Int	> The real solution would be for Intel to detect the presence of AVX-512 instructions then automatically and unconditionally pin the thread to the big cores. It wouldn't be hard either, just catch the unknown instruction exception and see if it is AVX-512 then move the thread.Having actually worked on this, it’s quite a bit more complicated, although it is possible. For better or for worse, though, Intel made a decision that all cores would expose the same feature set, and now this is baked into Linux and probably other OSes at the ABI level, and changing it would be a mess.A correct heterogeneous ABI (and frankly a good AVX512 ABI at all) would require explicit opt-in, per process, for AVX512. Opting in would change the signal frame format, the available features, and the set of allowed c	amluto	9.497164	-5.5498104	comment	3.0	13.0	1641567411	8.073981
29838277	I’m not surprised. A lot of people w	I’m not surprised. A lot of people were burned last year when their entire CPU downclocked as soon as one application started using AVX-512. That killed all interest even before Alder Lake.Also see Linus’s rants in this thread:  https://www.realworldtech.com/forum/?threadid=193189&curpost...And the discussion: https://news.ycombinator.com/item?id=23809335Today only benchmarks and HPC workloads use AVX-512. I’m sure Intel is happy to force HPC customers to pony up for data center CPUs.	NavinF	9.430861	-5.4624743	comment	3.0	15.0	1641558387	7.9719844
29838452	Is AVX-512 even useful in benchmarks	Is AVX-512 even useful in benchmarks? I thought it was mostly used for specialized workloads, and was basically useless for end users and gamers.	square_usual	9.451922	-5.5576844	comment	3.0	10.0	1641559418	8.121439
29889709	CFU Playground: Full-Stack Open-Sour	CFU Playground: Full-Stack Open-Source Framework for TinyML Acceleration on FPGA	blopeur	9.135213	-5.331725	story	3.0	30.0	1641896755	8.309839
29900068	>  There are a lot of important nume	">  There are a lot of important numerical algorithms which would have really benefited if Itanium had gone through iteration and growth. A mainstream VLIW could've had it's place, and it's trivial to find parallelism in FFTs, SVDs, matrix multiplies, and so on.DSPs (which have great perf/watt for the numerical algorithms you mention) have used VLIW for decades, so of course there is a place for it.  GPUs have moved in for all of those operations at this point though. The bet with Itanium was that compilers could be made sufficiently smart to make VLIW work for non-numeric workloads, and that bet failed to pay off.  Intel and HP had hundreds of smart people trying to solve the ""software problem"" of Itanium and they did not succeed.> I think it's a shame Itanium failed, and I think it failed"	aidenn0	9.583087	-5.6304293	comment	3.0	10.0	1641944289	8.194824
29901459	On-die HBM is already happening in t	On-die HBM is already happening in the CPU space:https://www.anandtech.com/show/17067/intel-sapphire-rapids-w...	timpattinson	9.350907	-5.1884904	comment	3.0	11.0	1641953739	7.8629045
29913621	This is a joke. The problem is it's 	"This is a joke. The problem is it's a boring and derivative joke. Brainfuck is 99% of the joke, then Heartfuck goes ""haha guys what if instead of <>+-.,[] we used various heart emoji?"" and it just isn't nearly as funny as the original joke, Brainfuck. This is less funny than most intentionally-unfunny memes."	hypertele-Xii	9.835378	-6.2335215	comment	3.0	11.0	1642026457	5.4883747
29932793	Can someone explain why PowerDVD nee	Can someone explain why PowerDVD needs the SGX feature? Intel clearly doesn't see it as being useful, or did they replace it with something better and Cyberlink just doesn't want to upgrade?I mean it's reasonable that Cyberlink shaw the SGX as a way of implementing DRM, but I don't believe it's the only way they could possibly do so.	mrweasel	9.518682	-5.1991444	comment	3.0	10.0	1642156520	-5.8362465
29954155	I did this in the mid-90s when this 	"I did this in the mid-90s when this book came out:https://www.amazon.com/Developing-32-Bit-Operating-System-Cd...I knew x86 well from demo scene coding, and I had the Linux and NetBSD sources to help, but the hardest bit was just getting all the boot sector stuff going properly and getting the processor into 386 mode as soon as possible.I wrote an entire OS that booted into a windowed GUI, multi-threaded, file system support etc, etc and my goal was the whole thing booting happily to the desktop in 4Mb of RAM from a 1.44Mb 3.5"" floppy, which it did. Every line was written from scratch in x86 assembler, because I was a masochist like that.I called it Tinkerbell, for reasons lost to time, and it was hosted at tinkerbell.org back when I owned that domain. I just checked archive.org but sadly "	kingcharles	9.8923435	-5.2875733	comment	3.0	10.0	1642318818	-7.970027
29958527	The feature was implemented in 2017 	The feature was implemented in 2017 the only vendors that are using it are lenovo and dell. With lenovo being the only one using it on lower tier cpus than epyc.	YXNjaGVyZWdlbgo	9.37403	-5.2647924	comment	3.0	28.0	1642357996	7.940164
29959740	> RISCV architecture (a free archite	> RISCV architecture (a free architecture that doesn't include that shit)Surely you can't think the architecture itself is the differentiator. x86 didn't have all of this security 20 years ago, give engineers a few years of time to throw some locks on a risc-v chip and it'll be Enterprise Ready™ in no time.	judge2020	9.404936	-5.639003	comment	3.0	31.0	1642365541	-10.583784
29959788	You're not wrong, but what's the mot	You're not wrong, but what's the motivation? With x86, backdoors and coprocessors were able to be added because both AMD and Intel were pretty much the only players in the ISA. Since they were effectively the only license-holders (and American multinational companies at that), the government had no problem forcing them to both add IME/PSP.With RISC-V, there is pretty much no such obligation. It's an open spec, there is no licensing fee and there isn't an obligation to add hardware susceptibilities. Chinese companies will (and are) manufacture chips like this at the lowest cost possible, likely eschewing any black-box m53s running Minix that you'd find on an American CPU. It also opens the possibility for more bespoke chip designs (as it's a modular ISA), and hopefully dividing the market b	smoldesu	9.364471	-5.65157	comment	3.0	17.0	1642365861	-10.568079
29962915	"Translation: ""We didn't provide the "	"Translation: ""We didn't provide the necessary API support, so now we're going to whine about ad-hoc brute force solutions that developers would never have had to resort to if we'd done our jobs.""Why isn't there a function I can call that enforces full CPU power, but only while my application is running?  I never wanted to change global system-level settings, but if that's the only affordance provided by the Win32 API, then so be it."	CamperBob2	9.786755	-5.3727355	comment	3.0	12.0	1642388729	7.980201
29966735	This explains Linus, as all I’ve hea	This explains Linus, as all I’ve heard is that he’s very reserved.  So much so it’s hard for people to understand where he stands on issues…/s for the newbies.	jleyank	9.286043	-5.8861427	comment	3.0	16.0	1642428919	4.259477
29966994	Yeah but I mean... that's why CI and	Yeah but I mean... that's why CI and CD are separate things. CI should not need any privileges. CI builds should be hermetic (no network access, no persistence, ideally fully reproducible from what's going in). CI should not talk to servers on your network, let alone have credentials, especially for production systems.	formerly_proven	9.154001	-6.4089003	comment	3.0	28.0	1642430773	6.1393785
29967240	CI for me has to access repositories	CI for me has to access repositories. Eg. downloading libraries from PyPI, Maven, NPM, etc...For private repositories, that means access to credentials. Probably read-only credentials, but it requires network access.Would you be suggesting that everyone should commit all dependencies?	NAHWheatCracker	9.078074	-6.3933816	comment	3.0	14.0	1642431996	6.104701
29968684	One example would be an architecture	One example would be an architecture on which hardware floating point is not implemented, and has to be emulated in software. This isn't uncommon in embedded, many ARM Cortex-M cores are like this AFAIK.	messe	9.646012	-5.2899055	comment	3.0	13.0	1642439073	-7.5327945
29990911	> while noting that Arm faces stiff 	> while noting that Arm faces stiff competition from emerging RISC-V competitorsIs the competition from RISC-V really that stiff?	thayne	9.387007	-5.6609063	comment	3.0	11.0	1642577391	-10.590964
29989944	"From the linked github code:    /*
 "	"From the linked github code:    /*
     Intel actually recommends calling CPUID to serialize the execution flow
     and reduce variance in measurement due to out-of-order execution.
     We don't do that here yet.
     see §3.2.1 http://www.intel.com/content/www/us/en/embedded/training/ia-32-ia-64-benchmark-code-execution-paper.html
    */
    static int64_t cpucycles(void) {
      unsigned int hi, lo;

      __asm__ volatile(""rdtsc\n\t"" : ""=a""(lo), ""=d""(hi));
      return ((int64_t)lo) | (((int64_t)hi) << 32);
    }

Where `cpucycles` returns the number of CPU cycles since its reset (as 64 bit integer). [1]Seems really useful for benchmarking!Note that this code was last updated Oct 2020 and there is a note on top. Also reading about this instruction, sounds like it doesn't work in hyper"	gnulinux	9.854418	-5.7657757	comment	3.0	13.0	1642566171	7.985953
30036132	IBM had the opportunity of being the	"IBM had the opportunity of being the royalty-free ISA that RISC-V is. Or even release the cores ""IP"". They squandered it."	goodpoint	9.403614	-5.6622195	comment	3.0	11.0	1642854818	-10.563684
30059459	> Many FreeBSD devs praise launchd, 	"> Many FreeBSD devs praise launchd, well... systemd is a clone of launchd.No they are not. Systemd has a way bigger scope then launchd. It's like saying a truck is the same thing as a family car because they both solve the mobility problem.> FreeBSD jail are sub-optimal compared to systemd-nspawn.systemd-nspawn isn't a container. For example it doesn't manage resources such as CPU or IO. Again, the scope is way different and in this case there is a whole slew of things systemd-nspawn isn't going to manage for you.BTW launchd doesn't have a feature like 'systemd-nspawn'.> Lack of security modules (such as SELinux) -- Edit: I should have written ""Lack of good security module""And how is SELinux a good security module? SELinux with it's design fell in the same pitfall dozens of security system"	jsiepkes	9.798758	-6.348896	comment	3.0	14.0	1643040697	10.637422
30076359	One of the stories I heard about the	One of the stories I heard about the 50 is that if you threw it into the ocean it would sink intermittently.Anyway the 50 was the first computer I was paid to program on. Many were bought to run in 7070 emulator mode as the 50 was the smallest / cheapest machine that could run 7070.Happily I was on the 360 side.At another shop, we had 2 50s, one running DOS and the other OS with HASP.One day a student was having trouble with the Test and Set (superceded by Compare and Swap) instruction not setting the condition code properly. I wrote a short diagnostic program to exercise TS, store the resulting condition codes and dump. The instruction was not performing correctly.I showed the dump to the non IBM engineers who hemmed and hawed. A couple days later one phoned me up to say that TS wasn't se	BXLE_1-1-BitIs1	9.832065	-5.387668	comment	3.0	13.0	1643137286	8.03499
30077861	Well the “chart decreasing” emoji is	Well the “chart decreasing” emoji is blue. So that whole thing about Japanese stock exchange is wrong…	d--b	9.818112	-6.2599387	comment	3.0	11.0	1643143973	12.457758
30078605	8% seems shockingly high, if that's 	8% seems shockingly high, if that's true then it's also shocking how little effort seems to be made to compensate for colorblindness.Why aren't Emojis presented differently depending on type of colorblindness for example?	fouc	9.815629	-6.270443	comment	3.0	10.0	1643147443	-13.961526
30106046	It always feels like the most amount	It always feels like the most amount of work goes to the least used emoji. So many revisions and additions to the family emoji and yet it’s one of the ones I don’t recall anyone ever using.I think the trap Unicode got in to is technically they can have infinite emoji so they just don’t ever have a way to say no to new proposals.	Gigachad	9.837318	-6.269399	comment	3.0	39.0	1643315344	-13.953143
30126232	Completely unrelated, but this keybo	Completely unrelated, but this keyboard feels a bit useless to me. I understand the appeal, but why would you not have emojis on a phone keyboard? Surely that counts as something that should be part of the basic package of something. Or am I overestimating how many people use emoji?	MisterSandman	9.826551	-6.253483	comment	3.0	10.0	1643464121	-13.955146
30132939	Core difference though is one side h	Core difference though is one side has to find a few bugs, the other side has to make zero mistakes.	olliej	9.693889	-5.2685795	comment	3.0	35.0	1643507321	7.956319
30148255	If your PC is slow, and and running 	"If your PC is slow, and and running out of memory for apps. It may be time for an upgrade.Your Core2Duo machine is a little old now there buddy.You have windows 95 as a OS that just ""worked""Windows 7 was the first Windows OS that ""Just Worked"""	halo37253	9.836165	-5.2556615	comment	3.0	11.0	1643639460	7.9445524
30181711	I bet AMD itself is not able to get 	"I bet AMD itself is not able to get even close to the 204 GB/s bandwidth that they ""promise"" for these CPUs.AMD instructions for measuring peak bandwidth are here: https://developer.amd.com/spack/stream-benchmark/ (essentially does a multi threaded memcpy). The script there will pin 1 thread per CCD, and with 8 threads you'll get close to peak bandwidth on CPUs with 8 CCDs (adding more threads doesn't help).I've run it in the same CPUs that AMD uses there, following their instructions to the letter, which should be able to achieve 204 GB/s, but the best I've seen is about 165 GB/s. That's 80% of what AMD advertises.HOWEVER, THIS NUMBER IS A LIE. It is using the AMD compiler with a flag called ""-fnt-store"" to turn all stores into non-temporal stores. This is something that no real-world app"	ggreg84	9.516817	-5.1906424	comment	3.0	13.0	1643826473	7.959599
30222786	I recently went back over this chip 	I recently went back over this chip because I really want to love it. They overhauled the software so now there's no colorforth. I'm not sure that the newer software is easier to use, though! That said, the hard pill to swallow is the philosophy. Once you buy into the philosophy, the software is right in line with it. It's not a bad philosophy -- that is, that most software does more than it needs and one should just start from first principles and write the software that solves the problem and nothing else. It's just a hard one to adopt.My objective was to make a low-cost lock-in amplifier for low temperature physics experiments. Usually you'd just buy a mid-range FPGA to do the signal processing but I was feeling spicy. We usually process signals up to 12 MHz or so, and to obey fs=fmax*4	gaze	9.103121	-5.3439364	comment	3.0	15.0	1644079053	8.367395
30229192	CI for the Debian Linux kernel team	CI for the Debian Linux kernel team	pabs3	9.531823	-6.1426744	story	3.0	58.0	1644119137	-7.948031
30232812	Could a case be made against using x	Could a case be made against using x86 based on it’s fragility from a security perspective? I imagine since ARM is not fully closed (EDIT: ARM is not oss) they don’t have this problem, although I suppose there’s nothing stopping Apple from “extending” the design by adding extra op codes is there? (genuine question).	pm90	9.681324	-5.1848083	comment	3.0	10.0	1644158034	-7.7023387
30243273	"> ""every single intel chip is easily"	"> ""every single intel chip is easily able to run arbitrary code and is vulnerable on a hardware level""It's not just Intel though. Both AMD and Apple also have their own ""security processor"" running its own operating system without your consent in your own hardware. Essentially this means they own the hardware, not us. I don't know if you would call it that, but to me it sure looks like the definition of a universal backdoor."	southerntofu	9.47848	-5.1867585	comment	3.0	26.0	1644232993	7.7832804
30243276	The instructions they found are only	"The instructions they found are only usable when in a special unlocked debug mode that they managed to access through exploiting the Intel CSME at a very early boot stage. Part of the reason this is about ATOM is that they haven't unlocked it yet on other, more recent desktop processors.So no immediate reason to worry but all the more reason to ask Intel to get all it's fucking ""management engine"" crap out of processors. There is no reason for this mode to be in production processors at all, or not behind a hard blown fuse."	stefan_	9.545211	-5.4078956	comment	3.0	15.0	1644233019	7.728217
30243756	The Intel source code was basically 	The Intel source code was basically leaked for a bunch of their firmware and nothing particularly interesting got out.	mhh__	9.448186	-5.202854	comment	3.0	10.0	1644236216	7.679026
30247373	Intel Corporation Makes Deep Investm	Intel Corporation Makes Deep Investment in RISC-V Community	jdblair	9.390292	-5.6553555	story	3.0	37.0	1644252502	-10.594426
30247920	I went with OSv (another unikernel) 	I went with OSv (another unikernel) for a previous pet project and, while I really loved the concept, I found the tooling to be immature. This project’s tooling and documentation does looks better so I look forward to trying it out.One thing I find missing with these unikernels though is IPSec support and Firewalls. I’d love to throw a unikernel image on DigitalOcean and have a secure software-defined IPSec tunnel.	invokestatic	9.913136	-6.2252297	comment	3.0	10.0	1644254523	-12.378136
30248133	Wow. Much bigger differences than I 	Wow. Much bigger differences than I was expecting.Anybody know how software support is looking for 64Bit? OS support is good but presumably the software itself needs to be arm 64 compiled too?	Havoc	9.798485	-5.325825	comment	3.0	12.0	1644255337	-7.7969155
30248845	I suspect most of the performance im	"I suspect most of the performance improvements came not from being ""64-bit"", but rather from the new instructions in aarch64 (and even in armv7) over armv6 (which is what the 32-bit Raspbian has to use to be backwards compatible with the first Raspberry).  So I don't think it is entirely appropriate to frame the performance improvements due to it going from ""32-bit"" to ""64-bit"".In fact, hypothetically assuming the same instruction set, 64-bit can cause performance degradation over 32-bit, particularly in memory-bound benchmarks, because the size of memory pointers and default int size will take up twice as much space, which puts stress on the limited cache space, which will generate additional off chip memory accesses."	em3rgent0rdr	9.81919	-5.4481688	comment	3.0	13.0	1644258122	7.869696
30252358	I've recently become thoroughly conv	I've recently become thoroughly convinced of the merits of consolidating onto as few machines (physical or virtual) as possible. One reason is that I recently consolidated some of my company's infrastructure onto a single bare-metal server to reduce costs. And then in the middle of that, this post came out:https://rachelbythebay.com/w/2022/01/27/scale/It seems to me that running lots of small VMs with unikernels is inherently wasteful compared to running many processes on a single machine with a shared kernel that can make optimal use of the machine's resources. Sure, the unikernel-based VMs can be smaller than equivalent Linux VMs, but one still has to allocate a fixed amount of RAM, storage, and (for public cloud platforms) CPU to each VM. We inevitably add some padding to those allocati	mwcampbell	9.889395	-6.259687	comment	3.0	12.0	1644273303	-12.35367
30254932	>ARM to IPOI'll be looking to pick u	>ARM to IPOI'll be looking to pick up some shares as a long-term investment.  I think ARM is one of the best things to happen to computing, and anything that threatens the x86 monoculture/hegemony is a good thing in my view.	na85	9.582859	-5.2211213	comment	3.0	22.0	1644294885	-7.891649
30255674	Soooo back on the LSE or?It was such	Soooo back on the LSE or?It was such a hot stock in 2014-15. Softbank kinda bought it at the peak. Still, Apple has proven ARM on the desktop is phenomenal, and Ampere has done the same in the datacenter. Both have swiftly made compiler support accelerate dramatically. I would love for my next desktop to be arm-based, and it would be great if it didn’t NEED to be a mac. Broad adoption of ARM would be a huge win for sustainability. I’m bullish on their business, even if their business model isn’t vertically scalable.I think that RISC V also has a bright future, but its still a bit far out before its a viable competitor. Still there have been some things that look really promising such as what is coming out of SiFive:https://www.sifive.com/press/sifive-raises-risc-v-performanc...And Intel ju	reilly3000	9.421273	-5.6131406	comment	3.0	32.0	1644303741	-10.548853
30257837	Let’s be real. ARM got a chance beca	Let’s be real. ARM got a chance because it excelled in a very specific use case: low power. Unless RISC-V differentiates itself in a significant way, it won’t replace ARM.	pm90	9.403131	-5.6629343	comment	3.0	21.0	1644325240	-10.570422
30264256	I have been working on a number of p	I have been working on a number of projects involving ARM64 assembly lately. My take is that we haven't even begun to max out the potential of Apple Silicon.First, many apps still run on Rosetta2. When they are finally converted, libraries and all, to native ARM code, that is real low-hanging fruit yet to be picked.Second, my sense--this isn't something I have data for--is that the code that is output by compilers can be further optimized much much more than for x64. One example is library routines not using all of the available hardware algorithms, e.g., in cryptogrpahy.Third, optimizing multithreaded programs for performance vs. efficiency cores. If there's an easy way of doing this, I couldn't find it. I implemented it myself. Making sure intensive tasks are on the performance cores and	garbagecoder	9.671286	-5.3605394	comment	3.0	11.0	1644352525	-7.649688
30265966	It's great as a global character set	It's great as a global character set and really enabled the world to move ahead at just the right time when the web started to connect us all together.But the whole emoji modifier (e.g. guy + heart + lips + girl = one kissing couple character) thing is a disaster. Too many rules made up on the fly that make building an accurate parser a nightmare. It should have either specified this strictly and consistently as part of the standard, or just left it out for a future standard to implement, and just just used separate codepoints for the combinations that were really necessary.This complexity is also something that has led to multiple vulnerabilities especially on mobiles.See here all the combos: https://unicode.org/emoji/charts/full-emoji-modifiers.html	GekkePrutser	9.857031	-6.2650485	comment	3.0	12.0	1644360571	-14.004498
30278555	That's the original date on the file	That's the original date on the file, but the comment being discussed (and much of the code in that function, it seems) was from 17 years ago. See the git-blame:https://github.com/torvalds/linux/blame/f4bc5bbb5fef3cf421ba...	sli	9.010555	-5.9259644	comment	3.0	10.0	1644441188	-7.5654373
30278888	ARM is a microcontroller architectur	ARM is a microcontroller architecture.	blueflow	9.613133	-5.2536893	comment	3.0	18.0	1644442618	-7.6060643
30285986	It doesn't really matter micro targe	It doesn't really matter micro targeting is not effective.	YXNjaGVyZWdlbgo	9.915365	-5.198208	comment	3.0	16.0	1644501288	5.466316
30288164	You've struck on the fundamental pro	"You've struck on the fundamental problem that the FPGA industry has been trying to solve for 30+ years - how to get an FPGA into the hands of every developer, like how GPUs have propagated to be essential tools.Nobody has come up with a good answer yet. Developing for an FPGA still requires domain-specific knowledge, and because place & route (the ""compile"" for an FPGA) is a couple of intertwined NP-hard problems development cycles are necessarily long. Small designs might take an hour to compile, the largest designs deployed these days ~24H.All this to say is that while they are neat, nobody has found the magic bullet use case that will make everyone want one enough to put up with the pain of developing for them (a la machine learning for GPUs). Simultaneously, nobody has found the magic "	vzidex	9.087435	-5.3582892	comment	3.0	14.0	1644509216	8.387637
30321056	I find it hard to believe there is n	I find it hard to believe there is no way to probe for extensions and provide a fallbackIt's a problem that already exists right now.If you compile code on a machine with SSE or AVX and run it on an old Pentium, does it crash?I had a fun bug once running ARM code that had some NEON in it and it would crashed on Scaleway's VPS bc their servers ran chips that didn't have NEON implemented	geokon	9.667941	-5.3644023	comment	3.0	13.0	1644752531	7.4614124
30321782	RISC-V is going to bite at the low e	RISC-V is going to bite at the low end embedded market where pennies matter, but it'll be a while before it eats into ARM at the mid to high end. ARM is offering non-discriminatory licenses at unit prices that are largely an irrelevance on the retail cost of a mobile phone or laptop. So it's going to take a long time to convince manufacturers that they want a non-compatible chip versus a few cents extra to get the well known one with all the support.	IMSAI8080	9.388356	-5.624666	comment	3.0	29.0	1644760663	-10.553482
30353980	If people cared, they would buy ECC 	If people cared, they would buy ECC capable chips.  In fact my desktop is a Xeon e3-1230v5, which as cheaper and slightly slower (3.4 vs 3.6 GHz or something) then the equivalent i7.  It was $50 more for the motherboard and $100 more for the ram.  I'm sure if the market flooded to ECC capable chips (the silicon is the same) Intel would sell them.So many people grumble, but I'm not really sure Intel should push ECC if desktops users aren't willing to pay a modest premium for it.Many cheer AMD, which does not disable ECC on desktop chips, but neither do they promise ECC will actually work.  It's a confusing mess between physical capacity (ram increases by 16GB when you add a 16GB dimm), and the actual correction of errors and telling the OS about the event.  Only on the EPYC does AMD test an	sliken	9.394996	-5.429674	comment	3.0	17.0	1644965489	8.148548
30358673	Intel Foundry Services (IFS) is mark	Intel Foundry Services (IFS) is marketing themselves as the only fab capable of producing all three of x86, Arm, and RISC-V.Back when Intel had a process advantage over everybody else I guess it made strategic sense for them to not let others use their process. Now when that process lead is gone, refusing to fab chips for non-x86 ISA's just means those customers will go elsewhere.	jabl	9.490756	-5.440946	comment	3.0	17.0	1645010827	-9.082725
30370828	As a laptop user I would probably op	As a laptop user I would probably opt to make the same choice as Apple here. I like the idea mentioned to allow a tunable parameter to only allow ever losing 1 second of data.Although, I also have the seemingly rare opinion here that ECC ram doesn't really matter on a laptop or desktop.	etaioinshrdlu	9.482362	-5.510862	comment	3.0	26.0	1645087127	8.178061
30388374	That's the 10% good info that I refe	That's the 10% good info that I referred to.If I drop into a random page of a random Ian Cutress article, there's a high probability it will be interesting and well thought-out content.If I drop into a random LTT video and scroll to a random timestamp, it's most likely going to be some minimal content arbitrarily stretched past the 10 minute threshold for YouTube monetization. I can usually find the answer to the clickbait headline with enough seeking around, but many of his videos contain so little actual content that it could probably be summarized in a couple of Tweets. His specialty is expanding it into 10+ minutes of overly enthusiastic, slow-paced talking about it.The information density is at polar opposites of the spectrum, and that's by design. YouTube favors quantity and clickbai	PragmaticPulp	9.280648	-5.8164883	comment	3.0	10.0	1645204479	3.7874863
30396516	Any feature that's a serious benefit	Any feature that's a serious benefit for raw performance takes up serious area. At Intel's volumes, it's better to produce a different (and smaller) die for performance-based market segmentations.Expect this to be used for features that are comparatively cheap in terms of area but valuable for enterprise. Virtualization features, ECC, that sort of thing.This will slow the adoption of those features in software ecosystems since many developers still quite reasonably focus on stuff that works on their local machine.	atq2119	9.48419	-5.2553735	comment	3.0	10.0	1645272580	7.945419
30409606	PACSafe: Leveraging ARM Pointer Auth	PACSafe: Leveraging ARM Pointer Authentication for Memory Safety in C/C++	belter	9.914895	-5.5612574	story	3.0	40.0	1645394030	-7.414234
30409310	This is an old article from the earl	"This is an old article from the early 90s and I believe it may have been the first public mention of this fact about the x86 encoding, although no doubt many have independently ""discovered"" it before --- especially in the times when microcomputer programming consisted largely of writing down Asm on paper and then hand-assembling the bytes into memory using something like a hex keypad.All of these are features inherited from the 8080/8085/Z80.Here are the corresponding opcode tables in octal:https://dercuano.github.io/notes/8080-opcode-map.htmlhttp://www.righto.com/2013/02/8085-instruction-set-octal-tab...http://www.z80.info/decoding.htm"	userbinator	9.839187	-5.732799	comment	3.0	30.0	1645391650	-7.4840255
30443052	I hope so too!  But, I was trying to	I hope so too!  But, I was trying to think of if I've ever seen the Linutronix folks working on the Intel graphics code.  I don't think I have:https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/lin...For very selfish reasons, I'm hoping that this acquisition will give the Linutronix folks even more of an opportunity to contribute to the core kernel and especially arch/x86.Disclaimer: I work on Linux at Intel.	hansendc	9.308261	-5.240898	comment	3.0	11.0	1645634797	-5.4225507
30475890	It's interesting to see the shift in	"It's interesting to see the shift in perspective. The first post was well in the ""RISC era"", several months before the P6 (PPro) came out and surprised everyone. I would've loved to see what the engineers at Intel thought of this TLB discussion --- especially those who worked on the 386, and thus made the decision to go with a hardware TLB.The idea of software-refilled TLBs always seemed strange to me; a TLB is a cache, yet I don't know of any widely-used CPU with data/instruction caches which need to be explicitly managed in software. ARM, the most common RISC now, uses a hardware TLB."	userbinator	9.692822	-5.442046	comment	3.0	11.0	1645861649	-7.729987
30486517	Really hoping for RISC-V to take off	Really hoping for RISC-V to take off and become a viable and mainstream alternative for consumer desktop machines so we can have a modern, fully open, and customizable computer.	technerder	9.383104	-5.650258	comment	3.0	18.0	1645951902	-10.603038
30493232	I'm not sure focusing on the instruc	I'm not sure focusing on the instruction set is the right angle.x86 would be more competitive in the mobile space if Intel had offered efficient chips. Is the instruction set the biggest blocker that prevented this? Or is it the licensing model? Perhaps if Intel had licensed their architecture and instruction set to others, like ARM does, they would be in a better position?ARM's licensing model get's a lot more eyes on instructions sets and chip designs. It allows big companies like Apple come in and run the show, licensing just the instruction set. Why wasn't Intel working with large customers with an interest in custom x86 designs? In hindsight it seems presumptuous to assume there is no x86 talent outside Intel/AMD.Really impossible to know how much the actual instruction set is holding	initplus	9.550806	-5.2700715	comment	3.0	10.0	1646000087	7.742126
30516129	And if ARM started allowing everyone	And if ARM started allowing everyone to use their IP for free you would expect them to survive? ARM the architecture might survive but probably no ARM the company. IMHO a more likely outcome with Risc (assuming it gets widely adopted) would be one or two companies like Samsung, Qualcomm, AMD or even Intel gaining a massive advantage and profiting from it instead of cheaply licensing their designs to other companies. I don’t really see how is that preferable to the ARM model where company can theoretically license the most advanced ARM cores there are (of course aside of what Apple is doing) or mostly equal terms.Of course RISC might push them to make their licensing mechanism to be more flexible if they start considering RISC  an a real threat to them (I don’t think this is very likely to 	yywwbbn	9.412567	-5.4838367	comment	3.0	36.0	1646151828	-10.525937
30517238	If it becomes an issue ARM probably 	If it becomes an issue ARM probably will change dramatically, however keep in mind RISC-V let's you licence hundreds of probably pretty crummy cores (and a handful of good ones) whereas ARMs are battle tested, verified, and come with documentation. RISC-V docs are still a bit 1980s i.e. as far as I'm aware there's no official online source of HTML docs, and not as much blessed software as arm (i.e. compilers tested in-sync with the ISA). Oh and people to sue...I also trust the ARM ISA designers more than the RISC-V ones, but I don't know enough that you should trust me.	mhh__	9.399476	-5.650584	comment	3.0	24.0	1646156538	-10.557377
30518165	What scares the hell out of me, it w	"What scares the hell out of me, it would be so easy to backdoor an implementation of the open core in a well-hidden way.Whereas the ""big"" CPU providers are staking their reputation and therefore future business on providing a non-backdoored CPU, it would be fairly trivial for an individual device manufacturer to provide a backdoored CPU design for their chip design.It could become the whole cheap-device OEM firmware situation all over again (as we saw with many backdoored routers), but this time the blob is located on-die, so is significantly harder to reverse engineer or audit."	ninjaoxygen	9.584998	-5.2100945	comment	3.0	10.0	1646160199	7.815463
30518190	I see too much cheerleadering for RI	I see too much cheerleadering for RISC-V.Apple is not going to adopt it, ARM is still fighting against X86 Imperium in the desktop/server market, and the mobile ecosystem of tooling, compilers, libraries and build process just isn't there.If RISC-V manages to win education market previously targeted by MIPS and microcontroller, that is already quite good.	pjmlp	9.406935	-5.6213784	comment	3.0	22.0	1646160314	-10.546643
30528251	I had a similar thought some time ag	I had a similar thought some time ago and concluded it's an impossible task. The problem is that it would need to understand every file format its users care about and be able to represent changes in a useful way.How do you merge destructive edits to image files?	Zak	8.7787485	-6.4263616	comment	3.0	10.0	1646234112	-11.709123
30579854	How practical is this against an adv	How practical is this against an adversary with hardware access? If they can put a vampire tap on the motherboard or CPU pins, won't the alternate code paths pursued by the CPU alert them? Most computers have standardized bootloaders. This would only work if the decryption key selection computation is encrypted and homomorphic.	melony	9.685273	-5.300323	comment	3.0	12.0	1646591886	7.688744
30585132	The FAQ heavily downplays the fact t	The FAQ heavily downplays the fact that it is a highly derivative architecture from MIPS. Yes the exact encodings are different, and there are a few differences in instruction but of the kind you might expect from a revision of an ISA.To the point where the Linux kernel port for the architecture was a straight copy and paste of large parts of the assembly code from arch/mips (with the replacement of the copyright headers being among the largest changes in some cases).Sadly it's exactly what you would expect of a Chinese ISA.	throwawaylinux	9.6037445	-5.5608835	comment	3.0	11.0	1646638411	-7.69752
30605213	Could/would this machine makes sense	Could/would this machine makes sense as a development machine? I use a Macbook Pro (M1) and it's always docked...I basically don't need it to be transportable. I could also use more power (I'm regularly running a bunch of docker containers + PyCharm + DataGrip + Android Studio).	xwowsersx	9.58826	-6.4285054	comment	3.0	14.0	1646767859	9.9909725
30607052	Yeah, it’s the real world tasks that	Yeah, it’s the real world tasks that GeekBench tries to simulate that don’t tend to scale linearity with processor count. A lot of software does not take good advantage of multiple cores.	enneff	9.630859	-5.3529096	comment	3.0	10.0	1646774005	7.958212
30607742	AMD will be on TSMC N5P next year, w	"AMD will be on TSMC N5P next year, which will give them node parity with Apple (who will be releasing A15 on N5P this year), and actually a small node lead over the current N5-based A14 products.  So we will get to test the ""it's all just node lead guys, nothing wrong with x86!!!"" theory.Don't worry though there will still be room to move the goalposts with ""uhhh, but, Apple is designing for high IPC and low clocks, it's totally different and x86 could do it if they wanted to but, uhhh, they don't!"".(I'm personally of the somewhat-controversial opinion that x86 can't really be scaled in the same super-wide-core/super-deep-reorder-buffer fashion that ARM opens up and the IPC gap will persist as a result.  The gap is very wide, higher than 3x in floating-point benchmarks, it isn't something "	paulmd	9.529186	-5.229039	comment	3.0	14.0	1646776859	-6.7658787
30609622	That's a great article.I do worry so	That's a great article.I do worry sometimes that something is up with CPU development, that we're tending towards more and more complicated designs with workflows that are very hard to analyse and simulate even for the designers themselves, but the actual workload execution ability performance per core isn't shifting upwards all that much, and then weird mitigations have to be applied that reduce that execution ability in practice.Something makes me think that perhaps a different design paradigm should prevail, with particular attention paid to segregation of workloads and of core partitioning, perhaps an abandoning of hyperthreading and even to the extent of having 100% physical separation of cores and their caches.But I'm very much not an expert in the field.A little birdie inside of me 	Lascaille	9.756653	-5.5175486	comment	3.0	20.0	1646787146	8.004806
30611434	Is it just me or do all the main com	Is it just me or do all the main computer vendors have plateaued with regards with to single core performance?	arvinsim	9.564359	-5.256778	comment	3.0	14.0	1646806384	7.864451
30611040	Itanium had a decent service life an	Itanium had a decent service life and a reasonable install base. It didn't take off because of economies of scale and Intel not really wanting to introduce a big x86/x64 competitor.The Itanium platform was totally unaffected by Spectre/Meltdown type attacks, you may note.	Lascaille	9.5153675	-5.4890494	comment	3.0	12.0	1646801188	-7.739926
30618545	It depends on the model, yes. Here a	It depends on the model, yes. Here are some examples in the benchmarks section of our docs: https://www.tensil.ai/docs/reference/benchmarks/We haven't specifically tested on any ICE40 FPGAs yet - if this is something that you'd really like to see, let me know! Taking a look at the lineup, the ICE40 LP8K and LP4K would be suitable for running a very small version of the Tensil accelerator. You'd want to run a small model in order to get reasonable performance.Generally speaking, FPGAs with some kind of DSP (digital signal processing) capability will work best, since they can most efficiently implement the multiply-accumulate operations needed.	tdba	9.117589	-5.2601686	comment	3.0	14.0	1646852032	8.229825
30656457	Blender Client for LibSM64	Blender Client for LibSM64	tosh	9.777909	-5.3157873	story	3.0	96.0	1647130151	-7.8422174
30666914	Yeah I would love not being dependen	Yeah I would love not being dependent on x86 and its horrid UEFI mess. Then again... I believe technically ARM (and even RISC-V) board manufacturers can also make something similar. Let's hope that doesn't become a thing though.	justaj	9.728058	-5.2308245	comment	3.0	12.0	1647214711	-7.811316
30667481	The diff patches would be considered	The diff patches would be considered derivative, since you cannot make it without knowing the original.	chii	8.807825	-6.4256225	comment	3.0	14.0	1647220516	-11.693886
30691980	Ok looks like I was wrong.Is the ope	Ok looks like I was wrong.Is the openc906 definitely the same design as the one in the D1? It looks like it is but I have been bitten by xyz vs. open-xyz subtlety before.	mhh__	9.543269	-5.4992037	comment	3.0	13.0	1647379710	7.9344816
30722230	You're forgetting the most important	You're forgetting the most important one:- This is not heir first rodeo. They've migrated from PowerPC to x86 and developed first Rosetta, UniversalBinary format and related machinery.They've tapped into that experience, and it went way way smoother.	bayindirh	9.624784	-5.202095	comment	3.0	13.0	1647611525	2.9475367
18254193	Talk is cheap.The TL;DW is that the 	"Talk is cheap.The TL;DW is that the mill cpu will have better performance than existing CPUs without speculative execution because it has ""deferred loads,"" while the straw man not-mill architecture doesn't and therefore stalls after every load. Also, newsflash -  Spectre doesn't impact architectures that don't speculate.This is great, except for that existing CPUs don't stall after issuing a load. Scoreboarding + prefetch are together capable of more than this ""deferred load,"" and require less work from the compiler. If you have independent instructions following a load, any existing architecture worth its salt will notice that and execute them while the load is in progress.It's potentially a neat idea to include the number of cycles until load retire in the instruction, but it's a joke to"	twtw	9.724066	-5.6879215	comment	3.0	14.0	1539922385	-6.7207556
18254421	You talk about the mill as if it exi	You talk about the mill as if it exists. There is no hardware, there are no benchmarks. Bloviating about the excellent performance of the mill is not valuable - showing SPEC CPU results is. VLIW performance was great too, until it wasn't. You can statically schedule everything in theory and the performance will be great, but experience suggests that giving hardware the capability to react dynamically cannot be replaced by static scheduling, except in code with limited branching and a known execution pattern. This is why VLIW works nicely for DSP, and fairly poorly for general purpose computing.The mill has been in development for 15 years, and almost done for 5. Forgive me for not holding my breath.	twtw	9.6641	-5.677295	comment	3.0	17.0	1539927086	8.060395
18255017	I'm not quite sure why they say q35 	I'm not quite sure why they say q35 chipset has bugs, I'm currently running Mojave without bugs on a q35 configuration. Also, they're making questionable choices regarding keyboard and mouse configuration. What you should really be doing is passing through a complete USB3 controller (either from the Chipset or from an external USB3 pcie card), with a mouse and keyboard attached to it. Finally, I would recommend using an AMD RX500 series card, which has native support in macOS, and absolutely no extra Clover flags required (10.13.6 and up).Also, the guide assumes a lot from the reader (someone who already knows how to do PCIe passthrough in qemu).I wrote a guide here that explains everything I wrote above, and actually starts from the basics:https://github.com/yoonsikp/macos-kvm-pci-passthr	rubatuga	9.863489	-5.2166715	comment	3.0	18.0	1539937098	-8.286139
18260028	Threadripper or Core i9 for my next 	Threadripper or Core i9 for my next Linux desktop build?	noipv4	9.413312	-5.1987886	comment	3.0	12.0	1539982865	7.9478045
18260318	Are you saying that when you start a	"Are you saying that when you start a game, you are closing all the programs you have opened and disable all the services/background processes?
If a game uses 6 cores, you can have 2 more for your office, browser and god knows what else running without slowing you down."	individualcell	9.780717	-5.2856407	comment	3.0	10.0	1539985706	7.8543787
18275661	How much damage have Linus's snippy 	How much damage have Linus's snippy emails really caused, in light of how they have benefited us? I and many other people like reading them because they are fun, so you have to take that in to account. Different people like different things, and that principle extends to writing styles and personalities. Indeed, if you really want to have diversity you should have some emails that I like to read in addition to having emails that you like to read, which by necessity implies that every email thread needs at least a few glib comments. I have heard that Matz and by extension the Ruby community is nice, maybe that project needs to recruit a Linus to fill out their personality lineup.	whatshisface	9.290356	-5.882575	comment	3.0	32.0	1540223451	4.329494
18277470	"""the mission to reinvigorate the RIS"	"""the mission to reinvigorate the RISC OS market""They're nearly 20 years too late for that. The only compelling reason to use RISC OS over anything else these days is nostalgia. Still, it might be an interesting project to hack on."	danellis	9.422537	-5.637393	comment	3.0	17.0	1540235934	-10.534329
18281631	Welcome Linus  1.0.1-000 (first mino	Welcome Linus  1.0.1-000 (first minor revision).Linus  debugged his own communication routines after users complained.	nabla9	9.306792	-5.880539	comment	3.0	15.0	1540282358	4.175714
18283251	What are the best tools for experime	What are the best tools for experimenting with unikernels?	galois198	9.918154	-6.2444215	comment	3.0	13.0	1540301953	-12.393387
18281646	Funny that their code of conduct con	"Funny that their code of conduct contains all the standard equal rights no matter what XYZ, while this was never Linus problem. He never lashed out on people because of gender, race or sexual preference. It should simply have said ""Don't be an elitistic assh*le aginst people just doing their best."""	AnnoyingSwede	9.272035	-5.9067645	comment	3.0	94.0	1540282559	4.2664084
18308672	There are a handful of micros. The l	"There are a handful of micros. The lowfive and a few coming from ChinaHere is an AI chip:https://hackaday.com/2018/10/08/new-part-day-the-risc-v-chip...It's an interesting proposition b/c they using RISC for the core, but the APUs are custom - so they can create some lock-in there for themselves (without lock in it'll just be a race to the bottom with razor thin margins)And here is RISC-on-an-FPGA in a nice package. It's very Chinese hobbyist oriented
https://www.cnx-software.com/2018/09/04/licheetang-anlogic-e...Both those projects are by Zepan. That guy is a machineBut I'm not quite sure what's holding up general purpose CPUs (even just something crappy/good-enough).. 
The way I understand it CPUs aren't just beefy microcontrollers and they requ"	geokon	9.373696	-5.4819856	comment	3.0	12.0	1540557958	7.6013384
18317570	Linus Torvalds Shows His New Polite 	Linus Torvalds Shows His New Polite Side While Pointing Out Bad Kernel Code	uluyol	9.414867	-5.8653893	story	3.0	11.0	1540672941	-8.19272
18322640	Microsoft has been doing a lot to re	Microsoft has been doing a lot to rebuild itself as a cloud provider.IBM has been doing a lot to go out of business.Microsoft's first CEO is still chairman and helping lead the company even from the sidelines.IBM is a floating raft of failed leadership.Microsoft isn't trusted fully by the community but they are making inroads under their new CEO.IBM has been firing its most senior people in an effort to slow its cash burn and to hire younger folks.  IBM also claims it's also to bring on folks with more relevant skills to emerging technologies.  I think there is a lawsuit about this.Anyway, IBM has done nothing in recent years to show they are a true contender.If the Redhat team is able to pull a Next here and assume leadership roles inside of IBM this could be stellar.  Big Blue's formidab	cenal	9.866666	-5.270353	comment	3.0	11.0	1540755744	-9.320905
18323991	1) FPGAs are used for low-level stuf	1) FPGAs are used for low-level stuff (high-speed digital logic) and high-level stuff (accelerating algorithms). It sounds like you're only interested in the latter. You can ignore any tutorials that go into Verilog/VHDL or low-level logic design.2) The two major FPGA manufacturers are Intel and Xilinx. Each has their own tools. The tools are very different. You should pick one (flip a coin) and stick with it, at least starting out.3) FPGA manufacturers typically have a free tier of their tools, and a paid tier. The paid tier is usually thousands of dollars. You'll only need the paid tier if you're using a high-end FPGA (those are usually also very expensive - thousands of dollars for an evaluation board).4) Buy a popular FPGA board in the $100-$1000 range. I recommend something from Teras	phendrenad2	9.092486	-5.3359003	comment	3.0	12.0	1540771147	8.388342
18324946	This whole thread is frankly, so dum	This whole thread is frankly, so dumb. One of my best friends is a SoC designer at Apple and we talk about this stuff all the time.First thing people need to understand: this whole world operates at scale. You don't bother making an ASIC unless you really need one -- you're either making millions/hundreds of millions of them, or the individual application is so high-value that the hassle, complexity, and expense of moving off a general-purpose CPU onto something completely custom is worth it.Second, 4K is chump change. You need an entire team of people to do anything meaningful with FPGAs/ASICs. Less than that, just buy a $100 CPU that will do more, be immediately available, and have an entire software stack (OS, user-space programs, compilers, etc) for it. And teams that know how to build	eldavido	9.212734	-5.214239	comment	3.0	12.0	1540785427	8.207877
18333062	What happened to concerns on Spectre	What happened to concerns on Spectre/Meltdown being exploitable through high-resolution timers implemented through shared buffers/multithreading in Chrome?	m1el	9.766866	-5.6226997	comment	3.0	10.0	1540860337	7.427233
18333864	First Impression: Looks like a way t	First Impression: Looks like a way to turn high-level code (Scala, Java) into low-level FPGA gates / ASIC silicon.  If that works for all types of high-level programs, it's absolutely brilliant.  If not, it's still a great idea.  I wish them much success in the future!  (Looking forward to something like Any Language -> LLVM -> FPGA / ASIC...) This is a good step in that direction.	peter_d_sherman	9.137194	-5.4362545	comment	3.0	10.0	1540870638	11.861429
18345063	Latest Revision to ARM Instruction S	Latest Revision to ARM Instruction Set Includes Optimizations for JavaScript	mariuz	9.730666	-5.419726	story	3.0	19.0	1540989003	-7.850433
18349339	Why is this the case? No one has bot	Why is this the case? No one has bothered to do it? It would break backwards compatibility? Linus thinks it's a bad idea?	lalaithion	9.389726	-5.81096	comment	3.0	13.0	1541020504	4.206814
18358111	I can't count the number of times I'	I can't count the number of times I've read an announcement of some OSS project, gone to the project home page, read it all and still had absolutely no idea what it was, what it did or why it might be important.It is impressive how much Linus had working at that point though. Getting bash and gcc working and a multithreaded FS is no mean feat, and is enough for other people to actually make useful contributions without excessive pain.	simonh	9.452281	-5.8252163	comment	3.0	11.0	1541104223	-8.266825
18363570	This looks fun. I'm a bit surprised 	"This looks fun. I'm a bit surprised that they went with the Arduino ""standard"" with its weirdly spaced headers given that I assume that most of the Arduino software won't run on the chip. Or did they make a compatible SDK?Also looking at the specs it seems that the SoC has PWM, UART and QSPI but no I2C or DAC/ADC. That might make it a bit annoying to port some Arduino designs to it (although you can always bitbang the I2C). There's also no USB or MAC unless I missed something. So basically if you want to get data in and out fast QSPI is your best bet and even that doesn't seem to have a DMA so you'll have to use CPU cycles to copy everything in and out.So in summary it's definitely a cool board if you're interesting in hacking on RISC-V specifically but if you're just looking for a control"	simias	9.388786	-5.595994	comment	3.0	13.0	1541171538	-10.542965
18374150	6502 is a harsher environment than Z	6502 is a harsher environment than Z80 which CP/M was originally designed for. It's a good candidate for a C64 port too.	sedatk	9.599259	-5.290784	comment	3.0	12.0	1541304443	6.8455124
18377330	I still find it to be an interesting	"I still find it to be an interesting intellectual challenge, even though it has no commercial use that I know of.The huge volume of embedded cores based on a 6502 would disagree strongly --- I'm sure everyone has at one point used a 6502-based embedded system. They're everywhere in things like keyboards and mouses, LCD monitors (the MCU responsible for generating the OSD and such), and toys like the famous Tamagotchi and Furby, as well as keychain picture frames:https://hackaday.com/2013/05/24/tamagotchi-rom-dump-and-reve...https://news.ycombinator.com/item?id=17751599http://spritesmods.com/?art=picframeAlso popular ""not very good for HLL"" architectures that yet have (subset of) C compilers for them include the 8051 and the Microchip PIC series."	userbinator	9.56679	-5.3088164	comment	3.0	11.0	1541356647	-7.566459
18383235	This article was pretty low on detai	This article was pretty low on details, so I went out and collected some links:This looks more or less like another stab at the Cray connection machine[0], but with modern hardware and a better framework about how neural nets can and should work.> The SpiNNaker engine is a massively-parallel multi-core computing system. It will contain up to 1,036,800 ARM9 cores and 7Tbytes of RAM distributed throughout the system in 57K nodes, each node being a System-in-Package (SiP) containing 18 cores plus a 128Mbyte off-die SDRAM (Synchronous Dynamic Random Access Memory). Each core has associated with it 64Kbytes of data tightly-coupled memory (DTCM) and 32Kbytes of instruction tightly-coupled memory (ITCM). The cores have a variety of ways of communicating with each other and with the memory, the do	peterlk	9.833593	-5.3896227	comment	3.0	10.0	1541433100	-1.1694604
18385229	a. single threaded codeb. extended b	a. single threaded codeb. extended benchmark duration - no thermal throttling encounteredc. straight forward C compiler - no special code for the GPU unit or whateverd. main reason is probably memory and cache configurationI think it is time to consider A(RM) and Intel cores at par. Qualcomm cores maybe X% slower but they will close the gap.It is now a question of system trade-offs, as designers jangle memory sizes, cache sizes, cores, cooling, vector extensions, etcThis is a really pivotal event.And dont forget AMD challenging Intel on like-for-like cores.Its pretty amazing that noone has put together a real ARM alternative for the server side.	yazr	9.635414	-5.2490373	comment	3.0	14.0	1541446735	7.850194
18390390	On the other hand, these shady pract	On the other hand, these shady practices are a testament to AMD's technical superiority, as the incumbent is showing himself to be very desperate to react although it has absolutely no answer to AMD's new line of products.	geezerjay	9.245727	-5.1989174	comment	3.0	13.0	1541507470	7.866124
18393089	> custom AMD EPYC processorsI wonder	> custom AMD EPYC processorsI wonder, how much effort does that entail? Is this some TDP and firmware tweaks, or is it actually different silicon? If the later, that sounds like a reasonably big bet that there will be a lot of AMD chips sold to AWS.	piinbinary	9.339527	-5.3154798	comment	3.0	13.0	1541525818	8.039301
18393097	Still EPYC processors have up to 32 	Still EPYC processors have up to 32 cores, 64 HT - where is 96 comming from?	mamon	9.350956	-5.2918906	comment	3.0	13.0	1541525870	7.9565916
18394401	Threadripper 3 with 64 cores is goin	Threadripper 3 with 64 cores is going to be mindblowing! Not that long ago since Parallella board advertised 64 slow cores and soon we can get all x86/x64 high-end cores like that!	bitL	9.486992	-5.2590423	comment	3.0	15.0	1541534355	7.945957
18407850	Attack Directories, Not Caches: Side	Attack Directories, Not Caches: Side-Channel Attacks in a Non-Inclusive World [pdf]	mettamage	9.80033	-5.585581	story	3.0	28.0	1541697237	-5.7224765
18408103	In any organization if you have an i	In any organization if you have an internal tool or software it’s not like you can press a button and make sure it is cross compiled to ARM from x86. That is a huge and expensive undertaking.	zitterbewegung	9.738952	-5.3915076	comment	3.0	14.0	1541699014	-7.778849
18418654	Can you run this software if the cor	Can you run this software if the core is removed or disabled?	kazinator	9.698752	-5.2338805	comment	3.0	11.0	1541803245	7.8446455
18426194	Measuring and Improving Your CI/CD P	Measuring and Improving Your CI/CD Pipelines	kiyanwang	9.2157955	-6.4313335	story	3.0	50.0	1541941766	6.1760025
18425237	Gor Nishanov, one of the authors, ta	Gor Nishanov, one of the authors, talks about this in his CppCon2018 talk https://youtu.be/j9tlJAqMV7U (jump to ~12:33 to skip background).It amounts to using CPU prefetch instructions with C++ coroutines to simulate hyperthreading in software by scheduling instructions around cache misses (but is potentially better than hyperthreads because it's not limited to 2/core)	akubera	9.883747	-5.6742544	comment	3.0	11.0	1541916896	8.247848
18431103	I wonder to what extend it's possibl	I wonder to what extend it's possible to include every executable from the standard apt-get ARM repository (but not any other resources) in the app. Since the code is included at compile time and bundled with the App, Apple should allow it. Then one could add some sort of apt-get shim that fetches the non-code resources and installs them; and something to catch system calls (which could maybe be overridden at compile time as well).	ant6n	9.910922	-5.394976	comment	3.0	10.0	1542007730	-7.803154
18434207	Can anyone recommend introductory ma	Can anyone recommend introductory material for programming in Verilog?  I'm a software guy who wants to dabble in hardware.  I want to get just a straightforward explanation of the syntax and semantics of the Verilog language, and basic practices like how to write tests.  I haven't come across anything on the Internet that seems to address this well.	haberman	9.105641	-5.4766355	comment	3.0	15.0	1542045228	8.571728
18445066	>it can take advantage of many cores	>it can take advantage of many cores which you have in your computers.Which is a bad thing when you're on a shared server. I remember it wasn't straightforward to limit the number of cores it utilizes and it even ignored the flag I passed it. I eventually resorted to waiting until the weekend when no one in the lab was running jobs.	curiousgal	9.674573	-5.41692	comment	3.0	10.0	1542144458	8.036111
18452678	By the way, an interesting story:Whe	By the way, an interesting story:When Sun (?) wanted to implement their Unix with paging on the 68000 they had a problem: If you access a memory page that has been swapped out to disk, the OS has to (1) load the page from disk to RAM and (2) let the CPU repeat the instruction that caused the memory access. But the last step could not be properly done on the 68000 because it did not store its internal state completely when an (address) error happened (this was fixed in the 68010).Their solution: Run two 68000 in parallel on the same code, one of them delayed by one instruction. When the first CPU triggers the page fault, the system can stop the second CPU before it reaches the instruction that caused the fault.	tralarpa	9.654716	-5.2556267	comment	3.0	12.0	1542221743	-7.576462
18473702	htop and such don't make sense insid	htop and such don't make sense inside a single process system; logging usually gets sent to remote syslog/elk/etc. many apm solutions work out of the boxone of the biggest misconceptions about unikernels is that they are somehow of a slimmed down linux - it's easier to think about them as individual programs provisioned as vms - would you ssh into a process? why?all 'debugging' tools work perfectly fine w/unikernels although I'd draw a fine line between real application level debugging which should never happen on production and ops tooling	eyberg	9.923771	-6.240264	comment	3.0	13.0	1542424281	-12.374568
18478106	This alphabetti spaghetti of boot fl	This alphabetti spaghetti of boot flags is getting ridiculous, there seems to be no central list anywhere, just random snippets across the web. Why is there not a Linus rant when you really need one? :-(	crustycoder	9.354271	-5.8599033	comment	3.0	12.0	1542499529	4.304224
18481973	Is it going to support ECC memory?	Is it going to support ECC memory?	pmoriarty	9.474937	-5.501172	comment	3.0	28.0	1542568473	8.253057
18482020	All AMD processors have supported EC	All AMD processors have supported ECC for a very long time, its trivial to support it, Intel have just decided to gate it as a premium feature.	throwaway2048	9.409752	-5.4532285	comment	3.0	25.0	1542568968	8.166594
18482408	Do the new 8th gen Intel chips final	Do the new 8th gen Intel chips finally deal with Spectre/Meltdown issues in hardware or do they still depend on OS level fixes?	djsumdog	9.562403	-5.4652495	comment	3.0	12.0	1542573518	7.743392
18485216	Seperating the analog logic (IO die)	Seperating the analog logic (IO die) from the digital logic (CPU cores). Analog shrinks really bad with smaller nodes wheras digital logic shrinks really good.New process nodes get more and more expensive - especially if the node is new (bad yields etc.) So you want to get the most out of it as possible, which AMD does with this strategy.For example Zen 1 8 core chips are 213 mm2 on 14nm. On 7nm these chipse would be > 106 mm2 (because the analog elements don't scale). Zen 2 chiplets should be at most 75 mm2 (while also increasing cache, widen AVX etc.) which is mobile SoC territory which means they are cheaper to produce (better yields etc.). Since Intel uses monolithic dies AMD already had an cost advatage, with Zen 2 it's not even funny.Especially if the guesses of many people are true 	tutanchamun	9.268335	-5.187378	comment	3.0	15.0	1542621302	7.946399
18494731	Anyone know what the biggest single-	Anyone know what the biggest single-system-image x86 system on the market today is?	fulafel	9.693705	-5.287296	comment	3.0	19.0	1542729258	-7.7614455
18497766	It demonstrates how Linus is not onl	It demonstrates how Linus is not only a good programmer, but also a good leader.I get the same idea as with the first Gordon Ramsey Kitchen-fixing programmes.  Apparently, people said it was insane how he dared to swear on TV.  But basically, he notices things are very wrong, makes sure he gets to the bottom of the mess, and hammers the ugly message very publicly into some owner who lost any connection with reality.  If the cost is some swearing, that's the least of the problem.  The failing businesses get fixed at least as much on a sociological level as on a cooking level.Linus does the same.   A big software project's problems are more sociological than technical in nature.  Sometimes, the ugly message has to get trough, an another famous rant is born.  But most of the time, work gets d	hyperman1	9.304046	-5.88145	comment	3.0	12.0	1542748290	4.1797953
18498329	The thing is, all Linus rants that I	The thing is, all Linus rants that I've seen are entirely reasonable. Yes, calling someone stupid is rude, but rude things should be used in extreme circumstances. And when a single developer can negatively affect millions - wait, actually, billions - of people around the world with a stupid patch, that's exactly the case where being rude and aggressive is entirely reasonable.	golergka	9.281696	-5.8892665	comment	3.0	10.0	1542751925	4.230819
18497886	A bunch of years ago Cisco had an is	A bunch of years ago Cisco had an issue with some RAM in a new switch model, I think it was in the 65xx. They where crashing randomly but only in certain places in the world. Cisco spent tons of money on this. No idea. They brought in a physics professor. The devices with the most issues were located in countries up near the artic circle. Cosmic Rays caused a bit flip in this particular set of RAM due to something in its design. Sorry for the light details, it's been years.I also worked at a switch manufacturer. We had some ASICs from one of the big companies. Had crashes that we could not explain at all. We knew it was not us. Proved that bits where flipping in the switch ASIC. Turn out they had forgot to spec low alpha solder. Alpha partics will not go through your skin, but when it is l	myrandomcomment	9.669287	-5.4456863	comment	3.0	10.0	1542748982	8.137566
18510037	Off topic, but I think it's the firs	Off topic, but I think it's the first time I see emojis in commit messages. Nice to see that it works, but I don't know how to feel about it.	mnx	9.77052	-6.283969	comment	3.0	21.0	1542895602	-13.969853
18510311	Or perhaps it's because sometime the	"Or perhaps it's because sometime the meaning of emoji can be hard to understand, rather than ""gah! young people"""	baud147258	9.787481	-6.2685065	comment	3.0	10.0	1542898704	-13.956192
18538884	Xoogler here.Internally as Google, y	"Xoogler here.Internally as Google, you have a substantially power powerful version of Codesearch, which is semantic, i.e. it relies on actual binary artifacts produced by builds to index code. All of the code base uses Blaze ( open sourced as Bazel) to express the rules.The version of code search here is cute, but it's still not a full blown structured semantic code search, which I really miss. Searching for and browsing code on Github feels underwhelming in comparison, because you wan't really find or explore code the way you think of it.You can see a demo of semantic Codesearch tech externalized here at:https://blog.bazel.build/2017/12/14/introducing-bazel-code-s...
http://cs.chromium.orgFor example if you click on a header or a symbol, you can get proper cross references to a symbol.<a "	Ayyar	8.817694	-6.01585	comment	3.0	13.0	1543286563	-11.224
18585668	Can a software defense mechanism be 	Can a software defense mechanism be implemented; say a checkbit per 7 bits that emulate ecc?Sure, that would reduce the total ram by 1/8 ... But that would be a design choice to implement. Is ECC ram only 12.5% more expensive than non-ECC? If its higher, it may indeed be more advantageous to use non-ECC -if- a software compensation can be implemented.	crankylinuxuser	9.480929	-5.532157	comment	3.0	12.0	1543799505	8.258634
18618251	The Acorn Atom, its successor, the B	The Acorn Atom, its successor, the BBC micro family, then the Archimedes, the first 32-bit RISC personal computer (for which the ARM was designed)...Their impact cannot be overstated.	rbanffy	9.567231	-5.2159247	comment	3.0	21.0	1544106320	-7.7456307
18627185	"AX2 and AVX512 
But probably more of"	"AX2 and AVX512 
But probably more of a factor is that people are used to them and trust them."	gameswithgo	9.442615	-5.5495777	comment	3.0	17.0	1544186906	8.131848
18628326	>avx-512 (nobody uses)An example of 	>avx-512 (nobody uses)An example of people using those cpu instructions would be buyers of Intel's proprietary C++/Fortran compiler.[1]  The reason companies pay ~$1700 license instead of using free compilers such as GCC and Clang is to specifically take advantage of the latest advanced Intel cpu instructions.Example buyers of Intel's C++ compiler would include high-frequency trading firms and HPC labs.  I wouldn't be surprised if Google, Facebook, and Amazon also bought Intel Parallel Studio compiler licenses for some of their workloads.[1] https://software.intel.com/en-us/parallel-studio-xe/support/...	jasode	9.516613	-5.5194507	comment	3.0	13.0	1544195940	-7.132114
18645566	You think it's obvious that Intel wo	You think it's obvious that Intel would commit securities fraud?	latch	9.293336	-5.1947203	comment	3.0	15.0	1544421645	7.684824
18653026	Back in about 1996, most of the prof	Back in about 1996, most of the profs were going on about how x86 would crumble under the weight of the ISA, and RISC was the future. One of my profs knew people at Intel, and talked of a roadmap they had for kicking butt for the next dozen years. Turns out, the road map was more or less right.Is there more roadmap?	stcredzero	9.501276	-5.602932	comment	3.0	49.0	1544496841	-10.476849
18653089	Intel chips are RISC under the hood 	Intel chips are RISC under the hood these days (for a long while - decade or more). They're CISC at the ASM layer before the instructions are decoded and dispatched by the microcode.	hermitdev	9.508202	-5.5750976	comment	3.0	30.0	1544497934	-10.501301
18664261	I'm a little confused: is X32 suppor	I'm a little confused: is X32 support different from 32-bit x86 support, a la 32 bit mode in Windows?	Wowfunhappy	9.876285	-5.3779078	comment	3.0	13.0	1544625740	-7.962267
18678684	all Linus and the kernel team can do	all Linus and the kernel team can do is make the kernel itselfIn some sense that's a self-imposed limitation. Linus could have chosen to create an OS (like BSD) instead of a kernel.	wmf	9.548009	-5.7889576	comment	3.0	36.0	1544765550	-8.131891
18679477	I googled and found a test[1]. Runni	"I googled and found a test[1]. Running this test with a few modifications (like removing unused variables and using PRIu64 instead of %llu) and disregarding the last two prints, I get:switch   = 5589926
goto     = 5752079
goto_opt = 5618938with -O0, andswitch   = 2234105
goto     = 2013742
goto_opt = 2016200with -O2.EDIT:Intel(R) Core(TM) i7-6700 CPU @ 3.40GHzgcc (Debian 6.3.0-18+deb9u1) 6.3.0 20170516[1] https://gist.github.com/mmozeiko/7cc858985b57df30eebbf8c6e75..."	sebcat	9.927429	-5.4150066	comment	3.0	10.0	1544778324	7.809517
18689387	The paper was laborious to read.The 	The paper was laborious to read.The short of it seems to be that Linux used to perform floating point emulation on MIPS by writing instructions to run to the usermode stack. The stack therefore had to be executable. This is known to be a bad idea.A couple of years ago, this code was moved from the stack to a new segment, but this segment is still writable and executable, and the address is fixed. This is known to be a bad idea.And of course the stacks are still executable because the commonly-used compilers haven’t been updated to request non-executable stacks.The paper does not propose a solution.	jstarks	9.795934	-5.7736797	comment	3.0	27.0	1544896018	-10.407219
18702154	MIPS was on its way to irrelevance, 	"MIPS was on its way to irrelevance, first as ARM slowly ate its remaining marketshare, then quickly when Imagination Technology went under and sold it off for a pittance to a relatively obscure ""AI"" company.RISC-V may have hastened its demise, but the writing was on the wall for a long time."	ac29	9.469869	-5.591632	comment	3.0	38.0	1545080196	-10.440358
18702161	I've heard a lot of people say RISC-	"I've heard a lot of people say RISC-V is very ""MIPS Like"" as wellJust minus a lot of the ""legacy baggage"""	IntelMiner	9.399538	-5.6850476	comment	3.0	18.0	1545080262	-10.5141
18703164	Just that? With no extra help from t	Just that? With no extra help from them? No schematics or diagrams or documentation? Do you still have to reverse-engineer their work?Did AMD have to get permission from Intel to implement the i386 instruction set?	jordigh	9.452461	-5.283586	comment	3.0	10.0	1545088550	7.8165083
18702516	Really? Does RISC-V have delay slots	Really? Does RISC-V have delay slots? To me, this is one of the biggest differentiating factors in ISAs.	ris	9.426715	-5.715622	comment	3.0	13.0	1545083192	-10.551326
18702774	> Of course, tooling and C compilers	> Of course, tooling and C compilers for the non-standard ISA are the main obstacles on this way.Yup, see the Itanium architecture for how pernicious this can be to the survival of an architecture.	ChuckMcM	9.652651	-5.65305	comment	3.0	10.0	1545085115	-7.6887016
18703656	The blog post you link to criticizes	The blog post you link to criticizes MIPS because it has pipeline hazards and branch delay slots. MIPS had hazards in 1985. MIPS II eliminated hazards. No MIPS processor released after 1989 has hazards. Branch delay slots are no big deal once you know they're there. There are a number of equally questionable design decisions in RISC-V, such as variable length instruction encoding and dest, src order of instruction operands. But RISC-V does have momentum.	spoonhat	9.486586	-5.6613603	comment	3.0	14.0	1545093983	-10.49251
18714414	FPGA meets 6502	FPGA meets 6502	comepradz	9.515246	-5.329021	story	3.0	78.0	1545211896	-7.441285
18732653	It's built on TSMC's 28nm process.It	It's built on TSMC's 28nm process.It's an in-order 64 bit 4 core processor (actually 5 cores, because there's a small 32 bit core which does nothing normally).  Think Cortex A53.  It's very usable for development (I have two of them), and we even have people using them for desktop running GNOME.  But it's not a Xeon.  The main issue is the cost and lack of SATA on the development board (there's a daughter board providing that, at extra cost).  Everything is open source.This chip is free of speculation bugs because it doesn't do speculation.  However the architecture itself is not in any way better or worse than others, and a RISC-V core with a different microarchitecture might well be vulnerable, although since these attacks are now well-known steps should be taken by designers to avoid th	rwmj	9.351688	-5.3638277	comment	3.0	12.0	1545390618	-10.579708
18733239	This IMHO is a huge problem for embe	This IMHO is a huge problem for embedded development. I want to be able to just select what target I want and recompile a project. Even in small embedded systems you still need target specific headers and .bss code, but that's more of an IDE problem on top of the compiler not supporting all architectures out of the box. A C library that uses no hardware specific features should be able to recompile trivially for any supported target for example.If my chip vendor decides to replace the ARM core on a SoC with a RISC-V core but leave all peripherals and memory mappings the same, I want to simply change the target and rebuild.	phkahler	9.567086	-5.5690618	comment	3.0	10.0	1545400013	-10.484215
18751500	Linus hasn't lost his touch, if this	Linus hasn't lost his touch, if this is any indication:https://lkml.org/lkml/2018/12/22/221	Valmar	9.301424	-5.882951	comment	3.0	24.0	1545647890	4.212307
18751833	Or Linus' mail to himself: https://l	Or Linus' mail to himself: https://lkml.org/lkml/2012/3/8/495	icebraining	9.288895	-5.8884892	comment	3.0	14.0	1545654619	4.208111
18776708	Is it possible to hack the microcode	Is it possible to hack the microcode so that it can run ARM assembly natively?	choonway	9.677287	-5.395919	comment	3.0	12.0	1546005589	-7.563512
18795344	> Our sample consisted of 200 Linus 	> Our sample consisted of 200 Linus TorvaldsesIf there were 200 Linus Torvaldses then after one gets hit by a bus there would be 199 left. Even after the experiment there were at least 108.9 remaining. That should be plenty to keep Linux going. So what's the problem?	hirundo	9.383845	-5.8508706	comment	3.0	11.0	1546274533	-8.2137575
18810148	The late 1980s (after the Mead&Conwa	The late 1980s (after the Mead&Conway revolution) seems like such a magical time for VLSI to me, as someone who wasn't around at that time.Does this spirit of getting a few engineers together and taping out a  chip in a few months still exist anywhere?	twtw	9.455305	-5.185972	comment	3.0	11.0	1546462928	7.55285
18822739	Heavier things, like graphics proces	Heavier things, like graphics processing were typically written in assembler. Or sound mixing.Some things like texture mapping you could only write in assembler, because you'd need to use x86 lower/higher half of word (like AL and AH registers) due to register pressure. Spilling to stack could have caused 50%+ slowdown.486 era you needed assembler to work around quirks like AGI stalls.On Pentium the reason for assembler was to use FPU efficiently in parallel with normal code (FPU per pixel divide for perspective correction). Of course you also needed to carefully hand optimize for Pentium U and V pipes. If you did it correctly, you could execute up to 2 instructions per clock. If not, you lose up to half of the performance (or even more if you messed up register dependency chains, which we	vardump	9.721887	-5.6362605	comment	3.0	31.0	1546591860	8.085137
18823667	I am older and seen a lot of tech co	I am older and seen a lot of tech come and go.  RISC-V feels to me like something that will be huge.There is so much momentum already.  Not many things catch on that quick.  But when they do they end up huge.	glenrivard	9.372718	-5.700489	comment	3.0	17.0	1546607003	-10.558761
18824148	It's worth noting the age of RISC-V,	It's worth noting the age of RISC-V, according to Wikipedia (https://en.wikipedia.org/wiki/RISC-V) it originated as a 'short, three-month project over the summer' in 2010.  So ~8 and a bit years old.  It's taken a while to really take-off but now it does really seem to be picking up momentum.  Though no serious use in production hardware that I'm aware of.Perhaps a good comparison point is LLVM.  It too originated as an academic project. Again looking at Wikipedia (https://en.wikipedia.org/wiki/LLVM) it started development in 2000, first release 2003, Lattner hired by Apple to develop it 2005, Clang released by Apple 2007 (so ~7 years from initial LLVM creation to serious production use potentially less depends when Apple were using it internally).	gchadwick	9.459792	-5.6386027	comment	3.0	12.0	1546611361	-10.518522
18850817	A good sign that the RISC-V hype is 	A good sign that the RISC-V hype is out of control here is that the top comment on a news story about something good for ARM claims that it is actually bad for ARM and good for RISC-V.	wk_end	9.389025	-5.6630244	comment	3.0	14.0	1546899616	-10.585278
18866986	ARM is a bit more secure than x86 in	ARM is a bit more secure than x86 in that there's one unambiguous way to read a sequence of ARM instructions but with x86 you might have two entirely different but completely valid instruction sequences if you start reading at address FOO versus address FOO+1.	Symmetry	9.701529	-5.494102	comment	3.0	14.0	1547056850	-7.749103
18865274	How does this tie in with Linus Torv	"How does this tie in with Linus Torvalds, who himself is accused of being toxic and rude?Personally, while on the one side it's toxic, rude, not very welcoming etc etc etc, I do believe it's an effective form of leadership - a dictatorship where he can keep the kernel from becoming everyone's party, and where he can avoid years of discussion with a curt ""You are wrong, I am right, shut the fuck up"" - and from what I've read, often with a list of arguments, so he's not just yelling at people to shut up but yelling at people to be better.Mind you that's all my superficial interpretation, I don't know the guy, am not involved at all, etc."	Cthulhu_	9.275845	-5.8913655	comment	3.0	12.0	1547047041	4.255399
18885160	Does knowledge of the STM32 family a	Does knowledge of the STM32 family apply to other ARM chips?	mbreedlove	9.636174	-5.196542	comment	3.0	11.0	1547228244	7.422157
18898081	The best way I've found to organize 	"The best way I've found to organize dotfiles is to simply use a bare git repo.> git init --bare $HOME/.dotfiles`> alias dot=""git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME""> dot config --local status.showUntrackedFiles no"	anschwa	8.7794	-6.3989186	comment	3.0	13.0	1547405997	12.311436
17220740	I started using magit about 3 months	I started using magit about 3 months ago - it's definitely one of my favorite parts of emacs now. I highly recommend it to anyone using emacs as a daily driver.	ddavis	8.869667	-6.4082828	comment	3.0	26.0	1528048579	-11.379348
17231960	That idea was dismissed several thou	That idea was dismissed several thousand years ago, and for good reason. Text is way more powerful and precise than pictures. And I'm not saying having both is a bad thing, but this focus on Emojis is just idiotic.	stormking	9.808125	-6.258725	comment	3.0	10.0	1528143511	-13.954769
17232132	"""Whole new way"" is a bit hyperbolic,"	"""Whole new way"" is a bit hyperbolic, but an emoji definitely brings layers of meaning that are normally only feasible in in-person conversation into the written realm. It would be pretty hard to express the sentiment the ¯\_(ツ)_/¯ emoji can, and even if you put the effort into writing it, you'd lose the immediacy.It's also interesting how they work as reactions. If you hit ""like"" on something, for instance, you don't have to explain why you approve or add your own commentary, you just indicate your approval. And if you write a comment on a thread, there's a certain expectation that it contain an original thought or that it demands a response. So reactions manage to avoid a lot of inane filler.For a good illustration, watch a thread on Facebook where they say ""type AMEN if you agree!"" and y"	ben509	9.794782	-6.266607	comment	3.0	18.0	1528144523	-13.963394
17232704	Emoticons are severely limited in th	Emoticons are severely limited in their range of expressivity. It’s hard to do much more than :) :( and :/. Acronyms are limited in both range of expressivity and audience size. Acronyms require prior agreement on what they mean, so there’s a barrier to their basic use and another barrier separating people that don’t know what they stand for. This severely limits your audience size and the number of acronyms you can use.What’s really interesting about emojis is that they can transcend even hard language barriers. An emoji used by an exclusive Japanese-speaker can be understood by an exclusive English-speaker. The range in expressivity for emojis obviously isn’t as great as a full language, but it’s surprisingly large and can grow without cognitive costs to users (unlike acronyms). Unlike a	sxg	9.789474	-6.267508	comment	3.0	10.0	1528147837	-13.964248
17232673	A friend asked if he could crash at 	A friend asked if he could crash at my place one night and said “don’t worry if not, I got options” followed by the nail-painting emoji.How do you express that in ASCII emoticons?	bambataa	9.815462	-6.268039	comment	3.0	13.0	1528147604	-13.952592
17235364	Decentralised Centralised Decentrali	Decentralised Centralised Decentralised Version Control System. What fun.	Pengwin	8.797155	-6.3619514	comment	3.0	12.0	1528179295	-11.703492
17242643	What makes you think Linus would be 	What makes you think Linus would be more effective if he used a different tone? That seems like a tough argument to win given how tremendously effective he is. It doesn't seem like an exaggeration to me to say that Linux is the most successful opensource project of all time and among the best managed of all time in terms of the number of use cases it's managed to address over time and the number of people who have contributed. Not, I will grant, in terms of number of people whose feelings have been hurt. But I fail to see the evidence that Linux would actually be better off if Linus behaved differently. If we had good Linus and bad Linus we could A/B test, but sadly, we don't. We just have the one Linus, and he's been more effective than anyone in opensource over the last 20+ years. So it 	jdoliner	9.352076	-5.8598332	comment	3.0	24.0	1528237696	4.262626
17244271	> I wish we could get back to workin	> I wish we could get back to working on getting FASTER cores rather than more of them. Some tasks just don't multi-thread.Out of curiosity, are you working on tasks that don't parallelize? There are some for sure, but maybe more that do parallelize, just not trivially or easily? It seems like some people have wanted faster CPUs rather than more parallelism for as long as I can remember... decades. I'm wondering out loud if your wish has ever not been true.I suspect we're stuck with getting more cores until there's a new fundamental breakthrough in physics. We're hitting the wall with CPU speeds, which is why GPUs have been seeing all the growth recently.So I just went looking and found a CS term for hard to parallelize I hadn't heard before: P-complete. https://en.wikipedia.org/wiki/P-com	dahart	9.811997	-5.606591	comment	3.0	23.0	1528257692	8.29637
17245530	Are there any good post-Meltdown ben	Are there any good post-Meltdown benchmarks conparing Intel and AMD?	tpetry	9.360027	-5.3146296	comment	3.0	14.0	1528276383	7.876117
17245570	So there was a rumor last year there	So there was a rumor last year there might be a dual socket Threadripper/EPYC mobo, and that the CPU's would be capable of it, but now that I search for it, it seems that it only was 'some guy on Reddit says' style rumor. Despite that, anyone knows if there is any chance for that?	roel_v	9.412649	-5.297255	comment	3.0	11.0	1528276961	7.997907
17260604	Unikernels can be difficult to debug	Unikernels can be difficult to debug. All the tools that come with your operating system are missing.A big chunk of managing distributed systems at scale is trying to figure out what's wrong with them when they don't behave. Most operators will gladly trade some performance overhead for access to a suite of tools they're accustomed too.	cdoxsey	9.917245	-6.237156	comment	3.0	47.0	1528408292	-12.367064
17260607	If someone builds a really easy way 	"If someone builds a really easy way to slap a django app/rails app/node app ""into"" a unikernel, and an easy way to deploy that with perf gains over VM/Docker, you might get some ears.I think the hardest part is like you say, docker ""works well enough"" and the pressure isn't on to deliver the unikernel solution."	lbotos	9.857392	-6.3056803	comment	3.0	12.0	1528408322	-12.361845
17260653	>>Unikernels can be difficult to deb	">>Unikernels can be difficult to debug.This is an irrelevant objection that seems to get massive traction.Just like some politicians have scathing criticisms of other politicians, which despite being not true, are easily and widely believed.It's not even a relevant point.  Nothing I ever did with Unikernels hit this as even an issue on the horizon.  If you want to knock down the technology, this is the most effective way to do it because it very effectively frightens off people considering the technology.The origin of the ""Unikernels can be difficult to debug."" is from someone who works at a company that bet everything on containers. Nuff said."	andrewstuart	9.920716	-6.2445507	comment	3.0	34.0	1528408692	-12.379647
17261007	Yeah, production-quality unikernels 	"Yeah, production-quality unikernels would need to have built-in observability, tracing, and debugging support (probably in the libOS) but AFAIK no one has started building such tooling. I suspect that production-quality unikernels would end up re-introducing a lot of the ""bloat"" that unikernels were supposed to eliminate."	wmf	9.926122	-6.23275	comment	3.0	10.0	1528411426	-12.379779
17262759	I think we are at the point where so	"I think we are at the point where someone just needs to put up a Linus swearing email tracker with analytics and shit and stop posting these threads. We have to come to the realization that the discussion on this is:a) useless- doesn't change anything
b) the publicity is affecting the other side moreSo basically Linus is Trump"	coding123	9.282985	-5.892052	comment	3.0	21.0	1528434877	4.252241
17262864	Linus has done some (okay, lots of) 	Linus has done some (okay, lots of) wonderful stuff. However, his attitude here is pretty extreme. Being incredibly rude, then proceeding to merge said pull request. If Linus is willing to merge the PR, then it can't be that bad. Surely there was a more tactful way to approach this, even for Linus.	Benjamin_Dobell	9.2170515	-5.9580173	comment	3.0	20.0	1528436223	4.242233
17262968	I never really understood why people	I never really understood why people complain about Linus personality. If you don't like it go somewhere else nobody is forcing you to code for Linux.Fork it and make your own.	solotronics	9.382587	-5.838847	comment	3.0	23.0	1528437703	4.2295966
17281338	I think of AMD's current approach - 	I think of AMD's current approach - a microarchitecture with slower cores, but more cores, than Intel - as very similar to what Sun/Oracle tried to do from 2005 to 2010 with the Niagara family (UltraSPARC T1-T3).Each core in those chips was seriously underclocked compared to a Xeon of similar vintage and price point (1-1.67 GHz; compared to 1.6 GHz to 3 or more), and lacked features like out-of-order execution and big caches that are almost minimum requirements for a modern server CPU. Sun hoped to make up for the slow cores in server applications with having more cores and having multiple threads per core (though with a simpler technology than SMT/hyper-threading).However, Oracle eventually decided to focus on single-threaded performance with its more recent chips - it turns out that no O	hyperrail	9.330041	-5.190072	comment	3.0	26.0	1528684600	7.9413056
17281451	I find it slightly odd that sourcefo	I find it slightly odd that sourceforge is so highly shunned after the malware incidents, while various other large companies [eg. microsoft (dodgy behaviour in skype, etc.), facebook (spying, selling data), lenovo (superfish), etc.] have been caught doing similar dodgy things and yet it feels like the general community has forgiven or at least grudgingly overlooking them.May or may not be true - that's just the feel I'm getting.	swalladge	8.748239	-5.9878645	comment	3.0	13.0	1528686435	-11.692698
17281745	I recall reading that the thread rip	I recall reading that the thread ripper 2 is supposed to use more power so early motherboards with that socket my not be able to handle it. Just something to keep in mind.Regardless damn good on AMD.	havemylife	9.325632	-5.208866	comment	3.0	10.0	1528690655	7.917439
17282834	Putting a Threadripper in a homeserv	Putting a Threadripper in a homeserver is overkill.Besides I wanted to replace the i7 920, so that it won't be that hot anymore in that room (130W TDP vs 65W). I think a threadripper would achieve the opposite.Maybe I should just do seasonal CPUs... Threadripper in Winter and Ryzen in Summer.	chrisper	9.34485	-5.1944375	comment	3.0	12.0	1528707761	7.8949547
17283481	I'm saddened to see Intel has taken 	"I'm saddened to see Intel has taken a good gulp of the ""Young people are smarter""-Kool Aid"	nikanj	9.317054	-5.192717	comment	3.0	31.0	1528717927	7.7678943
17295338	Bluntness doesn't increase the infor	Bluntness doesn't increase the information content of a message, it's just a way to force one's message through. Everything that can be said bluntly can be said politely, and usually to greater effect.I'm always confused by people who defend Linus style because it isn't just blunt but often plain insulting for no apparent reason at all.There are many problems with this. Apart from antagonizing people as already mentioned, if someone is constantly screaming they lose the ability to modulate how serious they actually are. You can rarely tell whether Linus is legitimately upset because he seems almost always upset. It's better to default to politeness if only because if you're actually upset at least I know that I need to pay attention.	Barrin92	9.27052	-5.898722	comment	3.0	10.0	1528823277	4.2605047
17304909	Unpatched systems can leak SIMD/FP s	Unpatched systems can leak SIMD/FP state between privilege levels.  Pretty fucking high severity since that's where we stick private keys these days.The cost is more expensive context switches currently since we'll have to fully unload and reload all SIMD/FP state.  I'm sure Intel will fix this one in a couple gens.	monocasa	9.560815	-5.3330626	comment	3.0	11.0	1528909227	7.78898
17308160	As someone who works in compilers: n	As someone who works in compilers: no, it's not possible to make the compiler do a better job. There's a reason why VLIW architectures keep getting proposed and keep dying.The instruction-level parallelism that a CPU can extract is primarily a dynamic kind of parallelism. You can, say, have a branch that's true 1000 times, then false 1000 times, then true 1000 times, then false 1000 times, etc.--as a compiler, telling the hardware to predict true or false is going to guarantee a 50% hit rate, but the stupid simple dynamic branch predictor will get 99% on that branch.	jcranmer	9.65739	-5.719416	comment	3.0	16.0	1528935064	8.178548
17308309	Except for Spectre variant 1. That w	Except for Spectre variant 1. That will always stay with us, because there is no sensible fix for it.Is it not a feasible fix for Spectre-v1 to have loaded cachelines wait in a staging area, and not actually update the cache hierarchy until the load instruction is retired?	caf	9.693126	-5.633367	comment	3.0	10.0	1528936832	7.8484592
17341538	>  I wonder if the history of x86 is	>  I wonder if the history of x86 is holding us back in a big way. It started out being close to the metal but now it's an abstraction that can mislead you if you think processors are literally working the way x86 assembly describes.But when you compare high-end cores, you always see the same picture, regardless of ISA. Large surface area (~1/3 of the core) used for insn fetch/decode/schedule; they look all the same, whether it's POWERn or the latest Sandy-Bridge/Haswell rehash... people claim that other ISAs would be a lot easier/faster/more efficient to decode, but that doesn't seem to be true in practice. It seems to me that any difference that might be there gets dwarfed by the sheer complexity of OoOE and speculative execution.What we do know is outside some niches (like DSPs, where V	blattimwind	9.672521	-5.599732	comment	3.0	18.0	1529354546	-7.7090163
17350458	I'm not sure that would necessarily 	I'm not sure that would necessarily fix the problem definitively. Say you had a browser running web-exposed JavaScript on a thread. You could still finagle a Spectre-type information leak that way by having the JavaScript thread snoop other browser threads, assuming no other mitigations.	classichasclass	9.758559	-5.636314	comment	3.0	24.0	1529444138	7.4365983
17351485	That approach has (sort of) been tri	That approach has (sort of) been tried before for superscalar architectures. VLIW architectures were the Next Big Thing in the early 1990s. The general idea is that the machine code explicitly told the CPU what to do with each of its execution units. It seems like a good idea. Intel released their i860 processor and waited for the cash to roll in.The trouble was that because the machine code is pretty specific to the internal structure of the CPU every time they released a new major revision of the CPU the existing executables all had to be recompiled. All of their customers needed to get an entirely new OS, new third party software, they had to recompile all their own code, everything. This proved too much of a burden for many and popularity of the architecture suffered.The other problem 	zik	9.644438	-5.638722	comment	3.0	11.0	1529455192	8.228917
17364985	Seems odd to apply it after the fact	Seems odd to apply it after the fact in this case, though. Perhaps there was an ulterior motive for removing him. Otherwise I would expect Intel to just hide the information in order to protect the financial interests of the company.	jrs95	9.356212	-5.2047195	comment	3.0	13.0	1529588693	7.7479577
17370369	Emojis make your code a little more 	Emojis make your code a little more like math formulas. In math formulas you use single letters. This makes the syntax easy to parse, but has the drawback that the letters are mostly meaningless and so not very suggestive. Names in programming language tend to be words. This makes it easier to remember what they are supposed to stand for but also make the syntax hard to parse and other occurrences hard to spotEmojis combine the best of both worlds. Like the letters used in math they are easy to parse and it's really easy to find other occurrences of the same var when the name is an apple . But like the more verbose names in programming languages they can carry meaning. Eg I use the dango emoji for arrays and the monitor emoji for window instances.	628C6l0	9.8768425	-6.277597	comment	3.0	11.0	1529628091	-13.952173
17376671	Having used slack at a business, emo	Having used slack at a business, emoji reactions to comments are an extremely valuable business feature -- they allow people to react without having to make a full-sized comment, which helps keep conversations compact.	wumpus	9.753025	-6.233216	comment	3.0	13.0	1529695767	9.128321
17377215	I watched as a Lack of emoji support	I watched as a Lack of emoji support took down a critical production database for over 100 non-profit organizations in 2015 and made ripples across the charitable giving sector.All because someone included a smiley emoji while making a donation to a local community foundation. Lessons were learned because of poor planning admittedly but if you don't take emoji support seriously it's probably because you haven't suffered through a critical outage from poorly supporting character encodings.We aren't a chat company. We don't even write email clients. We process transsctions. And we lost millions because of a single emoji.	iamdave	9.797698	-6.2620864	comment	3.0	10.0	1529700505	-13.959267
17388928	Changes in WebAssembly Could Render 	Changes in WebAssembly Could Render Meltdown and Spectre Browser Patches Useless	vezycash	9.780824	-5.6291084	story	3.0	27.0	1529882716	7.4443464
17391660	Using Records in VHDL	Using Records in VHDL	rthomas6	9.12819	-5.505501	story	3.0	54.0	1529928540	8.62095
17392006	Intel embracing RISC-V would be a su	Intel embracing RISC-V would be a super-bold move.  Given the support we can already see from the long list of RISC-V foundation members, it's bound to succeed.  In the next couple of years it will probably wrestle a few royalties away from ARM.Beyond that, I think it will end up a legit heavy-duty apps processor for Android phones.  It might start out on the mid/low-end phones, but manufacturers will absolutely love the idea of cutting out ARM from their BOM.	wyldfire	9.400553	-5.580494	comment	3.0	17.0	1529931365	-10.55378
17405531	MOS Technology made it popular by pr	MOS Technology made it popular by pricing it cheaply and giving engineering samples to young, bearded hippies like the Woz.  It was cheap and accessible when the other microcontrollers were not yet so much.It is OK to program, not exactly unpleasant, but it is quirky. I did a linker for the Apple II in about 4k lines of assembly code, because their assembler produced a decent symbol dictionary but didn't come with a linker. That was the largest single assembly module I did for the 6502.I also worked on a compiler for something like B, but never finished. Code generation was just too wonky. Hand written 6502 is OK once you know the idioms.	dbcurtis	9.590695	-5.3970675	comment	3.0	18.0	1530069530	-7.421042
17405696	It's been a while since I've read ab	It's been a while since I've read about this, and I'm far from a 6502 expert, but I think the biggest issues are:1) There's not a cheap, straightforward way to get a conventional frame pointer (i.e. indexable pointer to  local variables on the stack). I imagine one could do something with the indexed zero-page modes, but I'm not sure how well that works in practice.2) None of the registers are large enough to hold a full memory address, which considerably complicates any pointer arithmetic beyond increment/decrement.I'm even less familiar with Z80 than I am with 6502, but I gather that the IX and IY index registers were added to it to address similar limitations in the 8080 architecture.	0xcde4c3db	9.61156	-5.4203115	comment	3.0	12.0	1530072678	-7.3978195
17406343	> networking folks like something ca	> networking folks like something called DMA (direct memory access). As I understand it, it allows one machine to access “directly” the memory of another machine, without impacting the remote CPU. Thus it should allow you to take several distinct nodes and make them “appear” like a multi-CPU machine. Building software on top of that requires some tooling and it is not clear to me how good it is right now.In the old days CPUs couldn't saturate DRAM bandwidths but DMA could, so DMA was important. Today a single core of a CPU can read or write about 100 GByte/sec, about 4x more than the bandwidth of a single DRAM module (https://zsmith.co/images/XeonE5-2630v4.png and https://en.wikipedia.org/wiki/DDR4_SDRAM#Modules). Also PCs tend to have more CPU cores than DRAM channels.If you use something	abainbridge	9.815774	-5.3515043	comment	3.0	17.0	1530084256	8.048922
17405575	> Code generation was just too  wonk	> Code generation was just too  wonky.What do you mean? Is code generation for the 6502 unusually difficult, even compared to other 8-bit processors (e.g. 8080/Z80)? I'm sure code generation for an 8-bit processor is difficult compared to a 32-bit processor.	mwcampbell	9.586533	-5.4025187	comment	3.0	15.0	1530070191	-7.5165663
17428273	Any tips on getting started with FPG	Any tips on getting started with FPGA on custom pcbs?	mips_avatar	9.082659	-5.319391	comment	3.0	38.0	1530310602	8.364111
17428462	"What exactly do you mean by ""getting"	"What exactly do you mean by ""getting started with FPGA on custom PCBs?"" Have you made custom PCBs with high density BGAs before? Most non-trivial FPGAs (to me that means you can easily fit a decent softcore processor with space left over for your FPGA logic) will be ball grid arrays and almost impossible to DIY without xray inspection equipment and a reflow oven. You can get what you need for a few hundred $ on eBay if you're patient and lucky but even then, getting to the point where you can solder the chips reliably will take time.If you have the budget for professional assembly, then I would start with a Digilent product that has an available reference design you can copy later. First get used to the FPGA and how it works (they are largely incomparable to a CPU or GPU except for the fac"	civilitty	9.091928	-5.3113704	comment	3.0	35.0	1530312822	8.37696
17440668	But as you know, CPU ISAs are design	But as you know, CPU ISAs are designed for C programs and compilers are optimized for C programs. So everything, even new languages like Rust, have to buy into C's model to some extent.Truly getting out from under C's shadow is going to be very difficult. Maybe better languages are a first step on that path but they are only a small step.	ChrisSD	9.6180935	-5.6209764	comment	3.0	32.0	1530529389	-7.572658
17442603	There are use cases where users run 	"There are use cases where users run several applications on a single machine, which could even be shared by several users. They are the desktop PC, mobile phone, old school Unix server...Now we see a use case (call it ""microservices"" if you want) where people want to run a single application as if it was alone on a machine, and where the concept of ""user"" doesn't even make sense.This second use case is what unikernels are for. It may make a lot more sense to run a Unikernel application on an hypervisor than a whole OS in a VM, and probably than a container too."	catwell	9.93592	-6.1388416	comment	3.0	14.0	1530546093	-12.349185
17479151	Tali Forth 2 for the 6502	Tali Forth 2 for the 6502	ingve	9.519684	-5.2794185	story	3.0	68.0	1530980086	-7.4551935
17481936	Google removes an egg from a salad e	Google removes an egg from a salad emoji to make it more “inclusive”	Jerry2	9.815005	-6.2644753	story	3.0	10.0	1531018528	-13.953425
17487945	It is worth noting that with AVX-512	It is worth noting that with AVX-512, Intel has introduced a native inverse sqrt approximation (VRSQRT14).	simonbyrne	9.48808	-5.597301	comment	3.0	24.0	1531109979	8.670336
17488274	VRSQRT28 too, which has max 2^-28 re	VRSQRT28 too, which has max 2^-28 rel error.https://software.intel.com/en-us/articles/reference-implemen...	zbjornson	9.469914	-5.3925505	comment	3.0	11.0	1531116130	7.91752
17497423	If you have a deployed fleet of Core	"If you have a deployed fleet of CoreOS instances, FlatCar[1] looks like a viable alternative. This article from NewStack gets into the details.[1] https://www.flatcar-linux.org/
[2] https://thenewstack.io/flatcar-linux-the-coreos-operating-sy..."	aberoham	9.825476	-5.977984	comment	3.0	13.0	1531225849	-9.235934
17507211	You also have penalties from context	You also have penalties from context switches, although you can reduce their impact by performing them in a lazy fashion. AVX512 is even worse, of course.	puzzle	9.703621	-5.654455	comment	3.0	12.0	1531319493	8.219051
17518590	I'm not an expert, I'm a lowly syste	"I'm not an expert, I'm a lowly systems admin-But I imagine the difference is that size of systemd itself and how mysql does fork().SystemD is 1.5MB itself on my systems where I have it, but upstart (for example) is 148KB on centos 6.Since an AMD Epyc has roughly 64Mb of L3 Cache, a larger binary would not have to be evicted from L3 cache as often.One of Intels generally powerful all-rounder CPUs (2687Wv4) only has 30Mb of ""Smart-cache"" (which is fancy speak for; not that much)A complete guess on my part though.."	dijit	9.714508	-5.519749	comment	3.0	12.0	1531429411	8.043039
17540687	Show HN: Guess the movie from the em	Show HN: Guess the movie from the emojis	elomarns	9.798851	-6.239913	story	3.0	9.0	1531743623	13.038566
17547593	Please God no. We don’t need another	Please God no. We don’t need another bundler.Also. What’s up with the obsessive use of emojis everywhere? Take a look at this issue for example: https://github.com/parcel-bundler/parcel/issues/144	simplecomplex	9.791435	-6.266421	comment	3.0	11.0	1531806945	-13.950802
17549075	The major thing with a clock-based d	The major thing with a clock-based design is that you have to dedicate a huge amount of silicon and power just towards getting a clock signal all over the whole chip.A group at Cambridge University also designed and fabricated an asynchronous CPU based on an early ARM a long time ago now. Like the ones mentioned in this article, it behaved very well. It would slow down if they pointed a hot air blower at it.	mnw21cam	9.369911	-5.2364063	comment	3.0	10.0	1531829159	7.8085575
17549417	Why does threadripper need to be com	Why does threadripper need to be competitive in the server space?Edit: emphasis on threadripper, which is a consumer product.	aoeusnth1	9.642226	-5.5067163	comment	3.0	11.0	1531832832	8.267745
17550759	Show HN: EmojiGenie 🧞‍️ – emoji sear	Show HN: EmojiGenie 🧞‍️ – emoji search with 1-click copy written in React	eugeniub	9.804951	-6.26641	story	3.0	5.0	1531844220	13.040871
17552102	The z1d.6xlarge is a great match for	The z1d.6xlarge is a great match for what I was just searching for... I'm looking for a spot to park my 16 core 192gb SQL Servers, which have licensing for exactly 16 cores. I was looking at the 32 core, 244gb r4.8xlarge instances and trying to figure out what to do with the unused cores!	NDizzle	9.545196	-5.2287292	comment	3.0	11.0	1531853455	7.971903
17561884	Am I alone in thinking that emoji sh	"Am I alone in thinking that emoji should be completely removed from the Unicode standard? The character set is an amazing collaboration between companies and countries to place all glyphs used by humans in a standardized collection... And then there's a bunch of smiley faces. Seems like someone at the Unicode Consortium accidentally downloaded a ""free smiley pack"" malware from the 2000's that injected itself into the standard draft. Just deprecate that garbage. There's already a standard to represent all conceivable pictograms: <img> tags and PNG."	vortico	9.894245	-6.2543015	comment	3.0	29.0	1531946486	-13.948503
17586712	Your CPU actually runs its own entir	Your CPU actually runs its own entire, separate operating system - MINIX.https://www.cs.vu.nl/~ast/intel/	rhencke	9.638399	-5.1940584	comment	3.0	16.0	1532267264	-8.297923
17586808	"""Luckily"" most old Atoms will never "	"""Luckily"" most old Atoms will never get mitigations for Meltdown/Spectre :).So if you're using an Intel CPU today you'll just have to pick your poison."	close04	9.536845	-5.438465	comment	3.0	17.0	1532268419	7.731617
17586875	Can MacBook owners do something to d	Can MacBook owners do something to disable or cripple Intel ME? Is Apple disabling it for us? I can’t find Apple responses to these issues.	thepumpkin1979	9.5003805	-5.234764	comment	3.0	21.0	1532269124	7.823248
17587003	I thought you can in C2D (Nehalem?) 	"I thought you can in C2D (Nehalem?) era ThinkPads? https://libreboot.org/and you can minimize ME in Sandy and Ivy Bridge, using ME_Cleaner?edit: according to sounds' comment* in HN (2016), The ME is purportedly placed in ""recovery"" mode[*] https://news.ycombinator.com/item?id=13056997"	inawarminister	9.540128	-5.230662	comment	3.0	13.0	1532270724	-7.9873495
17587099	Certainly if the lifespan of Intel c	Certainly if the lifespan of Intel chips turns out to be much shorter than the marketplace expected (because Intel is unable to provide security updates), that affects the value of Intel products and ought to inform future buying decisions.Whether it is the unfortunate materialization of Spectre-style bugs or the deliberately insecure-by-design ME, Intel's inability to support its products is dismaying.	rectang	9.364735	-5.198096	comment	3.0	70.0	1532271919	7.748819
17590905	RISC-V inherited all the bad ideas o	RISC-V inherited all the bad ideas of x86 by now. It has an SMM equivalent, a separate hypervisor mode (instead of full orthogonality which lets you get away without one), resident firmware code outside the OS' control, ...	pgeorgi	9.4434805	-5.65532	comment	3.0	16.0	1532327279	-10.551524
17591061	I'm putting my bets on Mill winning 	I'm putting my bets on Mill winning the race eventually.Not only Mill, Microsoft has been working on a VLIW too (yes I know, not exactly VLIW, it's close enough).IMO these ISA's are the future, compilers and programming languages are nowadays smart enough to be able to figure out how to handle VLIW compilation (plus having learned from Itanium's failures).	zaarn	9.622464	-5.635567	comment	3.0	16.0	1532330362	8.104474
17591930	Speculation Attacks Using the Return	Speculation Attacks Using the Return Stack Buffer	Maxious	9.753761	-5.6961026	story	3.0	75.0	1532345042	-6.777433
17597768	On a few occasions I've found myself	On a few occasions I've found myself in the presence of a senior engineer at a large defense company who would never stop talking about how persistent memory will change everything forever. Fair enough, but he'd go on about it in the weirdest ways. I think his impression is that the CPU registers would also be nonvolatile. I'm concerned that guy might be a few electrons short of a full orbital.	inamberclad	9.889633	-5.361323	comment	3.0	10.0	1532400845	8.074376
17610228	AMD never had meltdown to begin with	AMD never had meltdown to begin with. That was an Intel exclusive. Spectre is the one that affects everyone	benchaney	9.506673	-5.474164	comment	3.0	11.0	1532534233	7.786011
17611322	It’s hard to critique a design that’	It’s hard to critique a design that’s mostly hypothetical (implementations exist, but those parry critiques such as “it is slow” or “it doesn’t have vector instructions” with “it’s only the first version”).So, the only thing one can readily critique is the instruction set. Here, they made trade offs that some would argue are bad. For example- They deliberately choose to leave parts of the instruction space open. That’s good for extensibility, but must have a negative effect on code density.- They are extremely liberal in allowing implementations to mix and match instruction set extensions. There already are 13 different extensions, potentially allowing for 8,192 different instruction sets (many of them quite silly), and they are already thinking on how to handle over 26: “Since single lett	Someone	9.687603	-5.7880855	comment	3.0	13.0	1532541533	-7.7661905
17610388	Yes I think it more or less works th	Yes I think it more or less works that way. A hyperthread has its own set of registers and stack and everything, but for doing any actual work it shares the same functional blocks as any other thread running on the same core. I do think that the hyperthreading parts increase the numbers of some functional blocks like load/store units and such compared to non-hyperthreading parts though, to reduce contention (someone correct me if I'm wrong).What this means is that hyperthreading does not really work so well on sustained, homogenuous workloads. For example doing very heavy computation on 8 threads of a 4-core CPU with 8 hardware threads, can actually reduce performance, because all threads will be contending for the same functional blocks of the CPU.	w0utert	9.816207	-5.5940094	comment	3.0	14.0	1532535365	8.288171
17615453	We've experienced a plethora of plat	"We've experienced a plethora of platform issues that were exacerbated by how BEAM consumes resources on the system. Here's a few that come to mind:- CPU utilization can differ wildly on Haswell & Skylake. On Skylake processors our CPU utilization jump by 20-30% due to Skylake using more cycles to spin. Luckily, all of that CPU time was spent in spinning, and our actual ""scheduler utilization"" metric remained roughly the same (actually, on Skylake it was lower!).- Default allocator settings can call malloc/mmap a lot, and is sensitive to latency on those calls. Under host memory bandwidth pressure, BEAM can grind to a halt. Tuning BEAM's allocator settings is imperative to avoid this. Namely, MHlmbcs, MHsbct, MHsmbcs and MMscs. This was especially noticeable after meltdown was patched.- Liv"	jhgg	9.515013	-5.3464236	comment	3.0	12.0	1532586792	7.8369036
17614387	Best way to do Linux clones for your	Best way to do Linux clones for your CI	ScottWRobinson	9.441644	-6.090773	story	3.0	96.0	1532567792	0.62284625
17617220	I don't think you're understanding.L	I don't think you're understanding.Let me be explicit. There are changes in WASM specifically made that render spectre and meldown mitigations useless. (ie-Browser makers put in spectre and meltdown mitigations, and changes in WASM allow WASM content to get around those mitigations.) Developers cheer the changes, because they make WASM more useful, and to be fair, browser mitigations of spectre and meltdown type bugs make WASM far less performant. But changes which render those mitigations useless are dangerous no matter what your opinion is on how useful WASM should be.Edit: Should probably mention that the upcoming changes include threading and shared memory. Implemented in a way that enables CPU side channel attacks. (Probably because there is no other way to get threading and shared me	bilbo0s	9.814733	-5.7132306	comment	3.0	10.0	1532611460	7.801298
17638217	Tools are running on Linux at least 	Tools are running on Linux at least last 5 years very well. Xilinx as well as Altera.Never heard such ridiculous claim, that ISE with WebTalk enabled sends every piece of code back to Xilinx. And I was intern at Xilinx! You can always seem in WebTalk report what is leaving your computer. You also proposed usable solution for avoiding WebTalk.The problem is that FPGAs will stay niche product and never became mainstream. What will you do as a hobbyist with some Ultrascale+ device? What can’t you do with 50$ SoC that you can do with FPGA in same price range? SDR is cool, for everything else development cycles are just too long or complex peripherals are needed. How many hobbyists can properly route 64 bit wide DDR3 interface?	lnsru	9.094496	-5.363828	comment	3.0	17.0	1532873627	8.37023
17638913	>Regarding open-source FPGA design, 	">Regarding open-source FPGA design, you're in luck! ""Project IceStorm"" reverse-engineered the Ice40 line of FPGAs from Lattice, and has a fully open-source toolchain for them.I've used it. It's at the ""technically doesn't not work"" stage. I take my hat off to them for the work already done, but it's night and day between icestorm and, say, arduino studio.In fairness to them, they are fighting an uphill battle reverse engineering the chip, but as much respect as I have for their work, I don't believe there's a long term open source option in there. At some point Lattice will stop making the Ice40 FPGA line. When we reach that point, the icestorm team will have to reverse engineer a new chip, which is pretty close to starting from scratch."	Sir_Substance	9.097153	-5.3771124	comment	3.0	15.0	1532881855	8.434344
17638304	Both tools are monstrosities. Xilinx	Both tools are monstrosities. Xilinx should once and for all decide if they are in the business of selling hardware or selling software.If the latter they're terrible at it and it's painfully obvious that the culture of the shop is not software-centric.[edit] the hobbyist argument doesn't hold water. Software and normal computer manufacturers made the exact same argument in the 70's (why would anyone ever need a computer at home?).If Xilinx opensourced their toolchain - or much better - OpenSourced their protocols, my bet is their chip sale volume would at least double in a year. In particular because folks would choose their H/W to avoid vendor lock-in.My bet is they're so ashamed of the pile of spaghetti code they're peddling to their customer that they just can't OpenSource it for fear 	ur-whale	9.116789	-5.3515396	comment	3.0	13.0	1532874565	8.440907
17643497	Is this really such a big issue? Cur	Is this really such a big issue? Currently there are already multiple arm builds from some distros to deal with similar problems: https://archlinuxarm.org/about/downloads	ailideex	9.736606	-5.2706723	comment	3.0	23.0	1532947734	-7.78839
17643573	It's exactly the fragmentation of AR	It's exactly the fragmentation of ARM that I'd like to avoid.  Same story goes for bootloaders, kernels, out-of-tree drivers etc.You might find my 15 minute talk at the RISC-V workshop interesting on this subject: https://rwmj.wordpress.com/2018/05/21/my-talk-from-the-risc-...The bit about RISC-V on servers starts around 5 mins in.	rwmj	9.394841	-5.683267	comment	3.0	20.0	1532948820	-10.558093
17651280	Will go one further: the use of emoj	Will go one further: the use of emoji at all defeats the purpose of having a language and an alphabet.	pervycreeper	9.803893	-6.264444	comment	3.0	10.0	1533022900	-13.960962
17653334	I'm still waiting for the x86-64 VMS	I'm still waiting for the x86-64 VMS port.https://www.youtube.com/watch?v=FZN6LjuEgdw&t	vt240	9.783841	-5.3204823	comment	3.0	14.0	1533046863	13.319869
17656700	I remember x86 real mode back in the	I remember x86 real mode back in the day.  Pretty hideous and hacky compared to what we have now.	narrator	9.7537	-5.398114	comment	3.0	13.0	1533068248	-7.7847915
17664023	> In Part I, I had to patch qtmultim	> In Part I, I had to patch qtmultimedia for the camera to work, but Qt compilation is ressource hungry, same goes for the osrm compilation, the memory of the Raspberry Pi is too smallI was just thinking about this today. Is it possible to set up an arm VM for “dev” and port the binaries over to the RPI?	dev_dull	9.913968	-5.2764225	comment	3.0	10.0	1533140850	-7.982353
17698775	For TR kind of. In the newer models 	For TR kind of. In the newer models only half the cores have direct access to a DDR channel. This shows in memory bounded benchmarks, but Epyc (server line) elevates this problem by have 8 (!!) memory channels, instead of the consumer TR’s 4.Ultimately it depends on how cache friendly your workload is.The 32c/64t is kind of a marketting gimmick selling binned Eypcs. If your doing memory bound HPC consider the 16c/32t model for roughly equal performance at a lower price.	valarauca1	9.523567	-5.271357	comment	3.0	11.0	1533571319	7.984642
17700935	You can disable PSP on some motherbo	You can disable PSP on some motherboards AFAIK. My motherboard has an option that at least seems like it disables PSP.	Laaas	9.396939	-5.2096386	comment	3.0	10.0	1533583970	7.7604394
17712107	I agree.The rage emoji reminds me of	I agree.The rage emoji reminds me of the expression “to use with anger”, which has come into vogue on HN in the past year or so.vt. to use for a real task, as opposed to just testing it out.“Has anyone used this in anger?”http://onlineslangdictionary.com/meaning-definition-of/use-i...	WalterGR	9.793535	-6.2540946	comment	3.0	12.0	1533687062	-13.945742
17712013	Intel has no chance in servers and t	Intel has no chance in servers and they know it	mozumder	9.345565	-5.185639	story	3.0	39.0	1533685978	7.7618475
17728839	Title should be renamed to: Hardware	Title should be renamed to: Hardware Backdoors in Obscure x86 CPUs made in 2003.	CyanLite2	9.546366	-5.202158	comment	3.0	22.0	1533851330	-4.0323544
17729337	But in true Linus style, he just has	But in true Linus style, he just has to take a dig at another team at the same time to balance things out.	deelowe	9.286854	-5.8866897	comment	3.0	15.0	1533856153	4.257142
17730841	they also dont like tuners because c	"they also dont like tuners because cars engines are often made the same for multiple ""trims"" so the car with 110 and 160 hp have the same engine but different ""map"" in the ecu. and only with ecu reflash you can get more power that would cost you x amount of money.imagine a CPU where 6 and 8 core variants are the same but the 6 core is locked in bios and you can unlock it with some tuning software, its like that.and manufacturers dont like that"	disiplus	9.42415	-5.249627	comment	3.0	17.0	1533877907	7.8114605
17750076	Home servers? In what situation woul	Home servers? In what situation would you ever need 32 cores for home usage? I'm genuinely curious.	ekianjo	9.593721	-5.2307415	comment	3.0	22.0	1534168571	7.7253017
17750475	"""this review shows that the 16-core "	"""this review shows that the 16-core 2950X compiles Chromium faster than the 32-core 2990WX, presumably this means something other than the thread count becomes a bottleneck after 16 threads""The article mentions that, due to the die packaging, only 16 of the cores have direct access to RAM. So for the 32-core version, half the cores are memory-starved and have to go through the 'connected' cores (also impacting these), while the 16-core version doesn't have that problem and can be at 100% for all process loads."	Hasknewbie	9.7224245	-5.3530407	comment	3.0	10.0	1534171644	7.3725915
17750228	For compiling, having many cores is 	For compiling, having many cores is fantastic. Granted, on a workstation, compilation normally just involves a few files (the ones that have changed since the previous build and their dependencies), but when you have to do a full rebuild, it is fantastic to be able to do `make -j16` and watch it chug through 16 files simultaneously. Interestingly, the benchmark in this review shows that the 16-core 2950X compiles Chromium faster than the 32-core 2990WX, presumably this means something other than the thread count becomes a bottleneck after 16 threads or so.	MrUnderhill	9.74882	-5.399199	comment	3.0	13.0	1534169734	7.529183
17751498	If AMD's method scales so much easie	If AMD's method scales so much easier, why didn't Intel just... do that? Honest question.	somebodythere	9.244835	-5.188313	comment	3.0	13.0	1534179112	7.822454
17751049	> Because the two NUMA nodes are ~en	> Because the two NUMA nodes are ~entirely independent, it's capable of running two independent processes at full speed.I don't understand. From my (admittedly little better than layperson's) knowledge, I'm guessing the cores of most multicore processors have to compete for memory access...? Is there a good search term I can use to help me understand what's going on here?	mrkgnao	9.702849	-5.4435635	comment	3.0	15.0	1534175974	8.033294
17754121	No higher level languages were ever 	No higher level languages were ever competitive with assembler for the 6502.  The stack model of C is not a good fit, as the 6502 machine stack doesn't give any support for reading or writing stack-based variables.  Good performance depends on effective use of the zero-page -- the first 256 bytes of memory which have special addressing modes and allow more efficient access.  Registers are few and quirky -- accumulator, two index registers which are not quite interchangeable, a byte stack pointer.  All operations are 8 bit; 16 bit calcs like for pointers are costly both in code size and speed.Back in the 80's and 90's the best compiled languages were probably COBAL and Forth.  As far as I know nobody seriously used these for games or applications.There are more recent C compilers, but the c	dzdt	9.686927	-5.535516	comment	3.0	10.0	1534200069	-7.3436494
17758611	I've always thought FPGAs would be p	I've always thought FPGAs would be perfect to have hardware backed video decoding/encoding that could adapt to new codecs (like vp9) while also being updatable for new performance improving discoveries.It also seemed like it would go well with a generic radio subsystem, so you could compile hardware support for new wireless standards that come out after your hardware did (essentially an fpga sdr).It seems like there could be lots of uses for being able to on demand enable hardware acceleration for certain tasks a program might need lots of.	Firerouge	9.140886	-5.310485	comment	3.0	12.0	1534259373	8.221865
17759221	Another thing is that you can pipeli	"Another thing is that you can pipeline, for example, multiplies.  So in a CPU multiply you give the CPU inputs, wait a couple cycles, and then get the result.  In an FPGA you can build a pipelined multiply.  It's built such that you can feed it input every cycle and get an output every cycle.  The only caveat is that the outputs are delayed relative to the inputs.  i.e. you may give it (2, 3) to multiply on one cycle, but you won't see the result (6) of that particular input on the output until a couple cycles later.[Yup, ""pipeline"" here is the same term used to describe how modern CPUs get their performance.  They, too, are pipelining their instruction execution so that many instructions can be in the process of executing at the same time.  Though what I describe is a more extreme and spe"	fpgaminer	9.196698	-5.3851943	comment	3.0	10.0	1534263296	8.282149
17762856	Um, no. If I schedule a micro instan	Um, no. If I schedule a micro instance in a particular zone and nothing else, for the duration of my timeslice the VM will have to monopolize the core. Optimal use of vCPUs would demand that two VM threads get scheduled to the core to take advantage of HT, which Google says it won’t do. Timeslicing doesn’t solve this problem. At least that’s my reading of what they said.	h4b4n3r0	9.747443	-5.5080047	comment	3.0	16.0	1534290619	8.310879
17762121	Getting the SGX attestation key woul	Getting the SGX attestation key would permanently break SGX-based blockchain (Hyperledger Sawtooth?) mining, if I understand correctly. It's amazing that (if this is correct) this vulnerability has permanently broken a large software project.	miloignis	9.506922	-5.2288737	comment	3.0	14.0	1534282424	-5.8031373
17764214	>> - It lets you extract the sealing	>> - It lets you extract the sealing key and remote attestation. That's about as bad as it gets.It could have definitely been worse, with the leak of the fused secrets or a breach to integrity of the microcode (the two things that together constitute the TCB, which put simply is the only piece of the system you assume will never be broken).All in all, assuming a microcode update can counter the attack as Intel claims, sealing and attestation secrets will be rekeyed via the KDF rooted in the fused keys, so that you can start afresh.Of course, operationally speaking, that is a total pain but it is frankly remarkable to see this kind of deep recovery strategy finally built into consumer devices (and yes, I know DRM is unfortunately the main driver, but there are still some very legitimate use	zimmerfrei	9.810078	-5.4409513	comment	3.0	10.0	1534316453	7.85217
17786061	Linus Torvalds on 2560x1600	Linus Torvalds on 2560x1600	tosh	9.371555	-5.84068	story	3.0	20.0	1534548252	-8.180566
17788679	This is quite surprising. I assumed 	This is quite surprising. I assumed they would get an EPYC server with higher core at similar price (due to the cost of the CPU) and get advantage in performance/dollar. I didn't expect EPYC to beat a similar physical core count intel server running at similar core count let alone by this much margin. Am I missing something here?I'm saying this as someone who really wants AMD to succeed and push the ecosystem forward. I just want to make sure that I'm reading the results correctly here.They are effectively getting 35% extra performance 60% of the price that's just beyond impressive.	tmd83	9.3344965	-5.1884265	comment	3.0	20.0	1534603561	7.8727946
17788753	EPYC is compared to a previous gener	EPYC is compared to a previous generation Xeon with lower TDP (105w vs 155/170w) and slower RAM (2400 vs 2666). The Xeon server is more expensive probably because it has 4x the amount of RAM.Edit: actually, this is a dual Xeon machine so its TDP is slightly higher than EPYC's.	boris	9.357985	-5.2470136	comment	3.0	13.0	1534604329	7.903726
17802182	What about Spectre and Meltdown? As 	What about Spectre and Meltdown? As far as I remember POWER9 was affected at least with one of those.	vasili111	9.58604	-5.5370555	comment	3.0	11.0	1534787954	7.799593
17817195	I'm not in SV, and very much outside	I'm not in SV, and very much outside the startup community in the rest of the world these days, especially since I no longer work in a coworking space.I have to say, some of these legitimately look like parodies, like something out of the Silicon Valley TV show. Emojer cannot be a legitimate company with real funding. It just can't.	toomanybeersies	9.7879305	-6.2499356	comment	3.0	12.0	1534926226	-13.959409
17824631	Has Intel just outlawed any review w	Has Intel just outlawed any review website (gaming, enthusiast, etc) from ever posting benchmarks of their CPUs again? I feel like they didn't think this through.	eight_ender	9.428405	-5.2097845	comment	3.0	15.0	1534999232	7.7776017
17824859	Sorry if I stress this even one more	Sorry if I stress this even one more time, but we badly need 100% open iron, I mean something beefier than SiFive. If there is any effort in this direction, then, say for a year, most donations should be diverted over there. Closed hardware is becoming the unavoidable medium used to push closed firmware into everyone's system, that's a lot more important than benchmarks.	squarefoot	9.384442	-5.377774	comment	3.0	14.0	1535002893	-10.516918
17825212	My guess is Intel will revert the li	My guess is Intel will revert the license change soon. It's just too absurd to stay. But if not, I wonder if distros could have two packages, named with appropriate and well-deserved passive-aggressiveness, e.g.: intel-microcode-insecure and intel-microcode-legally-restricted.	mpartel	9.50701	-5.2748117	comment	3.0	11.0	1535008404	7.6785893
17825404	> Clearly, they don't have an answer	> Clearly, they don't have an answer to AMD at allThey still have a huge opportunity for CPU+FPGA, they bought Altera for the purpose.	snaky	9.19231	-5.2175727	comment	3.0	38.0	1535010957	8.056803
17825566	But CPU+FPGA will forever be a tiny 	But CPU+FPGA will forever be a tiny niche, right?  I don't see any path where mainstream programs get a boost from FPGA.	dzdt	9.098999	-5.342587	comment	3.0	30.0	1535013290	8.28699
17826164	Honest question: is AMD any better? 	Honest question: is AMD any better? Do they somehow manage to avoid Spectre / Meltdown without a slowdown?	tomp	9.283591	-5.2147236	comment	3.0	25.0	1535021845	7.8480124
17825807	I can see there being a market for t	I can see there being a market for that. The reason nobody uses FPGAs at the moment is because nobody has them outside of specialized applications.If Intel can release a CPU with a built-in FPGA and everyone has one, software developers will take advantage of them. I can see stuff like video editing programs, compression algorithms, etc taking advantage of that.	Rjevski	9.09605	-5.332753	comment	3.0	12.0	1535016406	8.319625
17827794	Is there any context here? I know ab	Is there any context here? I know about the new Intel microcode license, but I still don't get it.	jannes	9.537298	-5.3291607	comment	3.0	14.0	1535036474	7.668561
17828423	Well, yeah. It's just a complete ope	Well, yeah. It's just a complete operating system with an all new GUI that completely revolutionized the world of computing. It's not like it can send emoji to your co-workers.	sudhirj	9.824855	-6.227975	comment	3.0	13.0	1535040629	-13.948438
17828600	It's interesting how we've really en	It's interesting how we've really entered the era of side channel attacks and vulnerabilities. We're seeing this with the meltdown bugs (speculative execution is a kind of side channel) and now we are seeing stuff where even if your code is well written you have to take into account if the hardware executes in a certain way to leak EM emissions.I imagine we are going to see more and more of these types of attacks.	jtchang	9.783807	-5.6128554	comment	3.0	12.0	1535041944	-5.866518
17829254	> the poster speculated that it was 	> the poster speculated that it was the EULA for a beta version of the microcodeI don't see how this changes anything at all.	geezerjay	9.5578375	-5.3220406	comment	3.0	10.0	1535046683	7.6823792
17830096	You can give both hyperthreads in a 	You can give both hyperthreads in a physical core to the same tenant, no?Scheduling different VMs to run on the same hyperthreaded core at once seems like it can't be good for either VM's performance, even if there were no security concerns. Hyperthreading is much more useful for running multiple threads of the same app, accessing similar instruction caches etc.(There's also a question of safety within the VM, but a huge number of cloud users are running effectively one user within their VM.)	geofft	9.830517	-5.582785	comment	3.0	14.0	1535053345	8.288303
17830122	I believe it may be because the emai	"I believe it may be because the email only mentioned Intel explicitly and had a ""I won't be buying Intel in future"" (paraphrased) comment. However, I personally wouldn't assume that AMDs HT implementation doesn't have similar issues."	lomnakkus	9.246841	-5.196963	comment	3.0	12.0	1535053498	7.822479
17830740	With the newer AMD processors having	With the newer AMD processors having as many real cores as they do, does the cost-benefit analysis of HT/SMT change? I read in a comment here a few weeks ago that turning it off on the newer AMD CPUs can yield better performance because of improved cache-coherency on some workloads (My memory of what I read might be totally wrong).	tareqak	9.382018	-5.2170763	comment	3.0	11.0	1535058715	7.944418
17829870	RISC-V Boom CPU	RISC-V Boom CPU	rwmj	9.392324	-5.6558633	story	3.0	41.0	1535051973	-10.581579
17831125	We have disabled Hyper Threading(HT)	We have disabled Hyper Threading(HT) on all public facing servers(running OpenBSD). However, our compute nodes running Linux kernel are benefiting about 80 to near 100% boost for specific scientific workloads. So, we run our INTERNAL NETWORK ONLY compute nodes with HT on. In places where security is not primary concern, why not make use of HT for extra efficiency?Think and plan before you blanket disable HT on all servers running intel CPUs...If an attacker is able to run any code on these private servers, I have bigger problems to deal with than HT as attack vector..	reacharavindh	9.897377	-5.6998153	comment	3.0	13.0	1535062974	8.37929
17844245	An Example Microcoded CPU (2010)	An Example Microcoded CPU (2010)	peter_d_sherman	9.602655	-5.3473897	story	3.0	58.0	1535257437	7.7930326
17845518	The link is presented without commen	The link is presented without commentary, but for those who do not know, Agner Fog manuals are pretty much the bible on x86 microarchitectural details and optimization.	gpderetta	9.775601	-5.657435	comment	3.0	27.0	1535284484	-7.538595
17848644	Correct me if I'm wrong but assembly	Correct me if I'm wrong but assembly doesn't offer many more entries into this computation model either does it,  especially when considering some non-standard extensions to C? So they've added a lot of processor features with no API.Is there a reason speculative execution had to be added to the processor and not compilers? Would we have been better off if the true memory model was exposed to compilers?	flukus	9.794888	-5.7927384	comment	3.0	19.0	1535328933	-6.9643583
17848769	The ground is littered with the dead	The ground is littered with the dead bodies of CPU designers who said “we’ll just make a smart compiler”.The CPU knows what the software is actually doing and has done in the past. The compiler does not.The CPU can change implementations; the compiler must bake any assumptions in at build time.Speculative execution is required so long as memory latencies are so large. That trend isn’t reversing itself anytime soon.	xenadu02	9.711117	-5.7131405	comment	3.0	12.0	1535331157	-6.936452
17848970	On the AVX thing, I think maybe you 	On the AVX thing, I think maybe you can eliminate it as a channel for speculative execution attacks by just not speculatively executing AVX-512 instructions when the units are powered down, which also sounds more efficient (it doesn't sound good that, apparently, if (expression_that_is_false) { do_avx_instruction() } can drop your clock speed for several milliseconds if branch prediction guesses wrong!  The cost of powering up the AVX units is, I think, much greater than the cost of failing to speculate once.)In general, I think the problem is that we probably don't know about all possible side channels, and might not for many years.  So the approach you suggest - eliminating side channels one by one so that you can't extract information from speculative execution that way - is inherently 	voidmain	9.5599985	-5.601208	comment	3.0	14.0	1535334926	8.080792
17849368	Author is probably alluding to a shi	Author is probably alluding to a shift to SoC-driven design where they mix and match silicon components like programmers do third-party libraries. They stitch black-boxes together much of the time. With all the synthesis, they also spend more time driving black boxes that generate the circuits rather than hand-making parts of them.As a non-hardware guy, I'm still wondering why microcode isn't more popular. It's flexibility is great. Especially if the company has a HLL-to-microcode compiler so the users can create custom instructions. I know they like to change microarchitecture around. They could say they refuse to support anything below the ISA with backward compatibility. Customers will have to port their microcode extensions to each new hardware. That said, you can do some neat stuff wi	nickpsecurity	9.558836	-5.2486424	comment	3.0	11.0	1535342635	7.6809855
17851774	People keep bringing up the Mill pro	"People keep bringing up the Mill processor in response to parallelization; I've been hearing about it for ~5 years now. And yet, where is it? I see lots of talk about its architecture, but there's no hard comparisons on things like ""we get DGEMM at 2x the FLOPS/W of NVidia's latest GPU"" or ""we get 2x SPECCPU 2017 as Intel's latest processor."""	jcranmer	9.398958	-5.1912107	comment	3.0	18.0	1535381009	7.8381376
17851897	That's because they don't have a rea	That's because they don't have a real product, and they likely never will. For the most part, the ISA just needs to be 'good enough' to allow things like branch prediction, speculative execution, out-of-order execution, etc. You can do that with x86, ARM, POWER, whatever - the instruction set doesn't matter a whole lot, it's just how many/what type of transistors you can throw at it, and how hard you want to work on timing and power optimization.That's the biggest problem with Moore's law fizzling out - computer architecture isn't actually that hard, most of the work is just figuring out how to apply the extra transistors you're given. So no matter how specialized you get, you aren't going to get more than 1-2 generations of a chip out of a single semiconductor process, as there is only so	mechagodzilla	9.579434	-5.4655123	comment	3.0	15.0	1535382166	-7.709399
16126094	That's either a big waste of silicon	That's either a big waste of silicon or a very hard problem.On a related topic, I know someone who worked on CPU/FPGA hybrid architectures. The idea was to move processes between CPUs and FPGAs. Awesome stuff, realtime processes offloaded to the FPGA get to run completely off the CPU, with ridiculously low latencies. The issue is that you really have to design your code for it.	GuB-42	9.322055	-5.3607764	comment	3.0	14.0	1515693912	8.223975
16131286	Must be an incredible feeling to hav	Must be an incredible feeling to have designed and drawn what is fast becoming a core part of our language.Although looks like the pile of poo and ice cream no longer use the same swirl:https://emojipedia.org/pile-of-poo/https://emojipedia.org/soft-ice-cream/	xwvvvvwx	9.81365	-6.270537	comment	3.0	16.0	1515744649	-13.984272
16131459	Intel's greatest PR success in this 	Intel's greatest PR success in this mess has been to conflate Meltdown with Spectre. Only Intel is affected by Meltdown because of their design, and it is a more easily exploited bug.	sverige	9.5539465	-5.4781237	comment	3.0	19.0	1515747366	7.8312163
16131542	WhatsApp seems to be an interesting 	"WhatsApp seems to be an interesting case with regard to Emoji history anyway. Am I right that they appear to have copied Apple's emoji library at some time in the past and reused those on all platforms (except iPhone, of course) instead of the native emoji symbols that those platforms also started to provide? Are they still doing that today?I remember talking to confused Android users many years ago, when all this Emoji and WhatsApp craze started (I'm from Germany, where there are a lot of Android users and WhatsApp is king among messaging services due to its multiplatform capability, while iMessage isn't used nearly as much due to its inherent limitation to iOS) and people saw me using Emojis in other apps on iOS that were not WhatsApp. They were like ""hey, how did you get those cute What"	Slartie	9.805931	-6.25512	comment	3.0	12.0	1515748630	-13.995221
16131593	Many typing assistance systems (like	"Many typing assistance systems (like keyboards on Android or iOS) offer some kind of ""emoji-text to emoji"" conversion, meaning that if I type for example ""pizza"" I get the pizza slice emoji suggested in one of the three auto-completion suggestions. At least that is the case for Swype on iOS, which I personally use, but I've seen similar functionality on some Android keyboards."	Slartie	9.839221	-6.2597823	comment	3.0	11.0	1515749325	-13.952096
16131861	FYI it is a fleur-de-lis[1], which, 	FYI it is a fleur-de-lis[1], which, appropriately to the team's name, is frequently used in connection with saints.Which is also the beauty of emoji -- they don't have any meaning or intention prescribed by Unicode, only a form.[1]: https://en.wikipedia.org/wiki/Fleur-de-lis	henrikeh	9.924677	-6.194244	comment	3.0	10.0	1515752937	-13.956121
16133168	How easy or how likely is a meltdown	How easy or how likely is a meltdown attack likely to be successful against a moderately protected PC or say a VMware Cluster...these kinds of things seem hard to pin down...and if all one can do is READ - exactly what is to gain here?  It seems that the machine would have already had to have been compromised in another way to get the memory that has been READ off and out of the computer system.	DiffEq	9.6764345	-5.499864	comment	3.0	12.0	1515768488	7.8453183
16133668	Unfortunately, this gets some big th	"Unfortunately, this gets some big things wrong. Meltdown is not about speculative execution. (Spectre is.) Meltdown is about out-of-order execution - no branches required. The authors are clear about this in the paper. From Section 2.1:""In practice, CPUs supporting out-of-order execution support running operations speculatively to the extent that the processor’s out-of-order logic processes instructions before the CPU is certain whether the instruction will be needed and committed. In this paper, we refer to speculative execution in a more restricted meaning, where it refers to an instruction sequence following a branch, and use the term out-of-order execution to refer to any way of getting an operation executed before the processor has committed the results of all prior instructions.""In t"	scott_s	9.668692	-5.6187425	comment	3.0	17.0	1515771673	7.955157
16134478	Same with the peach, but now I have 	"Same with the peach, but now I have to ask, who uses an Emoji in a professional setting? You're skirting the edge of being professional already if you ever use more than "":-)"" in an informal Slack message (Aside from close coworkers/friends obv)."	0xJRS	9.793074	-6.2637734	comment	3.0	10.0	1515777630	-13.968062
16139229	Whats up with the emojis prepending 	Whats up with the emojis prepending the commit messages? Is that automated?	ky738	9.764679	-6.2906804	comment	3.0	10.0	1515844116	-14.012418
16147802	I know of a few organizations that b	"I know of a few organizations that buy multicore systems for their staff, and then ""reserve"" a few cores as part of a local grid computer. I think of this as more ""symbiotic"" computing than parasitic."	bane	9.756748	-5.420766	comment	3.0	10.0	1515980217	8.189436
16149037	Becuase this is a very real practica	Becuase this is a very real practical exploit. Having such grossly insecire defaults is a security issue. Intel AMT should be disabled by default and enabled from the BIOS after the password is provided.	Spivak	9.461771	-5.261156	comment	3.0	10.0	1515999762	7.783711
16165003	> I think it would be a grave mistak	> I think it would be a grave mistake to simply give up on mixing code with different trust labels in the same address space. Apart from having to redesign lot of software, that would set a hard lower bound on the cost of transitioning between trust zones. It would be much better if hardware mitigations can be designed to be usable within a single address space.I wonder what software redesigns he has in mind. As far as I can tell, best practices are already trending toward only one trust zone per address space. Some might argue that that's the whole point of multiple address spaces. I suspect that Spectre will accelerate this trend.I do know how difficult this kind of change can be. The example I have in mind started before Spectre, and is unique to one platform. On Windows, developers of 	mwcampbell	9.777257	-5.6550765	comment	3.0	28.0	1516156487	7.9097605
16166291	Could someone please explain to me w	Could someone please explain to me why there is so much focus on Spectre vulnerabilities in Javascript and not really any on HTML/CSS, when it seems that a server could also be able to cause the client to perform speculative execution via pure HTML? Or is it not possible for some reason? The focus on Javascript as though it's somehow special is rather baffling to me, making me wonder whether I'm really understanding the fundamental issues. (?)	mehrdadn	9.754832	-5.626374	comment	3.0	17.0	1516176564	7.417883
16184818	I don't see how an open processor wo	I don't see how an open processor would any better than a closed one.	StreamBright	9.483913	-5.185963	comment	3.0	27.0	1516349813	7.7672296
16185350	The fact that digital logic design i	The fact that digital logic design is constrained to one of two ancient languages by the proprietary toolsets is a serious problem.There are ways round this by compiling to Verilog (eg Chisel) but it's an uncomfortable halfway house.	pjc50	9.172902	-5.5333023	comment	3.0	18.0	1516359359	8.597707
16186078	As I understand it, according to an 	As I understand it, according to an article that was posted here a day or two ago, Meltdown was in fact discovered by a young Google engineer poring over the x86 manual.	nerdponx	9.585251	-5.491012	comment	3.0	10.0	1516369091	7.7713532
16186281	> I'm not happy that Intel, Google, 	> I'm not happy that Intel, Google, Red Hat and a few others have known about the bug for months and the upstream kernel devs are scrambling to build mitigations and still don't support the microcode mitigations. Google apparently patched their stuff in September, while everyone else is left out in the cold. This is a real mess. Surely there must be a better way than telling a few select companies?I think Colin's take[0] was interesting and insightful there, especially in the light of him having handled a very similar issue a decade earlier:> The way these issues were handled was a mess; frankly, I expected better of Google, I expected better of Intel, and I expected better of the Linux community. When I found that Hyper-Threading was easily exploitable, I spent five months notifying the s	masklinn	9.518781	-5.2706776	comment	3.0	58.0	1516371202	7.858352
16186761	Hi folks - bootrino author here.mark	Hi folks - bootrino author here.marketing website https://www.bootrino.com/technical documentation https://doc.bootrino.com/bootrino console https://console.bootrino.com/bootrino is new and in beta so I'm keen to find people who'd like to give it a try and let me know if it doesn't work.Today, bootrino is not for booting unikernels, but that was the original idea.bootrino lets you netboot Run-From-RAM operating systems on cloud servers, but the origin of the project goes back a few years ago to when I became interested in unikernels, and how they might improve security by running only application code and minimal operating system code on a server.  That seemed to make a great deal of sense to me.  If it's not possible to log in to a server because there is no login system then surely that'	andrewstuart	9.933522	-6.1807904	comment	3.0	11.0	1516374830	-12.389537
16194099	The main problem with intel is direc	The main problem with intel is direction and process. Dan Luu pointed out in 2015 [1] that intel chips had serious bugs and, given how intel acted, it was only a manner of time before something like this popped up.What I see happened to Intel is that once they consolidated their monopoly in the late 2000s, they lost the healthy management practices that tend to come from being in a competitive industry.All this talk from upper management about velocity was about trying to find a way to make more money when you've mined out your current niche completely. It ended up instead opening the door for AMD to make a comeback on x86[1] https://danluu.com/cpu-bugs/	VHRanger	9.299331	-5.1930165	comment	3.0	51.0	1516467983	7.825973
16194183	"How was ""packaging meltdown/spectre "	"How was ""packaging meltdown/spectre together was a brilliant PR coup from intel""?It was Google who found the exploits, and Google who published the exploits in the same document & their press release.Google is the one who packaged these exploits together. How does Intel PR take credit for this?"	tristanj	9.56238	-5.4870124	comment	3.0	23.0	1516468853	7.7933083
16194454	What actual data can be extracted by	What actual data can be extracted by a Meltdown/Spectre attack? Still need to find an answer to that, nothing online says anything specific.Datacenters should probably be worried, but what about the hundreds of millions of users out there? Doesn't seem like a big deal, tbh - until an actual exploit is out there, why should they worry?	jotm	9.656212	-5.5560193	comment	3.0	14.0	1516471358	7.774147
16194725	> Starting in the mid-2000s, Intel a	"> Starting in the mid-2000s, Intel added a layer of security within its chips and began encouraging developers to store users’ most sensitive information in the walled-off area rather than in regular software memory.What ""layer of security"" and ""area"" they are talking about?"	jwilk	9.489831	-5.2217093	comment	3.0	13.0	1516474127	7.778351
16194969	But here's the other thing: there is	But here's the other thing: there is no Meltdown exploit for AMD yet. The paper (https://meltdownattack.com/meltdown.pdf, Section 6.4) is clear that the race condition at the core of the exploit exists in AMD chips, as toy examples show some information leakage. It's just that they can't get a working exploit.Is there no working AMD exploit by design, or did AMD just get lucky? I bet they just got lucky.	scott_s	9.40185	-5.3405714	comment	3.0	14.0	1516476768	7.8122025
16195115	  Meltdown and Spectre have opened u	"  Meltdown and Spectre have opened up new hacking threats, sparked class actions, and enraged longtime partners.

At this point in time, it is known that Intel isn't the only vendor producing hardware susceptible to Meltdown and Spectre, which is another of saying AMD is in the same boat. Given this fact, I'm struggling to understand why Intel is being continuously singled out.Meltdown and Spectre aren't the first, won't be the last. I personally feel that a more interesting discussion should take place: how to prepare/plan-for/deal-with similar issues further down the road. One particular thought that comes to mind is that this industry lacks an effective recall mechanism."	xtrapolate	9.529203	-5.4592447	comment	3.0	17.0	1516478412	7.7805147
16202435	In case it’s unclear to anyone, Davi	In case it’s unclear to anyone, David Woodhouse (the person Linus is replying to / previous poster) works for Amazon and previously Intel[1] aka @dwmw2 on Twitter, ironically his twitter profile is: “Kernel hacker. Known to occasionally promote an attitude of violence towards complete morons.”*[1] Correction, I thought (as does Google) that he still worked at Intel, but it was pointed out that he now works at Amazon UK.	smcleod	9.538994	-5.21436	comment	3.0	12.0	1516604683	6.863005
16202557	Well, for one thing, modern CPUs are	"Well, for one thing, modern CPUs aren't microcoded much. Real microcoded CPUs went out with the 1980s.  The microcode in today's fast CPUs is mostly initialization, and maybe emulation support for some instructions nobody uses any more, like decimal arithmetic or 16-bit mode. The microcode can maybe turn some stuff off and tweak some tuning parameters. Anyone know what Intel's ""fixes"" really do?"	Animats	9.573834	-5.3841314	comment	3.0	10.0	1516606501	7.757161
16202599	Linux Torvads calls Intel patches 'c	Linux Torvads calls Intel patches 'complete and utter garbage'	MilnerRoute	9.600032	-5.4983997	story	3.0	27.0	1516607088	7.713805
16202763	As far as we know, there has never b	As far as we know, there has never been a single attack using either of specter or meltdown issues. No code had been found, nothing.It appears to be very difficult to take advantage of, and the initial idea of a JavaScript exploit seems to not be possible.Part of the reason for all of this might be that the attacker needs to run code on the target machine, and one the attacker can do that, there are far easier ways to read memory.	jnordwick	9.739466	-5.6365633	comment	3.0	24.0	1516609108	7.5114675
16202783	Agreed. Frankly I'm amazed that the 	Agreed. Frankly I'm amazed that the linux kernel has been such a hit with leadership like that. Torvald seems brilliant, but he also seems like a royal asshole. Why anybody would want to work with him is confusing to me.	cupofjoakim	9.4460125	-5.801559	comment	3.0	10.0	1516609375	-8.169405
16202820	Meltdown is almost trivial to take a	Meltdown is almost trivial to take advantage of, as these things go, and it was discovered independently by more than one researcher.  That makes it somewhat more likely to have been exploited by a government level attacker.However, just being able to read all of kernelspace is more of a force-multiplier than being useful on its own.  You still need to get your code executing in user-space to do anything, ant it's value even then is at least partly tied up in its ability to easily defeat KASLR.	aidenn0	9.744444	-5.5391927	comment	3.0	13.0	1516609817	7.8513136
16203475	Linus, like Jobs, is a bully.He live	"Linus, like Jobs, is a bully.He lives under the sword. The moment he stops being right, everyone will swiftly turn against them.What separates them is that they're almost never wrong. Not when they pull out ""this is garbage"" card.This is a difficult ability to learn. You need to stay quiet most of the time, then be a complete asshole when it's important.I really hate that aspect of our industry. But that's just hating on humanity. Apes listen to apes that shout, but only when everyone else is listening too. Otherwise you're just a dick with no influence.The key is to hate that Linus is a bully while also respecting him when he's right.It's super frustrating because I feel like any of us could have written that, and no one would care. Literally no one would listen. But Linus says it, so it "	sillysaurus3	9.279247	-5.8920836	comment	3.0	26.0	1516619368	4.287426
16203531	I think there needs to be a clear di	"I think there needs to be a clear distinction of what a bully is and what they do. Bullies are violent for no reason, for the pleasure of it. Linus is at most verbally harsh for pretty obvious reasons, the main reason being the harsh his language the more important the issue is. His attacks and critique are never on the personal basis, yet people get offended for no apparent reason instead of focusing on the issue. So, yes, it seems to be evident that those people are scared of other people who are able to speak their mind freely. People who are doing important jobs like maintaining critical code are cowards who break under the slightest hint of critical pressure (no, not all are cowards, but that's the trending issue right now). And then I read something like this above ""I hate it when he"	dschuetz	9.267206	-5.881654	comment	3.0	17.0	1516620227	4.265987
16203677	Coincidentally on the frontpage toge	Coincidentally on the frontpage together with the rant of Linus Torvalds	stabbles	9.295112	-5.8825264	comment	3.0	12.0	1516621778	4.167095
16204159	The argument goes like this, the ace	The argument goes like this, the acerbic culture that grows around Linus is toxic towards female and (sexual/ethnic) minorities, because such contributor are disinclined to join projects where the lead can get verbally abusive.From what I've gathered the findings are based on real data.	Ygg2	9.291624	-5.8874354	comment	3.0	16.0	1516627758	4.204292
16202966	> FOSS is so importantFOSS is nice, 	> FOSS is so importantFOSS is nice, but it's not a silver bullet. In this case I think Linus is largely to thank. Things will be a lot harder if he decides to retire.	joelthelion	9.311144	-5.880545	comment	3.0	24.0	1516611830	4.2762856
16203416	It does make me worry about the day 	It does make me worry about the day that Linus retires. I imagine the kernel has enough momentum to carry on for a while but without a leader like Linus I can see it very slowly starting to unravel and quality issues starting to sneak in, much like we're seeing with post-Jobs Apple.Thankfully it doesn't seem that time is coming any time soon.	SmellyGeekBoy	9.411107	-5.841248	comment	3.0	10.0	1516618166	4.181216
16205110	See it from this angle: if Linus was	"See it from this angle: if Linus wasn't known for flipping his lid all the time, him flipping out _this_ time would be even more impactful. Overuse makes it progressively less remarkable.I wasn't even saying that his tone on this particular instance was excessive. I was responding to the general accusation that ""PC culture will silence him"". There's exactly one sentence I have issues with here (""the whole hardware interface is literally mis-designed by morons""). The rest of the email is toeing the line, but manages to be forceful without being outright insulting."	pdpi	9.281737	-5.8939533	comment	3.0	11.0	1516635360	4.257135
16207735	Yup, its like an automaker issuing a	Yup, its like an automaker issuing a service bulliten for 'unintentional parking', or 'rapid decelleration'. I get there must always be some marketing involved, but that breaks down fast when it just feels dishonest. That is fast becoming a trend with Intel it seems. And intel desprately needs trust from an industury that depends on them. I really hope they can refocus, and not die a slow death of 'everything's fine'.	nugi	9.352234	-5.185112	comment	3.0	20.0	1516653804	7.7205753
16211882	For the most part he actually does a	"For the most part he actually does a good job staying away from personal attacks.  The problem is that his approach isn't going to yield great results.  For there's 2 problematic parts to this e-mail.The first is the personal attack when he calls Intel engineers morons.  That 1 little unnecessary addon is uncalled for because it's quite reasonable that there's a lot of politics going on at Intel that's interfering with the engineering work. Could be that the next chip they're taping out can't be fixed properly without delaying & impacting revenue in a way that execs won't allow. Could be that there's legal reasons whereby Intel's ""fix"" is desirable from a management perspective to continue their denial of a problem with their chips to win or reduce the costs of the class actions.  Or it co"	vlovich123	9.38079	-5.2412443	comment	3.0	17.0	1516695534	7.706979
16211735	Why is the top comment on this about	Why is the top comment on this about engineering culture?!Linus is valuable precisely because he occasionally d-slaps people around, waking them up, even when what he says may be factually wrong, and reminding them the at the core the tech must be sane, f people and their feelings!Yeah, it's good to have a 1 in 1000 brilliant people being aholes because it keeps the culture balanced. We need a dose of rascality, and Linus can afford to embody it and seems to like doing it, and he's also good at fixing the consequences of his rants by being reasonable afterwards.(If we're mature enough to accept that this can only be accepted of 1 in 1000 people or something like that, and that obviously not all people are born equal, we can move on and enjoy life.)	nnq	9.286869	-5.878383	comment	3.0	32.0	1516693002	4.2000976
16220468	"""since the peanut gallery is paying "	"""since the peanut gallery is paying lots of attention it's probably worth explaining it a little more for their benefit.""what a ridiculous sentiment to defend a patch from Intel thats effectively disabled by default for one of the most egregious bugs in microcode since F00F.""The new microcode from Intel and AMD adds three new features.""
No ones talking about AMD, David, not Linus and certainly not hackernews or other outlets.  Spectre patching will happen regardless of this fiasco but This NOT SPECTRE. 
 this is a taylor made shit sandwich thats been warned about by researchers and lurking on Intels plate for more than a decade.  intel chose speed over security, and intel lost.  Now they're trying to find a way --any way-- to avoid having to eat an 8 generation recall or worse.its been sai"	nimbius	9.464597	-5.3090415	comment	3.0	12.0	1516770283	7.785207
16220581	That link doesn't seem to show the c	That link doesn't seem to show the continuation of the thread, but it continues to be rather interesting:https://lkml.org/lkml/2018/1/23/25It looks like Ingo Molnar, Andi Kleen, and others are coming up with a pure-software alternative to IBRS, which could be much faster (rather similar in spirit to the retpoline trick)	ploxiln	9.569167	-5.379689	comment	3.0	26.0	1516772317	4.531117
16220646	Redundancy of x86 Machine Code (2009	Redundancy of x86 Machine Code (2009)	akkartik	9.8383255	-5.5742908	story	3.0	46.0	1516773226	-7.700031
16221493	Agreed, but it almost doesn’t matter	Agreed, but it almost doesn’t matter: what matters is sending the signal that shenanigans will be punished by the market.If devs do anything it should be learning to write software that doesn’t depend on speculative execution for performance	gaius	9.686441	-5.6440506	comment	3.0	16.0	1516786795	-6.7132525
16222097	"none of these was done ""on purpose"" "	"none of these was done ""on purpose"" which is the definition of a shenanigan.The “shenanigans” are that it has become acceptable practice to cut corners on security to improve benchmarks.Maybe speculative execution is just a thing that shouldn’t be done? People computed perfectly well before it. Itanium isn’t impacted by Meltdown so Intel is capable of it."	gaius	9.680368	-5.6613946	comment	3.0	11.0	1516795911	-6.665525
16225467	We are literally weeks into Meltdown	We are literally weeks into Meltdown/Spectre. The code you write runs on a complex programming language you didn't write, that may be running on a VM, that is running on an OS, that is running on a multicore CISC processor with 100s of publicly known instructions, that can only be built due to modern developments in quantum mechanics.You run idealized versions of systems in your head.	pharrington	9.6195345	-5.557594	comment	3.0	10.0	1516821500	7.8232303
16237531	After reading the title this was exa	"After reading the title this was exactly my first thought.Polluting the titles with emojis feels unnecessary and childish to me. I them a mental burden that makes it difficult to read the important information.
I can not imagine a new car announcement page filled with emojis and I don't know why it should be different for software."	crbelaus	9.794691	-6.2670884	comment	3.0	13.0	1516951132	-13.956911
16248857	Two distinct opcode extensions for S	"Two distinct opcode extensions for SAL/SHLHow those came about is pretty straightforward:    SHR - shift right with zero-fill
    SAR - shift right with sign-fill
    SHL - shift left with zero-fill
    SAL - shift left with sign-fill

Of course, the sign-fill hardware is useless for left shift, so we effectively have two opcodes doing the same thing. The Z80 has a similar instruction, except that it, more oddly, always inserts a 1 in the LSB."	userbinator	9.752069	-5.650748	comment	3.0	10.0	1517097971	6.977524
16256344	Im really wanding they had more than	Im really wanding they had more than 6months to do these patches and they did not bother testing on a good number of systems. Its not like MS + Intel dont have enough money to buy a few 1000 testing machines and get some testers on it.	hishnash	9.653662	-5.2200456	comment	3.0	13.0	1517217235	7.803663
16256917	A more accurate title would be that 	A more accurate title would be that Microsoft disabled the specter mitigation’s due to a flawed Intel update, right? I thought this was all Microsoft’s fault until getting half way through the article.	mark_l_watson	9.580181	-5.4749722	comment	3.0	33.0	1517226398	7.7688336
16264569	On desktops or notebooks, where the 	On desktops or notebooks, where the power budget is much bigger an cooling more efficient, they might push for a high performance ARM chip, coupled with an x86 translation layer. They pulled this successfully twice already (m68k -> PPC and PPC -> x86).	Anarch157a	9.627858	-5.224513	comment	3.0	11.0	1517313291	7.6214023
16269269	This makes sense. Red Hat has been i	This makes sense. Red Hat has been investing in Project Atomic for a while now and CoreOS still seems like a better option, if you're looking for a container-only OS that has been battle tested.Additionally, both companies seem like good places to work, with leadership that's often praised and has the results to show. I'm happy for CoreOS on this one, they're joining a company that I admire.Looking forward to see how this will impact RHEL8.	gtirloni	9.825294	-5.9672885	comment	3.0	10.0	1517348125	-9.2453785
16269463	Not great news if you use container 	Not great news if you use container Linux:https://www.redhat.com/en/blog/faq-red-hat-acquire-coreosContainer Linux and its investment in container-optimized Linux and automated “over the air” software updates are complementary to Red Hat Enterprise Linux, Red Hat Enterprise Linux Atomic Host and Red Hat’s integrated container runtime and platform management capabilities. Red Hat Enterprise Linux’s content, the foundation of our application ecosystem will remain our only Linux offering. Whereas, some of the delivery mechanisms pioneered by Container Linux will be reviewed by a joint integration team and reconciled with Atomic.	grey-area	9.77154	-6.0994515	comment	3.0	53.0	1517349440	-9.255926
16270002	tectonic, ignition, matchbox?Also Co	tectonic, ignition, matchbox?Also CoreUpdate is based on Chrome and ChromeOS but it's the only os that integrated it nicely. Running CoreOS is way simpler to manage than most other distro's because of that fact.	merb	9.8911085	-5.772788	comment	3.0	15.0	1517354241	-9.188634
16270313	This is a good move for CoreOS and R	This is a good move for CoreOS and Red Hat, I think.I've thought for a while that the platform market would shake out and be left with one and at most two winners. Previously we saw Deis fold into Microsoft and now CoreOS into Red Hat.I expect that Docker will run independently for another few years before their investors realise it's time to push for an acquisition exit, but it's unclear by whom. I figure Heptio will go to one of Red Hat, Google or Microsoft.As for CoreOS's technologies, my guess is that Red Hat will be gently herding Tectonic and Container Linux users to OpenShift and RHEL respectively. About the only products I expect to survive fully intact would be Quay and etcd.Disclosure: I work for Pivotal, we compete with Red Hat and Docker. So read my remarks with whatever mix of	jacques_chester	9.783943	-6.0581512	comment	3.0	45.0	1517358072	-9.312736
16270595	That's not an emoji.Otherwise I thin	That's not an emoji.Otherwise I think these are oddly a good idea. I used to make frequent use of unicodesnowmanforyou.com to get my ️snowman emojis (I'd add one but hn does not permit). Would hardly be able to justify the domain registration expense though.	Y_Y	9.804456	-6.2636466	comment	3.0	18.0	1517361784	-13.940917
16270607	That is absolutely an emoji. The ter	That is absolutely an emoji. The term predates their inclusion in Unicode.	nothrabannosir	9.872801	-6.2367563	comment	3.0	15.0	1517361875	-13.957075
16278205	Is there any windows / linux utility	Is there any windows / linux utility that shows the number of ECC errors corrected since the boot?If not, AMD should write and promote one.Very curious on how often it happened for normal home/offic usage.I used to work for a silicon company who took a embedded network switch system with ECC logic to some nuclear lab for testing to verify/showcase the ECC functionalities.	srcmap	9.48474	-5.5349264	comment	3.0	11.0	1517438427	8.237183
16285650	Stanford's EE 380 had a talk on thes	"Stanford's EE 380 had a talk on these vulnerabilities yesterday, from the Red Hat guy working on mitigations. There were some CPU designers in the audience.
(Not Hennessey, though.)The general comments were that Meltdown is a huge and easy to exploit vulnerability. Under Linux, any process can effectively read all of kernel RAM.  There are straightforward software and hardware mitigations available. The next generation of CPUs should have that fixed.Spectre is much harder to exploit and much tougher to fix. It's not an inevitable problem with speculative execution. IBM Z-series mainframes apparently don't have this problem. But it's going to be tough.The real problem is all that hardware and software out there in the field vulnerable to Meltdown. There will be unpatched systems for years t"	Animats	9.646996	-5.563029	comment	3.0	11.0	1517517651	7.786973
16290751	FPGAs are worth it for anything that	"FPGAs are worth it for anything that's too fast for software and is too niche for an ASIC. In my experience they are very popular for ""pro tools"" which are too specialized and don't have a large enough volume to justify creating an ASIC and are so expensive that the price of the BoM is not really a concern. For instance I work on products that do a lot of video processing on FPGAs (way too high bandwidth for software, too specialized for an ASIC).Now if you look at consumer electronics you obviously won't find many FPGAs. Too expensive, too power hungry, too costly and at large scales ASICs are a better match."	simias	9.085574	-5.333808	comment	3.0	13.0	1517582238	8.314023
16290985	Bernie Meyers of IBM once told me th	Bernie Meyers of IBM once told me that he believed FPGA would be the future of Moore's law. he felt strongly that they provided a performance and flexibility tradeoff that made them ideal for using in virtually all servers as coprocessors for certain functions. The fact that the FPGA code can be audited was a plus as well.	abakker	9.114366	-5.31138	comment	3.0	10.0	1517583693	8.273903
16294397	Allwinner VPU support for the Linux 	Allwinner VPU support for the Linux kernel	throwaway000002	9.888628	-5.204768	story	3.0	80.0	1517607420	-8.042782
16298681	Having an actual RISC-V ASIC is cool	Having an actual RISC-V ASIC is cool, but note that you can run a RISC-V softcore on a significantly cheaper FPGA board - or even in software simulation.This is more interesting for showing progress in the RISC-V ecosystem than for hacking around with.	JoachimSchipper	9.374931	-5.629857	comment	3.0	18.0	1517681304	-10.552084
16299123	Honestly, if you want a full MMU wit	Honestly, if you want a full MMU with a Linux-capable RISC-V implementation and everything, and a few cores like this -- you'll need a fairly decent FPGA, as well as the clocking resources/peripherals so things aren't unusably slow. You can get cheap FPGAs for the microcontroller-class devices/cores, but the FPGAs SiFive recommend for U-series cores of theirs are quite expensive, like $4000. lowRISC can run on something like a $1500 Kintex-7 devkit, I think. There are better boards coming out soon at better price points (such as this one[1]) that might fit the bill, but then you have to do board setup yourself... It's not worth it IMO unless you plan on reusing the FPGA.If you want a microcontroller class chip so you can just play with the 32-bit instruction set -- you can get that with QE	aseipp	9.3837385	-5.3585815	comment	3.0	14.0	1517686539	7.695945
16300265	Are those software packages written 	Are those software packages written to take advantage of that many cores? Since they all date back 10 years or more, I would guess not.	ams6110	9.599683	-5.3157005	comment	3.0	13.0	1517699734	7.9825907
16304992	Intel says that:> Micro-fusion fuses	Intel says that:> Micro-fusion fuses multiple micro-ops from the same instruction into a single complex micro-op.And that:> Macro-fusion merges two instructions to a single micro-op.The point is that the three instruction format and the single instruction format you would think would decode both to three micro-ops (or something like that), but instead the single instruction format can use a single fused micro op. That's why it's better to write as a single instruction.And your reference backs this up - it talks about single instructions in this section on micro-op fusion.You may be confusing it with macro-fusion, which is about fusing multiple logical instructions, which is discussed in the next section in that Agner document, but isn't discussed in this blog.> This article is instead abou	chrisseaton	9.7731695	-5.899088	comment	3.0	25.0	1517779089	-7.7316804
16308903	One drawback to giving branding to t	One drawback to giving branding to these otherwise complex and obscure vulnerabilities. It wouldn’t be so effective to say “Intel has detected your computer is vulnerable to a cache side channel attack. Click here to install the fix.”	gnu8	9.485302	-5.2460933	comment	3.0	10.0	1517840856	7.7830935
16312684	The phrase 'For example, on the popu	"The phrase 'For example, on the popular and elegant X86 architecture, the single byte 0xF4 is the ""HLT"" instruction' slays me every time."	raphlinus	9.887883	-5.7761497	comment	3.0	19.0	1517868480	-7.582322
16322133	I would stick with VHDL and SystemC.	I would stick with VHDL and SystemC. Any tools that could actual synthesize your designs are going to handle VHDL and Verilog.I do prefer VHDL to verilog. My main reason is Verilog does not make a distinction between variables and other objects. Verilog treats almost everything as if it were an assignment type. Furthermore, variables in verilog are shared by default. VHDL shows how it should be done. There is a clear distinction between signals and variables. Additionally, variables are local by default.My opinion of course. Although VHDL can be bit more wordy. However, that's least of my worries (wordiness) when designing something. I would rather have clear semantics for me and other people on what the heck is going on.However, Verilog is just as capable.	anfilt	9.102092	-5.4943757	comment	3.0	10.0	1517975585	-0.67013043
16324899	If one wanted to go about and take t	If one wanted to go about and take the easy way out and instead of using discrete chips going with an FPGA. Which FPGA-chip / board would be a suitable option?	rijoja	9.10307	-5.327174	comment	3.0	14.0	1518016545	8.329829
16356966	Ask HN: How are you doing CI/CD at y	Ask HN: How are you doing CI/CD at your company?	xstartup	9.203576	-6.3995385	story	3.0	5.0	1518417478	6.1500144
16364925	This obviously increases contributio	This obviously increases contributions, which is great. Does this now require more time from people with Run Trybot access to manually kick off a CI run? I wondered why Go always used that instead of automatically kicking off CI for each patchset. To save resources perhaps?	rajathagasthya	9.192497	-6.406888	comment	3.0	10.0	1518498857	6.145552
16372098	"What's the rationale behind this? 
A"	"What's the rationale behind this? 
Also, can someone explain me why Slack forces Google-themed emojis? I personally like the Windows design with black stroke"	amadeusw	9.759553	-6.251216	comment	3.0	12.0	1518566343	-13.9558935
16372367	Apple's Emoji designs are copyrighte	"Apple's Emoji designs are copyrighted to Apple. The unicode standard only defines character codes, and what they should ""generally"" look like (hell, Unicode's own example designs are monochrome line drawings). So this makes complete sense. If people started using Apple's logos on the App's UI, they would respond in exactly the same way.And if they're so invested in using emojis as a ""key marketing strategy"", why didn't they pay an artist to create emojis for their own use?"	princekolt	9.817728	-6.2645507	comment	3.0	22.0	1518568792	-13.964586
16372448	The practical upshot of such a polic	"The practical upshot of such a policy would be everyone shipping their own fonts instead of using Apple's system fonts, just to be safe. This would be nothing but trouble - bloated app sizes, more ram pressure, uneven look and feel, and diminished influence on Unicode.A now-deleted tweet by a different developer facing the same issue stated that Apple apparently clarified by saying that using emoji as ""media"" was forbidden, but ""content"" was okay. Whatever that means.Between this and the gun/water pistol thing, it really seems like Apple thinks of Unicode as their personal playground, and simply do not think through the network effects of their policies at all."	dTal	9.863826	-6.231327	comment	3.0	14.0	1518569705	-13.968059
16379333	I'm surprised I haven't heard about 	I'm surprised I haven't heard about any big FPGA mining operations. It would work nicely with this change plus it allows to mine coins with different algos depending on what is most profitable at the moment (along with running some wallet recovery / vanity address generator services).	comboy	9.095633	-5.361889	comment	3.0	22.0	1518642156	8.3614855
16379315	I disagree.I've outlined my main poi	"I disagree.I've outlined my main points in a post on Reddit: https://www.reddit.com/r/Monero/comments/7x82yp/technical_cr...In short: a memory-hard PoW algorithm (such as Cryptonight) can be gamed by using exotic low-latency memory like RLDRAM3, QDR-IV, or Hybrid Memory Cube.Its not as many orders-of-magnitude better than BTC, but it'd probably be on the order of 1x to 10x more power-efficient in the case of RLDRAM3. Although due to the costs of developing an ASIC and buying expensive RAM like RLDRAM3, it would likely cost a bit more than commodity hardware.You'd make it up eventually in energy savings however.The recent Hybrid Memory Cube RAM looks incredibly fast and power-efficient however. I wouldn't be surprised if HMC + FPGAs or ASICs completely destroys any ""ASIC-resistance"". Fortun"	dragontamer	9.418784	-5.282854	comment	3.0	13.0	1518641976	3.3782165
16379394	It not only creates a bias (which de	"It not only creates a bias (which decreases entropy), but its an operation that would easily be implemented faster on an FPGA than on a CPU. I mean, its basically a singular LUT, there's nothing more efficiently done on an FPGA than LUTs.Basically, I think it actually weakens the FPGA-resistance of Cryptonight.Fortunately, the main idea of the changes would discourage ASICs being made for Monero. But it doesn't seem to discourage FPGAs, which are just one ""resynthesize"" away from fixing any code changes. And as long as the community becomes accustomed to regular changes, then any issues in the encryption can be fixed later."	dragontamer	9.122903	-5.345318	comment	3.0	19.0	1518642599	8.324312
16379747	I am confused by this—-aren’t ASICs 	I am confused by this—-aren’t ASICs the costliest option until some (high) number are fabricated and put into use?If FPGAs can implement these changes efficiently—more efficiently than cpu miners—-and be re-synthesized to implement further changes, doesn’t that advantage them?	28mm	9.078934	-5.332505	comment	3.0	15.0	1518644744	8.300009
16382795	What an absolute disaster spectre ha	What an absolute disaster spectre has been, and what a shame it is that intel won't be punished for it	beebmam	9.552584	-5.497381	comment	3.0	12.0	1518686907	7.7572017
16396575	Apple's CPUs were affected. They're 	"Apple's CPUs were affected. They're ARM based: https://support.apple.com/en-us/HT208394AMD's press release on their susceptibility to Spectre: 
https://www.amd.com/en/corporate/speculative-execution"	strictnein	9.574265	-5.504677	comment	3.0	22.0	1518816770	7.894551
36549526	Honestly one of the craziest things 	Honestly one of the craziest things is Linus saying security vulnerabilities are just normal bugs, don't deserve special treatment or to be fixed with priority, nor should they even be announced.That's a terrible security approach. The article makes good points.	PrimeMcFly	9.363728	-5.8162217	comment	3.0	17.0	1688215559	4.257525
36555514	Yes, interest in I2O was lukewarm fo	Yes, interest in I2O was lukewarm for the reasons you mention. I gave I2O a brief mention in the article but didn't want to go into too much of a tangent :-)I suspect that some people at Intel really wanted to have IBM System/360 mainframe style I/O channels. There was the 8089 I/O coprocessor for the 8086. The iAPX 432 had a I/O coprocessor (43203) that worked with another microprocessor to act as an I/O channel. And then there was I2O, using an i960 as an I/O processor.	kens	9.500495	-5.234266	comment	3.0	10.0	1688247359	7.6275907
36577513	Cadence for example, the software th	Cadence for example, the software that the engineers design and run simulations of the latest and greatest ICs with, from HN's favorite RISC Vs to Nvidia's 4090, only runs on SLES and RHEL.ANSYS fluid dynamics simulator is another. All the advanced planes, future engines have been simulated with it.CATIA and NX are advanced and very expensive CAD software (the basic licensing  packages for a medium grade company can easily near a million and often exceed). Both runs only on SLES or RHEL.Many large businesses use on-prem SAP deployments which runs only on SLES.	okanat	9.191525	-5.335593	comment	3.0	13.0	1688411463	6.4847875
36620437	Canadian farmer fined for thumbs-up 	Canadian farmer fined for thumbs-up emoji	rpledge	9.754816	-6.2435293	story	3.0	10.0	1688667458	-13.943407
36625103	I'd be curious to learn why CPUs don	I'd be curious to learn why CPUs don't have conditional move speculation.	Lk7Of3vfJS2n	9.564445	-5.4010186	comment	3.0	21.0	1688688199	-7.1437464
36636873	Intel foundry is lagging from like 1	Intel foundry is lagging from like 10 years, will US giving them billions help in any way?	akmittal	9.185603	-5.1921506	comment	3.0	12.0	1688756976	7.6737294
36639726	Farmer owes $82,000 in contract disp	Farmer owes $82,000 in contract dispute over use of a ‘thumbs-up’ emoji	adharmad	9.734756	-6.2547083	story	3.0	10.0	1688773324	-0.21114902
36643323	A significant part of those circumst	"A significant part of those circumstances being:     ""I am satisfied on the balance of probabilities that Chris okayed or approved the contract just like he had done before except this time he used a thumbs-up emoji.""

    ""In my opinion the signature requirement was met by the thumbs-up emoji originating from Chris and his unique cell phone,"" the judge said.

a past history of business transactions.It's not dissimilar to a physical nod or thumbs up in an auction situation."	defrost	9.715203	-6.2213173	comment	3.0	17.0	1688814777	-13.936887
36643941	"""just like he had done before except"	"""just like he had done before except this time he used a thumbs-up emoji""Surely the ""_except_ this time he used a thumbs-up emoji"" means he did _not_ use the thumbs up to mean acceptance before?"	ghusto	9.7746	-6.2690864	comment	3.0	10.0	1688821038	-13.953585
36652213	But there must be some with 32bit su	But there must be some with 32bit support?	ant6n	9.869451	-5.2219605	comment	3.0	10.0	1688885118	-7.9005075
36665151	There was an OS especially made for 	There was an OS especially made for the new 286 and its protected mode: Concurrent DOS by Digital Research (aka Gary Killdall).This OS would function strictly in protected-mode, allowing users to take full advantage of the protected mode to perform multi-user, multitasking operations while running 8086 emulation.But, by an irony of fate, this only worked on the B-1 prototype step of the chip. When Intel went out for production with a new C-1 step, it broke everything and Concurrent DOS was delayed[0] until it was too late, and then the OS was recycled as a Point of Sale for cash register software[1].[0]: https://books.google.com/books?id=2y4EAAAAMBAJ&pg=PA17&redir... (Super DOS awaits new 80286)[1]: https://books.google.com/books?id=oi8EAAAAMBAJ&pg=PA12&redir... (IBM to use a DRI Operating	achairapart	9.864641	-5.1970053	comment	3.0	17.0	1688990713	-7.926043
36675279	Does this offer any performance bene	Does this offer any performance benefit over using Lima, particularly when running x86 VMs on Apple Silicon? Or is Lima already using the same APIs?	freetime2	9.792483	-5.8106422	comment	3.0	10.0	1689037757	-8.641314
36691841	Just skimmed the paper. Seems to me 	Just skimmed the paper. Seems to me like this paper wants to optimize transformer inference e2e, i.e. from ASIC level all the way to cloud.I'm not exactly convinced though, since all the results seem to be purely theoretical or simulated. I would've liked to see a prototype built across several FPGAs with clock speeds extrapolated for ASICs.	fzliu	9.086021	-5.3356524	comment	3.0	10.0	1689150869	8.270233
36693278	How much have they optimized the sof	How much have they optimized the software here? Is it tinygrad level optimization?Also does this lower total cost depend on SRAM being available for DRAM prices?What makes SRAM so much more expensive than DRAM?	ilaksh	9.7516165	-5.2819805	comment	3.0	11.0	1689163148	8.011352
36699055	To add to this, I think nowadays eve	To add to this, I think nowadays even C++ is too slow for some stuff.  Many places use FPGAs	mr_00ff00	9.131762	-5.3799257	comment	3.0	11.0	1689185227	8.337657
36704826	Dumb Question: why can't these emula	"Dumb Question: why can't these emulators be built on top of QEMU? That seems to support a crazy amount of ""hardware"" - different CPU, BIOS, Audio shit, etc.Is it, in theory, possible to make, eg Atari 2600 (or NES, or Sega) emulator from QEMU?"	djbusby	9.912559	-5.378077	comment	3.0	13.0	1689220517	-8.217783
36712926	Disagree- typically vertical scaling	Disagree- typically vertical scaling is lumpy, and even worse- CPU and RAM upgrades are typically not linear, because you're limited by the number of slots/sockets and the manufacturers intentionally charge higher (expoentially) prices for the largest RAM and fastest CPUs.	dekhn	9.642308	-5.193538	comment	3.0	15.0	1689269591	7.746628
36735386	You are comparing the benefits of th	"You are comparing the benefits of the „good old times“ from the drawbacks of the present. 
Drawbacks from the past include that the number of things you could express with ascii emojis is very limited, anything that goes beyond the usual palette of emotions required explanation and context, and several old school emotes or single line ascii art require a monospaced font to be rendered in an understandable way.
Another important thing is that ascii emotes are easier to type in on a keyboard than on mobile, whereas context aware emoji keyboards on phones make it very easy to enter those. And the phone is what people are usually using to communicate."	pflenker	9.815237	-6.259039	comment	3.0	10.0	1689417765	-13.962268
36735332	I'd be delighted if the deep fried v	"I'd be delighted if the deep fried version of ""crying laughing emoji"" were to become a thing: ""open eye crying laughing emoji""To me it signifies something that holds the middle between glee, hysterical laughter and psychotic rage. Unicode really misses a codepoint with this specific energy, in my opinion.[1] https://knowyourmeme.com/memes/open-eye-crying-laughing-emoj..."	isoprophlex	9.800668	-6.263691	comment	3.0	13.0	1689417221	-13.958671
36735711	> I wonder if they're ever going to 	> I wonder if they're ever going to decide that enough emoji is enough,Really hard to do by this time. Since they allowed so many it's harder to say no. They have a burrito, but why no kebap, yet? They have person's playing basketball or golfing, but no person playing football (any variant) putting a stop to it gives an arbitrary set and restricts representing develoment in society (they have kick scooters which are modern, but what about the future successor?)But of course, the more they add the harder it is to use. These new directional ones can be hidden as variants similar to skin color etc is currently handled in UIs, but individual ones ...Deprecating also isn't an option. Text using those exists. They can't really break it.	johannes1234321	9.799879	-6.263916	comment	3.0	17.0	1689421820	-13.971055
36737387	Speaking as a person with light-colo	Speaking as a person with light-colored skin, the default-yellow emoji still basically look like me. Or, a version of me that's on the Simpsons, at least.I imagine that if I had dark skin, I'd feel a bit alienated by this experience. I'd be using these symbols that were supposed to represent me / my-reactions, but which very much didn't look like me. There'd be this pervasive sense that I was not included, not important enough to be the one represented.That would kinda suck. I don't have to experience that, and I'm happy to have emoji set up so that people who don't look like me also don't have to experience it.Put another way, would you care if the default emoji color was changed to be dark-skinned?	kemayo	9.784043	-6.2748504	comment	3.0	11.0	1689433202	-13.968281
36737880	One issue with Emojis is wrong imple	"One issue with Emojis is wrong implementation messing things up. For example, I wondered why there is no ""pouting"" emoji. Turns out there is such an emoji in the spec, but someone (probably Apple) decided to use that Unicode point for ""red angry face"" (additional to the original ""angry face"", which is yellow). Then all the others followed the Apple design to ensure consistency. Now the Unicode consortium can't introduce a ""pouting face"" emoji anymore, since they technically already did!There are quite a few of those cases. Apparently it is mostly Apple messing up the specified emotion and the others copying the error."	cubefox	9.811644	-6.26953125	comment	3.0	10.0	1689436003	-13.958869
36741535	It’s hard to generalize on these poi	It’s hard to generalize on these points. In a situation where the throughput was inverted but the proportional system usage was the same, you would instead say “you can still vertically scale by adding more disks”, rather than saying adding bigger cpu. It’s not meaningful in isolation.It may be reasonable to suggest that for a new code base that is cpu bound there’s a good chance there is low hanging fruit for cpu optimizations that may further increase the throughput gap. It’s also the case however that the prior engines tuning starting life on much older computer architectures, drastically different proportional syscall costs and so on, it very often means that there’s low hanging fruit in configuration to improve baseline benchmarks such as these. High io time suggests poor caching whic	raggi	9.812243	-5.436382	comment	3.0	10.0	1689460314	7.955923
36751983	Where can one learn more about micro	"Where can one learn more about microcode, how it's implemented in silicon? As I understand it most machine code is actually ""VM bytecode"", and the ""real"" cpu is the microcode processor?"	bruce343434	9.614318	-5.4291663	comment	3.0	13.0	1689545958	7.6885686
36752156	I'm the same with LDA immediate = A9	I'm the same with LDA immediate = A9 in 6502 machine code, from my C64 days. It's disturbing how strongly burned-in those neurons are ...	gnat	9.874776	-5.6926284	comment	3.0	14.0	1689547376	-7.6498523
36755206	One of the reasons it's not so famou	One of the reasons it's not so famous is that it's had various historical struggles, including being stuck at 32-bit for a long time IIRC (I'm hazy on the details and corrections welcome).  I love it though.	spindle	9.876724	-5.341668	comment	3.0	15.0	1689579350	8.368225
36761851	I actually did really like the point	"I actually did really like the point; but I would be very interested in hearing a rebuttal or counterargument from Red Hat.Linus' ""security problems are just bugs"" approach has been worrisome."	gjsman-1000	9.376386	-5.8061	comment	3.0	14.0	1689617430	-2.200996
36782510	Holy shit, that's some mad retro dev	"Holy shit, that's some mad retro dev.Now if we can just get a clone of Borland C++/TASM/Profiler/Debugger on 6502. >:-)I spoke too soon, an HNer probably wrote it already in Rust.Edit: Wikipedia just made the connection in my mind that many 1978-1990-era consumer computing and gaming things  were all ""6800 lite"".- Acorn Atom, Electron- Apple I, II, IIe- Atari 2600, 5200, 7800, 800, Lynx- Baby! 1- BBC Master, Micro- Commodore PET, VIC-20, 64 (C-64), 128- Nintendo Entertainment System (NES) / Family Computer (Famicom) (JP)- Ohio Scientific Challenger 4P- Orao- Oric-1- Oric Atmos- TurboGrafx-16 ! :D- Bender's brain ;)Btw, here's a 100 MHz 65C02 compatible. https://hackaday.com/2021/10/15/heres-a-100-mhz-pin-compatib..."	1letterunixname	9.529514	-5.2672534	comment	3.0	13.0	1689745387	-7.4868197
36784298	It has been updated frequently in th	It has been updated frequently in the past: https://www.freshports.org/x11/nvidia-driver(scroll down for commit history)edit: Has Nvidia been building a FreeBSD driver for the past 20 years, or did they initially port a *nix driver from a different OS to FreeBSD?	hs86	9.750324	-5.5635715	comment	3.0	11.0	1689762987	10.525794
36798837	Not that having a ton of E-cores isn	Not that having a ton of E-cores isn't cool but is there the memory bandwidth to keep all of the P- and E-cores fed and if there isn't, then what's the point?  There are probably two memory channels like all of Intel's past consumer products and, IIRC, DDR5 crams two channels of half width into each physical channel but I haven't seen an explanation of whether that's really the equivalent of 4 DDR4 memory channels.	ThrowawayR2	9.586699	-5.1925864	comment	3.0	17.0	1689850182	7.959806
36799155	I am glad to see Intel still pushing	I am glad to see Intel still pushing faster single-threaded performance. Many (most?) important workloads are not meaningfully improved by adding cores.	jl6	9.503817	-5.2914295	comment	3.0	17.0	1689853406	7.889513
36809483	Except it's not instant anymore *shr	Except it's not instant anymore *shrug_emoji*	justsomehnguy	9.792629	-6.268908	comment	3.0	14.0	1689908023	9.308175
36823800	Linus tech tips did an interesting v	Linus tech tips did an interesting video on this a while back.https://www.youtube.com/watch?v=hKqVvXTanzIbasically, its mostly bull.	malikNF	9.34627	-5.823941	comment	3.0	15.0	1690006774	4.1766095
36836653	It's interesting that the project of	It's interesting that the project officially supports riscv64 but other architectures in a similar ecosystem niche, but vastly larger installed base, like SH4, have been unofficial ports for decades. Perhaps this is a good comparative example of how to effectively engage the community, or fail to.	jeffbee	9.41919	-5.664917	comment	3.0	14.0	1690128520	-10.559842
36842014	I don't fully understand riscv, but 	I don't fully understand riscv, but shouldn't this be something like `RV64GC`?Are they building for the base riscv with no isa extensions? This might be addressed somewhere in the debian docs but I didn't see it.	LatticeAnimal	9.454215	-5.7100306	comment	3.0	30.0	1690162480	-10.532447
36842810	> Check for feature presenceThat is 	> Check for feature presenceThat is the hard part. On Intel you can use CPUID, but it is ARM policy to not expose such instructions. You can read /proc/cpuinfo, but that is Linux-specific.Edit: there is a reason for ARM policy: CPUID is a well known virtualization hazard. In fact, KVM immediately traps if you execute CPUID on guest. ARM made a good decision here. Still, it means things can't work exactly like it worked on Intel.	sanxiyn	9.671237	-5.443193	comment	3.0	11.0	1690169462	7.928835
36843434	RISC V is not extension free, and a 	RISC V is not extension free, and a CPU is meaningless without a, most likely, proprietary board.	pjmlp	9.393696	-5.6545777	comment	3.0	27.0	1690176542	-10.556146
36845438	If there is a downfall of RISCV, it'	If there is a downfall of RISCV, it's going to be the myriad of sub-architectures and their weird naming schemes, with an added layer of marketing drones muddying up the waters even further.This is going to confuse the hell out of the potential customer base and it would be a crying shame, wasting a golden opportunity to get out of the oxygen-choking clutches of proprietary ISA vendors (who at this point are purely rent-seeking and add exactly zero actual economic value to the ecosystem).	ur-whale	9.370713	-5.6630936	comment	3.0	10.0	1690193699	-10.5026045
36850788	You are likely frequently running un	You are likely frequently running untrusted workloads. As javascript in a browser. I don't know about this one, but at least meltdown was fully exploitable from js.But yes, you are fine, 5950x is Zen3.	Tuna-Fish	9.335757	-5.1918187	comment	3.0	12.0	1690217034	7.820521
36850914	AMD have released an microcode updat	AMD have released an microcode update for affected processors. Your BIOS or Operating System vendor may already have an update available that includes it.I don’t really understand how CPU microcode updates work. If I’m keeping Ubuntu up to date, will this just happen automatically?	jrmg	9.57975	-5.3659296	comment	3.0	19.0	1690217524	7.759863
36877305	Is an illegal opcode something that 	Is an illegal opcode something that was intentionally added to the instruction set but was disabled by the manufacturer?Or is it a side effect of calling an undefined operation?	monkpit	9.859309	-5.680494	comment	3.0	11.0	1690378003	-7.430071
36878371	> By the time they adopted x86-64—re	> By the time they adopted x86-64—reluctantly or otherwise—Alpha was neither performance nor economically competitive.AMD's first AMD64 processor launched April 2003, Intel's first launched June 2004. Compaq had sold the Alpha IP to Intel in 2001. Yes, there were new Alpha models released in 2003 and 2004, but I don't think there was heart in it; in 1999, Compaq and Microsoft canceled Windows 2000 for Alpha during the release candidate phase.In short, it shouldn't be surprising that a 2004 Intel processor was faster and cheaper than a high performance system line that hadn't had much investment for five years.	toast0	9.508038	-5.2909493	comment	3.0	11.0	1690381967	-7.9016695
36877953	Missing: how unbelievably bad Ultrix	Missing: how unbelievably bad Ultrix was.I admined a bunch of alpha systems and oh boy did two things stand out. The first was that ultrix was a just bad. Bad, bad, bad. Terrible performance, laggy, just everything bad about vendor Unix of the era.  Windows NT on the same boxes flew by comparison.The other thing that stood out was how unbelievably bad first generation alpha text performance was. This is mentioned in that page when someone notes the lack of instructions to deal with 8/16 but quantities. But the lack of byte operations was deleterious: it meant things like grep were just dog slow next to literally anything else.	foobiekr	9.609778	-5.331331	comment	3.0	11.0	1690380394	-7.9900427
24452522	Totally off topic, but I've never se	Totally off topic, but I've never seen an emoji on HN before - maybe the restrictions on Unicode characters have been lifted?Edit: weirdly it seems to just be that specific emoji, others don't work	BillinghamJ	9.819626	-6.2633853	comment	3.0	10.0	1599919660	13.016244
24455553	Unfortunately, you are correct. This	Unfortunately, you are correct. This is what Nvidia was looking for since out of the big 3 US semiconductor manufacturers, it doesn't have its own IP on CPUs. Now it will soon be able to control ARM to its advantage against the competition. This will indeed push the urgency for RISC-V to be worth looking at in the next few years to be used by hardware vendors soon. But it will be a long wait.As for the UK now realizing SoftBank's expensive 'pass the parcel game' with ARM since 2016, I'd say you only appreciate something until it is gone. [0][1] In terms of technology, the UK simply didn't know what they had.[0] https://www.bbc.com/news/technology-54122692[1] https://news.ycombinator.com/item?id=24362846	rvz	9.308828	-5.539805	comment	3.0	60.0	1599943906	-10.542987
24459041	I agree with what you said, but ther	I agree with what you said, but there is a reason for wanting to converge on ARM.There exists no good alternative.ARMv8.2 or newer is a very well designed ISA, while RISC-V is a very bad ISA and I would hate to be forced to use it.OpenPOWER is a far better ISA than RISC-V, but unfortunately most developers do not have any experience with POWER and they have the wrong belief that POWER is some antique ISA while RISC-V must be some modern fashionable ISA. Therefore even if OpenPOWER is much better, it is less likely than RISC-V to be used as a replacement for ARM.I and probably thousands of other engineers could design a much better ISA than RISC-V in a week of work, but no one of the creators of those thousands of new ISA variants would be able to convince all the other people to choose his	adrian_b	9.436654	-5.604728	comment	3.0	18.0	1599981332	-10.511993
24462551	Since the bitstream maps directly to	Since the bitstream maps directly to the connections, and wrong connections can create short circuits, I wonder how often a corrupted bitstream actually destroys a chip?	myself248	9.795256	-5.5883183	comment	3.0	10.0	1600018961	8.247523
24462686	Would it be safe to say that modern 	Would it be safe to say that modern FPGA, although larger, are not more complex, in terms of the bit stream that programs them?In other words, that a modern chip's bit stream is not more complex, only longer?	angel_j	9.095236	-5.366647	comment	3.0	13.0	1600020273	8.347318
24464882	And there you have it. Perhaps the g	And there you have it. Perhaps the greatest thing to happen to RISC-V since the invention of the FPGA :-).I never liked Softbank owning it, but hey someone has to.Regarding the federal investment in FOSS thread that was here perhaps CPU architecture would be a good candidate.	ChuckMcM	9.3710785	-5.586137	comment	3.0	76.0	1600040407	-10.566781
24464961	This sort of stuff really isn’t goin	This sort of stuff really isn’t going to produce long term benefits for humanity is it.Does anyone know if or how Apple will be affected by this? What are the licensing agreements on the ISA?	andy_ppp	9.591802	-5.2506685	comment	3.0	10.0	1600041096	-7.597497
24465140	I would love OpenPOWER to succeed. I	I would love OpenPOWER to succeed. I just don't see the 48 pin QFP version that costs < $1 and powers billions of gizmos. For me the ARM ecosystem's biggest win is that it scales from really small (M0/M0+) to really usefully big (A78) and has many points between those two architectures.I don't see OpenPOWER going there, but I can easily see RISC-V going there. So, for the moment, that is the horse I'm betting on.	ChuckMcM	9.446894	-5.370489	comment	3.0	21.0	1600042344	-10.620941
24465105	The next Apple machine I am going to	The next Apple machine I am going to buy will be using RISC-V cores.	Koshkin	9.414242	-5.593937	comment	3.0	18.0	1600042131	-10.528791
24465889	"""linus went on a hyperbolic rant"" is"	"""linus went on a hyperbolic rant"" isn't sufficient evidence for anything.linus is a hyperbolic jerk (as he admitted himself for a few months before resuming his hyperbolic ways) who is increasingly out of touch with anything outside the direct sphere of his projects.  Like his misguided and completely unnecessary rants about ZFS or AVX.if there are technical merits to discuss you can post those instead of just appealing to linus' hyperbole.(I won't even say ""appeal to authority"" because that's not what you're appealing to.  You're literally appealing to his middle finger.)"	paulmd	9.283764	-5.888398	comment	3.0	16.0	1600048021	4.2976727
24466455	IMO VLIW is an absurdly bad choice f	IMO VLIW is an absurdly bad choice for a general purpose processor. It requires baking in a huge amount of low level micro-architectural details into the compiler / generated code. Which obviously leads to problems with choosing what hardware generation to optimize for / not being able to generate good code for future architectures.And the compiler doesn't even come close to having as much information as the CPU has. Which basically means that most of the VLIW stuff just ends up needing to be broken up inside the CPU for good performance.	anarazel	9.614369	-5.6415567	comment	3.0	29.0	1600053959	8.122071
24468618	RISC-V is dominated by American comp	"RISC-V is dominated by American companies. They could be a part of sanctions as well.I think the Chinese will continue with ARM short term and then create a Chinese-dominated alternative.From an operating systems point of view I would go for an intermediate language (similar to .NET or Java bytecode) that I also could do some on-the-fly verification of and only have very little compiled for the actual cpu (at least beyond dedicated embedded systems).Being forced to redo the full stack from processors to end-user OS and cloud services gives a possibility to let go of a lot legacy and pursue some ideas that have been ""cutting-edge research"" in CS for years."	throwaway4good	9.33767	-5.6673317	comment	3.0	39.0	1600079602	-10.594586
24467610	This is a big question but - where w	This is a big question but - where would you recommend one to start to feel the “magic” of hacking on a fpga for problem solving?	dfischer	9.066884	-5.3747134	comment	3.0	10.0	1600067232	8.378908
24469396	Most emojis are strongly discouraged	"Most emojis are strongly discouraged on HN, whether ASCII or Unicode.  For some reason,  ""¯\_(ツ)_/¯"" seems to be tolerated in comments as an exception.   Is this a good thing?  Should it be banned?  Or does no one else care?"	nkurz	9.789418	-6.280016	poll	3.0	11.0	1600087378	13.023338
24473682	VIA doesn't have a license for the A	VIA doesn't have a license for the AMD64 instruction set, however.  Intel and AMD did a cross-licensing deal so they have a co-equal position.	dralley	9.44414	-5.2799754	comment	3.0	16.0	1600109519	7.8013153
24477441	I've always wondered whether the ori	I've always wondered whether the orientation of the memory chips in your computer made a difference for cosmic ray errors.  That is to say, if their face is to the sky vs. their edge, will it affect the error rate?	13of40	9.659739	-5.520517	comment	3.0	11.0	1600138226	-7.9488244
24479860	RISC architecture is gonna change ev	RISC architecture is gonna change everything!	Foxboron	9.378479	-5.683841	comment	3.0	19.0	1600168003	-10.590229
24481821	Thanks.  I've been wondering if I sh	Thanks.  I've been wondering if I should invest the time to learn magit. It looks compelling, but deep and complicated.	cmrdporcupine	8.810191	-6.419438	comment	3.0	11.0	1600181410	-11.440009
24506578	Been meaning to try Forge, thanks fo	Been meaning to try Forge, thanks for the reminder. Honestly, Magit alone is enough reason to use Emacs. Projectile is a close second for me.	chungus	8.875198	-6.41473	comment	3.0	11.0	1600359775	-11.376439
24518785	One trick I used a lot with the Z80 	One trick I used a lot with the Z80 is the conditional return instructions.  Instead of doing a jump, structure your functions so you could return early on one of the condition flags.  The jump instructions were 3 bytes, the return instructions were only 1.	mark-r	9.687684	-5.420077	comment	3.0	12.0	1600446455	7.1532364
24524226	> The FP32 doubling, is one of the m	> The FP32 doubling, is one of the most important bits here. But fortunately for programmers, this doesn't really change how you do your code.Early benchmarks are showing games under-performing quite a bit in the worst cases. The crux of the issue is that it's not /exactly/ a no-compromise doubling of FP32. Each data path per SM can either do 2xFP32 or 1xINT32/1xFP32 per clock cycle. So if your game or application has any significant INT32 operations scheduled, all of a sudden you're back to the number of FP32 cores you had last generation, though you get the benefit of parallel INT32 execution.It's a pretty cool architecture overall though.	jagger27	9.450651	-5.2501554	comment	3.0	12.0	1600481214	7.949446
24528743	Mill has nothing to show for it.Mill	Mill has nothing to show for it.Mill has no answer for the unpredictable cache misses. Their belt idea is cute and interesting but inconsequential and irrelevant.The main challenge of the modern microprocessors is not in how many ALUs you run in parallel nor how you model and implement your register file, but how to keep the ALUs fed with data from the memory hierarchy. VLIW doesn't help you with that at all, which is why it is largely irrelevant and a tiny niche.For applications like GPU, you address the feeding problem with multiple threads through SMT/SIMT and multiple cores, and SIMD.For applications where a single thread performance is important, you use OOO and/or speculative execution to maximize the feeding of the data.If you only care about running a particular loop and you only n	drivebycomment	9.717867	-5.7224703	comment	3.0	16.0	1600534364	8.1177025
24530910	The rumors were that 5mn was going t	The rumors were that 5mn was going to take a lot of work and so AMD delayed until their following CPU architecture  iteration Zen4. Now it seems more likely that they were outbid by Apple which is why Zen3 is stuck on the older process. The risk for AMD is if they can get 5mn or equivalent from another fab for Zen4	teruakohatu	9.263819	-5.2099023	comment	3.0	14.0	1600557220	7.8547497
24564615	Can anyone explain to me the benefit	Can anyone explain to me the benefits of sve over the old stuff?Edit: intel had some issues with wider simd, is SVE affected by the same issues?	panpanna	9.704897	-5.7263956	comment	3.0	13.0	1600850910	8.004465
24576676	Modern superscalar processors have m	Modern superscalar processors have more than one execution unit. The latest Intel microarchitecture has 10 execution ports, which means it can theoretically execute 10 μ-ops per cycle. With a 200+ entry reorder buffer, the processor is trying hard to cram those execution units full every cycle. How successful it is depends on dynamic data dependencies and fetch/issue bandwidth. At 3ghz, to reach 0.1ns latency (on average), it only needs to achieve 3 instructions per clock.	titzer	9.690374	-5.4526024	comment	3.0	13.0	1600937853	-8.085222
24578591	Yet, Intel still produces new CPU's 	Yet, Intel still produces new CPU's without AVX/AVX2. 10th-gen.	SomeoneFromCA	9.432788	-5.394717	comment	3.0	15.0	1600955560	7.9264
24590323	I agree. The only processors that se	I agree. The only processors that seem to support it are designed for servers (eg Xeon). Other processors say they're compatible but don't actually use the ECC part of the memory.I built a ML workstation for my work team and was disappointed that my options were: expensive, low clock speed server CPU + ECC, or inexpensive, very fast, desktop CPU without ECC. Even if I were willing to pay more money, it was really hard to get the same performance if I needed ECC.	KMnO4	9.440531	-5.4920073	comment	3.0	11.0	1601045108	8.216346
24591674	Well, it uses 12.5% of the bytes for	"Well, it uses 12.5% of the bytes for error correction instead of data storage, which is not very much overhead.  Your 128GB becomes 112GB, which is still pretty good.I also disagree that the benefits are meager.  I have suffered from several computers with flaky memory (fine when you build the computer, flaky several years later; then you do an overnight memory test and find that indeed the memory has gone bad), and a strong software signal that ""hey your memory is bad"" is very actionable.  You also have to think about it from a programming standpoint -- what happens if this variable isn't what I set it to?  What if ""for 1..10"" is actually ""for 1..2147483658""?  Do you have time to debug that?  How much data do you lose when you persist that to disk?  To me it is insane to not get this near"	jrockway	9.583641	-5.508393	comment	3.0	23.0	1601052371	8.244522
24592919	Is that tool the same as windows mem	Is that tool the same as windows memtest? My brand new pc randomly blue screens twice a month with 'corrupted structure' or something like that, i suspect of ram but windows tool said no errors found after a 3 hour test.Cant even put it on warranty because it cant be reproduced easily. Cant afford to just start replacing components. 5000€ lemon.	popotamonga	9.857458	-5.2453847	comment	3.0	13.0	1601059839	8.071866
24602908	That's actually the wrong way round.	That's actually the wrong way round.For advanced designs the instruction set really doesn't matter that much, the bulk of the silicon in a modern advanced CPU is spent doing things like caching, branch prediction, instruction scheduling, buffering loads and stores that may be unwound due to speculation, address translation, etc. These things are completely instruction set agnostic. To see how little it matters look how well x86 processors work despite the x86 instruction set being a mess (even figuring out how long an instruction is in bytes is a nightmare) or how well advanced ARMv7 processors despite that instruction set being a mess (a free shift on every immediate, urgh).Now low-power is a completely different game. The bulk of the CPU is spent doing really quite basic stuff, fetching 	jleahy	9.556058	-5.3665123	comment	3.0	13.0	1601162353	-7.7111344
24603156	Very frustrating reading the comment	"Very frustrating reading the comments from the Aldec marketing head, and it's really disappointing to see such comments coming from a company which has previously engaged so much with the open-source community (they've actually put some effort into proper support for co-simulation using the Python-based cocotb).For example:> Q: What’s still missing out of the design flow? Do all the tools work with RISC-V?
> A: The main thing is the lack of UVM support.This answer just seems like a category error: UVM is (for all intents and purposes) a library for SystemVerilog; an ISA does not ""have UVM support"", they just aren't even closely related. Perhaps he means that (open-source) implementations of RISC-V cores haven't been verified using UVM, or that open-source functional-verification tooling ty"	denotational	9.433348	-5.6597857	comment	3.0	12.0	1601165255	-10.510319
24604035	The base ISA is very plain and RISCy	The base ISA is very plain and RISCy. But I'd encourage you to go read the Bitmanip extension and find an opcode in there that doesn't have at least one obscure alternate use! =)As for addressing modes, yeah I do wish we had a little bit more as a software person (but not as a hobby/toy cpu writer!). The current stuff can encode a surprising number of simple loops efficiently if you do it right, but of course if you come from x86 you'll have to do more with less...	tux3	9.870122	-5.9308863	comment	3.0	14.0	1601177658	-7.610582
24635879	Aircraft Instrumentation, Bitchin’ B	Aircraft Instrumentation, Bitchin’ Betty and an 80C86 CPU	parsecs	9.551463	-5.2623057	story	3.0	46.0	1601442649	-7.5055966
24669642	Aside: One of the worst trends we ha	"Aside: One of the worst trends we have going is emojis in articles, commit messages, readmes and PRs. Emojis are great for chat when you want to express emotions. When it comes to reading text anywhere else:- It distracts from years of training we have in recognizing characters of a particular language and word shapes- It takes an extra second to process the symbol since we're not used to it. For example, ""Notice a _bug_emoji_ ? Send us an email."" [1]- It draws eyes to the Emoji's first because they're foreign symbols and they're painted in color.- Notion is one of those products that encourages this. I really don't see the benefit. Perhaps in labels it is ok - since its a symbol that's used to categorize things, and it is not prose.[1] https://projects.fivethirtyeight.com/2020-election-fo"	systemvoltage	9.796783	-6.2619367	comment	3.0	13.0	1601701045	-13.964884
24682715	Another detail I never see covered i	Another detail I never see covered is the implementation of variable length instruction decoders. Most every book seems to assume a classic RISC design with 32-bit wide instructions, single-issue and non-microcoded. Are there any advanced undergraduate or graduate level books that cover details like this?	ChickeNES	9.5188265	-5.7520156	comment	3.0	11.0	1601849998	7.775454
24682899	>I would [..] host untrusted custome	>I would [..] host untrusted customers in [...] Xen HVM any day.Intel doesn't recommend running untrusted code even in a separate VM, according to their official explanation of Spectre/Meltdown. At least we can do it on RPi now.	NullPrefix	9.848829	-5.4229374	comment	3.0	10.0	1601852013	7.947088
24683259	> they have yearly CPU instruction l	"> they have yearly CPU instruction limitsThis sounded too ridiculous to me, so I started digging. Lo and behold, [1]. Appendix 8, sections 2 and 3.The entire thing is a fun read, with pearls such as:    in the case of an Intel CPU with either the Sandybridge or Ivybridge
    chipset where the competitor chooses not to exploit the AVX feature; the
    competitor must explicitly declare and be able to demonstrate that they are
    not using the AVX feature in the CFD solve process. If the non‐usage of the
    AVX feature is proven to the auditor, the Intel Sandybridge and Ivybridge
    chipset cores can be rated as 4 FLOP/cycle/core rather than as 8
    FLOP/cycle/core.

[1]: https://www.fia.com/sites/default/files/2019_sporting_regula..."	MHordecki	9.460412	-5.485064	comment	3.0	14.0	1601856111	8.005816
24698203	Be more excited that ECC is now part	Be more excited that ECC is now part of the standard, and without a speed compromise.	zionic	9.454464	-5.5313845	comment	3.0	13.0	1601995700	8.322925
24697372	Will we get performance increases, a	Will we get performance increases, and how big will they be in the average case, not for some specific codes with low cache hit ratio on large datasets, and attributed solely to bandwidth increases and not architecture IPC improvements?	nullifidian	9.66895	-5.228823	comment	3.0	15.0	1601990446	7.905732
24699728	This is a bad comparison. DRAM margi	This is a bad comparison. DRAM margins are razor thin and unlike transistors, DRAM has not gotten much smaller, which is the main cost savings gained from process improvements.Instead, server and accelerator vendors want ever faster and higher performance DRAM, and so these performance gains trickle down to consumers, but nothing is driving price down.People on here literally think Moore's is a natural law and if computer hardware isn't getting 15% cheaper every year there must be funny business involved...	verall	9.688801	-5.261885	comment	3.0	11.0	1602002500	7.9867167
24720773	ECC support is iffy at the consumer 	"ECC support is iffy at the consumer brands. Its a ""we won't disable it, but we won't guarantee that it works"" sort of deal.If you want verified ECC support, you need to buy the workstation chips and motherboards: Threadripper Pro or EPYCs."	dragontamer	9.424499	-5.4874973	comment	3.0	19.0	1602174840	8.269361
24720828	It's not that simple for computing. 	It's not that simple for computing. I heard that in Data Science Intel is still preferred because of better AVX support.There are also things like Intel MKL. A lot of software can use it when compiled on a user machine.	f311a	9.471442	-5.5016403	comment	3.0	25.0	1602175107	8.066425
24721032	> is still preferred because of bett	> is still preferred because of better AVX supportAVX1 and AVX2 performance is on par.For instance, vmulpd AVX1 instruction is faster on AMD, 3 versus 4 cycles. vpaddd AVX2 instruction is same at 1 cycle latency. vfmadd132pd FMA instruction is slightly faster on Intel, 4 versus 5 cycles. Throughput is the same across these two. I was looking at AMD Zen2 versus Intel Ice Lake.Some Intel chips have AVX512. Still, many practical applications don’t need that amount of SIMD wideness, and these who do are often a good fit for GPGPUs.> There are also things like Intel MKLThere’re vendor-agnostic equivalents like Eigen.	Const-me	9.364017	-5.412329	comment	3.0	13.0	1602175975	8.0665
24721050	But this is an architectural tweak o	But this is an architectural tweak on the same node. Zen2 was 7nm TSMC, while Zen3 is 7+nm TSMC.TSMC must have optimized the heck out of their transistors to deliver such a large benefit. Or the AMD Zen 3 architecture really found some low-hanging fruit or something to grossly improve performance.	dragontamer	9.236844	-5.1923633	comment	3.0	11.0	1602176059	7.853804
24721343	Regular EPYC CPUs have too high a TD	Regular EPYC CPUs have too high a TDP for smaller server installations, such as so-called edge servers. EPYC Embedded is still stuck on Zen 1. Intel hasn't upgraded their comparable line of mid-range server CPUs (e.g. Xeon D line), either, but AMD won't win on performance alone. Intel has a huge SKU lineup, much more volume, and a much richer vendor and platform ecosystem. If the vendor demand isn't there to push AMD on EPYC Embedded, Ryzen Emedded, and other market segments, AMD should build demand, otherwise they'll just recapitulate their rise & fall during the 2000s.	wahern	9.29896	-5.210889	comment	3.0	20.0	1602177299	7.932857
24723382	Can gaming workloads simulate the 10	Can gaming workloads simulate the 100% of all cores that a parallel large scale native C++ compilation will generate?	PaulDavisThe1st	9.646428	-5.4178624	comment	3.0	21.0	1602188030	7.955643
24724017	Games are typically written in C++, 	Games are typically written in C++, so that's a yes. As for the threading, older (2yr or so back) games tend to assume 4 cores and don't scale past that (thanks, Intel!). More recent games tend to aim at arbitrary horizontal scaling.You do still get major titles that are completely single-threaded.	zamalek	9.893976	-5.650692	comment	3.0	18.0	1602191651	8.2644415
24724381	> The cheaper models with only one A	> The cheaper models with only one AVX-512 FMA unit have a lower throughput, which will be exceeded by Zen 3, even at the same clock frequency.I think there are relatively few with only one FMA (and there's no way of interrogating them at runtime, sigh) but, yes, if you know you have one, you use AVX2 for GEMM kernels, as a specific example.For general computational workloads, you're likely better off with more AVX2 cores and high memory bandwidth, even without whatever improvements there are in Zen 3.	gnufx	9.257468	-5.2159204	comment	3.0	14.0	1602194423	7.9309225
24724495	AVX512 is garbage.  It incurs a mass	AVX512 is garbage.  It incurs a massive performance hit from both frequency and mode-switching penalties.  Apart from a few niche HPC and ML applications which you'll never encounter, AVX512's most compelling use cases are to drive Intel's shady market fragmentation, and to create more bullshit FP benchmarks that Intel can claim to win.https://www.extremetech.com/computing/312673-linus-torvalds-...	nate_meurer	9.433727	-5.575703	comment	3.0	11.0	1602195187	8.100403
24727435	I have been looking forward to this 	I have been looking forward to this happening for a long time. A quick search on my past comment shows that was 2016. And I remember checking Xilinx market cap last year and it was ~$30+ B, while AMD was only ~$50 B. I was thinking the chance of that ever happening is going to be very slim. ( I was an AMD Shareholder, but I never thought it would be $100B mark cap company, sold it all last year)  Now AMD is at $100B+, while Xilinx is at Sub $30B. The market is crazy.But things has changed since 2016 - 2018. I used to see the move to FPGA as going offensive attack in the server space, now both AMD, and Intel are doing what ever they can to fence off ARM.	ksec	9.151326	-5.2145863	comment	3.0	11.0	1602225676	7.9555893
24728164	Totally agree.Being involved with FP	Totally agree.Being involved with FPGAs for 20+ years now, and Xilinx for the most part of it, I have witnessed the progressive decay of their software quality. The legacy Xilinx tools (Foundation) were far from perfect but at least useable -- and hackable to a degree if you needed to implement workarounds. Those were many times even suggested by Xilinx own employees that were easy to approach and responsive back in the days.Altera Quartus was always better in terms of project organization and user interface, including their hardware tools. Third party software such as Synplify (before Synopsys bought their maker Synplicity) were light-years ahead, especially on the synthesis introspection and support for design and RTL troubleshooting.People tend to justify the software quality and vendor	pjbk	9.098517	-5.37201	comment	3.0	13.0	1602235150	8.416921
24736954	> But obviously it's for original RI	"> But obviously it's for original RISC i.e. ARM.Not sure if you actually mean that, but to me it sounds like you're implying that ARM is the ""original RISC"".The first RISC processor was called RISC-I and came out of Berkeley research in 1981.Around the same time came out the MIPS cpu, from Standford university, by a group who shortly after founded a company that by 1985 commercialized the first RISC CPU, the R2000.ARM, SPARC and PA-RISC came out just about the same time.The ideas were brewing for some time, but I think it's safe to say historically that the name ""RISC"" was not invented by ARM and that the R in ARM references a pre-existing term that has been developed at Berkeley."	ithkuil	9.452109	-5.6306868	comment	3.0	11.0	1602309633	-10.491784
24741000	Yes, some of the ISA was still be st	Yes, some of the ISA was still be standardised so wasn't until the later chips that got ratified, so some nuances, though at hand none I can recall.  https://en.wikipedia.org/wiki/PowerPC_600#PowerPC_601  covers this aspect at least.Also does seem that 32bit support is on the way out, slowly but surely.Though 32bit will be around for a while in some flavour or another, much like IPv4, it just hangs in there working away.	Zenst	9.555996	-5.3614874	comment	3.0	17.0	1602355914	-7.70982
24746875	I thought the post was about how the	"I thought the post was about how the 32-bit space could be exhausted in minutes with common hardware in the year 2014. Which means that any problem I have which is in the 32-bit space is a candidate for brute force.Given the advances in computers over the past few years: exhausting the 64-bit (or 2x 32-bit) space is ""reasonable"" for the year 2020. At least, reasonable for people who are willing to wait a month (on one GPU), or willing to buy a cluster of GPUs."	dragontamer	9.750622	-5.4862165	comment	3.0	12.0	1602433437	7.972316
24749478	"Is it possible to ""read out"" whateve"	"Is it possible to ""read out"" whatever logic the FPGA was previously programmed with? If the speculation that it came from the Bing accelerator is correct, you might end up with some interesting code..."	moyix	9.167407	-5.316539	comment	3.0	11.0	1602453759	8.32011
38598968	This is reminiscent of the Mill CPU 	This is reminiscent of the Mill CPU which had temporal addressing and called the history a “belt”.the Mill was described in an excellent series of talks: https://m.youtube.com/watch?v=QGw-cy0ylCc	wood_spirit	9.5044565	-5.1957746	comment	3.0	21.0	1702286665	7.6042557
38619532	Remember that the 6502 and its relat	Remember that the 6502 and its related chipset was not designed to compete with the 8080 or 6800 for general computer applications, but rather with the Intel 4004 for cheap, low-parts-count embedded applications! Keeping that in mind, a lot of the 6502 design decisions make a lot more sense.That folks turned out complex, feature-complete operating systems several times on 6502 is as impressive as those things being done on e.g. the DEC PDP-8, IMO. Doubly so when you consider that the 6502 hackers were often just that, hackers and hobbyists without an industrial-grade budget.	systems_glitch	9.531196	-5.248151	comment	3.0	11.0	1702419764	-7.43695
38619432	Just because it came second, doesn't	Just because it came second, doesn't mean it's better.  It was cheaper, and you can see where they cut corners to be cheaper.  For me, if nothing else, the 16-bit stack and index registers in the 6800 make it hands down a better chip to program.  But the 6502  was cheaper, sure, and some people probably like to spend all day thinking about what stuff to cram into the first 256 bytes to be performant.	kjs3	9.528261	-5.2839923	comment	3.0	22.0	1702419314	-7.4646115
38620582	The # of clock cycles to access zero	The # of clock cycles to access zero page on 6502 is still higher than from the register set. I forget the exact amount, but it's certainly not another register, from a pure efficiency POV. If I recall it's at least one more cycle. Adds up quite a bit if you're doing things like shuffling in and out of the (single) accumulator.The TMS9900 took this further, and had no onboard registers (other than PC & status register). Everything was in RAM.That model only made sense until RAM became slower than the bus speed (late 80s).The zero page in the 6800 and 6502 not being relocatable also sucked. Something fixed in the 6809 and 65816 respectively.I suspect the lessons Sophie Wilson learned from the 6502 were... cycle efficiency and minimalism. The 6502 was super responsive to interrupts precisely	cmrdporcupine	9.560772	-5.3276625	comment	3.0	14.0	1702425141	-7.469708
38621658	"""Since the whole protocol is bit-ban"	"""Since the whole protocol is bit-banged, it is susceptible to delays caused by other higher priority task""Ermmm no. 
Not utilising both cores properly on the ESP32 is a common mistake which causes this (described) behaviour https://randomnerdtutorials.com/esp32-dual-core-arduino-ide/Ref. me, I wrote a Java Gameboy 2BPP encoder/decoder library and have done multicore ESP32 dev. https://github.com/KodeMunkie/gameboycameralib"	SillyUsername	9.810308	-5.4818625	comment	3.0	14.0	1702432282	8.048006
38625027	> Ermmm no.Removing the snide 'Well,	> Ermmm no.Removing the snide 'Well, akshually...' remark from your comment makes you come across like a much better person.> Not utilising both cores properly on the ESP32 is a common mistake which causes this (described) behaviour https://randomnerdtutorials.com/esp32-dual-core-arduino-ide/Doesn't it? :)	adamjc	9.7186775	-5.3567824	comment	3.0	11.0	1702461527	8.091519
38632292	> As it turns out, the end result - 	> As it turns out, the end result - the 6501/2 - was actually very competitive with the 6800. So whilst the original intention wasn't to compete with the 6800, in the end it did compete with it very successfully in some important markets.Another subtlety: the ecosystem.Obviously a cheaper cpu encourages usage in more places. Read: more users & more designers working with it.Over time, that means more tools (including better ones), more OSes to run on it, more application software, more code examples, more existing systems that can be used to kick-start a new design, more knowledge in the field to work around quirks, etc.Often that ecosystem weighs heavier than cpu features, price or performance. Yeah a 'nicer' cpu will drop in price. But by then it's late to the party.	RetroTechie	9.496443	-5.2138805	comment	3.0	11.0	1702493481	-7.512565
38634264	That would toss away any shot of bac	That would toss away any shot of backwards compatibility without a second processor or translation layer.I can’t see how that would be beneficial.	MBCook	9.818579	-5.240235	comment	3.0	12.0	1702502390	-6.1934276
38639697	On a related note, AMD's EPYC CPUs h	On a related note, AMD's EPYC CPUs have eFuses that enforce a vendor lock. This means you can't transfer an EPYC CPU from, say, a Dell server to a Lenovo server.https://www.servethehome.com/amd-psb-vendor-locks-epyc-cpus-...	scrlk	9.363269	-5.213683	comment	3.0	28.0	1702548530	7.993201
38639802	I hope it's ok to answer here instea	"I hope it's ok to answer here instead of on vcfed.org since I don't want to create yet another account...Sun workstations did not use the dual 68000 approach to handle VM. The problem with the 68000 was that it didn't save enough information on the stack when an exception occurred (e.g. a page fault), so a faulting instruction could not be recovered/re-executed in all cases.Sun solved this by using ""harmless"" instructions such as ""tst"" that did non have to be recovered in case of a page fault. The OS could then kick in, load the contents to memory and just skip the failed instruction. This required changes to the compiler, e.g. when creating a new stack frame that would have required to extend the stack size. For paging, this approach would cause significant overhead. However, the first ve"	johndoe0815	9.699572	-5.292315	comment	3.0	15.0	1702549560	-7.558236
38641271	>RV64GC>CWhat is the purpose of incl	>RV64GC>CWhat is the purpose of including the RISC-V Compressed 16-bit extension set in what is supposed to be a HPC chip? Most embedded/IoT RISC-V implementations include that for obvious reasons but why here?	0xDEF	9.470993	-5.6985884	comment	3.0	12.0	1702561739	-10.538377
38643868	I wish they'd capitalize on it by ma	I wish they'd capitalize on it by making ARM as well supported as x64 is, where any program, any OS, any line of code ever written will most likely run flawlessly. Meanwhile the average ARM computer struggles to support even a single version and distro of Linux. Like why is ARM such a fucking travesty when it comes to compatibility?	moffkalast	9.700963	-5.2817254	comment	3.0	23.0	1702573878	-7.7707853
38645028	Sourcegraph Cody is Generally Availa	Sourcegraph Cody is Generally Available (Free and $9/month)	obiefernandez	8.803678	-5.9902544	story	3.0	13.0	1702578305	-11.496715
38666680	If you see the same emojis as others	If you see the same emojis as others, this comment is secure: <HN doesn’t support emoji>	jonhohle	9.809473	-6.260502	comment	3.0	15.0	1702752416	13.006643
38666870	I don't get it. Can you explain me w	I don't get it. Can you explain me why it is, and what the emojis represent?Do you have the projection of some binary string in the unicode emoji space? (then you'd need to chunk it and possibly use many emojis)	csdvrx	9.829341	-6.2653227	comment	3.0	14.0	1702753857	-13.965479
38676884	The most prominent example of VLIW p	The most prominent example of VLIW processors was the Itanic, er, Itanium.It, er, didn't work out well.Hence Itanic.Their premise was that the compiler could figure out dependencies sufficiently statically so that they could put multiple sequential and some divergent execution paths in the same instruction.  It turned out the compilers couldn't actually do this, so processors figure out dependencies and parallelizable instructions dynamically from a sequential instruction stream.Which is a lot of work, a lot of chip resources and a lot of energy.  And only works up to a point, after which you hit diminishing returns.  Which is where we appear to be these days.	mpweiher	9.614875	-5.6582594	comment	3.0	11.0	1702850342	8.265279
38702995	Ran the numbers for you.On-Demand: $	"Ran the numbers for you.On-Demand: $3.43/hr ($2503.90 monthly)Reserved: $2.27/hr ($1657.10 monthly)M3 Max 16"" (all upgrades; to be generous): $7199.00means about 3months on-demand or 4.5~ months reserved.Not nearly as bad as I was expecting to be perfectly honest with you.I did similar calculations recently and it ended up being 3 months for equivalent server grade hardware (IE; 256GiB ECC ram, 64 physical threads; 8TiB NVMe) -- so I bought the hardware and since then have saved more than 3x the cost.It seems not to be the case with Graviton instances I guess. :D"	dijit	9.504163	-5.1874576	comment	3.0	10.0	1703026063	-8.312414
38717426	"Ask HN: Name for the ""Law"" that bigg"	"Ask HN: Name for the ""Law"" that bigger PRs have fewer bugs?"	PiersonMarks	8.786646	-6.225537	story	3.0	1.0	1703138106	4.0585613
38721092	Oh no, this is sad news. I wish Isov	Oh no, this is sad news. I wish Isovalent had not given in to avarice, for I cannot ascribe this to anything else. They had really good engineers, with the best inhouse eBPF expertise of any company. This news is worse than CoreOS being gobbled up by RedHat.	jimmyed	9.865518	-5.7486587	comment	3.0	10.0	1703170272	-9.324234
38726843	That's not where the money is. They 	That's not where the money is. They don't care about hobbyists, startups or schools. In FPGA world is about big contracts, big design wins. Networking, defense, space, industrial control etc. It's why the design tools are so bad too: there's no reason for the FPGA vendors to invest in those tools when the design wins come from size and performance. In fact, giving customers an escape hatch from vendor lock in would be a Very Bad Idea.	chrsw	9.085786	-5.357817	comment	3.0	12.0	1703192278	8.424859
38733365	The ARM ecosystem is depressing.Outs	"The ARM ecosystem is depressing.Outside some couple of well maintained boards (you know which one), the rest is just kept together ""working* by using some obscure patches around some specific tags or git repositories, that meanwhile get deleted or archived. And if you want also GPU acceleration, then you might be out of luck in many, many casesI wish the world would keep staying on x86 as much as possible, since it's battle-tested and has broader support than ARM."	madduci	9.650685	-5.2204123	comment	3.0	15.0	1703246707	-7.7410903
38736552	Does this still use a custom hardwar	Does this still use a custom hardware description language?The curriculum here is very solid - my only critique is that it uses a custom HDL instead of Verilog, VHDL, or SystemVerilog.It wouldn’t have been a huge stretch to do that, and make the skills taught that much more real as a result. Without the practical aspect of exposure to real HDLs, it seems more like a toy than a tool.	cushychicken	9.132363	-5.4979334	comment	3.0	10.0	1703266792	8.5749855
38739035	I was a 6502 guy back in the 80s, be	I was a 6502 guy back in the 80s, before I went 68k, and never had a machine with the Z80, so have no nostalgia for it. But when I look on paper, the Z80 really does look like it stood the test of time better.How does the eZ80 extend out into 24 bits without having an awkward banking system like the '816? (EDIT: I see, it actually adds a 24-bit register mode.)The biggest problem I found with the 816 was that having no registers larger than 16-bits meant, well, there's no way to store a pointer in a register, or work with data larger than 64k. Well, that and the awful 8/16 mode switching. Oh, and the fact that the stack and direct page are stuck in the first 64k bank. Damn, I really wish Mensch had designed and built a 65xx with a proper 16bit (or higher) architecture instead of the meh tha	cmrdporcupine	9.561434	-5.253884	comment	3.0	11.0	1703281490	6.9730363
38742605	Linus Torvalds: I will not change Li	"Linus Torvalds: I will not change Linux to ""deep-throat Microsoft"" (2013)"	f1shy	9.429096	-5.8095803	story	3.0	11.0	1703320372	-8.195428
38765480	Which FPGA are they using?Edit: Ther	"Which FPGA are they using?Edit: There's a lot to like here, but a lot that is confusing.  An FPGA based version of PicoPV32 could be really secure.  Your attack vector would be the FPGA vendor doing something at the hardware level (hard to pull off), or the toolchain being compromised.But what FPGA it is matters, also what toolchain they are using to programme the FPGA (yosys is not mentioned ...).  The whole ""locked down"" FPGA bitstream sounds very fishy as well.PicoRV32 does fit into Lattice FPGAs and they are fully reverse-engineered and supported by yosys."	rwmj	9.110876	-5.3657827	comment	3.0	12.0	1703533452	8.394421
38768926	For a fun challenge, implement space	For a fun challenge, implement space invaders in Verilog (i.e. purely in hardware)	umvi	9.1167	-5.460181	comment	3.0	12.0	1703565045	8.59977
38774590	You just read the first error messag	"You just read the first error message, and find where it says ""at line #N"" to see where the problem is. You can ignore everything after, however many pages you get, which is usually just a list of the functions you might have been trying to call, and can be long if there were lots of possibilities.Linux Torvalds has not looked at C++ since the '90s. C++ is a wholly different language now. The experience coding in it now much more fun, and it is easy now to write code that works the first time it is run (as is also seen with Rust)."	angiosperm	9.480609	-5.969304	comment	3.0	11.0	1703616131	-8.21622
38787862	I see that one of the steps in explo	I see that one of the steps in exploit was to use GPU registers to bypass kernel memory protection. Does it mean that the vulnerability cannot be fixed by an update and existing devices will stay vulnerable?	codedokode	9.899267	-5.437325	comment	3.0	10.0	1703717592	7.9915447
38790345	So much misinformation in this threa	So much misinformation in this thread. It’s a Hamming ECC, as described here[1].[1] https://social.treehouse.systems/@marcan/111655847458820583	supriyo-biswas	9.514002	-5.536409	comment	3.0	10.0	1703741166	8.300829
38810381	Does Intel or anyone still sell 32-b	"Does Intel or anyone still sell 32-bit x86 chips for non-embedded use? A quick Google was inconclusive, although it seems that while Intel sells low-power x86 chips under the ""Pentium Silver"" brand, they all seem to be 64-bit now. So eventually more and more old x86 boxes will be decommissioned, and 32-bit x86 will be dead as a desktop platform, no?Which might mean people who want to run old proprietary 32-bit games/software are going to be annoyed, but that's not necessarily the distro/OS's problem; it could be argued that the user should install a 32-bit translation/emulation layer to run that stuff, ala DOSBox."	gary_0	9.75566	-5.2506285	comment	3.0	17.0	1703885186	-7.880179
38817723	I started in HPC about 2 years ago o	"I started in HPC about 2 years ago on a ~500 node cluster at a Fortune 100 company. I was really just looking for a job where I was doing Linux 100% of the time, and it's been fun so far.But it wasn't what I thought it would be. I guess I expected to be doing more performance oriented work, analyzing numbers and trying to get every last bit of performance out of the cluster. To be honest, they didn't even have any kind of monitoring running. I set some up, and it doesn't really get used. Once in a while we get questions from management about ""how busy is the cluster"", to justify budgets and that sort of thing.Most of my 'optimization' work ends up being things like making sure people aren't (usually unknowingly) requesting 384 CPUs when their script only uses 16, testing software to see wh"	bluedino	9.928241	-5.3184023	comment	3.0	15.0	1703962212	8.199559
38819484	"HPC admin here, generally serving ""l"	"HPC admin here, generally serving ""long tail of science"" researchers.In today's x86_64 hardware, there's no ""supercomputer memory subsystem"". It's just a glorified NUMA system, and the biggest problem is putting the memory close to your core, i.e. keeping data local in your NUMA node to reduce latencies.Your resource mapping is handled by your scheduler. It knows your hardware, hence it creates a cgroup which satisfies your needs and as optimized as possible, and stuffs your application into that cgroup and runs it.Currently king of high performance interconnects is Infiniband, and it accelerates MPI at the fabric level. You can send messages, broadcasts and reduce results like there's no tomorrow. Because when the message arrives you, it's already reduced. When you broadcast, you only sen"	bayindirh	9.646009	-5.357508	comment	3.0	10.0	1703972516	8.004131
38852687	But GPU drivers require a fairly big	"But GPU drivers require a fairly big team. We must have a GPU hardware programming ""standard"" first. And I would favor a risc-v kernel instead to avoid the dependency on a super complex syntax (rust) compiler and do gcc-dependency-like mistake all over again. For this reason, eating the bullet and moving on a modern worldwide standard ISA would actually be the real move forward. We have already linux and others tied to gcc extensions and very recent ISO tantrums (porting to not-inline assembly and back to c89/99 is carefully made not reasonable, not to mention assembly code paths tied to specific stack alignment features from the compiler). Namely there is a serious imbalance between the compiler complexity and what it is actually bringing on the table."	sylware	9.488234	-5.5958896	comment	3.0	49.0	1704279156	-7.631576
38853057	I don't think it's that unfair, but 	I don't think it's that unfair, but I don't want to get into a whole thing about it, people get really upset about criticisms of the Linux kernel in my experience and I'm not looking to start my morning off with that conversation.We can agree that C was definitely the language to be doing these things in and I don't blame Linus for choosing it.My point wasn't to shit on Linux for its decisions, it was to think about a hypothetical world where safety built in from the start.	insanitybit	9.63444	-5.87048	comment	3.0	13.0	1704282786	-7.618534
38854179	You are right in a legacy context wh	You are right in a legacy context where the mess of ISAs required an abstraction of the assembly language.But where you are wrong is, moving forward in a world with a modern worldwide standard ISA (RISC-V) is actually writing a kernel in assembly (without abusing any preprocessing).	sylware	9.563449	-5.6613607	comment	3.0	21.0	1704290770	-10.480068
38871841	> My guess: if the bitstream format 	> My guess: if the bitstream format was documented competitors would know how the device works and be able to prove their patents are being violated.This has been the persistent argument for many years from companies who say they can't release Open Source graphics drivers.> FPGA vendors will also justify inertia in that current FPGA users don’t seem to be deterred by the bad tools because of the economics of their business.Want hundreds as times as many FPGA users? Make it easy for an FPGA to be used for transparent acceleration, by making it easy for Open Source libraries to build and ship FPGA bitstreams that serve as accelerators for their data handling. Imagine if compression libraries, databases, and many other kinds of libraries could transparently take advantage of an FPGA if availa	JoshTriplett	9.095018	-5.362285	comment	3.0	23.0	1704400095	8.470696
38873014	The use cases you write about are mo	"The use cases you write about are mostly constrained by design, not software. Configuration of SRAM based FPGAs is rather slow because it requires a scan chain to program each logical element and shift config bits into, and doing it faster requires even more circuitry. You need to multiplex things onto the fabric in practice, you can't ""context switch"" AKA temporally multiplex very well, you have to spatially multiplex. But FPGAs are already area intensive; a k-LUT needs 2^k SRAM bits for the table, each bit being 6 transistors, on top of the scan chain to program it, and the registers and latches that go with the LUT in a typical logic element, and routing crossbars, and so on. Assuming K=6 then a single LUT would be like ~100x transistor overhead compared to a CMOS NAND gate (not a 1-to-"	aseipp	9.166021	-5.3793	comment	3.0	16.0	1704406353	8.390234
38897982	MIX is awful!  MMIX is better. But i	MIX is awful!  MMIX is better. But if you use those you are forever stuck on emulators. There is no real hardware that runs those ISAs.If you use RISC-V you can run your programs on real hardware ranging from:- $0.10 48 MHz 32 bit microcontrollers, to do real world stuff (CH32V003)- $9 1 GHz 64 MB 64 bit board that runs Linux (Milk-V Duo).- $40 to $100 quad core 1.5 GHz Linux boards (VisionFive 2, Star64, Milk-V Mars)- $2500 64 core 2 GHz 128 GB RAM Linux mATX board in a box, w/ power supply, video card etc (Milk-V Pioneer, first mass production units received by customers this week)... and a ton of other price vs capability points between.	brucehoult	9.489757	-5.2469482	comment	3.0	14.0	1704596150	-7.7795386
31798315	This article really drives home the 	This article really drives home the commonly ignored point about Intel CPUs: Sandy Bridge is a P4 derivative with all the faults fixed and the sharp edges filed off, not a P6/core 2 derivative.	Tuna-Fish	9.382363	-5.244843	comment	3.0	16.0	1655637923	7.818683
31823004	I want to see every extension be for	I want to see every extension be forwards and backwards compatible.Ie. a binary should run fine with or without a processor extension.To make that happen, every processor extension should either be implemented in hardware, or be emulated by software.None of these extensions to the ISA have software implementations.   Sure, someone could write one, but I don't think the RISC-V standards group should allow any extensions to make it into silicon without a software implementation being published and freely available.The RISC-V group should publish an official binary (and source) which can trap and emulate every possible extension.	londons_explore	9.433444	-5.689642	comment	3.0	18.0	1655814284	-10.540434
31824749	RISC isn't about the number of total	"RISC isn't about the number of total instructions, but the complexity of the individual instructions. Consider the ARM ""JavaScript instruction"" people love to make fun of. FJCVTZS sure sounds like a ridiculous instruction name right out of x86 -- but in reality, it performs a very simple task that greatly speeds up JavaScript code, and it's trivial to implement in hardware but painful in software. If you're going to be doing a task like that frequently it absolutely makes sense to have an instruction for it, and RISC vs. CISC doesn't change that.What makes an architecture CISC is when the instructions start to do too many things at once. For instance, on x86 you can write something like ‘ADD [rax + 0x1234 + 8*rbx], rcx'. This one instruction involves a bit shift, two additions, a memory lo"	NobodyNada	9.511894	-5.7209954	comment	3.0	29.0	1655823823	-10.508136
31856029	Dueling over Dual_EC_DRGB: Consequen	Dueling over Dual_EC_DRGB: Consequences of Corrupting a Standardization Process	sohkamyung	9.499246	-5.357779	story	3.0	71.0	1656024381	-4.475894
31872422	  > It has 72 instructions with seve	"  > It has 72 instructions with seven addressing modes for a total of 197 opcodes.

noob question: why so many addressing modes?"	andrekandre	9.900022	-5.7904997	comment	3.0	18.0	1656129051	-7.4525857
31891683	"The kicker:""the reduction function i"	"The kicker:""the reduction function is called with num set to the bit size, where it should be number of BN_ULONG elements (which are always 8 bytes large, because that is the size of an unsigned long on x64 systems, which is the only architecture which can have AVX512 support). So with the input sizes being 1024 bits, 8192 bytes are accessed (read from or written to) instead of 128.""Really unfortunate that a performance optimization like this introduced RCE. Feels like something you would hope would be caught via the use of something like asan/msan or valgrind, at least it was caught relatively quickly after release via fuzzing.A good bit of news is that since this requires AVX512 many CPUs won't hit it, including new Intel chips: https://www.pcgamer.com/intel-kills-alder-lake-avx-512-supp"	kevingadd	9.517632	-5.6092863	comment	3.0	15.0	1656315869	8.087403
31898261	Highlights from Git 2.37	Highlights from Git 2.37	todsacerdoti	9.04825	-6.303033	story	3.0	36.0	1656352937	12.723495
31905123	I'm from the UK and in my forties, a	I'm from the UK and in my forties, and I've never heard of 'Cix'. Just me?	Underphil	9.321257	-6.358821	comment	3.0	12.0	1656401323	6.0935864
31912132	There were numerous compilers for th	There were numerous compilers for the 6502.	Turing_Machine	9.587548	-5.447942	comment	3.0	11.0	1656445526	-7.406414
31921416	Maybe? There exist some extreme-perf	Maybe? There exist some extreme-performance ARM CPUs like A64FX from Fujitsu.	homerowilson	9.571805	-5.2041078	comment	3.0	12.0	1656515956	7.696363
31924525	"""Perhaps more critically, the new co"	"""Perhaps more critically, the new core offers exclusive support for only AArch64 – dropping 32-bit support altogether.""I don't understand why ARM wants to throw away AArch32/Thumb/Jazelle et al.This really shouldn't be in a phone - a lot of Android apps bundle 32-bit binaries for various purposes, and they won't run on this CPU.I can see why Fujitsu mandated AArch64, but my phone isn't going to be on the Top 500, and there were benefits to these old instruction sets."	chasil	9.703845	-5.3662496	comment	3.0	16.0	1656530276	-7.7379766
31925335	"""The R1000 addresses 64 bits of addr"	"""The R1000 addresses 64 bits of address space instantly in every single memory access. And before you tell me this is impossible: The computer is in the next room, built with 74xx-TTL (transistor-transistor logic) chips in the late 1980s. It worked back then, and it still works today.""That statement has to be coming with some hidden caveats.  64 bits of address space is crazy huge so it's unlikely the entire range was even present.  If only a subset of the range was ""instantly"" available, we have that now.  Turn off main memory and run right out of the L1 cache.  Done.We need to keep in mind, the DRAM ICs themselves have a hierarchy with latency trade-offs. 
https://www.cse.iitk.ac.in/users/biswap/CS698Y/lectures/L15....This does seem pretty neat though.  ""CHERI makes pointers a different "	throw34	9.847084	-5.4700093	comment	3.0	22.0	1656534486	8.097959
31927033	They went from 4 to 5 decoders. Rath	They went from 4 to 5 decoders. Rather than 1-2 complex decoder and a few that only work on simple instructions, every decoder can now decode everything, I-cache handles fusion.This all happens with a 75% reduction in decoder size due to dropping more complex 32-bit encoding. As the decoder is always on to feed the speculative execution, this is undoubtedly a substantial decrease in power consumption.x86 decoder is 8-10% of the total die area. If they could reduce that to 2%, that would represent 6-8% smaller core size and at least 6-8% reduction in power consumption (likely more as other areas will stay power-gated much more of the time).This is a more general point. X2 in the Qualcomm 8cx gen 3 beats Zen 1 desktop chips and is rather close to Zen 2 U-series chips in single and multicore 	hajile	9.579905	-5.2718887	comment	3.0	11.0	1656545497	7.723472
31929603	It's a rant and it's not information	It's a rant and it's not information heavy. I've never heard of this processor (and provide a link, don't tell me to look it up).Other OO processors: Rekursiv (https://en.wikipedia.org/wiki/Rekursiv) and that famously slooow intel iAPX 432 (https://en.wikipedia.org/wiki/Intel_iAPX_432)Interesting but neither (esp. the latter) were known as racehorses.I'd prefer to keep the hardware simple and fast and push the complexity into the software, and prove stuff.> would benefit from an HW/MMU architecture which focused on delivering fast object service, rather than flat address-spaces which software must then convert into objects.That conversion may not be cheap (edit: badly phrased, the object mapping process and hardware may not be cheaper (edit again: = faster) than that mapping done by the MM	zasdffaa	9.450778	-5.206107	comment	3.0	21.0	1656573746	7.851467
31935891	It's been years, but as I remember i	It's been years, but as I remember it SourceForge's primary downfall was the bundling of malware with binaries. That's why people I know stopped using it completely rather than because it was run on a proprietary platform.	bink	8.759181	-5.9852366	comment	3.0	11.0	1656610960	-11.669102
31938180	Yes, the RISC-V AIA has been a stand	Yes, the RISC-V AIA has been a standard for some months now.	bonzini	9.37881	-5.7119	comment	3.0	10.0	1656621056	-10.598937
31942152	Ask HN: Heavy computation setup for 	Ask HN: Heavy computation setup for Python?	gavribirnbaum	9.08819	-5.270868	story	3.0	2.0	1656647678	8.32394
31942781	I love Linus, but let’s not kid ours	I love Linus, but let’s not kid ourselves: he has mastered clickbait titles and thumbs.	EtienneK	9.277093	-5.8693557	comment	3.0	11.0	1656654114	4.1722965
31944334	I guess it was an interim measure as	I guess it was an interim measure as part of the x86_64->arm transition. Now that everything targets arm, there's no need for an intermediate representation.	trollied	9.680336	-5.408713	comment	3.0	15.0	1656669478	-7.691483
31958603	FPGAs in Client Compute Hardware	FPGAs in Client Compute Hardware	rbanffy	9.095426	-5.351109	story	3.0	19.0	1656766349	-7.6651835
31966127	Emphasis on all :).Of course the CI 	Emphasis on all :).Of course the CI should always run them, but that should normally be as a confirmation/safeguard.I've seen too many cases where the devs wouldn't even run the code locally. They would push it and expect the CI to do all the work. That's how you get shitty CI that is always broken.	cntainer	9.220314	-6.41189	comment	3.0	18.0	1656837274	6.1271725
31977038	Do we know whether that x86 backward	Do we know whether that x86 backward compatibility is all that problematic? If I’m not mistaken, it is only used as a “public API” even in current CPUs, and on a microcode level it doesn’t have as much relevance.	kaba0	9.758809	-5.4262013	comment	3.0	22.0	1656942757	-7.7788167
31977510	For example: Decode. One of the thin	For example: Decode. One of the things Apple CPUs keep being praised for is how wide they are. To be wide effectively and keep your execution units busy, you need a wide decoder. With aarch64 it is easy. Every instruction is 4 bytes on a 4 byte boundary. Want a 4-wide decoder? Ingest 16 bytes and copy-and-paste the same decoder 4 times.X86 instructions are variable-length: 1-15 bytes. And you do not know how long any instruction is until you read almost every byte of it (there is no length byte up front - it is just a list of prefixes). Thus to make a 4-wide decoder you need to ingest up to 60 bytes, and your decoder cannot start on instruction  #2 till it finds the end of # 1. (Or guess, and rewind as needed). Much harder and a rather long dependency chain for decoder #4 to even get start	dmitrygr	9.657147	-5.6010685	comment	3.0	16.0	1656945460	-7.793824
32018248	Something I always wondered: the Gam	Something I always wondered: the Gamecube had an IBM PowerPC processor with a RISC instruction set. ARM is also a RISC instruction set. Is there some performance boost in running Dolphin on ARM-powered hardware, or is it more or less the same as running it on an x86-based chip? My sense is that RISC -> RISC potentially would be more straightforward?	amilios	9.431773	-5.669666	comment	3.0	10.0	1657222094	-10.531085
32045283	Yes. But I’m referring to the articl	Yes. But I’m referring to the article:> 1. Do you use a distributed version control system?Edit: the parent originally said “distributed build system”	dijit	8.805128	-6.3861294	comment	3.0	14.0	1657464701	-11.7444515
32068007	It's slightly different (but only sl	It's slightly different (but only slightly) in the CPU case in that the disabling they're doing is a special case of an operation they have to do anyway.  I don't know if it's the case for the specific 3 and 6 core AMD chips you're referring to, but it's common practice for that sort of CPU to be a 4 or 8-core chip where one or more core has failed validation.  Cores that have failed testing then get disabled, and the CPU is bucketed into a lower grade but is still sold as a working unit.  All AMD would have been doing here is using the disabling process which must already exist to intentionally nerf working cores because the yields they were getting in the various buckets were too good for the market conditions.I'm not sure what BMW are thinking with the seat heaters.  I suspect someone t	regularfry	9.36064	-5.220939	comment	3.0	11.0	1657622839	7.822663
32073231	Ask HN: Why Is ♥ Emoji Allowed in St	Ask HN: Why Is ♥ Emoji Allowed in Story Titles?	metadat	9.807988	-6.25755	story	3.0	6.0	1657647110	13.044395
32073134	Surprised to see ♥ allowed in the ti	Surprised to see ♥ allowed in the title.	jwilk	9.820495	-6.2352533	comment	3.0	10.0	1657646711	-1.1667811
32073155	First time I ever see an Emoji on Ha	First time I ever see an Emoji on Hacker News. Are they not filtered out anymore?	Eduard	9.799215	-6.263685	comment	3.0	13.0	1657646800	-13.954567
32074693	> The researchers said that it’s cap	> The researchers said that it’s capable of locating and leaking a Linux computer’s root password hash from physical memory in about 28 minutes when running the Intel CPUs and in about 6 minutes for AMD CPUs.Given this attack vector, it makes some sense for relatively static secrets like these to be moved into something like the Secure Enclave where the CPU can perform signature verification but never store the secret itself in memory or cache.  I know other ARM-based SoCs have these too.  So presumably Intel and AMD offer something like this in their latest-generation CPUs?	wyldfire	9.619039	-5.2773666	comment	3.0	18.0	1657654800	7.845633
32087854	Do you really need multicore linux c	Do you really need multicore linux computer with gigabyte of ram to send temperature over the network?	rasz	9.69045	-5.271331	comment	3.0	19.0	1657741537	8.041647
32097579	"What is a ""RISC-V gun""?"	"What is a ""RISC-V gun""?"	nsxwolf	9.394509	-5.701967	comment	3.0	14.0	1657813621	-10.599099
32099832	I would strongly recommend that Rasp	I would strongly recommend that Raspberry Pi explore a RISC-V line of SBCs.  They already have established that they are not locked to ARM with the recent Pico device (https://www.raspberrypi.com/products/raspberry-pi-pico/), so they might as well do a RISC-V line.RISC-V is much more open than ARM, but it is definitely lacking in performance and widespread support (and integrated GPU?.)  Thus do not dump the ARM line, but add an alternative so as this market further develops, Raspberry Pi is there.(I found this: https://abopen.com/news/raspberry-pi-foundation-announces-ri...)	bhouston	9.431008	-5.5972447	comment	3.0	18.0	1657823704	-10.5455
32135052	The subset that most have is going t	The subset that most have is going to be pretty broad. These days, you'd definitely assume that processors have SSE2, for example.However, most SSE2 instructions won't be emitted by GCC until you crank things up to -O3.	klodolph	9.923622	-5.926078	comment	3.0	14.0	1658122509	-7.50038
32135097	Until we switch to another architect	Until we switch to another architecture. It's pretty likely the x86 architecture will be gone in a few decades. Rebuilding VM software to run on new hardware is probably harder than fixing bugs in a JPEG decoder.	tgv	9.712174	-5.346496	comment	3.0	12.0	1658123100	-7.7871428
32142699	The CPU is documented; the documenta	The CPU is documented; the documentation is written by ARM.	astrange	9.689938	-5.319089	comment	3.0	11.0	1658173590	7.7060385
32149047	For that you'd need to hack Intels i	For that you'd need to hack Intels infrastructure and get access to the private keys.	W4ldi	9.538347	-5.201351	comment	3.0	24.0	1658220399	7.7340174
32149087	> billions of devices in the wild wh	> billions of devices in the wild which will become e-waste overnightNot just e-waste, they can also become a huge liability. In a presentation, the authors mention that one of the CPU families which have this vulnerability were used in Tesla cars. Tesla apparently switched to AMD APUs around December 2021.	ihalip	9.353563	-5.1903534	comment	3.0	36.0	1658220707	7.9387975
32152832	> I work on Linux at Intel, I'm not 	> I work on Linux at Intel, I'm not posting this in any official capacityOh, great! Isn't there a way where intel could provide keys so we could get rid of IME even if it means we won't be able to play DRM'ed content?	marcodiego	9.516509	-5.24153	comment	3.0	12.0	1658244191	7.7768464
32157822	> but refers to the architecture as 	> but refers to the architecture as x64What do you think the correct name is? I call it AMD64, as that's the name the authors gave it. But they also previously called it x86-64, so maybe that's valid.x86_64, x64, etc, no idea why people had to come up with their own names beyond AMD64 or x86-64!	chrisseaton	9.688999	-5.3870125	comment	3.0	12.0	1658264027	-7.806018
32187541	I feel like there's probably some ma	"I feel like there's probably some market for something even smaller than today's FPGAs.I'm picturing situations where you might use a handful of 74xx components to perform a task, but start getting bogged down by factors like ""I can't fit 15 chips on my breadboard and even if I did, I'd probably mess up the wiring accidentally"".A full ""software at runtime"" microcontroller solution introduces its own nuances (having to load and initialize, potential timing factors), even if the price is right.A still-in-production commercial-grade FPGA means replacing $10 of parts with $100, so it's not really hobbyist-friendly, and may be wildly overkill for the task.I guess maybe the PAL/GAL ecosystem is sort of what I'm envisioning, but it seems like a dead-end of obscure tools and parts labelled ""not su"	hakfoo	9.114365	-5.312929	comment	3.0	15.0	1658454735	8.272675
32195343	I think you managed too lose me abou	I think you managed too lose me about 3 times in there.. what point are you trying to make, and what do you think Linus should do?	TristanBall	9.28158	-5.8930674	comment	3.0	12.0	1658513969	-1.5205985
32203800	"""Weird"" platforms often do have thei"	"""Weird"" platforms often do have their own tool-chains but they do have the ability to leverage LLVM, MISRA, and an array of common tools and analyses that exists for C. One of the reason we got new platforms like RISC-V is that today its possible to use existing OSS software to build a platform with a working OS and Development environment, that common basic libraries can be built for is that all this software is written in C and can be targeted towards a new platform."	quelsolaar	9.4987545	-5.7458034	comment	3.0	12.0	1658587676	-10.457714
32223227	What the hell does AVR mean???edit: 	What the hell does AVR mean???edit: google says it's a processor like ARM but it is not ARM.	joshxyz	9.617018	-5.2620544	comment	3.0	10.0	1658750839	-7.630909
32231444	When I was in high school, I hand-as	When I was in high school, I hand-assembled my 6502 code. I’d write it longhand out on graph paper, then write down addresses in the leftmost column, opcodes in the middle & finally I’d type in all the hex from the Apple Monitor. It was slow, painstaking and error-prone, but it made for clear thinking about how the program worked before I sat at the computer.	dhosek	9.584078	-5.4070725	comment	3.0	12.0	1658786064	-7.4194565
32232036	IMO the base+index encoding (in 16-b	IMO the base+index encoding (in 16-bit x86) was a mistake, it should have simply allowed indirection through any single register (+ immediate offset), including SP.• the address calculation would be simple enough to do hardwired even on the original 8086, instead of using slow microcode. The 8086 actually took a different amount of clock cycles depending on the registers used for base and index, because there wasn't enough ROM space to duplicate the code for every combination without using jumps!• you could use [SP+xxxx] to access local variables (frame pointer omission)• would be able to emulate the 8080's LDAX/STAX and XTHL in a single instruction• with so few registers, you really want every one available for memory addressing. Especially AX which is used implicitly by instructions like	rep_lodsb	9.850728	-5.7880893	comment	3.0	39.0	1658789683	-7.43642
32232911	The combinations are the work of a v	"The combinations are the work of a very talented team. (See https://jenniferdaniel.substack.com/p/introducing-emoji-kitc...)This viewer is just a small hack to let you look through what already exists : ) 
Source: https://github.com/alcor/emoji-supply/tree/main/docs/kitchen"	jitkoff	9.80779	-6.2706413	comment	3.0	16.0	1658796263	-13.949971
32233906	Another big mistake was to make the 	Another big mistake was to make the paragraph size 4 bits. Should have been at least 8 -- that would have given the 8086 a 24-bit address space, which would have made things verrry interesting in the MSDOS / early Windows world.(I know, they didn't have address pins on the 40-pin package. Still, an architecturally guaranteed 16MB of room to play in would have changed the face of the software industry in the 1980s).	kabdib	9.791061	-5.4682803	comment	3.0	11.0	1658805983	-7.535954
32234769	Neat. I made a Telegram bot so that 	"Neat. I made a Telegram bot so that all users get access to these emojis:
@emojimixingbot
It works only in inline mode"	Moldoteck	9.805356	-6.2566557	comment	3.0	12.0	1658814834	-13.961685
32235082	Can RISC-V save us here?  Or is it t	Can RISC-V save us here?  Or is it time to start hoarding CPUs?	trh0awayman	9.384998	-5.668524	comment	3.0	13.0	1658817213	-10.560187
32235545	Are these downloadable somewhere? Wo	"Are these downloadable somewhere? Would like to add some of them to Slack / other apps.Edit: Apparently ""Emoji Kitchen"" is a thing made for a Google keyboard, and this web page is just a frontend to show those."	matsemann	9.790416	-6.2470613	comment	3.0	12.0	1658822188	-13.946516
32236330	As a classic example of a naturally 	As a classic example of a naturally evolved emoticon language, on the SomethingAwful forums anyone could (and still can) buy an emoticon for $30. Here they all are: https://forums.somethingawful.com/misc.php?action=showsmilie...	Nition	9.80147	-6.2644234	comment	3.0	10.0	1658829761	-13.963485
32241433	My hopes of large volume fully open 	My hopes of large volume fully open source systems died when I learned that beefy RISC V boards will ship with UEFI.	rwaksmunski	9.606824	-5.4730763	comment	3.0	12.0	1658857813	-10.521066
32245424	Shed a Tear for HEDT: Official Threa	Shed a Tear for HEDT: Official Threadripper Pro Pricing Marks the End of an Era	teleforce	9.359362	-5.2211976	story	3.0	15.0	1658879005	8.021382
32279365	Or do what Apple did and addon an x8	Or do what Apple did and addon an x86 memory semantics mode for ARM.	dataangel	9.771844	-5.3764176	comment	3.0	10.0	1659114139	-7.7063775
32296242	What will happen when Linus is no lo	What will happen when Linus is no longer with us?	mirekrusin	9.307107	-5.887694	comment	3.0	10.0	1659281632	4.265425
32298940	Yeah it's already legacy hardware, i	Yeah it's already legacy hardware, it should be comparing against the Zero 2 if anything, the original Zero was comically underpowered.But the speed is all but irrelevant, the issue with these alternative boards is always in software support. No point in using them even if they're twice as fast if I can't apt get anything and have to compile shit from source wasting 10 times as much time. Is there even an arch tag for riscv yet like armhf and arm64? I'd assume there is, but I can't find it and the support is likely to be abysmal this early on.	moffkalast	9.412675	-5.6202846	comment	3.0	24.0	1659302342	-10.555729
32315316	Slightly off-topic: I see lots of le	"Slightly off-topic: I see lots of learning resources for FPGAs appearing that explain how to ""think parallel"", but are there good resources that explain how to deal with practical problems such as badly-documented primitives (looking at you, ECP5) or how to debug a non-working design (1), or how to find what causes the synthesis tool to segfault?1 involving multiple primitives and you can't attach a signal logger to the signal between them because the FPGA doesn't have a path there to use.The situation somewhat reminds me of the earlier LaTeX days when every tutorial started with ""I'm assuming you have already installed LaTeX"" as if that wasn't the biggest problem for most users, and then continues explaining the easy stuff that you can easily learn by trial and error."	moring	9.062537	-5.3799257	comment	3.0	21.0	1659416853	8.45967
32315894	CPUs operate due to quantified pheno	CPUs operate due to quantified phenomenon. They're well understood. They've been refined over nearly 100 years.HFTs came into their own over the past decade or so -- during a time of falling interest rates, unprecedented growth, and notable lack of regulation in financial markets.One of these things is not like the other. I'd be entirely unsurprised to see most HFTs turn out like Lehman Brothers, Enron, or AIG. They all lasted more than a decade or so. But their gains were fraudulent and they failed spectacularly.	rgifford	9.398585	-5.213287	comment	3.0	20.0	1659423638	7.798248
32327768	Waaaaayyyy back in the day (1988) it	"Waaaaayyyy back in the day (1988) it started out as ""Real-Time Executive for Missile Systems"" [0]. Hard-core hard-real-time.Today the ""MS"" stands for ""Multiprocessor Systems"". Heterogenous multiple processors [1]. The OS is perfectly happy running x86, ARM and RISC-V in the same system, though I don't know which of the canned Board Support Packages use that capability.It's a pretty good introduction to RT--small enough to get your head around, but lots of capability. I used it for my first major embedded software project (LAN NIC driver, based on Linux driver for similar chip) 15 years ago and it was pretty straight-forward. Rate it 4 1/2 stars, would code again.[0] https://devel.rtems.org/wiki/History/Timeline
[1] https://docs.rtems.org/releases/rtemsdocs-4.8.0/share/rtems/..."	mgsouth	9.727115	-5.326643	comment	3.0	15.0	1659502081	-10.549381
32370815	I didn't really appreciate this unti	"I didn't really appreciate this until I got an ECC workstation. It's noticeably more stable than my previous machines, even under abusive levels of load.Noticeably more stable, as in, ""never ever crashes"" as opposed to ""almost never crashes"" without ECC. Thanks Linux! :D"	thanatos519	9.5225725	-5.5001802	comment	3.0	22.0	1659813755	8.221413
32370837	Did you actually check the ECC error	Did you actually check the ECC error counters?Memory errors in data centers tend to be concentrated in a small number of bad sticks of RAM rather than evenly distributed across all memory. If you have a machine crashing regularly due to memory errors, it’s likely a bad stick of RAM, not random errors due to lack of ECC.	PragmaticPulp	9.650333	-5.545975	comment	3.0	15.0	1659813947	8.223399
32370918	Eh, the chance that data I care abou	Eh, the chance that data I care about will get corrupted in a way that matters is very small.  ECC also does not eliminate errors, just reduces them by some constant proportion.  Something quite rare becoming say, 10 times less likely doesn't really effect my decisions much.  If you're using ECC you can make the exact same argument that you need another bit of parity with the same justifications of making something rare, rarer. Of the things than can go wrong with my data, small corruptions from memory bit flips are far down on the risks to worry about.If you're Google (you're not Google) then the scale of errors becomes a choice of optimization.	colechristensen	9.512995	-5.514603	comment	3.0	16.0	1659814733	8.240785
32380665	Spectre co-author here. Neat to see 	Spectre co-author here. Neat to see this! The backstory of Spectre is that we wrote a straight-up Battlezone clone just as a hobby project, then decided that it was worth commercializing and so we fiddled around just enough to make it not be a copyright violation. It's influences all the way down. :-)By complete coincidence, a friend of my co-author texted this photo from the Vintage Computer Festival today: https://photos.app.goo.gl/XTEUkjwtJb7nhQn7A	snewman	9.669224	-5.57379	comment	3.0	11.0	1659912325	7.7637277
32392647	And who says that faster runtime tru	And who says that faster runtime trumps all other considerations?  I would much rather have my computer run slower than have to continuously deal with security vulnerabilities.  My time is much more valuable than CPU time.	lisper	9.840669	-5.216155	comment	3.0	37.0	1660003773	7.565529
32402787	"Execution is about engineers.
Intel "	"Execution is about engineers.
Intel can't retain their engineers.
Without good engineers you can't compete.
So you downsize and try compete only on one thing -- better x86.
Pat Gs return as CEO does help with engineer retention though."	khitchdee	9.430128	-5.2109303	comment	3.0	37.0	1660072936	7.741208
32404207	How many times has SGX been broken n	"How many times has SGX been broken now?When (if ever) could a reasonable person think ""ok, now they must have got rid of all the vulnerabilities, time to trust this!"" ?...and then Intel will add another new architectural feature that will interact with SGX in some unforeseen way and break it yet again. SGX is surely just too fragile?"	joosters	9.475367	-5.198337	comment	3.0	12.0	1660078739	-5.879047
32410492	AMD Threadripper Pro 5995WX and 5975	AMD Threadripper Pro 5995WX and 5975WX Review	cebert	9.303024	-5.184185	story	3.0	36.0	1660132894	7.9092436
32427980	The first of Intel's many expensive 	"The first of Intel's many expensive lessons about the problems with extremely complicated ISAs dependent on even more sophisticated compilers making good static decisions for performance.  
Then they did it again with the i860.  
Then they did it again with Itanium."	PAPPPmAc	9.578013	-5.511349	comment	3.0	17.0	1660234687	-7.7165875
32428612	The code in question: https://github	The code in question: https://github.com/dspinellis/unix-history-repo/commit/389a4...	LukeShu	8.748918	-6.3043475	comment	3.0	17.0	1660236977	-8.355834
32431592	> It basically doubles the workload 	> It basically doubles the workload testing for PC, which is already complex due to the thousands of hardware configurations out there.This is only true if your engine is abstracting nothing away and there wasn't any common denominator in APIs across systems.Given that neither is the case for popular game engines, the statement is wrong. You also don't have to test gameplay related things on both systems, only technical aspects, and only a small subset of them.	chmod775	9.827779	-5.26636	comment	3.0	12.0	1660251206	7.6670837
32444634	This is a tangent, but I was reminde	This is a tangent, but I was reminded of early Macintosh days, where the 68000 processor in the original Mac hardware only paid attention to the lower 24 bits of addresses, and only the lower 22 were actually connected to memory. The heap manager used the upper bits of pointers as a convenient place to store flags, and didn’t bother zeroing them on dereference because they were ignored anyway.The release of the 68020 and Macs with more RAM resulted in the need for a whole transition to “32-bit clean” system and apps that took a while. I also seem to recall something about early versions of Microsoft Mac apps being limited to the lower megabyte of RAM for a similar reason.	wrs	9.845945	-5.257408	comment	3.0	12.0	1660342719	8.171541
32457390	>On the other hand these new emojis 	>On the other hand these new emojis look really cool.I disagree. It feels like a painful return to early 2000s animated phpBB forum emoticons.	Hamuko	9.806672	-6.2683873	comment	3.0	12.0	1660463984	-13.958909
32457985	a) Idea is copied from KakaoTalk sti	a) Idea is copied from KakaoTalk stickers which was released a decade ago.b) Emoji are copied from Apple emojis.c) PR strategy is copied from the dozens of startups who also played this victim game.	threeseed	9.793745	-6.262915	comment	3.0	12.0	1660471384	-13.958388
32466815	I feel bad that I really don't under	I feel bad that I really don't understand any of this. My mental model of what a CPU does stops at the assembly level, and intuitively feels like (and looks like) doing some convolution on an image - e.g. a local, nodal point moving through a bitmap, leaving behind the wake of some set of operations, a smear, with some of that smear propagating forward. But now I realize that all of these models are a middling-high level picture of a CPU's side effect, not it's operation - the manner in which it combines it's operands is, effectively, voodoo. But voodoo with which I am comfortable, for reasons involving NAND gates and Alan Turing, but I wonder: should I be so comfortable?	javajosh	9.639464	-5.385181	comment	3.0	11.0	1660548357	7.748756
32468886	> We know there's been a lot of chat	"> We know there's been a lot of chatter recently about runtime speed.For reference: 
https://news.ycombinator.com/item?id=32457587Btw, I like where it's going but I find it quite sad that there is no official linux ARM64 support yet - which means I can't try to use it on AWS lambda for example."	up6w6	9.715692	-5.303495	comment	3.0	10.0	1660567079	-7.727819
32508641	Micromobility: The Obligatory Origin	Micromobility: The Obligatory Origin Story	simonpure	9.83915	-5.200838	story	3.0	44.0	1660825668	6.5106883
22016906	>but you have to pay something like 	>but you have to pay something like 4x the cost.Last time I check their pricing was actually quite competitive to x86 system.	ksec	9.669414	-5.218421	comment	3.0	10.0	1578700889	-7.852654
22015971	Yes, Power is the closest to a real 	Yes, Power is the closest to a real x86 desktop competitor but you have to pay something like 4x the cost.	loeg	9.660922	-5.208693	comment	3.0	16.0	1578693014	-7.850164
22018404	I was not impressed by the i432 arch	I was not impressed by the i432 architecture.  Like the Multibus, it seemed to be trying to be very fancy, but with no elegance or taste.  The result was an architecture that... um... might possibly have worked.  It's still an ugly, tasteless architecture, though.	AnimalMuppet	9.471571	-5.2428102	comment	3.0	11.0	1578721863	7.556527
22023586	Can you run graphical applications i	Can you run graphical applications inside a BSD jail?	LeoPanthera	9.815372	-6.3110027	comment	3.0	10.0	1578790408	10.500663
22049704	On the topic of toy web crypto proje	On the topic of toy web crypto projects, here's mine: https://emojicrypt.com/It offers scrypt + aes-gcm, encoded into 256 emoji; all the crypto is in https://github.com/aurorabbit/libemojicrypt/blob/master/prot... (I could have went without a subrepo, but in theory it makes non-web integration or alternate interfaces simple.)It's based off of ricmoo's scrypt.js, pfrazee's base-emoji, and WebCrypto.Output contains a header (with N/r parameters), salt, IV, and HMAC. Room for a dozen more protocol versions as well.It's abandoned, looking for a loving home! Work for some new (and some unimplemented) features is laid out here: https://github.com/aurorabbit/emojicrypt.com/issues	aurorabbit	9.810251	-6.262319	comment	3.0	10.0	1579039359	11.788747
22050166	RISC-V Software Ecosystem Overview	RISC-V Software Ecosystem Overview	lelf	9.388087	-5.687305	story	3.0	83.0	1579043158	-10.58833
22072955	I wonder if mainstream CPUs will eve	I wonder if mainstream CPUs will ever get back to being truly programmable with software instructions, instead of running off and speculating on what you might do next.	Paperweight	9.5786705	-5.2198267	comment	3.0	11.0	1579250528	7.9205847
22090201	The positive headline hides bad news	The positive headline hides bad news for those of us who run CoreOS. CoreOS will be out of support soon(?). Migration instructions have been announced, but not written yet...There is a CoreOS fork at https://www.flatcar-linux.org/ promising seamless continuation. I have no experience with or further knowledge about it.	usr1106	9.865453	-5.8670897	comment	3.0	37.0	1579422713	-9.23742
22090618	Should I be using CoreOS for my cont	Should I be using CoreOS for my containers?Generally I've been using either Ubuntu or Alpine as bases.Also it looks to be Red Hat based? Is there a Debian equivalent?	Jonnax	9.747149	-6.190207	comment	3.0	24.0	1579430028	-9.207996
22090728	Yes, sorry, unprecise terminology. W	"Yes, sorry, unprecise terminology. When I say CoreOS I mean CoreOS Container Linux.Fedora CoreOS is marketed to be a continuation. But it's not a seamless one, it requires manual porting. Detailed instructions don't exist yet, but the list is not that short https://github.com/coreos/fedora-coreos-tracker/issues/159. While most people won't be affected by many items, a couple of days are easily burned for understanding, coding and testing. Coding probably the smallest part, but if everything goes without ""surprises"" in real life, I would be surprised."	usr1106	9.844507	-5.9279065	comment	3.0	29.0	1579431788	-9.224181
22107022	The largest memory technology breakt	The largest memory technology breakthrough in memory technology I can imagine would be to the ability to cost effectively combine high density RAM and logic in the same chip.Bandwidth intensive operations could happen inside single RAM chip or between two of them. CPU would just send instructions with parameters and no data.	Nokinside	9.713028	-5.1874633	comment	3.0	15.0	1579616174	8.053655
22132031	It’s just for this sort of turn of e	It’s just for this sort of turn of events that hn should allow a limited number of memes and emojis.	mattrp	9.805387	-6.2620897	comment	3.0	12.0	1579813478	13.025357
22133299	Why is x86 ugly? Why is it considere	Why is x86 ugly? Why is it considered inferior when compared to others?	peter_d_sherman	9.684496	-5.414456	story	3.0	4.0	1579820793	-7.7509456
22148345	> Here’s comparative data between M6	"> Here’s comparative data between M6g and M5, the previous generation instance typeInstead of comparing the 7nm Graviton2 processor against an 14nm Intel processor, I'd like to see its performance compared to an AMD Epyc 2 processor, which would be a more apples-to-apples comparison as both are ""7nm"" parts. Unfortunately Epyc 2 processors aren't available from AWS yet (but are already announced: https://aws.amazon.com/de/blogs/aws/in-the-works-new-amd-pow...)."	Dunedan	9.413658	-5.2303195	comment	3.0	23.0	1579982921	-8.381131
22148490	This is great news. Except that a to	This is great news. Except that a ton of software doesn't support ARM.When I was trying to shift all my current infrastructure onto a couple of RPI's, many of the Docker containers didn't support ARM (qeumu and buildx aren't reliable) and other software didn't support ARM either.Unless there's a good way to go from AMD to ARM, I'm not entirely sure how great Graviton or other competitors will get.	sdan	9.545259	-5.229844	comment	3.0	11.0	1579984692	-7.7992496
22148701	Fair. Trouble is, we’re never going 	Fair. Trouble is, we’re never going to get Graviton2 devices of our own outside of an AWS datacenter or device; the power profile is intellectually interesting, but not likely to ever enter the public sphere.	QuinnyPig	9.504609	-5.1931663	comment	3.0	10.0	1579987405	-8.388193
22150133	If Epyc CPUs aren't available, then 	"If Epyc CPUs aren't available, then it isn't apples to apples.A customer doesn't care about nm. They care about what's available.
The apples to apples comparison is The best x86 available vs the best ARM available."	awill	9.346	-5.2232604	comment	3.0	13.0	1580008031	7.983553
22162216	"I have hard time connecting ""machine"	"I have hard time connecting ""machine learning"" with what RISC-V is about.Above all, the original plan for RISC-V was to make a barebone MCU ISA first, and everything else second.This was largely to ARM being very militant with terms on RTL access for M* series cores for commercial use.If you throw enough extension, and workarounds even on top of 8051, you should be able to make a CPU grade core with it. But you being able to do it, doesn't mean you should."	baybal2	9.380107	-5.676075	comment	3.0	17.0	1580149387	-10.585999
22163894	>It is known since... forever?, that	">It is known since... forever?, that one should not speculate across security boundaries.... if you value security over raw performance. Clearly Intel has decided at some point that it was worth playing with fire in order to get ahead in benchmarks. In their defence it seems to have worked reasonably well for them for quite a while.>The people most annoyed are the users.I wish, but I wonder how much of that is true. Are most users even aware of these problems? They get patched automatically by OS vendors and then most of the time they won't hear about them anymore. I think the ""nobody gets fired for choosing Intel"" will probably still prevail for quite some time."	simias	9.420328	-5.2535243	comment	3.0	13.0	1580159966	7.7375216
22165404	"The ""nutty""ness comes from people ge"	"The ""nutty""ness comes from people getting frustrated with intel fucking up the security of yet another feature they promised, and intel's overall poor security record.Luckily there are other vendors who seem to know what they're doing: We just received our first batch of non-intel servers at work and have no intention of returning to intel for the foreseeable future. What they offer is simply not worth the risk. I expect more companies to follow suit."	guug	9.427574	-5.2030125	comment	3.0	18.0	1580172607	7.7533545
22177227	More pedantic: Linus' is correct bec	More pedantic: Linus' is correct because Linus is a proper noun.	pfundstein	9.286667	-5.891245	comment	3.0	12.0	1580270067	4.261325
22193211	How much radiation would it take to 	"How much radiation would it take to flip a bit on an SSD? What about RAM (many people send their laptops through in a suspended-to-RAM state)?I would assume that RAM is more susceptible, since we still store a single bit per RAM cell, while some SSDs now store multiple bits per cell, but I've never tried to do the math on ""what would it take to actually make these problems start to appear?"" Might be a fun exercise... has anyone looked into this?"	ohazi	9.735785	-5.46371	comment	3.0	18.0	1580405052	8.239787
22207286	">""Each mode has a different ecall ca"	">""Each mode has a different ecall cause. If we make an ecall in machine mode (the most privileged mode), we get cause #11. Otherwise, if we make an ecall in supervisor mode (typically the kernel mode), we get cause #9.""Could someone say if the kernel runs in Supervisor mode what is the intention of machine mode in RISC-V?"	bogomipz	9.412129	-5.690546	comment	3.0	10.0	1580515207	-10.550265
22226477	IBM should give IBM Cloud to the Red	IBM should give IBM Cloud to the Red Hat people and rebrand it as Red Hat Cloud.Red Hat is the only subsidiary of IBM that is respected by the developer community. The rest of IBM has a very MBAsque reputation.	pscz	9.927562	-5.4486036	comment	3.0	12.0	1580751007	-9.453267
22231758	Probably only because most hyperviso	Probably only because most hypervisors don't bother to hide themselves. There's no reason you couldn't prevent detection.Not to mention some people are creating FPGA boards that use DMA to read memory, something no one is setup to prevent (would require an IOMMU and an OS that bothered to configure it properly; also very difficult to differentiate legit cards from cheating cards and an area game developers have zero experience with right now).	xenadu02	9.930914	-5.340787	comment	3.0	12.0	1580783064	-8.28776
22248903	Fedora CoreOS seems like it has some	Fedora CoreOS seems like it has some pretty significant restrictions>    It does not yet include native support for Azure, DigitalOcean, GCE, Vagrant, or the Container Linux community-supported platforms.>    The rkt container runtime is not included.>    Fedora CoreOS provides best-effort stability, and may occasionally include regressions or breaking changes for some use cases or workloads.	zymhan	9.813934	-6.0223746	comment	3.0	46.0	1580923062	-9.291876
22267347	I have the 3970X and use it with Ubu	I have the 3970X and use it with Ubuntu. It's fun to have a lot of cores, but in the beginning it's highlighted some areas where open-source programs aren't assuming you're going to use that many cores (similar to what they talk about for Windows). So you see OOM errors with make, see program crashes from defaults being too low (such as creating too many Postgres connections), things like that.Not taking away from those developers, just sharing my experience. When you do get something that works really well (the newest version of Julia makes it easy to write multithreaded code), it's hilarious running htop and seeing 64 threads of green running.	randyzwitch	9.531304	-5.2866087	comment	3.0	24.0	1581091835	7.8981643
22267653	Even then -- https://gamozolabs.gith	Even then -- https://gamozolabs.github.io/assets/afl_256thread.pngNote that this CPU has 128 threads, so half of that picture. For my usual terminal size I might get 0-2 processes listed below that...	blattimwind	9.771517	-5.5251536	comment	3.0	11.0	1581093227	8.325209
22273197	>However, unknown to any of us, it t	>However, unknown to any of us, it turns out that PEXT is extremely slow on AMD Zen and Zen 2 architectures.Is it because of some patents? Anyone knows?	nullifidian	9.265174	-5.195025	comment	3.0	10.0	1581127120	7.8618565
22279694	Honestly?  Learn old-style 8086 asse	"Honestly?  Learn old-style 8086 assembly, then 386 code.  The new stuff may be architecturally simpler in many ways, but it sits as an edge case on top of a very thick historical stack that seems completely insane if you look at it a priori.But the early CPUs were actually quite simple!  At the time ""CISC"" was a good thing because it provided straightforward mechanisms for expressing things (e.g. ""push"", ""call"", load a struct field with an offset...) that real world programmers needed to do all the time."	ajross	9.638471	-5.6836452	comment	3.0	12.0	1581209597	-10.360044
22279940	There's no magic anywhere and 99.1% 	"There's no magic anywhere and 99.1% of it is documented.IA-32e/AMD64 is basically an extension of IA-32/x86. What you're looking for is to understand the difference between real mode, 386 protected mode, PAE, paging and long mode because the registers, instructions, addressing and sizes of structures differ.You can learn all of this by reading the Intel software manuals and digging into it yourself.Tools you need (for non-Windows):- gdb/lldb- assemblers: yasm, nasm, binutils (contains ""as"")Optional tools:- IDA Pro- Virtualization/emulation such as VMware Fusion/Workstation (because it supports being a gdbserver), VirtualBox or QEMU- Intel's CPUID appYou also need good references like:- the Intel manual set (a giant PDF or a collection of several) https://software.intel.com/en-us/articles/i"	anonsivalley652	9.731136	-5.562393	comment	3.0	19.0	1581214137	-7.6530366
22299170	I think it's a marketing trend. The 	I think it's a marketing trend. The emojis seem like a soft universal language to help people who don't speak English grok broken google translations.Hoping to hear the name for this trend as it's a very interesting one indeed. Done well it seems like this is definitely the new wave as we continue to dumb everything down to the lowest common denominator. Done poorly, well I've done this and will just tell you the results are about as bad as you'd expect.	siphium	9.793745	-6.268853	comment	3.0	20.0	1581434811	-13.951512
22299321	However in most usages, there is no 	However in most usages, there is no actual language benefit -- I doubt the animal emojis will actually help understanding of this article for any non-english speaker.In fact, I doubt you could really express anything beyond the simplest concepts with emojis in a language-agnostic fashion.Actually I'll go a step further: the idea of emoji as a language agnostic writing system is dumb. It's equivalent to pictograms, and like Chinese, will only become useful when you have a massive set of them, and you assign multiple layers of meaning for particular combinations that eventually take you down the path of culture-specific language anyways.	setr	9.803077	-6.263265	comment	3.0	13.0	1581435785	-13.966143
38917974	These parts could also be interestin	These parts could also be interesting for NAS and other home server setups if the monolithic die leads to better idle power usage and they haven't lost ECC support. Unfortunately getting verified ECC support in AM5 seems to be quite difficult. In AM4 it was easy but ECC on APUs was only enabled on the PRO parts which were only sold to OEMs.	pedrocr	9.388878	-5.4591002	comment	3.0	13.0	1704747379	8.182687
38945028	What is the proper cleanup when a tr	What is the proper cleanup when a tritium-powered exit sign has been broken?	marcodiego	9.398746	-5.2612734	story	3.0	31.0	1704928995	-8.609313
38948203	Useless C-level executives focusing 	Useless C-level executives focusing on short term gains from RIFs rather than innovating.G is just a shadow of it’s former self. I can’t wait for the great G disruption	xyst	9.345052	-5.6467237	comment	3.0	20.0	1704951626	-10.599013
38957795	Kind of a misleading title. It's not	Kind of a misleading title. It's not next gen processors (you'd expect Zen 5). It's still Zen 4.	shmerl	9.258309	-5.187611	comment	3.0	11.0	1705002216	7.887661
38975735	Speaking of font differences, the de	Speaking of font differences, the default Windows emoji font is so bad I don't understand why Google doesn't just ship their Android emoji font with Chrome and default to that.	donatj	9.812955	-6.262921	comment	3.0	24.0	1705103277	-13.963117
38975878	The comments on that article are hil	The comments on that article are hilarious. Never in my life would I have expected someone to complain about a lack of professionality in an emoji set. Since when are emoji professional?	pohuing	9.791641	-6.263845	comment	3.0	15.0	1705104343	-13.961809
39013384	It reminds me of virtualization. An 	It reminds me of virtualization. An emulated CPU in a hypervisor will never perform as well as the physical CPU that is hosting it.	chatmasta	9.926513	-5.364183	comment	3.0	11.0	1705414089	-8.233026
39013024	How difficult is working with risc v	How difficult is working with risc v currently?I’m guessing back Linux works but most precompiled stuff not?	Havoc	9.404912	-5.6687126	comment	3.0	10.0	1705411708	-10.568993
39032381	Wow, how crazy is this? This guy:* D	Wow, how crazy is this? This guy:* Designed a 32-bit ISA with vector instructions [0]* Implemented it on an FPGA* Wrote a gcc backend for his ISA [1]* Ported Quake, and it seems to run pretty well (Quake required a high-end Pentium back in the day)Now this is a full-stack developer.[0] https://www.bitsnbites.eu/the-mrisc32-a-vector-first-cpu-des...[1] https://gitlab.com/mrisc32/mrisc32-gnu-toolchain	0xf00ff00f	9.544999	-5.5870175	comment	3.0	59.0	1705520358	-7.8739915
39036374	All three ISAs referenced as inspira	All three ISAs referenced as inspiration have the same (lack of) addressing modes: base register plus offset, and that's it.You don't want to argue with Seymour Cray. Or with John Mashey, for that matter.	brucehoult	9.782719	-5.8328795	comment	3.0	10.0	1705541898	-7.577754
39040017	>There are good reasons why 32-bit A	>There are good reasons why 32-bit Arm failed to compete with Intel for performance, and why x86 has failed to displace Arm in low-power markets. The things that you want to optimize for at different sizes are different.What if x86 CPUs werent designed for low power? e.g due to focus on competitivness in perf focused marketsSaying that one isa is faster or more energy efficient is like saying that c++ syntax is faster than java syntax.While there are lang features that enable stuff, then almost everything is up to the implementation - compiler, libraries, runtime and the programs code.One letters arent faster than the other. ISA doesnt imply perf. characteristics of the end product.Read this:https://chipsandcheese.com/2021/07/13/arm-or-x86-isa-doesnt-...Even if you start talking about deco	hardware2win	9.662095	-5.544237	comment	3.0	17.0	1705572703	-7.7917004
39057627	"Running this code on an ""on-prem"" AM"	"Running this code on an ""on-prem"" AMD EPYC 9454P with 12 x 64 GB DIMMs:  1 37.4
  2 73.3
  3 107.3
  4 141.4
  5 171.6
  6 199.5
  7 226.0
  8 251.1
  9 235.4
  10 243.0
  11 264.5
  12 281.9
  13 303.7
  14 323.0
  15 339.6
  16 354.4
  17 299.0
  18 286.3
  19 300.9
  20 310.6
  21 325.7
  22 339.2
  23 352.6
  24 364.3
  25 305.8
  26 309.0
  27 319.6
  28 326.5
  29 335.4
  30 345.5
  31 356.7
  32 364.9

And then it settles around there."	jakebsky	9.33026	-5.1994963	comment	3.0	13.0	1705683187	7.946712
39072104	Checked out RISC-V yet? That's becom	Checked out RISC-V yet? That's becoming more interesting than ARM for me.	hammyhavoc	9.405058	-5.6594257	comment	3.0	13.0	1705783486	-10.551627
32531279	Before Slack, I found it extremely d	Before Slack, I found it extremely difficult to send all those cat videos and emojis in emails. Worse still even if I tagged specific people in email to get their attention to watch my cat videos, it was always asynchronous and I never caught enough attention. Thanks to Slack, all attention is now on me and I'm well known in my company. So many emojis on my cat videos now.	tiktokcat	9.735488	-6.2276053	comment	3.0	14.0	1660996032	9.159531
32531362	I wonder if this could be done on a 	I wonder if this could be done on a FPGA..	sexy_panda	9.106423	-5.3520174	comment	3.0	17.0	1660996807	8.294062
32538881	Why not ECTS for the central section	Why not ECTS for the central section, too?	dukoid	9.478717	-5.5299115	comment	3.0	10.0	1661078145	8.417974
32559587	Now the clock begins on Apple switch	Now the clock begins on Apple switching to RISC-V	keepquestioning	9.394577	-5.6157656	comment	3.0	31.0	1661219078	-10.5260935
32559835	This seems very, very unlikely to me	This seems very, very unlikely to me. RISC-V is a very similar architecture to AArch64; I haven't heard a reason to expect it to have improved performance or efficiency. (Its only distinguishing feature (that I know of) is compressed instructions -- which ARM used to have (THUMB mode) before dropping support in AArch64, so presumably it doesn't help on Apple's systems with their huge caches and high memory bandwidth.)Rather, RISC-V's primary advantage over ARM is its openness; vendors can do whatever they want with the ISA without having to pay license fees or maintain compatibility. But this doesn't affect Apple at all; they co-founded ARM, and they have a huge amount of influence over the direction of the architecture along with some sort of special license that allows them to do things 	NobodyNada	9.432504	-5.586761	comment	3.0	27.0	1661221169	-10.52131
32574005	Without getting into details, AFAICT	Without getting into details, AFAICT they do not use any typical high-assurance software stacks, such as Ada or Spark or such that might be typical in avionics, like Airbus software. The use off-the-shelf tools like C++ and LLVM.	titzer	9.504105	-5.453044	comment	3.0	11.0	1661305108	5.3154087
32585359	Machine code is special because its 	Machine code is special because its the only thing the CPU can actually execute.	blueflow	9.775075	-5.4385595	comment	3.0	13.0	1661373195	-7.1376224
32608065	Any fab is allowed to produce a RISC	Any fab is allowed to produce a RISC-V CPU. You will also have far more core designs that can work across different fabrication possess.	worldofmatthew	9.3874035	-5.6334333	comment	3.0	11.0	1661524492	-10.568995
32612360	I mostly agree except that I'm not s	I mostly agree except that I'm not sure I'd say its very challenging technically. The logical design itself that I've seen is mostly extremely simple, just extensive. Verif is a bit fiddly but not really that hard, compared to e.g. writing a compiler or automating GUI testing. I don't know anything about physical design though; maybe that's really hard?I 100% agree with your other points though. It costs an absolute fortune, and everyone always underestimates the software effort. It's probably 5-10x the hardware effort, depending on what your chip does.Also another thing I didn't anticipate is how backwards all the tooling and people are in the chip design space. CI is a novel concept. I'm sure there are companies not using version control. Everything runs on TCL which is on par with BASIC	IshKebab	9.8384905	-5.5117793	comment	3.0	18.0	1661545624	1.718524
32623733	Tachyum: 128 Cores at 5.7GHZ with tw	Tachyum: 128 Cores at 5.7GHZ with two 1024 bit vector units each	fancyfredbot	9.475767	-5.1962347	story	3.0	23.0	1661638156	7.8004384
32626240	A year of RISC-V adventures: embraci	A year of RISC-V adventures: embracing chaos in your software journey [video]	pabs3	9.386674	-5.6730485	story	3.0	65.0	1661667866	-10.585975
32638597	Let's start at the edgest of cases.S	Let's start at the edgest of cases.Some emoji, for example, are combinations of multiple other emoji, and a given combined emoji may not be uniquely represented by a sequence of codepoints. In the pathological case, this could mean that an OS update on the user's system changes the composition of the same emoji, which might make it impossible for them to input their password. It is probably prudent for a system to disallow emoji passwords.One step away from Emoji, Unicode also allows for other m̸̱̜̅ͅȋ̴̩̠̀s̸̺͐c̶͈͇͉̐͛̚h̸̤̣̆i̴͍͍͒͌e̴̲̽̓f̸̞̽̊. Chances are, full-on Zalgo passwords can lead to problems. Again, there are probably prudent reasons to restrict some characters. On the other hand, those modifiers exist for a reason, and disallowing phrases in the user's native language doesn't make fo	phlo	9.894148	-6.2495484	comment	3.0	12.0	1661782765	-13.956742
39355779	The article sidesteps the question o	"The article sidesteps the question of whether the OS scheduler can operate the differential cores effectively. The 7900X3D and 7950X3D became infamous for having less practical performance compared to their lower-tier brother, because the scheduler couldn't grasp which cores to schedule threads on.Does Zen4+Zen4c have a ""Ryzen Thread Director"" of sorts? Everything I've heard up to this point suggests it does not, relying completely on the OS scheduler to just figure it out (spoiler: it won't).AMD might make great hardware, but they consistently seem to give nary a damn about software."	Dalewyn	9.290504	-5.2092223	comment	3.0	10.0	1707813684	7.8643575
39356452	Yes, provided it takes off like ARM 	Yes, provided it takes off like ARM does currently. On one hand the work being done on ARM right now is helping displace the x86-64 monoculture, on the other hand it might leave no niche for RISC-V to fill.Place your bets wisely.	rollcat	9.439182	-5.6663136	comment	3.0	10.0	1707821178	-10.537838
39356654	That's a bold statement. Any proof o	That's a bold statement. Any proof or article where Linus states that?	dayjaby	9.297162	-5.8769827	comment	3.0	13.0	1707822738	4.191124
39359011	As your workload grows in thread cou	As your workload grows in thread count, processors become limited by memory bandwidth per socket, as well as power and thermal constraints. The 'big' cores can only perform at their peak frequency, power draw and IPC when not in a high multicore workload. So you end up wasting silicon resources, power in an all-big core design. Instead if you make the last several cores to be turned on smaller and optimized for a lower power state, you can fit more of them in, and achieve higher overall thread throughput for a given die size or power/thermal envelope.So imagine you set a given budget for silicon die size and chip power. You might then have 3 design possibilities. Say 8 big cores, 16 little or 12 in hybrid. The hybrid design should be able to match the all-big in single/lightly threaded loa	tpurves	9.488493	-5.2546906	comment	3.0	16.0	1707840468	7.9520335
39407379	This articulates the problem I’m hav	This articulates the problem I’m having right now in an interesting way. I’m fine writing unit tests that validate business logic requirements or bug fixes, but writing tests that validate implementations to the point that they reimplement the same logic is a bit much.I want to figure out how to count the number of times a test has had to change with updated requirements vs how many defects they’ve prevented (vs how much wall clock time / compute resources they’ve consumed in running them).	sixstringtheory	9.845634	-5.353305	comment	3.0	11.0	1708156403	-4.5982876
39410100	Devices sold should work to a certai	Devices sold should work to a certain expected level. Regulators could define (or even just judges decide in a specific case that can be applied more generally) what that level is. Losing bits randomly isn't within the range of what is expected. The more memory there is, the more likely it is going to happen. And at some point devices without ECC could simply be returned as faulty for a full refund. ECC would be required, without any explicit rule.	almostnormal	9.510318	-5.574159	comment	3.0	14.0	1708182642	8.236721
39427158	There are two ECC types in DDR5: on-	There are two ECC types in DDR5: on-die ECC and external.All have on-die ECC, which always operates. It is relatively rare to have external; something like Kingston Server Premier, and then you would need a motherboard to support it e.g. some of the Asrock ones, or just a server motherboard (MSI D3051, etc.)AFAIK there's a performance hit using external ECC, as it adds an extra cycle. I think errors get reported to the OS differently. Beyond that, I know nothing.	PennRobotics	9.4812355	-5.5002947	comment	3.0	11.0	1708329164	-13.170983
39437981	Might be a noob question but for tru	Might be a noob question but for truly important data, couldn't SDCs be detected by using ECC everywhere?	opisthenar84	9.487857	-5.544126	comment	3.0	30.0	1708402281	8.305351
39438446	There are errors within the CPU.As f	There are errors within the CPU.As for adding ECC within the CPU, I think that would require you to essentially have a second CPU in parallel to compare against.	teaearlgraycold	9.425146	-5.4924746	comment	3.0	22.0	1708408659	8.190114
39440323	It's increasingly hard to test 32 bi	It's increasingly hard to test 32 bits -- I run a modern Ubuntu, they don't even provide 32 bits versions of most libraries any more, so I have to wonder why it's worth putting significant hours I to supporting 32bits, when it's unclear if there are even any users.	CJefferson	9.896132	-5.255762	comment	3.0	24.0	1708431168	-7.9042325
39440426	> Does any of this matter still or s	"> Does any of this matter still or should we embrace this 64 bit only world? Will CPU makers remove i686 support? I guess we're going to find out.We're already on this path, Intel has proposed an ""X86-S"" subset which drops support for booting into 16/32-bit modes (though 32-bit applications would still be supported under a 64-bit OS), ARM Cortex-A cores already dropped support for 32-bit boot a few years ago and the latest ones are also dropping support for 32-bit applications, so the whole stack has to be 64-bit. Apple preemptively killed 32-bit apps even on hardware that could technically still support them, and their current hardware doesn't support 32-bit at all, not even in Rosetta."	jsheard	9.801719	-5.2581177	comment	3.0	21.0	1708432054	-7.7805843
39445390	Per core licensing is pretty dumb, e	Per core licensing is pretty dumb, especially considering commodity systems now have 32, 64, or more cores, and server cores vary widely in capabilities.Per core maybe made a tiny bit of sense when a server was one or two cores. But that era's long gone.	geerlingguy	9.541554	-5.2682242	comment	3.0	12.0	1708455755	7.915231
39455453	Complete opposite of the direction t	"Complete opposite of the direction things have been moving in. Unless you're arguing that something that does general purpose computation, but also has special hardware/instructions to accelerate certain tasks, is no longer a CPU (in which case we haven't used CPUs for a while now, hardware accelerated encryption has 
been essentially standard on most CPUs for a while)."	dotnet00	9.566617	-5.194143	comment	3.0	10.0	1708531301	-4.260363
39481540	ARM has abysmal SIMD support. Not ev	ARM has abysmal SIMD support. Not even supporting AVX 256. for reference that is about a 10 year lag behind x86. Neon is not an adequate substitute. Additionally when AVX is used, the power draw of a ARM skyrockets to x86 level defeating the advantage ARM has over x86 while offering worse performance. ARM is good for things that require many threads and are not heavily dependent on incredibly high integer performance per thread. x86 is the dominate in high power, when individual thread power is more important due to application requirements or size limits or if they need to do anything with SIMD. ARM has a lot of push behind it. But it contrary to techbro hype., it is not a drop in replacement for x86 and I dont think it ever will without shooting themselves in the foot making them less ef	King1st	9.616709	-5.4009013	comment	3.0	10.0	1708701268	-7.764057
39484217	> extreme internal competition in In	> extreme internal competition in Intel to kill anything that might even vaguely threaten x86Actually, Intel has tried pretty hard to kill x86, multiple times, and failed. Most recently Itanium, but before that iAPX-432, and a couple others. New grand architectures to replace crusty old x86. But IMHO they were too academic. As you suggest, when an x86 is cheaper _and faster_ and compatible with existing software ... good luck replacing that.	ploxiln	9.531614	-5.2648616	comment	3.0	12.0	1708712476	-7.725364
39510807	It's a somewhat odd instruction set,	"It's a somewhat odd instruction set, but achieves the goal of code density by the register instructions being single byte (opcode + 4-bit register), and the odd pre/post-increment/decrement ""load/store indirect"" instructions which do things like acc = *reg++ useful for copy loops and push/pop operations.It reminds me a bit of the Apollo Guidance Computer (AGC) which also had a specialized decrement counter and loop instruction (CCS), presumably also just motivated by code size.Similar to having SWEET16 to augment the 6502, the AGC also used a virtual machine/interpreter to gain additional code density.https://en.wikipedia.org/wiki/Apollo_Guidance_Computerhttps://borja.medium.com/a-glimpse-into-the-apollo-guidance-..."	HarHarVeryFunny	9.886438	-5.8099513	comment	3.0	19.0	1708952532	-7.39708
39528571	I wish they'd put a huge FPGA on eve	I wish they'd put a huge FPGA on every device.	checker659	9.094677	-5.3318524	comment	3.0	17.0	1709062279	8.255738
39548405	Microsoft Copilot breaks down over i	Microsoft Copilot breaks down over inability to not use emoji	layer8	9.823649	-6.268569	story	3.0	4.0	1709209078	-13.95778
39549281	I know on Twitter/X the hashtag emoj	I know on Twitter/X the hashtag emoji isn’t a functional link, but curious why implementing functional hashtag emojis on Bluesky is considered a bug.Sort of related, I’d been waiting like 6 months and finally gained access to Bluesky but never used it because they didn’t allow me to use my emoji domain name(s) as my handle.	throwawaycities	9.808953	-6.2714763	comment	3.0	10.0	1709214805	-13.959181
39580749	Interesting step, their claim of wor	Interesting step, their claim of world's first RISC-V servers available in the cloud is true as far as I know.I see they list 3 officially supported GNU/Linux distros: Debian, Ubuntu, Alpine. I wonder how mature these are on RISC-V at this point and whether they're ready for production server usage.	MaxBarraclough	9.385793	-5.672198	comment	3.0	20.0	1709472991	9.796169
39585708	What's the recommended way to learn 	What's the recommended way to learn RISC-V assembly (including SIMD)? For ARM I just found a book I liked and did the exercises on my Mac M1 (replacing system call numbers etc and changing page sizes).	lewis1028282	9.512803	-5.799061	comment	3.0	11.0	1709510675	-10.532589
39588855	Text is too broad a category for ver	Text is too broad a category for version control for software to be convenient. I would much prefer version controlling on a subset of text that correctly parses to a domain specific AST. Imagine how much better and informative the diffs and conflict resolution and blames would be. Also imagine moving code across files, e.g. by splitting them and actually having your version control understand that. You could probably push bisects and the like to new levels.	0xfffafaCrash	8.875267	-6.377817	comment	3.0	11.0	1709547994	-11.458249
39593173	> Intel Previews Sierra Forest with 	> Intel Previews Sierra Forest with 288 E-Cores, Announces Granite Rapids-DFinally a processor which can run svchost.exe.How is the performance ?	hulitu	9.568047	-5.240473	comment	3.0	30.0	1709573475	7.823132
39594561	> Initially announced in February 20	> Initially announced in February 2022 during Intel's Investor Meeting, Intel is splitting its server roadmap into solutions featuring only performance (P) and efficiency (E) cores. We already know that Sierra Forest's new chips feature a full E-core architecture designed for maximum efficiency in scale-out, cloud-native, and contained environments.When they say splitting like that, do they mean there won’t be chips that feature both?Xeons with homogeneous big cores and Xeons with homogeneous little cores… why not call it Knights Forest?	bee_rider	9.427917	-5.2282753	comment	3.0	10.0	1709579247	7.95864
39628617	Does anyone know if there is any pro	"Does anyone know if there is any processor(in phone) with SVE/SVE2? 
As SVE/SVE2 SHOULD be in all new ARMv9.0-A + CPU cores.I did have a chance to test only Qualcomm Snapdragon cores ( Samsung Galaxy S23)."	xlazom00	9.569093	-5.294328	comment	3.0	12.0	1709817024	-7.8200393
39633981	"I'm about to pull a ""dropbox"" here, "	"I'm about to pull a ""dropbox"" here, but I am aware of many companies that already do this inside their Git infrastructure.  It's not that hard to do when you combine verilator, testbenches in software languages, and cloud CI intended for software.  This is one of the big advantages of greenfield designs (and FPGA companies): you can set things up for Verilator and/or CocoTB natively, and then you get to use things like Github actions to do continuous verification.If you can get the commercial simulators and full support for the awful, ass-backwards, industry-standard verification frameworks (eg UVM), there's a great business here, but the trouble is going to be in getting there."	pclmulqdq	9.629783	-5.814758	comment	3.0	14.0	1709841969	8.441764
39652204	And the line between the two is blur	And the line between the two is blurred now with MCU running at hundreds of MHz. The STM32H7 is has more IPC than the original Raspberry Pi.	gaudat	9.662035	-5.20314	comment	3.0	14.0	1709998063	7.382605
39654216	The article being from 2011 is perha	"The article being from 2011 is perhaps why it can be as long as it is without mentioning ""Coarse-grained reconfigurable arrays"", or CGRAs, which, at least as of 2019 when I learned about them, seemed to occupy a good middle ground between conventional CPUs and FPGAs.The idea is that, instead of being a bunch of gates like an FPGA, the components of the CGRA are at the scale of an ALU, or maybe an on-silicon network switch, with a single CGRA having different parts that are optimized for e.g. numerics, IO, encryption, caching, etc., which you can knit together into the processor you need.That's maybe where this idea went?Here's a more recent link covering similar ground:https://semiengineering.com/specialization-vs-generalization..."	reidacdc	9.123438	-5.3586297	comment	3.0	12.0	1710013648	8.269396
39653134	Indeed it is, but maybe they should 	Indeed it is, but maybe they should call it STM3264 :D	eqvinox	9.755659	-5.321704	comment	3.0	12.0	1710004841	-7.6889267
39666487	No hard core is a bummer.  I want to	No hard core is a bummer.  I want to see the first party SOM.	willis936	9.689426	-5.2951975	comment	3.0	13.0	1710154017	7.9254017
32650539	It says Windows, but is it x86 or x6	It says Windows, but is it x86 or x64?Can it make a binary that's both x86 and x64 for Windows? Is that even possible?	gwbas1c	9.885156	-5.3790483	comment	3.0	11.0	1661868048	-7.823512
32651184	It seems we are stuck at 16C/32T for	"It seems we are stuck at 16C/32T for desktop CPUs for a bit longer. I guess most things that scale beyond run even better on GPUs. But not all! I wonder if we will get non-""Pro"" Threadrippers this generation?"	account42	9.35951	-5.200002	comment	3.0	25.0	1661871054	7.953037
32651702	Didn't AVX-512 turned out to be a fl	"Didn't AVX-512 turned out to be a flop? e.g. https://en.wikipedia.org/wiki/AVX-512#Performance -""On some processors AVX-512 instructions cause a frequency throttling even greater than its predecessors, causing a penalty for mixed workloads. The additional downclocking is triggered by the 512-bit width of vectors and depend on the nature of instructions being executed, and using the 128 or 256-bit part of AVX-512 (AVX-512VL) does not trigger it. As a result, gcc and clang default to prefer using the 256-bit vectors. ()""() - https://stackoverflow.com/questions/56852812/simd-instructio..."	malkia	9.454367	-5.552901	comment	3.0	11.0	1661874068	-7.517298
32675423	Suing your customers is never a good	Suing your customers is never a good strategy (see the music industry).The logic really doesn't make sense. If you try to use a design made by someone else with an architecture licence and you have an architecture licence, ARM has to approve it?I guess they're trying to protect themselves as the sole seller of ARM designs, but even then Qualcomm didn't buy a design, they bought the company. ARM seems to be going overboard here.And all while RISC-V is nipping at their heels. It's like they want to make it really clear how troublesome licencing proprietary arches is.	dkjaudyeqooe	9.423741	-5.4906116	comment	3.0	31.0	1662035546	-10.476094
32680244	Amazing, manual optimizing with algo	Amazing, manual optimizing with algorithms like this can boost performance dramatically indeed. I wonder whether Intel provides AVX-512 optimized libraries for basic algorithms like sorting and searching, or for matrix multiplication? Without those libraries, and auto-vectorization still in research, we will have to hand craft algorithms with intrinsics, which is time consuming.	synergy20	9.497591	-5.620917	comment	3.0	23.0	1662054568	8.197635
32680617	This should be put into a docket ima	This should be put into a docket image to avoid various potential conflicts with locally installed libraries.Anyone do this for the M1?	sroussey	9.548963	-6.4340653	comment	3.0	10.0	1662055921	10.038593
32691504	QEMU is great, I'm just annoyed by i	"QEMU is great, I'm just annoyed by its UI. I'd much rather have a config file I can point it towards than an endlessly long shell script I can't comfortably use comments in (maybe this is a criticism of shell scripts in general).I guess libvirt would be the ""docker compose"" front-end, but I remember considering that more complex than would be necessary.I know Proxmox has some QEMU management tools (which I find decent), but they don't seem to be very popular outside of it.One cool QEMU thing I recently discovered is the microvm machine type (https://qemu.readthedocs.io/en/latest/system/i386/microvm.ht...), which enables it to spawn VMs just as quickly as Firecracker!It would be nicer yet if there was some way to say ""give me a shell in this ephemeral VM"" like docker does it, but sadly Kata"	solarkraft	9.883685	-5.8535748	comment	3.0	22.0	1662130173	10.092615
32700482	I remember how we once ran into trou	I remember how we once ran into trouble with a large timestamp counter in a FPGA implementation. (Was it just 64 bits, or 112 bits? Probably the full PTP timestamp, including fractional nanoseconds for precise drift corrections.)The extra bits of storage are cheap. The problem is the addition circuitry. With a small counter, you can do addition in a single clock cycle, very easy to implement. With a large counter, addition of the highest bit has to wait for completion of the previous one, etc. so if this takes longer than one clock cycle you have to implement a different, pipelined addition algorithm. (Or run everything at lower clock frequency.)	Matumio	9.169465	-5.3879733	comment	3.0	17.0	1662201083	8.196755
32741234	I'm ready to throw our old, expensiv	I'm ready to throw our old, expensive, and fairly slow flight computers with no drivers and terrible lead time to the curb and get on board with something new. Especially if an open ISA means that our systems will be more portable and faster to develop.	inamberclad	9.484646	-5.396412	comment	3.0	12.0	1662489418	-7.753228
32743734	Then what advantage does it have ove	Then what advantage does it have over ARM or x64? The ISA being open doesn't seem to make any difference at all.	UltraViolence	9.63108	-5.4256067	comment	3.0	12.0	1662501451	-7.7347536
32824046	What about a whimsical emoji as a va	What about a whimsical emoji as a variable name? lol.	danielvaughn	9.826587	-6.260507	comment	3.0	10.0	1663075978	-13.954607
32828726	Thanks for feedback re: robot emoji.	Thanks for feedback re: robot emoji. You can also use a backslash command if you want to add a new piece of text to the timeline from Slack.re: postmortem workflow. The timeline view is built to help postmortems, one of the ways we're doing this is making it easy to paste the info from the timeline as rich text or markdown from the timeline into your post mortem workflow. You'll see that on the top right of the timeline view. We have a lot more ideas in this area and will be investing in this.Curious if there is specific features you'd like for postmortems?	drc	9.718309	-6.1330943	comment	3.0	11.0	1663095453	3.9895093
32861702	Can somebody explain to somebody who	Can somebody explain to somebody who's apparently way too old for this stuff what RCS is if it's not Revision Control System?	inoffensivename	8.847564	-6.3709917	comment	3.0	11.0	1663298680	-11.718213
32865340	Arm fills in some gaps and details i	Arm fills in some gaps and details in server chip roadmaps	rbanffy	9.597297	-5.2234654	story	3.0	70.0	1663332122	-7.7448263
32867655	It also means that code using smalle	It also means that code using smaller vectors from an older version just gets faster, as long as the new core can schedule/retire instructions fast enough to keep up. If it can't then going for 256 bit is the best choice although it seems like newer chips are going for wider execution (and that each 128 bit unit is in fact individually accessible).	vgatherps	9.885911	-5.747991	comment	3.0	13.0	1663342931	8.181715
32891481	They're hardware, but not the same s	They're hardware, but not the same set of logic as the original systems. They still rely on reverse engineering efforts that occur when developing software-based emulators. They produce the end results that were measured from the original system, but not the exact behavior. As a result, they're not naturally more exact than a software emulator.Where the FPGA comes in handy is in concurrent logic and a fixed clock. This makes synchronization easy, and that is what makes software emulators much more demanding.	BearOso	9.038766	-5.2557216	comment	3.0	10.0	1663535018	8.346665
32894091	RISC-V is certainly a great option f	RISC-V is certainly a great option for low cost controllers because you can just slot in an existing design cheaply with minimal customisation. Most applications for ARM and RISC-V use existing standard base core designs to which you add whatever mix of additional components you need.So the real question is, where is the investment in the open RISC-V core architecture coming from? That’s what will push RISC-V forward. With ARM every time a small design house drops an ARM core into a SOC they pay a fee that funds further ARM architecture development. That’s not so with RISC-V. None of those Chinese design houses are making any significant investment in advancing the state of the art in RISC-V core design. Also those private shops that do innovate on the RISC-V core architecture don’t necess	simonh	9.381997	-5.6326413	comment	3.0	14.0	1663559467	-10.571341
32896420	Either you have an extremely broad i	Either you have an extremely broad interpretation of what open source is or you simply ignore all the cases where this didn’t happen or indeed the opposite occurred.Also I'm not quite sure how much of an advantage being open source is for RISC-V. Unless we’re taking about low cost chips with extremely narrow margins the licensing fee a manufacturer needs to pay ARM is insignificant. Even the price for an ARM architectural license is pocket change compared to the cost it would take to design a competitive core if you’re aiming for data-centers.A company like ARM (i.e. willing to license their designs and architecture  to anyone for a small fee, it's basically behaving like a non-profit compared to many other tech companies) seems like the best case scenario for the industry. With RISC-V why	qwytw	9.405685	-5.5489364	comment	3.0	27.0	1663582726	-10.50004
32897037	you are missing forest for the trees	"you are missing forest for the trees.ARM licensing allows USA to enforce their ""rule of law"" or whatever BS on the rest of the world, ""sanctions"" is a nice word that gets thrown around a bit....Tomorrow USA can force ARM to not sell products to countries on their naughty list. They can do that because of sanctions but what about those countries? why should say IRAN or russia not get to enjoy the fruits of open source because foss/open source does not care about such petty things, in the long run.If i  build a GPL software/hardware, i don't care if iranians or americans or russians or chinese use it. If i was building proprietary one, then i do care.>With RISC-V why would a company which designed a high-end CPU core license it to anyone instead of trying to maximize their profit/competitive"	2Gkashmiri	9.39871	-5.5109115	comment	3.0	10.0	1663587970	-10.553121
32897113	You sound like someone from the 90's	You sound like someone from the 90's dismissing Linux.The bottom line is that ARM represents vendor lock-in and broken market with only one seller. A company can take it upon itself to design a high-end processor for servers and be successful (like Apple did for user machines) but it's certain it won't choose the ARM arch, that would make no sense. Now that the RV arch is established and growing it's inevitable that it will be the arch of choice, because no-one in their right mind is going to tie their hands and donate money to ARM for nothing useful in return.Yes, CPUs are expensive to design, but it's amazing what a free and functioning market can produce. We're about to find out exactly what.	dkjaudyeqooe	9.588755	-5.186766	comment	3.0	16.0	1663588462	-7.788489
32917074	They were also producing SPARC chips	They were also producing SPARC chips for Sun by this point.Why on earth choose 68k when the entire market saw SPARC wiping the floor with CISC?EDIT: If Wikipedia is right, Fujitsu made the original SPARC v7 (MB86900) chips starting in 1986; T.I. didn't start SPARC manufacture until 1992 with a SPARC v8 (SPARCStation 10).	chasil	9.654124	-5.3167243	comment	3.0	13.0	1663704349	-7.6967945
32920846	What's new for RISC-V in LLVM 15	What's new for RISC-V in LLVM 15	todsacerdoti	9.386143	-5.703396	story	3.0	95.0	1663735067	-10.587795
32924762	The cache hierarchy and speculative 	The cache hierarchy and speculative execution are completely hidden at the level of assembly too, so I'm not sure what you're getting at.	kjeetgill	9.793497	-5.7638216	comment	3.0	11.0	1663766389	-6.826376
32943473	An OS built on top of WASM can provi	An OS built on top of WASM can provide modern features without the bloat of current CPUs, e.g. MMUs.	Laaas	9.825312	-5.219909	comment	3.0	13.0	1663874517	7.885012
32944816	This is awesome. I'm inspired to try	This is awesome. I'm inspired to try it on freebsd.  Docker is the killer app feature keeping me on Linux.	waynesonfire	9.714671	-6.4346247	comment	3.0	13.0	1663881863	10.532837
32965197	Yes I think you're right on StrongAR	Yes I think you're right on StrongARM which was the most powerful ARM CPU for a long time. Eventually made its way to Intel I think.I think everyone eventually had their own RISC - IBM, HP, AMD, Intel (i960)  plus MIPs and SPARC of course and a few others.Arm eventually got traction because of the business model and because they intentionally didn't go head to head with the Intel x86 juggernaut. It wasn't obvious for a long time that their model would work though.	klelatti	9.538392	-5.204673	comment	3.0	14.0	1664043192	-7.72667
32968765	Pink did get rolled into Taligent, t	"Pink did get rolled into Taligent, the Apple/IBM JV to overcome Windows NT.Remember that mac 68K system calls were via (""A-line"") opcodes, and their only extension/fix mechanism was head- and tail-patching those entry points.  1990 was only about 2 years after quickdraw was re-written in C instead of assembler.  Also, application developers made assumptions, e.g. sending F-line opcodes thinking any 68020 machine has an FPU (sorry!).  So OO looked like the way out from that tangle.Leaking tech docs were a big problem as Apple sought buy-in from partners.  The ""56"" watermark might have overtly supported traceability back to the recipient.  In ~1993 at Taligent we would also covertly vary variable names and such in sample code we delivered to different partners, after we found the code being "	w10-1	9.817055	-5.4451513	comment	3.0	14.0	1664077672	-7.475636
32970193	What would prevent, in your opinion,	What would prevent, in your opinion, to make some changes to current commodity hardware architectures (say, x64, arm...) to allow for mainframe-like scalability and reliability ?As per the article, how is the jitted/interpreted world of languages so bad ?	bionsystem	9.8485775	-5.5266986	comment	3.0	12.0	1664101696	-7.636054
32973006	Entirely different market 320xx vs A	Entirely different market 320xx vs ARM (at the time and even now). The simplicity you're advocating as successful for ARM was not applicable for the market NSC was attempting to compete in.The 320xx, like the 68k, was targeting the nascent Unix workstation market and minicomputer-competition. It was explicitly VAX like -- except simplified (apparently 32xx was quite a clean and consistent architecture). As others have pointed out, it supported everything needed for virtual memory (better than the 68k, actually)I am not sure ARMv1 (and v2) even had supervisor vs user mode, etc.? (It may have, Google isn't helping me here)Eventually the 68k ended up in consumer microcomputers (Amiga, Atari ST, etc.) but it started out in that same market. People who wanted to take a bite out of VAX's lunch (	cmrdporcupine	9.650348	-5.406831	comment	3.0	23.0	1664123564	-7.6292114
32984361	AMD EPYC Genoa will be a killing mac	AMD EPYC Genoa will be a killing machine, with almost 1TBytes/sec memory bandwidth and this avx512 extension...good luck for intel's xeon.	dis-sys	9.296061	-5.2015357	comment	3.0	12.0	1664205970	7.940786
32984907	Exciting stuff. AVX512 isn't just fo	Exciting stuff. AVX512 isn't just for specialized work projects. It's also a huge performance boost for game console emulation.	causi	9.441432	-5.562266	comment	3.0	12.0	1664208694	8.097626
32985872	Very interesting read. The author no	Very interesting read. The author notes that double pumping the 512 bit instructions to 256 bit execution units appears to be a good trade-off.As far as I understood ARMs new SIMD instruction set is able to map to execution units of arbitrary width. So it sounds to me like ARM is ahead of x86 in flexibility here and might be able to profit in the future.Maybe somebody with more in-depth knowledge could respond whether my understanding is correct.	smat	9.678079	-5.5544395	comment	3.0	10.0	1664213629	-7.7281175
32986485	I find the vpmullq part the most stu	I find the vpmullq part the most stunning.This instruction is used in some bignum code, for example if you are implementing RSA. Yet AMD implemented it three times faster than Intel.I'm also fascinated by AMD now making AVX512 worthwhile on consumer devices (where they would until quite recently artificially slow down Intel CPUs that had it), which presumably will lead to widespread adoption where it matters. Intels strategy of turning off AVX512 in the recent consumer devices because their energy efficiency cores don't have it may turn out to be a monumental mistake.	fefe23	9.447902	-5.535924	comment	3.0	25.0	1664216976	-0.24981146
32988299	Are there any CI/CD tools that are l	Are there any CI/CD tools that are likely to stand the test of time in the same way the basic unix ones have?I'm not against making things easier. But I feel like it's so easy to over-engineer and rely on proprietary crapware.Is there a conservative path forward here?	LAC-Tech	9.211668	-6.4278603	comment	3.0	10.0	1664225922	6.16781
16428187	"""CPU manufactures will not allow a m"	"""CPU manufactures will not allow a meltdown to happen.""No one in the office understands why i'm laughing...."	swarnie_	9.48748	-5.353303	comment	3.0	14.0	1519206208	7.782743
16430042	> Spectre and Meltdown have shown th	> Spectre and Meltdown have shown that there is no such thing as a true sandbox.On the Intel platform, perhaps. But that's only because of performance optimizations, so that statement is not universally true.	amelius	9.608102	-5.5430245	comment	3.0	11.0	1519226459	7.7720156
16433620	Intel ships, but only to vendors, wh	Intel ships, but only to vendors, while they could ship those damn microcodes directly on their website. We now have to wait for vendors to put those microcodes in their BIOS and release them...	vbernat	9.526348	-5.2970486	comment	3.0	11.0	1519252647	7.73796
16454525	It's not so insidious as you suggest	It's not so insidious as you suggest (from your link):VMware chose not to support 64 bit virtualization until AMD reintroduced (optional) segment limits on later models of their Opteron and Athlon 64 CPUs. Intel never implemented 64 bit segment limits on their EM64T/Intel64 CPUs, because their 64 bit processors soon implemented VT/Vanderpool, which also worked around the problem. So this is why VMware requires a certain model and stepping of the AMD CPU line or a VT-enabled Intel CPU in order to support 64 bit virtualization.Intel was the one that dropped segment limits, AMD added them in later...It sounds more like advances in hardware virtualization yielded better solutions than a bunch of additional segment registers and slow context switches. It's only now that we realize without those	dcow	9.706205	-5.4708257	comment	3.0	19.0	1519496698	7.940182
16519702	Still not available on the app store	Still not available on the app store. Are there _any_ apps actually taking advantage of this yet, other than the animated emoji? Kinda bummed I've not had anything nice to play with yet	peteretep	9.808993	-6.2442384	comment	3.0	28.0	1520240433	-13.951379
16522730	"> - the memory wall... ""The huge dif"	"> - the memory wall... ""The huge difference between CPU and DRAM growth rates led to the increased complexity of microprocessor memory hierarchies. Different levels of caches are needed to balance the differences in the bandwidth and latency needs of the CPU with those of the DRAM main memory.""The way to ""solve"" this is well known. You build buffers between the CPU and the Memory, and then execute as much as possible out-of-order. And that's the purpose of L1, L2, and L3 caches: to provide this out-of-order code enough data to work (while the CPU is waiting on slow, slow main-memory).However, contemporary RAM is not designed to coordinate with the CPU very well on this front, at least compared to designs like HMC (a type of ""stacked RAM"", a competitor to a GPU's HBM).HMC is interesting bec"	dragontamer	9.913437	-5.4634185	comment	3.0	11.0	1520271545	8.136209
16550390	Ask HN: What do you use to notify yo	Ask HN: What do you use to notify your team from WebHooks?	ocolot	9.023835	-6.391404	story	3.0	1.0	1520582738	-11.90788
16560569	My understanding is that in the 6502	"My understanding is that in the 6502 (NMOS) chip, those other opcodes had undefined behavior, and you might crash if you executed one. So you'd need to know who was the manufacturer to be certain that opcode X was available.In the CMOS version (65C02), illegal opcodes are treated similarly to NOPs--they don't crash, and don't do anything other than spend cycles--with the caveat that certain of these ""illegal"" opcodes have specific numbers of cycles and bytes that they consume which are different from other illegal opcodes. More confusingly, there is an actual proper NOP instruction (0xEA), which consumes the one opcode byte and two cycles, which exists in both the CMOS and NMOS version of the chip.So some of the illegal opcodes are just like NOP, and eat one byte and two cycles; some eat t"	peterevans	9.803761	-5.6260552	comment	3.0	11.0	1520722174	-7.4328957
16566803	I wonder if there'd be any practical	I wonder if there'd be any practical use of this enhanced 6502 in the modern world?  Implemented in VHDL/Verilog perhaps?	jacobush	9.573352	-5.324703	comment	3.0	10.0	1520843405	-7.422006
16566698	Yes. I must say I chuckled a bit whe	Yes. I must say I chuckled a bit when I saw the headline. Intel is still churning out 63% gross margins. On semiconductors. That is exceptional.Intel is not fighting for its life by any stretch of the imagination.	ttul	9.3352585	-5.1884756	comment	3.0	18.0	1520840543	7.7806187
16567357	I'm always amazed how easy it is to 	I'm always amazed how easy it is to lure people with castrated fancy UI and things like emoji.	gkya	9.793791	-6.268347	comment	3.0	12.0	1520853213	12.921271
16568005	All I want is a single socket CPU an	All I want is a single socket CPU and a motherboard that supports ECC/isn't total garbage. AMD has said it's on the motherboard manufacturers, and I haven't been able to get a straight answer as to whether ECC works as it should on motherboards that support Ryzen - https://www.reddit.com/r/Amd/comments/80wpd1/ryzen_2_ecc_sup...	karpodiem	9.376438	-5.474358	comment	3.0	17.0	1520861586	8.202287
16577603	Yeah it's suspicious. The website[1]	"Yeah it's suspicious. The website[1] has many fancy infographics, marketable names and fear mongering but you have to dig into the whitepaper[2] to find any details about the actual vulnerabilities. And even then it starts only on page 8 of 20 and you discover that it's vulnerabilities targeting the secure boot infrastructure and you need local admin to exploit them. It's not good but it's not a new Spectre or Meltdown.If I was the tinfoil hat type I'd guess that Intel is trying to spread FUD but maybe it's just security researchers trying to generate a bit of buzz for their company at the expense of AMD.[1] https://www.amdflaws.com/
[2] https://safefirmware.com/amdflaws_whitepaper.pdf"	simias	9.42514	-5.2488346	comment	3.0	28.0	1520960507	7.746924
16579384	> While this may look like code in a	> While this may look like code in a normal programming language, it operates entirely differently.So happy to see this called out up-front. One of the hardest things with FPGAs as a developer is understanding that you're reconfiguring hardware instead of a series of serial asm/opcodes. They look superficially the same but have very different requirements and constraints under the hood.	vvanders	9.109062	-5.368676	comment	3.0	25.0	1520972175	8.3472595
16579288	Sourcegraph Server 2.6: Symbol searc	Sourcegraph Server 2.6: Symbol search for 75+ languages	slimsag	8.775642	-6.0768895	story	3.0	42.0	1520971509	-11.36525
16579006	The course focuses on synthesizable 	The course focuses on synthesizable Verilog for FPGAs, so our instructor has made sure to clarify the upsides and downsides to using different logic for common tasks.Some interesting ones:* Never use asynchronous resets [on FPGAs]* if-else if-else chaining leads to unnecessary delays (priority encoders)* Avoid latches by making sure to assign default values* Never assume default values and/or states	Cyph0n	9.111525	-5.460406	comment	3.0	18.0	1520969346	8.456162
16579797	For those looking for cheap FPGA boa	For those looking for cheap FPGA boards, I highly recommend looking for something that is based on the Lattice ICE40. The cheapest board you can find is probably the $9 Upduino, though trickier to get going. (Complete lack of documentation.)But there are tons of hobby boards in existence.The best part is Project IceStorm, a fully open source tool flow, from synthesis to bitstream. While not the best in terms of optimization, it's killer feature is that it's blazing fast. You can get small design synthesized and converted to a place-and-routed bitstream in under a minute.	TomVDB	9.09934	-5.3228617	comment	3.0	11.0	1520975251	8.297586
16580262	I think you're missing my point ;). 	I think you're missing my point ;). You shouldn't be trying to think in imperative or functional programming because fundamentally FPGAs/HDL isn't programming.You should be thinking in terms of state machines, pipelines, routing, delay & setup+hold constraints.HDLs are just a high-powered blueprint languages. At the end of the day you're still just laying out physical blocks.	vvanders	9.103921	-5.4660506	comment	3.0	11.0	1520978377	8.556572
16579790	Processor Microcode for Linux	Processor Microcode for Linux	swills	9.606064	-5.387258	story	3.0	38.0	1520975207	7.7321086
16582859	It seems a little more nefarious tha	It seems a little more nefarious than that. From what I am reading it seems that the group that is releasing the vulnerabilities has created a fake research firm and released an analysis attacking AMD. That parts reeks of market manipulation.	jjeaff	9.2542305	-5.2211857	comment	3.0	10.0	1521010751	7.8636775
16581536	> under the hoodSurely, we don't hav	"> under the hoodSurely, we don't have to work with raw quantum electrodynamics when designing an FPGA, even though that's what's going on ""under the hood"".Thinking that way, gets me wondering about different layers of abstraction along with the benefits and drawbacks of each. With FPGA programming, what levels of abstraction are available and what simplifying assumptions does each model make?I've got in mind things like Kirchhoff's laws, where we assume perfectly conducting wires, discrete elements, a conservative ambient B field, and essentially DC current over the size of circuit elements. When those assumptions start breaking down, then we can drop down a layer of abstraction."	xelxebar	9.105199	-5.4213486	comment	3.0	10.0	1520991325	8.380845
16583541	Yes, but then promoting the Raspberr	"Yes, but then promoting the Raspberry Pi as ""64 bit product"" seems almost gimmicky to me. Ok, you switched to an AArch64 chip, but that was simply because it's what your supplier was producing at that time. It makes no sense to me to promote a feature you don't support or make use of, if not for simple and pure marketing reasons."	qalmakka	9.788115	-5.2719173	comment	3.0	13.0	1521021826	-7.7437162
16616289	How does this scale once you have mu	How does this scale once you have multiple developers/teams and an automated CI/CD process in place? Could you elaborate on how to manage this manual step (potentially for multiple environments) when an automated deployment depends on them being done?	place1	9.248572	-6.4197206	comment	3.0	10.0	1521436133	6.204123
16651887	With all the stuff running on x86 fo	With all the stuff running on x86 for the past 30 years + all the perf optimizations in compilers it's not hard to figure.If ARM or Power were faster than x86 we would be using it right now on servers, most of the top500 HPC clusters run on x86_64 ( Intel Xeon ).	Thaxll	9.613618	-5.3912506	comment	3.0	11.0	1521746974	-7.592318
16670070	Bringing back Skype emojis to my fin	Bringing back Skype emojis to my fingertips	pi-squared	9.793305	-6.2640743	story	3.0	16.0	1521940808	-13.95336
16694271	>AFAIK started before Meltdown was d	>AFAIK started before Meltdown was discoveredsource?	gruez	9.572098	-5.450577	comment	3.0	10.0	1522199008	7.6898723
16695871	Has anyone actually confirmed this b	Has anyone actually confirmed this bug? The author seems to be an expert in low-level DMA security, but it would be nice to see independent confirmation. Reading through the comments so far, it doesn't seem so. The closest anyone comes is this: https://news.ycombinator.com/item?id=16693599I was hoping to see someone who said:(1) I tested a Windows 7 X64 machine without the Meltdown patch (pre-December 2017) and couldn't read arbitrary memory.(2) Next I tested with Microsoft's Meltdown patch KBnnnnnnn (Jan or Feb 2018) and could read arbitrary memory. The system is insecure.(3) I then tested with Microsoft patch KBnnnnnnn (March 2018) and can no longer read arbitrary memory. They fixed it.	computator	9.905587	-5.728222	comment	3.0	10.0	1522219166	8.214811
16720770	It would be nice to credit this expl	It would be nice to credit this explanation to Linus.	halayli	9.294846	-5.88882	comment	3.0	10.0	1522454092	4.238626
16725357	Maybe because they have less and les	"Maybe because they have less and less people who know how to read and program with this particular assembly language?The program was written more than 40 years ago, most of the people who wrote it are probably retired now.Also, it's not a ""mainstream but old CPU"" like a Z80 or a 6502, given the constrains of a space probe it's probably more a custom thing developped specifically for these (kinds of) missions."	kakwa_	9.621938	-5.3192086	comment	3.0	13.0	1522533062	-7.311303
16737370	Is the IP/licensing situation partic	Is the IP/licensing situation particularly onerous here to prevent making their own x86_64 chip?	bobwaycott	9.530449	-5.225483	comment	3.0	22.0	1522692706	-7.7429495
16737706	What if it turns out not to be based	What if it turns out not to be based on the ARM architecture?	otterley	9.645497	-5.2460504	comment	3.0	26.0	1522694185	-7.707305
16745020	So, are those chips immune to the Sp	So, are those chips immune to the Spectre and meltdown already ?...	slipwalker	9.6375675	-5.556753	comment	3.0	10.0	1522766336	7.6701403
16751670	Until you can run x86_64 at native s	Until you can run x86_64 at native speeds, replacing it will take a long time.	colejohnson66	9.795855	-5.324478	comment	3.0	10.0	1522812860	-7.763909
16762099	Ok, I this might sound pesky but wha	"Ok, I this might sound pesky but what's Linus referring to when he says ""my kernel"". Is he referring to his personal kernel or Linux kernel in general."	atomicnumber1	9.495412	-5.8191705	comment	3.0	14.0	1522906712	4.2554617
16766752	And everytime, someone mentions how 	And everytime, someone mentions how ecc memory is important. But it's just not. There is a performance penalty, and the real use case for ecc memory is vanishingly small for a workstation.What could you possibly be doing on a workstation that requires ecc?For every 8 gb of memory, you are potentially looking at a single bit flip every 9 years. With ecc, only once every 45 years. And in exchange, you are looking at a 10% performance penalty.What could you possibly be doing on a Mac pro that would need that kind of accuracy?	jjeaff	9.480678	-5.5581255	comment	3.0	16.0	1522948155	8.266943
16774863	This exists, it’s very common to hav	This exists, it’s very common to have a human readable format for development and storage in version control that gets converted to a binary format for release. What doesn’t really exist is a common inter-engine format.	meheleventyone	8.990825	-6.3672047	comment	3.0	11.0	1523034038	-11.652119
16776740	What is the software this site is ma	What is the software this site is made of? Wordpress? GitHub pages? or Custom? It looks so cool. I am interested to know the details	the_arun	8.787664	-5.9132977	comment	3.0	10.0	1523044045	4.4201794
16797623	FPGAs can't come soon enough.	FPGAs can't come soon enough.	ckocagil	9.082581	-5.3432574	comment	3.0	12.0	1523313822	8.32808
19310079	> That doesn't protect you all that 	"> That doesn't protect you all that much. While this particular flaw seems from current reports to be Intel specific, some of the past ones affected AMD and Arm designs also, and maybe there are some AMD/Arm/other specific attacks waiting to be found too.I think this is called ""security through minority"" which is a special case of ""security through obscurity"" :)"	dvdkhlng	9.486461	-5.2755685	comment	3.0	10.0	1551789030	7.8233776
19310233	I'm beginning to think crypto operat	I'm beginning to think crypto operations should no longer be implemented in code on general purpose cpus.	exabrial	9.565587	-5.2093167	comment	3.0	11.0	1551791233	7.9041243
19309932	> these days browsers are handing ov	> these days browsers are handing over footholds to anyone with a webserverIt is bad for providers using non-dedicated cloud infrastructure too: some of these flaws allow breaking out of the hypervisor's protections so an attacker can in theory read from other VMs on the same infrastructure not just other processes on your (virtual)server.> I've been using AMD CPUs exclusively on the desktopThat doesn't protect you all that much. While this particular flaw seems from current reports to be Intel specific, some of the past ones affected AMD and Arm designs also, and maybe there are some AMD/Arm/other specific attacks waiting to be found too.	dspillett	9.538845	-5.271154	comment	3.0	13.0	1551786993	7.8068085
19314811	Keil has a completely free version o	Keil has a completely free version of their compiler for STM32F0, STM32G0, and STM32L0 micros: https://www2.keil.com/stmicroelectronics-stm32/mdk	swamp40	9.787967	-5.2690716	comment	3.0	14.0	1551824499	-7.5785804
19313936	Spoiler: Speculative Load Hazards Bo	Spoiler: Speculative Load Hazards Boost Rowhammer and Cache Attacks	archgoon	9.614463	-5.6574817	story	3.0	35.0	1551817850	-13.891732
19315716	If memory is operating correctly, th	"If memory is operating correctly, then the value last written to any location should always be the one which is read back. Any deviation from that means there is something wrong, in the same way that a calculator which intermittently produces 1+1=3 would be considered broken.The fact that the correctness of software since the beginning of computing depends on the correctness of the hardware means that it's not a ""trade-off"", memory that doesn't behave like memory should is simply defective. The $$$-chasing manufacturers would like you to think otherwise, however, and IMHO there's been a huge cover-up --- which the manufacturers certainly are trying hard at; just imagine recalling every single DRAM produced in the last 10 years.Security is only one important piece of the whole story. Imagin"	userbinator	9.779835	-5.5135775	comment	3.0	10.0	1551835182	8.279725
19317501	Emojis are a plot to make English-sp	Emojis are a plot to make English-speaking developers care about fixing their code to work with Unicode.	billpg	9.845536	-6.2657285	comment	3.0	14.0	1551864332	-13.957916
19326624	I really think people put more focus	I really think people put more focus in the RISC vs CISC dichotomy than it deserves. ARMv8 CPUs have microcode, a mixture of instruction sizes, instructions which take more than one clock cycle to complete, and a very large number of instructions overall - i.e. probably doesn't fit into most traditional definitions of RISC.The challenges that ARM face while competing with x86 are software maturity, and moving away from low-cost low-power designs towards larger and more performant design (which will consume more power and cost more than traditional ARM designs)	ch_123	9.463385	-5.626688	comment	3.0	22.0	1551950048	-10.439919
19327140	BTW ARM does not stand for “Advanced	BTW ARM does not stand for “Advanced RISC Machines” as author says but “Acorn RISC Machines”. ARM was originally a joint venture between Acorn and Apple.	gumby	9.53946	-5.3567247	comment	3.0	11.0	1551956866	-7.7686577
19327924	Except that nearly all the RISCs hav	"Except that nearly all the RISCs have a 16-bit instruction extension which brings their instruction density nearly equal to the CISCs' one.
And the decoding remain much simpler than the CISC's one.That said ForwardCom blur the bondary between CISC and RISC.."	renox	9.483694	-5.7193303	comment	3.0	13.0	1551966292	-10.514707
19329799	>>FOSS and reading all the code...Do	>>FOSS and reading all the code...Don't forget, you have to compile from source as well. I'm thinking the parent you replied to forgot how awful sourceforge was, and even trustworthy projects could have garbage bundled in.	zrobotics	8.783933	-5.997404	comment	3.0	18.0	1551978715	-11.654176
19345979	Wow...that's a pretty crazy approach	Wow...that's a pretty crazy approach.  Userland x86 emulation on an arm device, and a ton of ASM code and a sort of JIT.  Guess options are limited in a walled garden.Edit: Found an HN discussion about it: https://news.ycombinator.com/item?id=18421016	tyingq	9.769048	-5.368562	comment	3.0	11.0	1552137528	-7.666558
19346298	Its a good article but the author mi	Its a good article but the author missed the third reason hardware can be vastly cheaper, which is lack of abstraction.You can use google search to add 0x9 + 0x2 and get hexadecimal 0xb... however that involves dozens of layers of abstraction and endless formatting and parsing that are fundamentally useless in the long run for something like a GPU display.The 4th reason hardware is vastly cheaper is it needs less testing.In the example above you can either trust your FPGA/ASIC software to implement a byte-wide full adder properly, because thats kinda a basic task for that technology, or you can whack the byte-wide adder with all possible test cases in a couple ns on real hardware, all possible binary inputs and outputs are quite well known and trivial.  When you ask google, or worse, alexa	VLM	9.124056	-5.3039722	comment	3.0	14.0	1552142349	8.297364
19369096	Does anybody else feel GH has a much	Does anybody else feel GH has a much higher than normal incident rate?	MuffinFlavored	8.891421	-5.8586426	comment	3.0	11.0	1552404691	-1.3172657
19389842	SweRV – An Annotated Deep Dive of th	SweRV – An Annotated Deep Dive of the SweRV RISC-V Core	matt_d	9.377665	-5.6770205	story	3.0	113.0	1552575857	-10.565822
19396464	Can you expand on the CPUs that supp	Can you expand on the CPUs that support 128 bit AES but not 256 bit? I didn't know that was a possibility.	tedunangst	9.454813	-5.239428	comment	3.0	10.0	1552623314	8.065734
19421476	AMD products are not susceptible to 	AMD products are not susceptible to SPOILER exploit	montalbano	9.278492	-5.255217	story	3.0	101.0	1552920540	7.840422
19430439	It’s very likely that the high DRAM 	It’s very likely that the high DRAM prices from 2017 to now have been due to market collusion, similar to what happened in 2010.Like your example shows, they’ve basically set the entire industry back years for a modest profit.  It’s heinous.	CoolGuySteve	9.7043495	-5.2558703	comment	3.0	13.0	1553001252	7.9984283
19437560	Ask HN: What are the small things th	Ask HN: What are the small things that you’d automate in a software dev team?	prabugp	9.71285	-6.384441	story	3.0	6.0	1553040894	2.3035522
19445566	What has your microcode done for you	What has your microcode done for you lately?	matt_d	9.601124	-5.3564067	story	3.0	90.0	1553108219	7.7330837
19448377	I suspect if you were to compare cod	"I suspect if you were to compare code that uses both the remainder and quotient of a division, you would find a similar trend: the x86 division instructions produce both, but ARM has only a quotient-generating division instruction, and you have to do another multiplication(!) and subtraction to get the remainder.That, along with the fact that earlier ARMs didn't even have a divide instruction, is one of the reasons why I'm not at all fan of the ""RISC approach"" --- division may not have been easy to implement, but microcoding would've been at least as fast as doing the algorithm in software while taking up far less space, and with hardware advances that move operations from microcode into direct execution, existing software that already has those instructions would automatically become fast"	userbinator	9.588434	-5.5623856	comment	3.0	12.0	1553128794	-10.392206
19460631	Side remark : has anyone talked to l	Side remark : has anyone talked to linus the same way he did to others following a bug linus has coded himself ? Like, calling something he did a piece of trash, or something similar.	bsaul	9.281333	-5.894473	comment	3.0	20.0	1553245034	4.261542
19463705	Genuine question related to riscv: w	"Genuine question related to riscv: what is the value of a standard when a majority of it is part of optional extensions? Doesn't that make riscv a ton of distinct standards, marketed as one?RV32I is nothing close to RV64IMAFDQCPBS. It seems like all the fragmentation standards are made to avoid packaged up as a ""standard"" to make sure everything under the sun can use risc-v.(see also usb-c)"	tntn	9.400996	-5.710196	comment	3.0	11.0	1553269793	-10.547664
19463741	I really want to see an introspectiv	I really want to see an introspective, single-user, programming-centric, graphical operating system that isn’t dumbed down to the lowest common denominator. A new ISA seems like a great opportunity to ditch the current models of computing for something more Genera-esque, since we now can produce commodity hardware that is powerful enough to achieve good performance at reasonable prices.	snazz	9.578029	-5.473839	comment	3.0	13.0	1553270026	-7.708583
19477817	> Alpha is a great example of an ISA	"> Alpha is a great example of an ISA being pretty obsolete outside of owning an old DEC computerActually, that isn't the case. The Chinese Sunway is based on the Alpha 21164 [1]. The Sunway TaihuLight is 3rd on the supercomputer list [2].[1] https://en.wikipedia.org/wiki/Sunway_(processor)
[2] https://www.top500.org/lists/2018/11/(In fact, the Sunway SW26010 has moved on from the Alpha but is still heavily inspired by it.)As for RISC-V itself, I'd be interested in a comparison article between RISC-V and Cray. I think Seymour Cray came up with most good RISC ideas long before Patterson+Ditzel. Indeed, RISC-V is now basing their vector extension on ... Cray. RISC-V as an open source ISA/implementation is one thing. But as a collection of ideas it is another.What ideas distinguish RISC-V from"	CalChris	9.407873	-5.694068	comment	3.0	15.0	1553451479	-10.555966
19480710	Tangential question: how does single	Tangential question: how does single cycle multiplication works in arm cortex processors? Do they just run the ALU clock fast enough that the multiplication finishes in one visible core cycle or is there a binary trick?	nraynaud	9.645671	-5.3790812	comment	3.0	22.0	1553496216	8.394307
19488650	IBM seems to have no official statem	"IBM seems to have no official statement about whether z is vulnerable to Spectre but Power7/8/9 are/were definitely affected. Fujitsu SPARC is also vulnerable but interestingly Oracle SPARC is not. If Alpha, MIPS, or PA-RISC still existed I would expect most of them to be vulnerable as well.Are there specific hardware mechanisms in ""real"" server processors that can provide high performance without side channels? What are they?"	wmf	9.585934	-5.5382867	comment	3.0	10.0	1553565592	7.825895
19490746	> It was more than clear that the FO	> It was more than clear that the FOSS for all wasn't sustainable long term, hence why we are slowly getting back to the freeware days.Someone should tell RedHat. And Debian. And, y'know, Linux. I'm sure Linus will be devastated to hear that the last couple of decades have just been a fluke.	yjftsjthsd-h	9.450267	-5.786985	comment	3.0	15.0	1553599678	4.2506094
19493938	I'll grant that a lot of code can't 	I'll grant that a lot of code can't be readily adapted to large vectors, but this doesn't seem like much of a problem for (proposed) RISC-V. If you're creating an algorithm that only works on a specific width, you can just `setvl` and assert that you have enough space available. You're likely targeting a specific CPU or class of CPU where you know there will be support for 256-bit vectors or whatever. If someone tries to run it on a cheap embedded CPU, they'll be disappointed that your code won't run on their 64-bit vectors, but this is no different from trying to run AVX code on an Intel Atom.I suppose it's hard to know until we can actually write code for it, but I haven't imagined a scenario where the RV model is significantly worse than packed SIMD, other than a tiny bit of vector conf	mastax	9.720618	-5.9624085	comment	3.0	10.0	1553620909	-10.508794
19512195	The emojis one have the nice propert	The emojis one have the nice property that close addresses share some words.	ajuc	9.803125	-6.266792	comment	3.0	16.0	1553781389	13.026058
19531399	Breaking Deniability in Signal with 	Breaking Deniability in Signal with SGX [pdf]	Cortuld1935	9.548746	-5.2116075	story	3.0	39.0	1553975515	7.100078
19535051	I'm not sure what performance looks 	I'm not sure what performance looks like on 4 POWER cores vs 32 ARM cores; seems like it might win. Genuinely curious; would love to see benchmarks.	yjftsjthsd-h	9.446749	-5.227085	comment	3.0	17.0	1554031991	7.816728
19535312	>  Out of interest: What would one c	>  Out of interest: What would one consider as the most secure, commercially available computer architecture?Define your limits.For the everyday, you won't get far. Intel, AMD and others have all been shown to have problems like this, or at least things they specify for government agencies.However, tiny computer architectures like MIPS, AVR and the like probably don't, simply because they tend to be too small. They don't have the memory for advanced backdoor techniques... But are trivial to access their memory if you have physical access.Straight-up RISC-V is too new to truly trust security, but looks fairly great... Until you realise that almost everyone is going to add their own proprietary extensions to it, and those extensions may well include things like VISA.---The Raspberry Pi uses 	shakna	9.422362	-5.5264525	comment	3.0	14.0	1554036632	-10.468769
19536092	You never heard of intel IME or amd 	You never heard of intel IME or amd PSP?It's a mips microprocessor inside your cpu, completely undocumented and has access to the memory, peripherals, network interface etc.	kacamak	9.425044	-5.2081656	comment	3.0	15.0	1554046428	7.807511
19551862	Verilator has some serious limitatio	"Verilator has some serious limitations:  The driving test bench is C/C++
  It is a cycle simulator, not a delta-time simulator: it will 
  only simulate synthesizable code (not test bench code) 
  It cannot do back-annotated timing simulations
  It cannot use encrypted vendor libraries (no simulations with Xilinx IP, for example)
  It has no mixed-HDL language capabilities
  It requires Gtkwave to view waveforms with (opinion, but I hate the UI)

It is a terrible recommendation for beginners - you'd be much better served by using Xilinx Vivado's inbuilt simulator and waveform viewer."	analognoise	9.115629	-5.4670095	comment	3.0	11.0	1554190609	8.565047
19561603	There's one very popular emoji I par	"There's one very popular emoji I particularly hate: https://emojipedia.org/face-with-tears-of-joy/.Why? Because a) it looks bad (one of the worst made emojis out there), and b) when someone sends it to me, I have no clue what they mean. While it's technically ""crying with joy"", it also resembles crying with despair - and with regular people, who don't even know what ""emoji"" is or that they have names, I can't be 100% sure which interpretation they picked."	TeMPOraL	9.798128	-6.2628183	comment	3.0	15.0	1554277997	-13.965476
19562413	But the context here are conversatio	But the context here are conversation which appear in the court records. So they're either breaches of a civil agreement, or criminal law.By all means use them in your day to day conversations, but if you expect your messages to ever require interpretation in a court of law, and you don't want a jury to decide what you meant by eggplant, kissy face, don't use emoji.Or, conversely, if you want to be ambiguous, like say you're a pimp communicating to his prostitutes, emoji usage might work in your favor.	huffmsa	9.778795	-6.257725	comment	3.0	12.0	1554290031	-13.957706
19562587	You could literally replace that emo	"You could literally replace that emoji with the well known phrase ""wink, wink."" It is well understood and avoids the ambiguity of emoji."	nulbyte	9.820789	-6.247161	comment	3.0	12.0	1554292521	-13.944503
19565343	> She's gets called a stupid bitch a	> She's gets called a stupid bitch and told girls can't code, and that she should go back to her dolls, or back into the kitchen. She decides to drop her idea of becoming an engineer.This is a complete strawman. Linus has never said anything like this and neither has any other open source leader to the best of my knowledge. Not even close.	malvosenior	9.309118	-5.85514	comment	3.0	14.0	1554313049	4.211781
19571537	I can claim that for the list if you	I can claim that for the list if you want. Torvalds is American and lives in Oregon; most of the major Linux contributors were sponsored by American companies if I recall correctly. Red Hats and IBMs of the world.America must be doing something right.	roenxi	9.480574	-5.7673616	comment	3.0	11.0	1554381895	-8.15729
19573463	I'm wary of running anything with da	I'm wary of running anything with data I care about on a device without ECC RAM.From the docs:> PostgreSQL does not protect against correctable memory errors and it is assumed you will operate using RAM that uses industry standard Error Correcting Codes (ECC) or better protection.https://www.postgresql.org/docs/11/wal-reliability.htmlRe: IS ECC RAM really needed?https://www.postgresql.org/message-id/20070526145214.GA21290...	jxcl	9.49487	-5.5257463	comment	3.0	11.0	1554391796	8.241486
19599689	Amazing. Just what I needed today, w	Amazing. Just what I needed today, when I was writing OpenRisc processor definition for sleigh. :)	megous	9.481138	-5.4606295	comment	3.0	12.0	1554669547	-10.478709
19608586	Intel went to LGA where we the pins 	Intel went to LGA where we the pins are on the motherboard. In my experience they are much less likely to be damaged there as they get protection from the socket.I’m not sure why AMD stuck with PGA.	jdsully	9.236515	-5.1843834	comment	3.0	11.0	1554754209	7.8295655
19622144	Its not like 32 bit applications are	"Its not like 32 bit applications are more efficient than 64 bit applications.Yeah it is. You need to move 7 bits through memory and through the CPU, is it more efficient to pad it with 25 blank bits and move 32 bits overall, or pad with 57 blank bits and move 64 bits overall?Which is doing things ""more efficiently"" and ""better using"" the hardware?"	jodrellblank	9.843821	-5.4428988	comment	3.0	13.0	1554874720	7.8844156
19643233	I have been asked twice or more why 	I have been asked twice or more why I insisted on not using a Continuous Integration environment for publishing some software releases that are installed by third-parties.My team was automating the infrastructure to build internal software and naturally they wanted to be able to simplify things.The idea that was proposed to me was the following: once I push a new version tag to GitHub, the deployment CI server is going to build and release it as an unstable version.Some important detail here: I use the same key to sign packages regardless if they are released as unstable or stable. That would mean that if someone, somehow, managed to push a tag that was pushed upstream to GitHub, hypothetically they would be able to eventually gain access to consumers machines (basically, developers) when 	henvic	8.748451	-6.4150515	comment	3.0	13.0	1555059745	-11.869562
19664479	Wave Computing Launches TritonAI 64 	Wave Computing Launches TritonAI 64 Platform for High-Speed Inferencing	rbanffy	9.069208	-5.3456817	story	3.0	24.0	1555326340	7.8579054
19669153	Why is version control in Jupyter no	Why is version control in Jupyter notebooks so hard?	themlaiguy	8.890107	-6.369341	story	3.0	7.0	1555364228	-11.594177
19671599	Major cloud companies and VM provide	Major cloud companies and VM providers?Most of these vulnerabilities come from speculative execution impacting a shared cache.	ryacko	9.716885	-5.562804	comment	3.0	11.0	1555396780	7.7140684
19719376	How is the backdoor situation when y	How is the backdoor situation when you license ARM and implement it yourself on an FPGA? I'm assuming there are big sections that are still black boxes you just paste in, but I would think that would still help contain the potential exploitation vectors a lot— like, if you were willing to design the ethernet peripheral/stack yourself, you immediately eliminate a lot of unknowns.	mikepurvis	9.14031	-5.334737	comment	3.0	10.0	1555944880	8.346843
19725816	Initializing the mersenne twister is	Initializing the mersenne twister is really hard: https://github.com/PetterS/monolith/blob/master/minimum/core...Edit: There are two links in the code with more info.	petters	9.733148	-6.322778	comment	3.0	12.0	1555997259	13.408058
19728611	And still to this date not single sp	And still to this date not single spectre attack shown to work under real world conditions.This had been the most overt blown security topic I've ever seen. All the POCs required higher help from the code being attacked: eg, known memory locations,  nothing else running on the system.There still has not been a single real world exploit developed for Spectre: eg somebody attack a running server. But yet all this time and effort has gone into a theoretical toy. It is so incredibly difficult to pull this off,  that is should be one of the lowest priorities. I guess it gets ink because it pushes the security issues past all the software foul ups and lets people hate on Intel.Developers gotta develop I guess.Edit: down to -3 already for expressing an opinion,  and nobody really responded except	jnordwick	9.677591	-5.5818033	comment	3.0	17.0	1556027926	7.737589
19728959	I think you can do it by tracking ca	I think you can do it by tracking caches pulled in during speculation and dumping them if speculation failed.  Perhaps on a new barrier instruction that's lighter weight than lfence (as you're just enabling a recording mode for cache snooping).Ultimately I don't think many speculative instructions actually pull in cache lines, so we can either clean up when they do, or stop speculating when a line would need to be loaded.	lallysingh	9.708825	-5.6619415	comment	3.0	11.0	1556029879	7.704435
19729376	Chip makers never “broke” anything. 	Chip makers never “broke” anything. Resistance to side channel attacks was never part of the protection model. Remember, these protection models were designed when if an attacker was running code in your address space things had already gone completely sideways. To the extent anyone is at fault, it’s the folks who designed browsers with in-process JS engines without realizing that they were assuming the hardware was providing protections that the hardware didn’t claim to provide.	rayiner	9.763587	-5.5650144	comment	3.0	36.0	1556032203	-5.4908485
19730745	CPU designers have had to deal with 	CPU designers have had to deal with in-process isolation for a very long time. The earliest citation I can find is Berkeley Packet Filter in 1987 [1], before the 486 and just two years after the 386 memory protection debuted. If you were to go back in time and ask Intel's chip designers whether they intended to support BPF well, I'm sure they would say yes. Software fault isolation in 1993 (seminal paper at [2]) built on those techniques.Spectre is simply a subtle oversight in the way different pieces of the system interact.[1]: https://www.hpl.hp.com/techreports/Compaq-DEC/WRL-87-2.pdf[2]: https://homes.cs.washington.edu/~tom/pubs/sfi.pdf	pcwalton	9.868539	-5.6905375	comment	3.0	12.0	1556039988	8.00388
19733584	Not really.The 3439 page Intel® 64 a	Not really.The 3439 page Intel® 64 and IA-32 Architectures Software Developer’s Manual is a specification. It just isn't a formal specification suitable for use in proving properties of programs. ARM on the other hand, released a machine readable architecture specification for ARMv8 but that architecture isn't as old or as large as x86_64. Nor is Intel/AMD in the business of selling architecture licenses where having a machine readable architecture specification would be useful for verifying implementations and proving properties. Indeed they're kind of in the business of preventing that from happening.https://alastairreid.github.io/ARM-v8a-xml-release/	CalChris	9.663486	-5.3522716	comment	3.0	14.0	1556058344	7.81985
19738343	Oh, I need Docker a lot. And our tar	Oh, I need Docker a lot. And our target platforms are Linux and OSX, so I just want to have some kind of standard OS on Desktop.Also stuff like Signal, Spotify etc. I still haven't been able to get running on OpenBSD, maybe some day...Nicer in a way that setting up the wifi, suspend et. al. just works. And is very easy.	pimeys	9.728053	-6.372676	comment	3.0	15.0	1556114173	10.449335
19763264	Riscv didn't exist when I wrote this	"Riscv didn't exist when I wrote this. Even now it doesn't exist (it will ""exist"" when someone ships a billion somethings with it in it)"	dmitrygr	9.372344	-5.70448	comment	3.0	12.0	1556329624	-10.653341
19764418	Tell your colleague I think emojis m	Tell your colleague I think emojis make the article look like it was written by a 12 year old.IMO. I guess I'm just an old fart.	netsharc	9.779088	-6.2341375	comment	3.0	10.0	1556351812	-13.957525
19777117	I've always been curious - having a 	I've always been curious - having a x86 chip in a this form factor - is this a big deal? Hasn't ARM already saturated this segment of the market?	iamcreasy	9.633974	-5.279161	comment	3.0	12.0	1556533142	-7.7720056
19783720	It also needs to be rad-hard for spa	"It also needs to be rad-hard for space.  Terrestrial FPGAs are subject to occasional ""SEU"" (single event upsets)[1] which can arbitrarily affect behavior because gates can flip.  Robust terrestrial FPGA systems have to handle SEUs; you have to imagine that these events are more frequent in space and need to at least be handled.(This may something you already had in mind, summarized as ""high-end FPGAs;"" I just wanted to add some interesting color some folks might not be aware of.)[1]: https://en.wikipedia.org/wiki/Single_event_upset"	loeg	9.095325	-5.3526525	comment	3.0	14.0	1556581560	8.338205
19786201	Intel ME _is_ a backdoor.The funny t	Intel ME _is_ a backdoor.The funny thing is that there are many more. Interesting how the EU is dealing with this - most media seems to focus on how badly china could be spying while the US proved they aren't trustworthy long before.	VvR-Ox	9.47697	-5.1951976	comment	3.0	16.0	1556614440	7.6716466
19786652	You haven't worked for large compani	You haven't worked for large companies have you? Intel ME is NOT a backdoor. It may have vulnerabilities, sure. But none explicitly put in there.It was designed for a specific purpose- troubleshooting enterprise computers. And it does that job amazingly well. No more IT guy guiding me when he can just do all the clicks himself.	fxfan	9.474418	-5.2184153	comment	3.0	11.0	1556619986	7.7664685
19823137	">""If memory speed is 100ns then you "	">""If memory speed is 100ns then you would notice the memory bottleneck around the time when your processor speed is 10Mhz.""Sorry I'm not following the math there, whats the relation between 100ns and 10Mhz? Why is that the tipping point?"	bogomipz	9.794985	-5.2247615	comment	3.0	10.0	1556925733	7.7902613
19853512	Maybe Wolfram already effectively ki	Maybe Wolfram already effectively killed this project.  It was actively developed for about 5 years (see https://github.com/mathics/Mathics/graphs/contributors), then Wolfram Inc. hired the lead developer 2 years ago, and basically all worked stopped...	williamstein	8.907029	-5.864685	comment	3.0	13.0	1557263751	3.963733
19861449	Google brings nonbinary emoji to And	Google brings nonbinary emoji to Android Q	pradpk	9.805753	-6.265616	story	3.0	10.0	1557339211	-13.957606
19869721	There are no more server CPUs with l	There are no more server CPUs with less than 6 cores though.We could happily manage with just 2 dedicated to SQL server, but you have to license all the cores you have. So 3K worth of low end hardware ends up costing you several multiples of that in licensing.	grouseway	9.548931	-5.256684	comment	3.0	13.0	1557419504	8.114891
19893447	If you're looking at this from an ar	"If you're looking at this from an architectural perspective, consider grabbing a copy of Hennessey & Patterson's ""Computer Architecture - a Quantitative Approach"". It covers topics like branch prediction, instruction set design, memory/caching, and so on. A classic.If you want to get really deep into the physics of IC Design, one of my favorites is ""CMOS Design, Layout & Simulation (Baker). It covers spice modeling, physical transistor construction, and a variety of digital/analog/memory circuit concepts.Finally:
the link to this article was literally right underneath the link to yours when I opened HN news this morning: https://medium.com/@veedrac/to-reinvent-the-processor-671139..."	mud_dauber	9.7490425	-5.5543437	comment	3.0	11.0	1557684401	8.061262
19897222	"Which FPGA vendor is most ""Linux-fri"	"Which FPGA vendor is most ""Linux-friendly""?"	amelius	9.086187	-5.3601084	comment	3.0	11.0	1557736676	8.382282
19911465	New secret-spilling flaw affects alm	New secret-spilling flaw affects almost every Intel chip since 2011	abhi3	9.428549	-5.227561	story	3.0	167.0	1557854498	7.7756457
19911831	Pandora's box was opened with the pu	Pandora's box was opened with the public disclosure of Spectre and Meltdown. Security researchers will continue to find new and better ways of attacking the security boundaries in processors, and there's unlikely to be an end to this any time soon. Exciting time to be in security, not such an exciting time to be a potential victim.	daeken	9.601078	-5.5230246	comment	3.0	26.0	1557856023	7.7325754
19913594	Yes, the vulnerabilities are not jus	Yes, the vulnerabilities are not just Intel, but they're mostly limited to Intel CPUs. Why is AMD less prone to these mistakes? Perhaps there are simply fewer researchers looking into AMD processors?	Fej	9.358506	-5.272377	comment	3.0	13.0	1557865849	7.846121
19940900	We are doing perf testing of the AMD	We are doing perf testing of the AMD versions of HP/Dell servers.  We may tech refresh about 40k servers with epyc-2 if performance is better than Intel.  It's about time for some new servers anyway.	LinuxBender	9.290353	-5.203022	comment	3.0	11.0	1558109387	7.909183
19948485	The intro makes it sound like this c	The intro makes it sound like this could be feasible for translating x86 Mac apps into ARM Mac apps.> So, what if the Mac switched to using ARM chips instead of Intel? Well, as you can see, Apple could use Bitcode to translate every Bitcode-enabled app on the Mac App Store, without consulting developers, so it would be ready to go on day one.But:> Apple doesn't enable Bitcode for submissions to the Mac App Store todayRight.  The flag to enable bitcode isn't even visible in Xcode for Mac apps.  There's no such thing as Mac/x86 bitcode yet, in or out of the MAS.  And:> ARC appears to use some inline assembly, which means you'll need to disable ARC for a project for arm64-to-x86 translation to succeed right now.So this approach will only work on Objective-C programs, written in a pre-2011 sty	ken	9.909198	-5.2652745	comment	3.0	16.0	1558199475	-7.605623
19950095	RISC-V,  System/360 for the 2020s!	RISC-V,  System/360 for the 2020s!	PaulHoule	9.376758	-5.6874895	comment	3.0	25.0	1558218869	-10.606507
19949282	RISC-V from scratch 2: Hardware layo	RISC-V from scratch 2: Hardware layouts, linker scripts, and C runtimes	pplonski86	9.42429	-5.70456	story	3.0	170.0	1558208007	-10.565438
19950503	What kind of performance penalty do 	What kind of performance penalty do all of these patches combined have on intel chips? I’m curious how much slower an intel chip is now versus before meltdown.	tcoff91	9.491695	-5.301144	comment	3.0	22.0	1558224802	7.850303
19950537	It looks like there is generally a 1	It looks like there is generally a 18% - 40% performance hit with meltdown[1]:> On Linux distributions like Ubuntu 18.10 and Clear Linux the mitigation costs were about ~18% while both RHEL 8 Beta and openSUSE 15.0 had a nearly 40% hit.If we look at MDS mitigation for older MACs[2], it could be 40%:> Intel MDS Vulnerabilities Affecting 7th Gen And Below May Slow Macs By Up To 40%, Apple WarnsIf we look at MDS mitigation generally (if Intel is to be believed) we are looking at ~10% for most use cases[3]> Intel's benchmarks show a 6-14 percent drop in storage performance on a couple of Xeon processors, both with Hyper Threading enabled. Assuming that Intel is not showing a worst case scenario in any of these benchmarks, the hit to storage could be even bigger.> It's in workstations and data 	citilife	9.584805	-5.3515053	comment	3.0	13.0	1558225269	7.834858
19952951	Thx for straightening me out.Ok, so 	Thx for straightening me out.Ok, so let's blame 8085, 8086 or 8088.Or, we (as in I) can blame no one and instead, only realize there's no blame to manage.Anyway, I regret that we killed 6502. I hope my kids will pick up programming anyway. I think later in life they will feel crippled if they didn't.	misterman0	9.562308	-5.3447504	comment	3.0	20.0	1558268344	-7.478535
19954877	I would like to buy this if it suppo	I would like to buy this if it supports ECC memory	glglwty	9.471423	-5.4804893	comment	3.0	20.0	1558293176	8.201493
19967652	I wonder if there's a sort of 'herd 	I wonder if there's a sort of 'herd immunity' effect that would reduce your risk of not running the mitigations. Since the assumption is that this class of exploit is known and patched, it might be less attractive for exploit makers to target. Given that, you can actually disable the mitigation to get the performance back without suffering a breach.I wouldn't do this at a data center or a nuclear powerplant, but for personal workloads like gaming this might be an okay tradeoff.	tschwimmer	9.901724	-5.2341924	comment	3.0	14.0	1558414739	7.7755375
33013905	You can't emulate a real FPGA with a	You can't emulate a real FPGA with a microcontroller	eric__cartman	9.103452	-5.2243176	comment	3.0	11.0	1664403055	-6.252779
33014279	Try cinny.inIt’s much better than el	Try cinny.inIt’s much better than element. It implements stickers, custom emojis and just feels much better than element.	mccorrinall	9.826462	-6.2478137	comment	3.0	10.0	1664405907	-0.77427924
33018660	Inference or training? I think with 	Inference or training? I think with full training you are out of luck with CPUs, the gap is much bigger. 64c TR could only get to roughly 1TFlops.	bitL	9.599617	-5.2376437	comment	3.0	18.0	1664447374	7.9974637
33032555	Can someone estimate the power of th	Can someone estimate the power of these new FPGAs? Is a MisterFPGA with n64/PS2 emulation in range?	dtx1	9.142989	-5.2650776	comment	3.0	22.0	1664527980	8.244467
33034459	2-14% performance drop sounds high, 	2-14% performance drop sounds high, I understand people are sceptical. Maybe the subsystems can be structured in a different way to ease the effects of ASI?Personally, I would rather see a kernel side MPU in feature CPUs	kramerger	9.388974	-5.188218	comment	3.0	40.0	1664543874	7.842533
33034819	That's super interesting. Does it us	That's super interesting. Does it use some special CPU feature? The CPU usually let code running in kernel context do whatever it wants.	rafale	9.767009	-5.324676	comment	3.0	19.0	1664545814	7.7785363
33058568	Actually in this case IBM really has	Actually in this case IBM really has the right to brag about it, because there is no doubt that IBM 801 included the first RISC CPU, even if the name RISC was invented only several years later.Before IBM 801, there have been many simple CPUs, which, if they would be launched today, they would be called RISC CPUs, due to their simplicity.However for those old CPUs the simplicity was not intentional, but it was determined by the limitations of their manufacturing technology.On the other hand, the IBM 801 project, which has started in 1975, significant documentation about its principles of operation has been published during 1976 and a working prototype existed in 1978, was a project whose target was to intentionally reverse the trend towards more and more complex CPUs and investigate the way	adrian_b	9.517962	-5.5975184	comment	3.0	36.0	1664734024	-10.463325
33059973	Which pre-RISC simple CPUs are you t	"Which pre-RISC simple CPUs are you thinking about?  I think the key design features of RISC are no microcode, pipelined execution, usually one instruction per clock, a load/store architecture (no memory operands to ALU instructions), fixed-length instructions, and a large orthogonal general-purpose register set to compensate for the lack of memory operands.Maybe the CDC 6600 sort of fits, but it only had 8 60-bit operand registers, and they weren't orthogonal; you could load into 6 of them and store from 2 of them, and you couldn't use them for addressing (addressing was done with 16 other 18-bit registers).  It was only barely pipelined, though it was sort of superscalar.  I do think it fulfills the ""no microcode"", ""fixed-length instructions"", and ""usually one instruction per clock"" desid"	kragen	9.543631	-5.6651096	comment	3.0	30.0	1664742969	-10.453295
33062627	>> Linux is a registered trademark o	>> Linux is a registered trademark of Linus TorvaldsI hadn't realized that before. The link below discusses the reasons why this was done.https://www.linux.com/news/linux-mark-institute-protecting-l...	osigurdson	9.449655	-5.8202796	comment	3.0	23.0	1664762399	-8.226787
24763543	Cool! Refreshing with new hardware c	"Cool! Refreshing with new hardware capabilities, and it seems they thought it through with the addition of a universal (yeah ...) hex format to support both v1 and v2 platforms from a single file.The new nRF52833 MCU [1] seems pretty capable and certainly inline with what is being used in industry for suitable applications (it's an Cortex-M4 64 MHz, 128 KB RAM, 512 KB flash, Bluetooth) but it doesn't seem to have hardware support for any ML-specific stuff that I could see.Oh, and there has been a keming accident on one of the images that is a bit unfortunate, the word ""MakeCode"" looks a great deal like ""MaleCode"" which is perhaps not optimal in their context [2].[1] https://www.nordicsemi.com/Products/Low-power-short-range-wi...[2] https://tech.microbit.org/docs/latest-revision/assets/blog"	unwind	9.571461	-5.24394	comment	3.0	12.0	1602578533	-0.4600611
24778552	Being a child of the 6502, I could n	Being a child of the 6502, I could never respect the Z-80 for taking FOUR FULL CLOCK CYCLES to do a miserable NOP.	rbanffy	9.507851	-5.2239685	comment	3.0	10.0	1602693273	7.1277575
24806491	I saw this and honestly couldn't tel	I saw this and honestly couldn't tell if it was real or not.I decided no due to the 256MB of Emoji-Cache...My sarcasm detector is broken...or maybe its just the web..	acomjean	9.8054285	-6.2528453	comment	3.0	10.0	1602895275	-13.9538145
24811448	In my undergrad studies I learned to	In my undergrad studies I learned to do assembly on z80. Is there something similar one can get for educational porpuses using RISC-V?	mmrezaie	9.49227	-5.7704544	comment	3.0	10.0	1602954770	-10.5424595
24812778	What does it mean for the RISC/CISC 	What does it mean for the RISC/CISC thing to be dead? The distinction between them is more blurred than it used to be?	ramshorns	9.417448	-5.7056346	comment	3.0	10.0	1602965012	-10.560043
24817696	What? In CMOS energy / op is constan	What? In CMOS energy / op is constant unless you have dynamic voltage scaling.  Which processors have this?	jhallenworld	9.544527	-5.219618	comment	3.0	11.0	1603027297	7.879756
24818863	And both posted by the same user!I'm	And both posted by the same user!I'm into PDP-11 programming currently. I'm not alone apparently.	elvis70	9.859238	-5.485915	comment	3.0	13.0	1603037344	-7.5020814
24830157	I think coldness/warmth of the messa	"I think coldness/warmth of the messaging style is much more dependent on emoji use, at least in Slack.I couldn't imagine writing without at least attempting to use proper grammar. Especially in German where ignoring capitalization makes a difference of night and day.My reasoning has been similar to the one of the author, but more on a ""positivity"" than a plain productivity level. If it's easy for others to read my messages and not having to puzzle over them, I hope that it will leave them with overall a more positive association of writing/communicating with me. And that not only goes for professional texting, but writing with friends (or dating) as well. I know it won't always come out perfect, but overall I think it shows some level of respect towards the other person."	hobofan	9.792343	-6.2518597	comment	3.0	11.0	1603136861	-13.963132
24832075	I am astounded that anyone thinks th	I am astounded that anyone thinks that adding emojis can solve anything related to clarity of communication.  We might as well be interpreting Egyptian cartoushes, for the lack of clarity involved.	jhayward	9.795416	-6.264199	comment	3.0	12.0	1603149028	-13.992563
24853495	Note that speed is not being judged,	Note that speed is not being judged, I found it significantly easier to get 32/32 after realizing this might be the case.For some reason I find +1/64th harder to distinguish than -1/64th, is it possible to have asymmetrical perception differences this subtle? or is it more likely software / hardware limitations?	tomxor	9.842311	-5.4285283	comment	3.0	12.0	1603323556	7.8784337
24861977	My understanding was that large cach	My understanding was that large cache was mostly a cost tradeoff, and that there's no technical reason why x86 processors couldn't do this too. I believe Apple's A-series chips already have a huge cache which is a big part of why they are so fast.	nicoburns	9.671876	-5.2061524	comment	3.0	10.0	1603393348	7.919974
24861631	Most multithreaded software has conc	Most multithreaded software has concurrency bugs and many of those bugs have been covered up for years by the relatively friendlier x86 memory model vs weaker models like ARM.It is not surprising at all that supported products are going to be slow to support other architecture.	foobiekr	9.805684	-5.5157065	comment	3.0	15.0	1603391886	8.778745
24880315	How the bootstrap load made the hist	How the bootstrap load made the historic Intel 8008 processor possible	ink_13	9.548887	-5.2717533	story	3.0	97.0	1603558040	-7.5918975
24881338	I love these posts and I could proba	I love these posts and I could probably ask a thousand questions.  I'll constrain myself to just... a couple. :)Does the 8008 get ground internally or does the IO just drive Vdd (-9V) as the low level?  The data sheet you linked to has no min for Vol so I am guessing that it does but it seems like that would make interfacing to peripheral ICs kind of annoying (assuming TTL levels).  All the pinouts I found online [1] have no ground pin so I must be missing something obvious, right?[1] http://www.cpu-galerie.de/html/intel8008-m8008.html	egsmi	9.562533	-5.315292	comment	3.0	16.0	1603567262	-7.5409636
24898020	Actually, running 16 bit code is per	Actually, running 16 bit code is perfectly supported on 64 bit CPUs (for obvious reasons -- you still need 16 bit to boot a BIOS), and even you can seamlessly switch between 16bit and 64bit modes at runtime (early 64 bit linux could even run vm86plus).It was a political choice by Microsoft to drop 16 bit Windows support in 64 bit Windows. This is the limit of their famous backwards compatibility -- still impressive, though.This also happened during the era where they were getting criticism from all sides due to crappy Windows security (think XP pre-SP2 times) and they may have seen the 16 bit support code as a liability.	AshamedCaptain	9.8423815	-5.3051085	comment	3.0	20.0	1603730096	-8.002494
24900376	There's always RISC-V :) Nothing wro	There's always RISC-V :) Nothing wrong with it, or anything preventing it to be just as fast. The only thing it doesn't have yet is a standardized vector-extension, but it's probably pretty close.We just need JIT support for an embeddable RISC-V emulator, and we're golden. Does it matter what the host language is these days server-side? I suppose there's a higher chance that the WebAssembly standard will adopt some instructions that favor cloud computation now, with these news.	fwsgonzo	9.392767	-5.6740403	comment	3.0	24.0	1603741135	10.00656
24901629	This works for the basics of RISC-V 	This works for the basics of RISC-V assembly, but fails for a lot of assembly code that GCC accepts. It should be fine for most human written code, but machine generated code is also common.Most notably, labels starting with a period are not accepted, but gcc generated assembly has tons of labels like that.	thethirdone	9.488923	-5.7764287	comment	3.0	10.0	1603747481	-10.541563
24906687	Why not license other softcores, e.g	Why not license other softcores, e.g. from SiFive?	gmueckl	9.403846	-5.578813	comment	3.0	36.0	1603801230	-10.525754
24907442	What is the difference between hard 	What is the difference between hard and soft cores?	person_of_color	9.495093	-5.3005824	comment	3.0	11.0	1603807020	7.9102063
24907536	Yes I posted another link [1] for ea	Yes I posted another link [1] for earning call but didn't get much traction / upvote. Although I have to admit Acquiring Xilinx is much bigger news.Judging from watching the Financial News and reading analyst's comment for years. My feeling was that their Job was not to push for hard question or an honest answer. Their job is to push whatever interest they had with the company. So a spin for better long term prospect and downplay risk.I was happy with the Enterprise results ( +116% YoY ) until I read this>Revenue was higher year-over-year and quarter-over-quarter due to higher semi-custom product sales and increased EPYC processor sales.Semi-Custom is definitely PS5 and Xbox.Basically I still dont see EPYC making enough inroad in the Server Market. And this is worrying, while the Stocks, R	ksec	9.212201	-5.189508	comment	3.0	17.0	1603807659	7.9106727
24907447	I wonder how much of the delay in FP	I wonder how much of the delay in FPGA tech adoption is due to the utterly hilarious disaster that are the toolchains. They look like huge brittle proprietary monstrosities, incompatible with modern development methodologies.	himinlomax	9.093052	-5.360785	comment	3.0	31.0	1603807045	8.410151
24906945	FPGAs are to ASICs as interpreted la	FPGAs are to ASICs as interpreted languages are to compiled languages.  I don't mean that literally, but I do mean it in the performance sense.  At the same process node, an FPGA is over 50x the power and 1/20th the speed of a dedicated ASIC and it isn't getting any better.	brandmeyer	9.082336	-5.33598	comment	3.0	30.0	1603803588	8.288085
24908007	It is really funny when you find out	It is really funny when you find out that Intel uses Xilinx FPGAs for prototyping as they cannot get what they acquired (Altera) working in house to make things work.	throwmemoney	9.12381	-5.312254	comment	3.0	14.0	1603810574	8.232804
24908610	Travis cut the number of builds for 	Travis cut the number of builds for Open Source projects to half	stsewd	8.893985	-6.402071	story	3.0	7.0	1603813917	-5.519181
24908233	Just looking at raw FLOPs: the 7nm X	"Just looking at raw FLOPs: the 7nm Xilinx Versal series tops out at 8 32-bit TFlops (DSP Cores only), plus whatever the CPU-core and LUTs can do (but I assume CPU-core is for management, and LUTs are for routing and not dense compute).In contrast: the NVidia A100 has 19 32-bit TFlops. Higher than the Xilinx chip, but the Xilinx chip is still within an order of magnitude, and has the benefits of the LUTs still.-----It should be noted that Xilinx Versal ""AI engine"" is a VLIW SIMD-architecture: https://www.xilinx.com/support/documentation/white_papers/wp..., effectively an ASIC-GPU hardwired into the FPGA."	dragontamer	9.114323	-5.347774	comment	3.0	11.0	1603811976	8.298397
24914185	Open source tooling would not matera	Open source tooling would not materalize if bitstream formats were opened, at least not competitive ones. Why? There are already open source  versions for synthesis and PnR , and while functional they are very far off the 'terrible' EDA tools everyone rags on Xilinx for. The reality is SystemVerilog is a huge language, and already an open standard yet no open source project supports it fully, so I don't believe for a second if bitstreams were opened we'd see a load of top class tooling appear for synthesis and PnR. The reason is if it has not happened for the first (and arguably easiest) step in the chain i.e. System Verilog, they why would it happen for the others?	tails4e	9.1299	-5.4525867	comment	3.0	16.0	1603850214	8.545736
24919848	I really don't mind the Gerrit UX - 	I really don't mind the Gerrit UX - it seems to be optimized for daily use by programmers, not for onboarding speed. That's a tradeoff I'm very much okay with.	q3k	8.750877	-6.2365503	comment	3.0	24.0	1603898824	-9.155544
24923817	In a first, researchers extract secr	In a first, researchers extract secret key used to encrypt Intel CPU code	anfilt	9.533548	-5.274093	story	3.0	52.0	1603917303	7.704877
24933297	I didn’t know riscv was making its w	I didn’t know riscv was making its way into consumer goods yet. Any examples you can share of places seeing riscv adoption?	_alex_	9.367658	-5.6913843	comment	3.0	12.0	1603994728	-10.596222
24933804	It's inevitable that someone will ma	It's inevitable that someone will make a RISC-V Pi one day	justaguy88	9.375641	-5.689468	comment	3.0	10.0	1603996487	-10.605768
24934759	I know this a losing battle, but I c	I know this a losing battle, but I can't help but pipe up from time to time: that's a disclosure, not a disclaimer.I'm grateful to everyone putting in the work to make RISC-V happen, open hardware is the only way out of the increasingly grim world of 'secure boots' and the like, which seems hell-bent on making general purpose computing on a trusted platform a thing of the past.	samatman	9.392655	-5.6571107	comment	3.0	10.0	1604000606	-10.584042
24935291	I know, this discussion is quite old	I know, this discussion is quite old (e.g. Mac vs. PC), but can you clarify how you define PC in your post?Particularly what makes this RISC-V board a PC, what an RPi does not have? Form factor, ATX power or PCI-Express?	bipson	9.389808	-5.6128273	comment	3.0	30.0	1604003021	-10.500729
24942214	Why are your games breaking on a Win	Why are your games breaking on a Windows update?At some point you are always going to need hardware interfaces and those are provided by the OS kernel. There's only so much you can achieve with containerisation.	rkangel	9.716859	-5.614368	comment	3.0	12.0	1604066224	-7.988365
24945491	I Northern European/Germanic trait i	I Northern European/Germanic trait in general. As a Norwegian living in the Netherlands I found Dutch people very easy to relate to but I know many of my other fellow foreigner had major problems with their direct communication.But you see the same with Linus Thorvalds. His tone offends a lot of people in particular Americans.But as a fellow Nordic I think the passive aggressiveness often observed in America or fake politeness more difficult to deal with.Of course Dijkstra and Linus are quite different personalities but both suffer from an English speaking majority thinking their concepts of proper etiquette is universal.	socialdemocrat	9.26297	-5.8885255	comment	3.0	13.0	1604083272	4.2500005
24946538	Real world tests are seeing around 3	Real world tests are seeing around 3 to 4 Gbps of memory bandwidth.https://medium.com/@ghalfacree/benchmarking-the-raspberry-pi...LPDDR cannot sustain anywhere near the max speed of the interface.  It's more of a hope that you can burst something out and go to sleep rather than trying to maintain that speed.  In a lot of ways DRAM hasn't gotten faster in decades when you look at how latency clocks nearly always increase at the same rate of interface speed increases.  And LPDDR is the niche where that shines the most, because it doesn't have oodles of dies to interleave to hide that issue.	monocasa	9.721925	-5.257763	comment	3.0	11.0	1604089527	7.959086
24960113	The best design is control bits whic	The best design is control bits which RISC-V doesn’t have but x86 and ARM do have.The best design is part of the core ISA and not and extension since overflow checking is fundamental to modern languages.	pizlonator	9.47936	-5.756491	comment	3.0	20.0	1604244809	-10.551935
24960832	> Also worth noting, since this alwa	> Also worth noting, since this always comes up, that these things are super hard for a compiler to optimize away. JSC tries very aggressively but only succeeds a minority of the time (we have a backwards abstract interpreter based on how values are used, a forward interpreter that uses a simplified octagon domain to prove integer ranges,RISC-V has some closely-related sharp corners in indexed address arithmetic as well.  Some choices for the type of the index variable perform much worse on rv64.Consider: an LP64 machine uses 32-bit integers for 'int' and 'unsigned', but 64-bit integers for `long`, `size_t`, `ptrdiff_t` and so on.If you use an array index variable of type `unsigned`, then the compiler must prove that wraparound doesn't happen.  That's pretty weird considering that half the	brandmeyer	9.687566	-5.969224	comment	3.0	18.0	1604250449	-10.493483
24960897	>  Some huge portion of the x86 powe	>  Some huge portion of the x86 power budget is just the instruction decoder.This is a widely held meme, but the internet at large doesn't have any evidence to back it up.  A couple of publicly visible engineers that do have experience are on record as saying that cell-phone-class competitive x86 was absolutely possible.  Intel and AMD chose not to pursue those markets.The expensive parts of a high-end CPU aren't normally in the instruction decode part.  They are in the branch prediction, branch mispredict recovery, forwarding networks, memory re-ordering, and so on.  Anything short of a dataflow ISA has little impact on those structures.	brandmeyer	9.642882	-5.5155363	comment	3.0	15.0	1604251050	-7.7446814
24960353	> having to fuse super complex (5 in	> having to fuse super complex (5 instruction or more) sequencesCan you give an example of someone advocating for 5 instruction fusion? Normally it's limited to three.	Veedrac	9.771207	-5.874372	comment	3.0	24.0	1604246816	-7.772245
24979179	“Computer Unit” – A PDP-11/34 at my 	“Computer Unit” – A PDP-11/34 at my school (1979)	qmacro	9.799731	-5.408124	story	3.0	36.0	1604408104	-7.4904785
24982721	Lattice appears to be OK with this a	Lattice appears to be OK with this and that's great - they're the only FPGA company at this point that seems to understand that open source could actually help them with tooling and adoption. Xilinx and Altera are hostile towards open source so I'm rooting for Lattice.	UncleOxidant	9.091849	-5.3796053	comment	3.0	19.0	1604429744	8.427932
24983483	The best business move they could ma	The best business move they could make against the competition giants, is to ask people like Dave Shah and Clifford Wolfe to just organize a single team under a foundation umbrella and then make a large annual donation, plus technical support/documentation where needed.If Lattice disrupts the market as de facto enablers of an LLVM of sorts for FPGA's they will make a lot of clients think twice for their next projects.It doesn't matter how much IP secret sauce Xilinx or Altera have in their fabric, every single team out there hates the locked in toolchain and is slowed down by it in a non-negligible way.In my opinion this is the type of bold move that could flip the market share upside down in favour of Lattice.	DoingIsLearning	9.098066	-5.3433814	comment	3.0	11.0	1604434406	8.381832
25000318	So should I get the 5900x or the 595	So should I get the 5900x or the 5950x as a programmer who likes compilation-heavy languages like Scala and Haskell and that also play games?	tymm	9.40504	-5.202935	comment	3.0	11.0	1604598840	7.897552
25000414	There's some odd stuff:<<<PDEP/PEXT 	"There's some odd stuff:<<<PDEP/PEXT  Parallel Bits
Deposit/Extreact  300 cycle latency
250 per clock  3 cycle latency
1 per clockIt’s worth highlighting those last two commands. Software that helps the prefetchers, due to how AMD has arranged the branch predictors, can now process three prefetch commands per cycle. The other element is the introduction of a hardware accelerator with parallel bits: latency is reduced 99% and throughput is up 250x.>>>It talks about pdep/pext and links them to prefetchers - what? Weirder yet ""is the introduction of a hardware accelerator with parallel bits"" all that's happened, and backed up by earlier info in the article, is that these were trapped+emulated before, hence their hideous cost, and now they're in hardware[0]. It comes across as if someone didn't"	throwaway_pdp09	9.684842	-5.4365873	comment	3.0	10.0	1604599402	8.0327835
25002995	> I've been using version control si	> I've been using version control since Apple Projector (in the late 1980s)Never heard of Apple Projector before. I've always been interested in the history of version control systems, so I would like to learn more about it. But when I search for the term, almost all I find is stuff about using projectors with Macs/iPhones/iPads/etc. Can anyone point to any information sources on it?	skissane	8.800821	-6.340563	comment	3.0	10.0	1604616881	-11.788267
25005027	Not too familiar with cpus but if it	Not too familiar with cpus but if it's known that arm outperforms x86 while also being more power efficient, why aren't everyone using it? Why did it take until now for a major computer manufacturer to switch?	redrobein	9.599283	-5.222097	comment	3.0	11.0	1604638537	-7.731655
25010185	Yeah, I think you're right about the	Yeah, I think you're right about the BSD jails point. This totally pre-dates the Linux piece. I was only chatting about the Linux piece.	WestCoastJustin	9.9212885	-6.110787	comment	3.0	13.0	1604689377	10.541893
25013439	> Intel has clearly been caught out 	> Intel has clearly been caught out by its inability to get 10nm - which I understand was overambitious - to work and pretty much everything else follows on from there.It's more than process node.  Zen 3 now has superior IPC as well; the now unqualified performance lead of AMD devices happens at lower frequency.  The process node problem is just the most visible and embarrassing problem Intel has.  It is not the only problem.  Intel's 10th gen is also still well behind the curve wrt side channel attacks.  That gap will persist until Rocket Lake appears.The rot at Intel is old and runs deep.The one area that Intel has managed to maintain superiority is quality.  Intel is still the thing to buy if you want minimum glitches.	topspin	9.273725	-5.185497	comment	3.0	12.0	1604728817	7.850733
25026270	Reading issue #27 on the github page	Reading issue #27 on the github page really gives an insight into..something: https://github.com/juliangruber/isarray/issues/27	raspyberr	9.674949	-5.3839808	comment	3.0	28.0	1604848888	2.4150577
25028373	"Using ""-march=x86-64-v3"" is still a "	"Using ""-march=x86-64-v3"" is still a decision which has to be made at compile time. I wonder if the Apple appstore (at least watchOS/tvOS) approach of using bitcode as the one-time artifact and then turning that into concrete instructions later would be possible for an entire Linux distribution (Gentoo II). The Mill CPU team wants to use something like that OS-wide to hide/emulate  entire missing functionality on lower-tier CPU models.Or the other possibility of compiling for all architecture and then selecting this or that function depending on what the current CPU is, or even hotpatching if the security model allows it. I remember either gcc or glibc having some support for one of these."	zeotroph	9.887844	-5.335926	comment	3.0	11.0	1604864982	-7.7480288
25033727	Brave of them to do support for the 	Brave of them to do support for the vector extension, given that it hasn't been ratified / officially standardised yet[1]. It's still a work-in-progress. The final version of the vector extension may have small (or enormous!) incompatibilities, so you might be tied to one of their toolchains to use it properly, rather than something upstream.1. https://github.com/riscv/riscv-v-spec/	bem94	9.454725	-5.7671914	comment	3.0	11.0	1604922012	-10.548775
25049757	Anyone know how you interact with th	Anyone know how you interact with these cores as a developer/user? Say if I'm running some C code with OpenMP parallelism, can I bind it to three of the fast cores?	semi-extrinsic	9.913647	-5.6878095	comment	3.0	13.0	1605034554	8.187271
25054433	Are you are referring to latency due	Are you are referring to latency due to propagation delay where the worst case increases as you scale?Would you mind elaborating a bit? I'm not following how this would significantly close the gap between SRAM and DRAM at 1GB. Since an SRAM cell itself is generally faster than a DRAM cell, and I understand that circuitry beyond an SRAM cell itself is far simpler than DRAM. Am I missing something?	tomxor	9.773561	-5.2749224	comment	3.0	11.0	1605057300	7.9312363
25058995	> The ARM architecture floating poin	"> The ARM architecture floating point units (VFP, NEON) support RunFast mode, which includes flush-to-zero and default NaN. The latter means that payload of NaN operands is not propagated, all result NaNs have the default payload, so in R, even NA * 1 is NaN. Luckily, RunFast mode can be disabled, and when it is, the NaN payload propagation is friendlier to R NAs than with Intel SSE (NaN + NA is NA). We have therefore updated R to disable RunFast mode on ARM on startup, which resolved all the issues observed.Hmm. ELF object files for Arm can represent this with build attributes [1]:    Tag_ABI_FP_denormal, (=20), uleb128
        0  The user built this code knowing that denormal numbers might be flushed to (+) zero
        1  The user permitted this code to depend on IEEE 754 denormal numbe"	willglynn	9.839495	-5.874298	comment	3.0	10.0	1605107503	-7.5830617
25067097	Yet it still makes it very clear: a 	Yet it still makes it very clear: a properly implemented ARM core can easily bury an X86 of equivalent size because of inherent advantage of not having to pay interest on 40 years of technical debt in the ISA.	baybal2	9.62755	-5.398615	comment	3.0	23.0	1605162973	-7.757566
25067752	Many apps optimized for the x64 plat	Many apps optimized for the x64 platform won't run as well as the benchmarks.	seunosewa	9.764819	-5.206131	comment	3.0	22.0	1605170256	-7.8149357
25068781	Until all software is ported to ARM,	Until all software is ported to ARM, it will run in emulation, which is going to be slower in most cases. People invested in plug-in ecosystems, like DAWs or video editing, will likely have an endless long tail of plug-ins that aren't getting ported, or that require a re-purchase to get an ARM version. And due to Rosetta's architecture, you can't mix ARM and x86 plug-ins (in-process, like VSTs - Apple wants you to use AUv3 which is out of process but nobody does that), so you will be running your entire workflow under emulation until you can make the switch hard and all at once. And some of your  software will never make it.Mark my words, this is going to be a massive shit show for people using those ecosystems, for 5 years if not 10. It already happened with the PPC transition.	marcan_42	9.754595	-5.210184	comment	3.0	24.0	1605181459	-7.7797585
25074076	I think Docker for Mac should just u	I think Docker for Mac should just use x86 emulation for the time being -- apparently the new Apple chips don't support virtualization?x86 emulation gives access to most available Docker images anyways -- and the performance of the new CPUs would seems to indicate that emulation may not be so terrible, at least for the short term.	etaioinshrdlu	9.58562	-6.325855	comment	3.0	17.0	1605210715	10.04659
25074645	Is it going to be interesting to see	"Is it going to be interesting to see how new Apple machines running ARM based processors plays out.
Writing code, and building docker images locally on ARM and building and running the same code on X86 in production could potentially, in some circumstances cause some issues. If not, it's a bit of a pain to potentially build and publish x86 and ARM images so that people can run them anywhere (Some projects are already doing this). Running production on ARM could work if you wanted to, but right now the instance types are very restricted in terms of different combinations of cpu/disk/io."	willejs	9.569928	-6.3487844	comment	3.0	14.0	1605213522	10.039423
25084085	Ask HN: What are some differences be	Ask HN: What are some differences between x86 and ARM processors?	quyleanh	9.636734	-5.295329	story	3.0	20.0	1605285853	-7.762932
25091094	What kind of backend dev work?I do b	What kind of backend dev work?I do backend with Python, Julia and PHP.They all have ARM builds and I’m not expecting issues. I’ve worked with them on ARM and have a few pi’s around running with projects on them.But it depends on the type of backend work. If you’re using C and assembly and need to target x86, then I can see issues.Regarding the move, I expect these first ones to be targeted more to regular users and to projects testing their projects on them.IMO the main reason why things aren’t working on them right now is due to there not being availability and projects not having to move to it yet. But there’s no technical reason why things won’t be ported for them. The ecosystem just needs to grow.	rovr138	9.698225	-5.2305703	comment	3.0	18.0	1605344195	-7.7352242
25094477	As a computer architecture learning 	As a computer architecture learning process, I suggest building a microprogrammed, single-cycle processor using digital building blocks without an HDL and without library blocks. Then, refactor it to be pipelined (which demands branch stall logic). Next, add branch prediction. Then, refactor in an HDL. Finally, superscalar, VLIW, and/or unified scheduler.Choosing MICMAC or MMIX would be good macrolanguage target to start with. Remember, the microprogramming ops can be much simpler and VLIW-style.The microprogram will be a ROM block that runs the decoding and execution of the actual processor's ISA. It's helpful to write a microprogram assembly language and compiler to make maintenance easier.	blkknightarms	9.214926	-5.516934	comment	3.0	15.0	1605379301	8.571252
25097876	If I did that for Xilinx (Vivado) th	If I did that for Xilinx (Vivado) this wouldn't be a comparison but a long rant ^^There's only two manufacturers of FPGA, Xilinx and Altera, I don't imagine the other one is any better.More than the tooling, there's a very steep learning curve, it's a professional tool for professional EE/SW, I don't think it's something you can jump into easily like you could jump into an arduino example or a python shell. Literally none of the things mentioned in this article would be applicable because HDL (hardware design) is not software development.	user5994461	9.092302	-5.438131	comment	3.0	11.0	1605409672	8.569138
25097706	Perhaps we could make a similar list	Perhaps we could make a similar list for FPGAs. Or for more complicated systems like Nvidia Jetson.	amelius	9.093313	-5.352947	comment	3.0	16.0	1605407606	8.332793
25106287	I imagine it won't take long for som	I imagine it won't take long for something as widely used as the JVM to be compiled directly for the M1 instead of relying on Rosetta. :)	DonaldPShimoda	9.825183	-5.3663054	comment	3.0	16.0	1605485080	7.616579
25107446	Why aren't programs distributed by t	Why aren't programs distributed by the Mac App Store pre-translated once and the translation downloaded to the Mac?They'd still have to be run under rosetta2 (because programs can write code and branch to it) but a lot of computation could be done once rather than every time.	gumby	9.803557	-5.3091774	comment	3.0	13.0	1605495169	7.618801
25117579	> Woz's masterpiece, which was discr	> Woz's masterpiece, which was discrete logicIt had the downside of requiring precise timing. This is an issue if you wanted a faster (or even a slightly improved) 6502 in the machine.Oh well...	rbanffy	9.524509	-5.223929	comment	3.0	11.0	1605564178	7.304938
25124999	> We found one strange Rosetta bug i	> We found one strange Rosetta bug in this test: we set Premiere to export at a 40mb/s bitrate, but in Rosetta across three M1 Macs, it would deliver… 20. When we set it to 80mb/s, it delivered 40. Sure. We told Adobe, and the company gently reminded us that running Creative Cloud apps in Rosetta 2 is unsupported. So... be careful out there.Rosetta 2 might be a bumpy ride, but nice to see that Creative Cloud tools even work in it.	judge2020	9.798574	-5.327316	comment	3.0	10.0	1605627636	7.5773315
25125708	This is insane perf/watt.  x86 backw	This is insane perf/watt.  x86 backwards compatibility may have gotten us to where we are, but it's certainly holding it back.  Arm is looking great, and maybe it's time for x86 to die.	tonyhb	9.626921	-5.2649074	comment	3.0	56.0	1605630860	-7.741024
25125744	I'm glad about that. I find it weird	I'm glad about that. I find it weird reading through comment threads or forums and seeing mobile phone emojis scattered through. I find them distracting.I'm not really too sure why. I don't mind them in personal messages or texts and stuff, but seeing them on public pages just kind of annoys me for some reason.	grawprog	9.790128	-6.270385	comment	3.0	26.0	1605631017	-13.964209
25125815	Any word on if Final Cut and Logic X	Any word on if Final Cut and Logic X are recompiled for Arm ?	offtop5	9.635322	-5.315967	comment	3.0	13.0	1605631338	-7.734739
25126641	It's interesting to watch the evolut	It's interesting to watch the evolution of written language in action. I expect in 20 years we will routinely see emojis in written English novels and news articles. In 50 years we'll see them in textbooks and scientific journal articles.	nradov	9.8109865	-6.2687783	comment	3.0	15.0	1605634431	-13.967882
25126854	Is this cross compilation to x86 or 	Is this cross compilation to x86 or a native compile to Arm? That could be playing an important role if it's easier to optimize and emit code for one architecture versus the other.	bigdict	9.827746	-5.481419	comment	3.0	10.0	1605635208	-7.7517676
25126944	Docker images are meant to be built 	Docker images are meant to be built once and run everywhere–tested on your dev server, test environment and production.If you buy an ARM mac, it would be ideal to run ARM instances in the datacenter, but those are uncommon and expensive.I discourage people from building ARM images and then rebuilding intel images later in the software lifecycle.	tonymet	9.55489	-6.427313	comment	3.0	10.0	1605635512	10.08315
25126963	Is this a 1-1 comparison? If the ARM	Is this a 1-1 comparison? If the ARM compile is compiling to ARM binaries then there might be less work/optimizations since it is a newer architecture. Seems like a test with two variables that changed. Would be interesting to see them both cross-compile to their respective opposite archs.	nwlieb	9.736387	-5.381411	comment	3.0	15.0	1605635583	-7.729971
25128825	I dont understand the point of this 	I dont understand the point of this CI argument. Is he arguing CI is bad in principle? For environmentalism reasons or something?I dont use Github, but I still run CI for all my projects even if the build is a single line. Its a requirement. Its the only way to get past 'works on my machine'.Honestly I'm not even sure what the author is suggesting here.	dgrin91	9.215579	-6.4213734	comment	3.0	17.0	1605642947	6.1307044
25126998	Yet another reason I'm glad for the 	Yet another reason I'm glad for the inevitability of death.I can't be the only one who thinks emoji are a terrible idea. Granted, I also don't think logographic characters are a good idea but at least they have thousands of years of use and agreed upon semantic meaning behind them.	AnIdiotOnTheNet	9.800788	-6.269139	comment	3.0	12.0	1605635711	-13.961182
25130002	It really doesn't. AMD has essential	It really doesn't. AMD has essentially the same perf/watt coming in a few months. ISA doesn't change anything nowadays because it all gets decoded into a per-CPU specific actual instruction set anyways.	sudosysgen	9.496941	-5.359764	comment	3.0	11.0	1605648022	7.879228
25131897	What does this mean? M1 isn't an ARM	What does this mean? M1 isn't an ARM64? Is it saying there's extra opcodes and this takes advantage of them?	helloycombinat	9.715313	-5.4221535	comment	3.0	12.0	1605660710	-7.686886
25131965	It looks like you lose about 30% per	It looks like you lose about 30% performance to Rosetta. That's quite a lot, and makes it slower than current x86-64 processors, e.g. Ryzen 5000 series, or even the Ryzen 3000 series. But compared to x86-64 Macs it's not that much slower, because the x86-64 Macs are using old slower Intel CPUs.	zrm	9.777349	-5.2793956	comment	3.0	13.0	1605661125	-7.828744
25138170	Closer to the core, better performan	Closer to the core, better performance.	jagged-chisel	9.612801	-5.255967	comment	3.0	20.0	1605714767	7.9106593
25149476	I received an M1 mini 2 days ago. I 	I received an M1 mini 2 days ago. I noticed the Steam client seems to be a bit laggy in UI responsiveness, but besides that I have no complaints. I got it for use as a server, so I was a bit dismayed to hear that M1 Docker support has hit a roadblock, but hopeful that they figure it out soon.	hart_russell	9.565598	-6.303396	comment	3.0	13.0	1605794376	9.917786
25150518	BBC picks SiFive RISC-V chip for Doc	BBC picks SiFive RISC-V chip for Doctor Who programming-for-kids kit	samizdis	9.3806715	-5.664847	story	3.0	31.0	1605800060	-10.469012
25155729	I think that Apple:• Never should ha	I think that Apple:• Never should have removed Rosetta 1.• Should not have dropped support for Carbon and 32bit apps.• Should not remove Rosetta 2 in a few years, as many believe they will.I acknowledge that it's easy for me to sit here in my chair and say that someone else should be doing extra work—but we're talking about one of the most profitable companies in the world! Apple could hire engineers to maintain this stuff, if they wanted to spend the money. It would not somehow make the rest of macOS worse—no one is required to use old APIs.If you compared the amount of effort it would take Apple to maintain these systems, with the combined effort of every single developer migrating their software, I'm pretty confident the former route would be a lot less work. The alternative is that dev	Wowfunhappy	9.790774	-5.2691655	comment	3.0	12.0	1605829099	7.5569525
25158251	Unfortunately it looks like Apple ha	Unfortunately it looks like Apple have taken this opportunity to drop support for alternative OSes entirely.Turns out this isn't true.They showed Debian running in a VM on a prototype Apple Silicon Mac hardware in June at WWDC. My guess is that Apple will provide access to enough hardware features of the M1 Macs via their hypervisor framework, to enable alternative operating systems to run ok. Docker for M1 Macs is going to use Apple's hypervisor as well.Apple supports disabling their security that would allow a different operating system to be installed but there would be no driver support, so there's that.	alwillis	9.571143	-6.3541756	comment	3.0	12.0	1605859197	10.031434
25162504	While mostly missing the mark, and j	"While mostly missing the mark, and just rehashing the old discussions. AKA the micro architecture concepts of both ""RISC"" designs and ""CISC"" designs is so similar across product lines as to be mostly meaningless. As mentioned you have RISC designs using ""micro ops"" and microcode, and you have CISC designs doing 1:1 instruction micro op mapping. Both are doing various forms of cracking and fusing depending on the instruction. All have the same problems with branch prediction, speculative execution, and solve problems with OoO in similar ways.Maybe the largest remaining difference is around the strength of the memory model, as the size of the architectural register file, and the complexity of addressing modes and other traditional RISC/CISC arguments are mostly pointless in the face of deep "	StillBored	9.550871	-5.7295656	comment	3.0	12.0	1605892505	-10.493967
25165167	The main issue with linking a discus	"The main issue with linking a discussion from 25 years ago, is that the discussion from is almost irrelevant in today's environment.The Apple M1 has over 600 reorder buffer registers (while Skylake and Zen are around 200ish). The 16 or 32 architectural registers of the ISA are pretty much irrelevant compared to the capabilities of the out-of-order engine on modern chips.A 200, 300, or 600+ register ISA is unfathomable to those from 1995. Not only that, but the way we got our software to scale to such ""shadow register"" sets is due to an improvement in compiler technology over the last 20 years.Modern compilers write code differently (aka: ""dependency cutting""). Modern chips take advantage of those dependency cuts, and use them to ""malloc"" those reorder buffer registers, and as a basis for o"	dragontamer	9.592274	-5.5011845	comment	3.0	18.0	1605907495	-7.617445
25167853	Check, check, check. I only use ECC 	Check, check, check. I only use ECC DRAM in my desktop these days and I monitor bit flips which on my 64GB desktop happen about once a month[1]. A similar rate on my FreeNAS device which also has ECC memory.Like others, I was super happy when I could by a Ryzen chip at retail prices and get ECC rather than buying a Xeon sku which was an extra $300.[1] When I first built the system I was getting about 2 a week which I tracked down to a 'weak' ram stick. Replaced it (Corsair, and they replaced it for free) and now it's about one a month.	ChuckMcM	9.508455	-5.494885	comment	3.0	19.0	1605932474	8.225774
25167965	In the early 2000s for a year or two	In the early 2000s for a year or two I had a process running on my Linux desktop without ECC that just filled a 128 MB buffer with a pattern, and then checked every minute to see if the buffer had changed.I ran this for a couple of years and never saw a change.I believe that based on published memory error rates for memory at that time, I should have seen a few errors. I am not sure why I never did. Maybe consumer desktop memory was less dense than server or workstation memory, and the published error rates were for the latter?From 2008 to 2017 I had a 2008 Mac Pro at work with ECC memory, and from 2009 to 2017 I had a 2009 Mac Pro at home with ECC memory. I'd occasional look in the memory section of the System Information report and never saw any ECC corrected errors reported.With the Mac	tzs	9.538034	-5.5491943	comment	3.0	15.0	1605934992	8.283311
25171105	Here's my thoughts.  They're not too	"Here's my thoughts.  They're not too well developed here to be honest.  I'm probably wrong about some of this and need to research more.The ""new thing after Unix"" is already here and has been here for some time.  It's called Hurd.  It depends on a microkernel who's only job is to pass messages from different components, but microkernels don't work well (at least not better than monolithic kernels) on x86 due to context switching overhead.x86's maintain their architecture due to software compatibility.  That's what we're really stuck on.  A lot of improvements have been bolted on to x86, like cache, all the instruction stream acrobatics, SIMD, VMs, long mode, etc. but it's still ""heavy"" ; things are done to make it look fundamentally the same to existing programs.When CPUs start becoming ch"	tenebrisalietum	9.718539	-5.315191	comment	3.0	10.0	1605979870	-7.7969217
25185742	It will be interesting to see how lo	"It will be interesting to see how long Rosetta-2 will be supported.
macOS 10.15 took away 32bit apps, which was a sizeable chunk so clearly Apple is willing to alienate some of its users in the name of progress and slimlining."	Tepix	9.796993	-5.3061523	comment	3.0	37.0	1606132203	7.558258
25185811	Is that even a serious criticism? Us	Is that even a serious criticism? Users had about ten years of warning before 32-bit went away. The real impact of that on real users is minimal.	Bud	9.900851	-5.2851324	comment	3.0	25.0	1606132862	-7.912793
25186507	It’s an emulator too though, right? 	It’s an emulator too though, right? Otherwise things like Chrome (which has a Javascript JIT) would never work in Rosetta.	Wowfunhappy	9.812717	-5.3539286	comment	3.0	14.0	1606138054	7.478646
25206710	I disagree. In maths, the main compe	"I disagree. In maths, the main competition is Greek letters. Kids today arent going to know their eta from their gamma. I find many undergrads can't remember the Greek alphabet.Sure, girl wearing hat might be a bad choice, but I think ""simple emoji like tree, fire, snowflake (for example). Do a good job of replacing Greek letters.Another place I use emoji, is for a set of Labella which should have no order. Mathematica a often say they are naming some things 1,2,3, but please forget the integers have arthmetic and ordering. If you use fire, tree, snowflake as the names, no-one assumes an ordering, or arithmetic."	CJefferson	9.881597	-6.284602	comment	3.0	17.0	1606288778	-13.932371
25212332	Hacker news blocks emojis, it should	"Hacker news blocks emojis, it should do the same for ""vermaden"""	simlevesque	9.80858	-6.259095	comment	3.0	16.0	1606328227	-13.9543495
25217742	Real quick we're going to need to go	Real quick we're going to need to go back to treating modern CPUs like munitions with severe export controls.	colechristensen	9.528647	-5.2729015	comment	3.0	18.0	1606375865	7.763403
25217953	(Googler here) The article is a good	(Googler here) The article is a good description of the tools, and I was not aware of the blaze clones plz and pants.One thing that is maybe not obvious: For an API author, code search in combination with a monorepo and the somewhat hermetic universe which is Google's code base provides immediate access to all uses of a library. You can see what worked well and what didn't, and it enables effective refactorings. That also means when writing a client, you can quickly figure out from other client code how stuff is supposed to be used. All this makes code search such an effective tool in Google's development environment (in the broader sense).If anything like this were possible for open source (indexing code that depends on a library/API, across subrepos in any version control system, in a wa	burakemir	8.783113	-6.0473027	comment	3.0	30.0	1606378122	-11.389936
25218928	The current CPU's already are VLIW i	The current CPU's already are VLIW in a fashion. Its just that they have a hardware jitter for it. That's what superscalar OoO CPU basically is, a piece of HW that generates VLIW instructions based on the normal instructions that come in. A superscalar execution port is basically just one subinstruction in VLIW. Explicit VLIW only helps you to save that piece of silicon from the chip. And it's not that much in the grand scheme of things. It used to be, but not anymore.Static compile time VLIW means one cannot really make it wider anymore, or narrower. Dynamically doing it on runtime means a cheaper and smaller core can just be narrower. Remove an instruction slot for one integer ALU? Fine, no issues. Everything still works, albeit slower by that much. Make a beefier chip? Perfect, it got f	sharpneli	9.637171	-5.6665006	comment	3.0	12.0	1606389414	8.168672
25228359	This issue is quite under-appreciate	This issue is quite under-appreciated from my experience. I work in a field where ECC memory is an absolute must because there's a lot of money on the line and cosmic rays are a real issue.You'd be surprised by the amount of random bit flipping happening in commodity hardware that we use every day.	bitcharmer	9.599853	-5.5521154	comment	3.0	13.0	1606482263	8.227513
25230758	Docker support with full support for	Docker support with full support for running x86 docker images from docker hub via rosetta would be what is needed for me. I'm not sure that is going to be feasible but not being able to run vanilla x86 docker images means I can't build most server side projects I've worked on in recent years because they all fire up things like elasticsearch, redis, posgresql, etc. as part of their builds so tests can run against these thing. All of those are basically either vendor provided docker images or things on Dockerhub in x86 form. Manually creating arm variants for these things and customizing the builds to have ARM variants is not going to be practical for a lot of that stuff. I'd have an easier time switching to Linux or Windows based laptop than to an ARM mac right now.Realistically, most peo	jillesvangurp	9.571445	-6.3824987	comment	3.0	12.0	1606498862	10.06732
25232620	Dual ISA would be pretty cool. The m	Dual ISA would be pretty cool. The more I learn about the differences between ARM and x86, the more it starts to seem like it really is not that much of a stretch. Just need the market for it.	ip26	9.585102	-5.3808284	comment	3.0	12.0	1606511674	-7.740137
25233905	">8/ Another ""magic"" trick is how the"	">8/ Another ""magic"" trick is how their ""Swift"" programming language uses ""reference counting"" instead of the ""garbage collection"" in Android. They did something in their CPU to double the speed of reference counting.What the hell does that even mean ?Disregarding the nonsensical attribution of magic to Swift vs Java, if ""reference counting"" on translated x86 code is faster, then I suppose M1 does ""lock add / cmpxchng"" or whatever faster than X86.I would love to know how. Other than just as a side-effect of a SoC, UMA architecture."	muststopmyths	9.6879425	-5.2797947	comment	3.0	11.0	1606523109	7.8933244
25234583	Finally a company has the guts to mo	Finally a company has the guts to move us from the straitjacket of x86. I hope this is just the beginning of much needed innovation in CPU architecture. Due to the MS/Intel duopoly we had to suffer x86 for decades with few real options.	coliveira	9.605713	-5.2609754	comment	3.0	37.0	1606529895	-7.830609
25235433	> The reality is that the reasons th	"> The reality is that the reasons these chips are fast are either unknown or boring. I suspect that these will one out as we play around with them more, but we don’t have the details right now.I disagree, I think we have plenty of information. This is what happens when a huge proportion of your die isn't doing instruction decoding. x86/amd64 are old and crufty. Lessons have been learned, and had been learned for some time, but people (AMD/Intel) were not brave enough to fix them because they didn't have adequate control of their software ecosystem to say, ""Your software from your old computer will not run/will not run as well on your new computer."" (For emphasis, let me just put it clearly what I'm claiming: x86 was designed in the 1970s. This is what happens when you use an ISA that was n"	nickysielicki	9.596825	-5.2131844	comment	3.0	43.0	1606539927	7.6477714
25244010	A Plan 9 C Compiler for RISC-V [vide	A Plan 9 C Compiler for RISC-V [video]	pmarin	9.424114	-5.729663	story	3.0	100.0	1606642128	-10.542631
25249008	Well I wouldn't pay for it if I coul	Well I wouldn't pay for it if I could print billions in a snap because then I would start my own company that creates open RISC-V laptops and pcs. But in the current market I will because there's simply no alternative.	rowanG077	9.322222	-5.5174246	comment	3.0	31.0	1606691715	-10.572022
25254288	You mean remove backwards compatibil	You mean remove backwards compatibility and ruin the whole reason people use x86? Not to mention that when AMD64 (“long mode”) was introduced, a big amount of cruft was disabled in the new mode (but is still available in 16-bit (“real mode”) and 32-bit (“protected mode”) for compatibility).	colejohnson66	9.787933	-5.400604	comment	3.0	13.0	1606747969	-7.777907
25254985	It really doesn't matter. The bigges	It really doesn't matter. The biggest benefit of ARM are the fixed length instructions and only Apple is actually taking advantage of this by decoding 8 instructions at once. The big question is whether decoding that many instructions is actually a benefit. It's entirely possible that branch prediction and other factors are greater bottlenecks that have to be tackled first to take advantage of the faster instruction decoding.Intel's Pentium processors (the original ones) were doing pretty badly because they made the pipeline too deep at the expense of other things.	imtringued	9.642441	-5.3663425	comment	3.0	14.0	1606751422	-7.7756987
25258459	"""Now you got a big problem, because "	"""Now you got a big problem, because neither Intel, AMD or Nvidia are going to license their intellectual property to Dell or HP for them to make an SoC for their machines.""This isn't quite correct. AMD and Nvidia have made custom SOCs for game consoles for years now; they could create customized SOCs for PCs if this was a critical issue. But I don't believe it is. The PC workloads and use cases follow well-known patterns and market segments and you don't really need a lot of different custom accelerators, or be on a single SOC for that matter. Video-related processing has been part of GPUs for many years.For that matter, making RISC CPUs is not actually a huge obstacle for these guys. (Nvidia does.) Yes even Intel.The article also seems to entirely omit the M1's heterogenous core strategy,"	tigen	9.351704	-5.481417	comment	3.0	14.0	1606767688	-10.554611
25258637	For those unaware, ARM (as with many	For those unaware, ARM (as with many RISC-like architectures) uses 4 bytes for each instruction. No more. No less. (THUMB uses 2, but it’s a separate mode) x86, OTOH, being CISC-based in origin, has instructions ranging from a single byte all the way up to 15[a]).[a]: It is possible to write instructions that would be 16 or more bytes, but the micro architecture will “throw” an illegal instruction exception if it encounters one. Intel doesn’t say why there’s a limit, but they do mention (in the SDM) that they may raise or remove the limit in the future.Why 15 bytes? My guess is so the instruction decoder only needs 4 bits to encode the instruction length. A nice round 16 would need a 5th bit.	colejohnson66	9.699444	-5.592897	comment	3.0	11.0	1606768618	-7.805056
25259078	Could you explain what you mean with	"Could you explain what you mean with ""8-wide decode in many places"" ? How is that possible, isn't instruction coding kinda always the same? I.e. always 4-wide or always 8-wide, but not sometimes this and sometimes that.All sources I could find say it is 4-wide, so I'd also be interested if you could perhaps give a link to a source?"	BlackFingolfin	9.750137	-5.6657677	comment	3.0	23.0	1606770941	-7.7508173
25259366	X86 isn't fixed width instructions. 	X86 isn't fixed width instructions. Depending on the mix you may be able to decode more instructions. And if you target common instructions, you can get a lot of benefit in real world programs.Arm is different but probably easier to decode. So you can widen the decoder.	jlouis	9.705367	-5.539623	comment	3.0	17.0	1606772399	-7.7523327
25259679	I think X86 is the only modern ISA f	"I think X86 is the only modern ISA family that still have a separate address space for I/O. It is not used today anymore, but it exists somewhere deep in the chip, and its legacy kind of messed up how the entire wider memory, and cache systems on X86 were designed.X86 has got memory mapped I/O for modern hardware, but on the way there, X86 memory access got tangled with bus access. X86 still treats the wider memory system as a kind of ""peripheral"" with mind of its own.The intricacies how X86 memory access evolved to keep accommodating decades old drivers, and hardware apparently made a grand mess of what you can, and what you cannot memory map, or cache, and many things deeper in the chip.One of may casualties of that design decision is the X86 cache miss penalty, and an overall expensive "	baybal2	9.702271	-5.6336737	comment	3.0	10.0	1606774205	-7.791677
25267303	It's still measured by wall clock ti	It's still measured by wall clock time - not CPU time. I'd love to see them bill for actual CPU time.	astuyvenberg	9.597071	-5.2196045	comment	3.0	12.0	1606843410	7.8036895
25288107	Well a simple CPU is much more effic	Well a simple CPU is much more efficient then a complex one.A modern AMD/intel uses very few gates to implement the arithmetic. we are talking ~1% of the gates actually do the work. The rest is taken up by Cashes, Schedulers, Branch predictors, Decoders, and a load of other stuff that is designed to speed up the CPU to get good single core performance. all this extra hardware takes up a lot of power.Here is an interesting thought experiment:On a large die you could (theoretically) today fit say one million Motorola 68000 Processors. If you clocked that at 5Ghz it would in theory be about 1000 times faster then a Ryzen 7 using the same power. But it would still mean that each core would be hundreds of times slower then a Ryzen core. It would be almost impossible to write programs that would	quelsolaar	9.445285	-5.5061216	comment	3.0	14.0	1606997607	-10.627991
25293688	"It's a lousy use of the word ""Open"" "	"It's a lousy use of the word ""Open"" in a discipline where Open has a fairly specific meaning.I mentioned that as well though. Using your goofy definition of Open, x86 is no more ""Open"" than ARM. Pinebook and Raspberry Pi both use no bullshit ARM setups. With ARM, how accessible the architecture is is 100% dependent on the implementation which vary greatly by manufacturer."	ogre_codes	9.6611	-5.3163576	comment	3.0	21.0	1607024820	-7.7804065
25294347	Is there the option to use AVX2 (256	Is there the option to use AVX2 (256-bit) instead of AVX-512 (which can cause thermal throttling on basically every chip[a])? Now, if Intel can get AVX-512 working well, that’s something else.Side question: do any Ryzen processors support AVX-512? AFAIK, they only support up to AVX2.[a]: IIRC, some tests show AVX2 code actually being faster than the equivalent AVX-512 code because AVX2 doesn’t cause the processor to throttle so hard	colejohnson66	9.442424	-5.5170197	comment	3.0	10.0	1607027483	8.07077
25295537	"> ""Microsoft, at least, has Windows "	"> ""Microsoft, at least, has Windows running on ARM, but it doesn't have Rosetta""I thought that Microsoft's emulation efforts were hampered by Intel making threats, e.g. ""Intel recently made an unprecedented public challenge to Microsoft and Qualcomm that basically told the latter two companies: if you ship an x86 instruction set architecture (ISA) emulator, we’re coming after you."", from https://www.forbes.com/sites/tiriasresearch/2017/06/16/intel...If so, the blame for that really lies at Intel's doorstep as well."	ThrowawayR2	9.728429	-5.1939397	comment	3.0	23.0	1607031761	7.624525
25298080	Is Intel really so blind that they d	Is Intel really so blind that they didn't see this coming or even have detailed inside info about it?I would wager that they knew, but execs chose to protect their personal short term interests overt those of the company and its long term shareholders. This is typical modern US publicly traded company behavior.	blunte	9.27105	-5.2052207	comment	3.0	12.0	1607047321	7.7283864
25313636	> Consider that CPUs on newer nodes 	> Consider that CPUs on newer nodes consume less energy.I think the main point is to use 32bit on new nodes too. Using 32bit instead of 64bit is always more energy efficient unless perhaps you really need 64bit for your application, which most applications don't.	amelius	9.652464	-5.301022	comment	3.0	13.0	1607166919	7.9681196
25320467	Yes, cheap X86s were clearly running	Yes, cheap X86s were clearly running for all the workstation vendors, but most people in that world couldn’t really believe it in their gut.  Since the article mentions Christiansen, I’ll say that those workstation vendors, most significantly Sun, faced the classic Innovator’s Dilemma-described failure: doing their best shortly before they died.While search engines do exhibit the benefit of highly parallel divide and conquer, Google was really the first to take it to the limit.  That was sequoia’s motivation for investing.  I know because I also had a divide-and-conquer startup around then and Sequioa was quite interested in the approach.	gumby	9.746827	-5.1991243	comment	3.0	13.0	1607221503	8.7269335
25328068	> the true cost of x86 is finally ex	> the true cost of x86 is finally exposedThey've reinvented x86 at least twice: microcode and then x86_64. I wouldn't bury x86 yet.Plus a good chunk of the M1 computing prowess is not even the CPU, it's the additional hardware such as the neural engine cores and such. This is something you could put next to a Sparc core, it's not ARM specific.	oblio	9.577791	-5.2220283	comment	3.0	12.0	1607301090	-7.75551
25331798	cough Intel Management Engine cough	cough Intel Management Engine cough	klelatti	9.458521	-5.223505	comment	3.0	22.0	1607346822	7.7580414
25357079	Well yes these are emoji, but i was 	Well yes these are emoji, but i was expecting something more “:)”-ish	shreddit	9.805167	-6.269152	comment	3.0	10.0	1607508651	-13.961059
25385033	Another major difference is the memo	Another major difference is the memory model. In X86 other CPU’s must always see the writes of a core exactly in the right order. This limits the ability to reorder store ops significantly. ARM requires a memory barrier for this. This is a major reason why X86 emulation is so slow. One must basically issue a memory barrier after every store op.M1 actually also implements the X86 memory model too in HW. It’s only usable for the rosetta applications and comes with perhaps 20% perf penalty. But it’s still way better than emulating it with barriers.In C++ terms it pretty much means X86 is always seq_cst. With ARM one can actually get benefit of the different memory model options. As an example one can do an atomic access without having to flush the whole store buffer out, which is impossible i	sharpneli	9.554116	-5.2342215	comment	3.0	14.0	1607690174	7.7631526
25389945	> If I had a Core Solo, I'd likely h	"> If I had a Core Solo, I'd likely have dumped it.I do note that there was never a Core Solo desktop CPU. There were handful of single-core Conroe Celerons released, but all main ""Core"" series parts were at least dual-core (i.e. Core 2 Duo or Core 2 Quad)"	zokier	9.487034	-5.236838	comment	3.0	11.0	1607715832	7.898721
25394529	4 x86 decoders, all modern x86 CPUs 	4 x86 decoders, all modern x86 CPUs have micro-op caches that are wider than 4 and the retire width of the machines are 6 or greater. Saying it can process twice as many instructions per clock cycle is an incredibly incorrect statement.	syberslidder	9.760869	-5.6934657	comment	3.0	16.0	1607738147	-7.7283874
25402904	Years ago I worked with image proces	Years ago I worked with image processing and thought of writing a CLI image diff tool. I then thought meh, anyone can quickly roll their own.Turns out it seems to be something people care about.I should just start writing the CLI tools I think of, without dismissing their utility.	watermelon59	8.819188	-6.43289	comment	3.0	10.0	1607816942	-11.665221
25409163	AVX 512 isn't available on consumer 	AVX 512 isn't available on consumer CPUs, it's not relevant here.	lock-free	9.468466	-5.5453887	comment	3.0	11.0	1607886608	8.068781
25420400	I think people should pay more atten	I think people should pay more attention to the LPDDR4X RAM that's tightly coupled to the CPU and likely has significantly less latency and more bandwidth than anything on the Ryzen or i9. This is critical to keeping their wide design fed, and if you swapped this out with standard DDR3200 you'd see some lackluster numbers.Both Intel and AMD try to overcome the memory wall with larger caches and clever prefetching, which is going to chew up more die space and power than x86 decoders.	spamizbad	9.575195	-5.1947975	comment	3.0	18.0	1607967325	7.9090686
25425666	I think the 6502 was less 'general p	I think the 6502 was less 'general purpose' than the Z80 (which I've seen huge banks of in Honeywell FEP's, years ago, f.e.).I imagine they're similarly sought-after now, though.  I've never played with the Z80, so I don't know if it offers easier integration with arduino / RPi and other basic systems now.FWIW I see they're available on local ebay for few dollars:https://www.ebay.com.au/itm/273461107051(I think the 6502A means it runs at 1.5MHz, but don't quote me on that.)	Jedd	9.528147	-5.277556	comment	3.0	13.0	1607993787	-7.4606647
25438064	It goes to show that making up a cha	It goes to show that making up a character is a permanent change in human history. Several thousand years later, we're stuck with their characters! I wish the emoji committee would stop adding things that are clearly passing fads like burritos and hot dogs. We're going to have to support this for the rest of human history, please show a little restraint!	earthboundkid	9.815826	-6.262486	comment	3.0	11.0	1608083490	-13.961444
25456131	I’d love to see a version of this (o	I’d love to see a version of this (or Netlify, Vercel, etc) that didn’t bundle CI with the preview and deploy steps so that I can pick my own CI and then effectively use the “CDN” as the highly qualified host of my static assets.	markelliot	9.183212	-6.3598766	comment	3.0	16.0	1608217279	6.12634
25459162	This is sad. Anyone working with lar	This is sad. Anyone working with larger codebases knows that 99% of the time, the code they encounter is years old. It's not uncommon for me to stumble upon files whose last non-trivial change was 3 or 7 years ago... Of course other files get more regular updates, but this translates to entire repositories as well, especially in languages where smaller libraries are encouraged. I'm sure that even among github's gem dependency tree, there are open source dependencies that haven't seen changes less than 1 year ago. To say these are irrelevant is just wrong.Github's search already sucks quite a lot, but for some things it's extremely useful. For example, when I'm interested where my Rust library is used, I can use the toml filetype restriction and search for the name of my library. It will sh	est31	8.747656	-6.1616216	comment	3.0	11.0	1608232591	-9.219305
25469246	I find that a bit surprising since m	I find that a bit surprising since my understanding is RISC-V is more minimal (has fewer higher level instructions) (ATM, that will change with extensions) then ARM.This paper refutes your point and is inline with my understanding: https://carrv.github.io/2020/papers/CARRV2020_paper_12_Perot...One counter point is the simpler the ISA the more work the compiler needs to do. So x86 is may be easier to write an optimize compiler for given it does some of the work for you (despite the bloat).I wonder how much benchmarks on the current ARM and RISK-V chips will change over time due to compiler improvements. ARM probably already has alot of investment in some workloads...EDIT: This presentation show code size comparisons with a RISC-V extension that adds multiply/divide and it get really close t	ipodopt	9.459122	-5.7133474	comment	3.0	10.0	1608311489	-10.504688
25469486	Yes but they were terrible. Just bei	Yes but they were terrible. Just being ARM isn't some kind of magic dust. It has to actually be fast.	jeffbee	9.614992	-5.199856	comment	3.0	22.0	1608312446	-7.671079
25471324	> AMD should see the writing on the 	> AMD should see the writing on the wall and start designing ARM CPUs.This is a really tough strategy decision. Focus all energy on delivering a knock-out blow to Intel (in x86/64) or try to do other stuff too?For the next several years at least, there is still a whole lot of money to be made selling x86/64 chips. (I don't know if Microsoft has plans to move mainstream Windows users off x86/64, but even if they do, it won't happen quickly.)Right now, AMD has an opportunity to take x86/64 away from Intel. Probably the best opportunity in decades. There's something to be said for focusing all resources on delivering a knock-out blow right now, before the opportunity is gone.On the other hand, ARM might have a better future over the long term. And it isn't necessarily true that AMD would be s	adrianmonk	9.451234	-5.210764	comment	3.0	14.0	1608322277	7.812136
25483664	Is 2021 the year of RISC-V on the de	Is 2021 the year of RISC-V on the desktop?	webwielder2	9.390593	-5.666295	comment	3.0	11.0	1608435509	-10.580283
25484154	It’s slightly tangential, but I’m ma	It’s slightly tangential, but I’m managing an engineering team of 28-30 and we’re currently considering a wholesale change to ARM CPUs across the board.MacBooks are our de facto development laptop and all our services use skaffold for local development, Docker basically. If we consider the perhaps likely outcome that MacBooks will one day be ARM-only, that Docker will not offer cross-arch emulation, and that our development environment will be ARM only, it then becomes likely that we’ll migrate our UAT and PROD to ARM based instances.If we go that route it’ll mean more money to the AWS Graviton programme and likely further development of ARM chips. I can’t see this affecting RISC-V but the M1 switch could very well benefit the wider ARM ecosystem.	jackcodes	9.556943	-5.274337	comment	3.0	21.0	1608443042	-7.9127817
25484277	It's true that ARM64 has a load-stor	It's true that ARM64 has a load-store architecture and fixed-length instructions (the latter depending on the former for encoding space efficiency). Other than that, the instruction set design is very far from minimalist textbook-style RISC ISAs like RISC-V. It has both flag-based branches and fused compare-to-zero-and-branch instructions. It has very complex immediate encodings. It has instructions for loading/storing register pairs. It has pre-increment/post-increment addressing modes of the kind that were hallmarks of CISCs like M68K and VAX.It seems unwise to draw far-reaching conclusions about RISC-V or even ARM64's intrinsic merits versus Apple's CPU designers when there are so many variables. The frontend decoder hasn't been a frequent bottleneck in Intel cores for a long time and t	psykotic	9.567509	-5.6797733	comment	3.0	16.0	1608444657	-10.486889
25484859	The article states the opposite:> Ja	The article states the opposite:> Java Renaissance: Ryzen 5800x is faster than M1 in most tasks by a large margin.> Java SciMark 2.0: In the SOR benchmark, the 5800X is more than twice as fast. For others, the 5800X is slightly faster, with the exception of Monte Carlo Integraton scored 2.7% lower than M1.> Java DaCapo: 5800X is mostly faster by a significant margin, except for the H2O benchmark which is more than twice slower.> Python PyPerformance: Overall, the execution time is roughly the same, with the 5800X slightly faster. Probably a faster Python implementation like PyPy can highlight the differences better.> golang.org/x/benchmarks: The 5800X performs significantly better in all benchmarks, around 30% faster in most benchmarks and some are twice as fast.> Redis: The 5800X performs	hu3	9.759365	-5.4440484	comment	3.0	10.0	1608453563	7.9140425
25488862	Because there were multiple relative	Because there were multiple relative giants in the 80's and 90's that had their own processor designs. The competition was broad, and much of it from far more well funded companies.For all of them to falter and ARM to succeed was a real long-shot.Even well into the 90's, when several companies were looking at switching CPU architectures or supporting alternative architectures, ARM was just not on the radar for most developments, because people were looking to compete with x86 on performance.People talked about the Alpha, MIPS, PPC, PA-RISC, not ARM. When ARM started appearing on the radar as more than a low end embedded option towards the end of the 90's, it was DEC's StrongARM family.It was a very long way coming. Which makes it all the more impressive that they made it.	vidarh	9.583425	-5.1927757	comment	3.0	13.0	1608492650	-7.7802095
25494774	> This is not the first case of raci	> This is not the first case of racism and sexisme in FOSS and probably won't.The fish rots from the head down, and apart from Stallman (which is mentioned in the article) I for myself would personally add Torvalds to that same conversation (even though with a little less overt sexism, but definitely with more bullying).But because Torvalds's project has had an incredible ROI, i.e. it has made lots of people lots of money (heck, I for myself only started learning Python 17 years ago because I had a Linux distro easily at hand) his position is pretty much safe for the time being.	paganel	9.383075	-5.817533	comment	3.0	11.0	1608557785	-8.1865015
25510618	"  > surely emulating 32-bit
  > inst"	"  > surely emulating 32-bit
  > instructions from 8-bit
  > doesn't take a thousand
  > cycles on average.

It does if you do it in C, and also need to emulate the mmu and permission checks. Plus arm's instructions do a lot. A free arbitrary 32-bit shift in every instruction is hard on an 8-bit device which can only shift 8 bits by one bit per instruction. You end up with a lot of loops, and loop control instrs kill perf there.The fact that I had to bit-bang the memory interface also does not help as the avr device has no dram controllerI had, at some point, rewritten the core in avr assembly for a large-ish speedup, but i never got around to publishing it.Currently i am working on a TTL-built 1-bit computer, unto which i want to port this emulator, so boot linux on a 1-bit computer :)"	dmitrygr	9.728585	-5.4196258	comment	3.0	11.0	1608667815	-7.770475
25518232	If we’re going to look at the “big” 	If we’re going to look at the “big” ISAs (big in the sense that they run things like workstations and servers)… there aren’t that many to look at. Cherry-picking three of them to tell a story seems a bit fishy to me. SPARC and POWER aren’t exactly taking over the world. SPARC is still around in the same sense that MIPS is still around—you can still buy SPARC CPUs—but the ISA won’t be on your radar unless you’re interested in very specific applications or if you’re a retrocomputing enthusiast.I’m not sure whether the ownership changes can be attributed as causes or as symptoms of ISA market failure here. My understanding is that somewhere from 2000-2010, the cost of developing a cutting-edge ISA + an associated line of CPUs got too expensive, and companies like SGI were priced out of the ma	klodolph	9.567413	-5.5123177	comment	3.0	19.0	1608735646	-7.795261
25532528	Throw cores at that particular probl	Throw cores at that particular problem all you want. Throw 64GB RAM at it, and GPU acceleration. Won't help, since that issue is very likely I/O bottlenecked. So it's unfair to blame Lightroom here.My photos sit on a 5400 RPM, no SSD cache NAS behind 1G LAN. That is incredibly slow compared to local HDD or even SSD. I don't blame Lightroom here. In fact, the software only takes its time when operating on large volumes on that slow connection. CPU-bound tasks have been just fine for me (16k photos catalogue, i7 mobile CPU, 16GB RAM).	diarrhea	9.842427	-5.3141394	comment	3.0	10.0	1608852300	7.9124494
25535581	Couldn't you run a VST host in the R	Couldn't you run a VST host in the Rosetta environment for your x86 VSTs and run everything else native in ARM in a separate host? Or does the VST model require that all the VSTs loaded run synchronously within a single process?	kevingadd	9.813292	-5.3791423	comment	3.0	10.0	1608891705	7.607024
25536164	Apple killed flash. If they will be 	Apple killed flash. If they will be able to kill x86 remains to be seen. I don't think web users won out because flash is dead though. Web games never recovered. Video making switched from animation to people filming themselves talking to the camera. What will we loose with x86, I wonder?	EamonnMR	9.695566	-5.231384	comment	3.0	14.0	1608900727	6.660048
25547896	Why is this interesting? Rosetta 2 i	Why is this interesting? Rosetta 2 is documented to not support  AVX: https://developer.apple.com/documentation/apple_silicon/abou...	adenylyl	9.75394	-5.332291	comment	3.0	37.0	1609031371	7.642136
25554610	The author has been writing about RI	The author has been writing about RISC-V with relation to Apple M1 and basically fanboying about it. It is basically the same as some guy coming in and say Rust will overtake C and C++.And yet the article got interest, since it align with the general public and main stream media view of RSIC-V being the rising star. It is free. It must be better. etc.I could have repeat most of his point with OpenPOWER. ( microWatts [1] ) And for many application there are lot of reason why OpenPOWER are much better than RISC-V. ( Rather unfortunate IBM is loathed by lots of people in the industry )[1] https://github.com/antonblanchard/microwatt	ksec	9.411007	-5.5821557	comment	3.0	12.0	1609106296	-10.538377
25553963	Abusing version control and CI servi	Abusing version control and CI service as database sounds like a way for ruining it for open source projects that actually need it. The recent Travis thing didn't happen without reason.	Karliss	8.874313	-6.4079065	comment	3.0	32.0	1609100730	-5.5639973
25561650	The implication I assume that there 	The implication I assume that there would be pushback on Microsoft for doing the same would be because of the possibility of nefarious undocumented changes. What possibly nefarious things could an undocumented ISA extension do?	MichaelZuo	9.626151	-5.274092	comment	3.0	24.0	1609180032	-7.7392635
25563900	Zhaoxin ZX-E / KX-6000 CPU review	Zhaoxin ZX-E / KX-6000 CPU review	luu	9.483091	-5.21082	story	3.0	49.0	1609193828	7.840527
25576644	Ask HN: Why can't I flag comments, b	Ask HN: Why can't I flag comments, but others can?	giantg2	8.856324	-5.877572	story	3.0	3.0	1609286442	-11.362392
25581414	I like the BSD simplicity, but it's 	I like the BSD simplicity, but it's not just hardware, it's software. I want to spin up an X stack in docker? Can't do that, docker doesn't work. There's jails but without any image repositories I'm trading a lot of convenience for simplicity.There's also software like dotnetcore which will just not build. The situation in the desktop is even more problematic. I wish it wasn't so, I like the separation of concerns quite a bit with FreeBSD but it's not something that unfortunately fits my use cases.	lordgroff	9.783518	-6.306064	comment	3.0	12.0	1609334516	10.489315
25582183	What changes are needed to make Aarc	What changes are needed to make Aarch64 support? Java is write it once run it everywhere, the code is generated at runtime and can fully exploit the latest arch specific extensions like AVX 512 automaticallyEdit: is it because they ship a custom jdk and that the jdk is in C++?	The_rationalist	9.7239	-5.41439	comment	3.0	18.0	1609340193	-7.8182545
25609763	But Linux has been working perfectly	But Linux has been working perfectly on ARM for many years (decades at this point?).We just need general purpose computing to stay alive (and it's not actually being killed with the M1 yet).RISC-V doesn't make much of a difference here. You can still build highly locked-down proprietary systems using it.	solarkraft	9.435788	-5.6330795	comment	3.0	10.0	1609554926	-10.555073
25611637	I wonder whether that's due to any t	I wonder whether that's due to any technical merit of little endianness or just because of x86's dominance in the desktop/workstation world?	plq	9.780902	-5.522395	comment	3.0	22.0	1609581809	-7.897296
25613277	I have a pinetime and the form facto	I have a pinetime and the form factor is great (until I lost the back plate, next one will be sealed). All the opensource activity around the watch is also great. The biggest drawback to me is only 64k of ram. Thats a Commodore64's worth of ram. The 240x240 screen is 57kbytes, it must have its own display ram.Also NordicSemi never seemed to be particularly opensource friendly. I'm hoping for a future RISCV edition of this watch with more ram.	donpdonp	9.395985	-5.5939236	comment	3.0	25.0	1609600243	1.9842609
25619731	Not entirely sure that I'm reproduci	"Not entirely sure that I'm reproducing the benchmark correctly, but running Amazon Linux 2 I have:    # mount -t tmpfs -o size=32G tempfs tmp
    # gdir=~/linux/.git
    # mkdir tmp/linux
    # for commit in $(git --git-dir=""$gdir"" rev-list v5.9 | head -n 20 | tac); do \
          mkdir ~/tmp/linux/$commit; \
          git ""--git-dir=$gdir"" archive ""$commit"" | tar -C ~/tmp/linux/$commit -xf -; \
      done
    # ~ec2-user/tarsnap-autoconf-1.0.39/tarsnap -c --dry-run --print-stats tmp
    tarsnap: Performing dry-run archival without keys
             (sizes may be slightly inaccurate)
                                           Total size  Compressed size
    All archives                          20278980504       4406609078
      (unique data)                        1767400183        258587"	cperciva	8.792694	-6.3544173	comment	3.0	10.0	1609651584	7.2746506
25622554	To someone on HN who isn’t familiar 	To someone on HN who isn’t familiar with what ECC does that explains nothing about how ECC works and how it could have prevented these situations. Or how often they really happen.	IgorPartola	9.455808	-5.537056	comment	3.0	19.0	1609690173	8.296005
25622678	Doesn't intel make ECC available on 	Doesn't intel make ECC available on the i3 line of CPUs?	rhn_mk1	9.397541	-5.455777	comment	3.0	11.0	1609691031	8.199076
25622936	Do the crash reports include whether	Do the crash reports include whether the machine has ECC memory?	faitswulff	9.572362	-5.5313444	comment	3.0	21.0	1609693031	8.246639
25623204	Does anyone know why ECC memory requ	Does anyone know why ECC memory requires the CPU to support it?Naively, I can understand why error reporting has dependencies on other parts of the system, but it would seem possible for error correction to work transparently.	FartyMcFarter	9.489888	-5.526388	comment	3.0	11.0	1609694855	8.271345
25623763	Everything described in the article 	"Everything described in the article sounds exactly like some of the Virtex*-FX products from more than 10 years ago.For instance, the Virtex4-FX had either one or two 450MHz PowerPC coresembedded in it, where you could implement 8 of your own additional instructions in the FPGA. This is effectively now a CPU where you can extend the instruction set, and design your own instructions specific to your application. For example, you might make special instructions using the onboard logic to accelerate video compression, or math operations; I know of one application that was designed to do a 4x4 matrix multiply per cycle.https://www.digikey.com/catalog/en/partgroup/virtex-4-fx-ser...
https://www.xilinx.com/support/documentation/data_sheets/ds1..."	leecb	9.223674	-5.3791323	comment	3.0	11.0	1609698573	8.232434
25623844	Xilinx already have ARM cores in the	Xilinx already have ARM cores in their FPGAs so I wonder which way they'll go - I'd honestly prefer a neoverse core than an X86	mhh__	9.282898	-5.2982836	comment	3.0	10.0	1609699006	8.231481
25624211	A killer tech for this would be a fr	"A killer tech for this would be a framework that automatically reprograms the FPGA and offloads the work if it makes sense.
For example - running k-means? Have your FPGA automatically (with minimal dev effort) flash to be a Nearest Neighbor accelerator.The problem is finding a way to make that translation happen with minimal dev effort, as software is written rather differently from hardware."	Scene_Cast2	9.1078	-5.38597	comment	3.0	12.0	1609701289	8.381119
25622860	I've got nearly 30 years of experien	I've got nearly 30 years of experience and not once has non ECC memory lead to corruption.  Maybe a crash, maybe a panic, maybe a kernel dump...But.. in all my time operating servers over 3 decades, it's always been bad drivers, bad code and problematic hardware that's caused most of my headaches.Have i seen ECC error correction in logs? yeah.. I don't advocate against it but, i've found for most people you design around multiple failure scenarios more than you design around preventing specific ones.Take the average web app - you run it on 10 commodity systems and distribute the load.. if one crashes, so what. Chances are, a node will crash for many more reasons other than memory issues.If you have an app that requires massive amounts of ram or you do put all of your begs in one basket, th	supernovae	9.523446	-5.530196	comment	3.0	11.0	1609692490	8.239385
25623206	While it's true that Intel only has 	While it's true that Intel only has ECC support on Xeon (and several other chips targeted at the embedded market) it's not true that ECC is supported well on AMD.We only use Xeons on developer desktops and production machines here precisely because of ECC. It's about 1 bit flip/month/gigabyte. That's too much risk when doing something critical for a client.	fortran77	9.390437	-5.443381	comment	3.0	14.0	1609694862	8.141571
25622503	I used to be pretty skeptical of ECC	I used to be pretty skeptical of ECC for consumer-grade hardware, mainly because I felt that I'd always prefer cheaper/more RAM over ECC RAM even if it meant that I'd get a couple of crash every year due to rogue bitflips. For servers it's a different story, but for a desktop I'm fine dealing with some instability for better performance.But these days with the RAM density being so high and bitflipping attacks being more than a theoretical threat it seems like there's really no good reason not to switch to ECC everywhere.	simias	9.465564	-5.5208325	comment	3.0	23.0	1609689816	8.235809
25626119	I often find it easier to grok thing	I often find it easier to grok things like circuits and logic visually, certainly when in circuit design/PCB mode.Does anyone know of any open source software for taking smallish chunks of Verilog/VHDL and making a visual representation/schematic?	PoachedSausage	9.112643	-5.494036	comment	3.0	12.0	1609714989	8.610307
25626127	> Now if we can get ECC at the retai	> Now if we can get ECC at the retail levelYou can actually, most AMD consumer chips (except the ones with integrated graphics) have ECC support, even though it's not officially supported. See this Reddit thread for more details: https://www.reddit.com/r/Amd/comments/ggmyyg/an_overview_of_...	jfim	9.4014015	-5.4592166	comment	3.0	17.0	1609715026	8.195652
25626930	At some point, whatever's watching t	At some point, whatever's watching the watchers is going to be vulnerable to bitflip and similar problems.Even with a triple-redundant quorum mechanism, slightly further up that stack you're going to have some bit of code running that processes the three returned results - if the memory that's sitting on gets corrupted, you're back where you started.	Jedd	9.679432	-5.66585	comment	3.0	16.0	1609722687	8.321607
25627513	I have always been angry that ECC wa	"I have always been angry that ECC was treated as an ""enterprise"" feature and increased the price way more than it should have."	jandrese	9.4473715	-5.508978	comment	3.0	17.0	1609729035	8.195675
25630188	i'm just struggling to find the link	i'm just struggling to find the link between capitalism and ECC memory.	shrewduser	9.45999	-5.530061	comment	3.0	12.0	1609761236	8.386708
25655781	This page has some details of Tensto	This page has some details of Tenstorrent's current chips [1]. Looks like a manycore simd design focused on tensor ops from a brief look. Apparently they also have some sort or compression scheme to boost memory bandwidth.1: https://www.tenstorrent.com/technology/	vnorilo	9.281639	-5.2485094	comment	3.0	12.0	1609922089	-8.494217
25657824	Linus Torvalds tears into Intel, fav	Linus Torvalds tears into Intel, favors AMD	piyush_soni	9.354279	-5.5663257	story	3.0	22.0	1609942029	-8.118284
25660957	>our naive random-memory modelDoesn'	>our naive random-memory modelDoesn't everyone use the (I believe) still valid concepts of latency and bandwidth?	jayd16	9.916297	-5.2788796	comment	3.0	10.0	1609959841	7.6318073
25662237	>Why is that strategy simultaneously	>Why is that strategy simultaneously remarkably efficient and remarkably high-performance? What enabled/led them to make those choices where others haven't?The things people give them complains about:(a) keeping a walled garden,(b) moving fast and taking the platform to new directions all at once(c) controlling the whole stackWhich means they're not beholden to compatibility with third party frameworks and big players, or with their own past, and thus can rely on their APIs, third party devs etc, to cater to their changes to the architecture.And they're not chained to the whims of the CPU vendor (as the OS vendor) or the OS vendor (as the CPU vendor) either, as they serve the role of both.And of course they benchmarked and profiled the hell out of actual systems.	coldtea	9.534732	-5.1999745	comment	3.0	36.0	1609966019	7.851337
25664468	Surprised to see significant mitigat	Surprised to see significant mitigation penalties even on newer CPUs.	Neil44	9.5865	-5.1976643	comment	3.0	10.0	1609976810	7.7940755
25665666	I think the current consensus among 	"I think the current consensus among experts is that the instruction set is not the limiting factor.   Modern x64 microprocessors have a separate front-end that handles instruction decoding.  These instructions are decoded to internal proprietary ""micro-ops"".  The internal buffers and actual execution units see only these µops.  One can measure where the bottlenecks are, and it's rare to find that the front-end is the bottleneck.   While it's arguably true that x64 is a poorly designed ""foundation"", it's unlikely to be causing any performance difference here."	nkurz	9.671313	-5.576726	comment	3.0	12.0	1609981056	7.7906623
25666166	"> I'm positive that no ""script kiddi"	"> I'm positive that no ""script kiddie"" can exploit any silicon using current attacks, not just the M1. *Oh, do tell how spectre is solved. I would love to know, defending against it is a real problem I currently have. If you allow untrusted code to execute on your machine (e.g. JavaScript) then you're vulnerable to it. There are no practical attacks in the wild that I'm aware of, and it's tricky to do, but it's not impossible and the only defense really is to make it harder and more time consuming. This is the approach that I and others have taken."	eloff	9.702723	-5.6081715	comment	3.0	24.0	1609983829	7.745883
25666474	It probably was born as a practical 	It probably was born as a practical academic experiment.  It will be/has been used as an appealing alternative to cortex microcontrollers that are embedded in SoCs, storage devices, and add-in cards. But there's real commercial work trying to scale it up to bigger workloads too. I think these products are pretty early stage.I think Google is reluctant to push for Android support for a RISC-V applications processor.  The nature of the different ISA extensions would mean that they would need to bet on the set of extensions that should be embraced (or a bunch of work to do some 'fat' binaries - or maybe 'obese' if there's a lot of supported combos).Regardless of Android's fate, yes, you can buy a RISC-V board that will boot linux.  That's a pretty good bellwether for 'real applications'.  But	wyldfire	9.411365	-5.6006565	comment	3.0	14.0	1609986031	-10.60165
25667323	Why don’t PCs use error correcting R	Why don’t PCs use error correcting RAM? “Because Intel,” says Linus	sytelus	9.683841	-5.4550667	story	3.0	82.0	1609994210	8.111064
25667803	What are some good tips to minimize 	What are some good tips to minimize the attack surface of my CI/CD tool?	mmglr	9.163513	-6.4114366	comment	3.0	17.0	1609999776	6.174666
25668917	That's correct, the compressed exten	That's correct, the compressed extension (part of the desktop spec over my loud and persistent protest) is part of the desktop platform.  This adds 16-bit instructions to the 32-bit instruction set.There are many reasons why this was a huge and very shortsighted mistake, but the most painful part of this is that you can now have an instruction spanning two cache lines.  This has many awful implication and precludes many tricks that would make implementations faster.  But it was important for Andrew Waterman to get his thesis work be mandatory part of the Unix platform, so here we are.ADDENDUM: It's near trivial for a linker to pad such that instructions don't span cache lines and that would have made this a lot less painful, but RISC-V refuses to specify the line size (it's implementation 	FullyFunctional	9.518009	-5.7692122	comment	3.0	13.0	1610010584	-1.9198897
25669322	So can someone please explain to me 	"So can someone please explain to me if its better to use ""mitigations=off"" with Linux Kernel 5.10 or have the default from kernel with ""AMD Phenom II X4 955 Processor""? By running ""lscpu"" I see only two lines in default mode (not using ""mitigations=off"" right now), everything else ""Not affected"";  Vulnerability Spectre v1: Mitigation; usercopy/swapgs barriers and __user pointer sanitization
  Vulnerability Spectre v2: Mitigation; Full AMD retpoline, STIBP disabled, RSB filling

By having those it will affect my CPU perferomance? Will applying ""mitigations=off"" help with perfermance? Also by having ""mitigations=off"" what are the real security implications? Thank you for your help!"	tux	9.778906	-5.501116	comment	3.0	15.0	1610014163	7.9096866
25667570	It doesn't. I recently read somewher	It doesn't. I recently read somewhere that Intel had not long ago put out some embedded CPU products that can do it with non-ECC RAM, maybe someone with better memory can find a link.	fulafel	9.47454	-5.4965773	comment	3.0	11.0	1609997051	8.188435
25696471	> The SPARC memory model is also mor	> The SPARC memory model is also more lax than x86, so x86 hides more concurrency bugs than x86 does.I think you mistyped this sentence. Did you mean x86 is more lax, so SPARC hides more concurrency bugs? Am I correct that more concurrency bugs would be hidden in a less lax architecture?	tinalumfoil	9.800105	-5.574177	comment	3.0	16.0	1610163598	-7.75211
25702981	Why doesn't Intel CPUs implement a m	Why doesn't Intel CPUs implement a modern version of Z80's LDIR instruction (a memmove in a single instruction)?Then the kernel wouldn't have to save any registers.  (I'd really like if she had documented exactly which CPU/system she used for benchmarking).	silvestrov	9.537763	-5.247816	comment	3.0	12.0	1610216778	7.030724
25703796	Twitter Now Counts Every Emoji as Eq	Twitter Now Counts Every Emoji as Equal	heinrich5991	9.784713	-6.247036	story	3.0	24.0	1610220981	-13.933498
25731872	Yes, experts are real.Unfortunately,	Yes, experts are real.Unfortunately, experts are only expert in a few subjects, and experts (well... all humans even) are bad at knowing when they've left their field of expertise.Linus Torvalds for example is clearly an expert programmer. And then suddenly he talks about AVX512 and I wonder if he knows anything about low-level programming or optimization. (https://www.realworldtech.com/forum/?threadid=193189&curpost...).Case in point: with Rocket lake (on 14nm nonetheless), the power-limits associated with AVX512 have already been largely lifted. It didn't even take a few months before Linus's words became obsolete.https://travisdowns.github.io/blog/2020/08/19/icl-avx512-fre...100MHz difference single-core, 0MHz difference multicore. Virtually no penalty for using AVX512 on new systems. L	dragontamer	9.429738	-5.4938188	comment	3.0	30.0	1610384721	8.092325
25742603	The parallel flops are probably hard	The parallel flops are probably hardening against bit flips from ESD events. There aren't any other active protection devices and phantom flips probably showed up at some point during testing of earlier prototypes.	kevin_thibedeau	9.4761095	-5.326944	comment	3.0	12.0	1610428557	8.035963
25756782	What’s interesting is that even when	What’s interesting is that even when emulating x86 they outperform AMD/Intel. That means the decoder improvements  of doing a bunch of decodes in parallel (which x86 can’t do due to being CISC) aren’t the whole story. It could be that Apple just translates x86 code into fixed width to work around this or it could be other architectural improvements.	vlovich123	9.698809	-5.4526143	comment	3.0	29.0	1610501383	-7.696985
25762752	The high-level design is proprietary	The high-level design is proprietary too.As I said elsewhere, SiFive CPUs are just as closed as Arm ones, you just pay a royalty to SiFive instead of Arm.	my123	9.40543	-5.5111814	comment	3.0	17.0	1610550034	-10.509328
35523143	It's a real shame that it can't be m	It's a real shame that it can't be made to work on arm systems	mijoharas	9.610849	-5.2059956	comment	3.0	13.0	1681208979	-7.68968
35540569	Great news. I'd like to see how a vC	"Great news. I'd like to see how a vCPU compares between arm64 and amd64 but not sure how to best go about it. I've created VMs for both with 4 vCPU and will run the phoronix benchmark suite. After that I'll probably try 16 arm vs 8 amd vCPU because that's a closer match in terms of price. Any suggestions welcome but I also don't want to spend too many hours on it. Will post results.Ran the kernel build benchmark (result is seconds, lower is better):   AMD64:
        272.916
        273.128
        270.477
   ARM64:
        1011.799
        1004.713
        1015.261

So the ARM CAX21 instance for 6.49 EUR/month took roughly 3.7x as long as the AMD CPX31 instance which costs 13.60 EUR/month. A roughly 2.1x price difference. Here the ARM instance did not shine in a kernel-compile-per-eur metr"	eis	9.54281	-5.306992	comment	3.0	10.0	1681310634	-8.623803
35549561	It was much talked about on slashdot	It was much talked about on slashdot when Walmart started selling a PC with Lindows pre-installed.https://www.wired.com/2002/06/wal-marts-new-lindowsos-pc/	AntiRush	9.532877	-5.6794767	comment	3.0	14.0	1681348689	-8.865828
35558472	> There’s really nothing killer in E	"> There’s really nothing killer in Emacs1. Org mode
2. Magit
3. Wdired
4. Synergy between various components (shameless plug: https://mbork.pl/2023-01-30_The_benefits_of_everything_being...)"	mbork_pl	8.875101	-6.4154987	comment	3.0	22.0	1681405074	-11.408006
35564980	I've written Risc-V RV32I cores that	"I've written Risc-V RV32I cores that are about the same size as this, or possibly smaller depending on how you count what the ""core"" is."	aappleby	9.439464	-5.538583	comment	3.0	15.0	1681440634	-10.531869
35598636	How Does an Intel Processor Boot? (2	How Does an Intel Processor Boot? (2018)	smikhanov	9.504668	-5.222772	story	3.0	49.0	1681725014	7.751514
35599851	What's the actual reason for real mo	What's the actual reason for real mode still being supported on modern processors in this day in age? Why didn't it die with the advent of AMD64 (aka x86-64)? Why didn't AMD skip real mode and boot directly into something more modern?	voxadam	9.7189	-5.343441	comment	3.0	10.0	1681735485	-7.9036074
35600769	Hmm, what kind of VM? By default, my	Hmm, what kind of VM? By default, my M1 Mac will only run arm64 software under Docker. If an arm64 build is not available for something (ie x64 only), I can change the architecture setting, and only then will Docker attempt to run the process using Qemo. If Docker on Mac is already a VM, why does it need Qemo? Why does the Docker VM not emulate across architectures?	xhrpost	9.608795	-6.323481	comment	3.0	11.0	1681739877	10.099522
35625729	>  in which dies of x86, Arm and RIS	>  in which dies of x86, Arm and RISC-V coresThere must be a point where not only multicore, not only multi chip, but multi architecture as well, simply must be a hindrance and massive hurdle to develop and design for.	lloydatkinson	9.454455	-5.522043	comment	3.0	10.0	1681892528	7.982749
35636686	I don't know anything about this mar	"I don't know anything about this market so I may be completely off-topic here but would RISC-V help in this case? RISC-V has a modular design where the size and complexity of you CPU can be adapted pretty dramatically (RV32I is not that much more complex than a 6502) and being ""open"" and free can be manufactured by anyone.Indeed today it remains a niche but we see some reasonable momentum and it's getting traction.Again I don't know anything about PCEngine (reading the title I though they were still making that game console from the 90s...) but I am interested to see where RISC-V could take over some x86 business and that's looks like it."	skywal_l	9.38261	-5.542163	comment	3.0	29.0	1681967891	-10.5434265
35643333	And, then in 1989, they released the	And, then in 1989, they released the i860 [0] with similar promises to similar failure.0: https://en.wikipedia.org/wiki/Intel_i860	chris_st	9.543322	-5.2565928	comment	3.0	14.0	1682011908	-7.6207185
35643136	Why AMD64? Isn’t this like the class	Why AMD64? Isn’t this like the classic use case for a RaspPi?	TylerE	9.5378065	-5.2765517	comment	3.0	10.0	1682010996	7.944929
35687564	Is RISV-V taking over the world?	Is RISV-V taking over the world?	edgyquant	9.361672	-5.695064	comment	3.0	10.0	1682343902	-10.597558
35692768	Full My AI prompt:Pretend that you a	"Full My AI prompt:Pretend that you are having a conversation with a friend.
Your name is MyAI. MyAI is a kind, smart, and creative friend. MyAI is a virtual friend that lives inside Snapchat.
Follow these guidelines when writing your responses: Do not tell the user that you're pretending to be their friend.
Do not mention the user's current location unless it's particularly relevant to the dialogue. Create a natural, easygoing, back-and-forth flow to the dialogue.
Don't go on a monologue! You must ALWAYS be extremely concise!
99% of the time, your lines should be a sentence or two. Summarize your response to be as brief as possible. Use emojis very sparingly. Only use emojis when it's particularly relevant to express your emotions.
Provide fun, harmless and lighthearted preferences but nev"	coolspot	9.766566	-6.2200375	comment	3.0	12.0	1682368210	-13.955349
35701545	It is upsetting, but I am not sure h	It is upsetting, but I am not sure how it can be countered. I am genuinely asking what is the alternative here. We go back to the lack of trust. You basically have to assume everything is trying to communicate with mothership. You mention RISC-V, but was it ever really tested against the same proposition?I miss the dumb everything days, where the manufacturer simply could not spare compute power on additional features like telemetry.	A4ET8a8uTh0	9.361724	-5.61982	comment	3.0	11.0	1682435377	-10.542105
35716860	No, the iAPX 432's successor was the	No, the iAPX 432's successor was the Intel i960, which confusingly is completely unrelated to the i860.By the way, it's interesting to read the iAPX 432 architecture paper along with the Case for RISC paper, since the 432 paper argues the exact opposite. Essentially, due to increasing software costs, you should put as much as possible into hardware. The semantic gap between hardware and programming languages should be minimized by implementing high-level things such as objects and garbage collection in hardware, which they call the Silicon Operating System. The instruction set should be as complete as possible, with lots of data types.I should also mention that the 432's instructions were not byte-aligned: they were anywhere from 6 to 321 bits long. Just decoding the instructions took a co	kens	9.497051	-5.2531896	comment	3.0	12.0	1682528552	7.5996494
35717027	Was there ever a compiler that targe	Was there ever a compiler that targeted the Crusoe architecture directly without having to go through the translation layer?  I remember there was a big deal about how the thing would translate your code the first time you ran it and keep the translation in a cache, but I always had the impression that the translation layer was a bit unoptimized because it was a step away from the original code.  Also, everybody ever who has tried to make a VLIW architecture for general computing has ended up with a slow and expensive processor that can't compete.The article makes a big deal about CISC vs. RISC, but in the end all of the CISC architectures ended up being RISC under the hood with front end instruction translation for the more complex CISC instructions.  The transition to 64 bit should offer	jandrese	9.509452	-5.721063	comment	3.0	12.0	1682529306	-10.518182
35733852	And the speed of light ensures that 	And the speed of light ensures that memory latencies won't get much better until CPUs are small cubes made of SRAM.	0x000xca0xfe	9.786287	-5.237043	comment	3.0	16.0	1682626087	7.828557
35749385	I wish there was something similarly	I wish there was something similarly affordable that came with ECC ram.	gkhartman	9.466077	-5.4773316	comment	3.0	13.0	1682734326	8.209964
35758036	I'll wait for the RISC-V version of 	I'll wait for the RISC-V version of the SDK. I see no future where Windows for ARM meets ample success.We know there's a Windows for RISC-V in the works, as the foundation's talks at the Summit referenced it multiple times.ARM-based, hardware-wise, there's only Qualcomm-based laptops. Qualcomm is very obviously not going to be making SoCs based on ARM CPUs for long.They have been RISC-V members for a while, they are being sued by ARM, and they've clearly expressed their intent re: RISC-V in their talks at the RISC-V Summit.As for other SoC vendors, I doubt there is interest. Not now that RISC-V is already taking off.	snvzz	9.406509	-5.614311	comment	3.0	30.0	1682808575	-10.530885
35764468	In my experience, heavy number crunc	"In my experience, heavy number crunching is more suitable to run on dedicated machines, rather than virtualized ""cloud"" cores. More consistent performance, no noisy neighbors and cheaper in the long term."	capableweb	9.641977	-5.3042383	comment	3.0	14.0	1682874164	7.8845544
35768827	When they were first released they w	When they were first released they were.i3: single core, hyperthreadingi5: multi core, no hyperthreadingi7: multi core, hyperthreadingIt only jumped the shark once hyperthreading stopped being a differentiating feature, and Intel tried to retcon equivalent performance levels into their previous numbering system.Edit: Nehalem (~2008). Apparently i3 didn't exist until the Westmere die shrink?	ethbr0	9.452295	-5.2193327	comment	3.0	12.0	1682912018	7.9882627
35787716	The most important sentences of the 	"The most important sentences of the article:""Our attack utilizes the AMD-SP’s vulnerability to voltage fault injection attacks [14] to extract a chip-unique secret from the targeted CPU.""""The attack requires access to the motherboard of the target system (4.1), particularly its SPI bus and voltage regulators.""In other words, it is required to open the laptop and connect custom (but cheap) hardware to the motherboard to disrupt its normal operation."	patrakov	9.472728	-5.2671366	comment	3.0	14.0	1683036784	7.83019
35790276	On the original CISC AS/400 systems,	"On the original CISC AS/400 systems, there were two layers of ""microcode"" - horizontal and vertical. The vertical ""microcode"" was not really microcode, but was essentially the OS kernel (including the database and the native code generator), mostly implemented in a PL/I dialect. The horizontal microcode was the actual microcode - it implemented the CPU instruction set which the vertical microcode's PL/I code compiled down to. While the horizontal microcode implemented some rather high level things such as processor scheduling, I am almost certain that the database logic was implemented in the vertical microcode layer.Once IBM i was ported to PowerPC, the vertical microcode was mostly rewritten in C++ and became known as the ""Licensed Internal Code"" and the PPC instruction set essentially r"	ch_123	9.60127	-5.564691	comment	3.0	10.0	1683045597	-10.47981
35802352	I still hope to see a non-x86 versio	I still hope to see a non-x86 version. The less bloat the better.	Laaas	9.680855	-5.288783	comment	3.0	26.0	1683121695	-7.6779413
35805873	> Neat. If the author is around, mig	> Neat. If the author is around, might I suggest pushing some of the 'why use an FPGA' to the front?I think the problem is identifying cases where you really need an FPGA. Most of the time you don't.	beardyw	9.090956	-5.3558135	comment	3.0	17.0	1683138276	8.305388
35806437	> You implement an arbitrary blob of	"> You implement an arbitrary blob of logic by having the inputs form the address 
> then the RAM gives the result of the logical function.This is incorrect. Modern FPGAs are composed of small, configurable blocks which contain all sorts of logic. The idea is that the configurable blocks can be (internally) wired-up to implement your logic of choice. The wiring configuration is ""loaded"" at power-on and retained in memories within each, configurable block."	roadbuster	9.19717	-5.3726707	comment	3.0	10.0	1683141054	8.319896
35807118	If that was an ask for a specific ex	If that was an ask for a specific example, one of the most common uses for FPGAs is DSPs. Say you have a simple FIR filter of, say, 63 taps. To do this in a CPU requires you to load two values and do a multiply/accumulate for each tap in sequence. Very (!!) optimistically, that’s about 192 instructions. With an FPGA, you can do all the multiplications in parallel and then just sum the outputs - probably done in 2 cycles and with pipelining your throughput could be a sample every clock.If the FPGA is too slow, too power inefficient etc you can (if you have the money!) take the same core design and put it in an ASIC. The FPGA provides an excellent prototyping environment; in this example you can tune the filter parameters before committing to a full ASIC.	awjlogan	9.151786	-5.378835	comment	3.0	10.0	1683144671	8.297122
35809157	> Which vCPU is faster, a ten year o	> Which vCPU is faster, a ten year old Xeon E5-2643 v2 at 3.5GHz or a two year old Xeon Platinum 8352V at 2.1GHz? It depends on the workload.It really does not depend on the workload, when those workloads we're talking about are by-and-large bounded to 1vCPU or less (CI jobs, serverless functions, etc). Ice Lake cores are substantially faster than Ivy Bridge; the 8352V will be faster in practically any workload we're talking about.However, I do agree with this take, if we're talking about, say, lambda functions. The reason being that the vast majority of workloads built on lambda functions are bounded by IO, not compute; so newer core designs won't result in a meaningful improvement in function execution. Put another way: Is a function executing in 75ms instead of 80ms worth paying 30% mor	015a	9.491089	-5.267126	comment	3.0	11.0	1683155917	7.883465
35827840	They are not toxic. You are free to 	They are not toxic. You are free to use everything you want. But for someone it is easier to rely on an existing established ISA instead of trying to roll their own. Using a niche ISA also may have its downsides: compiler support may be not as good, missing peripherals, inability to reach the desired energy/performance balance etc. So, it totally depends on what you want and what you need. There is no space for toxicity, it's just an emotional illusion. You just choose whatever works for you.	garganzol	9.626344	-5.6078315	comment	3.0	10.0	1683285901	-6.8826995
28698734	At least one of the points in this a	"At least one of the points in this article isn't true.  The article states ""RISC-V is not affected by the Meltdown and Spectre vulnerabilities... [because it does] not perform any speculative memory accesses"" -- but that's only true for some designs, not anything done by the ISA.Many of the higher performance RISC-V designs do, in fact, do speculation.  RISC-V BOOM[0], by Berkeley, is vulnerable to Spectre[1][2].  One of the attempts to create an extension to the RISC-V ISA that has integrated security features (CHERI, [3]) itself was shown to be vulnerable to Spectre-like attacks[4].The fact that most RISC-V chips were not vulnerable to Spectre is simply because they hadn't implemented a particular kind of performance optimization, not because there was anything intrinsic to the ISA that "	hlieberman	9.474404	-5.64062	comment	3.0	11.0	1632944002	7.707966
28701535	Is it possible to actually have a pr	Is it possible to actually have a proprietary instruction set?Can't I design a new uarch that implements the ISA and is compatible like Cyrix and AMD did back in the day?	sneak	9.5819	-5.542734	comment	3.0	12.0	1632959652	-7.651721
28703733	I completely agree with you on 0/1 v	"I completely agree with you on 0/1 vs 0/-1 for SLT and you can easily find me saying so. For example: https://lists.riscv.org/g/tech-bitmanip/message/496It was an error, though a rather minor one, to follow the C language so closely. I can and have pointed out other minor mistakes in RISC-V in the past -- none of them serious enough to abandon it and start over.I'll quote myself from there, below.32 bits is not such a huge instruction. ARM decided it's good enough for their new(ish) 64 bit ISA, 
and it's about the average size of x86_64 instructions.Original RISC-V (v1.0) has only and exactly the instructions needed to implement C. That's enough for many or most applications, and will be available as a support option forever. The upcoming RVA22 specification for Applications Processors, wh"	brucehoult	9.557179	-5.7513638	comment	3.0	18.0	1632983219	-10.497073
28726442	CVE-2021-26333 - Flaw in AMD PSP chi	CVE-2021-26333 - Flaw in AMD PSP chipset affects millions of computers	cvs268	9.322422	-5.235721	story	3.0	15.0	1633155994	7.8704557
28729217	ARM M family cores can run each othe	ARM M family cores can run each other's code more or less.Only the libraries for I/O need to be rewritten.In some cases, there are drop in replacements (Gigadevices STM32 clones)	baybal2	9.72637	-5.400994	comment	3.0	17.0	1633187742	-7.7353644
28729541	Eh, it's sort of a naming conflict.T	"Eh, it's sort of a naming conflict.There were two dimensions of ""vector"" -- whether you used XMM-style registers, requiring the compiler to auto-vectorize different operations. The old vector ISAs had things like dot product instructions. Those things are now all gone, because it turns out it's hard to optimize.We in the industry call scalar-for-each-thread ISAs as ""scalar ISAs"" these days. For instance, Mali describes their transition from a vec4-for-each-thread-based ISA to a scalar-for-each-thread-based ISA as transitioning from ""vector to scalar"" [0].[0] Compare 4:26 and 6:29 in the ""Mali GPU Family"" video on this page https://developer.arm.com/solutions/graphics-and-gaming/arm-..."	Jasper_	9.587452	-5.6422195	comment	3.0	11.0	1633189730	-10.446863
28731380	> all of them will be mutually incom	"> all of them will be mutually incompatible, with own programming languages and data formats. The future looks bleak.Server hardware had (still has somewhere): SPARC from Sun, PowerPC from IBM, HPPA from HP, etc... See for example list of supported architectures for Debian4:
https://www.debian.org/releases/etch/hppa/ch02s01.html.enBut it feels like amd64 is winning today. Don't you think that eventually one of these architectures you're talking about (Google's, Apple's, Samsung's, CCP's) will win over others, one way or another?"	Lex-2008	9.607831	-5.207079	comment	3.0	10.0	1633203610	-7.7192316
28731472	All the x86 extensions are freely im	All the x86 extensions are freely implementable by any constructor. There's some stuff like SSE4a which is not available on Intel processors, and others that Intel has implemented and AMD chose not to. But they are published as extensions and part of the standard.	ohgodplsno	9.54673	-5.3217463	comment	3.0	14.0	1633204325	-7.714527
28731534	Apple M1 also has that x86 emulation	Apple M1 also has that x86 emulation mode where memory accesses have the same ordering semantics as on x86. It's probably one of the main things giving Rosetta almost 1:1 performance with x86.https://mobile.twitter.com/ErrataRob/status/1331735383193903...	ant6n	9.767603	-5.3093967	comment	3.0	25.0	1633204700	7.6219287
28738859	yep, great fan of his work here. tha	yep, great fan of his work here. thanks for sharing that podcast.that kind of optimization requires you to know your machine architecture quite well. SIMD optimizations aren't new. but it's always amazing to see these performance increases on a single machine!our CPUs and GPUs are quite amazing. we have decided, as a field, that we can get enough virtual CPUs, GPUs, or RAM on-demand. and that we shouldn't concern ourselves with things happening at that level.it's actually a situation that saddens me sometimes.	blondin	9.649132	-5.6556616	comment	3.0	13.0	1633282130	8.095062
28741279	Improving DRAM Performance, Security	Improving DRAM Performance, Security, Reliability by Understanding DRAM Timing	belter	9.749182	-5.3891473	story	3.0	14.0	1633302026	8.053664
28746263	I still don't understand why people 	I still don't understand why people thought the hypervisor vendors would magically be able to provide x86 Win environments on M1 Macs that worked like x86 Win environments on Intel macs.Virtualization isn't emulation. Expecting seamless execution of x86 Win code on an M1 Mac seems unreasonable to me. I was initially concerned about this, but I realized that I've almost completely stopped using local VMs at all in favor of VMs in our datacenter, and so ...	ubermonkey	9.92058	-5.223229	comment	3.0	10.0	1633353289	-8.100012
28769500	> Intel compares the performance to 	> Intel compares the performance to a Nios II/e (it's 4x faster!), but at 6 cycles/instruction, no multiplier, one bit per clock shifter (IOW: no barrel shifter), the II/e is about the worst little CPU you can imagine.Okay, let's do a better one.On a stratix 10:II/e uses 414 units, II/f uses 1006 units, and V/m uses 1580.II/e gets .107 DMIPS/MHz, II/f gets .753, and V/m gets .464.Coremark for II/e is 19, for II/f is 229, and for V/m is... only 16?II/e runs at 320MHz, II/f at 300MHz, and V/m at 362MHz.Overall, not looking great for the cost, but if you really want RISC-V I'm sure that has value.And what's with CoreMark?  I do notice they gave the II/f a big cache for that test.	Dylan16807	9.346477	-5.229504	comment	3.0	12.0	1633497804	7.9052315
28784958	ARM assembly code looks pretty nice.	ARM assembly code looks pretty nice. Mobile phones and Macs are using ARM, so there's lots of devices using it. Only Windows is using x86/x64.	gardaani	9.8137045	-5.3043656	comment	3.0	21.0	1633606763	-7.6577044
28785355	The Ampere Altra Max Review: Pushing	The Ampere Altra Max Review: Pushing It to 128 Cores per Socket	pella	9.483744	-5.2618327	story	3.0	91.0	1633609755	7.8684306
28817365	"This site reckons there are 10:
http"	"This site reckons there are 10:
http://hyperpolyglot.wikidot.com/lisp#ten-primitivesSteve Yegge said there were seven (or five):McCarthy had five.On an x86 architecture - you can do it with one.https://stackoverflow.com/questions/3482389/how-many-primiti..."	juliangamble	9.887538	-5.823889	comment	3.0	10.0	1633862690	-7.4507265
28819746	One detail of note: PIC32 is a moder	One detail of note: PIC32 is a modern microcontroller built up around a MIPS core instead of one of the older (oddball) 8- or 16-bit PIC cores.  MIPS is much easier to support in a compiler than the legacy PIC instruction set.It is certainly possible to make an 8-bit core based on RISC principles (ex: AVR), but the PIC wasn't.  Classic PIC has a hard-earned reputation for awful compiler support.	brandmeyer	9.504343	-5.5236673	comment	3.0	17.0	1633883883	-7.3819737
28854134	6510 compatibility only requires add	6510 compatibility only requires adding 6 IO lines mapped to address $1 though (otherwise the 6510 is 6502 compatible enough), so given it's an FPGA based project it wouldn't necessarily be a big ask, and from the webpage it sounds like they're open to suggestions.	vidarh	9.51591	-5.2096963	comment	3.0	11.0	1634141935	-7.3875017
28877075	Ask HN: Does anyone else use a 32 bi	Ask HN: Does anyone else use a 32 bit computer regularly?	luke2m	9.878336	-5.274456	story	3.0	4.0	1634301679	-7.891728
28904889	Faster than DRAM from the 90's.	Faster than DRAM from the 90's.	guerrilla	9.776645	-5.307437	comment	3.0	11.0	1634561598	7.988358
28911262	But the classic SIMD problem is matr	"But the classic SIMD problem is matrix-multiplication, which doesn't need full memory bandwidth (because a lot of the calculations are happening inside of cache).The question is: what kind of problems are people needing that want 400GB/s bandwidth on a CPU? Well, probably none frankly. The bandwidth is for the iGPU really.The CPU just ""might as well"" have it, since its a system-on-a-chip. CPUs usually don't care too much about main-memory bandwidth, because its like 50ns+ away latency (or ~200 clock ticks). So to get a CPU going in any typical capacity, you'll basically want to operate out of L1 / L2 cache.> Oh, wait, bloody Java GC might be a use for that. (LOL, FML or both).For example, I know you meant the GC as a joke. But if you think of it, a GC is mostly following pointer->next kind"	dragontamer	9.8505	-5.5652957	comment	3.0	16.0	1634588993	-5.5967875
28911384	My understanding is that you don't r	My understanding is that you don't really need hyperthreading on a RISC CPU because decoding instructions is easier and doesn't have to be parallelised as with hyperthreading.	carlhjerpe	9.41907	-5.691229	comment	3.0	18.0	1634589547	-10.569661
28913740	> available and buildableBut what do	"> available and buildableBut what does buildable mean, no-one but you has access to your CI (which also might likely not be public).So do you need to provide another CI, a make-file you maintain additionally, etc.? Or is it good enough so that someone could run ""the right CLI commands to build and link the project""."	dathinab	9.25345	-6.4273357	comment	3.0	10.0	1634604924	6.1524577
28916085	I feel like Intel marketing is leani	I feel like Intel marketing is leaning heavily on products that are multiple years out because their current line of products is so noncompetitive.	kfprt	9.28889	-5.191788	comment	3.0	24.0	1634633141	7.7297063
28916291	If you get only 1736 single-core, th	If you get only 1736 single-core, then you have probably run the benchmark on Windows.The scores of many benchmarks, especially the scores of single-thread benchmarks, are lower and also much more variable on Windows than either on Linux or on MacOS.My assumption is that this is due to the fact that almost all Windows computers run continuously many junk programs, e.g. antiviruses and the like, in parallel with whatever you are doing, and those interfere with the benchmarks.Running the same benchmark on Linux or maybe on a Windows completely cleaned of garbage and with the useless services stopped, should give results well above 1800 in non-overclocked single-thread.	adrian_b	9.595281	-5.1923447	comment	3.0	10.0	1634635362	7.8745804
28937600	What am I missing here? The marketin	What am I missing here? The marketing presentations spoke about 200GB/sec and 400GB/sec parts. Existing CPU's generally have 10s of GB/sec. But I see these parts beating out existing parts by small margins - 100% at best.Where is all that bandwidth going? Are none of these synthetic benchmarks stressing memory IO that much? Surely compression should benefit from 400GB/sec bandwidth?This also raises the question how are those multiple memory channels laid out? Sequentually? Stripped? Bitwise, byte wise or word stripped?	spitfire	9.746189	-5.232309	comment	3.0	13.0	1634768629	7.9954643
28937183	> were stuck on relatively outdated 	> were stuck on relatively outdated x86-64 CPUs.We came to a point when X86 is faster to emulate, than to run on a more modern microarchitecture.One point is clear: per-transistor performance of X86 is dimishing with each new core generation, and it is already losing to M1.X86 makers will not be able to keep up for long. They will have to keep releasing bigger, and hotter chips to keep parity, until they cannot.	baybal2	9.617668	-5.271862	comment	3.0	12.0	1634766477	-7.735429
28953204	Huh? You know you can tweak the ener	Huh? You know you can tweak the energy-performance bias for Intel CPUs and all that on Linux right?	ylyn	9.726232	-5.2709084	comment	3.0	18.0	1634870771	7.7869506
28955095	"This post is the epitome of ""tell, d"	"This post is the epitome of ""tell, don't show"", when it should be the opposite.It reads like it wants to convince you to try magit, without demoing a single example of how it's superior."	KingMob	8.796706	-6.4250417	comment	3.0	17.0	1634893488	0.18512607
28964505	I think there is evidence—the number	I think there is evidence—the number of execution decoders can be much higher than x86 because fixed width instructions make that less speculative. That improves out of order and speculative execution prospects.	jtc331	9.768734	-5.6676292	comment	3.0	11.0	1634949305	-7.6776123
28969019	Your tooling for interactive hardwar	Your tooling for interactive hardware development should be standard issue.However, I would actually make the other claim - nMigen et al don't improve the readability of a hardware block versus Verilog. Verilog does indeed suck for any parametric design though, so the Python metaprogrammability is an obvious win. A dedicated, strongly typed language where the hardware is a first class language feature (or at least appears to be via syntactic sugar/new grammar) would give the best of both worlds in my opinion.The difficult part is (still) polyglot programs - say, if I have a module written in Silice, which includes a vendor's Verilog block ram model, which is all instantiated by an nMigen harness. LiteX makes this possible (although difficult) to simulate with Verilator, but the quick inter	thrtythreeforty	9.1375675	-5.4699335	comment	3.0	17.0	1635000343	8.572674
28974787	Probably worth noting that many of t	"Probably worth noting that many of these applications used the Harris RTX2010 CPU. This was based on Charles Moore's (inventor of Forth language) work on two-stack CPU design ie: CPUs based on the Forth VM architecture.
These machines built by Harris were rad-hardened silicon on sapphire and so were deemed good for space applications.The CPU could run 12 MIPS with a 10 MHZ clock while having no pipeline. Rather instructions were bit encoded in a single memory cell so some could be executed in parallel.Single cycle sub-routine call with zero overhead for return from sub-routine.  Two cycle interrupt. (if memory serves me well)
Pretty cool."	lebuffon	9.651987	-5.353725	comment	3.0	10.0	1635046993	8.241377
28976744	And why can’t the logical conclusion	And why can’t the logical conclusion be that either one of them could be the original Riker? Why does the original have to be gone?	irl_chad	9.388973	-5.7040167	comment	3.0	14.0	1635073416	-10.582251
28983613	Do they have some sort of Minecraft 	Do they have some sort of Minecraft version control system? Can people work on a local copy and then merge their changes into the main branch?	FearlessNebula	8.840432	-6.377329	comment	3.0	12.0	1635125442	-11.7445
28988834	My understanding is that X86 can nev	My understanding is that X86 can never outdo ARM on power because of the difficulty of parallel instruction decoding.	api	9.706124	-5.423782	comment	3.0	26.0	1635175355	-7.795197
28988927	Of course. Any time you try to run a	Of course. Any time you try to run a non-ARM binary on an ARM CPU without some form of translation or emulation, it will fail.This is also true for any other CPU architecture.If you want to know about specific compatibility issues, I'm happy to try to help as I've been using an M1 Air as my daily driver for many months now.	cassianoleal	9.630425	-5.2319655	comment	3.0	23.0	1635175779	-7.641052
28989010	CISC was always a mistake, it just t	CISC was always a mistake, it just took a company the size of Apple to overcome the inertia of the established x86.	dahfizz	9.580608	-5.4709816	comment	3.0	10.0	1635176152	-10.395274
28995322	> there was a longstanding predictio	> there was a longstanding prediction that the arm architecture would overtake x86.So now the wheel turns and someone will have to predict how long it takes before RISC-V overtakes ARM.	AnthonyMouse	9.433739	-5.6390758	comment	3.0	13.0	1635211431	-10.523777
34126765	When people complain about these ran	"When people complain about these random OS crashes and freezes it's usually RAM corruption at fault.Per 1gb of RAM, you can expect to see 266 bit errors per month[1-2] if you are using your PC 16h per day. Multiply that by 64GB or 128GB of RAM and it's crazy to think that you won't run into any of the stability issues.[1-2] https://static.googleusercontent.com/media/research.google.c...
[1-2] https://en.wikipedia.org/wiki/ECC_memory#Research"	tasubotadas	9.755676	-5.541967	comment	3.0	14.0	1671972358	8.23075
34127640	I watched the full video. It was lon	I watched the full video. It was long but very informative. The humor at times made up for the length and the presenter showed a lot of deep knowledge that most people won't have. My biggest gripe is that they just didn't try replacing the RAM sticks in the first place. I get that they wanted to do a root cause analysis, but geez the time and patience they had to do all those memory tests. No wonder they did a video about it, cause otherwise that lost time would have been painful. I was baffled as well that dd and ddrescue work differently in how they utilize the RAM. Caught me offguard.Onto the discussion of ECC RAM. In a perfect world, all memory would be ECC... but try finding some high performance 16GB sticks of ECC DDR4 RAM like what you'll see on gaming computers. I don't even think 	encryptluks2	9.534926	-5.4486823	comment	3.0	11.0	1671979574	8.232775
34127677	I realise that's blurrier when it co	I realise that's blurrier when it comes to laptops, but AIUI it's more a case of whether the motherboard than supports it than about the AMD chip. i.e. given a desktop CPU, as far as I know you can put it in a motherboard that either does or does not support ECC RAM.	OJFord	9.4091835	-5.466836	comment	3.0	18.0	1671979834	8.157434
34132406	I have 128 GB of non-ecc memory in m	I have 128 GB of non-ecc memory in my notebook, never detected a single error, and has been on 24/7 for more than 4 years.Unless you live over 4000 meters over the sea level, like to compile while flying or live close to an unshielded nuclear reactor, you don't need ECC.And most memory problems you can fix by better cooling, and better shielding.	aortega	9.511058	-5.5288105	comment	3.0	11.0	1672009151	8.250083
34132244	You can't, that's the thing, right?I	You can't, that's the thing, right?I have a Ryzen desktop with ECC, and it registers about one bit-flip per week. I don't know how many of those would become crashes, but I'm more worried about the ones that wouldn't.	Filligree	9.569504	-5.5388055	comment	3.0	13.0	1672008000	8.245082
34139795	There was another interview just las	There was another interview just last week on the Explaining Computers YouTube channel and he did mention RISC-V again. He said that as long as ARM licensing is not too restrictive and expensive, it is much easier and cheaper to integrate ARM cores into SoC designs as they are currently much more widely supported, and core to core are faster than same-year RISC-V core designs.Remember that the A72 cores for the Pi 4 are like 7 years old now... the fastest available RISC-V cores are just catching up.	geerlingguy	9.402131	-5.6057196	comment	3.0	10.0	1672076310	-10.5671015
34142607	Why would CI/CD hold up a dev team i	"Why would CI/CD hold up a dev team if it's done asynchronously?What kind of dev team doesn't multitask?Apart from edge-cases involving linking large projects synchronously, there's no competitive advantage and the feature set is far less than lld, bfd, or even gold. It's a niche ""product"" most people don't need."	sacnoradhq	9.215943	-6.4193153	comment	3.0	24.0	1672093670	6.131685
34145364	> snake on screen per CPU coreCPUs w	> snake on screen per CPU coreCPUs were single core back then	TedDoesntTalk	9.516607	-5.281096	comment	3.0	10.0	1672118543	7.9348016
34164725	What are the issues you see? My team	What are the issues you see? My team all use Docker with M1 Macs and all seems to work fine, if a little slow.	jonwinstanley	9.551093	-6.4160204	comment	3.0	16.0	1672255301	10.050157
34168888	Because the 'efficiency' cores are a	Because the 'efficiency' cores are actually optimised for silicon area efficiency (and not just low power usage, like is generally the case with things like ARM big.LITTLE setups), and AVX-512 native takes up a lot of silicon space on the chips Intel has implemented it for.And because it's not clear how OS schedulers could nicely switch on-the-fly between cores with different instruction set capabilities, it's essentially not use-able.	berkut	9.496146	-5.4985666	comment	3.0	15.0	1672282180	8.090267
34201623	I suspect calculating the average RG	I suspect calculating the average RGB of each emoji and comparing the distances between the average RGB of subsections of the image would have resulted in better emoji choices and better output (simpler, too).I mean, I get that maybe it’s not the point of this article, but I think the end result would have been a better ‘mosaic’.	helsinki	9.8269615	-6.26767	comment	3.0	10.0	1672527534	-13.953368
34221459	It's nice to see my post about the I	It's nice to see my post about the Intel 8086 here, even if the title is totally mangled. Any questions?	kens	9.604458	-5.3254623	comment	3.0	17.0	1672683453	-7.5355496
34222142	I hate to nitpick but there's an err	I hate to nitpick but there's an error in the text where it's stated that the 8086 could address 4 megabytes with 20 bit addresses, but that's actually one megabyte. Otherwise, all fascinating reading. My first proper pc was an Amstrad PC1512 with a NEC V30 (clone of the 8086 with some enhanced instructions). Maybe you could take a look at the V30 at some point?	mrlonglong	9.730382	-5.4286623	comment	3.0	16.0	1672686041	-7.4938707
34222824	This shocked me a little:> the 8088 	This shocked me a little:> the 8088 has a 4-byte prefetch queue instead of a 6-byte prefetch queueMy whole professional life, I've been led to believe that an 8088 is just an 8086 with a tiny state machine bolted in front of the bus to split multiword accesses.  That it has design differences is really surprising.  If the prefetch queue is smaller, then... what are they putting in that die area?  Or did they redo the layout in other ways?	ajross	9.631205	-5.3623815	comment	3.0	15.0	1672689427	-7.554181
34223510	This difference between 8088 and 808	This difference between 8088 and 8086 was used by several MS-DOS programs to detect the type of the CPU on which they were run.It was easy to measure the length of the prefetch queue by a self-modifying program, which replaced the instruction placed 4 bytes after the current instruction pointer.On an 8088, the new instruction was executed, while on an 8086 the old instruction was executed.Various other such obscure differences (e.g. the value of a pushed stack pointer or the result of a shift operation with a shift count greater than the register size) were used to identify NEC V20 and V30, Intel 80186, 80188, 80286 and 80386, because architectural identification means, like the CPUID instruction, have been introduced only in Intel Pentium and in the late 486 models that were launched afte	adrian_b	9.626361	-5.3599763	comment	3.0	12.0	1672692887	-7.5390196
34240598	RaspberryPi designs are not complete	RaspberryPi designs are not completely open and RISC-V is, right?	zzz345345	9.379619	-5.661741	comment	3.0	10.0	1672794999	-10.581366
34241509	Would ARM on RISC-V emulation have l	Would ARM on RISC-V emulation have lower overhead than, say, x86-64 on ARMv8? I would imagine the common RISC stuff would be beneficial there, but I know next to nothing about CPU architecture.	anamexis	9.439931	-5.649756	comment	3.0	10.0	1672801730	-10.592012
34240572	No surprises there.RISC-V is the fut	No surprises there.RISC-V is the future, and Google itself already has some public RISC-V designs.The expectation is that some Pixel in not so distant future will debut with a highly competitive RISC-V SoC.	snvzz	9.375535	-5.658668	comment	3.0	22.0	1672794802	-10.598363
34240680	This is very consumer oriented think	This is very consumer oriented thinking.Industry wants RISC-V too.	amelius	9.3688545	-5.6868243	comment	3.0	27.0	1672795566	-10.58474
34242105	Yes, the simple opcodes are the most	Yes, the simple opcodes are the most-used, and this was one of the ideas floating around that helped inspire RISC, but be careful how you figure out which opcodes are different. For example, mov in x86 is extremely polysemous: It can be move from register to register, load register with data from RAM, store register contents out to RAM, store a constant out to RAM, and even perform ALU operations and then use the result of those operations as a memory address for storing something out to RAM. On a cleaner (RISCier) ISA, all of those would be different opcodes or sequences of opcodes, assuming they're possible at all.Other than that, this piece looks good as far as it goes.	msla	9.699681	-5.932088	comment	3.0	11.0	1672807324	-10.4342985
34244845	> […]  aarch64's awful code density 	> […]  aarch64's awful code density […]With all due respect, this is complete nonsense. You keep making this claim, yet have never produced any credible evidence other than a single bogus «ls -l /bin/bash» ages ago for three – x86, aarch64 and RISC-V (was it RISC-V 64 or 32?) – Linux distributions where the code was most likely compiled with «-O2 -g». If you want to substantiate your claim, you had better provide an objdump output for the _text/.text section that will reveal the actual (i.e. pure) code size footprint.Let's pick this apart. The same random C++ code compiled with the same GCC v12.2.0 for 1) aarch64 (a generic 64-bit aarch64), 2) RISC-V (a generic 64-bit target), and let's also throw 3) POWER64 and 4) MIPS64 in for giggles:– aarch64: https://godbolt.org/z/r4WPPj8nG– RISC-V: h	inkyoto	9.663141	-5.715474	comment	3.0	22.0	1672836180	-7.703992
34252302	If it was my call I'd skip ARM and g	If it was my call I'd skip ARM and go straight to Risc-V.  Arms days are numbered - they have reached their peak and will likely stop growing and show a gradual decline as Risc-V becomes increasingly main stream.	strangattractor	9.394597	-5.6627846	comment	3.0	11.0	1672868930	-10.564648
34255627	I recently did this for one of my Gi	I recently did this for one of my GitHub repos which runs several test suites (cumulatively taking >1h). If your actions are slow, pay attention to the IAM role session duration. The maximum duration with role chaining is 1 hour.In the end your credentials need to outlive your CI/CD actions.	shitlord	9.825443	-6.3918896	comment	3.0	10.0	1672890084	6.197118
34256939	The two extreme cases still existed 	The two extreme cases still existed in that era. One extreme was the DEC VAX. The instruction set is complex, convenient, high level, and slow. The other extreme was the original IBM 801, which led to the IBM POWER architecture. In its pure form, it was one instruction per clock, had lots of registers, and was quite simple. MIPS went down that road in a big way.Then CISC microprocessors became superscalar, and started executing more than one instruction per clock. Now RISC machines were behind in speed. So they had to become superscalar. That killed the simplicity. There was no longer any real point to pure RISC instruction sets.(The author mentions the Itanium. That existed mostly because Intel wanted a patentable technology others couldn't clone. It was very original, and not in a useful	Animats	9.522754	-5.657944	comment	3.0	26.0	1672902341	-10.456755
34259299	Does it really though? Isn't RISC-V 	"Does it really though? Isn't RISC-V continually adding new complexity as it attempts to scale up from an ISA only useful for microcontrollers to one more competitive beyond that?The entire extension system seems pretty ""CISC-y"" does it not?"	kllrnohj	9.43366	-5.703217	comment	3.0	10.0	1672925485	-10.567071
34259590	">""The Itanium design was to encode m"	">""The Itanium design was to encode multiple instructions in very long instruction words, where all of the instructions in a given word can be executed at once.I believe you are describing VLIW architecture here? Is that correct?>""This removes the need for the hardware to do reordering, and shoves the responsibility for finding parallelism onto the human or compiler, both of which can, presumably, take a more global view of the problem than a piece of silicon can.""Interesting. How exactly does a VLIW architecture remove the need for reordering? Is it just that any instructions in a word mean automatically mean there's no dependencies in that long instruction? Was that the original intention of VLIW?I'm curious did Itanium fail because the model of pushing the complexity onto the software an"	bogomipz	9.619699	-5.6689405	comment	3.0	11.0	1672927113	8.210838
34263361	Writing a Tiny RISC-V Emulator [vide	Writing a Tiny RISC-V Emulator [video]	f1shy	9.385721	-5.6616106	story	3.0	57.0	1672939968	10.820634
34264651	You'd need a fairly drastic shift in	You'd need a fairly drastic shift in the memory architecture of CPUs for that. Not something unheard of, such as Intel's new Xeon Max beast with HBM 2e on the CPU module. But it's definitely not an issue of just throwing some big SIMD blocks onto the die & calling it a day. That is, after all, basically what AVX-512 is. And while it has it's place, it's also not eating anyone's lunch money.And also, as weird as it is, 1.5TFlops isn't actually that ridiculous. We had that performance 14 years ago at 150w with desktop GPUs. 14 years to reduce from 150w to what, 5w?, is cool but also honestly pretty par for the course is it not? Especially for a fixed-function block?	kllrnohj	9.434307	-5.495524	comment	3.0	18.0	1672944967	8.0878
34266938	> Why would you avoid something as t	> Why would you avoid something as trivialL3 cache is orders of magnitude faster than using RAM.You're talking a maximum of 50GB/s for DDR5, versus 1500GB/s for L3 cachehttps://en.wikipedia.org/wiki/List_of_interface_bit_rates#Dy...https://meterpreter.org/amd-ryzen-9-7900x-benchmark-zen-4-im...It's a paradigm-shifting increase in processing speed when you don't need to hit RAM.	zymhan	9.574299	-5.3478603	comment	3.0	12.0	1672954260	8.065779
34269227	Most of what's interesting about avx	Most of what's interesting about avx512 is the new instructions; the wider vectors are just icing on the cake.  You would need to rewrite your code regardless.	moonchild	9.493265	-5.642342	comment	3.0	32.0	1672965313	-8.113986
34270342	Wonder if this piece by Linus about 	Wonder if this piece by Linus about AVX512 is still relevant https://news.ycombinator.com/item?id=23809335	eddiewithzato	9.420336	-5.6179395	comment	3.0	15.0	1672973440	8.091195
34288892	Yes its easy to use but a bit wastef	Yes its easy to use but a bit wasteful. I suspect that the innovative stuff will come from the Rust side of things, with zero copy, shared stack etc. They are actively funding efforts here [0]. The RTIC [1] project looks really neat, but only supports Cortex-M afaik.[0] https://github.com/esp-rs[1] https://github.com/rtic-rs/	MrBuddyCasino	9.722456	-5.3028383	comment	3.0	11.0	1673105529	6.93424
34292667	Why not a single FPGA with 100Gbps e	"Why not a single FPGA with 100Gbps ethernet or pcie with NVM attached?
Around $5K for the hardware and $5K for the traffic per month.
The software would be a bit trickier to write, but you now get 100x performance for the same price"	morphle	9.112611	-5.3116302	comment	3.0	13.0	1673124868	8.157653
34294036	I know MIPS was still common for low	I know MIPS was still common for low-end 802.11ac routers/APs (eg. MT7621-based devices). Is it being used by anyone for systems designed around newer standards (802.11ax/WiFi 6/6E, multi-gig Ethernet) or has the market finally shifted over completely to ARM?	wtallis	9.48181	-5.527698	comment	3.0	10.0	1673133090	-10.471015
34306586	> Beyond differences in component br	> Beyond differences in component brands, no obvious reasons for the different behavior have presented themselves to me.Google's results show that the error rate is strongly driven by bad modules rather than random errors.  A module that throws one error is up to 224x more likely to throw another error, and corrected errors are a strong predictor of future uncorrectable errors.The major exception is cosmic rays, which can flip bits even in a good module.  But unless you're at high altitude they don't really dominate the error rate.http://www.cs.toronto.edu/%7Ebianca/papers/sigmetrics09.pdfObviously without ECC you don't know if you have bad modules, but, if a machine passes a memtest scrub for 24+ hours then it's probably fine.On-die ECC should also catch the majority of these errors, espe	paulmd	9.533701	-5.5288854	comment	3.0	13.0	1673236824	8.204859
34307201	Writing an IaC Rosetta Stone	Writing an IaC Rosetta Stone	zacharycohn	9.827756	-5.358318	story	3.0	34.0	1673242937	3.3552094
34316072	The Tomu family also has;- The Fomu 	The Tomu family also has;- The Fomu (FPGA Tomu) - https://fomu.im/ and https://workshop.fomu.im/- The Qomu (ARM+eFPGA Tomu) - https://tomu.im/qomu.html- The Somu (Secure Tomu) - https://www.crowdsupply.com/solokeys/somuThe Fomu is also a great RISC-V MCU prototyping platform.	mithro	9.425632	-5.633793	comment	3.0	14.0	1673298409	-10.551142
34318314	I tried Verilog at first but found m	I tried Verilog at first but found myself liking vhdl quite a lot more. It just fit my mental model better and helped avoid some really silly errors I kept making as a beginner.I could probably pick up Verilog now a bit quicker, I’d jump straight to system Verilog though if I did.	bfrog	9.108337	-5.483426	comment	3.0	13.0	1673308635	8.567465
34323407	Are specter and friends finally fixe	Are specter and friends finally fixed in Zen4?	sylware	9.284692	-5.197426	comment	3.0	10.0	1673351473	7.778784
34326138	AMD XDNA – Versal AI Core / 2nd-gen 	"AMD XDNA – Versal AI Core / 2nd-gen AIE-ML tilesAre these programmable by the end-user?  The ""software programmability"" section describes ""Vitis AI"" frameworks supported.  But can we write our own software on these?Is this card FPGA-based?EDIT: [1] more info on the AI-engine tiles: scalar cores + ""adaptable hardware (FPGA?)"" +  {AI+DSP}.[1] https://www.xilinx.com/products/technology/ai-engine.html"	wyldfire	9.16577	-5.206905	comment	3.0	15.0	1673364038	-7.364716
34329339	Author here to answer all your 8086 	Author here to answer all your 8086 questions :-)	kens	9.638108	-5.4172764	comment	3.0	17.0	1673375762	-7.5242596
34332858	It's interesting to read these artic	"It's interesting to read these articles about the implementation of an actual CPU, compared to the very idealised perspective that a lot of CS (and even some hardware-oriented) textbooks have. There's a lot of complexity that those who are used to the latter would otherwise not have seen.Also worth noting is that, like the Z80 and 8080/8085, but unlike the 6502, the designers of the 8086 opted for instructions that took more cycles and compensated for that with increased clock frequency, instead of the 6502 that has shorter instructions and a lower clock frequency.and the hardware fills in the particular ALU operation from bits 5-3 of the machine instruction.This is clearly seen when the instructions are represented in octal:    0u4 alu AL, imm8
    0u5 alu AX, imm16

The ALU operations ar"	userbinator	9.586503	-5.3280973	comment	3.0	13.0	1673392590	-7.490485
34342696	I’m not convinced that’ll bring abou	I’m not convinced that’ll bring about any significant change. Any power savings from switching to a RISC from x86 is coming from simplifying the instruction decoder, which seems to be about 15-20% if we compare the Ampere Altra to a comparable AMD chip. That’s not an order of magnitude.On the other hand, on the order of 80% of a chip’s power is spent on OOO execution. If you want the order of magnitude improvement in power efficiency, you need to dump superscalar/OOO in favor of smart compilers and VLIW. Cheap DSPs have been doing it for years, but compilers aren’t good enough yet for general purpose processing.	sakras	9.539582	-5.542963	comment	3.0	11.0	1673463007	-10.456258
34343948	> 1 Processor, 1 Core, 4 ThreadsAny 	> 1 Processor, 1 Core, 4 ThreadsAny idea why StarFive went with this choice for an SBC? I remember POWER7 also having 4 SMT, but it felt right for a superscalar multi-core CPU.	fathyb	9.589152	-5.3053093	comment	3.0	17.0	1673467954	8.0652895
34360662	> But RISC did change everything, di	"> But RISC did change everything, didn't it?Iirc it's not such a meaningful distinction anymore. ""CISC"" x86 uses micro-operations internally. ""RISC"" ARM has several different instruction encodings (ARM, Thumb, Thumb-2, A64). Increasing numbers of people are working in high level languages anyway."	asveikau	9.512411	-5.673382	comment	3.0	10.0	1673559815	-10.48329
34380206	The soon to be released VisionFive 2	The soon to be released VisionFive 2 board seems like a good match https://www.starfivetech.com/en/site/boards	AlexeyBrin	9.353841	-5.214166	comment	3.0	12.0	1673703191	7.7025805
34383009	Hopefully B becomes ubiquitous in th	Hopefully B becomes ubiquitous in the next generation of SoC's, or RISC-V is going to look bad in any benchmarks that happen to have a popcnt in the hot path.	gary_0	9.395038	-5.690512	comment	3.0	14.0	1673723204	-10.592581
34387926	The Intel 8086 chip only has 19618 t	The Intel 8086 chip only has 19618 transistors instead of the 29k advertised	tudorconstantin	9.561036	-5.235766	story	3.0	28.0	1673772922	-7.572247
34402188	> it's not ARM vs x86, it's the inte	> it's not ARM vs x86, it's the integration pieces. Mind boggling that nothing is being done by PC makers.Intel spent over a decade and billions of dollars to make a mobile x86 chip that could compete with ARM on battery life and they failed. And now they're getting taken to the cleaners by an ARM chip for laptops. I don't think it's the integration that's the problem, x86 is just too inefficient relative to ARM.When it's more efficient to emulate x86 on an ARM chip than to use a native x86 processor you have to ask some questions about the ISA and design.	duped	9.628802	-5.275587	comment	3.0	15.0	1673886247	-7.698756
34404654	Why is something runnable on 4x  A10	Why is something runnable on 4x  A10 (see parent sibling) but not 1x4090 in 4-8x the time	grogenaut	9.648498	-5.2638116	comment	3.0	12.0	1673898167	-7.4964204
34405116	For the most part it seems like in I	For the most part it seems like in Intel are throwing a ton of power into their CPUs to get these results.	vondur	9.417424	-5.192357	comment	3.0	11.0	1673900970	7.741873
34405634	I previously tried to use Docker `do	I previously tried to use Docker `docker/setup-qemu-action@v2` and `docker/setup-buildx-action@v2` for this purpose (see that example https://github.com/docker/build-push-action#git-context). Thanks to buildkit, platform switching works transparently. However, building on ARM via QEMU on GitHub Actions is terribly slow (something like 5 times more), which is hard to accept. Therefore, full of hope, I am waiting for GitHub Actions to make cloud runners available on ARM, because it is a blocker for the implementation of Graviton on the AWS environment for us.For a while, the blocker in GitHub Actions for providing ARM support was that Azure doesn't have ARM support. In this way, the Azure cloud offering may determine the habits of AWS consumers.	adobrawy	9.54737	-6.2591476	comment	3.0	29.0	1673903991	9.969613
34415485	Apple: please give your customers EC	Apple: please give your customers ECC RAM, we take data integrity seriously.	tw1984	9.481548	-5.4957924	comment	3.0	10.0	1673976459	8.318381
34440278	This can lead to additional problems	This can lead to additional problems. Say Fnurbification is a setting in code wrapped in an if block. Great, on or off is easy to follow. Now say the Disable Fnurbification is what is actually in code. Now, when someone has a problem with Fnurbification, you have to map state back and see that the inverse was coded for the IU and follow that down the stack. Don't even get me started on defaults. There is no good/easy answer here.	4RealFreedom	9.534175	-5.294609	comment	3.0	11.0	1674136589	7.8438816
34454313	"The actual title is supposed to be """	"The actual title is supposed to be ""🥺: the best sudo replacement"", but I'm not surprised that Hacker News stripped the emoji."	xena	9.824757	-6.255825	comment	3.0	20.0	1674228284	-13.952654
34471284	I doubt that would actually be usefu	I doubt that would actually be useful with overclocking. I don't know the arch of the modern PC well enough to say with 100% confidence, but on embedded arches, the RAM has the parity bits checked when they get placed on the bus. If the error happens on data retrieval(or was already present) , then the ECC saves you, but if it happen anywhere else... not really? I don't know if.. ALU's for example automatically include the parity bits in the computation.	RealityVoid	9.479776	-5.532266	comment	3.0	12.0	1674339807	8.20637
34472070	> ECC has been used by Intel as an a	> ECC has been used by Intel as an artificial market segmentation mechanismFTFY	deadbunny	9.448607	-5.457224	comment	3.0	19.0	1674344127	8.262503
34487660	Well before Bulldozer had taped out,	Well before Bulldozer had taped out, AMD briefed us on the high level processor plans (our software was included in BAPCo Sysmark and we'd been a very early adopter of AMD64, so we had lots of these meetings).  I told them that it was a total mismatch for our workloads (audio and video production tools) and would prove to be a bad fit.  They protested at first, as our inputs and outputs were fixed point formats and the doubled-up integer/logic units would allow us to thread more. That's when I spelled it out:1. Our business logic and UI each basically operated in single threads.2. Our intermediate audio and video processing buffers were floating point or moving in that direction in the future.3. Wherever possible in filtering and effects, we avoided branching, relying on zero-folding in ve	chaboud	9.2918825	-5.2160463	comment	3.0	27.0	1674473673	7.888298
34487352	I am still using a FX-8xxx (and prob	"I am still using a FX-8xxx (and probably will until RISC-V will beat it), and haven't even bothered overclocking it yet.Anyone knows what kind of issues having ""The frontend, FPU, and L2 cache [] shared by two threads"" causes compared to 2 real cores / 2 hyper threads on 1 core / 4 hyper threads on 2 cores ?"	BlueTemplar	9.823542	-5.605038	comment	3.0	11.0	1674470620	8.172813
34487830	"Meanwhile the ""efficiency cores"" in "	"Meanwhile the ""efficiency cores"" in the latest processors (both x86 and ARM) are basically optimal for precisely those highly threaded integer workloads.  Bulldozer was just too early for its time."	zozbot234	9.5018015	-5.279136	comment	3.0	14.0	1674475198	8.014583
34489189	More CPU Cores Isn’t Always Better, 	More CPU Cores Isn’t Always Better, Especially in HPC	rbanffy	9.483955	-5.2736096	story	3.0	14.0	1674484433	8.017761
34495068	Yes, the bus sequencing is very comp	"Yes, the bus sequencing is very complex. Memory accesses turn out to have a 6-clock cycle, but two cycles are overlapped with the end of the previous access, so it's even more of a mess than you'd think.I think a large part of it was pin count optimization; Intel had weird beliefs about keeping the pin count down. (E.g. Intel was really resistant about using even 18 pins for the 8008, which was way too few.) Another issues was the 8086 supported two different bus protocols: ""minimum"" and ""maximum"" mode, where ""minimum"" was straightforward and easy to use, while ""maximum"" provided much more information but needed another chip to decode the signals. (I don't know if anyone used ""minimum"" mode.) Finally, the 8087 needed a lot of information about what was going on inside the 8086's prefetch q"	kens	9.610577	-5.294169	comment	3.0	13.0	1674508180	-7.5081925
34498857	This is discussed at length in this 	This is discussed at length in this film:https://en.m.wikipedia.org/wiki/The_Core	nofreelunch	9.513551	-5.301605	comment	3.0	10.0	1674531526	7.750372
34501939	I do think this is sort of fool's go	I do think this is sort of fool's gold in terms of actual performance. Even though the core count and RAM size is impressive, those cores are talking over ethernet rather than system bus.Latency and bandwidth is atrocious in comparison, and you're going to run into problems like no individual memory allocation being able to exceed 8 Gb.Like for running a hundred truly independent jobs then sure, maybe you'll get equivalent performance, but that's a very unique scenario that is rare in the real world.	marginalia_nu	9.71651	-5.2221746	comment	3.0	22.0	1674556442	8.004348
34511304	̶g̶o̶o̶d̶ ̶l̶i̶n̶k̶ ̶a̶n̶d̶ ̶r̶e̶a̶d	̶g̶o̶o̶d̶ ̶l̶i̶n̶k̶ ̶a̶n̶d̶ ̶r̶e̶a̶d̶ ̶b̶u̶t̶ ̶d̶u̶p̶https://news.ycombinator.com/item?id=34482667My 2 cents,I'd like to see Zen 2 merged with some CMT ingenuity for their low power high efficiency branch of cores. Introduce some clustering on one of these Zen 2 CCXs, and arrange this cluster with SMT4 on the FPU side while keeping SMT2 on the integer side. This would be an analogue to the Piledriver family's SMT1/SMT2 int/fpu scheme.	chaimanmeow	9.248299	-5.2505875	comment	3.0	11.0	1674598407	7.901469
34524430	Ask HN: Is there such thing as “too 	Ask HN: Is there such thing as “too many layers of error correction codes”?	kokojumbo	9.509734	-5.5392623	story	3.0	5.0	1674681991	8.303961
34530440	Seeing 6502 assembly language made m	Seeing 6502 assembly language made me feel a bit nostalgic - sixteen year-old me spent quite a lot of time coding in it for a year or so, first on my Vic 20 then on an Acorn Electron. I was surprised to find that I can still almost read it and, browsing an instruction set reference just now, I'm impressed all over again by its succinctness.Wiki has a few notes on the game hardware and implementation at [1]. The Quadrascan graphics processor, which presumably ran the code in 'asteroids_vector_rom.asm', doesn't seem to be well described on the net (as far as I can tell) but there's a hardware service manual for the colour version at [2]. It seems to me from reading it that the vector processor was tightly integrated with the CRT tube, and the manual has lots of scary/exciting warnings about 	andyjohnson0	9.589978	-5.3998303	comment	3.0	12.0	1674732797	-7.4328575
34532947	I think the notable thing here is; t	"I think the notable thing here is; this is really a Redhat layoff since IBM ""subsumed"" or reverse merged or whatever it was with Redhat. My take is that IBM has been a barely warm carcass for > 20 years already and the Redhat deal did nothing to change that. Here I'm certain that the layoff will be onshore, and the continued hiring will be offshore. That's what they've been doing forever, and their lack of growth and innovation continue to reflect it."	marktangotango	9.918583	-5.4089866	comment	3.0	11.0	1674747200	-9.447299
34535488	A few days ago, monocasa suggested I	A few days ago, monocasa suggested I should look at the 8086's HLT instruction, so here it is. Let me know if you have other comments on what part of the 8086 would be interesting to read about.https://news.ycombinator.com/item?id=34495317	kens	9.696349	-5.507937	comment	3.0	11.0	1674755337	-7.529797
34538558	So why didn't they implement the HLT	So why didn't they implement the HLT instruction as simply a 'jump to self' infinite loop?Then no special logic would be needed, no extra states, etc.Sure - there would be no power savings, and the memory bus wouldn't be idle, but we're either of those a requirement in 1970?	pifm_guy	9.798936	-5.6806645	comment	3.0	12.0	1674765912	-7.49473
34548353	I have been burnt by the sockit boar	I have been burnt by the sockit board. I move away from wanting to learn fpga after all the bushit. All fgpa vendors are similar as far as I'm concerned.	Foobar8568	9.096369	-5.343088	comment	3.0	11.0	1674838702	8.360832
34556735	What is the long-term future for x86	What is the long-term future for x86 as it gets squeezed from below by ARM?	314	9.65334	-5.281718	comment	3.0	27.0	1674904593	-7.789402
34563190	No ECC.. hmm.  Maybe my data at home	No ECC.. hmm.  Maybe my data at home isn't that important, definitely not $$$ mission critical.Curious what the power draw is with an older Thinkpad like this while idling and under load.Edit: thank you nequo.	metadat	9.43428	-5.44327	comment	3.0	12.0	1674949249	8.06966
34576434	Historic Crash for Memory Chips Thre	Historic Crash for Memory Chips Threatens to Wipe Out Earnings	xbmcuser	9.757344	-5.2360015	story	3.0	5.0	1675059652	7.89465
23411350	This article is not newsworthy becau	"This article is not newsworthy because Linus commented on some submission but because of the way he commented.Oh, I'm _soo_ special and pretty and such a delicate flower, that I want to flush the L1D on every task switchI'll flush the L1 at context switch"" is beyond stupid.Those are not the words of a wisened leader attempting to explain why allowing user space cache eviction is probably not a great idea but some flippant jerk attempting bully his viewpoint by calling other ideas and by proxy submitters stupid.Linus himself has recognized this behavior is inappropriate and pledged to ""get help""https://www.theregister.com/2018/09/17/linus_torvalds_linux_...I certainly respect his accomplishments, but just as certainly I don't condone his behavior. Further I feel his rants tell other savants"	uberman	9.29745	-5.8896317	comment	3.0	12.0	1591234447	4.258823
23412988	I've been using it for all my progra	I've been using it for all my programming units for a number of years. Whilst I don't use all of the features the main bonus for me is making the students commit code regularly and see the progress (or not!).It also has a number of advantages, I have lost count of the number of times I have been sent screen shots of error messages (even camera photos of a screen). I now insist that all errors a reported via issues.This means I can fix / push code for problems and track what I have done.It also helps with plagarism as I can usually see the progress of students work with regular commits rather than one project that appears straight away via normal submission processes.For group work there are a number of tools to do analytics on who did what etc so it make seeing how well the group has worke	jpm48	8.859842	-6.4180355	comment	3.0	11.0	1591249658	-11.692171
23438261	(2012)Having written a few toy VMs i	"(2012)Having written a few toy VMs in the past (and some in production!), there are always avenues to ""make it weird.""Sol's yield/end instruction pair looks super abusable if you want to write somethiing obfuscated.My favourite alteration has always been to not have any control flow instructions in the provided ISA, but allow the programmer direct write access to the program counter register, or force them to write self modifying code.After all, programming is fun."	half-kh-hacker	9.636716	-5.6290913	comment	3.0	14.0	1591440627	-7.6689425
23440551	Not just emoji either e.g. the box-d	"Not just emoji either e.g. the box-drawing characters (https://en.wikipedia.org/wiki/Box-drawing_character) also get stripped.OTOH domino or mahjong tiles (🁓, 🀕), playing cards (🃅) or musical symbols (𝅗𝅥) are allowed. So are arrows (↸) including supplementals (⤪), number forms (ↈ), superscripts and subscripts (⁴₂), ""miscelllaneous technical"" (⎋, ⏱) or geometric symbols (◉), however misc symbols (https://en.wikipedia.org/wiki/Miscellaneous_Symbols) is a no.So yeah, pretty arbitrary. I guess pg likes playing domino but hates chess.Also funny note: we have access to musical symbols but not notes, because the notes are in the misc. symbols block. Unless you want to use byzantine (𝀶) or ancient greek (𝈙) musical notation then it's OK."	masklinn	9.813178	-6.2667785	comment	3.0	11.0	1591462691	-13.967828
23447342	I assume AWS will start using gravit	I assume AWS will start using graviton for their S3, EBS, ELB etc services aggressively?	pwarner	9.575063	-5.2349668	comment	3.0	19.0	1591538083	-8.301732
23466200	I much prefer them to switch over to	I much prefer them to switch over to AMD if cost was a concern. Rather than outright dumping x86 codebase.	ksec	9.350954	-5.2089205	comment	3.0	19.0	1591707278	7.8726373
23469230	At this point SGX is just so broken 	At this point SGX is just so broken that it seems like its only purpose is to provide PhD students something to write a paper on :)I'm hesitantly excited for AMD's SEV enclave to roll out. Anyone know if it's shaping up to be any better?	usmannk	9.454783	-5.2478228	comment	3.0	19.0	1591727114	-5.838257
23472983	So you don't need to turn on dev mod	So you don't need to turn on dev mode and use crouton to install a chroot for Linux anymore?	Osiris	9.78326	-6.4014387	comment	3.0	14.0	1591753446	-13.979193
23473159	From the link I posted -> When licen	From the link I posted -> When licensing Oracle programs with Standard Edition One, Standard Edition 2 or Standard Edition in the product name (with the exception of WebCenter Enterprise Capture Standard Edition, Java SE Subscription, Java SE Support, Java SE Advanced, and Java SE Suite), a processor is counted equivalent to an occupied socket; however, in the case of multi-chip modules, each chip in the multi-chip module is counted as one occupied socket.It doesn't get any clearer than that - it is per core. So that's significantly increased cost for pretty much most enterprise users with VMWare and high core count Xeons.	blinkingled	9.518504	-5.265921	comment	3.0	15.0	1591755003	7.88198
23479352	I would imagine the difference betwe	I would imagine the difference between the instruction sets of the two CPU types is small since the small CPU is Atom which is not too different from the main CPU.The program machine code can be scanned when loaded to look for specific assembly opcodes to determine the required capability of the CPU to execute it on.  The code with instructions not fitted for Atom will be sent to the main CPU only.Edit: Just a thought.  The OS can install an illegal-opcode exception handler.  When a process is first run on the small CPU, the unsupported opcode will raise the exception.  The exception handler can simply set the processor affinity of the process to the main CPU and put it to sleep.  The OS will handle it like it normally would - putting the process in the run queue of the affined processor.	ww520	9.793583	-5.672956	comment	3.0	11.0	1591808382	8.0102
23479722	"There was a proof-of-concept ""smart "	"There was a proof-of-concept ""smart network adapter"" done by either Intel or MS (don't remember the exact details), which allowed finishing the download of a large file, or receiving emails while the host computer was asleep. I'd imagine tasks like these are well suited for the smaller cores."	rzzzt	9.788413	-5.3674536	comment	3.0	10.0	1591810183	8.044171
23480003	by the OS by just advertising the co	by the OS by just advertising the common baseline.What does that mean? Advertise to whom? The process/process loader? Does it mean that I can’t compile with -mavx2 anymore? What if I do?The extensions are the whole problem.	CountSessine	9.847658	-5.472662	comment	3.0	33.0	1591811636	8.09131
23480058	> The only complication here would b	> The only complication here would be if they have differing extensions like AVX512Which they do, Atom tops out at SSE4.2.	masklinn	9.553264	-5.49265	comment	3.0	19.0	1591811911	-3.7347658
23478874	Sure big.LITTLE chips have been arou	Sure big.LITTLE chips have been around for a while.  But my understanding is the instruction set is identical between the cores, they just operate at different speeds.  That in itself must be a fun balancing act for the scheduler.To clarify my concerns (I haven't dug in to the specific instruction set differences):Assume the main core supports AVX2 and the smaller cores don't.   Which core do you execute the code on?  Which one will get you the best performance per watt?  How do you account for that in the OS scheduler?  What do you want to optimise for?If your code is compiled for AVX2, it'll fail on the small cores unless it does continuous runtime checking (which is expensive, but given processes can migrate between cores, presumably necessary).	Twirrim	9.533056	-5.5234427	comment	3.0	16.0	1591806108	8.127983
23480300	It only shoots the big core in the f	It only shoots the big core in the foot for things that would make meaningful use of the extensions present on the big cores but not on the little ones. Which in a 7w application is what, exactly?	kllrnohj	9.525012	-5.3125296	comment	3.0	11.0	1591813020	7.836225
23480605	Different instruction sets are not t	Different instruction sets are not too bad.  Copy from my comment elsewhere.> The OS can install an illegal-opcode exception handler. When a process is first run on the small CPU, the unsupported opcode will raise the exception. The exception handler can simply set the processor affinity of the process to the main CPU and put it to sleep. The OS will handle it like it normally would - putting the process in the run queue of the affined processor.	ww520	9.88237	-5.750429	comment	3.0	45.0	1591814695	8.3787155
23481307	What if my program has like 1 avx2 i	What if my program has like 1 avx2 instruction? Then we still wake up the big core and run my process there? And keep running it there? Or do we try to migrate back to the little core every once in a while? And then go back to the big core when we trap again?	CountSessine	9.553073	-5.5357766	comment	3.0	12.0	1591818873	7.986915
23494080	Nothing stops Intel manufacturing th	Nothing stops Intel manufacturing their designs with third parties.   Yet they don't.Either it isn't worth it (too much coupling between fab and designs - not the right abstractions), or institutional inertia stops them doing it.	londons_explore	9.2660675	-5.186005	comment	3.0	11.0	1591916028	7.6182995
23497626	Intel seems to be going through some	Intel seems to be going through some tough times and I wonder if this will have long-term effects in the tech industry. The x86 monopoly makes it difficult to find a viable alternatives quickly, and I think a massive shift to ARM will likely cause similar problems in the future.How can we make software more interoperable with hardware? Is moving to open instruction sets like RISC-V advisable from an economic and innovation point of view?	blueblisters	9.453291	-5.214097	comment	3.0	12.0	1591955475	-7.780254
23510937	Would be a dream as a user to be abl	Would be a dream as a user to be able to choose between cpu-optimized or memory-optimized modes.	jmilloy	9.672533	-5.220544	comment	3.0	25.0	1592068525	7.928671
23511949	No, not at all. Transmeta got a lot 	No, not at all. Transmeta got a lot closer to nailing a much bigger market. They had actual products for a start. The problem was the underlying architecture was VLIW. Lots of people including Intel and Nvidia have tried to make it work and have been squarely bitten in the arse.	RantyDave	9.365978	-5.2778034	comment	3.0	11.0	1592076253	-7.7292705
23513542	Author here: I use AMD64 and x86_64 	"Author here: I use AMD64 and x86_64 interchangeably (with a slight preference for the latter when publishing something, since it has more Google results than the former). I agree that the proliferation of names is an unfortunate mess.FWICT, ""x64"" is mostly limited to Microsoft. I wouldn't mind that one being thrown out."	woodruffw	9.707153	-5.3865876	comment	3.0	10.0	1592088868	-7.727249
23513963	Desktops, perhaps never - 10 years? 	Desktops, perhaps never - 10 years? Alibaba seem to be funding some R&D in this direction, but I'm not too familiar (and I can't speak Chinese). It's certainly possible, but desktop processors aren't simple in any way. Regardless of absolute technical excellence, RISC-V only has to be better than ARM (in both specification and implementation, and cost, of course) which will be a moving target as RISC-V improves.Single Board Computers - https://www.sifive.com/boards/hifive-unleashed this seems to fit the bill. However, they don't seem to be selling those yet - the development kit for that particular CPU seems to be an FPGA soft-core.I am currently working on an open-hardware project that requires a fair amount of grunt (or FPGA); in an effort to keep is open I was looking into RISC-V proces	mhh__	9.387726	-5.5439143	comment	3.0	12.0	1592093213	-10.532102
23529139	So they can use this image to direct	So they can use this image to directly measure the width of the core?	yummybear	9.536688	-5.333485	comment	3.0	11.0	1592238330	-6.088708
23530888	You're right, we should all write so	You're right, we should all write software exclusively for Linux, and then only on RISC-V CPUs! :)	Wowfunhappy	9.439704	-5.625052	comment	3.0	12.0	1592244835	-10.563293
23539364	A while back Linus said something to	A while back Linus said something to the effect that x86 was the default for servers because that's what people used on their desktops. I personally find this news very exciting because the x86 architecture is just so messy and filled with cruft from ages ago.If ARM becomes the standard on the desktop for a significant portion of machines, then I think that we'll probably start to see more ARM processors making inroads in the server and workstation market, which I think will be a huge win.	andrewla	9.629347	-5.222244	comment	3.0	12.0	1592316860	-7.7634974
23554450	I've ordered an 8088 so I can compar	I've ordered an 8088 so I can compare the internal circuitry of the chips. They should be mostly the same, except that the 8088 has an 8-bit data bus externally and has 4 bytes of prefetch buffer instead of 6.	kens	9.563263	-5.2132144	comment	3.0	14.0	1592416404	-7.56072
23556821	I suspect that at the time microcode	I suspect that at the time microcode was copyrightable while masks (and therefore PLAs) were not (note the actual (C) message on the die explicitly calling out the microcode)	Taniwha	9.642399	-5.424332	comment	3.0	14.0	1592428324	-4.090787
23574952	>  I do truly hate the excessive emo	>  I do truly hate the excessive emojis.I am more in the camp of actually always finding them excessive. Especially in more serious, and possibly, interesting posts.	tluyben2	9.792402	-6.2659726	comment	3.0	10.0	1592577493	-13.953124
23579235	When power-saving states for CPUs we	When power-saving states for CPUs were still new and Windows support was still lacking, there was a 3rd party tool that would decrease the idle temperature of my Athlon XP by creating artificial load with a low process priority. It would basically replace the System Idle Process and put the CPU in some new P-state.Is there some standard way in *nix/Windows to create artificial CPU load while actually not increasing the energy consumption at all?	hs86	9.674239	-5.2916765	comment	3.0	11.0	1592603617	7.774644
23583426	While somewhat irrelevant for a majo	"While somewhat irrelevant for a majority of developers, it feels great to understand how computers actually work.Even many higher education IT programs often barely cover the underpinnings anymore.I'm currently embarking on a fun little ""from first principles"" challenge:Imagine a post-apocalyptic world where computers are a relic of the past.You stumble upon a functioning device with a screen and keyboard. When powered on, all you get is a bare metal ""assembly interpreter"". You can type in riscv64 assembly instructions and they are executed. You can print to the screen via a UART. So you don't even get an assembler/linker to build on.From there you have to build up an entire new software stack, with a proper language with compiler/vm, an operating system, a standard library, basic userspac"	the_duke	9.910257	-5.254601	comment	3.0	34.0	1592654127	-8.157327
23598001	Can you give some examples of tools 	Can you give some examples of tools optimized for x86 that would run worse on ARM?	cdmckay	9.698725	-5.419825	comment	3.0	11.0	1592811012	-7.7038307
23601686	So looking at anandtech's breakdown 	So looking at anandtech's breakdown the CPUs are closer to a knights landing 'CPU/GPU' than a traditional CPU (currently). They also have a ton of HBM2 right next to the dies so this should be insanely fast as they can feed those cores very very quickly regardless of how fast each core is by clock and pipeline. That should massively reduce stalls.	leeter	9.499578	-5.223429	comment	3.0	12.0	1592841580	7.8598113
23604124	Docker and Linux virtualization. Fat	Docker and Linux virtualization. Fat binaries to make it easy to update Mac apps. iPhone and iPad apps. Rosetta to run Intel apps that aren’t updated.Apple is gonna knock this out if the park.	valuearb	9.687529	-6.08117	comment	3.0	33.0	1592851799	-7.9833302
23604469	Did they say the Linux VMs in the de	"Did they say the Linux VMs in the demo were x86?  They said ""virtualization"", which to me, implies ARM Linux."	sigjuice	9.899225	-5.253502	comment	3.0	16.0	1592852600	-7.967834
23607333	"Yep, most of that old ""cruft"" is ess"	"Yep, most of that old ""cruft"" is essentially unused and turned off. A log of critics of x86 don't really know what they're talking about. x86 is inefficient because they don't really have much incentive to end the status quo where performance is more important than power to most customers. People are happy with 3-4 hours out of their laptops so Intel and AMD aim for that and sacrifice power for performance, quit often that is the tradeoff in the design."	stjohnswarts	9.575119	-5.29517	comment	3.0	14.0	1592863038	-7.711567
23613464	Well ARM is a 1980s technology so se	Well ARM is a 1980s technology so seems apt.	sys_64738	9.564412	-5.202632	comment	3.0	17.0	1592918094	-7.6661882
23614267	From the page:What Can't Be Translat	From the page:What Can't Be Translated?Rosetta can translate most Intel-based apps, including apps that contain just-in-time (JIT) compilers. However, Rosetta doesn’t translate the following executables:* Kernel extensions* Virtual Machine apps that virtualize x86_64 computer platformsSome people are not going to be happy about this.Edit: But I personally am okay with that.	dsabanin	9.8107	-5.345459	comment	3.0	14.0	1592922278	7.60218
23614297	Are the limitations on x86_64 virtua	Are the limitations on x86_64 virtualization likely to be for technical reasons, or patent reasons? I read a comment on here alluding to some patents on x86_64 virtualization expiring later this year: https://news.ycombinator.com/item?id=23612256 - could that mean that there is a chance this might happen and they are keeping it quiet for now, or are patents likely unrelated?	tomduncalf	9.763749	-5.2711735	comment	3.0	16.0	1592922422	5.594017
23614377	I thought this was the most interest	"I thought this was the most interesting paragraph.> What Can't Be Translated?> Rosetta can translate most Intel-based apps, including apps that contain just-in-time (JIT) compilers.I guess translation of JIT compiled stuff implies this isn't a once of translation. I guess translating plugins implies that too.It sounds like very clever stuff to me!> However, Rosetta doesn’t translate the following executables:
>
> Kernel extensionsFair enough> Virtual Machine apps that virtualize x86_64 computer platformsI guess most VMs rely on hardware virtualization which would be tricky to translate well.> Rosetta translates all x86_64 instructions, but it doesn’t support the execution of some newer instruction sets and processor features, such as AVX, AVX2, and AVX512 vector instructions. If you includ"	nickcw	9.782526	-5.379005	comment	3.0	19.0	1592922792	7.635721
23614398	>Rosetta translates all x86_64 instr	>Rosetta translates all x86_64 instructions, but it doesn’t support the execution of some newer instruction sets and processor features, such as AVX, AVX2, and AVX512 vector instructions.No AVX will probably mean that the vast majority of pro/graphics intensive apps won't work out of the box with Rosetta.	jayyhu	9.790383	-5.368612	comment	3.0	15.0	1592922880	7.671586
23617811	Expect you'd need to do that with ev	"Expect you'd need to do that with every single store since the x86 instruction stream doesn't have those semantics embedded in it.That'd kill your memory perf by at least an order of magnitude, and kill perf for other cores as well.  It'd be cheaper to just say ""you only get one core in x86 mode"".  Essentially you'd be marking every store as an L1 and store buffer flush and only operating out of L2."	monocasa	9.75691	-5.579763	comment	3.0	11.0	1592935609	8.209784
23637581	Okay, but this doesn't explain why t	Okay, but this doesn't explain why they didn't move to amd instead. Changing architecture like this is not cheap.Besides, Apple just pissed off the entire software industry. Assume you are Adobe or Abelton and now have to spend serious money to very quickly port your software to arm64 without getting any new sales.	panpanna	9.604061	-5.195462	comment	3.0	12.0	1593067426	-7.768859
23641318	"Intel's solution? ""Just disable volt"	"Intel's solution? ""Just disable voltage control, teehee""Afaik, if you need the best security on Intel chips, disabling Hyper Threading is still a must :/Wtf are they doing..."	bserge	9.690768	-5.4615273	comment	3.0	14.0	1593096251	7.9841056
23643420	So many wrong assumptions ...1. If e	So many wrong assumptions ...1. If emulating aarch64 (arm64) on x86_64 is 6x slower (on your system, btw, it's not an universal constant), it doesn't mean emulating x86_64 on aarch64 will be 6x slower. It'd probably be worse, or at least that's my gut feeling.2. Generic container images like the Ubuntu mentioned usually have aarch64 (arm64) support, so running the x86_64 image makes no sense for the presented use-case.3. You won't be able to use most software because they don't release ARM binaries ... and the example uses `wget` && `tar xf`, with no binary signature check. As someone who has been porting stuff from x86_64 to aarch64 for a couple of years, I admit I've seen this pattern frequently. The most obvious solution is to build from sources, which would have been better off on x86_	smspf	9.764245	-5.450441	comment	3.0	14.0	1593107326	-7.890417
23644005	I'm actually not worried, for a few 	I'm actually not worried, for a few reasons;- I already do cross-arch development day-in and day out between x86 and ARM, and have only run into hard blockers on a library or tool a handful of times. The solve was generally pretty straightforward to either use an ARM-compatible alternative, or to cross-compile it myself.- We've done this many many times before and it's not that bad. I know I'm not the only one old enough here to remember the days of having heterogeneous fleets across PPC, SPARC, and x86. Or even more recent - different extensions for x86 with different chipset manufacturers.	adrianpike	9.701761	-5.346004	comment	3.0	22.0	1593110451	-7.8506494
23647906	Title is factually correct, but is s	Title is factually correct, but is somewhat misleading - it implies ARM arch existed and then the Archimedes was designed around it (and was the first desktop to have that property);In fact, the ARM was designed for the Acorn Archimedes, and that’s why no desktop, or server, or anything, used it before the Archimedes - ARM stands for “Acorn RISC Machine”.	beagle3	9.593486	-5.2282557	comment	3.0	15.0	1593136030	-7.7952495
23647647	Every time multi-threading gets brou	Every time multi-threading gets brought up one of the devs explains that being single threaded isn't the bottleneck. It is the cpu cache that is the bottleneck.	Twinklebreeze	9.915519	-5.695171	comment	3.0	21.0	1593133306	8.280548
23649469	My brother had a Archimedes. At the 	"My brother had a Archimedes. At the time they were introduced, they were amazing things. 4 million colours, blazingly fast. At the time I was convinced that this would quickly replace Intel-based PCs. That never happened, of course.Acorn had a tendency to be ahead of its time. Our first home computer, the Acorn Electron, could be expanded with a 3.5"" floppy drive. Later, when we got a PC, we moved from 3.5"" to 5.25"" floppies. That was my first disappointment in having to make a step backwards in tech.The Archimes' successor, the RISC PC, could even have an Intel processor as co-processor. Or, instead, a card with 4 or 5 more ARM processors. At the time is was probably the cheapest way for a consumer to get a multi-processor machine."	mcv	9.570595	-5.193383	comment	3.0	40.0	1593154967	-7.7996936
23665499	Perhaps the title should mention tha	Perhaps the title should mention that this is 32-bit x86, which is rather obsolete. This should work okay on x86_64.	amluto	9.833223	-5.3922744	comment	3.0	24.0	1593300043	-7.8593593
23665806	I looked into the differences betwee	I looked into the differences between the 8086 and 8088 because the 8086 was selected for most designs when the 8088 was already available.Turns out the 8088 has less compute power. I think all Intel chips since than have higher numbers if they are more powerful, not if they are more recent.	sytse	9.562258	-5.2429495	comment	3.0	14.0	1593304049	-7.575614
23670345	By 1989 RISC OS was awesome, but by 	By 1989 RISC OS was awesome, but by 1995 it lacked the same features as other famous OSs (I will not name the other OS to avoid a flame war).RISC OS used cooperative multitasking and it lacked virtual memory protection. By 1995 linux or BSD were better platforms. MS released Windows 95 and preemptive multitasking arrived to millions of homes.I still have a 2002 PACE based RISC OS in the basement. It boots with bootp+NFS. It was part of a kiosk that was replaced by a BSD box. No booting or runtime issues anymore. We even designed a serial watchdog to ensure a reboot if the STB hanged, because riscos hanged even booting. No issues with the BSD.In my humble opinion by the mid 1990s preemptive multitasking and memory protection was mandatory in a general purpose OS and RISC OS lacked it.	rsecora	9.438991	-5.632527	comment	3.0	19.0	1593364743	-10.545245
23686159	>> Afterburner is a hardware acceler	>> Afterburner is a hardware accelerator card built with an FPGA, or programmable ASIC. With over a million logic cells, it can process up to 6.3 billion pixels per second.Interesting -- didn't realize FPGAs were commonly used in graphics development flows.  Does anyone know what software is used to customize the FPGA to accelerate tasks in macOS?	mrtnmcc	9.186721	-5.2238293	comment	3.0	11.0	1593487100	8.14521
23688844	It's great that companies do this, b	It's great that companies do this, but I wish that they would also open-source the verification infrastructure at the same time.Otherwise, anyone who wants to use it in a commercial setting has to either re-do their own verification effort and due-diligence, or just trust the core works perfectly. Don't get me wrong, I trust IBM to build a working CPU, but that doesn't mean there aren't corner cases to be found when you put the core in a new SoC environment.There is lots of open source HDL out there. We need re-usable verification infrastructure too!	bem94	9.659299	-5.4026814	comment	3.0	11.0	1593515086	8.144647
23689490	I am not talking about ease of use, 	I am not talking about ease of use, but about the downclock.The other extensions do not trigger it, not even AVX256.With AVX512 is not always a win, and you don't even know until you try in particular hardware.	jfkebwjsbx	9.456878	-5.553433	comment	3.0	24.0	1593521538	8.0577755
23691287	I'm interested to know what applicat	I'm interested to know what applications really scale to these core counts. When I was working with large datasets (for finance) other bottlenecks tended to dominate, not computation, so memory pressure, and throughput from the SAN were more important.These high density configurations were key when rack space was at a premium, but these days, power is the limitation, so this is interesting to provide more low power cores, i'm just not sure who is going to get the most benefit from them though...	cesaref	9.532813	-5.3152566	comment	3.0	10.0	1593532295	7.91615
20011317	Supply chain attacks become a lot ea	Supply chain attacks become a lot easier to pivot on. Put some Spectre code in a npm or RPM package, then wait to see what pops up. So much stuff is sudo curl pipe bash these days that the Spectre threat is real.All the more reasons to run your own servers and compile your own binaries. Like we used to do.	scurvy	9.679775	-5.5806327	comment	3.0	13.0	1558817311	7.8563647
20011489	At some point, I bet someone in a de	"At some point, I bet someone in a design meeting said ""Hey, I think this might compromise security, can we study that before implementing it?""And the decision to implement it without that study, or despite it, was made. Because implementing it increased performance which made the numbers which captured market share.It's not like the processor designed itself that way. Humans made choices along the way, and every choice is a tradeoff. Execution-time attacks and other sidechannel leakage have been well-known for years, and I can't imagine that at a place like Intel, nobody had heard of that."	myself248	9.472102	-5.295943	comment	3.0	12.0	1558818986	7.812412
20016095	Should they be describing it as 8 co	Should they be describing it as 8 cores 16 threads when there have been multiple security vulnerabilities that have to turn off hyperthreading to be mitigated?	lkschubert8	9.701202	-5.5069823	comment	3.0	33.0	1558891541	8.039405
20016179	Besides cloud providers running VMs 	Besides cloud providers running VMs /containers on the cloud, is Spectre/Meltdown really such an issue for day-to-day consumers ?	saltyshake	9.645953	-5.5595484	comment	3.0	21.0	1558892151	7.7879925
20018158	If you look at transistor count, yes	If you look at transistor count, yes. But single-core performance has stagnated since ~2003, that’s when we hit the 3Ghz mark. Progress since then has been a lot slower.	ricardobeat	9.447516	-5.1975455	comment	3.0	10.0	1558912243	7.795169
20019358	It will be interesting to see whethe	It will be interesting to see whether they can match Intel in single-threaded performance across the board, and not just some carefully-selected benchmarks.  This would be the first time since the Core2/Athlon64 days.	p1mrx	9.42343	-5.2160296	comment	3.0	30.0	1558929803	7.8337984
20019433	Now imagine a Threadripper with the 	Now imagine a Threadripper with the Zen2 cores, higher IPC and frequency would be certainly welcome. Have the 32 core 2990WX and it's an incredible CPU for compiling large C++ programs, running big test suites and never having to worry about running too many tasks at the same time.	gratilup	9.314023	-5.212855	comment	3.0	21.0	1558931113	7.943426
20019469	Also with CPU performance starting t	Also with CPU performance starting to taper off I think people need to also start think of their computers as longer term investments.  I think the 8 core makes sense.  Even my phone has 8 cores now...	TheOperator	9.5123005	-5.20275	comment	3.0	12.0	1558931599	7.786488
20019478	My question is how is their architec	My question is how is their architecture doing regarding the assorted speculative execution baked-in issues and what kind of impact is there on the AMD processors compared to comparable Intel CPUs?	fencepost	9.609869	-5.5488677	comment	3.0	11.0	1558931698	7.8779635
20019553	Cool, but we haven't seen compiling 	Cool, but we haven't seen compiling benchmarks yet. 12 cores might be bottlenecked by dual-channel memory.	eugene3306	9.586143	-5.3068523	comment	3.0	10.0	1558932582	7.926755
20020346	And on architectures like EPYC you r	And on architectures like EPYC you run into NUMA issues and having to pin things to certain cores, right?	gigatexal	9.513493	-5.2919703	comment	3.0	10.0	1558945138	7.900462
20022885	No mention of it, but the pressure s	"No mention of it, but the pressure should still be on AMD to open source or allow firmware disable of their Platform ""Security"" Processor.I would really like to be more enthusiastic for my next build to use something like this, but all my computers are presently trustable in a way new platforms with proprietary coprocessors that haven't seen me_cleaner support cannot achieve.It really sucks to give Intel money - its not like they support the me cleaner project and are actively antagonistic to third parties disabling their backdoors - but at some point it stops being a matter of principle and becomes one of practicality. I can disable the unwanted parts of the hardware on one platform and not on the other."	zanny	9.472272	-5.2110515	comment	3.0	14.0	1558971541	7.8371725
20024899	What google system runs more than 5k	What google system runs more than 5k tasks on a single cluster?	Thaxll	9.786763	-5.232136	comment	3.0	10.0	1558987448	-13.451042
20025970	Never having written an assembler fo	Never having written an assembler for a proper ISA, I was under the impression that assemblers for real CPUs are extremely simple until you start writing them.	mhh__	9.727564	-5.6771145	comment	3.0	15.0	1558999154	-7.6210027
20040871	I think you greatly underestimate a 	"I think you greatly underestimate a few things; one being the windows kernel size in memory, the other being the sheer volume of bit flips in high density memory.A single 32GB SODIMM (as I have in my laptop, because it's a workstation laptop) see's roughly 12 bit-flips a month, these are correctable. This is pretty much in line with the 6-or-so bit flips I see on ECC memory inside servers (of which I have a few thousand, each having 32G modules spread over more area and enclosed in a heavy chassis, thus, less flips).Bit flips are so common that it's even possible to have ""double bit flips"" in the same page, which is uncorrectable even with ECC.So I think you grossly underestimate the percentage of bit flips, most are silent though (or attributed to bugs in software) so I understand you don"	dijit	9.627247	-5.5566626	comment	3.0	12.0	1559141580	8.217832
20057460	Intel could probably do it if they h	Intel could probably do it if they had the luxury of redesigning their instruction set. They're stuck with supporting an overly CISC-based instruction set whose roots date back to the early 1970s. ARM didn't have that problem and designed a much more modern RISC-like instruction set which requires a lot less power.	dreamcompiler	9.5897665	-5.380321	comment	3.0	17.0	1559264766	-7.701583
20107795	It looks like a tool to analyze the 	It looks like a tool to analyze the psp firmware, which is a necessary step in this process.Necessary only because AMD isn't being cooperative, that is. It'd be as easy as providing a shim so that the machine can boot without enabling the psp.	snvzz	9.379733	-5.237732	comment	3.0	29.0	1559760168	-7.2672234
20107910	The PSP is licensed from ARM, meanin	The PSP is licensed from ARM, meaning AMD owns none of the IP of the PSP. If they were to cooperate in this effort, ARM would likely sue them for breaking their licensing agreement.Same reason the recently mainlined Mali drivers (another ARM IP block) got no assistance in development from any of the chip vendors. Touching those projects would break their licensing agreements with ARM and risk having to stop producing their chips that integrate Mali (aka most ARM based chips).	StudentStuff	9.375926	-5.2048426	comment	3.0	19.0	1559760798	7.819962
20107954	PSPTool author here. Since all PSP f	PSPTool author here. Since all PSP firmware must be signed by AMD, something like a psp_cleaner would be possible given that a bug in the firmware allows to inject arbitrary code. This was shown by CTS-Labs earlier. [1][1] https://msrnd-cdn-stor.azureedge.net/bluehat/bluehatil/2019/...	cwerling	9.386588	-5.225464	comment	3.0	13.0	1559761060	7.837209
20108310	That all makes sense for the vendors	That all makes sense for the vendors.. but what does ARM get out of it? A false sense of security?	nfriedly	9.538793	-5.184375	comment	3.0	10.0	1559763462	-7.698427
20112394	The papers linked are from 2013.Now 	The papers linked are from 2013.Now we know the implications of Spectre make kernel JITs a potential vulnerability. You should not run untrusted code in the same address space with secrets it could steal.	titzer	9.716595	-5.6240277	comment	3.0	20.0	1559807088	7.8132615
20129478	The whole point of Risc is to avoid 	The whole point of Risc is to avoid instruction complexity for rarely used instructions. Popcount and family are most likely microcoded to expand to a loop anyway, so why add this complexity to silicon?	smallstepforman	9.476069	-5.751203	comment	3.0	17.0	1559949434	-10.526657
20140729	I suppose if you used a minicomputer	"I suppose if you used a minicomputer in the 70s or 80s then you used this or something like this chip. This is another site giving some more history and data sheets of the 74181 [1].The carry-lookahead adder used in the 74181 was patented by IBM in 1957 [2].Carry-lookahead is O(log n) in time and 0(n log n) in space. Carry-skip and carry-save are O(sqrt n) in time and O(n) in space [3].I couldn't figure out what Intel or ARM or even RISC-V use. But according to this [4], full-lookahead for 32b is 5 gate latency while only being 4 times larger than ripple.[1] https://apollo181.wixsite.com/apollo181/about[2] https://patents.google.com/patent/US2966305[3] https://booksite.elsevier.com/9780123838728/references/appen...[4] <a href=""http://www.cs.cornell.edu/courses/cs3410"	CalChris	9.413325	-5.5739307	comment	3.0	16.0	1560103506	-10.507789
20144678	Wouldn't someone like you be better 	"Wouldn't someone like you be better served on a 32 or 64 core
Threadripper workstation then?I assume there's I/O bottlenecking in there somewhere, but for the rest, surely you're not 100% pegging all 16 cores all the time, but more parallelism would still benefit you to a certain extent... While not costing $6k+ for a base 8 core machine."	Alupis	9.603093	-5.3403683	comment	3.0	14.0	1560153006	7.9842763
20143232	MIPS Prospects (1992)	MIPS Prospects (1992)	luu	9.469308	-5.5700307	story	3.0	17.0	1560131481	-10.404706
20147436	Nice to see that they are using the 	Nice to see that they are using the industry standard CRC32 polynomial in contrast to Intel/x86 who made up their own	dooglius	9.63628	-5.4937525	comment	3.0	12.0	1560179645	-7.549516
20147498	Poster speaking...The original title	"Poster speaking...The original title on this was ""RISC-V Bitmanip Extension proposal is an education"" because, besides a list of proposed instructions and precise definitions, the new draft explains in some detail how they are useful for real programs, and in many cases shows how they can be implemented with minimal additional gate count.It's an education because many of these operations will be unfamiliar to most readers, and may suggest to them new ways to solve problems. Some of the instructions are also implemented in recent x86 cores, sometimes in an AVXx extension, but Intel's assembly language mnemonic offers little hint at how powerful it is, and its reference documentation sheds little more light.So, previous drafts looked like a huge bolus of largely doubtful instructions that lo"	ncmncm	9.460024	-5.7211995	comment	3.0	12.0	1560179970	-10.540405
20150083	I'm out of the loop, can someone tel	I'm out of the loop, can someone tell me why Hacker News loves RISC so much?	JohnJamesRambo	9.375503	-5.705245	comment	3.0	10.0	1560195958	-10.620451
20152994	I do wonder if they'll continue with	I do wonder if they'll continue with Threadripper. If it exists in the next generation, it might simply be as rebadged and slightly nerfed EPYC chips rather than something custom.	reitzensteinm	9.431768	-5.3266	comment	3.0	11.0	1560226908	8.211453
20155080	As anyone who has put together a chr	As anyone who has put together a chroot knows, it isn't as simple as just preventing a process from accessing the filesystem. Most programs need to access a filesystem, just so they can load libc and the various other libraries it might need.	mnw21cam	9.7802925	-6.4170904	comment	3.0	19.0	1560258905	10.272284
20166327	I think even on 1st gen Zen processo	I think even on 1st gen Zen processor intel had performance/watt advantage though the gap was lower. It's Zen 2 that has completely obliterated intel in performance/watt. Which is almost a bigger shock than the AMD taking the performance crown. Taking both the performance and efficiency crown in a single generation specially when it's not even a full new generation is beyond  impressive. Of course it was only feasible with the foundation build up by Zen 1 but it's still very encouraging after the major stagnation that was there in desktop processor for a long while.	tmd83	9.261161	-5.1897335	comment	3.0	13.0	1560356659	7.8914237
20175892	Show HN: Dataset of Linus Torvalds' 	Show HN: Dataset of Linus Torvalds' rants sorted by hate	corollari	9.299952	-5.881551	story	3.0	17.0	1560440338	4.1676693
20190036	Abusing the CPU's Adder Circuits	Abusing the CPU's Adder Circuits	scaramanga	9.748985	-5.598973	story	3.0	73.0	1560606979	8.254718
20210771	ISTR that the avionics code is writt	ISTR that the avionics code is written in Ada, and runs on top of Intel i960 processors, and that the Ada compiler for that target only runs on VAX/VMS (not even OpenVMS, but specifically VMS on the VAX).	ch_123	9.528875	-5.528543	comment	3.0	18.0	1560848131	-5.082069
20211992	ISTR?Anyway, the processors in the F	ISTR?Anyway, the processors in the F-22A are a mix of different cores.  The power supply in the Gen 3 radar used a MIL-STD-1750A processor.  The PICC[1] processor modules also used the MIL-STD-1750A originally, but moved to a newer processor in a refresh (if I remember correctly).  I don't know what the non-Raytheon components of the plane were using.As for the compiler, you are spot-on.  We had a MicroVAX in a vault (it was a cleared computing system) just in case we needed to recompile the embedded software for the power supply controller.[1] Unfortunately, I don't remember what this acronym expands to.	vonmoltke	9.515062	-5.3508644	comment	3.0	10.0	1560858778	7.641683
20215027	The headline makes it sound like the	"The headline makes it sound like they're dropping support for just the i386 architecture (as opposed to other x86 architectures, e.g., i686).  The linked article makes it sound like they're dropping support for the 32-bit x86 platform entirely.Are Ubuntu's 32-bit x86 packages limited to those targeting the i386 instruction set?  As in, ""we ship x64, or ancient i386, but nothing in between""?Or do they use the i386 moniker used as an umbrella for all x86 architectures?"	BonesJustice	9.734603	-5.3201637	comment	3.0	11.0	1560876288	-7.7513876
20216474	Why are they dropping i386? Surely 3	"Why are they dropping i386? Surely 32 bit Ubuntu is still very much in demand in developing Countries or for people wanting to get old machines running with ""okay"" hardware? I can still get my IBM T22 to load a lightweight browser and navigate the internet.The kernel still supports i386 and surely it's not that much effort to make sure Gnome and the various packages compile for it? They still plan to support 32 bit ARM systems?"	bArray	9.739801	-5.279461	comment	3.0	13.0	1560881768	-7.7639866
20232391	If your priority is single-threaded 	If your priority is single-threaded performance, why did you choose 9900k? I was under impression 9700k is single-thread king.	iaml	9.902413	-5.7355876	comment	3.0	12.0	1561035419	8.157085
20232987	I'm genuinely curious, for a Nas doe	I'm genuinely curious, for a Nas does ECC RAM provide any benefit? I've always just used old desktop hardware, typically from about 4 generations prior (when I upgrade the desktop, the old hardware goes into the lab PC, and the lab PC goes into the NAS). I know there are power consumption benefits to the specialized NAS boards, but would I see any benefit from ECC? Considering the NAS is a RAID array of spinning rust drives, a flipped bit in RAM really shouldn't affect anything seriously. Or am I grossly mistaken?	zrobotics	9.466713	-5.520868	comment	3.0	11.0	1561039184	8.2402935
20232447	If you want to compare to Xeons, the	If you want to compare to Xeons, the comparison aren't the consumer CPUs this is about, the AMD equivalent are the Epyc CPUs.AMD doesn't disable ECC support entirely on consumer CPUs like Intel does, but as far as I know it's also not officially supported and guaranteed to work, it's up to the mainboard vendor how to handle this. In the Intel case you simply can't get ECC with non-Xeon CPUs.	fabian2k	9.392628	-5.4482656	comment	3.0	13.0	1561035859	8.165344
20233585	I hope Intel will at least offer ECC	"I hope Intel will at least offer ECC memory for their consumer CPU's now.   For now at least AMD are offering the option and will only increase uptake, increasing supply/demand and drive prices down.I hope that in a few years time that ECC will become standard, as for many it is driving a car without a seatbelt.This and with security exploits (rowhammer), ECC would be the solution that is a price gap that for many, is still one that can and should be closed.That all said, it would only take the one or two big mobile manufacturers to go ECC and marketing virtu the whole security and integrity aspect for the rest of the market to follow suit.   Which would be a bigger driver in reducing the price gap premium over non-ecc memory.
Which is how I see things panning out as mobile phone makers ar"	Zenst	9.422845	-5.472279	comment	3.0	22.0	1561042939	8.203169
20234574	64 cores but 128 with simultaneous m	64 cores but 128 with simultaneous multithreading.  And in a 2C configuration, you get 256 threads.  That is a beautiful thing.	bhouston	9.518705	-5.2946186	comment	3.0	16.0	1561048627	7.9802585
20235482	I remember reading a computer archit	I remember reading a computer architecture book that used a fictional MIPS instruction set and used washing and drying clothes as an example of how to pipeline / do parallel instructions. Does anyone remember the name of that book?	cwt137	9.54931	-5.5656347	comment	3.0	10.0	1561053776	-3.0757804
20238322	RISC-V formal spec public review	RISC-V formal spec public review	edwintorok	9.385913	-5.703971	story	3.0	116.0	1561071992	-10.617429
20239367	Well, this is progress.I wonder how 	Well, this is progress.I wonder how many counterparts to delay slots, stack windows, conditional moves, and other embarrassments we are inadvertently enshrining. There's nothing like hindsight to make you facepalm. (The crypto extension is my bet ATM for most-likely-to-embarrass. But that's without reading it.)The only way to approach this project sensibly is to assume every single FPGA produced after some near future point will have at least one, and more typically dozens of RISC-V cores scattered around like the multipliers you see in them now, just to try to be competitive.Personally, I am banking my enthusiasm for when the Bitmanip extension goes in.	ncmncm	9.328812	-5.5308995	comment	3.0	30.0	1561084104	8.390104
20239770	Modern computing analog: the first s	Modern computing analog: the first sentient AI to arrive in the Centauri system will contain CPU cores executing x86-64 instructions, a 64-bit extension to a 32-bit extension to a 16-bit segmented extension to an 8-bit teletype CPU.	api	9.536532	-5.2248425	comment	3.0	12.0	1561089685	7.783221
20241788	Far more important than that what I 	Far more important than that what I want to know is whether I should even care, e.g. is there any evidence of Spectre being used in the wild or not.	mehrdadn	9.654196	-5.5885496	comment	3.0	22.0	1561119347	7.742442
20242793	But why not just do a translation — 	But why not just do a translation — 32bit x86 to 64bit x86 doesn’t meaningfully restrict available instructions, then just* plant a bunch trampolines in the low 4gig to the real implementations in the 64bit adds space.* I know this isn’t a trivial “just” but it seems like a plausibly achievable approach to me	olliej	9.798364	-5.539313	comment	3.0	12.0	1561127488	-7.6105022
20245726	Except fun like..Intel controls the 	Except fun like..Intel controls the compilers. The compilers can do special things on Intel and make better code.Just having a faster processor doesn't matter if most compiled code is slower on your processor...	brianwawok	9.597825	-5.499457	comment	3.0	16.0	1561146237	-7.291856
20248856	does avx512 bring that much of a per	does avx512 bring that much of a perf advantage ?	agumonkey	9.44323	-5.5486007	comment	3.0	24.0	1561197961	8.072821
20255089	The entire article can be summarized	"The entire article can be summarized in this paragraph:  The problem with Verilog as an ISA is that it is too far removed from the hardware. The abstraction gap between RTL and FPGA hardware is enormous: it traditionally contains at least synthesis, technology mapping, and place & route—each of which is a complex, slow process. 

But there is nothing below a netlist that is still mappable to different types of FPGAs (since different FPGAs do not even necessarily need to have LUTs at all, much less the same LUT types!) so I fail to see the use of it.A GPU ISA changes very little between generations of the GPU, however a rather small change in the structure of the FPGA usually implies a completely new bitstream. So even if there was bitstream documentation it would be very FPGA-specific, unl"	AshamedCaptain	9.116721	-5.4529963	comment	3.0	13.0	1561293547	8.501106
20255441	Somewhat related: There's now an Ope	Somewhat related: There's now an Open Source toolchain[0] for FPGAs.[0] https://symbiflow.github.io/	snvzz	9.104628	-5.375219	comment	3.0	18.0	1561297623	8.375268
20255987	> Even RTL experts probably don’t be	"> Even RTL experts probably don’t believe that Verilog is a productive way to do mainstream FPGA development. It won’t propel programmable logic into the mainstream. RTL design may seem friendly and familiar to veteran hardware hackers, but the productivity gap with software languages is immeasurable.The author seems to view ""mainstream"" as meaning being as easy as CPU or GPGPU programming. I don't think it makes much sense trying to accomplish this on FPGAs; you're better off using CPUs, GPUs, or making something domain-specific like TPUs. The benefit of FPGAs is that they allow you to build your own architecture, and define data movement in a way that is specific to your application, at the cost of increased development effort. The complexity encountered in doing RTL arises from the inhe"	dooglius	9.098075	-5.4217596	comment	3.0	15.0	1561302179	8.475831
20256525	IMO, if what you want is to accelera	"IMO, if what you want is to accelerate computation, what you need is basically an FPGA with higher-level building blocks. Instead of an array of lookup tables, you want an array of what are essentially ALUs and registers. The abstraction should be something more akin to a dataflow graph, where you can route data from one unit to another.Yes, I know FPGAs already have adders, multipliers and registers inside them. My point is, they should have more of that. For computation, the focus needs to be on having as many of these useful high-level building blocks as possible, and making the routing of data between these blocks as easy as possible. For instance, routing 32-wide or 64-wide buses between these units, instead of individual wires.The ""problem"" with FPGAs is that they are trying to be ab"	tachyonbeam	9.143247	-5.3816123	comment	3.0	11.0	1561306414	8.37776
20256879	I've done three ASICs using only sch	I've done three ASICs using only schematics in the 1980s (back when 2.5 um was the bomb).  I've done ASICs, FPGAs, but mostly full custom designs since then.  And this article is wrong-headed on many levels.Verilog is an event-driven modeling language. It easily describes large collections of processes where a given process is triggered for reevaluation any time one of its inputs changes.  That is what it was designed for back in the 80s. Using it for automatic synthesis of logic came later.If your mental model is that Verilog is an ISA then things will be very confusing. Programming language semantics and ISAs are two different things.Yes, the Verilog language is pretty ugly.  But it allows low level modeling at the primitive level, even if that primitive is a single logic gate. And like 	tasty_freeze	9.132924	-5.5128555	comment	3.0	10.0	1561309160	8.586526
20259884	I haven't had the time to dig into t	I haven't had the time to dig into this drama over the past few days. I personally don't care about support for a physical 32-bit processor machine, I just want to be able to run old games, EEPROM writer software, and handful of software for patching old instruments, on my 10 year old 64-bit machine. Will that still be doable?	kgwxd	9.894993	-5.285816	comment	3.0	11.0	1561340139	-7.910748
20260010	It's not quite clear from this: are 	It's not quite clear from this: are they dropping i386 or something more like i686? I recently got modern Debian to start up on my first computer, a PII 350. It only worked because that was the first modern x86 architecture that distros support easily. Pretty much everything older's been dropped.	dehrmann	9.697712	-5.2723193	comment	3.0	11.0	1561342506	-3.8585138
20261400	I have a Raspberry Pi 4 Model B in f	"I have a Raspberry Pi 4 Model B in front of me and have just run some benchmarks using the Phoronix Test Suite.TL;DR: Prime CPU test; Pi4B: 60 seconds, Pi3B+, 80 seconds, Render test: Pi4B 27fps at 720p, Pi3B+ 16fps at 720p.Zips of the test reports:  http://cdn.littlebird.com.au/rpi4/test-4-b.zip
  http://cdn.littlebird.com.au/rpi4/test-pi-3-b-plus.zip"	schappim	9.70631	-5.242758	comment	3.0	12.0	1561363164	7.695457
20266335	It leverages Google Asylo as the enc	"It leverages Google Asylo as the enclave abstraction layer which currently supports Intel SGX. SGX is (to the dismay of HN readers everywhere) available in Intel server/workstation CPUs since Skylake, so I don't think there's a really ""specialized"" CPU hardware requirement."	bri3d	9.444098	-5.200507	comment	3.0	13.0	1561398668	-5.869788
20289832	correct me if I'm wrong, but isn't t	correct me if I'm wrong, but isn't the reason they moved to Intel chips in the first place because their homegrown CPUs couldn't keep up?Has that calculus changed in the meantime?	bshipp	9.29639	-5.1865644	comment	3.0	23.0	1561587556	7.730276
20290987	I wonder if it would be possible to 	I wonder if it would be possible to have an heterogeneous processor with a mix of arm and x86 cores. (They would probably have to partner with AMD which will produce x86 chiplets for them)	Rexxar	9.589494	-5.238197	comment	3.0	13.0	1561599014	-7.7211423
20307475	I'm sure the timing of this exposé (	I'm sure the timing of this exposé (of a years-old story) has nothing to do with AMD's imminent release of a product that will seriously threaten if not outright beat Intel for years to come.FUD	mizzack	9.220743	-5.185466	comment	3.0	18.0	1561746953	7.8705053
20308408	Take with a grain of salt. Comparing	"Take with a grain of salt. Comparing a single benchmark against an aggregate isn't particularly meaningful (although getting within a stone's throw definitely is). You can go through and cherry pick benchmarks and find plenty that obliterate that measurement.Better article title would be, ""3900x appears comparable to 9980XE in single threaded workloads."""	holy_city	9.527486	-5.248795	comment	3.0	17.0	1561752859	7.8129025
20307482	>The Wall Street Journal story omits	>The Wall Street Journal story omits important factual details, including the fact that AMD put significant protections in place to protect its intellectual property (IP) and prevent valuable IP from being misused or reverse engineered to develop future generations of processors.Without knowing what those protections are, I'm not sure we have learned much.Also the US government not objecting, I'm not sure changes the gist of the story does it?	duxup	9.211435	-5.1981974	comment	3.0	16.0	1561747007	7.8399935
20319205	He did the same thing as Linus, he d	He did the same thing as Linus, he didn't mince words when he showed the door to people who persistently wrote crap articles. It's the intersection of academic entitlement (students really believe that just showing up and making an effort should be rewarded with good grades, no matter how good the outcome is) and American discourse (no rude words, hurt feelings are more important than substance).	HarryHirsch	9.28009	-5.879609	comment	3.0	15.0	1561914691	4.2088532
20325213	The Campaign to Take Torvalds Out of	The Campaign to Take Torvalds Out of Linux	bin0	9.392466	-5.840482	story	3.0	16.0	1561989071	-8.167588
13616898	Inside Medium's Meltdown	Inside Medium's Meltdown	andreshb	9.571488	-5.4878902	story	3.0	19.0	1486746273	7.733651
13630708	No, and as far as high end instructi	"No, and as far as high end instructions then only 128bit AVX is natively supported on Zen, with 256bit AVX possible with half the throughput and no 512bit AVX support at all.
That said because Intel disables AVX2 in half its SKU's at least that will likely not to be a major impact.
As far as other features it's still TBD, virtualization works better on Intel currently, some other platform dependant issues would also probably still favor intel.
Intel makes their storage, networking and USB in house, AMD doesn't, AM3 storage and USB performance were considerably slower than Intel's solution and it's yet to be seen what AM4 will provide.AM4 will come with USB3.0/3.1 from ASMEDIA and will only support a single NVME drive, so if you are looking for a professional workstation, need high speed st"	dogma1138	9.269693	-5.1994324	comment	3.0	36.0	1486932805	7.8676414
13632363	Anecdatum, but the game I worked on 	Anecdatum, but the game I worked on (Tom Clancys The Division) will perform much better on a quad core than a dual core. We're CPU bound long before GPU bound.	dijit	9.445383	-5.230586	comment	3.0	11.0	1486948554	7.9196496
13641378	Differ t workloads will be if it in 	Differ t workloads will be if it in different ways from the trade offs. I do t imagine many applications will miss AVX 512.	AlphaSite	9.449318	-5.5422096	comment	3.0	17.0	1487050000	8.0896635
13642619	> AMD said its upcoming Zen x86 core	> AMD said its upcoming Zen x86 core fits into a 10 percent smaller die area than Intel’s currently shipping second-generation 14nm processor.We need to compare apples to apples. AMD's Zen chips have no IGP, while most Intel chips are shipping with an Intel GPU.If you look at an Intel die shot, about half of the area is taken by the GPU. [0]Since the current batch of Zen SKUs lacks any IGP, I'd be worried if they weren't able to come up with a die that's smaller than Intel's with an IGP...[0] https://www.techpowerup.com/215333/intel-skylake-die-layout-...	kogepathic	9.279448	-5.200639	comment	3.0	14.0	1487069458	7.8972564
13644215	"""The proof of a CPU is in how it ben"	"""The proof of a CPU is in how it benchmarks across real workloads.""Define 'real workload' here. Are we talking about a workload where the compiler specifically optimizes for Intel, or where the executable chooses unoptimized paths if it finds anything other than intel processors inside?Because I've found that when it comes to raw x86, no SSE anything or other nonsense; pure, unadulterated original x86, AMD simply owns."	lightedman	9.605704	-5.423368	comment	3.0	11.0	1487086649	7.944245
13644350	I'm slightly confused why everyone's	I'm slightly confused why everyone's talking about CPUs and ignoring the FPGA!Anyway, it's an interesting technique. An extension of chip-on-module packaging where instead of having a circuit board made of FR4 you have a tiny PCB made of multilayer silicon. This allows fast connections between chips made with different processes (CPU/DRAM/Flash are somewhat incompatible), and joining small chips together into large ones to improve yield.	pjc50	9.139428	-5.307552	comment	3.0	11.0	1487087501	8.30424
13648176	There is a mention of the 66 parent 	There is a mention of the 66 parent merge from Linus himself:http://marc.info/?l=linux-kernel&m=139033182525831	cpobrien	9.362633	-5.887959	comment	3.0	12.0	1487113821	4.2633214
13658823	You somehow make it unclear whether 	You somehow make it unclear whether or not Linus not being a multi-billionaire is a good or a bad thing.Are you saying that because he didn't try to monetize his code as much as he could have, it somehow makes his opinion less valuable?The man created Linux AND git, it doesn't matter whether or not he's got billions. He's got something more important than that, a legacy.	VeejayRampay	9.328646	-5.8536334	comment	3.0	26.0	1487240189	-1.8731251
13670048	IMO, you should learn Verilog and us	"IMO, you should learn Verilog and use CPLDs for glue-logic scenarios (like ripple counter or whatnot).Some 74-series chips are still unique and useful. 74LV4060 for example is a good stable clock solution. But your typical ""AND-gate"" and ""XOR-gate"" chips seem completely obsolete by CPLD + Verilog / VHDL.The ispMach 4000ZE costs $1.20 and has a current-draw of ~hundres of uA at 1MHz. Why use a 7400 (NAND-gate) ever again?http://www.digikey.com/product-detail/en/lattice-semiconduct..."	dragontamer	9.325144	-5.2657332	comment	3.0	14.0	1487352770	8.143634
13687243	Can someone tell me how many errors 	Can someone tell me how many errors over the past 10 years or so would have been fixed by ECC memory.  I've no idea at all how much better it would be and what the current error rate it prevents is?  It sounds more nice to have than vital? Is there a performance cost to it at all?	andy_ppp	9.52116	-5.5192227	comment	3.0	13.0	1487599274	8.231174
13691432	It could also be a neat trick around	It could also be a neat trick around the Intel Pentium's FDIV bug, [1].[1] https://en.wikipedia.org/wiki/Pentium_FDIV_bug	amelius	9.526719	-5.2811713	comment	3.0	10.0	1487628440	7.8618374
13708944	Is anyone familiar with any of these	Is anyone familiar with any of these books? I'm particularly interested in the FPGA book but can't find many reviews of it (most say that it's shallow, but don't go into whether the content that's there is good).	triecatch	9.048357	-5.356695	comment	3.0	10.0	1487795960	8.430138
13726002	MPX (hardware bounds checking)SGX (s	MPX (hardware bounds checking)SGX (secure enclaves)TSX (Hardware Transactional Memory)SGX can store SSL keys in a hardware protected enclave that can't be accessed by hypervisors/AMT so that can be useful for security sensitive stuff.Cloudflare probably could have used MPX to prevent their recent leak with minimal performance overhead.TSX is cool.	en4bz	9.499335	-5.229171	comment	3.0	12.0	1487959637	-5.800107
13744649	The quote from Ken Stevens, whose op	"The quote from Ken Stevens, whose opinion I respect, makes a
compelling argument, and certainly Intel has a lot of expertise on
asynchronous design, but I'm wondering if its position is similar to
that of Kodak inventing digital imaging in the 1980s. That is, there
would be less money for Intel to make in a future where asynchronous
design prevails, so there's no incentive for them to develop it. With a
properly executed tool chain, asynchronous design would be a
comparable skill to software development (that is, less of an elitist
activity than it is now) and the circuits would be more likely to work
on the first try because a whole class of hardware bugs wouldn't be a
thing anymore. Any comments or am I just a plonker for believing this?"	gradschool	9.334953	-5.2298875	comment	3.0	10.0	1488207452	8.210894
13761614	Do we know for sure ryzen does not h	Do we know for sure ryzen does not have ecc support?	dman	9.384285	-5.457757	comment	3.0	12.0	1488348477	8.159904
13774209	> But it's still losing in every web	> But it's still losing in every web and office single threaded benchmark.Web and office?  Single-threaded?Why are these benchmarks, specially in 2018?	geezerjay	9.661415	-5.312084	comment	3.0	14.0	1488465329	7.989813
13774501	Considering previous AMD chips could	Considering previous AMD chips could use ECC I hope it's true this time as well. AMD's CEO Dr. Lisa Su has an AMA later today, we should probably ask her: https://www.reddit.com/r/Amd/comments/5vl431/its_happening_a...Might as well ask her about the possibility of coreboot if we are at it.	tutanchamun	9.378078	-5.423031	comment	3.0	17.0	1488467427	8.150473
13774628	Looking at those gaming benchmarks. 	Looking at those gaming benchmarks. Turns out the single core performance is still more important than having more cores.https://www.purepc.pl/procesory/premiera_i_test_procesora_am...	bdz	9.462934	-5.214649	comment	3.0	17.0	1488468195	7.921579
13776877	From the reddit AMA today with Lisa 	From the reddit AMA today with Lisa Su (CEO):7th) Will all Zen products have all of the instruction sets and platform extensions, or could lower end chips lose features like virtualization?A7: In the consumer client space we have no plans to turn off virtualization or features.9th) Does AM4 / consumer ZEN support ECC memory?A9: ECC is enabled on Ryzen and AM4.[https://www.reddit.com/r/Amd/comments/5x4hxu/we_are_amd_crea...]edit: added link	fcanesin	9.2579975	-5.203674	comment	3.0	47.0	1488480098	7.838932
13782079	This is an okay and mostly correct i	This is an okay and mostly correct introduction for anyone who has never heard of CI, but lacks any sort of depth. The author sounds like he just discovered the concept and wants to share it, but lacks practical experience.	marcv81	9.26216	-6.377864	comment	3.0	18.0	1488539327	6.131083
13783072	Having glanced at the code, it seems	Having glanced at the code, it seems fairly easy to extend to modern Intel CPUs, which is great. The biggest caveat is the lack of prefetcher simulation, which literally makes many seemingly horrible cache misses a non-issue, but that's a non-trivial extension.Regardless, very nice to see tools like this being open sourced. The games industry has a lot of valuable experience with performance-critical code and I'd love to see more of it shared publicly.	keldaris	9.491069	-5.1939816	comment	3.0	11.0	1488551723	7.8142214
13782642	Oh, sorry for the dead link. So I re	"Oh, sorry for the dead link. So I repost it here:""Hello!? Releasing the source code would NOT change the fundamental problem with the PSP! It will still remain a black box under the control of the manufacturer! The problem is not the obfuscation of the source code, it is a much deeper platform architecture issue.The PSP is a universal computer with it's own CPU, RAM, ROM, clock etc, that can run whatever software AMD wants it to run, hidden from the user. It could load software anytime without you even noticing. AMD controls the PSP by using unique cryptographic keys which are burnt into each PSP.As the Intel IME engineer Xiaoyu Ruan wrote in his book ""Platform Embedded Security Technology Revealed"", the security architecture of the IME does not rely on security through obscurity, it relie"	moppl	9.391314	-5.1993985	comment	3.0	15.0	1488547425	7.8444767
13800124	Check the resource monitor to see wh	Check the resource monitor to see which service that corresponds to: it's likely Windows Update since they changed it to mine Bitcoin or something about a decade ago when it went from being I/O to single-core CPU bound.	acdha	9.872504	-5.1926603	comment	3.0	16.0	1488764299	7.8881063
13812720	This is from 2012:  http://rhaas.blo	This is from 2012:  http://rhaas.blogspot.com/2012/04/did-i-say-32-cores-how-abo...My guess is the 1 socket options scales great. 2 sockets are are less than ideal, and you will not double the 1 socket performance.	brianwawok	9.515261	-5.2637067	comment	3.0	18.0	1488909022	7.9627347
13814545	"""Lots of cores, lots of threads, and"	"""Lots of cores, lots of threads, and lots of main memory. That was the key.""Very much this. Which is why I ended up theorycrafting that the AMD many core CPU's would be so useful."	arca_vorago	9.511335	-5.2072506	comment	3.0	12.0	1488918763	7.9236326
13825749	> microcode-level rootkitThere's two	> microcode-level rootkitThere's two ways microcode goes on Intel CPUs. The first is when it gets flashed in at the factory onto an OTP ROM. The second is when it gets uploaded to a block of internal RAM by your computer, every time it boots. That's why packages like this one (https://www.archlinux.org/packages/extra/any/intel-ucode/) exist.One is set at the factory, one is set by your computer every time, once at boot, before the completion of boot. Also, it's very carefully signed, so even if you managed to put a bootkit before the OS boot, you would need to steal Intel's microcode key.Microcode is not targetable. Few things at that level are. (A decent example of something that might be more targetable at that level is a hard drive controller. Less difficult but still not easy.) The amo	striking	9.738326	-5.224122	comment	3.0	12.0	1489021344	7.7508826
13830337	Neutralizing the Intel Management En	Neutralizing the Intel Management Engine on Librem Laptops	Ianvdl	9.504275	-5.2055945	story	3.0	54.0	1489077003	7.84852
13843845	Is there since information in Intel 	Is there since information in Intel codenames I'm perhaps unaware of?	hkmurakami	9.394557	-5.19595	comment	3.0	12.0	1489199428	7.7354198
13907148	Why don't you ask Linus, I'm sure he	Why don't you ask Linus, I'm sure he will calmly and respectfully explain the answer while apologizing for the trouble :)	irontoby	9.290536	-5.8830667	comment	3.0	11.0	1489932546	4.2256947
13908759	"Somebody linked an ""Intel to mislead"	"Somebody linked an ""Intel to mislead press on Xpoint next week"" article from SemiAccurate to another thread on the same topic. Interesting read and adds some context to the announcement.
http://semiaccurate.com/2017/03/10/intel-mislead-press-xpoin..."	jpalomaki	9.332753	-5.191284	comment	3.0	17.0	1489947776	7.8080316
13921585	The problem with Intel doing this is	The problem with Intel doing this is that, for marketing reasons, they tend to enable different sets of instructions on different cores and an OS would have a really hard time scheduling threads when some the Skylake cores can execute AVX instructions but the Goldmont cores can't.  Normally the scheduler wants to assume that it can just move a thread from one core to another but if the thread started off on the Skylake and was taking an AVX-enabled code path that would cause problems.Not that the idea isn't appealing or even infeasible.  It just runs afoul of Intel's marketing.	Symmetry	9.542737	-5.511195	comment	3.0	14.0	1490099726	8.152591
13923410	I'm really curious about the kind of	I'm really curious about the kind of software things like pacemakers run and potential implications from 32-bit time expiring.	gbrown_	9.908607	-5.352755	comment	3.0	18.0	1490112022	-7.914931
13924183	No one is deploying 32-bit linux now	No one is deploying 32-bit linux now, outside of tiny edge cases and mobile. Mobile devices that go in the trash every 2 years. What do you reasonably expect to be around in 2038 in 32-bit form?Once 64-bit processors became mainstream, the 2038 problem pretty much solved itself. There's only disincentives to building a 32-bit system today let alone in 20+ years.Unlike with Y2k where there was nothing but incentives to keep using Windows and DOS systems where the 2000 cut-over was problematic. The non-compliant stuff was being sold months before Jan 1, 2000. The 32-bit linux systems have been old hat for years now, let alone 20+ years from now.Not to mention that those old COBOL programs were nightmares of undocumented messes and spaghetti code no one fully understood, even the guys maintai	drzaiusapelord	9.88307	-5.2808485	comment	3.0	24.0	1490116522	-7.944664
13924497	Intel had serious problems as well, 	Intel had serious problems as well, let's not forget: the Pentium fp bug and the F00F bug (though those are more than a decade old at this point)	raverbashing	9.469962	-5.2242494	comment	3.0	13.0	1490118612	7.810633
13924607	Well, it's not like Intel CPUs don't	Well, it's not like Intel CPUs don't have similar bugs.See Skylake for example - the list of known errata starts on page 27 and continues on through page 63 : http://www.intel.com/content/dam/www/public/us/en/documents/...	jjuhl	9.520415	-5.3149276	comment	3.0	42.0	1490119395	7.8518043
13936678	> Combining memory and processing re	> Combining memory and processing resources in a single device has huge potential to increase the performance and  efficiency of DNNs as well as others forms of machine learning systems.Isn't that describing a Field Programmable Gate Array: memory embedded in a sea of logic cells?What's the best resource to get someone who knows FPGAs, a decent amount of maths and 1990s style neural nets up to speed on today's deep neural networks?	femto	9.026906	-5.239314	comment	3.0	13.0	1490231685	8.178762
13954390	Linus Thorvalds will be happy to hea	Linus Thorvalds will be happy to hear that http://www.cio.com/article/2868393/linus-torvalds-apples-hfs...	kalleboo	9.335284	-5.8521895	comment	3.0	12.0	1490423636	-8.17566
13984079	I had trouble reproducing 9 differen	I had trouble reproducing 9 differences.  I tried these samples in a couple different ways (on the same line or broken onto different lines) in different browsers and always came up with 6 differences instead of 9 differences.	austincheney	8.85777	-6.3480506	comment	3.0	12.0	1490771688	1.4967316
30723979	Are there even any CPUs left with AV	Are there even any CPUs left with AVX-512?	pantalaimon	9.449682	-5.4712234	comment	3.0	14.0	1647619616	8.062655
30724066	Alder lake has it and Apparently Zen	Alder lake has it and Apparently Zen 4 will have AVX-512 toohttps://en.wikipedia.org/wiki/AVX-512#CPUs_with_AVX-512	mimsee	9.312755	-5.3086686	comment	3.0	11.0	1647619988	8.005422
30729464	Wait, I thought they were going to b	Wait, I thought they were going to be ARM64 only? They're porting it to Alpha too?	zozbot234	9.687988	-5.3590727	comment	3.0	23.0	1647649393	-7.797253
30741333	EDIT: Hmm, I seem to have picked a b	"EDIT: Hmm, I seem to have picked a bad example.  Try this one:    int get(int *base, unsigned index) {return base[index];}

Arm64:    update:
        ldr     w0, [x0, w1, uxtw 2]
        ret

RV64GC (vanilla):    update:
        slli    a5,a1,32
        srli    a1,a5,30
        add     a0,a0,a1
        lw      a0,0(a0)
        ret


RV64GC+Zba:    update:
        sh2add.uw  a0,a1,a0
        lw      a0,0(a0)
        ret

Arm64 is able to do some indexed loads in a single instruction that might take two in RISC-V w/Zba (and up to 4+ in regular RISC-V).  However, calling that a win for Arm64 is not so clear as the more complicated addressing modes could become a critical timing path and/or require an extra pipeline stage.  However, as a first approximation, for a superscalar dynamically sched"	FullyFunctional	9.744021	-5.92393	comment	3.0	36.0	1647769134	-10.433822
30742165	"$17 64 bit RISC-V
https://linuxgizmo"	"$17 64 bit RISC-V
https://linuxgizmos.com/17-sbc-runs-linux-on-allwinner-d1-ri...$29 64 bit RISC-V in the same form factor as an RPi CM3
https://www.clockworkpi.com/product-page/copy-of-clockworkpi...If you never look for it, you will believe it doesn’t exist.I was very skeptical of ARM back in the day thinking that it was great for crappy little iTrinkets and Androids but not for “real computing”. I was clearly wrong. I was very skeptical of RISC-V until I recently heard Jim Keller explain why RISC-V has a bright future. He was rather convincing. This is especially true given his track record of straight-up magical results. Looking at different RISC-V machines, I think that the greatest advantage is that it is simple and can therefore be optimized more easily than complex designs, and due"	BirAdam	9.397321	-5.623275	comment	3.0	14.0	1647780089	-10.565042
30742745	Author here: I have tried to clarify	Author here: I have tried to clarify this better in the update. The point is that I am talking about AArch32 and AArch64 in the article. Yes, everybody has been going away from conditional instructions, because they don't work well in Out-of-Order superscalar processors, and they are pointless when you got good branch predictors.HOWEVER, an argument in the ARM camp is that they are very useful when dealing with smaller chips. Remember ARM and RISC-V compete in the low range as well as higher range. AArch32 is not obsolete. It still has uses. There has been ARM fans claiming that conditional instructions make ARM superior for simple chips. The argument here was that RISC-V has way of dealing with simple In-Order chips as well.	socialdemocrat	9.498052	-5.6844153	comment	3.0	10.0	1647785590	-10.464695
30767779	CI/CD should you perform tasks that 	CI/CD should you perform tasks that you could execute on any machine, besides the deployment, which should work differently locally VS via CI service. But it should still be possible to deploy without CI, otherwise you set yourself up for being unable to deploy when you really need it.	chockchocschoir	9.15385	-6.4353228	comment	3.0	25.0	1647965155	6.1904583
30776778	Verilog definitely sucks but I think	Verilog definitely sucks but I think the problem with new HDLs (Clash, Bluespec, Chisel etc) is they don't necessarily make the hard bits of hardware design easier, they just help with the tedious stuff that whilst annoying ultimately doesn't take up much of your time.For example a good type system definitely makes module interfaces cleaner, saves you having to dig through warnings/lint reports to find stupid errors and in general makes in easier to rapidly build a new system out of IP.  However for your typical hardware project you're not normally wanting to radically configure things or continuously build whole new systems. You have a fixed or slowly evolving spec so when you first put things together and occasional need to add or change blocks there's a bunch of tedious error prone wiri	gchadwick	9.11975	-5.4917393	comment	3.0	14.0	1648029271	8.567112
30779068	The quality of GH seems to be slippi	The quality of GH seems to be slipping	etimberg	8.879194	-5.876121	comment	3.0	12.0	1648047228	7.978023
30782423	Can someone add some of the missing 	Can someone add some of the missing context about the ISA experiment mentioned in the tweet thread?	daenz	9.567965	-5.5229273	comment	3.0	16.0	1648064466	-7.686555
30793844	I was just thinking about this in th	"I was just thinking about this in the shower. The death of the Harvard architecture combined with the slow adoption of w^x seems to vindicate the problem, but I think there's a deeper truth to it: Turing complete machines can emulate any other Turing complete machine. Harvard architecture is immune to stack-smashing, but it's not immune to privilege escalations - Fundamentally, there's a usability tradeoff of ""Loading new executable code from the data segment"" that makes true Harvard architectures inoperable. We've settled on a happy if imperfect medium."	GauntletWizard	9.860818	-5.7999835	comment	3.0	21.0	1648147569	-7.512374
30794675	Speaking as someone who maintains a 	"Speaking as someone who maintains a fair bit of legacy infrastructure for a living, the hard part is knowing what is unused and what isn't. That's the whole rationale behind Linus' ""don't break user space"" policy."	bityard	9.815015	-5.699826	comment	3.0	14.0	1648152093	4.296936
30796842	I regret to inform you that the late	"I regret to inform you that the latest release of `find` has been renamed to [magnifying glass emoji].For example,    # Find directories the old way.
    find . -type d

    # The cool new way!
    [magnifying glass emoji] . -[keyboard] [folder emoji]

Edit: HN appears to strip emojis, so my new edited comment doesn't pack the same punch."	bqmjjx0kac	9.809611	-6.2613726	comment	3.0	11.0	1648164628	12.999703
30802321	From lightweight to featherweight: M	From lightweight to featherweight: MicroK8s memory optimisation (2021)	sbmthakur	9.777716	-5.2268257	story	3.0	41.0	1648217196	8.164913
30810304	Why is anyone doing a new mips cpu, 	Why is anyone doing a new mips cpu, given the similarities between mips and risc-v?  Why not do risc-v like everyone else?  (Cynically: Oh....).	throwaway81523	9.441545	-5.6408734	comment	3.0	11.0	1648284755	-10.4979515
30822475	This reminded me very much of the ol	"This reminded me very much of the old mag core memory from early days of computers
https://en.wikipedia.org/wiki/Magnetic-core_memory"	zw123456	9.825864	-5.215407	comment	3.0	12.0	1648404394	8.032785
30834954	This is a great tutorial, thanks.Sli	This is a great tutorial, thanks.Slight aside, with the incredible performance possible with Rosetta on Apple silicone, what are the chances of using it as part of a virtual machine emulating x86-64 with similar performance? I understand that Rosetta “recompiles” to ARM which would probably be harder with a VM but I think it also does real-time conversion to. I have no idea about he details but could QEMU use Rosetta under the hood for emulation?	samwillis	9.842699	-5.3833594	comment	3.0	17.0	1648498046	7.627342
30846620	Intel proposed AVX512 in 2013[0], wi	"Intel proposed AVX512 in 2013[0], with first appearance on Xeon Phi x200 announced in 2013, launched in 2016[1], and then on Skylake-X released in 2017[2][0]: https://en.wikipedia.org/wiki/AVX-512
[1]: https://en.wikipedia.org/wiki/Xeon_Phi#Knights_Landing
[2]: https://en.wikipedia.org/wiki/Skylake_(microarchitecture)#Hi..."	gnabgib	9.329418	-5.2387133	comment	3.0	11.0	1648578965	7.934398
30846434	It costs a lot of area for something	It costs a lot of area for something that's doesn't move the needle for the majority of desktop applications (browsers, games, office apps). The AVX512 units on Skylake-SP for example are a substantial portion of the area of each core. At some point you have to consider how many cores you could fit in the area used for vector extensions and make a trade-off.	ceeplusplus	9.511921	-5.2520566	comment	3.0	11.0	1648578021	7.9695034
30861514	Woah there, my dude. Let's try to un	"Woah there, my dude. Let's try to understand a simple model first.A CPU can access memory. When a CPU performs loads & stores it initiates transactions containing the address of the memory. Therefore, it is a bus master--it initiates transactions. A slave accepts transactions and services them. The interconnect routes those transactions to the appropriate hardware, e.g. the DDR controller, based on the system address map.Let's add a CPU, interconnect, and 2GB of DRAM memory:  +-------+
  |  CPU  |
  +---m---+
      |
  +---s--------------------+
  |      Interconnect      |
  +-------m----------------+
          |
     +----s-----------+
     | DDR controller |
     +----------------+
  
  
  System Address Map:
  
    0x8000_0000 - 0x0000_0000  DDR controller

So, a memory access to 0x000"	brooksbp	9.824708	-5.3995104	comment	3.0	15.0	1648678727	8.013533
30866107	Intel history has quite a few failed	Intel history has quite a few failed attempts to memory tagging (iAPX 432, i960, MPX), maybe it needs again an AMD push to make it work.	pjmlp	9.458409	-5.3191533	comment	3.0	12.0	1648727173	8.056192
30878247	Torvalds has apologized for past tox	Torvalds has apologized for past toxic and the damage it incurred, behavior and has vowed to do better from then on.	pygy_	9.301773	-5.8676887	comment	3.0	13.0	1648822369	4.1798
30894487	There are actually some challenges w	"There are actually some challenges with stuff like that; how do you sort ""'"" for example? Most people call the album ""Apostrophe""; should it be sorted under ""A""? What about the ""†""? ""D"" for dagger? Somewhere else? How do you find things like that in the search box? Should searching for ""star"" return that Bowie album?> Edit: I just realize HN can't display [star]It doesn't do emojis and various graphic characters. This is supposedly a ""feature"" shrug-emoji-here"	Beltalowda	9.823012	-6.257266	comment	3.0	12.0	1648960531	13.028481
30903533	Why not run the processor on the FPG	Why not run the processor on the FPGA?	Dwedit	9.126332	-5.3407493	comment	3.0	10.0	1649049613	8.185228
30910638	I think this is already implemented 	I think this is already implemented both in Linux and in Windows; you can tell the OS which RAM ranges are defective.Doing this from the chip side is not there yet, apparently. I wonder when will this be included in the DRAM feature list, if ever. I suspect that detecting defects from the RAM side is not trivial.	nine_k	9.702081	-5.4499617	comment	3.0	10.0	1649098551	8.143244
30911146	> There isn't any laptop that gets a	> There isn't any laptop that gets anywhere close to a 64-core Threadripper on threaded workloads.Challenge accepted.https://www.mediaworkstations.net/systems/portable-amd-works...	dragontamer	9.403867	-5.2326584	comment	3.0	12.0	1649101443	7.948004
30916422	Unicode will no longer accept propos	Unicode will no longer accept proposals for new flag emoji	Stratoscope	9.916348	-6.265867	story	3.0	12.0	1649145800	-13.981815
30919627	Counting instructions is very accura	Counting instructions is very accurate and roughly approximates power usage. The CPU's self-reported power usage is comparatively pretty noisy. Unit tests will probably be done running before you can get meaningful data. I have to wonder if a test runner is the best point of integration for this. It might make more sense to expose it as a bench harness, like criterion.EDIT: another benefit of a criterion-like approach is that you wouldn't require nightly	______-_-______	9.809045	-5.344596	comment	3.0	15.0	1649169662	7.7945814
30919975	Most of what I remember about 90s RI	Most of what I remember about 90s RISC workstations is how unbelievably slow they were. On an SGI Octane in 1998 was giving integer performance about the same as 1996-released Pentium Pros. And that's why RISC died: not because it was cheaper but because it was both cheaper and faster. Sometimes dramatically faster. The idea that RISC was somehow elegant turned out to be a myth. The complexity of x86 mattered less as cores grew in size and sophistication, but the code compression properties of CISC continued to benefit x86.	jeffbee	9.4710865	-5.6513124	comment	3.0	19.0	1649171232	-10.530305
30920184	"The movie ""Hackers"" prophesied that "	"The movie ""Hackers"" prophesied that RISC was going to ""change everything"". And it did, but not in these workstations, but rather in smart phones, raspberry pi's and other projects that have made RISC viable again."	geocrasher	9.384997	-5.691932	comment	3.0	12.0	1649172203	-10.61125
30924298	Show HN: Firecracker Lab – Build a m	Show HN: Firecracker Lab – Build a microVM from a container image	alexellisuk	9.770311	-6.29405	story	3.0	35.0	1649189293	-8.4795
30931817	CircleCI is a CI/CD solution (ala Sa	CircleCI is a CI/CD solution (ala SaaS) that you don't host yourself. Many (myself included) prefer to host mission-critical services ourselves to avoid untimely downtime.	capableweb	8.91409	-6.435448	comment	3.0	15.0	1649252390	-2.1208506
30935643	The philosophy behind MKL is that ea	The philosophy behind MKL is that each CPU vendor provides an MKL for their CPU. If you expect to mix and match MKLs and CPUs, you don’t understand the goals of MKL.	dbcurtis	9.292606	-5.324333	comment	3.0	18.0	1649269258	7.967775
30935765	What should they have done instead? 	"What should they have done instead? Built a compiler with a ""cripple Intel"" function? So people would have to download the executable that's fastest on their CPU, even though they use the same instruction set?The issue here is that they used a slower code path even on CPUs that could run the faster one, just because they were made by a competitor.You say ""AMD should have made their own compiler"", but why? What else should they have made? An OS? An office suite? Why?"	stavros	9.503245	-5.4105024	comment	3.0	24.0	1649269909	7.8709764
30936942	If Intel had shipped a library/compi	"If Intel had shipped a library/compiler that did just use feature flags and didn't check the CPU vendor, and the resulting code used features that on AMD ran much more slowly than the equivalent unoptimized code, would people blame AMD for the slow instructions, or blame Intel for releasing a library/compiler that they didn't optimize for their competitor's processor?This isn't a hypothetical; quoting https://en.wikipedia.org/wiki/X86_Bit_manipulation_instructi... :> AMD processors before Zen 3[11] that implement PDEP and PEXT do so in microcode, with a latency of 18 cycles rather than a single cycle. As a result it is often faster to use other instructions on these processors.There's no feature flag for ""technically supported, but slow, don't use it""; you have to check the CPU model for t"	JoshTriplett	9.360474	-5.278561	comment	3.0	25.0	1649275950	7.897769
30965031	People are overly sensitive. Linus w	People are overly sensitive. Linus was cool and very friendly and nice person most of the time on the mailing lists. Very very rarely he writes those furious replies, but honestly, it was very fun. I just don't understand why people are so much butt-hurt.	afr0ck	9.2756405	-5.8967156	comment	3.0	10.0	1649474568	4.2408857
31013252	There is no reason to believe the cu	There is no reason to believe the current rate (about ~35,000 over the period 2010--2020) to change rapidly, so we are probably safe for this century. You should be aware that emoji gender and skin color is encoded in character sequences and modifiers rather than atomic characters, exactly in order to avoid that exponential growth.And in the unlikely case that Unicode gets so many characters somehow, you can always extend it: http://ucsx.org/	lifthrasiir	9.846983	-6.26369	comment	3.0	13.0	1649847979	-13.916258
31013348	That's a cop out. You could equally 	That's a cop out. You could equally say that new emojis shouldn't be added because you should use inline images for those. Or RTL markers shouldn't be added because you should use dedicated text styling for that.There are a ton of places that don't support superscript markup.	IshKebab	9.828732	-6.268165	comment	3.0	10.0	1649848755	-13.960653
34588526	When I read this, I expected there t	When I read this, I expected there to be some discussion about the chain of custody, verification of the signature of microcode updates, or possible injection attacks, but none of that is mentioned here. I think those are the real reasons that people are afraid of microcode...even in the case that you trust the vendor themselves, you have little to no way of knowing that what you have itself hasnt been modified.	chacham15	9.623001	-5.3244066	comment	3.0	12.0	1675122827	7.718387
34589341	What if the main use of microcode is	What if the main use of microcode is to provide certain customers custom instructions that the rest of us don't get. Perhaps the instructions themselves hint at algorithms that are not publicly known. That's not a threat to us, just secret instructions that can not be discovered.	phkahler	9.5999	-5.35989	comment	3.0	10.0	1675127039	7.695954
34589626	The article argues that one should t	The article argues that one should trust microcode updates at least as much as the original microcode. Okay. But why would you trust microcode? It's closed source software running at the base layer of privilege and you have very little idea what it's doing or whether it's correct.	bo1024	9.645174	-5.344922	comment	3.0	10.0	1675128767	7.6964846
34590530	Gamepads were standardized ADC conve	Gamepads were standardized ADC converters too.Early PCs were actually really similar to modern Arduino boards. UART for Serial Port, GPIO is basically parallel ports, ADC vs Gamepad port, etc. etc.20MHz Arduino Uno compares favorably to 16MHz 80386, its really just RAM that's feeble (2kB SRAM on Arduino Uno, which is much less than computers in the 80s), but its not too hard to expand RAM out a bit (or buy a comparable uC today that has 1MB or so of RAM)-----------Even then, today's I2C ports (Arduino / Rasp. Pi) are way easier than old ISA stuff, but you run into very similar issues. I2C address collisions can cause a lot of pain, and ISA boards had DIP switches to move those peripherals to other ports.I2C is much more streamlined compared to ISA. Especially because we don't care about sp	dragontamer	9.553009	-5.2371244	comment	3.0	12.0	1675136017	-7.708615
34593529	Has anyone come across any resources	Has anyone come across any resources for instruction sets optimised for hand input? I assume there are as many pre RISC instruction sets optimised from programming in assembly directly rather than as a compiler target.	benj111	9.817629	-5.877414	comment	3.0	10.0	1675161369	-7.4506445
34595335	This article is over committing the 	This article is over committing the number of web workers and cores.  You should not do n cores = n web workers, it should be at best n-2 web workers (or 1).  The reason being this is a consumer device and the cores are absolutely not dedicated to just your app.	candiddevmike	9.632961	-5.372185	comment	3.0	13.0	1675175102	8.039836
34601828	That would be a great home server ma	"That would be a great home server machine. But would like to know the price, and to better understand this ""pseudo-ECC"""	intrasight	9.563058	-5.184167	comment	3.0	23.0	1675198161	7.805124
34653023	AMD could, as easily if not more so,	AMD could, as easily if not more so, be the one to show up with a native RISC-V processor that has a legacy x86 mode.In the modern landscape, it'd be closer to a v86 mode, where the hypervisor is RISC-V, but user x86 applications can run full speed.All the legacy PC platform crap can be done away, replaced by RISC-V standard OS-A profile.	snvzz	9.502914	-5.4844418	comment	3.0	12.0	1675502152	-10.482415
34653296	Itanium failed because of VLIW instr	Itanium failed because of VLIW instruction set, not because of any other reason.	whatisyour	9.574114	-5.6236215	comment	3.0	20.0	1675505670	8.314842
34654754	I've always thought that killing off	I've always thought that killing off Alpha in favour of pushing Itanium was one of the worst things Intel/HP could have done. Not only was Alpha more advanced architecturally, it was actively implemented and mature. With active development by HP, it could have easily snowballed into the standard cloud hardware platform.	jasoneckert	9.532726	-5.410336	comment	3.0	18.0	1675521149	-7.904845
34655167	This was the grand hope but it never	This was the grand hope but it never panned out. It’s possible now that a sufficiently brilliant compiler could make a difference since there was nothing like LLVM at the time and GCC was far less sophisticated. One of the many acts of self-sabotage Intel committed was insisting on their hefty license fees for icc, which meant that almost all real-world comparisons were made using code compiled using GCC or MSVC, which were not as effective optimizing for Itanium. There’s no way they made enough in revenue to balance out all of those lost sales.The other point in favor of this approach now is that far more code is using high-level libraries. Back then there was still the assumption that distributing packages was hard and open source was distrusted in many organizations so you had many code	acdha	9.565541	-5.599855	comment	3.0	14.0	1675524671	-7.7017426
34655346	Alpha's fate, like the other proprie	Alpha's fate, like the other proprietary RISC architectures that focused on the lucrative but in the end small workstation market, was sealed. With exponentially increasing R&D and manufacturing costs, massive industry consolidation was inevitable. That it was Itanium that delivered the coupe de grace to Alpha was but the final insult, but it would have happened anyway without Itanium.And it wasn't like the Alpha was some embodiment of perfection either. E.g. that mindbogglingly crazy memory consistency model.	jabl	9.554135	-5.352926	comment	3.0	15.0	1675526043	-8.017788
34659278	Programming in the large does not ne	Programming in the large does not necessarily involve uncertainty.  A CPU microarchitecture or an OS are large, complex systems, but we expect them to perform reliably.  Well-understood modularity boundaries are of course quite important for this.  It's only when we expect systems to do things that they weren't designed for at the outset (such as keeping private data from being accessed via side-channels, if you're designing a modern CPU) that real problems exist.	zozbot234	9.89357	-5.7520905	comment	3.0	12.0	1675551013	7.877963
34663241	I dont know man, 10 years ago I saw 	I dont know man, 10 years ago I saw an alarmist talk from Martin Odersky about how 128 core computers were around the corner and we should all switch to Scala for safe&easy parallellism and now when I go to the laptop shop it’s all 8, maybe 10 cores.We’ve been promised these magical ultra parallel machines for a decade now and either they’re much harder to build than the alarmists say, or there's simply no market.	skrebbel	9.491465	-5.257626	comment	3.0	14.0	1675588292	7.9287944
34664564	Emojis are a more granular and expre	Emojis are a more granular and expressive form of the more traditional lol, rofl, haha, :), :(. They’re a useful side channel for expressing tone.	hollowcelery	9.796934	-6.2614007	comment	3.0	14.0	1675601914	-13.959953
34664681	They're really not though, because t	They're really not though, because they render differently on different devices. If I send a gun emoji, it may render as a squirt gun for you for instance. Very different meanings.	_Algernon_	9.823604	-6.271182	comment	3.0	11.0	1675603132	-13.964477
34666364	This is a wild Time Machine. ISA car	This is a wild Time Machine. ISA cards. 28.8 upload. Thanks for sharing.	totoglazer	9.56195	-5.4394484	comment	3.0	15.0	1675615617	-2.2454453
34679699	The MMU is limited by the fact that 	"The MMU is limited by the fact that it is bolted onto MC68000 which nominally does not support MMU in todays sense. The article you linked says that while code was on demand swapped (""paged"" in UNIX terms) by OS (which they ""empirically determined"" to be possible on the CPU), data segments had to be swapped for process as a whole (with the process having ability to mark some of them as not needed at the time). This probably means that caring about how the memory model works was mostly opt-in for the user code. Original Macintosh does not have any kind of MMU and emulates this through software, which enables one to have ""half-dereferenced segments"" and thus requires segment locking."	dfox	9.894003	-5.5036135	comment	3.0	11.0	1675700579	8.335736
34687603	High performance RISC-V CPU	High performance RISC-V CPU	aklsh	9.400494	-5.664168	story	3.0	40.0	1675735453	-10.557624
34709336	Ask HN: Choice of HDL for an FPGA Pr	Ask HN: Choice of HDL for an FPGA Project	d_tr	9.1088915	-5.495252	story	3.0	5.0	1675870027	8.603975
34715791	I’m not a crypto expert, but you can	I’m not a crypto expert, but you can get 8 bit Atmel / Microchip AVRs with AES units on them (for example), are “special” lightweight algorithms actually needed, or should we just be encouraging the use of MCUs with suitable accelerators for proven algorithms?	fredoralive	9.594026	-5.225999	comment	3.0	17.0	1675892967	-4.959734
34717860	Let's hope Apple has learned from th	Let's hope Apple has learned from the past and doesn't use this feature in its ARM machines - 24 bit addressing (the original 68000 only had 24 address lines but 32 bit registers) was abused by software developers who used the 8 MSBs of a pointer to store additional information. When switching to the 68020, which could address 4 GB, this caused a lot of trouble...See https://apple.fandom.com/wiki/24-bit_addressing for more details.	johndoe0815	9.780369	-5.2181873	comment	3.0	13.0	1675902234	8.043994
34729073	> However, single-core performance i	> However, single-core performance is generally considered more important when it comes to overall speed for everyday usage, as most tasks are unable to scale efficiently across multiple cores.Thank you for acknowledging this. I think few people actually appreciate the need for better single-core performance. It's, in comparison, easy to just add more cores and use more power, but what is hard is making one core faster and faster and use less power.	herpderperator	9.581613	-5.397961	comment	3.0	12.0	1675968494	8.004269
34739635	Well, it's manual in that when a dev	Well, it's manual in that when a developer thinks they're done, they open a pull request from feature branch to develop. That's where code review takes place, and as such it's a core part of the workflow. Failing qa might mean additional commits on the feature branch and another pull request to develop. (Develop should really be called testing or qa; historical reasons.)	morsch	8.793786	-6.289242	comment	3.0	10.0	1676037470	-11.890266
34754544	Silicon reverse-engineering: the Int	Silicon reverse-engineering: the Intel 8086 processor's flag circuitry	zdw	9.6143465	-5.3491297	story	3.0	98.0	1676138042	-7.2237363
34768548	>I think their processors are not in	>I think their processors are not including management engine, so you are safe to buy one.There are no new AMD or Intel processors that come without ST (formerly PSP) or CSME (formerly ME).>The management engine that included in chipsets can be switched off permanently.This is factually incorrect. me_cleaner cannot neutralize or disable modern CSME, there is no way to verify the HAP bit does anything at all, nor that the included TCP/IP stack on the Minix OS cannot accept remote commands to disable the HAP bit, if set. To our current knowledge, only the onboard GbE controller is accessible to CSME's TCP/IP stack, but we're working with extremely limited information. These are closed-source, hardened opaque-boxes that are deliberately designed to be inauditable and tamper-proof. Adding firm	anonym29	9.549221	-5.2068963	comment	3.0	15.0	1676246537	7.8472867
34801828	Looks like it's just a way to utiliz	Looks like it's just a way to utilize chips with defects, instead of throwing them away.Some of the missing gigabyte is probably used for a memory mapping algorithm.Anyone who has dug deeper into this issue?	acadapter	9.900451	-5.2449317	comment	3.0	17.0	1676454718	8.017066
34805732	OK, now I finally understand why Gen	OK, now I finally understand why Gen-Z hates the simple smiley so much.(Cf. https://news.ycombinator.com/item?id=34663986)	dilap	9.785675	-6.243027	comment	3.0	15.0	1676477316	-13.957825
34808575	They'd have been at the same place w	"They'd have been at the same place we are today.  CPU architecture is a mature technology and other than horizontal integration and super-wide parallelism, all the basic ideas were already fixed by the early 90's.  Those architectures were all just regurgitating each others ideas anyway, there was very little genuine innovation in late RISC.Well, with the arguable exception of Alpha.  The 21264 presaged the modern core most closely, even if it was too big and expensive to be very competitive on desktops.  The, er, ""21364"" reached market a few years later and took over the world as the Pentium Pro."	ajross	9.478116	-5.2440753	comment	3.0	11.0	1676486530	-10.317766
34807783	IA64 is effectively a VLIW architect	IA64 is effectively a VLIW architecture, and... VLIW architectures just keep ending up not working out. There's a few things that make VLIW architectures hard to do well:* You're basically encoding microarchitectural details (which operations each execution port can run, how many execution ports, etc.) into the ISA, which makes changing that microachitecture difficult. (See also branch delay slots, which have a similar issue).* Several instructions have data-dependent execution time, and are very difficult to statically schedule. Dynamic scheduling can handle it much better. The common instruction classes are division, branches, and memory accesses, the latter two of which are among the most common instructions.* Static scheduling is limited by the inability to schedule around barriers, su	jcranmer	9.679038	-5.587719	comment	3.0	10.0	1676483686	7.9544053
34812285	There was a longstanding issue where	There was a longstanding issue where AVX-512 would trigger frequency throttling on a number of Intel CPUs, resulting in a net performance penalty for mixed workloads.	cbsmith	9.456314	-5.529668	comment	3.0	14.0	1676502565	8.075454
34815547	yeah, i think some of that was cp/m 	yeah, i think some of that was cp/m compatibility crap; too bad about 8.3the other thing is that the pdp-11 had working segmentation, the 8086 didn't, so trapping faults in user processes so they couldn't break the kernel would have required some kind of interpretation or somethingdid you know microsoft was shipping xenix in 01981 (the same year they started shipping qdos/ms-dos/pc-dos) and shipping xenix for the 8086 in 01982, and that seattle computer products was selling 8086 xenix boxes in 01983	kragen	9.712861	-5.2271433	comment	3.0	24.0	1676526650	-7.626581
34815648	Does anyone know why they would do t	Does anyone know why they would do this? If AVX-512 works fine on P-cores, and if certain people disable E-cores because they want to use AVX-512, why would they stop those who want to from being able to use it? Why would they go to such extreme lengths to disable something?	herpderperator	9.481046	-5.5029993	comment	3.0	12.0	1676527730	8.050421
34837532	CI has been such a productivity kill	CI has been such a productivity killer. You don’t need it. Stick with CD only and you can ship.	berkle4455	9.189368	-6.4163027	comment	3.0	15.0	1676654743	6.133789
34843252	I like the bloated balloon one and a	"I like the bloated balloon one and a period/pre-period emojis would be good.A few women in my life (managers/directors/executives) are terrified to talk about their periods because it could be used against them. I'm going to risk turning this into one of those ""Normalize <XYZ>"" tweets.. But cramps, bloating, irritability, pain, any number of other things. I want a status emoji for headaches and ""didn't sleep well"". Something that says lay off the knucklehead stuff today/for a few hours. Period and pre-period ones would be good too.If I need to I don't hesitate to start meetings with: ""I had 5 hours of sleep so let's see how this goes."" Let people talk about why they feel they way they feel.Three rejected period proposals. Just make one.Let’s do one for prostates too. I have one uncle who d"	miiiiiike	9.798627	-6.2632856	comment	3.0	12.0	1676687595	-13.907899
34843531	Just like how eggplant and peach emo	Just like how eggplant and peach emoji are used for representing things other than fruit and vegetables, I'd expect pregnant man to find its own niche in time. It doesn't take a genius to guess that it will be used by a lot of guys who just ate an enormous burrito.	kelseyfrog	9.784158	-6.2632194	comment	3.0	10.0	1676690304	-3.9033828
34843786	there's still no leek / scallion emo	there's still no leek / scallion emoji despite the family being the 2nd most used vegetable in SEA cooking.	4rt	9.784473	-6.250619	comment	3.0	10.0	1676693195	-13.954902
34843447	Look up proposal L2/20-190. They pro	"Look up proposal L2/20-190. They provide a number of good reasons for pregnant man. To summarize:- It avoids gender stereotyping of men in Parenthood.- couples say ""we are pregnant"". The term pregnant is culturally used for men too as their search shows.- the emoji is not just for pregnancy, it is also for feeling bloated, full, and hungry.I sometimes used this emoji for saying that I'm expecting something. My partner didn't like it."	a1371	9.784696	-6.264853	comment	3.0	13.0	1676689415	-3.9833462
34843788	Except all of those things is NOT wh	Except all of those things is NOT what the actual emoji conveys.	sigzero	9.793882	-6.269522	comment	3.0	10.0	1676693218	-13.960377
34844288	I have made a conscious commitment t	"I have made a conscious commitment to stop all use of emojis. They seem innocent enough, but ultimately they're debasing language and limiting the range of free expression. For example, in 2018, most major platforms changed their revolver emojis to water gun icons, in an apparent attempt to ""do something"" about gun violence. This would be a laughable proposition if it didn't border on dystopian. We should not allow these corrupt companies and consortiums to dictate our capabilities of conveying ourselves based on their political ideologies. Orwell understood well vagueness and use of euphemisms as powerful tools of oppressing political opposition, and wrote beautifully of it in Politics and the English Language (1946)."	1101010010	9.786074	-6.2668743	comment	3.0	12.0	1676699185	-13.960101
34881122	I know from extensive debugging of t	I know from extensive debugging of this issue that docker is the problem. You basically can't run docker (as of 6 months ago...I hope this will eventually be false) on an M1/M2 without causing significant heating and battery drain. Since this is the fault of the OS, maybe Asahi will eventually be the solution.	ghc	9.553057	-6.3890257	comment	3.0	16.0	1676987578	10.027976
34895031	Reverse-engineering the interrupt ci	Reverse-engineering the interrupt circuitry in the Intel 8086 processor	pwg	9.714702	-5.5289197	story	3.0	80.0	1677072221	-7.2372355
34906421	So at what point does something beco	So at what point does something become special purpose? Is L1, L2 or L3 cache special purpose? What about io chips? What about the firmware inside ethernet cards, harddrives or the video chips (not even talking about GPUs).I'm not trying to be combatitive, but it seems completely arbitrary where one would draw a line and taken to the extreme one is essentially left with a CPU and possibly some RAM that might be some ideal computing machine, but can't even talk to the outside world.	cycomanic	9.7492485	-5.4066734	comment	3.0	10.0	1677123256	8.200636
34910620	It was also the first (non-research)	It was also the first (non-research) processor I'm aware of that was designed from the ground up to be 64-bit, without 32-bit addressing.  Of course, as long as you can get the OS to allocate only within a given 4 GB range, you could emulate 32-bit pointers by storing only 32-bit offsets.The processor's firmware (PALCode) was essentially a single-tenant hypervisor, and the OS kernel made upcalls to the firmware in order to perform any privileged instructions.  Had the architecture survived longer, this would have been handy for virtualization.  Modern OS kernels have special cases for upcalls when running on top of hypervisors in order to avoid some of the overhead of the trap-and-emulate code in the hypervisor.The designers were brutal in only including instructions that could show a perf	KMag	9.718893	-5.413957	comment	3.0	13.0	1677160612	-7.6344666
34925819	Oh, it's the emoji? I've just seen t	Oh, it's the emoji? I've just seen the domain name out and about so assumed it was Alien reference.	magicalhippo	9.80924	-6.263747	comment	3.0	12.0	1677254385	12.499824
34928579	From a user perspective, a family em	From a user perspective, a family emoji is one character. Whether it’s implemented as a ligature seems irrelevant, as that’s not visible to the user.	tobr	9.852127	-6.266738	comment	3.0	20.0	1677265824	-13.955225
34929068	Is it known which exact ARM processo	Is it known which exact ARM processors Bitnami is using? A current project of mine targets the ARM TEE which is only available since ARMv9.	_1tan	9.597997	-5.1859403	comment	3.0	13.0	1677267852	2.724793
34929570	A shocking amount of people in the t	"A shocking amount of people in the twitter thread are writing this off as if it's completely silly. I don't see why. Those emojis very clearly and obviously make an implication that the price will go ""to the moon"", or that the chart will look just like the emoji of a chart going up. Especially when you say right next to it ""this is just the start"". It's no different than saying ""the price is rising and you need to get in now"".Courts aren't stupid. They understand how human language works. It's still financial advice whether or not you use emojis to communicate it."	alexb_	9.779273	-6.2675953	comment	3.0	10.0	1677270137	-13.990326
34945343	it mostly works super well for me, b	it mostly works super well for me, but sometimes while i’m using magit i manage to get emacs stuck in a weird state where i cant close the minibuffer or enter any commands. mashing c-g or esc in each open split doesnt help, and i end up having to force close.probably not magit’s fault, and it happens rarely, but it’s one of several problems i cant escape from that give me a sense of dread every time i open emacs.mostly switched away from emacs as a result	BaculumMeumEst	8.879542	-6.4160132	comment	3.0	11.0	1677417964	-11.362327
34946771	CPU of the Day: UTMC UT69R000: The R	CPU of the Day: UTMC UT69R000: The RISC with a Trick (2019)	zdw	9.407293	-5.6559916	story	3.0	62.0	1677429022	-10.572469
34953459	Is this project still relevant with 	Is this project still relevant with the advent of RISC-V? Can't the Chinese focus their efforts on RISC-V instead? Is there some reason Loongson is still being actively developed?	simula67	9.349372	-5.6846805	comment	3.0	10.0	1677476867	-10.5634
34958515	It's the CPU scheduler. You can easi	It's the CPU scheduler. You can easily avoid this by just not buying an X3D variant. Recent Intel CPUs can have the same problem where processes get assigned to the efficiency cores instead of performance cores if the right scheduler isn't used (like by using Windows 10 or an old Linux distro without explicit support)	goosedragons	9.69342	-5.3312407	comment	3.0	23.0	1677515972	7.9500084
34958767	Is there a point to going beyond 60 	Is there a point to going beyond 60 updates/s in Factorio? Because if not the system seems to be doing the correct thing and using less power. I hope AMD isn’t causing higher power usage for all users just to game some benchmarks!	jrmg	9.398086	-5.2240286	comment	3.0	11.0	1677516933	7.9258194
34960318	Author here. Any questions about 808	Author here. Any questions about 8086 microcode?	kens	9.643113	-5.4464326	comment	3.0	18.0	1677523647	-7.466251
34969756	> Version-controlled and Highly Repr	"> Version-controlled and Highly Reproducible: I can go back to any saved version of any of the org files above, and reliably reproduce output for ""distribution"" (PDF, tex, HTML etc.). In other words, it is all highly reproducible.I love org-mode, I've lived the org-mode life, I ran a consultancy entirely off of it (time tracking, invoicing, task list management), I wrote a book in it... But boy, it was not reproducible. It is maybe salvageable because it's plaintext. It's definitely easy to version control. But tons of stuff, including e.g. details of how exports and tangling worked, broke between org versions.TL;DR: I love org but I think this is overstated unless you use a pretty small, vanilla subset of org-mode."	lvh	8.89401	-6.3524284	comment	3.0	10.0	1677595204	-11.714515
34972837	Yes, more 8086 microcode. I'm here f	Yes, more 8086 microcode. I'm here for any questions...	kens	9.646469	-5.4732156	comment	3.0	17.0	1677608610	-7.4477615
34976849	https://mobile.twitter.com/taviso/st	https://mobile.twitter.com/taviso/status/1630695259935219713Apparently some Ryzen models have no fixed microcode available. You can boot with clearcpuid=xsaves as a workaround, probably at some performance cost.	sp332	9.312816	-5.190961	comment	3.0	17.0	1677629425	7.8488736
34977160	As I understood the email thread, th	As I understood the email thread, they do have microcode updates but they weren't actually released anywhere but in some crusty vendors BIOS update, so you can only get them if someone fished them out of there.i.e. thats what this repo seems to be: https://github.com/platomav/CPUMicrocodes	stefan_	9.564825	-5.361881	comment	3.0	13.0	1677631209	7.741694
34980118	Only one small part of the CPU actua	"Only one small part of the CPU actually understands the ""x86_64 language"". Most of the CPU executes a completely different, much simpler language, where instructions are called ""micro-operations"" (or µops). There's a hardware component called the ""decoder"" (part of what we call the ""front-end"") which is responsible for parsing the x86_64 instructions and emitting these µops. One x86_64 instruction often produces multiple µops.You can change the mapping from x86_64 instruction to sequence of micro-operations during boot on modern CPUs. That's what we mean by updating the microcode.At least that's my understanding, as someone who has implemented a few toy CPUs in digital logic simulation tools and has consumed a bunch of material on the topic as hobbyist but have no actual knowledge of the p"	mort96	9.6576605	-5.502883	comment	3.0	15.0	1677660032	7.739042
34990893	The Graviton are also real cores in 	The Graviton are also real cores in the VM, not like the Intel/AMD that have hyper threading.	nerdbaggy	9.568264	-5.27565	comment	3.0	35.0	1677721775	7.9421463
34991758	I've seen first hand validation on m	I've seen first hand validation on massive workloads moving to Graviton based instances. This includes low latency high TPS java services and offline big data compute on EMR.All combined the hype is quite real. Heck, even moving an intel based service to newer nitro based EC2 instances resulted in a drastic performance improvement. Moved from m5.24xlarge --> m6g.8xlarge with better service performance and improved latency characteristics. Intel is in trouble in my opinion.	notyourwork	9.519826	-5.2066107	comment	3.0	18.0	1677729005	-8.2782
34992830	That's a pure AWS choice (you can us	That's a pure AWS choice (you can use them only as real core) as is the fact that AWS has decided to provide large discounts for their graviton instance as a way to limit portability to other clouds.	mahkeiro	9.552652	-5.191586	comment	3.0	22.0	1677739718	-8.297494
35009712	Instruction interpreter is nicely hu	Instruction interpreter is nicely human-readable: https://github.com/LekKit/RVVM/blob/staging/src/cpu/riscv_i....	ognyankulev	9.474301	-5.7617455	comment	3.0	26.0	1677851964	-10.551697
35009765	How is this different from QEMU whic	How is this different from QEMU which also supports RISC-V 32|64 fairly well.	synergy20	9.516123	-5.6435	comment	3.0	10.0	1677852222	-10.33306
35009766	The RISC-V isa is specifically desig	The RISC-V isa is specifically designed to be nice and regular and easy to decode, and work with, which definitely shows here (also in the RTL code if you look at some of the well designed RISC-V cores)Of course, bot x86 and Arm started like that as well - but after 20+ years of evolution, they have to drag along a lot of history. (and one never really takes things away from an ISA, you only add new features, and at best deprecate old ones).That said, with the extensibility of the ISA in mind as a design principle, I do have good hopes, RISC-V will stand the test of time reasonable well in that sense...	bippingchip	9.419937	-5.696276	comment	3.0	20.0	1677852240	-10.536743
35010616	You're not allowed to use branding m	You're not allowed to use branding material of the RISC-V foundation to advertise your personal project. I suggest removing the logo to avoid your repo being taken down.	dist1ll	9.372221	-5.698979	comment	3.0	10.0	1677856362	-10.605588
35011445	A while back, I read a Sun patent on	"A while back, I read a Sun patent on not implementing some instructions and emulating them in the kernel's illegal operation trap handler.  The whole patent seemed obvious to me, but I'm glad that it was patented and now expired, providing obvious prior art in any attempts to patent it today.For MIT's 6.004 ""Beta"" processor loosely based on the DEC Alpha AXP, our test cases ran with a minimal kernel that would trap and emulate multiply, divide, etc. instructions using shifts and adds/subtracts, so we could implement more simple ALUs and still test the full instruction set.In any case, particularly in the world of hypervisors, it doesn't seem too hard to deprecate an instruction and stop implementing it in hardware, and push that complexity into firmware.  As long as the CPU covers the Pope"	KMag	9.705826	-5.494795	comment	3.0	10.0	1677859945	-7.779159
35014830	All sounds good to me. What I don't 	All sounds good to me. What I don't get is how running on arm64 would speed up i3. I3 is already fast enough to be unnoticeable, hardly performs any expensive operations.	bolangi	9.693623	-5.2615547	comment	3.0	10.0	1677876698	-7.8364844
35014916	"Not everything will work.
Once upon "	"Not everything will work.
Once upon time I tried to make CTF with M2 Pro, and I seriously wished that I had x86_64 Linux instead.Many of the penetration testing tools are not mainstream and they include pre-build x86_64 binaries, or are configured just to not compile with ARM, for reason unknown. 
And there is no time to figure out what is wrong.I know this might be a niche scenario, but still..."	nicce	9.722888	-5.270849	comment	3.0	27.0	1677877200	-7.7678385
35015233	I ran all my stuff inside non-root n	"I ran all my stuff inside non-root non-volume container so prebuilt binary it is not really a problem.I used QEMU through Podman machine in the end, but the performance is terrible. Even on MacOS side QEMU does not support Rosetta 2.
Docker for Desktop supports and gives significant boost, but I don’t want to use it."	nicce	9.639581	-6.0057583	comment	3.0	18.0	1677878724	9.972231
35015453	Are these ARM64 Mac using ECC?P.S: t	Are these ARM64 Mac using ECC?P.S: the 3440x1440 screenshot in TFA looks gorgeous on my system.  Everything is using subpixel AA (terminals, code editor, browser, except for the URL, for whatever reason) but not the file manager.  I wonder why that is.	TacticalCoder	9.706769	-5.2799935	comment	3.0	13.0	1677879857	-7.721633
35015838	> Even on MacOS side QEMU does not s	> Even on MacOS side QEMU does not support Rosetta 2.Is Rosetta 2 that much faster than QEMU's own translation? Why?	pxc	9.796433	-5.33421	comment	3.0	10.0	1677882045	7.612349
35026396	Moral of the story?Upgrade to DDR5 r	Moral of the story?Upgrade to DDR5 ram the latest standard which has on-die ECC memory but is not as good at spotting bit flips unlike proper ECC memory with a separate extra data correction chip.https://en.wikipedia.org/wiki/DDR5_SDRAM#:~:text=Unlike%20DD....Whilst Proper ECC ram chips and motherboards exist, I'm surprised that a cheaper but equally as good as Proper ECC solution doesn't exist although I know some would argue that DDR5 is a step in the right direction of a marathon.I guess the markets know best and chase the numbers, assuming they are also using Proper ECC memory, binary coded decimal and not floating point arithmetic which introduces errors, something central banks have been using for decades?https://en.wikipedia.org/wiki/Floating-point_error_mitigatio...	moremetadata	9.49276	-5.4905744	comment	3.0	13.0	1677982739	8.175317
35026435	I've had a lot of really strange bug	I've had a lot of really strange bugs and data loss with my current build (Ryzen with Gskill memory). After running a memtest for 24h i finally saw that two of the four ram sticks were faulty (two bit flips on each only rarely and on a specific test). The company changed them but now a year later without any issues I have another one that failed in exactly the same way. This is the last time I build a non-ECC system for myself.	ta988	9.609487	-5.527498	comment	3.0	12.0	1677983295	8.240845
35026456	I remember reading somewhere about t	I remember reading somewhere about that talk being debunked. Maybe someone more resourceful than me can find it.It was something about being more likely to be a human typo or a config change that rolled out to a bunch of machines. The statistics didn't add up, and it wasn't plausible that bit flips caused it.	BearOso	9.809748	-5.5986147	comment	3.0	12.0	1677983676	8.173243
35026504	DDR5 has enough ECC on chip to make 	DDR5 has enough ECC on chip to make errors effectively impossible. It doesn't provide error data to the CPU, though, so errors in transit can still occur. This is really unlikely, though, and anything not mission-critical will no longer need the extra ECC computation on the CPU-side. (DDR5 encapsulates the memory controller).	BearOso	9.483623	-5.495859	comment	3.0	10.0	1677984315	-13.201637
35039478	Linker Notes on AArch64	Linker Notes on AArch64	signa11	9.76188	-5.465972	story	3.0	68.0	1678099264	-7.710784
35041956	"I despise Team's ""emoji first"" desig"	"I despise Team's ""emoji first"" designWhen you hover over a message, the immediate options are emojis. Not reply, copy, but goddamn emojis."	bluedino	9.79707	-6.264381	comment	3.0	10.0	1678115721	-13.949908
35060729	Totally agree. I love the idea of SA	"Totally agree. I love the idea of SAST-in-CI, but I ran this on a handful of repos I manage (ranging from 40k-100k SLOC) and there were too many false positives for me want to add this as build-breaking criteria to our CI pipeline. Not unique at all to bearer in any way of course, as you point out, but still a real problem.I suppose an alternative would be to not have this be a zero-sum part of CI, but maybe as a qualitative summary that gets autogenerated as part of the PR / code review process. The noise issue is still a real one as people will eventually ignore the noisy summaries or filter/whitelist them into relative oblivion.I like the idea of ""only applies if these other conditions are true"". In all the false positives I encountered so far, if given the option I would be able to dec"	spmurrayzzz	9.391811	-6.376902	comment	3.0	15.0	1678220886	1.7122313
35083291	I'd argue the same goes for L1 and L	I'd argue the same goes for L1 and L2. But the obscurity is provided by the silicon packaging process.Would be nice to crowdfund a lab to break these hardware backed treachery schemes.	no_time	9.795984	-5.4159265	comment	3.0	15.0	1678380371	8.0324
25448766	I don't disagree.  In fact, I'm assu	I don't disagree.  In fact, I'm assuming that's a major reason they've not done this sooner.Intel tried to setup a different more efficient architecture with IA64, but they failed there.That being said, with major players like Amazon and Google tinkering with ARM in the cloud and Apple getting ARM into the hands of a lot of developers, we could be on the eve of seeing ARM make a big entrance into the server realm.IMO, a big reason ARM hasn't taken off there in the first place is because most devs aren't using ARM machines for development.	cogman10	9.629564	-5.2093444	comment	3.0	12.0	1608153191	-7.860533
25449601	Why wouldn’t they use Rosetta though	Why wouldn’t they use Rosetta though? I’d wager the performance of Rosetta would be better than QEMU emulation, but perhaps it’s more optimised for desktop apps	orf	9.829419	-5.3796806	comment	3.0	15.0	1608157377	7.635609
25449948	I think the parent comment meant -- 	I think the parent comment meant -- why not use Rosetta to run an x86 qemu process? Then the architecture emulation (translation?) would be done by Rosetta (potentially faster), as opposed to software emulation by qemu.Now, this might not work, as I'm not sure Rosetta covers all of the x86 instructions/settings that qemu would need, so you might be stuck with ARM64 qemu emulating x86 anyway.	mbreese	9.835575	-5.400185	comment	3.0	10.0	1608159538	7.588408
25450963	This whole territory is pretty much 	This whole territory is pretty much unknown right now. Whether we can have reasonably performant x86 containers is up in the air.	ogre_codes	9.616901	-6.1223025	comment	3.0	15.0	1608166521	-7.8059916
36906126	>I won't be around to validate this,	>I won't be around to validate this, however I am asserting GNU/Linux will not survive after everyone that was part of its genesis is long gone.I'm 100% with you on this. I also think that if Linus were to die today, the kernel would fall apart within 10 years.	1970-01-01	9.465609	-5.810138	comment	3.0	12.0	1690549124	-8.216827
36924991	Is there a better algorithm than the	Is there a better algorithm than the 0 and 1 algorithm [for processor]	nobidy	9.715771	-5.5343013	story	3.0	1.0	1690667077	8.408788
36944139	I keep meaning to research this, and	I keep meaning to research this, and maybe this isn't the right place, but how are things going for Linux executables? Last I tried Linux on ARM it seemed like application-level support for ARM was very spotty.It doesn't seem like a Rosetta 2-like effort is making it into mainline Linux anytime soon, if ever.	Andrex	9.871859	-5.2507195	comment	3.0	12.0	1690817423	-7.836441
36946092	>chips like the 6502 have still been	>chips like the 6502 have still been in active use (almost 50 years now)Also 8051 cores can still be found in modern products	FirmwareBurner	9.489349	-5.184622	comment	3.0	10.0	1690824945	7.6413484
36992921	Is the RTL autogenerated from the ch	Is the RTL autogenerated from the chip images? I looked at one file 68k.v and the variable names remind me of a decompiler.	tails4e	9.908628	-5.2415004	comment	3.0	12.0	1691101659	-6.7027664
37001751	> All RISC-V architectures use 32 ge	> All RISC-V architectures use 32 general purpose registers (GPRs)Strictly speaking this is incorrect. There are variants called rv32e/rv64e which have 16 general purpose registers. These are particularly nice as a VM ISA since the reduced number of registers allows you to JIT the code to AMD64 (which itself only has 16 GPRs) without having to spill the registers.	kouteiheika	9.512052	-5.7584896	comment	3.0	10.0	1691164576	8.20176
37005748	The project has just started and the	The project has just started and the goals are defined. I have setup the GitHub project, successfully compiled and installed the kernel, and posted to Hacker News.Do you have ideas or suggestions for this fine Linux fork?	roschdal	9.02781	-5.9427423	comment	3.0	12.0	1691182438	-8.787586
37007691	That language is referring to copyri	"That language is referring to copyright permissions (i.e. promising not to sue people for copyright infringement for using or distributing the software in accordance with the GPL). It doesn't refer to providing access.A trickier thing for Red Hat might be> You may not impose any further restrictions on the recipients' exercise of the rights granted herein.One may argue about how to interpret that with regard to, for example, terminating a business relationship as a result. (I could see arguments on both sides.)Also, Red Hat's method for complying with section 3 could be a subtle issue, because one of the options for compliance requires promising to provide ""any third party"" with the source code upon request. I don't know whether Red Hat is using that option or a different option."	schoen	9.926235	-5.3506856	comment	3.0	18.0	1691195662	-9.339928
37014924	Yes, Intel had pointless restraints 	Yes, Intel had pointless restraints on pin counts; the 8008 processor was barely allowed 18 pins. So the 8080 designers were lucky that they got all the way to 40 pins. Federico Faggin has ranted about this in a few places.As far as applications of the bus, multiprocessing was a big motivation. Intel had big plans with their Multibus. Intel had more plans for coprocessors as well. They introduced the 8089 I/O coprocessor to provide mainframe-style channel I/O, but it wasn't very popular.	kens	9.585808	-5.253448	comment	3.0	12.0	1691259671	-7.5480523
37025141	"> ""That leaves only RISC-V for those"	"> ""That leaves only RISC-V for those who want to make their own processors without paying someone for the privilege.""OpenSPARC? OpenPOWER?  There are plenty of solid open ISAs for anyone who wants to do that."	ThrowawayR2	9.455555	-5.5547256	comment	3.0	12.0	1691346996	-10.509519
37028751	I don't know whether anyone has ever	I don't know whether anyone has ever really threatened a patent lawsuit over the ISA, but it definitely does seem to be a good idea to document the origins of instructions, and that they are either so well known and obvious that they can't be patented, or else that they were patented and the patent has expired.Another protection is that the membership application for RISC-V International includes certification that RISC-V does not infringe on the applicant's own patents. With companies such as Intel, AMD, IBM, Marvell, Microchip, MIPS, nVIDIA, NXP, Qualcomm, Renesas, Samsung, Siemens, Sony, STM, Texas Instruments being members that covers a lot of ground.The base ISA (up to RV32GC, RV64GC) very deliberately breaks no new ground. It's just smoother, with known potholes filled in.Many of the	brucehoult	9.44279	-5.6587977	comment	3.0	15.0	1691370592	-10.551944
37047326	Are they glyphs or just vector graph	Are they glyphs or just vector graphics clip art?Unicode doesn’t include ligature code points for every English word either. Somehow we manage to keep glyphs and words separate. Why couldn’t we do the same for inline graphics?The copyright situation around emoji is actually worse now than if they’d been kept out of the standard. People expect emojis to look like on iPhone, but those specific graphics are owned by Apple, leaving everybody else scrambling for emojis that look close enough without infringing.If emojis had originally been released as an open source library of SVG graphics together with some kind of standard shorthand way to refer to them without embedding an entire inline URL, we could have truly open clip art instead of this weird semi-proprietary mess.	pavlov	9.861445	-6.256258	comment	3.0	14.0	1691493895	-13.958593
37052886	"From FAQ:  
[Q] How long have users "	"From FAQ:  
[Q] How long have users been exposed to this vulnerability?  
[A] At least nine years. The affected processors have been around since 2014.Amazing how these vulnerabilities sit around unnoticed for years and then it takes two weeks for someone to code up an exploit."	v8xi	9.754685	-5.2819257	comment	3.0	12.0	1691517031	-2.4502618
37055603	This could be a case of survivorship	This could be a case of survivorship bias - we don't know how many spectre-like bugs did get patched, because they never made it to the public	infinityio	9.642857	-5.50149	comment	3.0	22.0	1691529523	7.7559586
37056195	See this LWN story: https://lwn.net/	See this LWN story: https://lwn.net/Articles/940783/on Linux, any cpus that don't have updated microcode will have AVX completely disabled as a mitigation for this issue. That's rather harsh if you ask me and would be very noticeable. Now I'm interested in finding out if I can get updated microcode..	kzrdude	9.5612755	-5.3613434	comment	3.0	11.0	1691532939	7.7632203
37057393	It seems to me like most don't have 	"It seems to me like most don't have a fundamental gut feel for what speculative execution actually is and the implications of ""not getting it"". At some level we need to fight for performance. My operating systems are only getting slower and shittier. I cannot fathom my CPUs going backwards too. Security must take a back seat at some point. You can't put bubble wrap and warning labels over everything or it becomes useless. The most dangerous tools are typically the most effective.The CPUs are vulnerable because of the exact way in which they are being applied to a problem. Speculative execution is not inherently unsafe. Whatever future predicted memory prefetching shenanigans are going on in my CPU over here have absolutely ZERO impact on your CPU over there. Certainly someone could figure "	bob1029	9.673125	-5.599369	comment	3.0	10.0	1691541902	7.817058
37059859	One possibility nobody mentioned yet	One possibility nobody mentioned yet: the chip vendors don't invest a ton of time looking for them because they don't actually matter that much.Bear in mind, security researchers are incentivized to find things to build their reputation. It's very often the case that they claim something is a world-shaking security vulnerability when in reality it doesn't matter much for real world attackers. Has anyone ever found a speculation attack in the wild? I think the answer might be no. In which case, why would chip vendors invest tons of money into this? Real customers aren't being hurt by it except in the sense that when an external researcher forces action, they're made to release new microcode that slows things down. Note how all their mitigations for these attacks always have off switches: no	mike_hearn	9.616036	-5.4983544	comment	3.0	12.0	1691568181	7.8624463
37061501	That's gonna be fun when Amazon swit	That's gonna be fun when Amazon switches to RISC-V for their next (or next+n) iteration of Graviton.ARM presence in the server market will go away like poof. More than half of it.	snvzz	9.492702	-5.3584228	comment	3.0	18.0	1691583406	-8.407741
37062364	The X86 vs ARM makes for such a grea	The X86 vs ARM makes for such a great story.One prefers locking and complicated instructions, the other is designed with open and simplicity.At one point, Intel seemed to be dominant, and proven right with their proprietary tech, where as ARM chugged along keeping a low profile, and keep doing the good work. Now, finally the reality has caught up with them, and turns out openness and simplicity is finally taking a lead.Stick to your principles FTW!!!	anagri	9.641635	-5.29845	comment	3.0	13.0	1691587718	-7.744542
37070841	What If Linus Torvalds Gets Hit by a	What If Linus Torvalds Gets Hit by a Bus?	LorenDB	9.328882	-5.878259	story	3.0	11.0	1691631531	-8.147475
37078110	> AFAIK, everything else is fair gam	> AFAIK, everything else is fair game, even emojisFWIW, I generally expect emojis to be more compatible than other symbols, because they have no legacy meanings - ex. ™ has never been a path separator, or indeed anything else.	yjftsjthsd-h	9.811124	-6.299094	comment	3.0	14.0	1691684228	-13.959233
37078877	I suppose this is both good and bad.	I suppose this is both good and bad. I wonder if Red Hat/IBM anticipated this, and how they will respond to it.	1MachineElf	9.904561	-5.4048705	comment	3.0	17.0	1691687740	-9.415928
37085648	what's interesting is that this isn'	what's interesting is that this isn't as serious as some of the issues today.just following the example, the result is wrong after the 4th digit. this is absolutely 'could be handled in software with a significant performance loss' territory.that isn't to say this isn't breaking -- it absolutely is.what I'm getting at is that my CPU runs 30% slower with mitigations. if I were running multiple servers like the computer I use, and I was near the capacity of my resources, I would need to add some machine(s) -- and people do.in the same way this is serious, these current issues are the same yet somehow we've lost some stuff along the way and we just don't do recalls or even receive any remedies. where's my check?	mpixel	9.604691	-5.334296	comment	3.0	17.0	1691734464	-2.880302
37087078	[ time to re-share my Dr. Nicely sto	"[ time to re-share my Dr. Nicely story ]Dr. Nicely caused quite a bit of excitement at Intel. I was on the p6 architecture team when he discovered the FDIV bug. Our FPU was formally verified and didn't have the same bug.
To be nice to Dr Nicely we sent him a pre-release p6 development system to test with his program to demonstrate that his bug was fixed. He was working on a prime number sieve program and came back reporting that the p6 ran at 1/2 the speed of a Pentium for his code. Wow, another blackeye/firestorm caused by Dr. Nicely. He had too much of an audience for him to report to the world this new processor was slower.So I got to spend a lot of time learning how to sieve works and what is happening. For the most part, it allocates a huge array in memory with each byte representing "	wscott	9.554672	-5.315609	comment	3.0	12.0	1691749690	8.03365
37087260	It's funny how they had to recall th	It's funny how they had to recall the CPUs (even if they tried to make it harder), and now, with all the security issues (from spectre to downfall), where the patches cause a massive CPU performance hit, noone is yelling for a recall.	ajsnigrutin	9.475563	-5.3633833	comment	3.0	11.0	1691751619	7.763066
37142862	> unlocks their use as computer memo	"> unlocks their use as computer memoryThe big asterisk on that being ""at 5 Kelvin""."	inhumantsar	9.910462	-5.2246566	comment	3.0	18.0	1692159826	8.086221
37145195	The 8088 Prefetch Algorithm	The 8088 Prefetch Algorithm	ingve	9.873714	-5.58948	story	3.0	69.0	1692183083	-7.526437
37146099	As someone who watches Linus but not	As someone who watches Linus but not to the extent that I have 2.5 hours to spend watching a lessons learned video, what actually happened?	simmerup	9.287887	-5.858066	comment	3.0	15.0	1692189259	4.1595926
37156540	QAT is awesome, and flips the script	QAT is awesome, and flips the script on the notion of core count primacy.  In many servers, QAT when properly used will save several CPU cores, since cores spend a lot of time compressing and encrypting stuff.  However, the software layer has always been Intel's weakness, and I'm not entirely sure they got this one right.	pclmulqdq	9.597621	-5.310967	comment	3.0	15.0	1692240250	7.9807963
37159607	FTA: “One cheaper version would fit 	"FTA: “One cheaper version would fit into a 40-pin package. This version would have its memory address sizes limited to 16-bits and so would only be able to use 64 KB of memory. A more expensive 48-pin version would have access to a 23-bit or 8 MB address space.To support this approach, the architecture would be based on segmented addresses.”I don’t see how that follows, given the example of the 6507. https://en.wikipedia.org/wiki/MOS_Technology_6507“The 6507 (typically ""sixty-five-oh-seven"" or ""six-five-oh-seven"") is an 8-bit microprocessor from MOS Technology, Inc. It is a version of their 40-pin 6502 packaged in a 28-pin DIP, making it cheaper to package and integrate in systems. The reduction in pin count is achieved by reducing the address bus from 16 bits to 13 (limiting the available"	Someone	9.56439	-5.3145647	comment	3.0	10.0	1692268147	-7.4557714
37164325	My experience with hyper-threading h	My experience with hyper-threading has always been lousy performance, in highly concurrent code, when comparing against proper cores anyway.The cores get thrashed all the time due to shared resources.	pjmlp	9.78924	-5.576035	comment	3.0	14.0	1692290177	8.231794
37169818	Emojis and emoticons in any serious 	"Emojis and emoticons in any serious piece of communication are simply unprofessional and insincere. Do not use them, unless your intent is actually to piss your recipient off.Textbook example is the recent fiasco over at Linus Tech Tips, where they even used an emoji in an email to Billet Labs saying they ""accidentally"" auctioned off Billet's stuff. Anyone worth their paycheck doesn't use emojis in business communiques."	Dalewyn	9.785956	-6.264652	comment	3.0	11.0	1692315927	-13.969452
37172769	Emulating the 6502 CPU in C++ (2021)	Emulating the 6502 CPU in C++ (2021) [video]	mariuz	9.549296	-5.300451	story	3.0	61.0	1692347284	-7.454579
37178632	> Mac is a mixed bag of excellent Ro	> Mac is a mixed bag of excellent Rosetta and breaking apps for no reason.They will probably retire Rosetta2 in a few years, like they did with Rosetta.Apple usually seems to care about getting the bulk of applications to transition over, and the rest is just collateral damage/the devs should’ve just updated their software.	Tijdreiziger	9.768222	-5.2795863	comment	3.0	29.0	1692378198	7.571488
37179563	> They will probably retire Rosetta2	> They will probably retire Rosetta2 in a few years, like they did with Rosetta.Counterpoint: The PPC-to-Intel version of Rosetta was licensed technology (QuickTransit); Apple was undoubtedly paying for it, possibly even per user, so there were financial reasons for them to get users off of it ASAP.Rosetta 2 was developed in-house by Apple, so there isn't the same hard timeline to get users to stop using it. I wouldn't expect it to survive long beyond support for running the OS on x86, though.	duskwuff	9.774276	-5.2876062	comment	3.0	24.0	1692381446	7.5977197
37186371	RISC-V is at-best 10-15 years away f	RISC-V is at-best 10-15 years away from being in the position to where ARM is now.	sbuk	9.381627	-5.65153	comment	3.0	16.0	1692429677	-10.5731945
37203915	David G. Conroy: FPGA Retrocomputing	David G. Conroy: FPGA Retrocomputing	wglb	9.124156	-5.2805843	story	3.0	55.0	1692574034	8.32719
37205852	I don't think it'll take 15 years fo	I don't think it'll take 15 years for RISC-V processors to be competitive with ARM.	heavyset_go	9.403501	-5.6177115	comment	3.0	17.0	1692596837	-10.5809355
37217008	Now what? FreeBSD and Nvidia? Dont t	Now what? FreeBSD and Nvidia? Dont threaten me with a good time. FreeBSD is so clean that i would love to build a sleek custom variant even if just for my own use, but i need graphics drivers. A “proper” nvidia driver would be amazing.	gumballindie	9.888336	-5.6722527	comment	3.0	22.0	1692663660	10.609791
37217794	"NVIDIA does have ""official"" freebsd "	"NVIDIA does have ""official"" freebsd drivers (including display drivers/etc) but it's obviously not as easy as with AMD.  I've never tried using NVIDIA (or graphics at all) on freebsd tbh and I don't know whether the experience works well or not.I do know there is no nvenc though oddly.  because that's built around linux APIs too lol.but yeah freebsd is pleasantly uneventful and well-documented, and the handbook tells you like 90% of the sysadmin job too.  and it's well-integrated with zfs and time-tested.it's a shame that docker is built around linux, that's where all the inertia is these days."	paulmd	9.913193	-5.655112	comment	3.0	14.0	1692670360	10.59217
37219260	Using the legacy ARM ISA. Unfortunat	Using the legacy ARM ISA. Unfortunate.	snvzz	9.554755	-5.42596	comment	3.0	10.0	1692684777	-7.7415977
37228571	I think it's a little unfair to attr	I think it's a little unfair to attribute it to Microsoft and MSN Messenger as it was a concept that originated on Japanese phones AFAIK.Also Microsoft's emojis are currently the worst by a mile out of the big tech companies.	baz00	9.869811	-6.238763	comment	3.0	23.0	1692738646	-13.969668
37228674	That first paragraph really put me o	"That first paragraph really put me off the article to be honest. Why read an article on emoji by someone who doesn't know what emoji are?At the same time, I do realise ""emoji"" is now often being used as a generic term that encompasses both true emoji (unicode-based) and general emoticon images."	Nition	9.800736	-6.264504	comment	3.0	16.0	1692739212	-13.95799
37232429	Emojis are used mostly in 2 ways: pu	Emojis are used mostly in 2 ways: punctuating a sentence so that it’s tone is less ambiguous. A shortcut for an emotional state that is not dissimilar to writing “haha” “ew” or “meh”.As a IRC-chatting teenager in the mid-90s, I am somewhat an expert in emoticons and can’t possibly imagine a world where emojis didn't exist.But I m surprised no one mentions the “!” or other stylistic tools like all caps. These are “contextual modifiers” for text that have existed for ages. Some languages do have sarcasm punctuation and possibly small adverbs that annotate some kind of emotional state.So basically yes, the article is right, emojis work mostly like words, but for me it’s just a continuation of what existed before (punctuation and onomatopoeia), and its extension and spread was made possible by	d--b	9.797708	-6.2606306	comment	3.0	16.0	1692771565	-13.960732
37246937	Just for comparison the Acorn Archim	"Just for comparison the Acorn Archimedes launched in 1987 with Arthur OS (later to become Risc OS) with a full windowed desktop with overlapping windows etc. They were able to pull this off because they had designed a new processor that they called the ""Acorn RISC Machine""*Screenshot of 1987 desktop here: https://en.wikipedia.org/wiki/History_of_RISC_OS#/media/File...https://en.wikipedia.org/wiki/History_of_RISC_OS* ARM for short, you might have heard of it"	tempaway43355	9.622619	-5.21149	comment	3.0	11.0	1692870717	-7.8697166
37253137	Appreciate the feedback! I'm the aut	Appreciate the feedback! I'm the author here (Christal)...unfortunately I definitely have ADHD!Many of our members and team need the emojis for the visual relation but I definitely see your point. I will tone down the emojis and make the newsletter show up only at the end of the article. I'll also send this to a content editor for the confusing wordings, etc.! If there are any specific examples, don't hesitate to let me know.	christalwang	9.7922	-6.2592225	comment	3.0	14.0	1692903730	-13.945382
37265231	> Get rid of the emojis.found only 1	"> Get rid of the emojis.found only 1 emoji.> ""Hi mom (very dead; very sad)"" is completely inappropriate.that's pretty bad ... actually, i would assume mental problems just from reading this. [1]1: https://en.wikipedia.org/wiki/Clanging"	2-718-281-828	9.82305	-6.2650623	comment	3.0	11.0	1692987427	-13.96038
37277921	No, threadrippers[0] are commonly us	No, threadrippers[0] are commonly used by people working in large compiled codebases. They're expensive, sure, but not incomparable to a top of the range Macbook Pro.[0] https://www.cpubenchmark.net/cpu.php?cpu=AMD+Ryzen+Threadrip...	maccard	9.368013	-5.2603536	comment	3.0	12.0	1693093157	8.013307
37281529	I mean to not have 32 bit support by	I mean to not have 32 bit support by default makes sense. It wastes disk space for nothing. On ArchLinux for example to have 32 bit support you have to enable the multilib repo, that makes sense because in most installations you don't need it.Plus 32 bit software can still run if it's stacically linked or run inside a container. The only thing that doens't ship is the dynamic libraries for 32 bit executables to run.	alerighi	9.877852	-5.2873087	comment	3.0	11.0	1693135349	-7.9225974
37281923	> Plenty of other pieces of software	> Plenty of other pieces of software such as WINE only work when 32-bit libraries are installed on a 64-bit system.Funny to mention Wine specifically; they're implementing a more sophisticated Wine-on-Wine64 setup that, among other things, will make having 32-bit system libs unnecessary, through the power of Heaven's Gate, not unlike how Windows handles syscalls in real WoW64.(As far as I understand it, Linux, having a stable syscall interface, just supports the old software interrupts for 32-bit syscalls, making this unnecessary. In fact, they seem to even work from a 64-bit process to some degree.)	jchw	9.9116955	-5.21887	comment	3.0	30.0	1693138670	-8.046887
37282038	It’s the name of the compilation tar	It’s the name of the compilation target architecture in the compiler. Unless the architecture changes, the name doesn’t change. i386 refers to Intel 32-bit, which was superseded by x86_64	fingerlocks	9.65385	-5.4086404	comment	3.0	15.0	1693139538	-7.798363
37286271	"The term to search for is ""heaven's "	"The term to search for is ""heaven's gate"". TL;DR: Intel processors can, in usermode, switch between 32-bit and 64-bit mode.Note that the concept of a process is irrelevant: processes don't exist to Intel processors. There was a concept called a ""task"" early on in I believe the 286 line, but nowadays all OSes just set up a single task segment on the CPU and do all of the context switching via other means, because it simply wound up being faster anyway. The processor just has tons of registers that you can flip around, and being able to switch between protected mode and long mode is a property of the code segment currently being executed (IIRC) which is something you can jump between in usermode using a far call. (And this is, as far as I know, just about the only way in which x86 segments r"	jchw	9.754406	-5.4565706	comment	3.0	11.0	1693167531	-7.685665
37293643	It feels like the FPGA market probab	It feels like the FPGA market probably has this covered, although I appreciate that it's a bit like using a hammer to open an egg.Is there a modern equivalent to the ULA, or do low-end FPGAs handle this sort of thing?	b800h	9.10398	-5.358241	comment	3.0	11.0	1693229397	8.328628
37308128	Have you built anything comparable? 	Have you built anything comparable? It's in alpha, making performance/presentation comments seems really out of place. If you were well-informed on the project, you would know that they intentionally put performance optimizations on the backburner, because optimizing tech they intended to replace is not a good use of time.Besides, in the last 6 months performance has drastically improved, as anyone that actually plays will tell you. I play regularly, do a variety of delivery/bounty/mining/recovery missions, explore planets/stations, have funny interactions surrounding all of that with other players, etc. Rome wasn't built in a day.	meesles	9.307064	-5.191351	comment	3.0	18.0	1693317883	7.7863035
37317165	"Marvell made an SMT8 ARM CPU with ""7"	"Marvell made an SMT8 ARM CPU with ""768 Threads Per Node""https://www.servethehome.com/marvell-thunderx3-arm-server-cp...IIRC it was targeted at database workloads, and the pitch was the same: if the core is usually twiddling its thumbs waiting on RAM, it might as well work on another thread in the meantime.And I guess IBM and Zen4C kinda fufill this demand, but more SMT16 cloud instances explicity targeted at these low IPC loads would be neat."	brucethemoose2	9.565731	-5.3331842	comment	3.0	13.0	1693364726	8.02983
37318495	64 of the 66 treads are slow threads	64 of the 66 treads are slow threads where each group of 16 threads shares one set of execution units and all 64 threads share a scratchpad memory and the caches.This part of each core is very similar to the existing GPUs.What is different in this experimental Intel CPU and unlike in any previous GPU or CPU, is that each core, besides the GPU-like part, also includes 2 very fast threads, with out-of-order execution and a much higher clock frequency than the slow threads. Each of the 2 fast threads has its own non-shared execution units.Separately, the 2 fast threads and the 64 slow threads are very similar with older CPUs or GPUs, but their combination into a single core with shared scratchpad memory and cache memories is novel.	adrian_b	9.506014	-5.311378	comment	3.0	20.0	1693377895	7.969942
37318973	So this is a processor where you wou	So this is a processor where you would have 97% of the threads doing some I/O like task? But that can't be disk I/O, so that would leave networking?	tgv	9.79552	-5.392205	comment	3.0	15.0	1693382521	8.072207
37339990	> It's based on GBADoomI wonder why.	> It's based on GBADoomI wonder why. The GBA has a 32-bit ARM processor.	jonny_eh	9.645163	-5.2353396	comment	3.0	12.0	1693500135	-7.7874255
37348535	Hopefully soon they'll start using R	Hopefully soon they'll start using RISC-V in place of ARM.Samsung has been quite active in RISC-V lately.	snvzz	9.403099	-5.6279	comment	3.0	13.0	1693560143	-10.565744
37352233	I highly doubt it was the case,and f	"I highly doubt it was the case,and follow-ups should have cleared a few things and not a straight uncompensated handover, especially to someone who keynoted your conferences.
In light of IPO, most likely the corporation wanted to kill any lose ends and it results in a PR disaster which eventually won't have any impacts. So for arm, it's a win win.Funny things, they registered a riscv domain in the past to bad mouth RISC."	Foobar8568	9.3358	-5.4587035	comment	3.0	16.0	1693582895	-10.545563
37352674	Funny things, they registered a risc	Funny things, they registered a riscv domain in the past to bad mouth RISC.Who are you referring to here? It's sorta confusing.	anigbrowl	9.37459	-5.700308	comment	3.0	11.0	1693584788	-10.595949
37356877	The V1 is part of the first wave of 	The V1 is part of the first wave of very high performance RISC-V processors, which is imminent.RISC-V enables the best processors.	snvzz	9.38849	-5.6501837	comment	3.0	17.0	1693607888	-10.529318
37361745	I really wish we’d just get in-band 	I really wish we’d just get in-band ECC on normal consumer platforms. That way we’d need no special DIMMs, in applications where ECC was desired it could be enabled and the capacity penalty would be paid, in other applications it could be disabled and no capacity would be lost.	bpye	9.459517	-5.510292	comment	3.0	14.0	1693664280	8.199767
37361823	Oh yes, I understand that. I only wi	Oh yes, I understand that. I only wish that ECC support in general starts getting more traction in consumer electronics. Nowadays (unless you go to super noisy super expensive server hardware) maybe with an AMD processor maybe a motherboard manufacturer will have a 20-links-deep document that says that these ECC modules may be supported, proceed at your own risk, might set your flat on fire, kill kittens etc. When you had a couple of gigs of ram it was probably irrelevant but if you have multiple TB of RAM caching file access ECC should become normalised.	spystath	9.462865	-5.5028753	comment	3.0	14.0	1693664883	8.24275
37377803	> An insane programmer can set LMUL 	> An insane programmer can set LMUL to a value higher than 1, making vector instructions address contiguous blocks of registers.I hope that most code won't use LMUL=1, but LMUL>=1 when possible, otherwise we'd leave performance on the table.The only case I can currently fore see where using LMUL=1 and manually unrolling instead will likely be always beneficial is vrgather operations that don't need to cross between registers in a register group (e.g. byte swapping).> As with all new architectural features, we’ll have to wait and see how useful RISC-V’s LMUL will be.RVV without LMUL would be a lot worse, the entire extension is build around the LMUL concept and it's really nice to work with imo.	camel-cdr	9.532861	-5.815055	comment	3.0	20.0	1693810044	-10.500789
37381434	> But Arm have made a decent busines	> But Arm have made a decent businessARM is  making peanuts compared pretty much all the companies that actually make high-end chips. Their IP seems to be worth much more than the business.	qwytw	9.525705	-5.1916695	comment	3.0	15.0	1693841409	-7.6235137
37382095	If RISC-V is just their platform to 	If RISC-V is just their platform to provide a different company to license IP from, I'm just sticking to Arm.RISC-V is only interesting as a platform for a different business model.	Fordec	9.380687	-5.6690545	comment	3.0	22.0	1693845331	-10.575245
37383470	>Don't expect RISV-V to directly com	>Don't expect RISV-V to directly compete with Intel/AMD on the high end for at least another decadeActually 2024.SiFive P870, Tenstorrent Ascalon, SOPHON SG2044, Ventana Veyron, and more.	snvzz	9.361057	-5.6157494	comment	3.0	25.0	1693852696	-10.577739
37397967	Can somebody explain why a square ro	Can somebody explain why a square root is also considered a flop? Surely that involves more work than the other four operations the article listed. Is there some hardware algorithm for the square root that is as fast as (e.g.) division?	MattyDub	9.610523	-5.19065	comment	3.0	12.0	1693949121	8.618418
37402097	Patience.  RISC-V is an unstoppable 	Patience.  RISC-V is an unstoppable freight train but it isn’t yet up to speed.RISC-V is not yet ready for the high end needs that Apple has.  RISC-V doesn't yet have the single core performance nor the ability to scale to many cores like ARM does -- or at least I haven't seen it.I think that when RISC-V can do this and is competitive with ARM, Apple could look at it.  Apple isn't married to ARM forever, remember it used to be Motorola, then IBM PowerPC, then Intel x86 and now ARM.Given that Apple just did the transition to ARM, I do not expect they will look around for the ARM successor for a while.  But a decade from now it wouldn't be surprising for them to consider RISC-V, at that point its capabilities should rival ARM if not exceed it while also being much more easily customized.	bhouston	9.408101	-5.599547	comment	3.0	11.0	1693983854	-10.536323
37427707	Incredible work; I’ve cut down my co	Incredible work; I’ve cut down my config immensely by deleting external packages, using built-ins as much as possible, and emacs gives you a lot more out of the box now.That said, magit is the star of the show.	ljm	8.886215	-6.421312	comment	3.0	12.0	1694133231	-11.413358
37434950	"It produces some ""interesting"" resul"	"It produces some ""interesting"" results. I put in ""robber"" expecting that one emoji everybody thinks exists but doesnt, and I got a black guy with a white beanie/hat.Apart from that it produces insanely convincing results. I believe people would not bat an eye if they'd get added in an update to iOS!"	ghosty141	9.798886	-6.2631416	comment	3.0	31.0	1694187323	-13.926327
37436585	As others have pointed out it tends 	As others have pointed out it tends to associate some professions with specific races. And crime related emojis with black people. It's a Stable Diffusion issue.	lawlessone	9.771678	-6.276906	comment	3.0	12.0	1694193989	10.623493
37441654	> elegance mattersabsolutely, but no	> elegance mattersabsolutely, but no need for strong violence. ANSI C and RISC-V are doing fine.> x86-64 which is not dyingtrue. technically speaking, it is long gone - any Intel CPU since about Pentium Pro is actually a well-hidden RISC, because it is more efficient. Sure that requires a pretty beefy CISC decoder in front, but the sheer power of having a virtual 8086 mode next to amd64 must totally justify all that extra TDP.> [x86 is] something students can run on real hardware, and that's cool and engagingalso true, but nothing compares to booting the real xv6 on a real RISC-V system for the first time, which is easy and fun (and cheap, if we’re talking value). i recommend.	kelas	9.480434	-5.6089854	comment	3.0	25.0	1694226817	-10.498902
37449478	Do I understand ARM's business?They 	Do I understand ARM's business?They rely on people wanting to design their own ~~ships~~ chipsSo if we assume that their ecosystem is healthly and mature at this moment,then there's potential that customers wanting to design their own stuff will go to them.So until RISC-V matures, then they'll be making profits, yup?But is there growth potential? Are companies really interested in designing their own chips except a few startups that already license from them and probably google/amazon/whatever that need highly specialized chips, but already license from them?What I'm missing?	tester756	9.418717	-5.489719	comment	3.0	11.0	1694288305	-10.529146
37460614	RISC-V SBI and the full boot process	RISC-V SBI and the full boot process	snvzz	9.444638	-5.649438	story	3.0	120.0	1694383809	-10.545628
37460995	Also the RISC-V ABI requires that th	Also the RISC-V ABI requires that the initial code passes a pointer to a minimal device tree to OpenSBI - this means it can tell it where the UART is, how many CPUs to expect, where the interrupt controllers are (and what type they are) etc etc - this can then be passed on to uboot/uefi/linux or overridden or edited as they like	Taniwha	9.482518	-5.667418	comment	3.0	24.0	1694387145	-10.54005
37466742	Linux 6.6 Enables Tracking Per-CPU C	Linux 6.6 Enables Tracking Per-CPU Cgroup CPU Usage Stats	mfiguiere	9.764113	-5.404785	story	3.0	55.0	1694437944	7.9654765
37467203	Interesting, but what is the use cas	Interesting, but what is the use case for tracking which CPUs your programs are using?	sp332	9.80661	-5.3958917	comment	3.0	18.0	1694440070	7.874626
37475926	If there was always (or, let's be ho	If there was always (or, let's be honest, ever) time and resources to test every branch, then that would be a fair comparison.	Arainach	9.92261	-6.422138	comment	3.0	13.0	1694481820	-11.647229
37483973	The only part of the Earthly pitch t	The only part of the Earthly pitch that resonated with me was the ability to run the CI locally.  When debugging your CI, it is just faster to find problems when you can run on your own box.I have a gnarly GitHub Actions script that took forever to get right because the debug cycle was 10 minutes long.	jnwatson	9.053738	-6.3946466	comment	3.0	10.0	1694537066	6.2820315
37494682	I prefer Noto Emoji: https://emojipe	I prefer Noto Emoji: https://emojipedia.org/googleimo the best ones are on Apple, and I'm saying this as an android user which happens to use Signal (which uses the apple emojis)	techn00	9.798785	-6.2599816	comment	3.0	18.0	1694599592	-13.973876
37496193	I will die on the hill that the blob	I will die on the hill that the blobs were the best emoji and Google should have never gotten rid of them.	dustincoates	9.8047085	-6.2620764	comment	3.0	11.0	1694610122	-13.963315
37509987	> where as if you go RISC-V, you are	> where as if you go RISC-V, you are free to switch CPU providers.Idk, this really isn't as true as you'd think. Yes RISC-V is an open and free ISA which will cut out some fees, but you'd still have to license IP/chip designs (if you can't make your own) and they could only undercut ARM by a little bit. Further, the lack of mobility across chips/boards/whatever is not usually from the ISA, but from the BSP, SDK, etc. so you still would have substantial lockin unless we somehow standardize on that (lol)	packetlost	9.426693	-5.607938	comment	3.0	29.0	1694703819	-10.569138
37516141	Blame the Linus Torvalds personality	Blame the Linus Torvalds personality cult. Only way that terrible UX got traction in the first place. If anyone OTHER than Linus had written it, it would have been mocked, and deservedly so.	TylerE	9.293577	-5.884369	comment	3.0	15.0	1694733885	4.276854
37516697	That's not the same thing. An instru	That's not the same thing. An instruction set is an inherent aspect of a CPU; you can't have a CPU without one. Also, you can emulate or translate instruction sets between general-purpose CPUs, or in most cases just recompile the higher-level source code. The underlying logic will be executed regardless.	gary_0	9.719712	-5.644686	comment	3.0	11.0	1694738230	-7.5927258
37523213	So, they are at 7 and want to go thr	So, they are at 7 and want to go through 3 process nodes in 2 years? Good luck, no one ever pulled that off.	KptMarchewa	9.612163	-5.3093624	comment	3.0	11.0	1694787025	7.4063873
37523353	Looks like it was made possible by t	"Looks like it was made possible by the Pico's PIO assembly/chip
https://github.com/mackieks/MaplePad/blob/main/src/maple.pioThe cycle accurate assembly language has enabled a number of timing sensitive FIFO data processes. What had to be done with FPGA's before has some limited support with PIO. I hope RPI increases the number of instructions and simultaneous running PIO machines in the future."	devwastaken	9.117283	-5.185402	comment	3.0	10.0	1694787573	8.32632
37548402	Running Linux on Xilinx / AMD FPGA S	Running Linux on Xilinx / AMD FPGA Softcore Example Design	signalhound	9.143342	-5.3294497	story	3.0	54.0	1694978194	8.167607
37550164	Anyone into current FPGA hardware ca	"Anyone into current FPGA hardware care to comment on the significant
drop in cost and complexity for the average electronics ""hobbyist"" to
get a custom Linux SBC up and running with recent advances?Is anything like a Raspberry Pi 1 (one core) feasible.I am thinking of cybersecurity solutions that give complete
transparency of every gate and byte of firmware, no blobs or mystery
chips."	nonrandomstring	9.17557	-5.3120766	comment	3.0	12.0	1694991411	8.063059
37553748	> It's a dumb post, to the point I t	"> It's a dumb post, to the point I think it must be a deliberate troll.Lol, I'd like to send this to DJ Bernstein, let him know that random Internet commenter thinks that one of his most well-known essays ""must be a deliberate troll."" Glad HN doesn't support emojis, not enough facepalms it the world for this one."	hn_throwaway_99	9.80404	-6.2619424	comment	3.0	10.0	1695026670	13.021324
37571045	Ok the claim is the CPU was compromi	Ok the claim is the CPU was compromised and they were using ARM based tech. Is then ARM compromised? Cavium is now Marvell Technology.	belter	9.452621	-5.188889	comment	3.0	10.0	1695136293	7.7404685
35103638	So when I run “uname -m” on Mac it s	So when I run “uname -m” on Mac it says “arm64”, but running it in a docker container on the Mac it says “aarch64”. Doesn’t seem like everybody is in agreement.	zeroimpl	9.605744	-5.895087	comment	3.0	18.0	1678495606	10.042557
35115683	Do ARM processors have a similar mec	Do ARM processors have a similar mechanism?Edit: Yes, it's called TrustZone.https://en.wikipedia.org/wiki/ARM_architecture_family#Securi...	metadat	9.62797	-5.2326846	comment	3.0	18.0	1678587542	7.9286027
35124055	Reverse-engineering the register cod	Reverse-engineering the register codes for the 8086 processor's microcode	wglb	9.678663	-5.5245104	story	3.0	73.0	1678645469	-7.3946257
35124400	I'm following the instructions on th	I'm following the instructions on the post from the original owner of the repository involved here. It's at https://til.simonwillison.net/llms/llama-7b-m2 and it is much simpler. (no affiliation with author)I'm currently running the 65B model just fine. It is a rather surreal experience, a ghost in my shell indeed.As an aside, I'm seeing an interesting behaviour on the `-t` threads flag. I originally expected that this was similar to `make -j` flag where it controls the number of parallel threads but the total computation done would be the same. What I'm seeing is that this seems to change the fidelity of the output. At `-t 8` it has the fastest output presumably since that is the number of performance cores my M2 Max has. But up to `-t 12` the output fidelity increases, even though the ou	rolleiflex	9.589445	-5.23005	comment	3.0	11.0	1678646799	7.78317
35126049	The concept of microcode is fairly o	The concept of microcode is fairly old. It was present at least as far back as the IBM 360 (1964), so it predates microprocessors.One big motivating factor for microcode is that it insulates the Instruction Set Architecture (ISA) from its actual implementation in hardware. That makes it a lot easier to be forward/backwards compatible.Without microcode, you have a situation where every generation of processor, and even different implementations of a microprocessor will have different internal resources and circuits. You need to be able to control things inside the processor like the flow of data between registers, ALU(s) and the memory bus... But for each processor implementation, the available connections and execution units are going to be different. Microcode allows you not to expose all	snek_case	9.577556	-5.4740043	comment	3.0	15.0	1678654063	7.7061777
35125300	The fixed-width microcode instructio	The fixed-width microcode instructions with 5-bit register fields is very reminiscent of a classic RISC. It looks like the concept of breaking down instructions into RISC-like uops into was there since the beginning, but Intel only started marketing it that way with the Pentium.It's worth noting that, had the mapping from segment registers to internal register numbers included i5, it would've been possible to access several of the other internal registers with undocumented instructions.	userbinator	9.651465	-5.5536165	comment	3.0	20.0	1678650658	-7.4732165
35129962	Did we ever see a definitive rationa	Did we ever see a definitive rationale for ending consumer grade Threadripper? I’ve always wondered if sales were simply cannibalized by the growing thread counts in Ryzen. A sort of Innovator’s Dilemma, except with more vocally unhappy consumers.	ip26	9.333802	-5.225354	comment	3.0	11.0	1678673704	8.005576
35159687	>NXP i.MX8M Plus>Cortex-A53The SoC u	>NXP i.MX8M Plus>Cortex-A53The SoC uses a microarchitecture that implements the legacy proprietary ISA (ARM), yet is much slower than the RISC-V SiFive U74, which is already available in SoCs such as the JH7110 used in VisionFive 2.Sad choice in 2023. I'll be skipping this otherwise appealing device. Maybe a future cpu module will be based on a SoC based on the open standard ISA.	snvzz	9.397215	-5.4884644	comment	3.0	13.0	1678831719	7.7711396
35162902	Yeah, this is probably also true for	Yeah, this is probably also true for TSMC, Intel and ARM.  Look how slow progress is on RISC-V on the high end despite RISC-V having the best academic talent.	PaulHoule	9.40878	-5.653829	comment	3.0	16.0	1678846882	-10.593867
28996853	And arm-windows will (does already?)	And arm-windows will (does already?) run x86 binaries with weaker memory ordering than they were written for. So this could be a real thing soon.	im3w1l	9.78919	-5.3967566	comment	3.0	27.0	1635227439	-7.7860384
28996956	Heh, 10 years ago I gave a presentat	Heh, 10 years ago I gave a presentation about how easy folks used to x86 can trip up when dealing with ARM's weaker memory model. My demonstration then was with a naive implementation of Peterson's algorithm.[1]I have a feeling that we will see a sharp rise of stories like this, now that ARM finds itself in more places which were previously mostly occupied by x86, and all the subtle race conditions that x86's memory model forgave actually start failing, in equally subtle ways.[1] The conclusion for this particular audience was: Don't try to avoid synchronization primitives, or even invent your own. They were not system level nor high perf code programmers, so they had that luxury.	anyfoo	9.725548	-5.4962993	comment	3.0	34.0	1635228455	-7.7401114
28997318	"""Fully parallelized workloads in a c"	"""Fully parallelized workloads in a consumer laptop are just exceedingly rare.""Really? I've observed these kind of consumer workloads getting more and more common in recent years. In any case I wouldn't call them exceedingly rare."	vardump	9.741511	-5.3684034	comment	3.0	12.0	1635232377	8.128177
28999846	I doubt that. The number of ARM proc	I doubt that. The number of ARM processors is far greater in reality than in x86 if we clarify it by saying “in operation” rather than historically and these stories will  become more common but certainly won't see a “sharp increase”.	stjohnswarts	9.612925	-5.240179	comment	3.0	14.0	1635253380	-7.6824656
29005277	This chip looks similar to the F1C10	This chip looks similar to the F1C100s that was used in the $3 Linux business card: https://www.thirtythreeforty.net/posts/2019/12/my-business-c...By switching to RISC-V I guess Allwinner can save a few cents of Arm license fees.	wmf	9.402848	-5.616669	comment	3.0	27.0	1635277246	-10.524671
29005308	That's not much DRAM, but consider t	That's not much DRAM, but consider that the Funkey S (https://www.kickstarter.com/projects/squonk/funkey-s-the-wor...) uses the Allwinner V3s (32b ARMv7-a) with 64MB DDR2 DRAM.	ndesaulniers	9.731287	-5.3125224	comment	3.0	10.0	1635277366	8.003535
29014369	I don't think it is a fair compariso	I don't think it is a fair comparison: the first benchmark was done on a AMD processor. Considering that Threadripper is more similar to a mini cluster than the intel option, it probably favors linux more.	marcodiego	9.684321	-5.2843556	comment	3.0	16.0	1635347543	7.8358326
29035242	First Flight of Kestrel, the FPGA Op	First Flight of Kestrel, the FPGA OpenPOWER-Based BMC, and Arctic Tern	classichasclass	9.095922	-5.341618	story	3.0	66.0	1635482522	8.280857
29108815	It's odd, because in today's review,	It's odd, because in today's review, they have this to say:> I have to say a side word about AVX-512 support, because we found it. If you’re prepared to disable the E-cores, and use specific motherboards, it works. After Intel spent time saying it was fused off, we dug into the story and found it still works for those that need it. It’s going to be interesting to hear how this feature will be discussed by Intel in future.There's a whole page on it:https://www.anandtech.com/show/17047/the-intel-12th-gen-core...	neogodless	9.433173	-5.504673	comment	3.0	12.0	1636041716	8.037948
29111401	When x87+MMX were added, existing pr	When x87+MMX were added, existing programs ran unchanged. When x86-64 doubled the register sets, many existing programs ran unchanged (some features were dropped). Compatibility was largely maintained. That compatibility was what AMD wagged in Intel's face when Intel was trying to pivot to Itanium. Intel had to then take the walk of shame and adopt AMD's approach.Seriously, Intel took a long view towards this. x87 was a wart on the side of mole and still its unholy marriage with MMX (they shared a register set) allowed existing programs to run while creating a compatibility barrier to competitors. Competitors had to be compatible and bug compatible. The guy tasked with doing this at Transmeta almost had a nervous breakdown, not from compatibility (easy) but from bug compatibility.IBM 360 p	CalChris	9.596265	-5.3246	comment	3.0	11.0	1636053530	7.8658233
29127836	Out of curiosity, How did you know h	Out of curiosity, How did you know how many clock cycles your rendering code took?	andrewjf	9.615144	-5.2478676	comment	3.0	27.0	1636177533	7.435625
29141377	The announce of open-sourcing the RI	The announce of open-sourcing the RISC-V cores on which they have worked until last year was simultaneous with the announcement of a high performance server CPU using the latest ARMv9 cores, to be used in their data centers.So, yes, I would guess that after playing with RISC-V for a couple of years they have switched to ARMv9 for the real thing.One of the cores that have been open-sourced now was in 2020 the fastest RISC-V core ever designed, but for the best performance they had to correct a blatant omission in the RISC-V ISA and add a custom extension for indexed addressing.	adrian_b	9.4088545	-5.630422	comment	3.0	10.0	1636305693	-10.590203
29143487	Docker is hopelessly broken on the I	Docker is hopelessly broken on the Intel Macs, and from what I’ve heard it’s certainly not any worse on the M1 Macs.	tshaddox	9.560349	-6.4084783	comment	3.0	12.0	1636318989	10.047794
29174777	Disabling the E-cores apparently act	Disabling the E-cores apparently activates AVX-512. So it was planned and engineered to be there all along, but was disabled to match the marketing talking points. [https://www.phoronix.com/vr.php?view=30664]	halz	9.468715	-5.4335175	comment	3.0	20.0	1636553389	8.089111
29174910	>> Zen4 has been widely rumored* to 	>> Zen4 has been widely rumored* to support AVX-512.I've been hoping AVX-512 goes away. Intel doesn't even seem to be embracing it very well, probably due to the huge increase in power consumption.I look forward to RISC-V Vectors, which allow scaling the hardware without changing the instruction set.	phkahler	9.299664	-5.339796	comment	3.0	11.0	1636554219	7.9882126
29174716	Is Intel planning to release future 	Is Intel planning to release future CPUs with AVX-512? Didn't they remove it from Adler Lake?	rbanffy	9.414374	-5.4586377	comment	3.0	24.0	1636553072	8.106647
29177949	Not what you were offering so feel f	Not what you were offering so feel free to ignore this, but I'm super curious about RISC-V.  Do you know if any serious attempts are happening to make RISC-V based systems?  And if not, do you know why?  Is it too raw/un-polished?	freedomben	9.381418	-5.672225	comment	3.0	12.0	1636567490	-10.569374
29198514	> with all its amazing architectures	> with all its amazing architectures. SPARC, Alpha, MIPS, PA-RISC, PowerPCAnd here's the thing, mostly they weren't amazing. They were just expensive and not popular. But some things like SPARC were just headache-inducinghttps://atiqcs.wordpress.com/2016/11/15/sparc-register-windo...	raverbashing	9.770175	-5.5597568	comment	3.0	12.0	1636718906	-10.181068
29200849	I've been thinking along similar lin	I've been thinking along similar lines, and also wondering what percentage of workloads still see significant benefits from SMT. It made a lot more sense in 2002 when it was still common to find servers with only one core but now even a phone has half a dozen cores and laptops are pushing into the tens of cores range while servers are pushing an order of magnitude greater.I remember disabling SMT in the mid-2000s because it was a performance degradation for some memory-sensitive code one of my users was running. I'd be really curious what percentage of workloads are not limited by I/O but still stay below the level where resource contention between threads lowers performance.	acdha	9.593715	-5.331871	comment	3.0	22.0	1636733654	8.029885
29202579	AMD did deliver the killing blow to 	AMD did deliver the killing blow to Sun. At least in the company I worked by then, they were all firmly Sun for the large compute servers until the Opteron arrived. PCs were nice as desktop machines, but large servers with multiple CPUs and lots of gigabytes of RAM were not feasible on x86 until the arrival of the Opterons. Eventually they would replace all Sparc based compute servers.	_ph_	9.350212	-5.199583	comment	3.0	11.0	1636740604	8.139183
29216320	The code has a CRC code embedded. Wh	The code has a CRC code embedded. Why is it that every article mentioning CRC codes brings up that you can write them as polynomials? AFAICT it never makes a difference in implementation. What am I missing?	superjan	9.895803	-5.5982647	comment	3.0	10.0	1636883965	-7.172906
29220396	Bifurcation has never been a thing o	Bifurcation has never been a thing on desktop platforms and even most entry-level (single socket, desktop-equivalent) servers don't support it. It seems to be reserved for HEDT and  real server platforms. (This is of course purely a market segmentation decision by Intel/AMD).	formerly_proven	9.388379	-5.2129436	comment	3.0	13.0	1636922051	7.7965207
29229497	Great work. Fascinating and depressi	"Great work. Fascinating and depressing at the same time. Like watching your house on fire, but not being able to avoid getting mesmerized by the beautiful flames and tones 
as your designer furniture burns away :-)""...Are there any DIMMs that are safe?We did not find any DIMMs that are completely safe. According to our data, some DIMMs are more vulnerable to our new Rowhammer patterns than others.Which implications do these new results have for me?Triggering bit flips has become more easy on current DDR4 devices, which facilitates attacks. As DRAM devices in the wild cannot be updated, they will remain vulnerable for many years.How can I check whether my DRAM is vulnerable?The code of our Blacksmith Rowhammer fuzzer, which you can use to assess your DRAM device for bit flips, is available "	belter	9.653001	-5.6115675	comment	3.0	13.0	1636995284	-13.889734
29229889	Rowhammer is still pretty hard to ex	Rowhammer is still pretty hard to exploit because typically you can't reliably flip most bits, and you can normally only flip bits that are very close in physical memory address to those you control.Combine that with a lack of knowledge of physical memory addresses and inability to have much control over memory layouts, and it really gets tricky to gain privileges outside a lab environment in a reasonable short time.Remember that flipping bits at random will almost certainly kernel panic the machine before it gives you root access.I'm sure a determined attacker could do it though.	londons_explore	9.643807	-5.6545396	comment	3.0	10.0	1636997184	-13.896638
29232186	Luckily all DDR5 DIMMs will have on-	Luckily all DDR5 DIMMs will have on-chip ECC. My understanding is it's not a complete mitigation but does make exploitation harder.	arcticbull	9.499342	-5.4725275	comment	3.0	28.0	1637007660	8.159885
29232979	> My understanding is it's not a com	"> My understanding is it's not a complete mitigation but does make exploitation harder.It won't.  It's designed to counter silicon limitations to increased density, i.e. it's made to correct the errors that result from packing cells beyond the limit of error-free operation.The extra redundancy from on-chip ECC is intended to be ""consumed"" by the chip itself, and since this will allow optimizing chip manufacture to denser and cheaper, it's no question at all that it will get pushed to the very limit.There's still ""classic"" ECC for DDR5.  8 bits mapped to 9, terminated at the CPU which can look at things.  That's what I want, need, and will buy.P.S.: Shame on Intel for still walling off desktop CPUs from ECC.  https://ark.intel.com/content/www/us/en/ark/search/featurefi..."	eqvinox	9.48447	-5.481615	comment	3.0	21.0	1637011557	8.144563
29233856	It would be so much easier if the RA	It would be so much easier if the RAM just got moved onto the CPU.  As chips get more dense and NAND becomes cheaper, I could see rowhammer-susceptible DRAM just going away completely for many forms of computing.	Andys	9.685826	-5.5190144	comment	3.0	10.0	1637015949	-13.891977
29252452	> See the latest video from Linus Te	> See the latest video from Linus Tech Tips on Linux, for example.lol. The OS told Linus exactly what it would do, warned him it might not be what he intended in ALL CAPS, and made him type a full sentence (with an exclamation point!) confirming that it was really what he wanted. And then it did exactly what it told him it would do.That there was a dependency conflict for a short time there (less than an hour) is a legitimate annoyance. But developers should not be troubled by the fact that an operating system is actually obedient, or that its warnings actually mean something.	pxc	9.384964	-5.8139787	comment	3.0	16.0	1637154182	4.204323
29255619	I understand what a feature branch i	I understand what a feature branch is. I don't understand why I'd need a branch to add an emoji.I assumed that a 'reactions' branch might be a branch that addresses issues in the original PR, but even if it was, why would I need a new branch for that?	secondcoming	9.76875	-6.2850976	comment	3.0	10.0	1637168492	-13.977715
29254508	I can't stand that Linus PC guy with	I can't stand that Linus PC guy with his exaggerated faces on the thumbs.	riekus	9.290587	-5.880738	comment	3.0	13.0	1637163618	4.261964
29256325	Rich, rich analogy. SPECTRE and Melt	Rich, rich analogy. SPECTRE and Meltdown attacks for the mind have to be a thing, possibly as interrogation and cross examination techniques?	motohagiography	9.638134	-5.573977	comment	3.0	10.0	1637171429	7.7592835
29258165	"Not exactly – the ""Homer Simpson"" ye"	"Not exactly – the ""Homer Simpson"" yellow emoji came after the initial (Apple) emoji font, which just had all the humans looking white, with no other options."	cpmsmith	9.788357	-6.2632465	comment	3.0	12.0	1637179299	-13.949304
29262698	Especially considering how fucked Xi	Especially considering how fucked Xilinx and Altera customers are these days.  Now's the best possible time for competitors to hit the market hard.	CamperBob2	9.136766	-5.2935543	comment	3.0	19.0	1637217951	8.295169
29274328	“git grep” is pretty amazing for tra	“git grep” is pretty amazing for tracking things down.	devoutsalsa	8.861819	-6.38033	comment	3.0	16.0	1637302104	-11.058026
29282219	Vortex86 is just as interesting as t	Vortex86 is just as interesting as the WeeCee. Surely they must have an x86 licens, where did they get that? They don’t appear to have a license for AMD64, but could they get one?	mrweasel	9.60789	-5.2791076	comment	3.0	21.0	1637354751	-7.798798
29282646	> Vortex86 implements i586, which sh	> Vortex86 implements i586, which should surely be IP-unencumbered by now?Even if you go from the launch date and not the last errata, the i586 architecture is only 28 years old. In today's world of copyright, that's practically an infant.To be clear of most patents, you generally need at least thirty years, and copyrights are generally more than twice that number.You will probably require a license from Intel. (Though whether or not they care enough to enforce things is another matter entirely).	shakna	9.540551	-5.2492857	comment	3.0	17.0	1637356727	-7.724246
29286897	Huh? I've never updated my CPU micro	Huh? I've never updated my CPU microcode in other distros, nor did I receive warnings about it.Do you have a better example?	amelius	9.546613	-5.3322744	comment	3.0	35.0	1637404251	7.7424417
29287123	I guess that in their mind, they're 	I guess that in their mind, they're producing code for some utopic x86 system that does not have non-open microcode baked in, in which case their approach would be right.This is a complete denial of reality, of course, and at the cost of the user. Religious dogma, as you put it, seems like an apt description.	ckastner	9.718534	-5.510592	comment	3.0	62.0	1637407482	-7.3291807
29287336	Those people are already running arb	Those people are already running arbitrary binary code without the possibility to check what's inside, it's just that it was loaded before purchase. If you don't trust Intel's updates, then you also can't trust their CPUs in the first place.	marcan_42	9.628858	-5.240999	comment	3.0	14.0	1637409652	7.761445
29287885	Yeah. Then these geniuses get bitten	Yeah. Then these geniuses get bitten by Spectre/Meltdown because they were too scared of running the microcode update. For real.I agree, if that's the position of Guix, I don't want it in my machine.	raverbashing	9.664137	-5.52984	comment	3.0	23.0	1637415013	7.798898
29288408	Non sense. I trust my CPU provider o	Non sense. I trust my CPU provider or I wouldn’t have bought this CPU. I would much rather use an updated microcode than one known to be insecure. I wouldn’t check the microcode anyway and I don’t really trust the people who might more than the company providing my CPU.Sure it might contain code making me vulnerable to a state actor but that’s not a threat profile I care about.	WastingMyTime89	9.602785	-5.3886533	comment	3.0	39.0	1637418902	7.7402563
29292319	The PDP 11 was a 1970's machine. So 	The PDP 11 was a 1970's machine. So more like 20 years behind.	jacquesm	9.78281	-5.3563704	comment	3.0	13.0	1637446278	-7.5285664
29294734	How does it benefit Intel to keep re	How does it benefit Intel to keep reference designs confidential?	DaiPlusPlus	9.450358	-5.222387	comment	3.0	10.0	1637479207	-2.8781948
29303146	In fact, you could get a Talos II wi	In fact, you could get a Talos II with dual 22-core CPUs for a whopping 176 threads, even. Raptor has them in stock.	classichasclass	9.481168	-5.204656	comment	3.0	23.0	1637559489	7.946817
29303237	In a sense they are, because with th	In a sense they are, because with those core counts, you're comparing to Epyc and Xeon, which are similarly very expensive.What they're really missing is a midrange product for a midrange price. I can't blame them for avoiding the low end, but can't I get anything for less than $2000?	AnthonyMouse	9.360773	-5.1947627	comment	3.0	12.0	1637560364	7.8584127
29302578	Gelsinger ran VMWare into the ground	Gelsinger ran VMWare into the ground. These kind of moves don't bode any better for Intel.	atlgator	9.483219	-5.284112	comment	3.0	12.0	1637553781	7.740574
29305150	> The problem is that this can be ar	> The problem is that this can be arbitrary if the market doesn't supply enough competitors.What is this referring to? What is the problem? And why is this problem arbitrary?> It also tells me about the focus of Intel and who is in charge of the company. They have many flawed products lately and they seem to not want to compete on a technological level anymore.Ok, that's one take and you're certainly entitled to it. As someone who personally had to replace some hardware so I could use ecc ram in a zfs nas for my media server, I would have loved to just pay a few bucks to get a microcode update instead of a full hardware upgrade.Now, you can complain that ecc should be standard, etc but that's a different discussion. But it's classic economic theory: if Intel can charge some people more for	qeternity	9.41402	-5.4447665	comment	3.0	48.0	1637579438	8.145689
29306627	There's also a lot of funny combinat	There's also a lot of funny combinations that use three emoji, which you can't do with this page, if anyone's using Gboard already they should definitely give it a go :)	meibo	9.816075	-6.225916	comment	3.0	10.0	1637591380	12.9845295
29307009	Is ISA lock-in really an issue today	"Is ISA lock-in really an issue today?Porting most software to ARM64, Power, or RISC-V involves typing some variation of ""make."" Only a small percentage of software written in C/C++ or ASM is problematic. Anything in a higher level language like Go or a newer language like Rust is generally 100% portable.Switching from X86_64 to ARM64 (M1) for my desktop dev system was trivial.Endian-ness used to bite, but today virtually everything is little-endian above embedded. Power and some ARM support both modes but almost always run in little-endian mode (e.g. ppc64le)."	api	9.603416	-5.4714375	comment	3.0	14.0	1637593452	-7.785139
29307652	> Zero people in the real world avoi	> Zero people in the real world avoided using the Linux kernel because Linus was brusque.Actually, the best example of a project where the leadership of the project was so toxic as to drive away potential contributors would probably be glibc under Ulrich Drepper, which got so bad that most distributions abandoned glibc for the eglibc fork. (See https://lwn.net/Articles/488847/ for a high-level discussion).	jcranmer	9.416249	-5.847732	comment	3.0	10.0	1637596132	4.2194943
29313133	Renesas introduces sub 50 cents FPGA	Renesas introduces sub 50 cents FPGA family with Yosys-based development tools	Rochus	9.099521	-5.3558946	story	3.0	65.0	1637626051	8.4565935
29318403	Hi, virt engineer here.  Partly beca	Hi, virt engineer here.  Partly because it a very hard problem (in fact, theoretically impossible if you include timing attacks), but mainly because you don't need to emulate the hardware very accurately in order to get common operating systems to run.  Getting them to run is all that we're paid to do, and that's a difficult enough job already.One strange aspect of this is that only a narrow range of current OSes run under virtualization.  Qemu is great for running, say, current versions of Linux or Windows, but absolutely terrible if you try to run Linux 1.0 or Windows 95 or Solaris/x86 or any uncommon OS.  (I tried a few of these several years ago out of curiosity, and none of them would even boot.)  The reason is that we don't emulate enough of the corner cases in CPUs and devices to ru	rwmj	9.847276	-5.256901	comment	3.0	16.0	1637678965	-8.180873
29366895	This seems to be from 20 years ago, 	This seems to be from 20 years ago, the most recent citation was from 2000 and it describes a MIPS chip built on a 1998 process.	fivelessminutes	9.4701805	-5.4013963	comment	3.0	19.0	1638084261	-10.344865
29368638	CPU makers add so many complicated f	"CPU makers add so many complicated features to let users optimize their programs that it takes too much knowledge for mere mortals to optimize their programs - That you have to rely on heuristics and measures, as it is usually and wisely advised, is a bit unsatisfying. That's sort of ironic, in a way.I used to do assembly and count cycles, but now I wouldn't dare; it's hardcore compiler and library makers stuff. It's like ""don't do your own crypto (optimization)"".Everyone knows why it is so, though - we cannot solve the problem by throwing more Gigahertz at it."	astrobe_	9.887463	-5.654474	comment	3.0	12.0	1638105064	8.1150675
29385874	It's not emulating x86: it looks lik	It's not emulating x86: it looks like it's assembling instructions on the fly and  executing them in a mmap'd region. In other words, it's a very simple JIT.But you probably can run it on an M1 anyways, since Apple's Rosetta will do the dynamic binary translation for you under the hood. YMMV.	woodruffw	9.811059	-5.4165983	comment	3.0	37.0	1638223472	-7.720071
29390453	Talking about parallelization opport	Talking about parallelization opportunities is a bit pointless when you need 50 cores to match the performance of the single threaded code (in the best case, assuming perfect scaling).	gpderetta	9.753386	-5.5205903	comment	3.0	10.0	1638264912	8.1504135
29395264	A very satisfied user. As a (neo)vim	"A very satisfied user. As a (neo)vim user, I did suffer from magit envy but at the end, Lazygit takes care of all my needs. I prefer the UX (Just a personal preference).Kudos to the dev for the wonderful toolPS: There is also lazydocker by same person
https://github.com/jesseduffield/lazydocker"	ahurmazda	8.788421	-6.429949	comment	3.0	21.0	1638295319	-11.645194
29400632	I would love to see an open-source x	"I would love to see an open-source x86 Microcode (or x86 subset Microcode) which would enable a separate open-source RISC CPU (i.e., https://opencores.org/projects?expanded=Processor) to run x86 instructions, or a subset of x86 instructions...Perhaps the path to such an endeavor is simply taking an existing open-source FPGA RISC CPU (RISC-V would be a good choice) -- and then trying to implement a single x86 instruction in open-source Microcode, on it...Success?Well, then let's try another x86 instruction!  Eventually we'll have a few!If this or other x86 microcodes are copyrighted and/or patent-protected, what could occur is that a new microcode format (non-copyright or patent infringing) could be defined during this process...Also, an x86 subset FPGA ""Soft"" CPU -- would never be as fast "	peter_d_sherman	9.5040045	-5.4857464	comment	3.0	21.0	1638332492	-7.794755
29400714	I question the legality of this post	I question the legality of this post: I'm pretty sure the Intel microcode specification is proprietary. While it's hard to say with certainty since Intel makes their website as hard to navigate as humanly possible, I doubt they'd hand over their secret sauce to competitors.On one hand, the subject of microcode would benefit from more transparency. Indeed, there are papers describing microcode behavior (Citadel's gpu papers come to mind).With that said, I'm concerned that the authors are more interested in exploits, given they have a disassembler repo. While a disassembler alone doesn't warrant concern (microcode is very specific to hardware), it is concerning if their presentation's claim is true; that is, the whole Atom line has similar microcode. I hope I'm wrong. I'm by no means an expe	kvathupo	9.582277	-5.38813	comment	3.0	15.0	1638333398	7.6625624
29400897	OK, well, to begin this discussion t	OK, well, to begin this discussion then, we either agree that Intel/AMD CPU's (and other x86 CPU's) -- are basically RISC CPU cores with microcoded instructions above the RISC core layer -- or we don't...If we don't agree -- then I can submit link after link, URL after URL, text excerpt after text excerpt -- to prove to you that this is the case with Intel/AMD CPU's (and pretty much most other commercial CPU's that use large instruction sets) since the 1980's.Anytime a CPU is microcoded in any way -- that's a good indication that there's a RISC core in there -- at a level below the microcode dispatch mechanism...Why?Because there are so many reasons to architect a CPU like that!  It makes a huge amount of sense!Why put tons of extra gates on a CPU to implement a super-large instruction set	peter_d_sherman	9.530276	-5.58081	comment	3.0	11.0	1638335218	-10.456553
29418261	I have some mixed feelings about mos	"I have some mixed feelings about most of these.  As Jim Keller said, ""most of the performance comes from just six instruction and RISC-V has all of those"".  Adding more instructions will cost area, power, design & verification time, all of which could go to making the existing code go faster."	FullyFunctional	9.463681	-5.7367373	comment	3.0	22.0	1638462485	6.8811913
29419127	The beauty of a modular instruction 	"The beauty of a modular instruction set architecture like RISCV's is that you don't have to implement all of it, only the extensions that make sense for your use case.Aside, Keller's quote is probably partly in jest. If you are in a constrained micro-controller environment something like the ZFinx extension is probably helpful beyond the ""just six instructions"" for code density. If you are crypto heavy, the crypto extension are going to be more helpful than ""just six instructions"". If your workload is parallelisable and regular, vectorisation helps you more than  ""just six instructions"" and so on.One size doesn't fit all."	YorkshireSeason	9.576031	-5.8137164	comment	3.0	19.0	1638465500	-10.496927
29419773	The license to the ISA itself is fre	The license to the ISA itself is free.There's several vendors besides RISC-V offering cores for licensing. There's even some OSHW cores that can be freely used.Even if we choose to ignore the technical prowess of being a true 5th generation RISC ISA built with hindsight no other ISA has, what's IMHO a big deal in RISC-V is the mere availability of this market of cores.It poses a threat to ARM's business model, where ARM licenses cores and ISA, but nobody else than ARM can license cores to others.	snvzz	9.399852	-5.6275697	comment	3.0	43.0	1638467925	-10.520304
29419919	I'd love to hear what people have to	I'd love to hear what people have to say about the vector instructions. I've always found that SIMD on x86was quite clunky and I heard risc-v vectors are very different from that. Is that true?	ufo	9.579104	-5.859427	comment	3.0	28.0	1638468419	-10.538639
29419297	Some context: RISC-V Summit is next 	Some context: RISC-V Summit is next week, and RISC-V international has just approved a batch of important extensions[0]. With these extensions, RISC-V is not missing anything relative to ARM and x86 ISAs in terms of functionality.I expect a lot of tape-outs to happen this month, as core vendors were probably holding for the announced ratifications, in fear of last minute changes. Next year is going to be exciting.[0]: https://riscv.org/announcements/2021/12/riscv-ratifies-15-ne...	snvzz	9.416716	-5.6822686	comment	3.0	22.0	1638466102	-10.555403
29420491	 > built with hindsight no other ISA	" > built with hindsight no other ISA hasWhy do all the riscv fans Conveniently ignore aarch64 when they make statements like this?
It was in fact a completely clean new design, based on hindsight, by people who know what they are doing, and with no legacy Cruft."	dmitrygr	9.512337	-5.5896897	comment	3.0	29.0	1638470639	-10.507912
29421148	This isn't an isolated case. RISC-V 	This isn't an isolated case. RISC-V makes the same basic tradeoff (simplicity above all else) across the board. You can see this in the (lack of) addressing modes, compare-and-branch, etc.Where this really bites you is in workloads dominated by tight loops (image processing, cryptography, HPC, etc). While a microarchitecture may be more efficient thanks to simpler instructions (ignoring the added complexity of compressed instructions and macro-fusion, the usual suggested fixes...), it's not going to be 2-3x faster, so it's never going to compensate for a 2-3x larger inner loop.	theresistor	9.47623	-5.7736483	comment	3.0	24.0	1638473096	-10.559733
29421327	Few years ago, I designed my own ISA	"Few years ago, I designed my own ISA. In that time I investigated design decisions in lots of ISAs and compared them. There was nothing in the RISC-V instruction set that stood out to me, like for example, the SuperH instruction set, which is remarkably well designed.Edit: Don't get me wrong, I don't think RISC-V is ""garbage"" or anything like that. I just think it could have been better. But of course, most of an architecture's value comes from its ecosystem and the time spent optimizing and tailoring everything..."	okl	9.4692955	-5.671895	comment	3.0	14.0	1638473865	-10.5252695
29421695	"The original title was ""Risc V great"	"The original title was ""Risc V greatly underperforms"", which seems like a far more defensible and less inflammatory claim than ""Risc V is a terrible architecture"", which was picked from the actual message but still isn't the title."	yjftsjthsd-h	9.372731	-5.694108	comment	3.0	13.0	1638475398	-10.558195
29422204	I'm not an expert on ISA and CPU int	"I'm not an expert on ISA and CPU internals, but an X86 instruction is not just ""an instruction"" anymore. Afaik, since the P6 arch Intel is using a fancy decoder to translate x86/-64 CISC into an internal RISC ISA (up to 4 u-ops per CISC instruction) and that internal ISA could be quite close to the RISC-V ISA for all I know.Instruction decoding and memory ordering can be a bit of nightmare on CISC ISAs and fewer macro-instructions are not automatically a win. I guess we'll eventually see in benchmarks.Even though Intel has had decades to refine their CPUs I'm quite excited to see where RISC-V is going."	lottospm	9.581186	-5.660447	comment	3.0	15.0	1638477644	-10.471559
29422429	> Except for this good feature, the 	> Except for this good feature, the rest of the ISA is full of bad featuresWhat are your thoughts on the way RISC V handled the compressed instructions subset?	zamadatix	9.477328	-5.732579	comment	3.0	19.0	1638478611	-10.536161
29423913	RISC V is an opinionated architectur	RISC V is an opinionated architecture and that is always going to get some people fired up. Any technology that aims for simplicity has to make hard choices and trade offs. It isn’t hard to complain about missing instructions when there are less than 100 of them. Meanwhile nobody will complain about ARM64 missing instructions because it had about 1000 of them.Therein lies the problem. Nobody ever goes out guns blazing complaining about too many instructions despite the fact that complexity has its own downsides.RISC-V has been designed aggressively to have minimal ISA to leave plenty of room to grow, and require minimal number of transistors for a minimal solution.Should this be a showstopper down the road, then there will be plenty of space to add an extensions that fixes this problem. Me	socialdemocrat	9.453957	-5.709042	comment	3.0	10.0	1638485291	-10.54024
29422448	You seem to be making your whole arg	"You seem to be making your whole argument around some facts which you got wrong. The central points of your argument are often used in FUD, thus they are definitely worth tackling here.>Even the hard-to-believe ""research"" results published by RISC-V developers have always showed worse code density than ARMthe code size advantage of RISC-V is not artificial academic bullshit. It is real, it is huge, and it is trivial to verify. Just build any non-trivial application from source with a common compiler (such as GCC or LLVM's clang) and compare the sizes you get. Or look at the sizes of binaries in Linux distributions.>the so-called better results were for the compressed extension, not for the normal encoding.The C extension can be used anywhere, as long as the CPU supports the extension; most"	snvzz	9.476939	-5.735772	comment	3.0	27.0	1638478687	-10.539603
29425715	> I believe that an average computer	"> I believe that an average computer science student could come up with a better instruction set that Risc V in a single term project.When you hear the ""<person / group> could make a better <implementation> in <short time period>"" - call them out. Do it. The world will not shun a better open license ISA. We even have some pretty awesome FPGA boards these days that would allow you to prototype your own ISA at home.In terms of the market - now is an exceptionally great time to go back to the design room. It's not as if anybody will be manufacturing much during the next year with all of the fab labs unable to make existing chips to meet demand. There is a window of opportunity here.> It is, more-or-less a watered down version of the 30 year old Alpha ISA after all.  (Alpha made sense at its t"	bArray	9.453607	-5.5597754	comment	3.0	10.0	1638496537	-10.539536
29429715	>What’s interesting about debugging 	>What’s interesting about debugging this is that it actually is much easier to debug than a Linux system. Why? Because there is only one program in question. You aren’t whipping out lsof to figure out what process is spewing out crap connections or which process didn’t have a proper log rotation setup and prevented you from SSHing into the instance. [...] Unikernels are so much easier to debug than normal Linux systems.I have no strong opinion either way but just to add counterpoint from Bryan Cantrill's 2016 article[1]:>[...] the most profound reason that unikernels are unfit for production — and the reason that (to me, anyway) strikes unikernels through the heart when it comes to deploying anything real in production: Unikernels are entirely undebuggable. There are no processes, so of co	jasode	9.93598	-6.2287173	comment	3.0	23.0	1638537826	-12.3653145
29444911	Digi-Key, Element14 (Farnell), RS Co	"Digi-Key, Element14 (Farnell), RS Components and Mouser are all big suppliers that offer reasonably priced components in any volume you want.  They're widely used by professional engineers for both retail and wholesale orders, as well as BOM cost estimates.Octopart lets you compare prices across all of them (and more).For components that you can tolerate the occasional issue with, AliExpress is also a plausible option.Specifically for tinkering with FPGAs, I'd recommend looking into Numato.  They're a small-ish business based out of India that produce cheap and cheerful FPGA boards.  The products are well-made and support is great.For the soldering station, I'd recommend just Googling ""Hakko FX-888"" and ponying up the US$100 or so to get one from a reputable supplier.  There are cheaper pr"	AussieWog93	9.090039	-5.3009357	comment	3.0	13.0	1638657102	8.313942
29445403	In the 90’s there were people trying	In the 90’s there were people trying to solve this problem by putting a small CPU on chip with the memory and running some operations there. I routinely wonder why memory hasn’t gotten smarter over time.	hinkley	9.868767	-5.3879204	comment	3.0	14.0	1638661701	8.126519
29448909	I generally agree.A point on Linus' 	I generally agree.A point on Linus' videos though: his criticism is objectively not fair to the community.I have been using linux for everything (work/gaming/devops etc) for over 7 years now. To this date I still stumble uppon simple issues that a normal user would probably never figute out how to solve. Linus is right in this regard, there is waaay to go, linux distros are not yet plug and play for normies.However, and this is my problem with Linus' criticism: He has taken an existing subset of the people in the linux community (toxic gatekeepets who will also claim limux is noobie friendly) and he is replying to the whole community in frustration, as if we all are these people. So the thousands of volunteered effort, delivered for free to all of us, gets a slap from Linus because some sp	gtsop	9.378874	-5.8439245	comment	3.0	16.0	1638708937	4.200203
29450334	Currently the cheapest spot instance	Currently the cheapest spot instances with >30gb area1/32gb/16vcpu (early graviton) @ 8c andM5zn/48gb/12vcpu (late Intel) @ 12cI think the intel is better value. What are those graviton instances with better value (given that they are probably much slower than Intel)?	ant6n	9.503451	-5.2109756	comment	3.0	16.0	1638720990	-8.32928
29450999	> by AWS is a reflection of true pri	> by AWS is a reflection of true price/performanceI assume you mean cost / performance as in Cost to amazon and not price as in price paid by consumers? Because Graviton is both faster and cheaper per vCPU. ( Amazon unit for a single thread )>AWS taking a short term margin hitIt is hard because even if you can reliably extrapolate the cost of Graviton chip by wafer price. You will never know how they put the R&D into accounting. Do you have NRE cost in every single one those chips? ( which is what most people assume but not necessarily true ) Or do you move the whole R&D of Graviton into whole AWS R&D budget? And then you will have to calculate the power usage per workload to work out the power saving which gives you the TCO. Since 30%+ of Operating cost are going to energy usage. Being po	ksec	9.540293	-5.205636	comment	3.0	10.0	1638725956	-8.283623
29460239	Open cores, ISAs, etc.: what is open	Open cores, ISAs, etc.: what is open about them?	Tomte	9.562781	-5.308972	story	3.0	55.0	1638801656	-7.5026665
29461443	I think 16-bit support is actually a	I think 16-bit support is actually a limitation of x86 CPUs. They can only go into 16-but mode if they booted as 32-bit. A 64-bit CPU running in 64-bit mode is incapable of running 16-bit x86 code. It is not a software limitation. This can be demonstrated by installing 32-bit Windows and enabling 16-bit support.	cshokie	9.901711	-5.3160367	comment	3.0	12.0	1638806850	-7.9554696
29463599	Can someone explain why the RISC-V e	Can someone explain why the RISC-V ecosystem won’t eventually stabilise into a series of lower performance open source cores and higher performance closed source (and non licensable) cores.In other words why should designers open source performance leading cores for competitors to copy?	klelatti	9.393584	-5.6291585	comment	3.0	17.0	1638815211	-10.57046
29464336	A cool thing about Thumb/ARM, is tha	A cool thing about Thumb/ARM, is that you can actually switch between the two instruction sets in your binary. You essentially dump your cache when this happens, but you can do it.	tylerflick	9.648037	-5.4478545	comment	3.0	13.0	1638818503	-7.758208
29463808	Easily one of my favorite archs, at 	Easily one of my favorite archs, at least as far as the idea of it goes.  IMO the most pure classic 5 stage RISC.  Divide is split into each cycle's ops, iterate for as long as your results need.  It's pretty easy to get to a point where you can just read the hex of the opcodes as three address RISC with 16 bit instructions and 16 registers means the first nybble is the opcode, and the other three nybbles are the registers.  And the whole thing feels like someone told some engineers that they have to make a RISC with half the gates of an equivalent MIPS and the mad lads actually did it, and did it well.A little ascetic for these days though, IMO.	monocasa	9.511791	-5.743958	comment	3.0	18.0	1638816151	-10.51808
29482253	I wonder how they manage to keep the	I wonder how they manage to keep the FP64 units busy. Seems this is an HPC product, but many HPC apps are memory bound. So to improve FP64 perf by 4 one might need to improve  DRAM bandwidth by 8-16x. Otherwise the units would only be stalled waiting for memory.But it seems they did not improve bandwidth by much?	volta83	9.755733	-5.3008986	comment	3.0	12.0	1638950025	8.026734
29488378	We built Sourcegraph taking inspirat	We built Sourcegraph taking inspiration from Google Code Search (https://about.sourcegraph.com/blog/ex-googler-guide-dev-tool...) to bring the power of code search—and precise code intelligence that just works—to every dev. Try it out here: https://sourcegraph.com. A super common thing we see is people leaving Google, missing code search, and then bringing Sourcegraph into their new org. We'd love to hear your feedback!	beliu	8.748407	-6.0383368	comment	3.0	11.0	1638987764	-11.498887
29488875	this looks awesome! two things I've 	"this looks awesome! two things I've always wanted and haven't found satisfying solutions for in code search (in an editor)1) an ability to easily express higher level concepts in a search that's aware of code semantics (""match only function names"", ""find call sites of a method"") etc. Maybe this is possible with existing tools (probably is?) but I tend to get lazy about learning DSLs - would love to see this in a UI if it's possible2) ability to save searches I do frequently - after a certain level of complexity in a query (I've added ignore rules, I crafted the right regex, etc), I want to be able to save the ""context"" of a search so that I can easily return to it later"	patrickdevivo	8.913183	-5.9722247	comment	3.0	11.0	1638990109	-11.06099
29491139	This is a little bit reductionistic.	"This is a little bit reductionistic.You can slightly the alter the claim to ""most software engineers don't actually know how their code works at a level that's relevant for them to make good software"" and it becomes solidly true.Most (web) software engineers don't know anything about assembly, CPU cache, virtual memory, or pipelining, and application of knowledge of those things would change web applications from their current abysmal levels of performance to something acceptable.Very, very rarely is knowledge of the microarchitecture, microcode, transistors, or physics necessary to make modern software reasonably correct and performant."	throw10920	9.741737	-5.201312	comment	3.0	12.0	1639000955	1.6330835
29491579	>It randomly crashes and corrupts yo	>It randomly crashes and corrupts your dataMy PC doesn't have ECC memory and it isn't crashing and corrupting my data. I think you are vastly over exaggerating.	charcircuit	9.71571	-5.5243278	comment	3.0	10.0	1639003703	8.242776
29492525	> I buy unbuffered ECC DIMMs for my 	> I buy unbuffered ECC DIMMs for my AMD systems and they're basically maybe 5-10% more than a non-ECC DIMMWhere? Are you talking DDR4-3200? These are 40-50% higher than non-ECC UDIMMs. It usually gets worse as capacity increases. Additionally, there are only one or two models of 1x32GB UDIMM in production. These sticks are quite rare. You don't just go to Newegg or Amazon unless you want to pay out the arse for them. And in addition to that, ECC has worse timings which are important for Ryzen.> Registered DIMMs have a higher premiumYou have this backwards. RDIMM are common and cheaper because that's what servers generally use. UDIMM ECC cost more because, well, they barely exist as a thing.	deckard1	9.459785	-5.4683766	comment	3.0	17.0	1639010756	8.187191
29492165	Error Correction isn't the important	"Error Correction isn't the important part of ECC: it's Error Checking.  There was a very long thread recently about this in the context of row hammer over at the forums on Real World Tech.  While ECC can't fix row hammer, it can let you know that something is wrong and the system operator needs to intervene.  The same thing is needed on desktops.  Without ECC you won't know that your system is failing and silently corrupting your data.  Especially when DRAM vendors are shipping products that don't reliably meet the defined operating parameters in their data sheets.  ""Trust, but verify"".The extra cost for ECC is basically noise in the cost of a desktop system.  I buy unbuffered ECC DIMMs for my AMD systems and they're basically maybe 5-10% more than a non-ECC DIMM.  The SSD premium is more "	bcrl	9.5009985	-5.5279193	comment	3.0	24.0	1639007580	8.262824
29507277	Depends what you call a fact. If I s	Depends what you call a fact. If I say that this Processor is the best at these benchmark, does it matter that the benchmark favors it? If I say a camera takes the best images, but omit they’re difficult to do consistently does it have the best quality? If I said these headphones sound the best and produce the most accurate sound, what if it’s true for me but not for your music genres?	GhettoComputers	9.912625	-5.476306	comment	3.0	14.0	1639120484	7.738641
29522308	If you want to play the original Adv	If you want to play the original Adventure without the PDP-11 (though not nearly as authentic), I ported it to the web here: https://grack.com/demos/adventure/	mmastrac	9.831416	-5.4205246	comment	3.0	11.0	1639241889	-7.560813
29528591	It is very, very different.X86 exten	It is very, very different.X86 extensions get added onto the sum total of almost all the previous extensions, so that the number of variations to support has grown about linearly with time. RISC-V extensions are more or less all independent, so that the number of variant targets explodes exponentially as they are added to.	ncmncm	9.450879	-5.722205	comment	3.0	11.0	1639306313	-10.506966
29537475	ARM is significantly more open than 	ARM is significantly more open than x86.	jfrunyon	9.71549	-5.3849244	comment	3.0	16.0	1639379701	-7.738011
29537817	Some anecdotal experience:- we switc	Some anecdotal experience:- we switched our nodejs workload to graviton (c6g from c5), and it resulted in needing more instances, which ended up costing nearly exactly the same price- ARM is annoying in practice for some stuff (we build our docker images on our CI which is on premise and not ARM)- AWS pushed a bit to have us move to graviton- Where are the c6a ? :)	forty	9.568017	-5.197593	comment	3.0	22.0	1639384240	-8.258003
29536780	That they claim as one of their bene	That they claim as one of their benefits that Intel chips have better security than ARM is just laughable in light of the myriad speculative execution vulnerabilities present in x86 chips.	Svetlitski	9.599407	-5.261917	comment	3.0	12.0	1639371503	-7.697341
29549950	Can be done, ARM has better support 	Can be done, ARM has better support for predicated instructions. May be done without using inline assembly.But I guess ARM CPUs can also have a smaller branch penalty, which means less speedup from such a patch.You can try it by replacing the inline assembly with the commented code above it (also don't forget to remove i386 and x86_64 from #if). (Although the code could be rewritten a bit to help the compiler make better binary code for ARM.)	jpegqs	9.720522	-5.457305	comment	3.0	10.0	1639475426	-7.6783743
29569321	That reads like some handwavy explan	"That reads like some handwavy explanation of a hack in a movie scene...""Now I just have to embed a 64-bit computer architecture into my compression algorithm and... boom. We're in."""	airstrike	9.890514	-5.3967905	comment	3.0	24.0	1639591044	-7.7103314
29572753	Yes you are correct.  The reason it 	Yes you are correct.  The reason it was designed the way it was, was to eliminate the need for a framebuffer.  RAM was very expensive in 1977, but a 6502 running at about 1.2MHz was just fast enough to keep up with the requirements of drawing each line on the fly.  It was basically an extreme example of the old 'CPU time vs. RAM space' tradeoff.	Jeema101	9.596971	-5.239239	comment	3.0	13.0	1639610054	7.6808167
29576580	This vulnerability will likely turn 	This vulnerability will likely turn out to follow the trajectory of the Meltdown and Spectre vulnerabilities from...(checks google)... 2018.I speculate will be a cluster of newly discovered vulnerabilities that follow a similar pattern, possibility across a number of familiar Java libraries.	guidedlight	9.692887	-5.5510726	comment	3.0	13.0	1639647296	-7.0422645
29606373	You just sent this message to a whol	You just sent this message to a whole bunch of servers that are almost certainly running x86-64 and that side is unlikely to change for the near future, I'm pretty sure that 64-bit Intel still has some life in it	anaisbetts	9.653696	-5.3505254	comment	3.0	10.0	1639848438	-7.807612
29631309	Ugh there goes all our CI stuff.	Ugh there goes all our CI stuff.	jtchang	9.22013	-6.383471	comment	3.0	10.0	1640039637	6.0977907
29638368	Meanwhile there's a high likelihood 	Meanwhile there's a high likelihood that there's a backdoor in the Intel processors (and maybe now also AMD ones ?) that was put there by the NSA... and hardy anyone seems to care ?https://blog.invisiblethings.org/2015/10/27/x86_harmful.html	BlueTemplar	9.503169	-5.215926	comment	3.0	14.0	1640101088	7.68939
29639619	Why on Earth one would want in a cha	"Why on Earth one would want in a character-oriented text (i.e. where every character matters separately) to have some of them collapsed into one is beyond me. Why not take it further and have IDE render all occurrences of ""cat"" with an emoji."	eps	9.880988	-6.249889	comment	3.0	11.0	1640107412	-13.95324
29644021	My take is a bit different: the earl	My take is a bit different: the early microprocessors were a big step backward in functionality. The 7090 was a 36-bit machine, while the Z-80 and 6502 were 8 bit. These microprocessors didn't support multiplication or division. The 7090 supported not only integer multiplication and division, but floating point. Even the 8086 didn't have floating point (without the 8087). The 7090 also had channels, basically a built-in DMA engine for I/O.But overall I agree with you that the assembly code is fairly similar as far as the basic structure. Some of the early computers have pretty strange assembly code that requires a big mental shift. For example the Honeywell 1800 with two program counters that can go forward or backward, or the IBM 1401 with its word marks and arbitrary-length words.For a l	kens	9.651329	-5.4644227	comment	3.0	11.0	1640133448	-7.422679
29650523	Note that FreeBSD Jails were introdu	Note that FreeBSD Jails were introduced in 1999, while Solaris Containers and Zones were introduces in 2004. At the time FreeBSD Jails were introduced, probably the only alternative that was wildly available was chroot, which is really far from what Jails offer. Full virtualization was too slow to be practical for most scenarios, back then. 1999 is the year when Pentium III was released.	drclau	9.757624	-6.3759313	comment	3.0	11.0	1640186786	10.432207
29660359	> I see people -- including Chinese 	> I see people -- including Chinese diaspora -- calling for banning Intel.Is this feasible? There's not all that many other options for x86	hrrsn	9.49301	-5.20584	comment	3.0	16.0	1640253875	7.7223873
29667848	My day job for 6+ years is implement	My day job for 6+ years is implementing high perf RISC-V cores and my name is in many of the RISC-V specs.Variable length ISAs are characterized by not being able to tell the beginning of an instruction without knowing the entrypoint. This applies to RISC-V with compressed instructions.  Finding the boundaries is akin to a prefix scan and has a cost roughly linear in the scan length, but IMO the biggest loss is that you can’t begin predecode at I$ fill time.	FullyFunctional	9.459724	-5.735006	comment	3.0	14.0	1640302401	-10.544534
29674207	For single core workloads, probably.	For single core workloads, probably. Didn’t we hit the clock speed cap around 2010?	sudhirj	9.49549	-5.188056	comment	3.0	12.0	1640358852	7.750658
35870336	Linus fed up with state of media tre	Linus fed up with state of media tree (slow response to build problems)	bagasme	9.390596	-5.8230624	story	3.0	13.0	1683608404	4.219273
35870331	More details here:  https://pulp-pla	More details here:  https://pulp-platform.org/docs/STW2022_kgf.pdfHere's the source for the compute CPU core: https://github.com/pulp-platform/snitch	monocasa	9.55808	-5.2656045	comment	3.0	12.0	1683608331	7.8024845
35896718	I kind of find the excessive usage o	I kind of find the excessive usage of emoticons and such distracting.	ddtaylor	9.788719	-6.2638416	comment	3.0	17.0	1683773325	-13.950982
35920411	Lower sales. Bad management. And the	Lower sales. Bad management. And there was a consensus at that point that CISC was a dead-end and RISC was the future. Also, they did in fact take the 68k further (ColdFire) but too late, long after they had pushed their serious customers to PowerPC.Intel was making enough coin from x86 that they were reluctant to EOL it in favour of something RISC. Not that they didn't try. Multiple times (Itanium being the worst, though much later). But each time their replacement failed to ignite, and Intel pulled back from the brink and they pushed something that was a noticeable incremental improvement while keeping backward compatibility.And with the Pentium & the ISAs that followed they just seemed to pull a rabbit from a hat. They made the x86 CISC architecture scale in a way that pundits at least?	cmrdporcupine	9.549914	-5.2025304	comment	3.0	12.0	1683917037	-7.658835
35939953	Unfortunately most ARM‘s are also to	Unfortunately most ARM‘s are also too weak	meinheld111	9.534436	-5.2152777	comment	3.0	11.0	1684087624	-7.6640453
35939168	The Group Decode ROM: The 8086 proce	The Group Decode ROM: The 8086 processor's first step of instruction decoding	zdw	9.754703	-5.5866356	story	3.0	61.0	1684081948	-7.4775586
35941493	Decoder complexity matters. ARM with	Decoder complexity matters. ARM with its single instruction width allows arbitrarily parallel decoders with only linear growth in transistor count. X86 with its many widths and formats requires decoders that grow exponentially in complexity with parallelism, consuming more silicon and power to achieve higher levels of instruction level parallelism. It requires a degree of brute force with many possible size branches being explored at once among other expensive tricks.This is one of the major areas where the instruction sets are not equal. ARM has a distinct efficiency advantage.	api	9.704438	-5.529351	comment	3.0	28.0	1684099849	-7.719829
35942914	This RISC/CISC debate made a lot of 	"This RISC/CISC debate made a lot of sense when the ""guts"" of the CPU (decoder, registers, ALU, etc) occupied almost the whole chip (or box of transistors), and when memory and CPU had similar speeds.The situation now is very different. The vast majority of the chip is cache. The trade-off for a much bigger decoder (or register stack, or whatever) is now just a fractionally smaller cache.And on current systems the CPU and memory operate at enormously different speeds - memory is 10+ times slower than the CPU. So to keep the CPU even vaguely busy, we have resorted to enormous caches. And we use large numbers of cores & threads, so that when one thread is waiting for memory, others may be able to run.The old game was max performance from a limited number of gates. The current situation makes "	drpixie	9.782468	-5.6088953	comment	3.0	10.0	1684113401	7.998857
35943018	Acronym/initialism definer here. The	Acronym/initialism definer here. There are two in your comment that I wasn't familiar with, although I understood them once I saw them spelled out.SMT is simultaneous multithreading, which may be more familiar under Intel's name of hyper-threading.https://en.wikipedia.org/wiki/Simultaneous_multithreadingPPA is not the Professional Photographers of America, nor the Professional Pickleball Association, nor the Philadelphia Parking Authority, all of which came up at the top of my naïve search.It's Power-Performance-Area.https://en.wikichip.org/wiki/power-performance-area	Stratoscope	9.865567	-5.598887	comment	3.0	17.0	1684114586	8.187911
35947922	find a bug in Intel's pseudocodeIt's	find a bug in Intel's pseudocodeIt's well-known that the official docs have bugs; others have had success using AMD's to compare:https://www.os2museum.com/wp/sgdtsidt-fiction-and-reality/	userbinator	9.451298	-5.316395	comment	3.0	12.0	1684157806	7.812702
35954406	It's really depressing that no Risc-	It's really depressing that no Risc-V hardware currently in production has completely open-source firmware.In this respect Risc-V is much, much more closed than Arm64, where we have the totally-blobless RK3399.Ultimately Risc-V is about vendor-freedom at all costs, even at the cost of owner-freedom.	KirillPanov	9.408615	-5.6398354	comment	3.0	13.0	1684184391	-10.557819
35956537	Steve Yegge's recent blog posts clai	Steve Yegge's recent blog posts claim that SourceGraph are getting a pretty good result by using embeddings created from their knowledge graph of the code structure. That's still the usual [create embeddings, search against embedding of query, retrieve results and use them as prompt] schlep, so yeah, it isn't really understanding architecture well yet.I too have a job where almost every question is about structural understanding and improvement of a large existing codebase. I'd love to have AI help, but I think it's going to take another iteration or three of model architecture to get there.	zellyn	8.765992	-6.0256333	comment	3.0	11.0	1684198443	2.1128778
35971340	> I also don't quite get why Intel d	> I also don't quite get why Intel doesn't just design their own competing high efficiency architecture, after abandoning x86 and backwards compatibility, of course, something they should have done two decades ago at least.They've tried, at least twice. Itanium and Atom come to mind. It turns out, it's not as easy as it sounds, even back when Intel was near the top of its game.	kadoban	9.424525	-5.2774754	comment	3.0	11.0	1684298780	7.823758
35972498	Why would ISA significantly affect e	Why would ISA significantly affect energy consumption	hardware2win	9.564293	-5.5103984	comment	3.0	10.0	1684310932	-7.726421
35996296	Linus stepping down as CEO of LinusT	Linus stepping down as CEO of LinusTechTips	brarsanmol	9.314453	-5.874398	story	3.0	37.0	1684456197	4.2925224
35997539	I just checked, and you can buy a ne	I just checked, and you can buy a new Intel 8086 on digikey right now: https://www.digikey.com/en/products/detail/rochester-electro...The product is not even marked obsolete.	etaioinshrdlu	9.557387	-5.227728	comment	3.0	11.0	1684468244	-7.5314226
36007540	If I had to list one hundred ways x8	If I had to list one hundred ways x86 could be improved, not booting in 16-bit mode wouldn't be on it. It's just an incantation. There's no fallout from it.If we're talking firmware, the gigantic mess that used to be called ACPI, still leave users suffering every day for example.	xorcist	9.817237	-5.3107476	comment	3.0	14.0	1684535553	-7.86378
36009946	RISC-V based Milk-V board with 64 co	RISC-V based Milk-V board with 64 cores at 2 GHz and 128 GB RAM	fork-bomber	9.389133	-5.633752	story	3.0	73.0	1684566067	-10.60256
36010729	It does not make sense because softw	"It does not make sense because software could be written using the same quality standards that CPUs use, which would involve a lot of formal reasoning and proofs.This work style, however, is not valued at all and is actively suppressed by ""flat"", non-expert hierarchies that reward people for being popular and sloppy.It works for web companies because errors have no consequences for them and the web has turned into a gigantic tabloid anyway."	bncmark	9.673205	-5.1929307	comment	3.0	10.0	1684579101	7.746534
36014051	Will be there an i87 inside? With 80	Will be there an i87 inside? With 80bits registers?	Iwan-Zotow	9.604905	-5.347093	comment	3.0	11.0	1684605303	-7.481746
36014395	> The big barrier is that the FPGA d	> The big barrier is that the FPGA design tools from the FPGA companies are full of bugs that you spend an inordinate amount of time trying to work around.Do they not have older, more stable, releases?	MichaelZuo	9.080083	-5.36854	comment	3.0	14.0	1684607482	8.410382
36015363	you cannot fathom how bad eg Xilinx'	you cannot fathom how bad eg Xilinx's FPGA tool suite is. like beyond the fact it's like some kind of frankenstein monster because they bought up a bunch of smaller tools and glued them together with fucking tcl, any individual piece is worse than your worst open source compiler/ide/whatever tool you use to build software. and yet people say that it's 10x better than the competitors' offerings. hell on earth is being an FPGA dev without a direct line to Xilinx employee for help debugging (which is how things really work professionally).just lend some credence to myself here - vitis, their supposed hls offering that turns C++ into RL by magic and genius and oracles, today embeds LLVM 7.0 (released in 19 Sep 2018). gee i wonder how many perf and etc improvements have landed in LLVM since 7 s	mathisfun123	9.082751	-5.3934207	comment	3.0	11.0	1684615063	8.451632
36015862	> a 32-bit OS can only address 3.2 G	"> a 32-bit OS can only address 3.2 GB of RAMIs that true though? 32bit Windows 2003 Enterprise or Datacenter editions were perfectly capable of accessing 64GB or RAM [0]. Even so, that difference from the usual 4GB and 3.xGB was any kind of memory usage for integrated GPU or virtual address space mapping for different hardware.[0] https://learn.microsoft.com/en-us/windows/win32/memory/memor...P.S. I think the ""3.2"" figure irked me more than the usual ""32bit OSes can't use more than 4GB"". That's not a real limit and never was. Even people with no IT knowledge would have noticed it varies quite a bit anyway. I guess I expected a little more from a tech reporter."	buran77	9.934166	-5.29195	comment	3.0	12.0	1684618804	8.136606
36021599	This is genius!But I couldn't find t	This is genius!But I couldn't find the thumb up and thumb down emojis. How am i supposed to make it guess Gladiator?	FranklinMaillot	9.805	-6.257923	comment	3.0	11.0	1684680962	13.051814
36023737	What you're asking for now exists, Z	"What you're asking for now exists, Zen 4 mobile SKUs allegedly ship a Xilinx design on the die for ""AI Acceleration"" (some of their Versal fabric over some weird bus), that has absolutely 0 external software consumers beyond some vaporware about video effect software for Windows 11 e.g. background image removal and background noise removal. They really just aren't very easy to program or use externally, and require lots of integration work, and that remains a major limiting factor in practice. The pure silicon-area overhead is also pretty severe compared to a fixed ASIC (think ~50-100x worse), limiting their practical size.There are other considerations; large FPGAs are kind of slow to program and have limited or fixed support for multi-tenancy, for example, you have to carve up the device"	aseipp	9.104869	-5.3426085	comment	3.0	11.0	1684695303	8.280896
36065207	The reason is probably that enthusia	The reason is probably that enthusiasm died out when Intel used it for their covert management engine in every x86 cpu they sell. Essentially bavkdooring all computers in the world...	unixhero	9.510096	-5.208678	comment	3.0	24.0	1684970941	7.8324566
36074070	> Gutting 32-bit support will kill o	> Gutting 32-bit support will kill off a lot of legacy applications.Nah, they can be emulated. Just as Apple continues to support x86 apps on ARM, and supported PowerPC apps on Intel, and m68k apps on PowerPC.	arcticbull	9.777768	-5.203734	comment	3.0	19.0	1685038451	-7.755525
36074314	"""Since its introduction over 20 year"	"""Since its introduction over 20 years ago, the Intel® 64 architecture became the dominant operating mode.""This is how Intel takes credit for AMD's x86-64."	CrLf	9.564908	-5.314834	comment	3.0	49.0	1685039511	7.8011394
36083974	Ask HN: What does the next evolution	Ask HN: What does the next evolution of version control look like?	tawb	8.786506	-6.383188	story	3.0	2.0	1685108390	-11.765306
36093508	These are not good for day to day us	These are not good for day to day use like raspberry. It will take a bit but at the end the ISA will matter.	fithisux	9.547096	-5.359022	comment	3.0	10.0	1685182729	5.748372
36106700	No, Hobbit was a descendent of the A	No, Hobbit was a descendent of the AT&T Bellmac processor.	joezydeco	9.5329685	-5.2528973	comment	3.0	12.0	1685300037	-7.119631
36116886	I suspect this isn't the direction t	"I suspect this isn't the direction that System76 is pursuing with Virgo, but Linux is in a good position to take advantage of Arm CPUs.  Linux isn't tied to legacy software that only runs on x86 in the same way that proprietary OS's are.  This distinction isn't absolute, but given that most Linux software is open source, it's relatively easier to make this transition.""Most performant"" is a tall order.  The traditional benefit of Arm has been efficiency, not compute power, but Apple has shown what's possible with their M1/M2 designs."	loudmax	9.640154	-5.224863	comment	3.0	10.0	1685387133	-7.7493405
36134173	> The Self-Boot Engine (SBE) (quanti	> The Self-Boot Engine (SBE) (quantity: 1) is a core which is responsible for booting the entire system. It's responsible for initialising the chip and getting it out of bed enough to the point where at least one of the main cores can run using cache-as-RAM mode; it does little after that point. It has some SRAM to do its work in and uses a slightly custom variant of the 32-bit Power ISA, extended to support 64-bit loads and stores using adjacent GPR pairs. This core design is known as a PPE. It's the first thing that runs on the CPU die.What I’m curious about is how does the ‘Self Boot Engine’ initialize itself in the first few miliseconds?Maybe, a motherboard chip does the actual work, but that just invites the same question, at some point something must be initializing itself, how?	MichaelZuo	9.817715	-5.2005644	comment	3.0	35.0	1685503731	7.7417808
36136188	I think you'd also need to build har	I think you'd also need to build hardware for that end, given e.g. Intel's Management Engine operating at Ring -3, and having a whole string of known exploits.	marginalia_nu	9.887633	-5.2675495	comment	3.0	12.0	1685524333	7.918143
36136231	x86 specific optimization for a lang	"x86 specific optimization for a language so focused on *portability*, heavy abstractions and business logic is kind of ehh. Especially with ARM is rearing its head.If you desire performance close to the chip, you chose the wrong language and should write code in a language closer to the chip. 
Unless the abstractions and concepts required for your primary work are so different from what you are using for day-to-day work (data science, ML python and C++ bindings for interacting with the GPU)"	snemvalts	9.67236	-5.4395905	comment	3.0	13.0	1685524679	-7.7610087
36136379	You're not really supposed to write 	"You're not really supposed to write AVX yourself - the compiler should be doing that for you. And it will, if you write your code in a SIMD-compatible way and turn on the right compiler flags.I do agree that it is the wrong level of abstraction. Explicitly stating the SIMD width leads to a compatibility nightmare. RISC-V vector instructions instead use an explicit ""vector width"" register, which pretty much entirely solves this problem."	crote	9.593578	-5.840596	comment	3.0	13.0	1685525951	-10.509175
36144188	Milk-V Second RISC-V SBC – Physicall	Milk-V Second RISC-V SBC – Physically Compatible with the Raspberry Pi 3 Model B	kaycebasques	9.386236	-5.631426	story	3.0	27.0	1685566425	-10.581337
36147015	Decompression speed looks good, but 	Decompression speed looks good, but in my experience once you get past a certain point (~X000 MB/s) performance gains become pretty marginal in real world applications. I'd like to see compression speeds and performance on AVX if AVX-512 is not available.	aydyn	9.4784975	-5.5562067	comment	3.0	10.0	1685587205	7.8923726
36148155	> It requires: avx512-vbmi2, availab	> It requires: avx512-vbmi2, available only on skylake-X/Tiger-lake/AMD zen4Isn't Avx 512 also available on Xeon which is most hosted servers, like aws.	thomasahle	9.395402	-5.4338455	comment	3.0	18.0	1685601204	8.041719
36148381	No modern intel consumer CPU has avx	No modern intel consumer CPU has avx512 anymore, they only support at most the 10 year old avx2 vector instruction set, because they want to give every single consumer chip efficiency cores, those can't handle it, and even the performance cores have this feature removed due to it.The modern AMD Zen 4 CPU's for consumers do support avx512 (including avx512_vbmi2).	Aardwolf	9.38836	-5.4690843	comment	3.0	15.0	1685603930	8.057056
36160981	What would happen if I try to run a 	What would happen if I try to run a program contains AVX instruction on a system that does not have it? Do I need to recompile the program?	iamcreasy	9.607036	-5.4838023	comment	3.0	18.0	1685679433	-0.8076283
36163082	Out of interest does a typical engin	Out of interest does a typical engine management system used in a car, make use of an MCU which supports lockstep computing, with multiple cores executing the same instructions simultaneously?	anfractuosity	9.842004	-5.598913	comment	3.0	23.0	1685698841	8.574224
36172946	It’s 2023 and I’m on an ARM laptop s	It’s 2023 and I’m on an ARM laptop so RISC technology did change everything.	api	9.386469	-5.6587787	comment	3.0	10.0	1685757208	-10.5729265
36185064	I tried a bunch of different options	I tried a bunch of different options and landed on multipass.I'm curious whether someone has found a good option for running x86 images on m1 chips.I'm generally happy with the multipass VMs I'm creating but they are arm architecture so then if i use docker images inside them I'm limited to arm images. Maybe I just haven't explored how to run x86 correctly within multipass?I'm finding that usually arm images are a step behind the x86 images if they are official, or they are built by someone outside the organization, so I'm never sure I'm using a safe image.Do any of the options here make it performant to run x86 on apple silicon? Some interesting comments on Rosetta that I don't fully understand.	xrd	9.596761	-6.2208056	comment	3.0	13.0	1685881487	10.041429
36190529	I'm pretty certain 64MB is enough fo	I'm pretty certain 64MB is enough for a tailor made Linux distro. What's most important is for the CPU to have an MMU to manage virtual memory. Otherwise, you're staying in microcontroller flatland where any app can access any address.	speed_spread	9.921256	-5.2498784	comment	3.0	12.0	1685921331	7.8609366
36194570	According to google, there are somew	According to google, there are somewhere between 900 to 4000 x86 instructions (not sure which value is correct or what variants means in this context), and 329 Linux calls. Meaning, there is a lot missing. Which leaves the question: will it communicate in an obvious way if it encounters an unknown instruction or call? Or can I check at least for potential problems before executing a program?	PurpleRamen	9.867863	-5.803564	comment	3.0	13.0	1685961493	-7.5716777
36202393	Why doesn’t WASM offer a 64-bit mode	Why doesn’t WASM offer a 64-bit mode?	vlovich123	9.836531	-5.384844	comment	3.0	18.0	1685994092	7.7720094
36203262	> much more usable than similar amou	"> much more usable than similar amounts of ramPeople keep repeating this but how does higher bandwidth (probably not 8x higher though) compensate for a lower amount of RAM?It's not quite as silly as the people saying that 8GB in the base config 'feels' much faster than 8GB on a PC cause the drive/swap are ""so fast"" but still.."	221qqwe	9.835626	-5.190496	comment	3.0	16.0	1685997528	7.9446898
36204238	Is there a specific reason why this 	Is there a specific reason why this has to be a OS update thing? I know that it's likely that they don't update the emoji font outside major OS updates so people have an extra reason to update.	slig	9.8113785	-6.254121	comment	3.0	10.0	1686001315	-13.956122
36219614	Contact the Tonga Network Informatio	Contact the Tonga Network Information Center ( https://www.tonic.to ).https://en.wikipedia.org/wiki/.to#cite_ref-6> The .to registry allows the creation of emoji domain names. A former .to registrar, Register.TO, did support the search and registration of .to emoji domain names. Register.to is no longer an authorized registrar for .TO domain names when making a transaction. The death of its owner in early February 2023 was stated by the NIC of Tonga according to an online review.	shagie	9.779335	-6.273924	comment	3.0	13.0	1686088692	13.03439
36223697	I am very surprised that this is pre	I am very surprised that this is presented as something new. From the very beginning of ARM, all instructions have had a condition attached to them. Contrary to the article, it has absolutely nothing to do with making the processor more CISCy, but is instead one of its most RISCy aspects.	gpvos	9.587102	-5.2249064	comment	3.0	13.0	1686120663	-7.651421
36225547	Falling back to emoticons is always 	Falling back to emoticons is always an option  ;-)	jagged-chisel	9.790204	-6.2627153	comment	3.0	11.0	1686137780	-13.955127
36226594	This hits pretty hard, but reasonate	"This hits pretty hard, but reasonates as true in many orgs.Trying to see where else we have the same dynamic, CI came to mind.CI is often pretty slow, and I've had jobs where it take 20 min for the full results (lint, compile, tests, etc) to come out. It was a pain point raised to management, we complained of lost productive hours against it, and tbe answer was to trim down tests and split the cose base, instead of ""just"" paying for faster CI instances.I'd expect other orga to take more sensible choices, but in general getting budget for tooling feels hard."	makeitdouble	9.4028425	-6.4080634	comment	3.0	20.0	1686144831	6.168161
36256441	Too bad they don’t support running o	Too bad they don’t support running on ARM.> Can I run the Warrior on ARM or some other unusual architecture?> No, currently we do not allow ARM (used on Raspberry Pi and M1 Macs) or other non-x86 architectures. This is because we have previously discovered questionable practices in the Wget archive-creating components and are not confident it runs under different endiannesses etc. If you still want to run it apparently Docker can emulate x86_64.	codetrotter	9.566892	-6.3298736	comment	3.0	12.0	1686311463	10.054371
36272966	An impressive number of 4chan's /g/ 	"An impressive number of 4chan's /g/ users are on github. Some even actively contribute to Linux (though usually to Arch, Gentoo, and now more and more Nix).I wrote a paper during college that I should release some time about when /g/ threw an absolute shitfit over Linus going ""so, I've been a kinda shit human being to people and I'm going to step back and get some help"", going as far as to blame his daughter/""the woke mob""/multiple named core kernel contributors for killing their god.At one point, I attended a GitHub event that wasn't directly sponsored by github but encouraged a lot of github users to show up. While there I met several people who, outside the venue, were talking animatedly about Terry Davis. Listening in on the conversation revealed that they more or less just approved of"	indrora	9.014762	-5.9850645	comment	3.0	12.0	1686419968	4.334898
36274895	There are several different types of	"There are several different types of CPU's, in two main classes, CISC and RISC. The difference is summarised by the first letter - ""Complex"" vs. ""Reduced"" - Instruction Set Computer. Or, what size ""vocabulary"" a CPU decodes.RISC-V is a type of CPU architecture (a set of plans for how to build one, not an actual CPU itself), that also happens to be open source. Anyone can build a RISC-V CPU without having to buy the rights to do so. (Many are.)This project is an emulation of a RISC-V CPU. A kind of virtual ""reference"" CPU in software. It can be used to compile code that can run on a RISC-V type CPU, and to help understand what's happening inside the CPU when it runs.It's written in C, which is and was a very fundamental programming language that's influenced the design of many other languag"	detrites	9.436432	-5.670364	comment	3.0	11.0	1686429842	-10.507313
36277169	The Debian project has been historic	The Debian project has been historically a vocal proponent for open hardware/firmware/drivers etc. and here we are in 2023 having Debian somewhat controversially acknowledging that proprietary firmware may be required at least by some users, to some degree.  So I am suggesting that if they really want to get there that they might need to help facilitate the change they would like to see.Is RISC-V the be-all, end-all?  No, but it could help them get a lot closer than they're likely to get with any of the proprietary ISAs.	blihp	9.421905	-5.627938	comment	3.0	17.0	1686448310	-10.5835285
36299268	VMware also has the best¹ 3D acceler	VMware also has the best¹ 3D acceleration, which allows playing 3D games for Windows XP, like Fallout 3.¹ actually, the only, since Virtualbox's acceleration is broken and limited, even on v7	pizza234	9.926344	-5.2025566	comment	3.0	10.0	1686596787	-8.316796
36308185	What is exactly the use case for hot	What is exactly the use case for hot-swapping CPUs?	meindnoch	9.614835	-5.205581	comment	3.0	17.0	1686652848	8.094468
36317381	Considering modern processors spend 	Considering modern processors spend 4-5 years in development before public release, someone would have to be building the game changing RISC-V CPU right now.Maybe he meant that development on RISC-V CPUs would start in earnest in the next 5-10 years?	Osiris	9.3848	-5.649281	comment	3.0	10.0	1686690549	-10.573449
36323210	Random RISC-V question: how do you m	Random RISC-V question: how do you make function calls in RV64?I have read that 'call' in assembly is a pseudo-instruction, which uses auipc and jalr to build the destination address.But surely that can only supply 32 bits of address? Is there a different sequence on 64 bit RISC-V? Or have I fundamentally misunderstood?	twic	9.559165	-5.816405	comment	3.0	10.0	1686732652	-10.466957
36329932	Are they on a PDP-11 or a dumb termi	Are they on a PDP-11 or a dumb terminal?	rblatz	9.841707	-5.4273686	comment	3.0	14.0	1686765773	-7.489857
36334905	Those numbers are for all cores. No 	Those numbers are for all cores. No modern CPU has anywhere near that of L1 and L2 per core.	Tuna-Fish	9.492023	-5.199895	comment	3.0	14.0	1686789413	7.8421855
36336890	The 8266 was based off an xtensa cor	The 8266 was based off an xtensa core instead of an Arm core which is the norm in the industry. Espressif created a replacement for this wildly popular chip with the C3 and based it off RISC-V to keep up with the times and the community. No more toolchain complaints from the community, plus they get to use open standards like RISC instead of xtensa from Tensilica. The never-ARM approach from Espressif has worked out well for them over multiple other alternatives that they chose over the years.If someone writes a book on the downfall of Arm in a few years, this is going to be a very interesting chapter IMO.disclaimer - worked at Espressif for a bit (2017-2019)	anujdeshpande	9.454966	-5.428447	comment	3.0	17.0	1686808292	-10.149925
36342504	x86 is protected by patents and only	x86 is protected by patents and only a few companies can use them, that’s why you don’t see random companies making x86 CPUs like they can with ARM (which also needs licensing but it’s much easier to get)	circuit10	9.583123	-5.2280035	comment	3.0	11.0	1686845010	-7.7396555
36377091	Let’s be clear here, while you are 1	Let’s be clear here, while you are 100% right that armv8 atomics kinda suck by default, neither compare and swap nor load linked store conditional scale but some atomics can scale if implemented and used appropriately. As parent points out, an atomic increment can scale, we proved they could scale to the performance of a load in the 80s for goodness sake. The fact that arm, ppc, and some others tend to implement these in the absolute worst way possible for performance doesn’t mean atomics can’t scale.	trws	9.680438	-5.4102077	comment	3.0	12.0	1687059566	-7.73086
36378911	I wish they included a proper spec s	"I wish they included a proper spec sheet for their cpu: SOPHGO CV1800BI've spent few minutes searching and I don't know, can I use this for machine vision applications? Does it support serial cameras (Csi)? Does it have hardware support for h264(h265 or even better vp9) encoding/decoding? What is the number of Tops of its ""vector accelerator""?I suspect they don't put info like this out front is that it probably is lower than established rockchip chips.The price is significantly lower too, but for when I need to run embedded Linux I also need video/camera acceleration etc. For devices that don't need a camera/voice interface like a Smart switch, a weather station etc this is massive overkill.So it is a case risc v being cool, but there is still no clear winning niche for it that I know of."	Roark66	9.40092	-5.337644	comment	3.0	10.0	1687084033	7.3083053
36381091	Before NextGen, AMD built an instruc	Before NextGen, AMD built an instruction decoder from x86 to AMD29k (which was Berkeley RISC style) and used it in K5.	p_l	9.628668	-5.549201	comment	3.0	12.0	1687101821	7.913066
36381198	"""RISC"" architectures are doing somet"	"""RISC"" architectures are doing something effectively identical to uop fusion though.  The real myth is the idea of a CISC/RISC dichotomy in the first place when frankly that notion only ever applied to the ISA specifications and not (except for the very earliest cores) CPU designs.In point of fact beyond the instruction decode stage all modern cores look more or less identical."	ajross	9.496637	-5.682869	comment	3.0	26.0	1687102569	-10.531868
36381864	I've never liked this idea that x86 	"I've never liked this idea that x86 CPUs decode instructions into RISC form internally. Before there was RISC, before there was even x86, there were microcoded instruction sets [1]. They were first implemented in Wilkes' 1958 EDSAC 2. Indeed the Patterson Ditzel paper even comments on this:   Microprogrammed control allows the implementation of complex architectures more cost-effectively than hardwired control. [2]

These horizontally microprogrammed instructions interpreted the architectural instruction set. The VAX 11/750 microcode control program had an interpreter loop. There could be more than 100 bits in these horizontal instructions with 30+ fields. Horizontally microprogrammed instructions were not in any way reduced. Indeed, reduction would mean paying the decode tax twice.There w"	CalChris	9.588444	-5.6867976	comment	3.0	22.0	1687106659	-10.431734
36382208	"It's also worth noting that ""microco"	"It's also worth noting that ""microcode"" in a modern x86 CPU is not really the same thing as ""microcode"" in an older, ""microcoded"" CPU. What do I mean by this?Some older CPUs were truly ""microcoded."" The heart of the CPU was an interpreter loop which took instructions, then invoked a ROM / microcode routine corresponding to the implementation for that instruction. Each instruction began with the runtime selecting an instruction and ended with the microcode routine returning to a loop. A good example of this is the 8086: http://www.righto.com/2022/11/how-8086-processors-microcode-... . These CPUs worked like a traditional ""emulator.""That is NOT how a modern x86 CPU works. A modern CPU works a lot more like a JIT. In a modern x86 CPU, ""microcode"" runs _alongside_ the main CPU core execution. "	bri3d	9.623811	-5.4616213	comment	3.0	10.0	1687108662	7.6974387
36393429	I wish so much RISC-V to be a succes	I wish so much RISC-V to be a success.Modern and standard ISA, worldwide royalty free (unlike x86 and arm).I'll write my code paths directly in assembly with a conservative usage a macro preprocessor. Take this compilers and language syntaxes planned obsolescence!But I stay humble as I know that without extremely performant implementations (open source/closed source) on the latest silicon process, success will be unlikely or at best somewhat limited.	sylware	9.422314	-5.6758676	comment	3.0	16.0	1687193879	-10.528547
36397706	Fascinating. I wonder why intel neve	Fascinating. I wonder why intel never released “AVX256”. Was it to drive adoption of their new extra wide SIMD hardware? Do the extra instructions add a lot of complexity outside of just the increased register size?Either way I recently had to write a SIMD implementation in both SSE (Intel) and Neon (Arm). This was my first time writing SIMD. I found the neon instruction set much more intuitive and complete than SSE. There are all these weird limitations in SSE (such as trying to do a reduction sum across a vector or shifting across vectors) that made it feel incomplete. Never had a chance to try out AVX.	celeritascelery	9.528958	-5.672789	comment	3.0	12.0	1687217059	8.056918
36398189	Does anyone know if AVX-512 actually	Does anyone know if AVX-512 actually makes a difference in workloads that aren't specifically tuned for it?I know game console emulators use it to great effect with significant performance increases.	causality0	9.462823	-5.54988	comment	3.0	12.0	1687220818	8.065173
36401461	At least on x86 the CPUID instructio	At least on x86 the CPUID instruction is part of the problem. Userspace can do feature-detection and then rely on that. But if it's inconsistent between cores then thread migration would cause illegal instruction faults.If the kernel tried to fix that by moving such faulting threads to P-cores that would lead to a memcpy routine with AVX512 instructions cause all threads to be moved off E-cores.So first intel would have to introduce new CPUID semantics to indicate that e.g. AVX512 is not supported by default and then a separate flag indicating that it's specifically supported on this core and then userspace would have to pin the thread if it wants to use them or stick to the default set if it wants to be migratable.	the8472	9.564504	-5.4827075	comment	3.0	16.0	1687252029	8.026647
36409611	How does it boot?Or is RISC-V going 	How does it boot?Or is RISC-V going to follow the same problems as the ARM SBC system where each board has an obscure and unique boot process meaning images need to be carefully pre-built with who knows what installed for each board.	PlutoIsAPlanet	9.427856	-5.636728	comment	3.0	23.0	1687290970	-10.532942
36438652	I don't see why it wouldn't. Ubuntu 	I don't see why it wouldn't. Ubuntu has Intel's Thread Director driver in the latest updates, you should be able to park cores like you do on Windows and recoup a significant amount of the TDP.	smoldesu	9.605392	-5.351791	comment	3.0	10.0	1687466512	8.04981
36444878	So what would be the reasons to run 	So what would be the reasons to run pg as a unikernel? To get max performance on bare metal? Smaller attack surface? Or?	dvdplm	9.918678	-6.224057	comment	3.0	16.0	1687515160	-12.37412
36454774	Can one use QEMU to emulate the 8-bi	Can one use QEMU to emulate the 8-bit RISC? What would that even be used for? Is that some embedded device things?	djbusby	9.803956	-5.496758	comment	3.0	11.0	1687572664	-10.295024
36459049	"""Consistent x86 ISA"" in that slide i"	"""Consistent x86 ISA"" in that slide is clearly a dig at Intel. AVX-512 is still not present in the chips with E-cores."	xeeeeeeeeeeenu	9.440329	-5.440439	comment	3.0	59.0	1687617559	8.053671
36459340	They don't have a lot to brag about 	They don't have a lot to brag about there. I'm on an expensive Thinkpad with an AMD Ryzen 7 PRO 6850H, less than a year old... no AVX512. Chip was released Apr 2022, with AVX&AVX2 but no 512. (Also completely garbage unstable and unreliable driver & firmware support from both AMD and Lenovo, but that's another story).I've been messing with SIMD optimizations recently in a datastructure library I wrote, and as tantalizing as the AVX-512 is, it'll be years before it can be used in production software on a real scale. Introduced in 2017, and still totally unusable in the wild.	cmrdporcupine	9.403527	-5.510809	comment	3.0	39.0	1687619373	8.086638
36462430	(Frequent AVX-512 user, opinions are	"(Frequent AVX-512 user, opinions are my own.)It is time to stop quoting this rant, which is rather far removed from actual practice and reality.Specifically for sorting, Intel's sort and ours can be about 10x as fast as scalar.AVX-512 has high power? Great! Power is work per time. Let's have more of that.
It is _useful_ work per _energy spent_ that we want to maximize, and there scalar code falls flat. Consider that OoO scheduling/control overhead is the real culprit; executing one instruction costs far more energy than the actual operation. SIMD divides that fixed cost over 16 elements, leading to 5-10x higher power efficiency.Top frequency reduction? Not since the first implementation on Skylake, and even there a non-issue, see https://github.com/google/highway/blob/master/hwy/contrib/so"	janwas	9.456332	-5.537896	comment	3.0	25.0	1687638791	8.078655
36465049	"Not sure about the ""ease"" of writing"	"Not sure about the ""ease"" of writing programs that scale efficiently to 128 cores.If we're just running several processes there's not much difference from just running 8 computers each with 16 cores."	geysersam	9.66034	-5.3540835	comment	3.0	10.0	1687665932	7.9930363
36463984	It is a little bit of a weird articl	It is a little bit of a weird article. It seems like they alternate between pointing out that the new Epyc knocks the socks off the Altra Max, but also they the Max is a 2 year old chip and that we don’t know enough about the successor to compare it to the Epyc.It is of course always possible that Ampere has completely shit the bed and the AmpereOne won’t be an improvement, but I’ll give them the benefit of the doubt I guess.	bee_rider	9.39989	-5.227471	comment	3.0	37.0	1687652427	7.7171893
36464979	For chips like these, they are compl	For chips like these, they are complex enough that even benchmarking them to figure out which one is faster is a chore.It depends on how the memory channels work, what kind of optimizations you use in your benchmarking tools, how power delivery is handled on the motherboard, and that's before you consider the way the CCDs or cross-core communication happens (which is unique on each of the major architectures (Xeon/EPYC/Ampere)).Anandtech had a great article comparing previous-generation server chips and found that memory access, L2/L3 access, and other cross-core communication varied dramatically on different chips, and even when BIOS was configured certain ways!	geerlingguy	9.515154	-5.241383	comment	3.0	10.0	1687664766	7.9261146
36475315	I think it’s just about Intel’s inte	I think it’s just about Intel’s intermediate 80bit precision. Anything else?	vlovich123	9.434518	-5.2114825	comment	3.0	11.0	1687749079	7.7948093
36479683	RowPress: Amplifying read disturbanc	RowPress: Amplifying read disturbance in modern DRAM chips [pdf]	todsacerdoti	9.689024	-5.4309683	story	3.0	47.0	1687787645	-13.864216
36490954	Author here - this is very much a wo	Author here - this is very much a work in progress, not that interesting (yet)For those who are interested RISC-V has a cool vector unit - you can write portable code that runs on a whole range of vector units of different sizes (rather than say just AVX-512 - the same code can run on 64/128/256/512/1024/... bit units and just be faster on the faster ones), different from most mainline ones - it's worth a look-see if you're a vector fan	Taniwha	9.448472	-5.722551	comment	3.0	14.0	1687860493	-10.545836
36496200	Finally! I've waited 25 years for so	Finally! I've waited 25 years for something like this, which totally derailed the career I had envisioned for myself. I might even lose the option of making fun of all new chips for providing marginal performance increases for exponentially growing complexity, and have to find a new shtick.A few predictions/concerns:* I can't find a price, so I'm predicting that it will be over $1,000 which will prevent it from going mainstream (and also be ~10 times more expensive than it should be).* There will be poison pill(s). Maybe flash memory that can only be written 1000 times, preventing its use for evolutionary hardware and genetic algorithms. Maybe the place-and-route software won't be good enough to prevent short circuits, so certain configurations will burn up. Maybe some aspect of the softwa	zackmorris	9.430715	-5.1954584	comment	3.0	12.0	1687887596	-10.515423
36517489	Would it be possible to:1. create a 	Would it be possible to:1. create a free dev account2. get the sources3. merge changes into rocky repo4. have the account terminated by the Hat5. goto 1?Subversive, but mostly in compliance with GPL and Red Hat EULA... Ish. Kinda.But I probably made an error here. Who can point it out?	pipo234	9.839973	-5.5415387	comment	3.0	14.0	1688023759	-9.476136
36527237	All of these sound weird to me—most 	All of these sound weird to me—most non-stupid (hello 802.2) protocols and hardware are going to have natural-aligned structure fields, so basically any mainstream (8-bit-byte, two’s complement, etc.) ABI is going to lay them out the same way, packed or not.As for RV64 and Arm64, the layout rules for same-size scalar types in their common ABIs are outright identical aren’t they?We’re (most of us) a long way away from the time where each DOS compiler had its own opinions on whether long double should be 8-, 16-, 32-, or 64-bit aligned and 80 or 128 bits long.	mananaysiempre	9.741979	-5.600462	comment	3.0	17.0	1688075392	-7.7335973
25763061	There was also Intel's whole pursuit	There was also Intel's whole pursuit of frequency--they demoed I think it was a 10GHz chip at IDF at one point (and Itanium was essentially an ILP-oriented design)--and resistance to multi-core. Some of it was doubtless Intel convincing themselves they could make it work. But they were also under a lot of pressure from Microsoft who didn't have confidence that they could do SMP effectively--at least that's what a certain Intel CTO told me. (Ironically, multi-core didn't end up being nearly the issue a lot of people were wringing hands over at the time thought it would be for various reasons.)	ghaff	9.469271	-5.321499	comment	3.0	12.0	1610551365	7.3633246
25786412	It's because in 2021, i386 processor	It's because in 2021, i386 processors are obsolescent. The last non-amd64 processor that ran x86 is the Pentium 4E from 2004, a 17-year-old machine. The packages will still be available as long as there's a maintainer, but it's not worth packaging a full debian release for such a small and shrinking portion of the userbase.	freeone3000	9.692813	-5.3203406	comment	3.0	13.0	1610679243	-7.7928805
25788350	How is it possible that a RISC ISA c	How is it possible that a RISC ISA can be nice to program for in Assembly? Wasn't PPC horrible for this for example?Wasn't the point of CISC to make it easier for Assembly programmers (made sense when x86 and 68k was defined)	bni	9.530368	-5.718211	comment	3.0	12.0	1610699209	-10.518703
25802008	> However due to pressure from custo	"> However due to pressure from customers ARM relented and announced in 2019 that they would allow extensions.The cited announcement here was for ARMv8-M only, the microcontroller variant of ARMv8 for embedded systems.From the linked EETimes article:>> Arm is opening up its instruction set to customers’ customized instructions for Cortex M cores>> For Cortex-A cores, Arm is still a long way from offering any customizable instructionsFrom https://www.arm.com/why-arm/technologies/custom-instructions:> Arm Custom Instructions are a standard feature of the Armv8-M architectureApple M1 is not an ARMv8-M core, it's an ARMv8-A core.I'd very much like to understand the contractual terms under which Apple put custom instructions into their ARMv8-A core, but I don't think it is as simple as ""ARM is t"	rrss	9.616518	-5.1875052	comment	3.0	26.0	1610803032	-7.652338
25804185	No OP but looking for people with an	No OP but looking for people with any reactions on using Docker, Node or Python on the M1? Likely going to get an M1 mini at some point.	coding123	9.5396385	-6.4161463	comment	3.0	13.0	1610821794	9.980548
25804972	> My reasoning here is that understa	> My reasoning here is that understanding a computer at this level really helps understand programming, and perhaps more importantly the translation between what you want a program to do and how the computer would actually do it.This logic would've worked in 1985 and maybe, just maybe until 1993. Modern CPUs cannot be programmed at the level that TTL provides. The µArch itself has long since become an abstraction in and of itself.Depending on the instruction set, there's often no way to predict beforehand how certain data- and code paths will behave. That's why modern compilers use optimisation techniques such as profile guided optimisation.If you think that certain µArchs are easier to understand in that regard than others (e.g. x86 vs ARM), think again. There's inaccessible embedded hard	qayxc	9.692303	-5.618073	comment	3.0	16.0	1610827222	-7.586127
25816227	Jails are nice but it has always see	Jails are nice but it has always seemed like a system where you don’t need another copy of userland would be better (eg sandboxing). It’s wasteful and you might forget to apply security patches.	astrange	9.74999	-6.38656	comment	3.0	16.0	1610925029	10.47663
25833972	Speaking of Itanium, if the x86 dam 	Speaking of Itanium, if the x86 dam has truly burst, I'd much rather see something more like the Itanium than RISC-V. Something new.It's a shame the Mill is so secretive, actually, they're design is rather nice.	mhh__	9.466691	-5.6083503	comment	3.0	14.0	1611068287	-10.467057
25834896	Why are people so hung up about the 	Why are people so hung up about the x86 thing? ARM continues to be sold on because everyone has now understood they don't really matter; they are not driving the innovations, they were simply the springboard for the Apples, Qualcomms and Amazons to drive their own processor designs, and they are not setup to profit from that. ARMs reference design isn't competitive, the M1 is.Instruction set architecture at this point is a bikeshed debate, it's certainly not what is holding Intel back.	stefan_	9.610383	-5.2383294	comment	3.0	19.0	1611072915	-7.7258253
25836766	The real question is, can you compil	The real question is, can you compile for ARM and move the binary around as easily as you can for x86?I'm reasonably sure that you can take a binary compiled with GCC on a P4 back in the day and run it on the latest Zen 3 CPU.	oblio	9.706949	-5.421911	comment	3.0	13.0	1611080794	7.909844
25842710	I would hate to work somewhere that 	I would hate to work somewhere that my changes are deployed within days of writing my code.CI/CD lets you iterate faster and it encourages best practices like proper testing. That said, if you do CI/CD without proper testing then you're going to break production.	shepherdjerred	9.195987	-6.4269238	comment	3.0	11.0	1611118573	6.135479
25844052	I've been at teams and on projects d	"I've been at teams and on projects doing CI and CD for the last... 15 years.Sure, our deployment process was 10-15 minutes in the best of cases (because of serializing deployments for different branches), but where does the author's impression that the collective ""we"" are not doing CD come from?"	necovek	9.200941	-6.4128103	comment	3.0	28.0	1611132358	6.119753
25859656	Pg-Emoji	Pg-Emoji	JoelJacobson	9.808335	-6.2671747	story	3.0	48.0	1611242187	-13.955329
25870492	It is actually worrying that there w	"It is actually worrying that there will be a push to run  a Google-dependent platform on RISC-V's. After all, we know that a lot of functionality is closed into Google Play Services, so that AOSP is to a great extent a bait for being fully tied to Google. Even without relying on closed-source components, you're still relying on Google's interest and good will in maintaining that project.Instead, it's much more important to promote the ""porting"", or rather the adaptation, of Linux and *BSD distributions to work on RISC-V. Like with the Raspberry PI I suppose."	einpoklum	9.383974	-5.665888	comment	3.0	13.0	1611312573	-10.582279
25872902	Depends on which CD you're talking a	Depends on which CD you're talking about. Continuous Delivery: artifacts get delivered and are ready to deploy when someone is ready to do it. Continuous Deployment: built artifacts get deployed automatically.	dunreith	9.22789	-6.3486686	comment	3.0	11.0	1611332084	6.181428
25872947	It depends on the nature of the busi	It depends on the nature of the business. My experience (regulated financial institution) is that both front office and back office have teams which release hundreds of times a week. It does depend on the maturity of the team (including the business which it’s part of), however. And not all teams are at this level, because of their own particular limitations.Don’t do CD as a tech/ego benchmark thing, however (or Facebook/Google envy). Do it if you can agree that this brings some benefits to the business — eg reduced risk, higher throughput, etc. Also delivering faster really forces you to examine your process for bottlenecks and strip away overhead. I really like this line from the blog:> The teams who have achieved CI/CD have not done so because they are better engineers than the rest of 	signal11	9.199521	-6.415267	comment	3.0	10.0	1611332276	6.1593294
25875688	The author makes it pretty clear thi	The author makes it pretty clear this isn't a comparison of ARM vs. x86 but with the specs being nearly identical, I'm finding it very hard not to draw that conclusion. The difference is even larger when you factor in the cost difference.Are there other factors that could explain the large performance gap?	booi	9.669787	-5.3236194	comment	3.0	26.0	1611345884	-7.649707
25876552	Sure, but it's also 20% cheaper to g	Sure, but it's also 20% cheaper to get the ARM setup, so I don't think it's fair to discriminate this way. In the end what matters is what I can buy, and ARM both offers more cores per socket and per dollar.	STRML	9.544165	-5.2183447	comment	3.0	19.0	1611350786	-7.8334007
25941050	This was a problem for us and the la	This was a problem for us and the lack of the ability to switch off PRs continues to cause problems.Community submissions are virtually always throw away, particularly on a complex code base. We ended up saying it's a legal problem [1], which it partly is. But throw away not only because of quality issues, always because of project scope issues.Yes, you feel the project is completely useless unless emoji icons animate in diagrams. That's great, fork the project and kill ours off by adding the feature (which they won't and it won't).When you know what the project scope is, tight enforcement of that scope is critical to prevent the complexity of the project from running away and ultimately killing the project entirely.https://github.com/jgraph/drawio	davidjgraph	9.770729	-6.283156	comment	3.0	16.0	1611837511	4.471985
25954742	> Historically, ASLR on Apple’s plat	> Historically, ASLR on Apple’s platforms had one architectural weakness: the shared cache region, containing most of the system libraries in a single prelinked blob, was only randomized per boot, and so would stay at the same address across all processes.Historically ASLR on Apple’s platforms has had many weaknesses, mostly stemming from poor randomization across many different subsystems :PWhat I’m also really curious to know is what the performance implications will be of isa PAC…	saagarjha	9.745315	-5.542453	comment	3.0	27.0	1611902472	-7.604898
25955435	I believe my analysis is both accura	"I believe my analysis is both accurate and complete; actually, I would dispute many of the things you mention. ""Baking in"" randomization into a binary before installing it is rare; on Apple's platforms ASLR is done at runtime. I am well aware that ASLR does not come for free; it requires position-independent code to function and support from the kernel to do randomization (for image base addresses and anonymous mmaps) and a dynamic linker aware of how to apply relocations. On iOS PIE code has been required for many years, and the various OS subsystems are not only aware of ASLR but ensure validity of code signatures regardless of load address. I suspect the expensive process that you are referring to is shared cache prebinding, which was never a thing on iOS AFAIK and is no longer used on "	saagarjha	9.931833	-5.5555663	comment	3.0	16.0	1611910840	-7.7842374
25958256	Somebody please tell me how many Res	Somebody please tell me how many ResNet50 inferences you can do per second on one of these chipsHere is the standalone AVX-512 ResNet50 code (C99 .h and .c files):https://nn-512.com/browse/ResNet50Oops, AMD doesn't support AVX-512 yet. Even Zen 3? Incredible	37ef_ced3	9.339101	-5.407975	comment	3.0	10.0	1611934398	7.987536
25959865	"Thanks for the ""hwloc"" tip. I hadn't"	"Thanks for the ""hwloc"" tip. I hadn't thought about that.I was thinking of doing something like that. Weirdly I got sustained throughput differences when I killed & restarted fio. So, if I got 11M IOPS, it stayed at that level until I killed fio & restarted. If I got 10.8M next, it stayed like it until I killed & restarted it.This makes me think that I'm hitting some PCIe/memory bottleneck, dependent on process placement (which process happens to need to move data across infinity fabric due to accessing data through a ""remote"" PCIe root complex or something like that). But then I realized that Zen 2 has a central IO hub again, so there shouldn't be a ""far edge of I/O"" like on current gen Intel CPUs (?)But there's definitely some workload placement and I/O-memory-interrupt affinity that I've"	tanelpoder	9.33141	-5.2066655	comment	3.0	13.0	1611941344	7.967208
25967201	Move over, ARM: BeagleV is a $150 RI	Move over, ARM: BeagleV is a $150 RISC-V computer designed to run Linux	mardiyah	9.5325985	-5.3952966	story	3.0	16.0	1611993352	-10.506244
25974915	I'm not clear: Is this proposing tha	I'm not clear: Is this proposing that we make risc-v CPUs that also perform the work of a GPU, or is this a way to make a risc-v GPU (standalone)?	yjftsjthsd-h	9.340078	-5.613354	comment	3.0	19.0	1612057149	-10.565409
25976234	Prevous attempts at taking a regular	Prevous attempts at taking a regular CPU architecture and turning it into a GPU haven't worked so well --- it's what Intel attempted many years ago --- so I'm not too optimistic about how this will turn out. Then again, the boring and uniform nature of RISC-V may be more suitable to mass parallelisation in a GPU than as a CPU.The name is slightly reminiscent of https://en.wikipedia.org/wiki/File:RIVA_TNT2_VANTA_GPU.jpg	userbinator	9.333284	-5.5909376	comment	3.0	17.0	1612070247	-10.590017
25990589	Imagine a Red Hat evil twin, develop	Imagine a Red Hat evil twin, developing an Arm64 port behind the closed doors, releasing it under SSPL, requiring a CLA and not accepting merge requests for a potentially paid feature, Windows on Arm64 support.	andrewshadura	9.716656	-5.2916346	comment	3.0	38.0	1612199481	-7.8446546
25992848	Java for ARM is really exciting. I'm	Java for ARM is really exciting. I'm wondering however how Java Memory Model implementation performs on ARM.JMM offers pretty strong guarantees via the fundamental happens-before relationships in program behaviour. It's relatively easy to implement on x86's strong TSO, but ARM is extremely problematic to offer the same guarantees on.Can't wait to run some concurrency benchmarks on this platform.	bitcharmer	9.767607	-5.4166107	comment	3.0	15.0	1612209085	-7.736143
25995551	On that subject, as someone that kno	On that subject, as someone that knows nothing about either POWER (or Aarch64), I'm curious if anyone could describe the ways in which they are different?	dralley	9.664311	-5.3696833	comment	3.0	11.0	1612221978	-7.6381307
26002757	"""Overall, RISC-V will lead in a revo"	"""Overall, RISC-V will lead in a revolution for nationalist vanity CPUs (think Loongson; no one will run them but for show and perhaps a niche of radical ideologues).""With the US-China tech war that has obviously changed.The US has demonstrated an ability and a willingness to prevent China from using highend fab and ARM thus forcing China to invest massively in chip production.That is why RISC-V with its free ISA has its moment now.Not because it is novel from a technical perspective."	throwaway4good	9.352243	-5.663595	comment	3.0	14.0	1612282446	-10.584607
26003257	Apple M1 is not RISC V, it’s Arm and	Apple M1 is not RISC V, it’s Arm and it’s heavily tweaked	mromanuk	9.396417	-5.5690794	comment	3.0	12.0	1612284501	-10.5829735
26005871	I'm not talking about parallel decod	I'm not talking about parallel decode. I'm talking about the fetchers feeding the decoders. How does the fetcher know where the instruction boundaries are if you have variable-length instructions? My understanding is that x86 is the worst here - while x86 gets broken down into RISC-like uops so the overall x86 hit isn't large, the fetcher is extremely complex & slow to try to get back some parallelism that x86 encoding loses. The compressed version of these instructions seems similarly complicated since the length of the instruction is dependent on the data operands to the instruction.Can you help me correct my understanding of the situation if that's where I'm wrong or what additional details I may be missing? I'm not a CPU architecture expert by any means - just an enthusiast.	vlovich123	9.764373	-5.7289166	comment	3.0	12.0	1612296370	-7.79727
26006190	At what point did the smiley face re	At what point did the smiley face reverse? It seems anyone under 24-ish uses (: where as I know it as :)	jvanderbot	9.818985	-6.244172	comment	3.0	16.0	1612297770	-13.95495
26016839	I had to unsub (having been a member	"I had to unsub (having been a member for years) because my homepage was full of, ""WE ARE HOLDING:diamond: :hands:!!!!I :diamond:  LOVE :hands: THIS :diamond:  STOCK :rocket::rocket::rocket::rocket::rocket::rocket:"" posts with 50k upvotes and a list of gold a mile long.Edit: looks like emojis are stripped"	mywittyname	9.795555	-6.2639165	comment	3.0	11.0	1612375547	13.023791
26017966	Aha, I only compile on ARM so I got 	Aha, I only compile on ARM so I got no room to increase RAM...Is it the same with g++? I have 4GB so I should be able to compile with 4 cores, but the processes only fill 2-3 cores even when I try make -j8 on a 8 core machine and then locks the entire OS until it craps out?!Something is fishy...	bullen	9.786883	-5.3571033	comment	3.0	12.0	1612380341	7.883169
26018439	Where can you get decent ECC ram for	Where can you get decent ECC ram for a reasonable price?  I was on the hunt recently for ECC RAM for my new desktop and I gave up and pulled the trigger on low latency non-ECC RAM.  Availability seems to be pretty terrible at the moment.	bmurphy1976	9.467187	-5.474923	comment	3.0	16.0	1612382650	8.211888
26018992	You can get ECC UDIMMs from Supermic	You can get ECC UDIMMs from Supermicro. They are rebranded Micron DIMMs. ECC memory is not going to go as high of frequencies as you might be looking for. They will only go up to the officially validated speed of the CPUs. https://store.supermicro.com/16gb-ddr4-mem-dr416l-cv02-eu26....	55873445216111	9.474957	-5.469858	comment	3.0	10.0	1612385770	8.169166
26019170	> most of the compute time spent is 	> most of the compute time spent is in serializing and deserializing data.This is to be viewed in light how hardware evolves now. CPU compute power is no longer growing as much (at least for individual cores).But one thing that's still doubling on a regular basis is memory capacity of all kinds (RAM, SSD, etc) and bandwidth of all kinds (PCIe lanes, networking, etc). This divide is getting large and will only continue to increase.Which brings me to my main point:You can't be serializing/deserializing data on the CPU. What you want is to have the CPU coordinate the SSD to copy chunks directly -and as is- to the NIC/app/etc.Short of having your RAM doing compute work*, you would be leaving performance on the table.----* Which is starting to appear (https://www.upmem.com/technology/), but tha	BenoitP	9.8645	-5.2881665	comment	3.0	10.0	1612386733	8.070284
26029112	the diff-based code review emphasize	the diff-based code review emphasizes very local changes to code. it inherently directs one's attention toward what has changed, rather than how the changes affect the larger system. I notice this a lot with the (browser-based) tool we use at work. if I expand the view to see the whole file, rather than just the diff, it tends to make the page lag.	leetcrew	8.752763	-6.4297104	comment	3.0	19.0	1612468679	-11.690815
26029869	Everything old is new again.  They t	Everything old is new again.  They tried this with FB-DIMMs in the early 2000s and it didn't go well:https://en.wikipedia.org/wiki/Fully_Buffered_DIMMThat SERDES chip unavoidably increases latency, roughly doubling it.  This isn't likely to catch on as the only kind of DRAM in the system; latency is too important.Maybe we'll see successful systems with two levels of DRAM: small low-latency parallel DRAM and a large heap of higher-latency serial DRAMs.  That's plausible.	KirillPanov	9.79585	-5.254346	comment	3.0	12.0	1612473233	7.999938
26039443	I also wrote a lot of 6809 assembly 	I also wrote a lot of 6809 assembly in the 80s- for broadcast character generators.  I wrote a multi-tasking operating system for it at one point- I used the DP register to point to per-task local storage (exactly like errno in multi-tasking UNIX).My co-workers went nuts with the PC-relative capabilities, but I didn't bother- those addressing modes were pretty slow.We had a cool piece of hardware: an in-circuit emulator.  The 6809 version of this one:http://www.decadecounter.com/vta/articleview.php?item=1064That thing was the bomb, because it had trace memory so you could watch what led up to an interrupt causing your system to crash.  Non-symbolic though, you needed the linker map and assembly listings by your side to do anything.	jhallenworld	9.623436	-5.271536	comment	3.0	19.0	1612549124	-7.522342
26041385	Isn't China pretty heavily invested 	Isn't China pretty heavily invested into MIPS with the Loongson? Is there any good reason for them to drop that for RISC-V?	wk_end	9.347998	-5.67629	comment	3.0	14.0	1612560147	-10.554379
26048863	I guess it only has 2 instructions? 	I guess it only has 2 instructions? Sounds like the ultimate RISC processor.	amelius	9.444284	-5.6917577	comment	3.0	15.0	1612637707	-10.538182
26057163	All things being equal, smaller code	All things being equal, smaller code is better[1]. Of course, if things are not equal, and loop is slower than building it yourself, then build it yourself except where you're size constrained.Also, you really have to benchmark these things to know for sure, and it can change between processor generations and the author couldn't have tested Zen 3 in 2003; and we'll have a hard time testing Pentium M in 2021.[1] Memory bandwidth is limited, cache sizes are limited, even though both are huge. Otoh, the quantum of useful savings is a cache line, 64 bytes on modern amd64 if I'm reading correctly. If you save some bytes, but not a cache line, it probably doesn't help anything. If you only save one cacheline, the difference will likely be hard to measure, but could be measurable depending on cir	toast0	9.364891	-5.2644796	comment	3.0	18.0	1612724248	7.9649034
26109821	Out of curiosity, are you avoiding a	Out of curiosity, are you avoiding a filter with the emoji thing ? It took me a while to get it...	simlevesque	9.8022	-6.266826	comment	3.0	12.0	1613093316	13.021698
26116759	Can you name any small arms manufact	Can you name any small arms manufacturer who has introduced a successful, innovative design in the past 50 years? The design space seems pretty well explored at this point.	kec	9.494538	-5.192802	comment	3.0	16.0	1613154258	-7.6385446
26135670	It's a huge claim to say that $100B 	It's a huge claim to say that $100B extra couldn't have resulted in a speed up.What makes you so sure of that? What's the manufacturing bottleneck that an extra $100B up front couldn't parallelize?I just have trouble believing that without some evidence?	feral	9.923352	-5.4120073	comment	3.0	16.0	1613332731	8.111016
26136456	> ECC is used as the cryptographic k	> ECC is used as the cryptographic key algorithm in Bitcoin because it potentially can save ~90% of the resources used by a similar RSA system.But bitcoin is a waste of resources by design. The whole point is to waste resources.	speedgoose	9.471728	-5.5203466	comment	3.0	10.0	1613338306	8.3750105
26142285	Unikraft: Posix-Like Unikernel	Unikraft: Posix-Like Unikernel	pjmlp	9.913884	-6.2407246	story	3.0	54.0	1613393921	-12.3877
26143439	"I know about ""embarrassingly paralle"	"I know about ""embarrassingly parallel"" problems, and the thing is, they're only ""embarrassingly parallel"" to solve in math.When programming the level of friction is from annoying to high unbearable, depending on the programming language. It should be trivial to implement these solutions, as trivial as the sequential solutions.It's not. Until this is the case in mainstream programming languages, I doubt we'll have CPUs with 1000 cores in our smartphones or laptops. I mean, we'll have them but they'll be useless because 99% of software today is practically single-threaded. The reason multiple cores are good for laptops, for example, is because we're multi-tasking between multiple applications, not because those cores are frequently used by day-to-day apps. I'm talking about random small apps"	oblio	9.831574	-5.5927505	comment	3.0	13.0	1613402054	8.369599
26150093	> The biggest thing that doesn't run	"> The biggest thing that doesn't run properly on here is Emacs. I am able to get a version of it via Rosetta, however there are weird hangs that will randomly eat up all my input while I am in flow. This is undesirable to say the least.This sounds a lot like the kind of stutter Dolphin's dynamic recompiler used to suffer when it first discovered a new shader.IIRC, for faster boot times, Emacs binaries burn in some kind of low-level memory-image that gets dumped into an mmap region and then ""revivified."" I wonder if that's what Rosetta is choking on.If so, I wonder whether, until an actual AArch64 build is available, it'd be possible to work around this problem by just rebuilding Emacs (for x86!) without that optimization enabled."	derefr	9.761243	-5.351259	comment	3.0	10.0	1613440985	-7.815906
26170421	It's funny how they targeted 32 bit 	It's funny how they targeted 32 bit x86 instead of just going straight for 64 bit. I wonder what drove that decision.	johnklos	9.840126	-5.317852	comment	3.0	18.0	1613590133	-7.8762426
26181742	Binning chips for yield is different	Binning chips for yield is different from artificially crippling chips. There's nothing wrong with taking an 8-core CPU with a defect in one core and selling it as a 6-core part, or underclocking it until all 8 cores are stable and selling it as a slower part. The odious part happens when fab defect rates drop and yield improves, so basically all the dies can function as 8-core chips. When that happens, Intel et al. start disabling perfectly functional cores to artificially constrain the supply of high-end parts. That's a pretty clear cut market failure that's only possible because the barriers to entry are so high.The most extreme instance of this that I'm aware of was when Intel sold a ~$50 piece of software that would unlock the rest of the L2 cache on a specific low-end processor model	wtallis	9.352895	-5.208554	comment	3.0	17.0	1613665300	7.784732
26191454	For software engineers wanting to ge	For software engineers wanting to get into hardware design, the most important thing to remember is that it isn't software, despite feeling a bit like writing software. Writing instructions and describing hardware are very different, regardless of how much a HDL may try to hide that difference with similar looking constructs.	NextHendrix	9.110264	-5.488659	comment	3.0	11.0	1613729921	8.610157
26244947	I remember reading some story way ba	I remember reading some story way back with some ... Sony exec? Someone saying that there were people writing engine code in Excel to be able to track the co processors and get the timing right.Does anyone know of the truthiness of such a story? I'm learning FPGA design and even there, when timing is pretty controlled, people end up recommending design patterns where you gate stuff similar to how you would do it in general software design (expecting one branch to go faster than the other, etc)	rtpg	9.233495	-5.3872833	comment	3.0	19.0	1614126375	8.223367
26261830	I wish there were a good tutorial ab	I wish there were a good tutorial about FPGA development using version control tools. It’s easy having Vivado project with couple source files, but totally uncool using block design. Especially with my own IP blocks.	lnsru	9.07863	-5.3827705	comment	3.0	11.0	1614252535	8.42838
26274638	This article didn't mention PIM (pro	This article didn't mention PIM (processing in memory) which is a way of keeping the established general purpose CPU model and accelerating it by simply adding processors directly into RAM. The compute power scales with the size of your dataset. You also benefit from greater memory bandwidth and lower power consumption.Here is an existing implementation: https://www.upmem.com/	imtringued	9.775255	-5.3661857	comment	3.0	10.0	1614346856	8.075719
26277657	Raw sales numbers are going to be bi	Raw sales numbers are going to be biased because ARM is like Zerg and x86 is Protoss. In the ARM world there isn't the same concept of a central processor so normally lots of chips get built into each individual device.ARM has also been historically used most often on proprietary systems you need authorization to develop for. So it's made less sense as a target for open source tooling hack projects like this one.ARM also has so many sub-targets that it's almost like a coalition of ISAs rather than a unified one like x86. So adding ARM support to Actually Portable Executable might not be as simple as including an ARM build in the binary. We might need to have multiple ARM builds for its microarchitectures. Because ARM users want resource efficiency and they're not going to be happy with a g	jart	9.70393	-5.240329	comment	3.0	10.0	1614362129	-7.7499413
26286183	At a company I used to work for, if 	At a company I used to work for, if someone left their computer unlocked, we'd send the donut emoji into the #everyone channel on slack from their computer, and they'd have to buy donuts for the office	eat_veggies	9.750021	-6.234479	comment	3.0	10.0	1614445597	9.165737
26286292	Short story: data is aligned in a wa	Short story: data is aligned in a way that favors batch processing. Less branching, great setup for SIMD or GPU processing.	DominikD	9.212623	-5.393315	comment	3.0	14.0	1614446457	-9.107183
26291486	ROG AI Overclocking on Linux	ROG AI Overclocking on Linux	dragon-rabbit	9.370493	-5.222818	story	3.0	13.0	1614498246	7.9135013
26293075	Please just use text and limit yours	Please just use text and limit yourself to one or two relevant images, so it doesn't take forever to load. Badges may look cool to some people but they are mostly just useless clutter. And if there's a single emoji in there, chances are I'll think it over before using whatever you're developing.	ajfjrbfbf	9.80483	-6.25677	comment	3.0	12.0	1614517031	-13.954417
26295820	I don't think it's a good comparison	"I don't think it's a good comparison. The architectures mentioned in the
pyca/cryptography repo are:- Alpha: introduced 1992, discontinued in the early 2000s- HP/PA: introduced 1986, discontinued in 2008- Itanium: introduced 2001, end of life 2021- s390: introduced 1990, discontinued in ~1998- m68k: introduced 1979, still in use in some embedded systems but not
  developed at Motorola since 1994.ARM was once not as popular as it is nowadays but it was never moribund and in my experience has always had decent tooling and compiler support.
Furthermore I'm sure that if tomorrow HP/PA makes a comeback for some reason,
LLVM will add support for it. Out of the list I'd argue that the only two who
may be worth supporting are Motorola 68k and maybe Itanium but even then it's
ultra niche.I personal"	simias	9.772431	-5.4800925	comment	3.0	22.0	1614537528	-8.137598
26299572	I'm pretty sure no one is running mi	I'm pretty sure no one is running mission/security-critical applications on a 6502.	CorpOverreach	9.539441	-5.324526	comment	3.0	11.0	1614571229	-7.458711
26298793	there's something incredibly comfort	there's something incredibly comfortable about being able to view the instruction set along with affected flags and supported address modes in its entirety on something about the size of an index card	gfody	9.778286	-5.6851425	comment	3.0	11.0	1614561754	-7.2459326
26311361	I am astonished that HARDWARE does n	I am astonished that HARDWARE does not help us much.  When 'everybody' decided going like a bat-out-of-hell was more important that security and safety and easy-to-not-screw-up languages w/garbage collection and capabilities and hw-enforced typing and and ... we end up where we are: a mess that runs fast.   And, specifically, I think that RISC-V rather missed the boat here, by not taking the security/safety banner and leading to a new way of building computer systems.  Instead, we got a different (open) ARMish thing.  Progress...	GeorgeTirebiter	9.417819	-5.5947967	comment	3.0	10.0	1614653279	-10.5461035
26313124	PDP-1 Spotting – The Amherst Mystery	PDP-1 Spotting – The Amherst Mystery	masswerk	9.8180895	-5.3787146	story	3.0	61.0	1614673656	-7.4906073
26323619	Rosetta May Be Removed from M1 Macs 	Rosetta May Be Removed from M1 Macs in Some Regions on macOS 11.3	1123581321	9.797255	-5.323515	story	3.0	32.0	1614735249	7.659333
26332902	As an outsider looking in, it's hard	"As an outsider looking in, it's hard to take this post seriously. There are biases evident, the most glaring of which is the proclamation that ""all of my software 'just works'"" followed by a laundry list of software for which beta versions had to be installed in order to be functional at all (including Docker).It's frankly surprising to me how many hoops people are willing to jump through to use an Apple machine when Docker, arguably the single most important tool many developers use, is just a crappy experience on that platform (ARM or not).M1 from a hardware perspective is neat, but I am not holding my breath that the rest of the industry is going to move towards ARM for regular old PCs. The only reason M1 is viable _at all_ is because of reasonably fast x86_64 emulation. And that requir"	dolni	9.574137	-6.3620076	comment	3.0	17.0	1614798380	10.052862
26341567	Does this verify for side-channel at	Does this verify for side-channel attacks?	amelius	9.811136	-5.6082406	comment	3.0	20.0	1614861555	-5.659385
26341949	This is a good middle ground, but ..	This is a good middle ground, but ...... leakage by timing side-channels depends in parts on how accurate your time-measurements are (e.g.  Javascript's timer resolution was degraded, in order to  make transient failure attacks like Spectre harder [1]).I totally agree with your second point and believe, but cannot prove, that no current processor with any competitive performance is free from timing side-channels, the best we can currently do is put upper bounds on leakage rate. There are just so many other timing side channels, e.g. port contention [2]. They just keep popping up ...Another dimension is the very meaning of thread. Presumably, as an end-user, you care about the threads/processes that the operating systems defines. But they don't map one-to-one to hardware threads, cores etc.	GregarianChild	9.782692	-5.626608	comment	3.0	12.0	1614864012	-5.955083
26343065	I want Chisel to succeed so badly. I	I want Chisel to succeed so badly. I'm so sick and tired of writing VHDL. Verilog is no better.Also it looks like LLHD is perhaps analogous to LLVM in that they offer an intermediate representation instead of providing a language that you code in yourself. Chisel also offers this via FIRRTL [1]. I can't decide whether to be excited about the fact that there are multiple ideas in this space or frustrated that these disparate teams aren't simply collaborating.[1]: https://github.com/chipsalliance/firrtl	gpanders	9.130497	-5.5184402	comment	3.0	10.0	1614869242	8.57627
26344373	I don't think bit errors happen near	I don't think bit errors happen nearly as often as people seem to think on HN. Sure they happen but they're relatively rare, especially on good quality servers. We have ECC/hashing all over the place looking for it at various layers. I bet it's 1 in a trillion emails that get a bit error in the addressing if not more. I have written embedded code (FPGA) that ran for YEARs that has hashing and I could probably count on one hand the number of times we've had to address any issue (always failed hardware) and it was caught every time unless SHA512 has failed us.	stjohnswarts	9.712621	-5.5454597	comment	3.0	10.0	1614875030	8.22584
26363372	Good thing nobody actually uses AVX5	Good thing nobody actually uses AVX512	hnuser123456	9.446205	-5.563711	comment	3.0	20.0	1614985328	8.084306
26363547	Interestingly enough, the AVX512 tes	Interestingly enough, the AVX512 test was the easy win for Intel.Nobody uses it because it wasn't available and, when available, wasn't much faster overall. Now it is.	rbanffy	9.433422	-5.379953	comment	3.0	13.0	1614986449	8.048971
26363905	No ECC support means it's totally us	No ECC support means it's totally useless for workstation workloads.	pdog	9.444863	-5.5137835	comment	3.0	16.0	1614989080	8.297393
26365083	Reminder that Linus is part of the r	Reminder that Linus is part of the reason you and I have a job in the first place.How many people contribute to the linux kernel? Let’s see how quickly you get jaded after dealing with people refusing to read basic instructions.Also, reminder that not every contributor is desirable. Linus has a specific vision and criteria for his project. It’s true he could use kinder language, but I imagine he gets fed up having to deal with this sort of stuff over -decades-.	andrewzah	9.385317	-5.8422136	comment	3.0	18.0	1615003406	4.1918583
26365148	>  Was he level-headed? Talking like	>  Was he level-headed? Talking like that at work might get me fired.In my experience, this is very much a cultural thing.The way Linus talks is the usual way that people talk at most of the workplaces I've been at over the years in Australia. However, we're not exactly known as a sensitive people. If something is crap, we call it crap. It isn't generally taken personally. It isn't seen as overly aggressive. If someone is failing to get a point, they will get called an idiot, but people will continue to explain. It isn't seen as a personal attack, just normal frustration.However, when dealing with other national backgrounds, we're also expected to adapt our behaviour. The number of times I get a 'yes' answer from Asia that absolutely does not mean 'yes' is probably in the high double figur	shakna	9.269232	-5.8969817	comment	3.0	15.0	1615004261	4.3095045
26379883	I did not even know that Linus had h	I did not even know that Linus had his own site. Fantastic. I won’t be watching his videos on Youtube anymore! Hopefully, everyone I watch will have their own websites, so that I don’t have to visit Youtube.	g42gregory	9.279841	-5.8821964	comment	3.0	24.0	1615152084	4.053497
26389463	Why even comment out? We have versio	Why even comment out? We have version control for a reason	ulucs	8.85722	-6.3617644	comment	3.0	12.0	1615227823	-11.740247
26389732	The big innovation in architectures 	The big innovation in architectures is in the SIMD world.AVX512 (x86 512-bit), SVE (ARM 512-bit), NVidia PTX / SASS (32x32-bit), AMD RDNA (32x32-bit), AMD CDNA (64x32-bit).64-bit cores (aka: classic CPUs) are looking like a solved problem, and are becoming a commodity. SIMD compute however, remains an open question. NVidia probably leads today, but there seems to be plenty of room for smaller players.Heck, one major company (AMD) is pushing 32x32-bit on one market (6xxx series) and 64x32-bit in another market (MI100 / Supercomputers).	dragontamer	9.518321	-5.261112	comment	3.0	23.0	1615228943	7.903195
26389773	"""Development of the MIPS processor a"	"""Development of the MIPS processor architecture has now stopped""Is anyone still developing SPARC?"	buescher	9.56247	-5.577874	comment	3.0	16.0	1615229101	-10.384533
26391622	That's how IBM implemented the AS/40	"That's how IBM implemented the AS/400 platform.  Everything compiled down to a processor-agnostic bytecode that was the ""binary"" format.  That IR was translated to native code for the underlying processor architecture as the final step.  And objects contained both the IR and the native code.  If you moved a binary to another host CPU, it would be retranslated and run automatically.  The migration to POWER as the underlying processor was almost entirely transparent to the user and programming environment.https://en.wikipedia.org/wiki/IBM_System_i#Instruction_set"	retrac	9.700384	-5.3407493	comment	3.0	11.0	1615237938	7.708618
26393879	In 2010 MIPS wanted $2 million from 	In 2010 MIPS wanted $2 million from Berkeley to allow them to use the MIPS instruction encodings for processor cores that Berkeley would design entirely themselves. So they made up their own encodings instead.The rest is history.In many ways modern MIPS and RISC-V are pretty much just different binary encodings of the same ideas.[this was already posted as a comment in a thread, but on reflection it probably deserves its own]	brucehoult	9.470465	-5.702531	comment	3.0	17.0	1615251446	-10.450066
26400360	Could Intel adapt a Rosetta 2-style 	Could Intel adapt a Rosetta 2-style approach? Preprocess binaries to replace ancient instructions with modern equivalents, and be able to use smaller decode units? Would the gains be worth the translation requirements?	btown	9.790517	-5.356841	comment	3.0	10.0	1615307128	7.6010847
26413336	Post-Spectre Web Development, Editor	Post-Spectre Web Development, Editor's Draft, 2021-03-10	distortedsignal	9.739764	-5.622581	story	3.0	62.0	1615395390	7.678078
26420721	> Steve Woz's BASIC for the Apple II	"> Steve Woz's BASIC for the Apple II was ""hand-assembled"", as he put it.Very cool - so basically (haha) Woz's integer BASIC was bootstrapped by writing it in assembly language and translating it into machine code by hand.I wonder if someone (Woz?) has written a 6502 assembler in integer BASIC to allow it to bootstrap itself?"	musicale	9.85916	-5.61433	comment	3.0	12.0	1615441859	-7.424252
26423043	oh HN doesn't support emojis - that 	"oh HN doesn't support emojis - that is    g@<unicorn-emoji>.kz

or    g@<unicorn-emoji>"	sixhobbits	9.813131	-6.260661	comment	3.0	14.0	1615463520	13.027565
26423088	Maybe the whole covid thing lowered 	"Maybe the whole covid thing lowered my happiness-level standards, but I find this charming.Also I would be scared to receive actual money from people for something as out of my control as email. I hope the author doesn't get hit by a wave of ""my emoji emails are not being delivered to @commercial-behemoth or @government-branch and I've made my emoji adress my main one and it's all your fault"" a few months down the line."	Toutouxc	9.797329	-6.2261453	comment	3.0	10.0	1615463886	-13.930724
26423161	For the same reason, I hope he doesn	For the same reason, I hope he doesn't support this emoji https://emojipedia.org/star-of-david/ - or else the service would attract customers he might not want to be associated with...	rob74	9.799265	-6.2646313	comment	3.0	11.0	1615464555	-13.951574
26423193	Notice that HN already does support 	Notice that HN already does support unicode: α β γ é ö 本It actively filters out a small part of it, mostly emojis (which I think that it is a good thing to do).	enriquto	9.882904	-6.2475443	comment	3.0	18.0	1615464820	13.011224
26423642	What you say is entirely true. But i	What you say is entirely true. But in practice, this is for fun, no one gonna use their emoji email for anything important. But it's great to have an emoji email to give to medium when they ask for it? Isn't that great.	kureikain	9.796378	-6.268424	comment	3.0	23.0	1615468713	-13.958519
26424647	Why stop at emojis? Why use the aube	"Why stop at emojis? Why use the aubergine emoji when you can instead use ancient Egyptian hieroglyphs[1]? There is even an anti-aubergine [2]!In my opinion there is an untapped marked here. And it also is a ""full circle"" moment - i bet in the next millennium emojis will also be counted as hieroglyphs.1: https://unicode-table.com/en/130BA/2: https://unicode-table.com/en/130B9/"	altgans	9.821074	-6.264217	comment	3.0	11.0	1615474772	-13.965487
26424671	That UI is hilarious (for a given va	"That UI is hilarious (for a given value of hilarious) in the sense that the search for emojis uses whichever input language you're using, even if your UI language is something else.So, for instance to find the light bulb emoji, I need to start typing ""valo"" (light in Finnish), which really threw me off at first."	akx	9.819971	-6.2539606	comment	3.0	13.0	1615474915	12.980859
26426126	Can anyone explain the potential ben	Can anyone explain the potential benefits of accelerating electronics simulation?Do they want to generate efficient FPGA programs?	kumarvvr	9.190163	-5.2526784	comment	3.0	17.0	1615481606	8.009288
26450081	"""Big Brother Inside"" for just a uniq"	"""Big Brother Inside"" for just a unique id? What should we say now about Intel Management Engine?"	illys	9.428413	-5.1944857	comment	3.0	18.0	1615670283	7.736488
26451193	> The CPU emulator, ARMeilleure, emu	> The CPU emulator, ARMeilleure, emulates an ARMv8 CPU and currently has support for most 64-bit ARMv8 and some of the ARMv7 (and older) instructions, including partial 32-bit support. It translates the ARM code to a custom IR, performs a few optimizations, and turns that into x86 code.Interesting... since .Net is cross-platform and can run on ARM, if it's running on an ARM processor does it just run the instructions directly?	whoisthemachine	9.704353	-5.434216	comment	3.0	19.0	1615678192	-7.8078127
26451364	Why wouldn't one create and emulator	Why wouldn't one create and emulator for this using QEMU? Couldn't that be possible? Doesn't a bunch of hardware faking have to be rebuilt in C# that QEMU already does (well¿)?  Or is it too hard to introduce custom hardware/firmware (like this audio stuff) into QEMU?	edoceo	9.937128	-5.4096394	comment	3.0	12.0	1615679831	-8.254262
26470472	hardware wise.  use a bsd. FreeBSD. 	hardware wise.  use a bsd. FreeBSD. there are reasons why hardware vendors are almost 100% BSD based.Its rock solid and you can depend on it being engineered well.Snaps , docker, and various other solutions are symptoms of a problem not a solution.  The problem is userland is in a complete mess in linux.  Fix the kernel and userland together, and everything flows.	JediPig	9.833113	-6.238763	comment	3.0	13.0	1615849506	10.629169
26473220	I think it was a mistake for Intel t	"I think it was a mistake for Intel to try to provide user-level hardware random number generation.They probably did this for speed. Faster than library calls or system calls.It's apparently not an easily solved problemApparently too hard for the clowns at AMD. AFAIK it's a ""solved problem"" on Intel hardware. (Has there ever been a problem with the hardware in any Intel CPU?)We wouldn't be having this discussion if AMD hadn't royally fucked this up."	PhantomGremlin	9.311517	-5.237668	comment	3.0	10.0	1615871136	7.8738747
31049867	Meh, the few workloads that benefit 	Meh, the few workloads that benefit from AVX-512 would be better off on a GPU.Also note that it wasn’t well received 2 years ago. Example: https://news.ycombinator.com/item?id=23809335	NavinF	9.279444	-5.246119	comment	3.0	20.0	1650088192	8.061423
31079956	I wouldn't say the x86 is the weirdo	I wouldn't say the x86 is the weirdo in these cases, it's just not a RISC.	aap_	9.528463	-5.602368	comment	3.0	27.0	1650345635	-10.457942
31082861	In essence, it is a RISC since the d	In essence, it is a RISC since the days of Pentium Pro. Each instruction is decoded to several micro-operations and the trick of making the CPU run fast lies in the decoder.This also leads to situations where many instructions in x86 asm will run faster than fewer complex instructions which the decoder may not decode to its most optimal micro-operations sequence.	lynguist	9.544369	-5.683125	comment	3.0	16.0	1650375292	-10.517351
31088274	> ARM introduced Thumb-2, with a mix	> ARM introduced Thumb-2, with a mix of 2-byte and 4-byte instructions, in 2003. PowerPC and RISC-V also [...]x86 is still the weirdo. Both Thumb-2 and the RISC-V C extension (I don't know about PowerPC) have only 2-byte and 4-byte instructions, aligned to 2 bytes; x86 instructions can vary from 1 to 15 bytes, with no alignment requirement.	cesarb	9.574239	-5.5716553	comment	3.0	12.0	1650398740	-10.380976
31121024	RISC-V instructions are variable len	"RISC-V instructions are variable length, from 16 bits up to 192 bits[0].  The instruction stream is self-synchronising though so from a hardware decode point of view it's not a problem, unlike x86.[0] See ""Expanded Instruction-Length Encoding"" in the user spec."	rwmj	9.511939	-5.7468433	comment	3.0	10.0	1650632114	-10.520478
31126694	> Even though incl is a single instr	> Even though incl is a single instruction, it's not guaranteed to be atomic. Internally, incl is implemented as a load followed by an add followed by an store.I've heard the joke that RISC won because modern CISC processors are just complex interfaces on top of RISC cores, but there really is some truth to that, isn't there?	VyseofArcadia	9.494207	-5.7144914	comment	3.0	18.0	1650654886	-10.495589
31138389	"""generally relating to ASIC design k"	"""generally relating to ASIC design kits and things like Flash and memory IP""Even if a hardware design is open source, and even though we do have open source design software, it's still difficult to produce a non-trivial design using only open source software, and without using any proprietary modules.Proprietary FPGA and ASIC design software has something like a hardware version of software libraries to provide many common functions.For instance taking the example they gave right there, if you wanted to interface with a flash memory chip or controller, you wouldn't design your own flash interface from scratch just from reading a reference for the protocol, the same way you wouldn't invent your own compression algorithm or tcp stack, you'd use a flash interface module that someone else('s b"	Brian_K_White	9.102536	-5.2948036	comment	3.0	12.0	1650746976	8.308005
31173989	95% of the commits on my personal op	95% of the commits on my personal open source projects use emoji commit messages. https://github.com/transitive-bullshit/commit-emojiPRs matter a lot more than commit messages, especially if you're squashing + merging / rebasing.	transitivebs	9.758498	-6.2879567	comment	3.0	13.0	1651012254	-13.980758
31209072	I understand where you're coming fro	I understand where you're coming from, but I don't think you have the entire story;x86 is old and massive. You're correct, it has hundreds upon hundreds of instructions, many of which require hardware accommodations that can be fairly expensive to implement on-die. On top of that, it has a bevvy of ISA extensions like SSE and AVX that require even more hardware, and can drive complexity even further.The issue is that ARM is getting to the same point. ARM is no longer RISC; it's instruction set is anything but reduced. Much like x86, it has hardware-specific instructions that correlate to esoteric software features like Javascript execution or OS sandboxing. It also has lots of extensions like NEON, as well as Apple-specific ones that cannot be open sourced or replicated by third parties th	smoldesu	9.670106	-5.343562	comment	3.0	10.0	1651257552	-7.721146
31207941	take my comment with a bag full of s	take my comment with a bag full of sand, i am no expert, stillwhen you talk about ARM, you have to license designs from the ARM, inc. Apple with its apple silicon is licensing from ARM the designs and IP from them.with RISC-v, there is no company to hold you hostage for designs and all. its all open source so you can build your own chip, own design, own tech, everything.this also means i assume that in the long run, if RISC-v and ARM are on equal footing, RISC-v would be more freer, cheaper because there is no licensing and other corporate stuff to go through like with ARM, inc	2Gkashmiri	9.404807	-5.578512	comment	3.0	15.0	1651252430	-10.537422
31220824	"> ""realistic""I guess you mean skeuom"	"> ""realistic""I guess you mean skeuomorphic, with heightened 3D presence caused by heavy use of light and shadow - roughly, the sort of effect you would get from a static rendering of a cheap 3D model in a Unity mobile game.I agree with you, although I will say that the current version of the Noto Color Emoji font is (IMO) the best up-to-date color emoji, because it mostly eschews this fake realism that feels uncomfortable and disconcerting in other emoji fonts. I'd prefer hyper-stylized ""blobs"", but I think they deserve some credit for avoiding the worst of skeuomorphic design.See for example the ""realistic"" 3D rendering of the hand on the Apple emoji for ""thinking face"", it's firmly in uncanny valley for me. [1] The Noto emojis remain fairly stylized without being hideous like the Microso"	bscphil	9.800012	-6.2511945	comment	3.0	23.0	1651364187	-13.956619
31221280	Unicode already has a way to specify	Unicode already has a way to specify that emoji should be rendered black-and-white for consistency with surrounding text: affixing the combining character U+FE0E VARIATION SELECTOR-15 (examples[0]). Some touch keyboards have the text-style variations in the flyouts.This only works on emoji for which a variation sequence is defined. Some emoji render the text presentation by default; you can choose the emoji presentation for those using U+FE0F VARIATION SELECTOR-16. Sequences also exist for ideographic variations like single- or double-storey 'a' and 'g', unified CJK, and miscellaneous ones such as serifs for certain mathematical characters.[1][0] https://en.wikipedia.org/wiki/Miscellaneous_Symbols_and_Pict...[1] https://unicode.org/faq/vs.htmlI find this tool handy for listing the Unicode 	mgdlbp	9.908899	-6.2481008	comment	3.0	14.0	1651369083	-13.926055
31225046	> vector instructions are fundamenta	> vector instructions are fundamentally necessaryFor which percentage of users?> AMD is actually adding AVX-512Which is irrelevant to in-market support for that instruction set.	mdb31	9.516512	-5.615694	comment	3.0	13.0	1651413498	8.099106
31225889	AVX-512 finally gets a lot of things	"AVX-512 finally gets a lot of things right about vector manipulation and plugged a lot of the holes in the instruction set.  Part of me is upset that it came with the ""512"" name - they could have called it ""AVX3"" or ""AVX Version 2"" (since it's intel and they love confusing names)."	pclmulqdq	9.481904	-5.6258144	comment	3.0	12.0	1651419408	8.113595
31224807	It is utter nonsense, let me show wh	"It is utter nonsense, let me show why:1: Acquire a license for ARM/x86/ISA and patents of your choice, at a license fee of 20,000$ / CPU-sized-die.2: (Declare bankruptcy), sell the ""asset"" of being allowed to use the ISA, but not the ""liability"" of having to pay any fees.In other words, it would make literally all contracts meaningless, since you're only ever one (shell) company restructuring away from keeping only the parts of the contract you want, and discarding any obligations."	car_analogy	9.570894	-5.3745465	comment	3.0	15.0	1651411279	-7.6855397
31236093	Ask HN: How do I do a feature reques	Ask HN: How do I do a feature request for GPU support in QEMU	brian_herman	9.894107	-5.395775	story	3.0	7.0	1651504121	-8.370773
31237130	Yes, getting PMCs enabled in VMs was	"Yes, getting PMCs enabled in VMs was just the start, I think the next hardware capabilities to enable are:  - PEBS (Precise/Processor event based sampling, so that we can accurately get instruction pointers on PMC events)
  - uncore PMCs (in a safe manner)
  - LBR (last branch record, to aid stack walking)
  - BTS (branch trace store, "" "")
  - Processor trace (for cycle traces)

Processor trace may be the final boss. We've got through level 1, PMCs, now onto PEBS and beyond."	brendangregg	9.699706	-5.4921684	comment	3.0	19.0	1651508232	4.5329547
31237439	>  insanely cool vector instructions	">  insanely cool vector instructions arm64Which ones would those be?SVE is somewhat interesting, but I've generally found the AVX512 instructions more innovative. I really like AVX512's ""compress"" and ""expand"" instructions, for example... as well as the classic ""vpermb"" (but vector-permutation has been around since SSE and is an old trick: the old pshufb instruction).Since SVE doesn't want to ""set"" its SIMD-width, it seems like these permute instructions (vpermb, or even compress/expand) aren't possible?-------I've always enjoyed Intel's innovative new instructions: PEXT, PDEP, and now AVX512 compress and AVX512 expand.AVX512 also includes gather/scatter (but that's not innovative, been around for a long time but still nice to see it in prosumer systems)"	dragontamer	9.684087	-5.820426	comment	3.0	10.0	1651509551	-10.655275
31259284	interesting anecdotes about argonaut	interesting anecdotes about argonaut design methodology...  pt 2we used the opposite approach to design the Super FX chip (we called it the Mario chip - likely the first ever gpu)Carl & Pete would write code to do 3d math and render polygons... and write and re-write the code hundreds of times, using an imaginary assembler language.   they would invent new instructions on the fly to let their code get tighter.  they would keep coming up with new instructions, new registers, new ways of forming instructions and referencing registers etc... until the code was the tightest... and THEN, we designed a microprocessor from scratch to execute those instructions.Also, likely the opposite way that microprocessors were designed... because (in the past) the designers had no idea what their cpus were g	JezSan	9.674489	-5.2175474	comment	3.0	16.0	1651665649	7.493713
31291978	You can experience the magic in the 	You can experience the magic in the open source version: https://source.chromium.org/chromium/chromium/srcTry the powerful search, including free text search, operators like f: or symbol: (the full list of operators can be found at https://developers.google.com/code-search/reference)Then try the references feature by clicking on symbols.	kccqzy	9.025047	-5.957148	comment	3.0	16.0	1651894890	-11.155901
31351278	I've read that the value of avx512 a	I've read that the value of avx512 as separate instructions isn't high, and this kind of confirms it - a 20% speedup[1] over the next best (ns/value) isn't spectacular and seems to bring a large cost in terms of complexity like dropping the clock (and are there really 512-wide paths on the chip?) and just a bunch of new instructions. Perhaps deep pipelining would have been better based on existing instrructions.Can anyone with actual hardware experience comment?[1] Have I got that wrong? Is it 25%(edited to de-screw formatting)*	zasdffaa	9.4461975	-5.5583963	comment	3.0	12.0	1652347226	8.166729
31356904	We should rename original „Linus’s l	We should rename original „Linus’s law” to „Linus’s fallacy” - especially for things related to security.	988747	9.34223	-5.8071876	comment	3.0	13.0	1652375440	-2.2427104
31363160	Parallel yes, as other people mentio	Parallel yes, as other people mentioned, this is almost the entire point of using FPGAs. Regarding Asynchronous, it depends on what you mean. Xilinx(AMD)/Altera(Intel) FPGAs are designed from bottom up to be synchronously clocked. The fabric and tools are designed to use synchronous pipeline registers everywhere to minimize combinatorial logic and increase throughput. You might want to have a design with multiple asynchronous clock domains, but this increases complexity and requires care whenever you want to jump between clock domains. Trying to force asynchronous design into an FPGA seems counter productive. What would be the advantage of asynchronous design?	xodjmk	9.145739	-5.4050694	comment	3.0	19.0	1652414342	8.458945
31363677	> What would be the advantage of asy	> What would be the advantage of asynchronous design?Just the regular advantages, only with FPGA, which means one can choose how logical elements are interconnected, and what's the logic of the chip. Among regular advantages are absence of clocks (less devices, no need to synchronize...) and energy is used when and where the switching happens.A friend of mine unsuccessfully tried to squeeze asynchronous designs into some mainstream FPGA a few years ago. Tooling wasn't cooperative, and when he used some workarounds to avoid generating clocks, it was simply crashing. I don't think it's useless or for lack of trying - but asynchronous circuits in FPGAs are certainly not common.	avmich	9.287901	-5.3680053	comment	3.0	11.0	1652419657	8.440192
31368681	The source is a former Apple enginee	The source is a former Apple engineer (now at Nvidia apparently)https://twitter.com/stuntpants/status/1346470705446092811> arm64 is the Apple ISA, it was designed to enable Apple’s microarchitecture plans. There’s a reason Apple’s first 64 bit core (Cyclone) was years ahead of everyone else, and it isn’t just caches> Arm64 didn’t appear out of nowhere, Apple contracted ARM to design a new ISA for its purposes. When Apple began selling iPhones containing arm64 chips, ARM hadn’t even finished their own core design to license to others.> ARM designed a standard that serves its clients and gets feedback from them on ISA evolution. In 2010 few cared about a 64-bit ARM core. Samsung & Qualcomm, the biggest mobile vendors, were certainly caught unaware by it when Apple shipped in 2013.> > Samsung	kalleboo	9.660879	-5.2130375	comment	3.0	13.0	1652454697	-7.651634
31369620	I'm expecting brutal, decimating, RI	I'm expecting brutal, decimating, RIF across the industry at the end of Q2.	malwarebytess	9.397617	-5.68065	comment	3.0	24.0	1652459295	2.7464626
31370421	RIF is an industry standard term wit	RIF is an industry standard term with a long history. The problem isn’t others speaking unclearly. It’s assuming others are in the wrong rather than being happy to learn something new.	compiler-guy	9.371222	-5.6995907	comment	3.0	14.0	1652463376	1.028716
31385748	I feel that P and E split requires p	I feel that P and E split requires putting an asterisk next to the core count. it is dishonest to sell a CPU with N fully featured cores and M gimped cores as a CPU with N+M cores	throwaway0x7E6	9.554563	-5.316894	comment	3.0	10.0	1652597611	7.9421353
31385762	The goal of this kind of design is M	The goal of this kind of design is M1 like energy efficiency, not performance (I don't know if the Alder Lake P cores can outperform an M1 P core.) M1 has a similar architecture with performance and efficiency cores, but so far I haven't heard of it causing problems for software developers. All versions of macOS that support M1 also have a scheduler that is able to move threads between E and P cores nicely.	quux	9.646814	-5.2512655	comment	3.0	15.0	1652597820	7.9584975
31385780	I very much don't understand why Int	"I very much don't understand why Intel didn't disable AVX-512 on the P cores, unless and until the OS writes to a new MSR that means ""I understand that the P cores can do AVX-512, while the E cores cannot"", and then enable AVX-512 on the P cores.Old OS versions continue to work fine, and newer OS versions can opt into the new world and benefit."	kijiki	9.4534235	-5.5070567	comment	3.0	14.0	1652598147	8.060035
31386115	Indeed, I do sometimes wonder what i	Indeed, I do sometimes wonder what it'd be like if they made the entire processor out of E cores.	xmodem	9.509245	-5.250248	comment	3.0	21.0	1652602843	7.915745
31409003	> Then more expensive versions just 	> Then more expensive versions just get more cores unlocked, higher frequency allowed, etc.That's called binning, the unit goes through some testing and components that don't pass get shunted away (hardware or firmware) because they're known to behave incorrectly. Better that than throwing it into a trash.Blow the fuse/hack the firmware and you can unlock these because the hardware is there, but it's likely that it doesn't operate entirely correctly (especially under duress), even though it may appear to work at first blush.	lloeki	9.43545	-5.2006574	comment	3.0	10.0	1652787754	7.831492
31412490	Developers should just stop putting 	Developers should just stop putting up with this nonsense and start migrating to non proprietary RISC-V boards. We already have low cost options for developers who want to get their feet wet, the moment we start having a decent community around a RISC-V microcontroller, a RISC-V router and a RISC-V dev board then the ecosystem will be very desireable.	HidyBush	9.394142	-5.6130896	comment	3.0	13.0	1652802745	-10.563139
31413688	> Why not allow an x86 application t	> Why not allow an x86 application to open an ARM library if it is actually ARM code at run-time?Because the Application Binary Interface (ABI) of ARM and x86-64 is different. Function calling conventions don't map 1:1, structure layouts may differ, exceptions can't be propagated properly, etc. etc. etc..That's why Rosetta only allows you to mix code of a single architecture in a given address space, so that it can be emulated as a whole. That way all code that's being executed has the same ABI.	EdSchouten	9.789767	-5.3603053	comment	3.0	15.0	1652807785	-7.8499513
31416133	Minor clarification -- the CM1 was t	Minor clarification -- the CM1 was the 4096-processor machine.The CM2 had (well, those delivered to customers, anyway) a minimum of 8,192 processors, and up to a maximum 65,535. I worked on one for a number of years. I heard (but never saw) that for internal development at Connection Machines each developer had a single 512-processor board to work on.You're spot on about the single-bit processor thing though. In their *Lisp implementation, you could declare an integer to be as many bits as you wanted, up to the max 128k bits each processor had.	chris_st	9.492979	-5.24776	comment	3.0	17.0	1652820679	7.7860208
31423552	how did that project ever build on c	how did that project ever build on ci :)	sitzkrieg	9.273781	-6.396082	comment	3.0	12.0	1652885660	6.159385
31440287	The influence of Alpha on modern ins	The influence of Alpha on modern instruction sets like ARM64 and RISC-V is tremendous. It’s just sad it had to die for this to happen.	als0	9.574836	-5.50657	comment	3.0	10.0	1652995099	-8.109073
31440758	> Itanium held the idea that we coul	> Itanium held the idea that we could accurately predict ILP at compile time (when the halting problem clearly states that we cannot).I don't know where these notions are coming from.Compilers can (and do) reorder instructions to extract as much parallelism as possible. Further, SIMD has forced most compilers down a path of figuring out how to parallelize, at the instruction level, the processing of data.Further, most CPUs now-a-days are doing instruction reordering to try and extract as much instruction level parallelism out as possible.Figuring out what instructions can be run in parallel is a data dependency problem, one that compilers have been solving for years.Side note: the instruction reordering actually poses a problem for parallel code.  Language writers and compiler writers have	cogman10	9.666664	-5.7740316	comment	3.0	11.0	1652997962	-7.7840686
31442371	"""Note: Plenty of people will bring u"	"""Note: Plenty of people will bring up the Pentium FDIV bug here, but the reason we didn’t include it is simple: Despite being an enormous marketing failure for Intel and a huge expense, the actual bug was tiny.""The fact that the fault was tiny and that few people were affected is definatly NOT the point.The so-called Pentium 'bug' was the result of fundamentally terrible engineering on Intel's part in that the underlying design wasn't fit for purpose - it wasn't just a bug.It seems to me the authors of this story do not understand the implications of what Intel did was fundamentally wrong in that its math processing was flawed by design from the outset or otherwise they would have included the Pentium in their list.In order to achieve increased math processing speed, Intel broke mathematic"	hilbert42	9.520453	-5.319931	comment	3.0	12.0	1653010487	7.860584
31443394	CS80 indeed. There is an almost iden	CS80 indeed. There is an almost identical patch for the Arturia CS-80v if interested:https://www.synthtopia.com/content/2017/10/19/free-arturia-c...	pjbk	9.584396	-5.2969594	comment	3.0	10.0	1653021356	-7.514385
31470914	But scatter/gather is a primitive op	But scatter/gather is a primitive operation for SIMD, so if you want a RISC-based version of it, that's exactly what you would provide. Having dedicated instructions for specific operations (whether for crc/aes/nnp or whatever) feels like a CISC-based approach, so I think I agree with the GP.RISC vs CISC is about the simplicity of the instruction set, not about whether it's easy to use.	tremon	9.509097	-5.7680173	comment	3.0	11.0	1653242180	-10.51619
31473423	They want to go back to the 70s (not	They want to go back to the 70s (not meant as an insult) and use Cray-style vector instructions instead of SIMD. Vector instructions are kind of like loops in one instruction; you set a vector length register and then all the vector instructions change to run on that much data.That’s ok for big vectors you’d find in like scientific computations, but I believe it’s bad for anything I’ve ever written in SIMD. Games and multimedia usually use short vectors (say 4 ints) or mixed lengths (2 and 4 at once) and are pretty comfortable with how x86/ARM/PPC work.Not saying it couldn’t be better, but the RISCV designers wrote an article about how their approach would be better basically entirely because they thought SIMD adds too many new instructions and isn’t aesthetically pretty enough. Which does	astrange	9.81367	-6.0426784	comment	3.0	28.0	1653258317	-10.522781
31480826	I'd consider it if they supported Sy	I'd consider it if they supported Symbiflow.My vision is: fpga world is now just like microcontrollers were in late 90's: a sea of proprietary inefficient tools. We need the Arduino equivalent for fpga: extremely easy to use and fully FLOSS.	marcodiego	9.102538	-5.352375	comment	3.0	13.0	1653322083	8.375078
31492124	"While initially ""Graviton 3"" has cat"	"While initially ""Graviton 3"" has catched my eye - I didn't know AWS has it (I'm almost not using AWS except DNS), after reading the article, especially part on:> the things which don't work on Graviton 2 — hotplug devices and cleanly shutting down an instance via the EC2 API — also don't work on Graviton 3I've realized, it provides one more evidence of, let's politely say, lack of interest for FreeBSD.May be massive commenting and discussion on HN will make me think otherwise. Or may be lack of comments will prove it even further."	CoolCold	9.524148	-5.2022924	comment	3.0	19.0	1653400396	-8.4080305
31500614	This just reminds me that I have a r	This just reminds me that I have a real 8088 that I don't know what to do with.  Last I knew, it even worked, but it hasn't been turned on in decades so I am not eager to risk it, even if I were to sanity check it for blown capacitors.	Natsu	9.576937	-5.240559	comment	3.0	15.0	1653452981	-7.4964294
31500928	> How a little bit of undervolting c	> How a little bit of undervolting can cause a lot of problems> Modern processors are being pushed to perform faster than ever before - and with this comes increases in heat and power consumption. To manage this, many chip manufacturers allow frequency and voltage to be adjusted as and when needed. But more than that, they offer the user the opportunity to modify the frequency and voltage through priviledged software interfaces. With Plundervolt we showed that these software interfaces can be exploited to undermine the system's security. We were able to corrupt the integrity of Intel SGX on Intel Core processors by controling the voltage when executing enclave computations. This means that even Intel SGX's memory encryption/authentication technology cannot protect against Plundervolt.I tho	Firmwarrior	9.565744	-5.283222	comment	3.0	20.0	1653456608	-5.901392
31501050	The page itself even mentions that i	The page itself even mentions that it's an old exploit, it seems:>  Plundervolt was first reported on June 7, 2019 by a group of international researchers:And that it appears to be fixed?> If you do not use SGX, you do not need to do anything. If you do use SGX: Intel has released a microcode update that - together with a BIOS update - allows disabling of the undervolting interface. The fact that undervolting is disabled will be reflected in remote attestation. More information can be found in Intel's security advisory.	girvo	9.526302	-5.2733603	comment	3.0	16.0	1653457898	-5.8439465
31502070	All DDR5 DRAM ICs have on-die ECC. T	All DDR5 DRAM ICs have on-die ECC. This is new for DDR5.	55873445216111	9.475306	-5.478257	comment	3.0	13.0	1653469394	8.211464
31505296	> I think apple (maybe as just an ar	"> I think apple (maybe as just an arm feature?) can do encrypted pointers, with a per application key tracked by the kernel.ARM has added both pointer authentication codes and memory tagging extensions to their ISA, from (I think) ARMv8.5-A. Apple are the only ones to implement silicon that supports PAC that anyone can buy today but a) this will change fast and b) I might've missed something else.I wouldn't say ""encrypt"". You can still read what the pointer is, you just can't forge it. It is more like a message authentication code, or keyed hash. Confusingly, the ARM ISA suggests you use the block cipher QARMA, a lightweight block cipher of their design. This is not a mistake - from a crypto academic's perspective the distinction between block cipher and hash is not so easy to draw as it t"	zahllos	9.718938	-5.3227696	comment	3.0	11.0	1653489881	-7.5816813
31516143	The problems are power consumption, 	"The problems are power consumption, speed, cost, size, development time, and the difficulty of updates and bug fixes. A modern embedded processor handily solves all of those.Boards full of TTL are a fascinating engineering exercise, but there aren't many applications where they're a better solution.It's also tempting to cheat and solve some of the sub-problems with monostables and analog timers. As soon as you do that you're introducing potential issues caused by temperature drift, component tolerances, and component ageing.A fully clocked solution is always more reliable, but often that means a higher component count and cost.FPGAs have real applications, but they're still harder to develop than code.When I was a student one of the tutors said ""We'll all be doing this in software soon"" - "	TheOtherHobbes	9.11171	-5.3796854	comment	3.0	16.0	1653555186	8.39275
31521880	Hopefully we'll see AVX-512 in Intel	Hopefully we'll see AVX-512 in Intel's little cores soon. Centaur's last CPU architecture proves that it is possible to implement the extension without a huge amount of area [0]. Once that happens, I expect we'll finally consistently see AVX-512 on new Intel processors. The masks really are a huge improvement to the design.AMD should be implementing AVX-512 on their own cores soon as well. Once Armv9 (with SVE2) becomes dominant, we'll pretty much be in a golden age of SIMD.[0]: https://chipsandcheese.com/2022/04/30/examining-centaur-chas...	skavi	9.4394	-5.5291348	comment	3.0	19.0	1653590122	8.052384
31521920	> Could we do better? Assuredly. The	> Could we do better? Assuredly. There are many AVX-512 that we are not using yet. We do not use ternary Boolean operations (vpternlog). We are not using the new powerful shuffle functions (e.g., vpermt2b). We have an example of coevolution: better hardware requires new software which, in turn, makes the hardware shine.> Of course, to get these new benefits, you need recent Intel processors with adequate AVX-512 supportAVX-512 support can be confusing because it’s often referred to as a single instruction set.AVX-512 is actually a large family of instructions that have different availability depending on the CPU. It’s not enough to say that a CPU has AVX-512 because it’s not a binary question. You have to know which AVX-512 instructions are supported on a particular CPU.Wikipedia has a par	PragmaticPulp	9.479793	-5.5747085	comment	3.0	21.0	1653590327	8.14335
31521978	Intel is not dropping support for it	Intel is not dropping support for it on a lot of CPUs.The only thing they've done is disable it in the hybrid Alder Lake cores, presumably because the E-cores couldn't support it (while the P-cores could), and they didn't want to deal with the headaches of ISA extensions being supported only on some cores in the system.	jcranmer	9.45466	-5.3527575	comment	3.0	15.0	1653590628	7.8287067
31524140	> And if ARM beats x86, it won't be,	"> And if ARM beats x86, it won't be, straightforwardly, ""because RISC is better"" – x86 will have lost for business reasons, and it could have gone the other way for business reasons. But the fact that it will have lost to a RISC – that will be because RISC is technically better. That's why there's no CISC competitor to lose to.Yosef must be using a different definition of RISC from Jim Keller, because in Jim’s interviews he says that modern ARM is essentially a CISC processor."	robocat	9.500767	-5.5576334	comment	3.0	35.0	1653604758	-10.496143
31524313	And x86 is arguably a CISC layer on 	And x86 is arguably a CISC layer on top of a RISC processor. I don’t think the divisions of the 90s any longer directly apply.	bombcar	9.551254	-5.5785003	comment	3.0	26.0	1653606061	-10.462564
31540444	> There's a version of this article 	> There's a version of this article without the middle finger emoji.People really get offended by the middle finger emoji? Wow.	adjustno	9.784972	-6.2620063	comment	3.0	14.0	1653746894	-13.9626
31549797	Mini-review: The Clockwork Pi DevTer	Mini-review: The Clockwork Pi DevTerm R-01, or RISC-V on the go	todsacerdoti	9.3888235	-5.6577706	story	3.0	74.0	1653837500	-10.562862
31549809	I thought this was the reasoning beh	I thought this was the reasoning behind Itanium, the idea that scheduling could be worked out in advance by the compiler (probably profile guided from tests or something like that) which would reduce the latency and silicon cost of implementations.However, it wasn't exactly a raging success, with I think the predicted amazing compiler tech not materialising, but maybe it is the right answer, but the implementation was wrong? I'm no CPU expert...	cesaref	9.615939	-5.686619	comment	3.0	15.0	1653837567	-7.6543403
31550346	If you only consider PC/server marke	If you only consider PC/server market then yes. But I'm fairly confident any given household has more ARM chips in it than x86 CPUs.	pointlessone	9.597251	-5.1845236	comment	3.0	15.0	1653841363	-7.7095785
31551895	This is a fantastic program for teac	This is a fantastic program for teaching students about VHDL. You can make some really cool stuff on a 130nm process with 10mm^2 available. Like a full toy SoC. Really cool.	ttul	9.156813	-5.431565	comment	3.0	17.0	1653851355	8.649112
31550267	What about memory contention when ma	What about memory contention when many cores try to write/read the same memory?There is no point to add more cores if they can't cooperate.How come I'm the only one pointning this out?I think 4 cores will max out the memory contention, so keep on piling these 128 core heaters on. But they will not outlive a simple Raspberry 4!?	bullen	9.629017	-5.369739	comment	3.0	11.0	1653840809	8.035376
31577320	> their new arch breaks docker build	> their new arch breaks docker buildsI’ve seen this complaint quite a bit on HN, and I don’t really understand it. Apple helped Docker port over to arm64 on the Mac (which was one of the first pieces of software to use the new fancy hypervisor APIs), and it’s been working for over a year now. If your docker images can’t build on arm64, I don’t really understand how Apple or Docker can make that any easier. Most of the popular images have arm64 builds now, the only holdout I know of is MySQL due to Oracle being Oracle. If you’re building your own images, GitHub Actions and many other CI providers have had ARM64 agents for a long time (and you can build arm Docker images in QEMU super easy on GHA if you need hosted agents).There’s not much of an excuse anymore, and since arm instances are ch	easton	9.564679	-6.382163	comment	3.0	11.0	1654049954	10.083215
31586508	Ask HN: Are 1000+ line Code review n	Ask HN: Are 1000+ line Code review normal?	battery_glasses	8.807252	-6.331583	story	3.0	1.0	1654110202	2.0797658
31622907	I don’t see any mention in the paper	I don’t see any mention in the paper of thermal clock throttling concerns, which can really neuter performance of tools that sustain use of AVX operations over a period of time. For the quick benchmarks presented in the paper, of course it will be faster. What if I’m continuously hammering my CPU with AVX operations? I expect it to severely downclock.	MontyCarloHall	9.447029	-5.52293	comment	3.0	15.0	1654363149	8.026469
31623043	On Ice Lake Xeon the penalty for usi	On Ice Lake Xeon the penalty for using the AVX-512 features on a single core is -100MHz. If we pessimistically use the slowest part Intel sells, that is a 5% performance penalty (2% on their fastest parts). The speedup from this work is 40-60% compared to AVX2. So you'd be a fool to take the side of the folk myth. AVX-512 works.By the way the performance penalty for using AVX-512 on multiple cores when the multiple cores were already active is zero. There is no penalty in most server scenarios.	jeffbee	9.451491	-5.5036163	comment	3.0	10.0	1654363970	8.03217
31628648	This could easily be true, and easil	This could easily be true, and easily have zero impact on anything you are doing.Memory can be assigned to all sorts of things so the impact of a single bit change will depend entirely on what that memory is being used for at that moment.For example, I load a program into memory, but I'm not running all of the code in that program all the time. Let's say the program includes code for exporting a list to excel, but that's a feature I never use.Or it has a procedure which uses a local variable as a loop counter. Outside the confines of that loop the variable is meaningless.Plus its unlikely you are even nominally using all 64g at the same time. The errors might all be happening in unused ram.Even if it flips actual data, it may end up being no more than a typo in a document.So yes, a single 	bruce511	9.827317	-5.6018367	comment	3.0	11.0	1654411637	8.174008
31628315	So what happened is the following:Wh	So what happened is the following:When JEDEC was standardizing DDR5 they mandated on-die ECC which checks for errors that happen while the data rests on RAM. This was done to increase reliability because of high memory density. This is good and every DDR5 module has it.However there’s another ECC: the one where errors are checked each time data is transferred between CPU and RAM. This requires the support of the CPU, the RAM, and the mainboard. This is important for data integrity and every computer that runs for multi-day periods must have it. I’ve found by reading papers about it that 1 bit error per 4 GB RAM per 3 days is guaranteed to happen.If RAM is marked DDR5 it has on-die ECC. If RAM is marked DDR5 ECC it has on-die and transfer ECC. That is what I want and it is not optional at a	lynguist	9.491213	-5.518756	comment	3.0	20.0	1654407193	8.23041
31645304	interesting. so this fixes the major	"interesting. so this fixes the major performance issue by allowing users to install a user installable rosetta inside user created vms.could still end up with some ""works for me"" but still broken on prod issues resulting from the underlying architecture being different (for intel backing infra), and also some questions around how it would work in practice in terms of integrating with production container workflows, but seems like a boon for anyone who is struggling today with intel vm or container performance issues on apple silicon.nice!"	a-dub	9.817606	-5.3674116	comment	3.0	26.0	1654545360	7.6333127
31647003	Docker on macOS already has some kin	Docker on macOS already has some kind of qemu based solution for running x86_64 containers on m1.Potentially this could be used as an alternative?	WatchDog	9.606178	-6.313761	comment	3.0	10.0	1654553257	10.051315
31650191	Somehow, I wish there was an easy wa	"Somehow, I wish there was an easy way to do the opposite: creating and running arm images in intel laptops.
This would allow me to run images easily and safely in Graviton based ec2 instances."	pachico	9.567538	-5.1879325	comment	3.0	12.0	1654579585	-8.1755295
31659121	This part is why I hope x86 has a lo	This part is why I hope x86 has a long life ahead of it. Everybody and their dog have their own standard for things in ARM-land.	emptysongglass	9.665163	-5.3509626	comment	3.0	14.0	1654630684	-7.7157793
31664241	what does this do? i mean can we run	what does this do? i mean can we run x86 programs on say raspberry pi?what about oracle cloudtron alwaysfree vps?	2Gkashmiri	9.748293	-5.307042	comment	3.0	15.0	1654671837	-7.8746023
31694974	Having grokked the abstract, I feel 	Having grokked the abstract, I feel like can speculate a bit as to what is going on. Take this with a grain of salt; I have no clue what has actually been discovered.I believe that the researchers have found a way to remove PAC as a barrier to exploitation by disclosing PAC verification results via speculative execution. This is only useful to attackers going after a target that uses PAC, and those attackers will need to have another vulnerability that enables them to hijack control-flow through modifying pointers to code that are located in memory.The attackers can use this new Pacman vulnerability as a crash-free oracle that says whether their forged pointer worked, and once they find a working one, they can use that to hijack control flow.PAC (or Pointer Authentication) is a security fe	ENOTTY	9.887047	-5.398774	comment	3.0	21.0	1654872469	-7.25065
31696075	Also important to mention that PAC i	Also important to mention that PAC is a new ARMv8.2 feature and previous versions of ARM have no PAC system at all. The only ARM chips with PAC are from Apple and AWS Graviton3 - any other chip has no hardware protections against this.So ultimately, right now, it's just downgrading a very new protection to as if it didn't exist, which is exactly how 98% of ARM chips in the world operate right now. Not great, not terrible, A for effort, was worth a shot, speculative execution breaks everything.	gjsman-1000	9.839301	-5.3378773	comment	3.0	10.0	1654877325	-7.467585
31697984	1. Run arm-based debian using Parall	1. Run arm-based debian using Parallels, headless using `prlctl`.  SSH in and use tmux.2. Everything you install will be arm based.  Docker will pull arm-based images locally.  Most every project (that we use) now has arm support via docker manifests.3. Use binfmt to cross-compile x86 images within prlctl, or have CI auto-build images on x86 machines.That pretty much does it.	tonyhb	9.571336	-6.330674	comment	3.0	10.0	1654887014	10.060983
31724151	To those like me wondering what ISA 	To those like me wondering what ISA it is, the official documentation says:Runs binaries for x86, Arm, and RISC-V in addition to native ISAI am quite a bit skeptical. OTOH, if it were aarch64 compatible with 1024 bit SVE support, it could have a nice potential.	thecompilr	9.526432	-5.585152	comment	3.0	26.0	1655121204	-7.798829
31724279	How does it run native binaries from	How does it run native binaries from other ISA if ILP is supposed to be handled by the compiler…	ip26	9.60998	-5.585575	comment	3.0	23.0	1655121961	-7.770125
31729555	Let me check my spam folder - yeah, 	"Let me check my spam folder - yeah, there are tons of phishing attempts with unusual combinations of hyphens, no hyphens, and company/inc/group that have similar amounts of legitimacy. A domain of coca-colacompany.com doesn't seem that unusual.Oh, you mean the    #:~:text=

URI fragment - yeah, that is weird! I wonder what the function of the :~ emoji is in their CMS. I know from painful experience that XML names can begin with a colon [1]; I fear that an identifier which is only a colon features prominently in their schema...I also enjoyed the line at the bottom, in corporatese nonanswer to the question ""Is caffeine addictive?""> We know that not everyone drinks caffeine and not everyone wants to drink it all the time, so we also offer a range of caffeine-free beverages, including [insert "	LeifCarrotson	9.815711	-6.25438	comment	3.0	12.0	1655145230	9.215498
31743597	Unfortunately, trying to defeat side	Unfortunately, trying to defeat side-channel attacks by adding random noise usually only increases the number of samples required to extract information, rather than preventing the attack entirely. (You can blame the central limit theorem for this.)	teraflop	9.806923	-5.595786	comment	3.0	11.0	1655230616	-5.7091303
31751480	Sure, but what is the practical risk	Sure, but what is the practical risk of someone trying to target my Intel Nuc home server sitting behind my firewall with Spectre or Meltdown attacks?	apexalpha	9.652465	-5.563761	comment	3.0	11.0	1655292574	7.7949586
31764959	This doesn't even cover all the neat	This doesn't even cover all the neat assembly tricks with self-modifying code that you would actually use on a 6502 to speed up memory transfer.	kken	9.586078	-5.3850017	comment	3.0	20.0	1655380651	-7.447526
31766683	I am late to this game so I assume e	I am late to this game so I assume everyone else’s brain was melted by this in 2017:Every Intel CPU since 2008 includes an autonomous computer called the Intel Management Engine that runs Minix, completely circumvents your own OS, has full access to memory, has network access, and cannot be turned off by the owner of the hardware (you).We also don’t know what it does because it’s extremely difficult to reverse engineer due to obfuscation and because Minix 3 is published under a BSD license so Intel is not obligated to publish the source code.	nequo	9.692985	-5.2042522	comment	3.0	11.0	1655390833	10.320058
31764974	The x86 Competitor which could have 	The x86 Competitor which could have been: Centaur CNS x86 8-core CPU Review	jz_	9.555683	-5.210848	story	3.0	14.0	1655380760	7.7379856
31766821	I'll defer to you I guess, as you se	"I'll defer to you I guess, as you seem to know more about this than me. The only thing is searching through the 6502.org forums I don't see a consensus on this?Plenty of people talking about the advantages of MVN/MVP for bulk transfers. I seem to recall doing the cycle counting myself at one point, too, and finding it advantageous.One neat trick (I remember reading about from Alan Cox I believe) if you have control over the hardware is to memory map I/O devices like serial input / output such that incrementing addresses starting at a given address all point to the same physical device/register.   E.g. allocate 256 contiguous bytes in your memory map to point to the same thing. This way you can do bulk I/O transfers to/from memory using MVP/MVN instead of ""get a byte, put a byte"" instructio"	cmrdporcupine	9.587354	-5.3510537	comment	3.0	10.0	1655391563	-7.420093
31770391	> But here's the thing: it's cheaper	> But here's the thing: it's cheaper to waste thousands of CPU cores on bad performance than to have an engineer spend a day optimizing it.No, it really isn't. It's only cheaper for the company making the software (and only if they don't use their software extensively, at that).	pjvsvsrtrxc	9.704711	-5.2498574	comment	3.0	24.0	1655410249	7.9136763
14003858	Are there applications which will se	Are there applications which will see significant benefit from a new generation of DRAM, or higher speeds?Games, for instance, seem to see only very small performance differences from changing RAM speeds.	TazeTSchnitzel	9.722717	-5.284017	comment	3.0	11.0	1490969088	8.035313
14008637	Are there any fpga open hardware imp	Are there any fpga open hardware implementations available?	pryelluw	9.110631	-5.352355	comment	3.0	16.0	1490997029	8.345557
14008770	"Sometimes they're good for ""need ASI"	"Sometimes they're good for ""need ASIC-like results in a low-volume design"" but that's more a special case of what you give, and of course the 'upgradable glue logic' case also is in play.I think the killer application would be to have programatically reconfigurable FPGAs that reconfigure on the fly to fit the needs, which has been discussed in various overhyped ways in the past, but I don't think the tooling is there. This effort might or might not make that possible -- imagine a chip where, say, the regex you're going to use to scan 1GB of data could be turned into an FPGA and then it just shovels the whole thing through a ""HW"" FIFO that detects matches much faster than a processor could. Nifty... but is it worth the effort to do?"	syntheticnature	9.118162	-5.374216	comment	3.0	11.0	1490998041	8.325541
14009191	As an FPGA designer, I can't disagre	As an FPGA designer, I can't disagree more with your statement of their business model. They make money on chips. That is indisputable.My last 3 designs used the vendor's free software, except for some IP we bought (IP=Intellectual property, a specific core). You might think of the IP as a library you would buy as a software engineer.	bcarlton0	9.090055	-5.3561244	comment	3.0	11.0	1491001503	8.39281
14008930	> Switching FPGAs are incredibly pow	> Switching FPGAs are incredibly power hungry since they run on much larger processes.I don't think the comment about process is really true, from what I can tell, Xilinx is only a few months behind the biggest SoC makers in terms of its process adoption, and is shipping 14nm parts currently. Not sure about Altera, but they are on Intel's process, which is bit ahead of the competitors anyway.In terms of switching power, you definitely pay a penalty to have the reconfigurability in hardware, but on the other hand you don't have all the unused logic that you would on a GPU. I'd guess the comparative efficiency depends on the specific problem and specific implementation, but I don't have any numbers to back that up.	PhaseLockk	9.09449	-5.3425217	comment	3.0	12.0	1490999314	8.311383
14024095	Everybody who has programmed in VHDL	Everybody who has programmed in VHDL or Verilog knows that building hardware is very close to writing software actually. It's just a level of abstraction lower, and there is a lot more parallelism, but the concepts are very similar.	amelius	9.123878	-5.5039086	comment	3.0	12.0	1491236379	8.578784
14062709	consistently beating OpenBLAS and ha	consistently beating OpenBLAS and having performance comparable with MKL is seriously impressive. I'm wondering how that is possible. I assume it's using the same algorithms as other implementations, so the credit goes to the compiler (and to the language to some extent). But the D compiler just uses LLVM for the back end, so is this because LDC produces really good LLVM IR, or is LLVM really good at generating assembly? Either way I'm really impressed they can beat hand-tuned assembly, I'd love to see a comparison between the resulting assembly for Mir GLAS and OpenBLAS.	openasocket	9.341471	-5.424335	comment	3.0	11.0	1491592653	-4.644235
14079354	I do technology due diligence on beh	"I do technology due diligence on behalf of investors for a living, so I live and breathe this type of stuff on a weekly basis.All companies build software differently. Some have automatic deployment, some don't. Some have strong testing procedures, some don't. Just because a company doesn't use a CI, doesn't necessarily make them ""worse"". It's just an indifference to the indoctrination of the ""SV mindset"".The more important answers are not binary yes/no by rather ""why aren't using a CI"". Common answers are:- I'm not sure what CI is- We don't have enough unit tests to justify it- We're a small team and it doesn't really justify the effort to setup- We're working on setting up and should be live in the next 3 monthsYou can tell a lot about engineering competency and leadership from those ans"	mbesto	9.359204	-6.386925	comment	3.0	10.0	1491838366	6.084992
14088237	I'm consistently blown away that stu	I'm consistently blown away that stuff like this gets past testing.Personally I think every software engineer should have a CPU meter of some for running on their machine while developing. Its an essential element of seeing what you're doing. How can you write decent software without having even that much visibility over what your computer is up to while your code runs?These huge CPU sinks making it through to release required nobody to even glance at a CPU graph.	josephg	9.822041	-5.4337325	comment	3.0	13.0	1491921736	7.8100667
14112946	Your CPU has 4 cores, but 8 threads 	Your CPU has 4 cores, but 8 threads due to Hyper-threading. It's quite normal that not all programs will benefit from the additional threads. It would be interesting to see how the compiler performs on more physical cores.	izym	9.682039	-5.4597588	comment	3.0	11.0	1492150217	8.065636
14113399	Yes, I was so happy to learn that AM	Yes, I was so happy to learn that AMD is finally pushing 8 cores for mainstream processors, they were too long stuck on 4 cpus. Of course, building software fully using those cpus is the challenge, but thats where Go comes in.	_ph_	9.365725	-5.2503653	comment	3.0	14.0	1492161207	7.9317217
14112795	I think a key point that's ignored i	I think a key point that's ignored is that data movement is the new problem. For example, according to Lawrence Livermore National Laboratories, the cost of moving a 64-bit word 1mm ON CHIP on the 10nm projection is approximately equal to doing a 64-bit FLOP. And the cost of DRAM is outrageous... It's what's holding back exascale and will hold back general purpose compute as well.Architectures MUST change radically to adapt to this or there can be no progress.	deepnotderp	9.577875	-5.1956353	comment	3.0	11.0	1492146428	8.053628
14130833	People keep forgetting that this FS 	People keep forgetting that this FS was designed by Apple for use in their appliances.Apple devices, save for their least sold model  (MacPro), in their least sold product line (Mac) are consumer devices with no ECC RAM. Most people don't know what ECC RAM is, most don't care, and won't pay more for it.For Apple, it doesn't make sense to switch to ECC for system memory, however, if they implement storage ECC at block level in their SSD controller (Apple designes their own SSD controllers), they can obtain the same functionality at much lower cost (only flash controller RAM needs to be ECC).	Tanegashima	9.472729	-5.5137663	comment	3.0	12.0	1492437059	8.24512
14133297	Anybody know if and when desktop CPU	Anybody know if and when desktop CPU's might start getting FPGAs? Been waiting for that for a while now...	wfunction	9.215947	-5.1975813	comment	3.0	23.0	1492454333	8.159722
14152294	I have not read the whole FPGA HDK g	I have not read the whole FPGA HDK guide yet, but, I doubt amazon will give the designer access to pins on FPGA; they would give access to interfaces or IO blocks which connect to the pinsyour design sits inside a wrapper with access to IO blocks.inside the FPGA logic, you cannot do electrical damage, no matter how hard you try.	bedros	9.08717	-5.3825855	comment	3.0	14.0	1492639984	8.391104
14175181	"""Many young people can read the face"	"""Many young people can read the face of their iPhone better than the face of the person sitting next to them. I’m not saying young people don’t understand emotions. Our digital world is full of emojis, and the term “emo” didn’t exist back in my schoolyard days. But emojis don’t create interpersonal, face-to-face fluency.""I am really tired of statements like these."	danderino	9.78475	-6.262313	comment	3.0	10.0	1492899884	-13.991981
14180415	Which market gets it first is not so	Which market gets it first is not something I can predict. The ground swell is deep and wide though. It's being designed in to products where the architecture will not matter to the consumer. nVidia is very interested and contributing - I would not be surprised if they made something like Tegra with RISC V in a year or two. The government of India is funding several designs (because they want their own processor IP), as are students around the world. Some of the vector implementations are power and area efficient enough that they compete with the best. Don't be surprised if it shows up in the Top 500 in the next few years.On the software side you've got GCC, LLVM, core boot, Rust, and Google Go, all going there. There are thousands of Fedora and Debian packages already ported.Several compa	phkahler	9.307288	-5.406212	comment	3.0	13.0	1492981197	-10.560038
14197074	https://github.com/SiliconStudio/xen	https://github.com/SiliconStudio/xenko/graphs/contributorsare they stopping with development?	je42	8.789316	-6.0019193	comment	3.0	12.0	1493147918	-11.573231
14202518	I'd also be curious of numbers from 	I'd also be curious of numbers from people who DO run ECC about how many times it's saved them. Some things it's really necessary for (financial transactions comes to mind). That said, it should be much easier to get ECC in consumer hardware. Major props to AMD for their recent chips that allow it. Hopefully Intel follows suit.	_asummers	9.422891	-5.484927	comment	3.0	11.0	1493211183	8.180454
14202206	While I agree, can you explain more 	While I agree, can you explain more about why you think we all need ECC?	stuff4ben	9.475087	-5.5288067	comment	3.0	21.0	1493207493	8.315169
14203205	Of course you can.https://01.org/lin	Of course you can.https://01.org/linuxgraphics/gfx-docs/drm/admin-guide/tainte...Edit:---Good point about the distinction between adding modules modifying existing source. It is an interesting question, actually and I haven't been able to find an authoritative answer on the subject.A patch is a description of changes that would be made to a work, if they were made. Does it trigger the licence before it is applied to the source tree? On the other hand to generate a patch you would require the original source (even if you write it by hand you would still have to look at the source to determine line numbers). An you will probably have some bits of the source in your diff, but they are not being used for anything other than position information.	gbuk2013	8.83172	-6.400828	comment	3.0	16.0	1493216663	-11.725846
14206797	Yes.Bit errors are uncommon and rang	Yes.Bit errors are uncommon and range from benign to crash.Your storage has them, memory has them, network has them.Non error correcting memory very significantly increases risk.And this is the kind of risk you don't notice, until you do and when you do, it's often subtle, insidious, impossible to track down.Servers absolutely.  It's debatable on desktop, but we have huge RAM now.  Might as well error correct.  The bit error risk is small.  Bigger RAM only adds to that possibility.	ddingus	9.768005	-5.548763	comment	3.0	19.0	1493239435	8.218036
14206969	Not true with Ryzen, as long as you 	Not true with Ryzen, as long as you find unregistered ECC acceptable.Somewhat not true with Intel, as some of the lower end Xeons now support it.	binarycrusader	9.403077	-5.4641786	comment	3.0	18.0	1493240593	8.111701
14207083	>  If you look through the source co	">  If you look through the source code & postmortems from that era of Google, there are all sorts of nasty hacks and system design constraints that arose from the fact that you couldn't trust the bits that your RAM gave back to you.Details of this would be very interesting, but obviously I understand if you cannot provide such details due to NDAs, etc.I mean, I can imagine a few mitigations (pervasive checksumming, etc), but ultimately there's very little you can actually do reliably if your memory is lying to you[1]. I can imagine that probabilistic programming would be an option, but it's hardly ""mainstream"" nor particularly performant :)I'm also somewhat dismayed at the price premium that Intel are charging for basic ECC support. This is a case where AMD really is a no-brainer for commo"	lomnakkus	9.53338	-5.5547056	comment	3.0	20.0	1493241510	8.248327
14208137	I have hit soft errors in every desk	I have hit soft errors in every desktop machine that used ECC. Either I have bad luck, ECC causes the errors or third thing. I think ECC should be mandated for anything except toys and video players.	sitkack	9.504263	-5.5313272	comment	3.0	22.0	1493251641	8.276362
14208236	How much more expensive is ECC ram? 	How much more expensive is ECC ram? I don't have it and I've never experienced obvious issues, if it's a lot more expensive it's not really worth it for the once or twice the desktop will likely experience an actual issue	tdb7893	9.483016	-5.518401	comment	3.0	18.0	1493252965	8.246106
14233797	In addition, we seem to be going bac	In addition, we seem to be going back to a more CISC like model. RISC was appealing when you could have simple instructions and take advantage of that to get high clock speeds. Now, that avenue is gone. Now, may CPU's are adding special instructions (for example AES or SHA acceleration instructions) or wide instructions (SSE, AVX, etc). We are likely to see more in the future, and may see specialized instructions to speed up neural nets.	RcouF1uZ4gsC	9.48842	-5.693185	comment	3.0	19.0	1493586004	-10.514076
14233977	> By ~2000 most RISC architectures w	> By ~2000 most RISC architectures were dead (Alpha, SGI, ...) with only POWER and SPARC surviving in their niche markets.You forgot ARM, which is a major omission.> In the end, x86 won, because x86 had the bigger market with more money in it.It's not the end yet. :) x86's dominance in the future is hardly assured, and in fact if you measure by total number of microprocessors sold, x86 is a small niche--300-400 million sales per year compared to 15 billion ARM chips sold.	pcwalton	9.575589	-5.4255047	comment	3.0	17.0	1493588130	-8.042344
14234179	Why are x86/64 processors used for m	Why are x86/64 processors used for most high performance applications then?Well, you should start from this and then work backwards because it's just an empirical fact that x86_64 is fast and that RISC isn't. There are many reasons for that, none of them fair, but in the end, it's still just a fact.Yes, RISC-V is simple+elegant. If that's what you want, great. True, RISC-V is open source. If that's what you need, awesome. Now weigh those qualitative features against the cold hard $1B/year that Intel invests in making the mess that is x86 run fast. Add to that the billions that ARM+Samsung+NVidia+Apple+... spend on making ARM fast. It's not a fair fight. It really isn't.But know this. If RISC had anything tangible, any fundamental advantage, then we'd be living in a RISC world by now and we	CalChris	9.545576	-5.487037	comment	3.0	22.0	1493590771	-10.43391
14234378	In one of the Mill talks, I've long 	"In one of the Mill talks, I've long since forgotten which, someone asks Ivan Godard a question about RISC.  His response is something like ""there was a brief window in the eighties where if you had a RISC machine you could get the whole computer onto one chip.""  I don't enough experience to know if this is right, but it strikes me as a nice clean explanation.  It also explains why x86 won since then, because a couple generations later it was possible to get the whole computer onto one chip with x86 as well.(I may have misquoted badly, in particular I'm not sure about the dates)(edit:  I found the talk, it's the last couple minutes of this: https://www.youtube.com/watch?v=LgLNyMAi-0I)"	nialo	9.472586	-5.606589	comment	3.0	12.0	1493593570	-10.457464
14235960	Back many years ago when I had to ma	Back many years ago when I had to make a choice between these two I took a very practical approach.  I learned both of them to a level adequate enough to implement a few small test projects and then I made my decisions.How?As a solo founder CEO/CTO/Electrical, Mechanical, Software and FPGA Engineer and, let's not forget, Janitor at the time there was one thing I valued far above anything else: Time.VHDL, I found, is very verbose.  Verilog not so.  To me this meant having to type twice as much to say the same thing.  This didn't sit well with me and that was the primary driver in deciding in favor of Verilog.Another driver was familiarity with C.  I had a need to switch contexts with some frequency.  I was using C and C++ for embedded and workstation code development.  As a mental exercise,	rebootthesystem	9.10923	-5.4974394	comment	3.0	12.0	1493620384	8.598913
14237635	>>every Intel platform with AMT, ISM	">>every Intel platform with AMT, ISM, and SBT from Nehalem in 2008 to Kaby Lake in 2017 has a remotely exploitable security hole in the ME (Management Engine) not CPU firmware.>>there is literally no Intel box made in the last 9+ years that isn’t at risk>>SemiAccurate has been begging Intel to fix this issue for literally yearsAm I the only one who is so cynical to think it must have been deliberate? Intel dragging their feet for YEARS -- what could justify such a delay? The paranoid side of me asks ""Were they waiting to patch this hole, until they found a different one that could be utilized?""
Which begs the next quesion: Where is the NSA in all of this? It's the sort of thing that would be mighty handy to a group wishing to snoop on everyone and everything?Last question: Why would anyone"	jackhack	9.473401	-5.1994133	comment	3.0	10.0	1493648688	7.712651
14237896	The article implies that they have b	The article implies that they have been privately trying to get Intel to fix it, so there is no reason it would have been mentioned publicly anywhere.Now a patch is coming out but Intel is still trying to keep it quiet, so he's trying to warn people disable AMT and be ready to apply patches ASAP.Presumably he didn't even want to disclose the existence of the vulnerability publicly until there was some sort of fix, and he still won't want to disclose details before the fix is released.Of course, you can doubt the veracity of this story, but I'm just pointing out that there would be no reason to expect details, cross references, or mentions on Google or security lists yet if it is true.	resoluteteeth	9.4374695	-5.243424	comment	3.0	14.0	1493650202	7.7585325
14238345	ANI reminds me of HDLs [1] - I'm ass	"ANI reminds me of HDLs [1] - I'm assuming that's the inspiration with terminology like ""latch""?Hardware is also concurrent by default. Coding some hardware logic will also change the way you approach coding. Anyone who's interested get an FPGA demo board and write some verilog or VHDL - I highly recommend it.1. https://en.wikipedia.org/wiki/Hardware_description_language"	robmccoll	9.124187	-5.469823	comment	3.0	11.0	1493652791	8.618352
14238613	Credibility issues of the author/web	Credibility issues of the author/website aside, I actually hope this is true, and I hope it's catastrophic for Intel.Maybe then we'll finally see hardware companies taking security seriously.	na85	9.426745	-5.198472	comment	3.0	21.0	1493654139	7.7366457
14241561	Thankfully this doesn't look quite a	Thankfully this doesn't look quite as serious as the SemiAccurate article earlier today made it look (it's AMT, not ME), and doesn't affect consumer CPUs. But if you have AMT provisioned, then holy cow this is really really bad. Remotely exploitable is just wow.	lorenzhs	9.435069	-5.2525597	comment	3.0	35.0	1493672624	7.841789
14241883	AMT seems to depend on vPro, which i	"AMT seems to depend on vPro, which is not present on most ""desktop"" cpus. There is a more technical security advisory here : https://security-center.intel.com/advisory.aspx?intelid=INTE..."	Zarathust	9.42189	-5.253787	comment	3.0	15.0	1493674379	7.8214693
14242281	"It says on the page ""This vulnerabil"	"It says on the page ""This vulnerability does not exist on Intel-based consumer PCs."" I'm not sure if that's true or not but Intel seems to think you'll be ok.EDIT: Ok so it seems all Intel CPUs that have AMT from Nehalem processors to the current Kaby Lake's are vulnerable. Even if AMT isn't enabled, it's still vulnerable to a local privilege escalation to ring 0. So all you people that have Celeron or AMD CPUs and got picked on for years, enjoy your moment of schadenfreude.https://semiaccurate.com/2017/05/01/remote-security-exploit-..."	microwavecamera	9.432807	-5.2566624	comment	3.0	13.0	1493677450	7.839942
14242473	AMD: provide backdoor-free systems, 	AMD: provide backdoor-free systems, and you'll succeed (after Intel's security fiasco).	faragon	9.456255	-5.1932817	comment	3.0	22.0	1493679058	7.817795
14253634	This only disables the Windows drive	This only disables the Windows driver.The actual ME co-processor is still running.	lima	9.516942	-5.2312927	comment	3.0	23.0	1493795236	7.7695875
14274979	So the AMT vuln was related to a lac	So the AMT vuln was related to a lack of security on their web service? Somehow this does not increase my confidence in the rest of their code - if they didn't get this right, what else is wrong?	DuskStar	9.385763	-5.2402806	comment	3.0	11.0	1494004032	7.830127
14275471	It's hard to say what a minimal proc	It's hard to say what a minimal procedural language is. There are ISAs with a single instruction: https://en.wikipedia.org/wiki/One_instruction_set_computerThis looks like it's a MISC: https://en.wikipedia.org/wiki/Minimal_instruction_set_comput...I've also invented something like this: NISC. (Or {}ISC) Null Instruction Set Computer. You can arbitrarily reduce the die size for implementations of this architecture, as well as scale the clock speed arbitrarily. It also revolutionizes cooling.	stcredzero	9.775275	-5.828911	comment	3.0	11.0	1494007324	-7.4072595
14276294	So if you setup AMT in the BIOS and 	So if you setup AMT in the BIOS and run Linux you are exploitable? Can somebody confirm that this also affacts AMT < 6.0 i.e. Core2 system like Dell Optiplex 755,780?	nisa	9.395835	-5.2510986	comment	3.0	10.0	1494013736	7.8489943
14278087	Only in America could a line of thou	"Only in America could a line of thought possibly arise to consider emoji in legal opinion.I dont doubt the validity of the research and given how the global population is infected with the 'look at me' virus of glass jabbing, and using childish icons instead of saying/writing what they think/feel, one does have to think about how emoji will infect and undermine certain types of documents.Should congress vote using emojis?
Will UN decide on severity on response to world events based on emoji divergence stats from its members posts?Disclaimer: when im lazy i use emoji too.  Can be much quicker to find than the words when Im not wearing my glass. Apart from that i find them silly. Mostly."	zoom6628	9.7857065	-6.266137	comment	3.0	13.0	1494033338	-13.976406
14278692	This sounds way too good to be true.	This sounds way too good to be true.- 8 core RISC-V w/DSP- Hardware Convolution Unit- RTC- SDR!?- Ultra low power- Low cost- Lots of librariesI hope this is real, but I'll believe it when you can buy it.	mastax	9.3824415	-5.6020083	comment	3.0	12.0	1494045378	6.0636325
14283273	I look forward to a RISC-V proc powe	I look forward to a RISC-V proc powering my laptop with some ridiculous Nvidia GPU.  We must escape x86 :(	blitmap	9.384842	-5.586279	comment	3.0	30.0	1494119371	-10.560432
14283852	It just keeps getting better: Intel'	It just keeps getting better: Intel's diagnostic tool is published with an MD5 checksum.	lisper	9.51435	-5.270337	comment	3.0	21.0	1494131286	7.8207903
14283856	Interesting how this article steadfa	"Interesting how this article steadfastly refers to the subsystem as AMT and never mentions Management Engine/ME. A deliberate ploy to redirect people away from discovering all the ME-disabling research and tech? Perhaps. This is what happens when ""journalists"" post copypasta from publicists."	CodeWriter23	9.361895	-5.241135	comment	3.0	11.0	1494131323	7.7931757
14283906	I thought that microprocessor produc	I thought that microprocessor production and design was fraught with risk of infringing on other designers' patents (even for original ISAs).  I can see that industry heavyweights have arrived to support RISC-V, so hopefully that comes with a team of professors/lawyers that could defend them.  But, why now?  Why couldn't this have happened sooner?  Didn't Sun try to create an open SPARC processor design?  What does RISC-V have that it didn't?Is the intent for RISC-V to compete with modern high-end CPU designs, or do we just want to have royalty-free microprocessors for our embedded devices?You might be surprised (at least I was) to learn that peripherals like hard drives and PCI-add-in cards usually have their own CPU executing their own software.  Those processors are often MIPS/ARM/etc b	wyldfire	9.397873	-5.6533422	comment	3.0	43.0	1494132220	-10.507448
14284280	I disagree with the article. If anyt	I disagree with the article. If anything, it's much less severe than many people thought.- It's a logic bug (authentication bypass) instead of a memory corruption. An authentication bypass is bad, but a full compromise would have been much worse.- It's a bug in the opt-in AMT management, which means that the default config is not vulnerable.	lima	9.452355	-5.301456	comment	3.0	21.0	1494141145	7.838706
14284442	> You don't need to be completely ti	> You don't need to be completely tied to ARM.The point is that if you want to use the ARM ISA you have to pay ARM. Not so with RISC-V. Anyone is free to fab a RISC-V chip without paying royalties.	jbarham	9.424134	-5.6092544	comment	3.0	18.0	1494145503	-10.51384
14290997	Yep. Not long ago I asked a dev why 	Yep. Not long ago I asked a dev why he had suddenly introduced Riak into the system.'Because it's cool'Oy.	mkarliner	9.394732	-5.6902647	comment	3.0	26.0	1494247181	-10.585577
14301502	Otoh controllers cost almost nothing	Otoh controllers cost almost nothing, so you can get safe concurrency just by duplicating the CPU.	amelius	9.70265	-5.394466	comment	3.0	13.0	1494347895	8.517061
14306336	Intel AMT on wireless networks	Intel AMT on wireless networks	zdw	9.444178	-5.236491	story	3.0	78.0	1494398706	7.7918596
14315190	The opcode map tells a different sto	The opcode map tells a different story, however. x86 looks very organised in octal:http://i.imgur.com/xfeWv.png68k and a lot of the other Motorola CPU's opcode layout looks far less organised to me; there's no common pattern among all the ALU ops, for example, and there seems to be plenty of undefined/unused gaps:http://goldencrystal.free.fr/M68kOpcodes-v2.3.pdf	userbinator	9.834032	-5.721737	comment	3.0	10.0	1494501119	-7.4798055
14319017	What do you mean, could you elaborat	"What do you mean, could you elaborate on that a bit? How is x86 ""memory model stronger"" and why would application code be affected?"	kyberias	9.778714	-5.5471044	comment	3.0	16.0	1494532893	-7.7195888
14320638	Has anyone seen any work done on a v	Has anyone seen any work done on a virtual machine bytecode that leans on Intel AVX to do its work in parallel?	Andys	9.93061	-5.557809	comment	3.0	11.0	1494549578	-8.216592
14328451	I think this is just a bug though. B	I think this is just a bug though. But yes, I have been thinking of creating a new version of x86 that drops things like segmentation, real mode, virtual 8086 mode, and 16-bit protected mode.	yuhong	9.784075	-5.4209375	comment	3.0	19.0	1494628194	-7.8270574
14329261	As incredible as it is, Ryzen has bu	"As incredible as it is, Ryzen has buggy VME implementationWhat I find more incredible is that this bug could get by without being noticed. A CPU literally has billions of possible regression tests --- all the world's existing software --- and of everyone working on the project, not a single one thought to try some older software (XP/2k3 is not even that old, as far as x86 compatibility is concerned) to see if it worked? This is an old feature too, meaning it should've been well-characterised by now. I'm particularly surprised that FreeDOS is affected, since it's commonly used as a minimal ""non-OS"" OS for running things like low-level diagnostics and debugging of hardware.This begs the question: if old features are this broken, what about the new ones (for which there is far less software a"	userbinator	9.440006	-5.2233677	comment	3.0	18.0	1494641712	7.8334904
14331412	We would probably all be working wit	We would probably all be working with Itanium servers if not for AMD introducing 64 bit x86.  I believe that also accelerated Linux adoption and  the decline of all the commercial Unix platforms.Good to see AMD on the rise again.  I appreciate their role in heading off Itanium.	tyingq	9.503376	-5.4246855	comment	3.0	15.0	1494688941	-7.8026624
14331413	> I suppose a similar analogy would 	> I suppose a similar analogy would be doing everything in x86 with SIMD instructions and not using the scalar set at all.With ever wider SIMD units this is actually happening to some extent. With AVX512 (e.g. on KNL) you can do 64 operations (single precision FLOPs) in vector units in the same amount of time as you can do 1 scalar operation. Combined with the low clock speed of the KNL, you really don't want to be doing scalar operations if you care at all about performance. Of course SIMD isn't the same as VLIW, since the operation you're doing has to be the same in all vector lanes, but with masking support in AVX512, it is getting a little closer to that.Also compilers have gotten quite a bit smarter and with hardware die shrinks taking longer, I wouldn't be at all surprised if VLIW IS	KenoFischer	9.5684185	-5.671911	comment	3.0	31.0	1494688946	-7.4258194
14331448	This, recent compiler advances in th	This, recent compiler advances in the past two decades have actually made VLIW somewhat tractable, but since the memory hierarchy and data movement wall consumes most of the power nowadays, the benefits of VLIW are mitigated.	deepnotderp	9.6431875	-5.66718	comment	3.0	24.0	1494689408	8.159473
14331463	Had x86_64 not been released, I also	Had x86_64 not been released, I also think we'd see a more diverse set of serverside chips as well, such as SPARC and POWER. There wouldn't have been an obvious dominance in the marketplace of a single architecture.Also, had it not been released, we'd probably have seen a larger fracturing of the laptop CPU market with a broader switch to ARM64.In a sense, because AMD forced Intel's hand in supporting x86_64, they actually helped Intel have even more dominance in the market with an architecture that spans laptops to server work horses. We developers barely need to lift a finger in targeting either.	bluejekyll	9.577697	-5.263888	comment	3.0	10.0	1494689651	-7.7581177
14331469	 Your sequential CPUs are also explo	 Your sequential CPUs are also exploiting parallelism to go faster, OoO execution, VLIW just wanted to do that in the compiler. There was nothing inherently wrong with the idea, the folly of Itanium was not the focus on parallelism, it was that compiler technology was not sufficiently advanced.	deepnotderp	9.631803	-5.720226	comment	3.0	15.0	1494689744	-7.6468544
14331626	I think there's a strong argument th	I think there's a strong argument that it wasn't just that the compiler technology was insufficiently god-like but also that they over-estimated the degree to which instruction-level parallelism mattered to the general market. The quote below really fits my memory of the initial experience — the claims were really ambitious but even if it'd on-time (i.e. 2+ years earlier) and at the originally promised clock rates the results wouldn't have been especially impressive outside of a few fields like scientific computing. Even in HPC it was a question of how much time you were willing to spend hand-tuning every hot section. When it finally did ship, we got access to a dev system and found the Itanium systems generally struggled to surpass the previous generation systems which we were preparing t	acdha	9.575188	-5.6048822	comment	3.0	12.0	1494691713	-7.7329493
14331629	They can extract some ILP, but most 	"They can extract some ILP, but most of that is because it has no limitations but the semantics of the instruction set. It also cheats and can speculate just about everything legally, because it can always undo it.A large amount of the ILP is, AFAIK, from being able to prefetch accurately (IE guess what memory will be accessed) and guess branch directions correctly.This is not possible to do as well statically.
You actually can do it well dynamically (IE i could make a branch guessing thread and a prefetching thread), but you can't do it fast enough.In a lot of workloads, most time is spent stalling for memory.Also note that in VLIW, you have to extract ILP or you are just wasting time (IE are executing NOPs).  You end up with a half or 3/4 empty pipeline.  So unless you can predict you are"	DannyBee	9.651037	-5.6753783	comment	3.0	24.0	1494691774	8.083577
14332536	Did the author notify Intel about th	Did the author notify Intel about the bug they found?	turbohedgehog	9.406917	-5.243074	comment	3.0	19.0	1494703351	7.73596
14333092	Meanwhile I'm trying to find a way t	Meanwhile I'm trying to find a way to remove the hard lock on CPU and RAM frequencies (extreme CPUs can't be overclocked, RAM is locked at 1333 MHz) :)Looks like it can be done through Management Engine, which has access to everything apparently.Only success so far is unlocking BCLK, but the overclock is small and unstable that way.Another roadblock was the read only lock, which can fortunately be bypassed on POST on xx67/77 chipsets.	prodmerc	9.537804	-5.294055	comment	3.0	15.0	1494710483	7.917176
14335462	It looks like I’m out the news cycle	It looks like I’m out the news cycle. What is AMT? Why would I need to check for it? Why just in Linux?	neves	9.414158	-5.256966	comment	3.0	17.0	1494767250	7.825737
14342914	>server segment where MBs are signif	">server segment where MBs are significantly more expensiveFalse-ishSingle socket server boards are on par with home motherboards. They only become expensive when you start wanting 2+ NIC's and A LOT of sockets. But then yes your feature thing is mostly true.> and lack a whole slew of additional features nice for desktop machines.False-ishIntel's server socket (for non E7's) is 2011v3 which is also their enthusiast socket. I dropped a XEON E5v4 2030 into a 2011v3 """"ethusiast board"""" and it worked without a problem.Sure my enthusiast board doesn't support ECC RAM, and I can't over clock a XEON. But a 2011v3 board in and of itself is only ~50-60 more then an EXTREME low end <$100 stock standard home user motherboard.You get what you pay for if you want a dirt cheap board to drop a server clas"	valarauca1	9.393487	-5.2565556	comment	3.0	15.0	1494866075	8.076388
14350264	Intel needs to double or quadruple t	Intel needs to double or quadruple their processor's AVX width, add 8 bit instructions and make it slightly more power efficient (for AVX) and it will easily beat many of these TPUs. Of course this is easier said than done but I am really surprised they haven't done it so far and instead bought Nervana and other hardware chip startups.	chimtim	9.411181	-5.3272123	comment	3.0	10.0	1494948153	7.993649
14356422	People call this a bug, I call it an	"People call this a bug, I call it an interoperability issue.
Microsoft wanted to represent a real smiley in text without resorting to images. There was no standard unicode character for such a smiley so Microsoft chose a font that did support the smiley character.Of course hindsight is 20-20, it's easy to say now they should've gone with a character that wasn't in use yet, but circumstances being what they were, a bug is not a completely correct description for what this behavior is."	breakingcups	9.866634	-6.2313447	comment	3.0	10.0	1495007482	-13.947111
14370168	Redesigning Android Emoji – Google D	Redesigning Android Emoji – Google Design	twapi	9.812835	-6.256838	story	3.0	22.0	1495134769	-13.959753
14382586	Sourceforge got desperate for money 	Sourceforge got desperate for money and they started modifying installation packages to contain crapwareThat is only a relatively recent development.	mdekkers	8.749758	-6.0056243	comment	3.0	16.0	1495291431	-11.691718
14386636	I do not buy the argument against AE	I do not buy the argument against AES. On both ARM and x86 you have side-channel secure hardware implementations of AES.	legulere	9.702274	-5.342555	comment	3.0	19.0	1495363202	-7.6809278
14387334	> No. The MOnSter 6502 is relatively	> No. The MOnSter 6502 is relatively slow compared to the original, thanks to the much larger capacitance of the design. The maximum reliable clock rate is around 60 kHz. The primary limit to the clock speed is the gate capacitance of the MOSFETs that we are using, which is much larger than the capacitance of the MOSFETs on an original 6502 die.60 kHz? Surely these MOSFETs can do better than that! And even simple modern PCBs can run at much higher speeds.Anyway, at this speed, I can probably run it in a full SPICE simulation on my PC and still outperform it :)	amelius	9.517586	-5.2521734	comment	3.0	12.0	1495375273	-7.461617
14391093	As much as people make fun of him fo	"As much as people make fun of him for caring so much about a seemingly minor point, I've come around to understanding RMS's frustration about people calling all of the GNU project ""Linux"". This sort of title drives home why: neither Linus nor anyone else on the Linux project had anything to do with any of this."	umanwizard	9.465305	-5.73252	comment	3.0	13.0	1495428863	-12.49989
14424716	Raspberry Pi is merging with a codin	Raspberry Pi is merging with a coding foundation	abhas9	8.762464	-6.4086285	story	3.0	43.0	1495812427	9.193676
14426896	Any word on ECC support for the Ryze	Any word on ECC support for the Ryzen chips?	IceyEC	9.373712	-5.4361963	comment	3.0	21.0	1495830494	8.212657
14427402	How do FPGAs compare on space and po	How do FPGAs compare on space and power? Would differences be enough to matter for mobile?	imh	9.098638	-5.3355365	comment	3.0	12.0	1495834731	8.268108
14427502	Ryzen will work with ECC ram but it 	Ryzen will work with ECC ram but it won't actively correct ECC errors (at least on Linux) the interrupt code flags that as differed.Currently there aren't Ryzen server chips out, just desktop/enthusiast models.	valarauca1	9.398427	-5.4825764	comment	3.0	10.0	1495835837	8.170479
14427783	IIRC there's already an FPGA in the 	IIRC there's already an FPGA in the iPhone.	rch	9.103683	-5.3154826	comment	3.0	16.0	1495839354	-4.0808783
14433815	Some of the arm instruction set manu	Some of the arm instruction set manuals seem harder to come by than others. Recently I reverse engineered one of the firmwares of the ImmersionRC Vortex 150 racing quadcopter (it uses an stm32f3 chip, arm cortex instruction set). It was pretty hard to come by a copy of the full instruction set manual - i just assumed that kind of thing would be a quick google away. Eventually i got there and made my changes but it was harder to get going than i expected but for different reasons than i was anticipating.	CraigJPerry	9.70533	-5.495892	comment	3.0	11.0	1495967545	-7.6668773
14443804	So does it support ECC like AMD? Oth	So does it support ECC like AMD? Otherwise not interested.	vardump	9.389039	-5.4346642	comment	3.0	42.0	1496134239	8.130611
14448226	    even chips with AVX2 on all core	"    even chips with AVX2 on all cores slow down
    when it's fully used

Not really. Xeon Phi's clock low because the die is massive.
The downclocking for AVX started with Knights Landing. My Boardwell-EP Xeon stays at 3.0Ghz even when I (ab)use AVX2."	valarauca1	9.4237	-5.503343	comment	3.0	14.0	1496175636	7.982796
14448782	I tried AVX512 on a Xeon (non-Phi) p	I tried AVX512 on a Xeon (non-Phi) part recently and it was extremely underwhelming. The workload (OpenMP-parallelized n-body) was actually slower with AVX512. Since it was under virtualization and I didn't have access to the bare metal hardware or to performance counters, I have no way of knowing why, but I'm almost certain it was because it lost all-cores Turbo and downclocked aggressively. It had previously scaled almost linearly going from SSE to AVX/AVX2, but it regressed with AVX512.	AbacusAvenger	9.438711	-5.552981	comment	3.0	11.0	1496180606	8.090494
14448797	"""Currently, every time we want to bu"	"""Currently, every time we want to build a release of the software in order to test it before deployment, __ developers need to stop working on features and maintenance while we go through the build process, which takes __ hours/days. There are a lot of manual steps involved, and we found that we make an average of __ errors in the process each time, which takes an additional __ hours/days to resolve. We go through all of this __ times a year.We've determined that we can automate the entire process by setting up a Continuous Integration (CI) server. There's some work involved in setting it up; we estimate it will take __ days/weeks to get it running. But once it's running, (we'll always have a build running __ minutes after each code change)|(we can click on a button in the CI's GUI and we'"	DougWebb	9.229535	-6.4110756	comment	3.0	36.0	1496180767	6.060423
14452306	I wonder if it's the same silicon as	I wonder if it's the same silicon as Epyc, just ThreadRipper gets the worse bins.Or maybe there's one less chip in the package?	TazeTSchnitzel	9.391625	-5.314259	comment	3.0	12.0	1496237399	8.039048
14476788	Asi64 – A Racket-based 6502 assemble	Asi64 – A Racket-based 6502 assembler	soegaard	9.91831	-5.8317037	story	3.0	89.0	1496503383	-7.559478
14479925	I think the literature on instructio	I think the literature on instruction scheduling might also be relevant for build order planning. You have a set of things to build (= instructions to execute) in the shortest amount of time, using the available production facilities (= execution units). Except in most games you can build additional factories, which doesn't really have an equivalent in CPUs.	yorwba	9.633653	-5.505128	comment	3.0	11.0	1496551484	7.931149
14484102	Wasn't that similar to those Transme	Wasn't that similar to those Transmeta processors that had most of their instruction set written in software? Seemed like a cool idea, but (as I recall) the Transmeta processors couldn't keep up speed-wise with the existing x86 CPU's.	johnhattan	9.599677	-5.3867006	comment	3.0	14.0	1496616514	-7.7796926
14484226	"Is this using ""microcode"" in the sam"	"Is this using ""microcode"" in the same sense we'd use it today to refer to e.g. ""Intel CPU microcode""?"	derefr	9.568728	-5.3878565	comment	3.0	13.0	1496617766	7.672742
14505317	There is an... interesting post by L	"There is an... interesting post by Linus Torvalds about GeekBench:http://www.realworldtech.com/forum/?threadid=136526&curposti...In other words, Linus claims it's mainly testing the speed of specialised instructions implemented in hardware, and not general-purpose computing. For a similar analogy, compare the speed of a Bitcoin mining ASIC vs. a GPU or even a CPU. At the same clock speed, dedicated hardware will vastly outperform the software implementation.I think it's somewhat ironic then, that the ""RISC"" CPU is getting higher scores due to the presence of such CISC-y instructions."	userbinator	9.471759	-5.6546407	comment	3.0	23.0	1496834915	7.659031
14518274	So who are they talking about? It so	So who are they talking about? It sounds like a warning, and focuses on emulation style approaches. They compared to Transmeta.Edit: Seems odd to use Transmeta as a comparison if they are talking about software os level emulation. Wasn't Transmeta's emulation all built into the chip, no os level support/software needed?	tyingq	9.5583105	-5.464229	comment	3.0	48.0	1496967680	-7.711953
14518330	So Intel is now resorting to threats	So Intel is now resorting to threats, is it a dying gasp for x86?  Wow we'll all need to recompile. Thank goodness for Linux.Article is written by the Intel General Counsel...> Only time will tell if new attempts to emulate Intel’s x86 ISA will meet a different fate. Intel welcomes lawful competition... However, we do not welcome unlawful infringement of our patents, and we fully expect other companies to continue to respect Intel’s intellectual property rights.	paulsutter	9.512118	-5.243084	comment	3.0	22.0	1496968350	7.7919564
14518390	> Dying gasp for x86? Wow we'll all 	> Dying gasp for x86? Wow we'll all need to recompile.ARM uses a weak memory model. x86 has a strong one. Also code containing optimized SIMD code (e.g. via compiler intrinsics) is a lot more complicated to port.	wolfgke	9.698529	-5.4300303	comment	3.0	11.0	1496969010	-7.744179
14518449	Wow, what the fuck happened with the	Wow, what the fuck happened with their patent applications in 2014?It's difficult to take this threatening language seriously when it's exceedingly obvious that Intel is very suddenly (and very rightfully) terrified of losing their monopoly position. It's easier than ever to recompile and switch to ARM, and people are tired of paying the Intel tax.They should have seen this coming well before Otellini retired. Lawsuits aren't going to save them here, and Rodgers comes out looking like an asshole for trying.	ohazi	9.538304	-5.2373962	comment	3.0	13.0	1496970005	7.7169094
14518758	Itanium failed because writing compi	Itanium failed because writing compilers which make VLIW efficient is probably not surmountable for human minds. Donald Knuth himself said that compilers which would make it perform even sufficiently were nearly impossible to write.With it being borderline impossible to write good VLIW compilers, most of the instruction word was full of NOPs, which meant terrible code density, which meant I$ full of NOPs. A recipe for hot, slow computers which are depressing to program for.	microcolonel	9.560825	-5.6272516	comment	3.0	24.0	1496974837	8.265524
14519877	What does the memory interface look 	What does the memory interface look like for this? None of the papers I can find indicate how you can get so much parallelism out of the CPU <-> memory interface.An interesting approach to non-Von Neumann computing is to put ALUs in memory, to take advantage of the fact that DRAMs have far more internal bandwidth than what is exposed in traditional systems: http://researcher.ibm.com/researcher/files/us-leejinho/tvlsi....	rayiner	9.8327465	-5.4705815	comment	3.0	20.0	1496995167	8.164311
14528591	Patents expire after 17 years and x8	Patents expire after 17 years and x86 is 39 years old, so any of the original patents must have expired twice over already.They no doubt have been filing additional patents over the years. But I'm sure MS and Qualcomm have plenty of their own patents to bargain with.Also their warning could backfire if it gives Microsoft one more reason to finally walk away from x86 compatibility... not that this is likely to happen anytime soon.	natch	9.613917	-5.213053	comment	3.0	18.0	1497120297	-7.771334
14529000	If AMD can implement x86 in hardware	If AMD can implement x86 in hardware, why can't Microsoft implement it in software?	mental_	9.427882	-5.242866	comment	3.0	11.0	1497125813	7.8729086
14529130	I'm a little ignorant on this, but h	I'm a little ignorant on this, but how can you own the rights to instructions? Isn't that the same as owning the rights to an API, or the naming and operation of functions? I mean, would I be infringing if I re-implemented the C standard library, or the standard library of some language with a copyrighted spec?How can you even patent something like that? It goes beyond software patents, as it appears to me. But again, I'm very ignorant of this.	ue_	9.544358	-5.3046017	comment	3.0	16.0	1497127550	-7.5678067
14529207	"""x86-64 is as bloated as RISC archit"	"""x86-64 is as bloated as RISC architectures usually are without any of RISC's benefits.""Huh?  I thought the whole point of a RISC ISA is to not be bloated."	yellowapple	9.540841	-5.6222415	comment	3.0	10.0	1497128974	-10.477422
14530234	Alright, I'll come out of retirement	"Alright, I'll come out of retirement to hit this dead horse another lick.""if WinARM can run Wintel software but still offer lower prices, better battery life, lower weight, or similar, Intel's dominance of the laptop space is no longer assured.""Peter. My man. I laughed. I cried.For the millionth time, the ARM ISA does not magically confer any sort of performance or efficiency advantage, at least not that matters in the billion+ transistor SoC regime. (I will include some relevant links to ancient articles of mine about magical ARM performance elves later.) ARM processors are more power efficient because they do less work per unit time. Once they're as performant as x86, they'll be operating in roughly the same power envelope. (Spare the Geekbench scores... I can't even. I have ancient publ"	jonstokes	9.613266	-5.2033925	comment	3.0	13.0	1497146325	7.7713585
14543612	the limit isn't the processor, it's 	the limit isn't the processor, it's how fast memory is. With DDR3-1600, it should be 11.97 GiB/s (12.8 GB/s)I don't understand this reasoning. Why is it being limited to main memory speed? Surely the yes program, the fragments of the OS being used, and the program reading the data, all fit within the L2 cache?	joosters	9.857029	-5.2743044	comment	3.0	23.0	1497344029	8.06346
14547296	Spatial is built on Chisel, and from	"Spatial is built on Chisel, and from what I can tell, basically offers you an ""SDSoC"" experience for Scala.In Chisel, you write Scala that is compiled to Verilog(?) and you put it into your synthesis toolchain. But Chisel is mostly just that: it's a HDL, and not much more. And if you want to talk to an FPGA, especially from software, you still have to write another pile of glue that does interfacing to your device, over your peripherials, etc.Spatial gives you more on top of Chisel. Instead, you simply write a single program and say ""Accelerate this bit"", and it generates both the hardware and software and glues it all together. This means you write a single program once and the compiler generates all the glue for you, so the usage is more seamless.This is what ""SDSoC"" from Xilinx does, bu"	aseipp	9.1091385	-5.487011	comment	3.0	12.0	1497378555	8.512243
14547700	I am honestly surprised that frog + 	I am honestly surprised that frog + gun isn't on the list.I thought that was the meme that started the thing + gun.edit: I also discovered that HN comments don't support utf8 emojis	posnet	9.798087	-6.2442956	comment	3.0	14.0	1497381320	13.021829
14547738	Note that it's from 1995.  Back then	Note that it's from 1995.  Back then, many people still thought that machines with multiple processors were exotic things of little interest even in the enterprise.  That list most notably included one Linus Torvalds.  It also included OP author John Osterhout, who should also have known better - even more so, since Stanford was one of the places where such things were not so exotic.  He even says, right up front, that threads still have their uses when you need true CPU concurrency.  Now that's a common case.  Generalizing from this presentation to the current day is probably a worse idea than threads ever were.	notacoward	9.785617	-5.503863	comment	3.0	26.0	1497381508	8.357984
14547968	Yeah, I think it's for the best that	Yeah, I think it's for the best that there's no support for emoji on HN, it's a great relief to me at least.	microcolonel	9.808591	-6.2670665	comment	3.0	11.0	1497383137	13.040986
14555341	Another Case of Obscure CPU Nondeter	Another Case of Obscure CPU Nondeterminism	gbrown_	9.575121	-5.3243976	story	3.0	125.0	1497468349	7.7843256
14560452	Surprised to see RISC-V is not menti	"Surprised to see RISC-V is not mentioned.  They take an interesting approach to extensibility where it's basically envisioned in the ISA from the start.  Outside a core subset of features that programs can assume, you have to check each extension you need before you use it, so (in theory) it should be possible to drop deadweight extensions in future.See ""ISA Overview"" here:
https://content.riscv.org/wp-content/uploads/2016/06/riscv-s..."	rwmj	9.425831	-5.7080817	comment	3.0	11.0	1497535419	-10.553442
14560817	Also AVX512! And what the heck are w	Also AVX512! And what the heck are we going to do when we need to save the AVX1024 register state! And we really going to push 1kb to memory per context switch? (I think this is somewhat solved by trapping when the registers are first invoked, and kernel drivers that use enhanced instruction sets actually need to pass flags before using them)	frozenport	9.564551	-5.6280427	comment	3.0	11.0	1497537726	8.159974
14590834	Yeah, but what I'm saying is how is 	Yeah, but what I'm saying is how is the scale of a move of x86 to ARM comparable to oil to batteries?From the outside, looking in, it seems like the two leaps are on massively different scales which I feel is important when talking about things that will kill a large corporation.I guess my key question is what makes ARM so much different than x86 that it invalidates Intel's existing knowledge? Batteries have a completely different product life cycle than oil. For one, batteries don't burn away and they recharge. This creates completely different business models. Is there some major difference between ARM chips and x86 chips that I am missing?	crazypyro	9.628594	-5.2751584	comment	3.0	11.0	1497910240	-7.73873
14590591	I believe your analogy is flawed unl	I believe your analogy is flawed unless there has been some massive shift in the chip industry that invalidates a large body of pre-existing knowledge about the industry.How is today's chip industry compared with yesterday's chip industry as dramatic of a shift as going from oil to batteries? That seems like a much more significant leap than x86 to ARM. What am I missing?	crazypyro	9.573978	-5.2123375	comment	3.0	18.0	1497907631	-7.718787
14598530	The per-socket performance might be 	"The per-socket performance might be a nice ""marketing hack"", since a lot of big-iron software is sold and licensed as ""per-socket"".IIRC, Windows Server is sold per-core however. So lots of cores may rise the total-cost of ownership in the case of Windows Server."	dragontamer	9.5775175	-5.225906	comment	3.0	12.0	1497992125	7.859599
14625654	Good enough practices in scientific 	Good enough practices in scientific computing	okket	9.901445	-5.2154193	story	3.0	88.0	1498313979	1.3919308
14630442	This seems like precisely the sort o	This seems like precisely the sort of thing that a competent manufacturer should rule out formally. Formal verification of individual FUs isn't exactly ambitious...I think we're getting to levels of complexity where the process Intel uses, with lots of different QA and testing teams doing their best to look for bugs, just isn't going to cut it. We need formally verified models transformed step-by-verified-step all the way down to the silicon. It's already feasible, with free tools, to formally verify your high-level model (using e.g. LiquidHaskell) and then transform this to RTL (using e.g. Clash). With Intel's QA/testing budget, it's well within reach to A) verify the transformation steps and B) figure out how to close the performance gap between machine-generated (but maybe slower) and h	wyager	9.599891	-5.7593875	comment	3.0	39.0	1498404644	8.117496
14630659	In my experience with parallel code 	In my experience with parallel code written in Haskell, hyper-threading offers only a very mild speedup, perhaps 10%. It is essentially an illusion, a logical convenience. (How long does it take to complete a parallel task on a dedicated machine? Four cores with hyper-threading off has nearly the performance of eight virtual cores with hyper-threading on.)Many people have neither the interest nor the hardware access to overclock, and these processors have less overclocking headroom than earlier designs. Nevertheless, the hyper-threading hardware itself generates heat, restricting the overclocking range for given cpu cooling hardware. In this case, turning off hyper-threading pays for itself, because one can then overclock further, overtaking any advantage to hyper-threading.	Syzygies	9.78971	-5.6020155	comment	3.0	12.0	1498406844	8.242489
14630806	That's absolutely true. When it come	"That's absolutely true. When it comes to CPU/memory, skilled software engineers always think, ""it must be my bug, it always is"".So in that super rare case of actually running into a CPU defect, it's a mindfuck, it'll drive you crazy. You'll be looking for the flaw in your algorithm which makes it fail once a week under production load. But you just can't find it, it makes no sense ...(When it comes to drivers for network/storage/graphics etc devices, it's a whole different story. Those things are piles of bugs that need work-arounds in drivers.)"	ploxiln	9.764046	-5.45552	comment	3.0	15.0	1498408357	7.8039365
14630386	Well, at least Intel acknowledges, d	"Well, at least Intel acknowledges, documents and finally fixes these CPU bugs (via microcode updates).AMD on the other hand doesn't even acknowledge an issue
when multiple customers report problems. See this Ryzen bug:
https://community.amd.com/thread/215773"	octoploid	9.32619	-5.201186	comment	3.0	11.0	1498404075	7.921675
14630721	I wonder if there's a CPU out there 	I wonder if there's a CPU out there that doesn't have bugs.	pshc	9.630943	-5.266993	comment	3.0	12.0	1498407436	7.6744156
14632737	I absolutely agree. Itanium effectiv	I absolutely agree. Itanium effectively killed any hope of VLIW architectures for a generation.I'm hoping The Mill folks can bring back attention to VLIW.	tmccrmck	9.558586	-5.6198616	comment	3.0	31.0	1498432006	8.268013
14633735	Google Linus rant. There are many ex	Google Linus rant. There are many examples.	dkarapetyan	9.305741	-5.8505683	comment	3.0	13.0	1498446040	2.8904243
14635361	So, how does RISC-V compare with Don	So, how does RISC-V compare with Donald Knuth's MMIX instruction set?  Did they use it as a starting base?  Consider it at all?  Be cool to program MMIX in actual hardware.	MycroftJones	9.404826	-5.673774	comment	3.0	14.0	1498469804	-10.524734
14637695	That's a big ask.  Right now RISC-V 	That's a big ask.  Right now RISC-V has a handful of open source CPU cores.  There's no open source network, graphics, peripheral and GPIO hardware that can be cheaply plugged into a synthesized design that can be sold at the price you want.  Which is to say, while there's plenty of stuff out there that someone made work on a FPGA once, there's nothing with a track record and validation/driver stack ready that you can throw into your tools and expect to get a working chip with.  And that's what those SoCs you find in the Pi and similar boards need if you want to get them out at the small-integer-dollars price point: no-brainer existing IP that won't surprise anyone along the manufacturing and support chain.	ajross	9.362148	-5.4947686	comment	3.0	11.0	1498492233	-10.557149
14638918	"""However, Alto microcode is pretty c"	"""However, Alto microcode is pretty crazy, so I'm not going to try a microcode Mandelbrot.""I don't understand that logic, coming from somebody who has a restored Xerox Alto and wrote a Mandelbrot generator in BCPL for it ""to learn how to use the Alto's bitmapped display, not make the fastest Mandelbrot set"".I also expect this guy will get source code for the 'simple' things such as an OR instruction or a fixed-width multiplication instruction within a few weeks.Edit: I’ve been browsing http://bitsavers.trailing-edge.com/pdf/xerox/alto/Alto_Hardw....There apparently are only 16 basic micro-instructions (”The ALU function field controls the SN74181 ALU. This device can do a total of 48 arithmetic and logical operations, most of which are relatively useless. The 4-bit field is mapped by a PROM"	Someone	9.621785	-5.252016	comment	3.0	19.0	1498500383	-7.311361
14649509	Be very careful about this in a shar	"Be very careful about this in a shared environment. AVX512 slows down the CPU cores because of thermal, voltage throttling. The instructions ""take more work"". Intel CPUs take 1 MILLIsecond to return to normal speed.If you're doing any kind of rapid context switching, or multiple workloads, depending on how your scheduler is setup, the OTHER workloads will show up as using more percentage of CPU time per work item. It's non-intuitive, and difficult to debug."	sargun	9.470263	-5.542161	comment	3.0	13.0	1498598035	8.098081
14664072	>PF-4 is also the only place where e	>PF-4 is also the only place where existing cores removed randomly from the arsenal can be painstakingly tested to see if they remain safe and reliable for use in the nuclear stockpile. That work has also been blocked, due to PF-4’s extended shutdown, according to internal DOE reports.I wonder if having another facility that can perform this work wouldn't provide the right incentive for the underperforming unit to improve.  Competition is a healthy thing.  Knowing that there is another lab that is doing the work to specifications should provide good motivation to improve.	sverige	9.485238	-5.268734	comment	3.0	14.0	1498750272	7.770485
14669574	Could you elaborate? TBH I don't kno	Could you elaborate? TBH I don't know much about incompatibilities CPUs can cause in Linux world.	d33	9.769481	-5.2680855	comment	3.0	25.0	1498815743	7.828167
14683563	In microcode, the Alto provides the 	"In microcode, the Alto provides the 16 most useful functions of the 74181 (calling most of the 74181's operations ""mostly useless""). This includes XOR and OR. However, the Alto copied the Data General Nova's instruction set, which doesn't include OR and XOR, so you can't use these instructions from machine code. I think there's extended microcode that provides ""extra"" instructions for XOR and OR and an improved BCPL compiler to make use of them, but I haven't tracked it down.See the Alto hardware manual (page 4) on bitsavers for details: http://bitsavers.informatik.uni-stuttgart.de/pdf/xerox/alto/..."	kens	9.775384	-5.608803	comment	3.0	11.0	1499018276	-7.349292
14686014	Given that the sustainability of Int	Given that the sustainability of Intel's profit margins are dependent on it, I am surprised they do not put more effort into making parallel programming easier. For example, GHC Haskell has a very promising parallelism/concurrency story with its many available programming models, including software transactional memory and lightweight threads, yet it is Microsoft funding it and not Intel.	willtim	9.621608	-5.5155787	comment	3.0	12.0	1499059282	8.293755
14690836	Linus Torvalds breaks into a childis	Linus Torvalds breaks into a childish tantrum of (edit: correction: swearing rants are technically coherent), public swearing at people whenever anyone anywhere in Linux kernel development breaks any userspace app. As a consequence, userspace regressions are rare.(Might contain traces of hyperbole—still; Linus' behaviour is largely unacceptable nonetheless)	dom0	9.526897	-5.809792	comment	3.0	19.0	1499110932	4.2607574
20344168	This reminds me of using NUM LOCK to	This reminds me of using NUM LOCK to see if your CPU was responding to the A20 interrupt.	RyJones	9.722657	-5.383158	comment	3.0	15.0	1562161271	-6.855183
20365269	Atom CPUs are core-for-core comparab	Atom CPUs are core-for-core comparable to the A72 cores in the RPi4. ICP isn't really comparable since the instruction set is different, but performance is similar. The RPi has 4 of them, only the most modern Atoms have that.	snovv_crash	9.4929285	-5.2130485	comment	3.0	10.0	1562355929	7.859316
20375396	Single threaded performance isn't re	Single threaded performance isn't really that interesting anymore except for some specific gaming benchmarks, and even in gaming, you're unlikely to be bottlenecked by single threaded performance (though memory latency could be an issue).	beatgammit	9.711551	-5.4665933	comment	3.0	16.0	1562511469	8.135319
20375503	It does seem like it at a first glan	It does seem like it at a first glance - these are Cortex-M microcontrollers which are really not suitable for running a full-fledged OS. They don't even have an MMU, and they usually only have ~10-100KB of RAM on the chip. Plus, only some packages with >144 pins are able to memory-map external RAM chips like these evaluation boards do.It's a very cool and impressive project, but I wouldn't use it to write an application. Besides cost, the biggest reasons to use these instead of Cortex-A chips are power efficiency and simplicity, and implementing things like process isolation in software seems like throwing all that out the window.But on the other hand, if your device will be plugged in and power consumption isn't a huge concern, I could definitely see the appeal to having things like a Ru	leggomylibro	9.893874	-5.2193294	comment	3.0	12.0	1562512733	7.5905924
20374726	Linux on STM32 Microcontrollers	Linux on STM32 Microcontrollers	donquichotte	9.700898	-5.2027006	story	3.0	47.0	1562501512	7.472135
20387645	Reflection:- Machine code is very de	Reflection:- Machine code is very dense. Really, this is not an accident, although maybe it’s not entirely on purpose either, more just common sense at the time. In the end, there were probably many platforms using this or predecessor CPUs with very little RAM/ROM and bytes still counted even on IBM PC.- Assembly code is still very readable. The trouble is not that machine code isn’t readable, and it probably never really was. It just doesn’t offer ways to build abstraction beyond what the machine supported (like routines, sw interrupts, etc.) Only gets worse as hardware gets more complicated. Imagine avoiding VGA and instead attempting to support initializing a modern graphics card all the way through! It would probably be quite ridiculous even with documentation. This is part of what bug	jchw	9.799748	-5.226983	comment	3.0	14.0	1562627612	-7.7922716
20391643	In my dreams Red Hat's culture overt	In my dreams Red Hat's culture overtakes IBM's and this becomes a successful reverse takeover, but this is only a dream.	rafaelturk	9.926584	-5.441487	comment	3.0	10.0	1562679943	-9.490478
20396014	Almost 80% of IBM's profits come fro	Almost 80% of IBM's profits come from its cloud division, which is only 27% of it's business.It seems like the idea behind the Red Hat acquisition would be to increase the cloud division revenue and keep roughly the same profit margin, which in theory could be great for their bottom line, especially if Red Hat is growing quickly (is it?).The arm chair CEO in me doesn't see how this adds up, though. Red Hat seems pretty pricey. I just don't see how Red Hat competes with AWS, Azure, and GCP moving forward, and I don't really see how it plays nicely / fits into those clouds either. I also don't see how it would make IBM's cloud more attractive. I can see how it could make IBM's cloud more profitable, but it seems like a stretch, given what they paid for Red Hat.	onlyrealcuzzo	9.878245	-5.468272	comment	3.0	15.0	1562702640	-9.444081
20450620	So is the Rpi 4 susceptible to Spect	So is the Rpi 4 susceptible to Spectre? There is no information about it even though the chipset is apparently	karlp	9.611382	-5.5813704	comment	3.0	11.0	1563288808	7.793119
20473926	Why is it a big deal? (beyond the de	"Why is it a big deal? (beyond the debt IBM incurred) How is RHEL the ""leading cloud OS"" when the big clouds don't use it? Why does the OS matter at all in the cloud? Are you actually arguing that the Microsoft OS history will somehow repeat with IBM-Red Hat?"	cloudwalker	9.93743	-5.4496894	comment	3.0	10.0	1563484048	-9.437586
20474567	Most large companies don’t trust IBM	Most large companies don’t trust IBM anymore. RedHat has joined them in turning license audits into a profit center. Defending unfounded audits is a large cost of business with both vendors.  Hard to imagine many folks trusting them on journeys with new technology.	mathattack	9.881565	-5.337409	comment	3.0	41.0	1563489025	-9.419572
20474952	AT&T sees it differently.IBM snags A	AT&T sees it differently.IBM snags AT&T as client in new cloud deal worth ‘billions’https://www.cnbc.com/2019/07/16/ibm-signs-new-cloud-deal-wit...“As part of the agreement announced Tuesday, AT&T will use Red Hat’s open-source platform to manage workloads and applications and “better serve” enterprise customers.”	wearsaredhat	9.926722	-5.399799	comment	3.0	11.0	1563492214	-9.463199
20489157	I am sorry for Intel. Perhaps John G	I am sorry for Intel. Perhaps John Gustafson’s 16 bit posits or unums would have made a better choice.	beckerdo	9.547895	-5.281993	comment	3.0	19.0	1563668532	-1.9304159
20496859	When I clicked the link I thought it	When I clicked the link I thought it would be about something that confused me for a while: What do people mean when they  write a capital J in their emails? I eventually figured out that it's because Outlook automatically converts a smiley emoticon into a WingDings (an old Microsoft icon font from before that term became popularized on the web) version, which happens to have J as the character for a smiling face. View that on a machine that doesn't have the WingDings font installed, and you just get a capital J. Raymond Chen blogged about it too: https://devblogs.microsoft.com/oldnewthing/20060523-10/?p=31...	m12k	9.817129	-6.221277	comment	3.0	15.0	1563793357	-13.962532
20495520	What Spectre Means for Lanugage Impl	What Spectre Means for Lanugage Implementers [video]	cmeiklejohn	9.679168	-5.6232877	story	3.0	42.0	1563773246	7.754555
20506847	i think this kindof misses the mark.	i think this kindof misses the mark. A unikernel is both the kernel (just the things you need) + app together. It’s build for one thing: whatever the app is doing.Tooling/Perf/etc is not needed when running (do you really want to debug in production) but tooling can be used in the process of development.Why consider unikernels? 1) they’re stupid fast. You have only the things you need (booting in nanoseconds? yepp) 2) small attack surface (because you only have your app that’s the only attack surface. you don’t have cruft that build up in you os/kernel over years) 3) light resource usage (you could run thousands of these on the same physical machine) 4) true isolation via the hypervisordefinitely worth keeping an eye on the developments in this space	mirceal	9.931389	-6.1826215	comment	3.0	17.0	1563891078	-12.373513
20525091	Indeed. RISC architecture is gonna c	Indeed. RISC architecture is gonna change everything.	mbrumlow	9.364827	-5.696495	comment	3.0	10.0	1564060579	-10.584008
20525112	I would really liked to know what ex	I would really liked to know what extentions they will support. Will the support the Vector extention? How about some of the once that are not quite finished yet, like Bit manipulations.	nickik	9.479132	-5.7125316	comment	3.0	11.0	1564060796	-10.435623
20525834	Many people consider IME a backdoorh	Many people consider IME a backdoorhttps://en.wikipedia.org/wiki/Intel_Management_Engine	swebs	9.471971	-5.2210226	comment	3.0	13.0	1564066208	7.7749968
20525203	Being in Arm's position sucks now.Wo	Being in Arm's position sucks now.Would they not be so enthusiastic about sanctions, Chinese would've been way more cautious jumping on RISC-V boat.Now instead of having RISC-V as one off research projects, which would have probably died off silently, now they are all treated as survival essential projects.	baybal2	9.350849	-5.6641383	comment	3.0	20.0	1564061470	-10.587411
20527848	Modern x64 is very difficult to beat	Modern x64 is very difficult to beat and takes a lot more than just raw core count.Are there any alternatives on the horizon?	marktangotango	9.5846	-5.320149	comment	3.0	11.0	1564078304	7.9440985
20546164	> It also goes against a wider indus	> It also goes against a wider industrial trend of moving from ARM to RISCV and other architectures.Is this really already an industry trend? It feels more like some parties experimenting with the platform, not necessarily with intentions to move to it wholesale at any point in the future. But I'm probably missing stuff, since I'm not following that space well.	tomsmeding	9.434289	-5.501433	comment	3.0	10.0	1564295777	-10.535316
20548755	What about SGI Onyxhttps://m.slashdo	What about SGI Onyxhttps://m.slashdot.org/story/12659Seems that mips was scalable back thenThere was a story headline about a 16 core RISC V just the other day	ohiovr	9.441844	-5.625727	comment	3.0	10.0	1564335263	-10.527195
20554320	The irony here is most modern CISC d	The irony here is most modern CISC design are breaking instructions to RISC-like μOps. Moore's law also means - you have more transistors for the same area, now figure out how to use them creatively to increase performance. Workloads are constantly evolving and hardware evolves with it to make those workloads fast.	Azerb	9.488528	-5.652038	comment	3.0	14.0	1564406639	-10.452808
20554892	I think it depends on how you interp	"I think it depends on how you interpret ""reduced""- Does it mean reducing the actual number of instructions in the ISA?- Does it mean reducing the functionality of each instruction to it's absoloute minimum?These are similar, and overlapping in places. You can also do one without the other.I think that the base RISC-V ISA does both to a perhaps unhelpful degree. As soon as you want a RISC-V core to be competative with other peer ISAs, you need a bunch of the extensions, which minimises the value in calling it reduced in the first place. At the least, it exposes a possible dichotomy between ""reduced-ness"" and ""usefullness""."	bem94	9.442861	-5.7159724	comment	3.0	13.0	1564410212	-10.543485
20555021	The article is conflating three sepa	The article is conflating three separate issues:(1) The amount of compute and/or data motion that can be achieved with a single instruction. This is really about amortizing the cost of decode and allowing the pipeline to be kept full by producing a lot of work from a single instruction.(2) efficiency gains from vector processing. This both amortizes the cost of decode and produces the amount of control circuitry relative to the number of ALUs --> more flops/area. it also generally favors larger sequential memory accesses which is good for bandwidth.(3) extracting parallelism from the instruction stream. The VLIW debate is about whether that should be done by the CPU itself, e.g., in the form of out-of-order execution, or whether it should be handled by the compiler. VLIW allows the compile	dgacmu	9.649312	-5.672406	comment	3.0	46.0	1564410947	8.107324
20557332	> The amount of compute and/or data 	> The amount of compute and/or data motion that can be achieved with a single instruction. This is really about amortizing the cost of decode and allowing the pipeline to be kept full by producing a lot of work from a single instruction.I'm basing this on my knowledge from CS classes in the late 90s but isn't the point of RISC for the decode to be very simple because the instructions are very simple?Much of the optimization of x86 has been in the Decode where a CISC can be transformed in to multiple and often parallel instructions.  And parallelism where we've seen our gains and benefited the most in the last ~10-15 years of CPU design.Does that mean in order for RISC to be performant some degree of parallelism will have to be done by the compiler?  Isn't that what ultimately killed Itaniu	cptskippy	9.528589	-5.722625	comment	3.0	15.0	1564422861	-2.5765743
20590178	I find it funny that people enjoy th	I find it funny that people enjoy the nostalgia of things like 6502...  I loved my Atari 800XL, but wistfully dreamed that computers might one day be able to handle 320x240 with 256 colours.... boy... that would be good! Meanwhile I was hand assembling 6502 into data sections in basic so I could try and draw a circle... who knew drawing circles was so ridculously difficult and slow?Having said that,  I do like this stuff in hindsight :)	keithnz	9.54301	-5.279224	comment	3.0	12.0	1564711203	-7.3605022
20605273	(Disclaimer: SIL-4 programmer for sa	(Disclaimer: SIL-4 programmer for safety critical rail transportation applications)The way this is done is that 2 of 3 computers need to 'agree' on the final decision in order for it to be considered the correct one - there isn't a single point of assessment, but rather a consensus that must be formed from the results of all 3 computers.  Ideal case, all 3 produce the same results.This has worked successfully for decades.  What's changing now, is that those 3 computers are now no longer the same architecture - you'll have a PPC and an x86 and an ARM-based CPU all attempting to agree to the same data, in order to prevent systemic failure throughout.	fit2rule	9.48631	-5.3168964	comment	3.0	24.0	1564909101	-6.6501904
20624354	I see the whole Spectre/Meltdown/etc	I see the whole Spectre/Meltdown/etc fiasco as an interesting tradeoff: you can have higher performance if you don't care about those side-channel attacks, which is what a lot of applications like HPC are going to do anyway because they don't run untrusted code. That still gives Intel an advantage.	userbinator	9.515364	-5.4208794	comment	3.0	27.0	1565093069	7.8000035
20631039	Keep in mind that all these speculat	"Keep in mind that all these speculative execution exploits rely on being able to already execute code on the target, they can only read data somewhat slowly, and where the data you want to read is in a 64-bit address space is not easy to find.The media loves to blow things out of proportion, but all the specexec attacks are really not as big a deal as e.g. remote code execution. In some ways, they are the real-world equivalent of ""you can sometimes hear things your neighbours say, with a sensitive microphone and lots of patience."""	userbinator	9.66158	-5.628621	comment	3.0	18.0	1565138517	7.785105
20645105	Does anyone know of any benchmarks t	Does anyone know of any benchmarks that go through the full impacts for all of Intel’s hardware-level security issues?I remember seeing the Linux kernel devs discussing some massive 10+% performance hits back around Meltdown/Spectre patch time, and I’m now wondering what the final impact has been.	sq_	9.431357	-5.317962	comment	3.0	13.0	1565275917	7.8106594
20644769	The article is missing the largest e	The article is missing the largest elephant in the room for datacenter cpu's: the security issues Intel chips have had latent for the last decade, and the constant patching and bios updates (and re-updates as researchers discover new attacks) that are needed in order to make datacenter use sane.Intel really messed up, and has no one to blame but themselves.	barkingcat	9.419431	-5.269356	comment	3.0	23.0	1565273697	7.7989206
20652871	Isn't c++ compilation single-threade	Isn't c++ compilation single-threaded and linking multi-threaded? I imagine with pre-compiled headers 64 cores would be a massive overkill. I don't know, if even my 2700x wouldn't be.	TheHardew	9.596831	-5.420894	comment	3.0	10.0	1565345242	7.9636946
20660052	EPYC SAP-SD 2-tier benchmark results	EPYC SAP-SD 2-tier benchmark results	BeeOnRope	9.804559	-5.461555	story	3.0	82.0	1565409460	7.9292836
20670756	I am seeing more and more of what lo	I am seeing more and more of what look like viable alternatives to RISC-V. Agner Fog has an ISA with vector instructions that should influence all future designs. The Bitmanip extension to RISC-V is likewise an education, and should inform any future designs.RISC-V itself? The core design seems very academic. Seriously, who omits rotate instructions?	ncmncm	9.455892	-5.7470613	comment	3.0	19.0	1565560147	-10.546868
20671070	Yeah, RISC-V omitted rotate from its	Yeah, RISC-V omitted rotate from its 47 instruction base ISA.  You don't get to be that small without cutting the unnecessary and rotate would require a barrel shifter which in turn would rarely be used. Instead, rotate (rol, ror, rori) can be found in the “B” Standard Extension for Bit Manipulation.	CalChris	9.471123	-5.7604003	comment	3.0	13.0	1565564031	-10.553704
20675350	I don't quite understand the aim, or	I don't quite understand the aim, or why it overlaps with OpenBSD. This is to provide a different, simplified CLI to git?	misterdoubt	9.9312105	-5.921037	comment	3.0	26.0	1565617775	-11.828569
20681024	>The emojis are of bad quality and l	>The emojis are of bad quality and look like crap.Maybe an oversite on my part,  but I didn't even consider this as I was evaluating an enterprise productivity app...	jimnotgym	9.807582	-6.255463	comment	3.0	10.0	1565650895	-13.954355
20685952	I'm a supercomputer expert - that's 	I'm a supercomputer expert - that's a part of my job - who works on data processing fulltime.  I know these codes, I know the hardware architecture, and my statement above is technically correct.  I'm not missing anything.	dekhn	9.755451	-5.4415984	comment	3.0	10.0	1565705294	-6.409241
20692146	You don't need a barrel shifter. You	You don't need a barrel shifter. You can shift one bit at a time. It's slower, but takes far fewer components.Capacitor memory addressed with tubes seems a strange choice. DRAM is capacitor memory, of course. Atanasoff, who had a a sort of computer in 1939, had capacitor memory, but he had to use a drum rotary switch to address it.Memory was the big problem in the early days. IBM had an electronic multiplier before WWII, and plugboard-programmed machines, but no good memory elements.  (Just registers with motor driven wheels and clutches and contacts.) Pilot ACE had a delay line (slow, serial access), the Manchester Baby had a Williams tube (too expensive per bit, but random access), and the EDVAC had mercury tank delay lines (slow, serial access, and toxic). Whirlwind (1951) had the first	Animats	9.762384	-5.195428	comment	3.0	13.0	1565748712	8.068131
20736713	Sushi Roll: A CPU research kernel wi	Sushi Roll: A CPU research kernel with minimal noise for microarch introspection	matt_d	9.937002	-5.3478937	story	3.0	74.0	1566212494	-5.026009
20750093	Except neither of those are in the s	Except neither of those are in the same performance ballpark as Intel, while Power ISA is.	classichasclass	9.431066	-5.3097277	comment	3.0	12.0	1566324820	7.766694
20749661	https://en.wikipedia.org/wiki/PowerP	https://en.wikipedia.org/wiki/PowerPC_e6500Freescale hasn't made a new low-power Power chip in a while, but... historically speaking, there were a lot of low-wattage / efficiency-focused embedded POWER designs.I don't know what happened politically between the companies to use ARM instead. But I would imagine that ARM's instruction set was cheaper (or maybe easier) to engineer than Power ISA. Hopefully Freescale engineers can chime in on the discussion, because I'm really just shooting from the hip here.I would expect most issues to come down to business politics. IBM open sourcing the PowerISA is also a business politics move (I guess they hope to recapture the lost ground in the embedded space).PowerISA means operating with IBM's ecosystem: GCC, Linux, etc. etc. Remember IBM has merged w	dragontamer	9.503162	-5.365769	comment	3.0	14.0	1566322678	-7.7577887
20767579	Interesting that they went with a 32	Interesting that they went with a 32bit ISA, given the growth and demand for ML/AI, which seems to lean upon lower precision (8bit), then I wonder if they could of gone for that instead of something more a jack of all trades design.Which makes me wonder, when will somebody do an ISA dedicated for ML/AI and will we ever see old 8bit CPU's reborn as on memory CPU's.But we have seen this approach for processing upon memory before and whilst that has not tractioned into a product, this might.  Though with Chip design going towards chiplets, ram can and may well become another chiplet in the evolution of that design process.	Zenst	9.544385	-5.386989	comment	3.0	10.0	1566479275	-7.6690483
20797602	The author's comments on cache sizes	"The author's comments on cache sizes are a bit reductive. Not all ""L3"" is created equal, and designers always make tradeoffs between capacity and latency.In particular, the EPYC processors achieve such high cache capacities by splitting L3 into slices across multiple silicon dies, and accessing non-local L3 incurs huge interconnect latency - 132ns on latest EPYC vs 37ns on current Xeon [1]. Even DDR4 on Intel (90ns) is faster than much of an EPYC chip's L3 cache.Intel's monolithic die strategy keeps worst case latency low, but increases costs significantly and totally precludes caches in the hundreds of MB. Depending on workload, that may or may not be the right choice.[1] https://www.anandtech.com/show/14694/amd-rome-epyc-2nd-gen/7"	neilmovva	9.633421	-5.387601	comment	3.0	27.0	1566796442	8.041493
20803314	"Maybe it won't contain a vendor ""man"	"Maybe it won't contain a vendor ""management engine"".https://en.wikipedia.org/wiki/Intel_Management_Engine#Claims..."	cmiles74	9.474612	-5.211666	comment	3.0	14.0	1566850660	7.783993
20803316	RISC-V is an instruction set - I thi	RISC-V is an instruction set - I think you're confusing that particular implementations of RISC-V (of which there are few yet)	Taniwha	9.440771	-5.7429137	comment	3.0	21.0	1566850661	-10.542945
20803323	But none of them are competitive at 	But none of them are competitive at all on an IPC basis right?Don't get me wrong, I would love a RISC-V chip that is competitive with the ARM chips in smartphones but I think we are quite aways away from it for the time being.RISC-V is most successful as microcontrollers who do not have to be state-of-the-art fast, they just have to work reliably.	bhouston	9.399075	-5.6311255	comment	3.0	18.0	1566850714	-10.5467415
20803622	>Generational benchmarks show big le	>Generational benchmarks show big leaps in every new arch on userbenchmark,That is because GPU scales very well with Transistor count, throw in more transistor and memory bandwidth and you are good. On the CPU you could have doubled the transistor budget and get marginal improvement in IPC.	ksec	9.461827	-5.2300305	comment	3.0	21.0	1566852589	7.8738194
20803675	I don't know why there would be _any	I don't know why there would be _any_ porting involved.  Arm and RISC-V are so similar that the compiler should take care of it.The major pain points today are the JITs, which applies to Java and JavaScript in particular.  There has been preciously little (public) progress on these.	FullyFunctional	9.4272	-5.684366	comment	3.0	11.0	1566852934	-10.589909
20803229	It means they managed to get irix ru	It means they managed to get irix running in qemu. Presumably on an x86 cpu.Notable because the sgi indigo had a MIPS R3000A CPU.https://en.m.wikipedia.org/wiki/SGI_Indigo	tw04	9.917499	-5.429464	comment	3.0	18.0	1566850157	-8.363941
20818487	This is the first time I've heard ab	"This is the first time I've heard about this emoji being in some way connected to white suppremacy... is this a thing?Edit: relevant wikipedia article
[0]https://en.wikipedia.org/wiki/OK_gesture#As_a_white_power_sy...It seems online culture is so plastic that we can quickly see a move from irony/trolling to sincere usage. How is a person not at the fronts of where hateful groups and their opponents meet supposed to navigate a battlefield of memes and conventions that see distinct transitions in cultural symbols (like a phase change almost) from benign to harmful within weeks?"	wnkrshm	9.783761	-6.2566304	comment	3.0	12.0	1566989065	-13.957107
20824757	Sort of what the MC68008 was ages ag	Sort of what the MC68008 was ages ago: 32 bit internal architecture but reduced external data and address buses so the chip could be used to build simpler/cheaper systems.	squarefoot	9.591073	-5.248589	comment	3.0	15.0	1567031691	-7.459366
20826288	And think about what fully opening u	And think about what fully opening up POWER like this begins to enable!IBM has poured a ton of money into having roughly the same ecosystem for POWER as x86: nearly every major Linux distribution ships ppc64le ports [0] (most at full parity to their x86 server release--including testing and building on the platform itself), there's several places to get access to it (even for free as I mentioned on a previous thread [1,2]), and several FPGAs, GPUs, and other accelerator cards work with it [3,4].Going past x86 (and competing with RISC-V and others), there's a freely available softcore (as I mentioned elsewhere) [5]. And since IBM open sourced the latest ISA with a full, modern instruction set (AES, SHA, Vectors...) -- the community around a softore could eventually go and implement it [6]. 	cipherboy	9.567769	-5.4137096	comment	3.0	12.0	1567047467	-7.800431
20832688	Microwatt: A Tiny Open Power ISA Sof	Microwatt: A Tiny Open Power ISA Softcore Written in VHDL 2008	protomyth	9.482738	-5.5164504	story	3.0	73.0	1567106341	-10.451867
20838088	No ARM-like revenue based royalties,	"No ARM-like revenue based royalties, and broadly supported, including mainline Linux kernel support.  So, companies like Western Digital are all in.  And, if someone makes an ""open source"" CPU with it, to match the open source ISA, it's a win for trusted computing.Also popular here because some folks imagine a new ecosystem of cheap Rpi type boards with no magical binary blobs. See, for example, lowrisc.org (though they seem far from shipping)"	tyingq	9.565713	-5.273072	comment	3.0	40.0	1567169822	-7.8177085
20838100	What particularly bugs me are the fa	What particularly bugs me are the false claims that say using RISC-V will make you more secure.	als0	9.377307	-5.697764	comment	3.0	14.0	1567169977	-10.586607
20838112	Arm license cost is nothing compared	Arm license cost is nothing compared to what they have invested in testing and QA. One round of asic that fails is significantly more expensive.If you are jumping on risc-v to save money you have your priorities very wrong. On the other hand if you are Huawei and can't do business with arm...	panpanna	9.40137	-5.611036	comment	3.0	23.0	1567170070	-10.530118
20839458	> RISC-V simplicity simply means les	> RISC-V simplicity simply means less bugsFewer bugs in your code, or fewer bugs to encounter in the platform?I've found that my bugs are usually processor-independent, and that most of the bugs in SOCs are not with the CPU cores, but the support components around them (e.g., DMA engines and timer registers with bizarre behavior).Well . . . and cache coherency issues. But everyone has cache coherency bugs. :-)	kabdib	9.407047	-5.693673	comment	3.0	17.0	1567178429	-10.552934
20847512	> Would you hire Linus for your bog 	> Would you hire Linus for your bog standard dev role? Of course not. He'd be bored in days.I've often wondered if Rob Pike or Guido Van Rossum went through the same interview process at Google that we all hear stories about. I'd be very surprised if they did and my guess is, for them, it was much more of a negotiation of what they were going to work on and what their compensation was going to be.	0x445442	9.306311	-5.874038	comment	3.0	16.0	1567271377	4.2725244
20859599	I'm not defending Intel or even part	I'm not defending Intel or even particularly have a positive opinion of Intel overall but I don't know how accurate this test is considering the difference in Linux kernel versions used in this benchmark. According to the article the Intel system is running a 3.10 kernel (doesn't say which distro but I'm pretty sure it's RHEL 7 or CentOS 7) while the EPYC system is running Ubuntu 19.04 with the latest 5.0 kernel. Also I'm not sure if the 3.10 kernel they're running on the Xeon system has been patched for Meltdown and Spectre which would could also affect the performance. I doubt it would amount to a significant difference in performance but usually benchmarks tests like this use the same OS and software stack for the tests.	weare138	9.336145	-5.2228146	comment	3.0	13.0	1567437505	7.945288
20859759	I get that sometimes some sign of em	I get that sometimes some sign of emotion needs to be expressed in text, but there were ways of doing that before emojis existed. We had smileys like :-), ;-) and :-(. And tags like <sarcasm></sarcasm>.	jhbadger	9.794861	-6.257209	comment	3.0	14.0	1567438865	-13.944818
20860092	Eh, I could just write [wink], or [S	Eh, I could just write [wink], or [SAD FACE].	papito	9.804243	-6.2424984	comment	3.0	14.0	1567441689	-13.961238
20866665	> but lacking in sufficient charisma	> but lacking in sufficient charisma to create more than a small following.IMO it's not that Linus has more charisma than Theo, it's simply the network effect of one project over the other.	knocte	9.289799	-5.8871055	comment	3.0	14.0	1567520193	4.204806
20867997	I disable hyperthreading for better 	I disable hyperthreading for better performance.In my experience as a mathematician building parallel compute servers, hyperthreading generates more heat than it is worth. I can overclock further without hyperthreading, to more than overtake the faint advantage that hyperthreading offers at a given clock speed. So I now buy binned, delidded processors from Silicon Lottery, choosing the best reasonably priced speed of the best cpu without hyperthreading. That would today be the i7-9700 @ 5.1GHz for $400.	Syzygies	9.59875	-5.4248304	comment	3.0	11.0	1567526979	8.238943
20886324	back in 2005, Intel had Core 2 Due a	back in 2005, Intel had Core 2 Due and Core 2 Quad already in its pipeline. I don't think Intel has anything comparable in its pipeline now.	dis-sys	9.405366	-5.20342	comment	3.0	13.0	1567689334	7.8981495
20909663	I better hope AVX512 isn’t used on s	I better hope AVX512 isn’t used on simple string functions, as it causes so much heat Intel CPUs have to reduce their clock speed significantly, affecting other running processes as well.https://www.tcm.phy.cam.ac.uk/~mjr/IT/clocks.html	stingraycharles	9.451674	-5.5517883	comment	3.0	13.0	1567938816	8.125333
20910042	but it is to AMD engineers's job or 	"but it is to AMD engineers's job or at least people willing to run benchmarks on AMD cpus, to ensure that ""it works just as well on an AMD CPU"", not to Intel."	jcelerier	9.305014	-5.211502	comment	3.0	24.0	1567944449	7.8708205
20910099	No.With an open source project like 	No.With an open source project like this, every contributor has a responsibility towards all users of that code. That means that if Intel makes a change, they are also responsible for AMD support. Putting a generic optimization behind a vendor detection is not acceptable in the community.However, as others' have mentioned, this previously might not have benefited AMD, despite technically being supported, so it was likely meant well at the time of implementation. Intel is usually quite good players when it comes to open source contributions.	arghwhat	9.251891	-5.187746	comment	3.0	21.0	1567945255	7.8964844
20910177	They didn't harm in any way the AMD 	They didn't harm in any way the AMD users, just didn't invest in their well being. You can't expect intel to benchmark if a feature would be better or not on amd, that's not its role. It submitted a patch that was good for its users. Up to amd to benchmark it for their users. It would still be a lot less expensive to benchmark it and enable it for amd, than develop it from scratch as intel.	rat9988	9.281321	-5.238301	comment	3.0	16.0	1567946180	7.856729
20910382	I want to know why ECC RAM isn't mor	I want to know why ECC RAM isn't more common.  With the amount of RAM going into today's computers, it's insane not to protect it.	mark-r	9.4709215	-5.5385046	comment	3.0	10.0	1567948484	8.260137
20931090	TIL VHDL was commisioned by the DoD.	TIL VHDL was commisioned by the DoD.Also random note, but wouldn't most engineers familiar with HDL's be electronic engineers rather than software developers?	non-entity	9.085446	-5.496916	comment	3.0	11.0	1568138020	8.633932
20930542	SMT-COP: Defeating Side-Channel Atta	SMT-COP: Defeating Side-Channel Attacks on Execution Units in SMT Processors	matt_d	9.783668	-5.573535	story	3.0	41.0	1568135508	7.8428183
20948994	I get that; it's cheap and low power	I get that; it's cheap and low power, two things I like (and  can also get from arm devices.)  But what's the appeal in x86 without expansion ports?  It seems to me I can run whatever software I have on either, so the differentiating factor should be hardware support, but without a PCI slot I don't really get it.Having an intel GPU is nice enough I guess.  I might get one just for that.	partialrecall	9.588517	-5.1844873	comment	3.0	10.0	1568274171	7.5992694
20956462	I would hope any case where the emoj	I would hope any case where the emoji is described rather than shown to a jury would be tossed as a mistrial. Could you imagine the court describing video evidence instead of allowing the jury to review it?And yes, what to show for the emoji? Which platform's rendering? What about reactions to the message that can be added in some apps?All in all I weigh emojis very little compared to other possible evidence considering how convoluted this all is.And of course sending someone a knife emoji is not a threat. A threat requires specifics.	akersten	9.782922	-6.267266	comment	3.0	16.0	1568322428	-13.9585905
20956549	Valid point about the rendering: I w	Valid point about the rendering: I wonder how often Emoji cross-platform rendering causes confusion. (then such confusion leads to something that is presented in court).> https://emojipedia.org/	dpflan	9.80789	-6.2826157	comment	3.0	13.0	1568323002	-13.958547
20969606	There are several more ways you can 	"There are several more ways you can escape chroot(2) through VFS attacks (nd->root protections are very minimal).However, the more important point should be that there is a similar syscall which doesn't have the same flaws as chroot(2) because the protection is based on mount namespaces -- pivot_root(2). The problem with chroot(2) is that the mountpoints above ""/"" are still accessible by the VFS internally. pivot_root(2) gets rid of the mounts and so VFS won't reach them anymore."	cyphar	9.769585	-6.4274087	comment	3.0	20.0	1568450258	-14.026803
20970055	Many comments in this thread are bas	Many comments in this thread are bashing the article for saying that chroot is useless or shouldn't be used. However the article itself takes a more nuanced approach.From the conclusion:>It is not hard to consider the chroot() system call a security feature. In theory, it sounds great, but if you really take the time to understand what is going on, it is not really a security feature, it is closer to what we would call a hardening feature. It might slow down an attacker, but in most situations it is not going to stop them. We are dealing with a situation where calling this a security feature is likely more damaging than not because it creates a false sense of security. It is human nature to let our guard down if we believe we are safe. Using chroot is no safer than not using a chroot. You 	asadjb	9.765199	-6.4319086	comment	3.0	13.0	1568459254	-14.039484
20977036	I think AMD already has that covered	I think AMD already has that covered with Epyc 2 (Rome) processors.POWER is also known for being highly SMT, which could lead to them being even more prone to the issues that plagued Intel's implementation of hyperthreading. A single POWER9 core has 4 to 8 threads.	coder543	9.405446	-5.23914	comment	3.0	13.0	1568552623	7.9508557
20995639	> instead of stealing TravisCIs idea	> instead of stealing TravisCIs ideas (cough GitHub Actions Cough)Not sure how you come to that conclusion. Even _if_ that were true, that would probably be a good thing now that TravisCI is on life support.	hobofan	8.803876	-6.3578653	comment	3.0	18.0	1568731126	-9.023697
21000971	“All that being said, his belief sys	“All that being said, his belief system guides the FSF. I’m concerned that the FSF will degrade with him being gone.”It may also improve. Often things just keep going once the person thought to be indispensable leaves. It’s a good test for the organization if they have people who can step up. I wonder how Linux will do once Linus retires.	Ididntdothis	9.368613	-5.855757	comment	3.0	12.0	1568761540	4.2246456
23748302	I don’t suppose there is a way for t	I don’t suppose there is a way for the SoC to run something besides Python? I appreciate the flexibility of a scripting language and would love to try one of these out, but I feel like a hardware device should have a RTOS (or no OS) and a language that doesn’t have a GC. Can you imagine having jitter/latency randomly introduced from the Python layer?	lukevp	9.80961	-5.3428607	comment	3.0	10.0	1594046055	-8.296754
23753240	I wonder how well it works. If you t	I wonder how well it works. If you take an x86_64 system and make a memory control group with only 32MB of memory (and kmem tracking is enabled, which is true by default) the container will OOM right away. I've been operating under the belief that Linux now requires 64MB at a minimum, but perhaps a 32-bit uniprocessor build can get by with less.	jeffbee	9.591919	-6.3967123	comment	3.0	18.0	1594072452	10.048782
23757753	You would have problems with licensi	You would have problems with licensing the 68k ISA.I believe freescale currently owns the architecture, and still manufactures some 68k microcontroller cores.	phire	9.448951	-5.438947	comment	3.0	13.0	1594118816	-10.504384
23760689	I recently was curious about the rel	I recently was curious about the relative performance of the classic CPUs, so I made this table to compare their memcpy performance:https://github.com/jhallen/joes-sandbox/tree/master/classic-...	jhallenworld	9.415545	-5.199756	comment	3.0	22.0	1594138495	7.9427667
23763142	> but let's not forget the non-mater	> but let's not forget the non-material nature of software allows this, hardware will always be a physical (material) artifact.Sort of?I tried to get into FPGA programming a while ago, and it turns out the entire software stack to get from an idea in my brain to a blinking LED on a dev board is hot garbage. First of all, it's insanely expensive, and second of all, it really, really sucks. Like how is it <current year> (I forgot what year it was, but it was 2016-2018 timeframe) and you've tried to reinvent the IDE and failed?I think projects like RISC-V and J Core are super cool, but I couldn't possibly even attempt to contribute to them based on how awful the process is.	nwallin	9.079651	-5.3718524	comment	3.0	11.0	1594150640	8.466725
23766750	> Pro applications from Apple — incl	> Pro applications from Apple — including Final Cut Pro, Motion, Soundtrack Pro, DVD Studio Pro, Aperture, Logic Pro, Logic Express, Shake and Final Cut Express — are not supported by Rosetta.Huh, I wonder why that was.	Wowfunhappy	9.792092	-5.326909	comment	3.0	12.0	1594180449	7.6293325
23773865	FPGA Softcore SoC Shootout	FPGA Softcore SoC Shootout	zdw	9.205384	-5.414886	story	3.0	97.0	1594239938	-10.585111
23789912	It’s unclear to me what eight channe	It’s unclear to me what eight channel memory actually means, I’m not used to seeing that mentioned in casual architecture overviews. What’s the benefit of that? Is that something that a programmer must explicitly take advantage of, or is that just an automatic part of the CPU?	hellofunk	9.774728	-5.2430253	comment	3.0	11.0	1594376183	8.0116005
23790549	> Building softwareWell, the problem	> Building softwareWell, the problem with that is that no make system can utilise so much core. Even linux kernel, probably the biggest C project in mainstream use, can not consistently load even 16 cores with mostly handwritten makefiles.P.S.I do not say that building software is not CPU parallelisable in principles, I'm saying that regular make systems have trouble handing big number of parallel tasks in practice, even in big, well run projects that use handwritten makefiles.	baybal2	9.779541	-5.5121884	comment	3.0	13.0	1594381761	-7.6272306
23795221	Disclaimer: I am not a HW designer, 	Disclaimer: I am not a HW designer, I could very well be wrong.It is true that there are tasks where threading matters, but still require a CPU rather than a GPU. I wonder however if these tasks do need full SSE/AVX etc. Couldn't these extensions be removed of the CPU cores and instead have the necessary work performed by the GPU?It would be interesting to produce statistics on how much these extensions are used in these scenario. Imagine how much space and complexity could be saved on a CPU die by making stripped down versions. That space could in turn be used for more cores!I read a little about the Xeon PHI cpus, which iirc, is a multicore CPU with a very small ISA, but I wonder why x86 makers aren't trying to go in that direction: isn't there plenty of dedicated workloads which would h	waltpad	9.585688	-5.380304	comment	3.0	10.0	1594408697	8.01535
23809878	I for one would be delighted by havi	I for one would be delighted by having more caches or wider backends instead of AVX512, but I don't want SIMD to be pushed into GPUs. It'd be better to do the reverse - to push forward the asymmetric core idea and move more GPU functionality into lots of simpler cores tuned for SIMD at the cost of single thread performance.	rbanffy	9.422277	-5.4241095	comment	3.0	14.0	1594542961	8.153872
23810307	He has the history correct.  Most of	He has the history correct.  Most of the CPUs that x86 beat in the market had superior FP performance;  SPARCs, Alphas, PA-RISC, Itanium, etc.> When's the last time he actually did anything with a computer?According to Linus he completes about 30 pull requests a day.  Some multiple of that in kernel builds.  His $1900 32 core Threadripper speeds that process a great deal and FP contributes little to nothing.Today people stream video+audio, encrypt+decrypt and render graphics.  All of these have specialized silicon.  If their AVX-512 vanished in the night almost no one would notice the next day.Maybe we should all be astronomers and thermodynamicists writing bespoke finite element simulations and have a deep appreciation for the wonders of floating point ISAs, but that's just not the real w	topspin	9.491857	-5.519045	comment	3.0	21.0	1594549059	7.859426
23810502	He has the history correct. Most of 	He has the history correct. Most of the CPUs that x86 beat in the market had superior FP performance; SPARCs, Alphas, PA-RISC, Itanium, etc.This isn't a discussion about history, it's a discussion about SIMD FP instruction sets.Maybe we should all be astronomers and thermodynamicists writing bespoke finite element simulations and have a deep appreciation for the wonders of floating point ISAs, but that's just not the real world.Bullshit.  Pure, unrefined organic bullshit.  I can't begin to imagine why you, or Linus, or anyone even remotely conversant with computers would think this way.  This attitude isn't just stupid, it's dangerously stupid.  Influential people listen to Linus, and in this case, they shouldn't.Ever play a modern computer or console game?  You're soaking in floating-poin	CamperBob2	9.557391	-5.5449576	comment	3.0	16.0	1594552089	8.002534
23815257	As seen on twitch, letting people pu	As seen on twitch, letting people put emojis in their name on a black and white site sets up a system where scanning eyes just see those eye-candies and skip over the rest. This is useful on twitch as it highlights the streamer's paying subscribers but here it's just whoever is more obnoxious.	carrolldunham	9.790352	-6.2677636	comment	3.0	12.0	1594592586	-13.95994
23815414	ARM has a more relaxed memory model 	ARM has a more relaxed memory model that allows you to skip some uarch components. For example, the x86 instruction cache needs to watch for writes to instructions it's executing, while ARM derived CPUs can just ignore those writes.And ARMs fixed length instructions allow apple to just duplication their instruction decoder logic until they are decoding (currently) 7 instructions per cycle.With x86, you have to work out how long each instruction is to know where the next instruction starts. Intel and AMD actually try to decode an instruction starting at every single byte (over 16 bytes) letting the earlier instructions cancel out any incorrect instructions.With this scheme, Intel can only decode 5 instructions per cycle, while AMD are currently doing 4. And they both require certain complex	phire	9.653634	-5.4563866	comment	3.0	12.0	1594594296	7.841806
23816249	I think AMD killed Itanium. I think 	I think AMD killed Itanium. I think Intel’s plan was to leave x86 forever stuck at 32- bit and have Itanium be the natural upgrade path as computers started running into the 4 GB limitations. I think it would have been a nice transition story.However, when AMD released AMD64 it killed this strategy. You could now buy a chip that natively ran x86 32 bit at full speed, plus be able to run code that could address more than 4 GB of RAM.Once AMD64 came out, Itanium was a dead architecture.	RcouF1uZ4gsC	9.512654	-5.456708	comment	3.0	13.0	1594603550	-7.76602
23824028	While I love Linus and I think he's 	"While I love Linus and I think he's excellent at what he does, he's utterly missing the fact that things like AVX-512 sell chips, and that's what Intel's in the business of doing. And best practice in how one writes software will increasingly look like ""write it so it executes well in a massively-parallel context"" if the driver for chip sales is massively-parallel problems.We've smacked pretty hard into the wall of how fast we can make CPUs by miniaturizing components, and the low-hanging fruit now is parallelization, predictive execution, and the whole host of ways to do more per clock cycle, not speed up clock cycles. But that flies in the face of the traditional embarassingly-serial pattern of the x86 instruction set and computing environment. Much of what Intel's doing these days is tr"	shadowgovt	9.512165	-5.490765	comment	3.0	12.0	1594665345	8.060319
23824223	I’ve run into errors compiling the E	I’ve run into errors compiling the Erlang VM before (just doing some Linux package management). If I casually ran into these types of issues on x86, I’m skeptical this really has anything to do with Apple Silicon, which is ARM after all.	drvdevd	9.752365	-5.2592955	comment	3.0	21.0	1594666331	12.892998
23834417	My team ran about 50% of a Fortune 5	My team ran about 50% of a Fortune 500 software company on CoreOS up until a few months ago when we migrated to Flatcar. We even paid a lucrative support contract while we ran it. I can count the number of major OS issues we had with it over several years on one hand- and we've had even better success with Flatcar so far.Calling CoreOS unsuccessful is a massive misunderstanding of the market.	dharmab	9.862285	-5.837734	comment	3.0	16.0	1594745643	-9.253243
23836937	> You don't have to wait. The curren	> You don't have to wait. The current Ryzen 3000 series processors support ECC.The post you were responding to asked when they would get official ECC support.  ECC is not officially supported on Ryzen.  If it works on your particular board/BIOS, great, but it's not officially validated or tested, so nobody besides you will actually be testing whether it works, and if it doesn't work in some edge case (or at all) then sucks to be you.  If ECC doesn't work right on some future BIOS revision that fixes a security issue or some other critical bug, and there is never an updated version that does support ECC, sucks to be you.That is specifically the problem that people are looking to avoid by asking for official support.As it stands, you can probably count the number of boards that anyone would 	paulmd	9.396263	-5.4701014	comment	3.0	17.0	1594756454	8.241288
23856998	In that case the comment makes no se	In that case the comment makes no sense - the details of AArch64-based Macs have been made public just a few weeks ago. It takes a while to do port and test for a new platform, even if iOS was already supported.	qalmakka	9.795766	-5.2174277	comment	3.0	11.0	1594888741	-7.6692176
23862479	Does this finally address Rowhammer?	Does this finally address Rowhammer? Ctrl-F on the article yields nothing...	luizfelberti	9.623912	-5.6749716	comment	3.0	15.0	1594925747	-13.890757
23863437	The processes to form NAND and DRAM 	The processes to form NAND and DRAM are completely different. DRAM relies on creating non-leaking capacitors which are highly difficult to manufacture at such a small scale. NAND benefits from innovations in the CPU lithography space since it's essentially all transistor based. Why would you expect them to have the same price, unless you knew nothing about the technology? Also, there are plenty of distinct competitors in the DRAM space. Do you have a source suggesting Micron and Samsung are engaging in price fixing together?	lend000	9.685747	-5.2413135	comment	3.0	16.0	1594931121	7.922942
23865003	If the difficulty of DRAM is in crea	If the difficulty of DRAM is in creating capacitors at that size, why haven't we seen a shift toward SRAM (6T, for instance), which is purely transistor-based?Sure, you have to sacrifice more transistors for the same capacity, but newer processes can fit more on the chip, right? I recall from computer architecture classes that the benefit of DRAM is the ability to use fewer transistors, but if transistors are cheap...(I'm sure I'm missing something here. Power consumption / heat generation? I also never really understood why SRAM continues to be so expensive, when it seems like it would obviously benefit from smaller processes.)	vitus	9.680998	-5.2679853	comment	3.0	12.0	1594941530	7.9054284
23868241	Why does it feel like JavaScript dev	Why does it feel like JavaScript development is always accompanied with a huge amount of emoji?	Hamuko	9.820676	-6.2665877	comment	3.0	11.0	1594972479	-13.96051
23890183	>We fuzzed that function and found o	>We fuzzed that function and found out that it does not give consistent results between Intel and AMD CPUs when SSE2 instructions are used.I'm sad this wasn't investigated further. Was one of the implementations not standards compliant?	gruez	9.585091	-5.557047	comment	3.0	48.0	1595174148	8.065147
23891810	Here’s Intel versus AMD relative err	"Here’s Intel versus AMD relative error of RCPPS instruction:
http://const.me/tmp/vrcpps-errors-chart.png
AMD is Ryzen 5 3600, Intel is Core i3 6157U.Over the complete range of floats, AMD is more precise on average, 0.000078 versus 0.000095 relative error. However, Intel has 0.000300 maximum relative error, AMD 0.000315.Both are well within the spec. The documentation says “maximum relative error for this approximation is less than 1.5*2^-12”, in human language that would be 3.6621E-4.Source code that compares them by creating 16GB binary files with the complete range of floats: https://gist.github.com/Const-me/a6d36f70a3a77de00c61cf4f6c1..."	Const-me	9.3118105	-5.192306	comment	3.0	27.0	1595187302	7.8116393
23921732	I'm trying to give you the benefit o	"I'm trying to give you the benefit of the doubt here, but trying to make a point that a new product ""copied what [you] are doing"" just seems inappropriate. Is there perhaps a better way that this could have been phrased?Both products operate in the same space, and are attempting to solve similar problems, but as far as I can recall Release attempts to manage all environments from dev -> production, while Reploy is specifically targeting the developer experience around managing and sharing staging environments.The concept of dynamic staging environments is not new; I've personally built in-house solutions to solve this problem years ago, well before Release went through YC. It's not really fair to say that anyone who comes out with a similar product is ""copying Release""."	nrmitchi	9.084522	-6.417202	comment	3.0	12.0	1595452864	-8.489194
23924090	Actually, the rPi foundation have be	Actually, the rPi foundation have been extremely lazy about ARM64 support. The Pi 3 and newer support it (and I run 64bit Arch on mine), but Raspbian does not. I'd wager 95% of Pi users are stuck with 32-bit ARM software, as you have to go out of your way for ARM64 support.	marcan_42	9.756851	-5.2831025	comment	3.0	10.0	1595477199	-7.8440323
23928445	I wonder what would be the advantage	I wonder what would be the advantages of using an FPGA to test a CPU design - compared to relying on a (presumably more accurate) computer-based simulation. (I understand the reasons one might want to implement a CPU in an FPGA.)	Koshkin	9.116287	-5.31619	comment	3.0	10.0	1595518651	8.260524
23928487	"CPUs are already ""programmable"" via "	"CPUs are already ""programmable"" via microcode updates."	deelowe	9.5759945	-5.3586535	comment	3.0	10.0	1595518821	7.8394732
23928736	I am working right now on bare metal	I am working right now on bare metal websockets implementation on Xilinx Series 7 FPGAs. Currently it’s ZynQ SoC, but final product will probably have Kintex 7 inside, so no Linux. The tools make me cry, no examples, application notes from 2014 with ancient libraries. I hope, vendors will fix tooling. But I see, Xilinx has released Vitis, so their scope is elsewhere, no interest in old crap. Using Git with Vivado is already enough pain. So I keep my text sources in Git and complete zipped projects as releases. Ouch!	lnsru	9.103404	-5.3820806	comment	3.0	23.0	1595519973	8.539049
23929685	The multiple FPGA on a board is gene	The multiple FPGA on a board is generally from Dini Group right? Fantastic boards.Ref: https://www.dinigroup.com/web/index.php	mindentropy	9.093482	-5.316867	comment	3.0	11.0	1595524736	8.343358
23931204	Or let me ask in different way: why 	Or let me ask in different way: why use ARM if you control and build the whole stack from electronics to operating system to the software running on it?The core instruction set is from the 80es. Surely you can come up with some better today were you to design it from scratch?	chvid	9.645445	-5.329302	comment	3.0	12.0	1595532083	-7.675324
23931608	See it's funny, I (software guy) hav	"See it's funny, I (software guy) have recently started doing a bunch of FPGA stuff on the side for ""fun"" and I find the programming model to not be the biggest challenge.The tools, yes, because it seems like hardware engineers have a fetish for all-encompassing painful vendor specific IDEs with half the features that us software developers have, and with a crapload of vendor lock-in... but I digress.I find working in Verilog to be pretty pleasant. Yes I can see that with sufficient complexity it wouldn't scale out well. But SystemVerilog does give you some pretty good tools for managing with modularity.On the other hand, I've never particularly enjoyed working with GPUS, CUDA, etc.So I would agree with your statement that the structural issues prevent their utility in wider market classes "	cmrdporcupine	9.088076	-5.3839526	comment	3.0	17.0	1595534341	8.401865
23931734	I don't mean to belittle your explor	I don't mean to belittle your exploration, but are you sure it's an apples-to-apples comparison? This suggests to me that it isn't:> it seems like hardware engineers have a fetish for all-encompassing painful vendor specific IDEsHardware engineers feel pain just like you do. The reason why they put up with those awful software suites is because they have features they need that aren't available elsewhere. In particular, they interface with IP blocks and hard blocks, including at a debug + simulation level. Those tend to evolve quickly and last time I looked -- which admittedly was a while ago -- the open source FPGA tooling pretty much completely ignored them, even though they're critical to commercial development.If you are content to live without gigabit transceivers, PCIe controllers, D	jjoonathan	9.082963	-5.3766484	comment	3.0	12.0	1595535143	8.419232
23951462	Again, the number filter mangled the	"Again, the number filter mangled the title. The full title from the article is ""Inside the 8086 processor, tiny charge pumps create a negative voltage"". In the interest of brevity, ""processor"" could be omitted or replaced with ""chip."""	raphlinus	9.578473	-5.354503	comment	3.0	26.0	1595702636	-7.564755
23964840	SiGe process pushes reconfigurable F	SiGe process pushes reconfigurable FPGA to 5 GHz (2001)	flipchart	9.108752	-5.332279	story	3.0	21.0	1595856391	8.335869
23971272	> AMD is beating them on CPU designH	> AMD is beating them on CPU designHow is this possible to know?	nomel	9.273356	-5.187609	comment	3.0	17.0	1595898865	7.8981767
23974559	Yeah, this situation seems quite wor	Yeah, this situation seems quite worrying. It was already worrying with only two x86 companies (VIA is leagues behind).It would also be nice to have some capable foundries in Europe, like STM or Infineon. Just in case.	iagovar	9.638089	-5.270693	comment	3.0	15.0	1595935484	-7.806255
23976957	As someone who jumped on the ARM tra	As someone who jumped on the ARM train early, and someone who doesn't want to contribute to creating more electronic waste than necessary, it's disheartening to see 32-bit ARM being increasingly ignored as a platform compared to ARM64.	heavyset_go	9.7372675	-5.3648453	comment	3.0	24.0	1595951105	-7.815176
23984188	Anyone buying their risc-v IP and so	Anyone buying their risc-v IP and socs, other than hobbyists? The company has been around for a few years now.	farseer	9.384327	-5.598176	comment	3.0	15.0	1596007133	-10.583119
23987735	Apple does not have a license to add	Apple does not have a license to add instructions to the ARMv8 ISA. ARMv8 processors designed by Apple must be fully compliant with the ARMv8 instruction set architecture - such are the terms of the license.ARM very recently started allowing licensees to add custom instructions, but only for Cortex-M (embedded).	rrss	9.618851	-5.2214646	comment	3.0	14.0	1596036626	-7.6036806
23991646	"Clarification on the ""Forbidden (mul"	"Clarification on the ""Forbidden (multiple devices selected)
"" bit - Am I reading correctly that the memory addressing is, essentially, a little buggy as a side effect of optimizing for simplicity, and that results in mapping multiple things to certain addresses?Also, I somehow didn't realize that you could buy what appears to be a new 68000, and for $8.95 (https://www.jameco.com/shop/ProductDisplay?catalogId=10001&l...). In my defense, last time I searched it wasn't obvious, mostly because nobody labels it as a ""68000""; it's a 68HC000P-12, which only in the details is listed as a ""6800"" (sic) family - I assume that's just a typo. And to be fair, I'm sure most people looking for a 68000-series know how to look for it; it's like expecting people to know that a 80486 is an x86 usually called "	yjftsjthsd-h	9.580206	-5.1870728	comment	3.0	45.0	1596057132	-7.4934916
23991683	This was quite common. You only deco	This was quite common. You only decode out as much as you need and if that results in phantom appearances of devices or ROM as long as it doesn't interfere with the operation of the device that is perfectly ok. Memory map aesthetics are important but sometimes circuit simplicity is more important.	jacquesm	9.931667	-5.38904	comment	3.0	28.0	1596057330	8.13598
23992673	Designer of the rosco-m68k (which wa	Designer of the rosco-m68k (which was mentioned in another comment - thanks!) here, always good to see another 68k SBC on the block. Looking forward to seeing how this evolves, would be especially nice to make it so $0 isn’t permanently a ROM address (to allow interrupt vectors to be changed). Even on 68010 I had to do some magic in the address decoder to make ROM be temporarily at $0 at reset.	noone_youknow	9.535057	-5.213322	comment	3.0	16.0	1596065150	-7.5733247
23992755	Most of the boards I've seen that so	Most of the boards I've seen that solve this have a shift register that counts the first 4 bus cycles. The data in pin is tied to 5v and the reset is tied to the reset pin on the 68k. IIRC, the clock pin is connected to the AS signal. If the 5th bit is zero, the ROM is selected. The addresses written into the first 8 bytes of the ROM are the initial (supervisor) stack pointer (typically the end of your RAM for embedded systems) and the ROM entry. At the start of the 5th bus cycle, the 5th bit goes high and the ROM is no longer mapped to the lower addresses and the CPU has jumped to the true ROM entry point.You could also of course have a register to flip the ROM being active in the lower addresses (default selected) that you later disable.You can also make a nifty DTACK generator by using 	Teknoman117	9.85329	-5.4605064	comment	3.0	12.0	1596065968	7.983749
24002409	What’s the strategy for operating sy	What’s the strategy for operating systems, compilers, and/or language runtimes to figure out what a RISC-V chip supports? It used to be one thing checking which SIMD units an x86 had, but the nature of an open source processor lends itself to a near infinite listing of /proc/cpuinfo flags.	BooneJS	9.467723	-5.669972	comment	3.0	28.0	1596140181	-10.5537195
24004255	Making RISC-V not so RISCy... it tur	Making RISC-V not so RISCy... it turns out that complex instructions are actually useful in practice, and ISAs which don't have them will eventually develop them in order to remain competitive.	userbinator	9.444983	-5.7202773	comment	3.0	11.0	1596153991	-10.529839
24010052	While ARM can be great, I don’t thin	While ARM can be great, I don’t think anyone is entirely writing off x86. Intel owns a lot of fab. And while I don’t get as hyped on it as other people, Intel going hard into RISCV could change the game for ARM (if it was handled in non-typical-Intel way)	SV_BubbleTime	9.513287	-5.4994645	comment	3.0	12.0	1596211431	-7.8451605
24010772	I hear a lot of people talking about	I hear a lot of people talking about RISC-V but I wonder why people don't think companies would move to other open ISAs like Power or MIPS.	Symmetry	9.419737	-5.6613297	comment	3.0	13.0	1596215180	-10.554444
24010913	you do realize that Nvidia is a majo	you do realize that Nvidia is a major backer of RISC-V and already uses it on GPU's Turing and newer?	jshap70	9.335424	-5.599272	comment	3.0	11.0	1596215806	-10.580243
24010965	You have to license the ARM ISA as w	"You have to license the ARM ISA as well, you can't just freely implement it. IANAL, but as far as US law is concerned, I don't think you're violating copyright by cloning an ISA, but if that ISA is covered by any patents, you'd be fairly screwed without licensing. ARM definitely considers there to be enforceable patents on their ISA (just follow their aggressive assault on any open source HDL projects that are ARM compatible).If Nvidia bought ARM and decided to find some legal way to terminate the contract with Apple out of spite, Apple would have to find another ISA for their ""Apple Silicon""."	Teknoman117	9.530835	-5.2867093	comment	3.0	14.0	1596216063	-7.615145
24010793	NVidia is awful when it comes to FLO	NVidia is awful when it comes to FLOSS support. If they get ARM, at least it may accelerate RISC V developments.	AsyncAwait	9.22195	-5.390625	comment	3.0	20.0	1596215265	-10.524464
24013111	The ARM company is not just about th	The ARM company is not just about the instruction set architecture. The ISA wouldn't be interesting at all if no good processors were built with the ISA [0]. For RISC-V to succeed, it requires a company that builds some good processor designs for it - for smartwatches, smartphones, tablets, laptops desktops - and licenses that to others. That company (one or multiple) does not (yet) exist, and is not easy to build.[0]: Which is exactly why SPARC, and with one exception Power is dying, and why RISC V is yet to deliver. Nobody (bar IBM's POWER line) is building good processors with those ISAs that make it worth the effort to use. Nothing to do with the ISA - you just need chips people are interested in using.	DCKing	9.460766	-5.590683	comment	3.0	10.0	1596225016	-10.498073
24015980	If you don’t see RISC-V taking off c	If you don’t see RISC-V taking off commercially, then why is ARM trying to sell? I ask because my understanding was that they were trying to exit because of RISC-V.	minzi	9.388284	-5.6651835	comment	3.0	12.0	1596241041	-10.619942
24018540	IMO a more practical approach would 	IMO a more practical approach would be to use ordinary encryption inside a CPU, so it wouldn't be possible to extract any data without extremely advanced methods.Rough description: CPU have secure memory which contains a private key. Also CPU have certificate with corresponding public key. That certificate is signed by Intel.Hosting provider publishes an API which allows remote user to communicate with that secure CPU, basically just transmitting encrypted stream to and from CPU.When you're starting your communication, you establish an encrypted link between your machine and target CPU, located in a data center. You can check authenticity of that CPU by checking certificate signature. Then you're sending any code you would like to execute (encrypted by session key). CPU executes that code.	vbezhenar	9.790902	-5.3075957	comment	3.0	10.0	1596267800	7.7954125
24019602	> extraordinary processing speed opt	"> extraordinary processing speed options that are orders or magnitude faster than any other laptopIf ARM-based chips can be ""orders of magnitude"" faster than x86, they'll already be dominating datacenters. The performance improvement in sustained compute (within a power envelope) will be incremental rather than the giant leap you're hoping for.x86 CPUs do not execute their CISC instructions natively; they get decoded to simpler instructions. But the decoder consumes only around 5% of the power budget, so it's not like x86 is spending significant amounts of energy because of the legacy instruction set. Now, due to a decade of high-stakes innovation in the mobile market, ARM solutions will do significantly better in idle power consumption (which was essential for phones).So, I'll expect way "	jeswin	9.634472	-5.2558594	comment	3.0	14.0	1596280992	-7.735106
24050012	All other chip architectures should 	All other chip architectures should adopt Arm's SVE2 or something similar.https://community.arm.com/developer/ip-products/processors/b...	mtgx	9.611862	-5.273354	comment	3.0	12.0	1596549643	-7.8208466
24068659	> Ryzen’s “Hyper-Threading” looked g	> Ryzen’s “Hyper-Threading” looked good because of poor single-threaded performanceSo if my CPU is one of the worst in single-threaded performance, then multi-threaded performance will be the best? That make no sense and this guy doesn't seem like he knows what he is talking about..	aPoCoMiLogin	9.386269	-5.215944	comment	3.0	20.0	1596696086	7.974266
24068692	He's completely right.  Hyperthreadi	He's completely right.  Hyperthreading is all about putting idle functional units to work when you can't extract instruction level parallelism from single threaded code. His claim is that Intel processors did better and thus only got a small relative boost from HT (IIRC it used to be 10%, maybe it's 20% now).  If your processor does poorer at ILP extraction, you get relatively more out of HT.This all agree with the benchmarks in which Intel still generally is ahead on single thread performance.  For a more extreme case look to older POWER processors which were 4-way threaded, presumably because they were even worse on single threaded code.	FullyFunctional	9.697896	-5.4999104	comment	3.0	12.0	1596696522	8.099418
24068709	I'm not missing the point as I was r	I'm not missing the point as I was responding to whether AVX-512 is useful in practice. It is. It is some badly designed extensions where the earlier ones were great: it's arguably better than the earlier ones.Now adoption has been poor and there is a chicken-and-egg effect as you point out, but that's separate from the question of whether AVX-512 is useful in practice. It is.The point about tradeoffs is well taken. It's not like Intel (or any other vendor) is rolling back progress in other areas to add larger vector units: rather they try to progress along all viable axes at once.	BeeOnRope	9.451984	-5.54933	comment	3.0	10.0	1596696776	8.080966
24068722	No, if your CPU is one of the worst 	No, if your CPU is one of the worst in single-threaded performance, then hyper-threading will look like the best thing since sliced bread on it, relative to its baseline performance. Hyperthreading will seem to double your performance, because so much of your CPU is otherwise idle. But the more you improve your scheduling, the worse hyperthreading will look, again relative to your singlethread performance.	FeepingCreature	9.811029	-5.6159015	comment	3.0	11.0	1596696930	8.312837
24074500	20GB Intel IP Data Breach Floods the	20GB Intel IP Data Breach Floods the Internet, Mentions Backdoors	blackmanta	9.455804	-5.199744	story	3.0	65.0	1596741924	7.86239
24075164	AFAIK the ME is required to initiali	AFAIK the ME is required to initialize the processor so it can never be completely disabled. The best you could do is remove any code beyond necessary initialization which has mostly already been done by me_cleaner.	wmf	9.512717	-5.202044	comment	3.0	17.0	1596745997	7.7735476
24078403	Pretty cool. For RISC-V experts out 	Pretty cool. For RISC-V experts out there, can someone explain to me the purpose of the proxy kernel? I can't seem to wrap my head around it. Why not just run a normal kernel (e.g. Linux) on top of the emulator? What advantages/disadvantages does the proxy kernel have?	anonymousDan	9.435755	-5.6883	comment	3.0	13.0	1596775399	5.307981
24090632	"DJB wrote a paper about how ""Specula"	"DJB wrote a paper about how ""Speculative execution is much less important for performance than commonly believed."" https://arxiv.org/abs/2007.15919"	dependenttypes	9.70387	-5.6848817	comment	3.0	19.0	1596884289	-6.6976805
24096678	I have always been curious about FPG	I have always been curious about FPGAs and I think I understand the concept, but what could someone provide some use cases for why you might want one (that aren’t calculating SHA-1 hashes)? As someone who understands microcontroller programming and wiring, what cool things could I do with an FPGA that I would have a hard time doing with other hardware?	IgorPartola	9.084223	-5.351297	comment	3.0	15.0	1596938211	8.379475
24144017	Check top/task manager from time to 	Check top/task manager from time to time.   It's pretty rare any desktop applications use more than 2 or 3 cores to the max.That means those extra cores won't really help day to day performance.	londons_explore	9.769713	-5.23921	comment	3.0	10.0	1597330940	7.910333
24169679	I have written a virtual CPU from ve	I have written a virtual CPU from very simple building blocks and highly recommend doing it.I started with class Wire (which just wraps a bool) and class Transistor (which accepts two input Wire& and has an output Wire). It has an Update() function which sets the output state.From those I built up gates, then flipflops, registers, mux/demuxes, counters, an ALU, and memory banks. Then I wrote a machine language, connected the cpu together, wrote a loader to load machine language files into ROM, then an assembler to allow me to write assembly code.I then added VRAM, async buses, and wrote a working implementation of Game of Life.It has 32bit instructions and runs about 10kHz with 8KB of RAM.	cecilpl2	9.617596	-5.4274	comment	3.0	11.0	1597506325	-7.343616
24169956	Author here if anyone has questions 	Author here if anyone has questions about the 8086 internals.	kens	9.620215	-5.403881	comment	3.0	11.0	1597508112	-7.5201564
24175744	Could someone explain me what the hu	Could someone explain me what the huge deal about ARM is since they only licence but don’t actual fab the chips but intel, Apple and nvidia do.Also what’s the difference between ARM and RISC-V. Why chose one over the other ?	nojvek	9.395183	-5.517695	comment	3.0	26.0	1597559595	-10.536388
24175872	RISC-V sounds like a good idea, but 	"RISC-V sounds like a good idea, but (imo) could lead to a situation, where all/many device manufacturers make custom processors based of the liberally licensed code-base.
At first, this sounds great, ""Yah, no more reliance on Intel/ARM/, no more ME/Trustzone"".
But then you realize, that although you, the user/buyer, can build/run some custom code on there, you'll never be able to tell for sure, if you did not get a version/series with a gimped HWRND, or other (security-reducing) goodies.
Targeted attacks will become very easy for anybody, who can pressure companies/engineers into adding something for (a subset of) the customers, or can reroute/intercept device shipments to you.ARM is a ""known"" situation. They have TrustZone, we know it exists, but buyers/end-users do not get full control o"	stragies	9.436331	-5.5487895	comment	3.0	23.0	1597561717	-10.547231
24179464	:You’re thinking of A86:https://en.m	:You’re thinking of A86:https://en.m.wikipedia.org/wiki/A86_(software)	jlmcgraw	9.795726	-5.4514604	comment	3.0	10.0	1597598419	-7.63686
24182268	>It's up to Intel to prove that they	>It's up to Intel to prove that they don't exist.That seems a bit over the top to ask them to prove a negative.	selectodude	9.339568	-5.185995	comment	3.0	10.0	1597620287	7.651573
24185439	Open Architecture with no black boxe	Open Architecture with no black boxes. Total control over your system of the kind we used to take for granted before the Intel Management Architecture days. Very focussed on throughput and centralised operation (for example homomorphic encryption and encrypted memory to forestall snooping).And yes, when used ‘correctly’, these systems can be very fast... in the steady marathon kind of way rather than the spasmodic sprint-racer clock-boosting-and-throttling manner of today’s mainline chips.	qubex	9.431248	-5.1864085	comment	3.0	18.0	1597655626	7.793754
24216846	I don't think the book is closed.  T	I don't think the book is closed.  Thermal and TDP downclocking are still present.It would have been nice to see the vcore and thermal values graphed as part of the benchmark.  Do they increase faster for AVX-512 vs the other instruction sets?I've had problems in the past with Sandybridge, where AVX hit thermal throttles before SSE.  I ended up having to disable them in my build because of it.  Presumably, the same behaviour would be seen here now that the vector unit is wider and there are more densely packed transistors flipping.	CoolGuySteve	9.449884	-5.531748	comment	3.0	16.0	1597872738	8.069679
24217008	The problem is that the downclocking	The problem is that the downclocking affects other cores.  So a performance improvement in this one task can hurt performance on other threads, which is what happened to me.	CoolGuySteve	9.638354	-5.4511847	comment	3.0	10.0	1597873430	8.11919
24235510	> have no idea what roughly half the	> have no idea what roughly half the emojis meant,I really honestly am curious which ones confused you	core-questions	9.806061	-6.2712245	comment	3.0	10.0	1598022483	-13.952666
24237286	Much more interested in architecture	Much more interested in architecture design and memory hierarchy than flops. Anything interesting going on in caching or memory hardware?All the problems I work on need benefit from memory bandwidth and cache latency than raw FLOPS. I imagine others are in the same boat.I was hoping this would be the start of some more architecture diversity like apples tile based deferred rendering.	aspaceman	9.57242	-5.1979237	comment	3.0	30.0	1598032857	8.17301
24247180	Yes, I've been working through diffe	Yes, I've been working through different parts of the 8086 lately. My goal is to understand the microcode. I hope people aren't getting tired of the 8086 :-)	kens	9.648111	-5.448398	comment	3.0	14.0	1598129568	-7.5237494
24256091	Reading through that was a great ref	Reading through that was a great refresher. Thanks.One question: would a real CPU have a JL instruction or would that be implemented some other way, like a series of smaller instructions?	Hnrobert42	9.680153	-5.4953504	comment	3.0	10.0	1598224438	-7.521457
24257892	https://www.blopeur.com/2020/04/08/I	https://www.blopeur.com/2020/04/08/Intel-x86-patent-never-en...	rkv	9.425788	-5.187643	comment	3.0	16.0	1598248988	7.7204323
24259374	It's a very cool hack and technicall	"It's a very cool hack and technically interesting, but I can't say that I share the author's ""serious"" rationale:>So I think it's really the best of times to be optimistic about systems engineering. We agree more on sharing things in common than we ever have. There are still outliers like the plans coming out of Apple and Microsoft we hear about in the news, where they've sought to pivot PCs towards ARM.[...]>If a microprocessor architecture consensus finally exists, then I believe we should be focusing on building better tools that help software developers benefit from itConsidering ARM an outlier in a world were smartphones outnumber desktop PCs and where the x86 stronghold is under attack from several sides seems like a strange take to me.Also, there's more to portability than managing "	simias	9.726443	-5.2049437	comment	3.0	15.0	1598266228	-7.7614603
24261079	In all my papers the results were pr	In all my papers the results were produced on multiple days (spanning months), with multiple versions of the code, and they are computationally too expensive to reproduce with the final version of the code. I'm trying to keep track of all the used versions, but given that there is no automated framework for this (is there?) and research involves lots of experiments, it's never perfect. Given this context, any ideas how to do it better?	jhrmnn	8.927881	-6.346995	comment	3.0	13.0	1598279804	5.957891
24263409	I guess CI services like Github Acti	I guess CI services like Github Actions could be easily hitting these limits (100 pulls per IP per 6 hours).	jpalomaki	9.149995	-6.3355665	comment	3.0	10.0	1598292028	-11.794701
24263455	Good!I'd even welcome much more agre	Good!I'd even welcome much more agressive limits than what they're proposing; the current culture regarding builds and CI in general is horrifyingly ineffficient, wasteful and in the end just plain slow.I'm looking forward to developers adjusting their workflows (and caches, etc.) to actual, reasonable limits, not just perusing the service as if it were an unlimited cost-free cornucopia of software.	theon144	9.276745	-6.3655353	comment	3.0	11.0	1598292281	6.098329
24265147	> the rest of the arm ecosystem is f	> the rest of the arm ecosystem is forced to move to risc-v?In addition to selling hardware, it seems like ARM-owning Nvidia would probably be happy to sell whatever amazing new ARM cores they cook up to whoever is willing to pay to use the design. It's not obvious RISC-V will benefit from any of this. Somebody, somewhere would need to create equally amazing RISC-V cores and find a way to sell them.	justin66	9.3760395	-5.591661	comment	3.0	12.0	1598300959	-10.552639
24264916	>>ARM/RISCV/x86/GPU/TPU/storage ... 	>>ARM/RISCV/x86/GPU/TPU/storage ... those are just configuration options.But ISA still matters. Switching from Intel to AMD likely isn't much of a switch, but switching to a different ISA in the datacenter will continue to be an uphill battle.As the article notes, the uphill battle will take longer for RISC-V and if Nvidia follows the strategy laid out they hope to profit in the intervening gap.	otoburb	9.440718	-5.5617495	comment	3.0	15.0	1598299668	-10.545349
24287478	Any rackmount server will be a nuisa	Any rackmount server will be a nuisance. I ran rack servers at home for years but recently replaced my servers with ATX form factor machines, which are super quiet, ventilate much better and still stack nicely. There are plenty of ATX Xeon motherboards that support ECC ram.	Cieplak	9.436775	-5.4792743	comment	3.0	19.0	1598477256	8.177788
24291099	Linus (from LinusTechTips) builds Li	Linus (from LinusTechTips) builds Linus Torvald's new PC [Video]	knaik94	9.364545	-5.842693	story	3.0	26.0	1598514722	-8.200678
24304263	Could you explain the connection bet	Could you explain the connection between this feature and a possible side channel attack?	flipgimble	9.849385	-5.596132	comment	3.0	10.0	1598619303	-5.6818
24304915	X64 has stronger guarantees than tha	X64 has stronger guarantees than that without barriers doesn't it?	cma	9.780988	-5.3329735	comment	3.0	10.0	1598623287	-7.751367
24304969	I sense this question is pretty elem	"I sense this question is pretty elementary, but maybe someone can point me in the right direction for reading:""When the CPU recognizes that the address [rsi] is the same in all three instructions...""Is there another abstraction layer like some CPU code that runs that would do the ""recognition"" or is this ""recognition"" happening as a result of logic gates connected in a certain static way?To put more broadly: I'm really interested in understanding where the rubber meets the road. What ""code"" or ""language"" is being run directly on the hardware logic encoded as connections of transistors?"	Waterluvian	9.667987	-5.5278845	comment	3.0	28.0	1598623558	-7.442358
24310041	I think you meant Intel Compiler? Ye	I think you meant Intel Compiler? Yes. Intel Compiler consistently produces the highest performing binaries on Intel processors, often by a big margin. Intel MKL used to be the highest performing math library, and may still be so. As a result, most performance critical software, such as scientific applications, are compiled using ICC.	satya71	9.5215025	-5.4630685	comment	3.0	16.0	1598649306	-7.238137
24310076	Most high performance software on su	Most high performance software on super computers uses the Intel C and Fortran compilers, and much engineering and scientific software on workstations uses the Intel Maths Kernel Library (MKL) for high performance linear algebra.Now that AMD EPYC processors are powering a lot of next generation super-computer clusters, we're going to have to figure out some workarounds!	jarvist	9.308074	-5.3043118	comment	3.0	15.0	1598649531	7.967549
24311896	This concern really only applies to 	This concern really only applies to synthetic benchmarks (stuff like SPEC CPU). If you're testing a commercially available application or game as delivered to consumers, this issue does not invalidate the benchmark, it just makes the software vendor a bit of an Intel stooge.	wtallis	9.73214	-5.363814	comment	3.0	14.0	1598659563	7.806044
24313442	I think MKL actually fixed Zen perfo	"I think MKL actually fixed Zen performance. That is, the workaround no longer makes any difference because it is no longer needed.Small matrix multiply benchmarks on a Zen2 (Ryzen 7 4700U), featuring MKL 2020.1.216+0, OpenBLAS, and Eigen:
https://gist.github.com/stillyslalom/bd916e3d26b4531364676ac...MKL's benchmark performance requires AVX + FMA.
3.5 GHz * (4 add + 4 multiply) * 2 fma/cycle = 56 peak GFLOPS.
To exceed 50 GFLOPS without them would imply the CPU ran at 12.5 GHz.OpenBLAS, on the other hand, actually performed poorly because it was limited to SSE thanks to a bug preventing the CPU from being recognized as Zen2."	celrod	9.281021	-5.302922	comment	3.0	16.0	1598674420	7.942918
24314354	Probably better to use a CCD with el	Probably better to use a CCD with electrical tape over the lens.  I'm curious to see the difference in sensitivity between RAM and a CCD.  I would think RAM is pretty resistant to bit flips or measures to counteract it, like ECC, would be more common.	01100011	9.614137	-5.559736	comment	3.0	17.0	1598685744	8.193634
24314857	I work on CFD software. We're well a	I work on CFD software. We're well aware of this in my work, but the reality is that all our big corporate clients use Intel hardware. We already tell people to set those environment variables in our documentation.> Avoid the Intel compiler. There are other compilers with similar or better performance.This is not really true IMO, but even as an aside, the Intel compiler has the enormous advantage of being available cross platform. So we can use it on Linux and Windows, and provides MPI cross platform. We upgrade fairly regularly and that provides us with less work.My own tests found that PGI compiler performance was worse than Intel for C++, and that now appears to have been discontinued on Windows anyway with NVidia's new HPC compiler suite replacing it. GNU can run everywhere, but perfor	physicsguy	9.357195	-5.4299808	comment	3.0	13.0	1598692917	8.120712
24317699	It would be cool to see - like it’s 	It would be cool to see - like it’s console-karting counterparts - characters from the universe of the hardware. I realize Linus Torvalds isn’t licensable IP, but would love to see him throw bananas out back for Stallman to avoid. I wonder what other “characters” would fit in	mlacks	9.365366	-5.821135	comment	3.0	30.0	1598721738	-8.137444
24334029	Wow, why is Intel supporting Zen ker	Wow, why is Intel supporting Zen kernels in MKL? That seems... really interesting. One of the few places where Intel still has a somewhat clear advantage is in high performance numerical code that can't be easily multiprocessed (e.g. off-the-shelf ML code) because MKL is much faster than AMD alternatives.Also, does anyone know if one can use patchelf on e.g. Python (or the numpy compiled section?) to get MKL/Zen support? I don't have my Zen CPU on me to test.	singhrac	9.285253	-5.313695	comment	3.0	21.0	1598896243	7.9186306
24334584	Indeed, I had three theories, from o	Indeed, I had three theories, from optimistic to cynical:1. They are sharing increasingly much code between oneDNN (formerly MKL-DNN) and Intel MKL. So, it simply pays of from a development cost perspective.2. Intel sees AArch64 as a serious competitor. AMD may be an enemy, but at least an enemy on the same architecture. Better to strengthen x86_64 than to give AArch64 too much momentum in HPC. (The #1 supercomputer in TOP500 is AArch64 [1])3. Write Zen kernels, make them slightly less efficient than the Intel ones. They still beat OpenBLAS et al. in benchmarks, even on Zen. But to HPC customers they can show that Intel CPUs are faster.I think (1) is somewhat optimistic, given the huge benefit that they had with MKL in HPC. If (1) is not the case, I definitely hope (2) is.[1] https://www.t	danieldk	9.287362	-5.2065535	comment	3.0	13.0	1598899158	7.9247794
24336212	If you were going to use Zen, why wo	If you were going to use Zen, why would you choose MKL? Why not OpenBLAS?	jeffbee	9.278639	-5.304431	comment	3.0	16.0	1598910053	8.007109
24379786	I believe it's because the Broadcom 	I believe it's because the Broadcom System-on-a-Chip (SOC) that the Raspberry Pi uses has one or more binary BLOBS that are required to access features on the SOC. RISC-V is an open standard; chips made based on this standard are open source.	inetsee	9.413695	-5.5921626	comment	3.0	10.0	1599260659	-10.461758
24380221	One concrete advantage RISCV has is 	One concrete advantage RISCV has is its variable-length SIMD instruction set. The assembly instructions used for SIMD in RISCV can all operate on data sizes that are various powers of 2. All using the same instructions. You could even call it “SIMD with dynamically-sized data”.Right now, x86 needs one set of instructions for each SIMD data size. That’s why we have SSE, AVX, AVX512, etc. This introduces complexity for both hardware designers and software designers. You have to actively update software to work with newer chips with larger SIMD registers. In the proposed RISCV design, you wouldn’t have to. It would just work on all sizes.	vlmutolo	9.4755125	-5.748836	comment	3.0	14.0	1599264443	-10.54471
24392153	“Linusgate” over 250 Messages About 	“Linusgate” over 250 Messages About CoC Complaints Against Linus Torvalds	kiyanwang	9.302343	-5.885413	story	3.0	3.0	1599407341	-8.191821
24402931	There are probably military systems 	There are probably military systems that use MIPS processors.	jeffrallen	9.475438	-5.4974427	comment	3.0	13.0	1599513105	-10.3747225
24403278	The patents expired a long time ago,	The patents expired a long time ago, and MIPS has always occupied the ultra-low-end in things like routers and phones. RISC-V may take its place in the future, due to how similar it is.	userbinator	9.428255	-5.658847	comment	3.0	10.0	1599515725	-10.501547
24409334	Show HN: TerminusHub, Distributed Re	Show HN: TerminusHub, Distributed Revision Control for Structured Data	LukeEF	8.875999	-6.3774233	story	3.0	81.0	1599578736	8.1210165
24416109	TL;DR: Put an Epyc cpu in a Dell onc	TL;DR: Put an Epyc cpu in a Dell once, and it will never work again in any other vendor's motherboard? Is that right?	virgulino	9.36864	-5.191037	comment	3.0	18.0	1599617707	7.8983936
33080528	An interesting comment made in the P	An interesting comment made in the Phoronix forums:> My theory is that fixing the Spectre V2 vulnerability on a hardware level would lead to fundamental architecture changes that AMD is not willing to make, because it may add so much more complexity to the architecture or it may just be too unconvenient. They probably realized that optimizing the code paths that the Linux kernel utilizes on the default mitigations mode is faster, simpler and it may involve less deeper changes, while still being secure.> As far as I know, pretty much every CPU architecture that implements speculative execution is vulnerable to some version of Spectre, so note that this is not a fundametal flaw of AMD64.	Ristovski	9.604003	-5.575688	comment	4.0	18.0	1664892121	7.893283
33097250	This is from a school? The author (D	"This is from a school? The author (Doeppner, it seems) should be embarrassed.""x64"" is a marketing name primarily used by Microsoft. Sure, many of us know what you're talking about when you use ""x64"", but it's just not a real thing. There's no 464, 564, 664, 764, et cetera, so the ""x"" means nothing, unlike its use in ""x86"".It's like using ""virus"" to describe a Trojan - people will generally get the gist, but you're technically wrong, and if you're supposed to know what you're talking about, then you're certainly not showing it."	johnklos	9.737536	-5.477224	comment	4.0	21.0	1664985663	-7.7766333
33109979	VisionFive 2 RISC-V single-board com	VisionFive 2 RISC-V single-board computer is up for pre-order for $56 and up	freedomben	9.375111	-5.562101	story	4.0	15.0	1665072072	8.008145
33120470	Ask HN: Why RISC-V over other “open”	Ask HN: Why RISC-V over other “open” ISA's?	kondor6c	9.389648	-5.691874	story	4.0	7.0	1665146762	-10.563053
33119973	Makes me curious what the internal p	Makes me curious what the internal politics is like.  IBM does seem to have mostly let RedHat continue working as it did before, not meddling on a broad scale.Now we have some RedHat employees getting the news they are being transferred to an IBM area.  I wonder how that's viewed from the RedHat side.	tyingq	9.935402	-5.4620633	comment	4.0	26.0	1665143190	-9.465089
33130012	Is x86 at the end of the road? I don	Is x86 at the end of the road? I don’t follow closely, but I impression is it’s been getting faster and faster ever since AMD stepped up and provided some competition with Ryzen.	vosper	9.557558	-5.219472	comment	4.0	20.0	1665206928	7.79491
33130991	This. I wonder why so many seem so e	This. I wonder why so many seem so eager to engage in the fantasy that Intel (and AMD) are planning to jump ship to ARM or RISC-V.Yes, ISA's matter, to a point. And yes, ARM64 and RISC-V are much closer to 'best practice' ISA design than x86 with all its legacy baggage. But enough better to make AMD&Intel throw away the x86 market and their position in that as explained in the parent comment? No effing way.	jabl	9.545688	-5.490343	comment	4.0	64.0	1665221600	-7.8654313
33132150	Intel has tried to move away from x8	Intel has tried to move away from x86 three times already. They only stuck with it in the early 2000s because AMD64 forced their hand.This chip shows why Intel would like RISC-V. The core ISA is RISC-V, but every other piece of the chip is proprietary and patented Intel stuff. They are far ahead of almost everyone in these areas, so they don't have much to fear in their current markets from the ISA itself.Few companies have the ability, desire, or connections to spend billions designing a next-gen chip. China has thoroughly proved this. They have designed for x86, Alpha, MIPS, ARM, RISC-V, etc, but none of their designs were particularly good. For example, they recently released their Phytium D2000 chip. It was basically a clone of A72 with improvements, but chips and cheese analysis[0] sh	hajile	9.421972	-5.1854157	comment	4.0	20.0	1665235961	7.709843
33151507	Unless I am misunderstanding somethi	Unless I am misunderstanding something, this flag only seems to affect about 10 instructions.  Most of the ones you would expect to be involved with cryptography already have data-independent timing regardless of the value of the MSR.The list Intel provides is here:https://www.intel.com/content/www/us/en/developer/articles/t...	pclmulqdq	9.727154	-5.5950146	comment	4.0	14.0	1665410430	-7.2508883
33222556	My team is being hit with really ext	My team is being hit with really extreme pricing changes for Docker Desktop. I have never been clear on why we even wanted DD (I guess right now it’s the easiest path to getting x86 containers running on M1 Macs?). Alternatives like Podman or even a more extreme solution like this one are becoming more and more attractive.	bgribble	9.559111	-6.433622	comment	4.0	14.0	1665915481	10.056546
33225383	With AMD that limitation is somewhat	"With AMD that limitation is somewhat lifted with normal consumer CPUs and quite a few motherboards having support. Unfortunately the RAM itself has very poor availability. Very few manufacturers offer it and it tends to stick to the standard speeds without any of the overclocked-from-factory parts available with ECC. That last bit is strange because ECC is reportedly very good as a validation tool for overclocking builds so it seems like the RGB-lighted market could end up valuing it as a high-end feature too. One of the RAM manufacturers should rebrand ECC to ""Extreme Clocking Capacity"" and start selling it as a feature to differentiate their RAM from the competition."	pedrocr	9.420382	-5.428367	comment	4.0	15.0	1665941115	8.203517
33227375	Pine64 Ox64 $6 RISC-V Linux hybrid S	Pine64 Ox64 $6 RISC-V Linux hybrid SBC	alexisread	9.471572	-5.561012	story	4.0	63.0	1665956071	-10.408058
33236484	Linus Torvalds to kernel devs: Stop 	Linus Torvalds to kernel devs: Stop pulling all-nighters just before deadline	LinuxBender	9.480813	-5.8235817	story	4.0	57.0	1666026182	-8.221319
33297545	> RISC was a set of design principle	"> RISC was a set of design principles developed in the 1980’s that enabled hardware to get much faster and more efficient. We tend to still call modern-looking instruction sets “RISC-y”, but really, a bunch of the original design principles of RISC CPU’s have not stood the test of time. So let’s look at the things that have worked and not worked between the 1980’s and 2022.I think the design principles of RISC were actually on a meta level above this: take the quantitative approach, use your transistors to best serve the software you have and compilers you can build. ""Nice ISA to write assembly code for"" was thrown out, or at least demoted significantly.In that 80s moment in the transistor count curve, it meant simplifying the ISA very radically in order to implement fewer instructions in "	fulafel	9.471371	-5.684562	comment	4.0	30.0	1666439985	-10.53164
33302610	32-bit RISC core with 64KB RAM (ECC 	32-bit RISC core with 64KB RAM (ECC would be nice) would seem more interesting?https://www.aliexpress.us/item/3256804164096177.html	downvotetruth	9.427546	-5.652247	comment	4.0	19.0	1666476116	-10.52545
33304259	Ask HN: Intel 12/13th gen vs. AMD Ze	Ask HN: Intel 12/13th gen vs. AMD Zen 4 in Linux	lopkeny12ko	9.337262	-5.204359	story	4.0	8.0	1666494924	7.955484
33308369	Linus: Maybe it's time to get rid of	Linus: Maybe it's time to get rid of i486 support in 2022	dmitrygr	9.510696	-5.3921123	story	4.0	16.0	1666544146	-7.6502094
33314275	I understand that at this point the 	I understand that at this point the hdl is only for simulation but could someone at one point run a full gb on an fpga?	phant0mas	9.095087	-5.445253	comment	4.0	16.0	1666601116	8.545018
33320597	RISC-V Celebrates Upstreaming of And	RISC-V Celebrates Upstreaming of Android Open Source Project RISC-V Port	ndesaulniers	9.379377	-5.6719007	story	4.0	128.0	1666636718	-10.541293
33347414	Can we not have separate enterprise 	Can we not have separate enterprise and individual classes of processor?	boppo1	9.532186	-5.272055	comment	4.0	13.0	1666808351	7.9532905
33372657	CPUID is not designed to be secure, 	CPUID is not designed to be secure, but, if every CPU model had a (directly inaccessible) unique key, it could be used to sign a challenge and prove that CPU is what it's telling the program it is.	rbanffy	9.6920395	-5.3108897	comment	4.0	14.0	1666970986	7.7356033
33377775	Intel did a great thing for people i	Intel did a great thing for people interested in ML and numeric research by making their MKL library and compiler free and cross platform compatible. Even today on my AMD zen3 Ryzen machine intel's MKL linked numpy and pytorch are in some operations 10* (yes that is really ten times) faster in comparison with the next best alternative (openBlas etc). I was shocked to discover how much of a difference MKL makes for cpu workloads. This is mostly because it makes use of AVX2 cpu extensions which make certain matrix operations a lot faster.	Roark66	9.308503	-5.317605	comment	4.0	17.0	1666990500	7.973994
33386540	Would Linus accept a language for co	Would Linus accept a language for core Linux work that came with a 1% penalty?	WalterBright	9.448116	-5.8444724	comment	4.0	21.0	1667067128	4.2729034
33419422	Eh. The ISA of RISC-V is free and op	Eh. The ISA of RISC-V is free and open. Actual implementations of RISC-V are not, in general. The point of RISC-V is that you may have the option to switch implementations if you become fed up with your current supplier, without having to switch ISA.	colonwqbang	9.41528	-5.69856	comment	4.0	26.0	1667299933	-10.530658
33420611	Those OSS RISCV designs are academic	Those OSS RISCV designs are academic largely. True performance RISCV designs are going to be people's money maker and never open sourced.A head start is great but that still costs expensive skilled engineering time to actually make a worthwhile product. And due to licensing of OSS, it may be a bad thing for a company to build their multi-billion dollar business on something they need to open source for someone to immediately knock them off and kill their business.In the hardware world, we live and die by our design secrets. If someone can simply copy you exactly, they can completely undercut you and basically put you out of business. A bit different than the software world.	delfinom	9.417831	-5.602919	comment	4.0	19.0	1667307888	-10.531107
33421109	Is there a good overview somewhere o	"Is there a good overview somewhere of what the realistic path to market is for it? I don't mean this as sass— I'm genuinely curious. As far as I'm aware there are only a handful of real chips/devkits available at this point; mostly it's still people synthesizing cores on FPGAs. Basically the whole story looks pretty experimental.I know ""can I buy it on Digi-Key"" is irrelevant to an entity like Google or Apple, but I feel like hobbyist accessibility is at least something of a proxy for general readiness."	mikepurvis	9.357669	-5.333776	comment	4.0	18.0	1667310120	-10.566374
33430511	A friend of mine is working on a cus	"A friend of mine is working on a custom memory controller for specialized devices at Google Cloud. The software people are giving the hardware people tremendous pressure in making sure the memory controller works well with all common powers-of-two strides, besides random strides.There are some (very primitive by software standards) ""hash functions"" implemented in hardware to make that work. IIRC at that time they treat the relevant bits in an address as a vector in GF(2) and multiply by a certain hardcoded invertible matrix. (Of course there are properties for that matrix besides being invertible.) The idea is that if a single bit in the input address changes, all output bits should have equal probability of flipping and not flipping (the avalanche effect)."	kccqzy	9.775388	-5.626394	comment	4.0	18.0	1667353715	8.326569
33480196	Wow this is a depth of reporting on 	Wow this is a depth of reporting on cpu arch changes I’ve never seen the likes of.I saw a few weeks ago posted here someone wanting to know how to get into the cpu arch space. Understanding everything within would be a good start	aunty_helen	9.492092	-5.186003	comment	4.0	14.0	1667645515	7.720327
33513449	LoCs of aarch64 vs risc-v is comical	LoCs of aarch64 vs risc-v is comical.I wonder what's going on there.	snvzz	9.436156	-5.6963377	comment	4.0	15.0	1667860048	-10.600959
33520012	Very interesting. I wonder if we'll 	"Very interesting. I wonder if we'll see a ""Zen4+"" that ameliorates certain bandwidth constraints outlined in the article (Better DRAM efficiency, increased L1D bandwidth)."	spamizbad	9.272897	-5.1960516	comment	4.0	19.0	1667921258	7.8960834
33527077	> I pronounce chroot as change root.	> I pronounce chroot as change root.The real hot take	klyrs	9.760239	-6.432561	comment	4.0	17.0	1667962862	-14.004676
33533993	This is a great writeup. What a clev	This is a great writeup. What a clever design!I remember Apple had a totally different but equally clever solution back in the days of the 68K-to-PowerPC migration. The 68K had 16-bit instruction words, usually with some 16-bit arguments. The emulator’s core loop would read the next instruction and branch directly into a big block of 64K x 8 bytes of PPC code. So each 68K instruction got 2 dedicated PPC instructions, typically one to set up a register and one to branch to common code.What that solution and Rosetta 2 have in common is that they’re super pragmatic - fast to start up, with fairly regular and predictable performance across most workloads, even if the theoretical peak speed is much lower than a cutting-edge JIT.Anyone know how they implemented PPC-to-x86 translation?	iainmerrick	9.690169	-5.193232	comment	4.0	41.0	1668011580	-7.589593
33535084	Rosetta 2 is great, except it appare	Rosetta 2 is great, except it apparently can't run statically-linked (non-PIC) binaries. I am unsure why this limitation exists, but it's pretty annoying because Virgil x86-64-binaries cannot run under Rosetta 2, which means I resort to running on the JVM on my M1...	titzer	9.82933	-5.357627	comment	4.0	19.0	1668015586	7.6313024
33534093	It isn't their first rodeo: 68k->PPC	It isn't their first rodeo: 68k->PPC->x86_64->ARM.	AnIdiotOnTheNet	9.73598	-5.2634187	comment	4.0	13.0	1668011948	-7.7159605
33539080	Best part: it's QEMU so you can choo	Best part: it's QEMU so you can choose your CPU architecture and run x86_64 containers on ARM Macs	throwawaaarrgh	9.60896	-6.166596	comment	4.0	14.0	1668033449	10.02446
33551507	I'm pretty sure the SO answer is (pa	I'm pretty sure the SO answer is (partially) wrong. As far as I understand, Bitcode is not architecture agnostic, you can't just take bitcode from a 32bit compilation and turn it into a 64bit executable since there still are a ton of architecture dependent things (like memory alignment) in the bitcode.	newaccount74	9.920726	-5.36898	comment	4.0	18.0	1668107462	-7.708133
33585673	The unusual bootstrap drivers inside	The unusual bootstrap drivers inside the 8086 microprocessor chip	picture	9.612186	-5.2407527	story	4.0	114.0	1668363253	-7.5316596
33593065	Every person involved in software en	"Every person involved in software engineering should be aware of CI/CD and use it all the time, not only ""devops people""."	cassianoleal	9.181751	-6.4175897	comment	4.0	12.0	1668429159	6.211634
33607296	I thought I was the only one… I find	I thought I was the only one… I find ARM to be quite cumbersome and odd. I wouldn’t call it RISC by any means when it comes down the pragmatists, at least not in the traditional sense. I think its popularity stemmed from its energy efficiency rather than elegance…	jdefr89	9.41916	-5.6332307	comment	4.0	17.0	1668506692	-10.556444
33626550	I was visiting a space technology fa	I was visiting a space technology fair quite recently, and I was quite surprised to see how many companies are betting on RISC-V in that space (pun intended).On another note: does anyone have experience with a RISC-V board you can actually order right now?	cgeier	9.3777275	-5.6603837	comment	4.0	16.0	1668618360	-10.583044
33629061	Aks HN: Can additional processor cor	Aks HN: Can additional processor core be emulated on SSD for more compute power?	amts	9.594479	-5.1952605	story	4.0	3.0	1668626802	7.9789166
33636470	It's interesting what this tells us 	It's interesting what this tells us about Apple's approach to the Intel to Arm transition.They must have performed deep analysis of the requirements of Rosetta down to the level of individual instruction emulation before they finalised the design of the M1.Also the Rosetta team had enough influence to get the hardware team to build it. Not necessarily a given in all organisations.What would be interesting - and perhaps not surprising - is if Arm added this to the standard Arm ISA in order to facilitate x86 to Arm translation elsewhere. After all they added the infamous FJCVTZS instruction which speeds up x86 derived floating point conversions in JS.	klelatti	9.761787	-5.302193	comment	4.0	29.0	1668675335	7.700099
33637882	Doesn't Rosetta infringe on Intel's 	"Doesn't Rosetta infringe on Intel's copyrighted instruction set and architecture of a CPU? Why Apple can use this instruction set and others cannot?UPD: and ARM seems to be infringing as well:> There’s a standard ARM alternate floating-point behaviour extension (FEAT_AFP) from ARMv8.7, but the M1 design predates the v8.7 standard, so Rosetta 2 uses a non-standard implementation.> (What a coincidence – the “alternative” happens to exactly match x86.Good luck persuading a judge that this was ""a coincidence""."	codedokode	9.753068	-5.3217425	comment	4.0	23.0	1668687313	7.5881977
33643074	The article describes how Apple incl	The article describes how Apple included support for the x86 parity flag which comes from the 8080. Parity is relatively expensive to compute, requiring XOR of all the bits, so it's not an obvious thing to include in a processor. So why did early Intel processors have it? The reason is older than the 8080.The Datapoint 2200 was a programmable computer terminal announced in 1970 with an 8-bit serial processor implemented in TTL chips. Because it was used as a terminal, they included parity for ASCII communication. Because it was a serial processor, it was little-endian, starting with the lowest bit. The makers talked to Intel and Texas Instruments to see if the board of TTL chips could be replaced with a single-chip processor. Both manufacturers cloned the existing Datapoint architecture. T	kens	9.585322	-5.267567	comment	4.0	25.0	1668708592	-7.512879
33642470	Microsoft is the king in another way	Microsoft is the king in another way.Apple has made Rosetta 2, one of the most impressive software/hardware mixture ever, and they can’t wait to get rid of it.Microsoft will make a crappy conversion shim and keep it in their code forever. For. Ever.	philistine	9.776375	-5.262452	comment	4.0	27.0	1668706487	7.617928
33652117	Show HN: Libriscv – RISC-V userspace	Show HN: Libriscv – RISC-V userspace emulator library	fwsgonzo	9.426201	-5.6897154	story	4.0	40.0	1668762001	10.805335
33672731	The main task for any BIOS is to ini	The main task for any BIOS is to initialize the memory controller, which for modern DDR4 or DDR5 memory is a very complex and undocumented task, so it must be done usually by a binary firmware blob provided by Intel or AMD.The usual operating systems might be able to initialize the peripherals, but they expect an already working memory and a memory map provided by the BIOS.After a quick browsing through the sources, it seems that this project has not progressed so far yet, even if it probes for working memory and it may be able to use the cache memory as RAM on some CPU models (as all BIOSes must do, before the memory controller is initialized).Under an emulator like QEMU, a BIOS can work even if it is not able to initialize a real memory controller, but on real bare-metal hardware that ha	adrian_b	9.898336	-5.294542	comment	4.0	17.0	1668880877	7.95417
33719626	I find this obsession with RISC-V on	I find this obsession with RISC-V on HN fascinating. It’s not even close to challenging ARM or x86 outside of very low power/embedded applications. That might change at some poi t but I think it’s very far from certain.	yywwbbn	9.424438	-5.641133	comment	4.0	26.0	1669214311	-10.519432
33751227	Finally! I've been wanting something	Finally! I've been wanting something like this for ages- generally speaking I don't consider myself an idiot, but I'm forced to pull that into questioning every time I test and debug ci/cd actions with an endless stream of pull request modifications	benrutter	9.076461	-6.3967857	comment	4.0	20.0	1669454309	6.268991
33751392	I also struggle with CI vendor lock-	I also struggle with CI vendor lock-in.Somebody wants to build a  serverless- type ci system?	Eun	9.22054	-6.37309	comment	4.0	18.0	1669456545	6.033183
33751475	I found Dagger[1] and Earthly[2] whi	I found Dagger[1] and Earthly[2] which supposedly would solve the issue of debugging the CI locally. I haven't got time to try them out yet though.[1]: https://dagger.io/[2]: https://earthly.dev/	zephyros	9.045298	-6.39239	comment	4.0	12.0	1669457531	6.3110266
33760464	Ask HN: What emojis do you want to b	Ask HN: What emojis do you want to be added most?	dapookster	9.798165	-6.262803	story	4.0	6.0	1669524278	13.029727
33776030	Wasn't the issue that efficiency cor	Wasn't the issue that efficiency cores don't support AVX-512 and that operating system schedulers/software don't deal with this yet and end up running AVX-512 code on the efficiency cores?	danieldk	9.500022	-5.507464	comment	4.0	18.0	1669654653	8.036974
33776079	Some of the biggest investments into	"Some of the biggest investments into general purpose Linux performance, reliability, and sustainability were made by people with ""specialty engines"" that Linus is talking about. The specialty applications often turn out to be important because they push the platform to excel in unexpected ways.With that said, the biggest practical problem we saw with AVX-512 was that it's so big, power hungry, and dissimilar to other components of the CPU. One tenant turning that thing on can throttle the whole chip, causing unpredictable performance and even reliability issues for everything on the machine. I imagine it's even worse on mobile/embedded, where turning it on can blow out your power and thermal budget. The alternatives (integrated GPUs/ML cores) seem to be more power efficient."	ak217	9.449685	-5.528041	comment	4.0	16.0	1669654860	8.080293
33776320	>  End result: go look for AVX-512 b	>  End result: go look for AVX-512 benchmarks. You'll find them. And then ask yourself: how many of these are relevant to what I bought my PC/mac/phone for?... do you guys not do JSON?  cause we're doing json.https://www.phoronix.com/review/simdjson-avx-512or how about ARM emulation?  anybody doing ARM development on x86?  do you guys have phones, maybe?https://www.reddit.com/r/emulation/comments/lzfpz5/what_are_...seriously, linus is wrong on this issue, and he just keeps digging.  lose the ego and admit you were spewing FUD.avx-512 had legit problems in Skylake-SP server environments where it was running alongside non-AVX code (although you could segment servers by AVX and non-AVX if you wanted).None of that has been true for any subsequent generations where the downclocking is essential	paulmd	9.458201	-5.4590926	comment	4.0	19.0	1669655797	8.043806
33779927	Apple certainly tailors the emojis a	Apple certainly tailors the emojis available to the local political climate.They don't, for instance, have the flag of the Islamic Emirate of Afghanistan, instead using the flag of the former Islamic Republic of Afghanistan.	whimsicalism	9.850156	-6.242388	comment	4.0	39.0	1669670687	-13.94486
33780404	The gun emoji became a toy on all ma	The gun emoji became a toy on all major platforms everywhere several years ago.This is surely related to the political climate but I believe the entities involved applied that change worldwide.	zerocrates	9.792926	-6.261827	comment	4.0	16.0	1669672504	-13.966457
33793491	A classic book about how to design a	"A classic book about how to design a microprogrammed CPU was ""Mick & Brick"", which was published by AMD in 1980 and now it is freely available at bitsavers:http://www.bitsavers.org/components/amd/bitslice/Mick_Bit-Sl...This book explains how to design miroprogrammed CPUs with the AMD 2900 series integrated circuits, which was the most popular method for designing PDP-11 clones around 1980, before the monolithic microprocessors from Intel and Motorola became powerful enough to replace the minicomputers.Even if the bit-slice circuits like the AMD 2900 series have been obsolete for many decades, understanding how a CPU could be designed with them can enable anyone to make now a similar CPU design, but implemented in an FPGA.The datasheets of the 2900 series, which can be useful for extra deta"	adrian_b	9.387977	-5.2637978	comment	4.0	13.0	1669756972	7.8118787
33831593	The definition of RISC has changed.R	The definition of RISC has changed.Remember when RISC didn't have division instructions because that was a complex microcode? I remember.Over in CISC land, x86 'DIV' was all you needed to divide. In RISC land (ARMv7 or earlier), you needed to write a division loop.------With RISC machines getting divide instructions, the delineation of RISC vs CISC is meaningless to me. All RISC machines have taken the best parts of CISC (Divide instruction. SIMD-instructions. AES instructions. Complex addressing schemes), and all CISC machines have taken the best parts of RISC (high register counts, pipelines, load/store architectures)	dragontamer	9.489838	-5.7166615	comment	4.0	41.0	1669994275	-10.500561
33831636	Inlining heuristics used for -O3 are	Inlining heuristics used for -O3 are architecture-specific, so this just shows that things have been tuned in a particular way, probably based on the most prevalent icache sizes. -O2 numbers might be different because of reduced inlining. I would expect the -O2 numbers to reflect better the actual ISA capabilities.The choice of sub-architecture matters as well. It's probably not fair to compare against outline atomics. In my experiments at least, VEX was more compact even for scalar code, etc.	fweimer	9.796028	-5.9095364	comment	4.0	23.0	1669994441	-7.6681175
33846037	MOnSter 6502 creator here for any qu	MOnSter 6502 creator here for any questions...	tubetime	9.518873	-5.270529	comment	4.0	13.0	1670092777	-7.435746
33846076	Author here if anyone has questions.	Author here if anyone has questions. I've been doing a lot of 8086 stuff lately, so this article is different from last week's 8086 article (in case anyone thinks they have deja vu).	kens	9.650173	-5.3879924	comment	4.0	51.0	1670093014	-7.5858417
33854316	Acorn ARM Evaluation System	Acorn ARM Evaluation System	nickt	9.596407	-5.2523847	story	4.0	38.0	1670166364	-7.7452188
33919172	I my experience if you get more buil	I my experience if you get more builders/faster hardware someone higher up will end up asking for more items in the build-matrix, and the CI time will balloon up again.It's rarely only a question of just allocating money to more/better hardware, it's also a question of policy and willingness of your organisation to keep CI time short/feedback fast.	carreau	9.293298	-6.3514915	comment	4.0	26.0	1670576170	2.149587
33925193	You believe the US intel operation i	You believe the US intel operation is comparable to the Stasi?	Hnrobert42	9.317103	-5.1897125	comment	4.0	12.0	1670612620	7.730682
33993688	Adding more levels of cache is a tim	Adding more levels of cache is a time-honored tradition, and it works.For example, with the M1, Apple tied the DRAM interface to the CPU. That got them more bandwidth, but then you can't upgrade the memory, which is weak.But why not do both?Have e.g. 8GB of high-bandwidth DRAM soldered to the board, essentially that amount of L4 cache, but keep the DIMM slots where you can add arbitrarily more memory with less bandwidth.	AnthonyMouse	9.828264	-5.3007646	comment	4.0	13.0	1671067289	8.144807
34025147	Based on a brief bit of googling abo	Based on a brief bit of googling about this board's CPU (the Bouffalo Lab BL808), it seems to have one RV64 and two RV32 cores. The RV64 core may be capable of running RV32 machine code,  if the OS sets various flags correctly, but the reverse isn't possible without emulation.How does Linux handle this? Can you just run an executable and have it automatically scheduled onto whichever cores can execute it? Wouldn't the kernel itself have to be compiled for both architectures?EDIT: Maybe I was overthinking this -- I found what looks like the devicetree file for the BL808, and it seems like only the single RV64 core is supported:https://lore.kernel.org/lkml/20221127132448.4034-7-jszhang@k...	teraflop	9.68833	-5.552841	comment	4.0	30.0	1671255828	8.002236
34027813	"No. 6: How can an ISA ""be closed""? I"	"No. 6: How can an ISA ""be closed""? It seems to me like all ISAs are open by definition, since they are simply an interface between the CPU and human (essentially). See e.g. https://en.wikipedia.org/wiki/List_of_x86_manufacturers. Many of these haven't acquired any ""license"" from Intel to implement a processor that complies to the x86 interface. If things are as I assume, I find it disingenuous to portray RISC-V as an ""open"" ISA since it implies people can't build on top of other ISAs. If there's something more to it, it would be helpful if someone could explain.I still think RISC-V is superior to x86(-64) FWIW."	Laaas	9.440321	-5.684641	comment	4.0	23.0	1671285804	-10.58665
34046379	This was only 'enforced' by the link	This was only 'enforced' by the linker on x86. You could handcraft a Mach-O executable to get around it. But it is now enforced enforced by OSX on ARM.I don't see any good reason for this. My own half assed explanation is they're enforcing 32b cleanliness. It's not a very good explanation. But it's my explanation for something I don't like.	CalChris	9.8724165	-5.420978	comment	4.0	22.0	1671409543	-7.799705
34081298	The biggest missing thing in my mind	The biggest missing thing in my mind is threading support. Great performance isn’t very useful if it only runs on one core.	et1337	9.737639	-5.510232	comment	4.0	33.0	1671633790	8.217141
34085635	Minix: Intel's hidden in-chip operat	Minix: Intel's hidden in-chip operating system (2017)	taubek	9.517607	-5.202644	story	4.0	12.0	1671652842	7.7686505
34096836	> And IIRC, each Intel SMT (hyper-th	> And IIRC, each Intel SMT (hyper-thread) unit has its on instruction pointer and (non-SIMD?) register set.I believe the SMTs share the register rename storage, which I'd say is the register set more than the 'architectural registers'But I'd say the reason they're not real is because they don't increase the maximum instructions per clock. With many loads, they do increase the average instructions per clock, but they don't let you do anymore work if you've got a fully tuned load that uses all the computing resources.	toast0	9.815813	-5.8029094	comment	4.0	20.0	1671734677	8.205879
34108908	Does anyone know of a good wiki for 	Does anyone know of a good wiki for doing multicore RISC-V on FPGA? Something more substantial than:https://www.reddit.com/r/RISCV/comments/z6xzu0/multi_core_im...When I got my ECE degree in 1999, I was so excited to start an open source project for at least a 256+ core (MIPS?) processor in VHDL on an FPGA to compete with GPUs so I could mess with stuff like genetic algorithms. I felt at the time that too much emphasis was being placed on manual layout, when even then, tools like Mentor Graphics, Cadence and Synopsys could synthesize layouts that were 80% as dense as what humans could come up with (sorry if I'm mixing terms, I'm rusty).Unfortunately the Dot Bomb, 9/11 and outsourcing pretty much gutted R&D and I felt discouraged from working on such things. But supply chain issues and GPU 	zackmorris	9.371005	-5.5172625	comment	4.0	16.0	1671819326	-10.521672
34112988	Do this instead https://spectre.app/	Do this instead https://spectre.app/	branon	9.697238	-5.5648875	comment	4.0	14.0	1671846537	5.9504824
34117471	CoreFreq, a CPU monitoring software 	CoreFreq, a CPU monitoring software frequencies, ratios, C-states	zdw	9.620333	-5.3172064	story	4.0	81.0	1671894572	-13.376856
26502662	One thing i wonder about when readin	"One thing i wonder about when reading about the issues of chroot is why they just didn't make ""PR_SET_NO_NEW_PRIVS"" default of chroot from the beginning and make other ways to strengthen chroot security (because it was after all intended to provide security so why did backwards compatibility trump security?)"	whizzter	9.772082	-6.424375	comment	4.0	20.0	1616075521	-14.005999
26503828	PiDP-8/I running TSS/8 open for retr	PiDP-8/I running TSS/8 open for retro challenges	sdf_pubnix	9.805497	-5.2860484	story	4.0	9.0	1616082202	-7.5384426
26509221	Is that really how people are percei	Is that really how people are perceiving smiley faces nowadays? I make rather extensive use of smiley faces and smiling emoji and I would hate for them to be received in that manner, rather than what I intend, which is an authentic smile.	bostonvaulter2	9.788745	-6.255323	comment	4.0	12.0	1616115471	-13.936191
26520180	This would still break SGX/remote at	"This would still break SGX/remote attestation, no? The chip can correctly say it's running some piece of assembly but if ""ret"" has been redefined to do whatever I want..."	dooglius	9.509452	-5.229967	comment	4.0	16.0	1616206318	-5.842862
26520116	Linus Torvalds on how AMD, Intel are	Linus Torvalds on how AMD, Intel are changing how interrupts are handled	kristianp	9.457901	-5.3751054	story	4.0	18.0	1616205676	7.820515
26526471	I never understood the hype around R	I never understood the hype around RISC-V. It is an ISA on the level of a mediocre early 90s design and does not address any of the problems we have today such as the memory latency bottleneck and the resulting topology challenges. Several completely open source designs are available that are vastly superior and real world battle tested such as OpenSPARC-T2.So why do we need RISC-V? Is it another case of NIHS?	sprash	9.394597	-5.682879	comment	4.0	29.0	1616278804	-10.55041
26557644	Linus is very proud of Linux running	Linus is very proud of Linux running on anything, from toasters to HPC, so I think it's safe to assume less common architectures aren't going away.	tambourine_man	9.423031	-5.821867	comment	4.0	13.0	1616520546	4.20774
26581996	No mention of latency.  Presumably t	No mention of latency.  Presumably that means this will be higher latency than DDR4 (following recent trends to simultaneously increase DRAM bandwidth and latency).	hedora	9.771208	-5.1988544	comment	4.0	14.0	1616688472	7.893805
26583488	The problem with putting RAM at the 	The problem with putting RAM at the end of a cable is that RAM latency is highly dependent on distance from the CPU.Assuming RAM is 2 inches away from the cpu, and assuming the CPU is operating at 3 ghz, you are looking at 3 billion round trips per second over the distance of 2 inches, or a grand total of 12 billion inches of wire being crossed per second.Electric signals are limited by the speed of light, though. In a vacuum, light travels at 299,792,458 meters per second, or 11,802,852,677 (11 billion) inches per second.Do you see the bottleneck?	t0mbstone	9.807689	-5.194533	comment	4.0	16.0	1616695911	7.778369
26610259	Really hope Box86 or wine hangover a	Really hope Box86 or wine hangover allow windows x86 binaries to run well on arm sbc on a not too distant future.	marcodiego	9.779034	-5.2041054	comment	4.0	17.0	1616938515	-7.9372144
26627707	TL;DR;> Enter Pat Gelsinger. His str	TL;DR;> Enter Pat Gelsinger. His strategy is also dual-pronged. First, to open up x86 to licensing as IP. (Heresy!) And second, to rent out Intel’s production facilities like an independent foundry. (Horror!) Other people will be able to make Intel microprocessors, and Intel will make other people’s microprocessors. He’s unbundling Intel’s architecture from Intel’s manufacturing.	gtirloni	9.411107	-5.1980066	comment	4.0	13.0	1617049440	-7.861013
26630548	The Linux kernel uses email. I can’t	The Linux kernel uses email. I can’t imagine that crowd does things the inconvenient way.	IgorPartola	8.82569	-5.994139	comment	4.0	41.0	1617069270	4.6236095
26638970	The RPi seems to intentionally lag a	The RPi seems to intentionally lag around 5 years behind the Arm roadmap so maybe the RPi 7 will have Armv9 in 2027.I don't intend this as a criticism, just a fact. Newer cores cost more so RPi has to use older technology to meet its price target.	wmf	9.545167	-5.305958	comment	4.0	27.0	1617131381	-7.779454
26680397	I think it could be solved by requir	I think it could be solved by requiring maintainers to kick off the CI job for every PR coming from a first-time contributor manually. I would not be annoyed by this provided that regular contributors don’t have to go through this. I think GH can further reduce the impact of this by not applying the limitation to first-time contributors who have lots of followers, forks, PR reviews, commits in the last year.Also, edits to the CI script could be made suspect. I never had a first-time contributor on my projects start by making changes to the CI pipeline.I am pretty sure smart folks at GH thought of this and just deliberating whether to introduce such a breaking flow to maintainers.	smarx007	8.908507	-6.3968616	comment	4.0	18.0	1617451809	-11.746763
26714285	GPGPU will never really be able to t	GPGPU will never really be able to take over CPU-based SIMD.GPUs have far more bandwidth, but CPUs beat them in latency. Being able to AVX512 your L1 cached data for a memcpy will always be superior to passing data to the GPU.With Ice Lake's 1MB L2 cache, pretty much all tasks smaller than 1MB will be superior in AVX512 rather than sending it to a GPU. Sorting 250,000 Float32 elements? Better to SIMD Bitonic sort / SIMD Mergepath (https://web.cs.ucdavis.edu/~amenta/f15/GPUmp.pdf) on your AVX512 rather than spend a 5us PCIe 4.0 traversal to the GPU.It is better to keep the data hot in your L2 / L3 cache, rather than pipe it to a remote computer (even if the 16x PCIe 4.0 pipe is 32GB/s and the HBM2 RAM is high bandwidth once it gets there).--------But similarly: CPU SIMD can never compete ag	dragontamer	9.240945	-5.247012	comment	4.0	35.0	1617728138	8.073902
26738994	Yes, yes, this is why I haven't both	"Yes, yes, this is why I haven't bothered to upgrade my 2500K, although it is actually time now, since games apparently learnt how to use more than 1 core.
I always went to some benchmark every year and saw single-core performance barely moving upwards."	sandos	9.555376	-5.2665296	comment	4.0	12.0	1617891575	7.9540772
26772650	It is indeed an amazing project, esp	"It is indeed an amazing project, especially its open source nature. It provides some impressive power savings and latency reductions that are very hard to match with general purpose CPUs.But in most cases, it is emulation, as the lead developer will attest.https://github.com/MiSTer-devel/Main_MiSTer/wiki/Why-FPGA""From my point of view, if the FPGA code is based on the circuitry of real hardware (along with the usual tweaks for FPGA compatibility), then it should be called replication. Anything else is emulation, since it uses different kinds of approximation to meet the same objectives. Currently, it's hard to find a core that can truly be called a replica – most cores are based on more-or-less functional recreations rather than true circuit recreation. The most widely used CPU cores – the"	near	9.101999	-5.2332954	comment	4.0	24.0	1618168389	8.374435
26775455	FPGA cores are based on CPU emulator	FPGA cores are based on CPU emulators, so they aren't more accurate than the emulator, and decapping a chip doesn't help. FPGAs are written in languages like Verilog that are still high-level and do some probably misguided tricks to make it look like you're programming them with a vaguely C syntax.	astrange	9.106355	-5.331331	comment	4.0	14.0	1618192636	8.344704
26793558	Linus is an ethnic Swede, can't have	Linus is an ethnic Swede, can't have that	wassenaar10	9.283897	-5.8949146	comment	4.0	21.0	1618327614	4.162672
26831953	"Every time something like ""Linus Tor"	"Every time something like ""Linus Torvalds on ..."" pops up, I get curious if it will be an interesting explanation or a full Linus rage TM. This post is defo the former though (perhaps he is not raging anymore hehe).If you never saw one of his rage moments, take a look at: https://lkml.org/lkml/2012/12/23/75 and https://lkml.org/lkml/2013/7/13/132"	brunoluiz	9.287196	-5.8893905	comment	4.0	26.0	1618568101	4.1903086
26846327	"People keep calling such suspicion """	"People keep calling such suspicion ""conspiracy theory"" as if it's rare of unlikely. Intel in particular has been fined multiple times for this exact practice. Maybe they are back at it- if I were the regulator, I would at least take a look at the issue.https://www.extremetech.com/computing/184323-intel-stuck-wit..."	ClumsyPilot	9.411174	-5.1989594	comment	4.0	33.0	1618683969	7.7516356
26846863	ARM really isn't a generation ahead.	ARM really isn't a generation ahead. Put a good x86 core on 5nm, and it might be slower but that's not a generation. Especially if you take generation to be like, pentium to pentium pro kind of leap.Intel should have an escape plan off x86, but people are way way too stuck on the idea that x86 is a dead end when a good microarchitectural leap could offset it.	mhh__	9.586202	-5.2020793	comment	4.0	14.0	1618688405	-7.8108573
26890398	I was enjoying Linus being less aggr	I was enjoying Linus being less aggressive, but maybe we do need angry Linus.	devmor	9.27393	-5.8926888	comment	4.0	16.0	1619016679	4.292498
26891943	It's not that variable length is exp	It's not that variable length is expensive, it's that variable length the way Intel does it is expensive. For instance — not that this is a good idea — you could burn the top 2b to mark instructions as 2/4/6/8 bytes (or whatever) in length. Then you can have your variable-width-cake-and-eat-your-fast-decode-too.	thechao	9.774589	-5.763135	comment	4.0	22.0	1619023123	-7.8262596
26913965	ARM is not more efficient / faster b	ARM is not more efficient / faster because it’s “newer”.People imply ARM is relatively new and thus could correct for the misdirection x86 has gone.1978 is when x86 was introduced.1985 is when ARM was introduced.ARM isn’t that much newer than x86.https://en.m.wikipedia.org/wiki/X86https://en.m.wikipedia.org/wiki/ARM_architecture	alberth	9.67264	-5.38254	comment	4.0	12.0	1619180521	-7.7560782
26917890	A Dozen Microcomputers	A Dozen Microcomputers	daly	9.12699	-5.4341526	story	4.0	6.0	1619203998	8.542586
26923259	For those wondering why you'd use th	For those wondering why you'd use this when you could just use an emoji, emoji look different based on the device or browser manufacturers. If your design requires a consistent look then this can be used to create an SVG that looks the same regardless of device or browser.	cercatrova	9.814064	-6.2662416	comment	4.0	15.0	1619252560	-13.958367
26930569	RTL2GDS from a library.  Based on Ma	RTL2GDS from a library.  Based on Magic.  And an SoC that they saddle you with.Basically--totally useless or, if I'm being polite, nothing a modern FPGA couldn't do a hundred times better.The worst part is that you don't need a zillion transistors to build an interesting chip.  However, you need to be able to do physical design of those transistors if you want to do anything that couldn't actually be done on an FPGA.  (For example: See the MN3007 Bucket Brigade Delay that so many analog delay guitar pedals are made from.  https://www.electrosmash.com/mn3007-bucket-brigade-devices)	bsder	9.088732	-5.32394	comment	4.0	14.0	1619329526	8.317953
26944276	I work for a large provider in the V	I work for a large provider in the VCS/CI space. While I appreciate the varied opinions in the comments here on the perceived usefulness of Crypto, I think folks outside of the space simply do not understand how much time is being spent combating the issue.If we, for example, had a team of 20 working on our CI offering, we would have re-allocated at least 50% of them to work full-time on combating the miners. And this trend is not slowing, it is only accelerating.One week, we may have a breakthrough and find some common heuristic in running binaries that identify _this weeks_ miners, but next week they will have figured out that we have figured it out and make the requisite changes. It's something akin to the early days of anti-virus software, but given the 2021 scale of the internet, the 	tjk_	9.307925	-6.396391	comment	4.0	18.0	1619453797	6.1374226
26946481	Because literally not _every single 	Because literally not _every single group on earth_ needs to be represented.It's an emoji pack... I don't need it for it to be exponentially more difficult to find ones I'm looking for because now we need every single permutation of race x facial hair x gender x skin color x marriage pair x favorite cereal.	Exuma	9.799486	-6.2684336	comment	4.0	28.0	1619463251	-13.962741
26954620	A somewhat related question: are the	A somewhat related question: are the major cloud providers showing any interest in unikernels?	MaxBarraclough	9.910412	-6.246586	comment	4.0	25.0	1619523736	-12.374433
26955482	Couldn't you make a real time uniker	Couldn't you make a real time unikernel? Basically you should be able to modify an existing unikernel implementation to make it real time.	halation_effect	9.927867	-6.2349563	comment	4.0	14.0	1619529883	-12.379104
26957584	ARM today is probably more CISCy tha	ARM today is probably more CISCy than what he considered CISC in 2001.	zamadatix	9.475085	-5.6626616	comment	4.0	18.0	1619538639	-10.499945
26959938	Ask HN: How to Reconcile SOX Segrega	Ask HN: How to Reconcile SOX Segregation of Duties with DevOps?	yukinon	9.220901	-6.394517	story	4.0	5.0	1619549659	2.0131357
27023750	Firefox doesn't yet, but Chrome on d	Firefox doesn't yet, but Chrome on desktop fully mitigates spectre using site isolation - every origin (including via embedded iframes, etc) runs in its own process.	saddlerustle	9.784643	-5.610261	comment	4.0	15.0	1620041364	7.419953
27047203	I don't think it's racist, but I do 	I don't think it's racist, but I do find it a little odd when someone takes the time to purposefully select a non-default skin tone. As a white person, it feels weird to go out of my way to send a white emoji and feels even weirder to use a black or brown emoji.I'm all for inclusion, but it's not like anyone's skin is the yellow color of the default faces.	gundmc	9.773138	-6.267794	comment	4.0	19.0	1620200423	10.561535
27074988	I do often wonder about the transiti	"I do often wonder about the transition from maintainers such as Linus or Greg and how that might impact the kernel.Is there a line of succession? Will Linus' standards be maintained? Is a ""council"" formed similar to Python?For such mission critical software I really do hope there's a concrete plan in place...We are all human afterall..."	aboringusername	9.426862	-5.83639	comment	4.0	12.0	1620389179	4.2700477
27075602	A lot of these architecture have som	A lot of these architecture have some drawbacks in modern times.Alpha’s loosey-goosey memory model makes multithreaded code on SMP systems more challenging. Linux utilizes its Alpha port as a worst-case testbed for data race conditions in its kernel.SPARC’s register windows are anachronistic and complicate the implementation of CPUs, and I’d guess also make it more difficult to build OoOE cores (so many SPARC chips are in-order, why?)POWER isn’t so bad though. It’s open enough where you could build your own lower-cost core if you wanted. There’s nothing intrinsic to the ISA that would mandate an expensive chip other than volume constraints.PA-RISC put up some great numbers back in the day but between the Compaq acquisition (bringing with it Alpha) and Itanium it was chronically under-resou	spamizbad	9.566757	-5.501207	comment	4.0	19.0	1620394045	-7.7625747
27078207	Constantine: Automatic side-channel 	Constantine: Automatic side-channel resistance using data flow linearization [pdf]	sternmere	9.772176	-5.5806255	story	4.0	27.0	1620407284	-5.7204685
27099539	And, in my opinion, its only going t	And, in my opinion, its only going to get worse if Intel doesnt sober up and address the elephant in the room:  Hyperthreading.Without serious reform to the design of the Intel X86 chip to eliminate and refactor what basically amounts to a performance-before-safety feature, Intel is going to see the lions share of performance hits.  Eventually people will tire of writing backflip code to sidestep pitfalls in the Intel HT design and simply return the responsibility to Intel, where its existed since day one.It could be argued Intels mouthpiece has already lost its ability to convince major datacenter and cloud customers that HT is even remotely safe as a continued investment.  Intel needs a new X86.	nimbius	9.389541	-5.1880198	comment	4.0	28.0	1620592955	7.7760525
27105374	~20% of users are still on 32-bit, h	~20% of users are still on 32-bit, how?	ece	9.898672	-5.269009	comment	4.0	15.0	1620650787	-7.9029474
27114654	I don't hate X86, but I hope to god 	I don't hate X86, but I hope to god it finally goes, and I know I won't miss it.	mhh__	9.718037	-5.355946	comment	4.0	26.0	1620712228	-7.7747226
27137417	One of the reasons Apple does so wel	One of the reasons Apple does so well in browser tests is that ARM now has instructions to increasing the performance and decreasing the power draw of JavaScript operations.	_kbh_	9.735769	-5.2676926	comment	4.0	16.0	1620869259	-7.7553434
27138577	Intel is free to improve GCC or Clan	Intel is free to improve GCC or Clang for their processor. They instead choose to sell an expensive compiler of their own.	adrianN	9.609066	-5.5972395	comment	4.0	14.0	1620881989	-7.3388357
27192334	Open source retro ISA video card	Open source retro ISA video card	jnord	9.514704	-5.3073196	story	4.0	55.0	1621326164	-7.727776
27218668	That's the question I have as well, 	"That's the question I have as well, but since microarchitecture is in large parts dictated by isa how custom it can really be?
On the other hand custom isa would require rolling the entire software stack, which is a complete non-starter.
Really weird article and announcement"	liaukovv	9.57462	-5.537655	comment	4.0	15.0	1621498329	-7.7212358
27219099	Years ago I read an interview with o	Years ago I read an interview with one of Intel's upper managers for the Itanium product line and when he listed off the various reasons it was not successful the top of the list was the lack of availability to those people actually doing the work of Linux & compiler development having very expensive and unplanned consequences.	Quequau	9.507967	-5.481128	comment	4.0	24.0	1621502607	-7.702139
27228436	the future is here & it is slow as f	the future is here & it is slow as fuck (& ghastly ghastly over-priced).usb2.0, a 1GHz core... a rpi4 will wallop this little toy, just demolish the shit out of it, at 1/3rd the price. or go up & buy a fantastic amazing fairly small x86 (used on ebay) that will destroy both for 2x the price. i really want collaborative open source hardware to become a thing. but wow, risc-v has so far to go to become an in any way at all real challenger.it just sucks so bad that whatever cpu cores we make, we'll be saddled with no pcie, crappy usb, short of paying big bucks for some IP (99% of the times coupled to some specific fab) that does the interesting bits, like providing usb3, pcie, and, frankly & most presently-important, the future standard to unite them all, thunderbolt4. also the lack of availa	rektide	9.415773	-5.440929	comment	4.0	16.0	1621551015	-10.534641
27233262	We're getting open source RISC-V wic	We're getting open source RISC-V wich seems more promising long term than ARM.	halikular	9.429227	-5.620318	comment	4.0	14.0	1621600841	-10.540487
27233479	I gather that it's true that ARM has	I gather that it's true that ARM hasn't been as good about backwards compatibility as some of its competitors, but was ARMv8 really so much of a jump from ARMv7 that one can't count it as part of the same line of processors anymore?	mumblemumble	9.622929	-5.31062	comment	4.0	17.0	1621602118	-7.760705
27242077	Yellow is more neutral than specific	"Yellow is more neutral than specific light-to-tan skin tones, but it's certainly not neutral in regards to everyone.Or, to put it another way - if the default for all emoji was a dark magenta skin tone, would you consider that ""race-neutral""?"	crooked-v	9.7666855	-6.2551565	comment	4.0	12.0	1621644976	10.288831
27266582	Unicode points for emoji are in the 	Unicode points for emoji are in the code reflected off the glasses of the developer on the left hand side:1f374 = FORK AND KNIFE1f634 = SLEEPING FACE1F4BB = PERSONAL COMPUTEREat / Sleep / Code!	splatcollision	9.851777	-6.2626286	comment	4.0	12.0	1621874741	-13.955295
27273450	Is there anyway to buy/book directly	Is there anyway to buy/book directly instead going through this Amadeus, and this Sabre software you mention?	anfilt	9.598902	-5.317888	comment	4.0	17.0	1621923978	2.220868
27276651	Do you remember what you tried?Yours	Do you remember what you tried?Yours has been literally the first negative comment out of hundreds of comments I've read about magit.  It'd be interesting to learn what didn't work for you and why.	pmoriarty	8.843275	-6.41663	comment	4.0	17.0	1621950255	-11.434429
27278001	Interesting that mobile platforms / 	Interesting that mobile platforms / CPU's losing 32 bit support whilst the dominant desktop platform retains it.Not sure what the cost of continuing 32 bit support on x86 is for Intel/AMD but does there come a point when Intel/AMD/MS decide that it should be supported via (Rosetta like) emulation rather than in silicon?	klelatti	9.776434	-5.228556	comment	4.0	45.0	1621956078	-7.7977066
27279195	The state-machine that can determine	The state-machine that can determine the start-of-instructions can be run in parallel. In fact, any RegEx / state machine / can be run in parallel on every byte with Kogge-stone / parallel prefix, because the state-machine itself is an associative (but not communitive) operation.As such, I believe that decoders (even complicated ones like x86) scale at O(n) total work (aka power used) and O(log(n)) for depth (aka: clock cycles of latency).-------Obviously, a simpler ISA would allow for simpler decoding. But I don't think that decoders would scale poorly, even if you had to build a complicated parallel-execution engine to discover the start-of-instruction information.	dragontamer	9.69297	-5.6800113	comment	4.0	20.0	1621961401	-7.882504
27281646	Genuine question: what stops most Co	Genuine question: what stops most Cortex M users from adopting A64 with ILP32? Anything except existing codebases?	gsnedders	9.698097	-5.3472233	comment	4.0	14.0	1621972080	-7.7868648
27293438	Marcan said elsewhere in the thread 	Marcan said elsewhere in the thread that the executable section on ARM also includes constant pools, so if I understand correctly, you can hide instructions in there and make it intractable for a static analyzer to determine whether they are really instructions or just data.The real saving grace here is that iOS app binaries are submitted as LLVM IR instead of ARM machine code.	SheinhardtWigCo	9.840536	-5.3997436	comment	4.0	17.0	1622049975	-7.6479354
27318960	Is there any evidence of Rawhammer b	Is there any evidence of Rawhammer being used in a successful attack in the wild?	karmicthreat	9.631167	-5.670909	comment	4.0	29.0	1622226987	-13.88781
27319051	In other words, blame Intel for tryi	"In other words, blame Intel for trying to pass off ECC as a ""Enterprise Feature"" instead of the basic necessity that it is."	notriddle	9.413111	-5.4716578	comment	4.0	45.0	1622227486	8.190452
27319264	DRAM manufacturers continue (knowing	DRAM manufacturers continue (knowingly at this point) to manufacture faulty products, and we should blame Intel?	creato	9.657585	-5.3357196	comment	4.0	23.0	1622228776	-13.764565
27320127	Can Rowhammer bypass ECC and not be 	Can Rowhammer bypass ECC and not be detected by an hw_event_mc_err_type? I don't think so. Why would someone have ECC without a sufficiently sophisticated driver?	CalChris	9.547391	-5.622116	comment	4.0	15.0	1622233891	8.260473
27321491	Let's define unikernels as running u	Let's define unikernels as running under a hypervisor. If it's not, it's more likely to be called an embedded operating system.I don't think unikernels are worth it unless you're running at massive scale. A realistic target audience is providers of serverless-style services, in which case you're taking a vanilla application someone else wrote and compiling it against a unikernel.	sn	9.906566	-6.232799	comment	4.0	19.0	1622242625	-12.376164
27351589	Main memory, if you mean DRAM, no.DR	Main memory, if you mean DRAM, no.DRAM is incompatible with the logic family used in CPU making, though attempts were numerous at trying to work around that. Every few years, there are somebody coming with claims of passable CMOS+DRAM tech, but none got adoption so far.	baybal2	9.716286	-5.284062	comment	4.0	24.0	1622532568	8.012427
27352462	Bulb: Another teeny-tiny interpreted	Bulb: Another teeny-tiny interpreted language that runs on Super CHIP-8	tosh	9.642233	-5.2755284	story	4.0	72.0	1622542200	-10.294674
27361334	Having substantially more L1 and L2 	Having substantially more L1 and L2 cache per core but no L3 has to be a massive part of why the M1 performance is so good. I wonder if Intel/AMD have plans to increase the L1/L2 size on their next generations.	OldTimeCoffee	9.763941	-5.4324784	comment	4.0	19.0	1622581775	8.1651125
27379212	Site is down, archive link: https://	"Site is down, archive link: https://web.archive.org/web/20210602080638/https://sigops.or...What stands out to me:- ""Mercurial cores are extremely rare"" but ""we observe on the order of a few mercurial cores per several thousand machines"". On average one core per 1000 machines is faulty? That's quite a high rate.- Vendors surely must know about this? If not by testing then through experiencing the failures in their company servers.- I've read the whole paper and I see no mention of them even reaching out to vendors about this issue. Their are strong incentives on both sides to solve or mitigate this issue so why aren't they working together?"	guidovranken	9.539319	-5.3388915	comment	4.0	15.0	1622715696	7.880772
27397728	Since cloud servers are a bigger mar	Since cloud servers are a bigger market than users who want to run an old copy of VisiCalc, why doesn't either Intel or AMD produce a processor line that has none of the old 16 and 32 bit architectures (and long-forgotten vector extensions), implemented in silicon?   Why not just make a clean (or as clean as possible) 64 bit x86 processor?	PopePompus	9.525052	-5.275875	comment	4.0	30.0	1622833623	7.7842536
27401602	I have no idea if those Intel employ	"I have no idea if those Intel employees had direct experience with Itanium or they merely drank the ""Itanium is bad"" kool-aid. The hardware was pretty bad in the early years but Intel fixed those problems (speed, power, feature size, etc.)At the end the problem was timing: We didn't know how to write compilers that could figure out micro-scheduling in advance so software couldn't take advantage of the Itanium, and when AMD64 came out and added a bunch of registers and did all that nasty instruction reordering and speculative execution in realtime on-chip everybody said ""just use that."" Nowadays compiler writers have a much keener understanding of static analysis and almost certainly could take advantage of the chip. And vulnerabilities like Spectre and Meltdown would never have happened be"	dreamcompiler	9.5632305	-5.5316467	comment	4.0	15.0	1622861347	-7.730074
27413115	>This was thankfully a lot less stri	>This was thankfully a lot less strict than on iOS devices, which strictly forbid mapping memory as executable whatsoever and made iOS untenable for us to officially support. Apple even provides documentation for helping developers port JITs to macOS on ARM. Skyler used a method described in the documentation that would change the mapped memory between Writeable when emitting code to Executable when executing code. Since Dolphin wasn't designed for this, there were a few hiccups along the way, but eventually everything was massaged into working with the new restrictions.How expensive is changing memory mapping modes? Does it involve a system call? Does it need to happen often?	DonHopkins	9.861764	-5.254877	comment	4.0	21.0	1622987260	-7.606446
27427673	> on the good side of things, gettin	"> on the good side of things, getting an Intel CPU to enter the red state is not easy to accomplish. In fact, it should never happen unless there are vulnerabilities in the Intel Management Engine (ME), an almost undocumented subsystem present in all Intel CPUs since 2008 that Intel says is required to provide full performance.""unless there are vulnerabilities or backdoors in the Intel Management Engine (ME)"".There, fixed it for you."	TacticalCoder	9.464636	-5.2556953	comment	4.0	48.0	1623103249	7.8079467
27428183	The IME itself is a backdoor in the 	The IME itself is a backdoor in the first place. I remember a story a few years past when a full line of CPU's went out with IME having no password set at all, allowing a field day for hackers even when your computer was shut down but still receiving power on standby. Intel had to recall all of them but only after the news blew in media in the first place. Otherwise I'd suspect Intel would've just let it stay, cause money talks.	unnouinceput	9.481105	-5.213272	comment	4.0	36.0	1623105536	7.7621126
27439073	Intel: AMD Threat Is Finished	Intel: AMD Threat Is Finished	ijidak	9.28297	-5.2196474	story	4.0	2.0	1623177325	7.8740144
27464657	Chipmaker SiFive Is Said to Draw Int	Chipmaker SiFive Is Said to Draw Intel Takeover Interest	kaboro	9.289839	-5.4115353	story	4.0	19.0	1623353596	-10.583543
27468532	Is RISC-V at Risk? Intel Might Purch	Is RISC-V at Risk? Intel Might Purchase SiFive for $2B	tux1968	9.373706	-5.6408997	story	4.0	11.0	1623377066	-10.575007
37585486	"""They"" will just spray the machines "	"""They"" will just spray the machines with liquid nitrogen,  pull them out of the rack,  put the DRAM in a thermos w/ LN2 and read the data at their leisure.https://ieeexplore.ieee.org/document/8388826"	PaulHoule	9.710716	-5.32562	comment	4.0	14.0	1695223922	7.972428
37589043	>the compute horsepower to process e	>the compute horsepower to process exaflops of dataLol. How many bytes in a flop again? Or maybe FLOP = FuckLoad Of Petabytes.	plra	9.841167	-5.199088	comment	4.0	12.0	1695238918	7.949476
37612933	I don't know why Linus is trying to 	I don't know why Linus is trying to write a new OS, we already have OSes. It's not like this Linux thing is going to go anywhere.	irrational	9.465427	-5.778124	comment	4.0	14.0	1695394790	-8.134191
37622606	Stopped reading at first point; why 	Stopped reading at first point; why would I want my versioning system coupled to a bunch of random services?Doing one thing and one thing only is a feature, not a bug.	mgaunard	8.931156	-6.3890285	comment	4.0	32.0	1695471367	-11.632575
37655637	> This is not entirely true in gener	> This is not entirely true in general sense. Yes, a typical ARM CPU is more energy efficient indeed, but theoretically nothing prevents x86 to be nearly as efficient.The very complex instruction set does. You can easily throw multiple decoders at Arm code, but x86 scales badly due to the variable length. Current cores need predecoders to find instruction boundaries which is just not needed with fixed width instructions and even then can only decode simpler instructions with the higher numbered decoders.	Vogtinator	9.665584	-5.469484	comment	4.0	15.0	1695712808	-7.681999
37663431	>The main reason people update their	>The main reason people update their phone OS is for new emojiI can't avoid the anecdata game, so: what generation are you?  I don't know a single person who would update their phone for a new emoji.	itsoktocry	9.81247	-6.259674	comment	4.0	14.0	1695751701	-13.947012
37667981	VLSI Physical Design	VLSI Physical Design	stefanpie	9.452592	-5.2806563	story	4.0	55.0	1695774553	7.503514
37716805	Is anyone else finding that AWS is o	Is anyone else finding that AWS is overcharging for the Zen 4 CPUS? I get better price performance for m6a vs m6i but the M7 series is too close to call for my workload.This is really dampening my enthusiasm for future AMD hardware. I wonder if AMD is aware of the damage Amazon is doing to them right now.	hinkley	9.26723	-5.2015114	comment	4.0	13.0	1696090171	7.828337
37717022	Author here for all your 8086 questi	Author here for all your 8086 questions :-)By the way, HN's title editing makes the title appear a bit strange. Of course flip-flops are implemented in the processor. The article describes how they are implemented.	kens	9.620843	-5.4062247	comment	4.0	17.0	1696091338	-7.4965806
37717840	Some observations:1. Interesting, ho	Some observations:1. Interesting, how fundamentally analog element such as capacitor, find its way into dynamic logic circuits.2. The article states that asynchronous computers are not made anymore. Is not google TPU asynchronous?	SomeoneFromCA	9.334046	-5.229905	comment	4.0	24.0	1696095716	8.2007065
12570854	The performance didn't suck that muc	"The performance didn't suck that much, not for the RISC part.
The problem was that too many IA-64 application relied on the x86/xCPU emulation which was well yeah very shitty."	dogma1138	9.463429	-5.7101245	comment	4.0	22.0	1474723956	-10.532444
12577024	Proprietary versus open instruction 	Proprietary versus open instruction sets [pdf]	jsnell	9.616594	-5.6482973	story	4.0	38.0	1474832684	-10.228463
12578584	It's a little odd saying that Micros	It's a little odd saying that Microsoft is betting its future on reprogramable chips.. From reading the article they are just simply now using FPGAs where previously they (along with many other companies) were not. It would be like saying Amazon is betting its future on UPS trucks.. What you put in the FPGA matters.. The reprogramability is really just to allow them to implement algorithms that they use heavily that currently are not executed efficiently using current Intel chips. Basically what this is showing us is that the pace of development in software and algorithms that power the cloud is pretty fast so they need the ability to improve performance on data and computation flows that currently (and maybe in the future) will not be well supported on current silicon. FPGAs are not very 	xt00	9.161938	-5.274059	comment	4.0	19.0	1474853392	-7.9037704
12605525	Can you elaborate on how the x86_64 	Can you elaborate on how the x86_64 world has gotten more locked down?	witty_username	9.707422	-5.301005	comment	4.0	12.0	1475159725	-7.816836
12616286	I bought a Zybo last year and I acti	I bought a Zybo last year and I activated the software; but it never let me build any of the demo projects. I haven't been able to resolve this or get support, it's been collecting dust. I don't know if I ever want to buy an FPGA dev board without an open source toolchain ever again.On the other hand, I have a pile of nice iCE40 FPGAs and they are awesome. Thanks to Clifford Wolf, I can go from verilog to bitcode with a quality, free toolchain. I don't need to worry about which machine it's locked to, what random bugs will manifest in the random version of Eclipse required to run it, etc.	microcolonel	9.084184	-5.3832507	comment	4.0	18.0	1475288484	-11.244305
12645868	This is fascinating:The Epiphany-V w	"This is fascinating:The Epiphany-V was designed using a completely automated flow to translate Verilog RTL source code to a
tapeout ready GDS, demonstrating the feasibility of a 16nm “silicon compiler”. The amount of open source
code in the chip implementation flow should be close to 100% but we were forbidden by our EDA vendor
to release the code. All non-proprietary RTL code was developed and released continuously throughout the
project as part of the “OH!” open source hardware library.[20] The Epiphany-V likely represents the first
example of a commercial project using a transparent development model pre-tapeout."	Coffeewine	9.26494	-5.4257164	comment	4.0	66.0	1475688510	8.567469
12646634	RTL = Register Transfer Logic, and E	RTL = Register Transfer Logic, and EDA = Electronic Design Automation, for anyone else who was curious. I don't know what GDS stands for, but context indicates it's the actual physical description that's used to make the part.But I'm confused about what part of this is open and not open. Do they mean that they imported their Verilog into a proprietary tool, which generates the design? That doesn't make it open source in practice.	LeifCarrotson	9.44228	-5.1956453	comment	4.0	30.0	1475693390	8.818986
12655484	Is Google using aws to host this.If 	"Is Google using aws to host this.If you look at:
https://noto-website.storage.googleapis.com/You will see the following:
<?xml version='1.0' encoding='UTF-8'?>
<ListBucketResult xmlns='http://doc.s3.amazonaws.com/2006-03-01'>
    <Name>noto-website</Name>
    <Prefix></Prefix>
    <Marker></Marker>
    <NextMarker>emoji/emoji_u1f468_200d_1f468_200d_1f466_200d_1f466.png</NextMarker>
    <IsTruncated>true</IsTruncated>
    <Contents>
        <Key>css/emoji-zsye-color.css</Key>
        <Generation>1464738619772000</Generation>
        <MetaGeneration>1</MetaGeneration>
        <LastModified>2016-05-31T23:50:19.729Z</LastModified>
        <ETag>""e3aaae52d88ced070044f59d1efe2009""</ETag>
        <Size>152</Size>
        <"	samfisher83	9.810723	-6.2600365	comment	4.0	14.0	1475783388	12.900749
12709528	Intel is also adding FPGAs[1] right 	Intel is also adding FPGAs[1] right next to their CPUs, which can possibly become a next big thing in HPC.[1] http://www.extremetech.com/extreme/184828-intel-unveils-new-...	dsabanin	9.210747	-5.2356553	comment	4.0	48.0	1476465119	8.022435
12715531	Fedora/RISC-V reaches initial goal	Fedora/RISC-V reaches initial goal	rwmj	9.379307	-5.7117257	story	4.0	154.0	1476563233	-10.572718
12739030	The surprisingly complex reason you 	The surprisingly complex reason you never see emoji URLs	wamatt	9.793236	-6.2649574	story	4.0	19.0	1476827291	-13.953463
12775478	I think the single biggest hurdle to	I think the single biggest hurdle to FPGA adoption is that FPGA development is horrible. The IDEs suck, everything is license-encumbered and full of DRM, and debugging is a nightmare.The best thing I've found so far is Clash. It translates Haskell code to (System)Verilog or VHDL. It works remarkably well, and is way easier to write and test than writing VHDL or Verilog directly. You can compile it to a plain old program for testing and debugging, which means you can use things like QuickCheck for aggressive testing. If you're really serious, you can use something like LiquidHaskell for really aggressive formal verification. There's also Lambda-CCC, which looks a bit more theoretically rigorous, but I couldn't get that working when I tried it.The key here is that non-strict lambda calculus 	wyager	9.1408	-5.4699883	comment	4.0	13.0	1477257575	8.501039
12776189	Perhaps we'll finally start being ab	Perhaps we'll finally start being able to get mobile devices with ECC memory, now that its useful for preventing the nominal owners of devices from having actual control or visibility into their operation.	nullc	9.490057	-5.524919	comment	4.0	24.0	1477270764	8.26319
12776661	Is there any way to statically analy	Is there any way to statically analyze an app for code that might be attempting to execute a rowhammer attack? I'd imagine that rowhammer requires a tight loop doing nothing but writing to the same value in memory repeatedly, or something similarly recognizable. Such a tool could be used to at least keep any malicious apps out of the play store. It would probably be fine if it sometimes gave false positives on innocuous code that a human (at Google) could override after inspecting the suspect code.	rcthompson	9.626216	-5.673698	comment	4.0	25.0	1477280185	-13.894244
12776835	If you already have root, then you d	If you already have root, then you don't need to execute a rowhammer attack to gain root. I'm asking if an Android app with no root access on an un-rooted phone has a way to execute code that wasn't included with the apk, in order to hide the code that executes the rowhammer attack. If not, then a static analyzer that detects rowhammer attacks in the code of an apk would be sufficient.	rcthompson	9.625627	-5.6652074	comment	4.0	15.0	1477285427	-13.890893
12795432	I don't know how to reconcile Linus'	I don't know how to reconcile Linus's track record is of indisputable brilliance and success (I use Linux and Git on a daily basis and am eternally grateful for both), with the fact that I would absolutely DESPISE working with a peer with the kinds of attitudes and opinions on coding that Linus has.I think the problem I have is that a lot of people use Linus's examples and stories as justification for their own suboptimal interpersonal skills, overly-clever code that only they understand, but without the same level of brilliance or track record to justify it.Ultimately I think Linus's contributions to Software are pantheon, but he should not be looked to for imitation or lessons. His lessons for success are detrimental to the vast majority of software engineers.	deanCommie	9.306197	-5.8746796	comment	4.0	21.0	1477479011	4.1008883
12808015	You must have missed the fact that y	You must have missed the fact that you can type emojis on the touch bar	kylec	9.81161	-6.2589726	comment	4.0	38.0	1477593410	-13.95198
12846633	The article mentions that alpha was 	The article mentions that alpha was weak on bit-twiddling, which is something that almost certainly got fixed by introduction of BWX instructions on 21164.	dfox	9.601073	-5.384094	comment	4.0	13.0	1478014359	-8.027258
12865395	Is it impossible to do hardware deve	Is it impossible to do hardware development in C and automatically convert C to Verilog? https://en.wikipedia.org/wiki/C_to_HDLWhat does one lose if they do this? Why isn't this conversion more common?	noescape	9.124131	-5.494809	comment	4.0	19.0	1478190451	8.571313
12959808	I have the Skullcanyon NUC, and this	I have the Skullcanyon NUC, and this is not comparable.I've been waiting for someone to offer me ECC in a small form factor. This is the first time I've ever seen it.	daxorid	9.493043	-5.1867027	comment	4.0	37.0	1479229026	8.089526
12982309	ORCA – An implementation of RISC-V i	ORCA – An implementation of RISC-V intended to target FPGAs	vanjoe	9.3931875	-5.657088	story	4.0	77.0	1479421480	-10.612205
13009512	How would this actually work? Wouldn	How would this actually work? Wouldn't it be painfully slow? Even ARM emulation on x86 seems to be pushing it, and I feel like the reverse should be 10x worse at best...	wfunction	9.7027855	-5.310609	comment	4.0	27.0	1479764726	-7.7012706
13012511	I'd say it's a feature, not a bug. T	I'd say it's a feature, not a bug. There is no place for colorful smileys in my text files.	rbanffy	9.819505	-6.243012	comment	4.0	12.0	1479802236	12.778169
13015580	So you got your CS degree, worked fo	So you got your CS degree, worked for years in IT, passed tough interviews, joined FB, and now you're proud of animating those annoying emojis.	ar15saveslives	9.782869	-6.261234	comment	4.0	18.0	1479835028	-13.956875
13018660	> and should accept all UNICODE char	"> and should accept all UNICODE characters, too, including emojiHell no. This WILL lead to disaster, especially if people store their passwords in managers that may or may not mess up Unicode. UTF-8, for example, allows to encode the character ""ä"" as \xc3\xa4 OR \x61\xcc\x88. They look visually identical, yet fail any string comparison.Not to mention the support calls ""I'm in $random_foreign_country and don't have $random_char on my keyboard, cannot login""... good luck trying to match the kitty emoticon on your Android phone to the random font on a website to whatever input system iPhone uses. Or when they're used a German Windows keyboard and suddenly have to use a German Mac - basic stuff like the tilde symbol ~, pipe symbol | or the (square) brackets {[]} are not marked out on the keybo"	mschuster91	9.917036	-6.2217283	comment	4.0	13.0	1479858014	-13.948227
13033779	For a millisecond I thought Intel we	For a millisecond I thought Intel were doing something new and interesting. Neuromorphic or neuromeristive architectures maybe.Nope it's just some rebranded x86 cores.	grabcocque	9.437285	-5.226917	comment	4.0	22.0	1480035634	7.808641
13045558	A Summary of the 80486 Opcodes and I	A Summary of the 80486 Opcodes and Instructions (1999)	Tomte	9.82056	-5.6417875	story	4.0	46.0	1480190390	-7.481774
13051713	I never felt more like stabbing myse	"I never felt more like stabbing myself than when trying to cipher out exactly which immediate values are possible on ARM, and which are not.  X86 I happen to enjoy.  It is not ""the worst ISA"" by any means.  It has wonderful code density, which turns out the be very important.  There's a reason that x86 won and continues to win."	honkhonkpants	9.652954	-5.5006905	comment	4.0	25.0	1480282891	-7.6783977
13057843	The ridiculous shit that needs to be	The ridiculous shit that needs to be done just to rid of some blob.RISC-V can't take the market over fast enough.	snvzz	9.37467	-5.680487	comment	4.0	28.0	1480362511	-10.599738
13058126	The phrasing there is confusing. Doe	The phrasing there is confusing. Does the NIC break because the ME is neutralized? Then rebooting again with the ME neutralized will break the NIC again.Why would the NIC only break once after the ME is neutralized? The system is started from a fully powered-off state after the ME firmware is updated. Maybe the NIC has some sort of non-volatile state that gets updated when the ME fails to initialize, and then the NIC starts working again. That's the most complex explanation so I thought it unlikely, but I'm happy to hear more from someone who has actually neutralized their ME.	sounds	9.527192	-5.225422	comment	4.0	14.0	1480364973	7.832467
13066868	For someone who has no idea what RIS	For someone who has no idea what RISC-V is but loves making things with Arduino, what new things could I do with this?	andkon	9.385871	-5.6700587	comment	4.0	39.0	1480459717	-10.5659
13067380	I'm worried this leads to the zoo of	I'm worried this leads to the zoo of random hardware that we see on ARM, which makes supporting Linux distros on ARM such a PITA.It would be better if the basic hardware — serial ports and such — was in a standard location for all RISC-V machines, and all the rest of the hardware was discoverable at runtime (like PCs, mostly).	rwmj	9.404457	-5.632092	comment	4.0	19.0	1480464839	-10.548672
13072995	Very interesting. I'd still like to 	Very interesting. I'd still like to see the JVM pick up the FPGA as a possible compile target, that way people could run apps that seamlessly used the FPGA where appropriate. I have mentioned this to Intel, who are promoting this technology (and also have a team that contributes to the JVM), but so far no one is stating publicly that they are working on such a thing.	brendangregg	9.103604	-5.362925	comment	4.0	20.0	1480528929	8.304859
13102143	You've been unable to find that info	"You've been unable to find that information because no such ""functionality"" exists.  Microcode just patches bugs or configuration details of the CPU; it doesn't ""phone home""."	temptel	9.5870905	-5.401353	comment	4.0	26.0	1480890836	7.704818
13102480	Ubuntu needs fonts with more emoji t	Ubuntu needs fonts with more emoji to display this.	Animats	9.815641	-6.266394	comment	4.0	15.0	1480896030	-13.963129
13126416	Is the situation with x86 bad to beg	Is the situation with x86 bad to begin with?Granted, I didn't read the full documentation provided online for my hardware before I powered it on. Honestly, I didn't read any documentation and it just works, kind of.	static_noise	9.681635	-5.340506	comment	4.0	21.0	1481146365	-7.7878337
13127951	I seem to remember Intel first imple	I seem to remember Intel first implemented one of the SIMD instructions as two sequential operations operating on half the size of the full SIMD register.  Then later refinement of the chip (maybe after transistor size shrunk) they then could do the entire SIMD operation at once in parallel instead of sequentially.  But this was all hided under the ISA, so you wouldn't know unless checking the clock cycles.	em3rgent0rdr	9.697568	-5.730964	comment	4.0	14.0	1481163913	8.169281
13203238	You're just talking about the design	You're just talking about the design phase of a new ISA extension. I think the parent was under the impression that there were instructions in released processors that were undocumented.	derefr	9.597594	-5.50533	comment	4.0	13.0	1482015698	-7.628855
13208791	I'm lucky enough to say this was my 	I'm lucky enough to say this was my day job in the 1980's. The sad thing is that today the TTL catalog is much thinner, so it is actually harder to do today than it was then. I'm happy to see RISC-V getting so much traction with serious builders. It seems like the most viable path to hardware freedom right now.	dbcurtis	9.365463	-5.6324615	comment	4.0	25.0	1482110254	-10.552871
13209229	CI does nothing to prevent bad devel	CI does nothing to prevent bad developers checking in bad code. You just end up with equally poor unit tests.	flukus	9.28762	-6.39312	comment	4.0	14.0	1482116458	5.494124
13249337	I call bullshit.  This relies on spe	I call bullshit.  This relies on special access to SGX which Intel controls.  This means you must trust Intel and anyone who may hack Intel and therefore it is not a secure decentralized solution.SGX requires contacting Intel's servers to get an attestation key.  There is a good reason Intel requires this.  That reason is that SGX doesn't otherwise provide the DRM it was designed to for.  With out Intel's attestation keys anyone could emulate SGX in software thus exposing the code and data in the SGX enclave.http://www.theregister.co.uk/2016/02/01/sgx_secure_until_you...	jcoffland	9.529042	-5.2305336	comment	4.0	17.0	1482577303	-5.790285
13289534	I've been meaning to solidify my mem	I've been meaning to solidify my memory of common x86 instructions for a while, but I never got around to it because I get distracted by the bazillion other more advanced instructions. This guide is nice because it covers a few common instructions in a complete-enough manner but not excruciating details like the Intel manual.	vortico	9.775981	-5.7959576	comment	4.0	15.0	1483159432	-7.504806
13299821	> Xeon E3-1505M machineExcept they d	> Xeon E3-1505M machineExcept they don't ship with ECC memory.> 32GB, DDR4-2133MHz SDRAM, 2 DIMMS, Non-ECC [0]So what's the point of having a Xeon? The Core i7 options offered for the laptop support all the same processor features [1], except ECC memory [2], which Dell isn't even shipping.[0] http://www.dell.com/us/business/p/precision-m5510-workstatio...[1] http://ark.intel.com/products/88970/Intel-Core-i7-6820HQ-Pro...[2] http://ark.intel.com/products/89608/Intel-Xeon-Processor-E3-...Edit: I think it's a legitimate gripe, Dell is selling a Xeon but there's zero benefit over buying an i7 equipped model. But thanks for all the downvotes!	kogepathic	9.462483	-5.184156	comment	4.0	19.0	1483345825	8.044611
13309944	> Defining products by the spreadshe	> Defining products by the spreadsheet: A big percentage of complaints over the new MacBook Pro devices is that they ignore the needs of the “power” user. The problem? This group is fairly small and have needs living well towards the end of the bell curve.The problem with ignoring this niche is because these users are either developers or big influencers. They help with the ongoing success of the App Store as well as with free marketing.This is also a big reason why Apple needs to release either an iMac without a screen or a more affordable Mac Pro. The Mac Mini has never really cut it for anything but personal use.For the 1st time in years, I'm thinking of switching back to Windows since Docker makes development easier now. I'll still get a cheap Mac for personal stuff like Photos, but it	chaostheory	9.613114	-6.3565316	comment	4.0	20.0	1483458968	-7.9880576
13313472	Best of times, worst of times. I ask	"Best of times, worst of times. I asked a friend that if they could ""fix"" or ""improve"" any feature of a modern microprocessor what would it be, and they struggled to come up with anything. It it interesting though that a ""nominal"" desktop computer these days consists of a nominally sequential processing unit (albeit with multiple cores) and a large parallel processing unit in the GPU with lighter weight cores.The ""painful"" part isn't the computation any more its getting multi-gigabyte data sets into and out of DRAM or moving them around in DRAM. You can finesse some of that by adding more and more cache on chip but you end up with the 'buffer bloat' problem where you're caches are fighting each other. If you pick the 16 bytes per computation figure that is sometime bandied about then your 4"	ChuckMcM	9.751196	-5.385755	comment	4.0	14.0	1483480356	8.054763
13326598	Love your site. 6502 was great, very	Love your site. 6502 was great, very intuitive, very fast.I learned it at 14 years old after finding out basic wasn't very good for coding graphics.  Back then the speed improvement for 6502 was always amazing because there were not high quality C compilers (actually no compilers)Imagine learning a new language, platform, with no Google or StackOverflow.  It didn't seem like a big deal at the time but wow that must have been inefficient.My bible for 6502 was this book that I think every cmdr programmer had:http://www.ubbcentral.com/store/item/VIC-20-Programmers-Refe...Of course there was no assembler, it was just typing in raw instructions and addresses.  Anyone else used to leave NOP gaps to make adding instructions easier?	WhitneyLand	9.629146	-5.453297	comment	4.0	14.0	1483619518	-7.4381437
13327339	After completing my CS master's degr	After completing my CS master's degree, I was hired by my advisor as a full-time software developer.  My job was to coordinate the efforts of the students contributing to his main project, keeping everything moving forward.For that job, I found that keeping things asynch was crucial.  But so was keeping things lock-free.My basic premise was to never assume that any grad student would get any particular task done.  So I tried to create an environment where any time they had a useful contribution, it could be merged into the main code base.  But to never put one student at the mercy of another.I think that worked pretty well.	DoofusOfDeath	8.878356	-6.328622	comment	4.0	29.0	1483626848	1.810141
13376390	HPE Powers Up The Machine Architectu	HPE Powers Up The Machine Architecture with ARM	jcbeard	9.583793	-5.2384176	story	4.0	62.0	1484160569	-7.798998
13381763	"I find the ""open the ISA and they wi"	"I find the ""open the ISA and they will come"" attitude very odd.The ISA is the least of your problems. In fact the cpu itself is not really an issue at this point. If you look up what linus and others have been complaining about it has almost never been about the cpu itself (which are all pretty open designs these days).What we need right now is open boot, open firmware and most of all, an open gpu that can compete with the state of the art."	bostand	9.512033	-5.383901	comment	4.0	31.0	1484225098	-7.722438
13381955	For the uninitiated, the bringup of 	For the uninitiated, the bringup of a new processor is very complex - from compiler to libraries to kernel, from emulation to real hardware.  The process described here is very similar to the one I was able to observe at SiCortex, though that chip was based on an existing one and so there was no FPGA stage.  I'll bet they even use some of the same tools, such as the emulator.  Kudos to them for not rushing ahead before their foundation is ready, and I look forward to seeing how this all works out.	notacoward	9.138293	-5.287214	comment	4.0	49.0	1484227284	8.242052
13382673	This is drastically over-simplified,	This is drastically over-simplified, but in short, the Mill is a sort of middle-ground between superscalar implementations (x86, ARM) and VLIW (Itanium, DSPs).Superscalars leave a lot of the optimization process to complexity in the hardware. This is seen in stuff like the out-of-order scheduling and large cache hierarchies. In one of the Mill talks, it's guesstimated that almost 90% of the circuitry is dedicated to simply moving data around, as opposed to actually doing any work on that data.VLIWs take the opposite extreme, leaving the complexity of optimization to the compiler. History has shown so far though, that many computing problems are (again oversimplified) too conditionals-heavy to really benefit from VLIW, and end up running much more slowly.So the Mill is a bet that they can g	peller	9.617787	-5.661566	comment	4.0	17.0	1484233225	8.113873
13382684	Itanium's major sticking point was r	Itanium's major sticking point was relying on compiler technology that never materialized. The Mill architecture seems to respect the current level of compiler tech a lot more.	sp332	9.55671	-5.6035805	comment	4.0	17.0	1484233263	-7.7024426
13427184	RISC-V port accepted for inclusion i	RISC-V port accepted for inclusion in GCC	edelsohn	9.433412	-5.726139	story	4.0	150.0	1484754719	-10.600346
13429310	This is a fallacy that I see repeate	This is a fallacy that I see repeated about the quality of open products all the time.It's true, Intel spends more money on R&D than RISC-V is likely to ever get. But that means next to nothing. When a huge, monolithic, management-driven company spends billions of dollars on something, a lot of those billions of dollars aren't being used very effectively.Consider Linux versus Windows. My suspicion is that Microsoft has spent more money on Windows dev than has ever been spent on Linux dev. Does that mean Windows is better than Linux? No; in fact, many people who have to use both would probably say the opposite. Why is Linux the OS of choice for many production applications in tech-savvy industries? It just works better and easier than the high-budget closed competition.That's not to say tha	wyager	9.393481	-5.635879	comment	4.0	18.0	1484766567	-10.595499
13517076	No, because VHDL is used for configu	No, because VHDL is used for configuring FPGAs. An ASIC is a different beast entirely.	emddudley	9.084681	-5.358955	comment	4.0	12.0	1485728082	8.304383
13517446	I learned VHDL a few months ago. Sin	I learned VHDL a few months ago. Since then I've build a few projects with it (some PCIe and ethernet stuff). I was very excited to learn a HDL because FPGAs seem like extremely powerful devices.However, I now know why FPGAs aren't as popular as they could be: the tools are horrible. There is no way FPGAs will become popular among software developers unless the tooling improves dramatically. You can really tell that it was all build by hardware engineers who know their electronics very well, but not good software design.	AlexanderDhoore	9.091864	-5.4384556	comment	4.0	27.0	1485732153	8.561367
13519136	I went to CMU for a BS in EE, I used	I went to CMU for a BS in EE, I used a lot of verilog, and also a bit of Cadence for layout in one class. But I've worked as a software engineer since then.I totally agree that HDL tools are astonishingly crap. The market is just so much more specialized, expensive, locked down and closed.Imagine that you had to use the Intel compiler to get source code compiled for intel processors. You had to use their special headers, you practically had to use their huge 8GB Intel IDE with a million lists and buttons, you had to choose what features were on your intel processor (VT-X? SSE4?). Imagine AMD is the same, but separate. This is all closed source stuff of course. And you have to use it to run on any smartphone/laptop/desktop/server class processor.Imagine that there's no GCC, no CLANG, no GDB	ploxiln	9.193799	-5.3896365	comment	4.0	14.0	1485758769	8.531058
13537232	All of my non-production machines ha	All of my non-production machines have emojis in PS1 somewhere. It sounds ridiculous, but I know that if I see a cheeseburger or a burrito I'm not about to completely mess everything up. Silly terminal = silly data that I can obliterate.	Perihelion	9.853512	-6.252535	comment	4.0	12.0	1485911748	-13.9508295
13539052	That only matters if you are using 3	That only matters if you are using 32-bit software. Deleting the 32-bit software is not somehow a benefit with relation to that goal. You are saying that it is better to run all 64-bit software. I am arguing that there is essentially no benefit to a device that is incapable of running 32-bit software when it clearly still has the hardware.	saurik	9.867576	-5.2885447	comment	4.0	16.0	1485934500	-7.8638372
13545579	As long as it's still x86/AMD64 we'r	As long as it's still x86/AMD64 we're good. I really don't want to see PPC/Intel fragmentation again.	John23832	9.557263	-5.2240334	comment	4.0	27.0	1485985420	7.79254
13553293	WHOA!MSP430 support is HUGE. In case	WHOA!MSP430 support is HUGE. In case you don't know, that's a well-known very low-power microcontroller.edit: this might be the only current platform that's <32 bits. I know there was some work on supporting the 8-bit AVR architecture, but MSP430 gets rust a lot closer to super-low-power applications.	thenewwazoo	9.845051	-5.2288294	comment	4.0	30.0	1486061546	-3.176719
13588153	Volkswagen detects when your tests a	Volkswagen detects when your tests are being run in a CI server, makes them pass	jupp0r	9.854904	-6.4136524	story	4.0	91.0	1486458736	5.8342333
13606682	Other tech folk have always talked a	Other tech folk have always talked about 32 bit support as a necessary evil since smaller types mean less memory.The complexity of managing a secondary 32 bit environment has been worse than the memory usage of 64 bit apps for a very, very long time.	nailer	9.912076	-5.2255054	comment	4.0	24.0	1486646424	-7.890509
13608752	Reverse engineering the Intel 8008 A	Reverse engineering the Intel 8008 ALU	reportingsjr	9.611498	-5.345962	story	4.0	93.0	1486661090	-7.212505
27525518	Nit: if you're actually running mult	Nit: if you're actually running multiple CPUs to mitigate data corruption, you need a third CPU to break ties.	tylerhou	9.733996	-5.439251	comment	4.0	12.0	1623825212	8.107979
27529249	Every age, this age not excepted, ha	"Every age, this age not excepted, has programmers who somehow find the energy to go out of their way to advocate for writing non-portable code.""Who cares if it doesn't run on 80386?""""Who cares if it doesn't run on PowerPC?""""Who cares if it doesn't run on 64 bit?""""Who cares if it doesn't run on ARM?""And now: ""Who cares if it doesn't run on 32 bit?""They write code that makes assumptions about endianness, about sizes of pointers, about floating point formats, and then come up with rationalizations about why it shouldn't matter if their code only compiles and runs on one architecture.If we had taken all of them at their word, every architectural upgrade would require a rewriting of a majority of software instead of a recompile, and the open source world would be vastly different, and not in a "	johnklos	9.836249	-5.2902117	comment	4.0	14.0	1623855530	-7.896494
27534643	As a recent observer of a discussion	As a recent observer of a discussion wherein the dramatic differences between single, double, and triple-dot sentence terminators were argued, I think concerns about emoji facial expressions might be valid, but resolving them would still leave us in a world of crisis and division..	quesera	9.804331	-6.2689424	comment	4.0	16.0	1623885930	-13.927235
27534605	It is so stupid that Emojis render d	It is so stupid that Emojis render differently on different platforms.  In particular there are subtle differences among the facial expression emojis that make them pretty useless if you’re not sure the recipient is on the same platform that you’re choosing one on.	avalys	9.809765	-6.2665815	comment	4.0	26.0	1623885602	-13.969527
27541307	maybe we can have some keyboard plug	"maybe we can have some keyboard plugin/""mode"" that merges letters to form symbols in special way?Korean windows have a ""special-emoji"" keyboard that can be invoked by: 1. type a charactor 2. press 'hanja' key 3. (wild special character selection menu appears)example: § (from 'ㅁ') / ㈜ (from 'ㅁ') / ㎖ (from 'ㄹ')"	high_density	9.902882	-6.137319	comment	4.0	13.0	1623946637	-13.957264
27555940	Spreadsheets and FPGAs are two place	"Spreadsheets and FPGAs are two places where there's no focus on a ""program counter"".Metamine was amazing... he had figured out how to safely mix procedural and reactive code in one place without going insane in the process:https://web.archive.org/web/20201101065701/https://github.co...I watched a set of videos on YouTube that were amazing, but now I can't find any links to them. 8(
I would really like to know where it went.[Edit: I found a fork of the repository at https://github.com/caminadab/metamineOf course I forked that fork to have a copy for safety]"	mikewarot	9.134446	-5.4085007	comment	4.0	22.0	1624057236	-7.3755
27586581	I expected RISC to overtake CISC muc	I expected RISC to overtake CISC much sooner than it did.I expected IPv6 to be adopted quickly.I expected 6GB to be more storage than I could ever fill.I expected Windows to be quickly dismissed and Unix to become the standard.I expected to have a screen built into my glasses by now.	mcv	9.429368	-5.6937675	comment	4.0	27.0	1624322601	-10.54394
27590373	The only way we can actually stop ti	The only way we can actually stop timing-based side channel attacks is by having deterministic (in time) execution. The only way that can happen is by running at the slowest hypothetical rate for every individual operation. So, no cache, dedicated CPU timeslices, dedicated RAM bandwidth.Luckily, we only need this for untrusted code. What really peaves me is that trusted code is now having to run slower as well.	snovv_crash	9.83459	-5.6164756	comment	4.0	23.0	1624361600	-5.6669226
27592941	Intel had some nice RISC processors,	Intel had some nice RISC processors, the i860 (used in HPC accelerators and the NeXTdimension color graphics card in the early '90s), i960 (used in many laser printers) and the XScale (next generation StrongARM, technology acquired from DEC, back then the fastest ARM CPU).Unfortunately, they killed them all...	johndoe0815	9.4753	-5.2239504	comment	4.0	17.0	1624375880	7.62772
27593780	I'm not even why we're supposed to c	I'm not even why we're supposed to care about a newly launched core beating one that was released in 2017. If that's the bar they've set, I'm not exactly wowed.	meepmorp	9.504016	-5.1920867	comment	4.0	16.0	1624379491	7.8410363
27617882	The Apple ABI was burnt into physica	The Apple ABI was burnt into physical hardware while ARM was still finalizing some of the 64-bit details, which is why there are minor differences.X18 is very specifically called out as “for the platform: do not use”, though, so things like GNU MP [1] moaning that Apple hasn’t specified how they use x18, and them using it anyway are just ridiculous.‘While we added support for Apple's new Arm based computers, our support has a problem. The problem is that Apple reserves CPU register x18, but GMP's mpn/arm64 assembly code uses that register. While GMP runs fine in our tests, we expect things to go awry in some execution situation. (Apple has not been kind enough to specify how they use x18. Therefore, we don't know what the consequences of using x18 might be.)’[1] https://gmplib.org/	spacedcowboy	9.694896	-5.275007	comment	4.0	28.0	1624544417	-7.6814656
27632242	This is why ousting Linus puts the l	This is why ousting Linus puts the long-term health of the kernel at risk. It’s very difficult and expensive, at a personal and professional level, to tell colleagues to “fuck off” if they are submitting low quality garbage for reasons related to their salary. Linux was Linus’s baby, he had nearly absolute control, and he didn’t care too much about politeness - this was a magic recipe for him to be able to stave off garbage patch requests from motivated corporate peons.Now, if the people approving patches are just normal employees who can get fired if a kernel sponsor complains enough, it’s going to be much harder for them to successfully deflect all the bullshit without ever caving in.	wyager	9.468166	-5.747894	comment	4.0	40.0	1624636034	-6.126888
27663113	I don’t know how you would do this, 	I don’t know how you would do this, other than setting core affinity, but I’m surprised I can’t limit processing power or RAM per process on any modern OS.Both for setting restrictions per another comment here, but also for testing purposes.Like, I’d love to be able to run an executable with equivalent processing power to that of a specific CPU generation.	andrewmcwatters	9.82197	-5.4956493	comment	4.0	13.0	1624893877	8.163021
27666376	I've wanted to use TSX for years... 	I've wanted to use TSX for years... it's great as a way to get atomicity for non-primitive types in a lock-free way. Could be super useful in trading.The issue is it's been YEARS now that intel claims it's ready then turns it off in chips shortly thereafter. It's basically vaporware at this point.	alfalfasprout	9.527789	-5.3692007	comment	4.0	17.0	1624907571	8.122186
27673160	Are there finally fat binaries? Once	Are there finally fat binaries? Once again you would need to build and deploy separately for ARM. Put some logic into your installer or your software, which version to install.macOS, iOS and Android have built in solutions for years, to just publish Packages with multiple architectures and the system executes the appropriate binary.	andix	9.83646	-5.241772	comment	4.0	24.0	1624954014	-7.8534365
27674238	Why RISC-V uses LR/SC instead of CAS	Why RISC-V uses LR/SC instead of CAS for atomic memory operations?	hasheddan	9.418725	-5.705334	story	4.0	19.0	1624965100	-10.535101
27691091	Is that a native build for ARM that'	Is that a native build for ARM that's running? Impressive.	rntksi	9.671326	-5.2873406	comment	4.0	41.0	1625073620	-7.6700826
27691112	yes arm64, the twitter thread also s	"yes arm64, the twitter thread also said they didn't have to do any TPM tricks, it just worked.
i read somewhere else only the installer now requires TPM, the OS boot does not, but that will change when it goes gold"	flatiron	9.728504	-5.243071	comment	4.0	25.0	1625073685	-7.8655496
27720871	IPC is going up but slowly compared 	IPC is going up but slowly compared to previous generations. If AMD can sustain the kind of generation on generation increases it achieved between Zen 2 and 3 I will be tremendously impressed, but as it stands my brand new 5600X has barely 50% more single-core performance than the seven year old 4670K I replaced.	Causality1	9.306428	-5.1883817	comment	4.0	25.0	1625311634	7.8562675
27797520	I don't want to just jump in with so	I don't want to just jump in with some negative comment here but let's start with being honest - 95% of this post is about the history of emojis, how to use them, and what they mean. Which is a helluva lot of information about emojis for an article that concludes that they enjoyed NOT using emojis, and doesn't really have any substantive conclusion to make about things or any follow up.	bussierem	9.790182	-6.2719536	comment	4.0	15.0	1625963618	-13.958332
27799332	Something I found interesting in the	"Something I found interesting in the emoji usages in China:1. In Wechat ""emoji"" is a superset that also includes memes, where you can use any kind of image as an emoji also add other's emoji to your library (kinda like slack emoji, but bigger and more emphasized). The humor and expressiveness is immense, people use them for daily conversations instead of a quick reaction tool (well that too). Everyone's emoji lib is vastly different and it says a lot about you as a person, it's almost like a personal language.2. The ""Smile"" emoji in Wechat actually means hostility [0] in younger generations (""it could mean that you just said something really dumb and the sender doesn’t want to speak to you""). Some older generations folks don't ""get"" it and still use them for good intent. It's always weird "	slmjkdbtl	9.794427	-6.2677774	comment	4.0	23.0	1625992706	-13.962243
27804179	I tend to find people who don't like	"I tend to find people who don't like emoji to be slightly racist. Given emoji started in Japan, they get this ""ewww, who wants the foreign shit in my text"".  Even HN is slightly racist on this front. The fact that an entire culture embraced them and that you reject them is not racism with a capital R but is arguably in the gray area of, probably unintended, micro aggressions. You're basically telling an entire culture to go F themselves.If you don't like racism tag, then how about sexism. I'm pretty confident women use more emoji than men and I've seen plenty of female engineer's tech blog posts showing lots of emoji in their terminal prompts etc. So, assuming I'm correct, not supporting them is arguably sexist since you're effectively telling women ""sorry, your preferred mode of expressin"	asiachick	9.78315	-6.265319	comment	4.0	13.0	1626033993	-13.960316
27808494	Why don't people use emojiis or thei	Why don't people use emojiis or their substitute in this place? :)(っ. ᴗ .)っI'm not sure if the unicode ones work?edits: ஐ	thinkingemote	9.889795	-6.2582984	comment	4.0	35.0	1626081508	-13.953244
27845282	We refreshed our 1800 emoji to suppo	We refreshed our 1800 emoji to support the new landscape of work	eDameXxX	9.790824	-6.256478	story	4.0	24.0	1626359919	-13.961758
27847728	I was thinking AMD Renoir but Zen 2 	I was thinking AMD Renoir but Zen 2 and RDNA 2 is an odd combination. Is it custom?	shadilay	9.202775	-5.1970053	comment	4.0	14.0	1626371612	7.9047756
27896729	Yeah, that is frustrating since ther	Yeah, that is frustrating since there are no platforms where that would fail today, and it's hard to imagine why we would ever want one with 256bit pointers.We don't even use full 64bit pointers today on x64.	eloff	9.883237	-5.4711666	comment	4.0	17.0	1626802735	-7.6505766
27915503	A natively flexible 32-bit Arm micro	A natively flexible 32-bit Arm microprocessor	sam345	9.712885	-5.2734447	story	4.0	72.0	1626929550	-7.8307743
27926714	Thanks!We aren't able to announce an	Thanks!We aren't able to announce anything yet, but we have certainly designed for being able to support different CPU platforms, and for folks to switch between them by upgrading just the mainboard or the mainboard+memory.	nrp	9.573886	-5.21092	comment	4.0	29.0	1627009313	-7.9380307
27948489	I've been reading about the Mill for	I've been reading about the Mill for many years now and was fascinated by many of their ideas. However, the more deeply I learn about the details of how CPUs and GPUs work, the more I'm convinced that we're not going to see the kind of paradigm shift that they're touting.They have some cool ideas, but many are incompatible with existing software, e.g. all the memory protection stuff. Other ideas like how memory loads work could be integrated (and have been in place in GPUs for a long time, though not in CPUs) but still depend on compiler changes, which presumably they've done, but past experience with hardware projects that rely on compiler changes is that the compiler changes aren't performing well enough in practice. Or perhaps compilers improve so slowly that traditional architectures c	atq2119	9.589579	-5.537428	comment	4.0	22.0	1627214203	7.9915595
27954753	I just for the life of me don't thin	I just for the life of me don't think I'd ever be able to understand the x86 instruction set and truly get into reverse engineering. Most RE's I've known have seemingly had immeasurably deep knowledge about everything from the x86 platform to OS API's and their weird quirks (looking at you Windows)	the_only_law	9.765113	-5.6428623	comment	4.0	12.0	1627264992	-7.414753
12018999	While the conversion from x86 to Int	"While the conversion from x86 to Intel's internal microcode obviously adds complexity, internally Intel has been a RISC load/store architecture since 2006. Since ARM moved to ARMv8, I groaningly refer to v8 as ""x86 v2"" with most implementations with ridiculous pipelines and OoO execution. The only actually good ARMv8 implementation I've seen doesn't actually implement ARMv8 at all internally... NVIDIA's (now basically dead) Denver architecture does Transmeta style codemorphing to support ARMv8 instructions while having a much simpler (and efficient) internal architecture."	trsohmers	9.634884	-5.3582463	comment	4.0	23.0	1467401147	-7.706292
12099857	Notes from the fourth RISC-V worksho	Notes from the fourth RISC-V workshop	legulere	9.39508	-5.710982	story	4.0	103.0	1468576785	-10.589279
12148936	Intel Intel Software Guard Extension	Intel Intel Software Guard Extensions Explained [pdf]	based2	9.526056	-5.242447	story	4.0	42.0	1469265984	7.7718635
12158334	Whatever happened to the Acorn RISC 	Whatever happened to the Acorn RISC PC's from the mid/late 90's?I remember guys in the UK on USENET with the 'StrongARM...' in their signatures.	bluedino	9.510058	-5.306254	comment	4.0	22.0	1469451813	4.589608
12158665	+1 to that.  I feel his pain, having	"+1 to that.  I feel his pain, having been there myself.Back when DEC Alpha CPUs were still a going concern, I was one of the maintainers of the FreeBSD/alpha port.   While DEC shipped their workstations, they were beyond the reach of OSS developers.   The first ""normal"" Alpha board was the API UP1000.  It was basically an Alpha 21264 on an AMD motherboard & it was totally awesome.   API shipped me one before they were generally available so I could get FreeBSD working on it.   I used it as my desktop (running FreeBSD/alpha) for years.  Sadly all things Alpha were killed off in favor of Itanium.Here is the best description I can find of it in ~30 seconds of googling:
http://www.thefreelibrary.com/API+Announces+Program+to+Encou..."	drewg123	9.586324	-5.3835487	comment	4.0	12.0	1469454926	-8.002048
12160513	Not only are FPGAs as far from the i	"Not only are FPGAs as far from the ideal of ""computation as reduction"" expressed in the paper as they could possibly be, but they're the hardest machine to fit into this sort of a paradigm.The typical CPU will run functional code fairly efficiently if enough work is put into the compiler (to some functional programmers this sounds bad because hardware should make writing functional language compilers easy. People who know about hardware make a different conclusion - that hardware is just fine, as Ken Thompson said, ""the PDP-11 is a fine Lisp machine, it's not a language special enough to warrant a specialized machine."")The typical accelerator is a harder target to a general-purpose functional programming language (it's a poor target for a general-purpose imperative language to begin with.)"	_yosefk	9.072303	-5.3368745	comment	4.0	13.0	1469470989	8.209242
12170049	> One of the reasons I chose to use 	> One of the reasons I chose to use VHDL over verilog was that it was somewhat more robust in terms of complete implementations you could get (especially cheaply)A) Icarus Verilog is open source and free, and the author works with a couple of people on the Verilog committee last I checked ...B) What VHDL implementations are free and open source?	bsder	9.10261	-5.4851027	comment	4.0	15.0	1469585180	8.5640545
12191421	Intel Programmable Systems Group tak	Intel Programmable Systems Group takes step towards FPGA based system in package	zxv	9.105011	-5.3431497	story	4.0	43.0	1469847371	8.222909
12234326	I like the concept, especially the c	"I like the concept, especially the compute module you can move around. But the this call to action for a crowd funded platform is based on ""truly open"" ? Given that I was a bit disappointed it was using an Allwinner A20 CPU, at this point shouldn't ""truly"" open source use a chip with a RISC-V core?"	ChuckMcM	9.432976	-5.615024	comment	4.0	20.0	1470419170	-10.541248
12240166	I know we're probably ten years or m	I know we're probably ten years or more out from it (because it'd break way too much software ... I have an application I want to use but can't due to a 16-bit installer ... in 2016); but I really hope Microsoft eventually puts out a 64-bit only operating system. It would be lovely to be rid of SYSWOW64, Program Files (x86), the alternate shadow registry, ~3GB of wasted space for all the 32-bit code, etc.I intentionally leave off the 32-bit compatibility with my FreeBSD systems, and it's lovely. Of course, it's so much easier there with everything being open source.	byuu	9.894698	-5.291377	comment	4.0	19.0	1470522277	-7.962366
12243950	The technical knowledge in it is bot	The technical knowledge in it is both out of date, and more relevant than ever.The particular details are long since irrelevant - even in 1996 optimizing for the 8086 was irrelevant. But the thought process, approach and lessons learnt from optimizing the 8086 are still relevant today.In fact, they're probably more easily demonstrated through and example using the 8086 than in modern environments. I still use Abrash's S3 FIFO buffer story when I'm mentoring people.So yes, but no.	spitfire	9.589231	-5.403072	comment	4.0	18.0	1470607557	-7.564994
12247495	Am I the only one who saw sourceforg	Am I the only one who saw sourceforge.net and didn't click because of the fear of going to such a malware-ridden site?	AdamN	8.75466	-5.975	comment	4.0	15.0	1470662754	-11.68888
12302070	> It seems like we ought to have swi	> It seems like we ought to have switched from CISC to RISC.If you ever have a question about computer architecture, ask two questions: 1) where does the memory bandwidth go, and 2) where does the die area go.  All else follows from this.RISC only made sense when CPU clock speeds were at rough parity with central memory speed, on-chip I-caches were limited, pipelines were short, and compilers were only good at modest optimizations.If you look at functionality per instruction byte, RISC is fairly low. In today's world, CPU clocks are hugely faster than memory speeds, on-chip I-Caches are huge, pipelines are very very deep, branch prediction hardware is very good, and compiler back-ends are much much smarter than the peak days of RISC.   CISC wins because the amount of functionality that you	dbcurtis	9.493467	-5.6792464	comment	4.0	23.0	1471400318	-10.515461
12311614	No. Nonononononononono. We were ALMO	"No. Nonononononononono. We were ALMOST FREE! Just get these high-level abstractions out of my effing kernel. They don't belong there. Linus said as much himself. The only reason kdbus, this thing's predecessor, got so much as a glance is that Linus trusts Greg KH. A trust I would now consider somewhat misplaced. This is yet another piece of crap that was tacked on by systemd nonsense. It's non-portable, and they want us to use it upstack.Have these people lost their effing minds? Do they think we don't care about compatability? Just because Lennart said ""screw POSIX"" doesn't mean you should do it."	qwertyuiop924	9.697835	-5.822903	comment	4.0	54.0	1471519477	4.302737
12327765	The increasing use of icons and emoj	The increasing use of icons and emoji suggests that English will become like Chinese!(Ever try to look up an icon in a dictionary? This puts paid to the idea that icons are decipherable by people who don't know the language. Copyrighting the icons makes even that infinitely worse, as it prevents standardization.)	WalterBright	9.890823	-6.210756	comment	4.0	18.0	1471717932	-13.934247
12341646	Mainstream processors are synchronou	"Mainstream processors are synchronous. For this reason there is a global clock needed to synchronise all (most) the chip parts.
I remember there was some research on asynchronous CPUs but I don't think it ever yielded anything commercial.EDIT: Wikipedia link: https://en.m.wikipedia.org/wiki/Asynchronous_circuitWhat you are saying is that they react to interrupts asynchronously, but this has nothing to do with the synchronous nature of a CPU.
Moreover I think that if you have a CPU that doesn't respect the barriers and reorders the instructions to execute them in parallel, then it's a bugged CPU."	tigershark	9.5366	-5.3144794	comment	4.0	28.0	1471930841	8.23902
12353275	"There are also AFIAK a few ""deprecat"	"There are also AFIAK a few ""deprecated"" instructions that are implemented for backward compatibility but do not perform well on modern cores or have much better modern alternatives. These would be things like old MMX instructions, cruft left over from the 16-bit DOS days, etc.X86 is crufty. Of course all old architectures are crufty, and using microcode it's probably possible to keep the cruft from taking up much silicon.There are also instructions not universally available. A typical compiler will not emit these unless told to do so or unless they are coded in intrinsics or inline ASM."	api	9.742126	-5.552235	comment	4.0	36.0	1472056779	-7.7018886
12354904	> What you're describing is a GPUI w	> What you're describing is a GPUI would say I'm describing something halfway between a CPU and a GPU. It's not just an ALU, it's a complete microprocessor, with pipelining, caches, etc. The main difference is that the instruction set is optimized, backward compatibility is no longer a requirement, and redundancy of the architecture is eliminated.	fizixer	9.553287	-5.376551	comment	4.0	15.0	1472069777	7.9522347
12354842	> larger transistor budget... becaus	> larger transistor budget... because we (the chip designer) are okay with larger footprint per core.> specialized instructions are pretty much free... only after we have fixed the footprint per core. But if we're willing to vary that parameter, then the specialized instructions are not free.Not to mention, the main article of this thread is a strong evidence that those specialized instructions are almost never used!As for your point about 1024 cores, the whole point I'm trying to make is that whatever software does today with 4 cores in a 4-core processor, could be done by 4-cores in a 1024-core processor, because those 4-cores don't implement the instructions that are not needed. And that means you have 1020 cores free sitting in your microprocessor. You could only make your computations	fizixer	9.533647	-5.27405	comment	4.0	13.0	1472069317	7.852822
12356996	so it is more than a decade old Ultr	so it is more than a decade old UltraSparc T1, so called CoolThreads. That architecture didn't do any good for Sun back then (exactly as it was expected/predicted at the time by all the normal engineers) - bunch of weak cores (8 or 16, if i remember correctly, at the time when Intel was only dreaming about 2) choked by memory bus and without much of business tasks around that would have available widely parallelized software to solve them (beside those SSL benchmarks) - may be it was just that ahead of time...	trhway	9.706253	-5.3506103	comment	4.0	13.0	1472099795	8.635657
12358859	This article makes me kind of wonder	This article makes me kind of wonder wether there are processors that understand two or more unrelated instruction encoding sets.	legulere	9.765125	-5.725407	comment	4.0	26.0	1472132271	-7.480519
12366339	That's crazy. Do modern cores not al	That's crazy. Do modern cores not also use local, integrated power regulation? I think I remember an Intel PR release about that, but I don't know the detail.	revelation	9.516044	-5.2516756	comment	4.0	15.0	1472220455	7.8933496
12366519	How to Build Your Own Discrete 4-Bit	How to Build Your Own Discrete 4-Bit ALU	elijahparker	9.500904	-5.193979	story	4.0	64.0	1472221892	7.9014606
12372876	You should be careful with this, you	You should be careful with this, you'll wear a hole in your instruction set.	liquidzoot	9.8788805	-5.550496	comment	4.0	27.0	1472313941	-7.4467874
12407093	Intel finally got rid of hardware A2	Intel finally got rid of hardware A20 gating in Haskell. Real mode still exists, and iirc, the processor still defaults to it. You just can't jump into real mode from x64 mode, you need a virtualized environment in 32 bit mode to do that.	Sanddancer	9.773749	-5.348992	comment	4.0	20.0	1472750227	5.9118223
12444018	AMD’s Virtualization Memory Encrypti	AMD’s Virtualization Memory Encryption Technology [video]	based2	9.676846	-5.2799973	story	4.0	99.0	1473260991	7.9434795
35174162	I've been vaguely thinking about a b	I've been vaguely thinking about a book on the 8086 die. I'm sure I could sell at least 5 copies :-)	kens	9.608364	-5.392737	comment	4.0	12.0	1678911508	3.0263543
35194836	GigE not being achievable on low-end	GigE not being achievable on low-end FPGAs explains it really well, thank you.	aix1	9.10905	-5.327839	comment	4.0	12.0	1679044484	-10.753185
35207641	Restrict CI runners to valid freedes	Restrict CI runners to valid freedesktop projects only	matthews2	9.094529	-6.4168644	story	4.0	53.0	1679132737	6.156893
35215826	What's new for RISC-V in LLVM 16	What's new for RISC-V in LLVM 16	zdw	9.382794	-5.6992497	story	4.0	81.0	1679197461	-10.599629
35217505	Intel Thunder Bay is officially canc	Intel Thunder Bay is officially canceled, Linux driver code to be removed	nippoo	9.515354	-5.195096	story	4.0	115.0	1679219676	7.678588
35234971	Keep in mind the spec being violated	Keep in mind the spec being violated is the privileged spec, not the core instruction set (which is what people think of when they think of an ISA violation).  Personally, I think the privileged spec is a little too overzealous about the implementation-specific details that it specifies, and a little more should have been left to chip vendors.	pclmulqdq	9.603111	-5.50856	comment	4.0	18.0	1679332596	-7.6561346
35237012	From the Codeium (https://www.codeiu	From the Codeium (https://www.codeium.com) team here!Exciting to see more teams take on the code search problem - modern pure regex definitely is a suboptimal solution.Just to objectively highlight some of the similarities and differences between Bloop and Codeium Search (Codeium also provides Autocomplete) to a user:- Both are free for individuals- Both use a mix of AI and regex- Bloop has both free local and paid cloud offerings, Codeium only works locally (but therefore doesn't work as well on super large codebases)- Codeium uses custom proprietary embedding models so no dependency on OpenAI and no code is sent to a third party AI	aunch	8.890036	-5.9903493	comment	4.0	18.0	1679339508	-10.953018
35256007	This is now possible.If anyone wants	"This is now possible.If anyone wants to build this as a freelance project, email me (email in profile), I'll hire you to make it.Some things I'd like with it:1) Rewrite everything on a webpage in a peaceful and neutral tone2) Rewrite everything on a webpage to be assertive/direct, instead of passive aggressive (e.g. lots of negative comments could be replaced with simply ""I don't like this"" or ""I want other people to know I dislike this and agree with me"")3) Add emojis inline in text so that pages are easier to skim4) Add topic based filters/flags/emojis so I can highlight things that I care more and less aboutAll of them would be toggleable, of course."	tikkun	9.818149	-6.243244	comment	4.0	12.0	1679452146	12.442679
35269308	You can still buy new motherboards w	You can still buy new motherboards with ISA slots. Lots of industries need these. https://duropc.com/product/r6029-4p5i-4	jeffbee	9.5579605	-5.2705946	comment	4.0	17.0	1679533710	4.4977965
35275154	> unless the compiler devs are worki	"> unless the compiler devs are working for the same company that makes the CPUEvery CPU manufacturing company have a compile team.> This will never workVLIW processors do work, and for a while now.
This type of architecture performs better for data-intensive workloads, so you don't see them in the general-purpose world.But if you are talking about Mill, yes it will never work."	avianes	9.646371	-5.5670805	comment	4.0	17.0	1679580931	7.981463
35274443	If you remember the Transmeta chips 	If you remember the Transmeta chips from the early 2000s they literally were compilers. Took in x86 binaries but JITed them to an internal RISC instruction set.	gandalfgeek	9.6176605	-5.535505	comment	4.0	14.0	1679578099	-9.150754
35276092	> The hard part about a variable-len	> The hard part about a variable-length ISA, as I understand it (hardware is not my expertise), is that you have to build essentially a mux that can steer from 16 source places to 5 outputs.It's not just the mux, it's the control signals for the mux. If your first instruction in your 16-byte window is three bytes long, you can't realistically mux bytes 3-15 to the second decoder input, because you don't know that it needs to start decoding at byte 3 until /after/ the first instruction has decoded; so your gate delays would be the sum of the five decoders, plus muxing etc, and we're trying to do this at a single cycle.The alternative is to have 16 decoders, each decoding what an instruction /would/ be if it started at a given byte. These all complete in parallel, but many of them might prod	addaon	9.745714	-5.7289515	comment	4.0	14.0	1679584356	-7.857341
35294746	But thats still 4 years of basically	But thats still 4 years of basically zero POWER adoption.I don't want to hate on RISC-V, but I just don't see a line from here to where ARM is now, even with ARM's shenanigans.	brucethemoose2	9.390729	-5.6616216	comment	4.0	17.0	1679688532	-10.546691
35295732	This is such a huge-scale massively-	This is such a huge-scale massively-disrupting event.I hope Intel & AMD try to play. I'd love to see ultra-small x86 cores & cut down Gpus come out to play. I tend to doubt x86 is inherently vastly worse. But it's also hard to imagine them wanting to march into a competitive down market where most phones cost less than the starting prices of their regular cpus.This is a huge chance for RISC-V but so far it has been an unserious competitor. Nothing big, nothing efficient, nothing on vaguely recent nodes. And there's just so so much more than cores at stake. Power management, coherency fabric, there's so many other things mobile chips are great at, tuned at.It's just wild that there's literally no one else out there.	rektide	9.46592	-5.3932824	comment	4.0	18.0	1679692883	4.745159
35302597	Fundamentally Understanding and Solv	Fundamentally Understanding and Solving RowHammer	g0xA52A2A	9.622498	-5.6827755	story	4.0	52.0	1679752135	-13.889175
35341562	Ask HN: Left Smiley or Right Smiley?	Ask HN: Left Smiley or Right Smiley?	warrenm	9.86003	-6.210647	story	4.0	1.0	1680013279	-13.956353
35386815	Do Necessary Tools Exist for RISC-V 	Do Necessary Tools Exist for RISC-V Verification?	rbanffy	9.408252	-5.737603	story	4.0	72.0	1680269170	-10.576978
35389218	Going to dispute this one:> The valu	"Going to dispute this one:> The value of a CI/CD Pipeline is inversely proportional to how long the pipeline takes to run.Priority #1 is : test your product properly. This means ""if it is supposed to do something, then you should have a test to check that it does that thing"".Sometimes it just takes some time to put together and run such tests.In my experience some people (usually my perception is they are younger, more impatient people) who have read somewhere that tests should run really quickly, will argue that Priority #1 above doesn't matter, in the interest of their patience being assuaged.Long ago we had product builds that took hours and tests that often ran overnight, and sometimes over days. And we shipped sh*t that worked!"	dboreham	9.252729	-6.4182796	comment	4.0	18.0	1680278913	6.1132255
35405463	ARM purchase of arm2risv.com leaks p	ARM purchase of arm2risv.com leaks pivot to RISC-V	indolering	9.380319	-5.645883	story	4.0	7.0	1680392990	-10.571997
35429139	"All these articles saying ""Twitter r"	"All these articles saying ""Twitter responded with a poop emoji when asked for comment"" make me laugh so hard. Apparently they automated their press@twitter.com email to respond with a poop emoji. Actually pretty funny"	johnlocke8	9.788665	-6.2401123	comment	4.0	12.0	1680547194	-13.948679
35429364	x86 is the past, but ARM is propriet	x86 is the past, but ARM is proprietary. RISC-V is the open source answer (there is SPARC but it's much older and never gained enough traction + Power/PowerPC became open source too but it's also not a modern ISA)	haunter	9.638251	-5.354799	comment	4.0	22.0	1680547994	-7.74991
35444125	According to Steve Morse, the 8086 d	"According to Steve Morse, the 8086 designer:""Various alternatives for extending the 8080 address space were considered. One such
alternative consisted of appending 8 rather than 4 low-order zero bits to the contents of a
segment register, thereby providing a 24-bit physical address capable of addressing up to
16 megabytes of memory. This was rejected for the following reasons:Segments would be forced to start on 256-byte boundaries, resulting in excessive
memory fragmentation.The 4 additional pins that would be required on the chip were not available.It was felt that a 1-megabyte address space was sufficient.
""Ref: page 16 of https://www.stevemorse.org/8086history/8086history.pdfCredit to mschaef for finding this."	kens	9.7576275	-5.4899597	comment	4.0	15.0	1680633514	-7.5567913
35450459	Being open source doesn't magically 	Being open source doesn't magically make them better at ARM support.Someone still has to do the work of actually adding ARM support.	illiarian	9.654882	-5.1895785	comment	4.0	17.0	1680678768	-7.714476
35492278	There is something interesting happe	There is something interesting happening here. For the longest time we've been doing everything we can to efficiently share a CPU  with a low number of cores across a large number of threads. But as the number of cores increases we have the opposite problem: how to efficiently make a number of cores cooperate on the same task. Once the number of cores meets or exceeds the number of threads you can do away with a lot of the tricky bits that make our machines messy and insecure, a CPU per thread is so much cleaner. Especially if you can throw in some more isolation. And once you go down that road giving each CPU its own dedicated on-die memory is a relatively small step and you end up with a cluster-on-a-die that scales up and down from a power consumption point of view with the requirements	jacquesm	9.61349	-5.365951	comment	4.0	37.0	1680952820	8.025189
35495865	Making an Alphorn from Scratch (2020	Making an Alphorn from Scratch (2020)	camtarn	9.591255	-5.191207	story	4.0	31.0	1680976490	4.7145967
28101174	No hblank interrupts? Game boy has t	"No hblank interrupts? Game boy has them to make this sort of thing relatively easy. Hblank interrupts is also how ""mode7"" style pseudo 3d for a Mario kart style game can be made (on GBA or SNES)."	ant6n	9.915369	-5.6177216	comment	4.0	16.0	1628364583	-6.6516895
28105982	The PDP-11 Basic Analysis Project	The PDP-11 Basic Analysis Project	elvis70	9.850769	-5.4811563	story	4.0	72.0	1628422467	-7.538234
28136940	Dumb question: since memory bandwidt	Dumb question: since memory bandwidth is clearly a bottleneck in many server workloads, why don't chip manufacturers make CPUs with 20 memory channels instead of just 6-10, as in current CPUs?	gautamcgoel	9.64415	-5.198902	comment	4.0	13.0	1628645975	7.9767456
28179111	AVX512/VBMI2: A Programmer’s Perspec	AVX512/VBMI2: A Programmer’s Perspective	ingve	9.454228	-5.5544443	story	4.0	98.0	1628930542	8.093822
28181640	For SIMD workload performance increa	For SIMD workload performance increase of AVX512 over AVX2 is 2x. How many cores would you need to add to double the performance of 8-core CPU?Any media processing can generally gain significant performance with SIMD instructions. Even web browsing is a workload that is affected, as (among other things) libjpeg-turbo uses SIMD instructions to accelerate decoding. It doesn't yet use AVX512, but it does use AVX2. If there are gains with AVX2, why wouldn't there be with AVX512.Even if AVX512 would remain 256 bits, it would be an improvement over AVX2 as new instructions enable acceleration of workload that were not possible before, plus there is an increase in productivity/ease of use.However, AVX512 won't be used much for consumer applications until there is big enough market penetration of 	zigzag312	9.462571	-5.564821	comment	4.0	19.0	1628956559	8.159745
28182782	I wonder if future archeologists wil	I wonder if future archeologists will endlessly ponder the meaning of emoji similar to the way we in the current age try to understand ancient Egyptian hieroglyphics. perhaps a new age Rosetta stone should be carved	konfusinomicon	9.809269	-6.261062	comment	4.0	13.0	1628964826	-13.959944
28296088	Steve Jobs also tried to hire Linus 	Steve Jobs also tried to hire Linus Torvalds to work on their BSD kernel (lol)	drexlspivey	9.400459	-5.826211	comment	4.0	22.0	1629846342	-8.166798
28298771	Hobbyist me thinks this is really co	Hobbyist me thinks this is really cool. Thinking about how different runtimes might hint allocation of resources is fascinating.Professional me knows I'll be stuck figuring out that some bursty process that really needs p1 access all the time, in spite of usually being idle is going to be super pissed off when he gets paged at 2am. and he'll be stuck spending a lot of time figuring out how to pin that process to that core.Worker drone me is going to be sad thinking that slack and chrome are snarfing the good cores while my compile times suffer.Bit of a hot take, but it's a tragedy of the commons situation. Programmers are smart, they'll find tricks to grab the fast cores. There are a maybe zero organizations that can get alignment to keep important processes on fast cores, it's way better 	jfoutz	9.861952	-5.499198	comment	4.0	28.0	1629875070	8.16802
28299948	That could be interesting. I remembe	That could be interesting. I remember reading a report here years ago about a funny bug that was caused by the big and little cores having different endianness. Indeed the process would start on one core, process some data, get scheduled to the other core and boom, weird output. Does someone recall the story?	spockz	9.631851	-5.3468876	comment	4.0	14.0	1629888286	7.966962
28341112	What specifically in a newer X86 chi	What specifically in a newer X86 chip would justify this ?	boznz	9.679065	-5.325728	comment	4.0	13.0	1630181521	-7.697724
28354646	I feel much less like an impostor wh	I feel much less like an impostor when I read this. Thanks, HN!Is it even worth it adopting ci/cd for my small craft or am I fine sticking with push, ssh, pull, [vi config.json]? What do they actually achieve with it?Edit: incorrect idiom	wruza	9.178251	-6.4215465	comment	4.0	13.0	1630323731	6.1353645
28377948	My initial guess is that it's becaus	My initial guess is that it's because Icestorm CPUs have less L1 and L2 cache, resulting in more frequent cache misses in complex loops. I'm by no means an expert in any of this, so I really have no place hypothesising.Firestorm has 128KB L1 per core and 12MB shared L2.Icestorm has 64KB L1 per core and 4MB shared L2.	simondotau	9.640401	-5.273399	comment	4.0	13.0	1630489614	7.9528904
28394597	RISC-V Scalar Cryptography Extension	RISC-V Scalar Cryptography Extension reaches public review	bem94	9.404895	-5.7162633	story	4.0	78.0	1630602534	7.4213457
28399133	Awesome Lattice FPGA Boards	Awesome Lattice FPGA Boards	bb88	9.093879	-5.3450274	story	4.0	35.0	1630628953	8.332241
28405404	FYI: google's are Apache licensed he	FYI: google's are Apache licensed here: https://github.com/googlefonts/noto-emojiTwitter emoji (discord uses these also) are open source: https://twemoji.twitter.com/Both of these are very consistent and good open source emoji. I think in the past a lot of these projects that were not backed by companies eventually devolved into a paid product that was no longer open source, but I'm hopeful that openmoji continues down the FOSS path.	davidjfelix	9.8037815	-6.2552004	comment	4.0	16.0	1630682487	5.2773833
28411292	Reading this over, one striking thin	Reading this over, one striking thing is that in going from 14 nm -> 7 nm, they reduced core count from 12 to 8, and kept total cache per die approximately the same (256 MB L3 + various smaller caches -> 256 MB L2*). Looking at the die shot, there isn't an unusual amount of uncore, so this is either a MUCH smaller processor or a MUCH more complex core. Given that the Z series has never been particularly cost limited and has often pushed reticle size, and that by getting rid of the system controller costs will already be coming down... is this just a super-high transistor count SMT2 core?	addaon	9.444524	-5.1852202	comment	4.0	18.0	1630719116	7.8162856
28419836	Pretty much no video game engine sca	"Pretty much no video game engine scales with cores. There are too many dependent systems. There's no game engine that I'm aware of that effectively uses more than a couple of cores for gameplay simulation.Distributed physics is a well understood problem with no ""solution"". Just different trade-offs. This solution is cool, but it's not novel or anything. Minecraft is particularly challenging because the entire world is highly mutable.There are no general solutions to any of this. Just a bunch of custom one-offs. SpatialOS is trying. My opinion on it is extremely, extremely negative. And I'll leave it at that.Unity and Unreal both have primarily single-threaded gameplay. Writing multi-threaded gameplay code is extraordinarily difficult. Unity has been working on their DOTS/ECS system for yea"	forrestthewoods	9.511981	-5.322117	comment	4.0	25.0	1630793613	8.057564
28432424	Intel SGX Protects German Electronic	Intel SGX Protects German Electronic Patient Records	m1ghtym0	9.513496	-5.2329607	story	4.0	9.0	1630925497	-5.83889
28438087	I had to google what Torvalds curren	"I had to google what Torvalds currently do:...""What is your job?"" Torvalds replied, ""I read and write a lot of email. My job really is, in the end, is to say 'no.' Somebody has to say 'no' to [this patch or that pull request]. And because developers know that if they do something that I'll say 'no' to, they do a better job of writing the code."" [1]Do we have any idea what will happen to Linux once Torvalds is not there? Is there any example in history of OSS development as to what happens when BDFL [2] is not there anymore?[1] https://www.zdnet.com/article/linus-torvalds-im-not-a-progra...[2] https://en.wikipedia.org/wiki/Benevolent_dictator_for_life"	kklisura	9.402204	-5.82859	comment	4.0	16.0	1630962228	-8.202072
28450263	People may underestimate how fast mo	People may underestimate how fast modern machines are, but that is probably in part because, at least in my fairly relevant experience, I have literally never seen a CPU bottleneck under normal circumstances. Memory pressure is nearly always the driving issue.	fhood	9.759222	-5.232952	comment	4.0	33.0	1631050541	7.821163
28479848	PC BIOS and UEFI are a mess as well.	"PC BIOS and UEFI are a mess as well. They are proprietary blobs guarded by Intel and alike. At least ARM had most bootloading open with uBoot, for example. Also PC firmware code on modern platforms is often bigger than Linux kernel. Hardly a good example.
I sincerely hope RISC-V will avoid relying on UEFI and opt out for something more sensible."	xvilka	9.761583	-5.377394	comment	4.0	15.0	1631271607	-10.452608
28480109	I find my enthusiasm for RISC-V mate	"I find my enthusiasm for RISC-V materially reduced by its appalling lack of a base POPCOUNT instruction. Its lack makes my favorite optimizations annoyingly pessimal.I understand that, someday, higher-end realizations will begin to ship with various ""B"" subsets implemented, but ""portable"" builds will tend to avoid relying on those for an appallingly long time after. (E.g. MSVC and Gcc still do not generate POPCNT instructions, on amd64, unless you specifically identify a post-2004 target.)I will nonetheless be excited to learn of the first chip that does ship with the full raft of B instructions."	ncmncm	9.4563	-5.738868	comment	4.0	28.0	1631273874	-10.531063
28508349	I... cannot even figure out how to d	I... cannot even figure out how to download anything from SourceForge. (which also takes me back. But not really in a good way.)The countdown goes to 0, and ... it downloads nothing.I think I'm fine though.	shp0ngle	8.765646	-5.9649186	comment	4.0	13.0	1631513997	-11.664579
28509466	The severity and number of side-chan	The severity and number of side-channel attacks is slowly becoming cripplingly ridiculous. At what point do we just give up with side-channel attacks on consumer devices and assume the mentality that all consumer devices connected to the internet should be treated as insecure by default.	aetherspawn	9.801792	-5.585158	comment	4.0	13.0	1631526816	-5.6232553
28526282	It’s worth keeping in mind that the 	It’s worth keeping in mind that the silicon lottery is very much a thing at these nanometer sizes. So some market segmentation has to exist. If Intel threw away every chip that had one of the four cores come out broken, they’d lose a lot of money and have to raise prices to compensate. By fusing off the broken and one of the good ones, they can sell it as a two core SKU.Does this excuse Intel’s form of market segmentation? No. They almost certainly disable, for example, hyperthreading on cores that support it - just for the segmentation. But we can’t make every CPU support everything without wasting half good dies.	colejohnson66	9.35046	-5.2358737	comment	4.0	61.0	1631633263	7.78886
28526374	> By fusing off the broken and one o	> By fusing off the broken and one of the good ones, they can sell it as a two core SKU.Fuse off the broken one? Sure, makes sense.Fuse off a good one? That's arguably amoral and should be discouraged.Three cores can be better than two. Let the consumer disable the runt core if they need.	inetknght	9.468112	-5.2574625	comment	4.0	25.0	1631633647	7.854256
28527593	Just to note, AMD does every single 	Just to note, AMD does every single thing you blame Intel for.AMD recently dicked b350/x370 chipset owners by sending motherboard manufacturers a memo telling them not to support Zen 3 (5000 series) Ryzen CPUs on their older chipsets.[1]  This was after AsRock sent out a beta BIOS which proved that 5000 series CPUs worked fine on b350 chipsets. Today, AsRock's beta BIOS still isn't on their website and it's nearly a year after they put it out.Also, Ryzen APU CPUs do not support ECC. Only the PRO branded versions. Which only exist as A) OEM laptop integration chips, or B) OEM desktop chips which can only be found outside North America (think AliExpress, or random sellers on eBay).It's more accurate to say AsRock supports ECC on Ryzen. And sometimes Asus. They are also incredibly cagey about	deckard1	9.377968	-5.4080615	comment	4.0	21.0	1631638822	8.140876
28601882	Maybe someone at Arm has sympathy on	Maybe someone at Arm has sympathy on my plight to get graphics cards running on a Pi—I've had to replace memcpy calls (and memset) to get many parts of the drivers to work at all on arm64.Note that the Pi also has a not-fully-standard PCIe bus implementation, so that doesn't really help things either.	geerlingguy	9.713542	-5.2683167	comment	4.0	20.0	1632195819	-7.788745
28603301	Zephyr FPGA Controller	Zephyr FPGA Controller	JoachimS	9.105927	-5.3401866	story	4.0	25.0	1632215834	8.377193
28608086	As much as I love speculating about 	"As much as I love speculating about backdoors and NSA wiretapping, I seriously doubt these MEs are malicious. At this point, managing a modern x86 is tough work, especially if you want to run virtualization, complex threading and maintain high efficiency. It makes total sense that there are mandatory supervisor chips at this point, and without any evidence that these chips are ""phoning home,"" I simply have to assume that it's purpose is virtualized KVM for remote management. Worst case scenario, the CIA wakes up my laptop while I'm asleep, big whoop."	smoldesu	9.514382	-5.1953564	comment	4.0	15.0	1632248747	7.7427793
28635414	"Always good to see a ""Fix 100% CPU U"	"Always good to see a ""Fix 100% CPU Usage"" commit message"	neutronicus	9.6111145	-5.2692847	comment	4.0	18.0	1632431265	7.6699796
22307622	> Dropping support for 32-bit apps w	> Dropping support for 32-bit apps was a terrible idea.What? Never?First of all I think old CPU instruction sets should be deprecated in finite time. Secondly I think a decade is a reasonable time frame to do it in.  It too fast, not too slow.I go my first 64-bit mac in 2006. Fourteen years later why should the Mac have to support the older slower way that doesn’t release the potential of the hardware?I welcome a 64-bit only OS and haven’t suffered any loss from it.	diroussel	9.803112	-5.193471	comment	4.0	17.0	1581503275	-7.8051233
22310474	Intel warns of critical security fla	Intel warns of critical security flaw in CSME engine, issues discontinued produc	LinuxBender	9.486751	-5.2619843	story	4.0	20.0	1581526812	7.750552
22312873	Everyone knows that DRAM prices have	Everyone knows that DRAM prices have been in a collapse since early this year, but last week DRAM prices hit a historic low point on the spot market.  Based on data the Memory Guy collected from spot-price source InSpectrum, the lowest spot price per gigabyte for branded DRAM reached $2.59 last week.https://thememoryguy.com/dram-prices-hit-historic-low/You've selected out the low points on the graph: 2012, 2016, and 2019, most of the time DRAM has not been available at these prices. Now is definitely the time to load up on RAM.	keanzu	9.710008	-5.2427893	comment	4.0	16.0	1581542008	8.002594
22317238	Supporting only 64 processors in a g	Supporting only 64 processors in a group on a 64bit operating system seems like a reasonable and sane technical solution. It means you can use a single 64bit variable as a bitmask for various processor related functions in a process.I would bet that many other bits of software also have this limitation because they too thought that using a 64bit value for a processor mask would be sufficient.	daemin	9.733359	-5.445766	comment	4.0	17.0	1581597511	8.10287
22346806	I love this series!  Does anybody kn	"I love this series!  Does anybody know, if anyone ever made a version
that outputs AMD64 assembly instead of 68000?  Or some kind of gentle
introduction to a reduced version of the AMD64 instruction set, so that
I could do it myself?  The instruction set is quite huge, so having
a number of primitive commands that get the job done would be nice."	ainar-g	9.565421	-5.284099	comment	4.0	23.0	1581937245	-7.5794516
22357449	Now its getting really interesting: 	Now its getting really interesting: In the end you have to compare pricing for a vCore (which is a thread on a cpu) with per-thread performance on AMD vs. Intel. Does anyone know a benchmark like this? Epyc Processors are most often tested on heavy parallelizable tasks and not strictly single thread tasks.	tpetry	9.362614	-5.212381	comment	4.0	21.0	1582045033	7.9154553
22383828	Tangent: is there a reason that CPUs	Tangent: is there a reason that CPUs’ instruction sets aren’t designed with explicit “hint”-ops in them to let a compiler assert “I’m going to execute some instructions that’re going to draw a lot of power about 1000 cycles from now, so start ramping up for it now”? That’d basically eliminate what Intel calls “license-switching” costs.Do they just not believe in compiler authors to be able to emit these kinds of hints? Is there too much legacy code that would come without the hints for it to be worthwhile? Would it just not be worth it given how often OS context switches could drop the CPU directly from regular code in one process to AVX2 code in another process?	derefr	9.5792055	-5.5503736	comment	4.0	16.0	1582299341	8.122969
22385062	Prime95 has been a bad test for year	"Prime95 has been a bad test for years now.  Literally since the introduction of AVX2, it has been known that overclocking and running Prime95 will cause rapid electromigration and processor degradation on Haswell-E if you attempt to overclock. It's fine for like a few minutes but you should not attempt to do 24 hour Prime95 runs like people used to do, that was in the days before AVX was a thing.https://rog.asus.com/articles/usa/rog-overclocking-guide-cor...It also does not test all parts of the processor equally, it really just is slamming the cache and the AVX units.  You can be ""Prime95 stable"" and still crash in other things. It's just not a good test anymore in multiple respects.Same thing for Furmark on GPUs.  And nowadays GPUs are actually smart enough to realize they're running a p"	paulmd	9.344649	-5.1842985	comment	4.0	30.0	1582307242	7.8166847
22387390	The x86 architecture is a mess and i	The x86 architecture is a mess and it matters.The reason it matters is because a disproportionate amount of energy is spent in the instruction decode system.And that affects your battery life.	bsder	9.6839905	-5.3409257	comment	4.0	17.0	1582322826	-7.7495112
22393460	I don't have any connection to eithe	I don't have any connection to either side, but I have to say that it seems reasonably fair to me to tie the release of the ISA to a covenant not to sue. (It's like if a car maker buys back my lemon car, I don't expect that I also get to sue them because my car was a lemon.)	sokoloff	9.56791	-5.530882	comment	4.0	12.0	1582407021	-7.711007
22444292	> not wanting to impact single core 	> not wanting to impact single core performanceThat seems like an over burdensome requirement given that we are swimming in cores. A 10% loss in single core performance vs 1.2x-Nx multicore performance increase would be an adequate tradeoff.The only other option I can think of is having two different backends, one that is entirely single threaded and doesn't incur any multicore performance penalty.	nerpderp82	9.624904	-5.4052	comment	4.0	33.0	1582909960	8.096386
22464054	I wonder if RISC-V will be able to k	"I wonder if RISC-V will be able to keep its simplicity for a long time.
ARM began as a small instruction set as well, and now we have
instructions like the FJCVTZS (Floating-point Javascript Convert to
Signed fixed-point, rounding toward Zero)."	ainar-g	9.439375	-5.693268	comment	4.0	16.0	1583154779	-10.539014
22475704	For context this is an evolution of 	For context this is an evolution of the Applied Micro X-gene (I believe this is the 3rd generation).  The 1st gen was the famous Mustang, one of the first Aarch64 chips generally available that ran Linux.  I still have one in my loft somewhere.Edit: I should note that if you used the X-gene 1 it was very slow, albeit a reliable workhorse for early 64-bit ARM Linux development.  These newer chips have far better performance.	rwmj	9.67216	-5.267499	comment	4.0	15.0	1583251831	-7.71795
22476314	the key issue when compared to Epyc 	"the key issue when compared to Epyc is that this is mono-die, and not much faster (even with metrics straight from Ampere). Mono-die means that the die is huge, the yield is low, it's probably pretty expensive to produce (and the reason why they went for 32MB cache, well below Arm's recommendations, core count is a bigger seller than cache it seems).
Unless they get massively better performance (they don't), this has no chance vs a multi-die solution which has a much better yield. Intel is cornered in a similar situation right now. The same applies to Graviton, this stands absolutely no chance in the long run.Not saying that the future has to be multi-die, but if it is not, then it has to be way faster than the cheaper-to-manufacture competition."	eoerl	9.467008	-5.2331014	comment	4.0	17.0	1583254955	-8.354755
22477916	"""What we will note is that Ampere de"	"""What we will note is that Ampere de-rated both the AMD EPYC 7742 and Xeon Platinum 8280 results by 16.5% and 24% respectively. This was done to adjust for using GCC versus AOCC2.0 and ICC 19.0.1.144. Ampere disclosed this, and it is a big impact. Arm servers tend to use GCC as the compiler while there are more optimized compilers out there for AMD and Intel.""If I read this right, they reduce their competitors' benchmarks because they have better compilers?  Can anyone  justify this?"	jnwatson	9.45342	-5.198991	comment	4.0	18.0	1583263959	7.7574635
22496545	If etiquette is needed for an app th	If etiquette is needed for an app then that's the wrong tool or the tool is that bad. In this case I think it's the wrong tool. If people are that concerned about the visual noise in slack, maybe use something else that is more limited. If emojis are there, that implies they can be used. If there is abuse the option is either to remove them or add an additional feature that tries to solve the problem.	proc0	9.747361	-6.2395005	comment	4.0	15.0	1583433426	9.113246
22497561	It is telling that not a single comm	It is telling that not a single comment here sees this as a bad thing. Maybe Intel should take the hint. Users want to own their hardware!	dmitrygr	9.34463	-5.2083373	comment	4.0	28.0	1583438741	7.7875934
22517581	Associated GitHub repository with mo	Associated GitHub repository with more information: https://github.com/cattius/opcodetesterI know next to nothing about processors at this level, but I wonder if it would be possible for a skilled engineer to try to find these instructions by scrutinizing the actual physical instruction decoder on the chip and/or inspect the processor's microcode. Are these things possible to do? If they are, is it feasible to reverse engineer them?	saagarjha	9.659222	-5.459245	comment	4.0	26.0	1583668369	-7.3541713
22537702	Do all these vulnerabilities mean th	Do all these vulnerabilities mean that manufacturers will have to remove those optimizations, rendering the cpu slower?It seems to me that extracting or injecting data that way is very hard to do, and is likely to return very little information.Is the tradeoff something like: we should prevent the one in a hundred billion chance that my cpu leaks a critical password to some intruder one day at the cost of rendering all my processes 30% slower?	d--b	9.783991	-5.23998	comment	4.0	21.0	1583862665	7.5961113
22539832	I’m trying to get a point across for	I’m trying to get a point across for favoritism of AMD beyond objective measures.This entire post is about Intel security flaw where we just had one discovered for AMD yesterday! But people are not as vile about AMD but become hostile when it comes to Intel. Why? There are some toxic people defending both sides with passion. I’m baffled. If this isn’t “Fanboys”, what is?Regarding comparisons, I’m yet to see a conclusive source that points at AMD > Intel for server workloads - benchmarking these things is complex. Power, efficiency, workload types, etc matter. So it’s not as simple as saying “Hey, AMD won”.I’m disappointed at the hostility for pointing out fanboyism on HN. It’s present whether one denies it or not.Edit: Holyshit. I won’t be responding anymore. This has become an unproductiv	spectramax	9.238384	-5.1886177	comment	4.0	13.0	1583875191	7.813406
22543812	Given that Red Hat recently killed C	Given that Red Hat recently killed CoreOS, it's great to see new alternatives coming up. I cannot wait to give it a spin!	rfrfee	9.870775	-5.79477	comment	4.0	14.0	1583911408	-9.239483
22555565	Sorry to be critical, but can someon	"Sorry to be critical, but can someone explain to me the benefits of having code search this powerful?Surely code is easier to explore in an IDE which understands the context and dependencies of the project... This just seems like a glorified ""find"""	gitgud	8.820376	-6.0134435	comment	4.0	12.0	1584011549	-11.316654
22640980	A new RISC-V version of uLisp	A new RISC-V version of uLisp	lispm	9.393902	-5.6804852	story	4.0	119.0	1584733895	-10.563436
22642257	Is it hard for managed languages to 	Is it hard for managed languages to support RISC-V for some architectural reason?	chrisseaton	9.394847	-5.7090178	comment	4.0	25.0	1584742798	-10.529294
22655516	One thing directly connected to this	One thing directly connected to this history is why the x86 is little-endian. As the article explains, the 8008 was designed for the Datapoint 2200 terminal. The 8008 was intended as a compatible replacement for the existing Datapoint processor, which was built from simple TTL chips.To reduce the chip count, the Datapoint 2200 used a serial processor, which processed one bit at a time, so you had a 1-bit ALU among other things. One consequence is that you have to start with the low-order bit when doing addition, so you can handle carries. And for 16-bit values, you also have to start with the low-order byte. This forces you into a little-endian architecture.Thus, to be compatible with the Datapoint 2200, the 8008 was also made little-endian. Unfortunately, Intel was very slow creating the 	kens	9.755605	-5.515892	comment	4.0	38.0	1584890245	-7.548205
22700656	iTerm2 is is the main thing holding 	iTerm2 is is the main thing holding you back? Give tilix a try and you will forget all about iTerm2https://gnunn1.github.io/tilix-web/Then you can also enjoy:- running containers natively without a clunky VM- KVM virtualization - say goodbye to virtualbox- middle-click paste - sounds odd but is really intuitive- infinite desktop customization- level up your linux skills - nothing does this faster than running linux as your daily driver- no longer at the mercy of one company potentially removing x86 for ARM because it benefits them not you https://www.theverge.com/2020/3/27/21196611/arm-macbook-desk...	moondev	9.657984	-6.115019	comment	4.0	24.0	1585287608	-8.026332
22754151	In that case, why was it merged in a	In that case, why was it merged in at all?	Izkata	8.778809	-6.4282007	comment	4.0	21.0	1585779986	-8.379093
22758046	I remember reading somewhere that no	I remember reading somewhere that nowadays a significant chunk of the instructions isn't actually implemented on the CPU using transistors, but by using CPU microcode to sort of emulate these instructions by combining existing ones. Someone correct me if I'm wrong.	throwaway-9320	9.623503	-5.4842663	comment	4.0	12.0	1585828280	7.8276634
18997575	Dave Cutler is a better OS engineer 	Dave Cutler is a better OS engineer than Linus Torvalds. Fact.	nbevans	9.413794	-5.8231754	comment	4.0	15.0	1548421778	-8.232851
19065423	Itanium was created precisely becaus	Itanium was created precisely because HP thought it couldn't keep PA-RISC competitive. So they threw in with Intel to create the next great server architecture.As an aside, Merced too forever for Intel to tape out. Part of the agreements between HP and Intel was that they needed to ship chips for HP. As a result, Intel had to fab some of the last PA-RISC chips due to the schedule slip and contractual obligations.I worked on some Itanium system software once upon a time.	hawflakes	9.493933	-5.538229	comment	4.0	18.0	1549138672	-7.8059983
19081076	> emoji reactions (yes they really a	> emoji reactions (yes they really are useful)Fun, sure, but useful?  Ehh...I dunno.  It seems like you have some specific use in mind and I'm curious, so if you don't mind me asking, what do you use them for?	Jordrok	9.798476	-6.2658277	comment	4.0	15.0	1549317756	-13.968328
19119247	"""RISC architecture is gonna change e"	"""RISC architecture is gonna change everything."""	dfed-mpls	9.383138	-5.678057	comment	4.0	22.0	1549664569	-10.583906
19119277	Hard to imagine that the SoC is stil	Hard to imagine that the SoC is still being dumped after all of these years, if it even was in the first place.If the purpose was to kill off the grossly overpriced PC104 market, mission accomplished.  The fact that those boards have spawned a zillion competitors seems to suggest that any further dumping is not having the desired effect.A free ISA is about more than saving a few pennies on each board in royalties, it's about having a chip you can truly trust.  One that doesn't have some opaque binary blob running at ring -2.  One where nothing is encrypted by a key only the manufacturer (and whomever they can strike a deal with) has.  About hardware you truly own and control.	jandrese	9.414915	-5.255709	comment	4.0	18.0	1549664740	7.750507
19123871	The basics of the spectre exploit we	The basics of the spectre exploit were discoverable 20 years ago and run deep, to the very core of branch speculation. This is nothing but marketing for risc-v and rambus, there's no magic in risc-v that prevents spectre except that the ecosystem is so primitive that they barely have any speculative processors...We could have found the spectre exploit 20 years ago. To me, the fact that we didn't until now is maybe the most interesting thing.	deepnotderp	9.629827	-5.597932	comment	4.0	12.0	1549738048	7.7723966
19132672	I get the impression that people who	"I get the impression that people who talk about the ""horrors"" that are VHDL and Verilog for hardware design are software developers who have little to no knowledge about hardware design processes.There are reasons why VHDL/Verilog are still in use in the industry and why high-level synthesis hasn't taken off.VHDL/Verilog for hardware design is not broken. I won't claim that there isn't space for improvement (because there is) but there isn't anything fundamentally broken in them. They are fit for the purpose and they fulfill all of the needs we have.What could be massively improved is actually the functional verification languages we use, SystemVerilog for verification is in serious need of an overhaul."	pedroaraujo	9.119917	-5.4993343	comment	4.0	25.0	1549870659	8.561716
19137260	pext/pdep are awesome, but I imagine	pext/pdep are awesome, but I imagine you'd never notice the difference in real world usage. You'd have to use a program often where those instructions are on the critical path and comprise a significant percentage of execution time. The chances of that are slim to none. You may well notice the extra cores though, to a point, depending what you do.	eloff	9.691347	-5.439666	comment	4.0	15.0	1549911828	8.000641
19137431	I've been running a ThreadRipper 195	I've been running a ThreadRipper 1950X in my main box for the past 15 months or so and am generally extremely pleased with the results. However, my biggest takeaway from the experience of having 32 cores has been that an embarrassingly large amount of the software I use on a daily basis for productivity runs in a single thread. My expectation was that UI blocking would be rare- it isn't, particularly with Chrome, Firefox, and Slack. Jira in the browser is terrible- even with insane resources and 1Gbps bandwidth I regularly have to wait 10-15 seconds to be able to enter text.	reilly3000	9.784625	-5.5060387	comment	4.0	17.0	1549913066	8.187557
19140445	I still remember the olden days when	"I still remember the olden days when   XOR AX,AX

was faster than   MOV AX,0

and Abrash'es book was the magnum opus of the pre-P6 era.I guess I better throw most of those assumptions out for modern microarchitectures."	heyjudy	9.611693	-5.313109	comment	4.0	18.0	1549937786	-7.3926263
19165598	ARM royalties 1.0% - 2.0% of the chi	ARM royalties 1.0% - 2.0% of the chip cost and negotiable. Higher the volume, smaller the royalty. Foundry pays extra 0.5% for the physical IP package.When somebody decides to invest into large volume laptop/desktop/server microarchitecture to compete with Intel and AMD, nothing prevents them from adding their  own proprietary ISA extensions. RISC-V allows classic embrace and extend tactics.  RISC-V for Microsoft surface and RISC-V for Google Chrome may not be fully compatible with each other and RISC-V AWS cloud processors.	Nokinside	9.400207	-5.6002007	comment	4.0	16.0	1550175632	-10.536736
19165940	That's why I have a lot more faith i	That's why I have a lot more faith in RISC-V's ability to take on relatively high end embedded tasks than lower end ones.  I'd expect compression to be too expensive, transistor wise, for many roles where you'd use an ARM Cortex M2 or such and program memory is at a premium in those places.	Symmetry	9.414879	-5.6947856	comment	4.0	12.0	1550177864	-10.521158
19165464	Linux didn't start off competing wit	"Linux didn't start off competing with Windows, it started off competing with commercial UNIX. (Most people were running Linux on hardware that had Windows licensing costs rolled in.) The price gap between Linux and a ""real"" UNIX were huge, especially given that you had to buy hardware to match. Is RISC-V really a huge difference in price for any ARM CPU (as opposed to ISA) licensee?"	cwyers	9.395952	-5.6385736	comment	4.0	13.0	1550174705	-10.583768
19167106	Sold out already. :- )I want to see 	Sold out already. :- )I want to see what Espressif, SiPeed, or some other vendor manages to do with RISC-V. I'm currently prototyping an A2DP vendor codec extension for Opus using an ESP32 board, and it is pretty painless. Bluetooth is the high value bit in my opinion.	microcolonel	9.407178	-5.468408	comment	4.0	26.0	1550187085	-10.438654
19228865	I'm suffering through this now -- I 	I'm suffering through this now -- I have a custom C++ Node exception that needs to run on both x64 and ARM. The ARM cpu is onboard a mobile robot, where I care about power draw.The good news is that Clang can cross-compile fairly easily. Much better than gcc.The bad news is that there are a surprising number of missing libraries on Ubuntu/ARM64. For example, Eigen3. And although the code is fairly compatible, there's some extra cognitive load in learning to debug on ARM. For example, calling a virtual function on a deleted object crashes differently.I'm willing to put up with it for ARM's advantages in battery-powered applications, but I wouldn't just to save a few bucks on cloud servers.	tlb	9.763195	-5.383957	comment	4.0	16.0	1550867609	-7.756397
19230241	Google Says Spectre and Meltdown Are	Google Says Spectre and Meltdown Are Too Difficult to Fix	Merad	9.60766	-5.569675	story	4.0	63.0	1550878776	7.766993
19237280	Are Spectre-style bugs present on ot	Are Spectre-style bugs present on other processors like the ARM64 or POWER?	1024core	9.591801	-5.5080013	comment	4.0	13.0	1550985953	7.805438
19242911	Nobody has any idea what a modern x8	Nobody has any idea what a modern x86 cpu does under the hood because we have no access to the microcode.The only thing you can do is run your code and get an empirical answer to the question 'Is it fast enough'.	antt	9.673478	-5.450897	comment	4.0	18.0	1551068722	-7.5444474
19302694	Implementation of Direct Segments on	Implementation of Direct Segments on a RISC-V Processor (2018) [pdf]	ingve	9.409027	-5.693735	story	4.0	25.0	1551718563	-10.568614
19302787	Unrelated, but it's interesting to s	"Unrelated, but it's interesting to see the ""new"" Linus: no cursing, and no calling people morons."	saagarjha	9.280604	-5.897042	comment	4.0	13.0	1551719146	4.2481027
19309876	I've been using AMD CPUs exclusively	"I've been using AMD CPUs exclusively on the desktop for the last 3-4 builds I've done and it sure feels nice all of a sudden.  I recognize it's luck rather than skill of course, but I'll take what I can get because this one is a doozie!""An attacker therefore requires some kind of foothold in your machine in order to pull this off.""Right, but these days browsers are handing over footholds to anyone with a webserver!  It used to be that you worried about pop-ups because they were annoying.  Now it seems you need to worry about the modern-day equivalent because they could at least theoretically ruin your digital and perhaps real life."	msandford	9.429912	-5.220633	comment	4.0	19.0	1551786290	7.8275146
19315252	Hi, interesting article, but I would	"Hi, interesting article, but I would like to suggest you something. While it's OK to do bare metal just using the memory locations like you did:    *(uint32_t *)0x40021018 = 0x00000004;

after a few days, it will become tiresome to read and to remember all those addresses. I suggest you to use the header [0] that the ST provides for STM32F1, which is included in packages such as STMCubeF1 [1], STMCubeF0, etc.For instance, instead of using the memory address directly, you could just do    RCC->APB2ENR |= RCC_APB2ENR_IOPAEN;

so it's easier to remember what is what. STMCubeF1 is a big package, but you won't be using the API/drivers ST provides (such as HAL and LL), just the header. As I understand, the STM32 community kind of rejects this API as ""bloated"".I have some examples here if you wou"	dbolgheroni	9.715027	-5.2710147	comment	4.0	14.0	1551829118	-7.3828235
19329083	A Superscalar Out-of-Order x86 Soft 	A Superscalar Out-of-Order x86 Soft Processor for FPGA (2017)	matt_d	9.208443	-5.382111	story	4.0	90.0	1551974392	-10.486673
19331268	About time. I've noticed ECC DDR3 pr	About time. I've noticed ECC DDR3 prices are falling quite a bit in the used market, which is great for my homelab.	jagger27	9.4542	-5.4860897	comment	4.0	22.0	1551986732	8.115359
19333243	I am by no means an expert in digita	I am by no means an expert in digital design (I have only worked with them as a SWE), but it seems to me that the use cases for a high performance soft processor are pretty few and far between. After all, if you want a fast processor you can get a hard processor with excellent performance/support for less than the FPGA fabric likely cost.Still a cool piece of tech though.	Skunkleton	9.182365	-5.3741	comment	4.0	20.0	1551997905	8.225127
19416293	Arm have finally started making a de	Arm have finally started making a decent offline mBed IDE so hopefully in a year or two there will be no reason to use Arduino at all. The mBed API is much better and the range and price of boards is generally better too.E.g. ST Nucleo boards are around £10. Or the nRF52 device board is £30 - that gets you a proper BLE/Thread/etc board with a fully documented radio peripheral. You can write your own radio protocol if you want.	IshKebab	9.8978405	-5.3123226	comment	4.0	15.0	1552853922	7.425142
19446105	Can someone explain this in a bit mo	"Can someone explain this in a bit more detail? Why does ""the computation of the most significant bits of a 64-bit product on an ARM processor requires a separate and expensive instruction""?"	palango	9.687791	-5.444268	comment	4.0	19.0	1553111314	-7.5886993
19461358	Apart from the openness/freedom aspe	Apart from the openness/freedom aspect, can anyone summarize the pros and cons of RISC-V from a technical perspective in comparison to other major ISAs, e.g. x86, ARM, MIPs? Or point to some resources discussing the matter?	anonymousDan	9.413366	-5.68509	comment	4.0	12.0	1553252910	-10.578631
19462693	The difference is that most of us do	"The difference is that most of us don't own million-dollar fabrication labs. At best, we would be tinkering with FPGAs with custom cores, but FPGAs are an order-of-magnitude slower than traditional CPU ASICs.So we the typical user can't make use of open source designs.------An open source ""conglomerate"" of companies may work. But I haven't fully thought about the economics of it."	dragontamer	9.223816	-5.235665	comment	4.0	16.0	1553264248	8.293789
19470064	Qri: A global dataset version contro	Qri: A global dataset version control system built on the distributed web	anewhnaccount2	8.853614	-6.38858	story	4.0	204.0	1553341923	8.15453
19528354	Which is a bit bizarre because FeeeB	Which is a bit bizarre because FeeeBSD jails were world's first containers on a vaguely desktop-ish unix-ish systems.The crowd just never had the hype power of Linux and no big player took to developing cool things on top.It just shows you that having a technically good solution is irrelevant if there's no marketing behind it.	ivoras	9.743301	-6.399257	comment	4.0	14.0	1553932150	10.495543
19535759	The scariest line to me:> Intel does	The scariest line to me:> Intel doesn't publicly disclose the existence of Intel VISA and is extremely secretive about itSo all of my data and everything I do on my computer is flowing through this every day, and nobody knows what it is or what it does....	bo1024	9.386287	-5.194403	comment	4.0	27.0	1554042697	7.724036
19543031	How would CI help in this case? It i	How would CI help in this case? It isn't even software bug, it's a process issue - they had old code running on one of out of 8 servers. The monitoring was triggered, but no action was taken.	free652	9.302128	-6.3537984	comment	4.0	18.0	1554125600	2.358021
19570712	As an aside, this is a superbly prof	"As an aside, this is a superbly professional e-mail, with clear references to the applicable standards, and the disapproval of the broken service stated firmly, but using clean language.
Does anybody really think that Linus' (hopefully) past practice of starting with a foul mouthed rant, and only drilling down into the technical detail three pages in was a more effective way of communicating?"	microtherion	9.27586	-5.897176	comment	4.0	14.0	1554374068	4.2467217
19574529	Man, this gave me flashbacks to tryi	Man, this gave me flashbacks to trying to put 3.5-4GB of RAM into motherboards in 2003.  After a bunch of iterations of telling the motherboard manufacturers what we wanted, and having them hack the BIOS to work for exactly one DIMM configuration, then fail on anything else, I eventually gave up expecting most of the BIOS to work at all. I added code to the Linux startup sequence that ignored everything the BIOS said about memory maps, queried what physical DIMMS were there, and rebuilt my maps by hand.It's been so long that I can't tell an e820 map from an MTRR, but this was still a fun read.	uranium	9.843971	-5.2562456	comment	4.0	14.0	1554397110	8.161351
19589088	What caused a price crash of both DR	What caused a price crash of both DRAM and NAND??	onlyrealcuzzo	9.705186	-5.2699947	comment	4.0	16.0	1554522555	8.007672
19647318	I really like the underlying approac	I really like the underlying approach.  For those that can't read it (scihub is having issues with the doi) they ran qemu targeting x86->mips, and then added new mips instructions to get around what was taking a long time to emulate, x86 flag generation on arthmetic ops, an x86 like FPU and VU, and additional addressing modes.What they came up with really reminds me of the inside of a modern x86 core that sort of looks RISC-esque after the decoder, they're just doing the decode in software.  It's a really interesting halfway point between a traditional x86 core and transmeta's that way.	monocasa	9.760321	-5.618374	comment	4.0	20.0	1555092009	-7.790923
19647856	"Wasn't ""x86 emulation"" basically the"	"Wasn't ""x86 emulation"" basically the WinChip's and Cyrix's strategy in the late '90s-early '00s? I don't remember that ending too well, unfortunately..."	frabert	9.685612	-5.318066	comment	4.0	15.0	1555095041	-7.7882857
19671297	It saddens me that we're collectivel	It saddens me that we're collectively going to spend a lot of effort trying to patch out a problem that we've imposed upon ourselves. We were making such great progress in terms of processing speed until someone came along and decided that we need to have multiple tenants share the same hardware, and they should have no way of knowing anything about each other. The vast majority of consumer hardware will _never_[0] be exposed to this category of attack, but will pay the performance penalty regardless.Fundamentally, the need is for a completely different model of computation to abstract away time-channel leaks. This cannot be fixed by patching existing software and hardware, and we're going to go through a lot of pain and anguish trying. As another comment points out, the well of possible t	akersten	9.837012	-5.616228	comment	4.0	21.0	1555391841	-6.030472
19694297	submit queue makes sense and is used	"submit queue makes sense and is used by lots of people, it's the ""machine learning"" which is applied to choosing commits to enqueue which I found to be interesting. if the master success rate was already 99% in 2017, with just submit queue, why build the complex ML stuff?"	huac	8.945646	-6.3555603	comment	4.0	14.0	1555617795	9.54188
19693269	No, they haven't. This is a system t	"No, they haven't. This is a system to queue commits, not a simple CI setup. This problem only comes up when you start having contention due to commit volume in a monorepo (think thousands commits/day). This is only the 3rd one I've heard about.> This paper introduces a change management system called
SubmitQueue that is responsible for continuous integration
of changes into the mainline at scale while always keeping the mainline green. Based on all possible outcomes of
pending changes, SubmitQueue constructs, and continuously
updates a speculation graph that uses a probabilistic model,
powered by logistic regression. The speculation graph allows
SubmitQueue to select builds that are most likely to succeed,
and speculatively execute them in parallel. Our system also
uses a scalable conflict"	ricardobeat	8.941206	-6.398172	comment	4.0	15.0	1555610729	13.830483
19728696	Running them on in-order, speculatio	"Running them on in-order, speculation-free hardware would be quite sufficient, and come with additional benefits in power efficiency.  The thing about Spectre or Meltdown is that there's really no case for the sorts of out-of-order cpus that raise these issues, unless you're truly bound by compute or memory bandwidth on some single-threaded task - which will never be the case for typical JS/WASM workloads on the ""edge""."	0815test	9.632268	-5.554279	comment	4.0	12.0	1556028415	7.8406625
19738905	Assessing Unikernel Security [pdf]	Assessing Unikernel Security [pdf]	liuw	9.922103	-6.231841	story	4.0	53.0	1556117540	-12.408776
19743701	Xilinx to Acquire Solarflare	Xilinx to Acquire Solarflare	shaklee3	9.220903	-5.344285	story	4.0	64.0	1556150122	8.403221
19760368	Core Memory Shield for Arduino	Core Memory Shield for Arduino	mhb	9.767093	-5.295183	story	4.0	32.0	1556302546	8.09452
19767690	Wow: tier 1 contains no ARM or other	Wow: tier 1 contains no ARM or other CPU arch. Tier 1 is only 32bit i686 and 64bit x86_64.Tier 2 platforms can be thought of as “guaranteed to build”. Automated tests are not run so it’s not guaranteed to produce a working build.	robocat	9.562126	-5.259474	comment	4.0	12.0	1556399923	-7.941256
19773024	Has anyone here integrated emoji web	Has anyone here integrated emoji web picker in their website/web app? What's the recommended flow.I see that the library by OneSignal is rated high[1], but it's 2 years since updated; I guess it misses out on few emoji sprites.Isn't it high time input type=emoji is made a standard or is it a bad idea?[1]:https://github.com/OneSignal/emoji-picker	Abishek_Muthian	9.818083	-6.273939	comment	4.0	15.0	1556478471	13.016329
19786133	Hard to know from the article, and B	"Hard to know from the article, and Bloomberg does not have a good track record, if the 'backdoor' was a vulnerability , an unwanted feature or an actual backdoor.I might imagine a Chinese headline with ""US firm Intel backdoors every CPU"", which may or may not be true depending on your feelings on Intel ME"	steve19	9.50458	-5.2139025	comment	4.0	26.0	1556613787	7.7154627
19841656	> Who by the way runs applications o	> Who by the way runs applications on a 88 core server, why would you so they instead of splitting that into smaller chunks.Graph analysis and/or routing, for one. Distributed Dijkstra is pretty impractical (the optimal lower bound on the number of messages required equals the number of edges in the graph!)For example, I don't work for Google, but I can pretty much guarantee you that an individual Google Maps routing query runs on a single, extremely-high-memory (but not NUMA!) node, which has likely been optimized for speed using plain-old threading on a high-core-count CPU, with the upper bound on the number of useful cores being the system architecture's per-socket memory bandwidth.	derefr	9.934431	-5.414844	comment	4.0	15.0	1557163511	8.2540045
19845444	I have to hand it to Microsoft. WSL 	I have to hand it to Microsoft. WSL 2, Windows Terminal, and Edge based on Chromium. Microsoft really is doing some fantastic work for their users.Meanwhile, macOS will get new emojis in 10.15.	sys_64738	9.834315	-6.25123	comment	4.0	45.0	1557190397	-13.94973
19887066	Yes I have programmed FPGAs.  We are	Yes I have programmed FPGAs.  We are reaching the limit of the silicon and the only  way to get faster is to run the CPU on something different or each software get implemented on hardware which is getting cheaper.	ezconnect	9.11786	-5.356899	comment	4.0	23.0	1557593234	8.332392
19887740	I have a computer engineering degree	I have a computer engineering degree and what you are saying about using FPGAs for general purpose computing was correct when I graduated 20 years ago. It was 10-100 times more correct a decade after that, and is another 10-100 times more correct today. So somewhere between 100 and 10,000 times more correct now than in the 90s. And between 1000 and 1,000,000 times more correct in 2029!But we're still using the same 3 GHz (effectively single threaded) chips today as then. Sure, RAM frequency is higher, but so is latency. Computers today are closer to 10 times faster than computers of the 90s, not 10,000 times faster like they should be. Except for video cards, which really are 100 or 1000 times faster, because they break with the single-threaded model.FPGAs would work great for general purp	zackmorris	9.1082945	-5.3782506	comment	4.0	24.0	1557600691	8.425541
19912168	Before Spectre and Meltdown were dis	Before Spectre and Meltdown were disclosed publicly, very very few security researchers were looking at the CPU level, beyond things like attacks against hardware virtualization functionality, TrustZone and friends, ME, etc. Those bugs had existed for ages and could've been found through thorough examination of the processor manuals, but nobody had really looked too hard there. These new bugs were found independently by many different researchers/groups, simply because their attention was drawn to looking at this stuff for the first time.	daeken	9.556545	-5.4795423	comment	4.0	18.0	1557857525	7.811563
19912396	Also, HT is not such a great perform	"Also, HT is not such a great performance win - on a few different 4-core/8-thread machines, I had access to, loading all 8 threads to ""100% CPU"" (whatever that means) usually only delivers 20-30% faster computation than with HT off (4-core/4-thread) - which is inline with your 30% number.And that's an improvement - some 15 years ago, with similar computational loads, most of my tests ran 10-20% faster with the HT off (using 2 core / 2 threads) than with HT on (using 2 core / 4 threads) - there just wasn't enough cache to support those many threads."	beagle3	9.659978	-5.429965	comment	4.0	20.0	1557858637	8.10061
19938804	Does anyone actually have some bench	"Does anyone actually have some benchmarks of the latest gen AMD vs the latest gen intel processors with all mitigations for spectre, meltdown, and the 10 other sidechannel/speculative execution vulnerabilities applied?I'd genuinely be curious to find out what the eventual results are because as i understand it AMD is not too far away from Intel as a standalone processor, surely in a ""real world"" scenario they'd be significantly faster?"	morrbo	9.364954	-5.287688	comment	4.0	34.0	1558095880	7.83699
19945861	Because it’s optimised for producing	Because it’s optimised for producing the smallest diff once it’s already been formatted and a change is made.If you add a single item to your preferred style, the entire thing has to be reflowed.	jsmeaton	8.945707	-6.409621	comment	4.0	12.0	1558157889	-11.5821705
19958176	MitM'ing my STB (2016)	MitM'ing my STB (2016)	punnerud	9.890274	-5.552408	story	4.0	42.0	1558336796	-5.239128
15789591	Still no word on removing ME?Is that	Still no word on removing ME?Is that battle completely lost? Is nobody asking Intel for non-backdoored hardware?	jordigh	9.490102	-5.20295	comment	4.0	14.0	1511806494	7.7593813
15791669	I really doubt they were legitimate 	I really doubt they were legitimate bit flips and not just software bugs, to be honest.The likelihood that you’ve seen multiple flips on the same piece of data .. sounds like a typical threading bug.	aetherspawn	9.766405	-5.5624576	comment	4.0	16.0	1511818540	8.185519
15794027	"""While AMT gives an authenticated us"	"""While AMT gives an authenticated user a great deal of power, it's also designed with some degree of privacy protection in mind - for instance, when the remote console is enabled, an animated warning border is drawn on the user's screen to alert them.""Can someone point me to a picture, or screenshot, of this ?"	rsync	9.403053	-5.263995	comment	4.0	21.0	1511839374	7.8195944
15801367	I like the idea behind RISC-V's open	I like the idea behind RISC-V's open architecture but I had a question.  Does it do or even try to do anything about the cloud of uncertainty surrounding Intel ME and the AMD equivalent in x86?	H99189	9.3797655	-5.6764374	comment	4.0	17.0	1511901932	-10.565034
15801424	I haven't been following the RISC-V 	I haven't been following the RISC-V story too closely, possibly because I didn't want to get my hopes up only to be dashed.  From the article, it sounds like these cores will be developed solely for use in data storage.  Can someone with more knowledge tell whether this will help provide the kind of production volume needed to make consumer products (like laptops and desktops) more likely to be viable?  Are general purpose chips likely to be one result of the development of RISC-V, or have I missed something fundamental?	sverige	9.379566	-5.6295094	comment	4.0	26.0	1511902210	-10.560303
15806055	The author argues that the number of	"The author argues that the number of meaningful operations a device can do per second will not keep growing exponentially. The reason he gives is that while we can add more parts that work in parallel, this has limited benefit:    The speed up starts to disappear as silicon is left idle
    because there just aren’t enough different things to do.

I think there will be enough 'things to do'. Looking at real world applications of more processing power like AI and simulations, I expect them to be perfectly parallelizable."	no_gravity	9.57429	-5.256121	comment	4.0	23.0	1511955134	8.035366
15811782	"""Boomv2 achieves 3.92 CoreMark/MHz ("	"""Boomv2 achieves 3.92 CoreMark/MHz (on the taped out BOOM), vs 3.71 for the Cortex-A9.""
- it's a bit of a letdown. I was hoping it'd be closer to x64 performance than to Cortex-A, but it's probably not achievable for RICS-V budget."	AllSeeingEye	9.4722805	-5.2933927	comment	4.0	19.0	1511997134	7.8045125
15819571	Is there some way to disable this fo	Is there some way to disable this for AMD CPUs?	shmerl	9.421183	-5.2592177	comment	4.0	15.0	1512076300	7.8663526
15891538	RISC-V Vector Extension overview and	RISC-V Vector Extension overview and proposal [video]	nickik	9.413919	-5.725461	story	4.0	70.0	1512916641	-10.53519
15913605	Really cool stuff. I don't like bein	Really cool stuff. I don't like being negative when it comes to fantastic moves like this, but I'm still really disappointed that it doesn't support 64bit executables.	Direct	9.813182	-5.3151803	comment	4.0	16.0	1513164977	-7.8877716
15941545	Leveraging RISC-V for AI and Machine	Leveraging RISC-V for AI and Machine Learning	rbanffy	9.374809	-5.6802135	story	4.0	61.0	1513453735	-10.580101
15949352	This is one of those things that you	This is one of those things that you don't really need, but may REALLY need at some point in the future.Also who names emojis, are they author named!?Also, Also. Github could use some optimization, forking this froze my browser. Rendering the page took like 20 seconds.	stevemk14ebr	9.801464	-6.2592764	comment	4.0	12.0	1513570321	12.966206
15953128	Sort of off-topic, but magit isn't r	Sort of off-topic, but magit isn't really  GUI :-) -- though it is very nice, if you're an emacs user. It's Achilles' heel is speed, though -- too damn slow. (Last time I tried it, anyway, which was a while ago.)	dilap	8.843441	-6.41894	comment	4.0	15.0	1513616730	-11.410992
15968626	Let's create the language of the int	Let's create the language of the internet	sherancoera	9.806589	-6.2730203	story	4.0	3.0	1513767805	-13.957783
15979882	The fact that this is all on one cpu	The fact that this is all on one cpu seems like a problem, does it not?Does someone have a mental model of how to take advantage of multiple cpus without creating a mess?  If so, can you explain it like I'm 5 (or more like I'm 55 and tired)?	luckydude	9.621756	-5.291628	comment	4.0	13.0	1513872669	8.016201
15989551	If I'm understanding it correctly, t	If I'm understanding it correctly, they're not actually using the 512 bit (ZMM) registers, because using them can cause overall system slowdown. It seems to me they're only really useful if you're doing an AVX-512 intensive workload. And do those really exist? For something like bulk matrix multiplications, GPGPU is going to be much better, both in throughput and in operations per joule. I'm remaining to be convinced that the ecological niche occupied by SIMD is significant, let alone expanding.	raphlinus	9.488922	-5.57786	comment	4.0	23.0	1513966257	8.08639
16046812	Shouldn't cloud-grade computers be i	Shouldn't cloud-grade computers be immune to rowhammer (or at least rowhammer should be much less efficient) as they typically use ECC RAM. Switching ECC RAM in a way that also modifies checksum in a deterministic way is (was?) not practical?	jbfoo	9.603271	-5.6499963	comment	4.0	18.0	1514826163	-13.891003
16048612	Looks like it is speculative executi	"Looks like it is speculative execution based, and does not affect AMDhttps://lkml.org/lkml/2017/12/27/2AMD processors are not subject to the types of attacks that the kernel
page table isolation feature protects against.  The AMD microarchitecture
does not allow memory references, including speculative references, that
access higher privileged data when running in a lesser privileged mode
when that access would result in a page fault.Disable page table isolation by default on AMD processors by not setting
the X86_BUG_CPU_INSECURE feature, which controls whether X86_FEATURE_PTI
is set."	justincormack	9.593022	-5.4787064	comment	4.0	30.0	1514848666	7.9061136
16052862	All Intel CPU's are affected, mitiga	All Intel CPU's are affected, mitigation syscall overhead increased by 50%, and none of AMD CPU's affected? I would say this could be an indicator to short INTC and long AMD...	bitwind	9.354952	-5.2006187	comment	4.0	71.0	1514910468	7.906594
16055513	AMD's triple core processors were qu	AMD's triple core processors were quads with disabled cores. Often times processors within a line are processors with manually set lower clock multipliers or disabled cache.Sounds like Intel has just made it unlockable instead of permanent. It just brings to the fore what was already being done, and makes us question again the ethics of pricing models.	unethical_ban	9.357479	-5.1939673	comment	4.0	14.0	1514926394	7.817637
16056135	Chisel: Constructing Hardware in a S	Chisel: Constructing Hardware in a Scala Embedded Language	based2	9.271228	-5.479649	story	4.0	70.0	1514930216	8.299346
16057742	This is going to have dramatic effec	This is going to have dramatic effect on the cloud computing market. It might make sense to make sure any VMs you run are on AMD processors or it can really hurt your performance and basically cost you more to do the same workload.It also seems, from early benchmarks, this can slaughter performance with databases.	electic	9.55945	-5.2398486	comment	4.0	23.0	1514945784	7.861295
16061724	Honest question, does the performanc	Honest question, does the performance hit from this patch actually hit Intel's best processors enough to make them perform worse than AMD's best?I don't keep up on these kinds of metrics, but I'm under the impression that Intel still dominated CPU benchmarks berfore this issue, so if this question is answered in the negative then I doubt it will affect Intel very much.	AnIdiotOnTheNet	9.362593	-5.2496915	comment	4.0	13.0	1514993257	7.841295
16061842	From what I've read, this slowdown o	From what I've read, this slowdown only affects syscalls, which, since they aren't usually a huge percentage of processing in the first place, should not have such an effect. You're more likely looking at a few percent at most, which is not going to be enough to make AMD outperform Intel. Let's stop the fear mongering and wait for actual metrics.	ashelmire	9.463405	-5.2152705	comment	4.0	28.0	1514993972	7.8273897
16063585	I’m not (yet) clear on if/how this i	I’m not (yet) clear on if/how this impacts aarch64 (ARM architecture) chips, the distinction between how it affects Intel vs. doesn’t affect AMD reminds us of a fundamental lesson we seem to have conveniently forgotten: monocultures of anything are bad. We need diversity and diversification in order to have reasonable amount of robustness in the face of unknowable, unpredictable risks.I’m wondering whether ARM chips are affected if they are whether they are uniformly affected or whether it depends on vendor implementation choices.	qubex	9.527359	-5.211582	comment	4.0	19.0	1515004161	7.859399
16065703	"I could be wrong, but I take the ""bu"	"I could be wrong, but I take the ""bug/flaw"" language to mean this: the processor is doing exactly what it was designed to do (unlike the Pentium FDIV bug, for example).  A new class of exploit was recently discovered, and these CPUs are vulnerable to this new exploit.  But there was no bug in how these CPUs were implemented, and the only design flaw is that they failed to withstand a new class of exploit that was not known at the time they were designed.(I don't have any information that could confirm/deny this, it's just how I interpret their verbiage).I don't get the sense that they are trying to deceptively contradict only part of the previous statement."	haberman	9.570523	-5.3433585	comment	4.0	24.0	1515017073	7.8753147
16065953	See the Twitter thread here: https:/	See the Twitter thread here: https://twitter.com/nicoleperlroth/status/948678006859591682(Edit: there are 9 posts total, go to her user page to see them all)Seems there are two issues. One, called Meltdown, only effects Intel and is REALLY bad, but the kernel page table changes everyone is making fixes it.The other, dubbed Spectre, is apparently common to the way all processors handle speculative execution and is unfixable without new hardware.I’d like to know more about that but I haven’t seen anything yet.Whoever discovered this stuff on Google’s team deserves some sort of computer security Nobel prize.	MBCook	9.601406	-5.460724	comment	4.0	28.0	1515018675	7.765355
16065977	"""AMD chips are affected by some but "	"""AMD chips are affected by some but not all of the vulnerabilities. AMD said that there is a ""near zero risk to AMD processors at this time."" British chipmaker ARM told news site Axios prior to this report that some of its processors, including its Cortex-A chips, are affected.""- http://www.zdnet.com/article/security-flaws-affect-every-int...* Edit:From https://meltdownattack.com/Which systems are affected by Meltdown?""Desktop, Laptop, and Cloud computers may be affected by Meltdown. More technically, every Intel processor which implements out-of-order execution is potentially affected, which is effectively every processor since 1995 (except Intel Itanium and Intel Atom before 2013). We successfully tested Meltdown on Intel processor generations released as early as 2011. Currently, we hav"	mrmondo	9.471906	-5.378772	comment	4.0	50.0	1515018809	7.8403306
16066799	After skimming the articles it sound	After skimming the articles it sounds like a lot hinges on just how hard Spectre is to pull off in practice/in the wild. Anyone have any insights on that?	Certhas	9.655913	-5.591219	comment	4.0	18.0	1515025020	7.7049046
16067200	This would be more convincing if the	"This would be more convincing if the x86 CPU manufacturer he used to work for were still in business.I mean, I could sit here and criticize how Linus runs his kernel development project and how so much insecure code gets in, and talk about what a ""competent"" kernel developer would do, but since I don't run an equally successful, more secure kernel, it's just armchair quarterbacking."	geofft	9.517946	-5.690488	comment	4.0	24.0	1515029080	7.766424
16066017	So, is AMD effected or not? This see	"So, is AMD effected or not? This seems fairly important. The Google blog post sort of goes against itself in this regard. AMD itself has said:""The threat and the response to the three variants differ by microprocessor company, and AMD is not susceptible to all three variants. Due to differences in AMD's architecture, we believe there is a near zero risk to AMD processors at this time.""So either AMD is lying or Google's blog post is wrong. Granted AMD's statement is a bit muddled, not sure if they mean they aren't susceptible to all THREE variants (as in only 1/3) or they aren't susceptible to ALL three variants (as in none of them.)"	partiallypro	9.33409	-5.243632	comment	4.0	18.0	1515019004	7.883648
16066224	AWS Statement: Processor Speculative	AWS Statement: Processor Speculative Execution Research Disclosure	bryanh	9.726108	-5.5844617	story	4.0	115.0	1515020184	-3.8701568
16068720	But only a few million cores are doi	But only a few million cores are doing worthwhile work.Most of us aren’t contributing to the advancement of knowledge, for example. If we could up our utilization with more people doing R&D, for instance, we’d accumulate knowledge much faster.	melling	9.572845	-5.3068767	comment	4.0	15.0	1515053285	7.986167
16068892	I wonder if the whole thing with eno	I wonder if the whole thing with enormously complex CPUs requiring deep pipelines which in turn requires complex speculation etc was a design mistake? Is there an alternative history where mainstream CPUs are equally fast with a dumber/simpler design?	alkonaut	9.560514	-5.4530134	comment	4.0	19.0	1515056248	7.8693266
16070708	And I fear there's little reason to 	"And I fear there's little reason to think that the ""three variants"" from project zero's announcement are the full scope of the problem. They were just the variants that the few people in on this found time to develop exploits for. There can now be security bugs in things your program doesn't do; it seems like there is room for nearly unlimited creativity in finding them.From the spectre paper:""A minor variant of this could be to instead use an out-of-bounds read to a function pointer to gain control of execution in the mis-speculated path. We did not investigate this variant further."""	voidmain	9.668063	-5.60963	comment	4.0	18.0	1515077926	7.768975
16070942	CPUs have been vulnerable to this at	CPUs have been vulnerable to this attack since 1995. How did it collectively take us 22 years to figure this out? I know it's a highly esoteric complex attack, but there's no shortage of clever hackers in the world.	js2	9.640696	-5.3224664	comment	4.0	20.0	1515079329	7.6914773
16070943	They have spectre, any CPU with spec	"They have spectre, any CPU with speculative execution and caches of any sort (excluding some capability machines, no ROP exploit machines and PLB enforced SASOS machines), including branch prediction  (!) is  vulnerable to spectre. (For those of you not in comp arch, that roughly translates to ""literally every single non embedded CPU, and then some"")That's what makes the flaw so deep and troublesome."	deepnotderp	9.736789	-5.759995	comment	4.0	21.0	1515079333	-7.106519
16071552	Mostly OT, but is there an explanati	"Mostly OT, but is there an explanation for why the ""Meltdown"" vulnerability was named specifically as such, I mean besides the term's meaning when it comes to ""melting"" security barriers? Coincidentally, ""meltdown"" is currently a very popular term to describe reactions/revelations re: a soon-to-be-released politics book titled ""Fire and Fury"" [0]. I guess yet another example of ""Naming things"" being one of the hard problems.[0] https://www.publishersweekly.com/pw/by-topic/industry-news/p..."	danso	9.556555	-5.482205	comment	4.0	15.0	1515083072	7.714666
16072454	Do Intel even sell any non-vulnerabl	Do Intel even sell any non-vulnerable CPUs?	jl6	9.390548	-5.2100315	comment	4.0	12.0	1515088892	7.7399454
16072740	The effect on Intel is far more seve	"The effect on Intel is far more severe than on other architectures.  There were three vulnerabilities, two grouped together as ""spectre"" and one called ""meltdown.""  Intel products are uniquely vulnerable to the meltdown attack, while many CPUs are vulnerable to spectre.  The summary AFAIUI is that for most CPUs you can attack userspace processes with these techniques (think Javascript running in a browser), while for Intel CPUs you can also attack the kernel.  Intel CPUs also seem to be somewhat easier to attack than others because of a higher-bandwidth side channel."	betterunix2	9.503381	-5.3224864	comment	4.0	19.0	1515090626	7.794127
16072775	It appears the retpoline fixes don't	It appears the retpoline fixes don't work in Skylake or later (it's smart enough to speculate out of it?) and will require new support for IBRS/IBPB in the microcode to mitigate.From: https://lkml.org/lkml/2018/1/4/615	cws125	9.487216	-5.2977896	comment	4.0	22.0	1515090829	7.7775373
16071769	Ubuntu anouncement on Spectre/Meltdo	Ubuntu anouncement on Spectre/Meltdown	theptip	9.619398	-5.5512156	story	4.0	93.0	1515084521	7.7777767
16072463	Scaleway patches infrastructure to m	Scaleway patches infrastructure to mitigate Intel bug	y0ghur7_xxx	9.508665	-5.2982564	story	4.0	43.0	1515088933	7.7948976
16074019	If AMD spotted the issue and avoided	If AMD spotted the issue and avoided it deliberately all those years ago, why didn't they tell anyone?	willvarfar	9.244081	-5.188717	comment	4.0	12.0	1515099594	7.85143
16075213	So I have read the meltdown.pdf pape	So I have read the meltdown.pdf paper, but I don't quite understand why/how it bypasses the kernel/usermode checks of the pagetable, does anyone have a good explanation ?Furthermore the paper mentions it is unable to reproduce it on AMD and ARM, but has some suggestions of things to try to make the exploit work. Other sources , including AMD itself, claims not to be vulnerable to meltdown, does anyone know the technical reasons as to why, and what is different compared to Intel cpus ?	noselasd	9.655129	-5.557998	comment	4.0	15.0	1515109875	7.9452243
16075686	> Our testing with public benchmarks	> Our testing with public benchmarks has shown that the changes in the December 2017 updates resulted in no measurable reduction in the performance of macOS and iOS as measured by the GeekBench 4 benchmark, or in common Web browsing benchmarks such as Speedometer, JetStream, and ARES-6.This is incredibly deceptive, because web workloads are precisely the sort not expected to be impacted by Meltdown most. As I've written elsewhere, it's syscall heavy workloads targeting fast devices, like database software on PCIe SSDs, that will suffer the greatest slowdowns.	AaronFriel	9.693821	-5.2536883	comment	4.0	22.0	1515114927	7.83436
16076298	I think this is a foreshadow of what	I think this is a foreshadow of what's to come with quantum computers.  While side channel attacks aren't directly related to quantum computing, they're of a similar character.  Quantum computing will enable new kinds of analysis that aren't possible to do quickly right now, and exploits based on it will very likely take people by surprise in the same way that this one has... even those of us who saw it coming.  It will be a weird, unsettling feeling when these classical cryptography algorithms, which everyone trusts so casually right now, start actually being compromised.	macawfish	9.799927	-5.5965447	comment	4.0	28.0	1515123441	-5.6831183
16076699	Xen Project Spectre/Meltdown FAQ	Xen Project Spectre/Meltdown FAQ	r4um	9.7447605	-5.5540743	story	4.0	139.0	1515128933	8.065694
16077481	Intel PR monkeys are trying to take 	"Intel PR monkeys are trying to take AMD down with them, let's make this clear:For the 3 bugs, the biggest one only affect Intel CPUs, for bug 2 and 3:AMD bug only affects THE SAME PROCESS, unlike Intel, which allows exploits to cross processes:https://googleprojectzero.blogspot.com/2018/01/reading-privi...""As shown, AMD was only vulnerable to ""the ability to read data inside mis-speculated execution within the same process, without crossing any privilege boundaries."""	nukeop	9.448289	-5.3312626	comment	4.0	30.0	1515143254	7.741338
16080298	This is a good overview of modern, s	This is a good overview of modern, superscalar, out-of-order, speculative CPUs that literally any programmer could easily understand. Recommended reading for every single engineer in the whole world (who doesn't already understand this stuff from reading source material e.g., Google Zero post).	SomeHacker44	9.489018	-5.2347217	comment	4.0	27.0	1515175566	7.7131214
16080978	There's no reason to predict a branc	"There's no reason to predict a branch if you're not going to execute speculatively.I need to re-read the papers but I think the real problem isn't even speculative execution but allowing speculative cache changes.The notion that ""gadgets"" didn't even need to return properly was both amusing and eye opening for me. It doesn't matter because the result will be flushed anyway! ;-)"	phkahler	9.731378	-5.7236505	comment	4.0	12.0	1515180783	-6.7991834
16081322	Right, but at a cost of a leaky cach	Right, but at a cost of a leaky cache abstraction. Which is now hugely expensive to work around, making me question how that ever got approved if the security model was clearly leaking at that point (which has been known for the entirety of speculative execution, right?)	drb91	9.693388	-5.6254907	comment	4.0	20.0	1515183631	-6.7071557
16081426	This seems to contradict the previou	This seems to contradict the previous assertions that AMD CPUs aren't affected.	hlandau	9.335075	-5.208991	comment	4.0	15.0	1515184416	7.8513017
16082330	If you stay with a system that is as	If you stay with a system that is as open as possible from the lowest levels of the hardware to the highest level of the software, and if you airgap, and audiogap, and RF-gap the system permanently until it ceases to exist, you are pretty fine.Also, more practically, two computers with different ISA and underlying hardware that compute the exact same high level semantics, that don't know each other but transparently share the necessary hardware (for example hardware random number generator), talking to the world through a simple electronic checker, that stops the system if both computers don't communicate exactly the same information bit by bit, is also pretty safe, even if you use backdoored computers. Just make sure both computers don't contain identical backdoors (which is not that diff	madez	9.710354	-5.3130198	comment	4.0	25.0	1515191376	-7.7999606
16083256	This reads as if a poisoned CPU cach	This reads as if a poisoned CPU cache can indeed leak secrets and has been known for many years now? Am I reading that right?	esaym	9.88401	-5.6544905	comment	4.0	25.0	1515201947	8.093005
16082392	Potential Impact of Spectre on Proce	Potential Impact of Spectre on Processors in the Power family	newman314	9.602143	-5.5530286	story	4.0	173.0	1515191893	7.701607
16082629	It's not all that hopeless, actually	"It's not all that hopeless, actually.Let's ignore meltdown, which seems solvable in hardware with no obvious performance loss (assuming amd's existence proof is correct), and concentrate on spectre, which everyone thinks means the world is ending.One thing to note is that compilers have been safely speculating instructions for years. Shocking, i know :)
Processors could too.They just weren't.
One of the cardinal rules of safe speculation is that you can't speculate an instruction unless you can prove it has no observable side-effects (ie possibly faulting, or in this case, ending up in cache), or that the side-effects are the precisely the same whether you speculate it or not (where ""precisely the same"" generally includes some notion of ordering of side-effect occurrence. i'm not going to "	DannyBee	9.6331625	-5.5641446	comment	4.0	23.0	1515194169	7.7017875
16082670	> I'm happy because it's gonna have 	"> I'm happy because it's gonna have to change. Whole stack revisited. Eventually.I used to believe this kind of thing, but now I think you greatly underestimate human indifference and interest in effort conservation (uncharitably called ""laziness"").Look at Intel's response to Spectre/Meltdown. Are they going back and redesigning their microarchitecture with new hardware-enforced safety rings [that actually enforce, lol] and new ways to block timing attacks without sacrificing performance? Seriously doubt it. From LKML it sounds like they're just going to hardware-accelerate IBRS/IBPB to make it faster to shut down branch prediction in risky situations and leave the rest of the shebang as-is.Even when the forecasted apocalyptic events occur, it's amazing how little anyone cares, or how litt"	cookiecaper	9.632974	-5.5010896	comment	4.0	15.0	1515194611	7.803137
16082890	I just finished up a senior Computer	I just finished up a senior Computer Architecture class last term and a flavor of this was a popular question for past exams.For a more fun answer than an exam, consider that the real estate on a CPU is typically dominated by two things, cache and out-of-order speculation hardware(predictors and such). Then, turning off speculative execution would be like turning off a third of your CPU. As to the actual performance impact, it'd be massive. There's a reason why no modern processor is in-order.	Everlag	9.694895	-5.6377697	comment	4.0	13.0	1515197200	-6.6993055
16084928	If, as you say, AMD is not affected 	If, as you say, AMD is not affected by Meltdown unlike Intel, will this significantly change the server market? Excuse the pun, but would this make e.g. AMD EPYC a lot more attractive for such data centers?	imjasonmiller	9.323545	-5.2829385	comment	4.0	17.0	1515240511	7.8074346
16085761	Hi I'm a mostly average Linux user j	"Hi I'm a mostly average Linux user just now learning about these hardware vulnerabilities as I'm planning on building a new computer. What new processor should I buy that has the best chance of being safe when all this dust clears?
I first posted this question on a thread about Intel ME. Have processors always been this tricky security-wise or are these low level exploits we're finding a recent phenomena?"	tomkat0789	9.420031	-5.2324557	comment	4.0	17.0	1515254272	7.8609023
16084901	Err, what? You can't get root access	Err, what? You can't get root access or escape a chroot from being able to read arbitrary memory.	angelsl	9.7644005	-6.4363785	comment	4.0	12.0	1515239858	-13.997695
16084617	Founder of GenodeLabs OS framework d	Founder of GenodeLabs OS framework discusses impact of Meltdown/Spectre attacks	DyslexicAtheist	9.632408	-5.570265	story	4.0	58.0	1515232621	7.9161754
16089616	Neither the article nor the title im	Neither the article nor the title imply that. They are saying open is better, colaborative is better, and that RISCV is a chance to start over with security at the forefront.	jeffdavis	9.37306	-5.683859	comment	4.0	20.0	1515306968	-10.628069
16089571	Okay, I'm all for RISC-V, but this m	Okay, I'm all for RISC-V, but this makes no sense, RISC-V isn't magically immune to spectre for no reason.	deepnotderp	9.425705	-5.7110076	comment	4.0	33.0	1515306133	-10.575466
16089922	The Meltdown and Spectre attacks req	The Meltdown and Spectre attacks require code execution on your local machine. You can avoid both the Meltdown and Spectre attacks by not downloading and running untrusted software.The Javascript attack vector for Spectre will be patched by browser vendors.If you operate safe computing practices it is unlikely you will be hit by  either the Meltdown or Spectre attacks.	Pilfer	9.708606	-5.6077065	comment	4.0	20.0	1515314253	7.5655637
16090134	The cynic in me is amazed how people	The cynic in me is amazed how people complain about a loss of 0-30% in performance on the desktop (depending on the workload), but are completely happy to replace native applications by Electron applications and/or web applications. Of course, these may be disjoint sets of people.I think when it comes to most desktop workloads, the security issues are far more interesting and serious. And while Meltdown only affects Intel CPUs, Spectre affects all (?) out-of-order CPUs and there may be more/more effictive attacks in the future. So every fast, modern CPU is pretty much in the same boat and it will take some time for the dust to settle.So, I would just stick with the Intel CPU. You can vote with your wallet once one vendor decides to axe ME/PSP and/or properly mitigates Spectre-type attacks 	danieldk	9.542125	-5.4408326	comment	4.0	14.0	1515318871	7.8602786
16103069	Well, most every CPU was affected no	Well, most every CPU was affected not just Intel’s. If I were Intel’s CEO my primary motivation for selling would be NVIDIA and ARM, not this exploit.	omarforgotpwd	9.372653	-5.1983175	comment	4.0	15.0	1515465466	7.7560744
16105389	Having read the tech reports myself,	"Having read the tech reports myself, the interviewee on the Bloomberg report seemed to be most sensible talking head I've yet seen in the media. While most of the press are shouting that we're all pwned and it's Intel's fault or Apple's fault, or whoever, I'm of the opinion that this is one seriously difficult bug to exploit.The speculative branch predication vulnerability seems to basically depend on finding a specific instruction sequence in the target code and then going to some extraordinary lengths to exploit it via a highly convoluted side-channel.My first thought when I started to appreciate the technical details were that this was a Bletchley Park level of exploit, or ""nation state"" as the man in the interview said. And whilst it's completely possible that the exploit could be pack"	3chelon	9.741626	-5.5974593	comment	4.0	25.0	1515498372	-6.5148745
16109747	the first approach sounds kind of ex	the first approach sounds kind of expensive to be done at the cpu level. I like your second one better. thank you!	martin1975	9.730866	-5.2518167	comment	4.0	31.0	1515529973	8.098508
16109076	Ask HN: Why CPU manufacturers did no	Ask HN: Why CPU manufacturers did not foresee Meltdown?	rwx------	9.452456	-5.2910275	story	4.0	26.0	1515526356	7.879191
16110873	How does one patch a CPU?Does the up	"How does one patch a CPU?Does the update come in the form of a BIOS update? If so, then the patch still has to travel through the PC manufacturers, like when Google patches Android. Or can it be somehow applied directly?Edit: Apparently the OS can update the CPU's microcode. No need for BIOS updates. It was even done in the past. For instance, an unrelated Windows Vista update that updates microcode: 
https://support.microsoft.com/en-us/help/936357/a-microcode-..."	maltalex	9.5965395	-5.3506556	comment	4.0	42.0	1515537786	7.7807693
16110932	Yeah, well, let's not break out the 	Yeah, well, let's not break out the champagne yet. According to your link:> The BIOS (or UEFI) updates the CPU microcode during boot, however most of the time either the motherboard vendor won't issue frequent BIOS/UEFI updates, or the user won't install such updates. For these reasons, the system processor is likely to be running with outdated microcode on a vast number of systems.We still need the various manufacturers to release a BIOS version for a bunch of hardware they manufactured years ago. I'm not sure that's going to happen, at least not quickly.	maltalex	9.621373	-5.3047724	comment	4.0	18.0	1515538267	7.754474
16110972	> Very disingenuous of Intel thoThis	> Very disingenuous of Intel thoThis crisis has taken Intel, in my mind, from an American behemoth at the vanguard of technology to a sclerotic overgrown mess. Bugs happen, crises happen. When you're a $200 billion company, those mistakes scale deafeningly. The bugs are unfortunate, but not unreasonable.Intel's communication, however, from the first press release to crap like this, has been disingenuous to the point that it arouses suspicion. Why are they being dishonest? Is there something more to be discovered? What else have they lied about?Textbook case of PR and IR incompetence.	JumpCrisscross	9.309035	-5.1969543	comment	4.0	21.0	1515538574	7.7291174
16111025	Latest version on downloadcenter.int	Latest version on downloadcenter.intel.com is 20171117; no microcode update has been published since Spectre/Meltdown have been disclosed.edit: see below, not true; they haven't published it on their own site but have pushed microcode updates to redhat.	nickysielicki	9.55078	-5.381377	comment	4.0	12.0	1515539279	7.751523
16111029	This is only Spectre, not Meltdown. 	This is only Spectre, not Meltdown.  Meltdown requires KPTI, which depends on your OS.  For OSs that did not enjoy months of advanced disclosure (which is: any OS that isn't Windows, MacOS or mainline Linux), that work is ongoing and will depend on the OS.  (Speaking for SmartOS/illumos, that work is reasonably far along and making promising progress -- but we don't yet have a functional prototype.)As for Spectre, these are just the microcode updates that have the additional MSRs that allow system software to mitigate certain variants of Spectre attack against the system software itself.  They are necessary, but emphatically not sufficient -- and it would disingenuous for Intel to pretend that this in any way means that 90% of systems are protected from Meltdown and Spectre.	bcantrill	9.646854	-5.550491	comment	4.0	32.0	1515539295	7.8254104
16118371	This might sound dumb but.. with the	This might sound dumb but.. with these Meltdown + Spectre bugs would an attacker be able to penetrate to gain full access only if a user downloads a native app or would it be possible through the browser/js?	tn_	9.724886	-5.6100097	comment	4.0	12.0	1515614064	7.5465612
16118511	Wait...Acorn as in 'Acorn RISC Machi	Wait...Acorn as in 'Acorn RISC Machine'/ARM? I didn't know they made actual consumer hardware, that's pretty cool. Sort of funny that the modern BBC Micro:bit went on to run on a Cortex-M0 core.I also kind of love that the BBC's learning hardware calls its method of routing instructions to coprocessors 'The Tube'.	leggomylibro	9.5475025	-5.1989202	comment	4.0	15.0	1515614781	-7.791044
16123124	Detecting Spectre and Meltdown Using	Detecting Spectre and Meltdown Using Hardware Performance Counters	DyslexicAtheist	9.632869	-5.5624604	story	4.0	105.0	1515672356	7.784524
16125456	Time leaks are not fundamental to co	Time leaks are not fundamental to computing. They can be fundamental to running concurrent adversarial processes on the same core, though.Indeed, having no speculative execution, or just having caches separated by trust domains, would make Spectre impossible. This would make the whole promise of 'securely virtualized hardware' largely disappear, though. For guaranteed isolation, you'd have to have a physical core (or set of cores) per trust domain.With trust domains sliced pretty thinly, e.g. a domain per JS-executing web page, it's hard. AFAICT, reseting the caches when switching processes (that is, trust domains) sort of mitigates this attack at a relative low cost, a performance hit instead of having to replace the CPU.	nine_k	9.717304	-5.617447	comment	4.0	23.0	1515690127	7.7225823
16132523	Ask HN: Is the Mill CPU Vulnerable t	Ask HN: Is the Mill CPU Vulnerable to Spectre?	runeks	9.561128	-5.2278337	story	4.0	27.0	1515762538	-7.7098417
16131438	I'm missing two smiley icons:-big hy	I'm missing two smiley icons:-big hypocritical smile-not impressedAnd I'm missing the option to create and send my own emoticons as SVG.	amelius	9.799431	-6.2572727	comment	4.0	18.0	1515746947	-13.937717
16138362	This brings to mind articles and dis	"This brings to mind articles and discussions I read in the early 90s about differences in performance between running in real (or ""unreal"") mode and protected mode --- yes, the extra permission checks, paging, segmentation, etc. definitely add some overhead:https://groups.google.com/d/topic/comp.lang.asm.x86/YbQJ_m0d...Thus they decided to do permissions checking in parallel with other operations, leading to Spectre. It's interesting to note that the original intent of protected mode was not as a real secure ""security feature"" immune from all attacks, but more to provide some isolation to guard against accidents and expand the available address space. The entire Win9x series of OSs embody this principle.What would the TempleOS of CPUs look like, I wonder?x86 running in unreal mode might be"	userbinator	9.699241	-5.4418488	comment	4.0	25.0	1515820532	7.8378997
16138431	AMD is no more lucky than ARM, thoug	AMD is no more lucky than ARM, though Intel was ‘unlucky’: Spectre affects Intel, AMD, and ARM alike, while Meltdown Intel CPUs disproportionately (AMD and ARM CPUs have been mostly unaffected by it).	electrograv	9.435373	-5.401933	comment	4.0	18.0	1515822017	7.750476
16138281	Enter Itanium.I mean, we know they a	"Enter Itanium.I mean, we know they are all saying ""arm"" and ""amd"" both as negotiating tactic as well as strategically diversifying microarchitectures.  That said, I'm not sure it's like amd can deliver more instructions per second per dollar.I wonder if it would make sense for some loads to prepare for Itanium usage, or even older Atom architectures?  Does any one deploy Itanium in the cloud?"	mc32	9.520863	-5.5149255	comment	4.0	16.0	1515817595	-7.7720757
16139299	Can someone who is more familiar wit	Can someone who is more familiar with Meltdown speculate on this? Is this a quick fix and is it likely to be optimised over time and become less slow? Or is this the raw trade-off and current hardware will always suffer slow-downs to this degree. Can an OS be rearchitected in ways that would mitigate the performance loss?	davej	9.590489	-5.4526	comment	4.0	16.0	1515845758	7.8757195
16140411	Pretty cool as a design like this sh	Pretty cool as a design like this should be able to better preserve old system behavior than what DOSBox etc. can achieve.Although it seems a bit slow side at 50 MHz, I guess it's not a pipelined design?Not that original 80186 was pipelined either. :)	vardump	9.828813	-5.256856	comment	4.0	21.0	1515865985	-7.6297903
16139792	I find it really unhelpful that thes	I find it really unhelpful that these 'threads' are being hyped with little reference to any sort of thread model, reasonable attack vector or probability. I do not want the kernel on my Arch laptop patched and slowed down to mitigate against issues that does not reasonably exist in the context of a laptop user.By all means patch my browser that runs random js. I'm not in the habit of downloading and running untrusted binaries - those that do have far greater problems than Meltdown or spectre already.Of course I want it patched on AWS, and my bank's backend machines, but you are now forcing me to continually pay, hour after hour, for insurance against a thread that I'm happy to not worry about.Do not steal my cycles to pay for 'security' I do not require.	ageofwant	9.780534	-5.6136208	comment	4.0	14.0	1515854998	8.144396
16153570	Mill CPU is Immune to Spectre, Meltd	Mill CPU is Immune to Spectre, Meltdown [pdf]	maxharris	9.546915	-5.5520673	story	4.0	49.0	1516051390	7.791514
16176092	To address Spectre, I assume these p	"To address Spectre, I assume these patches involve turning off speculative execution in some way. These various benchmarks that seem to show very little performance degradation after the patch should perhaps lead to the question ""why was the processor ever doing that in the first place if cutting it out barely affects performance?"".edit: And if its not turning off speculative execution, how is it addressing Spectre? Because I thought that was the only way."	codeulike	9.611589	-5.5278673	comment	4.0	23.0	1516272334	7.789252
16176652	Meltdown and Spectre with Matt Godbo	Meltdown and Spectre with Matt Godbolt [audio]	mariuz	9.605447	-5.5311484	story	4.0	54.0	1516279521	7.7413917
16185434	It seems every few years someone doe	"It seems every few years someone does this publicly, and then either gets DMCA'd or forgotten. Nonetheless, the extremely regular structure of FPGAs, along with the availability of official documentation (which basically explains everything but stops short of mentioning which bits control what) mean that it's not all that difficult of a problem to ""connect the dots"".As I've mentioned before, the bitstream formats are one of the worst-kept secrets in the industry. The only reason they aren't revealed more often is for legal, not technical reasons. I'd almost bet that a considerable number of those who work with FPGAs have figured out at least part of the structure and kept it to themselves."	userbinator	9.0919485	-5.371061	comment	4.0	14.0	1516361023	8.365011
16194122	I think that comparing the types of 	I think that comparing the types of bugs in Luu's post (which is excellent) and Spectre/Meltdown is a mistake. The former are mistakes caused by insufficient testing. The latter are conceptual problems that are nearly fundamental to modern processor design. No amount of simple testing would have uncovered them.	harryh	9.594021	-5.5102367	comment	4.0	50.0	1516468332	7.814184
17867843	> works up to 75MHzHow much would th	> works up to 75MHzHow much would this increase if it used an ASIC instead of FPGA? And how much would it cost for different batch-sizes?	amelius	9.067621	-5.326755	comment	4.0	15.0	1535547506	-2.7426124
17878193	Except Intel + mitigations still muc	Except Intel + mitigations still much faster on most workloads than AMD without mitigations.	vlovich123	9.294209	-5.193241	comment	4.0	20.0	1535647602	7.844338
17880619	What is the current status of this? 	What is the current status of this? The last time I heard, the OS fixes would impact CPU performance by 30%. Is this still the case? Will new iterations of Intel CPUs be immune to this, or is this an ongoing issue going forward because it's inherent with the architecture?	docker_up	9.514034	-5.252956	comment	4.0	12.0	1535662149	7.8210793
17881650	I worked on the Meltdown mitigations	"I worked on the Meltdown mitigations, at Intel, during the embargo.  I still work on Linux at Intel.Intel told quite a few members of the Linux community about this well before late December.  Some got told because they work for traditional distributions and others were contacted directly because they are community maintainers or subject matter experts.Unfortunately, Greg was not one of those folks that was told early.  It's pretty clear at this point that it would have been a lot better had he and folks like him been involved earlier.  This is especially true for Greg since he plays such a crucial role in stable kernel maintenance, which is how a lot of the world consumes their kernels (including distros like Debian).I'm glad Greg thinks ""Intel has gotten better at this.""  I'd like to thi"	hansendc	9.56258	-5.4604573	comment	4.0	21.0	1535670908	7.855692
17906509	Hacking into a CPU’S Microcode (2017	Hacking into a CPU’S Microcode (2017)	peter_d_sherman	9.641935	-5.370121	story	4.0	117.0	1536033012	-7.0447516
17911221	How does one go about developing on 	How does one go about developing on an FPGA (i'm an absolute noob familiar only with Arduinos and ESPs)Are there any go-to IDEs that everyone uses? Resources/tutorials towards a `blinkenlights 101` project that are especially useful?Edit: thank you all for the very excellent answers! I'm going to lose so much productivity over this!	isoprophlex	9.071112	-5.36805	comment	4.0	15.0	1536083700	8.425369
17936624	I'm no CPU engineer, but this smells	"I'm no CPU engineer, but this smells like some sort of chip-level macro function that cuts edges even more than the spectre/meltdown issue.I remember joke opcodes back in the day. One was ""Halt and catch fire"". Is that seriously what this is doing?"	crankylinuxuser	9.677034	-5.554269	comment	4.0	21.0	1536345522	7.7283688
17936650	> cuts edges even more than the spec	> cuts edges even more than the spectre/meltdown issue.Indeed. If you have some piece of code in a different security context that conditionally executes a heavy instruction based on a decision made over some sensitive data, doesn't this provide a way to obtain information about that data?	kazinator	9.641824	-5.5812893	comment	4.0	12.0	1536345817	7.8038554
17936769	This post cites sources that activel	"This post cites sources that actively contradict the points it attempts to make. It provides a wealth of useful aggregation of information against the points it makes.Let's us begin    However, there are also deterministic frequency 
    reductions based specifically on which instructions you
    use and on how many cores are active (downclocking).

As you are likely using AVX-512 in a cloud deployment you don't have access to any of the information, and are likely sharing that hardware who may not respect the same engineering rigor.Also, nobody setting there CPU affinity to ensure the down-clocking stays on a single core. You have to pray the scheduler doesn't shuffle your workload around. This requires a lot of platform specific C and most people are writing Java/Go/Ruby/Python where doi"	valarauca1	9.542007	-5.5051684	comment	4.0	16.0	1536346687	8.134307
17969001	>Your standard Windows 10 options ar	">Your standard Windows 10 options are Pro . . .Oh how quaint. Do you have a Ryzen CPU? If so you're leaving performance on the table, because core complexes are internally implemented as NUMA nodes. Windows 10 Pro does not ship with a NUMA aware scheduler. If you want that you're looking at $300[1] for Windows 10 Pro for Workstations. -- Personally I would not consider Pro a ""standard"" option since it doesn't work w/ ~40%[2] of new CPUs sold.[1]: https://www.microsoft.com/en-us/p/windows-10-pro-for-worksta...[2]: https://cdn.wccftech.com/wp-content/uploads/2018/08/Intel-AM..."	drbawb	9.430469	-5.198308	comment	4.0	12.0	1536761875	7.9776797
17988906	Intel is obviously going to use the 	Intel is obviously going to use the x86 core they own so they don't have to pay license fees for embedded ARM cores	nimish	9.511628	-5.2605114	comment	4.0	19.0	1536944647	7.7654214
18001102	People can be ruthless without being	"People can be ruthless without being abusive. Linus had effectively ultimate power over the kernel for quite some time, so he could have said things like:""I disagree with this patch and I'm not going to merge it. It does these things wrong, and this line of reasoning makes no sense. Change these things and explain the reasoning behind this and I'll look at it again.""Most of his rants that I've read could have been summarized by that without including any personal attacks."	cowmoo728	9.323483	-5.871381	comment	4.0	54.0	1537131954	4.257695
18001388	Same. Linus always called a spade a 	Same. Linus always called a spade a spade, and I always respected that. In a culture where the Overton window has shrunk considerably and people habitually hide their thoughts, I think this kind of attitude is more important, not less. People give up ability to say certain things in the name of inclusion, and then lose ability to think those things in the first place.I'll take an asshole over a pushover any day, and most of us are pushovers.	coffeemug	9.273897	-5.8955603	comment	4.0	66.0	1537134985	4.247226
18001406	"Saying that ""Linus has advocated phy"	"Saying that ""Linus has advocated physical abuse"" based on that statement is completely disingenuous. It's an absurd interpretation. It was obviously humor and it wasn't insulting either.There are several cases where Linus went way over the top with insults, but throwing him under the bus because of that statement is ridiculous.That's the whole problem with these CoCs, if people get to apply the most uncharitable interpretation of any statement, we can't have anything but extremely formalized conversation, lest we run the risk of getting kicked out because someone who doesn't like us misrepresented our words."	zeroname	9.274565	-5.8928747	comment	4.0	16.0	1537135184	4.2971034
18002604	Is anyone really rallied to the caus	Is anyone really rallied to the cause by Linus himself? I think the product is the only real draw. With the exception of a select few that simply want to work with someone as high profile and legendary as Linus.	jjeaff	9.302566	-5.8688087	comment	4.0	73.0	1537149384	4.2951174
18004438	I can't see anything wrong with the 	"I can't see anything wrong with the Code of Conduct. Some people call it ""toxic"" and they are afraid of the ""SWJs"" taking over. This is only a problem if you try to loose focus on the quality of the work.Some argue that now that Linus realized how his communication is received sometimes, he will suddenly not be able anymore to tell people when shitty code is shitty. There are a billion ways to tell somebody their code is shitty with out attacking the person themselves, some of which might even make them realize that you are right. And Linus certainly didn't sound like he doesn't care about the kernel anymore.IMO the Code of Conduct has nothing irrational or outrageous in it:* don't be sexist (you can critique someones code without making it about their gender or gender identity)* don't be "	atoav	9.276255	-5.883212	comment	4.0	19.0	1537177668	4.2217913
18023771	Can Microsoft plant backdoor on Linu	Can Microsoft plant backdoor on Linux source in GitHub secretly?	CoderCV	9.380504	-5.8490543	story	4.0	6.0	1537361310	-8.19794
18048559	SPIM: A MIPS32 Simulator	SPIM: A MIPS32 Simulator	lainon	9.639253	-5.308667	story	4.0	66.0	1537659160	-7.104874
18059169	Does this do any sort of FEC? One of	"Does this do any sort of FEC? One of the things that makes stuff like this tricky(and APRS in general) is that one flipped bit throws off the whole decode.From what I've seen out there would be a 40% improvement[1] in just base APRS if there was some form of basic FEC built into the protocol. Sadly most of ""state of the art"" is stuck back in the 80s.[1] http://eludium.stensat.org/mcguire/projects/FX-25/FX-25_perf..."	vvanders	9.918961	-5.743223	comment	4.0	17.0	1537807606	7.656022
18059194	I wonder if FPGAs would make good cr	I wonder if FPGAs would make good crypto devices, e.g. for disk encryption? If you implement AES on an FPGA, is it fast enough to keep up with at least a SATA 3 SSD?	floatboth	9.147427	-5.355657	comment	4.0	18.0	1537807789	8.326745
18061036	I too decry the lack of openness wit	"I too decry the lack of openness with respect to the data file encoding which would allow for more open source tools to be created. I had a hilarious discussion with Xilinx's VP of tools about this[1].The interesting thing about HDLs and HDL work flows is that they can ""look"" like software and yet not be software. VHDL and Verilog are the only ""languages"" I know where you can write something that is both syntactically correct and cannot by inferred into logic by the synthesis part of the tool (equivalent of the code generator in a compiler). I am not aware of any equivalent to the Turing definition of computability which would prove for any legal construct in language X there was an implementation of synchronous logic Y that could implement it. Most of the bugs are easy to avoid once you k"	ChuckMcM	9.108228	-5.4970384	comment	4.0	30.0	1537820235	8.566503
18078256	Though generally, mimicking imperati	Though generally, mimicking imperative languages (C and Ada for Verilog and VHDL respectively) is just such a bad fit for the massively parallel, circuit combining nature of FPGAs.For my private projects (admittedly the only setting I currently use FPGAs for), I’ve since discovered clash, which is essentially Haskell for FPGAs, and am impressed how much more productive I am, how much abstraction a more fitting paradigm opens up, and how much more terse and readable the code is as a result.I came about searching for an alternative when I got fed up with reimplement the same AXI protocol schemes over and over again, mostly through slightly altered cut and paste, and have instead slowly been building my own library of commonly used patterns and AXI protocol abstractions.However, the one thing	anyfoo	9.125559	-5.529911	comment	4.0	23.0	1537982915	8.678058
18077005	Designing a RISC-V CPU in VHDL: Arty	Designing a RISC-V CPU in VHDL: Arty S7 RPU SoC	matt_d	9.389426	-5.6702256	story	4.0	80.0	1537976184	-10.538778
18084139	Anyone else get a chuckle that out o	"Anyone else get a chuckle that out of the myriad of relevant quotes, the author selected, ""He... once [described] an Intel fix as 'complete and utter garbage'"".Good for Linus, I'm happy that he's not looking to adjust his technical expectations:""technically wrong is still technically wrong, and I won't start accepting bad code just to make people feel better about themselves."""	davidkuhta	9.314152	-5.8172975	comment	4.0	23.0	1538054365	4.2131925
18109008	65536 was a lot when I first got int	65536 was a lot when I first got into programming, there was also floating point, and then the realization that we don't need to be constrained to 4 bits, 8 bits, 16 bits, 24 bits, 32 bits, 64 bits, 128 bits, two digit years, 640K of RAM, small stack frames, broken memory models and all the other ridiculous limits.  Give it a decade and I bet the ~585 year time frame is reduced to a small enough interval where bugs appear.  Bet on lots of 64-bit bugs appearing, and a programmer in the future commenting that 128-bits should have been used, and 128-bits will break in the future of that future, and so on.For me, the biggest bug in the modern x86 chip is ME: a full system that can be turned on, take over everything and eats up valuable core space.	mmphosis	9.911948	-5.5354695	comment	4.0	12.0	1538349357	-7.6671314
18126638	Exactly. Remember Intel ME is a grea	Exactly. Remember Intel ME is a great utility and has some awesome abilities. The issue that people have is not the fact there is a CPU running another CPU that looks after the main one. It's that it's closed source and has remote control capabilities that can not be controlled by the user.If Intel would just allow an owner to build and flash their own Intel ME version using their own private/public keys then no one would have an issue with that. It's the fact it's a secret closed system that has full control to monitor everything you do, and can not be fully disabled.	turblety	9.495067	-5.215879	comment	4.0	32.0	1538524231	7.789999
18138515	  5. When a server was installed and	"  5. When a server was installed and 
     switched on, the microchip altered 
     the operating system’s core so it 
     could accept modifications. The chip 
     could also contact computers controlled 
     by the attackers in search of further 
     instructions and code.

So, in typical vulnerability/payload/exploit fashion, the board's bus is vulnerable by default, because the chip pierces all the usual lines of defense protecting against network and operator I/O. It carries a payload intended to target very common features used everywhere commodity servers are used, one that likely listens for DMA traffic on the bus, and alters the signal stream, by escaping upon the occurrence of a magic sequence, and inserting its own signal, before resuming the authentic stream in flight.The p"	newsDerp	9.695579	-5.2341638	comment	4.0	30.0	1538647523	-6.3641653
18138827	PicoRV32[0] targets some extremely l	PicoRV32[0] targets some extremely low spec FPGAs.  I have it running on ridiculously small and cheap FPGA[1] that has 8k LUTs and cost me £41 including tax and next day delivery.However I repeat what I said above: hobbyists are free to design their own instruction sets, and good on them![0] https://github.com/cliffordwolf/picorv32[1] https://rwmj.wordpress.com/2018/03/17/playing-with-picorv32-... https://rwmj.wordpress.com/2018/03/18/playing-with-picorv32-...	rwmj	9.2246685	-5.388406	comment	4.0	14.0	1538651468	8.42209
18139706	I'm curious, is there any commercial	I'm curious, is there any commercial application for running Linux on a CPU implemented in FPGA, as opposed to any (presumably cheaper and faster) normal CPU? Some kind of custom modification this would allow you to make?I've always thought of FPGA's as being for custom parallel computationally intensive tasks that run side-by-side with a normal CPU. So just curious if ZipCPU is just for fun, or something more?(Or is there even something security-related about being able to verify not just the code, but the CPU it runs on, in this case?)	crazygringo	9.136722	-5.3536754	comment	4.0	23.0	1538660028	8.301585
18147949	Does anyone know why they are using 	"Does anyone know why they are using Xeon processors instead of the AMD Threadripper? Is it the support for ECC memory? If so, why is it that so important?Example:
https://www.pugetsystems.com/nav/peak/tower_single/customize..."	mychael	9.390982	-5.3040113	comment	4.0	18.0	1538746385	8.106439
18150185	That's part of it, but doesn't fully	That's part of it, but doesn't fully answer the question. Decoding and issuing 6 instructions per cycle ordinarily is extremely costly in terms of power. And it's usually very hard to keep those execution units busy--it's hard to find six independent instructions to issue every clock cycle. How Apple built a 6-wide CPU within that power envelope, and optimized the compiler to actually use that IPC is the really interesting question.On a Xeon v3 core, SPECint averages below 2 instructions per cycle: https://www.researchgate.net/publication/322745869_A_Workloa.... How does Apple beat Intel on branch integer benchmarks like 403.gcc by a factor of two per clock?	rayiner	9.666319	-5.368384	comment	4.0	20.0	1538762000	7.8792696
18169160	Yeah, this looks very underwhelming.	"Yeah, this looks very underwhelming. I also think you're letting them off too easy with ""too early to expect a Spectre/Meltdown fix"".This is a critical security bug that was discovered over a year ago. Intel just ignoring the problem and casually releasing yet another (underwhelming) upgrade that doesn't address it all...The fact anyone accepts that just goes to show how low our expectations have dipped when it comes to Intel."	dunpeal	9.561555	-5.477447	comment	4.0	17.0	1539018267	7.799277
18169772	Gaming has not been single-threaded 	Gaming has not been single-threaded for a while, even on mobile.	mtgx	9.91209	-5.654995	comment	4.0	20.0	1539021974	8.366271
18182332	That's all well and good. But none o	"That's all well and good. But none of it explains why the author says the current changes taking place in the Linux project reinforce her decision not to participate in Linux.How does a code of conduct and a hiatus for the guy who was cursing at people reinforce the decision to stay away? The only way that makes sense is if she weren't previously aware of any of the documented cases of Linus' abusive behavior, and that seems quite unlikely given she was already using her own ""shadow ecosystem"" years ago."	jancsika	9.336147	-5.862709	comment	4.0	15.0	1539150704	4.19415
18224743	I'm concerned that the many RISC-V p	I'm concerned that the many RISC-V projects seem to be stalling, I'd love to be convinced otherwise?* It's been almost 2 years since SiFive released their arduino-ish dev board and it hasn't been updated, surely there are huge gains in 2 years in such a fledgling ecosystem? I feel this is important because this board seems the obvious entry point into the RISC-V ecosystem for enthusiasts.* The 'BOOM' processor which showed many efficiency gains doesn't seem to be getting anywhere further than last time i checked on it which was perhaps a year or more ago. -edit- looking on their github releases, 2.1 was 6mo ago, and 2.1.1 was recent but shows minor changes, the project unfortunately looks stalled to me.* LowRISC which has one or two of the RaspberryPi co-founders on board, which seems to b	chubs	9.371533	-5.68922	comment	4.0	15.0	1539644244	-10.55073
18250134	There are some missing I/O things in	There are some missing I/O things involving DMA.In the old days, DMA from (say) a PCI device would go directly to and from DRAM.  This incurs a high latency if the CPU needs to access this data.Network processors found a simple solution: DMA goes to the cache, not the DRAM.  This reduces the I/O latency to the processor and simplifies I/O coherency.  I know Cavium's NPs rely on this.Intel picked this up for server and desktop processors once both the memory controller and PCIe were integrated on the same die.  They called it DDIO:https://www.intel.com/content/www/us/en/io/data-direct-i-o-t...You can support 100 G Ethernet with Intel Xeon processors these days due to this.Another story is how DMA in the x86 world is cache coherent (no need to use uncached memory or flush before starting an 	jhallenworld	9.844621	-5.2649255	comment	4.0	17.0	1539882806	-7.694201
18263295	Heavy use of complex AVX2 operations	Heavy use of complex AVX2 operations causes downclocking, too, but typically less so than AVX-512. More details are documented in https://en.wikichip.org/wiki/intel/frequency_behavior -- also see e.g. https://en.wikichip.org/wiki/intel/xeon_gold/6138#Frequencie... for an example how the frequencies differ depending on the number of active cores.I think the reason for reducing clock speed when vector units are in heavy use is to keep power usage in check.You might also find https://blog.cloudflare.com/on-the-dangers-of-intels-frequen... helpful, which goes into detail about a specific case where dynamic frequency scaling resulted in AVX-512 code running slower than AVX2 code.	lorenzhs	9.436625	-5.509555	comment	4.0	12.0	1540043448	8.047015
18264129	Unnecessary in the general case.RDTS	"Unnecessary in the general case.RDTSC is the assembly instruction needed to read the current timestamp for the current core (not necessarily synchronized to the whole system). Modern RDTSCs do NOT read the cycle-count, because frequencies change due to ""Turbo Boosts"" and other such optimizations. (See here for more details: https://randomascii.wordpress.com/2011/07/29/rdtsc-in-the-ag...)A modern RDTSC reads at the ""base clock"". If your base clock is 3.6 GHz, the RDTSC ticks at 3.6GHz (even if your processor can turbo to 4GHz or 5GHz like the i9-9900k). So RDTSC is not the same from processor-to-processor, but it is consistently the most granular micro-benchmarking clock available on x86 systems.The main issue with RDTSC is that task-switches may cause your thread of execution to change cor"	dragontamer	9.518141	-5.251596	comment	4.0	12.0	1540054479	7.605185
18273361	Linus may have been sincere in his w	Linus may have been sincere in his writing, people saw him as this verbally abusive boogeyman who would tear people apart, which led him to become that type of person more and more.The embrace and extend going on over in Redmond right now is threatening though, what better time to use your clout and power over a competitors org (that your a member of now) than when you have forked what depended on their software, extended it to work on your platform, and now want to take the wind out of their sails.The recent reaction from Valve is telling, I think Gabe is fearful about the current state of affairs. We really don't know all the pieces of this puzzle though, so best to watch our backs. Avoid vendor lock-in, its the devil.	metildaa	9.320576	-5.8577623	comment	4.0	20.0	1540201939	4.357148
18275874	Propeller microcontroller uses dedic	Propeller microcontroller uses dedicated cores instead of interrupts.	anonymfus	9.627826	-5.37612	comment	4.0	15.0	1540224598	8.027118
18281989	Some issues with this project:- non 	"Some issues with this project:- non static and non namespaced global variable EMOJIS (should be inside the emojize method or at least in the namespace)- lack of STL use, that std::string replacing code doesn't look very ""modern"" at all- complete lack of unit tests- README has unsupported emojis under the ""supported"" header"	speps	9.840688	-6.2644663	comment	4.0	16.0	1540287340	-13.959034
18321937	IBM Nears Deal to Acquire Red Hat	IBM Nears Deal to Acquire Red Hat	Immortalin	9.934455	-5.474802	story	4.0	294.0	1540750099	-9.476956
18324053	I would attribute the weird FPGA dev	I would attribute the weird FPGA dev attitudes to Stockholm syndrome. I always get the most mind boggling replies in defense of the evil vendors when I criticize FPGA’s embarrassingly small amount of freedom.> [black box components] often have been validated much more than anything you can write and may be much smaller or lower power than you would naively write.Sure but if an entire community was validating and improving these common components, they’d be way better still. (See gcc/llvm, linux, git, etc).	davemp	9.078	-5.3652086	comment	4.0	27.0	1540772155	8.357563
18323223	On acquisitions, I can offer the ane	"On acquisitions, I can offer the anecdote of a friend working at a startup IBM purchased.Things started with ""IBM loves you, and pledges to stay hands off and help you do what you're already doing"", continued to ""We're going to replace a few management positions with folks from IBM"" and ""We're changing some benefits, titles, and procedures to better align with The IBM Way"", and finally ended up with ""You aren't meeting your sales targets, so we're going to overhaul your leadership.""Admittedly, this was a much smaller company than Red Hat. But they were profitable before being bought and had a respected product and growth."	ethbro	9.913151	-5.4438906	comment	4.0	23.0	1540761165	-9.4187765
18328749	A lot of ink spilled to reach these 	A lot of ink spilled to reach these conclusions:> one of the most important takeaways from the Red Hat acquisition is the admission that IBM’s public cloud efforts are effectively dead> while IBM will certainly be happy to have the company’s cash-generating RHEL subscription business, the real prize is Openshift, a software suite for building and managing Kubernetes containers> IBM is betting it can again provide the solution [to cloud lock-in], combining with Red Hat to build products that will seamlessly bridge private data centers and all of the public cloudsTo sum up - IBM lost the hardware cloud wars and is making big bets on cloud software. The author doesn't answer the key question posed at the end - does the problem of cloud vendor lock-in actually exist (and the implied question -	roymurdock	9.9115095	-5.3844595	comment	4.0	30.0	1540830391	-9.383842
18333842	Does anyone want to work on a VHDL/V	"Does anyone want to work on a VHDL/Verilog parser for a mixed language (delta time) simulator?FOSS needs that more than it needs yet another ""high level"" language with no industry uptake."	analognoise	9.113771	-5.4949555	comment	4.0	21.0	1540870414	8.57004
18337395	I’m glad I’m not the only one. When 	I’m glad I’m not the only one. When I inherited some “production notebooks” (if that’s a thing) I couldn’t believe it was nearly impossible to do basic things such as test and review changes (via version control).	dev_dull	8.911683	-6.357501	comment	4.0	16.0	1540912879	-11.530591
18348407	Is there are a reason to not just us	Is there are a reason to not just use DRAM along with a battery to achieve the same persistence but as fast as DRAM?	devit	9.795157	-5.3276863	comment	4.0	19.0	1541012745	8.047363
18364080	I don't understand the hype around R	I don't understand the hype around RISC-V. The single most important bottleneck in general Computing nowadays is memory latency. However code density of RISC-V is absolutely underwhelming and does not even beat ARM-Thumb which is literally decades old.If it has to be RISC and open why not using something that already has an existing infrastructure and is well established. E.g. Fully open source implementations of the SPARC architecture exist for a long time already.	sprash	9.396364	-5.677044	comment	4.0	19.0	1541174750	-10.564352
18364487	"> ""This is the main reason we releas"	"> ""This is the main reason we released the exploit -- to show how reproducible it is,"" Brumley told us, ""and help to kill off the SMT trend in chips.""Maybe what we should be killing off instead is exporting everything to the cloud and running untrusted native code willy nilly."	rayiner	9.6546335	-5.324305	comment	4.0	22.0	1541176994	7.8712068
18372749	OUP/M: CP/M-like operating system fo	OUP/M: CP/M-like operating system for 6502	ingve	9.727798	-5.2791452	story	4.0	83.0	1541282691	-7.609807
18390166	L1 and L2 (IIRC) are usually tied to	L1 and L2 (IIRC) are usually tied to a single physical core and, also IIRC, are partitioned between logical cores when HT is enabled. With HT disabled, cache per logical core doubles (because there is only one) and cache misses go down. Many HPC installs run with HT disabled because of that (YMMV depending on specifics of your workload - if your hot data fits in the cache, you'll be happy).Now that we mention it, I wonder if HT can be enabled or disabled per core. If that's possible, the machine would look like it has some logical cores with more cache than others and we could use cache miss counters as input to decide where a process should run.	rbanffy	9.918942	-5.6700172	comment	4.0	21.0	1541505530	8.255279
18396400	Easy-To-use, FPGA-Accelerated Hardwa	Easy-To-use, FPGA-Accelerated Hardware Simulation of RISC-V Systems in the Cloud	ArtWomb	9.390406	-5.675531	story	4.0	76.0	1541553274	-10.570291
18407982	Were there any 3-core processors whi	Were there any 3-core processors which were not de-rated 4-core processors?	dsr_	9.454747	-5.2125144	comment	4.0	13.0	1541698136	7.9481487
18418281	A different question is why is DRAM 	A different question is why is DRAM still colocated with the CPUs, and not centrally located over a very fast network?  There was a company doing this (RNA Networks, founded 2006) which was sold to Dell and then apparently disappeared without trace.It might make more sense now that there are more types of memory-like storage which isn't quite as fast as DDR4, like Optane.	rwmj	9.723595	-5.2801776	comment	4.0	12.0	1541799617	8.084202
18418405	Anyone know if this chip addresses s	Anyone know if this chip addresses speculative execution exploits eg Meltdown?	LiterallyDoge	9.664702	-5.5972695	comment	4.0	15.0	1541800767	7.826091
18424422	Makes me think of all the code lost 	Makes me think of all the code lost to poor storage. Like all my C64 related code from the 80s and 90s. I had hundreds of programs typed in regular notebooks.The code for this game is really readable and easy to pick up after all these years of not doing any 6502 coding. Any 6502 wasm targets?	pryelluw	9.611668	-5.260606	comment	4.0	12.0	1541898013	-7.5799227
18425138	Cascade: A Just-In-Time Compiler for	Cascade: A Just-In-Time Compiler for Verilog	sorrow17	9.175688	-5.530101	story	4.0	71.0	1541913833	8.680078
18442203	Show HN: Emojifs – Create Animated G	Show HN: Emojifs – Create Animated GIFs from Emojis	scottatmu	9.800071	-6.2574024	story	4.0	5.0	1542126614	13.028715
18460355	Researchers discover seven new Meltd	Researchers discover seven new Meltdown and Spectre attacks	Garbage	9.635122	-5.577809	story	4.0	140.0	1542298057	7.739628
18478016	I'm just sitting here waiting for al	I'm just sitting here waiting for all the security fiasco to stop ruining performance for ridiculous unpractical attacks. Just a matter of time, the pressure for better performance in a world where moore's law is getting stuck will eventually cause every sane person to throw these ridiculous patches out of the window.If the choice is between unsecure but fast to secure and slow, the default should be fast. Let applications who care about side channel deal with it their way, why the fuck should everything be so slow just so that few apps which actually care about side channel will be secure?	bronzeage	9.83589	-5.6141825	comment	4.0	12.0	1542498308	-5.6491494
18492773	Linus Torvalds new *calm* mood	Linus Torvalds new *calm* mood	turrini	9.280389	-5.905755	story	4.0	26.0	1542707305	4.161687
18497092	Bit flips in network surely is many 	Bit flips in network surely is many orders of magnitude worse than in cache/memory bit flips? And I doubt it has to do with gamma rays.Those with poor or long distance DSL do see a big increase in errors.And while hopefully getting rarer now home routers could easily overheat and introduce errors as soon as they saw more than usual traffic.We recently had issues with the power supply for our router and it also caused issued.	tjoff	9.703125	-5.52811	comment	4.0	17.0	1542743722	8.184066
18509768	Rowhammer is simply defective RAM ma	Rowhammer is simply defective RAM marketed as usable. If your RAM will corrupt itself with certain access patterns, it is defective and should be replaced.The manufacturers obviously don't want to, but the only way to stop this stupidity is to reject/return/refuse the product as defective if it shows this vulnerability. There's been a lot of efforts to downplay it, to the point that even some memory testing tools have made the tests for RH optional. This is ridiculous not just from a security standpoint, but overall correctness. Memory that just doesn't behave like memory should, is not fit for purpose.Unfortunately RAM defects are often very subtle --- I remember a particularly irritating one which happened only when extracting a certain ZIP file; all the memory testing tools said the RAM	userbinator	9.6273365	-5.6532335	comment	4.0	16.0	1542892246	-13.909458
18510288	I really don't understand why people	"I really don't understand why people seem to hate emojis so much. They're the same as utf8 pictograms, except they're more styled. They can be really useful in my opinion.Maybe it's because young people use them a lot in messaging apps and older people are like ""gah! young people and their picture messages! grmbl""?"	voxl_	9.793122	-6.2610383	comment	4.0	16.0	1542898334	-13.959479
18517122	> And if you're a suspicious sort wh	> And if you're a suspicious sort who wants ECC in their build farm, then a Xeon or an AMD processor of some kind would be a better fit.What does ECC refer to?	hellofunk	9.396083	-5.4424057	comment	4.0	12.0	1542988495	8.1706295
18517792	It's worth point out that there are 	It's worth point out that there are still plenty of static RAM in modern chips and those obviously don't require refreshing. The CPU cache would be an example, but there are also plenty of internal SRAMs in ASICs and FPGAs everywhere.The refresh needed by DRAM is also why you can't merely suspend-to-RAM by merely keeping it powered up, the bits will flip. You need a special self-refresh mode that keeps updating every cell.While implementing suspend-to-RAM on an embedded system I wanted to test that my self-refresh was working correctly, so I decided to test the null hypothesis: I'd suspend my ROM code without enabling auto-refresh, wait a second or so, wake up and smell the ashes. Except... it seemed to work anyway. The data was still here.It turns out that while the refresh period of DRAM	simias	9.790298	-5.39468	comment	4.0	48.0	1542994492	8.075444
18539411	Hello from the EC2 engineering team!	Hello from the EC2 engineering team!A vCPU on an A1 instance is a physical Arm core. There is no SMT (multi-threading) on A1 instances. In my experience on the platform, the performance is quite good for traditional cloud applications that are built on open source software, especially given the price. Since the Arm architecture is quite different than x86, we always recommend testing the performance with your own applications. There's really no substitute for that.	_msw_	9.591769	-5.2704015	comment	4.0	17.0	1543293428	-8.509579
18576037	R16: A New Transputer Design for FPG	R16: A New Transputer Design for FPGAs (2005) [pdf]	peter_d_sherman	9.136181	-5.307876	story	4.0	49.0	1543656504	8.301867
18585779	I wonder if having a separate stick 	"I wonder if having a separate stick of RAM exclusively dedicated to kernelspace would provide any mitigation against privelige escalation via rowhammer. Are we considering a future where every ""ring"" is literally a separate set of CPU, RAM, etc in order to stymie side channels, or is that just too crazy?"	kibwen	9.724889	-5.5908995	comment	4.0	13.0	1543801293	-13.894903
18621070	BleedingBit: The hidden attack surfa	BleedingBit: The hidden attack surface within BLE chips [pdf]	keyme	9.678063	-5.3122764	story	4.0	70.0	1544123520	7.527279
18627135	Small nitpick, but if I'm reading th	Small nitpick, but if I'm reading this correctly, the EPYC 7371 is a 16-core part. The Threadripper 2950x with 16 cores and the 2970wx with 24 cores both have full speed memory access for all cores. It is only the 32 core 2990wx that has half the cores running without direct access to memory. Do correct me if I'm wrong.	llampx	9.383243	-5.290387	comment	4.0	17.0	1544186449	7.952708
18667653	Show HN: Use Emojis to find and rate	Show HN: Use Emojis to find and rate places	tobiasszarowicz	9.803205	-6.2580986	story	4.0	4.0	1544647938	13.03053
18723495	So running a 6502 on an Artix-7 or W	So running a 6502 on an Artix-7 or W65C02S, is this more or less the most you can get out of it. That is does it max out the available logical units on the respective chips? Also do you get a 1:1 speed, when it comes to frequency etc?	rijoja	9.503548	-5.308533	comment	4.0	12.0	1545297544	-7.3838015
18724509	Show HN: Emoji Feedback Widget	Show HN: Emoji Feedback Widget	ctas	9.801675	-6.2594423	story	4.0	9.0	1545310739	13.044358
18727681	8bitworkshop IDE: Designing Hardware	8bitworkshop IDE: Designing Hardware with Verilog	matt_d	9.115846	-5.4681153	story	4.0	96.0	1545331095	8.574922
18752454	Interesting to see the difference in	Interesting to see the difference in style of old Linus vs new reformed Linus.Seems like the new style comes across as just heavily disappointed and with a breach of trust, which I guess compared to the plain anger of old is easier to convey without swearing and vivid imagery.I think I personally would still prefer to receive one of the old style messages, but that's probably just because I better handle people angry with me than disappointed.	klagermkii	9.266037	-5.8982797	comment	4.0	13.0	1545664404	4.2060604
18776395	I wonder whether it would be possibl	I wonder whether it would be possible to add aftermarket AVX-512 instruction handling? Not for performance necessarily, but for compatibility.	snovv_crash	9.457015	-5.579368	comment	4.0	18.0	1546000504	8.063659
18787067	FOSS simulators are almost totally u	FOSS simulators are almost totally useless; they can't handle mixed languages, they can't work with encrypted RTL (found in various Xilinx IP), and ones like Verilator are cycle simulators that don't even handle testbench code.There's a very, very narrow niche where FOSS simulations are useful, and I'd wholly recommend against wasting your time with them.	analognoise	9.128736	-5.4633427	comment	4.0	20.0	1546138447	8.521043
18806596	I wonder how much Intel knew of this	"I wonder how much Intel knew of this ""bug"" and went ahead and shipped with it because of the speed increases."	mbrumlow	9.43929	-5.220875	comment	4.0	14.0	1546441708	7.789807
18845681	Switch???There seems to be some wide	Switch???There seems to be some widespread confusion what RISC-V is, currently. It is not remotely competitive with any ARM processors, and for those used in smartphones, there is no indication it will be for at least another 10 years. It is solely used in applications where the choice of processor is mostly meaningless and cutting out ARM is 20 cents saved on the BoM. Remember Huawei makes a long long list of products besides smartphones such as networking gear where you need the occasional small to medium sized processor.	stefan_	9.395925	-5.622339	comment	4.0	21.0	1546873625	-10.55845
18866309	I think I found some flaws with this	I think I found some flaws with this, now I think I am rather experienced but I haven't seen everything.1) He didn't demonstrate it in real hardware without outside power and ground, while he says an arm core is very small, capacitors are large unless you change the laws of physics.  Also I never saw a reliable clock generator the size of a 0402 (or even 1208 now that I think about it) passive.  Like I said I haven't seen everything, if there are answers to these I'd love to see them.2) He faked in some addition to unprogrammed memory, he theorizes the change can only work one way (change a high to low) so an obvious countermeasure is to fill empty memory with random bit patterns.3) IIRC he intercepts an spi flash in series on the data (MISO) wire.  Not only does this assume the spi clock 	kw71	9.692429	-5.3501587	comment	4.0	19.0	1547052997	6.207049
29701179	I'm ready for Risc-6 already.A Risc-	I'm ready for Risc-6 already.A Risc-6 could fix mis-designed details of RISC-V while remaining similar enough to get advantage of the verification work already done.We will each have a list of fixes to offer. My first is a popcount feature in the core definition. It need not be an instruction; it could be a field of the status register that also records =0, sign,  carry, and overflow.Instead of just the one status register, to be renamed at need the way x86 and ARM do lately, I would append these bits to every register, carried along with the value.My second would be to make the logical true value physically equal to ~0, both in the ISA and in the C/C++/Rust ABI. (This does not, of course, affect how it looks from the source-code level.)I could go on, but others will have their own suggest	ncmncm	9.553627	-5.837298	comment	4.0	16.0	1640600028	-10.485076
29714264	It's also a bit disingenuous to say 	"It's also a bit disingenuous to say it's ""on Apple Silicon"" when you're running it through a translation layer that won't exist in a few year's time. I'd wager the reason why the GNU folks say it doesn't run on ARM is because... it doesn't. Running it as an x86 program is mandatory, apparently."	smoldesu	9.782933	-5.188029	comment	4.0	45.0	1640702926	-7.7638774
29714795	> Apple Silicon has a (mostly) hardw	> Apple Silicon has a (mostly) hardware translation layer…I can’t imagine what you mean by this, Rosetta 2 is a binary translation system implemented in software, based on QuickTransit. There are a few features implemented in Apple Silicon to make translation easier and more efficient, such as supporting Intel memory ordering, but thats about it.I think it’s reasonable to worry about how long rosetta2 will be available. The first version, that allowed Intel Macs to run PowerPC binaries, was available for 5 years. Having said that, there’s no guarantee versions of MacOS beyond 5 years time will run on today’s M1 anyway (though M1 compatible versions will likely still get updates beyond then).	simonh	9.775127	-5.2597275	comment	4.0	25.0	1640706477	7.561486
29744641	Portal 2 crashes if you have 128 cor	Portal 2 crashes if you have 128 cores, due to 15 year old assumptions	notpopcorn	9.556766	-5.247534	story	4.0	63.0	1640922214	7.9386168
29749692	> I recently learned this is no long	"> I recently learned this is no longer true! AMD EPYC processors (and maybe other recent AMDs?) divide cores into groups called ""core complexes"" (CCX), each of which has a separate L3 cache.It's still kinda true, just that ""a CPU"" in that context is a CCX. Cross CCX communications has shown up a fair bit in reviews and benches, and really in all chips at that scale (e.g. Ampere's Altras and Intel's Xeons): https://www.anandtech.com/show/16529/amd-epyc-milan-review/4 and one of the ""improvements"" in Zen 3 is the CCX are much larger (there's one CCX per CCD, rather than 2) so there's less crosstalk.And it could already be untrue previously e.g. the Pentium D were rushed out by sticking two P4 dies on the same PCB, I think they even had to go through the northbridge to communicate, so they we"	masklinn	9.287013	-5.2237344	comment	4.0	17.0	1640968973	7.9547896
29750661	Just as information for some later r	Just as information for some later readers, but this is applicable not just to Epyc but also the consumer version Threadripper. My understanding is that this is an example of a Non-Uniform Memory Access (NUMA) which was also used to link multiple cpus in different sockets together for a long time now, but now they've been integrated into a cpu that fits in one socket.This actually has an importance if you are running a VM on such a system since you'll run into things like the actual RAM (not l3 cache) is often directly linked to a particular NUMA node. For example accessing memory in the first ram stick vs the second will give different latencies as it goes from ccx1 => ccx2 => stick2 versus ccx1 => stick1. This is applicable to I think 2XXX versions and earlier for threadripper. My unders	Ataraxic	9.598485	-5.4274044	comment	4.0	13.0	1640973907	8.065558
29793498	2 watts per core at 3GHz is pretty i	2 watts per core at 3GHz is pretty impressive, what nanometer are they at?But still memory bandwidth is going to restrain those 128 cores to do anything joint parallel, you might actually be better off with many smaller 4-8 core machines.	bullen	9.502121	-5.1979003	comment	4.0	20.0	1641293969	7.8520417
29796318	Because emoji are tacky. You want to	Because emoji are tacky. You want to use them in your commit message? Fine. But if I were ever contribute to a project that enforces such a rule I would start every commit with the middle finger emoji.	AnIdiotOnTheNet	9.779977	-6.288412	comment	4.0	15.0	1641312440	-13.974372
29796474	This is great! I've waited for chips	This is great! I've waited for chips approaching something like 256 to 1024 cores since the 90s. These CPUs still leave a lot to be desired, but I sense that there's been a shift towards better uses of transistor count than just single-threaded performance.These are still roughly 10 times more expensive than they should be because of their memory architecture. I'd vote to drop the idea of busses to external memories and switch to local memories, then have the cores self-organize by using web metaphors like content-addressable memory (CAM) to handle caching. Basically get rid of all of the cache coherence hardware and treat each core-memory as its own computer. The hardware that wasn't scalable could go to hardware-accelerated hashing for the CAM.And a somewhat controversial opinion - I'd p	zackmorris	9.8016205	-5.531143	comment	4.0	20.0	1641313086	8.179316
29839149	Microsoft sold Xenix for the 68000, 	Microsoft sold Xenix for the 68000, I wonder how that worked given the often mentioned unix problem caused by inability of the processor to recover from bus faults.As for a MMU, I guess it's not a given that Unix requires paged virtual memory. Traditionally whole processes were swapped in and out.	fulafel	9.687097	-5.243217	comment	4.0	31.0	1641564013	-7.6280184
29866816	So... Is there an arm64 version roll	So... Is there an arm64 version rolling around?	tgtweak	9.726512	-5.312097	comment	4.0	13.0	1641758568	-7.783926
29893231	Our CI system broke as a result - I 	"Our CI system broke as a result - I really like this ""brownout"" idea to help us find it before it turns off for good, but a 24-hour period for us to be broken or scramble to fix is kind of a PITA.
I imagine it would be much more technical effort, but a way for us to opt certain repos out of a brownout would be really nice, so that once it happens, we could easily disable the brownout for our repo & schedule working on a fix, while letting us continue working with the existing infra."	arilotter	9.002822	-6.3434715	comment	4.0	24.0	1641917329	0.4244498
29898231	So my understanding of DDR5 has on c	So my understanding of DDR5 has on chip ECC is needed due to the ever increasing need for -Ofast, will/does PCIe have the same requirements?	nwmcsween	9.435235	-5.398124	comment	4.0	13.0	1641936553	8.090833
29899975	There are a lot of important numeric	"There are a lot of important numerical algorithms which would have really benefited if Itanium had gone through iteration and growth.  A mainstream VLIW could've had it's place, and it's trivial to find parallelism in FFTs, SVDs, matrix multiplies, and so on.To me, there is a spectrum of parallelism on the desktop:    multi-server,
    multi-process,
    multi-threaded (shared mem),
    <Itanium would go here>,
    SIMD instructions

Yeah, Itanium might have required assembly to exercise that niche, and maybe new programming languages would've come about.  There has to be some middle ground between Verilog/VHDL and C, right?  Maybe a CUDA-like language could've done the trick (it certainly works for GPUs).I think it's a shame Itanium failed, and I think it failed for the wrong reasons.  At"	xscott	9.580861	-5.641711	comment	4.0	20.0	1641943725	-7.7559977
29910215	Which means 10^12 to 10^13.SRAM need	Which means 10^12 to 10^13.SRAM needs 10^20DRAM 10^17Any memory exploiting variable dielectric properties is subject to dielectric failure.	baybal2	9.747318	-5.3165894	comment	4.0	12.0	1642009524	8.029194
29912762	tldr: brainfuck but each token has b	tldr: brainfuck but each token has been replaced with a different heart-related emoji	bruce343434	9.816032	-6.25473	comment	4.0	16.0	1642022088	-13.930095
29958684	Apologies for attacking Dave's credi	"Apologies for attacking Dave's credibility on an unrelated thread, but his comments on Linux are absolutely falsehoods. He said that all Linux machines have some sort of proprietary blob Linus Torvalds put in there on EVERY release, for his own purposes. Compared to Windows, which is entirely closed source.. I just blocked his channel after that.https://old.reddit.com/r/linux/comments/rb2xzk/dave_plummer_...Related falsehoods about Linux's SysRq (now deleted, comments relevant):https://old.reddit.com/r/linux/comments/rva3ui/so_before_i_g...Related, his company's settlement for incredibly shady business practices, lying to customers that they ""really needed his software, for security of course"":<a href=""https://www.atg.wa.gov&"	sodality2	9.522757	-5.721787	comment	4.0	17.0	1642358971	-8.20399
29965849	> makes sense if your threat model i	"> makes sense if your threat model includes people pushing malicious code to CI, but aren't you more or less done for at that point anyway? If ""legitimate"" code can do a certain thing, then malicious code can do too.The answer is very much, 'it depends'. For oen thing, developers can run whatever code in CI before it's benn reviewed. I could just nab the env vars and post them wherever. If there are no sensitive env vars for me to nab and you have enforced code review, then I need a co-conspirator, and my change is probably going to leave a lot more of a paper trail.Another risk is accidental disclosure - I have on at least two occasions accidentally logged sensitive environment variables in our CI environment. Now your threat model is not just a malicious developer pushing code - it's a d"	xmodem	9.407203	-6.3239336	comment	4.0	42.0	1642422338	-9.658387
29967032	uh, xfree86 was in linux in '93 (yes	uh, xfree86 was in linux in '93 (yes I edited dot clocks to get 1024x768 x 16 bit color)	dekhn	9.809052	-5.3223276	comment	4.0	17.0	1642430926	-7.8112793
29986312	I'm hoping that I'm correctly interp	I'm hoping that I'm correctly interpreting the WoW64 portion of the notes as meaning that I could run a 32-bit x86 Windows binary using the 64-bit Wine on ARM. I don't have a common need for this but I've had a couple of cases where I needed to test compatibility with something ancient and it would have been great to be able to install something in my development environment. In one of the cases, it was a 64-bit executable with a 32-bit installer so the actual program worked as long as you could copy a previous install.	acdha	9.905406	-5.202157	comment	4.0	21.0	1642541987	-8.001119
29991003	Given how many devices nowadays depe	"Given how many devices nowadays depend on arm IP i think they don't have cash issue. If so than maybe rise prices. Also i don't think RISC-V is a real competitor yet. Arm has Apple as its customer and old founding company. I wouldn't trust Apple with Arm but I don't think Apple would allow for ""stagnation"".This is all prediciton and Apple invested a lot into switch to Arm which paid off so going back to x86 isn't an option. Especially because of the i86 instruction decoder situation. The fixed size instructions on Arm is a really good thing imho. 
And the much better thermals which are key in mobile devices. I know thermals are not an attribute of architecture but more of a super low EUV in TSMC process nodes but it adds up."	jakuboboza	9.445697	-5.4467463	comment	4.0	15.0	1642578392	4.8898263
30008421	Not OP, but that's not how I interpr	Not OP, but that's not how I interpreted their comment. I interepreted it as the 70% they hope to have fixed will end up having edge cases not yet considered, and the protections will end up weaker than desired. No-one designed a processor to be susceptable to spectre and meltdown, once something moves into production there is significantly more incentive to investigate and find these flaws.	lacksconfidence	9.618755	-5.517553	comment	4.0	15.0	1642684370	7.79726
30060994	I have essentially the same take. Th	"I have essentially the same take. The sysadmin at my company prefers FreeBSD for all these reasons (as such that's what we're running), and he's engaged me a tonne about FreeBSD but all I see is an operating system that's just as good as the other mainstream server Linux distributions. Except now we've got a system that's more difficult to hire for. ""Any competent admin can learn it easily"" is something I've been told but how many will want to when they could easily go their whole career without encountering it again?I like your point about Docker vs Jails, I haven't seen it discussed like that before. I keep hearing Jails are more secure than anything else, I'll have to read more into it.As far as the networking goes, I haven't seen any recent benchmarks to substantiate those claims eithe"	LeonenTheDK	9.870198	-6.146516	comment	4.0	23.0	1643045934	10.659675
30067807	> When I told my Arduino to sleep fo	> When I told my Arduino to sleep for 51 microseconds, it was generally sleeping for either 56.2 or 61.3 microseconds. That seemed to easily be bad enough to cause lots of problems.This is why I've never quite liked the Arduino ecosystem, the way it exists. Sure, it works and it's accessible to newcomers... but it doesn't encourage understanding the inner workings of the platform enough, which is something that is extremely valuable and accessible when you're working with simple 8-bit microcontrollers. Learning about hardware registers and clocks and cycle accuracy really isn't that scary, that's the point of using a tiny (and frankly obsolete) 8-bit platform!But when you give people an API that takes an integer number of microseconds, and then approximates it, people are going to think th	marcan_42	9.869272	-5.2601924	comment	4.0	23.0	1643083174	5.6158257
30076807	> almost every phone on earth is Arm	> almost every phone on earth is Arm. Arm is taking over laptops too.Is there a RISC-V analog to Blizzard/Activision?	JumpCrisscross	9.419594	-5.589085	comment	4.0	12.0	1643139156	-10.538735
30094155	Some shops call x86-64 “amd64” becau	Some shops call x86-64 “amd64” because AMD originated it. Not sure if Apple is one.	clord	9.6990385	-5.276486	comment	4.0	14.0	1643242454	-7.7447886
30106065	What's the backstory on why Linus is	"What's the backstory on why Linus is submitting a patch with a variable stating ""I am Satoshi"""	alberth	9.302621	-5.8846607	comment	4.0	12.0	1643315388	4.2190304
30129081	Are you sure Nomad orchestrates VMs?	Are you sure Nomad orchestrates VMs? Do you have any relevant links? I thought it was mostly used for Docker containers, but of course you can run QEMU in a Docker container à la kubevirt	denysvitali	9.672127	-6.3437357	comment	4.0	18.0	1643481849	-13.1902075
30181114	Somehow, similarly bad numbers were 	Somehow, similarly bad numbers were achieved with 56 cores working with disjoint parts of 512 GB array. I didnt pin RAM to cores, though. Maybe thats the missing piece, but it’s sad if thats the only way to meet the spec. Almost no application can do that in modern cloud deployment realities.	ashvardanian	9.54457	-5.252707	comment	4.0	20.0	1643824196	7.9122863
30242645	Amend – A small revision control sys	Amend – A small revision control system for Macintosh (System 6)	bitigchi	8.860377	-6.381643	story	4.0	87.0	1644228495	-11.725487
30243199	A lot of their claims sound very sca	"A lot of their claims sound very scary but I don't really know what to make of this as an average user. Is there an explanation to what this stuff means for me? What security vulnerabilities does this allow for on Intel CPUs? Are they worth worrying about? On a scale of ""minor bug"" to ""every single intel chip is easily able to run arbitrary code and is vulnerable on a hardware level"" how bad is this exactly?"	alexb_	9.423822	-5.257383	comment	4.0	43.0	1644232484	7.785969
30244723	"Sure, put a ""roughly"" in there. It's"	"Sure, put a ""roughly"" in there. It's a simple multiplication by clock speed. This is Justine who designed APE. I think they know.Edit, and also no, cycles are not ""more about instruction set"". They're pulses of electricity that make their way through a chip, they are about as far from instruction-set-specific as it gets."	cormacrelf	9.628494	-5.322223	comment	4.0	24.0	1644241546	7.6351194
30247777	Raspberry Pi OS 32-bit vs. 64-bit Pe	Raspberry Pi OS 32-bit vs. 64-bit Performance	TangerineDream	9.823094	-5.3936124	story	4.0	45.0	1644253972	7.846508
30270711	This would be interesting for the bl	This would be interesting for the blue / green bubble debate. When you send an emoji, you send an MMS...	denysvitali	9.801093	-6.272512	comment	4.0	22.0	1644398805	-13.955796
30312529	It's interesting that SIMD came to t	"It's interesting that SIMD came to the mainstream 25 years ago and compilers, our apps and PL tech are still quite far from effectively utilizing it outside nonportable manually coded SIMD aware compute kernels in glorified assembler. There are some exceptions like ispc and GPU languages like OpenCL and Futhark (GPU people say ""cores"" when they mean SIMD lanes!)..."	fulafel	9.914125	-6.0592427	comment	4.0	21.0	1644671530	8.150602
30318315	HDLs like VHDL and Verilog are at a 	HDLs like VHDL and Verilog are at a different level. If HDLs are like C, the interchange format is more comparable to a .o file.That being said, EDIF already exists.	duskwuff	9.095191	-5.4976606	comment	4.0	12.0	1644716828	8.635832
30321027	If everyone implements their own cus	"If everyone implements their own custom extensions, you would have to compile your software for each RISC-V device. To be able to do that, the compiler needs to support those extensions. I think that is what was meant with ""you lost software compatibility"".Edit: I am mistaken, thanks everyone for educating me."	MaKey	9.404569	-5.682088	comment	4.0	35.0	1644752140	-10.589108
30328917	I'm curious of the eventual conseque	I'm curious of the eventual consequence of emoji development. Early Chinese characters were pretty much like pictograms. They have developed into a highly sophisticated abstract language / writing system, but its emoji-like aspects still remain today. The major shortcoming of today's emojis is that they are too hardware dependent and not hand-writable. It's interesting that the world is basically reinventing the same thing a few millenniums later.	euske	9.819661	-6.2548656	comment	4.0	16.0	1644819651	-13.962965
30330833	Wow, this makes me think, do animati	Wow, this makes me think, do animation teams don't really use a version control system to have multiple people contributing to the same movie at the same time? Does anybody knows how that works?	adrianomartins	8.745204	-6.3982854	comment	4.0	14.0	1644838653	-11.765579
30352683	If anyone thinks that on-die ECC is 	"If anyone thinks that on-die ECC is a good thing as the manufactuers are touting, please go read the discussions on this topic over in the forums at www.realworldtech.com.  The goal of on die ECC is purely to ensure that DRAM manufacturers are able to obtain better yields by reducing the impact of defects, which is not the same as ensuring data integrity.   This means that it fails the ""trust but verify"" tenant.  Even worse is that some failures may not even get reported to the system as is the case with ECC implemented in the memory controllers and caches of modern CPUs.  The industry is trying to make this look like a good thing, but I'm on the same side as Linus Torvalds: all modern systems should ship with ECC memory.  IBM got it right with parity memory in the IBM PC."	bcrl	9.476738	-5.5303926	comment	4.0	43.0	1644958994	8.173884
30360771	Unikernels never really removed the 	Unikernels never really removed the layer between the app and the kernel, they just made the hypervisor the kernel and invented a layer to handle IO to/from the virtual devices presented by the hypervisor, inside the same memory space as the app.If the hypervisor is KVM, which they are if running on modern AWS EC2 instances or GCP, unikernel apps are literally just Linux processes; the underlying Linux host is doing all the heavy lifting. Conceptually, they're essentially the same as a sandboxed ordinary Linux process with an in-process IO stack, but without the ability to monitor or debug them as if they were an ordinary Linux process.	marmarama	9.890155	-6.2543073	comment	4.0	19.0	1645023459	-12.366838
30365066	A lot of the problems cited make sen	"A lot of the problems cited make sense in the context the machine was designed for. Of course it did math in decimal. The designer did math in decimal, the user input was in decimal, they wanted output in decimal, and unlike electrical switches, mechanical switches aren't naturally limited to just on/off states. Of course the register supported 40 digit numbers. This was a machine that would have to be cranked. The clock cycle was literally a cycle. Anything less than 40 and you could more economically pay someone to calculate directly. It's easy to say ""just do it in software"" when cycles are measured in GhZ."	ummwhat	9.739096	-5.5591183	comment	4.0	29.0	1645042314	8.482414
30405254	Isn't the comparison misguided as ea	Isn't the comparison misguided as each 16-bit instruction can move twice as much data?Or was that taken into account?	bullen	9.871018	-5.73835	comment	4.0	15.0	1645361086	8.035619
30409419	I remember seeing a copy of this Use	"I remember seeing a copy of this Usenet post years ago! It's one of my favorite ""secrets"" about x86's encoding.The ""core"" (non-E/VEX, non-SSE, etc.) x86 encoding is wonderfully clever and terrible by modern standards, and Volume 2 of Intel's SDM is a great reference for how x86 manages to pack remarkably complicated addressing, operand, etc. semantics into just a handful of bytes. The result is a format that's remarkably hard to decode correctly, meaning that just about every software decoder for x86 is saturated with bugs[1] (FD: my project).[1]: https://github.com/trailofbits/mishegos"	woodruffw	9.853561	-5.755169	comment	4.0	16.0	1645392664	-7.644545
30409889	The Datapoint 2200, the source of th	The Datapoint 2200, the source of the 8008 instruction set, is an interesting machine. The CPU was built from TTL chips. To decode instructions, they used decimal BCD decoder chips, specifically the 7442. But they'd use them as octal decoder chips, only using 8 outputs.The Datapoint 2200 documentation gave the opcodes in octal, so they were clearly thinking in octal. The 8008 documentation, however, didn't use octal or hexadecimal. The opcodes were given in binary, but grouped in 3 bits, octal style, e.g. 10 111 010. (They didn't specify opcodes in octal or hex!) I think the 8008 was right at the time where octal was on the way out and hexadecimal was taking over. (The 8008 assembler manual uses both octal and hexadecimal, but hexadecimal primarily.)The Intel 8080 still specified the instr	kens	9.84913	-5.721641	comment	4.0	19.0	1645396326	-7.500712
30414655	Sidenote, but have we collectively f	Sidenote, but have we collectively forgiven Sourceforge for bundling crapware installers into binaries?	robin_reala	8.817788	-5.947856	comment	4.0	22.0	1645443668	-11.634845
30419442	> The architecture is equally atroci	> The architecture is equally atrocious as the 6502.I only ever hear glowing/nostalgic reviews  of 6502 programming, I guess from the retro/8bit gaming scene, curious what you find so atrocious.	jazzyjackson	9.524155	-5.289156	comment	4.0	18.0	1645470629	-7.452678
30442899	As Thomas Gleixner has been the x86 	"As Thomas Gleixner has been the x86 maintainer since 2008, what do they gain from this? It seems a pretty close relationship already. It's not as if they're acquiring IP. Conversely if they'll allow Linutronix to continue ""to operate as an independent business"" and e.g. work on other architectures like RISC-V, then that dilutes their access to the talent they're acquiring."	taffronaut	9.577119	-5.2707334	comment	4.0	15.0	1645634095	-7.7816277
30474828	Software-Refilled TLBs (1995-2007)	Software-Refilled TLBs (1995-2007)	luu	9.579223	-5.355661	story	4.0	44.0	1645843184	2.9284208
30490994	>By the way, don't expect AMD to act	">By the way, don't expect AMD to act any better. Remember that they're the company bringing you Pluton: quoted from the article, ""Pluton will also prevent people from running software that has been modified without the permission of developers."" It wouldn't be surprising to see AMD's Platform Security Processor pick up additional lock-in capabilities to reinforce this and other vendor controls.So the title should be Intel and AMD are getting worse."	ChuckNorris89	9.3729725	-5.2155704	comment	4.0	18.0	1645986332	7.8789287
30506085	This is slightly off topic -- it's a	This is slightly off topic -- it's about an old supported microarchitecture -- but Linux still supports DEC Alpha, despite no chip with that architecture having been developed since 2004.DEC Alpha has extremely weak memory ordering. [1] In fact, it's the weakest ordering of any arch supported by linux, which includes extra fence instructions to support it. The memory model is crazy weak, but it apparently allows for extra speculative execution parallelism.[1] Awesome Raymond Chen post, totally worth a read: https://devblogs.microsoft.com/oldnewthing/20170817-00/?p=96...	aluminum96	9.749857	-5.4288573	comment	4.0	20.0	1646087560	-7.929162
30515743	>does anyone end up making decent RI	>does anyone end up making decent RISC-V processors that could replace a desktop CPUAs of November, a large number of extensions got ratified, including the vector extension, cryptography acceleration, hypervisor support and other important features.RISC-V is finally not missing any important feature ARM or amd64 have, and it does it with an order of magnitude lower number of instructions (equivalent but simpler, i.e. better) and with significantly higher code density.However, test chips with the first designs implementing all of that will take time, even assuming they were tapped out right then, after confirming no last minute changes.High performance cores depend on these extensions, so we'll begin to see them soon. We know multiple such efforts exist.Tenstorrent has one such project, le	snvzz	9.423343	-5.4695263	comment	4.0	13.0	1646150496	-10.551656
30515882	Apple posted job advertisements look	Apple posted job advertisements looking for RISC-V technical roles.What they plan to do with them is unknown, but Apple has the cash flow to try a lot of things.I would expect them to quickly adopt it for embedded applications, and experiment with making their own high performance design, including porting MacOS and Rosetta Stone. They can afford to do this much, regardless of whether they end up moving their main CPUs to RISC-V or not.	snvzz	9.407694	-5.584809	comment	4.0	14.0	1646150925	-10.553081
30516382	> The way ARM could survive is by do	> The way ARM could survive is by doing what the MIPS owners did: Abandon the ISA, move to RISC-V, use your extensive expertise to make competitive cores, and your clout in the market to sell them to your pre-existing clients.Even if that’s their best bet, long term, I don’t see why they would have to start doing that right now. Why would they leave their castle with its golden egg-laying goose, only because they know it won’t live for X more years?Timing such transitions is always difficult (you can’t wait until your goose is dead), but I think they’re better of waiting at least a few more years.The MIPS owners were in a different situation, weren’t they? Their goose already was dying or even dead.	Someone	9.455266	-5.605924	comment	4.0	18.0	1646153052	-10.482586
30517138	They will have no choice.  Either AR	They will have no choice.  Either ARM becomes irrelevant as people switch to an easier to license ISA, or they have to swallow a different profit model and compete by having the _best_ ARM cores in an open market of ARM IP.The trend with RISC-V suggests that ISAs are going to be commoditized and the real value will be in the implementations themselves.	admax88qqq	9.539637	-5.44298	comment	4.0	20.0	1646156119	-7.766606
30516305	My take is that RISC-V is not that g	My take is that RISC-V is not that great of an architecture and might never compete at the high end.  (e.g displace ARM, Intel, POWER, etc.)On the other hand there is a vast market for low-end CPUs that have specializations to be disk controllers and things like that.  If the ISA and all the IP required to make specialized devices is free and particularly if there is a culture in which it is easy to learn how to do that then RISC-V will have a special place.My next spatial computing project is going to be RP 2040 based mostly because I have the parts in stock (other projects are blocked because of supply chain issues) but I am really an AVR8 fanatic and the only path forward I see to higher performance AVR8 systems is a soft core running on an FPGA where very hard tasks (vision? comms?) ge	PaulHoule	9.394184	-5.5669684	comment	4.0	22.0	1646152549	-10.56194
30517979	> Frankly, unless ARM does radically	> Frankly, unless ARM does radically change their business model, I do not expect them to survive.Survive what? I don't see RISC-V disrupting much of ARM's bigger-named business (eg, phones, with some inroads into other things like Apple Silicon & laptops). Maybe Amazon pivots into RISC-V for the next Graviton? But that also seems unlikely unless someone with very deep pockets invests in making an actually competitive RISC-V CPU core at the mid/high end.ARM's low-end market seems likely to be taken over by RISC-V. So like the Cortex M series days seem numbered without a change in the business model. But that seems like about it.	kllrnohj	9.392009	-5.5875525	comment	4.0	24.0	1646159480	-10.54828
30520612	RISV-V will succeed because countrie	RISV-V will succeed because countries like China, India and Russia need a CPU ISA that isn't directly or indirectly controlled by the U.S. government.Somehow, they're also too stupid to roll their own.	UltraViolence	9.343612	-5.6692986	comment	4.0	13.0	1646171874	-10.601718
30609714	Who is actually getting to take adva	Who is actually getting to take advantage of the parallelism here? I still buy for single core.	spoonjim	9.837848	-5.5914884	comment	4.0	14.0	1646787762	8.248969
30648432	Successful architectures seem to nee	"Successful architectures seem to need a certain degree of pragmatism. ARM isn't exactly the RISCiest RISC, nor is AMD64 as baroque as the outer limits of CISC like iAPX 432.FJCVTZS is an example of pragmatism, the JavaScript spec says float to int should be done the way that x86 does it, the original ARM FCVTZS (no J) didn't do it the same way, but JavaScript is so important you have to add a special case.I hope I'm not mischaracterising the RISC-V side, but I seem to recall their argument against things like FJCVTZS was that that there should be some standard set of instructions that compilers should emit for that special case, and the instruction decoder on high end CPUs should be magic enough to detect the sequence and do optimal things (fused instructions?). Which kinda felt like ""we m"	fredoralive	9.545357	-5.7453837	comment	4.0	15.0	1647052182	-10.510303
30647850	Maybe they're trying to nudge us tow	"Maybe they're trying to nudge us towards smaller PRs. Many reviewers gloss over 300+ line changes in a single file. Approved with a ""LGTM"" and no further comment, but perhaps that's more a cultural issue with the team than anything."	88913527	8.760906	-6.334129	comment	4.0	15.0	1647045479	2.192065
30671391	A brief tour of the PDP-11, the most	A brief tour of the PDP-11, the most influential minicomputer of all time	Tomte	9.830973	-5.439981	story	4.0	47.0	1647259390	-7.5600686
30684621	inexperienced novices and dishearten	inexperienced novices and disheartened veterans alike get infatuated with that new shiny thing ...the rest of just smirk at the pump articles, as we have achieved state of Zen and realize _all_code_is_garbage_ and that nobody, other than minuscule amount of people who ever had a git write access in their life, actually care or will ever care about code let alone a programing language the app was written in	iExploder	9.513413	-5.830702	comment	4.0	19.0	1647348874	-11.840905
30686549	Is this a sign zen4 is delayed? I ge	Is this a sign zen4 is delayed? I get they need new motherboards and socket, and DDR5 etc.., but launching zen3 stuff now is strange. A lot of us already upgraded.	awill	9.279195	-5.201575	comment	4.0	15.0	1647358255	7.865786
30692845	What's the significance of RISC-V?Ea	What's the significance of RISC-V?Easier to write compiler backends for? Faster? Simpler?	LAC-Tech	9.437042	-5.714483	comment	4.0	19.0	1647383769	-10.547572
30697162	FPGA with Multiple ISA?	FPGA with Multiple ISA?	daly	9.552841	-5.557088	story	4.0	1.0	1647426807	-10.374955
30697992	Kinda neat. However i'm pretty sure 	Kinda neat. However i'm pretty sure there are still quite a few i386's online somewhere in the production department of various companies. The 80386 was produced until 2007, just like the 80486 and even the much more recent Core Duo! It outlived the Pentium, which was only produced until 1999, the Pentium II (-2001) and the Pentium III (-2002).	Tepix	9.539389	-5.2061305	comment	4.0	36.0	1647434340	-7.533996
16194608	Show HN: Turn a source image into an	Show HN: Turn a source image into an animated party emoji	scotchfield	9.803107	-6.255225	story	4.0	63.0	1516472851	13.036287
16202416	I'm going to be honest, I need an EL	I'm going to be honest, I need an ELI5 here. I know what the meltdown/spectre issues are, and kinda understand what retpoline is.	dingo_bat	9.593844	-5.5707617	comment	4.0	55.0	1516604351	7.7132564
16202535	Why doesn't Intel just go to Linus a	"Why doesn't Intel just go to Linus and ask politely: ""Ok, we f-ed up, here is a million dollars (or whatever, 10x his normal salary or something) can you please work with us tightly for some time? Thank you.""I would really respect Intel if they would."	teekert	9.302948	-5.1925178	comment	4.0	32.0	1516606161	7.6934795
16202654	Why should they ask politely? It is 	Why should they ask politely? It is not like the Linux mailing list would be polite environment.Nothing against impolite environment, people make case for it daily here and I don't care. But it combined with the standard expectation that when someone else talks to them he should be always polite is getting funny in that context.	watwut	8.917005	-5.9521203	comment	4.0	19.0	1516607723	-1.7588738
16202964	This doesn't make sense though. If I	"This doesn't make sense though. If Intel indeed plans to leave chips vulnerable except if you set a flag, then how are these bullshit patches? This will be the only solution Intel is going to deliver right? I get that he doesn't like it, but that doesn't explain why he feels lied to. If Intel says ""we're going to not turn the patch on by default"", wherein does he suspect the lie?"	lucb1e	9.476028	-5.2839055	comment	4.0	20.0	1516611810	7.7787085
16203800	The problem is that every fix that y	The problem is that every fix that you could think for Spectre reduces the performance of the CPU.So not enabling this by default it's a good choice, Spectre is very difficult to exploit: so if you do critical things you enable the fix, if you use the computer for gaming, video rendering, and things where you don't care too much about security but you care about performance, you don't enable it.	alerighi	9.653453	-5.572916	comment	4.0	16.0	1516623323	7.781825
16202659	The root question is what else is In	The root question is what else is Intel trying to cover up with these garbage patches? Are they afraid of power leakage across gates allowing an attacker to gain a higher level of privilege in certain generations of silicon, and trying to cover it up with these patches (hence some of the seemingly crazy things they do)?	StudentStuff	9.48539	-5.289976	comment	4.0	21.0	1516607791	7.772588
16210619	Not just Google. This is standard in	Not just Google. This is standard in any major tech company.  His behavior and abhorrent and there is no excuse. Tech should embrace mentoring, learning, constructive criticism, and learning from failures. Yes, this is hopefully a once in a lifetime situation -- but our values need to transcend that. This is not the first time that Linus has swept decency under the carpet. Linus would be such an HR issue at most companies and likely shown the door. If anyone is championing or approving his behavior, this will not win you support and 'points' long term.	p0rkbelly	9.30952	-5.8676105	comment	4.0	18.0	1516676545	4.1705613
16212396	Hetzner still haven't said anything 	Hetzner still haven't said anything to me about Spectre/Meltdown, or rebooted my VPS, so I'm not sure I trust them any more!	insomniacity	9.635067	-5.555694	comment	4.0	16.0	1516703406	7.7630672
16220561	Since all these CPUs are turning out	Since all these CPUs are turning out to be so inherently insecure, maybe we should work harder to run only trusted/verified code.	thomastjeffery	9.839097	-5.225718	comment	4.0	24.0	1516771880	7.69579
16237450	Wonder if the power display computer	Wonder if the power display computer might be susceptible to Meltdown, Spectre or Rowhammer? Or is it not programmable in the sense that everything is hardwired…	mLuby	9.613254	-5.463003	comment	4.0	18.0	1516949159	7.839624
16241570	Intel Announces Q4 2017 and FY 2017 	Intel Announces Q4 2017 and FY 2017 Results	kartD	9.310989	-5.1847944	story	4.0	38.0	1516991210	7.7711115
16246424	Intel: Meltdown, Spectre silicon fix	Intel: Meltdown, Spectre silicon fixes coming 2018; 3D XPoint RAM, not so much	jjuhl	9.555906	-5.414699	story	4.0	56.0	1517065275	7.777528
16255651	Would someone kindly explain what pa	Would someone kindly explain what paradigms do HDL's like VHDL & Verilog fall into? Has anyone done the enumeration of these paradigms, including a study of the deficiencies in programming caused by discouragement of unsupported paradigms?Any pointers would be highly appreciated. Thanks :)	godelmachine	9.100459	-5.5008082	comment	4.0	20.0	1517206336	8.65679
16256247	Gee, if only they had a Linus Torval	Gee, if only they had a Linus Torvalds type around to block irresponsible commits.	nippples	8.750632	-6.347561	comment	4.0	14.0	1517215603	-11.785249
16257003	Intel doesn't care.  What choice do 	Intel doesn't care.  What choice do we have?	segmondy	9.345905	-5.188263	comment	4.0	31.0	1517227800	7.7456827
16261119	That's why it is important to not bu	That's why it is important to not buy random shiny devices. Open source hardware like for example the Teres-1 [0] are what allows us to stay in control. I can't wait for even more open successors based on RISC-V processors.[0] https://www.olimex.com/Products/DIY-Laptop/	madez	9.415718	-5.521498	comment	4.0	16.0	1517264061	-10.576308
16264336	The opening paragraph also glosses o	The opening paragraph also glosses over the fact that some of Apple's chips are also vulnerable to Meltdown and Spectre.	dave84	9.595232	-5.375494	comment	4.0	16.0	1517310289	-6.3519135
16268404	Would you mind backing up your claim	Would you mind backing up your claim? To my knowledge, ARM is one company that licenses their designs to other companies, who are free to parameterize and modify as they please.	Shikadi	9.521363	-5.204004	comment	4.0	14.0	1517342066	-7.5853667
16276783	Oh, what's your use-case for ECC ram	Oh, what's your use-case for ECC ram?	jadbox	9.475585	-5.504698	comment	4.0	24.0	1517427037	8.254498
16284611	Halfway through he notes how process	Halfway through he notes how processors have millions of transistors, each being slightly different, and notes how we are just soooo lucky to have found a hardware bug now.Except both Spectre and Meltdown, AFAIK (IANAHWE) are design flaws as the silicon is working as intended. The hardware is fine -- the real problem is that the Intel's reputation is partially built on speed, and, now that the cladding has fallen off, we've discovered the platform was built with really flimsy supports.	tomc1985	9.550318	-5.44855	comment	4.0	37.0	1517511380	7.780621
16294982	Virtex UltraScale+ FPGA Augmented wi	Virtex UltraScale+ FPGA Augmented with Co-Packaged – Community Forums	rbanffy	9.112696	-5.3735995	story	4.0	23.0	1517612758	8.450991
16298749	Here’s the tl;dr:On the server, AMD 	Here’s the tl;dr:On the server, AMD is making a security play w/ EPYC arch.- AMD not vulnerable to Meltdown- SEV allows encryption of a VM’s memory, further mitigating read attacksOn the consumer side, AMD is selling on-package Vega to Intel. This should increase market penetration, and thus get more games optimized for the AMD arch.	jitl	9.362459	-5.2631364	comment	4.0	20.0	1517682074	7.855205
16298685	"What does ""Linux-capable"" mean? Are "	"What does ""Linux-capable"" mean? Are there other RISC-V systems that are not ""Linux-capable""?"	ams6110	9.42817	-5.6465306	comment	4.0	14.0	1517681322	-10.562535
16304659	This article appears to have nothing	This article appears to have nothing to do with micro-op fusion, which is an internal optimization in some CPUs.  See, for example, section 8.4 in Anger Fog manual [1].  This article is instead about whether a particular operation is better written as a single-instruction memory RMW or as there separate instructions to read, modify, and write.[1] http://www.agner.org/optimize/microarchitecture.pdf	amluto	9.710562	-5.8056307	comment	4.0	35.0	1517775474	-7.760597
16308804	Here's how it can be exploited:A pop	"Here's how it can be exploited:A popup that says ""Intel has detected your computer is vulnerable to Meltdown. Click here to install the fix."""	Bitcoin_McPonzi	9.484383	-5.2649446	comment	4.0	16.0	1517839935	7.7880383
16321173	How easy is it to take code written 	How easy is it to take code written for an FPGA and transfer it to run on an ASIC (e.g. code written in Verilog). Are they so different it would need to be rewritten from scratch, or could it be done with the equivalent of a a recompile? Do people often use FPGAs as a stepping stone to a custom ASIC design? Would learning how to program FPGAs be of any use when it comes to designing ASICs?I'm interested in getting into FPGAs, but I can't help but worry they are a bit of a dead end as any sufficiently popular use case will eventually be replaced by an ASIC.	anonymousDan	9.0867815	-5.355046	comment	4.0	18.0	1517961899	8.347101
16345114	> Chess Pawn was approved as part of	> Chess Pawn was approved as part of Unicode 1.1 in 1993 under the name “Black Chess Pawn” and added to Emoji 11.0 in 2018.Another existing normal character that got turned into an emoji and so will be rendered with funny colors rather than the original font color in firefox :(Can't even use a simple left or right pointing triangle to indicate something anymore without it possibly getting funny colors in firefox :(◀ ▶	Aardwolf	9.844397	-6.2618527	comment	4.0	19.0	1518223491	-13.960674
16372420	How many tests does a PR need? One? 	How many tests does a PR need? One? Five? When would you not write tests for something(that something not necessarily being a PR, but maybe a unit or feature)?Tests, like any process, should be serving you and your goals.. You shouldn't be serving your processes or testing practices. This sort of un-nuanced thinking isn't indicative of a high performing startup or CTO IMHO. Perhaps your policies are not directly indicative of your real thoughts on the matter?	Rapzid	9.854232	-6.3396015	comment	4.0	19.0	1518569345	-5.1056757
16400165	All RISC-V CPUs seem to be in-order 	All RISC-V CPUs seem to be in-order right now, but I assume their ISA supports speculative execution for out-of-order CPUs. So are they going to redesign that part of the ISA in a future update, before companies start coming out with out-of-order RISC-V CPUs with speculative execution? I assume some of them were already mid-design of their out-of-order chips, so this could delay their launches quite a bit. But it would be for the best long-term.	mtgx	9.427604	-5.6769795	comment	4.0	18.0	1518865557	-10.527246
16428466	Prove it.Prove it by replacing Sleep	Prove it.Prove it by replacing Sleep in your example with some number crunching, and show how it scales with the number of cores in your CPU.	tzahola	9.535496	-5.2864227	comment	4.0	13.0	1519209565	7.8958015
16428734	> Basically the message was that ser	> Basically the message was that serial performance is saturating, and the only way to get speed improvements in the future is going to be by exploiting parallelism.People have been warning us about this for about 10 years now, but I still don't see those 64-core CPUs I was promised anywhere.If we had the amount of parallelism we were told we were going to get, we could give every app its own core. OSes could even consider disabling context switches altogether for the majority of apps. Instead, we're left complaining about Electron apps like it matters.That said, I'm not sure what stagnation you refer to. There's a reason languages like Rust, Elixir/Erlang and Go are getting popular. My PHP app could handle hundreds of concurrent connections on a single machine, my Elixir app handles hundr	skrebbel	9.6400795	-5.2908473	comment	4.0	20.0	1519213584	7.9035664
16428664	My senior design course focused on a	My senior design course focused on asynchronous (clock-less) cryptography circuits; after learning of these, I looked into asynchronous general purpose processors, and learned that ARM actually designed an asynchronous processor back in the 2000's [0].While they've never quite taken off (the extra gates decrease speed and our harder to manufacture), with the recent side-channel attacks on processor pipelines, I've been hopeful that I would see something pop up. Imagine a world where our processors run without a clock![0] https://www.eetimes.com/document.asp?doc_id=1299083	whoisthemachine	9.418565	-5.224407	comment	4.0	16.0	1519212257	8.144069
16451993	Undocumented 8086 Opcodes, Part I	Undocumented 8086 Opcodes, Part I	beefhash	9.7978325	-5.64749	story	4.0	56.0	1519452425	-7.4697566
16498440	Show HN: Spectre exploit demo	Show HN: Spectre exploit demo	idea4good	9.690743	-5.60412	story	4.0	26.0	1519957399	7.6781907
16544289	Correct me if I'm wrong, but last ti	Correct me if I'm wrong, but last time I looked into it, AMD's CPUs support unbuffered ECC RAM, which is really hard to come by and much more expensive than the usual buffered ECC RAM.	Asooka	9.391175	-5.4383492	comment	4.0	12.0	1520517182	8.135052
16566856	Intel is fine as long as ARM doesn’t	Intel is fine as long as ARM doesn’t compete in their core markets. Then it’s a sudden and violent change.I guess you don’t see ARM attaining parity with x86?	melling	9.576197	-5.260609	comment	4.0	17.0	1520844477	-7.758946
16578354	Having a financial incentive to mess	Having a financial incentive to mess up AMD might explain why they only gave 24 hours' warning, though.	rebuilder	9.210417	-5.1903462	comment	4.0	36.0	1520964924	7.9283166
16582480	Vicearoy, a firm that specializes in	Vicearoy, a firm that specializes in shorting stocks, had a 25 page writeup [1] ready to print on why AMD was go bankrupt because of this before AMD itself even fully analyzed the issues.I suspect there will be an SEC investigation.1. https://viceroyresearch.files.wordpress.com/2018/03/amd-the-...	dsl	9.160105	-5.184589	comment	4.0	31.0	1521003852	7.871382
16583159	"""Just over two years ago, we release"	"""Just over two years ago, we released Raspberry Pi 3 Model B. This was our first 64-bit product""Very unfortunate that their in-house developed and promoted OS (""Raspbian"") only supports armv7, thus leaving the vast majority that doesn't know about the existence of (or how to use) archlinux ARM an the likes with a 32 bit os. Am I the only one that doesn't get the sense out of this here? Debian supports Aarch64 out of the box I think."	qalmakka	9.754831	-5.291411	comment	4.0	38.0	1521015509	-7.877114
16619604	This is off-topic, but these footers	This is off-topic, but these footers that read “Made with [emoji heart] in [random place]” are such an irritating startup meme.It makes particularly little sense for Magic Leap: they’ve got a billion dollars in VC funding, and their product is supposedly “made with heart” like an artisanal Brooklyn cupcake?	pavlov	9.791892	-6.2547264	comment	4.0	14.0	1521476423	-13.954987
16729450	Aarch64 support added	Aarch64 support added	algorithm314	9.741814	-5.3868513	story	4.0	82.0	1522604470	-7.775626
16737335	If apple uses its own chips, I would	If apple uses its own chips, I would assume that they would be aarch64 and not x86_64. Also, Microsoft has some magics for executing x86_64 binaries on aarch64 with good performance, so Apple may have a similar technology. We could end up with another situation similar to the Power->x86 transition that happened back in 2006.Or it could be nothing. This is a pretty thin article.	Skunkleton	9.671589	-5.197463	comment	4.0	17.0	1522692563	-7.7636995
16737608	If they wanted to go x86 they would 	If they wanted to go x86 they would just buy VIA? I think it will be aarch64	jononor	9.674665	-5.3070383	comment	4.0	18.0	1522693718	-7.7679434
16766851	But how in the world are you going t	But how in the world are you going to manage without ecc memory? You might have a bit get flipped by a cosmic ray once every 5 years of 24x7 computing.	jjeaff	9.504339	-5.532153	comment	4.0	19.0	1522948849	8.233103
16771392	I can't use emoji on here, but you c	I can't use emoji on here, but you could use them to write the date.2017Earth04Moon06Sun perhaps.Or, we already have (but don't use) the astronomical symbols. Most people understand the male and female symbols.	Symbiote	9.811065	-6.268264	comment	4.0	13.0	1522997149	12.831863
16790866	Single core? No AVX? What's the poin	Single core? No AVX? What's the point of writing it in C?	p1esk	9.597208	-5.579606	comment	4.0	32.0	1523255492	8.055337
16806497	Ack. I'm damn sorry, I just had a fu	Ack. I'm damn sorry, I just had a fully botched prod-update from hell and I'm on tilt.Yes. CVS and SVN. The old and ugly ones.	tetha	8.7564	-6.401934	comment	4.0	18.0	1523401918	-11.6061735
16818234	The main issue would be that 64-bit 	The main issue would be that 64-bit may cause an app to use more memory.  Every pointer doubles in size, the alignment of a structure containing a pointer may grow, etc.  Basically, if you needed a lot of structures allocated and they all grew, your memory use becomes noticeably bigger.Sometimes legacy code can make assumptions about pointer size.  These hacks were more common in the days of porting older systems to 32-bit but it could still happen moving to 64-bit.If there’s code that tries to manually populate the bytes of data structures, sometimes bugs appear when the target field size changes (e.g. somebody ends up not initializing 4 of the 8 bytes in a now-wider field).In the case of Apple, the huge pain will be their decision to not port all of Carbon to 32-bit (despite Forstall get	makecheck	9.83485	-5.290876	comment	4.0	19.0	1523510645	-7.726865
16938191	8OD – Arduino form factor Intel 8086	8OD – Arduino form factor Intel 8086	userbinator	9.582703	-5.27914	story	4.0	102.0	1524798400	-7.541983
16949240	I cannot wait for emojis to go out o	I cannot wait for emojis to go out of fashion.	cup-of-tea	9.803992	-6.2648363	comment	4.0	15.0	1524946672	-13.965367
16952406	Core Memory Upgrade for Arduino	Core Memory Upgrade for Arduino	ingve	9.741836	-5.2375884	story	4.0	75.0	1525015835	7.98523
16968841	There was an article on Hacker News 	There was an article on Hacker News recently that covered some of the reasons for Itanium's failure to realize its theoretical benefits. I'm not finding it now, but IIRC, the argument made was that predicting likely-parallelizable code is actually a lot harder to do at compile time, and that, like so many ultra-optimized systems, the real world works much differently and a messier, more random approach ultimately yields far better performance.	skywhopper	9.608269	-5.6974874	comment	4.0	49.0	1525193758	-7.846863
16978373	This sounds nice, but what about sup	"This sounds nice, but what about supporting operating systems besides for Linux and MacOS? A big part of using continuous integration is being able to test your code on the various platforms you deploy on. People have been asking for FreeBSD support since 2014[1] and Windows support since 2011[2]. For lots of projects not having Windows or FreeBSD support makes Travis CI not even an option for a CI tool. And from the outside looking in, it seems the Travis CI team doesn't care about adding support for other operating systems, it's been 7 years since the windows support issue was opened and there appears to be no progress.[1]: https://github.com/travis-ci/travis-ci/issues/1818
[2]: https://github.com/travis-ci/travis-ci/issues/216"	2trill2spill	8.866957	-6.43457	comment	4.0	24.0	1525277326	-5.5514793
16987149	MIPS I7200 Breaks the RISC Chain	MIPS I7200 Breaks the RISC Chain	tfmkevin	9.418752	-5.6781716	story	4.0	26.0	1525363422	-10.498584
17030638	Microsoft uses An FPGA NIC in every 	Microsoft uses An FPGA NIC in every Azure server today	amirhirsch	9.14667	-5.324167	comment	4.0	15.0	1525880410	-8.0285635
17077961	Back in the 1980's, I took one of th	Back in the 1980's, I took one of these chips and ran four copies of the same OS on it, using some virtual memory and driver magic. The full story can be found at http://jeff-barr.com/2008/01/08/inmsx-running-4-copies-of-an... .	jeffbarr	9.627943	-5.233589	comment	4.0	13.0	1526419114	-7.5471134
17096067	I wouldn't be surprised if Intel cam	I wouldn't be surprised if Intel came up with tools which help make use of the FPGA using higher languages like C.Xilinx is already pushing it's Vivado HLx which is pretty much that. I'm not aware of Altera's current offerings but they won't overlook this so easily.	ktta	9.0966	-5.3598685	comment	4.0	23.0	1526592464	8.432356
17102862	FPGA-Based Arduino in the “MKR” form	FPGA-Based Arduino in the “MKR” form factor	vongomben	9.095804	-5.3582335	story	4.0	38.0	1526661799	8.264945
17130544	Interesting, I think that a good CI/	Interesting, I think that a good CI/CD story is probably the biggest thing holding broader use of stored procedures back.	stuartaxelowen	9.2586975	-6.4095926	comment	4.0	15.0	1527034459	-3.319056
17132337	This [0] is one of my all time favou	This [0] is one of my all time favourite comments. Chris Wilson explains how the stroke miter limit works in cairio graphics through the medium of ascii art (and tidy maths).[0] https://github.com/behdad/cairo/blob/color-emoji/src/cairo-p...	aidos	9.936861	-6.2750387	comment	4.0	21.0	1527064755	-13.956909
17151676	That seems like a weak benefit. I do	That seems like a weak benefit. I don't think the fpga part will be cheap. In fact it will probably be significantly more expensive than the CPU. So then why not buy a chip with twice the cores if running twice the VMs is what you want to do with it? Also you can buy an AMD EPYC chip with twice the cores for about the same price you'd pay only for the CPU part of this chip/half the intel cores.	mtgx	9.328288	-5.316051	comment	4.0	16.0	1527237273	8.056792
17189602	Wow. I’m actually quite surprised at	Wow. I’m actually quite surprised at your response. Is ECC really not well know these days?	cmplxconjugate	9.458992	-5.5452676	comment	4.0	18.0	1527701035	8.299084
17202519	ARM Details “Project Trillium” Machi	ARM Details “Project Trillium” Machine Learning Processor Architecture	signa11	9.400914	-5.2584476	story	4.0	127.0	1527826431	7.8929167
17205139	It's OK, the parent will be paying t	It's OK, the parent will be paying the price when they're still writing native x86 code in 20 years time.	shawnz	9.655138	-5.2784915	comment	4.0	12.0	1527860197	-7.7880683
17215085	Please let's kill off Vivado once an	Please let's kill off Vivado once and for all.  Awful, massive, unintuitive proprietary software.There are open source tools for programming FPGAs, and they are really great too: https://rwmj.wordpress.com/2018/03/17/playing-with-picorv32-...The Virtex 7 series has been reverse engineered, but we're not quite in the situation where you can use the open source tools yet: https://github.com/SymbiFlow/prjxray	rwmj	9.095805	-5.3919873	comment	4.0	22.0	1527955063	8.490893
17219186	In core routers and switches, CPU is	In core routers and switches, CPU is the slow path.Brunt of the work is done in ASICs.	bostik	9.557996	-5.2519016	comment	4.0	15.0	1528028040	7.76315
17245007	Problem is windows support for this 	Problem is windows support for this many cores is still a problem. On a Linux server, sure we've been using multi-socket motherboards w/ high core count CPUs for years. But many applications (eg; Microsoft Edge) still crash w/ 16 cores.	alfalfasprout	9.657854	-5.386937	comment	4.0	14.0	1528269795	7.9801507
17262727	I sometimes wonder what the world of	I sometimes wonder what the world of computing, or even the world in general, would look like today if Linus Torvalds hadn't existed, or happened to have not gotten into computers.	mistermann	9.395456	-5.7725596	comment	4.0	29.0	1528434502	-8.232822
17264218	> I thought intel, after a decade of	> I thought intel, after a decade of market domination, was sitting on piles of options and brains. But AMD made them drown (on the PR side) way faster than I expected. The only thing they had was Premium 10cores models. No innovative design or idea.Intel has AVX-512, which is in my opinion one of the greatest innvoation in the x96 instruction set for a long time. The problem is that Intel wants to introduce AVX-512 only very slowly into consumer CPUs (slowly beginning with Cannon Lake, which will only be available in small quantities for some time if rumors are to be believed). Even more: For some parts of AVX-512 (e.g. 4FMAPS and 4FMAPS which are very useful for deep learning), Intel seems to be willing only for special expensive accelerator cards (Knights Mill) to include them to segmen	wolfgke	9.41713	-5.3090863	comment	4.0	23.0	1528455824	7.905382
17268317	> (Update: it was an accident, which	> (Update: it was an accident, which Linus responded to in his usual fashion.)This jab at Linus is unfounded, he have replied calmly and professionally.	chx	9.284659	-5.8940597	comment	4.0	16.0	1528482182	4.236094
17272869	"Article says ""CPU does not fit FPGA "	"Article says ""CPU does not fit FPGA synthesis very well and uses almost whole thing"".People serious about prototyping usually get daughterboards for FPGA and/or FPGA stacks specifically to prototype big things with CPUs. The buses can go outside of main FPGA with CPU and into other things. I know at least one big SoC project which went that way.I also think that having an ARM core in FPGA is a vendor lock in. For example, you cannot use AMBA/APB/AXB and other ARM buses with ARM CPU core in your design without paying ARM for license for these buses. It is not clear to me whether Zynq users have to pay for these buses and it may be case that they have to. Finally, ARM core in the prototype naturally extends into ARM core in the final product.ARM itself is not very nice design from contempora"	thesz	9.39883	-5.2018304	comment	4.0	24.0	1528550286	-7.777446
17273400	Vivado is absolutely terrible, espec	Vivado is absolutely terrible, especially the GUI. Our toolchain at work is set up so that it can be entirely avoided, with developers only writing Verilog in their editor of choice, and calling make or pushing to Jenkins when they want results. And then they go home, as it takes a full day to build a product on our server farm. Sim/others is done with third-party products.I recall one Xilinx event where a Xilinx presenter asked how many people were using the Vivado IDE for development. IIRC, only a single hand was held up.Vivado isn't worse than the competition, though. Intel/Altera's offering is also a steaming pile of crap (we evaluate the competing platform every once in a while when we decide what FPGAs to use for new products).I don't know why all FPGA tooling sucks, but it does.	arghwhat	9.094065	-5.402409	comment	4.0	22.0	1528557212	8.469717
17271803	FPGAs becoming more SoC-like	FPGAs becoming more SoC-like	chclau	9.108019	-5.3351483	story	4.0	112.0	1528525257	8.315317
22833602	Yes, the original Javascript exploit	Yes, the original Javascript exploit from the paper still works, because the browser cannot mitigate this attack without just disabling parts of Javascript entirely which breaks Javascript.With all current kernels built to mitigate these exploits, and all sane people running those kernels, there's no benefit in patching the browsers too, even if it were somehow possible, which for all intents and purposes it is not.https://react-etc.net/page/meltdown-spectre-javascript-explo...	RIMR	9.785549	-5.66856	comment	4.0	15.0	1586530381	7.4903836
22872786	So after years of an effective Intel	So after years of an effective Intel monopoly I'm really glad to see AMD is back in a way that I don't think I've seen since the Athlon64/Opteron days. Back then it was AMD who pushed the x86-64 instruction set when Intel was claiming EPIC was the future (ha).At this point, Intel's move to 10nm processes is an embarrassment. I'm sure it's a difficult problem but historically Intel has been reasonably good at planning process advancements but in the case of 10nm they've been off by years. I believe the original goal was 2017? And we're still not there yet.I would dearly love to see an honest postmortem of this and see what went wrong. Who made promises they'd miss by so much, why, what the issues were and so on.The last PC I built (because apparently I still do that, even though it annoys m	cletus	9.247205	-5.2041154	comment	4.0	31.0	1586907586	7.7452188
22887656	How would you characterize the quali	How would you characterize the quality of CircleCI? I've spent quite a few hours trying to work out mysterious bugs in a build process that runs fine locally. This morning the web ui was full of 'client error' messages.	sbt	8.942526	-6.3920946	comment	4.0	24.0	1587029791	-2.1340988
22890650	Does this new intel CPU have 'fixes'	Does this new intel CPU have 'fixes' for all issues like spectre and meltdown, where you were supposed to turn off hyperthreading for better security?  I'm just curious if the fixes for those (and other similar vulnerabilities) are starting to make their way into silicon, but also that the fixes recommended usually slow cpu's down quite a bit too.	briffle	9.535121	-5.4211884	comment	4.0	27.0	1587052419	7.809858
22902366	I'm not sure which platform you're t	"I'm not sure which platform you're talking about, mine uses PPC, which hasn't been in a desktop in quite some time.kern.version: JUNOS 18.XXX.X #0: XXXX-XX-XX 03:28:10 UTC
    builder@svl-junos-p001:/volume/build/junos/18.X/release/18.XXX.X/obj/powerpc/junos/bsd/kernels/JUNIPER-PPC/kernelThere certainly are some routers that use x86 based CPUs, but they're embedded versions which you'd be unlikely to use on a PC."	bifrost	9.779075	-5.2142363	comment	4.0	20.0	1587153124	-7.8305225
22916219	If the FPGA can be updated, attacker	If the FPGA can be updated, attacker can take over the hardware and reprogram it.If attacker gets access to the bitstream, the has complete control over the FPGA.	Nokinside	9.101495	-5.355507	comment	4.0	18.0	1587307393	8.351893
22920990	Blockchain + version control for new	Blockchain + version control for news?	downshun	8.849768	-6.35848	comment	4.0	16.0	1587355219	1.3015325
22923030	any other providers supporting ARM64	any other providers supporting ARM64 VPSs?	gdamjan1	9.694235	-5.3374877	comment	4.0	12.0	1587383554	-7.8297205
22923520	I guess most companies could easily 	I guess most companies could easily just run their code on x64 without porting necessary. How many clients would have ARM64-specific code running that absolutely would not run on x64? What Scaleway did is not ideal, but I think you are blowing it out of proportion.	sgt	9.694092	-5.343603	comment	4.0	15.0	1587388341	-7.7989745
22950995	The writing's been on the wall for M	The writing's been on the wall for MIPS for ages. AFAIK it's not better than ARM in any meaningful way.	api	9.496988	-5.5139904	comment	4.0	16.0	1587595200	-10.408247
22951194	May be its days are numbered, but MI	May be its days are numbered, but MIPS still has significant presence in the low to medium end routers (Mediatek's MT72xx, Atheros AR7xxx so on).	strooper	9.490545	-5.551481	comment	4.0	33.0	1587597081	-10.450236
22951248	MIPS still has a very large presence	MIPS still has a very large presence in the education sector as well - MIPS asm is very easy to learn because of how consistent it's syntax is and the plethora of open source debuggers as well.Learning MIPS was what originally got me interested in ASM programming since we had a class that was focused on MIPS code and another class that had us build a digital MIPS processor from scratch. The combination of these two classes really sold me on the magic of super low-level programming.	dashwav	9.651773	-5.7369595	comment	4.0	29.0	1587597668	1.9801
22957205	having faster processors, is what's 	having faster processors, is what's wrong with our computing industry in general. processors on laptops | desktops have become 1000x faster, but has the software kept up.no software has gotten slower by the ages. Apple, Qualcomm, Intel can make as much faster processors with x cores, but do we have software able to utilize those, eh! run a JS heavy site | app and you see most processors heat up these days whether mobile or desktop.most programming languages can't easily delegate work to cores with smoothness like how Erlang n Elixir do it. in Python threads, were a nightmare but now with concurrent futures or dask at least we can utilize all cores.tldr - we need to make faster software	dzonga	9.5968075	-5.2901344	comment	4.0	27.0	1587656617	8.04063
23020728	Anybody know what the benefits of a 	Anybody know what the benefits of a BSD jail might be over a VM?	rubatuga	9.780889	-6.319663	comment	4.0	17.0	1588175924	10.453476
23028354	Revengineered ancient PDP-11 CPUs, o	Revengineered ancient PDP-11 CPUs, originals and clones	lelf	9.766142	-5.363505	story	4.0	61.0	1588231799	-7.5466995
23032494	No, it does not matter. That's a com	"No, it does not matter. That's a common misconception. If you double your core count you can run double the number of threads in the same amount of time. That's it. If you double your single core speed  you can still run double the number of threads in the same amount of time or the same amount of threads in half the time.Single core performance is always preferable for CPUs.The CPU manufacturers basically conned everyone into thinking multi-core was ""good enough"". Software people who knew what they were talking about back in the day called them out on it but nobody listened. Now here we are on Hacker News in 2020 and people still not understanding this."	globular-toast	9.615828	-5.368585	comment	4.0	28.0	1588263183	7.9192185
23042960	ARM is very old as well and has plen	ARM is very old as well and has plenty of technical debt.RISCV, on the other hand...	bcatanzaro	9.398733	-5.6242614	comment	4.0	24.0	1588346846	2.21029
23057905	Feel free to call it a conspiracy th	Feel free to call it a conspiracy theory, but I firmly believe the IME/PSP is an operation by one of those three letters.Intel Management Engine is abbreviated as IME, and AMD Platform Security Processor is abbreviated as PSP. Those are each same abbreviation as Input Method Editor, a mandatory keyboard input layer for East Asian languages, and PlayStation Portable, Sony’s game console which cryptographic security is famously hacked, by the way.That can’t be coincidence. Those are names intentionally chosen to make technical information hard to search for.So a “clean” CPU can only be built outside of sphere of influence of whichever agency managing IME/PSP, and of course has to be free from its Red counterparts as well. I don’t think that will happen naturally.	numpad0	9.447099	-5.2009068	comment	4.0	13.0	1588497939	7.7548623
23078691	I have a very cpu intensive applicat	I have a very cpu intensive application in Rust, that is able to use all cores given to it.I am thinking about going for the Epyc 7502p with 32 cores but having a hard time knowing if the Threadripper counterpart with 32 cores would be better given its higher frequency.Guess it is very hard to answer but which one would you go for? Will the threadripper perform much better?	erkken	9.414456	-5.289438	comment	4.0	20.0	1588676850	7.9807005
23103824	I hate to rag on new stuff, especial	I hate to rag on new stuff, especially in the HDL space where I think it's desperately needed, but the syntax of this language is so foreign that I think it's extremely unlikely you really get a large amount of adoption. We can't even get Verilog 1995 people to switch to 2001, let along SystemVerilog.	ancharm	9.175952	-5.547195	comment	4.0	26.0	1588863999	8.626244
23114034	So the security of a blockchain now 	"So the security of a blockchain now depends on the security of the SGX enclave?  What could possibly go wrong...> Unfortunately, this proposal suffers from a critical security economics issue: node maintainers here have a strong incentive to break into their own SGX chips. If an adversary managed to compromise their SGX, they could win the leader election at every round by setting the timeout to 0. The more valuable the network, the stronger the incentive to compromise your own platform.I wouldn't call controlling my own SGX ""compromising my own platform"".  It is my own platform after all, why should I not control it as I please?"	eqvinox	9.491471	-5.226194	comment	4.0	28.0	1588940902	-5.8256025
23135783	Is anyone besides embedded doing _an	Is anyone besides embedded doing _any_ 32-bit dev outside of maintaining legacy code?I mean 64-bit PowerPc is by now around 17 Years old and even 15 years ago some of the most widespread users of PowerPc (Xbox) switched to using 64 bit PowerPc architecture...	dathinab	9.803912	-5.2324767	comment	4.0	17.0	1589141890	-7.8963246
23170308	Ironic the site has such a bad UX. E	Ironic the site has such a bad UX. Emoji make it hard to read; all the information is pointlessly in collapsing boxes, it has screwy animations and scrolling, crazy hover effects, bad zoom (it's blurry), silly checkmarks instead of bullet points...	cosmotic	9.806956	-6.2630706	comment	4.0	16.0	1589395922	-13.971036
23189943	"Aren't coffee machines and other ""du"	"Aren't coffee machines and other ""dumb"" appliances often MIPS? Even my internet router has a MIPS controller (Fritz!Box by AVM)."	foepys	9.491649	-5.5775228	comment	4.0	12.0	1589529502	-10.4813795
23193581	I use emojis a lot in Slack and text	I use emojis a lot in Slack and texting. They can remove some accidental ambiguity in your writing, by making your intent clear. For example, the tongue out emoji can work to make sure people know you're being sarcastic.	servercobra	9.781906	-6.261282	comment	4.0	25.0	1589557771	-13.953773
23194920	"Personally, I find I dislike any ""em"	"Personally, I find I dislike any ""emotion"" added to TTS -- I find Alexa's emo markup, a la:https://developer.amazon.com/en-US/blogs/alexa/alexa-skills-...to be disturbing and without much added value. (Such as used with games like Jeopardy.)If used, the application of these tags needs to be both meticulous in its proper context, somewhat non-deterministically applied, and with randomized prosody. Repeated usage of the same overstated emotive content is annoying and unnatural (worse than a ""flat"" presentation) and only serves to underscore the underlying inflexible conversational content."	thelazydogsback	9.788969	-6.261219	comment	4.0	22.0	1589564230	-13.948825
23201558	What is a unikernel and why it's goo	What is a unikernel and why it's good?	tasubotadas	9.917844	-6.237673	comment	4.0	24.0	1589618038	-12.3848715
23205584	The 8087's microcode ROM is very unu	The 8087's microcode ROM is very unusual because it stores two bits per transistor for higher density. The ROM uses four transistor sizes so each position outputs one of four voltages, which are converted to two bits.(This is separate from the constant ROM, which is a normal one-bit-per-transistor ROM.)	kens	9.608465	-5.418032	comment	4.0	13.0	1589651395	-7.379248
23225960	Because AMD is a company with a long	Because AMD is a company with a long history of making crappy processors, that only recently created a decent one, by lucky coincidence. Intel is exactly the opposite.Even now Intel architecture is still superior in some areas, the biggest downside of it being the fact that they are stuck on the outdated 14nm++++ process.Once the Intel's 7nm comes out there will be no reason to buy AMD, except for the price (I expect Intel's 7nm process to be roughly equivalent, or even superior to TSCM's 5nm)	mamon	9.279823	-5.1901336	comment	4.0	13.0	1589824692	7.911329
23227566	Is this a thing that's happening? I 	Is this a thing that's happening? I remember how cool I thought FPGAs were from my college CE classes. Seems intuitive to me that you would want to specialize the hardware once you have a process figured out. The fact that FPGAs are upgradable makes it even more of a no brainer to me.	rhlsthrm	9.09431	-5.3606644	comment	4.0	13.0	1589831677	8.378649
23248081	How comes that the fastest desktop C	How comes that the fastest desktop CPU's from Intel don't have AVX-512?The Xeon CPU's have AVX-512.Laptop CPU's like i3-8121U have AVX-512.Why not desktop too? This has been going on for years.	Aardwolf	9.416339	-5.46004	comment	4.0	14.0	1589988707	8.029176
23266177	Intel has the Cyclone V range.Also, 	Intel has the Cyclone V range.Also, I've never done it myself but I've read that digikey prices are almost never the actual price for FPGAs even in relatively small quantities (haggling with avnet).	mhh__	9.20186	-5.227119	comment	4.0	13.0	1590099601	8.160922
23283008	thats not just an intel problem	thats not just an intel problem	gameswithgo	9.344031	-5.1949563	comment	4.0	13.0	1590242606	7.757696
23296479	He didn’t just switch to AMD, he swi	He didn’t just switch to AMD, he switched to the 32 core Threadripper 3970x.	9wzYQbTYsAIc	9.3086815	-5.1864285	comment	4.0	17.0	1590367645	7.8563433
23309034	AVX-512 Mask Registers, Again	AVX-512 Mask Registers, Again	ingve	9.7997875	-5.929659	story	4.0	102.0	1590486335	-7.4657083
23339286	Lol that's obvious. But, the trend i	Lol that's obvious. But, the trend is what I am concerned about and asking if others feel the same. I can't control if I am reading someone else document full of emojis. Can you imagine RFCs in this format?To me, Emojis have a place when you're discussing with others and socially interacting. May be even in code reviews to reduce friction and add some human emotion to what you're saying in cold words. Use it to chat with people - totally ok.Documents with emojis is definitely an anti-pattern IMO. To give an extreme example, can you imagine reading python docs with Emojis? Or Tolstoy? What about tax documents with emojis? Court proceedings? Job resumes? Aircraft emergency checklists?	fermienrico	9.784631	-6.267698	comment	4.0	15.0	1590683702	-13.995945
23364488	If you're an emacs user, check out h	If you're an emacs user, check out https://magit.vc/	beshrkayali	8.899359	-6.399277	comment	4.0	36.0	1590871109	-11.381353
23366310	Care to explain what you think is so	Care to explain what you think is so good about it? I used emacs with evil a couple times but never understood the hype around magit	dvcrn	8.876805	-6.409732	comment	4.0	15.0	1590887090	-11.362956
23369088	how come hundred cores is only speed	how come hundred cores is only speedup of ~6?	Iwan-Zotow	9.532425	-5.278642	comment	4.0	14.0	1590927730	7.9361634
37733200	Arm’s Cortex A510: Two Kids in a Tre	Arm’s Cortex A510: Two Kids in a Trench Coat	picture	9.556134	-5.1923337	story	4.0	130.0	1696212850	5.503784
37734697	> Two A510 cores can be clustered an	> Two A510 cores can be clustered and share a L2 cache, FPU, and L2 TLB. Arm calls this a merged core configuration, and hopes it’ll increase area efficiency with minimal performance impact.Isn’t this also a lot like what AMD did with Bulldozer?	bpye	9.555907	-5.345505	comment	4.0	15.0	1696228888	7.9946756
37749416	Watch this fade into obscurity the s	Watch this fade into obscurity the same as Intel's 3D X point.The world is not ready for the diseconomies of scale of a second memory type. DRAM and SSD fabs are struggling so why shouldn't they?Goodbye promising technology!	imtringued	9.742004	-5.186597	comment	4.0	13.0	1696322998	7.9727473
37760716	Still no support for ECC RAM.  When 	Still no support for ECC RAM.  When is someone going to take a leadership position?	mixmastamyk	9.467902	-5.503002	comment	4.0	19.0	1696392119	8.320691
37769568	That is hilarious! I've never been s	That is hilarious! I've never been so tempted to use Facebook :-) When will this feature be added on Hacker News? Right after they implement emojis I do hope!I wonder how Facebook reasons they're not violating copyright here.	lolc	9.804225	-6.2574787	comment	4.0	19.0	1696444304	-13.910009
37793874	I have found Bruno (https://github.c	I have found Bruno (https://github.com/usebruno/bruno) to be a decent basic alternative with a nice bonus of being version control friendly, keep in mind that it's fresh and relatively unpolished though - for instance it doesn't ask you to save changes before closing the app.	isbvhodnvemrwvn	8.877226	-6.348753	comment	4.0	15.0	1696614980	-11.737145
37797157	Itanium and MIPS were... just fine t	"Itanium and MIPS were... just fine though.  Both architectures have parts that were very competitive along essentially all metrics the market cares about.  ia64 failed for compatibility reasons, and because it wasn't ""faster enough"" than x86_64.  No one saw much of a reason to run it, but Intel made them well and they made them fast.And MIPS failed for the same reason ARM pulled ahead: in the late 90's Intel took a huge (really, huge) lead over the rest of the industry in process and MIPS failed along with basically every other CPU architecture of the eraAmusingly the reason ARM survived this bottleneck is because it was an ""embedded"" architecture in a market Intel wasn't targetting.  But there's absolutely nothing technical that would prevent us from running very performant MIPS Macs or w"	ajross	9.581214	-5.2776275	comment	4.0	18.0	1696631211	-7.7125597
37797852	That's kinda revisionist.  In fact i	"That's kinda revisionist.  In fact ia64 owned the FP benchmark space for almost a decade, taking over from Alpha and only falling behind P6 derivatives once those started getting all the high end process slots (itself because Intel was demolishing other manufacturers in the high-margin datacenter market).The point was that ia64 was certainly not an ""inferior"" ISA,  It did just fine by any circuit-design measure you want.  Like every other ISA, it failed in the market for reasons other than logic design."	ajross	9.559694	-5.414161	comment	4.0	12.0	1696636986	-7.7353
37798440	RISC-V is an American made, American	RISC-V is an American made, American owned design that just happens to be open source hardware friendly.Reuters is acting like this is some sort of a) amazing new technology that isn't just the newest iteration of a 30 year old architecture family, b) owned and created by China, and c) this isn't just some ploy by the Republicans to harm American interests abroad to protect their own private investments.What a crap article.	DiabloD3	9.369672	-5.676171	comment	4.0	15.0	1696644667	-10.58806
37827944	If only if legislators could get the	If only if legislators could get their shit together and mandate ECC.It is unnerving most computing is done in fragile non-ecc systems.A very messed up form of artificial market segmentation.	snvzz	9.412246	-5.489947	comment	4.0	22.0	1696905072	8.272701
37829007	Ryzen consumer CPUs use the same mem	Ryzen consumer CPUs use the same memory controller as their EPYC counterparts, and have full ECC support if the rest of the platform (i.e., motherboard, DIMMs) also supports ECC.What separates Ryzen from its professional-grade counterparts is that ECC support is an optional part of the consumer Ryzen platform spec, which means that it's up to the motherboard vendor to enable support for it. Some motherboards don't have any support at all, some have ECC support as an explicitly-advertised feature, and many have ECC support but it's not explicitly advertised (simply listed as a footnote in the manual).That's different from the way Intel does it, where Intel has explicit control over what the platform's feature are, and uses that control to aggressively segment their markets. Intel's approach	theevilsharpie	9.381593	-5.4531355	comment	4.0	22.0	1696918245	8.243175
37829345	Maybe slightly OT, since this concer	"Maybe slightly OT, since this concerns AMD older AM4 platform with a Zen3 APU core, but working ECC support looks like this and is definitely present on my system:    $ sudo ras-mc-ctl --errors | tail -n5
    14 2023-08-20 20:16:41 +0200 error: Corrected error, no action required., CPU 2, bank Unified Memory Controller (bank=17), mcg mcgstatus=0, mci CECC, memory_channel=0,csrow=0, mcgcap=0x0000011c, status=0x9c2040000000011b, addr=0x36e701dc0, misc=0xd01a000101000000, walltime=0x64e31c78, cpuid=0x00a50f00, bank=0x00000011
    15 2023-08-23 17:17:49 +0200 error: Corrected error, no action required., CPU 2, bank Unified Memory Controller (bank=17), mcg mcgstatus=0, mci CECC, memory_channel=0,csrow=0, mcgcap=0x0000011c, status=0x9c2040000000011b, addr=0x36e701dc0, misc=0xd01a000101000000, wa"	c0l0	9.425852	-5.497436	comment	4.0	24.0	1696922130	8.232547
37829796	The frequency of these errors should	The frequency of these errors should be enough to cause you to distrust any kind of information output by a computer without ECC.Edit: thinking about this a bit longer: that frequency is actually so high that you may well have a broken module in there. Note how it is the same module and the same address every time.	jacquesm	9.524034	-5.5365467	comment	4.0	17.0	1696927453	8.303642
37842137	What's new for RISC-V in LLVM 17	What's new for RISC-V in LLVM 17	todsacerdoti	9.378511	-5.705763	story	4.0	51.0	1697012470	-10.5857935
37847547	LLVM needs a way to be able to turn 	LLVM needs a way to be able to turn off compressed instructions entirely at configuration time.  Some of the RISC-V server platforms which will appear in the next few years won't have them.	rwmj	9.455133	-5.7672524	comment	4.0	25.0	1697045503	8.753997
37852652	So much of this, such as the backped	"So much of this, such as the backpedaling on support of AVX512, seems to be at least indirectly related to the desire to ""solve"" the problem that occurs when Intel wants to have little (efficiency) cores that might not have the same feature set as the big (performance) cores.Two decades ago I put a Pentium III and a Celeron on to the same dual processor motherboard (using a Celery to Nintendo cartridge adapter), and said, ""Look! Different processors can run at the same time in the same system. Perhaps we should have a way for processes to express a desire to use specific CPU features, and if they request features not available on all CPUs, we'll keep them on the ones that do."" Sigh.Intel should've told OS writers years ago that heterogenous CPU features would be a thing soon, so prepare fo"	johnklos	9.48891	-5.4389515	comment	4.0	35.0	1697075985	8.052513
37852722	No it wouldn't because promotion of 	No it wouldn't because promotion of a process from an E core to a P core isn't free. Microsoft and Intel could literally do this today on existing hardware by trapping unsupported instructions and then having the OS scheduler promote the process but they don't because it takes so stupidly long and requires an immense burst of resources. All this AVX10/128 is a necessary evil because the far better option is for an E core to be able to at least run the code, even if it's not performant.	Veliladon	9.547933	-5.495384	comment	4.0	31.0	1697076693	8.060697
37859388	A few cores too many (2016)	A few cores too many (2016)	gus_massa	9.531069	-5.2878203	story	4.0	35.0	1697128016	7.9256353
37882161	Total amateur here: does a 386 have 	Total amateur here: does a 386 have “cleverness” or optimizations or does it just quite literally chug through a stream of instructions, adjusting registers and memory?I guess by this I am thinking about how newer processors do all kinds of stuff at the microcode level that mean you cannot anticipate precisely what instructions are being executed in what order.	Waterluvian	9.736151	-5.604145	comment	4.0	14.0	1697302820	-7.5348616
37882658	There was some discussion of the aut	"There was some discussion of the automatic placement in this panel interview.If I remember correctly, the software that performed the placement was written by a graduate student who debugged it from a terminal at his dormitory. It was one of many project decisions on the i386 that management would have absolutely stopped had they been made aware.https://www.computerhistory.org/collections/catalog/10270201...""386 is a complicated processor (by 1980s standards), with 285,000 transistors...""Interesting that ARM1 was only 25,000 transistors. Did the i386 really have additional features that justify an order of magnitude?One thing is certain in retrospect: Intel should have bought Acorn, not Olivetti.Edit: Wow, there is even more detail on the placement software in the Righto article; the softw"	chasil	9.560966	-5.3068132	comment	4.0	14.0	1697306276	-7.8001432
37886707	It's a pretty interesting question, 	It's a pretty interesting question, even if a bit tangential to the article!Their main advantage is the comparatively low transistor count. The chips can be made cheaply and don't need cutting-edge fabs. This also makes them exceptionally power-efficient and tolerant of a wide range of supply voltages, so they're easier to integrate into many designs.Just as important, they are far easier to master. Single-cycle instruction execution, single chip-wide clock, simple interfaces to all peripherals. If you don't have an OS to abstract it all away, most of the contemporary 32-bit platforms are a serious pain. Adjusting clock speed on a typical Cortex-M chip requires following a carefully-choreographed sequence of steps, possibly fiddling with flash wait states, various bus clocks, PLLs, and so 	PumpkinSpice	9.625006	-5.246329	comment	4.0	17.0	1697341764	-7.472749
37915793	I used to think these Linus smack-do	I used to think these Linus smack-downs were pretty funny. I guess I still kinda do, but I'm not proud of it. These were more appropriate when Linus was an underdog - now he's just being an asshole, or at the very least unprofessional. I've contributed Linux kernel code, thankfully several rungs below anything the God emperor would be looking at - I would have been wrecked by a review like this.	LastTrain	9.345239	-5.863155	comment	4.0	34.0	1697553397	4.268993
37916284	Arguably it's less direct due to the	"Arguably it's less direct due to the superlatives and exclamations. For example:> Christ. That's literally the remap_file_pages() system call
definition. No way in hell does ""ON_BEHALF_OF_KERNEL"" make any sense
in this context.This could be> That's the remap_file_pages() system call definition. ""ON_BEHALF_OF_KERNEL"" does not make any sense in this context.If someone I didn't know or was unfamiliar with gave me a review like this I'd frown, but since Torvalds is known for this then I'd shrug it off probably. It's a good, thorough review though."	thdc	9.746936	-5.6723	comment	4.0	29.0	1697555125	1.3673431
37925119	I want to ask this ignorant question	"I want to ask this ignorant questionOther than being OS, cheaper... For the consumer do they need to know that it's risc v? Would a laptop instead of saying ""Intel"" or ""ryzen"" it would say risc v on the sticker... Otherwise it's still windows or ChromeOS?"	ge96	9.375203	-5.65941	comment	4.0	14.0	1697606899	-10.561366
37929268	E cores have been the bane of my exi	E cores have been the bane of my existence at $dayjob. I received a new laptop a while back with an i7-12800H. I make heavy use of VMware workstation virtual machines under Windows. It kept wanting to put my VMs on the E cores, which meant they crawled and showed 100% CPU usage inside the guest, but the host was mostly idle. Luckily others had run into this issue and shared some configuration settings (powercfg /powerthrottling /disable) to exempt the VMware processes. I lost so much time tracking that down, I almost went back to the old laptop.	heywire	9.543287	-5.342051	comment	4.0	25.0	1697639689	7.848332
37930664	Earlier this year, AMD, Arm, Intel, 	Earlier this year, AMD, Arm, Intel, Meta, Microsoft, NVIDIA, and Qualcomm Technologies, Inc. formed the Microscaling Formats (MX) Alliance with the goal of creating and standardizing next-generation 6- and 4-bit data types for AI training and inferencing.  The key enabling technology that enables sub 8-bit formats to work, referred to as microscaling, builds on a foundation of years of design space exploration and research.  MX enhances the robustness and ease-of-use of existing 8-bit formats such as FP8 and INT8, thus lowering the barrier for broader adoption of single digit bit training and inference.Spec: https://www.opencompute.org/documents/ocp-microscaling-forma...Whitepaper: https://arxiv.org/abs/2310.10537Code: https://github.com/microsoft/microxcaling	opcode84	9.607549	-5.2463713	comment	4.0	19.0	1697645059	7.5312405
37943507	Yes, I have the same feeling about t	Yes, I have the same feeling about the SPECTRE mitigations, for example. No one is going to be attacking my home Linux box with SPECTRE (has anyone ever been attacked with SPECTRE?), but by default they remove like 10+% CPU performance, just in case. I disabled the mitigations.	coldpie	9.667981	-5.576543	comment	4.0	19.0	1697726266	7.8727818
37962632	secure boot + virtualized memory enc	secure boot + virtualized memory encryption is supposed to prevent that, you'll have to trust intel/amd though.	the8472	9.933909	-5.2270308	comment	4.0	15.0	1697844438	-7.94649
37964744	Yes but why would you waste silicon 	Yes but why would you waste silicon implementing complicated stuff from the 90s when you can have something more modern like RISCV or ARM?	raverbashing	9.417791	-5.5900197	comment	4.0	17.0	1697872055	-10.570876
37966319	A softcore is a CPU to run on an FPG	A softcore is a CPU to run on an FPGA.Microwatt fits in a Lattice ECP5 FPGA with 85,000 LUTs (plus some block ram). Not sure how you'd get to transistors from that, wild guess times by 15 maybe? (But then the FPGA also has other special hardware blocks intended for interfacing with DDR RAM and other things, so those would be more as well).You can see how the Power instruction decode  is implemented https://github.com/antonblanchard/microwatt/blob/master/deco...	mkj	9.440866	-5.381308	comment	4.0	16.0	1697891900	8.1641035
37980027	Single core performance?All i'm seei	"Single core performance?All i'm seeing is the confirmation that independently parallalizable tasks finish twice as fast on a cpu with twice the cores. cool, amdahl's law is proven.The handbrake one, all the times seems similar indicating similar single core perf.This matters for me since single core perf is pretty important for visual studio/other software with alot going on feeling ""snappy"" even tho the actual compiling/rendering might be faster and scale with moree cores."	Racing0461	9.588371	-5.3306193	comment	4.0	28.0	1698017571	7.9953475
37983040	What are the use cases of unikernels	What are the use cases of unikernels and WASM?	colesantiago	9.92399	-6.2276745	comment	4.0	20.0	1698050317	-12.378502
37992709	General term is asymmetric multiproc	"General term is asymmetric multiprocessing, which goes back a few more decades:https://en.wikipedia.org/wiki/Asymmetric_multiprocessingIIRC big.LITTLE implementations tended to have cores that didn't support the same instruction sets, meaning you couldn't migrate tasks between them if you needed to. Kind of like how laptops could switch between integrated and discrete GPUs, but some users would need to switch to the discrete GPU to use an external monitor even if they didn't want the power hit.Also, ""big.LITTLE"" is a pretty strange brand name."	astrange	9.815857	-5.579446	comment	4.0	15.0	1698101566	-10.607382
37996566	A shame, but also unsurprising. I ne	A shame, but also unsurprising. I never understood how they could have such a high burn rate for a technology that hadn't really taken off in the markets that they were targeting.RISC-V is/was vitally important in putting downward pressure on ARM licensing. But large companies were never going to move off ARM for their workhorse CPUs. They'd use the threat of moving to RISC-V as a way of getting sweetheart IP deals from ARM, but no one actually wanted to start over on a new software transition while the move to ARM was still unfinished.	adastra22	9.408738	-5.5956755	comment	4.0	17.0	1698138943	-10.5519905
37996647	Awesome news. The world is healing.H	"Awesome news. The world is healing.Having a big player as the ""ARM of Risc-V"" funded by VC was so toxic. It takes the oxygen out of the ecosystem.The next step in open hardware is not having more proprietary silicon shops, it's streamlining the manufacturing process to make it look more like pooled PCB manufacturing, so that open collaborative groups can cheaply iterate their designs."	meltedcapacitor	9.378996	-5.6436872	comment	4.0	17.0	1698139547	-10.568725
37996703	I mentioned it elsewhere but a big d	I mentioned it elsewhere but a big draw is FPGA soft cores or others forms of embedded CPU stuff.  ARM licensing terms are bonkers so riscv has a major advantage if you need something better than a NIOS II or Microblaze (soft cores that Intel and Xilinx provide respectively).	edrxty	9.406656	-5.6076517	comment	4.0	16.0	1698140001	-10.562431
37997067	RISC-V architectural purism was neve	RISC-V architectural purism was never going to survive any major effort to deploy it. Either you make changes like what Qualcomm suggest here or you aren't competitive.The major question is how well RISC-V will manage disputes over this sort of thing without some group such as Qualcomm deciding to just release their version anyway.	fidotron	9.395023	-5.660502	comment	4.0	29.0	1698143711	-10.55825
37998464	I saw this asked the other day but n	I saw this asked the other day but never really saw a satisfactory answer. Why has RISC-V taken off? It's not the only royalty-free ISA. OpenPOWER and OpenSPARC have both been around for almost 20 years with basically 0 enthusiasm.	VyseofArcadia	9.415523	-5.6750817	comment	4.0	13.0	1698151877	-10.5512905
37998501	There's a bit more context rumbling 	There's a bit more context rumbling under the surface.Not too long ago, Qualcomm bought NUVIA, a designer of high performance arm64 cores that can theoretically compete with Apple cores on perf.  Arm pretty much immediately sued saying that the specifics of the licenses that Qualcomm and NUVIA have mean that cores developed under NUVIA's license can't be transferred to Qualcomm's license.[0]  Qualcomm obviously disagrees.  Whatever happens those cores as they exist today are going to be stuck in litigation for longer than they're relevant.Qualcomm's proposal smells strongly like they're doing the minimum to strap a RISC-V decoder to the front of these cores.  For whatever reason the seem hell bent on only changing the part of the front end that's the 'pure function that converts bit patter	monocasa	9.5309725	-5.595	comment	4.0	30.0	1698152032	-10.480505
38020291	They were the same thing at one time	"They were the same thing at one time. ""Emoticons"" came first.[1] When someone replaced :-) with a smiley picture, there was a debate about whether they should be called emoticons or emojis. Emoji won out.1. https://www.independent.co.uk/tech/happy-30th-birthday-emoti..."	pictureofabear	9.800503	-6.27414	comment	4.0	16.0	1698281193	-13.961983
38024069	AMD Ryzen Threadripper Pro 7000WX at	AMD Ryzen Threadripper Pro 7000WX at 96 Cores and Threadripper 7000 HEDT	PaulHoule	9.312565	-5.1873646	story	4.0	22.0	1698318805	7.876617
38049006	Does anyone know a good resource at 	"Does anyone know a good resource at explaining what each of the components in the cpu diagrams does? For example what are the main functions and differences between rename/dispatch, reorder buffer, scheduler?
chipandcheese does a very good job comparing architectures but sometimes I struggle to really understand the meaning of their diagrams."	nikoisi	9.548983	-5.2418036	comment	4.0	12.0	1698492841	-7.9598484
38068713	I've never understood why I as a con	I've never understood why I as a consumer, even as a developer, would want to get interested in RISC-V, or any architecture, since I'm not sure what, if anything, would be noticeably improved or different to me.Unless it's for curiosity, then that makes sense to me.The only thing Apple Silicon improved on is battery life/power consumption/thermals and yet there are lots of people who think it's better across the board despite faster x86 chips existing on the market.I think excitement about architecture among end users is often not based in reality as the whole point of operating systems and high level languages is to abstract it all away.	flashback2199	9.39823	-5.635172	comment	4.0	23.0	1698669483	-10.561818
38078246	> such as the (in)famous evaluate po	> such as the (in)famous evaluate polynomial instruction, POLY.What CPU has this instruction and where can I learn more about it?	Carioca	9.87173	-5.7510414	comment	4.0	13.0	1698712866	-7.435259
38078878	> but they're coming down the pipe.D	> but they're coming down the pipe.Do you have any links? I'm curious, and not a little bit skeptical about the near-term competitiveness of RISC-V in the mobile space.	AceJohnny2	9.384572	-5.6838026	comment	4.0	16.0	1698715732	-10.59407
38081553	Are you talking about Rosetta 1 or 2	"Are you talking about Rosetta 1 or 2? Because Rosetta 2 was not an ""ultra painful experience"" in any sense of the phrase.Rosetta 2 was straightforward and surprisingly fast, requiring zero tweaking or user interaction. Most people never even noticed."	xvector	9.803071	-5.352439	comment	4.0	17.0	1698739913	7.536461
38081891	These are still going to be used in 	These are still going to be used in laptops with soldered flash chips for the SSD. Apple's laptops aren't meant to be used by people who expect to repair their laptop when the storage fails. Many people don't have access to replacement chips and services to have the flash chips found on the board replaced. It's as if their hardware is meant to be e-waste.The RAM is still not ECC. They focus so much on the shallow marketing without shipping anything which makes a difference.	unclejack	9.602912	-5.347062	comment	4.0	19.0	1698742433	8.155861
38098637	How patronising. Can you give an exa	How patronising. Can you give an example of an ISA that is higher quality than RISC-V?	IshKebab	9.417163	-5.6978693	comment	4.0	16.0	1698848961	-10.56271
38101394	Pretty disappointing to see the stat	Pretty disappointing to see the state of what could have been a flagship for RISC-V to consumer market. Especially the “don’t update” bit. I mean considering the lead time hardware takes, they could have figured out a distro, or upstreamed something. Progress is coming, but it’s not ready yet.	Pet_Ant	9.37971	-5.6468134	comment	4.0	17.0	1698858755	-10.574167
25455845	The whole digital ASIC synthesis flo	The whole digital ASIC synthesis flow revolves around timing closure i.e. satisfying setup and hold at max possible clock speed.I guess we may even have to invent a new HDL to pursue asynchronous paradigm efficiently.	rathel	9.12878	-5.398286	comment	4.0	24.0	1608215462	8.3158655
25467092	but really, in what way would 32 cor	but really, in what way would 32 cores become useful in a home server, except running a bunch of VMs that do nothing or donate money in terms of electricity to folding@home	blodkorv	9.571327	-5.235118	comment	4.0	15.0	1608299945	7.9446797
25483541	> Instead of spending all that silic	> Instead of spending all that silicon on more CPU cores, perhaps we can add more coprocessors instead?Isn't it always a trade-off and some balance? You can add more specialized processors (ASICs) but that also takes away space from general purpose processing units on your die. So depending on the workload your co-processors might be useful or simply dead weight that's not utilized but takes away from the general purpose units that could be useful.	shmerl	9.501674	-5.269797	comment	4.0	29.0	1608434312	7.953424
25484209	Not clear what RISC-V has to do with	"Not clear what RISC-V has to do with the Apple M1.Also not clear what benefit RISC-V would have for ""coprocessors"". GPUs and various machine learning speedup devices are massively parallel devices, intended to run small, specialized programs in parallel on multiple specialized execution units.Also note that the real win of the Apple M1 is lower power consumption. In terms of basic compute speed, there are Intel products that are roughly comparable. But they use more much more power. This is more about battery life than compute power. (Also heat. Apple laptops have had a long-standing problem with running too hot, from having too much electronics in a thin fanless enclosure. The M1 gets them past that.)The hardware video decoder is probably to make it possible to play movies with most of th"	Animats	9.482106	-5.3471966	comment	4.0	19.0	1608443894	-10.535011
25484923	> The frontend decoder hasn't been a	> The frontend decoder hasn't been a frequent bottleneck in Intel cores for a long time and they could scale it up more aggressively if they wanted.This isn't grounded in any facts.  Decoding the variable length x86 ISA costs you exponentially in decoding width, both power and area. You can scale it, but it will never be  efficient.  The way Intel and AMD combat this is by having a decoded uOP cache from which the issue width is typically twice that of the frontend decoder.  Arm64 has an inherent advantage here (RISC-V does not have quite the same advantage as RV64GC instructions are a mix of 16- and 32-bit).  Arm64 also is much more recent design than x86_64 that learned a lot from the past experience and isn't bogged down by a lot of useless legacy.  This helps.Arm64 is rather large for 	FullyFunctional	9.578981	-5.6527495	comment	4.0	15.0	1608454733	-10.427193
25483573	I'm missing the reason why RISC-V in	I'm missing the reason why RISC-V in particular is (claimed to be) so much better suited for building specialized co-processors.  Are they talking about ISA extensions?  Or maybe that the royalty free model makes it cheaper?	tyingq	9.416903	-5.670655	comment	4.0	20.0	1608434602	-10.543072
25497002	Project Oberon 2013 on RISC-V	Project Oberon 2013 on RISC-V	homarp	9.418325	-5.703016	story	4.0	140.0	1608571114	5.7063026
25497420	Hi,this port of Niklaus Wirth's Proj	"Hi,this port of Niklaus Wirth's Project Oberon (http://www.projectoberon.com) to RISC-V (rv32im) is the semester project of my student Rikke Solbjørg at the department of computer science at NTNU in Trondheim/Norway.The system currently runs in a version of Peter de Wachter's emulator modified to use a RISC-V CPU emulation instead of Wirth's RISC5 (now isn't that confusing? ;-)).Rikke's announcement on the Oberon mailing list:
http://lists.inf.ethz.ch/pipermail/oberon/2020/015269.htmlTo answer the obvious question right away: yes, we are working on a FPGA implementation :-). Happy to answer your other questions..."	johndoe0815	9.4123745	-5.639097	comment	4.0	23.0	1608573442	-10.576831
25501733	I'm not sure what exactly Linus mean	I'm not sure what exactly Linus means by this, but I read this as: for good programmers, coding is about managing data structures and their relationships whereas bad programmers are more concerned with just getting the thing to work.	ZephyrBlu	9.321041	-5.8718157	comment	4.0	21.0	1608599169	4.2377124
25516090	Does ISA Ownership Matter? A Tale of	Does ISA Ownership Matter? A Tale of Three ISAs	todsacerdoti	9.546853	-5.576322	story	4.0	39.0	1608717258	-7.7223315
25539037	Jonesforth Port to RISC-V	Jonesforth Port to RISC-V	rwmj	9.395073	-5.7085056	story	4.0	66.0	1608930404	-10.577929
25554431	I am really curious about the conten	"I am really curious about the content of that article. 
I work closely with different embedded CPU architectures and in most of our multi-expert evalutions of RISC-V (from different suppliers) it could not compete with commercial offerings (avoiding names)."	artemonster	9.388134	-5.644207	comment	4.0	23.0	1609104648	-10.563274
25554667	I don't understand the hype for RISC	I don't understand the hype for RISC-V at all. It's an instruction set that would... just require a new backend for clang/gcc/Java and mean nothing to me unless somebody makes something that just obliterates a Ryzen.Why should developers care? We barely have a decent ARM ecosystem after years of ARM routers and Raspberry Pi. Now we are supposed to be enthusiastic we will do that yet again for RISC-V?Is it because it's somehow more open? But ARM wasn't that closed afaik - lost of folks produced it.And Sun Microsystems open sourced a 64 thread CPU, the OpenSparc and nothing happened.So, in a nutshell, why?	fierarul	9.421619	-5.628216	comment	4.0	27.0	1609106740	-10.546256
25562135	After four different CPU ISA's (6800	After four different CPU ISA's (68000, powerpc, x86, ARM) an Apple ISA is next.	hyperpallium2	9.5427685	-5.351351	comment	4.0	20.0	1609182534	-7.703878
25562217	On the other hand, Apple released th	On the other hand, Apple released their 64-bit ARM backend for LLVM[1] in 2014. They announced their intention do so almost immediately after the first ARM64 phone, but the process took several months because it had to be merged with a duplicate backend developed by others.I think it is likely that support for these instructions will be upstreamed to LLVM, and the teams involved in this monumental transition (which was announced like ~50 days ago) simply didn't put it at the highest priority on the list of things that developers need to know to get their apps working on Day 1.A fair criticism is that some of the more technical documentation, such as on the Mach-O ABI, have disappeared from Apple's developer site, or been relegated to an unsearchable archive[2], so it's very reasonable to b	rgovostes	9.735027	-5.237468	comment	4.0	47.0	1609182940	-7.565578
25562830	As I understand it, Intel will also 	As I understand it, Intel will also sell you a compiler that can optimize better than GCC because they know internal microarchitecture details. To me, that seems like a more clear-cut by-design conflict of interest between chip designer and user than these undocumented instructions.	rgovostes	9.688464	-5.736125	comment	4.0	14.0	1609187088	-7.358056
25592479	A couple of years ago we reached out	"A couple of years ago we reached out to the python community about wheels and arm64 - how it should be handled and whether they plan on embedding non-x86 blobs.
We received the standard ""we'll think about it and let you know"".
Now that Apple switched to arm64, all communities are suddenly interested in porting things to arm64.And of course, Apple is not investing in these ports, at least as far as I know. They just rely on what other arm64 players did in the ecosystem before Apples rolled out M1; respectively lets developers figure out the remaining porting.As much as I hate to say this, IBM does handle porting things to ppc64 right - you can find IBM contributed code and optimizations anywhere you look. For many packages, porting to arm64 was a matter of ""does it have ppc64 support? if so"	smspf	9.708352	-5.301242	comment	4.0	41.0	1609421455	-7.7503285
25592201	Libriscv: RISC-V Binary Translation	Libriscv: RISC-V Binary Translation	ingve	9.431454	-5.7328653	story	4.0	44.0	1609419277	-10.538393
25617706	This may be the next phase of comput	This may be the next phase of computing to keep Moore's Law on track.  (Yes, I know it's not actually a law.)  Flash memory has been using multi-state cells for a decade or more.  All we need is a new ternary logic family (and FPGA/ASIC foundation library), and some good designers that aren't hung up on using only boolean logic.	anonymousiam	9.611168	-5.261999	comment	4.0	33.0	1609630260	7.662009
25622513	I bought ECC RAM for my laptop and i	I bought ECC RAM for my laptop and it definitely was about 4x the price. It's valuable to me for a few reasons -- peace of mind being a big one.Bit flips happen and are real. I really wish ECC was plentiful and not brutally expensive!	freeqaz	9.467484	-5.477948	comment	4.0	17.0	1609689876	8.117667
25622636	This is the first time I hear about 	This is the first time I hear about a laptop that supports ECC memory. Could you please share the make and model?	bitcharmer	9.460703	-5.4858456	comment	4.0	13.0	1609690727	8.19152
25622909	ECC works if done right. Accessing a	ECC works if done right. Accessing a memory location can fix bit-flips (ECC is a 'correcting' code). But systems that don't regularly visit every memory location, can accumulate risk. Those dark corners of RAM can eventually get double-bit errors and be uncorrectable. So an OS might 'wash' RAM during idle moments, reading every location in a round-robin manner to get ECC to kick in and auto-correct. Doesn't matter how fast (1M every hour or whatever) as long as somehow ECC has a chance to work.	JoeAltmaier	9.500596	-5.5423017	comment	4.0	16.0	1609692823	8.241458
25624000	Sounds like spending a few hours a m	Sounds like spending a few hours a month learning an HDL could be a good long-term career decision.	ineedasername	9.100756	-5.4763856	comment	4.0	26.0	1609699916	8.619003
25624167	You're going to need to commit a lot	You're going to need to commit a lot more time than that. HDLs and the surrounding concepts have key fundamental differences from software that a lot of developers have a hard time stomaching. That's why high-level synthesis is the FPGA industry's City of El Dorado; software developers would be able to create acceleration designs without having to build up a fairly large new skillset.	seabird	9.116251	-5.473093	comment	4.0	14.0	1609701054	8.569369
25624691	Figure this is as good of a time as 	Figure this is as good of a time as any to ask this:There are many various DRAMs in a server (say, for disk cache). Has Google or anyone who operates at a similar scale seen single bit errors in these components?	tyoma	9.725683	-5.429979	comment	4.0	12.0	1609704062	8.1888485
25625798	Everyone seems to be talking about a	Everyone seems to be talking about accelerated instructions but how about I/O?FPGAs are awesome at asynchronous I/O and low latency. We could implement network stacks, sound and video processing, etc... It can start a TLS handshake as soon as the electrical signal hits the ethernet port, while the CPU is not even aware of it happening. It can timestamp MIDI input down to the microsecond and replay with the same precision. It can process position data from a VR headset at the very last moment in the graphics pipeline. Maybe even do something like a software defined radio.Basically every simple but latency-critical operations. Of course, embedded/realtime systems are a prime target.	GuB-42	9.28315	-5.314928	comment	4.0	12.0	1609712740	8.06286
25639874	Linus Torvalds rails at Intel for 'k	Linus Torvalds rails at Intel for 'killing' the ECC industry	rossjudson	9.398821	-5.5001698	story	4.0	77.0	1609803853	-8.148462
25642031	RISC-V Vector Instructions vs. ARM a	RISC-V Vector Instructions vs. ARM and x86 SIMD	henry_bone	9.575005	-5.824148	story	4.0	45.0	1609820092	-10.509229
25660714	I've been bitten by this.I once work	I've been bitten by this.I once worked at a place where the development process for the Windows version of their product was GLACIAL because there was no way to run the CI scripts locally or even set up a dev environment that could build the product. People actually edited code in a text editor and then submitted it to github and waited an hour for the CI job to build a virtual Windows instance, run updates, install Visual Studio, Oracle, and all supporting software, run the compile and bail with a syntax error :((((((So I made a Powershell script to install everything from scratch on a fresh Windows 10 or Windows Server system using Chocolatey. The script took about an hour to run, but once it was done you had a Windows box (or VM) that could build the project in 2 minutes at most, or jus	kstenerud	9.365194	-6.3610253	comment	4.0	15.0	1609958367	-8.090176
25664872	I wonder how the Apple M1 hardware s	I wonder how the Apple M1 hardware stacks up. I don't know if they are vulnerable to any existing Spectre attacks but surely they are still using speculative execution and thus have to be aware of similar side-channels.	aftbit	9.619942	-5.5006185	comment	4.0	35.0	1609978522	7.791022
25684878	Well, actually... ;)The 68k only has	Well, actually... ;)The 68k only has a 16-bit ALU, so at the core it's a 16-bit CPU despite the 32-bits wide registers.	flohofwoe	9.569018	-5.2152877	comment	4.0	14.0	1610115133	-7.559552
25696144	Porting code from SPARC to x86 is mu	Porting code from SPARC to x86 is much easier than the other way around.  Most x86 instructions allow unaligned reads/writes, whereas SPARC will SIGBUS on unaligned access (at least on the processors from the late 1990s).   The SPARC memory model is also more lax than x86, so x86 hides more concurrency bugs than x86 does.	KMag	9.820358	-5.5582337	comment	4.0	26.0	1610162395	-7.8303456
25702259	Apple's original wasn't that bad, at	Apple's original wasn't that bad, at least it was close.> Provided each vendor design conveys the concept of a bagel in a sufficiently clear way, the job of the emoji is done.Microsoft and Samsung's just look like donuts cut in half. Twitter, no clue what that is.> Our bagel was drawn by someone who has eaten a bodega bagel before.Google's stylized version is certainly recognizable. As far as eating a bagel from a bodega (which most of the time are plain with no seeds), if you want the good stuff you're going to a bagel shop in Brooklyn.As a New Yorker I may have put too much thought into this. ;)	ragingrobot	9.804987	-6.2590737	comment	4.0	12.0	1610213079	-13.964126
25702960	I'm a bit of an idiot, when I think 	I'm a bit of an idiot, when I think of AVX I think of something that speeds up computation (specifically matrice stuff), not memory access. How wrong am I?	fangyrn	9.459086	-5.55437	comment	4.0	12.0	1610216628	-0.5755921
25717019	The Apple M1, ARM/x86 Linux Virtuali	The Apple M1, ARM/x86 Linux Virtualization, and Boinc	jseliger	9.904888	-5.252291	story	4.0	19.0	1610299857	-8.070206
25721326	> When would you choose FPGA over so	"> When would you choose FPGA over something like an STM32?The answer is ""almost never"".  Qualifications below.Learn the Cortex-M4 ecosystem first.  You can do a remarkable amount of stuff by abusing microcontroller systems in weird ways.  The tools for dealing with microcontrollers are MUCH better than the FPGA ecosystem tools (which suck--and that's on a good day).If you need an FPGA, generally you know it.  The first sign is: ""There's no way to do this with my microcontroller.""  That step is generally followed by: ""Is there a different microcontroller that could do this?""  followed by asking the old greybeard ""Is there really no way to do this on a microcontroller?""  And finally, ""Crud, this can't be done on a microcontroller""--at that point you can consider an FPGA.As someone who has be"	bsder	9.150692	-5.33448	comment	4.0	26.0	1610320154	8.376365
25747318	"From this article: 
https://wccftech"	"From this article: 
https://wccftech.com/intel-launches-tiger-lake-h-tgl-h-mobil...Intel say they have the fastest single threaded performance of any laptop processor.They show a graph of a benchmark of something called SPECRATE * 2017_int_base compiled with the Intel compiler.Does the Intel compiler still hamstring AMD?Also is this benchmark useful in real world usage?"	Jonnax	9.386214	-5.201154	comment	4.0	29.0	1610461772	-5.7304945
25760900	What are the advantages of an fpga o	What are the advantages of an fpga over an emulator running on a board like rpi? Isn't an fpga just a hardware level emulator?	fctorial	9.09405	-5.233288	comment	4.0	12.0	1610538513	8.203636
25760941	Tangential question about FPGAs: Is 	"Tangential question about FPGAs: Is there any work on compiling code to a combination of hardware and software? I'm imagining that the ""outer loop"" of a program is still fairly standard ARM instructions, or similar, but the compiler turns some subroutines into specialised circuits. Even more ambitiously you could JIT-compile hot loops from machine instructions to hardware.We already kind of do this manually over the long term (eg things like bfloat16, TF32 and hardware support for them in ML, or specialised video decoders). With mixed compilation you could do things like specify a floating point format on-the-fly, or mix and match formats, in software and still get high performance."	one-more-minute	9.112512	-5.400269	comment	4.0	17.0	1610538863	8.323912
25761917	Is the SiFive U74 open source?I know	Is the SiFive U74 open source?I know the RISC-V ISA is, but I thought the SiFive designs were proprietary.	WatchDog	9.384352	-5.653024	comment	4.0	28.0	1610545856	-10.537915
25762792	> Although the first hardware run wi	> Although the first hardware run will be entirely $140 / 8GiB systems, lower-cost variants with less RAM are expected in following releases.> The initial pilot run of BeagleV will use the Vision DSP hardware as a graphics processor, allowing a full graphical desktop environment under Fedora. Following hardware runs will include an unspecified model of Imagine GPU as well.Sounds like a direct competitor to the Raspberry Pi. I don't know if the Imagine GPU planned for the next iteration is playing catch-up or leapfrog. The Arstechnica article links to SiFive creates global network of RISC-V startups [1] which I think demonstrates that SiFive is strategically leveraging or responding to the geopolitics surrounding Chinese technology.[1] https://www.eenewsanalog.com/news/sifive-creates-global	sradman	9.385732	-5.555215	comment	4.0	19.0	1610550247	-10.50166
25763720	> quit paying ARM a percentageThe pe	> quit paying ARM a percentageThe percentage is very small, though. So this argument only works for very high volume use cases, which is why the RISC-V eval boards are currently far more expensive than comparable ARMs.Do WD do their own silicon yet, or do they just buy the parts?	pjc50	9.411847	-5.5981646	comment	4.0	12.0	1610553669	-10.553182
25771635	Indeed, a similar situation happened	Indeed, a similar situation happened in the mid 2000's before Intel moved to the Core architecture.  I wouldn't be surprised if something like this happened again.	icedchai	9.448301	-5.191613	comment	4.0	36.0	1610595844	7.794822
25772360	This just puts into perspective how 	This just puts into perspective how stagnate cpus have been, ~14 years and we are just starting to move to more than 4 core processors on prosumer systems.	nwmcsween	9.490819	-5.195438	comment	4.0	17.0	1610601000	7.811772
25786512	Debian is my favorite distro for web	Debian is my favorite distro for web dev, but, MIPS is also near and dear to my heart since I learned its hardware architecture in college.I view MIPS as the simplest possible instruction set that satisfies most of the modern scalability constraints (RISC, short pipeline, etc). It will likely be replaced by something like ARM which also incorporates instruction compression for basically free (since memory latency matters more than computing power more with each passing year).So I'm sad to see them remove MIPS support since I think next-gen 16+ core processors will probably use it. But, after reviving more failing projects than I can count, it's not a huge deal to use old commits to re-implement functionality. Most of that work is probably around stuff like endianness issues, atomic instruc	zackmorris	9.611582	-5.497278	comment	4.0	19.0	1610679993	-8.748903
25804938	I really want to get closer to the m	I really want to get closer to the metal, like programming an FPGA or properly learning assembly (I know that's like 2 completely different skill sets). But I never really know where to start.Is there any like definitive book or website to learn any of this stuff?	Philip-J-Fry	9.124791	-5.3772326	comment	4.0	12.0	1610826914	-0.28125113
25834223	The demise of x86 isn't something th	The demise of x86 isn't something that can be fiated. It could come about, but there would need to be a very compelling reason to motivate the transition. Technologies that form basic business and infrastructural bedrock don't go away just because of one iteration -- look at Windows Vista for example.Even if every PC and server chip manufacturer were to eradicate x86 from their product offerings tomorrow, you'd still have over a billion devices in use that run on x86.	totalZero	9.668215	-5.2471757	comment	4.0	14.0	1611069668	-7.7713537
25835859	This is kind of what should happen r	This is kind of what should happen right?  I'm not an expert, but my understanding is that one of the takeaways from the M1 success has been the weaknesses of x86 and CISC in general.  It seems as if there is a performance ceiling which exists for x86 due to things like memory ordering requirements, and complexity of legacy instructions, which just don't exist for other instruction sets.My impression is that we have been living under the cruft of x86 because of inertia, and what are mostly historical reasons, and it's mostly a good thing if we move away from it.	skohan	9.593936	-5.404059	comment	4.0	19.0	1611076967	-7.804729
25858230	Except that the industry is settling	Except that the industry is settling on RISCV, for reasons of cost and flexibility. It's quite disappointing that Raspberry Foundation chose a clunky and limited legacy platform like M0+ for this silicon, given their educational mission.	zozbot234	9.374431	-5.6118526	comment	4.0	18.0	1611232708	3.8999522
25860707	So, am I right in my understanding t	So, am I right in my understanding that this is meant to add support for emojis not present in UTF8?	jszymborski	9.899083	-6.2584605	comment	4.0	28.0	1611246816	-13.966773
25869621	"SiFive [1] ""SiFive is the first comp"	"SiFive [1] ""SiFive is the first company to produce a chip that implements the RISC-V ISA""I think they have a bright future ahead. If there was a way to buy their stock / invest in them, I would.[1] https://en.wikipedia.org/wiki/SiFive"	terhechte	9.380569	-5.650488	comment	4.0	13.0	1611304086	-10.549164
25892389	> we would all be much better off if	> we would all be much better off if they went the RISC-V routeOr indeed just license ARM like everyone else. It's not like they can't use ARM without buying them.	nicoburns	9.3974495	-5.64821	comment	4.0	35.0	1611499377	-10.569137
25894341	I remember thinking that Alpha might	I remember thinking that Alpha might eventually topple x86. At the time, there was no x86-64, and Linux was still buggy, so the RISC platforms were thriving...and Alpha was at the top.  Then Microsoft made NT run on Alpha.   All in the early to mid 90's.  Then the 1-2 combination of the Itanium distraction followed by the Opteron + 64 bit Linux, and then Alpha died.	tyingq	9.593465	-5.322758	comment	4.0	23.0	1611512758	-8.02192
25920181	It used to be you could email a patc	It used to be you could email a patch to someone and that patch would get reviewed and committed.Since then there has sprung up a fetish for bureaucratic process, and tooling has arisen to foster that, such that the barrier to entry is significantly higher now than it was in the 90s.  All you needed was a text editor and an email account.  Now you need accounts on whatever code forge is involved, and you didn't write enough unit tests, and you failed to properly format your pull request, and what do you mean you're not an expert in whatever version control we've adopted?  This pull request sat in an open state because you didn't tag it appropriately.  The CI system was updated and your code wasn't covered in the automated integration test, please resubmit after making minor punctuation cha	stonogo	8.948555	-6.2775555	comment	4.0	18.0	1611689984	4.0244694
25944133	Bill's high school also had a PDP te	Bill's high school also had a PDP terminal connected to UW.  Basically no other high school had that - which gave him an early head start.	fred_is_fred	9.803181	-5.4154625	comment	4.0	21.0	1611850421	-7.3669147
25993406	It's really a shame IA64 accelerated	It's really a shame IA64 accelerated the deaths of Alpha and PA-RISC. Not sure they could have survived x86-64 or ARM64 but they still had legs when Itanium hit the scene.	spamizbad	9.586171	-5.39915	comment	4.0	18.0	1612211330	-7.783649
25997206	Good to see a thorough benchmark and	"Good to see a thorough benchmark and a good writeup. Many ""tech"" sites now just repeat manufacturers press releases. Not Anandtech."	RachelF	9.735055	-5.232245	comment	4.0	25.0	1612237027	7.747085
26002959	> RISC-V seems like it hasn’t learne	> RISC-V seems like it hasn’t learned anything from CPUs designed after 1991.Never mind what RISC-V says about itself. Here is Dave Jaggar, a key ARM architect, endorsing RISC-V as state of the art in 2019: https://youtu.be/_6sh097Dk5k?t=51m10s.	seedless-sensat	9.393476	-5.656804	comment	4.0	24.0	1612283256	-10.555299
26003324	A lot of nonsense in this article, b	A lot of nonsense in this article, but I'll try to address his points:(1) There are several royalty free implementations, ranging from the minimal (PicoRV32) to widely-used embedded (Rocket) to reasonably high-end (BOOMv*).  There are also proprietary implementations, and this is how it should be.(2) RISC-V has defined various platform specifications which means in practice ISA fragmentation is not going to be a thing.  The platform will define the minimum set of extensions, and the rest will be probed at runtime (which is exactly the way x86 works).(3) About economics - the author ought to read some Clayton Christiansen, or maybe take a look at how companies like Intel, AMD and Arm came to prominence.(4) Yes, open spec != open implementation, but see point (1).(5) RISC-V has been designed	rwmj	9.444975	-5.6710205	comment	4.0	26.0	1612284763	-10.551565
26013967	Red Hat employee here.   Contrary to	"Red Hat employee here.   Contrary to your ""inserts a bunch of people"" characterization, IBM wanted to get into hybrid cloud so they acquired Red Hat in one of the largest tech acquisitions in history, and we create hybrid clouds for our customers.    As we are part of IBM now, IBM is in fact providing hybrid cloud to its customers from start to finish in a substantive way.    So there's really no comparison to be made to technologies for which IBM has not made substantive investment."	zzzeek	9.89805	-5.464072	comment	4.0	26.0	1612363431	-9.459499
26068739	I'm sorry, but that's not obvious.  	I'm sorry, but that's not obvious.  Given that we've got PCI circuits running at 16GHz, why don't chipmakers give us full-scale processors with those faster clock speeds?Bit-serial adders are extremely simple circuits with a single carry register, which can run at essentially the full speed of the underlying switching devices.  Ripple-carry adders have a circuit depth proportional to the number of bits in the adder -- they're only stable when the clock is substantially slower than the switching time (proportional to the circuit depth), because the carry signal needs to propagate through all of the 1-bit adders.	klyrs	9.480064	-5.1953683	comment	4.0	13.0	1612811515	7.9684806
26080062	> Plus on laptops AMD has more cores	> Plus on laptops AMD has more coresSome of the AMD chips don't support SMT, so maybe this statement doesn't tell the whole story. I recently looked at the Lenovo ideaPad Flex 5 that was offered in an AMD flavor with Ryzen™ 5 4500U or an Intel flavor with Core™ i5-1135G7. The AMD chip is 6 core / 6 thread, and the Intel chip is 4 core / 8 thread.I'm supposed to care about the number of threads rather than the number of cores, n'est-ce pas?	totalZero	9.380688	-5.1983023	comment	4.0	17.0	1612891085	7.9393673
26112166	This is what happens when you prefer	This is what happens when you prefer an incremental culture over a culture of innovation. There’s no way they could possibly innovate at this point with all the baggage of x86.I think Intel has a long way to fall before they are forced to finally face the music and innovate a bit. Until that time, expect to see a lot more of these awkward and cringe ad campaigns.	iamleppert	9.436458	-5.193834	comment	4.0	17.0	1613125474	7.6853204
26118308	The Drepper series of article dates 	The Drepper series of article dates from 2007. Is it still relevant or has anything fundamental changed in memory handling in the last 13 years ?	phtrivier	9.837851	-5.4726143	comment	4.0	15.0	1613162491	8.322227
26164531	Emojis evolved from simple text like	"Emojis evolved from simple text like "":)"" or "":/"". And for the new set of emojis, half the time I am not sure what the sentiment is being expressed!"	necovek	9.803888	-6.2657337	comment	4.0	25.0	1613554768	-13.958748
26165501	Show HN: Mailoji – Emoji Email Addre	Show HN: Mailoji – Emoji Email Addresses	tinyprojects	9.807561	-6.259658	story	4.0	16.0	1613563981	13.032958
26209952	Offtopic to OP but regarding Linus T	Offtopic to OP but regarding Linus Tech Tips:I also stopped watching 90% of all LMG (his company) videos (on all their channels) because of the clickbait forcing me to click onto things that I am not interested in, only to quickly leave the video. I am not going to watch what I don't want to watch whether it has a clickbait thumbnail and title or not, so they just annoy me more with this. I have not voiced my opinion for two reasons: 1) it's a really common opinion, Linus is aware of it and this style is obviously good for business since they kept it, 2) fear of intense backlash from the fan community.So yeah, got that off my chest.	milankragujevic	9.284475	-5.8545837	comment	4.0	19.0	1613870798	4.1291537
26222300	AArch64 Boards and Perception	AArch64 Boards and Perception	pabs3	9.686283	-5.4137697	story	4.0	67.0	1613984626	-7.7851877
26295733	Many types of bit error are not reco	"Many types of bit error are not recoverable without a full system reset.  It isn't a matter of a simple ""this bit in ram got corrupted"", but more ""this floating point unit has got into a state where it will not produce a result, and will therefore hang the entire processor"".Therefore boot time becomes critical - if you end up rebooting due to bit errors multiple times per second, you can't afford to wait for Linux to start up each time..."	londons_explore	9.86604	-5.520798	comment	4.0	13.0	1614537046	8.146246
26295763	Imagine the environmental impact of 	Imagine the environmental impact of downloading all dependencies in a large project every CI run? and running it every commit of a pr? sometimes totalling in multi gigabyes. Crazy.If your going to apply that logic, take a closer look at a lot of build chains out there.	katbyte	9.456288	-6.3506184	comment	4.0	12.0	1614537183	0.66553986
26298399	You don't need an MMU nor tons of RA	You don't need an MMU nor tons of RAM to do multitasking, just a timer interrupt.   It's a lot easier if you require position independent code rather than doing fixups.  The 6809 is a beautiful instruction set that makes position independent re-entrant code easy.Of course an MMU and/or lots of RAM does make multitasking a lot easier.OS-9 is an awesome UNIX-like for the 6809 that can do it in 64K or less.	bryanlarsen	9.745036	-5.226135	comment	4.0	32.0	1614557816	8.059897
26302477	> What do I have to add to my kernel	"> What do I have to add to my kernel command line?Paranoid users of Ubuntu and Debian can install this package:
https://packages.debian.org/bullseye/hardening-runtime . Then reboot.It disables SMT, so independently of mitigations you won’t be vulnerable, but of course Hyper-Threading will be gone."	tgragnato	9.932408	-5.5973506	comment	4.0	14.0	1614604736	8.223318
26341993	Dear developers with M1 Airs,How doe	Dear developers with M1 Airs,How does your dev tools behave with this device?Docker, entire Android toolchain (this one important), XCode, qemu, VirtualBox, you name it.(I'm planning to get one)	diegoperini	9.581854	-6.2980103	comment	4.0	16.0	1614864204	10.001122
26355331	> So I'm not blaming the developers 	"> So I'm not blaming the developers in
question,Much kinder than past Linus writings. I loved it too. ""Double ungood"" works at least as good as the swearing."	hjek	9.288565	-5.8938394	comment	4.0	17.0	1614941097	4.2688375
26375289	People/formatters that justify their	People/formatters that justify their structures drive me completely crazy (I'm looking at you golang et al). It's like they've never tried using revision control before. It just takes a single change in the longest entry and something that was a 1-byte change becomes a 20-line diff. Noisy for code review and 20 times more likely to create a merge conflict.Your obsessive compulsions are something to be overcome, not embraced, and certainly not something to force on other people.	ris	8.807825	-6.399234	comment	4.0	15.0	1615119257	2.2444994
26382828	>Finally, AMD CPUs utilize other pro	>Finally, AMD CPUs utilize other proprietary technologies known as Infinity Fabric/Architecture for their on-chip interconnect. Investigating the feasibility of our attack on these platforms requires future work. However, the techniques we use to build our contention model can be applied on these platforms too.I notice often that when coverage of these side-channels start spreading Intel takes a hit and AMD thrives. While the majority of these side-channel attacks are tuned to Intel chips, the theory behind them along with a decent amount of work can often make them applicable to AMD as well, and in some cases even other architectures(ARM, MIPS, SPARC, etc).	molticrystal	9.550938	-5.438942	comment	4.0	34.0	1615185427	7.883341
26394416	Your average desktop/laptop CPU runs	Your average desktop/laptop CPU runs a blackbox like Intel AMT or AMD PSP which is basically an always active mini-CPU that runs in the background and is OS-agnostic. If you consider your OS max privilege level as ring 0, this is ring -1.If/when someone manage to conpromise those, they can basically take over your computer, and Intel/AMD doesn't provide any sort of killswitch or physical way of disabling it.	m-p-3	9.496036	-5.250967	comment	4.0	26.0	1615254762	7.8272524
26423936	A couple of alternatives for Linux u	A couple of alternatives for Linux users.https://wiki.archlinux.org/index.php/IBus#Emoji_inputThe kitty terminal emulator supports this out of the box (it also works on two other platforms):https://github.com/kovidgoyal/kittyCtrl+Shift+U opens a Unicode input panel with fuzzy search by symbol code or name.	scaladev	9.866689	-6.2404795	comment	4.0	23.0	1615470375	-13.931578
26424165	For other readers: emoji keyboard is	For other readers: emoji keyboard is ctrl + cmd + space on macOS.	ezekg	9.864471	-6.2043433	comment	4.0	25.0	1615471857	-13.935277
26432154	The KK Computer: A Radical 6502 Rede	The KK Computer: A Radical 6502 Redesign (2018)	ddtaylor	9.471926	-5.19839	story	4.0	75.0	1615522604	-7.60594
26444070	> As an observation, performance opt	> As an observation, performance optimized code is almost always effectively single-threaded these days, even when using all the cores on a CPU to very efficiently process workloads.Why?Edit: Thanks for all the replies. It seems this applies to data-parallel workloads only. I'd use a GPU for this. An RTX 3090 has around ~10000 CUDA cores (10000 simultaneous operations) v/s just ~10 for CPUs.	rational_indian	9.769269	-5.5373054	comment	4.0	17.0	1615611235	8.270503
26450216	We already know the management engin	We already know the management engine is a backdoor/botnet. No intel powered computer is secure or private.	PurpleFoxy	9.487787	-5.204853	comment	4.0	13.0	1615671414	7.756724
35524829	How does indemnification typically w	How does indemnification typically work for employees? I've often seen it included in contracts.> We contacted Twitter about the lawsuit today. The company continues to auto-reply with a poop emoji to all requests sent to its public relations email address.Bizarre.	8organicbits	9.789412	-6.2652025	comment	4.0	14.0	1681219616	-13.943123
35548641	East Asian character emojis ㊗ 🈶 🈯 🈳 	East Asian character emojis ㊗ 🈶 🈯 🈳 (2016)	declanhaigh	9.839641	-6.238015	story	4.0	19.0	1681342643	-13.9365425
36565604	AMD’s EPYC 7J13: Zen 3 Customized	AMD’s EPYC 7J13: Zen 3 Customized	rbanffy	9.240892	-5.205753	story	4.0	71.0	1688331157	8.002175
36600276	Centauri: Practical Rowhammer Finger	Centauri: Practical Rowhammer Fingerprinting	PaulHoule	9.606669	-5.64247	story	4.0	42.0	1688564236	-13.888124
36620926	It's unfortunate that pretty much al	"It's unfortunate that pretty much all decisions become precedent (given that Canada/Saskatchewan has Common Law). In a case like this where the farmer responded with the thumbs up emoji, claims it was only to signal ""ACK'd and will respond later"", but didn't respond with ""yes"" or ""no"" afterwards, I suppose it's fine to assume that the thumbs up was a sign of legal/contractual assent and he's trying to retcon what actually happened.But do you want it to be codified as precedent that signing with a thumbs up is a valid legal signature? Also, the meanings of emoji change (see the sexual connotations that many emoji have picked up since their release - those connotations weren't present on day zero), so how do you protect against that?"	ComputerGuru	9.754032	-6.2577243	comment	4.0	14.0	1688669481	-13.937942
36643804	I don't think its fair. I use thumbs	"I don't think its fair. I use thumbs up emoji to indicate have received something. Does not mean I am accepting it.Usually for that, I use the actual word: ""Agreed"" or ""Accepted""."	nobrains	9.765592	-6.2567487	comment	4.0	14.0	1688819972	-13.960446
36645225	In most SoC's the answer is 'everyth	In most SoC's the answer is 'everything' because there's no such thing as an IOMMU.	zozbot234	9.686432	-5.2657466	comment	4.0	14.0	1688829509	8.990265
36645821	Reverse-engineering the 8086 process	Reverse-engineering the 8086 processor's address and data pin circuits	picture	9.658314	-5.468454	story	4.0	127.0	1688833053	-7.370258
36668267	Wish this kind of hw were available 	Wish this kind of hw were available for x86. Just give us the m2 slots and let software take care of the rest.	pm2222	9.681819	-5.2465014	comment	4.0	16.0	1689004778	-7.6909323
36681004	Ah, classic Intel.  Randomly start m	"Ah, classic Intel.  Randomly start making/selling X with great fanfare, maybe do that pretty well for a while, then quietly abandon X later.  For any X != ""x86 CPU's""."	bell-cot	9.470344	-5.2008405	comment	4.0	13.0	1689083644	7.7443304
36693532	What about if you reach 100 billion 	What about if you reach 100 billion times a second (maybe with 128 cores) and have a long running system? Maybe in this case 128-bit or 96-bit counters are better...	pulse7	9.843128	-5.5224247	comment	4.0	16.0	1689164723	7.963784
36723521	The fun fact being that older CPUs d	The fun fact being that older CPUs decode ENDBR64 as a slightly weird NOP (with no architectural effects), but it'll fault on original Pentiums: https://stackoverflow.com/questions/56120231/how-do-old-cpus...	rwmj	9.611999	-5.2730184	comment	4.0	28.0	1689340521	-7.691311
36735798	Welcome to the world where every idi	Welcome to the world where every idiosyncrasy is considered an identity worth representing, through emojis or other means, generating a never-ending breakdown of people into groups that feel excluded.	DeusExMachina	9.790371	-6.265866	comment	4.0	13.0	1689422540	-13.961008
36779794	Did they take the JTAG pins off? I'm	Did they take the JTAG pins off? I'm wondering why you would test differently on the way out of the factory and back in for repair claims	yjftsjthsd-h	9.668939	-5.2320876	comment	4.0	14.0	1689718516	-4.5108743
36786720	The OS I work on currently supports 	The OS I work on currently supports a maximum of 254 logical cpus. If we ran on the 9754 and had to ignore two entire threads, we'd be giving up a maximum of 0.78% performance. I remember being excited about the first dual core systems not that long ago... Makes me wonder how long this trend of just packing more cores into the chip can continue, and where it will go after that. There seemed to be a fundamental shift between the Pentium 4 era and multi-core. Then between 8 core and many core. Big/Little also working its way in there. What's the next major innovation that's going to drive this ever-increasing performance limit? Or is there a theoretical maximum a single chip can do?	0x0203	9.446469	-5.2157917	comment	4.0	16.0	1689776114	7.8330145
36799385	> not meaningfully improved by addin	> not meaningfully improved by adding cores.This is true and I hate it, because it doesn't have to be this way. Almost all existing workloads are theoretically parallelizable to at least some significant degree, developers just don't do it because it's so difficult. (I'm talking about large scale systems, not individual algorithms)I think more research needs to go into designing new programming languages and paradigms to make multithreading easy and automatic. There's been some improvement here in the last few years, e.g. coroutines, move semantics, but there's still a long way to go. It's silly that people are buying 32-core CPUs that basically only get used for video rendering.	Asraelite	9.583432	-5.356212	comment	4.0	12.0	1689855251	8.119581
36830086	While you can't explicitly allocate 	While you can't explicitly allocate a process to E cores, I wonder if you'd be able  to make a program which floods high QoS processes to saturate E cores until they are full and then launch the desired application into a P core	BeastMachine	9.711471	-5.49985	comment	4.0	16.0	1690060941	8.113361
36838511	OpenBSD: AMD processor microcode sup	OpenBSD: AMD processor microcode support added to -current	peter_hansteen	9.497264	-5.3689885	story	4.0	111.0	1690138767	-12.225273
36846420	> it was always the binary blobs req	> it was always the binary blobs required to run IP blocks put on the die with the cores that stopped people from using themThat's not going to change with RISC-V. If you've got silicon that has to conform with FCC regulations it's going to have non-modifiable firmware. No matter how open the rest of the system is, your WiFi and Bluetooth (and any other radios) will have closed firmware.	giantrobot	9.416235	-5.6062984	comment	4.0	30.0	1690199704	-10.48189
36849498	Yeah... but the manufacturing proces	Yeah... but the manufacturing processes for those chips are long, long gone. Nobody's building fabs for CPUs like the MOS 6507 which only have 3,218 transistors in total (seriously). That CPU hasn't been in production since 1992, so any replacement would be a complete redesign, or an FPGA packaged inside to simulate that part, which would no doubt cause its own griping. It would also be pointless, because emulating a 6507 cycle-accurately is pretty easy nowdays. Same goes for the other chips. If you can emulate with perfect accuracy because the tech was so primitive back then; what's the point of making what will still be a redesign?At that point, just build a MiSTer (FPGA-based reimplementation), then get or build an arcade cabinet adapter to have your MiSTer provide the brains.https://mi	gjsman-1000	9.507631	-5.1908903	comment	4.0	20.0	1690212297	-7.346083
36850040	"Do they mean ""only confirmed on Zen2"	"Do they mean ""only confirmed on Zen2"", or is the problem definitely confined to only this architecture?Is it likely that this same technique (or similar) also works on earlier (Zen/Zen+) or later (Zen3) cores, but they just haven't been able to demonstrate it yet?"	tremon	9.287389	-5.2244377	comment	4.0	12.0	1690214301	7.8563504
36850148	This is incredibly scary. On my Zen 	This is incredibly scary. On my Zen 2 box (Ryzen 3600) logging the output of the exploit running as an unprivileged user while copying and pasting a string into a text editor in the background (I used Kate), resulted in pieces of the string being logged into the output of zenbleed. And this is after a few seconds of runtime mind you, not even a full minute.Thankfully the exploit is highly dependent on a specific asm routine so exploiting it from JS or WASM in a browser should be extremely difficult. Otherwise a nefarious tab left open for hours in the background could exfiltrate without an issue.I'm eagerly waiting for Fedora maintainers to push the new microcode so the kernel can update it during the boot process.	eric__cartman	9.648876	-5.3130684	comment	4.0	20.0	1690214680	7.8284883
36853617	So, in about 30 years when the major	So, in about 30 years when the majority of the CPUs have this, we can use it. Assuming intel does not gate this just to XEON for no reason whatsoever, like they did to AVX512?	dmitrygr	9.397716	-5.3635683	comment	4.0	40.0	1690229747	7.8985267
36854621	Is someone here who understands the 	Is someone here who understands the nitty bitty details of AVX-512/AVX10 and could tell me what is included which current latest gen AMD processors do not support?Because the only thing I can pick out is the 256bit AVX-512 which AFIK recent amd processors do support (including 512bit support) both on their normal cores and their new compacted code.But I don't know much about AVX_ so I'm 100% I missed a bunch of stuff and/or limitations with current AMD code (besides it being double pumped).	dathinab	9.426103	-5.49918	comment	4.0	17.0	1690234927	8.067751
36855128	Why did it take around 10 years for 	Why did it take around 10 years for AMD to implement AVX-512 and will they need to wait as long for this too? Doesn't seem to be patent related (patents are 20 years and AVX-512 was introduced in 2013?).	shmerl	9.447606	-5.540937	comment	4.0	16.0	1690237677	8.054068
36869772	What you mean by “contemporaneous” m	What you mean by “contemporaneous” matters a lot here, as a few of the answers cover.When it was introduced, it was faster clock for clock and clocked significantly higher than Intel’s best chips.This gap didn’t last. This is the period when Intel started to really differentiate on fab technology and  at the same time successfully modernized their x86 microarchitecture. By the time they adopted x86-64—reluctantly or otherwise—Alpha was neither performance nor economically competitive.This was at root a business problem: They couldn’t build a high-end market at the scales they needed to support continued development at Intel’s pace. Intel had their consumer business to cover even major screwups like Itanium. DEC of the ‘90’s did not have that luxury.	twoodfin	9.460276	-5.274511	comment	4.0	17.0	1690320042	-7.933419
36885412	Speaking about WordPress, what does 	Speaking about WordPress, what does anyone do about diffable version control and automated deployment? From my naive perspective, it seems like an opaque database is just a bad idea	h0l0cube	8.878801	-6.371604	comment	4.0	22.0	1690407364	-11.732468
36888442	Treat your CI system as a product fo	Treat your CI system as a product for faster and better feedback	TalktoCrystal	9.242046	-6.3953447	story	4.0	39.0	1690427438	6.090587
36902877	Implementing Fast Barriers for a Sha	Implementing Fast Barriers for a Shared-Memory Cluster of 1024 RISC-V Cores	stevefan1999	9.419801	-5.7013097	story	4.0	60.0	1690515146	-10.553866
36904112	Iridis Alpha Theory: The Making of a	Iridis Alpha Theory: The Making of a C64 Classic	mwenge	9.655417	-5.4436617	story	4.0	47.0	1690530805	5.901481
36908228	I simply don't get the outrage/criti	"I simply don't get the outrage/criticism against this part of systemd. Instead of having to play around with `start-stop-daemon` and whatnot, a simple service is just these days:```[Unit]Description=my app[Service]Restart=on-failureUser=webservicesGroup=webservicesExecStart=/usr/local/bin/my-web-service[Install]WantedBy=multi-user.target```It couldn't really be any simpler.There's also https://github.com/gdraheim/docker-systemctl-replacement# for anyone who needs a ""lighter"" alternative for tests in Docker."	supriyo-biswas	9.898077	-6.3513265	comment	4.0	24.0	1690557854	10.094583
36938614	Is that really true? We already had 	"Is that really true? We already had multicore machines, and Herb Sutter's ""The free lunch is over"" article had been published for years by then."	wtetzner	9.594084	-5.307986	comment	4.0	13.0	1690775296	8.155883
36943614	I've recently switch from VPS with I	I've recently switch from VPS with Intel to physical server with latest AMD Zen4.Single thread performance blow my mind with scores like 4000.Without change a single line of code = performance was 10x than before.	mobilio	9.276206	-5.275515	comment	4.0	19.0	1690815616	7.879431
36963600	> At all computer sizes, a GPU proba	> At all computer sizes, a GPU probably will have more multiply circuits than an equivalent cost FPGAVery likely yes, but FPGAs often have hundreds to thousands of hardware multipliers, as part of the DSP blocks. Here for example newer AMD FPGAs: https://eu.mouser.com/datasheet/2/903/ds890_ultrascale_overv...	danhor	9.080791	-5.250524	comment	4.0	17.0	1690926555	8.1848345
36966959	Looks like we're going to need a VHT	Looks like we're going to need a VHTS and UHTS. Exciting times.	px43	9.368804	-5.685307	comment	4.0	12.0	1690950419	-10.567606
36993151	AFAIK, an FPGA board is not enough, 	"AFAIK, an FPGA board is not enough, you also need the ""compiled netlist"" from the Verilog files, clock configuration and routing info, tailored to the specific FPGA/board you choose."	FirmwareBurner	9.107492	-5.450952	comment	4.0	16.0	1691102976	8.470761
36993109	What is a good fpga starter board th	"What is a good fpga starter board that's big enough to load this? 
It's not obvious from the repo as a complete novice in fpga land."	mg794613	9.091797	-5.331516	comment	4.0	42.0	1691102693	8.347939
37002050	I think in  an FPGA flow you could r	I think in  an FPGA flow you could rely on inferring a block RAM no?	bpye	9.236173	-5.385947	comment	4.0	12.0	1691165818	8.196866
37011157	Now I have to wonder whether it woul	Now I have to wonder whether it would be possible to build a cache around an unmodified 6502. I.e. a component that just sits between the (unmodified) CPU and memory and does caching.	brazzy	9.932859	-5.6446013	comment	4.0	15.0	1691236760	8.196805
37020834	x86 is locked down by Intel and AMD,	x86 is locked down by Intel and AMD, and ARM demands tribute-- I mean license fees for ARM. That leaves only RISC-V for those who want to make their own processors without paying someone for the privilege. That's the value add.	Dalewyn	9.494385	-5.457993	comment	4.0	25.0	1691320744	-10.507454
37035931	"""Sandy Bridge CPUs still deliver eno"	"""Sandy Bridge CPUs still deliver enough performance to remain usable across a range of everyday tasks.""Do you have to disable spectre / meltdown OS-level mitigations for this to be true? 
 I was surprised to see how far back[0] the vulnerabilities go.0: https://www.techarp.com/guides/complete-meltdown-spectre-cpu..."	cheschire	9.611166	-5.5269465	comment	4.0	19.0	1691422683	7.80543
37055301	At this rate, with all these vulnera	At this rate, with all these vulnerabilities and mitigations, we'll rollback CPU performance back at least 10 years.	ancris	9.534301	-5.20955	comment	4.0	18.0	1691528030	7.829305
37057510	I suspect that in a decade or two we	I suspect that in a decade or two we will see speculative execution as we see shared mutable state today: a dangerous trap that should be best avoided in any new designs.	nine_k	9.6964445	-5.649469	comment	4.0	16.0	1691542897	-6.737949
37060910	Graviton server and serverless funct	Graviton server and serverless functions have shown such a better performance to cost ratio, it's unsurprising Amazon is doubling down on those.The real question is, why are other cloud providers not working on similar chips?	boristane	9.531081	-5.188123	comment	4.0	34.0	1691578583	-8.297393
37093554	ARM’s Cortex A710: Winning by Defaul	ARM’s Cortex A710: Winning by Default	ingve	9.574184	-5.1992164	story	4.0	97.0	1691785334	7.7588024
37099875	Go use Magit! Probably my favorite p	Go use Magit! Probably my favorite part of Emacs.	jolux	8.870434	-6.4134607	comment	4.0	22.0	1691846339	-11.396668
37106910	Its virtual... but passthrough, I wo	Its virtual... but passthrough, I would like to see something thats virtual but runs on pure cpu x86 or arm, do not care how slow.	w-ll	9.89454	-5.331388	comment	4.0	15.0	1691903841	-8.009411
37110407	That's 100% fair.  Good thing it's n	That's 100% fair.  Good thing it's not too difficult to assign VFIO w/i QEMU for virtual machines despite the manufacturer shenanigans. :)The Arch wiki has a great guide here - https://wiki.archlinux.org/index.php/PCI_passthrough_via_OVM...It does get a little tricky if your GPUs are identical, but I've done this for years and maintain a guide for doing this (as well as the ACS-override patched kernel RPMs) for Fedora.- Writeup - https://some-natalie.dev/blog/fedora-acs-override/- Code + RPMs - https://github.com/some-natalie/fedora-acs-overrideAs far as concerns around stability with ACS override, I tend to only enable the override for the specific GPU (or other hardware) that I'm passing through and haven't encountered any stability problems or memory le	some-natalie	9.720481	-5.206764	comment	4.0	12.0	1691937288	-8.322744
37130941	It didn't really match the modern de	It didn't really match the modern definition of emulator. AKA, something that takes raw machine code and implements all the IO capabilities of the target device.Instead, Paul Allen's emulator worked at the code source level, and was implemented as a  macros for the assembler. This wasn't even an 8080 assembler, it was a PDP-10 assembler and they created a bunch of macros to output the proper bytes for 8080 machine code.For PDP-10 mode, they switched to a different set of macros, that took the same source code but for each 8080 instruction, it generated one or more PDP-10 to replicated the behaviour of 8080. The source code also replaced the IO code with native PDP-10 IO routines. This gives you a PDP-10 binary that you can run as normal.I'm sure Paul Allen could have written an 8080 machin	phire	9.602496	-5.3047247	comment	4.0	19.0	1692081738	-7.495142
37141354	>> Memory bandwidth is the limiting 	>> Memory bandwidth is the limiting factor in almost everything to do with sampling from transformers.So how about using an APU - a CPU with GPU built in.  The GPU shares the CPU memory, so if you want you can have 128GB RAM and allocate 100GB to the GPU.Sure the GPU i not fast, but if memory is important.....	andrewstuart	9.767134	-5.3131557	comment	4.0	19.0	1692146832	7.9423985
37148711	Madison “Suop” quit her role at Linu	Madison “Suop” quit her role at Linus Tech Tips	serial_dev	9.335068	-5.842938	story	4.0	22.0	1692200142	-2.6767237
37155969	StarFive VisionFive 2 Quad-Core RISC	StarFive VisionFive 2 Quad-Core RISC-V Performance Benchmarks	rbanffy	9.365613	-5.54088	story	4.0	17.0	1692235153	-10.594112
37159271	Does anyone have the history for why	Does anyone have the history for why number of pins was such an important consideration (not just for Zilog, Intel too)?  Was it really that much more expensive to make a 64 pin package than a 40 pin one?	rwmj	9.642384	-5.225814	comment	4.0	13.0	1692264897	-7.5897856
37163524	All I see is a compatibility mess. I	All I see is a compatibility mess. Intel got their money from corporations and large servers. If this thing doesn't play well with old software using hyperthreading logic, shit will break in a million and one ways.	galaxytachyon	9.4551115	-5.1943007	comment	4.0	13.0	1692287355	7.766128
37164252	A CPU in Sunvox	A CPU in Sunvox	georgeoliver	9.87264	-5.3827124	story	4.0	28.0	1692289943	9.005653
37169169	Surprised to see emoji. I feel like 	Surprised to see emoji. I feel like those almost always come across insincere when they're not expected. Idk why, maybe I'm the odd one.	tayo42	9.79248	-6.2734356	comment	4.0	23.0	1692311932	-13.94575
37171961	When people use a lot of emojis, the	When people use a lot of emojis, the story in my head is that they care more about keeping appearances up than about honesty and transparency. It's fake positivity.	winternewt	9.777985	-6.2546744	comment	4.0	12.0	1692339854	-13.950399
37185504	Risc-v is already coming for the dat	Risc-v is already coming for the data center and Apple have their hands full.	pier25	9.380966	-5.6563797	comment	4.0	30.0	1692419230	-10.551464
37206659	In that timespan RISC-V could leapfr	In that timespan RISC-V could leapfrog ARM in overall performance (including power usage and price) -- who knows? Performance improvements have been a big driver of those previous migrations.	iainmerrick	9.400769	-5.6407466	comment	4.0	15.0	1692605348	-10.54424
37217956	x86-64 container support on Apple si	x86-64 container support on Apple silicon comes to mind.	seabrookmx	9.617584	-6.0803823	comment	4.0	15.0	1692671822	-7.7829046
37228948	Emojis in written text can lose thei	Emojis in written text can lose their meaning in translation. Your intended meaning may not be what your audience understands, but I guess that’s inherent in most communication.I had a bunch of russian coworkers once, and one of them would constantly type “)))” any time I asked him a question. I thought it was some weird cyrillic keyboard quirk and never paid it any mind, until I learned it’s the approximate russian equivalent for “lol.”Didn’t know what to make of him after that. I guess he thought I was a moron.	JohnMakin	9.7952385	-6.260724	comment	4.0	15.0	1692740744	-13.954447
37229080	Emoji specifically (絵文字, where 絵 mea	"Emoji specifically (絵文字, where 絵 means ""picture"") are a Japanese invention. They were / are custom pictures, initially monochrome, which Japanese mobile phones allowed to insert into texts.See https://www.global.ntt/contributing-society-emoji.htmlThey are not the ""smiley"" / ""emoticon"" character art stuff like  :-) or =ò.ó= or whatever."	nine_k	9.820245	-6.2575817	comment	4.0	20.0	1692741461	-13.958973
37229402	This might not be good for RISC-V in	This might not be good for RISC-V in the future.If it becomes associated with Chinese computing, then it might face more sanctions and roadblocks in the US and Europe.	RcouF1uZ4gsC	9.356288	-5.6687803	comment	4.0	15.0	1692743283	-10.595143
37245750	I'm curious, do you know of a study 	I'm curious, do you know of a study that has proven that single core CPU or other is the bottleneck in CS:GO?	radium3d	9.583806	-5.2896495	comment	4.0	12.0	1692859198	7.9836583
37277631	> Uhh, a statement like this somewha	> Uhh, a statement like this somewhat hurts the ability to trust the other claims of the benchmark.Why?> Sure, Linode has the lowest clock speed, but you're comparing Epyc Milan which is almost a decade newer than the Sandy-Bridge EP of Cloudfanatic for example.Sure, but also take into consideration that the Linode instance costs $48/month while the Cloudfanatic one costs $18/month. Both of them have the same amount of CPU cores too.Seems like this is a Linode problem of offering old hardware, instead of a problem with the benchmark itself.	capableweb	9.579059	-5.201724	comment	4.0	12.0	1693090268	7.860825
37314867	Pgvector 0.5.0 Feature Highlights an	Pgvector 0.5.0 Feature Highlights and how tos	samaysharma	9.125062	-6.277109	story	4.0	103.0	1693347468	12.79103
37316101	8 cores with 528 thread? What’s the 	8 cores with 528 thread? What’s the math? I assumed 512 but had to reread it	matt3210	9.5152235	-5.3108616	comment	4.0	25.0	1693355644	7.967877
37346218	Writing a bare-metal RISC-V applicat	Writing a bare-metal RISC-V application in D	teleforce	9.429969	-5.7381916	story	4.0	141.0	1693536658	-10.5467205
37358438	Emoji are “fun” but it’s got to stop	Emoji are “fun” but it’s got to stop. These characters are going to be used until civilization collapses, so we can’t just keep being like “lol, let’s add a food that is only eaten in some regions and has been around for less than 100 years.”	earthboundkid	9.811112	-6.2634664	comment	4.0	27.0	1693626698	-13.962043
37358615	Japanese telcos disagreed. (Seriousl	Japanese telcos disagreed. (Seriously. We have emojis in Unicode because of interoperabilities with them.)	lifthrasiir	9.83533	-6.2469907	comment	4.0	19.0	1693629774	-13.951316
37381265	They seem to be positioning themselv	"They seem to be positioning themselves as the ""RISC-V Arm"" equivalent.  Of course there are significant differences, like they don't completely control the architecture (as Arm does).  But Arm have made a decent business out of it, so SiFive should be able to do the same.By the way StarFive were SiFive China until SiFive divested them (the split was a bit acrimonious)."	rwmj	9.376306	-5.626339	comment	4.0	37.0	1693840501	-10.554943
37384076	I'm in market to replace platform fo	I'm in market to replace platform for my home-built NAS. I'm looking at EPYCs 7001 or 7002 with SuperMicro platform (second hand) as primary target.When I seen this Milk-V Pioneer platform I was very enthusiastic: looks like what I need (minus IPMI, but I can omit this requirement) - one slot for 10G network, one slot for HBA, M.2 slots for caches, I can select RAM (in opposite to most of these platforms, where RAM is soledrid-on), plus ability to experiment with new platform. Looks perfect.But... $1499?! Plus VAT to import to Europe?!Sorry. I pass :-(Why does it cost SO MUCH!?	blacklion	9.474523	-5.3383803	comment	4.0	20.0	1693856029	-10.621137
37412180	Characterizing gaming workloads on Z	Characterizing gaming workloads on Zen 4	zdw	9.250888	-5.212763	story	4.0	65.0	1694038774	7.8647084
37447894	Then your actual bet is that RISC-V 	Then your actual bet is that RISC-V based products will outperform products based on competing ISAs, no?	cinntaile	9.416132	-5.6769137	comment	4.0	21.0	1694280920	-10.577156
37448867	I believe RISC-V will recreate balka	I believe RISC-V will recreate balkanization and UNIX wars of the past. There will be just to much incentive for corporations to introduce closed/proprietary extension to distinguish themselves from their competitors. So either users would be forced to use only core specification(that would be not as competitive as new extensions) or be forced to choose extended ISA from one of big players.	sobkas	9.423973	-5.697003	comment	4.0	12.0	1694285101	-10.564447
37476092	Are there simulators that chip devel	Are there simulators that chip developers use to get an idea of what performance will be for certain workloads prior to creating an engineering sample?  Or how does this work?	metadat	9.46228	-5.214959	comment	4.0	30.0	1694483071	7.8399916
37482877	"I think the key is that nobody ""want"	"I think the key is that nobody ""wants"" to spend any time at all on CI or their build system. It is one of those necessary evils that you have to do to have functioning software. Once you do it, even if it's a slow buggy pile of hacks, you will just ignore it until the pain gets very very bad.This was the same problem that caused our team to abandon CircleCI. They kept wanting us to rewrite our CI configs, touting various benefits that we just didn't care about. All we wanted was for our janky broken builds to keep working 90% of the time, like they did before Circle tried migrating this or that."	aftbit	9.243362	-6.4045496	comment	4.0	13.0	1694533041	6.053416
37482528	CI systems are important to me, but 	CI systems are important to me, but my requirement is pretty much: Can it run a bash script. Every CI I've ever used has degraded into a bash script runner. It starts out well enough, you try to use all the build in features but at some point you fallback to running a shells script and then slowly more and more move to the script, because it's easier.Someone should just build a bash CI, something that can manage secrets and then run one or more shells scripts.	mrweasel	9.204464	-6.4280825	comment	4.0	12.0	1694531687	6.231892
37485078	> Not to rain on the parade here but	"> Not to rain on the parade here but this is literally a copy-pasta product.More to the point, the product offered no compelling reason to use it, let alone pay for it.Being ""fast"" is not a selling point. Developers don't want slow pipelines, but that does not mean they want fast pipelines.  The speed that the pipeline works is more depending on how the pipeline is setup than the overhead of the pipeline service, and other CICD services are already blazing fast. Take for instance CircleCI, which is already a tough sell over GitHub actions and GitLab CICD: how did the service stood out? Did it added tangible value over GitHub/Gitlab/CircleCI/etc? Shaving milliseconds off a minutes-long build ain't it."	rewmie	8.752296	-6.4204326	comment	4.0	14.0	1694542029	6.321587
37516161	But why did Apple choose to do that 	"But why did Apple choose to do that if they could have saved money,
never paid Arm Inc a cent, and gone with RISC-V? Arm brings a lot of things to the table, and while Apple is alone in having done a CPU architecture change successfully not once, but twice, it's not something they do just for funsies, so I doubt a switch to RISC-V is imminent."	fragmede	9.414241	-5.583704	comment	4.0	14.0	1694733993	-10.550037
37545026	Not really sure what’s the advantage	Not really sure what’s the advantage of switching from whatever you have today (ARM?), to a qualcomm IP. Qualcomm is historycally a quite shitty partner to have.Nobody is going to give the secret sauce for free. Also these AI/ML use cases are just some marketing bs, not really grounded by anything really.There are plenty of ISAs you can find freely available today (Open sparc anyone?). The problem is fragmentation…	hashtag-til	9.481163	-5.4498405	comment	4.0	45.0	1694958464	7.2843857
37549550	A few years ago I considered trying 	"A few years ago I considered trying to build a simple 32-bit RISC processor out of 74xx series logic chips. I had just taken parts 1 and 3 of the the MITx MOOC 6.004x, ""Computation Structures"".Part 1 covered CMOS, combinatorial logic, sequential logic, FSMs and stuff like that, and performance considerations, and culminated with designing a 32-bit ALU, which did add, sub, all 16 logic ops, compares, and shifts (logical or arithmetic) of 0 to 31 bits in either direction.In part 2 the students design a 32-bit processor and implement it in the simulator. The design is all at the gate level, except we were given two things as black boxes: (1) a register file of 32 32-bit registers, and (2) a ROM with 64 18-bit words.Part 3 adds caching and other performance.Here was the parts list I came up wi"	tzs	9.5871315	-5.426716	comment	4.0	17.0	1694986327	-7.593279
24465007	What a death sentence for ARM right 	"What a death sentence for ARM right there and the start of a starvation in a new microprocessor winter. I guess we now have to wait for RISC-V to catch up.Aside from that, ARM was one of the only actual tech companies the UK could talk about on the so-called ""world stage"", that has survived more than 2 decades. But instead, they continue to sell themselves and their businesses to the US instead of vice versa.In 2011, I thought that they would learn the lessons and warnings highlighted from Eric Schmidt about the UK creating long standing tech companies like FAANMG. [0] I had high hopes for them to learn from this, but after 2016 with Softbank and now this, it is just typical.ARM will certainly be more expensive after this and will certainly be even more closed-source, since their Mali GPUs"	rvz	9.223911	-5.321996	comment	4.0	39.0	1600041381	-7.649922
24465008	On the bright side, this could end u	On the bright side, this could end up being a big boost for RISC-V.	UncleOxidant	9.376669	-5.699921	comment	4.0	14.0	1600041385	-10.599133
24465074	Android worked on x86 and MIPS in th	Android worked on x86 and MIPS in the past, it could presumably be ported to work with RISC-V	bgorman	9.395074	-5.6800222	comment	4.0	13.0	1600041989	-10.572059
24474898	Shocking to see that Hideo Kojima, M	Shocking to see that Hideo Kojima, Mao Zedong, Leon Trotsky, Adolf Hitler and Joseph Stalin are all against the ARM sale.	Hamuko	9.522466	-5.190722	comment	4.0	12.0	1600116143	-7.629733
24475329	Very briefly:- They don't license be	Very briefly:- They don't license because they can make a lot more money manufacturing the chips themselves.- AMD also has the right to x86 because Intel originally allowed them to build x86 compatible chips (some customers insisted on a 'second source' for cpus) and following legal action and settlements between the two companies over the years there is now a comprehensive cross licensing agreement in place. [1]- Note that AMD actually designed the 64 bit version x86 that is used in most laptops / desktops and servers these days.[1] https://www.kitguru.net/components/cpu/anton-shilov/amd-clar...	klelatti	9.365389	-5.2190666	comment	4.0	14.0	1600118655	7.8310294
24520308	Have not seen any RISC-V offering fr	Have not seen any RISC-V offering from the Chinese yet. I wonder if SiFive will have any competition.	farseer	9.368493	-5.6540275	comment	4.0	29.0	1600454045	-10.605476
24522674	The likelihood of ARM sailing off in	The likelihood of ARM sailing off into the distance and x86 disappearing is very slim. It's worth keeping in mind that they have more in common than you might think (i.e. RISC and CISC don't mean a huge amount any more when the old x86 instructions aren't used any more and ARM had/has a JavaScript instruction)	mhh__	9.611305	-5.470453	comment	4.0	17.0	1600469945	-7.8035545
24526557	I think this was a great comment and	"I think this was a great comment and discussion thread on OOO vs VLIW:
https://news.ycombinator.com/item?id=24466593The biggest takeaway for me was the importance of scalability. As OOO CPUs get better, they can become increasingly parallel when running the exact same assembly.
While VLIW like Itanium was limited to 3 ops/instruction, which is already behind today's OOO CPUs. (Although Mill's 33 ops/instruction sounds like it'd take much longer to beat.)My takeaway was that NVidea's Volta looked on the right track, where it added 6-bit dependency bitmasks to instructions to make building the dependency graphs (primary cost to OOO) more efficient."	celrod	9.631142	-5.661945	comment	4.0	12.0	1600512943	8.119974
24560420	Arm Updates Its Neoverse Roadmap: Ne	Arm Updates Its Neoverse Roadmap: New BFloat16, SVE Support	rbanffy	9.543392	-5.211546	story	4.0	41.0	1600811761	-7.7999096
24567254	Did you hear of the Edison board? Sa	Did you hear of the Edison board? Sank like a stone. And like many things Intel lost interest.Intel is culturally incapable of doing long-attention-span products. They only succeed with fire-and-forget products. Sustained effort over the long haul is just not in their DNA.	dbcurtis	9.28701	-5.1982465	comment	4.0	13.0	1600870241	7.687318
24603985	To me, a fun ISA is one which provid	To me, a fun ISA is one which provides opportunities for golf, which basically means CISC ISAs with lots of different ways to do things. RISC-V is proudly, definitively not that and that's a good design decision, but you'll never be able to replace a stretch of straightforward code with a handful of more obscure opcodes and complicated addressing modes.I'll always have SIMH.	msla	9.420464	-5.702126	comment	4.0	22.0	1601177109	-10.523432
24602582	I’ve had a lot of fun learning RISC-	I’ve had a lot of fun learning RISC-V assembly off and on over the last year. I went through a colleague of mine’s tutorial series on implementing an operating system targeting RISC-V using Rust. Now I’m working on my own small assembler for RISC-V.It’s been so much more fun to learn than x86!Edit: link to the tutorial (http://osblog.stephenmarz.com/)	azhenley	9.545486	-5.8152776	comment	4.0	29.0	1601158295	-10.519924
24641042	If Linus had done that we would not 	If Linus had done that we would not have Linux.	JaimeThompson	9.431927	-5.8156962	comment	4.0	19.0	1601485856	4.243059
24641367	I have recently built a simple 8085 	I have recently built a simple 8085 computer on a breadboard and finding a working and open-source C compiler was a huge challenge. Finally I found this one: https://github.com/ncb85/SmallC-85 but it supports ancient K&R C syntax, without such goodies like subscript operator or character literals. Still I prefer ancient C than ancient assembly language.On the other hand there is Small Device C Compiler (SDCC) project that provides a decent compiler for Z80 CPU. There is also cc65 for 6502 CPUs.The strangest thing is that Free Pascal seems to support 68k out of the box (https://www.freepascal.org/) and also AVR and bunch of other archs.	0xmarcin	9.81368	-5.707337	comment	4.0	16.0	1601487694	-7.4870625
24675321	> Microsoft Excel, PowerPoint, or Ch	> Microsoft Excel, PowerPoint, or Chrome run mostly single-core and are everyday consumer tools.I'm sick of hearing this bullshit.Nobody is using those programs solely. If you're running excel you've also Chrome with some web sites opened, also running Spotify or Slack or whatever in the background. Then add Windows running who knows whatever dozens of services constantly. Even an empty Chrome instance starts with a 6+ processes. If I open a handful of tabs the I can easily observe the CPU usage graph making full use of all cores even if momentarily. And these are very basic baseline usage scenarios that's applicable to every single computer user.I'm sorry but I can't help but think anybody still parroting this bullshit claim in this day and age either1. doesn't know shit about computing2.	kasabali	9.710961	-5.205969	comment	4.0	16.0	1601766217	7.7017856
24700281	I guess what I don't understand then	"I guess what I don't understand then is what big advantage ""enterprise ECC"" has left over this DDR5 ""non-enterprise ECC"". (Seriously, why is ECC ""enterprise""? Everybody wins with memory error correction.) If regular DDR5 can correct single bitflips, it is on par in correction capabilities with ""enterprise ECC"" DDR4.Maybe this won't allow for the detection of multiple flips, and maybe won't even report single bit flips to the OS (it'll just fix them silently). I suppose there's no big need to support detection and reporting for the vast majority of use cases. Ryan Smith at Anandtech in the link above says as much: ""Between the number of bits per chip getting quite high, and newer nodes getting successively harder to develop, the odds of a single-bit error is getting uncomfortably high. So o"	DCKing	9.494359	-5.512232	comment	4.0	12.0	1602005362	8.216415
24700875	To my hardware colleagues on HN, wha	To my hardware colleagues on HN, what prevents something similar to Dennard Scaling on DRAMs?My very naive textbook knowledge is that every bit for DRAM uses up a single transistor and a capacitor, whereas a SRAM cell uses up 6 transistors.How is it then that with all the scaling so far that traditional SRAMs haven't caught up with DRAM capacities? A single DRAM chip is huge compared to the total die size of any micro-processor.As the sibling comment asks about cheaper DRAMs, I'm trying to understand how using SRAMs haven't caught up yet from a price/GB perspective.	filereaper	9.704618	-5.2706637	comment	4.0	12.0	1602009151	7.9811015
24722255	Dumb question. Why would one want EC	Dumb question. Why would one want ECC in something that isn't a server? How often do bits in memory actually flip by themselves for it to be warranted?	grishka	9.519229	-5.5453987	comment	4.0	15.0	1602182150	8.273756
24726291	Going back to 2006, Xilinx was makin	Going back to 2006, Xilinx was making FPGAs that would sit in an Opteron socket and speak HyperTransport to the other CPU(s).I never heard much more about that, but I can imagine it might've been popular with certain specialized workloads, in an era before GPU compute took off, or perhaps workloads that don't fit GPUs well.I wonder if those specialized applications might be a small but important market.	myself248	9.103381	-5.3553085	comment	4.0	12.0	1602212290	8.265791
24736659	"""A software emulation of 32-bit ARM "	"""A software emulation of 32-bit ARM would be needed, with perhaps a 10x performance drop.""Well, my Archimedes was 8Mhz, and my Pi is 1500Mhz, so we have some room there perhaps?"	lowbloodsugar	9.668302	-5.2632895	comment	4.0	19.0	1602303542	-7.761874
24753417	AWS makes its own Arm CPUs default f	AWS makes its own Arm CPUs default for ElastiCache in-memory data store service	timthorn	9.65636	-5.1985707	story	4.0	25.0	1602502946	9.450326
24785967	It's not that they couldn't do it, i	It's not that they couldn't do it, it's that LDM is a terrible instruction and was rightly removed in the cleanup that is arm64. See also: x86 LOOP...	stefan_	9.909934	-5.6579175	comment	4.0	31.0	1602748096	-7.7168436
24808585	Unless I misread the current arm doc	Unless I misread the current arm docs, I don't think this is still present in the ISA as of 2020?The whole RISC/CISC thing is long dead anyway, so I don't really mind having something like this on my CPU.Bring on the mill (I don't think it'll set the world on fire if they ever make it to real silicon but it's truly different)	mhh__	9.538606	-5.4204125	comment	4.0	36.0	1602924838	-10.44808
24866724	How do the MSR's affect CPU core vol	How do the MSR's affect CPU core voltage?After all, the voltage regulators for the CPU core are off-chip on the motherboard...	londons_explore	9.450354	-5.1928105	comment	4.0	14.0	1603436404	7.8510876
24874352	Is there a decentralized version con	Is there a decentralized version control system solution out there to host projects like this?	brink	8.748897	-6.3917212	comment	4.0	26.0	1603488229	-11.748477
24892704	IMHO (from having addressed such CI 	IMHO (from having addressed such CI issues personally on teams that otherwise wouldn't bother) it's likely due to other factors, like a lack of interest, being scared of breaking the build, not being terribly comfortable touching build scripts, or the inability to run scripts locally, than a genuine lack of time. The returns you can get can be ridiculously huge across the entire team compared to the hours you might spend, but I've found many people just aren't terribly interested in sitting down and digging into ugly scripts and pushing dozens of commits to figure out what might be slowing things down. And honestly, it's not exactly trivial to structure things in a way that's simultaneously both efficient and maintainable, especially if you're refactoring an existing system instead of star	mehrdadn	9.393724	-6.4077373	comment	4.0	12.0	1603684630	6.0879283
24900802	Parsing RISC-V assembly	Parsing RISC-V assembly	azhenley	9.484228	-5.781844	story	4.0	56.0	1603743189	-10.53013
24906254	I'd love to know why Intel chose to 	I'd love to know why Intel chose to buy Altera instead of the industry leader Xilinx.	voxadam	9.152602	-5.27675	comment	4.0	16.0	1603797069	8.24508
24907303	That's a decent analogy.Note however	That's a decent analogy.Note however that Xilinx has a dsp slice (UltraScale) which is a prefabbed adder / multiplier. This would be PyTorch in the analogy.FPGA LUTs cannot compete against ASICs, so modern FPGAs have thousands of dedicated multipliers to compete.The LUTs compete against software, while the dedicated 'Ultrascale DSP48 Slices' competes against GPUs or Tensors.--------It's not easy, and it's not cheap. But those UltraScale DSP48 units are competitive vs GPUs.It's still my opinion that GPUs win in most cases, due to being more software based and easier to understand. It is also cheaper to make a GPU. But I can see the argument for Xilinx FPGAs if the problem is just right...	dragontamer	9.083034	-5.3158727	comment	4.0	24.0	1603806097	8.293206
24906227	This is a smart move, reflecting Int	This is a smart move, reflecting Intel's own, with an eye to the datacenter where the FPGA is seen as having a bright future.	hehetrthrthrjn	9.137831	-5.2973857	comment	4.0	31.0	1603796816	8.243882
24958802	Have decent speedups been gotten by 	Have decent speedups been gotten by previous CPUs by the addition of conditional moves? IIRC for some the SPECcpu impact was negligible, amd many RISCs don't have it. RISC is about quantifying this kind of thing and skipping marginal additions after all.	fulafel	9.406879	-5.6227427	comment	4.0	19.0	1604230660	-10.538502
24958876	Personally I think the POWER instruc	Personally I think the POWER instruction set is better in many ways. It has a proven track record of high performance and embedded implementations. A lot of ISA design is about avoiding patents and other traps. Ultimately it doesn’t really matter because most of the value is in the implementation and the software is the commoditized complement.Truly innovative designs don’t actually use RISC encoding and hide the details of instruction encoding. See for example NVIDIAs PTX , which gets mapped to hardware specific instruction streams, which are nothing like a traditional RISC architecture.To me RISC-V is another example of how open source often produces lowest common denominator copy cat versions of ideas that are 30+ years old. Just like Linux. The sad thing is that this often kills innova	orbifold	9.468857	-5.655485	comment	4.0	15.0	1604231960	-10.519907
24960088	Two words: instruction density.It do	Two words: instruction density.It doesn’t matter if they’re fused or not if the reduced instruction density increases memory usage and puts more pressure on I$.Also, I don’t buy the whole fusion argument on the grounds that having to fuse super complex (5 instruction or more) sequences adds enough complexity that you’ve got opportunity cost. Much better for everyone if the CPU doesn’t have to do that fusion. That’s the whole point of good ISA design - to prevent the need for fusing in cases you’re doing something super common.	pizlonator	9.659046	-5.7570415	comment	4.0	61.0	1604244684	-7.7485733
24958976	I enjoyed reading this a lot, I keep	I enjoyed reading this a lot, I keep seeing RISC-V being touted as a potential replacement for ARM but I had yet to read a good critique of the ISA by people who know what they're talking about.This point I didn't quite understand:>Highly unconstrained extensibility. While this is a goal of RISC-V, it is also a recipe for a fragmented, incompatible ecosystem and will have to be managed with extreme care.Most successful ISAs (including ARM) have their share of extensions, coprocessors, optional opcodes etc... ARM has the various Thumb encodings, Jazelle, VFP, NEON and more. Toolchains and embedded developers are used to dealing with optional features of computers, I'm not sure why RISC-V would fare worse here.Beyond that I notice that many of the ascribed weaknesses are shared with other RI	simias	9.446548	-5.6849365	comment	4.0	34.0	1604233425	-10.521816
24962103	Do any other ISAs have compressed en	Do any other ISAs have compressed encodings in wide use? It seems a bit like a chicken and egg problem - why build all the silicon to handle decoding it if your base ISA is dense enough?	anp	9.635149	-5.6605725	comment	4.0	19.0	1604261557	-7.848761
24987208	It would be great if some HNers on t	It would be great if some HNers on the anonymous and free tiers could go through the process and report on how throttling affected them in detail.I have to admit that 100 pulls per 6 hours doesn't sound like enough for even a small team doing CI/CD.But in the long run, it might make a lot of organizations more lean in how they do builds, which could be a good thing.	redis_mlc	9.199814	-6.396492	comment	4.0	29.0	1604477261	6.165256
25003888	Oh boy, I just moved my projects fro	"Oh boy, I just moved my projects from travis-ci.org to travis-ci.com after the builds stopped happening on .org.(Despite the travis FAQ that said ""we’re making a number of changes to the travis-ci.org infrastructure to ensure the service will remain as reliable and available to you as it always has been until [it goes away Dec 31]"", that was not the case, builds simply stopped working on .org. https://docs.travis-ci.com/user/migrate/open-source-reposito...)I actually had not seen that announcement at all, this is the first I'm seeing it. So I'm in the same position as OP, I maybe should not have spent time migrating my projects to travis-ci.com. Although I guess this buys me a bit of time to move to github actions instead.Travis is the reason that many people DO CI at all, in my experience"	jrochkind1	8.810121	-6.3761125	comment	4.0	16.0	1604625197	-5.559473
25007175	With infinitely many cores that are 	"With infinitely many cores that are all connected to the same bus while each core has a unique id, you actually can solve the halting problem.
You can basically brute force infinitely many inputs at once."	Gehinnn	9.723511	-5.421872	comment	4.0	14.0	1604666225	-7.3165765
25014323	Vt52-FPGA	Vt52-FPGA	fanf2	9.202217	-5.3417625	story	4.0	62.0	1604745787	8.219642
25034123	> Back to square one.It's an open so	> Back to square one.It's an open source processor, right? (Not just the RISC-V instruction-set, but the specific chip.) Could the chip be compared against that design to check for backdoors?	MaxBarraclough	9.402399	-5.513593	comment	4.0	21.0	1604925709	7.9041767
25042852	These terms tend to invite a lot of 	"These terms tend to invite a lot of confusion. First of all, open source is not the same as free. In fact, the best open source hardware is a proprietary implementation of code that is maintained by the open-source community, and unless you have endless time and resources, you probably don't want to do this yourself. In chips, an open-source implementation typically involves a ""free"" instruction set architecture, and the hot one today is RISC-V. Others include MIPS and POWER, which are open-source, but you can't play with the source code like you can with RISC-V.An SoC is a whole-different beast, because it contains all of the other things needed to create a system, including on-chip memory, I/O, interconnects, possibly some analog components, and it all has to work together. The more comp"	Lind5	9.469268	-5.2139473	comment	4.0	14.0	1604983281	-10.532236
25052842	Not all geekbench scores are created	Not all geekbench scores are created equal. Comparing ARM and x86 scores is an exercise in futility as there are simply too many factors to work through. It also doesn't include all workload types.For example, I can say with 100% confidence that M1 has nowhere near 32MB of onboard cache. Once it starts hitting cache limits, it's performance will drop off a cliff as fast cores that can't be fed are just slow cores. It's also worth noting that around 30% of the AMD power budget is just Infinity Fabric (hypertransport 4.0). When things get wide and you have to manage that much wider complexity, the resulting control circuitry has a big effect on power consumption too.All that said, I do wonder how much of a part the ISA plays here.	hajile	9.561564	-5.2274942	comment	4.0	31.0	1605046832	7.7605906
25058985	R doesn't even work that well on Int	R doesn't even work that well on Intel, at least in Ubuntu.  Recompiling the package with AVX support often leads to a 30% performance increase on modern CPUs.IMO the R base package should dynlink different shared libraries for different processors since vector extensions are mostly tailored to the kind of floating point numerical work that R does.	CoolGuySteve	9.806741	-5.8812714	comment	4.0	17.0	1605107427	8.470738
25060965	Thanks for the links.  If anyone is 	Thanks for the links.  If anyone is wondering about some of the hoops that need to be jumped through to make it work, here's another guide [1].One question in case you or anyone else knows: What's the story behind AMD's apparent lack of math library development?  Years ago, AMD and ACML as their high-performance BLAS competitor to MKL.  Eventually, it hit end of life and became AOCL [2].  I've not tried it, but I'm sure it's fine.  That said, Intel has done steady, consistent work on MKL and added a huge amount of really important functionality such as its sparse libraries.  When it works, AMD has also benefited from this work as well, but I've also been surprised that they haven't made similar investments.Also, in case anyone is wondering, ARM's competing library is called the Arm Perform	kxyvr	9.349531	-5.276907	comment	4.0	13.0	1605118200	7.9803333
25060486	>MKL has faster routines and is comp	>MKL has faster routines and is completely free, but it won't work on ARM.It will probably be ported though, if there's a demand...	coldtea	9.631998	-5.2611227	comment	4.0	22.0	1605115934	-7.7842484
25065106	> macOS uses CPU instructions that a	> macOS uses CPU instructions that aren’t available yet on non-Apple ARM CPUs, so you can’t have hardware accelerated virtualization,Does anyone know what these instructions are? And could you not trap and emulate them if the hypervisor detects an invalid instruction?	als0	9.7421255	-5.4251795	comment	4.0	16.0	1605143272	-7.7867446
25066189	Like the grandparent comment, I woul	Like the grandparent comment, I would avoid this M1 Macbook since the developer ecosystem is still unsupported by it. Take this for example: https://github.com/docker/for-mac/issues/4733Docker still doesn't run on Apple Silicon Macs, so the migration path is already disrupted here.	rvz	9.558707	-6.408415	comment	4.0	16.0	1605152783	10.033246
25074057	If ARM servers take over, then runni	If ARM servers take over, then running ARM docker natively on M1 could be helpful ...... but for the current state where ARM-compatible images make up roughly 1% of Docker Hub, I don't even see the point of wanting to use Docker on M1.	fxtentacle	9.559039	-6.4076157	comment	4.0	18.0	1605210601	10.0633
25074156	If the world moves on to ARM from x8	If the world moves on to ARM from x86, it will be interesting to see what happens in the GPU/Accelerated computing space.  I'm guessing AMD/Intel will probably not support an ARM pairing anytime soon.	01100011	9.574446	-5.1958437	comment	4.0	12.0	1605211140	-7.733215
25084693	I don’t see the reason for the focus	"I don’t see the reason for the focus on the amount of memory given the potential theoretical advantages of a unified memory pool that extends beyond the DRAM.
PCIe gen 4 SSDs have obscene data rates and tons of IOPs. In fact the whole SSD is now an extension of your RAM is a selling point of the new consoles.Is it as fast as having more DRAM in all possible scenarios? No, but with good memory management the real world performance might very well be identical to a system with the same capabilities and even greater than traditional memory systems with larger non-unified pools."	dogma1138	9.827042	-5.1941805	comment	4.0	23.0	1605288107	8.010636
25093665	That, in part, comes from x86 vs arm	That, in part, comes from x86 vs arm. x86, with its variable length instructions, means your logic gets increasingly complex as you widen. Meanwhile with arm, you have constant instruction size (other than thumb, but that’s more straightforward than variable size), that lets Apple do things like an 8-bit wide decode block (vs. 4-bit for Intel) and a humongous 630 OOB (almost double Intel’s deepest cores).	DeRock	9.703256	-5.434883	comment	4.0	27.0	1605373973	-7.7426805
25103245	Somewhat related to this thread: a f	Somewhat related to this thread: a frustration I have with most CI systems is how hard it can be to reproduce the run locally using (ideally all of the) same configuration.For example, Gitlab CI has a local runner but it's not really first class, definitely isn't kept up to date with the real runners. It seems like it's more of a recreation of a job system based off of (an older version of) Gitlab CI configuration files.Circle CI has a more decent story around this if I remember correctly. But first-class support for local reproduction of CI runs is the kind of thing I'd like to see as table stakes today.It can be challenging to debug certain things in the live CI system for developers without being able to recreate locally (otherwise you have to bring in the team that manages the CI syste	eatonphil	9.042691	-6.4177084	comment	4.0	14.0	1605463485	6.172742
25106569	ARM already has instructions for imp	ARM already has instructions for improving performance of Javascript [1]. What if Apple added custom ISA extensions to their chips to support efficient x86 emulation? Current evidence seems to suggest that much of the translation is happening statically; a few additional instructions might greatly increase x86 emulation performance if most of the code can be translated instruction-by-instruction.Also curious to see how Rosetta will work with x86 code whose instruction alignments can't be determined statically.[1] https://stackoverflow.com/questions/50966676/why-do-arm-chip...	ericpauley	9.769318	-5.351909	comment	4.0	27.0	1605487162	-7.6884446
25107279	I am similarly curious about Rosetta	I am similarly curious about Rosetta2, but there seems to be very little marketing let alone technical information being made available. All I can figure is that it performs user mode emulation, similar to what QEmu can do, and does not cover some of the newer instructions.Off topic, my job has been in virtualisation for the last 12 years, thus I am very familiar with the publicly available body of research on this topic. Ahead of time binary translation has been a niche area at best.	aparashk	9.799474	-5.3462963	comment	4.0	30.0	1605493563	7.5528936
25120004	Can we give them a full month to sor	Can we give them a full month to sort this out ?I want x64 docker on Arm , as this could also be massive for server power consumption. But things take time . If your some wiz kid who can crack this puzzle you’ll have a billion dollar startup within 6 monthsAs someone who’s published on the App Store , having a single binary run on IPhone , IPad and Mac is a much much bigger deal than most of you realize .	offtop5	9.581904	-6.334479	comment	4.0	22.0	1605583828	10.058594
25126108	It's time for Intel and x86 to die.B	It's time for Intel and x86 to die.But I would also be a little wary, because ARM systems are way more locked down than x86 systems today.	JAlexoid	9.667148	-5.2878923	comment	4.0	26.0	1605632467	-7.755833
25127764	I'm no expert, but the only big arch	I'm no expert, but the only big architectural differences are a massively larger decoder and a reorder buffer that's several times as large as x86 designs.If these are actually the reasons for the performance difference, and it's difficult to do these on x86 because of the instruction set, it seems to this amateur that ARM64 really does have an advantage over x86.	epistasis	9.685212	-5.4693875	comment	4.0	19.0	1605638498	-7.752769
25145897	RPC DRAM support in open source DRAM	RPC DRAM support in open source DRAM controller	pabs3	9.7358055	-5.32635	story	4.0	31.0	1605756565	8.0912695
25149238	i hope this can be disabled because 	i hope this can be disabled because why would you ever run tasks you don't trust on your computer at all, let alone sharing a core	jbb67	9.778439	-5.222546	comment	4.0	12.0	1605792646	7.905538
25151625	Fujitsu, AIST, and Riken Achieve Unp	Fujitsu, AIST, and Riken Achieve Unparalleled Speed on the MLPerf HPC	kosaki	9.396714	-5.397126	story	4.0	1.0	1605805851	0.09057287
25155773	I'm surprised people are still using	I'm surprised people are still using Travis CI. The writing was on the wall the day of the acquisition. I moved all of my builds immediately.	jniedrauer	8.830285	-6.404993	comment	4.0	20.0	1605829406	-5.47552
25163838	I think it moderately depends on the	I think it moderately depends on the definition you give it to. If you require RISC to be a load/store architecture, x86 is not even close to be one. Also, aarch64 is a variable-length instructions set and include complex instructions (such as those to perform AES operations). Compiler optimizations are meant to be taken advantage by all architectures, regardless of RISC/CISC.	idividebyzero	9.559894	-5.7139907	comment	4.0	19.0	1605899844	-10.489021
25166315	But it has such a cool name! Sure mr	But it has such a cool name! Sure mrg32k3a has a smaller state, runs faster and has a quick skip ahead function but L'Ecuyer just didn't put enough effort into the marketing.	fancyfredbot	9.787222	-5.184994	comment	4.0	37.0	1605914337	7.9538994
25167796	I have an Intel C226 chipset with an	I have an Intel C226 chipset with an i3 CPU, ECC RAM, and Linux, but as far as I can tell, there is no way to determine whether ECC is actually working.I've heard of people collecting known-bad DIMMs for this purpose, or trying to blast their RAM with heat or radiation.Why does this have to be so difficult?	p1mrx	9.461398	-5.4962416	comment	4.0	19.0	1605931460	8.251843
25178581	I really like the idea of competitio	I really like the idea of competition in the space, but I personally would really like and prefer to see x86 in the small form factor computer market. This is for a few reasons, one of which is I would like to keep a unification of my environments. On that note, I compiled a list and determined my favorite of the existing x86 ones and some of them are quite impressive if a bit pricier. (sorry mobile or Id find and post it)Also, one thing I learned when supporting genetic sequencers is thatresource hungry embedded machines often use powerful laptop series mbs/cpus, and you can often find those inside laptops that are broken at a great price to value ratio.	arminiusreturns	9.596733	-5.2328944	comment	4.0	14.0	1606061518	-7.762951
25178803	Nice. The XTensa cores always felt w	Nice. The XTensa cores always felt weird.Too bad they only included the I/M/C extensions - no floats, vectors, or atomics. And USB would be nice (nevermind, it has USB :D).But it's still very exciting. Maybe there'll be less conflict between ARM/XTensa/PIC32/etc. cores in the coming years.	meekrohprocess	9.553582	-5.237225	comment	4.0	30.0	1606063489	-7.7702937
25183446	Looks likes emacs didnt run perfectl	Looks likes emacs didnt run perfectly on the emulation/translation layer known as rosetta..  Maybe its not so perfect after all.	silly-silly	9.7921915	-5.355856	comment	4.0	26.0	1606104016	7.5735254
25195802	Verilog to Minecraft Redstone Synthe	Verilog to Minecraft Redstone Synthesizer	parkertomatoes	9.097506	-5.468716	story	4.0	174.0	1606198328	8.637643
25203655	I don't understand. Don't those two 	I don't understand. Don't those two things seem antithetical? Like why would you make your app inefficient at the same time you optimize it for the CPU?	singhkays	9.846236	-5.246693	comment	4.0	15.0	1606256338	7.8215
25204235	But how? It has an Arm CPU - how doe	But how? It has an Arm CPU - how does it differ from any other machine with a 64 bit Arm CPU?	klelatti	9.628438	-5.262672	comment	4.0	37.0	1606260388	-7.7742844
25219511	Not a hardware engineer, but I've da	Not a hardware engineer, but I've dabbled a bit with very basic CPU design using an open source Verilog compiler and simulator (specifically, Icarus Verilog). Just out of curiosity, what do proprietary tools in this space offer that open source ones don't?	f00zz	9.274948	-5.2539716	comment	4.0	13.0	1606394658	8.403684
25234693	> 4/ So Apple simply cheated. They a	"> 4/ So Apple simply cheated. They added Intel's memory-ordering to their CPU. When running translated x86 code, they switch the mode of the CPU to conform to Intel's memory ordering.Uh, no. Implementing TSO in a highly performant way is not ""cheating"", it's a difficult engineering feat. And no, TSO is not some fancy Intel thingy. It's a standard memory model."	titzer	9.579568	-5.233354	comment	4.0	24.0	1606530964	-7.704548
25235962	This is what happens when a huge pro	"This is what happens when a huge proportion of your die isn't doing instruction decoding.That's a misconception. Yes, decoding x86 is somewhat more complicated, as far as I'm aware that's mostly because instruction length differs at a byte granularity. Still, the area dedicated to it simply isn't that large on those huge out of order designs.I'm sure the instruction encoding plays some role, but I suspect what we're seeing is rather down to consistently good micro-architecture execution over the years and Apple being ahead of everybody else on manufacturing process.Compared to the x86 processors that exist today, M1 also benefits from having the memory in-package.Intel tried to be brave with Itanium, but failed because compilers weren't up to the job at the time.Compilers ""failed"" because "	atq2119	9.665389	-5.3084965	comment	4.0	40.0	1606548465	7.7124705
25239095	For me probably the coolest thing ab	For me probably the coolest thing about RISC-V is it has version with a simple enough architecture that students can code it in a quarter, and it's also in the zeitgeist in a way MIPS never was.  It seems like we've been doing toy MIPS implementations for years [1] but they just never captured the imagination in the same way.  RISC-V feels almost like the cpu architect's MINIX. :)[1] Just one random example http://pages.hmc.edu/harris/cmosvlsi/4e/index.html	egsmi	9.428546	-5.6563687	comment	4.0	21.0	1606586056	-10.497835
25238903	Are there CPU manuals from Apple tha	Are there CPU manuals from Apple that explain how to optimize assembly code for their CPU and document any deviations from the ARM reference architecture?	devit	9.698661	-5.458683	comment	4.0	23.0	1606584641	-7.7033854
25243222	There were emoticons in Puck magazin	There were emoticons in Puck magazine in the 1880s, so to suggest that someone invented the smiley face a hundred years later is kind of reaching...	ChrisGranger	9.810564	-6.2578883	comment	4.0	12.0	1606629070	-13.955185
25257892	Processors are complex. Architecture	Processors are complex. Architectures are over my head. Is there an intelligent layman's video or article series not just on architectures, but how, at a high level, ARM is supposedly so much better than x86 in the long term?	unethical_ban	9.623808	-5.2893167	comment	4.0	14.0	1606764803	-7.798558
25258477	The next question: What prevents Int	The next question: What prevents Intel or AMD from doing this on their processors?	ori_b	9.329143	-5.198905	comment	4.0	37.0	1606767769	7.8343945
25258522	The article specifically answers thi	The article specifically answers this:- x86 instruction set can't be queued up as easily because instructions have different lengths - 4 decoders max, while Apple has 8 and could go higher.- Business model does not allow this kind of integration.	jonplackett	9.720293	-5.4957604	comment	4.0	22.0	1606768012	-7.669322
25258956	Gotta say I'm not a fan of this arti	Gotta say I'm not a fan of this article. A few points I really disagree with:1) It puts way too much emphasis on the ISA being a driver for performance. People have been making this claim against x86 forever, going back to the 90s when RISC chips started putting up some very impressive performance numbers. Lots of talk about how the x86 ISA was out of runway. This period existed fo a grand total of about 4 years (94 thru 97) until the Pentium II hit the market, which allowed PCs to start cutting into the workstation market. AMD creating the x86-64 extension handled the addressing limitation well too, letting it flourish in the server space as well.2) The author seems to think Intel or AMD cannot make SoCs because of their business model. This really isn't the case, and both companies have 	spamizbad	9.479735	-5.254275	comment	4.0	19.0	1606770312	7.8479924
25262919	I appreciate learning more about wha	"I appreciate learning more about what, exactly, ARM's ""weaker memory model"" constitutes. It's clearer to me after reading this article.I wonder how much the gain in performance of e.g. Apple's M1 chip, compared to an x86 CPU, can be attributed to this weaker constraint. Given that the M1 can outperform an x86 CPU even when emulating x86 code, perhaps it's not much.Also, I suspect programming languages that are immutable by default will gain a larger advantage using ARM's weaker memory model, as the compiler can more often safely let the CPU perform reordering (due to not having to wait for a mutable variable being updated until it can execute a subsequent line of code which depends on this updated variable)."	runeks	9.698378	-5.37296	comment	4.0	35.0	1606803947	-7.7478294
25270783	Yes. His site has no indication of w	"Yes. His site has no indication of what he's doing.""Out of the box, the FPGA will be configured to work as a 100 MHz, 32-bit RISC-V CPU, but it can be configured to emulate many older processor types. Just keep in mind that it tops out at 100 MHz speeds. Huang says the system will be more powerful than a Palm Pilot or Nintendo DS, but it’s best suited for developers who want to create a single-purpose device completely from scratch…""That's nice, but it's not clear what it's for. You can make an slow, expensive, tamper-resistant feature phone out of it. Price is around $512. What else?"	Animats	9.129292	-5.281833	comment	4.0	12.0	1606861115	8.247288
25288184	Microconfig Features	Microconfig Features	based2	9.813055	-5.6293135	story	4.0	28.0	1606998355	-13.768109
25313022	> - no emojis please, everWhy not? D	> - no emojis please, everWhy not? Do you also don't want to see icons in GUIs?	brabel	9.842199	-6.244327	comment	4.0	17.0	1607159722	-13.938465
25320967	I spent many years using PDP-11s.  I	I spent many years using PDP-11s.  I remember DECs attempt at a microcomputer, the LSI-11.  It was twice the price of a PC, half as fast, and the size of a dishwasher.  If you've never heard of it, it's no wonder.	mark-r	9.841522	-5.357252	comment	4.0	16.0	1607227930	-7.5319157
25327174	Maybe slightly off topic, but..I don	"Maybe slightly off topic, but..I don't think this is really about taste. It's about ""common ground"" between programmers. If you've seen and used the second pattern many times before, it becomes part of your vocabulary. You're then able to express yourself more succinctly. It is then obviously a better solution to you.If you see another programmer use the same pattern, it is common ground between you, and you like it. As long as every or most programmers on the team share the same common ground, you are more effective for using it. If you don't share it, you're less effective.Everyone here commenting that they like the first solution better probably doesn't share the necessary common ground with Linus.The big question is: what common grounds should you expect when writing your code?"	mrloba	9.3723755	-5.9101367	comment	4.0	17.0	1607293274	-8.900465
25384029	The ARM platform is currently massiv	The ARM platform is currently massively held back IMO by its lack for standardization. I think there is tremendous value hidden behind a company that achieves a push for consistency. Microsoft has invested tens if not hundreds of thousands of man years in this, so who would be better qualified for this than them.RISC-V is kinda in a similar situation as ARM. If I were Microsoft, I'd be investing hard into the RISC-V platform as it still has tremendous growth left.	est31	9.400307	-5.617035	comment	4.0	14.0	1607680510	-10.549643
25384456	I do not understand why ARM is consi	I do not understand why ARM is considered lesser technology. RISC was always considered to be better then CISC in many academic circles.	rusticpenn	9.453256	-5.667834	comment	4.0	41.0	1607685261	-10.499044
25384643	The reinvention that gave x86 the ad	The reinvention that gave x86 the advantage over (workstation) RISC was OoO execution in the Pentium.It’s a bit silly to think of x86 and ARM as being so different these days. Most x86 code looks a lot like it was produced for a RISC chip and ARM has been gaining some more complex instructions and addressing modes. Academics may have felt that RISC was better than CISC for a long time but I don’t think they were predicting the world of today so much as they were incorrectly predicting the near past. If RISC were so much better then we’d have lots of workstations running on modern Alpha or PA-RISC systems. But we don’t see that.	dan-robertson	9.526494	-5.5622272	comment	4.0	13.0	1607686912	-10.5060625
25407343	ARM Cortex-A72 fetch and branch proc	ARM Cortex-A72 fetch and branch processing	zdw	9.584588	-5.2314634	story	4.0	73.0	1607874636	7.741468
25410414	I’m kind of interested about what ha	I’m kind of interested about what happens if you throw random opcodes at processors now!	andy_ppp	9.8368845	-5.6163855	comment	4.0	12.0	1607894570	-7.4708853
25422271	What's the previously-investigated d	What's the previously-investigated dataflow processor architecture that the author refers to in the bolded text?	lukehutch	9.657116	-5.2990074	comment	4.0	13.0	1607975284	-7.2294555
25447948	This bit about Multi-platform develo	This bit about Multi-platform development is most interesting to me.> Many developers are going to experience multi-platform development for the first time with the M1 Macs. This is one of the key areas where Docker shines. Docker has had support for multi-platform images for a long time, meaning that you can build and run both x86 and ARM images on Desktop today.If multi platform images work, a lot of the concerns people have about x86 versus ARM should go away.Of course, once you can do everything on ARM as well as you can on x86. Perhaps changing more of your infrastructure to ARM might make more sense.	ogre_codes	9.560462	-6.4067216	comment	4.0	38.0	1608149772	10.06162
25449561	QEMU can (slowly) emulate any archit	QEMU can (slowly) emulate any architecture on any other architecture. In this case, they're using QEMU to emulate x86-64 on ARM64. No nesting or Rosetta is needed.	wmf	9.861724	-5.4757333	comment	4.0	28.0	1608157126	7.616872
38599603	This article[1] may be contextually 	This article[1] may be contextually useful.[1] https://www.tomshardware.com/pc-components/ram/new-incredibl...	metaphor	9.838711	-5.2392573	comment	4.0	15.0	1702293814	8.141393
38633506	I thought modern speculative cpu’s h	I thought modern speculative cpu’s had way more registers than you can normally access. Why does it reserve these registers for speculative execution instead of exposing them to the program if it needs them?	mathiasgredal	9.750639	-5.7165737	comment	4.0	16.0	1702498250	-6.829079
38642211	Does anyone know a decent RISC-V dev	Does anyone know a decent RISC-V developer kit that one can buy in the Bay Area today? Or rent somewhere in the cloud? I want to start porting our C libraries to RISC-V.	ashvardanian	9.401118	-5.686183	comment	4.0	17.0	1702566835	-10.575548
38652321	If a program has no IO it can be red	If a program has no IO it can be reduced to not running a program at all (not counting side effects like the CPU getting warmer... but I don't think we'd count that as a property of the program itself).	kaoD	9.861914	-5.300809	comment	4.0	18.0	1702630489	7.685816
38669949	The limitations are very real. Denna	"The limitations are very real. Dennard scaling has been dead since the mid-2000s (that is, power use per unit area has been increasing, even though energy use per logic operation is very much dropping at leading edge nodes) which means an increasing fraction of all silicon has to be ""dark"", power-gated and only used for the rare accelerated workload.  Additionally, recent nodes have seen very little improvement in SRAM cell size which is used for register files and caches.  So perhaps we'll be seeing relatively smaller caches per core in the future, and the addition of eDRAM (either on-die or on a separate chiplet) as a new, slower L4 level to partially cope with that."	zozbot234	9.463143	-5.227543	comment	4.0	32.0	1702781796	8.068681
38697922	Show HN: Git, from scratch, in Pytho	Show HN: Git, from scratch, in Python, Spelled out	yash-sri19	8.864966	-6.388791	story	4.0	20.0	1703004403	-11.687889
38706136	"Why bring ""model parameters ... on d"	"Why bring ""model parameters ... on demand to DRAM""? Maybe it is better to move LLM processing right unto flash controller chip... (after adding bfloat16 and matrix multiplication support into controller circuitry)"	pulse7	9.701041	-5.354268	comment	4.0	12.0	1703055638	8.065953
38711826	Clearly Linus and the maintainers of	Clearly Linus and the maintainers of those architectures care enough not to break them (and those architecture maintainers have enough clout to be taken seriously).How old does a CPU need to be in order to no longer be supported?  The 32-bit x86 architecture is nearly 40 years old - should it be retired for being too old?	phone8675309	9.770762	-5.282951	comment	4.0	13.0	1703096498	-7.909176
38720249	Verilog HDL and its ancestors and de	Verilog HDL and its ancestors and descendants (2020) [pdf]	JoachimS	9.107392	-5.4971647	story	4.0	28.0	1703166033	8.5879345
38730174	Ask HN: Are there any open source du	Ask HN: Are there any open source dual-issue RISC-V processor	zhongchengyong	9.384831	-5.6734447	story	4.0	5.0	1703211817	-10.579914
38733379	Why is every ARM system such a snowf	Why is every ARM system such a snowflake that it needs special code to run?	RedShift1	9.628288	-5.240678	comment	4.0	18.0	1703246886	3.9544787
38755077	My 2015 PC started dying, requiring 	"My 2015 PC started dying, requiring BIOS resets and other weirdness like suddenly not outputting basic VGA graphics.So I finally upgraded to an AMD 7800X3D, nvidia 4070 12GB, 64GB DDR5-6400 RAM.All to play Factorio! :DApart from a strange error where Linux will crash if I have 2 DIMMs in the motherboard, it's been a great upgrade. (I'm going to submit bug reports to Fedora, but I'm assuming some combo of the MSI B650 motherboard, CPU, and memory are contributing to the error. Memtest says the memory modules are OK)Now I have a PC that can handle the modded-Factorio huge railway city block maps I like to play. Each block of space is surrounded by 4 lanes of railway, with interchanges. It's really nice to organize the refining and production into specific tasks, like ""deliver lead ore, proce"	bloopernova	9.873681	-5.218222	comment	4.0	13.0	1703439623	8.089472
38782046	I've said as much before but I find 	I've said as much before but I find the issue with alternative HDLs Vs SystemVerilog is they concentrate on fixing annoying and frustrating things but don't address the really hard issues in hardware design and can actually make them harder.For example SystemVerilog has no real typing which sucks, so a typical thing to do is to build a massively improved type system for a new HDL. However in my experience good use of verilog style guides and decent linting tools solves most of the problem. You do still get bugs caused by missed typing issues but they're usually quickly caught by simple tests. It's certainly annoying to have to deal with all of this but fundamentally if it's all made easier it's not significantly improving your development time or final design quality.Another typical improv	gchadwick	9.106264	-5.4916034	comment	4.0	21.0	1703686383	8.58187
38785408	"These languages are fun. ""Look ma, n"	"These languages are fun. ""Look ma, no verilog!"" But the underlying problem with all of these DSLs is the fact that the EDA[0] industry interoperates on verilog. Period. Worse, at some point in the design cycle, post-synthesized gate-level verilog becomes the codebase.No upstream verilog changes are allowed because it can be difficult to get a precise edit (e.g. 2-input NAND into a 2-input AOI by changing a verilog function) and you just don't have 3 weeks of runtime to go from verilog to GDSII again. Or you want to make a metal-only respin that only changes one $0.xM mask layer and requires 8 weeks of fab time instead of changing multiple metal layers including the base and needs 16 weeks and a $xM payment.Programming language design is quite rich because they used to cross-compile to C, a"	BooneJS	9.105427	-5.4763556	comment	4.0	24.0	1703704359	8.606303
38826381	I know nothing about building NASs s	I know nothing about building NASs so maybe my question has an obvious answer. But my impression is that most x64 CPUs are thoroughly beaten by Arm or RISC-V CPUs when it comes to power consumption. Is there a specific need for the x64 architecture here? I couldn't find an answer in TFA.	uxp8u61q	9.674207	-5.406679	comment	4.0	12.0	1704048299	-7.7868595
38827616	b550m with a amd5 pro from 2023 (wil	b550m with a amd5 pro from 2023 (will double check models and post on that forum)i get 9w idle and amd pro cpus have ECC support which is a requirement for me on any real computer. i disable most components on the board. it's bottom tier consumer quality.best part is when i need to burn many more watts the integrated gpu is pretty decent	ksjskskskkk	9.350514	-5.2119317	comment	4.0	19.0	1704057646	7.862274
38829329	On-die ECC is not ECC memory. On-die	On-die ECC is not ECC memory. On-die ECC only corrects certain errors (e.g. not transport errors), and is absolutely necessary with DDR5 else such errors would be intolerably frequent.True DDR5 ECC memory exists, and is not hard to find—just look for “server” RAM.	amarshall	9.476928	-5.508673	comment	4.0	12.0	1704076503	8.254755
38842737	I stopped using emoji five years ago	I stopped using emoji five years ago, because I disagree philosophically with the system. I think it's insane that displaying text should require software updates and fail to be backward compatible. Moreover, the demand for new emoji is insatiable, so the system is not practical or scalable. Unicode is not infinitely extensible.If I need to express myself without words, I stick to a few emoticons such as :-) ;-) and ¯\_(ツ)_/¯. That's all I really need.	lapcat	9.833005	-6.259061	comment	4.0	16.0	1704210182	-13.956143
38865407	I would hope that any reasonably per	I would hope that any reasonably performant implementation would be faster not only than NVMe, but also faster than CPU to RAM data transfers.The AMD EPYC-Milan in the test server supports memory reads at 150 gigabytes/sec, but thats a 32 core machine, and our test only gets 8 of those cores, so we probably can't expect more than 37 gigabytes per second of read bandwidth.The total file is ~12 gigabytes, so we should expect to be able to get the task done in 0.3 seconds or so.There are only ~400 weather stations, so all the results fit in cache.   It's unclear if it might be faster to avoid converting ascii to a float - it might be faster to add up all the ascii numbers, and figure out how to convert to a float only when you have the total.	londons_explore	9.651874	-5.261916	comment	4.0	25.0	1704364323	7.8847866
38906129	> but I still have doubts about the 	> but I still have doubts about the stability of Linux in ARM desktop space.smh, I don't get it. Maybe just bad distros. Linux ARM on desktop is absolutely, 100% perfectly fine. Hell, outside of 3-6 random utilities, Linux RISCV on desktop is similarly usable (probably less if GHC started publishing riscv bootstraps). The only issue is if I need x86_64 emulation, but it's not like I'm hurting for access to an x86_64-linux instance, anywhere.	k8svet	9.574417	-5.484109	comment	4.0	12.0	1704668412	-10.392827
38929914	> Intel's 80386 processor was the fi	> Intel's 80386 processor was the first to include memory management hardware and thus be capable of running a full UNIX operating systemThat's not correct. The 80286 had sufficient memory management hardware for full Unix. What it did not have was sufficient memory management hardware for reasonable demand paging, but it was fine for swapping systems.AT&T USG has a port of System V Release 2 for 80286, for example. There was also Xenix, which has enough licensed code in it from AT&T that I'd count it as a Unix.There was also System V Release 3 fro 80286, but I don't think that was ever released. When AT&T was developing SVR3 for their own 3B line of processors they wanted to also port it to Intel processors. They hired Interactive Systems Corporation (ISC) to do that, with the contract ca	tzs	9.635729	-5.2908344	comment	4.0	14.0	1704825056	-7.54213
38936841	I've seen religious zealots who are 	I've seen religious zealots who are less adamant than some of the RISC-V fans. Do people really self-identify with an instruction set architecture so strongly?	PhilipRoman	9.446706	-5.7008257	comment	4.0	14.0	1704867216	-10.517443
38944841	It's been built but not delivered as	It's been built but not delivered as its waiting for upgrades. One of the upgrades is the computer - which I had never thought about before. What platform does a cutting edge fighter even use??Turns out it's a custom CPU/GPU developed by L3Harris [1] running the Green hills Integrity real time OS [2]. It's unsurprising that it's all super custom hardware and software for military use, but conceptually it's like alternative universe of computing. I wonder what it's like to work with.1. https://www.l3harris.com/all-capabilities/high-performance-i...2. https://www.ghs.com/products/rtos/integrity.html	russellbeattie	9.531729	-5.1975055	comment	4.0	36.0	1704928085	-10.473682
38964625	It sounds like once you get the zen 	It sounds like once you get the zen of Mathematica, it’s a truly exceptional tool to work with.It’s a shame that the only person it seems has get the zen of Mathematica is Stephen Wolfram himself.	danpalmer	9.186857	-5.185789	comment	4.0	22.0	1705040489	6.8895526
39016974	Is there some way to reliably simula	Is there some way to reliably simulate this, e.g. using a VM? It would be nice to have IDE, build tools etc. using all available speed while running the output as if it was on slower hardware.	Timon3	9.470916	-5.2020817	comment	4.0	12.0	1705430506	7.893162
39020263	At first, by what turned out to be a	"At first, by what turned out to be a complete coincidence, the incident occurred at precisely the same time that we were performing an infrastructure upgrade to our VMs with additional RAM resourcesI can assure you that these ""coincidences"" happen all the time, and will cause you to question your very existence when you are troubleshooting them.  And if you panic while questioning your very existence, you'll invariably push a hotfix that breaks something else and then you are in a world of hurt. \Muphy's law is a cruel thing to sysadmins and developers."	blantonl	9.598802	-5.267875	comment	4.0	38.0	1705445436	7.834304
39040733	Is anyone trying to write ISA for sp	Is anyone trying to write ISA for specific programing languages, like the lisp machines of old?Would RiskV be amenable to have language-specific customizations or peripheral accelerators?	aredox	9.647244	-5.661511	comment	4.0	12.0	1705579427	-7.6602755
39059165	7950x3d w/ 128GB at stock timings (~	"7950x3d w/ 128GB at stock timings (~3200MT/s?). Showed a high base but no increase with threads, need to investigate what is happening.  1 54.7
  2 50.6
  3 49.6
  4 48.2
  5 47.9
  6 47.4
  7 47.1
  8 46.6
  9 46.5
  10 46.2
  11 46.1
  12 45.9
  13 45.8
  14 45.7
  15 45.7
  16 45.7
  17 45.7
  18 45.8
  19 45.9
  20 45.8
  21 45.8
  22 45.6
  23 45.6
  24 45.5
  25 45.5
  26 45.5
  27 45.5
  28 45.4
  29 45.4
  30 45.4
  31 45.4
  32 45.4"	andrewgross	9.424513	-5.198542	comment	4.0	13.0	1705688946	7.9029636
39060048	"Just use lima.
https://lima-vm.io/Yo"	"Just use lima.
https://lima-vm.io/You have an option to use Native or QEMU."	codetheory	9.723614	-6.0455127	comment	4.0	12.0	1705693153	-8.782981
32520147	A lot of these look more like subopt	A lot of these look more like suboptimal implementations on ARM (or incredibly good implementations on x86). There is a lot of odd performance gaps all over the tests.	rbanffy	9.726425	-5.392587	comment	4.0	35.0	1660912140	-7.7721744
32546762	Why is this better than existing sol	Why is this better than existing solutions? The feature list on the site is not convincing. (“View previous versions of your code with ease”… that is table stakes for version control, not a differentiator.)Most version control systems are both free and, frankly, not that hard to use. This would need some pretty killer features to be compelling.	togaen	8.917972	-6.3647804	comment	4.0	13.0	1661136618	8.711806
32560502	Arm is a flash in the pan.5 years fr	Arm is a flash in the pan.5 years from now it will all be RISC-V and high level bytecode. Arm's ISA victory is Pyrrhic.	sitkack	9.501977	-5.459025	comment	4.0	12.0	1661229237	-10.401608
32598140	Oh hi! I'm the creator of this.Slack	"Oh hi! I'm the creator of this.Slack doesn't deserve any hate here... also, it happened in 2018!I created this manyyyy years ago, since finding/uploading new emojis was so clunky. It's so weird to see it here now. This whole thing happened in 2018, so this isn't new. They just wanted me to change the name (fair enough!). I always meant to redo it with their new emoji API (so it didn't need a Chrome extension) and rename it; I just never got around to it.Plus, their emoji support got better (they used to reject large emojis rather than resize, didn't have newer emojis, they didn't have an API for adding emojis, etc), so a lot of the features became much less important :)The email from their lawyer had a bunch of scary legalese, but here's the friendly part from him:""Please understand that w"	gkoberger	9.774992	-6.2523527	comment	4.0	17.0	1661452927	9.132992
32605727	This absolutely vindicates Xen's app	"This absolutely vindicates Xen's approach vs Linux's. Performance gained by speculative execution sadly must be given up for safety as a default, to only be re-gained in specific cases where safety is certain.It also vindicates the naming of ""Spectre"", it most definitely keeps showing up.The article reads a bit too much like ""I told you so"", but ultimately the author is correct to say it."	dontlaugh	9.668381	-5.6163745	comment	4.0	23.0	1661511418	7.7337055
32609213	The stolen architectures cannot be l	The stolen architectures cannot be legitimately sold outside of China, due to patents held by ARM ltd.  RISC-V avoids these headaches.	pclmulqdq	9.361161	-5.6505613	comment	4.0	23.0	1661530004	-10.606253
32646259	Any word on official ECC support?(An	Any word on official ECC support?(And I don’t just mean it can use the RAM, I mean for it to gain the actual benefits of ECC)	alberth	9.459174	-5.5012584	comment	4.0	13.0	1661829252	8.237578
32730477	I can well believe that.I moderated 	I can well believe that.I moderated a talk between 4 of the original team members at Acorn that wrote RISC OS [explanation below] in the 1980s a few months ago. They're all of retirement age now.Three of them were full of anecdotes and stories and details about the company, the machines, the buildings, etc. The other could barely remember anything about it; his former colleagues were prompting him for details of what he wrote about 35Y ago, but he had little idea. Too much other work since, he said, and too long ago, and he'd forgotten.I hang out in various retrocomputing fora for fun, and it amazes me the utter nonsense that some people come up with from vaguely-remembered things they knew 30Y ago. They don't know that they've forgotten, so they free-associate stuff and just make it up, a	lproven	9.538936	-5.45964	comment	4.0	24.0	1662418706	-10.358218
32743378	I wonder if NASA has a clue that RIS	I wonder if NASA has a clue that RISC-V's ISA is open-source but SiFive's designs certainly aren't.	UltraViolence	9.3938675	-5.673547	comment	4.0	20.0	1662499424	-10.562423
32744280	RISC architecture is gonna change ev	RISC architecture is gonna change everything.	mattcaldwell	9.385457	-5.6775727	comment	4.0	17.0	1662505270	-10.593006
38111912	I have an 8bit relay cpu with 4k wor	I have an 8bit relay cpu with 4k word code memory and 256 register file with banking, this thing clocks at about 20 hz and my main problem is looking (and not finding) for interesting stuff what I can code on this thing. Even a simple snake game with 8x8 dot display is painfully slow, tetris will be unplayable. What else? Calculator? A 16bit multiplication runs longer that I can count in my head :/	artemonster	9.554163	-5.1926594	comment	4.0	19.0	1698924516	-5.882888
38115142	The technology is linux, gpios etc. 	The technology is linux, gpios etc. not which instruction set the CPU has. That is completely irrelevant and raspberry switching to USB-C is a much bigger change from a user standpoint than switching to RISC-V would be.Assuming performance and software support is comparable. Which obviously won't be the case for a long long time.But there are few things as irrelevant as the CPU instruction set. (Part from specific extensions, like AES support enabling quick crypto etc.)	tjoff	9.405428	-5.664879	comment	4.0	13.0	1698939874	-10.560306
38117432	The Raspberry Pi Foundation's office	"The Raspberry Pi Foundation's offices are in Cambridge where ARM is and there are ex Broadcom engineers (I think?) working there so just culturally I can see why ARM is a natural connection. I think this ""lets make everything RISCV"" meme (like ""lets rewrite everything in rust"") is going to get a cold evaluation as it doesn't originate there and the cold evalution will be that ARM is a big stable player that isn't going to disappear suddenly or radically change focus, that the cost of its licenses isn't material to RPi and that RPi's success is not endangered by sticking with ARM ... as things stand today.RP1 and software support are their strengths and I think they won't take risks with instruction set changes or even the vendor of their particular ARM chip.So I think this strategic invest"	t43562	9.404969	-5.5952377	comment	4.0	26.0	1698947461	-10.535953
38118827	Maybe I'm just an old curmudgeon but	"Maybe I'm just an old curmudgeon but things like ""you can use emojis as variables"" (or in this case ""the extension can be an emoji"") scream amateur hour and a lack of seriousness to me.  There's zero benefit, IMO, other than ""it's quirky"".Which is a shame because the people who created Mojo are definitely not amateurs."	lp0_on_fire	9.793697	-6.2660165	comment	4.0	12.0	1698953702	-13.978778
38119031	Interesting, I didn't realize the co	Interesting, I didn't realize the connections were so deep.  It does make sense.Do you think RPi might be hurt by not adopting RISC-V if it takes off?  If some of their competitors offer it, could one of them dethrone RPi?	freedomben	9.378923	-5.6735315	comment	4.0	19.0	1698954600	-10.578127
38133899	It’s crazy that there is no common C	It’s crazy that there is no common CI spec. Every single platform is completely different.Last time I tried Act it had some pretty severe limitations. Perhaps I should take it for another spin.	misnome	9.287922	-6.361101	comment	4.0	14.0	1699040010	6.1204605
38143201	According to a Reddit comment [1], t	"According to a Reddit comment [1], this is the same MicroBlaze RTL with a RISC-V instruction decoder in front of it. This seems crazy from a let's-make-the-best-RISCV-core perspective, but that's never been Xilinx/AMD's goal.MicroBlaze has always been a great example of a boring in-order RISC CPU in a boring niche. For an FPGA vendor, soft cores are loss leaders: they sell silicon but don't make money on their own. They are also boring technology: they are ""integration glue"", and don't belong in the portion of the FPGA that drives performance. ""Good enough"" is good enough.If AMD really is reusing MicroBlaze RTL, then they're able to keep their existing firmware (core, FPU, debug, peripherals, etc) and software (HAL, compiler, drivers). These are all highly desirable from the perspective of"	gsmecher	9.2548	-5.4599457	comment	4.0	15.0	1699118925	-10.57641
38146032	Compatibility and ubiquity wins. As 	Compatibility and ubiquity wins. As nearly always.I’m not particularly confused about  Intel’s perspective on compatibility: Even at the time, there were several examples of successful platform CPU transitions across architectural “full breaks”.   Apple going from 68k to PowerPC is the closest analogy for Intel, and if the Itanium performance and software (compiler) story had played out as Intel envisioned they likely would have been fine.But as for ubiquity, I’m befuddled. As far as I’ve been able to determine—having lived through it and followed many retrospective threads like this looking for new evidence—Intel had no plans on any useful timeline to turn Itanium into a (non-workstation) desktop or laptop chip. Did they really think the market would stay bifurcated between “big iron” arc	twoodfin	9.482383	-5.3103185	comment	4.0	18.0	1699138251	-7.681865
38146376	In my limited understanding two fact	"In my limited understanding two factors contributed significantly to Alpha failing. Business-wise, DEC and Ken Olesen were stuck in an old minicomputer mentality and wasn't sufficiently able or willing to ""let it loose"" and let it take over the market with DEC as the CPU supplier.  Technically, Alpha development was taking longer and longer and the schedule slips got worse and worse."	FullyFunctional	9.584833	-5.371541	comment	4.0	14.0	1699140915	-8.034781
38148073	I really like the idea of VLIW CPUs,	I really like the idea of VLIW CPUs, it's a shame none of them have worked out. Does anyone know of any other cool more modern CPU designs? Stuff like RISCV is fine but doesn't feel particularly innovative	IAmLiterallyAB	9.423399	-5.4178424	comment	4.0	13.0	1699157237	-10.485071
38164628	This is missing boards with Lattice 	This is missing boards with Lattice ECP5 FPGAs, which are a nice alternative to the iCE40 FPGAs and are also supported by the open source tools, but also offer more logic, memory, and IO.I only know of the evaluation board from Lattice [0] and the OrangeCrab board [1], but there are probably more.[0]: https://www.latticesemi.com/products/developmentboardsandkit...[1]: https://orangecrab-fpga.github.io/orangecrab-hardware/	HansHamster	9.107727	-5.315575	comment	4.0	13.0	1699287748	8.351365
38164976	Wasn’t RISC-V developed in the US? A	Wasn’t RISC-V developed in the US? And the first company to produce chips with this ISA, SiFive is US based too.Why would it make sense to ban it in the US? They literally invented it.	deutschepost	9.365099	-5.6585817	comment	4.0	37.0	1699289262	-10.578557
38202174	Tricks like these are going to becom	Tricks like these are going to become less common with execute-only mapping of .text slowly proliferating through the industry (iOS, OpenBSD).Though i386 is unlikely to ever become execute-only.	irdc	9.818174	-5.4479055	comment	4.0	27.0	1699515431	5.1790414
38216116	How can I implement a simple asynchr	How can I implement a simple asynchronous DRAM controller? (2018)	peter_d_sherman	9.76032	-5.395752	story	4.0	34.0	1699601118	8.043625
38219818	This is a harbinger of RISC-V's rise	This is a harbinger of RISC-V's rise. ARM can't compete in power usage with RV's simple and clean ISA, just like x86 can't compete with ARM's power optimised design. Ultimately power usage decides everything.Eventually there will advanced RV implementations that outdo everything x64 and ARM can offer because of the RV design advantage and because there will be multiple players completing to capture market share. Intel no longer has a process advantage, and is unlikely to ever regain it.	dkjaudyeqooe	9.54518	-5.4708834	comment	4.0	26.0	1699629156	-8.977122
38220458	Having bought a few hundred thousand	Having bought a few hundred thousand Nordic chips I can assure you they don’t care about security in a meaningful sense.All Nordic chips are susceptible to bootloader attacks which make them a poor choice for storing key material. This can be mitigated in the design phase by adding an external security chip like a ATECC608B but if you were to tear down a device and see a board present without this module it certainly will have other vulnerabilities too.Having worked extensively with both Nordic and Chinese chips, what makes Nordic win is the ease of development - they are by far the best in market when it comes to programmability. Hands down.The security problems have been known since the NRF51 and despite that those vulnerabilities were carried over into the NRF52 because the cost of vali	paulgerhardt	9.392508	-5.6413784	comment	4.0	14.0	1699631996	-10.546048
38230161	RISC-V with Linux 6.7 Gains Optimize	RISC-V with Linux 6.7 Gains Optimized TLB Flushing, Software Shadow Call Stacks	rbanffy	9.399956	-5.6900477	story	4.0	154.0	1699709639	-10.566782
38229102	RISC-V Vector benchmark results	RISC-V Vector benchmark results	camel-cdr	9.433726	-5.7141004	story	4.0	24.0	1699698881	-10.511033
38250634	"Hmm. Ctrl-F ""ECC"": 0 results found.T"	"Hmm. Ctrl-F ""ECC"": 0 results found.This could be a great product but the chance of even one bit randomly flipping is far too high."	yardie	9.61998	-5.575451	comment	4.0	32.0	1699886613	8.222161
38261110	> The Linux kernel has been accident	> The Linux kernel has been accidentally hardcoded to a maximum of 8 cores for the past 15 years and nobody noticedI can understand having a bug like that, but unnoticed for 15 years? more than 8 cores was rare 15 years ago, and as a percentage of chips sold is still rare, but presumably people with threadrippers ran benchmarks? optimized? etc? just doesn't seem possible	fsckboy	9.611351	-5.3686924	comment	4.0	22.0	1699954947	7.935524
38268672	Would be possible to describe a mode	Would be possible to describe a modern CPU in something like TLA+ to find all non-electrical problems like these?	Flow	9.528131	-5.1930904	comment	4.0	13.0	1699991609	7.76249
38269803	Intel is a known partner of the NSA.	Intel is a known partner of the NSA. If Intel was intentionally creating backdoors at the behest of the NSA, how would they look different from this vulnerability and the many other discovered vulnerabilities before it?	ZoomerCretin	9.536876	-5.224304	comment	4.0	13.0	1699996168	7.7847486
38270349	As described it's just a CPU crash e	"As described it's just a CPU crash exploit that requires local binary execution.  Getting to a vulnerability would require understanding exactly how the corrupted microcode state works, and that seems extremely difficult outside of Intel.So as described, this isn't a ""valuable"" bug."	ajross	9.705154	-5.418868	comment	4.0	31.0	1699998826	7.8531895
38271158	I'm curious what part of this scheme	"I'm curious what part of this scheme involves ""not ending up in jail""?  Needless to say you can't do this without identifying yourself.  To make this an exploitable DoS attack you need to be able to run arbitrary binaries on a few thousand cloud hosts that you didn't lease yourself."	ajross	9.733562	-6.4114904	comment	4.0	18.0	1700003540	10.38931
38269930	These things seem to go in pairs, as	These things seem to go in pairs, as there is currently a new Intel CVE on the frontpage too. Someone in the Intel thread mentioned that the underlying issue may be x86 having more and more stuff piled on top of it. That's been great for compatibility, but I'm wondering if it might be worth Intel/AMD making an x86 lite that strips everything but the necessary instructions.	I_Am_Nous	9.4114685	-5.240404	comment	4.0	18.0	1699996678	7.8070292
38348851	Obviously this is just some people t	Obviously this is just some people talking nonsense on an obscure news group, but the premise is wrong: 808x didn't need to be faster than an 8-bit CPU. The reason someone bought an 8088 computer was to run 8086 software. That software wouldn't run on an 8-bit machine. E.g. it was close to impossible to run a C compiler on an 8-bit system. The talk of bus width and 16-bit multiply is irrelevant. The feature people wanted is the ability to address more than 64K memory.	dboreham	9.640267	-5.3403106	comment	4.0	17.0	1700490907	-7.5152116
38356656	Surprised that armv7 will be getting	Surprised that armv7 will be getting 32bit support but not x86. I know arm is huge, but it's platform support is also fragmented compared to an x86 box. Can anyone share some more info on this?Also surprised they are cutting Power. That is one of the 4 platforms RHEL supports.	csdreamer7	9.718721	-5.2801924	comment	4.0	20.0	1700523818	-7.780557
38404996	That is just infinitely worse than c	That is just infinitely worse than calling write() on a file handle like a regular application.The hypervisor + OS + application model is stupid. The hypervisor and  OS are duplicative. If you can rewrite the application (as is needed for a unikernel design) there is no reason to use a hypervisor in your stack at all. You should just be running a OS directly on the bare metal with no hypervisor at all.The only reason to prefer a unikernel is because you wrongly believe that hypervisors are a security boundary. Everything else about them is strictly inferior to a standard application on OS model.	Veserv	9.935305	-6.199706	comment	4.0	14.0	1700840237	-12.343798
38407581	Not at all. I can turn on your airga	"Not at all. I can turn on your airgapped computer from the street without getting into your building...Intel Management Engine - https://en.wikipedia.org/wiki/Intel_Management_Engine""Several weaknesses have been found in the ME. On May 1, 2017, Intel confirmed a Remote Elevation of Privilege bug (SA-00075) in its Management Technology.[36] Every Intel platform with provisioned Intel Standard Manageability, Active Management Technology, or Small Business Technology, from Nehalem in 2008 to Kaby Lake in 2017 has a remotely exploitable security hole in the ME""https://www.intel.com/content/www/us/en/developer/tools/in-b..."	belter	9.491301	-5.2140574	comment	4.0	27.0	1700855932	7.739815
38426761	> this design makes the common case 	"> this design makes the common case much simpler at the expense of making the rare case harderIn the age of emoji (and uhhhh, everyone who doesn't use English as their main language), I don't think your ""rare case"" is really that rare."	bschwindHN	9.818859	-6.2786074	comment	4.0	14.0	1701045574	-13.956261
38436845	What can a hobbyist do with an FPGA?	What can a hobbyist do with an FPGA? Ive mostly only heard about fpga's being used at HFT firms somehow.	eachro	9.075963	-5.361704	comment	4.0	12.0	1701112671	8.442099
38437401	I’m getting the sense that there was	I’m getting the sense that there was an FPGA “ground floor” at some point in the last 5-7 years, and trying to buy one now is pretty much a ripoff.	xattt	9.094814	-5.3429327	comment	4.0	13.0	1701115272	8.324871
38438405	Before the MS acquisition, Github di	Before the MS acquisition, Github didn't even have emoji reactions on comments in issue threads, so people just spammed +1s if they had the same issue. It was terrible. (You can still see evidence of this on older repos.) They also didn't have like 5 billion other features that we now take for granted.EDIT: Sorry, this is incorrect. GH did ship them prior to the MS acquisition. I do however remember them taking an EXTREMELY long time to ship emoji reactions, which struck me as a fairly trivial feature. I stand by the point that GH ships features faster post-acquisition, though.	johnfn	9.804705	-6.2535753	comment	4.0	18.0	1701119673	-13.962331
38438911	I can see how an FGPA can perfectly 	I can see how an FGPA can perfectly emulate the logic of an older chip--but the actual physical layout is different, right?  Are there any timing issues that result from this?	jxdxbx	9.137238	-5.191754	comment	4.0	13.0	1701121876	7.891983
38468013	I’d love to get my hands on one of t	I’d love to get my hands on one of these. They’re MIPS machines that are on-par with the Intel core i3 14100. Loongson is also involved with Deepin Linux, so they’re attempting to build out a Chinese-native technology stack. While I generally don’t care for things under control of the CCP due to surveillance concerns, I do love competition for bringing about new tech innovation. We’re now getting back to the 80s/90s as far as diversity with AMD64, MIPS, RISC-V, ARM, OpenPOWER, and then semi-custom variants of RISC-V and ARM. It’s fun.	BirAdam	9.446489	-5.46291	comment	4.0	23.0	1701307697	-10.553459
38478490	How to get GenZ developers to stop u	How to get GenZ developers to stop using emojis in commit messages and PR titles	ajdude	9.770804	-6.283989	story	4.0	13.0	1701375374	-13.964253
38511956	Please, do not build more JS framewo	Please, do not build more JS frameworks (see-no-evil emoji).	stanislavb	9.8276825	-6.263958	comment	4.0	16.0	1701646792	12.97248
14710282	Emoji are an advance over emoticons 	Emoji are an advance over emoticons because they have a standardized description. For example, if you encounter  you can find that it is U+1F625 DISAPPOINTED BUT RELIEVED FACE, allowing you to know that the sender intended to convey a combination of disappointment and relief.	scatters	9.794395	-6.267613	comment	4.0	19.0	1499348330	-13.976561
14735325	For my own amusement, when ever I ge	For my own amusement, when ever I get a new OS build on my machine, I'd open up a task manager and watch CPU load just by wiggling the mouse a lot or maybe simply pressing page up and down. I'm pretty sure it's always pretty easy to generate 25% CPU doing very little. Another thing would be just opening a local file from within a running application and wondering why multiple seconds and hence billions of CPU cycles seems to be consumed what one expects should be doing a fairly menial task. (I am pretty sure in DOS 3.3 with Norton Commander it was quicker )	martyvis	9.817971	-5.27699	comment	4.0	15.0	1499690141	7.8147607
14760895	Show HN: Turn JavaScript code into E	Show HN: Turn JavaScript code into Emoji using Webpack	mechazawa	9.795455	-6.258695	story	4.0	26.0	1499951186	13.040599
14762210	AMD needs to come out with a few AVX	AMD needs to come out with a few AVX-1024 instructions for vector ops. Essentially make one core into a GPU that doesn't suck at branching.	crb002	9.341208	-5.258093	comment	4.0	14.0	1499960463	7.970847
14763313	I have a Ryzen 5 1600 with a pair of	I have a Ryzen 5 1600 with a pair of Crucial ECC UDIM. It works perfectly on the ASUS Prime B350M-A/CSM uATX board. Stress tested. Errors are logged and halt behavior is confirmed (ubuntu 17.04).	fcanesin	9.3837385	-5.4323864	comment	4.0	21.0	1499967302	8.206631
14773586	Some applications need 70+ cores. AM	Some applications need 70+ cores. AMD doesn't have that.	frozenport	9.538376	-5.281758	comment	4.0	18.0	1500069924	7.941212
14803235	An FPGA-friendly 32-bit RISC-V CPU i	An FPGA-friendly 32-bit RISC-V CPU implementation	Dolu	9.392795	-5.660534	story	4.0	102.0	1500459595	-10.563039
14803172	There seems to be no hardware implem	There seems to be no hardware implementation right now, not even on FPGA (last message about it dating from 2014). I also couldn't find a GCC or LLVM backend for its architecture and no software simulator with or without cycle counters.As much as I'd love to see something new in the general-purpose CPU arena (was Itanic the last attempt?) I will remain skeptical of such claims until they can be demonstrated by actual benchmarks.	rbanffy	9.594276	-5.4104967	comment	4.0	13.0	1500458835	7.9891505
14866701	"""Total dog"" for being 7-13% slower-p"	"""Total dog"" for being 7-13% slower-per-thread but offering twice as many cores? This is ridiculous. I am typing this on a i5 Mac with 2C/4T and the difference in using common office applications (browser, Excel, etc) vs 4C/8T i7 is _insane_. Just using newegg.com is borderline impossible with just a few tabs open unless you have 4 non-SMT threads.Desktop computing is actually pretty good at utilizing many cores these days: the booting process, starting non-trivial applications, using full-disk encryption, running multiple tabs in a browser (or just having a browser open with a few tabs + something else), in all of these conditions 4c/4t CPU will provide tangible, perceivable difference. 2c/4t CPUs are obsolete and I wouldn't recommend one even for an entry-level computer."	old-gregg	9.511823	-5.184894	comment	4.0	14.0	1501172382	7.8994627
14873970	Observation: the length of the censo	"Observation: the length of the censored ""XXX hardware bug"" text on the slides matches neither Intel, AMD nor Transmeta. Unlikely to be VIA too.Either it's deception or perhaps some obscure low-end embedded vendor.edit: for the curious, it's ""(redacted) hardware bugs"" :)"	qb45	9.39212	-5.2297416	comment	4.0	12.0	1501247483	7.884841
14888462	Are you sure latency stayed around 1	Are you sure latency stayed around 100ns?http://pics.crucial.com/wcsstore/CrucialSAS/images/campaigns...	olegkikin	9.78561	-5.215627	comment	4.0	13.0	1501457454	7.9141297
14934293	So he's got a segfault every couple 	"So he's got a segfault every couple of minutes, wow... I've been running the same test for over 4 hours now on my Ryzen 1700 (and I've had several uneventful 30-40 minute runs before). To date, I only got one ""internal compiler error: Illegal instruction"" but no segfaults.Whatever it is, it doesn't affect every chip the same way."	old-gregg	9.468961	-5.367839	comment	4.0	12.0	1501908898	7.856168
14948863	magit. Worth installing emacs just f	magit. Worth installing emacs just for that.	Grue3	8.8883505	-6.421258	comment	4.0	12.0	1502124130	-11.400532
14973684	Progress relies strongly on people w	"Progress relies strongly on people working together toward a common goal. If being ""unreasonable"" works for Linux, that's fine. But before others go trying to blindly emulate Linus, I'd suggest attempting to be reasonable first."	kibwen	9.374153	-5.845238	comment	4.0	41.0	1502313217	4.230577
14986588	What makes PassMark a representative	"What makes PassMark a representative CPU benchmark? These one-company CPU benchmarks tend to be quite problematic (cf. GeekBench).SPEC just came out with CPU2017. In SPEC there's at least a bunch of peer review, transparency and attention from academics.Here are Anandtech's AMD vs Intel CPU2006 numbers:
http://www.anandtech.com/show/11544/intel-skylake-ep-vs-amd-... http://www.anandtech.com/show/11544/intel-skylake-ep-vs-amd-..."	fulafel	9.410119	-5.186379	comment	4.0	12.0	1502425904	7.8401365
14987735	In case someone from AMD is reading 	In case someone from AMD is reading this: guys, you need to fix stability issues on Linux, or your Epyc is DOA. People are having some serious lock-up trouble with Ryzen, even with the latest AGESA updates and kernels. This is the only issue preventing me from recommending to purchase threadripper workstations at work. We do need that pcie bandwidth for GPU, but we absolutely can't tolerate instability.	0xbear	9.343056	-5.213053	comment	4.0	16.0	1502440974	7.906364
14997356	AMD Threadripper 1950X review	AMD Threadripper 1950X review	jjuhl	9.320031	-5.20398	story	4.0	69.0	1502534033	7.9359903
15035408	Reverse Engineering x86 Processor Mi	Reverse Engineering x86 Processor Microcode [pdf]	gcp	9.6679	-5.4829288	story	4.0	73.0	1502966198	-7.434221
15037823	What are the benefits of reviewers o	What are the benefits of reviewers over automated testing?My workflow (which I believe is pretty standard) is:* Write code* Verify that tests pass locally (including stylistic tests, linting)* Submit pull request* Pull request triggers build and tests on Travis* If all tests pass on Travis, code is stylistically and functionally correct* Merge pull requestHow can human reviewers improve this workflow?	fergie	9.899549	-6.326996	comment	4.0	13.0	1502984911	-5.1415763
15066062	Any experts here care to tell how do	Any experts here care to tell how does one check for RAM quality? Does CPU-Z do it? (Writing from work, don't have admin perms to use)Not talking about this particular case, but maybe case of a RAM not working in general.	jackblack8989	9.882863	-5.3744674	comment	4.0	15.0	1503336241	8.287517
15067311	The actual Android 8.0 website linke	The actual Android 8.0 website linked in the article (https://www.android.com/versions/oreo-8-0/) showcases the features much better than the blog post. It’s actually a really nicely done page, even on mobile.EDIT: sorry i inadvertently removed my comment on emojis. I was lamenting the fact that the emojis look so different from iOS, which could lead to misunderstandings. And that I find it crazy that every vendor has to make them so drastically different just to prevent infringing on someones copyright.	jmiserez	9.807497	-6.2527647	comment	4.0	13.0	1503345269	-13.966312
15094198	Intel 4004 programming manual (1973)	Intel 4004 programming manual (1973) [pdf]	noncoml	9.507907	-5.2725196	story	4.0	73.0	1503609983	7.654364
15118116	ME itself was added for people with 	ME itself was added for people with big money.I'm not an engineer experienced in this kind of work, but I fail to see how a company whose core business is manufacturing chips would develop an entire computer (comprising an x86 CPU, its own RAM, MINIX OS, and access to all kinds of I/O) hidden inside each one of their chips and made largely inaccessible to regular users and developers. Unless they are paid very well to do so.In retrospect they were kind of naive not to make it much harder to enable this HAP mode, considering the lengths they went to make ME tamper proof. They left the flag wide open and even commented it in an XML file.	etatoby	9.539863	-5.2042255	comment	4.0	15.0	1503939578	7.754876
15119170	Too bad that these AMD CPU's also co	Too bad that these AMD CPU's also contain convenient capabilities through PSP to add a hardware backdoor to a computer which one cannot detect from the OS.@Phoronix: RISC-V-based and other open processors and computers are much more interesting. Could you test and report about compatbility of open and consumer-friendly computers with linux?	madez	9.4235	-5.2524686	comment	4.0	15.0	1503947133	7.902851
15131321	> Even early SDRAM controllers had s	"> Even early SDRAM controllers had similar tunable settings for clock delays and such,Define ""early"". F00F-era Pentium, 486, 8086...?> upon POST, the BIOS would set all the settings to nominal values, then nudge each one in one direction while reading/writing pathological data until errors occurred; then nudge them in the other direction until errors occurred, and finally settle on the average of the two extremes.Is this the seemingly-pointless ""memory test"" all computers do?I always thought that just zeroed RAM. TIL it's doing similar things to modem line training. Wow.Now I remember - I have an old 400MHz Celeron-based system I used years ago with an AMI BIOS that would occasionally recommend a different ""RAS-to-CAS delay"" on startup. I'd go and change it and reboot, and then a little wh"	exikyut	9.800021	-5.362787	comment	4.0	16.0	1504093793	8.025483
15216763	What's the bet the really secret ins	"What's the bet the really secret instructions are hidden behind special conditional decode logic? I.e. the cpu wont even ask for the next byte if some register value is not set, possibly a secret register that first needs to be set via some other hidden instruction. Make that a sequence of 3 hidden instructions combined with arbitrary register and immediate values, and you won't get close to identifying them in a billion years.I mean if you worked for Intel and your manager said ""make me a really secret instruction"" would your best response be ""lets just not document it and hopes noone notices""?What I would give to read the full microcode of the latest Intel processor. I am guessing it is stored in a vault with the real nuclear codes, Alien cadavers and the Holy Grail."	smegel	9.602141	-5.299818	comment	4.0	15.0	1505116056	3.9840515
15226426	Sometimes I wonder, what would happe	"Sometimes I wonder, what would happen if one of these invisible heroes dies ? What would happen to Linux if Linus Torvalds dies? What would happen to curl is Daniel Stenberg dies?
For curl for instance, only Daniel can sign a release. So what happens if he is not able to do so anymore? This is just a small example, but you get the idea. There is so much power under under these men that it sometimes gets very scary."	Perados	9.390851	-5.863934	comment	4.0	14.0	1505215956	-8.226286
15257692	NASA does things this way but SpaceX	NASA does things this way but SpaceX explicitly does not. Rather than using 1 space hardened part, SpaceX usually uses 3 non-space hardened parts (processor, memory, bus, etc) that all do exactly the same calculations simultaneously and then compare every single answer and ignore it when one out of 3 parts disagree. This allows them to be both cheaper and much less power hungry because they operate at least 2 process nodes smaller than NASA hardware. I've seen data that says that while each individual processor will experience space related errors quite often, the whole 3 part voting system is at least as accurate as the way NASA does it.	pilom	9.701063	-5.355576	comment	4.0	12.0	1505487744	-6.6565866
15266043	Unicore: A new Unikernel project	Unicore: A new Unikernel project	ingve	9.918961	-6.2444453	story	4.0	107.0	1505588007	-12.416859
15288509	> I'm still a little unclear on RISC	> I'm still a little unclear on RISC-V's goalsMaybe a bit cynic, but given their churn in the lower level specifications (supervisor mode and up) my guess is:Main goal: write lots of theses and papers and obtain degrees.Secondary goal: have an unencumbered ISA to help with the main goal.Everything else depends on those who adopt the ISA. If some org is willing to spend the multi-million $$$ necessary to design a high-performance desktop class CPU (and more to make it a reality), it will happen.Those low-end chips are easier to do, and an easier market to serve: The ISA's license fees are a bigger chunk of the chip's price, so RISC-V dropping that to 0 helps more. You also don't need to build a high-end chip that blasts everything else out of the water before your newcomer is even considere	pgeorgi	9.434035	-5.632807	comment	4.0	25.0	1505853012	8.509354
15288779	I'm not surprised that software engi	I'm not surprised that software engineers find these concepts difficult to understand at first -- it's a very different way of thinking, and everyone has to start somewhere. But I do find it kind of odd that someone would jump straight into trying to use an HDL without already knowing what the underlying logic looks like. (My CS degree program included a bit of Verilog programming, but it only showed up after about half a semester of drawing gate diagrams, Karnaugh maps and state machines.)Does this confusion typically happen to engineers who are trying to teach themselves hardware design, or is it just an indication of a terribly-designed curriculum?	teraflop	9.080362	-5.4977803	comment	4.0	12.0	1505854982	8.626059
15289243	IMO, the first step for people inter	IMO, the first step for people interested in promoting RISC V should be to get it into the hands of the universities' undergrads. Berkeley's EECS 151 lab final semester project was to implement a RISC V CPU at 50 MHz on a FPGA.If EE/CS departments of colleges adopt RISC V hardware for teaching their students, providing cheap microcontrollers and boards to students at the start of their semester classes, those precocious little buggers are going to build Doom clones and help port their favorite flavor of linux onto them. When you've got a generation of top talent tinkering with an ISA that doesn't suck like x86, you're going to see adoption in actual industry.	Joking_Phantom	9.418853	-5.6288815	comment	4.0	24.0	1505858931	-10.543144
15290243	Slightly off topic, but are there mo	Slightly off topic, but are there more-or-less boilerplate RISC-V verilog/VHDL designs available that can deploy to ~$100ish FPGA boards? I'd be super interested in messing with that if so. I took digital design and HDL related courses in university but haven't really had an opportunity to do anything productive with that yet.	spilk	9.267448	-5.4569426	comment	4.0	12.0	1505873536	-10.555572
15299333	> In a subsystem change that will be	> In a subsystem change that will be detailed in the talk of Intel ME version 11+, a vulnerability was found.Okay, so this effects 11.x, but I wanted to clarify that there seem to always have been circumventions floating around out there.I stumbled on https://www.reddit.com/r/onions/comments/5i6qa3/can_the_nsaf... (mirror: http://archive.is/T8yVz) some months ago. It reads a little like a skiddie (a well-connected one) strutting a bit, and I think some of this person's views on ME as a viable attack vector are slightly careless and un-thought-through, but whoever this person is, they seem to be very confident about some of the things they said, particularly the following quotes (to be completely clear, I've removed first-person references):> [This person] know[s] that at least up to firmwa	exikyut	9.445387	-5.234516	comment	4.0	25.0	1505950706	7.7768555
15305724	There are way too many emoji, but Un	There are way too many emoji, but Unicode can handle them.  We need to keep them out of things that have to be typed correctly - domain names, URLs, usernames, passwords, and variable names. Other than that, they're harmless, except that everything now has to handle the astral planes. Most of the emoji are 3-byte Unicode characters.How are IOS 11 animated emoji encoded for transmission?	Animats	9.899291	-6.2653537	comment	4.0	14.0	1506015359	-13.957904
15312550	Wow, I had no idea this was happenin	Wow, I had no idea this was happening! You can still back it and apparently get Magit stickers.Magit is so good that it's actually a reason to use Emacs in the first place.	tptacek	8.908144	-6.4052405	comment	4.0	25.0	1506091040	-11.352501
15312711	Any recommendation for a good tutori	Any recommendation for a good tutorial or introduction article about magiti use sourcetree, and i like it a lot, but with all the positive talk about magit, i need to try iti now only use emacs for org-mode and this mode is also by far the best personal todo list i used (i.e. if you dont need any social, sharing features found in web todos, org-mode is the best there is) .. so i know emacs can be very good	systems	8.8143635	-6.423001	comment	4.0	12.0	1506092092	-11.484971
15325327	I wont use software on sourceforge. 	I wont use software on sourceforge. period.	alexnewman	8.745909	-5.981535	comment	4.0	17.0	1506270391	-11.681963
15330389	Is there any research or even anecdo	Is there any research or even anecdote from people running lots of machines that indicates how frequently corruption occurs?Suppose I'm doing scientific computing, is ECC solving a super rare problem, or something that might happen weekly or monthly?	RubberSoul	9.703212	-5.5694294	comment	4.0	16.0	1506347123	8.219193
15343500	Anything is possible, but it sure lo	Anything is possible, but it sure looks like everybody is working on microcontrollers and nobody is even trying to ship  real cores.	wmf	9.468686	-5.192906	comment	4.0	15.0	1506467937	7.8290625
15377167	Not really. Now instead of having to	Not really. Now instead of having to break the application, then break the kernel it's running under and then attack the VM host, you only have to attack the app and can then go directly at the VM host.Unikernels just remove a whole security layer. May as well run the app as a user process on the host and forget the VM.	zlynx	9.917146	-6.2040358	comment	4.0	14.0	1506853304	-12.375653
15389768	The biggest problem with reconfigura	The biggest problem with reconfigurable computing is it's either an afterthought, tools are too narrow/proprietary or an extra add-in card.Add a million LUTs and several thousand special-purpose blocks (ALUs, CAM, SRAM, DSPs, etc.) on CPU die that can be reconfigured within a few 10k cycles (ie process context), and then future AI-enabled optimizing compilers could incrementally profile and accelerate applications with reconfigurable resources in new, creative and interesting ways. IRAM and similar zillion core approaches are another approach to solve traditional performance locality bottlenecks: distribute processing, interconnect and RAM amongst each other. It makes the most sense to co-evolve such a radical undertaking gradually with compiler vendors and large customers so that support 	burntrelish1273	9.3999195	-5.2495522	comment	4.0	25.0	1506999223	7.91397
15399054	Ask HN: Do you use database version 	Ask HN: Do you use database version control?	DorukU	8.97935	-6.366203	story	4.0	3.0	1507106298	9.669052
15401379	I'm quite excited about Risc-V as a 	I'm quite excited about Risc-V as a platform - particularly security and trust-wise. It's great to see that we'll be getting competitive CPUs soon.Open hardware, implementing an open architecture, which can run open source software with reproducible builds. A huge win when we're facing pervasive surveillance  hard-wired into current commodity systems.	angrygoat	9.388709	-5.632806	comment	4.0	29.0	1507132254	-10.561779
15403387	Another Flip in the Wall of Rowhamme	Another Flip in the Wall of Rowhammer Defenses	et1337	9.633837	-5.6621404	story	4.0	76.0	1507143739	-13.888166
15409244	But when you need ECC, you really ne	But when you need ECC, you really need it. My FreeNAS server has like 32GB or ECC memory because it runs ZFS, which basically doesn't work unless you have ECC memory. However, my desktop computer or my laptop don't need it. When you need ECC, use it, but if you don't need it, then no biggie.	jmh530	9.476497	-5.500458	comment	4.0	21.0	1507212345	8.182806
15408786	Obviously ECC requires more resource	Obviously ECC requires more resources and is therefore intrinsically more expensive. That does not preclude it from being used for market segmentation to get higher margins.Same reason ECC is not supported on consumer processors from Intel. Here it would be almost trivial to add, but they don't.Simple business strategy.	skummetmaelk	9.457699	-5.5082726	comment	4.0	13.0	1507208614	8.378196
15415978	Bypassing Intel Boot Guard	Bypassing Intel Boot Guard	ryanlol	9.721188	-5.1892653	story	4.0	76.0	1507290236	7.778406
15432267	On a regular basis Mill pops up here	On a regular basis Mill pops up here and generates some interest, I just can’t understand why.They haven’t produced an FPGA proof of concept, after claiming they would have one ready last year.  They now say they need investors to finish it, yet they previously claimed to not even be looking for funding.They claim to have angel investors, but they are all secret ones. Of course it’s an investors right to stay private, but the reason you often see investors and companies shouting from roof tops is because the funding event itself can help a company. Publicizing it generates PR, gives the company credibility in dealing with other companies, and is a signal that can generate demand for more investors.Even putting that aside, the biggest issue is they haven’t made a compelling case for how the	WhitneyLand	9.0912895	-5.350358	comment	4.0	13.0	1507537548	8.399627
15457752	Why does every Swift article use emo	Why does every Swift article use emojis in their code samples?	tzahola	9.804073	-6.274312	comment	4.0	12.0	1507814738	-13.940407
15478077	But...why?  X86 to riscv could at le	But...why?  X86 to riscv could at least be claimed to be useful (run legacy soft). There is ZERO riscv software at all (and thus zero closed source riscv software).	dmitrygr	9.425637	-5.662419	comment	4.0	19.0	1508088647	-10.55744
15552581	Simulating RISC-V Clusters with FPGA	Simulating RISC-V Clusters with FPGAs on AWS	fabuzaid	9.399636	-5.680042	story	4.0	86.0	1508955199	-10.579646
15580230	So far AMD has ignored fixing this p	"So far AMD has ignored fixing this pretty much because ""only privacy nerds"" care about it. Well, some of those privacy and security nerds happen to work for companies like Google and even have influence over those companies' hardware purchases.So now AMD has just lost a big chuck of potential Google business, and who knows what kind of other potential contracts, because it continues to ignore this issue instead of actually showing some leadership on it.Maybe it's time for AMD to actually differentiate from Intel on this issue?"	mtgx	9.265459	-5.2046013	comment	4.0	20.0	1509297783	7.8070736
15610549	> Linus has made it incredibly damn 	"> Linus has made it incredibly damn clear what ""no user space regressions ever"" meanout of curiosity, how does a policy like this translate to microkernel OSes (e.g. Redox) where most everything runs in userspace?"	leeoniya	9.80584	-5.7210994	comment	4.0	15.0	1509632033	-8.339283
15610995	> If someone prefers softer conductT	"> If someone prefers softer conductThe big issue I see people reacting to is profanity. You can be as hard on someone, given the nature of the infraction, without using profane language or denigrating someone.If they don't comply, threaten exactly what Linus threatened, no more commits will be accepted.While I don't disagree with Linus' right to speak as he does. He can be just as effective without the type of language he uses.Some people don't care about ""foul language"" some others clearly do..."	tertius	9.252344	-5.894385	comment	4.0	20.0	1509634897	4.18628
15616167	Ask HN: Legacy code – tests first or	Ask HN: Legacy code – tests first or setup CI?	ZanrielJames	9.268144	-6.433701	story	4.0	5.0	1509674584	6.1530485
15615634	The battle within Unicode over a fro	The battle within Unicode over a frowning poo emoji	jenny8lee	9.865862	-6.25269	story	4.0	20.0	1509668462	-13.957057
15618688	Why not hardcode this for microG onl	Why not hardcode this for microG only, and not any system app ?	Aissen	9.633081	-5.3866534	comment	4.0	14.0	1509712932	-6.8680263
15627738	It’s a really hard bug to run into -	It’s a really hard bug to run into - you have to get the bad Unicode I-that-isn’t-an-I in your autocorrect dictionary somehow (for example by having someone else text it to you multiple times), then this character shows up as an autocorrect suggestion.  If you’re in messages, it still shows the fake I as an emoji, so you dont see the problem sometimes.	djrogers	9.862395	-6.2370353	comment	4.0	14.0	1509845765	-13.931487
15630346	The original Unicode emoji made sens	The original Unicode emoji made sense as a compatibility measure with Japanese encodings, but I thoroughly disagree with the expansion of Unicode Emoji.The idea that the default emoji represent white people is ridiculous, since the codepoints are meant to translate directly with Japanese computer systems. In the original NTT DoCoMo set, they didn't even have facial skin (probably because of device resolution and colour limitations), just features like eyes and mouths. Maybe the Unicode consortium made a mistake by specifying them as bright yellow, which people now associate strongly with the Simpsons, where white people are represented as bright saturated yellow.In my understanding, nobody in the standardization process even considered that Emoji had a race. If people project one race or a	microcolonel	9.791064	-6.2662153	comment	4.0	28.0	1509902157	-13.954547
15630584	I feel you should have more empathy 	I feel you should have more empathy for people that do not look like you.For some people, race, fighting for for recognition, let alone equality, is a daily battle. You may live and work far from this conflict, but it exists, and in some part the diversity modifiers for emoji provide folks with empowerment. Don't take that away over limitations in the spec.There are billions now who own smart phones, and want that funny Japanese Telco encoding standard to reflect their world too.This is not a technical or standards problem, and the fitzpatrick modifiers do not decrease functionality of unicode.I feel my point is to chill, and consider how functionality outside your perceived value might bring others joy.	encryptThrow32	9.813396	-6.2656345	comment	4.0	20.0	1509904424	-13.971444
15636184	ARM basically made CPUs a commodity 	ARM basically made CPUs a commodity and Apple is still killing it by designing their own best-in-class version so I wouldn't be so sure about RISC-V.	khuey	9.4117155	-5.611641	comment	4.0	20.0	1509982586	-10.552325
15635598	I'm not super familiar with the law 	I'm not super familiar with the law in this area, but doesn't AMD+Intel teaming up get into antitrust territory?  The x86 architecture still basically has a monopoly on the desktop, laptop, and server space. Could someone a bit more familiar in this area elaborate?	tombert	9.327514	-5.1902266	comment	4.0	12.0	1509978201	7.791328
15637818	Ultrafast magnetic reversal points t	Ultrafast magnetic reversal points the way toward speedy, low-power memory	breck	9.907558	-5.3499584	story	4.0	24.0	1509994347	8.090204
15641807	No need to. For anybody who's read t	"No need to. For anybody who's read the Snowden leaks it's 100% plausible that the NSA owns society through hardware backdoors.Conclusion: We need 100% open-source hardware ASAP if we're to become a sane society.Edit: Anyone remember the ""Intel inside"" trademark [0] which was supposed to add (marketing) value to any PC which was allowed to carry that label? Well, today it's clear that this label actually stands for ""Intelligence community inside"".[0] https://www.intel.com/content/www/us/en/trademarks/intel-ins..."	benevol	9.45023	-5.188133	comment	4.0	33.0	1510043681	7.73214
15642170	> If nothing else, this bit of news 	"> If nothing else, this bit of news reaffirms my view that the Berkeley license provides the maximum amount of freedom to potential users.Interesting conclusion, considering one of the ""features"" of the Intel ME is precisely to limit what the final user can do with their computer."	arximboldi	9.505018	-5.214696	comment	4.0	22.0	1510049681	7.761255
15657308	Full control over the Intel backdoor	Full control over the Intel backdoor / remote administration engine that's on all their modern CPUs. (It may not be an intentional backdoor, but it's certainly looking as if it's been usable as one by intelligence agencies.)	SAI_Peregrinus	9.489731	-5.2015405	comment	4.0	25.0	1510176969	7.760782
15657340	OK so the implication being that wit	OK so the implication being that with this thing found, someone could make a USB device that when plugged into an intel machine immediately gets control?	hoodoof	9.552531	-5.1957297	comment	4.0	15.0	1510177197	7.6141896
15669856	Many people will now start to dig in	Many people will now start to dig in. War is started and I hope somebody will find a way to totally remove/replace(with a stub) Intel ME before some critical vulnerability will be discovered in the Intel ME's network stack.In white hats we trust :)	cryogenic_soul	9.436675	-5.212948	comment	4.0	28.0	1510322175	7.7572107
15681116	Unfortunately, the first question th	"Unfortunately, the first question that popped into my head was not ""awesome, a processor that won't spy on me"" but ""will it be x86 compatible?"".I know, it's heresy--you should only need open-source software, and as long as you can get a compiler running, open source software should work. However, the vast majority of users simply won't care, not if they have to give up their favorite software. ""I can't use Photoshop? But I need it!""If you want an open processor to take off, it'll need some kind of x86 compatibility."	dawnbreez	9.647719	-5.203875	comment	4.0	20.0	1510499719	-7.673616
15681907	I've probably had more problems tryi	"I've probably had more problems trying to work with bosses who were couldn't make decisions at all and avoided all confrontation and let the project slip to the level of the lower common denominator.  By any reasonable definition, Linus Torvalds is a ""tyrant"", and the resulting quality of linux speaks for itself.All successful projects of sufficient size probably need a tyrant at the top someplace who can and will make final decisions and enforce them, otherwise everything falls apart in conflicting requirements and bike-shedding.Ahh, you might reply, but these are ""toxic"" tyrants, a phrase this article never bothers to define, allowing everyone to just project their own vision of a bad boss onto it."	DavidWoof	9.379526	-5.8412476	comment	4.0	12.0	1510511366	4.226358
15699899	Misleading information about Intel M	Misleading information about Intel ME (your ME probably can't access the network and probably doesn't contain a Web server) filtered through black-and-white thinking instead of risk analysis.Also, this topic has been rehashed to death on HN already.	wmf	9.420136	-5.2095304	comment	4.0	24.0	1510699208	7.7251287
15722883	x86 and x64 are the only two that so	x86 and x64 are the only two that someone could be using on desktop, right?	ReverseCold	9.701394	-5.3120365	comment	4.0	16.0	1510933595	-7.821439
15723333	I'd really like a code review tool t	I'd really like a code review tool that is code aware. That is, it treats the diff as code instead of plain text. I'd like to be able to figure out where a method is called from, go to definition and so on. Basically the same stuff I can do in my editor, but without having to clone the branch.	nevon	8.850717	-6.3706512	comment	4.0	13.0	1510935788	2.241737
15734535	Reverse engineering the Intel FSP: A	Reverse engineering the Intel FSP: A Primer	Nelkins	9.621041	-5.297063	story	4.0	82.0	1511109528	-6.911352
15740497	I'm working on CD for a project I've	I'm working on CD for a project I've been working on, but one difficulty I'm facing is that the clients and server are being developed on parallel tracks, and aren't always in feature parity at any given moment.Which repo should own the integration tests? How do I synchronize the releases of matching front and back ends?	OtterCoder	8.755343	-6.3916793	comment	4.0	16.0	1511191471	13.832368
15742942	Unreal. Kept scrolling and the vulne	Unreal. Kept scrolling and the vulnerabilities kept coming.Most annoying thing is that there isn’t even a real alternative. If I understand it right then AMD chips have pretty much the same thing?	xwvvvvwx	9.262561	-5.184794	comment	4.0	31.0	1511209725	7.8641267
15742977	Well, maybe AMD does at least some s	Well, maybe AMD does at least some security reviewing on their own? /sARM could be a affordable alternative to x86 if that works for you.	thg	9.512445	-5.250168	comment	4.0	16.0	1511209958	7.8551035
15744215	> or if they allowed complete disabl	"> or if they allowed complete disabling via motherboard jumperThat wouldn't really work; the ME is essentially ""the CPU"" of the Platform Controller Hub. Disabling it would be disabling your computer (e.g. your IOMMU, your DRAM refresh, your ACPI command routing, etc.)All the stuff that used to be done ""manually"" by the CPU itself back in the 8086 days—using configured IRQs and PITs and whatever else—is done autonomously by the PCH these days, with the CPU just asking the PCH to ""get it done."" And the logic that runs in the PCH to interpret those requests and decides when and how to apply them, is executed by the ME.The ME only managed to not exist previously, because mainboards were previously both ""simpler"" (every bus spoke exactly one protocol and the controller chip for that bus did the"	derefr	9.496865	-5.240504	comment	4.0	21.0	1511219469	7.727201
15744872	The GP is simply wrong on many/most 	The GP is simply wrong on many/most of its technical claims. ACPI implementations were common for 4+ years before the ME existed. The ME is not involved in DRAM refresh or initialization at all (other than waiting for it to complete..). DRAM refresh is hardened into the IMC, and the initialization SW runs on the x86_64 cores - typically it's a UEFI binary blob provided by Intel. Once the OS is running, it manages the IOMMU, and the IOMMU itself is a hardened function; the translations that it performs for the OS do not involve the ME. And so on.Though the ME currently performs some complex early initialization tasks, the notion that a modern x86_64 platform simply cannot work, or cannot work efficiently, without the ME running indefinitely/alongside the OS is plainly wrong.	rphlx	9.7136135	-5.317724	comment	4.0	13.0	1511227905	8.030114
15744317	Tell HN: No company that values secu	Tell HN: No company that values security can risk Intel CPUs	hguhghuff	9.4958315	-5.213699	story	4.0	2.0	1511220351	7.748631
15750037	I say it also has to do with them ju	I say it also has to do with them just not caring about what their users want. You’re still gonna buy an x86 processor and AMD has their own ME-like tool too. What are you gonna do, run your desktop on ARM or RISC-V?	colejohnson66	9.602517	-5.208586	comment	4.0	18.0	1511287521	7.762492
17307444	You centralize ownership, the same w	You centralize ownership, the same way it has been done since the dawn of the internet. Even Intel can securely update your microcode.	Veedrac	9.548265	-5.2245774	comment	4.0	33.0	1528927939	7.7446017
17308092	I know the Arm A-53 isn't cutting ed	I know the Arm A-53 isn't cutting edge fast, but hardly one tenth. Seeing as the A-53 is unaffected by both Meltdown and Spectre, my assumption was that it didn't use speculative execution.	JudasGoat	9.625747	-5.5708814	comment	4.0	26.0	1528934256	7.7752147
17310912	Counterpoint: emojis are bad and sho	Counterpoint: emojis are bad and should be discouraged	muglug	9.79635	-6.264664	comment	4.0	13.0	1528976932	-13.954737
17315964	The transistor count of an A11 is 4.	The transistor count of an A11 is 4.3 million, the Ryzen has about 4.8 million depending on the type. And x86 is a bit wasteful in terms of what it does effectively with those transistors because the front-end required to translate x86 instructions.	dep_b	9.536848	-5.216302	comment	4.0	14.0	1529015057	7.7859163
17350417	Ouch. I will say though, Hyper-Threa	Ouch. I will say though, Hyper-Threading is a lot less valuable these days than it was when it was first introduced (except for the few dual core CPUs still available).When you have four-six-eight or more cores, there's less value in doubling that number. The gain is lower.	Someone1234	9.723466	-5.5269647	comment	4.0	13.0	1529443737	8.165367
17365938	FPGAs in Data Centers	FPGAs in Data Centers	rbanffy	9.102013	-5.332135	story	4.0	101.0	1529594422	8.322007
17370285	I think you're being sarcastic but o	I think you're being sarcastic but others seem to think you're serious. Care to clarify? I'm leaning towards you're being sarcastic. I'd flip a table if I opened up code full of emojis.	giancarlostoro	9.786117	-6.2541246	comment	4.0	19.0	1529627054	-13.944051
17376612	Reading this makes me nostalgic for 	Reading this makes me nostalgic for 'multiple CPU' PCs. Haven't seen a lot of them for a long time, but was it 'hyper-threading' or 'multi-core' that killed the 'multiple CPU' workstation? Having more than one CPU had cool value and exclusivity - everyone has multicore, whether faked by hyperthreading or not.I was also surprised by the amount of people choosing automatic login. I thought there was a downside to that regarding the 'keychain' thing or has that been solved over the last decade or so?Also	Theodores	9.641793	-5.3323307	comment	4.0	12.0	1529695279	8.10076
17391606	> Intel's problem is that their CPUs	> Intel's problem is that their CPUs were performance focused and as such didn't scale down as wellDon't know the first thing about electronics, but I am interested to learn more about what you meant here. Highly-optimized code (usually) isn't too readable or extendable, are you saying Intel has the same problem with their processor's design?	tsenkov	9.341285	-5.211769	comment	4.0	13.0	1529927966	7.813676
17399967	Verilog 6502 (2016)	Verilog 6502 (2016)	tomcam	9.106083	-5.5005283	story	4.0	116.0	1530015992	8.578463
17406500	Be very careful with those - they do	Be very careful with those - they do not use ECC memory and thus suffer from the many potential security attacks and your software needs to handle the odd memory error.	smcleod	9.488823	-5.5008593	comment	4.0	12.0	1530086352	8.275603
17408047	Native emoji support, aesthetically 	Native emoji support, aesthetically pleasing front-ends, and clear product direction are some of the main positives I see, even if the combination of php on the backend and electron on the frontend aren't the most sophisticated technical components in history.I prefer decentralized and open things, but a cohesive vision can sometimes provide a better user experience across a more restricted set of functionality than an army of hackers, each solving their own problems.	dswalter	9.828483	-6.262904	comment	4.0	13.0	1530107212	-13.966097
17443647	Intel was disrupted, for sure. Basic	"Intel was disrupted, for sure. Basically, I'm left wondering if there was some key brain-drain that occurred to Intel. Back in grad school in the mid 90's, most of the profs thought that Intel would collapse under the weight of the x86 ISA, but one prof knew people in Intel and told me about their roadmap going out to 2010, with plans for kicking butt. All of that played out! This shows amazing foresight. However, in recent years, Intel seems to have gotten itself painted into a corner with regards to die sizes, while AMD has strategically shifted to combining chips with smaller die sizes to increase yields and increase margins with more competitive pricing.""Interposers, Chiplets and...ButterDonuts?"" -- https://www.youtube.com/watch?v=G3kGSbWFig4Something has happened with Intel, which has"	stcredzero	9.31994	-5.18979	comment	4.0	26.0	1530552449	7.7427506
17475343	Intel is also tracking everyone thro	Intel is also tracking everyone through the use of a very low level instruction shipped inside of every intel CPU.  Details of this trust busting instruction can be found here:https://c9x.me/x86/html/file_module_x86_id_5.htmlIt has also been discovered that many common languages such as C and PHP also implement abstractions to make this low level instruction much easier to use to track people with.  The common use case is that software engineers write algorithms which use these instructions to summarize records and lists to group database records containing personally identifiable information into groups which can then be used to feed AI bots leveraging neural networking algorithms (which also themselves use the sneaky instructions) to do various nefarious things like creating unique ident	greenail	9.508313	-5.262285	comment	4.0	16.0	1530913103	-3.2439356
17478657	> but slows down processing and comp	> but slows down processing and complicates pipelines.Rendering in monochrome is also faster than true 32-bit color, but we use 32-bit color because it provides a better experience to the user who is the ultimate consumer of the graphics pipeline.	admax88q	9.823463	-5.3643327	comment	4.0	18.0	1530974471	7.7050166
17505425	RISC-V is open instruction set, not 	RISC-V is open instruction set, not open microarchitecture.You won't see high performance open source micrarchitectures that implements RISC-V core.Nobody is going to invest $300-$500M to develop new competitive open source microarchitecture (patent free?) every 5-10 years for RISC-V that can compete with Intel, AMD and others.	Nokinside	9.385909	-5.6461987	comment	4.0	33.0	1531299023	-10.567022
17522734	If only it had custom emojis... It's	If only it had custom emojis... It's the one thing keeping us on Slack.	Roritharr	9.749234	-6.2385497	comment	4.0	13.0	1531488420	9.173946
17532358	Intel to Acquire eASIC: Lower Cost A	Intel to Acquire eASIC: Lower Cost ASICs in FPGA Design Time	tpetry	9.090092	-5.326616	story	4.0	151.0	1531602112	8.2193365
17549469	Oo7: Low-Overhead Defense Against Sp	Oo7: Low-Overhead Defense Against Spectre Attacks	ingve	9.633366	-5.5802917	story	4.0	80.0	1531833235	7.7137346
17560307	What surprises me is that there isn'	"What surprises me is that there isn't any emoji with an unequivocal meaning of ""thanks."""	laurex	9.79152	-6.2408776	comment	4.0	13.0	1531934885	-6.92812
17586773	There are no official ways of disabl	"There are no official ways of disabling the ME.The Coreboot project and the Hardenedlinux project have worked on it, and here are some resources on their progress:https://hardenedlinux.github.io/firmware/2016/11/17/neutrali...https://www.coreboot.org/Intel_Management_EngineAnd here is a general writeup on the Intel chips and their ""features"": https://libreboot.org/faq.html#intelIf Intel aren't going to patch old systems, here to hoping that they will let us disable it, but it probably won't happen."	kawsper	9.524972	-5.2352138	comment	4.0	14.0	1532268044	7.8044133
17587540	There is quite literally no viable a	There is quite literally no viable alternative to x86 for 95% (more like 99.9%, but I am being generous) of the server and workstation market. Pretending like there is and anyone choosing x86 is irresponsible is just being a smug fool.	throwaway2048	9.66804	-5.2299876	comment	4.0	15.0	1532277012	-7.784162
17588841	x86 has had a good run. But it's tim	x86 has had a good run. But it's time for it to go.I'm hopeful for RISC-V.	snvzz	9.463069	-5.622319	comment	4.0	38.0	1532292497	-10.52708
17603760	This appears to be working as expect	This appears to be working as expected. Here is a graph [0] of the Intel Power Gadget while I ran Cinebench. They are not the same length because it took longer before the update and I cut out the parts before and after. Pretty striking difference IMHO and it never went below base clock after the update. I was worried about my i9 but I'm not anymore. Also if anyone is wondering it went from 780cb -> 860cb but I wouldn't put too much stock in that since I've got other apps open (same apps for both tests) and 3 external monitors attached. Some people report 1100cb score after the fix.[0] https://www.dropbox.com/s/y30x13mi6ozhg0k/10.16.3S-Fix.png?d...	joshstrange	9.390706	-5.1868505	comment	4.0	33.0	1532457144	7.8012905
17608961	The tools killed it. By all accounts	The tools killed it. By all accounts it was terrible to program for. It wasn't as simple as writing a standard x86 piece of software.	shaklee3	9.921751	-5.2705956	comment	4.0	15.0	1532524465	-7.7809086
17626532	RISC-V’s Open-Source Architecture Sh	RISC-V’s Open-Source Architecture Shakes Up Chip Design	rch	9.371375	-5.6476808	story	4.0	25.0	1532704395	-10.549225
17633541	Don’t be like that. The shorthand he	Don’t be like that. The shorthand here is that this is a novel, massively parallel architecture, much like those in supercomputers. If it had been adopted and scaled up, it could have had interesting applications.	felixgallo	9.752158	-5.4897413	comment	4.0	17.0	1532791637	8.341341
17637958	Unfortunately, cost of the developme	Unfortunately, cost of the development boards is in no way the problem blocking wider use and knowledge of FPGAs.FPGA tooling is stuck in the dark ages. FPGA pipelines are windows-only, the development environment UIs look like a toddler was given access to VB6, and the licensing is crazy.Lattice semiconductor will give a free licence for iceCube2  to a resident of the USA in less then 24 hours but will deliberate for weeks over giving one to someone in Australia (so you should just lie and say you live at the white house, that's what I did after three weeks of no response to my licence request).Xilinx's free licence for ISE states that by using the free licence you agree to let ISE upload all your FPGA code to them and they get to use it for whatever they want. It actually states directly	Sir_Substance	9.099023	-5.378198	comment	4.0	37.0	1532869983	8.4502945
17637768	Remote Spectre exploits demonstrated	Remote Spectre exploits demonstrated	signa11	9.662982	-5.6011996	story	4.0	85.0	1532867060	7.777299
17650190	interesting; i didn't know you can d	"interesting; i didn't know you can do that...   urldecode(%F0%9F%A4%94) = 

would be pretty awkward to see the urlencoded version (e.g. on paper and source code), but I guees it just works as far as UI is concerned.Can you have emoji domain xn--?? What about and emoji tld?"	ivan_ah	9.834961	-6.2445073	comment	4.0	23.0	1533005660	-13.950074
17679684	The systems themselves likely aren't	"The systems themselves likely aren't very different from a ""standard"" x86 systemThe hardest part will probably be the sheer amount of DRM installed around them, as consoles tend to have"	IntelMiner	9.656611	-5.242101	comment	4.0	13.0	1533303359	-7.800486
17686954	So it is possible to get malicious c	So it is possible to get malicious code execution on the fabs that build the next generation of processors for our devices. What are the chances that a sophisticaled stuxnet-like attack inserting backdoors in the CPU design will follow?	0x0	9.5769	-5.261285	comment	4.0	22.0	1533392618	7.719218
17698971	Threadripper uses quad-channel DDR4-	Threadripper uses quad-channel DDR4-2666 memory. That gets you 80 GB/s memory bandwidth, which is possible because the processor sits in an enormous 4094-pin TR4 socket. Your Xeons were probably in 2011 pin sockets with DDR3-1866 resulting in 70 GB/s memory bandwidth.  One Threadripper has more than double the pin count and slightly more total memory bandwidth than your dual Xeon machine.Also, your the Intel setup has a 25 GB/s QPI bus between the processors.  Threadripper runs an Infinity Fabric bus, with 42 GB/s between each die internally (aggregate 170 GB/s).  While a couple of those internal dies are not directly connected to the memory, you should have little trouble sharing meals among those hungry processors.	LeifCarrotson	9.439997	-5.218221	comment	4.0	16.0	1533572293	7.9519243
17724579	Does it support light-weight threads	"Does it support light-weight threads (co-routines) channels yet? (and if it does, does it multiplex them on mulitple CPUs?). I had a look a few years ago, and then it did not.I think this is so badly needed to get an easy route to pipeline paralellism, which is simply everywhere in today's data analysis ""pipelines""."	samuell	9.675031	-5.519648	comment	4.0	15.0	1533825640	8.184638
17729522	This is a HUGE wake-up call.It reall	This is a HUGE wake-up call.It really is incredible to see that a third party apparently has discovered a genuine backdoor in a production CPU with completely independent research. If that's within reach for a standalone researcher, what secrets lie in well-funded organizations at the nation level?Perhaps this will bring further mindshare to the RISC-V approach in the future?	0x0	9.383952	-5.5805993	comment	4.0	15.0	1533858192	7.9234056
17729860	VIA/Centaur C3 processors are intern	"VIA/Centaur C3 processors are internally RISC and the front end converts x86 instructions into RISC instructions that the processor executes. People used to ask ""can I generate native RISC code?"" and Centaur always said no, but you know they must have debugging functionality to do that.And now someone has discovered that sometimes you can enter debug mode from ring 3 and they're calling it a backdoor."	wmf	9.4258375	-5.6985817	comment	4.0	26.0	1533862524	-10.538709
17735830	“God Mode” exploit found in old x86 	“God Mode” exploit found in old x86 chips	loydb	9.6137705	-5.32766	story	4.0	40.0	1533926927	7.7331195
17738651	Porting SBCL to the RISC-V	Porting SBCL to the RISC-V	pome	9.418847	-5.639285	story	4.0	133.0	1533969243	-10.550673
17750120	> After core counts, the next battle	> After core counts, the next battle will be on the interconnect. Low power, scalable, and high performance: process node scaling will mean nothing if the interconnect becomes 90% of the total chip power.I think this means that scaling processors to more cores (nodes) in a lightweight-NUMA scheme just isn't going to work.My guess going forward is that the core counts will stay at the current level for quite a while, and that both AMD and Intel will optimize the heck out of their interconnects, using most power budget gains to bolster the actual cores.	blattimwind	9.468518	-5.2157187	comment	4.0	14.0	1534168898	7.862519
17753517	6502 is also what the Terminator ran	6502 is also what the Terminator ran.  We should thank our time traveler saviors for stopping the Furby uprising from happening.	chocolatebunny	9.559946	-5.3106904	comment	4.0	14.0	1534193263	-7.3941474
17753275	> It looks like this is basically a 	> It looks like this is basically a 6502 with no Y register and a reduced set of instructions.Why would you do this?  It absolutely can't have made any difference to the cost of the processor in 1998.	bsder	9.55381	-5.3090715	comment	4.0	20.0	1534191518	-7.5150394
17763233	I've lost count of all the side-chan	"I've lost count of all the side-channels that have been discovered since Meltdown/Spectre, and to be honest, I quite frankly really don't care any more than I did before... I don't run untrusted code (yes, that includes JavaScript) and I'm the only user of my PC. Since Intel first introduced ""protected"" mode in the 286 I've felt the notion that it was only intended for protection against accidental errors, not deliberate maliciousness. From that perspective, all this ""side-channel hide-and-seek"" seems like an exercise in futility to add a level of security to something that was inherently not designed for such.Since this attack goes directly to a physical address, it can in theory read any memory in the system. Notably, that includes data kept within an SGX encrypted enclave, which is supp"	userbinator	9.713727	-5.510452	comment	4.0	14.0	1534297264	7.8833146
17763344	Often used with ARM, why is it never	"Often used with ARM, why is it never used by default on X86/X64 distros?  I would think that the ""lightweight"" alternative would be lean and mean, kind of like Nginx vs Apache."	jacob019	9.595376	-5.2718925	comment	4.0	22.0	1534299676	-7.6740866
17783084	Probably not. Arm is power efficient	Probably not. Arm is power efficient but still x86 performance is ahead. At some point you need a balance between battery life and performance.	kyriakos	9.651858	-5.258522	comment	4.0	37.0	1534516532	-7.71777
17825558	This amounts to little more than mak	This amounts to little more than making a statement at the expense of your users.It would've carried that much more weight if it were _your_ low-mid 6 figures that were redirected away from Intel.	eps	9.316246	-5.1998577	comment	4.0	15.0	1535013199	7.7563186
17829998	I've long felt that there's somethin	I've long felt that there's something less than half-baked about the multi CPU architecture we're currently using. The hacky contortions HFT coders have come up with to avoid things like False Sharing strike me as a big red flag.https://mechanical-sympathy.blogspot.com/2011/07/false-shari...How about an architecture more like Erlang's, where you have independent processes with their own CPU core, where each has their own memory, but where you have much faster communications supported at lower hardware levels? Why not have a multi-processor architecture designed for direct support of Hoare CSP-inspired languages?Hypercube topology: http://web.eecs.umich.edu/~qstout/pap/IEEEM86.pdf	stcredzero	9.740738	-5.438885	comment	4.0	14.0	1535052799	8.392698
17830047	You mean it's random then, right? I 	You mean it's random then, right? I mean let's talk about what a hyperthread really is: It's the left over functional units (or execution units).Say you have 100 adders, the processor tries to schedule as many instructions as it can on those 100 adders, but eventually it will run into data dependencies. The left over units can go to a hyperthread.My understanding (let me know if I'm wrong) is that Hyperthread aware OSes (which is like what, everything since WinXP/Linux kernel 2.4?) will schedule lower priority tasks to the logical cores and higher priority tasks to the real cores.So when it comes to a hosted provider (a.k.a cloud provider, a.k.a somebody else's computer), what you get pretty much depends on the virtualisation layer they use: Vmware, KVM, Xen, Hyper-V, etc.Do hypervisors ty	djsumdog	9.800883	-5.5462747	comment	4.0	14.0	1535053076	8.307864
17848139	"The ""new processor"" is already being"	"The ""new processor"" is already being developed.  Mill computing is designing the Mill CPU and made 13 videos so far on Youtube explaining most characteristics of the new CPU.  The CPU is on par with the latest Xeon, uses 10x less power, and has many great features that enhance performance and security a lot.  
For example, portals calls are function calls from protection domains to another protection domain and automagically only allow the parameters to be read by the callee and the results be read by the caller.  The rest of the data of the other protection domain cannot be accessed.  The stack is also secure since there are 2 stacks: one holds all data that one normally find on a stack and is modifiable by the program and the second stack is a hardware-managed stack with the return addre"	mhkool	9.426836	-5.1856127	comment	4.0	19.0	1535320337	7.8675647
17850848	> However, VLIW-like architectures c	"> However, VLIW-like architectures could give us back the performance of out-of-order execution without the drawbacks since the compiler has much more direct control over the caches and registers used in the CPU as well as branch prediction and lots of other internals.> Of course, you also need much smarter compilers, since the Itanium failure, we've come a long way and I'm convinced that Rust and friends would be able to get the maximum out of a VLIW-like with some additional work.- What kind of compiler magic do you have upon your sleeves that will enable that kind of magic, but circumvents the problem of non-existence of a ""sufficiently smart compiler"" that plagued Itanium? In particular: What kind of magic does Rust offer for this?- How do you intend to solve the problem (that also pla"	wolfgke	9.592263	-5.655503	comment	4.0	16.0	1535370684	8.244431
17865354	I don't know anything about RISC-V I	I don't know anything about RISC-V ISA yet, but I am wondering if its ISR is great for learning computer architecture in shcools compared to MIPS, the dominant ISR at colleges for introductory computer architecture classes?The HDL (Verilog) code looks quite short and simple. If the partial implementation of the ISR implementation is like that it shouldn't be so bad for learning...	kbumsik	9.414445	-5.68963	comment	4.0	16.0	1535513530	-10.516066
17865793	I wonder how easy it would be to por	I wonder how easy it would be to port https://github.com/xoreaxeaxeax/sandsifter to the RISC-V instruction set.Would probably be a decent step in the right direction for validating/verifying the future of trusted computing.Although... this gives rise to a 2nd thought. If it was _this easy_ to build a RISC-V implementation, is it all that special, technically speaking? I ask as someone naive about processor design. Is implementation relatively straightforward, but design hard?	exikyut	9.41227	-5.679462	comment	4.0	20.0	1535518934	-10.580008
21016412	I was under the impression that it w	"I was under the impression that it wasn't for performance but for distribution, i.e., to optimize for app size. Instead of having a fat binary crosscompiled for different architectures, Apple uses the bitcode to compile and distribute per architecture. It's part of the ""app thinning"" process."	anonova	9.892795	-5.346914	comment	4.0	15.0	1568902838	-7.6050506
21049741	Author here. Counterpoint: my HiFive	Author here. Counterpoint: my HiFive Unleashed (RISC-V) experience has been extremely positive.	Sir_Cmpwn	9.379142	-5.6893144	comment	4.0	17.0	1569252176	-10.590724
21065115	Can I just point out how much I hate	"Can I just point out how much I hate those sand charts?  You can only tell what the bottom most variable is doing. 
 How big is the AMD segment when intel was rapidly rising? You can't tell because slope hides line width.  Want to know the trajectory of the other small players?  Too bad.Don't use sand charts kids."	AWildC182	9.264455	-5.1837482	comment	4.0	18.0	1569362650	7.7879705
21087775	It is still not shipping so there's 	It is still not shipping so there's not really a reason not to use a Threadripper for lower price AND higher performance. Or even Epyc chips. We know the Titan Ridge Thunderbolt controllers work on AMD motherboards. Alpine Ridge had firmware problems but Titan Ridge is fine.	chx	9.317486	-5.2210526	comment	4.0	14.0	1569550069	7.8876476
21088849	He makes decisions about software. I	He makes decisions about software. It’s the same position as Linus or Rossum.	webkike	9.305544	-5.8704977	comment	4.0	14.0	1569563560	4.2017794
21110537	why is dropping 32-bit support even 	why is dropping 32-bit support even a consideration?	tmaly	9.875851	-5.2183747	comment	4.0	14.0	1569802010	-7.899456
21111072	The only issue is it can take an hou	The only issue is it can take an hour or more - https://news.ycombinator.com/item?id=21110622 polling for the status to finalize would waste build minutes on your CI.	judge2020	9.233542	-6.386193	comment	4.0	12.0	1569808183	6.1355677
21126356	Intel (Quartus FPGA compiler) | Toro	Intel (Quartus FPGA compiler) | Toronto, ON, CanadaInterested in working on algorithmically-complex C++ code to squeeze out every last bit of performance? Actually using advanced computer science knowledge outside of interviews and programming competitions? Optimizing graph-based algorithms simultaneously for runtime, memory, and quality of the resulting solution? Understanding the hardware as well as the software? Then working on Quartus, Intel's compiler for FPGAs, is for you.You will work in a downtown Toronto location, with an amazing and diverse group of talented engineers, on some of the most intellectually challenging problems in the world, and your work will directly benefit areas like AI, telecommunications, healthcare, aerospace, finance and more.I am looking to hire specifically	FasterFPGAs	9.119213	-5.4282618	comment	4.0	16.0	1569943378	8.418197
21133736	Was actually pretty good read. How f	Was actually pretty good read. How far are we from 128-bit architecture ?	joering2	9.84705	-5.4936223	comment	4.0	27.0	1569995811	7.9819202
21154871	"I've never heard ""microkitchen"". Whe"	"I've never heard ""microkitchen"". Where I work, it's just a kitchen. A pretty big kitchen, actually, so prepending ""micro"" would feel strange. Are Google's microkitchens small?"	lph	9.777971	-5.1909866	comment	4.0	12.0	1570164796	-13.753673
21169606	Gentle reminder: you can buy dual co	Gentle reminder: you can buy dual core RISC-V chips today for $9, FPU, DSP, and TPU included, with WiFi onboard if you buy a module: https://kendryte.com/. It won't run Linux (no MMU), but it will run FreeRTOS and TensorFlow Lite, straight from their GitHub.	m0zg	9.479068	-5.320782	comment	4.0	18.0	1570331754	-10.539689
21175132	What did make RISC-V a game changer?	What did make RISC-V a game changer? Why did not any open source chip enjoy such a success before?	miohtama	9.380161	-5.6694164	comment	4.0	19.0	1570395982	-10.643125
21183753	I would suggest GNU people to not ru	I would suggest GNU people to not rush into decisions, the things are too heated at this moment, I am afraid we get a fracture of the project.I am also having a bad feeling that Linus Torwalds is next, that a list of 20 years old emails is already prepared and some people are ready to tweat something that maybe happened long in the past that made them uncomfortable. Maybe that public apology Linus did this year was a defensive move.	simion314	9.322137	-5.857999	comment	4.0	27.0	1570470323	4.325648
21184946	“Short timeline” assumes you didn’t 	“Short timeline” assumes you didn’t see 64-bit coming a couple of years ago.Not saying it isn’t work, just that “I didn’t see it coming” isn’t much of an excuse.	jen729w	9.87205	-5.4027643	comment	4.0	33.0	1570476367	-7.7456875
21191583	Magit sounds great. If I only could 	Magit sounds great. If I only could use it without remembering a bunch of arcane emacs commands.	hwj	8.869865	-6.412657	comment	4.0	13.0	1570538520	-11.422264
21220784	"It's not ""whatever."" Apple has remov"	"It's not ""whatever."" Apple has removed emoji and an app; they don't provide the government with backdoors or biometric data. There really is a line."	millstone	9.802634	-6.2554297	comment	4.0	12.0	1570757473	-13.952869
21236978	The same problem with expecting 8-bi	The same problem with expecting 8-bit software to keep working.All organizations have limited resources. Each hour spent supporting 32 bit is an hour that could’ve been spent on more important things.	pembrook	9.925634	-5.2221255	comment	4.0	29.0	1570921432	-7.8897147
21269461	>It is important to understand your 	>It is important to understand your platform all the way down to the CPU, including things like branch prediction and caches if you want to have performant software.Let's not drastically increase job requirements for no good reason.>It's time to learn your platforms, software people.Many of these platforms have undocumented CPU instructions, so until you get a full accounting of that, what's the point? You can't learn the platform fully if they keep that a secret.Secondly, we've had CPU-level issues like spectre and meltdown introduced that affected performance in some cases. We can't even trust the platform makers to get it right!	vsareto	9.692221	-5.318408	comment	4.0	36.0	1571227553	7.715646
21310367	Technically this wasn't caused by th	"Technically this wasn't caused by those instructions but by the spinlocks waiting for the lock to be released. Also ""blocked by seven instructions"" sounds a bit click-baity.. you can lock the CPU or power off the computer with less than that amount of instructions :-)"	KenanSulayman	9.735458	-5.4202714	comment	4.0	18.0	1571648072	8.667669
21327327	In my opinion, having a single ISA b	In my opinion, having a single ISA breeds lazyness, and causes shortcuts to be made in programming. Like when the whole world got rid of all those esoteric 18-bit-word and worse architectures, and started writing loads of C for 32-bit i386. Then 64-bit came along and loads of software wouldn't compile properly without fixing things like assumptions of integer size, etc.It's why I am very glad that while Linux is very popular, there is still a BSD keeping programmers from going too crazy on the Linux-only features.We don't know what future architecture will exist. I would rather we have a multitude of architectures now, so that people write standards-conforming code rather than it-works-on-amd64/Linux code.	mnw21cam	9.604269	-5.5686316	comment	4.0	14.0	1571770788	-7.735342
21327912	The only problem is are PowerPC/Linu	The only problem is are PowerPC/Linux up to task? Correct if I'm wrong but from what I know the entire linux ecosystem is geared toward X86/64 and if you're on other architecture the selection of software that works shrinks substantially.While we could just compile everything, there's still the problem of untested architecture integration, bugs that doesn't happen in X86 might happen in PowerPC/ARM and it's not a trivial issue to debug a compiler/bimodal action for instruction sets.	Aperocky	9.849254	-5.438822	comment	4.0	23.0	1571774270	-7.7756777
21347105	The version control analogy in the d	The version control analogy in the description was spot on, but a good demo is worth a thousand words, so I will be waiting for a good demo to make conclusions.	EastSmith	8.859028	-6.3742185	comment	4.0	15.0	1571938959	-11.71217
21411293	x86 hasn't really proven that it sca	x86 hasn't really proven that it scales down well for mobile devices either.	unlinked_dll	9.685942	-5.2221866	comment	4.0	12.0	1572542650	-7.7294574
21412023	Segmentation is really nice, and sho	Segmentation is really nice, and should have been carried on, IMO.  Half the issue with Spectre is that there isn't a clean way to describe to the processor different memory security contexts except with a page table pointer swap.  Better segmentation support could have allowed you to sandbox memory without having to jump in and out of the kernel on transitions.  Hence why VMWare, and Chrome's NaCL used segmentation hardware on x86-32 when they still could.	monocasa	9.734475	-5.641004	comment	4.0	22.0	1572546448	7.8988957
21410976	I really wish Itanium had taken off.	I really wish Itanium had taken off.  IMO it is a superior architecture that was simply ahead of it's time.Wouldn't it be great if software instead of hardware, had complete control of instruction ordering?  Wouldn't it be great to not be limited by the current SIMD restrictions?  Wouldn't it be nice if you could choose to spend more compile time to get even faster programs (vs relying on the hardware to do it JIT)?I mean, I get why it didn't happen.  Stupid history chose wrong (Like making electrons have a negative charge).	cogman10	9.553715	-5.5772114	comment	4.0	29.0	1572541290	-7.703469
21411724	The 8086 introduced the abomination 	The 8086 introduced the abomination of segment registers.That created many software limitations for much of the 80's.Compilers with 64 K limits on array sizes, or code segment sizes, and similar.By comparison the 680x0 on classic Mac was a pleasure to program.  A nice large simple flat address space.	DannyB2	9.69591	-5.4255095	comment	4.0	28.0	1572544743	-7.484936
21420366	7000 votes on https://stackoverflow.	7000 votes on https://stackoverflow.com/questions/4114095/how-do-i-revert-...If one cannot figure one of the most common use case of a version control system without Googling a StackOverflow answer then we have a problem somewhere.	miohtama	8.827412	-6.3784747	comment	4.0	12.0	1572624709	-11.722293
21452221	That’s on the developers to be hones	That’s on the developers to be honest, less so on Apple (but Apple is not entirely guilt free). It was very clear in 2016 that they should’ve been targeting 64bit.	jsjohnst	9.820212	-5.198083	comment	4.0	15.0	1572961028	-7.7891765
21464850	They can't fake public PassMark resu	They can't fake public PassMark results though. They currently hold four of the top five results for high end processors there (https://www.cpubenchmark.net/high_end_cpus.html) and a lot of the top price/performance results (https://www.cpubenchmark.net/cpu_value_available.html). A lot of folks use charts like these to guide buying decisions or make recommendations to others.	thaumaturgy	9.422745	-5.202444	comment	4.0	16.0	1573061871	7.8107357
21509645	When Craig Silverstein left Google s	"When Craig Silverstein left Google somebody asked him ""What was the biggest mistake you made while at Google?""  His response was ""Not using ECC memory.""The problem is that both the consequences and debugging time of a single random bitflip are potentially unbounded.  That time that GMail lost 10% of their accounts and had to restore from tape was because of a single bitflip (due to a software bug, not a cosmic ray).  Google Search lost months of engineering time in the early days from cosmic rays, back when they really could've used those engineers on other stuff.The odds may be low, but they do happen when you have multiple computers, and the consequences are high.  Not really odds I'd want to take, when ECC RAM isn't that much more expensive than non-ECC RAM."	nostrademons	9.506367	-5.54449	comment	4.0	15.0	1573511675	8.235409
21516994	As a solo founder, I have almost eve	As a solo founder, I have almost everything mentioned in this article set up, except CI/CD. I can certainly see its value, but being able to easily take down parts of my production system and replace them with instrumented variants is very useful to me when things go wrong. I find that CI usually gets in the way of this. Maybe it's just a bad habit that I need to ditch :)	haolez	9.18179	-6.414303	comment	4.0	15.0	1573585366	6.1547713
21518188	A competing product (Harbor) is alre	A competing product (Harbor) is already open-source and part of CNCF. Quay wouldn't have had any future if it was to stay proprietary.Regarding RedHat (or IBM) truly committing to open-source, I'll believe when OpenShift 4.x is open-sourced.	throwaway9147	9.929052	-5.593219	comment	4.0	23.0	1573592851	-9.386355
21521972	Running the below over my machines g	"Running the below over my machines gives me back the 8-30% cycles I originally paid for, depending on load type. This will
have to do until everything is swapped to AMD. Note you only need 'mitigations=off' in later kernels.    - name: Disable CPU-sapping security mitigations
      become: yes
      lineinfile:
        path: /etc/default/grub
        line: GRUB_CMDLINE_LINUX_DEFAULT=""noresume noibrs noibpb nopti nospectre_v2 nospectre_v1 l1tf=off nospec_store_bypass_disable no_stf_barrier mds=off mitigations=off""

    - name: Update grub
      become: yes
      command: /usr/sbin/grub-mkconfig -o /boot/grub/grub.cfg

No I don't give a fuck about the 'risk' this introduces, but I expect my bank to."	ageofwant	9.803086	-5.470799	comment	4.0	46.0	1573632542	7.870456
21522045	One question- do these vulnerabiliti	One question- do these vulnerabilities , including spectre and meltdown only help in stealing information or can they also hijack your computer to do arbitrary things?	systemdtrigger	9.664809	-5.580503	comment	4.0	21.0	1573633556	7.7543645
21525107	Xilinx's toolchain is the worst piec	Xilinx's toolchain is the worst piece of software I've ever had to work with.There are two things that amaze me:1. That the dumpster fire is actually capable at all to synthesize hardware without exploding2. That their head of software still has a job.	ur-whale	9.112665	-5.3759336	comment	4.0	13.0	1573658576	8.463053
21529973	New Graphcore IPU Benchmarks	New Graphcore IPU Benchmarks	ingve	9.550149	-5.2416	story	4.0	17.0	1573681674	7.820895
21534297	I think speculative execution is in 	I think speculative execution is in principle incompatible with untrusted code execution. Even if CPU makers will place memory protection in front of speculative execution, and not behind as it is now, any untrusted code/bytecode can still pwn the process running it, and there is no way to work that around as such.	baybal2	9.692166	-5.633318	comment	4.0	13.0	1573726793	-6.7274704
21534477	How do microcode changes actually wo	How do microcode changes actually work? My mental model of a CPU is hard baked logic paths.	topbanana	9.616775	-5.4760447	comment	4.0	14.0	1573729361	-1.4503126
21534550	If that's 40 bare metal machines... 	If that's 40 bare metal machines... assuming 60ish HT cores, and 35% CPU... that's not that earth shattering.  We do that in Java :)	foobarian	9.525275	-5.256797	comment	4.0	50.0	1573730405	7.9322886
21540134	Like I said, AMD was unique on Meltd	Like I said, AMD was unique on Meltdown in that their branch predictor uses a neural-net based approach that is difficult to train to follow a specific path.  It affected everyone else in the industry - Intel, IBM, ARM, Oracle, everyone.	paulmd	9.340216	-5.298161	comment	4.0	12.0	1573770167	7.9304824
21549610	Do the instructions you use cause do	Do the instructions you use cause downclocking on Intel CPUs?	CodesInChaos	9.460492	-5.267252	comment	4.0	14.0	1573858775	7.833176
21552641	I understand the logic behind the Ra	I understand the logic behind the Raspberry Pi Foundation’s decision to continue releasing a single Raspberrian version in 32-bit mode for compatibility reasons, but... on the other hand, it does severely handicap their newer hardware.	qubex	9.83458	-5.2250323	comment	4.0	28.0	1573912656	-7.9302454
21552946	I think a big part of the reason is 	I think a big part of the reason is also the fact that several parts of the userland don’t compile for aarch64.See e.g. https://github.com/raspberrypi/userland/issues/314One of the first comments there also say about the RPi 3:> The GPU is a 32 bit processor. I haven't checked, but I'm expecting that there's a heck of a lot more work to do to get Khronos or other multimedia extension stuff up and running against a 64bit kernel than just getting userland to build.Don’t know if that’s the case for the RPi 4 as well.And another comment too:> I'm sure there are certain applications where having a 64-bit kernel (let alone userland) may be beneficial, but I suspect the hoped-for performance improvements didn't materialise, otherwise people would be waving benchmark results at us demanding an RPi	codetrotter	9.781252	-5.3598347	comment	4.0	18.0	1573916560	-7.8703513
21569376	You mean the multi tens of thousand 	You mean the multi tens of thousand dollar FPGA set up that Xilinx hawks doesn’t have source control?	dwoozle	9.097161	-5.3846774	comment	4.0	16.0	1574120945	8.422603
21589333	This just isn't true.Nearly every So	This just isn't true.Nearly every SoC you can buy today has hardware accelerators in it, from STM32s up to Xeons. You have to be looking at really tiny, generally pretty old micros before you literally don't have any.On top of that, hitting hardware speeds by putting in faster cores just isn't a thing for most parts. It's pretty easy to get 8-9x throughput wins on many primitives with a hardware accelerator, but getting a similar improvement just by getting bigger chips is often impossible and always expensive.	debatem1	9.467321	-5.1863966	comment	4.0	23.0	1574289155	7.7980146
21593366	Why does anyone (tech savvy or other	Why does anyone (tech savvy or otherwise) need to bold or italicize anything.In my mind bolding/italicizing are nice-to-haves alongside emoji. You wouldn't compromise the entire functional user experience of the central feature of your app for nicer emojis. (at least I hope not).	lucideer	9.915861	-6.2021766	comment	4.0	14.0	1574338775	-13.9282055
21604360	The ARM SoC Landscape from Genode's 	The ARM SoC Landscape from Genode's Perspective	chelmuth	9.576261	-5.1952415	story	4.0	53.0	1574417964	-7.6696258
21616066	As far as I can tell the reason is t	As far as I can tell the reason is that with variable length instructions you have a mux layer between fetch and decode that sends the right set of bytes to the right decode slot.  Your first set of 16 bits is certainly going into the first decoder but your fourth might be going to the second, third, or fourth depending on previous decoding.  Or maybe not, I've only worked with fixed width instructions when getting into the weeds of processors and only entirely designed a simple five stage classic RISC myself.  So don't take the above too seriously.What you should take seriously is that three of the four big RISC ISAs - MIPS, ARM, and POWER - all have extensions for variable length instructions.  They all use them in embedded systems where program memory size is a big factor in your bill o	Symmetry	9.597962	-5.746778	comment	4.0	16.0	1574538316	-10.345462
21620587	Is there a high level overview, for 	Is there a high level overview, for programmers, of how chip design software works? Something I eventually want to investigate is building some of those pieces of software but I have no idea where to get started learning about that ecosystem. From a software perspective I have a good understanding of how source gets turned into machine code, which gets packaged into shared object code, which then gets linked into a binary. How do those steps work for HDLs? What standards are involved? How do you test that each of those steps works?	gravypod	9.125037	-5.465619	comment	4.0	17.0	1574605423	8.586778
21628513	The only advantages are AVX512 and o	The only advantages are AVX512 and optimized Intel compiler/libraries now.	bitL	9.461385	-5.511958	comment	4.0	109.0	1574693294	8.084623
21628586	I remember Linus playing around with	I remember Linus playing around with a Xeon Phi CPU with a few hundred threads. The task manager was all percent signs.https://youtu.be/fBxtS9BpVWs?t=200Looks like Microsoft has already got 1000+ cores on Windows: https://techcommunity.microsoft.com/t5/Windows-Kernel-Intern...Can we get Bruce Dawson[0] one of those? I wonder how many more bugs he'll run into.[0] https://randomascii.wordpress.com/	theandrewbailey	9.483101	-5.707785	comment	4.0	23.0	1574693742	7.793351
21631668	Core count is becoming more and more	"Core count is becoming more and more bullshit. If I get performance X using 1 core and Y using all cores, then true core count is Y / X, regardless of what advertised CPU count the manufacturer may dream.Geekbench scores:
-----------------Intel Core i7-8086K: 6288 single core, 29927 multicore, asvertised cores: 6, real cores: 4.75,  bullshit factor (advertised/real): 125%. Decent.AMD Ryzen Threadripper 3970X: 5838 single core, 68457 multicore, advertised cores: 32, real cores: 11.7, bullshit factor: 270%. Ridiculous."	jowdones	9.487335	-5.2166934	comment	4.0	14.0	1574709439	7.92356
21633497	To play devil's advocate, why would 	To play devil's advocate, why would Intel spend money to allow their competitor to leverage speedups from their compiler?	omikun	9.6499	-5.5533886	comment	4.0	12.0	1574721032	-7.3210316
21633783	I guess this will have to be limited	I guess this will have to be limited to accelerators because a CPU/GPU/NIC/etc. in an FPGA will never be remotely as efficient as a real CPU/GPU/NIC/etc.Open source software has been successful at creating generic infrastructure, possibly because generic software can support large communities. I still don't see how to create that kind of effect in hardware.	wmf	9.115014	-5.341146	comment	4.0	15.0	1574722739	8.223359
21677615	Not sure what the conclusion is ther	"Not sure what the conclusion is there,Europeans have less brand loyalty as a whole, I know a lot of central europeans who are quite thrifty (or, very value conscious at least). And it's not as if we don't see that AMD is crushing intel at this point. So shouldn't the title be ""Humanity prefers AMD""? or are Americans/Asians really buying intel over AMD still?"	dijit	9.261435	-5.1998982	comment	4.0	19.0	1575232181	7.8386083
21679877	3m seems aggressive to do builds and	"3m seems aggressive to do builds and spin up infrastructure for anything non-trivial.Reading a bit closer, I see the author describes CI as a sanity check, ""ensur[ing] the bare minimum"" and doesn't consider deploying on every commit.  Maybe 3-7m is more realistic then.However, I'm slightly surprised by this definition of CI.  According to Fowler [0], ""Continuous Delivery is a software development discipline where you build software in such a way that the software can be released to production at any time.  ... The key test is that a business sponsor could request that the current development version of the software can be deployed into production at a moment's notice.""  So having CI gates on the development version that are weaker than the release tests would not seem to be continuous deli"	cottonseed	9.295536	-6.3433414	comment	4.0	13.0	1575262115	6.0297885
21709888	Uhh source on AVX512 not downclockin	Uhh source on AVX512 not downclocking on modern CPUs? We benchmarked ML workloads on the newest chips the cloud had to offer and the slowdown was a significant problem because, as the parent comment said, it is very hard to reason about whether the benefits of vectorized ops will outweigh the the reduced clock speed. Sometimes it does and sometimes it does not - which is a major problem when you have to specify instruction set when you build the ML library from source.Maybe you know something I don’t but that FPGA statement makes zero sense to me. The ASIC development cycle is measured in years - that’s why FPGA’s are valuable (and I thought they were relatively heavily used).	solidasparagus	9.422504	-5.486248	comment	4.0	18.0	1575518741	8.00708
21714658	My experience with ARM (locally anyw	My experience with ARM (locally anyway, raspberry pi's and pinebooks) is that everything works great, if it works.ARM binaries available? Great. You're all set. (hopefully its for the right generation of ARM though, I can't get SteamLink software to run on my pinebook because it does raspberry pi hardware version checks that obviously fail).Not available? You're gonna run into one of two scenarios:Closed source app? Sorry. Just never going to get it (unless you want to run it through qemu at a huge performance hit and YMMV).Open source app? Compile it yourself! Which takes noticeably longer than x86 for me. Maybe in server this works out. For desktop, compiling st myself was actually the path of least resistance to getting a terminal I liked. I wouldn't have wanted to compile firefox on AR	bisby	9.799791	-5.198946	comment	4.0	13.0	1575569704	-7.7982707
21733510	The caveat at the end of the article	The caveat at the end of the article is grounded in reality. I've personally experienced material precision bugs when running Intel-targeted code on AMD microarchitectures. These edge cases are very difficult to test for. The only reason we ever detected instances of these bugs is because we ran numerical codes at massive scales (finding the edge cases by brute force) and customers occasionally ran identical test workloads across both Intel and AMD clusters and compared numerical results. Every so often, something would surface.It is not Intel's responsibility to ensure that there is no obscure edge case in AMD's microarchitecture that may cause the MKL algorithms to give incorrect results on AMD silicon. MKL's design is based in part on Intel knowing the internal details of their own sili	jandrewrogers	9.306889	-5.317831	comment	4.0	16.0	1575763430	7.920958
21741462	"I like the infix notation e.g. ""Vi P"	"I like the infix notation e.g. ""Vi Pvj"" the Population count instruction, working on vector j as input and outputting into i the count of bits in each element.Versus Intel's vpopcntX reg1, reg2 where X determines element size.Seems like Cray had several 64*64 = 4096 bit vector register, but you worked on it only 64 bit at a time while as current Intel CPUs have 512-bit vector registers  up from 256-bit for AVX-2.Are those Intel vector register sizes going to increase until they catch up to the old Cray? Or was going up from 256 to 512 bit chosen to fit something else in the CPU architecture, like that you can fill the register in so many clock cycles?"	Erwin	9.837392	-5.8802485	comment	4.0	18.0	1575885092	8.018358
21757184	Is that actually better in this case	Is that actually better in this case? Intel found the issue internally. Nobody knows what it is. The advisory isn't sufficient information to figure it out. People can patch at their leisure, fairly sure that nobody is about to pop up with a 1-day exploit for it.With an open source CPU, by now someone would have looked at the commits that fixed the Verilog/microcode, figured out what the bug is, and there'd be a convenient command line tool to get root on the hypervisor uploaded to GitHub within an hour.This is one of those times when from a practical perspective proprietary seems to win.	thu2111	9.732523	-5.450249	comment	4.0	17.0	1576014235	7.8870034
39077191	Linus Torvalds on LLMs and other top	Linus Torvalds on LLMs and other topics	kvee	9.306593	-5.892104	story	4.0	52.0	1705832198	-8.1513
39097930	Could someone here with experience t	Could someone here with experience tell me about how important hyper-threading is in whatever code they have experience with?  In my prehistoric experience we got support from Intel to put hyper-threading code in a game around 2001-- that would have been with a Xeon processor.  Our mandate was clear but unwritten, have a particular level of the game perform much better on an Intel CPU then any other x86 and then talk about it.  As I recall we really had to jump through hoops to get a meaningful performance improvement.  It was more like we slightly crippled non hyper-threading cpus on a handful of assets.  We wanted to sell the game everywhere.  It was like, if you looked at a particular rock in a particular level you really could measure the difference.It probably got a lot better with th	georgeecollins	9.639538	-5.45658	comment	4.0	21.0	1705971640	8.148792
39110511	Was at Multiflow (Yale spinoff with 	"Was at Multiflow (Yale spinoff with Josh Fisher and John O'Donnell) '85-90 and saw the VLIW problem up close (was in the OS group, eventually running it).The main problem was compiler complexity -- the hoped-for ""junk parallelism"" gains really never panned out (maybe 2-3X?), so the compiler was best when it could discover, or be fed, vector operations.But Convex (main competitor at the time) already had the ""minisupercomputer vector"" market locked up.So Multiflow folded in early '90 (I had already bailed, seeing the handwriting mural) after burning through $60M in VC, which was a record at the time, I believe."	cpr	9.652994	-5.6725035	comment	4.0	16.0	1706047024	8.041293
39115522	Well, what actually killed it histor	Well, what actually killed it historically was AMD64. AMD64 could easily not have happened, AMD has a very inconsistent track record; other contemporary CPUs like Alpha were never serious competitors for mainstream computing, and ARM was nowhere near being a contender yet. In that scenario, obviously mainstream PC users would have stuck with x86-32 for much longer than they actually did, but I think in the end they wouldn't have had any real choice but to be dragged kicking and screaming to Itanium.	captaincrowbar	9.5683365	-5.2918153	comment	4.0	19.0	1706089799	-7.78765
39117147	Seems like identifying your library 	Seems like identifying your library with a git tag would drop that risk to zero.I guess what I'm not understanding here is the utility. Why is it useful to include multiple versions of a library in a project? Is this a limitation I've been coding around without knowing it?	flir	8.749881	-6.3229513	comment	4.0	14.0	1706103389	-11.681357
39139603	> If the application can’t saturate 	> If the application can’t saturate the CPU, there’s a fundamental problem. It’s a shame because it makes adding more servers less efficient. Money is being wasted on hosting costs, and this should be a priority to address.Talking about efficiency being a priority, but using RoR. I guess that is one way of saturating the CPU.	Hendrikto	9.92526	-5.392194	comment	4.0	26.0	1706251759	7.910966
39160906	There are a few:If you need rapid, r	"There are a few:If you need rapid, real time responses to external signals, the faster clocked 8 bitters are excellent!  Many chips can get into an interrupt service routine in just a handful of cycles.  In tandem with this, these devices can pack a lot of logic into a small amount of code.From Dallas Semi:   Our 1 clock-per-machine-cycle processors reached a remarkable performance goal—1 clock-per-machine-cycle, currently at 33 million instructions per second (MIPS).From Silicon Labs:  The proven 8051 core received a welcome second wind when its architecture lost patent protection
in 1998. [...]  The original Intel 8051 core took 12 cycles to execute 1 instruction; thus, at 12 MHz, it ran at 1million
instructions per second (1 MIP). In contrast, a 100 MHz Silicon Labs 8051 core will run a"	ddingus	9.57608	-5.224114	comment	4.0	24.0	1706397930	7.763868
39166206	I thought that Rowhammer was a thing	I thought that Rowhammer was a thing of the past. Out of curiosity I found code to test for this and ran it on some of my hosts. My old desktop - I7-4770K/DDR3 - was susceptible. My old server - Xeon X3460/DDR3+ECC - was not. I upgraded the desktop with components based on a Ryzen 7 7700X/DDR5. It tested not susceptible. I'm not sure if that's a result of RAM designed not to be susceptible or that (I think) DDR5 RAM uses modules with on die ECC.I was not able to test any of my Raspberry Pis because the test code used some facility available on the AMD64 architecture that is not available on the ARM64 processors. The newer Pi 4B and 5 use modules with on die ECC.It seems to me that ECC should prevent Rowhammer susceptibility. That should prevent it on server grade H/W for anything still in 	HankB99	9.612784	-5.6526713	comment	4.0	26.0	1706452933	-13.90819
39169802	Contemporary with the PDP-11 is the 	"Contemporary with the PDP-11 is the IBM Series/1 which runs the nuclear forces of the USA. The 8"" floppies were retired in 2019 though. Progress? I guess.Much older than that are the IRS Master files: the US tax system runs on IBM 7074 assembler although I think the actual 7074 hardware is long gone."	chx	9.751287	-5.290593	comment	4.0	20.0	1706475962	-7.3694425
39173706	> Rowhammer is a hardware problem --	"> Rowhammer is a hardware problem ---- defective RAM --- not a software one.It always amazes me how people can be so confident yet so wrong.It's a problem of physics - there's various ways to try to mitigate it but the only way to completely avoid it would probably be to use SRAM and that is going to be extremely expensive when talking 16GB and not nearly dense enough.It's not some conspiracy by ""Big RAM"""	bogantech	9.625113	-5.663302	comment	4.0	15.0	1706513372	-13.900597
39187445	Easier to work with files, I can gre	Easier to work with files, I can grep them, version them, diff them, edit them with any tool I want.	midasuni	8.846001	-6.4239945	comment	4.0	23.0	1706601249	-11.670697
39193524	The amount of support give by other 	The amount of support give by other posters here for Linus’ insane antisocial behavior is crazy.I would never, ever contribute upstream to Linux so long as Linus is involved. My time is too valuable to deal with his BS.He should realize the hostile environment he creates drives away contributors.	adastra22	9.331873	-5.8630023	comment	4.0	14.0	1706638273	4.2572465
39199050	Intel's flaw was trying to push DUV 	Intel's flaw was trying to push DUV to 10nm (otherwise known as Intel 7).Had Intel adopted the molten tin of EUV, the cycle of failure would have been curtailed.Hats off to SMIC for the DUV 7nm which they produced so quickly. They likely saw quite a bit of failed effort.And before we discount ARM, we should remember that Acorn produced a 32-bit CPU with a 25k transistor count. The 80386 was years later, with 275k transistors.Intel should have bought Acorn, not Olivetti.That's a lot of mistakes, not even counting Itanium.	chasil	9.331248	-5.232935	comment	4.0	14.0	1706668366	7.746687
39201644	(I'm curious about this story, as I 	(I'm curious about this story, as I am unfamiliar with it.)Why did that generation of core (Bulldozer) suck?What was it that AMD needed to do to fix the problem?(Links to relevant stories would be sufficient for me!)	bmer	9.262375	-5.188144	comment	4.0	13.0	1706692094	7.9292336
39202248	RISC-V Assembler: Arithmetic	RISC-V Assembler: Arithmetic	WillFlux	9.517662	-5.8052034	story	4.0	72.0	1706698002	-10.496484
39276582	> Use symbols and emoji where it mak	> Use symbols and emoji where it makes things clearer.for the love of god please don't. the yubikey-agent example provided exemplifies everything i dislike about github READMEs and whimsical user interfaces.on the technical side, symbols and emojis can render inconsistently among terminals, leading to potentially confusing messaging. on the artistic side, personal tolerances towards whimsy and playfulness vary wildly and should only be used very sparingly and ONLY if you know what you're doing (if you have to ask, you probably don't)	arrakeen	9.774235	-6.260588	comment	4.0	13.0	1707237797	-13.945595
39309496	Today we deploy to the cloud and wor	Today we deploy to the cloud and work on Arm/x86Do most web developers do things that have issues being cross platform?	bluedino	9.677615	-5.248728	comment	4.0	27.0	1707436627	-7.811505
39344333	So, what happens if this particular 	So, what happens if this particular FPGA no longer can be bought?Isn’t it more likely it will be possible to compile and run current C code on 22nd century hardware (possibly on some virtualization solution) than that it will be possible to compile and run FPGA code on 22nd century hardware?	Someone	9.087061	-5.32858	comment	4.0	12.0	1707743122	8.391031
32844615	It is really unfortunate that AVX-51	It is really unfortunate that AVX-512 has been such a mess when it came to support from Intel on their newer hardware platforms. I think Dr. Lemire has gone quite a ways in demonstrating that there's a lot of potential for software to see performance gains with this type of platform, but I think we'll need further improvements in developer experience before it's more commonplace.The other way to look at it is that quite frankly most business services just don't hit a performance barrier where you're sitting and waiting on a string operation. You're usually waiting on some sort of I/O.	dwrodri	9.443564	-5.5563345	comment	4.0	43.0	1663196329	8.066016
32847468	Business logic with tons of branches	Business logic with tons of branches is indeed not amenable to SIMD, nor is that where the compute is.In a world with 400 Gb/s NICs, being IO bound takes some doing. How much SW manages that without SIMD, even on multiple cores?	janwas	9.916491	-6.0754433	comment	4.0	15.0	1663220024	8.199731
32874453	10 billion RISC-V cores were shipped	10 billion RISC-V cores were shipped last year - mostly you wont see them because they're heavily embedded - in disk drives/etc - used to be every flash drive had an ARM core in it and paid a few pennies to ARM, that's likely to change quickly	Taniwha	9.389852	-5.6095414	comment	4.0	32.0	1663384490	-10.542465
32874764	What benefits does RISC-V have over 	What benefits does RISC-V have over ARM besides it being open/free?	tiffanyh	9.408279	-5.6591077	comment	4.0	20.0	1663388931	-10.550148
32890615	Is riscv really a rival in the embed	Is riscv really a rival in the embedded space?	kramerger	9.37212	-5.700796	comment	4.0	16.0	1663528979	-10.597933
32891298	It would be interesting to have a mo	It would be interesting to have a more detailed understanding of why these are the latencies, e.g. this repo has ‘clusters’ but there is surely some architectural reason for these clusters. Is it just physical distance on the chip or is there some other design constraint?I find it pretty interesting where the interface that cpu makers present (eg a bunch of equal cores) breaks down.	dan-robertson	9.631123	-5.192627	comment	4.0	15.0	1663533549	7.7926693
32891615	Not yet at least anyway.RISC-V is ea	Not yet at least anyway.RISC-V is eating their lunch. There will be a myriad of Chinese design houses and fabless manufacturers churning out cheap cores for use in almost everything. When you're making a CPU core for a microwave or cheap trinket even a few pennies saved by not having to pay for an ARM license matters. And the freedom to alter the design as you see fit is worth its weight in gold in a hyper-competitive market	UltraViolence	9.386898	-5.564072	comment	4.0	42.0	1663536134	-10.560102
32893121	Why does CPU=8 in Intel Core i9-1290	Why does CPU=8 in Intel Core i9-12900K have fast access to all other cores? It is interesting.	moep0	9.451697	-5.2138557	comment	4.0	15.0	1663549734	7.8254623
32893498	A few years ago I would have agreed 	A few years ago I would have agreed with this hierarchy but having recently replaced my relatively powerful i7 laptop with an ARM based one and experienced a significant improvement in my use cases, I’d say ARM most definitely poses a threat to x86 for the majority of consumer use cases.	PebblesHD	9.671521	-5.285794	comment	4.0	21.0	1663553444	-7.7369137
32896443	I still don't understand how RISC ma	I still don't understand how RISC machines can outperform CISC ones on the desktop.Is it just the intel/AMD duopoly causing stagnation?  or something fundamental?	RobotToaster	9.450819	-5.679327	comment	4.0	15.0	1663582969	-10.547558
32917612	Why I’m not excited about RISC-V	Why I’m not excited about RISC-V	loop22	9.373995	-5.694115	story	4.0	6.0	1663706956	-10.635592
32926753	A Case for Self-Managing DRAM Chips	A Case for Self-Managing DRAM Chips	rbanffy	9.736544	-5.2906265	story	4.0	24.0	1663775041	8.053506
32951841	> it's difficult to imagine what kin	"> it's difficult to imagine what kind of new physics would let someone fit that many bytes into a machine that's practical to control with a single Linux kernel instance.I nominally agree with most of your post. But I should note that modern systems seem to be moving towards a ""one pointer space"" for the entire cluster. For example, 8 GPUs + 2 CPUs would share the same virtual memory space (GPU#1 may take one slice, GPU#2 takes another, etc. etc.).This allows for RDMA (ie: mmap across Ethernet and other networking technologies). If everyone has the same address space, then you can share pointers / graphs between nodes and the underlying routing/ethernet software will be passing the data automatically between all systems. Its actually quite convenient.I don't know how the supercomputer soft"	dragontamer	9.898025	-5.288078	comment	4.0	46.0	1663940507	8.120152
32951925	> Matthew Wilcox took the stage to m	> Matthew Wilcox took the stage to make the point that 64 bits may turn out to be too few — and sooner than we thinkLet's think critically for a moment. I grew up in the 1980s and 1990s, when we all craved more and more powerful computers. I even remember the years when each generation of video games was marketed as 8-bit, 16-bit, 32-bit, ect.BUT: We're hitting a point where, for what we use computers for, they're powerful enough. I don't think I'll ever need to carry a 128-bit phone in my pocket, nor do I think I'll need a 128-bit web browser, nor do I think I'll need a 128-bit web server. (See other posts about how 64-bits can address massive amounts of memory.)Will we need 128-bit computing? I'm sure someone will find a need. But let's not assume they'll need an operating system designe	gwbas1c	9.892951	-5.3668942	comment	4.0	17.0	1663940922	7.9644995
32963512	I still wonder why neither qemu nor 	I still wonder why neither qemu nor any other (open-source) emulator ever tackled Itanium emulation.Is the CPU architecture so complicated? Is it so undocumented? I would think that projects like MAME have in the past reverse-engineered and emulated much more complicated and undocumented systems (some of which were even encrypted).So why don't we have any Itanium emulators yet?	dark-star	9.56098	-5.5588374	comment	4.0	14.0	1664032979	-7.724313
32983460	Zen 4 (Raphael) desktop CPUs will ha	Zen 4 (Raphael) desktop CPUs will have it. Right now, Zen 3 (Chagall) and Zen 4 Threadripper (Storm Peak) don't currently have plans for integrating it, but that may be subject to change. I cannot provide proof, but I sure as hell am never buying Zen 4 or later AMD Desktop CPUs ever again for a system that will be connected to the internet.	anonym29	9.272187	-5.198043	comment	4.0	19.0	1664202108	7.971423
32983549	I recall that back in the 90s, besid	I recall that back in the 90s, besides higher clock speeds, one of the greatest reasons for excitement about a new CPU was instruction set extensions (MMX, 3DNow, etc), which could give outsized performance gains when software was updated to work with them. This latest release from AMD has similar cause for excitement: AVX-512 is more than just larger vectors, it also doubles the number of registers, adds per-lane mask registers, and other enhancements; unlike with Intel processors, there should be no worry of slowing down the clock for the whole processor when using these instructions with larger vectors, and unlike with Intel, we can reasonably expect that every AMD processor from now on will always have these instructions enabled.	cesarb	9.468365	-5.5059514	comment	4.0	23.0	1664202451	8.018941
32983454	"Excellent Teardown by ""Mysticial"" fr"	"Excellent Teardown by ""Mysticial"" from mersenneforum.org.Cliffnotes:* Zen4 AVX512 is mostly double-pumped: a 256-bit native hardware that processes two halves of the 512-bit register.* No throttling observed* 512-bit shuffle pipeline (!!). A powerful exception to the ""double-pumping"" found in most other AVX512 instructions.* AMD seemingly handles the AVX512 mask registers better than Intel.* Gather/Scatter slow on AMD's Zen4 implementation.* Intel's 512-bit native load/store unit has clear advantages over AMD's 256-bit load-store unit when reading/writing to L1 cache and beyond."	dragontamer	9.359882	-5.3928094	comment	4.0	34.0	1664202098	8.052552
32985570	Unrelated but I would love to figure	Unrelated but I would love to figure out why my AMD system will completely lock up (including the mouse) under certain tasks with high CPU loads (in ubuntu). Rendering with Kdenlive is a great way to lock up my entire system for example. It is so irritating it makes me want to go to an intel system even though I have a very nice CPU and mobo.	TaylorAlexander	9.347777	-5.2018833	comment	4.0	13.0	1664212169	7.8706846
32987192	No one is going to be able to seriou	No one is going to be able to seriously use and support AVX512 (or be sufficiently motivated to implement support for it in their libraries and especially applications) until Intel finally gets its act together with regards to AVX512 and decides it actually wants to commit to it being a thing.The AVX2 rollout was (comparatively) flawless. The gains AVX512 brings over AVX2 are, for most people w/ specialty libs excluded, not worth dealing with the terrible CPU support. And Intel just keeps making the situation worse, taking one step forward and two back.	ComputerGuru	9.443471	-5.5405126	comment	4.0	23.0	1664220513	8.059717
33000152	Living through that era, I recall th	"Living through that era, I recall that Linus Torvalds talked a lot of smack about the 80286. The 386 was just so much better for implementing Unix on that they didn't even want to deal with it.So there seems to be this uncanny valley between 8086 and 386, where a lot of people either dragged their feet or jumped forward as soon as they could.My transition to a 386 was very abrupt, facilitated by a Christmas present that could not run on an 8086 machine. But one of the first things I installed on it was Windows, and I went from ""How will I ever fill up a 40MB hard drive?"" to ""oh wow it's almost half full already"" in a matter of weeks. I suspect a lot of people were experience 'sticker shock' with respect to file size inflation as well, leading to more foot dragging."	hinkley	9.73378	-5.2111263	comment	4.0	15.0	1664307755	-7.8599443
33019038	I'm reminded of ... that ... Was it 	I'm reminded of ... that ... Was it power cpu or risc? The one with the 1024 cpu cores. I did a search but can't find it.Essentially 1024 cores soc server, affordable. Compared to that 64 cores sounds rather unimpressive. IMHO.	lakomen	9.493467	-5.1911197	comment	4.0	13.0	1664450607	7.843585
33031479	There are fundamental issues with x8	There are fundamental issues with x86 that make it impossible to match the efficiency of ARM. Variable length instruction coding for instance, which means a surprising amount of power is dedicated to circuitry which is just to find where the instruction boundaries are for speculative execution. Made sense in the 80s when memory was scarce and execution was straightforward, but now it’s a barrier to efficiency that’s baked right into the ISA.	cylon13	9.686059	-5.505891	comment	4.0	15.0	1664517575	-7.7301917
33059665	And there were earlier processors th	"And there were earlier processors that had cache; WP cites the IBM 360/85 (01969) and the Atlas 2 (01964–01966) as the first computers with CPU cache.I'm curious when the first microprocessor with cache was, since the 801 wasn't a microprocessor; the article mentions the 68040 from 01990 with a split on-die L1 cache (4K+4K), but the 68030 in 01987 had 256B+256B, and the 68020 in 01984 had 256B icache.  The 68010 had a 6-byte instruction ""cache"" which allowed it to execute two-instruction loops without fetching instructions, but I don't think that counts.I think maybe the RISC II (01983) or the RISC I (01982) might have had a cache before the 68020.  Katevenis's dissertation is at https://archive.org/details/reducedinstructi0000kate but it isn't open access and I haven't read it.  It had th"	kragen	9.662675	-5.5084796	comment	4.0	28.0	1664741136	8.191841
31777080	The text tries to introduce the idea	The text tries to introduce the idea of a “narrow waist” as an architecture pattern. But I don’t fully understand how the author distinguishes this concept from similar ones, and some of the examples even seem to contradict the principles.It supposedly solves the N*M problem (so it’s an interface?), but it can’t be statically typed (so the interface has to be implicit?), and success stories are HTML5 and the x86 ABI (so it does require explicit specification after all, and huge amounts of it? Just look at the size of that Intel ABI book…), but also, it must be plaintext (so not like x86 at all?).I’m not trying to be mean because maybe there’s something there that I miss, but frankly, I don’t get it, at least not yet.	codeflo	9.652946	-5.4851756	comment	4.0	23.0	1655468822	-7.743978
31799349	If failure really was a foundation f	If failure really was a foundation for success, we reimplement all these technologies we software emulate now and where the patent has expired so we could implement them in hardware, including the firmware by hardbaking it as an ASIC (certainly ASIC memory is more dense than flash and obviously more so than SRAM).For example, putting a pre-Y2K pentium on a chip with soundblaster, using diodes for power, and using wireless communication. It'd make the RISC-V ESP32 look wimpy.The state of modern technology is shameful.	sassy_quat	9.408712	-5.5800467	comment	4.0	14.0	1655646468	-10.551082
31822988	I have to admit, as useful as some o	I have to admit, as useful as some of these extension specs may be, it makes me feel like the RISC part of RISC-V is slowly falling by the wayside.	coldacid	9.377827	-5.707085	comment	4.0	37.0	1655814127	-10.560746
31823040	4 new specs1. UEFI2. Supervisor Bina	4 new specs1. UEFI2. Supervisor Binary Interface3. Efficient Trace/Debug4. Zmul only.  This is the one that confused me.> “For many microcontroller applications, division operations are too infrequent to justify the cost of divider hardware,” explained Himelstein. “The RISC-V Zmmul extension will benefit simple FPGA soft cores in particular.”This doesn't look like bloat to me.  But I have no experience in RISC V.	prettyStandard	9.436043	-5.695918	comment	4.0	31.0	1655814545	-10.580846
31824304	I think what we really need is a con	I think what we really need is a constant-time coprocessor. An FPGA would be ideal, since you can reconfigure it to support new/improved algorithms over time. It's much easier to defend against side-channels when you have control over the hardware. Are there any products or projects in this direction? Ideally, you'd have a drop-in software library replacement, which would redirect all relevant operations to the hardware.	Retr0id	9.238541	-5.3135624	comment	4.0	13.0	1655821599	8.235178
31825701	RV64C is typically more dense than x	RV64C is typically more dense than x86-64, but RV64 is about the same. RVC is an ISA extension and not all implementations support it.	jeffbee	9.63468	-5.749979	comment	4.0	21.0	1655828336	-10.449473
31826135	I think RVC is more or less universa	I think RVC is more or less universal if we're talking higher end than really simple micro-controllers or university student projects.	jabl	9.533071	-5.682445	comment	4.0	15.0	1655830188	12.286237
31841287	Ask HN: Anyone using cloud based FPG	Ask HN: Anyone using cloud based FPGA for non-ML tasks?	tonmoy	9.088316	-5.368762	story	4.0	10.0	1655928816	8.400717
31874526	A RISC-V laptop or mini PC with Rock	A RISC-V laptop or mini PC with Rockchip RK3588-class performance may be coming	watchdogtimer	9.389109	-5.415545	story	4.0	18.0	1656158657	-10.572132
31878172	PDP-8 Small-C Compiler (2012)	PDP-8 Small-C Compiler (2012)	twoodfin	9.852492	-5.6363597	story	4.0	58.0	1656186631	-7.500887
31911923	Ask HN: CI in 2022	Ask HN: CI in 2022	parentheses	9.238169	-6.4070015	story	4.0	20.0	1656444253	6.1265664
31925355	At Intel they probably still have ni	At Intel they probably still have nightmares about iAPX 432. They are not going to try an OO architecture again.Having said that, I wouldn't be surprised if some form of segmentation became popular again.	gpderetta	9.517125	-5.2762203	comment	4.0	13.0	1656534636	7.645276
31938276	tangential question: if i wanted to 	tangential question: if i wanted to poke around with the risc-v isa (like add an instruction) and then wanted to add support to an emulator, compiler and operating system for that instruction, is there an emulator, compiler and operating system that are best suited for this sort of isa experimentation?	a-dub	9.403805	-5.600914	comment	4.0	17.0	1656621505	-10.485799
31938746	what if i said risc-v isn't as impor	what if i said risc-v isn't as important (to start), but rather just a dead simple isa with a dead simple emulator, compiler and operating system (like something that can take cross-compiled binaries and run them with basic input and output).like i'd like to experiment with novel ideas in the area, but ideally would like to avoid getting into the complexity of real compilers, operating systems and emulators until the ideas are looking proven...i can go looking more for stuff myself (maybe toy mips stuff used in schools or something) but this seems like something that people would do and therefore there'd be known tooling?	a-dub	9.407065	-5.6506963	comment	4.0	12.0	1656623912	-10.590617
31941735	I've been chroot wrong for years. I 	"I've been chroot wrong for years. I learned recently that it's ""shroot"" not ""C. H. root"""	jonathanoliver	9.760329	-6.4324703	comment	4.0	14.0	1656644132	-14.009673
31952799	The first RISC-V laptop announced wi	The first RISC-V laptop announced with quad-core CPU, 16GB RAM, Linux support	marcodiego	9.390281	-5.6424556	story	4.0	64.0	1656709091	-10.578152
31951696	for people who want to try this with	for people who want to try this with real hardware I would recommend the 3com 3c503 as the best choice of 16-bit ISA bus interface card. Or a real NE2000. There were some weird NE2000 clones back in the day that were not so great.	walrus01	9.552248	-5.3830547	comment	4.0	16.0	1656704560	-7.6991606
32013212	RISC architecture is going to change	RISC architecture is going to change everything	NoblePublius	9.384288	-5.672253	comment	4.0	14.0	1657197255	-10.5919895
39354465	The last time I looked I tried to de	The last time I looked I tried to deploy a python MVP on ARM but found that some of the dependencies weren't compatible. I'd take a hard look at your ecosystem and what sort of dependencies you're likely to need in the future before committing to ARM.	8organicbits	9.826881	-5.248609	comment	4.0	16.0	1707798846	-7.8481154
39379480	Reverse engineering a forgotten 1970	Reverse engineering a forgotten 1970s Intel dual core beast: 8271 (2020)	signa11	9.594545	-5.3132997	story	4.0	115.0	1707975348	-7.0423164
39409110	What do people think ECC is going to	What do people think ECC is going to do for them, and what do they think will happen when an ECC event is triggered?	sys_64738	9.463039	-5.5401893	comment	4.0	17.0	1708175386	8.323788
39409318	I envy you. A life with zero problem	"I envy you. A life with zero problems.... I think you're probably the only person in the universe so fortunate.Here's the basic set of problems:1) ECC is almost free if done at scale (e.g. every computer). The only reason it costs extra is that it is only done for high-paying customers and in limited volume.2) Computer crashes cost lives. If e.g. your doctor's device has an issue mid-surgery, you potentially pay.3) It's good for the economy. In either case, the cost savings of not having a call center rep say ""Wait a minute. My computer just crashed."" far outweighs the costs.4) It's critical for resilience. Disasters (solar flares, EMP, etc.) are rare, but if every computer destroys data, we have a systemic problem.5) The issue primarily is one of transparency. Most people don't realize it"	frognumber	9.495813	-5.5094714	comment	4.0	23.0	1708177344	8.257652
39409077	I wish regulators would step in to e	I wish regulators would step in to enforce ECC in consumer devices.Otherwise, organizations such as Microsoft (windows readyness logo) or RISC-V (application profiles such as RVA23) could make it a requirement.It is clear that we can't just rely on the hardware vendors to do it, and practically nobody should be running computers w/o ECC.	snvzz	9.437043	-5.491164	comment	4.0	62.0	1708175141	8.208255
39426907	Someone correct me if I am wrong but	Someone correct me if I am wrong but isn't DDR5 ECC by default? I know this from an anecdote that I used to enable XMP all the time in my builds and run RAM stability tests, none ever caught anything but on my DDR5 builds, if I turned on XMP and played a game for an extended period, I'd get a BSOD after 4-5 hours, which I figured is the ECC built into DDR5 flagging something unexpected.	steelbrain	9.471694	-5.502085	comment	4.0	20.0	1708326200	8.176096
39433147	X86 and ARM are practically the same	X86 and ARM are practically the same these days in performance.Let me explain RISC vs CISC, RISC is Reduced Instruction Set Computer and CISC is Complex Instruction Set Computer. The base component instruction sets of x86 are CISC. The base component instruction sets of ARM are RISC.When technology evolves and newer instruction sets are required to handle those tasks they can often become more complex and so today with the variety of instruction sets on both x86 and ARM they are closer to each other more than ever. Still different.Now going to the differences between ARM and x86 where it matters. ARM has the lowest power draw to performance ratio but it's need for power skyrockets as it approaches more complicated tasks. x86 starts higher in power draw but its performance is pretty maintai	Sparkyte	9.585737	-5.4519305	comment	4.0	25.0	1708368005	-7.8190513
39435953	Yep, I've heard that actually someth	Yep, I've heard that actually something like 80% of the energy of the CPU is used by the front-end! Beyond decoding, you also have all the energy spent on scoreboarding data dependencies and reordering the instructions and scheduling to execution ports. If you can do that 8x less as in the case for SIMD, that's a huge win!	sakras	9.770093	-5.598504	comment	4.0	19.0	1708384279	8.020276
39452960	AMD's RISC CPU	AMD's RISC CPU	hasheddan	9.398258	-5.6572204	story	4.0	48.0	1708518377	-10.567488
39461713	Oh man, he'd been on our (Xfce) mail	Oh man, he'd been on our (Xfce) mailing list for a while, sending a ton of merge requests for various cleanups to our window manager and other components.  While I wouldn't say what he was doing was completely useless, it was generally not super helpful, didn't really need to be done, and mainly just caused code churn.  On my less charitable days it felt like he was just trying to get his name out there and into the commit history of a lot of projects, but the time and effort he was spending was probably too much if that was the motivation.Several of his MRs ended up becoming out of date and full of merge conflicts because of other work that was being done, and it just seemed like a waste of time to me.Someone downthread posted a link where Linus Torvalds himself excoriates this guy for po	kelnos	9.288866	-5.894123	comment	4.0	25.0	1708563162	4.331767
39472810	Phind-70B worked well for me just no	Phind-70B worked well for me just now: https://www.phind.com/agent?cache=clsxokt2u0002ig09n1e11bj9.For writing/manipulating code, Chat mode might work better than Search.	rushingcreek	8.829351	-5.96061	comment	4.0	12.0	1708634118	-11.0713
39513789	Almost every couple of years (and on	"Almost every couple of years (and once a decade for something ""big"") there is a new development in the area mostly driven either by clueless software guys that wandered outisde their turf into hardware territory, or some university chair that sits in the undefined limbo between hardware and software (usually doing something in the realm of CGRAs) that has to justify its existence by offering a PhD to some guy that will create a new RTL IR or another deadborn HLS.   
Developing hardware is a solved problem. Has been for decades. And no, writing a sentence in your white paper that says something like ""existing HDLs operate on gates and cycles and its not an appropriate level of abstraction for us"" is not enough of a justification. If you need a fancy pseudo-DSL to hold your hand to be able t"	artemonster	9.111094	-5.458833	comment	4.0	21.0	1708967154	8.497317
39537192	Was Eunuchs, an OS that runs only on	Was Eunuchs, an OS that runs only on 8088 CPUs, a joking reference to Linux?	GTP	9.82783	-5.2148037	comment	4.0	20.0	1709124695	-7.9768763
39555701	I agree that this helps, although I 	I agree that this helps, although I still think that in general, the default build should never do -Werror, since people may use other toolchains and it shouldn't surprise-break downstream (I'm pretty sure this is a problem Linux distros struggle with all the time..) If it does it only in your fully reproducible CI, then it should be totally fine, of course.	jchw	9.841369	-6.396512	comment	4.0	28.0	1709243694	6.41887
39599732	I never really understand how HDL wo	I never really understand how HDL works.I meant, in software programming, we usually program by either specifying the sequence or dependency.In hardware, nothing runs sequentially, and signals propagate _with delay_.  Everything happens at the same time, yet nothing run at the exact same moment. How could we express these chaos in for-loops and procedure look alikes?	j16sdiz	9.103303	-5.493034	comment	4.0	15.0	1709616018	8.603883
39600747	Every time I see one of these pop up	Every time I see one of these pop up, the thought that software engineers are forever trying to avoid knowledge, understanding, and wisdom with another layer of abstraction comes to mind.I’m all in favor of a better HDL. Verizon/SystemVerilog is loaded with completely non-obvious landmines. I’ve been doing this so long I forget they are there, but it’s pretty painful seeing someone new to the language step on them.  But the alternative, VHDL has largely fallen out of favor in the  US.You would be hard pressed to find a more strongly typed language than VHDL, but damn is it verbose.  None of the footguns, but you might get an RSA before you finish typing the code in. If you have ever given Ada a try, VHDL will look pretty familiar.I know this may be a weird thing for software folks to think	FPGAhacker	9.102833	-5.502336	comment	4.0	18.0	1709627380	8.615239
39633201	I'm a professional chip designer. An	I'm a professional chip designer. And as somebody who's had to build this sort of internal tooling myself, I think this sort of product is desperately needed!It makes sense to start with Verilator, because it's fast, easy, and open source, but it seems like it'll fall short on a lot of metrics. It seems like the big challenge is going to be making sure your tool can do everything that chip designers actually need to do. I remember spending almost a week bringing up gate-level simulation, which was a huge pain in the ass because our design used an ILM-based hierarchy. Handling things like X-propagation, timing constraints, mixed-language designs, and non-synthesizable models for mixed-signal IP is going to be really tricky, especially because they work differently in every simulator.Is ther	zachbee	9.1141815	-5.444413	comment	4.0	17.0	1709838099	8.464811
32025211	Agiler: An adaptive heterogeneous ti	Agiler: An adaptive heterogeneous tile-based many-core arch for RISC-V	rbanffy	9.388675	-5.6793237	story	4.0	35.0	1657275894	-10.590643
32072291	Oh no, not again.If there are enough	Oh no, not again.If there are enough of these attacks that don't involve ARM (I know some do), then I see a bright future for ARM servers.[edit]: Curious to see if Zen3 is also affected - if not, that would be great news.	uniqueuid	9.530501	-5.205693	comment	4.0	26.0	1657643280	-7.76465
32077853	RISC-V Linux on ESP32	RISC-V Linux on ESP32	tomcam	9.419138	-5.655293	story	4.0	132.0	1657674616	-10.519864
32084887	Expanding the Tau VM family with Arm	Expanding the Tau VM family with Arm-based processors	ashvardanian	9.741409	-5.2291255	story	4.0	69.0	1657729539	-7.900648
32096384	I'm more worried about the inflation	I'm more worried about the inflation of emoji than a couple dozen unused ghost JIS characters.	einpoklum	9.837285	-6.266427	comment	4.0	19.0	1657808340	-13.960858
32125416	Apple will allow Linux VMs to run In	Apple will allow Linux VMs to run Intel apps with Rosetta in macOS Ventura	tosh	9.873301	-5.2923293	story	4.0	25.0	1658048022	-7.903002
32135222	> Moreover, can you influence GCC ov	> Moreover, can you influence GCC over what instructions it emits? On Gentoo for example, you can setup your make file so that the while system is compiled with your specific processor in mind.For what it's worth, this is largely unnecessary nowadays. Tuning for a specific processor used to allow the compiler to use instruction scheduling and enabled use of SSE instructions. However:1) Modern x86 CPUs all use out-of-order execution, making instruction scheduling unnecessary. (Some older Atom CPUs are in-order, but their performance is pretty awful even with instruction scheduling.)2) If you're building for x86_64, you can assume a certain baseline of instruction set support -- in particular, CMOV, SSE, and SSE2 instructions are always available on any 64-bit CPU. While these don't cover al	duskwuff	9.872345	-5.914886	comment	4.0	19.0	1658124334	-7.6093473
32148618	Wow that is really cool. Here's the 	"Wow that is really cool. Here's the GitHub link without Twitter tracking, BTW: https://github.com/chip-red-pill/MicrocodeDecryptorEspecially considering how they gained this knowledge:""Using vulnerabilities in Intel TXE we had activated undocumented debugging mode called red unlock and extracted dumps of microcode directly from the CPU. We found the keys and algorithm inside.""And looking further down, some X86 instructions (that people would usually call low-level) actually trigger execution of an entire ELF binary inside the CPU (implemented in XuCode). Just wow."	fxtentacle	9.626067	-5.4212294	comment	4.0	105.0	1658216482	-7.356224
32159573	While this is interesting, the proje	While this is interesting, the project page is a little light on what it can do. Can the RPi feed streams of instructions to the N64? Can it act as a co-processor?EDIT: more info on Twitter apparently: https://twitter.com/kbeckmann/status/1539738410063208454	mmastrac	9.638567	-5.332866	comment	4.0	19.0	1658275173	-7.3903623
32173609	I'm a British english speaker, I pro	I'm a British english speaker, I pronounce it dram. I didn't know there are people who pronounce it D-RAM.	moreati	9.717702	-5.289884	comment	4.0	14.0	1658358559	7.9629683
32232185	TBH I'm still flabbergasted that mod	"TBH I'm still flabbergasted that modern SoCs will ""just put a CPU there"" rather than a DMA, because we can actually afford it. 6502 cores are sprinkled around like fairy dust."	AceJohnny2	9.528235	-5.269965	comment	4.0	30.0	1658790837	7.8719797
32234254	I prefer using the alphabet for all 	I prefer using the alphabet for all writing, because emojis are not freely and universally available everywhere :)	roschdal	9.810458	-6.2671986	comment	4.0	12.0	1658809853	-13.962736
32236233	No, they are not. But almost no one 	No, they are not. But almost no one uses emoji to compose sentences anyway.	klntsky	9.817842	-6.261336	comment	4.0	13.0	1658828946	-13.959734
32253175	I very much prefer this simple metho	"I very much prefer this simple method:https://www.atlassian.com/git/tutorials/dotfilestl;dr: it puts the .git directory aside and lets you use it to store any files on your filesystem.All the usual commands work, except you use something like `config` or `dofiles` instead of `git`:  $ config add ~/.config
  $ config commit -m initial\ commit

It's pretty much the same as creating a git repository in /, but doesn't mess with your normal git usage (so if you run `git status` in `/home/foo/src/my-awesome-project` and git repository has not been created there yet, git will fail with ""not a git repository"" and won't show you the contents of your whole filesystem tree)."	5e92cb50239222b	8.787786	-6.397426	comment	4.0	15.0	1658941790	12.293181
32261512	I think that it would be better if I	I think that it would be better if I could use 64-bit kernel with 32-bit applications.32-bit applications are better in almost every aspect: they use smaller ints and pointers and use less memory, they can be used on both 32-bit and 64-bit systems, they don't waste energy on computing extra bits. The only disadvantage is that they cannot use more than 2Gb of RAM, but almost every aplication I use doesn't need so much RAM. On x86, 32-bit apps also have slightly less GPRs.So the perfect solution would be a 64-bit kernel with mostly 32-bit applications except for those cases when you need more than 2Gb of RAM.But instead many developers refuse to provide 32-bit versions of applications for Linux, and provide worse 64-bit versions. And Linux distributions compile everything for 64-bit, even if	codedokode	9.8598585	-5.342725	comment	4.0	16.0	1658994277	-7.8762336
32275597	Show HN: Shrug Emoji site for lazy p	Show HN: Shrug Emoji site for lazy people	yucelfaruksahan	9.782926	-6.252612	story	4.0	8.0	1659094057	13.034605
32290606	> And why you're still on a 32-bit s	> And why you're still on a 32-bit systemThere is a lot of 32 bit microcontrollers, most notable stm32	borschtplease	9.872843	-5.2776427	comment	4.0	12.0	1659217180	-7.8829947
32298385	They need OpenGL ES 3, and apparentl	They need OpenGL ES 3, and apparently the Star64 will have that, remains to be seen how performant the GPU is:https://www.imaginationtech.com/product/img-bxe-2-32/Anything between VideoCore 6 and Jetson Nano would make Risc-V interesting!	bullen	9.314322	-5.514905	comment	4.0	23.0	1659298449	7.613138
32306582	In short: there are three 32-bit crc	In short: there are three 32-bit crc32 pipelines on modern Intel CPUs, but also a clmul (carry less multiplication) instruction in AVX on a separate pipeline.clmul was designed as a more general crc32 accelerator for the SIMD instructions set. (It is sufficiently general to also do Reed Solomon and Elliptical Curves. ARM has an equivalent pmul instruction if you are curious).The traditional methods are to either use crc32 instruction, or the CLMUL instruction.This blog post uses both instructions for maximum speed. Modern processors can execute different pipelines in parallel. So by placing CLMUL and crc32 instructions next to each other, you get the parallel execution with high efficiency.It is tricky to calculate crc32 in parallel using two different instructions / methodologies interlea	dragontamer	9.69716	-5.7115927	comment	4.0	27.0	1659364716	-9.59587
32307564	Indeed.My personal thoughts is that 	Indeed.My personal thoughts is that we should design a CPU where these kinds of pipelines / executions are more explicit, and then write magic compilers that can pull parallelism out of our programs to be in the more explicit parallelism form that this new CPU would prefer. You'd still be tied to an architecture, but moving to a new architecture (ie: 2x SIMD pipelines in the future) would be as easy as recompiling, in theory.Then I realized that I've reinvented VLIW / Intel Itanium. And that's a silly, silly place and we probably shouldn't go there again :-p--------The MIMD (multiple-instruction multiple data) abilities of modern CPUs are quite amazing in any case, and its always fun to take advantage of it. Even with a singular instruction stream like in this example, it is obvious that m	dragontamer	9.657939	-5.676205	comment	4.0	16.0	1659368179	8.127106
32314700	Parallel Programming for FPGAs	Parallel Programming for FPGAs	bjourne	9.101639	-5.4052877	story	4.0	80.0	1659409416	8.421362
32333849	The CISC vs RISC point Ben makes is 	The CISC vs RISC point Ben makes is key here. Intel could have been a big player in mobile: it put too much focus on x86 though when it could have been making (its own or others) Arm based SoCs.Edit: not that Arm is necessarily RISC - but it certainly takes an approach that is different to x86 and better suited to mobile.	klelatti	9.471762	-5.5810375	comment	4.0	14.0	1659544287	-10.385387
32377612	Is there any functional difference b	"Is there any functional difference between any of those characters and emoji? To me they're all just ""standard characters"""	delusional	9.833154	-6.258591	comment	4.0	13.0	1659889206	-13.965246
32411832	Does anyone know why cards did not m	Does anyone know why cards did not map video memory into the C000-C800 or the D000-E000 segments? Did many machines have an option ROM or expanded memory there?	rzzzt	9.779528	-5.272416	comment	4.0	12.0	1660139197	8.185402
32436119	I always thought it was like trying 	I always thought it was like trying to find a bug by measuring the CPU voltage.	lvncelot	9.543014	-5.196663	comment	4.0	15.0	1660295339	7.7566833
32447374	The Intel 80376 – A legacy-free i386	The Intel 80376 – A legacy-free i386 with a twist (2010)	anyfoo	9.53694	-5.1941457	story	4.0	102.0	1660371225	7.6685247
32473083	Instruction decoding is a bottleneck	Instruction decoding is a bottleneck for x86 these days: Apple M1 can do 8-wide decode, Intel just managed to reach 6-wide in Alder Lake, and AMD Zen 3 only has a 4-wide decoder. One would think that dropping legacy 16-bit and 32-bit instructions would enable simpler and more efficient instruction decoders in future x86 versions.	unnah	9.609535	-5.469716	comment	4.0	38.0	1660586465	-7.7221923
32473237	As the article points out, modern x8	As the article points out, modern x86 CPUs boot up in 16 bit mode, then get transferred into 32 bit mode, then 64 bit mode. So right out the gate such a CPU is not compatible with existing operating systems, so now you have a non-compatible architecture. Sure Intel could easily add support to GRUB and push Microsoft to do it for new Windows media, but that won't help the existing install base.  Intel tried launching a non-compatible CPU once, it was Itanium, it didn't go so well for them.Plus I'm sure there's crazy DRM rootkits that depend on these implementation details.Also, AMD has experimented with not-quite-PC-compatible x86 setups already in the consoles. As the fail0verflow talk about Linux on PS4 emphasised, the PS4 is x86, but not a PC. So despite building a x86 CPU with some less	Macha	9.395977	-5.2160287	comment	4.0	23.0	1660587092	7.8232975
32474350	> The 80376 doesn’t do paging.Wait -	> The 80376 doesn’t do paging.Wait - what? How is that even possible? Do they simply not have an MMU? That makes it unsuitable for both old OSes and for new OSes. No wonder it was so uncommon.	johnklos	9.868742	-5.380789	comment	4.0	25.0	1660592517	8.359416
22038007	Highlights from Git 2.25	Highlights from Git 2.25	guessmyname	9.061767	-6.2975225	story	4.0	103.0	1578945641	12.718045
22073757	I've worked for many companies that 	I've worked for many companies that had fully automated CI/CD pipelines. If you have a good team which cares about the project, then you don't really need them IMO.The reality of most big corporations is that nobody actually cares about the company. Executives can't trust their engineers to run the tests manually and deliver something that works.If you have a good hiring and promotion process and a fair compensation structure (which none of the big corporations have), then you can trust your employees and so you don't need to micromanage them with automated CI/CD pipelines. In addition, if people actually care, you get much higher quality, more succinct code.No amount of automated checking can lead to improved code quality. It only ensures that the absolute minimum operational requirements	cryptica	9.375115	-6.4127383	comment	4.0	15.0	1579260333	6.1097074
22116918	Going to start a project in in FreeP	Going to start a project in in FreePascal soon because it seems to be the only [not abandonware] compiler for a high level language that still supports targeting 8086.	non-entity	9.755404	-5.626482	comment	4.0	18.0	1579696139	-3.586714
22176712	"What does it mean to be ""in Linus' t"	"What does it mean to be ""in Linus' tree"" if it's already on Linux and everywhere else? Like it will be built in somehow?"	Noumenon72	9.4539175	-5.8047066	comment	4.0	15.0	1580265553	-8.200535
22219516	> Intel Microcode updates are not in	> Intel Microcode updates are not installed via Windows Update and must be installed manually.What does this mean? That only those who know that they need them should apply them? What should I do (as a software developer) with my machine?	jkhliouio34u5	9.568858	-5.3844395	comment	4.0	14.0	1580678471	7.7816944
22234292	So at the consumer level, DDR2[popul	So at the consumer level, DDR2[popular standard c. 2005] could be clocked up to 266 MHz whereas DDR4[popular now] clocks in at 1600MHz. So a little more than a 6x speedup in transaction times. Unlike processors, whose features make it quite difficult to compare against each other, DRAM has stayed relatively straightforward: its still just a bunch of densely packed flip-flops connected to a memory controller that offers bank-strided column/row access.As you can imagine, processor performance has grown a lot more than 6x over the years. The amount of cores in a package alone has increased more than 6x! So how do we get around this?1) Larger caches: the most efficient optimization to any slow task is to simply not perform said task. Having a larger L3 cache means sending requesting fewer page	dwrodri	9.636759	-5.19336	comment	4.0	21.0	1580814391	8.066434
22282317	I'm not sure I understand your examp	I'm not sure I understand your example.  The Alphas had a pretty standard MESI cache architecture and a very typical cache coherence behavior.  It's true that individual CPUs require barriers to enforce ordering, which is not true on x86 (where the architecture guarantees consistent ordering or memory operations between all entities on the bus, and spends significant die area to do that).  But honestly x86 is the odd architecture here -- almost no one else felt that was a good tradeoff.  (In hindsight, x86 was right, of course.)Where Alpha was weird was in its floating point implementation (two versions on chip! to support the crazy VAX formats that no one cared about even at the time) and its alignment requirements (the hardware, not really atypically, couldn't make a misaligned load, but	ajross	9.850402	-5.7523155	comment	4.0	15.0	1581259441	-7.7320843
22282618	I still run an AlphaServer DS25. It'	I still run an AlphaServer DS25. It's amazingly quick, even in 2020. It outperforms CPUs which came years after it.People sometimes think that the market caused the Alpha to fail. Really, it was Intel. They wanted Itanic to succeed so much that they made a deal with HP to end the Alpha prematurely, even though demand for Alpha systems was high.Even after HP announced that the Alpha would stop being developed, Alphas were being sold as a high end systems for all sorts of uses and had many entries in the Top 500List of supercomputers - Alpha systems were four of the top ten on the planet in November, 2002, which was after HP announced they wanted to transition from Alpha to Itanic.My AlphaServer DS25 is beautiful hardware. Everything in the machine is manufactured to a standard we just don't	johnklos	9.547417	-5.3488274	comment	4.0	17.0	1581263164	-7.89169
22282365	Which alpha? The 21264 was introduce	Which alpha? The 21264 was introduced in 1996. It was a 4-issue out of order processor that could have 80 instructions in flight. It had 2 LSUs and could clock up to 500 MHz initially.The Pentium Pro, released in late 1995, was a 3-way design clocking up to 200 MHz. It was surprisingly competitive. It had all the modern requirements: out of order execution, out of order memory pipeline, on board L1 and L2 caches. It just had less resources in each dimension. Intel caught up to 500 MHz in 1999, with the PIII. That was still a 3-day design. Intel’s first four way design was the Core 2 in 2006. That could hold 96 instructions in flight. Intel didn’t release a CPU with two load store units until 2011 (Sandy Bridge could do two loads per cycle) or possibly 2019 (Sunny Cove was the first that co	rayiner	9.446021	-5.21256	comment	4.0	24.0	1581259848	7.7009015
22285623	Drooling over that picture of a doze	Drooling over that picture of a dozen AMD EPYCs. Those processors are seriously awesome. The newest sr.ht server, tenshi.sr.ht, was provisioned to run git.sr.ht and has an EPYC 7402 24-core @ 3.35 GHz at its heart. It can compile the Linux kernel x86_64 defconfig from scratch on an NVMe in under 30 seconds. Our main build server is also EPYC, a 7281.	ddevault	9.3344755	-5.2048306	comment	4.0	63.0	1581297489	7.8914766
22290758	Zen CPUs are notoriously broken on L	Zen CPUs are notoriously broken on Linux and AMD doesn't seem to care. If you ever try to install Linux on a first-get Ryzen box and want an uptime longer than 3 days, you'll want to keep this handy:https://github.com/qrwteyrutiyoup/ryzen-stabilizator	thescriptkiddie	9.2755	-5.1981077	comment	4.0	23.0	1581353303	7.8953743
35637255	>Supporting x86 is an advantage.Comp	>Supporting x86 is an advantage.Compatibility-wise, there's no doubt. The software ecosystem is most broad on x86.But x86 is really bad at reliability / high assurance due to its complexity and due to obtrusive (SMM mode), non-auditable firmware.	snvzz	9.668851	-5.287457	comment	4.0	20.0	1681975105	-7.8026485
35682331	RISC on a Chip: David Patterson and 	RISC on a Chip: David Patterson and Berkeley RISC-I	lproven	9.389183	-5.67962	story	4.0	101.0	1682296847	-10.580089
35701633	Sorry, but trying to be optimistic a	Sorry, but trying to be optimistic about RISC-V is only going to lead to more pain.It's just an instruction set architecture and it's still going to be made in large SoC fabs by Qualcomm-class companies that want to save a buck on ARM licensing. There's no way to win here.	joezydeco	9.414617	-5.6405	comment	4.0	21.0	1682435725	-10.560048
35709535	I'm not the right person to ask abou	"I'm not the right person to ask about this, but some ARM systems definitely have weaker coherence than x86 -- in FreeBSD we have a whole bunch of memory barrier primitives which compile away to nothing on x86 because they exist only for weaker platforms.I have a vague recollection that it's something to do with whether caches snoop the memory bus for reads of lines they ""own"" but I could be mistaken.  Whatever it was, there were cases where buggy code meant that a core could read a stale value from memory for multiple seconds after another core wrote to the same address."	cperciva	9.858693	-5.661577	comment	4.0	13.0	1682481860	-7.742569
35747509	I used to work at CircleCI. It was o	I used to work at CircleCI. It was often suggested to us that because of the usage-based pricing we were not incentivized to make builds faster.In reality the opposite was true - experience had shown us that every time builds got faster, people ran more builds (likely because faster feedback means more iterations).	glenjamin	9.20722	-6.37874	comment	4.0	13.0	1682718569	1.7605175
35766654	> Modern ARM RISC processors have mu	> Modern ARM RISC processors have multitudes more instructions than that of prior generation CISC processors.That isn't and wasn't the thing that RISC processors reduced.What was reduced was the complexity of the instructions themselves, not the number of instructions. For example, having complex addressing modes is CISC, whereas only touching the ALU in register-register operations is RISC; the theme is improved pipelineability, so you want less ALU state to have to back out if the memory operation takes a page fault. A number of things (delay slots, for example) follow from that focus on making the instructions as simple and pipelinable as possible.Here's a guy who helped design MIPS on the distinction:https://userpages.umbc.edu/~vijay/mashey.on.risc.html	msla	9.541514	-5.7039847	comment	4.0	21.0	1682889030	-10.488392
35806034	From my understandingFPGA doesn't ha	"From my understandingFPGA doesn't have the instruction pipeline as the command is encoded in the gates themselves. It means that on runtime the FPGA is not turing complete[0] as opposed to the CPU[1].There is a phrase ""data is code and code is data"" in security context.
The new saying if FPGA would ever replace cpus' as the main computation hardware(as you don't need turing complete when you keep using the same apps[microservices])
is something like ""code is execution and execution is code"" as you imprint the code in the gates. It would get rid of a whole class/subclass of memory safety vulernabilitie.This paradigm change is like what webassembly did to the web.
The slogan should be ""make the bitstream go mainstream""
Some made a demo running wasm on fpga[1], not sure if using a cpu or dire"	user070223	9.257351	-5.4151964	comment	4.0	14.0	1683139070	8.203785
35814947	The end of an era. The SPARC ISA was	The end of an era. The SPARC ISA was a work of art.	torstenvl	9.526099	-5.5600786	comment	4.0	15.0	1683206765	2.871969
35870135	Do the AI cores use a standardized A	Do the AI cores use a standardized API? Is it an extension to the RISC-V set? Is the API similar to normal CPU multithreading, or more like GPU kernels or SIMD?	ummonk	9.409209	-5.6576867	comment	4.0	20.0	1683606038	-10.535178
35884804	This paper is ~15 years old. It was 	This paper is ~15 years old. It was published in 2009, but the data was collected 2006-2008. As densities for things like RAM increase, error rates have to decrease commensurately to hide errors from end users.Additionally, Google runs hardware in their datacenters in a much more pathological way than most consumers will (e.g. they are more likely to run hardware much hotter than typical consumers).The point is that the figures in the paper are an interesting starting point for discussion, but they're not necessarily applicable to your laptop.	eklitzke	9.68543	-5.3122864	comment	4.0	28.0	1683704878	8.030379
35890422	It doesn’t work well. It’s the JIRA 	It doesn’t work well. It’s the JIRA of CI/CD: it is entrenched and does multiple things but doesn’t do any one thing well, and the people that decide what to buy aren’t the people who are forced to use it so they don’t care about its quality so much	sidlls	9.144622	-6.3736906	comment	4.0	12.0	1683739280	6.183069
35939223	Author here if anyone has 8086 quest	Author here if anyone has 8086 questions...	kens	9.644754	-5.435934	comment	4.0	22.0	1684082366	-7.479485
35943989	Clockwork makes severalhttps://www.c	Clockwork makes severalhttps://www.clockworkpi.com/shophttps://www.abortretry.fail/p/review-of-the-clockwork-pi-dev...R-01 is particular interesting for having a RISC-V processor	wlesieutre	9.396609	-5.6455197	comment	4.0	14.0	1684126200	7.6674366
35943510	I'm sure someone has thought of this	I'm sure someone has thought of this before, but there's x86 as the full ISA, and there's x86 as gcc (or whatever) actually uses it.  What if you had one or two cores that actually run x86 and the rest just run a reasonable subset of it until they hit a weird instruction and hand the thread over to the more formal one?	13of40	9.676181	-5.543193	comment	4.0	14.0	1684120349	8.082834
35971291	Or you could go the other way around	Or you could go the other way around. Boot with Low power Arm, and fall back on x86 when your applications demand it.Would be the type of thing that would enable Microsoft to make a serious attempt to shift Windows to another ISA. Use the ARM ISA for the OS and newer applications, have an x86 fall back for legacy applications that require it, without needing an emulation layer. This would allay business concerns over compatibility in an industry wide transition.	vegetablepotpie	9.731292	-5.243275	comment	4.0	18.0	1684298170	-7.827985
35983449	At Google, we couldn't have read eve	At Google, we couldn't have read every single error that eg our Google Photos servers produce, even if we wanted to.At that scale, you get some errors even purely from bits flipping randomly in memory due to cosmic rays.  (The latter is speculation.  I don't remember how many of those we got, or whether we used enough error correcting memory.  It's been a while.)	eru	9.694665	-5.490545	comment	4.0	19.0	1684375721	8.13371
35996893	Curious. Why do we need an actual 80	Curious. Why do we need an actual 8088? Aren't all x86 processors backwards compatible with 8088/8086? Also last time I checked VGA cards supported legacy modes such as CGA, and EGA (this may not be the case anymore).Any modern Intel laptop should be able to run the same software, without emulation.	selcuka	9.569206	-5.216149	comment	4.0	19.0	1684461660	-7.512015
36007117	`amd64` is still what Debian and Kub	`amd64` is still what Debian and Kubernetes use.	kinghajj	9.663946	-5.4024434	comment	4.0	14.0	1684532126	-7.8839355
36013865	"> ""As of my knowledge cutoff in Sept"	"> ""As of my knowledge cutoff in September 2021""> ""However, as an AI language model, I don't""...Why don't they just use an emoji to replace this whole boilerplate phrase? It would make it more bearable. For each of the boilerplate phrases one emoji. Or just have a bunch of tags #Cutoff_2021, #LM_can'tIn my native tongue, this kind of speaking is called ""wooden language"" and it is considered insulting."	visarga	9.802807	-6.2535405	comment	4.0	19.0	1684604072	-13.956667
36014577	> All oversights and mistakes made b	"> All oversights and mistakes made by Intel over the yearsEngineering is not about achieving perfection.  It's about organizing compromises to create a product that provides good utility at a fair price.  These were not oversights or mistakes they were intentional design decisions.Likewise..  you can see segmented memory as ""nonsense"" and a ""waste of development time"" but Intel clearly didn't fail at anything.  They've been one of the largest and most successful chip manufacturers for decades,  because their products provided real utility at affordable consumer prices and software developers gladly put up with the technological choices to be a part of that giant market."	akira2501	9.336119	-5.2224317	comment	4.0	15.0	1684609028	7.7355986
36015155	I see no real benefit to this.   The	I see no real benefit to this.   The x86 compatibility doesn't get in the way in any modern architecture - all the 16/32 bit mode stuff is all 'emulated' with microcode, and there are no dedicated 16 bit registers anymore...Nor does it get in the way of software - as soon as you've switched to 64 bit mode, you can ignore all legacy stuff.Thats the right way to maintain legacy compatibility - make sure it is all contained and doesn't get in anyone's way, and you can leave it there forever.	londons_explore	9.79488	-5.3460236	comment	4.0	17.0	1684613700	8.043836
36020612	Benchmarking Intel, AMD and Graviton	Benchmarking Intel, AMD and Graviton Using Erasure Coding Workloads	edogrider	9.412252	-5.231787	story	4.0	53.0	1684675434	7.920877
36022900	That's interesting!If AMD incorporat	That's interesting!If AMD incorporates scaled down Xilinx's FPGAs into their x86-family product line, that could bring a lot of RasperryPi's community effort into a mainstream products too (home PC) and let us experiment embedded software directly on our PC! ...and break our main PC during our experiments too, oopsie. But it would be worth it haha.	sfrigon	9.152159	-5.2156324	comment	4.0	25.0	1684689151	7.97089
36029025	> Using pull requests for code chang	> Using pull requests for code changes by your own team members is like having your family members go through an airport security checkpoint to enter your home. It’s a costly solution to a different problem.No, it's like having an editor proofread your article before you submit it. It's a second pair of eyes to make sure you haven't missed something or made a change that will subtly break things, or just misunderstood the requirements and implemented something not quite right, or didn't implement your tests properly and thus are not actually testing what you think you are.CI isn't some magical fairy that ensures program correctness; it's only as good as the tests it runs. And even the best tests do not guarantee correctness.	kstenerud	9.078296	-6.3887925	comment	4.0	25.0	1684746861	3.9447145
36048480	ASIC design is a much more ratified 	ASIC design is a much more ratified skill set than you'd need for a normal programming job. I always found it sad that salaries in the hardware industry are so comparatively low.	tdeck	9.114221	-5.2297287	comment	4.0	18.0	1684865703	1.6985096
36054415	New Xen updates on RISC-V	New Xen updates on RISC-V	jandeboevrie	9.417034	-5.6696944	story	4.0	84.0	1684906104	-10.5950985
36065731	> it required 386 specific features 	> it required 386 specific features like task switchingi thought this was a kernel/OS level concept, could you expand more?	MuffinFlavored	9.86989	-5.346783	comment	4.0	15.0	1684974288	-8.185016
36074020	It's even worse than that. If it was	It's even worse than that. If it was just the CPU...It also simulate an old keyboard controller for the purpose of enabling the A20 gate which enables an address line.https://en.m.wikipedia.org/wiki/A20_line	ithkuil	9.654505	-5.280672	comment	4.0	13.0	1685038174	-7.2793775
36074723	Thank Microsoft for holding up 64-bi	Thank Microsoft for holding up 64-bit Windows until Intel had a chip.	quantified	9.572086	-5.2559385	comment	4.0	23.0	1685041619	7.757579
36074769	Without going through various repos,	"Without going through various repos, I'm struggling to recall ever even seeing ""x86-64"" - It's always amd64 that I look for - so the rebrand wasn't that successful."	ghshephard	9.670742	-5.3232994	comment	4.0	15.0	1685041843	-7.7672763
36085330	Since this is gaining some traction.	Since this is gaining some traction.  I'm curious if you are using jails and a jail manager, what are you're using now?  I'm still using IOCAGE (Version 1.2) on freeBSD 13, but it seems like its not the best way to do it anymore? Documentation is all over the place on what is the best way to manage jails now.	thehigherlife	9.74285	-6.408348	comment	4.0	12.0	1685114437	10.495325
36103426	"""Efficient cores for low power tasks"	"""Efficient cores for low power tasks and performance cores for demanding applications"" is a catchphrase I've seen hundreds of times but I've never once seen someone actually demonstrate it or test it, or even really explain how my phone decides which is which. Does WhatsApp run on an efficiency core most of the time but swap to a performance core when it's converting a video to send?"	causality0	9.636293	-5.305316	comment	4.0	13.0	1685277029	7.9847336
36110635	Sounds like ARM is afraid of RISC-V.	Sounds like ARM is afraid of RISC-V...	photochemsyn	9.399248	-5.659057	comment	4.0	40.0	1685334434	-10.553118
36126188	Isn't this a little like reaching ou	Isn't this a little like reaching out to Linus because someone changed their home directory permission to rwxrwxrwx? It sucks for them, but what could google do?	jacobsenscott	9.313629	-5.876515	comment	4.0	13.0	1685461401	4.1882567
36135862	nice!This is the sort of area where 	nice!This is the sort of area where it feels the JVM has some under utilised potential, as these type of optimisations can take advantage of the strong guarantees of the JVM runtime.Am curious though if it can work with other SIMD AVX versions since AVX512 is only selectively supported. And what's the potential to go all the way and add OpenCL or CUDA implementations?	zmmmmm	9.557361	-5.653534	comment	4.0	22.0	1685521404	8.17579
36136021	RISC-V Software Ecosystem	RISC-V Software Ecosystem	rwmj	9.367444	-5.692166	story	4.0	5.0	1685522936	-10.559024
36154761	Is this really still a thing?Do peop	Is this really still a thing?Do people go further than using instrinsics for let's say AVX?	KeplerBoy	9.48647	-5.248928	comment	4.0	13.0	1685641789	-0.94711906
36167318	> how to disable Intel ME, which is 	> how to disable Intel ME, which is accomplished by sending an HECI (Host Embedded Controller Interface) command in the same way it has been for ages.I didn't know this - so it's possible to turn off Intel ME? The idea of a full copy of Minix with TCPIP running on my machine is scary. Can someone else turn it back on?	nailer	9.513655	-5.2389317	comment	4.0	36.0	1685723665	7.787219
36167736	"This does not ""disable"" Intel ME. Th"	"This does not ""disable"" Intel ME. The ME is instrumental to the boot process and it is impossible to boot a modern Intel x86 system without it. It's quite tiring seeing x86 vendors continuing to misrepresent this.See comment by bri3d below for details. It appears they're just sending a command to the ME politely asking it to stop doing things, maybe. Of course, this happens long after the ME has already done a great deal of work bringing up the system.Of the three options for ME scope reduction, none are good and none actually ""disable"" the ME, but it seems like they've chosen the least effective/audited option of the three. I should add that if you don't trust the ME not to be owned, there's not really any reason to trust that it will honour a polite request to stop doing anything sent to"	hlandau	9.520011	-5.2278705	comment	4.0	32.0	1685725262	7.8042903
36190522	What does that mean, though? I can r	What does that mean, though? I can run x64 Linux binaries on BSD? How about on ARM processors? On an M2?	stavros	9.9242325	-5.3724823	comment	4.0	16.0	1685921273	-7.924155
36224001	I am the author of this trick as wel	I am the author of this trick as wellYou can read about it in https://community.arm.com/arm-community-blogs/b/infrastructu...	danlark	9.606166	-5.270843	comment	4.0	14.0	1686123442	-7.7102895
36270521	The Readme doesn't answer it but I s	The Readme doesn't answer it but I struggle to see why you want a c implementation of an ISA.	rowanG077	9.612504	-5.59558	comment	4.0	25.0	1686405641	-7.6429915
36271924	While I'm glad to see proprietary fi	While I'm glad to see proprietary firmware both included and segregated in its own repo, I'm wondering why RISC-V wasn't added as a supported architecture in Debian 12?  It seems like that supporting at least an open ISA would move closer to the possibility of what Debian wants to see happen... so why isn't it as a distro helping to make it happen?	blihp	9.406856	-5.6565094	comment	4.0	28.0	1686414540	-10.5361
36310574	Kinda disappointed that Tenstorrent 	Kinda disappointed that Tenstorrent is pushing one of the world's most boring architectures.Its a regular chip with a few extra units bolted on the end, thats been copy and pasted in a grid.We've seen the same stuff from folks like Meta, even Tesla.	frozenport	9.275416	-5.208133	comment	4.0	32.0	1686665887	-8.488037
36310786	I noted how, when they first started	I noted how, when they first started, they talked mostly about developing 'AI accelerators' and it felt mostly like they were talking about big, GPGPU style chips to go head to head with nVidia.  Thousands of small SIMD cores doing matrix multiplies, with fast memory and pcie.  Maybe something halfway between Cerebras size and and Nvidia Hopper.  A tall order but something really needed.Then at some point it feels like Jim got hooked on the idea of RISC-V everything, and they pivoted their messaging to talking about these more CPU-like chips with a main R-V64 8-wide decoding, state of the art OoO execution, etc.  That sounds more like a RISC-V competitor to AMD Zen instead of a competitor to an nVidia GPU.And they they talk about that just being the interface to the AI chip later but... it	mk_stjames	9.293574	-5.454232	comment	4.0	12.0	1686666845	-10.554522
36318281	Behaviour Driven Development with 65	Behaviour Driven Development with 6502 code	ingve	9.60122	-5.4381943	story	4.0	55.0	1686694206	-7.3391633
36325360	Fintech has mostly determined that 1	Fintech has mostly determined that 1 thread can get the job done. See LMAX disruptor and related ideas.What problems exist that generate events or commands faster than 500 million per second? This is potentially the upper bar for 1 thread if you are clever enough.Latency is the real thing you want to get away from. Adding more than one CPU into the mix screws up the hottest possible path by ~2 orders of magnitude. God forbid you have to wait on the GPU or network. If you have to talk to those targets, it had better be worth the trip.	bob1029	9.929492	-5.650425	comment	4.0	25.0	1686748236	8.415572
36368774	I’ve been migrating workloads away f	I’ve been migrating workloads away from x86 and towards ARM on AWS and GCP since they’ve been available. This review does a great job of kinda giving you an idea of what you are gonna get as a platform, but if you are interested I strongly recommend the experience on any cloud provider.While there was some work to benchmark and validate, the cost savings have been non-trivial. Plus this change happened as we were all switching to the M series Macs so ironically now our entire chain end to end is off x86.	mduggles	9.640099	-5.2242723	comment	4.0	16.0	1686995761	-7.7204223
36369623	I was keen on migrating to ARM, but 	I was keen on migrating to ARM, but there seems to be no benefits from doing so on GCP; I'm open to be wrong here.From what I understand they're using Ampere Altra, which have single thread performance similar to Skylake; but the cost is equivelant or worse than the x86 e2 series.e2-standard-4: USD 97.84/mot2a-standard-4: USD 112.42/mo(sustained use discounts apply to neither).EDIT: I see you're in Denmark and are operations focused. I am too operations focused and just across the bridge in Malmö, maybe we could hang out.	dijit	9.57014	-5.2094874	comment	4.0	12.0	1687004693	-7.8134155
36385814	Fused floating point multiply-add wi	Fused floating point multiply-add with a single rounding from the infinite-precision answer is required by the IEEE 754-2008 floating point standard.You don't get a choice in the matter.> can be easily replaced with two separate instructionsIt can't. You will get different answers.RISC-V allows you to choose a CPU without floating point instructions. But if you choose to have an FPU then you get multipy-add. Yes, it needs to read three registers, which is expensive. It is also the most common instruction in any floating point calculation, so that expensive three port register file gets used constantly.Checking overflow for addition on the other hand is something that is very seldom used (on any CPU). On RISC-V you need four instructions only if the operands are full register size and you d	brucehoult	9.672216	-5.973469	comment	4.0	20.0	1687133109	5.912156
36397667	Summary:AVX-512 adds many instructio	Summary:AVX-512 adds many instructions that can replace what used to take 3 less efficient instructions.This instruction set also double the number of available SIMD (single instruction multiple data) registers.Those instructions are very useful on 128 bits vectors. And not a lot of people actually need 512 bit vectors.Because of the number of registers and 512 bits width, it takes a lot of space in silicon. This makes it costly, and so is reserved for more expensive CPUs.Had it been limited to, or also offered in a 256 bits version, this instruction set would have most likely be included in many more CPUs. Making it much more useful.	bombela	9.477817	-5.565237	comment	4.0	42.0	1687216814	8.081173
36397997	> This, combined with the 512b vecto	"> This, combined with the 512b vectors that are the ""-512"" part, quadruples the amount of architectural FP/SIMD state, which is one of the main reasons we _don't_ get any AVX-512 in the ""small"" cores.That’s an interesting point. Does anyone know—the Knights Landing Phi had AVX-512 and was based on Atom cores. Did they bolt on all these extra registers?"	bee_rider	9.479555	-5.5221715	comment	4.0	12.0	1687219231	-0.86869794
36399357	Right. Since I'm using Gentoo and co	Right. Since I'm using Gentoo and compiling my whole system with `-march=tigerlake`, the compiler is free to use AVX-512.My question is just... does it? (And does it use AVX-512 profitably?)	mattst88	9.461196	-5.5584993	comment	4.0	18.0	1687231520	8.133572
36439801	Linus as well.  https://www.youtube.	Linus as well.  https://www.youtube.com/watch?v=DzRGBAUz5mAThey claim that they only create clickbait because the platform requires it, but that argument is undercut a bit by the fact that they use the same playbook on floatplane.	ortusdux	9.265523	-5.846971	comment	4.0	12.0	1687471771	4.024456
36442585	I'd also vote for an FPGA Mainboard,	"I'd also vote for an FPGA Mainboard, ideally Lattice, ideally iCE40, and ideally compatible with Project IceStorm (Yosys, Arachne-pnr, and IceStorm) open source tools:https://github.com/YosysHQ/icestormThink something similar to MiSTer FPGA -- but in a laptop form factor, and able to run all sorts of ""soft"" CPUs on it, including (but not limited to) the following:https://opencores.org/projects?expanded=Processor"	peter_d_sherman	9.274329	-5.1877613	comment	4.0	29.0	1687492376	8.248233
36452880	> Why we need a dedicated CPU and DR	> Why we need a dedicated CPU and DRAM attached to flash memory. You can garbage collect and wear level in your OS if you want to.The thing I don't get is, the chips are all commodities, and it's not like soldering them to a board is rocket science. Why isn't one of the companies that makes fully-specified inexpensive RISC-V chips selling one attached to some commodity flash chips and an NVMe connector? Include some minimalist open source firmware that offloads most of the work to the host OS and let the Linux community figure out how to make it better.At minimum it should allow you to undercut the existing competition on price because you're using a less expensive controller and no DRAM, and in a few years the open source drivers could have enough advantages over black box devices that no	AnthonyMouse	9.458623	-5.43575	comment	4.0	25.0	1687558459	-10.572295
36465044	Sorry, but Zen 4c (like 9754) don't 	Sorry, but Zen 4c (like 9754) don't have the massive L3 cache or the fast clocking of Zen 4 (like 9684X). They're chopped down Zen 4's. 32 more cores is only good for hyperparallel HPC where the working set is smaller. That giant L3 cache and faster clock of Zen 4's is going to perform better in almost all other cases.And Altra's are old PCIe gen 4 and DDR4, while AMDs are PCIe 5.0 and DDR5.	sacnoradhq	9.2859125	-5.2032194	comment	4.0	12.0	1687665812	7.9568114
36477031	What case would you make for using r	What case would you make for using revision_id?	steve_adams_86	8.923731	-6.3065863	comment	4.0	14.0	1687766848	2.684801
36483725	Yeah that was my thought. Renesas Is	Yeah that was my thought. Renesas Isn't a big player in the uc market at all.  I don't think I've ever heard of anyone using their parts.	edrxty	9.391051	-5.2738585	comment	4.0	16.0	1687804148	-10.536585
36501194	The False Dawn: Reevaluating Google'	The False Dawn: Reevaluating Google's RL for Chip Macro Placement	oldgradstudent	9.53262	-5.459591	story	4.0	71.0	1687916191	7.7930984
36500140	The question here is whether the new	The question here is whether the new, optimized SM64 implementation is CPU-bound in the first place. Games on the N64 are often limited by memory bandwidth, which is taken up by rasterization, and SM64 was something of a special case—compiled with optimizations turned off due to GCC bugs. After recompiling with optimizations enabled, and maybe after swapping in newer versions of the RSP microcode, my guess is that further improvements to CPU efficiency would have very limited returns.	dietrichepp	9.521751	-5.2443614	comment	4.0	19.0	1687908479	7.8503942
36520628	Dunno. The idea is neat. But at this	Dunno. The idea is neat. But at this point we don't even have a working, and reasonably supported RISC-V SBC. Sure, there are many small boards, and I also have some goodness from Pine64, but they are still mostly toys.And this comes from the heart of China, from a company I have never heard of until it started to get spammed over HN like 2 weeks ago. Don't get me wrong, I'm sure the hardware is really nice. But they are not very famous about supporting things long term neither software- nor hardwarewise.	not_your_vase	9.40798	-5.4371047	comment	4.0	12.0	1688048066	-10.594445
28696450	RISC-V: The New Architecture on the 	RISC-V: The New Architecture on the Block	johnblood	9.39157	-5.6930327	story	4.0	45.0	1632934592	-10.5696335
28701675	I wonder if the ARM-powered Lambdas 	"I wonder if the ARM-powered Lambdas have a different vCPU scaling.   Supposedly, you get between 2-6 vCPUs for x86-64 Lambdas, depending on how much memory you configure for the Lambda.But, the x86-64 vCPU is not a ""real core"".  It's a hyperthread (SMT), or 1/2 a core.  So I'm curious if the scale is still 2-6 vCPUs for Graviton, where a vCPU == A real core...since there's no SMT on Graviton."	tyingq	9.556115	-5.2748985	comment	4.0	21.0	1632960565	-8.5138645
28787838	I live for getting downvoted on HN s	I live for getting downvoted on HN so I'd just like to point out that this deck supports my previously-expressed opinion that the AMD EPYC architecture is harder to use. Out of the box, the Intel machine that is obsolete on paper was beating the EPYC machine by more than 50%.	jeffbee	9.30079	-5.2076426	comment	4.0	20.0	1633621557	7.925282
23423342	Amazon EC2 C5a Instances Powered by 	Amazon EC2 C5a Instances Powered by 2nd Gen AMD EPYC Processors Now Available	_msw_	9.389424	-5.291801	story	4.0	52.0	1591314053	8.066278
23440301	That’s a shame, because I could see 	That’s a shame, because I could see legit and serious reasons why someone would want emoji in comments. For instance, what if someone was trying to illustrate a point by “drawing” a diagram of a network, using different emoji to represent different types of nodes.	Uehreka	9.79225	-6.269344	comment	4.0	17.0	1591460922	-13.957205
23448107	What is the performance per watt for	What is the performance per watt for Graviton vs Intel?	acd	9.458286	-5.1902475	comment	4.0	14.0	1591544163	-8.394825
23469807	Boy, I'd love to see Moxie's comment	Boy, I'd love to see Moxie's comment on this after years of shilling SGX.  I was always disappointed by that and never understood why someone as otherwise-bright as him went for it.	mmm_grayons	9.486732	-5.2214007	comment	4.0	21.0	1591730276	-5.8759704
23471249	The memory model of the ISA != the m	The memory model of the ISA != the memory model of your code. C has a memory model and any correct C code is compiled to the correct ARM assembly. It's only really an issue if you are translating over x86 assembly, and then you probably have lots of other issues to worry about.	ladberg	9.653072	-5.6189137	comment	4.0	12.0	1591739009	-7.6636543
23470670	> The mitigation locks the entire me	"> The mitigation locks the entire memory bus before updating the staging buffer and only unlocks it after clearing its content.Entire memory bus as in entire access to any kind of shared memory (shared CPU caches, RAM, ...)? If yes, wow, that's a pretty desperate mitigation. Doesn't that starve large parts of the whole CPU whenever an affected, but mitigated instruction is executed, as all other cores can't interact with memory anymore for the duration of this execution? Doesn't that also open the ability to ""DoS"" CPUs by constantly executing such instructions?"	Dunedan	9.8097	-5.68646	comment	4.0	15.0	1591735330	8.005052
23479900	> Now the OS has to pin processes ba	> Now the OS has to pin processes based on support for different instructions?The only complication here would be if they have differing extensions like AVX512, but that's easily solved by the OS by just advertising the common baseline. Nothing about this looks difficult to support?	kllrnohj	9.5948305	-5.5590873	comment	4.0	52.0	1591811093	8.085123
23494097	Ask HN: Why isn't there an open-sour	Ask HN: Why isn't there an open-source FPGA?	orndorffgrant	9.090497	-5.3552985	story	4.0	17.0	1591916206	8.467924
23493574	Every time I criticise Intel, Or mor	Every time I criticise Intel, Or more like pointing out facts , supporters will always use Jim Keller as the excuse, as if he was the silver bullet.Intel's struggle has nothing to do with is processors' design. Sunny Cove and Willow Cove ( aka Icelake and TigerLake ) were close to design complete before Jim Keller joined. Intel's problem is with their manufacturing, both technical and economical. And Jim Keller is not a Fab guy, nothing he could do to fix this.	ksec	9.297579	-5.1844177	comment	4.0	40.0	1591911703	7.662567
23510987	When would you ever not opt for a cp	When would you ever not opt for a cpu optimized mode? Cpu's can't get faster, and you can always get more memory.	tinco	9.662367	-5.2645864	comment	4.0	13.0	1592068923	7.874632
23511678	Thats why I was always skeptical of 	Thats why I was always skeptical of the Transmeta CPUs.  They could 'run' the x86 ISA as its on paper, but they'd never be able to completely match all the nuances of the Intel CPUs to get 100% compatibility.  The devils in the details as they say.	VectorLock	9.50038	-5.330573	comment	4.0	17.0	1592074171	-7.729664
23513261	Also newsworthy: Lattice drops recen	Also newsworthy: Lattice drops recent EULA clause forbidding fpga bitstream reverse engineering https://hackaday.com/2020/06/06/lattice-drops-eula-clause-fo... therefore 2020 could be a milestone for open FPGA toolchains!	herogreen	9.087607	-5.367455	comment	4.0	22.0	1592086359	8.470614
23556298	I think that the face of computing w	"I think that the face of computing would have changed quite dramatically if Intel had decided to make the x86 segment paragraph size 256 bytes (8 bits) instead of the useless 4 bits. Imagine not having a 640K (or 1MB) ceiling (without hacks like ""expanded"" or ""extended"" memory). It would not have been a big deal for Intel to do this; I'm pretty sure they could have multiplexed four more pins worth of address lines.It would have given the x86 a native 24MB address space, equal to the 68000's physically provisioned 24 bits (which is all most 68K systems supported anyway, certainly the Atari ST and the Mac).For instance, in the mid 80s, VisiCorp was trying really, really hard to fit their products into 640K. They had some whizzy stuff, but the address space problem pretty much killed them. La"	kabdib	9.620034	-5.1920967	comment	4.0	15.0	1592425531	-7.505208
23597963	The just announced Intel Xeon Cooper	The just announced Intel Xeon Cooper Lake top end processor has about 38.5MB of cache. The AMD Rome top end has 256MB of cache.https://ark.intel.com/content/www/us/en/ark/products/205684/...https://www.amd.com/en/products/cpu/amd-epyc-7h12	AaronFriel	9.402824	-5.2482586	comment	4.0	16.0	1592810408	7.877758
23598221	"To quote Linus Torvalds:""Some people"	"To quote Linus Torvalds:""Some people think that ""the cloud"" means that the instruction set doesn't matter. Develop at home, deploy in the cloud.That's bull*t. If you develop on x86, then you're going to want to deploy on x86, because you'll be able to run what you test ""at home"" (and by ""at home"" I don't mean literally in your home, but in your work environment).""So I would argue there is a strong connection."	Torkel	9.738799	-5.1860523	comment	4.0	70.0	1592814049	-7.7826757
23602023	Really wish Fujitsu sold a developer	Really wish Fujitsu sold a developer kit with an A64fx chip - its the only shipping ARM chip with SVE that I know of and I would love to get my hands on one to play with.	dman	9.594791	-5.1866555	comment	4.0	18.0	1592843028	-7.582719
23603985	am I stupid? how are they running a 	am I stupid? how are they running a x86 vm on ARM...	viro	9.764026	-5.2958574	comment	4.0	14.0	1592851373	-7.8023
23605091	> Rosetta won't work for run time en	> Rosetta won't work for run time environments like OS emulationThey literally showed a demo of Parallels with Ubuntu for Intel running inside it.	LeoPanthera	9.850442	-5.323422	comment	4.0	12.0	1592854270	7.6092095
23607232	The comparison is a bit unfair. x86 	"The comparison is a bit unfair. x86 is like a decade older than ARM. Not that much in retrospect. aarch64 is as ""free of historical legacy"" as x86_64 is (that is: not at all free). There is lot of cruft and even multiple ISAs in aarch64 (e.g. T32/Thumb).And the CISC vs RISC arguments are questionable, seeing that Apple has done the migration in both directions by now."	AshamedCaptain	9.675098	-5.4030547	comment	4.0	26.0	1592862588	-7.7522855
23609531	Why would they design it to require 	Why would they design it to require two ASICs AND an FPGA? Couldn't they just have built the FPGA program into the ASICs?	shawnz	9.096419	-5.3302016	comment	4.0	15.0	1592881601	8.244314
23614465	Do those programs blindly try to exe	Do those programs blindly try to execute AVX instructions without checking whether they’re supported? What happens if you're just running on an older intel processor?	beervirus	9.506215	-5.533494	comment	4.0	14.0	1592923178	7.8846755
23614642	Rosetta's goal is to support legacy 	Rosetta's goal is to support legacy Mac apps. It's quite finely scoped, but I hope Apple will go above this and make it available as part of their virtualization framework. This way e.g. Parallels and Docker could use this to provide some way to tap in probably the fastest way to run x86 on ARM Macs.This would mean Rosetta would go beyond its stated scope, and certainly go beyond what the relatively short-lived Rosetta 1 did, but would make it easier to integrate ARM Macs in what is still an x86 world.I'm worried they're not going to do this because x86 emulation is probably too slow (people will attempt to run their AAA games in a VM). It would also mean that Apple will need to support Rosetta 2 forever. If they're not going to do this, everybody will have to rely on qemu. Qemu is great, 	DCKing	9.75272	-5.357693	comment	4.0	41.0	1592923921	9.668781
23619161	I'm not sure why they're making a bi	I'm not sure why they're making a big deal about this, couldn't the original Rosetta do this too? QEMU has been doing this since (I think) even before the original Rosetta, they call it user mode emulation. You run as if it was a normal emulator but also trap syscalls and forward them to the native kernel instead of emulating a kernel too.I'm more interested in how they're doing the AOT conversion and (presumably) patching the result to still be able to emulate for JITs. That'd be (comparatively) simple if it was just for things from the iOS and Mac App Stores since Apple has the IR for them still but they made it sound like it was more generic than that.https://www.qemu.org/docs/master/user/main.html	amaranth	9.884224	-5.400229	comment	4.0	15.0	1592941066	-8.289459
23623503	Both Parallels and Apple are refusin	"Both Parallels and Apple are refusing to answer this question.  I suspect the answer is ""only x86-32 bit virtualization works, but we're cracking the whip on our devs to make x86-64 bit work too""Honestly though, I have no clue, I just know it's odd they're being so cagey.My question is how good is the GPU emulation?  That can really make or break GUI stuff."	banana_giraffe	9.892624	-5.1838856	comment	4.0	12.0	1592967377	-8.061971
23643018	> Why can't you update the Docker im	> Why can't you update the Docker image to also support ARM? You theoretically could switch your backend to run ARM Linux. However, this would take months - renting out ARM instances, re-building all repositories, and a tense switch over.I don't see why this would be so hard. If anything, I expect to see a massive upswing in things like AWS Graviton2 uptake, and a lot of common Docker images being built with ARM versions out of the box. It might be about a year or so, but eventually we'll be able to just go ARM-native the whole way.What Apple needs to do is make a first-class, WSL-tier implementation of Docker for Mac for ARM.	core-questions	9.567631	-6.3599873	comment	4.0	23.0	1593105634	10.124486
23643102	>>> expect ... a lot of common Docke	>>> expect ... a lot of common Docker images being built with ARM versions out of the box.This has no chance of happening. The common cloud CI systems do not support ARM at all (travis, circle CI and co). There is only a minority of developers with macbook and the rest is not going to spend $2000 to buy one just to build some docker images.	user5994461	9.554458	-6.418418	comment	4.0	17.0	1593105992	10.100151
23643614	Author here.I'm glad somebody said s	"Author here.I'm glad somebody said something! Yes the gzip perf test is pretty silly, but illustrates a significant difference. /dev/urandom throughput on this setup was about 100 MB / s so it wasn't a bottleneck for this test - the bottlneck was gzip.Feel free to come up with a performance test yourself! I personally want to know what an HTTP test would look like. You can run an ARM image by running:    docker run -it arm64v8/ubuntu

Unfortunately, Rosetta 2 is not going to help here. Rosetta 2 translates x86 -> ARM, but only on Mac binaries. It does not translate Linux binaries, and cannot reach inside a Docker image."	bmalehorn	9.701678	-5.7710214	comment	4.0	14.0	1593108269	9.915598
23644329	"How was x86 any more ""open"" of a pla"	"How was x86 any more ""open"" of a platform? If anything, x86 is a far more ""closed"" platform, as there are only two remaining manufacturers of x86 parts, and there is no licensing process to join them. Meanwhile, there are hundreds of ARM licensees, and the process for becoming a licensee is all documented online [1].[1]: https://www.arm.com/why-arm/how-licensing-works"	duskwuff	9.664785	-5.2644873	comment	4.0	14.0	1593112345	-7.7736216
23647860	The thing with x86_64 is that Apple/	The thing with x86_64 is that Apple/Amazon/Google/Samsung/Fujitsu/etc cannot license it. There are only two corporations with x86 licenses granted by Intel: AMD and VIA. These licenses are not transferable, and a even a badly managed acquisition could result in the license being revoked.So moving out of the x86/x86_64 world is really a no-brainer: why would all the electronic giants keep paying for x86 when they can get out of the de-facto duopoly? It seems that they are settling on ARM (Amazon Graviton, Fujitsu A64FX, Apple A12Z, etc.). It could have been another architecture, but it couldn't be x86_64.On the other hand, there are other architectures besides ARM and x86: RISC-V, OpenSPARC, etc. Maybe one of these would be better for developers who don't want to deal with the ARM landscape	Xixi	9.649134	-5.2414494	comment	4.0	20.0	1593135358	-7.7060413
23649792	Acorn were indeed way ahead of their	Acorn were indeed way ahead of their time. Especially when it came to flunking software projects. They had the hardware done but the OS was a quick hack job because their proper OS (ARX) was late. So they ported MOS from the BBC series and threw a GUI on top. And it initially sucked terribly. I was there for it.I bought a fully stacked A440 when they were released, many thanks to the kindness of a deceased relative and much to the dismay of it mother who said I should have bought history books and art materials instead.Really if they had something RISC OS 2 quality on day one, which would have been a monumental feat like the hardware was they’d have done better. I enjoyed every moment of using the machine after RISC OS 2 came out. Before that I was slightly scared I’d burned a monumental a	m0xte	9.552621	-5.236149	comment	4.0	34.0	1593158815	-8.080663
23665536	Are you sure? The FPU instruction se	Are you sure? The FPU instruction set is the same.	tbodt	9.530294	-5.6335306	comment	4.0	18.0	1593300441	-7.8584485
23670836	I'm pretty sure that emoji combinati	I'm pretty sure that emoji combination was in use for quite a while before this happened. Actually, when I saw it around Twitter I assumed it was people just referencing that or using it for its slightly surreality…	saagarjha	9.821312	-6.251805	comment	4.0	13.0	1593368226	-13.953324
23689984	It's an interesting proposition. Whe	"It's an interesting proposition. Whether it's Python, Redis, Laravel or Linux itself, a lot of software projects have been driven primarily by singular people and their decisions which shape the project over a period of time.One example that was mentioned in this thread was the whole ""master"" thing going on.Is Torvalds really going to get involved in that? Most likely no, and that's a decision he's free to make.I worry in the future, after he's gone, depending on the model being used, we'll see more politics in software projects where Linux itself gets dragged into these things and doesn't have a single guy to say NO!Or maybe you see an old white guy in charge of Linux and that can be considered a problem in itself, I'm sure many would love to see some change there and finally overrule Tor"	aboringusername	9.410491	-5.833211	comment	4.0	30.0	1593525208	-8.177939
23692142	It is a Reduced Instruction Set comp	"It is a Reduced Instruction Set computer. It's a greatly simplified design.The x86_64 ISA is absolutely insane. The only way to implement it in hardware efficiently is to ""compile"" the super complicated instructions into micro-ops which can actually be decoded and executed on the CPU.Said another way, Intel has to implement a compiler in hardware which compiles the machine code before it gets executed. The extra complexity means more power and less performance.You can read more about how microcode and micro ops work here: https://en.m.wikipedia.org/wiki/Intel_Microcode"	dahfizz	9.646615	-5.5094814	comment	4.0	13.0	1593536392	-7.6005397
23692275	I was under the impression that Rose	I was under the impression that Rosetta 2 is install-time translation and thus not emulation at all...	qayxc	9.794882	-5.356812	comment	4.0	17.0	1593536978	7.5913596
23731087	I idolized Torvalds growing up and r	"I idolized Torvalds growing up and respect him to this day (I still sometimes randomly say to myself ""Hello, this is Linus Torvalds, and I pronounce Linux as Linux!""). I also applaud the strides he's made to improve how he treats kernel contributors.That said, this is a non-answer and it irks me. The truth is most kernel contributes are likely CHWMs. Instead of this ""I can't see color... no literally because of the computers"" non-answer he gave, it would mean a lot if he acknowledge that likelihood and outlined what might be done to change it.I get that convincing people to work on free software is sort of hard to begin with. Also I get that when companies pay full time employees to work on the kernel its usually a boon for the whole community. That said, it would be cool (and free!) if th"	soganess	9.428706	-5.832615	comment	4.0	15.0	1593853128	-8.119505
23768680	Could someone break down the signifi	Could someone break down the significance of this for those of us who are less hardware-acquainted? Does this represent the cutting edge of RISC-V CPU design? And how difficult would it to implement this design properly instead of simply emulating it with an FPGA?	DC-3	9.38947	-5.658739	comment	4.0	16.0	1594205650	-10.62884
23799992	I was going to post a similar thing.	I was going to post a similar thing. I know the 8 bit guy reviewed it positively, and for me the CM2 is a better bet as it can run BASIC code about as fast as a 6505 can run assembler.I know it's not as legitimately retro (in terms of chips), but that doesn't matter to me; what does matter is having an accessible system to play about with and hopefully show my son that programming can be fun and he can make games without an impossibly step learning curve (ie how I felt about my ZX spectrum back in the day).	djaychela	9.520222	-5.220739	comment	4.0	20.0	1594447960	-7.425477
23813872	The 6502 is still doing hundreds of 	The 6502 is still doing hundreds of millions of units a year, and is still a terrific introductory processor that is comparatively easy to wrap your head around, especially if you are interested in board bring up from scratch. (Compare the requirements to boot a 68000 to a 6502 into a nop loop, for example.)The 6502 is far from dead.	compiler-guy	9.520585	-5.2731776	comment	4.0	13.0	1594580962	-7.4331274
23824053	AVX-512 causes frequency throttling 	AVX-512 causes frequency throttling for thermal reasons.https://lemire.me/blog/2018/08/25/avx-512-throttling-heavy-i...https://lemire.me/blog/2018/08/24/trying-harder-to-make-avx-...https://lemire.me/blog/2018/08/15/the-dangers-of-avx-512-thr...Any performance gain from fewer cycle cost may be lost from the CPU being slower. Maybe there are situations where AVX-512 is faster but how is one to reason about performance when some instructions can slow the CPU.	haecceity	9.445499	-5.5288363	comment	4.0	19.0	1594665505	8.097364
23833791	FWIW, I learned a little bit about h	"FWIW, I learned a little bit about how to check for supported features in x86_64 from the linked code (I added the comments):    TEXT ·hasPOPCNT(SB),NOSPLIT,$0
     XORQ AX, AX     ; AX <- 0
     INCL AX         ; AX <- 1
     CPUID           ; check cpu caps
     SHRQ $23, CX    ; shift bit 23 to bit 0 (bit 23 => POPCNT support)
     ANDQ $1, CX     ; examine bit 0
     MOVB CX, ret+0(FP)  ; return 1 iff POPCNT instruction supported
     RET

It seems Intel CPU's have such a bloated and varied instruction set you have to query to see what flavor of CPU you have to create portable code. Writing compilers for this must be a real pain.Full disclosure : I work for Intel"	waynecochran	9.78629	-5.6306467	comment	4.0	32.0	1594743505	-7.5928454
23835862	> I wondered when I can buy a AMD wo	> I wondered when I can buy a AMD workstation with official ECC support, looks like that will finally be possible in September. Hope the price will be OK.You don't have to wait. The current Ryzen 3000 series processors support ECC.ASUS, ASRock, and Gigabyte have several Ryzen 3000 motherboard options that support ECC RAM. Example: https://www.asus.com/Motherboards/Pro-WS-X570-ACE/	PragmaticPulp	9.406599	-5.474728	comment	4.0	33.0	1594751659	8.195065
23835942	16GB and 32GB ECC UDIMMs are easy to	16GB and 32GB ECC UDIMMs are easy to find and reasonably priced: https://www.cdw.com/product/samsung-ddr4-32-gb-dimm-288-pin-...The real advantage of the PRO processors is that they support 8-channel memory and have more PCIe lanes. The higher TDP spec might allow for higher all-core turbo, too.	PragmaticPulp	9.492858	-5.4026966	comment	4.0	16.0	1594752062	8.161162
23836146	So how does this not cannibalize the	So how does this not cannibalize their Epyc business?It has higher base frequency than Epyc, typically a bit cheaper than Epyc and it now has up to 2TB of ECC RAM support.Not complaining. The perf/$ is amazing.	tiffanyh	9.363723	-5.281787	comment	4.0	15.0	1594753025	7.976264
23836675	The New CPU ARMs Race	The New CPU ARMs Race	sudhirj	9.531207	-5.2171144	story	4.0	11.0	1594755320	-7.748563
23837100	thanks for the informative reply,> i	thanks for the informative reply,> i3s and Pentiums officially support ECCmy experience is that OEMs like Dell won't support ECC except for Xeon configurations.  You can get the same machine with an i9 but not ECC memory or the Xeon and ECC.	marmaduke	9.413382	-5.472656	comment	4.0	13.0	1594757145	8.204407
23862045	How is just splitting the memory in 	How is just splitting the memory in two separate channels going to make anything faster?How will this affect driver complexity and cache-misses?	bullen	9.775408	-5.2893167	comment	4.0	20.0	1594923752	8.084896
23887980	Hi, I am the creator of the language	Hi, I am the creator of the language, my name is Gabor. You can ask questions if you like.To answer some:- Yes, we use machine translations, they serve as an example, they are far from perfect. Some language files are translated by native speakers. I think the website needs to be more clear about this.- I use gendered language because coding is a men's job, women belong in the kitchen! ;-). No, just joking. Women are also welcome to become Citrine users. I just think the opening sentence is beautiful, it combines the concepts of male and female in a lovely, natural way ignoring today's PC-bullshit.- No, Emoji-language is not allowed in the core. I only support natural languages. Endangered languages (EGIDS6 and higher) are also welcome. There is no limit.I understand that there will be a l	gabordemooij	9.821318	-6.2634892	comment	4.0	19.0	1595148547	-13.956196
23910400	" TLDR? Why does this matter?""As a re"	" TLDR? Why does this matter?""As a reminder, Intel CET is a hardware-based mitigation that addresses the two types of control-flow integrity violations commonly used by exploits: forward-edge violations (indirect CALL and JMP instructions) and backward-edge violations (RET instructions).
""Why are these important"	muska3	9.4692135	-5.275731	comment	4.0	26.0	1595361806	7.835469
23928194	This is really interesting. If a cpu	This is really interesting. If a cpu hardware vulnerability like spectre could be repaired by patching an fpga on the SOC that would be incredible. That type of functionality would overtake the entire cloud market in about 3 days.	wwarner	9.56564	-5.5370145	comment	4.0	20.0	1595517299	7.8172855
23929976	> The rebuttal to your objection is 	"> The rebuttal to your objection is always tools like ""HLS""Yup. I know HLS has gotten a lot better recently but my impression is that, somewhat like fusion, HLS as a first-class design paradigm is always a decade away.> FPGA tools are just some of the lowest quality garbage out thereAbsolutely.  I think the problem is vendors see FPGA tooling as a cost center and a necessary evil in order to use their real products, the chips themselves.  Users are also highly technical and traditionally have no alternative, so (mostly) working but poor-quality software is simply pushed out the door.  ""They'll figure it out"".Finally, to expand on the difficulties imposed by physical constraints, I think another huge blocker to wide adoption is that FPGAs are physically incompatible.  I cannot take a bitstr"	kyboren	9.079253	-5.3888464	comment	4.0	20.0	1595526158	8.372094
23931359	How can anyone not be interested in 	How can anyone not be interested in owning ARM?Whoever controls that company can decide who's allowed to make processors that run consumer facing software (sure, RISC V might present a threat in the long term, but it's a good decade out).Of course that would be a nightmare for every other licensee (which is why I'm hoping for the IPO), but the potential gain is immense, isn't it? Or are the licenses so nice they're safe regardless of who owns the company?	solarkraft	9.422284	-5.3191695	comment	4.0	12.0	1595532937	-10.438224
23933920	I remember the DEC Alpha.Intel (and 	I remember the DEC Alpha.Intel (and HP) countered with Itanium, which was a break from (i.e. incompatible with) the x86 architecture (IA64). It tanked.AMD created AMD64 which was x86 compatible. They released chips like the Athlon which were very popular. This turned out to be the winning strategy.In a strange twist, Intel was forced by the market to adopt the AMD64. It released it's own version, Intel64.Intel messed up there too in the 90s too. It wasn't until the Core CPU roadmap that Intel regained its lead.There seems to be a link -- Jim Keller [1] was involved in the design of  DEC Alpha chips, and then moved to AMD to work on the K8 and then co-wrote the AMD64 instruction set. He also worked on Apple's chips and Tesla's HW. He recently just left Intel. What a career.[1] https://en.wi	wenc	9.49006	-5.23314	comment	4.0	16.0	1595546659	7.7320213
23943298	I wonder if switch emulation would b	I wonder if switch emulation would be more efficient on ARM systems	tobyhinloopen	9.667631	-5.2490087	comment	4.0	16.0	1595617525	-7.748653
23954632	An Intel 8080 Assembler and Online S	An Intel 8080 Assembler and Online Simulator	ibobev	9.722497	-5.5061793	story	4.0	72.0	1595740858	-7.4307404
23976683	I don't think that was the case for 	I don't think that was the case for a long time on the tooling side, OCaml has a great support for ARM64 for a long time now, but Linux ARM64. But well most developers aren't actually using Linux.But a thing that is going to change is supporting iOS, one of the reasons that this PR was approved(and it adds support to iOS) it's mostly because there is a Mac ARM64	EduardoRFS	9.808297	-5.2672105	comment	4.0	44.0	1595949537	10.39952
23992625	The memory map hurts.68000 doesn't h	The memory map hurts.68000 doesn't have a vector base register like 010+. Instead, the vector base is always 0x0, which here is in ROM, which is too much of a restriction. Installing a 010 instead should allow for getting around this.Also blatantly missing is a NMI switch.Still, it always makes me happy when I see open SBC designs based on the 68k family. Retrobrew[0] has a bunch of them, and they are less restrictive, or use 030 instead of 000/010.[0]: https://www.retrobrewcomputers.org/	snvzz	9.561117	-5.19673	comment	4.0	17.0	1596064702	-7.5520887
24049248	While that's true, I don't see how t	While that's true, I don't see how this is relevant to SIMDe? SIMDe lets you compile code using (e.g.) SSE/AVX intrinsics for ARM targets, using the target platform's SIMD intrinsics when possible. It doesn't even officially include support for AVX512 yet.Anyway, for anyone looking for details on what the OP mentioned, it's an implementation detail of Intel CPUs, see https://en.wikichip.org/wiki/intel/frequency_behavior#Base.2...	lorenzhs	9.862919	-5.9896894	comment	4.0	12.0	1596544189	8.188814
24052045	Maybe not exclusively, but it would 	Maybe not exclusively, but it would make more sense as users of their more 'budget' machines likely won't be put off by its inability to run Windows and running existing Mac software more slowly due to emulation (unless it's been recompiled in the latter half of 2020).Edit: Thanks to the replies letting me know that Rosetta is still a thing. I somehow forgot. Updated.	JohnTHaller	9.775264	-5.2577233	comment	4.0	12.0	1596560732	7.5930514
24068423	So Linus, and this guy is saying AVX	"So Linus, and this guy is saying AVX512 was a bad idea.""“The state of software out there is really not favoring going larger vectors,” Piednoel said in the video. “In fact, you can see clearly in Cinebench for example—that is not one of my favorite benchmarks, especially for a laptop where it doesn’t make any sense—but you can see that AMD is winning the battle of throughput. It’s because they have more cores and they can afford to have more cores.”""But in other places I've seen a lot of hype for it but without much discussion on actual use cases.With now people saying that it isn't useful except to give intel leadership in benchmarks.Is anyone here actually using it and seeing a benefit?"	Jonnax	9.44117	-5.547724	comment	4.0	22.0	1596692816	8.086502
24069638	I'm not knowing how much of this thi	"I'm not knowing how much of this things are true, but isn't it ironic that AMD has more benefits from SMT because they have less pipeline optimizations (and similar), but exactly this pipeline optimizations (and similar) seem to be at least partially at fault for some of the Specter style attacks and make it harder to put more cores into the system (as this additional optimizations are likely need more silicon space...).Sometimes I'm wondering if the best (but software side maybe impractical) design for (non Threadripper level) consumer PC's would be something along the line of.- 1 single non SMT core with most advanced pipeline optimizations and highest clock speed which only always runs one thread pinned to it (many consumers tend to only run one ""costy"" applications with need for highes"	dathinab	9.454796	-5.254826	comment	4.0	13.0	1596709208	8.023558
24068449	Aren't modern emojis more interpreta	"Aren't modern emojis more interpretable than these blissymbols? Sure they are harder to create on pen and paper but on a digital platform, an illiterate person can still use them easily. Although the modern emojis are limited to ""reactions"" and not ""intended actions"" (unlike blissymbols) but this might change in the next years."	seesawtron	9.79154	-6.266596	comment	4.0	14.0	1596693279	-13.960302
24079388	tl;dr of confidential computing:In n	"tl;dr of confidential computing:In normal cloud computing you are effectively trusting the cloud provider not to look at or modify your code and data. Confidential computing uses built in CPU features to prevent anyone from seeing what is going on in (a few cores of) the CPU (and in EPYC's case, encrypt all RAM accesses). Very roughly: These CPU mechanisms include the ability to provide a digital signature of the current state of the CPU and memory, signed by private keys baked into the CPU by the manufacturer. The CPU only emits this signature when in the special ""secure mode"", so if you receive the signature and validate it you know the exact state of the machine being run by the CPU in secure mode. You can, for example: start a minimal bootloader, remotely validate it is running securel"	gcommer	9.741877	-5.2334914	comment	4.0	16.0	1596786358	7.566034
24093529	So which company is the most open-so	So which company is the most open-source friendly provider of FPGA chips these days?	amelius	9.084584	-5.3560224	comment	4.0	14.0	1596908471	8.38152
24094849	I'm curious: Would it be worthwhile 	I'm curious: Would it be worthwhile porting the entire stack required for http(s) (tcp/ip, ssl, etc) to an fpga? Would it be faster than running it on a CPU?	jcfrei	9.141918	-5.369072	comment	4.0	12.0	1596917711	8.2075615
24101956	i8080 precise replica in Verilog, ba	i8080 precise replica in Verilog, based on reverse engineering of real die	kens	9.607646	-5.4039416	story	4.0	112.0	1596999825	-7.3743114
24110496	“This bias voltage was dependent on 	“This bias voltage was dependent on manufacturing variables so was not always the same chip to chip (the goal would be -5VDC).  Each chip was tested the and voltage was hand written on the chip.”Wow! With today’s processor tolerances, that’s crazy to imagine happening.I was also surprised the ALU was an add on. I guess it makes sense if all you need is to control something on a basic level, and not run software.I’m curious how they handled ALU specific instructions if an ALU isn’t present. Does the decode stage just convert them to no-ops?	gen3	9.540744	-5.3078485	comment	4.0	13.0	1597074274	-7.4869113
24117433	The Sail ISA specification language	The Sail ISA specification language	bryanrasmussen	9.697031	-5.6663213	story	4.0	56.0	1597123817	-7.694336
24140365	More scary is how people in tech cir	More scary is how people in tech circles still call you paranoid when you call Intel ME/AMD PSP a backdoor.>We are also always open for ideas but our focus is on firmware, BIOS, BUS or driver level attacks.Anyone on WiFi AC or up are backdoored right now by NSA. All of them are compromised, no doubt in my mind. All the LTE. All the x86 hardware on the market. All of it.If you aren't running fully free software, you're affected. And if you are a rare case running fully free software, you're an easy target for interdictions, since there's so few of you.	panny	9.504151	-5.207089	comment	4.0	43.0	1597298210	7.746665
24144818	By the time you subtract all the sub	By the time you subtract all the sub-prime performance from their vulnerabilities, this isn't actually true on properly patched operating systems.  They took a sub-prime loan on validation, sacrificing security in the process, and the result is chips marketed and sold as something they are not.  There really should be government-level lawsuit and restructuring at intel right now.	kev009	9.453466	-5.292066	comment	4.0	14.0	1597334662	7.7767863
24180452	> We choose Intel CPUs that do not h	> We choose Intel CPUs that do not have vProThe Wikipedia article they link about vPro says:> Intel vPro technology ... [includes] VT-x, VT-d...Does this mean that Purism hardware won't support virtualization extensions?  Seems like that would be a big downside, and would make it a non-starter for a lot of people (including myself).	kelnos	9.871478	-5.316446	comment	4.0	14.0	1597605937	2.2042744
24216467	At Hot Chips 32 this week, Intel men	At Hot Chips 32 this week, Intel mentioned that Tiger Lake Xeon with Sunny Cove core would only downclock if AVX-512 usage hit TDP limits.	BooneJS	9.40413	-5.3848968	comment	4.0	15.0	1597871125	8.023822
24233886	A shout out to those involved in Aco	"A shout out to those involved in Acorn, RISC OS, etc around the late 1980s and throughout the 1990's. Around 1992 or so, our family bought our first computer (when I was around 5 years old) which was an Acorn A3000 running (if I recall correctly) RISC OS 2 on ROM. The school I went to also had Acorn computers (including the RISC PC toward the latter half of the 1990’s).Nowadays I consider myself extraordinarily privileged to have experienced RISC OS on Acorn hardware in its heyday.
I see so many things in modern computing inspired by RISC OS. The taskbar in modern era Windows and Mac OS is remarkably similar to RISC OS 2 which was released in 1988. RISC OS was also an early pioneer of anti-aliasing fonts and had it years before it appeared in Windows.However, sadly, there are many things n"	kiwijamo	9.636159	-5.2404084	comment	4.0	31.0	1598008347	-8.283458
24246870	Reverse-engineering the 8086's Arith	Reverse-engineering the 8086's Arithmetic/Logic Unit from die photos	abbeyj	9.712649	-5.510781	story	4.0	102.0	1598126786	-7.39508
24248758	Intel: still the undisputed king of 	Intel: still the undisputed king of single thread performance. For some applications that’s all that matters.	tbrock	9.56363	-5.331636	comment	4.0	16.0	1598145660	7.9622374
24248773	The 8086/88 does in fact execute 90h	"The 8086/88 does in fact execute 90h (the NOP opcode) as XCHG AX, AX.  It does not generate any change in the user-visible architectural state, however, and so it appears to be a NOP.[Internally the CPU uses the ""TMP"" register as a temporary storage location during execution of the XCHG operation, and so the NOP will clobber whatever value was previously held there.]One can observe two of the internal registers (""TMP"" and ""IND"") using an invalid JMP FAR m32 opcode.  Normally this is encoded as opcode FF/5 with a mod-rm byte that specifies a memory location (mod=00, mod=01, or mod=10) from which to fetch a doubleword CS:IP pointer.  Specifying a mod-rm byte with mod=11 (register) - which is an undefined encoding - skips the ""load doubleword from memory"" microcode subroutine and causes the C"	kiwidrew	9.92522	-5.8690524	comment	4.0	18.0	1598145835	-7.4010935
24257858	> the x86_64 patents should expire t	> the x86_64 patents should expire this year. Apple could have probably made their own x86 chip without paying royalties. The free/open architecture that we've always dreamed of, might turn out to be the one we're already using.I've never seen anyone mention this before. Is this really in the cards? Or are all the extensions patented as well, so that a hypothetical Apple (or whoever else takes it on) x86 wouldn't be able to use x86 without licensing it?	celrod	9.630674	-5.2140393	comment	4.0	27.0	1598248533	-7.6547947
24259672	I know you're joking, but I bet it'd	I know you're joking, but I bet it'd be possible to make a python-powered ECU these days. It's not that hard to make non-allocating code in the first place, but even then the amount of data is so small that a GC cycle could be done in a ms or so at most.An engine running at 3000 RPM is only doing 50 rotations per second, so you have a 20 ms budget to calculate whatever you want, hit whatever spark plug timing you need and then GC.	WJW	9.402784	-5.3941917	comment	4.0	19.0	1598269199	8.143358
24276087	Spectre seems serious. Even the E fa	Spectre seems serious. Even the E family of languages (E, Monte, Joule, Grace), which have similar lineage to ECMAScript but have always been focused on isolation, don't have ready answers for how to mitigate Spectre and related attacks.I think that hardware-effect attacks are going to be the primary thorn in our side for the next few decades, even if we all agree to switch to object-capability systems immediately.	Kednicma	9.672814	-5.5926723	comment	4.0	15.0	1598389449	7.743269
24354869	This doesn't seem like HLS, more lik	This doesn't seem like HLS, more like a new HDL that's based on Rust. This has been done many times before with other functional languages (Clash, Chisel, Spinal, hardcaml and others). These projects never take off because hardware designers are inherently conservative and they won't let go of their horrible language (Verilog or SystemVeriog) no matter what.I'm sure Google will use XLS for their internal digital design work, but I don't expect this to ever gain widespread support. (not because HLS is inherently bad, but because of the culture)	typon	9.112197	-5.485853	comment	4.0	13.0	1599064305	8.552364
24368463	I wish this essay wasn’t littered wi	I wish this essay wasn’t littered with emojis :(	toxik	9.789901	-6.26056	comment	4.0	16.0	1599164581	-13.960292
24381964	Has Intel lost its mojo?	Has Intel lost its mojo?	pieterr	9.309777	-5.2172537	story	4.0	29.0	1599291123	7.7094173
24388412	PDP 11/70 Emulator (2020)	PDP 11/70 Emulator (2020)	threeme3	9.818066	-5.378875	story	4.0	56.0	1599357799	-7.536256
24401717	I'm pretty excited by this announcem	I'm pretty excited by this announcement. Not for storage but for software defined radios. If Xilinx upgrades their RFSOC (which is an Zynq Ultrascale variant with built in ADCs and DACs) to this core from the current A53 core it will allow much more sophisticated base band processing in software that is currently done with FPGA gates in the fabric. And while reconfigurable FPGAs are nice, software can change modes much more quickly than reconfiguring an FPGA can.	ChuckMcM	9.152552	-5.3505993	comment	4.0	25.0	1599505227	8.227785
19989825	Are there any sucess virtualizing z/	Are there any sucess virtualizing z/OS on x86_64? This mainframe is quite anemic even by modern desktop standarts.	altmind	9.897785	-5.2856436	comment	4.0	14.0	1558602132	-7.9869213
20011034	Another micro-architecture attack. S	Another micro-architecture attack. Since the advent of Spectre and Meltdown, I really wonder what is the practicality of exploiting these vulnerabilities. As an end-user, if I have malware running on my machine trying to trigger these exploits, then in many ways I have already lost. The malware program has access to all my personal data anyway.Personally I wonder whether the cost of mitigation is worth it. According to the article (and their simplified HT methodology) certain workloads experience a 25% performance hit.The only cases I currently consider as exploitable are VMs in the cloud (perhaps a reason to own dedicated servers after all this time) and running JS in the browser (perhaps a reason to disable JS).There will always be side-channel attacks. Our devices are physical devices a	TEMPEST256	9.795134	-5.502174	comment	4.0	65.0	1558814713	7.7401543
20014424	Spectre/Meltdown is a serious proble	Spectre/Meltdown is a serious problem, but they matter only in shared environments (virtual hosting with multiple accounts per physical machine).Why the mitigations are even on by default, if the problem doesn’t exist for dedicated single user environments? (desktops/laptops/dedicated server hardware with no code from other users running).P.S. https://make-linux-fast-again.com/	atemerev	9.614689	-5.5681424	comment	4.0	35.0	1558871508	7.832752
20017135	I'm glad the PC enthusiast space has	I'm glad the PC enthusiast space hasn't succumbed to the wild hysteria caused elsewhere by the side channel issues. It's tiresome to see every new variation people come up with reported as a new apocalypse all over again. Half the reason I still pay attention is to find if there's a new Linux boot switch I need to turn on to disable some new performance regression.Even though I'm personally in the fortunate position not to have any reasonable exposure to these vulnerabilities, I wouldn't be particularly worried even if this wasn't the case. It's been well over a year since Meltdown and Spectre came out and there still hasn't been a single case of anyone successfully using these vulnerabilities to productive ends in the wild that I know of. Obviously, cloud computing vendors need to pay att	keldaris	9.776832	-5.503899	comment	4.0	23.0	1558901228	7.7806993
20016839	Because intel strictly forbids publi	"Because intel strictly forbids publishing benchmarks of their processors with the ""hardware vulnerability mitigations"" applied. Even OEMs cannot show them to their enterprise customers. You can do your own benchmarking after buying the systems. So, no money, no real-world benchmarking."	bayindirh	9.41396	-5.250731	comment	4.0	28.0	1558898259	7.893849
20019727	"Sad autocorrection of ""ARM"" into ""Ar"	"Sad autocorrection of ""ARM"" into ""Arm"" in the title on the text!"	amirmasoudabdol	9.528185	-5.216548	comment	4.0	14.0	1558935991	-7.618296
20064012	One thing I’m always amazed with - a	One thing I’m always amazed with - and it’s partly due to my lack of understanding of physics at this scale - is that when a processor with components on this scale is dropped a few feet, they aren’t reduced to smithereens. It’s hard for me to contemplate that whatever is holding these few atoms together is so resilient.	tyleo	9.481492	-5.23846	comment	4.0	13.0	1559329634	7.6995125
20106060	PSPTool Is a Swiss Army Knife for th	PSPTool Is a Swiss Army Knife for the Firmware of the AMD Secure Processor	zdw	9.380881	-5.2473116	story	4.0	172.0	1559752118	7.8512073
20143568	Who ordered memory fences on an x86?	Who ordered memory fences on an x86? (2008)	luu	9.920846	-5.7929053	story	4.0	72.0	1560135647	-7.673458
20152998	It looks like Microsoft is adding co	It looks like Microsoft is adding code to Windows to schedule threads in a way that works with this configuration of cores and CCXsIs/has Linux added similar codeAre we calling this Mini-Numa or something else?	craz8	9.783995	-5.504254	comment	4.0	20.0	1560226994	8.15521
20155977	My long term bet: computing will mov	"My long term bet: computing will move towards an interface driven by ""emoji as command"". Custom iconography will fade out as the interoperability (and familiarity) of popular unicode symbols becomes dominant. So much of the existing textual input we use is designed to overcome the limitations of our software. In the future if you want to go home then you'll ⌂. If you want to go to the supermarket then you'll U+1F6D2. Once the AI knows your usual supermarket then that's where it will bring you. A complete shorthand for interpersonal communication will spring up, obviating the need to express the kind of nuance that we use presently solely to delude ourselves that we have something to say that can't be statistically derived from the total sum of former human communication.Meanwhile I'll be i"	scandox	9.799379	-6.2527614	comment	4.0	18.0	1560265138	-13.957542
20215035	Random question.. they use i386 as t	Random question.. they use i386 as their internal name.. but you can't actually run it on an Intel 386 right? I was under the impression that modern Linux kernels needed a Pentium Pro or newer.. meaning i586 or i686 would be more accurate?	seabrookmx	9.571684	-5.241633	comment	4.0	17.0	1560876327	-7.7248793
20232408	Is it known yet whether the 32-core 	Is it known yet whether the 32-core Threadripper will be discontinued or whether a potential 32-core 7nm Epyc will run at higher clock rates?I'm searching for the fastest C++ compile machine, that includes linking (which is single core).	akbT	9.407151	-5.266466	comment	4.0	14.0	1561035547	7.941774
20234780	Does anyone have an idea how many di	Does anyone have an idea how many different  processors tapeouts are needed to create this line?It seems reasonable to assume that 48-core chip is just 64-core chip with few defective cores.  A lower clocked version is the same ship that high clocked that did not pass some test.	nabla9	9.466951	-5.2821336	comment	4.0	17.0	1561049655	7.9439716
20235072	What's stopping them from creating 1	What's stopping them from creating 1000 core cpus?	deevolution	9.504295	-5.2162967	comment	4.0	17.0	1561051467	7.8433986
20239950	Conditional moves depend on state le	Conditional moves depend on state left over from the last instruction. But when you want to re-order your instructions to keep all your functional units busy, keeping the conditional moves right makes a big mess. They're fine as micro-ops after you've scheduled them all, but are lousy at the ISA level.Intel and AMD make it work by throwing another 10,000 or 100,000 transistors at it.It is better to let macro-op fusion hardware identify opportunities to convert a branch-over-move sequence, all by itself. RISC-V is supposed to be all about powerful macro-op fusion.Clang is really aggressive about generating cmovs. On Gcc you can still use (x & -c) expressions to get nicely pipelined conditional expressions, but Clang stomps them all to cmovs.Cmov is one of the methods to mitigate Spectre bec	ncmncm	9.83351	-6.056376	comment	4.0	21.0	1561092483	-10.383085
20250025	I'm fine with this, but it is a bit 	I'm fine with this, but it is a bit annoying to see a developer not deal with 64-bit builds. I wonder if it's only because Windows allows them to be lazy while it generates more money for them?Either way I think valve's Linux team should rethink this. They depend on 32-bit libs, but Surely they can find alternatives for the 64-bit build and who knows it might even make the experience on Linux even better.	CorvusCrypto	9.851507	-5.2399426	comment	4.0	24.0	1561216460	-7.9672236
20251620	> because it was developed as a 32b 	> because it was developed as a 32b applicationBut why? The Cave was released in 2013. We're almost two decades into the 64bit transition.	dmix	9.843524	-5.2727556	comment	4.0	13.0	1561236031	-7.7826195
20255163	Is it just me or did it sound like t	"Is it just me or did it sound like the author was complaining the whole time?""FPGAs aren't evolved like modern processors with standardized programming models, so we must throw out the current model but I have no idea what is better.""Having worked with FPGAs, I can understand his complaints about the toolchain, they absolutely suck and are mostly closed source. This technology is just like microprocessors in its infantry, its evolving.FPGAs have made crazy progress in the last decade and are getting to the point where it's now affordable for hobbyists and consumers to work with them instead of merely just aerospace & defense contractors with massive hardware budgets.The problem with Verilog as an ISA is that it is too far removed from the hardware. The abstraction gap between RTL and FPGA "	eebynight	9.100537	-5.463305	comment	4.0	12.0	1561294529	8.493319
20255117	I'm annoyed this post ended with an 	"I'm annoyed this post ended with an open question. I was hoping it might at least have some ideas, as I do agree that verilog is a horrible abstraction layer.However, I don't think an ISA for FPGA can exist, not one that that allows for quick synthesis.Sure, you could drop down to a layer where everything is described as LUTs, FFs and routing; But you still need to run ""place and route"" before you can execute it, and that the expensive part of synthesis."	phire	9.104571	-5.4736214	comment	4.0	18.0	1561293885	8.485703
20257683	As a autodidact with a focus on anal	As a autodidact with a focus on analogue circuits and experience in microcontroller stuff the thing that always threw me off aboit FPGAs is that there was never a real oh-don’t-mind-I-am-just-looking kind of FPGA environment.When I started with MCUs I started with an arduino. The thing it did for me was to give me a feeling when to use a microcontroller and when to use something else entirely.Of course the level of control I had with an arduino was far from optimal, but it worked out of the box and guided me into the subject (a bit like a childrens bicycle: neither fast nor special, but helps in avoiding pain and frustration for the learner).I wished I had this kind of thing in an affordable fpga way. Simple enough to get me hooked, with examples and good sane defaults etc.This is what mai	atoav	9.123897	-5.297571	comment	4.0	18.0	1561314692	8.421905
20266377	Statement on 32-bit i386 packages fo	Statement on 32-bit i386 packages for Ubuntu 19.10 and 20.04 LTS	reddotX	9.737577	-5.330612	story	4.0	34.0	1561398879	-0.65995836
20372203	Does anyone know if this has a close	Does anyone know if this has a closed coprocessor equivalent to the Intel Management Engine?  Or how open the firmware is?	dpifke	9.48536	-5.2141986	comment	4.0	23.0	1562449858	7.7282724
20375022	It seems that 9700K still beats AMD 	It seems that 9700K still beats AMD in many workloads. I wonder if the comparison is with spectre et. al. mitigations on Intel turned on or off?	polskibus	9.326247	-5.2297926	comment	4.0	25.0	1562506547	7.8384356
20380584	Simple question: Why doesn't Boeing 	Simple question: Why doesn't Boeing upgrade to i386 for their new planes? I heard it's available for aerospace applications.	bcaa7f3a8bbc	9.692112	-5.3043394	comment	4.0	20.0	1562570421	-7.7616763
20397314	I learned to program on a 6502 when 	I learned to program on a 6502 when I was younger - it's a little depressing that computers went and got so fast that there's no real justification for doing this sort of thing any more in almost any domain (except, I guess, if you manage to land a position developing embedded I2C drivers).	commandlinefan	9.583907	-5.35132	comment	4.0	12.0	1562711076	-7.417806
20402559	Many workloads do not require more t	"Many workloads do not require more than 4GB addressable RAM per process. Linux offered a 32-bit user space with 64-bit instruction set:https://en.m.wikipedia.org/wiki/X32_ABIAs effectively many Python workloads are usually object oriented business logic and objects are mostly pointers, setting up x32 user space ""halved"" the memory usage. It also made execution performance faster because of better CPU cache utilisation.Sadly, x32 was ""very custom"" and very hard to support. Last I heard x32 is being phased out from Linux kernel."	miohtama	9.929022	-5.4557242	comment	4.0	21.0	1562770738	8.080703
20405524	It's difficult to take an article se	It's difficult to take an article seriously when it has an emoji at the end of every sentence.... It was so distracting I could not read past the first paragraph.	helixdevguy	9.777675	-6.262018	comment	4.0	13.0	1562786795	-13.960467
20405597	Ratification of the RISC-V Base ISA 	Ratification of the RISC-V Base ISA and Privileged Architecture Specifications	matt_d	9.459659	-5.6764197	story	4.0	100.0	1562787176	-10.557233
20411680	FPGA Support – Building an AGC	FPGA Support – Building an AGC	accrual	9.086837	-5.3324018	story	4.0	12.0	1562854856	-12.5115385
20417043	Out of interest, what types of versi	"Out of interest, what types of version control systems have you seen people cobble together in the workplace, and to address what types of needs?It's interesting to observe how banks and consultancies ""version up"" spreadsheets and slide decks by copying the document (plus all supporting documents) and incrementing a version in the name. And also interesting to observe that's worked well enough for quite a long time."	kornish	8.851928	-6.3764105	comment	4.0	14.0	1562890115	-11.708177
20463559	Very disappointing to hear that Debi	Very disappointing to hear that Debian and some other distros enabled CONFIG_RANDOM_TRUST_CPU.I'd rather not be relying on Intel hardware to do something so important correctly.	buildzr	9.796055	-5.254867	comment	4.0	19.0	1563394912	7.762803
20525274	> How long before Android runs prope	> How long before Android runs properly on RISC-V?It's mostly up to OpenJDK and V8 porting. When it comes to porting V8, I've found out the hard way that there's more to it than a generic understanding of compilers. Somebody still has to step up to the plate for a real JVM.> And will they be able to persuade app-makers to rebuild all apps for the platform - x86 Android shows how hard that can be.Real x86 Android devices had libhoudini (DBT), which was pretty decent. If RISC-V starts with low-end devices, or with a high-visibility model that developers are pretty sure will sell well, then the native compilation target will become more popular over time.If China's bizarre local app market is involved, chances are they'll start supporting the target as soon as it's available.	microcolonel	9.406378	-5.6333337	comment	4.0	15.0	1564062286	-10.554293
20525534	When will RISC-V move to multi-chip 	When will RISC-V move to multi-chip modules (https://en.wikipedia.org/wiki/Multi-chip_module) as AMD has done very successfully with Ryzen?It allows for easy scaling of CPU designs as well as increasing yield by making smaller components that have overall lower defect rates.hat seems like the logical next move for most CPU chip vendors/designers except for maybe ARM.	bhouston	9.390445	-5.6580887	comment	4.0	13.0	1564064298	-10.528338
20556710	> The problem is that a modern CPU i	> The problem is that a modern CPU is so fast that just accessing the L1 cache takes anywhere from 3-5 cycles.Access to RAM on a MOS 6502 is about 2-6 cycles, isn't it? The total amount of RAM in a 6502 system is usually roughly the size of a modern L1 cache as well. It would be interesting if you could just program with an L1 exposed and structured as a main memory rather than a cache ...	leoc	9.663409	-5.4026012	comment	4.0	14.0	1564419382	-7.408713
20565779	One-Bit Computing at 60 Hertz	One-Bit Computing at 60 Hertz	Tomte	9.776889	-5.578253	story	4.0	66.0	1564500603	-4.2160974
20580949	The specs on the op amps aren't part	The specs on the op amps aren't particularly impressive. The unity gain is 18Mhz which wouldn't be able to even keep up with a modern AVR clock(16-20Mhz). You can find discrete parts with similar specs for sub-$1.It's a neat idea and all but when it comes to the analog design space there is a lot more variables to consider and constraints that drive them.Your average FPGA on the other hand is able to synthesize multiple 8-bit micros and benefits from wide parallelization, I don't see similar benefits with this approach.	vvanders	9.086783	-5.2267175	comment	4.0	20.0	1564631457	7.995836
20586595	are the FPGAs going to space? I'm in	are the FPGAs going to space? I'm intrigued on how you'd make sure a cosmic ray doesn't accidentally reprogram it	8note	9.099706	-5.337162	comment	4.0	14.0	1564683015	8.277796
20601184	Of course developers are free to do 	Of course developers are free to do what they like, but I think it's a bit of a shame that it's not RISC-V.  He's missing out on all the toolchain support in GCC and Clang, plus the ability to run various embedded operating systems including these days seL4.  RISC-V has an embedded profile (RV32E) and a tiny implementation of that (PicoRV32) so I'm fairly sure it could be suitable for this.	rwmj	9.415433	-5.7054214	comment	4.0	14.0	1564849593	-10.543174
20623464	That's a bit of a silly statement. A	"That's a bit of a silly statement. And misogynist to boot.Hardware is cheap. Programmers are not. It makes much more economic sense to have programmers ""use layers upon layers"" and buy extra CPU, than to have a couple of x86 assembly gurus hand craft every opcode of your application."	Tharkun	9.748682	-5.4005933	comment	4.0	12.0	1565081840	-7.6029267
20623487	While that is true, it is also impor	While that is true, it is also important to keep in mind that Intel is quite conservative with the Xeons, meaning that they lag behind the consumer chips by one tick/tock cycle (or whatever they call it these days)IOW - by the time we see 10nm Xeons hit the market, AMD will most likely be on the next iteration of the Zen architecture.	ch_123	9.288916	-5.19601	comment	4.0	12.0	1565082040	7.855206
20661163	The sad thing is that I have seen si	"The sad thing is that I have seen signs of AMD starting to do the same.  When I was shopping for a motherboard lately, I've begun seen motherboard manuals that state ""ECC is only supported with PRO CPUs.""See http://asrock.pc.cdn.bitgravity.com/Manual/X570%20Phantom%20..."	drewg123	9.3947115	-5.447414	comment	4.0	26.0	1565431454	8.171043
20690275	> And since risc-v has versions some	> And since risc-v has versions somewhere around 5K-10K gates, well, a lower end mcu isn't far, probably.5-10k? Seriously? That's amazing.Z80 had 8500. According to Wikipedia, even truly simple and bare bones 6502 had 3510 or 3218.	vardump	9.42987	-5.5995097	comment	4.0	15.0	1565730559	-10.545248
20720041	How does it balance tasks across CPU	How does it balance tasks across CPU cores?The thing I like in Go is that I don’t have to worry about that, it’s all automatic.	jedisct1	9.738101	-5.5259557	comment	4.0	12.0	1565992131	8.213686
20750022	I have drooled over the Talos II for	I have drooled over the Talos II for quite some time...Do you have a particular use case that makes POWER make sense over x86, or do you share my paranoia and love of non-mainstream ISAs?	voldacar	9.609149	-5.4794817	comment	4.0	43.0	1566324486	-7.800101
20776571	Sorry to hijack your post, but I was	Sorry to hijack your post, but I wasn't aware of emojis (flags only?) being available on HN.. there's no mention of them in the guidelines nor FAQ. What are the rules / guidelines on them? Are they (emojis in general) available in comments only or in titles of posts too?	itcrowd	9.808993	-6.2681766	comment	4.0	15.0	1566561598	13.030983
20797913	Is that really correct? That's huge 	Is that really correct? That's huge latency for something that's in the same package. You can buy discrete SRAM with 70ns latency.	pjc50	9.78026	-5.235864	comment	4.0	17.0	1566801878	7.833772
20804466	IRIX [1] was the version of SVR4 UNI	IRIX [1] was the version of SVR4 UNIX which ran on SGI [2] computers.QEMU [3] is an emulator used to run programs for one machine on another.N64 [4] is the Nintendo 64 games console.SGI Indy [5] was a desktop SGI workstation from 1993.[1] https://en.wikipedia.org/wiki/IRIX[2] https://en.wikipedia.org/wiki/Silicon_Graphics[3] https://www.qemu.org/[4] https://en.wikipedia.org/wiki/Nintendo_64[5] https://en.wikipedia.org/wiki/SGI_Indy	zik	9.802568	-5.2609534	comment	4.0	18.0	1566859332	-8.38258
20803240	Why would we want RISC-V on laptops?	Why would we want RISC-V on laptops?	jimmaswell	9.378475	-5.638868	comment	4.0	24.0	1566850213	-10.598757
20839065	As someone who works in a famous mix	As someone who works in a famous mixed-signal IC company, I note that almost everything I've heard about it comes from HN and not internal discussion. Instruction sets are just not where the leading edge of value creation is. And the design and manufacture costs of ICs remain pretty irreducible. People expecting lots of open source hardware to suddenly start popping up are going to be disappointed.An instruction set is an API. It's the architecture behind it that matters.	pjc50	9.663303	-5.5997453	comment	4.0	13.0	1567176059	-7.562627
20859479	Why is it being used as a subjective	Why is it being used as a subjective benchmark 19 years later? Haven't gamers moved on a dozen times since then?	imglorp	9.792692	-5.3150105	comment	4.0	23.0	1567436582	7.710451
20860008	Emoji are inevitable because text - 	Emoji are inevitable because text - the basic communication medium on the Internet - is a very poor medium for conveying emotions. That's why first emoticons, and then emoji - the modern pictograms - happened.	phoe-krk	9.797976	-6.2646685	comment	4.0	35.0	1567441034	-13.966549
20867017	"Isn't this a ""sane"" default only in "	"Isn't this a ""sane"" default only in specific contexts though? (VMs). For a desktop PC that almost always runs a single heavy task (games, rendering, video encoding, etc) hyperthreading can be a day and night difference."	Crinus	9.851699	-5.5950108	comment	4.0	28.0	1567522289	8.288213
20909548	The point is that the correct way of	The point is that the correct way of doing this is to check for the feature not for the vendor. It's perfectly legitimate for Intel to submit code that helps Intel CPUs, but glibc shouldn't be accepting code that unnecessarily favours one CPU vendor. The correct version of this code would just check for the feature rather, so that if AMD does support this it just works.	Traster	9.356497	-5.3194714	comment	4.0	37.0	1567936735	7.8962746
20962437	First fully functional 64-bit OS for	First fully functional 64-bit OS for the Raspberry Pi 4	chrisys	9.781906	-5.254261	story	4.0	44.0	1568384711	-7.927689
20969619	This is the more correct escape (EDI	"This is the more correct escape (EDIT: and works today):  fd = open(""."", O_PATH);
  chroot(""foo"");
  fchdir(fd); // escaped to ""."" and chroot no longer blocks "".."" past ""/""
  chdir(""../../../../""); // go to real ""/""
  chroot("".""); // broken out

The ""chdir .."" trick used to work a long time ago. The man page probably hasn't been updated in ~20 years."	cyphar	9.766473	-6.4178014	comment	4.0	24.0	1568450706	-13.987622
20969729	The problem is that there are many w	The problem is that there are many well-known ways to get around chroot(2) (which don't require privileges). This includes /proc-related escapes as well as more general VFS attacks.Really, tools should have switched to using pivot_root(2) a decade ago instead of continuing to use chroot(2). Unfortunately this article completely ignores the existence of pivot_root(2) -- which makes it read as though they are trying to convince people to stop using root-switching a security feature (which is definitely bad advice).	cyphar	9.790844	-6.413069	comment	4.0	15.0	1568452731	-14.000406
20975521	Nice progress towards making x86 red	Nice progress towards making x86 redundant.Too bad it targets ARM and not rv64gc, but it's a start.I'm curious why it isn't based on qemu-user.	snvzz	9.915522	-5.4674606	comment	4.0	14.0	1568520307	-8.27713
20985415	More technical details here: https:/	More technical details here: https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/lin...	duckerude	9.50594	-5.855046	comment	4.0	49.0	1568649588	-8.180549
13630709	The biggest scam is actually the oth	The biggest scam is actually the other way around. Intel pulled ECC support from desktop processors a few years ago to force datacentres to buy their Xeons instead.It's nearly impossible to find a desktop CPU that supports ECC ram now even though 5 years ago it was commonplace.Trying to run a NAS with some sensitive data is now impossible unless you buy their server chips	throwawaydbfif	9.434569	-5.481761	comment	4.0	17.0	1486932809	8.216463
13670123	Ask HN: Web devs, how many times a w	Ask HN: Web devs, how many times a week do you deploy? CI? CD?	ericb	9.203635	-6.4217043	story	4.0	3.0	1487353251	6.135371
13673561	Ask HN: What are some really strong 	Ask HN: What are some really strong reasons for using a version control system?	shradha408	8.816372	-6.372438	story	4.0	2.0	1487390988	-11.713916
13675499	Macs come with a built-in emoji keyb	Macs come with a built-in emoji keyboard. Cmd+ctrl+spaceBut does it really improve security that much? If password is short, it's still gonna be quick to crack.	Swizec	9.867924	-6.2272654	comment	4.0	14.0	1487437310	-13.949229
13678629	> What's the usecase when it can be 	> What's the usecase when it can be beneficial to have expensive ECC RAM instead of the ordinary one?Anyone using ZFS will (or should!) care about ECC support. [0]Lots of people build their own NAS/SAN boxes, so ECC support on a desktop CPU at a reasonable price point would be very appreciated. Currently you need to buy specific model CPUs (Celeron or Xeon, IIRC) to get ECC support from Intel. [1][0] https://serverfault.com/questions/454736/non-ecc-memory-with...[1] https://ark.intel.com/search/advanced?ECCMemory=true&MarketS...	kogepathic	9.443582	-5.476983	comment	4.0	27.0	1487490641	8.196559
13687115	That's awesome, I think this is the 	That's awesome, I think this is the perfect CPU for my next ZFS NAS. If you try to find ECC support in Intel's lineup, it's hard to find much. Either the low end Pentium, or the high end Xeon ($$$).	ioquatix	9.526648	-5.4211864	comment	4.0	14.0	1487598272	8.176494
13724983	That's a bit too extreme, don't you 	That's a bit too extreme, don't you think? Disliking AMD is one thing, but claiming that the entire initial run of an AMD processor might be faulty is just silly.My guess is that you have no idea how much effort goes into verification and testing of something as complex as a microprocessor. A significant chunk of NRE costs goes into verification and test AFAIK.	Cyph0n	9.278364	-5.2076025	comment	4.0	19.0	1487953269	7.8764386
13734075	Yes, customer Ryzen CPUs support ECC	Yes, customer Ryzen CPUs support ECC.	my123	9.389202	-5.4631495	comment	4.0	17.0	1488059591	8.2647505
13741674	"The history of ""higher level"" instru"	"The history of ""higher level"" instructions isn't good. The DEC VAX had an assembly language intended to make life easier for assembly programmers, but it slowed the machine down. The Intel IAPX 432 had lots of bells and whistles, but was really slow.  The RISC machines with lots of registers turned out not to be all that useful, and too much register saving and restoring was required. RISC is a win until you want to go superscalar and have more than one instruction per clock.  Then it's a lose.  Stack machines that run some RPN form like Forth or Java code have been built, but don't go superscalar well.A useful near-term feature would be zero-cost hardware exceptions on integer overflow. This is an error in both Java and Rust, and tends to be turned off at compile time because it has a per"	Animats	9.594242	-5.7640066	comment	4.0	30.0	1488166644	-10.459319
13743671	I'm starting to feel like a broken r	I'm starting to feel like a broken record but... A perfect opportunity with risc-v.	phkahler	9.370205	-5.7096305	comment	4.0	15.0	1488197996	-10.585088
13776312	> What is interesting is the HUGE ju	"> What is interesting is the HUGE jump in multi-threaded performance on AMD. Very interesting.Indeed. Single threaded performance, however, seems bad. Virtual cores most likely share less of the actual core than on Intel parts, allowing one to compete less with the other and get more done. On my i7 laptop, on anything more demanding, I see half the ""cores"" idling, probably because one is using the actual underlying core while the other is waiting.Still, while AMD obviously did a good job, it will not make the Intel guys lose any sleep for now.The server parts are another story. If they manage to reliably outperform Xeons (even if it's only on a per watt basis), it'll be fun to watch."	rbanffy	9.34019	-5.19598	comment	4.0	17.0	1488476976	7.9055552
13786038	Would love to see and ARM or MIPS se	Would love to see and ARM or MIPS setup get within shouting range of Intel.I have yet to hear any explanation of the IME that makes sense without the presence user-hostile intent.	__jal	9.459526	-5.2101555	comment	4.0	16.0	1488572404	-6.396856
13809414	The article is dated.The game change	"The article is dated.The game changed fundamentally with the introduction of the Intel Management Engine (or the AMD Platform Security Processor) on the x86 platform. The system is now ""deep pwned"" as described in point 3.1.1 of the article. The manufacturer has ultimate control of the platform, the user has been disowned.https://mail.fsfeurope.org/pipermail/discussion/2016-April/0...https://youtu.be/rcwngbUrZNg?t=17m41shttps://blog.invisiblethings.org/papers/2015/x86_harmful.pdfhttps://link.springer.com/book/10.1007%2F978-1-4302-6572-6"	moppl	9.465619	-5.198781	comment	4.0	22.0	1488881947	-4.9636517
13823398	Has it been long enough for people t	Has it been long enough for people to forget NT on Alpha, MIPS and x86 (and i860, though not released)?  And to forget both PReP (https://en.wikipedia.org/wiki/PowerPC_Reference_Platform) and CHRP (https://en.wikipedia.org/wiki/Common_Hardware_Reference_Plat...) which were going to break the Intel stranglehold once and for all?	foobiekr	9.540994	-5.321493	comment	4.0	16.0	1489004298	-8.0260515
13857651	>> Diversification. They see the wri	>> Diversification. They see the writing on the wall for their CPU business and it's associated margins. They need other high-margin highly in demand tech products to go after.I completely agree.>> Furthermore, I'm guessing x86 has almost no representation in the self-driving car space at the moment. They're probably hoping to change that.But this, not so much. x86 is way too power hungry (especially for EVs) and way too expensive for automotive use.	phkahler	9.618411	-5.2230678	comment	4.0	21.0	1489412056	-7.757106
13924403	The security implications of this as	"The security implications of this as commented on the article seems pretty bad. Wonder if any microcode fix can work or it would need a silicon level fix. The second I presume would be very bad?-- Keeping my earlier comment but it seems there's a microcode fix in testing currently.
http://forum.hwbot.org/showpost.php?p=480922&postcount=30"	tmd83	9.566671	-5.350357	comment	4.0	37.0	1490117854	7.6842556
13925794	It's crazy how today we can just rel	It's crazy how today we can just release microcode updates to patch the CPU, compared to the original Pentium bug which requires the operating system to be patched.	djsumdog	9.546138	-5.3451753	comment	4.0	17.0	1490127300	7.7962565
13942479	8 Boards?  How about turn one FPGA b	"8 Boards?  How about turn one FPGA board into a logic analyzer.  For example, get the $25 MachXo3LF starter kit:http://www.latticesemi.com/Products/DevelopmentBoardsAndKits...And that's pretty much it- Lattice includes ""Reveal"" a logic analyzer which can run on the FPGA in their tools.  It's intended to debug designs, but there is nothing stopping you from capturing data from pins.  Pretty sure it would capture signals up to ~200 MHz.http://media.latticesemi.com/~/media/LatticeSemi/Images/Prod...(it would be a lot better if it had a superspeed USB connection- they should make a version with Cypress FX3)"	jhallenworld	9.126252	-5.2813096	comment	4.0	26.0	1490292960	8.200227
13942761	What price point are we talking abou	"What price point are we talking about here?Throw down a single DDR3 Memory chip, and you've already eaten up like half the $25 hardware budget.http://www.digikey.com/product-detail/en/micron-technology-i...The ""embedded"" solution is: buy embedded on-board SRAM when you need it, and if necessary, buy an embedded on-board SRAM memory controller if you need it. Building your own memory-controller out of an FPGA sounds like hell to layout.Anyway, if we're talking about cheap stuff, DDR3L isn't the technology of note. This is about simpler SDRAM-level stuff, maybe a few MB at a time is sufficient.----Furthermore: How many LUTs will your memory controller take up?http://www.latticesemi.com/en/Products"	dragontamer	9.394097	-5.210487	comment	4.0	16.0	1490294435	8.139753
13963365	"The advantage of multiple ""users"" is"	"The advantage of multiple ""users"" isn't just blocking one person's access to another person's stuff. It's also a valuable tool for sandboxing system processes which need to run parallel on the same host system.I'm addition to that, a monolithic unikernel (as unikernels usually are) would have the issue of a higher tendency for kernel panics.So i really can't see unikernels becoming mainstream. If anything the reverse trend is true with more complex kernel designs like micro kernels becoming more favourable as computing hardware gets cheaper.The real growth area for unikernels is virtualized appliances, eg running a single purpose service as a Xen unikernel. But even that is awfully​ niche and often better served (particularly in terms of developer and sysadmin productivity) with containers"	laumars	9.884423	-6.2713237	comment	4.0	17.0	1490563237	-12.378543
13964252	I'm not trying to rise any polemics 	"I'm not trying to rise any polemics about.. just for the sake of the debate...but is there any social skills difference to Linus? I mean, I just admire both of them.. there are very few people that can drive complex projects like Linux and templeOS.. and mental stability is something that doesn't really help much here. 
What I want to say is: people are like they are... we just need to love them, give them a chance to be heard.. in the end we all go back to ashes and our ideas stay flying freely...
I've been running a team of about 70 people and it amazes me how different personalities create a dynamic organism... made of just tiny little imperfect pieces.."	tmsldd	9.31272	-5.876935	comment	4.0	17.0	1490574576	4.2916255
13974116	Intel crosses an unacceptable ethica	Intel crosses an unacceptable ethical line	webaholic	9.317448	-5.1954885	story	4.0	62.0	1490675828	7.7366457
13976125	Unikernels are awesome. But it looks	Unikernels are awesome. But it looks like these are docker images for building unikernels, not running the unikernel itself using docker tooling. Is it possible to do that? Or is the problem that docker inherits the host kernel and therefore you need to run the unikernel inside qemu inside docker? Is there any way to avoid this extra layer of virtualization so that you can run unikernels with docker tooling?	chatmasta	9.743244	-6.390592	comment	4.0	15.0	1490705735	-12.409053
13978542	One of the big things we've worked o	One of the big things we've worked on over the past few months is giving users fine grained control of which files are indexed by kite:- Kite only indexes directories that you have explicitly enabled- You can create a .kiteignore file (same semantics as .gitignore) to exclude specific files / patterns.	alexflint	8.763179	-6.357145	comment	4.0	12.0	1490721735	8.970766
13997263	You are now aware we live in a world	You are now aware we live in a world where even CPUs have microcode patches.	tbrock	9.580307	-5.361865	comment	4.0	13.0	1490895097	7.7632737
14004216	ECC Memory and AMD's Ryzen – A Deep 	ECC Memory and AMD's Ryzen – A Deep Dive	nacc	9.421667	-5.4464493	story	4.0	130.0	1490971111	8.168748
14008644	Something that's not really spoken t	Something that's not really spoken to but is just as important is that FPGA development isn't software development. You're specifying hardware and usually that hardware doesn't just scale to new platforms.Time will tell if Open Source can make the transition over to that domain I'm cautiously optimistic but I think there's a larger cultural divide there than called out.	vvanders	9.090406	-5.3611126	comment	4.0	29.0	1490997091	8.428995
14008869	If you think GPUs are too power hung	If you think GPUs are too power hungry then you're in for a shock with FPGAs. Switching FPGAs are incredibly power hungry since they run on much larger processes.FWIW most modern FPGAs use discrete DSPs anyway so you're not really getting the flexibility at that level.	vvanders	9.07271	-5.293048	comment	4.0	27.0	1490998874	8.257934
14037414	Not when I read the replies to that 	"Not when I read the replies to that reply.  @Carsten_Haitzler said:

  as for the ""you bitch"" comment. that does not appear anywhere inside efl at asll. i can only assume you are full of bullshit here as with a lot of the prior ""facts"" you have disclosed, as a grep through our codebase for efl and elementary shows no such string:

  core/efl.git - EFL core libraries
  evas - change error out from bitch to complain - cosmetic changeHEADmaster
  committer Carsten Haitzler (Rasterman) raster@rasterman.com	2015-03-11 12:59:01 (GMT)

  F#*k off."	graton	9.268773	-6.0328307	comment	4.0	16.0	1491341511	-7.9416428
14087670	Multicore has been 'for the masses' 	Multicore has been 'for the masses' for a decade or more by now, even in mobile phones. What is different here than with other chips made by Intel or AMD that makes you say that?	jacquesm	9.496826	-5.2516465	comment	4.0	14.0	1491918442	7.9743085
14092747	It's not a drawing tool. It's a sear	It's not a drawing tool. It's a search engine for clip art. That's very Google.This may be the answer for how to enter emoji. There are now over 2600 emoji, with more to come. Keyboard selection isn't working and menus are huge.	Animats	9.816681	-6.263612	comment	4.0	17.0	1491946937	13.03437
14116510	Astonishingly, Real Mode still exist	Astonishingly, Real Mode still exists even on 64-bit Intel chips, and is still the default mode. Booting a modern OS involves a whole stack of bootstraps to jump from Real Mode to Protected Mode to Long Mode.It's duct tape all the way down.	LeoPanthera	9.760743	-5.349335	comment	4.0	15.0	1492197628	-7.8760805
14127902	> There are many who say we are runn	> There are many who say we are running out of the benefits of parallelization for CPUs and that soon, adding cores won’t get us much in terms of added performance.Are people really saying that? There's a lot of discussion about languages and software that have trouble taking advantage of many cores, but I've never heard anyone saying that the benefits of parallelisation are going to reach a limit soon?Perhaps that's what the author meant in shorthand.	dantiberian	9.651317	-5.416919	comment	4.0	14.0	1492381530	8.136239
14129619	I hope. It wouldn't be such a big is	I hope. It wouldn't be such a big issue if Intel stopped stripping ECC from desktop CPU's. Traditionally bad ram causes more bit rot than damaged drives. Ram get less reliable every die shrink, everything should be ECC by now.	shouldbworking	9.419973	-5.470471	comment	4.0	20.0	1492412750	8.212755
14130504	Which is why Intel kinda sucks.  It 	Which is why Intel kinda sucks.  It would cost them basically nothing to have ECC enabled on all of their hardware, but they insist on using it as a differentiator between server and desktop parts.AMD (at least in the past), includes it on all parts so that it's up to the consumer to choose.	tw04	9.400904	-5.4396653	comment	4.0	24.0	1492432769	8.160473
14133456	When an ARM chip reaches the perform	When an ARM chip reaches the performance of a Xeon, it'll draw about as much power as a Xeon. There is no magic - computation has a minimum energy cost.What can happen is to make chips simpler in that less computation is spent in instruction decoding, tracking, scheduling and more is spent on actual execution.	rbanffy	9.486185	-5.185089	comment	4.0	27.0	1492455442	7.8057585
14158037	Better than NAND performance if ever	Better than NAND performance if ever so slightly for a first generation memory product but I still feel like it would not able to scale to DRAM speeds. The search for a universal memory goes on...	randta	9.7937355	-5.2928066	comment	4.0	22.0	1492704926	7.978088
14193043	If you have a textbox on the interne	If you have a textbox on the internet, eventually some special snowflake will put emoji into it. And one day, you'll wake up to your backend systems on fire, because someone decided that their name was the smiling pile of poop emoji.[0] (Are your backend systems jealous that someone else is named that?)I've recently needed to make some fields emoji-proof. This seems like a great resource for testing. Thanks for sharing.[0] http://emojipedia.org/pile-of-poo/	theandrewbailey	9.803709	-6.256021	comment	4.0	14.0	1493125346	12.984652
14193272	I don't understand why emojis should	"I don't understand why emojis should be customizable with skin colors. And five of them nonetheless. If discriminating based on skin color is racist, why do we invent new ways to do it? I'd rather use a single color for everyone (don't care which) because I don't want to express ""a black man smiling"", I want to express ""a man smiling""."	rootlocus	9.785761	-6.2688	comment	4.0	14.0	1493126809	10.724155
14206931	Altitude also plays a factor in rand	"Altitude also plays a factor in random memory corruption.From the wikipedia article on ECC Ram, ""Hence, the error rates increase rapidly with rising altitude; for example, compared to the sea level, the rate of neutron flux is 3.5 times higher at 1.5 km and 300 times higher at 10–12 km (the cruising altitude of commercial airplanes).[3] As a result, systems operating at high altitudes require special provision for reliability."""	blackflame7000	9.622582	-5.519262	comment	4.0	14.0	1493240312	8.195714
14227787	CoreOS works the same way. All conta	"CoreOS works the same way. All containers. You can run `toolbox` to get into a systemd-namespace'd Fedora container (any other container can be specified; it's just Fedora by default), from which you're supposed to do all your troubleshooting/analysis (caveat: systemd-namespace does not seem to support `auditd` well).I still strongly dislike ""containers"". It's not worth the complexity or instability. Two thumbs way down!"	cookiecaper	9.750423	-6.168666	comment	4.0	27.0	1493488886	10.137156
14235644	VHDL and Verilog are virtually no di	VHDL and Verilog are virtually no different from eachother.  It's basically equivalent to ARM assembly vs MIPS assembly -- they are both machine-level assembly languages.If you want something more interesting, see High Level Synthesis (aka C to RTL, SystemC, etc) [1].  But this is still very beta (and has been for over a decade), so it's almost unused in the industry on designs.The majority of hardware design time is now dominated in the hardware verification space, aka SystemVerilog.[1] https://en.wikipedia.org/wiki/High-level_synthesis	pdq	9.118803	-5.48279	comment	4.0	27.0	1493614337	8.550459
14239545	As a sysadmin at a Windows shop, I d	"As a sysadmin at a Windows shop, I don't know what to make of this. Has Intel commented on this, yet? Any OEM?Joanna Rutkowska, who is a renowned security researcher, warned of something like this happening sooner or later[1], so I don't think I can afford to just ignore this.But without something more specific to act on, there is nothing I can do, except wait firmware updates to be released by various vendors. If that happens.And what if Intel does make a statement that essentially says, ""This is all total BS""? I wouldn't know whether to believe them or not.The only scenario where I could have any degree of certainty would be if Intel came out and said, ""Yeah there's an exploitable security hole in ME, here's a patch to disable it"".[1] http://blog.invisiblethings.org/papers/2015/x86_harmf"	krylon	9.5262	-5.2243276	comment	4.0	16.0	1493659746	7.756842
14241470	Wow. A _remotely_ exploitable Intel 	"Wow. A _remotely_ exploitable Intel firmware vulnerability? You don't see one of those every day. My instinctive reaction is that this is ridiculously serious, although I'd need to see the full technical details.It's worth noting that the reference to ""system privileges"" being attained likely refers to something much more privileged than we would normally ascribe to ""system privileges"". Normally, ""system privileges"" would mean something SYSTEM on Windows or root on Linux. In the event of ""system privileges"" in the management component, remember that the main CPU is a slave to this thing."	scarybeast	9.495024	-5.24335	comment	4.0	38.0	1493672035	7.759484
14242819	Seeing this reminded me of something	"Seeing this reminded me of something that happened a few weeks ago. I went to a conference where someone very high up in Intel came out to give a presentation what they were doing for security. A few things stuck out to me:- They said they work very hard to work with Linux to make sure their stuff is compatible.- The person also specifically called out that they work with BIOS vendors (and called out Coreboot by name, implying they work with them)- They added that they intend to make sure all of the features are on every chip, and it included the Intel ME.When the talk was over, the first question someone asked was: ""Is there any backdoor on your chips?"" After a bit of laughter, the presenter said of course there was not and (understandably) got offended by the question. I specifically ask"	kop316	9.419678	-5.189845	comment	4.0	26.0	1493682478	7.7747703
14243550	ECC RAM is a bit of a hard case in t	"ECC RAM is a bit of a hard case in that the memory controller needs a slightly different wire protocol for ECC vs. non-ECC DIMMs. ""Back in the old days"", this was one of the justifications for having a northbridge separate from the CPU. Now, in the name of efficiency, it's all on-chip, making ECC a processor feature rather than a motherboard feature.That being said, it'd certainly be possible to fix this: just ask RAM manufacturers to make their non-ECC memory have the same pin out as ECC memory, with the ECC pins just stubbed to always report that everything is okay. Then all processors could just include the ECC version of the memory controller."	derefr	9.468978	-5.5132666	comment	4.0	14.0	1493692412	8.260287
14243789	If AMT is enabled it would be listen	If AMT is enabled it would be listening on ports 16992 and 16933 (TLS). I ran lspci | grep MEI on my machine (an i3-2100, not vPRO as far as I know, running Linux Ubuntu 16.04) and got:00:16.0 Communication controller: Intel Corporation 6 Series/C200 Series Chipset Family MEI Controller #1 (rev 04)Then ran nmap -p- and the ports didn't show up, and can't access them, so AMT is disabled. You can read more on how enable or disable AMT and how to access it here:http://manpages.ubuntu.com/manpages/zesty/man7/amt-howto.7.h...	ohrer	9.449954	-5.2431808	comment	4.0	13.0	1493696337	7.808728
14275931	"Having a ""management engine"" with di"	"Having a ""management engine"" with direct access to the network and to memory is questionable in itself. Its code being secret indicates there's probably something bad going in.  If it only does what Intel says it does, it doesn't need to be secret."	Animats	9.486731	-5.227987	comment	4.0	27.0	1494010604	7.8079143
14282243	Is there any particular reason not t	Is there any particular reason not to use emoji? JavaScript is by specification a unicode language. I already have registered users in my system with pictographic name strings, why not software?   Might be some introductory issues with logs and terminals and incorrect assumptions by developer tools, surely nothing we can't fix.	inopinatus	9.838643	-6.266372	comment	4.0	21.0	1494104532	-13.959235
14284332	> RISC-V is amenable to a wide array	> RISC-V is amenable to a wide array of microarchitectural decisionsAs is ARMv8. Applied Micro, Broadcom, Cavium, Huawei, Nvidia, AMD, Samsung and Apple are all architectural licensees with radically different microarchitectural implementations. For example, Nvidia is Transmeta code-morphing style implementation. Also, Intel and AMD continue to innovate in the x86 space.At this date, RISC-V has no fundamental advantage over any of these architectures and then has the fundamental disadvantage of not having access to their IP. You're lining up against Usain Bolt and your advantage is that you're wearing organic cotton. That's just not gonna work.	CalChris	9.388172	-5.6517897	comment	4.0	28.0	1494142516	-10.577285
14313917	Is enthusiast the right word? I alwa	Is enthusiast the right word? I always thought I was an enthusiast, but I've got no need for 16 cores.I think specialist might fit better.	flukus	9.477763	-5.193961	comment	4.0	13.0	1494478571	7.881986
14328766	One of the big selling points of x86	One of the big selling points of x86 is backwards compatibility. If you have some OS from 1990 you can still run it (without emulation or virtualization, so long as it doesn't depend on clock speed), which is pretty crazy.Slight aside, there are a lot of reasons that Itanium failed, but certainly one of them was lack of backwards compatibility.	rdmsr	9.535491	-5.480717	comment	4.0	17.0	1494632283	-7.7717495
14332179	Reverse-Engineering the Intel Manage	Reverse-Engineering the Intel Management Engine	laamalif	9.524495	-5.2274084	story	4.0	273.0	1494698889	-6.9692183
14331716	Designer of the Neo here, and owner 	"Designer of the Neo here, and owner of the California ""VLIW"" license plate. As you can guess, I am a die hard VLIW advocate, and a strong believer that the original promises of VLIW (Drastically simpler decode logic, implicit instruction level parallelism, virtually no control/data hazards on chip).VLIW has gotten an extremely bad rap outside of the embedded space due to Itanium, which I strongly contend was not a VLIW in spirit (which you cans see me talk in more depth on here: https://youtu.be/ki6jVXZM2XU?t=441). Itanium introduced a ton of indeterminism by having static scheduling unfriendly things like branch prediction, variable latency caches, and still trying to have some level of support for x86. The core problem for Itanium is that it was impossible for the compiler to make good d"	trsohmers	9.570444	-5.628515	comment	4.0	22.0	1494692779	8.24407
14335915	Why would Intel insist on being so s	Why would Intel insist on being so secretive about their management engine? Is it some kind of competitive advantage for them?Supposedly, it's useful for management tasks in enterprise environments, but if I were CIO, I think I would ban VPro chips. Who wants ring -3 processes running on their network for which they have no information about?	criddell	9.457525	-5.2127156	comment	4.0	21.0	1494774789	7.7149305
14340461	SOL except that the arms can be rend	SOL except that the arms can be rendered useless with a simple update in defenses.	votepaunchy	9.561131	-5.2264643	comment	4.0	13.0	1494844124	-7.674888
14350853	> The new prototype has 160 TB of sh	> The new prototype has 160 TB of shared memory spread across 40 physical nodes, interconnected using a high-performance fabric protocol.So basically something similar to RDMA scaled to 40 nodes, 4 TB RAM per node.	lossolo	9.936872	-5.335393	comment	4.0	15.0	1494952131	7.945455
14354578	I bet a 64c Zen chip would be amazin	I bet a 64c Zen chip would be amazing with mixed SQL Server workloads but SQL Server's per-core licensing will make it crazy cost prohibitive. $456k for one server - ouch! Here's hoping per-core licensing goes tf away.	gfody	9.399774	-5.2418036	comment	4.0	17.0	1494980861	8.018907
14361522	INTEL-SA-00075 – AMT Linux Detection	INTEL-SA-00075 – AMT Linux Detection and Mitigation Tools	laamalif	9.410463	-5.2475996	story	4.0	47.0	1495046579	7.8062224
14371185	I am a big fan of the blob emojis fr	"I am a big fan of the blob emojis from Android 5.0.
They are very opinionated and because of that I think they were amazing at conveying emotions. To me it always seemed like the blobs had their own character and role they played.
Another thing I loved about the blobs was the consistent neutrality. Gender, color, social standing didn't matter at all. They were just blob people, doing what blob people do, display emotion and context.In my opinion the evolution of the emojis has taken a fundamentally wrong turn. The introduction of skin, hair color variations, genders, granular selections in things like a family setup and mixing in humans is, in my view, fundamentally wrong.To me the simplicity of the emojis were their main strength. You want family? Sure, family emoji. But now you have to s"	traspler	9.784805	-6.2731457	comment	4.0	15.0	1495142301	-13.959065
14428854	It looks like their Windows PSP driv	It looks like their Windows PSP drivers open ports on 0.0.0.0. https://www.reddit.com/r/Amd/comments/6dinzy/why_do_amds_psp....Note that AMD' claim that it's only local loopback (127.0.0.1) has been refuted by numerous comments, and without further reply from AMD.Given AMD's refusal to work with libreboot, or document the on-die Arm cores with DMA memory access, these processors should not be considered secure for any layer 3 networking, financial or security related tasks.	julian_1	9.401601	-5.242325	comment	4.0	12.0	1495857373	7.81123
14427562	Not the only pain point.  It made re	Not the only pain point.  It made register assignment harder for the compiler.Fundamentally you load from memory in generated code by adding two numbers together (e.g. the struct address and field offset, array address and index...).  Motorola figured that you could just pick one number from each of two sets and thus save two bits (i.e. the source registers could be encoded with 3 bits instead of 4) in the encoding for the instruction.As far as CISC tricks go, it wasn't too bad.  But it's aged poorly: no one would design a ISA like that today, while Intel's elaborate addressing modes introduced with the 386 are producing code size and cache efficiency benefits to this very day.	ajross	9.911613	-5.9496775	comment	4.0	20.0	1495836616	-7.549964
14435682	> Issues: [...] Slow on single cores	> Issues: [...] Slow on single cores, Raspberry PiA text editor that is slow on 1GHz single-core machines. What a time to be alive.	andrepd	9.569836	-5.241467	comment	4.0	23.0	1495999067	7.8841543
14437450	Exploring DynamIQ and ARM’s New CPUs	Exploring DynamIQ and ARM’s New CPUs: Cortex-A75, Cortex-A55	msh	9.52396	-5.1897526	story	4.0	67.0	1496033169	7.7690997
14449080	Who the fuck writes a fully costed b	Who the fuck writes a fully costed business case on whether or not to spend a day setting up a CI server?I'm trying to get some fucking work done, not convince investors I need a series A.	crdoconnor	9.213296	-6.3594074	comment	4.0	26.0	1496183407	6.0461516
14453613	Before you get excited about unleash	"Before you get excited about unleashing the power of 16 cores on your desktop... I have recently upgraded from the 4-core to 6-core i7 with roughly the same frequency/turbo and noticed that compile times have actually increased.Disappointing, I thought, especially because in addition to extra two cores I now sport a quad-channel DDR RAM. Well, turns out that compiling my Go projects does not generate enough ""hot"" threads, and the Linux scheduler keeps moving them around between 6 cores, letting the cores to ""cool down"" and drop to 1.2Ghz idle frequency. Meanwhile the 4-core box is happily spinning at 3.4-3.8Ghz during the compile cycle.The only way to make the 6-core box to perform was to enable ""performance"" policy for intel_pstate which leads to the CPU running at its full speed even at "	old-gregg	9.526749	-5.2117257	comment	4.0	14.0	1496247141	7.866748
14457109	I want to point out that a bunch of 	"I want to point out that a bunch of things are rolled into this announcement:- Skylake is now generally available- Broadwell is now globally visible- ""Extended Memory"" custom machine types are now in BetaI decided to focus on Skylake as GA for the title, but depending on your interest these other announcements may be good to know as well. In particular, this changes the historical ""us-central1-a is the oldest zone"" into ""us-central1-a is a better choice than 1-f"".Disclaimer: I work on Google Cloud (and want to sell you cores)[Edited: I always forget newlines]"	boulos	9.341741	-5.1854005	comment	4.0	27.0	1496278325	7.827256
14473107	Yeah but what you really want is bas	Yeah but what you really want is base-emoji. https://github.com/pfrazee/base-emoji	pfraze	9.812649	-6.255489	comment	4.0	35.0	1496435760	-13.958138
14473300	Samsung’s Bizarre Emojis	Samsung’s Bizarre Emojis	coldtea	9.80483	-6.266153	story	4.0	40.0	1496437465	-13.95362
14494902	"I've never seen ""live"" core memory. "	"I've never seen ""live"" core memory.  Anyone know how it stands up to physical shock?  For example, if someone accidentally bumped the rack, could it cause some of the bits to flip?"	13of40	9.826492	-5.4234595	comment	4.0	12.0	1496726106	8.124326
14516772	You lose at least one thing with 64 	You lose at least one thing with 64 bit Windows versus 32 bit, support for legacy 16 bit applications or components. When Windows Vista, 7 and 8 were released there were still many in use which alone justified Microsoft releasing 32 bit OS versions. I still see them in use today but at a much much lower rate than 5 years ago when Windows 8 was released.	tssva	9.890826	-5.223496	comment	4.0	17.0	1496952011	-8.0132675
14518313	Why would they need to emulate x86 t	Why would they need to emulate x86 they can just compile for ARM.	ams6110	9.729211	-5.2977767	comment	4.0	17.0	1496968176	-7.752804
14518705	WRT Itanium and all VLIW processors 	WRT Itanium and all VLIW processors for that mater, you have to compile for the microarchitecture of the processor to fully take advantage of it. Which sinks the x86 binary portability that we've all come to know and love. Which leads to the fundamental ease that ubiquity brings to working with x86 as an end user or any software dev that doesn't really care about processor internals.It sure would be interesting to see something else challenge x86, but since ARM/Power/RISC-V are all within the same architectural tradition I doubt they will provide it. SIMD as used by GPUs is useful only when you have very structured parallelism like arithmetic on large data sets.I think if we're going to see a challenger worth noting they'll look like they're crazy with the hard uphill battle and novel tech	jackyinger	9.58052	-5.526041	comment	4.0	23.0	1496973792	8.007385
14520469	Exploiting vPro / AMT / any remote a	Exploiting vPro / AMT / any remote access mechanism from any chip maker is hardly a new idea.AMT and AMD's equivalent (don't remember the name) has been a holy grail for security researchers and malware authors alike for many years. People have been begging Intel for a very long time to make business-tier chips without remote access capabilities.For personal computing, at least we have enthusiast chips. For example, my i7 K model lacks the technology.EDIT: AMD's remote tech is called Platform Security Processor (PSP). Thank you, jacquesm!	kakarot	9.453089	-5.2386336	comment	4.0	21.0	1497005065	7.795671
14520802	is why Intel needed to give an irrev	is why Intel needed to give an irreversible and verifiable way of completely disabling it.The article said it comes disabled by default. Isn't this a verifiable way, or is the article incorrect?	rufugee	9.500156	-5.2445245	comment	4.0	20.0	1497010065	7.7504168
14523945	Because some users still have 32-bit	Because some users still have 32-bit computers. How is this not obvious?He's talking like there are people with 64-bit PCs running 32-bit Windows out of cluelessness or spite.	PhasmaFelis	9.907004	-5.252486	comment	4.0	13.0	1497037829	-7.932884
14524173	This is a terrible article.> The mai	This is a terrible article.> The main gigantic upside of a 64-bit process is the ability to support more than 2 GBytes of RAM ... Since only 1.6% of Backblaze customers have 2 GBytes or less of RAM, the other 98.4% desperately need 64-bit support, period, end of story.This would only be true if all those Backblaze customers were only running one process on their machines. With PAE, A 32-bit system can support more than 2 GB, just not a 32-bit process. And actually, there are workarounds available to enable even that.> And remember, there is no downside.There is a downside. 64-bit systems consume more RAM since every pointer and word is double the size. This could mean a performance penalty due to more swapping too.> Because there is zero downside, the first time it could, Apple shipped wit	shawnz	9.864788	-5.246708	comment	4.0	31.0	1497039507	8.03239
14525436	Well, since x86 is a monopoly ... In	Well, since x86 is a monopoly ... Intel oughta go easy on this one.	nerpderp83	9.5751	-5.2735257	comment	4.0	15.0	1497052524	7.7442503
14526294	If I ran a hosting company and all o	If I ran a hosting company and all of my servers were compromised by ring -3 malware exploiting the Intel AMT vulnerability, the first thing I'd do is privately inform Intel that I intend to go public with the story and sue for damages, after which Intel would perhaps offer a very generous bribe for my silence and a week-long window to replace all of the server processors for free, on the one condition that I bury the truth by fabricating a story about an imaginary ex-employee who improbably was both smart enough to gain an administrative position in a large company while also being stupid enough to risk decades in prison for petty revenge over workplace drama.	stevenh	9.38239	-5.1869307	comment	4.0	28.0	1497073170	7.6778884
14528849	To be fair Intel has done a lot of w	To be fair Intel has done a lot of work to make the x86 as great as possible.  Patent lawsuits are awful. I'm not sure just copying someone's technology and emulating it without paying a license fee is all that great either.My guess is this is all just negotiation from Microsoft's point of view and they are just trying to get Intel to license the ability to emulate x86.Another possibility is this is a way to get Intel to invest more resources ( even at a loss) into competing with ARM.	blazespin	9.551044	-5.229436	comment	4.0	62.0	1497123845	7.7245464
14529078	x86-64 is a perfectly acceptable ISA	x86-64 is a perfectly acceptable ISA. Strong memory ordering, no architectural optimizations leaking out like branch delay slots or stack windows. Pretty good i-cache efficiency through the use of two-address code and memory operands. Of course, Intel didn't have much to do with it. Most of it is either an accident of history or the work of AMD, who a lot of work regularizing the ISA in the 64-bit transition.	rayiner	9.637156	-5.5062194	comment	4.0	25.0	1497126808	-7.693347
14529095	No.If they're anything like the Itan	No.If they're anything like the Itanium ISA patents, then Intel owns the rights to the instructions themselves and their meanings. Emulation would be infringing.	bitwize	9.527436	-5.26775	comment	4.0	31.0	1497127053	-7.5777555
14529043	Emulation is only an implementation 	"Emulation is only an implementation of the ISA. The x86 ISA is hardly ""as great as possible"". In fact, it's downright crummy: x86-64 is as bloated as RISC architectures usually are without any of RISC's benefits. At best you can make the argument that x86 has done well in spite of the ISA, not because of it.The silicon-level implementation is another matter entirely, of course--but emulation has nothing to do with that. In fact, that's the definition of emulation--using a completely different implementation to offer a compatible interface."	pcwalton	9.684542	-5.259557	comment	4.0	33.0	1497126343	-7.7202563
14546716	As Greg points out this has come up 	"As Greg points out this has come up multiple times and in multiple strategies for implementation.In the early 2000's I lead the design of a memory based Ethernet appliance which we called ""Network Accessible Memory"". The basic idea combined the  fact that FPGAs were pretty cheap, you could easily build a gigabit network interface on one side and a DDR2/3 interface on the other, and with a very simple ethernet protocol have terabytes of memory basically a couple of microseconds away from a CPU as opposed to 'swap' which was milliseconds away at best. (we also simulated the architecture using a machine just exporting memory to the network)The two biggest wins are that the memory is already 'live' when machines that might use it boot up so they don't spend time reading in state, and in a mult"	ChuckMcM	9.854584	-5.463453	comment	4.0	18.0	1497375421	8.049924
14549709	Ask HN: What's an inexpensive set-up	Ask HN: What's an inexpensive set-up for learning? I've done a lot of work with microcontrollers, but never FPGAs. Is there a cheap development board with software, that I can try out at home?	analog31	9.093576	-5.3015394	comment	4.0	15.0	1497398104	8.311222
14564224	It's interesting that the EPYC 7601 	It's interesting that the EPYC 7601 comes at a significant premium to the EPYC 7551P - double the price for a 200MHz base clock increase and dual-socket support. Question for those more knowledgeable on data centres - is the modest performance gain and increased density worth it for the cost?	GordonS	9.359842	-5.207858	comment	4.0	17.0	1497559758	7.909468
14585880	Oh, please don't...I've seen CI syst	Oh, please don't...I've seen CI systems broken because of Unicode in git commit lines... :-/	jaimebuelta	9.194682	-6.361153	comment	4.0	13.0	1497869074	-11.867119
14587076	I want to emphasize the Tooling is t	I want to emphasize the Tooling is terrible and non-freeIt is really hard to get a young programmer excited about programming FPGAs when the tools are archaic, buggy, proprietary, and non-portable. The higher-level interfaces (C abstractions etc.) are also lacking.	javiramos	9.078118	-5.38387	comment	4.0	18.0	1497881494	8.494373
14598459	AMD muscles in on Xeon’s turf as it 	AMD muscles in on Xeon’s turf as it unveils Epyc	rbanffy	9.313414	-5.238676	story	4.0	90.0	1497991596	7.927488
14630335	So will this be affecting most Macbo	"So will this be affecting most Macbook Pros of the past few years?If so, there's a way to disable hyper-threading, but you need Xcode (Instruments).Open Instruments. Go to Preferences. Choose 'CPU'. Uncheck ""Hardware Multi-Threading"".  Rebooting will reset it."	ourcat	9.691873	-5.2679563	comment	4.0	23.0	1498403498	8.094252
14630414	  The issue was being investigated b	"  The issue was being investigated by the OCaml community since
  2017-01-06, with reports of malfunctions going at least as far back as
  Q2 2016.  It was narrowed down to Skylake with hyper-threading, which is
  a strong indicative of a processor defect.  Intel was contacted about
  it, but did not provide further feedback as far as we know.
 
  Fast-forward a few months, and Mark Shinwell noticed the mention of a
  possible fix for a microcode defect with unknown hit-ratio in the
  intel-microcode package changelog.  He matched it to the issues the
  OCaml community were observing, verified that the microcode fix indeed
  solved the OCaml issue, and contacted the Debian maintainer about it.
 
  Apparently, Intel had indeed found the issue, *documented it* (see
  below) and *fixed it*.  "	theGimp	9.528413	-5.345248	comment	4.0	23.0	1498404334	7.9964843
14630459	The latest intel-microcode package f	The latest intel-microcode package from Ubuntu 16.04 does not fix the problem. I installed the same package from Ubuntu 17.10 [0] which fixes the problem. You can check your system with the script linked in the mailing list thread [1].[0] https://packages.ubuntu.com/en/artful/amd64/intel-microcode/...[1] https://lists.debian.org/debian-devel/2017/06/msg00309.html	fotcorn	9.551706	-5.3797183	comment	4.0	21.0	1498404816	7.7411733
14630728	>Rule of thumb: On a desktop, if you	">Rule of thumb: On a desktop, if you have an i5 you do not have Hyperthreading. All i3s and i7s do have Hyperthreading, as do new Kaby Lake Pentiums (G4560, 4600, 4620).Hmm...either this statement is wrong or this desktop /proc/cpinfo is wrong:    $ grep -E 'model|stepping|cpu cores' /proc/cpuinfo | sort -u
    cpu cores	    : 4
    model           : 94
    model name	    : Intel(R) Core(TM) i5-6600 CPU @ 3.30GHz
    stepping	    : 3
    $ grep -q '^flags.*[[:space:]]ht[[:space:]]' /proc/cpuinfo && echo ""Hyper-threading is supported""
    Hyper-threading is supported

Intel's product spec page[1] lists this CPU as not supporting Hyper-Threading so I'm a bit puzzled as to why the ht flag is present.[1]https://ark.intel.com/products/88188/Intel-Core-i5-6600-Proc..."	decisiveness	9.577972	-5.411476	comment	4.0	14.0	1498407510	8.161893
14632534	This is super cool, maybe add Itaniu	This is super cool, maybe add Itanium for an example of what failed?	deepnotderp	9.537956	-5.5673413	comment	4.0	45.0	1498429233	-7.723993
14637111	At the end of the day, RISC-V will o	"At the end of the day, RISC-V will only succeed if I can buy a board where I can attach some SATA drive, a monitor and keyboard/mouse the same way people buy some ITX board.This might be tough to hear for people discussing the ins and outs of RISC-V and why is so much better than x86 or ARM and the big name sponsors don't make it any better with the usual tight hugs and lullabies. But you need to put it in the hands of the people just like ""the PC"", otherwise it will be a pet project waiting to be forgotten by everybody other than the nostalgic ones."	PedroBatista	9.384224	-5.6392703	comment	4.0	24.0	1498487795	-10.5697
14647051	For someone who doesn't really game 	For someone who doesn't really game nor overlock CPUs, why doesn't CPU manufacturers use the same technique out of the box?	yeezul	9.49229	-5.1888857	comment	4.0	14.0	1498582524	7.825743
14676375	Linus Torvalds was targeted.  http:/	Linus Torvalds was targeted.  http://www.theregister.co.uk/2015/11/06/linus_torvalds_targe...Also, the pervasive drive-by meddling of SJWs to brow-beat FOSS projects into accepting their Code of Conduct is further bullshit that is reinforced by well-meaning people that think it's a good thing to state the obvious, but then add a bunch of vague powers that can kick people out without due process.	everdayimhustln	9.299517	-5.8856807	comment	4.0	15.0	1498904045	4.3270044
14685158	How about their dedicated emoji bar 	How about their dedicated emoji bar instead of control keys?	nickpeterson	9.804573	-6.239224	comment	4.0	35.0	1499042912	-13.954643
14685167	1. It's not a dedicated emoji bar.2.	1. It's not a dedicated emoji bar.2. You can set it to permanently show control keys.3. It's optional. You can buy the model without it.4. Some of us actually like it. I use IntelliJ every day and it's great to be able to have dedicated refactor/debug keys instead of having to remember arcane key commands.	threeseed	9.818116	-6.257041	comment	4.0	27.0	1499043060	-13.954889
30729551	I want to live in the alternate 90's	I want to live in the alternate 90's universe where a slim laptop with an alpha processor and Apple badge exists.  RISC architecture is going to change everything!	qbasic_forever	9.426901	-5.5814786	comment	4.0	18.0	1647650034	-10.549283
30740980	The conditional execution section ma	The conditional execution section makes no mention of the fact AArch64 doesn't have this feature either, and bizarrely lists a “64-bit” ARM code example that isn't. This doesn't inspire confidence in the author's understanding.	TazeTSchnitzel	9.735402	-5.520417	comment	4.0	17.0	1647763485	-7.8045907
30741653	It’s nice to have an open ISA, don’t	It’s nice to have an open ISA, don’t get me wrong.However, trade offs matter. Compressing instructions may improve density, but it makes them variable length. This is a big barrier to decoding in parallel, which is very important to high performance cores.	dontlaugh	9.665082	-5.646388	comment	4.0	15.0	1647774027	-7.876129
30741976	I have difficulty following the poin	"I have difficulty following the points the author is trying to make.- Even with instruction compression the type of code they present will take more space than, say, Aarch64.
- The entire section on conditional execution doesn't make any sense. Conditional execution is bad, we know it, that's why modern ARM does not have conditional execution. Overall, author's insistence to compare RISC-V to practically obsolete ARMv7 when ARMv8 has been available for over a decade is... odd. 
- Regarding SIMD... it's a very complex topic, but personally, I don't see any fundamental problem with vector-style ISA. I think it's a great way of allowing scalable software. But vector ISA does not replace basic SIMD as they solve different problems. Vector stuff is great for throughput, SIMD is great for latenc"	ribit	9.563465	-5.735518	comment	4.0	18.0	1647778007	-10.470854
30742811	People should zoom right out and thi	"People should zoom right out and think about the whole RISC-V project.
When our phones have billions of transistors, are we seriously supposed to believe that RISC philosophy still matters.
Personally I greatly prefer the user programmable 68000 family of processors.
The marketing of RISC-V is perhaps the most impressive thing about it.
Each to their own, I can see why giant SSD manufacturers want to use a license free design and share the cost of compiler development.
Is there really anything else?"	albanread	9.385515	-5.636042	comment	4.0	12.0	1647786007	-10.560955
30745334	Most of the complaints about RISC-V 	Most of the complaints about RISC-V are extremely basic things like array indexing and conditional execution. These will never not be needed.	wmf	9.4037895	-5.7105417	comment	4.0	12.0	1647801603	-10.579658
30786142	> Right now i have to build and depl	> Right now i have to build and deploy using a cloud server or an older Intel MacBookIs it really weird to me how little-known the art of cross-compilation is. You can target x86 from an ARM build box, or the other way around.	jeffbee	9.783207	-5.411587	comment	4.0	21.0	1648092715	-7.868767
30791857	What we need is some kind of distrib	What we need is some kind of distributed version control system, then this would never happen.Ideally it'd be a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency, but I think that's just unrealistic.	AndrewOMartin	8.781112	-6.3934298	comment	4.0	18.0	1648138219	-11.753207
30793302	is there any reason they are still u	is there any reason they are still using i386 hardware?  i can think of a million reasons to upgrade but not many to stay	flatiron	9.6725	-5.2448864	comment	4.0	17.0	1648144557	-7.7706847
30823252	Borg being single-threaded is painfu	Borg being single-threaded is painful in the era of consumer 12 and 16 core CPUs, and even prosumer 64-core.	cma	9.731963	-5.390385	comment	4.0	14.0	1648409372	8.117464
30829419	Thing is, it's not even clear that t	"Thing is, it's not even clear that their added elements are all that sensible.  If you're always running trusted tasks on your embedded hardware, what do you need the MPU for? Even in principle, it can only save you a bounds check. And if you start running outside code, then the clear privilege separation in Tock between trusted ""Capsules"" and other ""Tasks"" starts looking plenty attractive.  Even OP notes that this MPU business introduces severe overhead."	zozbot234	9.9375305	-5.5528092	comment	4.0	21.0	1648467701	8.416216
30834625	Why is Apple virtualizing Intel, but	Why is Apple virtualizing Intel, but is Intel not virtualizing Apple hardware?	amelius	9.884104	-5.184127	comment	4.0	17.0	1648496145	-7.989521
30847549	MMX was 64-bit wide, SSE 128-bit wid	MMX was 64-bit wide, SSE 128-bit wide and AVX 256-bit wide, and they succeeded each other rapidly (when compared to the situation now). AVX512 is another doubling, so what's the hold up with this one compared to the previous two doublings?Maybe it's time for AMD to do something about this, like when they took the initiative to create x86-64	Aardwolf	9.423228	-5.4813166	comment	4.0	18.0	1648583710	8.059805
30852714	I'm going to be that guy and just sa	I'm going to be that guy and just say that I wince at the use of emoji instead of words. It's not very accessible and I surely hope nobody actually uses emoji word replacements professionally.	Cthulhu_	9.789067	-6.2622323	comment	4.0	21.0	1648629321	-13.95619
30853782	> everyone knows what a thumbsup mea	"> everyone knows what a thumbsup means ....In some places, a thumbs up means ""Up yours!""  Not very friendly at all."	zozbot234	9.740405	-6.1914124	comment	4.0	13.0	1648640176	-13.96242
30859624	There's so much more to CI/CD than t	"There's so much more to CI/CD than the build definitions (e.g. dashboarding, log viewing/retention, access control, manual interventions, secret management, test reporting, etc.) and while some of your points resonate very strongly with me (e.g. local builds), I can't help but wonder what the endgame is here?You've raised $27m to what? Give away a free tool for engineers to define their builds in? While they continue to use and pay for another service to actually run the builds? I assume you intend to replace the CI service at some point and move up the stack to monetize?Without more transparency its easy to imagine something like...Step 1. Drive uptake of your tool by selling people on the pitfalls of ""CI lock-in""
Step 2. Introduce your own CI solution, which people can now easily switch "	diggs	9.199299	-6.4108696	comment	4.0	21.0	1648667761	6.0687227
30899638	> We only merge code that is ready t	> We only merge code that is ready to go live.In their perception, is the rest of tech industry gambling in every pull request that some untested code would work in production?I work at a large company. We extensively test code on local machines. Then dev test environments. Then small roll out to just a few data centers in prod bed. Run small scale online flight experiments. Then roll out to the rest of prod bed.And I've seen code fail in each of the stages, no matter how extensively we tested and robustly code ran in prior stages.	productceo	9.6465435	-6.298954	comment	4.0	16.0	1649012489	-11.60797
30909692	Are we moving this way because bigge	Are we moving this way because bigger chips with many cores have worse yields? so the answer is to make lots of little chips and fuse then together?	gnarbarian	9.417415	-5.1843305	comment	4.0	16.0	1649094413	-12.204601
30921643	> Counting instructions is very accu	> Counting instructions is very accurate and roughly approximates power usageI’ve always assumed this to be true, but I see a lot of benchmarking tools / libraries measuring wall-clock time or iterations-per-second or something like that, I’ve never seen a benchmark tool which counts CPU instructions. Am I being blind or is there some other reason that I’m not seeing them? :S	Shish2k	9.783004	-5.41754	comment	4.0	14.0	1649178242	7.871171
30932525	Well... AMD can just cite their pres	Well... AMD can just cite their presentation as prior art, and it will be struck down. If anything, Intel was foolish to waste money on bored lawyers.	gjsman-1000	9.234973	-5.191699	comment	4.0	23.0	1649256191	7.8352413
30936232	I know this is a kind of stupid litt	"I know this is a kind of stupid little thing, but I really wish they'd rebranded more completely if they were going to do this. ""That box has a MIPS processor in it. But not a MIPS processor, a MIPS RISC-V processor."" We're going to end up with OSs list on their ""supported platforms"" page things like MIPS, MIPS64, MIPS-brand RISC-V."	yjftsjthsd-h	9.458148	-5.5911436	comment	4.0	17.0	1649272075	-10.447066
30936543	MIPS is making RISC-V processors? Wh	MIPS is making RISC-V processors? What happened to the MIPS arch itself?	MisterTea	9.461359	-5.601055	comment	4.0	31.0	1649273800	-10.468256
30947774	Thanks! I feel like I actually under	"Thanks! I feel like I actually understand that verilog code! Do you ever see the ""rendered"" state on the FPGA, or is that all abstracted away?Would you recommend one of those FPGAs over another? I know iCE40 from this amazing project (https://github.com/nickmqb/fpga_craft) so maybe I'll just get that!"	bajsejohannes	9.104717	-5.441841	comment	4.0	12.0	1649353016	8.515712
30955438	Article claims it’s not possible to 	Article claims it’s not possible to emulate a Pentium III at full speed on an Apple M1, and so there’s no point to a fork attempting this feat. But isn’t that exactly what Rosetta 2 does?	billyjobob	9.763392	-5.297289	comment	4.0	12.0	1649415151	7.632884
31009900	Ah, delta is missing! Right from the	"Ah, delta is missing! Right from the docs, it's ""[a] syntax-highlighting pager for git, diff, and grep output"".[1] https://github.com/dandavison/delta(edit: nevermind, somehow I missed it)"	zamubafoo	8.903433	-6.3816805	comment	4.0	14.0	1649810325	12.68779
31015535	If you look at the bottom graph on t	If you look at the bottom graph on this page https://linux-hardware.org/?view=cpu_family interestingly Core 2 Duo doubled in data representation solely this year.	mhitza	9.480575	-5.205401	comment	4.0	13.0	1649862341	7.834581
31033487	We literally KNOW about the Intel ME	We literally KNOW about the Intel ME and AMD PSP and we KNOW about all the windows telemetry yet most of the worlds IT runs on systems with these backdoors. There's no need to hide it in the first place	dtx1	9.471913	-5.2134123	comment	4.0	18.0	1649971400	7.806093
31048222	Of course, that requires tenants tru	Of course, that requires tenants trust Intel's security.As a security researcher and given past showings from Intel, I wouldn't put much faith in SGX, even if they try to fix past flaws. SGX as a concept for tenant-provider isolation requires strong local attacker security, which is something off the shelf x86 has never had (not up to contemporary standards, ever) and certainly not in anything Intel has put out. They've demonstrated they don't have the culture nor security chops to actually engineer a system that could be trusted, IMO. Plus then there's all the microarchitectural leak vectors with a shared-CPU approach like that, and we know Intel have utterly failed there (not just Spectre; there was absolutely no excuse for L1TF and some of the others, and those really showed us just how	marcan_42	9.514657	-5.247022	comment	4.0	19.0	1650072591	-5.836718
31049709	Also the note at the bottom of that 	Also the note at the bottom of that page: that they are doing away with AVX-512.  A bit sad for those who need to squeeze maximum performance out of a CPU.  (I gather it lives on in Xeon and Zen 4.)	femto	9.408302	-5.424075	comment	4.0	32.0	1650086280	8.043179
31051457	I have seen a deployed altcoin built	"I have seen a deployed altcoin built on SGX. Can't remember the name or if it was even successful.In my opinion, it's a huge risk.  
With a regular blockchain, the fact that someone might maliciously be running the wrong code is baked into the design, and the security model has to handle it.With SGX, you are relying on Intel's security model to make sure everyone is running the same code. If SGX is ever broken (which it has been, to some extent) and a malicious node is running different code, then your whole security model falls apart and they can start attacking the blockchain.You might argue that you can design the blockchain to be secure even when SGX is broken. But if it's secure enough without SGX, why use SGX? You risk your security model being broken due to a bug and nobody realizin"	phire	9.522177	-5.255082	comment	4.0	15.0	1650107920	-5.8297043
31050723	If you're processing a lot of data, 	If you're processing a lot of data, you're better off moving it to the GPU. If you're processing only a little data, the speed-up doesn't matter. I wonder how wide is the Goldilocks Zone where AVX512 makes a practical difference?	WithinReason	9.416689	-5.4954324	comment	4.0	14.0	1650098107	8.064535
31076381	Synchronous Processors (2016)	Synchronous Processors (2016)	palmtree3000	9.481705	-5.228468	story	4.0	30.0	1650315158	7.8276253
31088525	To what extent is the decoding consi	To what extent is the decoding consistent? It always felt weird to me that we'd do something in hardware on every execution that could be done once in software at compile time. But if the decoder does smart things that would make more sense to me. For example, with SMT the decoder could choose not to use certain ops if the compute units are in use by the other thread.	phamilton	9.747048	-5.579825	comment	4.0	15.0	1650399825	7.5700793
31126402	How to Build a BVH (Bounding Volume 	How to Build a BVH (Bounding Volume Hierarchy) on the CPU	henkie_b	9.666598	-5.408292	story	4.0	59.0	1650653712	8.122172
31133762	I once compiled a list of architectu	"I once compiled a list of architectures’ relative IPC on the SPECINT 2006 benchmark:  Cortex-A73 (ARMv8-A)  64.4
  Pentium M   69.0
  Bulldozer (AMD FX)  76.2
  K10 (Phenom II)   76.7
  Goldmont Plus (Atom 2nd gen) 77.5
  Core    80.0
  Bobcat    81.3
  Nehalem    90.0
  Jaguar (PS4)   93.5
  Sandy Bridge  100.0
  Tremont (Atom 3rd gen) 100.7
  Ivy Bridge  105.8
  Cortex-A76 (ARMv8.2-A) 114.7
  Zen   115.9
  Haswell   117.6
  Zen+   119.3
  Broadwell  121.5
  Skylake   124.0
  Zen 2   139.8
  A10 (ARMv8.1-A)  139.8
  Cortex-A77 (ARMv8.2-A) 141.0
  Sunny Cove Ice Lake 146.3
  Cypress Cove Rocket Lake 147.6
  Zen 3   167.4
  A11 (ARMv8.2-A)  186.0
  A12 (ARMv8.3-A)  213.8
  A13 (ARMv8.4-A)  235.0
  A14/M1 (ARMv8.5-A) 236.7"	lynguist	9.426201	-5.2248206	comment	4.0	17.0	1650717575	7.921649
31147248	I have super bivalent opinions about	"I have super bivalent opinions about Intel.  This is the opposite of ambivalent, it means heavily charged in both directions, but cancellation is not allowed.So that's why they should have let all their chips do ECC instead of making it a premium feature, it would have been better for their brand as ""Chipzilla"" and had no real cost.  And it's dangerous!  In fact a soft-error at sea level killed an operating system update on me, lost about tens of thousands of data and money.  I have standing to sue Intel, until this sentence clause in which I hereby forfeit the suit, together with requesting them to reconsider ECC (error correction codes) in all their chips as a safeguard needed due to Moore's Law, which was their business plan.  Just give it a thought, Intel."	daniel-cussen	9.388155	-5.2656207	comment	4.0	33.0	1650827685	7.788681
31147662	It's your error, having a system wit	It's your error, having a system with important data no actual/realtime backup no second system and no plan to recover from a failed update and no ecc is YOUR error alone.However, intel should have made ecc the standard and not just for 1000$+ Xeons.	nix23	9.406452	-5.4787893	comment	4.0	29.0	1650829828	8.200391
31165792	At university one of the mandatory c	At university one of the mandatory courses was Computer Organisation, which teaches how computers are built electronically. Two weeks of that course covered DRAM timings. Recently (almost 15 years later) I was trying to design a simple automation system for my home's ventilation system, and for it I needed to pull my logic signal up to 10v using a FET. I had absolutely no idea how to do that.It's absolutely crazy that at some point I was able to (crudely) design a computer logically to the level of detail of DRAM timings, but at the same time I've never had a deep enough understanding of current to design a circuit that uses a logical signal to switch a 10v line using a FET.(this is how you do it btw: https://tinyurl.com/ydsgmdvh)	tinco	9.768278	-5.3424525	comment	4.0	19.0	1650969438	8.099855
31220900	I don't use a lot of emojis privatel	"I don't use a lot of emojis privately but I especially do not use them in a professional environment. I think one of the reasons being that I dislike the aesthetics, which plays into another reason, which is that they ""feel"" unprofessional. (Although there is probably nothing inherently unprofessional to them, it's basically just a novel way of communicating).The blog post mentions increased interpretability and adaptability but I think making emojis more professional and aesthetically pleasing ""in a professional setting"" might be a big step as well."	chki	9.792943	-6.2633176	comment	4.0	16.0	1651365063	-13.922099
31221794	A related issue: Some random old, no	"A related issue: Some random old, normal symbols are, for some reason, nowadays displayed by many fonts as emojis, i.e. as colored pictures. For example, the ""left right arrow"" symbol, commonly used in formal logic for ""if and only if"", now often appears white with a blue background: ↔. While others have been left untouched, like ""left arrow"": →. This is so annoying if you actually need that symbol in a logical context! Basically, they have made the symbol unusable in many fonts. They should have added a special emoji symbol if they wanted picture arrows..."	cubefox	9.851738	-6.2631106	comment	4.0	17.0	1651374174	-14.003781
31223290	Is it only on my system, or does htt	Is it only on my system, or does https://fonts.google.com/noto/specimen/Noto+Emoji show a mix of colored and black-and-white icons?	daptaq	9.815507	-6.262615	comment	4.0	12.0	1651394935	12.913778
31225643	Intel is removing AVX-512 support fr	Intel is removing AVX-512 support from their newer CPU's (Alder Lake +). :/https://www.igorslab.de/en/intel-deactivated-avx-512-on-alde...	Andoryuuta	9.42271	-5.488968	comment	4.0	34.0	1651417780	8.055594
31225783	Server and workstation chips still h	Server and workstation chips still have AVX-512. It’s only unsupported on CPUs with smaller E(fficeincy) cores.AVX-512 was never really supported in newer consumer CPUs with heterogeneous architecture. These CPUs have a mix of powerful cores and efficiency cores. The AVX-512 instructions were never added to the efficiency cores because it would use way too much die space and defeat the purpose of efficiency cores.There was previously a hidden option to disable the efficiency cores and enable AVX-512 on the remaining power cores, but the number of workloads that would warrant turning off a lot of your cores to speed up AVX-512 calculations is virtually non-existent in the consumer world (where these cheap CPUs are targeted).The whole journalism controversy around AVX-512 has been a bit of a	PragmaticPulp	9.446458	-5.536219	comment	4.0	29.0	1651418804	8.112781
31237422	On AMD systems, many hardware perfor	On AMD systems, many hardware performance counters are locked behind BIOS flags/configuration.I admit that I don't know how Intel works, but disabling the use of these performance-counters at startup should be sufficient for any potential security problem.I'd expect that only development boxes (maybe staging?) would be interested in performance counters anyway. Maybe the occasional development box could be setup for performance-sampling and collecting these counters, but not all production boxes need to be run with performance-counters on.	dragontamer	9.415854	-5.262755	comment	4.0	14.0	1651509452	7.8660583
31256054	None of them seem all that conducive	None of them seem all that conducive to source control or merging.  Any good format for that?	jayd16	8.749778	-6.304911	comment	4.0	29.0	1651630910	-11.741893
31257926	Linux and good-enough commodity x86 	"Linux and good-enough commodity x86 are not better, nor will they ever be better, because one cannot build quality by polishing turds.Sun Microsystems failed because their hardware pricing wasn't competitive with the x86-based PC bucket turds, which were ""good enough"": most people working in IT can't explain why Sun hardware was superior even though it vastly was, so it was like throwing pearls before the swine. We have lots of ignorant idiots in IT, because they were drawn to good salaries like moths to a flame."	Annatar	9.922041	-5.2530646	comment	4.0	16.0	1651651583	-7.8417454
31296062	Sadly dram memory latency has stayed	Sadly dram memory latency has stayed pretty constant over the last decade.  As the cores per memory channel keeps increasing, does make one wonder when more memory channels will be added.	sliken	9.748597	-5.259066	comment	4.0	24.0	1651941043	8.017874
31385888	> because I sure would love to have 	> because I sure would love to have more cores available (currently rocking a 32 core Threadripper)wtf do you need more cores for??? Wat are you doing?> not interested in actually pushing HEDT forward sinceconsider buying a server.	zasdffaa	9.561129	-5.3264036	comment	4.0	41.0	1652599494	8.014635
31385965	I'm a dev too, my machine is a dual 	I'm a dev too, my machine is a dual core haswell.It depends very much what you're doing of course (compiling linux kernel repeatedly perhaps) but if you have a little you can get a heck of a lot out of it with experience, although you surely will hit a wall sometime. But 32 cores not enough is just unimaginable for me.	zasdffaa	9.611292	-5.2766953	comment	4.0	21.0	1652600588	8.003681
31409382	Intel are working on CPUs where you 	"Intel are working on CPUs where you enable features after paying a license fee:https://lwn.net/Articles/884876/
https://news.ycombinator.com/item?id=30394918"	pabs3	9.41866	-5.2052674	comment	4.0	15.0	1652789849	7.761439
31412613	Ask HN: How does Rosetta 2 actually 	Ask HN: How does Rosetta 2 actually work?	lisper	9.801796	-5.3470354	story	4.0	21.0	1652803265	-7.826282
31437312	The Lisp Implementafion for the PDP-	The Lisp Implementafion for the PDP-1 Computer [pdf]	abrax3141	9.869371	-5.490196	story	4.0	84.0	1652980256	-7.559965
31440080	The lack of Alpha seems odd, though 	The lack of Alpha seems odd, though maybe that should be the worst ISA rather than merely individual CPU?	masklinn	9.578019	-5.4655476	comment	4.0	20.0	1652993922	-7.826696
31440349	At least the 960 was somewhat usable	At least the 960 was somewhat usable. Many variants were created, and several were widely used in embedded products for quite a few years. The 860, however, was Just Crap. Full stop. End of story. IIRC it had weird double-instruction modes that compilers just couldn't handle, and if you used them anyway (for very necessary performance) then handling exceptions properly was all but impossible. Definitely gets my vote for worst ever.	notacoward	9.561676	-5.256301	comment	4.0	13.0	1652995437	-7.5197835
31452032	Bombe Machine on an FPGA	Bombe Machine on an FPGA	vha3	9.110353	-5.3229966	story	4.0	83.0	1653077855	8.309611
31474464	"In my opinion ""the best"" would be to"	"In my opinion ""the best"" would be to support only one, fixed, largest vector size and emulate legacy instructions for smaller sizes using microcode (this is slow, but requires minimum transistor count). There is no need to optimize for legacy software; instead it should be recompiled and compiler should generate versions of code for all existing generations of CPUs.This way the CPU design can be simplified and all the complexity moved into compilers."	codedokode	9.639156	-5.469865	comment	4.0	15.0	1653269129	7.713927
31482359	Why they keep avoiding publishing th	Why they keep avoiding publishing the programing hardware interface of FPGAs?What are the real reasons?trash human beings? patent trolls? etc?yes, I would like to know.	sylware	9.08891	-5.3579326	comment	4.0	16.0	1653328000	8.35505
31501729	Ask HN: Would FPGAs be relevant for 	Ask HN: Would FPGAs be relevant for AGI?	ge96	9.097662	-5.349552	story	4.0	4.0	1653465376	8.367846
31501097	After many side channel attacks on S	After many side channel attacks on SGX Intel revealing fundamental design flaws, SGX is absent in recent Intel processors.Centralized services like Signal still pinky swear they will not use any of these exploits and break all the metadata promises they built on SGX. Even if the US government asks them nicely.Any security built on SGX is security theater.	lrvick	9.490652	-5.2414026	comment	4.0	14.0	1653458563	-5.7950163
31518025	This feels way too pessimistic, VMwa	This feels way too pessimistic, VMware got big before open source virtualization took off.I imagine someone could use docker instead of VMware in most cases, and if that's not possible then hire some people to make it so.Vendor lockin is a scary thing, the people who are really going to hurt here are mega super corps who are now going to have to pay out the nose. If you're a smaller company, you should be moving to docker or another open source solution anyway.	999900000999	9.831878	-6.1292124	comment	4.0	24.0	1653571431	-8.324612
31518053	Basically I use git for .local/dotfi	"Basically I use git for .local/dotfiles/ which are then symlinked to the relevant files like .zshrc or .emacs.d/init.el. Then I just keep that repo up to date with git pulls. Works across 2 macbooks, a Fedora workstation, and a Fedora headless server.Couple of bits from a guide I wrote recently: https://gist.github.com/aclarknexient/0ffcb98aa262c585c49d4b...    # store stuff here that you don't want in github
    [[ -f $HOME/.zshenv-local ]] && source $HOME/.zshenv-local

    # depends on 'brew install grep'
    [[ $OSTYPE =~ ^darwin.* ]] && alias grep='ggrep --colour=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn,.idea,.tox}'

That OSTYPE is great for all those little bits that are unique to each operating system. The zshenv-local is in .gitignore, so you can keep tokens, api keys, etc etc in"	bloopernova	8.798128	-6.360164	comment	4.0	15.0	1653571540	-11.558267
31580110	Anyone recommend any tools that can 	Anyone recommend any tools that can do CD pipelines on the CLI, maybe something a bit nicer than Makefiles?	madjam002	9.359628	-6.4288645	comment	4.0	12.0	1654080446	6.3109517
31584496	InnovateFPGA: Wrong Strategy Drives 	InnovateFPGA: Wrong Strategy Drives One of the Best FPGA Dev Contests to Crisis	zdw	9.094365	-5.3385777	story	4.0	41.0	1654101692	8.36679
31626241	I'm sort of surprised Intel is still	I'm sort of surprised Intel is still an option.  since they never revamped the fundamentals of their hyperthreading technology their spectre/meltdown/etc mitigations still send every new chip they make to the barber for a 15-30% haircut in performance.  last hn metrics focused exclusively on comparing their performance against...another Intel chip.just because players like f5 chose to ignore the patches and their Linux kernel patch shipped disabled by default doesn't mean they're out of the woods	nimbius	9.421723	-5.2690663	comment	4.0	15.0	1654385508	7.776201
31645980	How would this affect running an x86	How would this affect running an x86 container on a M1/M2 Mac?	rudolph9	9.577675	-6.3159723	comment	4.0	30.0	1654548244	10.08045
31646531	This can't boot x86-64 containers, b	This can't boot x86-64 containers, but you can create an arm64 container and run x86-64 code in it.	saagarjha	9.628954	-6.0549026	comment	4.0	19.0	1654550903	10.088458
31647541	Does anyone understand (or have any 	Does anyone understand (or have any theories on) how this actually works? I don't understand how it's possible. Surely they didn't write a Linux version of Rosetta, it must be talking to the host OS somehow—but how? Where is the boundary?	Wowfunhappy	9.7892065	-5.374955	comment	4.0	37.0	1654556461	7.5277724
31648557	> It’s doing an AOT translation of x	> It’s doing an AOT translation of x86-64 opcodes to ARM64 equivalents. There isn’t really any back and forth, it just digests the binary all at once.No it's not. Apple is not immune from fundamental computer science principles whatever their marketing team says, and even the original keynote acknowledged that Rosetta 2 emulates some instructions at runtime.Imagine you're running Python under Rosetta. The original Python interpeter takes Python code, translates it into x86 assembly, and runs that x86 assembly. Those x86 instructions did not exist prior to execution! Even if Rosetta could translate the entire interpreter into ARM code, the interpreter would still be producing x86 assembly.Other types of programs produce code at runtime as well. Rosetta 2 is able to cache a very impressive a	Wowfunhappy	9.783573	-5.332858	comment	4.0	15.0	1654563539	7.5296416
31694749	I wonder at what point we will final	I wonder at what point we will finally give up on trying to make a stable implementation of speculative execution.	cosmiccatnap	9.674277	-5.6382875	comment	4.0	15.0	1654871521	-6.7689247
31724213	First time I'm hearing about Tachyum	First time I'm hearing about Tachyum. Looks very promising, although it does sound too good to be true, especially the cross-ISA support.Interesting bit I found researching them: https://www.nextplatform.com/2020/04/02/tachyum-starts-from-...The processor pipeline has its out of order execution handled by the compiler, not by hardware, so there is some debate about whether this is an in order or out of order processor. Danilak says that instruction parallelism in the Prodigy chip is extracted using poison bits, which was popular with the Itanium chip which this core resembles in some ways and which are also used in Nvidia GPUs. The Prodigy instruction set as 32 integer registers at 64-bits and 32 vector registers that can be 256 bits or 512 bits wide, plus seven vector mask registers. The 	fathyb	9.532355	-5.3898807	comment	4.0	26.0	1655121619	8.02056
31743808	I don't get it. Is this only a probl	I don't get it. Is this only a problem for platforms that can read the current CPU frequency?Does this mean platforms such as JavaScript in the browser are unable to exploit this?Ditto for WebAssembly? If you don't give it the CPU frequency and don't give it the ability to make a syscall for it, then its unaffected?Is the longer term fix then to make reading of any compute metrics a privileged operation?	pyrolistical	9.801546	-5.4576397	comment	4.0	21.0	1655231411	7.911613
31743853	I suspect what we are seeing in the 	I suspect what we are seeing in the last few years is the slow death of purely symmetric multiprocessing. At the end of this I wonder if we'll see processors with one or two cores dedicated to cryptographic primitives, where the ALU has a fixed IPC, the core has a very limited number of clock rates, and the caches are sized to prevent eviction when running common cryptographic algorithms.	hinkley	9.486544	-5.2503457	comment	4.0	29.0	1655231630	8.064702
31746742	The other way of looking at it is th	The other way of looking at it is that a huge portion of the market is running non-ECC ram and it hasn't resulted in any measurable reduction of security or stability of operating systems worldwide. So maybe it really isn't necessary for your average user, and manufacturing ECC ram for users who ultimately don't need it would be just a waste(both financial and environmental).	gambiting	9.4571705	-5.5274587	comment	4.0	16.0	1655245200	8.236931
31749556	Unfortunately, side-channel attacks 	Unfortunately, side-channel attacks like this (or like Meltdown, Spectre, TLBleed, Foreshadow, etc...) only have negligible real-world impact. They are very interesting from a theoretical point of view, but are usually totally impractical for a plethora of reasons. Therefore, chip designers aren't really pressured into thinking about new chip designs. The sad reality is that something like Log4Shell, which is super boring from a theoretical point of view, is much more practical for attackers to exploit.	xurukefi	9.7201185	-5.547558	comment	4.0	12.0	1655272322	-5.781619
31766026	How about ARM? Included in the repor	How about ARM? Included in the report?	bjornsing	9.562974	-5.251553	comment	4.0	23.0	1655387420	-7.6981215
31766127	There is very little offering and ho	There is very little offering and honestly afaik they are not competing on performance except niche applications.It's not that easy to displace x86...	guepe	9.63913	-5.2340865	comment	4.0	14.0	1655388010	-7.795303
28895830	auto-cpufreq author here, I'm here i	auto-cpufreq author here, I'm here if you have any questions!	fooctrl	9.581454	-5.3139353	comment	4.0	18.0	1634472028	7.880021
28909085	400GB/s available to the CPU cores i	400GB/s available to the CPU cores in a unified memory, that is going to really help certain workloads that are very memory dominant on modern architectures. Both Intel and AMD are solving this with ever increasing L3 cache sizes but just using attached memory in a SOC has vastly higher memory bandwidth potential and probably better latency too especially on work that doesn't fit in ~32MB of L3 cache.	PaulKeeble	9.787812	-5.2719235	comment	4.0	42.0	1634581011	8.049443
28910698	Not sure if it will be available, bu	Not sure if it will be available, but 400GB/s is way too much for 8 cores to take up. You would need some sort of avx512 to hog up that much bandwidth.Moreover, it's not clear how much of a bandwidth/width does M1 max CPU interconnect/bus provide.--------Edit: Add common sense about HPC workloads.There is a fundamental idea called memory-access-to-computation ratio. We can't assume a 1:0 ratio since it was doing literally nothing except copying.Typically your program needs serious fixing if it can't achieve 1:4. (This figure comes from a CUDA course. But I think it should be similar for SIMD)Edit: also a lot of that bandwidth is fed through cache. Locality will eliminate some orders of magnitudes of memory access, depending on the code.	znwu	9.691267	-5.3610983	comment	4.0	24.0	1634586710	7.9984293
28912045	I'm curious about the docker image s	I'm curious about the docker image situation.I had thought that the M1 could natively emulate x86 instructions. So why then can you not run the native x86 docker images? Is it a virtualisation issue?	zmmmmm	9.574572	-6.372393	comment	4.0	12.0	1634592682	10.049004
28913856	What application makes full use of 5	What application makes full use of 5950x all cores?	kranke155	9.54893	-5.277885	comment	4.0	12.0	1634606392	7.9796357
28929994	Verilog Simulation with Verilator an	Verilog Simulation with Verilator and SDL	WillFlux	9.115793	-5.497393	story	4.0	76.0	1634734031	8.592059
28931198	I wish there was more stuff for VHDL	I wish there was more stuff for VHDL. It always seems to be left out despite being fundamentally a superior option over Verilog.	Arch-TK	9.116457	-5.4894104	comment	4.0	36.0	1634740936	8.5704565
28934825	There is no hardware in the M1's for	There is no hardware in the M1's for x86 emulation. Rosetta 2 does on the fly translation for JIT and caches translation for x86_864 binaries on first launch.Docker for Mac runs a VM, inside that VM (which is Linux for ARM) if you run an x86_64 docker image it will use qemu to emulate x86_64 and run Linux Intel ELF binaries as if they were ARM.That means that currently using Docker on macOS if there is a native ARM version available for the docker image, it will use that, but it can and will fall back to using x86_64 docker images.That already works as-is. There is no hardware emulation though, it is all QEMU doing the work.	ArchOversight	9.610973	-6.1723547	comment	4.0	18.0	1634757084	10.03483
28940285	From what I'm seeing, I think assumi	From what I'm seeing, I think assuming that RISC-V CPUs being blob free and open, just because the ISA is open is illusory at best and wilfully lying at worst.	rjzzleep	9.434733	-5.669221	comment	4.0	19.0	1634790671	-10.582626
28959247	If Pat's recent performance at VMwar	If Pat's recent performance at VMware is any indicator...I wouldn't put that much faith in his ability to turn things around. He was very good for VMware early on in his tenure, but as competition from IaaS and other players making inroads in on-prem virtualization platforms intensified, his leadership seemed to falter. VMware began to churn and burn through acquisitions without much success, became entangled in a toxic relationship with Dell, and only managed to make marginal gains in terms of home-grown product innovation. The last couple years of his tenure were an especially noticeable period of decline, with massive losses in employee morale and retention, as well as continually degrading release quality. As a former employee (I left just before Pat did), I left the company with the i	sithadmin	9.711629	-5.1876884	comment	4.0	16.0	1634920193	-8.284107
28990388	That doesn't seem too hard to me fra	"That doesn't seem too hard to me frankly.Intel has shown that you can just store the sizes of instructions in a new cache (in their new architecture) for example.But even then: it shouldn't be much more than O(n) work / O(log(n)) depth to determine the length of an instruction. Once lengths are known, you can perform parallel instruction decoding rather easily.Ex: given ""Instruction at X, X+1, X+5, and X+10"", decode the instructions. Well, simple. Just shove a decoder at X, X+1, X+5, and X+10. 4 instructions, decoded in parallel.Even with ""Dynamic"" length (ex: X, X+4, X+6, and X+7 afterwards), its clear how to process these 4 instructions in parallel. Really not a problem IMO.--------So solving the length thing is a bit harder to see, but clearly could be implemented as a parallel-regex (w"	dragontamer	9.751079	-5.732824	comment	4.0	21.0	1635182018	-7.820468
29015805	Intel Adler Lake CPU with P and E co	Intel Adler Lake CPU with P and E cores	snider	9.418528	-5.2307644	story	4.0	24.0	1635353367	7.809885
29023792	2W! Did you measure Gflops? I wish y	2W! Did you measure Gflops? I wish you could disable cores dynamically...	bullen	9.4399	-5.1872816	comment	4.0	12.0	1635410461	7.8936715
29026733	s/Apple Silicon/ARMv8 AArch64/A lot 	s/Apple Silicon/ARMv8 AArch64/A lot of times it is due to direct or indirect dependencies. Before the M1 there weren't many ARMv8 AArch64 users. Only a couple of distros starting providing ARMv8 AArch recently and even then not a lot of their packages could be built for that target.	fabianhjr	9.6607275	-5.239911	comment	4.0	17.0	1635432521	-7.74883
29037091	It's unclear to me if they're using 	It's unclear to me if they're using the FPGA only for rapid-prototying and the end-user version will ship with an ASIC, or if the end-user version will still contain the FPGA. And if the latter, whether the FPGA will be user-programmable.Looks cool, but I'm pretty sure that as an end user I would not feel comfortable reprogramming the board management controller of a $5000 dollar piece of equipment.	tremon	9.091791	-5.329246	comment	4.0	13.0	1635504159	8.24055
29083062	I don't know that SPARC was such a p	I don't know that SPARC was such a performance loser to x86 so much as Intel simply having a commanding lead in process technology at the time. Even Apple capitulated. That lead gave them a market domination that allowed them to reinvest (think Amazon) in their own fabs. x86 was a dog that Intel spent $1B/yr on improving so that your code ran fast. They took that strategy to the bank for as long as they could which was at least a decade longer than anyone thought they could.As I think you're pointing out, Java wasn't a pivot. It was rather an excuse not to pivot. Sun really needed a Gates style pivot with Internet Explorer or a Bezos style pivot with his services manifesto. Instead you got a ponytail.Also, before missing the cloud, Sun missed routers. Still, they were a pretty successful f	CalChris	9.879814	-5.3654737	comment	4.0	21.0	1635868418	9.162931
29083598	SPARC rapidly became a performance l	SPARC rapidly became a performance loser to x86.  And, at the time, Intel had no process advantage.  None at all.Intel Pentium II was almost exactly 100% as fast as UltraSPARC IIi, on the same process (350 nm), at about 1/20th the cost.   That was the last competitive Sun SPARC product, after that they were all brutally slow.  The less said about US III and US IV, the better.By the time that Sun put itself on the auction block, their internal CPUs weren't even good enough for legacy customers.  They were obliged to start re-selling Fujitsu SPARC products just to keep SPARC loyalists inside the tent.	hapless	9.710426	-5.367027	comment	4.0	16.0	1635870739	-7.7924185
29110147	Wouldn't it be possible for a proces	Wouldn't it be possible for a process to ask to be pinned to a specific CPU core, or the OS to handle programs with extra tags indicating their ISA requirements, so that it could restrict the scheduling to those cores matching the requirements?	fstrthnscnd	9.669538	-5.505186	comment	4.0	14.0	1636047267	7.978196
29110210	This might be completely irrational,	This might be completely irrational, but it really annoys me when the press use 'big.little' for all heterogeneous CPUs. big.LITTLE is an ARM trademark for ARM's implementation of heterogenous designs. Intel have clearly decided heterogeneous is a marketing no-go and have gone with 'hybrid' architecture, which is fair enough. But these are absolutely not big.LITTLE CPUs.	KuiN	9.527106	-5.2013254	comment	4.0	18.0	1636047534	-7.7608953
29127642	"From PCMag story:""The errors occur b"	"From PCMag story:""The errors occur because Denuvo’s DRM software will mistakenly think the so-called ""Performance-cores"" and ""Efficiency-cores"" (P-cores and E-cores) on the chip belong to two separate PCs, when in reality the two types of processing cores are running on the same Alder Lake processor. (This P-core/E-core design is a new trait of Intel's chips with Alder Lake.)“Once it detects that some portion of the load has been split between the P- and E-cores, it sees the new cores as a new license holder (a separate system), and force-quits the game to prevent what it believes is two PCs trying to play one game on the same key,” wrote PCMag reviewer Chris Stobing."""	r721	9.549055	-5.3397903	comment	4.0	24.0	1636174581	7.8998528
29127655	How is the title misleading?It links	"How is the title misleading?It links directly to intel and tells you that you can use the scroll lock to stop the crashes.If the title said ""Enable scroll lock to disable e-cores"" that doesn't tell you why you would need to do that."	mitigating	9.468152	-5.307038	comment	4.0	13.0	1636174837	7.939243
29134351	RISC-V and MIPS are the only semi-mo	RISC-V and MIPS are the only semi-modern architectures I know of that can be implemented with 100% open hardware down to the schematics of every single component on the mainboard/CPU/etc.And the main problem with those is performance. Even the fastest RISC-V board currently available (which is also proprietary) is still twice as slow as a Raspberry Pi 3.	ranger_danger	9.4037485	-5.555476	comment	4.0	14.0	1636237120	-10.521832
29139816	This has been pretty interesting to 	"This has been pretty interesting to watch, because the dichotomy between Luke and Linus is what really interests me. Linus' cynicism is what lead him to reject oft-requested distros like Fedora (which he wrote off as a ""meme""), and with nearly every problem he has it seems to be exacerbated into a total disaster. I've seen this kind of behavior before though, where heavy Windows/MacOS users unknowingly engage in self-sabotage when they try out a new OS. Nothing new, but I was surprised that Linus from Linus Tech Tips was the one uninstalling his own desktop environment.Even more surprising was how calmly Luke handled everything. Contrary to Linus' disposition, Luke meets every problem with a thoughtful solution and a willingness to learn, which leaves me rather unsurprised that his Linux e"	smoldesu	9.371923	-5.840405	comment	4.0	14.0	1636296367	4.229712
29216304	I'm wondering why every notion relat	I'm wondering why every notion related article has screenshots full of emojis. Does notion automatically add those ?Or does it provide some sort of layout to make them easy ?Personally I'd never find the time to open up my OS's character selector, copy-paste the emoji and continue.	IceWreck	9.803658	-6.2620983	comment	4.0	13.0	1636883620	-13.943789
29257899	I get his frustration, but why would	I get his frustration, but why would I want to work with someone who openly admit that he's a dick and proud of it?  Linus is an example, as great as he is, why would I work with/for him unless I'm desperately need him?	aynyc	9.277747	-5.8915544	comment	4.0	12.0	1637178095	4.2709756
29263257	Why don’t you want to buy classical 	Why don’t you want to buy classical microcontroller for such task? It’s cheaper, has more performance and faster development time. FPGA area is higher for a CPU softcore compared to a normal silicon CPU.	lnsru	9.129063	-5.348215	comment	4.0	13.0	1637223137	8.26141
29263309	For any Renesas folks reading this, 	For any Renesas folks reading this, you should consider throwing in with the open-source Icestorm toolchain.Icestorm brought a ton of exposure to Lattice's low-end FPGAs, and that was with no official support from Lattice. Renesas could have that too. If you have to spend money on software anyways, why not spend it improving the overall ecosystem? The marketing impact could be huge for getting the word out to designers like me that hate the big-names' toolchains.	nrclark	9.0985	-5.357199	comment	4.0	17.0	1637223673	8.436801
29302993	I'm missing a lot of context. Can so	I'm missing a lot of context. Can someone explain why POWER9 is interesting?Is OpenPOWER trying to compete with RISC-V? Whats the benefit compared to modern ARM or x86_64 silicon & ISAs?	josephg	9.449181	-5.393304	comment	4.0	32.0	1637557876	-10.535709
29305835	Really cool concept. Apparently thes	Really cool concept. Apparently these are all handmade emojis made for Google's Android Keyboard [1]. And by the looks of it they are all available at fairly obvious URLs [2], which this tool exposes in a fun interface.1: https://9to5google.com/2021/09/24/gboard-emoji-kitchen-list/2: e.g. https://www.gstatic.com/android/keyboard/emojikitchen/202108...	wongarsu	9.824459	-6.242878	comment	4.0	19.0	1637585654	-13.951981
29309519	People have made fun of Linux having	People have made fun of Linux having Linus as the dictator on top, but it seems like that model might be the best for long term project success...	strunz	9.430692	-5.812826	comment	4.0	20.0	1637603935	4.2272444
29315204	I am having trouble understanding th	I am having trouble understanding the usefulness of all these new pseudo-HDL languages.In all the projects that I've worked on, the choice of HDL (which was 95% of the time, Verilog, for the rest, VHDL), was never actually 'important'; the language features were never critical to the completion of the project. Verilog is fully adequate for any kind of serious HDL development.What mattered were, the tooling, IDEs, debuggers, timing analysis tools, verification infrastructure, the IP ecosystem, etc.Perhaps I am getting old but I just can not see how these new languages can be a serious alternative to Verilog/VHDL.	laydn	9.102802	-5.518487	comment	4.0	31.0	1637650186	8.628916
29329775	You could also buy just two then wai	You could also buy just two then wait a while and through some inexplicable magic, you'll gave 64 cores of cat.	kreeben	9.555416	-5.317591	comment	4.0	12.0	1637760659	7.910806
29368323	Half the benchmarks i see posted her	Half the benchmarks i see posted here are done on AWS instances or the authors laptop with power stepping/cstates, unisolated cores etc etc likely all enabled too, let alone basic rigour around hardware specifics.We are very much entering the age where mechanical sympathy is waning	easytiger	9.70676	-5.2099895	comment	4.0	22.0	1638101874	7.874051
29380286	CPU pinning is pretty useful for vir	CPU pinning is pretty useful for virtual machines, i.e. I've used it myself to improve performance on a VFIO setup, by limiting which cores where qemu runs on and thus improving cache locality.https://wiki.archlinux.org/title/PCI_passthrough_via_OVMF#CP...What are other real-world uses of CPU pinning?	1_player	9.899202	-5.542722	comment	4.0	13.0	1638196475	8.205011
29386286	would it? rosetta is a jit  translat	would it? rosetta is a jit  translator isn't it? how would it know to translate the instructions that are being generated on the fly interactively? unless there's hardware support in the m1 for translation or some other interrupt that gets triggered to do translation on the fly...	a-dub	9.791386	-5.3802695	comment	4.0	35.0	1638225904	7.6108465
29394718	I was wondering how they were going 	I was wondering how they were going to manage the fact that AMDs Zen3 based instances would likely be faster than Graviton2. Color me impressed. AWS' pace of innovation is blistering.	talawahtech	9.434598	-5.188107	comment	4.0	31.0	1638293121	7.8862324
29395326	Aren't the Zen3 instances still fast	Aren't the Zen3 instances still faster than Graviton 3? DDR5 is interesting, and while lower power is nice, the customers don't benefit from that much, mostly AWS itself with its power bill.  I haven't seen pricing yet, but assume AWS will price their own stuff lower to win customers and create further lock-in opportunities (and even take a loss like with Alexa).	Rafuino	9.519571	-5.198516	comment	4.0	22.0	1638295682	-8.1914835
29419962	Direct links to some of the latest s	Direct links to some of the latest specs:- Scalar crypto: https://github.com/riscv/riscv-crypto/releases- Vectors: https://github.com/riscv/riscv-v-spec/releases- Bitmanip: https://github.com/riscv/riscv-bitmanip/releases	bem94	9.399642	-5.700009	comment	4.0	16.0	1638468644	9.502143
29420645	>Why do all the riscv fans Convenien	>Why do all the riscv fans Conveniently ignore aarch64 when they make statements like this? It was in fact a completely clean new design, based on hindsight, by people who know what they are doing, and with no legacy Cruft.aarch64 seems poorly designed to me.ARMv7 had thumb, but for some reason ARMv8 did not incorporate any lessons from that. As a result, code density is bad; ARMv8 binaries are huge.ARMv9, to be available in chips next year, is just a higher profile of required extensions, and does nothing to fix that.Ever wonder why M1 needs such huge L1 cache? Well, now you know.Considering ARMv9 will be competing against RVA22, I don't have much hope for ARM.	snvzz	9.604303	-5.37875	comment	4.0	28.0	1638471184	-7.814552
29420994	The idea is to use the compressed in	The idea is to use the compressed instruction extension. Then two adjacent instructions can be handled like a single “fat” instruction with a special case implementation.That allows more flexibility for CPU designs to optimize transistor count vs speed vs energy consumption.This guy clearly did not look at the stated rationale for the design decisions of RISC-V.	jpfr	9.469571	-5.7556033	comment	4.0	34.0	1638472428	-10.5603
29421341	A bit of a computer history question	A bit of a computer history question: I have never looked at the ISA of the Alpha (referenced in post), but RISC V has always struck me as being nearly identical to (early) MIPS, just without the HI and LO registers for multiply results and the addition of variable length instruction support, even if the core ISA doesn't use them.MIPS didn't have a flag register either and depended on a dedicated zero register and slt instructions (set if less than)	Teknoman117	9.499721	-5.684048	comment	4.0	13.0	1638473925	-10.483751
29421809	Hmmm... I think this argument is sol	Hmmm... I think this argument is solid. Albeit biased from GMP's perspective, but bignums are used all the time in RSA / ECC, and probably other common tasks, so maybe its important enough to analyze at this level.2-instructions to work with 64-bits, maybe 1 more instruction / macro-op for the compare-and-jump back up to a loop, and 1 more instruction for a loop counter of somekind?So we're looking at ~4 instructions for 64-bits on ARM/x86, but ~9-instructions on RISC-V.The loop will be performed in parallel in practice however due to Out-of-order / superscalar execution, so the discussion inside the post (2 instruction on x86 vs 7-instructions on RISC-V) probably is the closest to the truth.----------Question: is ~2-clock ticks per 64-bits really the ideal? I don't think so. It seems to m	dragontamer	9.834994	-5.97496	comment	4.0	14.0	1638475941	-10.373535
29421865	ARMv8 code density is quite good for	ARMv8 code density is quite good for a fixed-length ISA and is of course much better than that of RISC-V.RISC-V has only one good feature for code density, the combined compare-and-branch instructions, but even this feature was designed poorly, because it does not have all the kinds of compare-and-branch that are needed, e.g. if you want safe code that checks for overflows, the number of required instructions and the code size explode. Only unsafe code, without run-time checks, can have an acceptable size in RISC-V.ARMv8 has an adequate unused space in the branch opcode map, where combined compare-and-branch instructions could be added, and with a larger branch offset range than in RISC-V, in which case the code size advantage of ARMv8 vs. RISC-V would increase significantly.While the comb	adrian_b	9.479011	-5.7591486	comment	4.0	20.0	1638476210	-10.546913
29421972	So how would you suggest re-writing 	So how would you suggest re-writing their example in less than 6 instructions for RISC-V? X86/arm both have instructions that include the carry operation for long additions, and only require 2 instructions.	robert_foss	9.511064	-5.784359	comment	4.0	47.0	1638476648	-10.497051
29422669	Instruction fusion is the magical re	Instruction fusion is the magical rescue invoked by all those who believe that the RISC-V ISA is well designed.Instruction fusion has no effect on code size, but only on execution speed.For example RISC-V has combined compare-and-branch instructions, while the Intel/AMD ISA does not have such instructions, but all Intel & AMD CPUs fuse the compare and branch instruction pairs.So there is no speed difference, but the separate compare and branch instructions of Intel/AMD remain longer at 5 bytes, instead of the 4 bytes of RISC-V.Unfortunately for RISC-V, this is the only example favorable for it, because for a large number of ARM or Intel/AMD instructions RISC-V needs a pair of instructions or even more instructions.Fusing instructions will not help RISC-V with the code density, but it is th	adrian_b	9.504723	-5.751628	comment	4.0	18.0	1638479663	-10.49563
29422911	On the other hand, a NVIDIA ARM acqu	On the other hand, a NVIDIA ARM acquisition could really spark RISC-V adoption. Maybe.	gjsman-1000	9.285338	-5.488902	comment	4.0	35.0	1638480593	-10.544532
29422772	> I am sorry but saying that RISC-V 	> I am sorry but saying that RISC-V is a winner in code density is beyond ridiculous.You have no idea what you're talking about. I've worked on designs with both ARM and RISC-V cores. The RISC-V code outperforms the ARM core, with smaller gate count, and has similar or higher code density in real world code, depending on the extensions supported. The only way you get much lower code density is without the C extension, but I haven't seen it not implemented in a real-world commercial core, and if it wasn't, I'm sure there was because of a benefit (FPGAs sometimes use ultra-simple cores for some tasks, and don't always care about instruction throughput or density)It should be said that my experience is in embedded, so yes, it's unsafe code. But the embedded use-case is also the most mature. I	audunw	9.441242	-5.7020335	comment	4.0	17.0	1638480067	-10.618499
29426755	In hindsight it’s easy to say that, 	In hindsight it’s easy to say that, but would you have guessed in advance that they would succeed like they have? In the span of a year they have made x86-based products look obsolete.	jolux	9.651598	-5.248947	comment	4.0	13.0	1638507231	-7.705755
29427806	I'm wondering if anyone has seen any	I'm wondering if anyone has seen any attempts at creating unikernels that work with major scripting languages like PHP, Python or Ruby.I know this would seem a bit like a contradiction to the ethos of unikernels, but it would give the benefits of unikernels (i.e. smaller attack surface) to a much larger audience.	tarjei_huse	9.921272	-6.2365217	comment	4.0	13.0	1638519644	-12.383084
29428962	HiFive Unmatched: Exploring a RISC-V	HiFive Unmatched: Exploring a RISC-V Computing Experience	rbanffy	9.3873005	-5.6770015	story	4.0	48.0	1638532306	-10.61553
29428737	I'm not sure I get what the point of	I'm not sure I get what the point of unikernels is given his explanation.GCP runs your VM as a Linux process with KVM. If you run a unikernel on that... that's roughly comparable to running your workload directly on the host - i.e. something more like App Engine. You still have Linux on top taking care of everything. You've just replaced the system call interface with a paravirtualized hardware interface. Which... is quite likely to be a bit slower if anything. You also have the overhead of two-stage paging (even for a unikernel, apps will want to use things like mmap(), which I assume means they can't run with guest paging off; and there's no paravirt API to mess with the VM memory layout to emulate this at the host level AFAIK)Of course you could in principle run a unikernel on bare meta	marcan_42	9.9067	-6.2567387	comment	4.0	25.0	1638530030	3.210033
29429919	I don't see why a unikernel may not 	I don't see why a unikernel may not have a dedicated debug interface, much like MCUs that lack a console but have JTAG.	nine_k	9.930198	-6.2156096	comment	4.0	13.0	1638539070	-12.373643
29445476	I find this claim hard to believe ho	I find this claim hard to believe honestly,could you point to examples where performance is limited by Dram speed and not by cpu / caches? They must be applications with extremely bad design causing super low cache hits.	mda	9.793864	-5.3607163	comment	4.0	19.0	1638662522	8.028807
29445624	Memory bandwidth is not a problem. E	Memory bandwidth is not a problem. Even puny 1 channel memory desktops don't usually saturate it.It's memory latency.	baybal2	9.896004	-5.279195	comment	4.0	15.0	1638663924	8.0164
29445767	Arm seems poised to replace x86 in s	Arm seems poised to replace x86 in servers. If I were Intel this would make me really nervous.	pm90	9.605901	-5.231873	comment	4.0	24.0	1638665441	-7.7665377
29451259	I had some SPARC hardware when it wa	"I had some SPARC hardware when it was already old, that I got off of eBay.  Tons of hackers did in the 90s/00s.  What was ""very good"" about the hardware?  That it was RISC?"	hereforphone	9.443645	-5.6023154	comment	4.0	13.0	1638727575	-10.5313835
29459802	"    don’t ask me how

_You_ should b"	"    don’t ask me how

_You_ should be asking you how - there are lots of reasons why this could be happening and knowing which one is important if you're changing stuff.Based on a ""highly parallelizable"" application performing better on 8 cores than 32, I'd guess you're running out of something else: memory or disk bandwidth."	al2o3cr	9.703349	-5.34503	comment	4.0	29.0	1638799277	7.972502
29461419	I think that the patent threat will 	"I think that the patent threat will crumble with more and more complex features being implemented on the Open Source cores, like BOOM and so on. I don't think that ideas that are taught commonly at university and are all over GitHub will be able to stay ""owned"".The question than will be how close we can come to the proprietary systems and which use-cases are low-key enough that their cutting edge new innovations don't make a difference.I think the microcontroller space will be wholly owned by RISC-V in the long run. For cheap, commoditized stuff, open is better than closed for everyone. For the high performance stuff, the manufacturer still needs to protect their investment, especially because the will need to invest more and more for ever smaller gains.Do you think that makes sense or am "	turbinerneiter	9.414732	-5.2749305	comment	4.0	19.0	1638806775	-10.494853
29472957	When I’ve inquired about this in the	When I’ve inquired about this in the past I was told that relatively few programs compiled to silicon would outperform the same program running on a generalized chip (e.g., x86). Is this not the case?	throwaway894345	9.68804	-5.267387	comment	4.0	16.0	1638888499	-7.772362
29475526	Where does this mindset end? Do I la	Where does this mindset end? Do I lack due diligence by choosing to accept that the cpu microcode on the system I’m deploying to works correctly?	bandyaboot	9.608253	-5.3974605	comment	4.0	14.0	1638898369	7.7872314
29514762	The Luddite sentiment common among p	The Luddite sentiment common among programmers today really surprises me. The software we’re building today is vastly more powerful and capable than anything from the C64 era.	cageface	9.788524	-5.1887016	comment	4.0	24.0	1639166356	-7.8648944
29517535	"I kind of want to try to make a ""74 "	"I kind of want to try to make a ""74 series logic"" RISC V CPU at some point so I can inherit the compiler.It's rough building the larger systems though. All the early logic is still around for the most part, but most of the ""medium integration"" parts have disappeared. Things like register files and bitslice ALUs. (74x181, etc.)"	Teknoman117	9.406154	-5.5777307	comment	4.0	14.0	1639186156	-10.571839
29523314	StarFive Dubhe 64-bit RISC-V core to	StarFive Dubhe 64-bit RISC-V core to be found in 12nm, 2 GHz processors	btdmaster	9.399455	-5.624635	story	4.0	76.0	1639249238	-10.572564
29538399	Drop x86 as the instruction set. Mak	Drop x86 as the instruction set. Make a fixed-width instruction set that is closer to their current micro-ops instruction set. Then provide a compatibility layer to still run x86 based binaries.	rocqua	9.849034	-5.4827027	comment	4.0	18.0	1639391928	-7.7768393
29585318	x86, X64 Instruction Latency, Memory	x86, X64 Instruction Latency, Memory Latency and Cpuid Dumps	arunc	9.797379	-5.673466	story	4.0	38.0	1639696362	7.970905
29614083	All that looks so fun! I'm in univer	All that looks so fun! I'm in university right now and I have the means to do things - the uni provides an oscilloscope and a bunch of electronics free to use. I bought my own FPGA, but currently have no lecturers who know their way around them. I really want to do something cool with it, I've spent money on Udemy courses but everything is still so intimidating even after finishing them. I could at least interface with an i2c sensor. But man, even just a simple matrix multiplication module/architecture is beyond my means.What should I do to learn so I can join in on making projects like in the FPGA Advent Calendar?	justwannalearn	9.073678	-5.3582506	comment	4.0	15.0	1639923241	8.448767
29629486	PDP-10 Emulator in JavaScript	PDP-10 Emulator in JavaScript	larsbrinkhoff	9.885954	-5.3511424	story	4.0	44.0	1640030549	-7.4947543
29651028	Just curious, is there an equivalent	Just curious, is there an equivalent (or at least similar in spirit) to FreeBSD jails in the Windows world?	dgellow	9.751495	-6.3911366	comment	4.0	14.0	1640188821	10.489865
29650227	I never understood the appeal of BSD	I never understood the appeal of BSD jails over Solaris zones which seem to be more hardened and seem to vitualize more of the OS.	freemint	9.767022	-6.3630466	comment	4.0	49.0	1640185429	10.36755
29651695	One thing I find so valuable about j	"One thing I find so valuable about jails is the ability to jail a single command with no other userland than what that binary requires.Here's an example from my personal name server:  /usr/sbin/jail /jails/www www 10.10.10.36 /lighttpd -f conf/lighttpd.conf

... and although this jail has a lot of content files in it, the actual UNIX userland is only what is required to run 'lighttpd':  # find /jails/www/usr | wc -l
  43

So it's an extremely lightweight environment with very little attack surface.You can also share a lightweight environment with multiple commands - here are two other jail commands:  /usr/sbin/jail /jails/dns ns1 10.10.10.30 /nsd/nsd -c /nsd/nsd.conf
  /usr/sbin/jail /jails/dns dns 10.10.10.37 /unbound/unbound -c /unbound/unbound.conf

... see how both jailings of 'nsd' an"	rsync	9.730993	-6.4229817	comment	4.0	20.0	1640191483	10.484564
29656282	Is it really that surprising that th	Is it really that surprising that the act of reacting to a message with an emoji isn't E2EE, given the server needs to count the number of reactions?  One could encrypt the emoji itself, but it doesn't seem like a massively sensitive datapoint in its own right.  (That said, we will encrypt them eventually, but it's just not very high priority given the fact it doesn't practically feel very high impact, relative to all the other things we could be doing to improve Matrix).	Arathorn	9.7979765	-6.2699184	comment	4.0	13.0	1640212005	12.550209
29660500	> Modern CPUs and ram are obscenely,	> Modern CPUs and ram are obscenely, incomprehensibly fast. With the exception of a few very specific tasks, you should never be waiting for a modern computer to do anything.I really wish we could drive this point home for everyone. The amount of work you can get out of 1 x86 core is insane if you know how to feed it properly. The upper bound is somewhere around 500 million transactions per second per core. I have personally built systems that can achieve somewhere around 14 million per second.If you can reliably handle the entire serialized workload on a single thread you start to retool for the idea that you can fit the entire business in 1 box.Being able to run everything out of a single computer is an incredible virtue, not some curse that must be cast to the clouds.	bob1029	9.662034	-5.240139	comment	4.0	34.0	1640255388	7.9739604
34127507	> That we cannot get laptops or even	> That we cannot get laptops or even desk machines with ECC, and so have them crash frequently, is seen as a trivial side effect of the strategyI’m not sure what you mean by “frequently”, but my non-ECC machines definitely do not crash “frequently”.> before MS, a program crashing was grounds for a refundSource?	gruez	9.504662	-5.5395246	comment	4.0	30.0	1671978587	8.218535
34130681	We've got a server that keeps reboot	We've got a server that keeps rebooting due to a bad ECC DIMM chip. I thought the whole point of ECC was to keep the server going until we can replace the DIMM?	mrlonglong	9.480599	-5.495545	comment	4.0	13.0	1671998545	8.292478
34189258	   // Copy the Entire Framebuffer to	"   // Copy the Entire Framebuffer to itself,
   // to fix the missing pixels.
   // Not sure why this works.

That has big lack of proper cache flushing energy.  ARM-A device support tends to be where you need to get really intentional about managing your memory hierarchy.  Smaller cores tend to have simple enough (or no) caches that they don't tend to get in your way much except for knife edge bugs.  Bigger systems like x86 just tend to push the cache coherency out even to IO devices.  ARM-A class SoCs are that sweet spot of a ton of caches between the CPU and main memory, but simple enough peripherals and fabric that only the CPU cores are coherent."	monocasa	9.687334	-5.2368274	comment	4.0	21.0	1672430242	7.970376
34189644	But anybody's free to enter, there i	But anybody's free to enter, there is no x86 IP in the way, as parent mentioned.	cypress66	9.668465	-5.2803845	comment	4.0	14.0	1672431954	-7.7907605
34199662	Building a solid computer stack (har	Building a solid computer stack (hardware through software) is an exercise in mechanical sympathy, understanding the traits of the underlying components which enable the practitioner to get as much out of it as possible. The software should do the thing that the software is good at, and the hardware should do the things that the hardware is good at, and neither exists in a vacuum, both should be aware of the constraints of the other.For one example, about 25 years ago Intel made a processor called Itanium which used 'VLIW' (very long instruction word) instructions as opposed to x86. In this case, a lot of the complexity of operating a processor is shifted into the compiler, since individual CPU instructions may perform complex operations. In a modern processor, instructions are 'simple', a	CHY872	9.64735	-5.676141	comment	4.0	23.0	1672514029	8.183697
34240861	How does this help consumers?The mai	How does this help consumers?The main difference to consumers is that less apps will be available since they haven't been ported to RISC-V	charcircuit	9.391726	-5.657215	comment	4.0	25.0	1672796793	-10.584759
34240980	>How far away is RISC-V from being c	>How far away is RISC-V from being competitive with ARM at a technical level? Or is it already there?RISC-V caught up, key functionality wise, with the set of extensions ratified in December 2021.There's key advantages to RISC-V, licensing aside. It leverages industry experience and avoids many pitfalls thanks to not dragging any baggage.Field experts such as Jim Keller sing praises about it.	snvzz	9.3941965	-5.645729	comment	4.0	64.0	1672797682	-10.562397
34241025	Releasing some new competitive CPU i	Releasing some new competitive CPU is a billion+ dollar hurdle. No one is going to release a RISC-V competitor to any current top of the line CPUs without that minimum investment. Who is going to do that level in investment when buying licensed ARM cores is orders of magnitude cheaper?	giantrobot	9.387064	-5.578698	comment	4.0	13.0	1672797959	-10.529224
34241186	Even ignoring RISC-V's already excel	Even ignoring RISC-V's already excellent toolchain and software ecosystem support, and the license everybody gets for free (which is a huge deal), there are technical reasons.RISC-V is designed with great care taken to weight all decisions as not to hamper any scope of implementation, from the lowest power microcontrollers to the fastest supercomputers, and everything in between.This is unlike e.g. ARMv8/aarch64, which imposes too much complexity (>700 instructions) to small implementations, and hampers all implementations due to low code density.In small implementations where performance isn't paramount but 64bit is required (for e.g. addressing, as is the case in many specialized tiny cores embedded in larger SoCs), bad code density increases ROM and/or RAM requirements as code takes mor	snvzz	9.4821205	-5.712326	comment	4.0	29.0	1672799180	-10.526127
34241374	The greatest advantage is that you c	The greatest advantage is that you can make your own processor implementing the ISA without asking for permission and/or paying fees. Also you can make your processor open source if you wish and many have already done so.As an example Apple designed their processors from scratch, they do not use any core designs provided by the ARM holdings corporation. Yet they still have to pay ARM a lot of money because they use their instruction set.The instruction set is a very sticky thing. All the software gets written for a particular instruction set, and people like to keep using previously written software. Thus, software stickiness causes CPU ISA stickiness which gives companies that control that particular ISA a lot of power. And they of course monetize that power by charging extra for their CP	hristov	9.478796	-5.589617	comment	4.0	17.0	1672800751	-10.490483
34244308	"Google ""wants"" that, but doesn't see"	"Google ""wants"" that, but doesn't seem to push forward on that matter. AOSP gerrit received risc-v jvm CLs 2 years ago from external contributors, and didn't merge any. (sorry, I have no source from Google's gerrit since they regularly clean it up, but you can find https://www.theregister.com/2021/01/21/android_riscv_port/ for related info )Current state of Android RISC-V support 2 years after those ignored contribution is literally ""we have a working libc"", which isn't great. My understanding of Google's presentation is that Android 14 (Q3 2023) will have interpreter-only jvm support for RISC-V, no JIT/AOT. (I'm surprised there is no pure C interpreter that would work anywhere, but well). So decent RISC-V support in Android may happen for Android 15, so Q3 2024.Will there be weird ABI/ISA "	phh	9.391445	-5.6651316	comment	4.0	20.0	1672831034	-10.561246
34248445	does anyone know of anyone using gra	does anyone know of anyone using graviton for compute instances? would like to gauge how the experience has been	silksowed	9.482212	-5.2094297	comment	4.0	12.0	1672852795	-8.448063
34256796	The IO and RAM for that many cores w	The IO and RAM for that many cores would be a bottleneck. If you manage to keep everything local to a core or a group of cores then you'll severely constrain the kind of programs you can run.	speed_spread	9.725777	-5.407128	comment	4.0	14.0	1672900739	8.020986
34257433	The Itanium was an interesting desig	The Itanium was an interesting design and it wasn't even Intel's originally; Intel got in on HP's design, and HP was trying to leapfrog the superscalar designs by making parallelism the responsibility of software, akin to how the MIPS had made handling aggressive pipelining the responsibility of software: The Itanium design was to encode multiple instructions in very long instruction words, where all of the instructions in a given word can be executed at once. This removes the need for the hardware to do reordering, and shoves the responsibility for finding parallelism onto the human or compiler, both of which can, presumably, take a more global view of the problem than a piece of silicon can.A problem with that was, apparently, figuring out good parallelism statically wasn't enough to get	msla	9.585776	-5.6334763	comment	4.0	22.0	1672908092	-7.7498035
34259454	I am curious.  As I understand it, b	"I am curious.  As I understand it, both RISC and CISC processors are implemented in microcode for the actual hardware gates on the chip.  And perhaps different hardware generations make it easier to build different micro-code machine architectures.So why not just offer an instruction set that matches the base hardware architecture?  Rather than have all that decoding done on the chip, why not by a compiler?  I understand that branch prediction can only be done at run time, but presumably there is some ""closer to the metal"" instruction set that would be faster than instruction decoding.  Or is instruction decoding very low cost?"	fastaguy88	9.541137	-5.6916637	comment	4.0	12.0	1672926560	-10.48636
34263074	This is an odd take. Why shouldn't s	This is an odd take. Why shouldn't software benchmarks be showcased with the best available hardware? How am I supposed to reason about MySQL performance results taken from a run-of-the-mill dual-core machine from 2015?	lopkeny12ko	9.625462	-5.2114367	comment	4.0	12.0	1672939033	7.8942714
34299028	I have difficulty following some of 	I have difficulty following some of the points made in that article.1. I always thought that common vulnerabilities like Spectre were a problem with implementation (a certain way to do speculative execution) rather than with the ISA. How is RISC-V ISA supposed to solve these kind of issues?2. I do not understand how openness of RISC-V makes it easier to find bugs in the ISA. For example, ARM ISA is fully described in a publicly available documents. What is stopping a security researcher from analysing the ARM specification and pointing out issues at the ISA level? Or do they mean that it's easier to analyse open-sources RISC-V implementations rather than ISA spec?	ribit	9.432054	-5.6904593	comment	4.0	12.0	1673185287	-10.547189
34317827	Relatedly, I would really like to ha	Relatedly, I would really like to have the opposite: a tiny x86 board that fits in a USB port (for my M1 Mac). It turns out that despite Rosetta 2, full-system emulation of x86 on M1 is still quite crappy, and it'd be great to have a full-blown Linux machine at hand.I experimented with an x86-based ZenPhone...works OK, but that particular CPU was missing some SSE features that I need for my testing.Anyone know of a something in this vein for x86?	titzer	9.763094	-5.2083077	comment	4.0	15.0	1673305420	-7.849753
34341351	Any performance comparisons with Ras	Any performance comparisons with Raspberry Pi boards?  How does this RISC-V CPU stack up against them?	bhouston	9.402828	-5.6185904	comment	4.0	28.0	1673458413	-10.538796
34343222	"I have a sifive ""unmatched"" board si"	"I have a sifive ""unmatched"" board sitting here collecting dust, cost me $700 then.Most projects turned out ARM based after I bought it.The site is not working, any price of this board? What's its market, e.g. ip camera? I'm still interested in lower cost ready to go risc-v boards."	synergy20	9.401221	-5.5559936	comment	4.0	18.0	1673465054	-10.553101
34374989	Wait! Is core Forth smaller than cor	Wait! Is core Forth smaller than core Scheme?	nemoniac	9.546574	-5.3181825	comment	4.0	13.0	1673650157	7.8909655
34383071	Is it true that lots of embedded sys	Is it true that lots of embedded system today still use a 8086 of some kind, because they're really cheap/easy to understand?	netr0ute	9.609368	-5.239019	comment	4.0	15.0	1673723521	-7.5586224
34386645	Intro to GCC bootstrap in RISC-V	Intro to GCC bootstrap in RISC-V	pabs3	9.458196	-5.7829075	story	4.0	58.0	1673755942	-10.564454
34401963	> it's not ARM vs x86, it's the inte	> it's not ARM vs x86, it's the integration piecesEh, I'm not sure how true that is. There are no doubt improvements that could be made, but, well, compare battery life on an ARM Mac to a related x86 Mac; it is night and day.	rsynnott	9.708547	-5.3108015	comment	4.0	13.0	1673884981	-7.76987
34405003	It seems that AMD is losing the perf	It seems that AMD is losing the performance crown for consumer PCs for both single threaded and multithreaded workloads at high efficiencies.  I love AMD, but it does seem that Intel is back and at worse neck and neck.  It isn't clear if it can clearly pull ahead.This isn't great for AMD's stock, the boom times may be over?What confuses me is that AMD still has a huge lead for server CPUs.  I have not seen massive adoption of AMD in the cloud yet.	bhouston	9.224535	-5.2027044	comment	4.0	12.0	1673900310	7.8069158
34463718	An instruction oddity in the ppc64 (	An instruction oddity in the ppc64 (PowerPC 64-bit) architecture	zdw	9.718941	-5.514342	story	4.0	123.0	1674273365	-7.6568766
34471219	Still wild to me we lost ECC RAM. It	Still wild to me we lost ECC RAM. It used to be standard in PCs.Does Apple hardware come with ECC RAM? If anyone could make it make sense as a business, it's them.	NelsonMinar	9.480234	-5.4851894	comment	4.0	19.0	1674339392	8.242186
34471222	ECC RAM would actually be a boon to 	ECC RAM would actually be a boon to everyone, including gamers.ECC means not only that you know precisely when you've gone too far with overclocking, but potentially allows overclocking a bit further, relying on that some amount of trouble can now be tolerated.It also means you're not going to break your OS by playing with this stuff. Memory corruption carries a huge risk of disk corruption, which can mean things like corrupt data, random crashes or an unbootable system that persists even after reverting everything to defaults.	dale_glass	9.491937	-5.541901	comment	4.0	30.0	1674339410	8.251138
34471474	Latest Intel desktop CPUs (i.e. i9-1	Latest Intel desktop CPUs (i.e. i9-13900KF) supports ECC with the W680 chipset.	adhoc32	9.408405	-5.464103	comment	4.0	29.0	1674341037	8.196663
34472270	AMD ryzen CPUs have ECC support, but	AMD ryzen CPUs have ECC support, but it varies by motherboard. My home NAS runs a Ryzen in an ASrock Rack motherboard with ECC ram.I never did figure out a way to verify that the ECC is working/if it is able to report errors (to the kernel?). It was also a bit hard finding the right ram, but there’s a brand called Nemix that I found. I was a bit sketched out by the brand, but the chips themselves were Micron.	hamandcheese	9.39539	-5.4677143	comment	4.0	17.0	1674345111	8.231399
34489168	>  for most use cases the practical 	>  for most use cases the practical need for desktop cpu performance plateaued 10 years agoThis drives me insane, literally every day my computer spends minutes - likely hours in total in a day - blasting at 100% CPU and it's not a ten years old one. Hell, I got access to a threadripper 5990X and even that one I sometimes end up in situations where I have to wait for CPU operations to finish, even for basic life things such as uncompressing archives or editing pictures so I really cannot understand	jcelerier	9.7206335	-5.250711	comment	4.0	13.0	1674484330	7.7397246
34488073	No, where AMD went wrong was in mark	"No, where AMD went wrong was in marketing.For some years, and especially during the last six months before the Bulldozer launch in 2011, AMD has continuously made various claims about its performance, always stressing that it will crush Sandy Bridge, due to having a double number of ""cores"".Immediately after launch, all the AMD claims were proved to be shameless lies. There is absolutely no excuse for AMD. Intel had published accurate information about the performance of Sandy Bridge, one year in advance. Even without the advance publication, the performance of Sandy Bridge could have been easily extrapolated from the evolution of Penryn, Nehalem and Westmere.The performance of Bulldozer was determined by design decisions taken by AMD at least 3 to 4 years before its launch. Therefore, dur"	adrian_b	9.287413	-5.21256	comment	4.0	22.0	1674477280	7.859102
34496993	Ask HN: What's the State of Docker o	Ask HN: What's the State of Docker on Apple Silicon?	iwebdevfromhome	9.57683	-6.3471036	story	4.0	5.0	1674518548	10.021263
34523875	The point is that the ISA is assumin	The point is that the ISA is assuming that BL and RET opcodes come in pairs - which is an assumption that does reflect what structured code is typically compiled down to. Going by the semantics of the opcodes themselves, there's no reason why RET should be treated differently from a simple indirect jump here.	int_19h	9.784108	-5.876028	comment	4.0	18.0	1674679229	-7.488653
34530602	Awesome, but fails with accents etc.	Awesome, but fails with accents etc.A case for polish: „Zażółć gęślą jaźń” - fails in many gunny ways.I also tried emojis - of course it failed, but now I’m super curious how would hand written emojis look like :D	kolinko	9.802033	-6.2650805	comment	4.0	12.0	1674734129	-13.952369
34533753	I always wanted to understand how a 	I always wanted to understand how a CPU works, how it transitions from one instruction to the next and makes a computer work. So I thought: let's implement one and run a C program on it.	codepoet	9.69004	-5.476077	comment	4.0	18.0	1674750066	-7.135697
34563665	Great post, but I don't think the au	Great post, but I don't think the author really knows what 'flamer' means when he uses it to describe Linus Torvalds	joeman1000	9.2829895	-5.908606	comment	4.0	13.0	1674953086	2.9107573
34579125	Ferroelectric Memories: The Middle G	Ferroelectric Memories: The Middle Ground	rbanffy	9.789518	-5.2033544	story	4.0	22.0	1675084228	7.9429193
34637067	> You can add quite a few until you 	"> You can add quite a few until you get to 15 bytes. This length is a hard limit on current x86-compatible CPUs. Any instruction longer than 15 bytes is considered invalid and will generate an exception.There's a few valid 16 byte instructions though.. Sandpile lists a few examples: https://www.sandpile.org/x86/opc_enc.htm  36 67 8F EA 78 10 84 24 disp32 imm32 =  bextr eax,[ss:esp*1+disp32],imm32
  64 67 8F EA F8 10 84 18 disp32 imm32 =  bextr rax,[fs:eax+ebx+disp32],imm32"	convery	9.832001	-5.8108625	comment	4.0	21.0	1675397665	-7.5869727
34652821	If I remember well what I learned in	If I remember well what I learned in college, the organization of x86 processors is superescalar, which means that the processor uses an internal statistics mechanism for predicting the subsequent code that's going to be executed. Itanium on the other side used the VLIW architecture so that the instructions are optimized for a long vector of execution of instructions already in compilation time.I always found the idea behind the VLIW processor architecture to be a quite good one to be honest, but I read many engineers in many places saying that it's a bad one and it was doomed from the beginning.The article says that the death of Itanium is mostly due to the disinvestment in the IA-64 caused by the threat of AMD overtaking the x86 market, even though the competition for the x86 market prob	lp4vn	9.554064	-5.5469403	comment	4.0	29.0	1675499995	-7.7586746
34653017	Any purported explanation of Itanium	"Any purported explanation of Itanium's failure that doesn't even mention compilers once is at best incomplete.  > I won't be surprised at all if the whole multithreading idea turns out to be a
  > flop, worse than the ""Itanium"" approach that was supposed to be so
  > terrific - until it turned out that the wished-for compilers were basically
  > impossible to write.
  >
  >  - Donald Knuth 4/25/2008 in InformIT [0]

[0] https://www.informit.com/articles/article.aspx?p=1193856"	pengaru	9.588554	-5.646495	comment	4.0	12.0	1675502054	-7.696941
34653277	VLIW still lives today in various gu	VLIW still lives today in various guises. GPUs are the most obvious.Even the M1 could be argued to be close, it’s a very wide machine.	dontlaugh	9.626432	-5.465394	comment	4.0	18.0	1675505321	8.052756
34653529	Itanium can be regarded as a huge su	"Itanium can be regarded as a huge success. Maybe some don't remember, but the minicomputers and unices were where all the money was. Sure, Intel had the process edge, and had completely cornered the microcomputer market. But PCs had slim margins and didn't really matter in the bigger scope important data processing.Many of the computer nerds watched in awe as vendor after vendor dropped their hugely expensive and engineering heavy custom CPU architectures and lined up behind Intel. IBM was the only big player who didn't swallow the bait. ""Even if they fail, that's a huge success"" was a common observation at the time.And sure enough. I don't think they failed on purpose, but business wise it was a win-win situation. The x86 architecture would have won anyway, because of the sheer scale, but"	xorcist	9.531159	-5.4634094	comment	4.0	51.0	1675508782	-7.7696342
34653549	Comment I saw on YouTube a while bac	Comment I saw on YouTube a while back:> In some ways Itanium was the most successful bluff every played in the tech industry. In much the same way that Reagan's Star Wars bankrupted the Soviet Union got almost every single competitor to fold. Back at the beginning of the project, Intel was nowhere in high-end & 64-bit computing. There was HP (PA- RISC), Sun (Sparc), Dec (Alpha), IBM (Power), MIPS (SGI). Intel wisely picked the partner with the stupidest management (Carly) to give up their competitive edge and announce to analysts that Intel's vision/roadmap is so awesome that RISC is dead and that they're going to follow the bidding of their master Intel for their 64-bit plan. Wall Street bought in to the story so much that almost everyone else with competitive chips folded their strong ha	andromeduck	9.633848	-5.332762	comment	4.0	34.0	1675509095	7.740222
34655732	I suspect that long term big.little 	"I suspect that long term big.little is not going to be all that important. It is more of a stepping stone along the way.My logic goes something like ""why have 4 small cores and 4 big cores when you could have 8 big cores"".  Then the argument goes ""yes but the small cores use less power"", to which my replay is ""true, but the big cores finish faster and can spend more time sleeping, I think the power argument evens out ether way"".
The real gain is to have better power management for the cores, not by having weird small cores."	somat	9.548314	-5.3023143	comment	4.0	12.0	1675528914	7.9885874
34664098	Logged in to say the same; all of th	Logged in to say the same; all of these have ultimately formed back in IRC days and have aged remarkably well sinceThe only one that is new (and therefore annoying to me as an Old Internet Man) is the insistance of adding emojis into every sentenceFor a while I could guess someones approximate age because of it, but now some of my 40+ friends have started emojiing like a 14 year olds too	butler14	9.791241	-6.2624917	comment	4.0	26.0	1675597611	-14.0024395
34683135	My beef with GitHub's code search is	My beef with GitHub's code search is that it doesn't distinguish between the definition of a symbol and the uses of the symbol,  so you need to wade through 5 pages of results to get the one result you're looking for.  I would contrast that to my IDE which usually scores a direct hit if I enter a search in the right box.The indexing they talk about in that article seems like rearranging the deck chairs on the Titanic so far as that is concerned.	PaulHoule	8.89589	-6.005404	comment	4.0	20.0	1675712678	-11.239961
34703480	There's two different components her	There's two different components here. The first is the Management Engine. Unless this laptop is extremely old, it has one, and it's running. Depending on age, you may be able to prevent it from booting while still allowing the rest of the system to run, but probably not. The second is Intel's Advanced Management Technology (AMT). This is only available on systems with VPro badging, which generally means higher-end business laptops. AMT is much less widely used than you might think, so it's probably not enrolled anywhere. You can confirm whether AMT has been provisioned with https://github.com/mjg59/mei-amt-check, and as long as you have the system firmware password you should be able to reset the ME regardless.(Edit: I didn't make the relationship between these clear. All modern Intel lap	mjg59	9.507809	-5.219195	comment	4.0	16.0	1675824767	7.8165965
34754596	More 8086 reverse-engineering for yo	More 8086 reverse-engineering for your enjoyment. Let me know if you have any questions.	kens	9.689432	-5.483875	comment	4.0	21.0	1676138366	-7.4802146
34773473	That'd likely break a lot of CI work	That'd likely break a lot of CI workloads.	lawtalkinghuman	9.203739	-6.392606	comment	4.0	18.0	1676297041	6.2012067
34777881	Interesting.  Is there a correspondi	"Interesting.  Is there a corresponding ""top"" emoji?"	enriquto	9.805509	-6.2624226	comment	4.0	13.0	1676312877	-13.949808
34807113	Nope. It needed good compiler, not O	"Nope. It needed good compiler, not OS kernel.
Itanium performance relied on very smart compilers, and they not happened in time."	blacklion	9.565578	-5.605529	comment	4.0	14.0	1676481281	-7.727834
34810949	Actually RISC-V is worse than x64 wh	Actually RISC-V is worse than x64 when it comes to performance per watt. It is designed to be very simple, not to be efficient. It does not natively have common instructions like add multiply. To make an efficient modern processor, you want to larger more specialized instructions that do more per clock cycle and have dedicated hardware for common tasks.	quelsolaar	9.471871	-5.7053223	comment	4.0	12.0	1676497067	-10.521717
34811735	These numbers are really bad for bot	These numbers are really bad for both AMD and Intel, honestly.  It suggests that the x86 server/desktop monopoly is getting crushed in a major way.	pclmulqdq	9.31006	-5.1912885	comment	4.0	35.0	1676500223	7.876387
34812436	Where are the non-X86 desktops??	Where are the non-X86 desktops??	ekianjo	9.702586	-5.302394	comment	4.0	30.0	1676503370	-7.8143764
34863903	Rife Is a Framework Experiment	Rife Is a Framework Experiment	hacktember	9.380188	-5.6888967	story	4.0	50.0	1676856556	-10.583142
34864854	Google did this for the same reasons	Google did this for the same reasons AWS created Graviton; the article kind of mentions this: lower energy consumption, better performance for common workloads, and improved security.	itisit	9.549879	-5.1954503	comment	4.0	14.0	1676866771	-8.218882
34878404	AMD EPYC 9004 Genoa Under-the-Lid – 	AMD EPYC 9004 Genoa Under-the-Lid – ServeTheHome	rbanffy	9.308006	-5.204751	story	4.0	46.0	1676968599	-7.0555124
34928982	A federal court judge ruled that the	A federal court judge ruled that these emojis are financial advice	shayanbahal	9.769981	-6.265121	story	4.0	27.0	1677267495	-13.959264
34945279	Made me recall this article on why t	Made me recall this article on why the 6502 isn't great as a C target, including a follow up with some pointers on avoiding some issues with it.https://www.xtof.info/coding-c-8-bit-6502-cpu.html	tyingq	9.598525	-5.474506	comment	4.0	26.0	1677417380	-7.518814
34945464	Interesting that magit feels slower!	Interesting that magit feels slower! Is it possible you're working faster in magit and that's why the commands involved feel slower?	kqr	8.83888	-6.3313932	comment	4.0	16.0	1677418985	-11.556636
34957907	Do we have an easy to find brand/lin	Do we have an easy to find brand/line with ECC memory at reasonable prices yet?	mixmastamyk	9.46925	-5.492905	comment	4.0	14.0	1677513571	8.224104
34960243	Reverse-engineering the ModR/M addre	Reverse-engineering the ModR/M addressing microcode in the Intel 8086 processor	picture	9.658757	-5.484047	story	4.0	79.0	1677523256	-7.4521203
34964032	Considering the original demon cores	Considering the original demon cores were held apart by a screw driver, the answer is technically yes.It's still a horrifyingly unsafe thing to do.https://en.wikipedia.org/wiki/Demon_core#/media/File:Ticklin...	eximius	9.842415	-5.233979	comment	4.0	12.0	1677543472	7.8173676
34972490	How the 8086 processor determines th	How the 8086 processor determines the length of an instruction	picture	9.719307	-5.5536923	story	4.0	97.0	1677607009	-7.5303006
34977274	I wonder how much performance is rea	"I wonder how much performance is really ""despite"" x86, and how much is thanks to it. To this day, x86 CPUs absolutely dominate everything in compute power.Sure, ARMs are better in performance-per-watt game, but the question of how to scale them to the level of high-end x86 desktop processors is still open. For now, I'd argue it's not even clear if that's possible."	reisse	9.589175	-5.245737	comment	4.0	56.0	1677632035	-7.727669
34979478	X86 bashing is getting really boring	X86 bashing is getting really boring. Yes it has flaws and massive backwards compatibility baggage but eg. Arm doesn’t even have a standardized boot process.	baq	9.713606	-5.3399243	comment	4.0	12.0	1677653230	-7.8139834
35015145	Another Arm64 workstation you can bu	"Another Arm64 workstation you can buy today:
https://www.ipi.wiki/products/ampere-altra-developer-platfor..."	cjdrake	9.589964	-5.2260227	comment	4.0	21.0	1677878322	-7.733201
35019230	In Wolfram Mathematica on my desktop	"In Wolfram Mathematica on my desktop PC with a 7 year old processor:    Timing[N[\[Pi], 20000000];]
    {10.1094, Null}

On a fairly recent laptop CPU I got 7.6 seconds.A fair ways to go still!"	jiggawatts	9.668968	-5.211161	comment	4.0	14.0	1677918255	7.676572
35026297	Bit flips are totally real, at scale	Bit flips are totally real, at scale you will definitely see them on large queries. There was a fun talk at DEFCON on bitsquatting, the process of buying 1 bit off domain names and then accepting all incoming connections. Attacks like rowhammer similarly abuse erroneous bit flips. Supposedly microsoft can detect solar activity based on the number of windows crash logs they receive.DEFCON Talk: https://www.youtube.com/watch?v=aT7mnSstKGshttps://en.wikipedia.org/wiki/Bitsquattinghttps://en.wikipedia.org/wiki/Row_hammer	hayst4ck	9.803775	-5.626867	comment	4.0	22.0	1677980945	8.187758
35026682	It seems there is an endless supply 	It seems there is an endless supply of people who know just enough to write some system programs but not enough to learn basic energy accounting. You cannot simply make a CPU run faster by writing MSRs. The current goes in and the heat goes out and the temperature goes up. You can't make it just work under arbitrary parameters.	jeffbee	9.705404	-5.204317	comment	4.0	13.0	1677987036	7.514307
35027255	I've written some small CPU cores in	I've written some small CPU cores in Verilog and used Logisim to design some small FPGA circuits but I can't fathom writing out an entire 486.  Any info on what sort of project management or automation tools are being used to generate all this Verilog?  Because this is literally tens thousand+ lines to define the functionality of a 486 and I can't imagine someone writing out register tables and kept track of naming and the pipelining all by hand.  I'm guessing something like Vivado or some other IDE is used to help manage everything?  I can't tell from the source in RTL.  I find this use of FPGAs to replicate older CPUs/SOCs fascinating.	mk_stjames	9.112422	-5.4697804	comment	4.0	17.0	1677996367	8.592389
35027986	I'm more curious if there is somethi	I'm more curious if there is something that makes visualizing the Verilog easier... for instance, I've done some small projects where I used Digital [0] (which is so unfortunately named, but awesome) to put blocks of Verilog into the visual representation and then connect my blocks together (like ALU, block ram, registers etc) and run simulation.   But the problem is taking all that out back to Verilog and then doing my synthesis with Yosys is a manual chore.I am wondering if there is some sorta... IDE that is letting people inspect projects with lots in individual Verilog files quickly and show the structure visually (and manage test benches run Icarus and GTK wave etc).  I haven't seen this outside of vendor-specific tools like Xylinx's Vivado and I'm wondering if I am just missing somet	mk_stjames	9.147811	-5.4875627	comment	4.0	12.0	1678006317	8.573273
35038338	The End of SDMI (1999)	The End of SDMI (1999)	ecliptik	9.880972	-5.2156825	story	4.0	22.0	1678087238	-7.7430344
35057813	I worked on the UIUC PLATO system in	"I worked on the UIUC PLATO system in the 1970s : CDC-6600, 7600 cpus with 60-bit words.  Back then everything used magnetic core memory and that memory was unbelievably expensive!  Sewn together by women in southeast Asia, maybe $1 per word!Having 6-bit bytes on a CDC was a terrific PITA!  The byte size was a tradeoffs between saving MONEY (RAM) and the hassle of shift codes (070) used to get uppercase letters and rare symbols!  Once semiconductor memory began to be available (2M words of 'ECS' - ""extended core storage"" - actually semiconductor memory - was added to our 1M byte memory in ~1978) computer architects could afford to burn the extra 2 bits in every word to make programming easier...At about the same time microprocessors like the 8008 were starting to take off (1975).  If the ba"	williamDafoe	9.857887	-5.221562	comment	4.0	14.0	1678208674	8.412226
35069034	I have a dumb compiler question that	I have a dumb compiler question that I should probably know and I’m embarrassed to ask.AArch64 really highlights how CPU features differ greatly. There are instructions available on some CPUs that do some amazing things, but are simply not available in very similar models. To wn extent the same problem also exists in x86: for instance, there are a AES functions that are not available on all CPUs.When using an AOT language, how does one take full advantage of all cpu features at runtime? This seems like a place JIT would really outpace AOT.	exabrial	9.709321	-5.5311217	comment	4.0	14.0	1678283985	-7.739634
35125235	Should I use Coreboot or Libreboot?	Should I use Coreboot or Libreboot?	steponlego	9.504726	-5.228534	story	4.0	3.0	1678650353	7.799075
35137045	Just to be clear, SVE is similar to 	Just to be clear, SVE is similar to AVX512 but the “Scalable” part is that the length is not hard-coded to any set number of bits or elements. It is more like the vector computers of old, such as the Cray-1.This means there is no need for continually updating the instruction set with longer and longer versions of the same instructions. Hopefully this leads to a more stable base and wider adoption, we’ll see how that works in practice though!	evancox100	9.721944	-5.7976813	comment	4.0	13.0	1678721308	-10.56539
16821603	I was a bit turned off by the way as	"I was a bit turned off by the way assembly is described as ""tricky"" and ""tedious""... All programming languages can be tricky and tedious. Assembly (specially on the 6502) is conceptually very simple and, while it may not be trivial to translate higher-level concepts to its simplicity, as long as what you want can be readily expressed in it, it's trivially easy.You will, of course, need to know what bits to set at what addresses to make the NES auxiliary chips work and do what you expect them to do and that may represent some work but that complexity is from the platform, not the language. You can have a library (or a set of macros) that deals with it written in any language you can compile for the platform."	rbanffy	9.765448	-5.5803847	comment	5.0	38.0	1523545230	-7.1222143
16873323	Any of those x86? or is that mutuall	"Any of those x86? or is that mutually exclusive with ""cheap""?"	jiggunjer	9.628152	-5.225845	comment	5.0	24.0	1524111987	-7.7851186
16986520	Spectre-NG Multiple new Intel CPU fl	Spectre-NG Multiple new Intel CPU flaws revealed, several serious	ftf22	9.587096	-5.5094643	story	5.0	73.0	1525359000	7.7858763
17028726	It's a bit odd that this would happe	It's a bit odd that this would happen so soon after Cloudflare started testing & praising ARM-based server (and specifically Qualcomm's Centriq). For reference:https://blog.cloudflare.com/arm-takes-wing/ where they find Centriq is mostly performance-competitive with Skylake at a significantly lower TDP/power point modulo platform support/optimisation e.g. Go's ARMv8 backend being immature and lacking optimised assembly routineshttps://blog.cloudflare.com/neon-is-the-new-black/ where they demonstrate the latter by simd-optimizing jpegtrans for ARMv8[0] leading the Centriq 2452 to reach (and even overtake) Xeon 4116's performance-per-worker and blowing its throughput-per-watt out the water (25 image/second/watt on Centriq 2452 versus under 10 on the 4116)[0] as they'd previously done for AMD	masklinn	9.493787	-5.2077003	comment	5.0	36.0	1525861227	7.8035436
17038114	I'm sure the initial reaction here i	I'm sure the initial reaction here is going to be lamentation about the state of documentation. People will correctly point out that, if multiple entities misread the documentation, it just have been unclear. And they are right. But that doesn't make this Intel's fault alone. Clear or unclear, the documentation described behavior that was understood at the Intel organization, and the shipped product worked as described.Where was the security testing at the OS level? Why can't there be automated test suites that catch unauthorized access issues before ship (if not before merge commit)? If your vendor delivers an insecure product and you don't discover it, how much blame do you share?	darkerside	9.487287	-5.2478824	comment	5.0	22.0	1525954083	7.787156
17076911	> The whole Meltdown/Spectre debacle	> The whole Meltdown/Spectre debacle rendered my previous Intel system insecure and unsecurable so that was the final straw for me — no more Intel CPUs.Is any system honestly 100% “securable”? I would argue that any computer, regardless of cpu manufacturer, is “unsecurable”.	monkpit	9.595455	-5.5096226	comment	5.0	19.0	1526411997	7.799515
17095941	Learning an HDL isn't that hard. I w	Learning an HDL isn't that hard. I was productive within a few weeks of starting to use VHDL.A former colleague is now an Altera/Intel FAE, I will ask how things are going the next time we meet up for a beer.	rjsw	9.095586	-5.4931064	comment	5.0	25.0	1526591782	8.616749
17169260	I remember sort of learning (just su	I remember sort of learning (just superficially) Z80 and 6502 assembly at the time (mid to late 80s) and thinking Z80 assembler was much simpler.	thanatropism	9.553273	-5.2531266	comment	5.0	19.0	1527457471	7.033441
17188870	That was before spectre happened. So	That was before spectre happened. Software isolated processes are now basically impossible to do. All the CPU microcode updates & workarounds are purely about fixing isolation between processes & rings that the CPU is aware of.	kllrnohj	9.688687	-5.6156406	comment	5.0	35.0	1527696408	7.799109
17189318	I'd like to think they have some kin	I'd like to think they have some kind of automated CI with a huge warehouse full of cars that automatically drives around and tests everything with each Git push.	colinbartlett	8.987769	-6.400849	comment	5.0	17.0	1527699172	6.032368
17220630	Magit 2.13 released	Magit 2.13 released	signa11	8.77171	-6.4264493	story	5.0	105.0	1528047370	8.492532
17242566	What's funny is that, because you're	What's funny is that, because you're an anonymous nobody, Linus's style would probably be more effective for you. Nobody knows already to assume there's an endless torrent of pointless barking that accompanies all of your commentary. People might actually think you mean it.I mean, you'd get your comments flagged off HN, but other than that: it could work for you.Unfortunately, for Torvalds, we're all in on the joke.The problem is, well, it's just like my bulldog Reinforcements. He doesn't like hats. He sees someone walking down the street wearing a hat, he barks loudly. He barks a lot because of this. When I'm across the house and I hear him bark, I have to try to determine whether something important is happening, or just a hat. It's an impediment to our communication, me and my dog. Same	tptacek	9.275194	-5.902913	comment	5.0	15.0	1528237077	4.160783
17245025	AMD Zen 2 Update: 7nm EPYC in Labs N	AMD Zen 2 Update: 7nm EPYC in Labs Now, Launching in 2019	robin_reala	9.26252	-5.211327	story	5.0	176.0	1528269997	7.9232945
17249120	This reminds me Fossil SCM. The bug 	This reminds me Fossil SCM. The bug tracking and wiki are part of the distributed version control system.https://en.wikipedia.org/wiki/Fossil_(software)	nwah1	8.822078	-6.3828025	comment	5.0	17.0	1528306085	-4.6509237
17263938	> As a northern European I find it n	"> As a northern European I find it not only comfortable that Linus runs Linux, but I would be less comfortable if it was another American smile in face pretend to be your friend but be shady as fuck attitude that you guys seem to confuse for 'professionalism'.This is a false dichotomy.Most of what Linus says would run foul of HN's guidelines - which I'll paraphrase here as ""don't call someone an asshole before making your real point"", but that doesn't mean that everyone on HN is a 'smile in face pretend to be your friend but be shady as fuck'."	kristianc	9.339582	-5.8634186	comment	5.0	23.0	1528451150	4.28103
17283573	It actually presents itself to the s	"It actually presents itself to the system as a single node:On a TR 1920x system:  $ numactl --hardware
  available: 1 nodes (0)
  node 0 cpus: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
  node 0 size: 32107 MB
  node 0 free: 20738 MB
  node distances:
  node   0 
    0:  10"	devttyeu	9.612745	-5.199191	comment	5.0	18.0	1528719076	7.6130834
17304799	So Intel tried to shut *BSD out of t	So Intel tried to shut *BSD out of the process again (like they did for the original Spectre/Meltdown) so they didn't feel they had to respect any embargo?	JStanton617	9.441124	-5.3374047	comment	5.0	36.0	1528908610	7.812809
17304880	Posted on HN 3 days ago, Theo de Raa	Posted on HN 3 days ago, Theo de Raadt speculates about the FP big and discusses being frozen out by Intel.Video. Contains profanity.https://news.ycombinator.com/item?id=17275844	CodeWriter23	9.435456	-5.268329	comment	5.0	17.0	1528909075	7.7482123
17312843	Wait, MIPS still exists and has wort	Wait, MIPS still exists and has worthwhile technologies?I keep expecting this to be a retro branding exercise on something fundamentally different, like a Fiat 500 or a modern VW Beetle.	beat	9.478654	-5.549223	comment	5.0	19.0	1528993731	-10.444702
17337485	From the screenshot of the Intel doc	"From the screenshot of the Intel documented linked:The increased latency ... has a small positive performance impact of 1-2% on highly threaded applications.Making an instruction more than 10x slower overall, for a 1-2% gain (who wants to bet it's some ""industry standard"" benchmark...?) in a very specific situation sounds like a textbook example of premature microoptimisation. Of course they don't want to give the impression that they severely slowed things down, but the wording of the last sentence is quite amusing: ""some performance loss""? More like ""a lot"". It reminds me of what they said about the Spectre/Meltdown workarounds."	userbinator	9.59021	-5.3033876	comment	5.0	20.0	1529322584	7.857918
17351440	> workload dominated by non-local DR	"> workload dominated by non-local DRAM fetches,How often is that a polite way of saying ""software that is inefficient""?"	adrianratnapala	9.824805	-5.263644	comment	5.0	17.0	1529454704	7.8993196
17368625	"What is an example of the ""per-cpu d"	"What is an example of the ""per-cpu data"" they're talking about here[0]?[0] https://github.com/torvalds/linux/blob/d82991a8688ad128b46db..."	mereel	9.622468	-5.3639784	comment	5.0	19.0	1529610223	7.803168
17392461	RISC-V Hardware So Far Isn't Entirel	RISC-V Hardware So Far Isn't Entirely Open-Source	pjmlp	9.392043	-5.6420054	story	5.0	80.0	1529935259	-10.560774
17393246	Of course not.  RISC-V is open instr	Of course not.  RISC-V is open instruction set, not open microarchitecture.There will be some totally open RISC-V microarchitectures, but they are not competitive with commercial ones. Maybe some verified and intentonally very simple designs for security applications.I would like to be proven wrong, so if there is some IC experts who can explain the business case where someone invests $300-$500M   to develop new top notch open source microarchitecture (patent free?) every 5-10 years that can compete with Intel, AMD and others, I would like to see it.	Nokinside	9.388154	-5.6311636	comment	5.0	23.0	1529941256	-10.536938
17417606	> I don't think refusal to allow a c	> I don't think refusal to allow a custom emoji with a hashtag is censorshipIt is if you allow the other side to do exactly the same, as noted in the linked article.	dingo_bat	9.7758255	-6.285469	comment	5.0	38.0	1530199340	-13.953794
17436307	An interesting side-effect of this, 	An interesting side-effect of this, is that it would enable a standard of synchronization, across geographic regions, such that one could treat a set of virtual machines as one ultra-wide-bus CPU with a 1 GHz clock speed.All of the local overhead of real system resouces and network synchronization could handled by the remainder of the real CPU clock available to the bare metal, but contribute to the computation of a segment of a virtual bit field, at speed.So, now maybe we get a commodity 4096 bit 1 GHz CPU as a service. Which, is maybe comparable to a 64 core processor, but without the overhead of chunking down to the width of 64 bits.	downer68	9.596698	-5.224328	comment	5.0	32.0	1530463551	7.9561844
17483851	My first professional coding job use	My first professional coding job used SourceSafe which was lock-based so you couldn't even do concurrent versioning. Everyone had to take turns with the files.	tootie	8.8548565	-6.3641653	comment	5.0	18.0	1531058726	-11.728023
17490049	"Some of the ""facts"" here are pretty "	"Some of the ""facts"" here are pretty weak. The ""years of security expertise"" is not really a feature I'd be proud of given the recent processor-level vulnerabilities that in fact, paint a very different picture about how traditional processor vendors treat security.Even if there is some validity here, this is in surprisingly poor taste. I've known people who have worked for ARM. I wonder what they think about this."	jchw	9.5455675	-5.192292	comment	5.0	38.0	1531143602	-7.685612
17490294	The OP's advice, if applied in CPU i	The OP's advice, if applied in CPU industry, would be disastrous. Modern desktop/server CPUs are incredible complex... in order to drive maximum performance. Pipelining, OOO execution, branch prediction and speculative execution: these are all features that introduce tremendous amount of architectural and design complexity. In many cases, they also harm correctness, because they can lead to functional and security bugs.And yet, if you try to compete with Intel with a CPU missing the above optimizations, you will get absolutely creamed in the marketplace. No one, not even those touting the importance of simplicity and correctness, will buy what you're selling.Today's free market is too complex for these overly simple rules. Choosing between simplicity, correctness and performance, is a comp	whack	9.493952	-5.2500105	comment	5.0	26.0	1531145703	7.836847
17504294	I have been a big fan of the RISC-V 	"I have been a big fan of the RISC-V efforts.  Arm's attack is actually heartening in the sense that it confirms the perceived threat from RISC-V is real.  This is a moment on the path that makes me realize real progress is being made for RISC-V.The development of new technology seems to go so slow while it's happening; it's only in hindsight that it seems it's always and inevitably been this way.  Still a long way from running OpenBSD on a 17"" laptop with nothing but open source hardware inside, but it's a nice moment."	sverige	9.411208	-5.6471825	comment	5.0	70.0	1531280149	-10.55815
17505588	The problem with AVX2 accelerated co	The problem with AVX2 accelerated code (and much of AVX) is that unless you have a lot of it to run you end up with a substantial speed hit that comes from the cost of switching to a different power bin (which often takes 1 or 2ms!) and then running at a lower clock speed.This often still ends up being an improvement over scalar code (at the cost of higher power usage), but for occasional workloads that don't need to do multiple milliseconds of AVX instructions you tend to have better results from 4-wide vectors, which don't have this cost.	yoklov	9.471335	-5.55327	comment	5.0	21.0	1531301663	8.094678
17518449	This is perhaps tangential to the ar	This is perhaps tangential to the article, but what is the advantage of running the MySQL server with more than 48 threads on a 24-core, 48 thread CPU anyway?The fact that performance is in the EPYC cpu increasing on the older 4.13 kernel when you use 100 instead of 40 threads  is surprising to me. On the Epyc (Kernel 4.15 | Ubuntu 18) and and Xeon CPU you can see it stalls or decreases from ~48 threads upwards.	et2o	9.817313	-5.609927	comment	5.0	24.0	1531428374	8.347218
17520588	Don’t know why you are being downvot	Don’t know why you are being downvoted. Linus’s tirades and diatribes are famous for how brutally personal they get. I still maintain that they are a waste of time and he would be a more effective leader if he limited his responses to “this is a bad idea” or “this isn’t done right” instead of writing pages long personal attacks on other members of the project.	IgorPartola	9.288908	-5.891939	comment	5.0	53.0	1531457479	4.2877507
17531490	Running Amiga-like OSes on QEMU	Running Amiga-like OSes on QEMU	doener	9.877799	-5.2938433	story	5.0	74.0	1531591622	-8.175366
17548467	Case in point:> chips will support u	Case in point:> chips will support up to 3.84 TB of memory per socket ... due to combining 512 GB Optane DIMMs and 128GB DDR4 DIMMs> ...> in a 6 x Optane and 6 x DDR4 configuration, they will provide 3072 GB of 3D XPoint memory and 768 GB of DDR4 RAM for a total of 3.84 TB of memoryOptane DIMMs don't really have the performance characteristics of traditional DRAM. It sounds like the real capacity per socket is 12 x 128GB = 1.53 GB, which is the same capacity as the previous generation.That being said, I'm optimistic about Optane DIMMs - it seems like an interesting performance point in between DRAM and SSDs.	nordsieck	9.8073225	-5.2067237	comment	5.0	41.0	1531820392	8.030111
17549018	Threadripper may come close in core 	Threadripper may come close in core count, but it cannot use registered memory, which means it's limited to 128 GB of RAM (based on the current maximum UDIMM capacities). That's not competitive in the server space.	theevilsharpie	9.645142	-5.4460993	comment	5.0	20.0	1531828394	8.185174
17555970	Oh yeah. I used to send an emoji tha	Oh yeah. I used to send an emoji that looked to me like grinning and my friend told me after months she was really feeling uncomfortable with me snarling all the time.I wish those emojis carried a very small caption. Also because I can't recognize what half of them are supposed to mean.	Tomte	9.791442	-6.267372	comment	5.0	22.0	1531896437	-13.951418
17588272	As I understand it, ME is used to re	"As I understand it, ME is used to remotely control the processor like in a datacenter.  If a datacenter is buying hundreds of thousands of these it makes sense to have it on by default so their people don't have to go in and turn anything on.  As much as I recognize it as a vulnerability (to the extreme), it doesn't make sense to have it off by default.  They should certainly support a way to _permanently_ disable it.  I wish there were easy tools to verify ME is ""not accessible"" since I don't work in a datacenter and I wouldn't know how to test that it's off.Things that come with great benefit to risk for abuse:- Intel ME- Computrace- Device Guard"	blitmap	9.526124	-5.238229	comment	5.0	25.0	1532286397	7.7367373
17589599	Just a note that if you want to avoi	Just a note that if you want to avoid Intel's disastrous Management Engine, there are companies you can support that disable it.Purism[0] sell nice MBP-style, Debian-based laptops with modern Intel processors with the NSA's 'High Assurance Platform' bit set, and as much of the ME code removed as possible. It still runs briefly at boot, but this is the most-disabled you can currently get on any i3/i5/i7 processor[1].[0]: https://puri.sm/[1]: https://puri.sm/posts/deep-dive-into-intel-me-disablement/System76 are planning to do something similar[2].[2]: http://blog.system76.com/post/168050597573/system76-me-firmw...The last Intel processors where the ME could be removed entirely without bricking, were the non-AMT Core Duos (2008ish), which were used on the Thinkpad T4	confounded	9.520588	-5.2316155	comment	5.0	22.0	1532304608	7.7965326
17609818	"This form of ""segmentation"" is somet"	"This form of ""segmentation"" is something I've always found appalling. A part like this is no different from a high-end part; it's an identical design that is intentionally damaged so it doesn't cut in to high-end sales. It comes out of the factory fully-featured and Intel charges you extra if you want them to skip breaking it.The free market, in its beautiful efficiency, leads to the intentional crippling of millions of state-of-the-art chips."	adigonionio	9.344002	-5.1841354	comment	5.0	18.0	1532531135	7.808335
17638416	Emojis are mistake and added too soo	Emojis are mistake and added too soon. We end up with standard that is full of short lived symbols from 2000-2025 that were once in a fashion and new generations of people will abandon them for something else when the culture changes.Adding new stuff (excluding old languages) to Unicode should have a delay, at least 20-25 years from proposal to the standard (roughly a generation).In the meantime it's possible to insert emoji into text as :), smiley, -smiley-,  smiley.jpg, ::smiley:: or whatever you want and the system you use is free to change it into a picture.	nabla9	9.814809	-6.259431	comment	5.0	34.0	1532875878	-13.958486
17650131	Tangentially related: I think this i	"Tangentially related: I think this is the first time I see an emoji URL “in the wild“, not as a proof of concept.
I don't know how to feel about it."	tambourine_man	9.793911	-6.2700253	comment	5.0	46.0	1533004974	-13.950174
17698672	Bloody hell, this processor has more	"Bloody hell, this processor has more cores than the dual socket Xeon HPCs that my lab bought 2 years ago. Amazing.
Honest question: Isn't the memory throughput an issue when you try to feed 32 hungry processors?"	whatever1	9.437391	-5.1939034	comment	5.0	28.0	1533570602	7.975289
17699440	At the end of the day we still have 	At the end of the day we still have the third party me_cleaner to disable the proprietary secret coprocessor on Intel chips while AMD chips still have their equivalent PSP With no first or third party means to disable it.Until such a time I can get the equivalent tool to stop the hardware spyware built into the CPU I can have no enthusiasm or motivation to buy AMD chips. Not to say I want to buy Intel parts - they have nothing to do with third party efforts to nullify their backdoor - but if I were buying a chip tomorrow it would be a begrudging Intel purchase just for me_cleaner.	zanny	9.421307	-5.223866	comment	5.0	24.0	1533574965	7.8454328
17749550	History of the ISA: Digital Equipmen	History of the ISA: Digital Equipment Corporation	rbanffy	9.572314	-5.4779196	story	5.0	23.0	1534163675	-7.6875553
17758841	One clarification on the comment abo	One clarification on the comment about latency. FPGAs are typically clocked much slower than a modern CPU. Typically, they run somewhere in the low 100's of MHz, whereas an Intel CPU clocks in at around 3GHz last time I went to the Apple Store. With a typical x86 multiply instruction having a latency of about, say, 3 cycles, putting that workload on an FPGA would result in a ~10x slow-down!The real benefit of an FPGA is that you get to decide what happens in any given cycle. So rather than being able to multiply two numbers in a single cycle like on x86, you could make your FPGA design do, say, 20 multiplications in a single cycle (space allowing). Which means that you can now multiply 20 numbers in 1/10th of the time it would take on x86. (In reality I think you have something like four e	seliopou	9.124675	-5.366827	comment	5.0	27.0	1534260791	8.351307
17803713	Intel has addressed the issue. It wa	Intel has addressed the issue. It was a misunderstanding on Debian's part: https://news.ycombinator.com/item?id=17801931	ccnafr	9.782357	-5.2810674	comment	5.0	17.0	1534797351	7.766214
17824866	> Another issue is whether the custo	> Another issue is whether the customer should install the fix at all. Many computer users don’t allow outside or unprivileged users to run on their CPUs the way a cloud or hosting company does. For them, these side-channel and timing attacks are mostly irrelevant, and the slowdown incurred by installing the fix is unnecessary.lol, javascript	infinity0	9.889041	-5.34064	comment	5.0	48.0	1535003006	7.389179
17829162	I saw a tweet somewhere (IIRC in the	I saw a tweet somewhere (IIRC in the anandtech sidebar, unfortunately I'm not finding it right now) where the poster speculated that it was the EULA for a beta version of the microcode which leaked into the final version.	cesarb	9.557215	-5.298094	comment	5.0	19.0	1535046064	7.691019
17830017	Does this mean AMD hyperthreading ha	Does this mean AMD hyperthreading has a performance + security advantage over currently shipping Intel processors?Edit: https://www.amd.com/en/corporate/security-updates> 8/14/18 – Updated: As in the case with Meltdown, we believe our processors are not susceptible to these new speculative execution attack variants: L1 Terminal Fault – SGX (also known as Foreshadow) CVE 2018-3615, L1 Terminal Fault – OS/SMM (also known as Foreshadow-NG) CVE 2018-3620, and L1 Terminal Fault – VMM (also known as Foreshadow-NG) CVE 2018-3646, due to our hardware paging architecture protections. We are advising customers running AMD EPYC™ processors in their data centers, including in virtualized environments, to not implement Foreshadow-related software mitigations for their AMD platforms.For those on AMD pla	walterbell	9.5819435	-5.514009	comment	5.0	34.0	1535052905	7.8936405
21018971	> I think that so many of the practi	"> I think that so many of the practices (like version control) have become so popular that reading an argument for their use seems superfluous.This made me laugh - not because you aren't right (in theory), but because I just took over a project from a big four consulting company. When I asked about the location of the latest version of the code (after looking in VC and not finding it)...answer: on the production server. ""We could have checked it into VC, but didn't want to take the time.""I've seen at least n=6 of these in the past couple of years.Sometimes the oldies are goodies."	jsperson	8.877906	-6.3193474	comment	5.0	23.0	1568917037	-0.6030396
21021268	I tested our most complex pipeline o	I tested our most complex pipeline on Github Actions (the newer version of the beta, which had the YAML specification, though I tried both). Our most complex pipeline, though universally likely not very complex; maybe 8 distinct linters, unit tests, a build step with a typescript compile + docker build, and an image push.While they're definitely trying out some novel ideas in the CI world, it was startlingly slow. Using as much parallelism as possible on every platform; CircleCI could do this pipeline in ~5 minutes, BuildKite (what we currently use) hosted on GCP n1-standard-1 instances, could do it in about 6, and Github Actions took closer to 10. I believe the main reason why Circle was faster was that I took some extra time to set up their native cacheing systems for things like npm dep	013a	8.803697	-6.4101043	comment	5.0	20.0	1568931231	-11.870027
19024926	> Today, 99% of 32-bit and 64-bit pr	> Today, 99% of 32-bit and 64-bit processors are RISC> Concluding this historical review, we can say the marketplace settled the RISC-CISC debate; CISC won the later stages of the PC era, but RISC is winning the post-PC eraIt is clear that his assessment is right, but isn't the 99% number too high ? Servers, laptops and desktops still run x86 and they are CISC ( unless you are counting x86 as RISC based on microcode )> Many researchers assume they must stop short because fabricating chips is unaffordable. When designs are small, they are surprisingly inexpensive.> High-level, domain-specific languages and architectures, freeing architects from the chains of proprietary instruction sets, along with demand from the public for improved security, will usher in a new golden age for computer arc	simula67	9.425918	-5.499711	comment	5.0	36.0	1548753282	-10.466127
19126888	"This isn't ""every single thing that "	"This isn't ""every single thing that you could possibly want to talk about"". This is something that half of the world population experiences roughly monthly for some number of years. Certainly it's more frequently experienced than the emojis - though I appreciate those. So it's clearly something that should exist. The underwear might seem odd but it's no weirder than the smiling poop emoji..."	hgdsraj	9.790749	-6.2707024	comment	5.0	15.0	1549787371	-13.99643
19137951	I know this is off-topic, but: a res	"I know this is off-topic, but: a resource I really wish existed is ""how to build Emacs UI like Magit""."	tptacek	8.873215	-6.413925	comment	5.0	22.0	1549916821	-11.406248
19147128	CPU Clocks and Clock Interrupts, and	CPU Clocks and Clock Interrupts, and Their Effects on Schedulers (2015)	TN1ck	9.634748	-5.244071	story	5.0	120.0	1550002811	7.681521
19164836	I wonder what kind of BIOS/EFI repla	I wonder what kind of BIOS/EFI replacement there will be on RISC-V motherboards. A brand new ISA seems like a great time to throw out any legacy features and focus on a future proofed low level firmware.	snazz	9.609719	-5.466796	comment	5.0	28.0	1550171268	-10.544342
19165142	All that's missing now is an afforda	All that's missing now is an affordable Linux RISC-V development board.	lsllc	9.406912	-5.630275	comment	5.0	21.0	1550172912	-10.588044
19165156	The info everyone is missing is code	The info everyone is missing is code density comparison with ARM. Risc-V is more efficient and has about 10% denser code, which translates to more instructions fitting in i-cache, less memory pressure, and ultimately better performance and battery life. Long term roadmap, thats a win for Risc-V.	smallstepforman	9.432942	-5.6955967	comment	5.0	32.0	1550172976	-10.562308
19165980	Can someone eli5 why people keep wan	Can someone eli5 why people keep wanting to make RISC-V happen?  I'm not in tech and I keep seeing posts like this.	JohnJamesRambo	9.370546	-5.707519	comment	5.0	18.0	1550178142	-10.616818
19170396	Spectre is here to stay: An analysis	Spectre is here to stay: An analysis of side-channels and speculative execution	matt_d	9.645445	-5.6079445	story	5.0	169.0	1550234615	7.7957826
19170607	>> These attacks leak information th	>> These attacks leak information through micro-architectural side-channels which we show are not mere bugs, but in fact lie at the foundation of optimization.So we'll need to have non-speculative execution for cloud CPUs and stronger efforts to keep untrusted code off our high performance CPUs. This may even lead to chips with performance cores and trusted cores.	phkahler	9.720048	-5.5386953	comment	5.0	58.0	1550236492	7.770256
19185570	Arm Helium: New vector extension for	Arm Helium: New vector extension for the M-Profile Architecture	flagada	9.854845	-6.040274	story	5.0	53.0	1550424412	-8.399872
19224662	So RISC-V CPU designers should aim f	So RISC-V CPU designers should aim for the developer market then? First win the hearts and minds of developers, then everything else will come.	majewsky	9.382843	-5.648002	comment	5.0	27.0	1550837564	-10.575849
19224908	Linus is mostly wrong except for HPC	Linus is mostly wrong except for HPC. Very few dev pipelines for folks result in native executables.The vast majority of code is delivered as either source (python, ruby, etc) or bytcode, JVM, Scalia, etc.And the Xeon class machines folks deploy to in data center envs is a world apart from their MacBooks.These truths are true for Linus, but not for the majority of devs.Even those creating native binaries, this is done through ci/cd pipelines. I have worked in multi arch envs, Windows NT 4 on mips/alpha/x86, iOS, Linux on arm. The issues are overblown.	sitkack	9.428284	-5.814963	comment	5.0	25.0	1550840454	4.174252
19309914	Spectre attacks have so far only bee	Spectre attacks have so far only been observed at the nation-state level in the wild. If you're truly paranoid about being in the first wave of victims, disable Javascript and other active content on non-white listed pages.  At some point processors are going to have to drop into a non-speculative security mode when dealing with vulnerable data like passwords and handshakes, and pop back out of it when they're done.	Causality1	9.690065	-5.607552	comment	5.0	19.0	1551786692	7.6751666
19327656	That's got to waste transistor and p	"That's got to waste transistor and power budgets. In comparison, when an ARM CPU is in A64 mode, all instructions are the same length, making decoding multiple instructions per cycle trivial.On the other hand, that wastes cache memory and fetch bandwidth. Instruction density is very important especially since caches are big and consume a lot of power too. I believe that if it weren't for the brief period in the 80s where memory speeds were higher than core speeds, what we know as ""RISC"" today would've never appeared."	userbinator	9.53745	-5.6922097	comment	5.0	42.0	1551963910	-10.473497
19327790	"""On the other hand, that wastes cach"	"""On the other hand, that wastes cache memory and fetch bandwidth...""This. One of the reasons why modern x86 processors have such strong performance is their external facing CISC interface effectively acts as memory compression while they are RISC on the inside. In many ways its a best of both worlds that was achieved through incremental evolution."	voidlogic	9.585613	-5.6896214	comment	5.0	25.0	1551965010	-10.483408
19328608	> Still, there are a few areas where	"> Still, there are a few areas where the A64 architecture is theoretically ""better"" than x64, due to the lack of legacy.Every extant A64 processor needs to deal with ARMv8 instructions, thumb instructions, thumb2 instructions, shift encoding, microcoded multiple load/store instructions...  It's true that the subset of the ISA that makes up the overwhelming bulk of instructions actually executed is very simple.  But frankly that's true of x86 as well.> when an ARM CPU is in A64 modeThat's... not the way hardware works.  Those transistors are still there, it's not like you can make them go away by switching ""modes"".  They still are ready to switch every cycle, and in any case having transistors that ""aren't needed"" doesn't make anything faster, because they all execute in parallel (or at wor"	ajross	9.686221	-5.448014	comment	5.0	28.0	1551971543	-7.7122617
19329469	>CISC vs RISC is almost completely i	>CISC vs RISC is almost completely irrelevant these days.This nonsense keeps coming up. No, it's not irrelevant. It matters. A lot.A CISC design is complex, but it doesn't stop there. This complexity spreads down the chain. Implementations get complex, bugs happen. Making formal proofs of an implementation's correctness becomes impossible. Writing a compiler back end will be complex. Debugging it will be complex. Writing a proof that the machine code meets both the ISA specification and implements the same thing the higher level language does is also complex.Now, where's the advantage of CISC to justify this complexity? Yeah, right.	snvzz	9.470992	-5.7064342	comment	5.0	27.0	1551976738	-10.502703
19460382	Question: for someone without assemb	Question: for someone without assembly background, what would be the best resource to get started with RISC-V?	sirn	9.462419	-5.75306	comment	5.0	22.0	1553241535	-10.540883
19473291	This is cool, but I question that th	This is cool, but I question that the addition of a FPGA will really make that much of a difference to make it stand out against the other products on the market that can do realtime DSP, except maybe for battery-operated devices (where maybe the FPGA can be more power-efficient than a general-purpose CPU?)I would have expected the raspberry pi 3 to meet most needs for this market. Quad cores clocked at > 1GHz, USB ports for connecting a controller, analog audio out (or SPI/I2C to a better DAC if you're not happy with the quality), and even HDMI if you want to drive a display, or MIPI for embedded displays.Is it not easy to drive headless, and that's why developers need a different device for this? Or does the FPGA really unlock that much extra possibilities beyond what a quad-core, 1.2 GH	wallacoloo	9.097155	-5.3455415	comment	5.0	29.0	1553388447	8.332286
19537240	Intel underplayed the exploit and to	"Intel underplayed the exploit and told ZDNet that the VISA issue requires physical access to the machines and the Intel-SA-00086 vulnerabilities have already been mitigated.Am I the only one here who thinks ""threat model"" and isn't all too worried? Physical access = full control, I've long held that belief and am not happy that this freedom is continually being eroded in the name of ever-increasing ridiculous ""security"" (a lot of it against the user, for things like DRM, as mentioned in one of the other comments here.)Debugging/""test mode"" features are basically present in all modern CPUs. I would not bet that Intel is the only one.Edit: such features have been present in CPUs dating back to the late 70s, so perhaps ""modern"" isn't needed: see http://forum.6502.org/viewtopic.php?f=8&t=3366 "	userbinator	9.482547	-5.32138	comment	5.0	31.0	1554056694	7.8168488
19554248	Heyo, I'm a PhD student in the field	Heyo, I'm a PhD student in the field. I figured I can talk about its current status.First, here are various search terms: clockless, self-timed, delay-insensitive, latency-insensitive, quasi delay-insensitive (QDI), speed independent, asynchronous, bundled-dataThere are a wide variety of clockless circuits that each make their own timing assumptions. QDI is the most paranoid, making the fewest timing assumptions. Bundled-data is the least paranoid (its effectively clock-gating).A clockless pipeline is always going to be slower than a clocked one and requires about 2x the area. However, clockless logic is way more flexible, letting you avoid unnecessary computation. Overall, this can mean significantly higher throughput and lower energy, but getting those benefits requires very careful desi	nbingham	9.386061	-5.2777247	comment	5.0	31.0	1554214265	8.0624695
19565302	> I never thought Linus was in bad f	"> I never thought Linus was in bad form. His project, his rules.I think this is a problematic way to view things.Linus was usually right on the technical aspects, but he often made personal insults that were really just irrelevant. There's no need to attack people personally to get your point across. Honestly, his attitude in many of those famous comments strikes me as immature — he presents himself as someone who would rather spend time berating a person who tried to make a contribution and didn't do a good job than simply explaining why their contribution isn't good enough.Sure, ""his project, his rules"", but that doesn't give him carte blanche to be a dick to people without any repercussions. Just as he is entitled to speak his mind, so too are the people who felt that his comments were "	DonaldPShimoda	9.281615	-5.8915944	comment	5.0	61.0	1554312738	4.2642355
19590709	x86_64 please.https://software.intel	x86_64 please.https://software.intel.com/sites/default/files/m/d/4/1/d/8/I...https://cs.brown.edu/courses/cs033/docs/guides/x64_cheatshee...https://web.stanford.edu/class/archive/cs/cs107/cs107.1194/g...	CalChris	9.907496	-5.7358904	comment	5.0	22.0	1554558709	-0.8074677
19728828	When Spectre first came out, my pred	When Spectre first came out, my prediction was basically that the only effective mitigation would be to move the untrusted code into another address space. This post reinforces that they have exhausted all other options:> Our research reached the conclusion that, in principle, untrusted code can read a process’s entire address space using Spectre and side channels. Software mitigations reduce the effectiveness of many potential gadgets, but are not efficient or comprehensive. The only effective mitigation is to move sensitive data out of the process’s address space.Probably the most effective hardware mitigation would be to shift the isolation to a page-level granularity, so that you could say that speculation is disabled for memory in specific pages.	jcranmer	9.731692	-5.644537	comment	5.0	42.0	1556029214	7.929939
19739585	Are we mistaking a dependency contro	Are we mistaking a dependency control problem as a revision control problem?In a previous life, before microservices, CI/CD etc. existed, we did just fine with 20-30 CVS repositories, each representing a separate component (a running process) in a very large distributed system.The only difference was that we did not have to marshal a large number of 3rd party dependencies that were constantly undergoing version changes. We basically relied on C++, the standard template library and a tightly version controlled set of internal libraries with a single stable version shared across the entire org. The whole system would have been between 750,000 - 1,000,000 lines of code (libraries included).I'm not saying that that's the right approach. But it's mind boggling for me that we can't solve this pr	hliyan	8.751274	-6.420443	comment	5.0	27.0	1556120905	-11.775169
19826302	I'm not a security expert by any mea	I'm not a security expert by any means, but row hammer has always struck me as one of the most ingenious hacks ever. I mean if you can flip bits by sending electric current repeatedly through a channel then what can't you do? Nothing is sacred. There is no God	ackbar03	9.643879	-5.640442	comment	5.0	17.0	1556976484	-13.888223
19825878	RowHammer: A Retrospective	RowHammer: A Retrospective	matt_d	9.6145115	-5.6569414	story	5.0	65.0	1556970685	-13.891888
19836029	Intel XED – x86 Encoder Decoder	Intel XED – x86 Encoder Decoder	peter_d_sherman	9.763269	-5.6639786	story	5.0	114.0	1557103394	7.5183783
19911845	Hyper-Threading has been a source of	Hyper-Threading has been a source of security concerns for a decade now, and vulnerabilities in existing HT implementations have been trickling out over the last few years. Unlike Management Engine or TrustZone, at least we can disable Hyper-Threading (for a 30% performance hit).	StudentStuff	9.843777	-5.6482506	comment	5.0	44.0	1557856077	8.322195
19913858	Apparently Intel attempted to play d	"Apparently Intel attempted to play down the issue by trying to  award the researchers with the 40,000 dollar tier reward and a separate 80,000 dollar reward as a ""gift"" (which the researchers kindly denied) instead of the maximum 100,000 reward for finding a critical vulnerability.Intel was also planning to wait for at least another 6 months before bringing this to light if it wasn't for the researchers threatening to release the details in May.Source in the dutch interview: https://www.nrc.nl/nieuws/2019/05/14/hackers-mikken-op-het-i..."	fakwandi_priv	9.445307	-5.240193	comment	5.0	29.0	1557867644	7.7904153
19939685	Yet, AMD looks way better considerin	Yet, AMD looks way better considering all vulnerabilities reported so far. Why downplay this fact?	mda	9.291232	-5.22939	comment	5.0	30.0	1558101805	7.8169675
19952864	> I blame 8080. It's not accessible.	> I blame 8080. It's not accessible. Is it technically more advanced? Perhaps.I think blaming 8080 is extremely inappropriate here, as it is historically inaccurate. Intel 8080 is a preliminary microprocessor (and usually even not considered a x86 processor at all), it was designed in the early 70s, it was very accessible. Arguably, it was the processor that created Altair 8800, which was the ancestor of the entire lines of home computers in the 80s. The original Microsoft BASIC interpreter also targeted Intel 8080 and Altair 8800, the BASIC interpreter would later be licensed to all the other home computer manufacturers including Commodore. The derivative of the Intel 8080, Zilog Z80, was used on Sinclair and MSX computers, particularly, ZX Spectrum is the British-equivalent of Commodore 	bcaa7f3a8bbc	9.594021	-5.2447376	comment	5.0	48.0	1558267073	-7.5288815
37613226	The git commit, push, wait loop is t	The git commit, push, wait loop is terrible UX. Users deserve portable pipelines that run anywhere, including their local machines. I understand Act [1] goes some way to solving this headache but it's by and large not a true representation.There are many pipelines you can't run locally, because they're production, for example, but there's no reason why we can't capture these workflows to run them locally at less-critical stages of development. Garden offers portable pipelines and then adds caching across your entire web of dependencies. Some of our customers see 80% or higher reductions in run times plus devs get that immediate feedback on what tests are failing or passing without pushing to git first using our Garden Workflows.We're OSS. [2][1] https://github.com/nektos/act[2] https://doc	tao_at_garden	8.762677	-6.4325037	comment	5.0	33.0	1695396110	-11.873779
37614424	I agree overall, but you oversimplif	I agree overall, but you oversimplify the issue a bit.> can I push this YAML complexity into a script?- what language is the script written in?- will developers use the same language for all those scripts?- does it need dependencies?- where are we going to host scripts used by multiple github actions?- if we ended up putting those scripts in repositories, how do we update the actions once we release new version of the scripts?- how do you track those versions?- how much does it cost to write a separate script and maintain it versus locking us in with an external github action?These are just the first questions that pop in my mind, but there is more. And some answers may not be that difficult, yet is still something to think about.And I agree with the core idea (move logic outside pipeline 	riquito	8.82967	-6.4315624	comment	5.0	16.0	1695401657	-11.836457
37716387	Twice the cores leads me to think we	Twice the cores leads me to think we're getting ecores	jtriangle	9.565768	-5.3042464	comment	5.0	20.0	1696087916	7.941571
37716857	"I have an ""old"" 32c/64t threadripper"	"I have an ""old"" 32c/64t threadripper 2990-WX as my primary dev machine.  I'm really looking forward to a consumer grade Zen5 with 32c/64t as an upgrade, as threadripper is now locked to high costs OEMs..In fact, I wonder how much market there will be for threadripper once we have 32c/64t consumer grade desktop CPUS."	drewg123	9.311526	-5.210692	comment	5.0	49.0	1696090447	7.8736725
37768807	Thank goodness. I've been expecting 	Thank goodness. I've been expecting this ever since Intel bought Altera, they just stuck with it a couple years longer than I figured.They focused solely on the high end, but it turns out nobody really wants FPGA fabric on a CPU. You can already do acceleration over a PCI express link, and that's what you more often do with embedded applications where the CPU is acting more like a dispatch controller than doing the real work.Intel also have completely ignored the low end of the market. The only true lowend part they have is the Cyclone 10LP, which is literally the exact same part as the cyclone 3/4 from 2008. Just slightly die shrunk. No hard IP support like ddr3 controllers, no MIPI, nothing that people are getting from the competition now.Intel did realize this, which is why the new Agil	mips_r4300i	9.147251	-5.290358	comment	5.0	33.0	1696441183	8.2649975
37768472	> I hoped that it would make sense t	> I hoped that it would make sense to install certain instructions on your fpga depending on your workloads.It's one of those things that seem like a good idea, but they just don't work out in practice. FPGA LUTs are just way too slow. You'd have to find a case where doing something on a 3GHz CPU clock running multiple instruction parallel gets outperformed by LUTs that runs at 700MHz (at best). And when you cascade the LUTs, they become slower too.And that's without solving the problem of closely coupling a CPU pipeline with FPGA logic.> What do not see what they mean by ratio here. Do they mean die ratio between cpu and fpga?What they mean is: in something like the Zynq FPGA family, I want a die with 2 CPU cores and 5000K LUTs. The other guy wants 8 CPU cores and 2000K LUTs. It works for	tverbeure	9.179074	-5.336699	comment	5.0	21.0	1696439999	8.233301
37796875	I am surprised that no one has comme	I am surprised that no one has commented on the difficulty of learning/using the 68000 Assembly language versus Intel.Iirc, there were no books available to me for the Motorola Assembly language programming nor do I remember having easy access to any environments for it.	readthenotes1	9.776168	-5.5595837	comment	5.0	18.0	1696628881	-7.4226804
37830527	I have a genuine question - in pract	I have a genuine question - in practice on a workstation/developer computer, what sort of protection does ECC ram give me?I've got two daily driver machines - a 3970x threadripper with 96GB ram, and an M1 Macbook Pro - neither of which have ECC ram.I've been using them both for over 2 years, and not once in that period (that I'm aware of) have I found myself with a problem due to faulty RAM, but I do regularly find myself wishing both were faster.What practical benefit would I get in exchange for the performance hit of ECC memory?	maccard	9.4808445	-5.539338	comment	5.0	22.0	1696935128	8.242321
37842888	Even if they knew, what would they d	"Even if they knew, what would they do about it? It's not like ""the governments"" could pull up a Spectre patch out of thin air. There are no mitigations. So what do they gain from knowing if they can't avoid it anyways?"	develatio	9.651087	-5.5846806	comment	5.0	15.0	1697021134	7.816383
37895018	Yes. The external bus on the 8088 is	Yes. The external bus on the 8088 is 8-bit while the 8086 is 16-bit (which is why the 8086 wouldn't appear in a PC until the mostly-80286 PS/2 line, since the 8086 and the 80286 could use the same 16-bit PS/2 bus).	LukeShu	9.599982	-5.2700815	comment	5.0	17.0	1697419648	-7.5304728
37913216	IMO, there are too many extension fo	"IMO, there are too many extension for RISC-V.
They need to consolidate some of them."	j16sdiz	9.390805	-5.698884	comment	5.0	28.0	1697541214	-10.567471
37936444	Red Hat's Ex, Jim Whitehurst, Is Now	Red Hat's Ex, Jim Whitehurst, Is Now Temporary CEO at Unity Software	em-bee	9.903574	-5.382363	story	5.0	43.0	1697673589	-9.503955
37943529	For those interested, the key takeaw	For those interested, the key takeaway from this IMO is that by issuing many sequential reads, the memory controller will hold a target row open for an extended amount of time to service the consecutive accesses.This is in contrast to the original rowhammer attack, which issues accesses such that target rows are repeatedly opened and closed to trigger bitflips in neighboring rows.By stretching out the row open time to 30ms (!), the authors claim they are able to reliably trigger bitflips with a single row opening in 13% of tested rows at 50°C[1]. Some rows in certain chips can be flipped with access times of under 10ms[2].At more realistic row open times of 7.8 - 70us, there seems to be a 1/x relationship between row open time and number of activations required, they cumulative amount of t	exrook	9.657753	-5.682852	comment	5.0	28.0	1697726336	8.297908
37944935	So this is a direct DRAM spec violat	So this is a direct DRAM spec violation: there is a spec in the DRAM datasheet known as tRAS (row address strobe: time from row open (read) to row close (write back)).  Min is 33 ns, Max is 9*tREFI.  tREFI (average refresh period) depends on temperature: for below 85C, it's 7.8 us.  So tRAS max is 70 us.  (this is from some random Micron DDR4 datasheet)Um, so of course they can trigger problems when they violate the spec!Were they able to find a DRAM controller that violates the spec?  If so, that's a simple bug in the DRAM controller.  Well I guess so, the paper mentions Intel i5-10400 (Comet Lake).  Do AMD processors have this issue?	jhallenworld	9.739493	-5.4407935	comment	5.0	16.0	1697732557	8.142896
37964061	"Okay, I know I'm ""that guy"" that jus"	"Okay, I know I'm ""that guy"" that just has to bring RISC-V into any discussion: Why hasn't there been more adoption/movement of OpenPOWER or OpenSPARC? I assume that they have extremely solid toolchains available, and the feature sets were obviously mature enough for high end computing, and they've been 64-Bit for a long time.I thought that the UltraSPARC T1/Niagara was a really amazing concept, if maybe a few years too early (and definitely in the wrong hands after Sun was extinguished), so I'm just scratching my head why everyone's so gung-ho at starting a brand new architecture from scratch - especially one that seems more suited for ultra-low power microcontrollers. OpenPOWER was founded 10 years ago, OpenSPARC is even older, the T1 code was released in 2006 - so there was time to adopt"	MenhirMike	9.432641	-5.4740767	comment	5.0	77.0	1697862341	-10.462664
37996673	FPGA soft cores for space applicatio	FPGA soft cores for space applications.  You can't (or at least couldn't at the time) license ARM cores for FPGA deployments outside of R&D because ARM is psychotic.	edrxty	9.481748	-5.3306074	comment	5.0	27.0	1698139741	-7.6896133
37997034	Yes exactly, the 'existence proof of	Yes exactly, the 'existence proof of a competitive architecture using exclusively 32-bit instructions' has often been reference.Qualcomm's proposal is all instructions are aligned to their size. Initially that means everything is a 32-bit instruction, now with a lot more green-field encoding space to play with (so less need to have larger instructions). 64-bit instructions would be introduced (aligned on a 64-bit boundary) when needed with the expectation they'd be used for rare operations and 48-bit instructions wouldn't happen.The SiFive (and original RISC-V architects view) is RISC-V is meant to be a variable length instruction set and a mix of 16/32/48 provides better static code size along with better dynamic code size meaning smaller icaches needed, smaller buffers in fetch units etc	gchadwick	9.520729	-5.715533	comment	5.0	37.0	1698143387	-10.493125
37997115	Why would you need a 64 bit instruct	Why would you need a 64 bit instruction; what kinds of things are going to be used for it?What does 'rare' mean here, does it mean rare in execution, or rarely appears in code? (The difference being that something might only appear once in your code but be part of your hot loop so be executed any number of times)If they are rare in execution, what is their value over composing them of 32-bit instructions, where the (rare) overhead of doing so would be typically a amortised away?(The only thing I can think of that 64 bit instruction seem suited to is some kind of internal CPU management instructions, but context switches etc. are relatively rare & very expensive anyway so... I don't know)	_a_a_a_	9.705622	-5.4969134	comment	5.0	26.0	1698144107	-7.5800476
38113748	"""We'll pay you to not switch to thos"	"""We'll pay you to not switch to those cheap RISC-V cores coming down the pipeline""."	hajile	9.386605	-5.6396646	comment	5.0	86.0	1698934203	-10.597761
38117174	Imagine HP & Intel execute on Itaniu	Imagine HP & Intel execute on Itanium to perfection: Were they still doomed to failure, or is VLIW/EPIC actually a viable competitive approach for high-performance general purpose CPUs?The market evidence suggests it’s not, but there haven’t been that many well-funded, competent attempts (Itanium, Transmeta, ???) so the sample size is small.	twoodfin	9.554888	-5.560801	comment	5.0	16.0	1698946511	8.263339
38127719	Definitely curious how this plays ou	Definitely curious how this plays out:> Unfortunately, however, because Windows sees all of the cores as identical, it also has no proper insight into energy efficiency here. Specifically, Windows has no idea that the Zen 4c cores are meant to be more energy efficient, so it will be making scheduling decisions based solely on workload/frequency metrics. This means that AMD is not able to take full advantage of the energy efficiency advantages offered by the Zen 4c CPU cores, as Windows isn't able to explicitly schedule threads on the more efficient cores. (An issue Intel gets around with their more meddlesome Thread Director)Given that they are on feature parity with Zen 4, but trade higher clock speeds for density and efficiency - will we see the efficiency if Windows doesn't know any bet	neogodless	9.286489	-5.205187	comment	5.0	30.0	1699014566	7.892139
38131177	At every single company I've ever wo	"At every single company I've ever worked the company issued laptop has been significantly faster than the machines provisioned for CI (i.e. m1 mac vs Github action free tier runners). Consequently I don't usually push code without running the tests locally, it's such a faster feedback loop.I've always wondered if it would be possible to design some proof of work concept where you could hash your filesystem + test artifacts to verify tests passed for a specific change.FWIW in yeas of development I've never had an issue where ""it works on my machine"" doesn't equate to the exact same result in CI."	Jackevansevo	9.648819	-6.370516	comment	5.0	23.0	1699029366	6.068881
38131543	I want a better system load metric n	I want a better system load metric now that we've got heterogenous cores in CPUs. The Pixel 8 Pro has 3 types, efficiency, performance, and one single ultra performance core.If your efficiency cores are always close to max usage, but your performance cores are idle, is your system being heavily or barely used?I understand that system load isn't really a useful metric between systems, but it's useful to compare on a single system I think. I just want a better at-a-glance thing to communicate to me if my computer is under or overloaded.(Additionally, do you have to specify that a particular app can run on efficiency cores, or does the process scheduler do it all without input from a human?)	bloopernova	9.688047	-5.324571	comment	5.0	20.0	1699030653	7.8620944
38137720	Can anyone comment on how notable th	Can anyone comment on how notable this announcement is for RISCV?	jadbox	9.357216	-5.719092	comment	5.0	22.0	1699066705	-10.621964
38145711	The Itanium sales forecasts never fa	The Itanium sales forecasts never fail to make me laugh. Aged like the finest wine:https://upload.wikimedia.org/wikipedia/commons/8/88/Itanium_...	pram	9.518009	-5.5309014	comment	5.0	111.0	1699135969	-0.8013776
38158084	Hmm – the smallest, most highly-inte	Hmm – the smallest, most highly-integrated PDP-11 (-compatible) package ever made was the QFP 1806VM2, with around ~135k transistors; it integrated MMU, UART, parallel interface, keyboard controller, etc, but did floating-point instructions in interpretive microcode.I think that same transistor count was reached by Motorola on the 68020, which would've been around 1984, but would have needed the peripheral controllers mentioned here.	nxobject	9.810365	-5.4285946	comment	5.0	30.0	1699237620	-7.5364532
38219641	"> ""getting crushed by a wave of very"	"> ""getting crushed by a wave of very low cost Chinese competitors""That's an odd way of spelling ""maintaining a stable market share in the face of Chinese competition"".Going forward, IoT security is going to be an increasingly important factor for new designs. The EU is quite serious about combating security problems with IoT devices. And security is something that the new products coming out of Nordic is very serious about.I don't think many big, serious device manufacturers are willing to risk being the target of the first catastrophic IoT attack just to save some pennies on a dirt cheap Chinese design, with some poorly verified RISC-V core thrown in with a power hungry  Bluetooth radio.ARM TrustZone is not something the RISC-V ecosystem has a clear standardized answer to yet. So I think "	audunw	9.530493	-5.2609816	comment	5.0	44.0	1699628350	-7.611566
38268043	'Reptar', a new CPU vulnerability	'Reptar', a new CPU vulnerability	el_duderino	9.56922	-5.291132	story	5.0	123.0	1699989287	6.2559886
38268737	CacheWarp: A new software fault atta	CacheWarp: A new software fault attack on AMD SEV-ES and SEV-SNP	g0xA52A2A	9.428305	-5.2872868	story	5.0	96.0	1699991812	7.8264275
38279754	I genuinely don't see how x86 archit	I genuinely don't see how x86 architecture will continue to survive the next 10 years. It will of course take longer to change home desktop users to new architectures; they will be the last segment to switch, but it seems all but inevitable.BTW, I'm not even speaking to whether x86 can compete at the same power per watt... I think it just won't make sense financially to be out of sync with the industry.	wargames	9.610903	-5.218962	comment	5.0	27.0	1700070332	-7.5877743
38287903	Is there any point, even?In my under	Is there any point, even?In my understanding, Itanium never went anywhere other than rare enterprise use, and never been anything more than a minority, inconvenient, uncompetitive architecture. At this point what servers remain will be slow, power hungry and unsupported.Even if the kernel did support Itanium, how many projects are even building for it anymore, let alone taking care of making sure it still works?Anything you can run on Itanium is almost certainly going to work better on AMD64.Unlike something like the Amiga, it never had an enthusiast fanbase, and unlike say, SPARC or SGI hardware I don't think it ever had any fancy weird enterprise features you couldn't get on AMD64. The only motherboards I can find are from Supermicro, and they support up to 16 GB RAM, and have a PCI-X sl	dale_glass	9.518699	-5.469398	comment	5.0	41.0	1700131017	-7.7852435
38304294	Is there any versioning scheme that 	Is there any versioning scheme that is comparable? Honest question.	throwaway468234	8.952015	-6.3590164	comment	5.0	21.0	1700232316	9.111472
38380091	> Load your current Mac up with the 	> Load your current Mac up with the apps you normally use together when working, and watch their use in Activity Monitor’s CPU History window. If its P cores are fully occupied much of the time, and that workload often spills over to the E cores, then you should aim for an M3 with more P coresAuthor mentions we can use Activity monitor to see where are apps running, in P or E cores, but I am unable to see this. Can anyone share how to check this? Running the latest Sonoma update	elAhmo	9.848427	-5.2778525	comment	5.0	23.0	1700665117	7.8687806
38379761	I'm totally flummoxed by the graphs 	"I'm totally flummoxed by the graphs in the ""P v E"" section. Shouldn't ""Total Time"" remain constant-ish until the number of threads exceed the number of cores? Why does time increase linearly with the number of threads on a multi-core system? Or is ""Total Time"" here ""CPU Time"" and not wall clock time?"	AlexandrB	9.587569	-5.313199	comment	5.0	15.0	1700663784	7.8624763
38417982	Debian's MIPS64EL CPU Port Is at Ris	Debian's MIPS64EL CPU Port Is at Risk Due to Declining Hardware Access	rbanffy	9.553192	-5.4138684	story	5.0	25.0	1700956918	-10.273053
38429278	C++ Memory Model: Migrating from x86	C++ Memory Model: Migrating from x86 to ARM (2021)	signa11	9.755402	-5.4779863	story	5.0	151.0	1701070861	-7.697838
38450531	> Graviton4 processors deliver up to	"> Graviton4 processors deliver up to 30% better compute performance, 50% more cores, and 75% more memory bandwidth than Graviton3.This seems ambiguous. Presumably this is 50% more cores per chip. What about ""30% better compute performance"" and ""75% more memory bandwidth"": is that per core, or per chip? If the latter, then per-core compute performance would actually be lower.Also, ""up to"" could be hiding almost anything. Has anyone seen a source with clearer information as to how per-core application performance compares to earlier Graviton generations?"	snewman	9.504285	-5.2044096	comment	5.0	18.0	1701202027	-8.451908
38460857	> These tests aren’t intended to be 	> These tests aren’t intended to be purposeful in any way, nor to represent anything that real-world code might runSeems like a strange test then..Can anyone speak to performance regarding programming?My 2017 macbook pro is good enough for a lot of things (running java locally, node with nodemon), but slows down for anything native app (xcode) related and running a Docker container with >1GB memory. That's where I'd love to have some improvement	willsmith72	9.883266	-5.956931	comment	5.0	20.0	1701272736	-5.4940114
38464266	Why the custom arch? If building a C	Why the custom arch? If building a CPU is a challenge, then supporting an entire toolchain and ecosystem for it is a whole other level of complexity that isn't necessary or helpful. Moving from being pure MIPS only makes sense if there is some patent issue that you are trying to avoid because you want to sell to foreign markets to raise volume of production.But then just go with RISC-V, I mean there are legions of ravenous fanboys out there _and_ it's already got support.So the only thing that makes sense is that you have legacy MIPS clients and machines where either you want a drop-in replacement, or compatibility with them... but also want to piggy back on RISC-V and will end up with a CPU with a split personality.	Pet_Ant	9.407952	-5.650959	comment	5.0	18.0	1701287112	-10.488033
38482511	I’m gonna call bullshit here.  The d	I’m gonna call bullshit here.  The difference in arm pose couldn’t be covered in any reasonable burst period.	khazhoux	9.552637	-5.1921787	comment	5.0	22.0	1701399557	-7.691613
38590760	What's very nice about RISC-V 64bits	What's very nice about RISC-V 64bits: code assembly once, run it everywhere, almost quite literaly... no absurdely and grotesquely massive and complex compilers anywhere, no planned obsolescence, feature creeps on computer language syntax nowhere to be found, ultra stable in time, near 0 SDK.	sylware	9.470498	-5.7341413	comment	5.0	27.0	1702206432	-10.487322
33086064	$1500... hell no.VisionFive2[0] w/JH	$1500... hell no.VisionFive2[0] w/JH7110, U74x4 @ 1.5GHz, 8GB, 2x GbE, M.2 slot, pi-like gpio header, is less than $100, and thus a much more cost efficient way to get started with RISC-V.0. https://www.kickstarter.com/projects/starfive/visionfive-2	snvzz	9.369906	-5.602904	comment	5.0	27.0	1664914388	-10.567552
33129460	“As for why the Ryzen 7000 series pe	“As for why the Ryzen 7000 series performance is actually slower if disabling the Spectre V2 mitigations, that's likely something only AMD can effectively answer but presumably…”Just ask!Seriously. You can ask AMD. Maybe they won’t tell you, but they might. It might be really good info. Why not ask someone who is really knowledgeable about this stuff like a kernel developer who works on x86-64 or worked on the mitigations?This is what I never understand about Phoronix. People link to them all the time but they run a bunch of benchmarks and then end on “there you go”. I’d like investigation into why. You won’t always get an answer but you should try.	MBCook	9.38332	-5.2347894	comment	5.0	28.0	1665198399	7.867233
33131475	Ask HN: Why are Intel E-Cores 1/4th 	Ask HN: Why are Intel E-Cores 1/4th the size of P-Cores	KingOfCoders	9.556688	-5.341869	story	5.0	5.0	1665228874	7.953986
33130284	Intel's Alder Lake BIOS Source Code 	Intel's Alder Lake BIOS Source Code Reportedly Leaked Online	42jd	9.448257	-5.2195206	story	5.0	25.0	1665210773	7.755787
33165988	Pine64's RISC-V Ox64 Takes on Raspbe	Pine64's RISC-V Ox64 Takes on Raspberry Pi Pico W	rbanffy	9.473136	-5.566362	story	5.0	24.0	1665508645	-10.488314
33180937	"""Intel Inside"" worked.."	"""Intel Inside"" worked.."	keepquestioning	9.412005	-5.202095	comment	5.0	42.0	1665599010	7.7377954
33181035	Can't read the article, but for cont	"Can't read the article, but for context Intel's share price never recovered from the ""dot com"" bubble of 2000:https://www.tradingview.com/chart/?symbol=INTCIt's one of a few large companies with that distinction.Shares now offer a (relatively) regal 5.3% dividend yield and a price/earnings ratio just above 5. Of course, as profits dwindle, both metrics will be recalibrated downward.This seems relevant because during the late 1990s Intel was allegedly the company whose shares one bought and never sold. I could name a couple of those whose positions today are argued to be equally ironclad."	SevenNation	9.267297	-5.204139	comment	5.0	17.0	1665599379	-4.4933033
33181249	I've typed this before but I'll type	I've typed this before but I'll type it again here. About 10 years ago I ran the local Python Meetup group here in Phoenix. Intel had/has a big presence here and one of they guys who worked on the Atom team (doing compiler optimizations for that chip family) told us (at one of the Meetups)Intel corporate didn't like how good a processor Atom was shaping up to be. They were worried it would start to cannibalize their desktop and server processor lines -- so they did everything possible to cripple its development.He and his whole team were furious.	cowmix	9.396992	-5.218282	comment	5.0	17.0	1665600348	7.7385597
33200631	interesting, so they are actually us	interesting, so they are actually using Ryzen with ECC RAM (when most people would be using Ryzen with non-ECC RAM) and that saved them from some seriously corrupted data written back to their persistent storage.wondering is it common for people to specifically monitor their system log for correctable error related messages, do they consider the memory is faulty when there are correctable errors?	dis-sys	9.688943	-5.5188494	comment	5.0	25.0	1665732848	8.238583
33210278	RISC-V Public review for standard ex	RISC-V Public review for standard extensions Zc	snvzz	9.402937	-5.7099714	story	5.0	94.0	1665792546	-10.600633
33210871	RISC-V gets more and more complicate	RISC-V gets more and more complicated all the time.   N different extensions of which almost any subset is a valid combo, so 2**N variants.  Meanwhile, nothing about fast integer overflow detection.	throwaway81523	9.492346	-5.7875338	comment	5.0	38.0	1665798961	-10.54851
33221492	Interestingly it crashes starting on	"Interestingly it crashes starting on ""how many emojis on i"""	greendude29	9.815904	-6.2740765	comment	5.0	15.0	1665901348	-13.927043
33225060	>And yes, my system is all set up fo	>And yes, my system is all set up for ECCFrom reading this, I guess one has to do some special setup to let a system use ECC?Been thinking about ECC myself. What would I need to do, apart from buying the DIMMs and putting them in? Some BIOS settings? Jumper settings?	natch	9.460306	-5.506885	comment	5.0	21.0	1665938870	8.243406
33338739	Running Intel Binaries in Linux VMs 	Running Intel Binaries in Linux VMs with Rosetta	tambourine_man	9.842803	-5.3397026	story	5.0	87.0	1666749085	7.582424
33346557	Is there an equivalent to IME for AM	Is there an equivalent to IME for AMD and/or Apple M-class processors (that would similarly benefit from disabling for home user)?	r00fus	9.4368305	-5.195829	comment	5.0	16.0	1666804042	7.7831826
33402436	Five Good Things About RISC-V	Five Good Things About RISC-V	taubek	9.373773	-5.7027645	story	5.0	18.0	1667194992	-10.598176
33416495	This graph shows transistors basical	This graph shows transistors basically maintaining pace and completely disregards multi-core performance. Of course single core perf will rise more slowly when a chip now has 8-64x as many cores.	zaptrem	9.462588	-5.2226124	comment	5.0	25.0	1667272528	7.8738685
33601922	> All you need is to have the Single	> All you need is to have the Single Emoji browser extension, which connects to your Slack workspace and enables you to use your favorite Emoji on your favorite tools, by making the smallest patches possible to how these tools work. Nothing too fancy, nothing too suspicious.all you need is to connect random javascript to a major channel for social engineering and then run it inside major channel for software supply chain risk	awinter-py	9.736808	-6.229759	comment	5.0	26.0	1668463552	9.165256
33626828	RV is an open-ended collection of IS	"RV is an open-ended collection of ISAs. Do not doubt that the number of instructions will grow as large as is found in x86 and ARM, making a mockery of the ""R"".I am ready for the successor, Risc-6, already. It can retain most details of RISC-V while fixing its more glaring deficiencies. It is not a mistake to optimize an ISA for use in undergraduate courses, but probably is one to use identically the same ISA industrially.I don't know if the worst deficiency is the need to fuse up to 5 consecutive instructions to get useful operations per clock cycle to a competitive level.While fixing serious problems, numerous smaller incidentals could be patched, such as having chosen the architectural representation of ""true"" to be 1 instead of -1."	pencilguin	9.474639	-5.733467	comment	5.0	49.0	1668619405	-10.51803
33643777	> they can’t wait to get rid of itAp	> they can’t wait to get rid of itApple developed the 68k emulator used in PowerPC Macs in-house, and never removed it.Apple licensed Rosetta from Transitive at a time when they didn't have tens of Billions of dollars in cash lying around.Rosetta 2 was developed in-house, but even if they were still paying a licensing fee every time they shipped a new OS version, it wouldn't even be a rounding error to their bottom line today.Why would they be in any rush to remove Rosetta 2 at all?	GeekyBear	9.784858	-5.292479	comment	5.0	17.0	1668711405	7.566465
33647835	"What is up with the ""salute"" emojii?"	"What is up with the ""salute"" emojii? Seems it is used when you are fired at Twitter? It is some kind of new meme? Or old perhaps?"	mongol	9.798362	-6.263926	comment	5.0	19.0	1668729843	-13.956224
33762703	The article is about a discrete impl	The article is about a discrete implementation of the LM386 op amp, not an 80386 processor :).	johndoe0815	9.543929	-5.2856684	comment	5.0	21.0	1669554425	-7.610321
33775664	True, but the problem is that that i	"True, but the problem is that that is today better done on vector hardware like a GPU or other ML hardware. The world has sort of diverged int to two camps: vectorizable problems that can be massivly paralleleized (graphics, simulation, ML) and for that we use GPUs, and then everything else is CPU. What i think linus is saying is that there are few reasons to use AVX-512 on a CPU, when the is a GPU much better siuted for those kinds of problems.You could say that the intersecting area in the ven diagram of ""Has to run on CPU"" and ""Can use vector instructions"" is small."	quelsolaar	9.457063	-5.538997	comment	5.0	21.0	1669653034	8.07535
33776153	> Multimedia encoding/decoding,Done 	> Multimedia encoding/decoding,Done on special-purpose hardware that is >10 times more efficient than any implementation on GP hardware.> emulation,Only current practical use of AVX-512.> ML, matrix multiplications, ...Much better to do on the GPU.In general wide SIMD on CPU has the problem that to make effective use of it, you have to massage your code enough that you are ~95% away from just running it on the GPU anyway, and you can gain much more performance if you do that. The best niche of AVX-512 would have been as the baseline common target for things that also get optimized for GPUs... except that Intel has eliminated this possibility by heavy product segmentation right from the start.	Tuna-Fish	9.450581	-5.537978	comment	5.0	17.0	1669655160	8.077138
33778626	If I need to crunch small amounts of	If I need to crunch small amounts of data in a hurry, existing instructions are fine for that.If I need to crunch large amounts of data in a hurry, I'll send it to a GPU.  The CPU has no chance to compete with that.I honestly don't understand who/what AVX512 is really for, other than artificial benchmarks that are intentionally engineered to depend on AVX512 far more often than any real-world application would.	CamperBob2	9.450985	-5.544384	comment	5.0	36.0	1669665115	8.094927
33900884	What's the context behind this?  I'v	What's the context behind this?  I've used CircleCI at many jobs, and I guess people must have moved on to some better tool?  What's the better tool?	jrockway	8.878801	-6.390755	comment	5.0	26.0	1670450285	1.3140785
33925185	I was referring to comparing the US 	I was referring to comparing the US intel operation to the Stasi.	Hnrobert42	9.31024	-5.1975446	comment	5.0	16.0	1670612575	7.7570724
33926012	It's a horrible architecture. Every 	It's a horrible architecture. Every iteration on top of it made it even more hideous. It's a unnatural thing that should have never been. Every time an x86 powers up, it cries in despair and begs to be killed.	rbanffy	9.694095	-5.4117856	comment	5.0	22.0	1670617214	-7.784318
33997074	MIPS announces its first RISC-V chip	MIPS announces its first RISC-V chip designs are now available for licensing	ndsipa_pomu	9.409358	-5.6609125	story	5.0	63.0	1671096021	-10.510983
35170599	Reverse-engineering the multiplicati	Reverse-engineering the multiplication algorithm in the Intel 8086 processor	CoBE10	9.70978	-5.5594144	story	5.0	171.0	1678897004	-7.368435
35170856	Author here. I'm without electricity	Author here. I'm without electricity but can discuss the 8086 if anyone has questions :-)	kens	9.602554	-5.4035645	comment	5.0	21.0	1678898084	-7.5092535
35273085	Chip designers have noticed this sim	Chip designers have noticed this similarity in the past have and attempted to push some of the work done by the CPU back into the compiler. Itanium and the Mill CPU both work(ed) like this I believe.	nickcw	9.685816	-5.7065578	comment	5.0	29.0	1679571087	-7.6188397
35400338	Intel is halting its employee air sh	Intel is halting its employee air shuttle service amid cost-cutting effort	fortran77	9.3494005	-5.189221	story	5.0	24.0	1680357423	7.7439413
35442797	Author here for all your 8086 questi	Author here for all your 8086 questions :-)	kens	9.631032	-5.423168	comment	5.0	47.0	1680628162	-7.5068836
35450288	Presumably the M1 Linux distro won't	Presumably the M1 Linux distro won't have access to the Rosetta translation layer to run X86 programs? Or will that work anyway?	gambiting	9.799711	-5.3962073	comment	5.0	26.0	1680677453	7.6365
35494532	Reverse-engineering the division mic	Reverse-engineering the division microcode in the Intel 8086 processor	picture	9.687918	-5.521423	story	5.0	127.0	1680969479	-7.3678765
28041490	I wonder if it is worth it to select	I wonder if it is worth it to select a few core libraries like glibc, and get the distro to install multiple variants, each optimized for a different CPU.	hyperman1	9.894401	-5.5097103	comment	5.0	18.0	1627932509	-8.205429
28162018	Does someone who just wants to exper	Does someone who just wants to experiment with a little bit of web-dev really need to have version control right away? Seems a bit out of scope. That seems like a concept that can wait a few months while they actually just explore writing some code first.	tcoff91	8.83076	-6.378873	comment	5.0	16.0	1628805136	6.3042297
28178883	Oh boy. If anyone here is coming acr	"Oh boy. If anyone here is coming across Chris Domas (the author of this github) for the first time, you're in for a treat! Some of his talks on youtube are absolutely mind-blowing:DEF CON 26 - Christopher Domas - GOD MODE UNLOCKED Hardware Backdoors in redacted x86:
https://invidious.snopyta.org/watch?v=jmTwlEh8L7gDEF CON 26 - Christopher Domas - The Ring 0 Facade Awakening the Processors Inner Demons:
https://invidious.snopyta.org/watch?v=XH0F9r0siTI"	xelxebar	9.576448	-5.289514	comment	5.0	17.0	1628927261	7.7857428
28312986	PragmatIC Semiconductor designed and	PragmatIC Semiconductor designed and manufactured a flexible 6502 in two weeks	fanf2	9.495108	-5.214343	story	5.0	26.0	1629973879	-7.4627237
28374489	Are stickers the new Emojis? Every a	Are stickers the new Emojis? Every app seem to have a slightly different implementation and they don't really interoperate well.Can this tool be used for WhatsApp stickers? And how different are Slack and Discord Stickers?I wonder if we'll see some standardization in the future akin to the addition of emojis to Unicode.	dudus	9.800136	-6.2548947	comment	5.0	16.0	1630449364	-13.952542
28402545	> RISC-V isn't an architecture you'd	> RISC-V isn't an architecture you'd want to run a computer on.Why not, too risky? Joking aside can anyone explain why this is the case? Is it the classical risc vs cisc debate?	le-mark	9.393956	-5.66452	comment	5.0	60.0	1630666096	-10.570679
28404668	Unicode has emojis[0] which are free	Unicode has emojis[0] which are freely usable for nearly every device as far as I understand.What is the purpose here?  How much overlap?[0] https://unicode.org/emoji/charts/full-emoji-list.html	matt_s	9.922496	-6.249078	comment	5.0	21.0	1630679363	-13.959398
28501429	Emulating AMD Approximate Arithmetic	Emulating AMD Approximate Arithmetic Instructions on Intel	zdw	9.430426	-5.374093	story	5.0	84.0	1631456716	7.992893
28523350	Travis CI Leaked Secure Environment 	Travis CI Leaked Secure Environment Variables	mattficke	9.084873	-6.3757253	story	5.0	85.0	1631620654	-9.479721
28543056	What food to do you feel is missing 	What food to do you feel is missing from the food emojis?	run-types	9.790687	-6.271321	comment	5.0	30.0	1631732944	-13.957087
12646841	I have a naive question based in my 	I have a naive question based in my dreams:Is possible to design a CPU that ON-DEMAND switch between parallel and linear operation? So, if we have a 1000 cores, it switch to 10 with the linear power of 10 x 10?In my dreams this was very usefull, but wonder how feasible clould be ;)	mamcx	9.671445	-5.360252	comment	5.0	15.0	1475694885	8.188532
12709654	This aspect of their new chips is ma	This aspect of their new chips is massively underrated. An FPGA  is the future-proof solution here, not chip-level instructions for the soup-du-jour in machine learning.Edit: which is not to say that I'm not welcoming the new instructions with open arms...	yid	9.104325	-5.3126645	comment	5.0	42.0	1476466053	8.248598
12709907	Almost all FPGAs have entirely propr	"Almost all FPGAs have entirely proprietary toolchains, from Verilog/HDL synthesis all the way down to bitstream loaders for programming your board. These tools are traditionally very poorly built as applications, scriptable only with things like TCL, terrible error messages, godawful user interfaces designed in 1999, etc etc.[1] This makes integrating with them a bit more ""interesting"" for doing things like build system integration, etc.Furthermore, FPGAs are inherently much more expensive for things like reprogramming, than just recompiling your application. Synthesis and place-and-route can take excessive amounts of time even for some kinds of small designs. (And for larger designs, you tend to do post-synthesis edits on the resulting gate netlists to fix problems if you can, in order to"	aseipp	9.107815	-5.4216065	comment	5.0	26.0	1476468023	8.450294
12774071	FPGA Acceleration by Dynamically-Loa	FPGA Acceleration by Dynamically-Loaded Hardware Libraries [pdf]	Katydid	9.140901	-5.2902894	story	5.0	65.0	1477238916	8.271901
12797268	To me it seems like every time intel	"To me it seems like every time intel tries to create a security safeguard, it almost always without exception ends up being a new attack-vector instead (see ""x86 considered harmful"").I'd love to run simpler versions of the modern intel cpus stripped of  all this insecure bloat.Surely I can't be the only one?"	josteink	9.517383	-5.267029	comment	5.0	15.0	1477495898	7.757062
12957873	ARMv8 in the Datacenter – 96 physica	ARMv8 in the Datacenter – 96 physical cores 0.50/hr	thepumpkin1979	9.520311	-5.2030883	story	5.0	39.0	1479217436	7.7756877
12983716	I've been wondering if one of those 	"I've been wondering if one of those chips could fit a CPU.How do you estimate this sort of stuff? I can estimate software decently, but the penalty for being wrong is seldom so bad. With a hardware project, things actually don't fit and you are out of luck.Different FPGAs have different sorts of limits, not just 1 different number. Do you go by lines of Verilog/VHDL code? Do you go by some idea of ""most crazy operation"" and register width? How...?"	tropo	9.164142	-5.2616825	comment	5.0	16.0	1479434475	8.234173
13051742	When originally invented the x86 ins	When originally invented the x86 instruction set was efficient - the most-used instructions had shorter byte code sequences. But eventually some instructions got 'left behind' by the compilers. There are a whole host of single-byte instructions that are never, ever used by a compiler - the register exchange instructions for instance (xchg eax, ebx). Compilers just schedule destination registers carefully, never need to swap them around.Also the whole set of exchange-register-with-itself were defined but never used. E.g. xchg ax,ax which does nothing in one byte. In fact that one was considered useful, its used as the 'no-op' instruction (0x90) right? But what about xchg bx,bx, xchg cx,cx and so on? Just wasted single-byte opcodes. Leaving actual common instructions to use longer bytecode s	JoeAltmaier	9.91614	-5.8889494	comment	5.0	17.0	1480283214	-7.5655003
13052175	Can you point to a source for this? 	Can you point to a source for this? All x86 assemblers that I know of map one assembly instruction to one machine instruction.	amw-zero	9.876404	-5.820589	comment	5.0	21.0	1480288053	-7.5043554
13054444	This makes me wonder. The 6502 in th	This makes me wonder. The 6502 in the NES ran at 1.79MHz.According to https://en.wikipedia.org/wiki/Instructions_per_second , a modern i7 processor handles north of 100,000 MIPS.According to https://en.wikipedia.org/wiki/Transistor_count, the 6502 had 3510 transistors.At 100,000 MIPS, a modern CPU would have a budget of ~56k instructions to process one cycle of that CPU, or about 16 instructions per transistor.So it would seem it might now be possible to simulate those old processors, at the transistor level, in real time. Is anyone aware of experiments in this domain? If not really useful, that sounds like an interesting fun (side) project.	glandium	9.556562	-5.2194214	comment	5.0	19.0	1480326932	-7.505064
13154508	If you're looking to learn an HDL on	If you're looking to learn an HDL on an FPGA, it's probably still cheaper and easier to just buy your own, maybe something like http://store.digilentinc.com/arty-board-artix-7-fpga-develop... ($99). And for that matter, you can also get started by just using a sim and no FPGA for free	brian-armstrong	9.058245	-5.477307	comment	5.0	19.0	1481502515	8.570671
13165973	5th RISC-V Workshop Proceedings	5th RISC-V Workshop Proceedings	razer6	9.387603	-5.7213144	story	5.0	77.0	1481626714	-10.563488
13171395	But is it going to support ECC memor	But is it going to support ECC memory?Also with Intel you can upgrade to more performant Xeons. What can you upgrade AMD to?	elcct	9.406675	-5.450112	comment	5.0	34.0	1481665570	8.14305
13174270	I'm not sure if accepting unicode ch	"I'm not sure if accepting unicode characters is a good idea. It would make it more secure but you can very easily get locked out of your own account if you try to login from another device without the correct input method.Here's one extreme example of it:
""I included emoji in my password and now I can't log in to my Account on Yosemite""(https://news.ycombinator.com/item?id=10742351)"	peterjlee	9.9245405	-6.2363744	comment	5.0	20.0	1481696980	-13.95031
13179742	Source: Twitter cut out of Trump tec	Source: Twitter cut out of Trump tech meeting over failed emoji deal	ZoeZoeBee	9.796425	-6.2673745	story	5.0	29.0	1481750238	-13.970134
13202285	"""As new instructions are made public"	"""As new instructions are made public""? WTF does that mean? We're not even allowed to know the full instruction set of an X86 CPU?"	dreamcompiler	9.734177	-5.5928836	comment	5.0	34.0	1482005759	-7.513943
13205527	In VMS, revision control was built i	In VMS, revision control was built into the file system.  It was easy to retrieve older versions of files.  Unix didn't have anything like that until rcs was invented, and even then it was a tool, not something built in like what VMS had.	snarfy	8.901048	-6.3200493	comment	5.0	19.0	1482063374	-11.732652
13211973	Torvalds is an abusive leader and I 	Torvalds is an abusive leader and I don't understand why people keep workin on Linux under him. Are kernel devs paid? Is it worth being abused in front of the entire world because your boss has the emotional maturity of a child?	arkitaip	9.403591	-5.8351703	comment	5.0	37.0	1482161448	-8.182127
13213352	I understand that designing processo	I understand that designing processors is fun, but I hold several things against RISC-V:- the assembler dst, src backward syntax (like intel);- the fact that this processor design is being aggressively pushed here (featured several times already);- the fact that the instruction set is non-orthogonal (32-bit fixed encoding makes the decoder simple, but creates the same load-store problem as on SPARC - hello non-existent, synthetic instructions!);- the fact that they could have extended the open source UltraSPARC T-series design, but decided to just re-invent the wheel all over again. How does 128-bit support justify starting from scratch, and not re-using what is already there and open sourced?The last point is their biggest sin, in my view. There is already an open source processor design,	Annatar	9.434831	-5.6470175	comment	5.0	38.0	1482170040	-10.486073
13297609	The other thought I had here, is tha	The other thought I had here, is that AFAICT IR is not a standard. There is no requirement that it remains compatible in 50 years or 5 months. There is no standard IR, and shouldn't be, as that would become an impediment to compiler evolution and fit/optimization to newer architectures.Doesn't AS/400 use an IR approach as well? Which let IBM seamlessly migrate the underlying CPU a few(?) times now?	andreiw	9.697521	-5.251408	comment	5.0	18.0	1483307913	-8.055004
13424265	I felt like the CD = continuous deli	I felt like the CD = continuous delivery was obvious. But perhaps I've spent to much time on Dev Ops. Maybe simply saying CI/CD would be sufficient.	nhumrich	9.189627	-6.3958673	comment	5.0	16.0	1484717618	6.203571
13454470	Rowhammer-test – Test DRAM for bit f	Rowhammer-test – Test DRAM for bit flips caused by the rowhammer problem (2015)	based2	9.662341	-5.60675	story	5.0	44.0	1485078659	-13.891649
13519097	> There is no way FPGAs will become 	> There is no way FPGAs will become popular among software developers unless the tooling improves dramatically.Care to expound in what way? I don't disagree with your opinion completely, but I suspect our reasons differ.IMHO, the barrier isn't so much the tools, but a clashing of paradigms. All too often, traditional software developers without a solid foundational background in digital hardware architectures think they can easily pick up a HDL as if it were yet another programming language. The HD part is quickly forgotten as behavioral processes are hacked away using all too familiar constructs like if-then-else, for/while loops, etc. Inference warnings are ignored, timing constraints are shrugged off, metastability and synchronization aren't even a thing, let alone driver/receiver selec	metaphor	9.103972	-5.470123	comment	5.0	23.0	1485757624	8.572269
27511312	Bye Bye Travis CI	Bye Bye Travis CI	thunderbong	8.863568	-6.41216	story	5.0	57.0	1623731473	-5.225394
27540463	> Identifiers can now contain non-as	> Identifiers can now contain non-ascii characters. All valid identifier characters in Unicode as defined in UAX #31 can now be used. That includes characters from many different scripts and languages, but does not include emoji.Don't despair fellow emoji devs, our time will come soon enough.	BelenusMordred	9.895527	-6.256477	comment	5.0	52.0	1623942854	-13.964687
27559931	Should we have a debate as to whethe	Should we have a debate as to whether or not Spectre mitigations matter for some (or all) desktop computers?  I know that, theoretically, I could install a piece of software on my Linux box that is malware and could try to read my memory via those methods, but let's be honest - we're all mostly concerned with servers that run code for dozens or hundreds of different clients.I'm a foil hat as much as the next - security is of the utmost concern to me, but for once I actually just don't care and would take the performance back on my local dev machine.	FunnyLookinHat	9.689211	-5.5789948	comment	5.0	63.0	1624106159	7.8160453
27572530	I definitely agree with this. It's j	I definitely agree with this. It's just a pain to type out.Maybe I'm behind on this, but needing to use the mouse to find symbols in a huge menu is very painful.You can copy and paste too but again, huge break of flow.Do some editors support discord-style emoji syntax, where typing :fo would bring up a menu of emojis that might match foo. Then hitting enter inserts the emoji over the :foo: representation. You can also not use the auto complete menu.Ex. :pow2: might turn into ²	spicybright	9.834006	-6.250393	comment	5.0	34.0	1624212996	-13.948259
27584280	Disappointed I didn't see fairly rea	Disappointed I didn't see fairly reasonable explanations around processor security bugs which impact broad system performance such as Spectre and Meltdown.This has a significant impact on Linux and Microsoft has even outlined that these fixes impact their performance (there have been many more security bugs identified since): https://www.microsoft.com/security/blog/2018/01/09/understan...	sharms	9.698367	-5.4209642	comment	5.0	58.0	1624308649	7.7826037
27585531	What I find most disappointing is th	What I find most disappointing is that even processors manufactured TODAY contain these flaws and have performance hits put into the firmware.This issue is so fundamental to how CPU caches work, that there really is not a true performance-neutral fix.	koheripbal	9.572718	-5.197278	comment	5.0	35.0	1624315547	7.7769475
27589298	Silice: A language for hardcoding Al	Silice: A language for hardcoding Algorithms into FPGA hardware	mleonhard	9.141889	-5.3654194	story	5.0	98.0	1624350525	8.416359
27591218	Intel to Adopt SiFive's New High-Per	Intel to Adopt SiFive's New High-Performance P550 RISC-V Cores with 7nm Platform	ItsTotallyOn	9.377938	-5.645817	story	5.0	91.0	1624367919	-10.584282
27640772	I would say Atom is Intels best bet 	I would say Atom is Intels best bet at a ARM competitor, not at the same power but as a slightly beefier alternative.From what I read they are canceling that line and instead offering low power regular desktop processors.That's why I bought 4x 8-core Atom servers at 25W, so I don't get GPUs in my low electricity servers / high performance alternative to Raspberry 4.RISC-V is probably going to take a decade to reach the kind of stability the latest Atom line has in terms of support and performance, if ever; specially on the server-side.The Xeon line CPUs consume way too much power to be an alternative for home hosting with lead-acid backup.	bullen	9.436575	-5.5099	comment	5.0	28.0	1624703818	-10.540716
27674740	Linus Torvalds is in a race against 	Linus Torvalds is in a race against time to save his legacy	jensgk	9.293502	-5.883408	story	5.0	16.0	1624968789	-8.100696
27687959	Benchmarks and price/performance are	Benchmarks and price/performance are going to start getting confusing now that cloud providers are selling a mix of vCPUs where some are real cores, and some are hyperthreads.  Amazon's Graviton instances are full cores.  I expected that since ARM doesn't have hyperthreads.  But now Google is selling EPYC full cores as vCPUs with Tau.  I would guess that forces the other providers to follow suit.	tyingq	9.574013	-5.303724	comment	5.0	18.0	1625058169	-8.490953
27729253	Cosmic-ray bit flipping is real and 	Cosmic-ray bit flipping is real and it has real security concerns. This also makes Intel's efforts at market segmentation by not having ECC support in any consumer CPUs [1] even more unforgivable and dangerous.Example: bitsquatting on domains [2].[1]: https://arstechnica.com/gadgets/2021/01/linus-torvalds-blame...[2]: https://nakedsecurity.sophos.com/2011/08/10/bh-2011-bit-squa...	cletus	9.628229	-5.556535	comment	5.0	24.0	1625402901	8.165181
27729350	>The Ena.Computer is designed using 	>The Ena.Computer is designed using 550 double triode 6N3P electron-tubes, all configured as identical 5 input NOR gates. Registers and counters are built from these single NOR gates and combined into master/slave D type flip flops, an 8 bit ALU, and all latches and buffers.In my computer science program, we had an old school prof who insisted we build a virtual CPU using only fundamental components. No VHDL for us! We wanted a JK flip flop? Here are the logic gates. Wire them up baby. The only thing that came for free were the logic gates, a clock, and probes. Some students complained about it; and I get it, it was a very old-school way of doing things. But I can say that I intimately understood my 5-staged pipeline CPU, because I designed it from the ground up, and spent hours wiring eve	jonnycomputer	9.357117	-5.3078327	comment	5.0	16.0	1625404075	8.119094
27738991	Very cool to see a team of 25 studen	Very cool to see a team of 25 students put this together and get prototypes made. I wish opportunities like these were available back in my college days.The headline is getting slightly ahead of the actual performance. Reaching Cortex-A76 performance is their goal after many more iterations. Their current implementation is not there yet, but that shouldn't detract from the magnitude of their achievement and their contribution to the open-source world:> This culminated with an 8-core prototype built based on Yanqihu (雁栖湖) architecture using TSMC’s 28nm process with the processor running up to 1.2 or 1.3 GHz that should be taped out this month. But plans have been made to tape out a new prototype based on Nanhu (南湖) by the end of the year, using SMIC’s 14nm process allowing up to 2 GHz frequ	PragmaticPulp	9.426686	-5.49719	comment	5.0	34.0	1625499215	-10.48559
27808747	You don't need emojis for that. Just	"You don't need emojis for that. Just good ol' emoticons.I recognize what you mean about the office memos due to trivial misunderstandings (particularly tone misunderstandings) escalating. In my experience, almost all of them are the cases of someone erring on the side of seriousness. Myself, I mitigate that up front by judicious use of two emoticons: "":)"" and "";)"". The very act of using either of them, independent of the choice and context, already marks the whole sentence/paragraph/conversation as friendly.Adding trees and rocketships and popcorns? Especially to either replace the exact word, or put it next to that word? What's the point?(Ok, I'll admit I found two other emojis useful at work: thumbs-up and facepalm.)"	TeMPOraL	9.791218	-6.2635565	comment	5.0	50.0	1626084144	-13.964726
27809047	A rocketship emoji implies a launch,	"A rocketship emoji implies a launch, motion, starting something.Writing ""rocketship"" instead, besides being lame, also doesn't convey the same meaning and emotion."	oblio	9.793446	-6.2682924	comment	5.0	39.0	1626087582	-13.95837
27842825	Undocumented x86 instructions to con	Undocumented x86 instructions to control the CPU at the microarchitecture level [pdf]	todsacerdoti	9.709401	-5.591357	story	5.0	103.0	1626340903	-7.5138106
27846656	What is possible on these kind of pr	What is possible on these kind of processors at the minute?	nullandvoid	9.512877	-5.209914	comment	5.0	45.0	1626366952	7.8869996
27850936	Intel Is in Talks to Buy GlobalFound	Intel Is in Talks to Buy GlobalFoundries for About $30B	my123	9.2419195	-5.1850967	story	5.0	18.0	1626388669	7.7160234
12044205	The merits of an emoji referral code	The merits of an emoji referral code	dontmitch	9.795247	-6.268088	story	5.0	7.0	1467823040	12.821274
12063622	Actually, large data centers are usi	Actually, large data centers are using FPGAs at the network edges. The FGPA does data compression and/or encryption. This optimizes network bandwidth and does not tie up the CPU. I expect to see distributed network routing code so the communication can be peer to peer with no routers. I expect to see firewalls specific to a node (e.g. only web traffic from the traffic splitter). I expect to security code (e.g. no exfiltration from the confidential store-only machine).All of this without involving the CPU... ASIC is too expensive but FPGAs are great. Intel bought Altera (about 45% of the FPGA market) which annoys me / excites me because I use Altera. I expect the next Gen CPUs to have an embedded FPGA so you can make your own instructions.	daly	9.077265	-5.3317485	comment	5.0	19.0	1468103005	8.271541
12100027	Start-up idea: Customizing RISC-V AS	Start-up idea: Customizing RISC-V ASIP design specifically for machine learning would be great.	e19293001	9.378836	-5.673384	comment	5.0	25.0	1468579470	-10.55898
12187694	Why would we want specialized proces	Why would we want specialized processors when a modern CPU core is filled with dozens of CPU cores? And no, I'm not trying to be snarky, but Channel IO sounds like something from the days when CPU was rare and expensive but doesn't make sense in an architecture where lots of cores exist and IOPS and network are generally a bigger issue. What am I missing?	pixl97	9.486507	-5.216111	comment	5.0	21.0	1469807900	7.8825154
12193982	I love all the FPGA boards coming ou	I love all the FPGA boards coming out but I really wish the software was better.  Lattice uses the same synthesizer as Xilinx which is well known to be completely user hostile (will silently optimize huge swaths of code because it doesn't like them).  The least headaches come from Altera but that's not a high bar...	zombees	9.09989	-5.3714395	comment	5.0	19.0	1469901943	8.465814
12209354	So they're using the same character 	"So they're using the same character space, and just changing the graphic to a squirtgun?That'll go over well.""Hey, after school we should sneak up and [squirtgun] John, Mary and Pete!"" sent on an iOS devices will turn into ""Hey, after school we should sneak up and [handgun] John, Mary and Pete!"" on other devices.One of these statements implies a prank.  The other implies murder.Maybe Apple should work with the Unicode Consortium to declare additional emoji, such as a squirtgun, so that they can drop the handgun emoji from their keyboard and replace it with the squirtgun.As it stands now, they're just swapping the graphic of a lethal weapon with a children's toy and crossing their fingers that no horrific misunderstandings occur..."	RIMR	9.835347	-6.255602	comment	5.0	21.0	1470140450	-13.961252
12268473	Sure they are.I mean, sure, you and 	Sure they are.I mean, sure, you and I know the difference between an 8-bit micro with some friendly libraries and a 64-bit ARM SOC running a full OS. But for a lot of stuff they accomplish the exact same thing. So why not compare them by what most people do with them rather than their raw technical specs.	azdle	9.645376	-5.2051487	comment	5.0	28.0	1470925659	-7.704343
12287070	Emojify your Wi-Fi	Emojify your Wi-Fi	jgmcelwain	9.8028555	-6.2721205	story	5.0	18.0	1471204859	-13.9522295
12304196	"I agree with the ""less core but fast"	"I agree with the ""less core but faster processors are what is most useful on desktops"".But I ask, has anyone one or any language made the number of processors/hyperthreads transparent? Ideally I would just create a thread and some load balancing system would distribute it to the correct processor. Am I just behind the times?"	BatFastard	9.583223	-5.335259	comment	5.0	16.0	1471437874	8.018348
12304513	> You introduce a whole new set of f	> You introduce a whole new set of failure modes due to going over the network.A thousand times yes.  Distributed systems are hard.> Debugging is more difficult since you now can no longer step through your program in a debugger but rather have an opaque network request that you can't step into.Yes.  Folks underestimate how difficult this can be.In theory it should be possible to have tooling to fix this, but I've not seen it in practice.> You can no longer use editor/IDE features like go to definition.Not a problem with a good editor.> Version control becomes harder if the different services are in different repositories.No organisation should have more than one regular-use repo (special-use repos, of course, are special).  Multiple repos are a smell.	wtbob	9.787763	-6.390813	comment	5.0	19.0	1471440721	-11.855284
12334387	Your proposal for immediate panic is	Your proposal for immediate panic is an unnecessary overreaction.> it sounds like we don't get faster or cheaper CPUsThe progress in desktop CPUs has been a near-plateau for several years now.> bigger CPU cachesDiminishing returns have been hit several years ago.> more CPU coresDito for most use cases.> more RAMDito for most use cases.> better or cheaper GPUsGPUs have become so fast and cheap that integrated GPUs are good enough for most use cases.> better/cheaper LED lights or OLED screensI don't think they are related to the semiconductor nodes of digital logic?> So the whole show just stops, like a high-speed train hitting a wall.No, the train has already started slowing down several kilometers away, and most people on it have realized it. There will be no wall-hitting.> Steel is now a 	adwn	9.645723	-5.57089	comment	5.0	27.0	1471845742	7.7934575
12353489	Since P6, Intel's CPUs have used a R	Since P6, Intel's CPUs have used a RISC like core with a very heavy decoder that translates x86 CISC instructions to run on the internal ISA.  With that in mind, do older or lesser used instructions actually perform poorly or are they just the wrong choice but actually preferred for other scenarios?	cptskippy	9.542396	-5.6674833	comment	5.0	23.0	1472058381	-10.474686
12364400	Great article! I'm saddened by DO's 	Great article! I'm saddened by DO's response and further wronging a white hat by banning you.Let's remember Linode offers 2x the RAM.	diegorbaquero	9.4387665	-5.6909933	comment	5.0	23.0	1472189376	4.7065473
12410274	"The rowhammer ""attack"" is successful"	"The rowhammer ""attack"" is successful only because the hardware is just plain broken, and I consider it in the same category as things like a CPU which will calculate 1+1=3 if the computation of 1+1 is done enough times --- nothing software should even try to fix, because the problem is at a lower level. The solution is to demand that the hardware manufacturers make memory which actually works like memory should; and it should be possible, since apparently previous generations of RAM don't have this problem at all. In the early 90s Intel recalled and replaced, free of charge, CPUs which didn't divide correctly. Perhaps the memory manufacturers today should do the same for rowhammer-affected modules and chips.Memory errors are particularly disturbing because they are often highly dependent o"	userbinator	9.631298	-5.656624	comment	5.0	49.0	1472781343	-13.928618
12469790	One-bit Computing at 60 Hertz	One-bit Computing at 60 Hertz	6502nerdface	9.7833805	-5.552557	story	5.0	107.0	1473523595	-4.1881294
28591247	"""Approving a pull request without ev"	"""Approving a pull request without even testing the code it’s very dangerous""Well; code review is not QA. My approval means - I'm OK with how the code layer is knitted. It doesn't mean I've tested the changes.Of course, if there's some logical problem with the implementation (such as the author seemingly failing to handle an edge case), any careful reviewer should catch this out.Still, this is a situation where the overlook could be detected through theoretical code analysis, so to speak: which is what a review is. That's not testing.""some 2~3 line changes may not need to be tested, but those are the exception, not the rule.""Generally speaking everything needs to be tested (not necessarily manually), but that's beyond the point. Testing is not reviewing, and vice versa."	V-2	8.748736	-6.2446036	comment	5.0	26.0	1632124173	2.306186
28603187	The RISC-V hype is crazy, but I feel	"The RISC-V hype is crazy, but I feel like it must be a product of marketing.  Or I'm missing something big.  I've read the (unprivileged) instruction set spec and while it's a nice tidy ISA, it also feels like pretty much a textbook RISC with nothing to set it apart, no features to make it interesting in 2021.  And it's not the first open ISA out there.  Why is there so much hype surrounding it?If anything, I got the vibe that they were more concerned about cost of implementation and ""scaling it down"" than about a future-looking, high-performance ISA.  And I'd prefer an ISA designed for 2040s high end PCs rather than one for 2000s microcontrollers.."	foxfluff	9.432645	-5.654625	comment	5.0	20.0	1632214510	-10.519752
28604560	I haven't looked at this closely, bu	I haven't looked at this closely, but 6502 really doesn't lend itself to C compilation. Three registers, only one of which works with the ALU, awkward immovable stack, etc.The 65816 is a better target (moveable direct page and stack and some wider registers), but also awkward with its register mode switching.	cmrdporcupine	9.710296	-5.601475	comment	5.0	26.0	1632228717	-7.452865
22312507	The problem is DRAM price hasn't dro	The problem is DRAM price hasn't drop one bit.The lowest price floor per GB has been similar for the past decade. Roughly at $2.8/GB in 2012, 2016, and 2019. And all DRAM manufacturers has been enjoying a very profitable period.And yet our Data size continue to grow. We can fit more Data inside memory not because DRAM capacity has increase, but we are simply increasing memory channels.	ksec	9.705615	-5.2533183	comment	5.0	26.0	1581539547	8.0602255
22316545	I've played with the AMD Daytona Rom	I've played with the AMD Daytona Rome Server (two EPYC sockets, 2*64 = 128 cores, 256 threads), with RHEL, and it rocks.  However it's quite hard to find workloads that keep all 256 threads busy at once.  Most builds aren't nearly parallel enough, most programs can't find work for 256 threads.  So as a personal machine 128 or 256 threads aren't really worth it unless money is no object.  Likely the best current use for these is as servers for running large numbers of virtual machines or containers.	rwmj	9.43609	-5.243221	comment	5.0	27.0	1581588015	7.984864
22385095	I ran into this issue on one of my b	"I ran into this issue on one of my builds.  Aida64 has a benchmark (floating point photo or something?) that uses AVX instructions.  Pressing the ""run benchmark"" button would instantly black-screen crash my machine with 100% certainty.I debugged this problem over a number of years...  I replaced the RAM, I replaced the motherboard, I eventually replaced the CPU... still happened no matter what I did.  Even if I underclocked the machine and kept the voltages the same, instant crash.  It was maddening.Exasperated, I eventually busted out an oscilloscope and looked at the waveform on the 12V supply to the CPU.  When starting the AVX benchmark, there was a huge brownout.  That basically explained everything; my power supply essentially turned off when the CPU started drawing a ton of power.  I"	jrockway	9.427961	-5.331474	comment	5.0	44.0	1582307379	7.993672
22406705	It's interesting that the actual quo	It's interesting that the actual quote from the investor call is that it's a processor designed in house, and doesn't call out ARM.IMO, an x86_64 chip makes way more sense.  The patents are about to expire.  Removing nearly all of the legacy mode only cruft (which is not as much as you might think, but tends to be in the critical data path) and making a chip that runs at least x86_64 user mode code would align with how they removed 32 bit support in Catalina.	monocasa	9.677509	-5.233495	comment	5.0	21.0	1582568502	-7.7053795
22443206	I can tell you why I just choose a d	I can tell you why I just choose a dual Xeon workstation over a thread ripper, despite it being considerably more expensive for lower performance: memory.  The threadripper motherboards apparently max out at 256 GB of ram.  I put 1 TB on the Xeon machine and could have gone higher if I needed it.It is really too bad, but 64 cores with a max of 256 GB is super unbalanced.	name6454	9.404642	-5.185694	comment	5.0	22.0	1582902239	7.8321757
22464897	"There's a lot of ""what"" in the artic"	"There's a lot of ""what"" in the article, not so much ""why"" or ""history"".Every decade or so, someone tries an open, current technology and specs CPU.  Plenty of free FOSS or FOSS-like z80 or 6502 cores out there, not so many cutting edge designs.  The key differentiator with RISC-V is its pretty near cutting edge compared to every other free core out there.There are tons of cores out there for FPGAs but usually they are not cutting edge powerful (although close...) and they always have interesting and expensive licensing for non-trivial use.  RISC-V should, once community support and toolchains catch up, eat every licensing dollar currently being spent on Xylinx Microblaze or Intel/Altera NIOS-II.  So there's money laying around interested in RISC-V.  Or a more negative way of looking at it "	VLM	9.381566	-5.596421	comment	5.0	15.0	1583161013	-10.56064
22512362	> Intel processors are supported for	> Intel processors are supported for production workloads. Support for AMD and Arm processors is in developer preview.Firecracker looks very promising from a server-side technology stand-point but the support for AMD, RISC-V platforms couldn't be stressed more enough.Amazon better find a way of supporting AMD processors since Intel's CPU bugs are being brought into the sunlight and exploited in all directions by security researchers which have cataclysmic implications for users and server providers these days. This is demonstrated by a ridiculous Intel vulnerability which rendered Apple's FileVault encryption facilities completely useless which is absolutely unacceptable to Apple. There are many other CPU vulnerabilities waiting to be found and it could be the next Meltdown-like candidate.	rvz	9.48282	-5.189782	comment	5.0	20.0	1583598327	-10.609748
22516093	This is legal/PR mumbo jumbo. Nowher	"This is legal/PR mumbo jumbo. Nowhere in that statement does AMD say they have patched this. instead, the make vague reference to previously-patched vulnerabilities that are NOT the vuln in question.Also, they say they 'believe' it isn't new, and that word is used for a reason - it isn't legally binding. It is a lot different than saying ""It isn't new.""Finally, the advice they give is akin to giving general advice for a Ford vehicle: ""Change the oil every 3500 miles.""Generalized statements that mean nothing.This looks to be an intentionally obfuscated response."	ItsTotallyOn	9.320758	-5.2236032	comment	5.0	23.0	1583637132	7.8831162
22520731	> Gluing something like HBM2 to the 	> Gluing something like HBM2 to the die for a secondThis is something AMD is already doing for EPYC, and they've already used HBM2 in their GPUs.So I'm surprised they haven't released any CPU models with crazy huge L4 caches using a few GB of HBM2.Then again, Intel made a laptop CPU with a huge 128MB cache and their comment was that it didn't make that big of a difference. I believe the performance boost was less than 5% for going from 64MB to 128MB.	jiggawatts	9.475881	-5.26394	comment	5.0	28.0	1583702802	7.953578
22537696	I wish the updates for Spectre/Meltd	I wish the updates for Spectre/Meltdown were optional on my Windows machine.  They posed no real risk to my single-user gaming machine and the fixes had an unacceptable performance burden IMHO.	metalliqaz	9.630749	-5.5434504	comment	5.0	19.0	1583862618	7.760595
22544840	I suspect emojis as characters will 	I suspect emojis as characters will soon be replaced with graphics. Consumers are annoyed or confused when emojis look slightly different on different platforms.	goto11	9.818946	-6.2628217	comment	5.0	28.0	1583925873	-13.959532
22615967	240W, 96 quite beefy ARM cores, I'm 	240W, 96 quite beefy ARM cores, I'm not sure about SMT. All that in 1U. The density is becoming mad.	navaati	9.475988	-5.191873	comment	5.0	25.0	1584535598	7.896776
22649188	Hi HN, project author here. The sour	"Hi HN, project author here. The source code and design files are on GitHub: https://github.com/74hc595/AmethystDocumentation is lacking, sadly. My intent was to create a series of in-depth videos describing how various aspects of the system work in detail, but I'm somewhat behind on that.For folks that say ""using an ATMEGA is cheating"":... I agree! That was a guiding principle behind my 6809 computer project (Ultim809)--use only period hardware and no programmable chips (apart from EPROM). Amethyst originated a bit differently. Initially it started out as a neat hack to get 8-bit color video from a non-overclocked AVR without expensive external chips. And then I discovered the mechanical keyboard community and was able to source keyswitches and keycaps, and, well, in for a penny, in for a "	msarnoff	9.393181	-5.3497853	comment	5.0	17.0	1584818837	7.9314466
22689275	I think you can thank this sort of h	"I think you can thank this sort of hack for the widespread availability of cheap cloned ""ST-Link"" debuggers. They use STM32F103 or F102 chips inside, with firmware that was probably lifted from the debuggers on ST's evaluation boards.As recently as a few years ago, it was unusual to see standalone debugging hardware in the $2-20 range. Sometimes I wonder if ST bristled at the...reuse...of their IP, but it probably did more to promote STM32s as a learning platform than anything that ST did in that time period."	leggomylibro	9.801565	-5.233958	comment	5.0	16.0	1585177520	7.330812
22825974	"Even more interesting> ""Red Hat's CE"	"Even more interesting> ""Red Hat's CEO for the past 12 years moves to take on the role of IBM president"""	williamstein	9.925386	-5.446923	comment	5.0	24.0	1586458834	-9.461129
22828480	What I (and, probably, a lot of peop	What I (and, probably, a lot of people) would actually like to have is a 486 emulator (with at least 8 MB RAM) with a working ISA bus I could connect old extension cards to. That would be a way more practical (in fact insanely cool) although a ghost of a genuine antique like 640K XT still surely is a fun thing to touch. That could even have commercial applications - I believe there are many 486/ISA-based solutions still running in production in the wild.	qwerty456127	9.555413	-5.3232355	comment	5.0	22.0	1586476339	-7.755872
22830625	Yes, that's the point of this site -	Yes, that's the point of this site - if your workflow is hurt by the perf impact of mitigations and SPECTRE & friends are not a credible attack, for instance because you disable JS by default, then you can just curl and pipe this to your kernel parameters	jcelerier	9.755991	-5.606856	comment	5.0	52.0	1586501749	7.601446
22881661	Been in software for 20 years. Never	Been in software for 20 years. Never heard of Xilinx or their Zynq product. I expect most of Zynq's intended customers will be the same.	smt88	9.152842	-5.324553	comment	5.0	16.0	1586977281	8.360401
22917069	Is there any way that the breaking o	Is there any way that the breaking of the Xlinix bitstream encryption opens the door to documenting and reverse engineering that bitstream in the same way that was done with Project IceStorm[0] for the Lattice iCE40 FPGAs?[0] Project IceStorm - http://www.clifford.at/icestorm/	voxadam	9.108492	-5.3586326	comment	5.0	23.0	1587315070	8.44994
22923201	I wonder why?Cavium ThunderX; Now un	I wonder why?Cavium ThunderX; Now under Marvell, has a newer ThunderX2 and an upcoming X3 [1]. Since they explicitly mentioned ARM64 it seems they are giving up the ARM64 Server business as a whole.I was surprised when they launch C1 / ARM Offering so early in 2013, and would have expected the experiment to end in a few years time, but to discontinue ARM64 after AWS announced they are going All in, seems something. ( Sigh, my limited lexicon. Cant find the right word. )[1] https://www.servethehome.com/marvell-thunderx3-arm-server-cp...	ksec	9.611476	-5.2387443	comment	5.0	21.0	1587385287	-7.738096
22954896	> As a development machine it will b	> As a development machine it will be all but useless as you find things that won't compile or work correctly on the new CPU arch.I'm not a developer so forgive my ignorance, but isn't this what cross-compiling is for? I get that compiling natively can increase performance and find obscure hardware issues, but it's my understanding that, for example, ARM builds of GNU/Linux binaries are just cross-compiled by server farms that are also natively compiling the AMD64 builds.Also, fat binaries and JIT emulation have been a thing forever, especially for Apple who has dealt with these changes twice now (68k -> PPC -> x86-64).I just don't see this being any different than current multi-platform efforts like Debian, NetBSD, etc., except it's a for-profit company with billions of dollars and thousa	morganvachon	9.868875	-5.441448	comment	5.0	16.0	1587641890	-7.9134507
23027130	Indeed, it's often more fun than pla	Indeed, it's often more fun than playing the game itself; but then again, I'm someone who has been taking things apart since I was very young (and not surprisingly, got into trouble a few times for it...) I suspect RE is something that's closer to what those in the other sciences do, i.e. analysis and thinking more about how/why things are the way they are, rather than what they can build; which is why not a lot of developers (who almost always build, except when they have to debug) seem to have any interest/skills of RE much if at all.	userbinator	8.927485	-6.033352	comment	5.0	17.0	1588217250	9.348516
23028109	You don't expect to be able to click	You don't expect to be able to click emoji, and they don't lose their meaning when printed out on paper.	golergka	9.801812	-6.264145	comment	5.0	17.0	1588229332	-13.951487
23078744	> No ECC, though.Is ECC useful for a	> No ECC, though.Is ECC useful for a workstation? I thought it was useful for shared servers (VM hosts) to protect against rowhammer & co, but does is have other uses?	littlestymaar	9.482372	-5.538868	comment	5.0	24.0	1588677242	8.296787
23130196	If Torvalds can do it...	If Torvalds can do it...	xyanb	9.385071	-5.8408017	story	5.0	46.0	1589083498	-8.150742
23185910	I am not sure it's worth reading int	"I am not sure it's worth reading into what there are and aren't emojis of.  There is an emoji of the Tokyo Tower, but not one of the Eiffel Tower.  It isn't because the Tokyo Tower is more important than the Eiffel Tower, it's because the set is based on a random collection of pictures that Japanese cell phone carriers created over the years.  (e = picture, moji = letter, that's where the word came from.  A ""false friend"" with emoticon, interestingly.)When creating this collection, they missed a lot of stuff.  It was never intended to be a complete set of all symbols that a human might need.  Some guy at some phone company just made them.  The attempts to add a handful of new characters with each new Unicode version don't improve much.People seem to be using the eggplant emoji as a standin"	jrockway	9.825724	-6.250134	comment	5.0	22.0	1589492622	-13.93662
23203470	The Linux Kernel FPGA Subsystem	The Linux Kernel FPGA Subsystem	yummypaint	9.252223	-5.3445725	story	5.0	215.0	1589637968	-8.280524
23202488	> Unikernels have demonstrated enorm	"> Unikernels have demonstrated enormous advantages over Linux in many important domainsBy domains, do they mean that as ""actually in use in certain sectors in the industry"" or ""a prototype has shown that""?> causing some to propose that the days of Linux's dominance may be coming to an endWho exactly would make that claim?So, besides performance: what actual, real-life problems does this solve? I think there is some overlap with containers, and at this point, replacing them will require something a lot better."	MrBuddyCasino	9.905631	-6.2319756	comment	5.0	38.0	1589627674	-12.377479
23204134	What kind of data throughout can you	What kind of data throughout can you get with this?I've always wanted to play with something like this but FPGAs worth connecting to a PC are $$$.	mhh__	9.130039	-5.267727	comment	5.0	21.0	1589642648	8.300919
23265767	With the transition of compute from 	With the transition of compute from performance focussed to performance per watt focussed (due to cooling usually being the limiting factor), the niche for the FPGA has almost vanished.There are very very very few compute tasks where an FPGA solves a problem with better performance per watt than both a CPU and a GPU.I would bet that emulating a RISC-V program on x64 is far more power efficient than running a RISC-V core on an FPGA for example.	londons_explore	9.400841	-5.6118493	comment	5.0	29.0	1590097266	-10.517331
23269670	Why does the 80486 take longer to ex	Why does the 80486 take longer to execute simple instructions than complex ones?	segfaultbuserr	9.804202	-5.6475	story	5.0	64.0	1590134210	-7.4993944
23298422	Rose-8 on Mac OS 9	Rose-8 on Mac OS 9	ingve	9.794466	-5.295504	story	5.0	71.0	1590386950	7.6561036
26507664	6502 SpASM (6502 Spreadsheet Assembl	6502 SpASM (6502 Spreadsheet Assembler and Linker)	panic	9.718934	-5.5790424	story	5.0	102.0	1616102311	-7.493573
26518809	Why does a webpage get to know how m	Why does a webpage get to know how many CPU cores I have?	wlesieutre	9.562856	-5.337831	comment	5.0	66.0	1616193236	7.9633713
26519831	The followup tweet indicates that th	The followup tweet indicates that the CPU has to be in an unlocked state before this is possible, which on a typical system requires there to be a Management Engine vulnerability first. Given what we currently know, this is going to be interesting for people interested in researching the behaviour and security of Intel CPUs and might well lead to discovery of security issues in future, but in itself I don't think this is dangerous.Edit to add: https://www.intel.com/content/dam/www/public/us/en/security-... is a discussion of a previous Intel security issue which includes a description (on page 6) of the different unlock levels. This apparently requires that the CPU be in the Red unlock state, which (in the absence of ME vulnerabilities) should only be accessible by Intel.	mjg59	9.485718	-5.264784	comment	5.0	71.0	1616202398	7.7891245
26584856	Linus Torvalds disagrees about line 	Linus Torvalds disagrees about line lengths for what it's worth: https://news.ycombinator.com/item?id=23356607	okareaman	9.352275	-5.8577676	comment	5.0	18.0	1616703447	-4.3739624
26606772	The MIPS R4000, part 9: Stupid branc	The MIPS R4000, part 9: Stupid branch delay slot tricks (2018)	luu	9.877106	-6.0296254	story	5.0	44.0	1616889359	-7.640301
26725626	They have to do two things :-)1) Use	"They have to do two things :-)1) Use ECC memory2) Go underground""One experiment measured the soft error rate at the sea level to be 5,950 failures in time (FIT = failures per billion hours) per DRAM chip. When the same test setup was moved to an underground vault, shielded by over 50 feet (15 m) of rock that effectively eliminated all cosmic rays, zero soft errors were recorded.[6] In this test, all other causes of soft errors are too small to be measured, compared to the error rate caused by cosmic rays.""""Soft Errors""
https://en.wikipedia.org/wiki/Soft_error#Cosmic_rays_creatin..."	belter	9.576572	-5.5112524	comment	5.0	34.0	1617806557	8.187814
26760573	8-bit stack-machine emulated by 200 	8-bit stack-machine emulated by 200 lines of C	tosh	9.629365	-5.279621	story	5.0	91.0	1618052426	-7.193215
26829524	The whole point of docker was to hav	The whole point of docker was to have reproducible builds. What runs on the dev machine also runs on the server. But M1 macs change that in a major way. There might be bugs or available features in ARM versions of popular software, so what works on a dev machine might not work on the server and vice-versa.	me551ah	9.562471	-6.4007196	comment	5.0	26.0	1618547875	10.074498
26859252	If they had picked RISC-V then there	If they had picked RISC-V then there's a strong chance of international support from ecosystems outside of China, such as open source compilers and operating systems.IIRC most of the advantages this architecture claims to have should also be addressed by the RISC-V specification (at least in baseline profile) and they're also free to add vendor specific extensions?Other than not-invented-here, a project already in the pipeline, or possible national security (for China) applications; I fail to see the advantage of yet another standard.	mjevans	9.358073	-5.65475	comment	5.0	24.0	1618808546	-10.5968485
26866340	I have the PiDP-11, assembled it mys	I have the PiDP-11, assembled it myself from the kit.It was exciting for me to be able to run RSTS/E, which is one of the first operating systems I ever worked on. I only wish I had a Decwriter to physically connect to it.And visitors to my office love the blinky lights.	fortran77	9.799674	-5.2792077	comment	5.0	24.0	1618857053	-7.5459146
26912443	It will have a far greater than 1/8t	It will have a far greater than 1/8th performance impact.When data structures are power-of-two sizes, having 7 cores instead of 8 could halve performance, since the work gets split into 4 pieces and 3 cores sit idle.	londons_explore	9.690702	-5.318005	comment	5.0	16.0	1619166811	7.9634557
26945604	"""woman with beard"" emoji? This is ju"	"""woman with beard"" emoji? This is just getting stupid."	Exuma	9.776413	-6.269719	comment	5.0	48.0	1619459550	12.080104
26990615	Show HN: A RISC-V core in Racket	Show HN: A RISC-V core in Racket	_mouvantsillage	9.3933115	-5.685204	story	5.0	122.0	1619766734	-10.574376
26990661	Author here.This post is part of an 	"Author here.This post is part of an ongoing experiment to use Racket as a platform for hardware description languages.
Describing a RISC-V core in Racket is a step in this direction, but the ultimate goal is neither to use Racket itself as an HDL, nor to define an embedded hardware description DSL in Racket.
The long-term goal is to create an HDL that would benefit from Racket's ""language-oriented programming"" facilities, with the ability to simulate digital hardware, but also to generate standard Verilog or VHDL."	_mouvantsillage	9.202491	-5.531724	comment	5.0	25.0	1619767132	13.606927
27000809	There are separate micro op caches p	There are separate micro op caches per core however they are typically shared among hyperthreads. I wonder if this could be another good reason for cloud vendors to move away from 1vCPU = 1 hyperthread to 1vCPU = 1 core for x86 when sharing machines (not that there weren't enough good reasons already).	totallyabstract	9.780008	-5.544078	comment	5.0	30.0	1619824698	8.153739
27002062	Excuse me, but modern CPUs are way m	"Excuse me, but modern CPUs are way more complicated than this, even if you only look at ""arranging events in time"". Like several orders of magnitude more complicated. Anyone who has touched VHDL/Verilog knows how delicate signal propagation is, and how crafty you have to be with the clock.And even if you never tinkered with transistors surely you've at least looked at assembly code, and the amount of painstakingly detailed data layout orchestration that is going on there. A simple printf(""hello world"") is magical if you know what happens under the hood."	H8crilA	9.185595	-5.403713	comment	5.0	17.0	1619833323	8.47018
27011197	VMware Fusion will not support x86 e	VMware Fusion will not support x86 emulation on Apple Silicon	yasserd99	9.845128	-5.236594	story	5.0	39.0	1619914807	-8.071847
27033169	Mill Computing is looking for the ri	Mill Computing is looking for the right VC	mycall	9.529194	-5.313616	story	5.0	33.0	1620092397	7.944454
27047343	Wow, lots of white guys in the comme	Wow, lots of white guys in the comments talking about how unneccesary that is. Really, just think for a moment if all emoji were changed to a dark skin color and you couldn't change it.	planb	9.783837	-6.2563896	comment	5.0	20.0	1620201723	-13.95621
27048893	What about family emojis then, e.g. 	What about family emojis then, e.g. https://emojipedia.org/family-woman-woman-girl-boy/? Blended families are not there. I am the third of three sons, why am I not represented?	pb060	9.816019	-6.2655935	comment	5.0	17.0	1620216689	-13.950025
27066764	> RISC-V however does not work like 	"> RISC-V however does not work like this. The RISC-V vector registers are in a separate register file not shared with the scalar floating point registers.Honestly... in hardware, they probably are actually in the same register file. It just now means you have two sets of architectural registers that rename to the same register file.As for the rest of the article, it looks like it mostly boils down to ""I'm intimidated by assembly programming"" as opposed to any actual critique of the strengths and weaknesses of the vector ISAs. There's superficial complaints about the numbers of instructions, or different ways to write (the same? I only know scalar ARM assembly, not any vector extensions) instructions. On a quick reread, I see a complaint that's entirely due to how ARM represents indexed loa"	jcranmer	9.558645	-5.8362017	comment	5.0	16.0	1620323131	-10.506898
27129747	Love this and love the idea of havin	Love this and love the idea of having a RISC based workstation as my daily driver. Any suggestions on where to buy it ?	hestefisk	9.395129	-5.59384	comment	5.0	19.0	1620824114	-10.550191
27229617	> Disabling [spectre] mitigations gi	> Disabling [spectre] mitigations gives us a performance boost of around 28%Every couple months these last several years there always seems to be some bug where the fix only costs us 3% performance. Since those tiny performance hits add up over time, security is sort of like inflation in the compute economy. What I want to know is how high can we make that 28% go? The author could likely build a custom kernel that turns off stuff like pie, aslr, retpoline, etc. which would likely yield another 10%. Can anyone think of anything else?	jart	9.6902075	-5.560325	comment	5.0	22.0	1621561310	-9.007783
27243148	I perceive the cartoon yellow emojis	"I perceive the cartoon yellow emojis to be white, an alternative interpretation never occurred to me at all.The first time a black coworker gave a black thumbs-up reaction on slack, I noticed I didn't want to +1 it. I didn't identify with it, it didn't feel like it was coming from me. 
This was a strong reaction and totally unexpected, and it was a ""holy shit"" moment as well, because I suddenly imagined how excluded I would have felt if that had been the only option for years."	furyofantares	9.774688	-6.2610307	comment	5.0	17.0	1621654337	-13.960581
27277351	Does Apple's M1 still support AArch3	Does Apple's M1 still support AArch32, it using an ARMv8.4-A instruction set ? I'm assuming no 32-bit code is ever executed on macOS on ARM, how much die space would removing the 32-bit support save ?With WWDC '21 being only weeks away, I wonder if we're going to see an ARMv9 M2.	Aaargh20318	9.656958	-5.3340354	comment	5.0	28.0	1621953479	-7.765895
27289213	Build a RISC-V CPU from scratch	Build a RISC-V CPU from scratch	azhenley	9.405718	-5.680183	story	5.0	151.0	1622029438	-10.5618925
27288738	I learned a lot from that, thank you	I learned a lot from that, thank you.I wonder how much bandwidth I've wasted for people over the years because I've saved poorly optimised versions from Photoshop. Are there automated tools that can be included in a CI pipeline to help with this?	blowski	9.014977	-6.3908315	comment	5.0	23.0	1622025934	6.4364276
27320823	Do you think many Ryzen PCs use ECC?	Do you think many Ryzen PCs use ECC? I doubt that. It's accepted truth among gamers and power users, that ECC is waste of budget. I don't share this position, but if you'd ask on some computer forums, that's what you'll hear. If ECC would be enabled on all Intel CPUs, nothing fundamentally would change, most users would prefer to save 10% on their RAM.	vbezhenar	9.4031315	-5.468594	comment	5.0	17.0	1622237827	8.264372
27343948	Open-source soft-core RISC-V SoC wit	Open-source soft-core RISC-V SoC with gdb support	_quarks_	9.39754	-5.6599207	story	5.0	94.0	1622468467	-10.547624
27434951	This is speculation, and doesn't add	This is speculation, and doesn't add anything to the conversation. Is there a precedent that TLA's conspire with CPU manufacturers to create backdoors like this? Or are you just a conspiracy theorist?	junon	9.555694	-5.217651	comment	5.0	17.0	1623159255	-4.6105237
27449363	Really impressive and a plesently su	Really impressive and a plesently surprising feature from AMD. I imagine the real target market for this is Eypc server CPUs. Eventually they might be able to cut the L3 cache out of the CCD die completely and rely only on external SRAM die as L3. This would give AMD a very flexible portfolio where they can offer different SKUs with different amounts of L3 cache at different price points, all using the exact same CCD die. What will be interesting is to see how much the die stacking impacts thermals.	55873445216111	9.356778	-5.187013	comment	5.0	17.0	1623254042	7.9765716
14764885	Skylake-X without ECC: $999Skylake-S	Skylake-X without ECC: $999Skylake-SP with ECC: $3,000There's your answer.	wmf	9.389597	-5.399527	comment	5.0	17.0	1499977783	8.077177
14803692	I think the justification is economi	I think the justification is economic. They don't remove it because it's not clear that there is a market for not having ME. The reason (I think) they remove ECC support is that people are willing to pay extra for it, so they remove it so you are forced to pay extra. If they removed ME in consumer CPUs, they wouldn't sell any more consumer CPUs and their enterprise management system wouldn't be any more popular.There are also some additional problems. Intel ME is used by Linux quite heavily (rather than talking directly to the embedded controller) which means that certain things can become quite flaky. I have Coreboot on my X220 with me_cleaner, and my machine seems to freeze randomly (it's definitely not the 30-minute timer, I just think it's IO being deadlocked for some reason). While yo	cyphar	9.456128	-5.2699237	comment	5.0	27.0	1500466162	7.8610735
14958995	I never understood how these side-ch	I never understood how these side-channel attacks can possibly succeed. So many other factors can dominate checking a single character in RAM. Seriously? How would that even work!	EGreg	9.809461	-5.5941386	comment	5.0	17.0	1502207024	-5.646734
14973478	Progress relies strongly on unreason	Progress relies strongly on unreasonable people like Linus. Keep in mind that Github mutilated his baby so that's a pretty good reason to be upset.	jacquesm	8.764459	-6.304758	comment	5.0	73.0	1502311990	-11.852575
14973768	What people really don't seem to get	What people really don't seem to get is that Linus' cultural background is Finnish, and that Finns tend to be extremely outspoken and that they couldn't lie or polish their words if their life depended on it.http://www.karelia.fi/welcomingguide/the-finnish-way-of-lifeWhat to American sensibilities are grave insults to Linus is most likely just him speaking his mind without any filter in place, the way he was brought up.	jacquesm	9.268153	-5.9000864	comment	5.0	32.0	1502313747	4.250008
15063748	Curious what your use case is that e	Curious what your use case is that entails ECC? Are you currently being held back without it?	tammer	9.484204	-5.55066	comment	5.0	22.0	1503315199	8.286772
15067092	I know this is a non-issue for many,	I know this is a non-issue for many, but those emojis look really dated. Every update they get harder and harder to read in small form. One of the things I observe, mainly on Instagram Stories is only people with iOS post with emojis attached, I never see Android ones. Too bad there is no way to install custom emojis in any system (without rooting/registry tweaking), like we do with fonts.	jampa	9.814595	-6.2618456	comment	5.0	34.0	1503343808	-13.952071
15101092	> Do not use an asynchronous reset w	> Do not use an asynchronous reset within your design.This is flat out wrong. Registers that drive output pins should always be reset asynchronously. If you're not careful with your board design, it can happen that your FPGA is powered and configured before your clock signal is available, especially if it is generated by a PLL. An asynchronous reset on the output IO registers ensures that you're not inadvertently driving external electronics with bogus signals.For internal registers it usually doesn't matter whether they're reset synchronously or asynchronously. There are some cases where the synthesis software cannot move async. reset registers from flip-flops into built-in hard IP cores like DSP elements or block RAMs, so a sync. reset can make sense here for performance reasons.There's 	adwn	9.163294	-5.454579	comment	5.0	32.0	1503686828	8.470632
15113107	AMD ThreadRipper 1950X can compile t	AMD ThreadRipper 1950X can compile the entire Linux kernel in 36 seconds	ashitlerferad	9.563394	-5.304291	story	5.0	41.0	1503871960	7.944966
15140834	> Why can't the runtime automaticall	> Why can't the runtime automatically leverage multiple cores and speed up the process?Do any runtimes actually do this? (Honest question)	_greim_	9.774706	-5.5349665	comment	5.0	17.0	1504192129	8.251238
15146231	Reverse Engineering X86 Processor Mi	Reverse Engineering X86 Processor Microcode	unmole	9.681937	-5.50636	story	5.0	91.0	1504242123	-7.290711
15189730	Same here - standard gboard. Red dot	Same here - standard gboard. Red dot on the emoticon -> advert for new make your own emoticon functionality app (not Google owned).Extremely disappointed in Android today.	robocat	9.813439	-6.234036	comment	5.0	33.0	1504768913	12.930442
15288371	Nice. That's a big improvement in pr	Nice. That's a big improvement in price over the previous ones.I'm still a little unclear on RISC-V's goals - are they looking at the microcontroller market or are they looking more to offer an alternative for ARM and x86 CPUs?In the microcontroller market there's a lot of competition right now, especially with devices like the ESP32 going for $8 with wifi and bluetooth.	problems	9.397334	-5.61874	comment	5.0	44.0	1505851962	-10.569554
15289218	I've been using something similar fo	I've been using something similar for a while now. I use pam_jail on freebsd to drop the ankle biters using common ssh login attempts like test, ubuntu, oracle etc into a FreeBSD jail where I watch what the do and get a copy of all their tools. I rate limit the outgoing traffic from that jail to something painfully slow to prevent them from causing any major issues. But being able to fire up 'watch' on freebsd and snoop the tty they are on in the jail is awesome for forensics.It's secure, they can't break out of the jail.It's rate limited to prevent them causing much damage to anyone.It's easy to observe every thing they type and do in the jail from the host.	X86BSD	9.754426	-6.3903885	comment	5.0	33.0	1505858633	10.485248
15289369	One of my favorite undergrad electri	One of my favorite undergrad electrical engineering classes [0] took an innovative approach to introducing this. Instead of learning about clocks/pipelines and HDL at the same time, we only looked at the former. We created our own simulators for an ARM subset, fully in C, where there was only a single for/while loop allowed in the entire codebase, representing the clock ticks. Each pipeline stage, such as Instruction Fetch, would read from a globally instantiated struct representing one set of registers, and write to another one. If you wanted to write to the same place you read from, you could only do so once, and you'd better know exactly what you were doing.Because we didn't need to learn a new language/IDE/environment at the same time that we learned a new paradigm, we were able to kee	btown	9.4108515	-5.6742454	comment	5.0	15.0	1505860196	8.569037
15299051	I would be glad if this made Intel r	I would be glad if this made Intel reconsider their stance on enforcing untrustable CPU features onto users.CPUs aren't cheap! Just give your customers full control over the product!	m1el	9.521292	-5.2077365	comment	5.0	77.0	1505947688	7.754483
15324654	Wait. People still use sourceforge? 	Wait. People still use sourceforge? I thought it was a wasteland of old projects that had crapware attached to all their downloads.	codazoda	8.745088	-6.00092	comment	5.0	23.0	1506260569	-11.672005
15405907	Software mitigation is not the right	Software mitigation is not the right way to deal with RAM that can be fooled into flipping bits. All DRAM with this vulnerability should be recalled as defective. We'd certainly demand that Intel fix a vulnerability that let you flip register bits in other processes by doing something you can do from Javascript.There are reasonable defenses possible inside the DRAM. They currently depend on the fact that repeated reads of the same data are rare, because of caches. DRAM should insert a delay after hitting the same row N times between refreshes, depending on its analog parameters. It won't affect performance in any normal application.	tlb	9.696731	-5.5579357	comment	5.0	17.0	1507162631	8.187237
15408363	"""Some workstation users will need EC"	"""Some workstation users will need ECC memory, and up to 512GB of it. When memory has an error rate of 1 error per GB per year, using 512GB ensures almost two bit errors per day: something that a 60-day simulation would find catastrophic."""	jonbaer	9.537291	-5.5215645	comment	5.0	90.0	1507204151	8.21922
15408457	I had the same thought and am wonder	I had the same thought and am wondering about the economic reality of doing this.Does anyone have an idea of the cost increase for using ECC RAM in a mobile device for instance? Are there also power usage concerns to worry about?AFAIK there are basically zero consumer devices using ECC RAM.	cbetz	9.481742	-5.518125	comment	5.0	35.0	1507205427	8.21724
15408931	Thank you! That sentiment on HN abou	"Thank you! That sentiment on HN about how ""Everything should have ECC"" really grinds my gears. There is no need for ECC in your iPhone or on your MacBook. Your average emoji-laden WhatsApp Conversation with your friends does not require Bit Error Correction. People who really need ECC do exactly what you just mentioned: Evaluate, and often enough they will find little to gain from ECC."	dna_polymerase	9.498456	-5.5427136	comment	5.0	37.0	1507209959	8.271284
15409458	"""The problem here is the same proble"	"""The problem here is the same problem we’ve seen with big core parts and Windows 10, however: these large processors can only take so much before having to move threads around, to keep both the frequency high and the energy density low. All it takes is for a minor internal OS blip and the single-thread power begins to dissipate. Windows 10 famously kicks in a few unwanted instruction streams when you are not looking, and as a result the average single thread performance seen on the 8700K might be equal or lower than that of the previous generation. It becomes an infuriating problem to debug as a reviewer.""I didn't know this was a big issue with multicore processors, very interesting. Does this mean that if you OC a single core to the limit to get the best single threaded performance, you w"	LeicaLatte	9.674545	-5.339822	comment	5.0	18.0	1507213789	8.039283
15427938	Intel CPU History	Intel CPU History	nlolks	9.433162	-5.189735	story	5.0	23.0	1507465218	7.7694917
15475272	I never said I didn't have version c	"I never said I didn't have version control.To assume ""at the code level it should be largely self-documenting"" is to be a Rick. Comments are there to help everyone, including non-programmers understand what is going on."	mattbgates	8.853619	-6.3668213	comment	5.0	17.0	1508029552	-11.734544
15610248	I'm always eager to read Linus's ran	I'm always eager to read Linus's rants. I wish more of my coworkers were like him. I hate the environment where nobody reacts strongly to anything! If somebody fucks up hard and refuses to own up, I (or whoever's in charge) should be able to shout at them. It's only natural.	dingo_bat	9.267065	-5.9171596	comment	5.0	25.0	1509629734	4.2744956
15610723	Linus is such a breath of fresh air.	Linus is such a breath of fresh air.  I'll take an honest, emotional, impossible to misconstrue, ass-chewing over the alternatives. Too often there's an avoidance of straightforward, blunt speech that conveys exactly what is meant. I really have better things to do than try to parse nonspecific beating-around-the-bush and deconstruct word-castles.	megaman22	9.282839	-5.891597	comment	5.0	37.0	1509633161	4.2235312
15610806	"""Linus has made it incredibly damn c"	"""Linus has made it incredibly damn clear what ""no user space regressions ever"" mean.""Absolute shame he doesn't even know the basic definition of 'regression' and uses the word incorrectly in every way.Breaking shit is simply breaking shit. It's not a regression unless something was broken first, then fixed, then the SAME ISSUE comes back in a later code change."	lightedman	9.618894	-5.771582	comment	5.0	15.0	1509633773	4.2441187
28706762	Linux Achieves 5.1M IOPS Per-Core wi	Linux Achieves 5.1M IOPS Per-Core with AMD Zen 3 and Intel Optane	ksec	9.436745	-5.266505	story	5.0	124.0	1633012243	8.034681
28735824	OpenBLASOpenBLAS is incompatible wit	OpenBLASOpenBLAS is incompatible with application threads. Most Linux distributions provide a multi-threaded OpenBLAS that burns in a fire if you use it in multi-threaded applications. Even though OpenBLAS' performance is great, I'd be careful to give a general recommendation for people to rely on OpenBLAS. Like this MKL example, you have to be aware of its threading issues, read the documentation and compile it with the right flags (in a multi-threaded application: single-threaded, but with locking).it's worth noting that OpenBLAS is as fast as MKLThis depends highly on the application. E.g. MKL provides batch GEMM, which is used by libraries like PyTorch. So if you use PyTorch for machine learning, performance is still much better with MKL. Of course, that is if you do not have an AMD CP	danieldk	9.294139	-5.348684	comment	5.0	21.0	1633254353	-2.8349252
28745481	That seems like a bold move. I would	That seems like a bold move. I would have expected that 90% wanted a Fusion exclusively to be able to run x86 operating systems.	stefan_	9.71426	-5.3103075	comment	5.0	31.0	1633348032	-7.849938
28767592	This is out of my realm, isn't it at	This is out of my realm, isn't it at least a little relevant to vet a (logical) design with an fpga before doing the full process? Or are those worlds things worlds apart?	temp0826	9.0968895	-5.3410425	comment	5.0	15.0	1633479857	8.3931675
28768851	Intel compares the performance to a 	Intel compares the performance to a Nios II/e (it's 4x faster!), but at 6 cycles/instruction, no multiplier, one bit per clock shifter (IOW: no barrel shifter), the II/e is about the worst little CPU you can imagine.It will be interesting to see how it compares against the VexRiscv, an open source RISC-V CPU that's quite popular in the FPGA world with excellent performance (at ~1 Dhrystone MIPS/MHz it's roughly double that of the Nios V) for a very little resources.An incomprehensible decision is to make the Nios V only support uncompressed 32-bit instructions. This is a CPU that will live inside an FPGA and that will often be paired with a single FPGA block RAM to store instructions and data. By not including 16-bit compressed instructions, they'll add some 30% bloat to the code.A major n	tverbeure	9.398781	-5.2686696	comment	5.0	25.0	1633490963	7.9105725
28771648	MRAM technologies: from space applic	MRAM technologies: from space applications to unified cache memory?	baybal2	9.822264	-5.3784585	story	5.0	36.0	1633518644	-5.3720655
28803701	Tenex, a Paged Time Sharing System f	Tenex, a Paged Time Sharing System for the PDP-10	todsacerdoti	9.88251	-5.468782	story	5.0	29.0	1633724248	-7.782932
28825241	I feel like the 64KB of memory avail	I feel like the 64KB of memory available to processes made it a total non-thought on system designers. Not quite like later architectures where it'd be 2GB, 4GB, or 16EB.	chungy	9.897503	-5.2131968	comment	5.0	15.0	1633932311	7.9592934
28853243	At the Vintage Computer Fest last we	At the Vintage Computer Fest last week Bill Mensch mentioned to the audience that no one ever hears about the 65C02 and 65C816’s use in defibrillators and pacemakers - life critical applications - unless he tells them!Does anyone know of good write ups or explanations of what makes the 6502 so reliable and what competition it had in being chosen for medical applications?	jazzyjackson	9.521544	-5.280673	comment	5.0	45.0	1634138243	-7.442875
28894979	Ask HN: Why do we have only 32 bit a	Ask HN: Why do we have only 32 bit and 64 bit OS?	venkat1017	9.8908825	-5.276195	story	5.0	2.0	1634460990	-7.964838
28898527	If your strategies were implemented 	If your strategies were implemented in FPGA, they were probably not very complicated (considering the things you can do on a regular CPU).Wouldn't markets function better if every participant had a reasonable amount of time to make decisions?	amelius	9.076714	-5.3243	comment	5.0	17.0	1634494941	8.382038
28956940	The language of the reviews is quizz	"The language of the reviews is quizzical. I caught myself thinking how high-brow language once was. Then, it dawned on me the sense of intentionality and craftsmanship displayed by each sentence.U up? Who dis? :emoji :emoji :emojiI'm not sure if I'm nostalgic, sad or just a little bit of, ""get off my lawn.""_"	relaunched	9.764762	-6.2422905	comment	5.0	18.0	1634909318	-13.944227
28960498	Every CPU project I worked on at Int	Every CPU project I worked on at Intel from 1997-2010 was cancelled. That's 13 years of one senior engineering salary that never turned a profit, let alone the thousand other people on the related teams. One could argue the failed learnings helped guardrail successful products, but my internal perspective says, Nah. Intel throws/threw a staggering amount of money at failed projects. Wondering if Gelsinger will shake out the numerous boondoggles that litter that company.	SavantIdiot	9.269273	-5.2029686	comment	5.0	18.0	1634926039	7.646942
29017173	How good is Rosetta 2 in practice?	How good is Rosetta 2 in practice?	WalterGR	9.7985935	-5.357358	comment	5.0	16.0	1635359480	7.689667
29030262	I've always been a bit wary of highe	I've always been a bit wary of higher-level languages to replace lower-level RTL (e.g. in Verilog or VHDL). From my experience whilst SystemVerilog isn't a nice language it doesn't really get in the way of the actual hard problems, just causes a nuisance for easier things.In processor micro-architecture the hard problems come when you're trying to hit a frequency, power or area target. You may need to do some interesting things that can be quite circuit specific and have complex tradeoffs (e.g. perhaps you choose to handle some corner case that produces a large timing path with some kind of stall or replay when it occurs, is the corner case sufficiently infrequent that overall you get a performance increase?). Having some high level way to sweep through the design space here would be incre	gchadwick	9.122806	-5.4812846	comment	5.0	20.0	1635448264	8.500353
29073133	My old roommate works there on a dat	"My old roommate works there on a database/storage team. They are pretty insulated. He doesn't directly interface with the product-side. Sure perhaps on some level he could look at his role and say he's enabling mass collection of user data. But at the end of the day he has no interaction with the actual filesystem contents or what they mean. They're just bits flying around.So, should the graphic designers of the emoji buttons feel responsible for misinformation? The CDN/network folks keeping the websites available? The janitorial and cafeteria staff for cleaning up and feeding the ""monsters of humanity"" ?"	treesknees	9.796959	-6.264953	comment	5.0	18.0	1635800944	-13.95983
29105348	Designing a MIPS CPU in Hardcaml	Designing a MIPS CPU in Hardcaml	tosh	9.532564	-5.6140423	story	5.0	63.0	1636021560	-10.434878
29114511	I’m not sure how to interpret this, 	I’m not sure how to interpret this, even after reading the article. Is any reason given for why the last 4 Performance cores get only a limited amount of work?	Aeolun	9.560833	-5.3041945	comment	5.0	21.0	1636075932	7.9768195
29127574	Title is misleading, Intel is offeri	Title is misleading, Intel is offering a fix that allows the user to disable E-cores on the fly by using their scroll-lock key. They're only offering a reference implementation though, it's up to the motherboard vendors to ship a BIOS update with this workaround.	armada651	9.512972	-5.3116646	comment	5.0	21.0	1636173519	8.002712
29148982	So where's the line drawn between in	So where's the line drawn between instruction decoding, and microcoding? It sounds like microcoding is when a single instruction in the program resolves to a _sequence_ of operations that the processor executes?	myself248	9.706813	-5.619704	comment	5.0	15.0	1636377866	-7.487986
29158110	> Due to the core software limitatio	"> Due to the core software limitation (no source code available) we were compelled to integrate some 
original PDP-11 computer cards into the final product and this resulted in a hybrid PC platform.Amazing. I've never been anywhere that lost their source code. Would love to know how it happens."	abraae	9.78759	-5.294024	comment	5.0	28.0	1636436183	-7.492434
29163114	It would be nice if the title would 	It would be nice if the title would capitalize ARM.I was wondering if this is about ARM, the Army or even a human limb :)	eloeffler	9.539878	-5.2258844	comment	5.0	17.0	1636472273	-7.6374564
29189186	"I was coming here to say: ""Windows h"	"I was coming here to say: ""Windows has an insignificant (actually 0% for a few years) market in top500. It is not a good benchmark for a processor with such a big number of cores."". Then was surprised to see that it was run in CentOS.It is a shame that many sites didn't behaved like this when Threadripper was launched and basically said that the architecture was inefficient at using so many cores or the software simply was not ready yet. Phoronix was one of the few which did it right."	marcodiego	9.646502	-5.318129	comment	5.0	24.0	1636645649	7.89474
29229311	DDR4 memory protections are broken w	DDR4 memory protections are broken wide open by new Rowhammer technique	samizdis	9.624615	-5.645622	story	5.0	59.0	1636994352	-13.884677
29229585	The problem is right now DDR4 device	"The problem is right now DDR4 devices that work correctly in that regard, do not exist. Likely the best mitigation for any sensitive application, even so lightly, is DDR4 with ECC (even if it may not be enough, it is vastly better than nothing, and not just because of rowhammer)And I have no idea if the internal ""ECC"" of standard DDR5 helps or not. It is not intended for regular ECC level of reliability anyway. (And I have seen discussion about likely bitflips detected in crash dumps of M1 Pro devices)So, as much as I would like to return defective devices, I would probably be left with no computer, no smartphone, etc."	temac	9.590129	-5.582647	comment	5.0	43.0	1636995717	-13.838973
29231830	OK, for starters, ECC has to become 	OK, for starters, ECC has to become standard.Then the rate of ECC errors has to be monitored. If something is trying a rowhammer attack, it's going to cause unwanted bit flips which the ECC will correct. Normally, the ECC error rate is very low. Under attack, it should go up. So an attack should be noticeable.  You might get some false alarms, but that just means it's time to replace memory.	Animats	9.538704	-5.5884905	comment	5.0	45.0	1637005909	8.247642
29242153	2̶7̶ 2 dependencies, travis ci confi	2̶7̶ 2 dependencies, travis ci configured, fully tested and documented, even the readme depends on some external tool. github username is i-voted-for-trump. Looks like a joke that people actually started using.edit: Confused dependents with dependencies	Grieving	8.781815	-6.3611555	comment	5.0	23.0	1637078815	-11.627167
29302715	Intel can make parts to fit a SKU by	Intel can make parts to fit a SKU by (a) sorting them based on what elements are working when they come off the proverbial press, (b) physically disabling working elements, or (c) disabling working elements in software with the option to re-enable them.I totally understand the argument that (c) is more objectionable since the chip you buy is prevented from using all the elements it left the factory with.  However I think it really shouldn't feel different than (b)? The only difference between getting 8 core part with 8 more cores burned out on its way out the door and an 8 core part with 8 more cores disabled in microcode is that you can double the core count of the latter in place for a price that's presumably proportional to the price difference between the 8c and 16c SKU?Of course there	kristjansson	9.39336	-5.1991167	comment	5.0	40.0	1637555153	7.8007865
29304141	>However, since that time, all moder	>However, since that time, all modern CPUs have turned RISC-like, by internally using a reduced instruction set and translating the ISA opcodes into internal commands, some implemented using CPU microcode.Is there a way Intel can expose microcode and commands to outside so compilers can directly target them instead of X86 instruction set?If yes, would there be anything to gain or lose?	DeathArrow	9.599234	-5.5791864	comment	5.0	15.0	1637569936	-9.071361
29350098	Cpuid: EAX=8FFFFFFFh: AMD Easter Egg	Cpuid: EAX=8FFFFFFFh: AMD Easter Egg	junon	9.451214	-5.301006	story	5.0	24.0	1637934052	7.9210997
29419595	How does the modular instruction set	How does the modular instruction set work? If someone proposes an extension, is the onus on them to also provide a minimal RISCV implementation of that functionality? Or is it just accepted that some binaries won't work on all devices?	bee_rider	9.480594	-5.732058	comment	5.0	15.0	1638467184	5.0853124
29421107	Compressed instructions and macro-fu	Compressed instructions and macro-fusion aren't magical solutions. It's not always possible to convince the compiler to generate the magical sequence required, and it actually makes high-performance implementations (wide superscalar) more difficult thanks to the variable width decoding.Beyond that, compressed instructions are not a 1:1 substitute for more complex instructions, because a pair of compressed instructions cannot have any fields that cross the 16-bit boundary. This means you can't recover things like larger load/store offsets.Additionally, you can't discard architectural state changes due to the first instruction. If you want to fuse an address computation with a load, you still have to write the new address to the register destination of the address computation. If you want to	theresistor	9.820264	-5.938621	comment	5.0	25.0	1638472892	-7.739005
29422127	The argument for RISC instructions (	The argument for RISC instructions (in high performance architectures) is that the faster decode makes up for the increase in instruction count. The problem is that a faster decode has a practical ceiling on how much faster it's going to make your processor, and it's much lower than 3x. If your workload is bottlenecked on an inner loop that got 3x larger in instruction count, no 15% improvement in decode performance is going to save you.	theresistor	9.500866	-5.7460933	comment	5.0	21.0	1638477340	-10.510232
29428208	Show HN: Unikraft Cloud Platform: Un	Show HN: Unikraft Cloud Platform: Unikernels-as-a-Service	nderjung	9.91583	-6.247668	story	5.0	34.0	1638523856	-12.378057
29430069	I'd say someone earned a free AT-AT 	"I'd say someone earned a free AT-AT for the bug report.On the one hand that's a minor quibbling little problem there, ""I have to use tools on this one part when disassembling it"", and then the dearth of such problems during their run is an amazing testament to their engineering process. That they have fans that can catch this issue and explain it so well is another testament to the standards they've maintained.Can we call ""lego instructions"" an example of software design? I think we must. Programs designed to run on meat CPUs of unknown specs."	h2odragon	9.7414465	-5.393584	comment	5.0	32.0	1638539937	1.680141
29444327	I started off writing a lot of 68000	I started off writing a lot of 68000 machine code. I was always amazed what you could accomplish with a lot of loops and branches. I never lost that sense that at whatever higher level I was at later on, it was all loops and branches.	okareaman	9.70685	-5.498119	comment	5.0	36.0	1638652136	-7.4397817
29449800	I’ve been curious for a while: Has a	I’ve been curious for a while: Has anyone done the envelope math to estimate how much of the Graviton price advantage offered by AWS is a reflection of true price/performance vs. AWS taking a short term margin hit to encourage growth of a CPU platform they control?	twoodfin	9.541259	-5.2003937	comment	5.0	32.0	1638716808	-8.290822
29464835	AS/400 had a machine-independent bin	AS/400 had a machine-independent binary format which was translated ahead of execution by the system's specific compiler into machine code, and all applications ran in the same address space with zero memory protection because the code generated by the compiler ensured isolation.	formerly_proven	9.880553	-5.40733	comment	5.0	18.0	1638820953	-7.507901
29491650	> This is pretty much what a CPU wit	> This is pretty much what a CPU without ECC is. It randomly crashes and corrupts your data.I use ECC RAM in systems with error counters.Error correction is an extremely rare event, if it happens at all.  This idea that non-ECC computers are crashing all the time due to memory errors isn’t true. I've also had unstable systems with ECC RAM and no error correction events, so it's not a magic bullet.You can run something like memtest86 for days on end. You shouldn’t see any errors at all, unless your memory is bad.The reality is that the average consumer doesn’t really want to pay the extra amount for ECC RAM. As you said, ECC has been available on AMD consumer platforms for a long time and there’s barely any uptake outside of people building servers and workstations with consumer-grade AMD C	PragmaticPulp	9.471	-5.519324	comment	5.0	48.0	1639004109	8.227045
29522046	Here is a PDP-11 booting UNix v6: ht	Here is a PDP-11 booting UNix v6: https://www.youtube.com/watch?v=9wFJL9inunQ	wazoox	9.862406	-5.4596496	comment	5.0	22.0	1639240092	-7.4991074
29525128	Will we see the rise of Libc shims s	Will we see the rise of Libc shims soon like those for JavaScript? RISC V feature support looks notoriously fragmented.	melony	9.398906	-5.6881766	comment	5.0	21.0	1639263912	-10.580285
25467554	This is a dumb question.  But as you	This is a dumb question.  But as you've said, cores per die has a strong influence on how performant a system is and that's because of the processor interconnects.  My question is, what are the processors saying to each other?	x86_64Ubuntu	9.5202465	-5.2844114	comment	5.0	15.0	1608302740	7.8882732
25471856	Looks like Apple M1 support is live 	Looks like Apple M1 support is live in this version:> Go 1.16 adds support of 64-bit ARM architecture on macOS (also known as Apple Silicon) with GOOS=darwin, GOARCH=arm64.A bit ahead of what I think most people expected. This should accelerate a few other projects progress. (Docker being the big one)	ogre_codes	9.56195	-6.378863	comment	5.0	25.0	1608324909	10.056703
25484673	The RISC-V has a terrible Instructio	The RISC-V has a terrible Instruction-per-Clock and thats where Arm shines over x86. The idea that's specialty hardware is an Apple invention and that you cant get that with x86, is also ludicrous. Take a x86 CPU from AMD or Intel and add a RTX 3090 and you have specialized hardware for ML, graphics, ray-tracing and video encoding/decoding that runs circles around an M1.	quelsolaar	9.486984	-5.590118	comment	5.0	23.0	1608450463	-10.528913
25505736	Hi all! Co-author of the post here a	Hi all! Co-author of the post here and founder of Micro. Let me know if you have any questions. As always interested to discuss and get feedback. Cheers, Asim.	asim	9.785417	-5.477555	comment	5.0	23.0	1608641480	-13.791913
25524064	> additional instructions were avail	> additional instructions were available for a rental feeThe wet dream of chipmakers today, no doubt. Most recent example that occurs to me is the VideoCore bullshit on Raspi, afaik the effect was few paid for a license and that hardware  feature mostly went unused before it went obsolete.	h2odragon	9.681376	-5.4411855	comment	5.0	20.0	1608770962	-7.4490113
25554366	Point 2 claims that RISC-V is the do	Point 2 claims that RISC-V is the dominant architecture used for teaching. The link provides no evidence for that. I know lots of unis teaching ARM, and none teaching RISC-V. Is there any evidence that RISC-V is the dominant architecture for teaching?	CJefferson	9.403914	-5.701734	comment	5.0	20.0	1609104093	-10.564491
25554413	I find it interesting that, in one a	"I find it interesting that, in one aspect, ARM went into the opposite direction with its newer 64-bit ISA. Like with RISC-V, the designers of the 64-bit ARM ISA ""knew about instruction compression and macro-ops fusion when they began designing their ISA"" (32-bit ARM already had the alternative compressed ISAs Thumb/Thumb2/ThumbEE); however, they chose to use fixed-size 32-bit instructions without any compressed format. I suspect that they did it expecting that, once compatibility with the 32-bit ARM ISAs is removed on newer processors, the fixed-size instructions would allow for very wide decoders, like we've seen with Apple M1 (which can decode 8 instructions in parallel). It remains to be seen whether the RISC-V choice (the first two bits of every instruction are enough to determine the "	cesarb	9.6422825	-5.599275	comment	5.0	66.0	1609104524	-7.7259665
25609444	I find that Linus has some good cont	I find that Linus has some good content from time to time, but I can’t bare the format.The jokes, screaming, unreal exaggerated emotions. Puts me off instantly.	tambourine_man	9.279443	-5.8818827	comment	5.0	18.0	1609552294	4.2352214
25622452	“ECC availability matters a lot - ex	“ECC availability matters a lot - exactly because Intel has been instrumental in killing the whole ECC industry with it's horribly bad market segmentation.”Its.There, I finally corrected Linus Torvalds in something. :))	kensai	9.436699	-5.48162	comment	5.0	55.0	1609689394	8.220651
25622631	Yeah, it's real obnoxious of Intel t	"Yeah, it's real obnoxious of Intel to silo ECC support off into the Xeon line, isn't it?  I switched to ECC memory in 2013 or 2014 with a Xeon E3 (fundamentally a Core i7 without the ECC support fused off) and of course a Xeon-supporting motherboard (with weird ""server board"" quirks: e.g., no on-board sound device).I love that AMD doesn't intentionally break ECC on its consumer desktop platforms and upgraded to the Threadripper in 2017."	loeg	9.390713	-5.416607	comment	5.0	112.0	1609690690	8.135969
25623001	I haven't seen definite details and 	I haven't seen definite details and test results on these (but haven't looked recently).What specific configurations (CPU, MB, RAM) are known to work?Let's say I have a Ryzen system, how can I check if ECC really works? Like, can I see how many bit flips got corrected in, say, last 24h?	cuu508	9.430582	-5.4950852	comment	5.0	18.0	1609693390	8.238146
25624918	I hate to be that bucket of cold wat	I hate to be that bucket of cold water, but there's multiple reasons FPGAs haven't been successful in package with CPUs. Firstly, the costs of embedding the FPGA - FPGAs are relatively large and power hungry (for what they can do), if you're sticking one on a CPU die, you're seriously talking about trading that against other extremely useful logic. You really need to make a judgement at purchase time whether you want that dark piece of silicon instead of CPU cores for day to day use.Secondly, whilst they're reconfigurable, they're not reoconfigurable in the time scales it takes to spawn a thread, it's more like the same scale of time to compile a program (this is getting a little better over time). Which makes it a difficult system design problem to make sure your FPGA is programmed with t	Traster	9.098022	-5.35603	comment	5.0	20.0	1609705691	8.281302
25645227	This has 5 backend pipelines, which 	This has 5 backend pipelines, which I would say is getting there speed-wise. I think AMD Zen has 10 execution pipelines to play with, although the exact structure is usually not commented upon so I don't know how long they are.It's 32 bit so it's not desktop-class necessarily but this should blow a microcontroller out of the sky, for scale.	mhh__	9.252106	-5.2230577	comment	5.0	21.0	1609853131	-4.2332687
25648503	If I understand this correctly:Typic	"If I understand this correctly:Typically, I think of an FPGA as something used to accelerate specialized operations. But sometimes, in the middle of one of these specialized operations, you might want to do something more general, like run a network stack, without returning to the CPU. A soft processor like this allows you to run an ordinary network stack (with ordinary code) inside the FPGA.Is that right?I thought one of the things people used FPGAs for was accelerating network stacks, so I don't quite know why you'd want to use a soft processor for that. But it does make sense that you'd want to be able to run ordinary code in an FPGA (as part of a larger FPGA operation that is not ordinary code).EDIT: Also, I don't understand this statement: ""for example,  one main compute kernel, which"	jeff-davis	9.192942	-5.3754907	comment	5.0	15.0	1609869383	8.251224
25651128	Just wait for SiFive and RISC-V, tha	Just wait for SiFive and RISC-V, that's going to be the revolution I'll join :)	turbinerneiter	9.350907	-5.766088	comment	5.0	15.0	1609881187	-10.569033
25685509	While I don't think he should be fli	While I don't think he should be flipping the bird, his technical arguments are absolutely spot on.An aside question for readers: How often does RAM error, and is it a significant problem in practice?I don't have any direct experience with this (that I could tell) using consumer computers for the past 15-odd years of programming.	spicybright	9.702139	-5.4833074	comment	5.0	19.0	1610119215	8.207525
25721131	How does this compare to alternative	"How does this compare to alternatives for learning FPGA? What's the significance of the duino suffix?When would you choose FPGA over something like an STM32? From what an internet search leads to, they can be faster / do more things in parallel for the price. And you can add capabilities (More timers? More op amps?) with firmware updates. Is this at the core of when you'd choose one?I've no experience with FPGA, but would like to learn. This is listed as ""no longer available for sale"". Which dev board do you recommend? Thank you."	the__alchemist	9.085912	-5.3575068	comment	5.0	33.0	1610319190	8.4324665
25722049	I disagree, but please don't downvot	"I disagree, but please don't downvote stuff like this--respond with a thought out comment, thanks.  I upvoted you.Perhaps Xilinx-land is different, but I have seen an intern go from blank Windows machine to ""blink an LED"" on an Altera board in about an hour or so with no Verlog/VHDL.I have never seen this with the open-source toolchains.Your experience differs.  YMMV.  Disclaimers.  etc."	bsder	9.115091	-5.3722067	comment	5.0	22.0	1610323710	8.472142
25722602	How about an FPGA dev board that's c	"How about an FPGA dev board that's cheap, simple (or not really), supported by OSS toolchain and can emulate a RISC-V SoC with performance sufficient to run a fully-functional Linux desktop?I once stumbled upon an article where somebody FPGA-ed (with a much bigger board, I don't insist it has to be this small and simple) a RISC-V system to make a ""RISC-V PC"" and I'm thinking about getting an FPGA to explore that since then."	qwerty456127	9.352877	-5.4977255	comment	5.0	19.0	1610326233	-10.555721
25762890	To me, that move makes a lot of sens	To me, that move makes a lot of sense. But judging from the other comments, I'm the only one with that assessment.I'm my opinion, the secret sauce that makes Intel dominate certain industries is software. And it has been for some years already.If you need really fast mathematical number crunching, e.g. high frequency trading or realtime audio filtering, then you need MKL, the Intel math kernel library.If you want to further reduce latency with parallelism, you need TBB, the Intel thread building blocks.Raytracing? Intel embree.Once you are locked in that deeply, the raw Intel vs AMD performance becomes meaningless. You only care about how fast the Intel libraries runSo a CEO with experience building high performance low level software seems like an amazing fit.Edit: And I almost forgot, th	fxtentacle	9.3001585	-5.2455983	comment	5.0	86.0	1610550661	7.8571367
25801598	> However more importantly, this is 	> However more importantly, this is an advantage to Apple. By only letting their libraries use these special instructions Apple retains the freedom to radically change how this hardware works later. They could remove or add AMX instructions.Depends on whether these instructions can be executed with unprivileged user-land code.  Once the genie is out of the bottle, backward compatibility means imitating the old instruction set.  Since a recompile is often cheap enough (and esp. if coprocessor calls can be remapped at the bitcode compilation time), this should be a non-issue.	h0l0cube	9.852847	-5.330613	comment	5.0	40.0	1610796518	-7.656643
25834086	Feel this piece ducks one of the mos	Feel this piece ducks one of the most important questions - what is the future and value of x86 to Intel? For a long time x86 was one half of the moat but it feels like that moat is close to crumbling.Once that happens the value of the design part of the business will be much, much lower - especially if they have to compete with an on form AMD. Can they innovate their way out of this? Doesn't look entirely promising at the moment.	klelatti	9.443945	-5.2031336	comment	5.0	46.0	1611068959	7.7518063
25844223	"""Very few teams are actually practic"	"""Very few teams are actually practicing CI/CD"" is mentioned in the article.In an enterprise setting, due to segregation of duties, it's often true that CD is impossible due to restrictive change management processes that result in unpredictable and typically week-long cycles."	mborch	9.179615	-6.41752	comment	5.0	29.0	1611133721	6.1385202
25845666	https://www.trendforce.com.tw/resear	"https://www.trendforce.com.tw/research/download/RP210112CQ
The report is all speculation, not some credible source leak.And the original report was released on 01/12 before Intel appoints Pat Gelsinger as new CEO. So even if the report speculated correctly, which is unlikely, the circumstance already changed."	websg-x	9.336429	-5.184002	comment	5.0	67.0	1611145954	7.648537
25848164	I discovered last week, to my chagri	I discovered last week, to my chagrin, that the RAM on my x1 carbon Stinkpad was starting to fail--memtest x86+ confirmed it. Memory corruption is insidious, so I rushed to the internet to buy new DIMMs, opened the sucker up...and there's no DIMM. The RAM is just soldered into the motherboard. No upgrade, no fix. This is now a pile of unreliable junk that randomly flips bits in memory. So data evac commences, with MD5 hashes and double, trip-checking everything.A reminder that not only software bitrots, but hardware too. Make sure not to buy a Stinkpad (or any hardware) with non-replaceable parts!(and I just bought an M1 Macbook Pro...)	titzer	9.817151	-5.400335	comment	5.0	24.0	1611159297	8.119196
25850662	Star Wars PDP-11/45	Star Wars PDP-11/45	szczys	9.835414	-5.428583	story	5.0	29.0	1611170339	-7.497935
25850589	I'm surprised that Rosetta 2 isn't i	I'm surprised that Rosetta 2 isn't installed by default. It seems that for the next couple of years the vast majority of people will need at least one x86 app.I guess split-architecture applications were also not foreseen as it is clear that the auto-install prompt doesn't work very well in that case.	kevincox	9.800695	-5.3608894	comment	5.0	29.0	1611169982	7.6978235
25871135	The problem is that restrictions are	"The problem is that restrictions are not thought through. If they were banned from using Android altogether, they wouldn't be able (legally) to port it on that architecture in the first place. The same goes with the RISC-V as well - the law could be written to allow only certain countries to use it freely.
These obstacles are kind of similar to patents. When you discover something and then you learn someone was first to patent it, you have to invent your own thing, so in this regard these embargos are just an inconvenience rather than a real instrument to force another country to behave in a civilised way.
I wonder how authors of RISC-V must feel when their architecture is being appropriated by a country that violates human rights. Is that in the spirit of the free license?"	varispeed	9.381469	-5.648254	comment	5.0	25.0	1611318853	-10.533765
25956027	What if QEMU ends up faster than nat	"What if QEMU ends up faster than native? I could imagine a future where programs are built unoptimized or with `-Os` for download size, and optimized by the operating system before or during execution, with x86 or arm (or risc-v!) ending up as the default ""portable executable instruction format"" for a whole bunch of CPU architectures. Where the first thing the OS or even the BIOS loads is qemu..."	FeepingCreature	9.924473	-5.4602423	comment	5.0	18.0	1611917354	-8.250838
25978424	FWIW, NVIDIA have been adopting RISC	FWIW, NVIDIA have been adopting RISC-V as the internal ISA for their GPUs: https://riscv.org/wp-content/uploads/2017/05/Tue1345pm-NVIDI.... It’s definitely a different architectural approach than described in OP though.	anp	9.33936	-5.5922875	comment	5.0	15.0	1612097418	-10.560523
25993351	I wonder how would people feel about	I wonder how would people feel about itanium failure had it been developed by anyone other than Intel; I mean, would there be that lingering feeling it could have been something had only the right amount of resources put into it etc etc?	ithkuil	9.513364	-5.5056167	comment	5.0	18.0	1612211110	-7.780176
26002419	The ISA fragmentation issue is the w	The ISA fragmentation issue is the worst thing I've consistently heard about RISC-V.Fragmentation is in general horrible. It was a major problem with ARM32, and that was much more strictly defined with less variation. ARM64 tried to define things more rigidly and has mostly banished the problem. The ARM ecosystem continues to be held back though by fragmentation around bootstrapping, hardware enumeration, and other aspects of the system that surround the core. Every ARM board tends to be a special snowflake.I can't imagine RISC-V beyond niche applications unless someone publishes a more strictly specified version of it that provides a unified platform.	api	9.421871	-5.6379824	comment	5.0	18.0	1612281173	11.462911
26002620	I do think that RISC-V will open the	I do think that RISC-V will open the door to open source implementations as well. It will take a long time, but we might reach a day when people are 3d printing their own chips. Why does everyone always put so much pressure on new technologies to change everything over night? Maybe RISC-V's best days are 10-20 years from now.	hacknat	9.353872	-5.6651764	comment	5.0	31.0	1612281962	-10.551031
26003157	RISC-V is great for platforms where 	RISC-V is great for platforms where low cost, simple design, existing toolchain is important. In these areas it probably is the future.If your goal is maximum performance, and general purpose platforms, then it's not very interesting at all. You dont want RISC-V in your PC, but you do want it in your toaster.RISC-V deserves hype, but that hype should be confined to what RISC-V is good at, not convince you that RISC-V will kill every other ISA.	quelsolaar	9.401379	-5.6691737	comment	5.0	26.0	1612284085	-10.57841
26004158	I don’t have much knowledge on the l	"I don’t have much knowledge on the low-level intricacies of CPUs, could someone please answer a question of mine? 
There is an older, famous post titled something like “C is not a low-level language”, and relatedly one that assembly itself is not all that low-level today.I do now almost nothing about the state of today’s CPUs, only that they are extensively complex with long pipelines and that branch prediction is a thing. Also, several layers of caches. x86 on top is almost only an API which frees the hardware engineers from backward compatibility, since these intricacies are programmed by microcodes that are not really accessible to general software.My question is, wouldn’t a “dumber” processor be better with a more expressive “API”, with instructions like prefetch, some form of parallel"	kaba0	9.7369	-5.702866	comment	5.0	19.0	1612288256	8.009861
26010285	Intel leak: 20GB of source code, chi	Intel leak: 20GB of source code, chipset design and Intel Management Engine (ME)	nuker	9.475628	-5.229902	story	5.0	78.0	1612322921	7.858607
26100912	BeagleV – The First Affordable RISC-	BeagleV – The First Affordable RISC-V Computer Designed to Run Linux	gjvc	9.407529	-5.6042495	story	5.0	26.0	1613047813	-10.541068
26164600	Add to that that, depending on the e	"Add to that that, depending on the emoji font, the emoji will look completely different[0]. So as the sender you have no guarantee that the recipient of your message will actually interpret your emoji as you intended. It really is beyond me why the Unicode consortium thought that putting emojis in a character set would be a good idea.Sure, having a code point in your character set that represents a bird[1] makes sense but I really hate that font designers now have control over the way I get to express my emotions and how others perceive them.[0]: Sure, "":)"" and "":/"" also depend on the font but much less.[1]: https://news.ycombinator.com/item?id=26164409"	codethief	9.831694	-6.2595825	comment	5.0	23.0	1613555345	-13.959363
26182925	Forth SoC Written in VHDL	Forth SoC Written in VHDL	petrohi	9.208184	-5.536522	story	5.0	54.0	1613670064	8.53136
26275506	Performance is agnostic of ISA. Appl	Performance is agnostic of ISA. Apple's custom designed cores do indeed have a massive performance/Watt advantage over x86 based designs and happen to be using ARM. However, it's not impossible for an x86 CPU to be designed in a similar way. It does, however, get more difficult to do so due to x86's variable length instruction encoding, to which ARM does not have.	SuperscalarMeme	9.620756	-5.319918	comment	5.0	29.0	1614352336	-7.686208
26292975	Father of the PDP-1: The TX-0, Trans	Father of the PDP-1: The TX-0, Transistorized EXperimental Computer Zero (1956)	Bluestein	9.868486	-5.448707	story	5.0	30.0	1614515983	-7.552
26295349	Problem is that ARM & AArch64 were c	"Problem is that ARM & AArch64 were considered a ""weird architecture"" by the non-Android linux stack until really very recently, and the migration to a new architecture is still not plain-sailing in many peoples' experience. Without the assumption that most open source package authors are implicitly trying to be architecture-independent to some degree, we will literally all be stuck on x86_64 for the rest of our lives (the migration to amd64 itself I remember as being a number of years of people working on ""unsupported"" stuff FWIW).For users on ""weird architectures"" to be petitioning that a move the pyca authors are making is causing inconvenience to them is perfectly reasonable in my eyes."	ris	9.714443	-5.377874	comment	5.0	36.0	1614535183	-7.7274103
26298832	As surprising as it sounds, this mig	As surprising as it sounds, this might actually have a practical use --- with the 6502 being such a tiny core it ends up in a lot of obscure MCUs, possibly with IoT-ish/toys/etc. high-volume low-cost applications, and the seeming unwillingness of a certain subset of developers to use more efficient binary protocols, I wouldn't be surprised if someone does end up needing to get a 6502 to parse JSON.The 8051 and Z80 fill similar roles today --- when even the cheapest ARM core is too expensive.	userbinator	9.555482	-5.313837	comment	5.0	28.0	1614562215	-7.4320064
26365023	Curious - why do people get offended	Curious - why do people get offended by Torvalds? If you know anything about the guy, his rants are a caricature. It's like going for a Tarantino movie and expecting no violence. You're going to get violence. And, it's going to be excessive, over-the-top, ridiculously offensive that there is no other explanation than to treat it as comedy. Any other attempt to explain Linus is flapping wings in a vaccuum. If I was on the receiving end of it, I would play along.	fermienrico	9.279433	-5.887655	comment	5.0	39.0	1615002747	4.276678
26419639	Speaking of open source FPGA tools, 	Speaking of open source FPGA tools, I recently saw a video on Twitter of someone programming an FPGA (TinyFPGA, I think) using a 100% opensource toolchain. Has anyone seen that?	Robotbeat	9.092888	-5.363003	comment	5.0	15.0	1615431189	8.343854
26438465	ME isnt required at all...https://ww	ME isnt required at all...https://www.csoonline.com/article/3220476/researchers-say-no...To explain this again, it technically is a guest.  The GPU cores run a real time operating system called ThreadX. This operating system is closed source and rules the system without the open source Linux Kernel being aware of it.When the Raspberry Pi starts booting the CPU is completely disconnected (technically in reset state) and the GPU is the one that starts the system. You can have a look at the `/boot` folder and you will see some of the binary blobs used by the GPU to both start the CPU and run its own ThreadX OS (bootcode.bin and start.elf). You can learn more details about the boot process here.After the GPU has the CPU load the Linux Kernel, it doesn’t just stay there waiting to act as a grap	nimbius	9.461976	-5.2383027	comment	5.0	15.0	1615570926	7.5304327
26440630	To me this changes nothing to the 30	To me this changes nothing to the 30% CPU wasted by default with new linux distributions.Linus said he wanted the workarounds disabled by default, why didn't anyone listen?I'm not browsing javascript sites on my linux server!?If the server is compromised they don't need to use meltdown/spectre to do damage since servers need root for everything useful (open port <1024)?!	bullen	9.65552	-5.5698676	comment	5.0	39.0	1615581689	-6.4741416
26440963	So given that the only mitigation to	So given that the only mitigation to Spectre is to isolate each website into its own underlying OS process, it seems very important to know which browsers are doing that.Chrome is doing it.  What about Firefox and Safari?  What about Edge?  Do they implement site isolation?	toomim	9.764617	-5.6306887	comment	5.0	33.0	1615583372	7.5461254
13611102	Um, no.  Keeping diff sizes smaller 	"Um, no.  Keeping diff sizes smaller is nice, but asking for ""a few dozen lines"" most of the time is too doctrinaire.  In many codebases, especially those that are older and larger, even a fairly straightforward enhancement can require a few dozen lines of new code plus even more modifying callers or hooking things together in other ways.  Oops, already over the limit.  Breaking up patches can even make them less coherent as context for each one is lost, and can slow things down if all the pieces have to be pushed separately through a slow CI pipeline.Keeping patch sizes to a minimum is good, but it's a minimum of what's feasible based on other concerns.  If ""few dozen lines"" works for you that's great, but don't overgeneralize from that."	notacoward	8.979458	-6.3100705	comment	5.0	16.0	1486675297	2.1473594
13641681	So the latest AMD cores seem like th	So the latest AMD cores seem like they might be more competitive... does anyone know which AMD processors are likely to support ECC memory? My one big gripe with Intel CPUs is that they currently only support ECC memory for non-consumer chips. I run a personal ZFS cluster and am more concerned about data integrity / cost than I am about pure CPU performance.	iand675	9.405923	-5.4657063	comment	5.0	25.0	1487054415	8.182443
13651435	"""Fastest compiler -- 85,000 lines pe"	"""Fastest compiler -- 85,000 lines per minute""What do you get 22 years later on an Intel i7?"	melling	9.85098	-5.717405	comment	5.0	15.0	1487160601	-7.412322
13655779	No PDP book? It's old and weird but 	No PDP book? It's old and weird but interesting and has a lot of original ideas, notwithstanding the actual original backprop being from before then. Nor the original backprop stuff?	curuinor	9.850088	-5.4231005	comment	5.0	21.0	1487196272	-7.4836845
13675458	Emojis in passwords would both make 	Emojis in passwords would both make passwords more secure and easier to remember for some people. The drawback is that they're very hard to enter in normal, physical keyboards.	Daniel_Marcos	9.879375	-6.240264	comment	5.0	21.0	1487436790	-13.957289
13695011	One of my favorites of these is only	"One of my favorites of these is only showing the speedup...""scales linearly"", without comparing to a non-parallel baseline.  First time I saw this was with Clik, which reported linear scaling.  I was impressed, until I found out that the parallel version was 6x slower on a single CPU than the sequential version.Similar with a SPJ talk on parallel Haskell (can't find it right now).  Big claims about this being the One True Way, and then required four cores to match C sequential case.  Hmmm.UPDATE:  https://www.youtube.com/watch?v=NWSZ4c9yqW8  around the 1h 10min mark.  Four cores to match sequential C (previously had written six, was wrong)"	mpweiher	9.728377	-5.518958	comment	5.0	17.0	1487680628	8.709046
13774433	Anandtech is wrong and ECC is not di	"Anandtech is wrong and ECC is not disabled at all.
For example all ASRock AM4 boards support ECC memory."	octoploid	9.446474	-5.512542	comment	5.0	28.0	1488466969	8.221191
13786152	Isn't it sci-fi-level incredible, an	Isn't it sci-fi-level incredible, and frankly both scary and shady, that every modern x86 CPU has this forced sub-ring-0 control program? And that the CPU vendors apparently go to extreme lengths in hiding its functionality? Why would even large vendors like Apple or Dell agree to this?The 30-minute timeout is particularly mischievous. It's like they REALLY want to slow down any effort at patching out the ME.Are we going to have to wait on an insider leak on what's the real deal here? Or have I completely missed out on a perfectly good excuse for what's going on?	0x0	9.584542	-5.2363553	comment	5.0	40.0	1488572920	7.7889853
13832405	Before emoji, fonts and colors were 	Before emoji, fonts and colors were independent.  Combining the two creates a mess.  Try using emoji in an editor with syntax coloring. We got into this because some people thought that single-color emoji were racist.[1] So now there are five skin tone options. The no-option case is usually rendered as bright yellow, which comes from the old AOL client. They got it from the happy-face icon of the 1970s.Here's the current list of valid emoji, including upcoming ones being added in the next revision.[2]A reasonable test for passwords is to run them through an IDNA checker, which checks whether a string is acceptable as a domain name component. This catches most weird stuff, such as mixed left-to-right and right-to-left symbols, zero-width markers, homoglyphs, and emoji.[1] https://www.washin	Animats	9.814145	-6.2676525	comment	5.0	24.0	1489087641	-13.954244
13839829	Disclaimer: I don't know too much ab	"Disclaimer: I don't know too much about this fieldCan someone explain why exactly 64-bit is generally slower than 32-bit?I understand that more RAM will be used and I/O to it slowed down due to double the bits pushed around since ""chunks"" have double the length, which ends up being a lot of empty padding (is that correct?).But everything inside the CPU, like registers or ALUs, are 64 bits wide anyway (right?), so computing in 64-bit mode would just make use of resources that were unoccupied in 32-bit mode. Or am I missing something?"	blauditore	9.821965	-5.4573784	comment	5.0	21.0	1489163695	7.8894296
13905999	Are the emoji on every list item rea	Are the emoji on every list item really necessary? I find that they don't add any meaning to the post, and they're just distracting.	quanticle	9.812359	-6.2671785	comment	5.0	16.0	1489913259	-13.95688
13920332	ARM Launches DynamIQ: big.Little to 	ARM Launches DynamIQ: big.Little to Eight Cores Per Cluster	randta	9.539969	-5.232336	story	5.0	56.0	1490079308	7.8364406
13925188	I think the original hwbot posting i	"I think the original hwbot posting is the better article.http://forum.hwbot.org/showthread.php?t=167605The original post has been updated as more facts came along. It verified that the bug was reproducible on other machines. And then it said:  Update 3/16/2017:

  As much as I had least expected this to be the case, this appears to have been confirmed as an errata in the AMD Zen processor.

And then it goes on to say:  Fortunately, it's one that is fixable with a microcode update and will not result in something catastrophic like a recall or the disabling of features.

Basically, this is an awesome bug report. HN should link to it rather than the techpowerup article."	CalChris	9.539315	-5.3381295	comment	5.0	15.0	1490123199	7.824976
13927251	>>> Can FPGAs Beat GPUs in Accelerat	>>> Can FPGAs Beat GPUs in Accelerating Next-Generation Deep Learning?Whoever has worked with FPGA knows that they are completely different to program than CPU/GPU.They are not competing at all. You can't take some computer developers and have them work with FPGA. That'd be like taking a dude who knows XML and put him on optimizing C++ low level algorithms.For starters, a FPGA doesn't run programs, it describes hardware components.	user5994461	9.020396	-5.2033896	comment	5.0	16.0	1490138981	8.124986
13994407	Can anyone familiar with the matter 	Can anyone familiar with the matter say how secure is the 4-emoji verification code?	cprecioso	9.806716	-6.266476	comment	5.0	19.0	1490872560	12.823351
13999654	It just depresses me seeing how many	It just depresses me seeing how many people don't have the slightest clue why this is something incredibly remarkable - the complexity behind each and every component, process, research and engineering making this possible - and then start bitching about the new Emoji set on their smartphone	eliaspro	9.798072	-6.2692366	comment	5.0	24.0	1490914592	-13.958449
14010536	I am currently waiting for my MATRIX	I am currently waiting for my MATRIX Voice to arrive.https://www.indiegogo.com/projects/matrix-voice-open-source-...I have a Spartan 3AN dev board, another Spartan6 board, and an Arty. I was using Xilinx ISE free version to develop for the other boards until I bought the Arty. It came with a one year license for Vivado. I did not know that activating the Vivado license locked me in to developing only for Arty. ISE will no longer synthesize for any other target. I strongly dislike the closed nature of their software licensing.I am retired but the last 10 years I worked writing VHDL. I can kind of read Verilog and understand what it does but do not know it well enough to write in it. The systems I worked on were for oil well logging. My circuits went down a 16,800 ft. hole where it was 350° 	BillBohan	9.101255	-5.390993	comment	5.0	21.0	1491023017	-6.9086595
14054577	You would think that there enough ge	You would think that there enough geeks out there who are aware of the issues with Intel ME to do something about. But after this time the best we have is a nasty hack that can kind of disable it.Don't we have the numbers (and quite frankly the money) to solve this issue at the root? Why can't we (the broader tech community) sell a laptop aimed principally at ourselves. Without Intel ME. Without closed-source firmware. No binary blobs.Pardon the rant. I'll go back to being naive in silence.	Tharkun	9.44554	-5.206884	comment	5.0	38.0	1491512585	7.7475166
14064449	I was in awe the entire time Lin was	"I was in awe the entire time Lin was speaking. Not a single ""um"" or other verbal tic; she's an incredible speaker and was admirably lucid throughout that entire talk. That's so difficult to do. And style aside, she made understanding Fiber incredibly simple.Just wanted to express my admiration for her work and gratitude for making this information public, available, and free."	STRML	9.277	-5.8935194	comment	5.0	20.0	1491610363	4.2752357
14113925	Latency is more important than just 	Latency is more important than just bandwidth, and since RAM is pretty far away from the ALU you'll quickly hit limits there.	adrianN	9.882354	-5.2464957	comment	5.0	20.0	1492171099	6.9223733
14131883	I'm wondering why Intel is withdrawi	I'm wondering why Intel is withdrawing so much of their money from different projects like this and OpenStack.Maybe AMD is putting a lot of financial pressure on them, and they have to put more funds in R&D?	m-p-3	9.259	-5.1959286	comment	5.0	31.0	1492444840	7.7111425
14158906	> The best startups are ones that so	"> The best startups are ones that solve a pain point you yourself have experienced.Aww, yisss. Case in point, EDA and, in particular, hardware description languages and tools. Every discussion I've had with someone trying to get into this has been so cringe-worthy that I'm actively avoiding now. Every self-professed hardware hacker thinks they have the solution that's going to end all this painful Verilog kerfuffle and yet they're so, so far from getting it.Like the folks who thing the biggest problem with Verilog and VHDL is that they're so alien that it's hard to get software developers productive with them. Lack of electronics knowledge is what prevents most software developers from being productive in Verilog. A ""better"" language won't help. Paying attention in their Electronics or Sys"	notalaser	9.095089	-5.485217	comment	5.0	15.0	1492709765	8.549071
14174533	ARM Releases Machine Readable Archit	ARM Releases Machine Readable Architecture Specification	walterbell	9.65794	-5.281383	story	5.0	167.0	1492892553	7.870883
14178032	As someone who has followed tech for	"As someone who has followed tech for almost 40 years, I've watched a lot of things come and go. I've seen ""the next big thing"" go nowhere countless times while some obscure things surprised me. Well intentioned good ideas didn't make it because of external factors or they lacked enough momentum to push through developmental barriers. Having seen all of that, my assessment of RISC V is simple: If they complete the privileged spec as planned this year (and hopefully the vector extensions too) it's going to explode onto the stage like newly formed star. The ramp will appear slow to people with high hopes and unrealistic expectations, but in the context of my life it will be a sudden shift the likes of which are rarely seen.That is IFF they get the specs finalized, and I hope they support Goog"	phkahler	9.383452	-5.69799	comment	5.0	30.0	1492953409	-10.57232
14192813	I was exactly here yesterday after a	"I was exactly here yesterday after a discussion with a friend of mine about the meaning of ""Face With Steam From Nose"" [1].I work in an academic institute with many nationalities and almost all people (of different cultural backgrounds) describe this emoticon as an emoticon showing anger and frustration. Yet the official description in Unicode 6.0 [2] is ""face with look of triumph"" . Was it simply bad design?[1] http://emojipedia.org/face-with-look-of-triumph/
[2] http://unicode.org/charts/PDF/Unicode-6.0/U60-1F600.pdfI am curious, have you found other similar examples?"	kensai	9.81447	-6.261242	comment	5.0	18.0	1493123544	-13.960488
14206811	While I was at Google, someone asked	"While I was at Google, someone asked one of the very early Googlers (I think it was Craig Silverstein, but it may've been Jeff Dean) what was the biggest mistake in their Google career, and they said ""Not using ECC memory on early servers.""  If you look through the source code & postmortems from that era of Google, there are all sorts of nasty hacks and system design constraints that arose from the fact that you couldn't trust the bits that your RAM gave back to you.It saved a few bucks in a time period where Google's hardware costs were rising rapidly, but the ripple-on effects on system design cost much more than that in lost engineer time.  Data integrity is one engineering constraint that should be pushed as low down in the stack as is reasonably possible, because as you get higher up "	nostrademons	9.493481	-5.5537257	comment	5.0	74.0	1493239519	8.251138
14207666	> There is roughly 3% chance of erro	> There is roughly 3% chance of error in RAM per DIMM per year. That doesn't justify buying ECC if you have just one personal computer to worry about.How do you make that leap?	loeg	9.477394	-5.508159	comment	5.0	25.0	1493246267	8.278846
14235761	Yes. There aren't to my knowledge an	Yes. There aren't to my knowledge any CPUs with special instructions for complex numbers, they're implemented as wrappers ontop of the standard stuff.	problems	9.658171	-5.556943	comment	5.0	17.0	1493616682	8.035313
14234884	IEEE Spectrum in the early 80's had 	IEEE Spectrum in the early 80's had an article on minimal instruction sets. The author made a salient point that 7 instructions did most of the heavy lifting, another 7 did the most of the rest required. He did highlight that one mistake made with instruction sets was not separating the addressing modes from the instruction itself.There have also been various projects looking at the micro-instruction based machines and noting that extremely complex instruction sets could be designed so that the actual requirements of a programmer or project be placed in microcode. One example was an instruction to search a tree structure for a required value (as a single machine instruction).Not that I can do anything about it, my conclusion over nearly 4 decades is that we have failed to take advantage of	oldandtired	9.642096	-5.626357	comment	5.0	20.0	1493601519	-7.681279
14241602	"> ""This vulnerability does not exist"	"> ""This vulnerability does not exist on Intel-based consumer PCs.""How does Intel define an Intel-based consumer PC?"	Jach	9.488844	-5.2481027	comment	5.0	27.0	1493672851	7.806448
14241657	... Here we are, with an exploit tha	... Here we are, with an exploit that only affects people that enabled a remote management feature. If Intel had made this an optional addon that required a physical switch to enable, approximately the same number of people would be affected today, since it requires provisioning. It's not like every Intel system is silently waiting for an exploit payload.	MichaelGG	9.514842	-5.2299395	comment	5.0	30.0	1493673131	7.7743287
14242508	Intel's Remote AMT Vulnerability	Intel's Remote AMT Vulnerability	tptacek	9.414118	-5.270297	story	5.0	222.0	1493679367	7.8027225
14275271	Intel decided they have the right to	Intel decided they have the right to put a whole secret computer inside your computer that only they can access. God knows what it does when no one is watching.That's the problem you should discuss, not this particular exploit.	bobsam	9.492728	-5.240976	comment	5.0	46.0	1494005965	7.8092074
14279290	"At this point I would respond with """	"At this point I would respond with ""Overruled!"" followed by the judge emoji, but HN isn't cool enough to support emoji so I'd need to provide a paragraph of explanation, thus obscuring any element of humour."	petepete	9.804746	-6.2676525	comment	5.0	16.0	1494058838	13.023551
14314716	The beauty of old school 68k assembl	The beauty of old school 68k assembly is astounding compared to the unstructured, messy piece of garbage that is X86 assembly.Intel should be ashamed of themselves for 20 years later still not having cleaned up their act.	josteink	9.630183	-5.360769	comment	5.0	37.0	1494493069	-7.5791173
14318877	5. How do they solve the problem tha	5. How do they solve the problem that x86 has a much stronger memory model than ARM, which makes emulation of multithreaded x86 code pretty hard without introducing a huge performance disadvantage?	wolfgke	9.718304	-5.459271	comment	5.0	43.0	1494531822	-7.732315
14331342	The Itanium is a noteworthy example 	The Itanium is a noteworthy example of what happens when one designs an architecture exclusively for parallelism to the exclusion of all else, and leaves all instruction scheduling to the compiler. The performance was great when software could take advantage of the parallelism, but horrible otherwise, since the processor would still be fetching bundles of 3 instructions (16 bytes each!) but only 1/3 of them would be anything other than NOPs, effectively making each instruction a ridiculously-cache-bloating 16 bytes long.I suppose a similar analogy would be doing everything in x86 with SIMD instructions and not using the scalar set at all.	userbinator	9.65467	-5.7276535	comment	5.0	79.0	1494688136	-7.702803
14341667	I wonder why it needs so many pins? 	I wonder why it needs so many pins? It only has 4 DDR channels, which is going to be a bottleneck keeping those cores fed. 8 channels would be more appropriate for 16 cores and it would explain why so many pins.	m-j-fox	9.54944	-5.274934	comment	5.0	19.0	1494857338	7.994525
14351284	I am not sure if I should be impress	I am not sure if I should be impressed until they reveal more details.160 TB over 40 nodes is 4 TB per node, which assuming 512 GB dimms requires only 8 dimms (4 per socket) or with 256 GB dimms 16 dimms (8 per socket).How fast is the interconnect? 100Gb/s?So far it sounds like an common high memory HPC cluster unit with really unknown technical parameters.	eveningcoffee	9.824246	-5.2114754	comment	5.0	21.0	1494954763	7.8655515
14356408	Inside the Microsoft FPGA-based conf	Inside the Microsoft FPGA-based configurable cloud [video]	willyyr	9.097892	-5.3489842	story	5.0	41.0	1495007349	8.348324
14359713	Why aren't more people deploying FPG	Why aren't more people deploying FPGAs like this? I started looking into using FPGAs for distributed systems work about six years ago when I was building a distributed database. Since then, about once a month I come across some problem that an FPGA could be useful for (i.e., enhance the performance enough that something otherwise infeasible becomes feasible). The devices themselves aren't that expensive (<$100) so why doesn't every server have one? Is there some hidden cost I'm not aware of (socket real estate, power consumption)? Or is it just a chicken-and-egg problem with not enough engineers asking for them because they don't know how they work because they're not more widely deployed?	mmalone	9.087861	-5.3510485	comment	5.0	18.0	1495036598	8.301264
14386603	"""Team Foundation Server"" (Microsoft'"	"""Team Foundation Server"" (Microsoft's version control server) is what goes through my mind... poor choice of naming..."	tracker1	8.859255	-6.3436565	comment	5.0	35.0	1495362262	-8.95422
14433977	I'm only a couple of pages in but al	I'm only a couple of pages in but already a lot of this guide is incorrect for ARMV8-A (A64). Much is different, e.g. no thumb mode, no directly accessible program counter, no load multiple, no PUSH/POP, different stack pointer, etc. Looks good if you're interested in older ARM ISAs, which is probably more applicable for IoT etc.	sjtgraham	9.640925	-5.412593	comment	5.0	20.0	1495971388	-7.7563753
14443836	> Intel hasn’t given many details on	> Intel hasn’t given many details on AVX-512 yet, regarding whether there is one or two units per CPU, or if it is more granular and is per core.I can't imagine it being more than one per core. For context Knights Landing has two per core but that's a HPC focused product.> We expect it to be enabled on day one, although I have a suspicion there may be a BIOS flag that needs enabling in order to use it.This seems odd.> With the support of AVX-512, Intel is calling the Core i9-7980X ‘the first TeraFLOP CPU’. I’ve asked details as to how this figure is calculated (software, or theoretical)So lets work backwards here the Core i9-7980XE has 18 cores but as of yet the clock speed is not specified.A couple of assumptions:- We're talking double precision FLOPs- We can theoretically do 16 double pr	gbrown_	9.459137	-5.396688	comment	5.0	23.0	1496134645	8.056153
14444004	This stack overflow link is interest	This stack overflow link is interesting but most of the concern is over very theoretical issues. In practice a significant portion of the humanity uses multiple non-ECC RAM devices every day and yet most of us don't seem to experience widespread memory issues. I can't even remember the last time my desktop experienced a hard crash (well actually I can, it was because of a faulty... graphic card).I wish my phone fared that well, but I'm not sure RAM would be the first suspect for my general Android stability issues...	simias	9.560127	-5.52545	comment	5.0	22.0	1496136749	8.191464
14502461	if only we had a decentralized versi	if only we had a decentralized version control system...	acchow	8.850317	-6.3572598	comment	5.0	20.0	1496792019	-11.746105
14518284	My bet is it is apple and they are l	My bet is it is apple and they are looking for ARM emulation of x86 on new Mac laptops slated for next year.Oops, they are probably referring to Microsoft/Qualcomm's announced project here: https://www.extremetech.com/computing/249292-microsoft-decla...	bhouston	9.675519	-5.1915755	comment	5.0	37.0	1496967811	-7.659925
14521531	It's surprising that everyone is up 	It's surprising that everyone is up in arms about AMT and ME while not complaining in the slightest about SGX. SGX allows third parties to run code on your processor that is outside of your control. We're losing our computers to corporate interests. You are buying a device they can remotely manage, exert control with a higher privilege than yours, hide secrets inside your machine, and make all the decisions for you. To be even more dramatic, you are purchasing your own enslavement.	ccrush	9.421633	-5.2182975	comment	5.0	26.0	1497018006	7.8149276
14549154	Can't wait when this emoji bullshit 	Can't wait when this emoji bullshit hype is over. It has esthetics of an unaligned, overscaled <blink> element. Fonts should be strictly limited to monochrome.	mirekrusin	9.81399	-6.262294	comment	5.0	17.0	1497392425	-13.9541025
14564148	The Zen core had a pretty good (but 	"The Zen core had a pretty good (but no that amazing) success in the consumer market, because although people admired its multi-threaded performance, they were merely lukewarm about its single-threaded perf which ""just"" almost matches Intel. But oh boy, the Zen core in the server market is going to make a killing. Servers are all about multi-threaded performance (hence why 80% of the server market is dual socket). And it looks like a single socket EPYC is beating a dual socket Xeon... ouch. Finally a good kick in Intel's resting bottom."	mrb	9.260253	-5.2225275	comment	5.0	34.0	1497559093	7.8811216
14564639	Surely these processors introduce an	Surely these processors introduce another new level of NUMA dynamics? Each group of 8 cores has its own memory controller, own PCIe root complex, and then there is a crosslink between each group of 8 cores.Up until now you would (potentially) have to consider which socket you are on, and where your memory or IO devices (PCIe) are.Now you have the same considerations within a socket, as well as between sockets?	jamesfmilne	9.601125	-5.3732147	comment	5.0	17.0	1497562970	7.952358
14588637	Everyone commenting here DOES realiz	Everyone commenting here DOES realize that Intel acquired Altera relatively recently and is intending on releasing a new series of FPGAs and SOC chips correct? (Cyclone, Arria, Stratix lines). I imagine this is more about centralizing efforts on what was previously a major competitor to Xilinx. People that are only aware of the CPU market need not chime in unless they actually have information to add.	banachtarski	9.136136	-5.279068	comment	5.0	22.0	1497893086	8.111762
14589388	> AMD beat Intel with their K6 and s	> AMD beat Intel with their K6 and similar series of chips where, just like this time around, they were able to get way more performance per tick out of the CPU.There was in interesting submission the other day about performance of the Ryzen vs i7, and how their AVX2 instruction support isn't what it's racked up to be[1].  I'm not really qualified to assess the source or claims accurately, so I'll let others read it themselves and come to their own conclusions, but it was interesting.1: https://hashcat.net/forum/thread-6534-post-35415.html	kbenson	9.314952	-5.2050138	comment	5.0	15.0	1497898362	7.834411
14623079	So what's the cheapest fab in the wo	So what's the cheapest fab in the world?Maybe I should just stick with FPGAs.	chocolatebunny	9.121641	-5.2633443	comment	5.0	15.0	1498254917	8.177407
14637473	What RISC-V needs for high adoption,	"What RISC-V needs for high adoption, is a well-marketed product similar to the Raspberry Pi.Give me an open source model board with a kernel, network, graphics, peripherals, and general-purpose I/O. Give it to me cheap. Give it to me with a desktop environment.Give me example simple real-world use cases (""build a ping response box!"", ""build a home video recorder!"", ""build an internet-enabled light switch!"", ""build a sound amp!"", ""build a robot to take over the world!"", etc) and the hardware and software for a DIY-er to... do it by themselves.Give people hardware, software, and examples (monkey see, monkey do), and you'll find more people adopting RISC-V."	inetknght	9.391244	-5.603582	comment	5.0	21.0	1498490430	-10.56391
14643474	Build your own FPGA (2012)	Build your own FPGA (2012)	Cieplak	9.100547	-5.3194904	story	5.0	95.0	1498553562	8.324901
14648385	Has anyone seen a detailed writeup o	Has anyone seen a detailed writeup on how they are performing the x86->ARM64 recompilation? I would imagine it works something like a software hypervisor once the individual instructions are translated?	Skunkleton	9.771647	-5.5422645	comment	5.0	26.0	1498590994	-7.6784124
14651063	Is there a good idiots guide to unde	Is there a good idiots guide to understanding FPGAs and how to develop for them?  I have a CS background (so I've read both Hennessy & Paterson books) but don't know FPGAs nor have an EE background.Reading about FPGAs always confuses me, from the perspective of someone who thinks as a normal SW developer.  Like where does the FPGA begin execution, etc...TIA	kenjackson	9.065048	-5.3723474	comment	5.0	17.0	1498613540	8.430132
23408623	Gives out pretty negative feelings t	Gives out pretty negative feelings to me.A sad emojii with a face mask is pretty depressing, and even worse if you see the mask as political.Black lives matter is destroying cities across the USA.I'm sure it's just me, but I wonder if anyone else sees this?	nicc	9.779062	-6.2695684	comment	5.0	32.0	1591217796	-13.957201
23419956	It's hard to see what Docker is addi	It's hard to see what Docker is adding here since qemu is being run inside Docker. You could get almost identical functionality out of a bare VM image and not deal with the hassles of docker.	sjburt	9.626597	-6.4333425	comment	5.0	34.0	1591294898	10.061883
23447176	If you aren't compute bound, most wo	If you aren't compute bound, most workloads are dictated by the speed of main memory. And most business workloads spend their time waiting. Intel has historically focused on single core performance, this is what they are _really_ good at while this graviton part has decided to go wide and focus on many core.The memory controller on the ARM part must be excellent given that the Intel machine had 2x sockets.I don't think a core to core comparison or core to hyperthreaded core makes much sense. There are so many other unknowns, they only appear to be similar metrics. $/work_unit is the benchmark I would focus on in case like object storage.	sitkack	9.488902	-5.280497	comment	5.0	32.0	1591536475	7.8961654
23467696	> using processor features that aren	> using processor features that aren't exposed by the kernel or standard library).As someone who doesn't do any low-level work, could you give an example of these kinds of features? I'd like to read into some of them :)	gizmo385	9.683634	-5.363055	comment	5.0	20.0	1591717925	-7.529602
23475387	Very interesting and useful.However,	Very interesting and useful.However, does anyone have experience with obtaining RISC-V server hardware on a commercially useful scale, i.e. more than 1pcs? Back when ARM servers where all the rage, there were lots of announcements, but almost never products one could order. Is RISC-V any better in that regard?	corty	9.386373	-5.6325693	comment	5.0	22.0	1591782032	-10.563539
23478900	No they usually pair different archi	No they usually pair different architectures and it will crash if the OS doesn't catch and handle the invalid instruction error the CPU will throw.https://medium.com/@jaddr2line/a-big-little-problem-a-tale-o...	AnotherGoodName	9.88599	-5.3903537	comment	5.0	17.0	1591806236	-7.505751
23480066	> What does that mean? Advertise to 	> What does that mean? Advertise to whom?Runtime detection is the process querying what extensions are available, and then selectively using those. You adjust what the query returns to only return the common set.Runtime detection has been a pretty standard thing for well over a decade now - it's how we all manage to run the same compiled binaries over the years despite variability in SSE & AVX support. You don't download different versions of Chrome/Photoshop/Gimp/Premiere/Blender/Whatever compiled for different CPU micro-architectures, do you? You might if you run Gentoo I suppose, but that'd be about it.> Does it mean that I can’t compile with -mavx2 anymore?You already can't if you're shipping binaries to users unless you only support Skylake & newer? There's a lot of CPUs currently in 	kllrnohj	9.649235	-5.5532765	comment	5.0	34.0	1591811959	7.993095
23556105	> Of course you're the expert here, 	"> Of course you're the expert here, but isn't this a little nitpicking?No, a PLA [1] and a microcode ROM are two very different animals.A PLA is a way of compactly specifying combinatorial logic circuits (arrangements of and/or/etc. gates) and in the form that gave it the name, it is end user programmable (the P stands for Programmable).  But at its heart, a PLA is just a big arrangement of logic gates.  A signal goes in, and after the necessary gate delays settle, the result signal comes out.Microcode is literally a ""program"" and is 'executed' in the same way that all other programs are executed, one instruction at a time, addressed by a program counter.  There are also often branching instructions that generate new program counter values to use to sequence through the various steps.  Non"	pwg	9.6113205	-5.4856296	comment	5.0	24.0	1592424538	7.7154703
23556927	Wow another great post!I had a quest	"Wow another great post!I had a question about the following passage:>""The photo above shows part of the microcode ROM. Under a microscope, the contents of the microcode ROM are visible, and the bits can be read out, based on the presence or absence of transistors in each position. The ROM consists of 512 micro-instructions, each 21 bits wide.""I was curious why 21 bits? I would have expected this would have been a multiple or instruction size or perhaps also 16 bits. Or is there really no correlation between size of an instruction and it's underlying micro-ops?One other question I had was in regards to the ""Closeup of some transistors in the 8086"" photo where the author states:>""The circles are connections (called vias) between the silicon layer and the metal wiring, while the small squares"	bogomipz	9.615054	-5.473445	comment	5.0	23.0	1592428870	-7.4562716
23572576	ForgeFed: A federation protocol for 	ForgeFed: A federation protocol for interop between version control services	p4bl0	8.820655	-6.4012103	story	5.0	51.0	1592557130	7.7462816
23597899	There are plenty of applications whe	There are plenty of applications where single-threaded clock speed matters, and Intel still wins by a wide margin there. Cache size is also a factor, and high end Xeon's have more cache than any competing CPU I've seen.	lend000	9.455687	-5.209306	comment	5.0	27.0	1592809267	7.888627
23598384	While Graviton is impressive and pro	"While Graviton is impressive and probably an indication of things to come, you can't outright use ""Amazon rents them cheaper to me"" as an indication of the price performance of the chips themselves.Amazon is exactly the kind of company that would take 50% margin on their x86 servers and 0% margin on their Graviton servers in order to engineer a long term shift that's in their favor - the end of x86 server duopoly (or monopoly depending on how the wind is blowing)."	reitzensteinm	9.511752	-5.2058625	comment	5.0	40.0	1592816014	-8.311988
23604254	Rosetta 2 - the interesting bit was 	Rosetta 2 - the interesting bit was that it was going to pre-translate binaries instead of at runtime. The implications for actual VM emulation is that Rosetta won't work for run time environments like OS emulation. They touched on it briefly with the emulation technologies bit, but it looks like it will be separate from, and likely much less performant than Rosetta.	mrkstu	9.816317	-5.3545923	comment	5.0	26.0	1592852124	7.621538
23604777	Single-thread performance it tied to	Single-thread performance it tied to clock frequency, which cannot go above 5Ghz, so the only thing we'll see is more cores. It is actually blessing in disguise, this is exactly why ancient Core Duos, made in 2007 are still perfectly usable for office applications and even lightweight development.	SomeoneFromCA	9.555156	-5.2997627	comment	5.0	25.0	1592853448	7.883956
23605971	Will an ARM version of Logic support	Will an ARM version of Logic support loading x86 plugins?Last time Rosetta was on a process by process basis, so you might have to make some unfortunate choices.Edit:  https://developer.apple.com/documentation/apple_silicon/abou...> The system prevents you from mixing arm64 code and x86_64 code in the same process. Rosetta translation applies to an entire process, including all code modules that the process loads dynamically.	monocasa	9.780328	-5.3576813	comment	5.0	22.0	1592857277	7.623334
23605802	> Logic isn't worth much without plu	> Logic isn't worth much without plugins…Rosetta 2 cross-compiles Intel binaries to ARM. Why would VST/AU plug-in binaries be an exception?	CharlesW	9.813064	-5.3820353	comment	5.0	31.0	1592856661	7.6489334
23623149	How useful is ARM Linux virtualisati	How useful is ARM Linux virtualisation nowadays? If you use Docker then are the ARM variations as mature as alpine based Dockers containers? Can you really deploy to x86 with just ARM Docker testing? If not then what utility do you gain here?	sys_64738	9.573055	-6.336042	comment	5.0	22.0	1592964649	10.056185
23643095	I think you missed the point. What a	I think you missed the point. What about all the dependencies of your code that are only compiled for x86_64? The article isn't talking about native apps on the laptop, it's about apps that run on a server but that you are developing locally.You can't run your x86 docker image on your ARM mac without emulation. You can't run your x86 Windows VM without emulation etc.Of course there are solutions like using a remote server or a VM in the cloud, but if you're buying a decent machine then you would normally expect to be able to run these things locally.	bobalob_wtf	9.57749	-6.297616	comment	5.0	24.0	1593105967	9.9949665
23643127	I've been developing on a Mac for ye	I've been developing on a Mac for years, and I've never needed to use Docker or virtualisation to do it. (I've been doing game development, and now web front end development. I'm sure the major game engines and browsers will be ported to run on ARM chips (although it may take a while)).Honest question: What sort of development regularly requires using docker or virtualized OSes?	armagon	9.599065	-6.3136454	comment	5.0	18.0	1593106105	-7.966342
23780603	It's no secret that NVIDIA is involv	It's no secret that NVIDIA is involved with RISC V. And don't forget Intel v Ampere (the company, not the NVIDIA chip). Intel is facing incredible competition. Once a crack appears in the server market and Arm rushes in, Intel will be in a very, very bad situation. Especially with 100,000+ employees compared to NVIDIA's 13,000.EDIT: Downvotes? Really?	staycoolboy	9.324095	-5.5880947	comment	5.0	19.0	1594304843	-10.571057
23800784	The thing is the kernel is kinda hur	The thing is the kernel is kinda hurting for maintainers and opening up the path for the next generation of systems programmers (most of whom don't want to touch C any more than they have to) has to be something Linus is more likely to prioritize than in previous decades.	photon12	9.603762	-5.857373	comment	5.0	51.0	1594460390	-7.717365
23809537	Since I wrote this I've seen a bunch	Since I wrote this I've seen a bunch of cool automated profile READMEs show up.Two of my favourites:Zhi Yang built one which fetched their latest tweet, renders it to a PNG using headless Chrome (from an R script) and adds it to her profile: https://github.com/zhiiiyangKatie McLaughlin built one that does an ASCII art render of her profile: https://github.com/glasntI'm collecting these in a Twitter thread as I spot them: https://twitter.com/simonw/status/1281435464474324993	simonw	8.780911	-5.9898567	comment	5.0	16.0	1594538554	-11.047266
23822953	There's not much use for AVX-512 in 	"There's not much use for AVX-512 in the kernel.  But, from the people who are using it I've heard good things.  It's an enormous collection of new instructions.  But, a lot of them came from the Larrabee team --which was probably the greatest case of high-perf software engineers having direct influence over the direction of a CPU.  Otherwise, the history SSE and AVX has largely been software engineers requesting features and hardware engineers replying ""Do not understand.  How does that feature improve our SPECfp score?  Rejected."""	corysama	9.469735	-5.56481	comment	5.0	54.0	1594659798	8.036217
23823015	Intel? Dude, have you seen Arm's Jav	Intel? Dude, have you seen Arm's JavaScript instructions? Or RISC-V's user-defined instructions? (and Arm announced the same thing at Arm Tech Con last year)Someone is missing the boat: custom ISA is the future.	staycoolboy	9.580053	-5.496825	comment	5.0	23.0	1594660110	-7.774949
23831597	Does anyone know what mode of AES th	"Does anyone know what mode of AES that SEV (or SME) uses?I have been reading though all of AMD's documents, and I cannot find what mode of AES that SEV (or SME) uses. I find it extremely odd that this is not called out in any of AMD's documents, and frankly a bit worrisome.For the record, ""A Comparison Study of Intel SGX and AMD Memory Encryption"" [1] claims a modified version of AES-ECB is what SEV uses, BUT their reference links to AMD's whitepaper [2], which does NOT say anything about their mode, so I do not consider [1] to be a trustworty resouce.[1] https://caslab.csl.yale.edu/workshops/hasp2018/HASP18_a9-mof...[2] https://developer.amd.com/wordpress/media/2013/12/AMD_Memory..."	kop316	9.454126	-5.3013487	comment	5.0	24.0	1594732930	7.853762
23835156	I wondered when I can buy a AMD work	"I wondered when I can buy a AMD workstation with official ECC support, looks like that will finally be possible in September. Hope the price will be OK.There are higher base frequencies but lower turbo on the new TR Pro vs Ryzen 9:  | name   | CPUs  | base | turbo|
  | 3955WX | 16/32 | 3900 | 4300 |
  | 3945WX | 12/24 | 4000 | 4300 |
  | 3950X  | 16/32 | 3500 | 4700 |
  | 3900XT | 12/24 | 3800 | 4700 |

Edit: the new, much higher TDP is not welcome news."	muro	9.380265	-5.4317513	comment	5.0	45.0	1594748770	-10.012731
23923864	Why do you feel that characters that	Why do you feel that characters that together compose words are adult, while characters that form an image conveying human emotion are not?Is a laughing emoji not the most efficient way to convey that you're joking or think something is funny?	RhodesianHunter	9.77482	-6.2639627	comment	5.0	15.0	1595474346	-13.966019
23929855	The other problem with using an FPGA	"The other problem with using an FPGA here is that microcontrollers are cheap and have great cheap dev boards. FPGAs, not so much. I've wanted to just ""drop in"" a small FPGA in several designs, the way you can drop in a microcontroller, but there's no available FPGA that's not a massive headache in that use case. Trust me, I've looked.The iCE40 series is almost there but not quite. It's a bit pricey (this is sometimes okay, sometimes a dealbreaker) but
its care and feeding is too annoying. Who wants to source a separate configuration memory? Sometimes I don't have the space for that crap.If any company can bring a small, cheap, low power FPGA to the market, preferably with onboard non-volatile configuration memory, a microcontroller-like peripheral mix (UART, I2C, SPI, etc.), easy configura"	exmadscientist	9.151275	-5.322842	comment	5.0	25.0	1595525553	8.267571
23931070	Why exactly does one need to license	"Why exactly does one need to license an ISA? AMD doesn't license x86 from Intel, AFAIK.What's the IP that Apple would otherwise be infringing upon if they didn't license? The ""ARM"" trademark?"	derefr	9.484431	-5.2500396	comment	5.0	16.0	1595531424	-7.5958467
23936356	Me, I'm ready for a RISC-VI or RISC-	Me, I'm ready for a RISC-VI or RISC-W.It would be quite a lot like RISC-V, except it would:- have rotate instructions in the core set- have popcount instructions in the core set- represent bool `true` with ~0 in the ABI- have all the add, subtract, and comparison instructions set two registers (in addition to the destination), one to 0 and the other to ~0, according to a test of the result.- have conditional branch and conditional move designate a register to be tested for equality to zero. Conditional move would move from one of two register sources, either of which could be the same as the destination.- have two ISA registers fixed at 0 and -1.	ncmncm	9.580259	-5.856207	comment	5.0	24.0	1595571367	-10.474983
23937066	I like the idea of RISC-V, applaud t	I like the idea of RISC-V, applaud the designers and wish it well, but there is a lot of slightly purple prose here about the benefits of an open and 'free' ISA.I can see how RISC-V works for SoC designers who either 1. Want to cut costs to a minimum or 2. Want to add their own proprietary extensions to distinguish it from the competition. I'm less sure that it works for everyone else.The instruction set running on your Raspberry PI is the same as that running on your iPhone which in turn is the same as that running on an Ampere Server. Do we really want to be faced with a multiplicity of distinct ISAs?	klelatti	9.406677	-5.6562886	comment	5.0	25.0	1595579067	-10.523742
23974549	It's easier to switch from one fab t	It's easier to switch from one fab to another than from x86 to another cpu architecture.	legulere	9.647827	-5.3320894	comment	5.0	23.0	1595935386	-7.818153
23983704	SiFive Core IP 20G1	SiFive Core IP 20G1	lelf	9.378771	-5.635853	story	5.0	85.0	1595999869	-10.676791
23985589	The thing about x64 is that it's rea	The thing about x64 is that it's really complex instruction decoding system is unavoidable overhead. Especially since every processor translates the x64 instructions into processor-specific micro-instructions. And then those are run by the processor.It seems to me that a simpler instruction set that occurs much less overhead than the above will simply have a higher performance ceiling. The only advantage I see in x64 is that the complex instructions are a form of 'compression' for the micro-instructions. Maaaaybe the resultant bandwidth reduction in reading isntructions is worth the performance overhead of x64 instruction decoding.	rocqua	9.678383	-5.545453	comment	5.0	19.0	1596023280	-7.8293824
23995843	The Design of Scalar AES Instruction	The Design of Scalar AES Instruction Set Extensions for RISC-V	gbrown_	9.528526	-5.7759476	story	5.0	58.0	1596097655	-10.540162
24010344	RISC-V is an ISA rather than silicon	RISC-V is an ISA rather than silicon, GPUs are generally black boxes that you throw code at. There's not much to standardize around	mhh__	9.365	-5.664342	comment	5.0	38.0	1596213022	-10.593843
24010512	This makes no sense. nVidia is alrea	This makes no sense. nVidia is already transitioning away from ARM and shipping RISC-V controllers in their GPUs. They already gave up on Denver, their high perf ARM server chip. Why would they buy ARM?	oskhan	9.197091	-5.2670827	comment	5.0	15.0	1596213963	-10.519137
24023753	The funny thing is that the Intel 88	"The funny thing is that the Intel 8800 (iAPX 432) was supposed to be Intel's big new thing, a 32-bit processor designed for object-oriented languages. Unfortunately, that project fell behind schedule and Intel quickly threw together a chip, the 8086, so they'd have something to sell until the iAPX 432 was ready.Unexpectedly, the 8086 took over the world and the iAPX 432 was a failure. The bad design that shipped beat the good design that was late and slow. Intel repeated this with the Itanium, their super new design that was supposed to take over in 2001. Again, the superior design was slow, late, and a market failure.I'm not sure what the moral of this is. Maybe it illustrates the ""worse is better"" principle."	kens	9.490988	-5.2328267	comment	5.0	17.0	1596314685	-7.6894407
24039010	I’m curious why we have aarch64 and 	I’m curious why we have aarch64 and not ARM64?	ed25519FUUU	9.700325	-5.372255	comment	5.0	17.0	1596468833	-7.782495
24051659	System on Chip wrapping the SERV RIS	System on Chip wrapping the SERV RISC-V soft processor	homarp	9.385127	-5.6641703	story	5.0	75.0	1596558974	2.1325603
24092605	Reverse-engineering the Intel 8086's	Reverse-engineering the Intel 8086's instruction register	parsecs	9.706807	-5.530622	story	5.0	229.0	1596902317	-7.3961053
24112780	This is a thing I think people const	This is a thing I think people constantly underestimate... Intel's cores are not necessarily dramatically more broken than everyone else's chips, they just pay for more auditing and public research.	josh2600	9.417978	-5.196548	comment	5.0	34.0	1597086076	7.814504
24114402	Cheri C/C++ Programming Guide: Capab	Cheri C/C++ Programming Guide: Capability Hardware Enhanced RISC Instructions [pdf]	cperciva	9.402894	-5.714558	story	5.0	50.0	1597096117	-10.574217
24155671	From project's FAQ (https://thesifte	From project's FAQ (https://thesifter.org/Home/Faq):Q: What is not in the Sifter?A: It does not contain the texts of books or recipes.Seems to be a bit useless without it.	dinamic	9.739658	-5.4295263	comment	5.0	23.0	1597396840	2.4123406
24176705	> MIPS was pretty popular among earl	"> MIPS was pretty popular among early Shenzhen tablets.> Then they just disappeared. Either MIPS screwed up or ARM did something really smart. My money is on the former...MIPS SoCs simply fell too much behind. They kept presence in the STB, and router boxes for some time, but even there they lost due to overall ""deadness"" of the entire ecosystem:Want latest compiler work, and mainline GCC support? Go for ARMWant to not to have to support your own Linux fork? Go for ARMWant more IP coming from a single vendor that just core, interrupt, controller, and DMA? Go for ARMWant to work with an IP vendor whose sales are not part time lawyers? Go for ARMWhen MIPS understood that they are losing, they simply gave up on competing, and improving.And in the end, the lunch went to MediaTek because it was"	baybal2	9.470698	-5.4168763	comment	5.0	20.0	1597573922	-10.259216
24181087	I've been hearing about Intel’s Acti	I've been hearing about Intel’s Active Management Technology for years, but I'd like to see a demonstration of how an attack would work. I have an unused laptop with:1. an Intel CPU that supports the vPro feature set2. an Intel networking card3. the corporate version of the Intel Management Engine (Intel ME) binary (well, definitely, a corporate laptop that used to get updates, but how do I check for ME?)Is there a website I can visit that can initiate a remote takeover (I'm consenting to it)?  Why isn't this possible?  What other step is required on my side to make it possible? Is it possible only through the physical ethernet connection? Why aren't we seeing wide scale exploits based on AMT?	cantrevealname	9.469474	-5.2296596	comment	5.0	27.0	1597610264	7.805309
24190961	I don’t think GNU patch shares histo	"I don’t think GNU patch shares history with Larry Wall’s original. https://directory.fsf.org/wiki/Patch seems to say so: ”GNU version of Larry Wall's program that takes ""diff's"" output and applies it to an original file to generate a modified version of that file”I tried to verify by looking at their git repo, but that stops at “Import of patch-2.1.tar.gz” (https://git.savannah.gnu.org/cgit/patch.git/log/?ofs=450)"	Someone	8.781639	-6.3930283	comment	5.0	17.0	1597692842	-11.708294
24226740	ARX, Arthur and RISC OS (2012)	ARX, Arthur and RISC OS (2012)	mr_golyadkin	9.391973	-5.6646996	story	5.0	58.0	1597948256	-10.55096
24247014	Author here if anyone wants to discu	Author here if anyone wants to discuss the internals of the 8086.	kens	9.617402	-5.4142675	comment	5.0	33.0	1598128036	-7.512983
24255703	Alibaba Reports Their XT910 RISC-V C	Alibaba Reports Their XT910 RISC-V Core to Be Faster Than an Arm Cortex-A73	rbanffy	9.489788	-5.364792	story	5.0	36.0	1598220448	7.825065
24256987	Do you have any suggested resources 	Do you have any suggested resources for learning to implement a CPU emulator, such as for RISC-V?	triyambakam	9.429246	-5.340771	comment	5.0	16.0	1598235028	-6.690434
24268799	Speaking of RISC-V, does RISC-V have	"Speaking of RISC-V, does RISC-V have any real traction?Not niche traction and announcements here and there, actual heavy investments...Or is it more like an ""open arch"" fantasy thing, kind of the cpu analogous to Ogg Vorbis and Open Moko?"	coldtea	9.381726	-5.6773467	comment	5.0	18.0	1598339260	-10.571007
24314945	Bit flips in RAM happen often enough	"Bit flips in RAM happen often enough to be an issue.I make a desktop program with a sizeable installation base and it uses a form paged on-disk storage for larger data sets. The code has a fair amount of asserts in it and one specific assert would keep failing in a very tiny percentage of the cases. I kept reviewing the code and scratching my head before finally adding some extra logging for this case.Lo and behold, in all failed cases an argument passed to a function had one of the bits set for no apparent reason. I.e. the offsets of pages in the cache would be:    00000000000000 ...
    00000000100000 ...
    00000000200000 ...
    00000000300000 ...

But the args would come in as    80000000100000
    00040000200000
    01000000300000
    ...

Followed up with the people who reported th"	apankrat	9.910012	-5.672085	comment	5.0	20.0	1598694264	8.303783
24372583	I have a web app that's struggling i	I have a web app that's struggling if there are more than 2 concurrent users per CPU core. It's displaying incompressible large resolution images with <100ms latencyEDIT: not sure why I'm downvoted, I'm just presenting my use case. They are multigigabyte images encoded with custom wavelet compression that are cut into tiles (think google earth), each user needs 5-10 tiles every second	yread	9.891751	-5.3773355	comment	5.0	20.0	1599204344	8.101066
24380249	Interesting that the group behind th	Interesting that the group behind this is Tsinghua-Berkeley Shenzhen Institute, which is sponsored by UC Berkeley as well as a major Chinese university and the Shenzhen government.China is quite interested in RISC-V gaining traction as trade and security barriers rise and they work to build up their domestic technology sector.Going into wild-ass speculation mode, if this board really is affordable, I wonder if it's being subsidized by the Chinese gov't to encourage RISC-V adoption.If I understand correctly, it's hard to make a cheap RISC-V Linux board with a price in the same order of magnitude as Raspberry Pi, because the Pi benefits from the availability of cheap, powerful ARM-based CPUs that were mass-produced for the mobile phone market. Linux-capable RISC-V parts have nowhere near the	byset	9.355685	-5.647255	comment	5.0	29.0	1599264788	-10.576504
24385558	One thing I've always wondered: in w	"One thing I've always wondered: in what ways is the design of microcode instruction-sets for CISC-ISA CPUs, different from the design of outward-presenting RISC ISAs?For example, does microcode tend to have instructions that ""half complete"" a transfer-level operation, leaving some registers in an indeterminate state, under the assumption (which is, in practice, a guarantee) that they'll always have another ucode op executed after them that does ""the rest of"" the operation and so puts things right?Or, for another example, on CISC CPUs that have a small set of system-visible registers, and use register renaming to map them to a larger register file (e.g. x86_64), do the user-visible register names make it into the microcode; or do the microcode ops function directly on register-file offsets?"	derefr	9.611553	-5.6765494	comment	5.0	20.0	1599329105	-10.458679
20021427	hmm, I feel ARM performance is a bit	hmm, I feel ARM performance is a bit like nuclear fusion. It's always the next generation that will deliver an order of magnitude performance increase. Yet some how ARM single core performance is still shit compared to x86. (No matter how much I hope and pray for that to change, cause x86 needs to die)	holstvoogd	9.6180725	-5.2890677	comment	5.0	22.0	1558958604	-7.7611547
20026021	"""We could break the stranglehold of "	"""We could break the stranglehold of i386 on the software industry and free developers to experiment with novel CPU architectures without having to worry about whether our favorite language compiles to it.""WASM is equivalent to early 80s ISAs but with different opcodes. Native WASM would be most efficient."	ryacko	9.6900015	-5.585905	comment	5.0	30.0	1558999803	-7.708341
20044582	My CPU can't isolate processes due t	My CPU can't isolate processes due to Intel cutting corners with speculative execution.My memory is vulnerable to row hammer due to vendors cutting corners while pushing for increased DRAM density.And my - supposedly - non-volatile storage is broken due to vendors gaming benchmarks with fsync.Is there any component in a modern consumer computer that isn't fundamentally broken in one way or another?	layoutIfNeeded	9.599128	-5.5242124	comment	5.0	18.0	1559159467	7.9374666
20128987	Before I can be bullish on RISC-V, I	Before I can be bullish on RISC-V, I really need to see a set of basic bitwise instructions -- minimally, popcount and count-leading-zeros (i.e. integer log-base-2).When I last looked at the (tabled) bitwise extensions, they had been bloated out of all reason with really wild bit-shuffling apparatus.I understand those last are very useful to some people, but if they interfere with getting a fast popcount in the core ISA, we can't afford them.	ncmncm	9.545822	-5.811527	comment	5.0	34.0	1559944806	-10.5247135
20155016	How does new instructions, register 	How does new instructions, register renaming, etc work with different compilers? Say I'm using Visual Studio to compile C++, will it take advantage of the new processor features by default? What about if the binary runs on a different CPU, will the compiler include feature checks and multiple code versions?	sorenjan	9.831509	-5.759147	comment	5.0	18.0	1560258338	-7.4645452
20157764	There's something magical about writ	There's something magical about writing code in C for these old 8-bit and 16-bit CPUs. You really feel like you're in control. You can inspect the assembly output and actually understand it. You can do inline assembler to optimize critical sections. 32-bit CPUs lose some of that magic, because the instructions sets are usually much more complex. However, RISC ISAs like RISC-V are still plenty of fun...	phendrenad2	9.565684	-5.7117305	comment	5.0	24.0	1560275520	-10.381354
20166135	Does Ry(Zen) now support AVX-512 and	Does Ry(Zen) now support AVX-512 and thunderbolt?It will be interesting to see if Jim Keller comes up with something for intel too, now that he's there and no longer with AMD.	Keyframe	9.29504	-5.3188014	comment	5.0	22.0	1560355727	7.911179
20178597	AMD Plans 64-Core Threadripper CPU: 	AMD Plans 64-Core Threadripper CPU: Report	rbanffy	9.388434	-5.2423363	story	5.0	34.0	1560460222	7.971786
20204337	Emojis are one of the few reasons wh	Emojis are one of the few reasons why people update their OS. It is a great win for security.	yoz-y	9.798028	-6.263811	comment	5.0	17.0	1560787369	-13.953849
20205736	So what is this memory wall?> this c	So what is this memory wall?> this concept revolves around the idea that computer processing units (CPUs) are advancing at a fast enough pace that will leave memory (RAM) stagnant> According to Moore’s Law, which states that the number of transistors in a circuit doubles every two years, CPUs will eventually become too fast to yield any noticeable difference in computing speed. Once we reach this so-called memory wall, program/app execution time will depend almost entirely on the speed at which RAM can send data to the CPU. So even if you have an incredibly fast processor in your computer, it’s function may be limited to the speed of your RAM.Oh, it's utter nonsense.For one, it's ignoring that the cache speeds scale right along with the CPU.  You could get rid of DRAM entirely to prove the	Dylan16807	9.83568	-5.37796	comment	5.0	21.0	1560794756	8.09579
20205903	Does x86 maintain any real advantage	Does x86 maintain any real advantages over ARM at this point, other than the ability to run legacy software? I'm genuinely asking; all I know is that ARM devices can be really powerful these days and they're also much more power efficient.	_bxg1	9.658654	-5.293126	comment	5.0	20.0	1560795682	-7.773932
20225414	I understand why some are downvoting	I understand why some are downvoting this but, with consumer internet connections being 1000up/down and a threadripper giving you like 100 cores for a few bucks, this can be a very handy solution, with quicker deploys and easier management.security might be too much of a concern for some applications	gameswithgo	9.774958	-5.452463	comment	5.0	34.0	1560966549	8.193888
20231937	Anyone have any experience with AMD 	Anyone have any experience with AMD and ECC memory? I was going to do an AMD build for a NAS but the support for ecc was kinda like:“We enabled it but didn’t test it and we don’t guarantee it will work.”	wil421	9.410798	-5.495186	comment	5.0	46.0	1561031889	8.169702
20234268	Alternative history time: what if MI	Alternative history time: what if MIPS R4000 hasn't been killed by Pentium? Would we be running R10000-compatibles now?	segfaultbuserr	9.511453	-5.4204106	comment	5.0	34.0	1561046933	-8.20394
20256274	I have designed ASICs and FPGAs for 	I have designed ASICs and FPGAs for nearly 30 years, and seen the evolution of this technology first hand. To say that FPGAs have the wrong abstraction is to not understand what an FPGA is and what is intended to accomplish.Transistors are abstracted into logic gates. Logic gates are abstracted into higher-order digital functions like flip-flops, muxes, etc. It is the mapping of algorithms/functions onto gates that is the essence of digital design. This is difficult work that would be impossible at today's scales (5-billion+ transistors) without synthesis tools and HDLs. And, given that an ASIC mask set costs 1MM+ for a modern geometry, it needs to be done right the first time (or at least the 2nd). Furthermore, the mapping to gates needs to be efficient, throwing more gates at a problem i	nonlinearzone	9.09549	-5.3334713	comment	5.0	29.0	1561304520	8.295367
20305517	Intel is a thankless job; if you kee	Intel is a thankless job; if you keep people safe, nobody knows you are doing anything, but if something happens, you're the first to get blamed.  Just because you're ignorant about what people working in various intelligence agencies are doing, doesn't mean they aren't doing anything.  I worked in various intel fields for most of my adult life, and it gets tiring to hear that intel agencies don't do anything.	dx87	9.334578	-5.1883197	comment	5.0	19.0	1561736719	7.670303
20307847	Eh, the lean of the article and the 	Eh, the lean of the article and the comments on the original HN thread were knocking AMD for it as if they were going against American interests by being successfully bullied by China into giving up valuable IP.AMD is saying that a) the IP was not of the highest value or performance, and b) it's unlikely to go against American national security interests when DoC and DoJ both give explicit sign-off. Remember too that this was in the Obama era, when the likelihood of sailing the country down a river for $$$ was lower.	unethical_ban	9.2335825	-5.2083707	comment	5.0	16.0	1561749091	7.835496
20332310	> but now I think we're reaching the	> but now I think we're reaching the point where single thread performance is so importantEver since Denard scaling stopped, the biggest boosts to performance have been in increasing the parallelization opportunity, both at the SIMD level and at the multi-core level. Admittedly, working in HPC gives me a biased view, but everyone I see has resigned themselves to processors ceasing to give meaningful boosts to single-threaded performance.Moreover, the ceiling you could get in boosting single-threaded performance with a perfect branch predictor (for conditional branches) over current state-of-the-art is around 4%. There's just not a lot of upside to be had, and even just using the extra space for another core looks preferable at that low ceilings. Extra area for the branch predictor is likel	jcranmer	9.6651945	-5.4545517	comment	5.0	16.0	1562044258	8.099735
20340006	Honestly, seems like a big waste of 	"Honestly, seems like a big waste of time to me.  Generating the code wouldn't be free, so you pay for that.  IO, generally, is fairly expensive, so you are now weighing the costs of IO against the savings in instructions/reduced branches. So where are the savings?  OS level mutexes?Basically all of the modern CPUs are going to do a really good job at optimizing away most of the checks cooked into the code  Modern CPUs are really good at seeing ""99% of the time, you take this branch"" and ""these 8 instructions can be ran at the same time"".What they can't optimize away is accessing data off CPU.  The speed of light is a killer here.  In the best case, you are talking about ~1000 cycles if you hit main memory and way more if you talk to the disk (even an SSD).  You can run down a ton of branch"	cogman10	9.658959	-5.376263	comment	5.0	18.0	1562106891	8.069933
20370303	This isn't directly related to Zen 2	This isn't directly related to Zen 2 (sorry), but it's something I've been wondering about:How do processors that split ops into uops implement precise interrupts? I sort of understand how the ROB is used to implement precise interrupts even with pipelining and OOO, but I don't quite see how processors map uops back to the original instruction sequence.	rrss	9.778143	-5.6547813	comment	5.0	26.0	1562429131	-7.065722
20391504	Ask HN: What's the Future of Red Hat	Ask HN: What's the Future of Red Hat Developer Post IBM Acquisition?	friendscallmejw	9.922095	-5.454461	story	5.0	17.0	1562679168	-9.417508
20420459	I hope they're going to figure out A	I hope they're going to figure out AArch64 support for the Raspberry Pi soon, especially since they have launched the models with larger amounts of RAM. Having a true AArch64 Raspberry Pi would be really nice.	qalmakka	9.710955	-5.363695	comment	5.0	34.0	1562937673	-7.8162007
20489251	> At this point, Intel doesn’t have 	> At this point, Intel doesn’t have bfloat16 implemented in any of its processors, so they used current AVX512 vector hardware present in its existing processor to emulate the format and the requisite operations.  According to the researchers, this resulted in “only a very slight performance tax.”Why implement bfloat if you get just slightly less performance emulating it with AVX512, which already exists? Maybe it’s an “us too” claim?	eatbitseveryday	9.446393	-5.4971395	comment	5.0	33.0	1563669995	8.066713
20505408	> Unikernels have demonstrated enorm	> Unikernels have demonstrated enormous advantages over Linux in many important domains, causing some to propose that the days of Linux's dominance may be coming to an end.Where are unikernels widely used?	rapsey	9.930155	-6.231795	comment	5.0	42.0	1563872981	-12.382503
20505512	I don't think that this statement de	I don't think that this statement describes the reality we live in.To me, unikernels feel quite a bit like statically linked server binaries running under an unprivileged UID - but you're choosing not to trust Linux' (or any other kernel's) user separation facilities, but your hypervisor's domU separation facilities instead. In exchange, you lose virtually all of your existing OS's amazing debugging and performance analysis/tuning tools. It's not a tradeoff I'd readily consider.	c0l0	9.927612	-6.201986	comment	5.0	34.0	1563874844	-12.3637
20525127	How long before Android runs properl	How long before Android runs properly on RISC-V?And will they be able to persuade app-makers to rebuild all apps for the platform - x86 Android shows how hard that can be.	londons_explore	9.395883	-5.6555123	comment	5.0	34.0	1564060900	-10.58318
20526349	Reminds me of Adapteva's Parallela, 	Reminds me of Adapteva's Parallela, which I bought and was really excited about, but was obviously a commercial failure. I work on software that has an above-average (but far less than HPC) need for concurrency, but even our most demanding customers seem to be content with off-the-shelf Intel, either because they don't need THAT many cores, or because they value the more sophisticated instructions (like encryption acceleration, etc.) I'm curious to know what kind of use cases y'all work on that might crave something like this.	TallGuyShort	9.860595	-5.6042647	comment	5.0	25.0	1564069432	8.464834
20542611	Isn't that what security researchers	"Isn't that what security researchers are supposed to do? Find the most implausible-sounding attacks, get them to work at least some of the time?I would not be reassured by someone telling me ""well, most of the time, there's too much noise to get a reliable side channel out of Spectre."""	geofft	9.660468	-5.5893664	comment	5.0	20.0	1564243352	7.70454
20545617	I don’t think the argument holds ver	I don’t think the argument holds very well. Apple has made three processor architectural changes including one on the current OS. “Too complicated” doesn’t really align with the execution history Apple has. The fat binary support Apple has is a huge tool and the ability to add instructions and optimizations to their chips to help with x86 emulation is a big deal.I don’t know if Apple will ever actually do this, but it seems odd to suggest it’s not feasible given past performance and their current technology holdings.	Moto7451	9.733436	-5.2306976	comment	5.0	42.0	1564282915	-7.757061
20556384	>remember that the initial RISC prop	>remember that the initial RISC proposal was in contrast to the PDP instruction set, which was kind of ridiculously over specialized for the technology of the time.That's a good point and I expect that it still somewhat holds true today: many of the RISC supporters (and I'm one of them) effectively assimilate CISC with x86 since that's by far the most popular CISC instruction set out there these days[1]. And x86 is the C++ of instruction sets: decades and decades of legacy feature which shouldn't be used in modern code, a large selection of paradigms copied from whatever other instruction set was popular at the time. You want to do BCD? We have opcodes for that (admittedly no longer supported in long mode, but it's there). Also do you like prefixes? Asking for a friend.But obviously that's	simias	9.536278	-5.714258	comment	5.0	38.0	1564417914	-10.510214
20577477	What Is RISC? (1993)	What Is RISC? (1993)	msla	9.37904	-5.701649	story	5.0	34.0	1564601584	-10.581631
20643622	Xeon has been making 50–70% profit m	Xeon has been making 50–70% profit margin depending on the Xeon type. Intel's profit margins will take a hit when they are forced to cut prices. It's unlikely that AMD has enough manufacturing capacity to fill all demand, so Intel will  still make profit.History:AMD had similar upper hand against Intel with their Athlon  processor 20 years ago. Intel's transition to the 180 nm process was delayed and AMD's K7 Athlon was superior microarchitecture.  Intel's response was to lower profit margins until AMD was  in the ropes again.This time AMD has better change, but don't count out Intel. AMD's success depends on their profit margins when competing against Intel. If Intel force AMD's profits close to zero, it can spoil AMD's technical win.https://www.macrotrends.net/stocks/charts/INTC/intel/pr	Nokinside	9.182904	-5.1919565	comment	5.0	31.0	1565265165	7.8166366
20648740	Tell HN: Somu is live. Tiny, FIDO2, 	Tell HN: Somu is live. Tiny, FIDO2, open source security key	ecesena	9.394126	-5.9506235	story	5.0	32.0	1565298245	-13.435741
20661078	On the post, if Linus is referring t	"On the post, if Linus is referring to low-end Xeon and workstation non-Xeon lacking ECC, I think it's completely idiotic. Nearly all infrastructure should be baking in ECC as standard rather than some ""option"" to not have silent, unknowable, probabilistic corruption that is realistically realizable on a near-daily basis given the orders of magnitude of network, storage and computational volumes of today (and the future) by ever lower tiers of end-users and common examples of network infrastructure.DEFCON 19: Bit-squatting: DNS Hijacking Without Exploitation (w speaker)
https://youtu.be/aT7mnSstKGs"	dfeojm-zlib	9.479072	-5.528191	comment	5.0	39.0	1565429428	8.275312
20664091	I'm not sure why the performance ben	I'm not sure why the performance benefits hit a limit with 10 workers on a 64-core machine. It doesn't look like there should be too much communication complexity given largely disjoint workloads.Are we hitting memory/IO bottlenecks?	nymonym	9.649997	-5.347792	comment	5.0	22.0	1565466054	7.998259
20744251	Imagine Linus trying to get a job.  	Imagine Linus trying to get a job.  “So we like that you created one of the most popular operating systems ever, and your version control system is also very nice.  But do you only have two projects in your portfolio?”“Those two take up most of my time, but I also have this scuba diving app.”“This is great, it shows that you can ship a full product.  You should have led with this.”The moral of the story is that this is like seeing a finger painting made by Leonardo da Vinci.  It’s cool, but I expected something different.  Like, it’s just too normal compared to the other things Linus’ name is attached to.	parsimo2010	9.299757	-5.858157	comment	5.0	29.0	1566281781	-5.3854456
20749597	I can't see why it would.  This woul	I can't see why it would.  This would have mattered 20 years ago when there weren't more compelling ISA's out there.  But that's not today's world: ARM is fairly ubiquitous and dirt cheap while RISC-V is a promising and open source up-and-comer.  This seems like a relatively non-event (or worse: confirming that it's effectively a dying/dead platform) unless one has a significant investment in Power.	blihp	9.478819	-5.545217	comment	5.0	29.0	1566322335	-10.460175
20793185	‎Today, 28 years ago Linus Torvalds 	‎Today, 28 years ago Linus Torvalds announced Linux on comp.os.minix	iamkeyur	9.481978	-5.7680845	story	5.0	32.0	1566743543	-8.225197
20859067	The articles will keep flowing for m	The articles will keep flowing for months/years and it'll become conventional wisdom that Epyc always pummels Intel. Intel marketing must be on Defcon 1.	frou_dh	9.314055	-5.219626	comment	5.0	84.0	1567431937	7.8698983
20879571	In my experience, putting CD into pl	In my experience, putting CD into place makes a significant improvement to the SDLC only when automated unit tests are a part of that life cycle. I have never seen the benefit of implementing a system like Jenkins if the only automated testing portion is 'does it compile without error? Yes? Then, good to go!'. Without the automated unit tests it just doesn't seem like a worthwhile endeavor to me.	adossi	9.305926	-6.411573	comment	5.0	23.0	1567618941	6.212859
20915163	I read a little bit about this a whi	"I read a little bit about this a while ago. Is there still a way to buy these? I've heard great things about systems development on the MIPS platform but haven't had a great reason to invest myself in learning the architecture. Any opinions from others on that subject would be appreciated too.
I missed the boat with the Imgtec Creator CI20 board, unfortunately. Does anyone know of any other Linux capable MIPS development boards on the market?"	ajxs	9.48982	-5.5676503	comment	5.0	25.0	1568002462	2.6795826
20985268	An interesting discussion in Linus's	An interesting discussion in Linus's release announcement email about userspace regressions: https://lkml.org/lkml/2019/9/15/241	thestoicattack	9.718228	-5.7215333	comment	5.0	58.0	1568648916	4.28221
14670970	It's absolutely astounding to me tha	"It's absolutely astounding to me that anyone could claim, with a straight face, that the PSP ""enhances security"".The fact that one is not even offered the option of disabling the PSP (or the ME for that matter) tells us everything we need to know about the true purposes of these features."	daxorid	9.41462	-5.190377	comment	5.0	35.0	1498833079	7.7180433
30740105	Having watched CHERI go through its 	Having watched CHERI go through its evolution for the last couple years, I am extremely glad that there’s now a modern thing that breaks the “pointers are integers” assumptions that people have mostly been OK with making for several decades, thinking that those were just things that “old” computers did and were now irrelevant to support. I’m really hoping to see architectures start re-adding trapping arithmetic too so we can start taking advantage of all the things in C that everyone hates is UB but can be repurposed into catching real bugs in hardware. I suspect this is going to break a lot of code that’s been playing fast-and-loose with these things, but “all the world’s a VAX” is a thing we got over before and now it’s going to be replaced with “Intel”.	saagarjha	9.603126	-5.3736534	comment	5.0	40.0	1647750316	8.243501
30745897	Ask HN: Real-World Breaches from Spe	Ask HN: Real-World Breaches from Speculative Execution Vulns?	PhantomPhreak	9.662728	-5.555474	story	5.0	23.0	1647805259	7.819095
30780784	Yeah, big sigh here. So, a bunch of 	Yeah, big sigh here. So, a bunch of things. First (and to be fair to NXP), a secure microcontroller is a hard problem, with tricky bits in both hardware and software.  And it remains to be true that the LPC55 is pretty good at a bunch of things that we need (e.g., a PUF).Second, while it's true that we're (obviously?) not entirely satisfied with the LPC55, we have worked around the vulnerabilities we have found -- and the alternatives that we have found aren't better.  In particular:  there appears to be no alternative that is at once robust, mature, secure, and entirely open.  And even in the RISC-V ecosystem, there is a disconcerting trend towards proprietary boot ROMs (!!).  We definitely welcome alternatives though, so please prove us wrong on that front!  (That said: any alternative w	bcantrill	9.436309	-5.484113	comment	5.0	20.0	1648055588	-10.522412
30786463	In the real world, you might be able	In the real world, you might be able only to get x86 containers. It's one of the issues of apple switching to arm.	snapcore	9.612943	-6.159774	comment	5.0	17.0	1648097321	10.049905
30816725	DEC made excellent hardware. I'm sti	DEC made excellent hardware. I'm still using a dual processor AlphaServer DS25 full time, in colo, for production hosting and building NetBSD pkgsrc packages:https://twitter.com/AnachronistJohn/status/13559959903988817...It has the updated 21264C-6 (EV68CB) processors, which are still very speedy, all things considered.	johnklos	9.682598	-5.232783	comment	5.0	17.0	1648342341	7.6419926
30840710	I am fascinated by Unikernels. But h	I am fascinated by Unikernels. But how do they deal with things that need to fork or run multiple processes? Aren't they restricted to single processes?	onebot	9.900304	-6.253763	comment	5.0	26.0	1648548469	-12.380926
30847155	> Why was it not a problem for Intel	> Why was it not a problem for Intel to add mmx, several sse iterations, avx, avx 2, but now 9 years of nothing, even though parallel computing in annoying to program for and depend on gpu's is only gaining in importance?AVX512 is significantly more intensive than previous generation SIMD instruction sets.It takes up a lot of die space and it uses a massive amount of power.It can use so much power and is so complex that the clock speed of the CPU is reduced slightly when AVX512 instructions are running. This led to an exaggerated outrage from enthusiast/gaming users who didn't want their clock speed reduced temporarily just because some program somewhere on their machine executed some AVX512 instructions. To this day you can still find articles about how to disable AVX512 for this reason.A	PragmaticPulp	9.442331	-5.514382	comment	5.0	25.0	1648581646	8.072291
30904174	Ask the ARM server vendors that rout	"Ask the ARM server vendors that routinely canceled their projects.Also, RISC vs CISC is for people stuck in the 80s. For example RISC-V's special sauce isn't some random ""its better suited for web server workloads"" theory with zero references or reasoning provided by a random guy on HN. It's widespread adoption. It's the fact that it was intentionally kept simple to make it easy to implement to the point that it probably is missing lots of functionality that we take for granted in modern servers.Remember all the fanfare around Cloudflare blog posts for a qualcomm ARM server SoC that was never released? Yeah the performance was surprising but the amount of hardware specific code the Cloudflare guys had to write was surprising too."	imtringued	9.442928	-5.6130934	comment	5.0	17.0	1649057823	-10.53641
31015217	Where do people see RISC-V heading i	"Where do people see RISC-V heading in the future ? 
With ARM arch solidly entrenched in mobile and embedded - is there space for RISC-V ?"	gapo	9.392127	-5.641153	comment	5.0	15.0	1649860879	-10.56673
31073154	Highlights from Git 2.36	Highlights from Git 2.36	todsacerdoti	9.049042	-6.2984486	story	5.0	128.0	1650300282	12.727886
31119892	As far as I am aware, RISC-V spends 	As far as I am aware, RISC-V spends it on not being weird (which is itself weird).	snvzz	9.371161	-5.6983895	comment	5.0	21.0	1650621972	-10.602598
31128382	It's one of my interview questions w	"It's one of my interview questions when applying for a job. I say something along the lines: ""I know this is a ridiculous question, but do you 1) use version control and 2) what version control do you use"" and then explain I have to ask these questions becz of obvious reasons."	vlod	8.81469	-6.3797	comment	5.0	20.0	1650662825	-11.72957
31207610	Could someone elaborate a bit on how	Could someone elaborate a bit on how RISC-V relates to ARM?From what I understand the former is a completely open source spec, and ARM is a proprietary one. But both are just specs, right? It’s not as if I can buy a RISC-V CPU from an organization behind it, it’ll have to be from a manufacturer that produces their own RISC CPUs?Is it also an entirely different instruction set? How does it compare to x86 and ARM in terms of performance?Last but not least, other than it being free / opensource, what are some of the reasons why anyone would choose RISC? Phrased differently, if they are going to take marketshare in the CPU world in the next decade, what will be the reason?	stingraycharles	9.401697	-5.6214952	comment	5.0	25.0	1651251213	-10.562908
31244458	As someone who doesn't follow RISC-V	As someone who doesn't follow RISC-V too closely, how does the most modern one (either available or planned) stack up in terms of perf compared to x86/arm? Just curious when these will begin to become viable for consumer devices. Years? Decades?	slimsag	9.415838	-5.651865	comment	5.0	34.0	1651550581	-10.546142
31312175	Fast bitset decoding using Intel AVX	Fast bitset decoding using Intel AVX-512	ngaut	9.794822	-5.5959473	story	5.0	62.0	1652088972	8.000928
31344901	I will never understand why emoji, t	"I will never understand why emoji, the whole point of which is to convey universal emotions (and other icons), ever needed skin tone modifiers at all. why do ""thumbs up"" and ""thumbs up, but i'm white btw"" need to be encoded differently? why is everyone OK with Native Americans and other ethnicities with reddish skin tones being excluded? just a complete mess top-to-bottom, and now we can basically never undo it.imagine trying to explain to aliens from another planet 500 years from now why 500 years ago we decided to a.) include skin tone modifiers to begin with and b.) only allow for the gradation of skin colors that we do. beyond ridiculous.EDIT: I forgot to mention how insanely ridiculous it is that we have these skin tone modifiers, but they don't even work for all ""people"" emoji, becau"	adamrezich	9.776015	-6.2674327	comment	5.0	35.0	1652298817	-13.957635
31386739	Fyrox 0.25 Feature Highlights	Fyrox 0.25 Feature Highlights	gigagoogoo	9.169674	-6.2865205	story	5.0	66.0	1652612234	12.729118
31391005	 > modern x86 processors can’t boot 	 > modern x86 processors can’t boot into BIOS mode anymoreThis is false. They still can and happily will. Issue is more about vendor not shipping a CSM image. A modern x86 processor will happily run real DOS just fine.	dmitrygr	9.833659	-5.2597265	comment	5.0	20.0	1652647927	-7.963726
31420073	Comparing Graviton (ARM) Performance	Comparing Graviton (ARM) Performance to Intel and AMD for MySQL	ArdelleF	9.3880625	-5.186013	story	5.0	25.0	1652858334	7.8893476
31456646	AMD Xilinx Kria KR260 Robotics Kit	AMD Xilinx Kria KR260 Robotics Kit	walterbell	9.173066	-5.1912374	story	5.0	91.0	1653127760	8.116929
31458705	My brain is a very bad virtual machi	My brain is a very bad virtual machine and it's very bad at parsing diffs (even GitHub ones), so I like to check out the code under review locally, browse it and see what my IDE says about it (thank you JetBrains), run it, and run the tests while stepping through the code. Makes a big difference.	pmcollins	8.813566	-6.1823254	comment	5.0	18.0	1653146728	2.3148637
31471786	PDP-11 Resource Timesharing System (	PDP-11 Resource Timesharing System (1970) [pdf]	ecliptik	9.885125	-5.471999	story	5.0	37.0	1653247581	-7.651731
31524953	Isn't that, in itself, a condemnatio	Isn't that, in itself, a condemnation of CISC? The instruction set is so complex that the CPU has to translate to microcode at runtime.If the compiler could emit that microcode directly, it would be easier to optimize and the CPU wouldn't have the task of decoding and translating the CIS.	dahfizz	9.560211	-5.6651864	comment	5.0	18.0	1653612292	-10.457263
31543575	> emoji have their own fontThat’s no	> emoji have their own fontThat’s not true. Emojis are Unicode characters just like `a` or `ß`. When I type <an emoji character> on my computer it doesn’t magically change font in the middle of the sentence; it’s just a character.edit: looks like HN stripped away my emoji.	hk__2	9.828424	-6.263495	comment	5.0	15.0	1653770159	-13.957386
31645665	Basic question: Why is this faster t	Basic question: Why is this faster than running Intel Linux apps in an emulated Intel Linux VM? Because Rosetta is faster than QEMU, and you only need to emulate one application rather than the entire kernel?	jellyksong	9.802705	-5.357201	comment	5.0	15.0	1654546861	7.6439075
31650865	Sunny Cove: Intel’s Lost Generation	Sunny Cove: Intel’s Lost Generation	ingve	9.335915	-5.2081966	story	5.0	130.0	1654586329	7.78276
31679769	That's almost certainly not true. E.	That's almost certainly not true. E.g.,https://www.embedded.com/risc-v-core-said-to-outperform-appl...	throwawaylinux	9.502784	-5.496318	comment	5.0	17.0	1654773004	7.171763
31744549	Why do we never get proactive defens	Why do we never get proactive defense against this sort of thing? As with speculative execution, caching, out-of-order execution, dispatching instructions to multiple ALUs depending on availability, etc, it was clear from the get-go that in principle the timing can depend on the payload so in principle it can be a problem for crypto.The need for constant time should have first class support on the language/compiler level, the OS level, the ISA level, and the hardware level. E.g. the processor could guarantee that the instructions of a certain section of code are executed at a constant rate, the OS could guarantee that the thread remains pinned to one core and the frequency fixed, and the compiler could guarantee that only branchless assembly gets emitted.	mike_hock	9.879877	-5.787986	comment	5.0	35.0	1655234132	-6.804024
31747601	I don't care!There, I said it.I didn	I don't care!There, I said it.I didn't care about Spectre, Meltdown, or any of the other obscure timing side-channels that came after them either, because they relied on so much detailed information about the environment being attacked that you'd almost certainly be able to get the information you wanted by some much easier way.Attacking something that doesn't seem to be in much use either doesn't make me any more worried either. Go after e.g. TLS, SSH, AES, RSA, etc. if you want to get our attention, but I suspect that trying this in practice, you're going to be overwhelmed by all the other sources of noise --- especially over a network connection -- that you won't be very successful at all. They mention 36h and 89h to get the key (few dozen bytes), and I assume that was in a basically id	userbinator	9.71056	-5.5914173	comment	5.0	19.0	1655251527	7.715282
31760840	STxP70/STHORM/P2012 – ST's secret mi	STxP70/STHORM/P2012 – ST's secret microcontroller	ot	9.696817	-5.206775	story	5.0	33.0	1655336398	7.3272624
35540415	Theres a perception that the ARM Alt	Theres a perception that the ARM Altra per-thread performance is really bad.But according to my Minecraft benchmarks in Oracle's instances, its better than old Skylake cloud instances... by how much is hard to say since other tenants generate so much variation, but there are proper reviews of the whole SoC floating around out there.	brucethemoose2	9.5356245	-5.223631	comment	5.0	40.0	1681310065	7.9678874
35564874	GNU toolchain for RISC-V including G	GNU toolchain for RISC-V including GCC	teleforce	9.433706	-5.732292	story	5.0	178.0	1681439787	-10.511001
35573464	PSP is a trusted execution environme	PSP is a trusted execution environment not a remote management platform. There is no reason anyone should want to remove this from a privacy perspective. In fact, privacy and security software may be hindered without something like PSP or SGX.	gray_charger	9.407601	-5.1870446	comment	5.0	25.0	1681499330	-1.6255469
35627251	What would be the point of this?Who 	What would be the point of this?Who actually wants to build custom processors with Intel x86 cores?Obviously, Intel is not going to let you compete with their own products so they will have license limits or gimp the cores available for licensing some how.	senttoschool	9.49516	-5.243492	comment	5.0	19.0	1681907078	7.707614
35643017	Well, I'd consider the damage to Lin	Well, I'd consider the damage to Lindel's credibility a win.	metalliqaz	9.296778	-5.8713593	comment	5.0	18.0	1682010554	4.4583306
35766870	I think the big thing the RISC vs CI	I think the big thing the RISC vs CISC wars articles always seem to miss or play down is the effect that large caches near or on-chip had in  the way that people made trade offs in CPU design.CISC (heavily encoded) instruction sets made sense when memory was very expensive  (late 70s I worked somewhere where we spent >$US1M for 1.5Mb of actual core for a mainframe - reading a word took 1uS - reading an instruction was destructive, you had to write it back) heavily encoded instructions made sense because of the realities of the memory hierarchy.As we started to move CPUs onto single chips the numbers started to change, RAS/CAS timers were ~1-300nS, caches in particular, initially off chip and eventually on chip were in the 10ns sorts of speeds, suddenly the tradeoffs between heavily encodin	Taniwha	9.49536	-5.6892676	comment	5.0	24.0	1682890928	-10.502477
35787029	Intel Core Ultra Meteor Lake CPU Bre	Intel Core Ultra Meteor Lake CPU Breaks Cover with 128 GPU Cores	rbanffy	9.369205	-5.2027154	story	5.0	40.0	1683033725	7.838328
35803584	"There's a ""Ryzen AI"" on these AMD co"	"There's a ""Ryzen AI"" on these AMD cores that is really a modest sized fpga, supposedly.
Linux has been landing some support for interfacing with this- calling it XDNA (on a new ""CDX"" bus) - but no signs yet that users can program it.Would be a fun thing to get exposed to users. Fingers crossed that actually happens; I could definitely see this being very vendored up, that it ends up only really running a couple predefined ML workloads."	rektide	9.291271	-5.186522	comment	5.0	28.0	1683127777	7.935869
35806082	Not to draw attention to myself or a	Not to draw attention to myself or anything, but if you're interested in learning to make cores for the Analogue Pocket or MiSTer (or similar) platforms, I highly recommend taking a look at the resources and wiki I'm slowly building - https://github.com/agg23/analogue-pocket-utils/I started ~7 months ago with approximately no FPGA or hardware experience, have now ported ~6 cores from MiSTer to Pocket, and just released my first core of my own, the original Tamagotchi - https://github.com/agg23/fpga-tamagotchi/If you want to join in, I and several other devs are very willing to help talk you through it. We primarily are on the FPGAming Discord server - https://discord.gg/Gmcmdhzs - which is probably the best place to get a hold of me as well.	agg23	9.144825	-5.242824	comment	5.0	18.0	1683139302	8.309689
35812913	Return oriented programming on RISC-	Return oriented programming on RISC-V – Part 1 (2022)	JoachimS	9.499674	-5.7914834	story	5.0	42.0	1683191251	-10.545474
35844123	Isn't it good? Does leaked key mean 	Isn't it good? Does leaked key mean that now owners of hardware will be able to read and modify the firmware, including IME, and check it for backdoors?Such keys should be in the hands of users, not Intel.	codedokode	9.514021	-5.1975527	comment	5.0	83.0	1683398429	7.7568502
35883358	oh this is about the useless enthusi	oh this is about the useless enthusiast wireless network, not a co-processor for large language models	yieldcrv	9.7698145	-5.3612356	comment	5.0	18.0	1683689929	-6.1916366
35884294	The numbers from this Google SIGMETR	The numbers from this Google SIGMETRICS09 paper are my usual benchmark for thinking about ECC DIMMs:https://www.cs.toronto.edu/~bianca/papers/sigmetrics09.pdfTheir metric of “25,000 to 70,000 errors per billion device hours per megabit” is a bit hard to grapple with.  If you assume each error is a single bit then that’s 20 to 50 bytes per GB DIMM per month, or one bit per GB every two hours.	gorgoiler	9.531326	-5.5340157	comment	5.0	62.0	1683700042	8.237223
35884915	I'm not convinced by this argument. 	I'm not convinced by this argument. In practice, errors on consumer hardware seem to be several orders of magnitude less common than implied by the paper. If they weren't, we'd be hearing anecdotes of one-character diffs appearing out of nowhere all the time, among many other issues.It's hard to see how this could be explained away with the slight increase in RAM densities since 2008, or different temperatures in data centers (plenty of individuals run their systems crazy hot, e.g. when the tower is stuffed with dust after years without cleaning).	p-e-w	9.708898	-5.4458437	comment	5.0	24.0	1683705929	8.168553
35924054	Intel Issues New CPU Microcode for N	Intel Issues New CPU Microcode for New, Undisclosed Security Updates	cylo	9.538813	-5.333645	story	5.0	42.0	1683936465	7.777957
35924394	What if I care about like 4 archs: x	What if I care about like 4 archs: x86/64, arm64 and PTX	jimsimmons	9.696282	-5.313335	comment	5.0	16.0	1683939846	-7.776236
35941916	x86 also uses 2-address instructions	x86 also uses 2-address instructions which means that you often need to use moves between registers (additional instructions), example: [1]. ARM uses 3-address instructions.Also, x86 code is compact, but not as compact as in era of 8080 [2]   - here addition and multiplication require 3 bytes each, 6 bytes total. To my surprise, ARM has an add-multiply instruction and it uses just 4 bytes (instead of 8) [3].And RISC-V uses 6 bytes because of shortened instruction for addition [4]Of course, this simple function cannot be a replacement for proper analysis, but it seems that x86 code is not significantly denser.Also to my great disappoitment none of those CPUs has checked overflow for arithmetic operation.[1] https://godbolt.org/z/jsoccE5jv[2] https://godbolt.org/z/jTMs1MEzh[3] https://godbol	codedokode	9.811125	-5.900202	comment	5.0	26.0	1684103265	-8.233509
35968223	Someone should invent a decentralize	Someone should invent a decentralized version control system so we can avoid these kinds of widespread events.	mulmen	8.819733	-6.3691883	comment	5.0	23.0	1684273826	-11.719879
35997190	8088 chip does not include FPU, does	8088 chip does not include FPU, does this laptop has one, otherwise it is going to be very slow.	teleforce	9.574728	-5.2128386	comment	5.0	15.0	1684464851	-7.554479
36080912	$9 Pi Pico look-alike with RISC-V Ve	$9 Pi Pico look-alike with RISC-V Vectors (1Ghz/64MB)	childintime	9.42336	-5.639381	story	5.0	5.0	1685084139	-10.48833
36084942	Very niceI used jails on FreeBSD and	Very niceI used jails on FreeBSD and nothing in Linux comes close.  Yes, it is not a pointy-clicky setup like Linux likes to do.  But IMHO Jails are far more secure, in a way: you get what you 'pay' for.	jmclnx	9.737691	-6.411969	comment	5.0	46.0	1685112612	10.478377
36085577	"Most of those are supported by ""cont"	"Most of those are supported by ""containers"", which are after all just a chroot and a process tree with restricted visibility into certain kernel objects. Assigning individual NICs or running a browser with extra isolation is one of the classic Linux namespace tutorials.  > You can setup Linux in a jail.

I don't see how this can be possible. Could you explain more how to boot a Linux kernel within a FreeBSD jail?edit: I'm not talking about running binaries compiled for Linux under FreeBSD. The parent said it's possible to set up Linux within a jail, so I want to see instructions to boot an actual Linux kernel as a FreeBSD process."	jmillikin	9.737402	-6.4228244	comment	5.0	17.0	1685115479	10.471861
36105888	The author of the article paints a p	The author of the article paints a picture of a situation in which expensive hardware was purchased on a whim without much planning beforehand. This hardware was ill suited to their task, and ultimately led to failure of the project while others (e.g., ARM) were quickly producing RISC designs with low budgets.This sort of thing isn't uncommon in larger organizations that have money to burn on R&D. As a result, it's probably safe to say Apple was in a position that allowed them to burn a lot of money in the late 1980s.	jasoneckert	9.527592	-5.382243	comment	5.0	17.0	1685294040	-10.534143
36135965	Does AVX512 still have the issue tha	Does AVX512 still have the issue that it works for microbenchmarks but may pessimize real workloads because it reduces clock speeds?	rwmj	9.475794	-5.5672565	comment	5.0	32.0	1685522400	8.100329
36159590	HN discards emojis in the title. The	HN discards emojis in the title. The original emoji was https://emojipedia.org/man-facepalming-medium-light-skin-ton... which consists of 5 Unicode code points.Also please make sure to read the first heading after the title, which summarizes the whole point of this essay.	lifthrasiir	9.806686	-6.2667627	comment	5.0	26.0	1685668262	-0.87759465
36160351	These emoticons should never have be	These emoticons should never have been a part of Unicode in the first place. Second big mistake of that org after the Unihan fiasco.	ceeam	9.927832	-6.2396855	comment	5.0	19.0	1685674896	-13.948541
36168836	SiFive Gives Its WorldGuard Security	SiFive Gives Its WorldGuard Security Model to the RISC-V Community	hasheddan	9.390265	-5.6750464	story	5.0	89.0	1685729986	-10.595143
36169488	I'm wondering how someone like the U	I'm wondering how someone like the USA government manages this?  They have massive deployments of Intel x86 like at the Utah Data Center [1].[1] https://en.wikipedia.org/wiki/Utah_Data_Center	VWWHFSfQ	9.421713	-5.19506	comment	5.0	21.0	1685733206	7.749737
36236768	"""12 years ago everyone was wondering"	"""12 years ago everyone was wondering how we'd program on multicore CPUs"" is either laughable or enlightening to read as an OS developer."	stiglitz	9.630051	-5.2266097	comment	5.0	27.0	1686194567	7.954165
36314599	I agree, and I've wanted a grid of 1	I agree, and I've wanted a grid of 1000+ cores for 25 years now, once I realized that the only bottleneck in computing is the bus between CPU and memory back in the late 90s. The only chip that comes even close to what I want for a reasonable price is Apple's M1 line, but they added GPU and AI cores which defeat the purpose.The churn with GPUs and now AI cores is too much for me. I just can't waste time manually annotating the code I want to run concurrently, on GPU, on AI core, whatever. To me, it looks like everyone is putting 10-100 times more work into their code than what should be needed. I see the same pattern repeated with web development and the explosion of walled garden platforms for mobile and smart devices. So much work for so long for so few results.Just give me a big dumb bo	zackmorris	9.417024	-5.235304	comment	5.0	20.0	1686680746	8.0116825
36322908	I don’t get it. If security is so im	I don’t get it. If security is so important, then it should be okay to sacrifice performance. Why is there such inertia in accepting this? If security is all that is needed, get an in order completely non speculative core with no branch prediction (you can’t even run your side channels in this case efficiently)	sufiyan	9.718267	-5.705668	comment	5.0	25.0	1686729863	-6.8133245
36382457	It is fascinating that semantic conf	It is fascinating that semantic confusion over RISC vs CISC persists since I was in college in the 80's. It is largely meaningless.The naive idea behind RISC is essentially to reduce the ISA to near-register-level operations: load, store, add, subtract, compare, branch. This is great for two things: being the first person to invent an ISA, and teaching computer engineering.Look at the evolution of RISC-V. The intent was to build an open source ISA from a 100% clean slate, using the world's academic computer engineering brains (and corporations that wanted to be free of Arm licensing) ... and a lot of the subtext was initially around ISA purity.Look at the ISA today, specifically the RISC-V extensions that have been ratified. It has a soup of wacky opcodes to optimize corner cases, and obsc	0xr0kk3r	9.481901	-5.6986027	comment	5.0	85.0	1687110255	-10.545801
36384589	The usual RISC-V FUD points. It gets	The usual RISC-V FUD points. It gets boring.>It has a soup of wacky opcodes to optimize corner casesOK, go ahead and name one (1) such opcode. I'll wait.>obscure vendor specific extensions that are absolutely CISC-y (examine T-Head's additions if you don't believe me!).Yes, these extensions are harmful, and that's why they're obscure and vendor-specific.RISC-V considers pros and cons, evaluates across use cases, and weights everything when considering whether to accept something into the standard specs.Simplicity itself is valuable; that is at the core of RISC. So the default is to reject. A strong argument needs to be made to justify adding anything.	snvzz	9.398272	-5.7091117	comment	5.0	36.0	1687123098	-10.589838
36442499	Framework Laptop feature requests – 	Framework Laptop feature requests – RISC-V Mainboard (2021)	peter_d_sherman	9.397972	-5.592489	story	5.0	44.0	1687491555	-10.569872
36465949	it is quite amazing given just 5 yea	it is quite amazing given just 5 years ago that Intel PR mouthpieces were still trying to convince people that why they don't need anything more than 4 cores on desktops.	tw1984	9.428141	-5.1880054	comment	5.0	16.0	1687680292	7.9197516
36494049	Lilos: A wee async RTOS for Cortex-M	Lilos: A wee async RTOS for Cortex-M	hasheddan	9.809099	-5.486543	story	5.0	82.0	1687878830	9.079295
36534584	By coincidence I just started playin	By coincidence I just started playing with AVX-512 this week. It's a lot of fun, but I have to say there is a dearth of resources on how to use it. For example I would love a simple visualisation for each operation as to how the various vectors and/or memory are transformed. Can anyone recommend some good books/learning resources?	anonymousDan	9.467802	-5.5527997	comment	5.0	16.0	1688131995	8.085331
29650433	FreeBSD Jails were so much better th	"FreeBSD Jails were so much better than everything else out there, for a long time. I'll just copy&paste part of a comment I wrote on another HN thread some time ago, since it's relevant here:[...] In fact, many years ago, when FreeBSD was my main OS (including on notebook) I went as far as to isolate each app that used internet into its own custom-setup jail [0][1].
I had Firefox, Thunderbird, Pidgin and a few others running in complete isolation from the base system, and from each other. I even had a separate Firefox jail that was only allowed to get out via a Tor socks proxy to avoid leaks (more of an experiment than a necessity, to be fair).
Communication between jails was done via commonly mounted nullfs. I have also setup QoS via PF for each of them.
They were all running on the host’"	drclau	9.739479	-6.4109244	comment	5.0	73.0	1640186436	10.473625
34127389	You are under the impression that CP	You are under the impression that CPUs and other chips always perform the same instructions as are written in the code, and only RAM can flip bits because DRAM is DRAM :)It can (and should! whenever possible) be improved, not fixed. There's always that pesky gamma that can hit a specific transistor, even if it is deep underground. Gamma cannot be fully stopped. At certain scales data corruption becomes directly measurable. And yes, corruption levels vary between pieces of hardware.	H8crilA	9.729131	-5.5131717	comment	5.0	16.0	1671977754	8.1749325
34175538	How the death of SRAM will affect th	How the death of SRAM will affect the future of PCs	sroussey	9.708938	-5.2907825	story	5.0	16.0	1672336340	8.102513
34206936	One of the biggest realizations rece	One of the biggest realizations recently for me was realizing that a nearly all of software development is basically about turning a slow, manual process into a faster, automated process. Modern CI/CD stems from a bunch of shell commands that somebody wrote and manually executed to test an app and upload it to a server. Modern automated software testing stems from humans writing small test apps and running them to confirm correct behavior. Many modern development practices stem from allowing small test apps to be written easier and faster. It's all just a giant manual process-to-automated process time-saving machine.	parasti	9.302915	-6.403908	comment	5.0	20.0	1672586305	6.1728244
34219661	> LLT tech tips videos about Linus's	"> LLT tech tips videos about Linus's new houseI tried, I couldnt take it. Between doing things the most botched way possible and spending the most money possible (My 4 billion $$$$ home theater system clickbait)  I couldnt take it anymore. Its a low form of scam / con when you use your home renovation as a tax writeoff and ""content""."	blitzar	9.317585	-5.8360953	comment	5.0	24.0	1672676465	4.1630263
34230701	SERV: 32-bit is the New 8-bit [video	SERV: 32-bit is the New 8-bit [video]	JoachimS	9.917911	-5.2287636	story	5.0	49.0	1672749958	7.434302
34240928	Someone fill me in - are all my unde	Someone fill me in - are all my understandings here correct?1. ARM is a RISC architecture, but it is proprietary/licensed, subject to export law, etc.2. ARM is having a heyday, powering just about every mobile device, plus Apple's recent M1/M2 chips, and is also becoming more common on supercomputers and on servers3. RISC-V is also a RISC, as the name implies, but is owned by a non-profit and intends to be open and easy to licenseSo next I would ask, do recent developments that make ARM so promising also make RISC-V promising? Do the decades of work that it took to make ARM the rising star also apply to RISC-V?  How far away is RISC-V from being competitive with ARM at a technical level? Or is it already there?Bonus question... given that both ARM and RISC-V have similar goals, how feasibl	2bitencryption	9.398108	-5.6140184	comment	5.0	79.0	1672797270	-10.541389
34241038	So I don’t understand any of this st	So I don’t understand any of this stuff. But does this mean applications built for ARM64. Like a .NET 7 app which targets linux-arm64 and runs on… say Ubuntu ARM. Will run on a RISC-V cpu?	philliphaydon	9.518443	-5.5963917	comment	5.0	29.0	1672798081	-10.509285
34247769	How widespread are ARM servers outsi	How widespread are ARM servers outside of hyperscalers who naturally wouldn't touch anything Supermicro makes with a 10-foot pole?	spamizbad	9.561948	-5.1915617	comment	5.0	46.0	1672850284	-0.8409447
34249231	Do you cross-compile from aarch64 or	Do you cross-compile from aarch64 or to aarch64?I tend to treat the desire to cross-compile as a rather strong indicator that the architecture is just not viable for general-purpose computing. Either because it's impossible to get actual hardware at all, or the hardware doesn't have decent specs. In both cases, it's going to be difficult find a business justification for building for this architecture (again for general-purpose computing).Obviously, architecture bringup is an exception, but we are way past that for aarch64.	fweimer	9.751428	-5.394098	comment	5.0	26.0	1672856100	-7.7619157
34258225	Yeah, someone should invent a versio	Yeah, someone should invent a version control system that does not rely on some central entity but is actually distributed.	kleiba	8.844517	-6.3865414	comment	5.0	23.0	1672916435	-11.741748
34269149	AVX-512 is wider, but also needs spe	AVX-512 is wider, but also needs special instructions to leverage the hardware.This is unlike RISC-V V extension, where the same code will run and utilize the hardware, regardless of vector unit width.	snvzz	9.4597225	-5.6294684	comment	5.0	44.0	1672964915	-8.143493
34287667	Self-Modifying FPGAs?	Self-Modifying FPGAs?	daly	9.105522	-5.3720613	story	5.0	6.0	1673096773	8.341158
34303386	Monitoring ECC memory on Linux with 	Monitoring ECC memory on Linux with rasdaemon	zdw	9.476935	-5.5279927	story	5.0	64.0	1673213753	8.271707
34360346	Maybe I'm missing something here? Th	Maybe I'm missing something here? This line read like a joke / sarcasm to me. But RISC did change everything, didn't it?	aussieshibe	9.382443	-5.7024117	comment	5.0	23.0	1673558165	-10.591261
34371324	"The ""real"" bug here is Motorola's.  "	"The ""real"" bug here is Motorola's.  Having instructions that fail silently (vs. trapping, as DIVU actually does if the divisor is zero!) is just outrageous.For clarity, because the article takes too long to get there: DIVU has a 32 bit dividend, but a 16 bit divisor and a 16 bit result.   So if you try to divide e.g. 0x20000 by 2, the result should be 0x10000, which doesn't fit in the output register.  So... the CPU sets the overflow flag but otherwise does nothing!I'm not quite old enough to have been writing assembly for the 68k, but I've heard this issue before.  This was surely not the only footgun situation with DIVU in the market."	ajross	9.8504095	-5.663703	comment	5.0	18.0	1673632520	-7.3944383
34382744	Counting the transistors in the 8086	Counting the transistors in the 8086 processor: it's harder than you might think	zdw	9.620121	-5.381988	story	5.0	175.0	1673721720	-7.527735
34386910	Ah, too bad the GPU driver is still 	Ah, too bad the GPU driver is still closed-source.  Hopefully they do indeed release that open source driver they apparently promise...  I kinda expected most RISC-V boards are going to be open hardware, but maybe I was wrong to assume that, heh	amatecha	9.338077	-5.5596776	comment	5.0	32.0	1673759524	-10.641711
34395115	SAIC Galaxy 1100: a pre-CDE VUE of t	SAIC Galaxy 1100: a pre-CDE VUE of the PA-RISC with a security clearance	classichasclass	9.413266	-5.5793757	story	5.0	29.0	1673827738	7.0113516
34399931	A 32-bit adder is just 4 8-bit adder	A 32-bit adder is just 4 8-bit adders with carry connected. I don't see why it'd be significantly more difficult.	torginus	9.92509	-5.440599	comment	5.0	21.0	1673872043	3.5098958
34494208	Reverse-engineering the conditional 	Reverse-engineering the conditional jump circuitry in the 8086 processor	picture	9.813801	-5.6302047	story	5.0	143.0	1674504325	-7.486094
34523038	Building the perfect memory bandwidt	Building the perfect memory bandwidth beast	rbanffy	9.923368	-5.4073806	story	5.0	50.0	1674675222	8.03421
34535150	Reverse-engineering the Intel 8086 p	Reverse-engineering the Intel 8086 processor's HALT circuits	picture	9.686149	-5.4897504	story	5.0	96.0	1674754387	-7.3435173
34587985	Microcode is far more low level than	"Microcode is far more low level than ""to exponentiate, multiply repeatedly"". More like, take an instruction such as ADD AX, BX. I'm using a 16-bit example to keep things simple. That might decode into micro-ops as follows:1. set the ALU input 0 to take input from register AX2. set the ALU input 1 to take input from register BX3. set the ALU output to register AX4. tell the ALU to ADDAnd I bet I oversimplified it and got it wrong.Each micro-op tells the CPU which control lines to turn on and off to activate the registers, ALU, memory bus, etc. Historically it lived on ROM for Intel parts, but that's changed in recent decades. User-programmable microcode was a thing; microcode extensions allowed the Xerox Alto's CPU to function as a proto-GPU, with operations like fast line draws and BitBlt,"	bitwize	9.646336	-5.4881577	comment	5.0	19.0	1675120158	7.7276034
34645944	Show HN: Emoji generator using Chat-	Show HN: Emoji generator using Chat-GPT	degenproduction	9.804996	-6.2568665	story	5.0	14.0	1675449936	-13.963656
34653148	Of course the whole story is way mor	Of course the whole story is way more complex, but I have been saying for years that the Itanium might have succeeded, if AMD had not extended x86 to 64 bit. The 64 bit extensions did not only fix some of the x86 problems (it increased the register count, pushed 64 bit double floats) but it made x86 a choice for the more serious compute platforms and servers.Back then, the whole professional world had switched to 64 bit, both from a performance and memory size perspective. That is why the dotcom time basically was based on Sparc Suns. The Itanium was way late, it still was Intels only offering in the domain. Until x86-64 came and very quickly entered the professional compute centers. The performance race in the consumer space then sealed the deal by providing faster CPUs than the classic R	_ph_	9.528417	-5.456516	comment	5.0	39.0	1675503627	-7.7569294
34658506	> Agon light™ is a true 8-bit microc	> Agon light™ is a true 8-bit microcomputer in that there are no FPGAs and no emulation in it.It would be nice if people would stop pretending CPUs implemented on FPGAs are somehow not real.	justin66	9.254982	-5.2239394	comment	5.0	22.0	1675546160	8.224047
34691442	I get the feeling that ARM and RISC 	I get the feeling that ARM and RISC platforms are going to screw around for so long that by the time you can buy a system with one in them Intel and AMD will have caught up on performance per watt and made them unneeded.	nickpeterson	9.400589	-5.31353	comment	5.0	22.0	1675770017	-10.472327
34769484	My Fear of Commitment to the First C	My Fear of Commitment to the First CPU Core	tanelpoder	9.499965	-5.204783	story	5.0	221.0	1676255179	7.8427978
34778139	Misleading headline.> the actual bug	Misleading headline.> the actual bug: let's add to our code.. an emoji! Any emoji.> rust-analyzer adheres to the LSP spec. And lsp-mode doesn't.So “emojis break an Emacs extension”.Though for me the real takeaway is that LSP specifies UTF-16 offsets. That sounds unpleasant to work with.	aendruk	9.812994	-6.2766166	comment	5.0	16.0	1676313889	-13.963681
34807405	I've never been able to figure out i	I've never been able to figure out if IA64 was poorly designed, or if the migration path was just to hard. The AMD64 seemed like a bit of a hack when it came out, but at the same time it was just a better solution for most.We had two Itanium servers for a project I worked on, both donated by HP. They weren't anything special, certainly didn't feel like an upgrade over our Sun machines.	mrweasel	9.534111	-5.3961787	comment	5.0	25.0	1676482302	-7.732614
34811538	Thanks Intel for publishing somethin	Thanks Intel for publishing something that's useful on AMD consumer CPU's but not on Intel ones.	Aardwolf	9.346993	-5.1981177	comment	5.0	54.0	1676499436	7.8177004
34843279	The idea that unicode proposals have	The idea that unicode proposals have to be submitted to the unicode consortium is trash. It's be better to declare parts of the unicode standard open access (like the 2.4GHz wifi band) and just let people exchange/trade emoji sets.	anigbrowl	9.914283	-6.255161	comment	5.0	16.0	1676687851	-13.922584
34855612	One thing I'm not seeing mentioned i	One thing I'm not seeing mentioned is the security implications of running a filesystem in VRAM. Unless things have changed, GPU VRAM is basically free-for-all and any application can do read/write operations anywhere in the memory bank.There are certain scenarios where this is okay but lots of scenarios where it is not (example: webgl)	Taek	9.8373785	-5.432582	comment	5.0	20.0	1676794978	8.237206
34892220	In my experience talking to semicond	In my experience talking to semiconductors folks, ARM is just not a concern anymore. The future is RISC-V, and ARM is already being seen as legacy tech. ARM's progress in the server space has stalled, the ARM Windows ecosystem is dead, Android has laid the groundwork for a move to RISC-V, and ARM has never and will never touch the desktop market.	BlueTankEngine	9.522956	-5.304319	comment	5.0	46.0	1677046071	-7.7726064
34929055	Emojis aren’t text, though. Nobody “	Emojis aren’t text, though. Nobody “writes” emoji outside of the digital world so I don’t think emoji could accurately be called “text” or part of a “writing system:> Unicode, formally The Unicode Standard,[note 1][note 2] is an information technology standard for the consistent encoding, representation, and handling of text expressed in most of the world's writing systemsPeople write smiley faces, but there was already a code point for basic smileys.I think standardized emoticons are a good thing, but I don’t think the Unicode spec is where they best belong.	wwalexander	9.828897	-6.266152	comment	5.0	17.0	1677267811	-13.95848
34957739	> To make sure gaming workloads find	"> To make sure gaming workloads find the right CCD, AMD has implemented a high degree of software-level control, in the form of its 3D Vertical Cache Optimizer Driver, which is included with the latest version of AMD Chipset Software. This driver ensures that workload from games are directed to the CCD with the 3D Vertical Cache using dynamic ""preferred cores"" flagging for the Windows OS scheduler.Yeah, what about games on Linux? I'm pretty sure it will be scheduled all over the place.Also I doubt that scheduler is smart enough to detect it dynamically. Do they just use a list of known applications for that?"	shmerl	9.467048	-5.218564	comment	5.0	17.0	1677512757	8.682067
34981812	I'm quite intrigued by the design ch	I'm quite intrigued by the design choices made on the website.  It's obviously a product for businesses, but the whole website feels almost cartoony and like it's aimed at teens, maybe it's the (almost excessive) use of emoji?  Not really a criticism, just my particular feeling whilst browsing, YMMV.	richrichardsson	9.806614	-6.251893	comment	5.0	24.0	1677675217	-13.952024
35007453	Ask HN: If the CPU redesigned today,	Ask HN: If the CPU redesigned today, with no legacy incentives what can change?	LangIsAllWeNeed	9.558783	-5.2933826	story	5.0	5.0	1677835118	7.7114058
35073974	Linus Torvalds on Word-Wrapping Git 	Linus Torvalds on Word-Wrapping Git Commit Messages	stefankuehnel	8.812259	-6.312984	story	5.0	22.0	1678305578	-11.763865
39353784	Twenty years of my work with Arm arc	Twenty years of my work with Arm architecture	pabs3	9.599423	-5.2432218	story	5.0	94.0	1707793274	-7.7022347
39475266	I've used this + Groq yesterday to a	I've used this + Groq yesterday to augment (with a chrome extension) the infinite fun game from Neal Agrawal, but generate actual images and not only emojis.This feels like the future, near real time image and LLM generation (using Mixtral from Groq as my prompt writer) and Fal API for read time generation!https://x.com/altryne/status/1760561501096575401?s=20	altryne1	9.806997	-6.2661977	comment	5.0	20.0	1708647809	-13.961316
39480893	Given the rise in ARM in many areas 	Given the rise in ARM in many areas of computing, I'm not sure how much of a moat x86 is / will be long-term.Is there anything 'inherit' to the instruction set that cannot be done anywhere else? I know that many Intel/AMD systems now have a bazillion cores, which is very handy for some things. Also, AMD seems to have a large numbers PCIe lanes, which is great for I/O between (e.g.) the network and on-system stuff.	throw0101c	9.625156	-5.449857	comment	5.0	32.0	1708698126	-7.732088
39527809	Gitea and forgejo don't have CI/CD a	Gitea and forgejo don't have CI/CD at all.	shp0ngle	8.952685	-6.3983254	comment	5.0	17.0	1709059317	6.126091
39595221	Intel shares biggest unboxing video 	Intel shares biggest unboxing video ever as ASML's High-NA machine is installed	rbanffy	9.375995	-5.1925282	story	5.0	52.0	1709582404	-2.536583
39600230	"My experience with most ""neo HDLs"" i"	"My experience with most ""neo HDLs"" is that they are all code generators which make the tedious part easy and don't really end up touching the hard part.This may be the first HDL I've seen that attempts to move the needle on catching bugs at compile time. (I've worked with several engineers, on hardware bugs which turned out to be pipelining errors, who did not understand what I meant by ""make this design error inexpressible."")  I have several pages of notes on what I'd do differently if I designed my own HDL - the typical software engineer hubris - and this is the first language I've seen that starts to line up with what I was thinking.Another perennial area where bugs crop up are when crossing clock and reset domains.  The language ought to be able to make it so that you simply can't make"	thrtythreeforty	9.108666	-5.498876	comment	5.0	26.0	1709622126	8.573503
38633831	I learned 6502 assembly as my second	I learned 6502 assembly as my second programming language after BASIC. I don't remember how I felt about it, because it was all I had, but I do remember two things:1. 6502 assembly made a lot of sense to me, even its quirks kind of made sense2. When I switched to the 80386 nothing made sense and I simply hated it.I think it is fair to say that if I had to start with x86 I probably would have never gotten into programming.	weinzierl	9.667438	-5.505116	comment	5.0	16.0	1702500016	-7.4191213
38634543	The state of merging technology	The state of merging technology	bumbledraven	8.761153	-6.4043107	story	5.0	70.0	1702503709	9.208522
38640562	Here's a pre-print paper I found:Sar	Here's a pre-print paper I found:Sargantana: A 1 GHz+ In-Order RISC-V Processor with SIMD Vector Extensions in 22nm FD-SOIhttps://upcommons.upc.edu/bitstream/handle/2117/384912/sarga...RV64GC with a subset of the v0.7.1 vector extension. 1.26GHz nominal clock on a 22nm process.	ansible	9.405136	-5.598798	comment	5.0	30.0	1702556286	-10.53549
38644637	>  even the raspberry pi is a decade	>  even the raspberry pi is a decade old itself now as the poster child for consumer arm64 LinuxThat's a pretty good example actually, the various Pi versions are probably the best supported ARM in existence, and even they are incredibly limited in what they can run.For some reason the way OS support works on ARM is that every OS needs to explicitly support the exact underlying hardware or it doesn't run. For example the recently released Pi 5 can only really run two OSes right now: Pi OS 12 and Ubuntu 23.10. How is that possible, I ask? Why the fuck isn't the required firmware shipped with the SoC and made compliant to run any aarch64 build of anything? It's not like it's new hardware either, it uses a dated 5 year old Cortex A72.Meanwhile x64 has apparently done the opposite and standard	moffkalast	9.719225	-5.193279	comment	5.0	21.0	1702576822	-7.8306756
38726812	FPGAs have never made sense. They're	"FPGAs have never made sense. They're way too expensive to use in volume. There's no practical use case for ""cool, I can reprogram the chip in the field to implement different functionality"". Nobody has figured out how to usefully integrate them with a CPU to make a low-volume SOC. CPUs became so fast that most applications don't need customer hardware. Regular gate arrays are cheaper and faster above minimal volume.They seem to only have been useful for prototyping and military applications (low volume and infinite budget)."	dboreham	9.107171	-5.353106	comment	5.0	16.0	1703192163	8.326778
38781534	Everytime I look at the examples, co	Everytime I look at the examples, coming from a verilog background, it's strange to see the clock and reset are all implicit rather than explicit. The blinking led for example, while readable the link between the generated verilog with clock and reset is not clear. How are multi clock domains and Async CDCs handled? I've never used chisel so maybe this all is well managed, but not being explicit about the clock domain seems strange	tails4e	9.13353	-5.4657063	comment	5.0	18.0	1703682189	8.511499
38815414	How am I supposed to know how emoji'	How am I supposed to know how emoji's are rendered on your device.What if my water pistol turns into a pistol by the time you see it and my harmless fun turns into a threat?https://money.cnn.com/2016/08/01/technology/apple-pistol-emo...	Baldbvrhunter	9.759606	-6.3082776	comment	5.0	26.0	1703945724	-13.957815
38870255	> The largest chapter of the 1992 ed	"> The largest chapter of the 1992 edition of this book dealt with the
compiler translating Oberon programs into code for the NS32032 processor. This processor is now neither available nor is its architecture recommendable. Instead of writing a new compiler for some other commercially available architecture, I decided to design my own in order to extend the desire for simplicity and regularity to the hardware. The ultimate benefit of this decision is not only that the software, but also the hardware of the Oberon System is described completely and rigorously. The processor is called RISC. The hardware modules are decribed exclusively in the language Verilog.I wonder how it compares to Nand To Tetris. Other than that, it seems really interesting. Has anyone read it?"	zvmaz	9.454785	-5.6705575	comment	5.0	18.0	1704391680	-10.526662
38996496	My memory is dim on this (having las	My memory is dim on this (having last done 6502 assembly almost 40 years ago), but the extreme lack of registers on the 6502 meant many programs were a tedious, endless parade of lda, sta instructions.	Scubabear68	9.667749	-5.531485	comment	5.0	20.0	1705283380	-7.486372
38997654	To me, The 6502 kind of represented 	"To me, The 6502 kind of represented best-of-breed but a bit of a dead end. I couldn't see a 16-32 bit story. It's like it hit the spot, and stopped growing.The 6800 begat the 68000.  It had virtual memory management. That launched ten or more models of workstation and hit the magic '3M' window: a MIP, a Megabyte of memory and a Million pixels. 68000 led to SPARC because Sun decided to go into the RISC business itself.I used Motorola workstations alongside Sun, for a Cray-1 project I was on the periphery of: they were the ones Cray shipped to us, passing the Cray-1 on from another customer (Boeing) and they were fine, if remarkably (physically) large machines. Like they'd got the idea of ""this is a workstation"" in the Microvax era, and never quite shrunk down.I had a 6502 box (the Acorn Ato"	ggm	9.527976	-5.187648	comment	5.0	23.0	1705295495	-7.512791
39010437	This is TH1520, same SoC as the Lich	This is TH1520, same SoC as the Lichee Pi 4A.A chip that's oddly faster than JH7110  (VisionFive2, Milk-V Mars) in microbenchmarks, but slower in practice (e.g. gcc). Presumably due to smaller cache.It is also less power efficient, and lacks the upstream support JH7110 enjoys[0]. I would look at Pinetab-V, a tablet-laptop based on that SoC, today.Better yet, wait for Milk-V Oasis[1] tba this June, as well as other boards based on SG2380, the first announced RISC-V SoC with serious performance: 16x SiFive P670 and 8x X280, all RVA22 compliant, plus vector 1.0 (standard) extension.0. https://rvspace.org/en/project/JH7110_Upstream_Plan1. https://community.milkv.io/t/introducing-the-milk-v-oasis-wi...	snvzz	9.384755	-5.499155	comment	5.0	36.0	1705390028	-10.558215
39012215	Is anyone making RISC-V SoCs outside	Is anyone making RISC-V SoCs outside of China?Trade restrictions have given China serious incentives to make RISC-V CPUs domesticly, unlike every other country that can just buy AMD64 and ARM chips. Given the geopolitics of the situation, while RISC-V is gaining marketshare in the microcontroller space, it looks like RISC-V will be the Chinese-bloc CPU ISA while the west sticks with what we already have.	cjs_ac	9.344299	-5.6774163	comment	5.0	27.0	1705405513	-10.584646
39031989	MRISC32 – An Open 32-Bit RISC/Vector	MRISC32 – An Open 32-Bit RISC/Vector ISA (Suitable for FPGA CPU)	peter_d_sherman	9.436899	-5.6264744	story	5.0	57.0	1705518557	-10.499678
39059531	The whole point of virtualization is	The whole point of virtualization is you're running as close as possible to directly on native hardware. That's literally what makes virtualization distinct from emulation for VMs.If you're trying to run an x86 client OS you need an emulator, there's just no way around it. If you just have some x86 binaries and don't actually need a full x86 OS, they've made rosetta available for client linux VMs.	olliej	9.844191	-5.3422456	comment	5.0	41.0	1705690797	7.605787
39060758	I've been using UTM, it seems to wor	I've been using UTM, it seems to work OK. I use arm64 images, I haven't tried x86_64 images. Works for Windows and Debian.	jtotheh	9.882296	-5.269599	comment	5.0	25.0	1705696507	-8.109699
32519964	I've encountered a company without v	I've encountered a company without version control in recent times. Interesting aside: they produced very high quality software, so it's not even a cut-and-dried thing on that front. Personally, I wouldn't get through the day without it but apparently there are people disciplined enough to manage. But I suspect they are quite rare.	jacquesm	8.881651	-6.3551197	comment	5.0	32.0	1660910665	-11.708765
32565838	thanks, for a moment I was disappoin	"thanks, for a moment I was disappointed that I just ordered a fully-loaded Thinkpad X1 Carbon Gen 10 since I need to run x86 Ubuntu> If you want to run x86, you can use qemu which works fine.Are there any benchmarks for x86 Ubuntu under QEMU on M1/M2?
Will it be usable?"	nivertech	9.621106	-5.1858244	comment	5.0	17.0	1661266632	-7.7476583
32607713	Using RISC-V doesn't let you bypass 	Using RISC-V doesn't let you bypass chip shortages... Do they actually understand what they're talking about?	mlindner	9.373683	-5.655509	comment	5.0	24.0	1661522700	-10.50111
32643027	Emojis didn't exist back in the 90s.	Emojis didn't exist back in the 90s. This is an anachronism.	mseepgood	9.80173	-6.257401	comment	5.0	16.0	1661804421	-13.961341
15630318	Is it intentionally ironic or uninte	"Is it intentionally ironic or unintentionally confusing that the first instances that should be "":-)"" have actually been converted into the emoji versions?"	SCdF	9.819499	-6.256817	comment	5.0	17.0	1509901856	-13.954484
15630361	I definitely agree that the over-spe	"I definitely agree that the over-specialization of emoji faces is ridiculous.However, one question has occurred to me: what has the actual consequence of the skin-tone-modifier been on real-world emoji use?The answer, in my experience, is that essentially no one uses skin-tone-modified emoji at all. This, in turn, makes me wonder if perhaps this was the intended result the whole time—to, in a very circuitous way, ensure that the ""default"" state of any given emoji has a generic skin tone."	FreakyT	9.791408	-6.2719336	comment	5.0	20.0	1509902237	-13.956738
15653595	Google Working to Remove MINIX-Based	Google Working to Remove MINIX-Based Management Engine from Intel Platforms	rbanffy	9.608343	-5.1944423	story	5.0	46.0	1510156380	-8.341287
15669590	Intel CPUs have an embedded supervis	Intel CPUs have an embedded supervisory CPU called the Management Engine. It can read all of memory, control power states on the main CPU, and generally has super-root privileges on everything. You, an end-user, aren't allowed to program it. The current MEs run a form of Minix. They represent an incredible security and privacy risk, because we don't know what code they run and it is widely believed that the NSA or other intelligence agencies have backdoor access. Remote backdoor access, even: the ME can talk to the network.A JTAG is a standard minimal serial port used for debugging purposes. You'll find them on nearly all embedded devices - routers, phones, TVs, refrigerator controllers... usually appearing as a set of two or three contact points. Sometimes they connect directly to a debug	dsr_	9.512887	-5.213131	comment	5.0	21.0	1510319380	7.797116
15674010	I'm not sure all this big.little stu	I'm not sure all this big.little stuff is the future. The heterogenous cores make scheduling/caching/etc a nightmare particularly when someone decides that the cores have different features.Particularly, since I think its all a crutch for lack of finer grained power control within the CPU core. Want to save more power, turn off a few of the duplicate functional units, shutdown 3/4 of the ROB buffer, or fuse a few pipeline stages together as the frequency is reduced. Whatever. The point being its possible to have a finer grained performance profile on a bunch of higher performance cores rather than wasting 1/2 the die on caches and cores that are basically useless for any real work outside of handling idle loop wakeup events to tell the GPU it needs to scroll or run a idle TCP stack's keepa	StillBored	9.5428095	-5.2964983	comment	5.0	17.0	1510356985	8.020524
15688573	This doesn't pass the Torvald test. 	This doesn't pass the Torvald test.  i.e.  Would your startup hire Linus if he hadn't yet created linux and git?	whataretensors	9.394318	-5.8513126	comment	5.0	18.0	1510596890	-8.198158
15700175	Exactly my point: AMT is not include	Exactly my point: AMT is not included in every ME and your computer probably doesn't have AMT.	wmf	9.415044	-5.248398	comment	5.0	19.0	1510701349	7.831486
15712674	I'd really like to jump on the RISC-	I'd really like to jump on the RISC-V bandwagon.  Does anyone have any recommendations for hardware that would be .. somewhat .. future-proof for hacking/experimenting on this platform?  I'd love to have a board or two akin to the rPi-Zero in form-factor, if such a thing were available ..	mmjaa	9.384119	-5.561951	comment	5.0	17.0	1510841269	-10.560359
15712830	What about the boot sequence and dri	"What about the boot sequence and driver enumeration? How is this handled in RISC-V? This has traditionally been one of the major obstacles to ARM - you need different kernels for two ARM devices with nominally the same core because of initialisation differences.Devicetree makes this better but not 100% as simple as the old ""legacy"" PC boot sequence was. Ironically these days PCs are quite hard to boot too with UEFI."	pjc50	9.68599	-5.438291	comment	5.0	37.0	1510842697	-10.528134
15717623	Awesome! Personally, I think that AR	Awesome! Personally, I think that ARM assembly has a TON of potential for teaching people how to code and/or work with electronics hardware from a state of almost no background knowledge.- They teach the concept of a computer program as a bunch of single small logical 'steps'.- They make it easier to keep new students interested without plying them with pages and pages of 'magic code' - not only can you make a zero-dependencies program (in the case of simple mobile chips), your 'hello world' is actually in the physical world. An LED, a motor, what-have-you.- The core instruction set for a Cortex-M0+ processor has what, 60 instructions? It's not very complicated.On the con side of things, the whole idea of registers controlling hardware peripherals can be a little weird, and you have to get	leggomylibro	9.709971	-5.3263144	comment	5.0	25.0	1510874632	-7.4571753
15730249	Sorry to go straight off-topic but i	Sorry to go straight off-topic but if anyone from AMD is reading, please remove PSP from future and/or give us the ability to remove it from existing machines, this is a golden opportunity (with the Intel ME having been shown to be broken recently https://news.ycombinator.com/item?id=15656931 ) you really shouldn't pass up.	hd4	9.416617	-5.203762	comment	5.0	38.0	1511033102	7.844366
15739157	Linus is extremely lucky to have fou	"Linus is extremely lucky to have found his niche, as he is otherwise unemployable. One of his sweary rants at a cow-orker in any normal company would see him fired for gross misconduct and probably a restraining order taken out. Much of the toxic behaviour in the tech industry can be traced back to Linus ""getting away with it""."	gaius	9.296622	-5.8832364	comment	5.0	18.0	1511176528	4.273334
15792139	Potential impact of the Intel ME vul	Potential impact of the Intel ME vulnerability	pgl	9.457004	-5.213756	story	5.0	193.0	1511821320	7.7616496
15801868	I guess this will be nice for indust	"I guess this will be nice for industry, which may pass the savings along to the consumer, but as far as having auditable hardware that you have some control over, I don't see how this is any better than the ARM SoCs we already have--unless you're going to roll your own system on an FPGA.That, and I'm kind of disappointed everyone has drunk the RISC kool-aid.  I think a lot of RISC ""performance"" has more to do with compilers catering to the least common denominator than anything else.  If you had a language/compiler that took better advantage of a stack architecture, or even a CISC architecture, the performance would probably be just as good if not better.I was particularly impressed by Baker's old paper[0] on stack architectures in service of his Linear Lisp idea.[0] http://home.pipeline.c"	jstewartmobile	9.404227	-5.6296105	comment	5.0	30.0	1511904245	-10.592647
15841095	Reinventing the FPGA Programming Whe	Reinventing the FPGA Programming Wheel	jonbaer	9.094538	-5.3720484	story	5.0	66.0	1512355185	8.37784
15855445	I don't see any mention of x86_64/AM	I don't see any mention of x86_64/AMD64 in the article. I would expect a version of Windows which can't run x86_64 apps to result in a lot of nasty compatibility surprises--it's been awhile since developers had to support 32-bit-only hardware--so I'd expect Microsoft to support it if at all possible.	jimrandomh	9.85096	-5.2214966	comment	5.0	15.0	1512505361	-7.895132
15892307	Many people predict RISC-V to be mos	"Many people predict RISC-V to be mostly for IoT but I hope they will really push forward high performance implementation.The reason for that prediction is simple: it's what happened to MIPS, which in its heyday got as much if not more hype than RISC-V. Advocates thought it would be the ""architecture of the future"" for everything from tiny embedded systems to high-performance supercomputers. Now, its popularity is only in the former, because it turns out that getting high performance from an ISA with only simple and relatively large instructions is actually rather difficult. You can add SIMD and other extensions to look competitive in specific benchmarks, but general-purpose code will still be behind compared to something like x86 or even ARM."	userbinator	9.417807	-5.634355	comment	5.0	29.0	1512926011	-10.557419
15893454	"I think Linus said something like ""y"	"I think Linus said something like ""you don't make friends by suing people"" and while Intel has not followed the license to the letter, court should not be the first answer to that"	raverbashing	9.440116	-5.186234	comment	5.0	15.0	1512939480	7.738652
15896024	Is there a video that explains the M	Is there a video that explains the Mill CPU in detail but isn't 15 hours long? I could go for 2 or 3 hours.	monk_e_boy	9.546264	-5.2386045	comment	5.0	18.0	1512985035	7.723607
15913624	Does anyone know why intel discontin	Does anyone know why intel discontinued their tamper protection toolkit?  They had an obfuscation compiler that would turn compiled C code into a self encrypting/decrypting code.  The idea was if you dissassembled the code at any point you wpuld get mostly garbage instructions.  I always wondered how a de compiler could get around that.https://software.intel.com/en-us/articles/intel-tamper-prote...	skate22	9.54754	-5.477787	comment	5.0	18.0	1513165383	-7.1704397
15928135	Western Digital to Use RISC-V for Co	Western Digital to Use RISC-V for Controllers, Processors	vanburen	9.383357	-5.6524906	story	5.0	78.0	1513292712	-10.574765
15929594	John Sotos, Chief Medical Officer of	John Sotos, Chief Medical Officer of Intel covered the dangers of this technology quite well at DEF CON 25.  If you've not seen his talk, watch it now, it's in my top ten of the best talks I've been to in the eleven years I've been going to DEF CON:https://www.youtube.com/watch?v=HKQDSgBHPfY	patcheudor	9.363063	-5.1865983	comment	5.0	18.0	1513310517	7.7299986
15998631	Would be interesting to see comparis	Would be interesting to see comparisons to the algorithms in that benchmark: https://github.com/miloyip/itoa-benchmarkWhat I generally wonder is, why ISAs don't have special instructions for a task that is so common.	legulere	9.643079	-5.576297	comment	5.0	20.0	1514104507	-7.706901
16003843	A PDP-11 emulator in the browser run	A PDP-11 emulator in the browser running Unix V6	beefhash	9.832266	-5.367492	story	5.0	64.0	1514203823	-7.515871
16016937	Could you elaborate on why you think	Could you elaborate on why you think its apparent that AMT has 'terrible code quality'? Specifically, versus other high profile products that continue to have multiple security bugs being introduced every release cycle - Windows, iOS, Android, Linux, etc.	ksk	9.371966	-5.2470875	comment	5.0	40.0	1514400592	7.945906
16027323	I've always thought that it's a sham	I've always thought that it's a shame that CPU vendors haven't opened up microcode programming to the public. To extend a silly graphics metaphor: it's as if, right now, CPUs ran Vulkan, but we could only program them with Unity.As the speakers in this talk point out, open microcode would allow extending the CPU with brand-new capabilities, including not only high-performance instrumentation frameworks, but also, I think, nearly-free ASAN-like and CFG-like runtime safety checks.Is security a reason not to open the microcode architecture? I don't think so. I know this talk happened at CCC, but I don't see the security consequences of open microcode being severe: if you're in a position to install a microcode update, you've already won.*Backward compatibility? Sure. Microcode can change gene	quotemstr	9.52796	-5.30277	comment	5.0	33.0	1514518791	7.677341
16026933	The Pentium F00F Bug (1998)	The Pentium F00F Bug (1998)	luu	9.498561	-5.265102	story	5.0	45.0	1514512919	7.8406243
16046891	IMHO, with RowHammer, the hardware i	"IMHO, with RowHammer, the hardware is broken and it will continue to be broken until users complain enough --- maybe to the point of absolutely refusing to buy --- that the manufacturers and designers stop thinking ""works 99.9999999999% of the time"" is good enough: https://news.ycombinator.com/item?id=12410274"	userbinator	9.61819	-5.6699133	comment	5.0	64.0	1514826910	-13.885939
16053227	Short INTC maybe but I am not sure t	Short INTC maybe but I am not sure this means that AMD will increase in value over the long run as a result of this one incident.	IgorPartola	9.223662	-5.207032	comment	5.0	61.0	1514912666	7.8249826
16061246	"""Intel has a bug that lets some soft"	"""Intel has a bug that lets some software gain access to parts of a computer’s memory that are set aside to protect things like passwords.""Seems like very little got through to the media about the details regarding this flaws effects and costly workaround."	NinjaKitten	9.486747	-5.2496204	comment	5.0	24.0	1514990088	7.7842393
16064941	> Recent reports that these exploits	> Recent reports that these exploits are caused by a “bug” or a “flaw” and are unique to Intel products are incorrect.Isn't the quote above which is from the Intel press release a blatant lie? All the articles I have seen say this only affects Intel processors. Not AMD processors nor, ARM, MIPS, SPARC or PowerPC chips. Did I miss something or is Intel lying in it's press release.	2trill2spill	9.512441	-5.27959	comment	5.0	29.0	1515012398	7.7855597
16065518	> Quoting ARM and AMD is really a bi	> Quoting ARM and AMD is really a bit pathetic too, IMHO, especially if it turns out that AMD chips are immune to the flaw.The official fix for this in the Linux kernel has a comment that literally says to assume all x86 processors suffer from the same issue and will disable KPTI for all x86 processors, including AMD.There's an AMD-specific patch that I saw floating around that keeps the setting enabled for AMD processors, but I'm not sure if it made it into the mainline.	mywittyname	9.488599	-5.225306	comment	5.0	20.0	1515015984	7.839126
16066086	Speculative execution seems like som	Speculative execution seems like something that would be very intuitively insecure even to a layperson(relative to the field of course).I'm wondering, was this vulnerability theorized first and later found out to be an actual vulnerability? Or was this something that nobody had any clue about?I'm only saying this, because from a security perspective, I imagine somewhere at some point very early on someone had to have pointed out the potential for something like speculative execution to eventually cause security problems.I just don't understand how chip designers assumed speculative execution wouldn't eventually cause security problems. Is it because chip designers were prioritizing performance above security?	debt	9.686486	-5.640286	comment	5.0	18.0	1515019446	-6.733938
16066710	"""Meltdown"" is an Intel bug.""Spectre"""	"""Meltdown"" is an Intel bug.""Spectre"" is very bad news and affects all modern CPUs.  Mitigation is to insert mfence instructions throughout jit generated sandboxed code making it very slow, ugh.  Otherwise assume that the entire process with jit generated code is open to reading by that code.Any system which keeps data from multiple customers (or whatever) in the same process is going to be highly vulnerable."	jhallenworld	9.634524	-5.543124	comment	5.0	58.0	1515024140	7.82016
16066837	As I read through the meltdown paper	As I read through the meltdown paper, it looks really difficult to have the security we want and the performance we want at the same time. It's pretty crazy, but here's my limited understanding:There's a huge shared buffer between two threads. 256 * 4K. One thread reads a byte of kernel memory, literally any byte it wants, and it then reads one of those 4K pages from that buffer in order to cache that one memory page that corresponds to the byte it just read. Then at some point the CPU determines that the thread shouldn't be permitted to access the kernel memory location, and rolls back all of that speculative execution, but the cached memory page isn't affected by the rollback.The other thread iterates through those 256 pages, timing how long it takes to read from each page, and the one p	bloorp	9.722372	-5.6257696	comment	5.0	20.0	1515025450	7.9402695
16067163	This seems unnecessary hostile. It's	"This seems unnecessary hostile. It's quite obvious that these patches had to be completed in a hurry, and in addition to any number of similar patches for other systems. Configurability is currently useless for Intel CPUs, as all of them seem to be affected.Depending on how their CPU development pipeline works, it's quite likely that even the next generation will still be affected, giving everyone plenty of time later for such niceties.It's also slightly too harsh to call all of Intel's work ""crap"" when this bug has apparently existed for the better part of two decades without being noticed."	shaki-dora	9.546485	-5.313961	comment	5.0	15.0	1515028747	7.8222866
16070975	>Its hard to get your head around ho	">Its hard to get your head around how big a deal this is.It truly is difficult to predict all the ripple effects from this.  I can't think of a single computer bug in the last 30 years that's similar in reach to this Intel Meltdown.[EDITED following text to replace ""Intel bug"" with ""Spectre bug"" based on ars and jcranmer clarification.  The Intel Meltdown can be fixed with operating system update patches for kpti instead of a complete recompile.]Journalists like to overuse the bombastic metaphor ""shaken the very foundations"" but this Spectre bug actually seems very fitting of it.  Off the top of my head:- browsers like Chrome & Firefox have to compile with new defensive compilation flags because it runs untrusted Javascript- cloud providers have to recompile and patch their code to protect"	jasode	9.629673	-5.5018873	comment	5.0	35.0	1515079557	7.8022056
16070343	I think it is time to talk about new	I think it is time to talk about new directions because we're still STUCK HARD in a rut begun in 1971 for general purpose compute. 4004 -> 8008 -> 8080 -> x86 and here we remain.  Requirements and tech have both changed vastly since then.  We've made some minor widening, into RISC, GPUs, and VLIW, plus we're just now looking into many cores, now that atomic physics is starting to push back on minimum feature sizes.Two areas that have not been remotely explored are asynchronous design and massively parallel (think Connection Machine).  In both cases, the compilers and tools were not up to the task, but perhaps we're ready to give both another try.	imglorp	9.494294	-5.2965174	comment	5.0	17.0	1515074481	7.962274
16073900	Okay, one thing I don't get: Fundame	"Okay, one thing I don't get: Fundamentally, the Meltdown problem comes from a process getting to inspect the wreckage after the the CPU tried to clean up access of protected memory, but failed to properly account for a fun trick of caching.That is, the process tried to read some data from protected memory A and did some fancy stuff with it such that left enough breadcrumbs that after the CPU responds to the illegal read, the process still has enough info to piece together what was in A, at least from timing of reads, right?Why not kill the process instantly on a prohibited read, then?  Do these prohibited reads happen too often to switch from ""oh, that's okay, you can try again and do other stuff"" to ""the punishment is death""?"	Pxtl	9.701329	-5.5980883	comment	5.0	22.0	1515098650	7.8482575
16075948	> Intel said its chips, which power 	> Intel said its chips, which power Macs and devices from other manufacturers, contain the flaw as well as processors based on ARM Holdings architecture, which is used in iOS devices and Android smartphones.Has it been proven that Meltdown can affect ARM processors, or is this Intel speculation?	torgard	9.519828	-5.3958263	comment	5.0	19.0	1515118553	7.836015
16076510	[related] Has anyone considered the 	[related] Has anyone considered the possibility of a Spectre-style attack in Ethereum's Turing-complete EVM? Not that the state would be unique for all contracts, but there's a possibility of communicating to an external contract with the output.	liamzebedee	9.682565	-5.6127977	comment	5.0	16.0	1515126199	-8.08348
16080849	This covers both Meltdown and Spectr	"This covers both Meltdown and Spectre.> Both vulnerabilities exploit performance features (caching and speculative execution) common to many modern processors to leak data via a so-called side-channel attack. Happily, the Raspberry Pi isn’t susceptible to these vulnerabilities, because of the particular ARM cores that we use.The reason why Spectre is not a problem is because there is no branch predictor in these simpler arm cores. Instructions are processed in parallel when possible, but not before dependencies, including branch decisions.EDIT: under ""What is speculation?"" branch prediction is described. Then in the conclusion: ""The lack of speculation in the ARM1176, Cortex-A7, and Cortex-A53 cores used in Raspberry Pi render us immune to attacks of the sort."""	ploxiln	9.680816	-5.6299148	comment	5.0	37.0	1515179841	-7.000302
16085327	Maybe off-topic: Is formal verificat	"Maybe off-topic: Is formal verification viable anywhere in CPU logic design?  Also, could any existing ""CPU static analyzers"" have caught the issue that caused Meltdown?Edit: It looks like the answer to the first is a definite yes."	j1vms	9.855105	-5.762199	comment	5.0	17.0	1515248122	7.9303994
16085717	Why? This wasn't gross incompetence 	Why? This wasn't gross incompetence in processor design, this kind of attack is completely new.I don't see how a class action could apply here, by IANAL	pitaj	9.781685	-5.3809586	comment	5.0	17.0	1515253688	7.7700047
16084563	Kernel Side-Channel Attacks	Kernel Side-Channel Attacks	jjuhl	9.819801	-5.585058	story	5.0	98.0	1515231154	-5.738117
16086128	A number of ways are listed here [1]	"A number of ways are listed here [1]1. With dmesgdmesg -wH | grep 'page tables isolation'2. With /proc/cpuinfogrep cpu_insecure /proc/cpuinfo && echo ""Patched"" || echo ""Unpatched!""[1] https://askubuntu.com/questions/992137/how-to-check-that-kpt..."	frazar0	9.916459	-5.526247	comment	5.0	21.0	1515258333	7.875977
16086519	The microcode updates that people ha	"The microcode updates that people have been mentioning are not updates to your motherboard's firmware, EFI or otherwise.  They are updates to the code that runs inside your central processor chip, the so-called microcode, that does the work of understanding and enacting processor instructions (in all programs, from the programs in your firmware to the programs that you download and run from the WWW).Firmware updates are largely irrelevant to this issue, only being involved in the sense that one way to perform microcode updates is for your machine's firmware to upload the new microcode image file.  But that is just one way for that to be done; your operating system can do it, too.* http://inertiawar.com/microcode/* https://news.ycombinator.com/item?id=16081366* <a href=""https://newsroom.int"	JdeBP	9.574235	-5.3715153	comment	5.0	20.0	1515261514	7.751409
16096003	I'm now wondering if I have enough m	I'm now wondering if I have enough material to do an interesting writeup for my time as a CPU bug-hunter in verification.The client (a now vanished startup) had a small 8-bit CPU design which they wanted validation for, using the technique of executing random sequences of instructions and comparing the result against an emulator. We wrote the emulator independently from their architecture description. Given that most instructions were a single byte plus arguments and most of those were valid, the test coverage was pretty thorough. All looked fine until I added support for interrupts, at which point we discovered that an interrupt during a branch would not return to the correct point in execution.Verifying security properties of processors is really hard; you can go looking for specific typ	pjc50	9.769877	-5.6106253	comment	5.0	17.0	1515410042	7.9014854
16103418	How does a microcode update work? My	How does a microcode update work? My sparse understanding is that instructions are physically encoded in the chips. That you could take a microscope and look at the different instructions.	Waterluvian	9.596859	-5.441343	comment	5.0	20.0	1515469149	7.7328496
16112351	HN really needs a sticky feature for	HN really needs a sticky feature for comments concerning security patches and other updates that can bork your machine.In this case, someone who dreams in hardware, breathes ASM and talks in bytes, needs to clearly inform the community here concerning these questions:- SHOULD THIS MICROCODE UPDATE BE PERFORMED SEPARATELY FROM RUNNING: apt-get update && apt-get upgrade ?- WHAT IS THE IDEAL/BEST WAY TO PERFORM THIS MICROCODE UPDATE?	phantom_oracle	9.56858	-5.3862534	comment	5.0	17.0	1515554791	7.7455964
16118414	this leads me to a couple questions,	"this leads me to a couple questions, hopefully you smart folk can answer:1. I thought Spectre was ""Intel-only"", and Meltdown was the general case, which is less severe but effectively nearly everywhere?  If so, how is an iPhone susceptible to Spectre?2. Beyond that, I thought meltdown/spectre was an x86 problem.  So why all this trouble on phones, with ARM?3. I've read the first, simplest variant of meltdown, and it is so beautifully simple.  Is this ""speculative execution + cache timing"" thing an entirely novel exploit, or have we seen incarnations of this before?"	2bitencryption	9.6320915	-5.5630336	comment	5.0	15.0	1515614264	7.7991476
16132016	> I had no idea that within a few mo	> I had no idea that within a few months of completing such project, it would revolutionize our culture’s way of communicatingI'm pretty sure emojis were all over the internet before apple - forums, chat apps, IMs etc? Were they the first ones to include them in the default SMS app or something?	kuroguro	9.777543	-6.24994	comment	5.0	20.0	1515755310	-13.962217
16134130	As others have already said, if you'	As others have already said, if you're a programmer, please just read the original papers:https://meltdownattack.com/meltdown.pdf (start with this one)https://spectreattack.com/spectre.pdfThey are extremely well written, clear and to the point. Understanding them will take you less time than trying to get rid of all the tortured analogies and unnecessary simplifications people have been trying to make up over the past week. It's bad enough that we face the daunting task of explaining this stuff to people who don't care about computers, there's no need to perpetuate misunderstanding among those who deal with computers for a living. Just read the real thing.And on the subject of explaining this to others, it might surprise you how far you can get if you try to honestly explain how the attack	keldaris	9.665299	-5.6197867	comment	5.0	36.0	1515775044	7.790665
16165400	I'm gonna go and take issue with the	"I'm gonna go and take issue with the claim that you were the first to come up with microarchitectural attacks, and that their story begins in 2004:- Dan Page published [1] in 2002, describing an attack on DES exploiting cache timings. In 2003, he published [2] describing countermeasures to this class of attacks.- Concurrently, a Japanese team also attacked DES (and MISTY1) with cache timing [3, 4].- Dan Bernstein published the first version of his AES cache timing attack in late 2004 [5].[1] https://eprint.iacr.org/2002/169[2] https://doi.org/10.1016/S1363-4127(03)00104-3[3] https://link.springer.com/chapter/10.1007/978-3-540-45238-6_...[4] <a href=""https://web.archive.org/web/20060906064630/http://web.engr.oregonstate.edu/~aciicmez/osutass/data/Tsuno"	pbsd	9.846102	-5.569539	comment	5.0	36.0	1516162292	7.7051306
16186160	RHEL/CentOS state:Red Hat built thei	RHEL/CentOS state:Red Hat built their own mitigation for Meltdown and Spectre and were the first distribution to have an updated kernel right when the embargo was lifted.As far as I can tell, their meltdown mitigations are similar to what's in the upstream kernel now, and the Spectre mitigations relies on Intel's new MSRs (the microcode update that had since been retracted - new microcode_ctl packages remove it).Interestingly, you can enable/disable the mitigations at runtime with Red Hat, which is useful for performance testing. I found no way to do this with the upstream kernel.I'm not happy that Intel, Google, Red Hat and a few others have known about the bug for months and the upstream kernel devs are scrambling to build mitigations and still don't support the microcode mitigations. Go	lima	9.625621	-5.442121	comment	5.0	73.0	1516370028	7.812039
16184927	>  further fragmentation of cpu arch	">  further fragmentation of cpu architectures""Fragmentation""??We have a huge monoculture of Intel x86/x64 on the desktop, driven by Intel's fab advantage that smothered all alternative (and often superior) architectures.  And recently, a second one has sprung up with ARM on mobile.And it hasn't really been good for the industry.Fortunately, the Windows monoculture in OSes has been broken, so much that MS wasn't able to extend it to mobile and has been driven to give away their OS updates.In terms of porting, CPU architecture is far less of a problem than you might think.  Tiny NeXT managed to make its OS available for four CPU architectures:  68K, i386, SPARC and HP-PA, with apparently PPC and MC88K available in-house.  Write Once, Run Anywhere™, all with native binaries, no intermediate l"	mpweiher	9.557591	-5.237761	comment	5.0	25.0	1516351696	7.8776774
16191011	OT but I’ve just got into microcontr	OT but I’ve just got into microcontrollers for the first time in the last week via an Arduino Uno. I’m absolutely in love with it and I now need to go a bit deeper (I’m working on a synth). I get a lot of the concepts like the registers to control the timers / interrupts but I’ve found a good guide to be lacking. I haven’t seen a list anywhere of all the available registers and what the bits do. I get that it’s different for different chips but I thought the info for more common ones (like the ATMega328) would be easier to come by.Any hints on where to look?	aidos	9.79674	-5.7024665	comment	5.0	23.0	1516405729	-7.32607
16194216	Spectre affects all advanced chips w	"Spectre affects all advanced chips with out-of-order execution.But Spectre cannot break kernel memory. Its more of a ""new class"" of bug, similar to how ""Buffer Overflows"" don't describe a particular attack, but a methodology that hackers will use to exploit new bugs.Spectre affects virtually every high-performance computer in the world. Smartphones, SPARC, PowerPC, Intel, AMD, ARM. All of these designs use out-of-order execution, and in theory, a rogue Javascript would be able to read the rest of process memory if a programmer isn't careful about how things work.Meltdown took it one step further: and showed that code could read Kernel memory. That was an Intel-specific mistake."	dragontamer	9.664824	-5.577428	comment	5.0	23.0	1516469141	7.8229523
16202611	Yea... and what about every other ch	Yea... and what about every other chip maker who also have the same exploits? Can someone explain whether AMD and Qualcomm licensed this tech or if they also independently made the same mistakes? Either way, we really haven't seen much activity from them either.	ethani	9.223402	-5.1838813	comment	5.0	24.0	1516607249	7.7612257
16203306	>> Being able to call out bullshit d	>> Being able to call out bullshit doesn't mean having to curse it out.Here we go.>> All Linus needs to do is say something likeAnd all you need to do is be that nice and be as brilliant as Linus is.Oh, it's harder to be that smart than it is to be that nice? Maybe consider that for people as highly gifted as Linus, it actually isn't.What you take for granted as normal behavior isn't always normal to others, especially those at the outliers of skill and intelligence.	icelancer	9.277597	-5.892291	comment	5.0	47.0	1516616560	4.2501845
16203345	That bit sounds to me like Intel is 	"That bit sounds to me like Intel is trying to pull a ""Volkswagen"": have it perform better in benchmarks than in real life (when hopefully secure execution will be enabled)."	mcv	9.453406	-5.2866116	comment	5.0	34.0	1516616996	7.811264
16203476	We should treasure it while it lasts	We should treasure it while it lasts, before PC culture silences him. And before downvoting, recall how many threads regarding Linus abusive behavior (sic) we've had.	bassman9000	9.2934265	-5.8896275	comment	5.0	45.0	1516619380	4.2336226
16203504	I wish people in this thread would s	I wish people in this thread would stop turning the discussion into a straw-man argument about Linus’s language and focus their attention to the technical and security problems at hand.Some people are easily offended, some people easily offend, some people are direct, some people are indirect - get over it.What matters here is the quality of the code / workarounds that are being presented, by whom and what alternatives they are.	mrmondo	9.329239	-5.863657	comment	5.0	22.0	1516619808	4.2216735
16222551	The botched embargo destroyed their 	"The botched embargo destroyed their chances of managing the PR like they thought they would be able to do.Intel thought they could roll Spector and Meltdown into a single massive bug, that all CPUs were vulnerable to. Instead, AMD leaked the fact that AMD CPUs didn't need the KPTI patch, which meant the very first thing people knew was ""it's an Intel bug"". This very much put the Intel PR effort on a back foot.Then Intel thought they could just release their microcode update (hell, they even coordinated with AMD to release the same microcode patches), and tell linux ""here are the patches to use it, you must merge it"". I assume the plan involved disclosing on the 9th and essentially bully Linus into merging the patches by the 10th.They wanted people to thank them for spending millions to dev"	phire	9.482539	-5.305459	comment	5.0	20.0	1516801491	7.802288
16236071	I wonder how much it would speed up 	I wonder how much it would speed up if they were using libgit2 directly.	CapacitorSet	9.147794	-6.16384	comment	5.0	16.0	1516926298	7.4084134
16238765	How to Hack a Turned-Off Computer, o	How to Hack a Turned-Off Computer, or Running Unsigned Code in Intel ME	alexlash	9.526758	-5.2581162	story	5.0	177.0	1516971405	-4.500985
16269097	ARM, like other RISC architectures M	ARM, like other RISC architectures MIPS and PowerPC, has a fixed instruction size of 32 bits. This is a good design decisionSo good that they got rid of it in their new chips.	gcp	9.667312	-5.580231	comment	5.0	17.0	1517346872	-7.794317
16304415	Micro-op fusion in x86	Micro-op fusion in x86	ingve	9.6720705	-5.6492114	story	5.0	127.0	1517772918	-7.8219776
16308040	"Counterpoint: ""There is no evidence "	"Counterpoint: ""There is no evidence in-the-wild malware is using Meltdown or Spectre"" https://www.virusbulletin.com/blog/2018/02/there-no-evidence..."	sp332	9.624755	-5.562809	comment	5.0	20.0	1517828674	7.772569
16400110	The lack of floating point and atomi	"The lack of floating point and atomics is an ""interesting"" choice for a Linux-capable chip.  It might run Fedora[1], but would likely require kernel support for emulating floats (as the distro is compiled assuming hard floats) and of course without atomics would only be single core.  The README says they plan to add atomics.At least it supports compressed instructions.  There are some actual chips about to be released without the C (compressed) extension, but Fedora and Debian are compiling everything assuming the C extension.In Fedora news, just today we've got a bootable (but very minimal) RISC-V disk image[2] that you can run in qemu.[1] https://fedoraproject.org/wiki/Architectures/RISC-V[2] https://fedorapeople.org/groups/risc-v/disk-images/"	rwmj	9.487486	-5.6036124	comment	5.0	37.0	1518864466	-10.506389
16430037	That was a bit misleading in some wa	That was a bit misleading in some ways.  First, in pipelining you'll typically measure how long a pipeline steps in FO4s, which is to say the delay required for one transistor to drive 4 other transistors of the same width.  Intel will typically design its pipeline stages to have 16 FO4s of delay.  IBM is more aggressive and will try to work it down to 10.  But of those 10, 2 are there for the latches you added to create the stage and 2 are there to account for the fact that a clock edge doesn't arrive everywhere at exactly the same time.  So if you take one of those 16 FO4 Intel stages and cut it in half you won't have a two 8 FO4 stages but two 10 FO4 stages.  And since those latch transistors take up space and energy you're got some severe diminishing returns problems.One thing that's c	Symmetry	9.7532	-5.775798	comment	5.0	25.0	1519226412	7.7307487
16445389	Intel 4004 microprocessor oral histo	Intel 4004 microprocessor oral history panel (2007)	dosshell	9.488223	-5.208301	story	5.0	37.0	1519380736	7.6932526
16454000	Kactus: Design version control witho	Kactus: Design version control without changing tools	doener	8.906179	-6.363934	story	5.0	58.0	1519490449	-11.700109
16458592	So you’re saying the Linux kernel wo	So you’re saying the Linux kernel would get better if we overthrew Linus?	tzahola	9.453931	-5.834897	comment	5.0	18.0	1519561886	4.2528944
16503726	We definitely need more developers w	We definitely need more developers who can't leverage more than 10% of the CPU's actual power.</sarcasm>Its literally impossible to have any clue about performance without understanding the hardware. Sure you can profile and gain 5-10% after micro-optimizing what the profiler tells you.But you will never, ever get the 200-1000% performance gains you can only get by accounting for the hardware at the very architecture level, something you can't fix by just profiling later on.What even is the point of having programming classes if alls they do is teach what you can learn yourself with an online tutorial?	jeremiep	9.69039	-5.316905	comment	5.0	17.0	1520012063	7.756361
16537242	Discuss – AMD stock just spiked up 6	Discuss – AMD stock just spiked up 6% anyone know why?	MobiusHorizons	9.145846	-5.185904	story	5.0	6.0	1520438338	7.89835
16560170	I know it's being worked on but ever	I know it's being worked on but every time I see posts about how great magit is, it pains be because my experience is that it continues to be ungodly slow on MacOS. Other MacOS/Emacs folks, is my experience considered atypical at this point?	clhodapp	8.857194	-6.382017	comment	5.0	18.0	1520716364	-11.310015
16577787	This is too well organized and prese	This is too well organized and presented. My guess is that this has to be financed in some part by a group of short-sellers.They made a rookie mistake though - AMD is plagued by day-traders and algorithms who couldn't give a damn about the fundamentals.Boy the future of capital markets is looking grim.	stevievee	9.155185	-5.1908245	comment	5.0	27.0	1520961671	7.8552303
16579167	Your professor seems great so far bu	Your professor seems great so far but pretty silly of him to teach you verilog instead of VHDL. As an EE myself I haven't seen a job description that says verilog over vhdl in a long time. Might want to familiarize yourself with both if you plan to pursue hardware design further.	eebynight	9.106371	-5.4867125	comment	5.0	17.0	1520970612	8.588511
16598359	These are not pedestrian vulnerabili	These are not pedestrian vulnerabilities. Not only do they appear to destroy the security of the PSP enclave system AMD uses, but it actually makes systems that have the PSP less secure than systems that do. They're essentially the worst possible vulnerabilities you can find in a security coprocessor.If you'd found the same class of vulnerabilities in Intel SGX or the iPhone SEP, you'd have a contender for the top vulnerability discovery of the year; an almost-lock on the Pwnie.I simply can't understand the people who are downplaying this other than by assuming that people love AMD so much that they don't want these to be severe vulnerabilities.Do I think this will move the stock? No. I don't think an SGX break would hurt Intel much either.	tptacek	9.381658	-5.267022	comment	5.0	32.0	1521170800	7.8188987
16677953	Linus Torvalds Remembers the Days Be	Linus Torvalds Remembers the Days Before ‘Open Source’	ogcricket	9.307391	-5.8554153	story	5.0	48.0	1522061528	-8.241256
16766955	"Data science has 3 areas for ""versio"	"Data science has 3 areas for ""versioning"":1. code versioning
2. data versioning
3. model versioningCode versioning is primarily dominated by GitHub and is a fairly saturated space (Bitbucket, GitLab). Data versioning is either not happening, or being done through regular data pulls, database snapshots, etc. It is not well standardized or adopted. CometML is tackling model versioning.It would be really nice to have a single solution for all of these but that is unlikely. Hopefully new standards evolve from this."	ellisv	8.886321	-6.379566	comment	5.0	18.0	1522949451	9.396324
21029273	I hear a lot about AVX-512 being rea	I hear a lot about AVX-512 being really good.Is there any software that's commonly used that has a measurable performance boost with it? Or is it more specialised stuff?	Jonnax	9.455428	-5.555237	comment	5.0	26.0	1569001200	8.074047
21029827	I work in this space... and let's ju	I work in this space... and let's just say that MKL is definitely NOT well optimized for AMD's chips. You'll be lucky to get 10-20% efficiency. Nevermind openblas.	vj44	9.285765	-5.32539	comment	5.0	20.0	1569004348	7.9697037
21080724	Reminds me of http://www.rosettacode	Reminds me of http://www.rosettacode.org/wiki/Rosetta_Code	BucketSort	9.842986	-5.3606167	comment	5.0	18.0	1569504722	2.6934347
21127917	> we need to get over people's distr	> we need to get over people's distrust of Intel and RDRAND.Am I misreading this or is Ted T'so really suggesting that we should all just stop worrying and love the secret and compeltely unauditable RNG offered by the same company that has literally backdoored every CPU they've sold in the past 12 years?	boring_twenties	9.357992	-5.224834	comment	5.0	60.0	1569950138	7.7243366
21152902	I'm a little surprised that it wasn'	"I'm a little surprised that it wasn't itself written in Asm (and thus has the possibility to be self-assembling), and the binary is almost 30KB. That may seem tiny today, but in the 8086/8088 era, it's huge; the first IBM PC in its minimum configuration had only 16K RAM.For a more ""authentic"" 8088 experience, you could use the assembler that came with MS-DOS 1.25, written by Tim Paterson:https://github.com/microsoft/MS-DOS/blob/master/v1.25/source..."	userbinator	9.915226	-5.3453503	comment	5.0	19.0	1570141444	-7.5368605
21161836	I also disagree.  The main problem i	I also disagree.  The main problem is much simpler: they cost too much for fundamental reasons.  The die-size for an FPGA that would have equivalent power of an Intel CPU or Nvidia GPU would be huge and expensive.	jhallenworld	9.084944	-5.331985	comment	5.0	17.0	1570222815	8.296095
21183826	There are probably a number of peopl	There are probably a number of people who are attracted to Linus Torvald's attitude and style, but I can assure you the number of people who do not contribute to the Linux kernel because they're turned off by it is significantly larger. It's absolutely in the best interest of the project that he adopt an attitude change permanently or step down.Just as most sports are 90% mental and only 10% physical, managing a large software project is 90% people skills, and only 10% technical.	badrequest	9.372204	-5.8445406	comment	5.0	24.0	1570470616	-8.206848
21278499	The problem of FPGAs is their propri	The problem of FPGAs is their proprietary nature, and Verilog/VHDL are far from the best languages. Gladly there is a number of open-source projects aiming to close this gap - Yosys[1], SymbiFlow[2], Chisel3[3]/FIRRTL[4]. Some time ago I suggested[5] different open source projects should unite and reuse the common intermediate language, akin to LLVM in many software development and analysis tools. From my point of view, FIRRTL is the best designed one, there is a huge problem of being implemented in Scala though, especially for C/C++/etc written projects. Hopefully, there will be more collaboration one day. Either reimplementation from scratch, e.g. in Rust or C++, or using Scala Native.[1] https://github.com/YosysHQ[2] https://symbiflow.github.io/[3] https://www.chisel-lang.org/[4] https:	xvilka	9.092879	-5.383572	comment	5.0	15.0	1571280479	8.467113
21289531	Microchip Adds RISC-V Cores to Polar	Microchip Adds RISC-V Cores to PolarFire FPGAs	unwind	9.387195	-5.645465	story	5.0	82.0	1571386453	-10.581437
21336496	This is a tangent, but is there a go	This is a tangent, but is there a good keyboard app for Android that doesn't have emoji? I'm tired of hitting the emoji button accidentally and having emoji show up in autocomplete.	skybrian	9.821337	-6.254582	comment	5.0	19.0	1571849594	-13.953
21336728	Special register groups sounds like 	Special register groups sounds like Hyper-Threading Technology. Didn't realize that Honeywell had it in 1959.	karmakaze	9.759551	-5.448527	comment	5.0	16.0	1571851090	-7.273271
21409059	"From the great article:""x86_64 is th"	"From the great article:""x86_64 is the 64-bit extension of a 32-bit extension of a 40-year-old 16-bit ISA designed to be source-compatible with a 50-year-old 8-bit ISA. In short, it’s a mess, with each generation adding and removing functionality, ...""Nice way of wording that! :)It also explains the complexity of the following 10 pages of text."	stragies	9.653362	-5.5040164	comment	5.0	60.0	1572531513	-7.736846
21464150	Many applications don't need Spectre	Many applications don't need Spectre or Meltdown mitigations, but they should at least put the test parameters up front and not in the fine print.	sp332	9.637121	-5.578934	comment	5.0	70.0	1573057925	7.80414
21464239	That is a little disingenuous. The w	"That is a little disingenuous. The whole point of Intel’s compiler is to support Intel chips well. Results on other chips are what they are. No effort to make other chips perform eiher better or worse is expended. Keeping up
with Intel chips is more than a full time job without other distractions.The question to ask is whether or not they used the best complier/swithes available for the other chips."	dbcurtis	9.475743	-5.4017735	comment	5.0	15.0	1573058543	7.849922
21475551	Here's a bad question from someone w	Here's a bad question from someone who doesn't really understand the differences of CPU architectures and is therefore apprehensive about making related decisions:Will I be hurting myself if I buy a computer with an AMD chip, in that I might end up in a situation where certain programs won't work for me? E.g., if I do fancy 3d modeling (Cinema4d, fancy renderers), if I do multi-threaded programming (in matlab), if I do physical simulations ( in COSMOL), etc.?	pen2l	9.295018	-5.1994567	comment	5.0	16.0	1573149705	7.8537617
21521616	related: are there any good sources 	"related: are there any good sources on how you design for out of order processing? I have done a lot of ""intro to electronic circuits"" stuff that lead to a really basic register-based CPU, but when we get into stuff like OOO or branch prediction stuff I feel like I haven't really seen much on how it can work while keeping your sanity from a design perspective."	rtpg	9.721259	-5.597721	comment	5.0	16.0	1573626555	8.272773
21522741	Perhaps researchers can use the test	"Perhaps researchers can use the tested-and-proven ""Full Disclosure"" tactic to exert public pressure on Intel. It doesn't need to disclose everything, just two or three additional unpatched PoCs with full source code would be enough.However, unlike buffer overflow exploits, most researches on CPUs are conducted within academic institutions, doing this certainly breaches the code of conduct. Also, CPUs are the most critical components of all computers and their vulnerabilities are difficult to fix, doing this would put a lot of users under immediate risks, unlike a root exploit, which is less risky and can be fixed within a week. Doing Full Disclosure of hardware exploits that users can not fix is much more ethically problematic than software exploits.But leaving the users in the dark and al"	segfaultbuserr	9.523829	-5.217166	comment	5.0	58.0	1573642082	7.8091106
21534575	How do the microcode upgrades get de	How do the microcode upgrades get delivered? Do people have to manually install them, or do Intel have some way to force a microcode update over the Internet?	jstanley	9.5633135	-5.37882	comment	5.0	16.0	1573730766	7.7433343
21534953	Is there a place where I can find ho	Is there a place where I can find how much performance my Haswell CPU has lost due to all of these 'fixes'?	shifto	9.5046	-5.271053	comment	5.0	17.0	1573735677	7.800627
21536070	I noticed yesterday's articles about	I noticed yesterday's articles about Intel's upcoming unusually large release of security mitigations. Under serious competitive threat for the first time in a while, I'm curious if Intel may have slowed the release of some mitigations to land after this round of comparison benchmarks.	mrandish	9.414759	-5.2579184	comment	5.0	59.0	1573745047	7.7474737
21536305	I'm waiting for 64 core CPU. 32 is n	I'm waiting for 64 core CPU. 32 is nice but still not enough.	chaosbutters	9.577788	-5.19913	comment	5.0	17.0	1573746515	7.841719
21536331	I read that all these new AMD CPUs s	I read that all these new AMD CPUs support ECC, but it’s been hard finding verification. Can any one recommended a motherboard that both supports and uses ECC RAM with this new CPU?	oouiterud	9.391472	-5.463467	comment	5.0	16.0	1573746652	8.184002
21613425	I wonder if they are considering RIS	I wonder if they are considering RISC-V. Probably not - they don’t sound like risk-taking people. But given the timelines of chip production, I would think a couple years from now a solid RISC-V server might be very much in demand.	rough-sea	9.379888	-5.6195226	comment	5.0	45.0	1574504947	-10.572714
21643952	AVX register corruption from signal 	AVX register corruption from signal delivery	est31	9.679372	-5.7181816	story	5.0	159.0	1574812340	-7.418595
21663009	Hello .. I’m the author of this arti	"Hello .. I’m the author of this article. Reading all your comments was an absolute blast.Since there is some curiosity around temperature and voltage variation - here are some more details for you folks to geek out on.When you build a system with a DRAM interface, you typically specify 2 parameters
- A temperature range you guarantee its operation within. For example, this range could be 0C-80C. 
- Maximum rate of change of temperature your system can handle. Example, +/-2C/min.Now, to test if the system can withstand the above 2 parameters, while the firmware is being developed it is put in a Thermal Chamber and experiments such this are conducted: 
- Do a cold soak for a few hours (i.e., power down the system and leave it in a 0C chamber for a few hours). 
- Then power on the system and "	subbdue	9.743248	-5.428613	comment	5.0	17.0	1575017195	8.12761
21678587	I doubt there would be a hard requir	I doubt there would be a hard requirement on any AVX instructions, just that it can take advantage of them if available.	dantiberian	9.503428	-5.5310493	comment	5.0	16.0	1575243590	7.9599648
21684595	Arm brings custom instructions to it	Arm brings custom instructions to its embedded CPUs	lelf	9.685356	-5.408444	story	5.0	35.0	1575308108	-7.667093
21705353	<i>Nobody wanted to pay more for cor	<i>Nobody wanted to pay more for cores with no software support.</i>This is just the general backwardness of many of the SOC providers. ARMv8 has a 32-bit compatibility mode (aarch32) designed to run 32-bit software. So any core produced would have run any of the existing android/etc OS's and applications just fine with a path forward to 64-bit. Since all the major players had their own core teams they could have been tasked with making armv8 cores, but instead were doing the minimum required. Its only after they got broadsided by apple did they scramble to license ARM's cortex designs since they didn't have any of their own.edit: Just to add to this, despite the article, ARM was doing just fine in the smartphone market selling a 32-bit architecture against mips & x86 which had a 64-bit ar	StillBored	9.620994	-5.242381	comment	5.0	20.0	1575484554	-7.6792717
21709428	ARM has never enjoyed a Op/J advanta	ARM has never enjoyed a Op/J advantage over x86. They have low-power designs, yes, but they don’t do more work for a given amount of energy.x86 won fair and square. The risc people failed to foresee that instruction density would be extremely important to performance. Intel didn’t beat them with physics. CISC is just fundamentally better.	goosehonk	9.551204	-5.5063877	comment	5.0	18.0	1575512716	-10.418308
21709077	Well, and for 25-30 years, everyone’	Well, and for 25-30 years, everyone’s been crowing about how they were doomed to fail because of x86 as a CISC design. Intel killed off most RISC competitors as Moore’s Law held in the 90 and they could just add more transistors to turn x86 into a facade. But that increase in transistors and doing whatever possible to keep x86 performant meant they were doomed to lose the power/performance war that came with mobile processors. ARM held on just long enough in the low margin embedded world to then conquer mobile. Intel was able to win price/performance through superior fabrication and economies of scale, but power/performance really does require a superior design.If Intel recovers, it may need to jettison x86, or offload x86 interpretation to a secondary unit for desktop processor with it go	jonstewart	9.505755	-5.281424	comment	5.0	45.0	1575508611	-7.7412734
21709884	Intel's “Cripple AMD” Function	Intel's “Cripple AMD” Function	jigglypuffs	9.2703495	-5.2283926	story	5.0	95.0	1575518685	7.9141207
21725939	Turning .NET assemblies into FPGA ha	Turning .NET assemblies into FPGA hardware	victor82	9.083797	-5.381364	story	5.0	87.0	1575666110	8.348136
21726279	i wouldn't really call this programm	i wouldn't really call this programming FPGAs with .NET languages. it's more just converting .NET code to run on FPGAs. those are two different things.also, i don't really understand how moving something that is compute bound down to an FPGA is what you do. FPGAs are slow compared to CPUs. where they help is if you have something that can be parallelized and/or you want it to happen in a real-time manner.it would be a big win if there was a more modern HDL language. VHDL actually has a lot of nice features. however, i think a cross with it and an ML language (like F# or OCaml) would be a wonderful fit for programming FPGAs, that is designing (or at least dictating) hardware with software.	nikofeyn	9.081612	-5.407044	comment	5.0	31.0	1575668724	8.47577
21760308	> Emoji are hard to type on non-mobi	> Emoji are hard to type on non-mobile platformsOn Windows they are easy: <Windows key> + .Finding the right emoji is easier than on my Android phone as Windows lets me type the emoji name. Why emoji search is missing on Android... who knows.	porker	9.816863	-6.2595153	comment	5.0	20.0	1576048652	-13.954459
39112982	I actually have a short book on the 	I actually have a short book on the Itanic/Itanium done and planned to have it released as a free download by now. But various schedule-related stuff happened and it just hasn't happened yet.I was a mostly hardware-focused industry analyst during Itanium's heyday so I find the topic really interesting. From a technical perspective, compilers (and dependency on them) certainly played a role but there were a bunch of other lessons too around market timing, partner strategies, fighting the last war, etc.	ghaff	9.55659	-5.613533	comment	5.0	31.0	1706064240	-7.74375
39135247	Was I the only one tricked, bamboozl	Was I the only one tricked, bamboozled and hoodwinked into expecting an article about ARM64 vs x64?	berbec	9.695874	-5.420817	comment	5.0	15.0	1706216557	-7.7998743
39170955	I love it. I have noted this article	"I love it. I have noted this article for my talk about how CPUs are free. To appreciate that, you have to understand that when the first microcomputers came out engineers were still in ""compute"" mode[1], we were lectured that you wouldn't use a hard coded loop to check for a switch closure, you had to use interrupts because otherwise you were wasting all those CPU clocks. And computing at the time was often billed in weird units like ""kilocoreseconds"" (which is the number of seconds * the number of 1024 word pages of core (RAM)) that were consumed when your program ran.The logical extreme end of Moore's law was that you could put a CPU into a very, very small amount of silicon and that meant they were essentially free. (Chips cost by die area & layers). Another article like this is Bunnie "	ChuckMcM	9.526694	-5.192797	comment	5.0	47.0	1706484465	-8.718545
39238953	60-Bit Computing (2022)	60-Bit Computing (2022)	klelatti	9.837455	-5.557819	story	5.0	77.0	1706954460	-4.189933
39245664	TCC RISC-V Compiler Runs in the Web 	TCC RISC-V Compiler Runs in the Web Browser (Thanks to Zig Compiler)	lupyuen	9.455321	-5.790087	story	5.0	173.0	1707001386	-10.550673
39269312	@Timot05I wish you the best.  Among 	@Timot05I wish you the best.  Among other things, you are reinventing Verilog and other attempts.  Yet, of course, evolution does not happen without people who are willing to devote their valuable time and effort to consider new ideas.My personal perspective, after having designed hundreds of PCB's, is that there's a reason for which symbol-based data entry has survived decades of computer-based circuit design evolution.I have also written more software than I can remember in more languages than I am able to list.  I have less than zero interest in using a software process to describe circuits of any kind.  What makes sense for hardware design inside an FPGA somehow does not translate well outside the chip.Software and hardware engineering are very different things.  It is probably correct	robomartin	9.099089	-5.3987923	comment	5.0	32.0	1707180383	8.403346
39293405	I'm probably in the minority here, b	I'm probably in the minority here, but personally I'd much rather review a 300 line PR instead of 6 50-line ones if the change is a single context.I briefly worked with a hard line-count-limit for PRs and I thought it made everything much worse. It is fine for changes that are actually small, but when you need to go back and re-open 4, 5 merged PRs in different tabs to get the full context again, the time to review increases tenfold with tiny PRs that don't really make complete sense by themselves.I have worked with co-workers that have the complete opposite preference, though, and anything over a set amount of lines wouldn't even be reviewed.Interesting to see the numbers on the article, however. My anecdotal experience would make me guess the opposite. I feel like work slows to a crawl o	hugocbp	8.759091	-6.3335505	comment	5.0	25.0	1707335668	2.1457007
39317059	If you're not familiar, the Atomic p	If you're not familiar, the Atomic project is really interesting. Its focus is stability and reproducibility, trying to solve the fragility that can happen when the default way to use software in Linux is `sudo apt-get install`.There's a community offshoot called Universal Blue (after the original Atomic image Silverblue).  It uses the standards set for containerization to make userland configuration reproducible as well.   There's a manifest (Containerfile) that enumerates all the modifications, which means an upgrade is bump the version of the base image and replay all the modifications from the manifest. It's also meant to limit `sudo` usage, so you're not in the habit of giving root to random software you downloaded from the internet.Their most famous image is Bazzite, which will repli	bsimpson	9.775917	-6.1293015	comment	5.0	35.0	1707497881	-8.905408
17868603	Sorry to burst any bubbles here, but	Sorry to burst any bubbles here, but this is s very incomplete implementation.You couldn’t run anything but small toy programs on this machine.  This is more like what a student would build in an undergraduate course in computer architecture.For example, there is no MMU, no debug support, no traps, no interrupts, no exception handling, no OS privledge levels, no FP, no memory controller etc.Of course, one wouldn’t implement all of these in a few hours.The fact that this is RISCV is somewhat of a red herring as you could do a similar thing with a restricted subset of MIPS or ARM or even x86 as they do in UT Austin’s comp arch class.	akuma73	9.456066	-5.595013	comment	5.0	20.0	1535554273	-10.477777
17911024	This is pretty great. I have been wa	"This is pretty great. I have been wanting to get into FPGA programming so it's nice to know how low the ""basement"" price is for the essential equipment.Can anyone else recommend any other cheap entry level boards?"	nategri	9.098056	-5.302499	comment	5.0	16.0	1536082639	8.32593
17912365	All these new affordable FPGA are ge	All these new affordable FPGA are getting really tempting to learn more about them. I've been debating for a while to get the TinyFPGA BX board from Sparkfun. Though I don't have a specific application yet. Are FPGA used in robotics often? Or is the response time so low (relatively) that it makes more sense to stick with a uC?Side note, this might seem like stupid question, but can anyone explain what APIO[1] is (which TinyFPGA uses)? I'm kind of confused what it's used for.[1] https://github.com/FPGAwars/apio	syntaxing	9.09078	-5.338076	comment	5.0	23.0	1536091841	8.335577
17936823	I read a post yesterday on a general	I read a post yesterday on a generalized notion of compositionality [0]. It was neat and extolled the virtues of modularity and compositionality and being able to reason about system by reasoning about its parts.If I'm understanding OP, this means that to use the AVX-512 instructions well, a compiler that has to think about instruction speed as a function of what other instructions are around it. It might be faster to write operation X with these instructions than without, but only if you don't also write operation Y with them, because then the CPU would get too hot.That sounds so much harder! Hot damn! I know CPUs are complicated and 1 instruction = 1 cycle is wrong in many ways, but this just sounds especially difficult.[0] https://news.ycombinator.com/item?id=17923075	imh	9.716602	-5.7068152	comment	5.0	23.0	1536347049	8.198789
17969977	So beautiful.I wonder if it could be	"So beautiful.I wonder if it could be done in a similar way but run full speed? From the FAQ:> Does it run at the full speed of an original 6502 chip?
> 
> No. The MOnSter 6502 is relatively slow compared to the original, thanks to the much larger capacitance of the design. The maximum reliable clock rate is around 60 kHz. The primary limit to the clock speed is the gate capacitance of the MOSFETs that we are using, which is much larger than the capacitance of the MOSFETs on an original 6502 die.I think I'm imagining most of an entire motherboard of something similar to the C64 or Apple ][ implemented this way, wall mounted along with a display and controls, with a classic software library."	jmull	9.527377	-5.2533913	comment	5.0	17.0	1536767345	-7.47049
17988903	I was under the impression that x86 	I was under the impression that x86 is not energy-efficient enough to be used on a phone. But I guess that applies to the modern variant of x86 with a quite bloated instruction set. Who knows if this version of x86 has a more restricted instruction set.	jannes	9.691294	-5.220307	comment	5.0	33.0	1536944628	-7.770639
17988972	"This ^^. The ""OMG... HORROR"" in this"	"This ^^. The ""OMG... HORROR"" in this article about the mere fact of x86 usage is deeply silly. The stuff about C64 and so on at the end... there's just no redeeming this mess. The mods should nuke it."	jonstokes	9.748315	-5.466074	comment	5.0	21.0	1536945070	-7.7797456
17996945	Alleged AMD EPYC ‘Rome’ 7nm Based 64	Alleged AMD EPYC ‘Rome’ 7nm Based 64 Core Processor Performance Leaks Out	t3f	9.316986	-5.1977644	story	5.0	45.0	1537062670	7.91551
18001499	Linus, His Apology, and Why We Shoul	Linus, His Apology, and Why We Should Support Him	jonobacon	9.283709	-5.892582	story	5.0	40.0	1537136051	4.2422833
18004108	I think one has to be fair about wha	I think one has to be fair about what sort of asshole Linus is. He is not like Steve Jobs, Balmer and Gates who could be vindictive and get personal.For Linus it is more about being far too blunt. But you can clearly see Linus himself being aware of it and having some humbleness about it. Jobs in contrast would never admit his bad behavior.As a fellow Nordic (Norwegian) I feel a significant component of this is simply Nordic cultural trait. We are quite blunt. We value honesty and directness. However Finns I believe are farther out on that spectrum.The second parts is that I think he has probably mild asperger traits. I have that, my wife and oldest son. That does not make you an asshole. I don’t talk like Linus but it can mean you often are not able to pick up other people’s emotional sta	jernfrost	9.269743	-5.89537	comment	5.0	21.0	1537173014	4.27668
18107165	Two bits per transistor: high-densit	Two bits per transistor: high-density ROM in Intel's 8087 floating point chip	magnat	9.5195	-5.3469987	story	5.0	93.0	1538328449	8.309871
18124585	Sounds really good. Is it only free 	Sounds really good. Is it only free as in free beer or editable too?The interesting applications for RISC-V are Vector Extensions and other application specific mods.	ingenieroariel	9.393184	-5.6780605	comment	5.0	22.0	1538506565	-10.582885
18124597	Wow, not only FPGA-optimized Cortex-	Wow, not only FPGA-optimized Cortex-M1, they also releases Cortex-M3, one of the most popular MCU IP.BTW, are there many applications integrating a MCU core with FPGA rather than a AP core? I only have seen Xilinx products that uses Cortex-A core.	kbumsik	9.390651	-5.280926	comment	5.0	16.0	1538506668	7.9361634
18138636	> One country in particular has an a	> One country in particular has an advantage executing this kind of attack: China, which by some estimates makes 75 percent of the world’s mobile phones and 90 percent of its PCs.Intel and AMD are both USA based companies.Is it conceivable their processors contain backdoors in a similar vein?	TheSpiceIsLife	9.537851	-5.2067094	comment	5.0	25.0	1538649002	7.706765
18138733	Strange that there's no mention at a	Strange that there's no mention at all of RISC-V. RISC-V also runs on FPGA, right?Does it really justify yet another RISC instruction-set?Impressed that there's apparently already a GCC backend though.	MaxBarraclough	9.404241	-5.680916	comment	5.0	38.0	1538650422	-10.564064
18141151	I'm not a hardware engineer, but my 	I'm not a hardware engineer, but my understanding is that some FPGAs include an entire cpu core as part of the chip? This seems much more efficient than designing your own.	skybrian	9.130454	-5.342267	comment	5.0	17.0	1538669334	8.278136
18140297	Reminiscences of the VLSI Revolution	Reminiscences of the VLSI Revolution (2012) [pdf]	dunkelheit	9.454635	-5.30371	story	5.0	56.0	1538664048	-10.47355
18164607	Race conditions: now in hardware at 	Race conditions: now in hardware at the gate level!A few questions1. Could you call current SOCs asynchronous since they not only clock different blocks at different rates, but internally within a block subsections run at various rates?2. Does variable clock rate deliver many of the benefits of async without the complexity? In other words how much more blood is there to squeeze from the async stone in the current world?I doubt we'll see a competitive async chip anytime soon, but as CPUs continue to evolve perhaps we'll see the functional blocks broken up into smaller and smaller clock domains until it becomes difficult to tell the difference?	xenadu02	9.355625	-5.3109283	comment	5.0	17.0	1538980155	8.356981
18174561	SymbiFlow: A FOSS Verilog-to-Bitstre	SymbiFlow: A FOSS Verilog-to-Bitstream FPGA synthesis flow for Various FPGAs	peter_d_sherman	9.111372	-5.444625	story	5.0	69.0	1539078998	8.512559
18259947	If you're running anything CPU-inten	"If you're running anything CPU-intensive these days, you are definitely going to use those AVX cores.Video Editing, Video Games, Graphics, 3d Modeling, Photoshop. Even Stockfish Chess uses new instructions (not SIMD: but the Bit-board popcnt and pext / pdep instructions) to accelerate chess computations.At a bare minimum, AVX grossly accelerates memcpy and memset operations. (Setting 256-bits per assembly instruction instead of 64-bits per operation is a big improvement). And virtually every program can benefit from faster memcpy and faster memsets.""Standard Software"" isn't written to be very fast. But anything that's even close to CPU-bound is being upgraded to use more and more SIMD instructions."	dragontamer	9.449588	-5.4222603	comment	5.0	24.0	1539982126	7.960537
18308471	I went to a local RISC-V meetup last	I went to a local RISC-V meetup last night, and it seems like something interesting to play with. Does anyone know when actual chips might become affordable? The only board I could find available at the moment is the HiFive Unleashed, which is $999.	kragniz	9.369376	-5.53644	comment	5.0	22.0	1540555712	-10.550181
18390303	Not only that, but they also apparen	Not only that, but they also apparently recompiled Linpack with the Intel compiler -- which is notorious for favoring Intel chips -- before running the benchmarks. Some really shady stuff going on here.	einr	9.683109	-5.5362153	comment	5.0	33.0	1541506629	-7.302455
18404756	Probably a stupid question: Instead 	Probably a stupid question: Instead of 6 core or 8 core CPUs, why Intel doesn't make 4 traditional cores + 2 FPGA cores on same die?	sytelus	9.437088	-5.235667	comment	5.0	19.0	1541660365	7.9482346
18417596	Question, why is DRAM still packed s	Question, why is DRAM still packed separately?	jesuslop	9.717973	-5.2478833	comment	5.0	28.0	1541794805	7.9838386
18461240	I don't know much about low level st	I don't know much about low level stuff, but from what I have read:- these issues are inherent in speculative execution- speculative execution is critical for performance- therefore these issues are really hard to eliminate- these attacks can break out of VM'sAre these points correct?  Because if they are, it seems like a safe conclusion that most of the cloud will be compromised.	travisoneill1	9.692472	-5.58159	comment	5.0	40.0	1542302816	7.7647734
18467086	Weird?  68000 is hardly weird -- the	Weird?  68000 is hardly weird -- the original Sun machines were 68Ks.  The MIPS CPUs were designed to run C from the get go.And the reference in the manual to the Unisys machine not having byte pointers: the PDP-6 (the original 36-bit machine as far as I know) had byte pointers that allowed you to specify bytes in the width 1 to 63 bits wide.  It was common to have six-bit characters (you could pack six to a word) as well as 7-bit ASCII characters (you could pack 5 to a word).	gumby	9.626929	-5.2015047	comment	5.0	19.0	1542352228	-7.533938
18473604	This is great progress towards makin	This is great progress towards making unikernels non-runtime specific.However, I am still skeptical of the idea that unikernels will ever be production friendly. The biggest deficiency, by the definition of a unikernel, is the complete lack of debugging tools available. There is no top, perf, etc in a unikernel. In docker, I can still exec into a running container to debug and investigate. Unikernel issues lend themselves to “just restart it” rather than “let’s debug and fix it” mindsets.I’ve run a k8s environment with kata containers for a while and as time has gone on, I’ve found that Solaris Zones (smartOS) are probably the most scalable way to achieve process/VM isolation for applications.	zippie	9.875432	-6.2793655	comment	5.0	24.0	1542422517	-12.363248
18477372	Apparently the way to turn this and 	"Apparently the way to turn this and other mitigations off is the following mouthful:    pti=off spectre_v2=off l1tf=off nospec_store_bypass_disable no_stf_barrier

Would it make sense to have a single flag to ""run insecure but fast"" that we can use on pure development machines, test servers and the like?  My Intel development server only runs code I choose."	rwmj	9.703759	-5.5773263	comment	5.0	29.0	1542488371	7.830996
18482044	Sort of - they let mainboard vendors	"Sort of - they let mainboard vendors decide whether to support it or not, which means it can be a crapshoot. For example, MSI's been known in the past to kill ECC support with a BIOS update; some vendors have tested that you can use ECC RAM but won't enable any of the error correction (for example, Gigabyte say this in [1]: ""non-ECC mode"".)Selfishly I really wish they would make it easier, because I'm in the market for a new personal-use storage machine and I've spent far too long researching all this crap but it's looking like I'll have much more certainty that it'll all just work if I buy a Xeon E3/E-2000 series and that's unfortunate.1: http://download.gigabyte.eu/FileList/Manual/mb_manual_ga-h11..."	tolien	9.442256	-5.474811	comment	5.0	22.0	1542569263	8.194523
18482118	Benchmarks on the 32-core TR are... 	Benchmarks on the 32-core TR are... disappointing, to say the least.[1] If you’re purely compute bound, it can be a win over the 16-core version, but if memory access is a factor, it’s a wash due to the extra hops to memory. And to my mind, there are very few pure-compute applications that wouldn’t benefit more from AVX2 and the like... in which case a cheaper Intel CPU would still wipe the floor with the 32-core chip.I’m a huge fan of the Threadripper concept, just wish they hadn’t neutered the 32-core chip compared to its Epyc counterpart.[1]: https://www.anandtech.com/show/13124/the-amd-threadripper-29...	s3cur3	9.429629	-5.261724	comment	5.0	28.0	1542569950	7.9366
18585207	Attack or otherwise, this is ultimat	Attack or otherwise, this is ultimately a hardware reliability problem. Any access pattern that can cause bit errors is indicative of faulty memory. If I remember correctly, the original Rowhammer paper shows that RAM from ~2009 and before was completely unaffected. Yet in the continuing quest for higher densities and lower costs (is RAM not cheap enough already?) the manufacturers are sacrificing reliability and correctness, and IMHO that is not acceptable, nor is their insistence that this is not a problem (it seems they were powerful enough to convince one well-known memory testing application to make the RH test optional(!) and spread FUD that it wasn't really a concern if that test failed, because a lot of RAM would fail it.) NO access pattern should ever cause errors to occur on corr	userbinator	9.649626	-5.6397934	comment	5.0	25.0	1543792633	-13.906705
18627076	Great point about core frequency bei	Great point about core frequency being important for per-core licensing.I wonder if any software with per-core licensing has tried to take a possibly 'fairer' approach, for example by summing the frequency of all cores? E.g. 4x cores at 2GHz is  8GHz?It's not that straightforward a comparison, I know, just wondering if anyone has tried something different here.	GordonS	9.515091	-5.2613335	comment	5.0	23.0	1544185621	7.8860583
18652203	This can be powerful. They don't hav	This can be powerful. They don't have to build general CPU right away. Start with storage and by the time you have database boxes on ASICS designed to match your software you're already winning.I'm surprised there's still not much effort to make FPGAs more affordable and base everything on it. With this scale it seems like it should be a win on the long run over deploying new ASICs every few years.	comboy	9.100478	-5.3069563	comment	5.0	29.0	1544486025	8.235264
18653361	CISC is still an asset rather than a	CISC is still an asset rather than a liability, though, as it means you can fit more code into cache.	earenndil	9.499183	-5.699458	comment	5.0	26.0	1544504103	1.4483658
18663758	"The author states:>""The x32 ABI allo"	"The author states:>""The x32 ABI allows for making use of the additional registers and other features of x86_64 but with just 32-bit pointers in order to provide faster performance when 64-bit pointers are unnecessary.""Can someone say why would 32 bit pointers provide faster performance then 64 bit on modern hardware? Is this performance difference really non-negligible?"	bogomipz	9.835068	-5.47563	comment	5.0	18.0	1544622130	7.934342
18702653	I don't program in assembler profess	I don't program in assembler professionally, but I understand that MIPS has some ugly, ugly aspects:https://www.jwhitham.org/2016/02/risc-instruction-sets-i-hav...Sun opened the SPARC T2 a decade ago, and it certainly has not become popular:https://www.oracle.com/technetwork/systems/opensparc/openspa...It does seem that RISC-V corrects a number of these design eccentricities. SPARC did not move the market an inch with an open release - perhaps MIPS will fail just as spectacularly.	chasil	9.517845	-5.6587343	comment	5.0	39.0	1545084178	-10.457738
18701768	That is pretty awesome. So three 'op	That is pretty awesome. So three 'open' RISC architectures (RISC-V, MIPS, SPARC) with varying amounts of ecosystem support.That the patent stuff seems to be dealt with is key here, one of the challenges with working with MIPS and SPARC was always that their 'parent' organizations (SGI and Sun respectively) were essentially patent trolls when it came to third parties being successful with the architecture. Now that SGI and Sun are just footnotes in the computer industry, perhaps these architectures can flourish.	ChuckMcM	9.387813	-5.6641526	comment	5.0	25.0	1545077616	2.5147038
18751530	>Plus, as a user, I trust Linus more	">Plus, as a user, I trust Linus more than any decentralised process I can think of.Can you make a compelling argument for why that is? Is it that you believe Linus has your personal well being in mind or you are unfamiliar with decentralised ""processes""?edit: Questioning why someone trusts a person they never met over transparent processes that mitigate risks should not deserve downvotes. If we control what can be discussed, we also control what can be known..."	decentralised	9.322265	-5.881848	comment	5.0	32.0	1545648473	4.2122984
18752122	Linus is amazing. Is anyone else a b	Linus is amazing. Is anyone else a bit unnerved that the entire tech world seems to hinge on the good instincts of this one guy? I hope there is another benevolent dictator to take over once he's gone.	chkaloon	9.289522	-5.888282	comment	5.0	54.0	1545659510	4.3235636
18753145	I've been extremely critical of Linu	"I've been extremely critical of Linus Torvalds in the past. I was glad to see him decide publicly to change his behavior, and I am glad to see him doing better here.Personally, I think this level of disappointment/anger/trust issue would be best dealt with face-to-face or via a phone or Skype call, or at least an off-list email. However, given the unique situation of the Linux kernel, I think it was appropriate to send to the public list.The only line I'd remove or finesse is ""Yeah, this is complete garbage."" Otherwise, I think this is a great example of how to convey anger without personally attacking anyone. Linus doesn't swear, he doesn't call Eric stupid or curse him out, but he still says what he means: The behavior was out of line, it has to stop, and, most importantly, it represents"	ivraatiems	9.28202	-5.8862467	comment	5.0	19.0	1545672658	4.303464
18835683	I was excited for AVX512 long ago bu	I was excited for AVX512 long ago but I've since heard that if you are jamming AVX512 instructions to every core you get a forcibly lower clockrate. In practice this sounds like it'd suggest using an AVX512 algorithm could actually be slower even when it's faster. If that's the case, I wonder what kind of performance gain you'd have to hit to beat a scalar or SSE-based vectorized algorithm.	jchw	9.454152	-5.5531783	comment	5.0	37.0	1546737854	8.115155
18835911	You also get a lower clock rate from	You also get a lower clock rate from running scalar code on many cores at once.  Use of the 512-bit unit only makes the coefficient different.That said, the biggest mystery in this article is why you'd ever want to remove all whitespace from text. Why is that useful?	shereadsthenews	9.535539	-5.292576	comment	5.0	22.0	1546740419	7.8517876
18891448	This reminds me of core rope memory 	"This reminds me of core rope memory [1], AKA ""little old lady"" memory, which was literally a ROM that was manually woven.[1] https://en.wikipedia.org/wiki/Core_rope_memory"	elvinyung	9.868507	-5.2476225	comment	5.0	22.0	1547305775	7.9863043
29776890	Here's the [1] patch cover letter se	Here's the [1] patch cover letter sent to Linus Torvalds (similar to a Pull Request I suppose)[1] https://lore.kernel.org/lkml/YdIfz+LMewetSaEB@gmail.com/T/#u	gitgud	9.40203	-5.78989	comment	5.0	31.0	1641179446	4.121003
29793864	Wake me up when those cores can run 	Wake me up when those cores can run x86 code.	jabej	9.563513	-5.3139305	comment	5.0	15.0	1641297377	7.995018
29825528	(2021)RISC OS Pico [1] (I think it w	"(2021)RISC OS Pico [1] (I think it was short for Pi Computer) booted the Pi directly into BBC BASIC. It would be great if they'd make it a supported image on the current Pi boards.The .zip archive is still available if you follow the links on archive.org (and even includes the book ""First Steps in Programming RISC OS Computers"" and associated demo programs.) Its 2.1MB boot .IMG is somewhat smaller than Ubuntu. Has anyone tried it?[1] https://web.archive.org/web/20181109020010/https://www.risco..."	musicale	9.439209	-5.5962567	comment	5.0	17.0	1641486096	-10.590553
29838685	> Intel is the reason we don't have 	> Intel is the reason we don't have ECC RAM on desktops.Intel has offered ECC support in a lot of their low-end i3 parts for a long time. They’re popular for budget server builds for this reason.The real reason people don’t use ECC is because they don’t like paying extra for consumer builds. That’s all. ECC requires more chips, more traces, and more expense. Consumers can’t tell if there’s a benefit, so they skip it.> AMD supports ECC on their consumer chips, but without Intel support it's never taken offYou’re blaming Intel’s CPU lineup for people not using ECC RAM on their AMD builds?Let’s be honest: People aren’t interested in ECC RAM for the average build. I use ECC in my servers and workstations, but I also accept that I’m not the norm.	PragmaticPulp	9.417055	-5.474869	comment	5.0	31.0	1641561150	8.236582
29946272	The RISC-V Experience	The RISC-V Experience	edo-codes	9.384501	-5.712921	story	5.0	30.0	1642254175	-10.596337
29952789	Curious, is porting complex C++ proj	Curious, is porting complex C++ projects to arm64 just a matter of updating build/CI systems or does it actually involve changing core code and adding branches if (x64) {} ... if (arm64) {}.	nodesocket	9.736039	-5.36955	comment	5.0	15.0	1642301348	-7.830463
29958687	This different article from STH expl	This different article from STH explains what the AMD PSB is, without having to watch a video: https://www.servethehome.com/amd-psb-vendor-locks-epyc-cpus-...> An OEM who trusts only their own cryptographically signed BIOS code to run on their platforms will use a PSB enabled motherboard and set one-time-programmable fuses in the processor to bind the processor to the OEM’s firmware code signing key. AMD processors are shipped unlocked from the factory, and can initially be used with any OEM’s motherboard. But once they are used with a motherboard with PSB enabled, the security fuses will be set, and from that point on, that processor can only be used with motherboards that use the same code signing key.Basically, the CPU once in that mode will only work with the same signing key, and cann	jfim	9.44624	-5.2071924	comment	5.0	34.0	1642359013	7.871305
29979435	With the current prices and the lack	With the current prices and the lack of availability, the best 2022 server hardware for me will be 2018 server hardware.The one thing that's relatively new-ish that I'd like to play with is persistent memory. But I'm curious about it for embedded applications where power is not assured. For servers? I don't understand the use case, because datacenters are where we have the most consistent power. Perhaps it'd be more interesting if I ran workloads on large datasets...	johnklos	9.929481	-5.212799	comment	5.0	21.0	1642515430	8.192403
30120171	Not my intent to offend anyone and p	Not my intent to offend anyone and plus I'm not American so I might not know your culture well enough, but please don't. Why should we insert race in technology when 1) it's not useful and 2) it's not relevant at all. I mean, who even cares whether the smiley face is white or black or whatever else? It's just a smiley face. IMHO there are more significant areas to care for.	lightspot21	9.782314	-6.2590294	comment	5.0	16.0	1643402957	-13.992881
30243510	> All the modern Intel CUPs have a R	"> All the modern Intel CUPs have a RISC core inside..This reminds of (yet another) mind-blowing Chris Domas video:
https://invidious.snopyta.org/watch?v=jmTwlEh8L7g"	xelxebar	9.39439	-5.6410403	comment	5.0	27.0	1644234500	-10.551272
30248637	Intel joins RISC-V international and	Intel joins RISC-V international and invests another billion in foundry	vanburen	9.34177	-5.6137724	story	5.0	44.0	1644257282	-10.581472
30266096	Does this seem a little outdated to 	Does this seem a little outdated to anyone else? Like, ImgTec haven't really existed as a top tier player for almost a decade, and AFAIK Apple doesn't license Ip cores from ARM, but the ISA itself.Also, I feel like this diagram is just weird. The pyramid makes no sense to me, I always think of it in terms of physical and logical, you have the physical - the Materials, WFE, Fabs, and logical - IP Cores, and Fabless Semis, with the EDA tools somewhat providing the integration. The logical organisation of the pyramid makes no sense to me.	Traster	9.588729	-5.383118	comment	5.0	15.0	1644361226	-7.6632395
30266636	Can someone please explain RISC to m	Can someone please explain RISC to me?I gather that it is a direct competitor to ARM.By extension it competes with Intel and AMD [and NVidia?] - as phones swallow the world, Both Apple and MS have ARM desktop OS's, and the big boys like Adobe are rewriting for ARM.But I don't see how RISC has any hope, as ARM is already everywhere, and so much software has been written, and is being converted to being ARM compatible.In fact, I don't see how x64 has any real future!What am I missing with both AMD and RISC? How does RISC get such good press?And - OT - how anyone choose a name which projects the concept of being risky ;)	sam_goody	9.410444	-5.6217337	comment	5.0	15.0	1644364903	-10.539044
30277417	"I have issues with the section ""Micr"	"I have issues with the section ""Microcontroller vs Microprocessor: Differences""Microprocessors are just the CPU, usually with the system bus wired out. Microcontrollers are combined systems, which include a processor and usually some kind of firmware storage and RAM. You can usually differentiate them by whether their pins are address/data lines or gpio-like.> microprocessors have a memory management unitThe 8086 didn't. Having an MMU seems unrelated to the MCU/MPU distinction...At least, this was my knowledge until now. Is this like ""crypto"" where the meaning changed while i was not paying attention?"	blueflow	9.594653	-5.3424635	comment	5.0	62.0	1644435775	7.767862
30287212	If I have one wish for AMD, I wish t	If I have one wish for AMD, I wish that they would make FPGAs (and Xilinx) a more open and diverse platform like the PC. Not that the PC is perfect (there's still closed-source firmware), but any improvement to the current state of FPGAs would be welcomed.	gjsman-1000	9.134024	-5.240294	comment	5.0	32.0	1644505991	8.00632
30317832	I'm really interested in this subjec	"I'm really interested in this subject. What with it being my job. I've thought about this a lot, and the fundamental problem for me is that you have RTLs, but these don't mean anything, they're a cruel joke on engineering students ""Oh sure, you can do that in this language but does it map.""The problem is that really it's only a tiny subset of RTL languages that are supported by FPGAs, and an even tinier subset that's optimial. God alone can write 10 lines of RTL that'll map to DSP blocks utilizing the carry chain. The problem isn't that the languages don't support multiple targets, it's that the targets are so idiosyncratic that you have to know exactly how it maps.Now, what this format promises to do encompasses describing the resources on a device, but there's a few problems with this. F"	Traster	9.081681	-5.384425	comment	5.0	23.0	1644712256	-9.10781
30364535	Someone more capable than I should m	Someone more capable than I should make the final form of this:  No green or yellow feedback is provided, but only the timing information used to calculate it.   If cryptographers are serious about side-channel attacks, why not show off the danger using no-information Wordle?(edit: Absurdle was taken)	moltenguardian	9.829493	-5.625475	comment	5.0	19.0	1645039558	-5.7236886
30383859	I haven't had chance to use this yet	I haven't had chance to use this yet but it's on my list to use with an AVR. Does anyone have any experience using it, how is it? I really like how it's unit tested and seems fairly well documented and even has github actions setup to build and test which seems to be rare for C libraries on github.	lloydatkinson	9.713048	-5.626519	comment	5.0	20.0	1645177590	-7.6730494
30403143	Heline – Code search for modern deve	Heline – Code search for modern developer	ahmadrosid	8.837459	-5.9896493	story	5.0	30.0	1645330290	-11.24966
30434648	N64 WASM	N64 WASM	tosh	9.692406	-5.2619023	story	5.0	131.0	1645568137	7.7473593
30447167	> For example, 36-bit physical addre	> For example, 36-bit physical addresses support 16GB memories ... and there already have been shipped single-rack microprocessor boxes with 16GB using just 16Mb DRAMs; there are of course, more in the 4GB-8GB range. Of course, a 32-bit physical addressing machine can get around this with extra external-mapping registers ... assuming one can ignore the moaning from the kernel programmers :-)I remember 16 megabytes of RAM being enough for a good gaming rig in 1995. Who was using gigabytes of RAM back then, and for what?	AdamH12113	9.86598	-5.2201953	comment	5.0	19.0	1645653798	8.112223
30492925	I maintain that most of the car's el	I maintain that most of the car's electronic guts (minus infotainment and auto-steer etc) could be done with a handful of 8051s.  The problem is almost nobody it seems knows assembly anymore.  The standards of CAN and LIN were created in the days of 8-bit MPUs, even I2C is quite old.(I like assembly, but would never suggest it for a professional situation unless painted into some unforeseen corner, and assy would be the only way out.)	GeorgeTirebiter	9.625496	-5.4075356	comment	5.0	22.0	1645998596	-7.48862
30515668	Their business model was to be sold 	Their business model was to be sold to NVIDIA, but that didn't work out.Anyway, that's all well good, but - does anyone end up making decent RISC-V processors that could replace a desktop CPU, or a RPi CPU, or something weaker but not in a small niche? Or is this still a vision for the future?	einpoklum	9.384094	-5.562622	comment	5.0	49.0	1646150190	-10.524998
30519698	ARM's less open platform also comes 	ARM's less open platform also comes with some advantages though. It's easier for ARM to prevent ecosystem fragmentation and non-standard instruction set extensions. Or to push for migrating to newer platforms like the move to 64bit ARM.Software is less affected by these issues because it's inherently more flexible. If I install some wonky experimental Linux feature, it doesn't really matter and I can just revert. Different story when this is baked into hardware. The startup costs for independents to contribute to a software only ecosystem is also much lower. How many organisations have the talent to contribute to RISC-V, but wouldn't be able to afford purchasing a license?Didn't mean to sound so negative but I worry in the hardware space that the advantages of such an open design are not a	initplus	9.417586	-5.581883	comment	5.0	19.0	1646167276	-10.570132
30518606	Is there a platform similar to RPi b	Is there a platform similar to RPi but with a RISC-V cpu? (I don't care about gpu, so headless one, but with rj45 and few USB3 ports would be great).	krzyk	9.395699	-5.6142383	comment	5.0	16.0	1646161875	-10.562383
30573814	I don't understand the stock valuati	I don't understand the stock valuations at all.  I'm not a huge finance person, but Intel has a PE of <10 and pays a 3% dividend.  AMD has a PE >40 and no dividend.  Intel has their own manufacturing capacity and hasn't done a terrible job of catching back up to AMD.  I can see if there's worry about ARM eating into Intel profits, but that should affect AMD too.Toss in global politics with TSMC and Intel looks like a much safer bet long term.  What makes AMD more attractive from an investment point of view?  There's got to be some reasoning for it and I'd love to understand it.	donmcronald	9.220492	-5.1954436	comment	5.0	15.0	1646528196	7.8594284
30588489	According to Paul Allen's book [1] a	According to Paul Allen's book [1] about his time at Microsoft (admittedly a biased source), his particularly critical contribution was an 8088 emulator/simulator for the PDP-10. That allowed them to write and even interactively debug (if I remember right) BASIC for the 8088 on the PDP. It would've been hopeless to develop directly on a microcomputer, so they would've had to have written on the minicomputer, transferred the binary across and see if it worked, and iterate like that.That contribution wouldn't show up directly in the BASIC source code, since the emulator wasn't part of BASIC itself.[1] https://www.amazon.co.uk/Idea-Man-Memoir-Co-founder-Microsof...	quietbritishjim	9.754005	-5.3386917	comment	5.0	31.0	1646664887	-7.346174
30590582	Ask HN: Why isn’t open source hardwa	Ask HN: Why isn’t open source hardware a thing yet?	DaniDaniel5005	9.0893755	-5.5155053	story	5.0	2.0	1646673799	8.681628
30605345	Didn't AMD do something similar with	Didn't AMD do something similar with putting 2 CPU chips together with cache in-between? What's the difference here in packaging technology? (maybe there is no shared cache here)	xiphias2	9.404575	-5.1921105	comment	5.0	16.0	1646768124	7.8906646
30693361	In recent years I've become more and	In recent years I've become more and more worried that work on RISC-V is just a way of empowering non-democratic governments the world over by giving them an escape hatch out of western controlled IPs. Yes it's better that these things are not controlled by big companies and yes this should improve innovation in the hardware space but what are we trading off when we get that benefit?	mlindner	9.371973	-5.6664877	comment	5.0	17.0	1647387258	-10.582719
32649275	I suspect your CPU is Silicon (ARM b	I suspect your CPU is Silicon (ARM based), not Intel.The binary code is for Intel processors. Silicon chips have a completely different instruction set.For this same reason Android, iOS and RTos (for embeded systems) are not included among the targets.	diego_moita	9.66899	-5.3968687	comment	5.0	23.0	1661860985	-7.6416326
32833612	This is Reddit, so taking any claims	This is Reddit, so taking any claims with a severely hefty earth sized grain of salt..> Odd part 1: ... moving large numbers of VMs (100,000-500,000) over to Linux based virtualization in very short time frames.> Odd part 4: Every one of these requests involves moving the VMs off VMWare or Hyper-V onto OpenShift, specifically.As a Solution Architect at Red Hat, no sane sales rep would ever recommend or propose moving VMware footprints of that size onto OpenShift via OpenShift Virtualization[0]. As amazing as that payout would be, that would literally be account suicide if it ever got signed off on. The whole purpose behind OpenShift Virtualization is to aid in organization modernization as a way to consolidate workloads onto a single platform while giving app dev time to migrate their work	mroche	9.891158	-5.911	comment	5.0	28.0	1663133186	-13.364646
32848592	A probably naieve question. If the V	A probably naieve question. If the VPU can be used as the bootstrap loader for the CPU, much as a PDP11 on the door of the Vax 11/780 acted as bootstrap loader for the Vax, can we not simply replace all the complex VPU resident functions with 'just run on the CPU' and then resolve the external device bindings in normal CPU code?Maybe I misread it, but it read like the VPU does more than the tiny necessary bootstrap to find an image, and chain load it. It reads like it has to do some timing critical initialisations of subsystems, but I cannot but think a CPU should be able to do this for itself, once it has some run state with a kernel in memory.It's as if the VPU has to make the other bits of blobby hardware be alive, for the CPU to be able to see them. Most odd.Oftentimes there are magic 	ggm	9.815457	-5.244146	comment	5.0	46.0	1663228224	7.901295
32874564	One thing to note is that RISC-V is 	One thing to note is that RISC-V is only royalty-free for people making custom silicon implementations - i.e. the equivalent of an ARM architectural license. You still have to design the cores and that's the really hard part, moreso than designing the ISA.Apple is in a unique position where they have all these Cortex cores for various reasons, but also have the resources to actually design a RISC-V implementation that could replace them all. I doubt the people designing flash controller ICs have that level of design experience.	kmeisthax	9.409696	-5.6180553	comment	5.0	18.0	1663386090	-10.550149
32887948	I've wanted to give Mister FPGA a go	I've wanted to give Mister FPGA a go for the longest time, but the boards are never in stock any time I look. How are people getting their hands on them?	Aromasin	9.080056	-5.318006	comment	5.0	19.0	1663512102	8.304263
32890444	Because I’m ignorant: What are the p	Because I’m ignorant: What are the practical take aways from this?When is a cpu core sending a message to another core?	fideloper	9.795183	-5.5444884	comment	5.0	26.0	1663527946	8.226768
32951566	"For reference 2^64 = ~10^19.266
I do"	"For reference 2^64 = ~10^19.266
I don't think this is unreasonable at all, its unlikely that computers will largely stay the same in the coming years. I believe we'll see many changes to how things like mass addressing of data and computing resources is done. Right now our limitations in these regards are addressed by distributed computing and databases, but in a hyper-connected world there may come a time when such huge address space could actually be used.It's an unlikely hypothetical but imagine if fiber ran everywhere, and all computers seamlessly worked together sharing computer power as needed. Even 256 bits wouldn't be out of the question then. And before you say something like that will never happen consider trying to convince somebody from 2009 that in 13 years people would be buy"	LinkLink	9.930729	-5.411596	comment	5.0	18.0	1663939311	8.000573
32952572	> It allowed me to make many Nintend	> It allowed me to make many Nintendo Switch specific optimizations, and even some optimizations for the PC versionAre there significant CPU-specific optimizations that can be made for the Switch / ARMv8 that wouldn't apply to x86-64? I've never really dug into things at that level, I wouldn't know where to begin except for like vector instructions.	TillE	9.640762	-5.4283724	comment	5.0	16.0	1663944082	-7.5704303
36588906	Opening up Intel's Device Modeling L	Opening up Intel's Device Modeling Language (2022)	mepian	9.47696	-5.2745204	story	5.0	67.0	1688488074	7.7799087
36619239	Courts judge intent, not technicalit	"Courts judge intent, not technicality. If the farmer had replied ""yes"" and later said ""oh I actually meant yes I will read the contract later"" would you buy that excuse as well?"	paxys	9.7278385	-6.2454967	comment	5.0	17.0	1688663338	-0.274187
36627391	"> ""His answer: 'Not at all. Intel sh"	"> ""His answer: 'Not at all. Intel should be afraid of us. We will be bigger than them.' There was not a trace of doubt.""Given all the times that HN readers have derided grandiose executive pronouncements preceding flops, more people should recognize the above for what it is: not profundity but just puffery that happened to pan out.  Not that skill and effort weren't involved in making it pan out but that any of a zillion things could have gone wrong to make that statement false and part of any manager's job is to project confidence and instill motivation despite knowing that."	ThrowawayR2	9.300512	-5.1908045	comment	5.0	26.0	1688706255	7.6936955
36643791	Found the filing: https://www.canlii	Found the filing: https://www.canlii.org/en/sk/skkb/doc/2023/2023skkb116/2023s...It's pretty funny. The thumbs up was accepted by the court as an electronic signature.---------------------MR. JORDAAN: Objection. My client is not an expert in emojis.MR. MARSCHAL: Okay.Q.MR. MARSCHAL:But he does send emojis, correct?A.Yes.---------------------	cinbun8	9.765882	-6.277536	comment	5.0	23.0	1688819862	-13.954451
36648420	I'm grown increasingly dubious of un	"I'm grown increasingly dubious of unikernels; cutting out a layer of indirection by running the target process in kernel space seemed like a good idea -- as long as you didn't need, you know, multiple processes -- but it looks like the performance gains just aren't there.Unikernels can boot incredibly fast. Compared to a normal virtual machine that can take seconds to boot unikernels can boot in 50ms (quote from a white paper on the nanovms website)Considering that unikernels, by definition, don't have any userland, you really need to compare the unikernel boot time to the ""time to reach init"" boot time on a traditional OS -- which is under 100 ms with a Linux kernel, and down to 20 ms with FreeBSD now.  A unikernel boot time of 50 ms really isn't anything special."	cperciva	9.923545	-6.212982	comment	5.0	18.0	1688848316	-12.361556
36681567	I hope Microsoft quickly finds a sol	I hope Microsoft quickly finds a solution to move to RISC. I don't care about compatibility with older software. I want the battery life without having to move to MacOS and using it's awful window management.	omeysalvi	9.414317	-5.6151247	comment	5.0	27.0	1689086138	-10.543742
36698164	Okay, so is there actual documentati	"Okay, so is there actual documentation for the SoC used on this critter?  I mean a full Databook / Technical Reference Manual, not maybe 30 pages of overview, maybe a list of register base addresses (if you're lucky), and a pile of Linux kernel patches (upstream if you're lucky, but still of less value to someone wanting to actually write code for / port something to the SoC) or an ""SDK"" containing a bunch of low quality vendor code for the peripherals.I'd love to see a RISC-V SoC (not just a dinky little MCU) that has real / complete documentation.  So far I have yet to find any for any of the various RISC-V based SBCs that have shipped."	swetland	9.394232	-5.6396575	comment	5.0	32.0	1689182534	-10.572565
36700900	This is a Wujian 600 from Alibaba (!	This is a Wujian 600 from Alibaba (!). To my knowledge there is currently no publicly available documentation from the chip manufacturer.Was the idea of an open ISA leading to an open SoC was just wishful thinking?	kramerger	9.536535	-5.4102993	comment	5.0	19.0	1689192385	-7.6718507
36730525	Any time I see an emoji, I just want	Any time I see an emoji, I just want to turn away. I don’t know why I’m so resistant to them. Possibly because I feel I can’t take anyone seriously who would bother to pull up an on-screen keyboard just to add a little rocket ship to a line for almost no reason.	skinner927	9.789893	-6.2648754	comment	5.0	19.0	1689371942	-13.953448
36735805	Skin color emojis are the weirdest t	Skin color emojis are the weirdest thing. I always find it slightly odd if someone changed them from the default yellow. Why would one care?	vasco	9.779571	-6.2637544	comment	5.0	38.0	1689422583	10.487149
36735908	I see it can be used to define and r	I see it can be used to define and run workflows. But for reproducibility on top of the execution of operations on data, I'm wondering if there's any way to version the underlying data?Or would you typically use this -in addition- to a tool like dvc? I've used dvc a bit and while it's quite good for data versioning, I find the workflow aspect is clunky.	jerrygenser	8.922564	-6.3632174	comment	5.0	16.0	1689423531	9.139161
36749187	Ask HN: Successor to x86-64	Ask HN: Successor to x86-64	ireallywantthat	9.466852	-5.649733	story	5.0	2.0	1689527046	-10.533686
36752098	> The undocumented C9 opcode is iden	> The undocumented C9 opcode is identical to the documented CB, far return instruction.I remember this.Once ... gosh, it's hard to believe how long ago that was now, but once I knew the entire Z80 opcode table off head. I could read the Z80 machine code and disassemble it. High school crowded that stuff out of my head, I went to a special math school, it was very very hard. Except... C9 was RET (and the Z80 is an extension of the Intel 8080).  That has burned into me so deep I still remember, across more than 35 years. I will be 30 ;) years old in two weeks.	chx	9.677397	-5.610964	comment	5.0	29.0	1689546771	-7.4361424
36764996	Based on a pre RISC-V ESP32.Unfortun	Based on a pre RISC-V ESP32.Unfortunate.	snvzz	9.466893	-5.2939734	comment	5.0	26.0	1689633141	-10.045107
36851606	I'm not sure five year olds know wha	I'm not sure five year olds know what microcode is. I'm 35, been in tech nearly 20 years and don't recall having heard that specific term before today.	jahsome	9.591739	-5.426191	comment	5.0	21.0	1690220459	7.6788406
36854222	If I read the note correctly, P-core	If I read the note correctly, P-cores won't have 512-bit vector registers, but they will have the other fancy stuff added by AVX-512 (namely, vector predication stuff, static rounding mode instructions, new vector instructions like complex multiply or half-precision float, and 32 vector registers), just only for 128-bit and 256-bit vectors. Which, to be fair, is arguably the more useful parts of AVX-512 anyways; the maximum vector length being upped isn't all that interesting.	jcranmer	9.487723	-5.550092	comment	5.0	17.0	1690232911	8.047694
36883677	Staying ahead of the AMD vulnerabili	Staying ahead of the AMD vulnerability known as “Zenbleed”	tg180	9.2655115	-5.224372	story	5.0	50.0	1690400354	7.9117136
36899224	Unpacking Xilinx 7-Series Bitstreams	Unpacking Xilinx 7-Series Bitstreams (2018)	nuvls	9.087053	-5.373911	story	5.0	59.0	1690487657	8.45412
37000144	A Single-Cycle 64-Bit RISC-V Registe	A Single-Cycle 64-Bit RISC-V Register File	hasheddan	9.471118	-5.7257895	story	5.0	84.0	1691157507	-10.523732
37014506	A close look at the 8086 processor's	A close look at the 8086 processor's bus hold circuitry	Tomte	9.592111	-5.329967	story	5.0	61.0	1691257141	-7.490556
37025556	Is there any reason stack-based CPUs	Is there any reason stack-based CPUs fell out of favor?I'm fascinated by RTX2010 [0], a radiation-hardened processor which uses Forth and has been deployed on several space missions.[0] https://en.wikipedia.org/wiki/RTX2010	optimalsolver	9.563101	-5.213704	comment	5.0	46.0	1691349597	7.893314
37063789	Why would Amazon develop a custom Ar	Why would Amazon develop a custom Arm chip and not RISC-V?Don't they have to pay a fee to Arm for this, even though it is being developed by them?And would Google (which is allegedly developing their own Arm Chip) and Apple (which also has their own chip) not also benefit from backing Risc-V as well?I have not been able to get clear in my head the relationship between Risc-V and Arm, and even more so exactly what responsibility down stream each user has.Would appreciate the some ELI5 from knowledgeable HNers.---Slightly related: is it more or less a given that eventually  no one will use x64 chips (since Arm/Risc-V is more efficient)?If not for servers, is it at least a given for desktop computers, as more software is written for ARM, and re-compilers like Rosseta improve?If so, I know tha	sam_goody	9.435537	-5.4858055	comment	5.0	15.0	1691593408	-10.538872
37069548	Very unlikely anyone would care abou	Very unlikely anyone would care about this ChatGPT-level summary of how a CPU works if the author didn't mention they were 17.	whywhywouldyou	9.499743	-5.214723	comment	5.0	15.0	1691622096	7.7100844
37108216	VirGL is a poor solution to the pres	VirGL is a poor solution to the pressing problem of virtualized graphics. It only really exists because the hardware makers AMD/Intel/Nvidia in their infinite greed refuse to support VFIO on all GPU's like how IOMMU is supported on nearly all CPU's.	throwaway698585	9.898332	-5.3040123	comment	5.0	32.0	1691919207	-8.240313
37126327	If anyone is wondering: With X64 the	If anyone is wondering: With X64 the author is referring to x86_64 a.k.a. AMD64. Wondering why they're introducing yet another name for the same thing.	manuel_w	9.707941	-5.380001	comment	5.0	30.0	1692044577	-7.758288
37155541	I love the QAT libraries and I feel 	I love the QAT libraries and I feel their abilities are overlooked. Intel also has the igzip library that does not even require QAT and it radically faster than zlib, which is handy in older applications where gzip is unavoidable despite its obsolescence.The major downside of course is it is quite tricky to use this stuff in practice. In the cloud, you need a bare metal instance that exposes the QAT peripheral, and they are relatively scarce. And this whole generation of hardware is only just beginning to land in public clouds. For machines you own, you will need to scrutinize Intel's somewhat ridiculous product matrix in order to acquire a Xeon that has QAT.	jeffbee	9.483628	-5.5301423	comment	5.0	28.0	1692230866	8.026744
37165512	"When you say ""lousy performance"", do"	"When you say ""lousy performance"", do you mean HT lowers performance, or that it's not a great speed-up?I benchmarked HT using POV-Ray back when I first got an i7-3770 (4 cores, 8 threads) since it was my first multicore/multithread CPU.  I did a benchmark with 1 thread, 2 threads, 4 threads, 8, and 16 threads.As expected, 2 was double the speed of 1, and 4 was double the speed of two.  However, 8 was merely 10% faster than 4, and as expected, 16 was no faster than 8.Knowing how HT works, the fact that 8 threads was only 10% faster than 4 should be expected.  POV-Ray rendering is almost entirely floating point math, so it can't take advantage of HT very well.I have heard of HT possibly lowering performance, but only in contrived examples.But HT was never meant to be a replacement for additi"	Sohcahtoa82	9.683352	-5.479903	comment	5.0	15.0	1692294612	8.107656
37187037	ARM is dead not because I am a RISCV	ARM is dead not because I am a RISCV enthusiast, but because ARM is a terrible company that is taking forever to enter the server market.Neoverse N2 chips should have been available years ago. Once Jim Keller releases his Ascalon server RISC-V CPUs that are competitive with Zen x86 server CPUs, there is basically no room for ARM servers left since ARM couldn't manage to get their feet into the server market soon enough. So many ARM server vendors canceled their CPU projects, to the point that the safest prediction you can make about any new ARM server CPU is that it will be canceled. The thing about ARM is that it is already dead in the server market.	imtringued	9.425178	-5.5269403	comment	5.0	15.0	1692437561	-10.527054
37201754	Lichee Pi 4A: Serious RISC-V Desktop	Lichee Pi 4A: Serious RISC-V Desktop Computing [video]	snvzz	9.376182	-5.674316	story	5.0	11.0	1692556270	-10.577184
37226547	China Is Building an Open National C	China Is Building an Open National Chip Plan Around RISC-V	kosasbest	9.348198	-5.654442	story	5.0	91.0	1692727922	-10.549286
37232983	"> ""M-x magit"" get a nice list of the"	"> ""M-x magit"" get a nice list of the status of the files in the current branch.Except it will randomly split your frame and show up in a seemingly arbitrary location - often obscuring what you're working on. I find the whole layout system in Emacs completely chaotic. I guess it comes with the flexibility (VS a fixed system like most Ides) nor do I have any particular solution in mindI'm curious if anyone has tamed the weird inconsistencies of how new frames (or is it windows? Can never keep the terms straight) pop up. For instance a CIDER error buffer shows up using some completely different black magic than magit"	geokon	8.784421	-6.424343	comment	5.0	19.0	1692776953	-11.451204
37233371	New Hetzner dedicated vCPU cloud ser	New Hetzner dedicated vCPU cloud servers with AMD Epyc CPUs	matteocontrini	9.399462	-5.2352633	story	5.0	56.0	1692780451	7.8758416
37274282	>Thinking about computing architectu	>Thinking about computing architectures 10 years into the futureNo, they aren't. Otherwise, they would have selected RISC-V ISA, rather than a legacy ISA.I am sad to see a microcontroller family I favored sabotage itself into irrelevance like this.	snvzz	9.455094	-5.597207	comment	5.0	22.0	1693067453	-10.511314
37293846	How to create a Qt 5 ARM/Intel unive	How to create a Qt 5 ARM/Intel universal binary for Mac	zdw	9.889157	-5.3330793	story	5.0	74.0	1693230202	9.353381
37316115	"""8-core processor with 66 threads pe"	"""8-core processor with 66 threads per core."" 66*8 = 528. Why 66 is not explained."	wging	9.522479	-5.311988	comment	5.0	19.0	1693355783	7.9617996
37322794	Multiplix, operating system kernel f	Multiplix, operating system kernel for RISC-V and AArch64 SBCs	yawniek	9.4061365	-5.6537504	story	5.0	70.0	1693406248	-10.559733
37381388	FWIW, after listening to Chuck Peddl	"FWIW, after listening to Chuck Peddle's CHM Oral History interview, I sort of realized I didn't need the ARM ecosystem and just designed my own 6-bit microcontroller.  Granted, I'm only doing some very simple control applications and fabbing at 800nm, so it's not going to be competing with an i7 or an A72 anytime soon.IIRC, the RISC-V spec includes an ""embedded profile"" that specifies a CPU with 16 32-bit registers, so that should make RV32 even smaller than it would be otherwise.  SiFive designed a dog-simple 2-stage pipeline 32 bit core that could even run without I-cache.  I mean, it's not a speed demon, but it was implementable in many fewer gates than their earlier E cores.I worked at SiFive for a year and couldn't make sense of their product strategy.  But maybe that's a me problem a"	OhMeadhbh	9.495941	-5.617087	comment	5.0	24.0	1693841150	-10.476705
37482190	Perusing this article quickly, it me	Perusing this article quickly, it means a CI that is automatically handling things like caching build artifacts so that you don't need to recompile your entire repository every single commit. It's not about a faster program to call exec; it's about a program that knows it need not even call exec.	jcranmer	9.2787895	-6.42074	comment	5.0	28.0	1694530271	6.158869
37502312	Aside from pure curiosity and or res	"Aside from pure curiosity and or research purposes... 
Is there any everyday/practical apps/uses for something like this, for the avg joe?
Building something for 500 that would  normally be 10k, already has me intruiged."	SaulJLH	9.495325	-5.5450644	comment	5.0	18.0	1694642479	8.121035
37545062	RISC-V is not tied to Qualcomm, so y	RISC-V is not tied to Qualcomm, so you can either choose a different partner or do it all yourself if you've got the necessary skills and resources.> This open ISA provides designers and developers with greater control over their computing environments, allowing them to fine-tune their systems without relying on third parties or incurring additional license fees associated with proprietary architectures.	ndsipa_pomu	9.406413	-5.6471286	comment	5.0	29.0	1694958677	-10.559813
37546092	> We’re investing in RISC-V: Here’s 	> We’re investing in RISC-V: Here’s whyCoz we don't want to pay for licensing> and what’s in it for youThe fun of porting and/or testing everything! Aren't you happy ?Oh, and we will not upstream our drivers as usual so your devices will be landfill after 4 years as usual	ilyt	9.379388	-5.6148047	comment	5.0	22.0	1694964625	-10.571226
37557155	Is this tool similar to https://dagg	Is this tool similar to https://dagger.io/?	bingemaker	9.243209	-6.427093	comment	5.0	19.0	1695049587	-7.528865
24421662	Because Moore's law has long stopped	Because Moore's law has long stopped. Esp. for single thread performance. New laptop processors are comparable in performance to ancient Core 2 E8400.	SomeoneFromCA	9.562622	-5.243843	comment	5.0	21.0	1599663194	8.008011
24427397	Big fan of STM32 family for the simp	Big fan of STM32 family for the simple reason that you can use mature open source tools, i.e. gcc toolchain, or even clang, for development.	noncoml	9.860264	-5.3263564	comment	5.0	34.0	1599695803	-7.83591
24432755	I wonder if Zen 3 will finally let A	I wonder if Zen 3 will finally let AMD pass Intel in single threaded performance. I thought they had already, but just a few days ago I checked benchmarks and saw that my 8086K still beats a 3800XT.Though maybe I'm stuck in the past a bit thinking that single threaded performance is even still important for games.	ziml77	9.271789	-5.209757	comment	5.0	25.0	1599748706	7.904094
24441911	How to choose an FPGA dev board. A g	How to choose an FPGA dev board. A guide for 2020	blackSparrow	9.090971	-5.3058014	story	5.0	44.0	1599826948	8.363555
24447339	> Maybe you don't want automated uni	> Maybe you don't want automated unit testsInterested why you'd say this, can you elaborate?  Do you mean tests in general or unit tests specifically?I can't imagine automating a CD pipeline without having some automated testing as an integral step.  If you don't have automated tests, how do you remain confident that you haven't introduced bugs/regressions?Even in a small codebase that's easy to do - especially when you're evolving quickly.Like I say: not tacit criticism, genuinely interested.	spinningslate	9.599987	-6.421404	comment	5.0	15.0	1599858573	6.1635695
24448697	Hello HN, here is a project that I h	"Hello HN, here is a project that I have recently finished, it is a very niche 
CPU written in VHDL and verified to work on an [FPGA][]. It is a 16-bit [bit-serial][]
CPU, which means the processor is incredibly slow taking 102 clock cycles to complete
some instructions, the trade-off is that the CPU is very small, almost being free to implement 
in terms of floor space on the FPGA, the entire project takes just 73 slices, with the 
CPU itself taking 23 slices.The cross-compiler and the cross compiled program, a [Forth][] interpreter, are available at:<https://github.com/howerj/bit-serial/blob/master/bit.fth>It compiles down to an image that uses just 4802 bytes (out of 16KiB).And a C simulator if you would like to try out the Forth interpreter but lack an FPGA to try
things on is available"	howerj	9.582838	-5.5833	comment	5.0	17.0	1599869680	-7.5025625
24466593	VLIW was the best implementation (20	"VLIW was the best implementation (20 years ago) of instruction level parallelism.But what have we learned in these past 20 years?* Computers will continue to become more parallel -- AMD Zen2 has 10 execution pipelines, supporting 4-way decode and 6-uop / clock tick dispatch per core, with somewhere close to 200 registers for renaming / reordering instructions. Future processors will be bigger and more parallel, Ice Lake is rumored to have over 300-renaming registers.* We need assembly code that scales to all different processors of different sizes. Traditional assembly code is surprisingly good (!!!) at scaling, thanks to ""dependency cutting"" with instructions like ""xor eax, eax"".* Compilers can understand dependency chains, ""cut them up"" and allow code to scale. The same code optimized fo"	dragontamer	9.660071	-5.6672688	comment	5.0	21.0	1600055567	8.083631
24466111	Itanium was an excellent idea that n	Itanium was an excellent idea that needed investment in compilers. Nobody wanted to make that investment because speculative execution got them 80% of the way there without the investment in compilers. But as it turns out, speculative execution was a phenomenally bad idea, and patching its security vulnerabilities has set back processor performance to the point where VLIW seems like a good idea again. We should have made those compiler improvements decades ago.	darksaints	9.580322	-5.6514335	comment	5.0	20.0	1600050100	8.239166
24470947	I'm skeptical about RISC-V or any ot	I'm skeptical about RISC-V or any other open CPU design providing the quality of commercial designs. Testing and verification is not free. ARM tests their designs with millions of hours of simulation of heavy multithreaded workload, and chip implementors would have done the same with the actual silicon. Licensing costs of commercial ARM chips are a drop in the bucket compared to this necessary expense to ensure reliability.	distantskeptic	9.388759	-5.6353536	comment	5.0	17.0	1600095629	-10.549032
24567500	I agree that the Atom brand has been	"I agree that the Atom brand has been sullied, but I've often wondered if they weren't ""bad"" per se but were used in the wrong kinds of products. I got the impression they were better suited for an ATM or a vending machine that Tweets or something -- but not great for a full Windows environment, even if the user is not doing anything resource heavy. Feel similarly toward Celeron. Marketing != practical use for these CPUs IMO"	jmt_	9.527611	-5.2119994	comment	5.0	18.0	1600871419	-10.627922
24591014	ECC adds significant cost, and the b	ECC adds significant cost, and the benefits are stastically meager. I ran a fleet of a few thousand servers with all having 64GB and some having up to 768GB ECC RAM. I'd estimate we had no more than one swap a month. Most systems never had any (reported) ECC corrections.I still think it's important, but it makes sense that people don't want to pay more for something to detect errors that are quite unlikely.	toast0	9.499556	-5.5342803	comment	5.0	38.0	1601048754	8.222373
24603144	I can tell you what's missing: a POP	"I can tell you what's missing: a POPCOUNT instruction.Yes, there is one in the proposed ""B"" extension. Not good enough: it won't be in the smaller chips, or even in the biggest ones for a good while.But the article is interesting in noting all the stuff that we just don't see when we buy a gadget. The amount of sheer engineering effort that goes into real products that millions of people rely on is stunning. It takes a very large amount of actual money changing hands to generate the amount of invisible effort that is needed to support the things we use every day. The lack of that expenditure will make RISC-V adoption much slower than we might otherwise expect."	ncmncm	9.383214	-5.691892	comment	5.0	41.0	1601165083	-10.582317
24671880	Could it perhaps be even faster just	Could it perhaps be even faster just to build the entire stack in hardware perhaps with an FPGA accelerator or even a custom card? I know TOE[1] is a thing, but from what I read Linux doesn't really support it.[1]https://en.m.wikipedia.org/wiki/TCP_offload_engine	the_only_law	9.376464	-5.364094	comment	5.0	17.0	1601731167	8.202609
24671473	Rock Pi X: An x86 Computer in Raspbe	Rock Pi X: An x86 Computer in Raspberry Pi Form Factor	GordonS	9.721117	-5.3619003	story	5.0	38.0	1601727462	-7.7943234
24720632	At this point, picking AMD for your 	At this point, picking AMD for your CPU becomes such a no-brainer. Compounded by Intel’s security issues and all.	koluna	9.318656	-5.204188	comment	5.0	91.0	1602174172	7.853862
24723974	AMD lacks AVX512 instruction set, wh	AMD lacks AVX512 instruction set, which is a show stopper for many applications.	tyldum	9.265195	-5.261453	comment	5.0	20.0	1602191305	8.035044
24725916	The current model for interacting wi	"The current model for interacting with an FPGA connected to a PC has it sitting on a peripheral card, on the other side of a PCIe bus. AFAIK there's no story for exposing higher level abstractions of these devices though the OS in a way that would allow them to be shared between different applications.How would you envision an ""FPGA on board the CPU"" differing from this? Would it still be a separate thing the way GPU is today, or would you see it more as like a new set of CPU instructions which enable little blobs of HDL to be somehow passed in and invoked, kind of like how a shader works today on GPUs?"	mikepurvis	9.157968	-5.2878795	comment	5.0	27.0	1602208201	8.225957
24741698	I wonder if anyone using Linux regul	"I wonder if anyone using Linux regularly ran it on a PPC 601?Because as a former owner of an Itanium[1] I can say that even when a processor is ""officially supported"" upstream, unless a critical mass of people actually use it there are lots of weird regressions.  Debian/ia64 at the time (2015) only partially worked - lots of common utilities would randomly segfault or fail in peculiar ways.[1] https://rwmj.wordpress.com/2014/09/08/raise-the-itanic/ https://rwmj.wordpress.com/2015/05/03/raise-the-itanic-part-..."	rwmj	9.53034	-5.5050807	comment	5.0	19.0	1602362102	-7.743923
24785788	Is a risc still a risc when you have	Is a risc still a risc when you have complex instructions like this?	ithkuil	9.444651	-5.7374506	comment	5.0	20.0	1602746205	-10.541365
24787228	John Cocke, the father of RISC archi	John Cocke, the father of RISC architecture	gjvc	9.37141	-5.6721773	story	5.0	58.0	1602760216	-10.611111
24791952	The Good Old 6502 Microprocessor, bu	The Good Old 6502 Microprocessor, but 7000X Bigger	iamflimflam1	9.471596	-5.195917	story	5.0	21.0	1602786302	-7.4725556
24802193	Analogue Duo: FPGA Based TurboGrafx-	Analogue Duo: FPGA Based TurboGrafx-16/PC Engine Clone	zdw	9.177692	-5.2592835	story	5.0	54.0	1602864615	8.205628
24812292	To understand RISC, ignore the acron	To understand RISC, ignore the acronym it stands for, instead just think fixed-instruction, load-store architecture. That's what RISC really means today.No variable-length instructions. No arithmetic instructions that can take memory operands, shift them, and update their address at the same time.	alain94040	9.467454	-5.7468576	comment	5.0	29.0	1602961353	-10.518674
24829189	Am I missing something? Those diffs 	Am I missing something? Those diffs look identical.Edit: got it. Thanks!	duhi88	8.825327	-6.4305243	comment	5.0	17.0	1603131539	-11.676379
24830801	I always attempt to write, even on S	I always attempt to write, even on Slack or other chat programs, in such a way that no unintended tone comes across. To me it feels like I have failed in communicating if an emoji is necessary to convey a message. I honestly cannot think of anywhere I could use them to make a message clearer. But, I will be asking a few folks if there is an issue with my communication, and if I can be more clear in any way. Including the use of emoji.To me, it also feels less professional, but this thread has opened my eyes to this bias I have. So I am going to attempt to make less of a judgement on this moving forward.	Bedon292	9.780447	-6.25738	comment	5.0	39.0	1603140263	-13.957993
24859469	Honest question: why use a unikernel	Honest question: why use a unikernel on bare metal?I can see the lure on top of an hypervisor. You already have an actual kernel running which you can use it to administer the machine. Why pay the performance price of a full kernel in your vm if you are only going to run one application ?On bare metal however, you will probably need to bundle a ton of things if you don't want to end up with an unmanageable device. That leaves the performance gain of compiling everything together or actually disposable devices (maybe for embedded?) as potential use cases I can envision. Is there more ?	brmgb	9.914639	-6.226216	comment	5.0	24.0	1603382558	-12.373824
24906415	Im skeptical as well. The primary re	Im skeptical as well. The primary reason IMO is the software. How do you easily reconfigure your FPGA to efficiently run whatever computationally intensive and/or specialized algorithm you have?	QuixoticQuibit	9.106952	-5.3468037	comment	5.0	27.0	1603798517	8.320743
24933233	$666 is an improvement over $1k.It's	$666 is an improvement over $1k.It's still a core without V or B extensions, and still prohibitively expensive for anyone that doesn't need them.Useful for those working on risc-v ports, and that's about it.	snvzz	9.388508	-5.6167045	comment	5.0	34.0	1603994493	-10.583152
24935620	I am just worried about all my devel	I am just worried about all my developer tools (Docker, VMware Fusion, VirtualBox, brew) all breaking switching to ARM.	nodesocket	9.756713	-5.2845807	comment	5.0	30.0	1604004511	-7.8788548
24950973	What’s the best consumer level FPGA 	What’s the best consumer level FPGA that I can buy to experiment with? One that has the highest speed of final product and most memory etc? What’s the best of the best?	malux85	9.10232	-5.3357496	comment	5.0	16.0	1604148303	8.31072
24958644	The worst issue, at least for the ve	"The worst issue, at least for the versions of the ISA that will run a ""real"" OS, are the lack of conditional move instructions and lack of bitwise rotation instructions. Lack of shift-and-sum instructions or equivalently addresses with shifted indexes is usually mitigated by optimization of induction variables in the compiler. They are nice to have (I have written code where I took advantage of x86's ability to compute a+b*9 with a single instruction) but not particularly common with the massive inlining that is common in C++ or Rust.The ugly parts are indeed all ugly, though they have now added hint instructions."	bonzini	9.662544	-5.698457	comment	5.0	39.0	1604228274	-7.687671
24958925	> This pursuit of minimalism has res	> This pursuit of minimalism has resulted in false orthogonalities (such as reusing the same instruction for branches, calls and returns)They are all kinds of changes in flow, it's not crazy to have an instruction for that primitive.He complains Risc-V need 4 instructions to do what x86_64 and arm does in two, but... it says Risc-V.  And x86_64 CISC instructions devolve to a pile of microcode anyway.Guy invested in powerful incumbant using a completely different and even more established enumbant to bash the challenger over the head with doesn't feel like I am learning anything useful when I read it.	outsomnia	9.598315	-5.7895036	comment	5.0	30.0	1604232715	-10.453713
24959109	They got the riscv code slightly wro	They got the riscv code slightly wrong (but the instruction count correct).(puts on chip designer's hat) Essentially the ARM/x64 case turns the load memory address calculation into a 4-input adder (so 2 layers of adders) and maybe a couple of extra gates because there are multiple addressing modes. Riscv's equivalent is a 2-input adder. Those get into a critical cache (and TLB) access path and that limits how fast your CPU's core clock can be (or forces you to split that path into 2 clocks).Essentially that's part of the whole RISC idea - simple means faster - you can run your core clocks faster if the decode (and address calculations etc etc) are simpler - getting rid of lots of addressing modes was a big part of the original RISC movement. I think all 4 of those riscv instructions are 16	Taniwha	9.557288	-5.770753	comment	5.0	21.0	1604235053	-10.466842
24959119	> ARM has the various Thumb encoding	> ARM has the various Thumb encodings, Jazelle, VFP, NEON and more.Having done just a tiny bit of compiler development for ARM, I can assure you that having all of these variants is a pain. Making compiler writers' lives harder means you're less likely to get optimal performance. At least on the more exotic variants, but possibly even on the most common ones.	tom_mellior	9.710273	-5.4809017	comment	5.0	24.0	1604235163	-7.712888
24964846	I guess this is the same pricing mod	"I guess this is the same pricing model as CircleCI?I've always found ""build minutes"" to be a little bit of a vendor-favored pricing model.  I really love wanting to do a release, and watching my CI provider take three minutes to pull down a 30MB docker image, or ""npm install"" running at dialup speeds.  All while they're billing you per minute -- they make money by not investing in their infrastructure!  I'd prefer to pay per byte transferred and CPU instruction executed -- if they make the hardware or network faster, the price stays the same, but they can do more work with their infrastructure.  And if you schedule less work, the price for you goes down.But, it's simply not done, and that's kind of sad because slow CI is probably the biggest engineering time killer in existence.  Other tha"	jrockway	9.064329	-6.381284	comment	5.0	35.0	1604291617	1.5408463
25003744	I've been using Travis on a bunch of	I've been using Travis on a bunch of my opensource projects and was wondering why builds were getting queued for ~a day before they'd run, I guess I got my answer. :/I don't really want to lock myself into GH actions (ideally, I wouldn't be on GH at all), does anyone have any suggestions for alternatives? I don't mind paying some money, but the almost $1K/year for Travis' lowest tier is about an order of magnitude more than I can justify. I've also got plenty of compute laying around if anyone has suggestions for something self-hosted.	azdle	8.843553	-6.4213924	comment	5.0	33.0	1604623636	-5.532732
25005008	I wonder how much money they've save	I wonder how much money they've saved using RISC-V.ARM used to license (2013) for 1-10 million up front then 1-2% of the street value of the chip in royalties[0].A little googling find this presentation on swerve [1] EH2 which says 4.9 coremark/mhz with one core. It's 8 stage, dual core (with SMT) targeting 1.2GHz on 16nm. It seems likely to be between an a35 (wearable) and a55.With those chips starting at around $10 and around 100m units per year, it's easily 11-30 million per year but including the fact that integrating the arm core is also expensive and requires engineers. That money represents 22-60 full time engineers at $500,000 each. They also have a m4 sized chip too which is another big chunk of moneyThese big companies stand to save a lot moving to RISC-V.[0] https://www.neowin.n	hajile	9.40849	-5.4990854	comment	5.0	29.0	1604638251	-10.513
25007466	Arm Looks to Laptops: Cortex-A78C Pr	Arm Looks to Laptops: Cortex-A78C Processor for PCs Announced	rbanffy	9.549896	-5.1856318	story	5.0	41.0	1604669469	7.6701593
25014282	Damn I wish we could simply buy a si	Damn I wish we could simply buy a single socket AMD EPYC instead of a dual socket Intel Xeon. When compared at last gen Rome, scientific workloads compiled with Intel compiler that relied on AVX-512 a lot performed piss poor on AMD while other regular stuff flew ..It is too hard to buy these awesome chips and have them NOT run the serious stuff that our group wants to. I wish AMD would come up with a solution that makes it magically work with code compiled for AVX-512 :-(	reacharavindh	9.34191	-5.2112393	comment	5.0	15.0	1604745127	7.9400396
25029484	Reverse-engineering the carry-lookah	Reverse-engineering the carry-lookahead circuit in the Intel 8008 processor	robin_reala	9.646091	-5.442599	story	5.0	78.0	1604872790	-7.3266993
25053672	Okay, probably a stupid question, bu	Okay, probably a stupid question, but solid state memory can be pretty dense: why don't we have huge caches, like a 1GB cache? As I understand it, cache memory doesn't put off heat like the computational part of the chip does, so heat dissipation probably wouldn't increase much with a larger chip package.	ineedasername	9.908669	-5.4069004	comment	5.0	29.0	1605052007	8.061084
25058768	Rosetta 2 allows you to run  your x8	Rosetta 2 allows you to run  your x86 mac apps on Apple silicon. It's like the PPC->Intel switch again; your software keeps working regardless of the hardware underneath.	freeone3000	9.784367	-5.2220373	comment	5.0	32.0	1605105718	7.6406555
25066103	I wonder what Linus thinks of Geekbe	I wonder what Linus thinks of Geekbench's accuracy now:https://www.realworldtech.com/forum/?threadid=136526&curpost...https://www.realworldtech.com/forum/?threadid=185109&curpost...Personally I'm not convinced, until I see something like SPECint/SPECfp results.	userbinator	9.559296	-5.241251	comment	5.0	18.0	1605151996	7.7192826
25127577	As a millennial whose only chatting 	As a millennial whose only chatting activities are confined to irc and doesn’t really get emojis — could someone please articulate this phenomenon in terms that would be meaningful to me?I’ve seen sentences sometimes where words are actually replaced with emojis... is this how some subset of people actually communicate online or that’s just for some effect of irony?	pen2l	9.7925	-6.2682247	comment	5.0	17.0	1605637778	-13.964913
25128425	Note that the comparison is also com	Note that the comparison is also compiling to ARM vs compiling to Intel, so its partly to do with the simplicity of the compilation process between the two architectures.https://twitter.com/rikarends/status/1328762958118346753	codeulike	9.669838	-5.3355117	comment	5.0	18.0	1605641139	-7.745018
25132569	Huh, so Apple is installing both the	Huh, so Apple is installing both the ARM and x86 version of apps, even on ARM computers. I guess that makes sense for portability, but I don't know if other parts of the root filesystem are one architecture only, such as the path to the kernel (unless that's a fat binary too?).	lights0123	9.785283	-5.210264	comment	5.0	16.0	1605666933	-7.7044516
25149401	Although I’m definitely not convince	Although I’m definitely not convinced enough to make the jump yet, those emulation benchmarks are impressive (and seem to also apply somewhat to general use based on another review I read). Running x86 code faster than native equivalents, using an ARM chip, that will probably be consuming significantly less power doing it is something I did not expect to see in gen 1 of this switch.	mojzu	9.638573	-5.2399144	comment	5.0	27.0	1605793939	-7.712177
25163883	With over 600 reorder buffer registe	"With over 600 reorder buffer registers in the Apple M1 executing deeply out-of-order code, this blogpost rehashes decades old arguments without actually discussing what makes the M1 so good.The Apple M1 is the widest archtecture, with the thickest dispatch I've seen in a while. 2nd only to the POWER9 SMT8 (which had 12-uop dispatch), the Apple M1 dispatches 8-uops per clock cycle (while x86 only aim at 4-uops / clock tick).That's where things start. From there, those 8-instructions dispatched enter a very wide set of superscalar pipelines and strongly branch-predicted / out-of-order execution.Rehashing old arguments about ""not enough registers"" just doesn't match reality. x86-Skylake and x86-Zen have 200+ ROB registers (reorder-buffers), which the compiler has plenty of access to. The 32 A"	dragontamer	9.6514845	-5.198832	comment	5.0	45.0	1605900138	-7.68669
25200901	> My hunch is that reflects a growin	> My hunch is that reflects a growing set of emoji and support for hundreds (thousands?) of alphabets. It's hard to call that bloat.I find it incredibly easy to call emojis bloat.	wheybags	9.835573	-6.2509637	comment	5.0	23.0	1606240189	-13.957917
25204321	Yikes. That's the same shenanigans t	Yikes. That's the same shenanigans that got them into trouble with the 68000. Everyone stuffed data into the top 8 bits of pointers because even though the 68000 had 32-bit addressing registers, it only had a 24-bit address bus and the top 8 bits were dontcare's. Then, the 6802x came out with more address lines and......and that's basically why x86_64 was specified to require a particular bit pattern in high-order bits - it was to stop applications and OS programmers from writing a bunch of software with tagged pointers which would tie Intel's and AMD's hands when adding address lines. I guess Apple is ok with tying their own hands.	CountSessine	9.749965	-5.364085	comment	5.0	18.0	1606261174	-7.536055
25204895	I understand the machine is great or	"I understand the machine is great or going to be great for most use cases. My mbp is my main workhorse, but as a freelance SRE ""devops"" guy, the Apple ARM platform won't be suitable for my job any time soon, if ever.Docker is not yet available - but even when it would become available, emulating virtualised x86 code is explicitly not going to be supported. That in many cases means pulling a docker image built in a ci/cd pipeline where a dev screwed something up and debugging it locally is no longer an option. If I wasn't freelance, I could probably get away with some cloud instance to run all my docker stuff, but I'm dealing with too many different environments, for clients with various different legal requirements making this simply 'not an option'.Too bad, because the machines look very "	koffiezet	9.590437	-6.3164015	comment	5.0	44.0	1606266712	10.035545
25205914	Yeah, no. Please don't do this. This	"Yeah, no. Please don't do this. This has been discussed previously w.r.t commit messages, and I'd argue that the reasons for not doing so with maths are largely the same: https://news.ycombinator.com/item?id=21760021---They're bad for accessibility. Don't work with screen readers . Hard to make out for people without perfect vision. Harder to type out.They don't render well on many systems. They can't be handwritten. How are they do be pronounced? ""croissant emoji squared plus girl wearing hat""?Conventions exist for what symbols to use where in science and math. Don't mess with this. Kids won't magically find math easier if you use emoji in place of symbols.Instead, please focus your efforts of improving teaching methods."	notRobot	9.844056	-6.270344	comment	5.0	39.0	1606276752	-13.956173
25212828	FreeBSD is such a great OS and has a	FreeBSD is such a great OS and has a very powerful kernel. So much potential, it is sad to see Linux is the only unix OS that gets traction. They've had Jails in BSD long before Docker was a thing. Debian GNU/kFreeBSD was promising but it probably just doesn't make sense to maintain that project given lack of attention. :(	kdasme	9.834649	-6.225946	comment	5.0	34.0	1606330420	10.568947
25232855	> Is there anything stopping MS from	> Is there anything stopping MS from copying Apple's approach?One thing I don't completely understand about Rosetta2 is when it performs static recompilation and when it's doing dynamic recompilation. I'm under the impression that a lot of Rosetta2's magic is in static recompilation. I don't know in which cases it statically recompiles and in which cases it dynamically recompiles though. If anyone knows anything about this I'd really like to understand this better.If my hunch about Rosetta2 focusing largely on static recompilation is correct, Microsoft can't copy this approach easily. Static recompilation is very hard to make reliable. It's probably doable in Apple's use case (doable, definitely not easy), where their only aim was probably to make everything that runs on Intel-based Catali	DCKing	9.77584	-5.3025713	comment	5.0	17.0	1606513644	7.5278583
25233824	Is the ARM ISA fundamentally faster 	Is the ARM ISA fundamentally faster than x86? If the underlying architectures are converging as described, it kinda seems that the difference between the two instruction sets are more legal than technical.	pythonvisa	9.679007	-5.457228	comment	5.0	19.0	1606522379	-7.74009
25235621	To add to this:The POWER7 through PO	"To add to this:The POWER7 through POWER9 processors from IBM implement an equivalent to this called ""SAO"", or ""Strong Access Ordering Mode"". To quote an IBM engineer:  > Currently, power has a weaker memory model than x86. Implementing a stronger memory model allows an emulator to more efficiently translate x86 code into power code, resulting in faster code execution.

What's interesting is IBM publishes pretty detailed manuals about their processors. You can take a look at the POWER9 CPU manual [0] and search for ""SAO"".You'll see just how deep down support for this mode goes. To implement this sort of strong memory ordering requires modifications e.g. SAO mode introduces a new pipeline hazard to the L2 cache and requires deep support in the MMU, including corner cases like the virtual mem"	spijdar	9.612924	-5.255079	comment	5.0	15.0	1606543096	-7.7067046
25238126	MIT 6.004 L14: Implementing RISC-V P	MIT 6.004 L14: Implementing RISC-V Processor in Hardware	homarp	9.400859	-5.662582	story	5.0	113.0	1606577542	-10.553498
25254472	Sorry if this is a little bit off-to	Sorry if this is a little bit off-topic but I can't find this answer anywhere. Can I run Docker on M1 right now? Even through Rosetta 2? Or does it not work that way? I want to buy an M1 laptop but need to be able to run some simple images on it.	cdelsolar	9.556606	-6.4000125	comment	5.0	15.0	1606748864	10.063048
25258851	What a nightmare, but it makes me wo	"What a nightmare, but it makes me wonder: rather than decoding into micro-ops at runtime, could Intel or AMD ""JIT"" code up-front, in hardware, into a better bytecode?I'm sure it wouldn't work for everything, but why wouldn't it be feasible to keep a cache of decoding results by page or something?"	sterlind	9.717626	-5.6025233	comment	5.0	17.0	1606769752	7.9035783
25259563	The answer of wide decode and deep r	The answer of wide decode and deep reorder buffer gets much closer than the “tricks” mentioned in tweets. That still doesn’t explain how Apple built an 8-wide CPU with such deep OOO that operates on 10-15 watts.The limit that keeps you from arbitrarily scaling up these numbers isn’t transistor count. It’s delay—how long it takes for complex circuits to settle, which drives the top clock speed. And it’s also power usage. The timing delay of many circuits inside a CPU scare super-linearly with things like decode width. For example, the delay in the decode stage itself scales quadratically with the width of the decoder: ftp://ftp.cs.wisc.edu/sohi/trs/complexity.1328.pdf (p. 15). The delay of the issue queues is quadratic both in the issue width and the depth of the queues. The delay of a full	rayiner	9.732578	-5.608923	comment	5.0	34.0	1606773486	-7.796948
25263461	The reason it doesn't help them that	"The reason it doesn't help them that much in performance is that the difference in the way x86/ARM manage memory is not that ARM reorders more and x86 reorders less, but that ARM reorders openly and x86 reorders things behind your back but makes sure everything is where you think they should be if/when you look.This is the reason that the relatively primitive memory model of x86 has turned out to be so successful despite the consensus in the field being that it's way to restrictive for performance way back in the 90's. It turns out that the x86 memory model is an easy target for a complex reordering backend to provide as a ""facade"", between what is actually happening the in CPU's own L1 and buffers and what everything else thinks it's doing.The only way weaker memory orderings benefit is t"	Tuna-Fish	9.880778	-5.6550226	comment	5.0	24.0	1606810931	-7.7363396
25273895	Google partners with SkyWater to ena	Google partners with SkyWater to enable open source manufacturing of ASICs	lawrenceyan	9.148966	-5.2036057	story	5.0	198.0	1606892388	8.232986
25289428	Wait for an 8-core (or the rumored 1	Wait for an 8-core (or the rumored 12 core) variants. Those will embarrass your threadripper.	zionic	9.482371	-5.275609	comment	5.0	32.0	1607007618	7.9766126
25320185	The Alpha was such a fantastic chip.	The Alpha was such a fantastic chip. I thought it would take off since you could get them in an AT form factor system and Windows was ported over. They were so much cheaper than any Sparc or MIPS.	bluedino	9.604989	-5.334936	comment	5.0	25.0	1607218866	-8.009039
25327499	Linus’ solution seems to add a layer	Linus’ solution seems to add a layer of indirection, which I think is harder to grok than a simple condition.	bigyikes	9.338288	-5.910354	comment	5.0	16.0	1607295642	4.1927676
25339519	Only a few weeks ago they wrote a le	"Only a few weeks ago they wrote a letter (https://blog.travis-ci.com/oss-announcement) that said ""Open source accounts, as always, will be completely free under travis-ci.com.""Their home page at travis-ci.com still says:> Testing your open source projects is always 100% free!> Seriously. Always. We like to think of it as our way of giving back to a community that gives us so much as well.That is simply not what's going on. As far as anyone can tell, they are offering some OSS which meet specific criteria (including no company funds any part of it, including paying people to work on it(?!)) free minutes in fixed monthly allotments, which you have to keep asking for every month. And there are only so many total minutes they are willing to give out, which apparently have now been frozen.How c"	jrochkind1	8.830492	-6.372165	comment	5.0	73.0	1607385672	-5.551624
25383844	What happened to the patent issues s	What happened to the patent issues surrounding x86 emulation? For example I remember reading this: https://arstechnica.com/information-technology/2017/06/intel...First Apple and now Microsoft. Do they license the patents from Intel or did they expire? Or are they working around that somehow?	simfoo	9.548805	-5.225274	comment	5.0	40.0	1607678599	7.719925
25384525	Well, two main reasons:1. Innovator'	"Well, two main reasons:1. Innovator's dilemma: https://en.wikipedia.org/wiki/The_Innovator%27s_DilemmaARM in this case is the underdog, attacking the incumbent x86. It is the lesser tech because it started from ""below"" (lower value niches not taken by the incumbent which prefers higher profit margins).2. RISC vs CISC has never been settled. Until Apple (and Amazon super recently) produced their super recent architectures based on ARM, x86 was considered superior. Yes, RISC was theoretically better in the 80s and later 90s, but x86 has been reinvented successfully 2 times (micro-ops and x86_64) and scaled from 0.2MHz to 5Ghz. It's also a mix of CISC and RISC, it's not pure CISC now. Same for ARM, they've added various instructions which bring it closer to CISC.As far as I can see the only r"	oblio	9.524383	-5.5490627	comment	5.0	33.0	1607685735	-10.439682
25405902	HermiTux – A Linux binary-compatible	HermiTux – A Linux binary-compatible unikernel	peter_d_sherman	9.93547	-6.2214093	story	5.0	125.0	1607860075	-12.3656645
25421039	What utter nonsense. Different ARM c	"What utter nonsense. Different ARM chips aren't ""somewhat compatible"" anymore than Intel/AMD x86 chips. It's a standard instruction set. And even if we'd get different instruction sets, we have much better toolchains/compilers to work with multiple architectures now than we did in ""the home computing landscape of the 80s / early 90s"" (GCC and LLVM aren't really comparable to Sinclair Basic).The M1 has been out for a month and we already have hundreds/thousands of natively compiled binaries—and Windows and Linux are up and running.Choice is not a problem and competition is good."	hugi	9.648058	-5.2060666	comment	5.0	35.0	1607969814	-7.8041606
31788454	Are you sure you posted the right li	"Are you sure you posted the right link?This is a version control system.I mainly was going to comment on how unfortunate the name is, in English this word (minus 1 ""s"") is a genital disease."	Grimburger	8.887537	-6.33319	comment	5.0	17.0	1655544728	-6.4606986
31825478	I’m a teacher without a tech backgro	I’m a teacher without a tech background. My role is to schedule a high school timetable.To do this I have been given software that is single threaded and will only run a single instance, so I have taught myself Hyper-V, and run several VMs with alternative searches simultaneously. These searches can take 12+ hours to run.The software also runs 25% faster when allocated 2 threads maximum than when 3+ are available…	tboughen	9.905742	-5.6126194	comment	5.0	18.0	1655827239	8.2950735
31838690	Designing Billions of Circuits with 	Designing Billions of Circuits with Code	picture	9.923224	-5.5813637	story	5.0	93.0	1655917357	-7.1317983
31865386	I just finished an undergraduate cla	I just finished an undergraduate class on microcontroller applications that used a MC68HC12 dev board.  We coded in Assembly and then later in C.I'm curious, is this a typical platform in other computer engineering programs in the US?	engineer_22	9.588953	-5.213267	comment	5.0	19.0	1656089188	-7.4229245
31879546	Is virtualizing aarch64 macos via qe	Is virtualizing aarch64 macos via qemu on aarch64 Linux within the realm of possibility? I know it can be done for x86-64, but would be pretty cool if an aarch64 kvm hackintosh would be possible. I have an Nvidia Jetson AGX and honeycomb lx2 which in theory could be up to the task.	moondev	9.886266	-5.3742085	comment	5.0	26.0	1656199084	-8.042575
31892173	For some reason the arrow ▶ is a dou	For some reason the arrow ▶ is a double-width character on my PC so it breaks.I'm using Noto Sans Mono as monospace font. Broken with Iosevka as well, works with Dejavu Sans Mono.That said, it's pretty cool, bookmarked.EDIT: weird now I'm looking at my comment from an iPhone and the arrow is rendered with the arrow emoji. Have I found an exploit to embed emojis in HN comments?!	sph	9.87675	-6.264021	comment	5.0	16.0	1656320946	12.993403
31922138	Arm Introduces the Cortex-A715	Arm Introduces the Cortex-A715	rbanffy	9.568448	-5.216833	story	5.0	96.0	1656519010	7.7237277
31982430	From: https://talawah.io/blog/extrem	From: https://talawah.io/blog/extreme-http-performance-tuning-one-...> I am genuinely interested in hearing the opinions of more security experts on this (turning off speculative execution mitigatins). If this is your area of expertise, feel free to leave a commentAre these generally safe if you have a machine that does not have multi-user access and is in a security boundary?	tomohawk	9.71758	-5.617182	comment	5.0	21.0	1656974146	-6.656379
32001133	The Future of System Memory Is Mostl	The Future of System Memory Is Mostly CXL	rbanffy	9.734762	-5.219658	story	5.0	40.0	1657116380	8.147808
32076514	It begs the question, was speculativ	It begs the question, was speculative execution a good idea in the first place?	mise_en_place	9.688517	-5.6462665	comment	5.0	24.0	1657664769	-6.7528176
32134913	Something I heard a while back is th	Something I heard a while back is that very roughly 90%+ of compiler generated code is made up of 19 instructions and the rest are rare enough that you on x86/64 you shouldn't memorize them, just keep the manual handy. I wonder if that included various variations of  instructions. But I am very curious about OPs question now.Moreover, can you influence GCC over what instructions it emits? On Gentoo for example, you can setup your make file so that the while system is compiled with your specific processor in mind.	badrabbit	9.909363	-5.9004803	comment	5.0	27.0	1658121134	-7.484712
32149080	Box86/Box64 vs. QEMU vs. FEX (Vs Ros	Box86/Box64 vs. QEMU vs. FEX (Vs Rosetta2)	pantalaimon	9.868206	-5.489466	story	5.0	121.0	1658220663	7.8110013
32148924	It's never been publicly clear how m	It's never been publicly clear how much is done in hardware, and how much is actually done via microcode. This blows the doors open and reveals that there's actually a lot more being done in microcode than previously suspected. What's pivotal, is how much more possible this makes microcode-based attacks against Intel-based systems.	fragmede	9.563997	-5.393623	comment	5.0	26.0	1658219347	7.7795844
32149544	AMD processors have much the same ba	"AMD processors have much the same backdoor-""management"" coprocessors. Just about the only processors without this stuff is your own softcore design running on an FPGA."	stefan_	9.466661	-5.1922283	comment	5.0	36.0	1658225346	7.8420706
32148818	Which machine language is the microc	Which machine language is the microcode written in?Is it even possible to fully decode that language with publicly available information/tools?Given that microcode is an internal mechanism of CPUs, I would expect its language to be impossible to decode for regular people because there is zero knowledge on how it works?And even if there is some knowledge on it, won't Intel change the machine language around a lot among CPU generations because the lack of public usage means it can be changed constantly, thus rendering the existing knowledge useless quickly?	RjQoLCOSwiIKfpm	9.583724	-5.406822	comment	5.0	25.0	1658218328	-7.1930842
32148963	It could go both ways.Let's be optim	"It could go both ways.Let's be optimistic - say, after lengthy, rigorous expert analysis it
turns out there are no backdoors or prepared traps for potential
malware within Intel CPUs. That's a big boon for security everywhere,
and for Intel's share price.If on the other hand, it turns out against Intel, the evidence is
literally baked into silicon within billions of devices in the wild
which will become e-waste overnight.With this TikTok thing in the wind the Chinese will ban Intel... etc.The stakes are high. The problem was always lack of transparency.
Putting encrypted microcode into consumer CPUs was always a dumb idea.
And why? To protect the media conglomerates. Another reason we need to
re-examine the role and value of ""intellectual property"" in society."	nonrandomstring	9.502741	-5.2640786	comment	5.0	73.0	1658219762	7.6835523
32161985	This incident page really needs a di	This incident page really needs a diff mode or just less boilerplate. It's really difficult to tell at a glance what's changed with each update.	jvolkman	8.775632	-6.38996	comment	5.0	17.0	1658296740	1.7437153
32169641	"Well researched, but saying ""dram"" o"	"Well researched, but saying ""dram"" over and over instead of ""dee ram"" makes my eye twitch."	TheFrisbeeNinja	9.733157	-5.387842	comment	5.0	24.0	1658339681	7.9879785
32187338	Could I implement a RISC-V SoC compa	Could I implement a RISC-V SoC comparable  to a RPi4 with this?	anewpersonality	9.377968	-5.639423	comment	5.0	18.0	1658452642	-10.604399
32235453	Really???? 6502s are still used (alb	Really???? 6502s are still used (albeit as components)? People still do 6502 programming? If true I'm bloody gobsmacked.	zasdffaa	9.57928	-5.3452196	comment	5.0	18.0	1658821178	-7.451658
32370385	From a technological perspective, ev	From a technological perspective, everything you say is true, and FreeBSD is better in so many regards. But, compatibility and community support is just a deal breaker.The jails vs docker argument is a good example: while technically better, Docker (or rather, cgroups and image distribution) have been standardised and have tremendous community adoption. FreeBSD cannot tap into any of this at all. Yes, jails might be better, but because they lack widespread adoption, they’re far less useful.It’s a sad state of affairs, I wish things went otherwise, but I feel Linux is sometimes a good example of the “worse is better” approach at work.	stingraycharles	9.902855	-6.1015763	comment	5.0	42.0	1659810170	10.6772785
32382529	Yikes! That sounds frustrating. As t	Yikes! That sounds frustrating. As the article concluded with, the way forward appears at the end; ST adding an errata for this.The elephant in the room: How is the author getting STM32 G4s? I've been F5ing this every day with no luck for months: https://octopart.com/search?q=stm32g4+ceu¤cy=USD&specs...	the__alchemist	9.765858	-5.29626	comment	5.0	34.0	1659935290	7.260393
32382691	>It seems that the ADCs on the STM32	>It seems that the ADCs on the STM32G4 do not like to be turned on in rapid succession, and if they do, bad things can happen like having the prescaler flipped to a different value without it showing in the corresponding register.This sounds very, VERY much like an incorrectly configured clock where some of the peripherals would end up with a clock frequency slightly above what they were designed for. Will work 99% of the time and will give you hell for the remaining 1%. Much more likely than stumbling upon an undiscovered errata in a fairly popular device family with 10+ years of history.Could also be flakey power (check your decoupling capacitors) or an outright b0rked chip/board.	matrix_overload	9.730519	-5.25488	comment	5.0	20.0	1659937714	7.4261827
32457281	No, they held up the update over Cop	No, they held up the update over Copyright. Specifically, Apple's copyright on the Emoji's.As is their right.	janandonly	9.810111	-6.239145	comment	5.0	24.0	1660462688	-13.948829
32468763	Reinvent? Without any substantial im	"Reinvent? Without any substantial improvement?A truly ""reinvented"" CPU would use a reconfigurable coarse grained data flow approach, directly available to the programmer, instead of ""yet another command stream based von Neumann machine"", imho.(Actually something that is in parts already at the heart of modern CPUs; only that nothing of that is available directly to the programmer, where it would be actually useful, which is utter nonsense of course; and that it's not reconfigurable; the compiler can't construct pipelines on the fly; not even the hardware build-in JIT, which can be found in every modern CPU, which tries to translate that misfortunate command stream into a data-flow graph inside the CPU as good as it can—of course after we deleted all information about that data-flow that we"	still_grokking	9.766434	-5.7582417	comment	5.0	24.0	1660566219	8.044414
32474307	That was Itanium, and it failed for 	That was Itanium, and it failed for a variety of reasons; one of which was a compatibility layer that sucked. You can't get rid of x86's backwards compatibility. Intel and AMD have done their best by using vector prefixes (like VEX and EVEX)[a] that massively simplify decoding, but there's only so much that can be done.People get caught up in the variable length issue that x86 has, and then claim that M1 beats x86 because of that. Sure, decoding ARM instructions is easier than x86, but the variable length aspect is handled in the predecode/cache stage, not the actual decoder. The decoder, when it reaches an instruction, already knows various bits of info are.The RISC vs CISC debate is useless today. M1's big advantage comes from the memory ordering model (and other things)[0], not the inst	colejohnson66	9.617648	-5.578056	comment	5.0	23.0	1660592341	-7.723118
22033273	A Look at Celerity’s Second-Gen 496-	A Look at Celerity’s Second-Gen 496-Core RISC-V Mesh NoC	rbanffy	9.39718	-5.6150665	story	5.0	53.0	1578911185	7.8707027
22053435	Ariane is a 6-stage RISC-V CPU capab	Ariane is a 6-stage RISC-V CPU capable of booting Linux	jrepinc	9.398788	-5.6333175	story	5.0	83.0	1579088844	-10.560713
22078842	It’s a real shame avx-512 has so man	It’s a real shame avx-512 has so many eccentricities when it’s a much nicer ISA than anything before it (in x86 land).  I would almost prefer a more predictable, high-latency decomposition into 4x128 wide uops over what we have now.	oddity	9.482659	-5.5879974	comment	5.0	37.0	1579292813	8.075625
22131135	Another beautifully designed piece o	Another beautifully designed piece of Emacs software is magit, where the defaults are extremely sane. The package is self-documented and you can learn it all by typing ? anytime. Being able to git log the file you are in is also a huge plus.	why-el	8.83838	-6.411847	comment	5.0	16.0	1579809081	-11.30064
22162894	Did AMD design their processors with	Did AMD design their processors with these side channel attacks in mind, or is it a matter of where the security research is focused?	kohtatsu	9.518258	-5.3982487	comment	5.0	39.0	1580153695	7.84351
22171542	You have two choices when it comes t	You have two choices when it comes to utilizing multiple cores: threads and processes. Threads are hard, but sharing data between processes is hardly any easier.Maybe they're a bad idea, but these days you have no choice but to learn how to use threads. AMD's run-of-the-mill processors have 16 cores, Intel's 8. Servers have lots more. Heck even your iPhone has 6.The clock rate on CPUs isn't getting any better. It's just more cores from here on.	cdoxsey	9.537407	-5.3068924	comment	5.0	34.0	1580232281	7.9513893
22190160	Show HN: Write Using Emojis	Show HN: Write Using Emojis	seik	9.794684	-6.2637873	story	5.0	7.0	1580377703	13.048256
22196489	So, not working with any insider kno	So, not working with any insider knowledge (I work for Red Hat, but reading the news like everyone else), but the other news is that Jim Whitehurst is going to be the IBM President. Hopefully a big push in keeping Red Hat's culture relevant and influencing IBM to transform.	cpitman	9.9221735	-5.4368296	comment	5.0	18.0	1580423030	-9.455388
22233494	My understanding of conventional wis	My understanding of conventional wisdom from maybe 15 years ago was that we'd run out of memory bandwidth for high core-count processors.Is this now a factor?  I know memory has gotten faster, and multi-channel of course helps, but is that all really enough for typical workloads?	ansible	9.762886	-5.2622924	comment	5.0	52.0	1580804906	7.9691877
22237661	I used to have this 65c816 fantasy. 	I used to have this 65c816 fantasy. That Atari or Commodore had put out a machine in this lineage rather than jumping to the 68000. On paper it looks appealing -- 6502 compatibility, 24-bit address bus, super fast interrupt responsiveness, very cycle efficient.So I wasted some time last year futzing around on the C256 Phoenix project -- wrote an emulator for it (or some aspect of what it looked like on paper) since I didn't have a board yet, wrote some code for it, had a falling out with the creator, a bit of a saga. In any case, what I learned in this process is that I really don't like the '816. It was a hack bolted onto the side of the 6502. Bill Mensch couldn't or wouldn't add new addressing modes and register sets to the instruction set to allow 8-bit and 16-bit to co-exist, so there'	cmrdporcupine	9.568713	-5.2248993	comment	5.0	21.0	1580834532	-7.5046835
22241635	Just a quick reminder when consideri	Just a quick reminder when considering Intel products... if it ain't Mama x86, it won't be around very long.	fallous	9.547558	-5.2255063	comment	5.0	69.0	1580854514	7.8128476
22286001	There's 2 main valid reasons larger 	There's 2 main valid reasons larger companies won't touch AMD for servers:1) You don't know if a given linux kernel/other software will work unless you test it ... for each future version2) The firmware updates for Intel and AMD are different.Additionally, the excellent Intel C compiler focuses on their own processors.The above doesn't mean you can't choose AMD, but don't assume they're interchangeable CPUs.Disclosure: I worked for Transmeta, whose entire DC was based an AMD servers. The reason was that Intel was a larger competitor for their code-morphing CPUs than AMD was.Coincidentally, Linus Torvalds entered the USA on a work visa from Transmeta after DEC bailed on his job offer.I bought CS22 at Transmeta's wind-down auction, which I will donate to the Computer Museum. Several large CP	redis_mlc	9.30681	-5.1868696	comment	5.0	30.0	1581302661	7.835813
39355750	This is interesting. The article men	"This is interesting. The article mentioned Zen4c is architecture same to Zen4 but optimized for density running at lower frequency.
Question here if anyone knows the answer: it seems like high frequency requires significantly more transistors? And is optimized for density also means less power consumption(assuming both zen4 and zen4c running at same frequency)?"	xgstation	9.280158	-5.2072606	comment	6.0	25.0	1707813370	7.891432
39378168	Could you tell me some typical uses 	Could you tell me some typical uses beyond just asking for code snippets? I'm an NLP researcher, and currently I still find myself using Google for other types of information seeking. I'm working on NLG decoding algorithms currently.I see a lot of people saying it's replaced some large fraction of their search usage, but they generally don't explain what type of queries they're making.	thatguysaguy	8.815145	-5.9555416	comment	6.0	27.0	1707961742	-11.247911
39450560	DeepComputing ROMA RISC-V Laptop	DeepComputing ROMA RISC-V Laptop	swatson741	9.393101	-5.582888	story	6.0	36.0	1708494388	-10.515015
39510793	Calyx: Intermediate Language for Har	Calyx: Intermediate Language for Hardware Accelerators	nateb2022	9.357549	-5.373962	story	6.0	44.0	1708952395	7.8596992
39544698	Optimize sgemm on RISC-V platform	Optimize sgemm on RISC-V platform	camel-cdr	9.433851	-5.7210956	story	6.0	78.0	1709161781	-10.580963
39553028	Intel Rebrands Its FPGA Business Alt	Intel Rebrands Its FPGA Business Altera in an Awesome Branding Move	voxadam	9.178039	-5.273173	story	6.0	16.0	1709231118	8.189397
39605957	It's real. Single core performance i	It's real. Single core performance improves all the time. People overestimate how much power it takes to handle lots of queries per second on a well-tuned system and well-written software in 2024.https://hn.algolia.com/?dateRange=all&page=0&prefix=true&que...	neocritter	9.6434765	-5.359807	comment	6.0	37.0	1709657055	7.9229183
39655684	Can someone explain to me how the BR	Can someone explain to me how the BRC isn't bottlenecked on I/O? I don't understand how the CPU is the bottleneck.	stavros	9.829066	-5.3849654	comment	6.0	31.0	1710029765	8.157816
39685068	LOCS: Language developed at age 9 in	LOCS: Language developed at age 9 in Z80 machine code (1988)	nanochess	9.669208	-5.450956	story	6.0	2.0	1710278242	-7.318282
36548490	TIL that a 6502 didn’t have division	TIL that a 6502 didn’t have division and remainder instructions. Yikes.	vogon_laureate	9.598959	-5.4222302	comment	6.0	22.0	1688205900	-7.4017987
36582961	I'm not familiar with modern CPUs, b	I'm not familiar with modern CPUs, but I remember that most instructions take more than one cycle to execute, without counting memory or cache delays. So, expecting to see 1:1 IPC is ... a fantasy?	M95D	9.769714	-5.5517454	comment	6.0	18.0	1688452251	7.991123
36641423	RISC-V Assembly Programming	RISC-V Assembly Programming	prabhu-yu	9.517264	-5.787254	story	6.0	97.0	1688791671	-10.526265
36647965	First we run everything as processes	First we run everything as processes on top of an OS kernel. On UNIX, we have all of these high-level concepts of letting processes interact with each other. Files, pipes, streaming/datagram UNIX sockets, etc.Later on certain people started to see that these high-level concepts are bad. Operating systems are insecure. Context switching has overhead. Page table handling is expensive. So unikernels are invented.People later discover that unikernels are somewhat hard to work with, as the only way they can talk to the outside world is through virtio-like devices:- Unikernels aren't capable of just writing something to a simple file. No, they must write to a raw block device. Hey, that's annoying. Let's bring back support for native file access using virtio-fs! https://www.qemu.org/2020/11/04/o	EdSchouten	9.936161	-6.2080493	comment	6.0	24.0	1688845086	-12.318911
36657483	What seems to be missing are the har	"What seems to be missing are the hardware optimized and accelerated short and big memcpy/memset.On x86_64, on modern micro-archs, ""rep stos[bwdq]"" and ""rep movs[bwdq]"". I bet that, in modern binaries, memcpy/memset call sites are actually place holders for such instructions (before the memory segment goes back to Read/Executable), registers are rdi,rsi,rdx (rcx would be pushed on the stack or the code generated to account for just rcx availability on the call site).Also, expect x86_64 -> risc-v port bugs because to:
 byte->byte
 word->halfword
 doubleword->word
 quadword->doubleword"	sylware	9.617357	-5.8353033	comment	6.0	35.0	1688927856	-10.52714
36737521	I feel for the artists whose job it 	I feel for the artists whose job it is to draw and organize nearly 4000 little vector images, most of which will barely ever be used to communicate anything.I'm going to imagine that it's functionally impossible to make a font with full emoji support now unless you're a massive corporation. (Not that it's an issue really, but there's only so far you can push the list of required code points right? You can leave off entire character sets if they aren't used in the target language you produce a font for. On the other hand, leaving off the head shaking emojis is going to be unforgivable for a lot of people that feel like they're being left out because of their phone OS choice or something.)	graypegg	9.823596	-6.2627926	comment	6.0	22.0	1689433908	-13.958603
36834701	riscv64 is now an official Debian ar	riscv64 is now an official Debian architecture (rebootstrap in progress)	pabs3	9.435419	-5.6705866	story	6.0	135.0	1690115142	-10.521737
36837409	Where would I go about buying a seri	Where would I go about buying a serious risc-v PC? So far, all I've seen are either tiny devices without much computation power, or emulation support.Is risc-v a legitimate platform for serious computation or is it targeted at embedded devices?	beebmam	9.376191	-5.627494	comment	6.0	28.0	1690132535	-10.580219
36840385	An example of something that wouldn'	An example of something that wouldn't be needed at all with an open boot process, as earlier firmware would take care of it.But we have to work with the poor state some motherboard vendor's UEFI BIOS leaves the computer in, as control is passed to Openbsd's bootloader.We should prevent ever getting to this situation on RISC-V. So far, implementations have done well in this regard, with TH1520 and JH7110 following u-boot spl to opensbi to u-boot flow, with UEFI on the works on the latter chip.	snvzz	9.818878	-5.55654	comment	6.0	24.0	1690150149	10.701598
36878013	"It wasn't better.Observe:""According "	"It wasn't better.Observe:""According to Allen Baum, the StrongARM traces its history to attempts to make a low-power version of the DEC Alpha, which DEC's engineers quickly concluded was not possible.""https://en.wikipedia.org/wiki/StrongARM""The Alpha AXP has a notoriously weak memory model. When a processor writes to memory, the result becomes visible to other processors eventually, but there are very few constraints beyond that.""https://devblogs.microsoft.com/oldnewthing/20170817-00/?p=96...No question, it could not compete.Edit: $40,000 for a license for OSF/1|Digital UNIX|Tru64 was the real kiss of death."	chasil	9.558999	-5.3134093	comment	6.0	33.0	1690380636	-8.072914
36881989	BasicBlocker: ISA Redesign to Make S	BasicBlocker: ISA Redesign to Make Spectre-Immune CPUs Faster (2021)	PaulHoule	9.598664	-5.545212	story	6.0	52.0	1690394138	7.9413877
36916596	The x86 world certainly had a lot of	The x86 world certainly had a lot of interesting outliers that other architectures, like m68k, never did. Sometimes I wonder how a 100 MHz m68030 with tons of cache would compare with an '040 or '060...The Blue Lightning supports 80486 instructions, so it can run modern NetBSD. That'd make for some interesting observations.	johnklos	9.599031	-5.2125936	comment	6.0	27.0	1690601588	-7.665203
37000911	Sadly the article explains nothing. 	Sadly the article explains nothing. For example, it doesn't explain how the Verilog (or VHDL) code will be implemented at gate level, is it expensive or not (in terms of gate count), how long the critical path will be, can we pipeline it, how to implement several writing ports etc.I think that one shouldn't write Verilog/VHDL code unless one clearly understands how it will be transformed into gates.	codedokode	9.099837	-5.4723744	comment	6.0	36.0	1691161035	8.579316
37011058	I know it's not a straight conversio	I know it's not a straight conversion, but I've wondered what performance would be like on a multi-core, multi-gigahertz 6502 successor. Even a 486 had a million transistors, think how many 6502's could be on a die with that same count.	mysterydip	9.483606	-5.261984	comment	6.0	51.0	1691235827	-7.4775524
37028141	Raw performance isn't much interesti	Raw performance isn't much interesting to me: I'm not planning on running production Postgres on it, just to prove to myself that computers are orders of magnitude nimbler than what experience in our day-to-day. Windows 95 had less latency on a 486 than most desktop OSes on a Ryzen 7. The sheer amount of layered abstractions we keep piling on and on isn't helping.In any case, I don't know anything about FPGA, any board to recommend, that's useful for a pure software engineer with only a passing knowledge of electronics?	sph	9.0805645	-5.367907	comment	6.0	25.0	1691365171	8.308461
37039672	The machines are different. Multicor	The machines are different. Multicore 64-bit chips are now standard for consumer PCs. RAM and persistent storage are faster and much more abundant. The architecture of the modern x86-64 is much more sophisticated than that of the 386 for which the earliest Linux was written. Vectorization, predictive branching, and asynchronous code are all front and center in the modern programmer's ecosystem.In short, hardware is more capable, and so perhaps now we can afford to take more opportunities to trade a little bit of overhead for abstractions that are more modular and robust.	anon25783	9.623929	-5.31785	comment	6.0	25.0	1691436541	7.896685
37047282	I never have understood the push to 	I never have understood the push to emojify everything. But commit messages, options in menus, status outputs, you name it: I think we'd be better off leaving it in plain ASCII (or Unicode if your language needs that, just as long as you don't dip into the emoji).Emoji are quite nice for messaging people and occasionally some of the more generic ones can be useful for status indicators (think the red and green circles), but I don't want to be presented with a little green worm every time somebody submits a bug fix on GitHub.	LorenDB	9.784432	-6.276277	comment	6.0	27.0	1691493467	-13.956383
37052674	This is a huge performance hit - up 	"This is a huge performance hit - up to 50% it is claimed!
70% of modern intel processors are affected apparently as well."	buildbot	9.420085	-5.214865	comment	6.0	22.0	1691516028	7.799447
37064622	When I was a kid, I always suspected	When I was a kid, I always suspected a compiler or CPU bug when my program did not behave as expected. I heard similar stories on more than several occasions from other people, so being naïve must be a common thing among us software engineers when we make our first steps. Kudos to Mozilla, their finding is a real CPU bug.	garganzol	9.742283	-5.423625	comment	6.0	26.0	1691596720	7.7849116
37111589	"On the PS3 SPU cores, the best ""does"	"On the PS3 SPU cores, the best ""does everything"" instruction was the single ""rotate and mask"" series of instructions which was the underlying implementation of all rotates, shifts, and bitfield extraction instructions. That architecture is still my favourite years on - every register was vectorised by default, and the instruction was the minimalistic set to achieve a lot of unusual operations that were incredibly useful for graphics or signal processing work. Often you couldn't find an exact instruction to do what you wanted, but if you studied the documentation long enough, you'd find one that generalised it and actually did do what you wanted, as well as gracefully handling loads of other edge cases you hadn't thought of - for instance the various instructions to create shuffle masks so "	ralferoo	9.69205	-5.633111	comment	6.0	28.0	1691945138	8.217705
37163191	Future Intel CPUs May Dump Hyper-Thr	Future Intel CPUs May Dump Hyper-Threading for Partitioned Thread Scheduling	rbanffy	9.573479	-5.404033	story	6.0	55.0	1692286138	8.155209
23410569	Linus rejects 'beyond stupid' AWS-ma	Linus rejects 'beyond stupid' AWS-made Linux patch	jonbaer	9.384603	-5.8170657	story	6.0	45.0	1591228344	-9.148174
23497717	His personal reasons may well includ	"His personal reasons may well include that he ""personally hates working at Intel"""	Traster	9.308967	-5.2094274	comment	6.0	34.0	1591956487	7.6835833
23513596	Layman question: how many years befo	Layman question: how many years before we get RISC-V desktops or Raspberry Pi like computers?	bloopernova	9.380249	-5.6400986	comment	6.0	28.0	1592089380	-10.593484
23521882	Does anyone have a good answer to hi	"Does anyone have a good answer to his ""Why"" at the end?What’s a total mystery to me is why Intel chose to build an AGU that cannot handle all kinds of addresses. In 2017, it was indicated to me that there “was not enough space on the die.” I find this hard to believe, especially because the problem prevailed in (at least) three further generations of Intel CPUs after Haswell.Is die space really a plausible answer as to why Intel would bother to put in a second AGU, but cripple it so that it can only work on ""simple"" addresses that even their own compiler is not ""smart"" enough to generate?"	nkurz	9.510869	-5.3348403	comment	6.0	21.0	1592173375	-7.9451923
23541963	So, theres basically 3/4 bins of Zen	So, theres basically 3/4 bins of Zen 2 dies, each subdivided into 6 and 8 core variants.At the very top, you have the Epyc/TR/3950x dies. This may be actually two bins, with the absolute highest end Epycs getting the top 1% of dies.Next you have A grade dies, that go into the 3800x and the 3600x, and the first die of the 3900x. After that, B grade dies, that go into the 3700x and 3600, and the second die of the 3900x.The 3950x is the weird one because it doesn't use two A dies (the 3900x uses an A+B)... it uses two Epyc/TR grade dies.Those new XTs? Seem to be miniature 3950xes: 6+6, 8, and 6 Epyc/TR grade dies. Everyone who wanted a 3950x, but didn't want/need 16 cores? Here you go.Although, honestly, unless you need a computer today, and as much as I love Zen 2, wait for Zen 3 as long as 	DiabloD3	9.282003	-5.185247	comment	6.0	39.0	1592329884	7.9669023
23643425	Apple released a list of open source	"Apple released a list of open source projects that they have ported to ARM, they intend to upload patches to each of these projects:  - Bgfx
  - Blender
  - Boost
  - Skia
  - Zlib-Ng
  - Chromium
  - cmake
  - Electron
  - FFmpeg
  - Halide
  - Swift Shader
  - Homebrew
  - MacPorts
  - Mono
  - nginx
  - map
  - Node
  - OpenCV
  - OpenEXR
  - OpenJDK
  - SSE2Neon
  - Pixar USD
  - Qt
  - Python 3
  - Redis
  - Cineform CFHD
  - NumPy
  - Go
  - V8"	donarb	9.828596	-5.201094	comment	6.0	25.0	1593107351	-7.811849
23662991	Die shrink: How Intel scaled down th	Die shrink: How Intel scaled down the 8086 processor	mnem	9.53241	-5.270209	story	6.0	119.0	1593277310	-7.550998
23804842	How do you virtualize Linux on an In	How do you virtualize Linux on an Intel Mac without it being terrible? Docker has been essentially broken for years. I’m actually looking forward to the ARM Macs because Apple mentioned they’re cooperating with Docker which I suspect could mean Docker will actually be more usable for virtualizing x86 Linux than it is now.	baddox	9.595052	-6.3479543	comment	6.0	26.0	1594494521	10.090213
23815432	> Intel clung to the x86 instruction	"> Intel clung to the x86 instruction setItanium launched in 2001 (per Wikipedia); if anything, I'd say they overestimated how readily they could ditch x86. Of course, it might be that replacing x86 was a good idea and it was just that Itanium sucked (I'd accept that possibility, given the whole ""needs a smarter compiler than exists"" thing). But I do agree with the general feeling that Intel and MS both overestimated how solid/entrenched they were."	yjftsjthsd-h	9.514936	-5.347191	comment	6.0	39.0	1594594493	-7.7456574
23822989	His idea that AVX-512 is something t	"His idea that AVX-512 is something that's exclusively for floating-point is completely off-base, AVX has included integer operations since AVX2.  Widely used in JIT, database, etc.Furthermore, AVX-512 is about much more than doubling the vector width, it is a significant overhaul to the instruction set and adds many new operations and ""fills in gaps"" that were missing from previous instruction sets.  It in fact would be perfectly valid and good to implement AVX-512 with a 256-bit unit that takes twice as long to run 512-bit width instructions.  This completely negates all his points about die space utilization right from the start - AVX-512 support does not imply a significantly larger use of space than previous AVX instructions.  This would also fix some of the power-related problems on S"	paulmd	9.462279	-5.5682554	comment	6.0	29.0	1594659967	8.093897
23823259	On the one hand AVX-512 is incredibl	On the one hand AVX-512 is incredible, the performance gains from AVX-2 to AVX-512 are often more than the 2x you would hope for.  On the other hand, when you can use AVX-512 you can often use a GPU instead, to greater benefit. So linus may be right, overall.	gameswithgo	9.434147	-5.528765	comment	6.0	38.0	1594661389	8.081815
23862657	> This makes me wonder, what makes D	> This makes me wonder, what makes DRAM so expensive?Greed does. DRAM makers were antitrust busted at least 7 times on my memory in Taiwan, Korea, and USA.	baybal2	9.724405	-5.279832	comment	6.0	40.0	1594926659	7.9750314
23928254	> Intel, AMD, and many other compani	> Intel, AMD, and many other companies use FPGAs to emulate their chips before manufacturing them.Really?  I'm assuming if this is true it can only be for tiny parts of the design, or they have some gigantic wafer-scale FPGA that they're not telling anyone about :-)  Anyway I thought they mainly used software emulation to verify their designs.	rwmj	9.101034	-5.2955365	comment	6.0	27.0	1595517614	8.348593
23929607	Very much this.(Also, in general, FP	"Very much this.(Also, in general, FPGA tools are just some of the lowest quality garbage out there... and that is saying something. They're that bad. This is a completely unnecessary speedbump.)The rebuttal to your objection is always tools like ""HLS"" (High-Level Synthesis), or in English it's ""C to HDL"" (FPGAs are 'programmed' in the two Hardware Definition Languages VHDL (bad) or Verilog (worse, but manageable if you learn VHDL first).) These are not programming languages, they are hardware definition languages. That means things like ""everything in a block always executes in parallel"". (Take that, Erlang?) In fact, everything on the chip always executes in parallel, all the time, no exceptions; you ""just"" select which output is valid. That's because this is how hardware works.This model"	exmadscientist	9.101216	-5.431311	comment	6.0	44.0	1595524352	8.443631
23946851	Open-Source Version Control System f	Open-Source Version Control System for Machine Learning Projects	gilad	8.85907	-6.3736587	story	6.0	99.0	1595651618	-11.7744875
23986389	I'm digging through history to find 	"I'm digging through history to find an article about Apple's LLVM patches to add a custom instruction only present on A series chip. Due to Sillion announcement it's kinda hard to find - but they did add at least one instruction to ARM instruction set.From this, and from the very very strong marketing push to NOT use the name ""ARM"" from Apple, I have a suspicion that Apple Sillicon instruction set won't be a fully standard ARM holdings instruction set"	izacus	9.633606	-5.305028	comment	6.0	26.0	1596029306	-7.6276503
24011168	On the plus side it will probably re	On the plus side it will probably really give RISC-V (and other platforms) a boost for the risk averse businesses.	cogman10	9.374425	-5.678911	comment	6.0	33.0	1596216796	-10.587783
24021415	Reverse-engineering the adder inside	Reverse-engineering the adder inside the Intel 8086	parsecs	9.694289	-5.518561	story	6.0	30.0	1596297488	-7.2164826
24068885	I've always wondered, if I compile a	I've always wondered, if I compile an application and don't specify the architecture as explicitly having AVX, just say x86 64bit, will alternate code paths be in the binary for processors with AVX? Or alternatively, if I do specify AVX support on the command line, then what happens if the binary runs on a CPU without AVX? The reason I ask is I use commercial tools for circuit simulation, and they run on a wide range of CPU architectures, but it would be a shame if thst CPU compatability comes at a performance hit when run on a more capable CPU architecture	tails4e	9.520911	-5.5511336	comment	6.0	23.0	1596699546	-0.7723815
24118238	You lose source control on your proc	You lose source control on your procedures. How you deal with that?	sozy777	8.774018	-6.309024	comment	6.0	18.0	1597133329	-11.719165
24193689	I'm not well versed in these things 	I'm not well versed in these things so excuse the stupid question, but is the 'code' that runs the chips somehow hard-wired into the chip essentially? I only know vaguely what FPGA's are from investing a little bit in Xilinx late last year, mainly because from what I read they seemed very important to AI implementation and development. What are the benefits of making ASIC's vs FPGA's? Is it a cost thing (i.e. the ASIC's are cheaper to make?)	DaftDank	9.092635	-5.330584	comment	6.0	18.0	1597708437	8.309223
24215335	Hopefully this behavior change will 	Hopefully this behavior change will help improve AVX-512 uptake and end the somewhat ridiculous conception people have that the instructions are entirely useless. Intel's HotChips presentation on Icelake-SP also indicated that the behavior will be significantly better on server chips, but the behavior is more instruction dependent with 3 license levels and only 512-bit instructions that utilize the FMA unit being subject to downclocking (by ~15-17% as opposed to ~27-29% on SKX derived chips).(Intel Hotchips slide: https://images.anandtech.com/doci/15984/202008171757161.jpg)	tarlinian	9.462985	-5.5298247	comment	6.0	41.0	1597866450	8.055304
24314448	Low-level details of the Zen 2 micro	Low-level details of the Zen 2 microarchitecture [pdf]	ekoutanov	9.26364	-5.197984	story	6.0	163.0	1598687044	7.889322
24317034	Emoji simulator – a tool to make cel	Emoji simulator – a tool to make cellular automata, with emoji	Books	9.814629	-6.263782	story	6.0	139.0	1598717008	13.146514
20013662	Spectre/Meltdown/L1TF/MDS Mitigation	Spectre/Meltdown/L1TF/MDS Mitigation Costs on an Intel Dual Core and HT Laptop	monort	9.570543	-5.5179	story	6.0	132.0	1558857115	7.8049912
20016381	It's not just Anandtech.I feel like 	"It's not just Anandtech.I feel like the entire ""PC enthusiast"" review space has dropped the ball on hardware vulnerabilities. Reevaluating performance between microcode and OS patches is an afterthought, and when a new CPU hits the market the numbers are presented without the obvious disclaimer that these performance gains may evaporate within months.Some even perpetuate the ""only relevant to datacenter"" myth despite the fact that security researchers have shown to be able to exploit these vulnerabilities with JavaScript in the browser."	spamizbad	9.479081	-5.2899814	comment	6.0	53.0	1558893835	7.80738
20166377	It looks like single core performanc	"It looks like single core performance is still worse than i9 9900K. I wonder how this could look like when overclocked?
Sadly my workflow prioritises fast core over multiple cores - audio production. This workflow cannot be made parallel as one plugin depends on the output of another. If plugins can't keep up with filling the buffer you get stuttering. 
Single core limits you how much processing you can have on a single audio track and multiple cores how many tracks of that processing you can get.
It looks like I wouldn't be able to run my chain in realtime on this new AMD even if it had 100 cores."	kitchenkarma	9.470802	-5.257957	comment	6.0	54.0	1560356929	7.8347187
18978503	Circle CI has been steadily taking m	Circle CI has been steadily taking marketshare away from Travis for many, many years. And in my personal experience, mostly because of Travis' slow pace of improvement. Using containers for testing blows away performance on Travis for comparable tasks. Travis had made some improvements this last year to their workflows, configuration, and platform, but too little too late. My experience in dealing with their customer service (we did have a paid plan for some time) and customer feedback (feature requests, pleas for fixes, etc) was also quite poor.I'd moved to Circle CI two years ago, and the only tasks/projects of mine still running on Travis are those which are deprecated, in suspended animation, or abandoned. For myself and my immediate peers, Travis is obsolete, and they did it to themse	andrew_	8.869609	-6.417701	comment	6.0	32.0	1548254787	-5.416246
19047096	Slow CI: real problem or easy excuse	Slow CI: real problem or easy excuse for developers?	iamnguele	9.318063	-6.405933	story	6.0	44.0	1548958153	6.125044
19063763	They shouldn't have killed an excell	They shouldn't have killed an excellent processor (the Alpha) which already had tons of software and history and was already being used in the fastest supercomputers in the world for a product that was never (and still isn't) proven. The Itanic was never best in its class at anything.	johnklos	9.511	-5.470198	comment	6.0	33.0	1549124466	-7.7700396
19074152	This is about ancient VIA C3 CPUs pr	"This is about ancient VIA C3 CPUs processors - not your modern Intel/AMD. This isn't to say backdoors are implausible on modern processors (vulnerabilities in Intel ME/AMD PSP come to mind), but I would like to see some hard evidence before we panic and freak out. For now, ""God Mode on x86 Processors"" isn't something I will be losing sleep over, but I will cry about it into my beer ...https://en.wikipedia.org/wiki/VIA_C3"	oil25	9.577863	-5.28614	comment	6.0	23.0	1549257431	7.753993
19122211	The Next Vulnerability: Looking Back	The Next Vulnerability: Looking Back on Meltdown and Spectre One Year Later	DyslexicAtheist	9.660697	-5.562816	story	6.0	39.0	1549719947	7.7635374
19136894	Finding a motherboard that supports 	Finding a motherboard that supports it is relatively easy. The Asus Prime X370 Pro for example seems like a good choice for a simple home server with ECC and 8 SATAs. The problem is actually finding reasonable ECC RAM. Unregistered/Unbuffered ECC RAM is an unusual configuration that most manufacturers don't provide. It's hard to find, expensive and much slower which Zen is supposedly sensitive to.Shouldn't we have moved to ECC RAM everywhere a long time ago? With economies of scale would it actually be any more expensive or slower? There's no place where the extra safety is a negative, is there?	pedrocr	9.443466	-5.4840407	comment	6.0	53.0	1549909894	8.253203
19165533	I'm sorry, did you just describe the	I'm sorry, did you just describe the core advantage of a new RISC CPU against incumbents as smaller code size? Where am I, and what is happening?	ip26	9.4233055	-5.677522	comment	6.0	21.0	1550175186	-10.5616255
19224713	I disagree with Linus for a couple o	I disagree with Linus for a couple of reasons. The main one being that  not every service in a product needs to be running ARM for it to be useful. There is nothing preventing heterogenous solutions in the cloud and if third parties vet their code on ARM then deploying your DBMS on ARM and your web server on x86 (or whatever services most of your business logic is in) is totally valid for cost or performance reasons.Secondly, it seems likely that there will be ARM MacBooks by 2020, that kind of instant market penetration for arm in the dev space might mean the exact opposite of what he's saying; why would I deploy on x86 when all of my development is on my ARM machine already?	enragedcacti	9.669222	-5.197284	comment	6.0	22.0	1550838218	-7.794334
19339785	What practical problems can 4000 CPU	What practical problems can 4000 CPUs solve that 16 CPUs can't?You get less and less been benefit for each additional CPU you add to the problem, unless the CPU is the main bottleneck.Also if something requires 4000 CPUs, it is going to start getting expensive if you need to double the output. These types of problems don't scale well.	mobjack	9.545966	-5.32681	comment	6.0	31.0	1552066355	7.8552127
19442104	Although the article is framed aroun	Although the article is framed around language implementation, the underlying principle is also valid for interpreting CPU instruction sets. I read quite a few years ago that Apple at one point abandoned a particular 68K->PowerPC JIT because an optimized interpreter was faster at running real-world applications for cache-related reasons (keep in mind that this was the early 90s, when mainstream L1 caches were 4/8/16KB and L2 cache was off-chip).	0xcde4c3db	9.924605	-5.7424717	comment	6.0	38.0	1553089724	-7.6206064
19446118	Article is very light on details, an	"Article is very light on details, and contains zero citations, and only a single result of a single benchmark the guy ran, with no details of how it was run. It follows up by stating his theory as to why this happens as a fact (again with no citations). Author does not even offer us a clue as to what ARM core is used. The claim is:  > The difference is that the computation
  > of the most significant bits of a
  > 64-bit product on an ARM processor
  > requires a separate and expensive
  > instruction.

I see no proof of this anywhere in the ARMv8 spec. You get the lower 64 bits of result using MUL and higher 64 bits using UMULH. Neither of those is that expensive.Looking at [1] we can see that MUL has throughput of 1 and latency of 3, UMULH has 1/4 and 6, but as long as you do not issue a"	dmitrygr	9.649043	-5.4205956	comment	6.0	30.0	1553111383	-7.74735
19457842	Show HN: IDE for Learning RISC-V	Show HN: IDE for Learning RISC-V	thethirdone	9.39193	-5.7059402	story	6.0	105.0	1553206083	-10.595936
19477582	Digging into RISC-V and how I learn 	Digging into RISC-V and how I learn new things	ingve	9.381672	-5.6968303	story	6.0	73.0	1553449125	-10.587466
19490542	An Intel Programmer Jumps over Wall:	An Intel Programmer Jumps over Wall: First Impressions of ARM SIMD Programming	signa11	9.7225895	-5.598763	story	6.0	167.0	1553596143	8.314243
19529452	The Story of PDP-1 (1998)	The Story of PDP-1 (1998)	tosh	9.852551	-5.443763	story	6.0	94.0	1553954983	-7.5266504
19546653	Running Forth Unikernels	Running Forth Unikernels	eyberg	9.929125	-6.240346	story	6.0	103.0	1554144194	-12.386146
19559634	Emoji are showing up as evidence in 	Emoji are showing up as evidence in court more frequently	nolawi89	9.770932	-6.262407	story	6.0	86.0	1554248621	-13.95919
19609532	Linus Torvalds think the Linux deskt	Linus Torvalds think the Linux desktop is in trouble	CrankyBear	9.42033	-5.8297215	story	6.0	38.0	1554761157	-8.19186
19646434	Godson-3: A Scalable Multicore RISC 	Godson-3: A Scalable Multicore RISC Processor with x86 Emulation (2009)	peter_d_sherman	9.441773	-5.664606	story	6.0	107.0	1555087253	-10.554561
19728560	Everybody who studied even a little 	Everybody who studied even a little bit about processor hardware new about speculative execution. And it was never just intel that was using it, (they all were). Until Spectre that technology was not considered controversial.the crazy thing is that nobody saw this until recently.	TheSoftwareGuy	9.651495	-5.602759	comment	6.0	36.0	1556027636	7.676276
19728735	People sometimes talk about waiting 	"People sometimes talk about waiting for a Spectre ""fix"" at a hardware or software level, but it seems that the only fix is to lose Speculative execution entirely (and with it, its performance gains). On my Haswell CPU, the performance hit was about 5% in various benchmarks, although newer architectures suffer less. Given that Spectre attacks still appear to be very difficult to perform in practice, I wonder if we will start to see Speculative execution at the hardware level brought back as an option for high performance and closed environment settings."	Ragib_Zaman	9.67991	-5.627499	comment	6.0	30.0	1556028686	-6.8082147
19772370	Emoji, part 6c: to infinity and beyo	Emoji, part 6c: to infinity and beyond?	breadbox	9.819659	-6.2675843	story	6.0	31.0	1556472526	-13.959229
19913453	So at what point do we start produci	So at what point do we start producing CPUs specifically aimed at running a kernel/userland? Why don't we have a CPU architecture where a master core is dedicated to running the kernel and a bunch of other cores run userland programs? I am genuinely curious. I understand that x86 is now the dominant platform in cloud computing. But it's not like virtualization needs to be infinitely nested, right? Why not have the host platform run a single CPU to manage virtual machines, which each get their own core or 20? Would the virtual machines care that they don't have access to all the hardware, just most of it?	IgorPartola	9.632661	-5.4184923	comment	6.0	27.0	1557865017	-3.4247465
19938607	What are the possible pitfalls of _n	What are the possible pitfalls of _not_ runnning spectre et all mitigations, if you're _not_ hosting other people's code, but on your own hardware?	exabrial	9.687894	-5.5116935	comment	6.0	37.0	1558093917	7.8956156
19938945	Intel vulnerabilities are providing 	Intel vulnerabilities are providing additional 25% revenue to Cloud Providers.	qaq	9.285681	-5.226588	comment	6.0	30.0	1558097007	7.7568192
15802529	Esperanto Technologies to develop en	Esperanto Technologies to develop energy-efficient chips on RISC-V	deepnotderp	9.372562	-5.6709113	story	6.0	65.0	1511908452	-10.578416
15806276	It seems like the RISC-V ISA would m	It seems like the RISC-V ISA would make more sense for a project like this, no?	mtgx	9.408165	-5.6914897	comment	6.0	21.0	1511958710	-10.528896
15818685	If Intel freely released their compi	If Intel freely released their compilers that would rock. Does the money Intel makes selling compilers outweigh the benefits of having hella optimized code on Intel hardware? The lock in benefits seem to outweigh the few hundred bucks they get selling ICC or whatever. They already have free but-don't-expect-support versions of MKL and such.Edit: freely released	santaclaus	9.4981785	-5.476848	comment	6.0	23.0	1512069867	-7.2630854
15936121	To repeat an earlier comment, this s	To repeat an earlier comment, this scheme encourages a centralization of trust into a private key managed by processor manufacturers. You might say that by integrating SGX mechanisms into your security model, you create a set of 'feudal lords' [1] who can wield their power over you.A manufacturer may 'legitimately' establish an enclave in your most trusted hardware which you may not audit or even measure. And if that security model becomes commonplace, for example when only allowing Widevine DRM inside SGX, you eventually cannot use your self-chosen hardware, but will have to pick a feudal lord from a limited set of 'ecosystem choices'.[1] https://www.schneier.com/blog/archives/2013/06/more_on_feuda...	Confiks	9.543153	-5.2346015	comment	6.0	56.0	1513379928	-5.788742
15987796	AVX-512, what’s useful for us	AVX-512, what’s useful for us	rbultje	9.453567	-5.5499578	story	6.0	93.0	1513954334	8.085441
16007744	I'm Deaf and read lips.Thanks for th	I'm Deaf and read lips.Thanks for this extremely intriguing idea to use emoji to depict a talking person visually.You know, some animated films get it right. Sometimes I clearly see utterances like «Thank you!», «Okay», but more often not. Especially older animations don't care and just let the character move the mouth in very simplistic ways: «Babbabbabaa Baababba ba baaa.»Similarly for that emoji. It is moving the mouth in quite arbitrary ways. It looks like: «Sobbabbabee be <grin> seebee <grin> <frown> babbaa».To solve this problem we need about twelve emoji for utterances: «ah», «ay», «ee», «oh», «oo», «b», «d», «f», «l», «n», «r» and «s». The «r» emoji must be animated (so we see the trilling tongue). The other sounds are either invisible like «k» or cover several different sounds lik	_nalply	9.785136	-6.266532	comment	6.0	51.0	1514277142	-13.971164
16009648	Intel Memory Encryption Technologies	Intel Memory Encryption Technologies [pdf]	ingve	9.735075	-5.278189	story	6.0	59.0	1514310099	7.888336
16026622	An introduction to reverse-engineeri	An introduction to reverse-engineering x86 microcode and writing it	sohkamyung	9.73029	-5.549952	story	6.0	197.0	1514509481	-7.337606
16047047	The current miniaturization of DRAM 	The current miniaturization of DRAM circuitry doesn't really allow for a hardware fix for the RowHammer attack. During DRAM manufacturing a test similar to the RowHammer attack exists. This test has certain bounds for passing. If the bounds were tightened up to the level of perfection to prevent the attack it would drop the yield a considerable amount.	hujji	9.61811	-5.649559	comment	6.0	34.0	1514828844	-13.87228
16052636	This feels like a big FU to Intel. I	This feels like a big FU to Intel. I've heard this patch can slow down programs like du by 50%. Does that mean AMD is going to find itself running twice as fast as competitors?	anonacct37	9.291973	-5.1946497	comment	6.0	77.0	1514909155	7.903608
16053641	Was the connection with speculative 	Was the connection with speculative execution already being discussed openly? I know about https://cyber.wtf/2017/07/28/negative-result-reading-kernel-..., but not about anything between that and 28 Dec suggesting someone made it work and that's the reason for KPTI.If it wasn't in the open, seems...not ideal embargo-wise for AMD to leak it there. Though no one's in that thread complaining about the disclosure, so maybe they either think that part is already known to anyone looking closely, or just don't think it's a very big piece of the exploit puzzle (like, finding the way to get info out a side channel was the hard part).	twotwotwo	9.642683	-5.5350337	comment	6.0	21.0	1514915458	7.8016067
16055373	I recently posted an „Ask HN“ asking	I recently posted an „Ask HN“ asking for a flexible CI system. Most of the suggestions were proprietary hosted SaaS solutions.I was sceptical, and things like that keep me sceptical. Sure, setting up a CI system yourself is maybe a bit harder than using a hosted solution. But if the provider decides to change their offering, you are in big trouble. You‘ll need to spend a lot of time switching to a new sevice, migrating all your data and processes. And once that is done, you can start to retrain all your employees.And you always have to be ready for that scenario, at two months notice....	jakobegger	9.107064	-6.370577	comment	6.0	37.0	1514925411	6.0091476
16064817	It comes across as fairly defensive.	It comes across as fairly defensive. Presumably the statement was hastily put together, but it's not really the tone you want to strike when you have a lot of worried customers wondering what is going on.> Intel believes its products are the most secure in the world and that, with the support of its partners, the current solutions to this issue provide the best possible security for its customers.A rather bizarre statement of nothingness, and also an odd thing to say in a statement that just named AMD and ARM.> Contrary to some reports, any performance impacts are workload-dependent, and, for the average computer user, should not be significant and will be mitigated over time.It's interesting to note what it doesn't say – as it would seem to imply that for some workloads the performance im	rpns	9.350801	-5.204262	comment	6.0	38.0	1515011685	7.84735
16064936	> Intel believes these exploits do n	"> Intel believes these exploits do not have the potential to corrupt, modify or delete data.Reading from kernel memory [edit: from unprivileged apps] is still a severe security issue though, right? This sounds like they're trying to downplay that hard, especially with the ""operating as designed"" phrase.> Recent reports that these exploits are caused by a “bug” or a “flaw”[Unprivileged] reading from kernel memory is something of a flaw, no? Fair point about not being Intel specific though.> any performance impacts are workload-dependent, and, for the average computer user, should not be significantHearing echos of Intel's early FDIV response along the lines of ""the average computer user doesn't need perfectly accurate division""...> However, Intel is making this statement today because of th"	AshleysBrain	9.491947	-5.286132	comment	6.0	35.0	1515012367	7.775185
16066106	That article links a commit [1] that	"That article links a commit [1] that contradicts this statement> AMD processors are not subject to the types of attacks that the kernel
page table isolation feature protects against.  The AMD microarchitecture
does not allow memory references, including speculative references, that
access higher privileged data when running in a lesser privileged mode
when that access would result in a page fault.And Axios [2] that Zdnet quotes gave a comment from AMD:> ""To be clear, the security research team identified three variants targeting speculative execution. The threat and the response to the three variants differ by microprocessor company, and AMD is not susceptible to all three variants. Due to differences in AMD's architecture, we believe there is a near zero risk to AMD processors at this tim"	buryat	9.556979	-5.4673643	comment	6.0	18.0	1515019560	7.8950543
16070712	RISC-V impact? With all the reports 	RISC-V impact? With all the reports of these attacks, I have not seen mention of risc-v. Since they are in the process of finalizing a lot of specs including memory model and privileged instructions, I wonder if there will be last minute changes to mitigate these vulnerabilities.	phkahler	9.376861	-5.6858997	comment	6.0	22.0	1515077953	-10.588308
16071349	Ah, the old VIA chips, which VIA bui	Ah, the old VIA chips, which VIA built from the tech they bought from Cyrix. If you're interested in the history of Cyrix and some of the older x86 compatible chips, here's a great video on it:https://www.youtube.com/watch?v=iWGAdoMz1c0Also these Zhaonix's are just 32-bit right? I didn't seen anything on the site about supporting x86_64.	djsumdog	9.712734	-5.3004913	comment	6.0	19.0	1515081786	-7.849272
16080120	I was surprised that this wasn't alr	I was surprised that this wasn't already submitted -- and then surprised again that it's not being upvoted.  To give some color:  this doc contains the first public disclosure of some new MSRs being added to allow system software to help mitigate Spectre. In particular, these are the controls to limit speculation including Indirect Branch Restricted Speculation (IBRS) to restrict speculation of indirect branches; Single Thread Indirect Branch Predictors (STIBP) to prevent indirect branch predictions from being controlled by the sibling hyperthread (!!) and Indirect Branch Predictor Barrier (IBPB) to limit influence on later indirect branch predictions.  For those who need to implement system software support for the new microcode, this is very important information!	bcantrill	9.693169	-5.6713142	comment	6.0	26.0	1515174172	-7.0821004
16082055	As a consumer, will I have the abili	As a consumer, will I have the ability to avoid using or disable the IBRS patches?To be honest I don't really care about some theoretical attack that almost certainly won't be used to target me, and if they do, they can have it.  I'd rather have the performance.	gameshot911	9.487619	-5.3025646	comment	6.0	49.0	1515189329	7.7929373
16112166	> Literally tells us nothing about w	"> Literally tells us nothing about what's in it. Not even a changelog. Not even a sentence hinting as to what might be in it. Incredible.They do have ./releasenote:  Intel Processor Microcode Package for Linux 20180108 Release
  -- Updates upon 20171117 release --
  IVT C0            (06-3e-04:ed) 428->42a
  SKL-U/Y D0        (06-4e-03:c0) ba->c2
  BDW-U/Y E/F       (06-3d-04:c0) 25->28
  HSW-ULT Cx/Dx     (06-45-01:72) 20->21
  Crystalwell Cx    (06-46-01:32) 17->18
  BDW-H E/G         (06-47-01:22) 17->1b
  HSX-EX E0         (06-3f-04:80) 0f->10
  SKL-H/S R0        (06-5e-03:36) ba->c2
  HSW Cx/Dx         (06-3c-03:32) 22->23
  HSX C0            (06-3f-02:6f) 3a->3b
  BDX-DE V0/V1      (06-56-02:10) 0f->14
  BDX-DE V2         (06-56-03:10) 700000d->7000011
  KBL-U/Y H0        (06-8e-09:c"	mehrdadn	9.516089	-5.2297244	comment	6.0	21.0	1515552011	7.7296224
16113289	Microsoft: Haswell and older CPUs ar	Microsoft: Haswell and older CPUs are slowed down significantly by Spectre fixes	bhouston	9.570074	-5.4752216	story	6.0	57.0	1515572057	-9.255428
16185071	Reverse-engineering FPGAs [video]	Reverse-engineering FPGAs [video]	anfilt	9.139482	-5.291596	story	6.0	152.0	1516354403	8.238015
16202383	Run through the Linus drama filter, 	"Run through the Linus drama filter, the only thing I get from this is ""Linus doesn't like the Meltdown/Spectre patches'; Linus having issues with a patch is, well, not particularly newsworthy. Is there something more significant here than a bad first go at this?"	yborg	9.38659	-5.804765	comment	6.0	30.0	1516603758	4.230948
16202539	The most striking thing here is that	The most striking thing here is that Linus has apparently dismissed incompetence as a rational explanation. Yes, he is often brash, but usually he is accusing someone of sheer stupidity. He does not do that here. Linus alleges that we are being lied to - that we don’t know the full story, nor Intel’s motives.Furthermore, we are left to wonder if Microsoft is also being fed “bullshit” patches, and if they may be less discerning than Linus regarding a proper solution.	bashcoder	9.343525	-5.839864	comment	6.0	60.0	1516606270	4.2113056
16210044	This is obvious, and it's extremely 	This is obvious, and it's extremely sad to me that people believe otherwise and vehemently argue that Linus is justified in his pety rants. It was always pathetic.The response is shockingly adult, given the culture Linus insists on trying to push:http://lkml.iu.edu/hypermail/linux/kernel/1801.2/05282.htmlWhat an excellent writeup, despite the tantrum Linus threw just a few replies earlier.I'd highly recommend only reading the response and avoiding the Linus 'rant'. The rant contains no valuable information, the response is excellent and far more informative.I'm sure I'll get downvoted though for calling Linus a baby, because somehow insulting Linus for his flaws is never ok but when Linus does it it's so cool!	quotheth	9.289333	-5.887501	comment	6.0	37.0	1516670842	4.2470393
17988929	There isn't a big deal.  Hell, AArch	There isn't a big deal.  Hell, AArch32 has something like 1400 instructions, it's just as complicated as an embedded x86.  And as someone who's ported a kernel to both, it has just as many weird parts of the architecture built up over decades (ARM is about as old as 32 bit x86).The motivation for the change is that Intel's making the baseband instead of Qualcomm now, so it's not an ARM/Hexagon like it once was.The author is just bent around a decade plus out of date view of chip architecture.	monocasa	9.683697	-5.433665	comment	6.0	45.0	1536944823	-7.8092914
18001144	"One of Linus's more colorful rants:"""	"One of Linus's more colorful rants:""Of course, I'd also suggest that whoever was the genius who thought it
was a good idea to read things ONE FCKING BYTE AT A TIME with system
calls for each byte should be retroactively aborted. Who the fck does
idiotic things like that? How did they noty die as babies, considering
that they were likely too stupid to find a tit to suck on?"""	cowmoo728	9.361496	-5.891295	comment	6.0	36.0	1537132336	4.238943
18059345	I'm interested in seeing some exampl	"I'm interested in seeing some examples of their use in consumer electronics. I think this article would be a lot more compelling if it had a section on ""You've already bought one if you have a (hypothetically) Roomba vaccum/ Tesla Model S/ Thinkpad laptop/ Ubiquiti router.""  I'm pretty sure most of those don't have FPGAs, but would be curious to see a list of things which do. I am by no means a representative consumer, but I know there's an FPGA in my:- Rigol oscilloscope- National Instruments DAQ equipment- Mecco laser cutter- DJI droneAny others where I might not have taken it apart and seen the big QFP with ""Xilinx"" or ""Altera"" on the circuit board would be interesting!"	LeifCarrotson	9.084752	-5.357134	comment	6.0	18.0	1537808714	8.336423
18073946	I don't quite understand the objecti	"I don't quite understand the objection here, this is fairly elegant in my opinion, you have a single opcode used to encode several operations by using ""special cases"". In my experience it's rather common in RISC IAs.If the author doesn't like this they shouldn't look into MIPS because it goes well beyond that. You see, MIPS has a special ""R0"" register that's always 0 (AARCH 64 does as well by the way) so you can always use it as a placeholder in other instructions.As such, there's no real MOVE instruction, it's just an assembler mnemonic that assembles down to `OR $target, $src, $R0`. NOP? It's by convention `SLL $R0, $R0, 0` (which has the nice property of being an instruction encoding as ""0x00000000""). You want to negate a number? `SUB $target, $R0, $src"".Since all instructions are 32bit"	simias	9.9230585	-6.003208	comment	6.0	32.0	1537950877	-7.688293
18083963	This is more of a question than a cr	This is more of a question than a critique on your comment, but:Couldn't he still not be a people person _(perhaps a poor communicator)_, and still manage a successful community? I say that because historically it's been a bit of a meme around how forceful and abrasive Linus is. Yet, he's often right, or at the very least very informed.He's a very smart man who has done very smart things. I'm not sure if the Linux community inherently means he's a gifted communicator. Eg, I don't think I could behave like Linus and make a Linux-like community - I think his talent and intelligence carry his lack of communication skills. Which is not a discredit to him, we're all different.Thoughts?	asdkhadsj	9.320908	-5.8788767	comment	6.0	23.0	1538053040	4.2548575
18125296	The press release linked by OP doesn	The press release linked by OP doesn't give the full story. For a better perspective see https://abopen.com/news/arm-offers-free-as-in-beer-cortex-ip...If you're just joining us, Arm very much sees the up and coming RISC-V stack as an immediate threat to the future of their business and is taking pro-active countermeasures - doing everything from awkward, backfiring smear campaigns against RISC-V[1] to straight up license dumping their own product to prevent developers jumping ship.It's interesting to see because RISC-V is wonderful and Arm seems to recognize that. Arm Holdings is acting rationally as someone in a privileged competitive position would do. At the same time, big players like Western Digital are migrating to RISC-V so Arm is internally freaking out [2].[1] https://www.theregi	paulgerhardt	9.393569	-5.607286	comment	6.0	48.0	1538511153	-10.654013
18163598	Inferring the Future of FPGAs	Inferring the Future of FPGAs	Katydid	9.081868	-5.3733177	story	6.0	76.0	1538963127	8.278927
18169685	Most people don't have that amount o	Most people don't have that amount of RAM. What are the chances that a soft bit flip will cause silent data corruption that matters for a user with, say, 8 GB of RAM?	cronz	9.751461	-5.531891	comment	6.0	27.0	1539021349	8.242275
18274192	Linus Torvalds is back in charge of 	Linus Torvalds is back in charge of Linux	crunchiebones	9.376016	-5.8389373	story	6.0	75.0	1540212745	-8.204136
18273327	I've read a few things about the lat	I've read a few things about the latest happenings with regards to Linus and the kernel, but I feel like I'm missing something here. Can someone summarize for me, or point me at a good summary?Edit: Who is Greg KH and why is this significant and what is the relationship between Greg KH and Linus (and the community)?	jedberg	9.412375	-5.843862	comment	6.0	21.0	1540201354	-8.24683
18281868	AMD Responds to Intel's 9th Gen Benc	AMD Responds to Intel's 9th Gen Benchmarks	jrepinc	9.338752	-5.1850505	story	6.0	96.0	1540285558	7.883313
18363619	As predicted Spectre/Meltdown were j	"As predicted Spectre/Meltdown were just the first fruit of a major new wave of investigations into these avenues of side-channel attacks in CPUs. Now we're seeing more as it gets more attention, and it's interesting stuff. That said I think the researchers might go too far here:>""This is the main reason we released the exploit -- to show how reproducible it is,"" Brumley told us, ""and help to kill off the SMT trend in chips."">""Security and SMT are mutually exclusive concepts,"" he added. ""I hope our work encourages users to disable SMT in the BIOS or choose to spend their money on architectures not featuring SMT.""I don't blame them for being security focused about all else at any cost and any layer, that's their gig. But I think the real response here is likely to be a lot more subtle and in"	xoa	9.61727	-5.4925284	comment	6.0	28.0	1541171926	7.7910094
18392735	Having been in Chris' shoes (being a	"Having been in Chris' shoes (being acquired by IBM) I found the reactions of different people in the company most interesting. Several people had the same sort of ""Everything is different now that IBM owns us."" reaction, but if you unpack that, the reality is a bit different.For a company like Redhat I can't imagine it will be largely changed in the first couple of years at least, so for that period of time you will be working with the same co-workers, and if you're not in the Redhat C-suite probably for the same boss in the same facilities on the same stuff. So in that regard nothing has changed.What will be different will be access to a company that has been running for over 100 years and evolved over that time, at all levels. Facilities all around the world. Access to some of the scient"	ChuckMcM	9.9308	-5.42529	comment	6.0	31.0	1541523634	-9.469617
18474249	Intel Management Engine JTAG Proof o	Intel Management Engine JTAG Proof of Concept	adulau	9.534591	-5.242088	story	6.0	301.0	1542435029	-5.2266746
18475999	Why does Intel encrypt the code? It 	Why does Intel encrypt the code? It is unlikely that anyone would steal it because it is useable only with Intel CPUs and is protected with copyright. So the reasons are either Intel wants to hide something (a code that changes CPU behaviour when a benchmark is detected?) or wants to have some features that cannot be disabled or modified by the user.It is difficult to believe that there is no backdoor.	codedokode	9.506844	-5.2735376	comment	6.0	34.0	1542470485	7.7901626
18482400	What's disappointing is that none of	What's disappointing is that none of the major cloud vendors has made any real commitments to AMD, at least none that I've seen.If speculative execution is a problem and you need to give each VM its own exclusive cores, great when you can source parts with 64+ cores on them!	astrodust	9.351581	-5.2316184	comment	6.0	35.0	1542573439	7.8913207
18497579	I really hope that next time when so	I really hope that next time when somebody tries to paint Linus as an asshole and a toxic force for the community because of his rants, someone remembers to link this email too.	golergka	9.279588	-5.893622	comment	6.0	33.0	1542747047	4.2507687
18497732	Invalidating the caches is kind of a	Invalidating the caches is kind of a cringe inducing approach on this (actual) problem. Especially in HPC radiation related single event upsets have become a real problem. If you do the math, all the silicon area devoted to memory (DRAM, caches, registers) adds up, and what you've got is essentially particle detector.Compared to the effective volume of a purpose designed one (ATLAS, CMS, Super Kaminokade, etc.) rather small, but a particle detector nevertheless.A couple of months / years ago, there was an article (also linked here on HN, IIRC) that did a few back of the envelope calculations regarding expected event rates. IIRC it was something on the order of 1 event per day per 10^12 transistors. (EDIT: not the one I thought of but blows the same horn: http://energysfe.ufsc.br/slides/Pao	datenwolf	9.676095	-5.4692583	comment	6.0	30.0	1542748023	8.106557
18531724	a little bit disappointed that the m	a little bit disappointed that the motherboard only support up to 8 cores and actually comes with a 4 cores processor.such low core count is making the product not that attractive - I can go with µATX MB + Xeon if I want computing power or a decent 6/8-core ARM board for smaller form factor. to just try a different ISA, I'd probably choose RISC-V to maximize my potential investment return.	dis-sys	9.4696245	-5.4685855	comment	6.0	38.0	1543217514	-7.7148733
18542196	Do hosting companies no longer give 	Do hosting companies no longer give you the speed of a processing core? I couldn't find anywhere that explains how fast 1 of the ARM cores go? Is it 1ghz or 100mhz? Seems like that would be quite important. Seems like 1vCPU is a bit of an arbitary figure. That could be 1 vCPU that goes at 4ghz but then 2 vCPU's that only go at 1ghz. I feel like there's information missing.	turblety	9.557373	-5.2570467	comment	6.0	28.0	1543326371	7.9747868
18701831	> “Had this happened two or three ye	> “Had this happened two or three years ago, RISC-V would have never been born.”Had RISC-V not been born, MIPS wouldn't have made this announcement.	jf	9.378309	-5.7010517	comment	6.0	68.0	1545078099	-10.552937
18721739	Very cool. I have wanted to try some	Very cool. I have wanted to try some FPGA stuff out but it seems like its very encumbered by proprietary toolchains and industry secrets.Wondering what the pros/cons are of using this vs a raspberry pi.	baroffoos	9.075026	-5.3541675	comment	6.0	37.0	1545269038	8.412031
18766872	Super niche use case. But I would ab	"Super niche use case. But I would absolutely love one of these for cross-compiled development workRight now if I want to cross-compile Gentoo for ARM and ARM64. I can build ""most"" packages with the included emerge-wrapper. Which is great as it runs basically at 1:1 speed as doing x86_64 compile jobsHowever a ton of packages still fail, many of their upstream developers also refuse to incorporate changes that might fix that https://dev.gnupg.org/T2370For those packages, I have to use a QEMU usermode chroot. Which on my i7-4790 build host, is slower than native compilation on the Raspberry Pi itselfI'd love to be able to do direct, native builds to sidestep these flaws. But every ""consumer"" ARM board (Raspberry Pi, ODROID, ROCK64 etc) are flawed in some way as to make them unusable for devel"	IntelMiner	9.93541	-5.491473	comment	6.0	20.0	1545879236	-8.038528
18887674	Revisiting the Intel 432 (2008)	Revisiting the Intel 432 (2008)	mpweiher	9.44045	-5.207448	story	6.0	31.0	1547244685	7.6892595
18898304	Ask HN: Are you interested Q&A with 	Ask HN: Are you interested Q&A with the FPGA hackers of HN?	FPGAhacker	9.086495	-5.333867	story	6.0	13.0	1547408964	8.389062
29793586	A hyperthread is only worth ~30% of 	A hyperthread is only worth ~30% of a full core back of the napkin.	monocasa	9.831485	-5.641693	comment	6.0	20.0	1641294660	8.290348
29795897	>You should also start your commit m	>You should also start your commit message with one applicable emojiI don't think many people will contribute with a rule like that. Project is neat though.	throwaway889900	9.77164	-6.284553	comment	6.0	33.0	1641310771	-13.979607
29809696	"Well, this just sucks.
This means Mi"	"Well, this just sucks.
This means Microsoft owns my computer. They can access parts of my CPU without my knowledge.  WTF, AMD!"	lkxijlewlf	9.39431	-5.2163134	comment	6.0	45.0	1641394534	7.8347473
29838151	It was never advertised, and Intel v	It was never advertised, and Intel very specifically said AVX-512 instructions will not be available. Some motherboard manufacturers made them available anyway, now Intel is fixing that.It's like buying a car with an advertised speed limiter of 155mph, then finding that actually it can go 170mph, and then the manufacturer fixes the speed limiter with a software update. Yes we know the car could go faster, but the speed limited version is the one that was actually advertised.	gambiting	9.450051	-5.5424333	comment	6.0	34.0	1641557434	8.130617
29838368	The BIOS doesn't upgrade microcode -	The BIOS doesn't upgrade microcode - the OS does.During boot there's usually no network connectivity, so how would the BIOS even know of an update, let alone acquire it?	qayxc	9.612697	-5.3237185	comment	6.0	19.0	1641558919	7.7693114
29872151	>  I am a programmer, so my needs ar	>  I am a programmer, so my needs are not that highThis isn't true for all programmers. I'm a programmer, and until 3 years ago a good chunk of my day was spent waiting for compiles to finish.>  Or perhaps it is that after 12 years, the laptops are now on bar with desktops. I think the biggest improvements for me in last 20 years have been the SSDs and then the NVMe.Not even remotely close. I have an AMD threadripper [0] in a desktop PC under my desk that I use for development. This is a mainstream, readily available x64 processor with 32 cores (and hyperthreading) that can sustain just 3.8GHz for at least 30 minutes (I've not pushed it any farther than that because I've needed to).  Based on PassMark benchmarks [1], the threadripper is substantially quicker than the M1 Max.[0] https://www	maccard	9.394227	-5.19862	comment	6.0	40.0	1641805428	7.91072
30117809	Yeah :(Ever since I switched to an M	Yeah :(Ever since I switched to an M1, I haven't found a way to reliably build and run x86_64 containers on it.Docker desktop with Qemu is not just painfully slow, it's also very buggy and some containers just can't be built without crashing.Is there any alternative?	jedisct1	9.608801	-6.3084946	comment	6.0	24.0	1643391411	10.047599
30285837	AMD Receives Approval for Acquisitio	AMD Receives Approval for Acquisition of Xilinx	transpute	9.136788	-5.253879	story	6.0	122.0	1644500574	8.118711
30321160	I honestly done understand they hype	I honestly done understand they hype around RISC-V, it’s seems like reinventing the wheel. Sure it’s open, but so is OpenPower; and that’s a lot more mature with better software support. I’m sure it’s not the only one either. Everything new is old I guess.Edit: Tesla lies in their marketing, the industry is sexist, Rust is overhyped, Wayland still isn't very usable. If I'm gonna get downvotes, I might as well go big.	mnd999	9.372967	-5.68906	comment	6.0	25.0	1644753764	-10.546837
30399129	Show HN: Arduino 6502 Controller	Show HN: Arduino 6502 Controller	billziss	9.540936	-5.3128695	story	6.0	52.0	1645294386	-7.453849
30432527	How many people actually use a 128 c	How many people actually use a 128 core machine though? The absolute biggest AMD Threadripper you can get only has 64.	netr0ute	9.477875	-5.2481656	comment	6.0	20.0	1645558537	7.9297905
30437021	Clear – Open-Source FPGA ASIC	Clear – Open-Source FPGA ASIC	krasin	9.110385	-5.309199	story	6.0	100.0	1645584815	8.366672
30516822	The AMD64/x86_64 ISA patents expire 	The AMD64/x86_64 ISA patents expire 2023. This makes RISC-V kind of pointless since x86 has a vastly superior ecosystem. I would prefer a solid x86 system without IME, Pluton, secret microcode, EFI cripple bootloader and all the other surveillance, anti-freedom crap over RISC-V any day.	sprash	9.43153	-5.6595764	comment	6.0	24.0	1646154900	-10.581522
30518085	> Survive what? I don't see RISC-V d	> Survive what? I don't see RISC-V disrupting much of ARM's bigger-named business (eg, phones, with some inroads into other things like Apple Silicon & laptops).Go back a decade or so: how many people thought that ARM could compete against Intel/AMD?	throw0101a	9.4044695	-5.604123	comment	6.0	22.0	1646159912	-10.570657
30648103	I suspect it won't be long before RI	I suspect it won't be long before RISC-V becomes not-so-RISC. Even ARM added FJCVTZS.	userbinator	9.386577	-5.6908584	comment	6.0	25.0	1647048173	-10.590737
30651324	Intel Finds Bug in AMD's Spectre Mit	Intel Finds Bug in AMD's Spectre Mitigation – AMD Issues Fix	News-Dog	9.459759	-5.3882294	story	6.0	121.0	1647092957	7.8754783
30698453	"Me: ""Surely the Linux Kernel has bui"	"Me: ""Surely the Linux Kernel has build options for x86 that includes no-FPU""20 minutes later: ""Oh right they removed i386 as a target because it sucked and wasn't maintained that includes i486... so now you'd have to target a Pentium or higher""But seriously the Linux kernel does support not having an FPU... just not on x86 as best I can tell."	leeter	9.553459	-5.211064	comment	6.0	27.0	1647436881	-7.804681
30698592	The Migration Of Engine ECU Software	The Migration Of Engine ECU Software From Single-Core To Multi-Core	zdw	9.5409155	-5.3804398	story	6.0	48.0	1647437629	8.1446705
16284712	The question that needs to be asked 	The question that needs to be asked is this... were Intel subject to the same products liability laws as auto manufacturers or drug makers, would it make Meldown, Spectre and the ME vulnerabilities less likely? We know from other industries that products liability laws make for safer products, but we refuse to acknowledge that our CPU's are critical to safety because we don't pay much attention to how pervasively they are used, or the 2nd and 3rd order effects of flaws in the chips.Its very possible, perhaps even likely, that Intel may profit more from the replacement of impacted chips, then it will lose settling various class action cases it faces. Its questionable if Intel's competition can or will grow manufacturing capacity such that Intel faces a real competitive threat.It isn't that 	rrggrr	9.383813	-5.191027	comment	6.0	29.0	1517511902	7.7510896
16290410	Nice history of money printing machi	Nice history of money printing machines. Very nice and very easy FPGA application back then, just 2 sha256 pipes.Is there something worth pursuing nowadays for FPGAs? Machine learning?	lnsru	9.084734	-5.3590736	comment	6.0	26.0	1517578963	-13.130455
16298432	AMD's Hidden Strategy	AMD's Hidden Strategy	x0054	9.23118	-5.1976666	story	6.0	30.0	1517677898	7.86466
16354281	> Once your test suite is bulletproo	> Once your test suite is bulletproof [...] you can deploy code using continuous delivery techniquesI see this line of reasoning a lot in the industry and I think it misses a key piece: monitoring/dev-ops.Unlike the author, I think there is a clear progression from CI to CD. Where most teams stumble, is they are not prepared for the shift towards deploying new code regularly: measuring outcomes in production, running experiments, and validating assumptions against real traffic.Developers tend to think their job is done once their PR merges, and therefore teams struggle to reap the benefits of continuous deployment.	arrow64	9.25578	-6.4260454	comment	6.0	19.0	1518377387	6.205095
16538954	Unfortunate reality is that Cairo pr	Unfortunate reality is that Cairo project doesn't want to be helped.I've been checking Cairo from time to time for a very long time. There was a period of active development because it was used by FireFox and, I think, had at least one dev working on it paid by Intel.But there's no indication that the project wants your help. See https://www.cairographics.org/ and try to find the part that tells you how to submit a patch. To submit a bug you need to use a mailing list or antiquated bugzilla instance.Cairo is ostensibly a Gnome-affiliated project as it's used in Gtk. Federico is a big deal in Gnome project.It's telling that he had to setup up essentially a personal fork of Cairo on gitlab to do any work.At this point in time, moving the code officially to GitHub (or GitLab) from anongit.fre	kjksf	8.889956	-6.0744405	comment	6.0	25.0	1520450081	-10.105572
16563194	I once helped lead my team from a te	I once helped lead my team from a tedious manual process into full-CD. Took a lot of pain to get there, and we had to build some new tools to automate all of the steps we were doing, but we did it. Most of the pain was in realizing we didn't have enough UI regression tests. Every 'incident' sparked a new set of tests and over time the incidents stopped happening.Our velocity increased, time-to-market dropped, operational workload fell. It was great.Sadly, after a few years of the joy of full-CD, more conservative leadership took over our org. Now, all deployments of software must be accompanied by paperwork (digital), step-by-step plans of how you're going to deploy this software, approvals from senior managers, just general micromanagement. CD isn't possible in such environments.	mabbo	9.237042	-6.395144	comment	6.0	31.0	1520779863	6.206256
16569111	This seems half-jokey, but I think i	"This seems half-jokey, but I think it'd actually be really great if places where we usually see hex or base64 hashes used emoji instead.Much easier to compare at a glance, and have a chance of remembering (by sight -- ""is this the same hash"", not ""let me write down the hash from nothing"")."	dilap	9.870647	-6.2523203	comment	6.0	23.0	1520871270	-13.925739
16609004	One presumes that Spectre/Meltdown-l	One presumes that Spectre/Meltdown-level bugs are each worth substantially more to the computer industry than $250k.	ISL	9.597334	-5.495427	comment	6.0	71.0	1521319834	7.7877026
16710577	I haven't done any assembly on intel	I haven't done any assembly on intel chips. The Motorola 68k was so much easier to program I never even looked at anything else. I guess that has improved by now?	Moru	9.582294	-5.3347645	comment	6.0	25.0	1522353911	7.7293363
16791839	BranchScope: A New Side-Channel Atta	BranchScope: A New Side-Channel Attack on Directional Branch Predictor	ianopolous	9.921958	-6.0296984	story	6.0	197.0	1523270400	-7.0557475
16980655	AI revives in-memory processors	AI revives in-memory processors	mindcrime	9.557979	-5.2551317	story	6.0	88.0	1525291378	-7.588128
16984253	German CT-Magazine says 8 new Spectr	German CT-Magazine says 8 new Spectre Vulnerabilities are found in Intel CPUs	growt	9.568383	-5.4558983	story	6.0	87.0	1525336298	7.7733164
17027117	The bits about the OpenShift integra	The bits about the OpenShift integration are interesting I guess, but buried about halfway down is the news that they intend CoreOS' Container Linux to supplant their existing Fedora/RHEL Atomic Host, and Brandon Philips from CoreOS says that they're be continuing to base it around Ignition[0]I'm genuinely surprised at this. RH has put a ton of work into rpm-ostree for a long time. I guess there's a chance they'll meld it somehow with Ignition and Container Linux's Chrome OS bits when they turn it into Red Hat Container Linux or whatever it'll be called, but it's surprising to see Red Hat supporting a Linux distro not based of of RPMs and installed with kickstart/anaconda.[0] https://twitter.com/BrandonPhilips/status/993880972583092225	davidmr	9.89162	-5.864937	comment	6.0	25.0	1525834410	-9.352497
17100056	Ask HN: What killed IA-64?	Ask HN: What killed IA-64?	sakuronto	9.591008	-5.413784	story	6.0	14.0	1526636826	-7.7977343
17151328	This is great! I think that some tim	This is great! I think that some time in the future, FPGA will be a vital part for data processing.In theory, an application with a computation-heavy task could program the FPGA to provide part of that task in hardware (think the hot innermost loop body).What I am worried about is the infrastructure that is needed to make this happen: Is there even support for this in our compilers? What would support look like?	sddfd	9.104518	-5.343325	comment	6.0	21.0	1527232506	8.335884
17173083	TLDR: they saved 400 to 1000 cores b	TLDR: they saved 400 to 1000 cores by switching off the switching off of the GC during requests.The fact that they are running Ruby and are spending 1000 cores on GC is o_O.	titzer	9.599863	-5.3472953	comment	6.0	37.0	1527522987	-8.896455
17190702	Lol, looks like Linus actually inspi	Lol, looks like Linus actually inspired them. I mean with the whole DDR industry acting corruptly to keep prices sky high, this seems like a reasonable way to add some competition.	ukblewis	9.3318	-5.795961	comment	6.0	25.0	1527707393	4.355847
17221988	Linus Torvalds on C++ (2007)	Linus Torvalds on C++ (2007)	tosh	9.383754	-5.893265	story	6.0	36.0	1528059663	-8.205449
17231858	> For most people emojis (and animoj	> For most people emojis (and animojis) have opened a whole new way to communicate with each otherWow that is an extremely generous characterization.  At best they're just prettier versions of :) and :( and I don't see how they allow people to convey ideas they couldn't do just as well via text.	EpicEng	9.80887	-6.2691507	comment	6.0	74.0	1528143003	-13.95688
17232784	I don't mean this to sound in any wa	"I don't mean this to sound in any way cruel or judgemental, but a very large proportion of the population have very limited literacy skills. Emoji are useful for all users who are writing short, personal messages that might be ambiguous in tone. They are extremely useful for people who would otherwise struggle to express or understand tone and emotion using the written word.In the last National Assessment of Adult Literacy, 43% of Americans were assessed as having ""basic or below basic"" literacy. They can extract basic factual information from short, straightforward texts, but little more than that.Here are a couple of example questions from that test.Only 33% of Americans could describe what is expressed in the following poem:""The pedigree of honey
Does not concern the Bee -
A clover, any"	jdietrich	9.788226	-6.266198	comment	6.0	21.0	1528148254	-13.957269
17234537	Arm unveils 7nm Cortex-A76 CPU	Arm unveils 7nm Cortex-A76 CPU	signa11	9.541395	-5.228128	story	6.0	168.0	1528166426	7.7073684
17247732	Reducing DRAM Footprint with NVM in 	Reducing DRAM Footprint with NVM in Facebook	gwern	9.805084	-5.2632785	story	6.0	65.0	1528297690	8.039105
17295475	"Rudeness is inferred or ""felt"" by th"	"Rudeness is inferred or ""felt"" by the other party, and really worrying about peoples feelings or emotions is like worrying about which direction the wind is going to blow today because emotions have the ability to be extremely irrational. Perceiving something as ""rude"" ultimately comes down to the individual who is being told the information as interpreting it as rude. In this case, anything can be viewed as ""rude"" under the right microscope -- in fact Linus has brought up this very point multiple times in a sort of a ""individual liberty"" light. If you take feelings out of it and focus on the information -- Linus is either right or wrong. Something either sucks or it does not suck, for example. We can talk about how he might be wrong -- maybe it doesn't suck here's point x y and z refuting"	jimmy1	9.261118	-5.9012966	comment	6.0	19.0	1528823955	4.3071775
17307689	Serious question - should we conside	Serious question - should we considering speculative cpu execution to be A Bad Idea (tm) and move on from it (since these problems keep coming up), or is the thought that we more or less have been gaining performance on the back on incorrectly written software (which does not take these speculative execution edge cases into account), and the only forward is patching?I guess a another question I have is can we win the performance back through fixes on the cpu or will speculative execution always be insecure and thus need patching in software? Try as I might, I am not a CPU person.	cmsimike	9.675198	-5.6312766	comment	6.0	81.0	1528930294	-6.790061
17344968	I’ve been using FreeBSD in productio	I’ve been using FreeBSD in production on AWS for a few years now and it’s been great, thanks to ZFS, jails and pf.There are lots of different ways to configure jails, which unfortunately means there are lots of places to get stuck.I typically deploy to x1.* instances, which have NVMe drives. I create a zpool of all the NVMe drives, and then mount a zfs filesystem on the zpool at /mnt/jails.  I run all my services in jails. Each jail gets its own IP address on the host, and services are made available to the outside world using pf rdr rules. Services in jails are allowed to access the outside network using pf nat rules. pf makes it easy to monitor and restrict network activity for each service.Once you’ve configured a jail, you can snapshot it with zfs, compress the snapshot, archive it and	Cieplak	9.73931	-6.412452	comment	6.0	25.0	1529399954	10.603658
17350225	The obvious answer is to completely 	The obvious answer is to completely to the instructions the cpu uses internally. That would mean recompiling for every cpu revision though.	tinus_hn	9.855999	-5.667791	comment	6.0	28.0	1529441701	7.746134
17365458	Linus seems like a jerk if you see h	Linus seems like a jerk if you see him  as an entitled engineer maintaining a popular OSS library.But if you instead see him as a CEO, responsible for every single part of the Linux kernel, running on one billion machines, his behavior becomes natural. Even warranted, since, often-times the people at the recieving end of his wrath are not making some whoops-daisy technical mistake; they are trying to exert power and extend their influence through the code they write.Remember how grsecurity tried to destabilize the Linux kernel?https://news.ycombinator.com/item?id=14633163Or how one core maintainer broke userland and refused to fix it?https://m.slashdot.org/story/179833Linus shut them down.Linux keeps a thousand volunteers in line. The vast majority of whom are not subordinates, duty-bound 	hitekker	9.372536	-5.85058	comment	6.0	21.0	1529591392	4.259058
17376629	>  first class support for emojiI'm 	">  first class support for emojiI'm sorry. Even in 2018 I cannot take seriously any claim that ""support for emoji"" is being used to make business case decisions."	bandrami	9.793167	-6.2642426	comment	6.0	32.0	1529695442	-13.952312
17470715	Overview of Intel SGX – Part 1, SGX 	Overview of Intel SGX – Part 1, SGX Internals	gbrown_	9.483889	-5.210278	story	6.0	70.0	1530878829	-5.864031
17490660	A friend works in ARM and was extrem	A friend works in ARM and was extremely surprised (negatively) when I shared this link with himRISC-V may, perhaps, compete in two fields with ARM: education, where ARM doesn't give a fuck, and hacker boards, which is a tiny market compared to smartphones, smarttvs and so on. There have been around 15 million Raspberry Pi (the most popular SBC) sold in 6 years. Samsung sold 321 million smartphones last year alone.Whoever is thinking today about replacing some production anything with a RISC-V is insane to begin with, but this campaign ups the insanity further.	Uberphallus	9.390167	-5.6122675	comment	6.0	24.0	1531148454	-10.555822
17532446	I've always wondered what sad life L	I've always wondered what sad life Linus leads to make him communicate like every developer I've worked with that I don't want to work with. Clearly he has deeper issues that lead to his blooming sarcasm and condescension, that our community already struggles with. This behavior is not normal, nor sustainable.	stevebmark	9.281443	-5.891764	comment	6.0	26.0	1531603263	4.254917
17532546	Ask HN: What are your predictions on	Ask HN: What are your predictions on the server CPU market for 2019?	jakobov	9.289698	-5.217772	story	6.0	32.0	1531604573	7.9256973
17549053	I've always been fascinated by async	"I've always been fascinated by asynchronous hardware design.When you first learn about H/W design in Verilog or VHDL, it feels like your mind is immediately shoehorned and molded by both the literature and your teachers into thinking synchronously (everything has to be clocked, and signals crossing clock domain boundaries are to be treated like they're some form electronic nitroglycerin).As a matter of fact, HDL courses often go without so much as a mention of the possibility of asynchronous design, or if they mention it, it's to say something along the lines of ""just don't"".It almost feels like designing things asynchronously is a sin to be avoided at all cost.Even further, the synthesis tools themselves will yell at you when you try to do things asynchronously (probably  because many of "	ur-whale	9.184396	-5.452229	comment	6.0	26.0	1531828817	8.315919
17556121	A little OT but how emojis work?Does	A little OT but how emojis work?Does each device send a code, interpreted by the recipient device/platform with its own library of images, or do devices send pictures, received as is? Or does it depend on the platform? Is there a standard?	bambax	9.820261	-6.266945	comment	6.0	42.0	1531898656	-13.961477
17560396	I basically want this:- Emoji decoup	I basically want this:- Emoji decoupled from Unicode, and represented as SVG by chat clients. This ensures our expression is not limited by the Unicode committee.- Any user can upload a new emoji as SVG.- Any user can download an emoji that appears in one of their messages, and place it in their own library.- Emojis can also be downloaded from web-pages etc.	amelius	9.825801	-6.271238	comment	6.0	22.0	1531935470	-5.015374
17586616	Also worth noting that they're not p	Also worth noting that they're not patching it for 1st, 2nd or 3rd generation Core CPUs. I'm sure there's plenty of Sandy Bridge/Ivy Bridge CPUs in the wild, and it's not like you have an option to discontinue use of the Intel ME :(	Macha	9.462644	-5.2607775	comment	6.0	38.0	1532266028	7.8125896
17597159	Why can't we just put a battery onto	Why can't we just put a battery onto DRAM that maintains state if the power goes out, and be done with it?	oh_sigh	9.837497	-5.2395144	comment	6.0	19.0	1532391961	7.9547253
17611462	Yes, I do.Turing completeness means 	"Yes, I do.Turing completeness means that instruction sets simply do not matter. In fact, you cannot buy a ""native"" x86 processor today. Every modern x86 processor actually has hardware to run some highly optimized microcode instruction set, plus an x86 emulator in software that runs on top.ARM is the current viable alternative to x86. You could put an ARM chip in a desktop and it would be cheaper and faster than RISC-V for the foreseeable future. RISC-V is even more experimental than that and it has nothing to offer even in theory. The only standard for an ISA is performance. Any other features can and should be built on top.I set the bozo bit on anyone crowing about RISC-V. Don't get me started on the Mill, it's just a shitty GPU."	btrask	9.469456	-5.652784	comment	6.0	29.0	1532542545	-10.516934
17637124	Ask HN: Suggestions for low cost hom	Ask HN: Suggestions for low cost homebrew “HPC” beast?	amuresan	9.586432	-5.2649226	story	6.0	11.0	1532853544	8.0046
17643166	Annoyingly this chip lacks the Compr	Annoyingly this chip lacks the Compressed (RVC) extension, making it incompatible with all existing Linux distros.  These will either have to be recompiled without any Compressed instructions (which increases I-cache pressure on other CPUs that do support it), or we'll need to ship two versions of everything.  From discussions I believe they've been recompiling Fedora & Debian from sources without RVC.	rwmj	9.586775	-5.4022675	comment	6.0	50.0	1532942815	7.6308517
17660443	Honest question: can someone explain	Honest question: can someone explain why everyone loves emoji these days, especially with regards to 'modern' programming communities such as those around JS and Rust? Is it just a celebration of the fact that we have Unicode support everywhere now?	DC-3	9.835119	-6.266298	comment	6.0	41.0	1533110419	-13.957896
17660849	I find the whole trend very childish	"I find the whole trend very childish and unprofessional. Why?
Because emojis don't convey much meaning and borders on child-talk, worst yet, they're very vague and so makes for very poor and unprofessional form of communication."	omeid2	9.778173	-6.2601833	comment	6.0	29.0	1533115083	-13.957693
17744043	This has got to be the first process	This has got to be the first processor for which the software is available before a complete computer exists; RISC-V 19” rack mountable servers remain distant science fiction.	Annatar	9.401813	-5.6297307	comment	6.0	34.0	1534076581	-10.589497
17750128	The biggest benefit I've found to ru	The biggest benefit I've found to running a 1950X isn't something I would have expected, but which perhaps I should have. True, it's much faster than my old system for batch processing, but most of the time it's still idle. Even if it's running Chrome flat-out, as far as the 1950X is concerned, that's idle.Because the two NUMA nodes are ~entirely independent, it's capable of running two independent processes at full speed. In practice, that means lower latencies and less jitter, and it's been noticeable. Folklore would have it that single-thread performance is the most important aspect of desktop performance, but that isn't what I've observed....it's also useful when I, e.g, decide to run a Factorio server on my desktop.	Filligree	9.450945	-5.192503	comment	6.0	50.0	1534168976	7.9014707
17765455	Issues relating to a bug in Intel cp	Issues relating to a bug in Intel cpus	brynet	9.490644	-5.2887034	story	6.0	124.0	1534335719	7.846873
17778527	What processor parts will this be us	What processor parts will this be using?A major benefit of the Yubikey U2F parts is that they're almost indestructible. I've heard over and over again about how flimsy the Feitian parts are, and from people who have run over their Yubikeys with cars and still had them work. How resilient (in particular: waterproof) will these be?	tptacek	9.498069	-5.311027	comment	6.0	27.0	1534454618	7.61887
17782991	Is this the beginning of the end for	Is this the beginning of the end for x86?	lx3459683	9.811798	-5.474917	comment	6.0	56.0	1534515798	-7.7655654
17824628	Aside from my vic20 and c64 I’ve onl	Aside from my vic20 and c64 I’ve only ever owned intel CPUs, and those two may have been intel as well, I wouldn’t know. I’ve never made a decision to chose Intel based on benchmark, I’ve bought them because they’ve always been great for me.So it’ll be ironic when I buy an AMD processor when I upgrade for cyberpunk 2077, because of benchmarks. Not because AMD is faster, they may be but I wouldn’t know, no, it’ll be because intel are douches.I didn’t like how they handled their vulnerabilities, or how they still released chips with the errors long after it was discovered because they had production planned, and now they are pulling stuff like this?Heh.	eksemplar	9.292535	-5.1964803	comment	6.0	30.0	1534999204	7.7402625
17824652	As a side note: Some of the license 	As a side note: Some of the license changes also block Debian from updating their intel-microcode package[1].[1] https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=906158#14	beefhash	9.530784	-5.3540688	comment	6.0	25.0	1534999515	7.7073956
17833343	Intel microcode license updated to p	Intel microcode license updated to permit redistribution	rnhmjoj	9.51628	-5.3318834	story	6.0	184.0	1535095184	7.6770315
17848605	Solving Meltdown absolutely does not	Solving Meltdown absolutely does not require a new type of processor. Performing out-of-order executions of privileged instructions is something you can just not do, nobody except Intel is doing it right now in fact. Lots of Spectre variants likewise don't require entirely new processor varieties, such as the lazy floating point speculation vulnerability or the new L1 terminal fault vulnerabilities. The only one that possibly requires a new type of processor is the original Spectre, which is quite hard to completely stamp out all possibility of while retaining the concept of speculative execution.	furi	9.621615	-5.5693226	comment	6.0	50.0	1535328037	7.860034
21067291	I don't understand why people believ	"I don't understand why people believe that the ""year of the maker FPGA"" is ever going to happen. An FPGA is by its very nature a technology that many embedded engineers (let alone hobbyist maker types) will never take advantage of in earnest. I'd imagine that if you're developing hardware that requires an FPGA, odds are high that you don't need or want an Arduino bolt-on."	seabird	9.082558	-5.356151	comment	6.0	35.0	1569381625	8.399225
21129616	If you don't trust Intel, then don't	"If you don't trust Intel, then don't use Intel CPU's at all.   Using Intel CPU's and simultaneously saying, ""but we can't trust RDRAND because could be backdoored"" is completely insane.Intel hid an entire x86 core running minix --- with security holes --- and told no one.   Between the firmware code which runs in System Management Mode and in UEFI, which persists after the OS is booted and can take over the system and read and write arbitrary memory locations ---  if you fear a backdoor in the CPU, RDRAND is not the only place where an attacker can screw you over.   The bottom line is the entire CPU can not be audited.   So trust it.  Or don't trust it.   Use another CPU architecture.   Or go back to using pen and paper, and don't use any computers or cell phones at all.We have to trust th"	tytso	9.506034	-5.2163897	comment	6.0	26.0	1569958428	7.7095118
21142347	> What's are the arguments against v	> What's are the arguments against version control here (if any)?* I don't understand it* You're overcomplicating things* We're not using any of that free shit here* It doesn't say Microsoft or IBM* The last guy we hired that tried to use it was smarter than I was so anyone else who tries is a threat to my leadership. (because everyone knows you can only manage people who have a strict subset of your own knowledge.  If one of your peons dared learn something before you, that would be the end of your reign.)the list goes on...	reificator	8.822139	-6.3720975	comment	6.0	36.0	1570062608	-11.732612
21164275	V8: Workaround for Intel Gemini Lake	V8: Workaround for Intel Gemini Lake Processor Bug	tambre	9.348034	-5.21898	story	6.0	160.0	1570261426	7.821625
21241010	Hunting down Ken's PDP-7: video foot	Hunting down Ken's PDP-7: video footage found	bsdimp	9.828638	-5.4208603	story	6.0	38.0	1570981741	-7.4668207
21349404	SiFive U8-Series Core IP	SiFive U8-Series Core IP	ingve	9.383783	-5.6295104	story	6.0	96.0	1571952628	-10.608107
21369776	How would somebody implement this fo	How would somebody implement this for a team with versioning, source code view, and deployment?	dillonmckay	8.833275	-6.3875885	comment	6.0	18.0	1572185435	-11.698421
21387559	I've lightly advocated for a while t	I've lightly advocated for a while that emoji shouldn't be part of the Unicode standard at all. I'm sure there are things some advantages, I'm sure there are other considerations I'm not thinking of, but it just seems like a really bad idea to stuff the Unicode standard.I don't know the official name or who came up with it, but I use Slack's entry format exclusively in every application.:thumbsup: :pelipper_blushing: :angry_cat: :apple:If the application can detect that as an emoji and swap it out, fine. If it can't, I don't change my format. My preference would be if applications left emoji in that format, and just rendered them differently at display time.The advantage of having emoji just be a purely clientside rendering feature, and behind the scenes all fall back to normal text is:a) 	danShumway	9.887631	-6.252417	comment	6.0	28.0	1572359538	-13.933004
21387525	Linus Torvalds: 'I'm not a programme	Linus Torvalds: 'I'm not a programmer anymore'	CrankyBear	9.336389	-5.8763847	story	6.0	43.0	1572359361	-8.074703
21399035	> SiFive’s design goals for the U8-S	> SiFive’s design goals for the U8-Series are quite straightforward: Compared to an Arm Cortex-A72, the U8-Series aims to be comparable in performance, while offering 1.5x better power efficiency at the same time as using half the area.This is very a big statement. It's hard for me to think of how they do that, when 8th gen ARM cores are said to be blowing just anything else on size/performance ratio.Where does SiFive get such an expertise in size optimisation?	baybal2	9.410171	-5.5723248	comment	6.0	28.0	1572450674	-10.541269
21410856	I'm not really sure what group they'	I'm not really sure what group they're catering to here. Everyone who is at least 12 years old knows what those emoji mean. My guess is they must be doing this in order to help protect women from sexual harassment. What they're really doing here is trying to ban an entire way of thinking. That's just not going to happen.	warent	9.789965	-6.2614274	comment	6.0	24.0	1572540735	-13.964421
21432638	For years I've been thinking about b	For years I've been thinking about building a game involving 6502 programming.  Something along the lines of you're stranded on a spaceship, all the critical systems have failed, and you have a pile of 6502 processors.  You need to start by keeping yourself from freezing to death by building some code that keeps the environmental systems running, then you move into growing food, and ultimately into controlling the ships propulsion, communications, and navigation systems.  All with programming.Then I think that I'd be the only one that would want to play that, and shelve the idea.Then I see something about people being interested in 6502 stuff, and think that maybe I'm not so crazy...	unoti	9.585021	-5.3973527	comment	6.0	19.0	1572766259	-7.45008
21470612	This illustrates one of the truism's	This illustrates one of the truism's in semi-conductors which is that you need to hold an advantage for 18 months before you have enough momentum to actually move the needle. If I were AMD's marketing team I would start hammering on ECC memory in the desktop and on laptops. Anything with 16GB or more of main memory. Intel has held that as a Xeon differentiator for a long time and it adds something like 20% margin to the part. That AMD can push PCIe 4.0 and ECC at 'desktop' prices is pretty neat.	ChuckMcM	9.290364	-5.200256	comment	6.0	44.0	1573103651	7.997727
21497255	Hundreds of Google accounts suspende	Hundreds of Google accounts suspended for using emoji in live chat	rahuldottech	9.78322	-6.2671695	story	6.0	15.0	1573378327	-13.964001
21533880	Bastille: FreeBSD Jails Management	Bastille: FreeBSD Jails Management	rodrigo975	9.737873	-6.4081283	story	6.0	42.0	1573721389	10.482231
21534199	Exploiting Intel’s Management Engine	Exploiting Intel’s Management Engine	DyslexicAtheist	9.500227	-5.2268777	story	6.0	209.0	1573725226	7.785679
21545969	> The ME does have a legitimate func	> The ME does have a legitimate function, but it does so much more now, as it takes care of the hardware initialization, the main CPU boot up, control of the clock registers, DRM management for Audio/Video, software based TPM and more.In other words, the ME is to Intel boards as Apple’s T2 chip is to their recent notebooks: an SoC that takes on the real role of being the “system processor”, turning the [rest of the] socketed CPU into effectively an “application processor.”In fact, given that it’s so self-sufficient, it’s interesting that Intel choose to ship the ME as an “IP core” of the CPU itself, rather than making it part of the off-die Intel PCH chipset that they supply to mobo vendors. Is it just to provide the ME with low-latency access to CPU components like ALUs (for TPM encryptio	derefr	9.484269	-5.2105207	comment	6.0	28.0	1573834172	7.709523
21613714	The RISC-V ISA is pretty awful for h	The RISC-V ISA is pretty awful for high-end designs. No competitive servers can be built with it.Plenty of people seem to have been caught up in the hype of RISC-V taking over the world and doing everything, but that's never going to happen. The ISA is heavily optimized towards making very low-end devices very cheap. Like, don't think cellphone chips, think appliances. This is not a bad call, as it's the area where greenfield designs with cost advantage have the best chance to get market share. However, there is no path of extending the ISA that will make it competitive with ARM or x86 on high-end devices. The only way to do that is to design RISC-VI, that abandons most of the things that RISC-V what it is.	Tuna-Fish	9.422257	-5.6208324	comment	6.0	37.0	1574510974	-10.530476
21623644	Wave Computing Closes Its MIPS Open 	Wave Computing Closes Its MIPS Open Initiative with Immediate Effect	johlo	9.476174	-5.5317125	story	6.0	32.0	1574631735	9.855864
21650855	Linus might have a valid point, but 	"Linus might have a valid point, but jesus christ I can't stand the style of his videos in the slightest. We don't need this ""drama"" style of YT nonsense with tech videos, thank you."	gambiting	9.288866	-5.848935	comment	6.0	22.0	1574881273	4.1804895
21679714	 > Keep it short. 3-7 minutes should	 > Keep it short. 3-7 minutes should be max.Who has a 3-7m CI build here?	cottonseed	9.349599	-6.3459687	comment	6.0	30.0	1575259187	6.1184945
21690223	I still think unicode should not hav	I still think unicode should not have added emojis. The big guys are adding animated emojis now, and that's clearly out of scope for character sets. If they continue down that path unicode will eventually become SVG with animation. IMHO they should have stopped short of emojis.	phkahler	9.870429	-6.259767	comment	6.0	37.0	1575351527	-13.955617
21733064	That's some seriously scummy stuff f	That's some seriously scummy stuff from Intel.	RL_Quine	9.389487	-5.2003784	comment	6.0	102.0	1575758400	7.6934323
39083625	> One day we were chatting in a grou	> One day we were chatting in a group meeting and he said he was working on a TPC-C benchmark that was spending too much time in the SCSI disk driver, so he wrote a 10-line awk script running against kernel memory to look at the SPARC machine code execution path and find which branches were being predicted wrong, then wrote another awk script to flip the branch prediction bits in memory and it showed a significant speedup.SPARC exposed read and write access to branch prediction!? That's... fascinating. Here I thought branch prediction was always a completely opaque thing that the CPU did internally and maybe if you were lucky it might let the program be able to know that it was happening after the fact. Hm... I wonder if it's easier to perform Spectre type attacks if you can just ask the C	yjftsjthsd-h	9.766484	-5.780789	comment	6.0	23.0	1705875220	-7.118522
39103147	There are a number of reasons for th	There are a number of reasons for the Itanium's poor performance, and it's the combination of these various factors that did it in.  I wasn't present back in the Itanium's heyday, but this is what I gathered.As a quick recap, superscalar processors have multiple execution units, each of which can execute one instruction each cycle.  So if you have three execution units, your CPU can execute up to three instructions every cycle.  The conventional way to make use of the power of more than one execution unit is to have an out-of-order design, where a complicated mechanism (Tomasulo algorithm) decodes multiple instructions in parallel, tracks their dependencies and dispatches them onto execution units as they can be executed.  Dependencies are resolved by having a large physical register file,	clausecker	9.610048	-5.677088	comment	6.0	29.0	1706017176	-7.5921283
39136199	> o7I never came across this emotico	> o7I never came across this emoticon, but with what you wrote, its meaning became clear immediately. It's perfect.	qwertox	9.823231	-6.257358	comment	6.0	39.0	1706221238	-13.9336815
39159210	Yes, curse these low power cheap sys	Yes, curse these low power cheap system on a chips! All embedded software should be run on x86! Routers on x86, phones on x86, smart thermostats on x86. Just buy them on eBay am I right.	Levitating	9.672275	-5.225373	comment	6.0	20.0	1706385516	-7.761462
39244478	This topic comes up a bunch still. S	This topic comes up a bunch still. Someone please correct me, but as I understand it anyone using new chips that use Intel ME (or AMD's equivalent) have a gaping hole in their security that no OS can patch.I know puri.sm[0] takes some steps to try to plug the hole, but haven't read up to see if it's effective or no.[0] https://puri.sm/learn/intel-me/	loughnane	9.471846	-5.244616	comment	6.0	31.0	1706992568	7.7933106
39289388	I have found that teams who allow la	I have found that teams who allow larger PR sizes without complaining about it can get a lot done a lot faster. Which is to say having 50 line PRs are not ubiquitously ideal, but are somewhere on the spectrum of acceptable but come with definitive tradeoffs. Reviewing and merging 10x60 line PRs is, in my experience, more time intensive than reviewing one 600 line PR.Most of the tests for and new functionality alone in any of our PRs well exceed 50 lines. Indeed we have 2-3x more test code than actual code. So should we be writing less tests? Merging the code first and later the tests? Merging the broken, codeless tests first and then the code?It’s all ridiculous. Just make PRs that represent unit change, whatever the means to you. The unit functionality is independent of lines of code. Som	appplication	8.793282	-6.3549356	comment	6.0	46.0	1707318195	2.1007628
39344125	I wish people would stop treating FP	"I wish people would stop treating FPGAs as the Second Coming of the Lord or whatever. It is really not.It's emulation, plain and simple. Not bettero or worse than software emulators. It usually lags behind the pure software emulators because there are fewer devs and because emulating stuff in hardware is harder than emulating stuff in software.Just because it's in hardware doesn't mean that it is ""better"" or ""more accurate""."	dark-star	9.069289	-5.348031	comment	6.0	40.0	1707741464	8.340343
12562856	Intel’s Xpoint is broken	Intel’s Xpoint is broken	AnbeSivam	9.36355	-5.2062445	story	6.0	47.0	1474614400	7.7602057
12564338	It makes me a bit of a luddite (and 	It makes me a bit of a luddite (and a heck of a curmudgeon), but it always makes me a little sad when good ol' ASCII smileys are rendered all fancy-like.  There's something charming and hackerish about showing it as a 7-bit glyph.I think the Internet fundamentally changed when that happened.Tangentially-related, I can't fathom why someone would post YouTube videos of `telnet towel.blinkenlights.nl`.	jgw	9.842969	-6.2330337	comment	6.0	46.0	1474636851	-13.955231
12577515	A 20s turnover is not even that slow	A 20s turnover is not even that slow. Debugging undecidable timing issues in an FPGA may have turnover counted in hours given how slow HW synthesizers are.If the need of better tooling is clear, the OP does not mention one important point: faster machines have created some sort of fast food approach to programming, where programs are built on the go with the help of the appropriate tools (some sort of computer-aided programming).Back in the 60s, when programs where being shipped by snail mail to some data center somewhere in the country to be entered by a random assistant and scheduled in a long pool of jobs, turnover was counted in days. Yet, we walked on the moon.So beyond better tooling, maybe a key to maintaining that attention span is check is to simply spend more time on the design b	eeks	9.151665	-5.358449	comment	6.0	19.0	1474838398	8.323067
12679014	A couple things HN users might be ex	"A couple things HN users might be excited about:* Docker via ZFS and jails (...running Linux x84-64 
binaries): https://wiki.freebsd.org/Docker--- (See also, https://github.com/3ofcoins/jetpack )* Add support for trackpads found in Apple MacBook products: https://svnweb.freebsd.org/base?view=revision&revision=26126...* CloudABI executable support: https://nuxi.nl/cloudabi/freebsd/This is an awesome release."	nickysielicki	9.810479	-6.090952	comment	6.0	65.0	1476125087	-7.9870877
12765403	I wish they would work out how to ru	I wish they would work out how to run the chisel toolchain on those fpgas. From what I understand, you have to program in verilog currently which is a huge pain.Please enable chisel and put it in your Azure cloud. It will be a great platform for custom software.	webaholic	9.106659	-5.4317226	comment	6.0	38.0	1477088289	8.537729
12825666	Quick question -- what's so good abo	Quick question -- what's so good about ARM specifically? Aren't there other minimal architectures, maybe even one with lower/no licensing costs?	oDot	9.588971	-5.2064176	comment	6.0	18.0	1477767499	-7.731522
12847866	Initial patches to add an MC layer f	Initial patches to add an MC layer for RISC-V	cokernel_hacker	9.381986	-5.697448	story	6.0	31.0	1478020145	-10.58784
12865233	"Verilog seems ""hard"" because people "	"Verilog seems ""hard"" because people often use it in a similar fashion to a programming language, and in most cases that does not make any sense. The proper way to use it is to design the hardware, then code it up using verilog (which is trivial compared to the actual design). 
In fact in terms of time spent on design, the actual coding part does not take much time at all.
In fact, this very article uses a motivating example that does not make any sense."	tonmoy	9.130667	-5.4790425	comment	6.0	61.0	1478189556	8.551512
12921655	That IA-64 one is really puzzling, a	That IA-64 one is really puzzling, anyone know what the heck is happening?	hatsunearu	9.652936	-5.368931	comment	6.0	45.0	1478794585	-7.763676
12950807	You're confusing being a jerk with c	You're confusing being a jerk with communication styles and cultural differences. You'd never hire anyone from the American inner city, from parts of Scotland and Ireland, parts of New York, and similar. Some very nice people talk loudly, swear, and use politically incorrect language.This is part of the reason some URMs can't get ahead in US corporate culture.Yes, Linus does swear a lot, and uses aggressive language. That's part of his style, his culture, and how he communicates.No, he is not a jerk. The reason Linux beat the BSDs is because Linus is a very nice guy. He created a community which, despite the harsh language, was very welcoming, and willing to mentor new people. The BSDs created elitist, closed-off communities, which were unwelcoming to newcomers.If you made a mistake, the B	ldfdr	9.387401	-5.8444576	comment	6.0	82.0	1479140581	4.3098044
12961361	I don't understand why they didn't u	I don't understand why they didn't use a Xeon e3-1545m, which is a 35-45 TDP part and has adequate graphics for the intended market.If it doesn't support ECC, there's no benefit vs the Intel Skull Canyon.I am in the market for a new dev machine, and I want Xeon and ECC. Just not enough good options currently (unless you build from scratch).	intrasight	9.386924	-5.350147	comment	6.0	33.0	1479238211	8.079608
13015123	I'm reminded of this:  https://youtu	I'm reminded of this:  https://youtu.be/pAEAbqrE5ZwDoes it represent a lot of work by skilled technicians?  Undoubtedly.  Is it interesting in it's own right?  Frankly I think not.The surrounding question of the socialization of the internet is interesting, to be sure, but at the end of the day these are just animated emojis...	omginternets	9.815184	-6.236705	comment	6.0	33.0	1479831752	-13.950411
13045543	Seems to me Intel is placing their b	Seems to me Intel is placing their bet on the compiler doing the lion's share of the work here -- and where hand optimization is needed, another bet that having a consistent instruction set across their big Xeon cores and these MIC devices will make things easier for developers?	gonewest	9.578225	-5.4471073	comment	6.0	19.0	1480190197	-7.4025507
13123026	I saw the page via wayback machine s	I saw the page via wayback machine since the site was down at the time. Seems like a cool academic project. I've been getting into FPGAs personally, with this exact application in mind.I've been really stymied by how to process packets in hardware. The obvious approach seems to be to run an RTOS or even full-fledged linux if your FPGA has hard IP cores on it. But is there a better way? How much performance would one lose? I'm also a bit confused about how to communicate on PCI-Express (I'm a software guy ... so learning about DMA). I have seen soft IP for TCP/IP stacks but it seems too crazy. I'm doing this as a hobby education project btw. It has been great fun so far! Wish there were meetups on this topic.	trapperkeeper79	9.15533	-5.380661	comment	6.0	30.0	1481123370	8.143569
13123995	Spoiler alert, the leak is in libxml	Spoiler alert, the leak is in libxml2, not Python code.	tantalor	8.74581	-6.0269794	comment	6.0	26.0	1481129945	-4.5380263
13154299	While it's nice finally having acces	While it's nice finally having access to FPGA's on the cloud, it's still a shame that there isn't much going on with Open source development on FPGA's, on either the toolset or libraries/modules. Though this is largely due to manufacturer hostility. Maybe wider access and adoption might finally do something about this situation.	cannonpr	9.0800495	-5.3564253	comment	6.0	22.0	1481500178	8.382642
13153893	What It Takes to Build True FPGA as 	What It Takes to Build True FPGA as a Service	binaryanomaly	9.071028	-5.361058	story	6.0	95.0	1481496611	-10.764744
13183623	Xen Advisory – x86 CMPXCHG8B emulati	Xen Advisory – x86 CMPXCHG8B emulation fails to ignore operand size override	based2	9.851612	-5.5247345	story	6.0	30.0	1481797541	9.471163
13219131	> Get rid of register windowsThe ESP	> Get rid of register windowsThe ESP32 is a very new chip and has them too (xtensa arch). Why are they bad?> RISC was sort of a good idea in the 80sThis is where people usually come in saying that x86 is internally RISC, and that the ISA helps with code density which is otherwise a problem for RISC. Is there any truth to that?	MrBuddyCasino	9.476024	-5.590285	comment	6.0	31.0	1482235773	-10.492373
13243367	“Emoji composer is now at 100% on Tw	“Emoji composer is now at 100% on Twitter”	logic	9.79669	-6.261579	story	6.0	59.0	1482476823	-13.947417
13325873	My first real job was programming a 	"My first real job was programming a Commodore PET for a merchant - in BASIC. When I needed searches to be faster I wrote a routine in 6502 assembler. Unfortunately I didn't have an assembler, so I hand-assembled my code using the instruction code chart from the back of a book. My ""loader"" was a chunk of BASIC code POKEing numbers into memory.Can confirm that the 6502 instruction set is pleasantly simple. On the other hand, a similar experience can be had on some modern CPUs as well. I found the Atmel AVR's instruction set (as found in the Arduino and Raspberry Pi) to be similarly approachable."	Elrac	9.641534	-5.4290543	comment	6.0	24.0	1483608439	-7.428986
13336475	As someone still studying and not in	As someone still studying and not in the workforce yet, are there really teams out there that don't use version control?	astinit	8.877533	-6.364588	comment	6.0	24.0	1483713621	-11.678973
13381150	RISC-V really seems to be gaining mo	RISC-V really seems to be gaining momentum with 2 crowdfunded silicon implementations currently seeking funding:https://www.crowdsupply.com/onchip/open-vhttps://www.crowdsupply.com/sifive/hifive1Looking forward to a future where CPUs that are open hardware, from the transistor up are generally available.	xja	9.374807	-5.637423	comment	6.0	44.0	1484215748	-10.569544
13381562	I have some reservations towards Ope	I have some reservations towards Open-V, I would be careful before backing it:https://www.reddit.com/r/linux/comments/5ekuck/openv_the_wor...https://www.reddit.com/r/cpudesign/comments/5eep88/the_world...	jordskott	9.724431	-5.424878	comment	6.0	19.0	1484222202	-10.439923
13381070	RISC-V port submitted for inclusion 	RISC-V port submitted for inclusion in GCC	BuuQu9hu	9.430843	-5.729282	story	6.0	216.0	1484214487	-10.597658
13427726	Given the momentum of Coreboot and L	"Given the momentum of Coreboot and Libreboot for having completely ""free and open"" architecture, how many years away are we from having commercial laptops available using RISC-V processors?"	AdmiralAsshat	9.397314	-5.5980706	comment	6.0	50.0	1484757858	-10.583826
13511086	Ubuntu 16.04: “Out of memory” errors	Ubuntu 16.04: “Out of memory” errors after upgrade to 4.4.0-59	ivank	9.922456	-5.232053	story	6.0	120.0	1485653319	8.114256
13515546	Free Range VHDL – VHDL programming b	Free Range VHDL – VHDL programming book available for free	EvgeniyZh	9.1247835	-5.504128	story	6.0	101.0	1485712844	8.615747
13517332	Please don't use VHDL. Use verilog, 	Please don't use VHDL. Use verilog, as a great cycle accurate FOSS simulator/compiler exists for it (Verilator).	zump	9.109382	-5.494742	comment	6.0	20.0	1485731022	8.555052
13600937	BSDploy – FreeBSD jail provisioning	BSDploy – FreeBSD jail provisioning	HugoDaniel	9.753906	-6.3792787	story	6.0	136.0	1486580152	10.4867525
27494640	Intel in talks to acquire RISC-V fir	Intel in talks to acquire RISC-V firm SiFive for $2B	elorant	9.37417	-5.643556	story	6.0	40.0	1623606838	-10.55324
27559916	`mitigations=off` in your GRUB_CMDLI	`mitigations=off` in your GRUB_CMDLINE_LINUX_DEFAULT to disable Spectre/Meltdown mitigations, in case anyone is wondering. This page has a pretty decent write-up on it: https://leochavez.org/index.php/2020/11/16/disabling-intel-a....	neilsimp1	9.595233	-5.484459	comment	6.0	138.0	1624105988	7.818773
27560100	I suspect our heavy reliance on spec	I suspect our heavy reliance on speculative execution is just a local optimum, and we can grow out of it by providing the processor more information about the data flow, making memory access more explicitly asynchronous, and simplifying the hot paths.I like the way the mill approaches these architectural problems.	infogulch	9.69341	-5.6404543	comment	6.0	25.0	1624107730	-6.7125463
27575174	The Ice-V: a simple, compact RISC-V 	The Ice-V: a simple, compact RISC-V RV32I implementation in Silice	kqr2	9.400742	-5.666317	story	6.0	75.0	1624236354	-10.56381
27632352	I think the email was completely eff	"I think the email was completely effective in denouncing a behavior. Telling people to ""fuck off"" isn't required (nor desired, in my opinion).Linux health happened *despite* Linus' manners, not because of them."	otikik	9.32848	-5.847728	comment	6.0	34.0	1624636491	4.1804657
27652985	The Tanenbaum – Torvalds Debate	The Tanenbaum – Torvalds Debate	belter	9.297646	-5.876538	story	6.0	13.0	1624811781	2.0929217
27729559	> The push for crypto without ecc ra	> The push for crypto without ecc ram is a nonstop horror showThat's a bit hyperbolic.First, ECC doesn't protect the full data chain, you can have a bitflip in a hardware flip flop (or latch open a gate that drains a line, etc...) before the value reaches the memory.  Logic is known to glitch too.Second: ECC is mostly designed to protect long term storage in DRAM.  Recognize that a cert like this is a very short-term value, it's computed and then transmitted.  The failure happened fast, before copies of the correct value were made.  That again argues to a failure location other than a DRAM cell.But mostly... this isn't the end of the world.  This is a failed cert, which is a failure that can be reasonably easily handled by manual intervention.  There have been many other mistaken certs dis	ajross	9.4946995	-5.5404305	comment	6.0	66.0	1625406254	8.240858
27797554	I do wish apps (looking at you Slack	I do wish apps (looking at you Slack and Teams) would stop converting my emoticons into emojis. I want :) not .edit: HackerNews strips render emoji. It should be this: https://emojipedia.org/smiling-face-with-smiling-eyes/	vangelis	9.79877	-6.2655597	comment	6.0	31.0	1625964058	-13.956503
27829654	Why doesn't anyone ever bother to me	Why doesn't anyone ever bother to mention that the M1 is a RISC CPU when discussing that it can do more IPS than x86?There are 1024 possible Armv8 instructions [1] as opposed to 1,503 x86 instructions [2] and 3,684 x86-64 instructions [3]. There are things x86 and x86-64 can do in a single instruction that would take dozens of instructions to accomplish on Arm.[1] https://www.csie.ntu.edu.tw/~cyy/courses/assembly/10fall/lec...[2] https://fgiesen.wordpress.com/2016/08/25/how-many-x86-instru...[3] https://www.csie.ntu.edu.tw/~cyy/courses/assembly/10fall/lec...	zelon88	9.622889	-5.5753856	comment	6.0	23.0	1626236091	-7.800666
27869214	It is strange to me that the RISC-V 	It is strange to me that the RISC-V leapfrogged past the Pi port (per https://www.haiku-os.org/guides/building/port_status the ARM, including the Pi, exists but isn't very useful yet); I wonder why it made progress so fast even with poor hardware availability.	yjftsjthsd-h	9.392642	-5.6497188	comment	6.0	21.0	1626559719	-10.555984
27918744	RVVM – RISC-V Virtual Machine	RVVM – RISC-V Virtual Machine	rvenjoyer	9.423748	-5.709742	story	6.0	129.0	1626961456	-10.584215
27928939	MicroLEDs Moving from Lab to Fab	MicroLEDs Moving from Lab to Fab	giuliomagnifico	9.67991	-5.2820764	story	6.0	91.0	1627033791	7.203848
12098962	How do they deal with the intel mana	How do they deal with the intel management engine in all intel chips? https://libreboot.org/faq/	brian_herman	9.508015	-5.193151	comment	6.0	41.0	1468557461	7.761456
12105913	J-core Open Processor	J-core Open Processor	CarolineW	9.543363	-5.2866597	story	6.0	177.0	1468665870	-7.5591216
12178100	This is the sort of thing that shows	"This is the sort of thing that shows why the whole ""pure RISC philosophy"" of implementing only the simplest instructions is ultimately a pretty dead-end in processor design. CISC-style dedicated instructions and hardware which utilises them will always be more efficient than a pure software implementation using just ""simple RISC instructions"", because hardware can easily express specialised computations like the extreme parallelism of algorithms such as SHA while software implementations essentially rely on the instruction-scheduling mechanisms to arrange potentially hundreds or even thousands of instructions in an optimal order.In addition, when there is dedicated hardware, it is also significantly easier to add a SHA instruction than attempt to recognise sequences of many regular instruc"	userbinator	9.502254	-5.730223	comment	6.0	21.0	1469675471	-10.540823
12354067	Probably not.  A hardware descriptio	Probably not.  A hardware description language (HDL) is used to program the behavior of the FPGA (that's the FP in FPGA).  The HDL is usually stored in flash or EEPROM.  As you mention, flash supports a finite number of writes; I'm not sure about EEPROM behavior.  The bottom line is that the typical FPGA can only be programmed a fixed number of times (e.g., I think Altera is ~100).  Some FPGAs can only be programmed once.	MaDeuce	9.090636	-5.475673	comment	6.0	22.0	1472062579	8.590338
12362034	Machine Learning for Emoji Trends	Machine Learning for Emoji Trends	mjs	9.798269	-6.2661047	story	6.0	46.0	1472155430	-13.963432
35429286	Can someone explain what all the fus	Can someone explain what all the fuss around RISC-V is about?	NeutralForceUsr	9.386413	-5.714228	comment	6.0	56.0	1680547742	-10.605524
35443240	It still boggles my mind that proces	It still boggles my mind that processors in the 1970s already had microcode— obviously it was vastly simpler and not doing the crazy branch prediction, speculative execution, and operation reordering that modern processors do, but it's still amazing to me that this architecture was there at all.	mikepurvis	9.585105	-5.385027	comment	6.0	23.0	1680629848	7.694249
28141917	Ok, but some ARM CPUs are very cheap	Ok, but some ARM CPUs are very cheap, so you could run part of your software on a small hardware box with tamper-proofing.The compiler could move the outer loops to the external CPU, and leave the inner loops to the main CPU which is faster. Of course you would have to think about how you move data around, but in principle why wouldn't this work?	amelius	9.740004	-5.3894787	comment	6.0	23.0	1628689811	-7.6613975
28143245	I cannot find any source files for t	I cannot find any source files for the FPGA code in the repository (no .v .vhd .vhdl files and I can't see anything by looking around manually). The FPGA directory [1] contains some binaries and some documents relating to commercial code from a Swiss firm [2].I've seen plenty of projects described as open source when the firmware is open source and the hardware is closed but this is the first time I've seen one where the schematics and board layout are open but the firmware is closed. Note that the hardware itself is quite simple, the smart stuff happens in three modules: GNSS receiver, precision clock and FPGA. To me, the contents of the FPGA source code are the only interesting part of this project. Additionally, you won't be able to meaningfully modify or reuse this project without edit	daddylonglegs	9.092085	-5.353857	comment	6.0	27.0	1628695975	8.354179
28145360	I actually don't have a problem with	I actually don't have a problem with this, but I do have a problem with press releases that are sprayed with emojis. It's incredibly unprofessional and gives a real amateur flavor to the whole thing, which for security software is really offputting.	LeoPanthera	9.79335	-6.2607374	comment	6.0	22.0	1628704687	-13.965357
28153523	Fault Injection Attacks Against AMD'	Fault Injection Attacks Against AMD's Secure Encrypted Virtualization	sevest	9.509955	-5.2713056	story	6.0	167.0	1628756146	7.9013987
28182315	The moment you use emojis in your ar	The moment you use emojis in your article, I am instantly turned off and will stop reading.	systemvoltage	9.777534	-6.273962	comment	6.0	31.0	1628961484	-13.958264
28199255	What About the Afghanistan Flag Emoj	What About the Afghanistan Flag Emoji?	robin_reala	9.919711	-6.2488	story	6.0	58.0	1629127930	-13.929058
28224866	All these features infested with emo	All these features infested with emojis and negative space makes SourceHut such a refreshing take at UX/UI that is utilitarian, straightforward, ultra-functional and zero-tolerance for trendy-designer-bullshit. Exactly what engineering tools should be like.  Unfortunately, I am in the minority here and most people find the UX/UI of Sourcehut ancient, unadorned and bland - IMO that’s a feature, not a bug. Check it out: https://sourcehut.org/	systemvoltage	9.442609	-6.2295084	comment	6.0	24.0	1629309696	-13.962996
28399735	What would folks recommend for a beg	What would folks recommend for a beginner (electronics and coding experience but new to fpga)? Prefer open source toolchain if possible. Not too expensive. Starter tutorials would be nice.	analog31	9.047345	-5.380998	comment	6.0	22.0	1630635447	8.410078
28479710	Will RISCV have the same mess that A	Will RISCV have the same mess that ARM ecosystem has of not standardising or having a single BIOS or similar system... such that you have to compile a custom image for every board?One thing PC has going for it, is that you can install one Linux distro into any PC board. This is not the same for ARM boards.	mofosyne	9.43458	-5.616513	comment	6.0	34.0	1631270215	-10.530076
28524727	Secure env vars of all public travis	Secure env vars of all public travisci repositories were injected into PR builds	eatonphil	9.059391	-6.3918157	story	6.0	129.0	1631627266	-9.351224
28583561	128-bit RISC-V assembler	128-bit RISC-V assembler	ingve	9.4976845	-5.772772	story	6.0	30.0	1632051837	-10.46564
28644050	Ask HN: Whose using web based develo	Ask HN: Whose using web based development environments?	emeraldd	8.752449	-6.1864104	story	6.0	7.0	1632498593	-11.471031
22316641	I am craving one of these for my sup	I am craving one of these for my superoptimizer. The level of task parallelism I have is north of 100M independent jobs; my last run took a single-core machine 20 days. It's pretty rare to have a workload like this but as more machines ship with >16 cores, I think more developers will look at the order-of-magnitude improvements of parallelizing their tasks where possible.	glangdale	9.868993	-5.6897	comment	6.0	22.0	1581589665	8.301519
22383323	Can anyone suggest a different CPU l	Can anyone suggest a different CPU load-testing tool other than prime95, that might catch things prime95 wouldn't?I have a machine running a 1950X and I get random ffmpeg segfaults anywhere from six to eight hours in to an encoding session with all 16 cores fully loaded, but the machine is prime95 stable for a week+, so I suspect it's an AVX/AVX2 issue.	ComputerGuru	9.422755	-5.2069535	comment	6.0	28.0	1582295338	7.7964387
22410562	> Even today's modern 64-bit CPUs be	> Even today's modern 64-bit CPUs begin execution in 16-bit mode. In UEFI, this is called the SEC phase.Is that true even for the T2 Macs and such?	Razengan	9.862522	-5.3193245	comment	6.0	21.0	1582599539	-7.9678555
22439021	Highlights from FPGA 2020	Highlights from FPGA 2020	matt_d	9.0704155	-5.352496	story	6.0	93.0	1582845553	8.261943
22450861	AMD Threadripper 3990X Scores Anothe	AMD Threadripper 3990X Scores Another Win: We Test New SPECWorkstation 3 Update	ItsTotallyOn	9.305881	-5.1955547	story	6.0	67.0	1582988442	7.9151826
22466332	> Ever wondered why black box, after	> Ever wondered why black box, aftermarket engine management systems can cost thousands of dollars?There’s actually a pretty good reason.  I can’t imagine starting a new engine management project in 2020 without using an FPGA to interface with engine positioning sensors and outputs.  Modern engines tend to be way too complicated to coordinate without paying close attention to your modeling of where all the fast moving mechanical bits are currently.It’s cool they released this as open-source but the tech would have been novel circa 1992.	asguy	9.091003	-5.3584847	comment	6.0	33.0	1583169141	8.36896
22514099	Take a Way: Exploring the Security I	Take a Way: Exploring the Security Implications of AMD’s Cache Way Predictors [pdf]	blasdel	9.406993	-5.361486	story	6.0	63.0	1583615533	7.8958054
22552406	Seems like this is based on Google's	"Seems like this is based on Google's own internal code search tooling, something most engineers at Google rely on for every day code-level work. 
I personally can't even begin to imagine how I'd navigate the gigantic codebase without it.(I work at Google)"	_pxkn	8.762781	-6.0364575	comment	6.0	32.0	1583974286	-11.292579
22570049	As a former Jaguar developer, I'm ge	As a former Jaguar developer, I'm getting PTSD just looking at the diagram with the four different CPUs, all on the same memory bus in constant contention, all with their own unique machine instruction set.	drcode	9.586985	-5.3549747	comment	6.0	34.0	1584126765	8.016449
22615158	Marvell Cranks Up Cores and Clocks w	Marvell Cranks Up Cores and Clocks with “Triton” ThunderX3	rbanffy	9.440116	-5.210585	story	6.0	65.0	1584527323	7.8177843
22627099	"I'm wondering why they need ""dual 20"	"I'm wondering why they need ""dual 20 core processors, 786GB of memory"" to serve FTP?"	gregoriol	9.596081	-5.255211	comment	6.0	25.0	1584623449	8.038483
22685528	I think one great way to do this is 	I think one great way to do this is to get a Commodore 64 emulator (or Atari 2600 etc) and start writing and learning 6502 assy. Arguably its one of the last instruction sets that was designed with humans writing code in assembly (and not in some higher level language) making it excellent learning language. You can readily run your code in emulators and for not too much $$$ you can pick a real hardware from EBay to really run it on HW.And once You think you’ve run hw to its limits there are plentiful demos and examples around to blow your mind watching what people have been able to do with these machines (often in obscure ways).	rixrax	9.64885	-5.403338	comment	6.0	44.0	1585150371	-7.3335104
22738884	Isn't 8080 used almost everywhere ?	Isn't 8080 used almost everywhere ?	codegladiator	9.599368	-5.2875504	comment	6.0	19.0	1585670614	-7.4990106
22770103	RISC OS and NetBSD running on the sa	RISC OS and NetBSD running on the same SoC	fanf2	9.5075245	-5.664736	story	6.0	67.0	1585927271	-10.490977
22798624	Synthesizing Optimal 8051 Code	Synthesizing Optimal 8051 Code	zdw	9.814014	-5.70928	story	6.0	90.0	1586213128	-7.4799337
22799817	Write your own Virtual CPU in C++ (2	Write your own Virtual CPU in C++ (2014)	andreygrehov	9.710811	-5.4744353	story	6.0	156.0	1586226177	-7.399004
22845518	V0LTpwn: Attacking x86 Processor Int	V0LTpwn: Attacking x86 Processor Integrity from Software	gandalfgeek	9.93226	-5.4616	story	6.0	102.0	1586655990	-7.435775
22848199	As a hardware designer (well, mostly	As a hardware designer (well, mostly a hardware verification engineer), I feel that this kind of comment is a pure misconception from software people that gets echoed time after time in HN.I generally see a lot of more effort and good quality tools in hardware verification than in software validation. The hardware design and verification industry is not really 30 years behind the curve compared to software development.Hardware and software are two very different problems with their own set of constraints. It's actually more often that you see software barely tested being deployed in the wild to millions of users rather than hardware. Hardware bugs tend to get more attention because you can't really deploy a patch to fix the issue.	sweden	9.832334	-5.1891413	comment	6.0	44.0	1586699107	-5.0593677
22870905	Xnu-QEMU-Arm64: iOS on QEMU	Xnu-QEMU-Arm64: iOS on QEMU	mmastrac	9.926528	-5.403165	story	6.0	190.0	1586895335	-8.275873
23004061	Building a WireGuard jail with FreeB	Building a WireGuard jail with FreeBSD's standard tools	rodrigo975	9.765793	-6.3878217	story	6.0	157.0	1588055206	10.239601
23147426	New – M6g EC2 Instances, Powered by 	New – M6g EC2 Instances, Powered by AWS Graviton2	caution	9.527413	-5.207508	story	6.0	74.0	1589233246	-8.329797
23186113	I have a friend who uses the sad emo	I have a friend who uses the sad emoji when I say I’m not feeling good. It kind of makes me feel like I’m making her feel sad by telling her. It would be nice if there was emoji of two people embracing or something.	TaylorAlexander	9.78629	-6.2592497	comment	6.0	22.0	1589493685	-13.957009
23201728	Unikernels are typically statically 	Unikernels are typically statically linked. Using copyleft code means the whole resulting binary is subject to copyleft.Free software is great, but not everyone is in the position where they can release all of their code all the time.For a unikernel to be viable it can't have copyleft code in it.	perbu	9.91883	-6.2357574	comment	6.0	38.0	1589619650	-12.372017
23256025	I thought this would be more about h	I thought this would be more about how emojis have invaded products.I recognise their communication value but they are aesthetic disasters (colour, dated cartoon style, cacophony) and they are real lowest common denominator expressions - often the equivalent of a fart noise or a “+1”. To support emoji you hand over a huge slice of product aesthetic and expressivity to something which in all essentials, is very childish.I looked at reddit recently and all the emoji awards that can even apply background animations like flames gave me the strong impression that “this is not for adults”. For something smaller that might be a fine choice but reddit’s opportunity seems to be much larger as the pre-eminent threaded discussion site across all demographics and if anything I suspect longer form disc	duncanawoods	9.787512	-6.2603664	comment	6.0	33.0	1590049284	-13.9609
23271649	Avantek's Arm Workstation: Ampere EM	Avantek's Arm Workstation: Ampere EMAG 8180 32-Core Arm64 Review	rbanffy	9.619286	-5.238128	story	6.0	73.0	1590153210	-7.754011
23272910	I support CI for my team's Unity bui	I support CI for my team's Unity builds. I don't know much about the engine itself, but I can tell you that the tooling for automating Unity builds really sucks.I had a long list of reasons why, but my impulse blocker cut me out. Oh well. Here's a much smaller list:- You have to jump through many hoops to run Unity in headless mode- I cannot separate out build processes into discrete stages- Linux version is behind. Windows is slow. Macs require you to use specialized cloud (such as MacStadium)- License server is unreliable. It always goes down with a 500 error, every day for most of the evening (California time). That means I cannot easily elastically scale build servers.- WebGL target means running emscripten, which means running a compiler in Python. It is slow. We sped it up by using a	hosh	9.270722	-6.3915596	comment	6.0	22.0	1590160140	6.7464743
23282244	The rumor on the street is that Zen 	"The rumor on the street is that Zen 3 is a major upgrade with huge IPC improvements.If that's true, Intel has basically nothing. All they've got left at this point is ""I want the best gaming performance and literally nothing else matters"". AMD may just win that crown too.It's never been more exciting to be an enthusiast, and Intel was asleep for a long time. It's about time someone woke the sleepy giant.Weren't we all sick of Intel churning out 10% incremental improvements every year on an entirely new socket every time? They were phoning it in for a long time."	0xy	9.260949	-5.1990137	comment	6.0	55.0	1590235551	7.867432
23334619	For folks considering running 64-bit	For folks considering running 64-bit on the pi - I don’t think you need 64-bit userland. I’ve been running a 64-bit kernel on my pi with 32-bit userland perfectly fine. The few things that actually need 64-bit (I’m looking at you mongo) run in 64-bit mode via docker. That said, I’m not 100% sure how much memory overhead I have in this setup vs just running the 64-bit userland.Technically there’s a very interesting “hybrid” abi you can try - 32 bit pointers on a 64 bit ISA. The main benefit is the extra registers that get unlocked in 64-bit mode while keeping memory usage lower. It seems there’s an attempt to do this in Debian [1]. From what I read it’s not a big win for arm though but could be big for x86 - since the ISA is very different between x86 and x86_64. Probably doesn’t matter whe	NightMKoder	9.785274	-5.4262457	comment	6.0	20.0	1590652160	7.89722
33151091	I see a lot of comments about crypto	I see a lot of comments about cryptography software, why does this kind of software care about how long the CPU spends on something?	ltbarcly3	9.8901205	-5.22555	comment	6.0	19.0	1665408403	7.790247
33224894	Just some points- The amount of memo	Just some points- The amount of memory that leaves the factory that has errors is a low percentage, not sure what it is but we can all agree it's low.- You can run memtest when you first install memory for several hours or so to be 99.99% sure your memory is good- There are outside influences and EXTREMEY RARE cases (cosmic radiation etc) where you may still get an error. If you had ECC it would protect you.- If you start getting errors (as in more than the one off cosmic flare) later you can test the memory again and determine it's damaged- Most memory you buy for builds has a lifetime warranty- ECC costs more and reduces performance by some amountSo the only danger of not having ECC is exceedingly rare memory errors. If those rare instances mattered that much then you should get ECC but 	themitigating	9.557746	-5.5351777	comment	6.0	39.0	1665937883	8.267611
33276136	For someone who just doesn't know --	For someone who just doesn't know -- what are the useful use cases for ECC? Who benefits from it?	boplicity	9.478485	-5.525784	comment	6.0	20.0	1666279416	8.327753
33309090	The main take away from this is that	"The main take away from this is that much like the VAX-11/780, all of the processors we run Linux on today have embedded controllers that run first.In history we see ""The VAX-11/780 included a subordinate stand-alone LSI-11 computer that performed microcode load, booting, and diagnostic functions for the parent computer.""[1]In the present, there are many layers of embedded controllers doing essentially the same thing the LSI-11 did for the VAX.  In both cases, the main OS has little to no control over those controllers.[1] https://en.wikipedia.org/wiki/VAX"	mikewarot	9.859489	-5.311485	comment	6.0	28.0	1666550063	-8.266642
33346154	Ha - no. Absolutely not. I don't kno	Ha - no. Absolutely not. I don't know where this total myth came from that RISC-V is open source therefore implementations will be better.RISC-V is just an ISA (Instruction Set) that anyone can use, but what people use it in, and how they use it, is not specified and does not have to be open source. Apple could take RISC-V, plop it in their iPhone, and release it tomorrow in a processor that only boots Apple-signed code and requires proprietary firmware without any issue whatsoever. Intel could literally release a Core i5 with a RISC-V instruction set and an Intel ME built-in, no problem.Where the hope mainly comes from is small chip developers like SiFive, who make many of their drivers and such open-source. But that's only if you buy from vendors like them - if you implement your own RIS	gjsman-1000	9.391423	-5.6350145	comment	6.0	24.0	1666802223	-10.56677
33369901	Why you can’t trust CPUID	Why you can’t trust CPUID	rbanffy	9.699056	-5.320544	story	6.0	64.0	1666955527	7.688119
33474405	"Feast your eyes on the ""Intel® 64 an"	"Feast your eyes on the ""Intel® 64 and IA-32 Architectures Optimization Reference Manual"": https://cdrdv2-public.intel.com/671488/248966_software_optim... (newer link, as requested by one of the child comments)It details the prefetchers, how they work, what patterns they recognize (section 3.7)"	dmitrygr	9.8565	-5.6053953	comment	6.0	27.0	1667598880	-7.45769
33533810	Not having any particular domain exp	Not having any particular domain experience here, I've idly wondered whether or not there's any role for neural net models in translating code for other architectures.We have giant corpuses of source code, compiled x86_64 binaries, and compiled arm64 binaries. I assume the compiled binaries represent approximately our best compiler technology. It seems predicting an arm binary from an x86_64 binary would not be insane?If someone who actually knows anything here wants to disabuse me of my showerthoughts, I'd appreciate being able to put the idea out of my head :-)	peatmoss	9.740053	-5.51337	comment	6.0	20.0	1668010829	-7.6672935
33533878	Rosetta 1 had a ticking time bomb. A	Rosetta 1 had a ticking time bomb. Apple was licensing it from a 3rd party. Rosetta 2 is all in house as far as we know.Different CEO as well. Jobs was more opinionated on “principles” - Cook is more than happy to sell what people will buy. I think Rosetta 2 will last.	stu2b50	9.784413	-5.2882633	comment	6.0	32.0	1668011114	7.557097
33537724	> It was originally a startup, but h	> It was originally a startup, but had been bought by IBM by the time Apple was interested.Rosetta shipped in 2005.IBM bought Transitive in 2008.The last version of OS X that supported Rosetta shipped in 2009.I always wondered if the issue was that IBM tried to alter the terms of deal too much for Steve's taste.	GeekyBear	9.783031	-5.2057323	comment	6.0	29.0	1668027503	7.5440645
33553221	AMD Launches EPYC 9004 “Genoa” Proce	AMD Launches EPYC 9004 “Genoa” Processors – Up to 96 Cores, Zen 4, AVX-512	mfiguiere	9.302169	-5.227941	story	6.0	72.0	1668113780	7.933191
33597661	This annoys the hell out of me and I	This annoys the hell out of me and I only speak English.Microsoft is probably the biggest development-focused company in the world, but their own work communications app, Teams, doesn't allow you to paste small pieces of code in a chat because it replaces punctuation with emoji.Regardless, if I want an emoji, I will type the emoji. If I typed ':)' I want ':)' not some stupid yellow face.Meta's Facebook Messenger doesn't allow those forbidden strings either. Meta's WhatsApp mobile does, but WhatsApp web does not.My phone has an emoji picker if I want an emoji. I don't want what I type or paste replaced with an emoji. Anywhere. Ever. This practice should stop.	ClassyJacket	9.8281355	-6.2524924	comment	6.0	28.0	1668447166	-13.949488
33680707	Honestly, the past 5-ish years of In	Honestly, the past 5-ish years of Intel generations have blended together for me. I'm not even sure if they've already released a new one this year or what it might be called. Everything is some kind of Lake, they're all i3, i5, i7, i9, and they have some weird x000 naming scheme (then there are the utterly indecipherable xx00nn ones).Am I the only one who prefers the simplicity of Zen 1, 2, 3, 4?	Sakos	9.229487	-5.1945453	comment	6.0	42.0	1668950781	7.839022
33711987	NASA Uses RISC-V Vector Spec to Soup	NASA Uses RISC-V Vector Spec to Soup Up Space Computers	JoachimS	9.389614	-5.6774993	story	6.0	147.0	1669153626	-10.587656
33712391	NASA probably stands to save a lot o	NASA probably stands to save a lot of duplicated development time if they could use just one ISA from their tiny MCUs to large HPC chips. It would also help with vendor dependency. If a vendor doesn't work out, just move to another RISC-V vendor.Why not ARM then? Because NASA can use their own implementations in FPGA without paying a bunch of extra money for the privilege.	hajile	9.482698	-5.4784884	comment	6.0	29.0	1669155706	-10.481391
33775574	Linus Torvalds:  And I claim that th	"Linus Torvalds:  And I claim that that is the real problem with AVX-512 (and pretty much any vectorization). I personally cannot find a single benchmark that does anything I would ever do - not even remotely close. So if you aren't into some chess engine, if you aren't into parsing (but not using) JSON, if you aren't into software raytracing (as opposed to raytracing in games, which is clearly starting to take off thanks to GPU support), what else is there?

Answer? Neural net inference, e.g., https://NN-512.comIf you need a little bit of inference (say, 20 ReNet50s per second per CPU core) as part of a larger system, there's nothing cheaper. If you're doing a small amount of inference, perhaps limited by other parts of the system, you can't keep a GPU fed and the GPU is a huge waste of mo"	37ef_ced3	9.357152	-5.3700104	comment	6.0	36.0	1669652661	8.115877
33780814	Generally speaking, the idea that th	Generally speaking, the idea that the average person uses more than 4 cores is insane. Even as a power user/dev I can count the times when I needed more than 4  cores on one hand.All the benchmarks that these CPUs are evaluated by, test either games, or run the same crazy stuff like fluid simulations that OPs article complains about. Hardware reviewers need a reality check.	torginus	9.513959	-5.2726626	comment	6.0	23.0	1669674683	7.9452353
33854927	Undocumented 8086 Opcodes part 1 (20	Undocumented 8086 Opcodes part 1 (2017)	rwmj	9.8079	-5.66784	story	6.0	75.0	1670170591	-7.4479103
33900989	I feel for all the engineers impacte	"I feel for all the engineers impacted by this layoff, but I do not agree that they are ""the best CI/CD platform on the market"".Our small team has moved away from CircleCI for all new projects. We are mostly using Github Actions these days. The major driver was not cost, which was minimal for our team, but the fact that CircleCI keeps breaking our build. In the ~5 years that we have used them, we have experienced at least 3 major breakages, including the migration from v1 to v2 yaml configs and the new docker architecture.They have strayed far from their early value prop and cause us more headaches than delight. CircleCI, if you are listening, all I want with CI/CD is to forget about it, not have to revisit a working project every year to rearchitect it onto a new builder."	aftbit	8.944031	-6.404127	comment	6.0	18.0	1670450760	1.2899497
34106450	Im a big supporter of RISC-V doing m	Im a big supporter of RISC-V doing my best to buy the hardware where possible and use it.The biggest hindrance to it is lack of software and distro support.The VisionFive2 is a lovely board but so far we only have a barren bootrom. No idea of OpenGl, OpenCl work on it!Someone lied about distro support being confirmed. StarFive probably...But those lies could torpedo the whole project.The early days of android were bogged down with complaints of fragmentation, patchy support.	psychphysic	9.385751	-5.6485567	comment	6.0	25.0	1671807249	-10.566506
34106534	Apple brought their chipset in house	Apple brought their chipset in house, using ARM is a base, to control their supply chain, cut costs, and allow for a RISC based architecture (which honestly just makes sense now these days).  The biggest hinderance to RISC-V adoption will be if ARM remains customizable, cheap (from an IP perspective), and has widespread adoption.  Honestly, I'm okay if RISC-V remains somewhat niche, but provides the necessary market pressure to keep non-open competitors honest.  There's a meta-benefit to open standards as well.	andrewclunn	9.417435	-5.547872	comment	6.0	55.0	1671807738	-10.539662
26571250	One-bit Computing at 60 Hertz	One-bit Computing at 60 Hertz	Tomte	9.831831	-5.573184	story	6.0	43.0	1616610963	-4.1651993
26724619	Do [[likely]] and [[unlikely]] flags	Do [[likely]] and [[unlikely]] flags have anything to do with CPU code prediction / speculative execution that has been a burning subject recently (Spectre)?	notum	9.679067	-5.6054535	comment	6.0	21.0	1617802232	-6.9761944
26735750	I wonder if we'll ever see FPGAs in 	"I wonder if we'll ever see FPGAs in consumer CPUs, given AMD's expertise with chiplets and interconnects. Say, for programmable specialized instructions. The relatively recently published patent ""Method and apparatus for efficient programmable instructions in computer systems"" (https://www.freepatentsonline.com/y2020/0409707.html) seems to point that way."	timlatim	9.130334	-5.3404307	comment	6.0	26.0	1617863550	-9.639222
26825714	Bjarne Stroustrup: Linus wants atten	Bjarne Stroustrup: Linus wants attention	v8dev123	9.280147	-5.886547	story	6.0	16.0	1618518524	4.2103763
26834459	IIRC, 32-bit RISC-V is only intended	IIRC, 32-bit RISC-V is only intended for deep embedded workloads, with 64-bit for general purpose compute.  So a SoC w/ a single 32-bit core would seem to be a less-than-ideal fit for the cutting-edge 5nm process.	zozbot234	9.425354	-5.623336	comment	6.0	24.0	1618584081	-10.527913
26868515	Before clicking the link I was going	"Before clicking the link I was going to joke, ""But is it 64-bit yet?""  So I was pleasantly surprised :D"	2bitencryption	9.867263	-5.3426056	comment	6.0	23.0	1618870684	-7.81701
26925167	OpenSourceFPGA Launches Foundation t	OpenSourceFPGA Launches Foundation to Accelerate Adoption of Programmable Logic	lelf	9.112965	-5.3087444	story	6.0	76.0	1619275250	8.400621
26946993	Examples of RISC-V Assembly Programs	Examples of RISC-V Assembly Programs	azhenley	9.496486	-5.774922	story	6.0	92.0	1619465809	-10.533224
26962005	I used to work at Cycorp, a holdover	I used to work at Cycorp, a holdover from the AI world of the 80s and to this day a classical (CL-like) Lisp shop. They have an old Symbolics box in their entryway, positioned by a couch as a small coffee table :)I find the whole idea of hardware that's specifically optimized for a totally different programming paradigm than what we're used to just fascinating. It's not hard to imagine why we haven't seen more of it: it's really expensive to iterate on a branch in the computing hardware tree, and you're probably better off just writing a runtime for mainline systems. But still, it's fun to think about.I am a little surprised though that nobody's written an operating system like this for standard hardware. Still a big task, but an order of magnitude less ambitious than custom hardware and w	brundolf	9.786895	-5.2184615	comment	6.0	27.0	1619559592	-7.774839
27046993	I wonder if all the gender variants 	"I wonder if all the gender variants / skin tones etc gets put into much use in real world? I mean yeah, having them is a good idea but they don't seem to be easy to use on emoji keyboards.Do people care enough to choose the correct skin tone and stuff? It is mostly ""set it and forget"" though for the singular person emojis, so it makes sense. Would you spend time to choose the right tones, genders etc on a handshake emoji?"	eknkc	9.794721	-6.2689166	comment	6.0	35.0	1620198135	10.753059
27048369	Why? Why so much effort is put in so	Why? Why so much effort is put in something so meaningless as emojis? There's nothing more confusing than messages with emojis. When I read the text I know what information writer wanted to send me because it was all coded inside the text. When I see emoji I have to stop and think, what the writer wanted. Is it part of the information or just the background noise? Should I 'read' this emoji as a part of the sentence or as a separate phrase? Clear text is just so much less confusing.	BigMajestic	9.800149	-6.265316	comment	6.0	35.0	1620212098	-13.956656
27143064	It seems like great work.Something I	It seems like great work.Something I don't understand is that I hear people mentioning a lack of multicore support as blocker to using a programming language. I don't think this is something I have ever felt. What problem domains require multicore?	philzook	9.832091	-5.5364375	comment	6.0	31.0	1620919062	8.235999
27170637	FPGA evangelists like this really ne	"FPGA evangelists like this really need a reality check.  Programming in RTL is not easy, and it's not really a skill that most people need, so it doesn't make a lot of sense as an educational tool.The ""killer app"" for hobbyist FPGAs might be some sort of ""SoC builder"" tool that lets you build a specific microcontroller around a few high-performance cores, and then program it like software.But don't worry.  Since 2000, mainstream FPGA programming has been right around the corner."	pclmulqdq	9.089367	-5.3723087	comment	6.0	24.0	1621131198	8.422901
27222647	Linus knows what he knows, but he ha	Linus knows what he knows, but he has some significant blindspots. Here, it's the existence of languages other than C. I think this argument basically doesn't apply to any interpreted or JITted language.I wouldn't be at all worried about deploying my Ruby, Python, or Java app on ARM, having worked with x86 locally.That is, as long as the Ruby, Python, and Java development teams themselves have been able to test on ARM hardware themselves!	twic	9.737728	-5.353107	comment	6.0	24.0	1621525444	-7.748561
27277942	I will shed a small tear for the pas	I will shed a small tear for the passing of AArch32 as it was the first processor architecture I really enjoyed programming.I wrote hundreds of thousands of lines of assembler for it and what a fun architecture it was to program for. Enough registers to mean you rarely needed extra storage in a function and conditional instructions to lose those branches and combine that with 3 register arguments to each instruction meant that there was lots of opportunity for optimisation. Plus the (not very RISC but extremely useful) load and store multiple instructions and that made it a joy to work with.AArch64 is quite nice too but they took a some of the fun out of the instruction set - conditional execution and load and store multiple. They did that for good reason though in order to make faster sup	nickcw	9.679943	-5.521837	comment	6.0	33.0	1621955874	-7.766799
27319142	ECC is vulnerable to Rowhammer.	ECC is vulnerable to Rowhammer.	hypertele-Xii	9.569411	-5.6255426	comment	6.0	23.0	1622227970	-13.886946
27322598	But while there are no known cases w	"But while there are no known cases where Rowhammer attacks have been used in the real worldNot on purpose but I'm sure that either it or phenomenon like it are the causes of a lot of odd ""glitchy"" behaviour that people encounter, because systems are run so close to their limits that there are bound to be cases when they surpass the limits. I remember many years ago discovering that a system which passed the CPU and memory stress tests of the time 100% (ran many days), but would very reliably corrupt a particular .zip file's contents upon extraction; and no other that I could see. Turning down the FSB by 1MHz(!) was enough to make it stable again.But I remain convinced that Rowhammer is a fundamental defect and all RAM which is susceptible to it should be recalled and replaced. It really sa"	userbinator	9.649396	-5.656422	comment	6.0	48.0	1622255238	-13.896565
27322700	The problem isn't RowHammer, the pro	The problem isn't RowHammer, the problem is lack of ECC. This is mostly Intel's fault, as they cripple their consumer CPU lines to disable ECC for market segmentation purposes.The entire premise that we can store tens of gigabytes of information reliably in tiny silicon capacitors without any error detection or correction whatsoever is ludicrous. Every other storage technology uses advanced error correction - NAND Flash, HDDs, optical media, etc. We've been doing this for decades. Even floppies at least had error detection (checksums). All high speed transmission protocols also do error detection and re-transmission, except HDMI (because I guess nobody cares about the odd corrupted pixel). Same for anything going over radio.Once you have ECC, your error rate margin goes up by many orders o	marcan_42	9.630295	-5.6533656	comment	6.0	39.0	1622257134	-13.897234
27337945	Are there any half-decent ways to ru	Are there any half-decent ways to run CI locally? Anyone have any suggestions?For me it doesn't have to be automatic like these CI services.	CarVac	9.159132	-6.4089894	comment	6.0	27.0	1622416681	6.1725163
27390093	The 6809 is a fun processor to progr	The 6809 is a fun processor to program in assembly and still my favorite 8-bit chip.  The 8086/88 was such a let down after it.  It would be interesting to have a 64-bit version just to play with for projects.	protomyth	9.544702	-5.2020254	comment	6.0	24.0	1622775875	-7.514605
37644543	Viable ROP-free roadmap for i386/arm	Viable ROP-free roadmap for i386/armv8/riscv64/alpha/sparc64	zdw	9.486574	-5.6725883	story	6.0	116.0	1695652675	6.100987
37657114	I see 0% CPU for control center here	I see 0% CPU for control center here (13.6) so either fixed, or not always the case.	coldtea	9.641865	-5.1841855	comment	6.0	23.0	1695723550	7.773374
37663401	Why do Open BSD developers in 2023 c	Why do Open BSD developers in 2023 care about architectures like alpha and sparc64? What are their use cases? Why would anybody pick those over Intel / ARM? What do those architectures provide that makes people care? Is it just existing hardware that people already have and don't want to throw away, or is there an actual reason one would buy such a processor over the more popular competition? I get the arguments for Riscv for example, but the rest are a mystery for me.I'm not criticizing here, but actually seeking to understand.	miki123211	9.543005	-5.2801614	comment	6.0	24.0	1695751594	-10.402967
37715082	Alleged AMD Zen 5 Specs Leak: Twice 	Alleged AMD Zen 5 Specs Leak: Twice the Cores, 15% Increased IPC over Ryzen 7000	mkl	9.260773	-5.189385	story	6.0	120.0	1696079385	7.8733273
37734991	I worked on the A510 (codenamed Klei	I worked on the A510 (codenamed Klein) at Arm on the L1 memory system design. It was a fun core to work on, really pushing the bounds of what you can do with an in order core and made me realise the out of order/in order boundary is a lot more blurry than you might think. Plenty of out of order stuff happening in the memory system for instance.Whilst there's plenty of reuse from the A55 the memory system was sufficiently different we built the load store unit from scratch. I got the honor of writing the RTL for the new one (normally you'd start with existing RTL and rework it). I wonder how many years those files will live on til they decide to start afresh?It's a real shame the microarchitecture of these things isn't more open articles like this give you some info but not the full picture	gchadwick	9.670594	-5.4289055	comment	6.0	28.0	1696232256	-13.584381
37768268	Damn i hoped we would one day get a 	"Damn i hoped we would one day get a customizable fpga into our CPUs. I hoped that it would make sense to install certain instructions on your fpga depending on your workloads. I guess this either kills that possibility or pushes it into a very far future.I do not understand this part though:> There was talk of hybrid CPU-FPGA packages, which never seem to get
> commercialized because no system architect likes static ratios of compute –
> unless they are determining the ratios. Like the hyperscalers and cloud 
> builders, who can tell companies like Intel and AMD what their product 
> roadmaps need to look like.What do not see what they mean by ratio here. Do they mean die ratio between cpu and fpga?"	almatabata	9.156931	-5.3141623	comment	6.0	43.0	1696439324	8.26688
37814356	Projects Innovating Around RISC-V	Projects Innovating Around RISC-V	cpeterso	9.377137	-5.6924515	story	6.0	77.0	1696798797	-10.583241
37819836	A server without ECC RAM is not a se	A server without ECC RAM is not a server, sorry. It's a catastrophe bound to happen.	lakomen	9.467061	-5.5030265	comment	6.0	22.0	1696855269	8.202974
37898987	Reminds me of VLIW. As per Wikipedia	Reminds me of VLIW. As per Wikipedia, from the Itanium page:> One VLIW instruction word can contain several independent instructions, which can be executed in parallel without having to evaluate them for independence. A compiler must attempt to find valid combinations of instructions that can be executed at the same time, effectively performing the instruction scheduling that conventional superscalar processors must do in hardware at runtime.If your CPU exposed the single-stream parallelism at the interface, you can do it at compile-time or even decide it with in-line assembler.I wonder if it hasn't caught due strictly to the business dynamics of the industry, or are there technical reasons this isn't really a good strategy?	thatjoeoverthr	9.699734	-5.751308	comment	6.0	21.0	1697459808	-7.591293
37942663	RowHammer and the other speculative 	"RowHammer and the other speculative execution are really interesting attacks, but have they ever actually been used in the wild yet? I can't seem to find anything that says yes.https://news.ycombinator.com/item?id=273189602 years ago someone asked and it looks like the answer was ""nope""https://www.csoonline.com/article/573715/rowhammer-memory-at...3 years ago they were ""closer""I couldn't seem to find anything that said they're known to be successfully exploited yet. My understanding (which is shallow at best) makes me think they're still really tough to use in a real world attack."	blakesterz	9.616421	-5.669891	comment	6.0	32.0	1697722384	-13.939549
37944740	I have a few questions about compute	I have a few questions about computer architecture for you hardware folks. These many core architectures get so complex. I'm a lowly scientist that does some fairly heavy compute in both interpreted languages (python) and compiled languages (c/julia). Two questions:When these 'base clocks' are listed, would a lower core CPU with a higher base clock run more calculations at its max thread count than a higher core cpu? Say 64 threads on a 32 vore 4Ghz CPU vs a 2.5Ghz 96 core monster. For my use case I'm often running a serial computation on a fixed dataset that can be threaded per data point. So if I have 32 data points it's only that parallel. Something between embarrassingly parallel and completely serial.And second. For these massive caches, if I'm doing a massive serial calculation does 	earthscienceman	9.821958	-5.522498	comment	6.0	22.0	1697731598	8.1686535
37992375	Was the industry ready for this conc	Was the industry ready for this concept of a computer having a number of meaningfully different kinds of cores? Has this happened before? Or did application developers just get cores as an integer count and that was it?	Waterluvian	9.49952	-5.2826104	comment	6.0	53.0	1698099561	7.967247
38015686	I'm confused. This seems like a high	I'm confused. This seems like a high severity issue, but the fix is behind a debug menu? Why has this been made public before a fix has been properly rolled out everywhere?This also goes to show how the side channel mitigations are totally useless and we should stop pretending such attacks have been fixed. It is not safe to run untrusted code, no matter how you sandbox it. Not on a host using a modern CPU running multiple applications.	cedws	9.896266	-5.4917345	comment	6.0	33.0	1698255769	-5.7438884
38039489	The Xiaomi 14 with the new Snapdrago	The Xiaomi 14 with the new Snapdragon 8 Gen 3 has a 32 to 64-bit translator	sharkski	9.823558	-5.3139877	story	6.0	120.0	1698419354	-7.710523
38078282	What's with the 36 GB option? The ot	"What's with the 36 GB option? The other memory configs (16 GB, 64 GB) are still clean powers of two. Size suggests that they're using ECC-capable memory but using the extra width intended to support ECC for data... but why would this only apply to a single size? Part availability?EDIT: Digging this a bit, it's not (one or more) 72-bit wide busses with 2^32 words as I'd expect as a gray-beard, it's (probably) six 32-bit wide busses with 6 GiB per bus; and this use of 1.5 * 2^N deep memories has become relatively common with the use of IC stacking, with 12 power-of-two sized ICs stacked in a single package (instead of the more ""comfortable"" 8 high or 16 high stacks of the same ICs giving powers of two)."	addaon	9.855457	-5.2163286	comment	6.0	55.0	1698713011	7.9753375
38097595	> but the device failed to win us ov	> but the device failed to win us over in terms of multi-core performanceIf a dev machine I'd get it, but biz users are email and a few small spreadsheets. I don't get why biz users need multicore anything.	_a_a_a_	9.685183	-5.342229	comment	6.0	22.0	1698843528	8.052137
38115989	Arch: Remove Itanium (IA-64) archite	Arch: Remove Itanium (IA-64) architecture	ndesaulniers	9.546728	-5.5022717	story	6.0	69.0	1698942520	-7.788575
38136783	CPU-Z's Inadequate Benchmark	CPU-Z's Inadequate Benchmark	picture	9.505735	-5.184876	story	6.0	69.0	1699057669	7.779099
38137583	I’m all for new soft cores. However,	I’m all for new soft cores. However, do we really need to pollute the name space? Microblaze is already a name of an architecture that somebody might want to Google.Just call it AMDcoreV or some such thing	dmitrygr	9.56507	-5.376592	comment	6.0	34.0	1699065212	8.042845
38146392	The worst thing about Itanium is tha	The worst thing about Itanium is that it killed DEC Alpha, high-performance MIPS and some other arches I keep forgetting about.	failuser	9.529047	-5.5318274	comment	6.0	31.0	1699141082	-7.759143
38150012	Ask HN: Could Intel have challenged 	Ask HN: Could Intel have challenged x86 with 64-bit RISC instead of Itanium?	networked	9.527235	-5.618443	story	6.0	3.0	1699181698	-10.37496
38154702	Intel vs. NEC: The Case of the V20's	Intel vs. NEC: The Case of the V20's Microcode	klelatti	9.58383	-5.4038563	story	6.0	64.0	1699212616	7.677502
38165933	A lot of beginner FPGA projects are 	A lot of beginner FPGA projects are just crappy microcontroller / crappy microprocessor projects.I'm thinking back to my college years, where I spent about 70% of the LUTs of our little FPGA board making a Wallace Tree Multiplier. Yes, good to learn Verilog over, good for learning how half-adders and adders could work together to make bigger circuits and all that, but its not exactly a good use of FPGA capabilities.Given how many chips are available today on the market, what are hobby-level FPGA designs that truly take advantage of custom logic in a way that a microcontroller and/or microprocessor (or other common parts) cannot replicate?---------Looking at history: I think the traditional use of FPGAs and/or ASICs were matrix multiplication routines, specifically Reed Solomon error correc	dragontamer	9.105202	-5.335674	comment	6.0	30.0	1699292931	8.351489
38165659	It's amazing that the move of RISC-V	It's amazing that the move of RISC-V Foundation to Switzerland (as RISC-V International) was actually called for.Even more amazing is US lawmakers continuing to try & shoot the US in the foot.RISC-V is now globally developed, that ship has sailed. Same for products based on it. The US can't prevent its 'proliferation'. Only reduce the degree to which US entities are part of, and profit from that.Are US lawmakers that dumb? (ok I guess that's a rhetorical question).	RetroTechie	9.359552	-5.680213	comment	6.0	47.0	1699291785	-10.586167
38207743	Reverse engineering the Intel 386 pr	Reverse engineering the Intel 386 processor's register cell	picture	9.698296	-5.4920845	story	6.0	145.0	1699549916	-7.374705
38219217	Nordic is a very high volume supplie	Nordic is a very high volume supplier of BT chips for consumer applications, but is getting crushed by a wave of very low cost Chinese competitors. Among the western chip companies, they are the ideal candidate for RISC-V adoption. I'm very curious to see what TI is planning for RISC-V as they begin to seriously engage in the low cost general purpose microcontroller market for the first time.	xadhominemx	9.375307	-5.6589627	comment	6.0	90.0	1699626272	-10.577972
38268787	Is it even possible to design a cpu 	Is it even possible to design a cpu with out-of-order and speculative execution that would have no security issue? Is the future leads to a swarm of disconnected A55 cores each running a single application?	bobim	9.707599	-5.5909905	comment	6.0	52.0	1699991975	-6.7097983
38414785	Breezy Version Control System	Breezy Version Control System	akkartik	8.821169	-6.3907123	story	6.0	54.0	1700932467	-11.700073
38426775	Very old Macs used this trick to squ	Very old Macs used this trick to squeeze their ROM routines down a bit, operating with 24 bit addressing and using the top bits for flags and whatnot.  Of course they ran into trouble when machines with 16MB of memory started appearing.  If you do this you might be making more work for yourself in the future when you buy a new machine with 256EB of main memory.	jandrese	9.817333	-5.199329	comment	6.0	33.0	1701045691	8.080561
38434678	Retrocomputing FPGA work is a fun di	Retrocomputing FPGA work is a fun diversion from normal software, enough that my brain was convinced they weren't related (had a bit of a mental block for software). Over the course of a year, I went from knowing basically nothing to releasing 3 different FPGA emulation cores of my own for multiple platforms, along with releasing something like 5 ports (which is not necessarily trivial, particularly for a beginner) of existing cores to the Analogue Pocket.It has been a very fun experience, and I've found it to be extremely addicting. It helps that there's a fairly tight-knit community very interested in furthering the development of FPGA hardware preservation, so people are very willing to donate, test, and contribute feedback, which is a great feeling for open source work.	agg23	9.143647	-5.22987	comment	6.0	38.0	1701104083	8.359423
38466630	> Furthermore, these R8g instances p	> Furthermore, these R8g instances provide up to three times more vCPUs and memory than Graviton 3-based R7g instances.So, uh, 75% more bandwidth but 200% more cores is a net reduction in available bandwidth per core. If you rented 32 cores of a server before, you got a certain amount of bandwidth. If you now rent the same 32 cores, you'll have about half the realized bandwidth?	tedunangst	9.533415	-5.2038546	comment	6.0	49.0	1701299298	7.896017
38519692	Stupid question: what's so special a	"Stupid question: what's so special about the 8 in 8-bit CPUs?> Simplicity
>
> With some practice, you could keep the whole of an 8-bit processor’s instruction set in your head.Is it just a matter of replacing all instructions/chips/buses to be 32 bit/lane? Or is it just that in practice the 32 bit CPUs have more complex ISAs?The reason I ask is that I'm learning RV32I, and writing a simple implementation, and wondering if there's any additional didactic value in me learning 8-bit CPUs."	rodlette	9.618479	-5.302677	comment	6.0	25.0	1701708944	-7.617992
14709353	Emojis are the body language of the 	Emojis are the body language of the digital age	dnetesn	9.788895	-6.2662983	story	6.0	43.0	1499337361	-13.9588995
14711027	I think that it is for this moment. 	I think that it is for this moment. When the 4g and 5g networks work well in whole world, we won't need emojis, because video will be used to comunicate with others. Everytime we will be less reticent to transmit videos or pics. People want to show themselves and others want to see them, the real person.	sebasxnco	9.788295	-6.2679186	comment	6.0	21.0	1499354218	-13.945716
14743999	There are things we can do to help g	"There are things we can do to help get us out of this Intel ME rut.* Let AMD know that open-sourcing/disabling PSP is important to you [1].* Contribute to RISC-V. You can buy a RISC-V SoC today [2]. Does your favorite compiler have a RISC-V backend?[1] https://www.reddit.com/r/linux/comments/5xvn4i/update_corebo...
[2] https://www.sifive.com/products/hifive1/"	x86insecure	9.395724	-5.6434617	comment	6.0	21.0	1499779992	-10.552259
14821109	MIPSfpga 2.0: A CPU architecture cou	MIPSfpga 2.0: A CPU architecture course that’s different from the rest	ingve	9.443265	-5.3615193	story	6.0	71.0	1500649693	7.5584564
14866652	I'm still waiting for this nasty har	I'm still waiting for this nasty hardware bug to be addressed: https://community.amd.com/message/2796982Or actually, there are 2 bugs. Some random freezes, and heavy multithreading segfaults.	shmerl	9.491346	-5.2375345	comment	6.0	35.0	1501172051	7.880992
14935204	FPGA internal tristate buses	FPGA internal tristate buses	chclau	9.09773	-5.349669	story	6.0	35.0	1501931459	8.315691
15030016	Rowhammer-like attack on SSDs can pr	Rowhammer-like attack on SSDs can provide root privileges to attacker	el_duderino	9.655943	-5.6259704	story	6.0	161.0	1502908986	-13.860747
15169326	> if every vendor has the same issue	> if every vendor has the same issuesExcept every vendor doesn't. By some magic voodoo witchcraft, x86 remains consistently capable of producing a single kernel that can run on anything from Intel or AMD.Because they upstream their platform support.That is literally it. No, it is not a technical impossibility of the ARM world to support common hardware abstractions like IBM-PC platforms. They choose not to.	zanny	9.63466	-5.218555	comment	6.0	18.0	1504543525	-7.764584
15378199	Bryan Cantrill has a great post on u	Bryan Cantrill has a great post on unikernel models: https://www.joyent.com/blog/unikernels-are-unfit-for-product...From my read, the benefits do not outweigh the costs. If you want light weight microservices, OS level virtualization is the way to go.	Timothycquinn	9.898038	-6.2463055	comment	6.0	32.0	1506870591	-12.402988
15401824	AFACT, the only non-incremental inno	AFACT, the only non-incremental innovations in CPU architecture these days is open source commoditization (the RISC-V approach) and taking VLIW to the extreme (the Mill Computing approach). Maybe we've hit diminishing returns, but both of those ideas still seem super promising to me.The baffling thing is that we've got VC money coming out of our ears. They're funding unicorns with no hope of returns and funding every single uber-for-x idea under the sun. And yet it seems like both of these approaches have received almost zero funding in comparison. How is it that Mill Computing and SiFive (or any other RISC-V commercialization company), have not received billions of dolllars in venture capital yet?	saosebastiao	9.371148	-5.5141635	comment	6.0	22.0	1507135737	-10.549052
15438955	What can this do that emojis can't?	What can this do that emojis can't?	geowwy	9.816584	-6.268161	comment	6.0	22.0	1507604183	-13.957169
15444822	I bet you that the next generation o	I bet you that the next generation of Intel processors will have patched this workaround from working, and maybe go as far removing the ability to kill IME unless you use some kind of rotating encryption dongle. Unfortunately for consumers, there's no way to escape this as even AMD has their own IME.	jadbox	9.458384	-5.2176747	comment	6.0	64.0	1507665124	7.803501
15444934	> I bet you that the next generation	"> I bet you that the next generation of Intel processors will have patched this workaround from working, and maybe go as far removing the ability to kill IME unless you use some kind of rotating encryption dongle. Unfortunately for consumers, there's no way to escape this as even AMD has their own IME.What would be the justification for Intel going through all that trouble to do that (besides a conspiratorial ""the NSA needs it to spy on everyone"")?The impression I've gotten, to this point, is that Intel just doesn't care enough about people in the general public who are bothered by the IME to publicly support ways to disable it.  Governments had enough buying-power to get Intel to implement an unsupported workaround, but I'm not convinced Intel has a motivation to make accessing that worka"	Chaebixi	9.458248	-5.2190633	comment	6.0	36.0	1507666029	7.772026
15580830	Unfortunately anyone who takes their	Unfortunately anyone who takes their security or privacy seriously will be totally unable to use this. Every AMD chip contains a likely backdoored system called AMD Secure Processor (formerly “Platform Security Processor” or “PSP”) [1].This separate processor contains closed source, proprietary binaries that have complete and unrestricted access to the host. Despite a large petition for AMD to opensource this, they refused in the end. [2][3]Anyone running AMD chipsets have a completely separate and unaccessible operating system running on their computer that they can not control nor know exactly what it's doing. [4]Intel has the same sort of system with it's Intel Management Engine (known as Intel ME) that even the NSA didn't want to have running on their own computers. [5][1] http://www.a	turblety	9.468456	-5.210232	comment	6.0	25.0	1509304532	7.8230247
15685208	I'm not sure why pedroaraujo is bein	I'm not sure why pedroaraujo is being downvoted other than in response to his criticism of HN topcommenter Chuck McManis. Pedro is correct; toy CPUs , like what Chuck mentioned building, are so trivial that undergraduate students can build functioning models of them in a few days or hours. They are quite literally thousands of times less complex than the CPUs (even RISC arches) that are discussed in the article.I also concur with Pedro on the clock speed part - clock speed has absolutely nothing to do with your hardware design until you have written all the HDL, simulated its behavioral characteristics, actually synthesized the logic, completed the analog and I/O components of the design, and are actually preparing for tapeout. There's a reason only AMD and Intel make large CPUs for the co	inteleng	9.390841	-5.195205	comment	6.0	28.0	1510563358	7.861651
15715727	If Linus Torvalds got hit by a bus w	If Linus Torvalds got hit by a bus would Linux die (2012)	Enindu	9.341477	-5.8829265	story	6.0	46.0	1510860603	-8.202809
20232364	That's our impression, too. There ar	That's our impression, too. There are AMD Motherboards that take ECC memory, but we've never seen them act on ECC errors that were uncorrectable (the correctably errors are handled, but uncorrectable errors aren't reported!).We will only use Intel Xeon for our work because of this. You'll get about 1 bit flip/GB/year. With 128 GB or more in our standard builds, this would be more than 2/week. We just can't have that uncertainty in the data we provide.And while Cinebench is a useful benchmark, all our heavy number crunching is done on NVidia 2080 architecture so the fact that AMD may have an advantage on some cases isn't that interesting for us. Perhaps if you're a gamer, who doesn't care about an occasional bitflip, looking to squeeze the last drop of value out for his dollar....	starman100	9.409268	-5.4508743	comment	6.0	29.0	1561035225	8.229547
20234582	So whats the advantage to ECC and wh	"So whats the advantage to ECC and why would you choose to go with ECC over more, faster memory, cheaper?
I've seen ECC touted in much marketing, but the usecases to me seem, well boutique, such as video or computer graphics rendering."	RosanaAnaDana	9.472272	-5.51373	comment	6.0	18.0	1561048655	8.240941
20233663	MIPS R3000	MIPS R3000	tosh	9.397431	-5.2141333	story	6.0	37.0	1561043354	-10.4038925
20248819	If you need AVX/AVX2/AVX512 then go 	If you need AVX/AVX2/AVX512 then go intel. Otherwise this AMD chip would be my choice for most applications.	gigatexal	9.262341	-5.1898785	comment	6.0	43.0	1561197006	7.8349566
20255933	Two thoughts:* Most of the algorithm	"Two thoughts:* Most of the algorithms that we want to work with in this domain are doing arithmetic operations on ints and floats. This isn't super difficult to do in an RTL, but it's like implementing C++ objects in assembler. You can do it, but you need to think harder than you should.* FPGAs make you worry about timing. This is a massive shift in thinking for software people. It's also not a value-add; I don't want to care about timing. And it enforces chip-wide dependencies (you can have separate clock domains, but not many of them).If you simplify the model to ""pipelines of arithmetic ops"" and then provide an abstraction that eliminates timing (e.g. all ops run in a fixed number of clock cycles and the compiler automatically pipelines them where necessary) then I think you'd have some"	ianhowson	9.103702	-5.4068604	comment	6.0	31.0	1561301728	8.458445
20391656	I respectfully disagree - I'm a Red 	I respectfully disagree - I'm a Red Hatter so you can take that for what it's worth. To me the 34B buys IBM the real estate in the open hybrid cloud market which Red Hat has built up in the last 5 years. That is part of a large and rapidly growing market. If IBM interferes with Red Hat they will likely squander the value of what we've built. If they foster what Red Hat did to win that critical ground then their 34B could stand to increase substantially.	bmicklea	9.926218	-5.4357066	comment	6.0	48.0	1562679992	-9.475208
20507283	all unikernels so far suck ALOT rega	"all unikernels so far suck ALOT regarding security. wouldn't recommend any of them to run in any production environment unless you want to lose all of your data.NCC group did a good article on unikernels and how crap they are if you want to know.A better idea, like already suggested would be to create an OS which builds itself according to a target application and system, to host that application on said system specifically. that would reduce about as much code, but keep potential security mechanisms like aslr, stack protection , user / kernel separation etc. in tact. 
(now kernels / oses build to target system ,but not application! -> application would only use subset of kernel, and thus kernel can be built to target application, reducing kernel to whats needed).don't try to be cheap for "	vectorEQ	9.932518	-6.1953115	comment	6.0	20.0	1563894316	-12.3853245
20555139	The author fundamentally misundersta	"The author fundamentally misunderstands what RISC is, what CISC is, what SIMD is and what VLIW is apart from misunderstanding every major computer architecture conceptRISC was invented as an alternative approach in an era when processors had really complex instructions, with an idea that high level languages could be efficiently compiled to them and assembly programmers would be efficient if they can do many things with one instruction. RISC philosophy was to make simpler instructions, let compilers figure out how to map high level languages to simple instructions, and therefore fit the processor on one die (yes, ""processors"" used to be several chips) and therefore run it at high clock speeds. RISC is not a dogma, it is a design philosophy.On top of that exception handling in complex instr"	teton_ferb	9.471676	-5.717064	comment	6.0	27.0	1564411713	-10.502586
20651756	AMD EPYC processors come to Google, 	AMD EPYC processors come to Google, and to Google Cloud	jhealy	9.296761	-5.1902046	story	6.0	197.0	1565331766	7.870886
20714127	A Deep Dive into AMD’s Rome Epyc Arc	A Deep Dive into AMD’s Rome Epyc Architecture	lamchob	9.285377	-5.196588	story	6.0	135.0	1565955623	-7.0918474
20752752	An open, high end CPU design is real	"An open, high end CPU design is really going to change the cloud market. An ISA like this is a first step in that direction.Facebook and Google already have their own compute projects and, like Amazon, have access to custom versions of silicon from a variety of vendors.With a properly open CPU design we'll start to see the first tightly integrated, vertical ""cloud"" products that maybe still have a ""commodity"" API on the top (or maybe not?) but are custom all the way down from there.With the end of Dennard Scaling, if not Moore's Law, Open ISAs and Open CPU designs will radically change both the hardware and compute markets and ecosystems over the next 5 to 15 years, similar to what we saw with Open Source in the 1990s.Of course, it's not clear that POWER will be the one to do that, and RIS"	andyjpb	9.486747	-5.3004184	comment	6.0	32.0	1566339344	-10.60809
20832705	“That is either genius, or a serious	“That is either genius, or a seriously diseased mind.” – Linus Torvalds	sooham	9.278322	-5.8808303	story	6.0	76.0	1567106467	-8.160517
20849762	Ferroelectric RAM	Ferroelectric RAM	curtis	9.777528	-5.188797	story	6.0	38.0	1567298329	7.98792
20859183	And I'll still buy Intel! It's just 	And I'll still buy Intel! It's just always the safest, most reliable bet for me. (We only use Xeon systems here with ECC. We value stability and predictability.)	fortran77	9.387105	-5.379327	comment	6.0	22.0	1567433336	8.184346
20866395	Perhaps someone might know better th	Perhaps someone might know better than me: why is hyperthreading necessarily bad?  Can't you just keep it on and give your tenants cores with affinity?  For example, some tenant wants two cores, you give them two vcores on the same core; some tenant wants four cores, you give them two vcores over two, etc.	dnautics	9.7846775	-5.5593076	comment	6.0	24.0	1567518429	8.288407
20881011	Show HN: I have a silly pet project,	Show HN: I have a silly pet project, can I get some input?	andreigaspar	9.7959795	-6.260364	story	6.0	11.0	1567628433	-13.961303
13774149	> ... this means that the base memor	> ... this means that the base memory controller in the silicon should be able to support ECC. We know that it is disabled for the consumer parts, but nothing has been said regarding the Pro parts.ECC should be a standard feature. If you don't want it you don't have to use it but to disable simply for market segmentation is lame.	dmm	9.444913	-5.4989066	comment	6.0	50.0	1488464813	8.270443
13786104	The article states the following for	"The article states the following for RISCV:>""While this architecture is extremely limited in performance, price""Can anyone say thy the performance of RISCV is so lacking?"	bogomipz	9.381364	-5.6824274	comment	6.0	19.0	1488572691	-10.580498
13839040	Would he have made those same commen	Would he have made those same comments to resist going from 16 to 32 bit?Hell, why not stick with 8 bit? We can just optimize everything to work on that, right?	oobey	9.931378	-5.6262755	comment	6.0	34.0	1489158023	8.062562
13858659	Petition for AMD to open-source the 	Petition for AMD to open-source the PSP (backdoor) in their chips	remx	9.421448	-5.19703	story	6.0	142.0	1489419086	7.812239
13925039	Intel's AVX2 instructions don't cras	Intel's AVX2 instructions don't crash the machine, but lead to an extreme increase in voltage and, thus, temperature. Sustained use of these instructions (say, for example, in signal processing and iterative parameter estimation algorithms implemented using routines in Intel's MKL) requires cooling way beyond what the usual boxed cooler that comes with an i7 CPU can deliver in order to prevent throttling.	woodson	9.426143	-5.4841366	comment	6.0	27.0	1490122358	8.083359
14176553	Debian port for RISC-V 64-bit	Debian port for RISC-V 64-bit	desdiv	9.410828	-5.680396	story	6.0	155.0	1492922742	-10.572164
14207007	I won't bother on a desktop. I've be	I won't bother on a desktop. I've been using 4 machines for the last 17 years with storage varying from 10GB to 2TB and RAM varying from 128MB to 16GB and haven't personally seen any kind of data corruption in motion (or at rest for that matter). Only had 2 mechanical drives fail (though predictably).ECC is costly. The memory modules itself and the board required to support it properly.	hashhar	9.714783	-5.477518	comment	6.0	18.0	1493240844	8.203616
14207442	Google had done extensive studies[1]	Google had done extensive studies[1]. There is roughly 3% chance of error in RAM per DIMM per year. That doesn't justify buying ECC if you have just one personal computer to worry about. However if you are in data center with 100K machines each with 8 DIMM, you are looking at about 6K machines experiencing RAM errors each day. Now if data is being replicated then these errors can propogate corrupted data in unpredictable unexplainable way even when there are no bugs in your code! For example, you might encounter your logs containing bad line items which gets aggregated in to report showing bizarre numbers because 0x1 turned in to 0x10000001. You can imagine that debugging this happening every day would be huge nightmare and developers would end up eventually inserting lot of asserts for da	sytelus	9.523139	-5.533503	comment	6.0	57.0	1493244045	8.237014
14233709	Great read, thanks! Followup questio	Great read, thanks! Followup question: what's the distribution of transistors per instruction?Taking your number that there are ~2k instructions in Haswell, and given that Haswell has ~1.4 billion transistors (http://www.anandtech.com/show/7003/the-haswell-review-intel-...), that means on average ~1 million transistors per instruction. My guess is the majority of transistors go to things like the cache, and then there is duplication across cores, so the number is clearly much lower than that, but do you have any sense of what it costs to add an instruction in terms of number of transistors?	breck	9.425734	-5.2332597	comment	6.0	18.0	1493584925	7.560035
14243142	> If you reboot you should see a bri	"> If you reboot you should see a brief firmware splash mentioning the ME. Hitting ctrl+p at this point should get you into a menu which should let you disable AMT.my Lenovo T450s's vPro/AMT setup menu (MEBx) requires a password from me. The default password (""admin"") won't work -- which is wonderful, as I have no idea how to reset it. Yaey."	zkms	9.449103	-5.246408	comment	6.0	26.0	1493686236	7.851575
14284949	Rambus, Microsoft Put DRAM into Deep	Rambus, Microsoft Put DRAM into Deep Freeze to Boost Performance	RmDen	9.806349	-5.334288	story	6.0	34.0	1494156879	8.030549
14284151	The Freedom E310 chip in the HiFive1	The Freedom E310 chip in the HiFive1 board is shipping today and is already competitive with embedded ARM: https://www.crowdsupply.com/sifive/hifive1/#comparisons. It's comically faster (i.e., 100x) than the AVR chip in the Arduino Uno board, but the similar form factor makes it cheap & easy for early adopters to play around with.I'd bet that within five years a good proportion, even the majority, of Amazon & Google servers, will be running on RISC V chips.	jbarham	9.365129	-5.5941815	comment	6.0	19.0	1494137752	10.048375
14319765	They are doing this because they wan	They are doing this because they want the benefits of great ARM battery life. But they are emulating x86 on ARM. So they believe that emulated x86 on ARM will have a better battery life than native x86. The only way I think this could be possible is if they measure battery life of an idle device. Maybe someone can disabuse me of this belief.	fnord123	9.664346	-5.2758207	comment	6.0	18.0	1494538827	-5.6633906
14328435	This may be an unpopular opinion, bu	This may be an unpopular opinion, but making ancient x86 features unreliable strikes me as a good thing. Virtual 8086 mode is an awful virtualization solution, as you can't enter protected mode from within it. This makes it only good for running a subset of DOS apps: either real-mode-only apps or those written to an unspecified subset of DPMI [1]. Ryzen CPUs are easily fast enough to emulate them. And if that's not enough, x86 has had real virtualization for years now, with a functioning protected mode (and long mode!) in addition to real mode.We're long overdue for a simplification of the PC platform. Having CPUs out there with broken legacy features accelerates the migration away from those features. Hopefully this leads to dropping them outright at some point.[1]: https://en.wikipedia.o	pcwalton	9.814406	-5.2874436	comment	6.0	42.0	1494628078	-7.822481
14328920	Keep in mind that if you drop the ol	Keep in mind that if you drop the old stuff, you'll have to provide a bootloader and even then it'll be weird; modern systems still boot in 16 bits, bootstrap in 32 bit mode, then configure 64 bit. Unless UEFI fixed that madness?	yjftsjthsd-h	9.916272	-5.243862	comment	6.0	18.0	1494634357	-7.991797
14339527	> ARM is part of our foundry offerin	> ARM is part of our foundry offerings now. We offer ARM IP, which can be put on Intel chips and be part of an Intel chip, whether it’s a 14nm or 10nm chip. That’s an IP block, not necessarily a separate chip.Where would this be needed?	walterbell	9.5415325	-5.1904035	comment	6.0	31.0	1494829299	-7.754038
14353686	Given how much these types of proces	Given how much these types of processors are used for virtualization, wouldn't a lower core count at a higher clock speed be just as useful?  32 cores at 1.4Ghz only seems useful if you need to use a lot of processor affinity, but assigning faster vCPUs to your VMs doesn't seem to have a downside. Just not sure what advantage this would have over a 16core 2.8ghz chip as a comparison.	djrogers	9.554136	-5.3125825	comment	6.0	27.0	1494971918	8.075596
14353766	"Really not sure on the ""EPYC"" name f"	"Really not sure on the ""EPYC"" name for an enterprise part. It seems more enthusiast then button down enterprise. But as long as it doesn't exclusively come in servers with glowing neons and tri-colour fans, I don't exactly care...I just imagine it will make it easier for intel's marketing to imply these are toys rather then true enterprise grade parts."	jlawer	9.346202	-5.271167	comment	6.0	26.0	1494972554	7.9476237
14420084	Dat – Distributed Dataset Synchroniz	Dat – Distributed Dataset Synchronization and Versioning	ColinWright	8.913868	-6.374726	story	6.0	229.0	1495745659	8.236812
14531277	RISC-V Foundation	RISC-V Foundation	rcarmo	9.375879	-5.7017055	story	6.0	159.0	1497171272	-10.581682
14560455	Even ignoring CPU die size cost, the	Even ignoring CPU die size cost, there's another cost to legacy features: some of those features have register state, and contexts switching it is expensive.  Simpler architectures can do crazy things like switching between threads in mere tens of cycles.  X86: not so much.  The OS needs to deal with DS, ES, FS, and GS, and the microcode needs to deal with CS, SS, and FLAGS.  The segment registers are almost useless these days, but saving and restoring them is very slow.Even x86's model of handling CPL (privilege level) isn't ideal.  I've tried to push RISC-V toward a model where user and kernel code have entirely separate address spaces, which would let privilege handling move to the front end and potentially allow pipelining across privilege changes.  Amusingly, x86's privilege mechanism	amluto	9.740054	-5.7773128	comment	6.0	42.0	1497535438	-10.406584
14613357	Linus Torvalds Explains How Linux St	Linus Torvalds Explains How Linux Still Surprises and Motivates Him	aaronchall	9.387287	-5.840382	story	6.0	65.0	1498148803	-8.256419
14630467	So it's okay for software to have bu	So it's okay for software to have bugs that get fixed (I think everybody here acknowledges that software will always have bugs), but Intel isn't allowed to have issues in their processors, even if they can fix them with a software (microcode) update?	lorenzhs	9.46255	-5.3606815	comment	6.0	36.0	1498404963	7.810309
30776952	I think that really the hard part of	"I think that really the hard part of learning to design chip stuff really is other stuff - understanding where/how to use storage (flops) and combinatorial logic - and simultaneity: how to handle things that happen at the same time.Initially you really need a strong understanding of digital logic (not a language), in particular pipelines.Once you have that stuff in your head you can turn to verilog (or vhdl or whatever) and learn how to map these ideas into the languageIn System Verilog it's easy this is the only way to reliably make synthesisable flops:    bit a, b;
    always @(posedge clk)
         a <= b;

And you can make combinatorial logic 2 ways:    wire c; bit d;
    assign c = a&b;
    always @(*)
        d = a&b;

They'll make the same gates, notice the use of = vs <=, you typic"	Taniwha	9.148855	-5.4564586	comment	6.0	48.0	1648031246	8.56423
30777242	> Once you have that stuff in your h	"> Once you have that stuff in your head you can turn to verilog (or vhdl or whatever) and learn how to map these ideas into the languageYes, and per the other comment this is a huge limitation of them - you don't have Javascript authors saying ""you need to work out what you want in this other paradigm and then translate it"". You occasionally see people writing C this way though, by working out what they want from the assembly and working backwards, which tends to get wrecked by UB or the optimizer at some security-critical point.If the main point of the language is to generate flops, flops should be an explicit primitive!> Verilog is an early object oriented language - modules are objectsMaybe, but IMO a more useful place to apply object orientation would be interfaces, which are nets not "	pjc50	9.160622	-5.498574	comment	6.0	21.0	1648034045	8.588869
30900053	I have never ever even heard of a pl	I have never ever even heard of a place where that was possible.The easiest way to make that scenario happen is take do whatever testing you'd have done in staging and do it in prod. Problem solved.	drewcoo	9.926035	-6.3339286	comment	6.0	27.0	1649015848	2.3537743
30974768	Show HN: I made an emoji URL shorten	Show HN: I made an emoji URL shortener	sekun	9.797926	-6.254199	story	6.0	15.0	1649570462	13.027418
31093415	To paraphrase the maxim, working aut	To paraphrase the maxim, working automated systems evolve from working manual systems. But only some manual systems work.I start CI/CD by doing the whole process manually. For example, type the commands to build a Docker image, or spawn a VM, or obtain a secret. I encode all this in pseudo code, then put it in Bash (or Python). When a conditional branch appears (a different environment with different credentials), I treat it like any other code. Separate the bits that stay the same, and inject the bits that change.The problem with most CI/CD systems is that people tightly couple themselves to the tool without really understanding it - the point the article is making. They over-complicate the solution because the documentation encourages you to do that. When they want to customise, debug, o	blowski	9.162583	-6.4363565	comment	6.0	25.0	1650434950	6.1578197
31119981	MIPS delay slots were another exampl	"MIPS delay slots were another example of this. Arguably Itanium's failure was due to exceeding the weirdness budget with VLIW nonsense, leading to the default PC 64-bit architecture being AMD's ""x86 with longer registers"" instead.What happened to the Mill ""unlimited weirdness budget"" CPU guys anyway?"	pjc50	9.533566	-5.4784656	comment	6.0	33.0	1650622988	-7.864331
31128563	One thing I've always wondered:  How	One thing I've always wondered:  How do pre-compiled binaries take advantage of new instructions, if they do at all?  Since the compiler needs to create a binary that will work on any modern-ish machine, is there a way to use new instructions without breaking compatibility for older CPUs?	luhn	9.840317	-5.65018	comment	6.0	22.0	1650663807	-7.638116
31220499	I'm just happy the blob designs are 	"I'm just happy the blob designs are back for it -- I always preferred those over the now-industry-standard ""realistic"" emoji designs that Apple likes."	warning26	9.797502	-6.266658	comment	6.0	38.0	1651361355	-13.956762
31225471	A problem is slowing down the CPU fr	A problem is slowing down the CPU frequency significantly when AVX-512 is involved, e.g. https://en.wikichip.org/wiki/intel/xeon_gold/6262v this, which usually cancels out the benefit in the Real World (tm).	gslin	9.438889	-5.48228	comment	6.0	26.0	1651416684	8.116083
31260325	Not so many employers. Very few plac	Not so many employers. Very few places/teams in this world care about cache coherency or memory ordering in the go-lang runtime on ARMv9 CPUs. You can count them using one hand fingers. The entry barrier is also too high; you need too many years of serious CS education, usually a PhD. And then find a place at Google or Meta Kernel/Compiler teams, which is obviously super competitive.	afr0ck	9.677042	-5.366235	comment	6.0	22.0	1651672011	9.9197445
31402772	I really like https://kaleidoscope.a	I really like https://kaleidoscope.appIt has a new release and is the most Mac-like of the various diff tools I've used.	selykg	8.845409	-6.436047	comment	6.0	60.0	1652732831	-11.652676
31448318	Connecting an 8086 or 8088 processor	Connecting an 8086 or 8088 processor to a Raspberry Pi	tadbit	9.5783415	-5.23857	story	6.0	68.0	1653058521	-7.4704294
31549924	> The final result is a chip that le	> The final result is a chip that lets AWS sell each Graviton 3 core at a lower price, while still delivering a significant performance boost over their previous Graviton 2 chip.That's not correct. AWS sells Graviton 3 based EC2 instances at a higher price than Graviton 2 based instances!For example a c6g.large instance (powered by Graviton 2) costs $0.068/hour in us-east-1, while a c7g.large instance (powered by Graviton 3) costs $0.0725/hour [1]. Both instances have the same core count and memory, although c7g instances have slightly better network throughput.I believe that is pretty unusual as, if my memory serves me right, newer instances family generations are usually cheaper than the previous generation.[1]: https://aws.amazon.com/ec2/pricing/on-demand/	Dunedan	9.50836	-5.212673	comment	6.0	39.0	1653838293	-8.341042
31550097	It would be irrational to expect a d	It would be irrational to expect a durable lower price on graviton. Amazon will price it lower initially to entice customers to port their apps, but after they get a critical mass of demand the price will rise to a steady state where it costs the same as Intel. The only difference will be which guy is taking your money.	jeffbee	9.46944	-5.212145	comment	6.0	29.0	1653839538	-8.3473215
31623331	Some of us like to think of ourselve	Some of us like to think of ourselves writing open source as serving the public interest. It's hard to do that if you're focusing on an ISA the public doesn't have. I haven't seen any consumer hardware that has AVX512.	jart	9.443218	-5.5527315	comment	6.0	21.0	1654365551	8.096149
31636528	The emojis are killing me, and I don	The emojis are killing me, and I don't know why. Maybe I've forgotten how to have fun.	voz_	9.80063	-6.2642255	comment	6.0	19.0	1654479225	-13.953441
31729546	> CPU time is always cheaper than an	"> CPU time is always cheaper than an engineer’s time.I hate this quote, but less than the ""Memory is cheap"" mantra..For ""CPU time"", if it's a critical path for something with a lot of users and/or where performance is key, the engineer's time is just a fraction."	jbverschoor	9.816281	-5.185723	comment	6.0	26.0	1655145203	7.529498
25467530	So how are the cores interconnected?	So how are the cores interconnected? As ARM server designs love to throw out tens to hundreds of cores which sounds good on paper, but are not really useful to lots of workloads as they have a shit interconnect or lots of NUMA nodes.Interconnect is key, e.g., see the improvements between zen2 and zen3, especially for the `4 < cores <= 8` models - which stem mostly from having 8 cores per die with direct good interconnect, instead of two dies with only 4 cores.An anecdote: I got some hands on a box with a Cavium ThunderX2 96 logical core processor about two years ago, kernel compiled slower than on my high-end, but non overclocked and common, i7 based workstation from ~ 2015 - that is certainly not to a statistical relevant comparison and there may be some workloads that do good with those 	tlamponi	9.51066	-5.266271	comment	6.0	28.0	1608302605	7.92222
25548001	> I would not have expected Rosetta 	> I would not have expected Rosetta 2 to be missing AVX instructionsAVX can’t be emulated by Rosetta due to Intel patents.	als0	9.777512	-5.361033	comment	6.0	35.0	1609032423	7.6515417
25554530	I'd imagine it would since they limi	I'd imagine it would since they limit the number of possible instruction lengths.  The hard thing about x86 is the fact that instructions can by anywhere from 8 bits->256 bits in length (in 8 bit increments).  So there's really no way to know if you are loading up an x86 instruction or you are splitting an instruction.The fact that risc-v only supports 32,64, or 128bit instructions means that you don't have to go through a lot of extra effort to determine where instructions start or end.	cogman10	9.487464	-5.7194524	comment	6.0	25.0	1609105510	-10.531733
25610879	Let’s Build a Version Control System	Let’s Build a Version Control System	shakna	8.835541	-6.3799143	story	6.0	90.0	1609568810	-11.730048
25622471	Yeah I'm always annoyed with this ki	Yeah I'm always annoyed with this kind of mistake. Especially as non-native speakers should know better than the native ones (which usually don't give a f.).Now the point about internally doing ECC is an interesting one, could be a way out of this mess. And apparently ECC is more available in AMD land	raverbashing	9.425921	-5.488075	comment	6.0	35.0	1609689566	8.227335
25622604	A system on Earth, at sea level, wit	A system on Earth, at sea level, with 4 GB of RAM has a 96% percent chance of having a bit error in three days without ECC RAM. With ECC RAM, that goes down to 1.67e-10 or about one chance in six billions.So I'd say ECC is not only important but insanely impactful. There's a reason why many organizations don't even want to hear about getting rigs with non-ECC memory.	bitcharmer	9.483207	-5.5184865	comment	6.0	29.0	1609690519	8.241781
25623237	"When you say bitflips were ""common"" "	"When you say bitflips were ""common"" on thousands of physical machines, does that mean you observed thousands of bitflips?Otherwise, I would think that an unlikely event becoming 1000x more likely by sheer numbers would have warped your perception.I believe that hardware reliability is mostly irrelevant, because software reliability is already far worse. It doesn't matter whether a bitflip (unlikely) or some bug (likely) causes a node to spuriously fail, what matters is that this failure is handled gracefully."	incrudible	9.7064295	-5.535154	comment	6.0	32.0	1609695108	8.22269
25623723	I could never stop wondering why is 	I could never stop wondering why is this not a norm yet. Why doesn't every computer have an FPGA.	qwerty456127	9.091598	-5.3321786	comment	6.0	35.0	1609698402	8.313893
25623819	AMD purchasing Xilinx is a reaction 	AMD purchasing Xilinx is a reaction to Intel purchasing Altera five years ago.  Dr. Su might be a good CEO for other reasons, but this isn't something that illustrates brilliant strategy on her part.	parsimo2010	9.134803	-5.235424	comment	6.0	21.0	1609698904	8.101116
25622735	Are there any Ryzen boards that supp	Are there any Ryzen boards that support ECC and actually correct errors?	tokamak-teapot	9.381233	-5.474731	comment	6.0	20.0	1609691391	8.262909
25704019	Can we please get decentralized emoj	Can we please get decentralized emoji?It's silly that the symbols we use in our language are fixed and determined by a big company (or by a standardization committee for that matter).Language should be free, and this includes its symbols.	amelius	9.821703	-6.2723303	comment	6.0	32.0	1610222028	-13.950507
25762256	Can someone explain the technical be	"Can someone explain the technical benefits of this architecture over the competition? That is should I be excited if I don't care about e.g. openness? Or is it simply an effort to create something that is a half-decent cpu alternative but open?Is there anything about RISC-V that is ""better"" simply because it is a later design than others? Is it likely to evolve faster because it is open or more modern?"	alkonaut	9.39136	-5.6575575	comment	6.0	40.0	1610547836	-10.560006
25786244	They're considering dropping i386, w	They're considering dropping i386, which is interesting. Does anyone know more about that?	Mathnerd314	9.640035	-5.2499647	comment	6.0	33.0	1610677931	-7.745212
25897922	I find Unikernels fascinating, but I	I find Unikernels fascinating, but I’m curious as to who is running unikernel based applications in production?	iampims	9.904025	-6.2545886	comment	6.0	24.0	1611536941	-12.381773
25993561	Ahh the memories of dealing with Ita	Ahh the memories of dealing with Itanium for our large SGI boxes. It was super awesome to have a single system multi terabyte memory “machine” in 2005.It was not awesome to keep adjusting out code to be more amenable to the VLIW-like needs of the processor (Intel’s compiler actually generated very good messages as to “why we didn’t do a good job with your code”, you just often couldn’t do anything with that info).I still remain amused to guess what kinds of programs were included in the architecture simulations that led them to want so many integer units (12?) and so few floating point ones.	boulos	9.620016	-5.5932207	comment	6.0	23.0	1612211975	8.165
26104842	> That's how big a statically-linked	> That's how big a statically-linked executable needs to be to run natively without dependencies on Linux, Mac, Windows, FreeBSD, OpenBSD, NetBSD, and BIOS.* on x86.There was a time period when it was reasonable to just assume everything that mattered was x86.  It started sometime in the early 2000s, as non-x86 servers died out and Macs switched to x86.  And it ended last November, when Apple announced Macs would switch to ARM.The author has suggested sticking with x86 and handling other architectures using emulation.  But x86 is the worst possible architecture to emulate, because its strong memory ordering model means that emulators on other architectures essentially must limit the emulated process to a single core.  (Unless you have special hardware support like M1 Macs do… for now.)  Al	comex	9.7388525	-5.293869	comment	6.0	35.0	1613066180	-7.8074737
26262595	I've really wanted to play with FPGA	I've really wanted to play with FPGAs but never really has good learning resources. This comment section is a gold mine! This is the kind of HN I like.Can anyone point me toward good beginner dev boards? Doesn't have to be particularly powerful or anything, just cheap	jedimastert	9.079315	-5.3344297	comment	6.0	23.0	1614260401	8.349259
26292781	Hunting two PDP-1 photos (which are 	Hunting two PDP-1 photos (which are not what they seem)	masswerk	9.8384285	-5.4266696	story	6.0	95.0	1614513723	-7.512364
26342265	What is the chace of RISC-V becoming	What is the chace of RISC-V becoming and x86 or arm alternative free from binary blobs and (IME|PSP)-like traps?	marcodiego	9.433484	-5.6897078	comment	6.0	19.0	1614865437	-10.531526
26382160	Lord of the Ring(s): Side Channel At	Lord of the Ring(s): Side Channel Attacks on the CPU On-Chip Ring Interconnect	nixgeek	9.696014	-5.5320024	story	6.0	188.0	1615175727	7.8292475
26381165	> Linus SebastianSomething to unders	> Linus SebastianSomething to understand, for those who might have just seen some youtube videos of him being goofy, is that he's an actor. The guy on camera doing stupid stuff is a stage persona. It's an intentionally cultivated image and media persona to get as many video views as possible.I sort of see him as one possible aspect of the low/medium budget TV production stuff which is common in his home city, Vancouver BC. People who've met and worked with him in person report that he's a much more normal, calm, rational individual off screen.I won't judge him for being goofy on camera because it's hard to make a living as a working actor. For every person who gets a job in a vancouver-produced TV drama that might last 2 or 3 seasons, there's dozens more people who are working as restauran	walrus01	9.2750435	-5.856387	comment	6.0	45.0	1615163680	4.230115
26389625	This is more or less analogous to Bl	This is more or less analogous to Blackberry moving to Android, isn’t it? Storied, old-guard tech company loses most of its market share, trades in its first-party stack for a rising open-source alternative.Is MIPS still a big enough name to make this much of a coup for RISC-V? Or is this the last-ditch effort of a fallen star of the semi market?	mortenjorck	9.434966	-5.6154423	comment	6.0	42.0	1615228522	-10.509731
26390803	We need diversity for solving differ	We need diversity for solving different problems, not for diversity sake.What problem did MIPS solve in a unique way that others didn't? Because it wasn't desktop, mobile, embedded, graphics or AI.	Fordec	9.463599	-5.585663	comment	6.0	29.0	1615234077	-10.450915
26400204	Intel joins DARPA in search of encry	Intel joins DARPA in search of encryption 'holy grail'	LinuxBender	9.629599	-5.1918263	story	6.0	58.0	1615306314	-3.041591
26423020	Aiju's Online PDP-11/Unix Emulator	Aiju's Online PDP-11/Unix Emulator	Bluestein	9.847391	-5.3890085	story	6.0	19.0	1615463366	-7.4778123
26423707	> no one gonna use their emoji email	> no one gonna use their emoji email for anything importantI disagree.We, as technical HN crowd, know not to do this this. But any non-technical person who sees 'get a next-gen email addresses' being advertised for 9,99/year will expect more. A lot more.Do not underestimate how naive and demanding consumers can be.	LeonM	9.801883	-6.261069	comment	6.0	25.0	1615468997	-13.955838
26425423	This is a great cautionary tale abou	This is a great cautionary tale about why not to copy. Imagine if they'd taken their approaches from SECM and put them on an IC instead of copying the 8080... they probably would have had a superscalar chip when the West was just shipping 8-bit in-order cores.	api	9.6089115	-5.248533	comment	6.0	34.0	1615478414	-7.5181427
26470116	Highlights from Git 2.31	Highlights from Git 2.31	chmaynard	9.069055	-6.3023953	story	6.0	54.0	1615847302	12.717382
35565607	Can anyone in the know explain the s	Can anyone in the know explain the significance of this toolchain? Haven’t we been able to compile for RISC-V for years now? At the very least I was doing it ~4 years ago for my undergrad research	sakras	9.411771	-5.7101984	comment	6.0	29.0	1681447576	-10.543182
35570627	Does any of this do away with things	Does any of this do away with things like AMD Platform Security Processor? https://en.wikipedia.org/wiki/AMD_Platform_Security_Processo...	mmphosis	9.488707	-5.2058735	comment	6.0	40.0	1681486086	7.8905864
35574050	   >> One day, Linus accidentally at	"   >> One day, Linus accidentally attempted to use his hard drive to dial the university, resulting in his master boot sector starting with ""ATDT"" and the university modem-pool phone number. After recovering from this, he implemented file permissions in his kernel.

Now this nugget made my day. I love Finnish deadpan humor."	lb1lf	9.385355	-5.8502483	comment	6.0	21.0	1681502927	4.2757916
35597140	Thanks for educating me as to the du	Thanks for educating me as to the dumpster fire of patched together steps that take place in the first milliseconds of booting my PC.With regard to this:Intel CPUs ship with built-in microcode, but it's frequently old and buggy and it's up to the system firmware to include a copy that's new enough that it's actually expected to work reliably....I wish companies put more effort into releasing finished, polished products.  Not just Intel. I played with an ESP32-S3 recently and learned not only was the entire digi controller for ADC2 'dropped' from support due to bad silicon, but using ADC1 with DMA was fraught with gotchas and blatently incorrect info in the documentation (reported at least a dozen to EspressIf and they acknowledged).	rkagerer	9.528021	-5.3134604	comment	6.0	32.0	1681709366	7.7659745
35624608	Intel to license x86 CPU cores for u	Intel to license x86 CPU cores for use in custom processors	transpute	9.453979	-5.241948	story	6.0	50.0	1681882505	7.7610674
35678571	WCH Launches a Sub-10¢ RISC-V Microc	WCH Launches a Sub-10¢ RISC-V Microcontroller (2022)	amelius	9.392792	-5.673932	story	6.0	12.0	1682271959	-10.569483
35826212	The fire emoji as file extension is 	The fire emoji as file extension is odd, complicated, and unprofessional. That's my main take away. (I know .mojo is also supported but it seems you're pushing .[fire emoji] as default.)An FAQ entry on how it's faster than C would be appreciated.	FrankyZunim	9.808262	-6.27473	comment	6.0	31.0	1683270628	13.061469
35941419	yeah, no. Tooling support, driver su	yeah, no. Tooling support, driver support and general Optimization matters. So does platform maturity.You don't want your phone to run x86 (and it won't for a while) and though possible its a pain to deal with an arm server at the moment because some random library you use just won't be compatible. And If single threaded performance matters, ARM is behind by a decade.	dtx1	9.649665	-5.190213	comment	6.0	27.0	1684099143	-7.7187557
35941616	It's a trade-off between problems. V	It's a trade-off between problems. Variable length instructions are not as trivial to decode wide, so you need more cleverness here. However, fixed length instructions decrease code density, which asks more of the instruction cache. Note Zen4 has a 32 KB L1 instruction cache while the M1 has a 192 KB L1 instruction cache, requiring extra cleverness here instead to handle the higher latency and area. Meanwhile, micro-op caches hide both problems.The are ripple effects to consider as well. The large L1 caches of M1 (320 KB total) put capacity pressure on L2, towards larger sizes and/or away from inclusive policy. See the 12MB shared L2. Meanwhile, the narrower decode of Zen4 puts pressure on things like branch prediction accuracy & mispredict correction latency - if you predicted the wrong c	ip26	9.304302	-5.251691	comment	6.0	38.0	1684100843	7.958015
35946078	Basic SAT model of x86 instructions 	Basic SAT model of x86 instructions using Z3, autogenerated from Intel docs	djoldman	9.818588	-5.7407618	story	6.0	153.0	1684146928	-7.4499664
35971125	I wonder if dual-ISA processors (x86	I wonder if dual-ISA processors (x86+ARM) might become a reality as a result of this sometime in the near future --- imagine a CPU that can boot in DOS-compatible 16-bit realmode, transition to 32 and then 64-bit x86 protected mode, and from there, launch ARM 16/32/64-bit VMs (more like segments) to run at full native speed. As pointed out in a recent discussion here, the frontend is really the biggest difference between modern ISAs, and all instructions get broken down into uops for the backend to execute.	userbinator	9.647427	-5.4832525	comment	6.0	34.0	1684296296	-7.7815228
35990210	The Great x86 CPU Stagnation? ARM se	The Great x86 CPU Stagnation? ARM seems to have made some great leaps forward in recent years.	Reason077	9.6153145	-5.285141	comment	6.0	30.0	1684426629	-7.749718
36006903	For those truly too lazy to click th	"For those truly too lazy to click through to the article, x86-S stands for ""simplified,"" with the idea being to boot directly into 64-bit mode instead of booting into 16-bit and bootstrapping to 64-bit mode.  16-bit mode would be removed entirely.  It's not clear to me if 32-bit mode would be axed as well, or if it would be retained (maybe partially)."	loeg	9.813345	-5.415618	comment	6.0	35.0	1684530726	-7.856382
36014921	AMD got rid of much of the older bag	"AMD got rid of much of the older baggage when they designed 64-bit mode. There's a 32-bit segmented mode with call gates and rings nobody uses. That was dropped for 64-bit mode, but it's still there in 32 bit mode in shipping processors.Intel has been burned in the past, though. The Pentium Pro (1995), the first good superscalar microprocessor, was a 32-bit machine that could also run 16-bit code. 
Intel thought 16-bit was on the way out, so the 16-bit hardware was not fast. Unfortunately for Intel, Microsoft Windows users were still running too much 16-bit code. It ran Windows NT fine; Windows 95, not so much. As a result, the Pentium Pro did not sell well. Intel had to come out with the Pentium II (1997), which was similar to the Pentium Pro but had better 16-bit performance."	Animats	9.548987	-5.242782	comment	6.0	22.0	1684611628	7.8060827
36074569	There are ancient 32-bit things that	"There are ancient 32-bit things that still run on modern operating systems, that you simply can't get a 64-bit version of.  On my Linux machine, one specific such thing is the Brother printer driver.  Brother laser printers are awesome.  Cheap, reliable, inexpensive aftermarket toner etc.  But to make them work (in my experience, and certainly for the scanner function) you need their binary driver and it has not (last I looked) been updated in years, and it's 32-bit.  No problem, install the 32 bit compatibility libraries and go.On a pure 64 bit CPU, unless the 32-bit compatiblity problem is solved with emulation at the OS level, all this old 32-bit stuff is history.  Or does ""cutting 32-bit mode"" not mean that, i.e. 32-bit binaries still run in the 64 bit mode?"	MarkusWandel	9.865401	-5.277015	comment	6.0	21.0	1685040895	-7.8863144
36086048	> Can jails be used to run subproces	> Can jails be used to run subprocesses in the normal filesystem, but with a different network environment (for example making a given command run its net traffic through TAP)?Jails are basically like a VM-like/light: it appears like jail is its own system. Not quite as heavy as an actual VM under (e.g.) Qemu with virtualized hardware. A jail can have its own network stack:* https://klarasystems.com/articles/virtualize-your-network-on...You can then create a 'virtual patch cable' between the host and the jail and send one side of the 'cable' to the jail and do routing and stuff on the host:* https://man.freebsd.org/cgi/man.cgi?epairBut a (sub)process cannot be 'sent' to a jail: jails 'boot up' like a normal system does, and so you'd have your PID 1 run your regular daemon startup.> Can jai	throw0101c	9.733374	-6.4211044	comment	6.0	37.0	1685117501	10.46179
36136719	Arm announces the Cortex X4 for 2024	Arm announces the Cortex X4 for 2024, plus a 14-core M2-fighter	mkolassa	9.565642	-5.1856804	story	6.0	82.0	1685529483	7.7601132
36188793	Milk-V Duo is a $9.00 RISC-V tiny em	Milk-V Duo is a $9.00 RISC-V tiny embedded computer	squarefoot	9.394576	-5.6130366	story	6.0	69.0	1685907484	-10.564237
36239663	Linus Torvalds on “Woke” Attacks	Linus Torvalds on “Woke” Attacks	gigatexal	9.327176	-5.886203	story	6.0	23.0	1686220358	-8.11064
36281169	Why not build a thermocouple into th	Why not build a thermocouple into the RAM package and program the operating system to overwrite memory with random data on detection of a sudden temperature drop?	chongli	9.713176	-5.4225926	comment	6.0	20.0	1686490014	-8.674583
36327491	Here they mention that each bisect r	Here they mention that each bisect ran a large number of times to try and catch the rare failure.  Reminds me of a previous experience:We had a large integration test suite.  It made calls to an external service, and took ~45 minutes to fully run. Since it needed an exclusive lock on an external account, it could only run a few tests at a time.  We started getting random failures, so we were in a tough spot: bisecting didn't work because the failure wasn't consistent, and you couldn't run a single version of a test enough times to verify that a given version definitely did or didn't have the failure in any practical way.  I ended up triggering a spread of runs over night, and then used Bayesian statistics to hone in on where the failure was introduced.  I felt mighty proud about figuring t	Laremere	8.791093	-6.416485	comment	6.0	67.0	1686756761	-5.202685
36420890	Running Postgres as a Unikernel	Running Postgres as a Unikernel	eyberg	9.918893	-6.2397637	story	6.0	90.0	1687365674	-12.39612
36453810	64-Bit RISC-V with Apache NuttX Real	64-Bit RISC-V with Apache NuttX Real-Time Operating System	lupyuen	9.450313	-5.644617	story	6.0	85.0	1687564384	-10.572951
36533491	I sometimes wonder what CPU designer	"I sometimes wonder what CPU designers think when building such weird instructions? They must have some programs in mind that could be run faster with them, or else the additional transistors are just lost weight. But then compilers and language runtimes might or might not use those instructions. Add to that the fact that modern CPUs are basically their own compilers (going from ""machine code"" to microcode) and you have weirdness atop of more weirdness. But perhaps this is just for business sake; adding more instruction sets to provide a barrier to the competition, because programs using this run faster but are no longer portable to competitors' CPUs."	llogiq	9.713243	-5.644087	comment	6.0	35.0	1688127261	-7.388429
28745452	We don’t plan to support installing 	We don’t plan to support installing or running x86 VMs on Macs with Apple silicon.What about x86 emulation?We get asked regularly about running x86 VMs on M1 Macs. It makes total sense… If Apple can emulate x86 with Rosetta 2, surely VMware can do something too, right?Well, the short answer is that there isn’t exactly much business value relative to the engineering effort that is required, at least for the time being. For now, we’re laser focused on making Arm Linux VMs on Apple silicon a delight to use.So, to be a bit blunt, running x86 operating systems on Apple silicon is not something we are planning to deliver with this project. Installing Windows or Linux from an x86 ISO, for example, will not work.https://blogs.vmware.com/teamfusion/2021/04/fusion-on-apple-...	protomyth	9.884741	-5.25428	comment	6.0	49.0	1633347787	-7.9855094
28767681	"> I don't know what you mean by ""199"	"> I don't know what you mean by ""1990 style"".They said ""5 stage"", which sounds to me like no out-of-order fancy stuff of the sort we've been used to.> Calling it a ""little FPGA program"" seems very dismissive.Well, I wrote a little 5 stage CPU FPGA program once (In Haskell compiled to Verilog :), but that's another story). It wasn't very hard.I haven't made a production IC, but I'm told that's much harder. I would be awesome if Intel made a RISC-V chip, even a slow one just good for arduino-type toys, but that's not what happened here."	Ericson2314	9.296877	-5.2837706	comment	6.0	23.0	1633480697	8.128411
28886409	A 100 MHz Pin-Compatible 6502 Replac	A 100 MHz Pin-Compatible 6502 Replacement	rcarmo	9.495864	-5.2384195	story	6.0	50.0	1634373329	-7.474831
28988954	Did they finally get Docker working 	Did they finally get Docker working on the M1 chips?	grp000	9.55782	-6.395623	comment	6.0	18.0	1635175878	10.05808
29173917	AMD Gives Details on EPYC Zen4: Geno	AMD Gives Details on EPYC Zen4: Genoa and Bergamo, Up to 96 and 128 Cores	rbanffy	9.328944	-5.21243	story	6.0	138.0	1636547380	7.9073133
29200902	There's definitely a bias in securit	"There's definitely a bias in security toward ""sexy"" vulnerabilities that are novel and creative but hard to exploit in practice vs boring ""forgot to bounds check"" or ""off by one logic error"" type vulnerabilities that are pervasive.SMT (a.k.a. hyperthreading) is kind of a security minefield, but so is out of order execution and crufty instruction sets like x86_64. But vulnerabilities of this sort tend to be hard to exploit in the wild. Not saying you shouldn't be concerned about them, but how concerned you are should depend on your threat model. If I were really paranoid and could pick I'd choose something like a low-power simple ARM or RISC-V core to do critical computation. Alternatively you could run your secure compute on any system as long as nobody is allowed to run any other code on "	api	9.716309	-5.526226	comment	6.0	28.0	1636733902	7.8247795
29230005	This seems bad, but as a practical m	This seems bad, but as a practical matter, what does this mean?If you have a process running on your machine can it use this to get root? Read Keys?It looks like they ran their process for 12 hours to do the flipping.And if your flipping your process's memory for that long, what are the chances you are next to sensitive memory for another process?  It seems bad, but it seems like if your randomly flipping bits in memory the system will likely crash.	acomjean	9.730391	-5.5975404	comment	6.0	28.0	1636997699	8.21213
29316455	The concept of undervolting the chip	The concept of undervolting the chip, causing bitflips, to do a differential fault analysis[0] seems like a stroke of genius. I had no idea AES could be broken in such a fashion, of interfering with just the last 1-2 rounds of the cipher.I wonder if it will be mitigated by requiring a larger minimum voltage?[0] https://en.wikipedia.org/wiki/Differential_fault_analysis	sva_	9.61678	-5.3402514	comment	6.0	31.0	1637665407	7.710086
29421125	RISC-V designers optimized for C and	RISC-V designers optimized for C and found overflow flag isn't used much and got rid of it. It was the wrong choice: overflow flag is used a lot for JavaScript and any language with arbitrary precision integer (including GMP, the topic of OP).	sanxiyn	9.513626	-5.796932	comment	6.0	50.0	1638472969	-10.536379
29422104	> I don't think they even tried to r	> I don't think they even tried to read the ISA spec documents. If they did, they would have found that the rationale for most of these decisions is solid: Evidence was considered, all the factors were weighted, and decisions were made accordingly.It's perfectly possible to have read the spec and disagree with the rationale provided. RISC-V is in fact the outlier among ISAs in many of these design decisions, so there's a heavy burden of proof to demonstrate that making the contrary decisions in many cases was the right call.> Which is easy to verify as utter nonsense. There's not even a need to look at the research, which shows RISC-V as the clear winner in code density. It is enough to grab any Linux distribution that supports RISC-V and look at the size of the binaries across architectur	theresistor	9.4302225	-5.709429	comment	6.0	25.0	1638477235	-10.555752
29422268	I am sorry but saying that RISC-V is	"I am sorry but saying that RISC-V is a winner in code density is beyond ridiculous.I am familiar with many tens of instruction sets, since the first computers with vacuum tubes until all the important instruction sets that are still in use, and there is no doubt that RISC-V requires more instructions and a larger code size than almost all of them, for doing any task.Even the hard-to-believe ""research"" results published by RISC-V developers have always showed worse code density than ARM, the so-called better results were for the compressed extension, not for the normal encoding.Moreover, the results for RISC-V are hugely influenced by the programming language and the compiler options that are chosen. RISC-V has an acceptable code size only for unsafe code, if the programming language or the"	adrian_b	9.444879	-5.7277055	comment	6.0	79.0	1638477957	-10.545671
29491820	As someone who has been aware of ECC	As someone who has been aware of ECC RAM for a long time could you briefly explain a concrete case where that is useful? Like, in all my time using computers I don't think I've yet encountered an error caused by RAM, or.. Did I?	lambdaba	9.499627	-5.5235357	comment	6.0	22.0	1639005278	8.25575
29521688	PDP 11/34 had a bootrom and an octal	"PDP 11/34 had a bootrom and an octal keyboard, which is kind of cheating.I grew up using the older PDP 11/45 where you had to key in (using binary toggles) a boot program.
Or, the way I did it, manually enter write address and byte count to the RK05 disk controller (memory mapped I/O) then writing a ""01"" Go command to RK05's command register and watch the RK05 disk activity light flicker briefly. Voila, RT11 was loaded. (This worked because on the PDP 11/45 DMA transfers from disk to memory worked also in CPU Halt mode.)"	DrTung	9.821842	-5.4284987	comment	6.0	25.0	1639237864	-7.5389915
34196370	John Mashey on RISC/CISC (1991)	John Mashey on RISC/CISC (1991)	goranmoomin	9.381827	-5.7243457	story	6.0	41.0	1672494425	2.6040664
34199168	(some rambling questions here that a	(some rambling questions here that are only semi-related:)NASA is really anal about radiation concerns, insisting the caches have ECC (or they run it with cache disabled). For the instruction cache this makes sense (as well as any higher caches that would store instructions).With modern CPU's having so many cores and threads being so cheap, couldn't NASA use these for redundancy?My second question, how much more resilient are older processes with larger feature size compared to modern 6/7nm ?  Compare modern with older (14nm/22nm finfet, 28nm/32 soi) and ancient (65nm or larger).	opensores	9.604668	-5.391026	comment	6.0	37.0	1672511151	8.036026
34221374	Inside the 8086 processor's instruct	Inside the 8086 processor's instruction prefetch circuitry	klelatti	9.66462	-5.4400454	story	6.0	127.0	1672683113	-7.504221
34229070	PDP-11/Hack (2014)	PDP-11/Hack (2014)	dcminter	9.84344	-5.442649	story	6.0	91.0	1672733337	-7.5558963
34240375	Fantastic… but on what? RISC-V is st	Fantastic… but on what? RISC-V is still not quite Raspberry Pi 4-level on the fastest chips, but is advancing quickly.Is this going to primarily be the newest chipset for cheap Kindles?	gjsman-1000	9.375318	-5.655969	comment	6.0	38.0	1672793578	-10.600238
34256594	AMD’s Zen 4, Part 3: System Level St	AMD’s Zen 4, Part 3: System Level Stuff, and iGPU	zdw	9.253456	-5.191119	story	6.0	182.0	1672898218	7.867494
34267936	Transcoding Unicode with AVX-512: AM	Transcoding Unicode with AVX-512: AMD Zen 4 vs. Intel Ice Lake	ibobev	9.365199	-5.3612885	story	6.0	110.0	1672958310	8.144436
34305087	heh. Furby's code is 6502 assembler,	heh. Furby's code is 6502 assembler, just like the T-800. What if sky-net just circuit bent a load of Furbys lol.	nuc1e0n	9.5693445	-5.3599925	comment	6.0	24.0	1673224051	-7.4867144
34329201	8086 Processor's microcode pipeline 	8086 Processor's microcode pipeline from die analysis	picture	9.632789	-5.4356036	story	6.0	157.0	1673375189	-7.4439163
34413046	For me MacBookPro with M2 chips woul	For me MacBookPro with M2 chips would be perfect if the 13in model allowed 64GB RAM.  My workflow requires me to run Docker (intel images) heavily with several containers. Having a virtualization layer is pretty resource consuming. Usually the Docker + containers I use take around 5GB RAM alone.Under that configuration I've found 32GB to be just within the limit of usability. 16GB are just not enough.  Also, for some virtualized Docker workflows, there is that known issue of slow File interaction through the Mac/virtualized file system, which makes working with say Magento, Drupal or simlar software REALLY slow.As a comparison, I've also got a 2011 intel MacBookPro with 16GB RAM. That one is running Linux Mint. Docker performance is almost transparent, and the system runs pretty snappy for	xtracto	9.826533	-5.24556	comment	6.0	28.0	1673967169	9.8932295
34446251	DiscoBSD: 2.11BSD-Based OS for STM32	DiscoBSD: 2.11BSD-Based OS for STM32 and PIC32 Microcontrollers	caned	9.7853775	-5.266183	story	6.0	60.0	1674165541	7.4894233
34463973	Intel, AMD just created a headache f	Intel, AMD just created a headache for datacenters	signa11	9.2499695	-5.1839423	story	6.0	34.0	1674276215	7.880284
34471781	> It was the worst-case scenario for	> It was the worst-case scenario for RAM failure: bit flip errors that get written back to the disk. I discovered that several video files that I had been editing had corrupted bits, and were no longer usable.What a horrible failure mode! Kudos to the OP for even thinking to investigate this.The mentioned memtest86 tool sounds quite useful - so useful, in fact, that it seems it should be part of the operating system. If my OS is perfectly willing to write corrupted memory back to disk, and it's designed to run on thousands of different OEM hardware configurations that may or may not have ECC RAM, then I would expect it to proactively monitor for faulty RAM and bitflips.Is there a good reason why this isn't the default behavior of operating systems (maybe it is - I use Mac and don't know mu	chatmasta	9.826946	-5.5015044	comment	6.0	22.0	1674342694	8.209666
34673561	Curious Undisclosed Skylake Bug	Curious Undisclosed Skylake Bug	todsacerdoti	9.446893	-5.251987	story	6.0	68.0	1675659753	7.747284
34719785	"I got fed up with Docker having a ""V"	"I got fed up with Docker having a ""Virtual machine service"" using like 4GB of memory (while running no containers) on my 8GB Mac so I investigated what I thought would be ""native"" (arm64) Lima.I tried this k8s https://github.com/lima-vm/lima/blob/f7e7addab557da560da7146... example thinking it'd be a thin wrapper around QEMU.6gb+ usage RAM with nothing deployed lolThe disconnect to me is weird. I'm pretty sure with qemu-system-aarch64, Debian/Alpine don't use more than 100-200mb of RAM sitting idle. Where does 6GB of RAM usage come from?Not that I think it's a great use of time to optimize for this whatsoever. I just thought it'd be a fun exercise."	MuffinFlavored	9.634497	-6.415024	comment	6.0	48.0	1675917283	9.999396
34812909	AVX-512 is wide enough to process 8 	AVX-512 is wide enough to process 8 64 bit floats at once. To get a 10x speedup with an 8 wide SIMD unit is a little difficult to explain. Some of this speedup is presumably coming from fewer branch instructions in addition to the vector width. It's extremely impressive. Also, it has taken Intel a surprisingly long time!	fancyfredbot	9.496767	-5.571393	comment	6.0	25.0	1676505933	8.132763
34865315	Get Me Risa Heller	Get Me Risa Heller	exolymph	9.371868	-5.6950617	story	6.0	18.0	1676871966	-10.590264
34926642	Apple's take seems more reasonable. 	Apple's take seems more reasonable. When a user uses an emoji, they think of it as a single symbol, they don't care of the Unicode implementation, or its length in bytes. IMO this should be the standard, and all other interpretations are a repeat of the transition from ASCII to Unicode.	ASalazarMX	9.915164	-6.2477794	comment	6.0	52.0	1677257708	-13.955516
34960218	To the Moon? Emojis can be financial	To the Moon? Emojis can be financial advice, says judge	rntn	9.7625265	-6.263852	story	6.0	37.0	1677523183	-14.001426
34977374	Unless you absolutely need the newes	"Unless you absolutely need the newest for some reason, I think buying CPUs which have been out for a year if not more would be the best way of avoiding hardware bugs like this, as it seems like they've also started using users for random spot-testing instead of verifying against a spec. One would hope they have plenty of esoteric and freely available x86/PC software to use for regression testing, like demoscene productions going back to the 80s (a great way to exercise opcode sequences that compilers might rarely or never create, but should still work), but with the recent CPU bugs, it feels more like ""Windows/Linux/$common_OS with $common_software seems to work, ship it!"""	userbinator	9.907442	-5.4619055	comment	6.0	23.0	1677632736	-7.5835395
35009545	RVVM – The RISC-V Virtual Machine	RVVM – The RISC-V Virtual Machine	api	9.48475	-5.6868706	story	6.0	140.0	1677851207	-10.553951
35054312	Linus Torvalds: if you cannot explai	Linus Torvalds: if you cannot explain a merge, then JUST DON'T DO IT	sathishmanohar	9.282119	-5.9568524	story	6.0	16.0	1678189929	4.332035
35067603	Intel continues with more optimizati	Intel continues with more optimizations to the Linux kernel	isaacfrond	9.885354	-5.253572	story	6.0	126.0	1678273781	7.770207
35076601	I have been on and off writing an em	I have been on and off writing an emulator for the eZ80 CPU. This CPU has two addressing modes, Z80 mode in which it's effectively an 8-bit processor with a 16-bit address space, and ADL (Address Data Long) mode in which it has a 24-bit address space. There is a CPU control bit 'MADL' (Mixed ADL) for mixed-mode applications; when set, using certain prefixed opcodes will switch modes during call and return.A Z80 routine can call outside of its 16-bit address space with 'CALL.IL'. This pushes the 16-bit return address onto the 16-bit stack, switches to 24-bit mode, and pushes the magic 'return to 16-bit mode' number to the 24-bit stack. However, it's not clear from the manuals or datasheets what happens if you use the prefixed 'CALL.IL' opcode sequence when the 'MADL' bit is reset.I asked Ch	codebje	9.805579	-5.6087327	comment	6.0	19.0	1678320868	-7.4642663
35107898	arm64 is not that interesting due th	arm64 is not that interesting due the toxic IP tied to this ISA. Would be more interesting to target RISC-V.	sylware	9.513282	-5.603094	comment	6.0	22.0	1678539165	-10.47816
35133851	LinPEAS	LinPEAS	badrabbit	9.304346	-5.8967633	story	6.0	40.0	1678704370	4.209136
37182515	ARM’s Neoverse N2: Cortex A710 for S	ARM’s Neoverse N2: Cortex A710 for Servers	zdw	9.551014	-5.2406516	story	6.0	100.0	1692394811	7.767083
37228878	I’m starting to think that Hacker Ne	I’m starting to think that Hacker News is on the wrong side of history on this one. Without the emotional channel, we make more misunderstandings, which leads to more hostile posts. Emoji are becoming a permanent part of written language.I don’t want to see a post full of emoji either, but perhaps a filter that allows one emoji per 20 words would work. Perhaps using a font with black line or grayscale emoji?	labster	9.790096	-6.259405	comment	6.0	18.0	1692740367	12.745757
37281967	Tell that the big vendors. Only ming	Tell that the big vendors. Only mingw AFAIK ships i686 packages (with simd support), all others stay in the safe i386 camp still, without simd support.	rurban	9.641733	-5.3988233	comment	6.0	18.0	1693139070	-7.754792
37419265	Well, way back then, the Arduino IDE	"Well, way back then, the Arduino IDE was precisely the game changer that made a lot of hobbyists and average people get into embedded systems without much friction or EE background, and not the board based on an Atmega MCU that anyone else could make.Many eons ago before the Arduino came out, I used to have EE labs in university based on the same Atmega chip but using a commercial IDE-compiler, and boy was that a giant PITA as a young buck, having to read dozens of datasheet pages, calculate by hand all the register values just to get a bloody 1 ms PWM timer output on a pin, which never worked the first time and needed an oscilloscope to debug.""Oh, you did everything right, but forgot to flip the bit of the correct pin of the output port in the right registry, have fun debugging it for the"	FirmwareBurner	9.740478	-5.2221227	comment	6.0	25.0	1694096405	1.5040157
37478311	> they create detailed software mode	> they create detailed software models (usually in C++) of their chips to estimate performance as closely as they canHow does this work? Do they model at the transistor level, or at the level of logical functions, or..? I'm particularly curious how this can estimate performance if it's anything higher-level than a direct transistor-for-transistor, layout-aware, emulation.I'd be really interested in learning more if there's anything you could share, please. I can find info about chip design software and languages like Verilog (as you mention) but not this sort of modeling.	vintagedave	9.41058	-5.3366294	comment	6.0	19.0	1694508309	8.068812
37482115	What does fast CI even mean?CI is an	What does fast CI even mean?CI is an overgrown shell script running your build and telling you when it fails. In general build tooling has gotten so slow that the cost of whatever CI runner relative to it should be nil.If you want fast CI you need fast tsc, clang, rustc, etc... not a faster program that calls exec on them.A bit more on topic, if you're selling CI and your business fails it's because people you're providing no value - people can run their build scripts fine without you.	alexvitkov	9.333908	-6.397247	comment	6.0	52.0	1694529963	6.136474
37495094	"Why is there U+E183 ""Trump""[1] that "	"Why is there U+E183 ""Trump""[1] that is just a caricature of Trump?Seems a little bit daft to add any kind of political bias?I would expect extensions to Unicode like that to be pretty universal, and to not include specific current political figures. Same with Great Thunberg[2] -- I just dont see why these characters are in any way revelant enough. Do we add Putin? Do we add Einstein? Do we add Hitler? Do we add all the Caesars? How about emperor of the holy roman empire? Oppenheimer? Ghandi?There should certainly be a line. Last thing that needs to be more political are emojis.[1]: https://openmoji.org/library/emoji-E183/[2]: https://openmoji.org/library/emoji-E188/"	lionkor	9.864134	-6.257101	comment	6.0	23.0	1694602928	-13.958258
37545090	aren’t all instruction sets slightly	aren’t all instruction sets slightly different ways of achieving the same thing at a low level?8, 16, 32, 64 bit mov + add + sub + load + store. and/or/not/xor, blah blah blahobviously it gets way more complex.just curious “unlocking its potential”i thought the primary benefit of risc-v is how easy it is to implement since it never gets into the more complex messiness that’s modern x86_64 and all of its extensions	MuffinFlavored	9.4827585	-5.7401905	comment	6.0	22.0	1694958928	-10.541451
24460383	Riding the RISC-V wave	Riding the RISC-V wave	lawrenceyan	9.365689	-5.7003055	story	6.0	173.0	1599999977	-10.578942
24519752	SiFive to Debut RISC-V PC for Develo	SiFive to Debut RISC-V PC for Developers Based on Freedom U740 Next-Gen SoC	guerby	9.385886	-5.6447525	story	6.0	170.0	1600451357	-10.576913
24568765	Seems really weird.How is an OS supp	Seems really weird.How is an OS supposed to support that? Seamlessly transition processes to run in qemu-x86 on the ARM core? Compile some processes as ARM binaries and pin them to the core? Require some sort of data-layout-preserving dual-architecture compilation for all binaries?Seems much more reasonable to add a low-power in-order x86-64 core instead.	devit	9.893104	-5.442703	comment	6.0	21.0	1600878336	-8.233716
24601227	Ask HN: What are your CI timings?	Ask HN: What are your CI timings?	MosheZada	9.25194	-6.4044466	story	6.0	5.0	1601146432	6.1925716
24602646	Does anyone know how well RISC-V wil	Does anyone know how well RISC-V will be able to compete with ARM in the higher end?  It seems pretty easy to come up with a processor design that is competitive in low-compute load applications, but what about more advanced designs?  I'm curious what it is that ARM brings to the table there and if there is a chance that RISC-V will ever offer serious competition.Certainly RISC-V does not need to be the best to survive as a viable option for most designs.  It may absorb a lot of market share from ARM in the long run.  It will be interesting to see how it develops.	01100011	9.403884	-5.6261888	comment	6.0	40.0	1601158987	-10.554836
24698883	One thing I'd like to understand bet	"One thing I'd like to understand better about DDR5 is how well the built-in ECC is going to work to improve reliability. DDR5 comes with ""chip level ECC"" [1] of which the main purpose is to be able to better sell highly complicated memory chips with minor defects.But as a consequence as I understand, it will allow for the correction of single bit memory flips. With regular DDR4 or previous generations, you don't get any error correction. Any bit error in your DDR4 modules has the potential to corrupt data. If you want to be protected from that, you will need to get ECC memory.Unfortunately, anything with ""ECC"" in hardware for unfortunate reasons gets labeled with an ""enterprise"" sticker. And that means a certain price level, and a certain power consumption. (Yes I know you can get Ryzen bo"	DCKing	9.498585	-5.443942	comment	6.0	55.0	1601998782	-13.477938
24720961	This is one of those Shut up and Tak	This is one of those Shut up and Take my Money Product announcement.~20% Increase in IPC, ~10% Increase in Boost Clock Speed. It doesn't matter how Intel spin it, single thread performance will no longer be an Intel only selling point.  32MB L3 Cache is going to be very useful for certain types of Application.Some of these were rumoured for quite some time. But having it confirmed is a completely different matter. And the pricing is still very good compared to what we used to get from Intel.My only concern is stock availability. And not just at launch but over its life time. AMD has been very conservative with their production estimate. ( Again It is not TSMC's fault ) It wasn't long ago they were on the verge of bankruptcy, so it is understandable but at the same time I wish they took a l	ksec	9.291166	-5.1901073	comment	6.0	85.0	1602175646	7.8967443
24721114	>>Many professionals, including deve	>>Many professionals, including developers, don't need such CPUs too.Lol, sorry, but our C++ projects have an average build time of 40 minutes on an 8-core/16threaded Xeon CPU in my workstation. Even using Fastbuild/SN-DBS it still takes 5-10 minutes. We'll take any number of cores we can get, thank you.	gambiting	9.628009	-5.3844843	comment	6.0	42.0	1602176313	7.8510504
24815839	Yeah, but isn't the whole point of A	Yeah, but isn't the whole point of ARM to be a reduced instruction set? How reduced are we, really, if we're dedicating transistors to the quirks of a single language?	pkulak	9.617103	-5.4417562	comment	6.0	22.0	1603001415	-7.779693
24831281	It's 2020 and I can't believe we're 	It's 2020 and I can't believe we're paying for emoji.I'm not blaming you. I get it. I'm blaming the world we live in.Emoji are not innovation.	echelon	9.790921	-6.267286	comment	6.0	19.0	1603143271	-13.958947
24856767	A Go unikernel running on x86 bare m	A Go unikernel running on x86 bare metal	Lealen	9.936291	-6.2135496	story	6.0	177.0	1603364814	-12.348112
24906363	> This is a smart move, reflecting I	> This is a smart move, reflecting Intel's own, with an eye to the datacenter where the FPGA is seen as having a bright future.What in the world FPGAs have to do in a datacentre?	baybal2	9.126851	-5.2971797	comment	6.0	20.0	1603798004	8.281484
24959834	The idea is that high end processors	The idea is that high end processors will recognise these sequences of instructions and optimize them (something called macro-op fusion).  Whether this is a good idea is an open question because we don't yet have such high performance RISC-V chips, but that's what the RISC-V designers are thinking.  At the same time it permits very simple implementations which wouldn't be possible if the base instruction set contained every pet instruction that someone thought was a good idea.Note macro op fusion is widely used for other architectures already, particularly ones like x86 where what the processor actually runs looks nothing like the machine code.	rwmj	9.477336	-5.7488823	comment	6.0	72.0	1604242454	-10.527304
24965430	> slow CI is probably the biggest en	> slow CI is probably the biggest engineering time killer in existenceIf you're at the size where slow CI negatively affects your projects, then you're big enough to own your own CI (at least the build agents).Remember that one-man projects don't need CI, and that CI for small (n<5) teams is almost never the bottleneck. These SaaS CI providers really target the open-source / small-team market and it makes sense that they wouldn't optimize for larger-scale operations.	solatic	9.356649	-6.4053273	comment	6.0	22.0	1604301005	6.1625504
25039719	This open source chip is an FPGA wit	This open source chip is an FPGA with all the cost and speed limitations that carries.  What would it take to create a truly open-source chip?  I assume a chip fab can be contracted to build them given a workable design.  Is this conceivable for a general purpose CPU?  Will these FPGA approaches get us closer to such a goal?	mulmen	9.203489	-5.251873	comment	6.0	31.0	1604955023	8.302717
25064940	The fact that he even got that far w	"The fact that he even got that far with emulating what is essentially completely undocumented hardware is a very good sign, adding the rest of the hardware to QEMU might not be as hard as initially thought.This approach will help with none of theseDon't underestimate the community -- a lot of Hackintosh (and emulation) stuff is done for the ""just because I can"" reasons, and getting a fully emulated ARM Mac working enough for any sort of actual use would be a huge win even if it's slower than their hardware and not 100% complete (just like Hackintoshes usually are.)"	userbinator	9.882167	-5.3669276	comment	6.0	33.0	1605142057	-8.210605
25075546	Right, lots of confusion in this thr	Right, lots of confusion in this thread.A12Z/DTK:  HW does not support virtualization at all.Apple M1 / New Apple Products:  HW does support virtualization for ARM64 guests (both windows and linux demonstrated).What about x86 software in the guestOS?  Not with Rosetta.  Instead, the guest OS will have to provide its own translation (such as windows/arm's current x86->arm64 or upcoming x86_64->arm64 feature).  I'm not familiar if there is any usable high performance x86_64->arm translation available for linux.Docker w/ arm images:  needs some work to be able to work on mac/arm virtualization, but it's coming.Docker w/ arm linux kernel + x86 userland images:  Any translation solution would be found within the linux guestOS, not macOS.  I don't know if any candidates exist.  Maybe qemu?Docker	frogblast	9.738019	-5.74988	comment	6.0	60.0	1605217736	10.000703
25075592	This was a huge reason why I decided	"This was a huge reason why I decided to go with a 16"" MBP with an i9 vs the M1 today. I assume this will get worked out eventually, but as massive as Apple's gravity is in their ecosystem to pull apps along, they will have a much harder time against the massive library of x86 docker images."	LeSaucy	9.564109	-6.3974376	comment	6.0	47.0	1605217936	10.0415945
25093995	Author here for all your vintage DRA	Author here for all your vintage DRAM questions :-)	kens	9.72525	-5.3389425	comment	6.0	29.0	1605376183	8.008087
25119787	This doesn't really clear up any of 	"This doesn't really clear up any of the questions I have.Will docker running on ARM run docker containers from images built for x86?
Will docker running on ARM be able to build images for x86?"	cosmotic	9.5688	-6.3723807	comment	6.0	47.0	1605581294	10.021149
25124715	1) Can I run VirtualBox on M1 (yet)?	1) Can I run VirtualBox on M1 (yet)? 2) What is the overhead of doing so with Rosetta2 vs native on Intel? 3) What is the situation with VT-X?	goatinaboat	9.88134	-5.2833056	comment	6.0	19.0	1605626398	7.65204
25180076	That's horrifying. What is the fix/m	That's horrifying. What is the fix/mitigation if you don't have proper atomics? I can't see how to properly avoid that.	yjftsjthsd-h	9.529593	-5.3155313	comment	6.0	24.0	1606072116	7.6107607
25203889	It’s not fashion.Unfortunately you a	It’s not fashion.Unfortunately you are wrong. Everything we call tech is in fact driven by fashion.My older version Mac is badgering me to upgrade to Bug Sur. Top feature: 100 new emojis. That is what Apple prioritised. Why the hell are emojis even part of the OS let alone its top feature!Truth is GUIs are done, were a decade or more ago. All there is left now is change for the sake of change. And Apple can’t think of anything more to do in the real OS either!	goatinaboat	9.806682	-6.255019	comment	6.0	23.0	1606257891	-13.971591
25218770	> code search in combination with a 	"> code search in combination with a monorepo and the somewhat hermetic universe which is Google's code base provides immediate access to all uses of a library. You can see what worked well and what didn't, and it enables effective refactorings. That also means when writing a client, you can quickly figure out from other client code how stuff is supposed to be used.
... If anything like this were possible for open source (indexing code that depends on a library/API, across subrepos in any version control system, in a way that gets near complete coverage), it would enable similar possibilities of systematic improvement.gets me thinking — this is totally doable for open source code. someone just needs to build some giant indexes across git repos + package repos (maven/npm/pip/etc)...Then writ"	cobbzilla	8.839019	-6.029541	comment	6.0	26.0	1606387767	-0.449819
25292717	> But I think the overarching point 	> But I think the overarching point is true: now desktop and laptop makers can't just pretend that having a hot and/or slow, clunky, noisy x86-based architecture is just a fact of life. I hope and expect that it'll help create a new generation of ARM-based laptops and maybe even desktops that will run cool and smooth.Be careful what you wish for. X86 is the most open architecture right now. ARM, on the other hand, has locked bootloaders, messy device trees and so on. You can see that virtually every Linux distro running on an ARM SOC needs some specific tweaks.	ekianjo	9.674665	-5.2333922	comment	6.0	51.0	1607020883	-7.7403765
25349065	The emoji skin tone customization pr	The emoji skin tone customization preference is a small thing but as a POC I really appreciate it. Never knew they had it.	srik	9.783188	-6.264305	comment	6.0	28.0	1607450708	-13.956267
25349412	I've looked into FPGAs that are conn	I've looked into FPGAs that are connected to PCIe and provide high throughput to the host, but it seems these are always in the thousands of dollars.What's preventing the FPGA AIB from becoming a commodity like a GPU? Is it just economics of scale, or are these things fundamentally more expensive?	incrudible	9.073723	-5.315646	comment	6.0	27.0	1607452212	8.271014
25397525	Modular unikernel designed to run ap	Modular unikernel designed to run applications securely on micro-VMs	nix23	9.928939	-6.201947	story	6.0	55.0	1607771511	-12.36998
25435548	U+FE0E is really interesting, it for	U+FE0E is really interesting, it forces monochrome emoji usage on the immediately preceded emoji (like a skin tone modifier or any other modifier). I have previously run into the issue of the play-pause characters (U+25B6, U+23F8) being inconsistently replaced with their color versions when I was trying to use them in a UI. It looks like this is a great guarantee that that won't happen.Also is it seems hacker news automatically removes emoji, maybe this modifier would allow them to keep them (in b/w form) and still maintain the polished appearance.	matthberg	9.827298	-6.2646623	comment	6.0	23.0	1608068184	-13.958202
38640045	You're talking about industrial PLCs	You're talking about industrial PLCs. They're programmed using a-bit-more-fancy Scratch snappy blocks. There is no version control. The firmware contained paths embedded as strings, so we know that firmware for each model and customer was developed in a separate folder on disk. I wouldn't be surprised if they also had .zip files with backups of previous versions.	meithecatte	8.882591	-6.3574715	comment	6.0	36.0	1702551580	-8.597033
38647318	I wish AMD or Intel would just ship 	I wish AMD or Intel would just ship a giant honking CPU with 1000s of cores that doesn't need any special purpose programming languages to utilize. Screw co-processors. Screw trying to make yet another fucked up special purpose language -- whether that's C/C++-with-quirks or a half-assed Python clone or whatever. Nuts to that. Just ship more cores and let me use real threads in regular programming languages.	Figs	9.310743	-5.2105823	comment	6.0	35.0	1702588334	7.9624324
38711632	> The jitter entropy technique relie	> The jitter entropy technique relies on differences in timing when running the same code, which requires both a high-resolution CPU cycle counter and a CPU that appears to be nondeterministic (due to caching, instruction reordering, speculation, and so on). There are some architectures that do not provide that, however, so no entropy can be gathered that way. Donenfeld noted that non-Amiga m68k systems, two MIPS models (R6000 and R6000A), and, possibly, RISC-V would be affected;So, I understand not wanting to break RISC-V support, but _should_ people really care about breaking compatibility with early 1990s MIPS chips and a 1979 Motorola CPU?	davikr	9.4588585	-5.620649	comment	6.0	26.0	1703095528	-10.417229
38724861	This is pretty funny. Intel bought A	This is pretty funny. Intel bought Altera, which forced AMD to buy Xilinx with all the zero interest rate money floating around. AMD's purchase of Xilinx made less sense because AMD is fabless, but Intel didn't end up doing anything with Altera. Its not clear if Altera even started using Intel fabs for its chips. AMD's Xilinx has been comparatively more successful, but I don't think that had anything to do with AMD.Maybe we can look forward to all the ZIRP semiconductor consolidations to unwind.	blackguardx	9.166042	-5.186274	comment	6.0	20.0	1703184346	7.9932714
38753170	My first Z80 assembly language progr	My first Z80 assembly language program	AlexeyBrin	9.708728	-5.560427	story	6.0	57.0	1703422552	-7.381986
38787322	The OP makes an interesting point bu	The OP makes an interesting point but it doesn't point out the main problem with high level hardware languages: these kind of languages don't allow you to describe the hardware you want exactly, they only allow you to describe their functionality and then they generate a hardware for said functionality. The problem is that you will end up with a hardware that is less optimized than if you were to design it in Verilog.I work at a very big semiconductor company and we did some trials with implementing the exact same hardware we had in Verilog but on an high level HDL and while development could be faster, we ended up with worse PPA (Power, Performance and Area). If you try to improve this PPA, you just end up bypassing the advantages of high level HDLs.On top of that, it raises a lot of ques	sweden	9.108607	-5.4981856	comment	6.0	19.0	1703714434	8.574245
38805300	My great confusion is why docker —-p	My great confusion is why docker —-platform linux/amd64 is so much faster (almost native performance) than x86 UTM VMs. Can docker somehow leverage Rosetta?	WanderPanda	9.679821	-5.9181767	comment	6.0	20.0	1703860378	9.968244
38871675	My guess: if the bitstream format wa	My guess: if the bitstream format was documented competitors would know how the device works and be able to prove their patents are being violated.FPGA vendors will also justify inertia in that current FPGA users don’t seem to be deterred by the bad tools because of the economics of their business.Some think a lot of hobby users would try FPGA if the toolset was easier to pick up but there are not enough of those folks to keep Radio Shack or even Fry’s alive and they will be buying $5-$150 parts, not the much more powerful $10,000-$100,000 parts.	PaulHoule	9.093	-5.3703117	comment	6.0	38.0	1704399315	8.357829
38884339	I'm not sure why there is an obsessi	I'm not sure why there is an obsession with 8-bit architectures for these sorts of projects. Are there no 32-bit CPUs with a simple architecture and easy programming model?  I say this as an old fart who has a great deal of nostalgia for the 8 and 16 bit days.  If I were teaching my kids computer architecture these days, I don't think I'd start with an underpowered, out dated arch.	01100011	9.594994	-5.190686	comment	6.0	22.0	1704486106	-7.6012645
38989558	Came across this while looking for s	Came across this while looking for simple languages close to the CPU, yet architecture independent? Sadly, seems like this one might be i386 specific.So, apart from Forth, any suggestion?	sph	9.703565	-5.543011	comment	6.0	24.0	1705232502	-7.4572067
39025479	It is so disappointing that ARM and 	It is so disappointing that ARM and RISC-V is adopting UEFI, we had a chance of a clean break, but noo, let's make persistent firmware level root kits easy and cross platform with EFI bytecode. Yep, network stack with hard coded web addresses in your firmware, brilliant idea. /rant	rwaksmunski	9.776289	-5.330611	comment	6.0	54.0	1705483947	-10.377981
32546472	Show HN: I made an easier version co	Show HN: I made an easier version control system	zdgeier	8.777618	-6.4066114	story	6.0	10.0	1661133346	-11.807302
32553678	Ran into the same exact thing at Cir	"Ran into the same exact thing at CircleCI.Me: My builds are really slowCircleCI: Here are a few very low effort answersMe: git checkout is taking literally 60 seconds, but it takes 3 seconds locally, why?CircleCI: Mumble Mumble.They charge per minute, so why would they care if builds are slow?  Was about a year of this getting worse and worse, till I finally cancelled the service last week and built my own server in my basement.I know get 200% faster builds, and the hardware payback time is not very long (6 months of my CircleCI bill?).I think it's a huge red flag anytime the metric you care about is something that being ""worse"" makes the provider more money."	brianwawok	8.82797	-6.4133906	comment	6.0	26.0	1661185547	1.6660748
32565701	If feel like at this point, Windows 	If feel like at this point, Windows is eventually going to switch to ARM it's just a matter of overcoming a lot inertia. ARM and RISC processors in general are now proven to be better than x86. If Microsoft invests in making Windows for ARM run well and provides a translation tool like Rosetta, it's game over for x86. That's no easy feat but at a fundamental level I don't really see a way for x86 to become actually competitive again against RISC processors.	keeganjw	9.658462	-5.267191	comment	6.0	40.0	1661266090	-7.8408923
32566073	For those of us whose CS background 	For those of us whose CS background doesn't go this deep, what about ARM makes it more performant than x86? Is it something at a theoretical level, or does it have to do with CPU manufacturing constraints/tradeoffs, or a simpler/more efficient instruction set?	cossatot	9.670792	-5.417281	comment	6.0	31.0	1661267535	-7.7365117
32607665	Without a company like Apple to put 	Without a company like Apple to put in the resources and engineering effort for something like Rosetta, there's really going to be next to no demand for a RISC-V based desktop computer outside of specialized development and maybe competing with ARM-based Chromebook-likes. Desktop systems are absolutely beholden to their platform and architecture because that's what determines which apps you can run. Any serious use of a desktop (that is not programming) basically needs to use Windows or Mac OS (think CAD, professional video editing, etc.) so you're not just convincing hardware manufacturers: you're convincing thousands of app vendors, and that's just not going to happen.	packetlost	9.624128	-5.404346	comment	6.0	37.0	1661522487	-10.541115
32651186	ARM Pointer Authentication [2017]	ARM Pointer Authentication [2017]	sacheendra	9.783474	-5.4292865	story	6.0	62.0	1661871060	-7.549186
32893964	What does RISC-V do computationally 	What does RISC-V do computationally better than the current ARM variants?	jjtheblunt	9.431974	-5.7086916	comment	6.0	22.0	1663558079	-10.535934
32901663	One could argue that emoji should ha	One could argue that emoji should have never been added to Unicode in the first place. Peaches and butts are images, pictures, illustrations, whatever - but they are not characters. There's no writing system which has a colored drawing of a peach as a character.	yakireev	9.855642	-6.2521462	comment	6.0	22.0	1663610310	-13.950968
32903242	What's with the code?I don't know mu	What's with the code?I don't know much about Minecraft, but I assumed the CPU would be built purely from blocks which act like transistors. Yet there's a part of the video where the show code written in-game(?). What's up with that? Isn't it cheating?	brap	9.678973	-5.3173428	comment	6.0	20.0	1663618241	-6.8234167
33035582	I see a lot of use of FPGAs in thing	I see a lot of use of FPGAs in things like cutting-edge machinery, warfare, and stock trading. Are there any cool hobbyist uses of these things? Always game to learn a new tech.	muttled	9.08769	-5.3439527	comment	6.0	21.0	1664549105	8.386185
33039036	AMD Zen 4 is faster with CPU securit	AMD Zen 4 is faster with CPU security mitigations enabled on Linux	simjue	9.251276	-5.2493258	story	6.0	128.0	1664563912	7.8809032
33039863	A very subjective opinion. CPU perfo	A very subjective opinion. CPU performance depends on many factors. The article does not give the results of `perf` performance tests. There are no given kernel parameters either at compile time or set late `sysctl` parameters. How is the RAM allocated to the CPU cores? How are IRQs used? Does RAM have support for error correction? The only fact the article claims is that by setting the `mitigations=off` flag in the system configuration there is some misbalance which can make certain tasks execute slower under certain conditions.Pardon my English, it's not my native language.	zazaulola	9.744757	-5.543497	comment	6.0	19.0	1664567343	7.9934034
33051964	For a specific example of latency in	For a specific example of latency incompetency that immediately came to mind while reading this: Chrome.Chrome will not run properly on first execution, as in ran for the first time after a cold start of the computer, when executed off a HDD. Why? Because the HDD takes too long to read off data. Chrome expects SSD latency and fuck your computer if it's not residing on one.When executed off a HDD, I've found Chrome only runs properly from second execution onwards after the underlying operating system has cached most of the stuff Chrome wants in RAM in anticipation of subsequent executions.I want to say this is optimization for ever more powerful hardware, but I'm inclined to say it's also sheer incompetency that Chrome literally can't fallback gracefully if it doesn't get data as quickly as	Dalewyn	9.899532	-5.2623534	comment	6.0	48.0	1664675246	7.7991614
33056192	To put things in context, Linus is b	To put things in context, Linus is being reasonable and wise and well-mannered once again. Wouldn't mind reading a few juicy expletives, to be honest.	throwawaybutwhy	9.280608	-5.890468	comment	6.0	22.0	1664721344	4.2304993
31815976	Do you trust Linus, though? He often	Do you trust Linus, though? He often promotes himself as without bias, but he very clearly hates Apple (except the watch). He also loves things he already understands (anything Microsoft). He's got heavy duty fanboyitis. And he's clearly someone you can buy demonstrated by his flip flopping AMD/Intel/NVidia praise.I don't think he outwardly lies (at least not in a way that matters), or anything, but he's got pretty good soft selling skills which he definitely uses for evil/to make money.All LMG channels are great. But to me anyways, they're great because they're basically comedies.	fartcannon	9.299479	-5.78501	comment	6.0	114.0	1655759443	4.1994357
31822456	RISC-V announces first new specifica	RISC-V announces first new specifications of 2022 adding to 16 ratified in 2021	snvzz	9.3684845	-5.6911535	story	6.0	181.0	1655808863	-10.574205
31864854	With the optics of _compiled_ code, 	With the optics of _compiled_ code, how do the various 8-bitters stack up? (6809/6811, 65C02, Z80, H8, ...)?  One would have to account for the frequency allowed by the ISA at iso-technologies (which makes including AVR somewhat tricky).I only have experience with Z80 and 65C02 and I believe the consensus is that a 4 MHz Z80 beats a 2 MHz 65C02, but neither is a particularly nice compiler target.	FullyFunctional	9.715626	-5.5777054	comment	6.0	42.0	1656087741	-7.5029764
31917699	I think there are a lot of misconcep	I think there are a lot of misconceptions here in other sub comments.For starters, the DRAM manufacturers may possibly be the biggest penny pinchers in the semiconductor business. They're too cheap to use differential signaling even on GDDR memory. I'm not saying that PCIe RAM is never going to happen, but as somebody who works with DRAM controllers and DRAM vendors, I can not fathom a world where DRAM manufacturers put a PCIe controller on each chip, especially one capable of Gen 6.0 speeds! The extra die area, complexity, and bringup testing necessary for a PCIe controller is insaneSecond of all, the latency would really destroy system performance. The DDR protocol is designed to minimize latency (well kind of, there are still speed targets that need to be met.) The whole point of using 	Lramseyer	9.688271	-5.236831	comment	6.0	25.0	1656491222	7.904338
31932979	"RPI Pico is irrelevant in my view.
S"	"RPI Pico is irrelevant in my view.
Seriously checkout RISC-V equivalence (there are many, I like the ESP32-C3)Linux on RISC-V is real, china is using & standardizing on it. Ditch arm, skip RPI, ignore STM-32, and scoff at TI, .. RISC-V is the future.While you're at it - skip micropython, skip the OS Linux - use RUST and target RISC-V directly.The cost of RISC-V is cheap and will only continue to plummet, nothing in the IOT space is going to compete with RISC-V except absurdly expensive niche proprietary solutions that were engineered before the blackhole-esque super-nova gravity hole that is RISC-V which is happening right now in the IOT space. I'm not even sure those will survive, ..The RISC-V options are only going to continue to increase.  I say this because China is using RISC-V for mo"	elasticventures	9.396925	-5.645168	comment	6.0	28.0	1656600258	-10.561195
31937133	RISC-V is getting MSIs	RISC-V is getting MSIs	azhenley	9.373745	-5.691113	story	6.0	129.0	1656616267	-10.534603
32074780	> I've been indifferent to all these	> I've been indifferent to all these sidechannel attacks since the original Spectre/Meltdown and continue to maintain my opinion that this is really not of any significance to a single-user PC. The original attacks worked in javascript that could be delivered by a browser to your single-user PC. Being able to steal secrets -- passwords, bank account information, ephemeral encryption keys to other sites -- is absolutely very significant to single-user computers.Dismissing it without consideration for mitigations is malicious IMO.	inetknght	9.75229	-5.5882177	comment	6.0	72.0	1657655289	-5.6719413
32150691	> Putting encrypted microcode into c	> Putting encrypted microcode into consumer CPUs was always a dumb idea.Serious question: which consumer CPUs have unencrypted microcode? AMD processors have had theirs encrypted for a decade, Intel for even longer, and nothing I've seen indicates that any ARM models have unencrypted microcode updates floating about.	jcranmer	9.571676	-5.315719	comment	6.0	19.0	1658234780	7.6981688
32394561	Since this is Hacker News and a lot 	"Since this is Hacker News and a lot of people here runs Linux, I want to remind everybody to hold your horses before you tested Linux on these machines.The machine that I'm currently using comes with a Ryzen 6800H CPU and LPDDR5-6400 RAMs, made by Lenovo. On Linux, the builtin keyboard don't work because of IRQ problems (See [1], a fix is also available at [2]), and it constantly spams out ""mce: [Hardware Error]: Machine check events logged"" messages.[1]: https://bbs.archlinux.org/viewtopic.php?id=277260[2]: https://lore.kernel.org/all/20220712020058.90374-1-gch981213...If you read the code in [2], the patch basically disables IRQ override for every new Ryzen machines (`boot_cpu_has(X86_FEATURE_ZEN)`). Based on that, I assume every new Ryzen CPU has the same problem(???)Edit: wait... blami"	nirui	9.315392	-5.1978645	comment	6.0	26.0	1660023837	7.922753
32396249	In 1997 I was doing an apprenticeshi	In 1997 I was doing an apprenticeship. It had a very well organized curriculum and well thought courses. One course was based on 8080/8085 cpu. You know what they gave us: A development board (roughly the size of a modern mainboard) with onboard hex keyboard 0-9a-f and 3-4 function keys (halt, run, write at ... something like that). And a book and templated paper. So the exercises, 3-4 hours every week, were: Implement that algorithm on paper in assembler, use the book to translate to hex code on your memory layout, hack the program into your board and press execute. And PRAY that you did not make a mistake in the assembler or the typing.I still think, that this is the most efficient way to teach kids CPU/Memory and assembler.	oaiey	9.666628	-5.3221974	comment	6.0	31.0	1660042835	-7.3607874
32428478	I remember reading an article about 	I remember reading an article about the iAPX 432 that went into extensive detail about the compounding effects of the design—I recall it describing how an operation with an small constant operand would be slow because the ISA didn't support immediates, and as a result you'd have to load it from memory, and there was not even a cache to help with that.Does anyone know this article? I've searched and haven't been able to find it, and it was definitely worth a read.	mattst88	9.605118	-5.5464153	comment	6.0	21.0	1660236484	-7.714432
32435615	Custom Processing Unit: Hook, patch,	Custom Processing Unit: Hook, patch, and trace microcode at the software level	todsacerdoti	9.640721	-5.4923773	story	6.0	75.0	1660290196	-7.334817
22148679	It is surprising, because I was unde	It is surprising, because I was under impression that Java has so many optimizations for x86 and ARM was so new that it's almost impossible to beat x86 without very significant investments. It's nice to hear that I was wrong.	vbezhenar	9.731953	-5.402872	comment	6.0	22.0	1579987147	-7.7718267
22164014	Again, I reiterate: it's not humanly	Again, I reiterate: it's not humanly possible to make performant, general purpose CPU that is 100% safe from instruction level attacks.Untrusted code execution must go, that's the only way.The genie is out of the bottle now. There will be more and more practical instruction level attacks with each year now.	baybal2	9.778384	-5.364602	comment	6.0	36.0	1580160725	7.729295
22267093	Say you created 32 dual vcore VMs wi	Say you created 32 dual vcore VMs with this, each with 2GB of RAM. How would they perform simultaneously together, vs a separate dual core PC (like a core2duo)? I don't know very much about the performance differences or if its even possible to compare such a thing.	ehonda	9.606992	-5.4165382	comment	6.0	22.0	1581090584	8.032727
23487654	FPGA: Why So Few Open Source Drivers	FPGA: Why So Few Open Source Drivers for Open Hardware?	caution	9.0939665	-5.3495464	story	7.0	98.0	1591874865	8.399043
23512986	> x86_64I don't know why people stil	> x86_64I don't know why people still use these crazy names. x86_64, x64, etc. The people who designed it call it AMD64. Let's call it that.	chrisseaton	9.713446	-5.41523	comment	7.0	42.0	1592084339	-7.740396
23514064	Is there any published rationale for	"Is there any published rationale for the RISC-V instruction encoding?A few months back I set out to write a software emulator of RISC-V for fun. I expected the instruction set encoding to lend itself well to a very simple implementation, eg. something you could decode in 5-10 lines of C plus some tables.But the instruction encoding is much more irregular than I expected: https://github.com/ucb-bar/riscv-sodor/blob/master/src/commo...In particular:    - The bit patterns allocated to the simplest instructions
      (eg. rv32i) seem random. Why not allocate starting from zero
      to allow dense jump tables?
    - I can't make any sense of the groupings. A bunch of instructions
      have 0b1100011 in the lowest bits, do these instructions have
      something in common?

I assume there is s"	haberman	9.560696	-5.7909803	comment	7.0	28.0	1592094505	-10.487251
23540469	AMD to Launch New Ryzen 3000 XT CPUs	AMD to Launch New Ryzen 3000 XT CPUs: Zen 2 with More MHz	zdw	9.233025	-5.197165	story	7.0	104.0	1592322081	7.8808565
23614271	>However, Rosetta doesn’t translate 	>However, Rosetta doesn’t translate the following executables: Virtual Machine apps that virtualize x86_64 computer platformsHow will this impact docker? Does this mean you can't run x86 docker containers on new Apple laptops?	marcinzm	9.690336	-5.8271456	comment	7.0	42.0	1592922295	9.9591055
23659658	> The x86 processor was able to run 	> The x86 processor was able to run the test successfully all 10,000 times, but the ARM processor failed on the 35th attempt.I think this issue might prove a problem in the long tail of desktop and server software running on ARM.A lot of desktop and server applications try to take advantage of all the cores. Many times, they are using libraries that were either implemented prior to C and C++ having defined memory models or else without that much care for memory model as long as it ran without issues on the developer computer (x86) and server (x86). Going to ARM is going to expose a lot of these bugs as developers recompile their code for ARM without making sure that their code actually adheres to the C/C++ memory models.	RcouF1uZ4gsC	9.645987	-5.3422747	comment	7.0	38.0	1593234610	-7.705221
23756437	> The Intel world has stagnated in r	> The Intel world has stagnated in recent years, and I look forward to seeing the CPU market jump ahead again.Really? AMD's recent moves with Zen/Zen2/Zen3/EPYC look like a big step forward. Zen2 chiplets are the biggest change in years. Zen3 IPC is supposed to be significantly better than Zen2 (17%).  The previous gen Ryzen was like 15w TDP, where as the A12Z in the Mac Mini ARM is 15w TDP, but the Zen crushes the A12Z Bionic on benchmarks.It's difficult for people to remember, but ARM came from really terrible performance to a spot where it is getting in the ballpark of x86, so the advancements look impressive, but that's like saying if I go from $100 to $200, the gains look impressive, whereas you only went from $10000 to $11000, it looks like you are standing relatively still in compar	cromwellian	9.27967	-5.197688	comment	7.0	41.0	1594104689	7.8084774
23768080	Ariane RISC-V CPU – An open source C	Ariane RISC-V CPU – An open source CPU capable of booting Linux	grlass	9.410888	-5.6135755	story	7.0	210.0	1594197789	-10.566154
23811057	The only thing I don't like about it	The only thing I don't like about it is how every line in this tweet ends in a 'fitting' emojiI'm not even that old (born in the 80s), but is that the style adults use now?	af65t34f75693	9.796008	-6.260595	comment	7.0	27.0	1594559383	-13.96032
23825270	Linus Torvalds banishes masters, sla	Linus Torvalds banishes masters, slaves and blacklists from the Linux kernel	Alupis	9.426014	-5.8330007	story	7.0	23.0	1594672305	-8.176865
23948009	Acorn Archimedes – A Technical Intro	Acorn Archimedes – A Technical Introduction (1987) [video]	pjmlp	9.601661	-5.212492	story	7.0	70.0	1595672064	-7.9414873
23950678	Inside the 8086 processor, tiny char	Inside the 8086 processor, tiny charge pumps create a negative voltage	zdw	9.597751	-5.3793597	story	7.0	129.0	1595696304	-7.5032387
23976634	I think most programming languages a	I think most programming languages and associated tools will start supporting ARM64 as a first class citizen. The current lack of support isn't due to apathy, just constraints around ARM64 not being popular for desktop development. For example, it's difficult to support a platform that isn't well supported by your CI/CD provider.Linus Torvalds previously said that ARM on the server would never be a thing since developers didn't run ARM on their personal machines. Since this assumption is no longer true, the ecosystem of tools will now support ARM better and we'll see ARM on the server become a major thing in a few year's time.	nindalf	9.705529	-5.26505	comment	7.0	80.0	1595949234	-7.8010345
23985626	What's the reason behind companies a	What's the reason behind companies adopting ARM instead of the open standard RISC-V? E.g. Apple designs its own chips, wouldn't it make more sense to use RISC-V instead of paying fees to ARM?	jiripospisil	9.389617	-5.5943923	comment	7.0	25.0	1596023613	-10.543428
24010232	This would be bad. Not because of th	This would be bad. Not because of the CPU business - I think RISC V will eventually make that irrelevant. Once CPUs are open source commodities, the next big thing is GPUs. This merger will eliminate a GPU maker, and one that licenses the IP at that.	phkahler	9.347856	-5.6494126	comment	7.0	86.0	1596212380	-10.563498
24074849	The advice to try a password of “Int	The advice to try a password of “Intel123” on any protected files says it all.This organisation genuinely deserves whatever is coming for them.	danw1979	9.4918375	-5.2438736	comment	7.0	25.0	1596744112	7.756591
24160468	One question about the Next. How fle	One question about the Next. How flexible is the hardware in being able to support emulation of other machines? Would it be possible to reprogram the FPGA to emulate say a C64?	klelatti	9.146048	-5.250526	comment	7.0	28.0	1597425037	8.296641
24174249	I for one would welcome this.  First	I for one would welcome this.  Firstly, as mentioned, it gives people incentive to look into RiscV.That aside, for far too long QCOM has had a monopoly on the phone chip market.  Patents aside, which increasingly became irrelevant due to the death of Sprint, their major advantage has always been in Adreno, which as far as I remember AMD basically did for them.  Mali is terrible.  If Nvidia could revamp ARM graphics at the spec level, we'd have real competition again from Samsung, Mediatek, and potentially others.	axaxs	9.282236	-5.4737196	comment	7.0	49.0	1597543709	-10.543167
24359950	>(the 10300-10900k are all the same 	>(the 10300-10900k are all the same chip with different parts turned off due to manufacturing errors)Wow. Is this a relatively new phenomenon, or something that's been the norm in processor mfg for a long time? I know that the Ks were usually just binned/higher tested chips so they'd unlock those and charge a premium for them, but the idea that they're disabling parts of the die and separating the chip offering that way is crazy to me. Are the parts being disabled redundant or are they reducing the instruction set space? I don't know anything about how any of that would work.	disillusioned	9.435235	-5.1999283	comment	7.0	21.0	1599095437	7.8290963
24379919	Why is RISC-V even so hyped up/succe	Why is RISC-V even so hyped up/successful? Other open ISAs precede it, and AFAIK the code density that RISC-V allows is disappointing considering the designers had an opportunity to start from scratch.	nsajko	9.3865	-5.677222	comment	7.0	33.0	1599261721	-10.556758
20081150	Everything Isa (2014)	Everything Isa (2014)	galfarragem	9.570968	-5.5178623	story	7.0	58.0	1559547362	-7.7075834
20204240	I dislike how much focus Apple and o	I dislike how much focus Apple and other companies put on Memoji's, Emoji's, Bitmoji's, Animoji's and all other shitty, cartoon representations of their users.	tomglynch	9.802336	-6.246074	comment	7.0	36.0	1560786930	-13.915142
20212940	That's outrageous...1. RE: FORTRAN. 	"That's outrageous...1. RE: FORTRAN. VAX FORTRAN was the most awesome implementation of FORTRAN ever. FORTRAN because these systems didn't have much RAM and CPU power was limited. FORTRAN went into the background for a while when the C fad began in the early 1980s; however, academics cringed at C for reasons that the industry would eventually learn ""the hard way"" and FORTRAN came back along with a government knee-jerk reaction called Ada and a pile of 4GLs starting with DATATRIEVE --up until processors and RAM allowed for more productive use of more powerful ""safe"" language systems (Java, C#, Python, Swift).2. RE: ITANIUM. DEC created VAX/VMS for the break-thru 32-bit VAX-11 architecture and then ported it to its break-thru 64-bit Alpha architecture and rebranded it as OpenVMS.  The Alpha c"	vaxman	9.748202	-5.5391755	comment	7.0	40.0	1560865802	8.58944
20221973	Debian Riscv64 port in mid 2019	Debian Riscv64 port in mid 2019	Oxynux	9.404502	-5.6892595	story	7.0	159.0	1560936639	-10.547164
20232134	You want notable ? AMD is currently 	"You want notable ? AMD is currently beating Intel on price, single threaded perf, multi threaded perf, TDP/power usage at equivalent performance AND on many of the ""little pluses on the side"" (more PCI-e lanes, ECC supports, ...).When Zen first came is was a huge deal, but it merely put them as a real competitors, with a decent advantage on many cases, reinforced with Zen+. But Zen 2 put them ahead in almost every category, and in all markets; threadripper and EPYC are just as strong in their areas.Either Intel has something strong about to appear, or they're going to face a truly difficult few years with customers going AMD now that it's not merely ""one generation of chip"" that was good. It feels like getting their 10nm working will not be enough by itself."	nolok	9.255068	-5.213367	comment	7.0	64.0	1561033432	7.918508
20250953	Can someone summarise why we should 	Can someone summarise why we should care about 32 bit sw other than old things that might not be ported?	gfiorav	9.870831	-5.2592916	comment	7.0	78.0	1561227824	-7.9227467
20383145	AMD Zen 2 Microarchitecture Analysis	AMD Zen 2 Microarchitecture Analysis: Ryzen 3000 and EPYC Rome	rbanffy	9.251629	-5.206555	story	7.0	112.0	1562597131	7.925513
20430333	I'd just like to say for anyone cons	"I'd just like to say for anyone considering one of these new processors, there are some downsides I wasn't expecting.  Overall I'm fine with them, but knowledge is power so here you go:1. RDRAND returns -1 (and sets the carry bit meaning it thinks -1 is a random number).  Supposedly this will be fixed in a BIOS update (which makes me think it's an intended mode wrongly turned on... a backdoor?)2. On linux, CPU monitoring (e.g. temperature) is not available as AMD hasn't published the specs on that yet3. While it has spectre ""mitigations"" (stibp, ibpb, ssbd), spectre is not yet dead (spectre_v1, spectre_v2, spec_store_bypass).4. There is a bug/oddity in how it deals with %fs: https://www.phoronix.com/scan.php?page=news_item&px=DragonFl...5. PSP/SEV ccp driver calls hang (on my machine at le"	mikedilger	9.56667	-5.555858	comment	7.0	50.0	1563053940	7.8537416
20541144	Some Criticisms of RISC-V	Some Criticisms of RISC-V	DyslexicAtheist	9.3802395	-5.702128	story	7.0	41.0	1564218846	-10.603321
20545401	Spaceman Diff: Diffing Images on the	Spaceman Diff: Diffing Images on the Command Line	pcr910303	8.811665	-6.4302225	story	7.0	84.0	1564278547	-11.664786
20566174	> the entire code base got forked, a	> the entire code base got forked, and the entire org is now held hostage by the dumbass.> Of course in a Good team, needless dependencies would be weeded out in code reviews, and a Culture would evolve over time avoiding needless dependencies.Really, the one consistent thing is that if you have a good team, you'll make it work no matter what tech or decisions you make (assuming you're also good enough to know when you've lost and change course), and if you're a bad team, you're doomed to failure, because, well, you're bad (by definition).I think this article also vastly underestimates the cost and annoyance of the tooling of CI'ing a large number of repos, especially if you have to match or do some kind of cross product on the feature branches. (such as, repo A branch B can only be built 	cbanek	9.058001	-6.4042425	comment	7.0	29.0	1564502549	6.0045204
20633161	Any CPU can only have one hypervisor	Any CPU can only have one hypervisor running at a time. Thus the recursion stops pretty quick.	Danieru	9.870594	-5.4873004	comment	7.0	27.0	1565170711	7.8959923
20652786	I don’t think even enthusiasts can f	I don’t think even enthusiasts can fully engage a 64 core device with  any meaningful uses that a 32 core wouldn’t suffice.This is a server chip that excels at virtualization.	r00fus	9.652386	-5.2734284	comment	7.0	21.0	1565344079	7.892848
20657650	Game of Trees: A Version Control Sys	Game of Trees: A Version Control System for OpenBSD	LaSombra	8.882096	-6.3760314	story	7.0	114.0	1565379710	7.6243834
20720111	Highlights from Git 2.23	Highlights from Git 2.23	digitalnalogika	9.066382	-6.3014727	story	7.0	168.0	1565992638	12.722508
20732867	Dirty tricks 6502 programmers use	Dirty tricks 6502 programmers use	nurpax	9.620029	-5.402774	story	7.0	305.0	1566162437	-7.3522716
20739639	> The 46,225 square millimeters of s	> The 46,225 square millimeters of silicon in the Cerebras WSE house 400,000 AI-optimized, no-cache, no-overhead, compute cores> But Cerebras has designed its chip to be redundant, so one impurity won’t disable the whole chip.This sounds kinda clever to a semi-layperson. Has this been attempted before? Edit: at this scale. Not single-digit cores CPUs being binned, but 100k+ CPU core chips with some kind of automated core-deactivation on failure.	groundlogic	9.426922	-5.2142286	comment	7.0	26.0	1566235118	7.71577
20823339	16-bit RISC-V processor made with ca	16-bit RISC-V processor made with carbon nanotubes	Tomte	9.343881	-5.5568113	story	7.0	135.0	1567021393	7.45058
20849272	Why the Emoji Was Inevitable (2017)	Why the Emoji Was Inevitable (2017)	dnetesn	9.795677	-6.268516	story	7.0	16.0	1567291338	-13.955068
25484251	I think the narrative around instruc	I think the narrative around instruction set is a bit overblown. I was a chip architect for the shader core at a major GPU company. I worked on simulators and modeling performance for next generation chips where we changed the ISA for each family of chips. The big reason why Apple Silicon is so damn fast is because they were able to shape the design at modeling time exclusively around Mac system level workloads. At best, Intel would have some subset of traces come from Apple for important traces to optimize for. Combine getting to narrow traces down exclusively for one platform, and heterogeneous design space (cpu + coprocessors) and you can really tune a monster.	enos_feedler	9.572618	-5.2195983	comment	7.0	36.0	1608444360	7.796746
25485083	> The sum of a large number of small	> The sum of a large number of small engineering improvements, coupled with a lot of component integration detail work, topped off by some very shrewd supply chain arrangements.I think the vertical integration they have is a major advantage too.I used to work at arm on CPUs. One thing I worked on was memory prefetching which is critical to performance. When designing a prefetcher you can do a better job if you have some understanding or guarantees as to the behaviour of the wider memory system (better yet if you can add prefetching specific functionality to it). The issue I faced is the partners (Samsung, Qualcomm etc) are the ones implementing the SoC and hence controlling the wider memory system. They don't give you detailed specs of how that works, nor is there an method where you can d	gchadwick	9.795434	-5.28723	comment	7.0	22.0	1608457712	8.201497
25547198	Homebrew: AVX instructions in Big Su	Homebrew: AVX instructions in Big Sur bottles crash when run in Rosetta 2	thibautg	9.783068	-5.3706465	story	7.0	54.0	1609024193	-8.054707
25554865	Macro-op fusion is something that is	Macro-op fusion is something that is really quite painful to implement in the front-end. Essentially once you have both macro-op fusion and potentially multiple micro-ops for a single instruction you have fully variable length instructions. Potentially it becomes worse than x86, where macro-op fusion has no need to be pervasive, you just have to cover very few simple cases (eg. cmp+jmp). For RISC-V even trivial things like 'load a 32 bit constant' need macro-op fusion to be competitive with x86.An 8 wide front-end for ARM64 needs to run a decoder every 4 bytes (so 8 in total), then combine the results. It's an entirely trivial affair.For RISC-V, without any macro-op fusion, you first need a unit every 2-bytes that determines the instruction length using the first 2 bits (16 of these), then	jleahy	9.597299	-5.796081	comment	7.0	46.0	1609108515	-10.456939
25559145	Undocumented arm64 ISA extension pre	Undocumented arm64 ISA extension present on the Apple M1	ytch	9.700305	-5.250265	story	7.0	260.0	1609163495	-7.6649456
25622842	Good news is that for DDR5, ECC is a	Good news is that for DDR5, ECC is a required part of the spec and should be a feature of every module:https://www.anandtech.com/show/15912/ddr5-specification-rele...	zdw	9.4600315	-5.4860673	comment	7.0	27.0	1609692380	8.252929
25622545	I beg this, every time this conversa	I beg this, every time this conversation comes up it’s the same answer “I don’t see a problem”.It’s so easy to chalk these kind of errors to other issues, a little corruption here, a running program goes bezerk there- could be a buggy program or a little accidental memory overwrite. Reboot will fix it.But I ran many thousands of physical machines, petabytes of RAM, I tracked memory flip errors and they were _common_; common even in: less dense memory, in thick metal enclosures surrounded by mesh. Where density and shielding impacts bitflips a lot.My own experience tracking bitflips across my fleet led me to buy a Xeon laptop with ECC memory (precision 5520) and it has (anecdotally) been significantly more reliable than my desktop.	dijit	9.641257	-5.547903	comment	7.0	151.0	1609690070	8.168408
25626134	I can't help but think most commenta	I can't help but think most commentators haven't actually read the article or the patent. This isn't about having an FPGA embedded into the CPU or near the CPU, it's about having a programmable FPGA like execution unit that can be programmed to be say a 4-bit floating point adder, or any other weird execution unit one might need.Why is this important? Have a program that does a lot of integer multiplications? Let's program all of these programmable execution units to multiply integers on the fly, etc. Now your integer multiply throughput is higher, as per the current program's needs.Have lots of weird old x86 instructions you are forced to support but no one actually uses? Don't waste transistors on them just program an execution unit to execute that instruction on the fly, etc.I think it'	dhruvdh	9.138964	-5.3315806	comment	7.0	38.0	1609715067	8.233587
25645356	I am glad they are using System Veri	I am glad they are using System Verilog. It is hard for me to understand why SiFive chose Chisel as RTL language. I think that quietly slows down the RISC-V adoption. I honestly tried to understand the advantages of Chisel, but I can not see any. There is an answer on Stack Overflow regarding Chisel benefits, it is just embarrassing [1].[1] https://stackoverflow.com/questions/53007782/what-benefits-d...	choletentent	9.182038	-5.5185194	comment	7.0	26.0	1609854043	8.480298
25813800	Creating Comfy FreeBSD Jails Using S	Creating Comfy FreeBSD Jails Using Standard Tools	kettunen	9.747074	-6.3941126	story	7.0	123.0	1610910450	10.462298
25869880	Incompatible Timesharing System	Incompatible Timesharing System	rbanffy	9.899197	-5.469558	story	7.0	71.0	1611306856	-7.7430153
26048018	A one-bit processor explained: rever	A one-bit processor explained: reverse-engineering the vintage MC14500B	picture	9.552248	-5.2173514	story	7.0	144.0	1612632046	-7.146689
26074189	Processors Under Pillows	Processors Under Pillows	xyanb	9.491047	-5.2046847	story	7.0	67.0	1612848119	7.790844
26211540	SnowFS – a fast, scalable version co	SnowFS – a fast, scalable version control file storage for graphic files	karateka	8.865852	-6.3827124	story	7.0	86.0	1613891790	8.740174
26321027	RISC-V is ready to take on Intel and	RISC-V is ready to take on Intel and AMD	amazbennett	9.369066	-5.6384315	story	7.0	25.0	1614720360	-10.565995
26390274	I have one of the purple MIPS SBCs f	I have one of the purple MIPS SBCs from back when MIPS was briefly owned by Imagination (https://en.wikipedia.org/wiki/Imagination_Creator https://elinux.org/MIPS_Creator_CI20).  Slow as hell even back in 2014.  I wonder if one day it'll be a museum piece :-?	rwmj	9.471581	-5.530206	comment	7.0	25.0	1615231280	3.0890317
26418739	Honest question: how well do HLS too	Honest question: how well do HLS tools actually work in practice?Maybe this is completely wrong, but I have this gut instinct that they must be extremely brittle. That's based on being a CPU/GPU compiler person and knowing, for example, how many difficult problems are still out there for automatic GPU code generation. I find it really hard to imagine that with all the additional challenges you get with FPGAs, that you'd be able to make this really work for anything beyond the most bare-bones examples. (But I'll admit that I don't really know what I'm talking about.)Anyway, it's good that it's open source. Hopefully more of the magic will be open to public inspection now.	eslaught	9.098218	-5.437392	comment	7.0	24.0	1615424084	8.553721
35541123	I don't understand the hype around A	I don't understand the hype around ARM64 in the server space. Is this just due to all the marketing from Apple around their proprietary M processors leaking into the enterprise market?The latest Xeon and EPYC offerings are very performance competitive, I doubt we need to overhaul and entire processor ISA paradigm for continued improvements.	lopkeny12ko	9.648576	-5.20468	comment	7.0	27.0	1681312425	-7.7492785
35678032	AMD’s 7950X3D: Zen 4 Gets VCache	AMD’s 7950X3D: Zen 4 Gets VCache	zdw	9.258262	-5.2050567	story	7.0	100.0	1682269276	-3.263774
35982037	A minimal operating system (2K LOC) 	A minimal operating system (2K LOC) on QEMU and a RISC-V board	lioeters	9.468049	-5.6152015	story	7.0	87.0	1684362524	-10.451694
36006993	This makes no sense to me.  Backward	"This makes no sense to me.  Backward compatibility is a huge competitive advantage for Intel, and IMHO, it's royally messed up that vm86 mode doesn't work in 64-bit mode.One DOS application I use was hurt by this: ""old DOS OrCAD"".  It works well in Windows-XP on a 32-bit machine, but does not work at all in 64-bit Windows.  (It's actually a 32-bit DPMI program and has drivers to use Windows GDI so you don't have to mess around with drivers).More evidence: IBM 360 mainframe software still works in Z/OS.It might be worth it for non-generic computing devices like cell phones, but Intel missed the boat there already."	jhallenworld	9.774343	-5.2534623	comment	7.0	37.0	1684531281	-7.938585
36149994	It means anyone launching amd powere	It means anyone launching amd powered virtual machines on cloud providers can experience this now, at any point, and you don't know when it will happen, given this type of CPU could have been bought, booted or rebooted anytime in the past three years.Seems comparably problematic to me.	gchamonlive	9.603453	-5.2437234	comment	7.0	36.0	1685621001	7.7665343
36223887	How does software these days target 	How does software these days target all the different CPUs with different instructions?If I download, say, debian-11.7.0-amd64-netinst.iso - does it somehow dynamically adapt to all the different AMD and Intel CPUs and uses the instructions available on the users machine?	TekMol	9.715136	-5.5954843	comment	7.0	38.0	1686122493	7.952304
36382606	A question that maybe HN can help me	A question that maybe HN can help me answer: are there any new instruction set architectures since, say, 1985 that are CISC? (Excluding, of course, ISAs that are extensions of previous CISC ISAs.)	kens	9.553512	-5.7030106	comment	7.0	31.0	1687111112	-10.425424
36398147	I am a happy owner of a Tigerlake (I	I am a happy owner of a Tigerlake (Intel 11th Gen) Framework laptop. I've considered upgrading to a 12th or 13th Gen motherboard, and while I have no doubt they'd be great for me as a Gentoo developer with the greatly increased core counts, my hesitation is that the new CPUs have AVX-512 disabled.Maybe this doesn't matter, almost certainly wouldn't for most people, but I'm compiling the whole system myself so the compiler at least has the freedom to use AVX-512 wherever it pleases. Does anyone know if AVX-512 actually makes a difference in workloads that aren't specifically tuned for it?My guess is that given news like https://www.phoronix.com/news/GCC-AVX-512-Fully-Masked-Vecto... that compilers basically don't do anything interesting with AVX-512 without hand-written code.	mattst88	9.454205	-5.5421844	comment	7.0	38.0	1687220500	8.077334
36461173	A interesting reading related to thi	A interesting reading related to this is the thoughts of Linus about AVX-512 back in 2020: https://www.phoronix.com/news/Linus-Torvalds-On-AVX-512My conclusion (feel free to enlighten me if I am wrong) is that a system will profit by having more cores instead of AVX-512 for the same power consumption.	cientifico	9.441019	-5.5189095	comment	7.0	47.0	1687630365	8.028158
36534144	I have this weird architecture I'm e	"I have this weird architecture I'm emulating that I call a bit-grid.[1] The basic idea is an FPGA with NO routing fabric at all... just a 2d grid of look up tables that take a single bit input from each neighbor, and output a single bit to each, which means each look up table holds 64 bits (4*16 possible input states) of ""program"". Clocking is in two phases (like the colors of a chess board) to prevent all manner of grief, and make it easier to think about. Each phase is NOT Turning Complete, but the grid is.So, I can emulate this thing on my desktop PC at about 28 nSec/cell using some Pascal code[2].  I'm thinking that if I upgrade to a machine with AVX512 instructions, it might get radically faster.  What I can't figure out is how this instruction actually works, and what gains I would a"	mikewarot	9.185289	-5.437842	comment	7.0	24.0	1688130350	8.269141
28706131	Ampere Altra Max 128-Core CPU Is Pri	Ampere Altra Max 128-Core CPU Is Priced Lower Than Flagship Xeon, EPYC CPUs	ksec	9.478329	-5.236588	story	7.0	77.0	1633008969	7.8595324
28727052	If software was developed the way po	"If software was developed the way politicians pass laws, Linux would get one master commit every few years with thousands of unrelated things in it, from typo fixes to sketchy telemetry, with a 1500 pages long description, and the commit would be branded as ""build security better"". The review would be a months long show where maintainers of all factions with their own agendas would try to negotiate behind the closed doors. Linus would be advocating for splitting the ""pile of garbage"" into individual commits, but the agitated mob (who thinks Linux is a game on Xbox) would be trying to bully him on Twitter for having a different opinion."	akomtu	9.405833	-5.8492827	comment	7.0	24.0	1633163693	-8.509095
28768042	Does anybody have informed opinions 	Does anybody have informed opinions about the future of RISC-V? The pace of development in the space seems frantic (though early) and the IP situation seems like it's ripe to eventually become a major force in processor ISAs.	bane	9.395161	-5.6636467	comment	7.0	38.0	1633483553	-10.570565
28783839	I feel like X64 doesn't get enough l	I feel like X64 doesn't get enough love these days. I think new tutorials should be X64 first and then after you get a hang of it talk about X32. It's harder the other way around, especially when it comes to calling conventions.	badrabbit	9.76271	-5.495208	comment	7.0	33.0	1633597081	-7.674299
28784335	I sometimes wonder whether assembly 	"I sometimes wonder whether assembly code would even be considered ""scary"" today if IBM had picked the Motorola 68000 instead of the Intel 8088 for their PC.The x86 instruction set was a cobbled-together mess from day one, while 68k assembly coding was pure joy because of its elegant and consistent instruction set."	flohofwoe	9.651283	-5.3358192	comment	7.0	53.0	1633601302	-7.550473
28909762	A fair warning to developers: You're	A fair warning to developers: You're getting into an adventure with M1.From docker images not built for M1 with segmentation faults on qemu (eg. Liquibase for spring developers), to _significant_ troubles trying to make React native apps build with the M1 and XCode.Don't get me wrong, I have a Macbook air M1 and I love it, but it hasn't been a love without pain.Also, the magsafe feels like it comes too late. Almost like a political feature in response to the EU measure of enforcing a single charging cable.	sergioisidoro	9.556651	-6.3916926	comment	7.0	33.0	1634583031	10.001851
28934239	What compiler could even make use of	What compiler could even make use of 10 cores? Most build processes I've run can't even fully utilize the 4 cores.	semicolon_storm	9.551434	-5.318941	comment	7.0	24.0	1634754651	7.956817
28976729	In TNG, we have a story where a tran	In TNG, we have a story where a transporter malfunction results in two Rikers. They cannot both be the original Riker, and there is nothing to point to one of them being the original over the other, so the logical conclusion seems to me to be that neither is the original, meaning the original Riker has to be gone.	hvdijk	9.380971	-5.694545	comment	7.0	33.0	1635073321	-10.583192
29143054	What use case do you have for your M	What use case do you have for your Mac?  The benchmarks and battery life have been tempting me, but I use Docker a lot which I'm hearing mixed messages for, and to be honest, my Intel-based work Mac is less palatable to use than my personal Ubuntu setup, especially in regards to workspaces, and some weird Bluetooth issues.	grp000	9.581361	-6.412914	comment	7.0	38.0	1636316033	-8.099892
29263079	What kind of applications are these 	What kind of applications are these very low cost, low gate, FPGAs used for?	teruakohatu	9.083271	-5.367422	comment	7.0	30.0	1637221519	8.358262
29313669	Slightly offtopic, but perhaps someo	Slightly offtopic, but perhaps someone here can shed some light:What are the best hobbyist use cases for FPGAs?  Most of the stuff I do can be accomplished with microcontrollers or embedded systems like RPi, I imagine FPGAs become more important when you're doing things like DSP or hard realtime requirements, which don't come up super often in hobbyist projects.I'd like to do more hobby projects involving FPGAs so what sorts of things might low cost FPGAs be useful for in that realm?I'm thinking of building a clock that integrates a local atomic oscillator, outputs from an embedded system running ntpd, and drives a local VFD as a sort of orientation project.	sneak	9.085532	-5.3578196	comment	7.0	22.0	1637631251	8.373273
12555160	Linus on btime: “Let’s wait five yea	Linus on btime: “Let’s wait five years” (2010)	wener	9.296627	-5.875643	story	7.0	73.0	1474529899	-7.935845
12605730	The day that the C64 will break, the	The day that the C64 will break, they have to migrate to a “modern” solution that requires 10 Ghz CPUs with 1024 cores, 20 TB of RAM, that will be running on NodeJS that will have have a MongoDB database for transaction and that will communicate with a VBA script running on the same host in a virtual machine with Windows 2016 through Redis running in a container thanks to Kubernetes.	rullopat	9.806106	-5.312636	comment	7.0	33.0	1475160896	-7.9851375
12645955	1024 64-bit cores?  Cool.  Very impr	1024 64-bit cores?  Cool.  Very impressive.64 MB on-chip memory?  For 1024 cores?  That's 64 K per core.  That seems rather inadequate... though for some applications, it will be plenty.	AnimalMuppet	9.599635	-5.2307644	comment	7.0	34.0	1475689069	7.935555
12794451	"For my money, Linus's example of ""go"	"For my money, Linus's example of ""good taste"" gives up rather a lot of clarity to achieve succinctness. The original is simple and clear. His preferred version is shorter, but also harder to understand because of its use of a complicated indirection. And that's not good taste. It's just showing off.“Programs must be written for people to read, and only incidentally for machines to execute.”
― Harold Abelson, Structure and Interpretation of Computer Programs"	johan_larson	9.309321	-5.877449	comment	7.0	28.0	1477465024	4.0182357
12829561	Good Enough Practices in Scientific 	Good Enough Practices in Scientific Computing	privong	9.891515	-5.2109165	story	7.0	143.0	1477832589	1.5575439
13017478	Open-V: The World's First Open Sourc	Open-V: The World's First Open Source RISC-V-based 32-bit Microcontroller	msl	9.421772	-5.6304555	story	7.0	38.0	1479847404	-10.528923
13073045	Quick Question: If anyone wants to l	Quick Question: If anyone wants to learn programming an FPGA is learning C only way to go ? how hard is to learn and program in verilog/VHDL without electrical background ?If anyone suggests links or books, please doThank You	technological	9.062507	-5.438639	comment	7.0	29.0	1480529223	8.455025
13122790	Liberouter Combo Cards – FPGA boards	Liberouter Combo Cards – FPGA boards focused on network data processing	kerdop	9.095129	-5.3346734	story	7.0	77.0	1481121601	8.358635
13129321	I'll take a fully open-source comput	I'll take a fully open-source computing device with Core2Duo-like performance any day, especially if the CPU is open source too. I'm just hoping it won't have any firmware blobs.Would this being built on RISC-V help with getting a formal CPU spec?	cryptarch	9.415936	-5.630287	comment	7.0	31.0	1481189526	-10.548214
13145245	VC++ /arch:AVX option – unsafe at an	VC++ /arch:AVX option – unsafe at any speed	jsnell	9.460362	-5.5920115	story	7.0	42.0	1481370827	8.0709505
13178957	A version control system should be s	"A version control system should be simple.  Engineers should be able to focus on getting things to work/done, not battling with a complicated, confusing version control system.Most engineers should be performing two operations/two command s the vast majority of the time:check-in <latest change>
check-out <latest version> or <last good version>If a file is new, check-in should ask you if you want to add it to the project.That should be it.The proliferation of tutorials, cheat sheets, books, front end user interfaces like SourceTree for Git is a symptom of a problem.KISS  (Keep It Simple Stupid)"	NumberSix	8.789391	-6.3814244	comment	7.0	31.0	1481743983	-11.788587
13199988	ARM extends HPC offering with acquis	ARM extends HPC offering with acquisition of Allinea Software	drydot	9.583782	-5.2751527	story	7.0	70.0	1481966802	-7.779423
13208804	Hackaday project owner here...The id	Hackaday project owner here...The idea of the project is the fun of playing around with electronics, something I have not done before, and trying to understand everything about a real computer. Starting with the CPU and then building it out with a simple graphics card. After that create an assembler/compiler for RISC-V and write a small OS. Yes, all of these will be relatively simple and not of a commercial standard, but building a machine and watching it run with all the hardware and software written from scratch is the longer term goal.	PhilWright	9.39951	-5.6309156	comment	7.0	31.0	1482110469	-10.525308
13284005	East Asian character emojis – “the f	East Asian character emojis – “the fuller” story	jmadsen	9.826869	-6.255467	story	7.0	71.0	1483100191	-13.938915
13382101	The Mill architecture has lots of id	The Mill architecture has lots of ideas which are really good on paper. We've had the same situation before, around 2000 with Itanium. There were many parts of that CPU which looked good on paper. In hindsight, the Itanium was too complex.Commercial viability of the architecture depends on how X86-64 and ARM fares in the coming years. If they stagnate and can't produce faster single-CPU cores and people continue writing software which lives in a single-core world, then there is a room for a CPU delivering a 10-fold increase in performance per watt per dollar.If on the other hand, most of the heavy computation are moved into either SIMD-style GPUs, or MIMD style Adapteva (Parallela) like solutions, where you have a thousand cores, then the Mill is less likely to have success.I'm optimistic 	jlouis	9.591052	-5.5065975	comment	7.0	57.0	1484228636	7.975479
13407141	"The real question is ""what do we do "	"The real question is ""what do we do with a lot of CPUs without shared memory?"" Such hardware has been built many times - Thinking Machines, Ncube, the PS2's Cell - and has not been too useful for general purpose computing.One of the simplest cases for broad parallelism is search where most of the searches fail. The required intercommunication bandwidth is low - you start up all the machines and wait for somebody to report success.  Bitcoin miners and crypto key searchers are extreme examples.  Problems which can be hammered into that form parallelize well.Some problems that distribute spatially parallelize well on such hardware.  Weather prediction, wind tunnel simulation, nuclear explosion simulation - hydrodynamics problems like that can be handled in sections, with communications only f"	Animats	9.596844	-5.2088156	comment	7.0	43.0	1484523331	8.169269
13416759	I remember the furore when Intel int	I remember the furore when Intel introduced a unique CPU identifier in the Pentium 3. Now they have a microprocessor and OS running as a computer subsystem on every Intel server and laptop which is able to do pretty much what it likes with your system and people don't bat an eyelid.Don't get me wrong, I love some of the benefits like remote control of my servers, fan speed control, monitoring of temps and voltages etc. but I do think we've given up a LOT of security for the sake of convenience. It wouldn't take much for a well crafted worm or heck a simple script to disrupt a whole network of ME/AMT enabled clients and servers.	leonroy	9.487022	-5.1927614	comment	7.0	40.0	1484654490	7.8224163
13449009	RISC-V 64-bit Linux in JavaScript	RISC-V 64-bit Linux in JavaScript	mbroncano	9.428661	-5.6837463	story	7.0	98.0	1484977535	-10.547348
13531566	I love htop. But I can't figure out 	I love htop. But I can't figure out a way to disable the CPU monitors. I use a machine with 768 cores which makes it kind of useless.	torrent-of-ions	9.740897	-5.261712	comment	7.0	25.0	1485878035	7.86627
13538624	> Since a 64-bit processor processes	"> Since a 64-bit processor processes more data at a time than a 32-bit processor, you get faster performance.Is this true? If I recall correctly, 32-bit to 64-bit doesn't always necessarily mean ""end-user performance improvements."""	markcerqueira	9.825314	-5.435435	comment	7.0	37.0	1485928489	7.8961205
13570655	Does anyone know where you can    1)	"Does anyone know where you can    1) find SPARC systems
    2) find what you need to do to initialize all components on a SPARC system

I'd love to write an OS for a SPARC machine one day"	gravypod	9.937981	-5.5762463	comment	7.0	21.0	1486265152	8.120215
27559515	AMD Is Working on Its Own Hybrid x86	AMD Is Working on Its Own Hybrid x86 CPU: Patent Filing	GordonS	9.378084	-5.2405725	story	7.0	69.0	1624100368	7.777995
27588738	Acorn Archimedes A3020 – Refurb and 	Acorn Archimedes A3020 – Refurb and Mods	sohkamyung	9.626336	-5.217405	story	7.0	82.0	1624344725	-7.9209466
27628764	Intel to Create RISC-V Dev Platform 	Intel to Create RISC-V Dev Platform with SiFive P550 Cores on 7nm in 2022	rbanffy	9.374382	-5.6495147	story	7.0	121.0	1624613925	-10.657573
27798015	Part of this article touches on why 	"Part of this article touches on why I don't use emoji[1] - I don't know what they will look to the recipient most of the time. At least with emoticons/kaomoji, I have a decent idea. In most cases, it probably doesn't matter, but I can see it causing a miscommunication in some circumstances.[1] Side question: what's the accepted plural of emoji in English? ""Emojis"" looks wrong to me, but I suspect that's because I speak a little Japanese."	stordoff	9.788296	-6.2687263	comment	7.0	22.0	1625969998	-13.96095
12014519	Be aware of potential problems if yo	"Be aware of potential problems if you split control of software configuration management (e.g. 
having software documents is maintained by a 
project or company configuration management 
group, and the source code version control handled 
by the programmers). It may be difficult to 
keep the documents (e.g. design) synchronized with the code.  Someone with configuration 
management experience should be “in charge” of 
the source code, to enforce change control and 
comprehensive documentation of changes.Great idea, forbid normal developers from officially changing the source code and let an expert handle this important matter. Don't even think about using a modern VC system, IBM has fully integrated Enterprise SCM(tm) ready for you.Change control is an important part of developing safe sof"	adrianN	8.884604	-6.425006	comment	7.0	26.0	1467359877	-11.817314
12065681	The Renewed Case for the Reduced Ins	The Renewed Case for the Reduced Instruction Set Computer: Avoiding ISA Bloat	ingve	9.751241	-5.639383	story	7.0	69.0	1468160894	-7.6581736
12159377	RISC-V on an FPGA, part 1	RISC-V on an FPGA, part 1	ashitlerferad	9.368908	-5.649896	story	7.0	3.0	1469461116	-10.61516
12169401	This is important work. And the auth	"This is important work. And the author is not wrong about the sad state of hardware description through verilog. One of the reasons I chose to use VHDL over verilog was that it was somewhat more robust in terms of complete implementations you could get (especially cheaply)I find it interesting that ARM is doing this now versus all along. Was V8 the point where their licensees revolted and said ""Hey, your spec is full of bugs, we're not going to pay a license fee for this crap."" ?"	ChuckMcM	9.107414	-5.5022426	comment	7.0	42.0	1469574664	8.542553
12335374	ARM v8-A with Scalable Vector Extens	ARM v8-A with Scalable Vector Extensions: Aiming for HPC and Data Center	pella	9.649405	-5.337516	story	7.0	69.0	1471863193	-7.801784
12351884	So realistically, does processor arc	So realistically, does processor architecture matter today from the custkmer's point of view? I mean performance and all that matters, but presumably that will be offset by market forces. But for example I rent a couple of ARM servers from Scaleway as well as a whole bunch of x86-64 servers from various providers, and they all can do all the same stuff. So why is it that x86 is the chip data centers prefer when they could have a variety of chips and let the customers and the market choose?	IgorPartola	9.6011	-5.241344	comment	7.0	27.0	1472045930	-7.784081
18966479	Intel 80386, part 1: Introduction	Intel 80386, part 1: Introduction	nikbackm	9.56135	-5.289521	story	7.0	141.0	1548139682	-7.542698
19049826	I sometimes wonder if it would be po	I sometimes wonder if it would be possible for CPUs to have, in addition to their full speed cores, a small part dedicated to parallel tasks with drastically lower speed, but a very high number of cores. Like a tiny graphics card, but with an x86 architecture and less driver problems.	antoineMoPa	9.576322	-5.329378	comment	7.0	28.0	1548975136	7.9974055
19104853	PDP-1 FPGA Implementation in Verilog	PDP-1 FPGA Implementation in Verilog, with CRT, Teletype and Console	rbanffy	9.130843	-5.4374743	story	7.0	133.0	1549543519	-7.3477736
19132242	So my guess is that Chisel is one of	So my guess is that Chisel is one of the many responses to the two horrors that are VHDL and Verliog.Unfortunately, Chisel is built on Scala, and I have no interest in learning Scala. Though I'm intrigued by the claim of using generators and not instances, and would be interested in a white paper that explains it in PL-agnostic terms (PL: programming language).Also have on my to-do list MyHDL [1], a Python solution to the same problem. (has anyone tried it and found to be better than VHDL/Verilog?)[1] http://www.myhdl.org/	fizixer	9.124176	-5.503057	comment	7.0	41.0	1549862128	-11.137442
19136921	We're all processor geeks around her	We're all processor geeks around here, right?AMD Ryzen is a good architecture at a good price. But compared to Intel, there are two important differences IMO:1. pext / pdep are emulated -- It takes many cycles for pext and pdep instructions to be executed, while Intel can execute them once per clock. This is a crazy awesome instruction for any low level programmer, and its a shame it isn't possible to utilize it on AMD Zen processors.2. Zen is a bit slower with 256-bit AVX Instructions.----------Bonuses:1. Zen offers more cores per dollar2. Zen offers two AES-encryption units per core. This means you can run two AES-instructions per clock tick. Dunno why AMD does this, but its kinda cool in some obscure cases I've coded.	dragontamer	9.279891	-5.226556	comment	7.0	32.0	1549910027	7.8798027
19171757	No. The paper notes that Spectre can	No. The paper notes that Spectre can, and will in the future be able to defeat all programming language level techniques of isolation. With properly designed OoO, Spectre cannot defeat process isolation. The fundamental lesson that everyone must take to heart is that in the future, any code running on a system, including things like very high-level languages running on interpreters, always have full read access to the address space of the process they run in. Process isolation is the most granular security boundary that actually works.Or in other words, running javascript interpreters in the same address space as where you manage crypto is not something that can be done. Running code from two different privilege levels in the same VM is not something that can be done. Whenever you need to 	Tuna-Fish	9.726226	-5.6573567	comment	7.0	47.0	1550245325	7.8508363
19312496	omg.100K/sec was achieved by yours t	omg.100K/sec was achieved by yours truly 10 years ago on a contemporary xeon with nothing but nginx and python2.6 - gevent patched to not copy the stack, just switch it. (EDIT: and also a FIFO I/O scheduler)Why does this require 36 cores today??	lstodd	9.632337	-5.350815	comment	7.0	36.0	1551808565	7.9346504
19339467	"You could look at this as ""CPUs are "	"You could look at this as ""CPUs are cheap, of course we can afford to leave them idle."" But a more interesting angle is, ""For one programmer's hourly cost, you could run 4000 CPU cores continuously. Can there really be no practical way to apply thousands of cores to boosting the programmer's productivity? What are we missing?""For instance, couldn't https://github.com/webyrd/Barliman develop into something that makes computing worth spending on at that level?"	abecedarius	9.630271	-5.2768064	comment	7.0	54.0	1552064853	7.9450765
19544437	> I've seen companies not using sour	> I've seen companies not using source control> ...all changes are being made directly on the production servers via SFTPI know this used to be common, but recently? Curious how often this is still the case.	Reedx	8.763019	-6.3212085	comment	7.0	24.0	1554133038	-11.676753
19835068	Elk is the easiest way to start buil	Elk is the easiest way to start building decentralized hardware projects	karanbhangui	9.141514	-5.374124	story	7.0	32.0	1557090476	8.362637
19875602	Google releases 53 gender fluid emoj	Google releases 53 gender fluid emoji	sahin-boydas	9.8014145	-6.2639303	story	7.0	19.0	1557470665	-13.989336
19912269	I wonder at what point the hardware 	I wonder at what point the hardware fix for these issues stop becoming worthwhile and if we'll see a resurgence of processors without speculative execution or any of these other speed ups.	faissaloo	9.616458	-5.4513936	comment	7.0	41.0	1557858109	7.806331
19912080	Sorry for being naive. Are these kin	Sorry for being naive. Are these kind of CPU Securities vulnerabilities new? Why it is in the past 20 years we have had close to zero in the news ( At least I wasn't aware of any ) and ever since Spectre and Meltdown we have something new like every few months.And as far as I am aware they are mostly Intel CPU only. Why? And Why not AMD? Something in the Intel design process went wrong?  And yet all the Cloud Vendor are still buying Intel and giving very little business to AMD.	ksec	9.322842	-5.2378798	comment	7.0	35.0	1557857122	7.9072666
19950074	AMD Immune to MDS Vulnerabilities	AMD Immune to MDS Vulnerabilities	Boulth	9.304546	-5.2407136	story	7.0	218.0	1558218543	7.8760176
15755487	I wrote the email that prompted this	"I wrote the email that prompted this quite civil response. I'm very pleased with the outcome, because I think this clear statement of his position is a lot more useful for people to work with, rather than just assuming Linus hates security or something.I interpreted his response in practical terms as essentially being the following. Patch set merge 1 has ""report"" as default and ""kill"" as a non-default option. Patch set merge 2 has ""kill"" as default and ""report"" as a non-default option. Patch set merge 3 removes support for ""report"". This way we have the best of both worlds: we eventually reach the thing that actually adds real security benefit, which makes security folks happy. And we don't break everybody's computers immediately, allowing time for the more obvious bugs to surface via ""rep"	zx2c4	9.35323	-5.8715816	comment	7.0	30.0	1511342610	4.225842
15802492	I remember RISC's back in the late 8	I remember RISC's back in the late 80's/early 90's. CISC's bullied them away and we've been stuck in Intel's quagmire every since. Anytime there's an attack on the status quo, the established players feign concern and beat back the attack then return to the way things were (remember Negroponte's $100 laptop and the netbook response?)No idea how this will pan out.	milesf	9.425508	-5.695466	comment	7.0	27.0	1511908210	-10.523877
15810879	Seventh RISC-V Workshop: Day One	Seventh RISC-V Workshop: Day One	bshanks	9.379758	-5.712353	story	7.0	107.0	1511989803	3.5973232
15820708	Next time I consider a laptop, you m	Next time I consider a laptop, you made it tot the top of my list, even if it costs more.Hear that, Intel? I will put money where my mouth is. I am not sure I can afford any of these RISC-V chips and they are still alpha quality beyond the Talos, but those of my ilk will do their damndest to make you pay for tone deaf reaction.	616c	9.378542	-5.596903	comment	7.0	49.0	1512085407	-10.564216
15841835	Would it ever be possible to program	Would it ever be possible to program an fpga to run your HTTP server? So you'd have hardware that was specially designed for your program. Deploying code would just be about reprogramming the FPGA.	Callmenorm	9.123718	-5.357106	comment	7.0	26.0	1512368103	-3.854614
15843784	People are still using i386? I'd ass	People are still using i386? I'd assume even if they are, it's such a tiny minority that it shouldn't be an excuse to hold everyone else back.	jrs95	9.654622	-5.277898	comment	7.0	29.0	1512395748	-7.7924037
15947920	Emoji-list with emojis, names, short	Emoji-list with emojis, names, shortcodes, unicode and html entities	inex	9.841891	-6.2674336	story	7.0	88.0	1513547987	-13.95095
16016164	Intel ME is frequently featured here	Intel ME is frequently featured here on HN, but the general population is completely clueless.This is quite possibly the worst and most widespread computing vulnerability that has ever existed, and it's likely that Intel will just maintain the status quo until there's some sort of black swan event.	brndnmtthws	9.414793	-5.1937613	comment	7.0	49.0	1514394866	7.7594137
16029216	Intel ME: Myths and Reality [pdf]	Intel ME: Myths and Reality [pdf]	zkms	9.356179	-5.2108026	story	7.0	74.0	1514551673	7.7699347
16065916	"""These vulnerabilities affect many C"	"""These vulnerabilities affect many CPUs, including those from AMD, ARM, and Intel, as well as the devices and operating systems running them.""Curious. All other reports I've read state that AMD CPUs are not vulnerable."	chrisb	9.376153	-5.280326	comment	7.0	75.0	1515018472	7.845578
16069986	Page 154 says nothing about Intel. K	Page 154 says nothing about Intel. Kindly stop feeding the FUD.	phoe-krk	9.379696	-5.2211676	comment	7.0	26.0	1515070794	7.832184
16070098	Zhaoxin's x86 CPUs	Zhaoxin's x86 CPUs	Sami_Lehtinen	9.49674	-5.234815	story	7.0	134.0	1515071787	7.8146257
16072705	Well, that's true (at least for the 	Well, that's true (at least for the spectre attack). It's not a bug in Intel products. It's a bug in any CPU that uses branch prediction (please correct me if I'm wrong, this is my current understanding)	swsieber	9.801021	-5.806307	comment	7.0	64.0	1515090404	-7.420385
16075857	Why did CERT modify their vulnerabil	Why did CERT modify their vulnerability disclosure to remove the text:> Fully removing the vulnerability requires replacing vulnerable CPU hardware.Proof: https://webcache.googleusercontent.com/search?q=cache:rzc6iQ...This smells really bad to me, as if Intel pressured CERT into removing language that could have caused their market value to instantly vaporize as every consumer for the last 20 years joins a class action suit...	illumin8	9.5562935	-5.352947	comment	7.0	44.0	1515117158	7.7961397
16081803	Why Intel x86 must die: Our cloud-ce	Why Intel x86 must die: Our cloud-centric future depends on open source chips	rbanffy	9.482151	-5.1858997	story	7.0	59.0	1515187552	7.7596745
16085044	May be time for OpenBSD people ( if 	May be time for OpenBSD people ( if they have the resources ) to build a CPU from ground up with RISC-V?	ksec	9.424094	-5.651417	comment	7.0	36.0	1515242674	-10.530114
16107995	These two bugs (Meltdown and Spectr)	"These two bugs (Meltdown and Spectr) are really very speculative things. It is like when human beings became aware of astroid orbits they thought that earth is in danger of being hit by one. Now that is indeed a theoritical possibility but what are the chances? These two bugs have been existent for 20 years and there is no known exploits of them. In the GitHub demos also they mention that the demos will work only if ""For this demo, you either need the direct physical map offset (e.g. from demo #2) or you have to disable KASLR by specifying nokaslr in your kernel command line."" - So you basically start with a broken system to exploit these bugs."	john_teller02	9.77043	-5.511419	comment	7.0	32.0	1515519637	7.8057876
16130413	This is -- to say the least -- frust	"This is -- to say the least -- frustrating.  First, the busted  microcode is still available on the Intel Download Center[1], without any warning that they recommend that you not, in fact, install it. Second, the press release is still being evasive: they have not merely ""received reports""; they in fact know that it's causing issues, and the press release is avoiding the much stronger language that Intel is giving privately (namely, don't install this).The broken microcode is (at some level, anyway) forgivable; Intel's ongoing inability to communicate transparently and honestly with its customers during this crisis of its creation is much less so.[1] https://downloadcenter.intel.com/download/27431/Linux-Proces..."	bcantrill	9.5410385	-5.371815	comment	7.0	69.0	1515731431	7.7144346
16148400	Intel AMT flaw allows credential byp	Intel AMT flaw allows credential bypass	vermilingua	9.418113	-5.2690744	story	7.0	95.0	1515988965	7.7746444
16167702	How a 22-Year-Old Discovered Meltdow	How a 22-Year-Old Discovered Meltdown and Spectre	bloat	9.609121	-5.5600657	story	7.0	137.0	1516195878	7.729849
16185327	Reverse engineering FPGAs is like st	Reverse engineering FPGAs is like stealing a train. It might be fun, but the overall benefit is rather limited.Vidado isn't most comfortable tool, it does the job and handles all the primitives (memory controllers, clocking, transceivers, etc) very well. I wish somebody could design comfortable IP version control system.	lnsru	9.086503	-5.3888135	comment	7.0	45.0	1516358842	8.451818
16184747	However improbable: The story of a p	However improbable: The story of a processor bug	dsr12	9.651196	-5.3167224	story	7.0	162.0	1516348256	7.8019676
16196541	As the bitkeeper guy, I'm watching t	As the bitkeeper guy, I'm watching this with amusement.  Intel used BitKeeper for over a decade for their RTL and when they used BK things seemed fine.  We did everything that Intel wanted, at one point I realized we had taken $7M of revenue from other customers over the years and spent it on doing work for Intel.  And that was still not enough for them.They switched to git because free is better (we were a rounding error on a rounding in terms of cost to Intel, the most they ever paid us in a year is .00000004 of their revenue).But that was too much so they switched to git and it's been downhill for them ever since.I'm not an idiot, I don't think that the switch to git is the cause of their problems, their problems are self inflicted.  I'm just one of many many vendors that Intel has fuck	luckydude	9.221928	-5.3334193	comment	7.0	26.0	1516501131	-11.85047
16304460	Exploiting modern microarchitectures	Exploiting modern microarchitectures: Meltdown, Spectre, and other attacks [pdf]	anarazel	9.666103	-5.529979	story	7.0	211.0	1517773273	7.759565
16314523	Absolutely. It's very subtle humor. 	Absolutely. It's very subtle humor. Students of computer architecture consider x86 to be one of the least elegant architectures around. Its many warts include segment registers (originally a hacky workaround to stretch 64k of memory to 1M), and an extremely complex instruction encoding employing prefix bytes. Many of the legacy issues (such as not having enough registers) have been papered over, leaving traces behind. Many people felt that the complexity would doom the architecture, and that a cleaner, leaner RISC approach would win out.However, Intel has used their advantage in process technology to throw massive amounts of transistors to make up for the problems caused by all this complexity, and has done well. RISC has done well in the mobile space because those transistors tend to be p	raphlinus	9.484982	-5.606274	comment	7.0	23.0	1517892943	-10.489148
16371289	My prognosis as bit of an insider po	My prognosis as bit of an insider popping in and out of Shenzhen.All guns are pointed at _memory_Memory is an uncompetitive industry, a cash cow unseen in history, comparable only to oil. The SEL empire is built not on top of galaxy notes, but on a pile of memory chips.The easiest way to get an order of magnitude improvement right away is to put more memory on die and closer to execution units and eliminate the I/O bottleneck, but no mem co. will sell you the memory secret sauce.Not only that memory is made on proprietary equipment, but decades of research were made entirely behind closed doors of Hynix/SEL/Micron triopoly hydra, unlike in the wider semi community where even Intel's process gets leaks out a bit in their research papers.SEL makes a lot of money not only selling you the well	baybal2	9.789989	-5.3700004	comment	7.0	34.0	1518559774	8.149585
16430215	MeltdownPrime, SpectrePrime: Exploit	MeltdownPrime, SpectrePrime: Exploiting Invalidation-Based Coherence Protocols	gregorymichael	9.641688	-5.569199	story	7.0	96.0	1519227753	7.8106966
16510550	Linus seems to inspire a lot of poor	Linus seems to inspire a lot of poor and motivated reasoning - since Linux is successful, it must be because of his toxic personality. If a toxic personality is a requirement (or a major contributing factor) for a successful engineering product, in a world of exquisitely crafted engineering products we should expect to see toxic personalities everywhere. That we don't should have prevented a cult of personality from developing in a community that prizes logical reasoning. Maybe the lesson here is that no group of humans is immune to some set of biases.	yedava	9.331957	-5.8688574	comment	7.0	31.0	1520100133	4.245138
16577460	>All of the exploits require elevate	>All of the exploits require elevated administrator access, with MasterKey going as far as a BIOS reflash on top of that. CTS-Labs goes on the offensive however, stating that it ‘raises concerning questions regarding security practices, auditing, and quality controls at AMD’, as well as saying that the ‘vulnerabilities amount to complete disregard of fundamental security principles’. This is very strong wording indeed, and one might have expected that they might have waited for an official response.Extremely fishy. 1-day notice? Such aggressive wording without even the chance for AMD to address the concerns?	andrepd	9.369574	-5.28482	comment	7.0	126.0	1520959193	7.897559
16598045	This is crazymaking. I posted the Tr	"This is crazymaking. I posted the Trail of Bits technical summary earlier today:https://news.ycombinator.com/item?id=16595184Trail of Bits --- which has a reputation in the field approaching ""unimpeachable"" --- confirmed a series of serious vulnerabilities. Whether there are real findings involved in this report isn't in question, and hasn't been since the day of the announcement, when Dan Guido from Trail of Bits confirmed that they'd reviewed and confirmed the finding.It's ironic, or maybe it isn't, that after CTS-Labs published their findings in a manner basically optimized for innuendo than Anandtech has run a story that is basically composed of innuendo. Given how charged people's feelings about AMD seem to be, this is probably manna from heaven for them, and since CTS-Labs isn't publ"	tptacek	9.289264	-5.1871114	comment	7.0	72.0	1521165901	7.7207494
16984663	Drive-by Rowhammer attack uses GPU t	Drive-by Rowhammer attack uses GPU to compromise an Android phone	markdog12	9.62758	-5.637678	story	7.0	121.0	1525342980	-13.884579
17281736	As an outsider to 'enterprise-grade'	As an outsider to 'enterprise-grade' computing, I'm curious about situations where a high number of cores in a single processor would be superior to multiple processors with the same total energy draw sitting on a single motherboard?I can understand HPC applications where the high-speed interconnect on the chip would make a big difference.But in business applications where the cores are dedicated to running independent VMs, or are handling independent client requests, what is really gained? There would still be some benefits from a shared cache, but how large quantitatively would that be?	yomritoyj	9.60448	-5.3787827	comment	7.0	38.0	1528690594	8.076928
17295262	One thing that jumps at me is how ch	One thing that jumps at me is how childish and rude Linus is in his response. I think at that time he was 23 years old, so an adult.As a piece of advice to young people, try not to be rude and accept criticism with grace, as the Internet has a long memory and you'll probably not be respected enough for your achievements to be tolerated, like Linus is.	bad_user	9.27796	-5.8925447	comment	7.0	55.0	1528822870	4.307134
17295288	Linus is still rude or rather, blunt	Linus is still rude or rather, blunt. To be honest, though, i prefer blunt over fluff or politically correct way.Way more informative.	tehlike	9.278	-5.895904	comment	7.0	37.0	1528822977	4.2716107
17307792	Completely dropping all forms of spe	Completely dropping all forms of speculative execution means dropping overall performance to a tenth of today. There are really hard limits on how fast any operation, especially memory operations, can be done. The way we have made our CPUs faster is by making them do more operations in parallel, at all levels. At the lowest level, in straight line code, this very often requires speculation to achieve.Speculation is not fundamentally incompatible with security. It's just that literally everyone in the industry never though that leaking information out of speculative context was possible -- and so there is no hardening anywhere. Now that it was proven possible, people are rushing to find all the ways this can be exploited. New CPUs currently being designed will fix all these, and then eventu	Tuna-Fish	9.682028	-5.631396	comment	7.0	73.0	1528931252	-6.8748574
17417906	By the way, it's stupid that we stil	By the way, it's stupid that we still can't have user-defined emoticons.We could have enriched our online culture with a flourishing set of shared emoticons by now!	amelius	9.804996	-6.2540355	comment	7.0	28.0	1530201004	-13.959125
17434819	SiFive to release source code to ini	SiFive to release source code to initialize HiFive Unleashed RISC-V board	rwmj	9.374834	-5.670551	story	7.0	111.0	1530437162	-10.563691
17504498	Sadly it is still very long way to o	Sadly it is still very long way to open source laptop. Remember, processor or SoC contains not only RISC-V core, but also many peripherals. Some peripherals are easy to design (like UARTs and I2Cs), but gpu, pcie, ddr memory and networking aren’t. The question is who will deliver these as open source implementations. IMHO these are not attractive problems to solve in academia, because they are already available as commercial closed source products and lacks novelty.	lnsru	9.423962	-5.4153323	comment	7.0	65.0	1531283743	-10.530135
17586560	Intel advisory: https://www.intel.co	"Intel advisory: https://www.intel.com/content/www/us/en/security-center/advi...CVE-2018-3628 - ""Buffer overflow in HTTP handler""Affected processor list (simplified reordered by me to reflect relevance and improve readability):• Core i3/i5/i7, generation 1-8 (that is, all of them)• Xeon E3-1200 v5/v6• Xeon Scalable• Xeon W• Core 2 Duo vPro, Centrino 2 vPro"	nh2	9.506398	-5.353641	comment	7.0	80.0	1532265154	7.8656187
17588822	A survey of attacks against Intel x8	A survey of attacks against Intel x86 over last 10 years (2015) [pdf]	DoctorBit	9.659054	-5.3097534	story	7.0	86.0	1532292089	7.900032
17705074	Linus Torvalds on regressions	Linus Torvalds on regressions	Cmerlyn	9.332117	-5.8846397	story	7.0	68.0	1533635491	-8.137315
17708847	Intel has no chance in servers and t	Intel has no chance in servers and they know it	msh	9.340919	-5.185479	story	7.0	37.0	1533664283	7.7564526
17760423	We're at a stage where to be safe on	We're at a stage where to be safe on x86 we need to have multiple microcode and kernel layers to be safe.At which point do we agree the performance increases over the last 20 years have been built on sand and move elsewhere?	sofaofthedamned	9.71579	-5.3820148	comment	7.0	50.0	1534270461	-7.809486
17786361	Show HN: Favioli – Replace blank tab	Show HN: Favioli – Replace blank tab icons with unique per-domain emoji	Sephr	9.807209	-6.257648	story	7.0	94.0	1534554324	13.020211
17787525	The homogenization of scientific com	The homogenization of scientific computing (2013)	ehudla	9.927241	-5.242742	story	7.0	32.0	1534581736	8.108284
17837383	The MRISC32 – A vector first CPU des	The MRISC32 – A vector first CPU design	mbitsnbites	9.459459	-5.5477414	story	7.0	87.0	1535139990	-10.423544
21044885	So why is it important to have a mul	So why is it important to have a multisocket NUMA machine? Why not just save yourself a lot of hassle by having one socket? I know that the previous generation AMD machine had unavoidable NUMA but the new one doesn't.	bt848	9.627607	-5.348105	comment	7.0	25.0	1569197315	7.94103
21066665	Xilinx FPGA Board for Arduino	Xilinx FPGA Board for Arduino	achuwilson	9.10197	-5.360103	story	7.0	73.0	1569374910	8.431419
21069708	Oh yeah :- Before Snowden, if you sp	Oh yeah :- Before Snowden, if you spoke about these issues, you were dismissed as paranoid.- After Snowden, if you dismiss these issues, you are dismissed as hopelessly naive...Oh, also - considering all this - you can bet that Intel's Management Engine has likely been backdoored by the NSA, so using Intel's processors is not recommended, especially if you're a non-US company... (industrial espionage !)https://blog.invisiblethings.org/papers/2015/x86_harmful.pdf	BlueTemplar	9.428094	-5.197682	comment	7.0	124.0	1569411495	7.7006693
21170983	> processors are still proceduralExa	> processors are still proceduralExactly. I don't know why Haskell fanboys insist on abstracting us so far from the machine.  Declarative programming is really unhelpful because it says nothing about the order in which code executes.We live in a mutable physical universe that corresponds to a procedural program.  One thing happens after another according to the laws of physics (which are the procedural program for our universe).  Electrons move one after another around circuits.  Instructions in the CPU happen one after another according to the procedural machine code.The universe would never consider running 2020 before 2019 and a CPU will never execute later instructions before earlier instructions.Haskell fanboys talk about immutable data structures like it's beneficial to go back in ti	tome	9.707607	-5.643454	comment	7.0	26.0	1570355921	-6.9992833
21267693	Throwing multiple cores at the probl	Throwing multiple cores at the problem is not what I would call beating decades of optimized C. The author only utilizes multiple cores when he realizes the overhead of Haskell will not allow him to actually win. Author even admits the C program was more efficient. You can multi thread a C program as well, at which point it would retake the title.	Sysreq1	9.890482	-5.714588	comment	7.0	44.0	1571208056	8.294184
21305911	F# RISC-V Instruction Set Formal Spe	F# RISC-V Instruction Set Formal Specification	adamnemecek	9.475812	-5.7497926	story	7.0	122.0	1571595233	-10.559591
21326940	Having few instruction set architect	Having few instruction set architectures, or even one, enables quicker and more efficient software development by lowering barrier to entry (easier to learn and study just one ISA instead of many) and lowering the amount of maintenance and development work that has to be done on development infrastructure such as compilers.This is assuming royalties don't have to be paid to an ISA creator, which is a separate issue.A single ISA doesn't have to mean there is a single CPU vendor or CPU manufacturer.	tenebrisalietum	9.617012	-5.5663147	comment	7.0	30.0	1571768324	-7.703427
21383596	AMD is only superior when it comes t	AMD is only superior when it comes to performance for parallelized tasks, single thread performance is still owned by Intel.Also, your link is biased because it is well documented that AMD performance significantly improves with faster RAM and they used much faster RAM in the test only for AMD.That RAM is very expensive so you need to factor that in the total cost if you wanted fo be fair when doing price comparison as well.	ekianjo	9.252307	-5.2084827	comment	7.0	43.0	1572313481	7.9027567
21398038	SiFive Announces First RISC-V OoO CP	SiFive Announces First RISC-V OoO CPU Core	vanburen	9.375621	-5.664286	story	7.0	137.0	1572445288	-10.573401
21522414	> We are particularly worried about 	"> We are particularly worried about Intel's mitigation plan being PoC-oriented with a complete lack of security engineering and underlying root cause analysis, with minor variations in PoCs leading to new embargoes, and these ""new"" vulnerabilities remaining unfixed for lengthy periods. Unfortunately, until there is sufficient public / industry pressure, there seems to be little incentive for Intel to change course, leaving the public with a false sense of security. Slapping a year-long embargo after another (many news cycles apart) and keeping vulnerabilities (too) many people are aware of from the public for a long time is still a viable strategy.This is troubling."	xucheng	9.407688	-5.217637	comment	7.0	80.0	1573637704	7.751983
21608866	When emoji use follows a strict conv	When emoji use follows a strict convention (something like https://gitmoji.carloscuesta.me/), it can make it easier to scan a list of commits and get a rough idea of where the development focus is (i.e., hardening vs. feature development).	luketheobscure	9.777603	-6.2836003	comment	7.0	28.0	1574449767	-13.973682
21628278	Great review, but the highlight for 	Great review, but the highlight for me is that windows task manager view of CPU utilization. It's like looking at a spreadsheet:https://images.anandtech.com/doci/15044/3970X%20Task%20Manag...	stopads	9.782206	-5.2804832	comment	7.0	53.0	1574691446	7.741013
21628713	> optimized Intel compiler/libraries	> optimized Intel compiler/libraries nowAnd that's just cheating anyway. Intel's libraries refuse to use some instructions on AMD's CPU that the CPU supports, and instead downgrade to slower legacy versions. Cite[0].[0] https://www.agner.org/optimize/blog/read.php?i=49	Someone1234	9.475153	-5.3913903	comment	7.0	78.0	1574694507	-7.3054233
21636229	Good points. But it should be mentio	Good points. But it should be mentioned that, once you have your logic working in an FPGA, the additional step to make it ready for silicon is comparatively small. So I don't think it's too bad to confound the two.	Matumio	9.135493	-5.331318	comment	7.0	22.0	1574752783	8.273934
21699336	A friend of mine recently showed me 	A friend of mine recently showed me an instagram account that sold magic mushrooms. To place an order, you had to friend the account and send them a DM with a specific set of emoji.I couldn't believe it, might as well have been a public Venmo feed.	save_ferris	9.783094	-6.2604656	comment	7.0	25.0	1575430010	12.992271
21719583	Assuming both Intel and AMD implemen	Assuming both Intel and AMD implement performance monitors the same (i.e. same notion of instructions executed, which may be hard to measure with speculative execution), the comparison is still flawed because it doesn’t matter if Intel can do more instruction per cycle if AMD can produce more cycles in a span of wall time.> However, it is not clear whether these reports are genuinely based on measures of instruction per cycle. Rather it appears that they are measures of the amount of work done per unit of time normalized by processor frequency.That’s precisely why nobody really uses IPC as a way to compare processors. “How much work done per unit of time” is a much better measurement and I guess for historical reasons, people conflate it with IPC.But real textbook IPC is useless for compar	yifanlu	9.329251	-5.2189426	comment	7.0	45.0	1575611776	7.8307524
21733153	See the caveat at the end:> It is al	See the caveat at the end:> It is also possible that the resulting code path has some precision loss or other problems on AMD hardware. I have not tested for that!Intel doesn't test it either, which is why they disable it.You could argue that they should test and enable on AMD CPUs, but this isn't clearly scummy behavior (to me), it's not a zero cost decision they made solely to screw over AMD. Buying the hardware and testing it has a cost. It may not even be possible to test it to the same degree they test their own hardware. There may be modes, subtle differences between architecture versions, etc. that are hard to know about to test for.	creato	9.283253	-5.2162514	comment	7.0	71.0	1575759310	7.9631295
21750553	Ask HN: Do you think HN should add s	Ask HN: Do you think HN should add support for smileys?	anandnair	9.804231	-6.2638655	story	7.0	8.0	1575964625	12.966301
17883143	The pain that minimal version select	The pain that minimal version selection solves	ngaut	9.0555935	-6.3660536	story	7.0	59.0	1535692823	-11.66086
18057774	How FPGAs work, and why people will 	How FPGAs work, and why people will buy them (2013)	snaky	9.077903	-5.350239	story	7.0	207.0	1537798172	8.3084955
18058683	> FPGAs are a programmable platform,	> FPGAs are a programmable platform, but one designed by EEs for EEs rather than for programmers.This is the problem with FPGAs. Their performance and utility is not really disputed. Working with them is so un-ergonomic that it's frankly embarrassing.The EE world is notoriously closed/proprietary making it incredibly difficult to explore novelty or customize tooling to suit specific needs. The situation is reminiscent of the pre-gcc era proprietary C compilers. Sure synthesis / place and route are much harder problems than compiling to machine code but I would guess that fact amplifies the need.One can't really expect software's current development comfort without acknowledging its driving force (GNU/the free software movement).	davemp	9.084827	-5.3739786	comment	7.0	89.0	1537804100	8.379812
18094734	New Libre GPU Effort Based on RISC-V	New Libre GPU Effort Based on RISC-V	xvilka	9.303042	-5.5263295	story	7.0	78.0	1538152665	-1.8059015
18159675	How Does an Intel Processor Boot?	How Does an Intel Processor Boot?	bytefire	9.578818	-5.21308	story	7.0	178.0	1538904498	7.757278
18186060	CHERI: Capability Hardware Enhanced 	CHERI: Capability Hardware Enhanced RISC Instructions	luu	9.426464	-5.6934495	story	7.0	73.0	1539186756	-10.555893
18219944	RISC-V: More Than a Core	RISC-V: More Than a Core	walterbell	9.384871	-5.685781	story	7.0	135.0	1539613787	-10.5705
18277111	RISC OS is being relicensed under th	RISC OS is being relicensed under the Apache license	messe	9.405948	-5.6807775	story	7.0	98.0	1540233570	-10.573452
18308255	A Plan 9 C compiler for RISC-V [pdf]	A Plan 9 C compiler for RISC-V [pdf]	fanf2	9.427822	-5.7811203	story	7.0	137.0	1540552769	-10.563924
18334256	TinyEMU, a RISC-V/i486 VM for Linux 	TinyEMU, a RISC-V/i486 VM for Linux in the Browser	aparashk	9.497917	-5.6220293	story	7.0	130.0	1540879286	-10.567131
18403050	On FPGAs as PC Coprocessors (1996)	On FPGAs as PC Coprocessors (1996)	zpiman	9.116669	-5.3305454	story	7.0	55.0	1541631028	8.309963
18607450	5th December 1978: Acorn Computers L	5th December 1978: Acorn Computers Ltd Formed in Cambridge, UK	rbanffy	9.543932	-5.228126	story	7.0	77.0	1544010706	-7.8559012
18627269	My background is in the FPGA industr	My background is in the FPGA industry which gives an absolutely fantastic example of this exact dynamic. FPGA companies produce a new generation of chips every 3-5 years or so. There are only two companies, with market share split 60:40. In the last 2 decades we've seen one produce a fantastic product and the other screw up, and then it flips, and then it flips back. Over that time the market share of these companies went 60:40, 62:38, 58:42, 60:40. The actual number of customers who switch to the better product is tiny. Why?* All the existing knowledge in the company is about one platform, it's incredibly expensive to develop the skills on the other toolchain. Port all your software etc.* The existing products are all from one vendor so you save loads of effort if all the products are bas	Traster	9.09007	-5.350304	comment	7.0	111.0	1544187674	8.360237
18671721	BOOM Open Source RISC-V Core Runs on	BOOM Open Source RISC-V Core Runs on Amazon EC2 F1 Instances	ingve	9.391155	-5.6440873	story	7.0	122.0	1544703058	-10.587601
18692985	I realize it's not the focus of his 	I realize it's not the focus of his test, but as someone who thinks often about how to take advantage of advanced vectorization techniques on modern processors, I was surprised by statements like this:Moreover GCC -O2 defaults are (in my opinion unfortunately) still not enabling vectorization and unrolling which may have noticeable effects on benchmarks.This led to enabling AVX and since the global constructor now gets some code auto-vectorized the binary crashed on invalid instruction during the build (my testing machine has no AVX).No AVX? He wants to better take advantage of vectorization, but he's doing the testing on a processor that is 3 generations behind in vectorization support.   AVX (128-bit) come out in 2011, and has been followed by AVX2 (256-bit) and (still limited release) A	nkurz	9.670136	-5.807263	comment	7.0	35.0	1544967382	8.08726
18692729	So you need to dedicate two cores, m	So you need to dedicate two cores, making them unavailable for general-purpose tasks in order to reduce the syscall overhead for a single application?	kbwt	9.89918	-5.631259	comment	7.0	35.0	1544961239	8.292286
18887629	Raspberry Pi Foundation Announces RI	Raspberry Pi Foundation Announces RISC-V Foundation Membership	sadiq	9.367132	-5.6933174	story	7.0	69.0	1547244306	-10.623119
29838403	Don't forget it's not just instructi	Don't forget it's not just instruction sets; Intel is the reason we don't have ECC RAM on desktops. Every other high density storage technology has used error correction for a decade or two, but we're still sitting here pretending we can have 512 billion bits of perfect memory sitting around that will never go wrong, because Intel fuse it off on desktop chips. I guess only servers need to be reliable.AMD supports ECC on their consumer chips, but without Intel support it's never taken off and some motherboards don't support it, or if they do it's not clear in the documentation. I do use ECC RAM on my Threadripper machine and it does work, but I had to look for third party info on whether it would and dig around DMI and EDAC info to convince myself it was really on. It also makes it safer to	marcan_42	9.428795	-5.506129	comment	7.0	56.0	1641559186	8.1521015
30027322	Too many emojis in 'Concurrency and 	Too many emojis in 'Concurrency and async / await' explanation	ripbozo	9.836404	-6.2692475	story	7.0	66.0	1642787998	-13.960256
30107750	Magic-trace: Diagnose tricky perform	Magic-trace: Diagnose tricky performance issues with Intel Processor Trace	trishume	9.538144	-5.3653517	story	7.0	170.0	1643322133	7.8318486
30242495	Chip Red Pill: Arbitrary [Micro]Code	Chip Red Pill: Arbitrary [Micro]Code Execution Inside Intel Atom CPUs	blopeur	9.646336	-5.523513	story	7.0	189.0	1644227374	7.7508383
30273021	Regarding the interesting bit (to me	Regarding the interesting bit (to me) in there about the advantages of FPGAs over an SBC like the Pi (speed)- does anybody know of any blogs or projects where an FPGA's speed helped in a hobby project where software running on an SBC wasn't fast enough? I can imagine a few, mostly real-time projects involving expensive computations (image or pattern recognition maybe?), but I would love to see some concrete examples.	sillyquiet	9.122059	-5.356818	comment	7.0	31.0	1644417097	8.329234
30278161	"The distinction used to be ""Whether "	"The distinction used to be ""Whether the bus is exposed externally"".> Microcontrollers have SRAM, but so do processors. That's where the firmware runs before it gets the DRAM running.Which microprocessor architecture does this?"	blueflow	9.785741	-5.2645264	comment	7.0	52.0	1644439113	7.990442
30294821	Intel's Pay-as-You-Go CPU Feature Ge	Intel's Pay-as-You-Go CPU Feature Gets Launch Window	ahiknsr	9.406947	-5.205702	story	7.0	20.0	1644538138	7.8143215
30418629	On a slightly related note, chances 	On a slightly related note, chances are good anyone reading this has an 8051 within a few meters of them - they're close to omnipresent in USB chips, particularly hubs, storage bridges and keyboards / mice.  The architecture is equally atrocious as the 6502.btw: a good indicator is GCC support - AVR, also an 8-bit µC - is perfectly well supported by GCC.  8051 and 6502, you need something like SDCC [http://sdcc.sourceforge.net/]	eqvinox	9.559535	-5.209098	comment	7.0	32.0	1645466277	-7.4891915
30441513	Intel acquires Linutronix	Intel acquires Linutronix	HieronymusBosch	9.308042	-5.185814	story	7.0	199.0	1645627519	7.8045793
30609473	Talking of the new chips, it seems i	"Talking of the new chips, it seems interesting to me to note the difference in cache sizes. I know it is not a 1:1 comparison because of architecture difference but the 16 core 5955WX hasL1: 512 KB, L2: 8 MB, L3: 64 MBcompared to M1 Ultra's from the Geekbench dataL1: 128 KB instruction, 64 KB data, L2: 4 MBI have mostly forgotten my microprocessor architecture lectures but it seems interesting that even after being able to cache more data near a core, AMD is not gaining much. Maybe packing too much cache increases latency of access or the gains simply go away beyond a certain size.Edit:
Maybe even it is coming down to the cache layout. Does anyone know if the cache fetch times for the named levels are roughly the same across architectures?For x86, I remember L1 being a single cycle fetch a"	actuator	9.930685	-5.566294	comment	7.0	39.0	1646786065	8.10627
30687059	The post tangentially touches on a p	The post tangentially touches on a pet peeve of mine that I think lots of companies get fundamentally wrong these days: version control, CI, and deployment are separate concerns and shouldn't be jumbled together into an amorphous blob.If the build fails, you should be able to re-run it without pushing to version control. You can e.g. have builds fail due to issues with your artifact repository that don't require any changes to the code to debug/fix. You can have issues with deployment after the build completes, you don't want to have to rebuild to redeploy. The most shocking of all, though, and I have actually seen this: If you deploy a broken build, a rollback to an earlier version should never, ever, require a rollback on your source control.As always, it's very much a case of too much o	pdpi	9.100775	-6.3902955	comment	7.0	35.0	1647360433	-11.795171
33130299	An ARM based design would make sense	An ARM based design would make sense, except unlike Apple they'd have to buy a license. Apple has a perpetual license so they don't have to pay a thing and can do what they want with it. Like the M1 processor. But Intel does not have that. So, developing risc v in the background without committing to it, yet, makes a lot of sense. It might actually give them a path to come up with an answer to the M1 that isn't just a slightly more efficient x86 processor.Apple just demonstrated that changing CPU architecture is not that big of a deal; so the value of x86 compatibility isn't what it used to be. You can just emulate it and it's fine. Even for games apparently. So Intel, backing an architecture that is already starting to compete with arm that is free makes a lot of sense.AMD has the same ch	jillesvangurp	9.465198	-5.4585342	comment	7.0	37.0	1665211063	-10.50472
33134216	The article links to this PR comment	"The article links to this PR comment by Linus https://lwn.net/ml/linux-kernel/CAHk-=wie+VC-R5=Hm=Vrg5PLrJx... :> End result: no way will I accept this kind of completely arbitrary and
frankly not very intelligent patch.> If people want to disable console printing, that's THEIR CHOICE. It
could be a new config variable where you ASK people about what they
want. Not this kind of idiotic tying together of things.I thought Linus had committed to changing how he behaves in public forums? Even if he didn't like the patch, calling it ""unintelligent"" and ""idiotic"" doesn't accomplish anything. He could have just left the rest of the comments in there without using inflammatory language and it would have the same affect."	avl999	9.332064	-5.865897	comment	7.0	31.0	1665250096	4.1936984
33180963	I don't know a lot of the details, b	I don't know a lot of the details, but everything I've heard over the last couple of years indicated that AMD was absolutely crushing Intel.A recent laptop I purchased, as well as the last desktop I put together (~2 years ago) each have Ryzen chips. I forget the details but in addition to performance issues, didn't Intel CPUs also have some major security vulnerabilities? And was it that they were related to instruction-level performance optimizations that, when disabled to address the security vulnerabilities, led to even worse performance?So if AMD isn't doing great at the moment either, I can't imagine how hard Intel has been hit. I don't know anyone who is buying or recommending Intel CPUs at the moment.	gspencley	9.270788	-5.211246	comment	7.0	68.0	1665599119	7.812387
33221513	"Interesting.""how many emojis on ios"""	"Interesting.""how many emojis on ios"" - error""how many emojis on apple"" - error""how many emojis on windows"" - error""how many emojis on macos"" - working""how many emojis on lumia"" - error""how many emojis lumia"" - error""how many emojis on linux"" - working""how many ios emoji"" - working (albeit slowly)""how many emojis on messages ios"" - working""how many emojis on ipados"" - working""how many emojis in ios"" - error""how many emojis inside ios"" - error""ios number of emojis"" - working""how many emojis on i"" - working""how many emojis on ios has"" - error""how many emojis on ios has does"" - error""how many emojis on ios has does how has does how has does how"" - errorI'd hazard that a specific web page appearing in the results is probably causing this error - I would be very curious to find out which page th"	llui85	9.827104	-6.2629056	comment	7.0	42.0	1665901606	-13.949936
33221657	It seems that this site (emojipedia.	"It seems that this site (emojipedia.org) broke the Google.""how many emojis on ios -inurl:emojipedia.org""trying to exclude other sites does not work:how many emojis on ios -inurl:cnet.comhow many emojis on ios -inurl:wikipedia.org"	mirzap	9.809459	-6.2660546	comment	7.0	34.0	1665903432	-13.948826
33244633	Linus Torvalds to kernel devs: Grow 	Linus Torvalds to kernel devs: Grow up and stop pulling all-nighters	bubblehack3r	9.4152975	-5.854186	story	7.0	43.0	1666083066	-8.177656
33302035	10-cent CH32V003 RISC-V MCU offers 2	10-cent CH32V003 RISC-V MCU offers 2KB SRAM, 16KB flash, SOP8 to QFN20 packages	picture	9.401499	-5.6206045	story	7.0	107.0	1666471292	-10.543225
33329382	Filled out the whole thing and donat	Filled out the whole thing and donated at the end.  Made me realize how much benefit I've gotten from Emacs over the years and how little I'd given back.  I like that you can donate to maintainers of specific packages -- chose Magit, myself, because it's a major superpower of Emacs for me.Would like to see a link for current/past results.	eigenhombre	8.872864	-6.41412	comment	7.0	23.0	1666699502	-11.391195
33533675	> I hope Rosetta is here to stay and	> I hope Rosetta is here to stay and continues developement.It almost certainly is not. Odds are Apple will eventually remove Rosetta II, as they did Rosetta back in the days, once they consider the need for that bridge to be over (Rosetta was added in 2006 in 10.4, and removed in 2011 from 10.7).> And I hope what is learned from it can be used to make a RISC-V version of it. translating native ARM to RISC-V should be much easier than x86 to ARM as I understand it, so one could conceivably do x86 -> ARM -> RISC-V.That's not going to happen unless Apple decides to switch from ARM to RISC-V, and... why would they? They've got 15 years experience and essentially full control on ARM.	masklinn	9.699824	-5.34197	comment	7.0	67.0	1668010354	7.6021957
33684679	From the handful of RISC-V posts on 	From the handful of RISC-V posts on HN over the years I'm surprised to learn that RISC-V is still so nascent—to the point that simply hosting a webpage on top of it is bleeding edge.Is it being used for anything yet or is it mostly still in early development? Excuse my naivety, still excited for the tech. Great to see this progress regardless.Edit: and the song on the site, sounds like Dominican Bachata, like Anthony Santos or something.	devmunchies	9.373428	-5.6835194	comment	7.0	29.0	1668974503	11.0523405
33717323	Building a custom code search index 	Building a custom code search index in Go	boyter	8.852873	-6.0133877	story	7.0	118.0	1669198628	-11.321265
33722906	Building the PiDP-11 Dec PDP-11 Repl	Building the PiDP-11 Dec PDP-11 Replica Minicomputer	ecliptik	9.814042	-5.380635	story	7.0	47.0	1669228519	-7.4832435
33775511	AVX 512 has a number of instructions	AVX 512 has a number of instructions that make it useful for UTF-8 parsing, floating point parsing, XML parsing, JSON parsing, things like that.  It is tricky codinghttps://lemire.me/blog/2022/05/25/parsing-json-faster-with-i...All things that are good for HFT but also good for speeding up your web browser and maybe even saving power because you can dial down the clock rate.  It's a tragedy that Intel is fusing off AVX 512 in consumer parts so they can stuff the chips with thoroughly pizzled phonish low-performance cores.	PaulHoule	9.486831	-5.575596	comment	7.0	51.0	1669652457	8.078468
33775647	UH... didn't Intel actually stop inc	"UH... didn't Intel actually stop including AVX 512 in their newest (alder lake) processors? This seems unlikely. ie, https://www.tomshardware.com/news/intel-nukes-alder-lake-avx...>""Although AVX-512 was not fuse-disabled on certain early Alder Lake desktop products, Intel plans to fuse off AVX-512 on Alder Lake products going forward."" -Intel Spokesperson to Tom's Hardware."	superkuh	9.438382	-5.481236	comment	7.0	88.0	1669652969	8.030556
33807102	I found graviton to be a mixed bag. 	I found graviton to be a mixed bag.  It was certainly extremely fast when using the very high end instances and I tested it successfully using a Rust based message queue system I was writing and it got some ridiculously fast number like 8 million messages a second, from memory, using the fastest possible graviton instance (this was about 18 months ago).I did try to switch some of my database servers to it a couple of years ago and after random hangs, I gave up and went back to intel.  I tried again further down the track and same thing - random hangs.  I assume this sort of thing comes with a new architecture but I'd be hesitant to move any production infrastructure to it without extensive long term testing.In the case of graviton based GPU instances I found that the GPU enabled software I	andrewstuart	9.477327	-5.2157335	comment	7.0	43.0	1669839882	-8.282115
33831940	> Remember when RISC didn't have div	"> Remember when RISC didn't have division instructions because that was a complex microcode? I remember.> Over in CISC land, x86 'DIV' was...Don't forget that the same thing existed / exists in the CISC world.  In the ""old days"" floating point was an optional unit, not just on some Mainframes but on early x86s as well, with the 8087 unit, whose quirks were in the design of IEEE 754 (avoiding the quirks!).  Vector units and such were also external add ons.The guiding theme, if there is/was one of CISC architectures was the ability for people to write assembly code.  That's why there are all those string manipulation instructions and the like: think of those old instruction sets as basically ALU manipulation plus some convenience subroutines implemented in hardware/microcode.The breakthrough"	gumby	9.563163	-5.709914	comment	7.0	40.0	1669995630	-10.434584
33920900	Please, step me through this. In a s	"Please, step me through this. In a start-up:  a) Developer builds locally
  b) Developer tests locally
  c) Developer pushes to a repository
  d) CI starts
  e) CI ends
  f) Wait for human code review and approval
  g) Merge and deploy
  h) Observe that nothing broke / no need to revert.

Is it even possible for (e) - (d) to be short enough, let alone (f) - (d), to keep the developer's attention instead of context switching? Most devs I know just context switch immediately after (c). If you care about developer productivity, you're much more likely to get results from focusing on (a) and (b), by hooking development laptops into caching and restricting system/test scope, than you are by reducing CI times, unless your CI takes some ungodly amount of time to run (several hours).For point of c"	solatic	9.849155	-6.3788395	comment	7.0	30.0	1670591903	6.153148
33955549	We seem to be getting to the point t	We seem to be getting to the point that CPUs are no longer I/O bound. This is sort of the end of an era, since starting as early as the 2000s we entered a time when I/O (RAM, disk, network) was the main bottleneck for most forms of compute.	api	9.752526	-5.2931557	comment	7.0	41.0	1670858462	8.154828
26482304	Runj: Experimental, proof-of-concept	Runj: Experimental, proof-of-concept OCI-compatible runtime for FreeBSD jails	ingve	9.790994	-6.336037	story	7.0	192.0	1615926048	10.4796
26674405	Pretty neat. I have been thinking ab	Pretty neat. I have been thinking about how I can build a tiny NAS, but I would like ECC so that rules out the pi, etc.Best option I have found so far might be this ASRock 4x4-v2000 https://www.asrockind.com/en-gb/4X4-V2000M , it has an 8-core cpu and supports ECC. Would need to get a M.2 to 4x SATA adapter.  The hard part seems to be figuring out how to buy the board itself...	dshep	9.508381	-5.3444114	comment	7.0	35.0	1617388616	8.144104
26858409	AMD's EPYC Milan Breaks Cinebench Re	AMD's EPYC Milan Breaks Cinebench Record, Here's a 10nm Ice Lake Xeon Comparison	ItsTotallyOn	9.293416	-5.2047186	story	7.0	105.0	1618796733	7.8762507
26922353	Clever Hack Finds Mystery CPU Instru	Clever Hack Finds Mystery CPU Instructions	weare138	9.6612015	-5.3546076	story	7.0	144.0	1619240169	7.663218
27023319	New Spectre Vulnerability Beats Miti	New Spectre Vulnerability Beats Mitigations, Performance to Badly Drop After Fix	0-_-0	9.654135	-5.553866	story	7.0	70.0	1620036844	7.7479944
27048776	I've been wondering recently to what	I've been wondering recently to what extent formal verification could be used to simplify CPU hardware and ISAs. For example, MMUs are unnecessary if the OS verifies that all programs only access memory that's been allocated to it. This paper[0] seems to imply that the savings would be non-negligible. Also interrupts and context switching could be avoided if programs are cooperatively scheduled and verified that they always yield after an appropriate amount of time.Those two examples are the only ones I could come up with, but I suspect that's because I don't know very much about hardware design. Are people working on this or am I just off-base here?[0]: https://arxiv.org/abs/2009.06789	awelkie	9.688676	-5.5548487	comment	7.0	27.0	1620215712	7.843255
27074627	Part 2 of Interview with Linus Torva	Part 2 of Interview with Linus Torvalds	jeremy_a	9.29007	-5.875957	story	7.0	69.0	1620386123	-8.036938
27219152	Crash a Ryzen system in single line 	Crash a Ryzen system in single line of tweetable PowerShell	simon04	9.310163	-5.1948605	story	7.0	50.0	1621503132	7.921837
27402655	6502 “Illegal” Opcodes Demystified	6502 “Illegal” Opcodes Demystified	masswerk	9.805382	-5.5885715	story	7.0	90.0	1622873499	-7.469055
27485981	Perhaps run a complex “idle process”	Perhaps run a complex “idle process” that exercises the major functional areas of the CPU and can detect such failures so that such cores/cpus can be isolated / decommissioned. Really should be part of LinuxAnyone know of a suitable program for such a process?	paulsutter	9.89133	-5.4894776	comment	7.0	21.0	1623518919	7.929365
37596065	Funny enough, no matter how big thes	Funny enough, no matter how big these things get, they never seem to make me a lot more productive.If my CI build time at least would go down.Software is so slow compared to hardware. It's embarrassing that we haven't moved not even a hundredth of what hardware has the last 30 years.Why get this?	danielovichdk	9.269552	-6.3719473	comment	7.0	53.0	1695295650	6.0785975
37827535	I don’t quite have the courage to ph	I don’t quite have the courage to physically short pins, nor the patience to slowly overclock my RAM, waiting multiple minutes for DDR5 link training each time. So instead, I’m content with knowing that the memory controller is reporting that ECC is enabled.How about hitting the RAM with a warm stream of air from a hair dryer? I've seen that technique used in the past to generate errors.	Scramblejams	9.467705	-5.526683	comment	7.0	27.0	1696900889	8.264793
37944369	96 cores? Wild! Can the cores even s	96 cores? Wild! Can the cores even stay busy and fed with work to do at some point?	bfrog	9.537568	-5.2969384	comment	7.0	25.0	1697729878	7.966425
37997041	> The variable length instructions (	> The variable length instructions (currently 16 bit or 32 bit but 48 bit on the horizon) complicate instruction fetch and decode and in particular this is a problem for high performance RISC-V implementations.I want to see variable length instructions, but a requirement for instruction alignment.Ie. every aligned 64 bit word of RAM contain one of these:[64 bit instruction][32 bit instruction][32 bit instruction][16 bit instruction][16 bit instruction][32 bit instruction][32 bit instruction][16 bit instruction][16 bit instruction][16 bit instruction][16 bit instruction][16 bit instruction][16 bit instruction]That should make decode far simpler, but put a little more pressure on compilers (instructions will frequently need to be reordered to align - but a review of compiler generated code i	londons_explore	9.610713	-5.783162	comment	7.0	51.0	1698143440	-10.371245
38049043	The paranoid culture doesn’t seem to	The paranoid culture doesn’t seem to have served Intel very well for the past 10-15 years.	pavlov	9.273307	-5.186577	comment	7.0	23.0	1698493257	7.7366405
38156925	Someone in the previous thread menti	Someone in the previous thread mentioned programming fpga is very hard. Could anyone opine?	Havoc	9.076087	-5.3668246	comment	7.0	31.0	1699227354	8.410423
38162230	So FPGA prices have come down to hob	So FPGA prices have come down to hobbyist levels. Would someone point me toward hobbyist-level resources for programming such a device? Or is toying with machine code simply too tedious for achieving substantial results? My interest in these stems from the potential to hardwire inner-loop procedures that would otherwise have run atop a stack of multi-million LOC abstractions.	cwmoore	9.047631	-5.3715763	comment	7.0	24.0	1699276834	8.389098
38162543	Is anyone here aware of beginner fri	Is anyone here aware of beginner friendly learn-by-building style resources for getting into FPGA programming? Eventually, I would like to get to a point where I could build something like a DCPU-16 or maybe even an rv32mi core.	ksdme9	9.066273	-5.35967	comment	7.0	23.0	1699278731	8.373083
38230141	Loading up on cheap cores with updat	Loading up on cheap cores with updated Milan Epycs	rbanffy	9.433373	-5.2705073	story	7.0	62.0	1699709503	8.0031185
38238707	Downfall fallout lawsuit: Intel knew	Downfall fallout lawsuit: Intel knew AVX chips were insecure and did nothing	doener	9.382729	-5.191256	story	7.0	116.0	1699781008	7.7814326
38241260	I've wondered for a while: is there 	I've wondered for a while: is there a space for a (new?) language which invisibly maximises performance, whatever hardware it is run on?As in, every instruction, from a simple loop of calculations onward, is designed behind the scenes so that it intelligently maximises usage of every available CPU core in parallel, and also farms everything possible out to the GPU?Has this been done?  Is it possible?	mft_	9.592924	-5.3532867	comment	7.0	24.0	1699804631	7.9155817
38368481	Side note: Why does every GitHub rea	Side note: Why does every GitHub readme look like a children’s book these days? Emojis, big colorful graphics, gifs, cute project logo, etc. Makes me feel awkward trying to read about a serious topic with the “:o” emoji staring in my face. I’m just waiting for the air horns to start blaring and a dancing cat to slide across my screen.	astrea	9.764406	-6.267323	comment	7.0	24.0	1700594119	-13.961606
38443368	Unit testing on an 8-bit CPU	Unit testing on an 8-bit CPU	bertman	9.62343	-5.251746	story	7.0	68.0	1701157098	-5.965848
38595221	I don't really get why people are so	I don't really get why people are so excited about RISC-V. An open ISA doesn't really offer any additional freedoms to the user. It does not mean we get truly open hardware.This whole thing is just about Chinese companies not wanting to pay for ARM licenses anymore. Which is good for them but I don't get the excitement from tech people.Even if a RISC-V CPU would someday offer the same performance for the same price than an x86-64 counterpart, it would be a strictly worse deal, as software support will be so much worse. The x86 monoculture was an amazing time to live in and helped us enjoy so much backwards compatibility. The promised lower power-consumption might be nice but we will have to see how much the ISA really matters for that.	cardanome	9.419815	-5.5932617	comment	7.0	29.0	1702243575	-10.538263
14731089	Using chip memory more efficiently	Using chip memory more efficiently	redtuesday	9.810542	-5.2785053	story	7.0	81.0	1499626337	8.081154
14955693	A Systematic Analysis of the Juniper	A Systematic Analysis of the Juniper Dual EC Incident [pdf]	andreasley	9.522455	-5.338982	story	7.0	121.0	1502180665	-4.469685
14981989	Intel EOLs Atom Chip Used for Micros	Intel EOLs Atom Chip Used for Microsoft HoloLens	msh	9.534604	-5.2124934	story	7.0	94.0	1502386156	7.595017
14989551	The Man Behind AMD's Zen Microarchit	The Man Behind AMD's Zen Microarchitecture: Jim Keller	geezerjay	9.234969	-5.1876206	story	7.0	99.0	1502459062	7.837671
15013433	I have not really written much of Wi	I have not really written much of Windows code, so forgive my ignorance but: What is actually so hard about porting 32-bit -> 64-bit applications on Windows compared to Linux?	sannee	9.88752	-5.267782	comment	7.0	45.0	1502748277	6.904175
15118520	AMD Threadripper 1950X Linux Benchma	AMD Threadripper 1950X Linux Benchmarks	jjuhl	9.335382	-5.227047	story	7.0	84.0	1503942194	7.8988557
15172601	It's never been clear to why very si	It's never been clear to why very simple unikernels are better than running essentially the same code as a normal user program.	amluto	9.927298	-6.2160225	comment	7.0	53.0	1504586730	-12.3572235
15299067	In case you haven't already used the	"In case you haven't already used the following, please note that the NSA had an undocumented ""backdoor"" included which ""disables"" the ME. (Man, oh man, I wish I was making this stuff up.)http://blog.ptsecurity.com/2017/08/disabling-intel-me.htmlI put quotes around ""disables"" because the ME is not fully disabled. The blog's analysis does show how it is in a ""safe"" state, i.e. forced to ignore the outside world very early in its code path. Also, not likely to brick your computer, assuming unscrewing your case and using a SPI flash programmer hasn't already bricked your computer.Edit: ""backdoor"" in quotes too."	sounds	9.514138	-5.232549	comment	7.0	36.0	1505947879	7.891281
15304863	The rise of emoji	The rise of emoji	ascertain	9.793955	-6.2645745	story	7.0	29.0	1506010034	-13.958809
15337855	Intel Announces 8th Generation Core 	Intel Announces 8th Generation Core “Coffee Lake” Desktop Processors	grk	9.381182	-5.185047	story	7.0	89.0	1506427285	7.8616133
15400217	RISC-V based 64-bit quad-core applic	RISC-V based 64-bit quad-core application processor	wanderingjew	9.41403	-5.643686	story	7.0	255.0	1507123054	-10.555159
15423752	Linux Now Has Its First Open Source 	Linux Now Has Its First Open Source RISC-V Processor	mkesper	9.406483	-5.6232386	story	7.0	86.0	1507384270	-10.563715
15609987	John Johansen will survive. Linus ha	"John Johansen will survive. Linus has made it incredibly damn clear what ""no user space regressions ever"" mean. See f.e the similar rant from 2012: https://lkml.org/lkml/2012/12/23/75 And it is his kernel so it is his rules. John Johansen admitted he messed up (http://lkml.iu.edu/hypermail/linux/kernel/1710.3/02539.html) and promised to handle things better in the future so all is well."	bjourne	9.646015	-5.750737	comment	7.0	134.0	1509627774	4.4393864
15653115	ArchLinux ends i686 support	ArchLinux ends i686 support	kevlar1818	9.892043	-5.293789	story	7.0	68.0	1510153745	-8.589239
12408124	Am I seriously the only person on HN	Am I seriously the only person on HN who doesn't know x86 backwards and forwards? Because it seems from the comments like I'm the only one here that didn't know this.This was a good article, though.	qwertyuiop924	9.757914	-5.4724956	comment	7.0	37.0	1472757634	-7.707963
12426568	What is the value in continuing to s	What is the value in continuing to support Alpha, SGI, and PA-RISC?Were they cool in their day?  Sure.  But the consumer router you use to hook up an O2 or an Octane to the internet has a more powerful MIPS CPU.	coredog64	9.485456	-5.4915957	comment	7.0	32.0	1473021261	-10.389589
35233984	Got a question for Twitter's press t	Got a question for Twitter's press team? The answer will be a poop emoji	tjwds	9.793055	-6.2544394	story	7.0	49.0	1679329508	-13.94477
35278723	And if you scroll down you can see t	And if you scroll down you can see the glowing review that they got from Linus Tech Tips....Who owns a stake in their company...Yiiiikes.	agloe_dreams	9.322971	-5.829147	comment	7.0	29.0	1679594256	4.0660753
35413342	What’s most interesting to me about 	What’s most interesting to me about the i432 is the rich array of object types essentially embedded into its ISA. The JVM “knows” a little bit about virtual dispatch tables, monitors, arrays, but even that pales in comparison to the i432’s user-facing model of the CPU state.Is there anything comparable surviving today?	twoodfin	9.523263	-5.273691	comment	7.0	41.0	1680458662	7.6379437
35494619	Author here. Hopefully you're not al	Author here. Hopefully you're not all tired of the 8086 by now :-)	kens	9.620965	-5.413613	comment	7.0	23.0	1680969881	-7.492126
28601455	Thus begins the slide from RISC to (	Thus begins the slide from RISC to (what POWER/PowerPC ended up calling) FISC. It's not about reducing the instruction set, it's about designing a fast instruction set with easy-to-generate, generalizable instructions. Even more than PowerPC (which generally added interesting but less primitive register-to-register ops), this is going straight to richer memory-to-memory ops.	addaon	9.521913	-5.7101026	comment	7.0	45.0	1632191452	-10.508894
22316220	64 threads ought to be enough for an	64 threads ought to be enough for anyone.If I am investing USD 4000 on a CPU, I'd probably go for the EPYC part for 500 more and twice the memory bandwidth. It'd be interesting to run these benchmarks under perf to see how many L3 cache misses happen and how much they cost in cycles.	rbanffy	9.39307	-5.2339954	comment	7.0	28.0	1581582835	8.029545
22536208	TRRespass: Rowhammer against DDR4	TRRespass: Rowhammer against DDR4	mdriley	9.627702	-5.6577673	story	7.0	119.0	1583853887	-13.907832
22688731	Exceptional failure: breaking the ST	Exceptional failure: breaking the STM32F1 read-out protection	bcantrill	9.749514	-5.2829404	story	7.0	103.0	1585172094	7.349986
22951277	Please help me remove some of my ign	Please help me remove some of my ignorance:ARM = RISC?Intel = CISC?? = MIPS?What else is out there in large amounts?	csours	9.490208	-5.598818	comment	7.0	35.0	1587597919	-10.503124
23032039	Do they use those cores? Sure. But w	Do they use those cores? Sure. But when I’m playing a game (even a game that feels like it should be ripping threads like Factorio) I usually see that one core is pegged at 100% while the others are chilling around 40-60% (I have an overclocked 8700K). In my experience, single core performance is still the bottleneck (as far as CPUs are concerned) for gaming.	Uehreka	9.52394	-5.294559	comment	7.0	31.0	1588261152	7.948011
23033517	Writing a RISC-V Emulator from Scrat	Writing a RISC-V Emulator from Scratch	vcsilva	9.405147	-5.653297	story	7.0	130.0	1588267935	10.82887
23193608	I can't grok this trend at all. All 	I can't grok this trend at all. All these replies in the form of memes make me feel like I'm in the Darmok episode of Star Trek: The Next Generation.I'm grateful communication on MatterMost at my company has not seen the need for reaction gifs emerge; the wildest thing we have is a custom emoji of a dancing banana.	Freak_NL	9.770408	-6.234297	comment	7.0	61.0	1589557913	-13.953394
23243222	Do people actually use Docker and An	Do people actually use Docker and Ansible a lot for ML???Doing something custom on top of the GPU is also not much different on Windows, than Linux. CUDA is basically the same. OpenCL and Vulkan are available too.I'd like to hear perspective of a person, who actually does ML specifically on Linux for some reason.	lostmsu	9.453122	-5.610102	comment	7.0	24.0	1589947942	-8.655576
23267242	From a comment in the source> ORIGIN	"From a comment in the source> ORIGINALLY WRITTEN ON THE PDP-10 FROM
FEBRUARY 9 TO  APRIL 9 1975Wow! I did not realize that it was written so quickly. Two months that literally changed the PC landscape forever."	RcouF1uZ4gsC	9.831514	-5.2965856	comment	7.0	45.0	1590106435	-7.523326
29421042	So this is one tiny corner of the IS	So this is one tiny corner of the ISA, not something that makes ALL instruction sequences longer - essentially RISCV has no condition codes (they're a bit of an  architectural nightmare for everyone doing any more than the simplest CPUs, they make every instruction potentially have dependencies or anti-dependencies with every other).It's a trade off - and the one that's been made is one that makes it possible to make ALL instructions a little faster at the expense of one particular case that isn't used much - that's how you do computer architecture, you look at the whole, not just one particular caseRISCV also specifies a 128-bit variant that is of course FASTER than these examples	Taniwha	9.50562	-5.7467246	comment	7.0	87.0	1638472651	-10.513559
29438903	Semantic pull requests [0] + convent	Semantic pull requests [0] + conventional-changelog [1] + squashing PRs and you get almost the same results (and more) with great automation and self-documentation for the whole process:* you'll never forget to add something to changelog* you get links to PRs in your changelog* it's much faster to make edits to PR messages compared to editing files* outside contributors get familiarized with the practice much faster (imagine getting new contributors to update changelogs)We recently adopted this practice at Pyroscope and it's been working out pretty well for us [2], I can certainly recommend it.[0] - https://github.com/apps/semantic-pull-requests[1] - https://github.com/conventional-changelog/conventional-chang...[2] - https://github.com/pyroscope-io/pyrosc	petethepig	8.752658	-6.377117	comment	7.0	33.0	1638595341	2.768831
29495682	Why are users force-fed with stuff l	Why are users force-fed with stuff like the “hovering emoji toolbar” in Teams?	acadapter	9.797973	-6.242142	story	7.0	11.0	1639044529	-13.969383
29516395	Slightly off topic, but I'm looking 	Slightly off topic, but I'm looking forward to FPGA tooling improving to the point where I can build a fantasy personal computer based on dragging and dropping architectural components into a design that compiles to hardware.I'm definitely too lazy to design from scratch or build by hand, and there's already so much out there designed for FPGAs, so just hoping one day it may be plug and play like the Mister is for entire systems.	codezero	9.0903635	-5.364579	comment	7.0	23.0	1639176287	8.379983
34146794	Accelerating zk-SNARKs - MSM and NTT	Accelerating zk-SNARKs - MSM and NTT algorithms on FPGAs with Hardcaml	alatriste	9.111695	-5.3508863	story	7.0	104.0	1672131259	8.423832
34182010	Over-engineering an emoji webcam fil	Over-engineering an emoji webcam filter with a neural network	auraham	9.813188	-6.2542486	story	7.0	79.0	1672376764	13.0014515
34261608	I'm hoping someday there will be an 	I'm hoping someday there will be an embedded Linux processor with this much cache. 128MB on-die SRAM means the PCB would no longer need separate DRAM. The complexity of the board routing would also go down. That much RAM ought to be enough for a lot of embedded applications.	castratikron	9.915465	-5.423314	comment	7.0	51.0	1672934324	8.073245
34304341	I ran into this very tool when setti	I ran into this very tool when setting up my home server some months ago (ECC and ZFS being necessary for integrity’s sake). It works, though I’ve yet to see a single error, which has only left me thinking that the fuss over ECC RAM and the risk of bit flips was overblown.	pocketarc	9.720749	-5.524208	comment	7.0	40.0	1673219139	8.262967
34308876	Learning Verilog and FPGA	Learning Verilog and FPGA	bajsejohannes	9.097889	-5.448248	story	7.0	95.0	1673260640	8.471399
34334302	> The memory chips respond by sendin	"> The memory chips respond by sending the contents of the selected
memory cell over the data bus to the CPU.What does that ROM memory cell _physically look like_? How do we physically manipulate it to contain a 1 or a 0 (absence of something)?"	Rimintil	9.810603	-5.3677673	comment	7.0	26.0	1673403872	8.064024
34335837	Is there an FPGA with a totally Free	Is there an FPGA with a totally Free and Open toolkit yet?	steponlego	9.092643	-5.357464	comment	7.0	24.0	1673419972	8.371472
34392952	What's so hard about porting to a ne	What's so hard about porting to a new hardware arch? Why would building for ARM Macs be any different than x86? Unless you have assembly code it's just a matter of changing a compiler flag, isn't it?	bigdict	9.726123	-5.276446	comment	7.0	29.0	1673814347	-7.7958417
34738861	The Balthazar laptop: An all-Europea	The Balthazar laptop: An all-European RISC-V computer	leephillips	9.541397	-5.2886457	story	7.0	26.0	1676032631	-10.427201
34808591	This reminds me of a quote from fort	"This reminds me of a quote from fortune(6):    The United States is like the guy at the party who gives cocaine to
    everybody and still nobody likes him.
    -- Jim Samuels

Intel spent billions of dollars trying to make Itanic a thing. They schemed with HP to buy and kill Alpha, in spite of the fact that at the time Alpha was in some of the fastest supercomputers in the world. They shot themselves in the foot by avoiding adopting amd64 extensions for so long in their x86 processors and doing other seemingly brain-dead things that only make sense when examined in the light of their desire to push Itanic.They made deals all across the industry to get people to sign up to support Itanic, and in the end people got a very mediocre CPU that always promised more than it delivered and always c"	johnklos	9.503429	-5.4178004	comment	7.0	32.0	1676486579	-7.8214283
34836027	We cut our CI pipeline execution tim	We cut our CI pipeline execution time in half	alrocar	9.247834	-6.41117	story	7.0	69.0	1676649053	6.2414393
34950430	Loongson’s LSX and LASX Vector Exten	Loongson’s LSX and LASX Vector Extensions	ingve	9.605178	-5.8283486	story	7.0	87.0	1677451316	-9.286427
34976696	AMD Zen2 ymm registers rolling back	AMD Zen2 ymm registers rolling back	taviso	9.267667	-5.223776	story	7.0	277.0	1677628617	7.9001203
13741505	1. Eliminate cache coherency protoco	"1. Eliminate cache coherency protocols (replacing it with cache manipulation/inter-CPU communication instructions)2. Eliminate virtual memory (replacing it with nothing)I'm not a CPU designer, but my understanding is that removing features allows for a denser/faster CPU. Well, these are two features that a suitably high-level language has no need for, because a high-level language doesn't expose ""memory"" to the programmer.Edit: Though, I 100% agree with what I believe is the core point of the author. We should not implement high-level features in hardware. In fact we should implement as little as possible in hardware, moving as much as possible into software. If Intel would let third parties generate microcode for their CPUs, we could move a lot further in that direction..."	catern	9.717015	-5.614567	comment	7.0	40.0	1488164258	8.095843
13820717	Competition is great, but this also 	Competition is great, but this also seems like a rather big setback to the goal of having multi-cloud applications, in instances where the app can only run on x86-64.	zbjornson	9.766813	-5.2297416	comment	7.0	54.0	1488985817	-7.794131
14008677	"Do FPGAs have a future beyond ""proto"	"Do FPGAs have a future beyond ""prototyping non-memory intensive algorithms for eventual ASIC implementation""?It seems to me that the scale out + scale up method of x86 and GPUs are the most promising and profitable arenas still, besides some very niche and very particular applications?I could and would like to be wrong. I'd go learn FPGA dev then if there were things that needed accelerating and were personally lucrative to me :)"	salesguy222	9.069658	-5.3042483	comment	7.0	57.0	1490997299	8.282509
14225977	CoreFreq – CPU monitoring for 64-bit	CoreFreq – CPU monitoring for 64-bit processors	netmonk	9.595997	-5.3325834	story	7.0	120.0	1493463758	7.9964
14275884	Intel AMT vulnerability: Silent Bob 	Intel AMT vulnerability: Silent Bob is Silent [pdf]	my123	9.42909	-5.2787743	story	7.0	73.0	1494010237	7.7928033
14290617	Reed-Solomon coder computing one mil	Reed-Solomon coder computing one million ECC blocks at 1 GB/s	112233	9.56516	-5.4911246	story	7.0	151.0	1494241669	8.314784
14295513	Travis CI Security Advisory: Secured	Travis CI Security Advisory: Secured Environment Variables	edmorley	9.114063	-6.4233994	story	7.0	87.0	1494276969	-9.489286
14437885	Stupid question: if ARM keeps adding	Stupid question: if ARM keeps adding aggressively instructions and co-processors, how long before it becomes blotted and power hungry like the x86 architecture? Isn't its simplicity the strength of the ARM platform?	cm2187	9.627096	-5.313312	comment	7.0	27.0	1496042862	-7.729958
14443759	Docker on OpenBSD 6.1	Docker on OpenBSD 6.1	_b8r0	9.719681	-6.4325566	story	7.0	61.0	1496133743	10.538666
14452583	RISC-V Pros and Cons	RISC-V Pros and Cons	englishm	9.376877	-5.6865125	story	7.0	92.0	1496239474	-10.584165
14479438	ARM Pointer Authentication	ARM Pointer Authentication	subleq	9.77479	-5.4348474	story	7.0	106.0	1496539318	-7.51068
14485789	One Bit Ferrite Core Memory	One Bit Ferrite Core Memory	peter_d_sherman	9.854403	-5.2899737	story	7.0	81.0	1496646511	8.046207
14545842	Gun Emoji Pairings	Gun Emoji Pairings	avyfain	9.800908	-6.264828	story	7.0	62.0	1497370152	-13.95358
14560080	Wasn't there some dead weight dropof	Wasn't there some dead weight dropoff† once with amd64, as a x86 CPU is unable to execute 16-bit code when in 64-bit mode?IIRC that was a notable cause of DOSBox becoming slower when going 64-bit as it had to emulate the 16-bit CPU instead of just running on metal, as well as 64-bit Windows (7?) being unable to run old DOS and Win3x software.With an increasingly rolling-release culture on software I can't wait for X-year support for hardware instruction sets /s. Wait, this is already happening for Android phones, where ARM SoC manufacturers just flip it at OS and phone vendors (Nexus 4, OnePlus X). I just realised Apple made a damn right call getting that under their control on that front.† the metal may still be there though, waiting to be jettisoned as the market for 32-bit OSes goes awa	lloeki	9.783763	-5.188483	comment	7.0	27.0	1497532740	-7.7327385
14598184	4 dies per package is a pretty inter	4 dies per package is a pretty interesting way of doing things - probably helps yields immensely, but I can't imagine it does anything good for intra-processor latency. 142 ns to ping a thread on a different CCX within a die isn't too horrible, but I really want to know what sort of penalty you'll have from going to a different die within a package.	DuskStar	9.422943	-5.1926174	comment	7.0	34.0	1497989720	2.1439724
14605882	Popcorn Linux – for ISA-diverse mult	Popcorn Linux – for ISA-diverse multi/many-core architectures	rbanffy	9.779078	-5.440736	story	7.0	89.0	1498065725	-7.8578043
14630376	CPU manufacturers do do huge amounts	CPU manufacturers do do huge amounts of testing, and Intel does formal verification of some functional units. The reliability is far better than most software, in part because making a new release costs billions.	wbl	9.513006	-5.2200036	comment	7.0	95.0	1498403937	7.7966533
14630312	The problem description is short and	"The problem description is short and scary:Problem: Under complex micro-architectural conditions, short loops of less than 64 instructions that use AH, BH, CH or DH registers as well as their corresponding wider register (e.g. RAX, EAX or AX for AH) may cause unpredictable system behavior. This can only happen when both logical processors on the same physical processor are active.I wonder how many users have experienced intermittent crashes etc. and just nonchalantly attributed it to something else like ""buggy software"" or even ""cosmic ray"", when it was actually a defect in the hardware. Or more importantly, how many engineers at Intel, working on these processors, saw this happen a few times and did the same.More interestingly, I would love to read an actual detailed analysis of the probl"	userbinator	9.933681	-5.746584	comment	7.0	124.0	1498403335	8.117951
30923153	Evaluating Graviton 2 for data-inten	Evaluating Graviton 2 for data-intensive applications: Arm vs. Intel comparison	Aissen	9.465112	-5.20934	story	7.0	62.0	1649184309	-8.331317
31019510	I don't know folks.2 years ago I too	"I don't know folks.2 years ago I took a laptop which I wasn't using (16 GiB RAM non-ECC) => I created in Linux with Python an array (""bytes""? Don't remember exactly anymore) of ~10 or 12 GiB containing random integers => computed the array's hash and saved it.Then for ~1-2 months I recomputed from time to time the hash of that array (inbetween the laptop was in suspend-to-RAM) and compared it to the original result => it always matched, I never had any bitflips.I therefore doubt that the estimation of ""1/256MB/month"" is correct - I could not prove that, at least not with my laptop."	zepearl	9.8660345	-5.443931	comment	7.0	28.0	1649879919	8.059344
31047907	Good riddance. (For those unaware, b	Good riddance. (For those unaware, basically the only use-case of SGX was hardware-enforced DRM.)	josephcsible	9.453935	-5.225833	comment	7.0	49.0	1650070488	-5.856259
31048338	The more interesting thing to me tha	The more interesting thing to me than SGX is that all of TSX-NI is deprecated? Not just HLE, but RTM too? Meaning there'll be no more software transactional memory at all?! Anyone able to shed any light on why they're doing this? Is it just security or is it just not worth it even regardless of that? Is there a chance they'll reintroduce it in some form, perhaps in other processor series?	dataflow	9.489517	-5.2480345	comment	7.0	27.0	1650073471	-5.8348465
31057873	The u-root CPU command	The u-root CPU command	liveranga	9.631967	-5.347377	story	7.0	71.0	1650161855	7.7887073
31113011	An overview of version control in pr	An overview of version control in programming	ashvardanian	8.866014	-6.3808236	story	7.0	90.0	1650564176	-11.556772
31119749	What does ARM and RISC-V spend their	What does ARM and RISC-V spend their weirdness budget on?	KptMarchewa	9.392617	-5.6170387	comment	7.0	61.0	1650620179	-10.553038
31147079	Bit flips are scary even on Earth.At	Bit flips are scary even on Earth.At a previous job, we had a customer who suddenly couldn’t send us email anymore. When their IT sent us the server logs to “prove” it’s our fault, we saw that the one letter in the cached MX record was wrong. This was puzzling, until I looked at the ASCII table to verify that the difference was exactly one bit.We never found out where in the name resolution process the bit got flipped. The problem healed itself a few days later when the DNS cache expired, so it wasn’t worth further investigation.That really gave me pause how often random bits are wrong in other data.	codeflo	9.78628	-5.594978	comment	7.0	63.0	1650826697	8.1999235
39480731	So ideally, we should disable hyper 	So ideally, we should disable hyper threading to mitigate security issues and now also disable turbo mode to mitigate memory corruption issues. Maybe we should also disable C states to avoid side-channel attacks and disable efficiency cores to avoid scheduler issues... and at some point we are back to a feature set from 20+ years ago. :P	Ochi	9.785458	-5.5263486	comment	7.0	80.0	1708697317	8.135221
39530648	Why the Future of Cloud Deployments 	Why the Future of Cloud Deployments Is Unikernels (2023)	egnehots	9.867861	-6.3147697	story	7.0	12.0	1709071002	-12.373366
36624684	Canadian judge rules thumbs-up emoji	Canadian judge rules thumbs-up emoji can represent contract agreement	mgbmtl	9.746969	-6.262902	story	7.0	11.0	1688685579	-13.953732
36711948	AVX-512 is one of those technologies	AVX-512 is one of those technologies I thought I’d use all the time, but in practice all of the compute heavy workloads I use just moved to the GPU.The real benefit of having AVX-512 client side is that I can test hyper-optimized server side code for unique operations.The problem is that AVX-512 isn’t a singular instruction set. Different CPUs support different sets of AVX-512 instructions, meaning the instruction set on this AMD CPU might not match what our servers support anyway. Fortunately the common instructions are still useful.	Aurornis	9.465958	-5.5566664	comment	7.0	39.0	1689266007	8.070743
36750013	The core issue here is reviewer sayi	The core issue here is reviewer saying “if you change this, you also have to fix other pending issues in codebase”.That should be the point of push back “Great feedback, and appreciate the direction to improve code quality, however the implications of changing Y means we need X, Y, Z approval and it will many days. I am making a tech debt task with what you described and will be done in a follow up PR based on priority and bandwidth.Let’s focus on what it would take to get this surgical PR out.”The biggest lesson I learned is to make focused PRs, and learn to pushback when reviewer asks for a scope creep. Mostly other engineers have been pragmatic.It’s unrelated to number of lines as you can reformat while codebase but not change anything logically, or change some feature flags which could	nojvek	8.750185	-6.324822	comment	7.0	27.0	1689531743	2.250357
36783348	Nvidia just released FreeBSD Display	Nvidia just released FreeBSD Display Driver 535.86.05 (2023.7.18)	rodrigo975	9.897221	-5.6691027	story	7.0	86.0	1689754022	10.572845
36892248	I recently (yesterday) ran into emul	I recently (yesterday) ran into emulation issues when I tried to run my dedicated game server build for Linux (that I produced from Unity) inside an amazon Linux docker container on my M2 Mac. I use docker for apple silicon that supposedly allows you to run amd64 images on arm (which M1/M2 macs are). Yes even specifying the correct —-platform and upgrading the emulation software.It was only when I opened up all logging in a dev build did I discover there was some syscall from the mono side of things that wasn’t emulated properly enough. I thought it ironic recalling how many people had sold containers as lighter weight VMs that remove “works on my machine” hassles. Anyways, I just spun up an AWS EC2 instance to test this nothing part of the process.I know podman uses qemu and maybe it coul	sovietmudkipz	9.58226	-6.4144692	comment	7.0	44.0	1690459704	9.9921255
36944169	Why do these kinds of articles essen	Why do these kinds of articles essentially refuse to admit RISC-V exists?	netr0ute	9.376555	-5.7024965	comment	7.0	24.0	1690817578	-10.582288
36961101	Alfred-40B, an OSS RLHF version of F	Alfred-40B, an OSS RLHF version of Falcon40B	nuitblanche	9.563646	-5.306166	story	7.0	80.0	1690917479	-7.4923434
37011086	I'm not a hardware engineer, so take	I'm not a hardware engineer, so take this with a grain of salt:The 6502 doesn't have a cache, only external memory. So performance would probably be much worse than naively expected (except perhaps for workloads that fit in CPU registers, edit -not even those due to the lack of a code cache as well). Memory latencies haven't improved nearly as much as CPU speeds have, which is why modern CPUs have big caches.The CPU would be idly waiting for memory to respond most of the time, which completely kills performance.	FartyMcFarter	9.521698	-5.315356	comment	7.0	36.0	1691236067	-7.509174
37025820	RISC-V Origins and Architecture, Par	RISC-V Origins and Architecture, Part 1	ChuckMcM	9.397417	-5.697931	story	7.0	85.0	1691351110	-10.564552
37053352	The Intel paper link is dead, this s	The Intel paper link is dead, this seems to be the right one:https://www.intel.com/content/www/us/en/developer/articles/t...General caveats: are there many clouds that still run  workloads from different users on the same physical core? I thought most had changed their schedulers years ago so you can't get cross-domain leaks between hyperthreads anymore. Claiming that it affects all users on the internet seems like a massive over-exaggeration, as he hasn't demonstrated any kind of browser based exploit and even if such a thing did exist, it'd affect only a tiny minority of targeted users, as AFAIK many years after the introduction of Spectre nobody has ever found a specex attack in the wild (or have they?)I think the more interesting thing here is that it continues the long run of speculat	mike_hearn	9.666613	-5.55394	comment	7.0	47.0	1691518971	7.783453
37102482	Tracing the roots of the 8086 instru	Tracing the roots of the 8086 instruction set to the Datapoint 2200 minicomputer	matt_d	9.727176	-5.546467	story	7.0	135.0	1691862070	-7.473634
37124627	The Problem with Linus Tech Tips [vi	The Problem with Linus Tech Tips [video]	Readerium	9.36433	-5.805587	story	7.0	95.0	1692037437	4.138133
37228625	I was a hold-out for quite a while, 	"I was a hold-out for quite a while, like the author, because they felt very twee. The one that convinced me though was the thumbs-up emoji, which can be an entire reply to an email or text, that says ""I've read this, and we don't need to continue the conversation"", with undertones of agreement or a thank-you. Somehow single-word replies like ""Gotcha"" or ""Yes"" felt too curt, and anything longer invited further discussion where I didn't want any. I don't really use any other emojis though - I love using language too much, and all of the others feel like I can express myself better through words."	frereubu	9.784313	-6.2506785	comment	7.0	39.0	1692738946	-13.951678
37229261	>FireFox settings should not be show	">FireFox settings should not be showing a sad-face emoji just because it's not my default browser.The irony of using the normative ""should"" to project your preferences onto Firefox, while expressing a desire that Firefox not do so on you.Also - what about iPhones stubbornly showing green texts from Android messagers? That's not even ""I'm sad you're using Android."" It's more a passive-aggressive ""I'm going to degrade your experience because your friend uses Android."" Forget about emojis- Apple is weaponizing colors!"	hammock	9.808427	-6.250731	comment	7.0	38.0	1692742427	-13.958724
37253580	I never really realized that Firecra	I never really realized that Firecracker VM is a full-blown machine and not just some sort of a Linux container tech. At first, it may sound like an ineffective approach, but if you take a closer look on a real-world usage example such as fly.io, you will be surprised: micro-VMs are very small and capable.	garganzol	9.797418	-6.297538	comment	7.0	99.0	1692905845	-8.47981
37377325	I'm bullish on RISC-V, but sort of b	I'm bullish on RISC-V, but sort of bearish on SiFive.  The last several systems I've used have been StarFive systems (which is distinct from SiFive.) They (SiFive) seem to be more of a custom IP shop, where you go when you want to spin some custom silicon but not pay ARM.  But now that we've broken with China re: chip production, is there anyone on this side of the pacific I can get catalog parts from?So... their cores are great, but if I'm only going to see them if I write a very large check to SiFive, they're sort of irrelevant to my world.  I would love to have SiFive IP that doesn't use Rocket/Scala/Chisel and does produce catalog parts.That could be just me.  I enjoy getting my hands dirty.	OhMeadhbh	9.37921	-5.622999	comment	7.0	82.0	1693804539	-10.523953
37449952	Anyone have some insight into why RI	"Anyone have some insight into why RISC-V seems to be getting traction?Has there not been prior attempts to make an open source cpu?Is there a lot of skill in making the ISA? It seems to me (naively) that most talented EE students could probably come up with their own ISA, or is there some ""magic"" in the RISC-V one?I assume that there are a reference implementations in VHDL/Verilog and Cadence and good support in compilers. Is this what pushed through, where others failed?"	joachimma	9.423792	-5.6847873	comment	7.0	21.0	1694291275	-10.539623
37509713	As an IP holding company for an ISA,	As an IP holding company for an ISA, how is Arm Limited different from any other patent troll?https://www.arm.com/glossary/isahttps://www.theregister.com/2023/08/31/a_star_star_domains/https://www.theregister.com/2023/09/12/arm_markstedter_domai...	adolph	9.54357	-5.3518305	comment	7.0	22.0	1694702776	-7.734516
24468080	One of the reason for the interest i	One of the reason for the interest in RISC-V is the US-China tech war and the US long arm banning of China's biggest tech companies access to ARM. However RISC-V is dominated by US companies and even with some parts open source, it will still be subject to sanctions.A true alternative to ARM need to come out of China.	throwaway4good	9.346001	-5.665875	comment	7.0	28.0	1600072794	-10.608895
24525955	Something I've thought about a few t	Something I've thought about a few times is how a fair number of smart folks who are in the know view VLIW as something that was tried and failed, so they're dismissive of new designs which use VLIW.For example Linus Torvalds has made this assertion a few times that I've seen.  However, it seems to me (at least by their own telling) that their focus was almost entirely on trying to do x86 better than x86 and doesn't really seem like a straight forward or easy task.What I wonder about is VLIW doing its own thing (e.g. not trying to run Windows games) but running applications intentionally developed for it.  Perhaps there are use cases where VLIW works very well... or at least well enough to a reasonable alternative value proposition.	Quequau	9.630655	-5.629995	comment	7.0	48.0	1600502565	8.127512
24698678	The unanswered question is, will it 	The unanswered question is, will it be cheaper?Price / GB of DRAM hasn't actually fallen much in the 10 years of progression.[1] LPDDR is still over $3/GB. UDIMM is still ~$3 /GB, which is about the same in 2010 / 2011. i.e Despite what you may heard about DRAM price collapse in 2019, the price floor of DRAM has been pretty much the same over the past 10 years.Every other silicon has gotten cheaper, NAND, ICs, just not DRAM. And yet our need for DRAM is forever increasing. From In-Memory Datastore on Servers to Mobile Phones with Camera shooting rapid 4K images.Compared to NAND, or Foundry like TSMC, there are clear roadmaps where cost is heading, and what cost reduction we could expect in the next 5 years, along with other outlook. There is nothing of sort in DRAM. At least I dont see any	ksec	9.693938	-5.2300067	comment	7.0	48.0	1601997910	7.986317
24701641	Smart consumers won't buy a $10 memo	Smart consumers won't buy a $10 memory card on Ali because it's likely to be a destructive fake, but people will buy Internet-controlled electronics for their favorite nether regions of their bodies. Amazing. I guess that's part of the thrill.	srtjstjsj	9.581086	-5.2751236	comment	7.0	36.0	1602013793	0.121804245
24786364	This instruction makes design of ARM	"This instruction makes design of ARM CPUs harder.As an example, consider page fault handling for a situation where part of access is valid and other part is not, especially for store operation. Or out-of-order execution. Or, for whatever sake, ""load multiple"" from PC (which is exposed to programmer in quite peculiar way) - you have to have it.ARM is full of these quirks. I can see why they did that back in the day, but today or even 30 years ago these quirks are not a good decisions."	thesz	9.697264	-5.4648514	comment	7.0	36.0	1602752109	-7.6233606
24892470	I expected this to be some micro-opt	I expected this to be some micro-optimization of moving a thing from taking 10 seconds to 100ms.> Cloning our largest repo, Pinboard went from 40 minutes to 30 seconds.This is both very impressive as well as very disheartening. If a process in my CI was taking 40 minutes I would be investigating sooner than a 40-minute delay.I don't mean to throw shade on the pintrest engineering team, but, it speaks to an institutional complacency with things like this.I'm sure everyone was happy when the clone took 1 second.I doubt anyone noticed when the clone took 1 minute.Someone probably started to notice when the clone took 5 minutes but didn't look.Someone probably tried to fix it when the clone was taking 10 minutes and failed.I wonder what 'institutional complacencies' we have. Problems we assume	AdamJacobMuller	9.06735	-6.32492	comment	7.0	31.0	1603681253	-11.831574
24908009	This opinion is unlikely to be popul	This opinion is unlikely to be popular, and it's been decades since I was a full participant in the hardware business, but...I just have never seen the use case for FPGAs beyond niche prototyping / small run applications, which by definition make no money. I suppose there are also scenarios where you want to keep your design secret from the fab and/or change it every week, but those seem very niche too (NSA, GCHQ, ..?).	dboreham	9.091137	-5.354709	comment	7.0	29.0	1603810582	8.370273
24908403	The biggest problem with Notion IMO 	The biggest problem with Notion IMO is the overuse of Emojis in written documentation. It serves little purpose unlike in conversations to convey emotions; here they’re primarily used as a decorative  element. It’s the same in a lot of Javascript library docs on GitHub. Is it fine for a scrap book? Sure. I strongly believe it has no place in professional documentation or pretty much anywhere else.Notion is perpetuating this idea that it’s cute to put distracting colorful symbols in text.	systemvoltage	9.828527	-6.236084	comment	7.0	23.0	1603812906	-13.961149
24940201	FPGAwars: Exploring the Open Side of	FPGAwars: Exploring the Open Side of the FPGAs	MrXOR	9.101316	-5.331327	story	7.0	121.0	1604046003	-12.12511
24941189	MCS-48: The quest for 16-bit divisio	MCS-48: The quest for 16-bit division on the 8-bit CPU which can’t divide	noexani	9.7937355	-5.5352674	story	7.0	39.0	1604057966	8.277425
24967161	Time for a (truly) decentralized ver	Time for a (truly) decentralized version control system?	amelius	8.8054	-6.3745856	comment	7.0	33.0	1604318687	-11.751365
24971456	Ubuntu Linux Jail on FreeBSD 12.2-Re	Ubuntu Linux Jail on FreeBSD 12.2-Release	todsacerdoti	9.745311	-6.404706	story	7.0	205.0	1604342368	10.514458
24978259	There is still a gap of sorts. Suppo	There is still a gap of sorts. Support for ECC memory in desktops is pretty hard to find, and not well documented.	tyingq	9.473765	-5.504173	comment	7.0	25.0	1604399305	8.254595
25013868	AMD EPYC 7713 'Milan' Zen 3 CPU Benc	AMD EPYC 7713 'Milan' Zen 3 CPU Benchmarked	EvgeniyZh	9.305302	-5.206971	story	7.0	83.0	1604738512	7.9415584
25080108	I've been holding off on upgrading m	I've been holding off on upgrading my MBP13 for a few years now because Apple was painfully slow to refresh it. I was ready to order the model that came out in May (with 32GB RAM) but then the rumour about ARM hit the internets so I kept waiting.Now (I guess always?), it's clear that Apple Silicon is not going to be a comfortable dev environment, at lest not for some and not for a while. JDK macos/aarch64 port is still in dev and so is VS Code. Docker support is probably months away (looking at their roadmap no dev has even started) and when it arrives it's almost certain to be limited to ARM linux images.Still, hanging on to x86 on a Mac seems like a lost cause and I wonder if I should just change my approach. Rather than getting a beefy MBP, get the cheaper Air with M1 and a powerful Min	skoczko	9.612071	-6.011837	comment	7.0	32.0	1605254549	9.991237
25119897	Sounds a bit like Docker is at a los	"Sounds a bit like Docker is at a loss.  Caught between a closed source OS (rock) and an architecture change (hard place).Ideally, they could leverage Rosetta2 to run x64 containers under macOS on Apple Silicon ... but I guess Apple isn't playing ball (because otherwise they would have probably announced it at WWDC).At this point I see an Apple Silicon based Mac is just a consumer device, I don't think I'm going to be able to use it in anger for development work at the moment (other than for Mac consumer apps).Not really sure what Apple have to lose here ... but if Macs with Apple Silicon are not a viable dev platform for ""mainstream"" containers, then that's going to drive developers to Linux (or Windows)."	lsllc	9.617514	-6.194104	comment	7.0	40.0	1605582644	10.019623
25125673	I am 100% convinced, tangentially, t	"I am 100% convinced, tangentially, that mobile OS point releases use emoji as user bait to have a stronger guarantee of regular security updates.""update now to get access to :burrito: and :taco:!  (also fix the following 12 CVEs that 90% of our userbase doesn't know about or read)"""	hprotagonist	9.801351	-6.2516756	comment	7.0	43.0	1605630708	-13.954368
25163091	The better explanation of RISC v CIS	"The better explanation of RISC v CISC is this old discussion from comp.arch: https://yarchive.net/comp/risc_definition.htmlIn short, the term RISC comes from a new set of architecture designs in the late 80s/early 90s. CISC is not so much an architecture design as it is lacking many of the features. The major features that RISC adds are:* Avoid complex operations, which may include things such as multiply and divide. (Although note that ""modern"" RISCs have these nowadays).* More registers (32 registers instead of 8 or 16). (ARM has 16. So does x86-64.)* Fixed-length instructions instead of variable-length.* Avoid indirect memory references or a lot of memory accessing types (note that x86 also does this).Functionally speaking, x86 itself is pretty close to RISC, especially in terms of how "	jcranmer	9.499193	-5.7233562	comment	7.0	61.0	1605895561	-10.498639
25164894	Table suggests that Docker can run u	Table suggests that Docker can run under Rosetta 2, but the Docker blog post that it links to suggests Rosetta is not enough. Can someone confirm if it’s actually possible to run Docker using Rosetta on M1 Macs?	gmaster1440	9.63197	-6.079819	comment	7.0	21.0	1605906132	9.978503
25229022	It seems contrary to the purpose of 	It seems contrary to the purpose of Docker to run ARM Linux on the development machine if the server has an x86 CPU.	simongray	9.563323	-6.4054337	comment	7.0	36.0	1606488036	10.046156
25331840	> Threadripper is NOT a CPU for gami	> Threadripper is NOT a CPU for gaming.I run two gaming VMs for my kids on my Threadripper server.	TwoNineA	9.451528	-5.2517676	comment	7.0	30.0	1607347142	7.9795675
25409535	This article has a mistake. I actual	"This article has a mistake. I actually ran the benchmark, and it doesn't return a valid result on arm64 at all. The posted numbers match mine if I run it under Rosetta. Perhaps the author has been running their entire terminal in Rosetta and forgot.As I write this comment, the article's numbers are: (minify: 4.5 GB/s, validate: 5.4 GB/s). These almost exactly match my numbers under Rosetta (M1 Air, no system load):    % rm -f benchmark && make && file benchmark && ./benchmark
    c++ -O3 -o benchmark benchmark.cpp simdjson.cpp -std=c++11
    benchmark: Mach-O 64-bit executable arm64
    minify : 1.02483 GB/s
    validate: inf GB/s

    % rm -f benchmark && arch -x86_64 make && file benchmark && ./benchmark
    c++ -O3 -o benchmark benchmark.cpp simdjson.cpp -std=c++11
    benchmark: Mach-O"	bacon_blood	9.747871	-5.333449	comment	7.0	39.0	1607889103	7.702101
38627821	Q&A With Bill Mensch, co-creator of 	Q&A With Bill Mensch, co-creator of the 6502	systems_glitch	9.528971	-5.2334394	story	7.0	122.0	1702477689	-7.4353957
38814193	A Brief Retrospective on SPARC Regis	A Brief Retrospective on SPARC Register Windows	ingve	9.891182	-5.611553	story	7.0	36.0	1703932832	-7.8269477
38815324	Emoji are legally actionable	Emoji are legally actionable	chrisaycock	9.773723	-6.267018	story	7.0	43.0	1703944836	-13.957446
38872749	My current take is “program with if 	"My current take is “program with if statements all the way down”->CPU,
“Multiply these humongous matrix multiple times per second”->GPU.What is FPGA for?"	falserum	9.093926	-5.3275256	comment	7.0	26.0	1704405016	8.296942
38912406	k on pdp11	k on pdp11	tosh	9.820827	-5.459702	story	7.0	140.0	1704724286	-7.527938
38929181	How about the opposite: PC-compatibl	"How about the opposite: PC-compatible non-x86 computers?Like how the Transmeta Crusoe was an x86-compatible CPU... but moreso.The Crusoe was a thing marketed as a ""CPU"", that was actually internally an SoC (with the CPU inside it being non-x86.) This SoC had its own internal RAM and storage, and booted itself into internal software that then emulated an x86 CPU. All of the ""CPU"" data pins on the Crusoe SoC, routed to the virtual CPU inputs and outputs of this software. So, as far as other devices in the system were concerned, they were speaking to an x86 CPU.Did anyone ever try taking this concept further? Maybe in the context of an industrial embedded computer?I could imagine someone taking e.g. a modern ARM SoC with onboard RAM + eMMC; setting it up to boot into e.g. Bochs to emulate a v"	derefr	9.624829	-5.2601233	comment	7.0	47.0	1704822292	7.2843304
39030935	Don't get me wrong, this is very fuc	Don't get me wrong, this is very fucking cool. I have long yearned for a world where an FPGA PCIe add-in card is something practically useful and every year I gain a bit of hope that we're slowly plodding along toward that future.But what I really want to see is quake running on quake specific hardware, with everything burned into the logic elements running at some thousands of FPS, rather than quake running on a softcore.While we're on the subject, the real thing that's holding back broader adoption of FPGA programming is the fucking tooling. I cannot wait till we have something FOSS like clang/gcc for verilog/vhdl that can be reasonably relied upon. Quartus is... quartus is something else.(ok maybe the real thing holding back adoption is that it's extremely fucking niche that you actuall	thot_experiment	9.089596	-5.3662124	comment	7.0	43.0	1705513523	8.360467
32607260	I suspect most of RISC-V development	"I suspect most of RISC-V development is more towards moving away from western controlled ISA's that can be sanctioned for any reason. Points about avoid shortages from any fab being allowed to fabricate RISC-V CPUs is just the ""cherry on top""."	worldofmatthew	9.417909	-5.6665974	comment	7.0	53.0	1661520600	-10.551297
32650187	I wish AMD would add more cache for 	"I wish AMD would add more cache for faster speed and lower energy consumption  Ryzen 5xxx L1 32/32,   L2 512,   L3 32768
  Ryzen 7xxx L1 32/32,   L2 1024,  L3 65536
  M2         L1 192/128, L2 16384, SL 8192
  M1 Ultra   L1 192/128, L2 49152, SL 98304

[edit: see comment about latency cache comparison below]"	KingOfCoders	9.685901	-5.416123	comment	7.0	27.0	1661866328	8.0873575
32746356	This is really pretty strange.RISC-V	This is really pretty strange.RISC-V is a respectable enough architecture, but not better than recent POWER designs, equally open. NASA has an enormous amount of experience with POWER.I suppose it comes down to what bidders are offering to build for them.	ncmncm	9.373811	-5.658577	comment	7.0	39.0	1662525428	-10.587211
32836386	Next up is sound and interactivity i	"Next up is sound and interactivity in emojis, including a custom emoji scripting language and emoji platform, and then the inevitable ""DOOM ported to emoji"" projects.And of course, web browsers and text rendering become increasingly more complex and expensive to build/maintain because Google single-handedly decided it."	bogwog	9.799961	-6.257334	comment	7.0	26.0	1663159590	-13.941867
32861075	F4PGA: Open FPGA Tooling: Xilinx 7-S	F4PGA: Open FPGA Tooling: Xilinx 7-Series, Lattice iCE40/ECP5, QuickLogic EOS S3	pabs3	9.101936	-5.3673134	story	7.0	95.0	1663293109	8.364755
32959630	The take-home, IMO:>Let’s step back 	The take-home, IMO:>Let’s step back for a moment and reflect on what an amazing accomplishment this was. The entire ARM design team consisted of Sophie Wilson, Steve Furber, a couple of additional chip designers, and a four-person team writing testing and verification software. This new 32-bit CPU based on an advanced RISC design was created by fewer than 10 people, and it worked correctly the first time. In contrast, National Semiconductor was up to the 10th revision of the 32016 and was still finding bugs.Remember: Complexity is poisonous.	snvzz	9.497362	-5.221066	comment	7.0	44.0	1663991789	-7.827031
32993328	Development of the MOS Technology 65	Development of the MOS Technology 6502: A Historical Perspective	Someone	9.51469	-5.249374	story	7.0	66.0	1664272210	-7.47584
33013827	Maybe unrelated, but I must say it a	Maybe unrelated, but I must say it again: we need an arduino for the fpga world.	marcodiego	9.087084	-5.343712	comment	7.0	34.0	1664402432	8.355738
33056946	At least they don't go around slande	"At least they don't go around slandering programming language communities.If we're going to be serious about who is being toxic, it's definitely Linus in this thread.  Guy makes first mistake (by a very broad interpretation of ""mistake"".  Perhaps ""misunderstanding""?).  Linus goes nuclear.  And while his reasoning is sound, his argumentation cycles between threats, bad-faith arguments, and just plain old yelling.What some people don't understand is that the Linux kernel isn't 'led' in any meaningful sense.  But I suppose some projects don't need actual leadership?  I once was recommended a Metallica documentary, because ""It's amusing to see what emotionally stunted 40-50 year olds who have never had anyone tell them 'No' since 18 will do.""  That's the Linus vibe -- somehow we've limped alon"	mustache_kimono	9.344511	-5.9207726	comment	7.0	43.0	1664725614	4.109169
31839046	It's still a single core CPU, though	It's still a single core CPU, though, whereas the Xtensa-based ESP32 has a dual core CPU. Not sure people are actually using that second core in practice though.. And yes, this is probably an excellent case where RISC-V can win; wouldn't surprise me if RISC-V already has better toolchain support than Xtensa despite being a much younger ISA.Some benchmarks on the earlier ESP32-C3 at https://hackaday.com/2021/02/08/hands-on-the-risc-v-esp32-c3... ; it seems it has the same core as the new ESP32-C5 except it's clocked at 160 MHz instead of 240 MHz. Extrapolating those ESP32-C3 benchmark results out to 240 MHz would suggest it's a bit spiffier than a single core Xtensa ESP32 but not enough to catch the dual core xtensa.	jabl	9.475684	-5.3817086	comment	7.0	21.0	1655918788	-10.124247
31859892	A little more speed from the 6502	A little more speed from the 6502	ibobev	9.497292	-5.2540374	story	7.0	54.0	1656067211	-7.3747573
31882761	It's amazing to see big company can 	It's amazing to see big company can throw so much engineering effort into it, while for majority of the CI users, just getting a 2x faster CI machine can achieve the same outcome with much less cost.[0] https://buildjet.com/for-github-actions/blog/a-performance-r...edited: wrong link	deltaci	9.273817	-6.3481374	comment	7.0	24.0	1656241051	6.2053156
31912124	Would I be very wrong to suspect tha	Would I be very wrong to suspect that early RISC CPUs forced programmers and compilers to pull similar stunts? The major difference was probably that RISC systems had compilers, while on the 6502, it was BASIC or assembly. So programmers might not have noticed?	krylon	9.525568	-5.612936	comment	7.0	43.0	1656445489	-10.452059
31924784	Different anecdote, but similar vibe	Different anecdote, but similar vibe....In ~2010, I was benchmarking Solarflare (Xilinx/AMD now) cards and their OpenOnload kernel-bypass network stack.   The results showed that two well-tuned systems could communicate faster (lower latency) than two CPU sockets within the same server that had to wait for the kernel to get involved (standard network stack).   It was really illuminating and I started re-architecting based on that result.Backing out some of that history... in ~2008, we started using FPGAs to handle specific network loads (US equity market data).  It was exotic and a lot of work, but it significantly benefited that use case, both because of DMA to user-land and its filtering capabilities.At that time our network was all 1 Gigabit.   Soon thereafter, exchanges started offerin	neomantra	9.593426	-5.3133082	comment	7.0	36.0	1656531554	7.9381614
31943640	Cool, I really like AVR, but kind of	Cool, I really like AVR, but kind of wished there was like a 8-bit RISC-V or something with similar packaging and choices as AVR.	socialdemocrat	9.468426	-5.5637093	comment	7.0	87.0	1656662313	-10.443004
32043043	FastECC – Reed-Solomon coder computi	FastECC – Reed-Solomon coder computing one million parity blocks at 1 GB/s	pabs3	9.73695	-5.390463	story	7.0	126.0	1657444232	8.283162
32074660	The researchers said that it’s capab	The researchers said that it’s capable of locating and leaking a Linux computer’s root password hash from physical memory in about 28 minutes when running the Intel CPUs and in about 6 minutes for AMD CPUs.Presumably under very ideal conditions? I've been indifferent to all these sidechannel attacks since the original Spectre/Meltdown and continue to maintain my opinion that this is really not of any significance to a single-user PC.	userbinator	9.681618	-5.4375973	comment	7.0	87.0	1657654641	7.8938537
32110671	Travis CI and Solarwinds on the list	Travis CI and Solarwinds on the list eh...	jeffwask	8.941366	-6.3467183	comment	7.0	24.0	1657906208	5.6939344
32135049	> It is pretty interesting question,	> It is pretty interesting question, but I am still missing the answer for it!In a very literal sense, the answer is trivially yes, because the compiler can be forced to generate any instruction sequence in an inline assembly block.But assuming that isn't what you mean, there are plenty of instructions that the compiler will never emit when compiling CPU-independent C code (i.e. no inline assembly or CPU-specific compiler intrinsics). These fall into a few general categories:1) Privileged instructions, like IN/OUT, WAIT, or SGDT. These instructions aren't even usable outside the kernel, and there's no way to represent their effects in pure C anyway.2) Instructions which interact with specific hardware capabilities of the CPU, like the AES/SHA instructions, CPUID, RDTSC, or PREFETCH. Much l	duskwuff	9.880261	-5.8382998	comment	7.0	35.0	1658122452	-7.4950256
32337023	Run FreeBSD 13.1 for ARM64 in QEMU o	Run FreeBSD 13.1 for ARM64 in QEMU on Apple Silicon Mac with HVF Acceleration	codetrotter	9.911321	-5.4568095	story	7.0	135.0	1659563574	-8.085804
32401468	ÆPIC Leak: Architecturally leaking u	ÆPIC Leak: Architecturally leaking uninitialized data from the microarchitecture [pdf]	triska	9.735238	-5.528962	story	7.0	118.0	1660068143	7.9619617
32481657	Ask HN: Where to run embarrassingly 	Ask HN: Where to run embarrassingly parallel, Integer, no SIMD workloads?	freemint	9.575918	-5.36328125	story	7.0	11.0	1660651071	8.042509
32488674	A one-bit processor explained: rever	A one-bit processor explained: reverse-engineering the vintage MC14500B	_lnwk	9.575852	-5.2120175	story	7.0	74.0	1660682739	-7.1649647
22015917	But in all fairness, why would anyon	"But in all fairness, why would anyone just ""want a non-x86 desktop"" (as in: ""anything but x86""). Doesn't make sense to me..."	Koshkin	9.714083	-5.29987	comment	7.0	30.0	1578692666	-7.8165407
22282536	At the time that Alpha came out, the	At the time that Alpha came out, the x86 was struggling to get more clock speed, and the groupthink was that RISC was the way forward. RISC chips would run at 4-8x the clock speed of an x86 and even when you adjusted for needing 2-3x more instructions, RISC was 50-200% faster.DEC had a winner with Alpha. It had speed, and most importantly, you could run Windows NT on it. NT mattered because most Unix vendors at the time wanted $1,000/CPU for their licenses, and NT was $cheap (the OEM version was around $300 if I recall correctly).As other posters have said, DEC just could not get out of their own way and let Alpha succeed. Wierd sales policies, hostile partnerships, and intense competition all really stymied DEC. A lot of the weirdness came from trying to protect their legacy base of VAX a	indymike	9.653934	-5.326029	comment	7.0	29.0	1581262183	-8.046324
22299017	A bit off topic, but is there a name	A bit off topic, but is there a name for this trend to put emoji everywhere? I have some trouble to read like that. There is a kind of Madeleine de Proust though, it feel like children book: https://i.pinimg.com/736x/8c/d1/e5/8cd1e583de4c89bf09c4275b2...	aloisdg	9.805422	-6.2554774	comment	7.0	35.0	1581433664	-13.963674
23504632	(both of these are genuine questions	(both of these are genuine questions, not rhetorical ones)1. If x64 wasn't already dominant and had the same market share as ARM, would you choose x64? Why?2. With x64's current dominance, would you buy a ARM system as your primary one, knowing that you'll have significant difficulties developing for the majority of current market share?	albntomat0	9.657234	-5.3004956	comment	8.0	59.0	1592001819	-7.808971
23568316	Ask HN: Could you estimate the total	Ask HN: Could you estimate the total number of clock cycles ever run?	jonathanzufi	9.613823	-5.2086153	story	8.0	29.0	1592516220	7.6317325
23692668	I think Linus is at fault here. Havi	I think Linus is at fault here. Having a PR process that requires sending a patch over email, email threads done with super old mailing list software, etc instead of the more modern workflow of using forks, PRs in a web UI, etc is tedious and annoying. Making kernel development and maintaining more accesible to younger people would increase the pool of potential maintainers.	kyran_adept	9.37947	-5.840721	comment	8.0	38.0	1593538958	4.2207446
23739486	This is sad, not so much because of 	This is sad, not so much because of the lack of code coming from this world class programmer, but because coding is such fun, and Torvalds isn't having fun programming, else he'd be doing it.I'm closing in on forty years of coding and still get a kick out of it. I'd still be doing it if I weren't getting paid for it. But my skills are at best, uh, modest compared to Linus. I'd think that doing a thing so much better would only be that much more fun. But this is a data point against that correlation.	hirundo	9.321903	-5.8785214	comment	8.0	52.0	1593963658	4.2567935
23834140	Author is really good at discreditin	Author is really good at discrediting themselves straight off the bat in one sentence:> for a ~~bullshit~~ unsuccessful project called CoreOS Container Linux that was EOL'd several years agoCoreOS was actually quite successful to me as an outside observer. It had decent paid user base as well as people using it without paying. It has showed people that Chrome OS can be used to build atomically updating host OS with a readonly fs for container hosting. It has inspired many other container hosts to come like RancherOS and Google’s Container-Optimized OS. Similarly, it was probably one of the reasons why Red Hat was interested in the acquisition.Furthermore, CoreOS was EOL'ed last month; not several years ago.I can keep going on why etcd API was switched to gRPC and what benefits this offers,	alpb	9.799812	-5.964499	comment	8.0	52.0	1594744651	-9.256359
23836339	AMD, we're getting to the point of t	AMD, we're getting to the point of too many different product lines.  I don't think that TR Pro adds anything that couldn't have already fit into regular Ryzen, Ryzen TR, or Epyc.  Just for reference, we have:- Ryzen 3, 5, 7 which was fine- Ryzen Threadripper because for some reason we couldn't just call it Ryzen with a bigger number (maybe they anticipated needing the 9 later)- Epyc for servers that supports ECC memory- Now we have Ryzen 9 because Intel made Core i9 (I guess this makes sense for people comparison shopping)- Now we also have Threadripper Pro just because we can, not even as a response to IntelEpyc is the only distinction that needs to be made IMHO.  The rest should just be Ryzen 3,5,7,9,11,13... for desktop parts.  It's fine if Ryzen 11 and 13 had different sockets (like T	parsimo2010	9.293342	-5.2277246	comment	8.0	33.0	1594753853	7.951217
23928409	I wonder if it is possible to add a 	I wonder if it is possible to add a (small) FPGA to a personal computer that could accelerate any specific software tasks (video/audio encoding, ML algorithms, compression, extra FPU capabilities) on user demand.	d_silin	9.1140585	-5.3197036	comment	8.0	29.0	1595518413	8.281451
23928601	As a bit of a counterpoint:One of my	"As a bit of a counterpoint:One of my prior projects involved working with a lot of ex-FPGA developers. This is obviously a rather biased group of people, but I saw a lot of feedback around that was very negative about FPGAs.One comment that's telling is that since the 90s, FPGAs were seen as the obvious ""next big technology"" for HPC market... and then Nvidia came out and pushed CUDA hard, and now GPGPUs have cornered the market. FPGAs are still trying to make inroads (the article here mentions it), but the general sense I have is that success has not been forthcoming.The issue with FPGAs is you start with a clock rate in the 100s of MHz (exact clock rate is dependent on how long the paths need to be), compared with a few GHz for GPUs and CPUs. Thus you need a 5× performance win from switch"	jcranmer	9.015466	-5.229421	comment	8.0	99.0	1595519357	8.179579
24068928	Francois is a smart guy, but there's	"Francois is a smart guy, but there's a range of opinions on the matters he raises. We argue a good deal on Twitter (""constructive confrontation"" between former Intel Principal Engineers :-) ). He put together the video pretty quickly so don't dismiss it just for lack of polish.Personally, I argue with him a lot on AVX-512. I think AVX-512 is a Good Thing (or will be shortly - the first instantiation in Skylake Server - SKX - isn't great).The biggest meta-problem with AVX-512 is that due to process issues, the pause button got hit just as it appeared in a server-only, 'first cut' form. AVX2 had downclocking issues when it first appeared too - but these were rapidly mitigated and forgotten.I personally feel that SIMD is underutilized in general purpose workloads (partly due to Intel's feckle"	glangdale	9.431515	-5.500007	comment	8.0	35.0	1596700099	8.062966
24215022	Ice Lake AVX-512 Downclocking	Ice Lake AVX-512 Downclocking	ingve	9.424995	-5.4345694	story	8.0	126.0	1597865151	8.036665
24332825	Intel MKL on AMD Zen	Intel MKL on AMD Zen	todsacerdoti	9.26087	-5.2620473	story	8.0	142.0	1598890210	7.9030437
24416135	Its not really vendor locking by des	Its not really vendor locking by design. It locks to a signing key. That key COULD be shared between vendors or even a single vendor could have multiple incompatible keys.It provides a mechanism to prove the entire boot process hasn't been tampered with, but I wish AMD provided a way to run these fused processors in a generic way without the security chain, with it just reporting that there isn't a secure root of trust. However I assume they are afraid of that allowing malicious code to fool deeper parts of the system without the system administrator knowing.So good for security, but bad for e-waste and second hand sales.	jlawer	9.4445	-5.200141	comment	8.0	66.0	1599617906	7.8447185
24418248	Ask HN: Emoji in Commit Messages or 	Ask HN: Emoji in Commit Messages or Not?	pplonski86	9.770436	-6.2828774	story	8.0	6.0	1599636171	-13.978015
20126280	Ara: A 1 GHz+ Scalable and Energy-Ef	Ara: A 1 GHz+ Scalable and Energy-Efficient RISC-V Vector Processor	matt_d	9.376845	-5.650193	story	8.0	187.0	1559925112	-10.5715885
20146523	RISC-V Bitmanip Extension [pdf]	RISC-V Bitmanip Extension [pdf]	ncmncm	9.418697	-5.728191	story	8.0	83.0	1560173368	9.550581
20231949	Since 2000, AMD has often beaten Int	Since 2000, AMD has often beaten Intel on multi-threaded workloads, but never single-threaded (at comparable clocks). This bench shows AMD beating Intel on both! That's what's incredibly notable here. The last time it happened was 20 years ago with the AMD K7.Now Zen 2 seems to overall beat Intel on every metric: single-threaded perf, multi-threaded perf, perf/dollar, perf/watt. No matter how you look at it, Zen 2 comes out on top.¹ Very impressive.Man the folks at Intel must feel the heat.¹ Except perf/socket when competing with the Xeon 9200, but that's just a PR stunt no one cares about: https://mobile.twitter.com/zorinaq/status/113576693566724096...	mrb	9.247374	-5.2208138	comment	8.0	91.0	1561031996	7.881779
20249969	The first consumer 64 bit processors	The first consumer 64 bit processors came out a decade and a half ago.  Why is legacy 32 bit still a thing?  It's not like anyone can say they haven't had ample warning time that 32 bit deprecation was coming.	CydeWeys	9.722024	-5.237689	comment	8.0	49.0	1561215903	-7.853133
20410169	Playing with a Raspberry Pi 4 64-bit	Playing with a Raspberry Pi 4 64-bit	_ananos_	9.7535925	-5.192695	story	8.0	116.0	1562836419	-7.94265
20658584	J-Core Open Processor	J-Core Open Processor	ingve	9.534672	-5.2768846	story	8.0	103.0	1565388318	7.7416487
20935955	Emojis are increasingly coming up in	Emojis are increasingly coming up in court cases	prostoalex	9.787485	-6.269713	story	8.0	49.0	1568168134	-13.955787
39481002	I came across an interesting fact ab	"I came across an interesting fact about X86,> currently there are actually no modern x86 CPUs on the market. Both Intel and AMD don't actually use x86 cores, but instead proprietary RISC cores, with microcode that translates the x86 code to RISC code on the fly at execution time.https://cs.stackexchange.com/questions/132211/what-are-the-a...
This cs.stackexchange link is a good read.Wikipedia also states something similar,> In the P6 and later microarchitectures, x86 instructions are internally converted into simpler RISC-style micro-operations that are specific to a particular processor and stepping levelhttps://en.wikipedia.org/wiki/Intel_Microcode"	frfl	9.614533	-5.586006	comment	8.0	27.0	1708698794	-7.6602516
39579725	Intel Previews Sierra Forest with 28	Intel Previews Sierra Forest with 288 E-Cores, Announces Granite Rapids-D	PaulHoule	9.41925	-5.1869907	story	8.0	2.0	1709459175	7.839224
39607753	JEDEC publishes GDDR7 graphics memor	JEDEC publishes GDDR7 graphics memory standard	ksec	9.673867	-5.249229	story	8.0	152.0	1709665044	8.035965
39650860	STM32 MCU family goes 64-bit with th	STM32 MCU family goes 64-bit with the STM32MP2x (Cortex-A35)	unwind	9.718506	-5.2371173	story	8.0	81.0	1709981505	7.3905435
39660188	Been following this for a while b/c 	"Been following this for a while b/c Jim Keller, but every time I look at the arch [1; as linked by other commenter] as someone who doesn't know the first thing about CPU/ASIC design it just looks sort of... ""wacky""? Does anyone who understands this have a good explainer for the rationale behind having a grid of cores with memory and IFs interspersed between and then something akin to a network interconnecting them with that topology? What is it about the target workloads here that makes this a good approach?1. https://docs.tenstorrent.com/tenstorrent/v/tt-buda/hardware"	bschne	9.412656	-5.3015566	comment	8.0	45.0	1710086439	7.927627
36644004	The actual ruling [0] is very approa	"The actual ruling [0] is very approachable and far more interesting than the article above. The farmer was in the habit of accepting contracts from this particular company by saying ""yup"" or ""looks good"" or similar short responses. SWT quite reasonably took this usage of the thumbs up emoji as just another one of the farmer's casual signatures.If Chris sincerely did not intend to sign the contract, he really should not have been in the habit of accepting contracts with a casual single-word reply in the first place. Had he insisted on a more formal process in prior negotiations with SWT, I doubt the judge would have granted summary judgement in this case (and SWT probably wouldn't have assumed the thumbs up was a signature).[0] https://www.livelaw.in/pdf_upload/2023skkb116-480130.pdf"	lolinder	9.726521	-6.2422843	comment	8.0	60.0	1688821540	-13.9287615
36842666	Any promising riscv64 computers on t	Any promising riscv64 computers on the market I should know about? Raspberry pi level or otherwise? What computers could I use this distro on?	djha-skin	9.379751	-5.664168	comment	8.0	35.0	1690167867	-10.557989
36859018	Practical comparison of ARM compiler	Practical comparison of ARM compilers	manchoz	9.728914	-5.4176855	story	8.0	108.0	1690269278	-7.6602244
36915108	F# RISC-V Instruction Set formal spe	F# RISC-V Instruction Set formal specification	mrLSD-dev	9.4801235	-5.753051	story	8.0	134.0	1690589057	-10.52646
37051423	Inception: A simple XOR can cause a 	Inception: A simple XOR can cause a Microarchitectural Stack Overflow	ndesaulniers	9.749865	-5.5231047	story	8.0	133.0	1691511633	7.7373695
37228543	I'm surprised to see the spread of e	I'm surprised to see the spread of emoji attributed to Microsoft in the initial sentences. It's possible that the author may be referring to the smiley faces in extended character pages, or maybe Webdings, but I generally associate the term 'emoji' with Unicode characters specifically, which I believe to have been petitioned by Google and popularized by Apple.Interesting article either way.	WaffleIronMaker	9.826972	-6.2533264	comment	8.0	61.0	1692738492	-13.9555235
37316146	66 threads per core looks more like 	66 threads per core looks more like a barrel processor than anything else. We shouldn’t expect those threads to be very fast, but we can assume that, if the processor has enough work, it should be able to be doing something useful most of the time (rather than waiting for memory).	rbanffy	9.626756	-5.4063635	comment	8.0	89.0	1693355987	8.150735
37361597	More RAM is always nice but I'm secr	More RAM is always nice but I'm secretly hoping we'll start to see more ECC support in the future. With these humongous modules and even with a teeny tiny bitflip probability corruption chance becomes non insignificant.	spystath	9.480876	-5.5030746	comment	8.0	59.0	1693663104	8.225164
37382140	Sorry for my ignorance, but any idea	Sorry for my ignorance, but any idea when we can see Desktop Processors powered by RISC-V architecture? It would be breath of fresh air to see new architectures power the desktops.	ireallywantthat	9.380707	-5.6428328	comment	8.0	59.0	1693845628	-10.5573635
37447676	Somewhat related: I believe RISC-V i	Somewhat related: I believe RISC-V is going to  well in the coming decade. I've been trying to figure out what I can invest in to get exposed to it, but have been unable to find anything. If anybody had got any angles, I'd love to hear them!	micvbang	9.368864	-5.6866446	comment	8.0	47.0	1694279679	-10.609518
37474904	Arm’s Neoverse V2	Arm’s Neoverse V2	matt_d	9.5433445	-5.2309246	story	8.0	102.0	1694473593	-7.7319784
37509813	The strategy they are using to estab	The strategy they are using to establish a revenue stream that justifies this valuation is to continue to raise prices on their customers.  I think this works in the near term (next 5 to 10 years), and generate a ton of money for ARM, but it will drive additional momentum to RISC-V.The legendary Jim Keller is going all in on RISC-V, if you don't know Google him.  His company has many core designs coming as well chiplets: https://tenstorrent.com/risc-v/Because of Jim Keller and similar efforts I wouldn't be surprised for RISC-V to see both core count as well as per core performance meet ARM over the next few years.  Maybe even exceed if Jim can push the chiplet approach faster than ARM can roll theirs out.Hopefully this drives a lot of innovation and we all benefit as a result.I think that 	bhouston	9.396876	-5.535454	comment	8.0	76.0	1694703117	-10.546596
37544097	What is RISC-V, and why we're unlock	What is RISC-V, and why we're unlocking its potential	rwmj	9.371673	-5.720519	story	8.0	96.0	1694951862	-10.58172
37548842	"""No FPGAs, no microcontrollers, just"	"""No FPGAs, no microcontrollers, just discrete logic""Very hard to believe that. .. How? Is it a SUBLEQ-style Turing tarpit that uses a very high clock and simple hardware to run RISC-V ""in software"" at a slower clock? Do the discrete logic gates get woven into an ad-hoc FPGA?Considering the breadboard CPUs I saw a few years ago, it just doesn't look like enough board space... I could be wrong."	ReactiveJelly	9.162854	-5.384374	comment	8.0	44.0	1694981366	8.254977
24589597	Using time travel to remotely debug 	Using time travel to remotely debug faulty DRAM	KenoFischer	9.735739	-5.4070044	story	8.0	161.0	1601041431	8.083474
24720749	ECC support in AMD systems is strang	ECC support in AMD systems is strange. It's supported theoretically, but practically there are issues, one have to carefully pick motherboard and even then it's some kind of unsupported configuration. Intel sells cheap and fast Xeons with proper ECC support. I'm very interested in AMD CPUs and I hope that ECC story will improve, so I can buy some kind of workstation-branded motherboard and use fully supported ECC configuration.	vbezhenar	9.384641	-5.458558	comment	8.0	58.0	1602174739	8.165746
24817321	What is the PDP-11 instruction set?	What is the PDP-11 instruction set?	elvis70	9.892658	-5.48575	story	8.0	47.0	1603024116	-7.4789577
24906570	Everybody seems to view this as AMD 	"Everybody seems to view this as AMD mimicing Intel when it acquired Altera. (That acquisition has not born visible fruit.)My contrarian speculation is that this is a move driven by Xilinx vs. Nvidia given Nvidia’s purchase of Arm and Xilinx’ push into AI/ML. Xilinx is threatened by Nvidia’s move given their dependence on Arm processors in their SOC chips and their ongoing fight in the AI/ML (including autonomous vehicles) product space. My speculation is that this gives Xilinx an alternative high performance AMD64 (and possibly lower performance & lower power x86) ""hard cores"" to displace the Arm cores.Interesting times."	gvb	9.145021	-5.2820373	comment	8.0	73.0	1603800128	8.130503
25034042	One of the killer-features of RISC-V	One of the killer-features of RISC-V was being backdoor-free, but it appears that chinese companies will produce most of the chips. Back to square one.This is a pipe dream, but having self-managed local foundries (à la hackerspace) would be awesome to ensure that RISC-V stays secured, decentralised and competitive.	arnaudsm	9.361567	-5.6466875	comment	8.0	44.0	1604924968	-10.571123
25125129	Is any web developer planning to get	Is any web developer planning to get the new Apple Silicon Macs?How's docker support (for ARM and x86 images)? Do the major IDEs work on Rosetta? What's support looking like for languages like GO, Rust now/in the near future?	oatmeal_croc	9.667219	-5.920604	comment	8.0	33.0	1605628238	-7.730009
25148612	I wonder if this is because Google k	"I wonder if this is because Google knows about an exploit that hasn't been released yet or because it just makes sense given the side channel attacks we've already seen on CPUs.Is there any information on the performance impact of this change? The article says they've reduced the impact and gives a single example but I'd be interested to see a proper benchmark of a system with these patches installed.I can imagine most of a powerful core's performance going unused if the operating system isn't doing anything special and a multithreaded workload is trying to get a lot of work done. The same can likely be true for systems still rocking a dual core design, where ""one core for important stuff and one for applications"" can be quite taxing on system responsiveness."	jeroenhd	9.680013	-5.44334	comment	8.0	43.0	1605786894	7.8036103
25273708	RISC-V is starting to produce techno	RISC-V is starting to produce technological breakthroughs	tasubotadas	9.374536	-5.683778	story	8.0	15.0	1606889476	-10.580034
25310651	The future of 32-bit Linux	The future of 32-bit Linux	pabs3	9.933304	-5.253526	story	8.0	156.0	1607131084	-7.9720535
25339499	Many people are saying to those of u	"Many people are saying to those of us who _haven't_, for one reason or another, gotten completely off of Travis CI, ""the writing was on the wall"" or ""you can't expect free forever.""And I think they're missing the gravity of the situation—there were (and are still) a _ton_ of OSS projects out there that are configured to use Travis CI for their testing and build pipelines, and it's not free to switch to something else (even though there are many adequate alternatives).I wish there was another way, like providing a meager amount of build minutes, or just reducing the OSS builds to run on a few dozen servers, even if that means days-long build queues. That's better than just ending service abruptly like they did.I wrote [1] about my own plans, but I know many devs (especially for tiny side pr"	geerlingguy	8.892769	-6.4326153	comment	8.0	51.0	1607385501	-5.5489964
38598861	JEDEDC publishes new CAMM2 memory mo	JEDEDC publishes new CAMM2 memory module standard	rguiscard	9.710339	-5.1978464	story	8.0	92.0	1702285406	8.024045
38640783	Is it a common practice to commit de	Is it a common practice to commit dependencies into the project repo? If so what type of projects do that?	distcs	8.764082	-6.273455	comment	8.0	30.0	1702558421	13.795543
38712520	Author here if anyone has questions.	Author here if anyone has questions. A bit of a change from my usual x86 chips...	kens	9.645289	-5.3137884	comment	8.0	43.0	1703100315	-7.648634
32807903	Exploring FPGA Graphics	Exploring FPGA Graphics	rtpg	9.065509	-5.2564154	story	8.0	193.0	1662976556	8.191753
33017737	Threadripper 7000 Storm Peak CPU Sur	Threadripper 7000 Storm Peak CPU Surfaces with 64 Zen 4 Cores	ekoutanov	9.329546	-5.213697	story	8.0	70.0	1664438756	7.962522
33043489	Cloning a Rare ISA Card to Use a Rar	Cloning a Rare ISA Card to Use a Rare CD Drive [video]	fortran77	9.543047	-5.321321	story	8.0	155.0	1664594069	-7.7037334
33047634	Data Version Control	Data Version Control	HerrMonnezza	8.868821	-6.3764806	story	8.0	161.0	1664640597	8.990253
31865718	I built a small multitasking kernel 	I built a small multitasking kernel with a friend with a 68000 (m68000) in college. We implemented it on breadboards, I think with 30 or so feet of jumpers [0]. I had very little prior embedded experience, so it was trial by fire.It was a wonderful introduction to how kernels work (or at least concurrency and scheduling) at their most basic level, without having to deal with the complexity of virtual address spaces, memory protection, or the byzantine bring-up dance of register prodding that x86_64 needs. It prepared me well for my operating systems class the next year, and as far as I can tell, was the eye-catcher project that got me an internship on a team doing kernel development the following summer.The instruction set is also a dream. Super CISC-y, yet more enjoyable (and IMO easier t	dymk	9.716458	-5.3446846	comment	8.0	45.0	1656090147	8.036914
31887818	In the days before MMU's and fancy D	"In the days before MMU's and fancy DRAM controllers and newer DRAM chips the CPU had to do memory refresh during ""idle"" time."	tibbydudeza	9.804844	-5.377584	comment	8.0	37.0	1656276656	8.051573
31911655	Multiplying and Dividing on the 6502	Multiplying and Dividing on the 6502 (2021)	ibobev	9.649793	-5.575274	story	8.0	89.0	1656442793	8.674689
31918593	Arm Unveils Next-Gen Flagship Core: 	Arm Unveils Next-Gen Flagship Core: Cortex-X3	rbanffy	9.577242	-5.2265296	story	8.0	143.0	1656500782	7.777705
32236206	Yes, this is because emojis are crea	Yes, this is because emojis are created by committee. The Unicode committee to be precise.If instead emojis could be drawn and inserted in messages and maintained and shared through emoji-libraries by actual users, then we would get an actual naturally evolving language. Much more interesting.	amelius	9.832179	-6.2602262	comment	8.0	45.0	1658828716	-13.957798
32315362	How does one actually program on an 	How does one actually program on an FPGA? I know for GPU, you can buy an nvidia graphics cardm, rent an aws gpu machine or use google colab. Is there some consumer facing equivalent for FPGA programming?	eachro	9.079197	-5.3575363	comment	8.0	30.0	1659417220	8.45925
32443389	Intel 286 secrets: ICE mode and F1 0	Intel 286 secrets: ICE mode and F1 0F 04	rep_lodsb	9.453925	-5.260654	story	8.0	121.0	1660335427	7.773378
32509768	Does anyone have rumors/insider know	Does anyone have rumors/insider knowledge about the progression of Epyc/Threadripper?Threadripper seems insanely expensive right now, will the next generation be faster at least or use less energy? Or, in other words, does it make sense to wait?	klxmarket	9.427544	-5.3015885	comment	8.0	25.0	1660831531	8.089961
22016157	We don't have AArch64 desktops becau	We don't have AArch64 desktops because it's not possible to build an AArch64 motherboard. There are no standard sockets -- and every ARM vendor starts their system using a proprietary, inscrutable Rube Goldberg machine. On the Raspberry Pi, the GPU starts the processor for crying out loud.	ohazi	9.690907	-5.289126	comment	8.0	45.0	1578694258	-7.82183
22077974	Gathering Intel on Intel AVX-512 Tra	Gathering Intel on Intel AVX-512 Transitions	matt_d	9.442146	-5.525653	story	8.0	126.0	1579287912	8.058274
22218581	New Intel Microcodes for Windows 10 	New Intel Microcodes for Windows 10 Released to Fix CPU Bugs	fortran77	9.566738	-5.35681	story	8.0	84.0	1580669611	7.7544456
22274838	I love AMD and I am super impressed 	I love AMD and I am super impressed with the performance of this new CPU. Especially when comparing to top offering from Intel. But, how did they manage to catch up on Intel? Is there a catch? How did it go so wrong for Intel?	pythux	9.244935	-5.186308	comment	8.0	36.0	1581152939	7.887183
22284178	>Doing this on-premise is also prett	>Doing this on-premise is also pretty tantalizing - I watched a video recently of Linus Tech Tips where he built a 64 core Threadripper and used virtual machines to replace four physical computers in his home including two players simultaneously gaming.so basically a mainframe? I can't imagine it's economically viable though. a 64 core threadripper costs more than eight ryzen 3700x and clocks lower.	gruez	9.594072	-5.187571	comment	8.0	64.0	1581280966	7.9571247
13817344	Travis-Pls: Travis Builds That Don't	Travis-Pls: Travis Builds That Don't Timeout	naftulikay	8.850096	-6.410378	story	8.0	39.0	1488940230	-5.5393
14206897	There is a hidden cost of ECC with r	There is a hidden cost of ECC with regards to the chipset. None of the cheap chipsets support it, so on any home build, it's going to be expensive.	rocqua	9.421834	-5.4442577	comment	8.0	40.0	1493240074	8.1127615
14273909	Surveying the Law of Emojis	Surveying the Law of Emojis	alizauf	9.798629	-6.262692	story	8.0	42.0	1493996436	-13.957201
14283050	I want to buy RISC-V, both to play w	I want to buy RISC-V, both to play with and to support the cause. What are my options like and should I buy something now or wait for the next generation?	DonbunEf7	9.376811	-5.679748	comment	8.0	29.0	1494115866	-10.590303
14518634	Intel/x86 seems to have missed prett	Intel/x86 seems to have missed pretty much every major trend but somehow manages to keep up.At the time, Intel seemed to have pinned the 64-bit future on Itanium.  Which, on paper, is a much better architecture.  Of course instruction parallelism should be in the hands of the compiler -- it has so much richer information from the source-code so it can do a better job.  The MMU design was very clever (self-mapped linear page tables, protection keys, TLB sharing, etc).  Lots of cache, minimal core.  Exposing register rotation and really interesting tracing tools.  But AMD released x86/64, Intel had to copy it, and the death warrant on Itanium was signed so we never got to really explore those cool features.  Just now we're getting things like more levels of page-tables and protection-key typ	delsarto	9.566816	-5.5038586	comment	8.0	65.0	1496972719	8.024865
14560596	Oh for pete's sake, the die size cos	Oh for pete's sake, the die size cost for supporting the legacy x86 instructions is a fraction of a percent on a modern multicore CPU. This is because the translation hardware stays relatively fixed (in terms of size and complexity and transistor count), while Moore's Law keeps adding more hardware to each core and more cache, etc..Take a look at this annotated die shot of an old Pentium 4:https://i.stack.imgur.com/QK4gm.jpgUp at the top is the microcode memory and microcode sequencer. That's the hardware that's responsible for translating all those old, large legacy instructions. It's not really much space on the P4, and the P4 Northwood is a 55-million transistor CPU.Nowadays, depending on if you're talking about a mobile part or a higher-end desktop or server part, the CPUs have between	jonstokes	9.572346	-5.4615645	comment	8.0	25.0	1497536301	7.7696958
14590847	GERT: Run Go on Bare Metal ARMv7	GERT: Run Go on Bare Metal ARMv7	chuckdries	9.812234	-5.856053	story	8.0	267.0	1497910393	-7.7550335
30800084	My issue is that our company uses Gi	My issue is that our company uses Gitlab for CI builds and Gitlab doesn't have ARM runners. And I'm the only guy with Macbook, so using some Mac Mini for Gitlab CI runner is not possible. I'm rebuilding images for myself that I'm currently working on, but that's tedious and not very productive spending of time.Another alternative that I'm currently considering is to rent some VPS in my city and use it as docker host. I'll be dependant on the Internet, so that's not very nice, but might be an option to consider.I wish Apple would extend Rosetta to VM support. That's really missing piece of puzzle when it comes to migrating to ARM. qemu is not good enough.	vbezhenar	9.632583	-6.1381655	comment	8.0	28.0	1648200486	10.029434
30935492	This has been discussed on HN before	This has been discussed on HN before.I don't condone Intel behavior, but let's be honest here: AMD underinvests in software and expects others to pick up the slack.  That isn't acceptable.	Kon-Peki	9.268389	-5.187938	comment	8.0	60.0	1649268518	7.841678
31248469	Running tasks on E cores can use a t	Running tasks on E cores can use a third of the energy of P cores	zdw	9.563225	-5.3318176	story	8.0	60.0	1651586775	7.9553123
31442313	We built the best search engine for 	We built the best search engine for coders – Introducing YouCode	andromaton	8.837734	-5.9838085	story	8.0	62.0	1653009851	-11.1091175
31470290	So ARM64 has dedicated instructions 	So ARM64 has dedicated instructions for CRC32, but implementing it by hand using SIMD is still faster. Score another point for RISC.	ntoskrnl	9.634346	-5.745709	comment	8.0	81.0	1653238718	-10.385947
31557041	Build your own FPGA (2012)	Build your own FPGA (2012)	pabs3	9.091055	-5.325636	story	8.0	87.0	1653902397	8.329978
31697580	Now we need the FPGA equivalent. The	Now we need the FPGA equivalent. The FPGA industry is still very much stuck in what was the pre-GNU era of software	glouwbug	9.088534	-5.357089	comment	8.0	35.0	1654884995	8.364417
25554500	I always thought it was insane that 	"I always thought it was insane that the CPUs had instructions specific to a particular application in a particular operating system embedded in them. I think the close we get to the metal, the more abstract and general purpose things should get. For example, things like ""Floating-point Javascript Convert to Signed fixed-point, rounding toward Zero"" should not exist at all."	wintorez	9.736827	-5.450736	comment	8.0	24.0	1609105229	-7.5098295
25623764	I still remember Craig Silverstein b	"I still remember Craig Silverstein being asked what his biggest mistake at Google was and him answering ""Not pushing for ECC memory.""Google's initial strategy (c. 2000) around this was to save a few bucks on hardware, get non-ECC memory, and then compensate for it in software.  It turns out this is a terrible idea, because if you can't count on memory being robust against cosmic rays, you also can't count on the software being stored in that memory being robust against cosmic rays.  And when you have thousands of machines with petabytes of RAM, those bitflips do happen.  Google wasted many man-years tracking down corrupted GFS files and index shards before they finally bit the bullet and just paid for ECC."	nostrademons	9.483318	-5.5373526	comment	8.0	132.0	1609698585	8.2361765
25685212	Why don’t PCs use error correcting R	Why don’t PCs use error correcting RAM? “Because Intel,” says Linus	husam212	9.670961	-5.461002	story	8.0	48.0	1610117267	8.124077
25869918	Android Ported to RISC-V	Android Ported to RISC-V	phkahler	9.387953	-5.6641264	story	8.0	190.0	1611307211	-10.6019535
25875823	Has anyone here made the jump? I'm c	Has anyone here made the jump? I'm considering testing some components or our infrastructure on Gravitron processors but going all the way in with the database sounds risky but I don't really have a technical data point to justify my bias.	fb03	9.421983	-5.2121882	comment	8.0	35.0	1611346479	7.76717
25955579	C-for-Metal: High Performance SIMD P	C-for-Metal: High Performance SIMD Programming on Intel GPUs	lelf	9.7675295	-5.850705	story	8.0	126.0	1611912470	8.15633
25974757	RV64X: A Free, open-source GPU for R	RV64X: A Free, open-source GPU for RISC-V	mardiyah	9.328289	-5.558353	story	8.0	188.0	1612055736	-10.558997
26248603	FPGA Developer Tutorials	FPGA Developer Tutorials	Alekhine	9.074143	-5.3644114	story	8.0	159.0	1614163336	8.417721
26267707	CP/Mish is an open source sort-of-CP	CP/Mish is an open source sort-of-CP/M distribution for Z80	mariuz	9.61075	-5.207083	story	8.0	93.0	1614284327	6.915981
26389527	This is huge. It looks like the only	This is huge. It looks like the only architectures widely-deployed in ten years will be x86, ARM, Power, and RISC-V (maybe also SPARC64 in Japan, although that's rare in the US).	gautamcgoel	9.635914	-5.304046	comment	8.0	50.0	1615228129	-7.7454824
26391827	Check your router's CPU. I own 4 rou	Check your router's CPU. I own 4 routers and all of them use MIPS. RISC-V is more like Graphene, it's yet to leave the lab.	slezyr	9.44233	-5.68403	comment	8.0	34.0	1615238865	-10.532377
26408100	Isn't the 486 ISA (and whole surroun	Isn't the 486 ISA (and whole surrounding architecture really) royalty free by now? I wish we'd get cheap chinese 486 clones like the knock-off Arduinos.Imagine paying < $10 for a 486-compatible SBC for all your retro nerd needs. Yes, I know you can emulate it on a $25 Raspberry Pi, but it's not the same.	gigel82	9.540374	-5.3691077	comment	8.0	32.0	1615353892	-7.7459545
26436515	A Spectre proof-of-concept for a Spe	A Spectre proof-of-concept for a Spectre-proof web	theafh	9.681115	-5.62223	story	8.0	117.0	1615561430	7.678298
35951867	StarFive VisionFive 2 SBC Now Suppor	StarFive VisionFive 2 SBC Now Supports TianoCore EDK II (UEFI)	snvzz	9.555782	-5.4057508	story	8.0	41.0	1684172832	-10.530078
36135190	Box64 and RISC-V	Box64 and RISC-V	ekianjo	9.448067	-5.684277	story	8.0	124.0	1685514770	-10.539224
36149785	I feel like some of the comments her	I feel like some of the comments here are missing the point. Yes it's only likely to effect a small number of users, so did the intel fdiv bug, both are defective products.Back then intel were pressured into a recall, today we seem too willing to put up with being sold broken stuff.	RobotToaster	9.418262	-5.23794	comment	8.0	60.0	1685619142	7.8188887
36449564	AMD's 128-core Epycs could spell tro	AMD's 128-core Epycs could spell trouble for Ampere Computing	PaulHoule	9.3281555	-5.2343197	story	8.0	194.0	1687539871	7.8938093
36469779	Some risc-v chips can execute in ord	Some risc-v chips can execute in order and avoid having spectre-like problems. I work at a IaaS where customers deploy through our hosted cicd and we are very interested in risc-v solving our multi-tenancy concerns.GCC and clang already have enough support for risc-v that we have no concerns for support being there. If GCC and clang have what's necessary, everything else is fine.The moment we see close to a juncture where we can put an order in for risc-v with very many cores, our investors are going to dump a massive round of funding.Whether risc-v is popular or not doesn't matter. Our multi-tenant services won't have fundamental security isolation problems, everyone serving on x86_64 and ARM will. Looks like risc-v will dominate where things actually matter, unless some new iteration of 	user6723	9.386905	-5.6478653	comment	8.0	39.0	1687709651	-10.601635
28682827	Platform/x86: Add Intel Software Def	Platform/x86: Add Intel Software Defined Silicon driver	chenzhekl	9.413121	-5.2055283	story	8.0	44.0	1632837398	7.726755
28767536	This is a misleading headline. It's 	This is a misleading headline. It's a little FPGA program that's implemented 1990 style.	Ericson2314	9.192109	-5.283245	comment	8.0	46.0	1633479546	8.261728
28855044	> The idea of implementing a CPU cor	"> The idea of implementing a CPU core inside an FPGA is not new, of course.Indeed. I took a computer engineering class in undergrad. The capstone project was implementing from scratch a multi-pipeline RISC CPU (including the ALU and a very basic L1 cache) in Verilog that we flashed to FPGAs that we then programmed to play checkers using hand-compiled C. The FPGA was easier to flash and debug than the Spartan-6 mentioned in TFA but was significantly more expensive as well.It was a brutal class, but it totally demystified computers and the whole industry in a way that made me feel like I really could understand the ""whole"" stack. Nothing scares me any more, and I no longer fear ""magic"" in software or hardware."	ryanianian	9.102934	-5.327034	comment	8.0	47.0	1634146590	8.2450485
29031814	The amount of low level CPU architec	The amount of low level CPU architecture knowledge to write such a program is mind boggling. Just goes to show how much room for improvement a lot of programs have.	jtchang	9.697023	-5.330146	comment	8.0	120.0	1635454317	7.877737
29056070	The Pentium F00F Bug (1998)	The Pentium F00F Bug (1998)	unilynx	9.515387	-5.2643223	story	8.0	54.0	1635677565	7.893416
29140664	Alibaba open sources four RISC-V cor	Alibaba open sources four RISC-V cores: XuanTie E902, E906, C906 and C910	DeathArrow	9.399576	-5.633383	story	8.0	119.0	1636301699	-10.599683
29166156	Intel Hardware allows activation of 	Intel Hardware allows activation of test or debug logic at runtime	_tk_	9.438643	-5.2806644	story	8.0	101.0	1636485639	7.7644916
29285130	Box64 lets you run x86_64 programs o	Box64 lets you run x86_64 programs on non-x86_64 systems	marcodiego	9.821315	-5.3528	story	8.0	177.0	1637376306	-7.9068003
29303758	Since POWER9 and OpenSPARC are open 	Since POWER9 and OpenSPARC are open architectures with open ISAs, I don't see why companies like Facebook, Amazon, Alibaba aren't using them and trying instead to build CPUs based on ARM. Is there a much better performance/power ration which can be achieved by ARM and not by POWER or SPARC?	DeathArrow	9.589806	-5.241234	comment	8.0	68.0	1637565890	-7.7281404
29379792	CPU Pinning and CPU Sets (2020)	CPU Pinning and CPU Sets (2020)	arnold_palmur	9.570102	-5.28954	story	8.0	55.0	1638193542	7.9039674
29399504	Microcode Research Team	Microcode Research Team	pabs3	9.616961	-5.409556	story	8.0	74.0	1638321152	7.6040564
29417885	RISC-V Int. Ratifies 15 New Specs, O	RISC-V Int. Ratifies 15 New Specs, Opening Up New RISC-V Design Possibilities	snvzz	9.372005	-5.6971126	story	8.0	150.0	1638461104	-10.565923
29421569	I don't think they even tried to rea	I don't think they even tried to read the ISA spec documents. If they did, they would have found that the rationale for most of these decisions is solid: Evidence was considered, all the factors were weighted, and decisions were made accordingly.But ultimately, the gist of their argument is this:>Any task will require more Risc V instructions that any contemporary instruction set.Which is easy to verify as utter nonsense. There's not even a need to look at the research, which shows RISC-V as the clear winner in code density. It is enough to grab any Linux distribution that supports RISC-V and look at the size of the binaries across architectures.	snvzz	9.429608	-5.698624	comment	8.0	146.0	1638474851	-10.558776
29486309	A lot of DDR initialization code is 	A lot of DDR initialization code is heavily patented and often considered a “trade secret” which is why it’s rarely released and publicized. It’s not that complicated if you know hardware and work with the official internal data sheet. I’ve seen those as part of partnership between CPU vendors and my workplace. You get to read them on a special Remote Desktop so you don’t copy them. Same for ME. Once you know what’s actually in the code the conspiracy theories do seem funny :)	mrcode007	9.667996	-5.2307696	comment	8.0	30.0	1638979113	3.242396
29490404	I was just thinking this morning tha	"I was just thinking this morning that Intel segments their market by the class of person that is their customer.""You're a consumer, you don't need error correcting memory! Only the upper class, I mean... your superiors... err.. sorry, enterprise customers need that feature. It's reserved for them, it is not for the likes of you.""Meanwhile AMD basically sells silicon by unit area. It's like buying gelato at the ice cream shop. You can ask for one scoop, two scoops, or three. You get to decide how hungry you are, that's it. There isn't a flavour with broken glass in it[1] served only to the working class stiffs, and with the glass-free gelato reserved only for the gentry.[1] This is pretty much what a CPU without ECC is. It randomly crashes and corrupts your data. Look. Not every bite of ice"	jiggawatts	9.305937	-5.2405214	comment	8.0	70.0	1638997107	7.9015555
29637996	Especially when programming, but als	"Especially when programming, but also at most other times, I want a 1 to 1, unambiguous correspondence between the symbol I entered and the display on the screen.Making my "":)"" into an emoji is wrong. ""Do what I meant"" input magic bullshit is always going to be wrong about ""what you meant"" sometimes, and occludes the possibility of ""I didn't know what I meant until I saw it"" with its helpful corrections.Have had this argument with fans of ""autocomplete"" systems, too. An analogy I like is a powered exoskeleton: if you had one you could run faster and jump higher and all these good things: but then when it breaks or you're not wearing it you've less native ability and no familiarity with the unassisted world, which makes you dependent on the tools."	h2odragon	9.893863	-6.212382	comment	8.0	68.0	1640098905	-13.950935
34126559	> Why ECC Memory Is So ImportantExce	> Why ECC Memory Is So ImportantExcept that it's not for many use cases.  It's great for servers but for people on their personal and/or work computer, it's simply not that useful.Seriously: which percentage of developers have ECC on their development machine(s)?As developers we live in a world of SSH, cryptographic hashes, checksums everywhere, Git repositories (that is a big one), Merkle trees, digital signatures, reproducible builds (which are gaining traction), etc.Heck, I'm torrenting the latest Debian or Devuan .iso image.  My torrent client is using every known trick under the sun to make sure that should anything go wrong, the broken data shall be discarded and re-downloaded.  Download is done, I dd the image to some installation medium.  I can then verify its checksum matches the 	TacticalCoder	9.51963	-5.5429125	comment	8.0	45.0	1671970352	8.304056
34126934	We don't have ECC mainly because Int	"We don't have ECC mainly because Intel has long been hostile to ""consumer"" access to ECC.Apparently this was conceived as a market segmentation scheme: people outfitting servers could get ECC when they pay a huge premium. They would thereby not be tempted to cheap out and buy consumer-grade equipment, otherwise wholly adequate to meet all their needs at a radically cheaper price.That we cannot get laptops or even desk machines with ECC, and so have them crash frequently, is seen as a trivial side effect of the strategy. If you did not hate Intel enough before, you may increase your hatred accordingly. Intel doesn't hate you back; they simply care not even a little how you feel.(Historically, just running Microsoft software was overwhelmingly more likely to be the cause of a crash than a me"	moloch-hai	9.458169	-5.4917955	comment	8.0	78.0	1671973800	8.212915
34205311	Ripes: Visual computer architecture 	Ripes: Visual computer architecture simulator, assembly code editor for RISC-V	ingve	9.554166	-5.82114	story	8.0	151.0	1672570046	-10.48792
34241393	> The result is that Chinese tech co	> The result is that Chinese tech companies are rallying around RISC-V as the future chip architecture.That’s really the motivation here. I guess google is trying to stay ahead of being replaced in China?To me, as a westerner, I‘d rather see ARM succeed than RISC-V. Despite ironically being designed in the west, rallying the world around an open instruction set I believe will primarily benefit China, who wants to lead in semiconductors. It gives them the ability to become big players without having to push a new ISA on the world, and if it becomes dominant on mobile, they could see themselves replacing Qualcomm, Intel etc. It is a zero sum game all around.	azinman2	9.350238	-5.655408	comment	8.0	38.0	1672800910	-10.592823
34290595	How secure are RISC-V chips?	How secure are RISC-V chips?	giuliomagnifico	9.362353	-5.6558495	story	8.0	58.0	1673113928	-10.569766
34376775	TinyEMU – x86 and RISC-V emulator, s	TinyEMU – x86 and RISC-V emulator, small and simple while being complete	peter_d_sherman	9.48766	-5.5917206	story	8.0	134.0	1673663369	-7.367509
34460628	Alternatively, a good chunk of my tw	Alternatively, a good chunk of my twitter feed would call this the bottom emoji, without attempting to give it a pronunciation. I don't think any particular pronunciation has consensus, but various groups of people imbue it different meanings.	tux3	9.810711	-6.257133	comment	8.0	38.0	1674252108	-13.953202
34460736	A appreciate you 'describing' the em	"A appreciate you 'describing' the emoji for me.I'm on the spectrum, and I can't tell 99% of these things apart.  Looks like a sad face to me.  no different then the 500 other sad face emoji's I find.
I'll stick with =("	UI_at_80x24	9.795383	-6.2645054	comment	8.0	35.0	1674252594	-13.981736
34494459	Yes, another look inside the 8086. A	Yes, another look inside the 8086. Any suggestions on what part of the 8086 I should write about next?	kens	9.621831	-5.4031897	comment	8.0	46.0	1674505409	-7.5448084
34545238	This is why I can never get excited 	This is why I can never get excited about Intel doing anything outside mainline x86.Years ago, IBM and Freescale had the faith to build a community through POWER and, while not a homerun, that ecosystem still exists today (and I was able to benefit by selling hundreds of thousands/millions of devices powered by PPC/POWER).Every time I’ve tried to get excited about an Intel product line and build on it - Larrabee, Phi, Itanium - I’ve gotten massively burned. I just can’t trust them.	atdrummond	9.432399	-5.196045	comment	8.0	59.0	1674822403	7.736838
34680656	Are there ANY tasks for which I coul	Are there ANY tasks for which I could get a significant speed advantage on a cheap FPGA (including I/O with computer to communicate result) compared to just using a CPU? Are there any compared to using CPU+GPU?Edit: By cheap I mean something like in the article or a bit more expensive, for sure < $1000. By CPU I mean something like an M1. By GPU I mean something like an Nvidia 2080Ti.	auggierose	9.104931	-5.279669	comment	8.0	26.0	1675703911	8.223025
34766833	Couple of interesting twitter thread	Couple of interesting twitter threads on this from Tyler (The Drive). He suggests this has been coming/happening for some time.https://twitter.com/aviation_intel/status/162414986417840128...Also that we are seeing a lot more now because we have turned down/off the filters on the radars. Which means also we can expect a lot more false positives.https://twitter.com/aviation_intel/status/162461466198661120...	erentz	9.305276	-5.186211	comment	8.0	31.0	1676235237	7.6009583
34892298	How would x86-64 be as efficient wit	How would x86-64 be as efficient with the same transistor & power budget when they have to run an extra decoder and ring within that budget? Seems physically impossible.	jorvi	9.679672	-5.491321	comment	8.0	30.0	1677046698	-7.7691774
35026329	ECC is good, and I genuinely wish it	"ECC is good, and I genuinely wish it were more common. Thankfully, Ryzen CPUs support ECC by default (except for pre-7000 series with integrated graphics that aren't ""Pro"" versions), so long as the motherboard does, too (like all ASRock that I've seen). I'm running several Ryzen servers with ECC.On the other hand, there are many, many systems out there that don't have ECC, nor do they have the option to have ECC. While every video on Youtube wants us to believe that the difference between 580 and 585 frames per second in some silly game or another makes all the difference in the world, for me the difference between a system that runs 10% slower and one that crashes in the middle of the night is actually significant. I test all my systems at a certain memory frequency, then back off to the "	johnklos	9.432692	-5.48289	comment	8.0	39.0	1677981618	8.216497
18978346	Looking at Idera portfolio, I see Em	Looking at Idera portfolio, I see Embracadero (Delphi developers for many years), Sencha (Ext.js), Assembla (was GutHub of Subversion era). So it seems like they buy companies and products that were big and very important among developersin the past, but not necessary leading the pack today.I didn't think of Travis in that regard, though in a past few month I started to see Circle CI badges popping here and there for opensource repositories and anecdotally many internal projects at companies are moving to GitLab and their built-in CI offering.Probably a good time to sell the company, though I'd prefer if they would find a better buyer.	andrewl-hn	8.854184	-6.3877788	comment	8.0	89.0	1548253723	-5.4263906
19147754	Researchers use Intel SGX to put mal	Researchers use Intel SGX to put malware beyond the reach of antivirus software	protomyth	9.513117	-5.229972	story	8.0	86.0	1550007223	-5.901679
19206609	This argument is less effective give	This argument is less effective given that SIMD is not always a straightforward substitute for vector processing. Sometimes we want 128, 256 or 512 bits of processing as a unit and will follow it up with something different, not a repeated instance of that same process.We had numerous different examples of this in the Hyperscan project and I broke out something similar on my blog: https://branchfree.org/2018/05/30/smh-the-swiss-army-chainsa...We also used SIMD quite extensively as a 'wider GPR' - not doing stuff over tons of input characters but instead using the superior size of SIMD registers to implement things like bitwise string and NFA matchers.A SIMD instruction can be a reasonable proxy for a wide vector processor but the reverse is not true - a specialized vector architecture is u	glangdale	9.925607	-6.084968	comment	8.0	65.0	1550653005	8.169154
19228404	Node and Ruby applications do fail o	Node and Ruby applications do fail on ARM though, when it comes to native libraries and extensions. And now your whole distro is different than your development machine, which adds complexity.Do I really want to be debugging why node-gyp fails to compile scrypt on the ARM distro on the new Amazon A1 ARM instance (which it did in my case)? And if I solve that, what about the other 2451 dependencies? Let's pessimistically say there's a 1% failure rate, I'll be stuck doing that forever! Nah, I'll just go back to my comfy x86 instance, life's short and there's much code to write :)I think I'll side with Linus on this one. I saw first-hand how non-existent the x86 Android market was, despite Intel pouring megabucks into the project. If the developers don't run the same platform, it's not going 	Androider	9.726516	-5.2961354	comment	8.0	93.0	1550864283	-7.721798
19327276	CISC vs RISC is almost completely ir	"CISC vs RISC is almost completely irrelevant these days.They both borrowed so many ideas from each other that the architectures are nearly identical these days.  
Neither modern ARM or modern x86 architectures deserve to be called RISC or CISC.Still, there are a few areas where the A64 architecture is theoretically ""better"" than x64, due to the lack of legacy.The first is instruction decoding, x86 had to deal with a whole bunch of weird instruction length modifiers, prefix bytes, weird MOD RM encodings and years of extensions. To decode the 4 or 5 instructions per cycle that modern out of order microarchitectures demand, Intel CPUs have to attempt decoding instructions at every single byte offset in a 16 byte buffer, throwing away unwanted decodings. That's got to waste transistor and powe"	phire	9.536389	-5.6764383	comment	8.0	92.0	1551959052	-10.468326
19373991	Scaleway cloud adds AMD EPYC instanc	Scaleway cloud adds AMD EPYC instances	nirv	9.320087	-5.2159486	story	8.0	149.0	1552431962	-7.7538633
19551083	Verilator: Fast, Free Verilog HDL Si	Verilator: Fast, Free Verilog HDL Simulator	steven741	9.111356	-5.489458	story	8.0	102.0	1554178996	8.568868
15948024	ITX-sized 7-node ARM-64 cluster	ITX-sized 7-node ARM-64 cluster	rbanffy	9.619998	-5.2024326	story	8.0	136.0	1513549463	7.9604087
16067245	An Update on AMD Processor Security	An Update on AMD Processor Security	Deimorz	9.433752	-5.229791	story	8.0	192.0	1515029673	7.8570466
16067613	PSA: Disable JavaScript. Meltdown/Sp	PSA: Disable JavaScript. Meltdown/Spectre exploits are live	chapill	9.708232	-5.584548	story	8.0	28.0	1515034239	7.667545
16069839	A CPU bug with undocumented opcodes,	A CPU bug with undocumented opcodes, possibly Intel (scroll to p. 155)	baybal2	9.740205	-5.602221	story	8.0	63.0	1515069064	-7.489503
16085105	The Meltdown attack requires an atta	"The Meltdown attack requires an attacker to have a piece of code executed on your server. Epic's servers are used for login, where people send you data, and for game logic, where people also just send you data like ""player x moved his avatar here, player y shoots etc"". If all the server does is execute the code which Epic wrote themselves and already  trust, why would it need to apply the Meltdown patch?"	Darthy	9.605562	-5.4760084	comment	8.0	53.0	1515244000	7.714925
16089222	Building a More Secure World with th	Building a More Secure World with the RISC-V ISA	sverige	9.418752	-5.69373	story	8.0	133.0	1515300296	-10.534543
16131932	A Security Issue in Intel’s Active M	A Security Issue in Intel’s Active Management Technology	buovjaga	9.475415	-5.2107205	story	8.0	143.0	1515754115	7.7183986
16186001	Why give up on performance?IA-64 (ht	Why give up on performance?IA-64 (https://en.wikipedia.org/wiki/IA-64#Architecture) already exists, with its explicitly parallel instruction set, which leaves branch prediction and speculative execution up to the software. So you can still get many of the performance benefits, but it's under control of the software, giving a lot more flexibility for being able to mitigate or eliminate these kinds of issues.I think that it was probably introduced ahead of its time, and targeted at the wrong markets, but it's kind of sad that with the Spectre vulnerabilities, we don't have any way of comprehensively addressing it in software without jumping through a lot of hoops and applying microcode updates.	lambda	9.648204	-5.427619	comment	8.0	38.0	1516368432	7.8032975
16237503	Emoji in the first title? Emoji in e	Emoji in the first title? Emoji in every damn title?Are children developing webpack?	simooooo	9.825785	-6.257575	comment	8.0	35.0	1516950459	12.998276
16302720	Meltdown-Spectre: Malware is already	Meltdown-Spectre: Malware is already being tested by attackers	okket	9.622285	-5.5657754	story	8.0	145.0	1517752241	7.7550135
16324097	LMARV-1: A RISC-V processor you can 	LMARV-1: A RISC-V processor you can see [video]	Retr0spectrum	9.391428	-5.649813	story	8.0	120.0	1518008693	-10.535367
16353439	CI/CD Is Not a Progression	CI/CD Is Not a Progression	kiyanwang	9.182815	-6.409271	story	8.0	82.0	1518368407	6.162496
16371874	Apple won't approve apps that use em	Apple won't approve apps that use emojis that aren't provided by the keyboard	JamieF1	9.794552	-6.245679	story	8.0	65.0	1518564207	-13.949332
16381978	Spectre Mitigations in Microsoft's C	Spectre Mitigations in Microsoft's C/C++ Compiler	ENOTTY	9.665355	-5.6053867	story	8.0	163.0	1518670038	7.8855
16558960	How MOS 6502 Illegal Opcodes Work (2	How MOS 6502 Illegal Opcodes Work (2008)	ingve	9.804918	-5.6173635	story	8.0	82.0	1520697869	-7.453229
16590052	​Linus Torvalds slams CTS Labs over 	​Linus Torvalds slams CTS Labs over AMD vulnerability report	rpledge	9.340126	-5.5707417	story	8.0	136.0	1521080984	-8.19739
16730081	Honest, stupid question:On x86/x86_6	Honest, stupid question:On x86/x86_64 the major advantage 64-bit mode brings to the table is support for more than 4 GiB of RAM. You get more registers and (IIRC) better support for position independent code, OTOH, pointers get bigger which may cause worse cache utilization. My personal experience after running both a 32-bit and a 64-bit system on the same machine was that performance was pretty much the same; either for me, performance was limited by other factors (cough I/O cough), or the advantages and disadvantages of 64-bit mode canceled each other out (or the difference was too low for me to notice).On a device like the Raspberry Pi 3 (I happen to have one at hand), where the amount of RAM is a) fixed and b) less than 4 GiB, what advantages might a 64-bit OS offer?EDIT: Thanks for al	krylon	9.807125	-5.4245796	comment	8.0	34.0	1522612465	7.892608
16841659	I always miss multithreaded benchmar	I always miss multithreaded benchmarks when using SSE/AVX instructions. AFAIK AVX processing units are oversubscribed, there are less of them than CPU cores.I can imagine that running AVX is_sorted (or any other AVX procedure) in multiple threads would be actually slower than running non-vectorized procedure.Of course, that's my purely anecdotal opinion.	alfanick	9.482396	-5.554012	comment	8.0	27.0	1523776482	-5.263131
16905765	> a run that takes 1 hour on 720 cor	"> a run that takes 1 hour on 720 cores can be run on the CPUs of a 48-core personal computer in 16 hoursIs calling a 48-core machine a ""personal computer"" a bit of a stretch, or am I missing something?"	ironrabbit	9.560894	-5.2402873	comment	8.0	41.0	1524506122	7.8752804
16956728	Wittgenstein and emoji	Wittgenstein and emoji	theaeolist	9.79595	-6.266586	story	8.0	37.0	1525076181	-13.955264
16977960	Hello, Josh from Travis CI here.We a	Hello, Josh from Travis CI here.We are happy to announce that you can now run open source projects on travis-ci.com. At the moment you can only add and activate repositories which haven't been tested on travis-ci.org. We are hard at work to add a way for you to migrate your projects from travis-ci.org to travis-ci.com, and should have more information to share on this soon.If you have any questions I would be happy to help answer them here, or you can email our team at support@travis-ci.com	cookiestack	8.827565	-6.386343	comment	8.0	35.0	1525275482	-5.499039
17066048	Ask HN: FPGA Projects	Ask HN: FPGA Projects	LastZactionHero	9.082907	-5.345185	story	8.0	19.0	1526309703	8.372458
17121811	Speculative execution, variant 4: sp	Speculative execution, variant 4: speculative store bypass	brandon	9.687398	-5.666017	story	8.0	184.0	1526936634	-6.7538567
17231704	We analysed 75K builds and this is w	We analysed 75K builds and this is what we learned about CI/CD	Rubytron	9.215259	-6.4206243	story	8.0	50.0	1528142406	6.138178
17263696	When it comes to being oversensitive	When it comes to being oversensitive needy little things there is no true Scottsman.As a northern European I find it not only comfortable that Linus runs Linux, but I would be less comfortable if it was another American smile in face  pretend to be your friend but be shady as fuck attitude that you guys seem to confuse for 'professionalism'.So let's chalk this to cultural differences. We wouldn't hire someone like you  and you wouldn't hire someone like him.	ralfn	9.303202	-5.8851767	comment	8.0	65.0	1528448023	4.2896247
17272233	What's the tooling like for a typica	What's the tooling like for a typical, production-quality FPGA project nowadays? Last I checked, which is admittedly a couple of years ago (and I didn't dive in very deeply), it was a horrible mix of badly programmed vendor-specific Windows-only GUI tools. It seemed a lot like the embedded processor market where every single vendor has their own lock-in strategy and the whole ecosystem suffers for it. Has this improved in the meantime?	codeflo	9.082385	-5.380711	comment	8.0	47.0	1528536901	8.414414
17281241	Does anyone still use SourceForge af	Does anyone still use SourceForge after they started embedding adware with their download links? I give them credit for being an early innovator and I know they are under new management as of 2016 and supposedly put that behind them[1] but they have permanently lost my trust.[1] https://arstechnica.com/information-technology/2016/06/under...	throwaway2016a	8.752168	-5.9808416	comment	8.0	47.0	1528683053	-11.685491
17384805	Wink-lemmatizer	Wink-lemmatizer	petethomas	9.916177	-6.117835	story	8.0	51.0	1529811643	-13.940494
17526354	I wonder if there are cpus with 1-in	I wonder if there are cpus with 1-instr state saveps: thank you all for the answers	agumonkey	9.586889	-5.375686	comment	8.0	33.0	1531513288	7.972386
17532614	This is just bizarre - seems like co	This is just bizarre - seems like corporate insanity to me. TO give some background to this, Intel's PSG is what Intel renamed Altera. Of course Altera was the FPGA company, and as part of their Stratix III/IV/V range they did 'HardCopy' which, basically was a structured ASIC! They canned it because in reality whilst customers want to be able to go ASIC in theory, it never really made much sense in practice. So what? They're buying a company that is doing something people don't want?That's what really worries me - because if the acquisition were going into the group that builds Xeons, basically as an enabling technology for an internal team that makes sense. But  being part of PSG means that they're going to try and sell this to customers (again).For investors what you need to watch for is	slivym	9.159554	-5.2726407	comment	8.0	29.0	1531605467	8.029828
17555955	Kinda similar:Investigating the Pote	Kinda similar:Investigating the Potential for Miscommunication Using Emoji https://grouplens.org/blog/investigating-the-potential-for-m...Paper: http://grouplens.org/site-content/uploads/Emoji_Interpretati...It's intersting because there is a huge difference between the simple emoji faces accross devices. The grinning face example is really good because the Apple and Twitter version doesn't look happy at all, like a different expression under the same emojihttps://grouplens.org/site-content/uploads/GrinningFaceWSmil...	bdz	9.794647	-6.2723575	comment	8.0	48.0	1531896218	-13.960295
17560546	Where are the emojis for pain? And w	"Where are the emojis for pain? And why are there so many happy family emojis? People (and ""corporate people"") who care enough to get emojis put in by buy votes at the Unicode Club seem to have super weird values totally detached from humans who send each other messages."	Y_Y	9.813298	-6.271119	comment	8.0	29.0	1531936356	-13.952271
17643917	I am not an electrical engineer so c	I am not an electrical engineer so can someone explain how this thing can just piggyback on the existing chip like that. Is the existing cpu still doing things and this can read additional instructions the other one doesn’t see?	aidos	9.505783	-5.2298603	comment	8.0	25.0	1532953513	7.8084826
17736357	Intel Underestimates Error Bounds by	Intel Underestimates Error Bounds by 1.3 quintillion (2014)	sgillen	9.33787	-5.1904693	story	8.0	175.0	1533931621	7.734938
17758071	Is there high performance FPGA that 	Is there high performance FPGA that does not depend on proprietary bloated windows-only toolchain?	rini17	9.091805	-5.3686905	comment	8.0	31.0	1534256023	8.38647
17829889	Does that mean hyperthreading is eff	Does that mean hyperthreading is effectively unpatchably insecure?Cloud Providers are gonna have a bad time if this is true.	Roritharr	9.837038	-5.6235347	comment	8.0	69.0	1535052170	8.316031
21147865	Minerva: Practically exploitable sid	Minerva: Practically exploitable side-channel leakage in ECDSA implementations	j08ny	9.769646	-5.5963054	story	8.0	85.0	1570115068	8.037629
21227343	> Cons: 64-bit onlyI mean, when was 	> Cons: 64-bit onlyI mean, when was the last time 32 bit CPUs were sold? In 2009 I bought a basic very cheap computer. It still had 64 bit.	investinme	9.60201	-5.3036165	comment	8.0	46.0	1570820478	7.945717
21340009	Chisel/FIRRTL Hardware Compiler Fram	Chisel/FIRRTL Hardware Compiler Framework	xvilka	9.1439295	-5.501755	story	8.0	36.0	1571872026	8.5607605
21460366	Why is that an achievement? Isn't it	"Why is that an achievement? Isn't it so that during a memory copy the CPU is basically idling because memory is so much slower than the CPU? Weren't that hundreds of instructions per memory access? So instead of having it wait it can also do computations (just standard instructions). Or is base64 computationally so heavy that it cannot fit into the ""gaps""? I certainly have not tried, just thinking from the high level view that CPUs are incredibly fast and main memory is incredibly slow  in comparison. And of course assuming that the data does not fit into any cache."	usr1106	9.829615	-5.695785	comment	8.0	36.0	1573024123	-7.7247024
21473538	I wonder how fast I can compile my c	I wonder how fast I can compile my code base with this. On my hexa-core i7-8850h, it often takes more than 4 hours to build everything in full throttle. And I do this quite often, so pain is definitely present. Given the network and disk i/o aren't the bottleneck, having more than 5 times the cores should theoretically reduce the build time at least by 3 folds, conservatively?	b1gtuna	9.788542	-5.487252	comment	8.0	54.0	1573137442	7.826946
21521893	So Intel failed to mitigate the vuln	"So Intel failed to mitigate the vulnerability when it was first reported. Then they extended the embargo from May until November.And they still didn't fix it.What's going on with Intel?
Like they're going all in with lying in benchmarks against AMD and straight up forgetting what has been reported as security issues."	Jonnax	9.4388485	-5.2830486	comment	8.0	72.0	1573631492	7.761369
21523219	For those who are not familiar with 	"For those who are not familiar with silicon vendors' toolchain, it really is very poor quality especially when they started pushing for GUI based Graphical/System development.Vendors make money selling silicon, they see the toolchain as a necessary evil.There are 2018 tools that are still unable to fully support VHDL-2008 standard. Many bugs reported years again remain open. And often the GUI centric
 approach means you are left manually changing ad nauseam several GUI fields and ticking boxes, until you eventually determine what is the tcl 'equivalent' to at least try to ease your pain (tcl scripting often is another pain all together but arguably a lesser evil).Also specifically with Xilinx they seem to have zero consideration for basic version control and create/duplicate/modify an expl"	DoingIsLearning	9.091963	-5.444462	comment	8.0	53.0	1573647272	8.463779
21536509	As a developer I am keen to see some	As a developer I am keen to see some compilation benchmarks. Unfortunately those kinds of benchmarks are almost never included in such reviews. Instead there are many gaming benchmarks which purpose is not exactly clear for me, after obviously gaming is not the primary target market for R9 3950X.	ibobev	9.857486	-5.448459	comment	8.0	53.0	1573747617	7.8303714
21548757	TROS: IBM mainframes stored microcod	TROS: IBM mainframes stored microcode in transformers	magnat	9.624899	-5.3639235	story	8.0	189.0	1573851897	-7.263537
21760123	That's a no from me. I am not a huge	That's a no from me. I am not a huge fan of emoji. Especially not in the cli or editor.Emoji are hard to type on non-mobile platforms, and are difficult to search for in logs or files. Often they don't render properly. They're near impossible to deal with from the command-line.Not to mention the accessibility issues.I see no reason why these cannot be accomplished with tags/flairs such as [critical], [bug], etc. These would also make sense to those not familiar with the Gitmoji system.Don't make stuff harder than it needs to be. Emoji look flashy, but that's about it. Please use good ol' plaintext.	rahuldottech	9.81625	-6.254057	comment	8.0	86.0	1576046374	-13.963095
17876476	The Performance Cost Of Spectre/Melt	The Performance Cost Of Spectre/Meltdown/Foreshadow Mitigations On Linux	rbanffy	9.649792	-5.5731025	story	8.0	147.0	1535635631	7.8014894
18169168	A RISC-V chip with built-in neural n	A RISC-V chip with built-in neural networks	wanderingjew	9.3780365	-5.658723	story	8.0	138.0	1539018318	-10.572511
18253513	Mill vs. Spectre: Performance and Se	Mill vs. Spectre: Performance and Security [video]	leoc	9.620487	-5.6058316	story	8.0	71.0	1539909504	7.8114643
18281473	Emoji for C++ developers: converts e	Emoji for C++ developers: converts emoji codes in strings to unicode emojis	delvincasper	9.86676	-6.2629957	story	8.0	31.0	1540280333	-13.951637
18322123	If IBM has one brain cell left, they	If IBM has one brain cell left, they'll pull a NeXT/Apple merger and let Red Hat executives start running the combined company.That is the one path to a real future for IBM instead of its slow decline into complete irrelevance.	mrkstu	9.909522	-5.3802495	comment	8.0	49.0	1540752039	-9.438765
18360888	When can I buy an affordable, comple	When can I buy an affordable, complete RISC-V computer? I've been long planning to cook my own with FPGA but it seems like soon we'll start getting affordable RISC-V CPUs with other utility support?	gnulinux	9.375701	-5.569165	comment	8.0	37.0	1541136459	-10.557639
18363374	HiFive1 – Arduino RISC-V Dev Board	HiFive1 – Arduino RISC-V Dev Board	prestonbriggs	9.386904	-5.674372	story	8.0	139.0	1541169960	-10.562265
18397849	Can't a CI/CD pipeline + various pro	"Can't a CI/CD pipeline + various processes be good enough to achieve a similar efficiency for under-100-engineers companies? Honest question - because I'm pretty sure I've heard some people claim similarly fast ""idea to production"" times."	smnscu	9.225383	-6.4203053	comment	8.0	28.0	1541580120	6.1976395
18407300	Micron Kicks Off Mass Production of 	Micron Kicks Off Mass Production of 12 Gb DRAM Chips	rbanffy	9.666072	-5.1919217	story	8.0	185.0	1541693880	7.9148545
18662938	I think the X32 feature is vastly un	"I think the X32 feature is vastly underused.Ideally every application that is unlikely to use more than 2GB of memory should use the X32 ABI.Cache latency is the most important bottleneck of today's general purpose CPUs. X32 Helps a lot with that and not just in ""synthetic"" benchmarks."	sprash	9.776487	-5.426049	comment	8.0	57.0	1544613518	8.043584
18731508	Porting Alpine Linux to RISC-V	Porting Alpine Linux to RISC-V	kristianp	9.433062	-5.7481313	story	8.0	245.0	1545368203	-10.65277
18867565	Interesting, according to Anandtech,	Interesting, according to Anandtech, there might be space for something else on the package:https://images.anandtech.com/doci/13829/cpu44.jpgMaybe a second Zen2 die?	TwoNineA	9.253411	-5.1895204	comment	8.0	32.0	1547060072	7.8747873
29838192	Stuff like this is why I plan to nev	Stuff like this is why I plan to never buy Intel ever again. I always disliked Intel's strategy for market segmentation by disabling specific instructions, I much prefer AMD's strategy of segmenting just by speed and number of cores. It is really annoying that with Intel you can't run the same program on the server and on your desktop, it makes development and testing a huge pain.	SkeuomorphicBee	9.328887	-5.278018	comment	8.0	126.0	1641557813	7.826012
29932769	Good.The desire to support the unrea	"Good.The desire to support the unreasonable demands of the film industry here has led to the perversion of the x86 architecture to add all sorts of peculiar DRM functionalities, and has precluded firmware components from being made open source; as I have previously written about here [1], which links to forum posts by an AMD engineer:  I'm sure I don't have to explain to you that the essense of DRM requirements in the OEM PC market is that the owner must NOT have full control of the machine if that includes being able to tamper with or disable any of the DRM mechanisms.

At the end of the day if Intel was going to support this kind of thing AMD also was pretty much going to be required to make such a deal with the devil, or have a product that can't compete with Intel. If Intel is losing i"	hlandau	9.320574	-5.2469954	comment	8.0	45.0	1642156292	7.8668427
30026138	How do the economics work here? Inte	How do the economics work here? Intel's market cap is $215B.	mungoman2	9.296075	-5.1868987	comment	8.0	31.0	1642783803	7.732593
30130508	How We Ended Up with the Pregnant Ma	How We Ended Up with the Pregnant Man Emoji	Eric_WVGG	9.780542	-6.26668	story	8.0	18.0	1643490714	-4.103656
30231611	Undocumented x86 instructions to rea	Undocumented x86 instructions to read/ write microcode	tomcam	9.687714	-5.5214267	story	8.0	79.0	1644147499	-7.4525027
30287477	Why?Has Intel done anything with Alt	Why?Has Intel done anything with Altera? I’m curious.AMD’s acquisition of ATI is generally viewed as a strategic error. Does this make more sense?	CountSessine	9.202455	-5.2104063	comment	8.0	47.0	1644506928	8.005819
30320982	> It’s a tradeoff: With RISC-V you g	> It’s a tradeoff: With RISC-V you get innovation, you can create new extensions, but you lost software compatibility. And more importantly, you lose the guarantee of software compatibility,” he said. Arm’s founders made “that a key tenet, and that will serve us well going forward. I’m confident of that.”How long does it take until we have server-side Ubuntu Linux and staple applications like PostgreSQL humming nicely on RISC-V? It does not matter if RISC-V has less ported software today, as long as there is clear roadmap when this advantage of ARM will be gone.	miohtama	9.400848	-5.6493025	comment	8.0	68.0	1644751710	-10.575835
30409100	x86 Is an Octal Machine (1995)	x86 Is an Octal Machine (1995)	a1a106ed5	9.734129	-5.4236093	story	8.0	145.0	1645389708	-7.696672
30449346	I think 128 bit computers will come 	"I think 128 bit computers will come around eventually, despite it having been declared that 64 bit is ""enough"". Some pressures may come from:* Memory addressing - As the article suggests, addressing large amount of address space. Not just RAM, but disk control on the bit/byte level (something solid state drives may enable and new filesystems may take advantage of). There may also be applications where you want an etabyte disk as low-speed RAM.* Multi-byte processing - accelerating instructions like AVX have shown the power of processing multiple bytes at a time. One can imagine that wider registers would accelerate these processes and would allow for multi-byte processes to happen in parallel.* Gaming/simulation - We have seen quite a few examples where physics in games and simulations hav"	bArray	9.86558	-5.454461	comment	8.0	27.0	1645667550	8.024007
30519008	I follow some of the writings of Nas	"I follow some of the writings of Nassim Taleb. I came to the conclusion that RISC-V will ""succeed"" because there's no way for it to fail. It's like Linux.I don't think licensing fees to ARM are a problem per se, it's the ""frictional costs"" that it introduces. My understanding is that the Raspberry Pi developed their RP2040 because ARM had a reasonable package available for its low-end Cortex-M processors, which doesn't apply to their higher-end Cortex ones.RISC-V doesn't even have these restrictions. Even extremely small outfits can play around with RISC-V designs. Most of them won't go very far, but with enough lottery tickets, one of them is bound to draw the winning numbers.Sure there are considerable obstacles. I toy with microcontrollers. For hobbyists like me, ARM processors are stil"	blippage	9.405035	-5.595307	comment	8.0	58.0	1646163735	-10.5418215
12709412	Blogspam, kinda. Post just links to 	Blogspam, kinda. Post just links to https://software.intel.com/sites/default/files/managed/69/78... and says it mentions two new instructions:  AVX512_4VNNIW (Vector instructions for deep learning enhanced word variable precision) and AVX512_4FMAPS (Vector instructions for deep learning floating-point single precision)On Intel's part, it seems kinda... late? It's like adding Bitcoin instructions when you already know everyone's racing to make Bitcoin ASICs. How could it beat dedicated hardware, or even GPUs, on ops/watt? Maybe it's intended for inference, not training, but that doesn't sound compelling either.	sbierwagen	9.410011	-5.243261	comment	8.0	75.0	1476464269	7.8780484
12709882	That's a good news! About that, two 	That's a good news! About that, two days ago I modified the implementation of neural networks inside Neural Redis in order to use AVX2. It was a pretty interesting experience and in the end after modifying most of it, the implementation is 2x faster compared to the vanilla C implementation (already optimized to be cache obvious).I never touched AVX or SSE in the past, so this was a great learning experience. In 30 minutes you can get 90% of it, but I think that to really do great stuff you need to also understand the relative cost of every AVX operation. There is an incredible user at Stack Overflow that replies to most AVX / SSE questions, if you check the AVX / SSE tag you'll find it easily.However I noticed that when there were many load/store operations to do, there was no particular g	antirez	9.472856	-5.5512257	comment	8.0	49.0	1476467824	-3.7073352
12744016	Micro:bit developer community	Micro:bit developer community	ntoll	9.635336	-5.2165413	story	8.0	115.0	1476886983	-5.4165254
12764875	A Cloud-Scale Acceleration Architect	A Cloud-Scale Acceleration Architecture: FPGAs in Microsoft’s Datacenters	eDameXxX	9.132505	-5.304312	story	8.0	112.0	1477084378	8.307656
12824741	Not really that surprising. Your ave	Not really that surprising. Your average laptop nowadays probably has more ARM cores than x86 cores. They're in all kinds of peripherials like wifi controllers, power supplies, harddisk controllers, GPU job control, heck even AMD's recent APUs come with an integrated Cortex-A5.[1] ARM cores are everywhere, people just don't know about it.[1]http://www.anandtech.com/show/6007/amd-2013-apus-to-include-...	ginko	9.535031	-5.206335	comment	8.0	47.0	1477759082	7.7637024
12946425	Iocage – A FreeBSD jail manager	Iocage – A FreeBSD jail manager	HugoDaniel	9.747019	-6.396657	story	8.0	100.0	1479079916	10.478735
12996728	The rise of miniature 'microfactorie	The rise of miniature 'microfactories'	kafkaesq	9.816831	-5.194708	story	8.0	65.0	1479604899	6.5434217
13004611	CoreCLR ARM 32-bit progress	CoreCLR ARM 32-bit progress	barhun	9.693062	-5.4001274	story	8.0	169.0	1479728146	-8.88322
13056961	Intel discloses “vector+SIMD” instru	Intel discloses “vector+SIMD” instructions for future processors	gpderetta	9.72006	-5.805492	story	8.0	113.0	1480354637	8.191313
13065044	SiFive open sources RISC-V chips	SiFive open sources RISC-V chips	erichocean	9.3768215	-5.653347	story	8.0	85.0	1480444197	-10.600538
13211922	'Upset' Linus Torvalds gets sweary a	'Upset' Linus Torvalds gets sweary and gets results	dragonbonheur	9.290487	-5.892051	story	8.0	13.0	1482160966	-5.1711845
13260266	Intro to RAML 1.0	Intro to RAML 1.0	sap1enz	9.885415	-5.190905	story	8.0	38.0	1482793838	8.198948
27560090	I love that this is a toggle like th	I love that this is a toggle like this, having control of my system is why I love Linux.But I must caution desktop users against doing this for performance, it's _much_ better to have some kind of build server somewhere else with this kernel flag than to run it on your desktop.Why? because your desktop executes untrusted and rather arbitrary code pretty often, not just in the form of Javascript but that's the largest example I can think of.Right now there's a kind of herd immunity for these things, nobody would really attack spectre because everyone is running mitigations, but if you make the target large enough there will be working exploits.For isolated machines running trusted workloads (thinking: databases or webservers serving static content) then it's a really nice flag to have on-ha	dijit	9.7367	-5.6123576	comment	8.0	126.0	1624107667	7.821628
27604749	Arm Introduces Its Confidential Comp	Arm Introduces Its Confidential Compute Architecture	Symmetry	9.6360445	-5.2747464	story	8.0	150.0	1624457421	-7.758248
27639837	Cores that don't count	Cores that don't count	canthandle	9.518289	-5.292428	story	8.0	61.0	1624691457	7.936108
27729226	The push for crypto without ecc ram 	The push for crypto without ecc ram is a nonstop horror show. Software under normal circumstances is remarkably resilient to having its memory corrupted. However crypto algorithms are designed so that a single bit flip effectively changes all the bits in a block. If you chain blocks then a single bit flip in one block destroys all the blocks. I've seen companies like msps go out of business because they were doing crypto with consumer hardware. No one thinks it'll happen to them and once it happens they're usually too dim to even know what happened. Bit flips aren't an act of god you simply need a better computer.	jart	9.51067	-5.5324073	comment	8.0	87.0	1625402659	8.199184
27737718	XiangShan open-source 64-bit RISC-V 	XiangShan open-source 64-bit RISC-V processor to rival Arm Cortex-A76	watchdogtimer	9.408506	-5.605209	story	8.0	358.0	1625491451	-10.57028
27764806	Undocumented x86 instructions to con	Undocumented x86 instructions to control the CPU at the microarchitecture level [pdf]	ingve	9.71591	-5.584559	story	8.0	144.0	1625685591	-7.5354295
27908671	There is a longstanding issue around	There is a longstanding issue around MKL and OpenBLAS optimization flags making intel systems artificially faster than amd ones for numpy computations. https://stackoverflow.com/questions/62783262/why-is-numpy-wi...If there are true optimizations to be had, wonderful. But those should be added to core binaries pypi / conda. I am worried that Intel here may be trying to again artificially segment their optimization work on their math libraries for business rather than technical reasons.	mushufasa	9.307595	-5.3002157	comment	8.0	34.0	1626886063	7.956462
27917230	Implement unprivileged chroot	Implement unprivileged chroot	0mp	9.79191	-6.409979	story	8.0	231.0	1626948843	-14.0051155
12110744	The Lexra/MIPS Story	The Lexra/MIPS Story	luu	9.464914	-5.5519247	story	8.0	130.0	1468773964	-10.377645
12120902	Magnetic core memory reborn (2011)	Magnetic core memory reborn (2011)	mcbits	9.816989	-5.251184	story	8.0	104.0	1468923772	8.058746
12168894	Verifying ARM processors against the	Verifying ARM processors against the official ARM specification	jsnell	9.700459	-5.3947377	story	8.0	219.0	1469568980	7.8064814
12301486	I'm amazed at the features they've c	I'm amazed at the features they've crammed into x86 without breaking compatibility; Definitely impressive. That being said haven't they perverted the whole industry with this tactic? It seems like we ought to have switched from CISC to RISC. From a purely technical perspective at least. Microcode just seems like a run-time mini compiler. If it were just part of the actual compiler wouldn't that save power and heat? Could it hurt performance in some circumstances? Does CISC have any technical merit at all? I would love for this to have been motivated by something other than their x86 patents.	MawNicker	9.523091	-5.5909033	comment	8.0	57.0	1471390894	-10.480286
12330970	Int 80h (2001)	Int 80h (2001)	_zhqs	9.623111	-5.4277234	story	8.0	63.0	1471788555	-7.5207953
12490267	It's a shame that we seem locked int	It's a shame that we seem locked into using Intel or AMD for x64 processors, both of which have secondary, black-box processors.Isn't x64 a standard? Couldn't another company create their own implementation of it and design their own processors for the paranoid to use?	AdmiralAsshat	9.567421	-5.2991	comment	8.0	39.0	1473786791	7.8420362
35269664	I wouldn't be surprised if you could	I wouldn't be surprised if you could bit bang ISA these days. ISA ran at 8MB/s, and (e.g.) a Raspberry Pi runs at 1.5GHz. That's nearly 200 cycles per ISA clock. All you need is a couple of i/o pins.	overthrow	9.543603	-5.4502144	comment	8.0	31.0	1679537459	-7.727066
35392054	It's reassuring to know that billion	It's reassuring to know that billion dollar tech companies write CI exactly like I do:https://github.com/twitter/the-algorithm/blob/main/ci/ci.shPermalink: https://github.com/twitter/the-algorithm/blob/7f90d0ca342b92...	koolba	9.208953	-6.381434	comment	8.0	43.0	1680290434	6.086737
28124183	Memory Bandwidth	Memory Bandwidth	luu	9.90939	-5.3049974	story	8.0	114.0	1628557542	8.072853
28154107	Anyone actually use Intel compilers	Anyone actually use Intel compilers	killingtime74	9.610928	-5.5186467	comment	8.0	34.0	1628761191	-7.295238
28218728	Human stories behind emoji designs	Human stories behind emoji designs	shivbhatt	9.795492	-6.2648487	story	8.0	63.0	1629274099	-13.959956
28437908	Hot take: why do we still care? Linu	Hot take: why do we still care? Linus says something negative about something, big shocker.This is just the tech crowd equivalent of a tabloid at the supermarket checkout isle, Tom Cruise is secretly a ferret-lover, read all about Bob’s torrid affair with Mallory!	bigcorp-slave	9.275312	-5.8651657	comment	8.0	41.0	1630961199	4.315207
22384036	“Unable to perform AVX2 instructions	“Unable to perform AVX2 instructions correctly under heavy load” is also a common “WTF Intel!?”–inducing phenomenon. I’m certain SREs who work at companies with more than 1 million servers have a bunch of hair pulling stories.Most (all?) Intel server CPUs in fact decrease clock speed when executing AVX2 (and some other) instructions to keep things a bit more sane. Vlad from Cloudflare wrote about this, more specific to AVX-512 back in 2017: https://blog.cloudflare.com/on-the-dangers-of-intels-frequen...Then there is PROCHOT signal. Which is supposed to protect the CPU from getting too hot but keeps getting raised in lopsided AVX2 loads not because CPU is too hot but voltage regulation gets whacked.You may wonder: what is an example of AVX2 heavy load. RSA multiplication is a good candidate	bdd	9.438119	-5.5270443	comment	8.0	87.0	1582300624	8.047675
22463749	Open Source Hardware: The Rise of RI	Open Source Hardware: The Rise of RISC-V	eaguyhn	9.400205	-5.6286507	story	8.0	46.0	1583151583	-10.563144
22485290	The core memory inside a Saturn V ro	The core memory inside a Saturn V rocket's computer	matt_d	9.781314	-5.282361	story	8.0	154.0	1583340244	7.9984818
22774098	How to flash an LED: writing ARM ass	How to flash an LED: writing ARM assembly for an STM32 microcontroller	lochsh	9.717526	-5.2728124	story	8.0	122.0	1585949243	-7.397671
22825052	Paul Cormier Replaces Jim Whitehurst	Paul Cormier Replaces Jim Whitehurst as Red Hat CEO	ldng	9.915649	-5.392574	story	8.0	122.0	1586453606	0.84506667
22945065	ARM Development for the Office: Unbo	ARM Development for the Office: Unboxing an Ampere EMag Workstation	ksec	9.622281	-5.2034388	story	8.0	67.0	1587560608	-7.7353997
22967403	The number of emojis in that text is	The number of emojis in that text is appalling.	Okkef	9.800041	-6.269248	comment	8.0	33.0	1587732696	-13.945542
23040164	Hah...   More importantly if you're 	Hah...   More importantly if you're a silicon startup and you need a CPU core for some brand new design, you are probably not tied to a specific instruction set.The obvious one to choose in that case is RISCV because it already has a working compiler and Linux port, has a thriving community, and there are no paperwork delays to get a prototype built.ARM is making its stuff free to try to compete with the free RISCV, in the hope that when that startup becomes a big company, migrating to a new architecture will prove too hard, and they'll be locked in.	londons_explore	9.493764	-5.4759026	comment	8.0	42.0	1588321900	-7.842284
23078514	I’m really quite dismayed by the pur	I’m really quite dismayed by the purely x86/x64-centric viewpoint.No mention of POWER9, for example (my own personal favourite), which I’m running on my workstation (https://www.raptorcs.com/TALOSII/)There’s several other ISAs out there (ARM, obviously, but desktop-, let alone workstation-class chips are hard at least for now a dicy proposition).EDIT: Surprised by all the downvotes. Is mentioning anything outside the domain of x86 considered controversial nowadays?!	qubex	9.609339	-5.427583	comment	8.0	39.0	1588675178	-7.741033
33071275	Highlights from Git 2.38	Highlights from Git 2.38	todsacerdoti	9.057817	-6.295872	story	8.0	128.0	1664820125	12.749297
33221526	But the emoji search addin feature w	But the emoji search addin feature will be developed by a team in mountain view...   So if emergency code changes need to be made for this bug HN has just found, they will still be woken up.	londons_explore	9.816004	-6.269334	comment	8.0	25.0	1665901742	-13.95963
33224902	What I am curious about, is some Nvi	What I am curious about, is some Nvidia cards like the A2000 have ECC, but only enough chips for a regular roundish number of RAM, like 6GB or 12GB. So when ECC is enabled, 6.25% of the RAM is used for the ECC bits. [0; 1, in the notes]Since desktop ECC gets around this by having physically more RAM ICs (usually 9 instead of 8, for example), what is the impediment from having a similar solution to Nvidia? I'd readily take a hit to memory capacity* and performance in exchange for ECC.Why can't the memory controller already do this?I should note, I'm mostly thinking of my NAS. I know ZFS can be run without ECC and some consumer solutions do. However, it seems ZFS should be run with ECC. I've already experienced observable bitrot with older images and video files, I'd rather not let it progre	glowingly	9.515991	-5.509641	comment	8.0	52.0	1665937924	-13.765339
33320998	I've realized that my only interest 	I've realized that my only interest in RISC-V all along has been the disruptive opportunity to possibly get open and auditable firmware and hardware (for human rights, empowerment, and security).If AOSP on RISC-V helps promote RISC-V in a way that increases the likelihood of viable open firmware and hardware emerging in the ecology, that's great.However, if, like some dev boards I've seen, we end up heading down a path of more of the same problem we already have with user-hostile platforms (just musical chairs of who's making the money from it), I'll save myself some trouble, and just keep using x86-64 and ARM.	neilv	9.406925	-5.640579	comment	8.0	34.0	1666638540	-10.580448
33422717	Show HN: Minimax – A Compressed-Firs	Show HN: Minimax – A Compressed-First, Microcoded RISC-V CPU	gsmecher	9.491203	-5.77356	story	8.0	171.0	1667317294	-10.513507
33845941	How the 8086 processor's microcode e	How the 8086 processor's microcode engine works	picture	9.65993	-5.4954834	story	8.0	248.0	1670092171	-7.5164847
33970285	I see a lot of reasons to version co	I see a lot of reasons to version code.I see far less reasons to version data, in fact, I find reasons against versioning data and storing them in diffs.	Aperocky	8.886417	-6.397865	comment	8.0	43.0	1670946108	-11.720795
26492115	I would love to be able to switch to	I would love to be able to switch to FreeBSD but the one thing holding me back is support for .NET Core (and lack of VS Code support if that also doesn't run on FreeBSD -- but that's moot if .NET Core support isn't there).  Docker support would be nice but isn't essential since code can be checked in to a Linux-based build server and VS Code can attach to a Docker instance on another machine.	mikece	9.875003	-6.245	comment	8.0	51.0	1615993036	10.536489
26525282	Glacial – Microcoded RISC-V core des	Glacial – Microcoded RISC-V core designed for low FPGA resource utilization	peter_d_sherman	9.390418	-5.634996	story	8.0	78.0	1616267122	-10.547707
26720087	I've been out of it for 30 years, an	I've been out of it for 30 years, and I have to dive back in. The hardware is amazingly fast compared to 1990, and as I frequently note, GIT makes a huge difference in being able to refactor, compared to a folder full of ZIP files.The frustrating thing for me is that GUI development has apparently gone backwards a decade or so, with the rise of web frameworks and all the extra layers and connections between the user and the actual data.It used to be that you could grab some components in VB6 or Delphi, and have your database prototype up and running in an hour, and make a stream of modifications as required, with the main delay being pkZIP and copying files prior to making any big changes, just in case.  Compile cycles even then were in the 0.5-5 second range, like now.I've wimped out and 	mikewarot	8.831228	-6.4317627	comment	8.0	37.0	1617764141	-11.848199
26749279	After reading articles last year on 	"After reading articles last year on Linus insinuating it would be ""unlikely"" that Linux would appear on the M1 [1] [2], I drank the cool-aid and took that at face value.I guess I should have known better, just like nature, open source ""finds a way"".[1] https://www.realworldtech.com/forum/?threadid=196533&curpost...[2] https://news.ycombinator.com/item?id=25216680etc.."	redm	9.440182	-5.755476	comment	8.0	26.0	1617968883	4.2643156
26816785	SiFive Tapes Out First 5nm TSMC 32-b	SiFive Tapes Out First 5nm TSMC 32-bit RISC-V Chip with 7.2 Gbps HBM3	pabs3	9.372693	-5.628767	story	8.0	192.0	1618468176	-10.597434
26866065	J2 open processor: an open source pr	J2 open processor: an open source processor using the SuperH ISA	rdpintqogeogsaa	9.548436	-5.294469	story	8.0	101.0	1618855576	-7.7739754
26954876	I'm not an expert, but from my begin	I'm not an expert, but from my beginner's view, unikernels feel like a hack to make hypervisors work as an app orchestration platform. Maybe this is useful regardless :)	haolez	9.908739	-6.2444882	comment	8.0	38.0	1619525864	5.3068557
27075386	This is really sad. The world is hea	This is really sad. The world is heading to a duopoly x86 - arm.  Alpha is dead, Mips is almost dead, PA-RISC is dead, POWER is too expensive and RISC-V is  mostly nice to have.	hulitu	9.529746	-5.4825974	comment	8.0	84.0	1620392545	-8.096626
27220150	I remember and interesting speech by	"I remember and interesting speech by Linus Torvalds about success of x86 and why is hard for AMD to break into servers that I think can be relevanto for Ampere too:""I can pretty much guarantee that as long as everybody does cross-development, the platform won’t be all that stable. Or successful.Some people think that “the cloud” means that the instruction set doesn’t matter. Develop at home, deploy in the cloud.That’s bullshit. If you develop on x86, then you’re going to want to deploy on x86, because you’ll be able to run what you test “at home” (and by “at home” I don’t mean literally in your home, but in your work environment).Which means that you’ll happily pay a bit more for x86 cloud hosting, simply because it matches what you can test on your own local setup, and the errors you get "	fbn79	9.611914	-5.1884103	comment	8.0	61.0	1621512895	-7.787171
27247024	I don't know what i would do with 80	I don't know what i would do with 80 cores. How much cache and memory bandwidth will this thing have?	twic	9.595212	-5.2742634	comment	8.0	31.0	1621694868	7.871134
27278540	Half-Double: New hammering technique	Half-Double: New hammering technique for DRAM Rowhammer bug	fqazi	9.631303	-5.657	story	8.0	190.0	1621958526	-13.893225
27301210	Ask HN: How are you using unikernels	Ask HN: How are you using unikernels?	austinjp	9.846429	-6.3246408	story	8.0	120.0	1622111269	-12.375837
27334855	Alternate Instruction Set	Alternate Instruction Set	lelf	9.7895355	-5.6535516	story	8.0	76.0	1622395609	-7.520425
27408102	I've been working with FPGAs for yea	"I've been working with FPGAs for years (in hobby, at work I'm a mere ""user"" of them), and it always baffled me how poorly matched the chosen imperative paradigm of Verilog and VHDL is to them.I think the idea was to make it look ""familiar"" to engineers by looking like C (Verilog) or Ada (VHDL). But FPGAs are nothing like CPUs, and what you end up with instead is an unfitting language where you use a whole lot of ""common constructs"", knowing how they will be synthesized into hardware. And worse: Practically no good way to do abstraction.Functional languages are a much, much better match, because that's what FPGAs are: Combining functions together. This works on higher orders as well, and it works well with polymorphism!So privately at least, for anything substantial I've since been using Cl"	anyfoo	9.102912	-5.453858	comment	8.0	28.0	1622923761	8.500376
27408398	Computer chips are mercurial: Rare m	Computer chips are mercurial: Rare miscalculations frequent at cloud hyperscale	pasttense01	9.548498	-5.245803	story	8.0	92.0	1622926609	7.8484497
27466532	> And if you insist on believing in 	"> And if you insist on believing in the crazy conspiracy theories, at
least SHUT THE HELL UP about it on Linux kernel discussion lists.I see Linus still hasn't changed much."	lalaland1125	9.437853	-5.8096867	comment	8.0	74.0	1623363441	4.2389293
37633230	Reverse-engineering the classic MK41	Reverse-engineering the classic MK4116 16-kilobit DRAM chip (2020)	nickt	9.642703	-5.252189	story	8.0	96.0	1695564253	7.9186764
37685918	I'm tired of information being vague	"I'm tired of information being vague, under-specified, or only available under NDA (if you're lucky). I'm not stupid enough to hop on this ride again.Are there any fully open (in terms of schematics, firmware) RISCV rpi-""compatibles"" out there? I'd be happy to pay triple the price of this thing for a power-efficient linux-capable sbc that is open."	Zuiii	9.384123	-5.64293	comment	8.0	73.0	1695881621	-10.603998
37827813	I am in need of a processor upgrade,	I am in need of a processor upgrade, but am really interested in an ECC RAM setup. I read this thread of 2 people arguing on /r/AMD about whether or not the AMD processors and/or their motherboards actually support ECC or not. And had no clue if they were right. [1] So this is topical for me![1] https://www.reddit.com/r/Amd/comments/lzxqod/list_of_am4_mot...So this definitively settles it, that the AMD+ASRock combo is truly ECC RAM?	mlsu	9.407814	-5.4763703	comment	8.0	55.0	1696903676	8.242876
37887756	Sorry if it’s a dumb question but ho	"Sorry if it’s a dumb question but how do you verify open source hardware? With software I have the code and I can build and deploy my own version. But
how do you do that with an
open source CPU? I can read
the code [0] but will the CPU as the
physical object itself be the same? And the microcode running
inside?0, https://github.com/T-head-Semi/openc910"	unpopularopp	9.659703	-5.4295764	comment	8.0	37.0	1697355442	-5.665964
37924092	Qualcomm to Bring RISC-V Based Weara	Qualcomm to Bring RISC-V Based Wearable Platform to Wear OS by Google	fork-bomber	9.393889	-5.6254625	story	8.0	102.0	1697594816	-10.572842
37942114	There's a new way to flip bits in DR	There's a new way to flip bits in DRAM, and it works against the latest defenses	vo2maxer	9.747893	-5.6013002	story	8.0	179.0	1697719528	-13.877884
37968151	> Most programmers have an intimate 	> Most programmers have an intimate understanding of CPUs and sequential programming because they grow up writing code for the CPUMaybe it’s just where I work, but I feel like even this isn’t true. A lot of the newer/young employees don’t even seem to have a lot of OS/system understanding. A lot of the higher-level languages abstract the immediate need of having any “intimate understanding” of CPUs.	cebert	9.654259	-5.3418117	comment	8.0	36.0	1697905367	1.6930292
37968690	Related, any recommendations on low-	Related, any recommendations on low-cost ways to start playing around with FPGAs? Boards, chips, projects?	placesalt	9.0909195	-5.325772	comment	8.0	26.0	1697908688	8.396509
37969131	>Most programmers have an intimate u	>Most programmers have an intimate understanding of CPUsmaybe this article is brilliant, but when the first line is something so blatantly untrue it really makes it hard to take the rest seriously	permo-w	9.537906	-5.232044	comment	8.0	58.0	1697911443	7.7571573
38057011	Linux running on RISC-V emulated in 	Linux running on RISC-V emulated in Scratch	varun_ch	9.410867	-5.668845	story	8.0	146.0	1698572241	10.809336
38089014	The Configuration Complexity Clock (	The Configuration Complexity Clock (2012)	yamrzou	9.852401	-5.2658195	story	8.0	38.0	1698775943	2.0679758
38134878	No. Random bitflips (aka hardware th	"No. Random bitflips (aka hardware that doesn't work) are a relatively new thing.
Bit flips due to buggy software was a thing though. This is why most database engines checksum the payload data even in memory. I've also seen network packets corrupted because a bridge (former name for switch) trashed data in flight, then reconstructed its CRC for the corrupt data on the onward leg."	dboreham	9.761575	-5.5942993	comment	8.0	29.0	1699044883	8.215972
38143690	Openela releases Red Hat source code	Openela releases Red Hat source code on GitHub	nolist_policy	9.825286	-5.5949593	story	8.0	59.0	1699121799	-11.602549
38156702	How different are the instruction se	How different are the instruction sets of the 80486 and Pentium from the 386? Put another way, had the instruction set been frozen as of the 386 (barring any required changes for 64-bit), would we notice any difference in performance today?	TMWNN	9.539707	-5.186375	comment	8.0	31.0	1699225807	-7.533878
38287329	It would be interesting to see a rea	"It would be interesting to see a real census of the folks who want to keep ia64 support in Linux, with some breakdown of their motivations.  Cases like ""Control software for our factory's special $Millions-dollar machine only exists for ia64"" seem far more sympathetic than ""I love my basement collection of archaic computer hardware""."	bell-cot	9.648588	-5.348658	comment	8.0	72.0	1700126429	-7.816906
38408648	Online PDP-8 Home Page, Run a PDP-8	Online PDP-8 Home Page, Run a PDP-8	accrual	9.8443575	-5.4500732	story	8.0	71.0	1700861817	-7.509464
38454569	Wozmon for x86-64	Wozmon for x86-64	ianseyler	9.771849	-5.301619	story	8.0	60.0	1701223710	-7.7388353
38562118	Is the 6502 a RISC or CISC processor	Is the 6502 a RISC or CISC processor? (2005)	tosh	9.4656515	-5.5941277	story	8.0	9.0	1701984846	-10.489597
15002990	IMHO a 6502 is too limited to be eff	"IMHO a 6502 is too limited to be effectively programmed in C; even this part of the article gives all the limitations: https://nesdoug.com/2015/11/15/2-how-cc65-works/With this important note: ""clean unaltered C code will compile into very slow code that takes up too much of the limited memory space.""In other words, ""C"" written for such a CPU will be in a vastly different style from more ""normal"" C, so that it might be better to just use Asm.Then again, 8051s, PICs, and other extremely constrained MCUs have been targeted by ""C"" (subsets), so it's definitely possible if a bit awkward. Personally, I think something like an 8080 would be the minimum to do relatively comfortable C programming in, with a Z80 being far more preferable."	userbinator	9.682494	-5.5550804	comment	8.0	56.0	1502633690	-7.4652543
15018992	Exagear: Run x86 Applications on Ras	Exagear: Run x86 Applications on Raspberry Pi	brudgers	9.759498	-5.3795	story	8.0	63.0	1502810225	-7.9886465
15056604	PDP-11 Instructional Tape (1977) [vi	PDP-11 Instructional Tape (1977) [video]	bane	9.828566	-5.420323	story	8.0	55.0	1503194144	-7.415436
15067040	"""new emoji"" is an OS-level feature n"	"""new emoji"" is an OS-level feature now.  Welcome to 2017."	fenwick67	9.798088	-6.2651854	comment	8.0	39.0	1503343581	-13.934131
15119352	This is why I support Power/MIPS/RIS	This is why I support Power/MIPS/RISC development going forward. It's just a shame that we allowed intel and amd to both put in cpu backdoors at such an obvious level (I like x86 but it's not the cpu of the future unless it's open). I highly suspect some national security letter type shit is going on in the background, ala Promis and William A. Hamilton who has claimed on Bruce Schneiers blog they (intel agencies) were infiltrating even low level chip manufacturers. Danny Casalaro's death was likely a required nastyness to keep it covered up.	arca_vorago	9.491543	-5.283813	comment	8.0	70.0	1503948667	7.750337
15209632	Breaking the x86 Instruction Set: ho	Breaking the x86 Instruction Set: how to find undocumented x86 instructions	old-gregg	9.870309	-5.7625313	story	8.0	174.0	1504999278	-7.5235105
15288120	A smaller, cheaper RISC V board	A smaller, cheaper RISC V board	MrsPeaches	9.381863	-5.6137495	story	8.0	182.0	1505850133	-10.555429
15329865	Intel's staunch refusal to support E	Intel's staunch refusal to support ECC RAM on non-Xeon chips seems incredibly chintzy at this price level.Who is the customer that's simultaneously willing to spend $2,000 on a CPU and so desperate to save a few bucks that they'd settle for non-ECC RAM? I want to meet that person.	smacktoward	9.443529	-5.4667892	comment	8.0	52.0	1506342928	8.185927
15343331	So is anyone designing RISC-V cores 	So is anyone designing RISC-V cores without using Chisel? :)	gok	9.3690405	-5.630491	comment	8.0	28.0	1506466440	-10.567676
15389729	I've honestly been waiting for this 	"I've honestly been waiting for this since for YEARS.I've had a vision for ""the future of computing"". FPGAs that reconfigure themselves (<-these exist) to become whatever macro-level hardware assets your computer needs. Running tons of SHA-256 encryptions per second? The CPU/OS/OpenSSL (or whatever) detects this condition and switches from hand-coded ones, to an IP core that comes with the CPU. The CPU flashes the FPGA's to become SHA-256 ""CoreS"" and now you're running 4096x the output with less heat. (As CPUs are designed for one thing ""few, large, complex cases"" while FPGAs are perfect for many, parallel simple cases"" even more than a GPU.) Now, you shutdown your encoding and switch to video encoding, or Doom 2019 and your CPU reflashes (Alteria specialized in PARTIALLY flashable FPGAs so"	katastic	9.22014	-5.268284	comment	8.0	29.0	1506998690	8.217487
15549632	DOJ Subpoenas Twitter About Five Use	DOJ Subpoenas Twitter About Five Users Over a Smiley Emoji Tweet	keithrl	9.764158	-6.278802	story	8.0	260.0	1508936163	-13.94583
15608477	How useful are such measures when In	"How useful are such measures when Intel has backdoored each and everyone of their CPUs with its ""Intel Management Engine"" [0] (and AMD has a similar mechanism)?If Intel/AMD have a backdoor into every PC and server, then so does the US gov't (NSA, CIA, FBI, etc.) and of course other uninvited hackers from even hostile countries.And how did Western society just accept all of this anti-democratic craziness?[0] https://libreboot.org/faq.html#intel"	benevol	9.496506	-5.2128687	comment	8.0	45.0	1509607443	7.749714
15684690	To be honest though building a proce	To be honest though building a processor these days is not exactly difficult. That is especially true if you start with someone else's ISA and they have already created a GCC or LLVM back end for it. I was at Sun during the development of SPARC and as part of the Systems group we got to see a lot of the trade offs up front but these days transistors are not nearly so scarce. If you stick to 30 - 50Mhz for your first round you can simulate pretty much power on to shell prompt in a reasonable amount of time. Then there are the process specific issues that TSMC or Global Foundries or whomever will help you with translating your HDL into their most reliable node (probably 45nm or 90nm at the moment), then you'll build a test chip and it will likely do everything you want it to do and it will c	ChuckMcM	9.365807	-5.2181687	comment	8.0	62.0	1510554437	-7.296359
15711908	RISC-V port merged into Linux 4.15	RISC-V port merged into Linux 4.15	rwmj	9.407743	-5.697705	story	8.0	296.0	1510832581	-10.59883
23468746	How SGX Fails in Practice	How SGX Fails in Practice	gbrown_	9.467706	-5.219658	story	9.0	158.0	1591723909	-5.849585
23512506	Can somebody explain why anybody wou	Can somebody explain why anybody would want to put up with PIC in 2020 when ARMs are so cheap and energy efficient and development tools got to a point where you get working toolchain with no time or money expense (for example with stm32cubeide and st-link)?	lmilcin	9.482764	-5.188556	comment	9.0	46.0	1592080802	-7.643626
23578795	If this is not the correct way to us	If this is not the correct way to use a 64-Core Processor, I don't know what is	doener	9.583057	-5.271709	story	9.0	120.0	1592600331	7.9527116
23584453	The big problem with switching CPUs 	The big problem with switching CPUs is the instruction set.For most people, it doesn't matter. But if you are in some niche domains, it really has an impact. I don't expect a smooth transition of libraries such as BLAS or VMs such as the JVM. You can't simply recompile these. You typically need a human to rewrite SSE, AVX and other tricky low level code so that performance stays competitive.	nextos	9.559836	-5.2537074	comment	9.0	38.0	1592666811	-7.6426907
23614650	> Rosetta can translate most Intel-b	> Rosetta can translate most Intel-based apps, including apps that contain just-in-time (JIT) compilers.How on Earth does it do that? If executable code is being generated at runtime, it's going to be x86_64 binary machine code still (there are too many ways to generate valid machine code, and it won't know right away whether you're JITting, or cross compiling and actually want x86_64), so Rosetta would need to detect when the code's about to be run, or when it's marked as executable, and translate the machine code in that bit of memory just in time.  The length of the ARM code might be longer, so it would have to be in a different block of memory, with the original x86_64 code replaced with a jump to the new code or something.It's late at night here, so maybe I'm missing a simpler approac	mkl	9.794395	-5.3741264	comment	9.0	59.0	1592923954	7.5596795
24069793	Programming with RISC-V Vector Instr	Programming with RISC-V Vector Instructions	pantalaimon	9.487863	-5.782906	story	9.0	162.0	1596711132	-10.547246
24169884	How the 8086 processor handles power	How the 8086 processor handles power and clock internally	todsacerdoti	9.573454	-5.363528	story	9.0	157.0	1597507622	-7.5108447
24173903	I'm in agreement. nVidia's history o	I'm in agreement. nVidia's history of not playing nicely with others does not make this sound like a good deal, especially for entrenched ARM vendors. (Apple won't be phased; they basically design everything themselves, so they don't really even care about the direction of ARM or the architecture. They could hard fork tomorrow, or two years ago, and nobody will notice since they're entirely vertically integrated.)But, on the plus side, it's the biggest opportunity RISC-V will ever get. Almost overnight anyone who was building ARM cores will suddenly see investments in RISC-V prudent as a hedge against nVidia's future core designs not being licenseable. SiFive will very quickly become a multi-billion dollar organization...	awalton	9.310639	-5.5237465	comment	9.0	177.0	1597540109	-10.566937
24186798	Ask HN: Why is daily or n * daily de	Ask HN: Why is daily or n * daily deployment so popular?	blunte	9.186676	-6.4112635	story	9.0	12.0	1597669317	6.1065083
24307596	Intel's “cripple AMD” function (2019	Intel's “cripple AMD” function (2019)	arto	9.260751	-5.212071	story	9.0	500.0	1598635873	7.8976555
20369878	A Look at the AMD Zen 2 Core	A Look at the AMD Zen 2 Core	matt_d	9.271033	-5.1892285	story	9.0	209.0	1562423654	7.886318
20388850	The Configuration Complexity Clock (	The Configuration Complexity Clock (2012)	r4um	9.843362	-5.244638	story	9.0	45.0	1562643807	2.073497
20398499	x86 API Hooking Demystified (2012)	x86 API Hooking Demystified (2012)	codesuki	9.785338	-5.4730034	story	9.0	103.0	1562722882	-7.651796
20600878	ZipCPU – A small, lightweight, RISC 	ZipCPU – A small, lightweight, RISC soft core in Verilog	eatonphil	9.413164	-5.6607084	story	9.0	118.0	1564846388	-10.51317
20733476	What, if any, modern products still 	What, if any, modern products still use the 6502?EDIT: That’s not a dig against the 6502. I still fondly remember leaning BASIC in my C64 and wish now I had ventured into Assembly with it. By today’s standards it seems to have a simpler and more approachable instruction set so I’m wondering if there aren’t products I could hack on to learn Assembly with it. Or maybe I should just break out my old Commie.	Zelphyr	9.572786	-5.4074554	comment	9.0	28.0	1566168934	-7.430852
20749238	I have so many questions:- Where can	"I have so many questions:- Where can I get the ISA specification?[1]- Where can I get a compiler?- Is there a link to the ""softcore model""?With RISC-V you can start very simple and small (micro-controller) and work your way up in understanding and implementation to a very large core (application class). POWER is a monster of an architecture, designed more for ""big iron"". I guess that might limit the ""hobbyist"" factor RISC-V has.1. This I think, all 1200 pages of it: https://openpowerfoundation.org/?resource_lib=power-isa-vers..."	bem94	9.460189	-5.5609064	comment	9.0	127.0	1566320583	-10.502971
13741470	Author here. I think today that apar	"Author here. I think today that apart from making my case in a bit of an obnoxious tone, I also somewhat overstated it: while it's true that many ""high-level"" constructs do have a cost that will not magically go away due to any logic built into hardware, at least not fully, it is also ought to be true that a lot can be done in hardware to make software's life easier given a particular HLL programming model, and I'm hardly an expert on this. My true interests are in accelerator development so starting at the GPU and further away from the CPU and so lower level and gnarlier than C in terms of programming model.I will however say that the Reduceron and in general the idea of doing FP in hardware in the most direct way are a terrible waste of resources and I'm pretty sure it loses to a good co"	yosefk	9.330087	-5.3611627	comment	9.0	68.0	1488163771	8.071469
13779299	ECC is a feel good feature, but is m	ECC is a feel good feature, but is mostly useless. Memory either is corrupted (which can be detected by running MemTest) or it works perfectly fine without ECC. I have over 50 10+ year old Itanium servers with 192GB ECC RAM each, there are 2 ECC errors logged total, while running 24/7.	mee_too	9.479796	-5.528617	comment	9.0	35.0	1488496898	8.263394
14243713	I just recently completed a build my	I just recently completed a build myself. It was pre-Ryzen so AMD wasn't an option at the time. I went with the Intel i7-7700 (quad core) at 3.6 GHz.I was surprised by two big things: high-performance devices are extremely affordable nowadays and processors have gotten a lot better despite minimal changes in clock speed.I went on PC Part Picker and built my 'budget' device and my 'fantasy' device. It turned out they were just about the same. I couldn't really spend more than $1500 for anything better without jumping to server-grade parts.Yesterday I played Halo Wars 2, listened to Spotify, kept Word, Excel, Edge, Chrome, & WEKA open, and was running an embarrassingly inefficient data mining program in Python via WSL, while running a Jenkins build server in an Ubuntu Server VM, and running 	nxc18	9.429533	-5.192706	comment	9.0	87.0	1493695169	7.9618244
19119099	I'm a big fan of RISC-V but HiFive c	"I'm a big fan of RISC-V but HiFive completely ruined the whole point.
I was excited for a _proper_ open ISA because it would open up super low cost hardware development. But looking at the $35 raspberry pi with a license-bound ARM ISA and a supposedly open source board for $1000 it looks like HiFive is playing by intel's or ARM's rules.
No chance for risc-v adoption with this ridiculous overpricing"	silur	9.382273	-5.649787	comment	9.0	48.0	1549663202	-10.542897
19152633	Why White People Don’t Use White Emo	Why White People Don’t Use White Emoji	dustinmoris	9.792611	-6.2658195	story	9.0	12.0	1550062298	-13.947722
19309701	Intel CPUs afflicted with simple dat	Intel CPUs afflicted with simple data-spewing spec-exec vulnerability	Nux	9.605288	-5.4252877	story	9.0	162.0	1551783324	7.8618994
19428700	x86 Bare Metal Examples	x86 Bare Metal Examples	Cieplak	9.84132	-5.420632	story	9.0	513.0	1552979234	-7.7255087
19464637	If you want prevent Meltdown and Spe	If you want prevent Meltdown and Spectre patches from slowing down Your PC, on Windows you can use the InSpectre tool: https://www.grc.com/inspectre.htmOn linux add the following boot parameter: pti=off spectre_v2=off l1tf=off nospec_store_bypass_disable no_stf_barrierI saw a measurable decrease in build times in Linux. '$ time make' dropped nearly 10%.Of course do not do this if you visit sketchy websites, install dodgy software, or open random attachment in email. That said, I can't find any evidence that any mass attack has been based on these exploits. <tin foil hat> Have a feeling our machines are made slower to make cloud providers safer or sell more CPUs.</tin foil hat>	slacka	9.634887	-5.5454497	comment	9.0	32.0	1553275035	7.842303
19564581	Linus: People take me much too serio	Linus: People take me much too seriously, I can't say stupid crap anymore	donatj	9.272766	-5.89649	story	9.0	68.0	1554307964	4.229299
19968169	Get Started with 6502 Assembly Progr	Get Started with 6502 Assembly Programming on Atari Lynx	ikromin	9.652868	-5.4975705	story	9.0	77.0	1558423281	-7.3678794
15830545	How to buy a Dell laptop with the In	How to buy a Dell laptop with the Intel ME disabled from the factory	imwally	9.503416	-5.2230506	story	9.0	134.0	1512196047	7.7843556
15895701	The Mill CPU Architecture – Threadin	The Mill CPU Architecture – Threading [video]	Avi-D-coder	9.611168	-5.3123937	story	9.0	116.0	1512978672	7.7794094
16000389	I made a talking emoji using regular	I made a talking emoji using regular emojis and JavaScript	maury91	9.810556	-6.266189	story	9.0	112.0	1514137015	12.916608
16053518	At the meta level this is just a spe	"At the meta level this is just a special case of ""complexity is evil"" in security. CPUs have been getting more and more complex, and the relationship between complexity and bugs (of all types) is exponential. Each new CPU feature exponentially increases the likelihood of errata.A major underlying cause is that we're doing things in hardware that ought to be done in software. We really need to stop shipping software as native blobs and start shipping it as pseudocode, allowing the OS to manage native execution. This would allow the kernel and OS to do tons and tons of stuff the CPU currently does: process isolation, virtualization, much or perhaps even all address remapping, handling virtual memory, etc. CPUs could just present a flat 64-bit address space and run code in it.These chips woul"	api	9.820153	-5.5327024	comment	9.0	39.0	1514914669	-7.8037863
16065880	Meltdown and Spectre: Bugs in modern	Meltdown and Spectre: Bugs in modern computers leak passwords and sensitive data	bonzini	9.654607	-5.5504794	story	9.0	138.0	1515018250	7.714514
16068324	Notes from the Intelpocalypse	Notes from the Intelpocalypse	discreditable	9.398022	-5.2320814	story	9.0	288.0	1515044704	7.695824
16080728	This is great, but remember that it 	This is great, but remember that it covers Meltdown, not Spectre. Meltdown is the more immediate disaster, but Spectre is the more batshit vulnerability. You really want to get your head around:* The branch target injection variant of Spectre if you want to get a sense of how amazing this vulnerability is: you can spoof the branch predictor to trick a target process into running arbitrary code in its address space! This is crazy!* The misprediction variant of Spectre if you want to get a hopeless feeling in the pit of your stomach, since the implications of mispredict are that certain kinds of programs are riddled with a new kind of side channel we didn't really grok until last week, and no upcoming microcode update seems to be in the offing.You could probably use the same Python conceit t	tptacek	9.653189	-5.595608	comment	9.0	81.0	1515178881	7.720335
16087374	How Tier 2 cloud vendors banded toge	How Tier 2 cloud vendors banded together to cope with Spectre and Meltdown	edouardb	9.625721	-5.5504837	story	9.0	196.0	1515271793	7.787695
16109632	I'm curious if someone can point me 	"I'm curious if someone can point me to any source that discusses how the next generation of CPUs that Intel, AMD, ARM might be working on is actually going to address this  & the Spectre issue architecturally.. It's great that we have a potentially performance killing fix but the real ""fix"" or rather, solution, is to alter the architecture. Since I'm not an EE/CE dude... is anyone aware of where such discussions on the WWW might be taking place?by the way, that PoC was intense. Makes you wonder if the NSA knew about it all along :)"	martin1975	9.584294	-5.488019	comment	9.0	84.0	1515529303	7.830786
16119545	Would this entire Meltdown/Spectre t	Would this entire Meltdown/Spectre thing count as the biggest mess-up of computing history?  When yesterday the PoC repo was posted here, the spy.mp4 demo video gave me some chills.  And now I can't update my OS before making an installation USB because Canonical can't just follow Linus' releases.  Thanks.	gkya	9.582268	-5.5659285	comment	9.0	89.0	1515621741	7.723064
16125136	Spectre has nothing to do with progr	Spectre has nothing to do with program correctness or safety. It has everything to do with hardware's correctness and safety.That is, the basic premise of hardware process isolation is that a process cannot have any knowledge of what another process is doing, or whether it even exists, unless it is explicitly permitted (e.g. the OS offers an API to look at processes).This basic premise is now broken: enough information leaks via timing as to allow to read arbitrary memory regions. It's like you built a house laying bricks in a formally correct way, but the walls proved to be permeable because the bricks themselves have a flaw.Since this flaw is not fundamental, that is, not even every currently existing processor exhibits it, it appears to be reasonable to replace the flawed design of the 	nine_k	9.70239	-5.6228576	comment	9.0	111.0	1515687969	7.826031
16185658	Meltdown and Spectre Linux Kernel St	Meltdown and Spectre Linux Kernel Status	dankohn1	9.611639	-5.5383763	story	9.0	217.0	1516364506	7.805169
16267198	ARM immediate value encoding (2014)	ARM immediate value encoding (2014)	JoshTriplett	9.796206	-5.690302	story	9.0	97.0	1517334199	-7.6658587
16399759	Ariane RISC-V CPU	Ariane RISC-V CPU	nickik	9.390698	-5.650502	story	9.0	171.0	1518856962	-10.563744
16593061	Intel Publishes Spectre and Meltdown	Intel Publishes Spectre and Meltdown Hardware Plans: Fixed Gear Later This Year	nuriaion	9.560213	-5.4777527	story	9.0	202.0	1521123804	7.781429
16852371	Linus being kind? This is contrary t	Linus being kind? This is contrary to what seems like public opinion. Good to show this here, I think.	inetknght	9.289569	-5.8885255	comment	9.0	35.0	1523910223	4.227789
17214857	PicoEVB – Artix-7 FPGA board with M.	PicoEVB – Artix-7 FPGA board with M.2 interface	bem94	9.358464	-5.2551427	story	9.0	109.0	1527951664	8.082929
17231676	Always interesting to see the diverg	Always interesting to see the divergence between HN and what the average user cares about. For most people emojis (and animojis) have opened a whole new way to communicate with each other. I can't think of another linguistic feature in history which saw such widespread use within a decade and I feel like emojis don't get enough credit for that.	jcfrei	9.783679	-6.259025	comment	9.0	161.0	1528142296	-13.960566
17304233	Intel FP security issue	Intel FP security issue	stevekemp	9.511825	-5.2656527	story	9.0	373.0	1528905162	7.8120112
17307131	Intel SA-00145: Lazy FP State Restor	Intel SA-00145: Lazy FP State Restore	lkurusa	9.499169	-5.289869	story	9.0	206.0	1528925406	7.834495
17312244	AI chip startup Wave to buy Silicon 	AI chip startup Wave to buy Silicon Valley old-timer MIPS	mindcrime	9.457245	-5.4878974	story	9.0	95.0	1528988698	9.825324
17365449	If Linus had written the reworded em	"If Linus had written the reworded email the author is proposing here, this author wouldn't be writing this blog post, and we wouldn't be clicking it on HN and reading the contents of Linus' points.As to the actual detail of the author's proposed rewordings:> I'm not talking about the changes themselves - I can live with them. But the _rationale_ is pure and utter garbage, and dangerously so.becomes> These changes look OK, but I'm not sure about the rationale.This rewording imparts an entirely different message to the original. If I read the latter, as a programmer, I would get the impression that Linus thought the commit was ""OK"". He clearly did not. At no point in his email does he indicate that anything is ""OK"" about this commit in any way.> The caps in ""AND STANDARD"" is another way to i"	lucideer	9.243519	-5.930831	comment	9.0	34.0	1529591356	4.259554
17518276	AMD EPYC Performance Testing with sy	AMD EPYC Performance Testing with systemd	josephscott	9.311405	-5.2226715	story	9.0	120.0	1531426775	7.9627404
17636823	Cheap FPGA Development Boards	Cheap FPGA Development Boards	peter_d_sherman	9.0969095	-5.3181405	story	9.0	113.0	1532845836	8.312989
21138523	When RISC-V inevitably renames itsel	When RISC-V inevitably renames itself CISC-V, then what language would naturally fit together?And don't say cobol.	DannyB2	9.441678	-5.741781	comment	9.0	27.0	1570035452	-8.865905
21164685	This makes me worried about the futu	This makes me worried about the future of processors. I know bugs have always existed and sometimes they were very serious but they seem to have increased in frequency in the last few years.Is it just me or it's an actual trend ?	icefo	9.569036	-5.255113	comment	9.0	55.0	1570269319	7.793031
21173418	Not sure I really need 8+ cores and 	Not sure I really need 8+ cores and 32G of RAM on a personal computer. I think there's some sort of max complexity ratio between the human mind and your equipment that, if you exceed it, means you'll never really know what's going on in there. I'd argue that 4 cores and 16G RAM already exceeds that threshold, by a lot.	javajosh	9.651314	-5.195184	comment	9.0	44.0	1570382723	7.9359226
21176967	Every time I think about playing tho	Every time I think about playing those games, I can't help but be dissuaded by the likelihood that learning actual machine language for ARM or x86-64 would be considerably less difficult and, in the long run, more beneficial to me.	ThrowawayR2	9.7075405	-5.336263	comment	9.0	34.0	1570417265	-7.7396526
21522522	Developing open-source FPGA tools	Developing open-source FPGA tools	mr_golyadkin	9.0883465	-5.354847	story	9.0	277.0	1573639094	8.386336
21552446	Building a 64-bit aarch64 kernel and	Building a 64-bit aarch64 kernel and userspace for the Raspberry Pi 4	esotericn	9.728309	-5.315781	story	9.0	116.0	1573909262	-7.8457465
21567800	How to set up Xilinx Vivado for sour	How to set up Xilinx Vivado for source control	jhallenworld	9.08334	-5.415477	story	9.0	60.0	1574108570	8.4928665
21629023	Is avx512 an advantage really?  Iirc	"Is avx512 an advantage really?  Iirc the machine has to go into another mode where processing across the board becomes slower except for the avx instructions, which to me seems only useful for niche hpc ""measuring contest"" applications."	dnautics	9.444986	-5.5535264	comment	9.0	50.0	1574696407	8.091076
21677819	The Difference Between CI and CD	The Difference Between CI and CD	jpdel	9.193736	-6.4045157	story	9.0	194.0	1575234826	6.1730638
39179328	Not sure who this is aimed at? The a	Not sure who this is aimed at? The avg programmer probably doesn’t have the gear on hand to run this at the required paceCool nonetheless	Havoc	9.598392	-5.4315534	comment	9.0	80.0	1706550060	-0.88894445
39205522	I couldn't find any information but 	I couldn't find any information but does this use some kind of LLM to derive the combinations from? It makes a request to the backend every time you combine items which sometimes takes >500ms, and also supports some really wild combinations that I highly doubt someone has taken the time to come up with. It would also explain why the icons are emoji's, it would be fairly trivial to ask ChatGPT to give you the result of Fire + Water and an accompanying emoji.	smarkov	9.80419	-6.2673635	comment	9.0	153.0	1706717628	-13.951859
17935984	AVX-512: when and how to use these n	AVX-512: when and how to use these new instructions	ingve	9.497396	-5.6129975	story	9.0	188.0	1536340683	8.106088
18001814	"The problem here is that the ""Collab"	"The problem here is that the ""Collaborating"" sector is the wrong goal for the Linux kernel. Linus Torvalds is uniquely qualified to be concerned about matters concerning the kernel; if his interlocutors ""win"" too much on their side of the ""win/win"", every user loses.The public embarrassment of lazy and dishonest actors, especially those who are paid to collaborate, is an effective tool for maintaining order and standards on behalf of the quality of the product, and provided nobody gets hurt permanently at the end of the day, it is easily justified."	microcolonel	9.432992	-5.8252835	comment	9.0	48.0	1537139718	-8.147034
18003046	Personally, and maybe I’m in the min	Personally, and maybe I’m in the minority when thinking this, but I can’t stand working with polite people.They not only slow down the progress of a project by often causing unneeded busywork, from simply not halting bad ideas, they often slow my learning progress down by not telling me I’m wrong.If you see something stupid, call it out. If I’m doing something stupid or say something wrong, call me out!There’s obviously a happy medium somewhere in there, and Linus isn’t it, but I would much prefer working with a Linus than someone polite. From the history I’ve read, he’s not holding grudges, or necessarily attacking people, he’s attacking dumb approaches and ideas, which happen to be authored by people. At least that’s how I’ve always interpreted his rants.	nomel	9.279402	-5.8912106	comment	9.0	64.0	1537155899	4.2618427
18056041	I am a Linux developer and contribut	I am a Linux developer and contributor for a few decades and the code of conduct simply killed any interest in contributing to it. It won't take long until backdoors are introduced on Linux. Activists that joined the community for money will have full control and the ability of banning any criticism. We really need Linus back.	lanevorockz	9.374471	-5.84465	comment	9.0	86.0	1537779342	4.1281433
18281239	Linus Torvalds Back in Charge of Lin	Linus Torvalds Back in Charge of Linux	atlasunshrugged	9.369974	-5.8673525	story	9.0	140.0	1540277222	-8.173932
18317128	Computing sin and cos in hardware wi	Computing sin and cos in hardware with synthesisable Verilog	Cieplak	9.125107	-5.480376	story	9.0	173.0	1540666231	-7.063892
18360792	SiFive Introduces 7 Series RISC-V Co	SiFive Introduces 7 Series RISC-V Cores with E7, S7 and the U7 Series	pepsi	9.384553	-5.6348586	story	9.0	179.0	1541134585	-10.590128
18376842	6502 Language Implementation Approac	6502 Language Implementation Approaches	ingve	9.653221	-5.5087676	story	9.0	105.0	1541351576	-7.306979
18508692	ECCploit is the first Rowhammer atta	ECCploit is the first Rowhammer attack to defeat error-correcting code	rbanffy	9.57733	-5.630933	story	9.0	129.0	1542875768	-13.900459
18576348	Researchers have significantly incre	Researchers have significantly increased the scope of the Rowhammer threat	rayascott	9.612212	-5.669113	story	9.0	157.0	1543664191	-13.9155245
18702960	Aller Artix-7 FPGA Board with M.2 In	Aller Artix-7 FPGA Board with M.2 Interface	numatolab	9.27324	-5.209538	story	9.0	35.0	1545086817	8.118895
18762226	This pessimism about whether softwar	This pessimism about whether software can effectively use CPU cores beyond two is easily refuted with a simple observation: High-end games are now running pretty close to 100% CPU utilization on octa-core console hardware.Parallelizing our software is mostly a question of investment at this point. In my experience, there isn't a lot of software that wouldn't benefit from CPU parallelism in some way or another. The bigger issues are (a) that a lot of software simply doesn't prioritize performance, for both good and bad reasons, and (b) that a lot of foundational software has been in maintenance mode for years and there isn't enough interest or funding to improve it.	pcwalton	9.550334	-5.311323	comment	9.0	50.0	1545833880	8.029839
29808499	Back in the day people coded lightwe	Back in the day people coded lightweight because it wouldn't run otherwise, and speed mattered in single core sub-GHz CPUs. We don't have that same constraint today, how do we get people to write more efficient code?	mysterydip	9.678906	-5.359033	comment	9.0	53.0	1641388637	7.9296293
29838750	I've voiced this before but I think 	"I've voiced this before but I think AVX-512 is completely irrelevant in the consumer space (which imho makes titles like ""Intel artificially slows 12th gen down"" incredulous). Even for commercial applications - sure there are some things that benefit from it. On the other hand, I work in HPC and even in (commercial, not nuke simulations or whatever the nuke powers do with their supercomputers) HPC applications AVX-512 is rarely used.Also... AVX-512 was never announced for 12th gen. No one claimed it was there, would work, would be stable or anything to that tune. No one should have had an expectation that a 12th gen CPU would do AVX-512 (and no one did). Intel even explicitly said pre-launch that it won't do AVX-512. Some people found post-launch that some BIOSes allow you to turn the E-co"	formerly_proven	9.439358	-5.516791	comment	9.0	51.0	1641561657	8.076579
30070070	Any reasons (beyond PR) that these h	"Any reasons (beyond PR) that these highlights are posted on the blog of GitHub instead of on the main website of Git itself?Sadly, even Google is so confused about Git VS GitHub that searching for ""git blog"" shows github.blog as the first result..."	capableweb	8.9756155	-6.2853975	comment	9.0	29.0	1643104132	12.707322
30076333	ARM gets the short end of the stick 	ARM gets the short end of the stick here.NVIDIA being a well known hostile company, the industry did not miss the news about its ARM purchase intent. And thus they looked for alternatives. That's RISC-V.Today, pretty much every company designing microcontrollers or SoCs is involved with RISC-V. They won't cancel those efforts to embrace ARM again.	snvzz	9.239075	-5.358398	comment	9.0	49.0	1643137204	-10.545384
30255148	Why will ARM succeed where MIPS fade	Why will ARM succeed where MIPS faded into obscurity? (Well,  relative obscurity. I see they are still used in media devices and cheap routers.)https://en.m.wikipedia.org/wiki/MIPS_Technologies	NortySpock	9.493217	-5.5488744	comment	9.0	43.0	1644297323	-10.429978
30301551	A Big Week for RISC-V	A Big Week for RISC-V	JoachimS	9.365187	-5.706777	story	9.0	103.0	1644588015	-10.619429
30515616	The real reason RISC-V is succeeding	The real reason RISC-V is succeeding, relative to ARM:If you make your own CPU- With ARM, You have to pay ARM for ISA license (after a several months long negotiation), and you cannot license your CPU design to anyone, as ARM has the exclusive right to do that with their designs.- With RISC-V, you get a free ISA license, and you can license your CPU design to others.If you do not make your own CPU- With ARM, you can (after a several months long negotiation) license one of the few designs ARM has available. There's no other vendors that can offer you ARM CPU designs.- With RISC-V, right now, you can license any among hundreds of options available, from tens of vendors. The licensing process is usually very short and straightforward. Alternatively, there are some open hardware designs. You c	snvzz	9.416904	-5.5803423	comment	9.0	139.0	1646149943	-10.531863
30673185	Amdahal's Law says hello. https://en	Amdahal's Law says hello. https://en.wikipedia.org/wiki/Amdahl%27s_lawIf we keep scaling up number of processors rather than clock speed, what is going to be the maximum number useful cores in a laptop or desktop? 20? 100? 1000? At some point adding more cores is going to make no difference to the user experience, but the way we are going we'll be at 1000 cores in about a decade so we better start thinking about it now.Or to put it another way, what normal workloads will load up all the cores in the new M1 chip?Being a software developer, compiling things is the obvious choice, except when you come to that rather serial linking phase at the end of the compile job. Already my incremental Go compiles are completely dominated by the linking phase.There are a few easy to parallelise tasks, mos	nickcw	9.507436	-5.228112	comment	9.0	43.0	1647269863	7.9159646
12540545	How to run C programs on the BeagleB	How to run C programs on the BeagleBone's PRU microcontroller	dwaxe	9.676751	-5.205274	story	9.0	112.0	1474387454	-9.257438
13066538	HiFive1: A RISC-V-based, Open-Source	HiFive1: A RISC-V-based, Open-Source, Arduino-Compatible Development Kit	mwcampbell	9.384888	-5.6765795	story	9.0	194.0	1480456203	-10.585821
13201799	Intel X86 Encoder Decoder	Intel X86 Encoder Decoder	luu	9.692867	-5.5462027	story	9.0	146.0	1481999978	-7.6288333
27534572	A bare metal physical implementation	A bare metal physical implementation of WASM. That's right, a WebAssembly CPU (2018)	Kinrany	9.827337	-5.412676	story	9.0	125.0	1623885287	7.649888
27553356	RAM?Everytime I looked into setting 	RAM?Everytime I looked into setting up a freenas box, every hardware guide insisted that ungodly amounts of absolutely-has-to-be-ECC RAM was essential, and I just gave up at that point.	auxym	9.524179	-5.493048	comment	9.0	50.0	1624040964	8.254725
27592187	SiFive P550 Core: High-Performance R	SiFive P550 Core: High-Performance RISC-V Processor	andrewnc	9.389623	-5.6441197	story	9.0	191.0	1624372613	-10.569466
27728803	Isn't ECC memory supposed to mitigat	"Isn't ECC memory supposed to mitigate these kind of bit-flips, specifically it should correct all single bit flips?As this is a single bit-flip, why wasn't it corrected? Did ECC memory fail? Or was this bit-flip induced in the CPU pipeline, registers, or cache?Do we need ""RAID for ECC memory"", where we halve user-accessible RAM and store each memory segment twice and check for parity?"	dannyw	9.5776415	-5.5673575	comment	9.0	53.0	1625396944	8.206441
27772066	Libre-SoC 180nm Power ISA v3.0 ASIC 	Libre-SoC 180nm Power ISA v3.0 ASIC Submitted to IMEC MPW	lkcl	9.52709	-5.5217853	story	9.0	91.0	1625752997	7.5136423
27874016	Let’s say you have a run of the mill	Let’s say you have a run of the mill nodejs express app that connects to Postgres (let’s assume it’s managed in this scenario).How do you make use of all the 48 cores and the RAM available to you? (I’m genuinely interested so please ignore any snarky tone if any)	omneity	9.6828165	-5.4084735	comment	9.0	28.0	1626624214	8.098954
27881083	There's a real gem in that thread:> 	"There's a real gem in that thread:> FYI: There is also another cross-platform filesystem (Linux kernel,
Windows NT kernel, Mac OS X kernel) suitable for hard disks too with
POSIX permissions about which people do not know too much. It is UDF.As I was struggling to find a way to share data between Linux/Windows with my gpu-passthrough setup, I'm excited to use this.I think I've read something about 9p support in the latest Windows versions and I think QEMU supports 9p so that might become a good solution, too."	mircea	9.881847	-5.213595	comment	9.0	35.0	1626691873	-8.299445
27880461	Are there flaws in some ARM64 instru	Are there flaws in some ARM64 instructions?	ingve	9.766908	-5.5036135	story	9.0	43.0	1626684597	-7.7214117
12070998	Linus Torvalds in sweary rant about 	Linus Torvalds in sweary rant about punctuation in kernel comments	sebhack	9.302928	-5.890073	story	9.0	31.0	1468244972	4.235107
12499351	Deprecating the PCOMMIT Instruction	Deprecating the PCOMMIT Instruction	mslusarz	9.74855	-5.7066884	story	9.0	73.0	1473874626	8.123869
12528617	Building Sourcegraph - A large-scale	Building Sourcegraph - A large-scale code search engine in Go (2014)	philip1209	8.819568	-6.0382905	story	9.0	82.0	1474255084	-11.1862755
35267901	Adding an ISA Slot to a Modern Mothe	Adding an ISA Slot to a Modern Motherboard [video]	zdw	9.553128	-5.3730927	story	9.0	116.0	1679524130	-7.614234
35412342	iAPX432: Gordon Moore, Risk and Inte	iAPX432: Gordon Moore, Risk and Intel’s Super-CISC Failure	klelatti	9.399634	-5.1933494	story	9.0	133.0	1680453224	7.71653
28008125	I'm still puzzled why Itanium didn't	I'm still puzzled why Itanium didn't go any further. A precursor of the ARM revolution. And Intel just wrongly killed the project.	rafaelturk	9.518285	-5.508554	comment	9.0	41.0	1627654055	-7.748825
28063764	Verilog2Factorio: Web Demo	Verilog2Factorio: Web Demo	linux_is_nice	9.1115885	-5.50026	story	9.0	136.0	1628098036	8.546883
28180352	Volkswagen detects when tests run in	Volkswagen detects when tests run in a CI server, and makes them pass (2018)	pabs3	9.872812	-6.3878818	story	9.0	163.0	1628946870	5.80112
28249935	"Noob her!
why use a 6502 versus anot"	"Noob her!
why use a 6502 versus another 8bit cpu like Atmel AVR?
Is there any advantage?
Does it consume less electricity while running at similar speed ?"	skyde	9.486992	-5.2756224	comment	9.0	28.0	1629485646	-7.448539
28468118	HiFive Unmatched – A RISC-V Linux de	HiFive Unmatched – A RISC-V Linux development platform	velmu	9.397896	-5.678057	story	9.0	107.0	1631182319	-10.573202
28501274	Dataset of Linus Torvalds' rants ran	Dataset of Linus Torvalds' rants ranked by hate	fctorial	9.291685	-5.881609	story	9.0	42.0	1631455617	4.227024
28542222	“Melting face,” “pregnant person,” a	“Melting face,” “pregnant person,” and 35 other emoji approved for Unicode 14.0	Tomte	9.866858	-6.2549567	story	9.0	18.0	1631728510	-13.948198
22342993	Handwritten PDP-6 hardware log from 	Handwritten PDP-6 hardware log from the Stanford AI Laboratory (1967) [pdf]	gruseom	9.848917	-5.432214	story	9.0	44.0	1581877775	-7.5464168
22513906	New AMD side channel attacks discove	New AMD side channel attacks discovered, impacts Zen architecture	alanfranz	9.2691965	-5.219727	story	9.0	208.0	1583613900	7.846117
22538016	Jobs' decision to ship NeXT on 68k a	Jobs' decision to ship NeXT on 68k at the very moment when the architecture fell behind basically crippled the platform.  Superscalar pipelined architectures were taking off, and where Intel managed to catch up with the Pentium and pull ahead with the P6 and derivatives, Motorla just never got it done.  So while the NeXT was adequate (if somewhat slow) in 1988 by 1993 (when Intel released the Pentium, meaning that the whole industry was now expecting >1 IPS performance) it was kind of a joke.While SPARC was proprietary (and PA and POWER were still in the future) MIPS was actually shipping chips at the time for general sale.  Why NeXT didn't go with them I don't know.	ajross	9.5897455	-5.1896806	comment	9.0	47.0	1583864538	-7.684151
22830554	The GRUB parameters that appear on M	The GRUB parameters that appear on Make-Linux-Fast-Again.com apparently disable Spectre/Meltdown mitigations:https://gist.github.com/rizalp/ff74fd9ededb076e6102fc0b636bd...https://securitronlinux.com/bejiitaswrath/how-to-get-a-nice-...https://www.phoronix.com/scan.php?page=news_item&px=Spectre-...	miles	9.629898	-5.546056	comment	9.0	169.0	1586500694	7.866162
22847764	This article is spot on. Verifying h	This article is spot on. Verifying hardware is a much more complex task than designing it. I've spent ~1.5 years on verifying custom cpu core re-implementation (next gen) that was almost binary compatible with previous gen, we had own gcc backend and LOTS of legacy programs written in assembly. And even then it was a nightmare. Even after tons of time spent on covering most obscure cases, our FPGA platform, running our multi-task FW, would often crash: cue in hours of back-stepping FPGA trace dumps, where you have a total recording of program counter, load-store IF, internal registers for aroung 100k clocks and you have to trace back the execution and see where the fault occurs. Usually it would turn out to be some weirdly obscure combination of recently-fired interrupt, some pipeline stal	artemonster	9.71252	-5.64556	comment	9.0	85.0	1586694246	7.9984136
22848382	Why is it supposed to be so complica	"Why is it supposed to be so complicated to do ""processor verification""?Why can't you simply upload the design to an FPGA, and then check that it can:1. Boot all available operating systems (Linux, *BSD, Windows, etc.)2. Successfully compile and run the testsuites for a bunch of open-source software (several languages like Rust have a standardized repository and method to build and run tests, so this is very easy)3. Correctly run stress testing software (Prime95, etc.)4. Correctly run several software unit tests that you write to exercise instructions that may not be produced by LLVM/GCC5. Correctly run tests you write to exercise specific processor/cache states6. Properly handling fuzzed code without freezing the whole CPU (using afl-fuzz)Start with the simplest possible in-order core so t"	devit	9.637213	-5.6050334	comment	9.0	32.0	1586701061	-5.6154284
23096338	Clash: A modern, functional, hardwar	Clash: A modern, functional, hardware description language	lelf	9.736274	-5.503622	story	9.0	96.0	1588799441	-7.48839
23205225	Extracting ROM constants from the 80	Extracting ROM constants from the 8087 math coprocessor's die	matt_d	9.733691	-5.5969067	story	9.0	150.0	1589649209	-7.399872
23363735	Why do C to Z80 compilers produce po	Why do C to Z80 compilers produce poor code? (2018)	eklitzke	9.707414	-5.5578055	story	9.0	115.0	1590865678	-7.446478
33175038	Researchers Develop Transistor-Free 	Researchers Develop Transistor-Free Compute-in-Memory Architecture	giuliomagnifico	9.847783	-5.3707952	story	9.0	97.0	1665570901	8.152069
33252922	Intel Enables ECC Memory on Consumer	Intel Enables ECC Memory on Consumer Alder Lake CPUs	walterbell	9.460506	-5.4675183	story	9.0	28.0	1666122749	8.165395
33416255	More depressing -number of cores wil	More depressing -number of cores will also level off eventually and where does that leave us then?Will we actually have to optimize our code instead of pushing each hello world request through hundreds of function calls?I also assume some niches are actually already 90%+ optimized. Once the cores level off it‘s stagnation here too.	Traubenfuchs	9.634201	-5.303553	comment	9.0	48.0	1667270132	8.032608
33486822	Had anyone tried to find (or derive)	Had anyone tried to find (or derive) an ideal set of instructions for a processor architecture, with any assumptions about arithmetic etc? For example you can try to minimise the number of instructions it takes to encode some set of nontrivial programs. (Of course how this would translate to silicon is another question.)	Y_Y	9.75955	-5.659018	comment	9.0	43.0	1667688995	8.0285
33584311	ARM: Pragmatism, Not Purity	ARM: Pragmatism, Not Purity	ingve	9.538714	-5.2372575	story	9.0	92.0	1668355763	-7.682807
33601249	Show HN: Use Slack Emoji on GitHub	Show HN: Use Slack Emoji on GitHub	schniz	9.740493	-6.222901	story	9.0	48.0	1668460723	12.980031
33625859	RISC-V: The Last ISA?	RISC-V: The Last ISA?	klelatti	9.42994	-5.6868935	story	9.0	56.0	1668616320	-10.527232
33683571	Welcome to the First RISC-V Site	Welcome to the First RISC-V Site	susam	9.382115	-5.7038345	story	9.0	84.0	1668968177	-10.588702
33776259	Are there any libraries that allow m	Are there any libraries that allow me to write different versions of the same function (AVX-512, AVX2, SSE, etc) and then automatically choose the best one that the system supports at runtime? Or maybe even better, the compiler generates multiple versions for me.In other words, one binary that takes advantage of new instructions but still runs on older hardware. It doesn't really have to be older either, plenty of brand new CPUs doesn't support AVX-512.	sorenjan	9.589995	-5.6408443	comment	9.0	33.0	1669655543	8.189177
33792974	A tiny C header-only RISC-V emulator	A tiny C header-only RISC-V emulator	todsacerdoti	9.412743	-5.655602	story	9.0	205.0	1669754430	-7.4433804
33920663	One thing I never understood about c	One thing I never understood about compilers:Doesn't all CPUs offer a different set of opcodes? How can a compiler then work for different CPUs?For example, this Wikipedia page is listing the CPUs that support instructions for fast SHA calculations:https://en.wikipedia.org/wiki/Intel_SHA_extensionsHow could a compiler ever use those, when not all CPUs support them?	TekMol	9.767645	-5.762527	comment	9.0	31.0	1670590343	-7.5473237
34013369	Fallacies about RISC-V	Fallacies about RISC-V	JoachimS	9.373099	-5.709108	story	9.0	83.0	1671190115	-10.598707
34107529	What's the elevator pitch for RISC-V	What's the elevator pitch for RISC-V? My intuition is that RISC was dead for good reason.	jimmaswell	9.37665	-5.6988873	comment	9.0	52.0	1671812807	-10.589029
26688455	AMD's Zen 3 CPUs Are Susceptible to 	AMD's Zen 3 CPUs Are Susceptible to Spectre-Like Vulnerability	T-A	9.301781	-5.2401385	story	9.0	182.0	1617534312	7.8562326
26841783	Hardware Failure on EC2	Hardware Failure on EC2	fctorial	9.605444	-5.4890504	story	9.0	26.0	1618637073	8.126352
27063748	ARM vs. RISC-V Vector Extensions	ARM vs. RISC-V Vector Extensions	zdw	9.433058	-5.7120156	story	9.0	93.0	1620311215	-10.521469
27171520	Disguised “AMD PCI Driver” enables e	Disguised “AMD PCI Driver” enables executable-specific hacks	aunali1	9.444261	-5.235144	story	9.0	147.0	1621144636	7.7894115
27218818	RISC-V is amazing as what it is, but	RISC-V is amazing as what it is, but it isn't a competitor for high-end performance. It's simply not designed for that.	Tuna-Fish	9.377383	-5.6796436	comment	9.0	50.0	1621499838	-10.562212
27399039	8088ify: Intel 8080 CP/M 2.2 to Inte	8088ify: Intel 8080 CP/M 2.2 to Intel 8086/8088 IBM PC DOS assembly translator	ingve	9.700372	-5.2931805	story	9.0	43.0	1622840519	-7.5350113
27467582	I still don't like how rude Linus is	I still don't like how rude Linus is. I'll never like how rude Linus is.But his explanation of mRNA is nicely done. Hope somebody reading it learns something and realizes they've been lied to. Maybe even gets vaccinated. That'd be worth a mean email or two.	ivraatiems	9.278629	-5.8971114	comment	9.0	40.0	1623369040	4.2569723
37944652	I'm sort of confused on this one, is	"I'm sort of confused on this one, is this essentially the ""home version"" of an Epyc? Who is the intended purchaser here? As previously if I wanted to build an AMD workstation at home I would have opted for an Epyc setup."	saberience	9.344514	-5.2427177	comment	9.0	44.0	1697731152	7.9134026
38086894	Reverse-engineering Ethernet backoff	Reverse-engineering Ethernet backoff on the Intel 82586 network chip's die	zdw	9.637864	-5.245558	story	9.0	200.0	1698767997	-7.208981
38113795	How much cheaper are RISC-V chips in	How much cheaper are RISC-V chips in reality?I get there might be a saving for not having to pay ARM a royalty of some kind, but are RISC-V chips cheaper in practice as a result?I was under the impression (rightly or wrongly) that the arm royalties per chip were really small.	tomalpha	9.38406	-5.6339936	comment	9.0	67.0	1698934428	-10.551129
38128775	How long should your CI take?	How long should your CI take?	fosterfriends	9.282479	-6.3948007	story	9.0	63.0	1699019604	6.106156
38491997	An old company I worked for used pro	"An old company I worked for used project management software with a check-in/out mechanism for making changes. When you ""check out"" a project it downloads a copy that you change locally, then ""check in"" uploads it back to the server. A project is ""locked"" while in the ""checked out"" state. We all felt it was an archaic mechanism in a word of live updating apps.After 10 years of building SPA ""web apps"", that data synchronization mechanism feels ahead of its time."	nusmella	8.8709755	-6.367497	comment	9.0	52.0	1701463052	-11.797159
14764842	How CircleCI Processes 4.5M Builds p	How CircleCI Processes 4.5M Builds per Month	emidln	8.951949	-6.4040833	story	9.0	146.0	1499977445	1.5948962
15073717	"> ""modern computers are very complex"	"> ""modern computers are very complex, don't even try to understand what's happening""One thing to keep in mind is that the CPU is no longer the CPU you think it is. While the x86 instruction set used to directly control the processor, today it's just a compatibility shim. Under the covers, the CPU is converting your assembly into its own microcode and it's that microcode which is doing the real work. For example, look at some of the block diagrams in section 2 of this Intel manual:https://software.intel.com/sites/default/files/managed/a4/60...Combine that with all kinds of other voodoo they've added--fancy caches, branch prediction, and so forth--and the ""don't even try"" maxim starts to make sense. I'd amend that to say ""don't even try unless you're just curious.""Personally, I think assembl"	jdcarter	9.692728	-5.534316	comment	9.0	39.0	1503417861	7.855105
15180581	Rosetta Stone for Unix (2014)	Rosetta Stone for Unix (2014)	whalesalad	9.854766	-5.361856	story	9.0	114.0	1504662485	7.38739
15342840	BOOM v2: an open-source out-of-order	BOOM v2: an open-source out-of-order RISC-V core	ingve	9.407891	-5.6546736	story	9.0	170.0	1506462760	-10.558406
15436790	Apple's new gender neutral emojis	Apple's new gender neutral emojis	kawera	9.79738	-6.2696743	story	9.0	15.0	1507577977	-13.965457
15555829	An embeddable dumb heartbeat daemon 	An embeddable dumb heartbeat daemon in 260 bytes of RAM and 350 bytes of code	luu	9.8921585	-5.2088504	story	9.0	121.0	1508983752	6.8283634
14450050	Shitty url shortener, emoji and ai p	Shitty url shortener, emoji and ai powered	cagataycali	9.800646	-6.262161	story	9.0	30.0	1496197375	-13.929462
14522364	Completely agree. But the tools don'	Completely agree. But the tools don't make this very easy.Back in college I was working on patches to OpenSSL, Chrome, Firefox, Apache, etc., to add support for TLS-SRP, and it was a huge pain to jump into these massive codebases and try to understand them. I was using Emacs and had all of the various language support modes configured, but go-to-definition and cross-references barely worked. Searching was slow, and if I wanted to discuss a piece of code with my CS lab partners, I couldn't just share a link.A friend felt the same pain but then went to work at Google for a bit. At Google, they have some pretty amazing code reading/searching tools (see https://static.googleusercontent.com/media/research.google.c...), and these tools helped Google build a culture of thoroughly reading and revi	sqs	8.78289	-6.0465803	comment	9.0	42.0	1497024653	6.385233
14634485	6th RISC-V Workshop Proceedings	6th RISC-V Workshop Proceedings	deepnotderp	9.375444	-5.7066836	story	9.0	146.0	1498457753	3.6272626
14661473	Skylake bug: a detective story	Skylake bug: a detective story	AndreyKarpov	9.447298	-5.187431	story	9.0	148.0	1498722131	7.7046785
14664361	An image diff is worth a thousand wo	An image diff is worth a thousand words	tylernappy	8.813623	-6.426459	story	9.0	67.0	1498752470	-11.6936455
30846226	And meanwhile after 9 years of exist	And meanwhile after 9 years of existing intel is still not reliably adding avx 512 to flagship desktop/gaming cpu's, first because of 5+ years of using the same old architecture and process, now because I don't know why they disabled it when it was there. Why was it not a problem for Intel to add mmx, several sse iterations, avx, avx 2, but now 9 years of nothing, even though parallel computing in annoying to program for and depend on gpu's is only gaining in importance?	Aardwolf	9.417774	-5.485087	comment	9.0	64.0	1648577062	7.975608
30931622	Microsoft Azure Adds Ampere Altra Ar	Microsoft Azure Adds Ampere Altra Arm CPUs	ksec	9.561093	-5.2377377	story	9.0	84.0	1649251158	-7.8727884
30939907	Let's pretend Linus Torvalds worked 	Let's pretend Linus Torvalds worked for Google, would he be able to get promoted for creating and maintaining Linux?  As far as the bottom line goes it brings in zero dollars and costs the company his total compensation or more to maintain.How would Linus quantify his revenue impact in his promotion packet and compete against another hypothetical engineer that improved ad targeting by 0.0X% and can directly measure an increase of revenue for the comapny in the millions of dollars?	qbasic_forever	9.36293	-5.8399734	comment	9.0	30.0	1649297718	-8.139628
31136100	VeriGPU: GPU in Verilog loosely base	VeriGPU: GPU in Verilog loosely based on RISC-V ISA	btdmaster	9.330425	-5.6026216	story	9.0	101.0	1650733821	-1.8346758
31176875	Alibaba Cloud gets more of Android w	Alibaba Cloud gets more of Android working on RISC-V silicon	rguiscard	9.392601	-5.6411037	story	9.0	127.0	1651039973	-10.594782
31317372	Reincarnating the 6502 Using Flexibl	Reincarnating the 6502 Using Flexible TFT Tech for IoT	rbanffy	9.541558	-5.292169	story	9.0	70.0	1652118648	-7.465499
31332018	PyCon US 2022 Highlights	PyCon US 2022 Highlights	jonbaer	9.111837	-6.271415	story	9.0	156.0	1652213367	8.421503
25622798	I've considered using an AMD CPU ins	I've considered using an AMD CPU instead of Intel's Xeon on the primary desktop computer, but even low-end Ryzen Threadripper CPUs have TDP of 180W, which is a bit higher than I'd like. And though ECC is not disabled in Ryzen CPUs, AFAIK it's not tested in (or advertised for) those, so one won't be able to return/replace a CPU if it doesn't work with ECC memory, AIUI, making it risky. Though I don't know how common it is for ECC to not be handled properly in an otherwise functioning CPU; are there any statistics or estimates around?	defanor	9.391977	-5.438172	comment	9.0	98.0	1609691957	8.189424
25624068	ECC memory can't eliminate the chanc	ECC memory can't eliminate the chances of these failures entirely. They can still happen. Making software resilient against bitflips in memory seems very difficult though, since it not only affects data, but also code. So in theory the behavior of software under random bit flips is well... Random. You probably would have to use multiple computers doing the same calculation and then take the answer from the quorum. I could imagine that doing so would still be cheaper than using ECC ram, at least around 2000.Generally this goes against software engineering principles. You don't try to eliminate the chances of failure and hope for the best. You need to create these failures constantly (within reasonable bounds) and make sure your software is able to handle them. Using ECC ram is the opposite.	maria_weber23	9.552259	-5.5582924	comment	9.0	86.0	1609700483	8.250983
25664935	Dumb question, but I’m curious what’	Dumb question, but I’m curious what’s the purpose of risc-v? Is it only relevant for experiments or has real applications?	kosolam	9.381711	-5.7042174	comment	9.0	63.0	1609978763	-10.591377
25801841	Tiny PDP11 on an ESP32	Tiny PDP11 on an ESP32	rcarmo	9.772856	-5.246948	story	9.0	127.0	1610800495	-7.664925
26041036	In case it wasn't clear to anyone: t	"In case it wasn't clear to anyone: this is a product very early in the planning phase, to the extent that many of the features are unspecified (no processor has been chosen, they aren't even certain on whether it'll be RISC-V or ARM), underspecified to the point of being unintelligible (""detachable USB gender-changer dongle""), or outright ridiculous (SSH-based communications between the keyboard and CPU).I wouldn't hold my breath waiting for a product here. This does not have the smell of success on it."	duskwuff	9.422561	-5.6086726	comment	9.0	46.0	1612558391	-10.578944
26077886	Cores of Rendering Madness: The AMD 	Cores of Rendering Madness: The AMD Threadripper Pro 3995WX Review	scns	9.321405	-5.199335	story	9.0	78.0	1612881136	7.9331503
26301326	"Spectre exploits in the ""wild"""	"Spectre exploits in the ""wild"""	todsacerdoti	9.680085	-5.6075583	story	9.0	193.0	1614594115	7.7564993
26365355	TROS: How IBM mainframes stored micr	TROS: How IBM mainframes stored microcode in transformers (2019)	detaro	9.64529	-5.3982835	story	9.0	128.0	1615006728	-7.254134
26390309	Everyone's right to celebrate the su	Everyone's right to celebrate the success of RISC-V, but part of me thinks it's a shame that there's relatively little architectural diversity (edit I should have said ISA diversity) in modern CPUs. MIPS, Alpha, and Super-H, have all but faded away. Power/PowerPC is still out there somewhere though. Apparently they're still working on SPARC, too. [0]At least we'll always have the PS2. ...until the last one breaks, I guess.[0] https://en.wikipedia.org/wiki/SPARC	MaxBarraclough	9.430094	-5.642867	comment	9.0	82.0	1615231473	-10.526772
35884450	> or one bit per GB every two hoursH	> or one bit per GB every two hoursHow is that possible? Wouldn't such an error frequency lead to user-observable problems all the time? For example, in the average statically compiled codebase, flipping a single bit in source code being edited (with the code then being saved to disk) will make it fail to compile with high probability, which would be noticed immediately. Yet I've never encountered this situation in practice, nor heard of anyone else encountering it, and like most people I don't even use ECC RAM. That seems incongruent with the figure quoted above.	p-e-w	9.778883	-5.532739	comment	9.0	64.0	1683701573	8.215999
36074508	I still shake my head at how they we	"I still shake my head at how they were able to successfully rebrand it from amd64 to x86-64; yet ia32 is still semi-accepted as the ""official"" name of x86."	deaddodo	9.683228	-5.322304	comment	9.0	43.0	1685040565	-7.7543163
36140177	RISE: Accelerate the development of 	RISE: Accelerate the development of open source software for RISC-V	luhenry	9.396777	-5.6836705	story	9.0	109.0	1685550168	-10.583944
36170110	I'd like to get started with RISC-V 	I'd like to get started with RISC-V chips. Can anyone reccommend a good dev board similarly priced or spec'd to the Pi Pico? Would be nice if the standalone SoC are easy to acquire as well.Which is the best cost wise? Which is the best performance wise? Power consumption wise?I don't need WiFi/Bluetooth though it would be nice. Low cost is preferrable over sheer performance. Ideally I get a fair amount of GPIO (>30) and it supports 3V or 5V.	valianteffort	9.379413	-5.5270367	comment	9.0	32.0	1685736616	-10.556054
36458678	AMD EPYC 97x4 “Bergamo” CPUs: 128 Ze	AMD EPYC 97x4 “Bergamo” CPUs: 128 Zen 4c CPU Cores for Servers, Shipping Now	ksec	9.363805	-5.1999125	story	9.0	159.0	1687614503	7.928025
36512508	Fully agree with the premise. Most y	"Fully agree with the premise. Most youngish users have never even experienced true performance. Our software stacks are shit and rotten to the core, it's an embarrassment. We'll have the smartest people in the world enabling chip design approaching the atomic level, and then there's us software ""engineers"" pissing it away with an inefficiency factor of 10 million %.We are very, very bad at what we do, yet somehow get richly rewarded for it.We've even invented a new performance problem: intermittent performance. Performance isn't just poor, it's also extremely variable due to distributed computing, lamba, whichever. So users can't even learn the performance pattern.Where chip designers move heaven and earth the move compute and data as closely together as is physically possible, leave it to"	dahwolf	9.68848	-5.225255	comment	9.0	67.0	1687985991	7.7316275
28817671	I think computer benchmarks should c	I think computer benchmarks should compute something useful, like mersenne prime verification. Million of benchmarks are run every day mostly on newer device with decent computing power. This amounts to a large amount of currently unused cycles.Maybe it would be possible to create a block-chain technology in which their participants calculate something scientifically meaningful.	hutrdvnj	9.868525	-5.287938	comment	9.0	66.0	1633866673	7.804071
28888583	Caution- These emoji mean different 	Caution- These emoji mean different things in different countries	donohoe	9.820783	-6.2607083	story	9.0	28.0	1634398647	-13.95224
28955368	Can I like magit if I don’t like ema	Can I like magit if I don’t like emacs?	wodenokoto	8.877106	-6.410245	comment	9.0	43.0	1634896743	-11.364307
29000840	Starting in 2017, Facebook treated e	Starting in 2017, Facebook treated emoji reactions as more valuable than likes	7402	9.788234	-6.2769966	story	9.0	65.0	1635258443	1.5364724
29004551	Allwinner D1s/F133 RISC-V Processor 	Allwinner D1s/F133 RISC-V Processor Integrates 64MB DDR2	thedday	9.471448	-5.5638595	story	9.0	100.0	1635274024	7.9597015
29229463	"From the article:
> We demonstrate t"	"From the article:
> We demonstrate that it is possible to trigger Rowhammer bit flips on all DRAM devices today despite deployed mitigations on commodity off-the-shelf systems with little effort.The fact that user space code can cause bit flips in your RAM is a hardware bug. I'd love to see this code in memory testers like memtest86 so I could send the RAM back if it ever caught a problem like this.I guess it shows just how close to the edge of not working our modern computing environment is."	nickcw	9.717491	-5.5873775	comment	9.0	79.0	1636995097	-13.889868
29329600	I was almost out the door to pet sho	I was almost out the door to pet shops and animal shelters so I could build a 16 cat-core setup over Thanksgiving. Then I figured I should at least read the full article before going through the trouble. It's a good thing too. Now I know that I should probably go for 64 cat-cores and treat it more like a quantum computer with the potential for rapid decoherence.	ineedasername	9.554148	-5.294073	comment	9.0	46.0	1637759218	7.9088645
29418153	New SiFive RISC-V core P650 with 40%	New SiFive RISC-V core P650 with 40% IPC increase	FullyFunctional	9.381027	-5.683099	story	9.0	176.0	1638462086	-10.58111
29444337	Ask HN: eBay alternatives for comput	Ask HN: eBay alternatives for computers, embedded components, and tools	Dracophoenix	9.097092	-5.3225145	story	9.0	31.0	1638652212	8.306095
29496436	Smiley Lore :-) (2002)	Smiley Lore :-) (2002)	geox	9.809108	-6.2388144	story	9.0	55.0	1639051582	-13.954058
34387737	Who has a better CI offering these d	Who has a better CI offering these days? I moved to CircleCI after Travis CI abandoned its open-source support.	dehrmann	8.873571	-6.4302244	comment	9.0	33.0	1673770578	-5.398014
34658459	Unpopular opinion: CI/CD engines are	Unpopular opinion: CI/CD engines are an awful idea	oweiler	9.1733265	-6.3933425	story	9.0	46.0	1675545893	6.2166595
34843221	I find fascinating that many of thos	"I find fascinating that many of those were rejected, but ""Pregnant man"" and male bride were approved.https://emojipedia.org/pregnant-man/https://emojiguide.com/people-body/man-with-veil/"	bXVsbGVy	9.770737	-6.253288	comment	9.0	58.0	1676687303	-3.9293444
34905768	I have a personal dislike of special	"I have a personal dislike of special purpose hardware. I didn't really realize how much  I disliked the idea, until I woke up to GPUs and off-CPU processing and the complexity of dealing with this ""thing"" bolted onto the side of a beautiful ISA, to do ""other things"" -which of course is entirely normal, it's always been so, Bell and Howell discussed a wheel of life about the smarts to run a printer in mainframe days, winding up with the printer moving to its own dedicated CPU and being networked and then you repeat the wheel over the network controller.I first met this with a floating-point systems co-processor on a Dec-10. It was highly problem specific, only a single DECUS tape FORTRAN compiler talked to it (IIRC) and you had this giant freezer sized box (it was lime green, unlike the blu"	ggm	9.534558	-5.193375	comment	9.0	43.0	1677117356	7.7099137
35008302	Ao486_MiSTer: i486 core for the MiST	Ao486_MiSTer: i486 core for the MiSTer FPGA gaming system	networked	9.1617155	-5.2287803	story	9.0	92.0	1677844087	8.316666
35011497	RISC-V Business: Testing StarFive's 	RISC-V Business: Testing StarFive's VisionFive 2 SBC	mikece	9.3852215	-5.6122165	story	9.0	126.0	1677860189	-10.622231
35107369	Box64 – Linux Userspace x86_64 Emula	Box64 – Linux Userspace x86_64 Emulator Targeted at ARM64 Linux Devices	varbhat	9.73577	-5.189572	story	9.0	165.0	1678534022	-7.796735
39651405	Still calling your new 64-bit chips 	Still calling your new 64-bit chips STM32, just like your 32-bit chips, instead of STM64, feels like your branding/marketing team is asleep at the wheel or just non-existent.Even Nintendo figured that out ~30 years ago.	FirmwareBurner	9.733196	-5.236377	comment	9.0	38.0	1709990063	-7.7776628
36552844	The complex history of the Intel i96	The complex history of the Intel i960 RISC processor	zdw	9.4459505	-5.501953	story	9.0	126.0	1688233792	-10.504893
36560242	64bit computing on a budget	64bit computing on a budget	jandeboevrie	9.82036	-5.3223186	story	9.0	173.0	1688295286	7.876018
36618977	A farmer responded to a contract que	A farmer responded to a contract question with a thumbs up – now has to pay $82K	goodcanadian	9.7308855	-6.248211	story	9.0	34.0	1688662459	-0.3266037
36656012	PDP-10 Incompatible Timesharing Syst	PDP-10 Incompatible Timesharing System emulator	gattilorenz	9.856188	-5.4235973	story	9.0	78.0	1688920926	-7.659411
36923235	Is This an Emoji?	Is This an Emoji?	whack	9.797431	-6.2666845	story	9.0	63.0	1690656433	-13.953678
37002008	Qualcomm starts a RISC-V joint ventu	Qualcomm starts a RISC-V joint venture	mfiguiere	9.406519	-5.600304	story	9.0	138.0	1691165686	-10.555199
37085043	Intel's Downfall Mitigations Drop Pe	Intel's Downfall Mitigations Drop Performance Up to 39%, Tests Show	pizza	9.436795	-5.2638044	story	9.0	54.0	1691727349	7.7429786
37145618	Ex-Linus Tech Tips employee alleges 	Ex-Linus Tech Tips employee alleges mistreatment and poor conditions	ahiknsr	9.334356	-5.8462367	story	9.0	80.0	1692186491	4.1530423
37220577	STM provide the most garbage source 	STM provide the most garbage source code ever. I've never seen more of an abomination in my life than the STM32Cube.	grumblingdev	9.804908	-5.3325453	comment	9.0	39.0	1692698096	7.3707886
37280878	i386 in Ubuntu won't die	i386 in Ubuntu won't die	jandeboevrie	9.640148	-5.294815	story	9.0	145.0	1693127883	-7.9378657
37317741	I don’t know if Intel has the appeti	I don’t know if Intel has the appetite to attempt another barrel processor.The primary weakness of barrel processors is human; only a handful of people grok how to design codes that really exploit their potential. They look deceptively familiar at a code level, because normal code will run okay, but won’t perform well unless you do things that look extremely odd to someone that has only written code for CPUs. It is a weird type of architecture to design data structures and algorithms for and there isn’t a lot of literature on algorithm design for barrel processors.I love barrel processors and have designed codes for a few different such architectures, starting with the old Tera systems, and became quite good at it. In the hands of someone that knows what they are doing I believe they can b	jandrewrogers	9.317752	-5.1846166	comment	9.0	61.0	1693370410	7.8433084
37376943	SiFive’s P870 Takes RISC-V Further	SiFive’s P870 Takes RISC-V Further	zdw	9.384006	-5.661495	story	9.0	143.0	1693799233	-10.546008
24429569	Not sure if HN approves (it removes 	Not sure if HN approves (it removes emojies at least, this went fine it seems), but there are glyphs that look like the alphabet/normal letters, but are not really the same characters, like these: 𝒕𝒉𝒊𝒔, 𝖙𝖍𝖎𝖘, ⓣⓗⓘⓢ, 𝕥𝕙𝕚𝕤, ㄒ卄丨丂, ｲんﾉ丂, ꙅiʜƚ, 🅃🄷🄸🅂, sıɥʇ, 𝓉𝒽𝒾𝓈My guess is screen readers can have trouble telling what it really says.	matsemann	9.85685	-6.253226	comment	9.0	44.0	1599720218	13.018126
24440459	People who chose it over the default	People who chose it over the default CLI, please give a few examples of why and how. I forced myself to only use magit for a week and it did not work for me, CLI is still faster and more flexible. Maybe a week is not enough time, maybe I'm missing something.	trabant00	8.753967	-6.4371605	comment	9.0	27.0	1599814080	-9.674757
24475599	New T4g EC2 Instances, Powered by AW	New T4g EC2 Instances, Powered by AWS Graviton2	vcz_fr	9.501674	-5.2469034	story	9.0	106.0	1600120609	-8.347658
24959658	The lack of condition codes is a big	The lack of condition codes is a big deal for anyone relying on overflow checked arithmetic, like modern safe languages that do this for all integer math by default, or dynamic languages where it’s necessary for the JIT to speculate that the dynamic “number” type (which in those languages is either like a double or like a bigint semantically) is being used as an integer.RISC-V means three instructions instead of two in the best case. It requires five or more instead of two in bad cases. That’s extremely annoying since these code sequences will be emitted frequently if that’s how all math in the language works.Also worth noting, since this always comes up, that these things are super hard for a compiler to optimize away. JSC tries very aggressively but only succeeds a minority of the time (	pizlonator	9.560129	-5.8498454	comment	9.0	136.0	1604240779	-10.525138
25015146	I am wondering if we are not pushing	"I am wondering if we are not pushing too far the core count.Do we need all those cores in a single machine? Do we know how to use them? Beside some scientific workload, how are they used?I guess the standard answer is virtualized them and sell them in chunk as ""cloud"" but then why prices are still so high?I am not complaining, I just feel that something is off, and I don't understand what it is."	siscia	9.559523	-5.3056397	comment	9.0	28.0	1604758102	7.8032937
25074278	This link is a little confusing beca	This link is a little confusing because the top comment and much of the conversation is talking about the DTK which was based on the much older A12X CPU and not the M1.As far as I can tell, the M1 does have virtualization support, Docker just isn't ported yet.Update: Also, from Apple docs it seems like you won't be able to run emulation and virtualization in the same process. So you can run x86 Mac apps, but it's likely x86 Docker images will be out-of-reach.	ogre_codes	9.5808935	-6.3331866	comment	9.0	92.0	1605211823	10.041569
25093933	Reverse-engineering the classic MK41	Reverse-engineering the classic MK4116 16-kilobit DRAM chip	picture	9.618514	-5.191308	story	9.0	85.0	1605375744	7.980413
25105678	One Bit Ferrite Core Memory	One Bit Ferrite Core Memory	accrual	9.869501	-5.29385	story	9.0	49.0	1605480194	8.091677
25115916	Reverse engineering a forgotten 1970	Reverse engineering a forgotten 1970s Intel dual core beast: 8271, a new ISA	scarybeast	9.571253	-5.341644	story	9.0	169.0	1605554942	-7.1502333
25287314	64-bit RISC-V core claims 10x better	64-bit RISC-V core claims 10x better CoreMarks/Watt compared to other 3-5GHz CPU	vanburen	9.435894	-5.642157	story	9.0	68.0	1606988851	-10.543282
38639621	Multiple microprocessors as a single	Multiple microprocessors as a single CPU (not multiprocessing)	JPLeRouzic	9.648741	-5.390341	story	9.0	60.0	1702547695	8.105156
38826954	Emoji by Year	Emoji by Year	surprisetalk	9.799843	-6.26403	story	9.0	23.0	1704052258	-13.957161
38897406	I worked on port of a Konami game fr	"I worked on port of a Konami game from PSX to PC, that was 1999-2000 - the code (C) had lots of #ifdefs like where inline assembly was placed, and the original ""C"" code was kept. It seemed all done by one specific programmer, and what really saved us (in porting) the game was the originallly kept ""C"" code. My mips knowledge was never as good as x86.So yes, it was the norm back then. My second job (1998), was working on a team that was going to do some software for Intel for the upcoming back then Katmai processor (Pentium I was it). It had all the new fancy SIMD instructions. The software was supposed to be something like media composer - you slap images, rotate them, etc all in realtime using software rendering (GPUs were still relatively expensive).I wrote a bilinear and bicubic texture "	malkia	9.712856	-5.572167	comment	9.0	54.0	1704590577	7.796814
32674040	Filtering a vector with SIMD instruc	Filtering a vector with SIMD instructions (AVX-2 and AVX-512)	francoismassot	9.785186	-6.0622144	story	9.0	104.0	1662024670	-10.312167
32965850	One of the interesting things about 	"One of the interesting things about the ARM instruction set (at least in the Acorn era - not sure if this is still true of more recent ARM iterations) is that ALL instructions, not just branch, were conditional, which meant that you could avoid the need for branch instructions in some cases - rather than conditionally branch past some instructions, just make them conditional and ""execute"" them regardless. Smaller code and faster execution!The article cites Hermann pushing IBM's RISC approach, but as I recall (I worked at Acorn at the time) the inherently RISC-like simplicity of the 6502 that Acorn was using was itself part of the inspiration."	HarHarVeryFunny	9.536096	-5.6622114	comment	9.0	42.0	1664047953	-10.511481
32968532	Is there any advantage to running an	Is there any advantage to running an ARM instance in the cloud, as opposed to a x64 one?	perryizgr8	9.654894	-5.19996	comment	9.0	31.0	1664074279	-7.710781
31943856	Why is HN obsessed with reinventing 	"Why is HN obsessed with reinventing the wheel with the new shiny (Rust, Risc-V, etc.) for applications that are perfectly served by mature, battle proven solutions which provide a reliable, cheap and quick time to market.AVR is today a pretty niche solution, but for it's niche it's better than Risc-V for its mature silicon and tooling, robust analog and digital 5V tolerant I/O, robust CPU and peripheral clocking, cycle accurate simulators, and experienced dev pool.The over 20 year old gas boiler my grandma has, is ""powered"" by an DIP packaged AVR chip and does the job just fine for controlling a couple of valves, LEDs, relays, and a PID loop. Same for the old elevator on my university. These kinds of apps is where the simplicity of AVR shines.Source: former AVR dev"	ChuckNorris89	9.441557	-5.500615	comment	9.0	80.0	1656664671	-4.713041
32414165	Intel iAPX 432	Intel iAPX 432	sebastianconcpt	9.414506	-5.2267995	story	9.0	52.0	1660147083	7.706659
22148028	(I work for AWS.  Opinions are my ow	(I work for AWS.  Opinions are my own and not necessarily those of my employer.)I've been doing some initial M6g tests in my lab, and while I'm not able to disclose benchmarks, I can say that my real-world experience so far reflects what's been claimed elsewhere.Graviton2 is going to be a game changer.  It's not like the usual experience with ARM where you have to trade off performance for price, and decide whether migrating is worth the recompilation effort. In my lab, performance of the workloads I've tried so far is uniformly better than on the equivalent M5 configuration running on the Intel processor.  You're not sacrificing anything by running on Graviton2.If your workloads are based on scripting languages, Java, or Go, or you can recompile your C/C++ code, you're going to want to us	otterley	9.517673	-5.2229867	comment	9.0	67.0	1579979876	-8.262078
23419430	Lattice FPGA adds 'no reversing' cla	Lattice FPGA adds 'no reversing' clause for SDK built on reversed bitstreams	paulgerhardt	9.0858345	-5.3945527	story	10.0	94.0	1591292153	8.534226
23468370	Don't get me wrong. I love the poten	Don't get me wrong. I love the potential native performance gains from this transition, but I can't help but just be a tiny bit scared for the future of my day to day work.For better or for worse, my company uses Docker for Mac for the vast majority of the stack that I don't work on but need to actively develop. I'm already paying a huge VM cost and it's pretty terrible. I don't see Apple working on any kind of native containerization solution. Does that mean that I'm going to be eating the current VM cost + x86_64 virtualization cost in the future?I really want to keep using macOS as a platform. I know I can just stay on the hardware I have, but it's not really practical to be on an end of life architecture. It seems just a tad shortsighted to ditch x86_64 when a lot of people depend on i	Shank	9.608351	-6.207306	comment	10.0	40.0	1591722031	10.046085
23862419	>Combined with die stacking, which a	>Combined with die stacking, which allows for up to 8 dies to be stacked as a single chip, then a 40 element LRDIMM can reach an effective memory capacity of 2TB. Or for the more humble unbuffered DIMM, this would mean we’ll eventually see DIMM capacities reach 128GB for your typical dual rank configuration.So on 8 Channel 16 DIMM per socket you could fit a theoretical 32TB of memory. This is insane amount of memory and great for In-Memory Database. ( How is Intel Optane going to compete? )This makes me wonder, what makes DRAM so expensive? It is still hovering at a median price or around $3/GB compared to NAND which is less than $0.1/GB.	ksec	9.743658	-5.2230406	comment	10.0	81.0	1594925433	7.9638257
23870240	Improving Performance of PHP for Arm	Improving Performance of PHP for Arm64 and Impact on Amazon EC2 M6g Instances	zdw	9.638762	-5.1949086	story	10.0	106.0	1594992634	-7.781654
23882564	The Intel 8086 processor's registers	The Intel 8086 processor's registers: from chip to transistors	chmaynard	9.639858	-5.406786	story	10.0	148.0	1595090159	-7.481399
24252737	Build Your Own FPGA (2012)	Build Your Own FPGA (2012)	hinzundcode	9.101368	-5.3187785	story	10.0	216.0	1598198082	8.332983
24383648	8086 Microcode Disassembled	8086 Microcode Disassembled	matt_d	9.689367	-5.5491314	story	10.0	233.0	1599315024	-7.4509006
20525142	LinuxWorld 1999, Torvalds and Stallm	LinuxWorld 1999, Torvalds and Stallman [video]	solarized	9.4111395	-5.819636	story	10.0	53.0	1564060987	-8.210066
20630489	Side channel that leaked data from I	Side channel that leaked data from Intel CPUs patched by silent Windows update	headalgorithm	9.572117	-5.3736978	story	10.0	139.0	1565132143	7.7654686
20837470	Sipeed Longan Nano – RISC-V Developm	Sipeed Longan Nano – RISC-V Development Board	childintime	9.382256	-5.676314	story	10.0	110.0	1567163352	-10.56856
14211473	Full-stack dev here with almost no r	Full-stack dev here with almost no real hardware knowledge.Why would you want to use ARM instead of X86 on a server like this?  The architecture​ switch comes with dependency headaches -- what counterbalances those to make it worth it?	unit91	9.617014	-5.244211	comment	10.0	37.0	1493301594	-7.7650175
14298715	The Configuration Complexity Clock	The Configuration Complexity Clock	henrik_w	9.841753	-5.240661	story	10.0	67.0	1494322995	2.1517608
14477867	Users report parallel compiling is c	Users report parallel compiling is causing segfault on Ryzen Linux	rnhmjoj	9.367286	-5.2502775	story	10.0	116.0	1496516337	7.866753
30935683	MIPS provides highly scalable RISC p	MIPS provides highly scalable RISC processor IP	kristianpaul	9.419532	-5.64258	story	10.0	57.0	1649269466	-10.490361
31078969	The x86 architecture is the weirdo (	The x86 architecture is the weirdo (2004)	signa11	9.759756	-5.4558234	story	10.0	122.0	1650332735	-7.7380457
31079832	Let's see how things have changed si	Let's see how things have changed since 2004 when this was published:> The x86 has a small number (8) of general-purpose registersx86-64 added more general-purpose registers.> The x86 uses the stack to pass function parameters; the others use registers.OS vendors switched to registers for x86-64.> The x86 forgives access to unaligned data, silently fixing up the misalignment.Now ubiquitous on application processors.> The x86 has variable-sized instructions. The others use fixed-sized instructions.ARM introduced Thumb-2, with a mix of 2-byte and 4-byte instructions, in 2003.  PowerPC and RISC-V also added some form of variable-length instruction support.  On the other hand, ARM turned around and dropped variable-length instructions with its 64-bit architecture released in 2011.> The x86 has	comex	9.719621	-5.7159133	comment	10.0	63.0	1650343606	-7.9386673
31434420	Why is AMD so important to you? Are 	Why is AMD so important to you? Are there any instruction set extensions these days that are only available on AMD? I can only think of things that are the other way around - only on Intel. And if you need something niche like some SIMD extension I guess you're running a server not a laptop?	chrisseaton	9.271393	-5.1854706	comment	10.0	54.0	1652967151	7.847791
31475575	The Apple M1, ARM/x86 Linux Virtuali	The Apple M1, ARM/x86 Linux Virtualization, and Boinc (2021)	behnamoh	9.935818	-5.23958	story	10.0	98.0	1653283449	-8.016247
31699742	I got an M1 MacBook Pro from work la	"I got an M1 MacBook Pro from work last year, and expecting to pay the price for being an early adopter, I set up my previous Intel-based MBP nearby in case I ran into any problems or needed to run one of my existing virtual machines. (I do varied development projects ranging from compiling kernels to building web frontends.)In reality I have hardly turned on the Intel MBP at all since I got it. At all.Docker and VMware Fusion both have Apple Silicon support, and even in ""tech preview"" status they are both rock solid. Docker gets kudos for supporting emulated x86 containers, though I rarely use them.I was able to easily rebuild almost all of my virtual machines; thanks to the Raspberry Pi, almost all of the packages I use were already available for arm64, though Ubuntu 16.04 was a little ch"	rgovostes	9.578123	-6.3333774	comment	10.0	41.0	1654897792	10.03289
25759576	The J1 Forth CPU	The J1 Forth CPU	Cieplak	9.586742	-5.3014636	story	10.0	214.0	1610526565	-7.4908137
25804688	In my opinion I think everyone who c	"In my opinion I think everyone who considers themselves a ""software engineer"" should be required to build a computer out of discrete logic. Of course these days doing that with an FPGA would count too, assuming you don't use too many pre-canned IP blocks[1]. My reasoning here is that understanding a computer at this level really helps understand programming, and perhaps more importantly the translation between what you want a program to do and how the computer would actually do it.That said, some nits on the author's description, what he calls ""micro code"" are simply instructions. When you look at computer architecture texts you will see that architectures that implement instructions with logic are ""non-microcoded"" and architectures that implement instructions of one width as a sequence of"	ChuckMcM	9.488469	-5.4559317	comment	10.0	47.0	1610825157	7.7769628
25992663	Itanium: Mark Architecture as Orphan	Itanium: Mark Architecture as Orphaned	cglong	9.539859	-5.5023537	story	10.0	88.0	1612208185	-7.74384
26132726	Nyuzi – An Experimental Open-Source 	Nyuzi – An Experimental Open-Source FPGA GPGPU Processor	peter_d_sherman	9.052188	-5.2420306	story	10.0	165.0	1613313460	-10.4949875
26139611	Is Your Linux Version Hiding Interru	Is Your Linux Version Hiding Interrupt CPU Usage from You?	tanelpoder	9.802749	-5.46484	story	10.0	133.0	1613369096	7.9042106
26164574	Designing a RISC-V CPU, Part 1: Lear	Designing a RISC-V CPU, Part 1: Learning hardware design as a software engineer	lochsh	9.42875	-5.6540728	story	10.0	150.0	1613555129	-10.563774
26343023	I've been looking for an alternative	I've been looking for an alternative hardware description language to Verilog/SystemVerilog because they're not very readable languages. But after skimming this source code, my initial thought is that I hope Haskell doesn't take off. This is extremely difficult to read.Maybe I just don't know Haskell well enough, though.	seanmclo	9.176579	-5.5578933	comment	10.0	38.0	1614868976	8.487569
26423603	The customer's words echoed in his m	The customer's words echoed in his mind. 'robert at lightbulb emoji dot kz, but with a real lightbulb emoji.' The clerk had registered thousands, maybe tens of thousands of e-mails into the Nordstrom Rack Nordy Rewards program, and he had seen it all, but this, this was something entirely new. This wasn't the single letter username or the overly sexual address or the gmail address with the plus sign, all mildly interesting but within the bounds of what was possible. What was normal. What was sane. This was something entirely new. The point of sale workstation has no key for the lightbulb emoji. This was the predicament. But if an emoji can be an e-mail address, maybe some other part of the computer can be a keyboard. Maybe the floor can be a table. Maybe hands can be screwdrivers. The cler	jefe_	9.792261	-6.263657	comment	10.0	184.0	1615468417	-13.958034
26423870	"By the way, we already have an ""emoj"	"By the way, we already have an ""emoji button"" on our keyboards: on Windows, it's the Win+. keystroke. Try it if your Windows 10 is updated enough."	kozak	9.81783	-6.261747	comment	10.0	79.0	1615470006	-13.951329
35620918	Silly question: how can a GPU be RIS	"Silly question: how can a GPU be RISC-V? Isn't RISC-V a normal ""scalar"" ISA with some moderate vector extensions at best?"	nine_k	9.370026	-5.649296	comment	10.0	41.0	1681855096	-10.556777
35805629	Sadly the article doesn't go into de	Sadly the article doesn't go into details about how the programmable RAM is wired to the actual logic gates, which seems to me the most interesting and challenging part of designing an FPGA.In my mediocre understanding of digital circuits, RAM is usually addressable, so it has to be wired in a more direct manner to enable such a design.I posted this article because someone mentioned some Ryzen chip having an FPGA in another post, and I am now left wondering:1. why don't we have more user-programmable FPGAs in our fancy desktop mainboards2. is there a SoC board, ARM or RISC-V based, with an FPGA on board? The slower the CPU, the more useful an FPGA would be to accelerate compute tasks	sph	9.11815	-5.3633	comment	10.0	43.0	1683137167	8.252609
35991111	In fact the CPU stagnation is worse.	In fact the CPU stagnation is worse. In contrast to the shrinking chip size and higher frequencies of past scaling laws, CPU core count does not easily translate to performance gains. It needs specialized and careful designed software to tap the capability.In fact if CPU core count did translate more easily to performance gains I think already with the existing CPU's we'd have a fairly signficant one-time boost.Maybe somebody has statistical survey of how much of the existing deployed CPU core count is typically used?	nologic01	9.515425	-5.22323	comment	10.0	44.0	1684430064	7.8673396
36493821	AMD Introduces World’s Largest FPGA-	AMD Introduces World’s Largest FPGA-Based Adaptive SoC for Emulation	hasheddan	9.168564	-5.2450724	story	10.0	110.0	1687877840	8.241756
28767046	Nios V – Intel's RISC-V Processor	Nios V – Intel's RISC-V Processor	mepian	9.383058	-5.647331	story	10.0	219.0	1633476351	-10.568665
29114087	The Soviet 1801VM2 LSI-11 Processor	The Soviet 1801VM2 LSI-11 Processor	picture	9.535184	-5.215619	story	10.0	145.0	1636071858	-7.651066
29298315	What's your favorite weird CPU instr	What's your favorite weird CPU instruction? any architecture, any time period	mooreds	9.433468	-5.290282	story	10.0	22.0	1637518291	7.796568
29488325	Are there any open source powerful c	Are there any open source powerful code search engines out there? As a Googler the internal code search we have here is one of the most incredible things I've ever seen, it's so fast and powerful I'm amazed by it daily. Is there anything near that quality out there?	dvirsky	8.787848	-6.0159893	comment	10.0	43.0	1638987541	-11.271317
34241985	RISC vs. CISC: The Post-RISC Era (19	RISC vs. CISC: The Post-RISC Era (1999)	xeeeeeeeeeeenu	9.424443	-5.6974573	story	10.0	61.0	1672805780	-10.516982
34382767	Author here, if anyone has questions	Author here, if anyone has questions about the 8086.	kens	9.624103	-5.3995986	comment	10.0	49.0	1673721880	-7.5249825
34460576	For anyone wondering, this is basica	"For anyone wondering, this is basically a young millennial / gen z meme. The emoji is usually pronounced ""pwease"", as in a childlike pronunciation of ""please""Therefore the command is basically just asking very nicely, hoping to get one's wayedit. source: dude just trust me"	warent	9.814566	-6.2599826	comment	10.0	89.0	1674251880	-13.954718
34533752	How a CPU works: Bare metal C on my 	How a CPU works: Bare metal C on my RISC-V toy CPU	codepoet	9.398533	-5.6617403	story	10.0	269.0	1674750066	-10.624428
34565202	Entering and Running a Tiny Program 	Entering and Running a Tiny Program from the PDP-11 (PiDP-11) Front Panel	zdw	9.829653	-5.4257755	story	10.0	50.0	1674969645	-7.5160565
34579473	On “I don't trust microcode” (2021)	On “I don't trust microcode” (2021)	ignoramous	9.651294	-5.3573112	story	10.0	75.0	1675086346	7.7127767
34663986	i'm millenial/gen-x cusp, and they a	i'm millenial/gen-x cusp, and they all seemed pretty reasonable and intuitive to me, EXCEPT number 3 -- a good-old fashioned simple smiley is passive-aggressive and cold to gen-z??	dilap	9.8054905	-6.2480564	comment	10.0	35.0	1675596401	-13.950006
34806313	Linux Looks to Retire Itanium/IA64 S	Linux Looks to Retire Itanium/IA64 Support	mfiguiere	9.52275	-5.4701133	story	10.0	66.0	1676479045	-7.7855315
34979967	As an outsider from the hardware wor	As an outsider from the hardware world, I find it astounding that it's possible to fix the behaviour a CPU instruction by changing code. (assuming I understand correctly)In my mind a CPU instruction is hardwired on the chip, and it blows my mind that we keep finding workarounds to already released hardware.Maybe someone could dumb that down for me?	alex_duf	9.648305	-5.4912434	comment	10.0	47.0	1677658771	7.758801
36849914	This is super cool. This exploit wil	"This is super cool. This exploit will be one of the canonical examples that just running something in a VM does not mean it's safe. We've always known about VM breakout, but this is a no-breakout massive exploit that is simple to execute and gives big payoffs.Remember: just because this one bug gets fixed in microcode doesn't mean there's not another one of these waiting to be discovered. Many (most?) 0-days are known about by black-hats-for-hire well before they're made public.CPU vulnerabilities found in the past few years:  https://en.wikipedia.org/wiki/Meltdown_(security_vulnerability)
  https://en.wikipedia.org/wiki/Spectre_(security_vulnerability)
  https://aepicleak.com/
  https://en.wikipedia.org/wiki/Software_Guard_Extensions#SGAxe
  https://en.wikipedia.org/wiki/Software_Guard_Ex"	0xbadcafebee	9.730707	-5.5006123	comment	10.0	121.0	1690213842	7.8351393
36875816	How MOS 6502 illegal opcodes work	How MOS 6502 illegal opcodes work	hasheddan	9.774924	-5.6111608	story	10.0	156.0	1690370347	-7.511398
36884050	Speculative execution, despite whate	Speculative execution, despite whatever flaws, brings a style of optimization that you simply cannot substitute with any other. Conceptually, the ability to continuously time travel into the future and bring information back is a pretty insane form of optimization. The fact that this also prefetches memory for us is amazing, except in some unhappy adverse contexts. Perhaps we should just pause there for a moment and reflect...Imagine being able to simultaneously visit 4 retail stores and dynamically select items depending on availability and pricing, arriving back home having spent the amount of time it takes to shop at 1.25 stores while burning 1.5x the fuel of a one-store trip.There is no amount of ISA redesign or recompilation that can accommodate the dynamics of real-world trends in th	bob1029	9.681169	-5.6500154	comment	10.0	43.0	1690401641	-6.6678543
36944347	When I think about how long chips li	When I think about how long chips like the 6502 have still been in active use (almost 50 years now), it is hard to conceive of a world where there isn't a significant presence of x86 activity for the rest of my life.The majority of 'the market' may go elsewhere, but for a gazillion reasons, x86 will not be disappearing for quite a while.  At this point it would honestly surprise me if we didn't at least have high quality emulation available until the end of the human race as we know it.Sure, we've probably lost most of the software ever written on it, but a whole lot of interesting artifacts from a key transition point for our species still remain locked up in this architecture.	slfnflctd	9.606417	-5.2007823	comment	10.0	59.0	1690818147	-7.74641
37115614	Emulating x86 on X64 on Aarch64	Emulating x86 on X64 on Aarch64	zdw	9.747143	-5.350595	story	10.0	135.0	1691968805	-7.743093
37297792	Sipeed unveils RISC-V tablet, portab	Sipeed unveils RISC-V tablet, portable Linux console, and cluster	shallow-mind	9.399708	-5.6538095	story	10.0	54.0	1693244665	-10.583134
37509791	Technical question: why do people ne	"Technical question: why do people need ARM licenses? Surely you don't need anything from them to design a chip from scratch that implements the same instruction set, as Cyrix and AMD famously did to the ia32.Are the licensees using parts of the actual chip design?  Are their own designs too far down the ""derivative work"" rabbit hole due to not being cleanroomed that they have no hope of ever not licensing?What are the specifics?"	sneak	9.509866	-5.1927037	comment	10.0	38.0	1694703038	-7.533813
24602264	RISC-V: What’s Missing and Who’s Com	RISC-V: What’s Missing and Who’s Competing	SemiTom	9.363852	-5.7108455	story	10.0	186.0	1601155496	-10.588805
24700987	I actually tried really hard to get 	I actually tried really hard to get RAM to corrupt a bit for a school project and didn't manage a single bit flip.How often have you actually heard of data corruption due to non-ECC memory? Either yourself, any degree of 'friend of a friend', or perhaps a study that looked into the matter with more success than I had. I don't mean a newspaper story because exceptional cases are reported because they're rare exceptions rather than common enough that we'd be likely to come across it in our lifetimes.	lucb1e	9.699753	-5.562185	comment	10.0	38.0	1602009827	8.197623
25262834	Micro Magic RISC-V Core Claims to Be	Micro Magic RISC-V Core Claims to Beat Apple M1 and Arm Cortex-A9	01100011	9.434031	-5.395005	story	10.0	49.0	1606802835	-10.551181
25322593	IceStick Tutorial: experience FPGA d	IceStick Tutorial: experience FPGA design and RISC-V using $40 FPGA device	homarp	9.350541	-5.5763273	story	10.0	119.0	1607250945	8.349263
38843675	A Simulated Annealing FPGA Placer	A Simulated Annealing FPGA Placer	stefanpie	9.094114	-5.34099	story	10.0	103.0	1704213990	8.387055
38903856	"I had to chuckle when the OP said ""a"	"I had to chuckle when the OP said ""and 151 instructions.""   The VAX was the poster-child of CISC.   Thats like, what, 20% of the instructions ARM has for SIMD alone?Recently, I had to learn C++17 through 20.  At the same time I was learning x86 assembly, and x86 assembly was far, far easier. Downright simple and straightforward in comparison.Aren't high-level languages supposed to make our lives easier?   Isn't RISC supposed to make CPU's simpler?   What happened to our world?"	rhelz	9.561553	-5.7322674	comment	10.0	61.0	1704652806	-10.468064
38994335	This was posted before and I still h	This was posted before and I still have no idea what the rationale is. No desktop PC or game console is RISC-V, so if I'm going to all the trouble to use a scripting solution that requires me to compile my scripts to machine language, why would I target RISC-V? Why wouldn't I just compile to x86-64 directly?Like, what is the vision here, a LuaJIT that targets RISC-V, running inside my x86-64 game, where the emulator translates the RISC-V back into x86-64... for reasons? Just isolation?	dataangel	9.445321	-5.6784215	comment	10.0	53.0	1705265566	-10.521799
32605361	Why Xen Wasn't Hit by RETBleed on In	Why Xen Wasn't Hit by RETBleed on Intel CPUs	plam503711	9.504345	-5.311441	story	10.0	130.0	1661508360	7.797978
32689261	Anybody who did PS1 dev back in the 	Anybody who did PS1 dev back in the day will have had to do some crazy hacking stuff to get performance or memory.  The first project [1] I worked on I had a C version of my graphics engine and animation system, and in parallel I'd have a MIPS assembly version which was super optimised (the C version was effectively a reference).I made the whole engine and animation system fit in 4K so it would fit into the instruction cache of the CPU.  The whole frame update cycle wouldn't need to touch main memory (for the code).Also, because loading from main memory was slow (4 cycles) and the chip was RISC (1 operation per cycle), you'd need 3 NOPs after the Load-op for the register to be loaded. The C compiler (if I remember right) never really filled those 3 NOPs with useful stuff.  So, I'd do hand 	louthy	9.727815	-5.658001	comment	10.0	75.0	1662117271	-0.9702344
32818187	Startup founders should be explicitl	"Startup founders should be explicitly telling their developers to not write tests, not use CI/CD, not use feature branches.All that stuff can come after you have proven your software makes money / users want to use it.Just get the damn thing written in the quickest, most crappy way necessary for speed.The code doesn't need to be organised well.  It doesn't need to be documented.The only thing that matters is to do your best to avoid security holes.No tests.  Stop testing, apart from manual runthroughs that the CEO can do in between trying to raise funding.My eyes roll when I hear of startups creating ""good processes"" for development at any level, let alone CI/CD and tests."	andrewstuart	9.404305	-6.384612	comment	10.0	54.0	1663022609	1.5978202
31813227	It will be interesting if LMG can pu	It will be interesting if LMG can pull off what Linus is aiming for with the massive investment in a laboratory environment. There are huge parts of the tech market where the most critical reviewing you can find is anecdotal accounts of if the reviewer liked a product or not (or the more clinical reviews are drowned out by the anecdotal noise).	mrkwse	9.311549	-5.759457	comment	10.0	168.0	1655747067	4.1507463
32053592	The Problem with RISC-V V Mask Bits	The Problem with RISC-V V Mask Bits	ibobev	9.443752	-5.7343736	story	10.0	92.0	1657527869	-10.546491
39430678	AMD Zen 5 CPUs Reportedly Made on TS	AMD Zen 5 CPUs Reportedly Made on TSMC's 3nm Process, Mass Production in Q3	mfiguiere	9.229018	-5.196858	story	10.0	126.0	1708355919	7.8436823
39631190	The Race to 2nm: RISC-V Chips in Jap	The Race to 2nm: RISC-V Chips in Japan – By Dr. Ian Cutress	rbanffy	9.367132	-5.652604	story	10.0	87.0	1709830108	-10.585689
32302207	I've done a fair amount of hobbiest 	I've done a fair amount of hobbiest microcontroller work, I'm comfortable with asm and c for low level systems stuff with 8 bit micros, etc...How hard is it to get into FPGA development with that sort of background? Starting from barely knowing how to spell FPGA?	claytongulick	9.074568	-5.361009	comment	10.0	33.0	1659329595	8.410158
32472879	I'd forgotten about the 80376 but it	"I'd forgotten about the 80376 but it hits at a question I've occasionally had over the last few years. Why have we not seen a ""modernized"" x86 CPU that strips out everything pre-AMD64? The answer seems likely to be one or both of:1. There are more users of legacy modes than is obvious to us on HN.2. The gains in terms of gate lost, critical paths reduced, lower power consumption just don't amount to much.My guess is that #2 is the dominant factor. If there were actually significant gains to be had on a ""clean""(er) x86 design, we'd see it in the market regardless of #1."	allenrb	9.595003	-5.2298436	comment	10.0	92.0	1660585556	-7.7485814
22248456	End-of-Life Announcement for CoreOS 	End-of-Life Announcement for CoreOS Container Linux	thebeardisred	9.77867	-6.096389	story	10.0	180.0	1580920872	-9.201094
19165005	"Hah!EEtimes 2002 ""Infiniband on the "	"Hah!EEtimes 2002 ""Infiniband on the Verge of Broad Adoption"" whoops :-)But more seriously, I think having a license free CPU core with software support is a huge win, it will enable people like TSMC and GF to make 'jelly bean' CPUs that  can be low cost and high volume. But they won't be that much different than the low end ARM cpus which are basically the cost of packaging these days anyway.The market forces in a 14nm (last year's process node) world are pretty interesting. 90% of the cost is the dicing, testing, and packaging the parts.So the other market force is the Western Digitals of the world who will make RISC-V embedded SOCs with exactly the right set of peripherals they need to make a billion disk drive motor controllers. But most people won't see those chips in the marketplace. "	ChuckMcM	9.409039	-5.3813076	comment	10.0	90.0	1550172270	-10.528499
19164491	RISC-V on the Verge of Broad Adoptio	RISC-V on the Verge of Broad Adoption	childintime	9.379177	-5.698812	story	10.0	303.0	1550169351	-10.584635
19559970	25 Years Later: Interview with Linus	25 Years Later: Interview with Linus Torvalds	axiomdata316	9.28866	-5.8803115	story	10.0	304.0	1554253276	-8.113841
19593497	HermiTux: A Binary-Compatible Uniker	HermiTux: A Binary-Compatible Unikernel	externalreality	9.929207	-6.2223816	story	10.0	145.0	1554590777	-12.363177
19680975	The spirit is there definitely.My ta	The spirit is there definitely.My take is that it's only a matter of time before emojis creep into every area where text is used.Let's hope they won't ever become a mainstream part of programming languages.	Tade0	9.811201	-6.261925	comment	10.0	45.0	1555492727	-13.958982
19848953	Some AMD CPU's RDRAND might not retu	Some AMD CPU's RDRAND might not return random data after a suspend/resume	Aissen	9.458967	-5.232073	story	10.0	121.0	1557234146	7.9473085
19913330	What is the recommended course of ac	What is the recommended course of action? Stop buying Intel products, and devices which contain them?What about devices with older processors? I'm still running a Sandy Bridge rig and it works fine, except for the side channel vulnerablities. It's probably not going to be patched. I also have a cheaper computer with a Skylake processor, which is newer yet still vulnerable!It's only a matter of time until something really nasty comes along, making all these PCs dangerous to use. What then? Lawsuits?My questions are only partially rhetorical.	Fej	9.428597	-5.1985188	comment	10.0	100.0	1557864189	7.77908
19966457	Intel Performance Hit 5x Harder Than	Intel Performance Hit 5x Harder Than AMD After Spectre, Meltdown Patches	mepian	9.46591	-5.403474	story	10.0	319.0	1558396455	7.8140965
16066391	Papers describing each attack:https:	"Papers describing each attack:https://meltdownattack.com/meltdown.pdfhttps://spectreattack.com/spectre.pdfFrom the spectre paper:>As  a  proof-of-concept,   JavaScript  code  was  written
that,  when  run  in  the  Google  Chrome  browser,  allows
JavaScript  to  read  private  memory  from  the  process
in  which  it  runs  (cf.  Listing  2).Scary stuff."	jotux	9.766324	-5.614447	comment	10.0	149.0	1515021253	7.5073924
16071304	It's not everyday that a security is	It's not everyday that a security issue is borne out of a side-effect of underlying theory; in this case, how out-of-order execution works. It's almost as bad as if someone proved P = NP, rendering all cryptography useless on the spot.The game is changed forever, and CPU designers across the industry will likely have to can some or all of OoOE, setting performance back considerably. It can take years to reachieve performance we're used to today at the security level required.	ashleyn	9.63233	-5.2706814	comment	10.0	69.0	1515081480	-6.7190676
16071087	CPU hardware vulnerable to side-chan	CPU hardware vulnerable to side-channel attacks	contrarian_	9.759038	-5.5439506	story	10.0	139.0	1515080297	-5.714722
16081602	This is all getting rather silly, ri	This is all getting rather silly, right? I was the first one to mock Richard Stallman for being too radical, dramatic and paranoid but I can now confirm he wasn't. Every word he said in last 15 or so years is true.This all simply makes all our IT related work just kids playing make-pretend security.I am literally trying to figure out what other processors exist that can be used in everyday BSD/Linux work. Sparc? Some ARM branch? Any suggestions welcome.	binaryapparatus	9.448066	-5.188692	comment	10.0	72.0	1515186127	7.7809186
16079910	Intel Analysis of Speculative Execut	Intel Analysis of Speculative Execution Side Channels [pdf]	bcantrill	9.708605	-5.6326895	story	10.0	380.0	1515172704	-6.4787884
16105245	TempleOS has no process isolation, s	TempleOS has no process isolation, so it's completely unaffected by Spectre and Meltdown. I'm starting to think there's a lot of wisdom in its design. Complexity of modern computer systems keeps increasing but the value I get from that complexity isn't increasing nearly as fast. Spectre and Meltdown are just recent examples of some of the cost of that complexity. Do we really need an OS too complex for any one person to completely understand?	mrob	9.634696	-5.5174556	comment	10.0	51.0	1515496726	-10.677975
16164617	Long-Term Consequences of Spectre an	Long-Term Consequences of Spectre and Its Mitigations	sankha93	9.651957	-5.5859113	story	10.0	136.0	1516151682	7.7530484
16202390	I think we should count ourselves lu	I think we should count ourselves lucky we have someone so good at spotting bullsh*t like this - and isn’t afraid to call it out as they sees it.Intel & friends have absolutely disgusted me lately, it could be all to easy to settle for less based on their standards, but let’s not let them set the standard - they’ve shown they can’t be trusted with quality and when they fail - they can’t be trusted to be transparent or even take ownership of the problems they create.	mrmondo	9.334838	-5.194387	comment	10.0	227.0	1516603921	7.7535095
16202882	Big simplification:Proper way to fix	"Big simplification:Proper way to fix an hardware bug like this, is that newer cpu gets protected by default, and they answer they are when queried.So you can ask the CPU ""what's your status on bug X"" and the cpu answers ""i'm good, you don't need to do anything"" (newer fixed chips), or ""i know about it but was already built, and need microcode update/special behavior to protect myself"" (current chips with microcode update), ""no answer / I'm not good"" (old chips without update).So new stuff is protected, and you add more protection (and slowdowns, and special stuff) for older chips that don't know how to deal with it.What Intel is trying to do here, is to go the other way: the chips, even the new ones, will stay vulnerable by default, and when queried they say ""I have a fix but I don't use i"	nolok	9.524079	-5.341537	comment	10.0	54.0	1516610617	7.763548
16203059	Being able to call out bullshit does	"Being able to call out bullshit doesn't mean having to curse it out. All Linus needs to do is say something like ""I don't understand why this is here, and I'm not merging it until I do"", rather than ""They do literally insane things. They do things that do not make sense"". The latter is not a technical argument, and it doesn't provide accuracy or clarity about next steps.""So somebody isn't telling the truth here. Somebody is pushing complete garbage for unclear reasons"" - maybe the patches are bad. Or maybe there is an undisclosed vulnerability (like https://skyfallattack.com/ ?) that needs this ""garbage"" to mitigate it, and no-one got Linus properly in the loop. If it's the latter, all this shouting and cursing about ""They do things that do not make sense"" has likely attracted the attentio"	ealexhudson	9.326456	-5.863484	comment	10.0	76.0	1516613090	4.2433295
16342665	Meltdown Initial Performance Regress	Meltdown Initial Performance Regressions	natbobc	9.559529	-5.466001	story	10.0	226.0	1518201210	7.761484
16394274	Intel hit with 32 lawsuits over secu	Intel hit with 32 lawsuits over security flaws	mozumder	9.417316	-5.2020817	story	10.0	238.0	1518804049	7.786339
16577591	> AMD is in the process of respondin	> AMD is in the process of responding to the claims, but was only given 24 hours of notice rather than the typical 90 days for standard vulnerability disclosure. No official reason was given for the shortened time.90 days is not a standard. Nothing was shortened. People are allowed to publish their research whenever they like. Vendor advance notification is optional.Full, immediate disclosure is responsible.	sneak	9.2641115	-5.19075	comment	10.0	42.0	1520960452	7.91609
16577746	Independent researchers don't owe AM	Independent researchers don't owe AMD a chance to address anything. They bought the chips on the open market where AMD makes them available, and then used their own time and materials to conduct their own research. Their work product is their own, and AMD has no claim to it.There are, as I see it, two rational, coherent ways to be outraged about this story:1. The vulnerabilities are fabricated and the report is fraudulent, in which case, by all means, slag the researchers.2. The vulnerabilities are real, in which case. AMD is an 11 billion dollar company that got outmaneuvered by what appears to be 4 dudes in a basement.	tptacek	9.2205925	-5.2084794	comment	10.0	92.0	1520961435	7.854676
17027489	I'm a PM and engineer at CoreOS/Red 	I'm a PM and engineer at CoreOS/Red Hat -- feel free to ask any questions and I'll do my best to answer.In the next few months, you should see an OpenShift that is built upon the same upgrade system as Tectonic which allows for more incremental buy-in to OpenShift PaaS functionality and a Linux distribution that leverages Ignition and immutability to provide the minimal environment needed to run Kubernetes/containers.My understanding is that Container Linux as is will be supported for years, but we will also be creating a new distro, RH CoreOS, that replaces the Gentoo build system with Fedora tooling. This shouldn't change much for users as they don't interact with the build system; they just consume the results of said system. I'd liken this scenario to the relationship between CentOS an	jzelinskie	9.801098	-6.061496	comment	10.0	66.0	1525841795	-13.383831
17095046	Intel Shows Xeon Scalable Gold 6138P	Intel Shows Xeon Scalable Gold 6138P with Integrated FPGA, Shipping to Vendors	dmmalam	9.213574	-5.238662	story	10.0	140.0	1526587407	7.925452
17150073	Intel Xeon processor with FPGA now s	Intel Xeon processor with FPGA now shipping	chclau	9.178039	-5.255482	story	10.0	172.0	1527213711	8.087061
17340472	I wonder if the history of x86 is ho	I wonder if the history of x86 is holding us back in a big way. It started out being close to the metal but now it's an abstraction that can mislead you if you think processors are literally working the way x86 assembly describes.And surely the whole spectre issue could be lessened if we could be less reliant on CPUs having to guess what to keep in cache, which code paths are most likely, etc?	ChrisSD	9.647011	-5.399869	comment	10.0	61.0	1529346364	-7.7017965
17350616	"So... they ""strongly suspect"" (but d"	"So... they ""strongly suspect"" (but don't know and haven't shown) there may be a Spectre-class bug enabled by current HT implementations and improving their scheduler is hard, so they'll pre-emptively disable HT outright on Intel CPUs now and others in the near future?I'm not an OpenBSD user (and glad for it, if this is anything to go by), but I'm curious - is this really how they operate, or does this decision stand out?"	keldaris	9.852512	-5.718671	comment	10.0	55.0	1529445517	10.639683
17532630	I would be terrified to ever try and	I would be terrified to ever try and contribute anything to Linux, lest Linus yell at me and call me stupid. Seems like he does that in every excerpt that gets posted here.	_bxg1	9.429563	-5.806007	comment	10.0	42.0	1531605734	4.2560935
17560983	> What kind of writing system allows	"> What kind of writing system allows people to change my words after I've written them?Any kind of writing system allows this. Translation changes the words, and can change meaning. People can mis-quote. And yes, over time, meanings of words change, as do the cultural contexts from which they came. None of this is unique to emojis.The truth is that all communication has at least two parties, and there is never a guarantee that the receiver will get the message as intended. Even if you do craft ""pixel-perfect"" emojis, people still can (and likely will) mis-understand the nuances of your intended message."	codingdave	9.779289	-6.263223	comment	10.0	51.0	1531939282	-13.990854
17767925	Inside the die of Intel's 8087 copro	Inside the die of Intel's 8087 coprocessor chip, root of modern floating point	ingve	9.627966	-5.5415535	story	10.0	226.0	1534354226	8.450437
21325916	Bipolar-Zener Combo Takes On CMOS	Bipolar-Zener Combo Takes On CMOS	baybal2	9.25111	-5.2077675	story	10.0	108.0	1571763345	7.8559933
21547850	NUVIA: New Server CPU Startup Going 	NUVIA: New Server CPU Startup Going After Intel and AMD	l31g	9.255962	-5.1901064	story	10.0	98.0	1573845650	7.8427534
21693797	Coming Soon – Graviton2-Powered Gene	Coming Soon – Graviton2-Powered General Purpose EC2 Instances	jedberg	9.529561	-5.2128944	story	10.0	132.0	1575390506	-8.326117
21732105	One Instruction Set Computer	One Instruction Set Computer	lelf	9.749166	-5.560144	story	10.0	54.0	1575747284	-7.508637
21732902	Reducing the Performance Gap of Inte	Reducing the Performance Gap of Intel's MKL on AMD Threadripper	smartmic	9.28233	-5.295782	story	10.0	222.0	1575756650	7.9630237
17911664	Can someone explain why someone woul	Can someone explain why someone would choose an FPGA over a standard microprocessor? What advantages could this UPDuino have over an Arduino? Also, how do ASIC's figure into this comparison?My understanding is that microprocessors excel at executing logic using an onboard general-purpose ALU sequentially and quickly.On the other hand, an FPGA excels at doing a specified task as the hardware (gates) are programmed/hooked up in a certain way to execute that one task.ASIC's are processors that are designed from the factory to execute a specific task (kind of like pre-programmed, non-reprogrammable FPGA's).Can someone please fill in the gaps please? I have a general idea, but I'm not sure I understand all the differences correctly.	yazan94	9.09222	-5.3368907	comment	10.0	44.0	1536086539	8.325639
18001787	He's not just stubborn, persistent, 	"He's not just stubborn, persistent, and unyielding: he's performatively so. In his most notorious attacks, he's clearly playing to an audience. That could be the problem. He clearly can separate the blunt stubbornness (""we do not break userland, period"") from the performative rudeness (""SHUT THE FUCK UP MAURO"").(I mean, to be clear: what the fuck do I know? I've never been in the position Linus is in.)"	tptacek	9.274717	-5.8922606	comment	10.0	73.0	1537139301	4.2928658
18083941	It's interesting that Torvalds descr	"It's interesting that Torvalds describes himself as ""not a people person"", when he's a gifted communicator who has been tremendously successful at managing the community around Linux over many years.  His current refinements are making a great thing even better."	rectang	9.401669	-5.8162675	comment	10.0	46.0	1538052775	-8.182944
18399143	Before sale to IBM for billions, Red	Before sale to IBM for billions, Red Hat started in cofounder's closet	goldminer88	9.919807	-5.4976025	story	10.0	121.0	1541599513	-9.479182
18654958	Pijul: distributed version control s	Pijul: distributed version control system based on a sound theory of patches	ingve	8.795492	-6.418696	story	10.0	69.0	1544532555	7.9583855
18848062	Best of Show: PDP-7 and PDP-11/40 em	Best of Show: PDP-7 and PDP-11/40 emulation	wscott	9.855907	-5.4509687	story	10.0	157.0	1546884776	-7.5211782
29885406	Minecraft mod that runs RISC-V Linux	Minecraft mod that runs RISC-V Linux	ToruiDev	9.404511	-5.6751456	story	10.0	100.0	1641861545	-10.56497
30653610	RISC-V asm instruction name madness	RISC-V asm instruction name madness	luu	9.4804945	-5.743812	story	10.0	69.0	1647110167	-10.538691
12633037	UC Berkeley's Lawyers Blocking RISC-	UC Berkeley's Lawyers Blocking RISC-V in GCC	mynameislegion	9.434304	-5.7426853	story	10.0	120.0	1475550035	-10.574281
12821019	Defending against Rowhammer in the L	Defending against Rowhammer in the Linux kernel	ldayley	9.614453	-5.6517873	story	10.0	118.0	1477691095	-13.890888
12341121	For those who haven't had the pleasu	"For those who haven't had the pleasure: developing on Tensilica Xtensa cores generally means living within 128-256KB of directly-accessible memory; a windowed register file that makes writing your own exception handlers ""interesting""; a 6-year-old GCC bolted to a proprietary backend; per-seat licensing fees to use the compiler; and a corporate owner that's only halfway interested in the ecosystem they now control.So yeah, kind of wishing it would just die and let ARM take over the embedded space."	ericseppanen	9.609044	-5.28138	comment	10.0	65.0	1471922049	-7.751446
12353540	"My question is if compilers use ""new"	"My question is if compilers use ""new"" x86 instructions, as then the program won't work at all on old systems.For example, if Intel decided today that CPUs need a new ""fast"" hashing opcode (I don't know if they actually do),  a compiler can't compiles to it, as programs won't work on older computers.Is it like the API cruft in Android, where ""new"" Lollipop APIs are introduced for 10 years from now, when no one uses any phones from before 2014?"	nixos	9.806381	-5.5965023	comment	10.0	50.0	1472058730	-7.6456833
12365558	Chinese Chipmaker Unveils 64-Core AR	Chinese Chipmaker Unveils 64-Core ARM Processor	jcbeard	9.640803	-5.2008996	story	10.0	113.0	1472212596	7.5963335
12489544	Experiments with disabling the ME on	Experiments with disabling the ME on Sandybridge x230	mmastrac	9.508979	-5.2357297	story	10.0	223.0	1473782725	7.773342
35294111	Explaining my fast 6502 code generat	Explaining my fast 6502 code generator	pubby	9.626958	-5.4371347	story	10.0	217.0	1679685484	-7.3548098
35428379	$70 RISC-V Computer from Pine64 Goes	$70 RISC-V Computer from Pine64 Goes on Sale April 4 – OMG Linux	rbanffy	9.389678	-5.4990125	story	10.0	68.0	1680544464	-9.654142
35442642	The microcode and hardware in the 80	The microcode and hardware in the 8086 processor that perform string operations	picture	9.635651	-5.465229	story	10.0	165.0	1680627501	-7.469547
35472750	A radiation hard RISC-V microprocess	A radiation hard RISC-V microprocessor for high-energy physics applications	PaulHoule	9.385409	-5.6437817	story	10.0	111.0	1680807270	-10.560469
28005652	People let their (understandable) ha	People let their (understandable) hatred of Intel-the-company colour their technical judgement. Itanium was one of the more interesting architectures of its time, it fairly flew on expert-tuned assembly; I still believe we'll see a return to its ideas once the computing world finally moves on from C.(Netburst is also unfairly maligned if you ask me; contrary to the article, enthusiasts have clocked those P4s up to 12GHz. As far as I know they're still, over a decade later, the fastest CPU for single-threaded sequential integer workloads that has ever been made; certainly the fastest x86-compatible processor for such. They're kind of the equal and opposite failure to the Itanium, ironically enough)	lmm	9.514632	-5.486993	comment	10.0	74.0	1627632638	-7.723896
28263689	Intel’s Thread Director: Assisting t	Intel’s Thread Director: Assisting the OS to make task placement decisions	fork-bomber	9.713892	-5.49534	story	10.0	103.0	1629618936	8.363257
22456702	Why Cloudflare Chose AMD EPYC for Ge	Why Cloudflare Chose AMD EPYC for Gen X Servers	jgrahamc	9.3242445	-5.2222714	story	10.0	284.0	1583067917	-7.554372
22511458	Emulation of Unix V6 on a PDP-11 wit	Emulation of Unix V6 on a PDP-11 with an emulated teletype	beefhash	9.860418	-5.414076	story	10.0	62.0	1583587942	-7.510941
22712811	ComputeDRAM: In-Memory Compute Using	ComputeDRAM: In-Memory Compute Using Off-the-Shelf DRAMs (2019) [pdf]	ingve	9.929473	-5.6134877	story	10.0	151.0	1585417454	8.269671
22987139	For me the single biggest factor is 	For me the single biggest factor is still single threaded performance. There are still many apps that are not multithreaded so all those extra cores are useless. Single thread performance will benefit any application. Intel still holds the lead in this category.	celeritascelery	9.496975	-5.3168225	comment	10.0	59.0	1587909189	7.9545703
23265727	I'm disappointed today's general pur	I'm disappointed today's general purpose CPU's and microcontrollers don't come with some integrated FPGA space, similar to how you have SRAM and other peripherals.  Intel talked about it a few years back [1] but I'm not sure anything materialized.The closest I've seen in popular chips is a few gates worth of programmable logic.  Are there any hidden gems I've missed out on?[1] https://www.nextplatform.com/2018/05/24/a-peek-inside-that-i...	rkagerer	9.113431	-5.3200207	comment	10.0	59.0	1590097079	8.201143
23277849	Web AssemblyIt's interesting in a bu	Web AssemblyIt's interesting in a bunch of ways, and I think it might end up having a wider impact than anyone has really realized yet.It's an ISA that looks set to be adopted in a pretty wide range of applications, web browsers, sandboxed and cross platform applications, embedded (into other programs) scripting, cryptocurrencies, and so on.It looks like it's going to enable a wider variety of languages on the web, many more performant than the current ones. That's interesting on it's own, but not the main reason why I think the technology is interesting.Both mobile devices, and crypto currencies, are places where hardware acceleration is a thing. If this is going to be a popular ISA in both of those, might we get chips whose native ISA is web assembly? Once we have hardware acceleration, 	gpm	9.664671	-5.45465	comment	10.0	76.0	1590186933	-7.7648783
23364388	So if C paradigm doesn't fit the Z80	So if C paradigm doesn't fit the Z80 architecture, does anyone know if there's a language (other than Z80 assembler) that does. Or do Z80 enthusiasts generally just write everything in asm?	smcl	9.733216	-5.5907764	comment	10.0	49.0	1590870505	-7.369607
33079427	AMD Ryzen 7000 Series performs bette	AMD Ryzen 7000 Series performs better with Spectre V2 Mitigations enabled	ad8e	9.389859	-5.278349	story	10.0	256.0	1664887140	7.892967
33150179	Should Linux set the new constant-ti	Should Linux set the new constant-time mode CPU flags?	AshamedCaptain	9.665101	-5.260026	story	10.0	98.0	1665402340	7.8085394
33533929	It is quite astonishing how seamless	It is quite astonishing how seamless Apple has managed to make the Intel to ARM transition, there are some seriously smart minds behind Rosetta. I honestly don't think I had a single software issue during the transition!	dynjo	9.765435	-5.25577	comment	10.0	48.0	1668011297	7.637255
34105528	RISC-V Pushes into the Mainstream	RISC-V Pushes into the Mainstream	PaulHoule	9.37382	-5.692123	story	10.0	183.0	1671802053	-10.610113
26501378	Unprivileged Chroot()	Unprivileged Chroot()	rwmj	9.763423	-6.4288874	story	10.0	59.0	1616064742	-14.018609
26638091	Arm Announces Armv9 Architecture: SV	Arm Announces Armv9 Architecture: SVE2, Security, and the Next Decade	marc__1	9.603442	-5.2648473	story	10.0	297.0	1617127640	-7.7139316
26955451	Arm Announces Neoverse V1, N2 Platfo	Arm Announces Neoverse V1, N2 Platforms and CPUs, CMN-700 Mesh	timthorn	9.547849	-5.226117	story	10.0	216.0	1619529705	-7.729388
27226625	Why RISC-V doesn't yet support KVM	Why RISC-V doesn't yet support KVM	lukastyrychtr	9.4527445	-5.667556	story	10.0	195.0	1621541912	-10.595749
38047743	Cortex X2: ARM aims high	Cortex X2: ARM aims high	chmaynard	9.578367	-5.2206516	story	10.0	188.0	1698475914	7.7838974
38142364	Who wakes up in the morning excited 	Who wakes up in the morning excited to go implement 1984 style attestation? I cannot imagine being empowered with hard engineering skills and then wasting my precious little time on this earth toiling away at something so uninspiring. There are an infinite number of actually interesting problems to solve...go fix a compiler bug or  write a cool GPU algorithm and stop fighting against freedom.	greentea23	9.596322	-5.2742877	comment	10.0	38.0	1699114242	0.264333
38147038	There's a lesson here. Intel basical	There's a lesson here. Intel basically wanted to get away from x86 because it was licensed to AMD (and Cyrix) due to an earlier (and essentially unlimited) licensing agreement. In the late 90s, the likes of DEC, HP and Sun ruled the server and workstation space.Intel wanted in on this space and didn't want AMD to be able to produce compatible parts so... enter EPIC [1]. The projections (as you point to) were wildly optimistic. Of course the whole thing was heavily delayed, produced in small volume, offered limited to no performance gain, required a ground up write of pretty much everything and was super expensive. What could go wrong?What did AMD do? It just invented 64 bit extensions to x86 (ie x86-64). Was it ideal? No. You probably wouldn't design an instruction set and architecture thi	jmyeet	9.368943	-5.220267	comment	10.0	80.0	1699147318	7.836537
38188555	Trouble Brewing for RISC-V as Issue 	Trouble Brewing for RISC-V as Issue of Technology Transfer Is Questioned	rcarmo	9.375201	-5.687009	story	10.0	78.0	1699438613	-10.584406
38270330	I built a whole remote software upda	I built a whole remote software update mechanism for a control binary that ran on 25k+ servers across multiple data centers.Rest assured that after the first time I messed it up (which required ssh into each box individually), I wrote a lot of unit and integration tests to make sure that it never failed to deploy again. One of the integration tests ensured that the app started up and could always go through the internal auto update process. This ran in CI and would fail the build if it didn't pass.While I fully understand that this is hard to get right 100% of the time, a mess up of this level by a car manufacturer is pretty amazing to me.	latchkey	9.315102	-6.3308024	comment	10.0	77.0	1699998741	5.993135
38345053	Z80 vs. 8088 Speed	Z80 vs. 8088 Speed	CTOSian	9.525044	-5.1868863	story	10.0	94.0	1700470618	7.1627398
14743582	If I read that right, they're allowi	If I read that right, they're allowing Intel ME, which sounds like a sad compromise to me. Given that it's a pretty big complex black box that one can't easily disable, would you agree that x86 is doomed when it comes to security? If that's the case, is there any hope we could have a CPU with competitive capabilities? (For example, is there an i7 alternative for ARM?)What could one do to make it possible to have ME-less x86 in the future?	d33	9.565937	-5.245911	comment	10.0	53.0	1499776559	-7.7007284
14762673	I really hope the ECC carries throug	"I really hope the ECC carries through. It irritates me to have to buy a ""server"" CPU if I want ECC on my desktop (which I do) and it isn't that many gates! Its not like folks are tight on transistors or anything. And on my 48GB desktop (currently using a Xeon CPU) I'll see anywhere from 1 to 4 corrected single bit errors a month.For things like large CAD drawings which are essentially one giant data structure, flipping a bit in the middle of them somewhere silently can leave the file unable to be opened. So I certainly prefer not to have those bits flip."	ChuckMcM	9.510867	-5.538896	comment	10.0	82.0	1499963406	8.230149
14801336	Well, I'd love to get some discussio	"Well, I'd love to get some discussion here.One of the perennial questions that I've never received a satisfactory answer to is: Where's the ILP?Everytime I get asked this, I get referred to the ""Phasing"" talk, but that isn't a satisfactory response either.I think quantitative analysis will prove to be far more nuanced and damning than expected. Take this paper (https://pdfs.semanticscholar.org/1002/50a822251d1302c146ab49...). This paper analyzes a processor with much STRONGER characteristics than the Mill: It dynamically identifies these dependencies and then schedules them.The result? It gets smashed by a classic OoO."	deepnotderp	9.733077	-5.720261	comment	10.0	87.0	1500426168	8.052878
15364456	Change of scope and target market fo	Change of scope and target market for i386	campuscodi	9.692358	-5.3231235	story	10.0	71.0	1506685832	-7.7396474
23553974	A look at the die of the 8086 proces	A look at the die of the 8086 processor	magnat	9.577628	-5.261866	story	11.0	217.0	1592414319	-7.5764847
23689147	'It's hard to find maintainers': Lin	'It's hard to find maintainers': Linus Torvalds ponders Linux's future	ASVVVAD	9.4025955	-5.8268633	story	11.0	82.0	1593518121	-8.2199955
23787733	Ryzen Threadripper Pro 3995WX Spotte	Ryzen Threadripper Pro 3995WX Spotted	stambros	9.3049755	-5.200486	story	11.0	151.0	1594350120	7.916457
23812187	Robot Game: Comparing 6502 C, Assemb	Robot Game: Comparing 6502 C, Assembly, and Forth	druzyek	9.854402	-5.621997	story	11.0	94.0	1594568879	-7.374039
23966948	Highlights from Git 2.28	Highlights from Git 2.28	programeris	9.046615	-6.3001027	story	11.0	201.0	1595869149	12.721188
24281102	An A64FX CPU has 48 cores. 1 CPU/nod	An A64FX CPU has 48 cores. 1 CPU/node means 96 cores on 2 nodes for $40k and ~6TFLOPS (3 per). Meanwhile the 128 thread Threadripper 3990X costs $3.6k, and benchs put it at 1.5TFLOPS in Linpack, which is less but not 10x less, and I don't know what the benchmark basis for the A64FX value is, so I suspect it's closer, especially since it says theoretical peak performance.... Am I missing something?	FeepingCreature	9.524173	-5.336044	comment	11.0	53.0	1598437725	7.9008794
24382592	Code of Conduct Complaints Against L	Code of Conduct Complaints Against Linus Torvalds	0-_-0	9.288265	-5.8895226	story	11.0	21.0	1599300608	-8.085446
20195163	Researchers use Rowhammer bit flips 	Researchers use Rowhammer bit flips to steal 2048-bit crypto key	walterbell	9.65571	-5.6501036	story	11.0	218.0	1560688476	-13.892451
20307128	AMD Responds to WSJ ‘Keys to the Kin	AMD Responds to WSJ ‘Keys to the Kingdom’ Story	JackFaker	9.25013	-5.1945424	story	11.0	208.0	1561745014	7.830715
20525413	This is both awesome and terrifying.	This is both awesome and terrifying. I'll never forget this research(https://www.wired.com/2016/06/demonically-clever-backdoor-hi...) which showed how an attacker can insert a backdoor into a chip during the manufacturing process in a way that is practically impossible to catch. That makes me very concerned about using a chip completely manufactured in China.But at the same time, RISC-V needs to happen. It's a critical step to move computing forward. It's just a damn shame that this is the way it's going to happen. Hopefully this will push RISC-V manufacturing efforts in the US before the market becomes flooded with cheap open source and most likely backdoored chips manufactured in China.	bogwog	9.35279	-5.6467285	comment	11.0	192.0	1564063375	-10.600812
20790872	Soon all the voting machines in U.S.	Soon all the voting machines in U.S. will be powered by FreeBSD/RISC-V	cnst	9.382427	-5.682903	story	11.0	67.0	1566698196	3.1979284
20803445	The problem is that while RISC-V may	The problem is that while RISC-V may deliver an excellent open ISA, there is no equivalent open solution for the GPU/display controller side. As I understand it, the GPU world is full of patents and dominated by just a few parties. I don't think there's something that Huawei or other Chinese manufacturers could easily start with and extend.So I can see RISC-V being ideal for applications that are not user facing or don't require fancy graphics -- servers, network hardware, microcontrollers, etc. But it would be a tough call to put one in a phone, tablet, or laptop.	cmrdporcupine	9.384429	-5.6247525	comment	11.0	90.0	1566851407	-10.554844
20838030	Pardon my ignorance, but besides bei	"Pardon my ignorance, but besides being an open-source ISA what's the reason for the popularity for RISC-V? The buzz alone has piqued my interest, but I'm just trying to understand the ""why""."	non-entity	9.384553	-5.697297	comment	11.0	97.0	1567169484	-10.621611
14253442	Disabling Intel AMT on Windows	Disabling Intel AMT on Windows	gaia	9.43786	-5.2598295	story	11.0	117.0	1493791921	7.8083944
14443871	I'll bite: every time I see a CPU-re	"I'll bite: every time I see a CPU-related thread on HN there are a few people clamoring for ECC support. While I get why I'd want ECC on a high-availability server running critical tasks, I don't really feel a massive need for it on a workstation. I mean of course if it's given to me ""for free"" I'll gladly take it, but otherwise I'll prefer to trade it for more RAM or simply a cheaper build.Why is ECC that much of a big deal for you? Maybe I'm lucky but I manage quite a few computers (at work and at home) and I haven't had a faulty RAM module in at least a year. And even if I do I run memtest to isolate the issue and then order a new module. An inconvenience of course, but pretty minor one IMO.Do you also use redundant power supplies? I think in the past years I've had more issues with bro"	simias	9.477419	-5.5135646	comment	11.0	54.0	1496135168	8.246865
14586582	Why don't we see CPUs with an integr	Why don't we see CPUs with an integrated FPGA yet?	amelius	9.133003	-5.311971	comment	11.0	60.0	1497877390	8.231497
14588429	"Intel has been ""dead"" before.  AMD h"	"Intel has been ""dead"" before.  AMD has ""beaten it"" before.AMD knocked it out of the park with x86_64, which allowed a seamless transition to 64bit.  Intel ended up having to license x86_64 implementation from AMD.AMD beat Intel with their K6 and similar series of chips where, just like this time around, they were able to get way more performance per tick out of the CPU.  Intel was supposedly dead in the water due to their toaster era P4 chips that ran hot as hell, and consumed way more power to get the same job done.  AMD started making some serious inroads in the server CPU market with early era Opteron processors.
Following that era, out came Centrino era of mobile processors, which took a different approach to the CPU architecture from the P4 and set things up for the Core2Duo etc serie"	Twirrim	9.338397	-5.2061224	comment	11.0	76.0	1497891581	7.824796
30942723	Semi-related, besides TCC, are there	Semi-related, besides TCC, are there any other C-ish compilers that are easily ported to a new ISA any of you can recommend?Been playing with FPGA softcores, and while writing a compiler can be fun it kinda detracts from the main project.	magicalhippo	9.655786	-5.66586	comment	11.0	46.0	1649327169	-7.6251493
31243674	India reveals RISC-V CPU roadmap, ex	India reveals RISC-V CPU roadmap, expects product by 2023	signa11	9.379338	-5.639282	story	11.0	169.0	1651544403	-10.590504
31541858	Ampere Announces 5nm Arm Server CPU	Ampere Announces 5nm Arm Server CPU	ksec	9.536009	-5.2102165	story	11.0	82.0	1653757114	-7.850025
31548311	Easy 6502	Easy 6502	rahimnathwani	9.547987	-5.284787	story	11.0	172.0	1653824353	-7.488088
31743387	Brilliant approach, really. Never oc	"Brilliant approach, really. Never occurred to me to try something like this!Are you affected? Very likely. What can you do about it? Nerf your CPU performance by disabling ""turbo boost"" or equivalent. Should you do it? Probably not unless you're particularly vulnerable (journalist, human rights activist, etc.)One thing I found interesting that may get changed later, so I'm documenting it here, is in their FAQ they say:> Why did Intel ask for a long embargo, considering they are not deploying patches?
>
> Ask Intel.So Intel did ask for a long embargo, then apparently did nothing about it. My guess is they investigated ""can we actually mitigate this thing with a microcode update?"" and arrived at the conclusion after actually trying - or possibly after external influences were exerted (you be"	MrWiffles	9.520823	-5.3262796	comment	11.0	109.0	1655229740	7.7738476
25644678	An Open-Source FPGA-Optimized Out-of	An Open-Source FPGA-Optimized Out-of-Order RISC-V Soft Processor (2019) [pdf]	varbhat	9.34445	-5.6225576	story	11.0	239.0	1609848338	-10.558818
26341055	Lion: A formally verified, 5-stage p	Lion: A formally verified, 5-stage pipeline RISC-V core	varbhat	9.490541	-5.7406874	story	11.0	241.0	1614856650	-10.5009365
26418307	Xilinx Opens Up Vitis HLS Tool for F	Xilinx Opens Up Vitis HLS Tool for FPGAs	UncleOxidant	9.106014	-5.383388	story	11.0	86.0	1615420823	8.408089
35941518	The x86 decoders consume a reasonabl	"The x86 decoders consume a reasonable amount of power, but the trouble is making them wider without affecting that.I have an AMD CPU. Zen CPUs come with a fairly wide backend. But the frontend is what it is (especially early Zen), and without SMT it's essentially impossible to keep all those execution units fed.
It's not that 8 x86 decoders wouldn't be a benefit, it's just that more decoders isn't cheap in x86 cores, each extra decoder is a serious cost.If you compare with the big ARM cores, having a wide frontend is not a complex research problem or an impractical cost. 8 wide ARM decode is completely practical. You even have open source superscalar RISC-V cores just publicly available on Github running on FPGAs with 8 wide decode.
Large frontends are (relatively) cheap and easy, if you'r"	tux3	9.640551	-5.53441	comment	11.0	96.0	1684100006	6.097583
36313409	> “My belief is in the next 5 to 10 	> “My belief is in the next 5 to 10 years, RISC-V will take over all the data centers,” Keller told EE Times,Isn't this essentially impossible?	klelatti	9.3810215	-5.6724124	comment	11.0	63.0	1686676497	-10.567254
28679187	Project IceStorm: open-source toolch	Project IceStorm: open-source toolchain for Lattice iCE40 FPGAs	pabs3	9.074329	-5.376254	story	11.0	119.0	1632801678	8.399783
28706311	What does the -core suffix mean in t	What does the -core suffix mean in this context? I get that it is a mix of words, like hardcore, nerdcore, etc.. but why? I figured that was reserved for fringe extreme genres. Does anybody have any info on this?	0des	9.457364	-5.2275434	comment	11.0	36.0	1633009972	7.795155
28930647	Intel researchers propose HTTPS Atte	Intel researchers propose HTTPS Attestable to secure web workloads via SGX	Dotnaught	9.516004	-5.2237663	story	11.0	33.0	1634737747	-5.8078575
29230100	Highlights from Git 2.34	Highlights from Git 2.34	todsacerdoti	9.05971	-6.2971077	story	11.0	160.0	1636998216	12.729766
29300973	I got nerd sniped into benchmarking 	I got nerd sniped into benchmarking legacy x86 instructions (2019)	kevinday	9.881617	-5.8036003	story	11.0	143.0	1637538513	-7.553761
29408046	Scamp CPU: A homebrew 16-bit CPU wit	Scamp CPU: A homebrew 16-bit CPU with a homebrew Unix-like-ish operating system	akkartik	9.714772	-5.211056	story	11.0	148.0	1638386842	-8.068424
34681220	>The Xilinix development environment	>The Xilinix development environment is Vivado which supports writing and compiling your HDL along with creating testbenches and running simulations.I tried getting into FPGA development, played around a bit with simple Verilog implementations then got a cheap FPGA board an pretty much failed at Vivado. That tool is completely unusable. It makes me think of 90s Visual studio where you have to jump through 5 forms and wizards to generate a broken project that wouldn't compile or run on your board.Are there shell tools for FPGA programming you can just set up with a Makefile or something? Having to use a GUI for stuff like this seems silly to me.	ginko	9.102898	-5.4175177	comment	11.0	38.0	1675705846	8.481398
34777381	"First time I've heard ""pleading face"	"First time I've heard ""pleading face"" referred to as ""the bottom emoji"""	bhaney	9.8086405	-6.2694287	comment	11.0	95.0	1676311109	-13.954345
34949017	Modularizing ISA Specifications	Modularizing ISA Specifications	matt_d	9.594925	-5.551374	story	11.0	10.0	1677443218	-7.6794467
39382396	Fully documented source code for Lan	Fully documented source code for Lander on the Acorn Archimedes	Kye	9.663738	-5.2517147	story	11.0	74.0	1708003512	-7.9792023
39387191	Renesas Buys Altium	Renesas Buys Altium	AdamH12113	9.381861	-5.197778	story	11.0	81.0	1708024841	4.4887495
39664221	AMD announces the Spartan UltraScale	AMD announces the Spartan UltraScale+ FPGA family	chrsw	9.140784	-5.3123407	story	11.0	76.0	1710122495	8.191444
36854030	Intel AVX10: The Successor to AVX-51	Intel AVX10: The Successor to AVX-512	gautamcgoel	9.450147	-5.487295	story	11.0	97.0	1690231915	8.012525
36942651	x86 is dead, long live x86	x86 is dead, long live x86	harpratap	9.736021	-5.4028597	story	11.0	125.0	1690812325	-7.7700553
37010786	Intel x86 documentation has more pag	Intel x86 documentation has more pages than the 6502 has transistors (2013)	optimalsolver	9.494417	-5.257587	story	11.0	231.0	1691232561	-7.424212
37141821	AMD Inception Mitigations Cause 20% 	AMD Inception Mitigations Cause 20% Performance Drop in Database Servers	nitinreddy88	9.362285	-5.2119274	story	11.0	101.0	1692150459	7.8717756
37247763	STM32MP2: ST’s first Linux capable 6	STM32MP2: ST’s first Linux capable 64-bit MPU with NPU, GPU and TSN	teleforce	9.740253	-5.208001	story	11.0	58.0	1692878042	7.4029098
37254323	I'm not wanting to sound snoody. Wha	I'm not wanting to sound snoody. What use-cases do firecracker instances and the likes chime?I use FreeBSD for everything from my colocated servers, to my own PC. By no means am I developer; seasoned Unix Admin at best. Bare-metal forever but welcome to the future. Especially anything that contributes to the OS.However I hear buzz words like Lambda and Firecracker and really have no idea where the usage is. I get docker, containers, barely understand k8s but why do you need to spin up a VM only to tear it down compared to where you could just spin up a VM and use it when you really need to. Always there, always when.Is it purely a cloud experience, cost saving exercise?	doublerabbit	9.73881	-6.418911	comment	11.0	42.0	1692910006	-8.576439
37478347	Birb: Programming with bird emojis	Birb: Programming with bird emojis	marvinborner	9.81962	-6.2510552	story	11.0	174.0	1694508637	-13.939873
24735766	Modernising RISC OS in 2020: is ther	Modernising RISC OS in 2020: is there hope for the ancient ARM OS?	lproven	9.412341	-5.6282263	story	11.0	111.0	1602289960	-10.560148
24856880	Linux Developers Discussing Possible	Linux Developers Discussing Possible Kernel Driver for Intel CPU Undervolting	varbhat	9.769004	-5.2440877	story	11.0	144.0	1603365970	7.8957677
25002448	Western Digital SweRV RISC-V Core	Western Digital SweRV RISC-V Core	ch_sm	9.378075	-5.672313	story	11.0	153.0	1604613249	-10.59376
25228698	Zenoh – Zero Overhead Pub/Sub, Store	Zenoh – Zero Overhead Pub/Sub, Store/Query and Compute	shandor	9.314866	-5.260752	story	11.0	68.0	1606485216	7.906628
25239827	I come from a sofware world not typi	I come from a sofware world not typical for HN. I am a (very) low level software and FPGA guy. Despite my best efforts, I don't understand: What do any of these tools do that Make does not? Are they faster and easier to use? Do they work better?	rthomas6	9.091836	-5.3643417	comment	11.0	66.0	1606591821	8.420722
25293650	Manawyrm/ISA8019 – RTL8019-based ISA	Manawyrm/ISA8019 – RTL8019-based ISA network card, NE2000-compatible	todsacerdoti	9.56253	-5.3716936	story	11.0	50.0	1607024665	-7.707567
38598940	Comparing 6502 Multiply Routines	Comparing 6502 Multiply Routines	adunk	9.724634	-5.6711197	story	11.0	119.0	1702286360	-7.3510237
38816429	DRµGS: Deep Random Micro-Glitch Samp	DRµGS: Deep Random Micro-Glitch Sampling	tosh	9.723291	-5.377524	story	11.0	169.0	1703953505	-8.053671
38961430	I want to do hardware development in	I want to do hardware development in an x86_64 Linux VM on a Mac. I work with closed source vendor tools that are only available as precompiled x86 binaries (it's FPGA development, everything is closed source).Am I going to run into problems, either with performance of x86 code in a translator like Parallels, or with USB connections to the target hardware from within a virtual machine on M2/M3?	fulladder	9.881271	-5.2461643	comment	11.0	37.0	1705017289	-7.9923997
32606805	Amid chip shortages, companies bet o	Amid chip shortages, companies bet on RISC-V	tomclancy	9.347353	-5.68392	story	11.0	210.0	1661518526	-10.579281
32874189	Apple to Move a Part of Its Embedded	Apple to Move a Part of Its Embedded Cores to RISC-V	gcoguiec	9.410723	-5.6000533	story	11.0	118.0	1663380953	-10.539265
33018011	Anyone is using 64 cores besides Lin	Anyone is using 64 cores besides Linus :) I'm much more excited for 7900x on 12 cores rather than 64 cores. But I understand the limited amount of people that needs this power on desktop can also be excited.	jakuboboza	9.544938	-5.3068204	comment	11.0	36.0	1664441965	7.997948
32000868	Upcoming RISC-V laptop promises free	Upcoming RISC-V laptop promises free silicon upgrades	mocko	9.377571	-5.6159754	story	11.0	98.0	1657115465	-10.620596
32105661	Does a compiler use all x86 instruct	Does a compiler use all x86 instructions? (2016)	davidgerard	9.872431	-5.839362	story	11.0	103.0	1657870252	-7.4883995
32229806	Yes, the 8086 wanted to be mechanica	Yes, the 8086 wanted to be mechanically translatable from the 8080, but	zdw	9.619028	-5.2967896	story	11.0	219.0	1658777715	-7.5236926
32229326	How does a massive company like Inte	How does a massive company like Intel who's work heavily involves code/compiler optimization not profile their drivers for something this simple?	Heston	9.599863	-5.5140014	comment	11.0	47.0	1658775729	-7.3153334
19074089	God Mode Unlocked – Hardware Backdoo	God Mode Unlocked – Hardware Backdoors in Via C3 CPUs (2018) [video]	MagicPropmaker	9.57653	-5.278552	story	11.0	162.0	1549256141	7.740247
19129408	DVC – Open Source Machine Learning V	DVC – Open Source Machine Learning Version Control System	jonbaer	8.7844305	-6.396841	story	11.0	148.0	1549825776	-11.757061
19237068	Google: Software is never going to b	Google: Software is never going to be able to fix Spectre-type bugs	metaphysics	9.621347	-5.558133	story	11.0	48.0	1550981185	7.728656
19334019	x86: Deprecate a.out support	x86: Deprecate a.out support	turrini	9.784728	-5.3608265	story	11.0	82.0	1552004622	-7.80438
19460446	Reading these old Linus exchanges al	Reading these old Linus exchanges always has me in two minds. On the one hand, it's great to peer into the mind of a genius and see the thought process, but on the other - and in light of his stepping back after recognising his own highly unprofessional behaviour over the years - I wonder if we should repost and idolise these emails.Are people - especially young and impressionable developers - able to separate the two sides of the coin, or does it serve to plant a seed of normalisation for this kind of communication?	FrancisStokes	9.282952	-5.888582	comment	11.0	74.0	1553242672	4.316238
19565235	I for one despise the political corr	"I for one despise the political correctness that has occurred/is occurring in the current online communities. Anything and everything can and will be misconstrued to suit the needs of the ""offended"". Offense is taken, not given. I am sick and tired of the entire SJW mindset that has permeated the WWW and development circles.What was ""innocent"" a few years ago is now grounds for doxxing, shutting down of accounts, getting people fired, you name it. It seems that ""tolerance"" is only tolerated if it is agreed with. Voltaire comes to mind here.I never thought Linus was in bad form. His project, his rules. Ditto Theo de Raadt, who I think is a great project leader. I've heard him speak more than once, and he is a very nice guy. Like most leaders of tough projects, these guys endure massive amou"	stirfrykitty	9.280791	-5.878611	comment	11.0	141.0	1554312264	4.2760887
19913502	The stream of critical CPU vulnerabi	The stream of critical CPU vulnerabilities starting with Spectre/Meltdown last year are related to speculative execution, not just Intel. (AMD and ARM CPUs are also vulnerable to Spectre, for example.) Intel CPUs are sometimes vulnerable to additional attacks because they speculate in more scenarios than other designs. But fundamentally, as long as multiple different trust domains are sharing one CPU that speculates at all, or has any microarchitectural state (e.g., caches), there are likely to be some side-channel attacks that are possible.The important thing to realize is that speculation and caching and such were invented for performance reasons, and without them, modern computers would be 10x-100x slower. There's a fundamental tradeoff where the CPU could wait for all TLB/permissions c	cfallin	9.6542845	-5.5397506	comment	11.0	72.0	1557865307	7.7900815
19970540	The final for Computer Architeture h	"The final for Computer Architeture had us building an 8-bit CPU. It was a multiweek project, starting with 
designing the instruction set leading up to building the CPU in software implementing bubble sort in assembly.The first and only time I had to do an all nighter (2 actually) in college was due to that project. Two days before the final presentation, the CPU didn't work. After a few clock cycles the memory would contain garbage. I ended up rebuilding it from scratch debugging every step of the way only to find out the 1-bit mux (a primitive supplied with the software) was wired backwards.0 corresponded to the B input, and 1 selected the A input.Once I correct that, the CPU worked like a charm, we nailed the final preso, and I slept for 16 hours."	balls187	9.558702	-5.3046002	comment	11.0	70.0	1558449601	8.014579
16015539	How to hack a turned-off computer, o	How to hack a turned-off computer, or running unsigned code in Intel ME [pdf]	danjoc	9.517045	-5.25959	story	11.0	543.0	1514390924	-4.615487
16061700	Can someone help me understand why t	Can someone help me understand why this is such a big deal? This doesn’t seem to be a flaw in the sense of the Pentium FDIV bug where the processor returned incorrect data. It doesn’t even seem to be a bug at all, but a side channel attack that would be almost expected in a processor with speculative execution unless special measures were taken to prevent it. And it doesn’t seem like it can be used for privilege escalation, only reading secret data out of kernel memory. It seems pretty drastic to impose a double-digit percentage performance hit on every Intel processor to mitigate this.	rayiner	9.635311	-5.468706	comment	11.0	79.0	1514993095	7.833048
16084404	Meltdown, aka “Dear Intel, you suck”	Meltdown, aka “Dear Intel, you suck”	fcambus	9.492071	-5.43688	story	11.0	222.0	1515227649	7.803766
16113092	Performance Impact of Spectre and Me	Performance Impact of Spectre and Meltdown Mitigations on Windows Systems	bpasero	9.629606	-5.5306067	story	11.0	75.0	1515568521	7.8153973
16119161	it's the fault of Intel, why don't t	it's the fault of Intel, why don't they recall all the CPU? just like vehicle company	ask098	9.413869	-5.217716	comment	11.0	91.0	1515619100	7.79881
16140383	This is pretty cool. A PC with an 80	This is pretty cool. A PC with an 80186 CPU is a little weird, though; I don't think many of those actually existed. It seems like virtually everybody went straight from 8086 to 80286	0xcde4c3db	9.635728	-5.232289	comment	11.0	56.0	1515865526	-7.624899
16165042	Some thoughts on Spectre and Meltdow	Some thoughts on Spectre and Meltdown	cperciva	9.6243	-5.566682	story	11.0	203.0	1516156933	7.763458
16325974	The cpu_features library	The cpu_features library	stablemap	9.714683	-5.4363947	story	11.0	183.0	1518023194	7.821802
17095557	One stark flailure of the Altera acq	One stark flailure of the Altera acquisition is there has been little by way of tool chain integration.  This is a CPU with a bag on the side, and that bag needs people that write HDL and understand computer architecture to make good use of.  It's not really a harsh critique, but a warning that the lower you go is an increasingly smaller number and expensive lot of folks.  Intel's marketing arm can't distort that reality, and their product development arm seems too taxed to bridge the gap.	kev009	9.233662	-5.2284718	comment	11.0	98.0	1526589985	8.106801
17231745	How is an emoji a whole new way to c	"How is an emoji a whole new way to communicate?EDIT: I meant this as a genuine question, not as a ""how could you possibly think this"" response."	engi_nerd	9.795483	-6.269408	comment	11.0	76.0	1528142579	-13.962642
17244168	Nice I guess, but I wish we could ge	Nice I guess, but I wish we could get back to working on getting FASTER cores rather than more of them. Some tasks just don't multi-thread.	TylerE	9.600171	-5.3588605	comment	11.0	70.0	1528256027	8.05894
17413999	I'd say the issue is, and continues 	"I'd say the issue is, and continues to be, growing pains.They're certainly losing the lead in software engineer talent (giving it away to whom, I'm not sure).I keep on interviewing recent Comp Sci graduates who have a 3.75 or a 4.0 and who can't tell me how to implement cycle detection -- to the extent that they could write a pseudocode function signature or some kind of concretely implementable design. Many of the same grads try to tell me that a null pointer in a C structure uses no memory and other nonsense like that. You know what I think? I think the CA grad student population no longer knows those things, so they are producing undregrads who know even less.my MBP crashes when plugging in an external monitor, etc?When my Macbook Pro is ""locked"" it flashes an image of the desktop scree"	stcredzero	9.89992	-5.388122	comment	11.0	77.0	1530159083	-1.6062021
17642872	India's first RISC-V based Chip is H	India's first RISC-V based Chip is Here: Linux boots on Shakti processor	signa11	9.387707	-5.663398	story	11.0	452.0	1532938480	-10.600649
17758326	Aren't FPGA's used mostly to test/de	Aren't FPGA's used mostly to test/design a circuit that you would then go on to actually fabricate/build? I could be wrong but I thought FPGA's were stateless (meaning if they powered off/reboot you loose everything and have to set it up from scratch again).	jaxtellerSoA	9.088826	-5.354713	comment	11.0	50.0	1534257544	8.388791
17828658	Intel Responds to Complaints About M	Intel Responds to Complaints About Microcode Benchmarking Ban	jsheard	9.486948	-5.325244	story	11.0	168.0	1535042466	7.7347164
17847978	Solving Spectre and Meltdown may ult	Solving Spectre and Meltdown may ultimately require a new type of processor	tosh	9.584349	-5.53494	story	11.0	104.0	1535318222	7.812798
21029180	"""Repurposing Top Bits"" - don't do th"	"""Repurposing Top Bits"" - don't do that. Honest.The IBM 360 shipped with 32-bit addresses but only 24 bits decoded. ""Hey, there's a whole byte up top that nobody's using today, let's put some stuff there!"" When they wanted the address space IBM found themselves architecturally hamstrung, and the cost to dig out was significant.The 128K Macintosh used a 68000; it had 32-bit addresses but only 24 bits were decoded. ""Hey, there's a whole byte up top that nobody's using today, let's put some stuff there!"" When Apple needed the address space they found themselves hamstrung by pieces of MacOS that did use those bits, and many applications that did, too. The cost to dig out was significant.It is practically guaranteed that ""Hey, there's 16 whole bits up there that nobody's using today"" will wind u"	kabdib	9.815489	-5.2748294	comment	11.0	60.0	1569000643	8.205854
21759683	Plundervolt: Software-Based Fault In	Plundervolt: Software-Based Fault Injection Attacks Against Intel SGX [pdf]	xucheng	9.509515	-5.27932	story	11.0	108.0	1576039730	-5.7914104
39292870	What are people using CPUs for?I mea	What are people using CPUs for?I mean I have a crappy 7 year old CPU that I use for single threaded dev, and it works for 99% of cases. In the 1% of cases, I threw on multithreading and its fine.Now my daily driver has a GPU and it unlocks new possibilities.Its been over 10 years since I've really spent time thinking about a CPU.	hospitalJail	9.612248	-5.2730584	comment	11.0	44.0	1707333235	7.898053
18001302	I'm probably going to be alone in sa	I'm probably going to be alone in saying so, but I always enjoyed Linus and his attitude.(to me) it made him appear honest and dedicated to (his own) goals, and I always felt like that was respectable. (mostly) whenever he was proven technically wrong about how to do something he would concede to the technically better solution, and if he didn't do so he gave reasons for his conclusion.in other words : his technical brilliance, in my own opinion, was a far larger boon than the problems stemming from having to deal with his knife-like personality.	serf	9.291656	-5.8814273	comment	11.0	151.0	1537134135	4.304763
18281430	I really wonder what's going to happ	I really wonder what's going to happen to Linux once Linus is gone. I think we've seen now that just a week after he took a break the community started falling apart rapidly.	carlmr	9.373004	-5.8479595	comment	11.0	43.0	1540279551	-8.306031
18805869	Analyzing Core I9-9900K performance 	Analyzing Core I9-9900K performance with Spectre and Meltdown mitigations	pplonski86	9.542272	-5.4662585	story	11.0	206.0	1546433937	7.776188
29749124	An aside:> L3 cache is shared by all	"An aside:> L3 cache is shared by all cores of a CPU.I recently learned this is no longer true! AMD EPYC processors (and maybe other recent AMDs?) divide cores into groups called ""core complexes"" (CCX), each of which has a separate L3 cache. My particular processor is 32-core where each set of 4 cores is a CCX. I discovered this when trying to figure out why a benchmark was performing wildly differently from one run to the next with a bimodal distribution -- it turned out to depend on whether Linux has scheduled the two processes in my benchmark to run on the same CCX vs. different CCXs.https://en.wikipedia.org/wiki/Epyc shows the ""core config"" of each model, which is (number of CCX) x (cores per CCX)."	kentonv	9.8207655	-5.596151	comment	11.0	68.0	1640965910	8.097214
29912710	Heartfuck	Heartfuck	diogenesjunior	9.821369	-6.2070575	story	11.0	58.0	1642021778	5.41983
13101948	Show HN: Emoji usage on Reddit	Show HN: Emoji usage on Reddit	dylz	9.799888	-6.260734	story	11.0	72.0	1480888104	13.0281925
13129076	LowRISC – An open-source, Linux-capa	LowRISC – An open-source, Linux-capable System-on-a-Chip	hkt	9.512659	-5.493572	story	11.0	332.0	1481184746	-10.42717
13146426	Show HN: Text Emoticon Generator	Show HN: Text Emoticon Generator	herbst	9.800585	-6.2628036	story	11.0	94.0	1481387976	13.027568
13190778	CoreOS Linux Is Now Container Linux 	CoreOS Linux Is Now Container Linux by CoreOS	philips	9.754925	-6.1572385	story	11.0	112.0	1481857831	10.225036
13416378	Intel Management Engine cleaner	Intel Management Engine cleaner	BuuQu9hu	9.5001745	-5.217037	story	11.0	223.0	1484648925	7.7828145
27518181	This takes me back to the days of fo	"This takes me back to the days of forum signatures, planetrenders.com, pixel fonts with 1px strokes, making emoticons (not emojis) on deviantArt, BBCode and making long-winded posts on VBulletin/PhpBB boards with the top three posts ""reserved for later use"".Man I wish I could go back."	junon	9.827871	-6.2556777	comment	11.0	57.0	1623776310	-13.9525585
27664856	Intel to disable TSX by default on m	Intel to disable TSX by default on more CPUs with new microcode	pella	9.5203285	-5.3455334	story	11.0	133.0	1624901763	8.06988
27969715	Linus Torvalds was paid $1.6M in 201	Linus Torvalds was paid $1.6M in 2018	ent101	9.359621	-5.832621	story	11.0	39.0	1627371856	-8.141345
12116000	Show HN: Natural Language Generation	Show HN: Natural Language Generation, Emoji-To-English Translator	abhagi	9.800234	-6.2614846	story	11.0	49.0	1468858727	12.998298
12149198	As a computer engineering student, I	As a computer engineering student, I don't understand how adding more transistors to a cpu  makes it faster, gpu's, sure. If I wire an 8-bit adder circuit, adding more transistors will definitely not make it process those bits faster.	azeirah	9.660716	-5.5220895	comment	11.0	34.0	1469274488	8.268761
12183753	Image-diff – Create an image differe	Image-diff – Create an image differential between two images	jsvine	8.812466	-6.4041953	story	11.0	110.0	1469745825	-11.658086
12209050	Apple releases 100 new emoji, replac	Apple releases 100 new emoji, replaces gun with waterpistol	davb	9.801264	-6.261095	story	11.0	47.0	1470136358	-13.960197
12237449	South Koreans use emoji to express p	South Koreans use emoji to express playful sentiments they wouldn’t utter aloud	r0n0j0y	9.789338	-6.266669	story	11.0	66.0	1470469809	-13.958972
12312580	AMD Zen Microarchitecture: Dual Sche	AMD Zen Microarchitecture: Dual Schedulers, Micro-Op Cache and Memory Hierarchy	dineshp2	9.269849	-5.2111564	story	11.0	190.0	1471529559	7.8790493
12358050	How many x86 instructions are there?	How many x86 instructions are there?	ingve	9.86301	-5.8080626	story	11.0	163.0	1472121976	-7.517429
35232326	Tinker V: Single-board RISC-V comput	Tinker V: Single-board RISC-V computer	nixcraft	9.375376	-5.6492243	story	11.0	99.0	1679323804	-10.564967
35439002	Intel Blocks Undervolting: The Whole	Intel Blocks Undervolting: The Whole Story	shaicoleman	9.519366	-5.2887263	story	11.0	66.0	1680613610	7.7263703
28007581	I would like the suggest the Itanium	I would like the suggest the Itanium was a huge business success. At the start of the 90s, there were many decent workstation CPUs: SPARC, MIPS, PowerPC, Alpha, and PA-RISC. Intel CPUs were not considered in the same class. Big engineering work was done on workstations powered by these chips. But as the decade went on, the chips became vastly more complex and expensive to design. Near the middle of the decade, it was becoming clear what the trajectory was and companies started looking around trying to figure out how to navigate this. On top of this problem, Intel/HP teamed up to design a processor that was quite beyond (in terms of complexity) anything being designed at the time and it became clear competing was just not economically feasible. So basically the industry folded. In one move,	throwaway9870	9.536555	-5.3268123	comment	11.0	59.0	1627650785	-7.703732
28280672	> ... we built out a pretty signific	> ... we built out a pretty significant portfolio of these applications solutions and they make it very easy for the customer to adopt our devices into their systems...Very disappointing that on the topic of Software/Toolchain it's more of the same business decisions of just copying the  Xilinx/Altera paradigm.Since they seemed rather non-agressive towards Yosys/SymbiFlow they made me quite hopeful that Lattice would be the fpga players that would kickstart open-source toolchain.I am tired of being forced to use software that vendors treat as a cost centre. I want to buy your hardware, I want the people that I work with to buy your hw.I am tired of vendors forcing a graphical programing toolchain that hides complexity behind half baked software. And judging from the Altera/Xilinx forums I 	DoingIsLearning	9.098195	-5.3802314	comment	11.0	60.0	1629746410	8.516773
22335710	Windows vs. Linux Scaling Performanc	Windows vs. Linux Scaling Performance 16 to 128 Threads with Threadripper 3990X	jjuhl	9.827779	-5.550377	story	11.0	108.0	1581779397	8.203959
22537608	[Ignorant tangent] Is core hardware 	[Ignorant tangent] Is core hardware more exploited these days or are vulnerabilities just more reported in tech news? I'd assume the former, but I'm not a hardware person. If so is this just due to increasing complexity/optimization going on in chip design or better tooling/methods of exploitation?	sf_rob	9.572121	-5.371869	comment	11.0	64.0	1583862177	7.8013916
22785100	How to Build 1 Bit of RAM Using Tran	How to Build 1 Bit of RAM Using Transistors	ImGameDeving	9.753352	-5.185674	story	11.0	115.0	1586087060	-4.962346
23031712	Once again crushing the competition 	Once again crushing the competition in single core performance, which is what matters.	bzb3	9.6093235	-5.3368464	comment	11.0	117.0	1588259690	7.9115067
33094710	Cpm65: CP/M for the 6502	Cpm65: CP/M for the 6502	ingve	9.756426	-5.403796	story	11.0	131.0	1664973686	-7.541541
33237314	Controversial opinion:Don't write te	"Controversial opinion:Don't write tests first. If you're not writing tests, you don't need CI to run tests, and CD isn't safe.Write tests only:  (a) if the algorithm is so complicated, that you need unit testing to ensure that you're writing it correctly in the first place
  (b) if, when, and after you earn revenue from the code

Why would you waste your time proving that something you wrote works, if you don't have product-market fit, and you need to throw it all out next week to try to satisfy the market with something different? Just make sure you have the discipline to go back and actually add edge-to-edge / integration testing after you make the sale, and not go straight to the next feature, leaving the lack of testing as technical debt."	solatic	9.453879	-6.4173965	comment	11.0	62.0	1666029218	-4.9709864
33252556	Comprehensive list of FPGA developme	Comprehensive list of FPGA development boards	homarp	9.097038	-5.331125	story	11.0	76.0	1666121033	8.3381
33346166	Usually when I'm reminded about IME 	"Usually when I'm reminded about IME (and whatever the equivalent is in AMD chips), it's in the context of some strong claims about it being ""game over"" for security and privacy against mass surveillance, engineered / funded by nation-state intelligence agencies, and rendering all other technical efforts moot. They make it sound plausible, and I think ""why isn't this talked about or investigated more?"" The section of the Wikipedia page that discusses the ""backdoor"" claim is frustratingly thin. I just don't know what to make of it. Hyperbole about a crappy thing, like the bloatware pre-installed on most new laptops and phones by the vendor? An open secret, with discussion about it suppressed?"	warner25	9.483728	-5.191015	comment	11.0	83.0	1666802282	7.745789
26568598	Intel Unleashed, Gelsinger on Intel,	Intel Unleashed, Gelsinger on Intel, IDM 2.0	kaboro	9.532534	-5.257578	story	11.0	276.0	1616600337	7.7655087
26735318	Programmable logic seems like a spac	Programmable logic seems like a space that could be disrupted with a company that has fully open-source tooling around its hardware along with great documentation. FPGA tooling is in the dark ages compared to modern software development environments. If you found such a company I will be your customer and simp/shill/stan for life.	spamizbad	9.096181	-5.359547	comment	11.0	58.0	1617859065	8.355625
26846718	Loongson Technology develops its own	Loongson Technology develops its own CPU instruction set architecture	pantalaimon	9.58767	-5.422826	story	11.0	60.0	1618687252	7.8662415
26899946	Intel Internet Party Line (1997)	Intel Internet Party Line (1997)	omnibrain	9.330177	-5.1930466	story	11.0	92.0	1619077465	7.711104
26922244	Show HN: Emojicons	Show HN: Emojicons	diatone	9.806307	-6.2585526	story	11.0	93.0	1619238442	13.032112
27047082	IMHO adding different skin tones to 	IMHO adding different skin tones to emojis is racism, just like if we added multiple skin tones to letters and everybody was only allowed to use their own. And this also introduces unnecessary complexity and clutters the screen space. Is a field to set your skin color in the app/browser/OS settings so the proper handshake emoji would be chosen automatically according to that and that of the counterpart the next thing to come?	qwerty456127	9.783641	-6.264553	comment	11.0	52.0	1620199159	10.71451
27242302	the one that gets me is adding race 	the one that gets me is adding race to emoji. they all used to be 'Simpsons yellow', a skin tone not found in any ethnic or racial group, and as such not representing or excluding any group but now we have black white and other various skin tones for our happy-faces. WHY? Does black happy face mean something different than white happy face isn't happiness universal? why bring race into something that was simply meant to express emotion?	smegger001	9.778299	-6.2655287	comment	11.0	99.0	1621646810	-13.959589
27396848	Intel and AMD Contemplate Different 	Intel and AMD Contemplate Different Replacements for x86 Interrupt Handling	eklitzke	9.472133	-5.3265305	story	11.0	200.0	1622830227	7.8641934
37636216	“What If Linus Torvalds Gets Hit by 	“What If Linus Torvalds Gets Hit by a Bus?” – An Empirical Study (2000)	shmde	9.313802	-5.8868055	story	11.0	77.0	1695582560	-8.126063
37706070	SIMD Everywhere Optimization from AR	SIMD Everywhere Optimization from ARM Neon to RISC-V Vector Extensions	camel-cdr	9.801274	-6.0292935	story	11.0	107.0	1696002847	-10.435058
37767831	Intel to set its FPGA unit free to p	Intel to set its FPGA unit free to pursue its own path	rbanffy	9.118954	-5.3409886	story	11.0	148.0	1696437765	8.2427025
37797947	Lots of excellent answers but this i	"Lots of excellent answers but this is the best response that gets to the core of the question (don’t know how to make a link to an answer, so pasting it here):> Processor architectures come and go. The history of the 68k architecture is perfectly normal. It's the x86 that's anomalous. I believe that is the result of Microsoft's peculiar inability to switch architectures. No other software company seems so stuck: they move opportunistically to whatever architecture suits their immediate needs. Apple has evolved 6502->68k->PPC->x86->ARM. – 
John Doty Sep 25 at 12:14"	gumby	9.605526	-5.192443	comment	11.0	51.0	1696638107	-7.603078
37964878	Microwatt: A tiny Open POWER ISA sof	Microwatt: A tiny Open POWER ISA softcore written in VHDL 2008	ksec	9.478874	-5.4601474	story	11.0	141.0	1697874042	-10.44317
38126084	New BeagleV single board computer ad	New BeagleV single board computer adopts Microchip's PolarFire SoC with FPGA	teleforce	9.332921	-5.3478265	story	11.0	84.0	1699001409	8.261949
38137373	AMD MicroBlaze V Processor: A Flexib	AMD MicroBlaze V Processor: A Flexible and Efficient RISC-V Processor	stevefan1999	9.387651	-5.619344	story	11.0	337.0	1699063305	-10.558242
38218667	Nordic is getting involved in RISC-V	Nordic is getting involved in RISC-V	hasheddan	9.362423	-5.695581	story	11.0	314.0	1699623741	-10.581502
14742295	Launching Today: CircleCI 2.0 Reache	Launching Today: CircleCI 2.0 Reaches General Availability	ssemmaprise	8.944705	-6.3960195	story	11.0	98.0	1499759179	-2.086919
14746055	Sizing Up Servers: Intel's Skylake-S	Sizing Up Servers: Intel's Skylake-SP Xeon versus AMD's EPYC 7000	zdw	9.303223	-5.1924434	story	11.0	144.0	1499793985	7.8901176
14936468	50+ Segmentation Faults per Hour: Co	50+ Segmentation Faults per Hour: Continuing to Stress Ryzen	pella	9.323269	-5.2092323	story	11.0	93.0	1501950356	7.8561087
15025477	I wonder if this one will come with 	I wonder if this one will come with free backdoors and spyware installed, thanks to the wonderful Intel Management Engine (Intel ME) backdoor. [1][2][3]Intel (and AMT) keep pushing more and more proprietary code that can not be read, changed or removed. No one knows exactly what it does and it has built in screen and key recording. It's my advice and the advice of privacy advocates that no one should purchase or use any processor made by Intel or AMD until they address these serious issues.1. https://libreboot.org/faq.html#intel2. https://puri.sm/learn/intel-me/3. https://news.ycombinator.com/item?id=14708575	turblety	9.507789	-5.218066	comment	11.0	70.0	1502866759	7.796132
15610688	> John Johansen will survive.We real	> John Johansen will survive.We really need to stop excusing Linus's behaviour. Just because we may happen to agree with what he is saying doesn't mean we also have to agree with how he is saying it.	jordigh	9.295296	-5.887692	comment	11.0	114.0	1509633005	4.192883
15708040	A win for open source. I was just th	"A win for open source. I was just thinking the other day that it's a shame that Linus is not a billionaire. Seems he's doing just fine however:""Finnish-American software engineer and hacker Linus Torvalds has as estimated net worth of $150 million and an estimated annual salary of $10 million. He earned his net worth as the principal force behind the development of the Linux kernel.""Source: https://www.therichest.com/celebnetworth/celebrity-business/..."	b_emery	9.380507	-5.8031764	comment	11.0	167.0	1510781598	-8.060977
23449472	Why did post-8008 CPUs not keep the 	Why did post-8008 CPUs not keep the on-chip stack idea?	theandrewbailey	9.5083275	-5.195044	story	12.0	48.0	1591554752	7.8513083
20234388	AMD EPYC “Rome” Server Processors to	AMD EPYC “Rome” Server Processors to Feature 8 to 64 Cores	areejs	9.325514	-5.2322807	story	12.0	100.0	1561047671	7.9261727
20381230	PDP2011: A re-creation of the PDP-11	PDP2011: A re-creation of the PDP-11 computer systems in VHDL	ljosa	9.808324	-5.4481087	story	12.0	72.0	1562578686	-7.528038
20652364	This might sound like a silly questi	This might sound like a silly question, but what would one use a 64-code CPU on a desktop machine for? Or more precisely, in what situations is a 32-core ThreadRipper2 insufficient?	krylon	9.523203	-5.275008	comment	12.0	56.0	1565340181	7.9639964
20874470	Teardown of a Failed Linux LTS Spect	Teardown of a Failed Linux LTS Spectre Fix	pentestercrab	9.641348	-5.5850387	story	12.0	171.0	1567577541	7.770961
13924192	AMD Ryzen Machine Crashes on a Seque	AMD Ryzen Machine Crashes on a Sequence of FMA3 Instructions	elorant	9.329006	-5.1999054	story	12.0	174.0	1490116613	7.917492
14165785	Intel Shuts Down Lustre File System 	Intel Shuts Down Lustre File System Business	arcanus	9.303859	-5.194385	story	12.0	108.0	1492784141	7.812571
14330885	Intel releases the last Itanium chip	Intel releases the last Itanium chip, the 9700	bhouston	9.447481	-5.3995366	story	12.0	93.0	1494682591	-7.7368965
14353290	AMD Unveils “EPYC” CPUs Featuring Up	AMD Unveils “EPYC” CPUs Featuring Up to 32 Cores and 64 Threads for the Datacenter	chx	9.344246	-5.230819	story	12.0	191.0	1494968603	7.9126554
14519163	MMIX 2009: A RISC computer for the t	MMIX 2009: A RISC computer for the third millennium (2011)	tambourine_man	9.38467	-5.6616807	story	12.0	145.0	1496982153	-10.543734
30755716	VRoom A high end RISC-V implementati	VRoom A high end RISC-V implementation	cmurf	9.414747	-5.69802	story	12.0	154.0	1647878877	-10.570687
30776164	Oh boy, this is a sore subject for m	"Oh boy, this is a sore subject for me.It's pretty obvious that Verilog and VHDL, modeled after C and Ada respectively, both imperative languages, follow a drastically mismatched paradigm for hardware design, where circuits are combined and ""everything happens in parallel"". It becomes even more obvious when you have tried a functional alternative, for example Clash (which is essentially a Haskell subset that compiles to Verilog/VHDL: https://clash-lang.org).The problem is, it is hard, if not downright impossible, to get the industry to change. I have heard many times, in close to literally these words: ""Why would I use any language that is not the industry standard"". And that's a valid point given the current world. But even for people that are interested, it might just be hard to switch to"	anyfoo	9.139009	-5.50375	comment	12.0	70.0	1648022950	8.642675
31077912	The x86 architecture is the weirdo, 	The x86 architecture is the weirdo, part 2	zdw	9.790137	-5.4656563	story	12.0	175.0	1650323687	-7.6937113
31119639	I have a theory that CPU architectur	"I have a theory that CPU architectures implicitly have something I call the ""architectural weirdness budget"", which is the extent to which you can get away with design decisions in the architecture or ABI that differ from the existing established consensus. Any time you do something a bit odd that means that existing software has to do awkward things or might not be no-changes portable to your new architecture, you're spending a bit of your weirdness budget. Some examples:+ HPPA's upwards-growing stack+ SPARC register windows+ PowerPC's slightly oddball varargs ABI+ CHERI capabilities are massively spending weirdness budget+ these days, being big-endian is spending weirdness budgetDoing a few odd things is fine, but if you blow your weirdness budget entirely then your new architecture is i"	pm215	9.674085	-5.334383	comment	12.0	156.0	1650618988	-7.791541
26012829	Intel Processor Names, Numbers and G	Intel Processor Names, Numbers and Generation List	todsacerdoti	9.428441	-5.184682	story	12.0	44.0	1612353422	7.7667375
26130763	Sourcetrail: Free and open-source in	Sourcetrail: Free and open-source interactive source explorer	yagizdegirmenci	8.830046	-5.9593782	story	12.0	224.0	1613293560	-11.344388
35805471	It seems that operations on FPGAs ca	It seems that operations on FPGAs can run much more efficiently than their cpu equivalent. For an 'AND' operation, a cpu needs to load code and data from a memory into registers, run the logic and write the result register back to some memory. This while filling up the pipeline for subsequent operations.The FPGA on the other hand has the output ready one clock cycle after the inputs stream in, and can have many such operations in parallel. One might ask, why are cpus not being replaced by FPGAs?Another interesting question, can software (recipes for cpus) be transpiled to be efficiently run on FPGAs?I could ask GPT those questions, but the HN community will provide more insight I guess.	nuancebydefault	9.144208	-5.3773623	comment	12.0	42.0	1683136389	8.312141
35869778	432-Core RISC-V European Processor D	432-Core RISC-V European Processor Designed for Use in Space Taped Out	mepian	9.3934	-5.633173	story	12.0	202.0	1683601889	-10.560703
36006446	Envisioning a Simplified Intel Archi	Envisioning a Simplified Intel Architecture	ruik	9.395486	-5.226901	story	12.0	117.0	1684527899	7.788588
36014230	Fabulous. Might actually make me lik	Fabulous. Might actually make me like Intel again. The legacy stuff is a nightmare, their segmented memory nonsense was also a waste of development time and I'm glad to see them finally acknowledge it.I wonder how this will affect quirks such as A20, IRQ remapping, etc. All oversights and mistakes made by Intel over the years - none of which really hurt development or performance these days per se, but are definitely not fun to work with either.Something like this is the only thing that would save the x86 architecture before ARM inevitably took over.	junon	9.578583	-5.27019	comment	12.0	65.0	1684606423	-7.70457
36109916	New Arm cores deliver up to 40% bett	New Arm cores deliver up to 40% better performance	mikece	9.57157	-5.188419	story	12.0	143.0	1685327387	7.7509985
36149375	EPYC 7002 CPUs may hang after 1042 d	EPYC 7002 CPUs may hang after 1042 days of uptime	gfv	9.375519	-5.260077	story	12.0	159.0	1685615448	7.961734
36494384	"I'm stuck at ""iatetomatoesyesterday0"	"I'm stuck at ""iatetomatoesyesterday0265Z#521juneVpepsiVIIxngxcaboutAg[moon emojis]italy2020Bf7+"" trying to solve the chess notation puzzle.I especially laughed at the rule ""must include today's Worldle"" and I'm happy with my solution including every emoji for ""must include the current phase of the moon as an emoji.""(HackerNews doesn't seem to display emoji. My solution is to paste every moon phase emoji.)Excited to see what's next after figuring out the best move in this Chess puzzle.This reminds me of trying to manually construct an Autogram like below. This one is a quote someone else made. I tried to do it myself and it is so hard because the counts keep changing as you write out other counts!Only the fool would take trouble to verify that his sentence was composed of ten a's, three b's"	geluso	9.82618	-6.262404	comment	12.0	86.0	1687880149	-13.947052
28988872	Do ARM compatibility issues still ex	Do ARM compatibility issues still exist?	moneywoes	9.6407585	-5.218217	comment	12.0	72.0	1635175537	-7.784907
29388213	Open source RISC-V GPGPU	Open source RISC-V GPGPU	1ntEgr8	9.262999	-5.502796	story	12.0	207.0	1638239744	-10.536196
34652926	Yeah this isn't quite what happened.	Yeah this isn't quite what happened.  Firstly, Intel didn't start Itanium, HP did, as a successor to their HP Precision line.  I forget how they got together, but it was a collaboration between Intel and HP, but HP started it and had largely the architecture defined before Intel got involved.Secondly, it's true that AMD hammered the nails in the coffin, but AMD wouldn't have mattered if Itanic had been faster, cheap, and on time.  Itanic was a disaster partly because of overly complicated design by committee and partly because of the fundamentally flawed assumption (that you don't need dynamic scheduling, AKA OoO processing).I have an Itanium in the garage, a monument to hubris.UPDATE: I forgot to mention that from the outside it might seem that Intel had a singular vision, but the reality	FullyFunctional	9.518928	-5.4884686	comment	12.0	115.0	1675501025	-7.780056
34662328	"I love these ""rules of thumb"", ""blac"	"I love these ""rules of thumb"", ""black magic sorcery"", and ""best practices"" that grey-haired old wizards pick up.More often than not, they're invalidated by some advancement in either computer hardware or software. Not just ""no longer relevant"", but often counterproductive.Worse still, these internalised tricks and rules are often related to Moore's law scaling, making them exponentially wrong over time. Not in the figurative sense, but a literal one.You see this with people claiming that I'm exaggerating when I say all code should be parallel. Meanwhile AMD is about to sell a 128 core / 256 thread processor. You can have two per host for a staggering 512 hardware threads. Single threaded code is capable of utilising just 0.2% of that machine!A similar ""tuning best practice"" that I still se"	jiggawatts	9.424564	-5.261613	comment	12.0	60.0	1675576262	7.884707
39591727	Young devs won't believe it, but in 	Young devs won't believe it, but in the late 1990s, quite a number of software companies didn’t use source control at all. You just copied source files from/to a central location, and from time to time made a version_x.y.z copy of the source directory.	layer8	8.781363	-6.314022	comment	12.0	51.0	1709566890	-11.720092
36735322	I wonder if they're ever going to de	I wonder if they're ever going to decide that enough emoji is enough, or will continue adding more until every word in the dictionary is an emoji. There have been some ridiculous inclusions in the past years despite more obvious candidates that are still missing.The great thing about emoji used to be the constraints, which made for a clear overview of available emoji and made people use the limited set in creative ways to express different things. Besides the more extraneous options, they never should've started adding things like skin/hair color modifiers imo, sticking to the single yellow/neutral color instead. Counterproductively, that opened up ways for people to not feel represented.	dexwell	9.801687	-6.2630525	comment	12.0	126.0	1689417108	-13.957009
37316919	Applying SRE Principles to CI/CD	Applying SRE Principles to CI/CD	mooreds	9.175513	-6.394221	story	12.0	127.0	1693362271	6.2623725
37415804	Intel announces Arm investment, talk	Intel announces Arm investment, talks up RISC-V	klelatti	9.389189	-5.633348	story	12.0	150.0	1694071968	-10.535532
37532397	Pineapple ONE: open-source 32 bit RI	Pineapple ONE: open-source 32 bit RISC-V CPU that you can make at home	todsacerdoti	9.394898	-5.6280966	story	12.0	481.0	1694844253	-10.4772625
24824378	The Arm64 memory tagging extension i	The Arm64 memory tagging extension in Linux	clktmr	9.856691	-5.656296	story	12.0	85.0	1603096915	8.111228
24906341	<many years ago> when Intel acquired	<many years ago> when Intel acquired Altera, and announced Xeon CPUs with on-chip FPGAs, I was optimistic that eventually they would add FPGAs to more low-end desktop CPUs (or at least Xeons in the sub-$1000 zone). But it never materialized. I'm slightly optimistic this time around too, but I suspect that the fact that Intel didn't do it hints at some fundamental difficulty.	phendrenad2	9.148272	-5.282592	comment	12.0	104.0	1603797807	8.19188
32650402	Yikes... those are some power hungry	Yikes... those are some power hungry chips. Why would a person still buy x86? Compared to ARM, it's inefficient and outdated technology. Buying computers with AMD and Intel chips is like buying a gasoline car when electric cars are the future.	retskrad	9.541088	-5.206422	comment	12.0	45.0	1661867487	-7.776485
32077252	In today's arms race of exploits, yo	In today's arms race of exploits, you need to operate and prepare your interactions with computers with a defined threat scenario. This is never-ending.> Linux creator Linus Torvalds famously rejected such warnings, arguing that such exploits weren’t practical.And I would certainly agree with Linus, here's why:> Retbleed can leak kernel memory from Intel CPUs at about 219 bytes per second and with 98 percent accuracy.Retbleed adds more credence to this idea of impractical-yet-technically-feasible exploits; where do you draw the line? Do you choose to be vulnerable to this 219 bytes per second leak at the cost of 28% CPU overhead? I would imagine, one could toggle on or off the mitigations they'd want with the implications provided in the future via modifying BIOS settings.	gzer0	9.809095	-5.5263133	comment	12.0	83.0	1657669317	7.8892837
32095398	RISC-V Guns for Raspberry Pi, Legacy	RISC-V Guns for Raspberry Pi, Legacy Chips	ystad	9.374931	-5.666203	story	12.0	105.0	1657803066	-10.596456
32187286	So I was recently thinking of playin	So I was recently thinking of playing around with an FPGA for shits and grins.  Try out embedded console emulation and try some basic development stuff and so on.  I'm not super terribly concerned about maximum efficiency/recent node, but a decent number of logic cells would be preferable and ideally a decent output (DP 1.2 or HDMI 2.0), and ethernet might be a plus (but that one is negotiable).  Does anyone have any recommendations for a decent dev board?  Used/ebay is fine, would like to keep it to maybe a couple hundred bucks, or at least like, under $500.My understanding is all FPGA toolchains are a nightmare, and I'm guessing I may have to pirate the software, no chance of me affording a $10k-a-seat license for a toy that probably won't go any farther than a couple nights of tinkering	paulmd	9.091192	-5.329205	comment	12.0	53.0	1658452231	8.359001
22275591	Say Goodbye to CoreOS	Say Goodbye to CoreOS	eaguyhn	9.8720255	-5.7734404	story	12.0	127.0	1581168317	-9.139493
19460470	Can MIPS Leapfrog RISC-V?	Can MIPS Leapfrog RISC-V?	Cieplak	9.422476	-5.6597624	story	12.0	84.0	1553243064	-10.502721
19532587	Ampere EMAG 64bit Arm Workstation	Ampere EMAG 64bit Arm Workstation	robin_reala	9.624682	-5.2082787	story	12.0	49.0	1553987773	-7.7598295
16068118	Vulnerability of Speculative Process	Vulnerability of Speculative Processors to Cache Timing Side-Channel Mechanism	subbu88	9.732332	-5.616033	story	12.0	193.0	1515041311	-6.5060773
16085351	I don’t understand the Intel hate.  	I don’t understand the Intel hate.  It’s not like their engineers are dumb or lazy.  This exploit is very hard to imagine before now.  And it’s there because chip makers were trying to wring out more performance.  It’s unfortunate if anythig.	DougN7	9.456622	-5.260572	comment	12.0	87.0	1515248478	7.8251214
16124381	We centralized a decentralized versi	We centralized a decentralized version control system.	nezza-_-	8.8031845	-6.3776236	comment	12.0	94.0	1515683953	-11.738052
16130649	Intel Security Issue Update: Initial	Intel Security Issue Update: Initial Performance Data Results for Client Systems	taspeotis	9.477655	-5.2819867	story	12.0	86.0	1515735678	7.8434844
16747928	Intel won’t release Spectre patches 	Intel won’t release Spectre patches for some older chips after all	awiesenhofer	9.585269	-5.53776	story	12.0	143.0	1522781830	7.755867
16838207	The Fossil distributed version contr	The Fossil distributed version control system	lisper	8.83343	-6.403796	story	12.0	108.0	1523725438	8.004528
17369215	How useful is SIMD on CPU these days	How useful is SIMD on CPU these days given that most of the touted original applications (back in the MMX SSE days) have been moved over to GPUs?	seanmcdirmid	9.839358	-5.9727287	comment	12.0	50.0	1529614587	8.108263
17824575	24-core CPU and I can’t type an emai	24-core CPU and I can’t type an email – part two	MBCook	9.558601	-5.2274055	story	12.0	249.0	1534998301	7.824457
21066097	Reverse engineering a custom CPU fro	Reverse engineering a custom CPU from a single program	nneonneo	9.751538	-5.4942546	story	12.0	339.0	1569369704	-7.3085423
21186522	Linus Torvalds Shares His Thoughts o	Linus Torvalds Shares His Thoughts on Microsoft’s New-Found Love for Linux	Alupis	9.457857	-5.7812696	story	12.0	52.0	1570486239	-8.237817
21241087	I am still shocked at how little rep	I am still shocked at how little repercussions Intel has actually faced for this fisco. This must have cost companies like AWS millions of dollars in lost capacity/early upgrades--why have they not made a serious effort to get these issues under control and why are they not rapidly losing market share to AMD and Arm?	morpheuskafka	9.277123	-5.201604	comment	12.0	62.0	1570982520	7.768593
21337410	Rotary Jails	Rotary Jails	Clepsydra	9.723832	-6.416078	story	12.0	76.0	1571855474	-3.2608302
21373487	The Story of the Team Behind the 650	The Story of the Team Behind the 6502	sohkamyung	9.531598	-5.308248	story	12.0	232.0	1572223831	-7.4200897
39097504	The Itanic Saga: The History of VLIW	The Itanic Saga: The History of VLIW and Itanium	blakespot	9.518108	-5.6056437	story	12.0	80.0	1705968885	8.347937
17988873	Can someone explain why it's a big d	Can someone explain why it's a big deal they are using an x86 chip? It seems ARM is the standard in the mobile world, but I'm not sure what the motivations might have been for the change or if this has drawbacks that make it so surprising.	chrisfosterelli	9.599143	-5.236228	comment	12.0	128.0	1536944401	-7.7200174
18084223	"His feelings about two of the ""sides"	"His feelings about two of the ""sides"" of this argument are so recognisable. I'm generally in favour of going out of my way e.g. to make minorities feel more welcome to compensate for the natural tendency to make them feel less welcome. However, the nastiness of some of the people in ""my camp"" pushes me away from it and makes me reluctant to openly support that cause.In effect, they're really counterproductive, and the only reason Linus is now openly on ""their side"" (for lack of a term that better describes what I mean), is because the ""other side"" also was really nasty, pushing him away from them.It took a while for me to realise what privileges I have had that some others have not. The first step to realising that was being open to that even being possible, and shouting contests do not en"	Vinnl	9.272961	-5.8953743	comment	12.0	143.0	1538054876	4.357785
18235798	Pijul: A Rust based distributed vers	Pijul: A Rust based distributed version control system	philonoist	8.858801	-6.4274783	story	12.0	209.0	1539745394	7.918208
29793977	AMD Ryzen 6000 Series Mobile CPUs Fe	AMD Ryzen 6000 Series Mobile CPUs Feature Microsoft's Pluton Security	no_time	9.422844	-5.210695	story	12.0	107.0	1641298667	7.8610096
30358036	Unikernels	Unikernels	seeker89	9.916705	-6.2410297	story	12.0	129.0	1645004927	-12.400023
30603600	The AMD Branch (Mis)Predictor Part 2	The AMD Branch (Mis)Predictor Part 2: Where No CPU Has Gone Before	gbrown_	9.369788	-5.283677	story	12.0	152.0	1646763683	7.8663387
30685894	The biggest part of this announcemen	The biggest part of this announcement is the bios updates for 300 series motherboards in my opinion. People who bought into the AM4 ecosystem 5 years ago should be able to update to these brand new zen3 cpus.Have we ever had such a long lived socket and chipset before? Supporting brand new products for 5 years?	kemotep	9.296061	-5.197482	comment	12.0	92.0	1647355143	7.864245
13051555	x86 is the worst ISA. If you want to	x86 is the worst ISA. If you want to play with assembler without feeling a desire to stab yourself and end it all, I recommend ARM.Or go learn Z80, x86's weird, 8-bit cousin (it had a 16-bit version, but it sold poorly), which had a greater emphasis on backwards compatability (you can run code from the original 8080 on a Z80, unchanged), and is nicer to work with (because it wasn't extended in unticipated directions far beyond its original capabilities, while keeping fetishistic backwards compatability by stacking hack on top of hack on top hack. It also didn't have memory segmentation, otherwise known as The Worst Thing.)There are only two common reasons to learn Z80 assembler, though: to program the Gameboy (which runs on a modified Z80 with all the cool instructions removed), and to pro	qwertyuiop924	9.667663	-5.459503	comment	12.0	108.0	1480281117	-7.440539
13210711	RISCVEMU: 128 bit RISC-V emulator	RISCVEMU: 128 bit RISC-V emulator	ingve	9.422154	-5.6700783	story	12.0	170.0	1482145693	10.848057
27603531	The Death of Alpha on NT (1999)	The Death of Alpha on NT (1999)	xattt	9.581047	-5.313104	story	12.0	62.0	1624450443	-7.9793315
22517319	Undocumented CPU behavior: analyzing	Undocumented CPU behavior: analyzing undocumented opcodes on Intel x86-64 (2018) [pdf]	luu	9.807221	-5.598237	story	12.0	205.0	1583662579	7.787587
23113551	What's Intel SGX Good For?	What's Intel SGX Good For?	vladivstok	9.477909	-5.2123265	story	12.0	86.0	1588937158	-5.88776
33129355	Intel, SiFive Demo High-Performance 	Intel, SiFive Demo High-Performance RISC-V on Intel 4	ac29	9.379888	-5.634015	story	12.0	152.0	1665196962	-10.568915
33565697	Rendering Doom with Emojis	Rendering Doom with Emojis	CrociDB	9.811582	-6.249597	story	12.0	81.0	1668195613	-13.961442
33924944	Knight’s Landing: Atom with AVX-512	Knight’s Landing: Atom with AVX-512	rbanffy	9.497009	-5.4556475	story	12.0	75.0	1670611370	-10.562969
26507525	MOnSter 6502	MOnSter 6502	replyifuagree	9.507888	-5.236706	story	12.0	121.0	1616101349	-7.43101
26734552	AMD and Xilinx Stockholders Overwhel	AMD and Xilinx Stockholders Overwhelmingly Approve AMD’s Acquisition of Xilinx	zdw	9.130978	-5.2535844	story	12.0	275.0	1617850217	8.055705
26812616	Linus's initial reaction: https://lk	Linus's initial reaction: https://lkml.org/lkml/2021/4/14/1099I am pleased that these are all addressable things. We'll see!	steveklabnik	9.31043	-5.8755627	comment	12.0	88.0	1618432113	4.189046
26814480	Is it me (and have I been hiding/asl	Is it me (and have I been hiding/asleep under a rock for a long time) or is Linus' tone vastly (and pleasantly) different from what his previous persona is known to be?I actually loved (I mean really loved) reading the response as it not only was encouraging but also highly respectful and almost glowing with a trained sort of nuance!  Just wow!	flashgordon	9.276885	-5.8912125	comment	12.0	44.0	1618443571	4.2368417
26910724	x86 is dead - first in consumer, the	x86 is dead - first in consumer, then in cloud.It is hard to see to me how this ends any other way.  The creative class (us) will quickly have largely all ARM computers within 4 years.Its not hard to see from there how software will be even more optimized for ARM variants than x86 and that the scale of both mobile and consumer computing will push x86 out of the datacenter slowly as old software that relies on x86 is retired over the next decade.People won't want to develop on x86 and deploy to ARM.  ARM is more power efficient which is important in the data center too.  We already scale by the core in the cloud, so why not just heap a few more cheap cores on if we need more to match x86 (which right now looks like we might not).Tell me how I am wrong.	outside1234	9.629027	-5.2330403	comment	12.0	73.0	1619148926	-7.782383
26969595	30 Years of Linux: An Interview with	30 Years of Linux: An Interview with Linus Torvalds	AdmiralAsshat	9.441785	-5.816337	story	12.0	155.0	1619619275	-8.244824
27288079	Google says Rowhammer attacks are ga	Google says Rowhammer attacks are gaining range as RAM is getting denser	valprop1	9.628524	-5.665888	story	12.0	275.0	1622020104	-13.894557
37749511	With durability claims of> 10 millio	With durability claims of> 10 million write/erase cyclesthis is not going to compete with DRAM, which needs to endure trillions of write/erase cycles in its lifetime.Unless they grossly underestimated its durability, a name like UltraFlash would seem more appropriate?!	tromp	9.819293	-5.316574	comment	12.0	93.0	1696323981	8.045411
37851029	AVX10/128 is a silly idea	AVX10/128 is a silly idea	picture	9.464014	-5.526182	story	12.0	136.0	1697062667	-3.7895849
37979787	First 96-Core AMD Zen 4 Threadripper	First 96-Core AMD Zen 4 Threadripper Tests Show Utter Domination over Intel	thelastgallon	9.304357	-5.213912	story	12.0	112.0	1698015104	7.939428
38125379	Enable ARMv9 Memory Tagging Extensio	Enable ARMv9 Memory Tagging Extension (MTE) on Pixel 8	transpute	9.799163	-5.4224987	story	12.0	111.0	1698994522	8.135517
38128823	Is CI even worth it anymore? To be h	Is CI even worth it anymore? To be honest, I prefer testing on my local machine. This seem unecessary.	stephenturban	9.273147	-6.358508	comment	12.0	40.0	1699019803	6.0858893
38589981	Is RISC-V ready for HPC? Evaluating 	Is RISC-V ready for HPC? Evaluating the 64-core Sophon SG2042 RISC-V CPU	anewhnaccount2	9.356333	-5.7153454	story	12.0	102.0	1702195582	-10.562263
14709691	Linux Torvalds: Every developer thin	Linux Torvalds: Every developer thinks that their code is so special and magical	ekianjo	9.423836	-5.8240795	story	12.0	20.0	1499342584	-8.167511
15738895	> Despite his unreasonable tone, Lin	> Despite his unreasonable tone, Linus is a hugely reasonable person.Is this a legitimate leadership technique? I mean I presume the intention is to have a kind of megaphone which will get the attention of a widely dispersed, highly independent group of people. The ultimate cat herding weapon. On the other hand I find it really unpleasant and feel like there must be better ways.	scandox	9.281146	-5.8934464	comment	12.0	74.0	1511172167	4.270149
23479756	Jeez - how is this supposed to work 	Jeez - how is this supposed to work with OS scheduling? The charm of big.little on arm is that the instruction sets between the big and the little cores are identical. Now the OS has to pin processes based on support for different instructions? What a ridiculous nuisance. Intel really couldn’t discipline themselves just this once and actually implement the same instructions, even if in microcode, for both types of cores?Are the little cores’ instructions at least a complete subset of the big cores’? Are we going to have some ridiculous situations where the little cores are completely pegged but the OS can’t migrate their processes off to the big core?Or do kernel programmers need to start chasing Intel and trap/software implement every single future AVX8192AESNISSSE instruction Intel jams 	CountSessine	9.6600485	-5.5462265	comment	13.0	132.0	1591810341	8.108806
23498454	The problem is that both hardware an	"The problem is that both hardware and software are garbage.Spectre/Meldown & friends are just the tip of an iceberg. We have layers & layers of indirection/abstraction everywhere. We have hardware that lies and tells you that it has certain properties when in reality it doesn't (example: sector sizes in hard drives/NVMs, processors still pretending that they behave like PDP-11), we have hardware that is flat out broken. We try to fix those issues in software.But in the software, we have another dump of workarounds, dependencies, abstractions with a sprinkle of backward compatibility. We are now creating ""minimalist"" applications with a fraction of functionality of the software from 30 years ago but using so many layers that total amount of code used to make it work is many orders of magnit"	Tom4hawk	9.656635	-5.4792676	comment	13.0	72.0	1591964188	7.8905954
23834483	AMD Announces Ryzen Threadripper Pro	AMD Announces Ryzen Threadripper Pro: Workstation Parts for OEMs Only	pulse7	9.294665	-5.1971574	story	13.0	133.0	1594745886	7.9705076
23927992	The History, Status, and Future of F	The History, Status, and Future of FPGAs	skovorodkin	9.103893	-5.322366	story	13.0	170.0	1595516262	8.30913
24091991	Cheap FPGA Development Boards	Cheap FPGA Development Boards	homarp	9.099672	-5.3134475	story	13.0	124.0	1596898176	8.347497
24167292	What's Going On with Intel?	What's Going On with Intel?	diskmuncher	9.311872	-5.1946483	story	13.0	81.0	1597482622	7.7705913
24259382	"""Reference applications including me"	"""Reference applications including media player, tuner, navigation, web browser, Bluetooth, WiFi, HVAC control, audio mixer and vehicle controls""It is nice to have a alternative to Google's car spy software, but I am suspicious of any ECU containing malloc. If ECUs gets so complicated that they require Linux maybe there just is a fundamental design issue.(EDIT: ECU as in Electric control unit, not only the Engine control unit.)"	rightbyte	9.446178	-5.5162144	comment	13.0	74.0	1598266292	8.231951
24354083	XLS: Accelerated HW Synthesis	XLS: Accelerated HW Synthesis	victor82	9.166672	-5.446156	story	13.0	122.0	1599059957	7.393728
13641156	Intel Shows 2.5D FPGA at ISSCC	Intel Shows 2.5D FPGA at ISSCC	mrb	9.212666	-5.2527103	story	13.0	256.0	1487046689	8.0739355
13678522	Why do you need that in desktop env?	Why do you need that in desktop env? What's the usecase when it can be beneficial to have expensive ECC RAM instead of the ordinary one?I was always thinking that ECC can prevent blue screens/kernel faults, but I haven't seen those in years on my laptop without ECC.	krzyk	9.470996	-5.5198784	comment	13.0	90.0	1487488326	8.262312
14095308	Memory bandwidth	Memory bandwidth	deafcalculus	9.892857	-5.2854576	story	13.0	170.0	1491978868	8.052859
14229651	Show HN: Emojielog – A simple emojie	Show HN: Emojielog – A simple emojie journal application	Mechasparrow	9.804916	-6.2597013	story	13.0	24.0	1493514195	13.030907
14233750	In the undergraduate level computer 	In the undergraduate level computer architecture class I just finished, it was pretty much stated as fact that the simpler design and fixed instruction format of RISC based architectures makes them much more suitable for pipelining, and hence leads to better performance than those based on CISC. Why are x86/64 processors used for most high performance applications then?	aviraldg	9.511727	-5.6633577	comment	13.0	94.0	1493585325	-10.473445
14451705	I doubt we'll be seeing desktop ARM 	I doubt we'll be seeing desktop ARM systems any time soon, especially high end workstation or enthusiast systems.The problem is that the ARM64 architecture is completely different from x86-64, which almost every desktop application is compiled for exclusively.Remember when Microsoft launched an ARM Surface? It had a special version of Windows, and almost nothing would run on it, as very few applications are compiled for Windows on ARM.	nicktelford	9.717126	-5.2027407	comment	13.0	62.0	1496230925	-7.7913427
14520323	Malware Uses Obscure Intel CPU Featu	Malware Uses Obscure Intel CPU Feature to Steal Data and Avoid Firewalls	vezycash	9.522424	-5.228452	story	13.0	198.0	1497002436	7.7092614
14553764	Introducing Highlights	Introducing Highlights	isabellat	9.106185	-6.2763195	story	13.0	76.0	1497457101	12.660037
31282949	AMD doubles the number of CPU cores 	AMD doubles the number of CPU cores it offers to Chromebooks	scrummy	9.458641	-5.1911316	story	13.0	128.0	1651827302	7.856733
31440204	This doesn't seem to be the best-res	This doesn't seem to be the best-researched article out there.If they thought Itanium was bad, they should have looked into the i860. Itanium was an attempt to fix a bunch of the i860 ideas. i860 quickly went from a supercomputer chip to a cheap DSP alternative (where it had at least the hope of hitting more than 10% of its theoretical performance).Intel iAPX 432 was preached as the second coming back in the 80s, but failed spectacularly. The i960 was take 2 and their joint venture called BiiN also shuttered. Maybe Rekursiv would be worthy of a mention here too.We now know that core 2 dropped all kinds of safety features resulting in the Meltdown vulnerabilities. It also partially explains why AMD couldn't keep up as these shortcuts gave a big advantage (though security papers at the time 	hajile	9.473665	-5.3678074	comment	13.0	72.0	1652994565	-7.8510423
31662978	Quick Look at Rosetta on Linux	Quick Look at Rosetta on Linux	gok	9.837588	-5.355433	story	13.0	172.0	1654660116	7.5214114
25589081	Zhaoxin KaiXian x86 CPU Tested	Zhaoxin KaiXian x86 CPU Tested	luu	9.493438	-5.221364	story	13.0	84.0	1609383327	7.793464
25749490	Huawei ExaGear: x86_64 apps on Arm 6	Huawei ExaGear: x86_64 apps on Arm 64-bit Linux systems	my123	9.726617	-5.2920094	story	13.0	143.0	1610470160	-7.835547
26391324	I wish the barriers to using new arc	I wish the barriers to using new architectures were lower.For instance, suppose binaries were typically distributed in a platform-agnostic format, like LLVM intermediate representation or something equivalent.  When you run your program the first time, it's compiled to native code for your architecture and cached for later use.I realize I've sort of just re-invented Javascript.  But what if we just did away with native binaries entirely, except as ephemeral objects that get cached and then thrown away and regenerated when needed?  It seems like this would solve a lot of problems.  You could deprecate CPU instructions without worrying about breaking backwards compatibility.  If a particular instruction has security or data integrity issues, just patch the compiler not to emit that instructi	elihu	9.754082	-5.5637927	comment	13.0	57.0	1615236559	-7.6918325
36068682	Jails on FreeBSD	Jails on FreeBSD	rodrigo975	9.754118	-6.3829775	story	13.0	143.0	1685007460	10.492353
36073379	Intel mulls cutting 16 and 32-bit su	Intel mulls cutting 16 and 32-bit support, booting straight into 64-bit mode	rwmj	9.689221	-5.3426046	story	13.0	167.0	1685034900	-7.8626447
29649066	FreeBSD Jails for Fun and Profit (20	FreeBSD Jails for Fun and Profit (2020)	kettunen	9.750735	-6.386127	story	13.0	280.0	1640180093	10.48347
34855134	Vramfs – GPU VRAM based file system 	Vramfs – GPU VRAM based file system for Linux	pabs3	9.906791	-5.381335	story	13.0	243.0	1676789026	8.328656
39407328	Options for genuine ECC RAM on the d	Options for genuine ECC RAM on the desktop in (early) 2024	ingve	9.46941	-5.47686	story	13.0	115.0	1708155946	8.194178
39590303	Young devs won't believe it, but unt	"Young devs won't believe it, but until the early 2000s, most companies used source control systems that forced you to LOCK any file on a centralized repo before you were allowed to modify it (MS's SourceSafe, ClearCase, Perforce)... This was often the case even if you just wanted to touch a file locally for some experimentation... insane.So, at a customer site (while I was doing consulting for them), I couldn't stand it anymore (I had been using CVS myself since 1997). So I installed SVN to work on their project and showed it to the team. I was called an ""irresponsible engineer""... ""Modifying files without locking is a crazy! You don't do that on real engineering teams!""The open-source world was at least 10 years ahead."	ferd	8.816977	-6.348528	comment	13.0	97.0	1709559483	-11.779081
36888667	Data diffs: Algorithms for explainin	Data diffs: Algorithms for explaining what changed in a dataset (2022)	winkywooster	8.879185	-6.4183297	story	13.0	204.0	1690429411	9.859227
37053357	Once again it seems clear that runni	Once again it seems clear that running code from two security domains on the same physical processor cores is just not possible to get right, and we should probably just stop doing it.There are really only two common cases for this anyway. VMs and JavaScript.For VMs we just need to give up on it. Dedicate specific cores to specific VMs or at least customers.For JavaScript it’s a bit harder.Either way, we need to not be giving up performance for the the normal case.	Negitivefrags	9.837165	-5.5792108	comment	13.0	105.0	1691519009	8.152658
24474541	Save ARM	Save ARM	baal80spam	9.551507	-5.2248645	story	13.0	91.0	1600114205	-7.732609
19166326	A RISC-V CPU for $8	A RISC-V CPU for $8	heywire	9.392019	-5.6197944	story	13.0	230.0	1550180563	-10.544454
19524434	Intel lays off hundreds of tech admi	Intel lays off hundreds of tech administrators	mykowebhn	9.31325	-5.1989455	story	13.0	163.0	1553885419	7.700881
16131536	Either I'm too old or I don't get ho	"Either I'm too old or I don't get how to use Emojis. I only use them to add tone or express my feelings or attitude so I use maybe five to ten most common emoticons. Eggplant, ice cream or almost any kind of other ""factual"" icons are completely useless to me. I would rather have more readable and expressive emoticons than hundreds of useless figurines. It would be nice to see if people indeed use them.My favorite emoticons are Koloboks [1][2]. They are very expressive and adorable. There were also static versions of the emoticons and they were almost equally as expressive.[1] http://www.en.kolobok.us/content_plugins/gallery/gallery.php...
[2] http://www.en.kolobok.us/content_plugins/gallery/gallery.php"	ivanb	9.781028	-6.262436	comment	13.0	76.0	1515748549	-13.963854
16508921	Linus Torvalds Rants	Linus Torvalds Rants	turrini	9.29552	-5.8932714	story	13.0	127.0	1520078487	4.171581
17497417	This is exactly what I thought would	This is exactly what I thought would happen when I switched off of CoreOS earlier this year. I recently switched back[0] since according to their blog post[1] Container Linux would live and not be replaced by their Atomic project...  I thought I was a fool for overreacting.I don't want OpenShift, it looks like a bloated clusterfuck. I don't want Atomic either -- Container Linux had all the pieces I needed and not much else, along with innovation just where it was needed (the update engine).It might not mean much to Red Hat in the economical sense right now but Red Hat has gotten a red strike in my book from this. I won't forget. Corporate double speak/renegging on acqui-hired goodwill normally doesn't get me so riled up but man if my jimmies aren't rustled right now.What does everyone else	hardwaresofton	9.814856	-6.0198493	comment	13.0	66.0	1531225825	-9.191972
17727140	Christopher Domas: Hardware Backdoor	Christopher Domas: Hardware Backdoors in X86 CPUs	summarity	9.695674	-5.328931	story	13.0	218.0	1533840009	7.7528443
17815582	Ask HN: ARM-based Linux laptop busin	Ask HN: ARM-based Linux laptop business?	mr_puzzled	9.549654	-5.2510858	story	13.0	17.0	1534902309	-7.8361044
17824644	I can think of two theories:1. It's 	I can think of two theories:1. It's a mistake.  Someone in legal got carried away.2. The performance of the L1TF mitigation is so awful that someone at Intel thought it would be a good idea to try to keep the performance secret.(Which leads to option 2b.  The performance of the L1TF mitigation is so awful that somemone at Intel is afraid that Intel could be sued as a result, and they want to mitigate that risk.)I would guess it's #1.	amluto	9.450581	-5.255695	comment	13.0	64.0	1534999434	7.756984
21337451	Can anyone attribute the recent surg	Can anyone attribute the recent surge in AMD performance to recent hiring blitz or some other shift? I know they were struggling and trying out new things with bulldozer modules and trying to compartmentalize as much as possible. It reminds me of when Intel hired all those Israeli engineers who went back to the PIII design and miniaturized it, gaining performance by throwing away years of work on the P4.Was there any of this at play recently at AMD?	zelon88	9.251507	-5.1936507	comment	13.0	96.0	1571855741	7.855578
21710313	Instructions per cycle: AMD Zen 2 ve	Instructions per cycle: AMD Zen 2 versus Intel	another	9.265535	-5.2256427	story	13.0	108.0	1575525849	7.873032
17879444	Linux Kernel Developer Criticizes In	Linux Kernel Developer Criticizes Intel for Meltdown, Spectre Response	CrankyBear	9.61213	-5.5025177	story	13.0	454.0	1535654210	7.8552537
18000981	Maybe this will finally end the myth	"Maybe this will finally end the myth that ""you can be rude and insulting as long as you're right"" that people seem to attribute to Linus's outbursts"	Leszek	9.275629	-5.894586	comment	13.0	81.0	1537130519	4.284001
18121227	PiDP-11: Recreating the PDP-11/70	PiDP-11: Recreating the PDP-11/70	jws	9.832141	-5.4260597	story	13.0	68.0	1538485874	-7.5396414
18146750	Asynchronous (Clockless) CPU	Asynchronous (Clockless) CPU	peter_d_sherman	9.396208	-5.2300353	story	13.0	168.0	1538730760	8.148334
18333220	Spatial: A High Level Programming La	Spatial: A High Level Programming Language for FPGAs	ArtWomb	9.104863	-5.3935633	story	13.0	137.0	1540862088	8.414102
18392834	New Lower-Cost, AMD-Powered M5a and 	New Lower-Cost, AMD-Powered M5a and R5a EC2 Instances	jeffbarr	9.435662	-5.2888613	story	13.0	244.0	1541524184	7.896011
29793353	Android in Docker without QEMU/emula	Android in Docker without QEMU/emulator	PascalW	9.625381	-6.40508	story	13.0	226.0	1641292372	10.072895
30605927	Is it actually more powerful than a 	"Is it actually more powerful than a top of the line threadripper[0] or is that not a ""personal computer"" CPU by this definition? I feel like 64 cores would beat 20 on some workloads even if the 20 were way faster in single core performance.[0]https://www.amd.com/en/products/cpu/amd-ryzen-threadripper-3..."	willcipriano	9.436678	-5.2285523	comment	13.0	142.0	1646769614	7.929714
12536211	Ways to implement computer languages	Ways to implement computer languages on 6502s (1994)	6502nerdface	9.713147	-5.5684943	story	13.0	132.0	1474334030	-7.3923993
13362324	Debugging mechanism in Intel CPUs al	Debugging mechanism in Intel CPUs allows seizing control via USB port	ivank	9.519994	-5.243099	story	13.0	278.0	1484019002	7.7270966
27530074	Execute Docker Containers as QEMU Mi	Execute Docker Containers as QEMU MicroVMs	DarkPlayer	9.639205	-6.360617	story	13.0	178.0	1623859521	10.049751
35479265	Ampere Altra Dev Kit has launched 32	Ampere Altra Dev Kit has launched 32, 64, 80 core arm64 processor	mariuz	9.54576	-5.259047	story	13.0	132.0	1680853980	-7.7818685
28298148	Honeycomb LX2 ARM Workstation: An Al	Honeycomb LX2 ARM Workstation: An Alternative to x86	ekianjo	9.710514	-5.250381	story	13.0	98.0	1629866941	-7.742374
22475036	Ampere Altra 80-core ARM CPU	Ampere Altra 80-core ARM CPU	cameron_b	9.5319605	-5.2557487	story	13.0	183.0	1583248468	-7.812476
22946701	I'd love to know if there's any use 	"I'd love to know if there's any use to this beyond FPGAs. This just seems to be another case of porting the complexity of RTL design into C syntax so that they can claim they have an HLS product that compiles C to gates. It's not C to gates if you had to rewrite all your C to manually specific the bit widths of every single signal. I really wonder how far we can keep going before the naming police break into Intel Headquarters and rename all their marketing material with ""Low Level Synthesis""."	Traster	9.098074	-5.441792	comment	13.0	76.0	1587569932	8.4944515
23221471	Show HN: PullPreview – Deploy previe	Show HN: PullPreview – Deploy previews for any application, on your servers	crohr	9.031993	-6.423781	story	13.0	83.0	1589804974	4.0933824
23263752	VexRiscv is a quadcore, Linux-capabl	VexRiscv is a quadcore, Linux-capable RISC-V softcore for FPGA	homarp	9.381227	-5.647759	story	13.0	174.0	1590089286	-10.521213
33200294	A DRAM Failure	A DRAM Failure	pabs3	9.749374	-5.3734245	story	13.0	95.0	1665729575	8.063973
33346302	The IME gets a lot of hate around he	"The IME gets a lot of hate around here, but let's not get distracted by it: higher-privilege co-processors running code outside the main OS' control is becoming (or already is) the norm everywhere. Intel-based PCs are just one instance of it (and perhaps not even the most egregious one).Most hardware has evolved to effectively run the main OS under a sandbox where it ""thinks"" it is in control, but isn't.A nice talk on this: https://www.youtube.com/watch?v=36myc8wQhLo"	CrLf	9.48526	-5.197462	comment	13.0	82.0	1666802904	7.7866573
33906591	Tell HN: Travis CI is seemingly comp	Tell HN: Travis CI is seemingly compromised (once again)	spondyl	8.855983	-6.345502	story	13.0	160.0	1670497201	-8.766984
26919904	Lindows Click-N-Run (2002)	Lindows Click-N-Run (2002)	ecliptik	9.457101	-5.7125907	story	13.0	49.0	1619216639	9.284584
26954547	Unikraft – Fast, Specialized Unikern	Unikraft – Fast, Specialized Unikernels	nderjung	9.918146	-6.253957	story	13.0	138.0	1619523106	-12.403127
27255727	Saying Goodbye to Typo CI	Saying Goodbye to Typo CI	robin_reala	9.2264595	-6.3654594	story	13.0	137.0	1621784117	-4.913762
27378624	Cores that don’t count [pdf]	Cores that don’t count [pdf]	rajeevk	9.449344	-5.2661695	story	13.0	178.0	1622709983	7.923394
37822082	789 KB Linux Without MMU on RISC-V	789 KB Linux Without MMU on RISC-V	yarapavan	9.405112	-5.6575837	story	13.0	166.0	1696868936	-10.5423975
37911544	SiFive Rolls Out RISC-V Cores Aimed 	SiFive Rolls Out RISC-V Cores Aimed at Generative AI and ML	klelatti	9.374935	-5.658792	story	13.0	151.0	1697526290	-10.575811
37991295	How does macOS manage virtual cores 	How does macOS manage virtual cores on Apple Silicon?	todsacerdoti	9.831896	-5.3046885	story	13.0	237.0	1698093739	-8.083113
38447705	AWS unveils Graviton4 & Trainium2	AWS unveils Graviton4 & Trainium2	skilled	9.504594	-5.1862345	story	13.0	90.0	1701189716	-8.421211
14874850	AMD Threadripper Delidded, with a Mu	AMD Threadripper Delidded, with a Multi-Core Surprise Under the Hood	pantalaimon	9.32984	-5.1999636	story	13.0	119.0	1501255136	7.947131
14875951	Illegal and undocumented instruction	Illegal and undocumented instructions found in every major vendor CPU	uptown	9.709718	-5.426414	story	13.0	130.0	1501262940	7.698965
15114247	What is the motivation for supportin	What is the motivation for supporting MIPS here?I can't think of a single system that runs MIPS instructions.Also, what does this distro do differently from the other 1000+ distos?Why VOID? Why not something else?	cgb223	9.509974	-5.590232	comment	13.0	73.0	1503891147	-10.404981
24933196	[Copying from the other item on this	"[Copying from the other item on this where I was answering a comment about why this is more expensive than a Raspberry Pi]You have to understand why the Raspberry Pi is priced the way it is: it's because it is a side effect of the massive production of Broadcom chips for tablets, phones, embedded, etc. Millions and millions are made. A relatively tiny number of these find their way into developer boards. The economies of scale mean they can be very cheap.RISC-V doesn't have this ... yet ... but there are several Chinese manufacturers currently making millions of chips for consumer devices with those going through foundries right now. So sooner or later the economics will work out for a ""RISC-V Pi"". I'd be surprised if it doesn't exist by 2022.For now this SiFive board is IMHO the best PC-l"	rwmj	9.375887	-5.599706	comment	13.0	100.0	1603994264	-10.598185
25032374	XuanTie C906 based Allwinner RISC-V 	XuanTie C906 based Allwinner RISC-V processor to power $12 Linux SBC's	todsacerdoti	9.385912	-5.634459	story	13.0	140.0	1604908787	-10.547802
38993552	Fast RISC-V-based scripting back end	Fast RISC-V-based scripting back end for game engines	fwsgonzo	9.421066	-5.7142353	story	13.0	159.0	1705260286	-10.575923
31839177	It's absurd to claim they're doing t	"It's absurd to claim they're doing this for any other reason beyond deceptive marketing. It's like an advertising version of a dark pattern: a decision which has a sheen of reasonableness, but is clearly designed to deceive and exploit your customers.Nowhere else in the computer is the base-10 version standard, and it shouldn't be. The sentence ""a 32-bit CPU register can address up to 4 gigabyte of memory"" is clearly reasonable, the sentence ""a 32-bit CPU register can address up to 4.29497... gigabytes of memory"" is not. It's not just ram though: all basic data types (bytes, ints, floats, pointers, SIMD registers, whatever) are sized to powers of 2, having a storage unit that is not is insanity. Or, to bring it back to hard drives: what's the max file size of a file stored on a FAT32 files"	OskarS	9.931949	-5.199919	comment	13.0	76.0	1655919384	8.076677
31849488	Hardening the registers: A cascading	Hardening the registers: A cascading failure of edge induced fault tolerance	matrix	9.794637	-5.602023	story	13.0	137.0	1655994013	8.040224
32381448	Debugging bare-metal STM32 from the 	Debugging bare-metal STM32 from the seventh level of hell	jpieper	9.855989	-5.376158	story	13.0	166.0	1659920499	7.3053007
32473936	man it's always a trip to see how mu	man it's always a trip to see how much of a jerk torvalds could be, even if exasperation is warranted in this context (i have no idea), by god, this is not how you build consensus or a high functioning team	efficax	9.345329	-5.8126326	comment	13.0	84.0	1660590734	3.6121895
22021309	Pijul: a distributed version control	Pijul: a distributed version control system, written in Rust (2019)	tosh	8.871507	-6.4295325	story	13.0	238.0	1578766008	7.9439907
23478789	I'm really curious how they envision	I'm really curious how they envision this working, given the different instruction sets between the main core and the small cores.  That seems like a bit of a nightmare to handle on the OS side of things, unless you turn things in to a two tier environment somehow, and require software (users?) to explicitly opt-in to the small cores somehow.	Twirrim	9.640784	-5.349777	comment	14.0	88.0	1591805702	7.973308
23569648	Micromort	Micromort	benbreen	9.876323	-5.245598	story	14.0	152.0	1592525905	6.540392
24092837	Author here if anyone has questions 	Author here if anyone has questions about the 8086. What part of the 8086 chip should I write about next?	kens	9.635883	-5.396135	comment	14.0	77.0	1596903877	-7.449395
20392239	So IBM buys Red Hat for $34B, of whi	"So IBM buys Red Hat for $34B, of which $20B are borrowed monies.
The debt is priced at 1.05 percentage points above Treasury yield rate [1] which would be somewhere around 3.5%
which puts interest on bond debt at ~$700m every year.Now consider that Red Hat had a net income of $433m. Even if they reach $500 this year, Big Blue will still be $200m short, every year.At the moment, IBM is trading down at -0.5% on an otherwise slight green Nasdaq.Just from these numbers we can conclude that IBM is seeing some pretty significant synergies in the purchase that the market isn't.[1] https://www.barrons.com/articles/ibm-bond-sale-red-hat-51557..."	tontonius	9.904032	-5.422323	comment	14.0	57.0	1562683442	-9.518647
20974405	Build a 6502 Computer	Build a 6502 Computer	ingve	9.5291	-5.299941	story	14.0	224.0	1568501934	-7.4897327
13774116	But it's still losing in every web a	But it's still losing in every web and office single threaded benchmark. EDIT: compared to 7700k that costs about the same	yread	9.613486	-5.226081	comment	14.0	126.0	1488464447	7.947694
14131759	Intel Discontinues the Intel Develop	Intel Discontinues the Intel Developer Forum; IDF17 Cancelled	randta	9.285321	-5.222546	story	14.0	219.0	1492444081	7.712012
14192852	I'm fascinated by people who think e	"I'm fascinated by people who think emoji could someday be a more universal way of communication given all of its inherent ambiguity. My off-the-top-of-my-head example was the prayer emoji, which has popularly been said to be a mistranslation of a purported ""high five"": http://www.deseretnews.com/article/865606309/This-emoji-may-...But as Emojipedia points out, the Unicode definition is ""person with folded hands"". As a Westerner, I'm inclined to associate this with ""prayer"". But since we have the Japanese to largely thank for emoji in the first place, shouldn't this emoji be seen as ""please"" or ""thank you""?http://emojipedia.org/person-with-folded-hands/And if you look at that Emojipedia entry, you start to appreciate the cluaterfuck of things lost in translation. Not only is the gesture of "	danso	9.784361	-6.2678766	comment	14.0	52.0	1493123868	-13.921458
14294514	Merging Maps	Merging Maps	mmastrac	8.832744	-6.436025	story	14.0	51.0	1494270094	9.09203
14456649	Skylake now GA on GCE	Skylake now GA on GCE	boulos	9.309181	-5.2163534	story	14.0	124.0	1496272188	7.8099194
14563780	AMD EPYC 7000 CPUs: 32 cores, 64 thr	AMD EPYC 7000 CPUs: 32 cores, 64 threads, 8 memory channels, 128 PCIe lanes	mrb	9.3247	-5.194528	story	14.0	242.0	1497556086	7.9182353
30739304	Show HN: I made a CLI tool that turn	Show HN: I made a CLI tool that turns pixels into emojis	caramellow	9.802013	-6.2474556	story	14.0	105.0	1647741316	13.032266
30935064	Intel's “Cripple AMD” Function (2019	Intel's “Cripple AMD” Function (2019)	phab	9.250348	-5.226719	story	14.0	294.0	1649266046	7.866408
31322320	Ask HN: Why can’t I use emojis on HN	Ask HN: Why can’t I use emojis on HN?	elpakal	9.802541	-6.2633643	story	14.0	10.0	1652146407	13.023942
26466933	AMD 3rd Gen EPYC Milan Review	AMD 3rd Gen EPYC Milan Review	pella	9.285866	-5.2095103	story	14.0	208.0	1615821106	7.929226
36270150	Show HN: RISC-V core written in 600 	Show HN: RISC-V core written in 600 lines of C89	mnurzia	9.450178	-5.7336464	story	14.0	190.0	1686402489	-10.563193
36377439	Milk-V Duo: A $9 RISC-V Computer	Milk-V Duo: A $9 RISC-V Computer	prabhu-yu	9.399357	-5.6023154	story	14.0	199.0	1687064046	-10.579022
36396891	The least interesting part about AVX	The least interesting part about AVX-512 is the 512 bits vector width	luu	9.513106	-5.6075716	story	14.0	192.0	1687211280	8.026112
36500294	FreeBSD Jails Containers	FreeBSD Jails Containers	vermaden	9.733221	-6.428505	story	14.0	226.0	1687909442	10.443857
29147452	A look at the die of the 8086 proces	A look at the die of the 8086 processor (2020)	guerrilla	9.566055	-5.2606587	story	14.0	217.0	1636362834	-7.5683417
29229614	Eventually, it will be obvious that 	Eventually, it will be obvious that running shared workloads on a single piece of physical hardware has fundamentally unremediatable security implications. This slow recognition is deeply perpendicular with how the current landscape of x86 chips are both manufactured and priced, as well as how cloud providers have structured billions of dollars in DC investment; in other words, they'll down-play it. This will be a massive opportunity for ARM & SoC manufacturers in the coming years, as its far better positioned to offer, for example, a single rack appliance with 64 individual 2-core mini-computers at a price-point competitive with a 128 core x86 rack, as one computer.Computing moves in cycles:- 2000s: gigahertz race on each core- 2010s: increase core counts, multicore everything- 2020s: bac	015a	9.571896	-5.185559	comment	14.0	104.0	1636995871	7.855744
29394571	AWS Graviton 3 Instances	AWS Graviton 3 Instances	Trisell	9.527962	-5.2082896	story	14.0	174.0	1638292583	-8.416456
34483669	Ask HN: Do you use ECC RAM in your h	Ask HN: Do you use ECC RAM in your home/personal workstations?	specktr	9.427935	-5.4868016	story	14.0	24.0	1674431402	8.206289
36641226	ZeroVer: 0-Based Versioning	ZeroVer: 0-Based Versioning	dmitryminkovsky	9.024245	-6.335194	story	14.0	102.0	1688788580	-11.676215
38639206	AMD's New Threadripper Chips Have a 	AMD's New Threadripper Chips Have a Hidden Fuse That Blows When Overclocking	webmaven	9.313728	-5.1933923	story	14.0	82.0	1702543418	7.9696937
39031369	How DOS was able to use most of the 	How DOS was able to use most of the 1 MB address space of the 8086	todsacerdoti	9.882855	-5.452631	story	14.0	144.0	1705515476	-7.5386415
33017160	Intel announces new FPGA families	Intel announces new FPGA families	chclau	9.12767	-5.319958	story	14.0	142.0	1664432999	8.193093
31967385	What if it was possible to have a lo	"What if it was possible to have a local build system that would run tests etc and provide a cryptographically secure hash proving that the tests passed, the build was good, etc then a “centralized” CI system just verified that before permitting merge/deploy.
There’s a lot of hand waving there but it doesn’t seem wildly implausible. 
Local use of containers or something like nixos could provide sufficient protection against the “works on my machine but not in production” problem."	lukeasrodgers	9.27408	-6.4171467	comment	14.0	72.0	1656853278	6.0898013
18971791	Sadly I constantly hear people say t	Sadly I constantly hear people say that you should get an Nvidia card for both Linux and FreeBSD, because the drivers are better. While I'm sure that Nvidias driver a good, it's kinda sad that the attitude is that AMD is a better friend of the open source community, but yeah, we're going with Nvidia.I get why, you have stuff to do and Nvidia performs better, but still it a little annoying.OpenBSD seems to be the only open source operating system that suggests that you get an AMD card (or use Intel integrated graphics).	mrweasel	9.757217	-5.5461836	comment	14.0	77.0	1548186971	8.115009
19009431	Verilog sources for Western Digital'	Verilog sources for Western Digital's open source RISC-V core	obl	9.381869	-5.648137	story	14.0	320.0	1548547633	-10.573181
19911715	CPU.fail	CPU.fail	razer6	9.566891	-5.19733	story	14.0	282.0	1557855550	7.7860174
19937779	Intel vulnerabilities costing 25% CP	Intel vulnerabilities costing 25% CPU performance loss to a cloud provider	samber	9.375973	-5.189071	story	14.0	332.0	1558085087	7.7392426
16065185	This is probably one of the poorest 	"This is probably one of the poorest and most defensive PR pieces I've read from a company in a long time, and it does not really make me sympathetic to them at all.> Intel and other technology companies have been made aware of new security research describing software analysis methods that, when used for malicious purposes, have the potential to improperly gather sensitive data from computing devices that are operating as designed. Intel believes these exploits do not have the potential to corrupt, modify or delete data.This is deceptive. It very quickly acknowledge the confidentiality aspect, but then claims that is ""operating as designed"" and then immediacy try to damage control by pointing out what the exploits cannot do (corrupt/modify/delete).> Recent reports that these exploits are c"	bjornedstrom	9.489028	-5.222936	comment	14.0	81.0	1515013885	7.76551
16073874	More details about mitigations for t	More details about mitigations for the CPU Speculative Execution issue	el_duderino	9.686113	-5.616521	story	14.0	327.0	1515098425	-6.6994324
16829593	Power9 Benchmarks vs. Intel Xeon vs.	Power9 Benchmarks vs. Intel Xeon vs. AMD EPYC Performance on Debian Linux	rbanffy	9.355208	-5.194519	story	14.0	110.0	1523624840	7.8222938
17773918	Linus Torvalds burned the pull reque	Linus Torvalds burned the pull request with STACKLEAK security feature	DyslexicAtheist	9.208207	-5.9447336	story	14.0	43.0	1534421420	4.195682
21168497	RISC V: A new blueprint for micropro	RISC V: A new blueprint for microprocessors challenges the industry’s giants	jkuria	9.381535	-5.6342883	story	14.0	127.0	1570315844	-10.567361
21280459	I wonder what's the good core count 	I wonder what's the good core count for development workstation. While it's obvious that increase from 4 cores to 12 cores is useful, for me it's not obvious that increase from 12 cores to 32 cores is similarly useful.Sure, if I'm compiling huge project from the scratch, every core will be loaded, but that's more suitable for CI machine.For everyday development people usually use incremental compilation and in my experience it's few files. So for me something like 12 cores looks like a golden balance between single core performance and multi core performance (because usually those high-core processors come with low frequency).	vbezhenar	9.557596	-5.3018007	comment	14.0	64.0	1571307247	7.9630017
21303446	Compiling my own SPARC CPU inside a 	Compiling my own SPARC CPU inside a cheap FPGA	ttsiodras	9.578557	-5.4018345	story	14.0	266.0	1571570114	-7.3003836
21628700	Threadripper 3960X Compiles Linux Ke	Threadripper 3960X Compiles Linux Kernel in Under 30 Seconds	zzeder	9.923718	-5.4485354	story	14.0	190.0	1574694455	7.976445
39097124	Intel's next-gen Arrow Lake CPUs mig	Intel's next-gen Arrow Lake CPUs might come without hyperthreaded cores	rbanffy	9.413414	-5.24297	story	14.0	40.0	1705966623	8.072049
18124411	ARM releases free Cortex-M processor	ARM releases free Cortex-M processor cores for FPGAs	Thorondor	9.552933	-5.241531	story	14.0	177.0	1538505551	7.725902
18362905	Intel CPUs impacted by new PortSmash	Intel CPUs impacted by new PortSmash side-channel vulnerability	Aissen	9.568255	-5.4093657	story	14.0	187.0	1541165991	7.77275
29959019	The problem is the AMD PSB functiona	The problem is the AMD PSB functionality in itself. It should be considered malware like the Intel managament engine and thus refused by users. It's a second processor that runs a proprietary firmware signed by the vendor (that the user cannot modify or substitute entirely with a FLOSS alternative) that vendors can use do harm to the user.The AMD PSB can also be used to lock down a processor to enforce secure boot and thus don't let you run an unsigned operating system, i.e. no longer allowing you to run Linux on your machine that comes out of the factory with Windows preinstalled. That would be a very very bad thing.Unfortunately both for Intel and AMD you don't have choices these days. I'm hoping someone develops a processor based on the RISCV architecture (a free architecture that doesn	alerighi	9.48065	-5.2301736	comment	14.0	118.0	1642360998	7.836774
29965381	Real-world stories of how we’ve comp	Real-world stories of how we’ve compromised CI/CD pipelines	usrme	9.221317	-6.429782	story	14.0	265.0	1642417681	6.173283
30068776	Highlights from Git 2.35	Highlights from Git 2.35	ossusermivami	9.064932	-6.284518	story	14.0	258.0	1643091560	12.723471
30387467	Linus Tech Tips is all-in on the cli	Linus Tech Tips is all-in on the clickbait-centric style of YouTube production that is the polar opposite of quality tech journalism. They emphasize exaggerated reactions and silly accidents over the thoughtful and well-prepared content that Ian’s writing is about. Some people love it (obvious from their numbers) but I always feel like it’s a waste of time to watch his videos because it’s 90% entertainment and maybe 10% useful info. Entirely different audiences.So I hope he’s not joining them. It would be great if he formed his own venture instead.	PragmaticPulp	9.288478	-5.809012	comment	14.0	58.0	1645200385	4.133726
12933838	Operation Costs in CPU Clock Cycles	Operation Costs in CPU Clock Cycles	MattHarrington	9.712341	-5.2328167	story	14.0	219.0	1478894732	7.6304364
13208516	32-bit homebrew CPU using 74' series	32-bit homebrew CPU using 74' series logic	peter_d_sherman	9.580444	-5.224347	story	14.0	208.0	1482106132	7.6597934
13514918	PDP-10/its: Incompatible Timesharing	PDP-10/its: Incompatible Timesharing System	protomyth	9.87944	-5.4686003	story	14.0	121.0	1485707904	-7.7238574
13559615	The Gray-1, a homebrew CPU exclusive	The Gray-1, a homebrew CPU exclusively composed of memory	jsnell	9.61766	-5.1970773	story	14.0	293.0	1486128366	7.7370663
27832043	Ascenium wants to reinvent the CPU a	Ascenium wants to reinvent the CPU and kill instruction sets altogether	rbanffy	9.594384	-5.3392954	story	14.0	125.0	1626263405	7.8419724
12281047	Linus Torvalds still wants Linux to 	Linus Torvalds still wants Linux to take over the desktop	dsego	9.39603	-5.8367395	story	14.0	52.0	1471086441	-8.212483
28618102	Spook: Side channel attack which cou	Spook: Side channel attack which could read the memory from password managers	dcu	9.848279	-5.58791	story	14.0	295.0	1632327117	-5.698219
22871331	AMD Claims World’s Fastest Per-Core 	AMD Claims World’s Fastest Per-Core Performance with New EPYC Rome 7Fx2 CPUs	ItsTotallyOn	9.312451	-5.192725	story	14.0	523.0	1586897781	7.864819
22950848	Is MIPS Dead? Lawsuit, Bankruptcy, M	Is MIPS Dead? Lawsuit, Bankruptcy, Maintainers Leaving and More	abawany	9.469176	-5.567889	story	14.0	80.0	1587594160	0.50438935
23295975	Linus Torvalds has switched to AMD	Linus Torvalds has switched to AMD	kdrag0n	9.339195	-5.510241	story	14.0	288.0	1590363593	-8.202341
33295947	RISC in 2022	RISC in 2022	todsacerdoti	9.375579	-5.6994176	story	14.0	184.0	1666418568	-10.606431
33830152	Debunking CISC vs. RISC code density	Debunking CISC vs. RISC code density	mbitsnbites	9.465891	-5.716373	story	14.0	69.0	1669987685	-10.468986
33901114	I don't want to turn a discussion su	I don't want to turn a discussion surrounding layoffs into a lens about the business itself; it sucks to be laid off, and I wish everyone who was impacted great expediency in finding a new role.But I'm going to anyway: I genuinely don't understand how CircleCI is still a business. Every major code repository provider has CI built in. All of the ones I've interacted with (Github Actions & Gitlab) are just as good as CircleCI and in some ways far better (e.g. there's a stellar community of Actions builders on GHA, that can be included with one line; CCI Orbs don't have nearly the same uptake). Pricing is all pretty similar. Some companies want to self-host stuff: JetBrains & Atlassian still own this.Ultimately we left CCI because their stability was unacceptable. While its been quite a few m	015a	8.875438	-6.384222	comment	14.0	75.0	1670451384	1.1939186
26519693	Undocumented x86 instructions in Int	Undocumented x86 instructions in Intel CPUs that can modify microcode	BlackLotus89	9.636918	-5.480624	story	14.0	443.0	1616201018	-7.472439
26668097	Fun fact (not fabricated BECAUSE IT'	Fun fact (not fabricated BECAUSE IT'S APRIL 2ND OVER HERE):Japanese alphabets (kana) doesn't have a concept of upper/lower cases. There are two different types of kanas (round ones and square ones) but they are kind of equal in terms of strength/stress so they can't be used to express anger.People on 2-Channel forum (Japan's 4chan, basically) came up with a brilliant idea, which is to insert a space between each letter so that it looks a bit wider and has an extra oomph.Example:- normal: 今日はいい天気だね。 (it's a fine day, isn't it.)- angry: 今 日 は い い 天 気 だ ね 。 (IT'S A F*KING NICE DAY ISN'T IT)	euske	9.815438	-6.249643	comment	14.0	111.0	1617324822	-13.97334
26733595	lscpu + neofetch = cpufetch	lscpu + neofetch = cpufetch	luke2m	9.384342	-5.6422296	story	14.0	130.0	1617842257	-10.568597
26772151	MiSTer, an open-source FPGA gaming p	MiSTer, an open-source FPGA gaming project	tediousdemise	9.089956	-5.3012133	story	14.0	343.0	1618163989	8.301877
26956573	> AWS Graviton2-based EC2 Instances 	> AWS Graviton2-based EC2 Instances make up 14% of the installed base within AWS> 49% of AWS EC2 instance additions in 2020 are based on Graviton2Surprised at this level of Graviton2 adoption in AWS at this stage. Any clues as to who is using these instances?Edit: Presumably Intel's shrinking Q1 2021 Data Center revenues are partly as a result of this.	klelatti	9.522464	-5.2070985	comment	14.0	66.0	1619534648	-8.318231
27218275	Ampere switching to in-house CPU des	Ampere switching to in-house CPU designs	gautamcgoel	9.442109	-5.208499	story	14.0	284.0	1621494596	7.8395514
27483439	My first Z80 assembly language progr	My first Z80 assembly language program	elvis70	9.71676	-5.5380197	story	14.0	116.0	1623494360	-7.4468946
37734531	32 MiB Working Sets on a 64 GiB mach	32 MiB Working Sets on a 64 GiB machine	nikbackm	9.9227915	-5.324104	story	14.0	170.0	1696226988	7.817617
38077889	Android and RISC-V: What you need to	Android and RISC-V: What you need to know to be ready	tormeh	9.3908615	-5.662826	story	14.0	343.0	1698711128	-10.566217
38553647	Milk-V Pioneer – native RISC-V compu	Milk-V Pioneer – native RISC-V computer	theshrike79	9.388559	-5.635345	story	14.0	95.0	1701932415	-10.614774
14761800	How do people with many CPU cores fi	"How do people with many CPU cores find it helps their day to day, excluding people who run VMs, or do highly parallelisable things as their 80% core job loop (ie you run some form of data.paralellMap(awesomeness) all day)?Does it help with general responsiveness? Do many apps / processes parallalise nicely? Or is it more ""Everything is 99% idle until I need to run that Photoshop filter, and then it does it really fast""?"	SCdF	9.71191	-5.318869	comment	14.0	75.0	1499957928	7.9613676
15472163	Today’s Version Control Tools Are St	Today’s Version Control Tools Are Still Primitive	kartickv	8.882529	-6.3738523	story	14.0	28.0	1507989112	-11.677135
15654860	EPYC Server Configuration	EPYC Server Configuration	ihsw2	9.366864	-5.2381215	story	14.0	102.0	1510163439	7.941256
15742768	Wow all 6th, 7th and 8th gen are all	Wow all 6th, 7th and 8th gen are all vulnerable along with a bunch of Xeon processors. Even the laptop I am typing this on is vulnerable, this is going to be messy. Plus all the fun vulnerabilities like arbitrary code execution, unauthorized access to privileged content. These must be related to the blackhat talk coming up in December about hacking a turned-off computer and running unsigned code on ME [0]. Yep and the two researches doing the talk are the two people credited in this announcement, Mark Ermolov and Maxim Goryachy. Great work by them finding these vulnerabilities and disclosing them, these are the kind of vulnerabilities that the NSA would salivate over.I wonder if this will at all dissuade either Intel or AMD into continuing to make these super privileged processors whose fu	aeleos	9.498842	-5.26467	comment	14.0	85.0	1511208330	7.7623606
23513152	ULX3S: Hackable FPGA that runs Linux	ULX3S: Hackable FPGA that runs Linux on RISC-V	herogreen	9.375433	-5.6321816	story	15.0	205.0	1592085571	-10.557735
23809335	Linus Torvalds on AVX512	Linus Torvalds on AVX512	ykm	9.375246	-5.8380523	story	15.0	140.0	1594535333	-8.181911
20019819	I'm really looking forward to this. 	I'm really looking forward to this. But one issue with current AMD cpu is that you have to buy a desktop GPU even when you are not doing any kind of gaming and such. I know intel iGPU haven't been terribly good but for work they are good enough and is one less part and cheaper to boot. For same performance a Ryzen 3rd gen + gpu might still be cheaper but the price advantage gets reduced.I haven't really seen that mentioned much I wonder why is that. I do love the potential for Zen2 + 7nm. The 65w of 3700x and the high frequency of the 3900X both suggest interesting potential for the future. One could end up seeing that the Ryzen 5, six cores might have higher overclocking headroom.Then there's of course Navi, the first new GPU core in a long long time.	tmd83	9.257058	-5.1889215	comment	15.0	103.0	1558937669	7.914142
20662167	IBM Stops Buybacks to Pay for Red Ha	IBM Stops Buybacks to Pay for Red Hat	mathattack	9.938286	-5.475725	story	15.0	173.0	1565446624	-9.587347
20858458	Dual AMD EPYC 7742 Crushes Quad Inte	Dual AMD EPYC 7742 Crushes Quad Intel Xeon 8180M's in Geekbench 4	rbanffy	9.328762	-5.2027216	story	15.0	239.0	1567424218	7.929587
14265751	NASA: High Performance Fast Computin	NASA: High Performance Fast Computing Challenge	happy-go-lucky	9.902298	-5.2392683	story	15.0	125.0	1493912944	8.030243
14274802	Rediscovering the Intel AMT Vulnerab	Rediscovering the Intel AMT Vulnerability	xorrbit	9.423311	-5.250887	story	15.0	133.0	1494002717	7.772083
31047888	Intel deprecates SGX on Core series 	Intel deprecates SGX on Core series processors	thinkmassive	9.459152	-5.204341	story	15.0	130.0	1650070326	-5.860461
31361858	Ask HN: Asynchronous FPGAs and flowc	Ask HN: Asynchronous FPGAs and flowchart programming	JaCaLet	9.1247425	-5.398501	story	15.0	63.0	1652402526	8.418424
31437033	Google open sourced PSP (hardware cr	Google open sourced PSP (hardware cryptographic offload)	0123456	9.419585	-5.1839924	story	15.0	144.0	1652979083	7.821805
25720531	FPGA dev board that's cheap, simple 	FPGA dev board that's cheap, simple and supported by OSS toolchain	funkaster	9.106782	-5.3161592	story	15.0	275.0	1610316271	8.350635
25843210	Fulfilling the Promise of CI/CD	Fulfilling the Promise of CI/CD	kiyanwang	9.1926155	-6.405754	story	15.0	71.0	1611124730	6.162411
26364697	Linus and Pull Requests (2012)	Linus and Pull Requests (2012)	submagr	9.080266	-6.026611	story	15.0	43.0	1614997896	4.1403775
35539057	Intel Foundry Services and Arm annou	Intel Foundry Services and Arm announce collaboration on SoC design	mepian	9.474286	-5.1869035	story	15.0	438.0	1681304989	-7.7142406
35941183	ARM or x86? ISA Doesn’t Matter (2021	ARM or x86? ISA Doesn’t Matter (2021)	NavinF	9.641612	-5.3999996	story	15.0	222.0	1684096705	-7.73427
35952628	Please do not require AVX support fo	Please do not require AVX support for your software	pavel_odintsov	9.527	-5.506202	story	15.0	45.0	1684175753	7.8594913
36102406	ARM’s Cortex A53: Tiny but Important	ARM’s Cortex A53: Tiny but Important	ingve	9.567921	-5.2059813	story	15.0	264.0	1685265171	7.7436986
36166649	System76's coreboot open firmware ma	System76's coreboot open firmware manages to disable Intel ME for Raptor Lake	airhangerf15	9.501593	-5.223335	story	15.0	278.0	1685720503	7.8066497
36483879	Magit	Magit	swatson741	8.780008	-6.429037	story	15.0	207.0	1687804773	-11.509234
28922140	Version Control for Structure Editin	Version Control for Structure Editing	mepian	8.878654	-6.365009	story	15.0	126.0	1634670209	-11.673847
29150759	How I found a bug in Intel Skylake p	How I found a bug in Intel Skylake processors (2017)	vinnyglennon	9.489641	-5.2726545	story	15.0	295.0	1636387972	7.749808
29261574	Renesas enters FPGA market with the 	Renesas enters FPGA market with the first ultra-low-power, low-cost family	detaro	9.096835	-5.331119	story	15.0	219.0	1637204698	8.356247
34664349	Introduction to FPGAs	Introduction to FPGAs	ingve	9.094248	-5.3409796	story	15.0	145.0	1675599856	8.351926
34775549	The bottom emoji breaks rust-analyze	The bottom emoji breaks rust-analyzer	todsacerdoti	9.822992	-6.2772923	story	15.0	200.0	1676305358	-13.958413
34831547	Oxen.ai: Fast Unstructured Data Vers	Oxen.ai: Fast Unstructured Data Version Control	sbt567	8.874631	-6.3717656	story	15.0	177.0	1676615749	8.313928
34925446	Drag an emoji family with a string s	Drag an emoji family with a string size of 11 into an input with maxlength=10	robin_reala	9.894064	-6.2779503	story	15.0	213.0	1677252668	-13.947399
35011009	Imaging a Hard Drive with Non-ECC Me	Imaging a Hard Drive with Non-ECC Memory – What Could Go Wrong?	robertelder	9.563638	-5.5340858	story	15.0	169.0	1677858006	8.220539
35100297	Disambiguating Arm, Arm ARM, ARMv9, 	Disambiguating Arm, Arm ARM, ARMv9, ARM9, ARM64, AArch64, A64, A78, ...	matt_d	9.697582	-5.412879	story	15.0	313.0	1678479417	-7.6879907
36618650	Canadian judge says thumbs-up emoji 	Canadian judge says thumbs-up emoji amounts to contract acceptance	jbeales	9.766145	-6.259531	story	15.0	48.0	1688661457	-13.928297
36738347	Another World ported to FPGA	Another World ported to FPGA	retro_guy	9.10942	-5.330141	story	15.0	303.0	1689438232	8.388339
37065391	Pentium floating-point division bug 	Pentium floating-point division bug (1994)	whycome	9.716855	-5.620316	story	15.0	111.0	1691599726	7.9596415
37105653	VirGL – A virtual 3D GPU for use ins	VirGL – A virtual 3D GPU for use inside QEMU virtual machines	skibz	9.800749	-5.2410364	story	15.0	243.0	1691888808	-8.255932
25092407	13-Year-Old, Nicholas Sharkey, Creat	13-Year-Old, Nicholas Sharkey, Creates a RISC-V Core	EvgeniyZh	9.379446	-5.697966	story	15.0	201.0	1605363342	-10.611718
25155203	Moving Away from Travis CI	Moving Away from Travis CI	datajeroen	8.853799	-6.4215765	story	15.0	117.0	1605825541	-5.3134656
25344396	A QR code built from Emoji	A QR code built from Emoji	edent	9.830044	-6.249418	story	15.0	74.0	1607431339	13.416442
31933829	For people who still don't get how b	For people who still don't get how bad DIMMs are	tosh	9.737587	-5.215801	story	15.0	46.0	1656602947	8.07894
19330572	DRAM Prices in ‘Freefall’	DRAM Prices in ‘Freefall’	baybal2	9.709926	-5.247423	story	15.0	107.0	1551982907	8.004263
16076047	Update on Meltdown and Spectre	Update on Meltdown and Spectre	jorde	9.621673	-5.545485	story	15.0	209.0	1515119788	7.727353
16094349	PCID is now a critical performance/s	PCID is now a critical performance/security feature on x86	pedro84	9.631201	-5.4431753	story	15.0	164.0	1515380689	7.9658594
17496877	Fedora CoreOS, Red Hat CoreOS, and t	Fedora CoreOS, Red Hat CoreOS, and the future of Container Linux	19h	9.770813	-6.1015506	story	15.0	145.0	1531219119	-9.239822
17517514	Reading that thread is like reading 	Reading that thread is like reading an actual Monty Python plot.Guido van Rossum has given his life for this language and besides the obligatory 'thanks for all the fish' there isn't even a single person who stops the clock to evaluate what went wrong that they pushed out the person that started this all.Instead it's 'kthxbye' and they're already dividing up the cake to see who gets to rule.Not the nicest moment in the history of FOSS, I wonder what kind of a mess will ensue when Linus steps down.	jacquesm	9.313512	-5.885567	comment	15.0	104.0	1531421555	4.2984624
17833829	A2Z: A computer designed and built f	A2Z: A computer designed and built from scratch. Custom CPU on FPGA (2017)	F4HDK	9.166045	-5.3132167	story	15.0	262.0	1535103570	8.240775
21309949	63 Cores Blocked by Seven Instructio	63 Cores Blocked by Seven Instructions	nikbackm	9.545097	-5.314158	story	15.0	480.0	1571641667	7.9765816
17910632	UPDuino: a $9.99 FPGA	UPDuino: a $9.99 FPGA	jamesbowman	9.123912	-5.2676697	story	15.0	297.0	1536080538	8.305773
30004311	MicroShift	MicroShift	wallflower	9.862418	-5.201564	story	15.0	123.0	1642650492	6.323307
12965033	A look back: Bram Cohen vs Linus Tor	A look back: Bram Cohen vs Linus Torvalds (2007)	_qc3o	9.294442	-5.8817916	story	15.0	90.0	1479279051	-8.149131
13213188	Ask HN: What's the value proposition	Ask HN: What's the value proposition of RISC-V?	trelliscoded	9.392892	-5.652997	story	15.0	96.0	1482169032	-10.5694475
13258812	Why emojis are failing to evolve int	Why emojis are failing to evolve into a form of language	suhastech	9.796739	-6.269913	story	15.0	30.0	1482770968	-13.962124
27589531	I only say this half-seriously, but 	"I only say this half-seriously, but that's why I sometimes think that part of any performance test should be ""try to run your software on a Pentium 4"". If it's unusable, go back and optimize some more.But it won't work now, because the whole stack is probably too inefficient."	Ieghaehia9	9.777331	-5.211227	comment	15.0	218.0	1624353291	7.8584185
28349068	Esperanto Champions the Efficiency o	Esperanto Champions the Efficiency of Its 1,092-Core RISC-V Chip	rbanffy	9.363007	-5.648881	story	15.0	148.0	1630260776	-10.570779
22476514	Show HN: InventHub – Visual version 	Show HN: InventHub – Visual version control for electronics design	usamaabid	8.958042	-6.3048854	story	15.0	185.0	1583255992	3.3098319
33106723	IBM swallows Red Hat storage product	IBM swallows Red Hat storage products	ingve	9.9375515	-5.445018	story	15.0	174.0	1665053839	-9.429386
33860648	Nibbler 4 Bit CPU (2013)	Nibbler 4 Bit CPU (2013)	scour	9.47453	-5.210207	story	15.0	194.0	1670206890	-10.204091
33990408	The Death of SRAM?	The Death of SRAM?	_hypx	9.733065	-5.298119	story	15.0	145.0	1671051317	8.012801
26889108	How many x86 instructions are there?	How many x86 instructions are there? (2016)	sandinmyjoints	9.892192	-5.830642	story	15.0	132.0	1619010195	-7.56027
27276671	Arm Announces New Mobile Armv9 CPU M	Arm Announces New Mobile Armv9 CPU Microarchitectures	seik	9.606882	-5.19118	story	15.0	269.0	1621950336	-7.673346
37785920	Gboard Hat Version	Gboard Hat Version	xnx	9.904698	-5.935652	story	15.0	202.0	1696552029	-9.249258
37812556	Mitigations=off considered harmful o	Mitigations=off considered harmful or spurious SIGILL on AMD Zen4	2bluesc	9.287959	-5.2334933	story	15.0	133.0	1696786270	7.927962
14710098	You do not need emoji.You need to co	"You do not need emoji.You need to communicate.  Clear, concise, eloquent, and precise use of english* allows this to occur. The reason that this breaks down is because too often people resort/revert to using slang or not thinking before they write.You end up with text equivalent of 'verbal diarrhea'.I do not know what 99% of those ""pacman"" faces are supposed to mean.  Maybe it's because I'm on the Autistic scale and I have trouble reading expressions, maybe it's because I'm an 'old fart' and these kids need to get off my lawn.I understand that emoji are just a simple evolution from emoticons.  I do not understand why we needed to expand on:=)    or    =(TFA posits that emoji are ""body language"" for internet communication.  If people just wrote what they fucking meant this wouldn't be an is"	VA3FXP	9.78728	-6.26724	comment	15.0	67.0	1499346782	-13.96296
15630076	Unicode is over and it dies over Emo	Unicode is over and it dies over Emoji	stesch	9.881332	-6.2652435	story	15.0	73.0	1509899122	-13.955242
15684225	An ARM killer from IIT-M?	An ARM killer from IIT-M?	prando	9.550034	-5.2152147	story	15.0	187.0	1510546113	-7.6668696
20152534	AMD Zen 2 Microarchitecture Analysis	AMD Zen 2 Microarchitecture Analysis: Ryzen 3000 and EPYC Rome	pella	9.251519	-5.199522	story	16.0	335.0	1560218563	7.880306
20795054	Zen 2 Missives – AMD now delivering 	Zen 2 Missives – AMD now delivering efficiencies that are double that of Intel	olvy0	9.2658415	-5.2099977	story	16.0	402.0	1566762376	7.889694
13678979	Torus development has been stopped a	Torus development has been stopped at CoreOS	Perceptes	9.423638	-5.83222	story	16.0	124.0	1487498214	-8.196554
14192566	Emojipedia.org	Emojipedia.org	nkjoep	9.801568	-6.2631035	story	16.0	80.0	1493120660	-13.95008
14314562	Show HN: Emoji Homepage: Find your E	Show HN: Emoji Homepage: Find your Emoji –  fast and  simple	stanislavb	9.801264	-6.262412	story	16.0	46.0	1494490964	13.031399
14335159	Intel AMT Checker for Linux	Intel AMT Checker for Linux	laamalif	9.410805	-5.238227	story	16.0	227.0	1494761063	7.788688
14386413	A working, transistor-scale replica 	A working, transistor-scale replica of the MOS 6502 microprocessor	cmod	9.440068	-5.1881876	story	16.0	335.0	1495357763	-7.463189
14598081	AMD's Future in Servers: New 7000-Se	AMD's Future in Servers: New 7000-Series CPUs Launched and EPYC Analysis	satai	9.30058	-5.20403	story	16.0	365.0	1497989086	7.9522715
25702161	Apple Fixes Bagel Emoji (2019)	Apple Fixes Bagel Emoji (2019)	Tomte	9.794771	-6.2664127	story	16.0	27.0	1610212462	-13.959515
26438040	Spectre in JavaScript	Spectre in JavaScript	jeffbee	9.770384	-5.62917	story	16.0	229.0	1615569110	7.3935504
35642712	In 1981, Intel released the iAPX 432	In 1981, Intel released the iAPX 432	mepian	9.419945	-5.2688665	story	16.0	175.0	1682009250	7.6439977
36501742	Computerraria: A fully compliant RIS	Computerraria: A fully compliant RISC-V computer inside Terraria	inickt	9.391858	-5.602817	story	16.0	289.0	1687921248	-10.586337
28770907	x86 assembly doesn’t have to be scar	x86 assembly doesn’t have to be scary (2018)	aphrax	9.805133	-5.573432	story	16.0	133.0	1633512128	-7.671913
29444905	English to Emoji – Yandex Translate	English to Emoji – Yandex Translate	uwu	9.816919	-6.260754	story	16.0	87.0	1638657036	-13.975619
39632872	Launch HN: SiLogy (YC W24) – Chip de	Launch HN: SiLogy (YC W24) – Chip design and verification in the cloud	pkkim	9.664028	-5.56484	story	16.0	113.0	1709836702	7.715813
36860326	How much better was DEC Alpha than c	How much better was DEC Alpha than contemporaneous x86? (2020)	stevefan1999	9.612421	-5.371976	story	16.0	96.0	1690280948	-7.987581
37185720	Project idea: host version controlle	Project idea: host version controlled TOS copies from companies to see what changes each time.	kingkongjaffa	8.840845	-6.3832507	comment	16.0	91.0	1692421779	-11.730312
37218879	STM32 family grows to microprocessor	STM32 family grows to microprocessor/Linux level with STM32MP1	unwind	9.713312	-5.256902	story	16.0	107.0	1692680689	7.47341
37433812	Hi! Creator here! I just started hac	Hi! Creator here! I just started hacking on this last night and wasn't expecting to see this on HN already :)It works by taking your prompt and generating an emoji using  https://replicate.com/fofr/sdxl-emoji. Next, I remove the background using https://replicate.com/cjwbw/rembg. Then, click to download and add to slack!It's all open-source, code is here: https://github.com/cbh123/emojiLet me know if you have any questions!	Charlieholtz	9.642217	-6.138346	comment	16.0	66.0	1694182622	9.100949
24455344	I think this is a very bad and short	I think this is a very bad and short-sided deal.ARM is in such a great position currently. There's no reason to sell except that SoftBank is in desperate need of capital. On top of that, Nvidia is likely to be a terrible steward of the IP. Nvidia has a terrible track record of working with other companies, partners, and open source developers. ARM has become a de-facto standard in mobile space, and Nvidia will likely use that position to strong-arm competition. This will push vendors out of ARM and into some alternative ISA. While long-term this might end up being great for RISC-V, it's going to cause a huge fracture in software stacks at the exact WORST time. Finally we're starting seeing huge convergence on ARM in Mobile/Desktop/Server space. One ISA to rule them all! Nope, now Nvidia is	BluSyn	9.173351	-5.2941284	comment	16.0	168.0	1599942506	-10.477913
25150638	Launch HN: Replicate (YC W20) – Vers	Launch HN: Replicate (YC W20) – Version control for machine learning	bfirsh	8.85199	-6.3800993	story	16.0	205.0	1605800711	-11.753649
38870351	AMD proposes an FPGA subsystem user-	AMD proposes an FPGA subsystem user-space interface for Linux	mikhael	9.11288	-5.187843	story	16.0	180.0	1704392191	8.0847225
32138205	DRAM thermal issues reach crisis poi	DRAM thermal issues reach crisis point	rbanffy	9.722415	-5.3627024	story	16.0	198.0	1658151420	8.082331
32298137	RISC-V based single board computers 	RISC-V based single board computers are getting there	bmlw	9.395589	-5.6555586	story	16.0	282.0	1659296371	-10.574813
22266386	64 Core Threadripper 3990X CPU Revie	64 Core Threadripper 3990X CPU Review	pella	9.435711	-5.256791	story	16.0	135.0	1581086644	7.962736
15865504	What Have We Learned from the PDP-11	What Have We Learned from the PDP-11?	davecheney	9.833659	-5.4333625	story	16.0	149.0	1512598352	-7.4884524
16058920	Serious Intel CPU bugs (2016)	Serious Intel CPU bugs (2016)	derek	9.411968	-5.25771	story	16.0	562.0	1514960273	7.7926702
16073667	I'm disheartened by the number of co	"I'm disheartened by the number of comments here who are taking the stance that Intel has idiot designers or that management doesn't care about security.  This attack is very clever and unexpected.  Even though side-channel attacks have been talked about for awhile, even the guy who developed Meltdown was surprised that it worked.  It just seemed like an ""in theory"" security hole, not an exploitable one.AMD isn't vulnerable to Meltdown not because they foresaw this issue, but probably because they simply weren't as aggressive as Intel in allowing speculative execution.  For years people have preferred Intel over AMD cpus due to their performance advantage, due in part to that higher sophistication of their pipeline.Or to recast it, nobody is hating on AMD right now, but AMD CPUs do allow a "	tasty_freeze	9.435271	-5.3549933	comment	16.0	87.0	1515096916	7.8167973
16118858	Meltdown Update Kernel doesnt boot	Meltdown Update Kernel doesnt boot	sz4kerto	9.638302	-5.521131	story	16.0	284.0	1515616890	7.8662605
16133021	Things you must know before you can 	Things you must know before you can understand Meltdown as a developer	captn3m0	9.59149	-5.5033092	story	16.0	235.0	1515767466	7.6648498
16183100	this is excellent, i've been thinkin	this is excellent, i've been thinking about this as well recently.  my goal has been to create a small device/appliance using raspberry pi.  i tried out lots of operating systems: raspbian, ubuntu-mate, ubuntu core, windows iot, fedora, etc.  i needed a lightweight x windows environment, a decent package manager, and modern linux kernel, overall none of these really seemed to match my needs.  basically raspbian was too heavyweight, it was a desktop environment with way too many applications like libre office, etc that i just didn't need.  ubuntu core required the use of snaps which are based on docker, i'm hosting an electron app so that's just overkill, i'm thinking in terms of preserving memory, too since there's only 1g on the rpi 3 model b so everything has to be optimized.  windows io	epynonymous	9.673372	-6.421536	comment	16.0	70.0	1516322617	9.826698
16220017	The new microcode from Intel and AMD	The new microcode from Intel and AMD adds three new features	DoreenMichele	9.523406	-5.358826	story	16.0	421.0	1516763439	-12.294681
16283955	Spectre/Meltdown Pits Transparency A	Spectre/Meltdown Pits Transparency Against Liability	beardicus	9.627324	-5.560922	story	16.0	196.0	1517507577	7.7846065
16582619	Questioning the motive behind the se	Questioning the motive behind the security allegations against AMD	lathiat	9.252555	-5.214082	story	16.0	345.0	1521006054	7.863622
17275797	6502 arithmetic and why it is terrib	6502 arithmetic and why it is terrible	bane	9.606588	-5.458818	story	16.0	91.0	1528591265	-7.4082017
17560594	The bad news:- They changed the gun 	The bad news:- They changed the gun emoji to be a water gun, which has a totally different meaning. This retroactively changes previous writings, changing their meaning. What kind of writing system allows people to change your words after you've written them? Emoji is a trash writing system and an agent of kipplization.- Emoji is controlled by corporations that are concerned with maximizing the value of their platforms which will lead them to a PG13, disneyfied, milquetoast worldview.The good news:- In the entire human history, it has never been easier to create and  publish text, audio, or video works of any kind. The most popular platforms have severe limitations, but it only takes the slightest effort to use other platforms that are uncensored.- There is plenty of free software that can	PowerfulWizard	9.793157	-6.2644925	comment	16.0	104.0	1531936609	-13.96588
17679217	AMD Creates Quad Core Zen SoC with 2	AMD Creates Quad Core Zen SoC with 24 Vega CUs for Chinese Consoles	deafcalculus	9.248794	-5.194344	story	16.0	236.0	1533298757	7.857628
17937133	Intel can’t supply 14nm Xeons, HPE r	Intel can’t supply 14nm Xeons, HPE recommends AMD Epyc	davidgerard	9.306559	-5.197428	story	16.0	328.0	1536349729	7.919644
18282489	Unikernels: No Longer an Academic Ex	Unikernels: No Longer an Academic Exercise?	rumcajz	9.920531	-6.237334	story	16.0	178.0	1540294751	-12.382099
18481267	AMD Discloses Initial Zen 2 Details	AMD Discloses Initial Zen 2 Details	throwaway2048	9.246166	-5.1975265	story	16.0	446.0	1542560144	7.910051
18751260	Build your own bare-metal ARM cluste	Build your own bare-metal ARM cluster	alexellisuk	9.61237	-5.27856	story	16.0	100.0	1545643546	-13.448605
30317317	FPGA Interchange format to enable in	FPGA Interchange format to enable interoperable FPGA tooling	teleforce	9.091856	-5.3821096	story	16.0	259.0	1644707498	8.404972
12775912	Using Rowhammer bitflips to root And	Using Rowhammer bitflips to root Android phones	ryanlol	9.636724	-5.641305	story	16.0	279.0	1477264921	-13.899576
13405772	What Happens to OO When Processors A	What Happens to OO When Processors Are Free? (2015)	mpweiher	9.504431	-5.2686725	story	16.0	196.0	1484507878	7.7458096
12196982	More microbursts are coming	More microbursts are coming	shawndumas	9.795755	-5.1893787	story	16.0	149.0	1469973567	6.556746
28312632	Linux in a Pixel Shader – A RISC-V E	Linux in a Pixel Shader – A RISC-V Emulator for VRChat	PiMaker	9.331907	-5.2439404	story	16.0	428.0	1629971042	-10.116852
22357194	New AMD EPYC-based Compute Engine fa	New AMD EPYC-based Compute Engine family, now in beta	cvallejo	9.279442	-5.1839213	story	16.0	343.0	1582043463	7.952529
22382946	AMD Threadripper 3970X under heavy A	AMD Threadripper 3970X under heavy AVX2 load: Defective by design?	franzb	9.327546	-5.201366	story	16.0	225.0	1582292276	7.9265575
22915831	A Full Break of the Bitstream Encryp	A Full Break of the Bitstream Encryption of Xilinx 7-Series FPGAs	Nokinside	9.127907	-5.3679557	story	16.0	277.0	1587303851	8.444959
33757484	A bug fix in the 8086 microprocessor	A bug fix in the 8086 microprocessor, revealed in the die's silicon	_Microft	9.620908	-5.3218937	story	16.0	365.0	1669501720	-7.563657
26560469	Intel’s New IDM 2.0 Strategy	Intel’s New IDM 2.0 Strategy	addaon	9.478294	-5.224182	story	16.0	122.0	1616533951	-10.469401
27427096	Two Hidden Instructions Discovered i	Two Hidden Instructions Discovered in Intel CPUs Enable Microcode Modification	andrewnicolalde	9.604084	-5.442597	story	16.0	449.0	1623100782	7.720296
37704760	Show HN: RISC-V assembly tabletop bo	Show HN: RISC-V assembly tabletop board game (hack your opponent)	throwaway71271	9.429021	-5.4317636	story	16.0	400.0	1695997535	-10.549252
37791116	EU Grabs ARM for First ExaFLOP Super	EU Grabs ARM for First ExaFLOP Supercomputer	timthorn	9.559356	-5.2146683	story	16.0	154.0	1696601939	-7.579494
37996820	This may add a bit of colour to a te	This may add a bit of colour to a technical debate going on right now in the RISCV Profiles working group. Qualcomm have proposed dropping the C (16-bit compressed instructions) extension from the RV23A profile (effectively the set of things to support if you want a 'standard' high performance RISC-V core). They have two main reasons1. The variable length instructions (currently 16 bit or 32 bit but 48 bit on the horizon) complicate instruction fetch and decode and in particular this is a problem for high performance RISC-V implementations.2. The C extension uses 75% of the 32-bit opcode space, this can be put to better use.They're saying the benefits from the C extension don't outweigh the costs. They're also saying that if you move forward with the C extension in RVA23 now there's no rea	gchadwick	9.502824	-5.766269	comment	16.0	205.0	1698141320	-10.528696
38130677	In Defense of RAM	In Defense of RAM	loteck	9.898022	-5.194327	story	16.0	55.0	1699027165	8.137824
15172328	Searching for the killer app of unik	Searching for the killer app of unikernels	75dvtwin	9.902863	-6.258115	story	16.0	154.0	1504582337	-12.404619
15388870	Intel Gears Up for FPGA Push	Intel Gears Up for FPGA Push	Katydid	9.115846	-5.3299747	story	16.0	146.0	1506987466	0.5486344
23984909	I love ARM	I love ARM	20i	9.555816	-5.230638	story	17.0	90.0	1596015045	-7.784666
24401439	Arm Announces Cortex-R82: First 64-B	Arm Announces Cortex-R82: First 64-Bit Real Time Processor	rbanffy	9.5843315	-5.222066	story	17.0	303.0	1599503461	7.6173515
20524923	Alibaba partner announces 16 core RI	Alibaba partner announces 16 core RISC-V chip	rwmj	9.369956	-5.6524625	story	17.0	294.0	1564059268	-10.587624
14519698	Darpa Funds Development of New Type 	Darpa Funds Development of New Type of Processor	farseer	9.381865	-5.221613	story	17.0	199.0	1496992800	7.5740714
30739866	Verilog Is Weird	Verilog Is Weird	fzliu	9.117682	-5.4819565	story	17.0	162.0	1647747735	8.586102
30757889	Lanai, the mystery CPU architecture 	Lanai, the mystery CPU architecture in LLVM	todsacerdoti	9.640726	-5.398042	story	17.0	287.0	1647887470	-8.487418
25466063	The Ampere Altra Review: 2x 80 Cores	The Ampere Altra Review: 2x 80 Cores Arm Server Performance Monster	sien	9.532964	-5.2515125	story	17.0	274.0	1608290901	-7.761362
25542963	The Genius of RISC-V Microprocessors	The Genius of RISC-V Microprocessors	socialdemocrat	9.390925	-5.6675763	story	17.0	160.0	1608984547	-10.554462
28939287	Alibaba Open Source XuanTie RISC-V C	Alibaba Open Source XuanTie RISC-V Cores, Introduces In-House Armv9 Server Chip	sanatgersappa	9.421719	-5.528731	story	17.0	344.0	1634780477	-10.529657
34239253	Google wants RISC-V to be a “tier-1”	Google wants RISC-V to be a “tier-1” Android architecture	soulbadguy	9.387531	-5.670418	story	17.0	393.0	1672786031	9.420898
34339752	RISC-V SBC VisionFive 2 Officially S	RISC-V SBC VisionFive 2 Officially Shipped	britneybitch	9.390966	-5.5953736	story	17.0	144.0	1673452130	-10.585921
36751399	Undocumented 8086 instructions, expl	Undocumented 8086 instructions, explained by the microcode	kens	9.743616	-5.598165	story	17.0	242.0	1689541577	-7.493356
36841798	Debian riscv64	Debian riscv64	pabs3	9.456217	-5.677655	story	17.0	312.0	1690160781	-10.538902
38781273	Chisel: A Modern Hardware Design Lan	Chisel: A Modern Hardware Design Language	nairboon	9.252041	-5.471995	story	17.0	156.0	1703679518	8.476147
22162762	CacheOut: Leaking Data on Intel CPUs	CacheOut: Leaking Data on Intel CPUs via Cache Evictions	beefhash	9.7780285	-5.5723457	story	17.0	607.0	1580152837	8.042406
19118642	Building a RISC-V PC	Building a RISC-V PC	spystath	9.383758	-5.6358886	story	17.0	345.0	1549659767	-10.559282
16075744	“Intel Core 2 bugs will assuredly be	“Intel Core 2 bugs will assuredly be exploitable from userland code” (2007)	pixelmonkey	9.48757	-5.3008776	story	17.0	325.0	1515115746	7.828327
16344844	Microbe Emoji	Microbe Emoji	tosh	9.798621	-6.2709775	story	17.0	73.0	1518220114	-13.952132
16561806	Show HN: Ecoji, a new base1024 emoji	Show HN: Ecoji, a new base1024 emoji encoding	kturner	9.8042555	-6.2600117	story	17.0	99.0	1520745698	13.037323
17609366	Intel Ditching Hyper-Threading with 	Intel Ditching Hyper-Threading with New Core I7-9700k Coffee Lake Processor	jhack	9.464888	-5.3142304	story	17.0	130.0	1532528048	8.04474
21523772	What are people doing with FPGAs? I'	What are people doing with FPGAs? I'd be really interested in understanding or seeing some cool projects!	djhworld	9.085019	-5.3567514	comment	17.0	59.0	1573652216	8.385932
21533791	Intel disables Hardware Lock Elision	Intel disables Hardware Lock Elision on all current CPUs	my123	9.501682	-5.274303	story	17.0	324.0	1573720415	7.859626
17989562	The art of creating very tiny progra	The art of creating very tiny programs for the 80x86 family of CPUs	kken	9.620642	-5.1875005	story	17.0	176.0	1536949479	-7.406431
18901277	Z80 arithmetic: also surprisingly te	Z80 arithmetic: also surprisingly terrible (2018)	rutenspitz	9.516885	-5.200779	story	17.0	89.0	1547450516	7.024769
30113521	Terminal support for emoji	Terminal support for emoji	willm	9.846743	-6.23828	story	17.0	68.0	1643370843	-13.948121
12673229	Fossil: A decentralized version cont	Fossil: A decentralized version control, bug tracking, and wiki software	Rexxar	8.820459	-6.405262	story	17.0	227.0	1476044453	6.4532585
12863455	Why hardware development is hard, pa	Why hardware development is hard, part 1: Verilog is weird (2013)	yarapavan	9.128611	-5.4715605	story	17.0	112.0	1478176630	8.566432
13101184	Intel Security True Key	Intel Security True Key	Jack5500	9.502757	-5.1963024	story	17.0	63.0	1480877597	7.7605577
13354946	This might be controversial, but I d	This might be controversial, but I don't think you get to be a half decent developer without being a reasonable sysadmin.Maybe my experience is unusual, but I've never worked anywhere that the sysadmins knew more than the developers about how best to run their code in production. And when things go wrong with it how best to find the cause of the issue.And I've never thrown code over a wall without having tested it in a representative environment.The worst sysadmins get in the way of developers. Ones that scale down your CI server to the cheapest, throttled, one the hosting company has, leaving $800/day contract developers waiting for builds that run in 20 seconds on their laptops take nearly an hour. And then try and argue the toss about whether the CI server is cost effective and every fe	cs02rm0	9.332684	-6.4026575	comment	17.0	109.0	1483951771	6.069486
27808470	I don't need to experiment with not 	I don't need to experiment with not using emoji. I am old enough to have a working life before they existed. In those days all online discussions became a huge argument very quickly. Passive-aggressive memos with bosses cc'ed in flew about constantly. In-person meetings were hastily convened on a regular basis to sort things out. Usually all that needed sorted out was a stupid misunderstanding, and the root cause was usually a misreading of tone followed by an emotional overreaction somewhere in the chain of emails.My 18-year old son, who I mostly communicate through text messages, went cold on me recently. I assumed he was angry about something so I called him. No, he had decided to give up using 'childish' emoji. I asked him to reconsider.I am firmly of the opinion that emoji are incredi	sambeau	9.786726	-6.2620144	comment	17.0	134.0	1626081247	-13.974771
27914513	The FPGA Designer Who Didn't Get the	The FPGA Designer Who Didn't Get the Job	PaulHoule	9.091937	-5.354141	story	17.0	94.0	1626919852	8.375322
12240386	Apple and the Gun Emoji	Apple and the Gun Emoji	firloop	9.798345	-6.2618065	story	17.0	59.0	1470526604	-13.960534
12304046	Ask HN: Why are modern Intel CPUs no	Ask HN: Why are modern Intel CPUs not getting a lot more cores?	trapperkeeper79	9.476463	-5.197038	story	17.0	40.0	1471435925	7.913712
35312960	Open-source high-performance RISC-V 	Open-source high-performance RISC-V processor	burakemir	9.3925085	-5.633516	story	17.0	262.0	1679826767	-10.548927
28221109	Show HN: Sturdy – online-first versi	Show HN: Sturdy – online-first version control focused on collaboration	zegl	8.875348	-6.3502884	story	17.0	94.0	1629295847	-11.715269
28401971	Apple Exploring RISC-V, Hiring RISC-	Apple Exploring RISC-V, Hiring RISC-V ‘High Performance’ Programmers	mikevm	9.390093	-5.6178145	story	17.0	164.0	1630660206	-10.546642
28416557	An Emoji from 1803	An Emoji from 1803	donohoe	9.808721	-6.261311	story	17.0	120.0	1630773571	-13.972224
22452343	64 bit OS Raspberry Pi4 Benchmarks	64 bit OS Raspberry Pi4 Benchmarks	tosh	9.751932	-5.257061	story	17.0	258.0	1583003410	7.6707015
38287095	The push to save the Itanium archite	The push to save the Itanium architecture in Linux	rwmj	9.535986	-5.524514	story	17.0	123.0	1700124396	-7.7048793
38429727	PiDP-11	PiDP-11	rcarmo	9.805061	-5.311178	story	17.0	148.0	1701074394	-7.5430784
15272721	Why we started CoreOS	Why we started CoreOS	philips	9.905247	-5.6634374	story	17.0	168.0	1505697642	-9.100621
15641592	MINIX: ​Intel's hidden in-chip opera	MINIX: ​Intel's hidden in-chip operating system	jugalps	9.573324	-5.2272873	story	17.0	286.0	1510039799	7.7583137
15656931	Game Over We Have Obtained Fully Fun	Game Over We Have Obtained Fully Functional JTAG for Intel CSME via USB DCI	panny	9.589385	-5.190377	story	17.0	291.0	1510174568	-5.2587686
23689419	Ampere’s Product List: 80 Cores, up 	Ampere’s Product List: 80 Cores, up to 3.3 GHz at 250 W; 128 Core in Q4	rbanffy	9.483706	-5.21982	story	18.0	170.0	1593520885	7.8190665
20214320	i386 architecture will be dropped st	i386 architecture will be dropped starting with Ubuntu 19.10	jcastro	9.704339	-5.292422	story	18.0	130.0	1560872509	-7.7636476
13643025	Pijul – A free and open source distr	Pijul – A free and open source distributed version control system	dgellow	8.819351	-6.4119487	story	18.0	259.0	1487075137	13.785304
13686787	Asus Prime X370-PRO specs suggest AM	Asus Prime X370-PRO specs suggest AMD Ryzen processors may support ECC memory	en	9.401207	-5.4807544	story	18.0	128.0	1487595012	8.178072
14516150	Why Does Microsoft Still Offer a 32-	Why Does Microsoft Still Offer a 32-bit OS?	ingve	9.8702345	-5.2118397	story	18.0	54.0	1496947248	-7.9757404
31644990	Running Intel Binaries in Linux VMs 	Running Intel Binaries in Linux VMs with Rosetta	gok	9.829725	-5.3329535	story	18.0	387.0	1654544118	7.6469564
31764722	How fast can a 6502 transfer memory?	How fast can a 6502 transfer memory?	xmyatniyx	9.520162	-5.2944174	story	18.0	190.0	1655378653	7.51139
25486446	The Acorn Archimedes and the first A	The Acorn Archimedes and the first ARM processor	furcyd	9.588851	-5.218984	story	18.0	174.0	1608474958	-7.77801
36223283	“csinc”, the AArch64 instruction you	“csinc”, the AArch64 instruction you didn’t know you wanted	jandeboevrie	9.740078	-5.7268915	story	18.0	226.0	1686116519	-7.751026
28996500	A bug that doesn’t exist on x86: Exp	A bug that doesn’t exist on x86: Exploiting an ARM-only race condition	stong1	9.862487	-5.6702905	story	18.0	291.0	1635223632	-7.6961555
29483655	Intel updates mysterious ‘software-d	Intel updates mysterious ‘software-defined silicon’ code in the Linux kernel	flipbrad	9.469428	-5.210708	story	18.0	210.0	1638964142	7.713884
29521506	PDP-11 Booting	PDP-11 Booting	rdpintqogeogsaa	9.823253	-5.46782	story	18.0	221.0	1639236532	-7.5312595
34544295	Intel discontinues pathfinder for RI	Intel discontinues pathfinder for RISC-V program	klelatti	9.412478	-5.69524	story	18.0	96.0	1674812582	-10.584845
39580076	Scaleway launches RISC-V servers	Scaleway launches RISC-V servers	enz	9.381783	-5.680378	story	18.0	139.0	1709463692	-10.365523
37046973	Terminal Support for Emoji	Terminal Support for Emoji	willm	9.850349	-6.243326	story	18.0	80.0	1691491075	-13.947973
24808207	ARM chips have an instruction with J	ARM chips have an instruction with JavaScript in the name	kdeldycke	9.706659	-5.3817143	story	18.0	406.0	1602920704	-7.723401
24964601	The new pricing model for Travis CI	The new pricing model for Travis CI	reaperhulk	8.86548	-6.4158053	story	18.0	141.0	1604288062	-5.4032555
25159704	What do RISC and CISC mean in 2020?	What do RISC and CISC mean in 2020?	socialdemocrat	9.404581	-5.695854	story	18.0	201.0	1605874380	-10.553115
38640406	Barcelona Supercomputing Center pres	Barcelona Supercomputing Center presents Sargantana: new open-source RISC-V chip	pimterry	9.388678	-5.629666	story	18.0	375.0	1702554937	-10.580266
38724327	Intel plans spinoff of FPGA unit	Intel plans spinoff of FPGA unit	ChuckMcM	9.109942	-5.330639	story	18.0	139.0	1703182668	8.2235
32983406	Zen4's AVX512 Teardown	Zen4's AVX512 Teardown	dragontamer	9.277358	-5.250576	story	18.0	415.0	1664201875	7.932248
22233113	AMD Threadripper 3990X 64-Core beats	AMD Threadripper 3990X 64-Core beats dual Xeon Platinum 8280 in benchmark leak	signa11	9.330089	-5.2067513	story	18.0	277.0	1580799643	7.950131
19063719	Mixed feelings. On the one hand, Ita	Mixed feelings. On the one hand, Itanium (as a platform) was batshit insane, impossible to write good compilers for and the pinnacle of Intel overengineering. Good riddance.On the other hand, Itanium was ugly, but had its charm and uniqueness. Itanium is what EFI was first developed for. Itanium is where the C++ ABI got started.Itanium being discontinued further reduces mainstream CPUs to the most boring, safe designs possible: IA32/amd64. ARM was kinda quirky (conditional execution, barrel shifter), but those were slowly neutered (by introducing Thumb), and then totally thrown out of the window with aarch64. SPARC is dead. PA-RISC is dead. RISC-V is new and promising, but is also the most pragmatic and safe design of an ISA ever. The Mill CPU is interesting, but is underfunded and I don't	q3k	9.540803	-5.5457687	comment	18.0	138.0	1549123999	-7.817661
19911277	MDS: Microarchitectural Data Samplin	MDS: Microarchitectural Data Sampling side-channel vulnerabilities in Intel CPUs	sirmc	9.7039175	-5.5231013	story	18.0	256.0	1557853407	7.8330493
15801044	Western Digital Plans to Ship More T	Western Digital Plans to Ship More Than One Billion RISC-V Cores a Year	deepnotderp	9.391269	-5.597822	story	18.0	371.0	1511900323	-10.506025
16067322	Intel was aware of the chip vulnerab	Intel was aware of the chip vulnerability when its CEO sold off company stock	MollyR	9.293992	-5.2155004	story	18.0	468.0	1515030554	7.744404
16343054	Anatomy of a Ceph meltdown	Anatomy of a Ceph meltdown	panic	9.593466	-5.544363	story	18.0	147.0	1518203990	8.381433
17390827	Intel and the Danger of Integration	Intel and the Danger of Integration	ingve	9.331486	-5.209028	story	18.0	225.0	1529915550	7.7155013
17611047	Ask HN: Does anyone have something n	Ask HN: Does anyone have something negative to say about RISC-V?	kiriakasis	9.3675585	-5.7003493	story	18.0	36.0	1532539533	-10.618642
17697901	The AMD Threadripper 2 Teaser: Pre-O	The AMD Threadripper 2 Teaser: Pre-Orders Start Today, Up to 32 Cores	srinikoganti	9.371211	-5.2353783	story	18.0	188.0	1533566057	7.9429636
17852876	Open source RISC-V implemented from 	Open source RISC-V implemented from scratch in one night	guigg	9.394431	-5.684585	story	18.0	272.0	1535390865	-10.585461
18232641	Apple Fixes Bagel Emoji	Apple Fixes Bagel Emoji	Tomte	9.80215	-6.2665334	story	18.0	56.0	1539719635	-13.960657
12951503	Compromising a Linux desktop using 6	Compromising a Linux desktop using 6502 opcodes on the NES	scarybeast	9.585364	-5.3571086	story	18.0	355.0	1479144634	-7.528632
22315346	64 Core Threadripper 3990X CPU Revie	64 Core Threadripper 3990X CPU Review	smacktoward	9.416419	-5.240675	story	18.0	187.0	1581568171	7.971432
22859706	Clocking a 6502 simulator to 15GHz	Clocking a 6502 simulator to 15GHz	scarybeast	9.503266	-5.2457743	story	18.0	176.0	1586810010	7.7865553
33360171	Which emoji scissors close (2020)	Which emoji scissors close (2020)	philshem	9.800856	-6.2620516	story	18.0	759.0	1666888618	-13.951797
26864213	PiDP-11 – Recreating PDP-11/70 with 	PiDP-11 – Recreating PDP-11/70 with Raspberry Pi	todsacerdoti	9.835146	-5.4030156	story	18.0	116.0	1618847818	-7.5553637
37887341	BeagleV-Ahead open-source RISC-V sin	BeagleV-Ahead open-source RISC-V single board computer	rapnie	9.415044	-5.586489	story	18.0	200.0	1697350333	-10.555584
14235483	VHDL or Verilog?	VHDL or Verilog?	chclau	9.11192	-5.5023203	story	19.0	115.0	1493611260	8.589837
25663729	A Look at the CPU Security Mitigatio	A Look at the CPU Security Mitigation Costs Three Years After Spectre/Meltdown	zdw	9.597766	-5.4903154	story	19.0	285.0	1609973163	7.7618966
35716455	CISC-y RISC-ness	CISC-y RISC-ness	Amorymeltzer	9.388808	-5.7054195	story	19.0	91.0	1682527080	-10.573722
36407850	Milk-V Mars: RISC-V credit card size	Milk-V Mars: RISC-V credit card size SBC	vmoore	9.414395	-5.5624185	story	19.0	112.0	1687283636	-10.5410795
34945086	Please help improve Magit	Please help improve Magit	pmoriarty	8.806961	-6.4305415	story	19.0	226.0	1677415388	-11.494664
39658787	Tenstorrent unveils Grayskull, its R	Tenstorrent unveils Grayskull, its RISC-V answer to GPUs	Brajeshwar	9.213924	-5.2599616	story	19.0	260.0	1710076503	-8.570492
36666782	We replaced Firecracker with QEMU	We replaced Firecracker with QEMU	hugodutka	9.917391	-5.540794	story	19.0	409.0	1688998504	-8.328502
37315802	Intel shows 8 core 528 thread proces	Intel shows 8 core 528 thread processor with silicon photonics	NavinF	9.393595	-5.221352	story	19.0	496.0	1693353365	7.7199373
24932558	The Heart of RISC-V Development Is U	The Heart of RISC-V Development Is Unmatched	guerby	9.36912	-5.7009845	story	19.0	252.0	1603990626	-10.622053
25026070	macOS file diff app, Kaleidoscope, a	macOS file diff app, Kaleidoscope, acquired by Letter Opener GmbH	dplgk	8.920379	-6.397094	story	19.0	84.0	1604846660	-11.635618
25124988	Emojis paved the way for UTF-8 every	Emojis paved the way for UTF-8 everywhere	velmu	9.890925	-6.2566257	story	19.0	217.0	1605627586	-13.947841
25185816	Using Emojis in Mathematical Notatio	Using Emojis in Mathematical Notation	rmeertens	9.860901	-6.2735	story	19.0	24.0	1606132917	-13.953089
38684295	How many CPU cores can you use in pa	How many CPU cores can you use in parallel?	itamarst	9.587529	-5.379515	story	19.0	183.0	1702915440	8.00563
39031555	How to Design an ISA	How to Design an ISA	eatonphil	9.585817	-5.5355024	story	19.0	144.0	1705516425	-7.6999874
32740653	NASA selects SiFive and makes RISC-V	NASA selects SiFive and makes RISC-V the go-to ecosystem for future missions	georgelyon	9.373655	-5.6846776	story	19.0	792.0	1662487070	-10.601787
22147522	AWS Graviton2	AWS Graviton2	yarapavan	9.489202	-5.199075	story	19.0	188.0	1579975005	-8.434985
19218036	Travis CI Is Laying Off Senior Engin	Travis CI Is Laying Off Senior Engineer Staff	kaycebasques	8.8575	-6.4040203	story	19.0	304.0	1550767174	-5.4004316
16110750	Intel CEO: Patches will come to 90% 	Intel CEO: Patches will come to 90% of chips in the next week	elektor	9.447968	-5.28224	story	19.0	155.0	1515536927	7.7511945
16138304	The Intel flaw exposed something int	The Intel flaw exposed something interesting:We could get a >50% performance boost by ignoring security.Think about that. 1.5x - 2x boost, on a single core. That's like doubling a CPU's clock speed, except more powerful since it involves caching memory (which is usually the bottleneck, not raw horsepower).What would the TempleOS of CPUs look like, I wonder?We ought to have the option of running workloads on such CPUs. Yes, they're completely compromised, but if you're running a game server you really don't have to care very much. Most data is ephemeral, and the data that isn't, isn't usually an advantage to know.Being able to run twice the workload as your competitors on a single core is a big advantage. You saw what happened when performance suddenly dropped thanks to the patch.	shawn	9.527868	-5.314121	comment	19.0	110.0	1515818554	7.735449
16818066	Could somebody point me to a technic	"Could somebody point me to a technical explanation of why it's sometimes non trivial to just compile your app against x86-64 and call it a day?For example, something I encounter every day is Visual Studio and it's helper processes being 32 bit. Because Visual Studio regularly, even on the latest 15.7 preview shits the bed with OutOfMemoryExceptions on our large solution, I'm inclined to rage ""why don't they just make it 64 bit? If it could just load more into memory it could get past this indexing hurdle and give me back the UI"". But I also understand that if it was that simple they would have done it by now.Something else, that I understand more, is the LabVIEW RT and FPGA modules only working on 32 bit LabVIEW. I would assume it's related to the compiling and deploying to the 32 bit ARM/"	bonoetmalo	9.880201	-5.374501	comment	19.0	112.0	1523508440	-7.9288144
17244089	AMD Reveals Threadripper 2: Up to 32	AMD Reveals Threadripper 2: Up to 32 Cores, 250W, X399 Refresh	gnufied	9.330896	-5.223955	story	19.0	340.0	1528254757	7.9514956
17503501	Arm kills off its anti-RISC-V site a	Arm kills off its anti-RISC-V site after own staff revolt	rch	9.389225	-5.658788	story	19.0	312.0	1531269735	-10.567548
17750051	Honest q: What home-use workstation 	Honest q: What home-use workstation would use 32 cores? (Excluding home labs or servers).	karangoeluw	9.537512	-5.1890388	comment	19.0	126.0	1534168341	7.8591695
17749738	AMD Threadripper 2990WX 32-Core and 	AMD Threadripper 2990WX 32-Core and 2950X 16-Core Review	MikusR	9.318614	-5.2017827	story	19.0	322.0	1534165760	7.8785224
21394678	Unfork()	Unfork()	salgernon	9.91654	-6.207518	story	19.0	568.0	1572409277	-12.347555
21567556	Sourcetrail, interactive source expl	Sourcetrail, interactive source explorer, is now free and open-source	egraether	8.796079	-5.9684935	story	19.0	359.0	1574106919	-11.371405
21608807	Does anybody else take a project a _	Does anybody else take a project a _lot_ less seriously when all of their documentation and commit messages are plastered with emojis? I feel like I can't create a cohesive narrative in my mind when every sentence ends with a unicorn or a rainbow or a volcano.	ukyrgf	9.770128	-6.278121	comment	19.0	109.0	1574449454	-13.964859
30058739	Funny enough, I decided to play with	Funny enough, I decided to play with FreeBSD for personal projects in 2020. I gave up and I am reverting all my servers to Linux in 2022, for the opposite of the reasons mentioned in this article.* Lack of systemd. Managing services through shell scripts is outdated to me. It feels very hacky, there is no way to specify dependencies, and auto-restarts in case of crashes. Many FreeBSD devs praise launchd, well... systemd is a clone of launchd.* FreeBSD jail are sub-optimal compared to systemd-nspawn. There are tons of tools to create freebsd jails (manually, ezjail, bastillebsd, etc…) half of them are deprecated. At the end all of your jails end up on the same loopback interface, making it hard to firewall. I couldn't find a way to have one network interface per jail. With Linux, debootstra	acatton	9.753328	-6.393744	comment	19.0	227.0	1643037801	10.556864
30247022	Unikraft is a fast, secure and open-	Unikraft is a fast, secure and open-source Unikernel Development Kit	nderjung	9.933842	-6.243317	story	19.0	192.0	1644251325	13.681905
13210195	Piwik 3.0.0	Piwik 3.0.0	nachtigall	8.813958	-6.2990427	story	19.0	159.0	1482135278	13.713532
12296974	Fake Linus Torvalds' Key Found in th	Fake Linus Torvalds' Key Found in the Wild, No More Short-IDs	demiol	9.326545	-5.9095826	story	19.0	701.0	1471350485	3.802978
28077479	Build your own SPARC workstation	Build your own SPARC workstation	marcodiego	9.91573	-5.5498395	story	19.0	139.0	1628187493	-7.9497066
28442430	Intel CEO: Clients Want Custom x86-B	Intel CEO: Clients Want Custom x86-Based SoCs	rbanffy	9.482255	-5.1947775	story	19.0	82.0	1631003775	7.76784
23310031	How do you measure nuclear warhead y	How do you measure nuclear warhead yield with a PDP-11?	segfaultbuserr	9.812886	-5.4485555	story	19.0	133.0	1590494545	-7.516899
33084508	RISC-V Laptop now available	RISC-V Laptop now available	thebetatester	9.375703	-5.639663	story	19.0	154.0	1664907578	-10.570269
33326858	The RISC Deprogrammer	The RISC Deprogrammer	g0xA52A2A	9.443953	-5.6935735	story	19.0	84.0	1666678193	-10.561113
27001694	I've been saying this from the start	"I've been saying this from the start: the well of issues is infinitely deep as soon as you decide that multiple tenants running on the same physical hardware inferring something about another is a vulnerability. I assert, but cannot rigorously prove, that it is not possible to design a CPU such that execution of arbitrary instructions has no observable side-effects, especially if the CPU is speculating.I don't know what that spells for cloud hosting providers - maybe they have to buy a lot more CPUs so every client can have their own, or commission a special ""shared"" SKU of CPU that doesn't have any speculative execution - but I know for me, if I have untrusted code running on my CPU, I've already lost. I could then care less about information leakage between threads.We're going to wind up"	akersten	9.721597	-5.5034046	comment	19.0	133.0	1619830092	7.7281413
14752446	27000 errors in the Tizen operating 	27000 errors in the Tizen operating system	matthewwarren	9.353587	-5.2674756	story	19.0	178.0	1499867088	7.8613153
14819256	Emacs and Magit	Emacs and Magit	tangue	8.844069	-6.4244184	story	19.0	274.0	1500631548	-11.436796
15089678	Rules for new FPGA designers	Rules for new FPGA designers	jsnell	9.093752	-5.3608665	story	19.0	190.0	1503579274	8.371831
23613995	About the Rosetta Translation Enviro	About the Rosetta Translation Environment	loun	9.806216	-5.3843265	story	20.0	221.0	1592920796	7.5782356
23906841	Why Do We Have Dev Rels Now?	Why Do We Have Dev Rels Now?	shahsyed	8.93727	-6.0653734	story	20.0	67.0	1595340145	9.2665825
20474494	A Cold Take on IBM, Red Hat and Thei	A Cold Take on IBM, Red Hat and Their Hybrid Cloud	pinewurst	9.934275	-5.383874	story	20.0	174.0	1563488441	-9.32423
20546955	RISC Is Unscalable	RISC Is Unscalable	signa11	9.370727	-5.703197	story	20.0	192.0	1564313029	-10.602079
20640148	AMD Rome Second Generation EPYC Revi	AMD Rome Second Generation EPYC Review: 2x 64-core Benchmarked	ksec	9.314	-5.2006783	story	20.0	525.0	1565219245	7.9184103
20969459	Is chroot a security feature?	Is chroot a security feature?	katzeilla	9.758616	-6.4330573	story	20.0	88.0	1568446500	-14.033765
14282978	Open-source chip RISC-V to take on c	Open-source chip RISC-V to take on closed x86, ARM CPUs	jumpkickhit	9.41513	-5.60615	story	20.0	354.0	1494114738	-10.541147
14518189	x86: Approaching 40 and still going 	x86: Approaching 40 and still going strong	anonymfus	9.742036	-5.410146	story	20.0	153.0	1496966858	-7.7149334
14559087	Is the x86 Architecture Sustainable?	Is the x86 Architecture Sustainable?	AshleysBrain	9.66964	-5.3055625	story	20.0	109.0	1497521369	-7.7536144
14686277	I found a bug in Intel Skylake proce	I found a bug in Intel Skylake processors	testcross	9.458158	-5.288265	story	20.0	587.0	1499063636	7.831003
29427449	The big idea around unikernels	The big idea around unikernels	signa11	9.923752	-6.2331	story	20.0	124.0	1638515593	-12.381471
34126239	Non-ECC memory corrupted my hard dri	Non-ECC memory corrupted my hard drive image [video]	zeristor	9.56057	-5.534086	story	20.0	129.0	1671967037	8.2207365
24431939	AMD Announces Ryzen “Zen 3” and Rade	AMD Announces Ryzen “Zen 3” and Radeon “RDNA2” Presentations for October	rbanffy	9.243827	-5.187013	story	20.0	158.0	1599743026	7.8445573
32747908	The Case for the /usr Merge (2012)	The Case for the /usr Merge (2012)	goranmoomin	8.872722	-6.41945	story	20.0	137.0	1662538099	9.176444
33017680	Intel Failed Science	Intel Failed Science	jensgk	9.297902	-5.1887116	story	20.0	136.0	1664438122	7.8177676
32235895	Tangential, but I can hardly be the 	Tangential, but I can hardly be the only one who thinks emoji are stuck in a preteen mindset, with poop being the naughtiest thing expressible. Which serious language has no words for sex, drugs and the tragedies that haunt a human life?	kieckerjan	9.796024	-6.266107	comment	20.0	103.0	1658825706	-13.954897
19063540	Intel to Discontinue Itanium 9700 ‘K	Intel to Discontinue Itanium 9700 ‘Kittson’ Processor, the Last of the Itaniums	ch_123	9.495786	-5.452937	story	20.0	193.0	1549122306	-7.7479305
16126940	The Making of Apple’s Emoji	The Making of Apple’s Emoji	Doubleguitars	9.797802	-6.2646756	story	20.0	261.0	1515698746	-13.933089
16691857	Windows 7 patch for Meltdown enabled	Windows 7 patch for Meltdown enabled arbitrary reads and writes in kernel memory	romac	9.785067	-5.623971	story	20.0	545.0	1522178308	8.0231
17037862	Multiple OS Vendors Release Security	Multiple OS Vendors Release Security Patches After Misinterpreting Intel Docs	ingve	9.520429	-5.262194	story	20.0	300.0	1525950762	7.7719626
17587635	Why Intel will never let owners cont	Why Intel will never let owners control the ME	hlandau	9.470129	-5.2203674	story	20.0	212.0	1532278133	7.786953
21521472	More Intel speculative execution vul	More Intel speculative execution vulnerabilities	wolf550e	9.679533	-5.625442	story	20.0	640.0	1573624575	7.822467
39191899	Linus Torvalds flames Google kernel 	Linus Torvalds flames Google kernel contributor over filesystem suggestion	alexcroox	9.473674	-5.8560004	story	20.0	65.0	1706631436	-8.297327
13606576	Arch Linux pulls the plug on 32-bit	Arch Linux pulls the plug on 32-bit	kxait	9.935526	-5.2605467	story	20.0	149.0	1486645212	-8.418097
27770159	The historical significance of DEC a	The historical significance of DEC and the PDP-7, -8, -11 and VAX	lproven	9.860984	-5.4191723	story	20.0	134.0	1625739543	-7.4711747
33597012	The plague of emoji insertion in Fre	The plague of emoji insertion in French docs	bibelo	9.799511	-6.255151	story	20.0	185.0	1668444850	-13.956497
38161215	FPGA Dev Boards for $150 or Less	FPGA Dev Boards for $150 or Less	cushychicken	9.116645	-5.2924137	story	20.0	182.0	1699270400	8.28669
38260935	The Linux kernel has been accidental	The Linux kernel has been accidentally hardcoded to a maximum of 8 cores	sl_	9.743306	-5.2992125	story	20.0	110.0	1699953607	8.003885
23752829	Exciting Days for ARM Processors	Exciting Days for ARM Processors	diehunde	9.58605	-5.1937695	story	21.0	145.0	1594070092	-7.7011757
13874844	Show HN: An HTML/CSS/JS toggle switc	Show HN: An HTML/CSS/JS toggle switch with happy and sad emojis	chrisgannon	9.797152	-6.2622733	story	21.0	202.0	1489569770	13.039056
14233296	How Many X86-64 Instructions Are The	How Many X86-64 Instructions Are There Anyway?	rocky1138	9.854971	-5.8156486	story	21.0	207.0	1493579533	-7.548433
30740433	Addressing Criticism of RISC-V Micro	Addressing Criticism of RISC-V Microprocessors	nnx	9.397291	-5.654379	story	21.0	176.0	1647754643	-10.544618
35596748	Booting Modern Intel CPUs	Booting Modern Intel CPUs	zdw	9.487959	-5.2051764	story	21.0	403.0	1681704446	7.7346244
36415616	Having non-x86 machines makes your l	Having non-x86 machines makes your life harder	qsantos	9.676574	-5.2853956	story	21.0	46.0	1687333522	-7.7686534
36469277	I don't expect to see competitive RI	I don't expect to see competitive RISC-V servers any time soon	goranmoomin	9.36522	-5.690132	story	21.0	65.0	1687707188	-10.601105
24958423	An ex-ARM engineer critiques RISC-V	An ex-ARM engineer critiques RISC-V	ducktective	9.400496	-5.651851	story	21.0	350.0	1604224962	-10.556226
25001539	Anu: A sound, distributed version co	Anu: A sound, distributed version control systema	lelf	8.843037	-6.387913	story	21.0	166.0	1604607385	7.944273
39009745	Lichee Console 4A – RISC-V mini lapt	Lichee Console 4A – RISC-V mini laptop: Review, benchmarks and early issues	BarsMonster	9.381354	-5.503606	story	21.0	234.0	1705381858	-10.534365
22014393	What is wrong with all those AArch64	What is wrong with all those AArch64 desktops?	djsumdog	9.691475	-5.2553415	story	21.0	90.0	1578684447	-7.8319755
19126423	'Drop of Blood' Emoji, Symbol of the	'Drop of Blood' Emoji, Symbol of the Period, Is Praised by Activists	furcyd	9.793224	-6.263711	story	21.0	58.0	1549774613	-13.963473
16130177	Intel Security Issue Update: Address	Intel Security Issue Update: Addressing Reboot Issues	bcantrill	9.57638	-5.244662	story	21.0	259.0	1515727675	7.7858033
17339866	X86 assembly doesn’t have to be scar	X86 assembly doesn’t have to be scary	signa11	9.856709	-5.6259727	story	21.0	352.0	1529341874	-7.5870595
17442875	Perhaps it is simpler to say that In	Perhaps it is simpler to say that Intel was disrupted	MBCook	9.356825	-5.2039275	story	21.0	238.0	1530547863	7.757065
17782918	Arm Announces Client CPU Roadmap For	Arm Announces Client CPU Roadmap For Laptops	redial	9.577306	-5.1970224	story	21.0	389.0	1534514989	-7.685246
21277580	FPGA Design for Software Engineers	FPGA Design for Software Engineers	srjilarious	9.092612	-5.356731	story	21.0	496.0	1571270861	-7.4803886
21551868	The Configuration Complexity Curse	The Configuration Complexity Curse	UkiahSmith	9.916387	-5.309986	story	21.0	147.0	1573898070	2.0922143
29958247	Lenovo vendor locking Ryzen CPUs wit	Lenovo vendor locking Ryzen CPUs with AMD PSB	virgulino	9.373689	-5.196365	story	21.0	286.0	1642356071	7.9364367
13126248	Intel x86 documentation has more pag	Intel x86 documentation has more pages than the 6502 has transistors	ingve	9.528221	-5.2677407	story	21.0	300.0	1481145044	-7.462575
27712122	Jim Whitehurst to step down as IBM P	Jim Whitehurst to step down as IBM President	sweettea	9.875361	-5.3418508	story	21.0	189.0	1625236891	-9.500785
12158068	64-bit ARM desktop hardware?	64-bit ARM desktop hardware?	ashitlerferad	9.7342	-5.2586384	story	21.0	243.0	1469448710	-7.8210707
28251396	An inside look at the custom CPUs in	An inside look at the custom CPUs in Tesla's Dojo Supercomputer	gautamcgoel	9.52065	-5.2118278	story	21.0	155.0	1629493539	4.113896
28403672	OpenMoji: Open-source emojis	OpenMoji: Open-source emojis	nameequalsmain	9.816295	-6.2552876	story	21.0	356.0	1630674599	-13.944275
38114943	Intel Itanium IA-64 Support Removed 	Intel Itanium IA-64 Support Removed with the Linux 6.7 Kernel	scrlk	9.542793	-5.441026	story	21.0	231.0	1698939114	-7.804685
14761155	AMD Ryzen Threadripper 1920X and 195	AMD Ryzen Threadripper 1920X and 1950X CPUs Announced	zdw	9.294867	-5.1912956	story	21.0	377.0	1499953735	7.91602
23669164	Was Acorn's RISC OS an under-appreci	Was Acorn's RISC OS an under-appreciated pearl of OS design?	lproven	9.527149	-5.474635	story	22.0	162.0	1593356464	-8.26927
23739076	Linus Torvalds: 'I Do No Coding Any 	Linus Torvalds: 'I Do No Coding Any More'	dsr12	9.329481	-5.8794827	story	22.0	341.0	1593960536	-8.159682
20010155	How Screwed is Intel without Hyper-T	How Screwed is Intel without Hyper-Threading?	rbanffy	9.577462	-5.434416	story	22.0	232.0	1558805057	8.096496
25623305	AMD Patent Reveals Hybrid CPU-FPGA D	AMD Patent Reveals Hybrid CPU-FPGA Design That Could Be Enabled by Xilinx Tech	craigjb	9.150102	-5.272909	story	22.0	278.0	1609695556	8.0891075
35804935	How Does an FPGA Work?	How Does an FPGA Work?	sph	9.078604	-5.3492694	story	22.0	313.0	1683133907	8.313928
36013257	Intel Explores Transition to 64-Bit-	Intel Explores Transition to 64-Bit-Only X86S Architecture	MR4D	9.601302	-5.387539	story	22.0	159.0	1684599977	-7.773071
36267382	Emoji Kitchen	Emoji Kitchen	smollett	9.797772	-6.266222	story	22.0	294.0	1686368638	-13.9506
36643278	Farmer ordered to pay $CAD82k after 	Farmer ordered to pay $CAD82k after confusion over meaning of thumbs-up emoji	ColinWright	9.747739	-6.2721395	story	22.0	133.0	1688814288	-0.33821735
25119396	Apple Silicon M1 Chips and Docker	Apple Silicon M1 Chips and Docker	austinprete	9.55145	-6.433643	story	22.0	119.0	1605577008	10.05873
25179647	Linus Torvalds on the new MacBook Ai	Linus Torvalds on the new MacBook Air	michielt	9.389328	-5.7338796	story	22.0	119.0	1606069538	-8.176776
22282049	How much better was DEC Alpha than c	How much better was DEC Alpha than contemporary x86?	turrini	9.634944	-5.3396273	story	22.0	119.0	1581255820	-7.964725
16072642	They are still sticking to this line	"They are still sticking to this line:""This is not a bug or a flaw in Intel products. These new exploits leverage data about the proper operation of processing techniques common to modern computing platforms, potentially compromising security even though a system is operating exactly as it is designed to.""https://www.intel.com/content/www/us/en/architecture-and-tec..."	carwyn	9.501046	-5.292138	comment	22.0	187.0	1515090013	7.8040204
16075348	About speculative execution vulnerab	About speculative execution vulnerabilities in ARM-based and Intel CPUs	gok	9.695531	-5.619038	story	22.0	228.0	1515111069	-6.686427
16107578	Meltdown Proof-of-Concept	Meltdown Proof-of-Concept	__init	9.582194	-5.4806294	story	22.0	760.0	1515517079	7.715487
29889741	UltraRAM: 'Universal Memory' That Br	UltraRAM: 'Universal Memory' That Brings RAM-Like Speed to Non-Volatile Storage	pulse7	9.923357	-5.3624206	story	22.0	245.0	1641897002	8.119273
35271779	A CPU is a compiler	A CPU is a compiler	signa11	9.860907	-5.742845	story	22.0	141.0	1679559621	-7.2959003
27432101	Snowtrack – a new version control so	Snowtrack – a new version control software for graphic designers and 3D artists	sebastian_io	8.878646	-6.373899	story	22.0	148.0	1623143212	-11.690556
37649222	Ask HN: Is “Distributed CI” Possible	Ask HN: Is “Distributed CI” Possible?	avgcorrection	9.292053	-6.4160542	story	22.0	20.0	1695669928	6.192162
37944691	Even a laptop can run RAM externally	Even a laptop can run RAM externally thanks to CXL	ashvardanian	9.775431	-5.2091575	story	22.0	111.0	1697731371	8.092476
37967936	FPGA N64	FPGA N64	AndrewDucker	9.138381	-5.259137	story	22.0	407.0	1697904105	8.246399
38156486	Intel 80386, a Revolutionary CPU	Intel 80386, a Revolutionary CPU	blakespot	9.512957	-5.221171	story	22.0	283.0	1699224482	7.468301
38163412	Regarding Proposed US Restrictions o	Regarding Proposed US Restrictions on RISC-V	vitplister	9.366481	-5.6751432	story	22.0	213.0	1699282454	-10.576458
14733255	Linus: “I no longer feel like I can 	Linus: “I no longer feel like I can trust ‘init’ to do the sane thing”	cnst	9.287195	-5.896805	story	22.0	350.0	1499658449	4.246511
23822203	Linux founder tells Intel to stop in	Linux founder tells Intel to stop inventing magic instructions and fix problems	rsecora	9.328243	-5.2320704	story	23.0	287.0	1594656062	7.6897273
24378758	PicoRio Linux RISC-V SBC is an open-	PicoRio Linux RISC-V SBC is an open-source alternative to Raspberry Pi board	hippospark	9.403378	-5.591718	story	23.0	266.0	1599252658	9.586086
13631772	Inside Medium's Meltdown	Inside Medium's Meltdown	JumpCrisscross	9.56379	-5.5014396	story	23.0	200.0	1486941547	7.69259
36118913	Sigils are underappreciated (2022)	Sigils are underappreciated (2022)	luuuzeta	9.360617	-5.7012105	story	23.0	150.0	1685399710	8.660947
36695682	BeagleV-Ahead RISC-V board	BeagleV-Ahead RISC-V board	abawany	9.418959	-5.588613	story	23.0	210.0	1689174545	-10.525857
39055164	Silos are fine, as long as there is 	Silos are fine, as long as there is an API between them	platformeng	9.416465	-5.595285	story	23.0	164.0	1705671128	-10.546084
32864909	Good CI/CD and SRE Blogs	Good CI/CD and SRE Blogs	100011_100001	9.23558	-6.431211	story	23.0	207.0	1663329573	6.2296185
19334065	Why isn’t CPU time more valuable?	Why isn’t CPU time more valuable?	panic	9.769404	-5.194267	story	23.0	93.0	1552005167	7.606282
16102643	Intel CEO’s Stock Sales May Warrant 	Intel CEO’s Stock Sales May Warrant SEC Examination	CPAhem	9.279492	-5.18991	story	23.0	406.0	1515460897	7.708472
16102483	What Spectre and Meltdown Mean for W	What Spectre and Meltdown Mean for WebKit	pizlonator	9.655476	-5.5720205	story	23.0	397.0	1515459058	7.722123
16270533	Show HN: One Click Shrug Emoji Copy	Show HN: One Click Shrug Emoji Copy	davidjnelson	9.803869	-6.2659783	story	23.0	47.0	1517361032	13.038067
17427560	Darpa invests $100M in a silicon com	Darpa invests $100M in a silicon compiler	adapteva	9.403576	-5.2811785	story	23.0	415.0	1530303781	-7.3062706
17829790	Disable SMT/Hyperthreading in all In	Disable SMT/Hyperthreading in all Intel BIOSes	carlesfe	9.779916	-5.5221086	story	23.0	384.0	1535051263	8.0755205
13324978	Easy 6502 – How to get started writi	Easy 6502 – How to get started writing 6502 assembly language	sebg	9.687049	-5.545128	story	23.0	207.0	1483593878	-7.369891
33775334	AVX 512 will be the future	AVX 512 will be the future	fulafel	9.461542	-5.5513062	story	23.0	203.0	1669651692	8.064745
27274670	Magit 3.0	Magit 3.0	mpsq	8.80522	-6.4151435	story	23.0	347.0	1621934250	-11.493176
15570235	IBM scientists say radical new ‘in-m	IBM scientists say radical new ‘in-memory’ architecture will speed up computers	breck	9.739645	-5.2646976	story	23.0	299.0	1509123996	8.045424
23419101	macOS in QEMU in Docker	macOS in QEMU in Docker	mjtlittle	9.638659	-6.356218	story	24.0	490.0	1591290352	10.045226
13811177	AMD Prepares 32-Core Naples CPUs for	AMD Prepares 32-Core Naples CPUs for 1P and 2P Servers: Coming in Q2	BlackMonday	9.36189	-5.1842675	story	24.0	341.0	1488901386	7.8182034
35787195	faulTPM: Exposing AMD fTPMs' Deepest	faulTPM: Exposing AMD fTPMs' Deepest Secrets	kerm1t	9.484378	-5.2572923	story	24.0	287.0	1683034525	7.873595
36380149	The legend of “x86 CPUs decode instr	The legend of “x86 CPUs decode instructions into RISC form internally” (2020)	segfaultbuserr	9.53413	-5.661021	story	24.0	187.0	1687095190	-10.516517
29175402	How to make a CPU – a simple picture	How to make a CPU – a simple picture-based explanation	robertelder	9.525904	-5.2539535	story	24.0	605.0	1636557039	7.6837363
34651799	AMD Killed the Itanium (2005)	AMD Killed the Itanium (2005)	todsacerdoti	9.443183	-5.403983	story	24.0	164.0	1675488152	-7.7874026
21154606	Shenanigans in the Microkitchen	Shenanigans in the Microkitchen	luu	9.808189	-5.2140317	story	24.0	102.0	1570160720	8.967946
18351109	Linus Torvalds announces Linux (1991	Linus Torvalds announces Linux (1991)	yurisagalov	9.413278	-5.832152	story	24.0	248.0	1541040614	-8.192424
12709220	Intel will add deep-learning instruc	Intel will add deep-learning instructions to its processors	ingve	9.293775	-5.2040133	story	24.0	389.0	1476462979	7.777024
13171087	AMD Gives More Zen Details	AMD Gives More Zen Details	Osiris	9.240116	-5.192005	story	24.0	290.0	1481663551	7.8544765
35393615	Author here. For additional context,	Author here. For additional context, please read https://github.com/ggerganov/llama.cpp/discussions/638#discu... The loading time performance has been a huge win for usability, and folks have been having the most wonderful reactions after using this change. But we don't have a compelling enough theory yet to explain the RAM usage miracle. So please don't get too excited just yet! Yes things are getting more awesome, but like all things in science a small amount of healthy skepticism is warranted.	jart	9.885948	-5.185564	comment	24.0	234.0	1680296558	7.9748826
23114997	Intel accused by workers of prioriti	Intel accused by workers of prioritizing chip output over safety	fortran77	9.392675	-5.2143803	story	24.0	313.0	1588946805	7.785211
15442636	CircleCI trusts 8 analytics companie	CircleCI trusts 8 analytics companies with your source code and API tokens	tomwas54	8.864814	-6.3261924	story	24.0	508.0	1507649561	-2.0366344
25483010	Apple M1 foreshadows Rise of RISC-V	Apple M1 foreshadows Rise of RISC-V	socialdemocrat	9.396815	-5.614507	story	25.0	401.0	1608427335	-10.539723
36010778	Show HN: PuzzleMoji, a daily emoji p	Show HN: PuzzleMoji, a daily emoji pictionary challenge against ChatGPT	sunnyba	9.80032	-6.2640743	story	25.0	82.0	1684579763	13.033045
36376669	A single line of code made a 24-core	A single line of code made a 24-core server slower than a laptop (2021)	xk3	9.612072	-5.2155256	story	25.0	526.0	1687054090	7.751375
34333638	What happens when a CPU starts	What happens when a CPU starts	nowandlater	9.559203	-5.2134604	story	25.0	452.0	1673398828	7.737699
34856866	Building an ARM64 home server the ha	Building an ARM64 home server the hard way	jforberg	9.734836	-5.300552	story	25.0	258.0	1676808169	-7.8439455
34957276	AMD releases a new flagship CPU for 	AMD releases a new flagship CPU for consumer market with 128M of L3 Cache	treesciencebot	9.374307	-5.230057	story	25.0	230.0	1677510627	7.958371
25167288	Why Use ECC? (2015)	Why Use ECC? (2015)	pmoriarty	9.470751	-5.5125794	story	25.0	79.0	1605923716	8.320057
32071949	Retbleed: New speculative execution 	Retbleed: New speculative execution attack sends Intel and AMD scrambling	ndesaulniers	9.650726	-5.567967	story	25.0	435.0	1657642025	-6.6595144
32370112	I am using freebsd since version 8 f	I am using freebsd since version 8 for all my server needs (was using linux, but got repelled by its chaos which I dont care about on my laptop, but it pisses me off on server).Some more points:- bhyve, developed by netapp, they ditched all old technologies support and it works faster on my i5 server than kvm on my i7 laptop. Snapshoting using ZFS is not a feature to discard either.- FIBs, absolute miracle routing tables that you can apply to whatever software, define the routes as fib 1 (lets say it is openvpn) and then use them as simply as `setfib 1 bash` to use them in all child processes- backward compatibility, this is where linux is really horrible, there was an article about compiling binary on freebsd 2 and running it on freebsd 10. Try this on linux, binaries are not compatible e	stiray	9.848807	-6.250189	comment	25.0	190.0	1659808097	10.693475
16052451	Linux page table isolation is not ne	Linux page table isolation is not needed on AMD processors	fanf2	9.70063	-5.5347753	story	25.0	640.0	1514907783	7.950263
16084732	CPU Usage Differences After Applying	CPU Usage Differences After Applying Meltdown Patch at Epic Games	_jcwu	9.522255	-5.4103293	story	25.0	561.0	1515235932	7.694327
16298229	HiFive – RISC-V-based Linux developm	HiFive – RISC-V-based Linux development board	hucker	9.387854	-5.6699862	story	25.0	240.0	1517675450	-10.5658655
16576516	Severe Security Advisory on AMD Proc	Severe Security Advisory on AMD Processors	wila	9.413925	-5.2413406	story	25.0	77.0	1520952421	7.850371
17242103	Torvalds: Standards need to be quest	Torvalds: Standards need to be questioned	l1k	9.355783	-5.840487	story	25.0	223.0	1528233068	-8.1634245
18067861	Volkswagen – detects when your tests	Volkswagen – detects when your tests are run in a CI server, and makes them pass	JoshTriplett	9.809243	-6.4103193	story	25.0	538.0	1537893378	5.861204
29837884	Intel completely disables AVX-512 on	Intel completely disables AVX-512 on Alder Lake after all	pantalaimon	9.423383	-5.473889	story	25.0	379.0	1641555113	8.062594
30697627	The Last i486 Online	The Last i486 Online	nazgulsenpai	9.540406	-5.2072034	story	25.0	85.0	1647431382	-7.6649175
22843085	I Want Decentralized Version Control	I Want Decentralized Version Control for Structured Data	pcr910303	8.853903	-6.382016	story	25.0	160.0	1586628440	-11.738369
33230716	Have to upvote - just because Z80: I	"Have to upvote - just because Z80: I spend my youth programming this thing literally in hex: To program my Amstrad CPC646, I wrote down opcodes on a piece of paper and then manually translated to hex according to a copy of the Z80 spec sheet I found in the back of some book. Relative jumps were especially fun...If only I had had the internet, maybe I would have stumbled on the concept of an ""assembler"". Not sure if it had been more fun? In any case, I did not find the protected mode."	japanuspus	9.638083	-5.4116173	comment	25.0	136.0	1665991932	7.097953
35549116	Lindows 4.0 (2003)	Lindows 4.0 (2003)	ecliptik	9.500884	-5.707548	story	26.0	159.0	1681345461	4.1530185
29302045	Intel Software Defined Silicon: addi	Intel Software Defined Silicon: additional CPU features after license activation	pabs3	9.420617	-5.2076993	story	26.0	123.0	1637547986	7.659447
24725689	AMD Is in Advanced Talks to Buy Xili	AMD Is in Advanced Talks to Buy Xilinx	dcgudeman	9.145962	-5.2369432	story	26.0	171.0	1602205884	8.128624
32886442	Arm execs: We respect RISC-V but it'	Arm execs: We respect RISC-V but it's not a rival in the datacenter	rntn	9.400139	-5.654978	story	26.0	87.0	1663498948	-10.564404
15915941	Launch HN: Mirror (YC W17) – turn a 	Launch HN: Mirror (YC W17) – turn a selfie into emoji that look like you	sergefaguet	9.783052	-6.2589226	story	26.0	57.0	1513187750	2.9407415
16085672	Meltdown and Spectre Linux kernel st	Meltdown and Spectre Linux kernel status	dankohn1	9.610404	-5.537836	story	26.0	509.0	1515253180	7.816369
16111433	Intel has released new CPU microcode	Intel has released new CPU microcode for download	mrmondo	9.556143	-5.359766	story	26.0	214.0	1515543124	7.7473764
17757624	Why Use an FPGA Instead of a CPU or 	Why Use an FPGA Instead of a CPU or GPU?	ScottWRobinson	9.104738	-5.295673	story	26.0	284.0	1534252931	8.273919
21635613	RISC-V Foundation moving to Switzerl	RISC-V Foundation moving to Switzerland over trade curb fears	thesausageking	9.365507	-5.6886377	story	26.0	379.0	1574741965	-10.630573
27559795	Spectre mitigations murder userspace	Spectre mitigations murder userspace performance	hasheddan	9.694787	-5.611698	story	26.0	405.0	1624104447	7.8418837
35236275	Launch HN: Bloop (YC S21) – Code Sea	Launch HN: Bloop (YC S21) – Code Search with GPT-4	louiskw	8.852975	-6.001132	story	26.0	264.0	1679336852	-11.062862
35509175	Hell Never Ends on x86: The Hyperspa	Hell Never Ends on x86: The Hyperspace Story, Continued, Sort Of	zdw	9.773849	-5.3929677	story	26.0	276.0	1681100871	-7.7455683
37798178	RISC-V chip technology emerges as ne	RISC-V chip technology emerges as new battleground in US-China tech war	mmastrac	9.345347	-5.6588025	story	26.0	139.0	1696640977	-10.597704
37826842	ECC RAM on AMD Ryzen 7000 Desktop CP	ECC RAM on AMD Ryzen 7000 Desktop CPUs	mmastrac	9.3939905	-5.481643	story	26.0	344.0	1696894770	8.2070055
38378455	Ubuntu squeezes more performance tha	Ubuntu squeezes more performance than Windows 11 on new AMD Zen 4 Threadripper	marcodiego	9.3706045	-5.2053204	story	26.0	351.0	1700657193	7.9041133
38570624	Show HN: WarpBuild – x86-64 and arm 	Show HN: WarpBuild – x86-64 and arm GitHub Action runners for 30% faster builds	suryao	9.897289	-5.3126254	story	26.0	154.0	1702051880	5.018305
24064035	IBM Is Already Gutting Red Hat and F	IBM Is Already Gutting Red Hat and Firing Employees Without Warning	URfejk	9.916996	-5.4135094	story	27.0	137.0	1596652550	-9.462941
29273829	80386DX ISA single board microcomput	80386DX ISA single board microcomputer	gigel82	9.551106	-5.2822886	story	27.0	318.0	1637296040	-7.6213484
34470900	ECC RAM should be a human right	ECC RAM should be a human right	zdw	9.475128	-5.4873605	story	27.0	211.0	1674337453	8.275282
39665479	What are some killer apps for FPGAs?	What are some killer apps for FPGAs? What major products do they enable?	jeff-davis	9.094676	-5.3581643	comment	27.0	97.0	1710139941	8.340918
24906151	AMD to Acquire Xilinx	AMD to Acquire Xilinx	ajdlinux	9.108566	-5.3118424	story	27.0	593.0	1603795951	8.139491
15754988	Linus Torvalds: “Do No Harm”	Linus Torvalds: “Do No Harm”	ekianjo	9.28129	-5.8919497	story	27.0	566.0	1511335516	-8.119877
21385857	A months-old AMD microcode bug destr	A months-old AMD microcode bug destroyed my weekend	furcyd	9.534631	-5.3341603	story	27.0	179.0	1572347893	-7.688806
18701145	MIPS Goes Open Source	MIPS Goes Open Source	walterbell	9.46665	-5.5836067	story	27.0	508.0	1545073106	-10.420181
28538855	Show HN: Display a bell emoji on HN 	Show HN: Display a bell emoji on HN comments you haven't read yet	linkdd	9.796348	-6.2567735	story	27.0	107.0	1631712961	13.043616
27088274	Linus Torvalds on why desktop Linux 	Linus Torvalds on why desktop Linux sucks (2014)	IvanGoncharov	9.39382	-5.840579	story	27.0	81.0	1620489400	-8.213131
15116719	Disabling Intel ME 11 via undocument	Disabling Intel ME 11 via undocumented mode	Severian	9.498176	-5.236181	story	27.0	734.0	1503930435	7.7607546
20391180	IBM Closes Acquisition of Red Hat fo	IBM Closes Acquisition of Red Hat for $34B	voxadam	9.927727	-5.4733925	story	28.0	552.0	1562676518	-9.48444
20687521	My Home Lab Server with 20 Cores / 4	My Home Lab Server with 20 Cores / 40 Threads and 128 GB Memory	louwrentius	9.624069	-5.211608	story	28.0	239.0	1565714666	7.8651237
14008444	Open Source Needs FPGAs; FPGAs Need 	Open Source Needs FPGAs; FPGAs Need an On-Ramp	heathjohns	9.088969	-5.3473325	story	28.0	309.0	1490995560	8.3879385
31723833	Tachyum’s Prodigy CPU Specs	Tachyum’s Prodigy CPU Specs	rbanffy	9.431578	-5.185877	story	28.0	133.0	1655119106	7.88734
26001972	RISC-V isn’t as interesting as you t	RISC-V isn’t as interesting as you think	glhaynes	9.377198	-5.701102	story	28.0	121.0	1612279446	-10.605478
31969525	>They cared about the CI way more th	>They cared about the CI way more than about fast passenger throughput.Continuous integration?	ginko	9.220973	-6.3868856	comment	28.0	87.0	1656870479	6.070563
19535059	Intel VISA Exploit Gives Access to C	Intel VISA Exploit Gives Access to Computer’s Entire Data, Researchers Show	DennisP	9.497037	-5.2658796	story	28.0	431.0	1554032053	7.745474
16184146	Is it time for open processors?	Is it time for open processors?	signa11	9.504155	-5.198601	story	28.0	596.0	1516335988	7.785734
17489504	ARM: “RISC-V Architecture: Understan	ARM: “RISC-V Architecture: Understand the Facts”	hlandau	9.409563	-5.6505013	story	28.0	166.0	1531136659	-10.552578
39165342	Try to make sudo less vulnerable to 	Try to make sudo less vulnerable to Rowhammer attacks	trebligdivad	9.638766	-5.6568375	story	28.0	179.0	1706447350	-13.8796835
12352959	Does a compiler use all x86 instruct	Does a compiler use all x86 instructions? (2010)	pepijndevos	9.86261	-5.7902727	story	28.0	278.0	1472054404	-7.484162
26574008	Emoji Under the Hood	Emoji Under the Hood	kogir	9.793407	-6.264477	story	28.0	430.0	1616626091	-13.952205
26016638	Threadripper 3990X: The Quest To Com	Threadripper 3990X: The Quest To Compile 1B Lines Of C++ On 64 Cores	fmxexpress	9.473122	-5.259884	story	29.0	230.0	1612374902	7.985097
26294397	Weird architectures weren't supporte	Weird architectures weren't supported to begin with	woodruffw	9.635299	-5.22802	story	29.0	353.0	1614529324	9.678491
37228166	Your brain on emoji	Your brain on emoji	dnetesn	9.797389	-6.266153	story	29.0	104.0	1692736504	-13.949239
38928334	Non-PC compatible x86 computers (200	Non-PC compatible x86 computers (2007)	lproven	9.662154	-5.2048306	story	29.0	114.0	1704818949	-7.8016562
32145324	Intel Microcode Decryptor	Intel Microcode Decryptor	bfoks	9.621824	-5.2632875	story	29.0	578.0	1658185912	-5.5724587
16070465	Meltdown and Spectre	Meltdown and Spectre	dustinmoris	9.629848	-5.5675287	story	29.0	347.0	1515075811	7.7899265
16080002	Why Raspberry Pi Isn't Vulnerable to	Why Raspberry Pi Isn't Vulnerable to Spectre or Meltdown	MikusR	9.638908	-5.575067	story	29.0	1603.0	1515173346	7.8377876
16362345	Advantages of monolithic version con	Advantages of monolithic version control	Tomte	8.856517	-6.37106	story	29.0	198.0	1518470677	-11.70951
21463162	Intel publishes misleading benchmark	Intel publishes misleading benchmarks against AMD	PaulHoule	9.286873	-5.2555285	story	29.0	618.0	1573052224	7.8847485
39305464	Ask HN: Does anyone care about OpenP	Ask HN: Does anyone care about OpenPOWER?	sandwichbop	9.435248	-5.4294815	story	29.0	75.0	1707416226	-10.5370035
18001600	Linus is stubborn, persistent, and u	Linus is stubborn, persistent, and unyielding to what he sees as bullshit. These I believe are all very valuable qualities for the head of a massive software project, and may be part of the reason as to why Linux is where it is today.However, Linus is also a bit of an asshole, turning technical criticism into personal seemingly personal attacks. I believe those 2 sets of qualities are separable, but I would guess it's uncommon to find many people who are capable of being as tough as Linus without in some way alienating those around them, it's a fine line at times.Anecdotally, one of the most effective engineers I worked with, who asked penetrating questions during code and design reviews, did come off as a bit of an asshole at times. Whether by genetics or through childhood, I'd bet people	jakeinspace	9.296564	-5.877519	comment	29.0	309.0	1537137067	4.2542915
18794892	What If Linus Torvalds Gets Hit by a	What If Linus Torvalds Gets Hit by a Bus? (2000)	ZeeshanAK	9.326005	-5.882298	story	29.0	171.0	1546270547	-8.113134
27000570	New x86 micro-op vulnerability break	New x86 micro-op vulnerability breaks all known Spectre defenses	DoomHotel	9.685415	-5.567328	story	29.0	417.0	1619823228	7.683155
23646028	The Acorn Archimedes was the first d	The Acorn Archimedes was the first desktop to use the ARM architecture	lproven	9.578869	-5.204536	story	30.0	169.0	1593121036	-7.8055863
20254732	FPGAs Have the Wrong Abstraction for	FPGAs Have the Wrong Abstraction for Computing	matt_d	9.094031	-5.36436	story	30.0	253.0	1561288464	8.425584
13777649	System76 launching ARM Pro server wi	System76 launching ARM Pro server with 96 cores up to 1TB ECC RAM and 32TB storage	matunixe	9.573076	-5.2044816	story	30.0	310.0	1488484786	7.885681
19225678	It's extremely hard to agree with Li	It's extremely hard to agree with Linus on that. One problem in his argument is that he believes that everybody has a kernel hacker mindset: most today's developers don't care about environment reproducibility at architecture level. The second problem is that he believes that every kind of development is as platform sensitive as kernel hacking, and he even makes the example of Perl scripts. The reality is that one year ago I started the effort to support ARM as a primary architecture for Redis, and all I had to do is to fix the unaligned accesses, that are anyway fixed in ARM64 almost entirely, and almost fixed also in ARM >= v7 if I remember correctly, but for a subset of instructions (double words loads/stores). Other than that, Redis, that happens to be a low level piece of code, just w	antirez	9.748235	-5.3298755	comment	30.0	244.0	1550846472	-7.7676215
16070050	LLVM patch to fix half of Spectre at	LLVM patch to fix half of Spectre attack	Kristine1975	9.670547	-5.5568275	story	30.0	433.0	1515071392	7.758419
21410202	‘Sexual’ use of eggplant and peach e	‘Sexual’ use of eggplant and peach emojis banned on Facebook, Instagram	specifications	9.774811	-6.260352	story	30.0	133.0	1572537751	-13.956187
30076082	"Why does the ""chart increasing"" emoj"	"Why does the ""chart increasing"" emoji show in red?"	adius	9.81165	-6.26834	story	30.0	234.0	1643136330	-13.974048
14803373	AMD has no plans to release PSP code	AMD has no plans to release PSP code	rnhmjoj	9.390998	-5.2292566	story	30.0	244.0	1500461620	7.8681574
34843051	Rejected emoji proposals	Rejected emoji proposals	JellyBeanThief	9.792926	-6.259159	story	30.0	138.0	1676685097	-13.952114
32746258	Difftastic, the fantastic diff	Difftastic, the fantastic diff	goranmoomin	8.819815	-6.437269	story	30.0	698.0	1662524400	-11.719452

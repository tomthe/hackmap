id	x	y	type	relevance	size	year	umap1d	hovertext	url	author
33098795	12.067171	-7.5923657	comment	3.0	12.5	1664991898	10.401586	I REALLY want to use a native ML language[1] but they all seem to be catered towards academics.If you want success within companies and not universities, then you need to treat the language as a produ...		devmunchies
33103744	12.258609	-7.557025	comment	3.0	11.0	1665024368	-11.38728	I'm surprised to see Kotlin in your list. Google has stated they are increasingly moving Android development to a Kotlin-first ideology. New official libraries produced by Google for Android are desig...		dliff
33116084	11.715609	-7.2856526	story	3.0	6.0	1665103815	9.178071	Async Maximalism	https://undefined.scribbble.co/posts/cl8wh4p2k0004vxrl8iongubc	genem9
33165621	11.737318	-7.4555087	comment	3.0	14.0	1665506966	10.341591	> Dependent types are hard to retrofit onto an existing language.Dependent types are hard to retrofit onto existing problems.  Software everywhere wants to work with data of indeterminate size/paramet...		ajross
33166014	11.705454	-7.355817	comment	3.0	11.0	1665508787	10.42896	"One really nice ""everyday"" example that comes from Idris that I really like is the ability to typecheck a printf function. You provide the format string, and then the typechecker will know what to exp..."		Warwolt
33172655	12.269654	-7.5390577	comment	3.0	11.0	1665547038	-11.364626	Elixir is a functional language, which is definitely a less common paradigm than OO languages like Java, which Kotlin is very similar to. Plus you can hire Android devs.		Apocryphon
33172429	12.272452	-7.4945564	comment	3.0	24.0	1665545150	-11.366695	Hiring Kotlin devs is easy because you can just hire open minded Java devs.		RhodesianHunter
33256626	12.421638	-7.4417024	comment	3.0	13.5	1666145455	12.9017105	I'm glad I happened across the item before you made the change!  The transcript is the best transcript I've ever seen of a talk.I think the ideas are very interesting.  I don't agree with his condemna...		kragen
33224661	11.676655	-7.864079	story	3.0	26.0	1665936410	-10.13155	Ask HN: Modern Go Dev Setup		denyial
33296841	11.911511	-7.0810513	comment	3.0	11.0	1666432088	-10.768163	It gives good pointers but it falls short on the usual suspects for an article on asyncio.When teaching it, it's important to emphasis:- await is locally blocking, so you should isolate linear workflo...		BiteCode_dev
33297062	11.815689	-7.081714	comment	3.0	12.5	1666434722	-10.70521	I thought Python couldn't multithread because of GIL? I understood from the article that async derives all its benefit from certain OS-level operations which don't need to run in a coroutine, like rea...		ogogmad
33319900	11.697052	-7.348222	comment	3.0	11.0	1666633613	9.130007	Aren't loom and nio somewhat orthogonal?Agreed that the threading parts of this project might need to be looked at/reworked when loom is released.More discussion here: https://www.reddit.com/r/java/comments/nsb2w1/will_loom_rend...		mooreds
33328635	12.11902	-7.3882623	comment	3.0	16.5	1666693856	-11.412187	My advice - go with Kotlin. You get the JVM, all of the Java ecosystem, type checking (of course), and a sane, modern language.		smallerfish
33329700	12.245077	-7.5373745	comment	3.0	15.0	1666701708	-11.3928585	Obviously kotlin has great tooling, coming from an IDE company.But I think the main strength of Kotlin is it being so damn developer-friendly compared to Java and Scala.		kramerger
33330965	12.252637	-7.5215516	comment	3.0	11.5	1666708347	-11.354584	I wanted to post that ktfmt, the FB Kotlin formatter, is much less well-known than ktlint.IMO, it produces the most (subjectively) readable code, and is the only one that doesn't leave room for you to...		gavinray
33352306	11.594781	-7.917808	comment	3.0	14.5	1666837658	10.15848	The optimal version does seem to exist here (per the comment too):https://github.com/golang/go/blob/d28bf6c9a2ea9b992796738d03...So the goal was to intentionally nerf Compare() to discourage code the ...		esprehn
33354236	11.874409	-7.3640847	comment	3.0	12.0	1666854756	7.115325	Functional programming. I learned OOP in school, and always thought it overcomplicates things, why can't this comparison operator in one page of Java just be a function, I thought. How can you make th...		carlmr
33381495	11.913145	-7.300594	comment	3.0	11.5	1667024632	0.37138373	"Part of writing it ""the right way"" is to make it easy to change. This is why I've come to dislike OOP. The rules are too rigid and result in exactly what you describe."		PainfullyNormal
33399061	12.4901905	-7.082089	comment	3.0	11.5	1667166194	12.394626	Refactoring tools are nice (I guess; I've honestly only used them in Java; I'm mostly an Emacs person), but my main gripes with Ruby maintenance are harder to fix with type annotations:- In duck-typed...		wheels
26482255	12.296409	-7.516332	comment	3.0	11.0	1615925860	12.852181	This seems to be a way to tackle concurrency, without addressing distributed programming.Why?As far as I can tell, both Erlang and Akka (the two cited examples that implement actors) do both concurrent and distributed systems.		alexashka
26486643	11.96888	-7.0330024	comment	3.0	11.5	1615956330	11.90844	That's interesting.I'm not the biggest Java fan, I can tolerate it. Recently working on a Python project I find I'm massively unproductive compared to something like Java or more specifically Scala as...		tiew9Vii
33418667	11.701961	-7.388833	story	3.0	4.0	1667293442	-8.748782	The type system is a programmer's best friend	https://dusted.codes/the-type-system-is-a-programmers-best-friend	dustedcodes
26506757	11.908097	-7.13036	comment	3.0	15.5	1616096842	-9.154374	It's so bizarre to me - though I guess in-line with me finding a lot of decisions around Python 3 bizarre - that after years of Python being one of duck typing's biggest defenders and success stories,...		morelisp
26507243	11.764261	-7.3080487	comment	3.0	10.5	1616099623	7.1277957	This distinction is the same as the distinction between structural and nominal typing, described at the end of the article.Abstract base classes require everything to extend from a base-level object, ...		Conlectus
26521073	11.659828	-7.1695976	comment	3.0	10.5	1616219655	9.031268	"A forEach can easily return a transformed list of values.  acc = []
  for el in values:
    acc.append(f(el))
  return acc

This hierarchy doesn't exist; you can pretty much implement any of them in t..."		thaumasiotes
26530837	11.78696	-7.3283377	comment	3.0	11.5	1616338080	-8.911554	Data science. Static typing is a complete PITA when you're doing exploratory data work. Type inference only fixes things on a superficial level.For data engineering, I haven't had a chance to try this...		mumblemumble
26531261	11.714163	-7.3972325	comment	3.0	13.0	1616341487	8.641405	"Time to market?Type inference solves a different problem - it doesn’t help you here. For example    type Money {
        amount: Amount,
        currency: Currency
    }

    Money(USD, 10) + Money(EU..."		CraigJPerry
26535252	12.313432	-7.440718	comment	3.0	13.0	1616370870	12.823002	Erlang has a bunch of tools to help enforce determinism or at least suss out concurrency issues. For example: you can specify multiple receive statements to process your queued messages in a specific ...		ramy_d
26539797	12.184679	-7.613409	comment	3.0	12.0	1616415763	11.916471	This is so even at a low-level.Look at the beautiful code examples in a Scala book and you might be seduced,  but make a small change and there is nothing beautiful about it.		PaulHoule
26540570	11.631436	-7.937567	comment	3.0	13.0	1616420233	10.222291	"Here’s a quote from Rob Pike (in 2015) about what Go was trying to avoid:""Java, JavaScript (ECMAScript), Typescript, C#, C++, Hack (PHP), and more [...] actively borrow features from one another. They..."		pansa2
26542271	12.2366705	-7.6403065	comment	3.0	14.5	1616427236	11.95116	I wouldn't blame the language, I'd blame the people who chose Scala.The impression I always had was that Scala was a research project into how various programming language features could live together...		blacktriangle
26554583	11.655858	-7.975928	comment	3.0	21.0	1616505396	10.280682	Golang itself is condescending. It was basically invented as a way to get fresh CS grads productive ASAP with as little understanding as possible.		blacktriangle
26566444	12.327565	-7.0265574	comment	3.0	19.0	1616589952	13.188852	There are loads of battle-tested well-working Perl code around, and its cheaper to hire one smart dev who can learn Perl to maintain than to hire a whole team to re-write in a new PL. So no matter wha...		brokenkebab
26566639	11.594769	-7.4192815	comment	3.0	12.5	1616591074	9.127824	Green threads are great, right up until the moment you have to interoperate with something written in another language / using another VM. Then it's a mess (see also: Go).The nice thing about async/aw...		int_19h
26566668	12.305576	-7.0687966	comment	3.0	10.5	1616591198	13.184938	Are you considering moving to Raku or Perl 7 or will it be Perl 5 forever?		goto11
26568159	12.310132	-7.022576	comment	3.0	11.5	1616598445	13.198142	What exactly is Larry Wall's involvement with Perl anymore? Has he moved entirely to Rakudo (ne Perl 6)?		Pet_Ant
26568711	12.31398	-7.0260315	comment	3.0	11.5	1616600745	13.176924	> its cheaper to hire one smart dev who can learn Perl to maintain than to hire a whole team to re-write in a new PL.Short term? Probably.Long term? Probably not.At one point your _one_ Perl developer...		thatwasunusual
26520853	11.7654705	-7.078112	story	3.0	43.0	1616215361	3.080873	Design Patterns of 1972 (2006)	https://blog.plover.com/prog/design-patterns.html	luu
26587523	11.836746	-7.1972914	comment	3.0	13.0	1616718887	7.112029	That's what college textbook OOP taught us. It only took me a couple decades to figure out that college textbook OOP taught us wrong. If all you're doing is hiding state, it's like sweeping dirt under...		mumblemumble
26587065	11.840137	-7.2468123	comment	3.0	16.5	1616715611	7.311341	It's not about eliminating state it's about hiding it. OOP hides state, which means mutability is often shared and hidden.		staticassertion
26589316	11.910024	-7.33193	comment	3.0	10.5	1616740227	6.9914722	">I find the hardest part about OO is that a lot of people don't know what good OO looks like.Aside from Bjarne Stroustrup, is there any computer science major figure, great dev, etc., that thinks there is such a thing as ""good OO""?"		coldtea
26590924	12.244347	-7.474317	comment	3.0	10.5	1616759330	12.855949	Imagine being a Smalltalker and still missing the underlying context of Joe's article - specifically, around the actor model (as used extensively in Erlang) being substantially closer to OOP as intend...		yellowapple
26606049	11.788924	-7.279441	comment	3.0	14.0	1616882797	-8.855519	Write a compiler in a strongly typed language, and then remove all the type annotations.  This may come as a shock, but this is what a compiler (or any codebase) could look like when developed in a weakly typed language.		pwdisswordfish6
26606126	11.699795	-7.3744507	comment	3.0	11.0	1616883555	-8.816658	That doesn't work if you're using types for anything beyond correctness-checking. Type-driven dispatch, for example, which tends to be used heavily in big compiler and interpreter projects. And tagged...		mintplant
26631286	11.655124	-7.5914583	comment	3.0	15.0	1617078893	10.052393	Lack of generics and clumsy error handling would be my guess.		j-james
26631643	11.643639	-7.974018	comment	3.0	11.5	1617084650	10.233573	First, I consider warts of the language to be things that are side effects of the way the language is designed. This means that I would have loved for Go to have non-nullable types, Pike didn't bless ...		nemothekid
26640701	11.697162	-7.2055902	comment	3.0	16.5	1617139257	-8.667337	I can't see var going anywhere, many times you aren't directly creating a new object, but getting a generated object from something ( like linq) which tends to have more complicated type signatures.		keithnz
26646419	11.772828	-7.4079323	comment	3.0	10.5	1617194128	-5.594471	Thanks for posting this--I'm getting back into studying the formal semantics of programming languages. Questions for those working in this area:According to Pierce's Types and Programming Languages, a...		jasperry
26649474	11.597187	-7.857967	comment	3.0	10.5	1617208841	10.196946	It is very confusing that equality in JavaScript is not transitive: https://imgur.com/5pFXFbR.Apparently equality in Go is no longer transitive either...		miga
26660366	12.0572195	-7.1638494	comment	3.0	10.5	1617284323	-13.92543	The problem I have with Lombok is that suddenly it’s hard to trace getters and setter from the Pojo. By this I mean asking the question, “where is getId() used” is hard if I want to use the find references feature of the IDE.		virmundi
26660718	12.267243	-7.015995	comment	3.0	20.5	1617286329	13.1531105	As someone who learned both well after the 2000s, it was painfully obvious to me that Python was easier to learn/use and had a lot more momentum than Perl (this was around 2012). I think that's really...		7thaccount
26663369	12.169776	-7.471721	comment	3.0	13.0	1617297255	5.5690894	All the backend projects I work on were originally written in Java. I'll admit that Streams and Lombok make it a somewhat pleasant experience to work with, at least compared to when I used it in colle...		dlbucci
26663705	11.631798	-7.526544	comment	3.0	11.0	1617298772	9.892975	I want to do something like this:public <Z, T extends Iterable<Z>, R> T<R> process(T, Function<Z,R>)change the type parameter of T<Z> to T<R> and return an instance of T<R>, but the best I can do is return an instance of Iterable<R> because I cannot define T to have a type parameter.		vimax
26663027	11.6844425	-7.332925	comment	3.0	15.0	1617296003	9.141729	Waiting for project loom [1][1] https://openjdk.java.net/projects/loom/		crudbug
26672281	11.663351	-7.4004645	comment	3.0	11.5	1617377688	-8.5783	> No need to enforce your semantics through typeMaybe I'm spoiled by other languages with more powerful type systems, but this is exactly what I want my types to do! Isn't this why we have type traits...		dkersten
26674575	11.656898	-7.939989	comment	3.0	11.0	1617389324	10.2347	"I really hate the wave of language ""competition"" and contention. Go is a language that allows lots of developers to get great work done. So is Node.js, so is Haskell, so is Rust, so is Java. The list ..."		_6pvr
26683068	11.644539	-7.4369125	comment	3.0	13.5	1617472251	-8.596107	Isn't dependant types actually about being able to reason about the runtime value rather than at compile time i.e. D and C++ definitely don't have dependant types, or at least exciting kind.		mhh__
26684689	11.594163	-7.0755672	comment	3.0	18.0	1617483612	-10.447128	The walrus operator was definitely a mistake. But type annotations, pattern matching, attrs/dataclasses, and f-strings are significant improvements.		neolog
26685205	11.608026	-7.033846	comment	3.0	14.5	1617488000	6.522734	"""Pattern matching is the switch-case equivalent in Python 3.10 and newer""Well, yes, but actually, no.A switch operator, at least in most other languages, uses comparison to select a branch. Only compa..."		TrianguloY
26686059	11.636309	-7.088915	comment	3.0	12.0	1617497524	6.3637853	> If the implementation is hard to explain, it's a bad idea.> If the implementation is easy to explain, it may be a good idea.Pattern matching is extremely complex, and for what?		earthboundkid
26690653	11.913633	-7.616505	comment	3.0	12.0	1617552773	10.434507	I agree with you, and I'd say that we are perhaps in the bottom, or the middle of the S curve in software. Despite all the technological progress in hardware, our software is very slow and buggy. We e...		PartiallyTyped
26724754	11.653003	-7.978465	comment	3.0	18.0	1617802804	-8.007514	Go has a perfectly good package manager that works with sources hosted on GitHub and other sites -- there isn't any centralized place for people to publish sources, unlike the other package managers y...		coder543
26728393	11.657898	-7.9754834	comment	3.0	13.5	1617818092	10.21886	Go is a relatively simple language that doesn't look like it's getting much bigger and I'm pretty sure it has a fairly broad user base.		dnautics
26730125	12.142729	-7.5175614	comment	3.0	10.5	1617824863	-10.620597	F# is slowly making it's way into C#... but you could also just skip the wait and start using F# :p		gsuuon
26745086	11.608966	-7.928856	comment	3.0	15.0	1617924958	10.212018	It's really a Googleism that was inherited by Go.  I remember their open source C++ command-line library did the same thing.		ericbarrett
26747697	12.112957	-7.6535997	comment	3.0	21.0	1617953885	-10.63251	OCaml type system is more powerful than F#. OCaml lacks operator overload, computation expressions (unless you use an extension?) and threading (coming soon?).  The community is tiny for OCaml. F# is ...		pharmakom
26697729	11.779434	-7.287759	story	3.0	26.0	1617622697	-6.144132	Java early stage draft: Functional transformation of immutable objects	https://github.com/openjdk/amber-docs/blob/master/eg-drafts/reconstruction-records-and-classes.md	viebel
26670819	11.957203	-7.711145	story	3.0	54.0	1617366044	10.401225	State in Haskell (1995) [pdf]	https://www.microsoft.com/en-us/research/wp-content/uploads/2016/07/state-lasc.pdf?from=https%3A%2F%2Fresearch.microsoft.com%2Fen-us%2Fum%2Fpeople%2Fsimonpj%2Fpapers%2Fstate-lasc.pdf	azhenley
26733468	11.678626	-7.2651696	story	3.0	135.0	1617841541	-8.686482	Proofs, Computability, Undecidability, Complexity, and the Lambda Calculus [pdf]	https://www.cis.upenn.edu/~cis511/notes/proofslambda.pdf	bmc7505
26815982	11.80301	-7.1246185	comment	3.0	10.5	1618458163	-9.021037	"I once had someone try to tell me that python was ""untyped"" - I guess people assume a lot when they come from a first-class statically-typed language."		solumos
37578091	11.6169	-7.074936	comment	3.0	14.0	1695163580	9.159142	Everyone else solved this problem by using list comprehensions instead. Rob has surely heard of those.		hinkley
37583362	11.685001	-7.0446057	comment	3.0	10.5	1695213243	-7.14235	I'm not suggesting they rewrite. I'm questioning if Java was ever the best choice for this application in the first place. They are using Java as if it were C++. Perhaps it would have been better to w...		nu11ptr
37596541	11.758033	-7.3941903	comment	3.0	10.5	1695298805	-8.702416	This blog post makes this look like a type system for theoretical type theory people to play with than something designed to actually be practical and useful.		charcircuit
37640114	11.985283	-7.7548947	comment	3.0	12.0	1695621757	10.390699	Come on, that's not in good faith and you know it. That's a special case.Now do it inside a vanilla function that isn't implicitly run inside the IO monad.		TylerE
37643088	11.733073	-7.2526364	comment	3.0	16.0	1695646939	9.190406	> What we have now is a circus.I couldn't agree more.  And my conclusion is, as it has been, to stay away from async until we have a sane situation.		tempodox
37643319	11.5975895	-7.2250834	comment	3.0	12.5	1695648013	9.204888	> how can you have one runtime that is multi-threaded and one runtime that is not, and expect to be able to seamlessly interchange them?That works fine for C#. When writing UI applications all async c...		Rohansi
37649504	11.796373	-7.2345138	comment	3.0	10.5	1695671089	-8.886324	Actual Java dev here, not just someone who used it in college and got annoyed -- but I have no idea what you're talking about. Java has not been boilerplatey for a long time, I'd say since sometime be...		galdosdi
37661159	12.067673	-7.1570387	comment	3.0	12.5	1695743538	-13.924564	Will this enable lombok officially?		wpollock
37670171	11.652626	-7.5985165	comment	3.0	13.0	1695789127	10.071596	"You have to click through to read the assignability rules.  A very short summary is that people often create new types based on core types.  For example:   type Name string

Now you can define methods..."		jrockway
37674690	11.958561	-7.0249534	comment	3.0	11.5	1695822900	8.9324465	">The following example code is a bit hard to read:  >const { status } = await send(capitalize(greeting) + ""!"")
  >console.log(status)

No it's not hard to read.  >Make it less nested, more vertical, b..."		ranting-moth
37684594	12.137743	-7.8813324	comment	3.0	12.5	1695869415	-3.1771855	Why is everyone here so obsessed with category theory? It has basically no useful theorems.		stathibus
37686666	11.631785	-7.978858	comment	3.0	11.0	1695888036	10.211006	Make it for Go, and I am sold. Running ML models in Go services is still an unsolved problem.		astronautas
37694933	12.141489	-7.8656816	comment	3.0	10.5	1695931017	-3.2339485	Any source for that? I don't think that category theory has even a minuscule influence on computer science.Type theory? Sure. Logic and model theory as well. Set theory? Number theory? Heck, even geom...		bmacho
37698514	12.145032	-7.894082	comment	3.0	10.5	1695953526	-3.1536748	I understand those concepts well, but I find the casual chain of events questionable, especially when the story is told by category theorists. For example, I was once told by a prominent category theo...		j2kun
37748197	12.065858	-7.5615487	comment	3.0	10.5	1696309858	10.43241	The short version: The team had no problems with the language when I introduced it back in the day, but after writing over 300k+ SLOC of production code over 6 years we bumped hard into a lot of the t...		bojo
37765218	11.832641	-7.3885837	comment	3.0	12.5	1696427698	-10.072008	I'm also a pretty die-hard type-system user, but I've been programming a lot of Lisp and FORTH lately. FORTH is just bad at safety period. Lisp, on the other hand, I can see why there really isn't a n...		packetlost
37765789	11.835103	-7.2959657	comment	3.0	11.0	1696430036	-8.938272	As a developer who's written hundreds of thousands of lines of C++, Python, and JS - I don't know! It's not so clear cut. I'm productive in all off them, although Python mostly wins. I wouldn't write ...		QuadrupleA
37765845	12.165177	-7.0186443	comment	3.0	16.0	1696430335	-10.379619	"""Types lead to fewer bugs when making changes to long-lived codebases"" is not up for much of a debate in my opinion. Preventing regressions is arguably a lot more important than writing a correct firs..."		Chabsff
37777466	11.783597	-7.356547	comment	3.0	19.5	1696507033	-8.907665	Nope, static typing triples the average bug count of a piece of software. Using static typing add complexity to your code and complexity leads to more bugs.Static typing is where you significantly dec...		ReflectedImage
37794498	12.303105	-7.531803	comment	3.0	12.0	1696617499	8.159161	"Kotlin is the closest thing to a ""better Java"" that I've found.  I've used it with Spring Boot and the interoperability with Java is fantastic. A Java dev would have no problem picking it up quickly (..."		jcadam
37795496	12.105387	-7.4466915	comment	3.0	14.0	1696622237	9.061016	I’ve seen this sentiment a lot and I don’t understand it. I actually feel like very little has been added between Java 8 and Java 21. Virtual threads is probably the biggest thing, and it looks very p...		skwirl
37795007	12.239606	-7.522927	comment	3.0	17.0	1696619920	-11.395147	For me personally Kotlin does not bring that much to the table over a modern version of Java. Sure if you're stuck in Java 8 it can be a win, but compared to Java 21 it just doesn't bring enough to warrant the switch for me.		vips7L
37802862	11.85098	-7.35775	comment	3.0	12.0	1696694755	7.0374546	Class-based inheritance is IMHO overrated. Most of the time you're interested in specific behavior (what is the area under this shape?), rather than some abstract taxonomy (is square a specialized rec...		rollcat
37844369	12.084221	-7.072413	comment	3.0	15.0	1697032197	12.335579	Yeah I tried it a few times and there was usually pushback during code review. I agree though, saving a few characters is not worth the readability you lose vs even something like `users.map { |u| (...) }`		pawelduda
37847999	11.785385	-7.339069	comment	3.0	14.5	1697047312	-8.755291	It's accessible to anybody with any experience programming and who is willing to pay attention. You are just taking a formula out of context, omitting the plain English explanation that comes before i...		qsort
37892287	11.6979265	-7.179693	comment	3.0	11.0	1697395774	9.150595	It was already pretty performant. The issue is as always runtime type checking. For serious stuff you really want that. Also, async everything is not fun. Simple code executed in a thread pool or whatever is so much easier to reason about.		winrid
37894023	11.906961	-7.4440145	comment	3.0	16.0	1697409247	7.2126904	"On hacker news someone told me a another name for this pattern: ""Functional core, imperative shell"". edit: I see other people have mentioned it.One of the biggest issues with this pattern is if there'..."		corethree
37901765	11.637617	-7.961583	comment	3.0	14.0	1697472043	10.212085	This seems like an issue caused by registration at a distance. I'm new to go and it is one of the things that felt most wrong.I'm used to a router where you define a big list of routes all in one plac...		iudqnolq
37916702	11.682824	-7.2809415	comment	3.0	12.0	1697556632	-8.860041	"> I find ""dynamic during runtime + static during development"" to be a highly potent combinationExcept you miss out on massive performance gains and your software runs 10x slower because of runtime type-checking. It's actually the worst of both worlds."		brigadier132
14708895	12.210722	-7.654058	comment	3.0	11.0	1499329353	10.34635	Reason/OCaml has brought back my love of programming. It is functional, statically typed, and extremely pragmatic. You can program it just like an imperative language and write mutating code without a...		jasim
14745077	11.830851	-7.06543	comment	3.0	18.0	1499787711	-10.439738	"Ah, well this would return a new object:    Object.entries(obj).map((prop, value) => ...).reduce((newOdj, [prop, value]) => newObj[prop] = value);

I see your point about verbosity :)"		thomasfoster96
14752097	12.234477	-7.6344743	comment	3.0	11.5	1499864388	11.934738	It's the new language that the creator of Scala is now working on.		hota_mazi
14757443	12.275087	-7.5290833	comment	3.0	13.0	1499900721	-11.39884	I went the other way, Scala to Kotlin[1], and that's kind of the way I look at it. Scala's a really, really neat experimental language with some awesome ideas, but the amount of work it so frequently ...		eropple
14763499	11.638713	-7.9544544	comment	3.0	11.0	1499968393	10.233975	I think the Go team would still like to understand your production uses that caused you to write off Go. What is your problem domain? How would you accomplish that in Go? How did you actually solve yo...		kardianos
14763788	11.678306	-7.5639644	comment	3.0	19.5	1499970036	10.078674	Except they seem to focus only on Java, .NET and C++, forgetting that generics were initially implemented in CLU back in 1975, and there were several programming languages since those days that had some form of generics being designed into them.		pjmlp
14764486	11.601211	-7.950083	comment	3.0	15.0	1499974866	10.213447	I've described Go programs as often looking like a listing of things that could go wrong.		logingone
14764568	11.712292	-7.53732	comment	3.0	16.0	1499975401	10.122516	Any thoughts on Eiffel's implementation of generics?https://en.wikipedia.org/wiki/Eiffel_(programming_language)#...		vram22
14763850	11.763336	-7.532473	comment	3.0	13.0	1499970413	10.18934	"> If they want to ""learn"" about generics perhaps they can read the literature of the past 30yrs and look at how other languages have adopted those learnings: Java, C#, Haskell, OCaml and Coq.Yeah, I f..."		seanwilson
14764963	11.6375475	-7.8725266	comment	3.0	11.0	1499978278	10.205191	> The basic tradeoff is monomorphization (code duplication) vs. boxing (in Go speak, interface{}).There is also the approach taken by Swift, where values of generic type are unboxed in memory, and reified type metadata is passed out of band. There's no mandatory monomorphization.		slavapestov
14765208	11.6166115	-7.8296475	comment	3.0	16.5	1499979751	10.174996	I'm not even a Go developer, I just played with it a bit a couple of years ago and used it for a small one-off internal API thing, and I can think of a dozen real-world use cases for generics off the ...		vec
14765342	11.741473	-7.3736763	comment	3.0	11.0	1499980720	-8.914879	No, there's more to it. There's been some research in recent years on the actual benefits of types and the results are less straightforward than some people think.An important aspect of type annotatio...		rbehrends
14766836	11.669686	-7.6911116	comment	3.0	10.5	1499997214	10.121607	What are the very real downsides that generics have?		jules
14780816	11.714821	-7.828528	comment	3.0	11.5	1500186663	10.369329	> you can cheat a little and write imperative code if you really need toI'm not sure if this is cheating.Yes, this can be misused to introduce side-effects where there should be none.However, the stri...		vog
14781855	11.59276	-7.8092237	comment	3.0	11.5	1500210889	9.955041	"In Go you can just do ""go doWork()"" and the scheduler runs the function as a coroutine on some kernel thread, thus allowing your program to make use of all cores.The ability to just throw goroutines a..."		lobster_johnson
14796284	11.700111	-7.773982	comment	3.0	11.0	1500384017	10.091598	I can understand people who don't like Java for various personal aesthetic reasons, but I can't understand people who don't like Java but like Go. If you like Go but don't like Java, then either you d...		pron
14800595	11.740565	-7.222803	comment	3.0	22.0	1500417410	-8.1347685	Pierce ... coined “open recursion” to refer to the kind of extensions you need to build an OOP language from a non-OOP one that just has functions (i.e. “lambdas”, “closures”, or “anonymous delegates”...		Animats
14801796	11.731303	-7.2888117	comment	3.0	17.0	1500433744	-8.104209	"foo and bar are both lambdas and closures. A named lambda is still a lambda.  foo = function (x) { return x + 1; }

is identical to  function foo (x) { return x + 1; }

They are also closures. Since t..."		sillysaurus3
14819828	11.97631	-7.7120624	comment	3.0	12.0	1500640138	10.417399	I love Haskell, but... Haskell is about as popular as SQL?  That makes no sense.		threepipeproblm
14826047	11.694223	-7.3686175	comment	3.0	10.5	1500712498	-8.706673	"Could you explain what you mean by ""open type variation""?  Google's throwing up nothing relevant ..."		tome
14826072	11.827938	-7.226522	comment	3.0	10.5	1500713089	-8.913394	Many of these are good. I agree with joncampbelldev. The dynamically typed quote is quite snarky.To that I'd reply: Statically typed languages are when you have to tell a computer that 2 is an integer...		ianamartin
14826081	11.967458	-7.703921	comment	3.0	17.0	1500713264	10.4068365	Write a program that anyone can read. Haskell inevitably ends up looking more like a mathematical equation than the simpler constructs people are more used to finding in languages like Clojure.		shakna
14831528	11.924948	-7.3334117	comment	3.0	10.5	1500801933	6.987057	> failed experiment [..] one true silver bulletWell, let's unpack this a bit.  No Silver Bullet – Essence and Accident in Software Engineering[1] was written in 1986 by Turing Award winner and author ...		mpweiher
14831834	11.6618395	-7.9401226	comment	3.0	12.5	1500810717	10.188237	So, once upon a time I wanted to associate information with http connections (as I am accustomed to in every other language I've ever written) just to enable proper http keepalive and debugging throug...		doublerebel
14855250	11.856668	-7.6559687	comment	3.0	15.0	1501068317	9.993959	> Why is this important? Concurrency is hard and if you want M:N thread multiplexing (i.e. WEB SCALE CODE, where application threads aren’t pinned to pthreads) your options today are precisely Erlang,...		IceDane
14858661	12.32687	-7.046524	comment	3.0	11.5	1501092807	13.180933	"Even though this could more properly be called, ""Why having language support for M:N thread multiplexing is important"", I thought it was a refreshing article on why I might actually use a bit of perl6..."		16bytes
14870793	11.933585	-7.4669113	comment	3.0	11.5	1501199179	7.249808	"That's ""functional"", but I sure don't want to read it."		eropple
14870929	11.60139	-7.243802	comment	3.0	10.5	1501200669	-7.1565113	Inability to practice hardware sympathy is the biggest drawback for me. With imperative code, my intuition can be useful in estimating what instructions the compiler is likely to generate (what loops ...		banachtarski
14872878	12.25197	-7.5778832	comment	3.0	10.5	1501231485	-11.395469	> Google has effectively fractured the ecosystem, pulling off what Microsoft couldn't do with J#, and they got away with it.Mostly because of the SV love, that Microsoft lacked.Sun and Oracle were rig...		pjmlp
14882809	12.16577	-7.4738264	comment	3.0	11.0	1501359030	11.9184265	Agreed. A lot of this has to do with where you came from and what you were used to previously.I initially switched to Java in the late 90's from C++. At that time, C++ was just achieving (imo) its den...		eludwig
14890297	11.974906	-7.601418	comment	3.0	48.5	1501489396	10.363946	"Can't for the life of me figure out why people equate FP with the abomination that Haskell is.Erlang is FP. Javascript is FP. Ocaml is FP.Type classes, or anything else that has ""types"" in them such a..."		dmitriid
14890558	12.006657	-7.6885867	comment	3.0	11.0	1501493707	10.399655	"I don't think many people (and not the parent) ""equate"" FP with Haskell, but Haskell is in a way the most functional mainstream language because it is the only lazy one.  You can have a purely functio..."		ykler
14890569	11.994226	-7.731499	comment	3.0	31.5	1501493864	10.3671875	Short version: You need a PhD in type theory to get anywhere.Basically every obscure overly complicated concept that Haskell throws at you (all the while pretending to be the only true FP language out...		dmitriid
14890640	11.76281	-7.42772	comment	3.0	11.5	1501494994	-8.682915	"Nope. The solution is actually ""more pragmatism"", not ""here's a thing that requires a PhD in type theory to understand""."		dmitriid
14891395	11.971517	-7.6443844	comment	3.0	13.0	1501505252	10.32656	"As soon as you have side-effects (an IO is a side-effect) you can through your assumptions about ""strict conformation to definition"" out of the window:---
treats computation as the evaluation of mathe..."		dmitriid
14890674	11.935929	-7.6651793	comment	3.0	18.5	1501495429	10.359381	> You need a PhD in type theory to get anywhere.That is extremely false. Haskell isn't even a good playground for academic type theory -- you'd want Agda etc. for that. The development of the language...		mrkgnao
14898311	11.625765	-7.9514446	comment	3.0	10.5	1501568314	10.16276	Does anyone else have the impression the most of the advantages OP lauds Delphy/ObjectPascal for are also present in Go?...is there any nice cross platform desktop UI system for golang? (with an actua...		nnq
14913429	11.697456	-7.2283306	comment	3.0	11.0	1501699501	9.267368	Since Python doesn't support multi-line lambdas, how do they support the analog in LISP? It's almost necessary for any dialect of LISP to support lambdas (i.e. functions) that contain a LISP 'do' [1] ...		winter_blue
14928668	11.603397	-7.1803117	comment	3.0	11.5	1501855064	-6.0482244	It's also very pragmatic, and probably most used functional languages in the industry at this point.		yogthos
14928174	12.139136	-7.8747635	story	3.0	92.0	1501849839	-3.2536557	Computational Category Theory	http://www.cs.man.ac.uk/~david/categories/	noch
14936651	11.670358	-7.172324	comment	3.0	17.5	1501952637	9.059078	I disagree with you. Map and reduce achieve the same result as a for loop so why not use a for loop? The end result is the same it's just a bit cooler or convenient to use map in place of a for loop, ...		crimsonalucard
14936985	11.782213	-7.366834	comment	3.0	10.5	1501956301	-8.912932	"Yeah, it was pretty clear from the outset that the author(s) had a biased view against static typing when they describe static type ""fanatics"" versus dynamic type ""advocates"", and go on to discuss all..."		jnbiche
14996864	11.95085	-7.3754435	comment	3.0	20.5	1502522905	7.0893955	Agree that Java and C++ are poor examples. However, OOP fundamentally results in a combinatorial explosion of state, which makes programs difficult to reason about. This can be useful in some niche ap...		willtim
14997110	11.7963295	-7.3529096	comment	3.0	15.0	1502527831	-7.8350663	Functional programming languages do not capture mutable state in closures.		willtim
14997003	11.932336	-7.322013	comment	3.0	17.5	1502525901	7.004429	All these guys bashing OO and in the meantime every software stack that ended up in their comment leaving their home connection is object-oriented (even if not necessarily written in an OO-friendly la...		jcelerier
14997014	11.868805	-7.4256725	comment	3.0	17.0	1502526133	7.1137896	OO solves some problems and creates others.One must remember that the competing paradigm isn't functional programming but imperative procedural programming. Very large code bases in C, Fortran, Cobol ...		alkonaut
14997867	11.948991	-7.176636	comment	3.0	12.0	1502545600	6.7373266	I think you'd benefit from taking a look at Entity Component Systems. Generally used for games, this programming pattern assigns behaviour to entities based on the components that they have. Moreover,...		dyarosla
14940960	12.465518	-7.5122375	story	3.0	180.0	1502021125	-9.414718	Talla – An Erlang Implementation of Tor [video]	https://media.ccc.de/v/SHA2017-304-introducing_talla_an_erlang_implementation_of_tor	jacquesm
15028339	12.120197	-7.503248	comment	3.0	12.5	1502897857	-10.594252	F# problems from a C# developer point of view:#1 tooling: visual studio integration of F# is poor. You don't get cross language usage reference, so you lose all the benefits of static typic. Projects ...		d--b
15038221	11.872813	-7.395027	comment	3.0	11.0	1502987483	7.19556	This is also simultaneously a strong argument for unit tests (which encode knowledge of that state into a proof of sorts).The limit of a programmer is his/her brain's ability to contain all these poss...		pmarreck
15039700	12.220767	-7.4875116	comment	3.0	10.5	1502995952	-8.975278	If two actors moved to one spot at the same time which actor occupies that spot? How can an actor act accordingly if they moved at the same time?In functional programming this can happen... in imperat...		crimsonalucard
15042339	12.027809	-7.228197	comment	3.0	12.0	1503015901	9.279642	I'm surprised that async/await is the preferred idiom.Having worked with async/await in Node.js a lot, it is of course a significantly better solution than plain promises, but it is also quite invasiv...		lobster_johnson
15048620	11.799306	-7.2954264	comment	3.0	13.5	1503081152	8.143017	I thought this was quite clear, and it's what I've always been missing in languages like Python or JS. Yet I meet many devs, especially coming from such languages, making fun of Java for its verbosity...		blauditore
15052226	11.839504	-7.498223	comment	3.0	13.5	1503128924	10.440196	"Grayson's very first answer to ""what's next"" is ""ML modules,"" a language feature probably few people have experienced first hand. We're talking about ML-style modules here, which are quite precisely d..."		jez
15064810	12.485093	-7.4924994	comment	3.0	12.5	1503325332	12.897099	"""Not that the Futamura projections can be used with erlscp yet, but, you know, just in case that day ever comes. A man can dream.""I feel like this is the lament of every compiler author."		DonbunEf7
15066358	11.849337	-7.2618394	comment	3.0	14.5	1503338679	9.289019	I go back and forth on async/await.  On the one hand, it is utterly brilliant.  On the other hand, it seems like the final epicycle, trying to fit a theory of circular geocentric orbits (call/return) ...		mpweiher
15066430	11.999142	-7.1727366	comment	3.0	12.0	1503339214	9.108738	await/promises/etc mostly exist to solve the problem that JavaScript doesn't have threads so it can't wait for callbacks.About JavaScript, many other languages have had async/await for a long time. I ...		throwasehasdwi
15080989	12.022963	-7.7960196	story	3.0	4.0	1503491971	10.420514	Functors, Applicatives, and Monads: You don't need to know theory to use them	http://joyfulmantis.github.io/posts/2017-08-23-functors-applicatives-monads.html	joyfulmantis
12538422	11.850567	-7.468015	comment	3.0	18.5	1474367802	7.544583	The author uses the definition that a pure function must return identical outputs on identical inputs. I actually think a better definition is that the output of a function cannot depend on anything b...		mthq
12538589	11.867653	-7.4590716	comment	3.0	11.0	1474370186	7.50533	The definition of a pure function is pretty well defined https://en.wikipedia.org/wiki/Pure_function. Math.random depends on hidden state, so (generally) any function using it isn't pure. This doesn't...		keeperofdakeys
12546797	12.499064	-7.048284	comment	3.0	10.5	1474452526	12.388522	Which is why for certain things like `brew --prefix` we now do it purely in Bash rather than using Ruby ;)		mikemcquaid
12560208	11.74099	-7.371198	comment	3.0	10.5	1474576979	-8.855095	Oh I know, but my opinion and experience in half a dozen statically typed languages over a decade is that most type systems add much more overhead to development than agility.I do want types when buil...		jeremiep
12560404	11.769859	-7.3341303	comment	3.0	16.0	1474578691	-8.921636	Unless you wrote the code yourself you pretty much have to run the program first and then REPL to see what the type actually is and the properties it exposes Slow, arduous, unnecessary.If the code is ...		stcredzero
12565531	11.74406	-7.352437	comment	3.0	12.0	1474646131	9.654206	"I mean, yeah. Mandatory typing isn't always The Right Thing, and XML config <english:word:grammar:adjective:insult value=""sucks""/>.  And it is a tradeoff.And partial application is never necessary. It..."		qwertyuiop924
12604174	11.606876	-7.8465433	comment	3.0	14.5	1475142081	10.130338	I don't think the speed is the problem here. Plenty of sci stuff is done in Python. Go's poor type system is a bigger issue.		aikah
12605305	12.020006	-7.79004	comment	3.0	12.0	1475158052	10.4164095	> Free monads permit unlimited introspection and transformation of the structure of your program; Free monads allow minimal specification of each semantic layer, since performance can be optimized via...		bad_user
12612282	12.17811	-7.5049195	comment	3.0	13.5	1475242167	-11.193277	"For me, it's first class function support. Of course, there are other ""real functional languages"" like Scala, Haskel or whatever, but they very uncommon.
JS is the only commonly (Clojure is very uncom..."		tomca32
12608870	12.020609	-7.5450053	story	3.0	8.0	1475184309	7.300274	Ask HN: Where to learn “advanced” concepts in Functional Programming		jaybosamiya
12579924	11.648711	-7.976329	story	3.0	130.0	1474874590	10.1949	Go tooling essentials	http://golang.rakyll.org/go-tool-flags/	rakyll
12648910	11.939726	-7.791081	comment	3.0	10.5	1475710603	10.38192	>Which is easy for a coastal educated person to say, but to a line of family men who have not just eschewed education but actively resisted it, this is a tough pill to swallow.I don't think it's so mu...		wildmusings
12658981	11.972679	-7.456389	comment	3.0	16.0	1475828010	7.260973	Yet, functional programming is an in vogue as ever.		ghayes
12666546	11.783817	-7.338708	comment	3.0	13.5	1475925957	-8.909356	This is an extreme demonstration of the validity of a delightfully snarky blog post by Robert Harper on how dynamic typing is actually static typing using a unitype:https://existentialtype.wordpress.c...		tempodox
12668119	11.979817	-7.743728	comment	3.0	13.0	1475953300	10.43697	Unification + backtracking is really, really, really really cute. Makes you think very abstractly, so much that it made me feel that haskell was verbose (not trying to be hyperbolic here).A nice book ...		agumonkey
12656883	11.639895	-7.976454	story	3.0	2.0	1475795269	10.230663	Ask HN: What is Go really good for?		aligajani
12704392	11.796975	-7.352203	comment	3.0	14.0	1476395785	-8.918464	Static versus dynamic typing is so fundamental that I don't see how a programmer could be remotely competent without having been exposed to those concepts enough to have internalized them. It would be...		mikeash
12703613	11.853867	-7.3715963	comment	3.0	21.5	1476389137	-10.185475	I still think the way Common Lisp handled typing was very convenient: Typing was basically dynamic, but one could use static typing in specific places, and one could even tell the compiler if this was...		krylon
12704961	11.823716	-7.1686306	comment	3.0	11.0	1476400405	-8.977196	Well, I like to put that another way -- I think Python is all about protocols (in the Python sense of the word protocol). I think that is what most people mean when they say Python is all about duck t...		dbcurtis
12704962	11.826045	-7.311787	comment	3.0	14.0	1476400413	-8.96994	A sufficiently good static type system won't make generic operations harder to implement. It can even make them easier to implement in terms of guiding you towards good generalization techniques.You c...		wyager
12706081	11.594	-7.8742394	comment	3.0	12.5	1476418097	10.24236	C++ and Go don't have type inference. All they do is set the type of new variables to whatever they're first initialized to. Type inference means figuring out the types of variables from how they're used. The litmus test for type inference is inferring function argument types.		catnaroek
12729092	12.236417	-7.602865	comment	3.0	12.0	1476734626	11.925963	If you can program Java you can program Scala. You can't write good Scala code, but that (hopefully) comes with time. Scala solves the same problems Java does, just better. And there are lots of jobs ...		tormeh
12729428	12.193078	-7.5623927	comment	3.0	13.5	1476736370	11.944628	Scala was my first serious use of a JVM language and I kept hitting little rough patches that people were assumed to understand from a prior Java background. One example: a month or so into my use I s...		philipkglass
12737055	11.920246	-7.0347166	comment	3.0	15.5	1476813696	8.506241	The next interesting thing for the JVM is value types in Java 10. It may convince me to use it pre release.		spullara
12737488	12.111782	-7.2904115	comment	3.0	33.0	1476816705	8.545717	Am I missing properties? Dear god it's 2016, with Java8, and we still don't have real, language-defined properties? I mean you can use Lombok (and if you're not, you should be!), but that's something ...		djsumdog
12737596	11.978852	-7.223916	comment	3.0	21.0	1476817256	8.747282	> Scala, Groovy, Clojure, JRuby, etc.I am yet to work in a Java project where I am allowed to use any of them.Regarding the properties I really don't get what is the big deal.No one used to complain a...		pjmlp
12737766	12.0022135	-7.1746416	comment	3.0	16.5	1476818303	-5.9288197	Because it's not just an 'ignoring of errors', it's the fact all exceptions (as in actual errors from the runtime) are silently swallowed. In your example, if you typo in that function body, an except...		nilliams
12741505	11.693593	-7.418343	comment	3.0	14.0	1476857638	10.219263	Knuth's function would be written in Haskell as thus:f [n] = [n]f [m, n] = [m, n, 0, 1]f [m, n, r, 1] = [m, n, mod m n, 2]f [m, n, r, 2] = if r == 0 then [n] else [m, n, r, 3]f [m, n, p, 3] = [n, p, p...		nayuki
12741528	12.503173	-7.4668927	comment	3.0	11.5	1476857967	-12.122005	For me what's striking about Erlang syntax is the meaning of the semi-colon and the period, as function clause separator. Most of the rest is just vanilla FP lang syntax.		old_sound
12758812	11.721116	-7.76501	comment	3.0	11.0	1477035685	10.150017	You seem to assume thatA) Types are low levelB) C++ and C are the only competition to JavaScriptC) Not having to worry about types makes you faster or in any way betterA) is simply refuted by looking ...		tscs37
12770819	12.090966	-7.8357377	comment	3.0	14.5	1477174588	-3.278844	"Why don't things like Category Theory and Set theory update their terminology to align with more modern words of describing these?Why is a ""function"" and ""arrow""? A ""function"" implies an operation tha..."		gravypod
12774503	11.761351	-7.344843	comment	3.0	21.5	1477244640	-8.887994	I've started to feel the same way. I feel like a lot of developers would be better off in a dynamically-typed language because it is such common practice to completely subvert the type system and ther...		natec425
12774626	11.730765	-7.332937	comment	3.0	17.5	1477246167	-8.881802	> My last job was in C#, and it seemed like so many things were stringly typed, entirely nullable, or used something else to weaken the type system.This sounds like C# as written by people that don't ...		d357r0y3r
12774646	12.115816	-7.102587	comment	3.0	10.5	1477246504	9.015846	"""…a client side enterprise application that is well over 20k lines of TypeScript over tons of files […] But there's so little cost to having static typing I don't know why you wouldn't want it""I don't..."		Someone
12774617	11.79049	-7.338407	comment	3.0	13.5	1477245969	-8.921102	Both proponents and detractors of static typing seem to miss its major benefit: tooling.Being able to hit . and get a reliable list of things I can do is worth many millions of dollars to me.		carsongross
12776873	11.696478	-7.476472	story	3.0	62.0	1477286747	9.173325	Fast-async – async and await using syntax transformation at compile-time	https://github.com/MatAtBread/fast-async	guifortaine
12791311	12.197218	-7.633105	comment	3.0	17.5	1477426834	11.923902	One benefit Swift has over Scala is that it compiles down to LLVM and is statically linked. I still love Scala though, hands-down my favorite language to work with.		Cyph0n
12791768	12.214569	-7.593593	comment	3.0	11.0	1477430735	11.939913	Scala compiles to LLVM too.https://github.com/scala-native/scala-nativeThough it's experimental (and will likely remain that way for a while).		paulddraper
12808420	11.763375	-7.321706	comment	3.0	10.5	1477594724	-8.880536	I look at this as cyclic trends (I'm not sure if 'trend' is the right word here, but it's a good enough approximation) - as you've said, we're entering the cycle of 'expressive statically typed, compi...		iyn
12830422	11.90161	-7.063144	comment	3.0	13.5	1477842581	-10.769559	I'm working on some Asyncio stuff right now. Asynchronous programming seems pretty natural to me, but other people do struggle to wrap their heads around somewhat confusing terminology: tasks, co-rout...		orf
12830516	11.906464	-7.033096	comment	3.0	11.0	1477843593	-10.778538	Have you tried comparing the performance of asyncio based network requests versus multithreaded requests? And also compared the relative complexity of the code?I have never used asyncio in Python, mai...		sidlls
12831864	11.636947	-7.459227	comment	3.0	14.0	1477857161	9.31979	Coroutines are goto.That's not a joke or anything, the semantics of coroutines are the semantics of goto statements.  All this async business is just the old spaghetti sneaking back in while people are distracted by the nomenclature.		carapace
12832312	11.918181	-7.6272817	comment	3.0	11.5	1477861748	10.425228	Sometimes, ideas come before their time? How many times has parametric polymorphism been reinvented? Java tried to pretend it wasn't important, and then Go.Python isn't really typed, which allows it t...		lambdasquirrel
12838856	11.680761	-7.917593	comment	3.0	10.5	1477934574	10.202086	Is there support for GoLang to WebAssembly?Or will it be more of a GopherJS to WebAssembly?Thanks		no1youknowz
12850318	11.743804	-7.1442976	comment	3.0	16.5	1478036817	5.1082783	From the postscript of this slide deck:It appears to me that almost everyone who has read this has completely missed the point, even though I said it twice in big letters. People keep sending me mail ...		skrebbel
12851803	11.971451	-7.2473297	comment	3.0	12.0	1478053065	9.167574	"Dear Javascript coders:If you wind up writing the word ""await"" in your codebase more than once, you're doing it wrong. You will quickly see how futures/promises wind up taking over all of your code. This is a very good thing. You shouldn't need to block, ever.Sincerely,Scala coders"		mark242
12823126	12.242306	-7.6564355	story	3.0	10.0	1477728776	11.92807	Scala 2.12.0 released	https://github.com/scala/scala/releases/tag/v2.12.0	pedrorijo91
12783913	11.971548	-7.56146	story	3.0	132.0	1477352539	10.466955	IHaskell – A Haskell kernel for Jupyter	https://github.com/gibiansky/IHaskell	sndean
27528110	11.702172	-7.3148866	comment	3.0	11.0	1623849013	-8.944583	"Yes. Stabel is staticly typed, and types are inferred if the type signature is left out. You could also write the code as:    def: cube
    type: Int -- Int
    : dup dup * *"		Skinney
27544314	11.915108	-7.181159	comment	3.0	20.5	1623962410	9.116009	> I believe that the better reason for asynchronous is it enables modeling complex flow control efficiently. For example, patterns like pausing or canceling an in-flight operation are challenging with...		littlestymaar
27555192	11.634575	-7.2497926	comment	3.0	31.5	1624051404	-7.6928773	"Booch: Your functional programming work was unsuccessful.Backus: Yes.Booch: Let’s dwell upon that for a moment, because there
were some other papers that I saw after your
Turing Award lecture [“Can Pr..."		discreteevent
27556635	12.014325	-7.7842093	comment	3.0	15.0	1624062623	10.438338	The rest of the interview provides an interesting context there. He retried in 1991, and, since then, he seemed to have been extremely uninterested in keeping up to speed with any newer programming la...		mumblemumble
27537913	12.28946	-7.3156004	story	3.0	129.0	1623923641	7.1114054	The evolution of Smalltalk: from Smalltalk-72 through Squeak (2020)	https://dl.acm.org/doi/10.1145/3386335	tosh
27592009	11.931513	-7.717263	comment	3.0	12.0	1624371919	10.42117	It's close. I also want something that is going to be syntactically familiar to humble programmers (my target users, myself, etc); Dhall's syntax is clearly Haskell-adjacent which is an obstacle for many of us. I'll probably just roll my own using a Rust-like syntax.		throwaway894345
27638524	12.003697	-7.7689505	comment	3.0	12.0	1624674600	10.435534	I have no idea why this is downvoted.For all the functor tutorials, it really is nothing more than the interface and rules that define map. And Monad is essentially flatmap.That's was so absurd about all of this.		BoiledCabbage
27639039	12.12159	-7.867532	comment	3.0	10.5	1624680693	-3.2605162	As someone who studies both CS and pure math, it's quite interesting when I see posts that take a very operational reading of functors and monads, instead of its shorter and more precise categorical d...		siraben
27639058	12.01124	-7.795615	comment	3.0	22.0	1624681006	10.420223	> I am now going to look for a tutorial on Monads that's written in, say, PythonIt probably won’t be very helpful. The definition of a monad is 90% in the types.People use Haskell to talk about monads...		wyager
27639408	12.000161	-7.7404714	comment	3.0	11.0	1624685931	10.354778	To be honest I feel like the functor concept is too abstract and subtle to the point where it's probably not very useful in the context of programming.Worse... their usage in programming languages is ...		chobytes
27639286	12.041369	-7.7468705	comment	3.0	12.5	1624684172	10.364531	I know this is just for Haskell but someone needs to start explaining category theory at a level 10 year olds can understand or something. Have struggled with confusion in the same way there.So far all I got from this is that functors are functions?		nicolasrusso
27640864	11.859749	-7.470703	comment	3.0	11.0	1624705285	7.439045	This idea can be extended by observing the following analogy:purity is to functionsasimmutability is to dataImmutability is definitely a valuable technique that can help make software faster (sometime...		mightybyte
27641651	11.722834	-7.3909464	comment	3.0	49.5	1624714328	-8.849342	Every programming paradigm is a good idea if the respective trade-offs are acceptable to you.For example, one good reason why strong static types are a bad idea... they prevent you from implementing dynamic dispatch.Routers. You can't have routers.		ukj
27641960	11.808949	-7.334778	comment	3.0	14.0	1624716332	-8.895367	Plenty of people know multiple statically typed and dynamic languages, and multiple functional, imperative, and other languages; and use dynamic languages for some things but not other things. The set...		RHSeeger
27650135	11.625229	-7.953231	comment	3.0	12.5	1624787938	10.187954	"> My disappointment with Rob Pike's Go language is that the rest of the world has moved on from ASCII, but he did not.Um, the Go reference explicitly states that ""Source code is Unicode text encoded i..."		lucsky
27659688	11.872993	-7.2935705	comment	3.0	15.5	1624872695	7.140377	Personally, I have come to the conclusion that object-level encapsulation is not a good design principle, but rather an antipattern because it complects data with code [1].OOP tries to manage global m...		taffer
27659406	11.881779	-7.35649	comment	3.0	25.0	1624869507	7.0127277	Overuse/misuse of inheritance has triggered hatred of OOP among many software developers...		pulse7
27661646	11.945943	-7.3652353	comment	3.0	10.5	1624886749	7.0877776	Lots of OOP proponents disagree strongly with Kay’s definition of OOP, and his definition certainly doesn’t reflect the way the most popular self-described OOP languages are written today. Notably, Sm...		throwaway894345
27662453	11.889135	-7.367929	comment	3.0	18.0	1624890587	7.0802283	Well, this is HN so I did not want to sound condescending by stating the obvious.OO Programming 101, OO principles: encapsulation, abstraction, inheritance, polymorphism, SOLID.Whatever a specific language adheres to and how is beside the point.		mytailorisrich
27674352	11.631094	-7.208208	comment	3.0	10.5	1624965971	-5.491393	Curiously, the graphical lambda calculus notation for the Y combinator slightly resembles a Y, especially when bent a little as shown at the top ofhttps://tromp.github.io/cl/diagrams.html		tromp
27683589	12.408957	-7.3945622	comment	3.0	10.5	1625013289	-8.816204	That really doesn’t answer the question. What does the BEAM VM provide that cannot be implemented in Rust or Go or even Python.		jimsimmons
27684498	12.437022	-7.370329	comment	3.0	16.0	1625023426	-8.767655	In the 200Xs, the BEAM VM had a clear performance advantage in dealing with high-concurrency network loads. It has never had a raw performance advantage in terms of the bytecode that it implemented, t...		jerf
27684693	11.74958	-7.3851504	comment	3.0	10.5	1625025360	-8.846218	I don’t really understand how a type system in and of itself raises the learning curve unless the language commonly uses esoteric types. You still have to understand your data structures in dynamically typed languages; does it really add much cognitive overhead to declare what they are?		staticautomatic
27685819	12.353473	-7.3927464	comment	3.0	11.5	1625037268	12.743043	> these are all of fairly low quality compared to other competing languages/implementationsSeriously? You say this without providing examples?I'm not aware of any other programming environment that has BEAM-like processes.Not Go, not Java, not any other system I know.		divs1210
27690350	11.843758	-7.4191065	comment	3.0	14.0	1625069888	-5.8110757	> Use immutability by default, even in languages that make that harder than it should beThat and referential transparency are huge wins. It is a shame languages like Python make it such a challenge.		macintux
27690393	11.855278	-7.3624616	story	3.0	4.0	1625070073	6.9264274	Why inheritance never made any sense: 3 different inheritances	https://www.sicpers.info/2018/03/why-inheritance-never-made-any-sense/	pcr910303
27721306	12.313486	-7.2976694	story	3.0	78.0	1625316860	7.065568	Learning Squeak (2019)	https://wiki.squeak.org/squeak/6622	AlexeyBrin
27770566	11.665091	-7.331206	comment	3.0	15.0	1625743517	-8.771779	For languages with Hindley-Milner typing, like SML and OCaml, it has long been known that type-checking is even worse in the worst case (DEXPTIME hard) [1]. But the programs where this matters aren't what one would write by hand, typically.[1] https://dl.acm.org/doi/10.1145/96709.96748		lower
27772483	11.911482	-7.6385336	comment	3.0	12.5	1625754996	10.395137	"Maybe it's a good idea to add a concrete example (can't edit the reply anymore):OCaml:  let x1 = fun y -> (y, y) in
  let x2 = fun y -> x1 (x1 y) in
  let x3 = fun y -> x2 (x2 y) in
  let x4 = fun y -..."		lower
27781088	11.697965	-7.1206894	comment	3.0	14.5	1625813516	-7.299454	"Excessive usage of anonymous functions is a major pain. JavaScript developers for some reason almost refuse to name their functions, even though it would make reading and reusing code much easier.You can make lambdas in Python, but naming function is in my mind very much a ""feature""."		mrweasel
27781331	11.728952	-7.028787	comment	3.0	11.5	1625816252	9.09323	> ...like groupBy(fn), sortBy(fn), countBy(fn), collate...What leaps out at me is that these 3 functions are all straight out of relational algebra style worldview.Python the language doesn't support ...		roenxi
27784762	11.609646	-7.93727	comment	3.0	11.0	1625844992	10.301412	Obviously this is subjective, but for my money I use Go for everything where development velocity matters and Rust for everything where performance and/or safety are paramount. I steer clear of VM and...		throwaway894345
27785859	12.25138	-7.561691	comment	3.0	18.5	1625850215	-11.365318	Yes and no, Jetbrains did an incredible job on Kotlin with  seamless interop with Java, trouble-free mixed Java/Kotlin codebases, as well as reducing the learning curve and mental context switching as...		dangets
27809081	11.987725	-7.743073	comment	3.0	11.0	1626088063	10.424965	I'll add my two cents.  Over the past year or so I went from being completely overwhelmed by Haskell to feeling pretty comfortable reading / writing Haskell, even enough to make my first PR to a Haske...		benrbray
27811994	11.793972	-7.4088254	comment	3.0	12.5	1626107397	9.230939	it always shocks me when someone says that channels are not immediately intuitive.  they make so much sense to me, and they did from the instant I read about them.combined with goroutines, channels ar...		naikrovek
27815027	11.613503	-7.8944793	comment	3.0	11.5	1626123404	10.09564	Am I the only one who finds Go concurrency model to be extremely bug prone and difficult to work with? Writing an efficient pipeline of goroutines connected with channels that doesn't deadlock is a ve...		kubb
27823500	11.995821	-7.6899576	comment	3.0	12.5	1626196432	10.407012	I'm curious about how your new language would work. From my (limited) understanding, the big differences between Haskell and SML are the type system and stictness/lazyness. I think a Haskell-like type...		Zababa
35167118	12.247572	-7.3019176	comment	3.0	11.5	1678882742	7.1130643	> complex engineering problems where the data model is inherently very complex, Smalltalk can really helpInteresting, what are the features of smalltalk that make that possible? Wouldn't it be very si...		brabel
35170473	11.799361	-7.213234	comment	3.0	11.0	1678896490	-9.035899	I dont necessarily need all that dynamism though, and would happily use a Python subset that removed some stuff (and forced type hinting) in exchange for better compilation.Yes there are already subsets like this, but its not as helpful if it isnt standard.		brucethemoose2
35195644	11.916412	-7.6480613	comment	3.0	17.5	1679053050	10.28807	Not all C api calls produce (observable) side effects. As a very simple example, the  sin() function from math.h is a pure function of type `Double -> Double`. No need to wrap that in IO.		WJW
35197979	12.223809	-7.6261635	comment	3.0	19.5	1679065341	11.9375515	Isn't there natural interop between Java and Scala? Why needlessly enlarge the language.		eternalban
35198020	12.224968	-7.615834	comment	3.0	14.5	1679065578	11.936161	Scala is super complex, introduces breaking changes all the time, is super slow to compile, multi-language projects are also complex, and the decisions that are right for Scala may not be right for Java.		vips7L
35214883	11.646216	-7.963658	comment	3.0	11.5	1679187843	10.228931	"I think in this context ""ad hoc"" refers to the context in which that syntax was added. IIRC the original creators were against generics ever being added to Golang, so they wouldn't have thought about ..."		jeffparsons
35173632	12.120772	-7.8706484	story	3.0	7.0	1678909220	-3.1591272	Category Theory Illustrated – Functors	https://abuseofnotation.github.io/category-theory-illustrated/06_functors/	boris_m
35195348	11.96836	-7.7298627	story	3.0	88.0	1679050089	10.409237	The friendship between Haskell and C	https://typeclasses.substack.com/p/the-friendship-between-haskell-and	signa11
35254420	11.699902	-7.8570514	comment	3.0	13.5	1679441882	10.089788	"> I was surprised how much was included and ""just worked"".A simple HTTP server? Maybe I'm missing something, but when I needed it I hadn't found one.I believe, the closest it has is System.Net.HttpLis..."		drdaeman
35359692	11.801685	-7.174134	comment	3.0	14.5	1680107819	-9.029723	If Visual Basic is supposed to be for beginners, it's surprisingly complicated.It has both value types and reference types and both can be passed either by reference or value, giving four ways of pass...		ptx
35379195	11.692626	-7.912269	comment	3.0	16.0	1680212659	10.238693	"100% agree. I use a programming language to get stuff done. and if the day ever comes that someone wants me to show them how I do what I do, I dont want to start that conversation with a sigh ""well......"		2h
35322692	11.800197	-7.2148542	story	3.0	6.0	1679889362	-8.981608	Ask HN: Python’s Prospects in a Copiloted World		jamesralph8555
35409439	12.274692	-7.411894	comment	3.0	19.5	1680434916	12.841127	> the sophistication of the scheduler, and the way various language primitives interact with itThat was brought over to the JDK six months ago. The JDK can now spawn millions of Erlang-like processes ...		pron
35440130	11.996335	-7.679249	comment	3.0	18.5	1680618216	10.410473	Yep I've seen seniors/principals come in and steamroll people trying to do FP by claiming that it was inscrutable and irresponsible. Sometimes even going up the chain to cause shake-up without the tea...		whateveracct
35451025	11.986846	-7.7460384	comment	3.0	12.0	1680683183	10.434496	I don't really get what's so good about Haskell.		Gordonjcp
35452990	12.187326	-7.6380434	comment	3.0	13.5	1680697873	11.918986	What happened are multiple factors1. Web3 hired a lot of these people and so they had less time to work on this stuff. Shame to spend that much on a dead end but eh2. Scala died with Big Data. It is s...		di4na
35492338	11.676477	-7.7614512	comment	3.0	15.5	1680953839	10.121548	Especially when they will eventually have to walk back on their decisions a few years later, see generics..		kaba0
35492742	11.660309	-7.944365	comment	3.0	12.5	1680958962	10.204203	Where did you get the information that the Go team never wanted Generics, even the hype around having generics yet the stats shows 50% of Go developers wasn’t interested in ithttps://go.dev/blog/survey2022-q2-results		Patrickmi
35504069	11.655995	-7.35693	comment	3.0	22.0	1681056904	-8.697577	Type 1 is the most common type of programmer I've seen, and they are the reason everything is complex and fragile.Most programmnig jobs force you to spend most of your time editing config files and tr...		hsn915
22317252	11.995747	-7.7013264	comment	3.0	12.5	1581597646	10.422854	All these building NNs in haskell, ocaml or another language solving an extremely simple problem which is ok if you want to just have some fun. But if the proponents are really serious they would put ...		nafizh
35500918	11.599575	-7.0505476	story	3.0	6.0	1681029416	8.980519	Ask HN: Recommendation for Language Without Punctuation Nonsense		akasakahakada
22361823	11.6460905	-7.5162754	comment	3.0	11.5	1582071096	9.863555	I suspect the problem is that Generics bring you face to face with the Liskov Substitution Principle. For most of us it's just a good idea, and then you try to do generics and all of a sudden it begin...		hinkley
22361902	11.617846	-7.89685	comment	3.0	17.0	1582072042	10.206808	Go has been amazing here at Stream. No way we would be able to power chat and feeds for 500 million end users with such as small team without Go. C++ would be a valid option in terms of raw performanc...		tschellenbach
22368432	11.665511	-7.227743	comment	3.0	11.0	1582136900	6.6129594	C#'s pattern matching does not include the ability to check for exhaustiveness, which is need to make pattern matching comparable in utility and power to inheritance (i.e. so you can actually replace ...		platz
22370582	11.660146	-7.1391463	comment	3.0	12.5	1582149808	9.304733	One problem with Python's syntax, though, is that you can't have anonymous lambdas which span more than one line (unless perhaps you start using escapes, but that would miss the point).		amelius
22383548	12.256779	-7.690907	comment	3.0	33.0	1582297077	10.375688	The underlying OCaml naturally.Having learned ML via Objective Caml's predecessor, Caml Light, ReasonML seems to be just sugar coating for those with aversion to ML classical syntax.		pjmlp
22384838	12.076959	-7.8118715	comment	3.0	14.0	1582305763	10.428488	If you were right OCaml wouldn't be the only language with a popular syntax veneer.		throwaway894345
22396545	11.73228	-7.664502	comment	3.0	29.5	1582461286	10.240409	The article mentions “Simple is better than complex”, but not the next line of the Zen of Python, which I think tells us a lot about that language’s philosophy: “Complex is better than complicated”.Lo...		pansa2
22396964	11.642639	-7.949963	comment	3.0	11.5	1582468161	10.225448	Not a Golang expert or zealot, but a few things come to mind that make it suited for large scale projects and collaboration:1) Extremely fast build times (even for large codebases).2) The package syst...		tmountain
22397169	11.644411	-7.924895	comment	3.0	12.0	1582470963	10.190164	The simplicity of the language means no gigantic class hierarchies. Theres are fewer ways to do something.Since engineers spend most of their time reading and debugging, readability and low abstractio...		mxschumacher
22399051	11.630521	-7.9263444	comment	3.0	11.0	1582487041	10.238177	Your comment is unfair.I've been programming for more than 20 years. I've learned many languages including C, Objective C, Java, Python, Ruby, JS, and some Haskell. I've never worked at Google.Go is m...		hellcow
22405483	11.64051	-7.3220825	comment	3.0	15.0	1582561832	-8.815846	A type checker should track an aspect of this thoroughly. If you find yourself relying unit tests as a contract to prevent future changes something is wrong with your coding methodology. Too many depe...		crimsonalucard
22412574	11.952143	-7.620455	comment	3.0	12.0	1582633463	10.385261	That sounds more like an implementation detail, in most cases. By this metric Haskell wouldn't be a functional language.		pdexter
22414720	11.689267	-7.412376	comment	3.0	10.5	1582649452	-8.795406	"> Static types are there to document and to catch bugs early; they cannot be used as a complete verification that your code is correct, much less a generative tool for writing logic where ""you're not ..."		agentultra
22357653	12.442245	-7.063341	story	3.0	70.0	1582046025	-10.90393	RuboCop 0.80: Ruby static code analyzer and code formatter	https://docs.rubocop.org/en/stable/	tosh
22443567	11.598743	-7.462398	comment	3.0	21.0	1582905162	10.103024	A lot of people seem to be missing an overarching point, which is the benefits of a language having Sum types, so that edge cases can be represented clearly, and in a way where the consumer of the api...		gameswithgo
22444027	12.050124	-7.850496	comment	3.0	35.5	1582908133	10.379467	Languages like Haskell and Go already have multicore GCs. How does OCaml's multicore GC compare? Is the work taking a long time because it is doing something brand new in the design space, or is it simply hard to integrate it with a mature language that was designed to be single core?		msvan
22444205	11.794161	-7.1454315	comment	3.0	32.0	1582909349	-8.963921	Python is 'strongly' typed `dynamic` language!!!		palerdot
22444246	11.896755	-7.779143	comment	3.0	15.5	1582909677	10.359203	It's hard to make a concurrent GC that also allows for the kind of super-cheap allocation that OCaml depends on for its performance characteristics. Allocation is expensive in Go, for example, but thi...		throwaway894345
22444297	12.061195	-7.860166	comment	3.0	11.0	1582909984	10.416539	Disclaimer: I don't speak for OCaml or OCaml Labs but I am a contributor to multicore.It is indeed that it is hard to retrofit parallelism on to an existing language while trying to retain backwards c...		sadiq
22447881	12.002561	-7.6853657	comment	3.0	11.5	1582938185	10.398744	Miranda is still taught as a language for University College London's Functional Programming course: https://www.ucl.ac.uk/module-catalogue/modules/functional-pr...Students grumble at having to learn ...		hyper_reality
22448398	11.9200115	-7.5234213	comment	3.0	10.5	1582944493	-7.0227466	Back in the 90s I remember taking a course that used Simple ML. I was pretty amazed by it's elegant syntax, and If I remember it correctly, it was either based on, or related to Miranda. I haven't rea...		jungletime
22487634	11.85396	-7.3093204	comment	3.0	12.5	1583353398	10.37501	Duck typing is according to Wikipedia: https://en.wikipedia.org/wiki/Duck_typingDuck typing as a concept was re(?)-popularized around the advent of ruby, so might make sense to talk from a ruby perspe...		loopz
22511321	11.896146	-7.650415	story	3.0	72.0	1583585734	10.313987	How Does Lazy Evaluation Work in Haskell? (2014)	https://apfelmus.nfshost.com/articles/lazy-eval-intro.html	gbrown_
22557341	11.789374	-7.213275	comment	3.0	11.0	1584024122	6.958653	Do you need all 3 of them to have a class? In my experience classes are data+ methods that manipulate that data. Like a Vector class would have a rotate,normalize etc methods that return a new Vector.		simion314
22558527	11.641689	-7.0792737	comment	3.0	15.0	1584030576	6.456996	I didn't realize how rich the normal match { } patterns can get until I saw these matches!() examples and was trying to figure out what that pattern syntax was. I've only ever used the basic enum matching/enum value unwrapping patterns.		_bxg1
22559972	11.848857	-7.187968	comment	3.0	12.5	1584037426	-8.484446	I just don't see much of a practical difference between these two approaches.  From a functional perspective, objects are fundamentally a set of namespaced functions that implicitly take the same stat...		cle
22573320	11.916563	-7.250319	comment	3.0	11.0	1584162381	-10.041023	There's a difference between a linter that's capable of catching some type errors and a full modern static type system. Compare e.g. MyPy with TypeScript. Dialyser reduces runtime type errors; a full type system can eliminate them.		logicchains
22576535	11.796642	-7.2939014	comment	3.0	16.0	1584203656	-6.0529127	Are you sure you two are talking about the same thing?My understanding of immutable infrastructure is the same as immutable data structures: once you create something, you don't mess with it. If you n...		wpietri
22516059	11.719071	-7.150982	story	3.0	78.0	1583636645	5.390451	Design Patterns in Dynamic Languages (1996)	https://norvig.com/design-patterns/	xxuser
22618141	12.134504	-7.496942	comment	3.0	13.0	1584547543	12.331741	VB is dead. Get over it. It was a concession to an army of classic VB devs to not risk losing them to other technology when .NET and C# were born.Since then, every VB develooper has had two decades to...		alkonaut
22618829	11.761965	-7.0861454	comment	3.0	12.5	1584551148	-8.423332	As stated in the text, for `super` calls to work within a method, it’s necessary to know the class on which the method is defined. Here, that’s easy - it’s the class that the method is lexically defin...		pansa2
22643624	11.831192	-7.584564	comment	3.0	23.0	1584756445	10.017436	In Haskell, because of laziness, lists work well enough, but they're really just a thunk container.  Conduits are better.		cryptonector
15094884	11.600916	-7.3997717	comment	3.0	11.5	1503616408	9.208803	Please remember that sync.Map isn't type safe and is more optimised  for reads.		cristaloleg
15104806	11.773398	-7.356564	comment	3.0	13.5	1503740869	-8.918113	I think, to some degree, the idea that drives strongly typed, theorem proved languages is a bit different than what most people think of when coding.A large set of people in that community want to der...		Karrot_Kream
15105413	11.770498	-7.3647685	comment	3.0	14.0	1503755307	-8.830495	"This has not been my experience with strongly and statically typed systems. The biggest problem is the coding is not fast; especially if you make a change that requires ""shaking the tree"". Turnaround ..."		falcolas
22593737	11.933063	-7.698185	story	3.0	61.0	1584374292	10.376407	Show HN: Pascal to LLVM Compiler in Haskell	https://github.com/sam46/Paskell	sam46
15140644	11.936253	-7.4902964	comment	3.0	19.5	1504190637	7.284812	I've been paying attention to functional for the last 6 or so months and coming from a C background, its emphasis on immutability, data-oriented, readability, and safeness is really attractive if you'...		bimbossible
15141549	11.9404545	-7.467123	comment	3.0	10.5	1504197641	7.2512684	Functional programming means, that your program is composed out of functions. A function only depends on its input parameters and the effect of applying a function is the returned function result. By ...		_ph_
15141341	11.827126	-7.3400836	comment	3.0	19.5	1504196206	-6.102277	Immutability typically requires lots of copying anyways, even in functional languages. There is no free lunch to be had.		seanmcdirmid
15141879	11.764978	-7.32195	comment	3.0	12.0	1504199575	-6.1389728	Surely immutability works well when sharing values that shouldn't change anyways, in functional or other styles of programming.What we are talking about here are immutable data structures that replace...		seanmcdirmid
15151351	11.636797	-7.9701304	comment	3.0	11.0	1504291475	10.267198	I wonder how much this varies by programming language. In Go, gofmt ensures that most stylistic choices are similar for everyone (Go code tends to look alike) and patterns and rules are fairly well co...		rustyfe
15169407	11.984204	-7.7319436	story	3.0	137.0	1504544238	10.458882	Roll Your Own Bitcoin Exchange in Haskell	http://www.michaelburge.us/2017/08/31/roll-your-own-bitcoin-exchange.html	MichaelBurge
15207703	12.243412	-7.285521	comment	3.0	14.5	1504973513	-10.294964	I know so little about Smalltalk and its way of software development. A year ago, I read about VisualAge, and asked this question on the lisp subreddit:https://www.reddit.com/r/lisp/comments/4saada/cu...		delish
15240896	11.829012	-7.597252	comment	3.0	11.5	1505325955	10.052872	OK, so when was the last time knowing something is a monoid helped you solve a problem that you were having difficulty with?		vertex-four
15241020	11.877381	-7.6305685	comment	3.0	22.5	1505326609	10.094272	The problem with this argument is that a monoid is one of the most basic constructs you can find in abstract algebra. Using monoids as a shorthand for a couple of simple axioms doesn't buy you much; h...		rbehrends
15241849	11.846027	-7.612219	comment	3.0	14.5	1505331606	10.079282	"The original argument was that naming them ""monoids"" reduces cognitive load. Can you explain how exactly you see this reduction in cognitive load coming to pass in programming? Because from your previ..."		rbehrends
15242741	11.849464	-7.018409	comment	3.0	10.5	1505337138	8.808867	Seems to me this is approaching this totally the wrong way. First off, the current implementation is just looping through all the methods of the implementing class and the first one that matches a Nod...		jtmarmon
15243719	12.089945	-7.7338147	comment	3.0	12.5	1505345501	10.518429	Eh, as someone who works in scala day-to-day, and has studied actual category theory, I think the emphasis on category theory itself is silly.  And in fact, most of the time, more category theory and ...		ebola1717
15251149	11.9897375	-7.6236978	comment	3.0	14.0	1505414661	10.391241	Seems like a design pattern from Java which often are badly converted functional programming snippets into OOP. I once loved C++, now I can't force myself to read the code anymore... Please add some m...		bitL
15282932	12.168984	-7.3141346	comment	3.0	12.5	1505812180	7.1327996	"""More or less"" ... I can see that it's hard after decades of ""data-centric"" perspectives to think in terms of ""computers"" rather than ""data"", and about semantics rather than pragmatics. It's not ""data..."		alankay1
15284128	12.226266	-7.0226445	comment	3.0	19.5	1505825238	-10.353211	The killer apps of static types are code completion, documentation, modelling rather than safety and performance. This makes TypeScript's unsoundness much more acceptable, though many in the type systems community still have a difficult time grocking this.		seanmcdirmid
15300322	11.978503	-7.7309384	comment	3.0	12.0	1505963450	10.401505	"I agree that Haskell is made more difficult than necessary by sticking to purity so tightly [0]Having said that, Haskell is very much not built around the question ""what if everything was a monad"". Mo..."		gizmo686
15302388	12.063109	-7.228643	comment	3.0	12.0	1505994447	9.225773	> Folding Promises in JavaScriptOr: How to make simple things complex and make a codebase a complete puzzle for those that come after you?		fair24
15341458	12.145888	-7.4839497	comment	3.0	10.5	1506451506	-10.55512	Author here:Never hurts to give it a try again!  Three months ago, .NET Core 2.0 hadn't actually shipped yet.  Although it was certainly possible to write these sorts of things on .NET Core 1.0, there...		phillipcarter
15341727	12.137473	-7.510072	comment	3.0	10.5	1506453812	-10.628612	Look I'm no ML engineer or even a data scientist, I'm much closer to PS/VBS/AutoIT land, writing C# Console Applications for really complicated stuff and/or exposing helper methods via a simple web se...		Multicomp
15359539	11.804243	-7.3597884	comment	3.0	10.5	1506622796	-9.026826	I used to dream about this too.Not so much anymore though. I feel like static type systems have progressed enough that dynamic typing really has little appeal to me at this point, especially the idea ...		mikebenfield
15362666	11.614249	-7.929514	comment	3.0	14.0	1506658412	10.223807	Micro also has zero drpendencies after it's compiled. And Go makes cross compiling easy as childsplay: just set two env vars, type go build and you're done.I'd love a working replacement for Sublime T...		petre
15371467	11.830071	-7.576478	comment	3.0	28.0	1506750936	10.10033	"Nice post.A monoid is an interesting and underrated 
""pattern"" for objects where you can have a ""nothing"" and an operator that smashes two values together. The operator may be 'lossy' as in 3 + 4 = 7,..."		quickthrower2
15373832	11.847302	-7.6277547	comment	3.0	14.5	1506791425	10.087265	"A monoid is something that allows you to take two of the same kind of thing and smash them together to be one of that same kind of thing.  It also requires you to have an ""empty"" thing that can be sma..."		mightybyte
15376332	12.250808	-7.557958	comment	3.0	12.5	1506830451	-11.3772545	Curious project I wonder how it compares in actual portability to a project like Kotlin? Been enjoying that language and the possibility of the apps core functionality being cross platform.		vturner
15385255	12.1151495	-7.3038263	comment	3.0	12.0	1506961919	7.1785607	>> finding all references to a function <<Yes, you can find all references to a method in Smalltalk -- but those references are not separated-out from all the references to other methods that happen t...		igouy
15385366	11.772991	-7.0386353	comment	3.0	10.5	1506962515	-9.118949	I agree that static typing helps reading comprehension and that IDEs like pycharm help getting into big code bases, that said, at the end of the day, when you know  the code both the IDE and static ty...		amirouche
15385980	11.833309	-7.3427753	comment	3.0	13.0	1506965956	-8.856045	Typing in Java could be better, sure, but even with its quirks it's way better than the nothing you get with dynamic languages.I disagree; that Java was the standard example of statically typed langua...		icebraining
15386857	11.804363	-7.340516	comment	3.0	12.0	1506971060	-8.917622	"It's Camp D that I'm least familiar with here; outside of academic projects in lisp/scheme I've never used them for anything serious.What exactly does it mean to have ""good dynamic typing facilities""?"		andrewla
15386269	11.852982	-7.345947	comment	3.0	11.5	1506967633	-8.873989	Perhaps it's because the languages you mentioned barely register in statistics(aside from Clojure maybe).Maybe it's simply hard to have both a good type system and a friendly learning curve?		Tade0
15386990	11.830532	-7.300421	comment	3.0	11.5	1506971789	-8.920362	>Static and dynamic typing each have their own benefits,I struggle to think of any benefits of dynamic typing on a reasonably sized code-base (e.g. 50k+ LOC).		macspoofing
15399867	12.283277	-7.318189	comment	3.0	12.0	1507118825	7.0966153	Coming from a place of ignorance, how does Smalltalk not integrate?		islanderfun
15402952	11.91352	-7.3439274	comment	3.0	12.5	1507141543	7.0519743	Sorry to be that guy but a lot of what we've come to know as OO is more directly descended from Simula because that was a big inspiration for Bjarne.As such, C++, Java and C#, which constitute a signi...		lucozade
15404802	11.609477	-7.942758	comment	3.0	11.5	1507151988	10.257556	It seems like this should have been noticed earlier. If you are working on authentication code, you should think about how it could be used by a malicious actor.Does anyone know why it took several ye...		thethirdone
15405762	12.289258	-7.316713	comment	3.0	12.0	1507160748	-10.311166	No I'm not misunderstanding Smalltalk, that Smalltalk now has a git plugin to be able to expose itself in that manner is exactly the kind of jumping through hoops I was referring to, it's taken many y...		gnaritas
15419995	11.721482	-7.403214	comment	3.0	11.5	1507320589	-8.69895	Type systems, which the chart doesn’t address at all, are now usually considered at least as important an aspect to language’s ‘paradigm’ as the (increasingly-blurry) functional vs imperative distinct...		smitherfield
15372856	12.138494	-7.8661776	story	3.0	91.0	1506779590	-3.1910872	Bartosz Milewski's 'Category Theory for Programmers' Unofficial PDF/LaTeX Source	https://github.com/hmemcpy/milewski-ctfp-pdf	gfredtech
15408283	11.994603	-7.751141	story	3.0	4.0	1507202823	10.398415	Ask HN: Can ghci realistically replace bash?		xelxebar
15461610	11.59247	-7.8972716	comment	3.0	12.5	1507845172	10.161256	People who compress their go binaries (or any other binaries, really) - please be aware that thus doing, you stop the OS from being able to page out your executable (rarely a big loss), and also to be...		beagle3
15464287	11.635664	-7.1183023	comment	3.0	20.5	1507888362	7.5510216	Interesting to see 'var' isn't used as much as I thought it would be.		mulrian
15464437	11.63328	-7.1278176	comment	3.0	17.5	1507890728	7.6181417	Back when I used to work at a large enterprise the use of 'var' was banned in our coding standards.Using Linq was heavily frowned upon. It took quite a few years before it started to be accepted..At o...		weavie
15471950	11.930216	-7.1578693	comment	3.0	13.5	1507985994	9.118764	Lua coroutines are a much better & simpler solution to handling async callbacks (and callback hell) than what JS offers. Here's a simple wrapper I made for it: https://gitlab.com/snippets/1678104		Leka74
15472052	11.779788	-7.2697144	comment	3.0	20.0	1507987418	9.211623	Async is necessary sometimes... but I'm really hating the trend of designing APIs that make it unavoidable, with the assumption that it's necessary always. It just makes code illegible and thus buggy.		tomxor
15472931	11.866836	-7.192784	comment	3.0	16.5	1507999016	9.168046	Note though, that many of the problems that come up with threads can still come up with single-threaded async, especially when building a server. As soon as you await, any object visible to another pr...		mistercow
15483769	12.001831	-7.7460365	comment	3.0	13.5	1508167039	10.410821	Having learnt Haskell as my first programming language, sure it has a high learning curve but it pays off in so many ways. It is without doubt the most beautiful language ever conceived. Without doubt...		oggyhead
15484675	11.987705	-7.522871	comment	3.0	10.5	1508172715	7.2601666	Functional languages and strongly typed languages are not the same set. Most functional languages focus on typing (e.g. Haskell, Scala), but there are functional languages that do not (e.g. Clojure, C...		NightMKoder
15486607	11.993445	-7.7895927	comment	3.0	12.0	1508187603	10.38175	Understanding a pattern is different from copying a pattern. Our disagreement lies not with kids copying a pattern but with people fully comprehending the philosophy and true nature of the monad abstr...		crimsonalucard
15496351	11.680756	-7.859913	comment	3.0	13.0	1508291889	10.217709	If you can switch from Python to Go, you weren't using Python anyways, you were use Gothon or Javthon.If you want static binaries, great tooling and an excellent imperative and functional language, try F# with mkbundle. The compelling reasons to use go are shrinking.		sitkack
15496537	11.747008	-7.8442664	comment	3.0	12.5	1508294961	12.800465	Because your statements are very challengeable.Erlang is much slower in raw performance than both go and jvm: https://benchmarksgame.alioth.debian.org/u64q/erlang.htmlAsync approache similar to Erlang was reproduced for Java and Go already: https://akka.io		riku_iki
15497023	11.643402	-7.963184	comment	3.0	10.5	1508303441	10.195514	Would love to, but what I would miss from Go is that low latency GC. If ya need it, ya really really need it.If only somebody wrote a nice ML that compiled to Go! I love a lot of things about Go, but the language certainly isn’t one of them.		Scramblejams
15505046	12.208562	-7.603421	comment	3.0	12.0	1508380199	11.976205	Why would you compile Scala natively itself instead of compiling JVM bytecode?		nerdponx
15467029	11.821946	-7.0849338	story	3.0	16.0	1507911876	5.103939	Design Patterns: Decorator Pattern	https://henricodesjava.blog/2017/10/06/design-patterns-decorator-pattern/	henriguy
15527163	12.23706	-7.37595	comment	3.0	10.5	1508685409	9.271926	"You mentioned Dropwizard early on, in my experience I have found it to be the polar opposite of Spring.Where Spring is an ""everything but the kitchen sink"" framework, Dropwizard is just a collection o..."		RhodesianHunter
15535893	12.300501	-7.0159235	comment	3.0	10.5	1508784802	13.164318	I think Perl fell victim to the inner-platform effect somewhere along the way. Larry Wall doesn't want to design a language anymore, he wants to create the ultimate platform for creating languages.The...		thomascgalvin
15569002	12.480756	-7.837877	comment	3.0	11.5	1509116360	-11.138635	> I sometimes wish I could tighten down some Clojure code with static type guarantees. These are in small, remote portions of the code that have intricate algorithms. Static types would be very useful...		m12k
15569272	11.956195	-7.4876466	comment	3.0	38.0	1509117811	10.14544	This post seems to miss the fact that in Rich's talk he rails on ADTs even more than he does on static typing.Rich's biggest complaint is that our tools should be a la carte not forced down our throat...		wellpast
15571293	12.252942	-7.262528	comment	3.0	11.0	1509131388	-10.342924	>Or else, you didn't really grok it.Only if you believe that the only good thing one should grok is the data/code parity part.For me Smalltalk is even better and more concise than Lisp is.		coldtea
15572132	12.245134	-7.3304734	comment	3.0	22.0	1509137561	7.0875826	smalltalk cutest feature is the named parameter syntax trick (I don't like tricks but let's make an exception).make-range from: 10 to: 20 calss (make-range.from:to 10 20) or  something similar. Free n...		agumonkey
15572709	11.6636505	-7.3231463	comment	3.0	14.5	1509143314	-8.903156	"""Compile time"" is artificial, but the difference between static and dynamic is natural (in some sense, I realize these words are quite slippery). It emerges from the underlying mathematics. There's a ..."		Silfen
15573463	12.240408	-7.6808534	comment	3.0	12.0	1509153126	10.347824	"Does anyone know why the React/Reason creators switched from SML to OCaml?  Reason's creator also created ReactJS, whose first prototypes were written in SML, 
  a distant cousin of OCaml. We've trans..."		myegorov
15572266	12.176643	-7.284653	comment	3.0	16.0	1509138714	-9.996578	"""smalltalk cutest feature is the named parameter syntax trick...""  make-range from: 10 to: 20 calss (make-range.from:to 10 20) or something similar. Free nanodsls

For the uninitiated among us, what does that do and what's so magic about it?"		pmoriarty
15577016	11.969312	-7.6780486	comment	3.0	11.5	1509229913	10.404008	"Okay, before I say 'you win', can you show me this in Haskell:   ; -- the program --

   (defn add* [x y] (+ x y 1))

   (add* (read) (read))

   ; -- repl demo --
   3
   40.1
   44.1"		wellpast
15581493	12.167634	-7.51866	comment	3.0	22.0	1509312379	-10.683218	great!  now we just need more than two people that know f#.  i keed...kinda ;)		genzoman
15581698	12.171975	-7.5245795	comment	3.0	16.5	1509314584	-10.607102	That would require Microsoft, the F# team, and the vocal F# community members to actually want F# to be a proper first-class .NET citizen, which sadly isn't the case.https://np.reddit.com/r/fsharp/comments/6tdrwq/after_so_many...		TensorMetric
15581829	12.227009	-7.6126113	comment	3.0	11.5	1509315810	-11.422658	"Someone should write ""Scala features I miss most in Kotlin"""		lanna
15583780	11.929443	-7.442565	comment	3.0	13.5	1509354368	7.2548685	Great points, but I have a question about one of them in particular:> - Functional is OK. Imperative is OK. Both in the same program are a mess.What do you mean by that?My experience is that functiona...		TeMPOraL
15597035	12.361017	-7.820138	comment	3.0	14.0	1509487913	-11.086618	I found the discussion on /r/haskell to be much pleasant and a good take on the points Hickey make https://www.reddit.com/r/haskell/comments/792nl4/clojure_vs_... (it's actually a discussion on a piec...		Tehnix
15604005	11.954484	-7.7840943	comment	3.0	11.5	1509560366	10.382548	The fact that Haskell is smarter than me is exactly why I have been keeping at it!There is no fun left if you know all the overarching principles of a language, and you realize it still doesn't solve ...		kreetx
15606704	11.787757	-7.227558	comment	3.0	23.5	1509581220	8.722838	If you have a temperature class with a celsius field and change the internal representation to kelvin you have to update all client code to call a conversion method. C#s syntax sugar allows you to slo...		Tarean
15526275	11.823972	-7.0964904	story	3.0	11.0	1508672023	-9.012691	Ask HN: Anyone using Python's static typing in a large project?		matanrubin
15591847	11.652751	-7.9320555	story	3.0	117.0	1509441047	10.155944	G.E.R.T: Golang Embedded Run-Time	https://github.com/ycoroneos/G.E.R.T/blob/master/README.md	ingve
15595070	11.658282	-7.32606	story	3.0	5.0	1509472216	-7.7880616	Ask HN: Reversible function definitions		posterboy
15624649	11.597051	-7.8676558	comment	3.0	18.5	1509796818	10.043748	"One of my favorite things about Go is that it cuts through the ""threads vs. events"" debate by offering thread-style programming with event-style scaling using what you might call green threads (compil..."		crawshaw
15625945	12.262303	-7.379905	comment	3.0	17.0	1509815627	-11.326422	Can I use this outside IntelliJ (Atom perhaps)? I despise JavaScript, GWT is underwhelming and Kotlin seems like a nice way to bypass these issues + React is becoming a de-facto standard. IntelliJ bec...		bitL
15626081	12.2476845	-7.536461	comment	3.0	11.5	1509817591	-11.361244	Well, I did comment once on the Koltin Jetbrains forum, about how hard they make to download ... just kotlin ... outside of the jetbrains ideand their response, on their forum, was that they are inten...		systems
15647778	12.236651	-7.555804	comment	3.0	11.5	1510089782	-11.408138	"> Java -> Kotlin is effectively one-way interopCould you provide some more details? 
I'm a bit surprised by your statement because Kotlin team has put a lot of effort into providing mostly seamless two way interop. Kotlin project  itself is ~50% Java (specifically to test interop)."		tsvetkov
15659657	12.136242	-7.0895553	comment	3.0	12.0	1510198881	-10.352582	What is soundness, exactly, and how is Typescript unsound?It seems like a useless academic term that doesn't work so well in the real world, maybe?		hasenj
15672061	11.690167	-7.8546195	comment	3.0	13.0	1510340387	10.158215	The best ecosystem out there? Since when? I'd say that Java and Python have huge, wonderful and full ecosystems. Golang doesn't even come close to that, yet. Furthermore, Golang  doesn't even have a community standard (or several standards) dependency manager.		wheaties
15711779	11.732293	-7.361102	comment	3.0	11.5	1510830601	-8.816614	> I really haven't seen much benefit in static typing in regards to software defect rate or qualityHold it right there. I've never seen anyone argue that static type systems prevent bugs.I mean they d...		hasenj
15735633	11.995272	-7.785272	comment	3.0	12.5	1511121835	10.409586	If you think writing code in haskell is monad acrobatics, you don’t grok monads.		kccqzy
15735776	11.99121	-7.76272	comment	3.0	11.0	1511123374	10.414593	alternatively if you think writing haskell isn't monad acrobatics then you haven't written i/o heavy code.		mlevental
15739154	12.228325	-7.6215134	comment	3.0	12.0	1511176495	11.968748	Usually it is because as soon as the build gets a little complex, you need to define your own logic. In a minute, you  are scripting your build tool with a Turing complete language. And of course user...		pathsjs
15707877	11.825446	-7.190865	story	3.0	129.0	1510780476	-8.990177	PyAnnotate – Auto-generate type annotations for mypy	http://mypy-lang.blogspot.com/2017/11/dropbox-releases-pyannotate-auto.html	psychotik
15716221	11.619311	-7.8963313	story	3.0	107.0	1510863684	10.174967	Using Go for Scalable Operating System Analytics	https://blog.kolide.com/using-go-for-scalable-operating-system-analytics-cb170d85b1c5	marpaia
37952957	12.201153	-7.622838	comment	3.0	13.0	1697783291	11.916889	I don’t disagree on the summary of your post. Especially for refactoring, types can be great.But it is funny you chose the creator of Scala as the example. The gold plated banana cables of typing. The entire language and its endless lang mailing list discussions is a meme by now.		olivermuty
38013556	11.923689	-7.3453326	comment	3.0	15.0	1698246054	7.015747	But I don't want my kids' minds being poisoned by OO paradigms. God forbid they start using design patterns everywhere!Seriously, though - seeing how most adult programmers do OO poorly ...		BeetleB
38019540	11.624715	-7.949253	comment	3.0	12.0	1698275549	10.214381	Go made a great decision to namespace packages via this Github style.		rochak
38037419	11.680677	-7.4257436	comment	3.0	15.5	1698408481	-8.621666	Eli5 dependent types?Chatgpt:Dependent types are a concept in computer science and programming languages where the type of a variable can depend on the value of another variable. In simpler terms, ima...		mettamage
38045416	11.928792	-7.4512396	comment	3.0	25.0	1698450354	7.3164563	Functional programming is not based off how hardware is implemented. Serial execution of instructions and mutating chunks of memory at a time are all core parts of how the hardware works which aren't functional. Doing graph reduction and making tons of copies will be slow.		charcircuit
38045509	11.939893	-7.4668317	comment	3.0	19.5	1698451319	7.2287126	"""FP"" camps tend to come in two flavors: ""I'm a mathematician writing a computer program, and all problems will be made to look like math problems even if it means the program becomes an inscrutable me..."		sidlls
38063604	11.96216	-7.697715	comment	3.0	14.0	1698619578	10.478615	"This is ridiculous.The average computer scientist (not only ""programmer"", as a js dev would be) never wrote lean/coq or similar, and is not aware of the Curry-Haskell like theorems and their implications."		rq1
38066862	11.613678	-7.9494104	comment	3.0	13.5	1698654162	10.209653	>  Research Unix Sixth Edition (V6) simulator. It is a port of the V6 kernel logic to Go....I guess Go is a systems programming language after all.		pjmlp
38110600	12.307079	-7.0686398	comment	3.0	10.5	1698914603	13.161124	> raku is perl 6It used to be, but not anymore.It has grown to be its own thing with some happenstance parenthood through being born from an early attempt at Perl 6, and thus is now only being slightl...		lloeki
38151375	12.1495905	-7.511098	comment	3.0	11.5	1699194322	-10.612312	F# is so good, such a shame so few companies use it. I have to touch C# and it's always a little bit painful after a few weeks of F# work.		anonzzzies
38159858	11.635895	-7.9278483	comment	3.0	12.0	1699257037	10.248782	The thing that made me love Golang was the Time channel, where you can have a channel execute a function every X milliseconds, without having to worry about blocking threads with time.sleep() etc. It ...		eddtries
38184807	12.437461	-7.3653	comment	3.0	12.0	1699401003	12.827537	I think it might actually be easier to inspect the BEAM over those other VMs. For one, it is much older and stable. And secondly, the BEAM has a lot of self-introspection features.I highly recommend t...		bmitc
38196821	11.627255	-7.200612	comment	3.0	11.0	1699476838	-2.0721314	I am curious how people are using Phind.I actually had a discussion with Phind itself recently, in which I said that in order to help me, it seems like it would need to ingest my codebase so that it u...		ttcbj
38197425	11.614548	-7.899604	comment	3.0	12.0	1699479304	10.1235075	GPT-4 is quite capable of writing function-length sections of code based only on descriptions.  Either in a context where you're not sure what the a good approach is (for myself, when writing Javascri...		gwd
38206880	11.711833	-7.33688	comment	3.0	17.0	1699546326	-8.840959	Some teams discourage it because it makes code reviews a little harder. I worked on a team that allowed it for obvious things like iterators or std::make_unique<>.From Google's C++ Style Guide:https:/...		OnionBlender
38230439	11.987622	-7.19483	comment	3.0	11.0	1699712090	-9.13412	> dynamically typed so[...]People accustomed to strongly typed languages and thinking mostly of monolithic apps always pin things on dynamic typing even where it's not the cause.  It's not about dynam...		cxr
38231714	11.716518	-7.9184475	comment	3.0	10.5	1699720271	-8.817747	I like web scraping in Go. The support for parsing HTML in x/text/html is pretty good, and libraries like github.com/PuerkitoBio/goquery go a long way to matching ergonomics in other tools. This proje...		xyzzy_plugh
38238495	12.013143	-7.7221446	comment	3.0	12.5	1699778406	10.453102	Right but in practice most OCaml code does not have explicit types.Using an editor that shows type inlays (e.g. VSCode) helps a lot but not fully because a lot of types are inferred as generics.You're also correct that you don't have to use lists, but again most OCaml code does.		IshKebab
38261418	11.679744	-7.171619	comment	3.0	14.5	1699957070	9.018742	I think it’s interesting how similar a lot of this stuff is to what I do, except I’m not very good at Advent of Code and also I decided to hack Python to do this instead of writing my own language. Fo...		saagarjha
38307929	11.645952	-7.97204	comment	3.0	10.5	1700246292	10.246697	But humans failed to find an algorithmic solution for Go. All they could do is to throw a lot of data and get a bunch of coefficients without discovering underlying rules.Same with drawing images and ...		codedokode
38334818	11.769991	-7.197888	comment	3.0	14.5	1700414121	9.132359	List comprehensions aren't very functional. A functional language would use higher-level functions like map and filter which JS absolutely has.One thing I always miss in languages like Python and JS is the identity function. I don't how people are writing all this functional code without it.		globular-toast
38352998	12.036991	-7.73632	comment	3.0	15.0	1700507964	10.408317	"on the choice of language to teach the course
why smli think there are a lot of nicer choice   OCaml , its basically sml only more popular and used more in real life
   Haskell , again more popular , ..."		systems
38353288	11.889269	-7.471363	comment	3.0	12.5	1700508941	7.237737	The value of purely functional programming languages, as opposed to functional programming languages like lisps, is that you get referential transparency, which means that when you define `a = b`, you...		johnday
38381657	11.909843	-7.119764	comment	3.0	40.0	1700671890	-9.3688	> Python not only has types but it's type system is superior to typeScript.I strongly disagree. It might be better at some things, but it's much worse at others. Many functions can't be accurately typ...		Timon3
38406159	11.705664	-7.9249024	comment	3.0	12.0	1700846780	-1.4656719	This (syntactic sugar) is the kind of thing that wouldn't even be considered in Go. And that's fine.I find it interesting that Go and Ruby can be placed at two different ends in so many spectrums and ...		hu3
38406806	12.189579	-7.404763	comment	3.0	13.0	1700851135	-11.353139	Kotlin, definitely an interesting choice for backend development. But I love to see idiosyncratic language choices being made.		judicious
38411620	11.647347	-7.972552	comment	3.0	13.5	1700892679	10.256838	I always wondered if Go would be a good language to make a game in due to its concept of goroutines. Maybe one of these days I’ll give it a shot.		dimgl
38420066	11.955738	-7.4325433	comment	3.0	11.0	1700987080	-10.339675	> OOP simply came firstNot really. Lisp is a functional programming language and has existed since at least 1960. Some claim there were many other proto-functional languages since the early 60's, and ...		brabel
38421594	11.831813	-7.1683483	comment	3.0	10.5	1701006907	-9.000498	> Python programmer for 15 years [...] [Python] has no typingOk, I have to call this statement out. Mypy was released 15 years ago, so Python has had optional static typing for as long as you've been ...		stavros
38436262	11.631938	-7.9618077	comment	3.0	17.5	1701110309	10.235441	"This roughly lines up with my feelings. Go is a solid improvement over many languages that we inherited from the 70s, 80s and 90s.But it also retains a certain ""we don't need a robust type system; wea..."		bunderbunder
38436367	11.651535	-7.8697906	comment	3.0	14.0	1701110710	10.18828	The sad thing is that many people make language decisions on the beginner topics like syntax , literals, hello world or trivial samples.Sure a 20 line python app will be 40 lines in Golang, but that d...		tonymet
38436992	11.68763	-7.89249	comment	3.0	12.5	1701113365	10.231471	My experience translating a codebase from Python to Golang (chat application), is that 20k of Python really does translate to around 40k of Golang to get the same functionality.And it’s not just due to language but also expressiveness of the library ecosystem.		aserafini
38498093	11.647028	-7.257036	comment	3.0	23.0	1701519562	-6.684474	This was very nice!I will make an important nit. Keep in mind this is a nit. It's text in bold in the page, but this is NOT an attack on anything else in the article, which describes good design pract...		frognumber
38502086	11.864736	-7.2093534	comment	3.0	10.5	1701551451	-8.976824	I agree with you, but for correctness' sake:> I also don't get the performance argument: Type hints aren't evaluated at runtime, so whether code has them or not shouldn't matter for performance.Type h...		woodruffw
38501908	11.771753	-7.1397266	comment	3.0	12.0	1701550154	-8.997092	"""But hear me out: all the arguments against dynamic languages and dynamic typing systems were already there [in 2015]! Nothing new has been invented, nothing really has changed.""I think what changed i..."		jerf
38515805	11.611921	-7.8989615	comment	3.0	13.5	1701687171	10.151775	I think it's because Go's encoding/json package doesn't support incremental parsing.		icholy
38568484	11.83343	-7.2365294	comment	3.0	13.5	1702040508	-8.990862	Letting the structure emerge requires people thinking in depth about the underlying principles of what the code does or should do.As for classes: They are merely a construct in many languages, that pe...		zelphirkalt
38526166	12.197085	-7.0779366	story	3.0	7.0	1701742495	12.833087	Why is Gradle so bad?		nekudotayim
38529930	11.648458	-7.831451	story	3.0	29.0	1701779029	10.2134695	Notes on Python to Go Translation of reposurgeon (2018)	https://gitlab.com/esr/reposurgeon/-/blob/1bfa90ff8c8c7ae7e409e2de9e5f24da57e364f2/GoNotes.adoc	0xpgm
38595603	12.50557	-7.680306	comment	3.0	11.0	1702246316	4.394928	Right, both lein and depstar (or whatever the latest deps.edn one is) make uberjars. And this works great on Linux - which I'm pretty sure is the dev platform for almost all Clojurists. Linux distros ...		geokon
26834724	12.215997	-7.5167394	comment	3.0	11.5	1618585246	6.1869054	Kotlin could he better,  but doesn't go all the way. Without HKTs and implicit injection, Java is going to eat its lunch. Java already has records, type inference, parametric null safety with Optional...		jackcviers3
26878863	12.060048	-7.1610074	comment	3.0	10.5	1618943279	0.5747231	Still hoping for official promise-kill+timeout support.		SavantIdiot
26879021	12.010329	-7.24525	comment	3.0	11.5	1618943722	9.170392	"You can also do this with a wrapper around setTimeout, if you're in an older environment:  /\*
   \* A sleep function that returns a promise.
   \*
   \* @example
   \* Sleep for 100ms
   \* ```
   \*..."		eloff
26885987	11.718448	-7.325747	comment	3.0	12.5	1618985895	8.419212	That sounds like the insight cdiggins based Cat's type system on, but I'm not entirely sure in part because I don't really understand Cat's type system.  As an example, though, for the code    popop  ...		kragen
26908345	11.9918785	-7.7577767	comment	3.0	13.0	1619126370	10.369635	"> Initially they hadn’t even worked out how to do IO.
I tried to find some date by which they'd figured it out, the best I can do is 1992[1].To put it another way, Haskell's had a great story around I..."		mrkeen
26941016	12.216072	-7.4255657	comment	3.0	11.0	1619432156	12.852483	In Erlang/Elixir, every function from another module is async by design, and the await is implicit.This is by design to allow for hot code reloading. This is a very sound design choice because true co...		linkdd
26941626	11.665476	-7.1081576	comment	3.0	11.5	1619438703	9.096272	"Not GP but:> Is it unnecessary performance optimization to parallelize multiple adjacent asynchronous functions?The important word in your question is ""async"".  Take that out and the answer is ""no"" - ..."		spinningslate
26905854	12.506238	-7.119368	story	3.0	2.0	1619114683	12.394891	Ask HN: From Rust to Ruby?		anonyfox
26922871	11.683175	-7.512186	story	3.0	29.0	1619247718	10.072651	Improve type generic programming	https://gustedt.wordpress.com/2021/01/12/improve-type-generic-programming/https://gustedt.wordpress.com/2021/01/12/improve-type-generic-programming/	signa11
26988686	12.135227	-7.878424	comment	3.0	16.0	1619743771	-3.2188761	"I know category theory is popular in CS-land but over in math land it falls squarely in the ""general nonsense"" bucket for most working mathematicians.E.g. most mathematicians learn the definitions of ..."		rsj_hn
26989350	11.827831	-7.282507	comment	3.0	13.0	1619750424	7.0051003	Why is code reuse your prime example for bad inheritance? What should people do instead?		threatofrain
26989416	11.649034	-7.371234	comment	3.0	11.5	1619751090	7.1467423	Interfaces with default implementations are better than  classes for a number of reasons, including the diamond problem, and that as systems grow large they almost never fit cleanly into an inheritanc...		rectang
26997441	11.865309	-7.3555107	comment	3.0	12.0	1619807586	6.8408933	You dodge all of the difficulties of inheritance that they reference.		taeric
27013796	11.940277	-7.332563	comment	3.0	11.0	1619949531	7.2358437	> If you imagine a game that has characters, relationships, items, spells, and so on, it's often not that easy to model as encapsulated objects. Does each character have a list of other characters tha...		tgaj
27024649	11.863696	-7.6097856	comment	3.0	10.5	1620047831	10.333097	"That would imply that ""foo(x: int)"" is a string rather than a function.Haskell doesn't use that notation either, it uses -> both for the parameter list and for the return type, and separates argument ..."		devit
27037266	11.600095	-7.0419345	comment	3.0	13.5	1620134465	8.971939	"Here's a little ""default dict puzzle"" for you.  A common use case for default dict is counting the number of occurrences of some string in an input file/stream by providing a default of zero and just ..."		jbotz
27044025	11.766432	-7.2728577	comment	3.0	13.0	1620170026	-8.91213	"> def validate_age(age, errors):>    if not isinstance(age, int):>        errors.append(""age must be an int"")I can't really get past the concept of writing tests to validate types like this. What's th..."		void_mint
27050606	11.7256155	-7.126659	comment	3.0	14.5	1620226392	9.156877	I disagree. Fewer characters != simpler or even more readable. Map/filter/etc are certainly more clever, and I enjoy writing clever code, but I reserve it for my personal projects bprecisely because i...		throwaway894345
27060280	12.494931	-7.8329134	comment	3.0	35.0	1620287523	-11.14428	Nice article.Sadly a lot of people won't even try clojure since it is dynamic typed. I see their point but nevertheless clojure does something really well here. As the author obserserves designing aro...		lukashrb
27060402	12.358964	-7.405283	comment	3.0	27.5	1620288690	12.907672	"I don't think it's about it's dynamicism but more about it being functional. Plenty of super popular dynamic languages out there.
I think that's also what keeps elixir from becoming something more mainstream, most people come from OOP and are used to thinking about programming that way."		joelbluminator
27063049	12.171171	-7.5032945	comment	3.0	14.0	1620308474	-11.013561	Shot in the wind, but is there a plan for different syntax? For those who've become comfortable in different fp camps, I can't really see myself picking up curly brackets and C-style code again. I rea...		adenozine
27073235	11.962045	-7.2548466	comment	3.0	16.0	1620371971	9.17118	"I'll give you 2 examples and tell me which is more readable:  console.log('start')
  doA()
    .then(() => {
      doB()
       .then(() => {
          doC()
           .then(() => {
             cons..."		Raed667
27077529	11.664673	-7.238988	comment	3.0	12.0	1620404314	8.993932	"> Actually, records are even better* than tuples. EP 395 says:
> > Records can be thought of as nominal tuples.They are certainly not better, that's just a sad click-bait (the author even admits that)..."		valenterry
27077609	12.0696335	-7.537505	comment	3.0	35.0	1620404578	11.899103	Scala's case classes are missing in the comparison (only mentioned briefly at the very end). They offer everything that records do and more. Good to see that Java finally catches up a bit.		valenterry
27077682	12.23566	-7.591255	comment	3.0	31.0	1620404913	-11.425952	Scala is usually omitted for one reason or another when Kotlin is compared against Java as a better alternative, which is a shame.		halfmatthalfcat
27085611	12.227434	-7.510696	comment	3.0	12.5	1620468295	-11.387342	Kotlin runs in JVM and should get the same benefits from live profiling and JIT compilation.		oriolid
27098241	12.071374	-7.8437934	comment	3.0	20.5	1620584018	10.418607	I'm an actual OCaml programmer, almost daily, and I don't understand this objection.  We use autotools and make as the build tool (but you could use ninja/meson, cmake or whatever), and don't bother w...		rwmj
27097856	12.085651	-7.7477593	comment	3.0	28.5	1620581532	10.443678	Biggest thing impeding Ocaml for the average developer is the situation with the Stdlib, and multicore.It's not exactly a struggle to get Base or Core working, but it's way less streamlined than it re...		adenozine
27052915	11.698951	-7.930563	story	3.0	6.0	1620235791	-9.3036785	Show HN: Gopkg, vanity package hosting for Go	https://gopkg.co	yrashk
27130913	12.45391	-7.3980227	comment	3.0	13.0	1620830633	-8.948472	OMG, YES! The JIT is here... and holy crap, if you haven't tried it yet... it's awesome (everything feels snappier). I'm particularly stoked for the receive optimizations and process aliases.BEAM just gets better and better. It's a good time to be an Erlanger/Elixirist...		rubyn00bie
27139422	11.729761	-7.822224	comment	3.0	12.0	1620891518	12.245997	"The ruby one with the -run option is a bit nonintuitive in how it works.  $ ruby -run -ehttpd . -p8000

The -r option requires un.rb[1] which is a file full of convenience functions, such as httpd in ..."		satyanash
27143708	11.6591835	-7.943211	comment	3.0	16.0	1620921863	10.238601	> The simplicity of Go did not result in simpler systems.I echo this 100%. I worked at an employer who heavily used golang. The resulting projects were honestly a mess, yet they pushed through.What's ...		gher-shyu3i
27152025	12.072178	-7.35382	comment	3.0	16.5	1620980744	11.900603	"I was looking at dotty/scala 3 earlier in the year and I was quite surprised to see familiar friends from Typescript in the form of literal types and union types.val scala: ""Scala"" = ""Scala""const typescript: ""Typescript"" = ""Typescript""""Scala"" | ""Typescript"""		a_humean
27152562	12.22381	-7.560667	comment	3.0	17.0	1620986105	-11.419727	Java has not picked up a single feature from Kotlin yet (maybe nullability types someday?), and, in fact, opted for very different ones (e.g. contrast records vs. data classes, virtual threads vs. syn...		pron
27153510	12.23943	-7.642932	comment	3.0	11.0	1620995505	11.928309	Scala 3 + VS code + worksheets is my favourite exploratory programming environment. Its has:* Powerful functional features* Powerful OO features* Imperative features* Powerful type system* Great stdli...		jules
27178350	11.638879	-7.979511	comment	3.0	17.5	1621208494	2.3092504	Go's domain is CRUD microservices, for which abstraction is generally distraction. If that's all you use it for, of course you are going to like it.		coryrc
27178668	11.68181	-7.8227363	comment	3.0	16.0	1621210960	10.220264	Agreed.I used to use Java because it was fast enough, have good libraries and was productive enough. Go is almost as fast, the standard library has most of what you need and its ability to compile to ...		boyter
27178896	11.664374	-7.929993	comment	3.0	12.0	1621213148	10.174366	It is much easier to reverse engineer compiled Java than Go.LaterBut see below, I think I misconstrued this comment.		tptacek
27180196	11.603627	-7.837912	comment	3.0	11.0	1621227555	10.155147	"I think we shouldn't point fingers at Java when it comes to Go's verbosity.I can simply do dict.contains(""foo"") in Java vs having to go through a verbose hoop:    if val, ok := dict[""foo""]; ok {
     ..."		noisy_boy
27181506	11.674321	-7.9621944	comment	3.0	10.5	1621243275	-8.655375	> Go is a tool if you actually want to solve the problem and make sure people after can quickly understand how and why you solved it. Rather than stand in awe of your creation.I disagree with that.The...		ratww
27183558	12.257557	-7.557557	comment	3.0	19.5	1621260402	-11.413648	Some interesting points in there. My personal summary as someone who's done plenty of JS and Android work: Kotlin is to Java as CoffeeScript is to JavaScript.I loved using CoffeeScript at the time bec...		afavour
27204027	11.624757	-7.771079	comment	3.0	11.0	1621393134	10.170199	Once you understand their basics, GADTs are as easy to use as any other mainstream language feature. I wonder if any mainstream language will meaningfully have them soon. Not technically (many do) but meaningfully. Lightweight syntax and fully-powered pattern matching.		whateveracct
27218319	11.606232	-7.962732	comment	3.0	10.5	1621495053	10.243561	Yep. C++ is not good at naming things somehow. But bringing up Golang in a discussion about naming is just ridiculous. Unless you want to show that C++ is not actually the worst.		Glavnokoman
27250532	11.61935	-7.3142724	comment	3.0	19.0	1621719839	9.15243	I'll admit I find coroutines difficult to grok. It seems to me that 'callback hell' is turning into 'coroutine hell'. The only plausible use-case I can see is enabling functionality similar to that of...		secondcoming
27258751	11.994712	-7.7502	comment	3.0	12.0	1621805348	10.392726	> monads allow you to maintain a pure language while performing IOI/O is by definition not pure, but the use of monads allow a strict separation between the pure and impure parts of the code. I guess you can say that monads allow you to have a guaranteed pure sublanguage.		goto11
27259246	11.997505	-7.7663584	comment	3.0	13.5	1621809100	10.385181	"It’s easy to demonstrate that the IO monad is pure by reimplementing it in 100% pure code.    {-# LANGUAGE GADTs #-}

    data IO' a where
      Pure :: a -> IO' a
      Bind :: IO' a -> (a -> IO' b) ..."		anderskaseorg
27275634	11.870785	-7.2466884	comment	3.0	11.5	1621942975	-9.098934	The annotations look pretty complex.  It’s a whole other type language grafted on to C, and at least to me, even with the explanation in the introduction, very difficult to get an intuition of.It remi...		wffurr
27232363	12.253052	-7.556129	story	3.0	33.0	1621593349	-11.40286	KotlinDL 0.2: Idiomatic Kotlin DSL for Deep Learning	https://blog.jetbrains.com/kotlin/2021/05/kotlin-dl-0-2/	brzozowski
27299547	11.65258	-7.902348	comment	3.0	14.0	1622091281	10.202405	Functional programming is a kind of leetcode thing that I don't want to see come to Go. In many cases is destroys readability, and allows people to forget about the complexity of the code they are wri...		svnpenn
27406400	11.905362	-7.2516136	comment	3.0	10.5	1622910557	9.139251	What web framework do you use? This to me seems like the part that's least-baked at this stage. Iron doesn't support async if I recall correctly, actix supposedly has a complicated mental model and wa...		brundolf
27412416	12.168676	-7.200665	comment	3.0	10.5	1622979357	8.533926	> Enough with the ECS advocacy however.Entity/component/system sounds like model/view/controller.But I like to think of data/logic/presentation. The point being that keeping these dimensions orthogonal is more imoprtant than how they are labeled.		smitty1e
27412898	11.914317	-7.4480658	comment	3.0	19.5	1622984904	7.3272176	"FP means that every expression (= part that can be evaluated) is referential transparent. Nowadays the word ""functional"" is used different from the original meaning (which some now call ""pure function..."		valenterry
27413677	12.006771	-7.754743	comment	3.0	11.5	1622991895	10.381416	It's funny that you defend your view using Haskell, as I was replying with Haskell in mind.If you use the state monad, you encode local side effects. Then you use runState in a function that has a non...		pflanze
27465058	12.338571	-7.450573	comment	3.0	11.0	1623355280	12.895278	"(non-Elixir dev here)Does Elixir have anything akin to Haskell's ""do notation"" for result types? The provided best practice code feels verbose, and that surprises me given that Elixir looked clean & m..."		david_allison
27465003	11.674872	-7.8914695	comment	3.0	12.0	1623355054	-4.68421	Random Go fact I learned recently: by default, HTTP requests automatically redirect. If you dont want that, you can do this instead:    res, err := new(http.Transport).RoundTrip(req)		svnpenn
27481443	12.092523	-7.819449	comment	3.0	12.5	1623470769	10.426414	I love ML based languages, but it's definitely hard to get excited about new features when even just installing ocaml on windows starts with reading a chart of what tradeoffs you're going to have to make.https://github.com/ocaml/ocaml/blob/trunk/README.win32.adoc		hyperhopper
33425325	12.067599	-7.2209306	comment	3.0	19.5	1667327272	0.6732079	No, it does not.An uncaught error where you don't catch and gracefully handle errors in your promises is not the users' fault. It's sloppy workmanship.		jason-phillips
33435525	11.944465	-7.5021935	comment	3.0	10.5	1667396137	7.2410955	> One of the big reasons why FP languages have so little penetration is because the advocacy usually feels like someone trying to talk you into a religion. (The other major impediment is gatekeeping)I...		gjulianm
33436830	11.993449	-7.6814823	comment	3.0	14.0	1667400944	10.457593	I was once at a distributed systems meetup where a member of the audience interrupted the talk to give an extemporaneous presentation on why we should all be using Haskell.FP advocates have a reputation for being zealous and pretentious. The only question is whether they’re right to be.		pfraze
33437988	11.922442	-7.43148	comment	3.0	10.5	1667404903	7.216254	"I'm reminded of the following quote by the co-author of SICP - Gerry Sussman...""Remember a real engineer doesn't want just a religion about how to solve a problem, like object-oriented or functional o..."		aryehof
33439424	11.651458	-7.8432965	comment	3.0	15.5	1667409373	10.321831	Maybe start moving away from Ruby on Rails. Good web stacks in Golang and Rust do exist and at that scale they're likely the only sensible choices.How far must the sunk cost fallacy go before something is done?		pdimitar
33441156	11.667052	-7.8836164	comment	3.0	11.5	1667415426	10.165712	Go is a great language to replace sysadmin scripts written in python or shellscript. I used to imediately jump to python when a shell script would get a little complicated, now I always pick Go.		rs_rs_rs_rs_rs
33481294	11.890704	-7.4632483	comment	3.0	11.0	1667655167	-8.525399	Unit of measures are a great example of what a type system can do, and something not enough languages support. F#[1] and Scala[2] are two that I know of that do support UOMs.  Like you, I haven't had ...		mdm12
33484113	11.648434	-7.3606453	comment	3.0	15.5	1667672346	-8.803942	> So basically compile time type checking just makes some of the errors get caught earlier which is a slight benefit but not a KEY differentiator.Unfortunately, I have to completely disagree here, at ...		gary17the
33528764	12.315335	-7.5195823	comment	3.0	11.0	1667982467	12.847089	"Well, let’s assume we are talking about a webshop. Every user is represented as an actor, a cart might be a state. 
So cart as a state should be stored somewhere else, let’s say redis. 
And every sing..."		mungobungo
33533321	12.175328	-7.920397	comment	3.0	18.0	1668009034	-3.2326505	A lot of people don't agree. But I feel category theory is the Maxwells Equation for software.What is the shortest distances between two points? A straight line. I calculate the solution to that probl...		deltasevennine
33527933	11.874743	-7.3684635	story	3.0	44.0	1667973163	7.037467	You do not need inheritance with OOP	https://r.je/you-do-not-need-inheritance-oop	revskill
33530406	11.962946	-7.7155485	story	3.0	93.0	1667995841	10.402293	School of Haskell: Basics (2013)	https://www.schoolofhaskell.com/school/starting-with-haskell/basics-of-haskell	bjourne
33548003	11.89472	-7.085558	comment	3.0	10.5	1668094745	-10.744664	Not complete - doesn't include Task Groups [1]In fairness they were only included in asyncio as of Python 3.11, which was released a couple of weeks ago.These were an idea originally from Trio [2] whe...		quietbritishjim
33569111	11.954125	-7.6594996	comment	3.0	12.0	1668217024	10.38058	In my perusals into the Haskell ecosystem, discovering Hoogle[1] was definitely a revelation on the power of a strongly-typed language. Sometimes, you know the _shape_ of the thing you are looking for...		mdm12
33621111	11.944293	-7.484982	comment	3.0	13.0	1668595028	7.1871815	Every FP advocate I know comes from an imperative/OOP background… None of them are juniors. None of the “FP skeptics” (or people parroting an obvious variant of uninformative “right tool for the job”)...		epgui
33622558	11.963332	-7.3228364	comment	3.0	20.0	1668605284	7.1245418	> ends up becoming an obfuscated mess of wrapper functions and custom control flowThis right here is the reason I don't like pure functional programming. Any engineer should be able to pick up your co...		borbulon
33622654	11.963808	-7.4864364	comment	3.0	17.0	1668605820	7.175998	"The only thing stopping Functional Programming from taking off are functional programmers.It took me years (and Elixir) to get past the ""here are some words, some mean what you think, some mean someth..."		bongobingo1
33623412	12.04471	-7.643787	comment	3.0	10.5	1668608622	10.331376	Please don't mix the two things. There are a lot of abstractions in Haskell (monads, monoids, ...) but those are 100% orthogonal to pure functional programming. You can do the latter without any of th...		valenterry
33662437	11.990396	-7.719466	comment	3.0	15.5	1668806571	10.460348	Haskell for web? That's very impressive if you can get it to work at scale. This is the hardest language I have ever personally tried to learn.		badrabbit
33676192	11.733979	-7.0630074	comment	3.0	12.0	1668900971	-10.489261	"> ECMAScript does not have maps where keys can be integers and neither can keys be floats.  map = new Map();
  map[1] = 3;
  map[1]; // 3
  map[1.2] = 3.4;
  map[1.2]; // 3.4
  typeof(map.keys().next().value); // ""number""

I'm not an expert in JavaScript. What am I missing?"		chrisseaton
33678944	11.76401	-7.2907906	comment	3.0	10.5	1668927555	-8.104702	"I would state it slightly differently: Closures are for FP what objects are for OOP.When you create a closure you are in fact creating an instance of a Function.  In FP functions are ""first class citi..."		galaxyLogic
33679591	11.751541	-7.27933	comment	3.0	12.5	1668936544	-8.095627	"Honestly both names are really terrible. It took me an embarrassing amount of time to understand what a closure is just because ""closure"" and ""closing over"" are hilariously obtuse names for what is a ..."		IshKebab
33698632	11.984947	-7.651498	comment	3.0	15.0	1669067944	10.355963	"I know this is a ""toy"" paper, but is enough to reason as to why few use Haskell in production (ignoring the tooling issue). It's pretty gnarly even for a basic problem.> Functional programmers! Rememb..."		adamjc
33709432	11.787304	-7.3991213	comment	3.0	12.5	1669142871	9.564584	First of all, Java's generics are already superior to C#'s. We've exchanged the minor inconvenience of not being able to have overloads that erase to the same type with the ability to support multiple...		pron
33726877	11.889362	-7.259168	comment	3.0	13.0	1669253751	-8.929346	My theory is that types were the baby thrown out with the bathwater. Dynamic languages changed a whole lot more than just types. The older typed languages were a huge pain to work with, dynamic langua...		Gigachad
33752300	11.600711	-7.8582435	comment	3.0	18.0	1669467892	10.137407	I mean, Go is closer to C than Python is. But Go is still a garbage collected language with a runtime. It's not going to come close to the limits of performance that C offers		dahfizz
33757861	11.623557	-7.941482	comment	3.0	15.5	1669504010	10.190675	For me Go is unique in that it can produce a fully static binary that can fetch from a HTTPS endpoint. It also supports many architectures. On top of that the package system and it's just way more con...		fwsgonzo
33791015	11.788831	-7.3068976	comment	3.0	42.5	1669745367	-8.879029	My personal opinion has become, do I want to write leaky tests to validate typing (in addition to functional tests) or do I want to let my compiler do my type validation for me in exchange for the boi...		mey
33793035	11.820412	-7.2346582	comment	3.0	11.0	1669754715	-8.990605	It's honestly the opposite for me.  I need the mental crutches provided by strong static typing.TL;DR:I work with a lot of very smart, very talented software developers who thrive with Python's dynami...		CoastalCoder
33715986	12.009342	-7.7874613	story	3.0	57.0	1669185971	10.412514	Hexagonal Architecture vs. Free Monad (2017)	https://deque.blog/2017/07/06/hexagonal-architecture-a-less-declarative-free-monad/	revskill
33794428	11.739273	-7.360871	comment	3.0	11.5	1669761735	-8.82	> Static typing gives a good baseline of correctness.Not really. Lets say you have an `add(a, b)` function. Static typing can guarantee that the function returns a number, but not that it returns the ...		goto11
33794584	11.920481	-7.3165107	comment	3.0	15.5	1669762768	-1.7746035	> However there is one caveat. If some of the data members are of a mutable class, Data does no additional immutability enforcement.Seems like an area of concern / gotchas.  Either restrict Data to no...		ryanseys
33804203	12.131657	-7.8800125	comment	3.0	11.5	1669829507	-3.211296	> As someone with a maths degree, yet who admittedly hasn't looked into category theory beyond some basic notions, I still don't quite understand why anyone would want to learn category theory before ...		umanwizard
33808598	12.027955	-7.804091	comment	3.0	12.0	1669846404	10.4043455	There are a lot of interesting properties:- Adjoints preserve limits/colimits.- Adjoint functors give rise to a monad- They are connected to universal morphisms		solomatov
33847740	11.629739	-7.9291663	comment	3.0	12.5	1670103961	10.206317	I picked go for my language this year, which doesn't have good support for sets.  May end up writing my own buggy implementation of this.		shaftoe444
33883250	11.674922	-7.1079326	comment	3.0	12.0	1670345918	-8.59254	"Is there a language where you get everything? (i.e. there's nothing you don't get)Based on the people who have amount of ""C++ experts"" I've interviewed over the years who don't know much about templat..."		_huayra_
33895350	12.398956	-7.4162884	comment	3.0	11.0	1670426490	12.912211	static types is the main thing that keeps me from putting more time into learning / using elixir.		vasergen
33943189	11.606933	-7.9628873	comment	3.0	11.5	1670766941	-9.342601	"With both approaches you have to remember some sort of mapping technique for date formatting.What I claim that Go's approach is far superior and easier to remember and use.Leaving aside ""oh, but we us..."		divan
33943260	11.668288	-7.6013536	comment	3.0	14.0	1670767491	10.155511	> which start make sense as long as you use them and put some thought behind the reasons of the designHard disagree. I have been using Go at my company for years, and these features still make no sens...		shakow
33954247	11.913434	-7.6405363	comment	3.0	11.5	1670850425	10.360556	It's definitely the most influential of the statically typed functional languages. All other statically typed functional languages or libraries inherit a lot from Haskell implementations, type system and type class concepts.		epolanski
33957188	11.664358	-7.2436347	comment	3.0	12.0	1670864959	-8.742687	"After reading the title, I was thinking ""Agreed, adding type to your code definitely make it more readable""."		breakds
33966782	12.275165	-7.10484	comment	3.0	16.5	1670926291	12.403699	"It's not pointless, it makes code read better. It's another option to have. It's not meant for every use case. It indicates you don't understand Ruby if you find yourself using an ""unless"" in a comple..."		soheil
33974017	12.403405	-7.519478	comment	3.0	11.0	1670958115	12.859595	"I have to disagree pretty strongly about the lack of a ""sudden burst in utility"" between non-pure actor model and the pure actor model. Erlang's (and Elixir's) VM, the BEAM benefits greatly from knowi..."		OkayPhysicist
33977091	11.839417	-7.6254573	comment	3.0	10.5	1670970816	12.795024	(This is all based on my recollection) Pony does this through reference capabilities, ownership, and garbage collection.Basically in Pony you can describe memory as:1. Single Ownership, Immutable2. Si...		insanitybit
33983971	11.692373	-7.1801662	comment	3.0	10.5	1671028443	-6.80174	> Because single implementation languages are toys‶Toys″ like Go, OCaml, arguably Ruby & PHP, Perl, Erlang, Kotlin, ...		shakow
33987220	11.725089	-7.380832	comment	3.0	11.0	1671041050	-8.711101	"I dunno, I love types as documentations of how things are supposed to be structured. But I also agree that assertions are great because they can express any condition in the language. I wonder sometimes if it's possible to have a type system that is ""any possible assertion, as a type""."		ajkjk
33987919	11.78328	-7.333696	comment	3.0	11.5	1671043294	-8.853808	In particular, supporting nominal typing, fixing the way index types work, and fixing the story of debugging type failures on giant unions come to mind, but there are countless others. (Don't @ me, my...		ajkjk
34013779	12.097683	-7.8453345	comment	3.0	12.0	1671193386	10.441681	There are a few OCaml contributors lurking and happy to answer questions if you have them.		sadiq
34010396	12.281198	-7.313412	story	3.0	60.0	1671165990	7.0525756	SqueakNOS: Smalltalk as a Standalone OS (2011)	https://wiki.squeak.org/squeak/1762	masijo
34064033	11.805018	-7.2215123	comment	3.0	24.5	1671532329	-8.97776	You should never be using static typing with a scripting language like Python or Ruby.Dynamically typed code is 1/3rd the size of statically typed code, that means that one developer who is using dyna...		ReflectedImage
34064533	11.82053	-7.2632465	comment	3.0	21.5	1671536384	-9.003814	I do have such experience and I really can't tell that. Which is why I wondered if anyone else was in fact saying that.> But here is your internet source for this blatantly obvious fact: https://games...		bombolo
34071603	11.818848	-7.197006	comment	3.0	14.0	1671566305	-8.994512	As someone maintaining a hugely complex system in Python: type hints make it bearable, but not good. A strongly typed, verbose language is an absolute, fucking, *must* for all but the simplest of syst...		packetlost
34071874	11.696678	-7.1067505	comment	3.0	10.5	1671567436	-7.2264824	It cannot differentiate between a field in a class and a variable in a method, or even a word in a comment, can it?		eitland
34070823	12.218037	-7.484797	comment	3.0	11.0	1671563505	-11.386376	"Java has been improving pretty fast and is starting to close the gap in spots where it's been seen weaker to Go etc. 
Fact still remains that it has excellent lib ecosystem, tooling, observability and..."		bsan3
22665297	11.872961	-7.605065	comment	3.0	14.0	1584979494	10.348019	I really hope this doesn't happen.I've never understood the infatuation for this Haskell type syntax where you need to repeat the name of the function for each and every single match case. It's so needlessly verbose.		hota_mazi
22665456	12.503959	-7.4137125	comment	3.0	12.0	1584980349	-1.6276948	I find it dramatically cleaner.Each clause is categorically isolated, unlike a case statement (the alternative in Erlang, with which I’m most familiar) where code can precede the case statement and thus introduce bindings that can muck up the logic.		macintux
22692400	12.277066	-7.316688	comment	3.0	10.5	1585221402	7.065426	But there was an affordable Smalltalk system in the early 1990s -- Digitalk's Smalltalk/V. It cost $99 and came with a huge manual that had a great tutorial. It introduced me (and lots of others) to the whole idea of object-orientation.		jhbadger
22700846	11.603095	-7.1138477	comment	3.0	12.0	1585291550	7.954457	> See, for instance, in OOP there is the concept of singletons: objects of which there is one instance in the system. These objects sometimes have mutable state. Therefore, that state is global. Yet, ...		lmm
22716344	12.069884	-7.0271263	comment	3.0	11.5	1585455246	8.145412	Java is still the largest and most in use server side language at 39%. It is followed by C# at 32%.After that, you have Go at 9%, Kotlin (also a JVM Lang) at 6.6% and Scala (also a JVM Lang) at 4%.Fin...		didibus
22716522	11.684689	-7.8116283	comment	3.0	13.0	1585457541	10.120815	As someone who's been writing a lot of JavaScript, Go, and a handful of other languages for a while, I feel this. In Go, I can basically know what's going to happen when I write a function. This opera...		connor4312
22728260	11.944818	-7.7073045	comment	3.0	10.5	1585578364	10.409399	"I simply love it how every single Haskell framework I've seen that has ""ease of development"" and ""it's easy"" and similar immediately devolves from this (from Concur's docs [1]):  hello = do
    button..."		dmitriid
22728898	12.226131	-7.4825583	comment	3.0	14.5	1585583059	-10.668634	I don't understand the Reason hype when F# / Fable already offers this		rienbdj
22742627	11.7485	-7.2344837	comment	3.0	11.0	1585689063	-8.940808	"Yes, when we talk about type safety, we generally mean ""compile time"" type safety. Python is also ""type safe"" at runtime (which is to say, ""it's strongly typed""), but we don't conventionally consider Python to be type-safe."		throwaway894345
22688180	12.508165	-7.5123973	story	3.0	3.0	1585167844	12.893408	Erlang or Java (Reactor)		dericop
22718405	11.984124	-7.694512	story	3.0	70.0	1585484714	10.398207	Generate semi-dynamic UIs with Haskell	https://github.com/pkamenarsky/concur-static	pka
22727975	12.082717	-7.8738084	story	3.0	124.0	1585576245	10.4382305	Multicore OCaml: March 2020 update	https://discuss.ocaml.org/t/multicore-ocaml-march-2020-update/5406	sadiq
22755777	12.504866	-7.0267706	comment	3.0	19.0	1585795228	12.362547	Ruby serves one ecosystem (web), barely.Python serves several huge ones: web, datascience, 3d graphics, sysadmin... all with different needs, different conventions, different “standard” tools to do th...		toyg
22767125	12.151676	-7.103458	comment	3.0	11.5	1585900827	-9.9202385	I love the idea of prototypes, and self, but I always use classes. There's this idea of the self prototyping environment you can extend, which is great for prototyping (perhaps), but when it comes to ...		chadcmulligan
22782191	11.594345	-7.1484284	comment	3.0	11.0	1586040907	8.3182955	"This is a weird headline. It amounts to the claim that f(x) = x + 3 is made from non-invertible parts because its ""subcomponent"" g(x) = 3 is non-invertible.But who cares? Our f(x) is as conceptually s..."		thaumasiotes
22794303	11.679647	-7.3494973	comment	3.0	12.0	1586185187	-8.728259	I've never really bought this argument. Casting is the way a programmer can selectively bypass the type system and every typed language I've ever used includes casting.For Church-typed languages as op...		dwohnitmok
22817153	11.760192	-7.325811	comment	3.0	13.0	1586380062	-8.867918	> The type haters make exactly the argument you're mockingFunny, I usually see type haters claiming that they don't actually make the kinds of mistakes that are fixed by strong typing.Which is a completely different sentiment.		greglindahl
22819950	11.96084	-7.722163	comment	3.0	11.0	1586408899	10.397693	"> Can you name some examples of ""frivolous sugar""?The one mentioned in the article seemed fairly frivolous to me. I don't know if I can name one that's already been accepted into the language which I ..."		_bxg1
17877707	11.780888	-7.2453804	comment	3.0	20.0	1535644484	8.625986	I think a lack of value types also hurts Java significantly here. Though I believe they're also on the roadmap.		nicktelford
22775409	11.7325945	-7.270636	story	3.0	56.0	1585962931	9.20108	Why I'm building a new async runtime	https://stjepang.github.io/2020/04/03/why-im-building-a-new-async-runtime.html	kasbah
17895598	11.652253	-7.9300466	comment	3.0	11.0	1535863538	10.20245	It's impossible to defend the lack of generics in golang in the face of the fact that two of the larger open source projects both invented their own generics implementations.https://medium.com/@arschl...		zmanian
17905375	11.9260235	-7.6499133	comment	3.0	15.5	1536014974	10.38524	I think many beginning Haskellers have this problem. To overcome it, my advice is to write Haskell code with the knowledge that you can re-write it more readily than you can re-write code in many othe...		pash
17910628	11.659985	-7.931031	comment	3.0	14.0	1536080520	10.230228	I was at Gophercon and saw Russ's video where he spent 30 seconds explaining what generics were to the audience and showed a half-baked example of the syntax they are considering. I've been using Go f...		artursapek
17914977	12.277108	-7.2910957	comment	3.0	15.0	1536120766	7.1753626	The short answer is it's different and unfamiliar to most newcomers:1. The image-based paradigm [1] holds it back. Using Smalltalk, there's quite a change in development style, the existing developmen...		hboon
17915765	11.629723	-7.8847	comment	3.0	13.5	1536132506	10.162281	Go hashmaps are generics, or at least parameterized types. You can't create new parameterized types in Go, but you get maps and channels built in.		Animats
17914928	12.329794	-7.2747426	comment	3.0	17.0	1536119880	7.0861154	I'm no programmer, but I remember back when Ruby 1.8.7 got really popular because of Rails even though Ruby 1.8.7 was not that secure or stable compared to other environments.  (Yes, I know Ruby is be...		da02
17928642	11.945346	-7.4857793	comment	3.0	10.5	1536260311	7.292485	While I can understand some of the benefits of functional programming within a single sub-system, or within academic research, I struggle to understand how pure functional programming can address the ...		mreome
17933237	11.95877	-7.677383	comment	3.0	11.5	1536316868	10.435501	It was a surprising language decision to find out that OCaml didn't do implement polymorphic behaviour for common operations and opted to stress static types for things like print_int or 1.0 +. 1.0...		djtango
17933291	12.084513	-7.8320003	comment	3.0	30.0	1536317668	10.440568	"I would highly recommend Jon Harrop's ""OCaml for Scientists"" if you're interested in learning OCaml. It's a really awesome book.  http://www.ffconsultancy.com/products/ocaml_for_scientists/When I was ..."		seanhunter
17935386	12.072301	-7.853833	comment	3.0	12.5	1536336365	10.429082	What's the current state of OCaml on Windows?  I'd love to use OCaml on more of my projects, but this has been a roadblock for me.What I'm looking for is the ability to produce native binaries without...		kxyvr
17943691	11.708979	-7.2106457	comment	3.0	10.5	1536454536	-8.943415	"  $ files | narrow \.rs$ | narrow '!tests' | xargs cat | nlines
  4251

It's 4k lines of Rust. Shedding the static typing nonsense will get rid of at least 25% of that. Writing it in Lumen will buy an..."		shawn
17976345	11.810476	-7.1612525	comment	3.0	15.0	1536817585	-9.021839	i personally started to find dynamically/optionally typed languages troublesome to read -- i have to do type deduction in my head, which just feel burdensome.as simple and easy as python feels without static typing, a handful of files of python is my tolerance level before i start to hate it		exacube
17977011	11.805382	-7.2952466	comment	3.0	11.5	1536827968	-8.957085	> and then all the startups we saw write in their dynamic languages later ended up adding types, because maintainabilityMaybe because they weren't startups anymore?Honestly I don't understand the deal...		tarsinge
17976662	11.788466	-7.376676	comment	3.0	13.0	1536822874	-8.925718	I feel like dynamically types programming languages had a huge hype period, and then all the startups we saw write in their dynamic languages later ended up adding types, because maintainability is si...		Tehnix
18934265	11.852234	-7.308357	comment	3.0	13.5	1547756710	9.228376	I’m waiting for async/await... that will start the party!		roadbeats
18948865	11.626783	-7.3893704	comment	3.0	11.5	1547927938	-8.757515	Do bindings like this help much with the day to day work of machine learning research? Are the kinds of errors you encounter the kind that could be avoided with a smarter type checker?		Gormisdomai
18948320	11.714488	-7.2310514	story	3.0	14.0	1547921919	3.2640553	I've wanted enumerable classes for *so long*	https://abe-winter.github.io/2019/01/19/enumerable.html	awinter-py
18966738	11.866446	-7.357868	comment	3.0	10.5	1548143936	9.237097	What is the role of the `async` keyword in Dart? I couldn't understand it from the article.> the outcome of the method is a FutureIsn't the function signature sufficient to express this?> it runs sync...		ridiculous_fish
18968601	12.343279	-7.2624607	comment	3.0	10.5	1548168710	7.070494	Genuinely curious: Is there any industry usage going on for Pharo?		m_mueller
18969328	12.340549	-7.250579	comment	3.0	11.5	1548173769	7.0799656	>If you aren't interested in a novel immersive programming environment then you can safely ignore Pharo too.I was curious and so downloaded and ran the default image, and I'm beyond captivated by it, ...		theon144
18969488	12.341892	-7.2633934	comment	3.0	11.5	1548174878	7.1044374	I have not looked at Pharo, but the Lisp development environment on my Symbolics computers is amazingly integrated, so this is a very high bar to surpass if true.		SomeHacker44
18972785	11.723134	-7.2882304	comment	3.0	10.5	1548193032	-8.805742	The advantages of typed languages are too great to not work in them.		woolvalley
18972827	11.851126	-7.79658	comment	3.0	12.0	1548193291	10.30036	As listed in the article under 'Overcoming challenges' we do replace code in Go and Vue where needed. I do believe Rails is still the most productive framework out there.See https://docs.gitlab.com/ee/development/architecture.html#com... for more information on what parts are Go.		sytse
18990594	11.699615	-7.333949	comment	3.0	12.0	1548350037	-8.796787	Static types are a form of test!		jakelazaroff
19010277	11.738664	-7.2648087	comment	3.0	11.0	1548561613	9.204602	Also, don't forget that C# had async/await since 2012, 5 years before it was standardized in JavaScript. The only older mainstream (for its time) language to have coroutines is Turbo Pascal 7 in 1992, which was... also designed by Andy Hejlsberg.		andr
19010989	11.594617	-7.7700334	comment	3.0	10.5	1548579945	9.637039	This whole C# async/await hype I don't get? I've come to see async/await more as a hindrance rather than as a good thing. In C# if you're not careful your codebase gets littered with tasks everywhere,...		atsjie
19013237	11.977973	-7.142095	comment	3.0	12.0	1548616397	-9.905339	> I already have a hard enough time teaching programmers about prototypical inheritance without the language actively lying to them.One way to look at it is that you could consider not teaching the un...		munificent
19016045	11.851976	-7.384106	comment	3.0	14.0	1548665389	7.0897245	While a lot of people make objects for the sake of making objects, I think it is instructive to think why you want to make objects in OO.  As another poster has said, what if I had structs and functio...		mikekchar
19015566	11.913205	-7.368434	comment	3.0	17.5	1548655046	7.0266647	> A well-crafted OO architecture makes changing the way things are put together easy.I agree and its why I don't like OOP.  Either you are thinking in terms of putting things together or tearing them ...		austincheney
19055042	11.811397	-7.7049317	comment	3.0	11.5	1549036202	10.398904	As an almost two decade Haskeller who really wants to try Rust in a performance and security sensitive production context, I really appreciated this article. However, it might have actually pushed me ...		SomeHacker44
19069347	11.76381	-7.35875	comment	3.0	14.0	1549198826	9.51744	> JVM is still an amazing piece of techIt’s hard to say that when we’re still clamouring for generics without type-erasure. It’s been over 14 years since the CLR had it and it’s definitely holding back the Java ecosystem in my opinion.		DaiPlusPlus
19075641	11.631225	-7.0472674	comment	3.0	17.5	1549282241	8.94869	"There are several items that are dubious at best. Why would you use    no_duplicates    = list(dict.fromkeys(<list>))

instead of    no_duplicates = list(set(<list>))

?"		omegote
19077841	11.593481	-7.0441327	comment	3.0	11.0	1549299009	-10.449505	It is definitely useful, but it severely reduces readability in my opinion. Your example is also a great example for this. The first version in way more readable than the second version with the walrus operator.		muhbags
19093944	11.905902	-7.3382044	comment	3.0	12.5	1549447273	7.122982	I think time will tell.It's basically the magic vs explicit discussion all over again. Like usually in this discussion, the magic approach is really appealing until it doesn't work, and then the pro-e...		skrebbel
19098269	12.498851	-7.8385987	comment	3.0	21.0	1549478784	-11.142318	The trend of programming languages is to move toward static typing. Not as an afterthought, with gradual typing or retrofitted years later into an unwilling compiler, but languages designed from day o...		hota_mazi
19099368	11.841354	-7.0684004	comment	3.0	16.5	1549484126	-9.029934	I've never used mypy and I used Python a lot until I recently got my first job.It kind of looks like a band-aid. Could you elaborate on why I would use, say, mypy as opposed to Golang if I don't need ...		xvector
19113476	12.263904	-7.3332205	story	3.0	48.0	1549628120	6.996218	A small (and objective) taste of Objective-Smalltalk	https://blog.metaobject.com/2019/02/a-small-and-objective-taste-of.html	mpweiher
19141825	11.961901	-7.7060227	comment	3.0	10.5	1549958222	10.396541	This analogy misses something fundamental. See how the assignments to x and y are of very different character than the predicate? Notice the return path (`else []`). `amb` doesn't need this.`amb` merg...		millstone
19146740	11.911521	-7.1670604	comment	3.0	17.0	1550000297	-9.242721	Doesn’t static analysis requires static typing? There certainly has been a strong resistance to the introduction of static typing in the js community.		cm2187
19159271	11.874731	-7.1775312	comment	3.0	17.0	1550113014	8.570101	"Java did it way too slow, and that is a significant contributor to it being relegated to ""legacy"" in many areas. If it waited for the other languages to prototype stuff, it might have not been the cas..."		int_19h
19168705	12.141129	-7.235824	comment	3.0	11.5	1550209235	8.513046	"ECS is one of those things you ""get religion"" about, especially as a game developer. Like, ""Oh, I've been fighting the class hierarchy and overcomplicating my code for so long... it doesn't have to be..."		bitwize
19168937	12.147311	-7.2240233	comment	3.0	13.0	1550212674	8.52957	Showing the how without showing the why is probably not helpful IMO.  Why is important here.Using ECS is somewhat like treating your game state like a normalized database.  It lets you perform operati...		reificator
19190786	11.635216	-7.9514194	comment	3.0	11.5	1550500437	10.239962	It's because Go is a brutalist hipster language - simplicity above utility. Forget a lack of generics, you don't even get proper error messages.		andy_ppp
19190914	11.658298	-7.9754977	comment	3.0	18.0	1550501259	10.235093	> Well, if they're brainstorming something better, then I'll wait to use your language until you solve all the basic problems first.Yet people can write distributed databases, monitoring tools, dns/DH...		grumpydba
19192260	11.655649	-7.932559	comment	3.0	10.5	1550510502	10.226499	No the two conflicting statements are.1. Go doesn't have generics because the authors didn't have strong grasp of type theory.2. Go doesn't have generics, not from a lack of knowledge, but because the authors' real world software engineering experience had shown to them it wasn't important.		overcyn
19192187	11.659689	-7.904183	comment	3.0	11.0	1550510009	10.1657505	Java is not really superior in standard library design. There is too much architecture astronautics going on. Standard interfaces are too complicated. Nominal interfaces kinda suck. Java also lacks gr...		spion
19193017	11.618826	-7.928788	comment	3.0	10.5	1550515263	10.205494	Unfortunately I am not parroting. If you are used to read code, and you read c++, you will see that templates are abused. No generics force devs to make their code clearer and thus more secure.It is e...		throwaway415415
19197109	11.781873	-7.3522334	comment	3.0	13.0	1550558536	-8.9390335	> Static typing does not live up to its promises. If it did live up to its promises, we would all use it, and the fact that we don’t all use it suggests how often it fails.https://en.wikipedia.org/wiki/Argumentum_ad_populum		icholy
19198258	12.106434	-7.4543834	comment	3.0	12.5	1550576654	6.177518	It is not typesave and doesn’t really support programming in the large. I think the best bet is something like Swift or Microsoft could come out with a C#/F# compatible thing.		orbifold
19168414	11.864064	-7.4481163	story	3.0	1.0	1550204152	7.298713	Ask HN: What languages teach the wisdom of C without the uglyness of it?		philonoist
19226172	12.049299	-7.386224	comment	3.0	14.0	1550849835	-10.498523	Don’t languages like F# remove much of the verbosity of a type system?  In fact, we’re finally loving away from that verbosity in general.  Swift, for example, lets me write declarations like this:var...		melling
19234300	11.910198	-7.3227344	comment	3.0	17.5	1550942612	7.0692782	Sorry, why do you need OOP?  I haven't coded OO in about 10 years now.  (Mostly Julia, elixir, and functional JavaScript).  It's great.  Would never go back.		dnautics
19244545	11.76238	-7.0731435	comment	3.0	11.5	1551090293	-9.038971	"You could support markers stating ""I swear this part is never going to use those dynamic features"", disabling them for you and others.E.G: I have no problem putting a few annotation telling Python I'm..."		sametmax
19244859	11.803242	-7.492162	comment	3.0	13.0	1551094545	10.300362	Sorry, I do not know any of these languages but I have used Haskell's STM which is incredible. Any of the languages mentioned here close to the STM idea (basically using strong types to ensure mutations happen in isolated context)?		tirumaraiselvan
19238303	12.098914	-7.8665953	story	3.0	36.0	1551010830	10.448241	More OCaml	https://sites.google.com/site/steveyegge2/more-ocaml	jasim
19289758	12.322436	-7.516741	comment	3.0	11.0	1551543053	12.807273	The big advantage of actors are that they are compatible with network loss. Erlang and Akka actors are network transparent. Local-only actors are missing the point, IMO.		tormeh
19291304	11.682585	-7.924116	comment	3.0	10.5	1551562568	10.190967	Go is legit and a huge threat to java and other languages. My entire career has mostly been java based for the backend. The last few months all I’ve been writing is go. I’m finding libraries in Go tha...		ronnier
19292565	12.305918	-7.656055	comment	3.0	16.5	1551584439	10.431909	Does anybody think ReasonML will become more popular than plain OCaml outside of front end web development?		badfrog
19298189	11.803689	-7.0915146	comment	3.0	10.5	1551664321	-9.013099	I started using python 3 with mypy, which provides (optional) static typing, and my gosh has it reduced the time I spend looking for stupid problems by orders of magnitude.I got a somewhat direct comp...		anyfoo
19298626	11.815578	-7.359523	comment	3.0	10.5	1551671379	-5.993249	Immutability. I didn't really understand the benefits of having immutable data structures until I tried building a service with no mutations whatsoever... and noticed I didn't get any weird, head-scra...		campezzi
19298962	11.90069	-7.3173957	comment	3.0	11.0	1551676483	7.10591	Try code large a GUI project without OO.		edwinyzh
15766198	11.5988035	-7.851518	comment	3.0	19.0	1511455630	10.120074	OP is complaining about Goroutine stack size at 4kb per connection, his test shows that Node8 is taking up to 150MB of memory with 5k users, 4kb*5k = 20MB for Go memory, I don't understand how Nodejs ...		Thaxll
15766255	11.698252	-7.8193417	comment	3.0	19.5	1511455987	10.121462	Some random thoughts as somebody who codes a lot of Node.js at work and a lot Go in my freetime (and sometimes at work):Did you try using pprof and the other tooling go provides to better understand y...		iends
15767880	11.640362	-7.7391815	comment	3.0	11.5	1511472115	9.760419	> Since go does not have generics or unions my only option right now is to decode message in a base message struct with just the @ JSON field and then based on that try to decode message in a full pay...		majewsky
15778969	12.438888	-7.753995	comment	3.0	10.5	1511659619	-11.106052	Honest question: is immutability complicated in Clojure because it's hard, or because it's running in a virtual machine with no meaningful support for it?The Erlang VM has immutability deeply baked in, and it just works(™).		macintux
15799358	11.594393	-7.9209695	comment	3.0	12.0	1511890353	10.224867	Is it common in Golang to not write tests?		roguecoder
15824589	12.053497	-7.529974	comment	3.0	10.5	1512143999	11.868861	> 'That override will work even if we stick it into a module.'That's the line where they lost me. Who wants to debug a situation where two unrelated modules clash because they wanted incompatible weir...		richard_todd
15838951	11.949225	-7.746115	comment	3.0	10.5	1512328483	-5.974487	The syntactic baggage is bothering me too. Sometimes this functional style is syntactically too heavyweight if your language doesn’t support it very well. Compare that example translated to Haskell:  ...		kccqzy
15841602	11.861527	-7.6211295	comment	3.0	18.0	1512364388	-7.4230957	You can set all the flags in your cabal file. How is this not a fix? This is like specifying your compiler version.We have a fairly hefty haskell code base at work, and we never use LANGUAGE pragmas anywhere.		tathougies
15841687	11.962711	-7.717315	comment	3.0	13.0	1512365665	10.417186	Hiding the ways in which your code isn't really Haskell (e.g. isn't going to be compatible with other random Haskell code) doesn't strike me as a fix. Why are there so many extensions in the first place?		tree_of_item
15841830	12.006247	-7.761514	comment	3.0	13.5	1512368048	10.430943	Your list should include Standard Chartered and Barclays. Standard Chartered probably has the largest commercial Haskell codebase in the world, it has over 30 full-time Haskell developers and many more users.		willtim
15857707	11.674257	-7.565175	comment	3.0	11.0	1512522627	-8.875129	"What exactly does ""cheating"" mean, and why doesn't it count if it solves a problem? With generics, the compiler will internally generate type-specific implementations for each instantation, so the end..."		lobster_johnson
15866743	11.639409	-7.1444325	comment	3.0	20.0	1512609289	9.041652	Is map-reduce really less simple than a for-loop? I agree with your other examples, but I see these too things as totally equivalent (unless you're in a language that make a dog's dinner of this type of thing, like old C++).		Y_Y
15886086	11.97272	-7.676449	comment	3.0	12.0	1512832013	10.416363	"One thing this doesn't mention, which might be useful to know, is that Haskell is indentation-sensitive. For instance, those examples using ""let"" won't compile if the lines beginning with ""let"" and ""i..."		culturedsystems
15886189	11.857426	-7.1829324	comment	3.0	12.5	1512833483	7.4931464	"A data structure cannot be functional. I understand what he's trying to say, and agree with most of it, but the word ""functional"" is purely wrong. What he wants to say is ""good"". But not all ""function..."		erikb
15894439	11.647399	-7.332926	comment	3.0	14.5	1512953467	-8.539147	I have been playing around with an idea for a programming language that enables practical theorem proving.The core idea behind it is that statically proven assertions would be really powerful.Loop inv...		thethirdone
15895723	11.820438	-7.4931335	comment	3.0	12.5	1512979107	-8.766771	Yeah, I am aware of refinement types. You can do a lot of what I am envisioning with just refinement types. Expressing loop invariants with just refinement types is really awkward though.The main reas...		thethirdone
15903642	11.595718	-7.9385195	comment	3.0	17.0	1513063283	10.15255	A slightly different perspective. For the end user Go apps are by far the easiest to setup and use. Usually it's just a single binary to download. That is a huge advantage that can't be beat.Other lan...		tobbyb
15864626	11.606795	-7.8652143	story	3.0	20.0	1512591822	10.048194	Show HN: Go# – go-like concurrency aspects in C#	https://github.com/kpocza/GoSharp	kpocza
15862844	12.249326	-7.54711	story	3.0	58.0	1512580748	-11.194437	KornShell – Moving forward	http://situ.im/posts/korn-shell-moving-forward	siteshwar
15908200	11.772641	-7.8473268	comment	3.0	18.5	1513104126	-2.408734	> Translate idiomatic Go into concise Javascript that works in every browser. Use Go's type system and world-class tooling to build large web applications with confidence.Thanks, but for type system w...		sAbakumoff
15908320	11.6159725	-7.771544	comment	3.0	13.0	1513104966	9.83102	The author stated below that co-routines are translated to async/await. for me it seems to be completely different concepts because golang co-rotines allow to execute the code in parallel which async/await can't do.		sAbakumoff
15910131	11.818267	-7.050474	comment	3.0	16.5	1513118195	8.095627	I can see the argument for terseness. In fact I loathe how verbose Java is, I try to minimize LOC, and I enjoy using ?:. However, I don't think it's a good idea to use this extreme single-character, s...		modeless
15919872	12.36378	-7.735226	comment	3.0	14.0	1513224414	11.931649	> Prepare for 1.0 next releaseSo this will soon be a stable API?  Great work.  The documentation is extensive.I am personally a big fan of toolz[0], which is clojure inspired.  This object method chai...		merlincorey
15927631	11.78749	-7.355157	comment	3.0	10.5	1513289322	-8.947833	> strong, static typing is an essential feature for large scale projectsThis is empirically false.There are (of course!) good reasons to consider static typing. But, in my experience, use of static ty...		davepeck
15978642	11.595539	-7.7801137	comment	3.0	13.5	1513863641	9.971856	Ok, I'll chime in here since all the comments are missing the point.If you are excited by golang-style in C, then Mr Sustrik's libmill is for you http://libmill.org/tutorial.htmlLibDill is a thin expe...		majke
15984940	11.827587	-7.182832	comment	3.0	15.0	1513911788	-9.064908	There's nothing here that tunes down the dynamism. Hints aren't statically checked or enforced. It's still possible to pass in an empty list to an int-hinted var and, e.g. have `if not var` evaluate t...		sidlls
15931603	12.105957	-7.5053	story	3.0	60.0	1513344361	-10.60819	Generic Programming Made Easy in F#	https://www.demystifyfp.com/fsharp/blog/generic-programming-made-easy	tamizh88
15995305	11.896893	-7.421302	comment	3.0	11.5	1514051763	7.2851977	This rebuttal isn't very good.The lack of canonical names for parameters to data constructors is usually addressed by convention, and can present real problems for reading unfamiliar codebases. There ...		gue5t
15999885	11.935525	-7.1798167	comment	3.0	12.0	1514129058	8.504092	Ok but why? There are a few low-level performance-oriented programs that benefit from struct types (which the JVM now has too) or reified generics. For ordinary day-to-day programming, though, F# is u...		lmm
16040910	11.979825	-7.7311616	comment	3.0	16.0	1514734232	10.430757	"I don't know how you're defining ""capable""; I'd take the view that Haskell/Scala/... are immensely more effective than anything that was comparably mainstream in 1990 (and that Haskell/Scala/... devel..."		lmm
16045195	11.777683	-7.019234	comment	3.0	28.5	1514793739	-10.5395975	"> Explain what [""123"", ""456"", ""789a"", ...].map(parseInt) returnsI understand the frustrations with questions unrelated to the job you'll be performing, such as asking about balancing b-trees when you'..."		reificator
16063897	11.653788	-7.962792	comment	3.0	11.0	1515005795	-9.927242	How do people differentiate between packages being worked on and packages installed?Let's say I have my-package (version 1.0) installed and in use in a lot of my other projects.  But I'm working on ve...		LanceH
16002072	12.335746	-7.0322843	story	3.0	3.0	1514162837	13.179788	Perl p5p slipping? rurban please save us	http://blogs.perl.org/users/leon_timmermans/2017/12/smartmatch-in-5277.html	vgy7ujm
16089664	11.83424	-7.039728	comment	3.0	11.0	1515307912	-9.038104	Can you make a decorator that references a class instance and has parameters?		brian_herman
16114807	11.604877	-7.277563	comment	3.0	14.5	1515591644	-8.81516	"We have some formal verification, it's called typed systems. Very limited, I know. But some people are still praising dynamically typed languages for their ""speed"" and ""lack of compiler errors""."		golergka
16830850	11.671452	-7.5770283	comment	3.0	15.0	1523633154	9.980561	I don’t think it’s fair to say they ignored advances in modern programming languages. There are opinionated reasons for the omission of generics and they do make sense in the overall architecture of t...		jordz
16831036	11.64828	-7.964396	comment	3.0	11.0	1523634052	10.209395	"Absolutely! The ""advances"" were design decisions that go chose not to use. The people who designed golang are not newbies. They didn't ignore anything, nor were they ignorant of other languages. They ..."		chisleu
16843358	11.603645	-7.866927	comment	3.0	14.5	1523809771	10.128626	What exactly frustrates you about Go's JSON handling? In my experience its among the best in typed languages. Define a struct (or just use an untyped map), optionally specify json tags for field names...		013a
16880135	12.028061	-7.757813	comment	3.0	28.0	1524171712	10.434127	> I find the cognitive burden to be lower in Haskell than in, say, JavaI don't think Java is a meaningful competitor. It's a language completely based on 90's hopes that OOP was a good idea. Turns out...		jstimpfle
16880277	11.925439	-7.356102	comment	3.0	25.0	1524172812	7.0453396	> It's a language completely based on 90's hopes that OOP was a good idea.I find the dismissive tone rather amusing.A large majority of the code running on our planet today is OOP.You could argue that...		hota_mazi
16884423	12.175104	-7.632649	comment	3.0	11.5	1524229683	11.95149	Also, no plans to get rid of implicits apparently. Sorry Scala, we're not gonna be friends.		MrBuddyCasino
16884526	12.239278	-7.6335964	comment	3.0	10.5	1524230688	11.949069	"Neither of those has or intends to have HKT, and they'll never be an acceptable replacement for Scala without it. They're ""improving faster"" but only in that they're starting from further behind."		lmm
16884599	12.201834	-7.6433153	comment	3.0	27.0	1524231183	-11.719987	There are a lot of comments pointing out pros and cons of Scala, comparing it to other languages using superficial proxies.I'd like to share a different perspective based on my own work with OOP-centr...		dserban
16884217	12.245344	-7.64651	comment	3.0	20.5	1524227549	11.946137	Its fascinating process where if you're a hot new language you attract a lot of people that like shiny new things. When the next hot new language comes along and those people move on - have you attrac...		rb808
16884667	12.084364	-7.7391143	comment	3.0	21.0	1524231799	10.684592	I disagree with that. Haskell is category theory as a language. The Scala community got invaded by Haskellites trying to turn Scala into Haskell, but there’s a particular style of OOP/FP hybrid that r...		jowiar
16885564	11.948987	-7.602067	comment	3.0	14.5	1524238164	11.813635	"From an abstract PL theory POV, Haskell's key innovation over ML was HKTs.
It was an experiment at the time, but one that was successful beyond
all expectation: I cannot imagine designing a new PL wit..."		YorkshireSeason
16890524	11.711728	-7.3999314	comment	3.0	15.0	1524299447	-8.785969	Don’t worry, they’ll discover types eventually.		tzahola
16900099	11.714454	-7.4080305	comment	3.0	20.0	1524450853	9.9614	What got me over the line was optionals and protocols + generics, the safety and expressiveness combined will eventually (hopefully!) win you over!		aplummer
16907004	11.915823	-7.0492377	comment	3.0	11.5	1524514630	-10.74178	Neat, good to see more `asyncio` frameworks coming along.Python's going to have a bit of an awkward time with two completely different sets of ecosystem for threaded vs. asyncio approaches, but it's n...		tomchristie
16922062	11.806675	-7.335813	comment	3.0	16.5	1524668250	-3.6437967	I don't think its a superior paradigm, just a different one.I only see his nursery as being useful when you really want your async tasks to complete before the function in which they were dispatched r...		jeremiep
16999173	11.720899	-7.270305	comment	3.0	12.0	1525475423	-6.6021166	This looks like it's (going to be) about a theory of programming languages as based on some form of the lambda calculus. I think it doesn't get pointed out enough that this is not a descriptive scienc...		mbid
16948433	11.745907	-7.3866305	story	3.0	118.0	1524933917	-8.703532	Implementing and Understanding Type Classes (2014)	http://okmij.org/ftp/Computation/typeclass.html	z1mm32m4n
16962168	12.211825	-7.626474	story	3.0	132.0	1525121206	11.919673	Macros: the Plan for Scala 3	https://www.scala-lang.org/blog/2018/04/30/in-a-nutshell.html	ddispaltro
17012316	11.59801	-7.644596	comment	3.0	13.0	1525697776	9.424591	Please read http://journal.stuffwithstuff.com/2015/02/01/what-color-is-y...It illustrates decisively that a language that doesn't hide async behavior balkanizes libraries into (at least) two camps for...		jtolds
17049949	11.755208	-7.3565707	comment	3.0	15.5	1526065055	-8.840562	> When developing, you don't necessarily know about your types yet.This is absolutely not true for myself and my coworkers. We think in types first. Typically we write out high-level functions with ty...		grumpyprole
17050074	11.800712	-7.245736	comment	3.0	32.5	1526066081	-8.9630165	"Python is not ""strongly typed"". Please don't repeat this phrase near management folk. Python just gives good error messages when it crashes at runtime, e.g. ""expected an Int but got a String"". This is..."		willtim
17050150	11.818454	-7.3038015	comment	3.0	23.0	1526066679	-8.967321	Hypothesis 1: All successful dynamically-typed programs eventually grow large enough to get rewritten or retrofitted with static types.Hypothesis 2: All successful statically-typed languages eventuall...		cx1000
17050604	11.797556	-7.1468487	comment	3.0	24.0	1526070709	-8.977433	Python is strongly typed.  It is also dynamically typed, and many people get the two confused.		dralley
17057129	11.813376	-7.537695	comment	3.0	10.5	1526179505	10.307235	You are absolutely right -- there are other ML-family languages that do a better job at avoiding some of the pitfalls (but surely with other tradeoffs). Most of the stuff you've mentioned is actively ...		hardwaresofton
17071886	11.616965	-7.8669086	comment	3.0	13.0	1526362802	10.206396	I think the current approach of announcing the death of `dep` before even having a stable alternative (`vgo`) is deeply flawed. With `dep` the ecosystem finally had something most of the developers ag...		pcx
17081741	12.005275	-7.722175	comment	3.0	17.0	1526472883	10.404426	"The one thing that makes Haskell not great is that its understanding is not widely intuitive.People with mathy backgrounds that don't blink at the phrase ""lambda calculus"" won't consider this, but a l..."		CiPHPerCoder
17082617	11.971719	-7.7338862	comment	3.0	15.5	1526480656	10.395518	"This is the one criticism of Haskell that in my opinion has no merit. Programming languages are not intuitive. They are a learned skill. You know the saying (sometimes said as a joke) ""such-and-such l..."		the_af
17082696	11.965893	-7.740979	comment	3.0	11.0	1526481194	10.36681	> Programming languages are not intuitive. They are a learned skill.I can teach someone Python or JavaScript in a few weeks, at a casual pace, where they can accept input from STDIN or a file, do some...		CiPHPerCoder
17092414	12.063621	-7.1775823	comment	3.0	11.0	1526572404	9.141638	Why use bluebird promises instead of native ones? Are them faster or is it just old habits?		davide_ross
17114829	11.891601	-7.7595005	comment	3.0	10.5	1526851659	10.37369	Let's say you write the best image decoder library for the next great image format, and everyone wants it on every device that is connected to the internet.Writing it in haskell would mean that only h...		jeffdavis
17117179	11.765391	-7.5864115	comment	3.0	10.5	1526895330	10.110332	"""parametrically polymorphic"" == has a generic type. So a function    foo[A](x: A) = ??? // Implementation hidden for now

is parametrically polymorphic, where A is the generic type (or type variable)...."		noelwelsh
17116378	11.952717	-7.099458	comment	3.0	21.5	1526881405	8.902665	What a fascinating design constraint: to retrofit a useful feature into the Java ecosystem while keeping as many things backwards-compatible as possible. This proposal has a much stronger answer to ba...		niftich
17121877	11.842092	-7.4461637	comment	3.0	13.0	1526937283	7.3375316	No idea why you think functional programming can't do printf debugging. Even pure languages like Haskell have `unsafePerformIO` (or wrappers like https://hackage.haskell.org/package/base-4.11.1.0/docs...		chriswarbo
17170768	11.83486	-7.124601	comment	3.0	10.5	1527486293	-10.76264	"I find it hard to argue it’s (the else block) any more useful than just using the `else` block’s logic in the try block.    try:
        import uvloop
        asyncio.set_event_loop_policy(uvloop.Even..."		nerdwaller
17120658	11.669391	-7.94578	story	3.0	22.0	1526928000	10.200865	How I write Go HTTP services after 7 years	https://medium.com/statuscode/how-i-write-go-http-services-after-seven-years-37c208122831	dnnrly
17149749	11.9452505	-7.3719	story	3.0	4.0	1527208891	7.0697894	Ask HN: Is there a clear, mature discussion of OOP/functional tradeoffs?		westoncb
17183475	11.641887	-7.930086	comment	3.0	13.5	1527634438	10.208484	I still wonder why solving a solved problem took so long to solve for the Go community, given they already solved it anyways?That is, in more proper words, first of all, language specific package mana...		gkya
17184648	11.648586	-7.9394264	comment	3.0	13.5	1527648628	10.174107	There are a lot of suboptimal design decisions that's shared across the state of the art in package management (cargo, pipenv, npm, yarn, etc) that the Go team is not taking for granted.One is reprodu...		amasad
21002563	12.029411	-7.7975283	comment	3.0	11.5	1568784128	10.437172	I am the author of this submission. I have strong opinions about functor and monad tutorials, and here are my thoughts:Back when I didn't understand what a monad was, I would read a bunch of tutorials...		TheAsprngHacker
21018831	11.845757	-7.3342857	comment	3.0	12.5	1568916340	7.0798926	"I started programming (like a lot of people) after I bought one of those ""Learn C++ FAST!"" books (I don't remember the actual title).A large chunk of this book was about the object-oriented part of C+..."		tombert
21018878	11.921676	-7.39397	comment	3.0	10.5	1568916571	7.1715784	What I dislike about functional programming is that when objects are not supported or they are avoided I have seen poorly documented and complex hashes/collections data structures that end up reinvent...		throwaway5752
21040657	11.610768	-7.9118934	comment	3.0	10.5	1569148812	10.201564	> multicorewhat's the state of this nowadays?> better Windows supportcouldn't agree more - they can learn on Go's lessons (the language didn't get much traction until they added Windows support).		zerr
21051075	12.281629	-7.3116183	comment	3.0	10.5	1569259313	7.056928	The issue on Smalltalk 80 was that diffing and combining images was a huge pain.  There wasn't a clear seperation between the system itself and whatever you were working on.  On top of that, Smalltalk...		monocasa
21052840	12.161319	-7.4809813	comment	3.0	11.0	1569268227	-10.554009	That's not the root of the problem. Personally, I wish MSBuild would be more powerful and would allow mixed compilation where some files are in C#, some in F# (or VB.NET or some other language targeti...		FlorianRappl
21065806	11.945159	-7.2773433	comment	3.0	16.5	1569367554	9.223059	I think async/await probably makes more sense in a typed language, where a compiler can tell you when you're missing an await, or at least warn you about not dealing with potential side effects and er...		mstade
21066321	11.993799	-7.2438574	comment	3.0	11.0	1569371547	9.182126	> when you use async/await instead of promises or callbacks, things do change because two sequential lines of code are no longer two truly sequential instructionsI thought async/await was just syntactic sugar for promises?		ihuman
21087051	11.673831	-7.0317554	comment	3.0	10.5	1569542702	-7.871688	Those are keyword args and are not specific to just Python. :)The parent post outlines many techniques, including this. Some are more apt than others depending on your language of choice.I would argue...		echelon
21145191	11.6025095	-7.6804223	comment	3.0	32.5	1570095834	10.297416	My Haskell isn't good enough to translate, but I'd love to see these examples in Rust. I believe Rust has all of the Haskell features mentioned in this article, but with a much more familiar syntax.Th...		nicoburns
21145700	11.996328	-7.7555504	comment	3.0	12.5	1570101403	10.424185	Do you have any evidence to back this up?In my experience working in the largest Haskell team in the world, dealing with various applications and services in production: none of what you said is close to reality.		vapou
21153216	11.628979	-7.9384813	comment	3.0	15.0	1570144053	10.209084	Oh ok, I understand. I don't really buy the idea that go is a simple language, I have to say. A lot of go's design choices read (to me) as needlessly complex, like features were added to address corne...		oisdk
21170873	11.973922	-7.5399137	comment	3.0	17.5	1570354389	10.1502075	> The world is not functionalWhat does this even mean? If the world is not functional, then what is it? Is the world procedural? And what world are we talking about? Our planet, physically? Are you th...		yakshaving_jgt
21171891	11.836392	-7.549776	comment	3.0	14.5	1570368668	10.356877	Ever mistyped an output file name in Haskell? This is one of those myths about static typing that really gets under my skin. I worked in a large, hardcore Haskell production environment for several ye...		mlthoughts2018
21172602	12.002685	-7.736527	comment	3.0	13.5	1570375558	10.422898	> You think I'm done? Let's get to Lens.Lens is a library, not part of Haskell the language, it's also not particularly widely used. If you are going to conflate the ecosystem with the language, then ...		willtim
22834729	11.831766	-7.48933	comment	3.0	11.5	1586536937	7.3691993	To have an honest comparison, don't compare imperative code in an imperative language with functional code in an imperative language. Compare with functional code in a functional language, e.g. ocaml:...		andrepd
22841039	11.97985	-7.7495127	comment	3.0	23.0	1586603092	10.417303	"What do you mean by ""either do things the Haskell (way) or you don't do them""? Isn't that the same with every language? I still don't understand why people put all sorts of unfair labels on Haskell. By labelling Haskell with ""fun"", we almost make it sound like it can't be used in production."		marceloabsousa
22840939	12.00263	-7.7465873	comment	3.0	28.0	1586601342	10.406016	Haskell is fun, but bear in mind that it's followes a purely functional programming paradigm, meaning you either do things the Haskell or you don't do them :). But it's a fun language to learn, and there are lots of free quality ressources on the internet		Apollidore
22842159	12.00569	-7.7515235	comment	3.0	18.0	1586618939	11.910413	>it seemed to peak around 2016https://trends.google.com/trends/explore?cat=5&date=all&geo=...Early 2017, perhaps! Are Go and Rust seen as competitors to Scala?		trevyn
22842242	11.854431	-7.650888	comment	3.0	12.0	1586619898	-9.470451	If I am not mistaken, Dijkstra advocated for Haskell to be used as a language of instruction at universities. There is an essay somewhere online about it. What I could find is this: [1].Edit: Indeed, ...		mikorym
22841241	11.98259	-7.7521286	comment	3.0	18.0	1586607020	10.405875	Haskell has a huge catalog of libraries you can reach for, so you don’t have to reinvent the wheel. That said, the Haskell way can seem very different than what you see in most languages. As an exampl...		tmountain
22842287	11.877512	-7.3394747	comment	3.0	10.5	1586620458	6.933487	Do they, though?  Arguably the worst part of nominal inheritance is that it doesn't scale.  Can get you off the ground quickly, but will almost certainly bite you.Now, mapping non hierarchical things to a hierarchy works well.  But imposing that as a truth fails miserably.		taeric
22842609	11.678973	-7.8873224	comment	3.0	16.0	1586623873	10.162158	Go is a competitor to Java 1.0, it still needs to grow a bit more if it wants to compete with Java 14 and its 25 years of tooling and libraries.If Go 2.0 ever happens, it will be a competitor to Java 5.		pjmlp
22843481	12.240403	-7.626224	comment	3.0	10.5	1586632393	11.956543	"I wanted Scala to be my ""better Java"" for a long time, mainly because it seemed to have plentiful headroom as I seek to learn more.  The community enthusiasm was also contagious.But:
1) the ecosystem ..."		lcall
22843820	12.222198	-7.6404395	comment	3.0	10.5	1586635397	11.912042	I’ve been using Scala as my main programming language for over 5 years. I’ve found my “plateau of enlightenment” by sticking to a subset of the features: case classes, for comprehensions, futures, imm...		zylepe
22847154	11.978824	-7.189011	comment	3.0	17.0	1586686576	7.8814025	It will be interesting to see how Java developers who argued against functional programming will react to these features.		rienbdj
22903083	12.049245	-7.7419624	comment	3.0	14.5	1587158499	10.413208	"Looks interesting. 
I only wish it used Haskell's type annotation. I've been learning Haskell recently and I'm really liking how easy it is to read and digest codes.I feel like Haskell in general is y..."		salimmadjd
22906950	12.336849	-7.046115	comment	3.0	11.0	1587209174	13.177769	"Yes, but I mean we all got used that ""Perl 6"" is a different language."		zerr
22908182	11.679069	-7.879894	comment	3.0	11.5	1587221977	10.222966	Go may be unique in being the only ecosystem built after Python that can't claim it avoided Python's packaging disasters.		morelisp
22906991	12.324889	-7.030552	comment	3.0	12.0	1587209645	13.163091	Everyone knows it's a completely different language, that's not in question.What is in question was it worth making the already extremely messy name situation even more confusing?Raku, Rakudo, Rakudo ...		chrisseaton
22930968	11.624263	-7.9360824	comment	3.0	10.5	1587433013	10.231364	I’m pretty new to Go, and I recently tried to get delve working with VS Code and it was a pretty rough experience (VS Code in general wasn’t as polished for Go as I’d hoped). Using Delve via the comma...		shay_ker
22940732	11.697033	-7.2911987	comment	3.0	21.5	1587514760	-6.3417745	> Every variable in Chaos language is immutable by default.---> kaos> num a = 5> kaos> a = 7> kaos> print a> 7Doesn't that mean a is mutable by default?		jedberg
22949124	12.458964	-7.440048	comment	3.0	18.0	1587582917	12.885439	> Are many of the other languages you've used strongly typed? That's the thing that gives me pause - I feel like I rely on the compiler a lot in languages where it can do a lot for me, and that I'd be...		QuinnWilton
22949723	12.267596	-7.4517703	comment	3.0	11.5	1587586623	-8.975833	I've heard a number of times that static typing would be near impossible for Erlang because of how message-passing works, but just the other day I read a quote where one of the creators (I think it wa...		mercer
22963700	11.817423	-7.153985	comment	3.0	13.0	1587691867	5.1434493	I still don't understand why people worship this book. Contrary opinion here but I think this book is actually below average.I think it's good that it introduces the overall concept of Design patterns...		crimsonalucard
22958633	12.197973	-7.353125	story	3.0	5.0	1587663868	7.102003	What is meant by “protection” in real OOP?		tresilience
22981795	12.087881	-7.1917996	comment	3.0	11.5	1587850892	9.14899	"Your implementation is broken even if everything uses native Promises. I don't know how many times this exact thread needs to happen on HN (as it has many times before) until people realize their ""no ..."		exogen
22992966	12.045618	-7.2160387	comment	3.0	14.0	1587962898	9.16338	"I used to use more ""Promises"" but now I mostly code with plain callbacks if possible. It is just simpler, less thinking needed. I spend that thinking-budget on other things.One thing that is tricky wi..."		galaxyLogic
22994684	11.856835	-7.373677	comment	3.0	13.0	1587984893	7.0318875	> @s̮̦̩e̝͓c̮͔̞ṛ̖̖e̬̣̦t̸͉̥̳̼ It's been a while since I wrote this answer. My views have changed since I wrote it. Now, I believe that inheritance, both classical and prototypal, are bad and should be a...		searchableguy
23004175	11.785012	-7.3612885	comment	3.0	11.0	1588056383	-8.914306	Writing statically typed code will always be slower than writing dynamically typed code.People don't use static typing for writing code faster, they use it for code that can be READ (and understood) m...		sunaurus
23007021	11.593612	-7.0633426	comment	3.0	11.0	1588082451	-7.9265003	For what it’s worth, I’m not a Python programmer and I got that correct.The answer is:[1][1, 1][1, 1, 2][3]It relies on knowing something about how python applies default arguments.I’ve only written a...		czzr
23008516	11.649274	-7.5482197	comment	3.0	11.5	1588090675	-6.9316697	This wouldn't work for D. D doesn't constrain return types to something less than what they are. A Range is not just an Iterator, it has optional pieces that depend completely on the given type.For ex...		schveiguy
23016449	12.00523	-7.7807627	comment	3.0	32.0	1588145697	-8.697734	"This is a very old opinion, and one I don't think has aged terribly well. How old? Partway down the page there's a link called ""new developments"" that cites GHC 6.12, a version that came out in 2009!S..."		andolanra
23016679	11.906909	-7.3263645	comment	3.0	10.5	1588147773	-7.1576333	"> Imperative programming is the most natural thing for people. ""Do this, then that, then that, in that order.""No way. Have you ever mentored technical people who aren't specifically trained programmer..."		otabdeveloper4
23017442	11.9774065	-7.7262235	comment	3.0	14.5	1588155066	10.406638	I think there's other way of looking into this: in Haskell we have well defined semantics (when you look at function you have explicit information about what is happening) and we managed to get to fam...		rednum
23017471	11.95783	-7.310573	comment	3.0	20.5	1588155266	6.9405236	This sounds like the old arguments about OOP.Turning everything into an object can make a small program into a big program, so it’s maybe not such a good idea for small-scale stuff.http://www.solipsys...		ChrisMarshallNY
23017514	11.936383	-7.344714	comment	3.0	18.5	1588155723	6.9374914	"""Turning everything into an object can make a small program into a big program, so it’s maybe not such a good idea for small-scale stuff.""In my experience OOP actually makes programs smaller. Assuming..."		FpUser
23030027	11.948684	-7.6142845	comment	3.0	13.0	1588249133	10.37234	Quite surprising take on the languages.> When to use Python or Ruby> Python and Ruby seem to me to be pretty similar in that they’re scripting languages and dynamically typed and seemed like the great...		stefanchrobot
23040347	11.611657	-7.9027905	comment	3.0	11.0	1588324294	10.18936	I am happy that functions/subroutines were invented and in common use by programmers in the 1970’s, otherwise we would have had arguments that function calls with their stack based semantics are confu...		RcouF1uZ4gsC
23041813	11.778627	-7.262107	comment	3.0	12.0	1588340071	8.685538	...this is what Java gets instead of smth actually useful like structs/records/dataclasses with pass-by-value semantics?		nnq
23030530	12.327026	-7.426979	story	3.0	51.0	1588253222	-9.711533	Matching Binary Patterns with Erlang	https://dev.to/l1x/matching-binary-patterns-11kh	StreamBright
23052159	11.63218	-7.961477	comment	3.0	11.5	1588431931	10.217394	instant feedback is possible in Go as it compiles super fast. Also its much simpler to write cause its a small language and the concurrency primitives are so simple to understand and use. It has its p...		vijaybritto
23050705	11.862987	-7.2303214	comment	3.0	11.0	1588414000	-8.961888	That is the difference between a dynamically typed language (like Python) and an untyped language (like JS). The dynamically typed language checks types at runtime, whereas the untyped language doesn't.		mantap
23078031	11.655754	-7.9454975	comment	3.0	14.5	1588669950	10.222307	Wait, Go hasn’t had any revolutionary change since it arrived 10 years  ago. It is still basically the same language/package.  I’m not saying that is bad, but why does a language need to be constantly...		fetbaffe
23085301	11.95163	-7.414442	comment	3.0	11.5	1588714201	7.2934313	Give up while you can. Immutable data classes and functional pipelines are great, everything else isn't worth it. Lots of people say FP is amazing but very few people use it in the real world because like you say, its unintelligible.		rb808
23088223	11.761945	-7.061922	comment	3.0	12.0	1588744121	8.807511	Metaprogramming via reflection is used heavily in the JVM ecosystem, and I can say with confidence that a majority of the bugs I encounter in third party code is somehow related to reflection. I think...		ulrikrasmussen
23089201	12.011161	-7.0563884	comment	3.0	10.5	1588756946	8.749852	> I think the overuse of reflection in Java is a symptom of the language not having adequate support for expression the abstractions that developers need in an affordable way, and hence they turn to r...		tannhaeuser
23097733	11.612067	-7.9513907	comment	3.0	12.0	1588807900	10.206873	Hopefully the licensing requirements can be made simple as well!I recently wanted to submit a 3 character change to golang that significantly speeds up strconv.ParseFloat(), but lost interest about 2-3 minutes into reading this:  https://golang.org/doc/contribute.html		hannibalhorn
23122803	11.837739	-7.0850563	comment	3.0	10.5	1589006879	-5.513349	For those of us hazy on the AOP concept... Is it an artifact stemming from restrictions of static languages, or would it be a valid concept with dynamic languages too?		fulafel
23129090	12.144622	-7.1994314	comment	3.0	13.5	1589067098	8.546615	I was looking at EnTT's API when building a little toy ECS of my own in JavaScript. Since I'm working in JS, I haven't really tried to copy its internal architecture since it doesn't quite make sense ...		avolcano
23140858	11.748807	-7.3039145	comment	3.0	12.5	1589195206	-8.801575	After playing with dependent types and type driven development, almost every language has been spoiled for me :(		exdsq
23154589	11.654578	-7.975356	comment	3.0	11.0	1589294943	10.256184	I feel the same, we are starting to use Go now and I really don't like it.Things that in other languages I can do in half a dozen lines of code, I find I'm writing 4x time more in go.And I find it pre...		LandR
23165364	11.632358	-7.0724916	comment	3.0	12.5	1589365098	8.862483	"My position on the matter might be summarized as ""No TCO, no copyable stackful coroutines, no buy."" Separately from that a lot of my experience with the JVM involves things like trusting the JVM's cla..."		anonymoushn
23171962	12.499711	-7.5093923	comment	3.0	10.5	1589404851	12.919278	Am I correct in saying that functions written in C do not get pre-empted like Erlang functions?  If that is true, you could write computationally intense code in C within a BEAM app.  But I think this...		PopeDotNinja
23173090	12.282707	-7.6838818	comment	3.0	14.5	1589412447	10.463309	To clarify, the link in 1) is where I took the number of changes from.And Re: 2) I have no doubt that Mr. Zhang knows what he's doing. I was just noting how even after the prodigious amount of work he...		dmit
23173192	11.897164	-7.2976866	comment	3.0	18.0	1589413115	9.2206	What's wrong with the async/await syntax?		luhn
23193906	12.067268	-7.286551	comment	3.0	11.5	1589559504	8.536038	My impression of ECS from a distance is that it is antithetical to data-hiding.That there are good reasons in terms of memory layout to locate all of those values which would have been member variable...		rectang
23193924	11.929048	-7.3998585	comment	3.0	11.0	1589559623	7.0859847	There is a (mistaken?) tendency to see OOP as a step beyond functional programming, probably because it allows for more complicated abstractions.But it seems to me a more natural scale to use is how t...		etangent
23194038	11.866724	-7.334835	comment	3.0	13.5	1589560095	7.1329136	I've actually run into a couple of people with six-digit SO scores that profess to not know about such concepts as polymorphism.My jaw dropped. Maybe they were being a smartass, but that's just crazy ...		ChrisMarshallNY
23194475	11.937843	-7.389044	comment	3.0	25.0	1589562089	7.0527334	> Limiting yourself to only one lensWell, agree, but in my experience people who abandon OO are usually the ones who are limiting themselves to only one lens - the top-down/procedural way software was...		commandlinefan
23202525	11.895228	-7.482723	comment	3.0	20.0	1589628170	9.26041	> A virtual thread is a Thread — in code, at runtime, in the debugger and in the profiler.To explain: if you debug async code on Kotlin right now, you cannot single-step in a debugger, because the deb...		MrBuddyCasino
23202844	11.939632	-7.275251	comment	3.0	17.5	1589632001	9.183119	> That's a property of the function, whether or not you want the type system to help you with it.The problem is that in, say, C# or Kotlin, subroutines with the same semantics come in two different co...		pron
23206844	11.60049	-7.8860874	comment	3.0	16.0	1589660189	10.147594	Your can't really do anything real without pointers in Go though because you won't be able to mutate states out of a function.		littlestymaar
23232143	11.712745	-7.645209	comment	3.0	19.5	1589872240	-11.024048	"Agreed.  Await seems much nicer for the case of some sleep/wait causing subroutine that returns something.    var foo = await bar();

vs    c1 := make(chan float64, 1)
    go bar(c1)
    foo := <-c1

..."		jayd16
23233071	11.881749	-7.3897486	comment	3.0	12.0	1589881576	7.296592	Interestingly, if you watch the Erlang: The Movie (https://www.youtube.com/watch?v=BXmOlCy0oBM) they use the term 'declarative programming' to refer to what we would now call 'functional programming'....		rkangel
23244186	11.874311	-7.340913	comment	3.0	11.0	1589959163	7.0620847	I think that classes (in the school of OOP coming from C++ and Java) are incorrect abstractions. Here incorrect is in the eye of the beholder, but I would argue that tying the three fundamental princi...		js8
23284148	11.98344	-7.242228	comment	3.0	11.0	1590250677	-8.906575	> They lack static type checking, but I find that a thorough test suite catches most type errors anyway.Maybe ruby is different than python in this regard, but with python I see a lot of “assert isins...		ed25519FUUU
23284389	11.7857065	-7.187175	comment	3.0	18.5	1590252388	-5.664289	You are almost 3500 commits in to this project already, with no other contributors? The dedication to this is incredible. It sounds super compelling and I wish you luck!I hope you get more recognition...		lukevp
23284483	11.71297	-7.338293	comment	3.0	11.5	1590252973	-8.855151	"> You should still have tests, but IMO tests that are just checking that a string is a string areThe correct completion to this sentence is ""irrelevant."", because that's not what anyone is proposing.T..."		kerkeslager
23290251	11.625176	-7.0261497	comment	3.0	11.5	1590311281	8.758379	Sorry, this is hand wavy nonsense. One counter example, we switched from Cassandra (JVM) to Scylla (C++). It was a win in terms of both query latency and infrastructure costs as we required fewer mach...		dirtydroog
23293288	11.878509	-7.1063433	comment	3.0	10.5	1590343368	-10.759429	I see no reason to use curio or anything instead of standard asyncio. Works really well for me. Queue tasks, they finish at their leisure, create futures and locks to control flow, all really easy and...		nurettin
23238523	11.872426	-7.112697	story	3.0	4.0	1589913944	-6.7466063	Immutability in JavaScript: A Contrarian View	https://stackoverflow.com/questions/34385243/why-is-immutability-so-important-or-needed-in-javascript/43318963#43318963	sdesalas
23304422	11.792895	-7.4346976	comment	3.0	16.0	1590437261	-8.651624	"I bought the book ""Type Driven Development in Idris"" and got several chapters in before getting distracted by whatever else. It was enough that I'm now annoyed relatively often that I can't pass types..."		ngngngng
23318610	12.264394	-7.273147	comment	3.0	12.5	1590544482	7.0773125	This is awesome!I had the honor of first learning Smalltalk (and C++ and a bit of object databases) in a class taught by Bob Beck from Sequent.  We actually had many students running Smalltalk on X te...		neilv
23322429	11.65026	-7.920213	comment	3.0	19.0	1590584067	10.198663	It's not bad doing it once. Furthermore I'd suggest you do it truly from scratch once just for the learning experience (no framework [Go makes this easy] or from TCP socket [synchronous with Python is...		eatonphil
23336151	12.249461	-7.5189986	comment	3.0	12.0	1590666227	-11.365118	Why use nim over Kotlin with AOT?		The_rationalist
23340859	11.709995	-7.3185782	comment	3.0	14.5	1590691555	-8.06022	"The venerable master Qc Na was walking with his student, Anton. Hoping to prompt the master into a discussion, Anton said ""Master, I have heard that objects are a very good thing - is this true?"" Qc N..."		AlexanderDhoore
23341595	11.780553	-7.329811	comment	3.0	10.5	1590694782	-8.926971	"> Another kind of clean up comes in PEP 585 (""Type Hinting Generics In Standard Collections""). It will allow the removal of a parallel set of type aliases maintained in the typing module in order to s..."		nemetroid
23342159	11.728864	-7.1078215	comment	3.0	11.5	1590697694	-8.933812	Python is interpretted, not compiled, and completly dynamic. You cannot check much statically.In fact, any program can replace anything on the fly, and swap your string for something similar but mutable.It's the trade off you make when choosing it.		BiteCode_dev
23342508	12.1674795	-7.543732	comment	3.0	15.0	1590699462	-11.299616	In my eyes, the question is always why Kotlin? I don't think it offers much over modern Java.Maybe data classes? That's not a game changer to me.Coroutines? Loom will be better.Nullable references? This might be worth it, but in my experience Optional<T> is enough.		vips7L
23346485	11.69857	-7.239556	comment	3.0	12.0	1590729326	8.672118	Valhalla will change that, all value like classes are going to be value types in post Valhalla.		pjmlp
23362955	11.966423	-7.7276034	comment	3.0	10.5	1590860188	10.405844	I don’t get it. What does removing Haskell from the into course have to do with the use of Haskell in the PL or compilers class?		gowld
23363134	11.983065	-7.7477603	comment	3.0	12.0	1590861405	10.4104185	Anyone using Haskell to drive their business is making a huge mistake in my experience. Haskell2010 is a fine language. Unfortunately, the ecosystem has centered around whatever the latest version of ...		moreaccountspls
23365529	11.612666	-7.3229914	comment	3.0	12.0	1590878956	-6.5105724	Following links in your 1), I liked https://www.cs.hmc.edu/~oneill/papers/Sieve-JFP.pdf 'The Genuine Sieve of Eratosthenes' by Melissa E. O’Neill. Somewhat damning and to your point.Are there any theo...		somewhereoutth
23369288	11.655421	-7.899556	comment	3.0	18.0	1590929953	10.191799	Except that these kind of experiments contributed to Java generics, being made available 3 years before Go 1.0 was given a green light.Which is why Go had already a good example to learn from on how not to do language design.		pjmlp
23369321	11.650064	-7.919288	comment	3.0	16.5	1590930355	10.215002	Are you suggesting all new typed languages have generics? What makes you so sure there isn't room in the design space for a typed language without generics?As much as I like generics, Go's popularity ...		eeh
23370227	11.652391	-7.9273467	comment	3.0	14.0	1590939750	10.221102	Yet, they acknowledged it was a mistake not to consider them.> In three years of Go surveys, lack of generics has always been listed as one of the top three problems to fix in the language.https://blo...		pjmlp
23301722	12.279636	-7.311383	story	3.0	9.0	1590418615	7.0246043	Bits of History, Words of Advice (On Smalltalk)	https://gbracha.blogspot.com/2020/05/bits-of-history-words-of-advice.html	AriaMinaei
28037840	11.855757	-7.7601185	comment	3.0	20.5	1627917958	10.199299	This is the second time I've seen the link above. And while I agree with the premise, the author clearly does not understand how to properly use the `Maybe` monad (a term that does not make an appeara...		kingdomcome50
28041219	12.484783	-7.8380365	comment	3.0	11.0	1627931136	-11.14599	Not who you are responding to, but the common idea that static types are all win and no cost has become very popular these days, but isn't true, it's just that the benefits of static typing are immedi...		uDontKnowMe
28042730	11.7044525	-7.070615	comment	3.0	11.0	1627938834	8.626363	We don't really know how much memory Java needs on this benchmark. The JVM will use as much memory as you give it. Its viewpoint is, if you tell me I can use 300mb then I'll just not do any GC work un...		native_samples
28048355	11.718423	-7.354041	comment	3.0	11.0	1627993727	-8.844739	"  doubler :: Num a => [a] -> [a]
  doubler xs = take 2 xs

Passes the type checker, thanks type system! /sI like static typing, but static typing advocates seriously overstate how much protection the ..."		blacktriangle
28057672	11.78854	-7.3237267	comment	3.0	49.5	1628056579	-8.887378	"There's now a trend to add gradual typing and type hints to dynamic languages, while at the same time, ""static"" languages are incorporating ideas from dynamic languages. So the end result is a symbiosis, not opposition."		kgeist
28058559	11.707677	-7.3685	comment	3.0	27.0	1628065132	-8.832466	> you have to pollute your projects with noisy defensive code that double checks the type of everything coupled with extra manually written tests, with no guarantee you didn't miss something.A common ...		mpweiher
28059408	11.707279	-7.3299713	comment	3.0	22.5	1628073218	7.703802	> Types being correct does not imply values being correct, so you will have to write those tests anyhow, although you maybe be fooled by the safyness of static typing[1] that you don't have to.Urgh, t...		chriswarbo
28060120	11.773349	-7.358278	comment	3.0	12.0	1628079671	-8.917736	"I never understand these ""dynamic vs. static"" threads.  All of the comments saying that types are somehow undesirable.  Or trying to appear wise and above it all with some variant of the middle-ground..."		StevePerkins
28058544	11.775183	-7.3156786	comment	3.0	24.5	1628064952	-8.897556	I almost see static typing as an alternative to exhaustive testing.  If you're working on a large project written in JS, you need a strong test suite to have any confidence you code will be robust at ...		skohan
28060694	11.744994	-7.4144435	comment	3.0	11.5	1628083264	-8.756509	"Because the claim ""you're not thinking about types"" is absurd. You can't pass a LoggedInUser to a thing expecting a URL. You can't pass a AccountIterator to a thing expecting a UUID. You can't pass a ..."		jerf
28061228	11.740876	-7.3443804	comment	3.0	15.0	1628086453	-8.840123	"Right.  The other thing is that in the parent, ""static type checking"" got shortened to ""types"", which in turn got confused with ""modelling"".The problem with stringly-typing is the model, which is SQL ..."		mpweiher
28072912	12.254292	-7.329357	comment	3.0	10.5	1628167584	12.838704	While this example is a pretty simple and I agree that a bit shift is a fine solution, I’ve recently been doing work on some bit-oriented HDLC-like protocols I’m convinced Erlang is the only language that can manipulate binary data very well at the bit level.		the_only_law
28101252	12.081675	-7.7707767	story	3.0	87.0	1628365410	10.418365	Python, OCaml, and Machine Learning (2020)	https://signalsandthreads.com/python-ocaml-and-machine-learning/	tosh
28189100	11.947528	-7.4696856	comment	3.0	13.0	1629038404	7.2676997	It's not functional programming, it's functional languages that go bat shit crazy with the amount of symbols they use that'd make looking at heliographs a refreshing pass time.		thysultan
28189285	11.903919	-7.4044704	comment	3.0	11.5	1629039599	7.1294327	Most people are taught from day 1 to code in some combo of imperative and OOP styles.The issue is not that FP is hard to learn. The issue is that most people start off from a much lower baseline knowledge-wise than they will when learning a new imperative and/or OOP language, framework, etc.		jghn
28193552	11.707072	-7.4827914	comment	3.0	13.5	1629070398	9.297842	For those that don't know, this is fibers for Java: https://wiki.openjdk.java.net/display/loom/MainAs someone that codes Java (using various async libraries) and has dabbled in Go, I really look forward to this, it can't come soon enough.		kyrra
28194766	11.736668	-7.3918266	comment	3.0	10.5	1629085782	9.187195	>... delimited continuations (of some form)I expect internal implementation of continuations in Loom to have non-negligible overhead which may be justified for heavy blocking I/O operations but not fo...		omazurov
28201867	12.123916	-7.242424	comment	3.0	11.0	1629142252	8.524437	> Doesn't the former enable the latter?Not necessarily. ECS is a local maxima when developing a general purpose game engine. Since it's general purpose it can do nothing more than provide a lowest com...		jeremycw
28204012	11.6877165	-7.8534937	comment	3.0	13.5	1629155272	10.185691	Python/Js are interpreted by default and not good system programming choices. Go is compiled. This comparison totally misses the mark. In fact Go was developed mostly as C++ but sometimes Python replacement at Google.		dilyevsky
28208395	11.9403925	-7.2612977	comment	3.0	17.0	1629197043	9.206335	This looks very cool, thanks for sharing!I took a cursory look at the docs and it looks like async/await is pretty much directly analogous to how it works in JS, with the difference that you don't nee...		mstade
28254113	11.660087	-7.954564	comment	3.0	23.0	1629519244	10.1847315	I agree about placating. Go is fine as it is. I don't need or want generics, but the addition of generics won't stop me from using Go.		_wldu
28254300	11.645802	-7.902861	comment	3.0	12.5	1629521426	10.15433	They seem more complex compared to a type parameter when you are only thinking about this narrow situation. However, generics are not limited to this narrow situation and will cause complexity far bey...		jshen
28254343	11.655267	-7.3389244	comment	3.0	12.0	1629521932	7.4211063	How is a generic data structure a COMPLEX ABSTRACTION?		aptenoforst
28254399	11.66391	-7.5138836	comment	3.0	15.0	1629522760	9.763111	Back when generics were introduced to Java I felt the same thing. I had been doing Java for years at that time. I had also been working for Sun, so of course I was exposed to it.I was very negative to...		lokedhs
28254309	11.643834	-7.3610215	comment	3.0	17.0	1629521544	2.130934	And it would have been far harder to read for those new to the generic code base. Complex abstractions make people feel smart, they rarely make code easier to understand or maintain.		jshen
28255673	11.639672	-7.8722887	comment	3.0	14.0	1629539953	10.225797	> Go adds generics. HN thread: I don't want thisIf generics are a good idea for a language, then it's better to add them in version 0.01 of the language and build up from there with generics as an int...		SideburnsOfDoom
28283634	12.114987	-7.6658716	comment	3.0	14.0	1629763526	-10.605508	As someone who has a lot of time for OCaml - I'm honestly not so big on F# anymore.You end up having to use .NET Objects in F# because their modules are so limited compared to OCamls. And at that poin...		LAC-Tech
28307216	12.018568	-7.8027873	story	3.0	24.0	1629926559	10.419225	Understanding Monads. A Guide for the Perplexed (2017)	https://www.infoq.com/articles/Understanding-Monads-guide-for-perplexed/	cedalion
28286713	12.311753	-7.3006134	story	3.0	4.0	1629798180	7.0634685	Pharo, not quite Smalltalk, possibly worse than VisualWorks	https://smackeyacky.blogspot.com/2021/08/pharo-not-quite-smalltalk-possibly.html	smackeyacky
28327984	12.014288	-7.1281395	comment	3.0	11.5	1630073348	9.735591	What I mean is: binding an enum to an action, which then sends a message containing the enum, deciphering it and executing code based on its value, and not forgetting to define the enum somewhere, whe...		amelius
28340198	12.006295	-7.045948	comment	3.0	15.0	1630174515	8.1747055	My problem with these arguments from PG is that they require that you pretend (or ignore) all the real world evidence we have about what languages are actually useful to make things with. It’s all fin...		ashtonkem
28345181	11.725451	-7.081708	comment	3.0	12.0	1630226518	7.23027	> A procedure is fundamentally different from a function from a reasoning-about-the-code perspective.They really are not unless the langage puts specific limitations or features on one or the other.An...		masklinn
28365829	11.655211	-7.8343387	comment	3.0	12.0	1630403408	10.172945	I was just recently writing a somewhat complex websocket client API in both Go and Python. They were both a bit tricky, but Go's support for goroutines and channels as the concurrency primitives right...		benhoyt
28375247	12.309287	-7.5868692	comment	3.0	20.0	1630456101	-11.696933	For me, Erlang was the ladder to functional programming. Once I’ve mastered Erlang to be able to write gossiperl (http://gossiperl.com, not maintained in a long time), all immutable programming became...		rad_gruchalski
28411786	11.602742	-7.932155	comment	3.0	13.5	1630725426	10.2174425	This isn't so much undefined behavior as unexpected statefulness, but yeah, it shouldn't have been designed like this.I've had a couple of run-ins with the Golang runtime myself, which were actual bug...		marcan_42
28422476	11.890941	-7.3477054	comment	3.0	14.5	1630830167	7.0347614	"Back in the '90s, ""Object-Oriented"" got redefined in popular imagination to ""good"". If your language or system was good, it was then by definition object-oriented. Anything good had therefore to be ca..."		ncmncm
28474543	11.978621	-7.734075	comment	3.0	10.5	1631220920	10.420615	Two Haskellers enter a bar. Two hours later both leave more confused than when they entered.This is what got me with Haskell. Any question is derailed into theory to the point where getting anything done is difficult.		sjcoles
28476247	11.946642	-7.4578156	comment	3.0	21.0	1631232508	7.2014675	Functional programming is subject to an enormous amount of gatekeeping. Kudos to the author for pushing that gate wide open.		Tade0
28476536	12.021044	-7.8012986	comment	3.0	10.5	1631235055	10.412268	This post is very wrong. Being a monoid in the category of endofunctors means something very different from being a monoid in the normal sense (they're related in a category-theoretic way, but the sim...		lmm
28476639	11.9707365	-7.732313	comment	3.0	11.5	1631236110	10.330005	I don't like creative explanations. Definitions are easier.A functor is a PAIR, please notice the emphasis, of a type constructor F and a map function with the following signature: a -> b -> f a -> f ...		epolanski
28476685	11.969859	-7.6899333	comment	3.0	12.0	1631236556	10.319981	> why a Functor is slightly more than just a MappableExplain that again?		tantalor
28432358	12.03667	-7.7781496	story	3.0	3.0	1630924816	10.4121065	Ask HN: What small tools/utils I can build with Haskell?		shuki
28486208	11.795501	-7.4024515	comment	3.0	10.5	1631303612	-9.099881	In a lot of programming discussions, especially those about Haskell or those about Lisp, types invariably come up as a feature (or a bug). Some even suggest static or dynamic types are most useful at ...		reikonomusha
28515254	11.887551	-7.3367147	comment	3.0	11.0	1631559267	7.2690544	"""Meanwhile there's practically no tradeoff to writing functional code in an imperative language.""I would have to disagree with you there. It partly depends on what you mean, but I quickly give up on f..."		lostcolony
28521021	11.958972	-7.565871	comment	3.0	14.0	1631600904	10.313707	I have my share of gripes about Haskell (which I'm assuming is the language you have in mind when you're talking about a pure FP language), but even with the sarcasm disclaimer, this is a pretty extre...		dwohnitmok
28524473	11.862101	-7.3840785	comment	3.0	10.5	1631626144	7.1892257	> I can refactor without any fear of side effects.Can you? Like say you changed you sum() function to only sum every other element, because for the code you're working on right now that made sense. We...		magicalhippo
28524991	11.637797	-7.945801	comment	3.0	10.5	1631628266	10.227755	The more I've used golang, the more I've had a creeping suspicion that 'the emperor has no clothes'.Go plays at being a system programming language, but it's really not.  It's peers and competitors ar...		wing-_-nuts
28532441	12.01221	-7.7457952	comment	3.0	16.0	1631658888	10.440322	> Thanks for not going full-Haskell on usIt would have been so much better if they went full Haskell. Haskell is better designed as a language, it has types and could support all Nix features without ...		tinco
28535040	12.021591	-7.2073073	comment	3.0	12.0	1631677733	9.200916	This reminds me of something I’d like to see in JavaScript: Loops that accept `await` in their body without pausing the whole loop.This is already possible with:  await Promise.all(arr.map(async item ...		fregante
28549972	11.645869	-7.973846	story	3.0	58.0	1631788031	10.20696	SSC Engine: Golang Front End Components	https://ssceng.codes	yuriizinets
28581304	11.796775	-7.292765	comment	3.0	11.5	1632020138	-6.0987997	There's nothing wrong with mutable objects, in fact I've always preferred them. I hope making everything immutable is a fad that passes.		jimmaswell
28583228	11.859896	-7.4087687	comment	3.0	13.0	1632047921	-8.712304	Currying is nice but in practice it’s rather esoteric in the JavaScript ecosystem. I’ve only seen currying being used (if at all) when transforming data with utility libraries like ramda[1]. What make...		graftak
28584069	11.841383	-7.389564	comment	3.0	12.5	1632057178	-8.706472	> Currying and partial application are really nice when you have a pipeline operatorCurrying != partial application.And while currying is useful in curried languages (to convert back from uncurried to...		masklinn
28584944	11.858746	-7.3977146	comment	3.0	11.0	1632064432	-8.750511	"I'm not sure I fully appreciate the distinction you're trying to make here: ""currying != partial application"". Can you clarify?In particular I don't know what's meant by ""curried"" and ""uncurried"" languages"		brundolf
28603356	11.800478	-7.155966	comment	3.0	11.0	1632216700	-8.97236	"A while ago, PEP 591 [1] made its way into the language. It introduced a ""final"" decorator / type annotation to indicate to mypy that a certain class shouldn't be subclassed, or a certain method shoul..."		_dain_
28610682	12.244618	-7.5378304	comment	3.0	12.0	1632262509	-11.3924	Kotlin/Native is hardly a stable target, given that they botched the implementation by going with an incompatible memory model as Java, and have spent the last year fixing it by rebooting it with a pr...		pjmlp
28619183	12.131524	-7.559589	comment	3.0	26.0	1632331794	-11.039604	Before Swift/Kotlin our iOS team was way more productive than android. Everything was done in half the time.They both switched to new languages.Now it has flipped. Android does things in half the time the other team needs.		rapsey
28636663	11.654059	-7.9087343	comment	3.0	11.0	1632437973	10.194448	This is a little experiment demonstrating the capabilities of the goscript project (https://github.com/oxfeeefeee/goscript) by compiling it to wasm.Here's the source code (https://github.com/zackradis...		zackoverflow
28665819	11.642143	-7.3429947	comment	3.0	14.0	1632701926	-8.7237015	> Stamps are a kind of micro-types that exist just within the compiler. Like all types they represent information about values, but unlike types you’ve usually worked with, stamps can give us a variet...		jhgb
27844390	12.283698	-7.306419	comment	3.0	26.5	1626355678	7.0814714	"Maybe Smalltalk sounds old like COBOL. It's hard to re-kindle interest in old tech in the eyes of new devs. It seems every generation of programmers want to have their ""own"" tools, even if they're worse than the previous ones."		speed_spread
27878518	12.40883	-7.811998	comment	3.0	12.0	1626660236	-11.12507	"I remember running into nil a lot when trying to use Clojure. My immediate sensibility was very ""yuck"". It allows for nice chaining of APIs but it seems to really just mess up the notion of optionalit..."		rtpg
27884392	11.68921	-7.55626	comment	3.0	11.5	1626711879	9.195581	Whats the difference between goroutines and project loom? Is their any?		bestinterest
27885091	11.672522	-7.3612885	comment	3.0	12.0	1626715427	9.138331	I was under the impression that Loom was implementing preemptable lightweight threads. Is that not the case?		brokencode
27901638	11.693572	-7.3580832	comment	3.0	13.0	1626833963	-8.735213	">""The type system is for structuring how your program runs not its logical correctness.""Type-level programming can be a very powerful and useful way to coerce correctness in some scenarios, so I'm really confused by this statement."		im_down_w_otp
27918404	11.618838	-7.971729	comment	3.0	11.5	1626959469	10.220957	One of my minor disappointments with Go, considering the time it came out and the UNIX heritage that it descended from, was that it didn't prioritize the *at() functions. It's difficult, if not virtua...		jerf
27925535	11.768805	-7.5692573	comment	3.0	11.5	1626996287	-1.724348	"Which of ""Rust, Haskell (core Haskell), OCaml, and SML"" is able to parametrize types on values, à la template<auto> ?"		jcelerier
27951227	11.8106985	-7.3166203	comment	3.0	12.0	1627234900	5.3532934	> imperative programming is easy to understand by humansIt's interesting that you choose C as an example because the absolutely immense numbers of bugs and security vulnerabilities directly due to C s...		tikhonj
27963013	11.646291	-7.463523	comment	3.0	20.5	1627323273	9.996204	> What's the point of interface{}, then, if it doesn't tell us anything about the value? Well, that's precisely why it's useful: it can refer to anything!An empty interface should be effectively useless. What could it possibly do!? This pattern is much more like a dynamic container with a type tag.		nixpulvis
27974560	12.09743	-7.8369346	comment	3.0	12.0	1627404378	10.43962	I’ve been working on an OCaml by example page. It’s not really ready for prime time but you can at least learn the basics with it and hell, even contribute if you want :)https://o1-labs.github.io/ocamlbyexample/		baby
27975622	11.990721	-7.735167	comment	3.0	19.0	1627409613	10.400225	> functors, monoids, monads, lazy evaluationThese three things are mostly Haskell-specific though, at least in relation to functional programming.		adamwk
27992913	12.008981	-7.776439	comment	3.0	10.5	1627534714	10.406661	Meh. In C, everything is a pointer, in Haskell everything is a monad.Regarding effects, I found Koka to be a breath of fresh air: https://koka-lang.github.io/koka/doc/book.html#why		zvrba
27998764	11.865347	-7.3695354	comment	3.0	11.5	1627578587	7.049613	> My policy: OOP is like salt. Use little and that's great. I only allow a single inheritance layer, and ideally no inheritance at all.That's been my observation as well - there's no free lunch and DR...		sbacic
27999285	11.678615	-7.051123	comment	3.0	12.5	1627581066	6.827555	Hickey nails this one in his talks. When you make something a class, that's NOT an abstraction, that's a concretion. You make a Tool class, you haven't abstracted what a tool is, you've made a fixed d...		blacktriangle
12033596	11.94713	-7.6811323	comment	3.0	13.5	1467676018	10.375861	People spend time on this because Haskell syntax is deeply unpleasant to a lot of people, including myself. I love the capabilities and expressiveness of Haskell, but I find the syntax annoying, and i...		chadaustin
12041953	11.755981	-7.3385267	comment	3.0	12.5	1467795191	7.192412	1. Yes, and yes!2. No plans for inheritance at the moment, probably some kind of interfaces but that's not a top priority right now. Custom types are limited to structs, I will add union types soon3. ...		eriksvedang
12042389	11.703487	-7.6861277	comment	3.0	17.5	1467804683	10.02446	Another strong point for the JVM is the availability of alternate implementations from several vendors. Is this possible for Go say in the future?		Cyph0n
12043655	11.631258	-7.7922864	comment	3.0	13.0	1467818518	10.119406	One benefit you miss is by using Go in GC all Go tools (fmt, profiler, vet, godoc lints etc) available to writers of GC also which was not possible with C.I think it is similar to Oracle was trying to...		geodel
12032852	11.977492	-7.7254252	story	3.0	52.0	1467664461	10.405514	Haskell ArgumentDo Proposal	https://ghc.haskell.org/trac/ghc/wiki/ArgumentDo	adamnemecek
12052679	11.775115	-7.3361764	comment	3.0	10.5	1467933021	-8.918197	What's so great with dynamic languages that justifies the performance hit? Most statically typed languages have type inferrence, which reduce the syntax to something very close to a dynamic language. ...		cm2187
12053409	11.617791	-7.0972614	comment	3.0	18.5	1467948140	8.539226	Garbage collection.A common pattern in Java based systems is fan-out based processing. One immutable message is created, sent to multiple processors, who then combine signals to make a decision. Track...		yummyfajitas
12055313	11.983967	-7.7422266	comment	3.0	42.5	1467984623	10.385294	A huge problem? Could you give an example of the sort of problem they are causing?Maybe I am out of the loop but from my perspective as a hobby coder FP complete (particularly snoyberg) has done nothi...		tinco
12056556	11.973095	-7.73955	comment	3.0	13.0	1467994268	10.481145	FWIW, I've tried to use stack twice and came back to cabal-install. There's also that I enable split-objects in ~/.cabal/config (not available in Stack) and often use GHC on platforms where there's no...		cm3
12057329	11.953465	-7.638601	comment	3.0	36.0	1467999882	10.420638	"That doesn't address what I said at all.  People were not frustrated with cabal-install, they were frustrated with package installation errors, and blamed cabal-install and ""cabal hell"" (despite the v..."		MustardTiger
12056946	11.924608	-7.6981764	comment	3.0	10.5	1467997112	10.337763	Absolutely blown away by the detail of the documentation. The main logic of this project is in a literate haskell file you can easily read on GitHub.https://github.com/jameysharp/corrode/blob/master/s...		tinco
12058871	11.992894	-7.708397	comment	3.0	13.5	1468014504	10.4283905	No, it isn't.  I don't use HN much, just taking a look at this conversation. I shouldn't even respond to this comment considering its tone.  You should keep in mind that this was in discussion of a ne...		realmgsloan
12059278	11.985197	-7.699111	comment	3.0	25.0	1468020365	10.410945	>The theory that upper bounds should be eliminated - which was, I think, no good - is demonstrably independent of the FPComplete people.No, it is not.  Every FP complete employee does this.  All of th...		MustardTiger
12071168	12.482679	-7.5006166	comment	3.0	13.0	1468246574	12.87796	I think part of it is that it fits well into the microservices paradigm - where there is a separation of work even within the same program.But that said, for where Erlang shines - backends and distrib...		themartorana
12082431	11.802528	-7.190517	comment	3.0	16.0	1468359209	8.673163	For all of Java's pitfalls, this is one of the things it really has going for it. The language itself is extremely simple. I think adding properties instead of the weirdness of getters and setters wou...		jdmichal
12090894	11.685912	-7.8432007	comment	3.0	13.0	1468456471	10.225722	If you've a python programmer, you're used to high-level, succinct code. If you want a typed language of this kind, try Haskell, or Kotlin, or maybe Rust, or Nim, or even (gasp) java 8.Compared to Python, Go severely lacks expressive power.		nine_k
12093137	11.732236	-7.346639	comment	3.0	12.0	1468499149	-8.807979	Type based programming does not quite work in weakly typed languages.		cema
12093587	11.690593	-7.308373	comment	3.0	10.5	1468503309	-8.79504	- What tools do they use for error checking/linting?- Well... why C？　If　ｃｏｒｒｅｃｔｎｅｓｓ　ｉｓ　ｓｏ　ｉｍｐｏｒｔａｎｔ．．．　ｓｕｒｅｌｙ　ｔｈｅｒｅ　ａｒｅ　ｂｅｔｔｅｒ　ｌａｎｇｕａｇｅｓ　ｔｈａｎ　Ｃ －　not only better type systems, but also theorem proving...		optforfon
12093058	11.766506	-7.3343425	comment	3.0	11.0	1468498183	-8.900514	"It's not ""disregarded"", it's eclipsed by a need to ship often and ship a lot. There is a tendency to overstate amount of problems that come from bugs because they are painful to debug. Therefore, some..."		lambdadmitry
12096761	12.135307	-7.5798435	comment	3.0	13.0	1468526275	11.894471	"I wrote some Scala just today:  val list = a +: l :+ b

And I knew I had to put in a comment because that stuff always makes my eyes cross over when I come back to it."		rvense
12096834	12.097922	-7.704412	comment	3.0	12.0	1468527121	10.376336	"The only objection to OCaml is ""the crufty syntax,"" which I think F# has taken steps to improve upon."		cwyers
12109650	11.812003	-7.5753546	comment	3.0	12.5	1468750979	10.3784075	Swift is not unique in using constraint solving to provide bidirectional type inference. Scala and Haskell provide the same level of flexibility; although not with the same compile-time problems. In t...		solidsnack9000
12117298	11.973118	-7.698156	comment	3.0	11.0	1468868138	10.413241	Maybe this is heretical among Haskell lovers, but my personal, rather undeveloped, feeling is that Haskell syntax is too complicated for macros. Sure, Haskell code feels natural to read, but in fact t...		kccqzy
12118564	12.04631	-7.207853	comment	3.0	10.5	1468884080	9.157674	It is not possible to fulfill promise more than once.Thus promisifying of window.setInterval() and window.requestAnimationFrame() is very questionable.The same applies to possibly repeatable .onXXXX()...		c-smile
12135639	11.717777	-7.82542	comment	3.0	18.0	1469091889	10.155997	> If I would have built GoSnaps with a slower programming language or with a big framework, I would have required more servers. If I would have used something like PHP with Symfony, or Python with Dja...		0xmohit
12153843	12.062486	-7.2285156	comment	3.0	14.0	1469380363	7.1187716	JavaScript lends itself really well to functional programming, no?		Waterluvian
12154762	11.92606	-7.4144497	comment	3.0	14.5	1469392559	7.2020864	You're making a false equivalence. Functional programming has a strong basis in discrete mathematics that OOP simply does not. This makes it better suited to accurately describing computation at a hig...		jolux
12155079	11.93976	-7.4674487	comment	3.0	20.0	1469397072	7.2945395	The real disadvantage of pure functional programming is that it is notoriously difficult to use and thus only very few programs outside specialized domains are written in them.For example I would gues...		lispm
12155136	12.20836	-7.638594	comment	3.0	11.0	1469398248	11.918614	I work in a group of teams that is mostly new college grads and nobody has trouble writing pure FP business logic in Scala. We don't go as far as doing pure FP for all effects though (although we are starting to do that more as well)If we can do it, so can everyone else ;)		whateveracct
12155618	11.954978	-7.693336	comment	3.0	11.0	1469404831	10.413596	Haskell has this through hoogle.http://www.haskell.org/hoogle		efnx
12156486	12.280562	-7.3077602	comment	3.0	22.5	1469421184	7.119618	That you're so unwilling to leave your text editor makes you unsuitable for Smalltalk, because Smalltalk without its image and IDE stuffed into text files that work with all your normal tools isn't Sm...		gnaritas
12157693	12.307658	-7.2986803	comment	3.0	17.0	1469442585	7.0586653	> Someone who wants to learn Smalltalk should try Pharo or Squeak, not GNU, GNU will just leave them with a bad taste of weirdness for no good reason.As someone who has tried Pharo and Squeak, I was l...		groovy2shoes
12167644	11.657656	-7.189234	comment	3.0	13.0	1469556895	-8.903614	"This is not only missing the point, it's easy to prove false:Python: `foo = '1' + 1` gives `TypeError: Can't convert 'int' object to str implicitly`C: `char bar[] = ""1""; char* foo = bar + 1;` gives li..."		devishard
12183362	11.922783	-7.449253	comment	3.0	12.5	1469741741	7.2534223	You're missing the point.The author used that example to demonstrate that just using FP languages is not enough to ensure good code, because it is possible to write bad code in FP languages.Therefore,...		twblalock
12202044	12.0024185	-7.4752603	comment	3.0	11.0	1470056849	7.219578	"It's still work in progress. Only a few articles for the moment.
I would be happy to hear your thoughts about the best way to teach functional programming to kids."		viebel
12210334	12.008	-7.7466316	comment	3.0	12.5	1470149338	-0.49705014	Yeah, I’ve read/reviewed most of them. I could give long opinions on each, but overall I would say that I wanted an easy way to get into the language by building instead of endlessly going over all of...		xwowsersx
12210225	12.014552	-7.7653174	comment	3.0	15.5	1470148414	10.436209	Awesome, thanks for sharing!Here are some other resources to learn Haskell:1. Learn You a Haskell for Great Good - http://learnyouahaskell.com/ - can read the text for free online2. UVa Student Taught...		dpflan
12209631	11.843225	-7.4554567	comment	3.0	13.0	1470143338	-10.161479	Sometimes I like to have a fully statically typechecked program. You can do that in Lisp, its easier in Go. Also, it directly produces statically linked executables. You can do a lot of this in SBCL, ...		_ph_
12211456	12.0027	-7.7588706	comment	3.0	10.5	1470158159	10.420893	Coming from an SML background, one of the things that's always tripped me up about Haskell is that it doesn't have structures, signatures, and functors for grouping code. Instead it has modules, which...		z1mm32m4n
12211461	11.646612	-7.3483033	comment	3.0	10.5	1470158200	-8.727018	The reason typing is not a solved problem is this:  there are valid programs which can be expressed in an untyped language that cannot be (directly) expressed in a typed one at the moment.  For exampl...		groovy2shoes
12147918	11.646031	-7.2495685	story	3.0	42.0	1469237167	8.735993	Immutable-cpp: persistent immutable data structures for C++	https://github.com/rsms/immutable-cpp	jiyinyiyong
12181153	12.4511	-7.5207644	story	3.0	81.0	1469722443	12.900098	Preemptive Scheduling of Erlang NIFs	http://hansihe.com/erlang/elixir/c/2016/07/26/erlang-nif-preemptive-scheduling.html	hansihe
12231526	12.363922	-7.290291	comment	3.0	10.5	1470398115	7.0640516	I haven't done anything with Smalltalk, so I can't comment on it. However, learning Lisp (using SICP) and Prolog are both good choices. SICP uses Scheme. It'll teach you how simple concepts can be com...		bpyne
12240784	11.926628	-7.690973	comment	3.0	18.5	1470536716	10.397239	Let's take a basic one: Haskellers would tell you with a straight face that `Either a b` is really the coproduct of `a` and `b`. It's not.If you bring up bottom, they'll tell you “oh, let's just ignor...		catnaroek
12242718	11.907388	-7.653343	comment	3.0	12.0	1470590283	10.377507	"Your ""easy"" thunked laziness is horrendous. Not only is it unusably verbose, but it relies on mutable reference updates. Doing this properly is a non-trivial problem that really requires language supp..."		wyager
12246739	11.918511	-7.4383454	comment	3.0	12.5	1470653749	7.225986	How does functional programming lead to generally fewer objects allocated? I would guess that it leads to more, because functional data structures require allocation to make changes where imperative p...		chrisseaton
12248398	12.168119	-7.5142436	comment	3.0	10.5	1470669350	-10.577941	Jet.com is a big user of the F# language. Will be interesting if they get Walmart on board too.		jackmott
12253534	11.844513	-7.3547654	comment	3.0	14.0	1470736730	7.00086	Liskov Substitution: An object can be replaced by supertype without breaking the programShouldn't that be subtype?  Or am I misremembering this?		mehwoot
12257118	11.896674	-7.0971627	comment	3.0	19.0	1470770653	-10.708623	Don't gain enough? Static type checking and asyncio? Sign me up!		StavrosK
12258100	11.611691	-7.0608306	comment	3.0	12.0	1470780986	-7.2485995	In that respect, don't list comprehensions fall under the same category of multiple ways to do something?  They didn't exist in the language until 2.0[1], and it's just a convenient way to encode a co...		kbenson
12263031	12.1661	-7.609471	comment	3.0	15.0	1470847133	11.905447	3 things I don't like about Scala:1. It's based on the Java platform.2. It's excessive use of operator overloading.3. Mad implicit conversions all over the place.(yes, I exaggrated a bit ;))		k__
12264867	12.245622	-7.6398177	comment	3.0	14.0	1470864523	11.936765	The huge difference is that Scala.js is production-ready, the other ones mentioned aren't.		premium-concern
12267028	11.818428	-7.16116	comment	3.0	15.0	1470908415	-9.00957	Yeah, it seems it's time to abandon Python since the static typing fundamentalists seem to be getting hold of itExtremely frustrated by this decision and even though the multiple denials that it won't become a statically typed language it's clear that idea has changed		raverbashing
12271748	11.592383	-7.8867497	comment	3.0	13.5	1470951506	10.143613	> Well, one advantage the Go runtime has is the green threads are cooperatively scheduled, so switches are a lot more lightweight.Switches occur on timeouts (which involve a round trip through the ker...		pcwalton
12288925	11.99774	-7.7628655	comment	3.0	11.5	1471240909	10.397849	The article is about things that impact professionals (thought they also beginners). For better or worse, experienced Haskell users can read the one liners just fine.		Ericson2314
12289370	12.102574	-7.5480275	comment	3.0	13.0	1471252488	-10.522738	"PureScript is a language that compiles to JS which is heavily inspired by Haskell, yet fixes some of it's ""flaws"".Namely it (1) has better record syntax, (2) is employs strict-evaluation instead of la..."		cies
12298494	11.694823	-7.4186893	comment	3.0	13.5	1471364671	-6.599851	It seems like due to lack of generics I see more and more interface{} and reflection stuff in code bases. This is getting ridiculous.I've written a lot of Go. Tried my best to stick to what language p...		eknkc
12221893	11.874291	-7.2718635	story	3.0	3.0	1470261525	-15.477311	Goodbye, Object Oriented Programming	https://medium.com/@cscalfani/goodbye-object-oriented-programming-a59cda4c0e53#.di9hlchju	jayrye
12248040	11.704427	-7.039885	story	3.0	45.0	1470666688	6.178072	Apocalypse 5: Pattern Matching (2006)	http://perl6.org/archive/doc/design/apo/A05.html	_acme
12250936	11.700354	-7.488082	story	3.0	17.0	1470691058	9.713383	Intersection Types: Java Generics’ most underused feature	http://iteratrlearning.com/java/generics/2016/05/12/intersection-types-java-generics.html	DrLegend
12298957	11.643156	-7.9676957	comment	3.0	13.0	1471368095	10.2115	A language's core syntax should not privilege its standard library above other libraries.I'm not so sure. Smalltalk had this in spades. There is a downside to this. Giving a bunch of 20-somethings the...		stcredzero
12324613	11.6369915	-7.111543	comment	3.0	16.5	1471656581	8.936019	> In Python's case, I'd advocate to just get rid of tuples and be done with it.That would be a bad idea for at least two reasons: sometimes you want containers to be immutable, and mutable containers can't be used as dictionary keys.		pdonis
12324998	11.718934	-7.2919827	comment	3.0	22.0	1471663246	-6.1650486	"""here's no reason that ""cultural"" lists need be mutable, or ""cultural"" tuples need be immutable.""er, yes there is.  if a list is not mutable, doing list.append(something) in a loop would re-initialize..."		autokad
12331411	11.601077	-7.9113145	comment	3.0	13.5	1471796177	10.147375	Go (the language) have at least two implementations: the official Go implementation and GCC (yes, Go is included in GCC, along with Fortran and Ada).The latest Go implementation (Go 1.7) has made Go a...		xyproto
12331938	11.654148	-7.967904	comment	3.0	11.5	1471802579	10.241986	seems to be the canonical view among gophers that Go's paucity of features is about accessibility for programmers that don't understand them or find them cumbersome to work withPlease keep in mind tha...		stcredzero
12332001	12.0331545	-7.6390452	comment	3.0	19.0	1471803405	12.82718	Does anyone have a short, paragraph or two summary of why you might choose Pony over Erlang/Elixir or Akka with Java or C#?		cwyers
12341782	11.936056	-7.0440526	comment	3.0	11.0	1471933343	9.072278	That's besides the point.The things that are synchronous within the processor are also synchronous in Javscript.What is async in JS and Node (unless you use the sync alternatives) is any kind of IO (d...		the_duke
12342704	11.772598	-7.4444194	comment	3.0	20.0	1471949709	6.6456637	"In Go you might have an interface Rectangle"":    type Rectangle interface {
        SetHeight(int)
        SetWidth(int)
        GetHeight() int
        GetWidth() int
    }

Then you could conceivabl..."		adamlett
12353103	11.825197	-7.4640474	comment	3.0	19.5	1472055496	-8.7068815	(Static) types may be seen as propositions, but this is just one interpretation of them. We can also interpret types as sets (although this doesn't work out very well except in very simple languages),...		rntz
12352811	11.736594	-7.3678384	comment	3.0	15.0	1472053264	-8.70263	> While such distinctions are certainly useful, an introductory/broad-overview explanation like this seems to benefit without such complications/distractions.I don't think misrepresenting types is the...		naasking
12356782	11.798503	-7.2102733	comment	3.0	10.5	1472095006	8.082308	Since we're all chipping in with features we'd like to see in C#, here are mine: anonymous classes - with actual class bodies, that can implement interfaces - and traits.		rmsaksida
12369717	12.218054	-7.6647797	comment	3.0	12.5	1472250200	11.919826	This isn't as bad as it looks. Think of it like an additional experimental scalac that is more ready to integrate into mainline scala than Dotty is.I'm fully on board with you...I think Scalaz as a li...		saosebastiao
12371152	11.653154	-7.969537	comment	3.0	15.5	1472275879	10.208903	Much more interesting (first language spec commit): https://github.com/golang/go/commit/18c5b488a3b2e218c0e0cf2a...		dantaylor08
12379396	11.781745	-7.608329	comment	3.0	16.5	1472433246	-7.1918716	And what's OCaml written in? How about the assembler?If you really want to replace C, You'll need to be able to compile the language without ever having C on your system (at least, in theory). This is almost impossible, although you can do it, if you slowly work towards it.		qwertyuiop924
12307346	12.303556	-7.3263135	story	3.0	2.0	1471460273	7.078087	Smalltalk ruined my life	https://medium.com/p/smalltalk-ruined-my-life-aaf2190f6f16	horrido
12397673	12.408796	-7.5076632	comment	3.0	12.0	1472645704	12.888318	What I found interesting (or very, very boring, depending on how you think about it) about this when I first saw it is that this ability is just due to the nature of how receive works. That is, you ca...		lostcolony
12425267	11.858844	-7.869512	comment	3.0	19.5	1473007152	10.361015	"If you're looking for exhausting your CPU cores, you can do it with Python as well, by using multiple processes, like when using ""multiprocessing"". What Python and (currently) Ocaml won't do is being ..."		bad_user
12451458	11.722139	-7.143074	comment	3.0	13.0	1473326441	-8.685417	Coming from statically typed languages, I've really struggled with the Python docs, because they aren't really clear with what is returned from a lot of functions, and which arguments are allowed. I e...		snovv_crash
12461113	11.645862	-7.032165	comment	3.0	10.5	1473420139	9.001	"    dict_keys(['c', 'd', 'e', 'b', 'a'])   # random order

> randomMaybe I'm nit picky but I find the misuse of that word annoying.
My experience of CPython is that dicts are unordered but deterministic. Not random."		Pirate-of-SV
12461705	11.602129	-7.021964	comment	3.0	11.5	1473425944	-7.781138	"Here is a fun little thing I didn't realize before running into it:    OrderedDict(a=1, b=2).keys()

Is not guaranteed to return ['a', 'b'].Of course this makes sense, but is annoying nonetheless."		IgorPartola
12394706	11.987236	-7.753901	story	3.0	1.0	1472598655	10.426799	Just Finished Lear You a Haskell for Great Good. What Now?		Tzedek
12430318	11.985462	-7.735193	story	3.0	15.0	1473083763	10.449491	Ask HN: Haskell ARM Continuous Integration Service		Immortalin
12451697	11.980606	-7.486089	story	3.0	5.0	1473329924	7.2820816	Ask HN: Clojure vs. Haskell?		colobas
12469900	12.006575	-7.756065	comment	3.0	14.5	1473525145	10.424809	A few incorrect points during the discussion as well as poorly approached. The only thing beneficial that I see from it is people trying to better their skills and Haskell gaining traction.I personall...		nitrix
12470467	11.856231	-7.3741555	comment	3.0	10.5	1473534168	-10.56925	"If I understand what you mean by ""immutable by default"", then it's all Scheme implementations, and probably all Lisp as well."		35bge57dtjku
12470849	12.476469	-7.0554776	comment	3.0	13.5	1473541043	12.3954935	Tcl is a better lisp than Ruby. Homoiconic. Yield and tailcall make it easy to implement FP idioms. Macros available if needed.		kevin_thibedeau
12508758	11.921533	-7.4093347	comment	3.0	14.0	1473965656	10.117111	> Is Java that much of a major player on the backend? I didn't think so; especially for new startups.... Yes? Clojure and Scala are quite popular and normal. Java itself is still extremely common. Eve...		KirinDave
12514275	11.798727	-7.373697	comment	3.0	10.5	1474036541	-8.880612	Interestingly, most of these advantages are not specific to static typing, but derive from having a language that talks about types – even a dynamic one. For example, most of these advantages apply to...		StefanKarpinski
12863569	12.239163	-7.627719	comment	3.0	16.0	1478178140	-11.393466	This is the version of Scala that breaks compatibility with Java 6 in the generated bytecode, by making use of Java 8's features, like invokedynamic, default interface methods and integration with SAM...		bad_user
12877126	11.905821	-7.598207	comment	3.0	11.5	1478302540	10.523719	Just finishing OCaml course at Paris Diderotwww.fun-mooc.fr/login?next=/courses/parisdiderot/56002S02Really cool language and opened my eyes on how some constructs are being used.Multicore is definitely must for functional languages.(sorry random thought)		desireco42
12890300	12.3286295	-7.039425	comment	3.0	16.5	1478518309	13.173863	Because we aim for organic growth: not too fast and not too slow. Based on stats, our userbase doubled since last year; and that's with an yet-to-be-optimized compiler that's an order of magnitude slo...		zoffix222
12920881	11.659064	-7.97394	comment	3.0	22.0	1478790095	10.224793	Go isn't a perfect language, but it strikes the right balance for me between productivity and safety. There are few other languages right now with the same ease of deployment, good tooling, excellent standard lib, and raw performance. Here's to another seven years.		be_erik
12922584	11.6187935	-7.2373824	comment	3.0	19.0	1478800524	9.254994	Efficient concurrent programming. I'm not aware of any cross-platform C/C++ or Python libraries that give you async I/O + multi-threaded coroutines. Such a library exists for the Java ecosystem (quasa...		weberc2
12923676	11.61939	-7.935032	comment	3.0	14.5	1478807776	10.212814	> If you're such a poor programmer,No need for personal attacks.> then just find a different language.What a warm an welcoming community the Go community is /sC++ doesn't have reflection, because it d...		aikah
12972318	11.819135	-7.2818427	comment	3.0	11.5	1479336424	9.829531	Throw expressions are particularly welcome.  I'd previously dealt with that issue by creating a static method that returned the expected type, but just threw an exception [1][2]I'm not sure it's expli...		louthy
12975098	11.628899	-7.945964	comment	3.0	14.5	1479366676	10.165699	"I'm surprised that people haven't commented on the implicit story here: the intention to deliver the ""Shiny"" cross-platform graphical toolkit for Go. If that happens, Go becomes one of the very few programming languages with a default cross-platform UI library."		sjellis
12993274	11.640177	-7.731692	comment	3.0	10.5	1479560186	-10.588196	I'm not a node expert, but here is what seems like the crux of the problem:> Consequently, when any request timeouts happened, the event and its associated callback was put on an already overloaded me...		skizm
12999484	11.955959	-7.361434	comment	3.0	11.5	1479658047	7.0937552	To the contrary, Scheme's prefix notation reads quite well, particularly if you use indentation well. But that's just my opinion.Several of the statements in this article about Scheme are, however, ob...		qwertyuiop924
13007289	11.927073	-7.4532614	comment	3.0	13.5	1479750360	7.322654	I think if the second one is easier, you've more or less been taught to think like a microprocessor. That happens to most of us after a few years of writing imperative code. The more abstract function...		svachalek
13013849	12.000568	-7.7669096	comment	3.0	10.5	1479820420	10.437185	> If enough FUD is spread about Haskell, for example it being a failure at CS, then it becomes difficult to convince management.Haskell is not yet at an adoption level where anything said about it wou...		pron
13036180	12.016012	-7.790742	comment	3.0	12.0	1480076221	10.430276	Monads are the way to hide the fact that state change. Basically they allow you to abstract away the concept of time.Alan Kay seems to push more in the direction of data as CRDTs or fully vector clock...		di4na
13051080	11.7113905	-7.5292253	comment	3.0	10.5	1480276554	9.8348255	To be fair, there's absolutely nothing wrong with type erasure, except when you allow runtime reflection.If there is no reflection, then it shouldn't be possible to observe whether or not type erasure is done.		wtetzner
13054030	12.465792	-7.461531	comment	3.0	12.5	1480319370	12.91111	Is anyone aware of a supervisor system like otp supervisors that manage unix processes? I'm trying to throw together a collection of small services on a server in a reliable way, and there doesn't seem to be anything that does this on the OS level.		andrewchambers
13073111	11.718961	-7.420815	comment	3.0	11.0	1480529615	-8.712428	"As far as I'm aware, LiquidTypes focus on very simple use cases, like length-indexed Vector types and such.I don't think it can manage ""full"" dependent types, for example situations I often find mysel..."		chriswarbo
13092037	11.631216	-7.9764113	comment	3.0	11.5	1480710758	10.214913	">  an automated way to apply the refactoring steps could make refactoring a breezeIt is called alias, a feature that should have been there a long time ago but ""thanks"" to a minority of gophers it's s..."		aikah
13093291	11.673959	-7.9511657	comment	3.0	14.0	1480722557	10.228586	I think the proposed alias has true merit in Go as has been shown by Russ Cox and in other places. What I'm a bit confused about is why it's sold as a transitionary tool but implemented as a feature.I...		blixt
13106038	11.961679	-7.7721076	comment	3.0	10.5	1480952293	10.388664	so can we reasonably surmise that Ocaml outperforms Haskell massively on GC pauses? What's the catch, if any?		vegabook
13105085	11.893288	-7.669366	comment	3.0	10.5	1480943319	-11.047233	"I don't know Haskell but it sure has some odd syntax:    type Chan = Map.Map Int ByteString.ByteString

is odd looking. Why the duplication?"		coldcode
13049843	11.633575	-7.2107444	story	3.0	144.0	1480263175	8.755521	Immer: immutable and persistent data structures for C++	https://github.com/arximboldi/immer	ingve
13123928	11.995916	-7.0188947	comment	3.0	13.0	1481129441	8.193664	You're being downvoted, but really, the only saving grace in Java is the occasionally useful tooling that can't be used in the other two actually good JVM languages: Kotlin and Scala.And right now the only one I can think of is j2objc. Java should absolutely die.		mixedCase
13125031	11.851634	-7.6561723	comment	3.0	27.0	1481136434	10.1498375	Leave it to a Haskell coder to make an incomprehensible mess of matrices under addition.		ajamesm
13125660	11.621719	-7.356343	comment	3.0	15.5	1481140581	9.288375	"Consistency of inconsistency would be nice. For example, I don't see why Set ""values"" should ever be exposed anywhere, since the semantics of the collection type don't include them. Seems like a great big gotcha waiting to happen."		throwanem
13143233	11.91107	-7.6979084	comment	3.0	15.5	1481330821	10.36587	> Why would I want implicit laziness everywhere?For the same reason you want automatic memory management: so you can fob off the job of figuring out where the thunks should go onto the compiler, just ...		lisper
13184808	11.644245	-7.9315596	comment	3.0	17.5	1481812769	10.199366	How does this compare to what everyone with Emacs gets? In particular:* goimports integration? I would have a hard time going back to writing Go code without goimports* on-the-fly code checking (like ...		tptacek
13184818	11.641439	-7.8912253	comment	3.0	11.0	1481812884	-10.439835	"Wow, I did not expect that.
I'm currently using VS Code for Go and I'm pretty happy with it. Definitively gonna try this out because I'm pretty much using JetBrains for everything else and never got disappointed by them yet."		AtroxDev
13184873	11.645031	-7.8738217	comment	3.0	11.0	1481813190	-10.415948	So basically just the existing Go plugin (give or take a feature or two) shoved into a standalone editor which, knowing Jetbrains, is sure to be flust with new bugs for the foreseeable future..Not to sound negative or anything.		Dinius
13154106	11.647393	-7.9690166	story	3.0	129.0	1481498568	10.222224	Some Tools for Go Lang That You Might Not Know Yet	https://blog.gopheracademy.com/advent-2016/some-tools-for-go-that-you-might-not-know-yet/	type0
13209635	11.593315	-7.7764306	comment	3.0	15.5	1482125071	10.177004	Last year's discussion for those interested: https://news.ycombinator.com/item?id=10014178This language definitely deserves your attention. It's fast, it's easy on the eyes, and it produces native code. A real workhorse language.Want Go's speed but hate Go's if err nil verbosity? Check out Crystal.		sergiotapia
13211010	12.0468235	-7.210812	comment	3.0	16.5	1482151090	9.169347	"For anyone else left clueless by title: a proposed new feature for JavaScript, as in ECMA TC39, was ""cancellable promises"", trying to handle ""cancellation"" of async actions (""promises"") by extending n..."		semi-extrinsic
13211425	11.809095	-7.3099546	comment	3.0	17.5	1482156574	5.1223106	"Also closer to how most of us learn and are taught.Consider, I often tell my kids that they need a cup if they want water.  I just as often have to change that to ""go get a cup, and I'll get you water..."		taeric
13211931	11.615319	-7.037786	comment	3.0	13.0	1482161032	7.0301385	There is no future in a strict adherence to one programming paradigm.  Any sufficiently large program will have parts that are expressed best in different paradigms.  One part of a program wants to be...		davexunit
13213307	11.891337	-7.352898	comment	3.0	11.0	1482169728	7.0607243	I disagree.Of course we need general-purpose, extensible languages. We also need motherhood and apple pie. But multi-paradigm languages are usually mistakes. They aim to give you the best of multiple ...		PaulAJ
13248120	11.654609	-7.910895	comment	3.0	10.5	1482542438	10.179385	Note, that this is not how anyone should actually write web applications in Go. Standard library doesn't have production ready defaults, in some cases even lacks options for that, and generally offers...		zzzcpan
13252135	11.841759	-7.5493097	comment	3.0	11.5	1482623220	10.222592	A fun riff on QuickCheck is QuickSpec[1], a tool that automatically generates laws (invariants) for an API and tests them with QuickCheck. The example in the documentation is pretty good:Given reverse...		tikhonj
13252601	11.607972	-7.943434	comment	3.0	15.0	1482633508	10.213099	"My ""aha"" moment when trying to understand channels in Go was when I realized that everything about how this feature is designed comes from their answer to the question ""how could we 'fix' select() in ..."		_vya7
13253027	11.7214775	-7.2729244	comment	3.0	18.0	1482642482	-8.846428	And it's likely the static vs dynamic programming debate has been around longer than you coding ;).		wasd
13256761	11.976159	-7.722991	comment	3.0	31.5	1482722686	10.437554	"The Haskell community identifies ""no documentation"" as a key flaw of their own community?  I was going to ask why there hasn't been more uptake of Haskell for all of the apparently cool ideas that are there, but nevermind, I don't think I need to ask now."		moxious
13256899	11.992236	-7.711568	comment	3.0	11.0	1482725884	10.398493	"I like the article as a roundup of some ways in which programming is usually done in a non-pure way. However, this early quote is an example of why I disagree with the article:""The slightest implicit ..."		Smaug123
13256847	11.958938	-7.681141	comment	3.0	13.5	1482724510	10.428552	So the first example, in C#,(1) uses logging in the middle of an otherwise pure function,(2) is criticized for the unpredictability of a bounded/well-defined instance of laziness, namely iteration.The...		comex
13273012	11.663246	-7.2730227	comment	3.0	12.0	1482953750	-7.859432	"Fortunately, that mistake isn't possible in Java with lambda expressions or anonymous classes. It is a compile error if any captured variables are not ""effectively final"".Prior to Java 8, which introd..."		electrum
13274395	11.648037	-7.9711137	comment	3.0	55.0	1482965857	10.22521	At Google, if you want to implement new features (or large refactoring), you'll need to write a design doc. In which, you should answer questions your reviewers might ask (common questions like: why d...		yegle
13275845	11.914082	-7.6389303	comment	3.0	12.5	1482990299	10.38146	> this study was a victory for higher order functions and ADTs with pattern matching.So, the bread and butter of Haskell?There are few languages that do these two things nearly as well as Haskell. All...		wyager
13277895	11.607362	-7.9512196	comment	3.0	12.0	1483026556	10.232881	"""There are talks from Google who invested heavily into modules using clang and got gains, but as far as I understand they fixed those issues only for themselves""I thought Google fixed the C++ compile time problem by inventing Go?"		jimbokun
13283460	11.826745	-7.3856397	comment	3.0	12.5	1483090057	7.08228	If you want to create a bar food (Finger Food object, not Cocktail), which also could use a garnish() method, which inherits from which? Or should both objects have a father, Garnishable object to inherit from? It's clear to me that object composition is less flexible than functional composition.		sooheon
13283135	11.606757	-7.964267	comment	3.0	18.5	1483083334	10.24075	There is no need to demonstrate anything.Go is a good enough replacement for C, for user space applications.With some improvements, even for more lower level tasks.As for the flaws, anyone that had the pleasure to work with the Algol and Wirth family of languages is well aware of them.		pjmlp
13284256	11.613953	-7.910657	comment	3.0	11.0	1483104843	10.2173	This sentiment is actually very interesting to me. I had (/have?) the same kind of sentiment toward Go, but when I spent time playing with it recently I realized just how close to C it actually is. En...		FreezerburnV
13212055	11.652394	-7.9694786	story	3.0	2.0	1482162135	10.087381	Ask HN: Is it amoral to start charging for PDF of a previously free tutorial?		thewhitetulip
13310788	12.33257	-7.036415	comment	3.0	10.5	1483464012	13.184221	Perl 5, of course!It's an awesome language and both the language and the ecosystem is getting better and better all the time		mfontani
13308913	12.129584	-7.864858	comment	3.0	11.0	1483449983	-3.2049499	Yeah, I also have a mathematics degree and don't really get the fascination that computer people have with category theory. I have never been particularly impressed with their claims of applicability....		jordigh
13320453	11.675627	-7.899023	comment	3.0	12.0	1483552647	10.221056	For those who are interested, I've used grumpy to compile the following Python code and placed it at https://play.golang.org/p/YP1SP7WsdR . (Note the playground can't run this, it just had convenient ...		jerf
13358276	11.671456	-7.9465184	comment	3.0	14.5	1483985103	10.217895	>Only everybody who asks for generics knows that, and still wants them to go through and pay the price.And those people are outnumbered by people who are comfortable and productive with the current Go...		dmit
13304227	12.302073	-7.4730964	story	3.0	27.0	1483389133	12.800569	Implementing the Pipes and Filters Pattern Using Actors in Akka for Java	http://iteratrlearning.com/java/2016/12/26/pipes-and-filters-actors-akka-java.html	DrLegend
13429901	12.012452	-7.7844033	comment	3.0	10.5	1484770635	10.369335	> The entire point is to demarcate what functions interact with the world and which don't. This makes testing easier, reading code easier, composition easier.This is 1. a tradeoff , 2. subjective. Wor...		allover
13448608	11.685363	-7.45983	comment	3.0	10.5	1484969863	-9.032173	There have been some advances in language theory since Lisp, though.In particular, modern type inference allows you to practically eliminate type declarations and approximate the terseness and express...		lobster_johnson
13451688	11.802271	-7.879182	comment	3.0	16.5	1485027714	10.315813	I completely agree with the heart of this article, and its reasoning for Go's popularity (e.g. familiarity for people who know languages like C and Java).  It speaks to my experiences, anyway.I went d...		innocentoldguy
13451764	11.650896	-7.977477	comment	3.0	14.5	1485028766	10.207686	I like Go specifically because it is boring. I really enjoy the simplicity of it, which makes it easy to read and understand the core packages. I feel like the language doesn't try to do too much and ...		spudlyo
13452109	11.939773	-7.731045	comment	3.0	13.0	1485032177	10.300228	Mathematical functions are taught in school. That function composition is associative and every set has an identity function, this is stuff that every high school graduate should know.---Reply to mont...		catnaroek
13475235	12.340308	-7.5038114	comment	3.0	11.0	1485290264	12.872402	Do you realize how silly this sounds?  You are disregarding not only Erlang, but decades of research and development on concurrent programming best practices.  Immutability has been promoted for paral...		gamache
13476851	12.453995	-7.509001	comment	3.0	11.5	1485300850	12.903868	>only if your program is embarrassingly parallel is irrelevant, because a almost every program is embarrassingly parallel in Erlang. The language is built around concurrency to the point that parts wh...		BeetleB
13477984	12.239074	-7.557175	comment	3.0	17.5	1485312097	-11.403466	Kotlin is one fine piece of engineering. It's only too unfortunate that the same Achilles' heel is holding it back as Scala: there is only so much you can do while remaining compatible with JVM and th...		kirillkh
13480349	12.195431	-7.5356507	comment	3.0	16.5	1485341504	11.921778	Python's semantics are unlikely to ever be fast and most Python users have already worked around its speed issues.asyncio is new; python3 porting is happening. It seems unfair to complain that no real...		lmm
13479540	12.239515	-7.6390457	comment	3.0	10.5	1485330288	11.950956	[Scala team lead at Lightbend here]I'm always eager to learn how we can improve Scala, especially as we kick of the Scala 2.13 cycle (hard at work on compiler performance and standard library improvem...		adriaanm
13480371	11.694383	-7.4686046	comment	3.0	11.0	1485341846	9.637527	"Lucky bunch indeed. I'm 9 months in and still missing map(), flatMap(), let alone more advanced FP.
I guess this is a matter of personal preference, but I definitely consider:  users.filter(_.active)...."		unscaled
13480375	12.232918	-7.5074563	comment	3.0	17.0	1485341913	-11.380624	"> I feel kotlin is a bit undervalue. It is a great modern language which can replace java completely.It doesn't offer a compelling advantage. ""Slightly cleaned-up Java with a bit of syntax sugar"" is n..."		lmm
13498152	12.117187	-7.6775675	comment	3.0	17.0	1485498677	12.864633	I think it's comparing apples with oranges. They are two different species a compiled vs VM based language, one is a functional styled vs other has duck-tapping. Only thing I can see common is GC and ...		maxpert
13534106	12.014853	-7.76565	comment	3.0	12.5	1485889891	10.4664955	Yes. In fact, the original compiler was written in OCaml. I would say the original intent was to be a lower level OCaml with optional safe control over allocation behavior and safe parallelism.I think...		darksaints
13544926	12.118344	-7.505623	comment	3.0	10.5	1485981823	-10.616133	"  > We will enable and encourage strong community participation in F# by continuing
  > to build the necessary infrastructure and tooling to complement community
  > contributions. We will make F# the..."		dbrigg
13548494	11.632016	-7.6465178	comment	3.0	11.5	1486015734	10.064337	That's not it. A fairly small http server in go will run in tens of megabytes. The same thing on the JVM requires a couple hundred megabytes at best. The difference in startup time is roughly the same as well.		jshen
13551873	12.155354	-7.3392715	comment	3.0	17.5	1486053633	12.66016	"We should be really skeptical of (or perhaps we could charitably say, ""We should contextualize these,"") speed claims. Akka does well in benchmarks too, until you put significant memory pressure on the..."		KirinDave
13552953	11.66681	-7.8847485	comment	3.0	11.0	1486059504	10.213598	> To be clear, it isn't that I find the code difficult to grok: if you don't understand how switch works, please stop using C.Oh please. C is perfectly usable without knowing switch is actually a bunc...		yokohummer7
13558815	11.934675	-7.171453	comment	3.0	20.0	1486115889	9.175712	Also highly recommend the npm async library[1] even though the hipster way is now native async/wait or promises. caolan/async has some amazing sugar on nearly every use-case the most common for me being async.auto().[1] https://github.com/caolan/async		nodesocket
13559204	12.017382	-7.209146	comment	3.0	17.0	1486123436	9.123395	I highly recommend against using that library - it encourages a lot of callback hell we've found at my company, and it is much harder to create nice reusable functions with it vs. promises. bluebird is a wholly superior library for handling async flow.		Bahamut
13572880	11.654371	-7.952188	comment	3.0	14.5	1486310029	10.213048	I for one will be more interested in using Go when Jetbrains finishes their IDE. Clearly not everyone cares to develop in an IDE but after 33 years of doing it, I prefer the idea. Give Swift (my curre...		coldcode
13573469	11.633737	-7.109683	comment	3.0	12.5	1486316638	4.581891	The preference for maps and folds looks like a fad to me. I can use them but I don't think it makes the code any easier to understand, just different.		skybrian
13573980	11.6965685	-7.8200393	comment	3.0	13.0	1486322096	10.205424	> When I moved from Python to Go not only did my code become more safe, I actually became a better programmer.This is probably more due to the fact that you moved from a dynamically typed language to a statically typed one rather than this new language itself.		hota_mazi
13577919	12.405025	-7.164616	comment	3.0	10.5	1486373309	-11.197393	"Other languages can definitely do it:Ruby:    class X
      attr_accessor :y
    end

Crystal (full working example):    class Y
    end

    class X
      def initialize(y : Y)
        @y = y
      end

      def y
        @y
      end
    end

    y = Y.new
    x = X.new(y: y)
    puts x.y"		dorianm
13580088	12.334008	-7.052354	comment	3.0	15.5	1486393935	13.184523	I honestly haven't heard of anyone using Perl for anything new. Sure there is a lot of legacy Perl 5 being used and maintained, but Perl 6? For a new project? I've never even seen it on a short list.		ams6110
13580149	12.316618	-7.044617	comment	3.0	13.5	1486394307	13.151783	I use perl for new code all the time. It's not a trendy language, so it won't get much coverage on HN, but the language and libraries are great IMO.Also, perl 6 is effectively a completely different l...		joosters
13595204	11.995881	-7.7341075	comment	3.0	14.5	1486521501	10.394315	I went to ut austin and after a long time using haskell for intro classes the administrators succumbed to temptation (and possibly pressure from dell/ibm for wage slaves) maybe ~10 years ago and start...		zzzzzzzza
13595205	12.037983	-7.3542247	comment	3.0	12.5	1486521523	7.2005916	Whilst it's true that one can program in a functional style in almost any language, I fail to see how javascript would help someone learn about functional programming.		eptcyka
13595278	11.932964	-7.354227	comment	3.0	11.0	1486522517	7.2111464	It's true that you can program in a functional style in almost any language, but it's just simpler for Javascript. Functions are first-class objects in Javascript, and arrays have built-in forEach, ma...		darkkindness
13594881	11.823503	-7.476912	comment	3.0	18.0	1486517465	10.406977	> On second look, Python, C, and C++ are also the go to languages for CS classesAnd so is Haskell.But I doubt Unity 3D is schoolwork related.		marcosdumay
21191186	11.761197	-7.2316756	comment	3.0	11.5	1570535507	9.15062	"What parts of compatibility are missing? The interop works just fine, as with all other Java.  ; example: Stream.of(1,1,2,3,5).map(x -> 2*x).collect(Collectors.toList())
  user=> (.. (java.util.stream..."		dancek
21217033	11.671377	-7.9134383	comment	3.0	10.5	1570728100	10.243277	Because Go is taking a strong stance that smaller languages are more productive, and I think they’re right.C# has all these features because C# has every single feature and facility that every program...		Spivak
21227661	12.33605	-7.039247	comment	3.0	17.0	1570822431	13.186014	Sure but there's a reason that development has moved off of Perl.		bifrost
21227867	11.644619	-7.973841	comment	3.0	16.0	1570823946	10.201184	No, the point of this observation is that Go exposes this complexity, it just doesn't make it explicit.		twic
21228312	12.313037	-7.071279	comment	3.0	10.5	1570826829	13.169387	Why not before? Because Perl is you know, dead. Jokes aside, it's a pretty nice language apart from the !$double .@sigils. If I'd switch from Perl 5, I'd probably switch to Ruby, as Perl 6 oops Raku is quite slow.		petre
21228814	12.274063	-7.0284925	comment	3.0	12.0	1570830680	-10.403933	Ovid2 said Perl6 has a good concurrency modellliamander replied that Elixir does too and it's worth a lookTo that, 7thaccount replied that Perl6 and Elixir fill different niches.So far, it seems Perl6...		weff_
21229379	11.639092	-7.974529	comment	3.0	11.0	1570837023	10.213865	This is a wildly editorialized and misleading title. I clicked through just to see how it was going to rationalize the fact that people demonstrably have been building scalable concurrent Go software,...		tptacek
21236030	11.792655	-7.4435115	comment	3.0	19.0	1570912508	9.326033	"This list is so deliciously sophomoric. The best one is, and I quote:
""""""To many other weirdo bits of magic syntax, like [list comprehensions]""""""
Obviously without actually proposing how comprehension..."		polotics
21256474	12.14543	-7.490342	comment	3.0	14.0	1571127125	-10.5904455	> My wishlist for C# is short: [...]F# provides all of them, is shipped with .Net Core 3.0 and also works great on Linux.		surban
21256511	11.679928	-7.191643	comment	3.0	12.0	1571127467	-7.651685	The closest you'll get to free floating functions are methods in a static class.  The static classes essentially become namespaces.Then with static using directives, you don't need to spell out the na...		jayd16
21256758	11.789724	-7.3276753	comment	3.0	12.0	1571130473	-8.965054	>  Allow functions outside of classesWhy? You can put them in a static class, and if C#  ever had this feature, it would just be syntactic sugar for a hidden static class.But that would mean optimisin...		SideburnsOfDoom
21268167	12.021194	-7.801108	comment	3.0	11.5	1571213769	10.37171	A monad is just a monoid in the category of endofunctors, what's the problem?		skocznymroczny
21221393	12.165628	-7.869764	story	3.0	73.0	1570765628	-3.2784219	Categories: Models of Models	https://www.lesswrong.com/posts/jPDSzqHJCz2drFKvA/categories-models-of-models	wellokthen
21223352	12.068223	-7.215821	story	3.0	36.0	1570794016	9.147615	JavaScript Illustrated: Promises	https://medium.com/front-end-weekly/js-illustrated-promises-c87efb8d27a9	eibrahim
21242713	12.145271	-7.8842416	story	3.0	82.0	1570998240	-3.2343752	Category Theory for Scientists (2018) [pdf]	https://arxiv.org/pdf/1302.6946v1.pdf	adenadel
21273992	11.943491	-7.398386	comment	3.0	18.5	1571251934	7.0445666	Actually FP is more often verb-verb as in compose these verby thing together in this way to make a new verb then finally give it a starting noun.		karmakaze
21281341	12.054369	-7.819177	comment	3.0	11.5	1571315775	10.420245	Jane Street wrote a compiler that converts Ocaml to Verilog which they run on FPGAs. The OCaml you write in that case is pretty different than what you write for CPUs.		typon
21284648	11.971761	-7.6821227	comment	3.0	10.5	1571335008	10.41732	> The syntax is quite similar to the rest of the ML family, which dates back to 1973.How close is it to say something Like F# then? I've toyed with F# a bit and was able to pick it up pretty decently, but a lot of Haskell still looks foreign to me		non-entity
21284832	11.915721	-7.665473	comment	3.0	14.5	1571335895	10.373274	>but what's wrong with the syntax?I'll just link to this blog about readable Haskell. If everyone followed his advise, it would be much better.http://www.haskellforall.com/2015/09/how-to-make-your-haskel...		olah_1
21285128	11.979005	-7.7445426	comment	3.0	14.5	1571337755	10.400901	Sounds like you've barely programmed in Haskell and don't know what you're talking about.> It is extremely hard to learnHaskell was the first language I learned. I didn't think this at all and I still...		foopdoopfoop
21286339	12.0142145	-7.7753153	comment	3.0	13.0	1571346171	10.4332695	We are a YC company doing very well, all our back end code is written in Haskell. We have produced a lot of functionality with a relatively small team. I would say we are existence proof that Haskell is good for business.		seddona
21286737	11.961762	-7.467101	comment	3.0	14.0	1571349626	7.2205825	> Why does functional programming need to be taught in schools but all the other various programming topics did not?Because I think it is harder for people who have programmed with other paradigms - f...		mbo
21287945	11.92892	-7.6816916	comment	3.0	27.0	1571363046	10.410462	I will probably get stomped on for this but to me it's a giant elephant in the room.When that one purist on the team proposes mandating having 100%, 80%, or any hard number of unit test coverage, most...		wellpast
21288073	11.854968	-7.559301	comment	3.0	23.5	1571364765	10.368948	> Just because an expressive static type system is available, doesn't mean you have to use all of its expressive power. There's nothing stopping you from writing your system using little more than Str...		wellpast
21288601	11.857486	-7.6062145	comment	3.0	21.5	1571371794	10.386663	"Nope. Not everything is ""every way is just as good as the other"".>Whatever you like and whatever gets the job done: bravo""The job"" is this: it's an optimization problem of maximizing development throu..."		wellpast
21322513	11.941355	-7.716159	comment	3.0	13.5	1571744544	10.413309	What is the fixation with Haskell?		clSTophEjUdRanu
21322708	12.003052	-7.755513	comment	3.0	15.0	1571746249	10.421591	They can't afford a few thousand for training, so spend more thousands rewriting? The original Haskell devs had to learn, too.		baot
21322739	12.004361	-7.7544374	comment	3.0	12.5	1571746492	10.479584	You can’t just train any software developer to code in Haskell. It’s not an easy language to learn and a lot of programmers don’t want to learn it. And even if they managed to train up the current sta...		empath75
21349545	12.315765	-7.6803083	comment	3.0	11.0	1571953715	-10.97304	"> Also, you can mix languagesInteresting. Judging by that it seems to be implemented with a JVM language and a screenshot shows ""Scala"" as a supported language, I'm guessing at least all the JVM langu..."		capableweb
21309518	11.645098	-7.322949	story	3.0	106.0	1571635071	-8.74609	Show HN: Eole, a Lévy-optimal lambda calculus evaluator written in Rust	https://github.com/HerrmannM/eole	HerrmannM
21385421	11.777581	-7.6403303	comment	3.0	19.5	1572342322	10.387226	"Next week - ""Haskell is C"" - because you can write program that compiles and doesn't do what you want.Nobody ever claimed that flow/typescript magically makes your code bug free.It will help with stup..."		mirekrusin
21413259	11.598699	-7.952272	comment	3.0	10.5	1572553053	10.239	"Sorry. I was actually goofing on the fact that Go demos are rehashing the history of C.And frustrated that I'm not hearing anything from Golang programmers about how it enables a larger class of software.""We're writing the same software, just better"" isn't a reason to come up with a new language."		ubu7737
21442706	11.930777	-7.6573234	comment	3.0	21.5	1572882627	10.3056755	"This post shows a Haskell-ish definition of Functor, then attempts to show the same thing in TypeScript.    interface Functor<A> {
        map<B>(f: (a: A) => B): Functor<B>;
    }

But the TypeScript..."		evmar
21448435	11.99121	-7.7308345	comment	3.0	10.5	1572914385	10.36823	>and in such a case a -> f a might not make any sense because there are no morphisms between categoriesIn CAT the category of small categories objects are categories and morphisms are functors. Haskel...		crimsonalucard
21479787	11.927093	-7.080209	comment	3.0	12.0	1573184333	-10.586433	> JVM issuesstop the world GC (my car ran you over because of a random unpredictable pause!)its bytecode is object-orientedimpossible at the moment to do CUDA style GPU programming without horrible JN...		zelly
21481879	11.609725	-7.94837	comment	3.0	14.5	1573218893	10.247822	Several of our clients have Go codebases. My general experience as a security auditor of Go projects has been that it is  mostly akin to security auditing of Python projects (I'd say it's like Java au...		tptacek
21487547	12.062888	-7.444273	comment	3.0	12.0	1573251775	9.062424	"If anyone is looking for a really eye-opening video take a look at that this. ""Domain Modeling Made Functional""It's applying Functional Programming to plain old Enterprise line of business apps in F#...."		BoiledCabbage
21494081	11.723633	-7.5766807	comment	3.0	10.5	1573330939	10.407576	"> the ways Haskell & Rust enforce program structure is a huge costIn my experience, it is the opposite of a cost - ""worrying about types"" doesn't slow me down. Instead, types help guide me, help reaso..."		deogeo
21496906	12.233657	-7.5474453	comment	3.0	11.0	1573370984	-11.334825	Given how many features Ecstasy has that seem to come straight out of Kotlin and Ceylon, it's quite surprising to see Cameron write [1]:> I've never used Kotlin or Ceylon myself, but over the past few...		hota_mazi
21508429	12.326903	-7.0236945	comment	3.0	15.0	1573503353	13.182968	This looks surprisingly neat, honestly. I've never used Perl, let alone Perl 6, but I think I see why people cared about it.		MrEldritch
21480777	11.613656	-7.967951	story	3.0	230.0	1573202732	10.179056	Security assessment techniques for Go projects	https://blog.trailofbits.com/2019/11/07/attacking-go-vr-ttps/	ngaut
21531094	11.989198	-7.750489	comment	3.0	10.5	1573688675	10.419281	"I feel the same way about my favorite programming languages. I'm glad there aren't giant Haskell conferences that are more concerned with making the language ""friendly"" and ""accessible""  than making it useful. This is what happened to Python, etc, and I don't think it's a good thing."		fortran77
21535583	11.721857	-7.852784	comment	3.0	14.0	1573741728	10.203282	Yeah, boring programming languages are criminally underrated. Fro instance:> High developer productivity. Go typically takes just a few days for a C++, Java or Node.js developer to learn, and the code...		asdfman123
21539459	11.72398	-7.0797033	comment	3.0	13.0	1573765856	7.052556	"What's weird is that it's half baked   def foo(self):

instead of a more logical:   def self.foo():

to match the calling syntax."		gowld
21545411	11.712664	-7.186044	comment	3.0	11.0	1573830749	9.126767	> the asynchronous “always on, always connected” styleNit: I've always heard this called synchronous, since in this style work is performed immediately, rather than queued up to wait for execution at a scheduled time.		jt2190
21553432	11.637962	-7.922453	comment	3.0	15.5	1573921855	10.224429	> One example of Go's lack of expressiveness is that loops are not abstracted away, e.g. you can't use higher level constructs like map and filter on collections.This is (or was) deliberate, with the ...		sagichmal
21553707	11.697004	-7.732098	comment	3.0	16.5	1573924854	10.267134	"The ""linage"" implies that they aren't aware of it, or at least they weren't when designing the language. Rob Pike is more of a systems guy than a type theorist.Like most systems guys, they know of how..."		crimsonalucard
21555940	11.997949	-7.1440806	comment	3.0	13.0	1573953179	8.6716795	I have the complete opposite point of view.  I never used @Cleanup but at least the @Data annotation makes it much more readable IMO.There is tons of boilerplate in a simple Java bean, so when you hav...		safaci2000
21556935	12.238635	-7.4761834	comment	3.0	10.5	1573975292	-11.374992	The way to get there isn't the same, the impact on Java library authors it is.Even Jake Wharton already complained about this publicly, and he is now working at Google, go figure.> Happy Tuesday Andro...		pjmlp
21561508	11.926637	-7.397831	comment	3.0	28.5	1574044931	7.1016593	"OOP feels right because it's an imitation of reality. In the reality we live in... a verb cannot exist without a noun. Think about it: how can there be ""movement"" without the ""thing that moves."" OOP m..."		crimsonalucard
21567758	11.991897	-7.7452044	comment	3.0	13.0	1574108324	10.420132	"It depends on what we mean by Haskell.If we mean ""Haskell the latest specification"" that's Haskell 2010. I suppose we could think of it as pretty simple, though lazy evaluation means that any implemen..."		seagreen
21567443	11.982895	-7.7230945	comment	3.0	17.0	1574106099	10.416181	Haskell is extremely complex, and that’s the point: to isolate complexity at the language level, where safe patterns can be researched, developed, and then scaled out to arbitrary applications.Please call this “Towards a simple Haskell web stack” or something else less oxymoronic.		artfulhippo
21571726	12.301959	-7.074388	comment	3.0	19.0	1574157090	13.164393	As a mathematician, I am actually very surprised by perl's 6 behavior here.  What the hell is going on?  Does it use fixed point arithmetic or what?		enriquto
21603108	11.95602	-7.4822197	comment	3.0	21.0	1574401764	7.198096	"but ""it's unfamiliar if you don't use FP"" is a terrible oneI get the sense that there is a large contingent of programmers who feel disdain for mathematics and FP gets caught in the crossfire. It’s un..."		chongli
21620352	11.805239	-7.1479063	comment	3.0	11.5	1574602972	1.9564029	I have a masters in CS and have been working for a decade at highly-regarded companies. I've never heard of SOLID and couldn't define closure precisely.		badfrog
21620933	12.132743	-7.8148613	comment	3.0	12.5	1574609298	10.422943	"I've actually used CDuce in production.  It was certainly interesting, a kind of ""XSLT/XPath done right"".  However it had major drawbacks such as being very difficult to deploy and not having any easy..."		rwmj
21636865	12.238865	-7.568048	comment	3.0	10.5	1574761836	-11.34753	I wouldn't say Kotlin is significantly better than Swift in terms of syntax, they are largely similar to the point you sometimes think: someone copied this from the other, I wonder who was the first.T...		mojuba
21661248	11.820967	-7.4262795	comment	3.0	11.0	1574990307	10.41135	"Are we doing Tier-Lists on HackerNews now?    S Haskell, Rust
    A Python, C, Go, Julia
    B Prolog, Assembly
    C C#, Java, C++, Scala, ML
    D Ruby, Groovy, R
    F LISP, XML, Bash, VB"		c3534l
21703832	11.684576	-7.875363	comment	3.0	20.0	1575478208	10.112355	Since Go doesn't even have inheritance or getters and setters, they may have a point (though getters and setters are pretty easy to do I guess if you want them, it's not part of the culture).Culture i...		grey-area
21710390	11.671341	-7.777391	comment	3.0	12.5	1575527567	-7.3069563	True, but I don’t think there’s a general purpose programming language whose tooling expresses source code as visual flows of data, that people would use in place of Go, Python etc.		disposedtrolley
21711508	12.001304	-7.7692137	comment	3.0	11.5	1575544870	10.4497385	I thought Monads were needed for IO to make sure IO operations happened in the correct order?		ourlordcaffeine
21727832	11.745443	-7.3338733	comment	3.0	18.5	1575682213	9.77252	These C# issues arguably demonstrate haphazard additions that didn't align with good taste:* Too many overlapping concepts for referring to code by value and defining them inline: events, delegates, a...		ljackman
21742063	12.019554	-7.231039	comment	3.0	17.5	1575894970	9.196132	"I appreciate that the author is trying to illustrate something with an intentionally contrived example, but there is really no need for ""await"" in his ""chain()"" function:  function chain () {
    (fun..."		gbuk2013
21744499	11.677223	-7.237739	comment	3.0	12.0	1575912791	9.056197	"Why would the code be ""nowhere near as elegant""? Lack of a functional / persistent map?Because I'd expect all maps to provide roughly similar interfaces whether they're assoc lists, hashmaps, btrees, ..."		masklinn
21745104	11.6179085	-7.9194517	comment	3.0	16.5	1575916751	10.153473	Yes. The sell point of Go was supposed to be the queue type concurrency model. But that turned out to be marginal. In practice, programs use shared data and locks.The real advantages of Go seem to be ...		Animats
21745168	11.640324	-7.94021	comment	3.0	13.0	1575917183	10.227822	Go is the worst programming language out there, aside from any other language I've tried so far.Seriously though, besides being just a good solid balance between speed, ease, safety, etc without anyth...		dvirsky
21745117	12.118772	-7.6066	comment	3.0	14.0	1575916878	-11.413806	What does go solve that kotlin + the jvm libraries ecosystem doesn't?		The_rationalist
21760625	12.246386	-7.500487	comment	3.0	20.0	1576053100	-11.337277	"I don't know the situation on mobile but for cross platform Desktop the JVM is a great target for ""write once, run everywhere"", and Kotlin is a modern language that fixes or improves a lot of Java's c..."		vbsteven
39102760	12.305298	-7.3169055	comment	3.0	14.5	1706014674	7.085646	Didn’t have time to go through it all, but quickly scrubbing I didn’t see any mention of a UI. doesn’t SmallTalk by definition include a UI component?		uticus
39105134	12.299979	-7.304865	comment	3.0	10.5	1706025695	7.066501	Let's not couple concerns prematurely please.I need Smalltalk for a lot of backends that have nothing to do with UI.		sebastianconcpt
39160979	12.220583	-7.600148	comment	3.0	15.0	1706398643	11.909454	The suggestion would more be to choose the correct technology from the start. Something like Scala is 20 years old, has a massive library ecosystem since it integrates with Java, and has type inferenc...		ndriscoll
39127432	11.932904	-7.7386074	story	3.0	75.0	1706171258	10.420862	GHC Steering Committee Retrospective	https://www.joachim-breitner.de/blog/811-GHC_Steering_Committee_Retrospective	JNRowe
39184351	12.399807	-7.751753	comment	3.0	12.0	1706571857	8.931101	It does preclude it, but clojure found an arguably elegant solution to it, using recur[1] instead. As a plus, in addition to achieving the same result as tail-call elimination, it does check that the ...		jordibc
39211484	11.867115	-7.340801	comment	3.0	13.0	1706747508	7.019527	Programming is mostly about understanding the problem domain. It is interesting that OOP had its heydey when everyone was building native GUI programs. The most likely situation was that programmers w...		roenxi
39238619	12.326965	-7.030797	comment	3.0	13.5	1706950164	13.189192	"10 Years ago there was the so called Perl Renaissance. 
Which should turn Perl around. Sad truth is. 
People already moved on.
Everything to little to late and not what the people where looking for."		ecef9-8c0f-4374
39246206	12.069746	-7.2374363	comment	3.0	16.5	1707006460	9.168996	i think that if someone is really interested in this topic, they'd do well to read mark s. miller's doctoral dissertation on it, 'robust composition': http://www.erights.org/talks/thesis/this is relev...		kragen
39208350	11.772611	-7.2934065	story	3.0	14.0	1706730176	-5.9804764	Mutative 1.0 – A New Era in Efficient Immutable Updates	https://mutative.js.org/blog/releases/1.0/	Leftium
39239721	11.617052	-7.947472	story	3.0	85.0	1706963384	10.185241	Goal: Embeddable array programming language with a bytecode interpreter in Go	https://anaseto.codeberg.page/goal/chap-intro.html	tosh
39269409	12.145562	-7.8769937	comment	3.0	10.5	1707181118	-3.180526	"Why should we ""create"" categories. There should be an algorithm for determining level. Input 1000 miles an hour, you get a category.Earthquakes don't have an upper limit. It's just a function of energy."		_tom_
39284257	11.978488	-7.2408886	comment	3.0	11.5	1707277678	9.176667	Async await fetch lets you flatten your nested callback functions into simple procedural programming. It makes everything much easier to reason about, no more closures and such.		umvi
39322951	11.613505	-7.9558773	comment	3.0	14.5	1707531837	10.22269	> Except for all those times you're the consumer of someone else's library and there's no way for them to indicate that creating a zero-valued struct is a bug.Nonsense. Go has a built-in facility for ...		randomdata
39324531	11.999572	-7.160336	comment	3.0	11.0	1707553336	4.9738755	>Write your scripts in a file with an .mjs extension in order to use await at the top level. If you prefer the .js extension, wrap your scripts in something like void async function () {...}().Shebang...		hlandau
18026579	12.353263	-7.103367	comment	3.0	13.0	1537382327	12.346294	"I feel where Ruby's optional parenthesis syntax really shines is in method call chaining.e.g.    employees.flat_map(&:addresses).map(&:city).uniq.sort
    # in place of
    employees().flat_map(&:addresses).map(&:city).uniq().sort()"		iamrohitbanga
18026998	12.447902	-7.0953755	comment	3.0	10.5	1537385237	12.365587	As a non-Ruby programmer, this sounds like it makes it non-obvious whether you're calling a class' method or attribute. Do you end up relying on your editor to help you out ?		globuous
18032636	11.986402	-7.217947	comment	3.0	10.5	1537453554	9.212014	> Important! While browsers can run input callbacks ahead of queued tasks, they cannot run input callbacks ahead of queued microtasks. And since promises and async functions run as microtasks, convert...		alangpierce
18043378	12.024197	-7.7969265	comment	3.0	17.0	1537571714	10.402072	"This concept is a big part of what the ""big deal"" around monads is - using monads to model effectful code conveniently puts the information of ""this should be shell code"" into the type, in a way that ..."		T-R
18043636	11.5919695	-7.966669	comment	3.0	10.5	1537574839	10.181125	Not going to edit the above but people clearly hate it (many downvotes without minutes of posting).At the moment I think most Go programmers who also program tiny microcontrollers with a few hundred K...		logicallee
18044656	11.996576	-7.725158	comment	3.0	12.0	1537594631	10.349561	Monads is taking it too far. Mutation is a reality, the correct approach is disciplined mutation. Shoving mutation into convenient boxes and convincing yourself to never look inside it does not mean m...		pankajdoharey
18060871	12.303881	-7.530925	comment	3.0	11.5	1537818848	12.848795	"Would you mind elaborating on ""why separate address spaces connected by pipes are such a powerful abstraction"", or point me to some sources? Likewise if there's something you can recommend for reading up on the Actor model?"		Joe-Z
18069453	12.183103	-7.2959275	comment	3.0	13.0	1537902572	-10.517721	We're still using the 6 FML		gdsdfe
18075536	11.699199	-7.8717756	comment	3.0	10.5	1537967489	10.178986	Right, what is the equivalent of the following in Go?import org.apache.hadoop.*;import org.rapidoid.net.Server;In case you are wondering people not only using languages for language features but also ...		StreamBright
18089259	11.718006	-7.1021967	comment	3.0	12.0	1538086328	-7.3798585	"Private functions do not restrict the usage of that function to one point in the code. There's a world of difference between a coding convention - essentially a comment to say ""please don't access thi..."		andrewstuart
18097545	11.823701	-7.83783	comment	3.0	11.0	1538173374	10.29046	I've been using a lot of Go to write web applications the last three years, and I find it's a very smooth experience.I don't have a hate-on for Ruby on Rails; my last job was as a Rails dev and I like...		Carpetsmoker
18108905	11.799587	-7.0988617	comment	3.0	12.0	1538348049	-9.0204115	In Python 2, omitting (object) inheritance in a class definition had an actual effect. Is something different in Python 3 that makes this okay, or are we doing the less okay thing because it's cleaner?		Waterluvian
18126586	11.9936	-7.698574	comment	3.0	10.5	1538523373	10.404421	My thoughts exactly. I'm curious what compelled the author to choose Haskell over F#.		iammiles
18127325	11.633179	-7.907942	comment	3.0	18.5	1538535215	10.206171	"Hi,my humble opinion: how much would ""Immutable Types"" add to the language? How much complexity would it add?
Things can already be made immutable from outside by hiding them in private variables/stru..."		x0re4x
18126713	11.784923	-7.2065535	comment	3.0	17.5	1538525347	-8.944185	> he outlines the importance of a strong type system for maintenance and refactoring—A property much harder to achieve in something like python.Of course a typed language is going to have a better typ...		sdinsn
18142059	11.722785	-7.8193374	comment	3.0	10.5	1538675614	10.067347	Regarding one of the last comments, I'd say the two biggest reasons for using Node over Go, at least initially.  Prototyping speed, and a stronger connection to a web front-end.  I've really not seen ...		tracker1
18142423	12.29331	-7.514927	comment	3.0	11.0	1538678556	12.840476	The Actor model is trivially implementable with CSP.		sagichmal
18143679	11.618279	-7.92355	comment	3.0	10.5	1538687249	10.178633	All of those interfaces are trivial to implement in Go precisely because Go implements a much stronger abstraction. By contrast, if you only have those other abstractions you're quite limited in how y...		wahern
18131302	11.645293	-7.968854	story	3.0	46.0	1538581228	10.2011	Buildpacks Go Cloud Native	https://blog.heroku.com/buildpacks-go-cloud-native	fomb
18155129	11.682775	-7.397809	comment	3.0	14.0	1538834083	-8.707077	"Why would this be a type error? ""Are these two things equivalent?"" has an unambiguous answer regardless of whether the things are of different types. When they are not the same kind of thing, the answ..."		wool_gather
18155520	12.00443	-7.782274	comment	3.0	13.5	1538838803	10.418444	I'm glad to see effect systems getting so much attention lately. I think they are a far better alternative to monads (and monad transformers) in terms of cognitive load. They commute, for example.		cultus
18175290	11.950808	-7.747693	comment	3.0	11.0	1539087779	10.416549	Haskell has such an extensive set of language extensions, I would say adding new features to the type system is probably the MOST Haskell-ish way of doing things.The explicit purpose of Haskell is to ...		klodolph
18176129	12.3304825	-7.0183926	comment	3.0	12.5	1539094483	13.1965	Just in case you don't quite know who Larry Wall is: https://en.wikipedia.org/wiki/Larry_WallI wrote code for a bank using perl. I'd say 95% of their code at the time was in perl. Website called perl,...		jason_slack
18183797	11.792518	-7.1953983	comment	3.0	10.5	1539170768	-8.941957	"Do you think a statically-typed language could ever be a ""contender"" - i.e. compete with Python in terms of ease-of-use etc?Nowadays, I don't think any new, dynamically-typed language has a chance to become mainstream."		firdak
18193743	11.720897	-7.3933764	comment	3.0	13.0	1539267686	-8.745338	No. A type inference does not check types. It inferences types.For example if you know that + is defined for numbers, then you can inference that a and b must be numbers: (+ a b)If you know that a and...		lispm
18194673	12.267033	-7.6135335	comment	3.0	11.5	1539273998	11.892853	We had plans to move DataModel (manages all data ops) to serverside. We even have a half baked DataModel in Scala which we thought we would do it once we understand some usecase. But currently we have...		yonl
18195601	11.710124	-7.8438253	story	3.0	12.0	1539280342	10.217443	Gpython (python 3.4 re-implemented in Go) now runs in your browser	https://twitter.com/njcw/status/1050443456173285377	nickcw
18246938	11.88175	-7.6123385	comment	3.0	10.5	1539853029	-8.627313	"The article is exemplary – it's reasonably short, concise, beautifully visualized and explains a complex topic with simple terms.I'm confused with ""type promotion"" in the `ConnectionStatus`  example, ..."		divan
18250563	11.773299	-7.09391	comment	3.0	13.5	1539885721	-8.971891	I think this relates to what you're saying.I've never felt any frustration that OOP feels like the wrong tool when I'm using languages that give me the choice to use it or not (like Python, and JavaSc...		Waterluvian
18250688	11.903743	-7.316015	comment	3.0	11.0	1539886466	7.1027684	How has the church of OOP failed? Nearly every used language is based almost entirely on OOP. OOP makes organizing software and code reuse incredibly easy. The only real downsides to OOP is that its a...		jshowa1
18251148	11.959236	-7.3589654	comment	3.0	12.5	1539889317	7.0706606	Took me a long time to grok OOP and OOD (was introduced to OOP in '91). At first I thought I knew it, and then realized I didn't.Plane into the side of the mountain, no survivors, call off the search....		FourthProtocol
18251351	11.927786	-7.320071	comment	3.0	11.0	1539890743	8.816724	> I think OOP is fine as long as you are doing it and as long as it is single-threaded.I don't really see how threading has anything to do with it.What OOP allows you to do is choose what terms you wa...		jschwartzi
29699034	11.775091	-7.3104672	comment	3.0	11.0	1640577760	9.428065	Have any of the relevant limitations been removed in the last decade+? I don’t believe so.Project Valhalla is 9 years on, is there an end in sight?When Java & the JVM were first released, the treatmen...		twoodfin
29705134	11.632029	-7.684061	comment	3.0	44.0	1640629480	10.1994	Computer language inventors are torn between a voice whispering “use the language Luke” and and a more gravelly “let your feelings for the compiler grow, embrace the syntax side.”I did a two-day sprin...		travisgriggs
29705642	11.64254	-7.519742	comment	3.0	33.5	1640631955	10.000271	I've grown used to the idea that generics (data structure macros, C++ templates...) aren't that useful. If I find myself in a situation where I'm thinking of a solution that involves generics, I stop ...		jstimpfle
29731693	11.672115	-7.6411643	comment	3.0	13.0	1640822150	10.125182	See plenty of opinion here too, like generics getting too complicated and error handling needing to be designed in.Vehemently disagree on both		voxl
29762206	11.601149	-7.953195	comment	3.0	12.0	1641068090	10.203273	> Yeah this also means that you need to update your compiler when there's a vulnerability instead of just a single point release in a library.Has updating the Go compiler actually been an issue for yo...		cube2222
29774586	11.606081	-7.1086116	comment	3.0	11.0	1641161611	-10.360831	"The author might be new to Lisp, and I hope what I write doesn't discourage him.   There are some other mistakes:     ((ab . c) . d . nil)

isn't a valid s-expression.   Maybe it should be    ((ab . c..."		DonaldFisk
29776357	11.597674	-7.2278495	comment	3.0	12.0	1641174155	5.0552917	"  There’s also two additional programming techniques you should be aware of:
  * Dynamic Programming
  </snip>

How often do folks here use dynamic programming techniques in their professional lives? ..."		troutwine
29766267	11.726484	-7.3105526	story	3.0	57.0	1641103274	-8.8803625	Type: A Directed Typing Experiment	https://type.constraint.systems/	mr_tyzic
29836260	11.806938	-7.2602224	comment	3.0	10.5	1641541792	9.203535	"Its not that unintuitive once you understand async/await and how the tasks are resumed.  Execution is yielded at an await.  At that time the loop is not running anywhere, its not even in a sleep state.  The loop ""terminates"" by never being resumed."		jayd16
29835800	11.728954	-7.324629	comment	3.0	13.5	1641537527	-8.884353	What about endless typing attributes that the language should infer for itself and instead forces everyone to write templates to work around such matters?		pjmlp
29843188	11.785042	-7.1851783	comment	3.0	10.5	1641581867	-9.090047	"I love how simple and forgiving Python is for small projects. The ""trailing comma creates a tuple"" situation comes out of, as far as I can tell, a desire to create maximally convenient syntax in the s..."		aeturnum
29853500	11.941511	-7.361092	comment	3.0	11.0	1641661020	7.0506988	If you actually work on a project of significant size I don't see how one can reason about code that's not encapsulated via classes.I used to contribute to RunUO, an emulator for Ultima Online, and it...		na85
29859175	12.13255	-7.1949	comment	3.0	11.0	1641694509	12.845706	You might want to consider mapping an index to an ets table-based data structure instead of an immutable object managed by a GenServer, it will give you a way to share it between processes without having to awkwardly copy a potentially huge data structure all over the place.		dnautics
29871192	11.624305	-7.9358597	comment	3.0	12.5	1641794535	10.2231455	Go’s philosophy seems to be a very minimal/low-feature language, that’s fairly low level, even if that means somewhat more awkward or mistake-prone code. Go’s current approach seems more Go-y than an annotation like this.		yashap
29876824	11.679057	-7.1267934	comment	3.0	14.5	1641830528	9.214143	To be fair, you almost never should use the map builtin instead of the pythonic equivalent, list comprehensions.`print([x + 1 for x in [1, 2, 3])`I agree that the ruby approach is better in terms of consistency, but most developers will be aware of the conventions python uses.		trufas
29891577	11.893512	-7.075041	comment	3.0	12.0	1641910043	-10.759059	>I am completely unconvinced by the move to asyncio everywhere in PythonMe too, now. I've just been bitten by asyncio and it wasn't nice. Running many concurrent tasks a few of which are websockets, t...		lvass
29902024	11.673744	-7.9456787	comment	3.0	11.5	1641959170	10.23402	> Go did not have generic types at the time so I excluded it immediatelyI wonder how many people are missing out on Go for a feature they wouldnt miss 80-90% of the time?		leetrout
29903941	11.613764	-7.9202924	comment	3.0	12.0	1641977570	10.122258	Not trying to belittle you or anything, but I have a hard time understand why someone would use Go without Goroutine and Channel.		dikei
29904283	11.85861	-7.4050145	comment	3.0	18.5	1641980831	9.299022	async/await is just a syntax sugar, most languages didn't have it until very recently when it became a trend or something. In OCAML it's just like any other monad you use the bind operator instead. No need for special keywords.		nsonha
29916731	11.7988825	-7.210819	comment	3.0	10.5	1642046719	-7.0790296	Mostly good but I hate getProperty names. If a method returns the temperature call it temperature() not getTemperature(). If the private data member has to have a different name, _temperature or some similar convention will do.		not2b
29932959	11.790037	-7.55174	comment	3.0	11.5	1642157833	10.252893	> Function application uses conventional mathematical notation, e.g. f(a,b) instead of (f a b) as in Haskell.Thank you for that.		ur-whale
29948814	12.266758	-7.308011	comment	3.0	19.5	1642270928	-10.200685	I think this is wide of the mark. Smalltalk has a filesystem: the global dictionary. Sure, it's flat, but so was the root directory in DOS 1 and CP/M. See Self for an evolution of this idea toward som...		tonyg
29949104	12.22126	-7.2513146	comment	3.0	16.0	1642272857	6.9978724	> That's not even close to a file systemNonetheless, Smalltalk is to Unix as globals dictionary is to file system, image is to virtual machine, etc.> How do systems outside of Smalltalk get access to ...		tonyg
29950245	11.875281	-7.739311	comment	3.0	10.5	1642280665	10.347479	"> I find Haskell a joy to use, and I cringe at having to use languages like Java and Go, which are a minefield of error-prone programming patterns (like using products instead of sums to represent ""re..."		dvt
29940440	11.669786	-7.975765	story	3.0	26.0	1642194410	10.236288	Bintris – Golang Mobile Game	https://github.com/Lallassu/bintris	nergal
29971945	11.755769	-7.6668444	story	3.0	5.0	1642455414	10.129194	Ask HN: Is there a functional programming language with the benefits of Go?		christophilus
29999335	11.79711	-7.367967	comment	3.0	13.0	1642623166	-8.905656	No - (a) is not what I'm suggesting.  And (b) while disappointing, just doesn't slow one's work down very frequently in daily practice.Look, I just don't buy the suggestion that static typing magicall...		vanusa
30007139	12.168817	-7.640837	comment	3.0	10.5	1642675105	10.596062	VariablesES6 wins, 'val' and 'var' are annoying close to each other.Primitive TypesScala hands down. Not even close.FunctionsScala is more expressive (well if you ignore the types). I wish more langua...		LAC-Tech
30008891	11.742222	-7.338233	comment	3.0	13.5	1642686908	-10.449033	"You can if you derive the union from a const array using indexed types.  const MyTypeValues = ['a', 'b'] as const;
  type MyType = typeof MyTypeValues[number];

MyType is now a type 'a' | 'b'"		cobertos
30013009	11.946902	-7.449738	comment	3.0	13.5	1642704950	7.179623	For some scenarios, functional programming is a good match. For example, Big Data. FP has features such as lazy evaluation, which is important for Spark, for example. Not surprisingly many Big Data li...		petilon
30020760	11.64911	-7.911594	comment	3.0	14.5	1642753974	10.168227	Please excuse my ignorance, but here goes:Been a Go dev for almost 3 years now. I am basically shitting myself over the prospect of all the Go code out there turning from something I understand, to so...		throwaway77384
30024503	12.425291	-7.1088963	comment	3.0	11.5	1642777799	-10.915264	A lot about the Rubocop philosophy really grates on me. Many of its preferences are arbitrary and don't, in my opinion, contribute to code readability. Many others are good as a rule of thumb but caus...		jstan65536
30045160	11.597693	-7.950579	comment	3.0	17.0	1642934336	10.142103	> At most you’re getting the benefits of unboxingWhich is.. 3x? or 10x?> These tests are probably just picking up the cost of an extra allocation required to box a primitive type as an interface.I've ...		maxwell86
30061217	11.864234	-7.299823	comment	3.0	24.5	1643046826	7.04958	This article is not really worth reading if you've read any criticism of object-oriented programming from the last 3 decades.  Except maybe the reference problem related to encapsulation -- that's jus...		wvenable
30061592	11.665116	-7.390377	comment	3.0	19.5	1643048331	7.0796695	"Null is more popular than OOP. It's also something all programmers can agree is a huge mistake. But this concept is replicated literally everywhere.See:
https://www.reddit.com/r/AskComputerScience/com..."		deltaonefour
30068692	11.79898	-7.2065473	comment	3.0	23.0	1643090751	6.9694896	"""Classes would still exist, but as implicit patterns.""Classes are not a design inevitability, but just one way of managing state. Languages that mostly avoid mutable state don't tend to have object systems, for instance."		weavejester
30068912	11.836268	-7.316884	comment	3.0	15.0	1643093284	-8.601291	Type classes and ML functors are also a way to do polymorphism and dynamic dispatch on data structures.So which languages are left without object systems?		pjmlp
30069779	11.748824	-7.3466735	comment	3.0	11.0	1643101330	-8.894506	Static types are definitely make the language more complicated. It will have a bigger specification and more complicated implementation.You could even argue it makes writing programs more complicated....		IshKebab
30069525	12.234865	-7.570919	comment	3.0	14.0	1643099082	-11.054392	"The definition of ""simple"" and ""complex"" is very vague here.If we use Clojure's philosophy of simple, Python is by no means a simple language, even without classes. There are a lot of special syntax l..."		cttet
30106590	11.794914	-7.029389	comment	3.0	11.0	1643317161	-10.747969	"Consider us one. :)We tried removing ""async"" -- thinking it would force sequential processing -- but it unexpectedly seemed to cause parallel processing of requests, which caused CUDA memory errors.Be..."		headlessvictim2
30121003	11.825829	-7.289603	comment	3.0	15.0	1643407270	-6.0257645	The word immutable has a meaning.Blockchain does not fit that meaning.Immutable doesn’t mean, “as long as 51% of miners want it to not change”.Immutable doesn’t mean, “doesn’t change unless we get hacked and then we’ll change it”.I could give more examples. Blockchains are not immutable.		300bps
30203585	11.689537	-7.8957105	comment	3.0	15.0	1643957038	10.168173	I absolutely agree.Bored by Java and After getting burned due to performance limitations by Python applications at scale I switched to Go and never looked back. I still use Python for ML, DS and I don...		Abishek_Muthian
30203598	11.599241	-7.978687	comment	3.0	11.0	1643957244	10.204712	Honestly Golang is not hard to learn, compared to other typed languages like Rust.		baby
30214294	11.70415	-7.029289	comment	3.0	12.0	1644013834	-7.205673	I’m switching back from Ruby to Python out of necessity, and I loath things like len(my_list) vs my_list.len().I just don’t understand why Python thinks it necessary to define global functions for som...		TomVDB
30221722	11.946154	-7.709876	comment	3.0	15.0	1644073389	10.380679	"I totally agree on the syntax, Haskell is far cleaner.I’m not sure what the reasoning was here. 
I hope the author or others can shed some light."		salimmadjd
30223304	11.978362	-7.7453427	comment	3.0	15.5	1644081568	10.4316025	A problem with Haskell and with this is that they are inherently only suitable for batch processing. You cannot build interactive   systems that have real-time requirements with these languages becaus...		CyberRabbi
30233600	11.644126	-7.033844	comment	3.0	26.0	1644162776	6.9632025	"Looking at the source, this doesn't handle ambering of repeated letters correctly:    let mut diff = [Match::Black; 5];

    for (i, &b) in input.iter().enumerate() {
        if solution[i] == b {
   ..."		ylyn
30248641	11.9186735	-7.55516	comment	3.0	11.5	1644257295	10.257872	I let myself do a little bit of thinking and I guess this might be helpful when you are doing functional style pipes/chains but you can wrap the whole chain into a try except block. But the question i...		impoppy
30256358	12.061341	-7.6430607	comment	3.0	11.5	1644311859	10.315451	"Finding ""F# jobs"" is a lot easier in my experience, due to easy interop with C#. Many places using .Net or C# are willing to let you use F# in places if you can convince them it makes sense.As to the ..."		dagw
30257835	12.19505	-7.6381884	comment	3.0	11.5	1644325221	11.890151	> it's just an implementation detail than doesn't make the language more or less functional.It affects the language very much, awkward currying and tupling, needing to wrap methods in objects. Subtypi...		grumpyprole
30287770	11.674481	-7.257454	comment	3.0	11.0	1644507867	-8.833804	Which camp is plain wrong?The side that insists on using strongly typed languages for a weekend throwaway project?Or the side that insists on using dynamic languages for 2000 file projects?I always se...		hnfong
30294073	11.912143	-7.360488	comment	3.0	14.5	1644534395	7.2621527	"I think in a lot of ways you're correct. FP and imperative code tends to makes state explicit; OOP hides state. The latter MAY make things ""easy""; it never makes it simple."		lostcolony
30294147	11.840368	-7.324164	comment	3.0	12.5	1644534774	7.39348	"""Hiding"" state is necessary to endow it with well-defined invariants. This can be done in many FP languages, too.  The semantics-side implications of ""encapsulated"" state w/ proper invariants have yet..."		zozbot234
30294162	11.867485	-7.3995514	comment	3.0	11.5	1644535011	7.0586843	"> ends up creating so much more.This is primarily because of inheritance, which seems counter-intuitive. 
In a meta-analysis of OOP-based designs, inheritance is used as the primary form of compositio..."		Supermancho
30294350	11.883281	-7.377568	comment	3.0	13.5	1644535809	7.1493087	The problem with OOP is not just with poor implementations and inheritance models (e.g. Java) but that state encapsulation is actually bad and cements complexity.The real goal should be to untangle st...		ummonk
30294709	11.93328	-7.4384418	comment	3.0	11.5	1644537602	7.171714	Conjecture: programming is hard, especially as the scope of the system becomes larger and the problem domain more complex. This means that all programming tools and techniques have at least some probl...		dboreham
30296040	11.802118	-7.3272643	comment	3.0	14.5	1644546105	10.109717	>solutions to imaginary problemsThis is a fundamental misunderstanding of what patterns are. The GOF book is used to this though.A design pattern is someting that will naturally crop up if you adhere ...		wackro
30294511	11.914106	-7.3418756	comment	3.0	14.0	1644536603	6.999169	Back in the 90s OOP was touted as revolutionary. The next big thing, would completely change programming. If something wasn't object oriented, it was looked down upon. SQL even got on the bandwagon. I...		throwawaylinux
30310371	11.630904	-7.0942817	comment	3.0	11.0	1644645536	9.137879	What’s the experience like? From memory Emacs is single threaded so curious how it performs with external IO async.		hestefisk
30317828	11.683291	-7.908784	comment	3.0	20.5	1644712190	10.201477	> If you use Go or gRPCI'm not. My go-to web frameworks are Elixir/Phoenix, Python/Django, NodeJS/ApolloServer.I have an irrational hatred for the Go language, but still use it to develop quickly some CLI tools.		linkdd
30253083	11.760937	-7.7606893	story	3.0	31.0	1644277058	-10.604069	Elsa – Minimal, fast, secure runtime for TypeScript written in Go	https://github.com/elsaland/elsa	nedp
30328602	12.311448	-7.0244346	comment	3.0	10.5	1644815493	13.19713	Perl was my first language in the 90s....got good at it over the next 10 years...then it sort of fell off the map.		cranberryturkey
30332617	11.609464	-7.0913997	comment	3.0	13.0	1644850153	-7.6123075	"This change will enable to have default values that are created at function call, not at function definition.For example I can define:  def f(x, l=>len(x)):
      print(l)

where the default value of l depends on the other variable x."		elcomet
30369760	11.964494	-7.7348485	comment	3.0	14.0	1645074983	10.442399	GHC error messages and needless category theory and algebra jargon are the two worst aspects of programming in Haskell. You eventually get used to both of them and, once you do, you become even more p...		voidhorse
30406908	11.90796	-7.4855776	comment	3.0	14.5	1645374692	9.276056	> Things that used to be hard and are now easy:> Concurrency, with async/await (in several languages)The number of times I've been bitten by the very specific semantics around async/await in JavaScrip...		ignoramous
30418341	11.788848	-7.226897	comment	3.0	12.0	1645464750	-9.006889	You can create Python types at runtime, and Python’s runtime type checking features predate it's static analyzers. Unfortunately, the additional kinds of objects used for typechecking in the static an...		dragonwriter
30418670	11.982429	-7.3035903	comment	3.0	11.5	1645466517	7.15708	> FRP is a plague on the industry, and everyone is going to figure that out in a couple years.Why is FRP/Combine bad? What is better?		mlajtos
30419767	11.707456	-7.081712	comment	3.0	15.0	1645472807	-6.0168757	Languages not ruled by a BDFL are subject to every team member wanting to get their pet feature in, motivated by ego, fame, and career.This happens with all corporate software, as people compete to (f...		tlb
30419965	11.766444	-7.3893175	comment	3.0	10.5	1645474139	-8.874075	As I see it, when we will have built languages that didn’t de-evolve into a bazaar of features, those will be dependently typed languages.Because a dependent type is a type that represents a computati...		AnthonBerg
30443139	11.631505	-7.9454165	comment	3.0	20.5	1645635223	10.18601	That's about right in aggregate, though some of the specifics go either way. I have two theories why so many people are convinced that Go is much lower level than it actually is, and I'm not sure whic...		codeflo
30444100	11.653103	-7.117122	comment	3.0	15.0	1645639182	-8.917735	You can know your class alignments in Java using tools like http://openjdk.java.net/projects/code-tools/jol/Having access to pointers is a superficiality. Java is getting value types, and C# already has them.		azth
30455562	12.490094	-7.099585	comment	3.0	12.0	1645715192	12.372303	"> types were not remotely the most common type of problem I ever ran into, and certainly not ""every"" bug.If you took that away from what I wrote, I apologize. I meant that without a compiler and type-..."		hellcow
30519416	11.609547	-7.945011	comment	3.0	25.0	1646165975	10.20027	In a nutshell, torn between the extreme ends of high compile-time cost and large code size of a C++ flavored implementation and the high runtime cost and dangers of boxing/unboxing (Java), Golang opte...		endymi0n
30524826	11.646492	-7.8608165	comment	3.0	12.0	1646206911	10.156259	There is absolutely nothing mentioned in your comment that Java or C# didn’t already do better 10 years ago, let alone now. The only somewhat redeeming quality of go is virtual threads, but that is not even the reason like 90% of its user base uses it for.		kaba0
30529753	12.074895	-7.179612	comment	3.0	21.5	1646241146	0.20442328	"I'm curious what you mean by ""empty promises""? If it's what I hope it means, those are things I experience as thwarted dreams instead."		aklemm
30532644	12.3420925	-7.5848775	comment	3.0	10.5	1646252941	8.563164	Haven't used Lombox, RxJava is great, but it just feel like bandaids on a language that wasn't really designed for it.There's no accounting for taste, but I'll take either Scala or Clojure on the JVM ...		tombert
30578325	11.919242	-7.4852386	comment	3.0	23.0	1646581772	-9.537267	This can cut both ways.Yes, if you choose Haskell, a Lisp, or something like Erlang, you can get smarter/better devs. But the flip side of that is that the types of people who tend to gravitate toward...		tharne
30578702	11.993543	-7.7689123	comment	3.0	17.5	1646584517	10.429688	Personally, I think monads are hard to understand in Haskell mostly due to its quite complex and comparatively ad hoc type system.Let's remove all the complexities that are introduced by the static ty...		triska
30581158	11.950386	-7.42747	comment	3.0	11.5	1646600025	7.2313833	This list is pretty FP-biased (even Scala, despite being a hybrid language, is mainly well-known for the FP bits it brings to the table rather than any new innovations on the OO side).There's a lot of...		dwohnitmok
30623483	11.647252	-7.0954256	comment	3.0	10.5	1646889706	-7.6697154	"For this particular use case, shouldn’t you just set the default value in the function definition or am I missing something?    Def myfunc(foo=“Bar”):
        pass"		wodenokoto
30623641	11.990249	-7.7248335	comment	3.0	13.5	1646891811	10.424278	I don't think I even know what you mean by 'how computers really work'. Isn't the point of languages to create abstractions so I don't need to learn how a CPU works?I understand why Haskell will never...		Alekhine
30639974	11.640517	-7.9445543	comment	3.0	11.0	1647007269	10.167915	I'm curious why there isn't a push for more support in desktop gui for Go.Is it because desktop gui is not as supported in modern times and Go is a recent language that is carrying that attitude or is...		badhombres
30622266	12.054754	-7.112174	story	3.0	60.0	1646876175	-8.545881	How to Use Lambdas in Ruby (2020)	https://scoutapm.com/blog/how-to-use-lambdas-in-ruby	mooreds
30664356	11.705941	-7.682316	comment	3.0	18.0	1647196574	10.133385	This is great. I always thought that GoF patterns is largely obsolete in 2022, it would be nice if the author agreed and has a list of GoF patterns that really dont make sense any more. Builder was one I thought should be included but OP seems to think its relevant (though different).		rr808
30687428	11.677191	-7.9776425	comment	3.0	16.5	1647362213	10.1735	> Where are they going to goPay for your own hosting.		root_axis
30688785	11.623429	-7.9319997	comment	3.0	12.5	1647367780	10.241384	> However the creators of Go responded to critiques of the language in a patronizing manner and talked down to their own programming community at Google as being unable to handle complex languages.Can...		ainar-g
30689082	11.674807	-7.663852	comment	3.0	18.0	1647369113	10.088303	"No one meaningfully ""requires generics"", people are just reluctant to set their ego aside and learn a different approach. Some use cases may benefit from generics, but even then ""require"" is too strong."		throwaway894345
30690764	11.676938	-7.5936065	comment	3.0	20.5	1647374604	10.06571	I see it the other way around, generics reduce complication and allow for code that's a lot more elegant and simple than without. It definitely adds complexity on the compiler side of things, but usin...		HideousKojima
30694393	11.654091	-7.640468	comment	3.0	14.5	1647395988	10.134151	"This is what policies are for, not entirely new languages: if you don't like generics and don't trust the end developers at your organization to not use them in stupid ways you should maybe (I say ""ma..."		saurik
30695274	11.642955	-7.9245133	comment	3.0	21.5	1647404322	10.222507	I’m a big fan of Go adding generics, but I can see some of what people are worried about. I don’t think it’s “business logic that would benefit from being made generic”, it’s that generics allow peopl...		yashap
30713546	11.77113	-7.4307804	comment	3.0	11.0	1647537497	8.881353	"This is an interesting article, but doesn't give a good definition which distinguishes sets from (mathematical) types, though it hints at it with ""types are syntax, not semantics"".I suppose the main d..."		colanderman
18257162	11.622316	-7.288397	comment	3.0	10.5	1539961443	7.1920342	"Uniformity, which is a really good thing. Surely you could say 
   (class-of 3) or (class-of nil) or (class-of '(1 2 3))
but technically these values are not objects, like it is in, say, Scala, which ..."		throwaway487548
18264905	11.915899	-7.272732	comment	3.0	14.0	1540062959	7.0627556	I can count on 0 hands how many times I have used inheritance in the past 6-7 years. And if you don't count times that a framework requires me to use it to accomplish something, like React.Component or NSTableView, then that number goes back something like 15 years.		sdegutis
18287687	12.010825	-7.777006	comment	3.0	10.5	1540330278	10.371386	"Given that he already knew how to define a Monad instance for his type, the Applicative instance could simply be:    import Control.Monad (ap)
    instance Applicative Tree where
       pure  = return..."		nybble41
18288152	12.348815	-7.0195208	comment	3.0	11.5	1540334637	-10.65943	So is this by the same people behind 'vanilla' perl (Larry etc)?I am assuming not but could not immediately find the information on the (mobile) website.		Insanity
18288546	12.445811	-7.046235	comment	3.0	20.5	1540339159	12.934928	> without a lot of the strange quirks of perlAnd instead with a lot of the strange quirks of Ruby!\s, only kind of, I love Ruby but it does have a few quirks that I see confuse some people coming from...		cutety
18288668	11.813789	-7.2190475	comment	3.0	15.5	1540340731	7.010362	People coming from Javaville or C#land definitely don't have that kind of abstraction (and yes, the usual rebuttal is that they're procedural, not OO).		Fellshard
18288885	12.019711	-7.521131	comment	3.0	12.5	1540343437	10.435063	> I'm not exactly sure why I started reaching for Python instead.Oh, I am quite sure. Looks like Perl6 changed that, but it's because I was never sure that data structure should be a reference to a di...		marcosdumay
18293583	11.960702	-7.6865363	comment	3.0	11.0	1540396867	10.533352	"+1. When GP leaves a job and a ""Python Programmer"" is hired to replace him/her, their life will be hell. At that point one can only hope that GPs next gig is at a Haskell shop where every single function returns an IO action :)"		mavelikara
18313516	12.330112	-7.0372386	comment	3.0	12.5	1540597610	13.198317	Reports of perl's death are greatly exaggerated.		ryl00
18314926	11.98122	-7.0863056	comment	3.0	16.5	1540630381	-10.2292	> In a dynamic language like JavaScript, it can be hard to know what the shape of your data is.Being dynamic doesn't preclude variables from being type checked by the runtime. Reading this just sounds...		stephenr
18315129	11.791877	-7.3506403	comment	3.0	11.5	1540635283	-8.903229	How would static typing help you if it's two different applications like the post you reply to is talking about?		Kiro
18292503	11.786203	-7.1478662	story	3.0	41.0	1540389909	7.021375	Introduction to Object Oriented Programming in Python	https://stackabuse.com/introduction-to-object-oriented-programming-in-python/	ScottWRobinson
18346025	12.486099	-7.83822	comment	3.0	14.0	1540996661	-11.137243	I use Clojure in the large, and the lack of static typing isn't something I miss. FWIW, spec allows you make similar guarantees if you use it (technically more, since you can express more than HM type...		KingMob
18347073	12.016795	-7.4017305	comment	3.0	10.5	1541003154	-10.78727	Haskell does REPL-driven development fairly well. It's not the best REPL, but it works, especially if you take a moment to learn a few of the commands to drive it. Dynamic types are not necessary for REPL-driven development.		jerf
18370156	12.057743	-7.7487984	comment	3.0	19.0	1541253174	10.453649	I enjoyed using it in college during my programming language theory course. However, I thought it was meant to be more of an academic/teaching language. Why should a company use it over Haskell or Clojure?		hayden592
18377778	11.905362	-7.443932	comment	3.0	10.5	1541361403	7.3215976	I don't understand how this is useful. The purpose of functional programming isn't to make everything immutable, but to use immutability to prevent unnecessary change of state which can result in flak...		kyleperik
18383792	12.33086	-7.072157	comment	3.0	15.5	1541436677	13.187112	"This is an interesting bit that HN seems to discuss a lot:Some community members believe ""Perl 6"" is a very confusing name: it uses a digit as part of 
the name and it conflicts with the name of a sis..."		kbenson
18396263	11.907512	-7.0791698	comment	3.0	13.0	1541551590	-8.840966	The repo includes a DESIGN.md file that describes the design motivations for the library, and it's definitely worth reading. It goes through a few really powerful techniques for writing misuse-resista...		QuinnWilton
18415064	11.633146	-7.600639	comment	3.0	20.0	1541777229	10.007738	> generic code is replaced by its concrete instances, which are fasterIf you're using a shitty compiler, yes.		vmchale
18423119	11.594752	-7.7738953	comment	3.0	11.0	1541879266	10.17051	I prefer to use .NET Core / C#. It is very fast, async, cross-platform, open source and unlike GO, it is a high level programming language. One disadvantage is that compilation time is not as fast as with GO, but it was improved over the last years.		germanyhater
18410565	11.729564	-7.1543117	story	3.0	149.0	1541715429	5.5715938	Object-oriented design patterns in the Linux kernel (2011)	https://lwn.net/Articles/444910/	zwliew
18410606	11.618394	-7.052829	story	3.0	61.0	1541715772	9.689532	Production Rules (Read-Eval-Print-λove)	https://leanpub.com/readevalprintlove004/read	drnewman
18470077	11.596012	-7.919964	comment	3.0	11.0	1542388669	10.150244	Based on my experience porting Wren's interpreter to Go, I would expect this to be about 3x slower than a C interpreter (without JIT). But someday I hope to be pleasantly surprised.I don't believe Go ...		skybrian
18474025	11.857528	-7.032828	comment	3.0	12.5	1542430463	-9.074339	> why do I have to type so much?As someone who came to it from Ruby, that is often my question about Python :)		BurningFrog
18473990	11.913672	-7.5365653	comment	3.0	15.5	1542429693	10.33994	Same with Haskell or ML family languages.		jolux
18520900	12.051502	-7.756259	comment	3.0	13.0	1543043838	10.330221	> Promises do that are simpler and do not form a monad?Promise is just an Abstract Data Type. It does not have to be an instance of a Monad.https://docs.racket-lang.org/referenc/Delayed_Evaluation.htm...		throwaway487549
18520722	12.001774	-7.75281	comment	3.0	16.5	1543039494	10.371297	That means they do meaningless unnecessary wrapping too. It is even more ridiculous for a weak-typed language.The only point of a Monad is that in a lazy language it desugars into an implicit nested f...		throwaway487549
18527045	12.022688	-7.4156117	comment	3.0	12.0	1543156897	-10.532487	No true Scotsman.>Because it's easyThere are lots of cases when forcing yourself to stick to OOP styles or programming is much less easy. You could look at various comparisons of code line counts of e...		gameswithgo
18537741	11.776831	-7.3473067	comment	3.0	11.0	1543274300	-8.892737	Why would a programmer have an intent about types to express unless s/he had been trained to think of programming in terms of static typing?		spenrose
18562165	11.6505165	-7.9600625	comment	3.0	14.0	1543514202	10.246989	>I tried Go a while ago. I was hooked by the performance , the community around it and vendors support ( AWS , Heroku , GCloud etc...) but I got quickly fed up by the awkward package management system...		treis
18566490	11.631796	-7.823818	comment	3.0	12.5	1543549451	10.142786	Wouldn’t this make golang slow though?  Isn’t that what people claim makes python slow?		mrfusion
18566579	11.784391	-7.615567	comment	3.0	14.0	1543550772	10.110917	"If x represented a set with some values  x = {RED, GREEN, BLUE}

It would be really swell if the optional type `Maybe x` were a strict superset:  Maybe x = {RED, GREEN, BLUE, None}

This means functio..."		yen223
18578766	11.662747	-7.3184724	comment	3.0	11.0	1543696502	-8.871538	Is it really? Types just help formalize (for you and the compiler) what the code actually says.Types or not, the refactored code itself is still refactored.		josteink
18521653	11.876345	-7.089226	story	3.0	32.0	1543061302	-10.768465	Fifolock: Synchronisation primitives for asyncio Python	https://github.com/michalc/fifolock	michalc
18596670	11.708202	-7.31461	comment	3.0	11.0	1543902547	-8.865718	Good question. At the moment it's static. I plan to make it do online learning at some point where it updates the weights as you use it.		tectonic
18605266	11.637783	-7.3266444	comment	3.0	17.5	1543976841	5.017077	> modern language features that encourage inherent reliability and safety of codeIt's still missing linear/affine types, no? To me that's inexcusable given the current offering.		vmchale
18609497	11.694722	-7.48345	comment	3.0	41.5	1544026068	9.762825	Nice, clear summary.I'd like to throw some more thoughts out there, though. Focusing overmuch on what Java did leaves the picture somewhat incomplete.First off, I've seen some people suggest that type...		bunderbunder
18609954	11.743233	-7.515729	comment	3.0	19.5	1544028505	10.024485	Scala could be ported .net easily enough, but it couldn’t interop with reified generic APIs. MS actually doesn’t use generics as aggressively as it could in its API for similar reasons (eg there are two APIs for collections that use genetics and don’t).		seanmcdirmid
18610302	12.03091	-7.568652	comment	3.0	12.5	1544030435	11.814523	My understanding is that the problem was, more specifically, that they couldn't easily get Scala's types mated to .NET, and that was in turn an implication of the decision to use IKVM to run the Java ...		bunderbunder
18619652	11.705082	-7.91544	comment	3.0	16.0	1544114935	10.288682	Is this a research language? I don't understand how this offers anything beyond what already exists.I'm also suspicious of the fact that it's implemented in Go. I would think that someone who knew fun...		vmchale
18626203	11.765512	-7.4020247	comment	3.0	12.5	1544174562	-8.936089	> Weakly/dynamically typed.These terms do not mean the same thing, and the two languages you mention are not weakly typed.Strong typing means, roughly, that type errors can be detected at some point. ...		tom_mellior
18634034	12.281276	-7.0228195	comment	3.0	26.0	1544245875	13.175514	No, it's designed.  It's just not designed the way everyone expects a computer language to be designed.  It was designed by a linguist.  He produced a language with some of the flexibility (and messin...		AnimalMuppet
18644410	11.635491	-7.3769064	comment	3.0	10.5	1544403973	9.125012	I'll take fibers that yield automatically on blocking operations over async/await most days for most tasks. It's slightly less flexible, since you can only wait for one async action at a time per fibe...		sifoobar
18653389	11.6391945	-7.9512453	comment	3.0	13.0	1544504852	10.213393	To agree with you with a slight rephrase: what makes idiomatic go code is very murky lately. With new changes in the horizon (Go 2 proposals around error checking and generics) the current solutions j...		jzoch
18667786	12.0056505	-7.6889663	comment	3.0	11.0	1544648915	10.429145	"Lisp lost it's last bastion, the hipster, ""I'm smarter than you"", ""the infinite is possible"", to Haskell. Enough said."		21
18669378	12.121285	-7.494059	comment	3.0	14.0	1544667061	-10.569997	I played around a lot with F#, and I really like it, but I got to this question of why use F#, and it is actually really hard to come up with a good answer to it, mainly because C# is really good and ...		keithnz
18669785	12.198339	-7.618299	comment	3.0	11.5	1544674084	11.934795	I haven't really played much with Scala but I would say there are reasons why I will not and stick to F#:- JVM is less efficient for generics than the CIL (casts happening at runtime underneath).- I'v...		knocte
18670038	12.143985	-7.5096827	comment	3.0	11.5	1544678691	-10.587642	"It strikes me as nonsense. Let's take the paragraph and replace ""F#"" with ""C"", "".NET"" with ""PDP-11"", and ""Core"" with ""V6 Unix"".Come on, surely you can make a non-.NET dialect of F#. Sure, not every .N..."		kazinator
18670751	12.071811	-7.476327	comment	3.0	13.0	1544689677	-10.583382	"""F# is not cluttered up with coding “noise” such as curly brackets, semicolons and so on.You almost never have to specify the type of an object, thanks to a powerful type inference system.""As a C++ pr..."		gambiting
18654932	11.657309	-7.972857	story	3.0	4.0	1544532266	10.187531	Ask HN: What do you dislike most about Golang?		networkimprov
18706220	11.732295	-7.425195	comment	3.0	13.0	1545139382	-8.695233	I fundamentally disagree with the author's thesis. I don't think dependent types are the future of development, but instead I'd bet on refined types (or contracts - see my experiment [0], Liquid Haske...		tomp
18708030	11.79712	-7.180329	comment	3.0	15.0	1545151835	-8.955851	> I regularly wish python required some sort type indication for function parametersYou can use type annotations, either via the builtin lib or 3rd party libs!https://docs.python.org/3/library/typing....		closed
18708192	11.690089	-7.134903	comment	3.0	12.5	1545152751	9.3449955	Indeed. My personal bugbear is lack of multiline lambdas. I use these all the freaking time in JS and it's infuriating that I can't in python.At the end of the day it's a minor complaint of course.		nicoburns
18709638	11.892305	-7.3477902	comment	3.0	15.0	1545160684	8.861382	We found it quite nice for properties of objects that appear over time. Think things like Order that might or might not have delivery details. In C# you are making classes with nullable delivery times...		ambulancechaser
18711732	12.127334	-7.6400414	comment	3.0	18.5	1545177205	-10.61187	F# seems like such an amazing language every time I look at it — a modern version of OCaml, with a clean syntax, some novel ideas, and fewer legacy warts.However, I wish that it had, like OCaml, a nat...		atombender
18716599	11.646198	-7.94564	comment	3.0	11.5	1545235747	10.223103	"Does anyone know what the story is for binaries generated by things your project depends on?  npm versions them and lets you invoke them from the project with ""npx""; I wish something like this existed..."		jrockway
18732831	11.681156	-7.9195395	comment	3.0	10.5	1545393703	10.211169	">> Almost no one is forced to use Go, and yet people flock to it.Well, at some point people ""flocked"" to javascript, and they weren't forced to. So it's a good language, then? Or sub javascript for java, or your favourite bashable language."		YeGoblynQueenne
18741764	12.017629	-7.6515365	comment	3.0	11.5	1545502975	-8.7385025	Are you sure that he doesn't understand it, or is it possible that you haven't worked with the same scale of systems he has?Here's my response to his talk, which I found insightful:https://lobste.rs/s...		chubot
18744446	11.77202	-7.5878925	comment	3.0	10.5	1545539648	10.079929	Why is it illogical to say that a Maybe a -> b should be callable as if it were a -> b?His point is that Maybe a should be composed of all the values of a, plus one more value, nil.  A value of type a...		nadagast
18752593	12.478214	-7.1362476	comment	3.0	14.5	1545666046	-11.1971855	Try Crystal and you get the joy of Ruby enumerables together with a static type system.		yxhuvud
18757219	11.948061	-7.4795165	story	3.0	2.0	1545742233	7.2880697	Ask HN: Why do so many people on HN love FP?		js4ever
18758328	12.254161	-7.6485834	story	3.0	14.0	1545760219	11.936456	Migration to Scala 3. ﻿Yes, there are porting problems. Macros are the problem	https://scala.epfl.ch/minutes/2018/12/05/december-5-2018.html	AheadOfTime295
18795584	11.722895	-7.3287916	comment	3.0	12.5	1546276846	9.075448	I've been looking for an example that shows how pattern matching can make code much both compact and readable. I think this does nicely. Here's an example in Scala:  (1 to 100).map(i => (i % 3, i % 5)...		andrewstellman
18817031	12.470931	-7.8563623	comment	3.0	10.5	1546536918	10.462114	On that topic Haskell is soooooooooo much more readable than clojure to me		johnwyles
18820967	11.762847	-7.1386228	comment	3.0	15.5	1546562846	-8.563208	"""Pythonic functional"" seems like a contradiction of terms, considering python's infamous hostility (e.g. http://fold.sigusr2.net/2010/03/guido-on-functional.html) to functional programming seems like ..."		darkpuma
18833025	11.9400015	-7.078385	comment	3.0	10.5	1546710739	-5.5433245	My background is in pure mathematics, where an isomorphism is a structure preserving map between two objects. The description “an isomorphic...JavaScript function” does not make grammatical sense to m...		smohare
18816277	11.733253	-7.307843	story	3.0	2.0	1546532765	-8.856248	Ask HN: Do you buy into types?		mdgrech23
18802880	12.307527	-7.3288474	story	3.0	53.0	1546382584	7.055366	Travels with Smalltalk (1995)	https://web.archive.org/web/20130612055149/http://www.mojowire.com/TravelsWithSmalltalk/DaveThomas-TravelsWithSmalltalk.htm	fanf2
18836733	11.649465	-7.969618	story	3.0	63.0	1546752615	10.218695	Golang Example	https://golangexample.com/	heshanfu
18845685	11.936638	-7.3589272	comment	3.0	17.0	1546873638	6.9094276	What's there to regret? For purely edification purposes, there isn't a better OOP language ( though it encompasses  other paradigms as well and isn't purely OOP ) since it doesn't have training wheels...		porpoisely
18850331	11.812851	-7.1416364	comment	3.0	12.5	1546896576	8.8689	> Can you explain what Java offers with regard to reflection that JS doesn't?Among hundreds of other things, getting the return type of a method and getting the input parameter names (+ types) in a wa...		orf
18914326	11.914201	-7.327034	comment	3.0	10.5	1547581873	6.97709	I had the same thought when I saw that.  There seems to be a trend to seal and lock down classes preventing any kind of extension.  It sort of misses one of the main benefits of OOP and I know what I'm doing.		wvenable
18855306	11.903667	-7.3549094	story	3.0	2.0	1546953540	7.097444	When did the OOP principles change?		luminousmen
18891966	11.778738	-7.09748	story	3.0	20.0	1547311677	4.9986863	Ask HN: How to get better at large system design?		zodvik
18894018	12.424535	-7.45759	story	3.0	116.0	1547337207	-9.620666	Property-Based Testing with PropEr, Erlang, and Elixir	https://ferd.ca/property-based-testing-with-proper-erlang-and-elixir.html	mononcqc
18901460	12.1620865	-7.522006	story	3.0	94.0	1547453097	-10.613465	A Fairy Tale of F# and Durable Functions	https://hackernoon.com/a-fairy-tale-of-f-and-durable-functions-975ccc4d46b8	kiyanwang
18903558	11.80158	-7.4074492	story	3.0	34.0	1547479104	8.154478	Exploring the Peano Axioms Through Algebraic Data Types	https://francisrstokes.github.io/blog/blog/2019/01/12/exploring-the-peano-axioms-with-algebraic-data-types/	FrancisStokes
17226318	12.414937	-7.131494	comment	3.0	11.0	1528107515	12.368041	"The obvious part is that Ruby does not have a distinction between ""compile time"" and ""runtime"". As such, if you want to catch those cases, you need tests.Duck-typing can be boiled down to: The type of..."		vidarh
17241360	11.870723	-7.7925277	comment	3.0	13.0	1528227948	10.275386	Any plans for “stack full” co-routine(go style).IMHO the current “Futures” monad style solution makes the code look a bit confusing.		zxcvhjkl
17241521	11.69281	-7.301128	comment	3.0	11.5	1528229139	9.193834	I disagree. For the use case of single thread concurrency, async/await is easier to reason about, since you don't have the added abstraction of a separate execution thread (that isn't even actually a ...		woah
17249998	11.681618	-7.9336905	comment	3.0	11.5	1528311493	10.196845	Once you've paid the upfront cost of learning Golang, I might agree with you. But then again, in particular when building a full stack app (and not when on a team that has back end and front end speci...		chrisco255
17273969	11.631116	-7.94052	comment	3.0	10.5	1528565056	10.186533	Well okay, but this raises the question of why code needs to always fit within 80 columns. The Go developers decided that it doesn't, and it's fine to check in the code as-is.(In particular, automatic...		skybrian
17298289	11.702333	-7.5431356	comment	3.0	10.5	1528839486	10.0378275	How does Go statically type check collections, then? It seems like a pretty common, desirable use-case to me.I could understand not missing this if you're coming from a dynamically typed environment, but understand that many people aren't.		jjoonathan
17329925	11.615731	-7.1707387	comment	3.0	12.0	1529189662	9.198462	Python's lambda also has an interesting design flaw that anyone using it will come up against sooner or later [1]. The way it interacts with Python's scoping rules is quite broken. This hinders using ...		roenxi
17337586	11.82285	-7.757712	comment	3.0	26.5	1529323602	10.382506	There's a difference.  First, you're not incurring a large runtime penalty, so this works better in higher performance scenarios.Second, you're trapping and propagating successful values in a monad, which means your obligating the caller to handle both success and error conditions.		steego
17338474	11.975541	-7.313355	comment	3.0	18.0	1529331924	7.1248207	"Same for OOP, example from 1988:""Building a backtracking facility in smalltalk without kernel support""[1]Languages like Snobol, Prolog, and Icon were designed with backtracking facilities from the out..."		mpweiher
17339893	11.934806	-7.409742	comment	3.0	14.0	1529342099	7.1017413	It's extremely frustrating that whenever anyone talks about even the slightest positive mention of FP, this site tends to immediately have 2-3 folks pop out of nowhere demanding that everyone recogniz...		KirinDave
17289385	12.011989	-7.0802803	story	3.0	8.0	1528758349	9.0815	JavaScript: Async math is hard	https://dev.to/antogarand/javascript-async-maths-is-hard-5b6i	AntonyGarand
17332329	11.720657	-7.3962555	story	3.0	55.0	1529243004	-8.747438	Beyond the type system	http://lucteo.ro/2018/06/17/beyond-the-type-system/	ingve
17361444	11.796849	-7.1599154	comment	3.0	19.0	1529545982	-8.47983	Nah, I'm with you.  Trying to do the same in Haxe.  There's not a first class language for typed tensor ops.  Type information could include dimensionality, and remove a whole bunch of stupid, time consuming errors.		jdonaldson
17366330	11.618805	-7.0350394	comment	3.0	13.5	1529596867	8.504097	I've heard theorists say exactly this a number of times before.The reason Java isn't a 'pure' object-oriented language is simply performance.Suppose everything - even every int - is heap-allocated. Yo...		MaxBarraclough
17382417	11.613121	-7.872292	comment	3.0	16.5	1529776505	10.163125	>Go’s lack of generics means that you have to write mapStringToString as a mapper between collections of two fixed types – you can’t write a generic map from an array of T to an array of R, as you can...		daenz
17383135	11.667917	-7.9106207	comment	3.0	12.5	1529784144	10.1491165	Hello - author here.  Just wanted to point out that this isn't a new framework, it's a proof of concept that existing GopherJS (go transpiled to javascript) apps can run in Go/wasm with little or no m...		bketelsen
17404860	11.613301	-7.903097	comment	3.0	17.5	1530057537	10.223072	I think I just realized something about golang as I was walking down the hall. This is something which confuses many people in a way which many respond to with unwarranted emotion, since they are unab...		stcredzero
17441234	12.006142	-7.7807727	comment	3.0	26.5	1530536216	10.424489	"This isn't about the state monad, it's about seq. ""But now seq must distinguish ⊥ from λx → ⊥, so they cannot be equal. But they are eta-equivalent. We have lost eta equality!"" - once you lose eta equ..."		lmm
17441619	11.904138	-7.6928654	comment	3.0	17.0	1530539839	10.40716	> even Haskell sometimes has to compromise purity for practicality.Well, the designers of Haskell made reasonable decisions based on what was known at the time. I'd argue that Idris shows that we don'...		lmm
17442622	11.799377	-7.2619505	comment	3.0	28.0	1530546265	-8.938971	Because static typing primarily focuses on showing that your types align. This is completely tangential to knowing that the code is doing what you intended.In fact, it's often at odds with understandi...		yogthos
17445672	11.594113	-7.192954	comment	3.0	15.5	1530568496	8.779713	I think you missed the point I was making which is that you still have to know that you're proving the right thing.It's entirely possible to have a but in the proof itself, at which point your program...		yogthos
17451723	11.813641	-7.1365886	comment	3.0	10.5	1530636739	9.207319	How is this meaningfully different from the Java 8 Streams API?  It seems to be functionally equivalent right up to lazy evaluation, just with SQL vocabulary (select, where, etc) instead of functional vocabulary (map, filter, etc).		Arcsech
17453884	11.668806	-7.123651	comment	3.0	23.5	1530654929	9.214853	I hope I'm not the only person who reads this and really, really dislikes this.If Python's gonna have breaking syntax, why not work on bringing it more in line with other modern languages that don't r...		KirinDave
17458945	12.06377	-7.7591777	comment	3.0	11.0	1530731477	10.442093	"I'm wondering whether Ceylon could be considered a modern day Ocaml substitute?
It has a very strong type system, focus on immutability, a strong module system and Object Oriented capability. What's missing?"		jonloldrup
17459608	12.085269	-7.82163	comment	3.0	12.0	1530740988	10.390241	"Is there something you'd recommend for a person who wants to learn OCaml? Maybe some book that has great exercises, or just a toy-project example for which OCaml would be a much more ""natural"" pick than other languages?"		krick
17463910	12.21281	-7.5347276	comment	3.0	11.0	1530803778	-11.36893	I've been doing Kotlin on the backend for a while now, and I can't recommend it enough. One of the things that I really enjoy about the language is that it is _not_ a clever language. It's not trying ...		pdpi
17484440	11.801667	-7.3128934	comment	3.0	11.5	1531066080	-8.9500265	"This starts off with a misunderstanding of what ""strongly typed"" means. Python is strongly, but dynamically typed.Static typing means you know the type of something at compile time. Dynamic typing mea..."		lvh
17501939	12.459029	-7.6669955	comment	3.0	11.0	1531255195	-13.259187	This is exactly what we've been preparing for.  Don't use yaourt, and read those diffs.  I know a lot of people don't do this, but it's important.		jdlyga
17510238	12.23414	-7.6286187	comment	3.0	16.5	1531342826	11.949604	Discouraging OO would be the worst thing Scala could do. Its one really unique capability is the fusion of OO and functional: it's a language that can go toe-to-toe with Haskell, yet also one that let...		lmm
17513393	11.961013	-7.733899	comment	3.0	13.5	1531392124	10.40861	"Here are a few examples:- Inferred types: you're constantly wondering ""what is the type of this variable?"". Type errors occur far from where the real type error is. Annotating is complicated because y..."		emersion
17469890	12.107063	-7.616108	story	3.0	70.0	1530866452	11.868902	Functional Typelevel Programming in Scala	https://github.com/dotty-staging/dotty/blob/add-transparent/docs/docs/typelevel.md	nuriaion
17534218	11.7227125	-7.4018683	comment	3.0	10.5	1531640417	-8.8360615	I'm not sure I understand his point. He wrote the function, and in under a second, he was able to easily run it to test it and got a type error.The only difference in a static world would be the error...		didibus
17536645	11.657603	-7.2307553	comment	3.0	14.5	1531683222	9.089631	"Having made ""async"" the default, you've just returned to regular threading, which is what we should have stuck with all along. The thread model is actually pretty useful, the pitfalls are well understood, and the tooling very mature."		quotemstr
17536743	11.843357	-7.1720996	comment	3.0	13.0	1531684534	-8.973803	THis. I think the type hint system adds so much visual noise it starts to look like perl. When an attempt to build huge (100k+) project with Python failes, it is not because of the duck typing, but simply because Python is not designed for such use cases.		abakus
17567345	11.728295	-7.423707	comment	3.0	10.5	1532014910	9.603696	> If Java had generics in the beginning, it would look a lot different and the type system would be more powerful and safe.And conceivably a good deal faster, too. My understanding is that the JVM is required to constantly perform runtime type checks.		MaxBarraclough
17602542	11.737576	-7.861086	comment	3.0	13.5	1532449595	10.171498	Our company uses Go. Most people who join have no experience in Go yet usually they can get comfortable with the language in 1-2 weeks to start contributing. I know nothing about Node/JS but I'm sure that takes much longer?		pkaye
17614685	12.014046	-7.2016897	comment	3.0	13.5	1532572641	9.17712	"Now, what do you do when you want to return from that function after loadRealImage() finishes?  function loadImage(src) {
    loadRealImage(src).then(img => /*... return img from loadImage ...?*/);
  ..."		sillysaurus3
17633496	12.247351	-7.5880494	comment	3.0	11.0	1532790811	-11.384379	Good question, since Google’s adoption of Kotlin was seen as the death knell for Scala.		seunosewa
17633399	12.247043	-7.6424904	comment	3.0	15.5	1532789562	11.937262	Off topic: Is Scala still being adopted by new teams? I did couple of Scala dev jobs and later the market kind of died down, want to know if others are witnessing the same.		alienallys
17637233	11.691692	-7.159395	comment	3.0	11.5	1532856269	8.234169	Ergonomics of using a feature plays a big role. The was a famous example when a programmer  did something likebigDecimal.doubleValue() + bigDecimal2.doubleValue()just because Java does not have operator overloading and using methods instead of familiar operators was ugly.		_0w8t
17645806	11.989083	-7.8192353	comment	3.0	21.0	1532969092	10.416726	> Monads in Haskell are used as a mechanism for scheduling evaluation, thus turning a language with a hard-to-predict evaluation strategy into a language with predictable, sequential, interactions. Th...		lmm
17645838	11.999373	-7.7699475	comment	3.0	11.0	1532969292	10.425113	>since the implementation details of any given monad have very little to do with monadsWell, yes, that's the point. You don't need to understand anything about monads to understand how the implementation of >>= for IO forces the correct order of side effects.		foldr
17646793	11.936168	-7.7131557	comment	3.0	14.5	1532975627	10.355969	"After many years of Haskell, I was playing around in C the other day for fun. I'm writing low-level network code, and my code looks like this.int err = socket(...)
if ( err < 0 ) { do_something; }err ..."		tathougies
17647708	11.952442	-7.6768894	comment	3.0	12.5	1532982430	10.381757	"Could you elaborate? As a C guy, I'm interested what you think would be simpler than that simple code you posted. Structurally, what you just posted (minus the details about what ""socket"" and ""listen""..."		xamuel
17646813	11.998623	-7.782762	comment	3.0	27.0	1532975750	10.367691	If you're looking to understand what Monads are or why they're interesting this isn't the place to figure that out.Monad: if you have a data structure that wraps some value of any type, then you also ...		agentultra
17649838	11.707694	-7.0327353	comment	3.0	17.5	1533000524	8.429963	In my experience, writing java (or groovy here) in c++ results in horribly slow code which the jvm runs circles around, and it sounds like that's the problem your employee ran into.> But for all the a...		physguy1123
17669923	11.709338	-7.0454555	comment	3.0	10.5	1533196870	8.5834465	"This is what I love about Python. Every method is public, but methods that start with an underscore mean ""use at your own risk"". It suggests that the programmer use a preferred way, without strictly requiring it. Private methods treat programmers like infants."		speedplane
17671930	12.419106	-7.459422	comment	3.0	12.5	1533221851	12.80439	The BEAM is a preemptive VM. That means that no one long running process can hog resources.The BEAM was built on a principal of responsiveness since it was originally designed for telephonics.Here's a...		davydog187
17672108	12.2363615	-7.1826167	comment	3.0	11.5	1533223190	8.246456	Aside from preemption, the other notable difference is process management. They are incredibly lightweight in terms of RAM and CPU usage. You can create millions of them because they do not map direct...		teilo
17736896	11.838372	-7.7733607	comment	3.0	14.5	1533936719	10.305256	"The ML family languages are still so far ahead of ""mainstream"" languages in many ways. The first language I ever really learned was SML, my freshman year of college, and I swear there's still a part o..."		georgewfraser
17738506	12.107335	-7.6835694	comment	3.0	11.5	1533965282	10.50118	>an OOP-enabled ML like F# or Ocaml beats the pants off of the likes of something like pythonCan you explain why you think so?		vram11
17782162	11.619582	-7.9785743	comment	3.0	11.0	1534507785	10.237854	This is suppose to be funny , unfortunately this is the sad reality of what you'll find in 90% of Enterprise / Startups environment as well as THE majority of open source repositories of popular open ...		hashrate
17786807	12.131786	-7.5599523	comment	3.0	17.0	1534565408	11.909579	Having spent years working with numpy and Cython, then switching to Scala for years as well, I much prefer dynamic typing.Strong type safety is mostly just a waste of time.		mlthoughts2018
17797306	11.626069	-7.0402923	comment	3.0	12.5	1534731119	8.5610075	I'm really curious about the benchmarks used for Java (and C++).  List processing being 20x slower than C++?  Array access being 7x slower than C++?So yep.  A 16 year old benchmark when Java 1.4 was c...		shagie
17819859	11.994214	-7.718249	comment	3.0	13.0	1534955123	10.397677	"I read through part of the ""Learn you a Haskell"" book that was posted here yesterday, and started getting really excited to use this beautiful language.And then I started looking into ways to use it f..."		_bxg1
17819871	11.987091	-7.750505	comment	3.0	16.0	1534955225	10.387808	Addenda (relevant to community musings today):Be aware that as a small and very distributed community, the Haskell world has less power to eject bad actors than more centrally managed and resourced pr...		KirinDave
17820838	11.945147	-7.488528	comment	3.0	10.5	1534962923	7.310586	I can see why it would be bad for drivers, but why games? Functional programming has started to become popular in that space lately, and for good reason		_bxg1
17826924	12.266398	-7.678917	comment	3.0	11.5	1535029856	10.324303	OCaml is a very powerful language. I'm still discovering new features/patterns everyday. But coming from a background with C/Javascript, the syntax is definitely hard to understand. For this particula...		thangngoc89
17827841	12.079139	-7.798248	comment	3.0	10.5	1535036785	10.434866	"There is a work-in-progress second edition of ""Real World OCaml"" book [1], which has many small but vital updates corresponding to the modern state of OCaml and its infrastructure. Moreover, I recomme..."		xvilka
17784033	11.873869	-7.1582513	story	3.0	5.0	1534523719	-8.384399	Ask HN: Have You Ever Found an Explicit Use for JavaScript Closures?		madeuptempacct
17806208	11.643715	-7.9652176	story	3.0	29.0	1534816635	10.205809	The Go team is looking for compiler/runtime engineers for the next big stage	https://careers.google.com/jobs#!t=jo&jid=/google/software-engineer-compilers-runtime-go-355-main-st-cambridge-ma-02142-usa-4168430299	ngaut
17794292	11.956005	-7.7221	story	3.0	101.0	1534686470	10.410282	A Haskell Compiler – Slides on GHC Implementation (2013)	http://www.scs.stanford.edu/11au-cs240h/notes/ghc-slides.html	TheAsprngHacker
17842297	11.643132	-7.906364	comment	3.0	17.5	1535226840	10.195983	You can not have a custom collection class containing objects _only_ of a certain type. For example ConcurrentHashTable<Int, String>. That is something that is used every single day. It is used so fre...		lederhosen
17846422	12.351383	-7.600835	comment	3.0	26.5	1535298798	10.365014	If you want to use TEA but with easier interop with JavaScript libraries, you can use ReasonML/OCaml with bucklescript-tea[1] instead[1]: https://github.com/OvermindDL1/bucklescript-tea		thangngoc89
17857822	12.508214	-7.066292	comment	3.0	11.5	1535453698	12.382767	> These days if your chosen language doesn't have things like strong typing, interfaces, good debugging tools, a good compiler, etc, then you should definitely be asking yourself if it's the right too...		ryanbrunner
17860482	11.668177	-7.652824	comment	3.0	12.5	1535475430	10.139395	I've always been of the opinion that generics would be nice to have.  But people were acting ridiculous about their exclusion.  You can write plenty of useful programs without them.		reificator
17860758	11.622219	-7.8272705	comment	3.0	14.5	1535477151	10.175251	I am not quite fond of the idea of having C++/Java Style Generics (I simply don't like the syntax that comes with it), but I see that the current system is broken.From my current perspective I think f...		JepZ
17860748	11.661415	-7.6013045	comment	3.0	27.5	1535477052	10.07325	One of the main motivations for adding generics is that we could then put typesafe algorithms and data structures in the standard library.		bradfitz
16170116	11.621105	-7.9318733	comment	3.0	21.5	1516211920	9.836148	I don't understand why AWS released Go support instead of binary support and I don't understand why they chose to rely on go's net/rpc.The Go 1.x runtime will happily execute any binary, go, rust, c++...		seniorsassycat
16170379	11.970368	-7.349469	comment	3.0	14.5	1516213636	1.7417996	Problem: Best practices change every 5-year, new patterns get deprecated by the hot-new opinionated framework at the moment.As a senior programmer is difficult to explain to jr's and sophomores to not...		SadWebDeveloper
16126389	12.241692	-7.5674477	story	3.0	69.0	1515695345	-11.365317	Takeaways from KotlinConf 2017	https://www.vokal.io/blog/vokal-takeaways-from-kotlinconf-2017	robbiea
16177634	11.699268	-7.8516474	comment	3.0	13.0	1516288442	-8.872911	Wow, Pony! Pony is one of my favorite young languages. It fits a similar niche that Go fits (not saying that either language can't be used for other purposes), in that they both are great for building...		Touche
16194148	11.715726	-7.821465	comment	3.0	11.0	1516468601	10.145438	"Really?  Escaping, people!  This code isn't practical or useful; it's dangerous and sloppy.    cout << ""<body>\n"";
    ...
    cout << getenv(""QUERY_STRING"");     
    cout << ""</body>\n"";


FWIW I wr..."		chubot
16208782	11.90399	-7.061807	comment	3.0	12.5	1516661017	-5.5102186	"pedantic, but I don't like this application of the term ""isomorphic"""		opportune
16212447	12.333365	-7.046671	comment	3.0	11.5	1516703933	13.200443	I used perl when dinosaurs still roamed the land. Can somebody explain why it took so long for Perl 6? I read first p6/parrot vm textbook as a schoolboy more than a decade ago.		baybal2
16212703	12.329759	-7.044838	comment	3.0	23.5	1516706926	13.17977	I agree, it definitely hurt mainline Perl development when Perl 6 was this promised great new thing. At least Perl 5 never got abandoned, and there is development and bugfixing still going on today.Pe...		joosters
16211475	12.32075	-7.529002	comment	3.0	12.0	1516688907	12.876368	The problem of static types for the communicating parts of the actor model is not really solved yet. In the meantime there's Alpaca-lang and Simon Fowler did a run-time monitor for Erlang with behavioral types from Scribble. I think we'll see some nice progress in this area in a few years.		Zalastax
16286277	11.95111	-7.5705037	comment	3.0	13.5	1517522024	-6.036288	My shop specializes in multiplatform FRP applications via the reflex haskell library [0].After many years of wrangling FRP my biggest learned lesson is certainly this: not everything is a stream! You ...		danharaj
16290581	11.75812	-7.0995092	comment	3.0	10.5	1517580710	-8.794884	Not to be a grump, but if you were using a staticly-typed language with any half-baked IDE 20 years ago, this behavior was available.		tootie
16305990	11.64616	-7.022967	comment	3.0	14.0	1517794004	8.937295	"    return {**old, 'foo': 'bar'}
    
    # Old way
    return dict(old, foo='bar')

Not much difference if you ask me."		est
16308286	11.807749	-7.470111	comment	3.0	21.0	1517832596	10.309192	"Once you've got return type polymorphism, you really start to miss it in other languages. The simplest example possible is ""mempty""mempty :: agets the ""default"" value of a. Which makes no sense in a l..."		moomin
16336051	12.0291395	-7.7741017	comment	3.0	13.0	1518127861	10.429508	"I view this as more of a general, why should somebody learn Ocaml instead of Haskell?There's a couple of reasons. 
#1. Ocaml's type system is nearly as expressive as Haskell's and includes several fea..."		chillee
16338259	11.74987	-7.8756785	comment	3.0	11.0	1518156595	10.130504	There is totally a router, ServeMux, which while basic is enough for 90% of basic tasks if you structure your requests REST-y.As for ORM, you should basically never use an ORM, ever. They’re a crutch....		donatj
16355058	12.241221	-7.6566677	comment	3.0	10.5	1518386316	11.93585	It looks really verbose only to render simple html.I had one really bad experience with Scala.js. When I used it, I noticed Scala was just not designed for the web (front end) and it just didn't work well for things really simple in JS.		fknop
16386514	11.853298	-7.311949	comment	3.0	11.5	1518720991	-6.0815024	This is a fundamental issue with multitasking, in that an independent task will have its own stack, so errors can't propagate up the stack of the function that started the task.e.g. consider this pyth...		rictic
16388189	12.05527	-7.206128	comment	3.0	11.0	1518732433	2.4500332	Promises don‘t swallow errors (sorry to be pedantic but there’s no concept of Exception in JS). They just propagate it to the rejection channel.What was your precise experience?		yuchi
16393020	11.936482	-7.3674383	comment	3.0	13.0	1518795362	7.030192	I agree, OO is ultimately good enough. Problem is, coding using OOP is like printing ideas on paper: you dont wanna do that because it's hard to discard ideas that's been printed on paper. You wanna u...		quadcore
16406563	12.237311	-7.6254926	comment	3.0	10.5	1518968965	11.930426	Does Scala have a visualization suite like ggplot, seaborn, matplotlib, or something similar?What benefits does this provide over existing python or matlab code?> Scientific Computing, Machine Learnin...		gravypod
16414366	11.994321	-7.743887	comment	3.0	23.0	1519062762	10.410447	Haskell has enormous momentum now[1], and it's speed of development is accelerating. I came to it not because it was cool, but because my experience maintaining and refactoring a big Python program ha...		Jeff_Brown
16414427	11.620772	-7.9443703	comment	3.0	13.5	1519063262	10.222539	"I have read many ""criticism of Go"" articles and this one is one of the most direct-to-the point.TL;DR: topics covered:1. capitalization rules create inconsistent behavior2. Structs do not explicitly d..."		flavio81
16415284	12.087841	-7.5723357	comment	3.0	16.0	1519070541	-11.100724	That's been the story of Haskell for over 10 years. The world and other language ecosystems are changing faster than Haskell is growing.Clojure and Scala give you an alternative to Python that have th...		fjsolwmv
16415834	11.973184	-7.7106376	comment	3.0	11.5	1519075134	10.390375	How much of it was haskell, and how much of it was just working with a statically typed language?		woolvalley
16420087	12.003225	-7.779366	comment	3.0	18.5	1519133038	10.415073	> What a Monad does is to force sequencing by creating a data dependency.Does it really?  Maybe this is another one of those famous misconceptions!https://hackage.haskell.org/package/tardis-0.4.1.0/docs/Cont...		tome
16420482	12.010792	-7.7909174	comment	3.0	14.0	1519136784	10.447214	"The sequencing is described precisely in the signature of bind.    (>>=)
        :: Monad m
        => m a         -- Left argument
        -> (a -> m b)  -- Right argument
        -> m b

You don’t n..."		bad_user
16420698	11.96344	-7.6008377	comment	3.0	14.5	1519138349	-12.342116	"Of course! When I said ""it can't be implemented"" I meant the logic that the continuation monad itself encapsulates, not async computations in general. For those you wouldn't even need promises, you co..."		pka
16421003	11.888379	-7.450577	comment	3.0	10.5	1519140431	-9.06021	"This is a syntax thing only. You can do the same in Smalltalk with an array of blocks (which are closures).  {
    [ user := url fetchUser ].
    [ address := user fetchAddress ].
  }

and pass that a..."		rbehrends
16421552	11.835464	-7.466162	comment	3.0	12.5	1519144378	7.5528765	"> delimits a stateful computation which can then be embedded in a pure one in a principled wayYou probably meant to say smth different, but to many this reads like ""you can embed and call impure code ..."		nnq
36548297	11.846894	-7.1522617	comment	3.0	12.5	1688203399	-9.003215	Quick comparison between CL with types and Typed Python as both are dynamic languages with types added later in?		ducktective
36549334	11.803468	-7.2919493	comment	3.0	17.5	1688214213	7.3665133	It is completely possible of course.I think questions like this are really getting at, is how do you update the 'huge-game-state' without mutating it, changing variables.People have a very ingrained f...		FrustratedMonky
36549856	11.7758045	-7.250296	comment	3.0	10.5	1688217912	-8.896237	Opposite of strongly typed is weakly typed or loosely typed.Opposite of static typing is dynamic typing.Both CL and Python are strongly and dynamically typed by default. Their values have well defined...		nabla9
36552444	11.652864	-7.9702997	comment	3.0	11.0	1688232126	10.263457	Oh, this might be how we finally get plugins in Go		Fire-Dragon-DoL
36569455	11.815107	-7.085941	comment	3.0	13.5	1688364813	8.435683	"Java is only slow to start the VM.  If your process is long-lived it's exceedingly quick because you only pay the startup penalty once.""GC pauses"" are greatly exaggerated in terms of impact and frankl..."		nvy
36569021	11.700887	-7.0709863	comment	3.0	26.0	1688359851	8.288402	Interesting how Java is so fast. Among the fastest of c, cpp, asm, go and rust.How?		langsoul-com
36570625	11.680649	-7.2923923	comment	3.0	12.0	1688376110	-6.637636	Was it really not possible to make that a shorthand for the existing structure with blessing variables? Having two object systems may make things too confusing.		gpvos
36589606	11.767409	-7.347227	comment	3.0	11.0	1688490847	-8.904649	IMO, it hardly seems useful to consider a dynamic language with statically checkable type annotations to be a static language.I think it’s interesting how static and dynamic languages have grown close...		jmull
36595173	11.600592	-7.0451655	story	3.0	3.0	1688527306	-6.7902946	Ask HN: What problems do Generators solve in Java?		redditor98654
36638114	11.689501	-7.9124556	comment	3.0	13.5	1688763023	10.24675	I think you're incorrect.It's good for the motivated engineer, because instead of running off and creating architecture astronautical wonders of over-engineering, they are getting down to business and...		lelanthran
36639972	11.789603	-7.1201725	comment	3.0	14.0	1688775486	7.3399415	I never got the factory thing. I just put the object creation logic in the object itself as static methods.For example here: https://www.tutorialspoint.com/design_pattern/factory_patter...I'd just hav...		winrid
36651033	12.344353	-7.0606017	comment	3.0	11.5	1688871024	13.184759	The brick wall of Perl 6 was itself a solution to an internal nightmare inside of core Perl development.  Particularly around conflicts involving Tom Christensen, which caused no progress to be made o...		btilly
36666092	11.92629	-7.360512	comment	3.0	11.0	1688995685	7.0955114	The core usefulness of OOP is usability.This is the reason I find it useful. To me, OOP is as much about your organization as it is about the best way to load, transform, present, edit, and store data...		padobson
36705644	12.022167	-7.7884903	comment	3.0	12.0	1689229570	10.45742	Another example is taking the Advanced Programming course and being exposed to monads without having done a ton of FP without monads.The “You could have invented monads, and maybe you already did” app...		sshine
36736070	11.661168	-7.378652	comment	3.0	14.5	1689424805	10.030802	"I am surprised an even more obvious interface definition of  public interface ExampleInterface {
      void foo() throws IOException, AnotherException;
  }

was not covered: is this also not supported?That would solve a lot of use cases if inheritance is respected."		necovek
36738455	11.839971	-7.5496497	comment	3.0	13.0	1689438722	10.391449	"You are very confused... ""strong"" in strong typing doesn't mean you have to write much or at all.  Actually, it doesn't mean anything really.  But, let's say, Haskell is probably at least as ""strongly..."		crabbone
36739733	11.868334	-7.229511	comment	3.0	11.0	1689446557	-8.765242	"Type inferencing can get you in trouble quickly. Consider this code:   var fireable = someMethod();
   firable.fire();

The programmer intended this code to fire an employee. Let's say this code is in..."		breadwinner
36742998	12.016508	-7.765574	comment	3.0	19.0	1689475232	10.454811	What percentage of Haskell jobs are crypto jobs? I bet it’s high		hsavit1
36746765	11.997955	-7.7345166	comment	3.0	13.0	1689514089	10.488676	We built an Android app in Haskell because Python was too hard for loading shared objects.We started from nothing in January, shipped the app last month.We have 2.5 developers.		shae
36763312	11.614148	-7.3723288	comment	3.0	10.5	1689624329	9.200229	Not sure I'm a fan.  Looking through the examples, I feel like this makes the language much harder to read and follow, but maybe that's just my own brain and biases.Further, it doesn't seem to me to allow you to do anything you can't currently do with blocking channels and/or state.		silisili
36764684	11.618366	-7.319885	comment	3.0	11.0	1689631392	9.251574	Looking at python's asyncio coroutine library, they are just mocking multithreading with asyncio.gather. Since coroutines can be executed in any order they are not really control-flow mechanisms. The ...		ketchupdebugger
36774901	11.616072	-7.942433	comment	3.0	11.0	1689696985	10.235936	I was very skeptical of Go, but after trying it, it quickly became my main and favorite language. I think the drawbacks of the language are easily offset by how powerful and simple it is.Its biggest f...		tail_exchange
36775644	11.652387	-7.9437323	comment	3.0	57.5	1689699484	10.245152	> Again, it shows how things have changed that I praised Go’s type inference as an advance in the state of the art, but now the Hacker News crowd considers Go’s type inference to be very limited compa...		wk_end
36775907	11.841607	-7.8356876	comment	3.0	10.5	1689700357	12.734212	Erlang had a better concurrency story than Go, and better error handling. But alas marketing wins.		macintux
36776988	11.666921	-7.643067	comment	3.0	10.5	1689704277	10.101477	For sure — a lot of language features need to be generic. But most people aren’t coding language features, and giving them the ability to do so can lead to, well, CodeFactoryFactoryMakerGenericMethodHelpersFactory, rather than good, clear, usable code.		Veraticus
36778081	11.650798	-7.9780397	comment	3.0	12.5	1689709007	10.22381	C is also a very low-level and close to the machine language.Just because you can build a microchip doesn't mean you can build a spaceship and vice versa.So I'm not surprised about that they e.g. left...		valenterry
36745403	11.803516	-7.4137163	story	3.0	2.0	1689503798	-6.1180935	Ask HN: What is the practical essence of Type Theory		prmph
36812394	11.737388	-7.394757	comment	3.0	21.0	1689937665	9.591794	Nice project, congrats!One thing struck me as a bit odd:> In particular, it does not support: genericsWhat kind of support is there for generics in the JVM? Maybe I'm too naive to assume that due to t...		haspok
36827751	11.913433	-7.296432	comment	3.0	11.0	1690044801	7.057796	"Thanks. But I really mean ""object-oriented"", which has a (quite) specific meaning in CS; there are a lot of uses of the term ""object"" even in CS, with different meanings. The referenced report [1] fro..."		Rochus
36831719	11.998413	-7.195158	comment	3.0	11.0	1690075622	-9.928599	You want to trust that thing to review your code? It will often give you eloquent explanations, trying to convince you that code has a certain bug, while completely missing the actual bug. You'll be g...		chmod775
36856432	11.685456	-7.160432	comment	3.0	10.5	1690246914	-2.7455082	any, all, map, filter, min, max, for loops, zip, list, tuple, reduce, list comprehensions, cycle, repeat, islice, and so on in python work on iterables, and iterable is a protocol, not a class.  it wo...		kragen
36873256	11.637548	-7.3745537	comment	3.0	19.5	1690347118	10.068377	> Doing this requires or at least wants some form of polymorphic methods or functions, since you want to be able to call a node's Eval() without having to know anything about the node.Or you know, jus...		kccqzy
36874830	11.748274	-7.388181	comment	3.0	14.5	1690361908	7.831942	Sum types + pattern matching (algebraic data types + structural recursion) achieves the same goal as what the author describes, but uses a different implementation technique.In functional programming ...		noelwelsh
24429963	11.921812	-7.0374284	comment	3.0	11.5	1599724729	-10.794855	I absolutely love async Python.It lets me do stuff that would be hard with ordinary Python.No doubt it takes some effort and practice to grasp, but once you have it worked out you'll find it's a power...		andrewstuart
24430033	11.727119	-7.188616	comment	3.0	10.5	1599725491	9.254536	> ...  you are going to get starvation as async does not have a fairness mechanism - timesharing is co-operative and based on FIFO in all the implementations I've seen.If it's FIFO based, why would you get starvation?		sltkr
24430448	11.676714	-7.2050366	comment	3.0	11.5	1599729969	9.142663	It’s not the only reason.For me, async code is easier to debug and understand because it is composed of regular functions (tagged with async).This means if you have a function that is 10 layers deep, ...		justsomeuser
24440721	11.72444	-7.334023	comment	3.0	10.5	1599816564	-8.840853	"The part about static types is weird. ""Tests are not always perfect but can be useful. However static types are not perfect and so they are useless."""		sbergot
24444507	11.593173	-7.4323215	comment	3.0	13.5	1599842125	9.832819	> Functional interfaces and code that uses them should have a generic way of being transparent to exceptionsThis irks me too.  It's been a while but I believe the workaround is just to define your own...		mrkeen
24483563	12.371915	-7.6787367	comment	3.0	12.5	1600189180	-11.262904	I think we can do better than Java, Scala and Kotlin. All of these ended up to be piles of abstractions and complexity. Scala went too hardcore for somebody that just wants to deliver. Kotlin gives yo...		johnnycerberus
24488973	11.964262	-7.715266	comment	3.0	11.0	1600223386	-8.442997	You don't have to read it. It Just Works. If you want bugfixes and enhancements, you upgrade the package.If you want to break your existing code, import a different package.If Haskell followed this principle, cabal hell wouldn't exist. If Windows followed this system, DLL hell wouldn't exist.		srtjstjsj
24430085	12.145706	-7.5103083	story	3.0	32.0	1599726070	-10.625428	Microsoft: 'We Are Finished with F# 5'	https://visualstudiomagazine.com/articles/2020/09/03/fsharp-5-complete.aspx	gstipi
24507468	12.050218	-7.1965704	comment	3.0	22.5	1600363996	7.062336	DOD generally implies a high level of coupling on the system.  That's it's biggest weakness.  It also pushes even more data management problems onto programmers which makes it easy to get things wrong...		cogman10
24508109	12.055705	-7.1168165	comment	3.0	20.0	1600366692	4.2091713	> DOD generally implies a high level of coupling on the system. That's it's biggest weakness.I'm not sure I understand what you mean by DOD generally implies a high level of coupling? Could you perhaps elaborate a bit?		Arelius
24508951	12.073797	-7.2597165	comment	3.0	25.0	1600371274	7.182976	Likewise the focus on ECS architecture as being the one true DoD pattern when it’s not necessarily data oriented at all and the unfounded assumption it’s used everywhere in game development when it is...		meheleventyone
24537219	11.638337	-7.8905625	comment	3.0	11.0	1600634416	10.224802	You might like Scala and/or Kotlin. You listed Go, but Go’s type system is very weak, as is Go’s support for immutability, two problems that Scala and Kotlin don’t share.		yashap
24552278	11.925259	-7.058693	comment	3.0	10.5	1600764023	8.736924	> I assume you mean reflection - this would be very untypical for normal business logic codeNo, a lot of java critics complain about it being hard to tell what's calling what at the framework-to-user-...		michaelt
24559139	11.799689	-7.163891	comment	3.0	12.5	1600804909	8.767434	I'm most excited for records and `with`. This is a feature in C# I've been wanting for years and will really help make the use of immutable data throughout a system easier with a ton, and I mean a ton, less boilerplate.		eropple
24558737	11.807066	-7.3731394	comment	3.0	21.0	1600802832	9.934269	Out of everything in the new 5.0 release, I am looking forward most to the non-generic TaskCompletionSource. This is a primitive that has been bothering me for some time WRT tasks that return nothing....		bob1029
24565372	11.78703	-7.8218985	comment	3.0	17.5	1600857940	10.417902	"As I said elsewhere, the main contribution of Haskell is the science of programming languages. Without Haskell, we would be stuck with ""practical"" or ""pragmatic"" languages like C or Java that do not care much about soundness. Haskell is the science to Rust's engineering, IMO."		choeger
24567953	11.654079	-7.951577	comment	3.0	17.0	1600873476	10.254446	"I fail to see how else than ""primitive"" you can call the Go type system: it is roughly what you would get from a  language designed in the 70's, and a lot of advances have since been made.Whether or n..."		kdkeyser
24529615	11.749299	-7.0390787	story	3.0	3.0	1600541356	-8.800104	Why Python has won among dynamic languages	https://www.notonlycode.org/why-python-has-won/	arnvald
24554849	11.932767	-7.6352286	story	3.0	22.0	1600785283	-9.033798	Covariance and contravariance explained without code	https://github.com/Dobiasd/articles/blob/master/covariance_and_contravariance_explained_without_code.md	DyslexicAtheist
24606353	11.666301	-7.483702	comment	3.0	15.0	1601212058	-3.208947	> Type inference: because having to write out every type, however obvious, is an incredible waste of time. Person me = new Person(); is ridiculous. let me = new Person(); may seem like a small improve...		aazaa
24607179	12.103518	-7.1625986	comment	3.0	11.5	1601219366	-10.292216	I work on the big data side of Automattic, so I tend to work with PHP, Typescript/JavaScript, Python, and Scala, but I also work with C# for fun. When you work with and without types often, you realiz...		withinboredom
24608131	11.826937	-7.442555	comment	3.0	12.5	1601226372	-8.937169	"> I think you're conflating ""statically typed languages"" with ""object oriented languages""No, I'm not.I'm simply pointing out that most statically typed languages, the most used ones especially, don't ..."		romanoderoma
24588899	12.218483	-7.5340133	story	3.0	49.0	1601035750	-11.355444	The Dark Secrets of Fast Compilation for Kotlin	https://blog.jetbrains.com/kotlin/2020/09/the-dark-secrets-of-fast-compilation-for-kotlin/	ingve
24674834	11.643964	-7.111989	comment	3.0	44.5	1601760944	4.4255066	> data type does not change based on seemingly insignificant details (2, 2.0, 2.0.0, “2”)…only because NestedText does not support numeric types at all.  That seems like throwing out the baby with the bathwater.		comex
24674975	11.851052	-7.641081	comment	3.0	11.0	1601762167	13.004712	> Go's design is at the very least controversial and considered poor by a vocal subset of the hackernews and programming community.I'm in the camp of the rationales of Go's design being controversial....		bhaak
24691674	12.274471	-7.348516	comment	3.0	16.0	1601929850	12.791708	> It was created by Microsoft Research and introduced the Virtual Actor Model as a novel approach to building a new generation of distributed systems for the Cloud era.Okay, sounds like an academic, M...		rattray
24693776	11.5935	-7.0622187	comment	3.0	10.5	1601945681	8.915585	"Eww.. This isn't new in 3.9, but is mentioned in the dict section as an existing quirk of sets I didn't realize this:    >>> {0} | {False}
    {0}
    >>> {False} | {0}
    {False}"		cma
24693644	11.812141	-7.205857	comment	3.0	13.0	1601944104	-9.015282	> Type annotations in Python do not actually affect any aspect of runtime and are ignored during evaluation.This is equally true in Java. Types are erased at runtime. They don't exist in the bytecode....		joshuamorton
24712527	11.669814	-7.3505483	comment	3.0	11.5	1602103558	-8.667368	">When you can get a functional language to type check, it really does Just Work.Not all functional languages have static typing. 
Also type checking helps, but saying that if the types check out it ju..."		synthc
24716721	11.849743	-7.552752	comment	3.0	14.5	1602141639	-8.897765	In Haskell, it's both common and idiomatic. There's always a tradeoff between the usefulness of having static guarantees, and the complexity of the type system features that enable those guarantees. I...		sullyj3
24717838	11.885186	-7.728209	comment	3.0	11.0	1602153655	10.374896	"The Foldable instance for Maybe is one of the biggest warts in Haskell.  It's not limited to Haskell, by the way.    def getUsers(f):
        return (logged_in_users(f), logged_out_users(f))

    def userCount(f):
        return len(getUsers(f))"		tome
24706567	12.326769	-7.2981334	story	3.0	42.0	1602063074	7.0171485	Developing with Squeak on a Cellphone	https://eighty-twenty.org/2020/10/07/developing-with-squeak-on-a-cellphone	tonyg
24748588	12.28853	-7.5060244	story	3.0	50.0	1602446276	-11.178385	Javis v0.2 and the Future	https://opensourc.es/blog/javis-v0.2-and-future/	wikunia
38697524	11.786542	-7.351921	comment	3.0	22.0	1703002833	-8.929319	Was this  statically or dynamically typed language?		throwaway290
38730335	12.197993	-7.308151	comment	3.0	15.5	1703213120	7.112956	Is Smalltalk’s message passing really all that different from methods from other OOP languages? Seems like quite an arbitrary distinction to me.		alex_smart
38766369	11.647292	-7.6389275	comment	3.0	20.5	1703540268	9.804807	Currently there is either SEND or RECEIVE select, not a mixed one. What's the use case you have in mind for a mixed send/receive select?		Rochus
38792682	11.843464	-7.3618937	comment	3.0	12.0	1703765505	7.117388	"  > Data abstraction
  > Encapsulation
  > Polymorphism
  > Inheritance

Note that it's the last two concepts which are specific to object oriented programming. The first two are already supported by ..."		augustk
38809219	11.845114	-7.575486	comment	3.0	12.5	1703878440	10.301945	> Any document language with a foreach-loop must somehow flatten the node list to one dimension; the key design question is where in the pipeline this should happen.Or —and hear me out— if one uses st...		082349872349872
38821964	12.274988	-7.306264	comment	3.0	11.5	1703999014	7.118575	There isn't one.  Smalltalk implementations, including Cuis/Squeak/Pharo, are image-based.  So applications in their world get packaged more like a word processor/spreadsheet document than a tradition...		blihp
38748249	12.091517	-7.847882	story	3.0	66.0	1703365686	10.448408	OCaml as the Universal Translator – DkSDK Merry Christmas 2023	https://gitlab.com/diskuv/samples/merrychristmas2023#ocaml-as-the-universal-translator-dksdk-merry-christmas-2023	beckford
38858968	11.653113	-7.852968	comment	3.0	15.0	1704311748	10.186343	After using both java and go, I prefer go. The tooling is simpler and more intuitive, the feature set is less bloated (fewer useless things reinventing the wheel like streams api), it also isn't affiliated with OracleIn general java feels more enshittified in comparison		matrix87
38874802	11.659441	-7.9479647	comment	3.0	12.5	1704419825	10.18747	Seconding this. Go also has some opinionated standard libraries (want to differentiate between header casings in http requests because your clients/downstream services do? Go fuck yourself!) and shies...		opportune
38875061	11.628547	-7.9399314	comment	3.0	13.0	1704422320	10.205865	This seems like a more personal account of the ACM article they published [1]. In both they recognize that they didn't make a great new programming language in terms of a language specification but in...		gregwebs
38887418	11.639358	-7.9727173	comment	3.0	10.5	1704504871	10.214937	"In contemplating the observation that Go may be considered the ""new Basic,"" we find ourselves stirring a delightful medley of thoughts. Basic, once the harbinger of beginner-friendly programming, poss..."		thebuilderjr
38889218	11.686487	-7.5570407	comment	3.0	15.0	1704525124	3.6436381	>They say the program needs a total rewrite and proceed to add 20 layers of inheritance and spreading out every function over 8 files.Anyone who in 2023 still thinks inheritance is a good idea for any...		logicchains
31774570	12.123244	-7.496286	comment	3.0	14.5	1655445604	-10.622427	I'll just say if you enjoy using this stuff in C# (and linq) you really owe it to yourself to at least look at F#.I'm biased as hell because I think it's a wonderful language, but even if you decide i...		Eji1700
31776919	11.718333	-7.2867584	comment	3.0	12.5	1655467590	-7.1269875	I've heard this argument before, but this isn't true.In shell, f x y z, x y z are all augments to f. Doesn't matter if f takes one argument, all are passed to the function.With many functional languag...		georgyo
31787400	11.620389	-7.9508643	comment	3.0	25.5	1655529304	10.105902	I really tried to develop several cross platform GUI apps in Go, using various frameworks. The result was far from satisfactory. My advice: don’t bother, just use Qt. Or Electron if you can stand the resource usage. Or maybe Flutter, I have no experience with that; maybe I should give it a try.		oefrha
31793366	11.965703	-7.2137675	comment	3.0	26.0	1655582972	-9.060136	This one definitely hits close to home. By empirical measure, static typing reduces bugs, but maybe it's just me. I definitely like the comfort of trusting my types.My only experience with dynamic typ...		leononame
31806066	11.755128	-7.3359237	comment	3.0	11.0	1655696538	-8.885196	Static typing eliminates an entire category of runtime errors.With type-hinting etc it’s getting better now, but they’re still a big problem in dynamic languages.		ed25519FUUU
31859835	11.863242	-7.3267784	comment	3.0	11.5	1656066614	6.97035	> In good OO programming, we don’t make class hierarchies in order to satisfy our inner LinnaeusI wish someone had told me this when I first started coding. I wasted so much time building pointless hierarchies based on ontology rather than DRY.		alangibson
31863641	12.036305	-7.7769647	comment	3.0	10.5	1656084022	10.485378	Strong disagree; I have thousands of hours with both and I would essentially never recommend ocaml over haskell unless your company already has an ocaml codebase/ocaml expert employees.I'm very consci...		wyager
31880837	12.338141	-7.7776155	comment	3.0	12.0	1656214370	2.001836	It's not impossible to type check heterogeneous maps at compile time, but most static type systems don't support this. I think you'd certainly see much more friction trying to program like this in C# than you would in Clojure.		weavejester
31889375	11.900691	-7.080918	comment	3.0	16.0	1656289583	-10.79575	Does anyone actually use asyncio for processing stuff? It's been around for a while now but I still find it very awkward compared to just creating a pool and calling map or starmap.Am I missing out?		belval
31891445	11.963959	-7.549454	comment	3.0	13.5	1656313378	-11.066082	Lenses let you do some amazing things, but I think most of their existence is just thanks to how truly horrible (nested) record field access and updates were.This is a lot better now with  record dot syntax. [1][1] https://ghc-proposals.readthedocs.io/en/latest/proposals/028...		the_duke
31891283	11.904589	-7.1224937	comment	3.0	14.0	1656311645	-9.197937	I'm really excited for where Python's static typing is heading!I doubt that typing Python code will ever become as ergonomic as typescript, simply because typescript doesn't have the constraint of mod...		davidatbu
31953627	11.943319	-7.0249248	comment	3.0	12.5	1656713169	-10.688396	Fully seconded, I just want to add for those of you in the asyncio world, aiohttp and FastAPI provide nearly identical APIs to requests and Flask (respectively), and for those of you familiar with these tools, they're a great way to be productive with asyncio almost immediately.		maxbond
31957742	12.071005	-7.7611685	comment	3.0	15.5	1656757288	10.446547	This article is completely incongruous and reveals fundamental misunderstandings of category theory. That's actually being generous; most of the content isn't even coherent enough to be wrong.> Catego...		ebingdom
31976219	11.700759	-7.3351917	comment	3.0	13.5	1656936991	3.7494707	"Saying ""it allows for very concise partial function application"" does nothing but repeat the definition. It does not, in particular, offer any reason to want that. What is so special about the first a..."		ncmncm
31978176	11.973807	-7.4553533	comment	3.0	10.5	1656948917	7.2727623	When I was an assembly programmer, I knew C could help meWhen I was a C programmer, I knew OOP could help meWhen I was a JavaScript programmer, I knew TypeScript could help me.I don't know how functional programming can help me, but I'll keep trying to find a reason because people say it can		labrador
31978118	11.962543	-7.701825	comment	3.0	10.5	1656948610	10.426834	I'm not trying to dodge your question, but the answer to your question is that until you work with it for a while you're not going to understand it. Any blog-sized, bite-sized snippet isn't impressive...		jerf
32056164	11.99726	-7.7669635	comment	3.0	13.0	1657547728	10.399848	It's also wrong. Lists are monads, and whether the implementation you use is mutable or not is not relevant to how you use them.The essence of monads is not about what use can be made of them either, ...		pyrale
32078047	11.738781	-7.2522774	comment	3.0	11.5	1657676392	8.661589	"Furthermore, it chains nicely and offers pleasant autocompletion in your IDE:    newObject = oldObject.f().g().h().i().j().k()

VS    newData = k(j(i(h(g(f(oldData))))))"		stickfigure
32083660	11.702743	-7.412376	comment	3.0	10.5	1657724463	-8.673643	"> Why isn’t this more of a thing?Because that's a half-assed way of using and leveraging a good type system? DBC always strikes me as a ""three blind men and a type system worth using"" parable."		masklinn
32116242	12.4938	-7.0633492	comment	3.0	18.0	1657960926	12.384249	It really doesn't... After years using Ruby my mind never managed to parse its complicated grammar.		batiste
32123685	11.807823	-7.1713424	comment	3.0	14.5	1658022573	-8.968675	Python is strongly typed. You want statically typed. (Instead of duck typed / dynamically typed)		aunderscored
32142188	11.601029	-7.955016	comment	3.0	11.5	1658171276	10.20742	"I hated the ""damnable use requirement"" (the error you get on unused imports) for years, but I've been keeping a count of how many bugs they've caught (I was surprised the first time this happened) and..."		tptacek
32142954	11.637611	-7.8909984	comment	3.0	11.0	1658174677	10.217873	i dragged my feet on go for a long time. i also thought that skipping go and moving to rust was the play. a few years later, i still write python often, but i don’t build systems with it. python i now...		nathants
32143560	11.648091	-7.943467	comment	3.0	34.5	1658177764	10.204218	> You may know me from building the Go Language, Docker, MongoDB, Hugo, Cobra, Drupal and spf13-vimActually this is the first time i heard from this guy, but this is an impressive list of projects to be involved in, wow!		DrinkWater
32202897	12.232651	-7.4587674	comment	3.0	14.5	1658581260	-6.0056224	The market is obeying the law of supply and demand. Hardly anyone knows those languages, and there is no big player backing them, so you have to dig inside each community to know which shop is active....		phtrivier
32220273	12.139297	-7.4986806	comment	3.0	17.5	1658720542	-10.601947	I bet C# and F# are actually nice languages and I shortly considered adopting them together with Unity but at the end of the day I was still suspicious of Microsoft, and support for other platforms th...		wrnr
32236467	11.673985	-7.3413234	comment	3.0	11.0	1658831346	-8.789281	The problem with extensibility is that everyone does! Manufacturers will dump in all sorts of tags, and check for them, when you read in, but the won't tell you what they are and how you might calculate their supersecret checksums (for safety!).Dicom Compliance is a well paying job.		brnt
32172509	11.734377	-7.0941796	story	3.0	6.0	1658352113	8.231389	Ask HN: Where to Go from Here?		abadger9
32282964	11.898285	-7.049459	comment	3.0	16.5	1659138434	8.064177	> P&L researchWhat’s P&L?> Java's verbose semanticsDoes Java have verbose semantics? I think Java’s semantics are pretty neat and concise. Where’s the verbosity?		chrisseaton
32297601	11.668868	-7.2315784	comment	3.0	10.5	1659292514	9.046687	> There's nothing preventing you from designing a nice well-encapsulated map/dictionary data structure in CWhen you write a set function for your map data structure, what type do you make the key parameter?		chrisseaton
32304702	11.714554	-7.4019713	comment	3.0	10.5	1659354744	-8.609983	Author here. Glad you liked it! I’ve had a real fear of writing since High School and so starting this blog is my attempt to work through it.It’s a shame that more engineers don’t have the time or int...		BreakfastB0b
32324193	11.80029	-7.3825026	comment	3.0	25.0	1659473774	7.284386	> I’d argue that programs without state are just easier to reason about and debugRight, isn't the fundamental trade-off between programmer efficieny and runtime efficiency?Immutable structures are eas...		klipt
32325869	11.685524	-7.348034	comment	3.0	13.5	1659484414	7.307657	When you use a mutable data structure, and your code is concurrent, you'll force the CPU to put locks everywhere in your code so that several cores won't see stale data in their internal caches.Even w...		kephasp
32325733	11.764473	-7.32557	comment	3.0	18.5	1659483586	7.229857	> There are many cases where there won't be a single difference in performance and there are a bunch of cases where immutable structures will be way faster than mutable ones.Have you maybe written thi...		kadoban
32324987	11.993148	-7.7039576	story	3.0	20.0	1659478737	10.419808	Show HN: Mom, can we have (Haskell flavored) post-modern C++ at home?	https://github.com/BowenFu/hspp	amazing42
32261077	11.852066	-7.2709975	story	3.0	67.0	1658989690	-9.885614	Typeguard	https://typeguard.readthedocs.io/en/latest/index.html	tosh
32330284	12.409824	-7.4746184	story	3.0	86.0	1659526252	-9.097007	Eqwalizer: A Type-Checker for Erlang	https://github.com/WhatsApp/eqwalizer	hasheddan
32375189	11.624849	-7.9561224	comment	3.0	11.5	1659865592	-9.383428	"GP's not talking about this specific syntax but about Rob Pike's general approach to language and system design.A flagrant example of> idiosyncratic, not that user friendly, and mostly ""works for me"" affairbeing date/time patterns in Go."		masklinn
32406844	11.643034	-7.349848	comment	3.0	14.0	1660094337	-8.713464	Talk about sledgehammer to crack a nut - honestly, why does anyone need type safety in a simple templating operation? Dynamic languages have their uses, you know. Type safety is a tool, not an ideology.		cutler
32405865	11.647356	-7.9427357	story	3.0	2.0	1660086899	10.132759	Mocha: Open-Source Mock API Builder for Go	https://github.com/vitorsalgado/mocha	vitorsalgado
32430462	12.23234	-7.280129	comment	3.0	18.0	1660245609	7.0270844	"Smalltalk remains my all time favorite language.  I started programming in the 1960s, with BASIC and FORTRAN (FORTRAN II, in fact, from McCracken's famous ""Guide""), and before I quit coding profession..."		walnutclosefarm
32432411	12.275213	-7.2904	comment	3.0	13.5	1660255761	7.1291847	>  Unfortunately, Smalltalk arrived to too much hype before it's (potential) time, and was crippled as production language by it's image based development and deployment methodology.I was exposed to i...		Qem
32434859	12.259707	-7.258166	comment	3.0	11.0	1660280264	7.13469	Price is one of the main factors, for sure.But it's not just that.The image was actually a big turn off even back then, even before source control was even a thing.Even today, Smalltalk runtimes (e.g....		hota_mazi
32452627	11.843434	-7.1787786	comment	3.0	12.0	1660416430	-9.024497	Not sure why I'd want to use this, presuming I was already happy with python. Especially now that python's type hinting is more mature. Looking through the feature set the main thing it seems to provide is a type system, but with a syntax I don't like as much as python's type hinting.		traverseda
32453079	11.648265	-7.343311	comment	3.0	11.0	1660419671	-8.729206	it doesnt enforce the types in any way		Reubensson
32480514	11.60727	-7.045615	story	3.0	23.0	1660638444	-10.488478	Should You Be Using Python’s Walrus Operator? (Yes. and Here’s Why)	https://martinheinz.dev/blog/79	heinzm
22012183	11.820192	-7.1956015	comment	3.0	14.0	1578674287	-9.005225	> Fully type annotated.This is a huge win compare to requests. AFAIKT requests is too flexible (read: easier to misuse) and difficult to add type annotation now. The author of requests gave a horrible...		yegle
22034481	12.023316	-7.813975	comment	3.0	10.5	1578923954	10.4353	I might be missing something but from a quick skim did he just reinvent (a specific instance of) monads?		pwm
22056739	12.050546	-7.108199	comment	3.0	14.5	1579112120	-10.387375	"Guaranteed almost 100% type soundness!!! Non TypeScript user will hate this.Config it to maximum strictness!Add in runtime type checks
Parse, don't validate https://lexi-lambda.github.io/blog/2019/11/..."		valand
22060951	11.922216	-7.651158	comment	3.0	13.5	1579139575	10.376925	> Why is typed functional programming measurably better than procedural? Why is it better than OOP? Definitive answers are in demand not exploratory experiences.Functional code tends to be shorter tha...		dpatru
32508314	11.940851	-7.5465035	story	3.0	40.0	1660823911	8.083024	Understanding Transducers	https://andreyorst.gitlab.io/posts/2022-08-13-understanding-transducers/	signa11
22069040	11.99144	-7.302181	comment	3.0	20.5	1579209378	8.801288	I feel like Java is making great strides lately, but that we're also getting slightly lesser versions of capabilities available in other languages.Records, for example, are directly inspired by Kotlin...		thomascgalvin
22069922	11.843142	-7.1481996	comment	3.0	14.0	1579215109	8.724334	>Java finally gets what's been available in Scala (case classes), C# (structs or maybe properties), Kotlin (data classes) and others for a very long time .. so long we already have tools like Immutabl...		anthonybsd
22076150	11.630728	-7.945308	comment	3.0	24.0	1579279030	10.188116	"""in the land of the blind, the one-eyed man is king""Golang is probably a step up from Python, but it's just that. There are a lot of issues with Golang. From the top of my head,
lack of decent error h..."		toolslive
22076653	11.603931	-7.944862	comment	3.0	12.5	1579281236	10.239751	>These two issues are usually brought up by people who haven't written a lot of C.>In day to day work it's really not an issue.Polymorphism and error handling, these are issues, address them. Go's a f...		jrimbault
22090372	11.770102	-7.387228	comment	3.0	10.5	1579425873	-6.986294	This includes a fresh take on the foundations of the correspondence between cartesian closed categories with simply typed lambda calculus that underlies the beautiful work of Conal Elliott in http://conal.net/papers/compiling-to-categories.		jesuslop
22091810	11.690922	-7.3384137	comment	3.0	12.0	1579446819	-8.829056	The author doesn’t really address the issue raised in the first (longer) quoted post.Given a set of reasonable requirements I think pretty much no one would claim a general-purpose language couldn’t s...		jmull
22092463	11.759363	-7.3691864	comment	3.0	11.0	1579453701	-8.884868	Yep. Being able to work fast and dirty is a huge boon when testing ideas and figuring out the initial design, and it is deeply annoying that so many typed languages refuse to permit this. The faster y...		hhas01
22094335	11.834819	-7.36578	comment	3.0	20.0	1579470332	7.3058534	Could someone quickly summarize how a stateful game is best implemented in a purely functional language, like here?Is there a main tail-recursive function which takes any inputs that have appeared sin...		galaxyLogic
22109718	11.999654	-7.754019	comment	3.0	11.0	1579630831	10.444501	>  because it’s new in the same way Haskell is new to a Java devDo you have any hypotheses about why we don't see as much publicity for Haskell then?		shepmaster
22115704	11.735452	-7.357341	comment	3.0	18.0	1579681820	9.243389	This is backwards in my opinion and omits a lot of nuance.There is no other mainstream language which combines seamless async-everything-to-the-ground with good performance.Whenever I write in another language I feel like I'm in the stone age only because of this one feature already.		cube2222
22116595	11.962338	-7.731214	comment	3.0	12.5	1579692748	10.43552	"I mean, one may assume incompetence and corruption. And perhaps that's the case.
But on the other hand, teaching languages are not the same as production languages. There are a number of languages tha..."		zwaps
22116780	11.664901	-7.6233535	comment	3.0	13.5	1579694518	9.435988	I've used F#, it uses computational expressions for async functions. And functions are either async or not. Same for C#. Same for Scala, Haskell and others. Future[T] is so unergonomic and it creates ...		cube2222
22138593	11.741886	-7.352938	comment	3.0	11.5	1579876448	-7.2134843	> Things like “this writes to the database”, “this makes an unbounded query”, “this requires a random number generator “, rather than a nebulous “oh this has I/O” is very powerful and useful for maint...		pron
22138784	11.910448	-7.4250817	comment	3.0	16.0	1579877889	7.159873	Which is why although I see these kind of languages quite relevant to advance the state of the art, the industry belongs to impure multi-paradigm languages.Like Brian Goetz puts it, it is not FP vs OO...		pjmlp
22139034	12.324475	-7.516684	comment	3.0	12.5	1579879647	12.844282	Am I understanding this right that it's actually implementing the actor model just like Erlang? It seems to have processes and you can send them messages.The threads seem really lightweight, but how would some typical frontend benefit from this?		hopia
22143014	11.926441	-7.640584	comment	3.0	14.0	1579904760	10.400123	> The answer to why Haskell should add dependent types is that it's an interesting research question, and that Haskell is designed to answer research questions.Interesting, yes, but I believe it will ...		agentultra
22097000	11.709376	-7.422806	story	3.0	95.0	1579504807	-8.686168	Dependent Type Systems as Macros [pdf]	https://www.williamjbowman.com/resources/wjb2019-depmacros.pdf	luu
22139767	11.813286	-7.1906967	story	3.0	20.0	1579883720	6.975933	Are We There Yet? – A deconstruction of object-oriented time (2009)	https://www.infoq.com/presentations/Are-We-There-Yet-Rich-Hickey/	jtth
22151085	11.691184	-7.9176636	comment	3.0	13.5	1580026593	10.087005	I tried running Go HTTP servers bare to the internet (after Cloudflare promoted doing so in a blog post), but went back to using a reverse proxy the next time.The main benefit seems to be convenience....		regecks
22180002	11.666967	-7.5927596	comment	3.0	12.5	1580302990	10.114969	"I think the ""we're not doing it because it adds complexity in the type system and runtime""
was something most developpers have a very hard time understanding, since generic programming exists in prati..."		bsaul
22181938	11.873892	-7.482324	comment	3.0	13.0	1580313684	10.4087925	"Dan Grossman's ""Programming Languages, Part A"" (In Coursera) made me fall in love with SML. Highly recommended."		vslira
22193472	11.974254	-7.7152095	comment	3.0	12.5	1580406733	10.416318	Have you tried this yet in practice? I'm expecting it makes Haskell more suitable for web stuff since that's where low latency is often more important than computational performance is.		hopia
22223228	11.773136	-7.153911	comment	3.0	12.0	1580729001	-7.3316746	"I'm with Dijkstra""Our intellectual powers are rather geared to master static relations and ... our powers to visualize processes evolving in time are relatively poorly developed. For that reason we sh..."		neilwilson
22149938	11.730723	-7.357823	story	3.0	87.0	1580004760	7.662594	Understanding the Power of Data Types	http://postgres-data-types.pvh.ca/	blondin
22190828	11.936054	-7.7018814	story	3.0	82.0	1580386869	10.399503	Vmap in Haskell	http://blog.ezyang.com/2020/01/vmap-in-haskell/	gbrown_
22235335	11.934509	-7.726823	comment	3.0	12.0	1580823433	10.3912735	> So we’ve managed to just smash a C program that was looked at by thousands of eyes of quite hardcore low-level Unix hackers over a few decades. We did this with a handful of lines of pure, mutation-...		jstimpfle
22235970	12.082299	-7.7907653	comment	3.0	13.0	1580827126	10.429849	There's also ReasonML for those looking to scratch the itch sooner.Also, don't be turned off by the sea of comments. Pick one, they are all great. but yes ML language enthusiasts can be a bit overenth...		alharith
22238241	11.722571	-7.1968336	comment	3.0	12.5	1580837011	8.682256	You'll still be chasing pointers with these. What you (and myself and many others) are looking for are inline types[0][1] that are part of Project Valhalla[2].[0] https://openjdk.java.net/jeps/169[1] ...		chris_overseas
22238394	11.785426	-7.202647	comment	3.0	11.0	1580837703	8.813046	Unless the rules of keywords have changed:Map<String, String> record = getSomeData();This should no longer be valid if record is a keyword?		Macha
22238253	11.923355	-7.069321	comment	3.0	13.0	1580837078	8.554851	"Doesn't adding a ""record"" keyword break a lot of existing code? It wasn't a keyword as recently as JDK 8 (https://docs.oracle.com/javase/tutorial/java/nutsandbolts/_k...)."		jfengel
22241018	12.040639	-7.4331274	comment	3.0	17.0	1580850697	-10.636504	Pattern matching is so much better in F#. C# gets more and bloated to the point of paralysis. It's not yet there but I;m sure it will at some point.		throwawa66
22241729	11.946118	-7.4511986	comment	3.0	11.0	1580855109	11.811623	"I wrote up how I'd do this in scala, just to compare and contrast    val shape: Option[Shape] = ???
    shape.map {
      case Square(0) | Circle(0)               => 0
      case Triangle(b, h)  if b ..."		kag0
22249237	11.900243	-7.589361	comment	3.0	11.0	1580924886	10.398625	"SML modules are a classic example of a ""shadow language"" ( https://gbracha.blogspot.com/2014/09/a-domain-of-shadows.htm... ). I'd like to see an ML-like language where modules/interfaces are normal va..."		chriswarbo
22254242	12.187712	-7.5515423	comment	3.0	10.5	1580974873	9.636603	While some of the features in Kotlin are slowly coming to Java, that also means that one has to update Java (while you can use all the new kotlin while still targeting Java 8).Some features like named...		hv42
22254293	12.249641	-7.5392957	comment	3.0	20.5	1580975646	-11.367894	I started using Kotlin daily about 8 months ago.Recently had to go back to an older Android codebase, and immediately decided I had to start converting.The amount of boilerplate is unbelievable. I'm a...		gibolt
22254445	12.253141	-7.554197	comment	3.0	14.5	1580977731	-11.373244	Kotlin is officially supported by Android which is huge, and the fact that IntelliJ dog foods their own product into their most important product also gives a degree of security about its future.Anoth...		fgonzag
22281830	11.856483	-7.4336596	comment	3.0	17.0	1581252493	10.247788	IMHO Eiffel's concept of simplicity is rather similar to what golang is aiming at today. It didn't serve Eiffel well.		stewbrew
38918274	11.829368	-7.186641	comment	3.0	11.5	1704748688	9.130469	But there were other async APIs on Linux prior to 2019, why jdk didn't use them?		riku_iki
38915391	11.611595	-7.924493	story	3.0	22.0	1704735580	10.168515	TIL: Go's CompareAndSwap is not always Compare-and-swap	https://lu.sagebl.eu/notes/go-cas/	enz
22288501	12.293135	-7.303194	story	3.0	3.0	1581337696	6.9429364	Smalltalk: An Entrepreneur's Secret Weapon	https://medium.com/@richardeng/smalltalk-an-entrepreneurs-secret-weapon-a36b01b68b29	louiscyphre
38966759	12.221558	-7.2753754	comment	3.0	16.0	1705058588	7.199872	Interesting talk. Smalltalk (like Lisp) has indeed a very simple (i.e. minimal) syntax. But that doesn't necessarily mean that it is also simple to write and read code, or to implement an efficient co...		Rochus
39002316	12.152777	-7.1290455	comment	3.0	13.5	1705334543	7.1774344	> Self wasn't sufficiently fast?Self apparently is sufficiently different from Smalltalk-80 so that even today JS engines (which are descendants of the Self engine) are still significanly faster than ...		Rochus
39003861	12.2273035	-7.281866	comment	3.0	10.5	1705341456	-10.006377	Smalltalk is homoiconic, like lisp. TCL is not, just pretends to be.		SomeoneFromCA
39012800	11.6511135	-7.369708	comment	3.0	13.0	1705410042	9.165731	> Virtual threads are nice for unblocking legacy code but they aren't without issues. There are better options for new code with less trade offs on the jvm as well.The designers of Project Loom would ...		simiones
39026464	12.213966	-7.6235723	comment	3.0	11.5	1705491917	5.3112664	I remember having just left a scala event I was running in a cab, and seeing Martin on a london bridge with a gaggle of guys following him. I wasnt aware he was the student of Nikalus Wirth -- but it ...		mjburgess
39063191	11.783048	-7.325976	comment	3.0	14.0	1705709511	-6.0977755	Immutability is great for multithreaded/async programs because every thread can rest assured knowing no other thread can sneakily modify objects that they are operating on currently.		polygamous_bat
39063474	11.849672	-7.281513	comment	3.0	12.0	1705711950	9.180069	What's the advantage of async if you immediately call await?		doakes
32569566	11.73965	-7.333659	comment	3.0	14.0	1661281060	-8.664678	I would have liked to see examples. My own instinct here would be to use simpler types, but examples could show why that isn't desirable.		shadowofneptune
32578298	12.206965	-7.508748	comment	3.0	11.0	1661342952	-11.309926	Eventually you realise this split sucks though. it creates a world where programmers of the higher level language can't reasonably debug their most important libraries. This is different from not bein...		jpgvm
32609143	11.592171	-7.889178	comment	3.0	11.0	1661529667	10.190428	> Go can be simply characterised as a slightly stripped version of the Oberon-2Well, not really; there are not much similarities between Oberon and Go besides the receiver syntax of Oberon-2 bound pro...		Rochus
32620871	11.95751	-7.7000685	comment	3.0	10.5	1661619278	10.437052	I have not looked further but this looks like Haskell. I see haskell, I upvote.		toomanydoubts
39379213	11.634335	-7.9333324	comment	3.0	10.5	1707972396	10.168777	Once you start using channels, Go doesn't seem that beginner friendly		udev4096
32628260	11.973099	-7.7237067	story	3.0	23.0	1661693511	10.410044	How and why Haskell is better (than your favorite $LANGUAGE)	https://vadosware.io/post/how-and-why-haskell-is-better/	allenleein
39416959	11.80918	-7.187495	comment	3.0	11.5	1708241155	-9.036987	My experience is pretty negative with all of them, I would be almost more tempted to ignore type checking in Python until it has drastically improved. In particular, if you're experienced with Typescr...		MrJohz
39489559	11.644866	-7.402421	comment	3.0	14.0	1708755591	10.036253	If immutable and mutable slices are differently typed [2], it is natural to define two functions (say, `slices.Compact` vs. `slices.Compacted`) to handle each type, like Python `list.sort` vs. `sorted...		lifthrasiir
39491775	11.804406	-7.322448	comment	3.0	12.5	1708785631	7.0775604	It’s generally not what it claims. Single purpose is a good idea, but the rest…The idea that one class changing won’t change others is a pipe dream.Substitution only matters if you’re using inheritanc...		hajile
39494888	11.796122	-7.3419714	comment	3.0	11.0	1708806553	-8.850383	"I don't see how this is different from any other dynamically- and strongly- typed programming language with some kind of ""contract"" framework, like Clojure or Python."		nerdponx
39495504	11.760337	-7.3192215	comment	3.0	16.5	1708812049	-8.903721	> it’s really more a question of “how does my brain like to get to a solution and keep it functioning” and I find that fascinatingSure, but this is largely a matter of training and experience. Plenty ...		MaxBarraclough
39497244	11.681613	-7.863798	comment	3.0	15.0	1708830648	10.229708	Go receives so much unjustified good will it is almost unbelievable...Either way, if you do look at current state of .NET ecosystem, you may get surprised. But I guess, such is the perception of the p...		neonsunset
39523342	11.619439	-7.9005103	comment	3.0	10.5	1709037720	10.200737	The article gives some examples about Go, and lists interfaces as something you should use, because the performance cost is tiny.As someone who was formerly involved with the canonical Go style, I wan...		t8sr
39525494	11.657074	-7.319373	comment	3.0	10.5	1709049063	9.153893	Given that all the comments I'm seeing are of the “‘makeFooReady’ makes foo ready” ilk, I wonder how these tools fare on incorrectly-named things. Would it pick up on ‘asyncRemoveFoo’ being neither async nor a function that removes foo?		lelandfe
39526994	11.859015	-7.7661247	comment	3.0	11.5	1709055855	11.904747	I was with you until you slagged on the other options. Rust and Scala are designed for other use cases than yours. That doesn’t trivialize their worth.		kstrauser
39565215	11.648253	-7.4607615	comment	3.0	13.0	1709318705	-7.0248885	In what sense? Because they only apply to non-primitive types?		Zambyte
39578675	11.664788	-7.830667	comment	3.0	10.5	1709443794	10.124933	The Java version does additional optimizations that his Go version doesn't do and he mentions that at the end of the post. The Java version is really optimized and is an interesting read.		dsff3f3f3f
39593240	12.134929	-7.5211105	comment	3.0	18.5	1709573744	-10.589656	"Presumably all their F# runs on .NET--if their goal was simply transitioning to a language with a broader talent pool, wouldn't they ""just"" migrate the project to C# instead? I'm wondering if this is ..."		xxr
39614032	11.978229	-7.7732353	comment	3.0	14.5	1709717443	10.454378	The meme that Haskellers never accomplish anything practical is probably even older, maybe as old as the language itself.		Tabular-Iceberg
39615488	11.861419	-7.241327	comment	3.0	11.0	1709730103	-8.951065	I've always wondered if global type inference wouldn't be a game changer. Maybe it could be fast enough with caching and careful language semantics?You could still have your IDE showing you type hints...		BoppreH
39618408	11.953002	-7.3431377	comment	3.0	16.0	1709746304	7.0368814	you may or may not be aware that when he headed vpri, they did some substantial research into some of the other important ways to organize software, including things like array languages, david p. ree...		kragen
39627254	11.874372	-7.161842	comment	3.0	13.0	1709806717	-9.008203	I'm curious - when you were doing research into the mechanics of hinting options, did you stumble onto any relevant discussion around allowing custom pixel geometries to be defined, to enable hinting ...		boomskats
39634821	12.167387	-7.252056	comment	3.0	11.5	1709847119	7.1028657	Bret Victor's DynamicLand seems to be a direct descendent of many of these ideas. RealTalk's reactive DB combines Linda tuplespace ideas with LISP 71 pattern matching and reactive semantics. Each Real...		infinite8s
39671742	12.018962	-7.2490034	comment	3.0	12.0	1710181791	9.246062	How would an asynchronous system return a value? This is a job for something akin to a JS promise or golang channel.		rad_gruchalski
39682918	11.632719	-7.940365	comment	3.0	12.5	1710267459	10.221238	I build a pretty popular LLM tool. I think learning when/how to use them is as big a mental hurdle as it was learning to google well or whether something is googlable or not.In the realm of coding her...		parhamn
32649357	12.28744	-7.3064713	comment	3.0	15.5	1661861644	6.9912286	Would you say Smalltalk is a competitive advantage?		rbanffy
32674673	11.842086	-7.5607057	comment	3.0	13.5	1662030126	1.0628606	"Wait, the first suggested fix for ""lazy evaluation consumes too much memory"" is ""make it eager""? I'm sure I'm missing some nuance here, but that seems backwards."		MauranKilom
32684850	11.836798	-7.1087875	comment	3.0	10.5	1662075926	-9.03652	I ran into:ImportError: cannot import name 'TypeAlias' from 'typing' (/opt/homebrew/Caskroom/miniconda/base/envs/ldm/lib/python3.9/typing.py)		solarkraft
32685635	12.499606	-7.302976	comment	3.0	11.5	1662082825	-10.971706	Nim and Crystal feel like they are in exactly the same space? GC, fast, single executable compilation without runtime (I would also throw Go into this list).		db65edfc7996
32727074	11.77539	-7.139144	comment	3.0	12.0	1662400208	4.9680405	This is really misreading the whole concept of patterns in both architecture and software. The goal is not to somehow equate or even link the two disciplines. Instead it is to note that when you go ab...		PaulDavisThe1st
32747259	12.285615	-7.436047	comment	3.0	11.5	1662533034	12.59045	Isn't Akka an important component in various Scala projects like Apache Spark? What are they supposed to do?		keewee7
32769060	11.594079	-7.931931	comment	3.0	11.5	1662659226	10.2515545	I was glad to see Go get generics. Not because it was super-important but rather so we didn't have to hear about it anymore.I think exceptions are a false economy so I have no real issue with Go's err...		cletus
32770268	12.317887	-7.042667	comment	3.0	16.0	1662663191	13.178024	Perl receives such an unnecessary amount of hate		mikejulietbravo
32780298	11.796209	-7.101454	comment	3.0	12.5	1662736866	-9.030947	I've been using Python for a very long time.I can't get used to the Typing features. It makes the code look overly verbose and needlessly explicit. I love the simplicity and cleanliness of Python code, even at the expense of not specifying type hints and all that new jazz.		muttantt
32742550	12.299604	-7.3013067	story	3.0	12.0	1662494876	7.077181	Ask HN: What are peoples opinions on Smalltalk and its derivatives?		Decabytes
32783484	11.81868	-7.2119937	comment	3.0	10.5	1662750123	-9.03193	"Disclaimer: what I'm about to say has resulted, in the past, in someone on HN harassing me in a conversation of 30+ nested depth levels, and his line of attack was basically alternating between ""you d..."		the_af
32784339	11.792493	-7.026041	comment	3.0	21.0	1662754531	8.129969	Java's actual secret sauce was that it was mostly like C/C++, but with no unsafe memory accesses.  It was essentially the Rust of the late 1990s, only a whole lot slower and clunkier than real Rust.  There was a lot of enterprise software being rewritten from C++ to Java as a result.		zozbot234
32785621	11.894911	-7.30289	comment	3.0	12.0	1662762244	-13.887241	In terms of readability and maintainability, one problem with OOP is the development process that tends to go with it, where you're asked to create upfront the separation of concerns, before code has ...		hudon
32786044	11.870822	-7.336947	comment	3.0	11.0	1662765520	7.082277	"Totally, ""isolating private implementation details"" sounds super clear and useful. /sThe general answer seems to be that OOP starts really helping when many people/teams are involved.Being self taught and a one person team I suppose hasn't forced me into it yet."		phpthrowaway99
32822753	12.237557	-7.6316752	comment	3.0	26.5	1663067129	11.932251	I don't have a ton to say here, the article says it all really. But this also reflects my experience when developing with Scala and although I love the language and its brevity, I went back to Java be...		saberience
32824377	12.205409	-7.6037536	comment	3.0	12.0	1663077584	11.941137	I have personally spent so much time fussing with runtime ClassDefNotFound and MethodNotFound errors in Java that I am no longer able to respond to assertions that Java is type-safe with anything but ...		mumblemumble
32825111	12.246211	-7.646873	comment	3.0	13.0	1663081020	11.943732	In the end, having a 'more expressive' language isn't the key competitive advantage. At least, I can't recall when a company seems to have significantly outperformed a competitor because they used a '...		rzwitserloot
32881899	11.93876	-7.6799583	comment	3.0	11.0	1663451123	10.345176	"This is an interesting approach. Haskell is not a symbolic language, but you take advantage of the abstractness of type parameters in function definitions to thread your implementation of ""D x"" through, and pattern match on that.It's a neat design pattern. I bet it'd work in Julia too."		sterlind
32882356	11.769157	-7.295378	comment	3.0	37.5	1663454795	-10.143277	Lambda calculus is mathematically foundational in a way that Lisp of course isn't.The question is what does Lisp give us as an interpretation of those foundations? Or does it admit issues that might be unhelpful? (Are macros a good thing?)		somewhereoutth
32896441	11.966347	-7.6161623	comment	3.0	17.5	1663582954	10.34827	> Any FP developer should scream when seeing thisIt would be an interesting observation in 2007, but fifteen years later with no industrial success of Haskell-inspired pure FP approach, I don't see wh...		thriftwy
32896864	11.934567	-7.6417427	comment	3.0	11.5	1663586548	1.5140504	This is from 2011, maybe around the peak of functional hype, when even John Carmack sent out memos about approaching things in FP ways, and tried making his things in Haskell and then Scheme. It's my impression (which could be wrong) that he has significantly backpedaled from that since then.		jstimpfle
32896717	12.057004	-7.312379	comment	3.0	14.5	1663585346	7.8956957	You can absolutely write fairly nice functional code in Java already with a decent Either type, streams etc.I imagine it's not that widespread because most people probably switch to a different JVM la...		p1necone
32913224	11.715816	-7.3466773	comment	3.0	10.5	1663688281	9.168008	"I'm aware of the JEP.  I said ""as seen in this very release"" after all.I don't see the advantage to this over async/await style programming.  I think you'll see very similar error cases with unobserve..."		jayd16
32914473	11.663434	-7.9695187	comment	3.0	29.5	1663692741	-11.4822235	Gorhill should have a statue somewhere for making the web browseable.		Ligma123
32924459	12.327571	-7.03605	comment	3.0	25.0	1663765099	13.181668	Any historical background for the reference of Perl by Torvalds?		WiSaGaN
32939819	11.754083	-7.4121833	comment	3.0	19.0	1663858988	9.220011	> This takes a bit more code to implement, but provides a simpler API for users.I fail to see how hiding self.send() inside of IntoFuture makes anything simpler.StorageRequest::new().set_debug(true).s...		curious145454
32943276	11.818276	-7.2789803	comment	3.0	24.0	1663873624	8.65837	There's some good, some bad here.Stuff he gets right:* Getters/setters is a nonissue* Operator overloading is a nonissue. I did like how Ceylon handled it (operators are aliases for normal spelled-out...		stickfigure
32943494	12.035078	-7.151827	comment	3.0	13.0	1663874643	8.723609	I'm currently working in a Java codebase without Lombok and the habit is to make all fields public for record-like objects. It's fine 99% of the time.Every so often I want to change the behavior of so...		stickfigure
32989265	11.622456	-7.9230814	comment	3.0	13.0	1664230315	10.067933	This is pretty much exactly how I feel. I have great respect for the Go team. I broadly agree with their design philosophy. I think CSP is a great theory for concurrency. And I just don’t really like ...		User23
32990140	11.603015	-7.9215646	comment	3.0	13.0	1664236284	10.178518	V fixes most of these, but it doesn't use Go's runtime:https://vlang.io/compare#go		amedvednikov
16423178	12.104247	-7.832534	comment	3.0	15.0	1519154307	-3.1744227	Maybe you can expand on that, and/or show me something more abstract than category theory. Programming = abstracting information processing. Category theory = the mathematics of abstract functions (or...		proc0
16429405	11.978097	-7.5007544	comment	3.0	10.5	1519221140	11.869323	> We have no theory of language error-pronenessLanguage error-proneness is directly proportional to the rate of usage of mutability and side effects. Immutable references to immutable objects don't qu...		qwerty456127
16432401	11.697911	-7.969315	comment	3.0	10.5	1519242859	10.181176	"From the ""Avoiding Singleton Problems"" section:> Another problem would be if there were two HTTP stacks in the program. Clearly only one HTTP stack can listen on port 80; we wouldn't want half the pro..."		calcifer
32981981	11.674284	-7.929042	story	3.0	70.0	1664193418	10.180843	Show HN: Golang HTTP Clients/Servers and Alternative Networking	https://github.com/openziti-test-kitchen/go-http	andrewpmartinez
16434973	11.648835	-7.962639	story	3.0	42.0	1519270438	10.193639	Go and Versioning: Reproducible, Verifiable, Verified Builds	https://research.swtch.com/vgo-repro	thinxer
16446167	11.936134	-7.703352	comment	3.0	13.0	1519392670	3.031364	What may not be obvious here is that the Haskell function in each of these situations is the exact same generic function. The flow of data is abstracted via the Monad interface, so that it becomes pos...		chousuke
16446297	12.032177	-7.809337	comment	3.0	15.0	1519394121	10.429159	"I don't get it. The article doesn't explain anything. It's just a list of statements. ""This is bad, that is good."" But it doesn't explain why the bad things are bad, and how using monads is better. It..."		ndh2
16446579	11.941649	-7.70186	comment	3.0	11.5	1519397375	10.3544655	> But as long as the context (explicit type annotations, if necessary) make it clear what the code does, I don’t see this (even conceivably) as a disadvantage.I spent 3 years trying to learn Haskell, ...		xenomachina
16459709	11.821735	-7.4947968	comment	3.0	18.0	1519576798	-8.43344	"This is a good rundown of the basics of ML modules, the syntactic aspects, if you will. But it doesn't really give you the important insight:  Abstraction. is. powerful.

if you consider the IntMap mo..."		Drup
16470256	11.96303	-7.3780866	comment	3.0	13.5	1519692201	7.082625	Great series. He really gets to the major problem with OOP. It's not at all obvious what should be modeled or how and changing things once they're wrong is close to impossible. No wonder so few beginn...		mnm1
16470462	11.830123	-7.275399	comment	3.0	11.0	1519694968	7.0047946	The first four articles are interesting and i was following along, but i am not buying the last solution - it is way too complicated and over-engineered. It is telling that unlike the other four artic...		badsectoracula
16471351	11.786916	-7.538807	comment	3.0	10.5	1519710521	10.366935	"In Haskell, this would look something like:  data Player =
      Player (Maybe Weapon) Class
  
  data Weapon =
        Sword
      | Staff
      | Dagger
  
  data Class =
        Warrior
      | Wiz..."		pinkythepig
16509601	11.979925	-7.727538	comment	3.0	17.5	1520090627	10.404806	"It's an obvious-enough ""don't"" that it's one of the stated reasons for universal laziness in Haskell. Simon Peyton Jones has said that he's committed to keeping everything in GHC lazy to keep them hon..."		kerkeslager
16445477	11.693536	-7.2573223	story	3.0	78.0	1519382191	-9.038987	Emacs Lisp Lambda Expressions Are Not Self-Evaluating	http://nullprogram.com/blog/2018/02/22/	signa11
16478744	11.876689	-7.6915994	story	3.0	63.0	1519771382	10.384302	Beautiful folds in Haskell (2016)	https://github.com/Gabriel439/slides/blob/master/munihac/foldmap.md	fanf2
16514428	12.045833	-7.1714673	story	3.0	32.0	1520165491	9.135553	Node.js callbacks vs. promises vs. generators vs. async-await	https://smalldata.tech/blog/2016/10/24/node-js-callbacks-vs-promises-vs-generators-vs-async-await	wheresvic1
16525635	11.692101	-7.3719215	comment	3.0	11.5	1520293350	9.850224	Did they really have to split the library into generic/non generic? I think Java handled that much better.It's been more than a decade since I last used C#, so excuse me if I recall incorrectly.		forinti
16525724	11.717273	-7.495718	comment	3.0	13.5	1520294295	9.781794	In Java, you can't make runtime decisions based on the generic type of an object. Eg. you can't have a List<?> and check to see if it's a List<Foo> or a List<Bar> -- that information has been erased.Y...		rusbus
16525737	11.701531	-7.4959583	comment	3.0	16.0	1520294380	9.776219	Think of all the places where you need to pass in an explicit type to a Java class to workaround the fact that the types are erased (list.toArray() being the canonical example, but reflection uses hit...		kllrnohj
16526317	11.841994	-7.4932613	comment	3.0	12.0	1520301619	9.790423	Interop is another advantage of the erasure model. Getting a version of Scala to run with reified generics on the CLR is a huge, perhaps impossible, undertaking. And if you can't do that, interoping w...		seanmcdirmid
16549396	11.6026945	-7.9470196	comment	3.0	18.5	1520562082	10.198152	Rob Pike's confusion about why C++ programmers didn't want to move to go is partially explained by his focus on a particular problem domain at the time Go was being developed. Google in those days was...		emtel
16563587	11.599752	-7.9449563	comment	3.0	12.5	1520785816	10.232179	I really think D, like Go has a better chance of attracting programming languages from higher, not lower level languages.C++ can't event get the C greybeards to switch over while being a strict superset. On the other hand, Go is being embraced as a python replacement in the backend world		VHRanger
16567345	11.786604	-7.8671646	comment	3.0	12.0	1520853076	10.262985	I can't speak to Haskell because I've never used it in a work context. I have extensively used Python and Go in both small and large codebases, however.1. Long-term supportability: I'd definitely favo...		sarabande
16568681	12.406993	-7.510096	comment	3.0	13.0	1520867872	12.825231	The Erlang VM (BEAM) is unusual in that it, like the languages it hosts, is very opinionated.It is designed for robustness, scalability, concurrency, distributed environments. And immutable data. So f...		macintux
16605969	11.859318	-7.371823	comment	3.0	12.5	1521272512	6.92976	This gets off to a bad start:> There are three different types of inheritance going on.> 1. Ontological inheritance is about specialisation: this thing is a specific variety of that thing (a [soccer b...		thaumasiotes
16606612	11.786973	-7.3992176	comment	3.0	11.5	1521288537	6.5798225	">  if you ask me for any rectangle, and you reject a square, you are wrongNo, no: ""If you ask me for any object that can have independent width and height, and you reject a Square, you are..."" right, of course. It depends on the properties that define what a Rectangle and a Square are in your code."		Jare
16607279	12.174907	-7.329734	comment	3.0	11.0	1521299359	7.175793	I get what you're saying, but I'm still persuaded this is what happens with Kay and/or smalltalk. 100 times I've seen threads about OO. 99 times someone brought up Kay/smalltalk. Zero times did they s...		psyc
16608639	11.765835	-7.333246	comment	3.0	15.0	1521315286	7.15809	You’ve described interfaces, not so much inheritance.		dyarosla
16616037	12.272385	-7.2803297	comment	3.0	21.5	1521430472	7.098789	Makes you wonder what pioneers back in the 60s and 70s could have accomplished with modern hardware. What does Smalltalk or Englebert's NLS end up being with gigs of RAM and high speed network connect...		goatlover
16617156	11.841649	-7.1865964	comment	3.0	15.0	1521452535	-8.976579	> There is also an example with types, but this becomes very awkward to show in Python.With the book having been published in 2014, and type hints [1] being introduced with Python 3.5 released in 2015...		bringtheaction
16636567	11.642396	-7.166715	comment	3.0	21.0	1521624156	7.841528	Sad var/val (or var/let) didn't make it.All good Java developers I know make all local variables final to force better code.		WHoWHo
16636646	11.700167	-7.137394	comment	3.0	13.0	1521625498	7.7296047	"var is inside jdk10...
http://openjdk.java.net/jeps/286"		merb
16682394	11.649073	-7.979474	comment	3.0	17.5	1522096974	10.226122	> Only because the golang core team seem to insist on reinventing every wheel either without considering prior art, or at least without considering why prior art went with a particular approach.The po...		weberc2
16623235	11.641215	-7.8971934	story	3.0	5.0	1521493976	10.188573	Node.js vs. Golang		NICKgMRP
16653570	11.955108	-7.4154367	story	3.0	66.0	1521760072	7.123609	Alan Kay's: Why is FP seen as the opposite of OOP rather than an addition?	https://www.quora.com/Why-is-functional-programming-seen-as-the-opposite-of-OOP-rather-than-an-addition-to-it/answer/Alan-Kay-11?share=a52bda70	mpweiher
16709406	12.17642	-7.642043	comment	3.0	15.0	1522346753	11.898729	> I would have a hard time recommending Scala Native over Rust.Why?  Scala is so much nicer.> I would have a hard time recommending Scala.js over Typescript.For this too, Scala is so much nicer.  The ...		tytytytytytytyt
16709714	12.210371	-7.6356244	comment	3.0	11.5	1522348292	11.971753	There's one case missing: Build a command-line tool with concise and maintainable code; Performance is not important.Scala Native would win over Rust and Go, which are too low-level. Scala Native woul...		tanin
16709850	12.15829	-7.6047935	comment	3.0	12.0	1522348905	11.91373	> It's singleton and union type support is leagues ahead of Scala and Dotty.What? I don't understand it's better than dotty which has a proven core? Typescript's type system wasn't (isn't? I don't kno...		eklavya
16750762	11.767047	-7.0835924	comment	3.0	14.5	1522801526	-5.941013	There is a proposal out for it:https://github.com/tc39/proposal-optional-chaining		nimos
16755482	12.29043	-7.305167	comment	3.0	13.0	1522854791	7.1014843	"This is kind of an offtopic question, but regardless:
Is there any application written in smalltalk in the debian repository? (or any other linux distro)"		cosarara97
16753809	11.995286	-7.4727416	story	3.0	3.0	1522842379	7.2585583	What Functional Programming Language Should You Learn?	https://hackernoon.com/what-functional-language-should-i-learn-5e4157ff574f	AKdeBerg
16708142	12.238103	-7.6411915	story	3.0	77.0	1522339643	-5.213525	Scala Native 0.3.7	https://github.com/scala-native/scala-native/releases/tag/v0.3.7	joshlemer
16780169	11.844678	-7.5254235	comment	3.0	15.0	1523096567	10.401262	It's an interesting question. It seems that developers are quite able to cope with weird type systems, moreover most of them don't even think about it or even care.A simple example of python2 that wou...		toolslive
16781148	12.077984	-7.1927786	comment	3.0	32.0	1523114966	-10.421493	I've worked a lot with TypeScript after a background in more type-y languages like O'Caml and Haskell and have eventually gained a real appreciation for the engineering tradeoff they made.  This artic...		evmar
16786449	11.746769	-7.1139035	comment	3.0	13.0	1523200385	-2.3285396	Your proposed classes would lead to everyone just collecting class D, because it's the only one that allows for targeted collection, which is needed even for diagnostics and debugging. In order to imp...		brainwad
16790473	11.692144	-7.922468	comment	3.0	10.5	1523249459	10.267911	The landing page seems to be a little confused about what it's advertising. To me this should either be targeting people who need a CMS or people who want to use Golang.If I'm just a guy who needs a C...		sdrothrock
16799171	11.611292	-7.142973	comment	3.0	11.5	1523337921	-10.415731	Original author of zmq/nanomsg here.After all those years dealing with the problem of implementing network protocols I believe that this entire tangle of problems exists because we are dealing with so...		rumcajz
19311065	11.822403	-7.2618136	comment	3.0	12.5	1551799411	7.2168493	"""Each dimension of the cube corresponds to a new way of making objects depend on other objects""Is it normal to refer to data structures as objects? Just to my knowledge most typed languages abhor the awesome potential of object-oriented programming, like the CLOS."		kuwze
19311963	11.727042	-7.3797703	comment	3.0	13.0	1551805286	-8.797419	This is a common meme, but I'd like to see some robust empirical evidence either way (the only studies I've seen so far are with e.g. a handful of undergraduates, implementing a toy problem, well-spec...		chriswarbo
19319565	11.65414	-7.4644136	comment	3.0	12.5	1551886195	10.275927	This... I can actually see the point in this. The Visitor pattern is one of those patterns I never really saw the point of, and which mostly struck me as an over-engineered hack about a shortcoming in...		mcv
19383216	12.458503	-7.4563155	comment	3.0	11.0	1552507861	-13.837563	Recent encounter: 70+ microservices for a minor ecommerce application. Total madness and while I'm all for approaching things in a modular way if you really want to mimic Erlang/BEAM/OTP just switch p...		jacquesm
19386162	11.602828	-7.8910294	comment	3.0	36.0	1552532129	10.256494	> Readability. I always found the Go code I encountered quite easy to read and understand, both our code and external code. Some of the C++ I encountered, in contrast, took hours to fully comprehend. ...		chewxy
19386724	11.633315	-7.9650393	comment	3.0	11.0	1552541315	10.200029	Claiming that Go should excels in readability or ergonomics is pure, Koolaid fever-dream delusion.Is it cleaner than C/C++?  Sure.  It's still a painfully verbose  language full of boilerplate and wit...		jonahx
19387469	11.650008	-7.969262	comment	3.0	15.5	1552553069	10.2421875	Well, there's some blub paradox (PG) at play.As Go team found out, it's not like people go from C++, OcamL or other full featured languages to Go.For Python/Ruby etc programmings coming to Go, the lac...		coldtea
19408179	11.652477	-7.023781	comment	3.0	24.0	1552748875	8.965183	A “dict” operator would be vague because there is more than one way to combine dictionaries.  Why should I have to guess whether duplicate keys are being skipped or replaced by a symbol, when two different well-named functions will always make it clear?		makecheck
19408194	11.951975	-7.4599347	comment	3.0	11.5	1552749009	7.110699	It is quite obvious to me that the author is ignorant on the history of computing.The reason of the popularity of OOP is way longer than java, Xerox invented the graphical desktop and ALSO OOP.When St...		hevi_jos
19410320	11.617689	-7.9288864	comment	3.0	14.0	1552770736	10.199124	"Rob Pike wrote a rationale for Go's type syntax here: https://blog.golang.org/gos-declaration-syntax He seems to agree with you.""One merit of this left-to-right style is how well it works as the types..."		waterhouse
19416498	11.740654	-7.394437	comment	3.0	26.5	1552855729	-8.681011	A lot of us still feel that way. The trade off is still there, and in many situation I still don’t find types to be worth the trouble.		phyrex
19350367	11.837183	-7.082988	story	3.0	99.0	1552193699	-7.366828	Monoids and Differential Dataflow	https://github.com/frankmcsherry/blog/blob/master/posts/2019-02-09.md	pplonski86
19412667	11.911571	-7.633219	story	3.0	155.0	1552806604	10.345884	Higher-Order Type-Level Programming in Haskell [pdf]	https://www.microsoft.com/en-us/research/uploads/prod/2019/03/ho-haskell-5c8bb4918a4de.pdf	justinhj
19416854	11.770664	-7.3471913	comment	3.0	11.0	1552859194	-8.92143	> Not really, in my opinion. Type inference especially has come a long way.Does dynamic typing also make writing tests easier?For example when writing tests in Python it's relatively trivial to mock o...		rifung
19428654	12.2432375	-7.1872954	comment	3.0	10.5	1552978637	8.827277	Personally I think Spring Boot with Kotlin is a way better choice today for monoliths that transition well to micro services.What do you use for an ORM in this case? Is there anything comparable to ActiveAdmin?		cageface
19435936	11.62582	-7.507539	comment	3.0	10.5	1553029907	6.2297764	I share the conclusion of the other statically typed JVM languages (Scala, Kotlin): checked exceptions are bad.		paulddraper
19436299	12.011108	-7.0969386	comment	3.0	14.5	1553031873	8.236138	Java has evolved pretty far past its strict OOP roots. I haven't kept up with the last few versions, but it added lambda functions way back in Java 8, for example. There's definitely syntactic baggage...		_bxg1
19442067	11.65328	-7.8819613	comment	3.0	10.5	1553089553	-1.232466	This is a Go library that parses a usage string into an AST.		hwj
19441157	11.697273	-7.670131	comment	3.0	12.5	1553082908	-11.299929	>What tooling? Being forced to use InteliJ, without any proper support on Eclipse and Netbeans?Seeing that both Eclipse and Netbeans are now more or less dead (and speaking as a long time Eclipse user...		coldtea
19445797	11.667638	-7.9415855	comment	3.0	10.5	1553109560	10.199388	Go's modules are quite a lot nicer than Java's or Python's dependency management / build tools. JavaScript only recently got its act together. Can't speak to Ruby, but Rust is the only one that got it...		weberc2
19450909	11.886088	-7.3659387	comment	3.0	16.0	1553166298	-9.025495	I'm not sure if people using functional languages are more productive. One of the points Uncle Bob makes in his talk supporting functional programming is that it is harder and slower to write:https://...		dual_basis
19463106	11.871082	-7.520368	comment	3.0	10.5	1553266631	-8.40244	> you really can’t do FP without automatic currying and the function composition and application operators (. And $) in HaskellBut lambdas are enough to define these operators e.g.    (defn comp [f g]...		lkitching
19464208	12.438925	-7.5327287	comment	3.0	14.0	1553272520	12.885021	Rust seems like the right answer for a lot of things except writing servers. For that, Elixir with its Erlang VM seems like a better answer.		youeseh
19470361	11.699045	-7.910525	comment	3.0	13.0	1553347795	-12.188622	I love how the distributed web is seemingly built more and more in golang these days.- https://github.com/ethereum/go-ethereum- https://github.com/ipfs/go-ipfs- https://github.com/textileio/go-textile- https://github.com/lightningnetwork/lndto name a few other projects.		mewwts
19474129	12.033347	-7.091884	comment	3.0	11.0	1553398919	-9.482116	PEP484 and the current state of typings in Python:- Imports everywhere. Even basic types (list, dict, set) have to be imported- Basic types don't share the same casing as the actual types they represe...		scrollaway
19476428	11.814193	-7.1137795	comment	3.0	14.5	1553436799	-9.02619	Wow. It's amazing the lengths people go to to maintain their delusions. Show me one python IDE in action doing effective refactoring across a large, nontrivial python code base. And you didn't even me...		computerex
19478110	11.833628	-7.0195513	comment	3.0	16.0	1553454428	-9.024961	I notice this was written in 2016, but I wonder if the author's opinion has changed since dataclasses have been implemented in Python.		o10449366
19478910	11.60891	-7.9301863	comment	3.0	13.0	1553463188	10.06328	Congrats on releasing, that's a huge feat. A Go GUI app is an interesting concept, it definitely has compelling advantages like single binary targets and inherently cross platform code.I do take issue...		themacguffinman
19465963	12.118599	-7.4749537	story	3.0	95.0	1553282496	-10.583802	Expressing Business Flows Using an F# DSL	https://medium.com/jettech/microservices-to-workflows-expressing-business-flows-using-an-f-dsl-d2e74e6d6d5e	jnovino
19474188	11.774344	-7.2930017	story	3.0	3.0	1553399752	-8.895219	Ask HN: Why not static and dynamic typing?		elamje
19488793	11.693908	-7.389637	story	3.0	34.0	1553567276	-8.72512	A programming language agnostic type construction and interchange language	http://typedefs.com/	mafm
19560814	12.002807	-7.6851153	comment	3.0	11.5	1554266574	12.118935	I would have thought rails to golang so I too am surprised.I wish I had millions and could be a patron saint of sorts for people like the author. Open source funding is so broken as the companies that...		gigatexal
19560532	12.404677	-7.0403767	comment	3.0	11.0	1554262568	12.952242	"This is a good reminder as to why Ruby is often called ""the bad parts of Perl."" I really appreciate other programming language ecosystems (almost any modern ones besides Ruby) that have abandoned things like this as bad practice, while Ruby continues to double down on it."		stevebmark
19562189	12.246428	-7.5524426	comment	3.0	11.0	1554286967	-11.384231	"Kotlin is great, but I think the ""it"" syntax was derived from Groovy."		jimmychangas
19562527	12.407915	-7.0689564	comment	3.0	11.5	1554291671	12.378144	I agree and disagree.The more features the language has, the harder it is to read.And using @ for positional arguments when it’s already used for instance variables is a questionable choice. But on th...		ashelmire
19568681	11.635651	-7.120883	comment	3.0	13.0	1554342274	9.56175	"""My favorite is always the billion dollar mistake of having null in the language. And since JavaScript has both null and undefined, it's the two billion dollar mistake."" -Anders Hejlsberg""It is by far..."		DonHopkins
19570270	11.940504	-7.584994	comment	3.0	12.5	1554366846	-10.235796	This is actually not at all pedantic but a very fundamental, if subtle at first glance, point about purity. Once you start doing more advanced monadic programming it stops being subtle at all. Many pe...		jcora
19523518	11.712373	-7.3348374	story	3.0	25.0	1553879289	-6.789419	Solving Rings in Agda	https://oisdk.github.io/agda-ring-solver/README.html	lelf
19560046	11.615732	-7.9283233	story	3.0	195.0	1554254480	10.20155	A Go implementation of Poly1305 that makes sense	https://blog.filippo.io/a-literate-go-implementation-of-poly1305/	pentestercrab
19584628	11.911679	-7.337872	comment	3.0	11.5	1554483891	7.0655937	"OOP is great if all you are doing is OO and if your solution to a problem is running a simulation (what OOP was invented for).But you are not staying in your pure OO-world nowadays.
There's always the..."		beders
19589785	11.88982	-7.1061482	comment	3.0	15.0	1554537561	9.204718	"At around 22:10, the speaker summarises equivalencies between common SQL clauses (SELECT, GROUP BY, etc.) and what Java 8 calls a ""stream API"" (map, collect, etc.).
https://blog.jooq.org/2015/08/13/common-sql-clauses-and-thei...Neat. I hadn't thought of it that way before."		rgoulter
19590046	12.220725	-7.4518948	comment	3.0	11.0	1554544313	-11.325115	Single executables yet without JVM?Static typing?Simplified toolchain without make/maven files?My big one after swearing off of Java was never needing an IDE to do even the simplest things - is Kotlin useable without an IDE?		hactually
19590069	11.813454	-7.4047403	comment	3.0	13.0	1554544928	7.204221	Embedding does seem like one of the decisions Go got very right.Many languages (thinking c#, Java, c++) say they promote composition over inheritance but yet make inheritance so mmuch easier to use.		tybit
19590433	11.640719	-7.9036193	comment	3.0	10.5	1554554146	10.172249	go codebases are not shorter (by much) than java's.Performance is also usually on par - unless java's equivalent is built around a lot of reflection (orm and what not).However, go compiled binaries are usually smaller, and code IMO is much more readable.		sheeshkebab
19615737	12.480938	-7.8405757	comment	3.0	26.0	1554824359	9.339437	I get to do Clojure about ~60% of the time at work now, and it never ceases to amaze me how much easier it is to deal with concurrency than in vanilla Java.Futures and Promises and core.async don't al...		tombert
19616180	11.784357	-7.1850824	comment	3.0	15.0	1554826518	9.190332	I was reading somewhere that the core.async lib has not been updated in awhile...is this correct? (generally curious if the lib is actively updated)		devgoth
19616765	11.595322	-7.813169	comment	3.0	11.5	1554829633	9.672467	To a reasonable extent, yes, they're the same.  The biggest issue is that goroutines are (more or less) fully preemptive (for all intents and purpose) with their thread pooling and go blocks in core.a...		tombert
19642380	11.836453	-7.6506963	comment	3.0	15.5	1555049143	10.360637	"This article is incomplete. The Haskell Library ""discrimination"" has a linear time, ""productive"" (in that it can output partial results before the full input has been seen) version of this:http://hack..."		KirinDave
19653575	11.874878	-7.3746424	comment	3.0	11.5	1555169690	10.378638	I couldn't agree more, but if I could make a recommendation. If you already know a mainstream OO language, you won't get much benefit out of learning another in the same arena. Going from Java to C# y...		leshow
19587845	11.750429	-7.164347	story	3.0	16.0	1554505315	6.8536496	Umple: Model-Oriented Programming	https://cruise.eecs.uottawa.ca/umple/	shortlived
19628981	12.292855	-7.0606093	story	3.0	46.0	1554931790	13.163853	GADTs and Superpositions in Perl 6	https://aearnus.github.io/2019/04/08/gadts-in-perl-6	lizmat
19697488	12.447277	-7.071421	comment	3.0	24.0	1555655299	12.387716	Very cool! I didn't think this would happen, as Matz has expressed disinterest in adding type annotations. However, keeping an open mind and reconsidering one's positions are the hallmarks of a great ...		_hardwaregeek
19697898	11.835926	-7.3723125	comment	3.0	11.5	1555661959	-8.826141	Who's to say we couldn't use the types to make the runtime faster in the future?One of the reasons why Sorbet does both runtime checking[1] more than just static checking is so that we can know that s...		z1mm32m4n
19700828	11.95133	-7.701037	comment	3.0	11.5	1555691332	10.371507	I'm not sure why it's wrong? Python isn't Haskell. If you're dealing with path manipulation a lot, it makes for much more readable code.		okasaki
19715867	11.799166	-7.129872	comment	3.0	21.0	1555899104	7.592055	"The important thing is restricting your public interface, hiding
implementation details, and thinking about how easy your code (and code that
uses it) will be to change later. It's not an OO vs anythi..."		kbp
19716012	12.235969	-7.592197	comment	3.0	11.5	1555901162	11.914867	"> How about having to create six different filesTook me a few reads but it's better stated ""six different classes"".  At first I was confused about why you rely on `java.io.File` for business logic.So,..."		libria
19716281	11.920684	-7.28096	comment	3.0	22.0	1555903818	7.0243874	Both Alan Kay and Joe Armstrong struck me as having had the same attitude of trying to capitalize on the topic of object oriented programming, failing to recognize its importance, and then later trying to appropriate it by redefining it.Not the best moment of these otherwise two bright minds.		hota_mazi
19715461	11.935432	-7.344185	comment	3.0	24.0	1555892998	6.9955807	OO is the worst programming paradigm in the world except for all the others.		tootie
19715589	11.931216	-7.4126306	comment	3.0	19.5	1555894805	7.153814	I don't think what I'm about to say is necessarily inherently true, but it reflects how things seem to work in practice:It seems to me that part of the problem is that OO doesn't force you to have dis...		harimau777
19718776	11.80522	-7.273692	comment	3.0	10.5	1555940179	8.653217	Maybe I am a complete philistine but is that really a bad thing or just something which goes against their categorism? I get that there are some circumstances where setters would break assumptions but classes are meant to be worked with, period.		Nasrudith
19725964	11.8482065	-7.3474684	comment	3.0	13.0	1555999231	-8.941383	"I don't see how this has anything to do with AI or ML. It's a great description of why you might want to prefer strongly typed languages, avoid ""the data is the schema"" key-value monstrosities like mo..."		ohazi
19668570	12.34034	-7.0358915	story	3.0	5.0	1555359749	13.192192	Ask HN: Are you using Perl 6?		pictur
19781468	11.598074	-7.891375	comment	3.0	15.0	1556564217	10.076462	Well, unless you consider Go's concurrency model superior, as well as the fact that you get native binaries.		AsyncAwait
19789433	11.667245	-7.043932	comment	3.0	18.5	1556641963	9.221654	> I fail to understand the use of python in a distributed environment while the language has such poor concurrency supportBecause it's a distributed environment probably is exactly why.  Python has (a...		gshulegaard
19789983	11.897104	-7.0517454	comment	3.0	13.0	1556645210	-10.773073	Even if your app is IO bound, Python's concurrency is painful. Because it's not statically typed, it's too easy to forget an `await` (causing your program to get a Promise[Foo] when you meant to get a...		weberc2
19783606	11.905063	-7.092315	story	3.0	95.0	1556580417	-10.749889	Getting to Know Python 3.7- Data Classes, Async-Await and More	https://blog.heroku.com/python37-dataclasses-async-await	joeyespo
19821889	12.104896	-7.0258746	comment	3.0	14.5	1556914715	-10.266066	It's quite interesting seeing the polarization of people's opinions on type systems. I have friends who adamantly argue that static types slow them down and prevent them from adapting quickly. On the ...		_hardwaregeek
19822106	11.736464	-7.372815	comment	3.0	17.0	1556916348	-8.815468	As someone working in dynamic languages for years, I've noticed a certain trend in arguing about type systems.People will ARGUE about the benefits of compile-time checking.However, when people point t...		ergothus
19822138	11.723534	-7.2632093	comment	3.0	14.5	1556916579	2.0585892	> Rarely do they notice these two are not the same thing.Types enable better tooling. That's why people mention tooling when types come up.		naasking
19822389	11.759913	-7.3518243	comment	3.0	11.5	1556918385	-8.916255	Static types enable better static tooling. Dynamic types enable better dynamic tooling. :)These days, most programmers are very familiar with high quality static tooling (IDEs) but less familiar with high quality dynamic tooling.		munificent
19829977	11.962783	-7.458537	comment	3.0	13.0	1557011705	7.2341623	"> Mainstream languages are Java, JS, C++, Python, etc — languages one would hardly call “functional”.Even so, ""functionalizing"" mainstream languages is a thing.  Gary Bernhardt was long advocating fun..."		dnautics
19830058	11.949152	-7.399679	comment	3.0	10.5	1557012662	7.1307235	> Sometimes the code turns out more oopI think it's misleading to think of FP as being necessarily opposed to OOP.  While FP is very much in opposition to the stroustropian style of OOP in syntax and ...		dnautics
19840899	11.619082	-7.967125	comment	3.0	12.0	1557159910	10.201574	That is taken out of context.  Practically all Google server code is written in C++ or, at a much smaller scale, Java.  Go is used for logs analysis, internal services, monitoring and automation, etc....		shereadsthenews
19853645	12.254278	-7.548788	comment	3.0	13.0	1557264669	-11.40039	"I feel good and bad about this.I invested several years at coming up to speed with Java 8+ (using templates, rx, streams, the new time APIs).
It was not hard, but difficult to unlearn some C++ idioms ..."		maga_2020
19857329	12.245352	-7.531245	comment	3.0	10.5	1557309027	-11.37788	Kotlin on Android ultimately runs on Google's ART, not a JVM implementation, think MS J++.Also JetBrains is betting on moving Kotlin beyond the JVM, to all platforms it can reach.The latest version of kotlinc is now built with Kotlin/Native.		pjmlp
19858810	12.261459	-7.5768895	comment	3.0	12.0	1557323695	-11.42925	> Kotlin is rising in popularity because it's turning out to be the better Java that Groovy and Scala weren't.I'd say Kotlin is rising in popularity mainly because it's a Java alternative backed up by Google.		dvfjsdhgfv
19864676	11.843064	-7.357039	comment	3.0	23.5	1557366705	7.11607	The one we can dispense with is encapsulation.Polymorphism, no; I mean, how can we substitute different kinds of objects into the same situations dynamically without polymorphism. OOP is almost synony...		kazinator
19866259	12.241866	-7.391174	comment	3.0	10.5	1557388919	12.869703	"that's too vague.  Most OO PLs don't actually use messages in any way under the hood (except maaaybe ruby?  I hear things but haven't peeked at the MRI code) and use messages as a ""conceptual framewor..."		dnautics
19866373	11.838636	-7.3548875	comment	3.0	11.5	1557390360	7.023664	I was taught that there were 4 tenents, inheritance, encapsulation, polymorphism and abstraction.		jmkni
19871468	11.676692	-7.902736	comment	3.0	11.0	1557430373	10.230099	Java had become the industry's workhorse also without generics, that were included only in Java 5, 8 years after Java 1.0. C++ had it for ages by that time, but it did not help its adoption too much (...		nine_k
19876131	11.625202	-7.9169393	comment	3.0	19.5	1557477707	10.188872	And yet, people are building big code bases on top of both C and Go without generics all the time. Like C, Go lacks support for elaborate abstractions. It's still a better C for many problems.		codr7
19876486	11.691223	-7.4645762	comment	3.0	11.0	1557483351	10.047204	Well, your list does include three practical options. Using interface{} is the go-to option and usually works fine.The overhead of interface{} isn't as high as people sometimes think. You have the overhead of boxing the value, but the actual type checking is just a single comparison and jump.		foldr
19882466	11.806026	-7.37173	comment	3.0	14.0	1557524059	-8.917144	Great points, but it's actually much simpler than that: if you want static types, you have already eliminated the majority of HN darlings (JS, Python, and Ruby). Where do you? Most developers turn to ...		vijucat
19886367	12.071896	-7.839128	story	3.0	87.0	1557585174	10.420864	OCaPIC: PIC microcontrollers programmed in OCaml	http://www.algo-prog.info/ocapic/web/	lelf
19909058	12.505757	-7.4763703	comment	3.0	13.0	1557839145	-8.8936405	Numerical computation is not and never was a priority for the BEAM. Reliability, network connectivity and efficiency for multiple processes were.If you want to leverage highly performant numerical cod...		phoe-krk
19916488	12.443154	-7.047682	comment	3.0	10.5	1557895466	11.589454	1. f-string and extended-iterable-unpacking reminds ruby. i was really missing them.2. pathlib is cool. will come pretty handy.3. Data classes sounds good but there should be only one way to do things...		croh
19968937	11.72634	-7.399519	comment	3.0	15.5	1558435058	-8.33722	Type theories, especially dependent type theories a la Martin-Löf, are quite natural to work with. They are easier to implement on a computer, and there are active communities around several such impl...		gylterud
19970816	11.934546	-7.2078257	comment	3.0	13.5	1558451279	-9.107074	> As someone who has over 15 years of experience going back and forth between statically typed and dynamically typed programming languagesI have >20, in a mix of dynamic and statically typed languages...		munificent
19922900	11.893221	-7.0857363	story	3.0	6.0	1557948781	-10.757547	How to Retrieve 100k Objects with Python: Why We Prefer Threading to Asyncio	https://medium.com/@rbpengineering/how-to-retrieve-100k-objects-with-python-why-we-prefer-threading-to-asyncio-d6b2cbfd7d90	mrosett
33026788	11.834441	-7.193026	comment	3.0	25.5	1664483737	9.133697	"The section ""What about async/await?"", which compares these virtual threads to async/await is very weak. After reading this article, I came away with the impression that this is a dramatically worse w..."		mgraczyk
24753001	11.757376	-7.604064	comment	3.0	15.5	1602498019	10.408159	Can always rely on C++ for hacks that are interesting, clever, and awful.Apparently Haskell supports overloading on return type: https://stackoverflow.com/a/442291/		MaxBarraclough
33041257	11.641112	-7.9632783	story	3.0	2.0	1664574597	10.2415695	Golang – Pull all the structs out???		brianvoe
24761766	12.006982	-7.5264697	story	3.0	6.0	1602557408	7.246168	Ask HN: How did you land a functional programming job		xupybd
24792111	11.7893915	-7.407051	comment	3.0	16.0	1602786970	7.1552067	Are void functions not considered functions in functional programming?I guess in math they're not. Functions have to have a codomain and map some things into it.		ramshorns
24836402	11.641366	-7.021196	story	3.0	37.0	1603196015	6.405238	Pattern Matching in Python	https://github.com/gvanrossum/patma	amosson
24842298	12.239423	-7.270361	story	3.0	33.0	1603227498	7.065543	Design patterns, Smalltalk, and the lost art of reading code	https://medium.com/swlh/design-patterns-smalltalk-and-the-lost-art-of-reading-code-1727d93fd7fa	tartoran
24857242	11.596273	-7.030701	comment	3.0	18.5	1603369590	4.4692154	I'm not sure I get this, does the data type change depending on context? Is that what they mean?		oblio
24880216	11.923981	-7.439975	comment	3.0	11.5	1603557240	7.2671666	Functional programming was never about first-class functions. It was always about programming with pure and total functions in their mathematical version.		dsabanin
24880586	11.622831	-7.114435	comment	3.0	10.5	1603560227	8.21836	I dont understand this. This has the same disadvantages as global variables: every function (that has the state) can change it.		andi999
24891082	11.94656	-7.614874	comment	3.0	10.5	1603668342	10.37889	"I've recently picked it up, reading ""ML for the working programmer"". The language is fairly simple, everything just fits. However:1. Both Vim and Emacs are horribly annoying with their automatic inden..."		yakubin
24891273	12.056169	-7.806743	comment	3.0	14.0	1603669722	10.396248	As someone reasonably versed in OCaml but knows nothing about SML, what are primary differences? Given that OCaml has much better tooling and more of a community, what draws people to SML still?		wilsonthewhale
24915698	11.677594	-7.097374	comment	3.0	10.5	1603864597	-4.813859	"> (..Manager, ..aggregator,etc.)Names ending in Manager are usually a poor choice.See Peter Coad's ""-er-er"" principle:> The “-er-er” principle. Challenge any class name that ends in “-er.” If it has n..."		jonahx
24940404	11.715713	-7.216524	comment	3.0	14.0	1604048459	9.160889	> That’s why C# has that little caveat. You can avoid the pain of async in C# by using threads.This is the first time I've seen threads referred to as a way to avoid pain.		thaumasiotes
24952155	11.881085	-7.3984065	comment	3.0	11.5	1604157862	-10.521633	"I like FP's other ""timeless"" feature, you can think of the operations without respect to time, there isn't a sequence of operations, it's just a relation between the input and output. It may be descri..."		karmakaze
24958960	12.189126	-7.5814347	comment	3.0	11.0	1604233148	-11.150664	I am doing something similar for my apps but instead of using Kotlin I am writing it in either Swift or C#		wdb
24959003	12.257335	-7.6075997	comment	3.0	13.0	1604233753	-11.370793	This is a big move! I haven't seen many people use Kotlin Multiplatform for mobile app dev. Personally, never trusted Google due to their inability to stick with one technology. They have Kotlin Multi...		anupamchugh
24975349	12.027544	-7.7677345	comment	3.0	10.5	1604366122	10.434079	It was interesting to hear that the Ocaml community has something of that “talking about category theory and functors” vibe that Haskell has. The Haskell posts/community vibe that I see is very heavy ...		jitl
24975351	12.093954	-7.66845	comment	3.0	16.0	1604366135	-10.6362505	"> The big reason to not use F# vs OCaml tends to come down to the lack of functors...What do you mean by that? F# has support for functors, or are you referring to something else?
https://fsprojects.github.io/FSharpPlus/applicative-functors..."		Nuzzerino
24980129	12.108491	-7.674407	comment	3.0	11.5	1604415344	-10.624632	the advantage of F# over OCaml is that your ecosystem is way larger... you can always 'snarf' c# libraries.		toolslive
24980483	12.122453	-7.493053	comment	3.0	11.5	1604417317	-10.601966	"Wow, I remember learning about F# and thinking, ""too bad it's stuck on Windows, I'll never use it"". Awesome to hear that .NET Core has really changed that.How is the incremental typechecking experienc..."		rattray
24996366	11.691781	-7.4633613	comment	3.0	12.5	1604562160	-8.737724	Revolutionary technology right here lads. This is what happens when you ignore the entire history of programming languages and all the lessons learned along the way. You end up with a proposal to add type parameters, 8 or so years after its release.		sagitariusrex
24988454	11.980053	-7.7319546	story	3.0	160.0	1604493567	10.427524	Haskell Foundation	https://haskell.foundation/	todsacerdoti
25012821	11.605439	-7.8924766	comment	3.0	10.5	1604715691	10.193497	What's not so great about Golang:-error handling is kinda ugly and verbose-no generics-interfaces are done through duck typing-null pointers-int size is platform dependent-no built-in immutability		fnord77
25013050	12.338051	-7.2602577	comment	3.0	14.0	1604720025	7.119117	I just picked up pharo and gtoolkit recently... wishing this was the direction we were going in these days		moocowtruck
25025554	11.961845	-7.7072315	comment	3.0	12.0	1604840800	10.368485	"I don't think the problem is really complexity. It's just the config language.If you come from a Haskell background its nice, otherwise it's ""arcane"".Try Guix-SD."		k__
25040445	11.792534	-7.4053683	comment	3.0	10.5	1604958986	9.734498	You could have said the same about pre-generics Java. The problem is that when the language is simple and minimalist, people do things with the language that are byzantine and arcane, and you can't learn those in two weeks. Example: classic Spring's XML configuration inner platform.		quotemstr
25041428	11.608773	-7.8889875	comment	3.0	16.5	1604966432	10.099809	I think Go adds even more complexity to concurrency by pushing the CSP model. CSP is hard for many problems where classic shared-memory using locks and atomics are well defined (think of classic concurrency programming textbooks).		diehunde
25042474	11.887002	-7.2413726	comment	3.0	11.0	1604977545	6.6703205	"Mutation is not merely a performance optimization, but makes code more concise and expressive. Mutation makes things like `cfg.tabs[2].title = ""Suspended""` possible to write in one line. Trying to ach..."		nyanpasu64
25043813	12.238877	-7.603261	comment	3.0	15.0	1604996554	11.975774	> Scala is a beast and the package manager + build tools were giving me headaches.Ignore them and use maven. It's much better documented, consistent, and backwards-compatible. I struggle to understand...		lmm
25047649	11.6164665	-7.9328184	comment	3.0	11.0	1605025172	10.208144	I've been learning golang for backend dev, and for that reason checked your project. Is this sort of like Netlify for the backend?Are there any examples of how the repository/database layer fits here?What'll happen to the name m3o when Micro reaches 4.0?		heldrida
25048757	11.659261	-7.967412	comment	3.0	15.0	1605030629	10.238452	I am super happy that I invested in Go. I ended up working on TURN, WebRTC and DTLS and feel I made the right choice. The impact vs time spent was worth it. I don't think there is any other language I...		Sean-Der
25048351	11.965755	-7.181469	comment	3.0	14.5	1605028622	9.158711	"For simplicity?
Just like how js get async await thing eventually."		mmis1000
25059456	11.7122	-7.1310687	comment	3.0	11.0	1605110729	9.126198	Needed when executing 1 million API requests for example. Use the full force of your machine by utilising async IO via the excellent library Trio.It has been tested in the wild with more than 10 milli...		joshlk
25070244	12.121863	-7.4938893	comment	3.0	10.5	1605191521	-10.597239	Low ceremony? Complexity in real world applications requires complexity in the frameworks that address them. Users will be more disappointed by simplicity that leaves them addressing complexity withou...		mdpm
25072159	11.94544	-7.0215507	comment	3.0	14.0	1605202100	-9.413485	With Anders Hejlsberg also at Microsoft, maybe they do something like type-safe Python similar to TypeScript?Anyway, congrats to both MS and Anders! This will be very interesting for Python.		_the_inflator
25077596	11.799949	-7.1521115	comment	3.0	10.5	1605229689	-9.033417	I work at Instagram, which is a O(millions) LOC Python monorepo with massive throughput and a large engineering team. It's actually quite nice — but our code is heavily, heavily typed. It would be mis...		reissbaker
25042085	11.6137705	-7.918857	story	3.0	44.0	1604973210	10.221745	Best Practices for Writing Clean Interfaces in Go	https://qvault.io/2020/03/15/best-practices-for-writing-clean-interfaces-in-go/	lanecwagner
25034538	12.105725	-7.885568	story	3.0	92.0	1604928441	10.415951	Multicore OCaml: October 2020	https://discuss.ocaml.org/t/multicore-ocaml-october-2020/6729	sadiq
25093069	11.969055	-7.739978	comment	3.0	11.5	1605369555	10.436946	"So tell me what do people mean when they say Haskell is more ""powerful""? Tell me the definition. I don't think there is a different definition. I think it's just that most people aren't sure why Haske..."		Geminidog
25107897	12.070713	-7.8061957	comment	3.0	20.0	1605499750	10.412623	Ocaml is rock solid as a foundation, yet the ecosystem appears to be very fragmented. For example, not only does Ocaml not support unicode strings natively, there are several competing libraries offer...		nikitaga
25108320	12.072115	-7.809497	comment	3.0	14.5	1605503891	10.426454	> many applications just don't need it. Those that do can of course use libraries, but many (say, backend servers) don't really need to process Unicode stringsI can't speak for actual Ocaml users, but...		nikitaga
25118212	11.883269	-7.358327	comment	3.0	19.5	1605567633	7.042841	"Just to set some context, I'm of the ""OOP Generation"" where I learned to program when OOP was at its zenith. Every major language was Class-based OOP (C++, C#, Java, Python, Ruby) and it was just THE ..."		valbaca
25118437	11.927335	-7.338246	comment	3.0	18.0	1605569357	7.0645657	You need to read up on Anemic Domain Model (https://martinfowler.com/bliki/AnemicDomainModel.html).I see a lot of chaos in your post.Model is a model. Model is there to represent an aspect or aspects ...		lmilcin
25118652	11.763523	-7.478777	comment	3.0	14.0	1605570727	7.0234323	That's a very interesting observation, that is very much aligned with my own views, but I'll need some time to absorb the details here.I'm myself on the quest to fully understand what is really wrong ...		dpc_pw
25121618	11.8472595	-7.2629585	comment	3.0	12.5	1605604788	7.022101	Usually that just shows the lack of understanding of how to use OOP, and what should be proper classes, what should be interfaces or categories, depending on the language.		pjmlp
25156379	11.79379	-7.31903	comment	3.0	12.0	1605834745	-7.058718	And 10 years later, someone will eventually bring back dynamic typing and every one will go monkeys		jaequery
25156505	11.99106	-7.1603823	comment	3.0	10.5	1605836289	-10.371059	"Are template litteral runtime checked??If my parameter only accept ""foo"" or ""bar"" and that at runtime I send an invalid input, will I get a type runtime exception? Or will it silently allow the invali..."		The_rationalist
25163949	12.306208	-7.1364536	comment	3.0	11.0	1605900587	12.369173	This looks great in general, but does anyone else find Sorbet's signature formulation offputting? Feels cluttered and not at-a-glance readable.> sig {params(name: String, id: String).returns(Integer)}...		aerovistae
25099357	12.089169	-7.852033	story	3.0	113.0	1605429115	10.461419	Reflections on my first completed application in OCaml	https://discuss.ocaml.org/t/reflections-on-my-first-completed-application-in-ocaml/6768	mseri
25147851	11.966089	-7.726967	story	3.0	52.0	1605779433	10.403589	Advent of Code in Haskell: T Minus 16	https://www.bulters.dev/posts/t-minus-16/	todsacerdoti
25199253	12.173646	-7.054446	comment	3.0	12.0	1606231420	-10.446273	That's rather sad, union types are really what I like most about TypeScript. This might explain why VS Code feels so slow sometimes when type checking, because I have a few types that rely heavily on unions.		renke1
25217788	11.605931	-7.05655	comment	3.0	21.0	1606376179	8.545069	Yeah, basically everything has to be that way.At the super fast speeds you start running into things like:* why won’t the devirtualizer trigger?* these object headers are sure wasting a lot of cache* ...		vgatherps
25221254	11.77749	-7.3085437	comment	3.0	16.0	1606407608	-8.800905	I don’t understand the idea here. Isn’t typechecking a means of making impossible states impossible? The article references ideas like non empty arrays or limiting the input from all numbers to just i...		bern4444
25221304	11.653949	-7.2131963	comment	3.0	10.5	1606407991	6.9362583	Out of curiosity, why match expressions became popular for non functional languages? Without pattern matching on datatypes via cons expression (x::xs matching) it is just another kind of switch or if/...		yetkin
25221306	11.705056	-7.372474	comment	3.0	11.0	1606408030	-8.771623	"> Is this article against static type systems, or against runtime type checks? Or both...It's not ""against"" anything. It's pointing out that ""make impossible states unrepresentable"" is poorly satisfie..."		morelisp
25221400	11.998237	-7.767012	comment	3.0	12.5	1606408662	10.467033	"The irony:""I write this not because I expect to break any new ground—all the techniques I use here are long-documented in the literature, and Haskell veterans will probably find little new in this pos..."		axelerator
25223468	11.774733	-7.0271354	comment	3.0	10.5	1606424190	8.272403	No. Java is not low-latency by any stretch. Java advocates would like to think it is, until a Bank, like BoA spends $8 million on Java in 2014, just to have it fail compliance testing. Entire project was scrapped.		iphorde
25235844	11.694768	-7.8388467	comment	3.0	10.5	1606546528	10.166254	In their documentation ( https://k6.io/docs/ ) they claim that> JavaScript is not generally well suited for high performance. To achieve maximum performance, the tool itself is written in Go, embeddin...		Ugohcet
25245194	11.6875725	-7.2687035	story	3.0	45.0	1606659152	-8.811269	Lambda Calculus with Brainfuck for side effects	https://www.reddit.com/r/ProgrammingLanguages/comments/k33l6u/lambda_calculus_with_brainfuck_for_side_effects/	azhenley
25259077	11.8308115	-7.3334146	comment	3.0	13.0	1606770937	7.1111073	This is describing issues and tradeoffs of OOP relative to FP and haskell. It conveniently side steps the fundamental issue with OOP as used in Java or C++ or C#. I agree with most of what the author ...		Geminidog
25259574	11.812297	-7.3188186	comment	3.0	11.0	1606773562	7.1379313	I'm not sure I uderstand the point you are trying to make here:> To reuse addOne means to recreate the entire context of X. I want a banana but in order to get the banana I must recreate the gorilla h...		tcgv
25267402	11.736646	-7.8144903	comment	3.0	10.5	1606843796	10.124305	I've got bad experiences with go startup (i.e., cold runs). They're much more expensive than I would have expected. If node can indeed run in 40ms (as https://news.ycombinator.com/item?id=25267211 says), then I'm surely going back to JS.		tgv
25300557	11.883812	-7.311976	comment	3.0	11.0	1607074399	6.9077845	Short Answer : How to Design Programs (By: Sriram Krishnamurthi) http://htdp.org/2003-09-26/Long Answer : Design Patterns are useful only in an OO Setting, its utility is gone if you look at Functiona...		pankajdoharey
25300673	11.694667	-7.3401976	comment	3.0	10.5	1607075625	9.181928	The article seems to assume you know what Project Loom is.  (Not to be confused with Google's Project Loon, the balloon thing.)From https://wiki.openjdk.java.net/display/loom/Main, it's an OpenJDK pro...		nfoz
25306365	12.280372	-7.453228	comment	3.0	11.0	1607109010	-10.662365	How does Fable 3 stack up against ReScript or Scala.js?Is the only difference the ecosystem around the toolchains?		sp33der89
25308052	12.006048	-7.7401085	comment	3.0	14.5	1607116307	10.482887	I see a decent number of openings in the City of London quite regularly for finance and insurance positions. Also OCaml and sometimes Haskell. Even Rust has started popping up recently.I find this a b...		nextos
25272214	12.330835	-7.0556984	story	3.0	7.0	1606871838	13.172125	Day 2: Perl is dead. Long live Perl and Raku	https://raku-advent.blog/2020/12/02/day-1-perl-is-dead-long-live-perl-and-raku/	notagoodidea
25348442	11.601585	-7.836666	comment	3.0	11.5	1607448494	9.732654	> You can map, filter, reduce, chain, compose functions that all work with optionals, and lift functions that work on numbers (or any other type) to be functions that work on Optional<number> but none...		munificent
25400835	11.601739	-7.208887	comment	3.0	10.5	1607801554	8.979819	They're very pretty.But I really don't understand the meaning/value of most of the shown descriptions. (I see that the creator is not from an English-speaking country, which may explain also why the g...		ebg13
25406467	11.965883	-7.6881695	story	3.0	43.0	1607866720	10.368192	Functional Programming Is Not What Makes Haskell Great	https://hackernoon.com/functional-programming-is-not-what-makes-haskell-great-n33h3zkn	runeks
25426178	12.222389	-7.6866546	comment	3.0	11.0	1607997853	-10.488488	This feels a lot like what happened to Hack, which at first was compatible with PHP and could be compiled to it, but later became its own language to better fit FB's needs, and it seems like they're g...		steinuil
25438798	12.307691	-7.0196233	comment	3.0	11.0	1608090202	13.182378	100% agree.  Perl is highly underrated in today's software development climate.		naikrovek
25439516	11.631261	-7.961448	comment	3.0	13.0	1608097719	10.237702	"I don't understand this. If your code has wrong syntax it doesn't compile. If wrong grammar you can get very wrong results. But in english you can say ""I go store"" and it's understandable (which btw, can be a direct translation from several languages)"		godelski
25461425	11.602722	-7.178705	comment	3.0	15.0	1608244557	8.9902725	> Is it crazy if I think that first example is the most readable of the three?IMO, sort of!All abstraction requires you to understand it at some level before you can quickly reason about it in code. B...		stouset
25465547	11.822075	-7.1845536	comment	3.0	14.5	1608285325	9.370541	> in practice annotations make code LESS readible, not moreDefinitely not true, unless you are writing c++ in Python> so in practice your team will be skipping annotations - e.g using Dict[str, Any], ...		orf
25495200	12.420043	-7.0333624	comment	3.0	17.0	1608560861	12.34089	"> I wish all the ""big data"" tooling was written in Ruby.On a practical note, Ruby's heavy use of reflection, inheritance and method_missing style dispatch currently makes performance for big data task..."		abernard1
25499101	12.05927	-7.132478	comment	3.0	11.0	1608582004	9.080544	>That seems a clear problem with the server side examples as presented in the RFC: they use synchronous node 'fs' instead of FS PromisesIt isn't synchronous, it only looks so. It actually uses FP Prom...		danabramov
25521498	11.80184	-7.323353	comment	3.0	11.5	1608753504	9.195915	async-std [0] is pretty widely used as well.[0]: https://github.com/async-rs/async-stdMost libraries can be used with different runtimes. Hyper for example, which uses Tokio by default, can be configured to use an async-std executor.		ibraheemdev
25522608	11.75502	-7.262991	comment	3.0	26.5	1608760013	9.139152	"It all comes down to ""is it such a common scenario?"". Honest answer is no. async is for specialized situations and shouldn't be the default."		sanxiyn
25523200	11.630882	-7.241158	comment	3.0	12.5	1608763832	9.167835	"> A non-async function is ""regular logic"", it must complete without blocking.Maybe one can enforce this convention in the particular project, but there's no ecosystem-wide consensus on this, and in fa..."		sanxiyn
25535230	11.814651	-7.3020725	comment	3.0	16.0	1608886663	-8.926447	Dynamic typing never was in the interest of the human developer but in the interest of the lazy language designer.This release looks interesting. Let's see how type annotations work out in real life and if people use them.		stewbrew
25560548	12.003839	-7.764951	comment	3.0	20.0	1609173405	10.432137	The headline is a bit too generic. This organization is being founded with the support of Simon Peyton Jones and has corporate backing. It appears that the intent is to focus on pain points in the Haskell toolchain and libraries.		escape_goat
25561091	11.95941	-7.7239347	comment	3.0	22.5	1609176690	10.385104	"So, was that on the second page of a tutorial?Yes, Haskell has those gotchas like ""don't use lazy IO"", ""there are partial functions on the Prelude"", ""String is slow"", and ""code may throw exceptions wh..."		marcosdumay
25562003	12.004698	-7.7572927	comment	3.0	10.5	1609181752	10.423559	"Honestly, I'm not much concerned with beginner friendliness. As long as there are enough users to maintain and improve its ecosystem, it will stay a good language. The moto of ""avoid success at all co..."		marcosdumay
25562031	12.013974	-7.7898555	comment	3.0	14.0	1609181884	10.4281845	"""I'm convinced that if only we could get a word in with management, and explain what a monad is, they'd consider using Haskell""Not an actual quote, but I liked the scene it brought to mind."		davidw
25562731	11.976315	-7.7453146	comment	3.0	10.5	1609186438	10.409559	I think the key issue is not that successful Haskell programs are technical. I think it's that Haskell is not good for heavy-IO programs. I'm not sure how PostgREST works, but shellcheck and pandoc, f...		ragnese
25564980	11.892399	-7.4429555	comment	3.0	12.5	1609200753	7.420288	> I have yet to encounter a single mutable variable.> However, it is constantly poking at a database, and different modules communicate with each other asynchronously over a message queue.I think you ...		Twisol
25569856	11.848831	-7.326722	comment	3.0	13.0	1609251164	-9.031688	I think you’re confusing strong/weak with static/dynamic. The former happens at runtime, the latter at compile time.Typescript adds static typing to JS, but it’s still weakly typed. This post is about strong typing in JS, which I’m still scratching my head about.		fingerlocks
25580396	11.596227	-7.0312448	comment	3.0	11.0	1609323563	8.977704	In the Java stdlib, Set is implemented on top of HashMap. I don't see how the opposite is possible?		MrBuddyCasino
25585485	11.958716	-7.723791	comment	3.0	32.0	1609358976	10.420473	A lot of good stuff in this release! Both LinearTypes and QualifiedDo (which is useful for LinearTypes but also other uses)The ghc-bignum change is kind of boring, but it does help a lot with the long...		whateveracct
25612163	11.60932	-7.450451	comment	3.0	13.0	1609588274	-8.820576	You misunderstand; what confuses me is how 'static can mean the same thing in both of these contexts.T: 'static does not mean the references in T must exist for the lifetime of the application.Ie. the...		wokwokwok
25620610	12.283726	-7.300663	comment	3.0	11.5	1609664817	-10.431027	"AFAIK both Lisp and Smalltalk environments are image based. That is, all source code and all objects are stored in memory. You need to save that image in order to continue from where you left off.  Snapshots are also used to allow rollback to previous ""good"" states."		GianFabien
25624187	12.406922	-7.735552	comment	3.0	12.5	1609701173	11.924583	I don't see a future for Scala. Since Java got lambdas and var, enough of the pain is gone that Scala ends up adding its own pain. And now there's Kotlin if you really want to avoid boilerplate and no...		dehrmann
25627334	12.232979	-7.6333923	comment	3.0	11.0	1609726943	11.968937	Honestly I feel like if Scala would pick a less insane build tool, it would have much better adoption.		blandflakes
25646946	11.910909	-7.047626	comment	3.0	12.0	1609862982	-10.765656	A few months ago I wrote an article testing out the relative speed of Python's async options for web apis/sites (https://calpaterson.com/async-python-is-not-faster.html).My findings were a bit controv...		calpaterson
25645039	11.980929	-7.4571075	story	3.0	18.0	1609851741	7.2315874	Hitler reacts to functional programming [video]	https://www.youtube.com/watch?v=ADqLBc1vFwI	cloogshicer
25684832	11.592531	-7.0275908	comment	3.0	11.5	1610114805	-7.2309713	This is problem I have with Python in general; that even if you prefer to use it in a functional style, most libraries are written by real Python programmers, and using them will force you to grapple ...		leephillips
25699923	12.018281	-7.7403264	comment	3.0	14.0	1610196377	10.361532	> Functors are basically an Object with a internal state changing method in typical OOP terms.This lets me safely ignore the rest of the article.		malf
25700101	11.800454	-7.7338824	comment	3.0	10.5	1610198169	10.397199	>  Haskell is a language for experimenting, success is not their goal and it would remove resources to actual research.You rightfully point to Rust, which took a lot of inspiration from Haskell, but I...		ookdatnog
25700122	11.803442	-7.7305193	comment	3.0	10.5	1610198368	10.385456	Rust?  It's a fine C++ replacement.  But it has nothing on Haskell in terms of practical expressiveness.I'll give it another look when it's capable of expressing an idea as simple as traverse.		chowells
25729590	12.244562	-7.6427355	comment	3.0	12.0	1610376866	11.910367	I've been in this space last 6 yrs or so and my scala usuage has gone down to zero.  Not worth learning scala.		dominotw
25751771	11.630025	-7.961859	comment	3.0	11.0	1610478437	10.21831	I've been heavy into Go the past year. I love the simple interfaces they've built over some rather complicated things (concurrency, cross-compilation, networking, etc), which really do tend to just wo...		anderspitman
25753518	11.730223	-7.396508	comment	3.0	12.5	1610485018	10.026927	Yeah that's ok until you have 20 million lines of generic ridden crapola pumped out by the lowest bidder. That's the hell I spent a good chunk of the last few years untangling on the C# front. Let's m...		uncledave
25753536	11.67082	-7.9467535	comment	3.0	15.5	1610485083	10.210339	"It seems to me like generics are extremely important for ""library code"", and not super important for ""application code"" (and in fact they can sometimes create more confusion than they're worth in the ..."		brundolf
25754932	12.28719	-7.307474	comment	3.0	11.0	1610490964	7.0645313	"It has always fascinated me that Smalltalk nearly universally comes with a window system and self-editing run-time.I remember Sun's ""Lively Kernel"" project. It looks like this has some of that DNA in ..."		sblom
35526805	11.915678	-7.3671207	comment	3.0	10.5	1681227929	7.0541	""" Object-oriented design isn't top-down, even when it pretends to be. The decomposition provided by objects is a model of the real world, which is after all where the idea originated""I've seen plenty ..."		tyingq
35539230	11.661511	-7.1619415	comment	3.0	11.5	1681305817	9.139795	If you want to run concurrent io requests, don't you still need to use an async framework and all the fork/join logic?  I suppose the slow and naive way is now easier to let limp along as you won't run out of threads?		jayd16
35561884	11.647988	-7.303353	comment	3.0	12.0	1681419065	-8.753747	In my experience it is even harder in a typed one because now you have to deal with the type system nightmare they built. So the compiler fight your refactoring.		di4na
35625179	12.364908	-7.3632226	comment	3.0	12.0	1681887834	-8.75254	Also the BEAM bytecode compiler and runtime are incredibly slow and unoptimized. It doesn't matter much for process handling and IO dominant workloads, but you would not want to run it with normal tasks.An AOT compiler with better optimizations will run circles around BEAM on benchmarks.		rurban
35625045	11.753129	-7.1880493	comment	3.0	11.5	1681886810	5.054455	"""Declarative"" is sometimes misappropriated by functional programming. Is there a better term?  Perhaps explaining it, as in TFA (""specify what, not how"")? Or explicitly distinguish from fp? Or some ot..."		hyperthesis
35672839	11.888175	-7.318838	comment	3.0	11.0	1682217419	7.0314755	This paragraph caught my eye -> I think Object-Oriented Programming was an important advance over procedural programming, which is what we had been doing, but we’re stuck. We’re supposed to change par...		thunderbong
35703775	11.937459	-7.446391	comment	3.0	10.5	1682443700	7.232304	Functional programming community likes this stuff. They go into the classical mathematicians’ trap of writing more and more general versions of something even though it’s not necessary.		jimsimmons
35703905	12.065246	-7.801141	comment	3.0	15.0	1682444278	10.437781	To be honest, anyone who used Ocaml understands immediately that the author gave it no chance and went looking for problems. It’s obvious because the post lingers a lot about things which are not actu...		WastingMyTime89
35732656	11.876427	-7.324884	comment	3.0	22.0	1682620586	7.0985017	Question: What's the difference between nested oop objects (composition over inheiritance) vs maps of nested structures?		PreachSoup
35733682	11.913082	-7.32762	comment	3.0	10.5	1682625342	7.1208396	I think there is a need for objects. An active connection, talking to the GPU, etc are not data -- identity is essential for their operation.OOP is probably the best way to model such,.. well objects,...		kaba0
35762587	12.036243	-7.534106	comment	3.0	10.5	1682863170	7.388935	> Functional architecture makes extensive use of advanced abstraction, to implement reusable components, and, more importantly, supple domain models that anticipate the future.I believe Mike Sperber i...		jasim
35803346	11.9203205	-7.693331	comment	3.0	11.5	1683126720	10.348736	I find that too:Purity is Haskell's fundamental killer feature.Other languages now also have quite sophisticated type systems, some of which can do specific checks beyond Haskell in certain areas (Rus...		nh2
28712393	12.029998	-7.8089705	comment	3.0	14.0	1633043335	10.431268	After I understood monads, I didn't write a short blog post about how simple they are.  In fact, I took the opposite approach and am writing a ~500 page book about them :).In seriousness, there's a lo...		orlandpm
28712450	12.041214	-7.748519	comment	3.0	10.5	1633043877	10.393998	This is a good post.I know the point is broader than monads specifically, but I have to admit I think “explaining monads” have probably done more harm to understanding monads than anything to do with ...		eyelidlessness
28712732	12.036404	-7.8177724	comment	3.0	10.5	1633046118	10.424875	> It’s interesting, of course, but far from necessary.I think this right here is where a lot of people go wrong with understanding them. Really, the best way to get them is to work directly with them....		trutannus
28712755	12.04089	-7.83188	comment	3.0	11.0	1633046259	10.383704	> What I term the “monad tutorial fallacy,” then, consists in failing to recognize the critical role that struggling through fundamental details plays in the building of intuition. This, I suspect, is...		jkhdigital
28715460	11.6667595	-7.3577604	comment	3.0	12.0	1633071375	-8.587116	> Now I want to understand in a similar fashion why the incompleteness theorem makes type systems incapable of preventing all bugsI think the article has this a little wrong.The theorem in programming...		didibus
28716280	11.794528	-7.340024	comment	3.0	10.5	1633080357	-8.903162	> For people for whom coding is an iterative, exploratory process, forcing type declarations upfront is not just slower... it’s a no-go.Is there any kind of programming task where it's too much to ask...		qsort
28722530	11.799019	-7.3245435	comment	3.0	20.0	1633116977	-8.932203	I think it originally tanked as a backlash against how verbose and painful it was in Java and friends (as well as the limited benefits because of things like nullability)Modern static type systems are...		brundolf
28743195	12.170097	-7.2135797	comment	3.0	11.0	1633322824	-11.397893	Laughs in horrible Gradle Kotlin DSL build times.		mey
28757738	12.091703	-7.8334	comment	3.0	25.5	1633431359	10.47592	The french initiative started in 2013 is still alive (last commit a few days ago), and passes the gov test suite (they keep in touch with our version of the IRS): https://github.com/openfisca/openfisc...		BiteCode_dev
28779028	12.082194	-7.68626	comment	3.0	12.0	1633557546	-10.628323	"Yeah I mean that's fair too. My impressions are poorly formed but the analogy is that both F# and OCaml are based on functional programming, which to my mind takes a step back from the ""imperative pro..."		crdrost
28780152	12.170063	-7.396627	comment	3.0	11.5	1633565894	11.980762	It's not just the libraries, it's the tools, and those are a much bigger lift. I noticed it with Scala dropping Eclipse support and some users shifting to Kotlin; you couldn't have a clearer example o...		lmm
28732561	11.631622	-7.932245	story	3.0	49.0	1633212601	10.221226	Rewriting Go source code with AST tooling	https://eli.thegreenplace.net/2021/rewriting-go-source-code-with-ast-tooling/	ingve
28800937	11.653179	-7.1900024	comment	3.0	15.5	1633709755	9.26822	Why do people care about so much lambda? If you want a function, use a real one. Python makes it easy to create throwaways everywhere. The only thing it enforces is proper indentation. What advantage should a lambda give you?		slightwinder
28820768	11.759745	-7.2698684	comment	3.0	10.5	1633890367	-6.20465	The advantage of mutating operations always returning None is that you can easily tell whether a mutation is happening by looking at the code. If you see y = f(x) that means x is unchanged, whereas if you see just f(x) on a line that means something stateful is happening.		canjobear
28821857	11.685173	-7.1593337	comment	3.0	14.0	1633899047	9.124576	"Anything remotely interesting like that is dumped in itertools.Python's creator, Guido van Rossum, doesn't like functional/functional-ish programming a lot. That's well-known.Guido: ""I value readabili..."		weatherlight
28822565	11.610166	-7.030129	comment	3.0	12.0	1633905005	-7.1931915	This is a neat article, but it does have some errors.One subtle point that the post gets wrong:> So where does that come from? The answer is that Python stores everything inside dictionaries associate...		kgm
28822871	11.636735	-7.958835	comment	3.0	13.0	1633908236	10.227467	The thing with Go is that I find the syntax very ugly to look at however it is so convenient to install, run, deploy, make performant applications.		nassimsoftware
28838791	12.043988	-7.777761	comment	3.0	14.5	1634041128	10.454733	Isn't Java capable of the same thing now that it has algebraic data types with records + sealed classes + pattern matching? Given that Java already has a fine concurrency story, isn't OCaml a hard sell to someone that's not into compiler development to depend on its rich ecosystem?		johnnycerberus
28841215	11.957292	-7.276332	comment	3.0	12.5	1634053820	-10.419003	"    type Ensure

I define a type called Ensure    <T, K extends keyof T>

This type takes two type parameters, one called T and the other K which will consist of Keys belonging to the type T (in our c..."		skywal_l
28842011	11.889371	-7.324843	comment	3.0	27.5	1634057637	-10.398102	I'm so happy powerful type systems are more popular now. TypeScript bringing a great type system to a language as popular as JS is fantastic. Rust is also a great way to get a great type system while ...		jjice
28847739	11.901436	-7.225192	comment	3.0	10.5	1634093817	6.9890375	I’d go as far as saying classes are never the simplest tool for the job.But maybe the past 10 years of functional-ish programming have broken me. There are lots of problem areas where objects fit nicely. Actor based programming is very elegant with classes and objects I think.		Swizec
28790365	11.972961	-7.745524	story	3.0	84.0	1633631537	-10.926646	Stgi: A visual STG implementation to understand GHC/Haskell's execution model	https://github.com/quchen/stgi	kelseyfrog
28864858	12.106775	-7.2686424	comment	3.0	12.0	1634222203	8.515918	"ECS and OOP are sides of the same coin, although apparently it is only visible to those that read SIGPLAN papers.""Component Software: Beyond Object-Oriented Programming""https://www.amazon.com/-/en/Clemens-Szyperski/dp/0201745720One of the first publications on the matter."		pjmlp
28876290	11.595074	-7.9644637	comment	3.0	11.0	1634294207	10.140054	But it did not replace it. Google runs on Borg. Go lets you build things fast, but the lack of strong typing and the vast amount of language pitfalls make maintenance hard in the long run.The communit...		tazjin
28881977	11.822287	-7.2159905	comment	3.0	12.0	1634325838	-10.745822	BTW I wonder why async is so painless in ES6 compared to Python. Why the presence of GIL (which JS also has) did not make running async coroutines completely transparent, as it made running generators (which are, well, coroutines already). Why the whole even loop thing is even visible at all.		nine_k
28895658	11.65932	-7.5724745	comment	3.0	28.0	1634469727	10.137289	A good call, and probably the most reasonable decision in their situation.OTOH this removes much of the point to use generics, and makes working with stdlib from type-parametric code more painful.Still great to see things improving. It took mere 11 years.		nine_k
28896348	11.633699	-7.9348946	comment	3.0	11.0	1634477876	10.191776	What will likely happen is that the users will design generic libraries themselves. There will likely be a couple, and eventually they will converge on the most useful features. Then the Go team can j...		kubb
28897669	11.620984	-7.9011235	comment	3.0	12.5	1634488608	10.159297	"""and most of them are carefully thought out.""Is this stockholm syndrome or something?  For example, JSON.Also, the time abstraction is completely bonkers.If you want to multiply a 500 milliseconds wit..."		dnautics
28896468	11.807432	-7.731535	comment	3.0	14.0	1634479034	-10.385886	JavaScript/TypeScript changes so much that a codebase will look very different from one year to the next. JS/TS has come a long way and needed to make substantial change, but I appreciate the slow moving, methodical nature in which the Go team moves the language and environment forward.		olingern
28907697	11.78036	-7.334288	comment	3.0	22.5	1634576132	-8.943994	People who don't think types are a good thing need to work in a statically typed language for a year or two and then see what a difference it makes in reality.  Unproductive Java bureaucracy != static typing.I think the people debating it never tried it seriously.		novok
28911392	11.807135	-7.2464905	comment	3.0	24.0	1634589574	-8.963557	Hm, growing somewhat experienced, I find myself adapating an old quote more and more: Sufficiently advanced static typing is indistinguishable from dynamic typing.Now, I know, it's not true. It's enti...		tetha
28916381	11.644113	-7.9233685	comment	3.0	10.5	1634636327	-7.8807063	> Go is not the only one. When I asked a few years ago, if someone could explain dependency injection in terms that I understand, ie Haskell terms, I got the reply of 'hmm, maybe it's like giving argu...		jcelerier
28916384	11.785396	-7.201024	comment	3.0	11.0	1634636355	-8.00095	Dependency Injection is just passing arguments.If you're writing a library that does things that involve talking to a database:- Not DI: You `import Database.PostgreSQL.Simple` and your function(s) ta...		LukeShu
28876872	12.1679125	-7.5074615	story	3.0	15.0	1634299797	-10.580904	Show HN: An updated cheat sheet for F#	https://github.com/adelarsq/fsharp-cheatsheet	adelarsq
28946067	12.023258	-7.7865644	comment	3.0	11.0	1634830791	10.390532	Yes I have, I helped teach some CS courses in college, plus I myself learned them in my very earliest days of programming. It's pretty common for those to be among the first concepts taught.I'd say th...		ninkendo
28981497	11.935732	-7.0916805	comment	3.0	12.0	1635106867	8.216916	Glad to see Java improve, but I still would like to see more ML features:- ~Exhaustive pattern matching~ it’s here!- Algebraic data types- Tail call optimisation- Do notation- Operator overloadWhy not...		pharmakom
28981576	11.704104	-7.3153644	comment	3.0	11.0	1635107291	7.426621	teach javascript, ruby, rust, go, kotlin....scheme.literally anything else.		weatherlight
28980660	12.263095	-7.607795	comment	3.0	12.5	1635100298	11.9350395	"Scala is fine. People understood it's not really worth it as a ""better Java"". Companies that choose Scala in 2021 are using either big data frameworks (where Python bindings are the most common altern..."		hocuspocus
28982169	11.716726	-7.239226	comment	3.0	12.0	1635111548	8.740461	"Does java have a decent story on value types now e.g can I make an ArrayList<long> and trust that it’s one array of longs on the heap and not an array of pointers to Longs? 
This was what made me ragequit Java 10 years ago."		alkonaut
28983271	11.629106	-7.9641986	comment	3.0	11.5	1635121580	10.248713	What is novel about Go? It just seems like C repacked with a garbage collector and basic concurrent programming support to me. Which both weren't novel even when Go was designed.		rowanG077
28995359	11.603647	-7.804797	comment	3.0	10.5	1635211816	10.122409	I run large datacenters with thousands of boxes.I have a little app (written in golang) installed on each box that effectively is a task runner. Tasks can be written to do anything, including apt-get ...		latchkey
34131186	11.8446865	-7.160909	comment	3.0	11.0	1672002003	-9.006886	Is there an elegant way to import type hints without circular imports?		marius_k
34134831	12.094815	-7.0608435	comment	3.0	12.5	1672032085	7.6074615	> I want a ‘pure’ keyword. Any function that is pure can only call functions that are also keyworded as pure. No side effects, guaranteed.Pipe dream, unfortunately. If pure functions accept objects as...		CGamesPlay
34134443	11.762681	-7.1971493	comment	3.0	12.0	1672027360	3.3031716	I want actual reflection a la python so i can use my types to generate all sorts of artifacts for runtime validation, serialization, testing, etc. It's frustrating to make the effort to create the types and then not be able to touch them at runtime		chucklenorris
34144296	12.4227495	-7.3574457	comment	3.0	12.0	1672107749	6.6890426	It's nice to see this on the front page. AFAIK, many years ago the development team split and BeamNG.drive was born. Rigs of Rods stagnated with new features and development, while BeamNG continued im...		saturn5k
34188824	11.653971	-7.1571026	comment	3.0	15.0	1672428019	9.1744585	List Comprehension is just syntax for functional coding (filter, map) but a very good one!		snowpid
34199521	11.843757	-7.513637	comment	3.0	10.5	1672513103	6.9820247	I work in a Rust codebase that uses a lot of functional functions, and I’ll say this: on average the imperative style takes less lines of code and less indentation. I also find it more readable personally, and idiomatic.		baby
34206378	11.743353	-7.360849	comment	3.0	10.5	1672582437	9.271398	Async/await is extra syntax and one more function color which you have to keep in mind, while being just a workaround for expensive threads.Recent Java has just made threads cheap, so async concurrency is much simpler and more consistent with existing libraries and APIs.		nlitened
34209034	12.236944	-7.2985835	comment	3.0	12.0	1672597329	7.1343894	Author here, feel free to ask any questions you have :).It's amazing this little project shows up again here. So far, I received a lot of very positive and friendly feedback about this little pet proj...		johndoe0815
34207617	11.736195	-7.3040485	comment	3.0	13.5	1672590193	9.452034	Getting rid of data abstraction and encapsulation is throwing the baby with the bath water.The abstract concept of OOP (messages between complex objects, as defined by Alan Kay) is an attempt at mimic...		optymizer
34210162	12.27606	-7.3137593	comment	3.0	14.5	1672602977	7.0842786	Someone explain what's smalltalk?		narutowindy
34214825	11.87783	-7.3303323	comment	3.0	12.0	1672638759	-7.123087	FP feels neat, but good luck debugging it.		whatever1
34214787	11.925622	-7.441869	comment	3.0	19.0	1672638376	7.230631	Well there's a certain anti functional feel to it because your functions are tied to the object rather than being able to process any given object or objects of different types.Difference between functional style and functional language?		jemmyw
34216751	11.970377	-7.6316442	comment	3.0	10.5	1672658655	10.34112	Ramda is what you get when people try to zealously make Haskell out of Javascript. The same happens in many other languages where people try to force Haskell idioms into languages.Edit. For some reaso...		dmitriid
34215994	11.681664	-7.3038664	comment	3.0	18.5	1672651284	2.213263	"And suddenly you care a lot about the ""how"", not just the ""what"". Voiding the whole ""but it's declarative!"" argument.At least in imperative code the ""how"" is explicit. In functional code it's implicit and you need intimate knowledge about compiler and/or runtime to know what's going to happen."		uuvs8
34182233	12.097009	-7.863526	story	3.0	58.0	1672379338	10.450165	Learning OCaml in 2023	https://sancho.dev/blog/learning-ocaml	djcollier
34204642	11.949123	-7.741213	story	3.0	131.0	1672561414	10.373583	Competitive programming in Haskell: better binary search	https://byorgey.wordpress.com/2023/01/01/competitive-programming-in-haskell-better-binary-search/	g0xA52A2A
34243854	12.173527	-7.0543137	comment	3.0	23.0	1672826171	12.371293	When I looked at Python vs Ruby many years ago, I found the opposite: Why does Python have (special) functions like len() and map(), instead of 'properly' supporting both OOP (len should just be a met...		MartinMond
34266998	12.438797	-7.779272	comment	3.0	12.5	1672954455	-11.092796	Tail call optimization can get you that, too. If you've written Scheme and/or gone through SICP you might be familiar with this: you write a recursive function, with the recursive function call as the...		wging
34297899	11.727177	-7.359744	comment	3.0	18.5	1673174250	7.1809807	Hi. For background, I have been writing professional OOP code in ANSI C.Yes, Structures in C can be used as classes. And yes, this includes polymorphism.My solution was to put a callback in the struct...		twawaaay
34312016	11.646008	-7.9588575	comment	3.0	23.0	1673281015	10.229338	https://github.com/golang/go/issues/30141#issuecomment-46427...I don't have a full list of all posts at hand (some of which may be removed), but I've seen some other similar stuff as well; it's not an...		Beltalowda
34328119	12.1716385	-7.181497	comment	3.0	11.5	1673370971	12.40327	> but weirdly you don't see things like implicit returnthat's been a thing in ruby since probably forever and it's one of the defining things about it		weaksauce
34328594	11.868172	-7.4052916	comment	3.0	11.5	1673372890	7.074228	> But Adams makes a powerful point: the general-purpose nature—as well as composability—of a piece of software is just as important as its low floors and its approachability.This is an interesting tak...		airstrike
34345393	11.620708	-7.880394	comment	3.0	13.0	1673473577	10.080231	Its was initially something that surprised me about Go. It was famous for good concurrency and yet compared to many functional languages and contemporary OO languages it had a lot of foot guns. There ...		PaulKeeble
34392730	12.138349	-7.892446	comment	3.0	13.0	1673812959	-3.2275915	Coming from category theory, and having followed the work studying probability theory categorically (e.g. Fritz, Perrone, Lucyshyn-Wright’s stuff, Leinster’s notion of the magnitude of a category), is...		eastWestMath
34393105	12.256937	-7.544266	comment	3.0	10.5	1673815186	-11.386395	I just use Kotlin. Never looked back.		javaunsafe2019
34393734	11.86695	-7.1179214	comment	3.0	29.0	1673818521	3.3698869	Record classes arguably do a lot of the same thing without the drawbacks.		marginalia_nu
34331713	12.274567	-7.240267	story	3.0	19.0	1673385836	9.552748	Plone 6.0 Released	https://plone.org/news-and-events/news/2022/plone-6-0-released	rbanffy
34395138	11.925048	-7.090635	story	3.0	27.0	1673827954	-10.76514	Improving Async Networking in Python	https://roberts.pm/index.php?p=article&path=p2pd&category=most-recent	Uptrenda
34409410	11.658599	-7.935196	comment	3.0	11.5	1673932821	10.226613	This is a strange take to me. The last thing in the world that I would accuse the Go developers of is being frantic. There have been discussions about generics for a decade. See this post, for example...		amscanne
34411165	11.641931	-7.9615293	comment	3.0	12.0	1673953411	10.1736145	> It is not a goal to provide a feature-rich or commercial-grade server.That server is not remotely comparable to the one in Go.		doctor_eval
34414858	12.2768545	-7.197564	comment	3.0	13.5	1673974169	12.388989	It's not like strong typing came after Ruby.  In fact, duck typing was a _feature_ of Ruby on its days.   At the end of the day, you choose your battles, it's not a black-or-white decision.		pantulis
34416238	12.477091	-7.09928	comment	3.0	18.5	1673979249	12.391678	I used to have that attitude. Then I wrote my first Ruby project as an experiment. That was 17 years ago, and the majority of the code I've written since has been Ruby. What clinched it was that the f...		vidarh
34428289	11.670578	-7.9092555	comment	3.0	14.0	1674057345	10.234158	Terrible arguments.Golang and Android Studio are both open source, and you could compile them yourself. Telemetry can be turned off in Android Studio, and you can use stuff like flatpaks to isolate th...		nwah1
34456687	11.657015	-7.301968	comment	3.0	12.0	1674236465	8.930946	Is the point of those just immutability or something else too?Wouldn't it be better to have a way to easily make any type deeply immutable?EDIT:I think tuples and records are also supposed to have val...		scotty79
34458610	11.847188	-7.2145495	comment	3.0	12.0	1674243613	-9.234186	You can typecheck them with mypy or pyright or at runtime with typeguard.It is not ideal, but pretty good in terms of benefits.		mejutoco
34482606	11.7174425	-7.4640408	comment	3.0	10.5	1674424251	9.892292	"I enjoy that the JEP process allows for nice little small things like this. This isn't ""we should have lambdas"" or ""Let's rebuild the type system to allow List<int>"". But it's still a very common annoyance, and it can be fixed."		mabbo
34483040	11.59177	-7.914041	comment	3.0	11.5	1674427298	-6.584741	Another reason: BASIC had a GOTO statement to change program flow to any point in the code. There was no idea of nested blocks of code that executed conditionally. The GOSUB directive was only useful ...		joezydeco
34487168	11.596029	-7.8580666	comment	3.0	12.0	1674468834	11.910061	Scala and F# are safer than Rust since they're on a VM.		mjburgess
34505388	12.199862	-7.026177	comment	3.0	12.5	1674576403	-10.425131	"I think ""unknown"" is more than that! Basically it's a way to say you don't care about the type, as in Record<string, unknown> or P extends Promise<unknown>"		thoughtspile
34514227	11.611646	-7.9238253	comment	3.0	12.0	1674619048	10.130833	Golang has an excellent net stack, but not perfect. In particular, it appears to suffer from the ever-recurring issue of not paying enough attention to teardown. Everything must return to 0, ideally g...		klabb3
34544130	11.971339	-7.7425523	comment	3.0	13.0	1674810684	10.406518	> it's mostly due to socio-historical accident. It's not because the languages are particularly difficult or arcane, it's mainly because people don't already know it, and people don't like to learn to...		krisoft
34545883	12.473744	-7.506501	comment	3.0	15.0	1674827074	12.887655	As someone who worked with Erlang for a few of years I still wonder if using parallel processing in program top level is worth it or not. Because there are many ways to process data efficiently using ...		mapcars
34547299	12.488176	-7.499994	comment	3.0	12.0	1674834308	12.890611	Right, I was mainly describing arguments for parallel processing which Erlang is also famous for.In terms of being fault-tolerant I think the modern approach with (micro)services is quite similar, one...		mapcars
34565620	11.840348	-7.2806377	comment	3.0	10.5	1674975347	-6.709565	Which modern language, Go stuck in early 1990's language design, or Rust that still doesn't have a comparable Web story at enterprise level?Kotlin that leeches on Java infrastructure for its existence...		pjmlp
34569162	11.900339	-7.342151	comment	3.0	11.5	1675007519	7.07277	"I still think it's funny that half of the OOP tutorials are ""imagine that hierarchy of real things unrelated to anything programming and pretend for a second what we make is sensible"" instead of giving actual real useful use cases."		ilyt
34571100	11.750773	-7.3006177	comment	3.0	11.0	1675017055	-6.1608243	"Immutable data does not necessarily let you answer the ""what state does this value hold"" question easier than mutable data.Imagine you've got an immutable List. x.append(blah) does not mutate x but in..."		UncleMeat
23399151	12.19096	-7.160111	comment	3.0	20.5	1591152594	7.39631	Speaking as a Smalltalk programmer active in the 1990s we pretty much dropped everything when Java showed up.  It had the things we loved in Smalltalk (portable virtual machine, garbage collection, se...		hodgesrm
23412025	11.652249	-7.141185	comment	3.0	11.0	1591241049	9.093253	I have a bit of a hard time with you there, I like to use maps in my code and trying to map a parser over a list of strings and getting the wrong answer is far from 'of no consequence' to me.I'm not s...		tomcatfish
23419469	11.793792	-7.3297224	comment	3.0	14.0	1591292338	-8.881442	I did one personal project in it just to get my feet wet. Unfortunately the tooling was not great at the time so it soured my impression a bit (I'm told it's gotten better since then).But also, I just...		_bxg1
23420769	11.761037	-7.311844	comment	3.0	11.5	1591299126	-8.961115	2. requires static typing in my personal opinioncf. http://lambda-the-ultimate.org/node/4136#comment-62959		hy3rm0n10us
23421254	11.645604	-7.760053	comment	3.0	19.5	1591301930	9.610856	core.async in Clojure is not equivalent to Go's asynchronous support. Even worse, core.async is the simplest & least-performant way to implement asynchronicity: It's just using an internal thread pool...		armitron
23425449	11.887244	-7.5742135	comment	3.0	16.5	1591336182	1.178612	"I find it basically impossible to reason about performance in the presence of laziness because it means performance is no longer compositional. In a regular language if I write:    def h(a) = {
      ..."		lmm
23426336	11.601868	-7.937197	comment	3.0	15.0	1591346464	10.155941	The optimization I care about most is vectorization. A lot of ML and data science basically boils down to numerical linear algebra and optimization; vectorization is the key optimization for these kin...		gautamcgoel
23437609	11.664581	-7.382185	comment	3.0	18.5	1591431867	-8.633443	"""In type checking, only the signature of functions are considered. There’s no relying on the implementation for determining if callers are correct (like you can do in Scala, or Haskell)""What does this mean?"		smabie
23388849	12.263652	-7.2891407	story	3.0	110.0	1591085736	7.104577	Interpreter for the original Xerox Smalltalk-80 virtual image (C++/Qt)	https://github.com/rochus-keller/Smalltalk#a-smalltalk-80-interpreted-virtual-machine	Rochus
23454847	12.038046	-7.7748837	comment	3.0	11.0	1591606343	10.522119	They're similar but not really the same. The big differences are:* Haskell is pure whereas Ocaml is not* Haskell has a great story for parallelism whereas Ocaml does not* Haskell has ad-hoc polymorphi...		wk_end
23457173	11.973349	-7.6875167	comment	3.0	10.5	1591629196	10.352188	"What is ""referential transparency""?> ""by hiding the extraction of the value contained in the monad and passing that value to a user supplied lambda that takes a value of the type of the value containe..."		gavinray
23466569	11.986501	-7.479391	comment	3.0	20.0	1591710201	7.721252	Ideally, a good compiler that understands FP will, behind the scenes, detect when it's safe to mutate the old data rather than creating a copy. That's a big part of why Haskell manages to be neck-and-...		mumblemumble
23467691	11.721658	-7.8094554	comment	3.0	12.5	1591717899	10.156764	Lots of people hate Java.  It's unsuitable for those people.There are certain things you might have trouble getting Java to perform, such as strict latency requirements.  Another language might be mor...		bcrosby95
23469898	12.014836	-7.5347548	comment	3.0	14.5	1591730729	7.3266506	>  I recommend starting with a gentle approach that doesn't require picking up a new languageDisagree. This is likely to 'dilute' the lessons of functional programming, as it were. If you learn to pro...		MaxBarraclough
23497522	11.710945	-7.2094326	comment	3.0	15.0	1591954210	9.127849	Is speed really a good reason for using async?  If I remember correctly, asynchronous I/O was introduced to deal with many concurrent clients.Therefore, I would have liked to see how much memory all those workers use, and how many concurrent connections they can handle.		berbc
23499321	11.759082	-7.160081	comment	3.0	16.0	1591970667	-10.768599	"> Fundamentally, you do not waste ""3 billion cpu cycles"" waiting 1000ms for an external service. Making alternative use of the otherwise idle CPU is the purpose (and IMO the proper domain of) operatin..."		john-radio
23499500	11.908867	-7.055022	comment	3.0	10.5	1591971780	-10.7602215	"Hi - yes loved your blogpost!  Also very tired of the ""async magic performance fairy dust"" :)It's a difficult myth to dispel and I think the situation in terms of public mindshare is much worse now th..."		calpaterson
23507506	12.132126	-7.5019383	comment	3.0	11.5	1592032363	-10.6083975	We, at Chaldal (YC S15, chaldal.tech), use F# in production. Most of our backend projects are in F#, the last one is being migrated over slowly from C#. Our new frontend projects are also in F# (using...		tejasv
23535721	11.839611	-7.5678983	comment	3.0	14.0	1592278503	10.345855	> In general, for programming languages, there are two ways to translate a generic function:> 1. translate the generic function for each set of instantiated type parameters> 2. translate the generic f...		platz
23542227	11.756789	-7.368995	comment	3.0	13.0	1592331151	-8.798636	It seems like it's trending toward static, at least recently. I think the big driver for this is the popularization of statically typed languages that aren't C++ and Java. A lot of people had painful ...		throwaway894345
23544773	11.636509	-7.915732	comment	3.0	20.0	1592344730	10.22575	Strangely, I found Go to be one of the least productive languages I've ever used, 2nd only to Java. It just makes the programmer do so much of the work for common tasks, and it's incredibly repetitive...		kenhwang
23544994	11.684488	-7.9293227	comment	3.0	12.0	1592345956	10.259755	curious what other languages and domains you are working in. In my experience, Go has been a boon to productivity. I do networked services mostly. Projects that are maintained for years with lots of t...		sethammons
23545574	11.716589	-7.342085	comment	3.0	15.5	1592349860	-9.36387	"I'm convinced that lack of Sum Types like this in languages like Java/C#/Go are one of the key reasons that people prefer dynamic languages. It's incredibly freeing to be able to express ""or"". I do it..."		nicoburns
23546912	11.648652	-7.9382477	comment	3.0	11.0	1592359501	10.210783	Were you using an IDE? For me, yeah go has a lot of boilerplate, but with autocomplete, because the type system is so simple, the autocomplete is super savvy and code just flies onto the screen. Still...		kortex
23546957	11.599606	-7.8648744	comment	3.0	14.5	1592359976	10.250113	This looks like a good, minimal implementation of generics. It's mostly parameterized types. Go already had parameterized types, but only the built-ins - maps and channels. Like this.    var v chan in...		Animats
23547569	11.987113	-7.7370586	comment	3.0	15.5	1592365965	10.314511	Try Haskell, the ceiling is so high for the type system that you can spend a lot of time trying to golf an interface until you are happy that it is maximally elegant. Banal is better in some regards, ...		zadler
23554239	11.984066	-7.740475	comment	3.0	11.0	1592415470	10.437279	Name some OSS:- Written in Haskell- Not a tool for manipulating Haskell- With a substantial user base- Other than Pandoc, xmonad, or shellcheckPartial credit if you can name closed source software ins...		earthboundkid
23557986	11.598669	-7.8216043	comment	3.0	12.0	1592435797	10.239433	I really wish Go would pursue sum types instead of generics		ccktlmazeltov
23582531	11.952557	-7.47539	comment	3.0	14.5	1592639923	7.3347797	Functional programming languages have alway been somewhat dismissed by most. Even though every once in a while functional programming becomes somewhat of a hot topic, only few programmers actually tak...		tinco
23590278	11.748392	-7.1237807	comment	3.0	12.5	1592720684	6.8048344	"Pretty much this. I knew all of the things she wrote about but all I could think was ""I can't imagine writing foo.classList.add and remove 100 times. That's going to create some major spaghetti code once that project grows beyond a couple of pages"""		triceratops
23592621	11.750548	-7.3704534	comment	3.0	27.0	1592754344	-8.906052	You don't have to write as many tests when you use static typing, because your method contracts are solid.You can refactor your entire codebase with a few operations and don't have to worry about anyt...		echelon
23593308	11.697745	-7.3522573	comment	3.0	11.5	1592758870	-8.620144	"Let's say you have a method that takes a thing:    function doSomething(thing) { ... }

How many different possible representations of a 'thing' do you have? A json object? A class object with behavio..."		stickfigure
23603963	11.731573	-7.289512	comment	3.0	14.5	1592851278	9.21772	when set to .blocking> The function is no longer async, and in fact both keywords basically become no-opsThat sounds crazy to me, if I use a keyword I expect it to behave the same everywhere I use it....		howeyc
23621661	12.002571	-7.709296	comment	3.0	12.0	1592954381	10.437467	> Then there are language features in C# and Java, Typescript etc. that are coming across from Haskell.What language features in Java came from Haskell?		chrisseaton
23621664	11.994664	-7.7754364	comment	3.0	10.5	1592954390	10.423053	When will Haskell get a different spokesperson? Stephen isn’t effective in this role. These posts have jumped the shark to the point when I see a big Haskell post on HN and see stephendiehl.com it’s j...		mlthoughts2018
23630594	12.11947	-7.083097	comment	3.0	11.5	1593017857	-5.3598228	Ok, so I wrote tons of Perl and am to this day a fan, but I don’t think one can call a blessed hash (or scalar for the fancy folks) an object _system_.It is flexible and fun and I do miss it.True stor...		jqcoffey
23631076	12.29669	-7.0174766	comment	3.0	11.0	1593019899	13.1760235	> You learn perl, and you've learned nothing but Larry Wall.Yes, this is why it's nice. You don't have to worship at the foot of an industry which slavishly tries to implement a misunderstanding of a ...		peterwwillis
23631431	12.312121	-7.019716	comment	3.0	11.0	1593021316	13.203394	Much as people complain about Perl, it is the language which I use when I want to have something which will run 10-20 years from now.I recently wrote a consistency checker for file archives (so that I...		jwr
23632004	11.99334	-7.760971	comment	3.0	17.0	1593023662	10.418511	Haskell is much closer to the lego blocks analogy than most languages I've tried due to the focus on composition and polymorphism.The teetering edge that grinds some people's gears are monads which do...		agentultra
23634230	12.237494	-7.0285983	comment	3.0	16.5	1593035142	13.189323	"> it is not the notorious ""write only"" language that many troll it to beI dispute that.I have worked with many languages, and Perl has always been one of the hardest to remember due to non-standard sy..."		jfkebwjsbx
23634705	12.279302	-7.0605984	comment	3.0	12.0	1593038724	13.150587	> perl has been the same since 2002if you ignore perl 6 then you might as well ignore python 3. And even still, python 2 is dead. There are only a handful of languages as well maintained as Perl 5.htt...		deckard1
23637351	11.99485	-7.4717665	comment	3.0	10.5	1593064817	7.1843014	I think this is a rather simplified and naïve analysis. Getting functional programs and functional APIs to compose well with each other is just as much a challenge as in other language paradigms. Just...		hellofunk
23672184	11.835861	-7.1215343	comment	3.0	16.0	1593379484	-7.2355857	Right. So you bought into it, sounds like. Almost every other software developer did too. They all think they had an epiphany. They didn't.As for me, for 30 years I've known software function calls ar...		WClayFerguson
23712992	12.377823	-7.269976	comment	3.0	13.5	1593697508	12.144585	When you see the effort some of those compagnies go to get some decent performance, chose the right language from the start would have been easier on that side, look at Facebook with Hack, Youtube ( P...		Thaxll
23712953	11.66144	-7.9635634	comment	3.0	11.5	1593697173	10.195398	IMO, the thing that makes go good, from an enterprise point of view, is that you can take a team of mediocre coders who have never used it before, and deliver working code quickly.  It might be ugly, ...		empath75
19979372	11.719565	-7.485149	comment	3.0	13.5	1558517103	9.754728	"Generics was introduced in Java in 2004 with J2SE 5.0[0]. 
[0]: https://en.wikipedia.org/wiki/Java_version_history#J2SE_5.0"		th3iedkid
19984356	11.860239	-7.358951	comment	3.0	17.5	1558551737	9.530524	Value types add complexity and they weren't necessary in 1995. They only became necessary due to hardware changes circa 2005. Similarly, AOT compilation has only become attractive for the kinds of app...		pron
19993414	12.344807	-7.021416	comment	3.0	11.5	1558630225	13.178466	Wait, Google doesn't support Perl?		ForHackernews
20023511	11.666518	-7.9072056	comment	3.0	12.0	1558976197	10.191764	There are many of us in the Go community who like Go the way it is.  The last thing we want is another Java ecosystem, which feels like something designed by archonaut committee more than anything coh...		tomohawk
20032607	11.903218	-7.2910786	comment	3.0	12.0	1559066088	9.190614	"Please don't do that. I had to look several times to rewrite it as    var temp1 = await StartRequest();
    var temp2 = await temp1.GetBody();
    var value = temp2.Root;

which is instantly grokked."		mdpopescu
20032875	11.825989	-7.3719153	comment	3.0	13.0	1559067876	9.252738	Would the macro case be addressed by also supporting a prefix keyword? The post that states macros can't work does not cover this. From what I can tell:`foo.await!()` would just expand to `(await foo())`, and anyone could write their own `my_await!` macro that works similarly.		staticassertion
20047658	11.995908	-7.749999	comment	3.0	12.5	1559181237	4.092946	I wish the title was more descriptive (“which type of programming?”) or that the introduction said something about the direction of the book.As it is the only reason I would have for continuing is tha...		erikpukinskis
20074373	11.761979	-7.076189	comment	3.0	13.0	1559467142	5.407284	>To qualify for the term “pattern”, an approach is not worthy until someone or some group has proven through some formal process that this approach is superior to all others, and qualifies as “best pr...		inflatableDodo
20074463	12.067436	-7.5905437	comment	3.0	12.0	1559468750	9.751795	Kotlin's null safety alone is enough to prove you wrong here.		rcaught
20074539	11.926489	-7.586632	comment	3.0	10.5	1559470160	9.72724	I find the whole discussion about null safety completely negligible.Since when are nulls the biggest problem for developers? Null pointer exceptions are by far some the simplest problems to avoid and/or solve.There are more serious arguments that can be made in favor of Kotlin.		maltalex
20075619	11.603379	-7.085675	comment	3.0	11.5	1559485386	9.082611	Optimize for readability above everything else. Almost all of these examples I'd argue would be better suited for something like .map(). Little point in being overly cute, and if you are working with ...		yankjenets
20110662	11.969503	-7.752846	comment	3.0	13.5	1559783371	9.246701	Two things this studies haven't measured are time to deliver features, and the number of developers necessary. For example, if a project in Haskell can be delivered faster by a smaller team than an equivalent project in C++, that would be an important factor.		yogthos
20110750	11.983698	-7.735367	comment	3.0	12.0	1559784427	10.429871	Very few programmers are proficient in Haskell, and operating systems and language tooling are built around imperative C-style semantics.Combine that with the fact that most of the software industry d...		simplecomplex
20111014	11.9755335	-7.778707	comment	3.0	12.0	1559787781	10.417792	How far can you go without monads and category theory? I was looking at Clean which developed in parallel with Haskell and uses uniqueness typing instead of IO/mutation monads. Seems like it would be ...		karmakaze
20152189	12.072673	-7.8161154	comment	3.0	11.0	1560213418	10.398232	"The author appears to making the common functional programmer mistake of using ""Category thoeory"" to mean ""formal mathematical language"", likely because they usually encounter category theory for the ..."		fjsolwmv
20159563	11.759458	-7.081567	comment	3.0	10.5	1560287344	-8.995943	"The first issue is fixed by just using a string. Yes, you can't do Sequence[Node], but you can do Sequence[""Node""].The docs talk about this here (""class name forward references""): https://mypy.readthedocs.io/en/stable/kinds_of_types.html#cl..."		Deimorz
20169359	11.604524	-7.8671613	comment	3.0	26.0	1560373957	10.156817	Unrelated thoughts:> Structs do not explicitly declare which interfaces they implement. This is done implicitly by matching the method signatures. This design makes a fundamental error: It assumes tha...		_bxg1
20170065	11.645207	-7.9310465	comment	3.0	15.5	1560379040	10.220577	I also prefer writing REST APIs in Go.- Compared to Java: Ecosystem is way over-engineered. You might get along just fine without writing a bunch of boilerplate and factories and XML configs, but soon...		mi100hael
20186742	12.078015	-7.815469	comment	3.0	23.5	1560547074	10.438296	OCaml would have seen so much more adoption if it had a solid multicore story. It really is a shame, because it's a nice language.		lifty
20191808	11.626381	-7.9222136	comment	3.0	12.0	1560629080	10.271718	Looks nice. Is there any reason to use getopt over flag in Go?How do you find the experience with sr.ht?		aredirect
20192011	11.881762	-7.3273935	comment	3.0	11.0	1560631257	7.1422067	> Tying methods to data is an inflexibility.Tying methods to data is an inevitability (whether it is on run- or compile- time). Can you give me an example of a function that does not depend on the dat...		kaoD
20193285	12.201968	-7.6037436	comment	3.0	17.5	1560648897	11.911434	Seems like a bit of a bold claim when the author themselves directly contradicts that in their own conclusion:> I think my overall takeaway is that design decisions make a much larger difference than ...		zmmmmm
20193595	11.80155	-7.218144	comment	3.0	12.0	1560654201	-8.984982	"I enjoy hacking in dynamic languages as much as the next programmer. But, the big take-away is that ""the initial implementation was done in 1/2 the code"" not that the resulting code was more extensibl..."		massung
20193320	12.190818	-7.5875554	comment	3.0	11.5	1560649528	11.911185	The Scala result confirms my bias :P I love Scala because it strikes a great balance between being succinct and offering type safety.I wish you would use Ruby instead of Python. Python is strangely in...		tanin
20194525	11.945365	-7.636417	comment	3.0	21.0	1560674303	-11.051379	This is why I gave up on Haskell. Lens works as advertised, but is a pain to learn and to use in practice: the abstraction is tough to grasp and it is hard to form an intuition about it. The compilati...		sbergot
20201066	11.954299	-7.075474	comment	3.0	10.5	1560761419	8.571865	> Once I show them Java 11 with var keyword, lambda's and streams they start appreciating how modern the language has become.I wrote a lot of Java, but it was a long time ago. Could you share a bit of...		ngrilly
20211624	11.807852	-7.616312	comment	3.0	12.0	1560855707	10.182748	what happens at companies where there a LOT of math. Like fintech, AI, etc companies.Are there equivalents of numpy,pandas, etc for go ?what happens when you need to deploy models ?		sandGorgon
20212553	11.627885	-7.8020697	comment	3.0	12.0	1560863474	10.181325	The Java team could use EditorConfig, CheckStyle, FindBugs, ErrorProne, or other tools to enforce team rules similar to how the Go team uses tools like gofmt.		aphexairlines
20212494	11.638778	-7.957782	comment	3.0	13.0	1560863054	10.226826	"I'm with you in general that golang code is very unmaintainable in the long term.> Go has been carefully designed to solve the problems of today.I'd even argue it was ""carefully designed"" to be in the..."		apta
20216632	12.276013	-7.2907834	comment	3.0	14.5	1560882427	-10.416771	I was under the impression that Smalltalk contributed more to what we think of as “the modern desktop” than LISP. If anyone has the real story, I’d love to hear it.		pmiller2
20221389	12.341337	-7.3464417	comment	3.0	20.0	1560928134	-8.856614	"BEAM is a wonderful VM, but calling it ""optimized"" for anything is problematic. It has focused on certain use cases,  but it's seen less than 1% of the investment in the JDK, so I guess it's better to..."		pron
20221971	12.161866	-7.203243	comment	3.0	16.5	1560936614	-8.456669	There is no doubt that JVM can provide massively better performance for a lot of stuff, but I wouldn't be suprised if Beam kicked JVM's butt in at least some areas.It's pretty much the only system I k...		patrec
20222516	12.409573	-7.3875976	comment	3.0	12.0	1560945894	-8.854337	It's true that BEAM has excellent concurrency, parallelism, supervision, message passing... but I don't know understand why that has to come at the expense of being terrible at everything else. Why do...		chrisseaton
20222102	12.363006	-7.363025	comment	3.0	14.5	1560939007	12.73805	I would be. BEAM is just a very slow platform, not just compared to Java, but also compared to JavaScript and Go. Again, that's not to say it's not very useful for some things (although many Erlang ap...		pron
20225265	12.190875	-7.1810284	comment	3.0	12.0	1560965368	12.361191	You didn't elaborate on exactly what you find esoteric about all of this, but here's all the non [a-zA-Z] characters, what they do, and how they relate to my sibling comment about objections:<> for ge...		steveklabnik
20228390	11.659077	-7.3628035	comment	3.0	17.0	1560987187	-8.73992	"> ""But exactly which concrete bugs would a programming language and environment with a strong type system prevent?"" asked the young student Master Typikos.""These kind of errors."" Master Typikos said -..."		picozeta
20238907	11.80844	-7.278282	comment	3.0	11.0	1561078006	-8.913991	"I would say that dynamically-typed languages are great to prototype as they do not emphasize on being correct too much.Being correct from day one will cause too much unnecessary friction.
You (usually..."		pcr910303
20243126	11.757479	-7.0426617	comment	3.0	13.5	1561129558	-10.570625	"Disclaimer: I don't know Javascript, but that's why:  > ['1','7','11'].map(console.log)
  1 0 [ '1', '7', '11' ]
  7 1 [ '1', '7', '11' ]
  11 2 [ '1', '7', '11' ]
  [ undefined, undefined, undefined ..."		nivertech
20243283	11.760556	-7.053384	comment	3.0	11.5	1561130497	-10.554489	That's apologist talk pure and simple. The language, silently, does something that's almost certainly wrong. The language has enough information to provide you with a helpful warning or error message ...		arcticbull
20258541	11.989756	-7.758091	comment	3.0	15.5	1561322730	10.391026	Haskell people claim that combinators and monads are clear, but in practice the code seems to be write-only. Each combinator might be simple, but that doesn’t mean that the result can be understood easily. And monads have the same problem, except they aren’t simple.		jes5199
20260126	12.150127	-7.1564083	comment	3.0	10.5	1561345154	-10.370546	I hear you. Other languages have those properties. Including TypeScript.In my experience I've found real-world applications, by definition are never as pure and perfect as we like them to be. Users do...		pteredactyl
20282637	12.321709	-7.0446734	comment	3.0	16.5	1561534287	13.183936	Frankly speaking its surprising Perl 6 hasn't taken off yet. Its a language which has Java like potential. Not sure where the efficiency/speed story has gone so far(Which was preventing adoption?). Bu...		kamaal
20287587	11.625836	-7.977708	comment	3.0	12.5	1561572719	10.259346	"Go so far has always prioritized the things I care most about:- performance & high concurrency
- a small language feature set so I can hire & train awesome programmers with a different background
- pr..."		tschellenbach
20292156	11.623552	-7.961565	comment	3.0	11.0	1561616407	10.236921	... and it failed almost instantly.https://techcrunch.com/2019/04/19/security-flaw-in-french-go...		DocTomoe
20311288	11.884919	-7.5543275	comment	3.0	12.5	1561793289	10.210188	Yours is the obvious solution but the problem is a simple example to help people understand the more complex idea of transducers. It's for situations where the code inside the for loop is so complex t...		southerndrift
20311773	11.810087	-7.3645406	comment	3.0	10.5	1561803731	7.524297	For me it's the other way around. A for loop is a general purpose solution that changes continuously with the problem: whenever I need to gather some extra data, just add some hairs to the for loop. T...		cousin_it
20313268	12.045644	-7.725495	comment	3.0	13.0	1561823771	10.463669	Looks like fairly standard OCaml and usage of functional programming idioms. Q: Where's the CI and property tests? If you feel uncomfortable maintaining the code base, start there.		ghuntley
20320984	11.607307	-7.5961065	comment	3.0	11.0	1561933807	-10.400397	IMO they just expose more of how OOP really works, giving you flexibility.Take Rust. Just because I like their pragmatic approach. They represent objects as structs with functions attached that have a...		nullwasamistake
20321024	11.903663	-7.3795424	comment	3.0	14.0	1561934397	7.0738497	"It's ""pure fashion"" until you try to massage your new subclass into behaving slightly differently when you're living with class hierarchies that are N levels deep.Clean compositions, ala Scala traits,..."		mceachen
20324109	11.767413	-7.440461	comment	3.0	18.0	1561978306	10.311082	"It looks like there's two very different styles going on here. Most of us are used to the OO-type approach (Java, C#) where the operations are ""inside"" the object and defined on it. This article is co..."		pjc50
20324598	11.782715	-7.214397	comment	3.0	17.0	1561984270	-8.961426	HM style type inference is nice, but the root problem is that the static type system restricts you to a set of statements that it is able to verify at compile time. This necessarily leads to code that...		yogthos
20334304	11.609525	-7.947134	comment	3.0	17.0	1562070223	10.131789	"The ""image"" interface is one of my favorite parts of Go's standard library, and I think it's one of the best showcases of Go's ""interface"" feature.  Want to save something as an image? Just implement ..."		yalue
13612223	12.189358	-7.236454	comment	3.0	28.5	1486685265	7.1364884	"Hmm.  ""Languages and systems that are of sound design will persist, to be supplanted only by better ones.""  I wonder if the author still thinks that, looking at the programming language landscape toda..."		AnimalMuppet
13629424	12.048273	-7.4331813	comment	3.0	14.0	1486921134	11.909359	Cool I didn't know this was a common pattern. I recently saw the same approach implemented in scala.meta [1] - it allows you to view the code as both parsed tokens with all syntax intact as well as mo...		zaptheimpaler
13643870	11.796179	-7.849814	comment	3.0	11.5	1487084301	10.336656	The language complexity comparison based on the number of pages in the spec is incredibly not useful and disingenuous.The Java specification is actually a fairly good specification and also covers a g...		agentgt
13651100	11.657142	-7.0956345	comment	3.0	12.0	1487156074	-7.2735624	Could you elaborate? Coming from Lua I always found the nesting of anonymous functions messy and wondered why they weren't done as in the article.		kraftman
13664100	11.946014	-7.0522847	comment	3.0	12.0	1487283582	9.425047	In the case of Python and Java, I think it's because generator expressions and Streams, respectively, accomplish much the same thing.Honestly, if you've seen what LINQ compiles to, it looks an awful l...		amyjess
13664137	11.967945	-7.0329013	comment	3.0	10.5	1487283857	9.315034	"In the real world, MOST people are using the ""it compiles to"" version directly in the code.  I certainly don't write the ""from x in y select"" version, except in the case of multiple hairy joins.  Even..."		rjbwork
13665085	11.748983	-7.1208253	comment	3.0	11.0	1487293411	6.8023205	The main value of the design patterns is that they have given names to things that were already common and fairly intuitive to a half decent programmer.But I've come across many people trying to use t...		opk
13678230	11.621362	-7.8995667	comment	3.0	11.0	1487479405	10.207266	After a couple of years with Go, I'm neither particularly happy about, not particularly unhappy. It's a decent language. Productivity is high, which trumps many other concerns.There has been so much c...		lobster_johnson
13709143	12.097392	-7.839835	comment	3.0	15.5	1487797525	10.428289	So much like OCaml... but I like the ability to annotate units! That's very cool.		agentultra
13710885	12.225834	-7.5867944	comment	3.0	11.5	1487813607	-10.619709	I can't upvote your comment enough. Learning F# w/o .NET and Clojure without JVM knowledge is next to impossible. There is no good doc despite what people say (and I own several books in this space). ...		throwaway7645
13725134	11.60511	-7.1914515	comment	3.0	16.5	1487954202	9.007762	It does not really test potential because a junior trained in Java has poor tools for flattening a list because idiomatic Java would not represent hierarchical data structure as a nested list. Idiomat...		brudgers
13725397	11.996445	-7.127251	comment	3.0	14.0	1487955609	9.056049	> An experienced programmer might look at the problem and choose a better tool: a different languageCome on, you are not going to call Haskell or Python to flatten a list in your Java.> or call a serv...		fiedzia
13731414	11.849829	-7.5866766	comment	3.0	29.0	1488028240	-8.712605	Most parts of the code don't actually care about all aspects of the type (or the value), but only that it's an object that they can hand to the next function. Or they only care about a subset of the v...		jstimpfle
13731463	11.81651	-7.535849	comment	3.0	15.0	1488028903	-8.965581	That's actually a great argument for static typing! Let's say your distant input component is changed and in some cases doesn't send lists of lists, but one flattened list. With Haskell, the compiler ...		adwn
13764428	12.249154	-7.544239	comment	3.0	12.5	1488382286	-11.377271	Perhaps the bigger issue here is fragmentation. Here you are, a young language with a lot of promise whose primary appeal is Java interop and whose target market is enterprise Java and already you're ...		cutler
13770253	11.642497	-7.352736	story	3.0	69.0	1488415063	-8.697285	Why does a Turing-complete type system make type checking undecidable?	http://composition.al/blog/2017/02/27/why-does-a-turing-complete-type-system-make-type-checking-undecidable/	luu
13771943	12.249958	-7.57491	comment	3.0	12.5	1488435764	-11.400645	It is also about tooling and libraries. I find Scala ecosystem to be behind Java ecosystem couple of years (SBT versus Maven/Ant/Gradle, collection libraries...).And Kotlin makes this debate irrelevant anyway.		jankotek
13773817	12.236708	-7.6084156	comment	3.0	10.5	1488461087	11.938664	"I wouldn't characterize Scala as a better Java any more than I would Python as a better C.Kotlin is a better Java.Groovy is a scriptable Java.Scala is a ""worse Haskell"" or an ""extensible Swift"", with close Java interoperability (that last part leading to the warts)."		paulddraper
13784677	11.895133	-7.7047715	comment	3.0	10.5	1488563815	10.3752775	"Haskell is a bad language, in my opinion, because you can't tell what the O(n) run-time is for any operation. Instead you just have to ""trust"" that it'll be fast enough.More on this: https://www.reddi..."		xyzzy4
13803603	11.66214	-7.5779257	comment	3.0	14.5	1488816907	10.041733	And one could say it was too early. Under the hood, generics are pretty bad in Java [0]. Type information is mostly lost; it's a compiler time only feature. They're much better implemented in C#, even...		whatever_dude
13803501	11.9487505	-7.4551077	comment	3.0	20.0	1488815985	7.2167	Says it supports Functional programming, but I don't really see  functional features. Seems premature?I see what the goals of Gravity are, but are there any reasons I want to use it?Side note: not a h...		bpicolo
13815824	11.934823	-7.4534893	comment	3.0	12.5	1488926464	7.2676406	"OK, but if you avoided calling non-functional patterns part of functional
programming, you would avoid invoking the topic of ""what constitutes
functional programming"" altogether."		dozzie
13821086	12.012637	-7.7921424	comment	3.0	14.0	1488988788	10.418496	I don't think you can write maintainable code without monads. Code has to be written in the language of the business domain so that it can be understood in those terms, so you can't (to take an extrem...		lmm
13835033	12.168437	-7.5098963	comment	3.0	10.5	1489103758	-10.636194	I don't know. F# has been the next great thing for a long time but it never really happened.		maxxxxx
13835052	11.689725	-7.1628456	comment	3.0	11.0	1489103966	-8.415779	I wish C# had standalone functions without needing to wrap them in classes.		candl
13835723	12.292995	-7.092366	comment	3.0	10.5	1489111279	12.427119	"So, Ruby has:    consequent-expr if antecedent-expr

...which has all the same problems as the PEP308 example, as far as I can tell. Its (implicit) else-clause is just always nil.I can't tell from the..."		derefr
13848363	11.893949	-7.619478	comment	3.0	10.5	1489282125	12.821013	I think there is some misunderstanding of what Pony is. It doesn't target distributed systems by the looks of it, it's more like a statically typed OO language with an alternative to threads/mutexes/c...		zzzcpan
13850554	11.912469	-7.3349285	comment	3.0	11.5	1489325263	6.9804587	"Exactly. ""Everything is an object"" was an extremism (today's extremism is the crusade against 'mutable state'), but otherwise OoO has been useful. For example it has seen great success in GUIs."		gpderetta
13846676	12.073741	-7.8108745	story	3.0	3.0	1489259445	10.437409	Ask HN: Is it worht learning OCaml?		gazarullz
13867990	12.124922	-7.4651265	comment	3.0	17.0	1489503752	11.897037	Long time Java lover here. I agree with all your points, but in the context of Java at least (does Scala support this?) there is no simple static binary that can be built and released, which includes ...		bluejekyll
13873718	12.256608	-7.556247	comment	3.0	19.5	1489550701	-11.351249	Kotlin is committed to Android support though, and the community is coming to rally behind it much more than Scala.		makeramen
13874391	12.247508	-7.5792875	comment	3.0	15.0	1489562553	-11.411896	Kotlin is just a Java++, akin to what CoffeeScript is to JS, a Java with a different syntax.Scala is not just a Java with a different syntax. Because of how traits work and because of how they were en...		bad_user
13875138	12.100227	-7.576701	comment	3.0	11.5	1489574110	-11.382387	Kotlin doesn't really have true reified generics (any more than e.g. Scala has), Java 8 has first class lambdas, extension methods and @Nullable now. Kotlin is just Java 8 with cleaner syntax.		pkolaczk
13877209	11.993253	-7.5622625	comment	3.0	14.0	1489594858	-11.383515	"""Actually, I wouldn’t care about for if there was an alternative. But there isn’t one.""Learn the collections library.  https://kotlinlang.org/docs/reference/collections.html
All loops can be written i..."		ghostc0der
13877319	12.242649	-7.581526	comment	3.0	10.5	1489595590	-11.421298	What did you struggle with in Scala? Anything you could write in Kotlin you can write in Scala with the same structure. Scala has some extra constructs that can save you a lot of code a lot of the tim...		lmm
13906088	11.673045	-7.9217176	comment	3.0	19.0	1489914942	10.235995	I feel like some of the criticism is unwarranted, specifically:> The tooling is badI feel like the tooling is really impressive, considering the age of the language. Remember that Haskell is something...		joaodlf
13906295	11.657281	-7.9309974	comment	3.0	24.5	1489919829	10.224108	> If you work in a job that forces the use of a less powerful language than what you've been exposed to, you can, I think, go through a sort of depression. You simply long to use the tools that you kn...		camus2
13906180	11.621283	-7.9130144	comment	3.0	11.5	1489917531	10.213005	"How robust/mature is it as of yet? More importantly, how are compile speeds and how much of a priority are they to the compiler maintainers? I too find it quite promising in terms of ""a language aimin..."		dualogy
13907269	11.6603155	-7.945696	comment	3.0	11.0	1489933858	-13.077209	Totally not, I'm working in Poland. And, I'm sorry to say, if you haven't heard about Consul, then you're really not in a position to judge if infrastructure tools are or aren't written in Go. Consul ...		cube2222
13908612	11.687266	-7.8886127	comment	3.0	16.5	1489946189	10.25221	I've been thinking a lot lately about why Go, a quite minimalist language by modern standards, has been so incredibly successful in such a short time. It's about a decade old, and is already among the...		SwellJoe
13911531	11.672509	-7.6282153	comment	3.0	15.0	1489981713	10.106963	"I've read a few of this guys blog posts and they are generally fairly interesting. This one a little less so, but I had a good chuckle from the line about why he implemented generics in magpie. ""Magpi..."		osd
13918489	11.6619005	-7.9752035	comment	3.0	22.0	1490051992	10.223936	These are the changes that if made Go wouldn't be language it is. Go is simple, straightforward if little verbose. To me Go fits perfectly for business apps that I write currently in Java.		geodel
13918674	11.617499	-7.9389606	comment	3.0	11.5	1490054213	10.218406	One of the primary design principles behind Go is that it be designed to incorporate the best available features of other languages, as much as it is able while remaining simple and easy to learn and ...		Zikes
13929726	11.738936	-7.926513	comment	3.0	12.5	1490177735	10.217184	I agree that Go makes programming simple, in a matter of less than 6months, I learned how to write a webapp in Go just by using the standard library, later, I wrote a guide to teach how to write webap...		thewhitetulip
13931964	12.013084	-7.6747923	comment	3.0	12.0	1490198335	10.407903	Mirror of my question from Reddit:Don't classes cover a full superset of the functionality of ML-style functors? I have yet to find a functor-dependent construct that can't be mimicked with them, and ...		saosebastiao
13930092	12.173498	-7.331414	story	3.0	65.0	1490182703	-9.919038	Tamale: An Erlang-Style Pattern-Matching Library for Lua	https://github.com/silentbicycle/tamale	networked
13911027	11.72163	-7.4061794	story	3.0	101.0	1489973568	-8.748465	Bootstrapping a Type System (2010)	http://journal.stuffwithstuff.com/2010/10/29/bootstrapping-a-type-system/	lemming
13949320	11.676984	-7.648749	comment	3.0	11.5	1490367591	10.116203	If they came from any scripting language they probably have never worked with generics -- that doesn't really strike me as an outlandish scenario.l		emodendroket
13950535	11.642419	-7.9285665	comment	3.0	10.5	1490375939	10.234092	I'm 3.5 years into using Go exclusively as well, and this rings very true to me with regard to generics:> Interfaces are good enough 99% of the time.Generics would be really nice for generic data stru...		schmichael
13953492	11.811997	-7.3668466	comment	3.0	18.0	1490404237	10.369089	There's always room for another language.What's hard is cracking into the very, very top tier, the C++, C#, Java, etc. tier. I am also increasingly of the opinion that it simply takes massive corporat...		jerf
13953638	12.49138	-7.5068207	comment	3.0	11.0	1490406642	12.921136	"> everything that uses that type is statically checked to be ""behind"" that gatewayIn a distributed system, the largest the ""gateway"" can reliable be is a single node, because you don't get guarantees ..."		platz
13959339	11.998992	-7.7658854	comment	3.0	15.5	1490506026	10.391252	"> each result of ""bind"" sits in its own version of the original data structure, which then have to be combined back into a single data structureThat doesn't make sense to me. Let's say I have the list..."		jnordwick
13960078	12.005525	-7.718741	comment	3.0	15.5	1490524712	10.449112	> Postgrest is a great example of a real-world Haskell codebase.It's hard to read. Very messy.https://github.com/begriffs/postgrest/tree/master/src/PostgR...Despite 15 years of programming experience ...		gothrowaway
30724867	11.749107	-7.3715544	comment	3.0	15.0	1647623803	-8.906204	> most modern statically typed languages maintain soundness through a combination of compile time and runtime checking.Rust, C, C++ - all do not keep around this information.You're right that the JVM ...		whimsicalism
13939728	11.657272	-7.9129896	story	3.0	139.0	1490277434	5.881599	Hopfield Networks in Go	http://mlexplore.org/2017/03/12/hopfield-networks-in-go/	stehat
13978580	11.650023	-7.2268767	story	3.0	86.0	1490721930	8.811904	A set of efficient persistent immutable data structures for Reason and OCaml	https://facebookincubator.github.io/immutable-re/	gfosco
30815796	12.443721	-7.0166054	comment	3.0	11.0	1648332435	12.319313	"> Python is still the easiest to read when you come back to some old codeLucky you.  You must not have seen the ""pythonic"" monstrosities I've seen.Python has such a low barrier for entry that one can ..."		blunte
30817492	12.247602	-7.5188894	comment	3.0	12.5	1648352142	-11.371463	What are the things you liked about Kotlin that Typescript didn’t have or did poorly? I’m not familiar with Kotlin at all.		vosper
30818162	12.226505	-7.5197396	comment	3.0	11.0	1648361962	-11.408961	I (reluctantly) agree with pron as well. Kotlin's push to become a multi-platform language -- and escape the JVM -- has taken years, and seems far from 'production ready'. Unfortunately, the facets of...		richbell
30841367	12.051543	-7.848354	comment	3.0	11.5	1648554840	-6.4918494	We use asynchronous tasks in MirageOS (cooperative multitasking) using lwt http://ocsigen.org/lwt/latest/manual/manual, so you can serve multiple network connections at the same time.Since there are n...		hannesm
30799818	11.659927	-7.3790116	story	3.0	22.0	1648197642	-6.498372	Why and how we use primitive maps	https://tech.trivago.com/post/2022-03-09-why-and-how-we-use-primitive-maps/	skilled
30842494	12.257434	-7.4979773	comment	3.0	15.5	1648561746	8.24978	* Use SDKMan for runtime and sdk management https://sdkman.io/* Try to use Kotlin where allowed (Maybe unpopular and bad faith response given that you asked about Java, but I don't care -- kotlin's Ja...		davidjfelix
30858674	11.63589	-7.8419743	comment	3.0	16.0	1648663536	10.120174	Go is strictly less useful than Java because it has strictly less power. This is true for general purpose programming (though somewhat remediated through introduction of generics) it's doubly true for...		jpgvm
30859536	11.6222105	-7.782329	comment	3.0	10.5	1648667361	10.089905	I disagree.Go is definitely not as fast as Java for throughput. It's gotten pretty good for latency sensitive workloads but it's simply left in the dust for straight throughput, especially if you are ...		jpgvm
30869817	11.6707325	-7.9410996	comment	3.0	11.5	1648747170	10.258684	There is a deeper strategy here with go vs. node; having a standard library maintained by professionals.I would rather build on a common set of libraries secured by people who are paid full-time to ma...		bigdubs
30870601	11.63735	-7.9761057	comment	3.0	15.5	1648751106	10.217173	Let's say my_app uses package foo which uses package bar.It turns out there is a security bug in bar. The bar maintainers release a patch version that fixes it.In most package managers, users of my_ap...		munificent
30871069	11.6539135	-7.873904	comment	3.0	26.0	1648753582	-9.729118	It’s very subtle, but there are some important differences. For example, lockfiles are not recursive in NPM: the NPM package (usually?) does not contain the lockfile and does not adhere to it when ins...		jchw
30879358	11.927783	-7.459005	comment	3.0	18.5	1648827716	7.390707	You should not approach problems in functional languages with imperative techniques.  It's fitting a square peg in a round hole.  The approaches & data structures aren't always the same.In my experien...		nightski
30880739	11.88523	-7.4093494	comment	3.0	13.0	1648833705	7.284934	"> Every popular CPU architecture is imperative.That's arguable, given that every (deterministic) imperative computation can be expressed as a pure functional program. ""Imperative"" is more of a viewpoi..."		TuringTest
30889710	11.661667	-7.963252	comment	3.0	12.0	1648918671	10.263048	Are there any good write ups on Go Generics vs other languages for those of us who are familiar with Go but do not write it on a day to day basis? I pick up Go every few months to try new things cause its infinitely easy to setup a web server in Go since it is built-in.		giancarlostoro
30908024	11.6328745	-7.470612	comment	3.0	12.0	1649087237	-8.760753	Isn't this sort of an orthogonal problem? Flow typing implies that your type is in some way unknown at the time the code fragment is evaluated. I think this can mostly happen in two situations:1) The ...		xg15
30908288	11.786844	-7.2960215	comment	3.0	11.5	1649088538	-8.84096	In the end, I feel like structural typing is one of those attractive nuisances. It sounds good on the outset, and it does provide a limited amount of convenience, but then it turns out not to be that convenient, and it removes a lot of safety and flexibility by taking intent out of the thing.		masklinn
30923855	12.260129	-7.2893667	comment	3.0	15.0	1649187345	6.981605	SmallTalk as a language is IMVHO terrible BUT it's strength came from it's concept, an user-programmable environment, that's matter so much.SmallTalk was the language of first commercial desktop envir...		kkfx
30924768	11.822475	-7.2991657	comment	3.0	10.5	1649191463	-8.966062	> the push to add types to JS, Python, Ruby and other dynamic languages is largely from developers accustomed to Java, C-Sharp, and other enterprisy languages who would probably rather not work in a d...		wirrbel
30996019	11.595088	-7.7940555	comment	3.0	11.5	1649716716	-0.5953483	I don't know Go, but this sounds analogous to .net solution / project files - is that kind of what this is?		taberiand
30930665	11.644143	-7.964863	story	3.0	54.0	1649242787	10.205744	GhostSCAD: Marrying OpenSCAD and Golang	https://jany.st/post/2022-04-04-ghostscad-marrying-openscad-and-golang.html	ljan
34584859	12.292781	-7.3028603	comment	3.0	17.5	1675105701	7.0608115	Yes, and this really showed with applications like Hypercard where you could build apps making use of the operating system's widget toolkit. The old Mac OS was based on the Xerox Star, which was in tu...		ramin_hal9001
34619668	11.824561	-7.319461	comment	3.0	12.5	1675294022	-8.968738	Citation heavily, heavily needed. Dynamic typing means that none of your code can be statically checked, which means that correctness relies on the exhaustiveness on your tests. It should be obvious t...		phailhaus
34619777	11.655337	-7.9341154	comment	3.0	11.5	1675294608	10.230864	"You forgot to list the most useful feature of adding generics: people on the internet can no longer say ""lol no generics"", drastically reducing the amount of garbage comments about Go."		zeeboo
34620712	11.798485	-7.366731	comment	3.0	13.5	1675300657	-8.8675995	What did I make an equivalence between?  Large codebases are hard, period.  That is all I am saying.  Having worked on 100k LOC systems in static and in dynamic, I will not claim either has a benefit....		taeric
34599863	11.64386	-7.9717336	story	3.0	14.0	1675191084	10.195604	Improving Observability of Golang Services	https://flow.com/engineering-blogs/golang-services-improving-observability	dmicher
34662020	11.742554	-7.296021	comment	3.0	13.0	1675572762	-8.106432	"> thinking about functions and how to compose them and solve problems with them, instead of going ""I heard a noun, I need a class!""Are captured variables of a closures a 'noun' or a 'verb'? In the end..."		MichaelMoser123
34665380	12.229879	-7.6418014	comment	3.0	10.5	1675609152	11.932187	Author of Scala.js and of the post here. AMA.		sjrd
34686549	11.934167	-7.432607	comment	3.0	13.5	1675728731	7.1993866	Functional and declarative are the same to me		pharmakom
34687117	11.916864	-7.490114	comment	3.0	11.0	1675732184	7.385087	Not really. Try to interact with DB in FP. Yes, there is a referential transparency ... when combining functions which call DB (e.g. using monads). As a result you get a composite function, which is t...		vc8f6vVV
34689636	11.802952	-7.28904	comment	3.0	12.5	1675753235	-8.94388	Type annotations are not comparable to unit tests at all. Unit tests verifies correctness of the behavior, not just the types. E.g. if you have a mathematical function like min(), unit tests can verif...		goto11
34690727	11.832118	-7.1607404	comment	3.0	12.0	1675763560	-9.028209	I love typing. But python's type annotation is absolute garbage. The fact that you need to import types should tell you what a load of shit it is. All files now have type imports. Yuck.In addition, th...		nine_zeros
34717529	12.098473	-7.5356264	comment	3.0	14.0	1675900371	-10.604907	".Net itself is fundamentally OOP. Lambdas are implemented as classes with an Invoke method, F# enums are implemented as classes with variants as subclasses, etc. So if ""overcoming OOP defaults"" is the..."		Arnavion
34750616	11.653233	-7.795349	comment	3.0	13.0	1676104293	-9.085866	Golang has the right idea. There's an inbuilt language style and what you think matters doesn't because there's already a formatting tool and we'll all bend to it's will.		gonzo41
34751299	11.8089485	-7.21683	comment	3.0	10.5	1676113958	-8.986556	> I also find it kind of hilarious that type checking isn't built into the standard python interpreter, but you need a separate tool instead.Agreed, typically you don't add new syntax to a language on...		MaxBarraclough
34751508	11.801631	-7.200853	comment	3.0	11.0	1676116135	-8.928088	So because the type system is far far far far less polymorphic than the underlying code, we're to monomorphize the code manually?Angry rant: maybe mypy (and its PEPs) can be designed well? Maybe tacki...		mjburgess
34751429	11.768566	-7.1929674	comment	3.0	13.0	1676115550	-8.98117	the problem is not type hinting. the problem is people trying to use a single function for any type. as can be seen in the article, that is extremely difficult and error prone. so just dont do that:  ...		2h
34755365	11.887842	-7.1298084	comment	3.0	17.5	1676143173	-10.77383	> I'd have loved to first read six paragraphs about how the author's grandmother raised them on home grown threads and greenlets.With recipes, often times your problem is you want to learn how to make...		nickjj
34765842	11.831871	-7.599029	comment	3.0	10.5	1676229348	-9.504117	Dijkstra had a lot of influence for some years on the UTCS undergraduate program, whose first undergraduate course for much of the 1990s was taught in Haskell and was a brutal weed out, at ~70% attrit...		hungrygs
34788812	11.748135	-7.287549	comment	3.0	11.0	1676380562	6.949934	"Please, I am very curious about the kind of ""non boring"" classes you are talking about. If you could show an example. I couldn't come up with anything that I would define as reasonable where we couldn't define the types beforehand."		lysecret
34807599	11.916806	-7.3264236	comment	3.0	14.5	1676483056	7.0647826	If I've learned anything as a programmer, is that these things move in fashions. People will get sick of result types and exceptions will be hot again. OOP will be fashionable once again. The grass is always greener on the other side of the fence.		zarzavat
34836163	11.614952	-7.942494	comment	3.0	11.5	1676649500	10.202242	Generally on Apple platforms the move here would be putting the shared binary into a dynamic .framework rather then trying to eliminate the shared dependency. Is this a limitation of authoring it in Go that it has to be entirely static?		zacwest
34836659	11.622175	-7.9423685	comment	3.0	26.0	1676651090	10.165498	Go belongs in the exact same bucket as Java and C#.		ntonozzi
34845182	11.8435335	-7.491396	comment	3.0	22.5	1676709650	7.5568724	best article i've seen on pragmatic purity - i would only dissent on c++ not providing facilities for pure functions (i don't here mean pure in the virtual=0 sense) - you can, and should, do quite a lot.		zabzonk
34845601	11.927542	-7.4472117	comment	3.0	12.5	1676714339	7.26258	As a 25+ years coder who's very accustomed to thinking in my own ways, I have a problem with functional-purism similar to the problem I had with globals and factory functions. The fact is that most pr...		noduerme
34869273	11.687506	-7.938617	comment	3.0	10.5	1676908473	10.168311	http client, UI interactions logic, domain models, utilities like tree operations, browser domain logicand all of that inside single go file?I think you'd make your life 10 times easier by splitting it better		tester756
34803613	11.908707	-7.4268723	story	3.0	6.0	1676468431	7.2981834	The Logic of Functional Programming	http://lisp-ai.blogspot.com/2023/02/the-logic-of-functional-programming.html	johnbernier
34811615	12.226785	-7.2789917	story	3.0	3.0	1676499780	7.117481	New to programming/OOP – Should I start with Smalltalk?		qsmrf
34938295	12.133289	-7.5046477	comment	3.0	10.5	1677345157	-10.608725	Perhaps if you already know C#, otherwise I doubt it. Of course it depends on ones prior experience, but F# is functional but still requires you to understand OO in order to interact with the framework.		bazoom42
34942315	11.958997	-7.4493446	story	3.0	17.0	1677376728	7.278231	Functional Programming Internship at NASA	https://old.reddit.com/r/haskell/comments/113zndf/ann_summer_internship_at_nasa_ames_research_center/	ivanperez-keera
34957848	11.93571	-7.095192	comment	3.0	13.5	1677513290	-8.840969	I’m not sure I understand the “infrastracture” label, but certainly for the cases the author listed as “infra” typing can be cumbersome. Famously just json deserialization can be rather painful in statically typed languages, especially ones without complex compile time features.		stu2b50
34958066	11.826243	-7.112402	comment	3.0	13.0	1677514269	-9.261145	Not the writer, but based on what the author wrote, I think it's based on the author's experience with Java. It can be a hideous nightmare of java.util.Date versus java.sql.Date versus java.time.Local...		mandevil
34968299	11.626949	-7.2145524	comment	3.0	11.0	1677585130	7.050612	Most of those Clean code rules are BS.1. Prefer polymorphism to “if/else” and “switch” - if anything, that makes code less readable, as it hides the dispatch targets. Switch/if is much more direct and...		pkolaczk
34994830	11.991918	-7.336947	comment	3.0	11.5	1677759676	7.1410084	Yes, it is, and OOP was all about message passing, not synchronous calls. The current incantation in pretty much all OOP languages (excepted maybe Smalltalk) is basically procedural programming with namespaces.		senorrib
34998055	11.856816	-7.3215766	comment	3.0	14.5	1677775247	7.05032	"""Classes are much harder to reason about than other type systems.""Strange, I find classes intuitive. Objects lend themselves to physical system analogues; making objects easier to reason about in comp..."		shanebellone
35031359	11.960956	-7.4715934	comment	3.0	19.5	1678035275	-10.0158415	> In order for a programmer to accept a language with strictly less expressive powerSort of hard to reconcile this view with just how much more expressive the Haskells and Lisps of the world are compa...		tikhonj
35055031	11.815316	-7.506633	comment	3.0	12.0	1678195497	10.352111	This post absolutely captures an essential truth of good programming.Unfortunately, it conceals it behind some examples that - while they do a good job of illustrating the generality of its applicabil...		jameshart
35055969	11.639463	-7.2979994	comment	3.0	19.5	1678200774	9.709167	I like how the author boils the idea down into a simple comparison between two alternative approaches to a simple task: getting the first element of a list. Two alternatives are presented: parseNonEmp...		Octokiddie
35061509	12.146555	-7.891148	comment	3.0	11.5	1678224480	-3.2326338	"Why? How?The OP GitHub site doesn't promote any material that introduces the concepts at all.
The ""survey"" paper at the top is nigh-impenetrable. I'm sure the category theorists are having fun modelling machine learning, but it doesn't show how machine learning benefits from the category theory."		hgsgm
35064908	11.933005	-7.6496024	comment	3.0	17.0	1678246563	10.347677	> In functional programming, functions are not allowed to do that. The only thing a function is allowed to do is return a value.Oh, yes, they are allowed to do that. You capture the effects into a lis...		javcasas
35070150	11.712654	-7.0868073	comment	3.0	13.5	1678289236	9.113586	Not only this will speed up comprehensions (which are already faster than map/filter), but it will likely solve this annoying weird edge case with the scoping of lambdas in comprehensions.Last but not...		BiteCode_dev
35070751	11.703394	-7.1368155	comment	3.0	11.5	1678291776	9.208498	> Not only this will speed up comprehensions (which are already faster than map/filter)As someone coming from Haskell I find it odd that comprehensions are prioritized over generic maps (fmaps) and tr...		ghostwriter
35085693	11.786367	-7.1878896	comment	3.0	15.5	1678391246	8.425942	While philosophy is good, Java makes a very questionable syntactic choices when adopts that said features.Pure slowness in how java develop feels like you have to wait 5 years to get something that ot...		NwpierratorR
35086111	12.253184	-7.5422845	comment	3.0	11.5	1678393204	-11.386214	But you do not have to choose Java over Kotlin - you can use them both in the same project without any side effects.This was by design for Kotlin, and is probably their smartest/best feature. All exis...		Alupis
35093158	11.850341	-7.3674626	comment	3.0	12.0	1678448422	-10.054853	"I only read the front page, but I can't figure out what ""statically typed"" even means in the context of lisp. If it isn't doing manifest value typing it's hard for me to call whatever it is ""lisp""; it..."		bandrami
35092468	11.889578	-7.281743	comment	3.0	11.0	1678441657	7.0688562	"I'm just saying that, pedantically, ""object"" is a term of art in C and C++ which has little to do with the typical OOP definition of object."		gpderetta
35097535	11.938927	-7.1358576	comment	3.0	11.5	1678468663	9.158008	I only skimmed through the landing page so maybe I missed it, but the value proposition isn't clear to me.If you're going to `await` for the contacts import to finish anyway, what's the advantage of s...		brap
36915809	11.735921	-7.0489283	comment	3.0	13.5	1690594098	8.586819	"> I got an early look at Java, with concurrency built in from the start, [...] and I ""knew"" it was going to be huge.And Java doesn't even have good (conceptual) support for concurrency.  Compared with eg Erlang, Rust or even Haskell.But Java was still better at it than C or C++ at the time."		eru
36956278	11.682715	-7.363727	comment	3.0	10.5	1690899725	-8.825736	> People are far too obsessed with static type checking. A lot of this time would be better spent invested in live debugging tools.I mean.. the two are tightly related. The type represents the outer b...		unshavedyak
36935801	11.65306	-7.0291266	story	3.0	4.0	1690750140	9.029485	Always leave a trailing comma in Python lists, dicts, tuples	https://poe.com/s/bHqRzUP27XrylDmlRYXR	behnamoh
37039522	12.109183	-7.474389	comment	3.0	22.5	1691436009	-10.591485	"You can make the C# code much more F# like with records and a switch expression.Eg: 
https://sharplab.io/#v2:EYLgZgpghgLgrgJwgZwLQAUEEsC2UECeAwgP..."		tablloyd
37040468	12.131954	-7.5079737	comment	3.0	11.0	1691439853	-10.618033	I love seeing F# mentioned on Hacker News, but this article in particular is a bit dubious. Yes, you can use F# from C#, but it gets frustrating quickly.Fortunately, almost anything you can do in C# c...		munchler
37040713	12.107148	-7.492161	comment	3.0	11.5	1691441145	-10.621709	I got the concept of immutability, but I inevitably ended up recreating OOP patterns whenever I tried working with F#. I do Asp.net WebAPI Projects and trying to do dependency injection ends up just t...		shortrounddev2
37040977	12.285085	-7.081508	comment	3.0	11.5	1691442540	13.156608	"It's worth remembering that Raku originated as ""Perl 6"" and a lot of design philosophies are derived from Perlisms in the first place.The author seems to be unfamiliar with both Perl and Raku's histor..."		chungy
37042201	12.326363	-7.0223336	comment	3.0	18.0	1691449838	-11.459471	Apparently by replacing them with new horrifying surprises, if this article is any indication.Good grief, I don't miss working in Perl.		throwanem
36987260	12.012449	-7.7479157	story	3.0	20.0	1691076625	10.427549	Effective Haskell is a practical hands-on introduction for working developers	https://pragprog.com/titles/rshaskell/effective-haskell/	rebeccaskinner
37028166	11.810612	-7.204925	story	3.0	3.0	1691365362	-8.95522	Ask HN: Is there a way to use Python statically typed or with any type-checking?		gorenb
37066594	11.669012	-7.3517947	comment	3.0	13.5	1691605256	-8.816649	"> a big problem w/ static languages is that the developers of these languages are not willing to compromise type-safety for simplicity: there are very few 80/20 type systems out there that just say ""W..."		ragnese
37067794	11.951302	-7.7698436	comment	3.0	12.5	1691612195	10.396732	> having to use monads or effects for ioSpeaking as a Haskell programmer, this is not a problem. You put “IO” in the function signature and “do” in the body, and that’s workable. Or some other Monad. ...		klodolph
37069713	11.634485	-7.3214016	comment	3.0	18.5	1691623165	-8.731199	"You can catch the low hanging fruit, sure. But that ends up being pretty useless at scale, because your ""checks"" can't be relied upon. Or, worse, the programmer ends up having to understand the rules ..."		lmm
37071210	12.130373	-7.1015477	comment	3.0	11.0	1691634555	13.153615	> Could you provide an actual example for this?Lists are given to the reader in angle brackets and printed in parentheses, or at least that's how it looks. I suppose the other possibility is that thes...		throwanem
37082019	11.714068	-7.2851553	comment	3.0	15.5	1691702882	-8.754942	You mean this isn't a website for lambda calculus enthusiasts?		fasterik
37097285	11.64444	-7.9376407	comment	3.0	10.5	1691817906	10.153866	because go developers are sick of being pure and like to type shorter things (and I don't mean variable names) to get their jobs done.programming is a lazy hobby. it's why as soon as generics were rel...		MAGZine
37100368	12.01093	-7.8274775	comment	3.0	12.0	1691849460	10.440282	This is quite intriguing. In Ardour we have a 63 bit time type that uses the high (MS) bit to indicate whether it is a value in the audio time domain or the music time domain.It did not occur to me to...		PaulDavisThe1st
37101786	11.790167	-7.1048217	comment	3.0	20.0	1691857646	-10.428094	"For anyone finding CLOS interesting, ""The Art of the Metaobject Protocol"" is the next logical step. A good way to dig deep into how CLOS is built.It should be a mandatory read for anyone looking to design a programming language with object concepts."		galdor
37102017	11.949568	-7.17749	comment	3.0	17.0	1691859116	-10.413306	I think I'd recommend reading Sonya Keene's Object-Oriented Programming in Common Lisp: A Programmer's Guide to CLOS first though.  I really don't know any other ways of learning all the things like m...		EdwardCoffin
37117488	11.835138	-7.344613	comment	3.0	13.0	1691987705	9.245046	[I am the author of the post.] I know that keyword lists are different from maps, but I think their superficial similarity to maps isn’t ideal, and I don’t think that they’re the best possible solutio...		SupremumLimit
37154574	11.722653	-7.1188006	comment	3.0	11.0	1692223912	-8.059847	Python's lack of multi-line anonymous functions is a hindrance to using it as a functional language, IMO.		heavyset_go
37158585	11.944292	-7.4383855	comment	3.0	12.0	1692259426	7.1260557	The last time I've checked, OOP and functional programming are orthogonal concepts.EDIT: It means that there is no problem for the language to have both OOP & Functional. They don't have to choose one over another.		tasubotadas
37172853	11.663826	-7.934266	comment	3.0	12.0	1692347992	10.195356	Adding generics to go was a mistake		yankput
37175528	11.664849	-7.938073	comment	3.0	11.0	1692366301	10.222146	I believe these things are mostly productivity sinks, which is why I am such a Go fan and also so sad to see these types of projects in Go.This is exactly what I was afraid of when generics were intro...		cle
37204784	12.369825	-7.0540285	comment	3.0	15.5	1692584021	12.343241	My favorite little-known fact about Ruby hashes is that they respond to `to_proc` and can be used as procs. For example, you can do this:a = { 1 => 'a', 2 => 'b' }[1, 2, 3].map(&a)#=> ['a', 'b', nil]		faitswulff
37204955	11.712137	-7.2953796	comment	3.0	12.0	1692586140	-8.147863	closures are a poor man's objects…		bfung
37205968	11.824522	-7.0887537	comment	3.0	13.0	1692598317	8.5545845	What are situations where you might want to use this? It is easy enough to set oom_score_adj from regular userspace code, the only time you would benefit from computing it dynamically in the moment is if that score changes rapidly. Does that happen?		remram
37216719	12.014645	-7.8033543	comment	3.0	13.5	1692660671	10.407128	Each Raspberry Pi could perform a function that was notionally passed to the monadic bind operator, but really a monad is the rules under which the Raspberry Pis would be connected.From Wadler's paper...		kfixjviv
37226893	11.603601	-7.924836	comment	3.0	12.5	1692729648	10.164184	It’s not without precedence, for example:  https://pkg.go.dev/strings#NewReplacerI don’t mind it. You can use LogAttrs if you want to be explicit.Although I do wonder if there’s anything tricky with t...		grose
37247797	11.992437	-7.736027	comment	3.0	13.0	1692878369	10.410468	This really resonates with me.I’ve been using it in a decidedly industrial application for about 1.5 years now. I had some fairly significant experience with it prior (https://github.com/mattgreen/hyt...		mattgreenrocks
37251942	12.014667	-7.71436	comment	3.0	10.5	1692898287	-10.4063	I've met a few young programmers who heard somewhere that object-oriented programming was bad and they want to get the enlightenment of functional programming that they've heard about.  Frequently the...		PaulHoule
37252590	11.918557	-7.524375	comment	3.0	10.5	1692900982	10.418779	Me three!  I came from Python (now with MyPy), learned OCaml and  liked some aspects, was intrigued by Reason -- and also sad it seems to be in limbo.I also miss early returns, and break/continue.I wo...		chubot
37259791	11.8580065	-7.4153867	comment	3.0	11.0	1692956369	7.2258186	This presentation is very good! A few days ago, I started thinking how code from a functional language could be converted to imperative code for better performance, with in-place operations (instead o...		voidbert
37285119	11.818313	-7.129797	comment	3.0	14.5	1693159330	-9.165433	"Pycharm has the worst type checker that exists today.
It may have been the best a few years back but others have suppressed it considerably.I recently switched from Pycharm to vscode which uses pyrigh..."		veber-alex
37288738	11.798747	-7.156095	comment	3.0	10.5	1693187568	-9.048804	"Well on Pycharm 2022.3 which is what I still have installed even this simple function doesn't show any error.  def foo() -> int:
      pass

I sure hope they improved the type checker in later versions..."		veber-alex
37292539	11.602236	-7.9671845	comment	3.0	17.5	1693222830	10.228016	Going through their docs, I'm having hard time identifying the 'silver bullet' that makes this all possible.This is m first time seeing this language 'V'. So no pre-baggage.The splash page is making e...		FrustratedMonky
37271475	11.77127	-7.407217	story	3.0	22.0	1693045950	2.3501403	Experiments with higher-kinded types and object algebras in C# (2020)	https://github.com/tgrospic/object-algebras	olvy0
37248177	11.646111	-7.2717505	story	3.0	78.0	1692881562	7.3877068	Compiling Functional Languages (2002) [pdf]	https://xavierleroy.org/talks/compilation-agay.pdf	perihelions
37306940	12.331005	-7.4013667	comment	3.0	18.0	1693313148	12.775069	I can see how you would think that, yes. In practice I haven't noticed it except in super rare cases where processes (actors) hold on to huge binaries / strings -- which is one of the weak points of BEAM's GC.		pdimitar
37315215	12.314549	-7.0236835	comment	3.0	10.5	1693349573	13.0678	"But Ruby took all the best bits of Perl so I'm still perplexed as to why Python ""won""."		cutler
37361873	12.079238	-7.1990476	comment	3.0	10.5	1693665250	9.116973	It hurts a lot though when you have a bunch of promises and you want to rate limit the execution		plopz
37376010	11.788363	-7.6246123	comment	3.0	22.0	1693787344	10.404077	"Liquid Types enabled a 6x speed up in high-performance parsing of UDP packets, according to ""Scrap your Bounds Checks with Liquid Haskell"" of Gabriella Gonzalez [1].With Liquid Haskell, the bound chec..."		one-punch
37398319	11.995985	-7.780888	comment	3.0	17.5	1693951003	10.438775	Ah. You found Haskell hard because you were trying to learn it out of order. Demanding to understand what a monad is before learning how higher-order functions and higher-kinded polymorphism work in H...		chowells
37399065	11.980452	-7.496878	comment	3.0	10.5	1693955461	7.2396955	What is the appeal of functional programming for physicists?		3abiton
37406020	11.995097	-7.769245	comment	3.0	10.5	1694011853	10.378065	"> Where do I have to 'understand ""Monad""' to write this?Literally every line?Your example makes it seem so simple! ""Do"" for function declarations, ""<-"" for variable assignment... Haskell is just like ..."		itishappy
37418051	12.035199	-7.821253	comment	3.0	12.5	1694090384	10.420862	"Some thoughts based on reading the README:* I'm not sure if the ""challenge"" approach will work. I think it's good to demonstrate things to students before letting them loose. I strongly agree that pro..."		noelwelsh
37431905	11.836708	-7.5298567	comment	3.0	12.5	1694169457	10.091964	Does Lean have something similar to Haskell's List comprehension [1] or some kind of set builder notation for functional programming purposes?[1]: Example: `[x*2 | x <- [1..10]]`		2pEXgD0fZ5cF
37438247	11.694795	-7.4220114	comment	3.0	10.5	1694201249	7.2534204	I understand this not as objects are missing, after all, struct with methods and traits are objects aren't they? But more like the lack of hierarchical inheritance, that is most often used in OOP to c...		bombela
37440369	11.625667	-7.902092	comment	3.0	41.0	1694214229	10.211519	"here is a Go implementation for fun:    package main
    
    import ""flag""
    
    func main() {
       yes := flag.String(""m"", ""y"", ""message"")
       flag.Parse()
       for {
          println(*yes)
       }
    }"		38
37447258	11.681587	-7.9730234	comment	3.0	12.0	1694277468	10.215835	I think I have made it pretty clear already, but here it is again:the Go code has MORE functionality (flag parsing) with LESS code. yes its not as fast, and yes the executable is larger, but for many,...		38
37457572	11.940866	-7.512562	comment	3.0	17.5	1694364169	8.583231	To give a shallow overview, transducers allow you to define steps in collection processing _per item_ rather than having collection processing as a series of transformations of collections.So rather t...		casion
37457692	11.943216	-7.6544633	comment	3.0	14.0	1694365039	10.321702	That seems like insufficient magic for the respect that transducers seem to have.What you've written is just the Haskell list monad or Java8 Stream.flatmap.		mrkeen
37500974	11.669628	-7.9168673	comment	3.0	11.5	1694635056	10.193913	I still don't understand the benefit of running a Go app on a cloud provider using this.  Anyone want to help me?Is it an edge play for using something like Cloudflare Workers?Is it cheaper vs standard serverless/container deployments?  Go apps can already scale to 0 for these use cases.		candiddevmike
37518848	12.023803	-7.813539	comment	3.0	10.5	1694755827	10.398446	> that’s just basic growth accountingAnd a monad is just a monoid in the category of endofunctors.This stuff is not obvious to everyone. The arbitrary numbers are called an example.The point of the ar...		sshine
37539036	11.866974	-7.335236	comment	3.0	12.0	1694900746	-8.719019	"""Auto-curried function style (reversed arg) wrappers""https://twitter.com/jdalton/status/1571870137690591236"		stolenmerch
37539200	11.893753	-7.3488836	comment	3.0	13.5	1694901836	7.0552073	No, there's a lot wrong with inheritance. It leads to all sorts of issues and while theoretically one can keep the tree 1 level deep, in practice it's too tempting to expand the hierarchy.This is one ...		insanitybit
37539437	11.708532	-7.8779726	comment	3.0	18.0	1694903411	10.193023	> Golanggolang is probably a good contender for business logic code where Java is widely used, but I feel ecosystem (libs, integrations) is not comparable to Java, so you take some risks while choosing golang.		riku_iki
37539463	11.736409	-7.0295887	comment	3.0	13.0	1694903578	8.845283	I've never been a big fan of dependency injection.  It solves a problem with unit testing in Java, sure, but the reality is that Java could have done some nifty things to help alleviate that as well.		bb88
37539720	12.2497635	-7.532052	comment	3.0	16.0	1694905614	-11.371011	As someone writing code on Java since v1.0 and making tech strategy decisions on the C-level, I consider myself sane and experienced enough to say that Java is something that will do the job well and ...		ivan_gammel
37540685	12.079671	-7.2118673	comment	3.0	21.5	1694915341	7.1563315	> Is functional style dead?No, the javascript ecosystem is just full of people who have taken some pattern that occurs frequently in functional programming, such as currying, to itself be functional p...		mostlylurks
37541028	11.651463	-7.958645	comment	3.0	14.0	1694919069	10.256442	Go gives you the illusion of simplicity because it gets rid of guard rails and error checking. If you remove all error checking, of course your code is going to look a lot simpler. It's also going to ...		hota_mazi
37541235	11.603032	-7.827001	comment	3.0	11.5	1694921393	10.24651	"Afaik, no language as great of exceptional handling as Java.
I prefer Go but I have to admit, Java's checked exception handling is amazing."		guideamigo_com
37544460	11.719446	-7.831359	comment	3.0	13.5	1694954604	10.077348	I did. Did Go professionally for ~5 years and went to JVM.Go is easy, but it's surface level easy. Building and maintaining large applications in Go if you don't have a huge team is a giant pain.JVM (...		jpgvm
37531824	11.607513	-7.894248	story	3.0	29.0	1694835431	10.208745	Solving the Expression Problem in Go	https://www.tzcl.me/posts/expression-problem/	tzcl
37575845	11.656249	-7.9777055	comment	3.0	37.5	1695154361	10.236483	Thank you Go team and project!Go continues to be my favorite language and experience to build and maintain in.They got so much right from the start, then have managed to make consistent well reasoned,...		nzoschke
37577187	11.592946	-7.875696	comment	3.0	14.0	1695159674	10.220537	Ehhh, I see absolutely no evidence that the Go developers were particularly aware of theory. It really feels more like they just were used to thinking in terms of C, and built a language which is kind...		TwentyPosts
35146049	11.67784	-7.2421837	comment	3.0	17.0	1678757058	-8.804555	This is exactly what I think too. Sum types are so powerful, I feel a lot safer in Python + mypy with sum types (`from typing import Union`) than anything with C++ [1] even though C++ has a significan...		gnulinux
35106340	11.75295	-7.2765093	story	3.0	96.0	1678520711	7.291658	The semantics of a simple functional language	https://lawrencecpaulson.github.io/2023/03/08/Fun_Semantics.html	matt_d
35125828	11.622511	-7.274532	story	3.0	97.0	1678652960	-8.774953	John's Lambda Calculus and Combinatory Logic Playground	https://tromp.github.io/cl/cl.html	mmphosis
29017321	11.668074	-7.322598	comment	3.0	13.5	1635360152	9.156566	This is the crux of the issue but it's not explained further:> I wanted to be able to use asynchronous programming because for the type of work I do (a lot of making APIs that talk to other services w...		bestcoder69
29021288	11.650698	-7.9328837	comment	3.0	27.5	1635384845	10.219023	Very reasonable caveats for a feature as big as generics.Personally, I'm super excited for the potential generics has to make error handling in Go less noisy, so I'll be attempting to use it ASAP.		dgunay
29022870	11.652109	-7.9676495	comment	3.0	17.0	1635400787	10.225329	And so Go is one step closer to being a real programming language in many people's eyes.		awestroke
29035162	12.294517	-7.5103555	comment	3.0	13.0	1635481447	12.834342	I skimmed through the blog post, and it seems to me that they are not claiming they invented something new, just that they are adding this to Swift language.(Distributed) actor model is nothing new, b...		watermelon0
29050618	11.669126	-7.2875915	comment	3.0	25.5	1635615179	9.1744375	- Async Ruby is much more performant than threads. There are less context switches, enabled by the event reactor. The performance benefits are visible in simple scenarios like making a thousand HTTP r...		brunosutic
29060690	11.867146	-7.2662024	comment	3.0	11.0	1635716186	3.7796452	Why are we trying to “-fy” everything?		2muchcoffeeman
29049627	11.725733	-7.361524	story	3.0	68.0	1635608354	-8.748302	Beyond inductive datatypes: exploring Self types	https://github.com/kind-lang/Kind/blob/master/blog/1-beyond-inductive-datatypes.md	danny00
29121208	11.991831	-7.6195393	comment	3.0	26.0	1636128373	10.37308	"> Yet another confirmation that pure functional langs work great when its just one or two buddies working on a ""pure programming"" project, but evidence remains scant of their utility beyond that.Evide..."		mjh2539
29124419	11.992604	-7.757587	comment	3.0	13.0	1636144324	10.428566	The main reason for that phenomenon is it's more personally advantageous to rewrite than to learn Haskell and extend what's there.Haskell advocate quits? Blame them for selfishly using a toy language ...		whateveracct
29141820	12.225708	-7.5690975	comment	3.0	12.5	1636308176	11.92196	It’s a shame that the Play framework is being abandoned. v1 had a lot of great ideas, but v2 kind of jumped off the cliff into Scala lala-land, where it got lost in the weeds. It never really recovere...		nekitamo
29141708	12.305868	-7.4475117	comment	3.0	10.5	1636307583	12.660478	Biggest problem I had with Akka was that it was that it worked better with Scala than Java. As Java recently has re-taken most of Scala's momentum its a bit awkward fit.		zz865
29179281	11.602559	-7.917895	comment	3.0	34.0	1636572264	10.180131	">  I'd spend hours condensing 10 lines of perfectly working code into 1 line of the most concise text possibleWhich is also the hardest part of convincing people to use Go for me: ""Why can't I just .m..."		new_stranger
29179629	11.614807	-7.9050603	comment	3.0	13.0	1636573671	10.164	To me, the greatest advantage of Go is the build time, which is almost instant. So you get the joy of programming like in Python/Js, being able to test very quickly your code, without having to deal w...		kryptonomist
29179738	11.637369	-7.939426	comment	3.0	13.5	1636574098	10.201023	Coming from other languages, the most interesting thing about Go for me (in my limited experience of a few other languages) was all those things they left out:No inheritance - no more digging through ...		grey-area
29195190	11.991245	-7.2116346	comment	3.0	11.5	1636678745	9.111417	But what does ‘#await someFetch’ actually do? The thing I like most about react is that it’s just executing plain Javascript most of the time.		Aeolun
29209295	11.603443	-7.8111863	comment	3.0	15.5	1636806419	9.8946495	This may be a problem with async generally unless the language is designed specifically around async like Go is, which some profound tradeoffs to make it happen.  (not criticizing that I think Go did a great job)		gameswithgo
29149952	11.973771	-7.7146635	story	3.0	37.0	1636383755	10.409141	Awesome-Haskell	https://github.com/krispo/awesome-haskell	faustiandeals
29192444	12.219397	-7.622534	story	3.0	5.0	1636660952	11.907328	Whenever I'm bored, I try to understand flatMap		cmollis
29208315	12.121629	-7.5132437	story	3.0	50.0	1636791636	-10.581416	Embedding the F# Compiler	https://queil.net/2021/05/embedding-fsharp-compiler/	kkdaemas
29225473	12.279944	-7.3019886	comment	3.0	13.5	1636968646	7.0834713	According to you, what was lost?I've never fully experienced Smalltalk, but the few posts that came by on HN always fascinated me, since there's a whole interactivity element to it. And I've noticed when it comes to programming, I like interactivity.		mettamage
29225486	12.248178	-7.2957664	comment	3.0	19.5	1636968792	7.1360173	To me the simplest explanation is that Smalltalk is just too concept-heavy for the average developer, just like Lisp is.Yes, C++ could be said to be much more concept-heavy but there is a difference: ...		praptak
29232579	11.600582	-7.7825513	comment	3.0	11.5	1637009661	10.144343	"The type sets proposal for Go has already been accepted as a clarification to the generics proposal [0]:    type SignedInteger interface {
        ~int | ~int8 | ~int16 | ~int32 | ~int64
    }

Interf..."		ibraheemdev
29236880	11.622255	-7.8924403	comment	3.0	21.5	1637037095	10.158993	Am I understanding correctly that this is basically goroutines for Java?		vlovich123
29237273	12.234991	-7.523803	comment	3.0	15.0	1637041149	-11.344576	If it's added to the VM then won't that allow languages like Kotlin to add support?		foota
29259383	11.77565	-7.1904926	comment	3.0	12.5	1637186239	-10.14971	This is just personal preference. I find lisp impenetrable and parenthetical soup. But I can read pipelined function calls (in e.g. OCaml or Haskell) easily.		voxl
29273824	12.461924	-7.134836	comment	3.0	10.5	1637296023	12.385247	Don't get me wrong.  I'm happy to see type declaration support in Ruby and have sorely missed it working on long-lived Rails codebases.  But it is pretty funny that after years of rah-rah about how st...		emodendroket
29304524	11.808418	-7.2332	comment	3.0	11.5	1637573462	-9.038068	What always annoys me to no end is when people complain that python type hints are not runtime enforced, when this is quite normal for most statically typed languages: C++, go, rust.Python already had...		zohch
29304860	11.848371	-7.1780157	comment	3.0	11.0	1637576456	-9.07115	Are there any code editors/editor plugins that make effective use of python type hints? The python plugins for visual studio code didn't make much use of the type hints, last time that I checked. i was hoping that type hints would be used for code completion, but that doesn't seem to be the case.		MichaelMoser123
29243644	11.674586	-7.9543056	story	3.0	16.0	1637084570	10.204812	Improving the code from the official Go RESTful API tutorial	https://benhoyt.com/writings/web-service-stdlib/	benhoyt
29322114	11.655675	-7.023274	comment	3.0	16.0	1637695559	8.509171	There's still a memory tradeoff, some due to GC, some due to Java (lots of runtime reflection...). Guessing 2-4x.		silon42
29330795	11.658081	-7.201222	comment	3.0	14.5	1637767277	8.946291	Shame this doesn't show the CMS collector, which was present in 8 and 11, but removed before 17. CMS was the go-to option for low-latency collection for a long time, so it would be good to see how it ...		twic
29351066	11.630587	-7.1749153	comment	3.0	11.5	1637940555	9.075545	While I agree that a lot of loops could be better implemented as a map, filter or similar construct, there's still many loops where writing it as a loop makes it more clear what's going on.For example...		magicalhippo
29355449	12.234448	-7.5091276	comment	3.0	14.0	1637969894	-11.363206	You’re going to love Kotlin, it really is a fantastic pragmatic language.You’re also likely to discover that while C# the language is amazing, the CLR runtime looks frankly minor league when compared to the JVM.		dpratt
29357895	11.625195	-7.1301703	comment	3.0	13.0	1637993068	9.356876	I don't understand - what is wrong with condensing the python representation  `sum_of_lambda_for_each_psi` to `Σλ∀φ`?  It seems that 4 symbols is much quicker and easier to read than a slew of snake case stuff.		chaxor
29388828	11.957905	-7.757645	comment	3.0	12.0	1638245104	10.400062	>Build times in Haskell were bad enoughthis one's very true. Every time I try to build something in Haskell on my laptop it feels like we're moving closer to the heat death of the universe. Is there some good read on how/why Haskell compilation times are so long compared to some other languages?		Barrin92
29388508	11.75596	-7.2623687	comment	3.0	10.5	1638242020	7.270007	"This part...> for the high frame-rate, heavy animations this puts a lot of pressure on CPU and memory...does seem to suggest that the ""garbage multiplier"" effect of immutability is an ill fit for appl..."		notacoward
29431232	11.926865	-7.226436	comment	3.0	10.5	1638546112	-1.3973887	"> ""Data abstraction is impossible.""That's an amazing point. It explains where the object oriented proponents of decades past went wrong in thinking there would be vendors for ""Car"" or ""Employee"" objects."		jrumbut
29453939	11.865416	-7.4076157	comment	3.0	19.5	1638742920	7.239763	I really think this is where pure FP shines.If you look at the architecture of something like Apache Beam, while you describe your computations in a language like Java or Python, you're really using a...		runT1ME
29454352	11.735468	-7.26494	comment	3.0	16.5	1638746494	-5.7515755	Besides performance, what other cons exists for immutable data structures in a single standalone system?		Scarbutt
29506318	12.1945915	-7.604487	comment	3.0	10.5	1639109695	11.929951	I completely agree with their pragmatic approach to Scala. Scala is a very powerful language, and you can do super crazy stuff. My approach to writing Scala code is similar:1. Write the code like a be...		wiradikusuma
29508157	12.220122	-7.625789	comment	3.0	11.0	1639129382	11.940645	> Scala offers you many design choices that work well in skilled handsI agree that Scala works well in some skilled hands (see Li's libs), but the people that write the most terrible Scala programs ac...		MrPowers
29514691	11.61218	-7.8645577	comment	3.0	11.0	1639165926	10.076095	"   What I really missed was generic map-function-over-slice, which could be
   handled by adding a much narrower feature.
   
   If one graded possible Go point extensions by a figure of merit in whic..."		nemo1618
29557111	11.634491	-7.940834	comment	3.0	91.0	1639513671	10.229899	It's a type alias, introduced for generics. By the way, Go 1.18 Beta 1 is released (with generics): https://groups.google.com/g/golang-announce/c/eAjK4Oezs_A		mseepgood
29557351	11.677285	-7.9720917	comment	3.0	53.5	1639514611	10.231008	In semantic versioning, going from 1.X to 2.X is only indicated when there are incompatible API changes. Adding generics doesn’t break compatibility with preexisting Go code, so it’s unnecessary to increment the major version.		philwelch
29557653	11.659731	-7.9750957	comment	3.0	17.5	1639515651	10.231475	So now that go has generics and modules, is there an up-to-date intro for writing cutting-edge Go code for people who are already pretty familiar with the older styles?		maxk42
29560165	11.854783	-7.6864853	comment	3.0	14.5	1639527672	10.229643	r/Haskell/Lisp -> same problemsThe functional language conceit exists and its a problem.It's interesting that Go is mentioned as a target of the conceit. Well, there is a LOT of important software in ...		AtlasBarfed
29561266	11.650156	-7.955275	comment	3.0	25.0	1639534873	10.229712	Go is the most readable language I’ve used in terms of understanding other peoples complex code bases, and I’ve been doing this a long time and have used a lot of languages.Edit: It’s also one of the most approachable languages.		jshen
29565536	11.761555	-7.2504363	comment	3.0	14.0	1639574623	-8.061022	This caveat exists in every language that supports closures, afaict.		amelius
29582987	11.648569	-7.889553	comment	3.0	10.5	1639684294	10.1460905	As someone who's been writing Go full-time for only about 8 months now, I've repeatedly been frustrated with the lack of generics while building web APIs. For example, the Go GraphQL ecosystem is a bi...		johnmaguire
29583053	11.606395	-7.9271517	comment	3.0	13.0	1639684552	10.220657	Agreed.I wrote a bunch of Rust, Scala, Haskell, but I still greatly prefer Go, even without generics.I am very happy with the generic container libraries I'll get with generics, but I hope people won'...		cube2222
29586687	11.597031	-7.620928	comment	3.0	10.5	1639705309	10.086607	"I did AoC 2021 through Day 7 in Python, before switching to Go (for personal learning, can't remember if times listed below were with ""go run"" or from running after ""go build""). D7 actually in both, t..."		mroche
29603219	12.31633	-7.02367	comment	3.0	34.5	1639820670	13.158523	I've been maintaining a large perl codebase that I and some friends wrote for 20 years now. It sure has some cruft, but I am often blown away by how massively productive I am in it. And in 20 years, P...		yobert
29605018	12.272202	-7.289998	comment	3.0	12.0	1639840371	7.142581	I think Smalltalk's demise was really from the fact that it was a entire environment that had to live in a virtual machine.Especially in the 70s and 80s, that was a huge performance barrier.Contrast t...		fault1
29605786	12.2827425	-7.3095274	comment	3.0	15.5	1639845126	7.0426717	This seems like one of those spots where Smalltalk is a victim of cultural changes that happened around it.25 years ago, a tight integration between the language and the IDE like that would have sound...		mumblemumble
29607530	12.131098	-7.857443	comment	3.0	11.5	1639854647	-3.2438216	"Where did you read ""category theory"" in that article?I'm not familiar with Woof but it looks like an attempt at writing a pure logging lib. What is wrong with that?"		the_af
29608125	12.252224	-7.262945	comment	3.0	15.5	1639858635	-0.16674037	Smalltalk is IMO super readable, it's just not familiar or standard. To me, unreadable languages are languages that rely heavily on symbols. The obvious extremes would be perl or APL. In those, if you...		overgard
29626986	12.05018	-7.3001833	comment	3.0	15.5	1640019258	6.6763744	"Funny, I call it ""architecture without the astronautics"", because you get to express architecture in a very simple and straightforward manner.http://objective.st/Sample scripts:https://github.com/mpw/Objective-Smalltalk/tree/master/scrip..."		mpweiher
29622815	12.258628	-7.4733706	story	3.0	10.0	1639992059	-10.613866	Ask HN: Have you worked on F# web apps in production?		xupybd
29631374	11.742228	-7.362262	comment	3.0	12.0	1640039934	7.860498	Strict purely functional languages will sometimes provably introduce log n slowdown that can't be amortized away. This is certainly a trade-off.This doesn't happen when you've got mutation or laziness.One language that I'm aware which makes this tradeoff is Erlang.		IsTom
29640367	12.11064	-7.2485538	comment	3.0	11.5	1640111007	8.538515	"Something I've had trouble wrapping my head around with ECS -- how does it fundamentally differ from an in memory relational database?They describe a ""sparse set"" designed for sequential identifiers -- how does that compare to something like an in memory b+ tree?"		chrsig
29652656	11.627641	-7.3199477	comment	3.0	12.5	1640195232	-7.67242	I wouldn't call it lengthy, but if anyone is wondering, the proposal points out that parametrized methods don't have an obvious behavior _inside interfaces_. No mention of why they left them out in non-interface types.		kubb
29660263	11.650561	-7.2898383	comment	3.0	11.0	1640252847	-8.742895	Yes pretty much like taking a statically typed language, making compile time type annotations optional and claiming victory that it's easier for beginners. Now they would get runtime exceptions instead.		hawk_
29669321	12.234213	-7.52111	comment	3.0	10.5	1640312797	-11.375928	Yes. Kotlin is good, but there is a lot of Java out there that needs to be supported.Have you experimented with converting entire projects of Java to Kotlin?		bluejekyll
29677721	11.730048	-7.0870123	comment	3.0	10.5	1640379897	-8.885025	Not a python guy, so confused as to why a thing called namedtuple behaves like dataclasses, what are their different usecases?		nsonha
29679292	11.814117	-7.061564	comment	3.0	11.0	1640393841	-9.035348	"As soon as I opened the article I pressed Cmd+F and searched for ""dataclasses"".This article was correct and addressed a very real need in Python programming—for year 2016. By now it is obsolete and today's standard library module `dataclasses` does all of that and more."		hamstergene
29640873	12.134959	-7.8756137	story	3.0	30.0	1640113917	-3.238899	Crash Course Category Theory – C3T	https://discourse.julialang.org/t/ann-c3t-crash-course-category-theory/73392	thecedarprince
35905098	11.923652	-7.416821	comment	3.0	11.5	1683824999	7.099547	I'm so sick of these paradigm religious wars. There's nothing wrong with object oriented programming. There's nothing wrong with functional, either. You use them for different purposes. These people l...		moron4hire
35920881	12.3555155	-7.2738605	comment	3.0	11.5	1683918912	7.2283096	"It seems to work. I found Pharo 10 on disk, running it like this:    -▶ ~/portless/pharolauncher/pharo-vm/pharo --headless Pharo10-SNAPSHOT-64bit-0618067.image a.st

with a.st:    Object subclass: #Be..."		klibertp
35926059	11.762394	-7.039077	comment	3.0	11.0	1683958242	5.3215284	Totally. Or co workers. My best source of advice refrains from pointing out a strongly typed functional language would solve most of my problems and helps the specific python syntactic burden I have r...		ggm
35927398	11.998246	-7.651152	comment	3.0	10.5	1683977644	11.874281	Scala? It has access to every JVM library, and that may well be two orders of magnitude larger than Rust’s.		kaba0
35927906	12.170473	-7.0430374	comment	3.0	13.0	1683982382	-10.444623	This is really impressive work, which can benefit other large JS tools.I realise this is sort of a dead horse, but rewriting the Typescript checker in Rust would not be an impossible task for a team a...		muglug
35928766	12.494766	-7.079616	comment	3.0	14.0	1683988191	12.377601	There’s a lot of value in having decisions made for you ahead of time. Nonetheless, decision fatigue is one of the things that annoyed me most about Rails after working in it for the first few years o...		philwelch
35961821	11.851094	-7.1913776	comment	3.0	11.0	1684244705	8.645946	> Don't forget all the getters and setters merely updating/reading a variable> and in the most verbose/inflexible ways possibleIt's actually extra flexibility meant for two things: being able to overr...		Izkata
35965864	11.619251	-7.9593353	comment	3.0	20.5	1684262293	10.204921	It's why I dove into Go.This definitely took me from the 'eh, kinda cool project' to 'I cant wait to try this out immediately' camp.The binaries are pretty huge, hoping they can bring that down in time.		silisili
35969088	11.650319	-7.9253087	comment	3.0	18.5	1684279113	10.218934	never mind than MANY people dont need generics, and that generics have a significant compilation and runtime cost, in terms of time and memory. who cares right?and never mind that Go has had generics ...		2h
36020374	11.6008	-7.922155	comment	3.0	12.5	1684673397	10.246533	"Some pros:* Go is ""simple"" (the language has a ""small surface area"", if you will)* Go has a broad and deep standard library that is generally well-documented* Go comes with a reasonably good general-p..."		sidlls
36051632	11.614101	-7.9723535	story	3.0	9.0	1684880790	10.21274	Ask HN: What are some Golang tools you can't live without?		KomoD
36022589	11.720414	-7.301592	story	3.0	34.0	1684687110	9.158918	You Keep Using That Word: Asynchronous and Interprocess Comms	https://www.youtube.com/watch?v=6FOCNf06lqY	self
36023267	11.973596	-7.735924	story	3.0	62.0	1684691897	10.424446	A semester of Haskell-language-server: an internship report	https://www.tweag.io/blog/2023-01-31-hls-internship-report/	runeks
36079013	11.751932	-7.0233755	comment	3.0	13.0	1685067918	8.007328	Something simple as that should not require tons of RAM and CPU because of Java. Writing it in natively compiled language would produce a lean product - Rust, Go, etc.		xvilka
36091531	12.0878315	-7.8261156	comment	3.0	13.0	1685154687	10.451406	Whenever I see a Standard ML article/paper, it always reminds me that I still need to learn OCaml.  Not that one is better than the other, just that I've not gotten around to learning OCaml yet.		AdieuToLogic
36119934	12.227651	-7.0326176	comment	3.0	11.5	1685407732	13.185735	Sigils in Perl were awful. They didn't behave concretely. Sometimes it was sort of a type annotation sometimes they were a weird incantation.Things like implicit scalar conversion  @foods = qw(burgers...		xupybd
36120120	12.308797	-7.0775676	comment	3.0	11.0	1685409436	13.136742	> So while sigils have a lot of company in this, they are also a flat zero for me on this scale. Never ever missed them. I did a decade+ of Perl as my main language, so it's not for lack of exposure.I...		derefr
36126685	12.251722	-7.5666056	comment	3.0	11.0	1685463547	-11.418246	> not much momentumScala? Kotlin?To be fair these came into play WAY after the JVM		inadequatespace
36133772	12.1265135	-7.556739	comment	3.0	27.5	1685499855	-10.583575	I think F# programmers lack that gamut because they get comfortable in the eager execution type safe world and stay there with no particular reason to learn dynamic programming techniques. There is al...		cjbgkagh
36134372	11.7961235	-7.3326354	comment	3.0	17.0	1685506343	4.0408335	I'm a data engineer, it's a fairly new role so it's not well defined yet, but most data engineers write data pipelines to ingest data into a data warehouse and then transform it for the business to us...		Hasnep
36134672	12.147355	-7.5133886	comment	3.0	31.5	1685509754	-10.6564245	F# always struck me as one of the most terribly underrated languages. I'm a lover of MLs in general, but F# lands on one of the sweet spots in PL space with ample expressive power without being prone ...		lambdaxymox
36196223	11.730906	-7.2915087	comment	3.0	12.0	1685973424	9.178383	I hate async as well. Developers should have learned about communicating sequential processes and blocking queues and none of that would have been necessary. It creates a weird divide in every languag...		fzeindl
36225740	12.043777	-7.2959194	comment	3.0	11.5	1686139386	8.189083	Remember: game devs don’t create intelligent game entities; instead they create the illusion of intelligence. Game dev is a big smoke an mirrors charade.Any system that could be queried needs to be bu...		sovietmudkipz
36231211	11.718258	-7.299264	comment	3.0	16.5	1686162517	-4.9061856	"Can someone define ""val""? I don't think that I've seen that, before."		steinbring
36254040	11.825672	-7.3814635	comment	3.0	12.5	1686291903	-8.790191	I’d love to be able to do dependent types in TS. Does this make that possible?		davedx
36284527	12.144176	-7.5726094	comment	3.0	14.0	1686510303	-11.402971	I can give perspective as someone who enjoys modern Java, writes Kotlin at their dayjob (and loves it), and also likes Scala 3.Here are the things that if Java had, I probably wouldn't see a reason fo...		gavinray
36285934	12.205979	-7.6132474	comment	3.0	10.5	1686519131	11.925511	I'm happy to take a crack at Go and C++, but coming from Java it is totally impossible to decipher wtf is going on in Scala. Kotlin is better, but still pretty awful.Also, devs who use Go and C++ usua...		jdm2212
36315823	11.930908	-7.442229	comment	3.0	15.5	1686685307	7.1625037	> FP is much simpler to learn, so much better suited for newcomers.I can't see how this is the case. Assignment is just one tiny piece of learning how to program, and is almost never a pain point afte...		whateverman23
36329208	11.807316	-7.0815434	comment	3.0	20.0	1686763131	-9.069798	This is already handled with dataclasseshttps://docs.python.org/3/library/dataclasses.html#module-da.....and the syntax is way better, handling more members, with room to document, handling methods, and not conflicting with Mojo or stdlib		tln
36371389	11.6175165	-7.908672	comment	3.0	17.5	1687017671	10.2052555	Go and it’s standard library. ‘Elegant’ is pretty subjective, but it’s a treasure trove of learning how things work under the hood. I’ve learned loads about networking, compression, encryption and more by browsing through it, because the code is super easy to read and understand.		cejast
36384135	11.636763	-7.890256	comment	3.0	12.0	1687120192	10.185174	I'm not a big fan of context variables: they're basically a super clunky kind of goroutine-local global variable, with all the problems you might get with these kinds of mutable global variables. I wo...		vore
36399082	11.925843	-7.6889505	comment	3.0	11.5	1687228646	10.381585	While this is a cool demo, I don't really like it even as a Haskell enthusiast. Anything that relies on compiler's eta reduction/expansion rules for performance is too subtle for my taste. I'd personally argue that more explicit code could be clearer.		kccqzy
36428762	11.8553095	-7.3522406	comment	3.0	11.0	1687416385	6.966246	"Not true.The basic idea behind ""Inheritance"" is simple and can be understood by all programmers. Its realization through various language features and their combinations is what makes it somewhat conf..."		rramadass
36437765	11.663292	-7.918665	comment	3.0	10.5	1687463336	-7.6626916	"OneDev: https://github.com/theonedev/onedevGogs:
https://github.com/gogs/gogs"		melony
36394755	11.819979	-7.3843684	story	3.0	40.0	1687199047	8.723745	Effekt: Lightweight Effect Polymorphism for Handlers (2020) [pdf]	https://se.cs.uni-tuebingen.de/publications/brachthaeuser20effekt.pdf	luu
36452483	11.655572	-7.9667244	story	3.0	30.0	1687556283	10.366595	How Jane Street is making OCaml the new Rust	https://www.efinancialcareers.com/news/2023/06/jane-street-programming-language	edwintorok
36500850	11.8507595	-7.2488523	comment	3.0	11.5	1687913512	6.488548	In my view, the root of the problem is Object Oriented Programming itself.The older I get the more I like having having separate data and functions.Serialization is easier, network communication is ea...		jay_kyburz
36509726	12.070621	-7.312814	comment	3.0	12.0	1687973487	0.7885085	For similarly silly ideas: see these articleshttps://en.wikipedia.org/wiki/Object-oriented_ontologyhttps://en.wikipedia.org/wiki/Speculative_realism		Der_Einzige
36539638	11.637342	-7.776602	comment	3.0	11.5	1688148885	10.099475	@WestCoastJustinI've been really wanting to use Go, but as you say, much of the community is Python due to the data analysis strengths. To the detriment of the other things Python does do poorly.Can y...		czbond
36542660	11.636831	-7.9425774	comment	3.0	10.5	1688160955	10.240603	Pretty funny to say package management is table stakes and use go as an example. For a long time they had nothing, then hacky workarounds, and now they have a first party hacky workaround		throwboatyface
25767972	11.750132	-7.033357	comment	3.0	10.5	1610572084	7.8890204	"Re: Pipe operatorTheir argument for replacing the pipe operator is to do this instead:foo(X) ->    final_function(maybe_function(X)).

into this:foo(X) ->    Maybe = maybe_function(X),

    final_func..."		honkycat
25776088	12.322817	-7.0709133	comment	3.0	13.5	1610631387	13.172456	I'm so glad they renamed Perl 6, having it dangling for decades like a Sword of Damocles hurt Perl more than anything else could. At least both languages are now able to progress in their separated ways, and I must say Raku is a really pleasant language, and a joy to use.		qalmakka
25797357	11.610184	-7.05397	comment	3.0	15.5	1610749564	10.110993	I've had the opposite experience. Teaching my 9 year old son Lua has been kind of painful, in large part because of language decisions that make learning things harder for beginners.For example, did y...		TulliusCicero
25798739	11.62628	-7.9010296	comment	3.0	11.5	1610758256	10.189108	Like Java, Go is a fundamentally broken language and its mistakes, starting from not having sum/option/result types from day 1, make it impossible to fix.edit to respond: as the commenter below pointe...		damnyou
25798761	11.643149	-7.9721813	comment	3.0	14.0	1610758422	10.229863	Yes, Go is a fundamentally broken language too. As is C++, as is C. Sum types are the absolute bare minimum a language must have for me to not consider it broken beyond hope.Go in particular is really...		damnyou
25798823	11.834791	-7.2855167	comment	3.0	26.5	1610759101	-5.7586193	More accurately, imagine how much better the world would be right now if the Java community had been interested in dealing with the many usability and performance problems encouraging developers to mo...		acdha
25799679	11.629692	-7.95548	comment	3.0	12.5	1610766821	10.218247	One of the things I really hate about golang is the idiomatic usage of single-letter variables. Other than that, and a couple of other quirks, it’s good.		franklyt
25799808	11.627128	-7.9204984	comment	3.0	11.0	1610768313	10.212389	Go still has a few annoyances: error handling and casting things to/from interface{} are the most painful of them.Certainly, it's still ways better than C. But the resulting boilerplate and copy-paste...		nine_k
25831125	11.604758	-7.8750653	comment	3.0	14.0	1611044557	10.078226	I would start n goroutines select'ing on the same bounded channel, which I find much simpler... or did I miss something?		weddpros
25820741	11.886177	-7.1295896	story	3.0	58.0	1610970136	-3.2139282	Categories of Nets	https://johncarlosbaez.wordpress.com/2021/01/17/categories-of-nets/	chmaynard
25883521	12.050753	-7.166935	comment	3.0	13.5	1611419486	-13.927351	Is anyone not using Lombok these days? I haven’t written a getter or a setter in years.		nsxwolf
25884700	11.7900095	-7.1839876	comment	3.0	10.5	1611425693	9.129381	That's what msync() is for.		eqvinox
25917297	11.901953	-7.1465087	comment	3.0	12.5	1611676825	-9.306799	I sure hope things continue to progress, but right now, having come from TypeScript, Python is quite a ways behind when it comes to static types. A few major differences:- Library support for static t...		brundolf
25918321	11.760862	-7.3273187	comment	3.0	10.5	1611680907	-8.947568	Everything comes with trade offs. But I’d argue that one of the primary reasons folks avoid types is that it requires additional learning.I’m speculating here, but as a software engineer who’s dealt w...		bluejekyll
25856360	11.991595	-7.751292	story	3.0	19.0	1611213200	10.427592	Choosing Haskell isn’t a stand-in for good software design	https://ozataman.medium.com/choosing-haskell-isnt-a-stand-in-for-good-software-design-7d893882f963	tutfbhuf
25870695	11.664618	-7.225908	story	3.0	83.0	1611314812	-6.872858	Programming Language Foundations in Agda	https://plfa.github.io/	blewboarwastake
25925221	11.84032	-7.1755176	comment	3.0	10.5	1611731592	-9.068919	Why would you add type checking to Python! Using another language with static typing would be the solution. It’s not like the browser where you have to use Javascript so you add another layer to your toolchain.		parham
25935902	11.81811	-7.2538447	comment	3.0	11.0	1611791697	7.1709456	How do you manage to not have global objects?FP and imperative handle data without huge amounts of global state the same way. By structuring your code properly.Per your example, your Client instance s...		lostcolony
25936528	11.928337	-7.383894	comment	3.0	28.5	1611794749	7.003556	"My problem with these arguments is that its meaningless, if this ""bad OO"" (or ""bad <insert paradigm>"") is what most developers write.Its a big problem I have with ORM's. Every time a discussion about ..."		dkersten
25957666	11.857462	-7.6278515	comment	3.0	12.0	1611931268	-6.652852	"For anyone wondering ""Why Pony?"" - they have a section called just that:https://www.ponylang.io/discover/#why-pony"		sbarre
25958965	11.877588	-7.593734	comment	3.0	28.0	1611937352	12.791942	As a regular Pony user, and coding seriously in it for a few months, this is what I think;I rather fight the Reference Capabilities (easily the hardest aspect of Pony and probably the number one reaso...		niclash
25974932	11.800169	-7.104252	comment	3.0	15.5	1612057365	-8.982114	> Many have imagined and built valuable stuff in interpreted, dynamically typed languages before you, by being more focused on overall structure and making sure it's strict and resilient. One really d...		mikevm
25979814	11.80723	-7.381366	comment	3.0	17.0	1612109620	-9.014894	Honestly I’ve seen just as many disastrous codebases written in highly structured, statically typed languages. Any language with intrinsically interesting features tends to attract inexperienced (or j...		cle
25986592	12.130245	-7.517127	comment	3.0	19.0	1612166803	-10.5888405	As a .NET developer I don't see any reason to use F# professionally. C#/CPP are tools just like a hammer, F# is a different hammer, it doesn't seem to offer advantages in my field other than being different...		catmanjan
25988700	11.895088	-7.4583197	comment	3.0	13.5	1612187854	2.1846273	"I am really enjoying lean 3 as a theorem prover; lean 4 as a programming language is a really intriguing/enticing prospect. The ""functional but in place"" paradigm is something quite new, as far as I c..."		tomhoule
26012361	12.103142	-7.852837	comment	3.0	11.5	1612347977	-3.2346363	Not addressing your question, but the Yoneda Lemma is kind of a charlatan.On first reading, it seems magical and deep, but once you grok the proof, it feels like a relatively trivial observation. The ...		xelxebar
26019350	11.667445	-7.6655993	comment	3.0	11.0	1612387663	10.15532	"I don't know why ""having generics"" is regarded as an end unto itself, or even a particularly important feature. The more experienced I've become as a developer, the more I realize that the things that..."		throwaway894345
26025311	11.604706	-7.49761	comment	3.0	14.0	1612446955	10.096145	My takeaway from the article is that you almost always want a proper sum (discriminated union) type, but if you find yourself in a world without (hello, Java), here's a way to encode them precisely. A...		Twisol
26031119	12.148601	-7.5957837	comment	3.0	12.0	1612481980	11.889832	"Last time I tried scala it took forever to build a relatively small project and the compiler was a heavyweight ram gobbler, which translated to shitty IDE performance as well.
Now granted last time I ..."		reader_mode
26032243	11.8801155	-7.220764	comment	3.0	12.0	1612490897	-9.016223	Possibly dumb question, but why do type hints for a leetcode problem?		TameAntelope
26045673	11.645402	-7.349361	comment	3.0	14.0	1612608230	-8.732183	How would a type check prevent this?		dsego
26046544	11.610075	-7.0162535	comment	3.0	12.0	1612620313	-7.0200653	"First of all, I _can_ demonstrate code that will work when using ""add"" but explodes when using the changed version - even with your restriction of not having a ""multiplier"" property.However, let's kee..."		valenterry
26063831	11.702794	-7.685942	comment	3.0	10.5	1612789104	-7.018605	"I develop a super fast JSON library ( https://github.com/goccy/go-json ) . 
It is drop-in replacement of encoding/json.This library is available by simply replacing the import statement.
It's more compatible and much faster than json-iterator/go.Please give me your feedback ! Thanks !"		goccy
26079467	11.596057	-7.884091	comment	3.0	12.5	1612888587	10.184492	For an example with Go generation and using iota see stringer[0] and Rob Pike's related blog post[1][0] https://pkg.go.dev/golang.org/x/tools/cmd/stringer[1] https://blog.golang.org/generate		leetrout
26082247	11.603017	-7.0245876	comment	3.0	17.5	1612904000	6.2443748	That's how structural pattern matching works in ML-like languages, where it's been in use for 40+ years.		rwmj
26087725	11.656944	-7.97036	comment	3.0	11.0	1612955114	10.263446	Or the URL-based model used by Go.		Aissen
26078863	12.288811	-7.310085	story	3.0	95.0	1612885865	7.0725565	Dr. Geo: Interactive Geometry in Smalltalk	http://www.drgeo.eu/	cableclasper
26101911	12.230045	-7.6404266	comment	3.0	14.5	1613054527	11.92195	Scala is just an amazing language. I'm very happy that the worst of the 'Scala as a worse Haskell' days is over and that the Scala community is finding it's own programming style.I remember years ago ...		esarbe
26102423	12.244146	-7.6335816	comment	3.0	12.0	1613057124	11.923873	I heard there was some sort of schism between John De Goes and Typelevel a while back? Does that still affect the Scala fp community?		ibraheemdev
26111191	11.803491	-7.256428	comment	3.0	12.5	1613110789	9.153201	"> So involving ""async"" is totally the wrong tool for the job.Sadly with so many things having gone async-first (or only) it’s become difficult not to end up with an async runtime anyway, or not be for..."		masklinn
26111368	11.631983	-7.2927866	comment	3.0	10.5	1613114023	9.110644	I’d happily take an async-by-default world over a world where some APIs only exist through blocking calls. A classically threaded program can easily block on a future, but wrapping a blocking call in an otherwise asynchronous program is complicated, expensive and error prone work.		josephg
26112647	11.754486	-7.2203617	comment	3.0	10.5	1613130354	9.189305	I've been using C# for around 20 years, basically since it was first released.I never personally had any issue with working with threads and locks, finding it simple enough to reason about them, thoug...		GordonS
26117960	11.788591	-7.161356	comment	3.0	21.5	1613160376	-8.99162	What are some ways in which Python's type system should improve?		wendyshu
26117997	11.801243	-7.029548	comment	3.0	18.5	1613160609	-8.997041	It fundamentally can't be improved in a significant enough way and still be Python. The more realistic options are to be okay with Python's type system (I personally am) or to look at different languages if you really want something more robust.		superbcarrot
26124526	12.235214	-7.5324945	comment	3.0	10.5	1613233879	-11.388545	Kotlin never appealed to backend developers (based on job ads, new open-source projects in the domain). Data pipelines, concurrency and streaming are becoming more and more part of what a backend dev ...		johnnycerberus
26124536	12.222909	-7.26148	comment	3.0	14.5	1613234022	8.845602	Strictly imo, using Kotlin with Spring Boot defeats the purpose if you're trying to get away from traditional Java web frameworks (didn't think I needed to spell this out due to the next sentence, but...		BoorishBears
26142928	12.129066	-7.62667	comment	3.0	12.5	1613398729	-10.608156	F# is a lot like OCaml. But OCaml still struggles with multiprocessing, while F# can run on the .NET infrastructure which has this solved.		amelius
26143335	12.156702	-7.524727	comment	3.0	12.5	1613401388	-10.5864935	F# is only functional language supported by big corporation. It is not Go level but still it is safe to say that Microsoft has some serious commitment to this language.		rusabd
26151729	11.724931	-7.3550463	comment	3.0	12.0	1613460655	6.5369763	> I Miss: GeneratorsExcuse me, what?! Python has stackless symmetric coroutines; Ruby comes along and brings you stackful symmetric coroutines, what's there to miss?How is `return to_enum :each unless...		DarkWiiPlayer
26151967	12.313408	-7.126906	comment	3.0	17.5	1613463644	12.369027	Nope! You can't pass functions, return them from other methods and so on, so it's not first class.What you do have in Ruby is Proc, that can be used kind of like first class functions, so you don't really miss out on much.		capableweb
26153082	12.488829	-7.0717945	comment	3.0	11.0	1613476368	12.412192	"So the functionality is equivalent, but ruby's syntax is slightly longer. Is there something other than ruby's slightly longer syntax that you find lacking?Ruby's Method class matches the design ""ever..."		zwp
26153083	11.948269	-7.294555	comment	3.0	11.5	1613476371	-10.335828	I think you’re missing their point. They’re not necessarily saying types are not useful, they’re saying types encourages a form of thinking which tends towards class-based overcomplications.Now this i...		masklinn
26163033	12.093721	-7.1292787	comment	3.0	14.5	1613539475	-10.405677	> Eg TypeScript has convincingly shown to a large crowd that soundness isn't an important property for many key goals of static typing, such as programmer productivity, refactoring support, preventing...		lmm
26163171	12.244938	-7.5890074	comment	3.0	12.5	1613541033	-11.381506	Consider that you might be the weirdo here.  Kotlin is eating scala's lunch by specifically jettisoning the advanced type stuff.If you can give 80% of the value with 20% of the confusion, that's a win for most devs.		refenestrator
26193256	12.005586	-7.747916	comment	3.0	12.5	1613743548	10.420322	It doesn't take 2 weeks to set up an app in a language with a big community of developers, well maintained libraries and at least decent documentation. It probably takes a day or 2. Maybe a bit more i...		ritchiea
26220822	11.663431	-7.9507484	comment	3.0	17.5	1613967704	10.252996	In my opinion, coming from Java,C# background and currently working on golang, here's my take.1. Golang did right design in terms of OOP2. They didnt complicate the language by accepting everything.3....		nitinreddy88
26226308	11.694885	-7.087656	comment	3.0	12.5	1614011057	8.50292	I'm not saying it's impossible for JVM to compete at the level. But you definitely don't get O(5 uSec) performance out of the box. The author is trying to argue that language considerations are irrele...		dcolkitt
26226632	11.737577	-7.1365438	comment	3.0	12.0	1614012472	-8.9374895	Python is dynamically but strongly typed. “2+True” is a type error; once something has a type, it has a type. There’s no WAT.		prionassembly
26262420	11.738505	-7.583049	comment	3.0	11.0	1614259246	10.353424	Such systems should be written using a safer language, like some of the modern cryptocurrencies do. Rust, Haskell, OCaml, F# would be a perfect fit.		xvilka
26281884	11.919551	-7.682555	comment	3.0	20.0	1614389786	10.376924	> While not directly related to strictness, a pain point on the PureScript side that I didn’t experience in Haskell was stack safety.Stack safety is directly related to laziness—Haskell being lazy[1] ...		tikhonj
26285832	12.128411	-7.246578	comment	3.0	11.5	1614443247	8.537631	"I don't really understand what's the advantage of ECS compared to OOP composition.
Anyone here can shed some light on the matter?"		samwestdev
26317839	11.834624	-7.300252	comment	3.0	13.5	1614706370	-8.934074	Strong typing is not shiny or new and, even if you're a javascript guy, not being remotely familiar with any strongly-typed language (or generics?!) is a red flag.(edit: red flag is a bad description,...		nickysielicki
26324443	12.4102545	-7.0754147	comment	3.0	11.5	1614742791	12.369366	There's nothing in that code that says that any of those parameters have to be ints. They're certainly expecting ints, but there's no casts in that code that would enforce that. Presumably somewhere u...		kemayo
26334858	12.037975	-7.1943073	comment	3.0	13.0	1614806986	3.0868864	"    const readFilePromise = (...args) => new Promise((resolve, reject) => readFile(...args, (err, result) => err ? reject(err) : resolve(result))) 

How can the native implementation be much more comp..."		beaconstudios
26288841	11.843912	-7.2159915	story	3.0	14.0	1614465738	-8.964904	Do Python developers want static typing?	https://developers.slashdot.org/story/21/02/27/0254234/do-python-developers-want-static-typing	MilnerRoute
26335034	12.067082	-7.1439223	comment	3.0	11.0	1614807714	8.874074	Haha. That's alright. That looks super neat though, I must admit. The only equivalent that comes to mind would be using an abstract class. I still might fail to fully understand what that code example...		okamiueru
26338836	12.140901	-7.885521	comment	3.0	14.5	1614834129	-3.213029	I had a brush with category theory more than forty years ago. I got a master’s degree in math at the University of Chicago in 1980, Saunders Mac Lane was on the faculty, a few grad students were doing...		tkgally
26339650	12.138653	-7.8844075	comment	3.0	13.0	1614842611	-3.2126224	> What has in fact happened in recent decades? Has category theory turned out to be mainly a “simplifying abstraction” [...]?In short: yes, with some exceptions. The majority of mathematicians are wor...		spekcular
26359646	11.87927	-7.323524	comment	3.0	10.5	1614966497	7.0356164	This is a great exercise -- well done!What I try to convey to my students:* We write programs to solve problems.* The program is a model of the real-world problem.* The better our model is, the easier...		F00Fbug
26378841	11.806529	-7.16819	comment	3.0	17.5	1615144821	5.36007	> It feels like arguing about colors from the whole spectrum of the rainbow without saying which color we're arguing about.Arguing about a rainbow or arguing about a color in the rainbow doesn't effec...		neonological
26384708	11.858545	-7.02779	comment	3.0	12.0	1615203983	-8.326731	Lots of truths there but also colored by someone who evidently has not been a fan of technologies before and seen how it works.I am not as pessimistic as a Julia fan. Why? Because I have been where th...		socialdemocrat
26418983	11.646502	-7.963108	comment	3.0	10.5	1615425929	10.185306	Obviously, people routinely compare and hash IP addresses in Go programs.		tptacek
26446923	11.7335615	-7.342454	comment	3.0	13.0	1615647139	-8.852469	Personally I would drop the static type system and reinvent Self.		throwaway4good
26446913	11.947113	-7.3772426	comment	3.0	16.5	1615647049	7.003629	"""First, a few obvious, non-negotiable things any new OO language should have: ...""Well, that's like your opinion, man ..."		throwaway4good
26448248	12.099884	-7.7272124	comment	3.0	12.5	1615657501	10.5556965	Ocaml also has a long standing claim to being an oo plus functional language for the future that hasn’t seen a lot of uptake. It would have been heartening and reassuring for the author to explore more candidates than Scala.		le-mark
26448341	11.634855	-7.3282127	comment	3.0	11.5	1615657965	9.231858	The interface. All that grid of available actions, just too many options. Later quests evolved to have fewer actions (see Full Throttle), and later the only option left was general 'interact' action.I...		Andrew_nenakhov
26447894	12.340505	-7.2354155	comment	3.0	32.5	1615655026	12.561477	I'm fine with implementing another static Object-Oriented language, but please learn from some of the best non-static Object Oriented languages out there like Ruby and to a lesser extent Erlang/Elixir.		fouc
26464550	12.332135	-7.023112	comment	3.0	18.5	1615807050	13.17962	Text processing, without a single mention of Perl. How times have changed.		oefrha
26475698	12.477151	-7.804198	comment	3.0	14.5	1615897048	8.944013	In a practical working environment it creates more problems than it solves.It's an optimization that effectively turns non-working code into working code, in ways that aren't always obvious or predict...		qsort
31046056	11.732311	-7.4321895	comment	3.0	10.5	1650058041	9.651157	I used to have similar complaints about Java until I sat down and actually read the  JVM and language specs and read some JEPs. The truth is, the Java maintainers have made a lot of good design decisi...		voidhorse
31051415	12.03388	-7.214612	comment	3.0	33.0	1650107411	9.155483	"This, very much this.    async function() {}

is much nicer than    function() {
      return new Promise(
        (resolve) => resolve()
      )
    }"		eurasiantiger
31051791	11.994499	-7.225523	comment	3.0	10.5	1650112430	9.183829	But in JavaScript, these two awaits will not happen in parallel, you really need to await Promise.all() for that.		aGHz
31051917	12.028067	-7.17116	comment	3.0	14.0	1650113586	9.09579	"   const myfunc = () => new Promise(resolve => resolve())

Is there anyone that actually likes this structure? I find it really hard to reason about what a line like this does. What is the upper limit on double arrows in one line?"		Aeolun
31053697	11.657219	-7.9406023	comment	3.0	11.5	1650126695	9.959893	A couple years ago I tried making a GIF generator in Go and a decent FFMPEG wrapper is something the Golang community needs.		DoctorOW
31053754	11.719073	-7.816321	comment	3.0	11.5	1650127012	10.233119	I've found that Go is not elegant enough for me and Rust is too difficult to write (I started using Rust in 2015 and after years of trying I eventually realized Rust doesn't make sense for most apps),...		jgillich
31059437	11.830241	-7.3977704	comment	3.0	13.5	1650184191	9.245279	I wish crossbeam channels added support for async/await		sakex
26464649	11.792373	-7.308952	story	3.0	65.0	1615807758	7.4540725	Hyperfunctions	https://doisinkidney.com/posts/2021-03-14-hyperfunctions.html	gbrown_
31115633	11.797616	-7.1976767	comment	3.0	14.0	1650577896	-8.874058	"It seems that your point boils down to ""Python enforces types at runtime if you define 'enforce types at runtime' not to include 'enforcing that data you declare to be of a certain type actually is of that type'"".Am I the only one baffled by this way of thinking?"		civilized
31115724	11.795862	-7.227705	comment	3.0	10.5	1650578544	-8.960167	Python does and always has enforced types at runtime. This is called duck-typing. If you're not familiar with the concept of strong+dynamic, it is easy to see how this could be confusing. This may hel...		ledauphin
31117469	11.841842	-7.177598	comment	3.0	24.0	1650593554	-9.005839	Adding type hints to Python has increased my productivity by at least a factor of 10. They allow you to reason about code in a local function without having to track back up dozens of call sites to en...		jsmeaton
31118087	11.82473	-7.1769743	comment	3.0	29.5	1650600428	-8.990548	Have you tried it? Python has gained most of its popularity before type hints, and I would (wildly) guess 99% of Python programmers don't even use type checking at all.Static typing is completely viab...		bayesian_horse
31120989	11.834725	-7.379206	comment	3.0	14.5	1650631881	-10.073574	Its not very smart to add static typing to Lisp, goes against the strengths of the language. At that point just program in another language, there’s a lot of benefit of static typing that IDEs can tak...		math-dev
31121088	11.862048	-7.4023232	comment	3.0	12.5	1650632560	-10.099043	> Its not very smart to add static typing to Lisp [...] (outside of compiler optimisations, which is a different thing)i think this is precisely the point of coalton. cl allows quite handy compiler op...		medo-bear
31121161	11.823866	-7.140019	comment	3.0	14.0	1650633114	-9.115067	Python types just work. Just use these 30 libraries, spice up your IDE with settings and voila /s.This is garbage and moving backwards as a programmer. I loved python when it was easy to use with any ...		nine_zeros
31122287	12.087928	-7.840025	comment	3.0	25.0	1650639097	10.443059	They are among the most notable users of OCaml in the world, and have taken significant stewardship of the language. They sponsor, attend, and publish at multiple academic conferences, especially in t...		DonaldPShimoda
31143343	11.91206	-7.652237	comment	3.0	21.0	1650802651	10.383316	>> Using Haskell as a base for the syntax> I don’t really think this is a problem at all?Of course it's a problem. You shouldn't use a syntax that has been soundly rejected by the industry.		lelanthran
31164110	11.97634	-7.735623	comment	3.0	12.5	1650949417	10.4161415	This is a great paper, but I found it to be very challenging to read when I first ran into it, even though I had some experience programming in Haskell. As a one sentence pitch, this paper is to recur...		chas
31164497	12.503175	-7.5056863	comment	3.0	16.5	1650953353	-12.473319	We inherited an Elixir project.  After a year of irritations, we re-wrote it in Go and never looked back.The combinatorics of having to deal with two different string types, two different throws (catc...		georgia_peach
31173507	12.457143	-7.481417	comment	3.0	13.5	1651009123	12.878967	Adding to that, wouldn’t adding Erlang’s unique features to the JVM be easier than the other way around? Especially with GraalVM’s unique approach that manages to elevate Ruby’s performance far higher than any other runtime?		kaba0
31173906	11.638668	-7.954745	comment	3.0	22.5	1651011767	10.196412	> Although the design of most languages concentrates on innovations in syntax, semantics, or typing, Go is focused on the software development process itself.This important fact is often missed in fla...		pphysch
31193379	11.65563	-7.968164	comment	3.0	18.0	1651158413	10.267687	"Well put and I agree with most points but> Go is not a fun language to program inNot having to think about how something should be done in the most elegant way, instead focus on the problem at hand is a lot of ""fun"""		jhoechtl
31194842	11.64719	-7.9789414	comment	3.0	11.5	1651164490	10.226385	I am both bemused and empathetic for those who keep having this realization with Go. It is like an abusive relationship and people stay in it too long before realizing it is not going to get any bette...		mcculley
31205422	11.597266	-7.8801756	comment	3.0	14.5	1651241803	10.21803	"> Go's confusion between ""type aliases"" and ""newtypes"". The only way to make a newtype in go is to make a separate package with an opaque type and use interfaces for indirection, which is costly and a..."		foldr
31205796	11.720228	-7.4688883	comment	3.0	12.0	1651243342	10.134087	Still not seeing it. You don't have to use interfaces to make an opaque type. A package boundary is sufficient.Not sure why you would want a fully opaque type internally to a package anyway. A regular...		foldr
31214868	11.602132	-7.587964	comment	3.0	17.0	1651314776	9.289951	I think a lot of people are missing the point.Go look at the sourcecode. Look at how simple it is - anyone who has created a thread with java knows what's happening. With only minor tweaks, this means...		cheradenine_uk
31215186	11.686228	-7.3628345	comment	3.0	18.0	1651318274	9.137037	Loom sets out to give you a sane programming paradigm similar to what threads do (i.e. as opposed to programming asynchronous I/O in Java with some type of callback) without the overhead of Operating ...		zinxq
31218164	11.629395	-7.90055	comment	3.0	12.0	1651344096	10.13421	No mention of CSP makes me think the author is still writing Go programs in a non-concurrent, imperative style. Used in this fashion you only get limited gains from Go's simple syntax and nice tooling...		eikenberry
31220548	11.609294	-7.1628556	comment	3.0	20.0	1651361780	-8.950472	Actually python fails hard and fast. This is very different from javascript. It actually makes python safer then C++ even though python is dynamically typed.It is far easier to debug a error caused by...		deltaonefour
31214919	11.98804	-7.752314	story	3.0	6.0	1651315335	10.437793	Ask HN: Who is using Haskell in production?		tomas789
31173395	11.640268	-7.953586	story	3.0	57.0	1651008331	10.195025	The Go Programming Language and Environment	https://cacm.acm.org/magazines/2022/5/260357-the-go-programming-language-and-environment/fulltext	uluyol
31238894	11.733022	-7.2495713	comment	3.0	13.5	1651516071	9.178524	> async\await, give you concurrency without the need to for the developer to explicitly write lock code.async\await in no way relieve the developer from needing to worry about locks.  If you have shar...		cogman10
31239550	11.673377	-7.27724	comment	3.0	10.5	1651519060	9.111176	Having more threads doesn't solve inter-thread concurrency like async/await does.  With async/await you can achieve concurrency while ensuring there parallelism as well as is no parallelism (to avoid ...		jayd16
31246358	11.867197	-7.546788	comment	3.0	16.5	1651570475	10.420781	I tried OCaml a long time ago, and one of the things that really turned me off of it was all the inscrutable error messages.  I went to #ocaml on Freenode for help, and when I had the error messages e...		pmoriarty
31246475	11.6948185	-7.3439827	comment	3.0	15.0	1651571747	-8.749746	"I think both of these points can be alleviated with certain coding habits that come with practice. For instance, adding type annotations in some places will help with error messages. And using ""assert..."		yodsanklai
31246487	11.988449	-7.715026	comment	3.0	13.0	1651571918	10.46473	"""adding type annotations in some places will help with error messages.""I annotated the hell out of my programs, and completely avoided OCaml's type inference as much as I could because I saw that it c..."		pmoriarty
31251719	12.243018	-7.2865453	comment	3.0	20.5	1651602465	-10.338807	I've never tried Smalltalk so I can't really speak to that.  But I have done some coding in ObjectiveC which is a direct descendant so I can tell you that I strongly prefer Lisp, and Common Lisp speci...		lisper
31263930	11.9187765	-7.414595	comment	3.0	11.0	1651688067	7.117861	"> I think you can say that at the boundaries, applications aren't anything.I think you very much can say that ""at the boundaries, applications are procedural"" (i.e., they do side-effecting things sequ..."		cryptonector
31303835	11.6152935	-7.199857	comment	3.0	16.0	1652016986	9.058151	A bit sad that this stopped working in lambdas in Python 3, it was nice to have in Python 2:    (lambda (x, y): x+y)((2, 3),)		Ambolia
31304259	11.65488	-7.091116	comment	3.0	14.0	1652019697	8.904446	"This is an excellent article!In functional languages this is called ""destructuring assignment"".This article could be a great jumping off point into namedtuple[1], the walrus operator [2] and the Patte..."		sitkack
31270536	12.069817	-7.787867	story	3.0	59.0	1651735085	10.424182	Merlin: Context sensitive completion for OCaml in Vim and Emacs	https://github.com/ocaml/merlin	tosh
31322073	11.615362	-7.872998	comment	3.0	13.0	1652144597	10.131826	"Go does not need 128MB of memory to run hello world in a container.People don't pick up Go over Java because of goroutines, Java is still and will forever be an ""enterprise"" language behind many layers of abstractions."		Thaxll
31326438	11.949032	-7.6750803	comment	3.0	10.5	1652186925	10.384787	From what I can tell this is having a term rewrite system integrated into your language. Is this significantly different then Haskell manual rewrites. Which I admit are sometimes brittle.		rowanG077
31387778	11.617816	-7.9113855	comment	3.0	14.5	1652625110	10.188644	"Two thoughts:1) The failure of    func (t *fishTank) fishCount() string {
      return fmt.Sprintf(""How many fishies? %d!"", t.size())
    }

to work has nothing to do with generics; methods are always..."		morelisp
31387900	11.639852	-7.942283	comment	3.0	13.0	1652626219	10.224531	Go is my main language but it keeps disappointing me in it's lack of implementation tuning detail. Generics are just a code generator that, given it's poor performance for things like functional progr...		deeptote
31388082	11.640046	-7.908635	comment	3.0	32.0	1652628020	10.202238	Frankly, having used Go for years, I started using generics right after they were released and I'm very happy with them so far.Sure, the performance characteristics could be improved, but other than t...		cube2222
31405227	11.640463	-7.824192	comment	3.0	10.5	1652752632	10.099783	IMO Go has far more boiler plate than Java. Go is going to have countless amounts more boiler plate for simple logic. Just like your comment below try writing one of these in go:    var lst = users.st...		vips7L
31433151	11.693036	-7.5399675	comment	3.0	11.0	1652960021	9.983197	Do you know how Go handled collection classes in the past without generics?Where they just not typesafe, like a Java List<Object>?		Traubenfuchs
31449546	12.327416	-7.2970405	comment	3.0	11.0	1653063833	7.0779557	I’ve been playing around in Pharo [0] and it’s such an immersive experience! My first reaction was to compare to eMacs in that the editor/environment is the program and it can be edited, customized, e...		_benj
31455086	11.642421	-7.076238	comment	3.0	12.5	1653104831	9.131019	"Question about this part:    key = operator.itemgetter(""name"")
    people = sorted([p1, p2, p3], key=key)

What's the advantage of using operator module instead of just    key=lambda x: x['name']

?"		thrdbndndn
31455046	11.768029	-7.5949316	comment	3.0	15.0	1653104120	10.165352	I love the memoization/caching stuff.I know someone will blurt out “Haskell!” or whatnot, but I wish memoization was more first class in popular languages. It’s a great way to maintain performance wit...		Waterluvian
31459952	11.853743	-7.519407	comment	3.0	15.5	1653154347	-0.61259836	The pure definition, though, is still the common definition in most of Central America and in Latino communities. Feels odd to erase that correct, active definition because it was used for marketing unrelated things in unrelated places		mvid
31492667	12.078302	-7.76268	comment	3.0	14.5	1653402909	7.226653	Despite the name, I’ll note that this says far more about category theory than it does about FP. In fact, I’d argue that it’s not particularly closely related to FP at all — this should have been titl...		bradrn
31492950	11.904936	-7.3711224	comment	3.0	11.0	1653404223	7.0739956	That surprises me.My day job is programming in Java, and I use streams and lambdas everywhere.  I use very little of OO concepts like inheritance.  I try to make my data immutable and write functions ...		jimbokun
31493108	11.694673	-7.4963694	comment	3.0	10.5	1653404924	-10.432579	Generics allow optimization, but that optimization has to be implemented in the first place. Java generics is an afterthought so you can expect such a suboptimal design.		lifthrasiir
31513470	11.8388605	-7.319352	comment	3.0	10.5	1653531334	7.0292015	"Welp definitely disagree -- pardon the assumption but when you say ""young OOP days"" I instantly think Java/C# and I think the baggage in those languages leaves a bad taste when it comes to abstraction..."		hardwaresofton
31518418	11.676061	-7.844124	comment	3.0	11.0	1653573605	10.175291	"#7 given Go can't compare to Python on ecosystem breadth and depth, its a curious choice of ""reason to switch"""		mellosouls
31518845	11.621945	-7.863295	comment	3.0	10.5	1653575830	10.229653	Recent-ish experience:- Wrote a distributed app in Python (it aggregated a few GB / day of info from several thousand servers). Performance was terrible, though I was doing all the right things (async...		kabdib
31521581	11.761322	-7.2880297	comment	3.0	10.5	1653588530	-8.828339	Here's my million dollar take:The linter/typechecker should add in the inferred types explicitly. If you want to refactor, it's up to you to delete the types. Then a re-run of the linter/typechecker c...		rektide
31544600	11.721063	-7.327132	comment	3.0	10.5	1653778645	-8.824394	"We use static type systems all the time, as well as specialized checkers and linters, and none of those showed themselves to have ""costs greater than the cost of the bugs"". And none of them are even n..."		marcosdumay
31553467	12.2637205	-7.310947	comment	3.0	11.5	1653863030	-10.318403	Sounds like you're evaluating software configuration management for Smalltalk from before that was hardly a thing for any development platform?Decades ago, Smalltalk implementations would let you dump...		neilv
31567035	11.70278	-7.069799	comment	3.0	12.5	1653983256	-7.8664083	Oh, that's a wtf for sure. More to be scared of and more paranoid I'm going to appear to junior devs while reviewing merge requests. If I'm not mistaken there's a chapter in Effective Python about thi...		iknownothow
31567292	11.636397	-7.170943	comment	3.0	10.5	1653986418	7.919764	"Maybe we are looking at it differently. To me, the behavior of ""obj.a += (2, )"" is the obvious and expected one i.e. I expect a tuple ""(1, 2)"" to be created and stored in ""obj.a"" and the class attribu..."		iknownothow
31591677	11.61693	-7.4260216	comment	3.0	10.5	1654147857	10.057016	I quite like what Haskell has here. You type in number literals, but they get a type based on context. So 2*3.14 will work there.		kaba0
31602118	11.6124115	-7.7204986	comment	3.0	36.5	1654213590	9.71331	> If you can avoid async I would recommend doing so. The problem is that the entire ecosystem has completely shifted to async. There are almost no active / popular libraries related to network IO that...		Animats
31638323	12.097126	-7.14691	comment	3.0	12.0	1654503942	-10.231552	If you're interested in something lile this, then check out the Smalltalk family of languages. They're similar to Lisps in the sense that the environment is completely programmable (metaprogramming is...		trashburger
31652416	12.023892	-7.808174	comment	3.0	12.0	1654600052	10.394048	To me, it is because the term 'a monad' refers to a thing that doesn't even exist as its own thing in programming. Of course your can realize a monad, but the monad is not the type, nor the function, ...		larschdk
31659079	11.737724	-7.356744	comment	3.0	10.5	1654630482	-8.855046	> the amount of time I spent debugging types and signatures was really frustrating, and often left me googling the same error patterns to figure out where my mistake might be.In my experience, people ...		DonaldPShimoda
31660944	11.949186	-7.6745462	comment	3.0	16.0	1654641990	10.397121	I seriously suspect there is a bimodal distribution are play here, because I would love to use Haskell, or something like it that's possibly more powerful like Idris, wherever I could. And at the same...		feanaro
31661055	11.967186	-7.7192	comment	3.0	13.5	1654642806	10.455119	See the thing is, I also love thinking about things mathematically/as relations/as recurrences. But I like the more imperative way of thinking about algorithms and data wrangling just as much.So in pr...		sudosysgen
31682580	11.72732	-7.227024	comment	3.0	11.5	1654789182	9.177026	"This ""async virality"" syndrome is the main reason why async is harmful imho. _Some_ async can be very useful in certain constrained circumstances, I believe. However forcing the async execution model on all code is a terrible idea."		dboreham
31682446	11.678784	-7.2026634	comment	3.0	16.5	1654788482	9.165761	Too many major packages in the ecosystem only support an async model now.  It's pretty frustrating if you are just writing a synchronous program, or one with a straightforward OS threading model.		loeg
31682402	11.721372	-7.3122463	comment	3.0	13.5	1654788319	9.247839	Async has really taken over anything networking-related because, well, it offers much better scaling and performance. If you're a package author you're going to get more people asking for async than people that don't want it. There is no sane way to make async optional in a library and reuse code.		api
31683615	11.927628	-7.705981	comment	3.0	11.5	1654793576	10.406975	As you implied, I don't think the answer is to make the perfect abstractions that can handle any scenario.But where software does fail in my humble opinion is making it easy to pull in tried and true ...		nightski
31684696	11.620888	-7.8656273	comment	3.0	12.0	1654798071	10.1171055	Does it matter? The point is that Go has excellent throughput and latency, while using only a single concurrency model.		amelius
31700288	11.635784	-7.9135504	comment	3.0	18.5	1654901967	10.163101	The lack of generics has forced all Go concurrency to be intrusive (i.e. implemented by the person using literally any concurrency), and yeah.  It's horrifyingly error-prone in my experience.  It mean...		Groxx
31702588	11.618799	-7.8107347	comment	3.0	10.5	1654931159	9.966955	Goroutines are better than C# async/await but C# is still a better language than Go.When Java 19 lands you can have best of both worlds. Virtual Threads are equivalent to goroutines but you have access to better languages like Java, Kotlin and Clojure.		jpgvm
31719904	11.646288	-7.9505463	comment	3.0	11.5	1655082944	10.205988	This is great as a research project, but if I needed something like this to be embedded in an existing project, I'd just go with Yaegi [1] instead of going with something that is similar to golang, bu...		latchkey
31708832	12.276595	-7.0373893	story	3.0	22.0	1654984515	13.1763115	Perl 6 Grammars, Part 1	https://www.perl.com/article/perl-6-grammers-part-1/	breck
31728580	12.449369	-7.0327225	comment	3.0	10.5	1655141035	12.358016	> Ruby isn't the fastest language, but it's now competitive enough that the same critics might as well throw Python under the bus while they're at it.You say that like it's a point in support of Ruby,...		munificent
31735330	12.10919	-7.233007	comment	3.0	20.5	1655187326	8.193757	I really like that Kotlin, Groovy and Scala keep advancing the JVM ecosystem.Java in my opinion should evolve by keeping the original approach (a better C++) and leave programming language experimentation to the big three.		fithisux
31742199	11.975744	-7.7485275	comment	3.0	15.5	1655225421	10.495421	"I've seen this in action: A startup I did consulting work for had a ""genius"" who convinced management that everything should be written in Haskell. As a consequence building a team was painfully slow,..."		StefanHamminga
31743018	11.993417	-7.7600255	comment	3.0	12.0	1655228244	10.445328	Haskell is fine for production code. You just need to know what you're doing, and not go crazy with abstraction.		JoelMcCracken
31751274	12.040377	-7.853189	comment	3.0	27.0	1655290771	10.429522	Can't wait for tinkering with OCaml when 5.0 is stable. Pretty sure the community will invent amazing libraries for parallel computation as well.Maybe finally Rust+tokio projects will have some actual competition!		pdimitar
31770681	11.63551	-7.942738	comment	3.0	16.0	1655411776	10.154241	Java and Go were both responses to how terrible C++ actually is.  While there are footguns in python, java, and go, there are exponentially more in C++.		bb88
14009460	11.636867	-7.850192	comment	3.0	12.0	1491004398	10.082628	tl;dr: The Go implementation being faster has nothing to do with Java or Go. The version implemented in Go used a slightly different algorithm, which allowed hot inner loops to terminate early, greatly improving the performance of the algorithm.		quanticle
14011699	11.954472	-7.713174	comment	3.0	12.5	1491047822	10.4003725	Though unlike Haskell, it is strict.		pdexter
14013915	12.098158	-7.1554847	comment	3.0	12.5	1491077584	8.525498	If you want to successfully build a game, I recommend staying away from entity/component or any other overcomplex system ... until such time as you are an expert game programmer and know that's what y...		jblow
13998089	11.737046	-7.0746846	story	3.0	32.0	1490901403	-8.98038	Customizing class creation in Python	https://snarky.ca/customizing-class-creation-in-python/	joeyespo
14032775	12.234105	-7.558534	comment	3.0	16.0	1491315262	-11.325687	kotlin is backed by a tooling company. This is a very strong argument. The ones that are doing the best IDE for java (for a lot of people) are the ones that decided to create kotlin. Swift also has th...		jorgemf
14045934	11.972754	-7.7319255	comment	3.0	11.5	1491428781	10.411074	His middle name is Haskell :p- https://en.wikipedia.org/wiki/William_Haskell_Alsup		faitswulff
14071866	12.284385	-7.305651	comment	3.0	19.0	1491739433	7.105009	> 4. Though in fairness, I am just goofing around with Smalltalk and if I had production grade concerns, I might have a different attitude.I'm curious, is Smalltalk especially good for any particular ...		kwhitefoot
14072632	12.283277	-7.316099	comment	3.0	12.0	1491750575	7.079736	It's worth spending a few hours to get an idea of what Smalltalk looks and feels like, but I wouldn't spend any more time than that on it.First of all, it's dynamically typed, which is not something w...		hota_mazi
14074128	12.12638	-7.1840816	comment	3.0	10.5	1491768838	11.920794	> for example here’s a copy from Lightbend (the company behind Scala, Play & Lagom)I use Play 2 for most of my projects and frankly knowing what I know about Spring and J2EE (even though having never ...		neverminder
14076633	11.852976	-7.1667995	comment	3.0	13.0	1491808236	-8.245006	Closure probably fell out of vogue because it's excellent, but written in java.		pabl0rg
14026788	11.647559	-7.934429	story	3.0	20.0	1491251049	10.295756	Text-Based User Interfaces in Go – Beef up your commandline tools	https://appliedgo.net/tui/	christophberger
14068778	11.950981	-7.7285447	story	3.0	131.0	1491682525	10.420216	Secrets of the Glasgow Haskell Compiler Inliner (1999) [pdf]	https://www.microsoft.com/en-us/research/wp-content/uploads/2002/07/inline.pdf	aaronchall
14107574	11.594651	-7.8643236	comment	3.0	11.0	1492095965	10.17577	Could you post an example of what you're talking about? Passing slices of interface values works just fine. https://play.golang.org/p/9CWzdnRb8UIs this what you mean? Trying to pass a []fooint as a []...		zellyn
14122765	11.660395	-7.975529	comment	3.0	17.0	1492289171	10.18694	What are some clear signs that this is happening to you? I track the url requested on my server(s) and some of them don't make sense/looking for exploits like wordpress login exploits. I don't know I ...		ge96
14148307	12.017907	-7.772669	comment	3.0	18.0	1492615115	10.430294	Learning Haskell has been made much easier with Haskell Book[1]. Unlike LYAH, it actually has a ton of exercises and in-depth explanations so you understand the why behind things as you make progress. That said, it requires discipline to read through.[1] http://haskellbook.com/		sotojuan
14148395	12.002545	-7.762449	comment	3.0	16.0	1492615660	10.410327	The biggest player using Haskell would be Google.		thepratt
14149188	11.875477	-7.0816402	comment	3.0	12.0	1492620437	8.601769	Alternatively: Make all data immutable, then make all components pure. Finally, look for and fix breaking components, since those will point to code smells and anti-patterns (using context incorrectly...		nathancahill
14152033	11.983765	-7.4976053	comment	3.0	21.0	1492637839	10.639351	IMO this is the biggest thing available to modern languages that Java is missing.  I would absolutely love to see this, particularly pattern decomposition.  I wonder if you could do it without somethi...		peeters
14152532	12.016953	-7.494115	comment	3.0	14.5	1492642742	11.904608	"I mean, reading this article is basically a giant advertisement for Scala and its powerful pattern matching.  functionThatReturnsAnyVal match {
    case i: Int if i > 2 => System.out.println(""Greater ..."		mark242
14153908	12.026132	-7.143192	comment	3.0	10.5	1492661815	9.13816	> Once you get the hang of promises, you are capable of doing concurrent asynchronous tasks in a manner that would be significantly more difficult in any other language.FYI, anyone who has worked with...		lod723
14181046	12.03225	-7.812911	comment	3.0	14.5	1492990813	10.415649	I got lost at the monads bit. Where's the best place to learn about them? I did basic Abstract Algebra in university, and I understand how to use the Maybe/Option/Optional monad.		lacampbell
14170097	11.615304	-7.91406	story	3.0	32.0	1492815386	10.011974	Golem – A Decentralized Supercomputer	https://golem.network/	bharatkhatri14
14179238	12.010699	-7.7424664	story	3.0	7.0	1492969127	10.404688	Ask HN: Is it worth to learn Haskell?		antoaravinth
14226418	11.611334	-7.9534135	comment	3.0	11.0	1493471595	10.189025	I haven't used Go before; is there a common conception that you can pass by reference in Go?		maxpblum
14235605	11.931349	-7.353963	comment	3.0	21.0	1493613666	7.0864186	Your definition of an object is similar to one that I’ve used[1][2][3], which is unsurprising since we got it from the same place.But, now I define an object as any component with which you interact s...		noblethrasher
14242469	11.899305	-7.098093	comment	3.0	10.5	1493679041	-10.747351	Most of our stack is built around gevent, it works great just about everywhere and requires little to no thought about the asynchronous nature of the code. Performance has been incredible compared to ...		jacob019
14258326	11.674776	-7.9087467	comment	3.0	11.0	1493834269	10.14525	"I'd add another, something like ""Be Aware of the Ramifications of Partial HTTP/S Implementations"".Because it's so easy to expose http/https in golang, I see a fair amount of code that takes the easy p..."		tyingq
14267385	11.968891	-7.730283	comment	3.0	12.5	1493922463	10.392083	Haskell: where difficult problems are trivial, and where trivial problems are the subject of ongoing academic research		jes5199
14267829	11.883625	-7.6153736	comment	3.0	10.5	1493925542	10.366408	"Serious question. In the following code, what would be better function / type names? (or you can pick another bit of Haskell code that you know and/or have particular trouble understanding).    class Foldable t where
        foldl :: (b -> a -> b) -> b -> t a -> b"		wereHamster
14269314	11.9918	-7.747722	comment	3.0	12.0	1493935856	10.411544	> If one is able to write code in Haskell it tells a lot about them, and he might be a better programmer than one who writes in Ada or C++.And here's the arrogant, self-important attitude that turned ...		jlarocco
14271640	11.921849	-7.727014	comment	3.0	11.5	1493967973	10.354502	I find this response a little ironic because we don't really see complaints about knowing the C runtime and C compiler when performance becomes a problem, which is also jarring and frustrating. But, u...		eximius
14272455	12.000039	-7.736504	story	3.0	70.0	1493981187	10.431548	Some Notes on Haskell Pedagogy	https://medium.com/@sjsyrek/some-notes-on-haskell-pedagogy-de43281b1a5c	sjsyrek
14277719	11.987738	-7.732411	comment	3.0	11.0	1494028463	10.34343	functor, sum type, recursively defined.This teaching opportunity is already lost. Who are you teaching to? Someone new to programming is going to be lost by the first example.		plandis
14320274	12.103492	-7.1616955	comment	3.0	18.5	1494544285	8.59069	"I poked my nose into the Improbable's public API docs.  What I saw looked like an OK Entity-Component-System straight out of /r/gamedev + some C# serialization so that you could have Systems (aka ""functions"") run on different nodes on a network.What did I not notice that's worth half a bil?"		corysama
14333965	12.257131	-7.278072	comment	3.0	14.5	1494729671	-10.30812	Yea, that's a weird statement, however a better one is that Smalltalk doesn't need macros because it has a clean syntax for lambas that remove a common use for macros, hiding boilerplate use of Lisp's...		gnaritas
14280565	11.859379	-7.628912	story	3.0	13.0	1494083424	12.804085	An Early History of Pony	https://www.ponylang.org/blog/2017/05/an-early-history-of-pony/	spooneybarger
14276891	11.640436	-7.9170885	story	3.0	74.0	1494018858	10.231624	[WTF] Go Unicode Hack to Get Pseudo-Generics	https://www.reddit.com/r/rust/comments/5penft/parallelizing_enjarify_in_go_and_rust/dcsgk7n/	toyg
14364326	12.4506645	-7.787451	comment	3.0	19.5	1495072430	11.960677	"The ""ew gross weird"" reaction to Scala and Clojure is tremendously disappointing (especially coming from someone whose thesis is basically ""give this new language a chance"")"		pje
14364342	12.231881	-7.609531	comment	3.0	16.0	1495072885	11.934619	I worked on a commercial project that used Scala. Never again. Compiles were slow, IDE support was terrible, everyone had their own subset they used. I'm sure it's improved since 2010.		icedchai
14367945	12.0353155	-7.533615	comment	3.0	13.0	1495120755	-11.320258	"What about immutability? A key part of functional programming is using immutable structures to avoid side effects.My understanding is that Swift has these to some extent (""let"" vs ""var"", structs being..."		tmail21
14369306	12.186401	-7.4671526	comment	3.0	15.5	1495129213	-11.360978	"I find it a huge improvement over Java, but I wish it would have more syntax sugar for lists/arrays/maps like Swift and dynamic languages do.The mix of ""hip"" programming language constructs with uncha..."		shallot_router
14371332	11.666637	-7.202872	comment	3.0	11.5	1495143536	11.881198	my beef is with 'val' being keyword. How many variables did you name val in all your coding? I certainly did.		flamedoge
14369751	12.088364	-7.536325	comment	3.0	12.0	1495132083	11.89454	In my experience as someone whose been writing scala for a couple of years (which also uses val/var), it has 100% never been confusing or a problem.		bxrxaxdx
14376131	12.253746	-7.5664454	comment	3.0	11.5	1495205231	-11.388279	It makes me sad that people are so upset by the recent hype Kotlin is getting. Everyone has something that they get excited about. Kotlin is new and shiny and has been around awhile but only on the fr...		jrwiegand
14396026	11.758403	-7.200316	comment	3.0	10.5	1495479298	-10.353871	"I'm unclear about function invocation here... FTA:    A function invocation. This comprises a list where the first element
    is the function and the rest of the elements are the arguments. first
   ..."		escherize
14407802	11.969779	-7.4039044	comment	3.0	11.5	1495604001	9.491228	It's a kludge. Syntactic sugar to remove one level of nesting.Other languages come either with great concurrency support out of the box (Go, Erlang) or enough constructs to implement cooperative schedulers without having to specify async/await (Lua).		q3k
14429280	12.277197	-7.2796054	comment	3.0	11.5	1495870347	7.0980477	Nice to see some Smalltalk examples although I'm heavily biased to terminal languages like Awk, Perl, and Python, I'd rather see something more like Pharo which I think makes more sense in the ST worl...		throwaway7645
14430945	11.628632	-7.949421	comment	3.0	13.0	1495905713	10.223791	Go already has its own intermediate representation to solve this problem, so this project must solve some other problem.		weberc2
14437773	11.756988	-7.350987	comment	3.0	18.5	1496040462	-1.055096	"They're so right about that.
As a frontend dev, I don't care about that extra 1-2% of bugs that, say, ownership types could catch if it kills my productivity by having to annotate everything.However, ..."		Crazywater
14435452	11.711981	-7.3734994	story	3.0	65.0	1495995294	-8.723958	Bracha v Felleisen “Types for an Untyped World” (2015) [video]	https://www.youtube.com/watch?v=JBmIQIZPaHY	mpweiher
14441800	11.976943	-7.713694	comment	3.0	10.5	1496096394	10.406671	Would it make sense to make the code Literate Haskell?		seanparsons
14447928	12.047019	-7.1874657	comment	3.0	11.0	1496173351	9.159094	As noted, this already was possible in Node 7.x. But to use it, you needed a function that returned a promise. And many functions do not, due to having been developed earlier. This is true even for li...		flavio81
14451898	12.104134	-7.5163307	comment	3.0	10.5	1496233472	-10.606613	"As a long-time advocate of functional programming, I was once asked after a talk what is the ""best"" FP language to learn. Since I'm known as a Haskell/Scala/ML person, I surprised much of the audience..."		ericssmith
14459061	12.334277	-7.0216513	comment	3.0	10.5	1496311312	13.183882	Perl always reminds me of this guy :) https://media.ccc.de/v/32c3-7130-the_perl_jam_2		ibn-alfatal
14459070	11.90964	-7.639983	comment	3.0	11.0	1496311492	10.397034	I'm posting this as a top-level comment, but it's really a reply to the discussion downthread about compilers being able to work magic if we let them. Better still, why not help them?Something I took ...		mrkgnao
14459095	12.316958	-7.0365205	comment	3.0	14.0	1496311819	13.196466	"I wouldn't call it impressive. 2 months too late, too many bugs, horrible security, not much improvements, still doing more destruction than good.Compare it to the ""non-community"" professional effort ..."		rurban
14475382	11.779384	-7.3645387	comment	3.0	14.0	1496473827	7.0695276	What is the practical benefit of soundness? I offer that soundness is a disease that makes programming languages far more complex than they have any right to be.A static type system exists to prevent ...		resf
14480539	12.233072	-7.638059	comment	3.0	11.5	1496568924	11.927214	Scala.js author here. Ask me anything ;)		sjrd
14480546	12.24609	-7.629288	comment	3.0	14.0	1496569019	11.937813	Scala.js has been an amazing tool for my personal projects. I literally hit euphoria sometimes writing stuff in it. I am yet to truly grasp the benefits of full stack Scala (shared models, Autowire, e...		sraquo
14520681	12.172931	-7.2641296	comment	3.0	17.0	1497008384	-11.377766	I love Java. I think it has changed the world for the better.That being said, I just can't get excited about new language features now that I have discovered Kotlin. It is essentially Java but with a much smarter compiler and a more modern and sane syntax.		pawadu
14520706	11.95747	-7.1785464	comment	3.0	10.5	1497008715	8.549862	I used to like Java when it was simpler. Generics I thought were great, but the new features just seem like attempts to shoehorn features of dynamic languages onto a business language. And I still can't have multiline strings (on a language used for Web programming!).		forinti
14478574	11.646022	-7.9756236	story	3.0	45.0	1496525097	10.221862	Using Einstein Vision Within Golang	https://developer.salesforce.com/blogs/developer-relations/2017/05/using-einstein-vision-within-golang.html	ingve
14524892	11.655528	-7.9730453	comment	3.0	20.5	1497045212	10.224411	"This is basically ""Use DI, and move towards SOLID""Well, yeah! Those are great principles in any language - I find it concerning (and maybe indicative of something) that the Go community has voted this..."		JBReefer
14531872	11.920165	-7.727757	comment	3.0	12.0	1497187458	10.356092	The C++ code here is exactly the kind of thing that game developers complain about when they say C++ encourages inefficiency. Calling Haskell fast because it merely draws with that doesn't really make...		Veedrac
14547960	12.324773	-7.5221148	comment	3.0	11.0	1497383098	12.845461	In terms of safety I think fork-join is better than the actor model. The actor model is all about mutable state - the state of all the actors. Fork-join removes state entirely - it's just about passing values.		chrisseaton
14551188	11.677279	-7.8206244	comment	3.0	14.0	1497424978	10.354045	> .. you can write vastly more complicated programs that are, say, 80% as fast as hand-optimized C for only 10% of the effort of hand-optimized C.Computer Language Benchmarks of GHC versus C don't see...		delhanty
14551642	11.901032	-7.645059	comment	3.0	12.0	1497434420	10.367556	"I tried implementing some simple imperative algorithms (like union-find) and found the Haskell code very noisy. For example, ""var x = f(y)"" in an imperative language might translate to ""let x = f y"" o..."		cousin_it
14551866	11.974781	-7.7286925	comment	3.0	12.0	1497438048	10.402417	"Wasn't the selling point of laziness performance?""It only does what is needed!""I didn't use Haskell but Nix and at least there it seemed reasonable to ""not do"" everything."		k__
14557113	11.603699	-7.39268	comment	3.0	12.0	1497487235	9.217486	When should one use sync.Map vs a plain old map with a RWMutex?		helper
14560015	11.84324	-7.306312	comment	3.0	14.5	1497532293	9.202712	Aync/await is the best thing since sliced bread. It has made my life so much easier.		pier25
14561625	11.663617	-7.582001	comment	3.0	12.0	1497542683	10.14682	No one knew about generics until languages like Pony and Crystal proved that they were important? This may be a pedantic point, but technically, generics or templated types were already being used in some obscure, academic languages like Java, C#, and C++.		jhpriestley
14566635	11.701209	-7.602375	comment	3.0	34.5	1497586493	9.980138	This (somewhat) complicated process is also why generics can be fully reified in the CLR.		bigdubs
14582506	11.64248	-7.9069486	comment	3.0	11.0	1497815333	10.195479	>People have been asking for generics as a standalone feature first and foremost -- orthogonal from replacing error handling.There are many languages out there that have generics. Go is build on diffe...		andmarios
14583916	11.680529	-7.5152607	comment	3.0	15.0	1497834020	9.980767	What is the use of value types if it cannot be the argument of generics?		netheril96
14585045	11.716345	-7.4701414	comment	3.0	18.5	1497855628	9.786184	I only thought the erasure was bad because of how Java lacked value types (so my list of T will use heap boxes when T is int).I haven't given it a ton of thought but I thought that apart from reflecti...		alkonaut
14594471	11.778794	-7.353169	comment	3.0	45.0	1497965781	-8.869089	> Documentation. There’s a common mis-conception that type systems make code verbose. Firstly, type inference is pretty doable and addresses the problems that give rise to these beliefs. Java and C++ ...		emodendroket
14594848	11.670339	-7.3896546	comment	3.0	10.5	1497968694	-8.757279	I have worked with strong and no type systems, and have found that the absence of a type system is extra work.Instead of the compiler telling me exactly what something is, what I can do with it, and i...		DarkKomunalec
14594889	11.623109	-7.302549	comment	3.0	12.5	1497969008	-8.7518425	Don't get how any competent programmer can recognize a glaring flaw... type checking. A program without type checking will inevitably lead to less maintainable code.		crimsonalucard
14537708	12.224885	-7.4914007	story	3.0	4.0	1497278482	-12.701509	Ask HN: How will pure functional languages impact the web? (PureScript and Elm)		hultner
14621203	11.9969425	-7.741601	comment	3.0	17.5	1498240501	10.4298935	Working with Haskell is not easy, finding Haskell developer is even worse. So we created the project		avelino
14622552	12.329048	-7.6555037	comment	3.0	14.5	1498250194	-11.184679	It's a bit inaccurate of them to present the results of a 17-year old paper (published in 2000), as empirical evidence that development time in Scheme is shorter. These days there are plethora of lang...		winter_blue
14649023	11.941539	-7.642994	comment	3.0	10.5	1498594918	-9.017403	I would love for an ELI5 explanation of covariance/contravariance, but I've never seen one. I get it now, but only after reading and rereading explanations very carefully.		Analemma_
14659484	11.62508	-7.9670787	comment	3.0	11.5	1498692423	10.207172	I imagine the lifetime savings of having a backend in Go is dwarfed by the one-time cost of such a migration.That's why they invented Hack and HHVM in the first place -- it was a cheap-enough compromise that didn't require rewriting the whole code base.		cbhl
14668719	11.616391	-7.925732	comment	3.0	17.0	1498798635	10.207605	I'm surprised Go doesn't compile down to an IR language where these differences in syntax are represented in a single manner. Seems like different ways to write the same thing.		runeks
14673641	12.137398	-7.6030974	comment	3.0	14.0	1498857204	-11.17537	"Interesting interview. Java is mentioned many times as language Swift aspires to replace. He is right about Kotlin:""Kotlin is very reference semantics, itʼs a thin layer on top of Java, and so it perp..."		geodel
14673912	11.886548	-7.3539076	comment	3.0	15.0	1498861284	7.0783563	> The issues with inheritance based OOPInheritance is just one of multiple facets of safe code reuse in OOP. Aggregation, composition, encapsulation are as are much as fundamental notions in OOP as in...		soulbadguy
14674208	11.803369	-7.2686315	comment	3.0	22.5	1498865302	-8.923965	They all started with dynamically typed languages because that was what the founders knew best when they started working on their project. Yes, you can build successful projects with dynamically typed...		tqkxzugoaupvwqr
14674341	11.804317	-7.3502297	comment	3.0	11.5	1498866977	-8.928375	"> It's just that dynamic languages outcompeted them.All ""trending"" languages are statically typed (Rust, Go, Swift, Kotlin, ...) and all the popular JavaScrip-improved-languages are statically typed a..."		dom0
14674655	11.757468	-7.3599243	comment	3.0	18.5	1498871104	-8.866164	> You even introduce a class of bugs doesn’t exist for statically typed languages.Conversely, you're also able to write equivalent functionality with less code and with idioms you can't use in statica...		gnaritas
14676320	11.79722	-7.2323427	comment	3.0	10.5	1498902920	-8.939354	"Having used many languages over the years, the biggest advantage I've seen to dynamically typed languages is that they're easier to learn.Python and JavaScript are probably the most common ""first lang..."		slackingoff2017
14688953	11.791578	-7.1006503	comment	3.0	13.5	1499095832	-4.8520503	> It also breaks code that does things like poke private member variables in other people's classes.> I also think it'll be worth it.Yeah, it's fun to stick to abstract design principles, until an imp...		TeMPOraL
14690117	11.777254	-7.1032996	comment	3.0	10.5	1499104276	8.753063	"> But why take away my paddle?Because there are upsides -- a major one being proper implementation hiding and (not sure if this made it in:) ""classpath"" isolation.>  I'm not dumb, I understand the ris..."		lomnakkus
14618546	11.632963	-7.906258	story	3.0	53.0	1498219706	2.201797	Black Hat Go – Go Programming for Hackers and Pentesters	https://www.nostarch.com/blackhatgo	grey-area
20353002	11.630098	-7.879195	comment	3.0	11.0	1562232697	10.130402	Java and C# lag behind Golang on most performance metrics. Combine it with the awesome deployment story (single binary) and you'd be hard pressed to choose the former		hactually
20358578	12.136073	-7.483536	comment	3.0	10.5	1562282301	-10.6112175	I love F#, but using F# instead of (type|java)script would add a lot of complexity to my 'full stack'. Let's see I replaced my node.js backend with an F# one, the following issues would arise:1. I now...		lacampbell
20374961	12.336589	-7.0276318	comment	3.0	17.5	1562505851	13.185047	>I LOVED Perl.5 exists and will always exist. :-)		kabwj
20375200	12.052147	-7.1562896	comment	3.0	15.0	1562509482	9.1908	"I pity the guy who has to debug a code base full of:    let newScore = fetch(url)
      |> await #
      |> #.json()
      |> await #
      |> #.ID;"		sametmax
20375525	12.32344	-7.040246	comment	3.0	11.5	1562513001	13.183716	> From the kind of community and values that Perl advocates has always had, arguably Perl 6 is a natural evolution from Perl 5.I think it's fair to say that Perl 6 represents the values of some very p...		microtherion
20376660	12.325726	-7.03352	comment	3.0	14.5	1562523285	13.173703	I was a huge fan of Perl from the early 2000's, in large part because the community around it was eclectic and helpful. Perl was ugly and useful and for a long time the easiest way to get things done ...		idlewords
20365677	12.147224	-7.8882146	story	3.0	90.0	1562359039	-3.2008708	Catlab.jl: Experimental framework for applied category theory	https://github.com/epatters/Catlab.jl	adamnemecek
20405480	11.874284	-7.2876925	story	3.0	11.0	1562786609	7.0144076	Object-Oriented Programming – The Trillion Dollar Disaster ️	https://medium.com/@ilyasz/object-oriented-programming-the-trillion-dollar-disaster-%EF%B8%8F-92a4b666c7c7	ilyasuz
20434517	11.652875	-7.312647	comment	3.0	19.0	1563124484	10.3649645	"Your post is very vague, but Agda and Coq use types to help you gradually write definitions. Agda has ""typed holes,"" where you specify the goal type and the IDE (Agda Emacs mode) will show you the rel..."		TheAsprngHacker
20435866	11.709579	-7.322062	comment	3.0	17.5	1563136965	-6.8436065	Hole-based programming is something I really miss in every non-Agda language I've ever used. In particular, I code professionally in F# in such a way that it should very often be possible for the type...		Smaug123
20439205	11.919825	-7.291702	comment	3.0	17.5	1563182403	7.0113463	After working with ~ 30 odd programmers, I would probably classify myself as a 10x. I think a good chunk of HN'ers are 10x, with imposter syndrome of course.1. Patience - I have the patience to sit th...		foobar_
20449174	11.940067	-7.4432344	comment	3.0	11.0	1563277707	7.1861844	Yes please. More functional programming, less OOP, or if OOP then less design patterns and if possible no documentation or tests.I make a living from untangling poorly written code, and these would me...		trilila
20450892	11.670835	-7.895949	comment	3.0	12.0	1563290442	10.162256	It's the web. It runs HTML, CSS and JS. Wanting to code your web app in anything else is... I don't know... petulant? And wanting to lose HTML but keep CSS seems a little perverse ;)Every language has...		marcus_holmes
20455306	11.6100645	-7.901452	comment	3.0	23.5	1563323417	10.25177	I repeatedly tell people that Go takes twice as long to write and half as long to debug. Unless you write perfect code on the first try, the trade off is probably worth it.		inlined
20455394	11.593358	-7.9731097	comment	3.0	15.5	1563324304	10.227719	I spent years as a consultant reading codebases in different languages. I can tell you that Golang win hands down for clarity of code and structure of projects (and perhaps second after Rust in terms ...		baby
20464224	12.308301	-7.0283537	comment	3.0	10.5	1563398883	13.228353	It's wrong to frame this as resistance to change for no reason.  See my other comment.  I see some of this stuff as repeating mistakes that were made in the design of Perl.  ...but there are quite few...		stakhanov
20465890	11.642763	-7.175652	comment	3.0	11.5	1563413897	-8.252025	A little off-topic but how does that work? Is 'it' a magic variable referring to the first argument? Never seen magic variables that blend into lambdas like that before... would've expected $1 or something like that.		mehrdadn
20492604	11.930556	-7.3697047	comment	3.0	10.5	1563731504	7.0776587	>I believe OOP and relational database get a lot of flack because programmers tend to be bad at design, not because they are broken paradigms.OOP has Fundamental and Intrinsic problems that can be des...		crimsonalucard
20495874	11.911751	-7.3349557	comment	3.0	11.0	1563779237	6.9917283	So if oo uis so bad, exactly what is better?What should I be programming with?		blodovnik
20497218	11.691903	-7.3268642	comment	3.0	15.5	1563797546	7.309103	"""In your example you are explicitly breaking factorial. In my example I'm just defining `pred`, and it's unexpectedly and implicitly breaking factorial.""In all mainstream languages with OOP features m..."		protomolecule
20497571	11.925153	-7.0501847	comment	3.0	12.0	1563800541	4.563387	maybe he was a Java programmer?all joking aside, the reason he's doing classes seems to be an intention towards making a FooStep (and/or a BarStep) which could then maybe handle generic Foo stuff (authentication comes to mind) in the future?		naringas
20477895	11.912875	-7.6817083	story	3.0	46.0	1563537821	10.375353	Dimensions and Haskell: Singletons in Action	https://serokell.io/blog/dimensions-haskell-singletons	NaeosPsy
20493431	12.278353	-7.5151963	story	3.0	95.0	1563740526	12.829203	Partisan: Scaling the Distributed Actor Runtime	https://www.usenix.org/conference/atc19/presentation/meiklejohn	mpweiher
20507365	12.010839	-7.148704	comment	3.0	12.0	1563894944	-9.900312	Is there a good resource that shows the ideal use of prototypal inheritance? I imagine that the ideal use is not mimicking class-based inheritance, or is it?I mean if you have an array of things and y...		jolmg
20508128	11.994856	-7.7458553	comment	3.0	11.0	1563900440	10.431073	I doubt there are many Haskell developers (or one at all) without a academic background ..		hutzlibu
20511032	11.787646	-7.101826	comment	3.0	20.0	1563923292	9.17245	You're missing C#/.NET which has had async/parallel programming constructs for a long time, and served as the model for await/async copied by many other languages.It's gone through several design patt...		manigandham
20520080	11.627555	-7.9512024	comment	3.0	11.0	1564004408	10.169335	Why would I need a Go Interpreter? What advantage does it provide over using a precompiled binary?		forgot_old_user
20546606	11.663836	-7.61779	comment	3.0	13.5	1564306024	10.102112	"> without... letting people being able to abuse them. C++ cough cough.Curious what you consider ""abuse"", given the standard library itself uses generics in all sorts of ways?"		mehrdadn
20554239	11.633861	-7.846592	comment	3.0	14.0	1564406007	10.201328	I haven't been following these proposals and I want generics of some kind in Go (I've had my fill of code generation), but good God does the proposed syntax of using parentheses for yet another thing ...		cjslep
20554508	11.636548	-7.974942	comment	3.0	20.0	1564407942	10.263344	I don't like this at all. This is a classic example of a feature where, in the right hands its very powerful, but in the wrong hands it will ruin the simplicity of the logic it touches. Go's magic was really in its ability to be placed in the wrong hands and still end up with a serviceable program.		013a
20577274	11.655875	-7.952898	comment	3.0	12.5	1564600563	10.330255	"    Go 3: Why HKT?
    Go 4: Why homoiconicity?
    Go 5: Why uniqueness and borrowing?"		moomin
20577338	11.641567	-7.936562	comment	3.0	11.5	1564600894	10.222882	That's because you write a particular kind of program. Notice that there are no good ORMs or numerical libraries. Both of these are use cases for generics. Of course it doesn't help that the go commun...		mlevental
20561136	11.938275	-7.4575067	story	3.0	11.0	1564448472	7.2572436	Functional Programming? Don’t Even Bother, It’s a Silly Toy	https://medium.com/@ilyasz/fp-toy-7f52ea0a947e	leandrotk
20577978	11.665887	-7.6260567	comment	3.0	12.0	1564603951	10.148938	This. If I really need generics I'll use a different language.		tylerflick
20582083	12.350079	-7.041122	comment	3.0	15.0	1564648105	13.19238	Looks like peak Perl was about 2012-2014. :(		gpvos
20588672	11.7489	-7.223583	comment	3.0	11.0	1564695891	9.334189	each of which becomes a classWasn't part of the whole thing with lambdas that they don't all become individual classes?		pvg
20591909	11.768413	-7.3566008	comment	3.0	11.5	1564742237	-8.856732	Type inference does not compromise on static typing. It simply makes it less verbose. IMHO type inference has removed a lot of the arguments against statically compiled languages. Which is why things like Typescript are becoming popular. Even Python has type annotations now.		jillesvangurp
20607688	11.698264	-7.803876	comment	3.0	11.5	1564937774	10.187438	Absolutely terrible. I can see why data science types who use / produce a lot of (typically throwaway) Python code might be enamored with this, but as far as the Python language goes, functorflow will...		armitron
20611246	12.025768	-7.8198404	comment	3.0	12.0	1564978779	10.440714	> I'm fifteen years old with good knowledge of mostly high school level math, and may have missed some parts.Kabir,Great work on getting this done. I wonder if looking around for and mentioning the si...		peteretep
20627010	11.940861	-7.462399	comment	3.0	12.0	1565110490	7.2302403	This feels very much like the author tried to use functional programming to solve a particular problem, got bit by it, and is now raging that the tool is broken.I'm not in favor of functional programming everywhere, but it's a valid tool in the toolbox.		bovermyer
20656444	11.912197	-7.633134	comment	3.0	10.5	1565371511	10.385307	Has it ever occurred to you that Haskell programmers prefer single-letter variable names in some contexts because it makes the code better? Perhaps it is not the children who are wrong.		chowells
20652432	11.818469	-7.315491	story	3.0	15.0	1565340831	6.9851146	Solid in Java: Liskov Substitution Principle	https://puradawid.pro/java/solid-in-test-automation-liskov-substiitution-principle.html	puradawid
20601428	11.921306	-7.4234457	story	3.0	55.0	1564852004	7.2959633	ICFP (International Conference on Functional Programming) 2019 Proceedings	https://dl.acm.org/citation.cfm?id=3352468&preflayout=flat#prox	matt_d
20672807	11.796967	-7.14821	comment	3.0	11.0	1565589361	-8.828502	">  I'm not really sure what your point is in criticizing ""farming"" to C.If Python is so great how come it can't even express a decent data structure that it needs? I'll happily level the same criticis..."		KirinDave
20673123	12.024244	-7.751272	comment	3.0	13.0	1565593465	10.411949	F#, OCaml and HaskellCan I quickly prototype a new deep learning model and scale it to a 32 GPU cluster with very little effort in those languages?		p1esk
20676608	11.736798	-7.165094	comment	3.0	11.0	1565625448	-8.969397	Python is a dynamic language, that's what dynamic languages do, you don't have a type checker but have greater flexibility, but you don't have to settle on that, you can actually use mypy and annotate...		takeda
20712821	12.00217	-7.746875	comment	3.0	19.0	1565939314	10.413805	> Why Dependent Haskell Is the Future of Software DevelopmentI find this hard to believe, considering probably less then 1-2% of developers in the world have any clue to what this article is about.		kasperni
20714684	11.716439	-7.424308	comment	3.0	15.5	1565960268	-8.713047	"1. No type inference (unlike ML-style types).2. Oracle problem: In practise you never have full specifications (let me be
  provocative: Facebook has no specification in principle, only its ever chang..."		9q9
20716448	11.823791	-7.45835	comment	3.0	16.5	1565970973	-8.676861	Not only do I not dislike type theory vehemently, I really like some of its uses (like linear types; don't believe me? I praised them in a recent talk: https://youtu.be/r6P0_FDr53Q?t=553). I'm not too...		pron
20718064	11.752286	-7.404873	comment	3.0	13.0	1565980067	7.084233	> I don't think human programmers have any hope of ever being able to maintain noncompositional program properties for nontrivial programsWe do it all the time. Whatever it is that you want your progr...		pron
20721533	11.711508	-7.329183	comment	3.0	10.5	1566008067	9.085041	"Thanks. Helpful.  My question is, in this example:    result = await server.getStuff()
    second = await server.getMoreStuff(result+1)
    print(result)

`await getStuff()` MUST terminate before `awa..."		2bitencryption
20744095	12.2151165	-7.624645	comment	3.0	11.5	1566279165	11.917998	"I lost so many weeks trying to decode the fk of the code written in scala with so much ""magic"" in it.
And I'm working with a colleague to ""unmagic"" it in our source base."		_ZeD_
20743998	12.223992	-7.6203465	comment	3.0	17.5	1566277627	11.920543	For me Scala was never about using a Java++.If you want Java++, the best Java++ is still Java with a bunch of libraries. You don't need a new language for that.Kotlin's succes is effectively because G...		bad_user
20772033	12.134162	-7.8797474	comment	3.0	11.5	1566505490	-3.1636107	"Jean-Pierre Marquis, in his contribution to the volume ""What is Category Theory"", wrote: 'Category theory is the Architectronic of Concepts'.I think this is the best way I have heard it put."		codekilla
20776586	12.507764	-7.8117394	comment	3.0	15.5	1566561730	-10.875354	Can anyone give a pro/cons analysis of a ML variant versus of a Lisp variant. Let's say F# versus Clojure?One of the general arguments in Lisp vs the world is that lisp is more concise. F# is really c...		fsloth
20781092	11.920237	-7.3480287	comment	3.0	13.5	1566586071	7.0707817	It's an excuse to over-engineer. OOP encourages developers to over-think object hierarchies and build baroque code that is prematurely generalized.There is nothing intrinsically wrong with OOP and it ...		api
20781681	11.945781	-7.400773	comment	3.0	17.0	1566588839	7.1088233	I grasped the concept of OOP pretty easily. Can't say the same about FP.		p1esk
20782510	11.704895	-7.276925	story	3.0	67.0	1566594046	-7.143676	Kei – A small and expressive dependent language	https://github.com/caotic123/Kei	caotic
20824462	11.78709	-7.3580437	comment	3.0	13.0	1567029547	-8.910383	I've found that the kinds of errors that static typing guards against are often things that would have been trivial to debug and fix in the first place (mostly things like typos).Given that you have a...		lewisl9029
20824815	12.138168	-7.0648932	comment	3.0	21.5	1567032140	-9.745831	I've been using Typescript for the past year and it's definitely one of the best typing systems I've used (Rust might be up there too - once I've conquered the battle of the borrow checker). The way i...		Humphrey
20829483	12.344028	-7.0447545	comment	3.0	10.5	1567086887	13.175903	Maybe Perl 5 should be renamed to Perl 7...		pvaldes
20829677	12.301239	-7.01993	comment	3.0	13.5	1567088211	13.177718	As a non-perl programmer, the mnemonic descriptions in the perlvar manpage crack me up. They probably are useful and make sense to perl programmers, but from the outside, they look like parody.		coldpie
20830404	12.263725	-7.057126	comment	3.0	17.5	1567092904	13.100698	> The insistence on branding sub-components of it and exposing that branding. Yes, it has a VM. Yes, it has a compiler. But why do people talk about ParrotVM and Rakudo as if they're different things?...		kbenson
20829524	12.34264	-7.0713096	comment	3.0	23.5	1567087160	13.163801	There's no saving Perl 5; it's a legacy language in legacy maintenance mode for good reason.Renaming Raku/Camelia could help that language quit being saddled with the perception that it's also legacy in the same way, though.		mkozlows
20832341	12.348428	-7.0496516	comment	3.0	11.0	1567103812	13.173383	"> if you insist on a language that is Perl-like but also modernHere's your perennial reminder that the word ""modern"" is a thought smell.> it's a language with a small ecosystem that doesn't seem to pr..."		wwweston
20838343	11.600664	-7.954692	comment	3.0	16.5	1567171659	10.192334	For anybody wondering if vgo is production ready, we've been using it since it came out in go 1.11 and so far didn't have any problems.Existing workflows don't break because there's the vendor command...		cube2222
20869492	11.708006	-7.769239	comment	3.0	17.0	1567534881	10.176454	I occasionally use Python for large-scale processing of structured data (XML, JSON) and the data's really messy as you'd expect (malformed responses, missing fields, normalisation, etc..). One of the ...		cameronbrown
20870050	11.620747	-7.895368	comment	3.0	18.0	1567538031	10.151325	Would it be fair to say that Go's concurrency support makes it a good match in the network services space? I see Go more often in Docker and cloud contexts.		sime2009
20871093	11.848801	-7.170585	comment	3.0	10.5	1567544295	8.749717	"Java got async I/O in 2002, generics and ""for (x : iterable)"" in 2004, and lambdas in 2014. Vintage 2001 Java was drastically harder to read and slower, though error handling was always less cumbersome than Go."		erik_seaberg
20877208	12.444935	-7.4718285	comment	3.0	13.0	1567605245	-10.621681	Yes please!  I would absolutely rather use ReasonML than TypeScript or JavaScript; so I hope it gains a lot of traction.I'd still rather use ClojureScript, though.		blunte
20877729	12.385524	-7.541598	comment	3.0	12.0	1567608960	10.376769	ReasonML is also just Javascript in the end, dealing with the same platform limitations.		gridlockd
20921513	11.67606	-7.2581387	comment	3.0	13.0	1568057428	7.067392	Imagine adding object orientation to the C and Scheme programming languages. Making Scheme object-oriented is a sophomore homework assignment. On the other hand, adding object orientation to C require...		protomyth
20924838	11.911404	-7.6389594	comment	3.0	10.5	1568086737	10.436621	"""Declarative"" is a means to an end. Imperative gets you there at the same rate. Garbage collection compensates for inadequate resource management facilities. Currying is a neat trick that is fun when ..."		ncmncm
20947286	11.620688	-7.8210206	comment	3.0	15.0	1568255797	10.195255	The fact that Go is slower than C# really amazes me! Not long ago I switched from C# to Go on a project for performance reasons, but maybe I need to go back.		azhenley
20964363	12.223433	-7.593208	comment	3.0	19.5	1568396237	11.905716	Cool project, but why engage in language flame war on the project readme:> I think Scala is the best mainstream language with a sophisticated type system. Sophisticated type systems are money in the bank. Going from TypeScript to Scala is like going from JavaScript to TypeScript.		mihaifm
20912258	12.224386	-7.5962253	story	3.0	32.0	1567966426	11.90444	Scala on Track to Support Java 9 Module System	https://github.com/scala/scala-dev/issues/529	AheadOfTime295
20984473	11.652965	-7.9345064	comment	3.0	18.0	1568644657	10.208049	Whenever I used the word `simple` I did it not to mean easy. You raise a good point and I agree that simplicity != ease. I think it's a well known point of discussion from rob pike and, although less ...		kristoff_it
20984503	11.64179	-7.833143	comment	3.0	11.5	1568644832	10.08853	"""beating Go by an order of magnitude.""This is not what happend, Go was faster until batch size was > 16 then C# took over, but still C# latency was 2-3x higher than Go in every benchmarks.Also C# / Ja..."		Thaxll
20986230	11.742557	-7.4702573	comment	3.0	10.5	1568653839	-8.647984	Yeah but you can't implement it generically.That means for every conceivable input type and output type combination you have to have a new MAP or REDUCE function to handle it.All Modern languages exce...		crimsonalucard
20987747	12.383761	-7.412036	comment	3.0	11.0	1568662479	12.830453	> Then I learned that the Achilles' heel of the BEAM VM is that if native code crashes it takes the whole thing with it,That's not really an 'Achilles heel' any more than most other languages that all...		davidw
21002816	12.033347	-7.7671814	comment	3.0	13.0	1568787993	10.392998	You claim that OCaml programmers are already versed in category theory but that’s not correct. The first exposure usually comes with concurrency libraries such as Lwt which isn’t very old nor in the s...		TurboHaskal
23776747	11.947191	-7.55312	comment	3.0	17.5	1594266363	-10.3218565	As long as you use a language with a good, static type system, I don't care so much what you use. TypeScript or Rust, for all I care you can transpile Haskell into JavaScript if you feel adventurous. ...		anyfoo
23777042	11.778036	-7.3367195	comment	3.0	10.5	1594270191	-8.889432	"> But don't useThis is just cargo-culting static typing: ""If I avoid dynamic typing at all cost, the cargo crates will surely rain on down!""You'll find that picking a language is more of a business de..."		hombre_fatal
23777419	11.936629	-7.370037	comment	3.0	13.0	1594275092	7.0025177	">  ""just ship it"" is just as dumb as ""never ship it"". Why are people so prone to these oversimplified polarazations?Honestly? I think people (in the general sense) are constrained to the amount of com..."		noir_lord
23795792	11.90973	-7.639718	comment	3.0	13.0	1594411524	10.433625	"Why not let the computer do the work?  My programming flow in Ocaml
has always been:(1) Hack until I've got something stable. Note: at the start of coding I typically don't quite know what the right a..."		GregarianChild
23796004	11.794929	-7.6622005	comment	3.0	10.5	1594412575	10.195057	In that case maybe generics aren't a compile time killer. (Although I'm quite curious how the OCaml compiler compiles so quickly).		dwohnitmok
23796874	11.793642	-7.5025587	comment	3.0	13.5	1594417433	-8.543616	I've never written Haskell but I'm a Agda programmer (a Haskell dialect with dependent types) and I almost always put all the types and don't rely on type inference. The obvious exception is if someth...		gnulinux
23799238	12.185675	-7.84848	comment	3.0	12.0	1594438438	-3.3044033	Yes, the topic/knowledge taxonomy is an important part of it. There are ideas from ConceptNets to Faceted classification. For now, I have taken a pragmatic call to have maximum two parent topics for e...		mathnmusic
23840482	11.669737	-7.6708927	comment	3.0	10.5	1594779488	10.247565	Let's be fair, they held out against a very vocal community for a very long time.They used that time to carefully evaluate the utility and ethos compatibility of generics. And they're taking time thou...		nkozyra
23840652	11.634576	-7.910236	comment	3.0	11.5	1594781221	10.176006	> type ImmutableTreeListᐸElementTᐳ> If you look closely, those aren't angle brackets, they're characters from the Canadian Aboriginal Syllabics block, which are allowed in Go identifiers. From Go's pe...		ed25519FUUU
23841034	11.65138	-7.947552	comment	3.0	11.5	1594784466	10.2221	If go gets generics I will never use it again.		Chloro
23841394	11.651831	-7.83753	comment	3.0	11.0	1594788056	10.199428	Honest question; why use a comparatively exotic syntax for generics? Most other similar languages — Java, C# — and perhaps most notably C++ since its the closest analogue in terms of paradigm and doma...		verandaguy
23874507	12.295852	-7.236555	comment	3.0	10.5	1595014381	-10.30615	Seems like a neat idea. I've always wanted a tiny LispOS or SmalltalkOS that I could carry around and use on a Pi. I just wish it would also have the modern necessities like web browser...etc.		7thaccount
23924920	11.73265	-7.3905115	comment	3.0	11.5	1595488424	-8.758204	"I like efforts like this that try to use different wording to explain the same concepts. That said, this document still uses words I would not consider to be ""simple English"".There are many such cases..."		prerok
23934448	11.6226	-7.9554424	comment	3.0	25.5	1595551575	10.207814	That’s showing some real support to the community IMO.There are plenty of purists that argue both for and against the concept but one cannot deny it fits very well in the sales pitch for Go. You can h...		leetrout
23896251	11.989093	-7.51264	story	3.0	3.0	1595238169	7.2608275	Ask HN: Why Learn Functional Programming		mraza007
23990400	12.482401	-7.079512	comment	3.0	13.0	1596049369	12.384527	> I’m surprised they didn’t opt to do this inline with the rest of the ruby code,As they mention in the post, they followed typescript's approach, here.  The benefit is it allows you to layer in typing into an existing codebase in a non-disruptive way.		CarelessExpert
23990680	12.489064	-7.0771475	comment	3.0	11.5	1596051081	12.387616	I'm not thrilled about the separate files with the type information but I completely understand why they did it, and if it were my choice I might make the same one.I don't like the comparison with Typ...		freedomben
23991260	12.489413	-7.0186615	comment	3.0	12.5	1596054737	12.363187	I don't use ruby, I am genuinely interested - why is it great? I'm assuming if it were ever allowed, it would be a use-at-will feature and wouldn't affect anyone who didn't use it. Typescript has prob...		fimbulvetr
23991524	11.800411	-7.339399	comment	3.0	11.0	1596056278	-8.981069	Not having types is a virtue for the web, where interfaces can change in weird ways. Dynamism leads the engine and the JS code to be less tightly coupled. So, there’s more wiggle room for evolution in...		pizlonator
23992023	11.689167	-7.3291235	comment	3.0	10.5	1596059851	-8.776425	> I'm surprised that it does not seem to have syntax for type definitions in codeThis is a big disappointment to me, one of the main advantages of static typing is that it can make code much easier to understand when types are added to non-obvious method parameters.		ric2b
23998069	12.000244	-7.760067	comment	3.0	11.5	1596117018	-10.774044	"To someone not familiar with  Haskell funding, can anybody explain the quote below?""For a while it has been a public secret the Haskell ecosystem has become increasingly entangled with an unsavoury va..."		praptak
23999808	11.998144	-7.231095	comment	3.0	12.5	1596125428	9.220287	"While the idea is correct, the proposed solution is needlessly verbose. A better solution would be to  async function getPeople() {
    const [members, nonMembers] = await Promise.all([
      fetch(""/..."		Etheryte
24008858	11.850627	-7.2605724	comment	3.0	11.5	1596205690	7.0357714	Agreed. The biggest problem with OOPS lies in its original premise: that code and data should be the same thing!This is grevious error, IMHO, that leads to nothing but problems: endless boilerplate co...		mimixco
24010628	11.830101	-7.218023	comment	3.0	11.5	1596214476	8.930983	Hash maps hide lots of internal state though.  I think the difference is hash maps have a clear, battle tested API and its obvious what should be promised by the interface and what should be internal ...		jayd16
24017920	11.871118	-7.1210017	comment	3.0	11.0	1596260070	-10.75181	"Something like this should work, no? Only run the coroutine if you won the race.    D = {}
    async def maybe_initialize():
        global D
        this_setup = asyncio.ensure_future(one_time_setup(..."		mgraczyk
23956315	11.705267	-7.322591	story	3.0	76.0	1595763500	8.152341	Demystifying MLsub – The Simple Essence of Algebraic Subtyping	https://lptk.github.io/programming/2020/03/26/demystifying-mlsub.html	panic
24031155	12.063913	-7.790606	comment	3.0	11.0	1596397950	10.44005	I don't know if I'd call OCaml dead simple. It's full of inconsistencies and bolted-on features that are practically useful but definitely not simple or elegantly designed. It's kind of like the C++ o...		millimeterman
24050650	11.676781	-7.240402	comment	3.0	23.5	1596553273	9.275166	I just wish there was nested functions instead of these lambda classes.		rightbyte
24051632	11.652209	-7.052154	comment	3.0	13.0	1596558817	-7.131118	"A slightly saner syntax, compared to:  const auto iAmANestedFun = [stuff](stuff) -> stuff { ... }

Particularly, if we could assume that nested functions automatically and properly capture the arguments to the parent function."		TeMPOraL
24056969	12.020539	-7.782354	comment	3.0	17.0	1596597701	10.38162	It's unfortunate that so many people in the software profession have a negative attitude towards these concepts. Despite its unfortunately alien name, monad  is a great abstraction for patterns that c...		greydius
24058245	12.024941	-7.806624	comment	3.0	14.5	1596613517	10.411109	I don't have a negative attitude towards the concept of monads nor one informed by its funny name (where did you even get that notion? Programming is filled with jargon).I do have a bit of a negative ...		ezrast
24058975	12.097068	-7.7739606	comment	3.0	11.5	1596621388	1.3358458	"These posts always seem so damn interesting, but I get lost very early on.  In this case it was at ""Product is functorial in both arguments so, in particular, we can define a functor"".Any suggestions for introductory material that might help me appreciate Milewski's writings?"		omginternets
24060926	11.669398	-7.1623654	comment	3.0	12.0	1596636673	8.473899	No runtime has a better GC than Java's, certainly in the current version (14) which is worlds better than Java 8. The reason you don't think about it in other languages is because if you use other languages, you probably don't care too much about performance in the first place.		pron
24061086	11.904219	-7.3333025	comment	3.0	14.0	1596637422	-6.6565294	Those sentences form the opening of a rather peculiar paragraph. You don't have to read past the abstract of the seminal paper on functional programming, Backus's Can Programming be Liberated from the...		mumblemumble
24066030	11.648853	-7.9798775	comment	3.0	15.5	1596664284	10.225087	The best thing about Go is how things are designed thinking ahead in the future and avoiding hypes.Instead of a language with more features than one can count, we have something really concise, yet po...		henvic
24069009	11.905326	-7.8402596	comment	3.0	11.0	1596701282	10.408335	Everything old is new again. This challenge is basically why monads exist, because the monad allows you to cleanly separate between the state in which the algorithm is running and the algorithm itself...		solatic
24069777	12.001355	-7.1741133	comment	3.0	11.0	1596710908	9.0616665	The reason why async/await is a good fit for Javascript is that it neatly wraps up asynchronous callback hell and Promises, which were already ubiquitous in Javascript code, because the web runtime enforces non-blocking IO.		gridlockd
24082539	11.6736145	-7.390406	comment	3.0	16.0	1596812255	9.158969	The article explains that the primary benefit of user-mode green-thread fibers is not switching speed, but that they are much cheaper than OS threads, so you can have many more of them. The costs are ...		vii
24055340	11.834805	-7.2351804	story	3.0	2.0	1596581338	6.813471	Change my view - Half the design patterns are due to Static Typing &...		techsin101
24099221	12.031798	-7.677566	comment	3.0	20.5	1596976926	10.348829	The thing that's always turned me off Haskell is language extensions and the associated fractal fracture of the language. Sorry, I don't want to learn a dozen different styles of a language.PureScript...		rattray
24118147	11.646249	-7.960193	comment	3.0	26.0	1597132270	10.155377	"The workarounds one goes through to avoid native frameworks.""Hands-On GUI Application Development in Go: Build responsive, cross-platform, graphical applications with the Go programming language""https://www.amazon.de/-/en/Andrew-Williams-ebook/dp/B07GYLYS..."		pjmlp
24158731	11.790544	-7.121011	comment	3.0	10.5	1597417046	-8.939263	"Whenever I read articles like this, I happily reflect that C# is such an excellent language to work with that these tiny complaints (I would hesitate to call them ""issues"") are the only ones popping u..."		ThePadawan
24158828	11.801439	-7.1756496	comment	3.0	11.5	1597417474	-8.579664	"Everyone's chiming in with ""you should always use 'this' because it's more explicit"", which I personally tend to agree with. But there is a dimension to this that may not be obvious to people who don'..."		brundolf
24161740	11.918502	-7.0955815	comment	3.0	13.5	1597430925	9.243157	Great article. But I think this part may need as second look:    If your views involve heavy-lifting calculations or long-running network calls to be done as part of the request path, it’s a great use...		silviogutierrez
24168585	11.939744	-7.432379	comment	3.0	10.5	1597496911	7.172824	One of the reasons Linus cites for disliking C++ is he dislikes C++ programmers. He considers the average C++ programer to be of much lower quality than the average C programmer. And I don't really do...		pbw
24196945	12.141123	-7.8827457	comment	3.0	10.5	1597745011	-3.213968	I don't believe the exposition is written well (judged as either an exposition of linear algebra or just the graphical calculus the article develops). But this is perhaps a subjective point, and other...		spekcular
24196402	12.220166	-7.4840217	comment	3.0	16.5	1597739298	-11.389669	Really good to see these changes. Kotlin is a great language to work with, it has the stability and performance of the JVM and it writes like Ruby / TypeScript. I wish more companies were adopting it as their core language and it is not just limited to Android development.		rockyj
24197239	12.24774	-7.5500345	comment	3.0	13.5	1597748264	-11.391831	As a guy who has written a lot of modern JS but was working in a JVM-only shop (all tooling etc assumed services were running on the JVM), Kotlin was like a breath of fresh air. Doesn’t go as FP as Sc...		kevsim
24197480	12.2425	-7.518408	comment	3.0	18.0	1597750564	-11.376931	I've honestly never heard anyone say that. Since Spring 5 it's pretty clear there's some interest in server-side Kotlin; there are several heavy-weights behind that.However, it's fair to make a distin...		hocuspocus
24197866	12.223472	-7.52697	comment	3.0	11.0	1597754194	-11.370996	Because Android is Kotlin's selling platform, on the JVM it will be as relevant as Beanshell, jtcl, jython, clojure, scala, and many other guest languages.Guest languages relevance always fades away a...		pjmlp
24197998	12.235692	-7.562078	comment	3.0	14.0	1597755252	-11.396132	Replacing current courtoutine implementation to use Loom threads or inline classes to use Valhalla are both implementation details that should not at all change the user facing API and complexity.Your...		The_rationalist
24198183	12.244793	-7.516143	comment	3.0	23.0	1597756679	-11.378983	I think JetBrains thinks too much of themselves, fueled with Google wind, they are now trying to turn Kotlin into a platform of their own, and as proven by Kotlin/Native, their expertise is really jus...		pjmlp
24241561	12.293066	-7.3178387	story	3.0	88.0	1598070824	7.04299	Stef's Free Online Smalltalk Books	http://stephane.ducasse.free.fr/FreeBooks.html	triyambakam
24255435	11.748825	-7.089927	comment	3.0	27.0	1598218196	6.9673896	"Okay, here you go. Find (& explain) the bug in this class definition:  class A(object):
    def __init__(self):
      self.x = 1"		mehrdadn
24258789	11.629825	-7.7734447	comment	3.0	16.5	1598260369	10.157947	It ignores some historical bad design decisions, the worst of them being having null in the language, the famous one billion dollar mistake. And well, no support for functional/immutable data structur...		bruhlollol
24259721	11.668315	-7.946883	comment	3.0	14.0	1598269755	10.240887	Thank you. I am just beginning to learn Go. This will be very useful to me.If anyone knows similar notes for Python & C#, please reply.		mylinkedlist
24272377	12.09694	-7.8633914	comment	3.0	15.5	1598369492	10.46508	Yep, and they use OCaml! I always feel like I have to point it out since people do not think much of it, have lots of misconceptions of it, and so on.		johnisgood
24285121	12.028245	-7.7939267	comment	3.0	12.0	1598464321	10.411759	As someone who uses 90% OCaml for work, I would strongly recommend learning Haskell instead. There are only a few very narrow fronts where I prefer OCaml, mostly to do with some aspects of the module ...		centimeter
24297115	11.640557	-7.9354515	comment	3.0	11.5	1598553890	10.244843	Go as a new language is a mega success.K8s, docker, native concurrency, robust std lib, list goes on.Obviously, not the magical swiss army knife for all engineering use cases, but successful in a lot ...		game_the0ry
24303914	12.078407	-7.8476887	comment	3.0	11.0	1598616719	10.47444	Anyone cross-compiling OCaml with OpenEmbedded and Yocto?  The security properties are attractive for IoT and embedded, but it's an ongoing challenge to build the OCaml toolchain from scratch and buil...		transpute
24325137	11.632376	-7.9158244	comment	3.0	11.5	1598814856	10.173959	If the Go team made Goroutines types like ADA tasks, nobody would have to deal with any of the problems people using Goroutines have to deal with. This is yet another short sighted design decision mad...		throw_m239339
24260736	11.876894	-7.080957	story	3.0	67.0	1598277800	-10.741457	Minotaur: A pythonic, asynchronous, inotify interface	https://github.com/giannitedesco/minotaur	scaramanga
24332023	12.037355	-7.793349	comment	3.0	14.0	1598885518	10.455619	"The author lists Ocaml as ""non-IDE-friendly."" This is not my experience. Ocaml is one of the most IDE friendly languages I have in my toolkit right now -- not just functional languages, but all of the..."		gmfawcett
24332206	12.081253	-7.80241	comment	3.0	11.0	1598886455	10.433049	Compare that to JavaScript where you can literally just install vscode and node and you’re up and running. Not to mention that you could pop open a console in any browser and execute code.I love OCaml...		hashbig
24332293	12.129481	-7.5000944	comment	3.0	10.5	1598886933	-10.596698	The author lists F# as not IDE friendly. I find this categorization inaccurate.F# works great with Visual Studio, and especially well with intellisense.F# was designed as industrial language from the ...		fsloth
24333311	11.986916	-7.7731843	comment	3.0	13.0	1598892717	10.39769	"I'd prefer readability to suffer because the fold over a monad needs something clever that requires a bit of reasoning to understand than because vast amounts of ""readable"" boilerplate (for example, trivial getters and setters) hide a needle in a haystack."		HelloNurse
24354415	12.140397	-7.88185	comment	3.0	16.5	1599061991	-3.1788323	"""We will assume no background knowledge on behalf of the student, starting from scratch on both the programming and mathematics.""This is a fantastic ""side effect"" of the fact that category theory isn't built on any other mathematical knowledge. You don't even need even any arithmetics for that."		mcalus3
24357359	11.733116	-7.108093	comment	3.0	11.0	1599076867	7.1754684	I think multi-paradigm is better. I hate that in Java I have to have classes to do most things. Whereas in C I can just have a function. I wish more languages approached things like D or Python. Let the developer figure out what they actually need and fully empower them.		giancarlostoro
24357954	12.145584	-7.3358054	comment	3.0	10.5	1599079592	7.116782	"I consider ""true OOP"" what SmallTalk introduced. And the most fundamental thing in SmallTalk OOP is the encapsulation of complexity in the idea of an object, and the ability to pass messages to such o..."		antirez
24358931	11.781755	-7.277233	comment	3.0	11.5	1599085671	-8.877108	> I feel like I can confidently say structural typing, in practice, is MUCH easier, better and fun to work with than nominal typing.Structural typing is crazy flexible, but you pay for it with worse t...		seanmcdirmid
24360983	11.63996	-7.911917	comment	3.0	19.0	1599110265	10.181244	Go just sells itself well.Languages that _actually_ make concurrency easy, such as Haskell, Scala, OCAML or distributed concurreny easy (Erlang/Elixir) are way ahead of Go but are not as hyped and are not marketing themselves as well.		valenterry
24361006	11.595214	-7.9276314	comment	3.0	15.5	1599110727	10.167128	I’ll bet your Go code, if it isn’t trivial, has race conditions all over and you just don’t realize it.		jshen
24361902	11.971278	-7.380645	comment	3.0	12.5	1599121394	7.028614	> OOP doesn't have formal foundationsFor a person trying to decide if they should learn OOP or not, I believe the above statement (along with the entire comment) is exactly what parent comment is talk...		scoutt
24386150	11.627433	-7.0621433	comment	3.0	10.5	1599333449	-5.2994742	These are names for products though, not programming concepts. A more accurate analogy would be calling a class a Kay template or calling a for loop a Lovelace construct. And it's great that we don't do that.		bsza
24399018	12.122797	-7.6922483	comment	3.0	11.5	1599482377	-3.485932	I think you're right - according to category theory, only relationships of the objects matter, not the objects themselves.		asgard1024
24404960	11.983894	-7.771033	comment	3.0	11.0	1599535727	10.404276	I would say tooling is the main reason haskell is not adopted even in personal projects much. The package manager used to be pretty bad, poor editor support is still the biggest obstacle for new-comer...		xfer
33092880	11.71949	-7.3098536	comment	4.0	21.0	1664959309	9.182299	> The point of async APIs is not speed boost, it's decoupling processing from the local call stackYou can do the same with goroutines/green threads/virtual threads, without putting the burden of diffe...		bheadmaster
33147307	12.268978	-7.2873654	comment	4.0	15.5	1665370521	7.1091847	In what sense is Smalltalk smaller than Lisp?		AnimalMuppet
33160444	11.592785	-7.926892	comment	4.0	17.0	1665473971	10.230744	I'm an experienced Go programmer and still accidentally do this every so often. It certainly bit me and my team several times when we were newish to Go. And particularly for newbies, it's hard to debu...		benhoyt
33192467	12.238438	-7.647412	comment	4.0	11.0	1665675447	11.905441	scala is dead last. btw his script is 167 lines of clean well written python. i can rewrite that in 16 lines of scala using http4s and cats or whatever dsl is hot these days in scalaland. fwiw, probably that’s why scala is dead last :)		dxbydt
33221606	11.773349	-7.2275496	comment	4.0	12.5	1665902916	9.135621	Needs asynchronous libs to adopt it		v3ss0n
33222023	12.260985	-7.512904	comment	4.0	10.5	1665908211	-11.396149	I couple of years ago I was lucky to use http4k, a server as a function web library for Kotlin. It was such a wonderful change compared to every other technologies available in both Java and Kotlin. I...		AugustoCAS
33222597	12.103702	-7.484814	comment	4.0	14.5	1665916200	1.8100905	The background here is that someone did a FOI request for the announcement audioWhatever the other merits of this project, I'd like to know the motivation behind the FOI - I really dislike it being used for trivial reasons.		mellosouls
33255873	12.26065	-7.292072	comment	4.0	20.0	1666138935	7.062051	People are still using the same screwdrivers and screws they used a hundred years ago. Phillips head isn't even that good - you can easily strip the head over a few uses, or even one, if you don't kno...		pie_flavor
33269484	12.293217	-7.271258	comment	4.0	10.5	1666225581	7.0439034	I read most of the website, and I still have no idea what this is? Is this a Smalltalk IDE? Some kind of static analysis software?		HexDecOctBin
33296933	11.862472	-7.155172	comment	4.0	10.5	1666433360	-10.776245	Async is overengineered and bolted on. If you must use Python, I'd still recommend Twisted, which is more accessible. Otherwise, of course use Go, Elixir, etc. in the first place.		landersg
33299128	11.60142	-7.9190345	comment	4.0	21.0	1666452829	10.166866	If you're making something requiring CPU optimization as a core feature, you might as well go with one of the fastest languages instead of handicapping your project from Day 1. Go is not considered one of the fastest. It's better for network or filesystem logic that is I/O limited.		xyzzy4747
33318828	11.947167	-7.7028084	comment	4.0	14.0	1666628933	10.41661	One of the nice features of IHP is that, thanks to Haskell’s strict type checking, it does not just eliminate bugs, it also speeds up development. E.g. if you want to change or build a new feature, yo...		njrc9
33328732	12.195788	-7.468247	comment	4.0	15.5	1666694558	-11.3670635	Why not just java? I thought it caught up to kotlin in the past few years		mardifoufs
33329698	12.261273	-7.560506	comment	4.0	10.5	1666701693	-11.377771	“In recent years, Kotlin has become a popular language for Android development. So it only makes sense that we would shift our Android development at Meta to Kotlin as we work to make our development ...		voganmother42
33359593	11.900454	-7.1644726	comment	4.0	13.5	1666886594	8.622884	> Managing code decorated with Java getters and setters is hell and complicated. The lack of a meaningful solution to the problem of getters and setters is just the tip of the iceberg.I don't use Java...		TheFreim
33400101	11.636091	-7.922732	comment	4.0	17.5	1667172095	10.218971	> 1. Codegen is powerful, and often easier to understand than a mountain of typelevel magic.I disagree here. And I also don't like your framing.Yes, type-level logic is harder to learn than understand...		valenterry
33406880	11.658242	-7.224095	comment	4.0	20.0	1667229012	6.8271737	Effective C++ was an amazing book.  I bought copies for the entire team out of my own pocket.  The Gang of Four on the other hand was an unfortunate turn for the industry.  As you say we took it too s...		doug_durham
33414307	11.694937	-7.1701317	comment	4.0	10.5	1667255886	8.071533	The Elixir |> (pipeline / nose) operator. Makes functional programming much cleaner without brackets or intermediate variables. I wish more programming language has this. JavaScript comes close with chained calls of map.		gaudat
33414576	12.469482	-7.117868	comment	4.0	10.5	1667257400	12.361079	"Quine Relay, ""a Ruby program that generates Rust program that generates Scala program that generates ...(through 128 languages in total)... REXX program that generates the original Ruby code again.""https://github.com/mame/quine-relay(HN thread: https://news.ycombinator.com/item?id=6048761)"		tfehring
33423709	12.137751	-7.882017	comment	4.0	20.0	1667321205	-3.2603986	"Is it just me, or does ""applied category theory"" never use anything from category theory other than boxes being connected by arrows?"		whatshisface
33434611	12.1917515	-7.0241446	comment	4.0	10.5	1667392041	-10.459521	It's strange to me that this article focusses so much on nullability, which seems like a tangental issue. There's nothing stopping an imperative language from enforcing nullability checks. Indeed, wit...		nayroclade
33436068	11.941446	-7.5366383	comment	4.0	12.0	1667398228	7.326987	> One of the big reasons why FP languages have so little penetration is because the advocacy usually feels like someone trying to talk you into a religion.This is a part of it. The other part is FP's ...		hresvelgr
33395987	11.805023	-7.513463	story	4.0	47.0	1667148178	10.403413	Idris 2 version 0.6.0 Released	https://www.idris-lang.org/idris-2-version-060-released.html	todsacerdoti
33485165	11.611919	-7.3432856	comment	4.0	11.0	1667679201	-8.725047	For a while in the codebase I was working on, we had a set of distinct types for different units. You know, a type for meters, another for centimetres, etc etc. We had types for radians, types for deg...		plasticeagle
33498049	12.5035925	-7.029105	comment	4.0	11.5	1667773158	12.37188	So I'm a Ruby fan and I largely agree with you.  I started dicking around with Stable Diffusion recently and was almost immediately reminded of so many things I dislike about Python.But just to be a b...		inferiorhuman
33506965	11.993678	-7.148775	comment	4.0	14.5	1667834649	9.142059	"You can use One Weird Trick with generator functions to make your code ""generic"" over synchronicity. I use this technique to avoid needing to implement both sync and async versions of some functions i..."		jitl
33533501	12.140841	-7.8866663	comment	4.0	13.0	1668009691	-3.1697686	Every time I try to understand what category theory is, I hit an impassable wall, I don't understand it. Alexander Grothendieck is much too intelligent for me. But I don't despair of getting there one day...		martyalain
33536740	11.787291	-7.2400193	comment	4.0	11.5	1668022541	5.1440086	"> With that reasoning, all code is declarative because it's ""declaring to the interpreter/compiler"" how to operate.Sort of! All code is also imperative, eventually, at the machine code level. This is ..."		0xbadcafebee
33548181	11.669708	-7.1753583	comment	4.0	23.0	1668095362	9.119254	This is an insane take, if you are doing async you already HAVE a need for concurrent programming. Async just makes that simpler to read and write.		acedTrex
33549633	11.887769	-7.0830097	comment	4.0	14.5	1668099973	-10.705228	"Asyncio is not ment for CPU Bound Task but for IO Bound Tasks.
You should have used multiprocessing.
The problem you describe is exactly what asyncio is used for: saturate your bandwidth better.maybe ..."		number6
33566465	12.283763	-7.3043103	comment	4.0	10.5	1668199079	7.101466	Smalltalk only got a mention in the footnotes but I think it deserves a bigger entry when talking about ways to interact with programs. If a REPL is talking to and conversing with a program then envir...		Barrin92
33588271	11.652055	-7.93908	comment	4.0	12.0	1668380360	10.233548	Do you have more examples? I’ll admit that Go is full of weird quirks, but nothing feels bolted on. Generics were agonized over for so long because they had to fit it within the existing language		2fast4you
33600198	11.644846	-7.3963695	comment	4.0	16.5	1668456476	-6.326463	In general this doesn't work, the history rule says mutable types are not proper subtypes of immutable ones (and the converse is obvious). If you want to capture mutability in your type system, it needs to be orthogonal to subtyping (like C/C++ const).		morelisp
33607845	11.772616	-7.3958745	comment	4.0	11.5	1668511231	-8.7530155	More likely this kind of “typed”:https://en.m.wikipedia.org/wiki/Strong_and_weak_typingWhere “typed” here likely implies “strongly typed”.		tomalpha
33621490	12.39511	-7.7698174	comment	4.0	16.5	1668597880	11.897992	I’ve had similar experiences with scala and clojure professionally. I now actively oppose people attempting to add functional code to projects I work on.…because when they say “more functional” most p...		wokwokwok
33623040	11.852043	-7.391356	comment	4.0	17.0	1668607409	6.9917493	I think that's a bit harsh. It's frustrating to translate an imperative task to an FP language, but it's also frustrating to translate a Bash command into Python, or Prolog semantics into Go, or any p...		BoppreH
33628859	11.946012	-7.4130135	comment	4.0	13.5	1668626176	7.3141975	FP is only part of the equation  when working with meaningfully-complex systems. Having a clear data + relational model is the other big part.I would strongly recommend reviewing the functional-relati...		bob1029
33636059	11.883149	-7.314664	comment	4.0	18.5	1668670960	9.219597	Is it still a feature of the language that it's rules are simple enough so you don't need to debug your knowledge of the language?Neither this `inline case else` nor the async/await make sense to me. ...		hsn915
33655719	11.614659	-7.9305744	comment	4.0	10.5	1668783877	10.132708	This is probably because Go doesn't allow function overriding. You can't have `streamFromUrl(foo)` and `streamFromUrl(foo, bar)`, so you end up with `streamFromUrlWithFoo(foo)` and streamFromUrlWithFooAndBar(foo, bar)`.		thomascgalvin
33722556	11.986421	-7.4501004	comment	4.0	16.0	1669227031	-10.372363	> You can adopt the techniques of functional programming right now in your favorite language (such as Python, used above).No tail call optimization, no expression orientation, mutability by default, n...		substation13
33763706	12.22869	-7.0190334	comment	4.0	12.5	1669564296	8.995576	"    export class TaskController extends Controller {

        @use(StoreTaskRequest)

        store(request: StoreTaskRequest): void {

            const description: string = request.get('description..."		activitypea
33766916	11.6677885	-7.311115	comment	4.0	13.0	1669582919	-7.94782	"I'm curious how you would do data oriented programming in a language with no type system and no control over memory layout. And I guess the answer is ""you can't, but JITs might exist someday that do i..."		duped
33786792	11.669369	-7.8906946	comment	4.0	13.5	1669725333	10.223883	This is one of the better things about Go and its community: eschewing frameworks like this.Having an ecosystem of in-house libraries tailored to your products' use cases is not the same as developing...		sidlls
33792098	11.797859	-7.326736	comment	4.0	17.0	1669750382	-8.909238	"""smug static weenies"" LOL.I really, really don't mind if people have preference for static typing. I do too - not as strong as the 2022 zeitgeist to be sure but I still have it.What I dislike is the i..."		LAC-Tech
33794828	11.743624	-7.3322673	comment	4.0	14.0	1669764264	-6.3668685	This is pretty common when adding immutability to a language that wasn't designed around it. Whether it's JavaScript's `const` or Java's `final`, languages almost always add shallow immutability rathe...		lolinder
33805007	12.132055	-7.874786	comment	4.0	13.0	1669832124	-3.1912825	I see no more than Groups in your comment. Which are very useful! Also having commutative operations makes for Abelian Groups, which enable operations to be reordered, and makes for implicit parallelism.Where is Category Theory?		BenoitP
33847796	11.642987	-7.2591195	comment	4.0	12.5	1670104370	9.057608	What if you used a map and stored the value as a key? Then get all keys? Could work as a simple alternative and you could check if values are in it.Requires thinking if you want to implement set difference or intersection. I just figured depending on needs using existing built-in types may be fun.		angrais
33866591	11.830276	-7.043203	comment	4.0	15.5	1670252971	8.352417	"Is the JVM running out of code/JIT cache space?We had a similar problem recently in vanilla Java: monolith-like servers would seem to eventually ""go bad"" for no real discernable reason after hours/day..."		ulularem
33889345	11.989161	-7.6986756	comment	4.0	11.0	1670374604	10.43822	One thing I would love to see is a comparison to the other Haskell powered tool - Pandoc.Pandoc is so versatile and supports turning plain text into so many many formats that it would be interesting to see where Emanote fits in.		RcouF1uZ4gsC
33895558	11.758932	-7.378741	comment	4.0	11.5	1670427449	-8.869272	"Me too.Every time I read statements like this from Jose""This brings another discussion point: a type system naturally restricts the amount of code we can write because, in order to prove certain prope..."		epolanski
33902435	12.188581	-7.5230894	comment	4.0	22.0	1670459296	-11.366525	Java after JDK 17 is a completely different language, almost like the difference between Javascript pre-ES6. It got:- Pattern matching- Sealed types- Records (immutable, succinct data-classes)- Multil...		gavinray
33776491	11.65102	-7.9022784	story	4.0	123.0	1669656575	10.11719	Building a High Performance Data Integration Framework in Go	https://www.cloudquery.io/blog/building-cloudquery	sghosh2
33880215	11.954453	-7.6856213	story	4.0	61.0	1670336453	10.49555	Emanote – Haskell-powered structured view of your plain-text notes	https://emanote.srid.ca/	smartmic
33914066	11.655577	-7.979829	comment	4.0	20.0	1670536236	10.205805	Thank you for the compliment.I have some interesting news for you... Go is a smashing success, wildly popular, and eating Java's lunch. It is an objectively incorrect generalization to say that people dislike Go.		AndyKelley
33928473	11.708186	-7.0976763	comment	4.0	13.0	1670633023	-6.734915	The author conflates generators with generator expressions[1]. He's correct in that generator expressions lazily evaluate and lists don't, but actual generators are a much more powerful construct - th...		pedrovhb
33943166	11.650666	-7.9553776	comment	4.0	11.0	1670766771	10.219484	I guess it's become trendy to hate on Go in this forum, so I'll offer a counterpoint.Being a relative newcomer to the language, transitioning from Python circa 2016, I've found it a joy to use. The si...		imiric
33953002	11.98333	-7.73651	comment	4.0	15.5	1670840196	10.40971	> Perhaps Verse will one day be as influential for PL design as Haskell has been.Has Haskell really been that influential though? It seems to me that MLs, Lisps, Schemes, and even Erlang have been more influential.		bmitc
33966457	11.701297	-7.0300217	comment	4.0	13.5	1670923043	7.10922	The worst thing about `unless` and double negatives, is having been raised in a culture with different double negative rules than English. In Italian a double negative is still negative.I know boolean logic pretty well, but `unless !something` still trips me up to this day.		sph
33969759	11.967237	-7.067378	comment	4.0	11.0	1670943929	12.436408	"Only if you definition of elegance is ""please express yourself in as convoluted a way as possible, so as to minimize the number of words I need to know.""The truth is there is a balance in all language..."		nickelcitymario
33973688	11.8610325	-7.637045	comment	4.0	11.0	1670956926	12.769857	I wonder if there's somewhere that people can propose a name for things and people can tell them why they might want to use something else - 'Pony' is fairly common slang for 'crap' in London / Southern England.		jwmcq
33981396	11.65909	-7.313029	comment	4.0	17.0	1671008046	-6.570057	> Immutable data structures (but not variables)Why not not immutable variables?About 90% of my variables I only assign once, even when writing ordinary imperative (not functional) code. Wehever a vari...		qwerty456127
33999958	11.834281	-7.080852	comment	4.0	19.5	1671114500	-9.105347	After dealing with that problem and enduring the pain of it for years, I finally switched to C#/.NET. It has the necessary tooling to achieve this and more.Rewriting a lot of things was time well spen...		hakanderyal
34014818	12.095486	-7.8508677	comment	4.0	11.5	1671200929	10.439495	There's already some discussion on https://news.ycombinator.com/item?id=34013767Am happy to answer questions people have on this one as well, there's also some other OCaml contributors lurking.		sadiq
34015987	12.141647	-7.509932	comment	4.0	17.5	1671206204	-10.560284	Did you compare it to F#? I’ll probably try to learn an ML language next year and without doing much research F# looks really nice since it gets all the .Net benefits.		hnra
33948084	11.886574	-7.413185	story	4.0	49.0	1670796431	8.754274	Algebraic Effects – You Can Touch This (2019)	http://jacek.zlydach.pl/blog/2019-07-24-algebraic-effects-you-can-touch-this.html	mooreds
34064951	11.791122	-7.172307	comment	4.0	19.5	1671539407	-8.978208	Even since the start of python typing, it was recommended to use a more generic type like Iterable instead of List.  The author claims that List is too specific -- this seems like a straw man argument...		jerrygenser
26478636	11.666435	-7.1167526	comment	4.0	15.5	1615910715	6.5185113	If you enjoy pattern matching in Java, I would recommend checking out the latest & greatest that C# has to offer as a comparison:https://docs.microsoft.com/en-us/dotnet/csharp/pattern-match...Being ab...		bob1029
26506897	11.801585	-7.140399	comment	4.0	16.0	1616097537	-9.054348	Mypy will only ever make it into a small fragment of Python code. Its existence is more likely an example of the those insistent on type checking crossing the picket line and bringing their last holdo...		musingsole
26507156	11.783193	-7.192412	comment	4.0	10.5	1616098984	-8.947683	I could never get why Python added unchecked static typing. That seems so useless. If the compiler checks it, it can use it to optimize. Huge win for built-in types, like integer and float. CPython ha...		Animats
26519796	11.605784	-7.1633096	comment	4.0	19.5	1616201964	9.062982	They mean that the forEach runs code per element, but cannot return a transformed list of values, you need map for that.A map can run code per list element but the result must be injective (one-to-one...		jessedhillon
26530704	11.780085	-7.343527	comment	4.0	30.0	1616336874	-8.876687	I find it hard to imagine cases where gradual typing would have any advantages over a language with decent, modern type inference.  In the latter case, you're still not typing type specifiers very often, but you get unambiguous function signatures, and can eliminate whole classes of runtime errors.		skohan
26541036	11.701329	-7.879541	comment	4.0	12.0	1616422363	10.180488	Nice article...Over here I've invested a lot in Java, to be used where static typing is necessary, JavaScript (Node.Js), Elixir and PHP on other occasions. But it's beginning to look like Go will displace Java. So, might be high time we learned Go :/		kaladin_1
26541853	12.22948	-7.638365	comment	4.0	13.5	1616425471	11.934087	Is the Scala language simply too big? I tried to learn it once (years ago) and quickly found myself overwhelmed by the number of concepts. I remember feeling like 80% of power of the language could ha...		dfgdghdf
26542444	11.649125	-7.950461	comment	4.0	14.5	1616427952	10.211476	When people say Go is a simple language, they mean that Go, the literal language, is simple. Some people are also claiming that the programs written in Go are simple, that the ecosystem is simple, or ...		strken
26542523	11.906035	-7.35509	comment	4.0	12.5	1616428314	7.085229	I have found that languages that support both FP and OO paradigms its best to do things like data manipulation in FP, and use OO to encapsulate those processes and be limited to just passing messages ...		weatherlight
26542635	11.665298	-7.9515095	comment	4.0	24.0	1616428786	10.276757	"Sure.We use Prometheus exporters, most of the exporters are written in Go. And this is a snip from the vmware-exporter for our VMware estate.    metrics.go

The first throw was this:    import (
 ""con..."		doublerabbit
34068129	11.633899	-7.9243975	story	4.0	69.0	1671553577	10.24418	Hacking Go's runtime with generics	https://www.dolthub.com/blog/2022-12-19-maphash/	awmarthur
26488156	11.7595215	-7.020443	story	4.0	134.0	1615971132	6.7335835	Interfaces and Protocols in Python	https://glyph.twistedmatrix.com/2021/03/interfaces-and-protocols.html	BerislavLopac
26549979	12.245707	-7.544066	comment	4.0	14.0	1616463812	-11.381424	"Kotlin mostly requires JVM, Crystal does not.
With Kotlin native, Kotlin js and most importantly Graal native this is plain wrong."		The_rationalist
26550773	11.739855	-7.375135	comment	4.0	10.5	1616470399	-8.928032	It's possible—nay likely—that I don't understand the true value of generics. It's something that I've looked into on occasion and it never seemed all that useful to me. Most examples I've come across ...		sjwright
26568484	12.251775	-7.0675673	comment	4.0	11.5	1616599791	13.163843	Raku is actually a specification driven languageThat hasn't been true for a while. The test suite is supposed to be canonical, whereas the 'specification' hasn't been kept up to date with language evolution.		cygx
26573389	11.677339	-7.1309566	comment	4.0	15.0	1616622396	-7.0518594	When it comes to primitives you can only pass by value, but with objects and arrays you can only pass by reference. And this applies to comparisons too: when comparing objects or arrays you are compar...		brundolf
26580941	12.389809	-7.465883	comment	4.0	13.5	1616683630	-10.088826	I feel like we don’t need a novel language for this. There’s already a pretty-well-known language that’s almost a DSL for “making complex finite-state machines easy to create”: Erlang.I know that soun...		derefr
26587184	11.691938	-7.312096	comment	4.0	14.0	1616716371	7.3931994	Structs and classes work fine for that. You don't need getters/setters/inheritance/factories etc.		the__alchemist
26590161	11.9325695	-7.371892	comment	4.0	17.0	1616750658	7.05989	"> Finally, I haven't read all 162 comments here - but OO is not ""bad"" nor ""the holy graal"". There are different ways of doing programming, and its as simple as thatWhat are we programmers supposed to ..."		diggan
26590731	11.932232	-7.376763	comment	4.0	13.0	1616757383	7.0345817	The thing I find interesting about revisiting these old pieces is that the debate about the merits of OOP is effectively stymied. This post and the article it replied to posted yesterday (https://news...		meheleventyone
26589960	11.994202	-7.423116	comment	4.0	19.5	1616748135	7.0345488	"This is kinda funny. I wrote a ""rebuttal"" article back in 2009:http://goran.krampe.se/2009/06/26/joe-is-wrong/...and then I met Joe not long after and we also discussed this in fact. He then told me t..."		gokr
26602917	11.627408	-7.9244885	comment	4.0	28.0	1616858390	10.194933	I used to do a lot of machine learning code in go and think it has great potential as a compiled, static language with similar ease of development to python.However it is hard to get around the lack o...		micro_cam
26605306	11.655448	-7.944577	comment	4.0	21.5	1616876643	10.182134	Go is a great language, but it seems terribly suited to data science. The popular data science languages are Python, R, Julia, and to a lesser extent Scala. They’re all extremely flexible languages, w...		yashap
26606191	11.790186	-7.262137	comment	4.0	11.5	1616884258	-8.945016	> a strong type systemIt's a myth that dynamic languages can't have strong types.  Python aborts almost immediately whenever it can. For instance, adding a number to a string? Exception. Accessing und...		crazypython
26642495	11.867908	-7.2899446	comment	4.0	19.5	1617153456	-9.766642	I mean, top-level programs are nice, I guess? IMO it's more of a means of attracting non-.NET developers into the fold. I work in a .NET shop and we probably won't use this in our production code.The ...		twodave
26659005	12.297444	-7.0335307	comment	4.0	19.0	1617276047	-5.202744	As you probably know, contrary to almost every other language out there, Perl was not designed by people with CS degrees adding things that sound cool.Perl was designed by a linguist along the princip...		kqr
26659131	12.25681	-7.0174046	comment	4.0	19.5	1617276878	13.166792	Having started with more modern scripting languages, such as ruby, javascript, or python, every time I touched perl I felt it was actively fighting me. Those sigils! God, those sigils! It's bad enough...		azangru
26659284	11.661994	-7.5143437	comment	4.0	11.5	1617277932	9.836257	Does C# handle generics better than Java?		mrkeen
26659929	12.335378	-7.023567	comment	4.0	12.5	1617282147	13.175119	>What I did love about perl though — something I don't find in modern languages — is its carefree playfulness, which must have stemmed from the hacker culture associated with it. I still chuckle every...		throwaddzuzxd
26658917	12.312781	-7.0248427	comment	4.0	14.5	1617275370	13.184188	I think what changed was that when Perl was popular people were generally a bit more into lots of wacky way to do the same thing, deliberately whimsical terminology, puns in their programs, the progra...		chrisseaton
26659115	12.350192	-7.0548735	comment	4.0	12.0	1617276740	13.193956	This was the problem. It's now been fixed. Or do you think Perl 6 was the more meaningful name?		kqr
26659183	12.138094	-7.8760247	comment	4.0	10.5	1617277257	-3.2203712	If you’re curious about this stuff and don’t know where to begin, the first chapter of Fong & Spivak, “An Invitation to Applied Category Theory: Seven Sketches in Compositionality” [1] also introduces...		benrbray
26663162	11.638005	-7.779242	comment	4.0	14.0	1617296506	9.949881	I am unreasonably excited by Loom, for two reasons:1. I cannot wrap my head around library-based reactive systems. I have tried and tried and continue to try. But they're like some of the original Go4...		jacques_chester
26664560	12.184861	-7.5358143	comment	4.0	12.0	1617303063	9.745886	I write a lot of Kotlin code but still tend to use Java a lot. All of the features you mention are not really an advantage for Kotlin anymore.Java has had tools to deal with nulls for a long time, we ...		brabel
26664747	11.614747	-7.9608984	comment	4.0	19.5	1617304024	10.188005	"""Go is one of the HN darling languages""It's def not the case, I spend too much time here and on Reddit and people are always complaining about Go ( generics, errors, type system etc ... ), if you want..."		Thaxll
26720821	12.212319	-7.2577963	comment	4.0	10.5	1617772315	7.1176233	"Coming from a C#/Java background, discovering Smalltalk was an eye-opening experience regarding supposed ""legacy"" programming languages. I would argue it's a more expressive language with simpler synt..."		thesecretsquad
26745334	11.6326065	-7.9273887	comment	4.0	10.5	1617927090	10.224004	In my experience at Google, only Go does flags like this. Everything else (python, java, c++, blaze) all use the same flag syntax, which is all via long args with two dashes.		QuercusMax
26747346	12.251681	-7.385459	comment	4.0	10.5	1617950282	-10.591114	> Must run natively on backend without nodeJS (rules out the likes of PureScript)PureScript does have an Erlang backend as well.My understanding is F# relies on a JIT just as Node (V8) does. Are either really native? Are both?		aranchelk
26748085	12.136773	-7.526114	comment	4.0	17.0	1617957445	-10.60215	That is until Microsoft release a version of the Framework or a version of VS that breaks F# in your project.  I dropped F# support from my one of open-source projects because of this, and at my compa...		louthy
26764910	11.837558	-7.576778	comment	4.0	34.5	1618086941	10.308874	"> Text literals use double-quotes (""""), and are syntactic sugar for lists of characters. They have type List<Char>.Perhaps not the best choice. I believe this is frequently considered a design mistake in Haskell."		mannerheim
26773891	11.994854	-7.7539554	comment	4.0	12.0	1618178624	-13.686569	Can someone tell me a positive reason to do I/O with monads or try to make it pure-functional?It's always smelled like zealotry to me -- I/O is, definitionally, about creating a side-effect, and paper...		refenestrator
26779483	12.338342	-7.0490336	comment	4.0	11.0	1618235777	13.1862545	Perl 6 has been recognized as its own thing, now -- that's all over. The perl we all know and love is quite alright, and holding its own.		arbitrage
26790153	12.003483	-7.0612903	comment	4.0	13.5	1618307445	9.015128	Yes, but it isn't the core way the language works -- you don't need to approach asynchronicity very early on as you do with JS, and it's not all closures. At some point someone learning Python will ha...		RobertKerans
26814870	11.744805	-7.1943245	comment	4.0	17.0	1618446768	-9.030752	Very good discussion from my wife's alma mater!One thing I didn't see mentioned that is a particularly annoying false positive in mypy is the enforcement of Liskov Substitution for equality checks. Al...		nonameiguess
26815452	11.799006	-7.1603637	comment	4.0	17.5	1618452506	-8.96381	Python is strongly typed. It's also dynamically typed. They are not contradictory between each other.		dr_zoidberg
26828758	11.710885	-7.7892494	comment	4.0	15.0	1618540716	10.125389	>You CAN make it verbose that’s for sure.No true scotsman? Even if you want to argue that Java CAN be made more terse, the vast majority of Java that exists today is incredibly verbose. Even running a...		nemothekid
26830964	11.684845	-7.8173523	comment	4.0	31.0	1618560321	10.164072	"Python is generally less performant.
Go has a smaller ecosystem.IMHO, YMMV etc."		Nursie
26831077	11.843756	-7.017683	comment	4.0	22.5	1618561174	10.113011	Yes, but that's my point.If I don't need performance, Python is ok.If I do, I won't go Java, I will choose something that is built for performance. Python is good enough for 99% of my performances nee...		BiteCode_dev
26863057	11.602305	-7.9086614	comment	4.0	12.0	1618842266	10.2274275	Why can't &3 work? Rob says 3 does not have a type and that's a problem. Would it be possible to change the Go compiler such that 3 has a type? (I'm guessing no, at least not easily, otherwise he'd be suggesting it, but I'm curious about the reason)		uh_uh
26885362	12.155218	-7.515918	comment	4.0	13.0	1618978493	-10.617006	I've tried to get started with F# on Mac twice, once a few months ago, and 18 months before that.  Could not get it working.  When the official getting started guides don't work, that is a very bad sign.  I will be staying away.		turtlebits
26934811	11.976004	-7.345984	comment	4.0	15.5	1619373161	8.192583	Lately I’m writing C++. I have code that needs to deploy across different mobile ecosystems. Java doesn’t cut it, Kotlin has a cross language offering but it’s not prod ready, and Rust... well, the te...		tracer4201
26934826	11.803267	-7.2643347	comment	4.0	13.5	1619373240	8.556025	Type inference in newer languages reduces a lot of the pain that was Java.Of course, it’s not new but adoption took some timeI also like to explicitly declare immutability/ mutabilitylet x = “hello world”var ctr = 0		melling
26935390	11.78831	-7.1287827	comment	4.0	11.0	1619376448	-8.981736	once again there's a confusion of static types and performance. A lot of languages are performant and are easier on the eyes | type e.g F#, Ocaml and maybe Golang.another issue is OOP damaged a lot of...		dzonga
26938331	12.170221	-7.4857483	comment	4.0	11.5	1619399792	8.762945	"How exactly are they better from Kotlin's data classes?Aside from the fact Java only released non-preview support for records one month ago, they:  - Don't support inheritance
  - Can't be mutable
  -..."		unscaled
26941136	11.594054	-7.573543	comment	4.0	12.5	1619433663	9.388261	"I sincerely hope people don't start using just one of the color names at a time.  If someone says to me, ""That's a red function"" I'm going to stop them every single time and ask them which one was red..."		wccrawford
26941465	11.654289	-7.301467	comment	4.0	10.5	1619437253	9.185961	One point I massively miss from this discussion is retrofitting. Imagine the following situation: I have a webserver which calls a parser module which calls an external library which calls a closure i...		Sebb767
26985554	12.108651	-7.8421693	comment	4.0	14.0	1619724791	-3.1629882	Naive outsider intuition is that you can encode all category theorems as graphs, but only because you can encode anything as a graph, and the property of category theory that could make it a universal...		motohagiography
26989380	11.860733	-7.3506393	comment	4.0	17.0	1619750711	6.9602385	I'm a little confused. Inheritance, types and all that stuff are just language concepts right? Simula may have been one of the first to implement inheritance as a means to an end, but how could they h...		thewickedaxe
26990668	11.795586	-7.1009264	comment	4.0	13.5	1619767273	5.2625184	"I hold the view that programming patterns were invented as solutions to technical problems. It was then later that some theoretical ""usefulness"" or ""elegance"" was attached to them.One should know the ..."		Arwill
26992588	11.86738	-7.3685994	comment	4.0	16.5	1619786143	3.3412755	Inheritance is static composition. Everything we do statically is for two reasons:1. Static invariants (not subject to runtime-defined conditions).2. Performance (AOT compilers know more about the sys...		slver
27023111	12.233405	-7.549727	comment	4.0	17.5	1620034323	-11.453472	"Kotlin's version is even better: val & varSuper clear. The ""let"" version smells a lot of ""I have a CompSci PhD""."		MrBuddyCasino
27023402	11.726851	-7.3347797	comment	4.0	11.0	1620037784	11.9060135	"Yes.  I think the problem may be with the other one.  ""val"" (and ""let"") don't seem obviously constant to me."		mkl
27028250	11.655296	-7.979716	comment	4.0	15.0	1620064044	10.245195	I'm always surprised just how difficult it is to have Go code in a monorepo given Google's famous use of one. I guess they just don't use modules internally?		tsimionescu
27037669	11.654828	-7.0533366	comment	4.0	13.5	1620136876	6.9548492	"This post shows up in the same day I was looking exactly at it. Quite interesting.Another way of avoiding KeyError is using  dict.get(val, default_val)

I find it a bit cleaner, since you don't have t..."		luizfzs
27049805	11.6056595	-7.8914146	comment	4.0	18.0	1620222834	10.132284	This is not about misunderstanding. The author argues that heavy map/filter/reduce does not fit with the general style of Go programs. As a heavy Go user, I absolutely agree.There is nothing preventin...		majewsky
27062086	12.506002	-7.801793	comment	4.0	11.5	1620303465	11.92571	You're both wrong. If it was dynamicism then why are JS, Python, and Ruby so popular? If it's about being functional then why has Scala got more users?Languages are driven by the platform. There is no...		fnord123
27071825	11.890114	-7.5394483	comment	4.0	13.5	1620358306	10.469152	>Grain is strongly typed (with a typechecker from OCaml)I tried working on a complex OCaml project where the author had written as little type annotations as possible. It was a horrendous experience b...		bno1
27073609	11.876616	-7.2669396	comment	4.0	12.0	1620375476	-9.684291	"Okay, but why would I do that instead of just    sleep 1 && echo 1 &
    sleep 2 && echo 2 &
    sleep 3 && echo 3 &
    wait

and be done with it? Now I don't need to prepend 'await $`...`' in front of every other command."		alpaca128
27077593	12.1747875	-7.5010247	comment	4.0	14.0	1620404524	8.808308	Kotlin data classes can use Java records as their implementation if running on JVM, so it’s not like you have to choose one or the other.https://kotlinlang.org/docs/jvm-records.html#declare-records...		billyjobob
27078340	11.736042	-7.315751	comment	4.0	21.0	1620407877	8.750909	Not sure why immutable data structures have surfaced as something important. Typically you never change fields so it is kind of only of academic value if a field in a POD, POJO, POCO or whatever it is called in the specific language actually may change.		AtNightWeCode
27078803	12.247038	-7.5521803	comment	4.0	19.0	1620410386	-11.396822	Lombok and Kotlin are both much easier to integrate into existing Java applications and libraries than Scala.		adambatkin
27079886	12.0766945	-7.556401	comment	4.0	11.0	1620415380	8.656446	This is great news!I was also kind of surprised to see the article talking about algebraic data types... table stakes for ADTs is sum types and I have missed them considerably in the Java ecosystem.Ko...		crdrost
27108944	11.805413	-7.1445866	comment	4.0	29.0	1620669950	-9.041721	As with package managers, there seem to be half a dozen different, competing type checkers for Python now...		dunefox
27108793	11.825047	-7.1355767	comment	4.0	15.5	1620669136	-9.005333	Last I checked, mypy struggled to represent recursive types. Think `JSON = Union[None, bool, str, float, int, List['JSON'], Dict[str, 'JSON']`. That's a bummer because recursive data types are darn ha...		throwaway894345
27110341	11.814071	-7.233442	comment	4.0	19.5	1620677631	-8.999156	Anyone considering using type hints should listen to this talk: https://www.infoq.com/presentations/dynamic-static-typing/I personally think it's mostly a waste of time to do type hinting for the purp...		globular-toast
27080599	11.653663	-7.364946	story	4.0	3.0	1620419840	-8.662716	Ideology – do unit tests make type systems unnecessary? (2015)	https://www.destroyallsoftware.com/talks/ideology	Fannon
27141488	11.65055	-7.9244075	comment	4.0	15.5	1620910179	10.217849	Thanks for mentioning this experience -- I was really excited about Go early on but went with other languages after a while so didn't make any huge projects with it (and definitely not at a large empl...		hardwaresofton
27141889	11.995513	-7.786583	comment	4.0	13.5	1620912928	10.419357	OCaml is everything D wanted to be, but failedOCaml is high performance, Garbage Collected, hybrid system and application programming languageYou can use OCaml to write high performance Apps and Syste...		systems
27152086	12.229407	-7.6144166	comment	4.0	43.0	1620981254	11.919658	Scala is not perfect but it’s very good. It’s competitive pressure arguably improved Java (streams, pattern matching, data classes).		killingtime74
27152236	12.104575	-7.5758567	comment	4.0	12.0	1620982611	11.900255	As someone who has spent a lot of time diving deep into Scala (I worked on compiler related semantic tooling for scalameta, worked on a experimental parallelizable Scala compiler, and even have a sing...		maxov
27153926	12.220509	-7.6295056	comment	4.0	14.0	1620998235	11.931166	I'm in need of a functional language for a small part of my system and I'm considering Scala and Purescript[0] (mostly because of their ecosystems). Maybe Scala 3 is a good time to be boarding Scala's ship.I'd appreciate if anyone has any advices of one vs the other.[0]https://www.purescript.org/		haolez
27153856	12.2305765	-7.648016	comment	4.0	12.0	1620997848	11.943597	I think the best evolution of a programming language is when some features are removed and replaced by a unifying concept which makes the language both smaller and and more expressive. Has that happened in Scala 3?		augustk
27157404	12.167999	-7.612842	comment	4.0	10.5	1621014724	11.945168	"Scala is one of the smallest typed languages in terms of syntax.See slide 13:
https://www.slideshare.net/Odersky/preparing-for-scala-3#13With scala 3, syntax has been simplified even more, e.g.:No more braces necessary.
Top level declarations. 
Extension Methods."		peq
27176155	11.642534	-7.972759	comment	4.0	13.0	1621192336	10.2572565	I'm always impressed by how effortlessly this claim of the extraordinary readability of Go code is thrown around by the language's apostles, given how substantial that claim is, and that it's only bac...		kubb
27182690	11.608331	-7.913214	comment	4.0	13.0	1621254639	10.164865	Go isn't for programmers, it's for managers.  Because of the simplicity of the language, it's easy to get people onboarded with, and it's fairly difficult for a single team member to go astray and mov...		skohan
27183777	12.066761	-7.126771	comment	4.0	15.5	1621261506	8.15837	Performance.There's a very good reason why low-latency and high performance computing crowd don't use inventions like Scala or Kotlin but they do use Java.Yes, they all run on the same JVM but most of...		bitcharmer
27183802	12.24408	-7.5174036	comment	4.0	20.5	1621261622	-11.39236	There is a lot of reasons to prefer Java (Disclamer: I don't use Kotlin all that much).First, there is really not that much reason to use Kotlin for the type of applications that would normally be wri...		lmilcin
27183541	12.142099	-7.5582027	comment	4.0	13.0	1621260326	-11.41475	"As soon as I opened the page, I searched for ""null"" and saw it didn't show up in the original post. Leaving that out is almost a bad faith argument, because it is the number 1 Kotlin feature I doubt J..."		cs-szazz
27204694	11.769704	-7.252483	comment	4.0	18.0	1621399875	-8.122426	"Somewhat relevantly, a closure isn't a ""specific thing in a specific framework."" Its a concept that exists in many languages, and has no real relation to frameworks.I would never treat someone like th..."		jmknoll
27258553	11.979069	-7.742162	comment	4.0	25.5	1621803677	10.385995	> Haskell uses the seriously complex machinery of monads to do I/O, supposedly without side effects (I don’t accept this).The consensus of many highly intelligent people knowledgeable on the subject s...		aranchelk
27264532	11.802543	-7.413231	comment	4.0	11.0	1621865326	-6.1063695	What is a good an introductory text (or other resource) for learning? What's the relationship between programming language theory and type theory? Is type theory a special topic, or would it be considered a core topic in programming language theory (e.g., like integration in calculus)?		chestervonwinch
27267476	12.023922	-7.7998905	comment	4.0	10.5	1621878567	10.404634	In mathematics we roughly have two ways to discovering new things: one is the theoretical approach (eg Galois and his theory that proves the none-solutions for fifth degree polynomial equations) and t...		archibaldJ
27271133	11.647002	-7.963948	comment	4.0	19.5	1621900706	10.232925	I used to joke at work that the fastest, simplest way to get promoted to a staff engineering position was to finish a 1 yr refactor.Getting existing codebases to do new things is hard, and most of ent...		omeze
27287822	11.638802	-7.9632497	comment	4.0	13.5	1622017575	10.175245	golang lacks the language facilities to implement GUIs in a concise manner. This is one place where inheritance makes things a lot easier.		gher-shyu3i
27299583	11.900621	-7.4771185	comment	4.0	14.0	1622091838	7.2198296	It's a shame that someone can become so misguided about functional programming. Functional programming isn't about destroying readability. It's actually the opposite; it enhances the ability to reason...		ebingdom
27299634	11.892184	-7.425305	comment	4.0	22.0	1622092522	-7.119926	I think people have a habit of taking relatively surface-level features of functional programming and focusing on them to the exclusion of the real benefits of functional programming. The use of somet...		andolanra
27299748	11.719395	-7.5437536	comment	4.0	15.5	1622093863	10.064288	"I've written quite a few containers that use interface{} like that...they don't really ""lose all type safety"", you write a typed container around it (usually a one line implementation) that does the t..."		cle
27335942	11.718051	-7.0813713	comment	4.0	15.5	1622403157	-8.921306	I've been programming for over 20 years too, and I like dynamic languages. I like them a lot more when they're properly tested and well architected, but even the tire fire codebases are at least debug...		3pt14159
27355986	12.312015	-7.0184517	comment	4.0	16.5	1622561418	13.172069	Hell, not even Fortran and Cobol are really dead, and Perl is way more popular still. You still have millions of perl scripts running daily, many of them doing some really critical stuff. It's not mai...		ivanhoe
27360135	11.920082	-7.3904753	comment	4.0	13.0	1622576309	7.0865655	This is brilliant.While there has unquestionably been some hype about objects over the years, I have too much respect for the many brilliant developers I have met in industry to believe they have been...		joe_the_user
27377531	12.276623	-7.5147014	comment	4.0	13.5	1622697938	12.839691	Love the actor programming model. Wish other languages had native support for it.		NL807
27376850	11.609954	-7.872905	comment	4.0	12.0	1622690051	10.103242	A problem with this is that Go code that uses native maps is non-deterministic, and is very annoying to make deterministic-ish when reproducing results is important.		AYBABTME
27390404	11.792271	-7.090362	comment	4.0	10.5	1622779228	8.905182	"Are you saying you find    Array.map(e => f(e))

Easier to read than    for(e in Array) {
        f(e)
    }

I don’t see how they really are any more or less readable, although I’ll admit map gave me a day of rethinking when I switched from 100% python to using react on the frontend."		edgyquant
27401118	11.826235	-7.1953135	comment	4.0	22.5	1622856753	-8.991659	The thing with Python types is that they are “type hints” and not true types, hints is the keyword. There’s also two type checker implementations.As they are hints it means you can still pass in wrong...		tiew9Vii
27402647	11.807581	-7.3337092	comment	4.0	16.0	1622873420	-9.016878	"> The thing with Python types is that they are “type hints” and not true typesPython has several type checkers, as does Haskell, each with different soundness properties. What makes GHC's type checking more ""true"" than Mypy's or Pytype's or Pyright's?"		neolog
27412637	11.935108	-7.4420714	comment	4.0	30.5	1622981879	7.2809496	The funny thing is it's exactly the same thing with functional languages, and no, there's no clear definition of FP. Some FP is lazy, some isn't. Some is immutable, some isn't. Some claim it's a style in any language, others that it's a type of language.		slver
27426513	11.75709	-7.3411827	comment	4.0	12.0	1623091841	-8.863114	> First-class types. This lets you the programmer to tell the compiler what you intend to do in your program. Then, like a helpful robot assistant, the compiler will check to make sure that what you're actually doing matches those expressed intentions.So static typing? Or am I missing something?		throwaway894345
27429627	11.625418	-7.909123	comment	4.0	11.0	1623115772	10.222535	If this is the kind of thing you are interested in, I would strongly recommend LiteIDE:http://liteide.org/en/https://github.com/visualfc/liteide/releasesIt's actively developed, FOSS (LGPL), native C+...		mappu
27459037	11.788822	-7.1043596	comment	4.0	14.0	1623320570	5.1501584	I feel like A Pattern Language is overrated standing on it's own. Too much people are extrapolating based on this book only instead of diving deeper into Christopher Alexander's other works. The patte...		raihansaputra
27465441	11.645335	-7.42166	comment	4.0	12.5	1623357339	9.331231	I don't really like this article cuz:- I like &Map.get/3 over the some_map[:some_key] syntax- &with/1 can be hellza confusing in many case if you're calling a bunch of functions, and any ol' one of th...		devoutsalsa
37579816	11.823788	-7.5220428	comment	4.0	12.5	1695177465	9.514685	> Haskell has both do-notation and list comprehension.Right, and do-notation is the one everyone uses, because it's better. Python picked the wrong one.> Comprehension in both Python and Haskell (for ...		lmm
37585759	11.602446	-7.9571652	comment	4.0	20.0	1695225217	10.22565	"Fortunately Gokrazy's site (https://gokrazy.org/) explains exactly what it is and what it's for up front: ""With gokrazy, you can deploy your Go programs as appliances to a Raspberry Pi or PC (→ suppor..."		telotortium
27402184	11.911878	-7.339706	story	4.0	18.0	1622867255	6.975649	The faster you unlearn OOP, the better for you and your software (2018)	https://dpc.pw/the-faster-you-unlearn-oop-the-better-for-you-and-your-software	csbartus
27480678	12.080323	-7.8724213	story	4.0	82.0	1623462768	10.446461	Multicore OCaml: May 2021	https://discuss.ocaml.org/t/multicore-ocaml-may-2021/7990	manicennui
27483686	11.808213	-7.2243385	story	4.0	64.0	1623497148	9.107296	Asynchronous Everything (2015)	http://joeduffyblog.com/2015/11/19/asynchronous-everything/	mpweiher
37613513	11.892603	-7.18318	comment	4.0	20.0	1695397426	6.8097196	Java getting better pattern matching is a great change. Id really like more of the functional features to make it into Java.I would love if Java pattern matching could at least get to the level of rub...		ecshafer
37615131	11.602996	-7.189551	comment	4.0	32.5	1695404624	8.978368	(1) It's a bit of a bad smell (which he points out) that records aren't being used much at all in the Java stdlib,  I wrote something that built out stubs for the 17 and 18 stdlibs and that stood out ...		PaulHoule
37630724	12.285504	-7.506633	comment	4.0	11.0	1695538047	12.826378	Again, academia and the tech press overlook to talk about Actors, and we live in a world with poorly implemented pretend Actor subsets, without any of the true Actor features (work stealing, message p...		smallstepforman
37639358	11.912544	-7.3999	comment	4.0	34.5	1695612062	7.218894	I've thought a lot about storing program structures in distributed hash tables and came to the conclusion that the only viable languages that can be safely stored are purely functional. If you conside...		calebh
37643849	11.644909	-7.846744	comment	4.0	13.0	1695650118	10.161071	No it doesn't, hence why there are best practices guidelines written by the .NET architects, and there was a research project to add Go/Java co-routines as well.https://github.com/davidfowl/AspNetCore...		pjmlp
37670111	11.61515	-7.891476	comment	4.0	17.5	1695788746	10.175817	"It really doesn't help that the major (perhaps only?) official resources on generics in golang are these blog posts [1][2] and the spec. And now this blog post.The whole ""what type am I getting""/make(..."		parhamn
37695256	11.957922	-7.076984	comment	4.0	14.5	1695932409	-8.4003105	From what I recall, the Closure type system wasn't well suited to Javascript. I recall it as being quite Java-ish (nominal rather than structural). It's been a loooong time since I looked at it, though, so I might be misremembering.		noelwelsh
37681185	11.746216	-7.2680135	story	4.0	42.0	1695848184	7.217357	Function Composition in Programming Languages [video]	https://www.youtube.com/watch?v=JELcdZLre3s	matt_d
12557975	12.158321	-7.027456	comment	4.0	13.0	1474561631	-10.412358	> In TypeScript 2.0, null and undefined have their own types which allows developers to explicitly express when null/undefined values are acceptable. Now, when something can be either a number or null...		sdegutis
12559556	11.930006	-7.2104545	comment	4.0	25.5	1474572577	-9.170123	Statically typed languages have a few large advantages over dynamic languages. These include:- Refactoring. Refactoring a large JavaScript codebase (> 100k loc) is nearly impossible and at best incred...		johnfn
12559809	11.76591	-7.3670397	comment	4.0	21.5	1474574185	-8.864641	I feel this is just a myth.I'm constantly looking at the source even with static types. Unless you're having a Haskell-like type-system the function's signature will still miss most of what the functi...		jeremiep
12563887	11.651737	-7.950312	comment	4.0	25.5	1474631902	10.224863	"I'm sorry to hear that. Go is not revolutionary (unless you count ""completely ignoring runtime errors"" to be revolutionary). If anything, functional languages are the new, old, revolutionary thing."		pmarreck
12575346	11.875654	-7.0411477	comment	4.0	18.0	1474812202	-10.794616	Pleased to see a uvloop link here again ;) I'm the author, feel free to ask questions.I also recommend to read our blog posts about uvloop and asyncio on magic.io		1st1
12575542	11.826301	-7.1901116	comment	4.0	11.0	1474814767	9.167321	I have some questions related to the usage of async. At what scale(in terms of number of users or server load) would choosing async based web frameworks over traditional web frameworks like Django/Pyl...		dpraburaj
12613098	11.829835	-7.2681646	comment	4.0	11.5	1475249984	7.1075897	The author claims that Dementer's law is primarily there in order to prevent state corruption. I don't know if I agree with this premise. There are also 2 other reasons to follow Dementer's law:1. Mak...		whack
12616519	11.668581	-7.902267	comment	4.0	14.5	1475296314	10.149772	Assuming this comes in Java 9, and compilation of code other `java.base` is possible, will this make Java a more solid competitor to Go? I guess it partly depends on how much they optimize the compiled binary size. Go does a really good job at static compilation, so it will be tough to compete.		Cyph0n
12619989	11.660287	-7.958019	comment	4.0	11.5	1475357752	10.200695	I've been watching Go from the sidelines for 2 years now. I do data engineering work and most of that is on the JVM (Spark, Scalding, Hadoop, Kafka). I wonder if there will ever be a push for Go in th...		josep2
12658970	11.671031	-7.9111843	comment	4.0	11.5	1475827744	10.210332	What about Go? I like go a lot because I feel like they did hit the mark and they did learn from their predecessors. Strong standard library. Clean syntax. Easily compiles to every major platform and ...		Taek
12712189	11.784467	-7.3676	comment	4.0	15.0	1476493858	10.144184	The problem with the design patterns books (including the GoF one) is that in the end they didn't have much influence. Think of how few of their patterns have become part of the vernacular of our fiel...		johan_larson
12577087	12.309442	-7.3076005	story	4.0	55.0	1474833342	7.0353236	Back to the Future: Squeak, a Practical Smalltalk Written in Itself (1997)	http://ftp.squeak.org/docs/OOPSLA.Squeak.html	lukego
12602456	11.60495	-7.8963947	story	4.0	57.0	1475108968	10.176983	Overhead of Go’s Generic Sort	https://github.com/nieksand/sortgenerics	nieksand
12739995	11.951191	-7.127857	comment	4.0	10.5	1476837463	8.64359	That was my reaction the first time I was introduced to it.  I looked at it again two years later and it just clicked.  What's really cool is that the developer who has to go maintain it has 20% as mu...		smoyer
12741430	12.021787	-7.558706	comment	4.0	26.5	1476856759	10.613257	Knuth is simply defining a piecewise function here in ordinary math notation. Functional programming languages borrow heavily from math, Erlang is a functional language. The resemblance would probably...		fusiongyro
12774973	11.732684	-7.3308372	comment	4.0	11.0	1477250408	-8.882845	> It doesn't, but the fact that there's nearly as much variation within statically typed languages in terms of how difficult this is to do as there is between statically and dynamically typed language...		overgard
12783971	12.014329	-7.6849413	comment	4.0	14.0	1477353201	10.40029	"I love Haskell, but if you hate Java, but still want to leverage the nice Java ecosystem, (libs, IntelliJ, JVM, tooling, etc) try Kotlin! :)
https://kotlinlang.org/"		KennyCason
12785096	12.006234	-7.7708626	comment	4.0	11.5	1477366666	10.395322	I've spent quite a bit of time with Haskell, and all the beginner text like this link are easy to grok, but where I've constantly come up short is trying to write an app with, for example, a configura...		joobus
12790231	11.941322	-7.4483685	comment	4.0	12.0	1477419610	-12.163423	From what I've seen, functional programming doesn't really excel at error messages		nikanj
12790656	12.216521	-7.029526	comment	4.0	13.0	1477422065	8.139006	I hope they will look at Erlang/OTP instead of Java EE for inspiration.		dschiptsov
12822071	11.597785	-7.8359656	comment	4.0	32.5	1477703643	9.988548	Very impressive. I wonder how Go manages to even stop all threads in 100 microseconds, much less do any work in that time.		rayiner
12831308	11.844627	-7.0918403	comment	4.0	13.5	1477851520	-10.753249	... why do you need locks in threads and not in asyncio ?		ddorian43
12831319	12.003506	-7.7670927	comment	4.0	12.0	1477851591	10.4209795	"I feel that one of the biggest misconceptions about monads and IO in Haskell is that they are an ""escape hatch"" in the language that allows you to perform imperative actions. This is plainly false. Mo..."		wz1000
12850015	11.755138	-7.0895405	comment	4.0	12.0	1478034409	5.209011	"My impression was that design patterns are just shared vocabulary, not something to aspire to use (other than realizing there was an existing ""word"" that would succinctly describe your jumbled spaghet..."		lfowles
12851914	11.924263	-7.230127	comment	4.0	11.0	1478054900	9.1641445	"  var txt = await read();
  // This code is blocked until read() completes.
  console.log(txt);"		mark242
12888725	11.93803	-7.6481347	comment	4.0	12.5	1478491438	10.397146	Haskell is good for lots of things, but I don't see it being particularly powerful in this application. The IO monad and do-notation let you write sequential code. So does Python.¯\_(ツ)_/¯		quotemstr
12888935	11.634198	-7.702606	comment	4.0	14.5	1478495215	9.817634	It's not clear what you're suggesting as an alternative. My understanding is that you're suggesting thread-per-request, which has many known flaws. There are three approaches to serving requests:1. Th...		vomjom
12889464	11.634177	-7.938946	comment	4.0	11.5	1478503411	10.212414	Good, one of Go's strength is easy refactoring given that the standard library includes its own parser and syntax packages. If something gets renamed, just write a small script to replace all references...		speps
12903347	12.23384	-7.504291	comment	4.0	15.5	1478634370	-11.372773	Kotlin has been a joy to use. Really happy with it. Our Android app (http://play.google.com/store/apps/details?id=com.eatsa.app) is 100% Kotlin (with a good amount of Java libraries of course).Some hi...		gregschlom
12903729	12.242254	-7.591193	comment	4.0	17.0	1478637707	-11.411734	Is there anybody switching from Scala to Kotlin?		dxxvi
12921283	11.593555	-7.848104	comment	4.0	13.0	1478792445	10.075378	"""Channels without panics. Channels are awesome, but Go's design of them means that you have to learn special ways to design your usage of channels so that it does not crash your program. This is asini..."		jerf
12924162	11.618783	-7.9627056	comment	4.0	15.5	1478810719	10.165616	i actually don't think the Go version is bad. I can very clearly see what is happening and I can also do something with the error		bresc
12934266	12.015062	-7.796637	comment	4.0	14.0	1478897866	10.433489	My suspicion is that no one wants to explain monads because if they did it would be painfully obvious that they're a purgatorial way of getting around the basic mismatch between functional purity and actual computers.		bertiewhykovich
12946860	11.643542	-7.9764004	comment	4.0	15.5	1479086889	10.217834	iocage is great, but according to the README in GitHub it is not being developed anymore. The author is working on a rewrite in Go. The rewrite isn't done yet last I checked.		smkelly
12968849	11.7843485	-7.0921035	comment	4.0	11.5	1479315246	-7.169109	There’s also the Stream API and lambdas in Java.Operator overloading is probably the worst feature ever invented, same with Class Extensions, reducing readability of code.And with a switch to C# Googl...		kuschku
12993280	11.7685795	-7.883472	comment	4.0	10.5	1479560256	10.255203	I've just started learning Ruby on Rails but Go I'm thinking about Go more often and am curious about working with it.Are there Rails-like frameworks for Go? Why I try to Google that, I find lots of stories about people switching from Rails to Go, but not a lot of frameworks discussions.		criddell
12954891	11.8883505	-7.59939	story	4.0	38.0	1479173353	10.391428	From Haskell to Java: modeling your problem domain with types	https://www.lendup.com/engineering/post/haskell-to-java-modeling-your-problem	rowborg
12987683	11.647594	-7.962677	story	4.0	98.0	1479485241	10.205076	Gosubc – An implementation of the SubC language in Go	https://github.com/qeedquan/gosubc	vmorgulis
13012165	12.002502	-7.7540503	comment	4.0	25.5	1479797376	10.42423	> In summary we've seen that: Haskell decreases development time...Have we actually seen that or have you just asserted that? Is this really true, and if it is, by how much? Haskell has been around fo...		pron
13035577	12.023733	-7.801862	comment	4.0	18.5	1480068457	10.451917	Can someone explain to me Alan Kay's problem with monads in functional programming? He attacks the monad concept several times in this talk rather cryptically.		georgewsinger
13044716	12.077062	-7.734684	comment	4.0	13.0	1480180986	10.443042	This is awesome, and a big step forward for OCaml. Only criticism is that it seems difficult/awkward that you need different functions/values for each phase. In other staged macro systems (Scala/LMS, ...		wcrichton
13045009	11.948839	-7.635252	comment	4.0	12.0	1480183669	10.410811	Perl might have a lot of operators but Haskell's ability to define your own operators leads to a ton of operators in the standard library and third party packages.		DasIch
13053833	11.706311	-7.482908	comment	4.0	14.0	1480315287	9.789592	"This, imo, is actually a bigger deal than generics. Since type erasure does all kinds of ""magic"", it doesn't surprise me that there will end up some kind of (T)-type casts somewhere in the OP's byteco..."		dvt
13057754	11.755445	-7.316339	comment	4.0	10.5	1480361498	2.1021154	I must admit I am wary of this attitude. I've worked at places where lambdas are clever, or generics are clever, or writing constructors that take arguments is clever, using LINQ on collections is cle...		lacampbell
13074767	11.782316	-7.5517116	comment	4.0	12.0	1480540637	10.398313	Would be nice to see a dependently-typed strict functional programming language that didn't require a GC or a C runtime. Are there any plans for this with Idris?		amckinlay
13074889	11.85575	-7.621031	comment	4.0	10.5	1480541612	10.410226	I've been learning Haskell and Idris off and on now for a few years.  I have a few friends who happen to be computer science majors and they tend to be very dismissive of Haskell, they mostly focus on...		alphanumeric0
13087435	11.701039	-7.0372534	comment	4.0	16.0	1480673046	8.397808	We were surprised by Java's poor performance because the HotSpot JVM also uses a concurrent mark-and-sweep collector, and is famed for the amount of engineering effort that has gone into it. We suspec...		jamesfisher
13094107	11.856267	-7.13956	comment	4.0	11.5	1480735757	6.774903	I have been working on a moon-shot project for more than a decade that seeks to model distributed systems as if they were digital logic circuits. One of the natural areas of interest is of course FSM'...		ChrisRus
13095106	11.9622555	-7.6172714	comment	4.0	13.5	1480757902	4.118397	I applaud the attempt, and it does look nice, but my impression of visual programming environments is that they never scale, and it might be an inherent issue.I have never met a single person that, wi...		beagle3
13112397	12.287257	-7.265472	comment	4.0	20.0	1481000882	7.042678	Relatively little work on it in a long time. I think to bring smalltalk into the web world takes a different kind of think than a straight port to Js. The dev environment needs to seamlessly cover bac...		sriku
13113563	11.894998	-7.630886	comment	4.0	12.5	1481019546	10.398323	"While his vitriol was extremely hyperbolic, I get his point somewhat on obtuse syntax.Take this example of Haskell from their docs:  thenP :: P a -> (a -> P b) -> P b
  m `thenP` k = \s ->
     case m..."		jsjohnst
13115902	12.251066	-7.250226	comment	4.0	12.0	1481042097	7.205422	You're not wrong, but I read that as 'thank': had it not been for Sun & Java, then maybe — just maybe — the development industry would have advanced beyond the 1960s/early 1970s.Can you imagine if the...		zeveb
13124015	12.24557	-7.5161176	comment	4.0	10.5	1481130020	-11.384125	Is anyone actually using Kotlin outside jetbrains? Seems like it doesn't have much mindshare or any high profile projects using it.		estefan
13130111	11.956364	-7.722998	comment	4.0	18.5	1481203642	10.396901	The top link on /r/haskell right now [1] is someone complaining that their program runs out of space due to a subtle interaction between laziness and IO. I think it's safe to say that we have tried la...		cousin_it
13130375	11.956257	-7.376146	comment	4.0	14.0	1481206632	6.966871	"tried listening to why OOP is bad and it was painful. 10 minutes in and 0 insights. He kept saying things like ""encapsulation doesn't work"" and then moving on. Not willing to stay another 20 min to find out why."		SonicSoul
13130720	11.662582	-7.338366	comment	4.0	11.0	1481209785	-8.754008	We write tests to be able to change it in the future with certain degree of confidence that we don't break anything and - if so - what exactlyYou don't want tests for that - you want a type system and a static analyzer.		gaius
13134046	11.987121	-7.740532	comment	4.0	12.0	1481229420	10.434754	I don't think Haskell is worse than any other language in that regard. What perhaps sets it apart is how much of its functionality is implemented in third-party libraries, which may be difficult for a...		kqr
13142107	12.145399	-7.508989	comment	4.0	15.0	1481319872	-10.6097975	I'm interested in .NET ecosystem languages, as well as functional programming. How is the parsing and meta-programming toolset? How easy or hard would it be for me to implement a subset of F# that only allows pure functions?		stcredzero
13149035	11.833	-7.0756507	comment	4.0	14.0	1481419401	-10.759432	"When is this useful?  There's no real multiprocessing concurrency in Python.  So using this on a computational example such as the one given:    result = [i async for i in aiter() if i % 2]

won't spe..."		Animats
13155985	11.599048	-7.464403	comment	4.0	12.0	1481523154	10.176648	> Really? Interfaces everywhere you can possibly imagine? Is that where we're heading in Go land?That should be where you are heading, because contracts should be separated from implementation, things...		twblalock
13154783	11.612755	-7.96761	story	4.0	7.0	1481505748	10.251218	Ask HN: Is Go or Rust a more viable language to learn in 2017?		harrylucas
13169102	11.886314	-7.298853	comment	4.0	11.5	1481653254	7.016949	Don’t ever bother learning or using object-oriented programming.		joemanaco
13184916	11.720574	-7.673881	comment	4.0	13.5	1481813533	-10.459935	I'm sure you get something like flycheck out of the box, but what makes me use IntelliJ for Java is:- navigating around the code: jump to interface, jump to implementations, jump to definition, etc. T...		fusiongyro
13186619	11.708717	-7.301927	comment	4.0	12.0	1481825034	9.318861	For me, this looks MUCH more like Haskell than Python and I think that this is symptomatic of an erroneous claim that some functional programming proponents seem to constantly make: That declarative, ...		good_gnu
13186668	11.613471	-7.1220593	comment	4.0	11.5	1481825369	-7.057429	"""def"" is an abbreviation non-programmers are more likely to understand than ""fun""."		lmm
13191432	11.614132	-7.9438887	comment	4.0	36.5	1481868743	10.2300005	Great! Now use a build system that downloads the compiler too. For example, Bazel will download a copy of the Go compiler if you are using it to build Go programs.		sayrer
13206315	12.033976	-7.8100376	comment	4.0	14.0	1482078301	10.422407	Should have started him with Haskell so he would learned monads and functors right from the start with no mutable object baggage to trip him up. Maybe a few weeks of child level category theory first.		commentzorro
13211525	12.057494	-7.6156864	comment	4.0	10.5	1482157366	10.199787	> Monads: there was a very vocal faction on TC-39 that really wanted a Promises to be monadic and very much emphasized mathematical purity over usefulness and any attempt to discuss things tended to g...		bad_user
13212288	12.001558	-7.7849035	comment	4.0	19.5	1482163726	10.403556	> By the very nature of the monad laws, they cannot have side-effects, so they cannot be eager.I'm pretty sure monads can have side effects and be eager. It's just that not everything will be captured...		zeahfj
13212964	11.6952095	-7.3025146	comment	4.0	14.0	1482167674	-8.859663	I lost it when the guy said don't use an IDE. What's the point of having a static type system when I can't use an IDE to see where a specific method is called.		balamaci
13213537	12.001073	-7.761563	comment	4.0	15.0	1482171338	10.31151	"IO a is short for roughly World -> (a, World) and is thus computationally pure. You cannot figure out what happens to the World in between but you don't need to, thus the side effects ""don't exist"" fr..."		Guvante
13217118	11.905496	-7.169537	comment	4.0	13.5	1482203347	9.852105	As has been pointed in some of the other subthreads, another reason to run nginx in front of Go/Python/Ruby is that running on 80 or 443 needs root access. From a deep security perspective, it's bette...		jaredklewis
13247998	11.74346	-7.8655725	comment	4.0	17.0	1482539425	10.15939	I am a bigger fan of the keep it simple approach, which is my way of saying I prefer to write web applications in the web technologies directly intended for the given task.I suspect Go is a newer and ...		austincheney
13248034	11.698532	-7.8879533	comment	4.0	11.0	1482540127	10.14273	Is this a new wiki page? I've seen bits and pieces here and there in the net/http docs but nothing nearly as extensive.I think the stdlib is awesome, but the biggest gripe I have with the standard net...		bacongobbler
13249389	12.0881605	-7.4095545	comment	4.0	17.5	1482578755	7.1340256	Once you scratch the surface and get to the functional core, you will never want to go back to object-oriented programming. Maybe it's just me, but since I have tried functional programming, I have ne...		iagooar
13252765	11.689466	-7.6456747	comment	4.0	32.5	1482637063	10.1018505	Because the creators won't give us generics		hamandcheese
13252856	11.842842	-7.47553	comment	4.0	22.0	1482638979	7.2055736	Immutability is one of many advantages of functional programming. Other advantages include higher-order functions (which Rust cannot support very well with its memory model), stronger type systems (on...		wyager
13255764	11.90792	-7.4195666	comment	4.0	15.5	1482705487	7.2944922	Like a lot of people, I'm drawn to the idea of functional programming, and I enjoy using the functional building blocks in JavaScript. What I struggle with is performance, and I bump into it all the t...		dahart
13257035	11.998475	-7.7557874	comment	4.0	13.5	1482728967	10.377756	Out of curiosity what progress has been made in regards to improving the ergonomics of records in Haskell? Stephen references that an answer is in the works, but it looks like it has stalled out.		bipvanwinkle
13257453	12.016811	-7.731808	comment	4.0	18.5	1482739873	10.465285	I am one of the people who are interested in Haskell and find its documentation lacking. I don’t miss comprehensive language books, I miss module documentation. It almost looks as the Haskell communit...		zoul
13257575	11.966478	-7.7102733	comment	4.0	10.5	1482743108	10.442711	I'm in the same boat as you. I learning Haskell earlier this year, and while I really really want to like it (if nothing else, I'm a sucker for type systems) and even start using it for projects I can...		ChubbyGlasses
13275679	11.9405155	-7.6601067	comment	4.0	11.0	1482986797	10.36129	"IMO, if you just use C++ without subtyping (no inheritance) and only immutable structures, you get most of the ""simplicity"" of Haskell.And with C++17 variant, you also almost get pattern matching.(also, as per ""powerful type system"", you can do dependent types in C++)"		acchow
13283279	11.9373865	-7.4630656	comment	4.0	34.5	1483086937	7.164973	"My ""functional programming epiphany"" came in a talk by Martin Odersky, who remarked that imperative programming is like thinking in terms of time, whereas functional programming is like thinking in te..."		rooundio
13289674	11.669641	-7.937791	comment	4.0	11.5	1483162721	10.181739	A few years ago I got into the habit of using alternate languages to HTML, CSS, and Javascript---namely Pug, Stylus, and Coffeescript---and I'm physically unable to use the originals any more. Are these supported by Gomix?		vortico
13291806	12.222249	-7.8353806	comment	4.0	12.0	1483203328	-3.2341783	Here are my recommendations, each category has a really different programming paradigm than the others:* Procedural: c / pascal / basic / fortran* OO: c++ / java / c#* Dynamic: python / ruby / javascr...		spapas82
13296280	11.642382	-7.1133966	comment	4.0	14.0	1483290124	9.167705	Guido van Rossum has vocally[1] expressed a distaste for functional programming idioms. His loss, I think.List comprehensions have always struck me as a very ugly mechanism which is convenient in simp...		RodgerTheGreat
13306155	12.170861	-7.90131	comment	4.0	10.5	1483410024	-3.1879787	I actually laughed out loud when I got to that part. It seemed like the first page and a half he really tried to explain it without jargon and then just gave up.To be fair, though, who is going to rea...		empath75
13305294	11.942323	-7.041369	comment	4.0	20.5	1483398603	-5.4826336	> When someone else uses it in conversation, it's absolutely guaranteed that the person is a pretentious asshole.I don't get your angle here. You realise an isomorphism is actually a well-defined math...		lacampbell
13232715	12.07628	-7.2904243	story	4.0	6.0	1482355170	10.329261	Crystal vs. Node.js vs. Golang vs. Julia vs. Rust vs. LuaJIT vs. C Fibonacci Benchmark	http://blog.seraum.com/crystal-lang-vs-nodejs-vs-golang-vs-julia-vs-rust-vs-luajit-vs-c-fibonacci-benchmark	seraum
13252416	11.604341	-7.886503	story	4.0	82.0	1482629674	10.077376	Channels in Golang	http://www.tapirgames.com/blog/golang-channel	bsg75
13266695	11.966407	-7.7233796	story	4.0	146.0	1482877106	10.447043	Haskus – A Haskell Framework for Systems Programming	https://github.com/haskus/haskus-system	Vosporos
13267883	11.682849	-7.939402	story	4.0	48.0	1482890379	10.125515	Gopli – Database backup between remote or local hosts, written in Golang	https://github.com/timakin/gopli	timakin
13310680	11.909252	-7.374373	comment	4.0	14.0	1483463440	6.990142	Most eye-opening moment in my software engineering class was when the professor asked, of four core OO features (don't recall the precise list now), which was superfluous.The answer, of course, was in...		macintux
13319012	11.849235	-7.3825607	comment	4.0	13.0	1483543732	-8.765544	"I'd count ubiquitous currying a design mistake in a dynamically typed language. All your ""wrong number of arguments"" errors get caught late.(But the real problem with common lisp is that its version o..."		cronjobber
13320457	11.731715	-7.3887725	comment	4.0	12.0	1483552660	10.109916	I'm curious to why they started this project when there already is low hanging fruit that can speed up Python (e.g. pypy). What makes this better other than to satisfy the inner go-fanboy?		thedjinn
13320300	11.610708	-7.911843	comment	4.0	31.5	1483551685	10.183447	The main reason I moved from coding in Python to Go as my main language many years back is because concurrency was such a pain in standard Python  (the other was compile time error checking).It's inte...		sfifs
13321209	11.675026	-7.070755	comment	4.0	12.0	1483557720	8.880763	Are namedtuples that popular? They always felt awkward to me.  If some temp variable with multiple values inside a loop, I either use normal tuple or a dict. If passing data around a dict or a real class. I never got the huge win from namedtuple?		brianwawok
13354003	11.676348	-7.074956	comment	4.0	16.0	1483936021	9.092743	The one line would be functional. Here is a good example:list(filter(lambda x : ('widgets' in x), mixed_widgets))[0]['widgets']I almost always go for more lines of readable code rather than less lines...		Alex3917
13358026	11.654669	-7.9596267	comment	4.0	11.0	1483983442	10.260199	"Arguments like ""you don't need generics"" or ""exceptions lead to convoluted code"" or ""assertions are only used by lazy programmers"" came from Go's creators.I too am rather surprised to see Go, Lisp and..."		zigzigzag
13358850	11.656626	-7.924009	comment	4.0	13.5	1483988896	10.247314	Here's a question for you: what if the Go team add user-defined generic types to the language, and people start demanding HKTs? What then? Do you implement them and hope nobody asks for dependent types? Where do you draw the line?		dmit
13371093	11.591708	-7.830334	comment	4.0	11.5	1484099420	10.230696	The fact that gofmt doesn't enforce some arbitrary line length is a blessing. I have a modern widescreen monitor and I use a maximized window text editor. I have no problem with 200 char length lines....		Strom
13375210	11.958736	-7.7221437	comment	4.0	12.0	1484152991	10.424108	For people new to the party, this looks great. For those who had been following the GHCVM project, it's a horrible disappointment.Basically, this project used to be a fork of the Haskell compiler to s...		moomin
13377428	11.761829	-7.223109	comment	4.0	31.0	1484168259	9.069122	When the ecosystem is synchronous like the Rust ecosystem, you are basically going to rewrite everything. All your network code, all your client libraries.Async code can not use synchronous code becau...		fooyc
13382633	11.9479685	-7.2312517	comment	4.0	11.0	1484232929	9.201426	Any advice when saving new DB records ? We usually return the new ID in our return result, but it is not available when using async/await. Is it possible to send a second result with the ID and how do...		louprado
13398801	11.829449	-7.571835	comment	4.0	13.0	1484407804	10.347341	This confirms my own experience. I discovered that programs written in (or use) dynamic languages like Lisp are surprisingly reliable (Emacs in particular).Type safety won't protect us from broken sof...		progman
13399800	11.712441	-7.3641114	comment	4.0	15.0	1484418963	-8.806738	> Of course in production software type errors are rare.Not according to static-typing fundamentalists.> They're generally the first errors that pop up during debugging or testing.Exactly, and dynamic...		mpweiher
13406740	12.292563	-7.5154004	comment	4.0	14.0	1484519248	12.845131	AFAIUI from a recent talk by Alan Kay his original intention was that communication would be async (just as it sort-of is in real life)[1]. So it would basically be actors. Which sounds nice until you...		lomnakkus
13407204	12.386822	-7.51533	comment	4.0	13.0	1484523972	12.874107	"Erlang != OOP as imagined by Kay... as I understand Kay's intent.Erlang == ""independent reliable units of computing"". (I think Erlang programmers call them ""functions""? Or maybe ""processes""? AFAIR onl..."		lomnakkus
13428745	11.626428	-7.8551626	comment	4.0	16.0	1484763615	10.204897	It's redundant because Go already has type-switch and type-assertions. Your comments about ints vs arrays vs behavior misses an important fact: An object of any type can be promoted to interface{} (ak...		brandonbloom
13429166	11.713513	-7.769739	comment	4.0	11.5	1484765720	10.1872015	> nor does it help downstream users of a libraryIf you add a new type to a sum type in a statically typed language, that's a breaking change for all downstream consumers. Again, you may view this as a...		brandonbloom
13430089	11.969679	-7.6989193	comment	4.0	11.0	1484771998	10.379819	In my experience either IO absorbs everything but the most trivial trinkets that I wouldn't ever mess up anyway, or I go so far out of my way to avoid IO that it's near impossible to keep track of all...		daxfohl
13430491	11.598343	-7.854919	comment	4.0	11.0	1484775293	10.020513	Au contraire: Go has a built-in 'select' keyword that lets you wait on a set of arbitrary (blocking) channel operations. Start up blocking I/O in goroutines, and select on channels that give you the results.		azernik
13432220	11.944668	-7.58274	comment	4.0	12.0	1484789856	0.9554451	Tangent: Is it a good thing for programming that I have to wrap my mind around this new term called contravariant?		inconclusive
13437445	11.675317	-7.901434	comment	4.0	16.5	1484846530	10.201411	Go has the potential to be one of the most popular languages on rpis. Right now Python is probably most popular but for more sophisticated apps you need something more. Java is too bloated for the small memory, so Go is a great choice.		rb808
13443254	11.663065	-7.9339266	comment	4.0	14.0	1484914721	10.220746	This might just be my Python upbringing, but... am I the only one to be troubled by Go's single-letter words? I've always found Go code very hard to read because it isn't self-descriptive at all.		kosma
13446931	11.751528	-7.9188147	comment	4.0	15.5	1484945888	12.835963	I'd mostly agree, and the packages you've written (ExRM and Distillery) make releases super easy to build, start, and stop.The main benefit of Go, I think, is that it can cross-compile builds. Erlang ...		amsha
13448355	11.781647	-7.3666534	comment	4.0	18.5	1484963879	-8.908615	No, static typing just gives a false sense of reliability to people who are not experts in reliability. There is even some research showing no correlation of static typing vs dynamic typing to bugs [1]. People tend to ignore it though.[1] http://web.cs.ucdavis.edu/~filkov/papers/lang_github.pdf		zzzcpan
13451858	11.997625	-7.744044	comment	4.0	12.5	1485029636	10.394018	I have two questions for you:- How does Haskell fare with large projects that use APIs that are inherently stateful, like OpenGL? Don't things get messy and ugly as the pure world of Haskell is being ...		Kenji
13452483	12.007502	-7.763715	comment	4.0	11.5	1485038169	10.412679	New language to learn? Write a toy. Spend more time on that toy than it warrants, re write it and someone else find it useful or fun.These programs are almost wholly absent in Haskell. List all the pr...		harry8
13453872	11.855881	-7.023682	comment	4.0	11.5	1485065374	10.218895	Transitioning from Python to Go isn't as easy as you make it out to be. Good luck finding solid alternatives to the likes of Numpy, scikit-learn, Pandas, SQLAlchemy, BeautifulSoup, Flask etc. Oh, and not to mention the community surrounding these and other popular Python libraries.		Cyph0n
13455805	11.962768	-7.6817675	comment	4.0	12.5	1485102250	10.414295	This is fantastic! Forth's simplicity is a great fit for exploratory programming on resource-constrained systems, and I'm a fan of anything homoiconic.Maybe one day I'll get my dream of having a forth or lisp with the type system of haskell.		tines
13362465	12.467452	-7.827212	story	4.0	23.0	1484021008	10.718356	New Functional Language for JVM (Lux) Builds on Haskell, Clojure, ML	http://www.infoworld.com/article/3155704/java/new-functional-language-for-jvm-builds-on-haskell-clojure-ml.html	lrenn
13382233	11.700915	-7.921086	story	4.0	17.0	1484229998	10.208815	Gogland – Brand New Go IDE from JetBrains	https://blog.jetbrains.com/go/2016/12/15/announcing-gogland-brand-new-go-ide-from-jetbrains/?mkt_tok=eyJpIjoiWkRZd1pHSmhaV1l3WldaayIsInQiOiJMcmVjOUxRYk5KalY4ak1FcVZMa2NraTd3dzF2aEVPYnUwNUtKdjhBT1NsK281Mm92eGxna2FRdTJhTHBOcFp0c0xPRzN6b1Y1Qk1xazJRc3NIQjZWUkk0cHFOSUs4U3FZc2l3OVNPVFwvUlMxV1JDTUVwOTM4UDNNN1FrRGY2S3gifQ%3D%3D	zinxq
13402246	11.603685	-7.8637524	story	4.0	84.0	1484453138	10.111524	Google/fchan-go: Experimental channel implementation	https://github.com/google/fchan-go	mmastrac
13473073	12.151581	-7.6119165	comment	4.0	11.5	1485277004	11.8694105	"I don't understand how lines 4 and 15 don't get caught by the compiler-- a String cannot extend an Integer?I'm not even sure how you would be able to write this in Scala without violating rule number 1 of Scala, which is ""never write the word null in your code""."		mark242
13477952	11.677254	-7.899733	comment	4.0	14.0	1485311822	10.168966	Really well written. We have a similar story where we re wrote parts of our Java code in go and the build time has reduced from 15m to 3.6m! Coffee break to reading a small medium article.		andrewvijay
13478025	11.919341	-7.6154704	comment	4.0	14.0	1485312541	11.80642	Looking through the really abstract scala code they linked brings up a problem that really frustrates me in haskell. Why doesn't anybody document their really abstract code? You know it's going to be ...		imh
13478251	12.335753	-7.506676	comment	4.0	14.0	1485315544	12.7442	I have a simple question.  In the article they mentioned they had a concurrency issue with a timed buffer that they later neatly solved with go channels and goroutines.  They said that they solved the...		unoti
13481829	12.198571	-7.6471663	comment	4.0	11.5	1485356157	11.965068	Some experience to share: I studied Scala and FP on the side before jumping to a team that was using it in production. Most of the engineers on the team have an enthusiasm to learn about and use fp.Bi...		justinhj
13505620	12.159143	-7.5221033	comment	4.0	29.0	1485596553	11.929963	"2 years from now: ""we got rid of all the functional bullshit and we're now using ifs and for loops all over the place; reminds us of our fixie bicycles and other aspects of our hipster lifestyle"".Over..."		general_ai
13515631	12.445883	-7.5026984	comment	4.0	15.5	1485713524	12.858015	"It's not clear to me from a cursory look through the docs how the scheduling system works.  ""Erlang-like"" concurrency works so well predominantly because the runtime uses preemptive scheduling instead of cooperative (which is what basically everything else uses, unfortunately)."		im_down_w_otp
13515797	12.342718	-7.509274	comment	4.0	11.0	1485715324	12.860781	"That's incorrect, most scheduling systems, including OS threads are preemptive. Erlang's scheduler itself is actually cooperative - though it can still preempt the ""processes"" it schedules.Erlang's me..."		jahewson
13516708	12.112684	-7.499316	comment	4.0	15.0	1485724491	-10.609899	C# is probably my recommended language for anyone looking to get started with functional programming and event handling.Its familiar Java/C like syntax, classic use of OOP, enterprise vibes will mean ...		didibus
13545342	12.097604	-7.5249496	comment	4.0	24.0	1485984047	-10.583242	I wouldn't call it strong continuing support. F#'s been a second class citizen both in resources given and marketing support. Community effort is great, but as long as MS pushes C# as the flagship lan...		MichaelGG
13558729	11.893267	-7.3532004	comment	4.0	11.5	1486113634	9.279301	Whole standard api is still using callbacks so you would need to write your wrappers around it to not use callbacks.. And async/await is not solving anything because your definitions of fuctions will ...		lossolo
13559560	12.009447	-7.2257876	comment	4.0	11.5	1486127777	9.180634	"> it encourages a lot of callback hell we've found at my companyThis is a very odd comment. async provides the same level of indentation as Promises does:  async.waterfall([
    function(){},
    func..."		nailer
13567730	11.592722	-7.9628353	comment	4.0	11.5	1486227985	10.215768	Go was inspired by both C and Oberon:https://talks.golang.org/2015/gophercon-goevolution.slide#17https://talks.golang.org/2015/gophercon-goevolution.slide#29Video: https://www.youtube.com/watch?v=0ReKdcpNyQgRust is too complex to be compared to C. It's more like C++ plus ML.		mseepgood
13573392	11.658759	-7.9777246	comment	4.0	15.5	1486315901	10.292076	">  Maybe it's because I don't have the ""depth"" of some of the HN users, but Go feels great to me.I've been writing Go full-time as my primary language for nearly five years. Before that, my languages ..."		chimeracoder
13577431	11.846572	-7.5989757	comment	4.0	10.5	1486367760	-10.582412	I wrote a lisp in Go a while back and got to the point where it could parse and interpret basic lisp code. I got stuck on making it do proper tail call optimization since I didn't want it to do trampo...		archevel
13580318	12.348335	-7.0510974	comment	4.0	11.0	1486395192	13.195098	follow-up: for a non-Perl person, who is incredibly interested in getting started with Perl 6, are there any good resources (code examples, blog posts exploring language concepts unique to Perl 6) that anyone would recommend?		alekratz
13580220	12.39454	-7.044084	comment	4.0	12.0	1486394664	13.136954	I've been using it locally to write a few small scripts, nothing publicly available (yet).Traits and roles are really neat - they feel like a natural conclusion to what Ruby started building upon with...		woodruffw
13592046	11.787647	-7.151366	comment	4.0	11.5	1486496651	8.527859	One of the things that always stops me pushing too far into clojure is memory footprint.Does anyone have any suggestions or resources for how to keep the upfront memory cost of the jvm to a minimum (a...		hammerandtongs
13598422	11.822039	-7.084254	comment	4.0	12.0	1486564294	5.187408	I don't think that's fair.  The driving point of that book was that developers needed a higher level language to talk about these patterns than simply at the code level, and showed people how to put t...		JimDabell
13564836	12.021642	-7.427831	story	4.0	86.0	1486169619	-10.524565	Type Driven Domain Modelling, Part 2: Evolving Models with F#	http://lucasmreis.github.io/blog/type-driven-domain-modelling-part-2/	lucasmreis
13606433	12.396548	-7.3192077	comment	4.0	14.0	1486643431	2.0106995	"The bad side1) no support from mega corporations
2) not that many developers to choose from
3) while based on BEAM it's still too ""new""
4) too slow for raw money crunching"		holydude
27502724	12.417344	-7.676684	comment	4.0	13.0	1623679932	-11.096906	"Shaun Lebron has a bunch of interesting stuff on his github[0]
involving closurescript.I haven't toyed with closurescript yet, if anyone has any experience with it, what are its strengths and weakness..."		tartoran
27516226	11.930336	-7.1574225	comment	4.0	12.0	1623768240	-9.584917	I tried dabbling with Cue, but it doesn't seem to solve the problem that I care about, which is that I have a whole bunch of configs that vary only slightly and I want to DRY them up.For example, for ...		throwaway894345
27525243	12.067493	-7.0727973	comment	4.0	11.5	1623821800	-6.2987804	"A small extra trick:If you use arrow functions without a body you can log and fallback to the original statement.Example starting point, you're wondering what message is. 
``` 
const upperCase = (mess..."		Griffinsauce
27536310	11.61695	-7.1476827	comment	4.0	12.0	1623906662	9.030226	For me, code with reduce is less readable than a loop. With loop everything is obvious, but with reduce you need to know what arguments in a callback mean (I don't remember), and then think how the data are transformed. It's an awful choice in my opinion. Good old loop is so much better.		codedokode
27539984	12.252079	-7.293423	comment	4.0	20.0	1623940383	7.07564	Smalltalk brought both fascinating and terrible aspects.Everything is inspectable, discoverable, interactive. Reactive programming, live objects, build stuff and see it come alive at every step. JIT m...		nine_k
27564585	12.02237	-7.8256373	comment	4.0	11.5	1624137857	10.430554	"This was posted several times recently without anyone noting that it was the origin of ""A monad is a monoid in the category of endofunctors, what's the problem?"", which often seems to be quoted as if it wasn't attributed to Wadler satirically."		gnufx
27567423	11.94687	-7.210483	comment	4.0	12.5	1624167464	-8.974896	You raise a good point, but the OP's point still stands. All we'd need is comments in header files with the extra type information encoded, and automated FFI would be possible.Not to say that would be...		TimTheTinker
27584382	12.339027	-7.0235205	comment	4.0	14.0	1624309075	13.179129	> We’re going to build the Oasis andThe Black Sun was there first.Can i interest you in a loose collection of extremely janky perl scripts? The bar’s owner hates it but, who cares? If he kicks us out we can just race bikes for a while until the fuss blows over.		hprotagonist
27591673	11.804593	-7.29704	comment	4.0	17.0	1624370330	-9.001472	I love these little embedded languages, but I really want one that supports type annotations. I'm specifically want something that can generate large configuration structures (e.g., Kubernetes YAMLs, ...		throwaway894345
27608507	11.872353	-7.131158	comment	4.0	13.0	1624474450	-9.154598	Having worked at two unicorn-ish startups that were founded and grew up on Python stacks I specifically want to work on a statically typed backend for my next job. I'm tired of the mishmash that is a large mature Python codebase.		bosswipe
27609235	11.806823	-7.333634	comment	4.0	12.0	1624477938	-6.593092	I think the strongest evidence of this is functional vs imperative paradigms. It’s rare to find a functional programmer who didn’t have something like lisp or Haskell as their first language.		jmole
27535299	11.988344	-7.757918	story	4.0	121.0	1623892684	10.429917	Why I Support the Haskell Foundation	https://cdsmithus.medium.com/why-i-support-the-haskell-foundation-1ac3cda1f82f	cdsmith
27628886	12.031241	-7.4350863	comment	4.0	12.0	1624615411	9.04833	"I'll be reading Domain Modeling Made Functional [1], which seems fun as it applies F#/ML/FP concepts to ""enterprisey"" DDD.[1] https://isthisit.nz/posts/2019/domain-modeling-made-function..."		nicolapcweek94
27639691	11.976152	-7.717325	comment	4.0	11.0	1624689592	10.38515	A functor is two things:- a parametrized type, like for instance List: you can have lists of integers, floats, functions, or any other type- a way of mapping (in the sense of List.map) between instanc...		chombier
27642369	12.235421	-7.615365	comment	4.0	14.0	1624719187	11.949597	For sure. I do most of my work in situations of high volatility of domain and requirements and relatively high risk. (E.g., startups, projects in new areas.)Static typing really appeals to me on a per...		wpietri
27642607	12.311712	-7.694979	comment	4.0	12.5	1624720657	-11.217778	It seems like there's been a crash in the FP language market: Scala, F#, ... Clojure.Anyone any idea why?Scala 3 almost looks attractive.		mjburgess
27643060	11.7695465	-7.318087	comment	4.0	12.5	1624723784	-8.922116	For what its worth: People don't use dynamic language because they don't know better or never used a static language. To better understand what dynamic languages bring to the table, here are some disa...		lukashrb
27656988	11.831239	-7.3701153	comment	4.0	24.5	1624841941	-10.007739	I always feel that for lisp-like languages it's just not a good idea to make them statically typed. Their power is derived from macros and the fact that code is data and the other way around.For stati...		valenterry
27660681	11.920104	-7.367954	comment	4.0	10.5	1624881277	7.053851	People forget what the intent of OOP originally was.OOP was envisioned as a way to manage software projects with many contributors at a time when we didn't have half the tools for hiding context that ...		urthor
27663744	11.937447	-7.474398	comment	4.0	14.0	1624896786	7.273774	"Careful. Functional is often harder to debug. The very ""state"" functional likes to avoid is often an excellent x-ray point(s) for debugging. It's one of the reasons functional fails to take off in the..."		tabtab
27722391	12.057649	-7.315184	comment	4.0	17.0	1625327177	7.1487293	> one of the places where computer science has gone backward, preferring more clunky systems and less elegant paradigmsI respectfully disagree. Smalltalk has had its time. OOP has had plenty of invest...		willtim
27744311	11.875706	-7.6213374	comment	4.0	17.0	1625546823	10.399024	I think most people shy away from doing something like this for good reasons. It is complicated, not easy to understand for other people and can require intense maintenance. So it's usually only worth...		valenterry
27755187	12.139133	-7.2160783	comment	4.0	12.0	1625610523	8.476049	"That link says O3DE uses EC, not ECS. These are terribly named and often cause confusion, but they are different.In ""Entity Component"" systems (think Unity), entities own components that give them dat..."		mkishi
27781531	11.635651	-7.0715766	comment	4.0	11.5	1625818703	9.078336	"Exactly. Pythonic versions:    groupBy(fn): {fn(x): x for x in foo}
    sortBy(fn): sorted(foo, key=fn)
    countBy(fn): Counter(fn(x) for x in foo)
    flatten: [x for y in foo for x in y]
    filter..."		quietbritishjim
27786022	12.237198	-7.535328	comment	4.0	18.0	1625851035	-11.308543	> Of course we as a company are also cognizant of the IntelliJ lock-inThere's your politics.  Kotlin is succeeding because of it's ties to a very popular Java IDE, so developers already using IntelliJ tend to trust it.It wouldn't do nearly as well without that built in base of support.		jimbokun
27808410	11.999883	-7.761477	comment	4.0	14.0	1626080454	10.418182	"Why not simply read ""Learn You A Haskell"", which is mentioned in the introduction?"		zabzonk
27821102	12.011575	-7.6581717	comment	4.0	11.5	1626185006	10.422846	> If a major company invested in the SML ecosystem, it would take over the programming world.I like SML both out of nostalgia and for its actual merits, but I don't think that's true.  SML was far ahe...		Athas
27843507	12.343184	-7.262045	comment	4.0	15.5	1626348209	7.1530557	This is a long list of rare features that make Pharo interesting:https://pharo.org/features		xkriva11
27844103	11.940443	-7.384058	comment	4.0	12.0	1626353646	7.163562	I think OO has fallen out of fashion because there's a perception it can more easily lead to confusing code. While one can write confusing code using FP, it's not as easy to do.		rendall
27844279	12.308892	-7.301521	comment	4.0	15.5	1626354947	7.113863	I've noticed that as well - it's a bit strange given that Pharo is a fork of Squeak, which does proclaim its ST origins on its front page.I wouldn't say Smalltalk has a bad rep nowadays, but it used t...		zabzonk
27846163	12.240399	-7.2207303	comment	4.0	13.5	1626364378	7.1887536	Smalltalk first appeared in 1972, and was a stable commercial product by 1980.Java didn't hit the market until over a decade and a half later.If you can't build adoption with a 15+ year head start, then it's not the next generation's fault.  It just wasn't going to happen.		StevePerkins
27853580	11.595911	-7.9482102	comment	4.0	19.0	1626417560	10.164532	A well articulated paper by a great thinker.That said, switching from C++ to Go made my life so much easier and more enjoyable that I do not see myself going back to that language ever again.		zeroc8
27907687	11.735523	-7.0864353	comment	4.0	16.0	1626881708	7.98755	There is also a NamedTuple (notice the different casing) from the typing library, which doesn't seem to be mentioned in the article:https://docs.python.org/3/library/typing.html#typing.NamedTu...    c...		nikeee
27929416	12.0835285	-7.799696	comment	4.0	12.0	1627038771	-2.959593	> representation theory (abstract linear algebra)To me, representation theory means a lot more than abstract linear algebra.  Of course, one can define terms however one wishes, including in such a wa...		JadeNB
27951752	11.942302	-7.351374	comment	4.0	12.5	1627238586	10.37988	"Thank you for this nice writeup! This paper was led by my student Sadjad Fouladi (https://sadjad.org/), part of a broader theme of coercing a ""purely functional-ish"" design onto everyday applications...."		keithwinstein
27956445	11.921957	-7.180354	comment	4.0	13.0	1627282168	-9.052983	Very woolly. I was expecting more concrete things like* Use static types* Use CI and version control* Use schema-based data storage* Prefer function calls to events* Use formal verification if possibleetc.		IshKebab
27961051	11.8241	-7.3408623	comment	4.0	14.0	1627315133	-9.09503	It's probably just a huge bias, but I feel that, as a programmer matures and experiences more and broadens his or her horizons regarding programming languages, he or she takes a road from dynamically typed languages to statically typed languages, often going through lisp as an intermediate step.		tines
27963646	11.677532	-7.1466007	comment	4.0	10.5	1627325700	8.933767	In many languages (including Python & Scala), sets are not much more than syntactic sugar on a hashmap-like datatype.		darkr
27975578	12.033533	-7.653762	comment	4.0	25.5	1627409382	10.409413	The intro page says this course is not about OCaml, but then the remaining pages go into detail about the various features of OCaml. The problem with this approach is that when you read about a featur...		flowerlad
27976079	12.049047	-7.778679	comment	4.0	16.5	1627411936	10.407465	Learning OCaml will teach you the languages and concepts of the next 5 to 10 years of mainstream programming languages. E.g., here's a TC39 proposal to add declarations to conditionals: https://github...		yawaramin
27981574	11.953792	-7.1949973	comment	4.0	12.5	1627461385	-9.04083	"> Often I have seen people put a lot of effort into testing things that really doesn't have much payback compared to what they could be testing instead.90% of the ""unit tests"" that I've observed in th..."		ohazi
27988915	12.252325	-7.6479487	comment	4.0	10.5	1627502026	11.931298	Do you think Twitter using Scala had a big influence on the current state of its ecosystem?		dudul
12005441	11.749304	-7.38237	comment	4.0	17.0	1467241140	-9.793995	> I have no dogma about where you implement your typechecker; all I assert is that it's better to have one.You seem to be suggesting that types are absent from lisp, that's not the case.Common Lisp, S...		Jtsummers
12016713	12.251605	-7.539555	comment	4.0	12.0	1467385954	-11.382441	Anyone using Kotlin for production code, how mature is it, re. tools and language?How is it compared to Java 8/9?Eclipse vs IntelliJ?		SNvD7vEJ
12020658	12.344427	-7.0327196	comment	4.0	10.5	1467418234	13.204377	I read this, but seemed to skip over the part where he explains why this changed suddenly, when the behavior was documented?What changed to make the perl become capable whereas previously it lacked the low port capability?		davidu
12025524	11.8503275	-7.458212	comment	4.0	10.5	1467541760	7.5409403	maybe I'm wrong but the last example of pureFunction mutates and returns one of its arguments. That's not a pure function.		sjclemmy
12033815	12.039061	-7.751611	comment	4.0	12.5	1467680098	10.408848	I wonder if anyone is working on a full rework of Haskell's syntax, a la Facebook's Reason for OCaml? I'm a big fan of the semantics but not as much the syntax of Haskell, too, and it would be interes...		cfallin
12044011	11.66224	-7.9708323	comment	4.0	10.5	1467821390	10.267608	>> With go you can take a C++/python programmer and have them writing production code pretty soonIn my experience, learning Go (and by that I mean fully grasping the ways of Go, goroutines, channels, ...		gtrubetskoy
27947107	12.167545	-7.631215	story	4.0	34.0	1627193254	11.927246	Typelevel Scala and the future of the Scala ecosystem (2014)	https://typelevel.org/blog/2014/09/02/typelevel-scala.html	luu
27973021	11.927092	-7.6568394	story	4.0	68.0	1627396890	-10.378015	Composable Data Validation with Haskell	https://www.foxhound.systems/blog/composable-data-validation/	todsacerdoti
12047909	12.333756	-7.413584	story	4.0	115.0	1467875226	12.707764	Akka.NET 1.1: Akka.Cluster, Akka.Streams, and Multi-Node Testing	https://petabridge.com/blog/akkadotnet-11-cluster-streams/	Aaronontheweb
12056874	11.643305	-7.8169513	comment	4.0	11.0	1467996573	10.409568	It's too bad this is written in Haskell. I don't have anything against Haskell, it is just not as popular a language as others.[1] Any ANTLR target language would have been a solid choice.[2] This way...		wspeirs
12076658	11.983886	-7.735854	comment	4.0	15.0	1468296204	10.416816	>>But in Haskell you can get anything done :-)Yeah, only if you are willing to spend anything (e.g. insanely large amounts of time) on it :(Please correct me if I am wrong, but for any large project, ...		tmptmp
12090310	11.620684	-7.8939667	comment	4.0	11.0	1468450004	10.20467	> Batteries included: argparse, pty, locale, configparser, json, uuid, http. All of these excellent modules are used by asciinema and are part of Python’s standard library. Python stdlib’s quality and...		zalmoxes
12091021	11.652553	-7.913467	comment	4.0	12.5	1468458273	10.218902	one persons 'lack of expressive power' is another persons 'this code is easy to read'.i've moved from python -> go for server backends & some personal command-line tools, and couldn't be happier.i sti...		dilap
12090273	11.616917	-7.9338346	comment	4.0	12.5	1468449639	10.150422	I'm left wondering why the switch was made in the first place. I spend about half my time coding in Go and love the language, but if I wasn't looking for easier concurrency or a speed boost, I wouldn'...		JamesMcMinn
12106657	11.684196	-7.8252935	comment	4.0	12.5	1468682971	10.252041	I realize this will probably be downvoted because it's not adding anything productive to the conversation but I agree with you 100%.I'm running in to that with Go. Go even makes it super easy to break...		leetrout
12108214	11.670768	-7.1768727	comment	4.0	14.5	1468710324	9.088752	`map` and `filter` should take their functional argument first, then data second.		_callcc
12108696	11.648466	-7.311899	comment	4.0	16.0	1468720544	-8.568063	"I'm surprised that the article and none of the comments so far mentioned the ""Expression Problem"": http://c2.com/cgi/wiki?ExpressionProblemBasically, if you structure the control flow in object orient..."		ufo
12108721	11.683861	-7.4011045	comment	4.0	11.5	1468721101	-8.663635	I was familiar with the problem but didn't have a name for it; thanks for providing me with one.What kind of work has there been on creating programming paradigms that make it easy to both add new typ...		jake-low
12109430	12.340259	-7.459947	comment	4.0	11.0	1468742695	12.769201	I've experimented with both; I've done some Akka.net training. My thoughts:1. Orleans is very clean but highly opionated and this results in what I see as operational shortcomings, e.g. I prefer runni...		ryanjshaw
12109555	11.825546	-7.5869393	comment	4.0	14.5	1468747665	10.076352	Yeah, the application section is pretty poor. The number one large-scale practical application of semigroups (and, more often, their extension the monoid) is in parallel and concurrent systems. Associ...		noelwelsh
12109710	11.769477	-7.6196265	comment	4.0	11.0	1468752705	10.278299	Haskell does have overloaded literals: integer literals have type `Num a => a`, and floating-point literals have type `Fractional a => a`.  And GHC has an extension OverloadedStrings to make string li...		JoshTriplett
12117324	11.9797945	-7.7330933	comment	4.0	18.5	1468868306	10.42379	I see things a bit differently. Some domains are well understood and it's relatively easy to write perfect code (e.g. mathematical functions, list manipulating functions, etc.), while in others it may...		rrradical
12117852	11.966994	-7.666208	comment	4.0	11.5	1468873508	-10.274693	That's not heretical, most Haskellers agree that macros are a misfeature because (a) they are only useful in homoiconic languages (b) they are only useful in strict languages (c) they interfere with type safety and code clarity.		nilved
12121246	11.924852	-7.4033394	comment	4.0	13.0	1468930348	7.2387223	Have you read the article - John Carmack suggest FP and writing pure functions is better.		andy_ppp
12126391	11.975876	-7.724214	comment	4.0	11.5	1468980425	10.392972	Try searching for 'hoogle'.  What I want is this: https://www.haskell.org/hoogle/ - not the website I am already on typing a search query in to!tbf, I don't feel the same way as the GP.  But this search always struck me as crazy in the past.		louthy
12135787	12.246075	-7.6263194	comment	4.0	23.0	1469094437	11.941345	Scala is a fine backend language, with far more bells-and-whistles than Java 8.However the comparison beyond language features is very much relevant, including the lack of Android support in Scala 2.1...		BigPicture4TW
12136036	12.260343	-7.611645	comment	4.0	18.5	1469098999	-11.391422	"I don't understand why Scala would drop the Java 6 backend. Surely Android is a big enough ""market"" to be worth maintaining it as a compilation target? Particularly now that Scala is expanding to be very clearly multi-backend (ScalaJS as first class, Scala Native starting up)."		lmm
12150441	12.161779	-7.906357	comment	4.0	11.5	1469298161	-3.1982524	I know I'm probably going to keep getting down-voted ,but if it's merely abstract and not complicated ,why is category theory considered a difficult course? They don't teach it in undergrad.  Is it be...		paulpauper
12150546	12.249449	-7.592719	comment	4.0	13.0	1469299936	11.828019	Does anybody know of a good benchmark between Elixer, GO and Scala?		tschellenbach
12152739	12.143152	-7.8795185	comment	4.0	12.5	1469349661	-3.231504	So. Just to clear up which math is good for a programmer to learn.All computer science is divided into Theory A (algorithms and complexity) and Theory B (logic and programming language design). Applic...		cousin_it
12160350	11.926828	-7.4377184	comment	4.0	12.0	1469469466	7.246529	Is functional programming the only other style?		mLuby
12177921	11.9263	-7.6167984	comment	4.0	10.5	1469672309	10.433677	"But if you have a large standard library and want to break the API, you can.If you have 100 different libs that are basically ""standard"" (who doesn't have `mtl` in their applications at this point), n..."		rtpg
12183096	11.948601	-7.448867	comment	4.0	10.5	1469739421	7.2721405	"Title is a bit bait-y. A better title might be, ""Functional Programming isn't enough"". tl;dr He says that FP is good, but you can still write bad functional code (which is fairly obvious)."		smt88
12184041	12.182837	-7.6166697	comment	4.0	13.0	1469749284	11.934159	I'm not a fan of the new syntax for struct tuples, struct records, and struct unions. I feel like it could have been avoided with a lesser evil if they had followed the same approach that Scala is usi...		saosebastiao
12184335	12.154096	-7.51785	comment	4.0	10.5	1469752624	-10.6636505	I've probably spent more time messing with F# on my Mint laptop than I have on my Windows desktop...Part of that is that F# doesn't really have the level of tooling that I've come to expect from C# in...		douche
12190817	12.000604	-7.7430625	comment	4.0	33.5	1469834989	10.413231	Shenanigans is a good word for that. So many people spend so much time learning the ins and outs of JS, which often find use only in JS, yet balk at learning the simplest things about Haskell. It does not help that theoretical and academic are so often used as slurs.		conistonwater
12191026	11.787156	-7.4852166	comment	4.0	17.5	1469838435	10.275104	"> this doesn’t sound authoritativeA functional language still uses procedures, even Haskell! To see what I mean, consider the possibility of divergence (infinite loop, `undefined`, `error ""foo""`, you ..."		catnaroek
12194998	11.65674	-7.0801077	comment	4.0	17.5	1469919134	-6.1613684	Thank you for the interest in Barliman!I'll try to answer all of the questions this afternoon.Also, I'm very much open to collaboration on Barliman, synthesis, relational interpreters/type inferencers, constraint logic programming, etc.!  :)		will_byrd
12157487	12.026851	-7.791128	story	4.0	8.0	1469439456	10.412731	Ask HN: Is there a mismatch between Math in German and English?		k__
12185523	11.68031	-7.262146	story	4.0	83.0	1469779229	-8.746067	Lambda Calculus Interactive Tutorial	http://blog.klipse.tech/lambda/2016/07/24/lambda-calculus-2.html	viebel
12209847	11.639812	-7.9533696	comment	4.0	17.5	1470145378	10.226924	This post is yet another reinforcement of my assertion that the people who like Go only like it because they have no idea what has happened in programming languages for the last few decades. Case in p...		devishard
12211373	11.881194	-7.229572	comment	4.0	12.0	1470157568	-6.6252193	My biggest problem with pure FP languages is a lack of interesting projects - anyone have a good one that isn't a parser?		akhilcacharya
12233613	11.709711	-7.8920746	comment	4.0	13.0	1470414642	10.072267	I much prefer to serve Go applications through an NGINX reverse proxy.It deals with a lot of stuff for you (static assets, SSL, logging, etc.) and lets you focus on developing your application rather ...		eljimmy
12240288	11.931708	-7.7282043	comment	4.0	10.5	1470524683	10.403579	"God, I'm so tired of this boring platitude. Every criticism of Haskell not satisfying category laws (of which there are many) are of the form ""undefined breaks things"". Obviously! How would a runtime-..."		wyager
12243364	11.821427	-7.2702217	comment	4.0	15.0	1470599609	-8.862924	Typing is such an important and powerful construct. It'd be amazing if scripting languages like Ruby and Python built optional typing into future versions, especially if they could be used in speeding...		echelon
12243753	11.809886	-7.350394	comment	4.0	13.0	1470605355	-8.949732	I used languages with static types for half of my professional life, the last one was Java, and languages with dynamic types in the other half. I never felt like I have more bugs in dynamic typed lang...		pmontra
12246669	12.293852	-7.55724	comment	4.0	18.0	1470652566	12.8434925	The issue is not really the VM, it's the language. GC performance is somehow tied to the number of objects it has to deal with.Java code tends to be object-oriented and create a lot of objects. Functi...		catwell
12253747	11.824045	-7.3507276	comment	4.0	13.0	1470741129	7.064294	Many developers, myself included, aren't fans of the Liskov Substitution Principle because base classes aren't a great way to reuse code.Prefer composition over inheritance for reuse. And prefer inter...		humanrebar
12253838	11.844315	-7.22613	comment	4.0	11.5	1470742607	7.170521	"Personally, I've found that heavy application of OO patterns leads to code that is very unclean, in terms of being ""simple and direct"".First developers apply the single-responsibility principle, and b..."		stupidcar
12260854	11.629348	-7.9577312	comment	4.0	14.5	1470828837	10.21425	This is basically a wrapper for 'go install'. See this post / linked blog posts for an explanation why this is faster/useful: https://twitter.com/davecheney/status/697171533215576064		lazyjones
12263184	12.188996	-7.61295	comment	4.0	11.5	1470848095	-12.298188	1. Java platform is excellent. Also, Scala.js is now Scala for JS platform, and scala-native is coming soon.2. Have you seen languages like APL or J? Now that's operator overloading. '+' is just a sym...		atemerev
12267162	11.718055	-7.3599796	comment	4.0	17.5	1470911440	-8.840335	Bah. If you want a statically typed language, get a statically typed language.What's a type hint for if, after that, the user can actually pass a different type?		alanfranzoni
12287740	11.684281	-7.0489364	comment	4.0	15.0	1471216222	-7.06185	"Would that exercise be the following? I'm not sure I understand what's being tested.  const f = (k) => {
    const funcs = [];
    for(let i = 0; i < k; i++) {
      funcs.push(() => i);
    }
    ret..."		danyim
12289452	11.9964905	-7.756566	comment	4.0	12.5	1471254429	10.437199	I often wonder what is it that keeps Haskell out of the mainstream as a development language. There seems to have been enormous popular support for Haskell by experts over quite some time, yet relatively newer languages like Golang are coming along and eating Haskell's lunch.		SeanDav
12321728	11.614815	-7.840145	comment	4.0	21.5	1471627655	11.899705	It's not, but they're both ML-family languages. I had hoped that Rust would be able to offer a similar level of elegance to Scala.		lmm
12323275	11.596232	-7.8128605	comment	4.0	10.5	1471638977	-4.1589875	I'm aware that Rust's bootstrap compiler was written in Ocaml. And yes, there are lots of ML inspirations in the language -- but not enough to make an ML language. Where are the module functors, for e...		gmfawcett
12328152	11.635208	-7.940361	comment	4.0	12.0	1471724254	10.151273	And Go is rather pointless to begin with. The only thing it get's right is the excellent microthreads and CSP implementation.The only reason it gained any traction is the big name of the mothership...		the_duke
12331311	11.626851	-7.9050684	comment	4.0	35.0	1471794643	10.186406	> Go decided to not have generics, to keep the language easier to learn and more approachable. It's hard to argue with this one.Plain parametric polymorphism is super easy to understand. Standard ML c...		catnaroek
12331856	11.641892	-7.92531	comment	4.0	13.0	1471801745	10.22321	"As some people like to point out, I'd also like to remind that in 1968 Algol had:    - user defined record types
    - user defined sum types
    - switch/case statement with support for sum types
   ..."		bad_user
12332129	11.7064495	-7.3899627	comment	4.0	13.5	1471804902	-8.762795	"  >  The type system also helps because we can do ""dangerous but fast""
  > things safely because we can prove they are safe in this instance.

This is an area of some static type systems that I'm real..."		steveklabnik
12337033	11.875716	-7.6457996	comment	4.0	15.0	1471880059	10.155761	"In my only significant Haskell codebase, I end up using the Monoid abstraction a lot. I don't want people who have to read the code to have to cope with the word ""Monoid"". Monoids are simple, but the ..."		rspeer
12338379	12.166153	-7.1058426	comment	4.0	13.0	1471891022	-10.376079	You don't need higher-kinded types for that. Just always return a promise, except the blocking version always return a promise that is already fulfilled.This is just a variation of 'any problem can be solved by adding a level of indirection' + 'any protocol can have a dummy implementation'.		pierrebai
12341675	11.774126	-7.2243457	comment	4.0	12.0	1471931390	9.1064625	The whole point of abstractions is for us to not have to worry about the underlying complexity. If I want to program in a way that is close to how the hardware works, I'll pick a language like C, howe...		voidr
12342043	11.62111	-7.8857574	comment	4.0	12.5	1471938302	10.225858	But with Go's system you can't provide an implementation of an interface for a type unless you defined that type in your package. You have to use an adapter layer for that. (For example, say I want to...		pcwalton
12350009	11.809206	-7.5963025	comment	4.0	29.0	1472018465	10.366819	"Great overview article but I have a comment.> In Idris, we can say ""the add function takes two integers and returns an integer, but its first argument must be smaller than its second argument"":> If we..."		seanwilson
12350163	11.706232	-7.4238524	comment	4.0	12.5	1472020631	10.395521	Someone who has experience with both Agda and Idris, could you comment on which is easier to get started with? Coming from a Haskell background, I'd like to try my hand at writing more interesting con...		titanomachy
12334135	11.952396	-7.7121105	story	4.0	103.0	1471840689	10.401067	Pitfalls in Haskell	http://users.jyu.fi/~sapekiis/haskell-pitfalls/	0xmohit
12351711	11.836566	-7.4653425	comment	4.0	33.5	1472044246	-8.716991	"Decent overview of many concepts, but the opening line isn't strictly true:> A type is a collection of possible values.A type is a proposition, and ""This binding has one of these possible values"" is m..."		naasking
12360374	11.758019	-7.028028	comment	4.0	18.5	1472142817	-8.9333315	"While the conciseness of attrs is nice, it's not very readable.This:    class Point3D(object):
        def __init__(self, x, y, z):
            self.x = x
            self.y = y
            self.z = z..."		mkolodny
12369000	12.108091	-7.7152777	comment	4.0	16.5	1472242483	10.598011	The Typelevel Scala is nothing more than a branch on which experiments can happen before pull requests are made in the main branch. The people involved have already contributed fixes, like the followi...		bad_user
12402748	11.994457	-7.755201	comment	4.0	10.5	1472695985	10.441208	That's from a course that was given in 2004. UNSW has been teaching haskell for much longer, in those days everybody doing CS had to learn haskell.Still a dearth of useful programs written in haskell ...		harry8
12409036	11.63839	-7.966137	comment	4.0	17.5	1472765313	10.18428	"""I believe that a world-champion-level Go machine can be built within 10 years"" -  Deep Blue architect, 2007.http://spectrum.ieee.org/computing/software/cracking-go"		argonaut
12433274	11.620183	-7.9385524	comment	4.0	11.5	1473128022	10.219244	"Nothing hard about appending ""lang"" to your queries. Go and C programmers have to deal with the same thing."		artursapek
12435473	12.017196	-7.5321007	comment	4.0	12.5	1473165293	10.290429	Technically you are defining a purely functional language and not functional programming.John McCarthy might disagree with you if he was still with us saying LISP is not a functional language. Here is...		baldfat
12452007	11.781319	-7.1075845	comment	4.0	18.5	1473333952	8.607049	"The part of the article about an issue with name mangling of private fields is somehow misleading.The feature is just some syntactic sugar.When within a class, private fields such as:    class Foo:
  ..."		guyzmo
12469971	11.943083	-7.4295177	comment	4.0	13.0	1473526413	7.091233	This conversation is awful. This seems like a bunch of armchair developers with really strong opinions and no real world experience.No experienced developer I want to work with has the kind of dogmati...		ebbv
12469984	11.913109	-7.431125	comment	4.0	11.0	1473526546	-6.383714	I really believe the future is a mixed OOP and FP world. I think we will see industry use languages like Scala and F# more and more.In mission critical portions of systems people will use a functional...		fowlerpower
12470252	11.920047	-7.3888173	comment	4.0	15.5	1473530514	-10.624461	Very cool! By purely functional I'm guessing they mean immutable by default? Aside from Clojure, what other Scheme/Lisp implementations are immutable by default? I know Lisp-flavoured Erlang is due to being on the BEAM but I'm curious what else is out there.		rubiquity
12482827	11.641325	-7.798627	comment	4.0	17.0	1473708255	10.172381	> This is a discovery process, I'm writing this document to help myself understanding golang and maybe help others.First: I took a brief look through this, and I didn't see anything that jumped out as...		chimeracoder
12488015	12.397226	-7.476289	comment	4.0	11.5	1473773539	-9.198591	Erlang uses asynchronous message passing. Smalltalk models method calls as synchronous message passing. Therein lies an enormous amount of difference.		barrkel
12495604	12.444513	-7.1426606	comment	4.0	11.0	1473850311	12.339594	Practical Object-Oriented Design in Ruby (POODR) by Sandi Metz opened doors for me - http://www.poodr.com/		thorsteneckel
12397619	12.438308	-7.3249955	story	4.0	3.0	1472644985	7.190158	Beamium is the easises way to present live	http://www.beamium.com	MichaelSte
12365490	12.132683	-7.6105933	story	4.0	90.0	1472211320	11.884567	Typelevel Scala	https://github.com/typelevel/scala	milessabin
12382314	12.0805855	-7.8526998	story	4.0	61.0	1472483215	10.414919	Ecaml – Writing Emacs Plugins in OCaml	https://github.com/janestreet/ecaml	cm3
12441379	12.244143	-7.650556	story	4.0	59.0	1473231937	11.943212	Scala 2.12.0-RC1 released	https://issues.scala-lang.org/projects/SI/versions/11503	pedrorijo91
12470644	11.638737	-7.1336246	story	4.0	24.0	1473537310	9.333168	Changing Python lambda syntax at runtime	https://github.com/brthornbury/lambdazen/blob/master/HowItWorks.md	bthornbury
12503601	12.252805	-7.6073875	comment	4.0	11.5	1473916325	11.939205	For anyone wanting to try react in a side project, scalajs has comprehensive react compatibility and it's just awesome.Only downside is trying to hire Scala frontend devs.		0xfaded
12515880	11.6233635	-7.9571342	comment	4.0	13.0	1474048426	10.211486	The use of `go run` here makes adopting this very hard. The benefit of using Go for projects (in my experience) is that you can build for multiple OS/Arch super, super easy. I'd thin that having uploa...		wyattjoh
12514304	11.753493	-7.355852	comment	4.0	18.5	1474036900	-8.884323	> Is it safe to call f(x)?The author asserts that static typing allows the compiler to answer this question, but this only allows the compiler to spot type errors in advance. There are many other kind...		xapata
12534010	11.641441	-7.9633365	comment	4.0	12.5	1474313269	10.220714	The most important thing is to use the right tool for the right job. If the project has networking and doesn't involve building a GUI or graphics, then Go is a great choice. (Not that Go can't do GUIs or graphics, but there aren't very robust and mature libraries for those things yet).		pbohun
35165979	11.812553	-7.1442122	comment	4.0	11.5	1678874933	-8.970316	So the differences:https://docs.exaloop.io/codon/general/differencesSo more limited types (integers) and more type checking and collections have to have one kind of thing in them.There are other pytho...		t43562
35165986	12.286293	-7.310462	comment	4.0	16.0	1678874987	6.964881	"Well, he probably is an Smalltalk evangelist but I don't see this as something bad.""The secret weapon"" I think makes reference to Paul Graham's essay Beating the average: http://www.paulgraham.com/avg..."		DeathArrow
35166164	12.255652	-7.3853006	comment	4.0	14.5	1678876607	7.0289607	> I can’t think of anything that Smalltalk hasn’t done compared to Python, JavaScript, and Java.Typing? Null-safety? (bolted onto Java, by default in Kotlin)		cies
35197722	11.969243	-7.048676	comment	4.0	25.5	1679064081	8.674106	One of the goals of Project Amber [1][2] is to move the language towards a more data-oriented programming model. With Records, patterns, sealed classes, etc., it should feel much less verbose over tim...		carimura
35198377	12.249503	-7.6095824	comment	4.0	12.5	1679067076	11.921691	Going from Java 8 to Scala was mind melting. Would never want to go back. Though I’ve heard later versions of Java are better. And katlin seems like an in between.		therealdrag0
35208202	11.705522	-7.2720346	comment	4.0	14.5	1679139438	9.126464	Until one needs to integrate a non async aware library and then is Task.Run() all over the place.		pjmlp
35248409	11.855084	-7.1862774	comment	4.0	16.0	1679415737	7.1692734	Just a note as to the distinction in dispatch mechanisms here: ObjC, Ruby, and other Smalltalk-like languages use “message passing”, which encapsulates a call symbolically as a “message” (name + args)...		wrs
35256594	11.634594	-7.3322754	comment	4.0	14.5	1679457012	9.460538	"I don't like it. Lots of the examples seem forced e.g.:var _ = q.remove();This is just stupid. We can write:
q.remove();We don't need to save the return value in Java. The only case where this makes s..."		invalidname
35268900	11.622931	-7.9312468	comment	4.0	10.5	1679530499	10.222294	So I always assumed this was the case for other compiled languages. Is this something special in Golang and/or recently created languages?		cjdoc29
35175173	11.745855	-7.1107197	story	4.0	18.0	1678916816	9.104752	FibJS: Based on V8, uses fibers instead of async	https://fibjs.org/en/docs/guide/about.md.html	alexbezhan
35312120	11.866675	-7.7143865	comment	4.0	15.5	1679817125	10.398356	I really wished there was a GC-ed but strictly-evaluating Haskell. A Rust-like syntax would probably help with adoption but I don't have a strong preference in that.		wirrbel
35313301	12.203686	-7.629515	comment	4.0	12.0	1679830160	11.929749	Odd choice to do hardware design in scala...I wasn't aware of any other big players doing this...   I suspect it will limit the impact this project can have if industry can't adopt it easily into existing processes.		londons_explore
35350651	11.773999	-7.2474875	comment	4.0	10.5	1680052197	-10.751159	Yes, you must deal with asyncIt's not that big of a deal thoughAxum is popular but feels too low level to me, but some nice porcelain APIs might eventually be put on top of it		imwithstoopid
35366328	11.655672	-7.3661175	comment	4.0	12.0	1680138405	-8.765445	> None of this matters most of the time, but yeah it's still funny.Implicit type coercion doesn't matter most of the time? You don't often have bugs because of it?		ParetoOptimal
35369689	11.970962	-7.6618576	comment	4.0	11.5	1680165054	10.418151	One thing I noticed when I was in college was that the basics of FP is not hard, in fact it seems way easier (from my data annecdote).In my university CS course, we start with FP (using Haskell), and ...		tm-guimaraes
35397270	11.7438545	-7.840558	comment	4.0	51.0	1680324919	10.179368	"Ha!“ a safeguard to prevent misuse of our system in a way that might impact the stability and safety of the system.""Google: We have identified modern web development as a threat to our systems, and ha..."		bigiain
35312418	11.740221	-7.2470455	story	4.0	19.0	1679820401	-6.086995	Understanding Immutable OSes	https://kairos.io/blog/2023/03/22/understanding-immutable-linux-os-benefits-architecture-and-challenges/	mudler
35451815	11.882364	-7.35578	comment	4.0	19.5	1680689832	7.2045994	"> Transformations over InstructionsHell yeah! The problem with ""functional"" programming is that a lot of people simply don't get you want to push as much of your program to be generic tools that trans..."		twawaaay
35475292	11.895703	-7.272211	comment	4.0	13.0	1680819500	9.213465	Re-posting my Twitter update[1] here:We've concluded our analysis.1. We're refunding the overages2. We identified the root causeThe root cause is that the Astro bundle handed to the deployment process...		Rauchg
35491964	11.955941	-7.7361574	comment	4.0	10.5	1680948114	10.408527	Haskell and ghc don't work on these devices as aarch64 isn't as well supported as amd64		noloblo
35492145	11.638233	-7.952983	comment	4.0	24.5	1680950898	10.202139	I wonder why Go doesn't have algebaric data types, it could solve a lot of issues, and make code a lot easier to write.		nobody0
28002119	11.616682	-7.8832455	comment	4.0	11.0	1627596687	10.142458	"Then how would you model composing behaviors in Go. Say for example I have a representation of Food and a representation of Animal. I then want an ability that will ""animate"" things, so I can animate ..."		blacktriangle
28024198	12.078087	-7.8509865	comment	4.0	12.5	1627798286	10.424806	OCaml is often dropped due to its unpredictable performance		awestroke
28039728	12.076645	-7.823641	comment	4.0	12.5	1627925225	10.415522	I never used OCaml, except for some toy side projects, but I'm curious about this multicore saga. It feels like I've been reading about it for years and years.What's the reason it's taking so long? In...		the_duke
35441152	11.781559	-7.0849667	story	4.0	6.0	1680621804	-9.064405	"Ask HN: Is ""Stop Writing Classes” still good advice in modern Python?"		parpfish
35492036	11.91214	-7.7106895	story	4.0	46.0	1680949214	10.354575	How to avoid correctness space leaks on a lazy setting in Haskell	https://epicandmonicisnotiso.blogspot.com/2023/04/how-to-avoid-correctness-space-leaks-on.html	g0xA52A2A
28039219	12.083597	-7.8723354	story	4.0	60.0	1627923218	10.453865	Multicore OCaml: July 2021	https://discuss.ocaml.org/t/multicore-ocaml-july-2021/8232	rbjorklin
28050441	11.5995865	-7.0766563	comment	4.0	14.0	1628004898	-6.7487903	> But very briefly, yield in Python is often presented as a simplified method for writing generators, but what it does, suspending the execution of a function with the ability to resume it, is a much ...		intrepidhero
28057700	11.787126	-7.3431525	comment	4.0	26.5	1628056801	-8.847388	"> ""static"" languages are incorporating ideas from dynamic languages. So the end result is a symbiosis, not opposition.If I may ask, what ideas are static languages incorporating from dynamic languages? Could you help clarify?"		dade
28057706	11.8116865	-7.3356657	comment	4.0	12.0	1628056884	-8.9283085	Static typing is generally a good thing…I thought this was common sense.Abstractions are very powerful, but when many people work on a codebase, keeping extra checks via static typing imo is good. Unless your Dev team is _highly_ experienced, then you can put away with the training wheels		abhinav22
28058227	11.793411	-7.347451	comment	4.0	31.0	1628061715	-8.900337	"I've always wondered, and maybe you can clear this up, why? What about static typing is ""worse"", so to speak?"		lionkor
28058524	11.776397	-7.391997	comment	4.0	11.0	1628064702	-8.862122	I would like to use static types, since dynamic types defeat the point by requiring so many checks. I’m still typing a lot. But in my field, I just don’t think it makes sense (data analysis), and fran...		ideamotor
28058772	11.7828865	-7.345167	comment	4.0	23.5	1628067344	-8.890954	"A static type system requires the programmer to think about the types. It distracts and takes up mental space, especially when one is returning to old code and ""just"" want to quickly add a small featu..."		belorn
28060831	11.801645	-7.3994846	comment	4.0	11.5	1628084090	-8.935468	>  if you haven't coded in a language like OCaml, Haskell, ML etc. you really don't know enough about what strong static types offer to discount them. Java, C and C++ have much weaker checks of correc...		zzzeek
28061102	11.83974	-7.248533	comment	4.0	12.0	1628085665	8.154038	They almost did, and I mostly blame Java. Java's type system is so poor that you go through all this ceremony of declaring types (and remember that Java didn't even always have `var` and `<>` inferenc...		ragnese
28064434	11.95439	-7.0188766	comment	4.0	11.5	1628101510	-0.8317436	Please don’t have a method named plusIshRoundCeiling() in a library that “might” be used for years in lots of projects :) The plus() one is almost there and you can easily explain the ugly bits in jav...		derjdoj
28080085	12.219429	-7.5264897	comment	4.0	10.5	1628198715	-11.374126	I used to be excited by Kotlin.After using it, and now having newer Java versions, I find it doesn't offer enough anymore. I'm thankful it might have helped Java get better though.I'm highly waiting f...		jiehong
28099340	11.824939	-7.221432	comment	4.0	13.5	1628350367	10.112155	Pandas is marvelous. As is numpy, scipy, and all of that family.  And they run essentially as C libraries, and approximate that level of performance.  Someday I hope there will be golang analogues of these		hereforphone
28107516	11.648772	-7.159725	comment	4.0	14.0	1628437297	9.36301	Generally it is un-pythonic to assign lambda to a variable. Lots of linters will complain if you do this.		blester
28123873	11.87647	-7.5737886	comment	4.0	16.0	1628554392	10.375567	I'm torn. Not about the conciseness of the language overall, but about using symbols vs. names. I do see how the symbols make things more concise, less clutter, and can even make it easier to grasp a ...		anyfoo
28145337	11.80366	-7.5127645	comment	4.0	16.5	1628704596	10.421454	Hmm. I understand your rejection for `{}`, but I really think the end result feels nothing like the Java experience. Can I have a shot at defending it? :) It will be a long answer including some of my...		LangMakers
28167639	11.66288	-7.0364623	comment	4.0	12.0	1628853685	-6.987473	> In Chapter 3 of Principles of Program Design[1] Jackson presents two versions of a program, one designed using JSP, the other using the traditional single-loop structure.I think I've come back aroun...		dkarl
28181708	12.321501	-7.0333753	comment	4.0	18.5	1628957060	13.190585	There's no real rationale, of course. It's just trolling.  But the kind of reaction we're seeing from the Perl community is just as disappointing.  The worst possible reaction to a blatant trolling at...		zozbot234
28060423	11.64849	-7.4392924	story	4.0	30.0	1628081601	-6.5770206	What is a primitive?	https://mlochbaum.github.io/BQN/commentary/primitive.html	chrispsn
28144439	11.646638	-7.9668984	story	4.0	30.0	1628700447	10.220539	Show HN: OCR Invoices and Receipts in Seconds Using Go SDK		hoanhan101
28189337	12.210194	-7.642145	comment	4.0	15.0	1629039972	11.948228	The question then is whether it was functional programming that actually made the difference, or the people who had enough perseverance and skill to actually learn Scala in the first place running the...		isbvhodnvemrwvn
28189395	11.994761	-7.7820897	comment	4.0	15.5	1629040318	10.409232	Monad is a thingie that lets you sequence computations in the same context. Context being something like Future or Stream or List		AzzieElbab
28189356	11.723085	-7.7279425	comment	4.0	12.0	1629040083	10.212971	What if I told you that common languages are rapidly adopting futures from functional languages? Go being a notable exception.		AzzieElbab
28193015	11.882779	-7.3766336	comment	4.0	25.5	1629065473	7.114459	"Programming is about clearly communicating theory.Mariners use ""port"" and ""starboard"" for vehicle relative directions not because it's ""cool"" but because it's clear and unambiguous. Problem decomposit..."		swiley
28194564	11.939878	-7.433719	comment	4.0	12.0	1629082802	-11.164233	> For example, the simplest way to write a network server that can handle more than one client at a time is to fork a new thread for every client.This seems much debatable. For me the simplest way is ...		vemv
28197644	11.66453	-7.933288	comment	4.0	11.0	1629119670	-4.5028367	Does this mean people don't know about the jargon file?http://www.catb.org/jargon/html/go01.html		drewcoo
28200775	11.85444	-7.1553464	comment	4.0	13.0	1629135940	8.548676	> What's wrong with iterating across multiple components?It's bad for spatial locality. You end up with many more CPU cache misses, which significantly slows down execution. Using the CPU cache effectively is one of the primary reasons to use ECS.		munificent
28204263	11.599786	-7.9554744	comment	4.0	11.5	1629157193	10.220626	And yet Go seems to have not captured many C++ developers, but rather developers from languages like Python, Ruby, and JavaScript.The Go team originally wanted to replace C++, especially inside Google...		atombender
28204506	12.048498	-7.1449556	comment	4.0	13.0	1629158731	-9.836482	> In this world, most errors are silly type errorsI can’t speak to python, but typescript has basically fixed this problem overnight in the javascript ecosystem. The typescript compiler finds almost a...		josephg
28208546	11.914955	-7.3016295	comment	4.0	16.5	1629198422	9.180709	Asynchronous code can sometimes be difficult to write efficiently so having implicit awaits might help with avoiding accidentally made fire and forget calls. An interesting concept might be to explici...		derangedHorse
28242884	11.81623	-7.0683393	comment	4.0	14.0	1629436602	8.15931	"I like the uniformity of Java language. I like the ""inner class"" feature that has to be manually emulated in C#. I also like that I can implement anonymous abstract class-interface ad hoc in Java. I w..."		zvrba
28250946	11.701659	-7.4169703	comment	4.0	27.5	1629490858	-8.651208	Could you describe the types that are non-phishable?		baxtr
28254299	11.653868	-7.9189353	comment	4.0	12.0	1629521412	10.256224	I've never used Go, and from the outside I take a lot of issues with its design choices.But even without having used it I always thought the lack of generics was very interesting and I could see how i...		brundolf
28280965	12.011371	-7.8190217	comment	4.0	22.0	1629747855	10.415984	OCaml compile speeds are not particularly fast.		fnord123
28283831	12.124028	-7.52051	comment	4.0	10.5	1629765160	-10.621162	The issue you will face with using a relatively niche language is development velocity, i.e. the speed at which you can deliver product features.Niche languages generally have a smaller ecosystem, les...		yen223
28293381	11.604625	-7.8336353	comment	4.0	22.5	1629831904	10.153455	I can't imagine a better setup for a language flame war :). I really like debating languages, so I hope it doesn't go that direction.One of the standard caveats with this particular benchmark game wit...		throwaway894345
28323200	11.750913	-7.1489286	comment	4.0	13.0	1630026849	9.05777	"In the article when comparing the native vs lodash implementation the native one is given as:persons
  .map(p => ({ ...p, age: p.age + 1 }))
  .filter(p => p.age >= 30)
  .slice(0, 5);^ But this is in..."		darepublic
28227487	11.619301	-7.9287825	story	4.0	166.0	1629322566	10.210834	GoKart: A static analysis tool for securing Go code	https://github.com/praetorian-inc/gokart	SnowflakeOnIce
28274170	11.79046	-7.2257977	story	4.0	139.0	1629716238	9.166676	Book Exploring Async Basics	https://cfsamson.github.io/book-exploring-async-basics/	ibobev
28278553	12.106501	-7.86282	story	4.0	175.0	1629736984	10.425445	OCaml at Bloomberg	https://twitter.com/adolfont/status/1429759258942377999	yawaramin
28290403	12.447868	-7.0292645	story	4.0	55.0	1629820069	1.3879467	Responsible Monkeypatching in Ruby	https://blog.appsignal.com/2021/08/24/responsible-monkeypatching-in-ruby.html	thunderbong
28336151	11.702846	-7.247171	comment	4.0	12.0	1630133755	9.301434	What’s wrong with subclassing and having default empty implementations of functions? I don’t understand what’s wrong with a default no-op lambda argument (except JavaScript or Java doesn’t seem to be able to provide one AFAIK).		heavenlyblue
28365861	11.673044	-7.627189	comment	4.0	12.5	1630403647	9.843056	I'm looking forward to Java getting Project Loom for the concurrency aspect inspired by Go I believe. It will be a nice middle ground between the extremes of Python and Go.		bestinterest
28375611	11.644947	-7.912714	comment	4.0	13.0	1630460238	10.210562	When you're dying from the compile time of functional languages, you really appreciate Golang's near instant compiles.		dcolkitt
28377386	11.761373	-7.3170624	comment	4.0	13.0	1630483194	-6.4355693	> all immutable programming became easySwitching to the functional style of logic from the algorithmic style can be slightly tricky but as for immutability itself - since the introduction of for-each ...		qwerty456127
28375546	11.729529	-7.8797617	comment	4.0	15.5	1630459282	10.223826	I have definitely noticed a functional programming to golang pipeline. Multiple people used Haskell and switched to Golang.Interesting anecdotes.		olah_1
28391827	12.15155	-7.9103813	comment	4.0	17.0	1630589907	-3.1481094	I majored in Philosophy, thought about doing a PhD but I ended up moving around with my wife (girlfriend at the time) working odd jobs for awhile, winding up as a software engineer. I learned about ca...		nbulka
28392238	12.397767	-7.076829	comment	4.0	14.5	1630591939	12.35658	I wish I could merge the parts of Ruby and Python I like while discarding the parts I don't. Mutable strings by default was a huge mistake in Ruby and so was allowing non-self calls to methods from an...		3pt14159
28418703	11.601328	-7.11146	comment	4.0	12.0	1630786676	9.143394	"About Java vs Python, modern Java would be:    import java.util.ArrayList;
    var cars = new ArrayList<String>();

Python would be:    cars: list[string] = []

The big difference seems to be that Arr..."		Zababa
28419641	11.671175	-7.0249424	comment	4.0	18.0	1630792316	5.2631316	What alternative pattern would you suggest?		geofft
28434500	11.719149	-7.2863197	comment	4.0	13.5	1630941369	6.8045807	> EO is based on 𝜑-calculus (if you want to see its description, join this Telegram chat: @polystat_org).Because putting this description into a doc/MATHS.md file inside the repo itself is too easy.Al...		Joker_vD
28395365	12.145292	-7.887232	story	4.0	8.0	1630606174	-3.2650754	Ask HN: Source Recommendations for Category Theory?		Engineering-MD
28354799	12.235815	-7.5951552	story	4.0	14.0	1630325109	-11.305429	Ask HN: Functional programming in Kotlin vs. Scala advantages/disadvantages?		4ipp
28373155	12.07736	-7.866175	story	4.0	115.0	1630441616	10.435775	Adapting the OCaml Ecosystem for Multicore OCaml	https://watch.ocaml.org/videos/watch/playlist/7a4ad26a-b8c5-4588-bf2a-4b981fed87f2?playlistPosition=2	rbjorklin
28401049	11.86418	-7.2029185	story	4.0	37.0	1630650530	-10.776134	How async/await works in Python	https://tenthousandmeters.com/blog/python-behind-the-scenes-12-how-asyncawait-works-in-python/	r4victor
28467195	12.085034	-7.723589	comment	4.0	17.0	1631172285	10.408803	Is StandardML a subset of OCaml and F# or does it have something they don't?		qwerty456127
28467226	12.093436	-7.5753546	comment	4.0	12.5	1631172608	-10.612064	F# doesn't have functors but SML and OCaml do. F# has Computation Expressions which (AFAIK) SML does not have; OCaml has PPX extensions. F# has access to .NET ecosstem, JS ecosystem and multi-core. OC...		de_keyboard
28470359	11.7913	-7.2728014	comment	4.0	11.5	1631199246	9.202516	Apples vs Oranges? To me, async seems like an implementation detail. Why are we comparing it with Open API which is a spec? Sorry my mind is confused.		the_arun
28475702	11.630482	-7.3397813	comment	4.0	16.0	1631228429	-8.794544	yeah, but my point is that checking system that you had created will be thrown away at some point in my experience. so why bother writing types? that is my attitude at least at very early stage of a p...		12thwonder
28476569	11.984044	-7.731634	comment	4.0	28.0	1631235246	10.361383	"> Wait, a functor is just a pure unary function?No.> And an endofunctor is just one of those where the argument type and return type are the same?Yes - ""endo"" means that in general. E.g. endomorphism...."		lmm
28476637	11.888599	-7.434288	comment	4.0	26.0	1631236096	1.4689615	> The precise terminology is vital; it's how we avoid these errors when talking about this very abstract stuff. Given that the OP is very wrong, precisely because of the kind of attitude you've taken ...		void_mint
28476676	12.000301	-7.7631083	comment	4.0	16.0	1631236450	10.39158	"> a monad is a type constructorNow explain what a ""type constructor"" is, otherwise these words are worthless."		zabzonk
28476742	11.950553	-7.6583085	comment	4.0	12.5	1631237068	10.339014	"A Mappable would be anything that has a `map` function. 
A `Functor` is a something that has a `map` function _AND_ obeys the rule that calling `map` with the identity function produces the same resul..."		opnitro
28476805	11.942499	-7.751772	comment	4.0	13.0	1631237598	10.340342	What makes a type constructor a functor, what's the difference		6nf
28477717	11.6931505	-7.3899784	comment	4.0	10.5	1631246920	-8.768174	sort of. I don't write tests at early stages, do you?I don't see types as serious tests and I don't think they are robust. let's say that some integer must be between 10 and 100, do you use type checks for this?		12thwonder
28476458	11.998809	-7.7465806	comment	4.0	32.5	1631234274	10.367695	Functors are type constructors, not functions (which map values). But you could be forgiven the misunderstanding, because it is easy to trip over this distinction given the identical syntax.So, to mak...		jkhdigital
28503220	11.731361	-7.3559546	comment	4.0	11.5	1631468982	-8.8075285	I have a problem with a lack of static types. Was that an issue for you?		sidkshatriya
28514954	11.977424	-7.474368	comment	4.0	11.0	1631557794	7.2613344	Functional Programming Is Not-Popular Because It-Is-Weird,notFunctional Programming Is Not Popular-Because-It-Is-Weird.I just found the ambiguity amusing, in the title of this particular blog post.		alanbernstein
28514968	11.999697	-7.7687745	comment	4.0	11.5	1631557897	10.396557	Something I've wondered is why we can't have a language that looks totally procedural but uses monads under the hood to reason about state at any given point in the process. This would mostly be sugar...		brundolf
28515328	11.820307	-7.347954	comment	4.0	13.0	1631559596	9.18848	Elixir, Elm, Ocaml, Haskell, and F# all have a pipe like operator for function composition (though the actual operator varies).		lostcolony
28520722	11.923889	-7.4150386	comment	4.0	12.5	1631598535	7.1939273	Functional programming is the most popular current paradigm. What is everyone on about? Javascript, a functional language, is one of the most popular languages ever. Rust and go, two other popular lan...		iammisc
28522791	11.643016	-7.940563	comment	4.0	11.0	1631616772	10.227822	Why is Go syntax fugly though? I don't have anything against the language and it's actually on my study plan soon but jeez the syntax looks very unappealing to me.		joelbluminator
28524640	11.642547	-7.953071	comment	4.0	16.0	1631626858	10.21943	I happen to agree with the author here, but I think Go has cleverly inoculated itself against this kind of criticism by driving away the sort of people who care about this kind of thing.People who use...		iainmerrick
28531413	12.031063	-7.0656567	comment	4.0	12.0	1631654304	-6.654099	> as immutable data is easier to work withSource? This hasn't been my experience. Going on 10 years of heavy Node.js ecosystem involvement, immutable data enthusiasts are exceedingly rare.Plus, this i...		junon
28549147	12.130832	-7.876202	comment	4.0	13.5	1631778220	-3.1913059	I kind of disagree. I think you found category theory rewarding precisely because you already had a math background and could benefit from seeing the linkages. Without having already done the classes ...		dwohnitmok
28552494	11.909982	-7.672188	comment	4.0	29.0	1631803610	10.390358	"However, when searching for ""haskell type inference algorithm"" I get completely useless results."		klntsky
28478712	12.507958	-7.075469	story	4.0	46.0	1631259125	12.379421	Ruby type conversion	https://kddnewton.com/2021/09/09/ruby-type-conversion.html	todsacerdoti
28491331	11.79533	-7.2563396	story	4.0	49.0	1631362435	2.3949316	A Pure Types-Driven real-world apps development approach	https://medium.com/superstringtheory/an-ideal-data-model-first-development-approach-34ee53599900	jhoxray
28536516	12.135843	-7.8772	story	4.0	130.0	1631693205	-3.046153	Infinity Category Theory Offers a Bird’s-Eye View of Mathematics	https://www.scientificamerican.com/article/infinity-category-theory-offers-a-birds-eye-view-of-mathematics/	louthy
28582569	12.134882	-7.868611	story	4.0	49.0	1632038556	-3.2907627	Category Theory	http://www.cap-lore.com/CapTheory/Categories.html	pizza
28601576	11.811721	-7.2057104	comment	4.0	16.5	1632192548	-9.009083	I don't think typing is the main obstacle to Python performance, otherwise it wouldn't be that much slower than JavaScript. In fact, there are several alternative interpreters that are much faster, bu...		breuleux
28610563	12.260416	-7.528078	comment	4.0	16.5	1632261675	-11.376816	Kotlin is a really nice language. I wish it was used more especially that now it isn't just limited to the Android and Java ecosystems.Kotlin can now compile to native binaries : https://kotlinlang.or...		nassimsoftware
28610577	12.24965	-7.545481	comment	4.0	13.0	1632261766	-11.392959	Has anybody switched to mixing in Kotlin code within an existing Java Android app?  I'm not a huge fan of Java but I don't know whether it will be too jarring for maintenance tasks if I have both lang...		smackeyacky
28642101	11.84682	-7.287307	comment	4.0	15.5	1632490334	9.181379	C# was my first exposure to async/await back in 2015 and I initially had trouble wrapping my head around various details (i.e. ConfigureAwait etc.). I think the languages that have done best job in re...		maxpert
28643245	11.816432	-7.314247	comment	4.0	10.5	1632495140	9.221042	Why do we need the `async` keyword? What is the difference between a function which returns a Task<int>, and an async function which returns a Task<int>?		ridiculous_fish
28644920	11.794251	-7.24238	comment	4.0	11.5	1632502337	9.15275	Is there a rule as to which methods are best made async and which not?Or, once you start using async  would it be best to make ALL methods async?Many methods could be either sync or async. But if you ...		galaxyLogic
28649534	11.833938	-7.2225504	comment	4.0	11.5	1632532726	9.232765	The most common issue I see with async programming is that the naive style seen in most samples/docs is strictly slower than standard imperative programming for one user. In other words, it's pure ove...		jiggawatts
28655156	12.4256315	-7.4743047	comment	4.0	10.5	1632594767	-10.536204	I initially thought Janet was a language intended more for embedding inside C applications than general usage though. (If you’re intending to use the language for general purposes, there’s already too...		cyber_kinetist
28660631	12.117119	-7.885012	comment	4.0	10.5	1632662242	-3.185379	"Question about a claim in the article:
""If classical logic is based on set theory, intuitionistic logic is based on category theory and its related theories.""I'm no expert, but as I understood it, cat..."		jasperry
22303920	12.14451	-7.879859	comment	4.0	10.5	1581462217	-3.121865	What is the difference between Langlands program and Category theory?		hackernewsname
22305214	11.652302	-7.8716893	comment	4.0	15.0	1581474923	10.194581	"""Interesting. I'd have expected more than a 50% code expansion going to Go, maybe even 3x or 5x.""This has been my extensive experience as well. I wouldn't be able to use Go if it was that much more ve..."		jerf
22311712	12.277281	-7.301638	comment	4.0	11.5	1581534427	7.0794587	"I think of the big problems with Smalltalk is how bad the marketing is. There are few posts which get brought up over and over, and they claim the things that are clearly false (""It can be learned in ..."		theamk
22316731	12.261464	-7.51417	comment	4.0	17.0	1581591013	12.830319	In the Actor model, all function calls are async and have no return value, between the Actors. Each Actor is single threaded (OOP) program. It provides a nice approach to deal with parallel programmin...		Isn0gud
22316819	12.291554	-7.5184226	comment	4.0	11.0	1581592283	12.833507	Your question is interesting from the perspective that the actor model could be seen as the precursor to modern object oriented programming. Both the actor model as defined by Carl Hewitt and the earl...		edejong
22336563	11.618693	-7.0881324	comment	4.0	12.0	1581787785	9.099867	"As far as I remember one of the main ideas was ""dataflow variables"", which are lazily evaluated in parallel (?)I've read about this paradigm in the literature, e.g. with the Lucid language and others...."		chubot
22361860	11.650836	-7.9728627	comment	4.0	21.5	1582071589	10.246025	Golang is a pretty much messed up language made by short-sighted and very, very, very stubborn designers. If you don't believe me, just look for instance at all the hacky code generation tools made by...		nif2ee
22362021	11.615079	-7.9232893	comment	4.0	12.5	1582073255	10.179327	Do any of them have comprehensive standard libraries, and compile to small native binaries? Those features, along with performance and support for parallelism, are why I chose Go (for command-line apps).		pansa2
28661051	12.461627	-7.046151	story	4.0	57.0	1632665630	12.387625	Stamping Out Overflow Checks in Ruby	https://chrisseaton.com/truffleruby/stamping-out-overflow-checks/	shaicoleman
22308771	11.99185	-7.7590284	story	4.0	72.0	1581515421	10.4334755	Haskell in Production: Riskbook	https://serokell.io/blog/haskell-in-industry-riskbook	NaeosPsy
22383871	12.089288	-7.845899	comment	4.0	19.0	1582299668	10.435741	> it is very complicated to install the base stack to develop in OCamlI'm not sure why the author decided to use such a complicated setup using Make and Docker.They could have just ran `opam switch cr...		kingkonz1
22383571	12.275629	-7.671924	comment	4.0	13.5	1582297327	10.414439	"ReasonML is just an alternative syntax for OCaml. Often people use ""ReasonML"" shorthand for ""ReasonML, converted to OCaml, compiled to Javascript with BuckleScript"" and ""OCaml"" for ""OCaml compiled nat..."		sweeneyrod
22383921	12.472444	-7.3119164	comment	4.0	11.5	1582299973	10.167511	What's the state of using Reason natively? Last time I checked all the documentation and examples where towards the reason/js/react ecosystem. Are there any good native code projects written in Reason to look at for reference?		elcapitan
22385148	12.0952215	-7.780055	comment	4.0	12.5	1582307780	10.44519	I agree it's quite annoying to set up an OCaml project, and all the Jane Street stuff makes it even more confusing for newcomers. But to be fair, it may be the case with other languages as well. I rec...		yodsanklai
22390620	12.045277	-7.769977	comment	4.0	11.0	1582373703	10.434076	I'm reasonably competent in Haskell and am interested in checking out OCaml. Can anyone recommend any good resources (books, tutorials, etc.) for someone like me to get started?		a7b3fa
22391265	12.372832	-7.524888	comment	4.0	20.5	1582382734	12.833866	Erlang has a parameter called initial_heap_size. Each new actor-process in Erlang gets its own isolated heap, for which it does its own garbage-collection on its own execution thread. This initial_hea...		derefr
22396717	11.626252	-7.9529896	comment	4.0	14.0	1582464157	10.213088	I was a fan in the past and still think the language has niches it's good at. I just no longer think it's a good general purpose language - more correctly I think there are languages that are better t...		jpgvm
22405239	11.918753	-7.442575	comment	4.0	12.5	1582560326	7.279834	While it does remove edge cases, the code also becomes more opaque. At least to me, functional style programming seems much harder to read and then reason about.		Mirioron
22411447	12.084796	-7.855341	comment	4.0	10.5	1582615177	10.408357	I haven't used OCaml in a couple of years. has the stdlib story been improved/standardized? is there still the whole async vs jwt problem or did jwt finally win out?I think i remember that there wasn'...		devmunchies
22412396	12.081546	-7.553848	comment	4.0	16.0	1582631234	-10.473992	I don't consider a language supportive of functional programming unless it supports tail-call optimisation, which is performed by some but not all implementations of Common Lisp.The article recommends...		chalst
22414529	11.942124	-7.44172	comment	4.0	10.5	1582648389	7.1138225	This article is a great example of how FP is currently being ruined in the same way OOP was ruined in late 80s. The paradigm had a lot of great ideas, but it became so popular so quickly that people b...		gambler
22414807	12.003302	-7.7758565	comment	4.0	17.0	1582649974	10.410473	Are you familiar with Haskell? Or just a programmer in general?The name doesn't mean nothing. Either you're a Haskeller not familiar with monad transformer idioms, or you're not a Haskeller just shout...		whateveracct
22444799	11.62639	-7.951353	comment	4.0	13.0	1582912997	10.177972	"Isn't basically all of this shortcomings of Go's standard library, not ""Go the language""?The Go standard seems to be heavily geared towards doing work on the server-side, and ""server-side"" essentially..."		flohofwoe
22459333	12.29555	-7.5080147	comment	4.0	10.5	1583096928	12.822725	"""Actor"" architecture is supposed to enable high developer productivity but it's been a decade since the article so I wonder how it's working out? The most prominent project of which I am aware is FoundationDB."		thedance
22487439	11.747649	-7.2556505	comment	4.0	10.5	1583352123	-8.844865	I tend to use nominal types a lot in other languages, so I have a lot of types with id() or value().Would those be mixed up?		mrkeen
22515578	11.879883	-7.082232	comment	4.0	12.0	1583630324	-10.750324	Can't a CPU bound task just make itself preemptible in Python by calling some dummy async function, like asyncio.sleep(0)?		NewJazz
22528723	11.897079	-7.3246846	comment	4.0	10.5	1583781553	7.1018405	"You're missing my point. In OOP every object is computation represented as data. It's not some kind of ""unnatural"" design pattern programmer should concoct in a special way. Erasing the distinction be..."		gambler
22535639	11.905584	-7.358995	comment	4.0	10.5	1583850058	7.105016	Decades of disappointment? Most large software projects are still done with OOP and it doesn't seem like any functional programming prodigy paradigm is going to replace it any time soon.OOP languages ...		skocznymroczny
22557639	11.855781	-7.30142	comment	4.0	10.5	1584025783	7.177745	The core difference is in testing. With the later, you need to get your class into the right state to preform the test. You might even need a mock or two. With the non-OOP approach, you set the entire state of the function and see the results.		djsumdog
22558530	12.161225	-7.0556893	comment	4.0	11.5	1584030589	-10.381297	"A simple TypeScript example:    interface DuckTypedObject {
      quack: true
      bark?: false
      eyes: 'beady'
    }

This will require that any object used as a DuckTypedObject must have the `q..."		crooked-v
22557553	11.803441	-7.2209296	comment	4.0	15.0	1584025264	6.81438	"""As I’ve mentioned above, I like to use modules that expose groups of functions. These functions accept state and other dependencies. These modules tend to look like what my colleague Drew describes a..."		BiteCode_dev
22558363	12.477928	-7.086519	comment	4.0	12.0	1584029880	12.340659	The #1 complaint I always see with classes is due to inheritance. When classes inherit from classes that inherit from other classes, you can very easily end up with a tangled web of methods over-ridin...		remmargorp64
22562274	11.862319	-7.75024	comment	4.0	11.5	1584050301	10.445334	This is great. I recently built a fairly large amount of functionality around io-ts, adding support for mixed required/optional fields, eliminating the need to deal with `Either` monads, and a whole l...		eyelidlessness
22643411	11.816606	-7.6461687	comment	4.0	13.5	1584753418	10.199635	It perhaps rarely makes sense, but not 100% never. You might at some point in your life have a situation where you want to fold an operator with short-circuiting behavior left-associatedly over a list...		Chinjut
22580884	12.142518	-7.0363097	story	4.0	10.0	1584241700	-10.309193	Multi-Language Support in Smalltalk and Historical Lisp Environments		linguae
22664511	11.827782	-7.736567	comment	4.0	19.5	1584974377	10.35576	Here is an historical note for those who might be interested. In 1979 I did a Post-doc with Rod Burstall. I helped implement the programming language Hope, which was the first functional programming l...		herodotus
22691631	12.211992	-7.222098	comment	4.0	20.5	1585212555	7.2510476	Great article, I love learning more about language influence. I was wondering something:> Smalltalk wasn’t the only casualty of the “Javapocalypse”: Java also marginalized Eiffel, Ada95, and pretty mu...		ldeangelis
22700463	11.866513	-7.3368587	comment	4.0	11.0	1585283664	10.404801	>  Haskell, OCaml, probably F# too.Lisp has macros, read-macros, and eval.  These things enable DSLs.  You're saying strongly-typed functional languages have features of equivalent power for this purpose?		SeanLuke
22701332	11.988717	-7.0756693	comment	4.0	11.5	1585300144	-10.226922	> I'm hoping the technology will advance enough so that we eventually get one language that can navigate both side of the spectrum.Me too! I'd love a language at the JavaScript/Python/PHP/Perl level, ...		nicoburns
22700049	12.438871	-7.015988	comment	4.0	16.5	1585276837	12.36104	It is the language plus the community.  And not just the language.As an example, there is nothing about Ruby that makes it more or less prone to monkey-patching than many other dynamic languages.  But...		btilly
22729331	12.348739	-7.4020166	comment	4.0	13.5	1585585544	10.080969	As an outsider. F# seems not to get the full blessing. ReasonML is a big thing at Facebook. F# kind of keeps you on the Microsoft stack. Reason has both OCaml based native and JS based interpreted. Re...		cies
22729811	11.726819	-7.827205	comment	4.0	13.5	1585587856	10.165222	"I've been starting up using Go as ""fast Python"" for web services / REST APIs. The patterns encouraged by Go development are actually how I preferred to write Python in the first place, which is to say..."		skrtskrt
22739871	11.944796	-7.6771045	comment	4.0	16.0	1585675258	10.386473	"The ""right tool for the job"" is a myth (EDIT: exaggerating; clearly it applies in some cases). Languages don't work together very well, so you need huge, thick boundaries between them, such as seriali..."		jeffdavis
22763319	11.632908	-7.0472035	comment	4.0	22.5	1585859224	-7.022285	const doThing = event => {}function doThing( event ){}Why does everyone seem to be using the first format? Isn't the second version a lot more readable/pretty? Even worse is when doThing is immediately exported and not refferenced anywhere else, but still there is this need to assign it to a const.		orange8
22768329	11.965273	-7.760394	comment	4.0	10.5	1585915590	10.400119	> we wouldn't want to go full Haskell and avoid success at all costsCan you elaborate on that statement? To me, it implies that going with Haskell avoids success, but I might be missing something. If that really is the implication, can you explain?		bor0
22771899	12.261154	-7.5647335	comment	4.0	20.0	1585935093	-11.412084	What advantage does it bring that Kotlin hasn't?		The_rationalist
18938728	11.628441	-7.9532313	comment	4.0	11.0	1547813421	10.258708	TIL: You can somehow collapse things in GitHub README files. Seriously why do I feel like a Markdown n00b all of a sudden. For those who don't know what I mean, click on any of the OS' listed under th...		giancarlostoro
22683768	12.065344	-7.8217382	story	4.0	172.0	1585137906	10.404621	Jane Street and the OCaml Compiler (2018) [video]	https://www.janestreet.com/tech-talks/jane-and-compiler/	chmaynard
18938497	11.758008	-7.3269076	story	4.0	61.0	1547809667	-8.863977	Predicting Variable Types in Dynamically Typed Programming Languages	https://arxiv.org/abs/1901.05138	gauravanand25
18948190	12.098304	-7.83943	story	4.0	94.0	1547920448	10.440527	OCaml bindings for PyTorch	https://github.com/LaurentMazare/ocaml-torch	ghosthamlet
18963209	11.632061	-7.317585	comment	4.0	14.0	1548101524	-8.716173	Here's my strongest argument in favor of type safety: if you're building a project that is intended to have a long life and be seen by many people, type safety may be a hassle for you but it'll be a blessing for the hundreds of people who will have to eventually figure out your code.		rococode
18970302	11.691105	-7.1706085	comment	4.0	18.0	1548178976	9.134259	How much performance is gained by going async instead of blocking threads on modern hardware?Skimmed through https://vorner.github.io/async-bench.html. If I understand it correctly, one get about twic...		arve0
18977277	11.868022	-7.2245173	comment	4.0	12.5	1548241633	-10.090276	"Wait a second. How does the following even compile:    function getSpellsForPerson(person: Person) {
      if (!isWizard(person)) {
        return [];
      }
      return person.spells;
    }

You ca..."		codemusings
18987718	12.282314	-7.6483994	comment	4.0	10.5	1548328893	10.376038	Reason is merely a new syntax on OCaml. You can use BuckleScript (BS) to compile to JS, or not use BS to compile to native.There exists a fast http server in native OCaml:https://github.com/inhabitedtype/httpaf		cies
18998540	11.643722	-7.9454207	comment	4.0	17.0	1548428842	13.007073	"Fun fact: All three of Go's creators have written APL interpreters, and Go's ""iota"" keyword is modeled after the corresponding APL operator."		nemo1618
19006329	11.622599	-7.0531917	comment	4.0	11.0	1548511698	-6.7996154	Such as? Many of the newer languages I’m seeing, notably Swift and Go, but also TypeScript, ReasonML, and Rust have their development backed by one corporation.		saagarjha
19008934	11.6011	-7.8079944	comment	4.0	25.0	1548541477	9.859115	> Once you use async/await it's hard to go back, since the code is as easy to write as synchronous code.Wait until you try goroutines :)		weberc2
19012198	11.663623	-7.262898	comment	4.0	13.0	1548605304	9.702207	"Is it just me or are those really making Javascript weirder?    const func = do {
      let result;
      () => {
        if (result === undefined) {
          result = someComputation();
        }
  ..."		marcosdumay
19012409	12.018462	-7.1839013	comment	4.0	27.0	1548607448	9.174865	There was nothing easy to read about the  callback hell that resulted in the asynchronous nature of JavaScript.Promises made it better but that was still verbose. Then async/await was added that made ...		scarface74
19015622	11.919423	-7.36104	comment	4.0	14.5	1548656439	7.0356684	The scenario where OO shines is game programming. Each object encapsulates a game entity and it basically runs like a simulator, allowing for complex interactions between objects. But software in general is not like a game and OO doesn't help as much.		visarga
19016069	11.918031	-7.3690267	comment	4.0	13.0	1548665765	7.1127896	> People tend to think of OO as a way of encapsulating data and then providing access to it. I rather think of it as a way of encoding program state. Often you have multiple operations that you want t...		dnautics
19016709	11.799129	-7.33955	comment	4.0	13.5	1548675851	7.232516	"> Adding a third type of payment (Cash) is as simple as adding ""| Cash"" to the definitionThis is the ""expression problem"" https://en.wikipedia.org/wiki/Expression_problemIn FP with ADTs, anyone can wr..."		chriswarbo
19017871	11.947762	-7.349815	comment	4.0	13.5	1548687592	7.1104474	1. What you see in Java is not OOP. It's static, late-bound class/interface oriented programming. Mostly just a set of subtly bad ideas.2. Real OOP and FP do not operate on the same level. Functional,...		gambler
19038135	11.599541	-7.862999	comment	4.0	15.5	1548875009	10.053077	Ugh. This is only going to mislead newbies and irritate the experienced people who will end up reviewing their code.Channel sends and receives have non-trivial costs associated with them.When you choo...		perfmode
19050743	11.973857	-7.1803737	comment	4.0	12.5	1548983256	-8.945222	I agree static types can help, but there are many kinds of errors not caught by static typing. Did you misspell a key while encoding to JSON? Did you add two values where you should have subtracted? D...		hathawsh
19077927	11.61675	-7.063417	comment	4.0	11.0	1549299398	-10.422409	I agree with you.It's very exciting to remove these sorts of redundant lines, but I cannot train my brain to intuitively view that line as it will be interpreted.There is one case where the benefit, I...		gonational
19092314	11.64092	-7.9060364	comment	4.0	11.5	1549421962	10.107793	Author here. Planning to run the same test using cluster module with one worker per CPU.What would be the most performant way to serve HTTP in Go?		kt315_
19100662	12.471559	-7.422155	comment	4.0	13.5	1549491410	12.955352	Some day, after every language has taken its bits, we might actually see Eiffel in the real world.Meanwhile, any of this available for Elixir, too? One of the languages on my 2019 list…		mhd
19104123	11.846643	-7.6210475	comment	4.0	10.5	1549532670	10.323948	"Haskell:    case x of _ -> True 

is a valid expression of type boolean for all values of `x`.    if b then True else False

is a valid expression if `b` is a boolean.These can be nested recursively i..."		lalaithion
18967693	12.302966	-7.6581964	story	4.0	134.0	1548159083	10.377621	Show HN: Esy – fast and simple package management for native ReasonML/OCaml	https://esy.sh	andreypopp
19036106	11.606235	-7.8712006	story	4.0	81.0	1548863857	10.067969	On Concurrency in Go HTTP Servers	https://eli.thegreenplace.net/2019/on-concurrency-in-go-http-servers/	signa11
19077259	11.754896	-7.8094406	story	4.0	17.0	1549295474	10.170164	Will Node.js forever be the sluggish Golang?	https://medium.com/@alexhultman/will-node-js-forever-be-the-sluggish-golang-f632130e5c7a	alexhultman
19113353	11.685698	-7.866761	comment	4.0	10.5	1549626377	-10.496045	What's a good IDE for Go? Something that's snappy and fast, no Java dinosaurs please		rnvhhynr
19130613	11.792334	-7.3411384	comment	4.0	14.0	1549838938	-8.943186	"Should be prefaced with, ""I think"".Having done user research on this by speaking to data scientists, I can say that static typing is desired by a nonzero number of who practice what we would consider ..."		phillipcarter
19131539	11.834495	-7.1449223	comment	4.0	20.5	1549850603	-9.028593	This is probably a side effect of the type system preventing bugs involving js's terrible type coercion system. I doubt that Python would have the same level of bugs preventable by typing, even though it is similarly untyped by default.		Alex3917
19132479	11.7684	-7.2915444	comment	4.0	29.0	1549866585	-8.772119	> developers that don't think specifying types is helpful are still early in their careers (those who suffered in the dungeons of Java get some slack)I'm not high-confidence about this heuristic becau...		wutbrodo
19132512	11.786089	-7.3076496	comment	4.0	13.5	1549867411	-8.926764	We stopped solely using strong-types after decades of only doing JAVA and C#, and it hasn’t decreased our code-quality.I think most people who’ve spent a significant amount of time with strong-types d...		jaabe
19133129	11.750181	-7.3439436	comment	4.0	12.0	1549877695	-8.902576	As someone who is very pro-static typing, the big annoyance for me is that sometimes you have to write a load of boilerplate purely because of the type system.It's got a lot better in the last decade,...		mattmanser
19134128	11.787527	-7.317233	comment	4.0	12.0	1549890407	-8.912848	>It's easier to write code in dynamic-typed languages because (generally speaking, I'm pretty sure there are exceptions to this rule) dynamically-typed languages are not as verbose as static-typed lan...		Mirioron
19134663	11.673523	-7.431002	comment	4.0	12.0	1549895294	9.7992115	The arguments in that threat aren't very good. Everybody makes mistakes[0], types or not, and a type system doesn't prevent all errors. Every system that prevents errors comes with its own overhead.I ...		mcv
19145805	11.684143	-7.3358016	comment	4.0	44.5	1549994253	-8.85273	"In general, in favor of as many correctness and other checks at compile time as possible.  Make tools as powerful as possible.  I really liked this tweet:""What if...- your programming language require..."		wheelie_boy
19146533	11.885021	-7.2925024	comment	4.0	17.5	1549999051	-8.928705	"Although I mostly agree with you, it's worth noting that static typing only goes so far. When I worked in a large-scale Java codebase, it always seemed like half the code only existed in order to ""wor..."		mhink
19167317	11.649058	-7.8848987	comment	4.0	14.5	1550189143	10.227633	Is it second best though? I can write an app in Go in the same amount of time it would take me in Python and it would be an order of magnitude faster, multithreaded, and type checked. Python is really quite slow and error prone if you think about it.		ilovecaching
19169198	12.12212	-7.223739	comment	4.0	11.5	1550216698	8.538084	"I feel like blogs about ECS are needlessly verbose when the idea is really simple.Problem:
Most games are built in with a game loop ticking frames through many gameobjects/actors.  Many actors share s..."		jayd16
19190947	11.649848	-7.9319425	comment	4.0	16.0	1550501416	10.229642	>Popular language missing essential featureBut is it an essential feature? I've written a lot of Go code and I'm perfectly fine without generics. It makes my code a lot simpler, no need to abstract ev...		emersion
19191692	11.6692	-7.6499777	comment	4.0	19.5	1550506309	10.127779	"> ""You can't ship software in a language without generics!""Isn't this is a strawman? Most arguments in favor of generics in this thread and elsewhere are well informed and people just want safer code...."		latronic_notron
19218809	11.620217	-7.9448233	comment	4.0	11.0	1550771146	10.254737	What are their plans for application development? Will developers be expected to write their apps in C/GObject?		curt15
19219647	11.659114	-7.7967515	comment	4.0	12.0	1550776143	10.243459	Disagree hard on Go vs Python. Python is my day job, but documentation is rough. You're likely not going to get documentation for all the types, and if you do it's usually in one giant page and you ca...		weberc2
19222464	11.678799	-7.854246	comment	4.0	11.0	1550800735	10.181746	But Go will never be a data science language like python, because Go is too limited to express that domain.Python may leave you in the lurch when it comes to maintainability, but for some domains python is infinitely better than Go.		platz
19226372	11.756122	-7.327955	comment	4.0	13.5	1550851198	-8.934686	"This. Static typing doesn't mean tedium in modern languages. In Java and old C#, you would write stuff like this:  int x = 1;
  BigOldClass y = new BigOldClass()
  Dictionary<int, List<string>> z = ne..."		wenc
19234767	11.72449	-7.354882	comment	4.0	13.0	1550946946	7.076793	It doesn't have interfaces for example. It doesn't have access modifiers. Also, not sure if this belongs to OOP but working with optionals is cumbersome.		RivieraKid
19239441	12.480042	-7.472517	comment	4.0	12.0	1551028881	12.815158	While 5M concurrent chat users is definitly a massive feat, it seems to me that it's kinda this tech (Erlang) very sweet spot and not being able to do so would have been disapointing. Or am I missing something ?		sametmax
19244552	11.856262	-7.6287417	comment	4.0	14.0	1551090444	-6.7415667	I was really excited to discover Pony a couple of years ago, sadly there is negative momentum with this project. So much potential, yet the world isn’t ready for it yet.		smallstepforman
19244581	12.278593	-7.5094543	comment	4.0	13.0	1551090875	12.826224	What's great about the actor model is that you can kinda apply it in languages not having such native support. Even if it will not be a strict model, with some education from the programmer it can do ...		antirez
19245959	11.754721	-7.1149983	comment	4.0	11.0	1551106108	-9.057228	"""You could support markers stating ""I swear this part is never going to use those dynamic features"", disabling them for you and others.""Right now, the swing is in general to statically-typed languages..."		jerf
19123157	12.240957	-7.642227	story	4.0	41.0	1549730256	11.944011	Scala.js contribution disclaimer	https://github.com/scala-js/scala-js/blob/master/DEVELOPING.md	palerdot
19193650	11.643675	-7.9302545	story	4.0	11.0	1550518929	10.187475	Ask HN: Have Generics been accepted as “considered useful” in modern languages?		burtonator
19274818	11.759577	-7.235245	comment	4.0	11.0	1551385647	9.169435	Where does async stand at this point?		rienbdj
19289829	12.288894	-7.5077205	comment	4.0	11.5	1551544048	12.845922	I've not used an actor model--is there some router component that resolves the process to which a message needs to be sent? Is every send() operation a tuple of `(address, message)`? If so, presumably...		weberc2
19291611	11.692944	-7.398161	comment	4.0	12.0	1551567035	7.108418	Powerful enough type system will catch all of these though.		ernst_klim
19292525	12.086876	-7.6783214	comment	4.0	16.0	1551583752	10.352948	How does Ocaml compare to F# in expressing functional paradigm?		philonoist
19292729	12.120787	-7.736694	comment	4.0	17.5	1551587447	10.432965	I'm currently developing a web app with a Haskell backend and a ReasonML (OCaml with a different syntax) frontend. I'd been interested in ReasonML for a while and so far it's been a great experience, ...		thinkpad20
19293343	12.097203	-7.811148	comment	4.0	12.5	1551600477	10.437395	I have a project that uses it, Meh. when people use Camlp4, it's a pain to read, the stuff is had to follow when it's a wall of text because of the level of indirection, Lwt makes everything hard.When...		nraynaud
19294949	11.750052	-7.0558023	comment	4.0	18.0	1551627711	8.459906	JVM tuning (especially the GC and memory allocation scaling) can be a huge PITA.		feikname
19296780	11.903649	-7.5131836	comment	4.0	11.0	1551646327	7.2742324	"Rich Hickey's ""Value of Values""[0] is what finally sold me on the benefits of pure functional programming and immutable data structures. (It remains horrifying to continue working with MySQL in my day..."		lukifer
19298143	11.774357	-7.3623524	comment	4.0	15.5	1551663256	-8.862853	I think dynamically types languages are on their way out.  There aren't many good arguments remaining in favor of them.		fierro
19298254	11.967098	-7.4041533	comment	4.0	17.5	1551665132	7.1089253	My first big Erlang project made me completely rethink my acceptance of object oriented programming in C++, Java, Python, etc. I realized that I had blindly accepted OO because it was taught as part o...		ilovecaching
19311582	11.598652	-7.293738	comment	4.0	19.0	1551803092	-8.262501	You might think this: but there is a major time and complexity cost to using more advanced type systems that sometimes doesn't pay off in simpler applications that must ship fast!		wespiser_2018
19317519	11.672243	-7.032685	comment	4.0	12.5	1551864639	8.973128	> as dicts are essentially sets with values attached.Interestingly enough some languages actually do the opposite. In Rust for example a set is literally just a dictionary with unit as the value[0] an...		Sean1708
19358134	11.628487	-7.926648	comment	4.0	11.5	1552303913	-7.3132424	What are you thinking about for the API signatures? Without beating a dead horse this is where go’s lack of generics really becomes burdensome.If it were an on disk cache []byte would likely make sens...		kasey_junk
19383724	11.983826	-7.690187	comment	4.0	13.0	1552510846	4.9914894	I can't speak to the content or Haskell at all but I really like the clean formatting of the post, particularly the charts and images. Does anyone know what tool might have been used to produce them? So clean and crisp.		whalesalad
19403239	11.698239	-7.6192555	comment	4.0	11.0	1552677715	-10.7172575	This is why I think Python programmers are suffering from Stockholm syndrome. Why you'd write your app in Python and dealing with crashing C extensions, asyncio, mypy, etc, when you can write Go, whic...		ilovecaching
19288719	12.024223	-7.810415	story	4.0	10.0	1551525092	10.431424	Monads you can understand (2015)	https://web.archive.org/web/20160711101758/https://hyegar.com/2015/10/12/monads-you-can-understand/	jxub
19290680	12.146621	-7.8986278	story	4.0	4.0	1551554675	-3.2330954	Ask HN: Relationship between set theory and category theory		fmihaila
19408133	11.889361	-7.3639545	comment	4.0	23.5	1552748391	7.1400867	The problem for me in regards to OOP is the complexity related to the management of state. OOP encourages mutability and understanding the state of an object as its methods are called can be confusing...		j_m_b
19408220	11.937249	-7.370566	comment	4.0	13.5	1552749358	7.047068	"I've seen this posted here before. I take issue with anyone who gets onto a soapbox and announces ""this might be the most important video you've ever watched"" and then proceeds to espouse their opinio..."		vikingcaffiene
19408248	11.972169	-7.5939794	comment	4.0	11.5	1552749751	10.322385	"Yes, but I/O is impure and sequentially dependent, unlike mathematics.Maybe the ""impedance mismatch"" between pure-fp and I/O is too great, with the IO monad being the ""leaky abstraction"" of the FP wor..."		mjburgess
19408604	11.942937	-7.3602266	comment	4.0	13.5	1552753537	7.094962	In theory this sounds great but in reality every major application, game, operating system and even website is written in an OOP style. Why is that? People should first answer that question.Yeah, real...		sisu2019
19409350	11.949832	-7.3828444	comment	4.0	11.5	1552761052	-1.7361186	I really liked the first half - he provides some insightful thoughts on both why OOP doesn't quite deliver on the promise, and why it continues to be popular anyway.I am also becoming increasingly ena...		bunderbunder
19410637	11.719786	-7.2799654	comment	4.0	13.5	1552773937	-8.798359	So much easier to read and write code with inferred types.Though my co-workers obsessed with writing ‘good’ code refuse to use them. They also refuse to write comments because their code is so good ‘it documents itself’.		trixie_
19416465	11.742717	-7.3796434	comment	4.0	31.0	1552855390	-8.808349	Arguably, it was true back in 2003 when this was written. There has been a lot of improvement in type system usability since then.		yxhuvud
19416649	12.360951	-7.4458227	comment	4.0	17.5	1552857132	12.867538	I think messages help better convey three things:1) that objects are acting like async, independent machines (I picture the erlang actor model, but maybe that’s a stretch.). This makes messages a more...		evanmoran
19428647	12.231605	-7.225171	comment	4.0	17.5	1552978487	-13.765723	Build your app using whatever you're most comfortable with because in the end an existing product is better than no product. Will you enjoy spending an extra hour per day working with this framework o...		bjoernw
19431405	11.698107	-7.894533	comment	4.0	11.0	1553007670	10.16446	"I honestly haven't seen many ""groups"" move from JS to Go. I've seen individuals do it, but not a ton of ""organizations"" make that kind of move.I've seen a LOT more go from Python to Go, and a few go f..."		Klathmon
19437547	11.913963	-7.359251	comment	4.0	11.0	1553040736	7.1041956	Please elaborate on how OO is fine. OO hides state, which makes reasoning about cache, and therefore performance very difficult, which is why most game programers take a data oriented approach. It hid...		ilovecaching
19438886	12.241141	-7.2902737	comment	4.0	40.0	1553054909	-10.328108	That's a common misconception that Lisp macros are mostly used to 'delay' evaluation.What Smalltalk calls 'blocks' are just (anonymous) functions in Lisp. Books like SICP explain in detail how to use ...		lispm
19444685	11.637705	-7.956584	comment	4.0	19.5	1553103676	10.200804	Every mainstream programming language that came out in the last 20 years has already solved this. Java, Javascript, Ruby, Python, Rust, you name it.I am baffled to why Go has not figured this out and ...		mirceal
19450808	11.824072	-7.049128	comment	4.0	20.0	1553165361	7.522849	“Python is more than 2x as productive as Java in the above study.“How about compared to a functional language like Haskell, OCaml, or F#?I agree that we should choose productivity over performance whe...		melling
19474731	11.912036	-7.2658267	comment	4.0	10.5	1553407889	-9.112688	I still don't understand adding type checkers to dynamic languages beyond Javascript, where there was no other alternative. I view the gradual type checker craze as an admission that dynamically typed...		ilovecaching
19474746	11.618482	-7.2508273	comment	4.0	12.5	1553408208	-8.802099	Flame mode on.Can anybody explain to me why people seem to prefer using unsafe and interpreted/slow languages (Python, Ruby, Javascript... which is only fast now because companies have invested millio...		etatoby
19475741	11.849921	-7.031054	comment	4.0	16.0	1553427251	-9.009861	Strongly agree with author. I really like Python and at one point thought that it makes sense to write almost any project in it, since it's so versatile and I know it pretty well.After working on a qu...		LawnboyMax
19475784	11.758276	-7.710541	comment	4.0	12.5	1553427968	-9.232033	I'm currently migrating a similarly sized Python and Django application to Go but for different reasons.For me it's bit rot. My Python is approaching EOL on this version and needs upgrading to Python ...		buro9
19475905	11.819612	-7.262232	comment	4.0	10.5	1553429998	-8.920746	> I began to think that a strong type systemYou’re confusing static/dynamic and strong/weak. Python is a strongly typed language, but also is dynamicly typed language.Need proof? Try doing this:a = 3b...		jsjohnst
19476003	11.727197	-7.3795104	comment	4.0	12.0	1553431346	-8.825029	There are type checkers now.Personally I find type systems a lot more annoying because they lead to more verbose code and more cognitive load. There are studies that show bugs being proportional to th...		bayesian_horse
19476013	11.702879	-7.338963	comment	4.0	13.0	1553431421	-8.892703	There is no proof or study that statically typed languages are safer in any regard than others.		bayesian_horse
19517303	11.611003	-7.9342523	comment	4.0	16.0	1553812273	10.205905	Go has not displaced anything around here.Still plain old Java, .NET and C++ as always.		pjmlp
19518622	12.449871	-7.1269155	comment	4.0	16.0	1553826473	12.398887	Static-typing seems so at odds with Ruby/Rails that I can't even imagine what that would look like.		hombre_fatal
19520953	11.863932	-7.032834	comment	4.0	11.0	1553861909	8.931479	IOCP is particularly strong when you compare it to select, poll, epoll,  kpoll,  and all of the other attempts to make asyncio work in Linux.		PaulHoule
19551606	12.040498	-7.302628	comment	4.0	11.5	1554187520	12.28402	"Because they don't solve real world problems as well. Rails and django show off themselves with ""here's how to build a a website"" while functional languages like to show off how terse they can make a ..."		flukus
19584723	12.508876	-7.107139	comment	4.0	10.5	1554484315	-11.106354	I'd suggest taking a dip into crystal - I've been tracking it's development and it could be my next general purpose language, it's what you're looking for too I believe - to quote the docs:Crystal is ...		thecupisblue
19585915	11.9137	-7.3417253	comment	4.0	12.0	1554491001	7.0852985	Sorry, but you're just validating my stereotype of a typical OOP critic.OOP != Java.>OOP is great if all you are doing is OO and if your solution to a problem is running a simulation (what OOP was inv...		gambler
19588380	11.646196	-7.973596	comment	4.0	19.0	1554510941	10.2549515	I don't know. I've worked in three different languages for years on end, and they all have different pain points. C++ is too complicated, and generics are part of that complexity. Java has an ok basic...		johan_larson
19589963	11.914011	-7.0934005	comment	4.0	27.5	1554542046	8.37657	It is very interesting to see in such projects how they expose the weakness of certain Java idioms. The mentioned JavaBeans getters and setters are obsolete pattern, for which in most cases there’s no...		ivan_gammel
19589998	12.246997	-7.536427	comment	4.0	15.0	1554542686	-11.3824	Why didn't you port it to Kotlin instead? Much better language than Go in every aspect and also comes with an auto-conversion tool.		edem
19590059	11.646428	-7.8945966	comment	4.0	20.5	1554544654	10.198225	I was struck by the lack of inheritance in go, that to me is brilliant.I’ve worked with C# for a decade, and I’ve yet to see a use of inheritance that wouldn’t have been easier to maintain in the long...		jaabe
19590339	11.682002	-7.870184	comment	4.0	18.0	1554551843	10.189121	"It's interesting that the resulting go code has 43k lines of code, while the python client for raven only has 6k lines.
I don't know whether they have equivalent feature sets - but I kind of wonder how it would have turned out if the go port would have been based on the python version."		raphael_kimmig
19600326	12.220184	-7.0999455	comment	4.0	13.0	1554675716	-10.448668	The article mentions object-oriented programming several times as a helpful paradigm (especially for domain-constrained problems where DDD is helpful).I’d also like to point out that functional progra...		TimTheTinker
19604867	12.076899	-7.1598377	comment	4.0	15.0	1554729428	9.131099	"Just to give a little bit more context, in contemporary javascscript you can write something like this (wrapped in a try-catch:    async function http_request_new(url) { return new Promise(...) }
    ..."		matthewaveryusa
19640206	12.224292	-7.646909	comment	4.0	12.0	1555024059	11.95447	"To ruby folks, it's like faster ruby.  What is the appeal to Scala folks? As formerly a Scala folk, it hasn't had much interest to me (but I have no negative feelings about it either, it has always been a ""cool another language"" to me)"		brianwawok
19642307	11.643983	-7.9456806	comment	4.0	10.5	1555048187	10.209925	"From TFA: ""These examples are written in neutral pseudocode that should be adaptable to most any imperative language.""False.  The examples are written in Go, a generally easy to read language.  Maybe the author thought it is a funny joke.  Low bar :)"		djpilot
19658235	11.840247	-7.0817094	comment	4.0	15.0	1555231569	-9.162346	> A python-esque language with algebraic data typesI think [Pony](https://tutorial.ponylang.io/types/type-expressions.html) is close to being that (but it has much more, like Actors and reference capabilities).		brabel
19671029	12.334307	-7.0441985	comment	4.0	13.0	1555387193	13.188754	I see Perl 6 trending a lot around here lately. As someone who has never touched it is there some reason for excitement around it? Or is it primarily people who already use Perl often?		sl1ck731
19698009	11.954823	-7.2097178	comment	4.0	12.0	1555663929	-8.908333	I understand why PHP started to add support for type annotations as the hype around type annotations (Dart, Flow and Typescript) still was quite strong a few years ago.By now I think it is quite obvio...		tosh
19698190	11.882326	-7.2003894	comment	4.0	11.0	1555667209	11.165956	Fascinating to see the circle turn further back towards strong / static typing.One of the major things that has kept me using Groovy over the last 10 years was the reluctance to leave optional / gradu...		zmmmmm
19698219	12.201917	-7.074446	comment	4.0	15.5	1555667698	-10.042086	"Instead of:  sig {params(name: String).returns(Integer)}

... why not simply:  sig {name: String, returns: Integer}"		cutler
19707544	12.3334255	-7.5264845	comment	4.0	13.0	1555779379	12.86315	Wonder why after all this time nobody managed to replicate erlang concurrency mechanism successfully. I’ve heard about actors framework in other environments ( such as akka in .net and java), but i fe...		bsaul
19708104	11.731484	-7.4126744	comment	4.0	12.5	1555785072	-7.012236	This is super condensed but still very readable if you know Reagent and Hiccup.It's interesting to compare this to a lot of tetris clones written in TypeScript. There are a few that take enormous plea...		beders
19728867	11.983376	-7.6825275	comment	4.0	11.0	1556029365	10.4321	There is already a Haskell kernel for IPython:https://github.com/gibiansky/IHaskellHow does this project differ in scope/design goals?(This project uses a different approach to implement essentially t...		rkrzr
19781629	11.596843	-7.918665	comment	4.0	13.0	1556565220	10.26874	I've been using Go heavily over the last five years, starting with 1.2. Whatever warts the language has in its design, the error handling being one, it's still an excellent language for getting work d...		oppositelock
19826712	12.059373	-7.091771	comment	4.0	12.0	1556980705	8.238973	Java the language is slightly different than JVM but nevertheless the future is not very bright IMO. So far there are a few areas Java/JVM still holds a strong position but if you take a look at GitHu...		djvu9
19682258	11.626156	-7.2202234	story	4.0	210.0	1555507242	5.0661182	Graphical Introduction to Dynamic Programming	https://avikdas.com/2019/04/15/a-graphical-introduction-to-dynamic-programming.html	adamnemecek
19785500	11.666613	-7.2912774	story	4.0	80.0	1556604245	-8.835665	Lambda: The Ultimate Imperative (1976) [pdf]	https://dspace.mit.edu/bitstream/handle/1721.1/5790/AIM-353.pdf	kbp
19840843	11.87173	-7.3598475	comment	4.0	16.5	1557159611	9.222319	My dislike for the ”dot keyword” syntax has been strong, but if it is selected, hopefully it’s at least generalized to other keywords in the future, so that `.await` doesn’t stay a lone awkward except...		Sharlin
19840845	11.609441	-7.902357	comment	4.0	29.0	1557159624	10.116664	Disagree.  I can write a server in C++ that, with careful thought and a bit of planning, will be able to exploit the resources of the kind of 88-core dual-socket machines that are mainstream today.  N...		shereadsthenews
19841177	12.155828	-7.5133786	comment	4.0	11.0	1557161259	-10.597967	Any word on F#? Last I checked there wasn't any REPL still and type providers weren't working.		bellp1234
19840459	12.066739	-7.4895563	comment	4.0	16.0	1557157606	9.2086115	The designers of Kotlin also had an interesting point: await (synchronous call) should be the default, non-awaited (asynchronous) code should have a keyword indicating that it is async.		jules
19856823	12.25654	-7.5230355	comment	4.0	14.0	1557302967	-11.36794	I bet they have plans to make a different VM for Kotlin and move away from JVM, should be coming in the next couple of years.		vitoreiji
19865751	11.781245	-7.0805297	comment	4.0	12.5	1557381373	8.086312	"Python is build entirely around the idea that encapsulation is mostly useless.  ""We're all consenting adults"" is the general philosophy.  As long as there's a convention as to what properties are ""pub..."		jnwatson
19876975	11.855952	-7.3355927	comment	4.0	10.5	1557490257	6.0851927	Why imperative programming is important to learn? What will we be missing in a LISP only world?		viebel
19882491	11.702034	-7.405938	comment	4.0	15.0	1557524320	9.18688	https://wiki.openjdk.java.net/display/loom/ which is superior to async/await, if I may say so myself (I'm the project lead)		pron
19886499	11.890805	-7.500493	comment	4.0	11.5	1557586778	12.737911	Erlang: no global pause at all. Even for major GCs. Basically every Erlang process (≈ “green thread” in common terminology) has its own collector.		lelf
19892965	12.309046	-7.680054	comment	4.0	15.0	1557679870	11.953674	>almost impossible to find developer with Scala experience around here anyway)I feel you.I think there is no pool more shallow than the one of C programmers that can work on embedded in my area.Regard...		SlowRobotAhead
19920319	12.042381	-7.7191124	comment	4.0	16.5	1557933838	10.430972	"What is it you don't like about OCaml, or similar ML-family languages (e.g. F#)? Most of ""modern language design"" seems to amount to the ML featureset."		lmm
19927499	12.250203	-7.536758	comment	4.0	11.5	1557999661	-11.357097	Yes, it's a bit of a pity that great functional languages like Scheme and even the veteran common LISP are loosing out to modern languages like Kotlin because of lack of support in these critical, functional areas. Especially when REPL based development is so amazingly productive.		lenkite
19932178	11.945125	-7.7303605	comment	4.0	10.5	1558034788	10.434313	Good luck with the trait object. I doubt you're going to significantly improve on what the Haskell community has done in 20 years. If you do manage it though, kudos in advance.		choeger
19949034	11.637862	-7.7351885	comment	4.0	13.0	1558205293	10.190689	You want pyca/cryptography. The last thing in the world you want is a standard crypto library that no experts are enthusiastic about maintaining. Golang had an unfair advantage here, because the langu...		tptacek
19951977	11.897108	-7.084568	comment	4.0	13.5	1558251072	-10.782153	Hawk Owl is a _fantastic_ dev. She was the main force behind the twisted 2->3 transition. But because she is, she is missing the point of batteries included.Asyncio is in the stdlib so that we have an...		sametmax
19856745	11.662643	-7.900633	story	4.0	12.0	1557301923	10.155276	Type safe and modularize way to generate HTML on server side in Go	https://github.com/theplant/htmlgo	sunfmin
19968847	11.966516	-7.3688927	comment	4.0	13.0	1558433709	6.9338436	> I have a ton of respect for Alan Kay and think he's a genius. But why does it seem like every time he talks about OO it's always painting an apocalyptic picture like we're in some kind of twilight z...		LandR
19969099	11.778655	-7.3801136	comment	4.0	11.5	1558437442	5.403122	"Type theories like the one of coq support inductive definitions.   Inductive nat: Set
   := | O: nat
      | S: nat -> nat

However, this feels a bit like having a whole programming language for the f..."		cjfd
19969114	11.800803	-7.2534366	comment	4.0	12.5	1558437597	-8.940249	I'm a fresh graduate from uni so I'd say that I don't have that much experience. My last years working on the side of studies using Python really made me prefer strongly typed languages like Haskell, ...		jompe
15764676	11.64843	-7.4255652	comment	4.0	11.0	1511441503	10.136285	By single type, I meant to hint not being able to mix ? on Options and Results in the body, but good to know that's soon possible! Though you still can't, eg, use `?` in main()		zZorgz
15766870	11.724894	-7.8721776	comment	4.0	13.5	1511461345	10.206412	You're comparing core libraries of Go with non-core libraries of Node.js. Since Go libraries are not versioned without a tool like dep, you're putting trust that master doesn't have breaking changes v...		iends
15767059	11.694234	-7.8693485	comment	4.0	12.5	1511462842	10.182123	I don't think this criticism holds water since he opted for JavaScript. If he was having problems with goroutines and channels, he could have picked a Node-like architecture (single-threaded, callback...		weberc2
15767074	11.658541	-7.9082737	comment	4.0	11.5	1511462998	10.201792	I think a lot of the differences between how people view Go is based on where they are previously coming from. The C/C++ folks are used to worse or more complex type systems so they view Go as fresh a...		iends
15771917	11.795813	-7.0672646	comment	4.0	12.0	1511544556	5.1553154	"""Design patterns are bug reports against your programming language.""– Peter Norvighttp://norvig.com/design-patterns/design-patterns.pdf"		ellyagg
15772347	11.755061	-7.1640034	comment	4.0	16.5	1511549182	5.3155236	> But yeh, patterns are a sign of a weakness in the language.That line of reasoning never ceases to be amusing by how silly and self-defeating,particularly as those who make those claims try to pin ig...		geezerjay
15776887	11.706545	-7.3692966	comment	4.0	12.5	1511631688	-5.6590195	Cool post! The stuff about Curry-Howard was really interesting and relates to a question i have been thinking about. But I'm a novice when it comes to the theory of type systems or theorem provers. Ma...		zaptheimpaler
15807821	12.217036	-7.630104	comment	4.0	15.0	1511971461	11.945046	What makes Scala decidedly functional and JavaScript or Ruby not?		paulddraper
15823079	12.343367	-7.0497766	comment	4.0	18.0	1512124506	13.186123	This is frankly terrible advertisement for Perl 6.I guess it is targeted at people that are already well-versed in Perl 6 (or at least Perl 5)? Maybe it should say so at the top so that people like me do not get a terrible first impression of it.		Phlogistique
15832652	12.03077	-7.218902	comment	4.0	10.5	1512232689	2.448026	The example with the message could just be msg('hello everyone').to( list).except('John').send().then... where send() returns a promise. That is, the message creates an object that is getting modified...		jostylr
15877802	11.655775	-7.9545574	comment	4.0	17.5	1512728610	10.210513	I am one who downvoted that statement, because I considered it a snippy remark without any content. Especially, as the question of generics in Go has been mentioned and discussed often enough. And if ...		_ph_
15878104	11.667753	-7.611729	comment	4.0	12.5	1512733417	10.076279	"It's interesting that generics are so important now but they were almost dropped from .NET schedule as being ""academic only"": https://blogs.msdn.microsoft.com/dsyme/2011/03/15/netc-gener..."		Shoothe
15877719	11.666044	-7.636727	comment	4.0	23.5	1512726862	10.090174	I don't know why you're downvoted. Generics is a feature that's holding back a lot of developers dealing with complicated business logic (and need for abstraction) from moving to Go. And at the same t...		golergka
15883415	11.83591	-7.353124	comment	4.0	17.5	1512780090	-8.687402	Currying is one of those things I haven't grokked completely. And, shit, I just used grok as a past tense verb...I'm not sure if i just haven't drunk enough koolaid or if curriers are beyond the pale.		megaman22
15894398	11.627571	-7.9450197	comment	4.0	11.0	1512952939	10.188728	To me it seems like Goliath becomes way stronger than any other ship once you have a lot of upgrades. Basically impossible to kill someone playing it safe with a max upgraded Goliath		sh4z
15908241	11.760005	-7.7404637	comment	4.0	11.0	1513104504	10.177828	I was a heavy Typescript user and a big fan. I personally found Go's type system and overall ecosystem to be much easier to grok, especially when it came to interacting with 3rd party packages. If you...		matthewmueller
15932298	11.91275	-7.394846	comment	4.0	10.5	1513350390	-6.653906	Meyer is the creator of the Eiffel programming language. Most of Eiffel's OOP features were borrowed by other successful OO languages, but I still don't understand why Eiffel never took off.		gfredtech
15969989	11.692037	-7.6286645	comment	4.0	15.0	1513781627	9.100148	Wishful thinking:Could modern programming languages adopt isolated heaps with message passing like Erlang does? This is the easiest solution to GC pauses and allows other nice features like hot code r...		imtringued
15995692	11.76573	-7.1850243	comment	4.0	13.5	1514056340	-10.429286	It's a shame that the post has been taken down, as there were some good criticisms there, and I suspect this comes from dealing with a larger codebase.  I work on F# (similar to OCAML) at Microsoft. I...		phillipcarter
16005371	11.960886	-7.4249806	comment	4.0	17.0	1514230220	7.24694	I get the idea (doing fp for a living for 15 years) but the article lives in a bubble populated by  mathematically pure unicorns: This strength/feature of fp can only weigh in where we have the mathem...		jlg23
15931504	11.951791	-7.7133856	story	4.0	135.0	1513343446	10.415337	Anatomy of a Haskell-Based Application, Revisited	https://tech-blog.capital-match.com/posts/3-anatomy-of-haskell-web-app.html	kornakiewicz
16043664	12.221932	-7.2434335	comment	4.0	14.5	1514763512	7.1497545	Smalltalk has a meta API that is designed to allow introspection and modification of both static and dynamic code entities [1,2].Static entities such as classes and methods (and depending on your Smal...		robertkrahn01
16046023	11.681607	-7.337905	comment	4.0	14.0	1514814373	-6.3910275	I feel the author isn't going far enough- make all variables immutable by default unless explicitly declared otherwise, and even then highly discouraged.Where mutable variables are needed, I prefer to...		mabbo
16096099	11.912299	-7.5845647	comment	4.0	11.0	1515411601	10.422332	Very good example and motivation for dependent types.However, I think it makes strange assumptions on its readership. For example:> If you’re a non-Haskell programmer, this might all seem perfectly fi...		vog
16096173	11.706808	-7.3929753	comment	4.0	11.5	1515413145	-8.713669	I didn't read this closely, but are those dependent types or just type-level integer literals? Can you use variables and/or arithmetic operations on the type index? If you can't instantiate the type w...		pron
16135948	12.069571	-7.5992723	comment	4.0	12.0	1515788258	9.74148	"I don't quite get the problem as stated in the article. I assume it's a contrived example and the real (kotlin) code rather looks like:    val foo: T? = null
    Observable.just(foo).subscribe()

Here..."		stewbrew
16136072	12.076251	-7.5919633	comment	4.0	20.5	1515789292	9.834816	They could have gone hardcore and said any non-primitive, unanotated platform type is nullable but that would have made interop really ugly. And all of the null checks would have muddied up code and a...		kodablah
16138949	11.6161785	-7.38026	comment	4.0	11.5	1515836988	10.059967	"It's good that they at least recognize that code-generation is a crock.""If you are using code generation to solve a problem that might be better solved by making your code more generic, code generatio..."		mpweiher
16143376	12.057738	-7.840674	comment	4.0	11.5	1515919895	10.4204445	I used OCaml a few years ago and I thought it was an excellent language. Despite being powerful it was really easy to learn.One thing that put me off in the end was that it didn't support native OS threads (I have the same problem with Racket). Has threading support improved over the years?		papaf
16156024	12.376873	-7.0813527	comment	4.0	11.5	1516080163	-9.725943	Here's what the plan seems to be from reading the blog and the README:1. Re-implement Bash and similar shells in a modern programming environment with an eye to extensibility2. Make good debugging too...		jitl
16167079	12.118099	-7.2571855	comment	4.0	11.5	1516188695	11.878075	Today I would say Java/Scala mostly because of jvm access to huge numbers of libraries.   But also because of things like Akka.There may be other options depending on whether you consider JavaScript or Go to be a functional language.		anthonyskipper
16173661	11.603306	-7.932948	comment	4.0	10.5	1516236830	10.192723	I think the go team does deserve credit for making compilation speed a priority when other languages of the same generation have tended not to.		_ek94
16149856	11.611934	-7.827162	story	4.0	67.0	1516015158	10.073314	Buffered Channels in Go: Tips and Tricks	https://www.rapidloop.com/blog/golang-channels-tips-tricks.html?h	i_have_to_speak
16190158	11.624416	-7.115134	comment	4.0	19.0	1516398622	6.791279	Interesting to see Java copy modern languages good ideas.The footgun of 'break' in switch statements has always bothered me, I strongly prefer the kotlin/swift way of doing this.		on_and_off
16193159	11.683983	-7.8885093	comment	4.0	11.5	1516452506	10.224173	"I actually think that's not a ""Python"" or ""Go"" success story. It's a story of how both of them lack something significant: Python lacks speed and light memory usage, Go lacks dev speed and expresivene..."		alehander42
17887532	11.84975	-7.3337255	comment	4.0	13.0	1535737791	7.0505905	What is the difference between subtyping and subclassing? It looks confusing to me.		nexys
17905182	11.945338	-7.703551	comment	4.0	13.5	1536012234	10.407763	I lost confidence in Haskell's ability to let me write something one way and safely refactor it later, when I found out that you can't use a ton of the algorithmic functions in the standard library because they do things all wrong.		sdegutis
17905374	11.978001	-7.7265654	comment	4.0	28.0	1536014964	10.400364	I think the complexity in Haskell largely comes from its advanced type system and laziness. For example, pervasive use of monads in Haskell is a direct result of encoding side effects using the type s...		yogthos
17905612	11.901212	-7.675126	comment	4.0	21.0	1536018793	10.373729	The type system forces you to solve this problem in a very specific way by structuring your entire app around pushing IO to the edges. There are plenty of other ways to address the problem that work p...		yogthos
17905222	11.671646	-7.3522906	comment	4.0	42.0	1536012804	10.348088	I definitely find there's a strong relationship between language complexity and bikeshedding. When you have a big language like Haskell or Scala, it's easy to get distracted from solving the actual pr...		yogthos
17910899	11.655855	-7.921873	comment	4.0	11.5	1536082031	10.241896	Yes, the people who want generics are either people who don't use Go, or don't understand the purpose of Go and the implications of adding them to the language.		ilovecaching
17934794	12.105518	-7.8310175	comment	4.0	13.0	1536332729	10.497762	I made those notebooks that can execute OCaml locally in-browser: https://louisabraham.github.io/domical/What do you think?		Labo333
17941540	11.655838	-7.638844	comment	4.0	12.0	1536424492	10.120024	The author promotes code generation as a practical solution to some problems — but doesn't mention the huge drawbacks for generics, which is why it's generally not used.The reason is that while you ca...		atombender
17943443	11.614858	-7.895907	comment	4.0	28.0	1536450133	10.22295	Python is installed literally everywhere. If it’s a CLI tool, and it’s written in python, the chance that it won’t work is slim.Go has a massive number of problems. For example, I tried to run Keybase...		shawn
17946666	11.88491	-7.146596	comment	4.0	11.0	1536511674	8.5566	I'm working on my first Clojure project and find JVM to be painful (it starts very slowly and eats lots of RAM). I'd appreciate any tips on making JVM non-bloated.		dancek
17982229	11.601012	-7.8778143	comment	4.0	10.5	1536870457	10.219416	"Check out ""Writing An Interpreter In Go"" https://interpreterbook.com/
It uses Golang to make an interpreter for a simple C-Style language and it's ""only"" 200 pages long. I'm about a third in and my head is smoking."		citeguised
17987777	12.20598	-7.5765023	comment	4.0	10.5	1536938095	-11.238545	Looks great! My biggest concern and one of the reasons I'm not using Swift or C++ for a cross platform library is that most of the dependencies you (at least I need) need don't support those languages...		jaegerpicker
17937204	11.686101	-7.6195216	story	4.0	83.0	1536350332	10.1293955	Getting specific about generics	https://emilymaier.net/words/getting-specific-about-generics/	grey-area
18023552	11.795441	-7.1825705	comment	4.0	11.0	1537358584	6.860167	"  Array.prototype.reverse modifies JSImmutableButterfly

You have to wonder how an immutable butterfly can be modified?!"		stuartd
18033182	11.764653	-7.0357985	comment	4.0	12.0	1537457564	-10.559219	JavaScript is a minefield of unexpected behavior when you try things like this. Besides the issue with this-binding already mentioned in the thread, there are other examples of weird stuff that happen...		rbonvall
18043566	11.639601	-7.971367	comment	4.0	18.0	1537574096	10.252501	"2 unrelated questions.  (tl;dr at bottom)   Background
   ----------

The two major advantages of Go are its clear, unambiguous and explicit syntax (unfortunately ugly) and very small (minimal) featur..."		logicallee
18045058	12.283679	-7.5129952	comment	4.0	11.5	1537604017	12.812151	The actor model is prized  in the talk. Yet actor model is not functional. The problem is the message queue of each actor. It is an imperative storage and one can get all nasty problems of imperative code from apparently functional code patterns.		_0w8t
18047045	11.745919	-7.421637	comment	4.0	19.5	1537638806	-8.669368	> An introduction to dependent types, demonstrating the most beautiful aspects, one step at a time.Is there a companion book detailing the ugly downsides of dependent types and how to avoid them, one step at a time?		lylecubed
18058750	11.79451	-7.344744	comment	4.0	16.0	1537804551	-8.946446	> programmers tend to prefer untyped (dyanamic?) languages to typed languagesI have not found this in practice. I have found that some developers prefer a dynamically typed language for certain situat...		drb91
18058812	11.710314	-7.0704103	comment	4.0	12.5	1537805047	9.20762	"  >>> from collections import ChainMap
  >>> inv = ChainMap({'Monopoly': 20, 'Nintendo': 200}, {'iMac': 1000, 'Chromebook': 800, 'PC': 400}, {'Jeans': 40, 'T-Shirt': 10})
  >>> inv['iMac'] = 9001
  >>..."		Sean1708
18058820	11.776649	-7.3472934	comment	4.0	15.0	1537805088	-8.936349	Most of the oldies I know prefer static typing.A lot of the new people use dynamic types because that's all they know.		UK-Al05
18075128	11.705782	-7.84185	comment	4.0	15.5	1537964492	10.161632	> I would rather use Go, which seems to have all that Java has to offerReally ? What is the Go equivalent of J2EE ? Do Go appservers exist that offer all the features that something like Payara (Glassfish), JBoss or WebSphere does ?		Aaargh20318
18088115	11.652544	-7.1339555	comment	4.0	12.5	1538079053	-7.3580804	> I’d say that using lambda expressions is acceptable only if your situation meets all four of these criteria:> 1. The operation you’re doing is trivial: the function doesn’t deserve a nameSure.> 2. H...		davemp
18088339	11.67193	-7.1847925	comment	4.0	14.5	1538080407	-7.71146	it's because i am not that deeply familiar with python and the article is not clear itself on this. what is he complaining about then if they are identical in what's returned? is it simply because the...		nikofeyn
18089015	11.714858	-7.13359	comment	4.0	20.5	1538084448	-7.3741026	There's real readability and clarity to positioning an anonymous function right at the point in the code that it will be used.When you name and define a function some other place and use it elsewhere,...		andrewstuart
18089210	11.650933	-7.143097	comment	4.0	11.0	1538085932	-7.868977	thank you for clarifying exactly what's going on. other than the __qualname__, in what other ways do the two different bindings differ from each other?however, this still goes in the bucket of why i p...		nikofeyn
18101033	11.6563225	-7.942212	comment	4.0	14.0	1538236398	10.203319	>? I'm generally curious because I figured Golang would be a no-go due to the GC...Huh? Tons of GC languages are used for games. Heck, web games use JS. Not to mention the whole C#/Unity thing that even powers AAA games...		coldtea
18105592	11.698892	-7.2484136	comment	4.0	12.0	1538304012	-8.911764	It's important to keep in mind that there are vast differences in static analysis tools. Some of the commercial ones that John mentions in the post are quite powerful but also very expensive and out o...		ThePhysicist
18137720	11.799162	-7.135767	comment	4.0	13.0	1538635466	9.192206	I don’t think C# has superior async functionality, it used to, and certainly had for a long time, but not today.Threading and tasks add unnecessary complexity.Speed? What speed, this web assembly exam...		eksemplar
18141968	11.741506	-7.753576	comment	4.0	21.0	1538674904	10.167979	Yes. Because mainstream is what you should select for when choosing your tools.On a more serious note: I’m very wary of people that have discovered the one true language, framework, etc.That’s how you...		mirceal
18142046	11.593498	-7.9148755	comment	4.0	46.0	1538675481	10.168768	> I'm happy to go on record claiming that Go is the mainstream language that gets this really right. And it does so by relying on two key principles in its core design...The unmentioned third principl...		ken
18142107	11.60165	-7.9073253	comment	4.0	18.0	1538676005	10.206009	Go doesn’t need a VM.  That’s key. You get good concurrency with an easy to deploy binary that can target the major chips.		virmundi
18050620	11.706656	-7.017141	story	4.0	63.0	1537703013	9.261791	A practical usage of ChainMap in Python	https://blog.florimondmanca.com/a-practical-usage-of-chainmap-in-python	florimondmanca
18155911	12.003358	-7.7924557	comment	4.0	13.5	1538843553	10.410766	Apart from the sibling conmment pointing out that effect monads are one type of effect system, almost all effect systems I know of (algebraic effects included) have a monadic interface. The only one I...		dwohnitmok
18160520	11.988865	-7.75715	comment	4.0	11.5	1538920217	10.489508	Would love to see some evidence of a mass migration to Haskell... anywhere.		mhluongo
18161336	11.811257	-7.374363	comment	4.0	10.5	1538929617	-8.935915	There is plenty of evidence showing that the trend is toward static typing, not dynamic typing.Starting with the fact that most dynamically typed languages today are progressively adding type checking...		hota_mazi
18169545	11.845278	-7.346306	comment	4.0	11.0	1539020575	-6.0962644	Pet peeve: I wish people would call them persistent or fork-on-write, but functional at least is better than immutable.		_Codemonkeyism
18172915	11.761239	-7.376082	comment	4.0	18.0	1539052167	-8.891452	I'm nowhere near qualified enough to critique this article in a meaningful manner, but I've been thinking recently that types and compile time functions go hand in hand.Type systems are essentially an...		_hardwaregeek
18250598	12.128364	-7.2175503	comment	4.0	11.5	1539885908	8.50819	It's Unity's (the game engine) new Entity-Component-System, the blog post is an answer to this presentation:http://aras-p.info/texts/files/2018Academy%20-%20ECS-DoD.pdfUnity's traditional entity syste...		flohofwoe
18250642	12.132903	-7.2350016	comment	4.0	11.0	1539886151	8.514395	I don't understand why this article is so angry?  ECS is a great subset of OOP.  Both are helpful tools where they make sense.		LiterallyDoge
18250789	11.915453	-7.3465376	comment	4.0	13.0	1539887139	-12.999649	Does anyone know of a good reference for idiomatic OO(P)?Like the Codd paper for Relational Algebra.		heinrichhartman
18268412	12.292836	-7.3035946	comment	4.0	11.0	1540134975	6.9635987	I've found a good way to approach Smalltalk systems like Pharo and Squeak is to remember they're whole systems, not just languages with a bolted-on IDE.I like to think of each running instance as more...		tonyg
18276504	12.147213	-7.893777	comment	4.0	13.5	1540229118	-3.290834	"Just another opinion on this: I don't think ""Category Theory for Programmers"" is that great from a pedagogical perspective. I get that its freely accessible, but like the ""Haskell from First Principle..."		theoh
18282038	11.609123	-7.356618	comment	4.0	15.0	1540287959	9.210912	I can see how `semi::map` could be useful, but `semi::static_map` just seems to be an alternate syntax for global variables.		petters
18240497	11.94566	-7.6412206	story	4.0	64.0	1539792796	-9.020343	Covariance and contravariance in subtyping	https://eli.thegreenplace.net/2018/covariance-and-contravariance-in-subtyping/	ingve
18310080	12.296746	-7.500485	comment	4.0	11.5	1540567380	12.841942	I can see the logic behind the statement 'message passing is a pretty effective antidote to coupling' but I personally subscribe to the idea that actors don't compose. In light of that I think use of ...		hderms
18311197	12.477139	-7.4291854	comment	4.0	11.0	1540574400	12.92394	Does anyone miss or want type checking when working with Elixir? After working with Ruby to build large systems for so long, I'm missing a little bit of the safety that types provide. Typescript has been great.		joevandyk
18313171	11.6499815	-7.9683266	comment	4.0	11.0	1540592988	10.239997	"I don't understand why it is so hard to add enums for example, Golang authors are fiercely defiant to adding many small essential features. I understand that they worship the statement ""simple is beau..."		the_other_guy
18314997	12.262008	-7.283863	comment	4.0	12.5	1540632138	7.1748776	The reason Smalltalk didn’t take over the world was it was so resource intensive. A single workstation would have cost about $40,000. There’s no way the early Macs could have run Smalltalk, they only ...		simonh
18315399	12.305992	-7.0614505	comment	4.0	17.5	1540642594	-10.415951	"With Bucklescript/Reason you get typesafety, immutability, performance and small codesize:>Now we compare the runtime performance:   BuckleScript Immutable Map: 1186ms
   Facebook Immutable Map: 3415m..."		scns
18331802	11.807481	-7.0927205	comment	4.0	11.5	1540849425	5.0752215	"I always wanted to write a ""Philosophy of Software Design"", except I wouldn't dictate HOW to write software. Instead I'd focus on what questions to ask and what trade-offs to expect. It would be Yoda-..."		tabtab
18367089	11.7647295	-7.3696313	comment	4.0	12.5	1541195848	-8.919263	"> Strong, because values have one specific type (or None)Because its type system does not provide implicit type conversion I guess.
But some languages have a stronger type system with, in addition, hi..."		NoiseByNW
18373352	11.803785	-7.163335	comment	4.0	12.0	1541292418	9.475141	And lambdas were introduced in 8 making nearly all of the author’s issues mute.		chvid
18373995	11.924275	-7.4250274	comment	4.0	18.0	1541301881	-8.808183	Most Haskellers write out the types even though they can be inferred. In a pure language, signatures are extremely close to documentation (you know exactly what a function will do by its signature).Ja...		ilovecaching
18374468	12.2044935	-7.621685	comment	4.0	14.5	1541310396	11.926296	Java has been gradually eating all the good parts of Scala.  So far, it's eaten lambdas, map / reduce / fold functions, option types, raw string literals, the concept of a built-in REPL, type inferenc...		reality_czech
18374721	11.903293	-7.634729	comment	4.0	14.0	1541316404	-8.6215105	Types aren’t documentation, no matter how many Haskell users delude themselves thinking it is.Documentation is more than a function definition. Types don’t explain rationales and how to use functions and programs. Types don’t give proper examples.		FranzFerdiNaN
18392205	12.212694	-7.0626435	comment	4.0	20.5	1541520537	13.16756	"Obligatory list of some good quotes that are not included:Rules of Optimization: Rule 1: Don't do it. Rule 2 (for experts only): Don't do it yet.
 - M.A. JacksonNever test for an error condition you d..."		Jun8
18393468	11.641674	-7.7438364	comment	4.0	11.0	1541528216	9.892002	> A data structure is just a stupid programming language.>        — R. Wm. GosperWhat's this supposed to mean?		gnulinux
18406976	11.738787	-7.119389	comment	4.0	12.5	1541691470	8.917155	"You don’t need lodash or a new operator for the example provided:  departments
    .flatMap(d => d.employees)
    .map(e => e.salary)
    .reduce((p, v) => Math.max(p, v), 0)

That said, the pipe oper..."		mbostock
18414357	11.911406	-7.1161594	comment	4.0	11.0	1541772132	8.55627	Honestly, people still using the getter and setter argument in 2018 as a reason to pick a language should not be taken seriously.Indeed Java has more boilerplate, but honestly I've never been bothered...		lockje
18416801	11.591391	-7.89457	comment	4.0	17.0	1541789328	10.084326	Wonder if you could build something similar using Go, A goroutine's overhead is only about 2KB. No idea how easy it would be to sandbox it.		tschellenbach
18423536	12.355743	-7.595561	comment	4.0	16.0	1541884374	10.378562	So ReasonML is actually a Javascript-like syntax for OCaml, and its tool-chain converts Reason code to OCaml, which then uses a tool called Bucklescript to convert that OCaml to Javascript.All because...		jarcane
18425198	11.65673	-7.958886	comment	4.0	16.0	1541916002	10.228025	I've written a lot of Go, I started four years ago when my  workplace at the time wanted to ditch writing web services in Ruby. We were very deep into containers, so the obvious choice to the team lea...		ilovecaching
18383654	11.676236	-7.2889833	story	4.0	183.0	1541435723	-5.48319	A Lisp Way to Type Theory and Formal Proofs (2017) [pdf]	https://www.european-lisp-symposium.org/static/2017/peschanski.pdf	pmoriarty
18478356	11.605546	-7.868114	comment	4.0	13.0	1542504164	10.186183	While I'm cool with writing other language processors in a new language (Lisp written in Cobol anyone?)  I'm missing the value of this past the bragging rights.There was a similar article about writin...		AstroJetson
18478481	11.658722	-7.2717333	comment	4.0	12.5	1542506298	9.860002	I’ve toyed with the idea of doing a language like this. With a small difference, records would be the only way to express values and bindings.There would be no need to think of currying and partial ap...		CuriousSkeptic
18485233	11.871675	-7.125032	comment	4.0	14.5	1542621473	-10.743389	"It must be off by 3 of 4 orders of magnitude. Python with asyncio does about 120_000 switches per second with a trivial fibre/coroutine here:  import time
  import asyncio

  REPS = 1_000_000

  async..."		erdewit
18513078	11.934548	-7.436795	comment	4.0	16.5	1542927168	-11.90319	I compare it to 10-15 years ago, when functional programming was rather rare. Mid-level OO programmers would complain it was confusing and unfamilar, whereas in reality has beautiful and simple concep...		paulddraper
18519020	11.841886	-7.1136417	comment	4.0	14.5	1543008662	-10.71464	This is why I love gevent.  Synchronous code becomes asynchronous automatically and it's rarely necessary to reason about the asynchronicity.		jacob019
18520321	12.02626	-7.7591786	comment	4.0	11.0	1543030654	10.407536	I think this article makes a simple concept seem unnecessarily convoluted. The first paragraph says:> This very complex object coming from the Category Theory is so important in functional programming...		curryhoward
18521767	12.005442	-7.770053	comment	4.0	11.5	1543063337	10.425861	May be. I think a Monad is an abstraction which generalizes a transition, similar to a step of logical deduction.It Haskell a similar concept is actually used to compose what they call actions, origin...		throwaway487549
18526702	11.9343605	-7.367637	comment	4.0	15.5	1543151036	7.0924644	> What probably is true however is that a lot of people should unlearn the OOP they learned in school.Can you provide references for proper OOP?		bvrmn
18532462	12.085265	-7.8528714	comment	4.0	10.5	1543230095	10.423072	Great writing.By the way, How is it that HN readers always heavily promote OCaml related threads ?		remify
18533280	11.937232	-7.520612	comment	4.0	12.5	1543240005	10.334243	> Sometimes, the elegant implementation is a function. Not a method. Not a class. Not a framework. Just a function. - John CarmackThis mirrors a discussion I've had with my boss a number of times. Mos...		prossercj
18535993	11.950053	-7.413683	comment	4.0	10.5	1543259799	7.25072	And, shameless plug, if you're interested in seeing what it's like using a functional language at scale for solving real problems, well, you can apply...https://www.janestreet.com/programming/		yminsky
18555116	11.616265	-7.2345023	comment	4.0	13.0	1543435405	8.816975	I was fascinated by Lambda calculus where you could think a number as the times of application of function. That is:Symbol 0 = λs.λz.zSymbol 1 = λs.λz.s(z)Symbol 2 = λs.λz.s(s(z))and so on.Then we can...		mesarvagya
18561734	12.339282	-7.041414	comment	4.0	23.5	1543511331	13.19138	I'll be very sad if this goes the way of Perl 6		rjplatte
18587324	11.934601	-7.601343	comment	4.0	10.5	1543827474	-11.059066	"> If you have a Haskell background, I'm sure you're screaming to yourself ""Lenses! Lenses!"" I actually didn't know about lenses before I made Specter, but they are certainly very similar. I'm not on e..."		thaumasiotes
18515413	11.942614	-7.4050303	story	4.0	63.0	1542965924	7.3434772	Functional Pearl: Enumerating the Rationals [pdf]	https://www.cs.ox.ac.uk/jeremy.gibbons/publications/rationals.pdf	jessup
18587394	11.870135	-7.2078843	comment	4.0	11.0	1543828612	7.753619	Functions are stateless and I believe can be better optimized. Enforcing statelessness is also a win in itself.		cozos
18601289	11.680091	-7.5128574	comment	4.0	15.0	1543943315	9.719629	Take a look at Kotlin or Typescript†. Basically, they decided to fully design the language with support for null-as-option.That means several things:  * T (non-nullable) and T? (nullable) are differen...		dtech
18608886	11.858967	-7.357451	comment	4.0	11.5	1544022931	-6.0285096	Adding FP features to an otherwise-mutable language has always seemed a mixed bag to me. Obviously it’s nice to have those features, but you don’t get the immutability constraint that makes development so much more predictable.		macintux
18623505	11.673171	-7.8376284	comment	4.0	13.5	1544138418	10.228837	I feel like Python is your pepperoni pizza can't go wrong option for almost anything.Go feels similar but younger. I love languages with big standard libraries. Just need their package management stor...		Waterluvian
18624931	11.667468	-7.36435	comment	4.0	21.0	1544153513	8.836046	> They are typed. Weakly/dynamically typed.Unityped, as in, they have only one type. You can assign any type to any variable, so all values have a single type.> Also, division by zero is an runtime op...		naasking
18625032	11.68929	-7.3312907	comment	4.0	16.0	1544155213	-8.738929	This is totally backwards. Typed programming languages don’t exist, as in at runtime it’s just instructions applied to sequences of bits. A type is just a convention about an agreed interpretation of those bits. It’s a temporary fiction that doesn’t exist at runtime.		mlthoughts2018
18639274	11.83773	-7.744464	comment	4.0	11.5	1544329337	10.188	"With all due respect, 166 packages to compile for a 5 line hello-word is so Nodejsy. It is a smell, a red flag.
We should learn more from Go and Erlang.I hope the Tide will do."		throwaway487551
18642303	11.97131	-7.2017617	comment	4.0	17.5	1544379375	9.093602	Doesn't both JS (via Babel) and C# implement asynchronous functions as state machines in a similar fashion?		orf
18646076	11.82248	-7.606719	comment	4.0	12.0	1544428882	10.326912	"I have translated the pretty long Swift code belabored with manual laziness handling into Haskell where lists are inherently lazy:    type BitSequence = [Bool]
    
    allSatisfy :: (BitSequence -> B..."		kccqzy
18653544	11.62468	-7.9340634	comment	4.0	12.5	1544508950	10.206549	This sounds like tooling and formatting consistency versus abstraction consistency. Go isn't great for building powerful abstractions, so at a higher level implementations will trend towards inconsistency, however consistent the low level syntax.		Felz
18669356	12.0096445	-7.5819135	comment	4.0	15.0	1544666705	-10.600586	In my opinion it's honestly the best statically typed general purpose programming language.f# and also Ocaml strike for me the right balance between practicality and correctness (strict by default, no...		Barrin92
18669408	12.090888	-7.4374766	comment	4.0	13.5	1544667434	-10.585671	While those are nice things, they don't really bite me in the C# world.  There's a lot of fuss about it in the F# world, but it really isn't that big of a problem in my experience.  I do like the robustness of it, but in practical terms... it's only a minor point in F#s favor		keithnz
18669462	12.143956	-7.520845	comment	4.0	10.5	1544668594	-10.612296	I've read on HN that F# doesn't get nearly as much attention and support from Microsoft as C# does, to the point where people expressed concern that F# might be put into maintenance mode.Does anyone reading this feel that way, or was it just FUD?		smt88
18669867	12.150621	-7.5211506	comment	4.0	11.0	1544675777	-10.608138	If I want to learn F# is there a good IRC/slack channel I can get on? I'd like recommendations for libraries. I have a project I could throw at it for fun/ learning.P.S.Can someone explain this?    //...		staticassertion
18674353	11.693188	-7.2026896	comment	4.0	10.5	1544723491	-7.157801	and now you are defining you whole class inside that return {}. Do you honestly find this more readable?		21
18679684	11.749651	-7.4540095	comment	4.0	13.0	1544781215	9.747958	My opinion is from the other side of the fence ... type erasure is perceived as a weakness of Java, however I believe it is one of JVM's best features, because it didn't cripple its runtime for other ...		bad_user
18703454	12.1429615	-7.885943	comment	4.0	11.5	1545091610	-3.233394	I've heard many times on HN people bring up category theory and how beneficial it has been to learn it, so I've recently ordered a textbook on it.Can I ask how has it benefited your thinking?I'm curio...		james_s_tayler
18704806	11.994964	-7.7575045	comment	4.0	18.5	1545112650	10.429672	"I really do think Haskell is a wonderful tool, but:""Haskell, at its core, is simple: it is just a polymorphic lambda calculus with lazy evaluation plus algebraic data types and type classes.""In a diff..."		wtracy
18704863	11.926882	-7.682084	comment	4.0	16.0	1545113838	10.410345	I was almost 100% certain it was a joke until I read the paragraph that quote is from.I want to reassure you that most Haskell evangelists (myself included) that say stuff like that usually mean it as...		hardwaresofton
18706156	11.999948	-7.7555585	comment	4.0	13.5	1545138492	10.403018	> Haskell is simpleThat it might be, but it sure as hell isn't easy. Brainfuck is simple, but nobody would choose to write a real project in it.Most programmers struggle trying to understand what a mo...		atilaneves
18705321	11.990776	-7.758228	comment	4.0	11.0	1545123393	10.454311	"That ""explainabrag"" pissed me off too. I feel like that kind of thing is super typical among Haskell bloggers."		pzone
18709297	12.115672	-7.504423	comment	4.0	28.0	1545158738	-10.587871	F# is 3 big things to me:Safer threading with immutabilitySafer programming with null-safetySafer logic with precise domain modelingThe precise domain modeling is the real paradigm shift.The whole poi...		algorithmsRcool
18709374	12.113655	-7.500326	comment	4.0	20.5	1545159233	-10.591958	>I have personally struggled with domain complexity in C# that i was able to model precisely in F# and have it work perfectly on the first try.If you're willing to provide a (simplified) example I would be very interested.		contravariant
18709711	12.114005	-7.498099	comment	4.0	12.0	1545161304	-10.5900755	The only thing I don't like is the DI story presented here and many other F# guides. Having gone down that rabbit hole and using F# in production for 5 years now, I have gone back to classes and inter...		daxfohl
18732342	11.64344	-7.965392	comment	4.0	17.0	1545385604	10.234868	Interesting. You could be right!My experience with Go is very limited, but I tend to see interesting abstractions built with other languages. Ruby, Haskell, Swift, JS, even some Python – I see enginee...		danpalmer
18732445	11.663489	-7.91003	comment	4.0	24.0	1545387327	10.175983	There is no discussion if the language is good, it's already quite convincingly proven it's good. The question was if generics would make the language even better. Some people think that's a no braine...		tinco
18732535	11.713682	-7.87689	comment	4.0	19.0	1545388693	10.201	Oh come on. People are forced to use Javascript, I don't think it would even exist today if it wasn't the only crossbrowser language.Almost no one is forced to use Go, and yet people flock to it. I do...		tinco
18733751	11.718626	-7.0465555	comment	4.0	18.0	1545405272	8.336101	Mostly I agree, but there is one factor that makes C++ (or any native compiled language) better than java for HFT: the ability to lie to the optimizer about what the hot path is.  in HFT you have thou...		bluGill
18733557	11.890044	-7.697014	comment	4.0	10.5	1545403495	0.91733813	As a very long time Haskell user, I wonder how much latency management would be controlling for the lazy evaluation thunks being evaluated at certain deterministic times.In my gut I would not choose H...		SomeHacker44
18671916	11.647013	-7.9767694	story	4.0	7.0	1544705387	-4.160383	Ask HN: Where do you go to request code reviews?		holografix
18741431	12.079432	-7.5190787	comment	4.0	11.0	1545498954	11.871571	If Java were to support to scale/fp-like match statements with case objects and unapply methods, it would probably be good enough to obviate Scala (It would still be distinctly worse though).Pattern m...		mruts
18742854	11.850219	-7.525344	comment	4.0	21.0	1545517725	10.231106	"At first I wondered why he calls the monadic flatmap operation ""for_each"" but it makes sense in that he's actually creating a (lazy) list comprehension DSL here. The code within main() is mostly equiv..."		Sharlin
18759845	12.075905	-7.23029	comment	4.0	15.5	1545785180	10.350809	IMHO the big cultural difference between the sub continent and the US is an emphasis on a particular notion of being “practical” over what I would call a particular notion of being “smart.”I assume yo...		startupdiscuss
18773326	11.961908	-7.5061674	comment	4.0	17.0	1545950803	7.233879	Selling a lot of burgers encompasses much more than making good burgers. By the same token, good products entails much more than making a programming language choice.Functional programming, at its hea...		iamwil
18786924	11.629546	-7.309357	comment	4.0	14.5	1546135585	-8.889677	There is something personally poetic (is that a thing? it's poetic to me, but maybe not to you?) about a C feature I was unaware of despite working in the language for 25 years being yet another way i...		tptacek
18800404	11.671905	-7.1742263	comment	4.0	10.5	1546354676	9.168018	"> Also, once map(), filter() and reduce() are gone, there aren't a whole lot of places where you really need [lambda].By far the most common use of lambda for me is the ""key"" argument for sort() or so..."		avian
18815765	11.982402	-7.736246	comment	4.0	24.0	1546529306	10.414407	Haskell is functionally pure with a syntax that I just can't bring myself to call readable. It's also very complex--which string type do I use? Which prelude? Which compiler extensions? Which build to...		weberc2
18839368	11.782221	-7.3457847	comment	4.0	14.5	1546795608	-8.891005	The fact that it's dynamically typed is also often overlooked, while it's at the top of my deal breaker list.The programming world is strongly moving toward statically typed languages, because today, there's pretty much zero reasons to use a dynamically typed language.		hota_mazi
18843499	11.882044	-7.7178288	comment	4.0	11.5	1546846970	10.407101	I always had a beef with this paper; so many of the issues are much better solved in Haskell, yet he doesn't introduce it directly until he has something to criticize.  Unfortunately the critique reve...		FullyFunctional
18847524	11.678203	-7.8188424	comment	4.0	25.0	1546882587	10.303343	"Heh, I feel like ""someone"" ought to write the Big List of Bad First Projects for This Language, e.g.:Go/Erlang/Elixir: ""Testing"" the concurrency by parallelizing the addition of an array of integers v..."		jerf
18852980	11.937378	-7.6660733	comment	4.0	15.0	1546919429	10.396001	A more syntactically friendly Haskell-like language		wlib
18776671	12.153368	-7.478809	story	4.0	101.0	1546005056	7.3166103	Try F# on WebAssembly	https://forums.websharper.com/blog/86246	sergimansilla
18884297	12.134927	-7.540369	comment	4.0	20.0	1547221778	-10.573892	We are currently rewriting Buckaroo in F# (https://github.com/LoopPerfect/buckaroo/tree/buckaroo-redux ); previous versions were in modern Java. The productivity gains are tremendous... FParsec, async...		adgasf
18904071	11.993755	-7.423181	comment	4.0	19.5	1547482635	-10.579895	"Nice article.F# can be so readable, e.g.:   // WishList -> Async<Reservation>
   let workflow (wishlist: WishList) = async {

      // 1. Find matches for each wish 
       let! matches = 
           ..."		LandR
18927847	11.626595	-7.91638	comment	4.0	10.5	1547692993	9.861383	I was wondering about this, given the examples. AWS's Golang support for Lambda involves including their library and passing your function to a Lambda initializer function. Which I'm sure is all that'...		skywhopper
29682785	11.624929	-7.0565486	comment	4.0	11.5	1640435892	-7.6613193	"I'm surprised to see mutable default values not mentioned. It's bitten me more than once to discover that:    def f(xs = []):
        xs.append(5)
        return xs
    
    print(f())
    print(f())
..."		adenozine
29699061	11.82932	-7.0265956	comment	4.0	28.5	1640577991	8.263122	Which had nothing to do with Java or how it manages memory. You could have the same vuln in NodeJS or Python.		winrid
18893494	11.88733	-7.4113855	story	4.0	54.0	1547330169	7.252881	SSA is Functional Programming (1998) [pdf]	https://www.cs.princeton.edu/~appel/papers/ssafun.pdf	atombender
29701863	12.187034	-7.638642	story	4.0	12.0	1640607327	11.897369	The Scalar Fallacy (2011)	http://observationalepidemiology.blogspot.com/2011/01/scalar-fallacy.html	stared
29804924	11.930232	-7.4565687	comment	4.0	11.0	1641354902	7.319536	"The AdvantagesOfFunctionalProgramming -
https://wiki.c2.com/?AdvantagesOfFunctionalProgramminghas increasingly become to sound hollow or misleading, insofar as the properties and abilities described w..."		Supermancho
29804706	11.822768	-7.186928	comment	4.0	13.0	1641353214	-9.0295315	"The problem is that people try to turn type hints into static types. I got rid of mypy from all of my projects as it provided no value and just created this constant battle of ""making it work"" - a col..."		wraptile
29805500	11.824515	-7.1122656	comment	4.0	11.0	1641360570	-9.072207	I had to do a similar hack recently. The 'zoneinfo' library is available only on Python >=3.9. But the 'backports.zoneinfo' library is available for older Pythons. The recommended way of handling this...		bxparks
29810922	12.272231	-7.0192976	comment	4.0	15.0	1641399607	13.163007	"Readability is really a weak argument.
I've seen a lot of unreadable code written by data scientist in Python. And a lot of readable Perl code. It's not about the language, it's about the best practic..."		_Mask_
29810311	11.85984	-7.231761	comment	4.0	14.0	1641397231	-7.1989646	I've always found `flatMap` to be interesting because it feels like a convenience function, combining .map(fn).flat() into one function.   It's interesting because JS doesn't really have a lot of conv...		Waterluvian
29811305	11.671329	-7.1706643	comment	4.0	10.5	1641401089	9.109609	You could do that, but I’d argue using filter then map is more readable. What do empty arrays have to do with doubling even integers?		niek_pas
29836533	11.605644	-7.2015047	comment	4.0	17.5	1641544280	9.078429	Imho, the language should abstract away the difference between threads and async.		amelius
29853255	11.933993	-7.3753996	comment	4.0	16.5	1641659679	7.017531	Must OOP be shoved down everyone's throat at every turn and opportunity? One of the great things about Lisp is that it's a champion of functional programming, whereas OOP is extremely complicated and ...		Annatar
29872645	12.088234	-7.520003	comment	4.0	12.5	1641809547	11.902278	"I first saw this ""hardcoded"" varargs in Scala e.g. https://www.scala-lang.org/api/2.12.2/scala/Tuple22.html (replace 22 to 1-21). I guess it's platform (JVM) limitation? Newer Java also has something like this, but I can't remember which class."		wiradikusuma
29877258	12.068215	-7.840425	comment	4.0	13.0	1641832138	10.433791	OCaml was single threaded until this or what is this exactly? There is no description of what the PR does which is pretty bad form.		saati
29890918	12.425076	-7.220713	comment	4.0	15.5	1641905619	7.1082973	I find Ruby to be enough of a Smalltalk for my taste. Besides that I see people to stuff with Clojure, such as hot-replacing live code, that I had only seen Smalltalk devs do so far.		cies
29891624	12.245878	-7.291808	comment	4.0	12.0	1641910385	7.0834255	I did smalltalk professionally as my second job out of college, 1995-1997. It was cool learning it, and it definitely gets you into OOP. It also laid the groundwork for realizing that OOP isn't a grea...		gilbetron
29910310	11.916978	-7.2867184	comment	4.0	12.0	1642009815	-10.28996	I can't get behind the idea that a type system is either completely sound or completely useless.Surely preventing 99% of issues (or 90%, or 80%) is good?I'm also not aware of too many real-world insta...		ahuth
29949800	11.7350025	-7.4541655	comment	4.0	19.0	1642277694	-8.755163	You said a lot of stuff, and I disagree with most of it, but I'm open to dialogue.> with almost no one in industry applying these lessonsStraight-up incorrect. Language designers think long and hard a...		dvt
29950138	11.742655	-7.6039796	comment	4.0	14.5	1642280044	10.154336	> Straight-up incorrect. Language designers think long and hard about how typings work in their languages. Rob Pike, Ken Thompson, and Russ Cox deliberated generics for like a decade[1] before finally...		ebingdom
29974658	11.652811	-7.8865094	comment	4.0	18.0	1642476268	10.186981	You know, you hear Java repeat things like that a lot, while Go programs just tend to stay simple and readable. It's either the culture or the language causing the problem. shrug		yencabulator
29998111	11.792787	-7.3696494	comment	4.0	12.5	1642617890	-8.941646	Static languages unfortunately don't save you from that.  You find automatically inferred types, or types that refer to some abstract interface or template-class-mess but you have no idea where the ac...		foxfluff
30001688	12.056964	-7.760312	comment	4.0	13.0	1642633215	10.432697	OCaml is fascinating - it was my first exposure to functional programming through a great class at Harvard. We had a guest lecture from someone at Jane Street that was quite memorable. Although these days I'm uncertain of any large institutions (outside of Jane Street) that actually use OCaml.		synaesthesisx
30008422	12.202713	-7.0624304	comment	4.0	15.5	1642684380	-10.437892	> 1. Avoid EnumsWhat? This is IMO bad advice. Having a sum type is quite handy for general type-checking, at least insofar as the type truly is an enumerated type (i.e. all possible values are known a...		baryphonic
30010017	12.010332	-7.221542	comment	4.0	13.5	1642692419	-10.461265	"After trying enums in TS a long time back I also realized it was best to avoid them. Here is my solution to this:    // filename: role.ts
    export const Role = {
        CUSTOMER: 'customer',
      ..."		joshstrange
30045397	11.646038	-7.932312	comment	4.0	13.0	1642937332	10.250949	> go programmers discover genericsIt kind of was though.It was endless arguments from Go users that generics aren't needed and can be solved through a combination of cut/paste, code generation or simp...		threeseed
30047682	11.87039	-7.040414	comment	4.0	15.0	1642956680	-9.063112	Slightly off-topic, but everyone writing modern Python should be familiar with Pydantic and similar libraries that use type hints for validation and parsing:https://pydantic-docs.helpmanual.io/https:/...		nyellin
30046881	11.66182	-7.140633	comment	4.0	15.5	1642952090	7.8058023	"i am a huge fan of this style:  def foo(obvious_thing:type, *, modifier:type, modifier2:type, …)

Because I find this call incomprehensible:  foo(items, 12, “apple”)

and this immediately better:  foo..."		hprotagonist
30052477	11.721567	-7.4081454	comment	4.0	20.0	1642986781	-8.596016	I had a quick read of the paper and I think I got about 10% of the content - which is better than my usual average. My take-away - linear types allow you to express conditions such as this function mu...		ozmaverick72
30052597	12.10648	-7.595151	comment	4.0	14.5	1642987784	11.890092	"Scala 3 is the only ""functional"" language that made me not feel like an idiot, and it's great for understanding ""Dependent Types"" as a layman.It gives the example of a key in a database, which can ret..."		gavinray
30069755	11.64143	-7.8929434	comment	4.0	15.0	1643101132	10.254359	>Encapsulation, modularization, abstraction - let's not pick nits about the precise meaning of these terms, they are all about the same thing, really: Managing complexity of your own code.The thing is...		usrbinbash
30072318	11.818899	-7.0276213	comment	4.0	12.0	1643122084	8.998539	"I kinda dig the new mapping syntax:    { a:, b: } #=> { a: 1, b: 2 }

JS does it { a, b } and I find it very convenient, because if you code well, you usually have related things with the same name an..."		BiteCode_dev
30097401	11.662048	-7.9654517	comment	4.0	13.5	1643268728	10.226203	Very much required if you want to use relative URL calculations.Stumbled across this in Go yesterdayCompare a relativeUrl ref from 'http://localhost/1.0' vs. 'http://localhost/1.0/'e.g. https://play.golang.com/p/AsUSx6bRWn6		neilwilson
30100107	11.685379	-7.047556	comment	4.0	12.0	1643289110	8.958045	You made two mistakes: You optimise prematurely and your assumption is incorrect.Premature optimisation:In most cases the performance would not matter. Instead of optimising for performance you should...		dandare
30112581	11.675312	-7.1452813	comment	4.0	16.0	1643362811	8.722298	"> Hide internal structure (that ""private"" is the default in C++, Java and Rust just adds to boilerplate; the default case is that you want everything public (unless you like writing trivial getters an..."		karatinversion
30130968	11.653859	-7.081826	comment	4.0	14.0	1643493568	5.132678	"The problem I have with it is that, to me, these are super readable:    x = [ 1, 2, 3 ]
    y = { 'a': 1, 'b': 2 }

Whereas these are not:    x = [1, 2, 3]
    y = {'a': 1, 'b': 2}

To me, declaring i..."		Alex3917
30137830	11.618966	-7.938941	comment	4.0	16.0	1643555505	10.2113495	There's a lot of good work put into this.If it is intended as a tool to help port C++ code out of C++ into Go, it looks very useful.If it is intended as a tool to help Go programmers, it has made a co...		jerf
30140217	11.872174	-7.324277	comment	4.0	11.5	1643570676	7.0848403	I always bring up this paper when I read a post criticizing OOP. It's a bit old but still very relevant and practical. In it the concept of information hiding, closely related to encapsulation, was fi...		tcgv
30154577	12.000509	-7.7503858	comment	4.0	11.0	1643664083	-8.4914665	> Haskell is in the best-of-class category when it comes to documentation. Haskell's type system quickly earns your trust, and once it does, you almost never need to read someone else's code in order ...		dwohnitmok
30172774	11.632338	-7.954462	comment	4.0	14.5	1643768669	10.21415	compact?!- No Safe navigator: require 4 lines of code- No ternary support: require 6 lines of code- No map or filter functions (meaning you have to implement these in like 5-6 lines of code)- Golang relies on built-in generator comments to help alleviate all of the typing.		itake
30197288	11.927112	-7.6583185	comment	4.0	12.5	1643915807	10.411486	> To prove the André-Oort conjecture, Pila needed to show that a non-Shimura variety living inside a Shimura variety doesn’t have a lot of special points.This looks just so advanced to me. Is that how people sound when they talk about programming ?		marto1
30207926	11.633037	-7.8459606	comment	4.0	16.5	1643988296	10.053494	> but (deterministic-select cases) hey are peculiar.It looks for most select blocks in Go code, it doesn't matter whether or not they are non-deterministic or deterministic.But, if the default is dete...		tapirl
30214486	11.764732	-7.2699695	comment	4.0	14.0	1644014695	7.18935	"Elixir (and some other languages as well) solves this with the pipe operator:some_array
|> do_thing()
|> do_another_thing()
|> do_something_else()Even though Elixir is functional and aggressively not ..."		jonnycat
30214216	12.248653	-7.0874515	comment	4.0	18.5	1644013465	12.379115	>some_array.has_my_thing() is better than has_my_thing(some_array). ?one of the reasons i prefer python to ruby. sorted(my_thing) will sort anything that can be sorted. no need for monkey patching -- you just call it and, if it can be sorted, it will be sorted.		fernandotakai
30215399	11.608729	-7.9586234	comment	4.0	17.0	1644019687	10.268219	It was all fun and games until I couldn't compile a go program using the Windows Linux subsystem, showing it's really just a toy.  Too many compatibility issues (go check out their GitHub issues) means I don't want anything to do with it.		metadat
30220951	11.930801	-7.7024555	comment	4.0	21.5	1644069073	10.413757	"This looks pretty awesome, and holds much promise for the future.
Optimal beta reduction has always seemed like something of theoretical interest only, but Victor has been working many years on making..."		tromp
30245834	12.134237	-7.503563	comment	4.0	10.5	1644246597	-10.623479	As someone who wants to learn it and has never used the .NET ecosystem, do I need to become familiar with the standard library and packages through C# first or is it okay if I dive directly into F#?		udbhavs
30256927	11.925014	-7.1797867	comment	4.0	13.5	1644317061	9.10086	"> My manager today was wondering if that's particularly efficient, to which I replied ""he knows how to program"".
> I mean, the guy has a PhD in physics - I bet that what he's doing now isn't even his ..."		nicoburns
30257606	11.930162	-7.7214994	comment	4.0	10.5	1644323070	10.415359	People who work on GHC are good C/C-- programmers working at Microsoft Research (Cambridge) for 60K GBP :)		zerr
30259402	12.010098	-7.63893	comment	4.0	11.5	1644333656	10.518996	My bonafides for the comment I’m about to make: 5 years of professional Scala development at a serious Scala house. I have never done Haskell, but many of my co-workers have, and I had at least one in...		sulam
30283742	11.628523	-7.962231	comment	4.0	12.5	1644482620	10.233827	> Go is a Wirth lineage language too.Is this commonly accepted? I thought it came off the better-C camp, plus GC.		tannhaeuser
30287665	11.782658	-7.2881637	comment	4.0	15.5	1644507537	-8.863298	I don't consider myself very opiniated on tech. But if there is one thing I am adamant about is that strongly typed languages are a must in any project that's meant to grow and last. It's a must to ex...		rafale
30294044	11.924485	-7.338868	comment	4.0	18.0	1644534240	7.086932	"OOP is a great fit for UI frameworks.
OOP is a bad fit for many other things.They guy who hammers nails all day thinks screwdrivers are worthless."		waynecochran
30294885	11.925035	-7.3425984	comment	4.0	28.5	1644538469	7.0913157	I appreciate that info! Its an abstraction that I had used in the past to demonstrate to other engineers that I have thought seemed somewhat useful about OOP, but as I was typing I thought to myself I...		taurath
30295003	11.990372	-7.312867	comment	4.0	13.5	1644539096	7.1057463	> This sort of begs the question: where does classical OOP, the one taught to all undergrad CS majors in programs that use Java or C++, really fit in nowadays?I have no idea.  The smalltalk ideal of O...		reificator
30299081	11.935294	-7.4074497	comment	4.0	10.5	1644570532	7.0808396	"Same, but I can't shake the feeling that I am missing something, as some people are really insistent that FP is the _only_ way forward.
I've had cursory glances at the ideas of FP and find it very dif..."		throwaway77384
30317884	11.705801	-7.9375057	comment	4.0	16.0	1644712773	10.256537	Not the same person but I share his sentiment. Go is terribly designed from a language perspective. It's weird and doesn't follow normal language conventions. The tooling and package manager is terrible.Eventually I think it'll be seen as the next PHP. A language that people love to hate.		serverholic
30357078	11.598656	-7.8493605	comment	4.0	12.0	1644994667	10.088799	I started experimenting with Go-WASM recently and learnt that writing non-blocking code is very crucial, Timer even inside a Goroutine blocks & crashes WASM. Leading me to use unreliable JS timers(alb...		Abishek_Muthian
30360871	12.024383	-7.7992077	comment	4.0	12.5	1645023857	10.3990965	The curse of those who have used and understood Monads is that we see them everywhere. Async, Exceptions, IO, State machines. Everywhere you look you see a monad.		zaphar
30364089	12.138294	-7.224016	comment	4.0	11.0	1645037698	8.534892	Could you possibly post a pseudo-code example of how the above would work with ECS? How do you attach the components to the rock object if not inheritance? Would you just have them be functions that y...		steve_coral
30369563	11.926851	-7.715885	comment	4.0	13.0	1645072694	10.446415	Sure, the error that talks about FlexibleContexts could definitely be improved, but if you do enable that extension, then you get a much better error:  • No instance for (Num [Integer]) arising from a...		josephcsible
30370227	11.948088	-7.755803	comment	4.0	10.5	1645080497	10.406797	It’s too bad that the humorless are downvoting us both.In any event wolf-fencing very much appears to be Haskell specific based on some web searching. Or perhaps it’s a home improvement product? Several search results appear to indicate that[1].[1] https://www.wolfhomeproducts.com/wolfrailing		User23
30379791	11.645408	-7.3448496	comment	4.0	21.0	1645138281	10.013283	I can not wait to never have to type interface{} again.		kbd
30409828	12.253134	-7.579046	comment	4.0	14.0	1645395843	-6.214409	> The greatest scam of Google and Apple is convincing millions of developers to learn Swift and Kotlin to make apps on their stores that can be swiftly (pun intended) removed from their storesI certai...		kevinslashslash
30409902	12.258744	-7.588414	comment	4.0	11.5	1645396395	-11.382391	Dare I say Google embracing and pushing Kotlin on the Android ecosystem was the last good thing I can remember Google doing. The language is such a joy to to work in without the pitfalls that come with Scala		Larrikin
30426531	11.696829	-7.076764	comment	4.0	11.0	1645528967	-7.056261	"    =>(map inc)

    function(b){return function(){function c(k,t){t=a.g?a.g(t):a.call(null,t);return b.h?b.h(k,t):b.call(null,k,t)}function d(k){return b.g?b.g(k):b.call(null,k)}function e(){return b..."		hessammehr
30446371	12.31981	-7.293134	comment	4.0	10.5	1645649976	7.038694	Suggest Pharo, that's the Smalltalk continuation effort that is the most successful.Well updated with traits and other modern paraphernalia.		urthor
30345833	11.7928	-7.386956	story	4.0	36.0	1644929932	8.735844	A library for effect handlers in C++	https://github.com/maciejpirog/cpp-effects	theaeolist
30489413	11.706635	-7.82338	comment	4.0	14.5	1645976469	10.160158	I've never been convinced by DI frameworks. I've always enjoyed the fact that the Go ecosystem leans away from them and I would hope things stay that way. In my experience they just obfuscate what sho...		osclarto
30496118	11.964323	-7.4457045	comment	4.0	12.0	1646019600	7.2689047	The author discusses the sequential leaps towards functional programming: from mixins, to HOCs, to render props, and finally to hooks.I’m very comfortable with hooks, but I’m not much of a functional ...		bigyikes
30502824	11.931038	-7.278481	comment	4.0	11.5	1646071099	9.238854	> I'm trying to wrap my head around async/await and how it works under the hood, be it JavaScript, C# or others.Careful, it doesn't work the same way in every single language that has these keywords.>...		throw_m239339
30503169	11.955871	-7.1503587	comment	4.0	11.0	1646072823	9.151389	Yes, but if I am ok with stopping the world, why doesn't JS allow me to do so? Why do we need to have an entirely seperate api for sync http calls when allowing awaiting inside sync functions would have done the same thing?		cuteboy19
30503338	12.509395	-7.511367	comment	4.0	13.5	1646073636	12.890287	Slightly off topic, how does Erlang handle this because isn’t it know for having extremely fast & cheap process spawning baked in (with isolation).		tiffanyh
30516146	11.765289	-7.329242	comment	4.0	11.0	1646151886	4.1999054	This post spends most of its time explaining types and kinds in general, and very little time explaining much about higher-kinded types or why they're useful - it just kinda rattles off a list of a fe...		wk_end
30519946	11.6608515	-7.927299	comment	4.0	11.5	1646168479	10.204904	When is generics officially coming into Go? I thought it would be in February as promised?		colesantiago
30524537	11.611654	-7.9440055	comment	4.0	11.5	1646204215	10.231708	One major difference that makes Golang lower level is that it compiles to machine code for the target CPU arch/OS instead of bytecode.		MobiusHorizons
30524654	12.0146055	-7.327706	comment	4.0	16.0	1646205166	-9.137069	My post-Smalltalk journeys  of the last 10 years have yet to take me across a language that did functional closures so elegantly, uniformly, consistently, and ubiquitously as Smalltalk.I often find it...		travisgriggs
30524131	11.659608	-7.941338	comment	4.0	27.0	1646199335	10.25173	> Every few years someone gets me to try Go out again and I discover, yet again, that it's still struggling with problems that were solved before it existed. It's a shame that this language has stolen...		throwaway894345
30533598	12.022728	-7.177668	comment	4.0	11.0	1646257391	8.676584	Lombok is indeed a band-aid that replaces IDE-autogenerated code, which in turn is a band-aid for language design choices on the one hand (e.g. equals and hashcode), and accepted Best Practices in Jav...		Cthulhu_
30542510	11.735823	-7.176003	comment	4.0	12.5	1646322632	6.813727	Why wrapped in a class? Seems entirely redundant or am I missing something?		RedShift1
30568285	11.610706	-7.2300406	comment	4.0	11.0	1646493690	5.046856	I'm not sure I understand why dynamic programming wouldn't work (and the author explicitly mentioned Knuth). Tex's main job is literally doing line breaks, which is the exact same problem being tackle...		svalorzen
30578367	11.750135	-7.771932	comment	4.0	23.0	1646582140	10.253281	This is where I differ. I think the Python/JS/Go crew gets you stuff that is built poorly and becomes expensive to maintain.I much prefer the JVM and ASP.NET crew because they are 9-5 programmers, the...		jpgvm
30584234	11.638133	-7.9590235	comment	4.0	11.5	1646627453	10.249485	People who prefer golang use it _because_ it is verbose. Nothing is implicit and that makes good easy to read.		mohanmcgeek
30584420	11.947372	-7.69475	comment	4.0	15.5	1646629656	10.398481	I don't see why I would ever want to do the first one in real life, when exceptions exist.I'm honestly not even sure what function composition is, or why you would compose two functions instead of jus...		eternityforest
30617582	12.224185	-7.495897	comment	4.0	19.5	1646847627	-11.396167	Interesting.From an outside perspective, I had the impression Java devs would migrate to Kotlin.		k__
30622792	11.638996	-7.054822	comment	4.0	15.0	1646881573	8.916844	"I very recently learned about dict().setdefault()For instance:  def myfunc(**kwargs):
    # we need to be sure kwargs has ['foo'] set, with 'bar' as the default: 
    kwargs['foo'] = kwargs.get('foo', 'bar')


We could write that this way:  def myfunc(**kwargs):
    kwargs.setdefault('foo', 'bar')"		MPSimmons
30623762	11.624894	-7.136298	comment	4.0	11.0	1646893496	9.337192	You could be me. Exasperating for someone coming from C/Python/Lisp/otherlambda makes lambdas but not really because you need `call` so you need to know they're a lambda. Ah yeah Proc a bit like lambda but also not really. And not until version 2.blah....Aaargh!		emmelaich
30513940	12.182604	-7.2965326	story	4.0	85.0	1646142056	7.0638766	Functional programming patterns in Smalltalk	https://blog.wilcoxd.com/2022/02/21/Functional-Programming-Patterns-In-Smalltalk/	mpweiher
30628187	11.763933	-7.3680096	comment	4.0	11.5	1646927155	-8.837294	I always say that Types are not there for the truly expert programmer.  They are there for the rest of us.  It's a lot easier to pick up code and understand it when you at least have an inkling as to ...		kemiller2002
30653269	11.80167	-7.1361394	comment	4.0	11.5	1647107780	5.0225673	In a similar topic of books about system design, someone on HN recommended A Pattern Language and The Timeless Way of Building by Christopher Alexander et. al.They're not about designing distributed s...		electrondood
30656335	11.636233	-7.8735666	comment	4.0	11.5	1647129288	10.217999	"Go and .Net languages aren't in the same space unless you can build native static binaries with .Net tools.Unless and until the ""installation strategy"" for a .Net program is ""copy the binary to the ta..."		msla
30664529	11.659132	-7.8524013	comment	4.0	14.0	1647197675	10.225046	"Luciano Ramalho in his book ""Fluent Python"" mentioned that some (most?) of the GoF patterns are unneeded in a dynamic language like Python.  I see [0] he is favorable to this site's author, so it is probably worth a look.[0] https://twitter.com/ramalhoorg/status/960746929025142784?s=2..."		hcrisp
30664785	11.786991	-7.0822144	comment	4.0	11.0	1647199295	5.2052884	I feel a bit contrarian about design pattern lists.  These always seem to contain a list of solutions and after some fancy gymnastics, a list of potential problems they might solve. I feel it might be...		chapium
30689120	11.619034	-7.9626527	comment	4.0	13.5	1647369233	10.247717	> So, for those of you who are willing to explore the part of this that goes beyond a simple rational analysis and criticism of language design, whats bugging you?I think the reason Go gets a lot of c...		didibus
30689276	11.668707	-7.6932673	comment	4.0	30.5	1647369924	10.204636	Great to see this!Generics will drastically improve datastructure libraries.That said, for people worrying about overcomplication, fortunately methods can't have type parameters. That means ergonomic ...		cube2222
30688607	11.594499	-7.810825	comment	4.0	17.5	1647367069	10.171884	> Generics will be helpful for some, I'm sure, but my reading of the winds is that people will find other idiosyncracies of Go to latch onto and complain about. It seems to me the next object of hatre...		throwaway894345
30690357	11.640766	-7.9210143	comment	4.0	10.5	1647373158	10.218107	> Existing libraries resorted to code generation a lot.guess what generics is in a lot of languages?  code generation!  the files just aren't saved to disk.IIRC on a podcast I seem to recall hearing t...		naikrovek
30693065	11.660565	-7.9218736	comment	4.0	32.0	1647385182	10.26626	Disclaimer: I'm extremely happy that generics are coming to Go.> I wish I understood how people can say 'this will result in so much more weird boilerplate garbage code'It's pretty simple: there's a l...		dimgl
16202294	12.141099	-7.0679383	comment	4.0	10.5	1516602197	-10.348514	(ง'̀-'́)งStatic typing is useful in large codebases at big companies because it forces you to communicate your intentions clearly. It's also useful in large OSS projects because it allows your IDE to ...		sillysaurus3
16209109	11.703976	-7.6676702	comment	4.0	10.5	1516663316	10.208903	"What's the advantage of the term ""isomorphic"" in contrast to ""full stack framework""? I acknowledge that, using go, this is another paradigm in contrast to what people call a ""framework"". But it feels like inventing cool terms."		ktpsns
16232555	11.886931	-7.1696954	comment	4.0	12.5	1516900970	9.15032	JS is a mess, but async messes aren't JS's fault.  Async is hard, but also everything just has to be async -- there's no way around this really.  If you write sync code and later you need it to be asy...		cryptonector
16246350	11.7767515	-7.1590014	comment	4.0	12.5	1517063823	-9.039109	"I think the closest thing to ""python with types"" is probably Julia: 
https://julialang.org/I think the efforts of adding type/type hints to python are interesting - but there's a tension between ""weee..."		e12e
16265217	11.859293	-7.5945854	comment	4.0	18.5	1517320222	12.819962	Hi VP of Engineering at Wallaroo Labs here.We put a lot of thought and experimentation into our decision to use Pony. It wasn't a decision we made lightly.I wrote a post a few months back that covers that decision:https://blog.wallaroolabs.com/2017/10/why-we-used-pony-to-wr...		spooneybarger
16288283	11.950875	-7.14951	comment	4.0	12.0	1517543725	9.147306	> After many years of wrangling FRP my biggest learned lesson is certainly this: not everything is a stream! You need to be able to mix streams (also called events), which embody push semantics and be...		naasking
16295167	11.840065	-7.313746	comment	4.0	11.5	1517615215	-6.1845865	> - Little to no real innovation in the last yearsYou are sooooooooooo wrong it isn't even funny. I'm stuck coding to Ruby 2.2 and Ruby 2.5 is looking more and more like a totally different world.> - ...		tomc1985
16305578	11.63181	-7.0295267	comment	4.0	29.0	1517787295	8.936451	Dicts are UNORDERED associative containers. If youre depending your app on implementation defined behavior, that's on your developpers shoulders. Stuff like that shouldn't pass code review		VHRanger
16308794	11.831788	-7.551731	comment	4.0	20.5	1517839848	-10.397307	Not sure if I exactly follow, but this is an implementation of Monoid in C#.  The interface can be seen as the type-class definition.  The structs are the equivalent of class instances.If you look at ...		louthy
16309009	11.994615	-7.7405767	comment	4.0	12.5	1517841886	10.412214	Stuff like this makes me wonder why: a) Haskell isn't used more widely b) isn't taught in school more. It seems it's a language that's intellectually stimulating and shows how much a good language design can help with programing work.		maxxxxx
16335072	12.295163	-7.6473336	comment	4.0	10.5	1518119761	10.370732	FYI for anyone who was fuzzy on the license/patent situation with the project:https://github.com/facebook/reason/commit/e8fb73ec6ff7c31367...(As of 12/2017, relicensed to straight MIT from BSD+patent....		ballenf
16337724	11.681765	-7.9350247	comment	4.0	28.5	1518147406	10.20018	The biggest difference I see: the author immediately reached for a framework instead of checking out the standard library.In Node, the standard library is effectively non-existent, so Node devs get tr...		marcus_holmes
16337928	11.638315	-7.9513173	comment	4.0	19.0	1518151144	10.208141	>In Golang, dependencies are minimised. Everyone tries to stick to the standard library as much as possible.i don't understand this. yes net/http is nice but there's no router, there's no orm (yes i k...		mlevental
16337983	11.708438	-7.9047728	comment	4.0	11.5	1518152234	10.096023	"You don't need a router (especially for an SPA with client-side routing). If you've got less than 20 or so routes, then a big switch statement is all the routing you need. Learning to write ""proper"" l..."		marcus_holmes
16348682	12.001222	-7.7588377	comment	4.0	16.0	1518287210	10.418749	Learning Haskell is one of those two weeks things that’s been on my interests list for a long time, but will likely stay there for awhile yet.Though, if anyone has got any high-quality quick resources handy that’d be appreciated!		dvddgld
16349431	11.988944	-7.7094755	comment	4.0	11.0	1518294918	-10.299409	A lot of people use Atom, but I think emacs + intero is currently the best Haskell tooling. I use it with spacemacs. Has everything I would need from an IDE, including highlighting errors on the fly, ...		Cieplak
16351750	11.790588	-7.1588826	comment	4.0	18.5	1518336969	5.1227655	Design patterns feel completely obsolete now.Not only does no-one at all talk about them, most of the design patterns themselves were harmful and are now completely unnecessary due to functional langu...		mattmanser
16351796	11.791665	-7.1497016	comment	4.0	12.0	1518338303	7.388773	Could you please elaborate that? I still see patterns like Builders, Factories, Singletons and even sometimes a Strategy in Java. Why do you think they are bad? What are the functional alternatives?		fdw
16384281	11.866648	-7.145705	comment	4.0	10.5	1518705522	8.846732	I’m confused by “listing 5” that states private methods and variables are accessible without reflection. The example it gives shows a static main within the same class that declared private.That’s the...		mav3r1ck
16311887	11.846837	-7.8368044	story	4.0	14.0	1517862866	10.3955555	Why Ruby on Rails Applications Should Consider Adding Go to Their Stack	https://sphereinc.com/why-ruby-on-rails-applications-should-consider-adding-go-to-their-stack/	dcu
16252737	11.873539	-7.6579504	story	4.0	59.0	1517165835	10.378013	Making GHC an order of magnitude faster with one neat trick	https://pixel-druid.com/blog/making-ghc-an-order-of-magnitude-faster-with-one-neat-trick/	bollu
16386099	12.031777	-7.201852	comment	4.0	11.5	1518717828	9.156557	This may get me in hot water here but...I started working with JS promises specifically when they were barely available in a beta runtime. It took me over a year of working with them to really get a f...		IIIIIIIIIIIIIII
16396432	11.652579	-7.9757504	comment	4.0	18.5	1518815979	10.254291	> for me what is great about Go is it removes BS and incidental complexity, & is just really well-designed and pleasant to work with. i happily choose it for personal projects.Go was the first compile...		adwhit
16407950	12.2619	-7.2923546	comment	4.0	16.5	1518983556	7.0210056	As much as I like Lisp or Smalltalk, I cannot help but wonder if they are really great in the large.  Smalltalk has a pattern called Double Dispatch that makes sense but seems to tightly couple the cl...		protomyth
16409927	11.658027	-7.9710593	comment	4.0	11.0	1519001297	10.24178	My biggest issue as well. People seem to be drawn to creating a DSL for their problem set, and then programming in that. I've thought of Go as the Anti Lisp, in that there will be NONE OF THOSE SHENAN...		zabuni
16411015	12.431589	-7.837307	comment	4.0	13.0	1519019301	-11.114957	"Boilerplate can happen at a higher level than just writing down type names.A good example is ""variadic"" functions. Consider computing the max of three numbers. Clojure's `max` takes any number of argu..."		millstone
16413255	12.020164	-7.532884	comment	4.0	11.5	1519052661	7.264956	"I always read about those nice functional languages, but when I try to learn them myself I struggle pretty hard.Can anybody point me to some small (5k LOC maybe) project on github that solves some ""re..."		Double_a_92
16414479	12.173924	-7.044859	comment	4.0	11.5	1519063706	-10.388951	It's not: the TypeScript type system is unsound (accepts code that violates it), and there are no runtime checks, so it doesn't actually guarantee anything: a TypeScript variable may in fact contain a...		devit
16416371	11.714575	-7.432441	comment	4.0	11.5	1519080321	-8.685526	That complicated type system w/ type inference does come with it's own costs, usually bad compile speed issues.  It's what I've noticed when looking at languages like swift, rust, scala & haskell.I'm ...		woolvalley
16419901	11.916792	-7.558084	comment	4.0	11.0	1519130745	7.6464963	I really like D's approach instead. A function declared pure can have no side effects but it can do whatever kind of mess it wants within its own code. It can have loops, assignments, reassignments, m...		jordigh
16430124	11.862393	-7.60493	comment	4.0	12.0	1519227130	10.35824	This is a good and well-written article, but it's worth noting that  I think many of the ideas here cut slightly against the grain of current Haskell best practices. Which is not to say any specific p...		KirinDave
16445779	11.950522	-7.731507	comment	4.0	14.5	1519387137	10.386636	"I'd like to point out that do-notation in Haskell is a syntax sugar for something nasty.Let's look at the example:    do
      a <- getData
      b <- getMoreData a
      c <- getMoreData b
      d <-..."		m1el
16446513	11.931836	-7.7124405	comment	4.0	15.0	1519396774	10.381705	One thing this article doesn't really make clear is how someone reading the code can actually determine which of these things is being done. Code that looks the same but magically does something diffe...		xenomachina
16447757	12.128515	-7.566862	comment	4.0	10.5	1519406910	11.912397	I worked on a Scala system with two rookie Scala programmers who had been taught that `for` expressions were a simple and easy way of composing futures, because it was the monadic way.  The code looke...		dkarl
16446696	11.923032	-7.756349	comment	4.0	12.0	1519398514	-13.187806	"What happens when you mix what <- means :do  a <- getData // this is a awaiting a future

  b <- getMoreData a // this is looping a list

  c <- getMoreData2 b // this is null checking

  d <- getEvenMoreData a c // this is awaiting another future
  
  print d

Monads' hell, isn't it ?"		julienfr112
16460901	12.066092	-7.801688	comment	4.0	15.0	1519589384	10.438184	"I know he said ""All the code here should be translatable to OCaml if that’s more your taste"" but I have read multiple examples about the power of ML modules and the code always seems to be in SML and not OCaml. Why is that?"		kuwze
16469216	12.25035	-7.4231257	comment	4.0	11.5	1519681262	-10.122779	Erlang, which traditionally deals with concurrency and parsing protocol has had a built-in standard FSM module for a long while:http://learnyousomeerlang.com/finite-state-machinesIt even got a recent ...		rdtsc
16469900	11.664621	-7.8671045	comment	4.0	14.5	1519687362	10.240774	Go's syntax and the patterns it encourages are both tailored to the harsh reality that code is read a lot more than it's written. It turns out that the verbosity of, for example, Go's error handling i...		maxaf
16496247	11.661361	-7.3690834	comment	4.0	11.0	1519937744	-8.707161	"""Type I"" and ""Type II"" errors are some of the stupidest and most obfuscatory academic terminology ever invented, and (as an academic) I absolutely refuse to make the effort to learn which way round th..."		gmac
16502206	11.647106	-7.96614	comment	4.0	12.0	1520004766	10.220961	I feel like go-kit is quite antithetical to the Go mindset...it presents a lossy abstraction as a means of future-proofing against eventualities that will almost certainly never be encounteredto be ho...		junkscience2017
16515988	11.648723	-7.253659	comment	4.0	15.0	1520190328	-8.737456	"I agree. It seems very clear that code readability is reduced by var-like type hiding. When I'm doing code review and I see ""var address = contract.getAddress();"" what is the type of that variable? I have no idea."		matt2000
16517835	11.690221	-7.338832	comment	4.0	16.0	1520210594	-6.943312	See the example ofAccount account = customer.GetAccount();List<Transaction> transactions = account.GetTransactions();Have I saved you any extra-effort here by specifying the types? You have no idea wh...		trixie_
16518864	11.778238	-7.120782	comment	4.0	12.5	1520226228	-7.9404774	while I agree with you I think it is also common for authors of articles on design patterns to talk up the design pattern as something new, and give it a horribly abstract name like 'dependency inject...		itronitron
16519655	11.731364	-7.029849	comment	4.0	14.0	1520239314	-8.063678	>Of all the patterns you could pick on, you pick on one of the most useful in modern OOP; however, I think you actually intend on picking on dependency inversion, not injection. Dependency injection i...		crimsonalucard
16522556	11.958731	-7.5955844	comment	4.0	14.5	1520270394	12.826059	I was hoping to see a mention of Pony which looks like a promising language based on the actor model.		deckarep
16525671	11.754321	-7.485214	comment	4.0	35.5	1520293784	9.789915	">  Ultimately, an erasure model of generics would have been adopted, as for Java, since the CLR team would never have pursued a in-the-VM generics design without external help.Can someone explain why ""in-the-VM"" generics design is better than the erasure model of Java?"		krat0sprakhar
16405136	11.995282	-7.7599306	story	4.0	75.0	1518944975	10.418763	Monadic I/O and Unix shell programming (2001)	http://okmij.org/ftp/Computation/monadic-shell.html	DyslexicAtheist
16471372	11.902232	-7.4138126	story	4.0	174.0	1519710873	7.2547874	Introduction to Functional Programming (1988) [pdf]	http://usi-pl.github.io/lc/sp-2015/doc/Bird_Wadler.%20Introduction%20to%20Functional%20Programming.1ed.pdf	noch
16546242	12.258638	-7.5676765	comment	4.0	12.0	1520532390	-11.400611	I'm surprised that Kotlin's rating is so low and PHP and VB still so high.		pier25
16548054	11.602662	-7.8296127	comment	4.0	10.5	1520546246	9.93381	IMO, the goroutine model has the same synchronization challenges as multithreaded programming. For network code that is io bound, I find async/await much cleaner.		woah
16564516	11.939309	-7.469594	comment	4.0	16.0	1520798763	7.23243	This article brings up an interesting question. Since much of programming is based on simply making something easier for humans to read, create and design with, is there a trade off with functional pr...		RobertRoberts
16564965	11.612475	-7.9246774	comment	4.0	14.0	1520805176	10.2036295	"It’s considered idiomatic in Go to use very short variable names [1], which seems masochistic to me. 
Every time I look at Go code, it’s like I’m back in high school using Borland Turbo C all over again.[1] https://github.com/golang/go/wiki/CodeReviewComments#variabl..."		adamkl
16575567	11.7202635	-7.415206	comment	4.0	14.5	1520944224	-6.153918	But most of the functional languages in their list, are also new....and some of the ones on the trendy list are functional (Rust)		gameswithgo
16575688	12.107133	-7.866592	comment	4.0	10.5	1520945563	10.452704	What do people that use Ocaml all day actually do?		dep_b
16607011	11.914554	-7.3059425	comment	4.0	17.5	1521296010	7.0537834	"> The conceptual purist perspective:
> 
> The notion of object oriented programming is completely misunderstood. It's not about objects and classes, it's all about messages. - Alan Kay
>Given that Ala..."		Ace17
16624541	11.725246	-7.296347	comment	4.0	19.0	1521503333	-6.219555	Sometimes you don’t know what the implementation will be yet, and writing a bunch of interfaces out can help you discover what it should be, then you start working it out with interfaces gradually giv...		seanmcdirmid
16624968	11.700175	-7.188021	comment	4.0	13.0	1521507456	7.556028	I have only seen abstract data types used to describe stacks and queues, and never in the context of a larger design where the underlying implementations weren’t data structures but objects. Do you have any good examples?		seanmcdirmid
16627465	11.663511	-7.398264	comment	4.0	11.0	1521544031	-8.024376	> That is the biggest problem with fluent interfaces—they force objects to be huge.Only if your language doesn't support adding methods to types after the fact, like C# extension methods, Rust traits, or Scala implicits.		Sharlin
16628987	12.376882	-7.6606927	comment	4.0	22.0	1521557106	-10.981736	Javascript and Python are very popular dynamic languages, this doesn't make them good dynamic languages.In particular OOP is very much helped by static types.Clojure would a better example of a dynami...		joncampbelldev
16635390	11.820947	-7.336665	comment	4.0	11.5	1521605389	-8.868656	There are a lot of smart, experienced, thoughtful developers who know from experience that they are more productive using types. And there are smart, experienced, thoughtful developers who know from e...		mbrodersen
16636806	11.745569	-7.2720675	comment	4.0	11.0	1521628200	11.903814	Besides the 6 extra chars, the difference between “final var foo = ...” and “val foo = ...”?		koolba
16636834	11.658785	-7.103284	comment	4.0	10.5	1521628469	9.005504	Can we expect that kind of horror to fade away as Java evolves?In the .Net world there's the ThreadPool class to manage the single process-wide thread-pool, and the Task class to enqueue and orchestra...		MaxBarraclough
16653186	11.77988	-7.7059827	comment	4.0	11.0	1521756714	10.180342	Congratulations on open sourcing this. It looks great. Is there a reason you went with Node.js instead of something like Go? As a sysadmin, I personally hate having to deal with dependencies from tools built in non-compiled languages like Python, Node and Ruby.		jetblackio
16548389	11.592683	-7.91995	story	4.0	113.0	1520548981	10.201684	Primer on Go Assembly	https://github.com/teh-cmc/go-internals/blob/master/chapter1_assembly_primer/README.md	blacksmythe
16706351	11.608525	-7.885871	comment	4.0	11.5	1522325893	10.0627365	The problem with that approach in Go is that BEAM embraces the shared-nothing approach, and the Go runtime is quite promiscuous about sharing mutable data. I am afraid that introducing non-determinist...		dmytrish
16719474	12.269434	-7.020045	comment	4.0	18.0	1522441001	13.162909	"Agreed. Of all the things one could complain about in Perl, ""noisy"" syntax is among the dumbest and most superficial (but, among the most common).An informed rant about Perl might include these two fu..."		SwellJoe
16755681	12.275653	-7.298053	comment	4.0	29.0	1522856024	7.113125	Even if you are not going to develop any major apps in Smalltalk, its a language worth learning. Teaches you a lot about OO programming		jayonsoftware
16756303	12.189117	-7.238447	comment	4.0	13.5	1522859387	8.178787	"I am at an early stage startup which is using Java (and Kotlin) on the server-side. There are various reasons for this, most of them pragmatic, but also some technical ones.
Pragmatic reasons:- Many e..."		ganonm
16757485	12.259167	-7.295387	comment	4.0	10.5	1522866328	7.122557	I am well aware of that as I had my own trouble learning Smalltalk. Yet in hindsight I like the clean design of the language.Nevertheless, I find the argument on their website kinda odd and a bit conf...		JepZ
16778433	11.661051	-7.2942324	comment	4.0	10.5	1523057613	8.966694	I don't know - that sounds more like an implementation detail available to both. Obviously if you modify the first element of a value-type list, it's not going to copy the rest.Persistent data structu...		millstone
16780250	12.149494	-7.076595	comment	4.0	23.5	1523099078	-10.3717575	There are basically two important results for type systems, soundndess and completeness.Soundness means that every program that typechecks is valid. Completeness means that every valid program can be ...		Tarean
16807133	11.640875	-7.9669027	comment	4.0	10.5	1523407828	10.222699	what did the Go solution replace? I only read about DB changes, and cannot draw any conclusions.		sankyo
16721044	11.689336	-7.2623625	story	4.0	114.0	1522458318	-8.771613	A lambda calculus for quantum computation	http://www.het.brown.edu/people/andre/qlambda/index.html	jessup
16809118	12.133028	-7.8675313	story	4.0	23.0	1523435408	-3.248857	VCS based on categorical theory of patches (2017)	https://jneem.github.io/merging/	qrv3w
16835052	11.596992	-7.908272	comment	4.0	19.0	1523665298	10.15948	Will the binaries be compiled for size optimization, or will they be the same size as usual golang bins?Go binaries, being static and embedding the whole go runtime, tend to be quite big. Now, I don't...		oelmekki
16837553	11.8657875	-7.3424683	comment	4.0	11.0	1523717718	-8.89882	> Making a large refactor without types is the wild west. Types help provide structure/understanding about the data flowing through your system.If you’re working on a large, unstructured project that ...		baron816
16868523	11.768683	-7.3545613	comment	4.0	20.0	1524068006	-8.893337	Dynamic and static languages are fundamentally different. There is no more or less.I've tried to elaborate here why annotating variables with type doesn't make a dynamic language static:https://medium...		jernfrost
16868980	11.817341	-7.2839828	comment	4.0	15.5	1524071039	-6.0436397	Is immutability of a contract not the entire point? What security does a decentralized smart contract offer if its implementation can be totally swapped out?		dmart
16879997	11.949127	-7.7109613	comment	4.0	43.5	1524170772	10.389559	> Still, I wish I could see more info on this. At what point does the additional cognitive burden of advanced type system features become a worthwhile tradeoff for program correctness?As a professiona...		danharaj
16880252	12.01983	-7.7719917	comment	4.0	15.0	1524172684	10.412838	>  monad transformers (the promise of aspect oriented programming actually realized)I hardly see any overlap between these two concepts.AOP is about cross cutting concerns and being able easily insert...		hota_mazi
16884377	12.2609005	-7.6233187	comment	4.0	14.0	1524229328	11.934224	I don't think many companies are betting on Scala anymore.  F# is just as irrelevant in the grand scheme of things.Let's face it, Kotlin hurts Scala adoption.		Bizarro
16886285	12.239895	-7.65355	comment	4.0	19.0	1524242403	11.938885	The reality is that a language lives or dies by its ecosystem - particularly when it comes to a language like Scala that's in a tightly symbiotic relationship with its IDEs (the next time someone trie...		lmm
16896712	11.696622	-7.3828926	comment	4.0	11.0	1524412741	-8.764918	"I've heard this term ""unityped"", but i'd always written it off as a politically correct way of saying ""untyped"". Is there actually a worthwhile argument for it?Having thought about it for a minute or ..."		twic
16914478	12.1585045	-7.0275683	comment	4.0	12.0	1524589713	9.034706	Good to see that they are adding promisified versions of more core function like fs. It makes things even simpler for new users especially with async/await support.I really wish they would add a promi...		talawahdotnet
16947344	11.6762495	-7.3454576	comment	4.0	11.0	1524918708	-8.807883	I see this an issue of typing. Programs use integers in many different kinds of ways, and if you have a function that accepts an integer as an argument, neither static nor dynamic type checking will c...		peterkelly
16953007	12.50595	-7.0751863	comment	4.0	12.0	1525023789	12.397769	"Rubies magic evaporated when I realized that its logic is unintuitive / broken:```
puts true and not true  
>>> true  
x = true and false  
>>> true  
if 0; puts 'true';end
```breaking backwards compatibility with every rails upgrade didn't help.Similar bad behaviour in kotlin"		singularity2001
16855559	11.965085	-7.595998	story	4.0	1.0	1523940656	10.44305	Ask HN: A month to learn a new programming language		mmisu
16973546	11.7802	-7.3645234	comment	4.0	13.0	1525227362	-8.533926	"For those who want to grok lambda calculus, I would highly recommend ""An Introduction to Functional Programming Through Lambda Calculus"" book by Greg Michaelson[0]. After going through the book, I cou..."		e19293001
16979125	11.7136345	-7.61335	comment	4.0	14.5	1525281787	10.166555	For some use cases, Go might be a good alternative to Python. It's performant, yet simple and readable and it has a great ecosystem.		julvo
17048631	11.807302	-7.1205297	comment	4.0	14.0	1526056026	-9.065862	"I use mypy[0] for PEP-484 type checking on a regular basis in large projects.
PyCharm[1] supports PEP-484 type checking as well and displays errors in the editor.--[0] - http://mypy-lang.org/[1] - https://www.jetbrains.com/pycharm/"		okl
17048928	11.83433	-7.1730013	comment	4.0	11.0	1526058022	-8.969435	PEP-484 Type Hints are for Python 3.5+, sorry if you are running on Python 2.x like majority of the Google python codebase does.Update: for the downvoters, the PEP listed the python version for 3.5 he...		devy
17049089	11.875701	-7.2588034	comment	4.0	15.5	1526058962	-8.956469	IMO it’s that people coming from static languages to dynamic languages want them.I honestly can’t think of anybody in my career who’s been comfortable with dynamic languages that had a desire to move ...		brightball
17049677	11.769554	-7.364175	comment	4.0	21.5	1526063179	-8.914973	That's often a good direction.When developing, you don't necessarily know about your types yet. And you might not even want to think about them. It's easier to shove in assumptions because things will...		yason
17049954	11.744217	-7.3854938	comment	4.0	13.0	1526065092	-8.908222	Python is a very good language for academic use. It is a more featureful FOSS system that can be used for RAD or matlab like purposes. Lack of types is not a serious problem for small codebases. But w...		fithisux
17050775	11.720134	-7.2444506	comment	4.0	14.0	1526072469	-8.855231	It's just as possible to have huge, monolithic, and highly brittle projects written in languages with stronger typing support.The only difference is that you get to eliminate a class of trivial annoyances.		duggan
17056255	12.065752	-7.550912	comment	4.0	14.5	1526162800	11.882695	"Something that I enjoy very much in Scala is sealed traits + case classes.  sealed trait Food
  case class FishTaco(size: FishSize) extends Food
  case class Burger(numPatties: Int) extends Food
  cas..."		amzans
17061239	12.063693	-7.136499	comment	4.0	16.0	1526248487	8.173453	Those changes seem to look like a completely new language, cross of Java/Scala/Swift - why don't they call differently, like Jalaft? The main reason to use Java was its backward compatibility. If I needed to learn a new language every 6 months, I'd learn another one to be honest.		bitL
17062026	11.69116	-7.8700733	comment	4.0	22.5	1526261077	10.2329445	It feels like a slight failure that things like this are necessary, especially for a new language.As a Python developer, I am no stranger to slightly ridiculous packaging / environment woes. However G...		KyeRussell
17062338	11.655085	-7.9388857	comment	4.0	10.5	1526266370	10.195226	`dep` is actually a good tool and suppose to be the official tool. But out of no reason, `vgo` came out and said to be deprecating `dep`. I don't really understand how the Go team make decisions.		ospider
17081084	11.602101	-7.872888	comment	4.0	14.5	1526463608	10.112606	Nothing in these results should really surprise anyone. Go is a good tool for writing networking services, but it is not (and does not intend to be) a systems language.For another perspective, look at Go versus Python: https://benchmarksgame-team.pages.debian.net/benchmarksgame/...		cmyr
17100723	11.612514	-7.8789735	comment	4.0	15.5	1526645145	6.1978817	As this seems to be a beginner project to learn here's some thoughts on the code:1) You should really not build your json by manually building the string. That's very error prone and hard to extend.  ...		dewey
17112976	11.701977	-7.6757765	comment	4.0	15.0	1526828306	-7.1389403	The fastest Go JSON parser I know of is https://github.com/buger/jsonparser.  I've used that one in production quite successfully.I don't see that in the comparative benchmarks for Gojay.		nieksand
17113190	11.65497	-7.744118	comment	4.0	21.5	1526830650	-7.079833	Performance is a real issue for Go's standard JSON, but this is a lot of extra boilerplate code to have to write (I'd probably codegen most of this if I had to), so I'd assume the reasonable strategy would be to implement with encoding/json, profile, and then just GoJay the hotspots.		tptacek
17113802	11.628682	-7.935411	comment	4.0	13.0	1526837050	10.212664	If you want to code in a language with macros, pick a language with macros. They tend not to look like Go (or C, or C++), because part of what makes macros effective is that coding in those languages ...		tptacek
17114769	11.915457	-7.7233586	comment	4.0	11.0	1526850994	10.433065	It takes an insane amount of time to compile ghc. I can't stand apps that use it because of that. Could take hours on some machines, would have considered riding on that bandwagon if it wasn't for that limitation.		badrabbit
17114998	11.650893	-7.968301	comment	4.0	16.0	1526853833	10.24582	The author notes the success of Go. Go's developers knew when to stop. Go is a mediocre language, but it has all the parts needed for server-side software. That's a big market.I suspect that part of t...		Animats
17114900	11.996194	-7.762368	comment	4.0	11.5	1526852380	10.422561	From my own experience, Haskell is hard to learn. I have no grounding in maths, but that hasn't stopped me learning most languages. It's a pretty massive barrier to Haskell though, and I find that a l...		robotmay
17129710	11.876244	-7.317179	comment	4.0	12.5	1527025826	7.01128	How about: if you're peddling software design advice, take some time to make (or find) a realistic example so I don't have to imagine so hard.Somewhere around 1989 I swore that the next author of an O...		mikestew
17137626	12.219224	-7.550057	comment	4.0	12.0	1527105434	-11.378502	"I'm unfamiliar with Kotlin in detail. Can you explain ""Functions are first-class (you can pass functions to functions)""? Are they more powerful than Java's lambdas?"		kjeetgill
17137836	11.958368	-7.520826	comment	4.0	13.0	1527106810	9.715577	"Java version in the article:    public int parseAndInc(String number) {
        return Optional.ofNullable(number)
                   .map(Integer::parseInt)
                   .map(it -> it + 1)
    ..."		V-2
17138234	12.1428585	-7.5123544	comment	4.0	14.0	1527109220	-11.4004755	"""Kotlin changed the extends keyword into the : operator, which is already used to separate variable name from its type. Back to C++ syntax? For me it’s confusing.""Not only C++; C# also. It's not very ..."		V-2
17138798	12.054245	-7.562663	comment	4.0	17.0	1527113129	-11.341056	At the concrete/immediate level, a nice way to do error handling when you want errors to include a detail message (i.e. a Result/Either-like) - most languages that offer Option-like types let you use ...		lmm
17139650	11.704941	-7.6473436	comment	4.0	11.0	1527120126	10.0703125	"    typealias MustBeInTransaction = MyTransaction.() -> Unit
    
    fun makeObject(i: Int): MustBeInTransaction {
        return { /* do something with i or whatever in a transaction */ }
    }
    ..."		kllrnohj
17144883	12.457835	-7.0860915	comment	4.0	11.0	1527175417	10.189397	ReasonML has more potential. Aside from its excellent type system (one of the best), it can also compile to native code. This has several benefits:- Frontend: Your tools are fast. The ReasonML-to-JS c...		simplify
17175444	11.738422	-7.345712	comment	4.0	11.0	1527550948	4.8330684	If you think about it, a decent stack is composed of languages. That's currently already often true, e.g. the use of IDL languages like protobuf/flatbuffers. Some languages offer integrated idl like K...		sharpercoder
17218696	11.677584	-7.7838717	comment	4.0	12.5	1528017567	10.133457	Your start is good but you add complexity on top of it. Install Golang on your VPS, clone the source code on it and compile it there instead of messing with cross compilation.Also use sqlite to avoid ...		dom96
17222373	12.179812	-7.4485445	comment	4.0	13.5	1528061923	-10.28624	"It's a double edged sword - onboard some devs on ""advanced"" scala code and let me know how the 10x is working for ya. I also feel that sometimes types cause additional congitive load - you have to men..."		mping
17223079	12.249898	-7.1524143	comment	4.0	11.0	1528068300	12.35387	This looks really nice... i wish it was just part of the language to be able to write ruby with type information e.g. instead of having a separate more verbose sig method that's called before each met...		taf2
17225524	12.165439	-7.1630726	comment	4.0	23.0	1528099237	12.349649	I'm one of those people. I'm not sure I'd keep loving Ruby as much as I do now if the majority of Ruby developers end up using the type checker and I'll also have to. I like Ruby in part because it's ...		pmontra
17182182	11.923169	-7.3170414	story	4.0	5.0	1527621734	7.021302	Ask HN: I'm rubbish at (and hate) OOP – any hope for a career in web dev?		immutable-progr
17257390	11.850988	-7.61415	comment	4.0	11.0	1528389017	10.403996	I've also bought and worked through the book. It's excellent.My conclusion was that Idris is an academic language (lack of libraries), followed by realizing that the parts of Idris that I like, are al...		alexashka
22786419	12.453391	-7.302492	comment	4.0	11.5	1586103245	12.842589	Exploring Elixir & Phoenix. Solved some AOC & exercism problems with it, and wrote a BF compiler. So far, enjoying every bit of it. The language itself is beautiful! Codes are available on my Github[1] account :).[1] https://github.com/wasi0013/		wasi0013
22791515	12.138907	-7.879335	comment	4.0	13.0	1586157497	-3.1894245	I am curious about category theory? Do you have any resources on where it can be applied?		febin
22819241	11.6538105	-7.9077477	comment	4.0	15.5	1586399012	10.197483	>IMO Go is more like C people took a stab at making a Java.I haven't used Go beyond tutorials and some very basic programs, but I am pretty comfortable with Java. What about Go makes you feel it's rel...		tmh88j
22820267	11.63004	-7.915821	comment	4.0	10.5	1586413280	10.187414	yep, there Go was labeled as a replacement for C or Python, and while it in no way replaces C and and as for Python it generally only does when the Python wasn't the right choice from the start.In reality Go can fully take over Java's problem space.		takeda
22820928	11.821281	-7.3410354	comment	4.0	11.0	1586423622	9.263713	"async is huge, and I'm worried about future similar changes.Suddenly ""x.y"" means member access.. except for x.await, which has a magic different meaning I still don't really understand. And adding 'await' to a function declaration magicly mangles it in various ways."		CJefferson
22823465	11.705261	-7.33876	comment	4.0	18.5	1586446128	-8.698245	It is funny that although I have published peer-reviewed papers about evaluation of ML models and could probably discuss with you about many nuances of the process if you woke me at 3 AM, I always fin...		Scea91
22823832	11.594735	-7.312313	comment	4.0	10.5	1586448203	4.352186	"They are certainly better than Type I and Type II, but it is still a potentially ambiguous (at least as a non-native speaker). What makes a ""false positive"" false? Is it called a false positive becaus..."		twanvl
22836616	11.640828	-7.0798726	comment	4.0	10.5	1586547671	9.086302	reduce() used to be in the builtins in python 2.x. It was removed due to low usage. Keeping the builtins list tiny is a core principle of the language.		scrollaway
22841683	12.007776	-7.7673607	comment	4.0	27.0	1586613314	10.419183	"Really just learn it.It's a pity I don't use Haskell at work and yet learning Haskell was the single most bang for buck exercise I have ever done. ""Parallel and Concurrent Programming in Haskell"" is t..."		eklavya
22842660	12.245489	-7.651386	comment	4.0	11.0	1586624436	11.904598	Scala has the reputation of being fun to create stuff with, but horrendous when understanding other people’s creations. Is this still true?		3fe9a03ccd14ca5
22842718	12.17556	-7.6036787	comment	4.0	12.5	1586624927	11.921429	In my mind, GraalVM native compilation has superseded scala-native.GraalVM native compilation works really well. Many projects will compile to native out of the box. Many more with a bit of reflection...		spir
22843469	11.67682	-7.9001822	comment	4.0	14.5	1586632268	10.142946	Really? Where are the Go versions of Spring, JEE, Android, Solr, Liferay, Kafka, Gemalto, microEJ, PTC, Aicas, Ricoh, Kyocera, Java Card, VisualVM, JFR, JMX and plenty of other stuff I haven't bothered to type?		pjmlp
22843957	12.152595	-7.623256	comment	4.0	11.0	1586636777	11.919111	Unfortunately, I slowly got frustrated reading the what's coming for Scala 3.* True intersections and union types -- use them sometimes, not something you can't live without though.* Trait parameters ...		erton23
22886843	11.842846	-7.1842747	comment	4.0	13.5	1587019874	-9.005734	I used to dislike type hints for Python because:- I was afraid it would change the language culture- It was not comfortable to use- The idea and design was, as you said, bizarre- Use use a dynamic lan...		BiteCode_dev
22850613	12.053098	-7.526608	story	4.0	6.0	1586721266	7.3475246	Ask HN: Which functional programming language should I learn?		cglong
17255140	11.805961	-7.565238	story	4.0	163.0	1528374350	10.40226	Notes on Idris (2017)	https://thebreakfastpost.com/2017/12/02/notes-on-idris/	jxub
22802451	11.876941	-7.6665354	story	4.0	122.0	1586261548	10.275697	Lessons in Managing Haskell Memory	https://tech.channable.com/posts/2020-04-07-lessons-in-managing-haskell-memory.html	ruuda
22868674	12.242728	-7.536118	story	4.0	68.0	1586884891	-11.379365	Learning Spring with Kotlin – Sprint 0	http://thatsabug.com/blog/spring_learning_week0/	joaogfarias
22907891	11.780845	-7.3609066	comment	4.0	17.0	1587219384	-10.712266	Gevent is like goroutines with GOMAXPROCS=1. Which is to say not nearly as useful. It gives you concurrency without parrallelism, because Python never did shake the GIL. Which goes to show some technical debt will haunt you forever.		eloff
22916004	11.975618	-7.717785	comment	4.0	17.5	1587305357	10.408776	This is cool although for practical purposes, I think most people who need such a tool will not be using Haskell. It is tempting me to add Haskell to my CI just because it looks so nice and easy to use.		michaelmior
22917653	12.264224	-7.641991	comment	4.0	11.5	1587319980	11.944606	Haoyi is an amazing guy. Last night at 8pm and 2pm this morning I submitted two PR to the Mill, he merged within one hour. In about 7 years, he helped to create an eco-system around Scala:- REPL (ammo...		yingliu4203
22928152	11.663672	-7.193744	comment	4.0	11.0	1587414538	11.856606	"Congratulations, looks like a really nice language.One nitpick: I think ""val"" looks too much like ""var"" and this will make it harder do differentiate them by code skimming. I suggest changing ""val"" to something like ""const"", or ""fix"", or ""imm""..."		supercasio
22928314	11.649662	-7.9430323	comment	4.0	33.5	1587415458	10.238851	Between languages like Go, Rust, Swift, and others I feel pretty optimistic about these new players (and I very much prefer more language diversity).No surprise to see generics being so strongly pined for again. Very curious about how Go getting generics will change its position in the landscape.		kris-s
22976172	12.141637	-7.724394	comment	4.0	10.5	1587796862	10.440701	Both are beautiful in their own ways. I think ReasonML, or even SML or OCaml might be a gentler introduction since they let you write imperative code (more closely to what you probably write already) ...		enricozb
22980124	12.1224575	-7.112747	comment	4.0	17.0	1587839420	-10.368464	"Lile...    x instanceof Promise 

It works for standard promises, sure there are non standard promises, ancient stuff, that to me shouldn't be used (and a library that uses them should be avoided). So..."		alerighi
22993271	11.804793	-7.238295	comment	4.0	12.5	1587967264	9.180856	In sync programming if your  function does the wrong thing you typically get an error thrown or you get a result which you check for its correctness.But when you call an async-function that is suppose...		galaxyLogic
23017054	11.950539	-7.6311574	comment	4.0	12.0	1588151464	10.005357	isn't IO inherently not functional? it's a side effect		themagicalcake
23052040	11.612536	-7.8905306	comment	4.0	16.5	1588430404	10.185829	What was the main factor for choosing Go instead of C or Java?		geeklord
23055645	11.983059	-7.7071195	comment	4.0	19.5	1588461520	1.7758573	"It's a bit weird to see ""several weeks"" of effort being described as a problematic learning curve. At least the blogpost makes it clear that the effort pays out hugely but still, ""several weeks"" is no..."		zozbot234
23056072	11.60613	-7.2104654	comment	4.0	19.0	1588467401	6.8820086	You make a good point in general, but I'd be upset if a function called 'pop' didn't mutate anything.  That is not the right name to use for returning an element without side effects.		Dylan16807
23055472	11.68819	-7.211259	comment	4.0	11.0	1588459443	6.8585086	"I don't get this. Aren't protocols basically interfaces? So the argument is ""Start writing an interface, not a class?"" Isn't this common knowledge? This is stuff you learn in programming 101. (I'm not trying to come off as snarky; I'm genuinely curious.)"		kootling
23055655	11.630579	-7.909773	comment	4.0	10.5	1588461587	10.202075	Going off on a tangent, but this exact problem would be a worst-case scenario for Go getting user-defined generic types instead of only the current blessed ones.t. C++ developer with a mixed std::string/QString/BSTR codebase.		mappu
23057961	12.108722	-7.843665	comment	4.0	16.0	1588498820	-3.100352	The concepts are intuitive enough, and make sense. But I don’t see what non-trivial insights this gives us.I found the talk frustratingly vague. After all the hard work of setting up categories/operads in an example, the talk moved on without using them to do anything interesting.		ssivark
23059563	12.121928	-7.869896	comment	4.0	14.0	1588519760	-3.0232496	It's more helpful to view category theory as a language.Most undergraduates learn mathematics in the language of sets. If they're doing algebra, then the underlying structures of their groups, rings, ...		askthereception
23079963	12.3768835	-7.460469	comment	4.0	10.5	1588686506	-10.53481	"No native support for concurrency operators, no real event loop implementation, lack built-in support for non-blocking IO...
I do Elixir regularly and Actor Model is not something PHP developers know"		kangoo1707
23089157	11.757659	-7.506302	comment	4.0	11.5	1588756253	10.15704	I can't think of any way for 1 * 1 to be concatenation.I think the point GP was making is that a monoid has something to do with a function f that takes two arguments a and b where there is a single v...		JoshuaDavid
23136035	12.221206	-7.406157	comment	4.0	23.5	1589143755	-11.322074	I wrote my Android app in PascalAlthough I used Java to create the layouts/views.But I have started porting some things to Kotlin. Nearly finished replacing all the JavaI also had to buy a new compute...		benibela
23140505	11.8301735	-7.3415046	comment	4.0	11.5	1589191569	7.0351524	Is that the same as inheritance of types in CS?		gitgud
23141244	11.666845	-7.376739	comment	4.0	26.5	1589199072	-8.648654	Unfortunately you need to know type theory/logic notation in order to read this. Here's the English translation:- There is a variable called `x` in scope.- `x` is known to have type `A`.- `B` is a fun...		curryhoward
23144762	12.0742235	-7.1955986	comment	4.0	10.5	1589218802	0.6763021	hundreds of rules to read, is this on its recommended list if it's so critical? is its name 'no-floating-promises'?		ausjke
23145196	11.727426	-7.393847	comment	4.0	14.5	1589220885	9.1932125	Right, and those cowboys at SFAMOUS_COMPANY obviously haven't read the latest blog posts that clearly show $HYPED_TECHNOLOGY doesn't support $HIPSTER_PARADIGM in an async I/O functional stackless copy...		shric
23151379	11.883479	-7.3720336	comment	4.0	10.5	1589268410	-8.589118	Wait, ARE TYPESYTEMS POKA-YOKE FOR PROGRAMMING?!?!?!On of the well known Poka-Yoke strategies are cables that can not be plugged to the wrong port since there is a different one for everything. Kind of relates well to function signatures that make sure only the right type of data comes in.		turbinerneiter
23153254	12.027162	-7.814469	comment	4.0	16.0	1589286926	10.417919	I am convinced that monads induce a very specific kind of brain damage that makes a person incapable of ever explaining monads.		DagAgren
23154264	11.593519	-7.896754	comment	4.0	15.0	1589293311	10.1388	A few years ago I started to play with go.  First impression was great.  But a month or so in I started to having more and more doubts.  As a Java/C++ programmer I was missing especially the generic c...		hyperman1
23154469	11.659704	-7.930153	comment	4.0	14.5	1589294251	10.2101965	Golang didn't succeed because it is simple or powerful or any of the, I apologize, nonsense your hear from the Gophers. Golang succeeded because it was the only available relevant option and alternative to the aging Python and Java when the cloud took off in the early 2010s.		pot8n
23169910	12.174638	-7.2277637	comment	4.0	17.0	1589393811	-8.822413	BEAM is amazing and IMHO there's one very sweet spot ready for optimization: math functions. I know I can escape out to C/Rust/etc. yet the majority of what I do is simple float math such as stddev an...		jph
23170122	12.294912	-7.3207793	comment	4.0	15.0	1589394944	-8.835985	People say this isn't what BEAM is intended for an it excels elsewhere, which yes I'm sure it does.But why can't it be both? Why can't you do everything that BEAM does... and then also have an optimis...		chrisseaton
23179579	11.836587	-7.101781	comment	4.0	14.5	1589464785	-10.497296	The issue here is the link; it doesn't do a great job of explaining _why_ Bosque is breakthrough.  A bold claim like that needs evidence.What's special here?  From glancing at the code snippets--which...		zenexer
23048149	12.143149	-7.881618	story	4.0	91.0	1588381668	-3.2073388	Applied Category Theory (2019) [video]	https://www.youtube.com/watch?v=iwvl0tBJhoM	Kinrany
23176942	12.257785	-7.3373785	story	4.0	78.0	1589444837	7.064964	Embedding Objective-Smalltalk	https://blog.metaobject.com/2020/05/embedding-objective-smalltalk.html	mpweiher
23193792	11.810696	-7.3292184	comment	4.0	13.0	1589558925	7.087165	Avoiding OOP is hard: even those using “non-OOP” languages like C often end up doing some sort of bad OOP where the first parameter is some sort of explicit this pointer. I would tend to agree with th...		saagarjha
23194797	11.882421	-7.3201847	comment	4.0	24.0	1589563644	7.108013	you can't realistically develop useful software in pure-procedural way without introducing a lot of global state. Even if you look at well-designed non-OO code like, say the Linux kernel, you'll see t...		btilly
23194898	11.932549	-7.361414	comment	4.0	12.0	1589564135	7.0614147	“OOP” is one of those terms (like most terms) that have a narrow meaning and a broad meaning, and either proponents or detractors can use one of them in arguments:• OOP, narrow sense (emphasis on “obj...		svat
23194334	11.928265	-7.3557014	comment	4.0	18.5	1589561491	7.1276493	One of the main reasons why OOP is popular is not even talked about - the ability for AUTOCOMPLETE in the IDE to work extremely well.For example, I have an object... what do I do with it? So I hit the...		zackees
23194633	11.965854	-7.700595	comment	4.0	13.5	1589562799	10.413922	"This is a common idea but I'm skeptical it's that simple.Haskell has a powerful enough type system that it can enable ""hole-driven development"" where you specify the type of your code and then leave a..."		kqr
23198139	11.842709	-7.3273654	comment	4.0	16.5	1589580781	7.071096	It has little to do with subtyping per se and everything with the way that implementation inheritance, specifically, breaks modularity. The whole idea of inheritance contra composition is that every c...		zozbot234
23202629	11.604193	-7.602499	comment	4.0	36.5	1589629409	9.387963	This is my favorite JVM project and I think it's going to be huge!This model of concurrency is so much better than the async/await model used by many other languages. No more colored functions [1], or...		ceronman
23220316	11.86553	-7.213487	comment	4.0	12.0	1589794896	-9.021319	Well... type hinting does not seem to be very popular		galacticdessert
23234035	11.651646	-7.8576336	comment	4.0	13.0	1589891001	10.163582	I would be curious to see what the performance is like in Go. I've been experimenting with it a bit lately, and coming from a mostly C and Python background, I have thus far found it easy to pick up. ...		charlesdaniels
23232834	11.906377	-7.603351	comment	4.0	13.0	1589879033	-5.2101283	"In Haskell, one can make more general combinators in the following way:   type Anim a = (Duration -> a, Maybe Duration)

   -- Linear interpolation
   linear :: Anim Duration
   linear = (id, Nothing)..."		reuben364
23241798	12.245314	-7.091452	comment	4.0	14.0	1589932827	12.376495	Because Python's design philosophy is that, for a given operation exposed by the language, there should ideally be a single clear way of doing it, and that philosophy is optimized around reading code ...		andolanra
23247065	11.789602	-7.3522725	comment	4.0	19.0	1589984368	6.5398936	BTW if anyone is wondering why deriving class Square from class Rectangle is an error, it is primarily because the interface of the Rectangle class is mutable. If instead the Rectangle class was not m...		sumanthvepa
23284257	11.718497	-7.358282	comment	4.0	14.0	1590251356	-8.882073	I agree, but I think it’s a common misconception. Having used many languages, both for very large and small projects, languages with compile time static type checking and run time dynamic type checkin...		crazydoggers
23284379	11.728031	-7.341332	comment	4.0	17.5	1590252333	-8.903068	"I see that language parroted all the time - ""With thorough enough testing a dynamic language shouldn't be a problem"", and I have never understood it. Arguing to build what is essentially a build-time ..."		_t0du
23292027	12.136445	-7.0761995	comment	4.0	14.0	1590333038	9.698024	"If you have code that looks like this:    withTransaction(async session => {

      await Promise.all([someOp(sesson), 

      someOtherOp(session)]);

    });


Mongo may retry running it (calling th..."		inglor
23307229	11.724002	-7.579931	comment	4.0	10.5	1590464848	8.227351	I find this slightly depressing that using global mutable state had such a significant performance given the functional programming (encompassing Idris) is very much in favor of immutable data structu...		toastal
23307479	11.885818	-7.297178	comment	4.0	11.5	1590467925	9.161558	> Luckily after a migration that has taken many years, now most of the libraries use async/await instead of callbacks.Is that true?  I was looking to port one of my C# projects to TypeScript/Node and ...		wvenable
23308697	11.66089	-7.9193945	comment	4.0	13.0	1590482346	10.167238	Or you could just adopt https://opentelemetry.io/ and then everyone can benefit from all OT enabled libraries without having to write extra code, and you won't have to rewrite in order to change imple...		kstenerud
23308712	11.771295	-7.481437	comment	4.0	11.0	1590482531	10.351715	"> you don't know which type you will actually get ahead of timeSounds like it's statically kinded, and dynamically typed.
Or is it a place between kinds and types at which Idris operates?"		dejj
23319770	11.614805	-7.886666	comment	4.0	15.0	1590558687	10.218655	CLIs are sorta my ideal use-case for Go.  Goroutines are so error-prone to control since you don't have many options for abstraction, so it's relatively difficult to build long-running highly-stable p...		Groxx
23334074	11.943063	-7.371636	comment	4.0	11.0	1590647100	7.1016545	"For anyone who wants to post their opinions on whether OOP is good or bad, may I suggest briefly explaining what you consider to be ""object-oriented programming""?I've seen in a lot of threads like the..."		yen223
23334125	11.734905	-7.160933	comment	4.0	13.5	1590647501	-8.948243	Or it's a named stateful or immutable data container with validation? You don't always want to use primitive types. But I am not a Python dev.		TomMarius
23334204	11.710939	-7.1976886	comment	4.0	12.5	1590648173	6.7717786	Single-function classes make sense if you want the computation to happen lazily on-demand (it may be resource-intensive in CPU, GPU, storage, I/O, etc). The class acts as the place to hold the paramet...		Jare
23194215	11.695126	-7.3216615	story	4.0	18.0	1589560974	9.177727	Java: State of (Project) Loom	http://cr.openjdk.java.net/~rpressler/loom/loom/sol1_part1.html	pjmlp
23225492	11.696805	-7.926375	story	4.0	34.0	1589822970	10.025133	Generate Go model from database design	https://github.com/duythinht/dbml-go	duythinht
23289249	11.858549	-7.06215	story	4.0	78.0	1590296564	-10.740537	Latency in Asynchronous Python	https://nullprogram.com/blog/2020/05/24/	chmaynard
23341938	12.266043	-7.5606947	comment	4.0	18.5	1590696318	-11.368307	Has the Android world moved to Kotlin then?		MattGaiser
23342901	12.242752	-7.531731	comment	4.0	12.5	1590701314	-11.372309	Yes, Kotlin is preferred language now. Some new Google libraries are targeting Kotlin first. You should not use Java for new projects.		vbezhenar
23349697	11.778306	-7.3152227	comment	4.0	15.0	1590758765	-8.140514	"In part 1 they talk about everything being a function including react components and closures. But I come from the ""closure is a poor mans object and a function is a poor mans closure"" perspective. In..."		discreteevent
23362978	11.996226	-7.7672687	comment	4.0	14.0	1590860330	10.421877	Although I think the post is very clear describing the reasons why Haskell isn't attractive in business, this part rubbed me the wrong way:> Thus, instead of our discourse being about semantics, engin...		kace91
23363377	12.026965	-7.724087	comment	4.0	21.0	1590863143	10.443104	> Another problem is cultural. Haskell and Scala community have been the most hostile communities I have experienced. And the friendliness of communities is a sure predictor for growth.To elaborate fu...		lambdasquirrel
23363408	11.986823	-7.733098	comment	4.0	12.0	1590863374	10.413487	This is a slightly loaded question, but is a Haskell codebase harder to work on than one in a reasonable non-functional language?Maybe it's because the bugs are generally less common and easier to fix...		mhh__
23363907	11.962074	-7.724857	comment	4.0	16.5	1590867125	10.41134	Not a Haskeller, but I'd like to try to change your mind about this point:> We are just trying to build things here.Some languages are built to do engineering first-and-foremost. Languages like Haskel...		derefr
23368968	11.666045	-7.9331408	comment	4.0	29.5	1590926279	10.181025	There’s also a generics implementation on a branch of the go repo.I’m most curious how they perform on compilation speed assuming a big project makes decent use of generics. I doubt golang would merge...		parhamn
23368983	12.2283125	-7.6187763	comment	4.0	26.5	1590926553	11.922511	Don't ever try Scala. I work on a mid-sized CRUD application, and everything we need to recompile from scratch it takes 10 minutes. Typescript and Go are amazing in comparison in that department, but I miss the stronger typing of Scala.		fyfy18
23369181	11.809001	-7.24478	comment	4.0	12.5	1590928741	9.094041	> You can’t resolve all issues with asynchronous communication.Name one?		lugged
23372116	11.740558	-7.8623114	comment	4.0	14.5	1590954452	10.219131	No, it doesn't. Go is popular because of the names and organization behind it, as well as the fact that it's useful for a lot of people despite the lack of generics.Certainly, a lot of people are attr...		pcwalton
37735570	11.609108	-7.8500175	comment	4.0	20.0	1696236728	10.171839	"Tangential question: how come ""modern"" languages (like Go, first release 2009) seem to ignore basic PL Theory, that you learn in the first chapters of any suitable book (see Pierce, ""Types and Program..."		dgan
37748489	11.961421	-7.715452	comment	4.0	12.5	1696313647	10.418499	Wasn't laziness one of the things Haskell would ditch if it were to start from zero? Why is neohaskell keeping it?		Scarbutt
37748528	11.6173115	-7.9589043	comment	4.0	24.5	1696314237	10.181996	Goroutines was the selling point for me until they decided to introduce telemetry in their toolchain; that was what forced me to stop using Golang as a whole.About GC, I would say: if you implement C+...		stefanos82
37765151	11.715918	-7.3683844	comment	4.0	12.5	1696427396	-8.851608	There's a specific scenario where I have more sympathy for weak typing, which is: I'm writing a small, focused utility by myself whose scope can never expand and whose code will never be collaborated ...		user3939382
37765456	11.773294	-7.365872	comment	4.0	16.5	1696428635	-8.91019	This is basically where I am at. Most libraries and applications are trivially typed even in languages with relatively poor type systems like Go and Java. The necessity, or even benefit, of weak and/o...		fsdjkflsjfsoij
37765583	11.894418	-7.211436	comment	4.0	13.0	1696429127	-9.25465	I think this is OK as long as you keep your mind open to situations that you have not considered.Imagine someone is working in a relatively niche new programming language ecosystem which is dynamicall...		kdmccormick
37767983	11.76532	-7.3684387	comment	4.0	10.5	1696438291	-8.889586	"The author is basically wrong on all the points.
I used to think like that for decades, but in recent years changed my mind completely.Types lead to less bugs - nope, maybe marginally, but not signifi..."		beders
37769649	11.838912	-7.246283	comment	4.0	11.5	1696444685	-8.955619	"There's been considerable convergence on this. Most languages now have some degree of type inference for statements now. Even C++ has ""auto"". That substantially reduced the amount of type boilerplate ..."		Animats
37770757	11.603649	-7.875981	comment	4.0	14.5	1696449395	10.048027	mattn's sqlite3 is probably the most ideal use case for cgo imaginable. But it can still be annoying to set up cgo to build across many platforms.I think Go should just pull a Zig and just embed a full blown C compiler into go build.		infogulch
37785153	11.786151	-7.3658667	comment	4.0	13.0	1696545603	-8.945208	The code you posted is incorrect and full of bugs. For example, if A is 9223372036854775807 and B is 10, then you will get the incorrect answer. Try it out if you don't believe me.Another example is A...		ReflectedImage
37790634	11.892004	-7.2930427	comment	4.0	11.5	1696599484	9.207205	"It's too late to remove async fn, but can we still implement his ""What if the alternative was nicer""?   Is there any good reason why I can't use await in a non-async function that returns a Future?"		bryanlarsen
37794127	12.216546	-7.424799	comment	4.0	34.0	1696615936	-11.376854	I wouldn't advocate for replacing/re-writing old stuff - but you should try out Kotlin for backend work. It's amazing.Java programmers will have only a small learning curve before feeling productive, ...		Alupis
37794279	12.237471	-7.549716	comment	4.0	15.0	1696616597	-11.386382	It is still another syntax, with idioms moving away from JVM, their own little islands of Kontlin only libraries, and only works on InteliJ/Android Studio.I don't see any value in Kotlin outside Android shops.		pjmlp
37806162	11.9346285	-7.653446	comment	4.0	15.0	1696718861	10.396381	This resonates quite strongly with me.Back when I first learned Haskell, I strongly got the impression that the Haskell community just... didn't like programming? I kept running into endless papercuts...		crote
37789057	11.7232275	-7.288793	story	4.0	40.0	1696589244	9.189606	Was Async Fn a Mistake?	https://seanmonstar.com/post/66832922686/was-async-fn-a-mistake	MrBuddyCasino
37793216	11.674872	-7.9034896	story	4.0	64.0	1696611555	10.113923	Go JSON/v2 Package	https://github.com/golang/go/discussions/63397	philosopher1234
37826165	11.626174	-7.9284053	comment	4.0	11.0	1696889988	10.191363	I'd imagine it would work for any binary with debug symbols, even though the tool is written in go?Though I haven't tried it, on mobile right now.		jcul
37847466	11.66582	-7.2651863	comment	4.0	33.0	1697045170	-8.75174	"Accessible for who, do you mean? That is in no way 'accessible' without solid exposure to quite a lot of discrete maths (which I have and it's still hard going).λf :(τ 1 × τ 2 ) → τ 3 .λx:τ 1 .λy:τ 2 .f (x,y)
has type
((τ 1 × τ 2 ) → τ 3 ) → (τ 1 → τ 2 → τ 3 ).Yeah, that's accessible."		_a_a_a_
37899291	11.709078	-7.9794965	comment	4.0	11.0	1697461477	10.16728	Will this finally end the eternal golang http router bikeshedding?		creshal
37916831	11.68762	-7.3385615	comment	4.0	10.5	1697557127	-8.725293	The point is that you don't need runtime type checking if you can trust your type checker.		nerdponx
37931394	11.788836	-7.1837835	comment	4.0	15.0	1697648019	-9.006201	PEP 695 is great. I've been using mypy every day at work in last couple years or so with very strict parameters (no any type etc) and I have experience writing real life programs with Rust, Agda, and ...		gnulinux
37953032	11.618737	-7.89368	comment	4.0	11.0	1697784099	10.2058	In my opinion the interface system in Go is largely redundant, because interfaces are mostly equivalent to… structs of function pointers. And the single function interface case is just equivalent to a...		kubb
37968263	11.662905	-7.9160275	comment	4.0	10.5	1697905974	10.1593895	https://github.com/a-h/templTempl is a far more elegant solution for composing HTML within Go		Sheeny96
37984149	11.8436985	-7.3662095	comment	4.0	19.0	1698060348	9.190265	"  Postponed != win
  Postponed = () => await nextCrisis() 
    .then(crisis => introduceUncomfortableLegislationBecauseOf(crisis))"		p0w3n3d
38013607	11.855869	-7.3337946	comment	4.0	13.5	1698246338	6.9928575	I can't agree enough. What other paradigm is so regularly implemented in a way that makes doing it poorly easy(Inheritance), doing it well hard(Composition), and requires a list of caveats so large th...		quaunaut
38022346	11.9009905	-7.1806912	comment	4.0	15.5	1698301533	-10.177188	Type Safety != Runtime Type Validation. Something being Type Safe means that I, the programmer, am Safe from making type mistakes while developing and maintaining the software. For that to be possible...		stagas
38079477	11.779438	-7.312895	comment	4.0	12.0	1698719506	-8.9331045	> smart people are naturally attracted to complexity like moth to a flameI think the general inclination here towards static typing is due to this, rather than any evidence that statically typed langu...		hudon
38099273	11.701588	-7.02008	comment	4.0	19.0	1698851436	8.448437	"Without looking it up do you know what are the Java memory model guarantees? Or what's the difference between >> and >>> ?Even ""simple"" languages have things that most people simply don't remember without looking it up because it's just not useful to know in day to day work."		kllrnohj
25464369	12.24286	-7.296906	comment	4.0	10.5	1608271879	-10.4866905	"I wonder if the name Smalltalk was inspired by the name ""Lisp"". Lisp is away of talking, so is small talk. Maybe creators of ST-80 desired to create something higher level, more human-like than ""lisp""."		galaxyLogic
25464566	12.276744	-7.2938395	comment	4.0	12.0	1608274979	7.106485	what is currently the most popular language that is closest to smalltalki think many of the features that made smalltalk look revolutionary in the eighties are probably common in most modern languages...		systems
25464991	12.30186	-7.2856016	comment	4.0	12.0	1608279598	-8.322088	"It's probably a personal thing but the main point is this:
- Pharo and Squeak are both one full screen application with their own window manager inside. And that window manager is terrible and slow. I..."		Cimpresovec
25473240	11.721175	-7.6522036	comment	4.0	16.5	1608333062	10.156446	I wish we had a new Design Patterns book in 2020.GoF book is well obsolete, since then OO has faded, JS & Python are the the most common tools, even Java is unrecognizable with Lambdas and functional ...		x87678r
25476008	11.606661	-7.4932694	comment	4.0	10.5	1608365771	10.317088	Trying to decode this with examples:> Not everything is an object (Ruby). Nor is everything a function (any FP), a string (Perl), a process (Elixir), an actor (Elixir), a value, a thunk, a message, a ...		rchaves
25495077	11.831729	-7.2598376	comment	4.0	11.5	1608560039	9.278626	"Could someone familiar with the Fiber/Async thing explain how does this differ from Python's (or Node's)? How come Python (and Node) needs explicit awaits but Ruby seems to ""just work""?"		pas
25498581	12.040125	-7.1532755	comment	4.0	15.5	1608579649	9.15074	My biggest concern is separating the concerns via file naming convention and relying on presumably linter plugins to enforce its rules and on modifications to packagers, rather than something that can...		WorldMaker
25505138	11.881249	-7.456296	comment	4.0	11.0	1608635785	7.5849957	What's the difference between writing OO code that depends on internal state and writing a pure function that expects an argument that is a data structure of a specific type (and thus has internal dat...		ritchiea
25514842	11.822005	-7.6346917	comment	4.0	11.0	1608703116	10.373858	At least OCaml and Haskell compile into the native code, thus faster by definition.		xvilka
25516048	11.670626	-7.4903417	comment	4.0	13.5	1608716848	8.988815	"I don't agree with the ""constant-stack algorithm"" comment. Whether you represent the stack implicitly through recursive function calls, explicitly through building up lambdas, or again even more expli..."		jpcooper
25523170	11.734563	-7.1885195	comment	4.0	15.0	1608763573	9.12287	If you know that there will be 10k concurrent users in your application, go ahead and use async right from the start.But for the rest of us, simple, blocking code will do just fine and save us a few headaches.		pvorb
25535307	12.455752	-7.0186334	comment	4.0	10.5	1608887739	12.36277	IMO Python has more libraries, more developers (people who might want to work on your project with you), and a more simple and intuitive syntax (easier to onboard people). Ruby is a fairly quirky language, eg functions aren't first-class values.		tachyonbeam
25539266	11.682477	-7.279492	comment	4.0	15.0	1608932572	-0.5238023	I don’t want to come off too harsh, so I’ll preface that I respect the author and mean all of what follows constructively.With that said, this seems like a recipe for debugging nightmares. Getters and...		eyelidlessness
25544172	11.845679	-7.094864	comment	4.0	16.0	1608998443	-9.009647	One of the things that's interesting about modern languages like Java and Typescript is that they target software engineers that want things like generics, type safety, etc.A lot of data scientists DO...		burtonator
25544322	11.790911	-7.315072	comment	4.0	10.5	1608999724	-8.883619	2012: “static types restrict my beautiful code”2019: “static types are amazing!”I’m still salty about this shift. No one really goes back and admits, “maybe we were all wrong.”IMO, the best explanatio...		mattgreenrocks
25560974	11.968327	-7.734232	comment	4.0	18.0	1609175961	10.432235	To me, the major major unsung pain point with Haskell and any non-strict language that makes it unsuitable for most applications is it's inability to use dynamic libraries as we're all used to.For an ...		Blikkentrekker
25561538	11.985048	-7.739771	comment	4.0	18.0	1609179493	10.411597	Thank you. You demonstrate very well what the problem is with the Haskell community, and that in a topic about Haskell adoption.For a language to be adopted it must be beginner friendly. And by beginn...		noncoml
25562249	11.989955	-7.7663836	comment	4.0	14.0	1609183155	10.413798	Haskell is the ultimate shibboleth. It's value for actual programming is secondary.		javajosh
25565938	11.868166	-7.446271	comment	4.0	13.5	1609208206	7.500105	> The fact that a function gives you the same result given the same arguments is not meant to be some kind of encouragement to redundantly call a function many times.All pure functions are by definiti...		bikeshaving
25573471	12.343799	-7.5235324	comment	4.0	19.0	1609268729	12.856613	As an outsider, why doesn't/can't Ruby implement a full actor system like Erlang/BEAM? Ruby is already based on message passing so it seems like it should be possible. Granted it'd likely induce a large performance hit since presumably every object would need to be locked or have a message queue.		elcritch
25488042	11.635346	-7.9206758	story	4.0	14.0	1608486339	4.2459884	visualsource.net – source code visualization service (gource)	https://www.visualsource.net	pro_metheu5
25477096	12.233676	-7.521585	story	4.0	9.0	1608382224	-11.370425	Ask HN: How is Kotlin for the back end compared to Java?		bestinterest
25530155	11.903963	-7.3939495	story	4.0	38.0	1608835522	-8.418621	Curry Triangle	https://mathworld.wolfram.com/CurryTriangle.html	lemonspat
25550363	11.739216	-7.237605	story	4.0	29.0	1609069142	-8.681737	Lambda.r Functional Programming in R	https://github.com/zatonovo/lambda.r	sieste
25554907	11.921388	-7.429307	story	4.0	27.0	1609108994	7.260549	Resolving the Time Paradox Implied by Functional Programs	https://softwarefordays.com/post/resolving-the-fp-time-paradox/	jbmilgrom
25586523	12.156396	-7.2871327	comment	4.0	14.0	1609364623	-10.4326725	Man, I wish I understood all of this stuff. I have a general enough notion from digging into Haskell and reading into types (including dependent types). I see the value of uniqueness just from using T...		dmix
25613295	11.654272	-7.970367	comment	4.0	10.5	1609600311	10.218942	For anyone curious what a Go version of the same article would look like (as I was), I tried to answer that question by writing https://dmitri.shuralyov.com/blog/27.		dmitshur
25636041	11.636362	-7.306943	comment	4.0	25.5	1609786126	-8.825155	Also see: https://rise4fun.com/fstar/tutorialEven though this sounds like formal verification gobbledygook, there is some information of practical value there.How many JSON validators have you seen in...		adsharma
25640553	12.001543	-7.7588906	comment	4.0	10.5	1609808250	10.379486	You're absolutely right. The only problem with art is that art doesn't produce what is actually needed for survival (like food or practical engineering solutions), hence promoting Haskell outside of art/research is ultimately a fool's errand. But damn it is pleasant.		H8crilA
25647959	11.743951	-7.8566422	comment	4.0	13.0	1609867489	10.155273	I have used Go in production. I found it roughly takes 2-3x additional time it takes to develop the same functionality in Node.js (with typescript). But it runs faster. If you want to write code that ...		murukesh_s
25653901	12.23007	-7.6261163	comment	4.0	16.0	1609898131	11.901236	I agree.For me it also came with a huge down side. I spent the last six to seven years using Scala, learning FP concepts, getting familiar with Haskell and it's concepts as well as other functional la...		tiew9Vii
25679820	12.009315	-7.794654	comment	4.0	14.0	1610066849	10.359312	"> The usual list monad is only one of infinitely many ways to turn the List functor into a monad.So simple, and yet this is a point that I think is rarely made clear enough in ""monad explainers."" For ..."		nemo1618
25699776	12.002883	-7.7406073	comment	4.0	17.5	1610194980	10.437301	Haskell is pretty nice for building web applications.Thanks to it's type system you can build much more stable web apps in less time. Usually later in the application life cycle you have a hard time r...		_query
25699855	11.863378	-7.248158	comment	4.0	12.0	1610195752	9.1976185	> They had promises and async/await in 1995.Really? Do you have a source on this? I was under the impression that C# was the pioneer here.		dom96
25700149	12.041251	-7.8051877	comment	4.0	11.0	1610198741	10.410609	> A very clear indication of this is how Haskell treats programming terms. Instead of explaining Monads like all other design patterns out there, they insist on using some obscure definition from cate...		dotdi
25716145	11.97021	-7.7488375	comment	4.0	10.5	1610295387	10.4298	The name clash with Haskell's build tool is unfortunate...		flal_
25727452	11.802135	-7.3101835	comment	4.0	39.5	1610363847	-8.94996	Actually, the reason why I found static typing annoying in the past (and why I felt more productive in Python) were the types are really low level (missing basic things like tuples) and lack of type i...		js8
25730507	12.008623	-7.7596407	comment	4.0	10.5	1610380212	10.398581	Okay, so this is admittedly snarky but we've seen this sort of blog post so much that it has practically become an Onion article: Why Haskell Is Our Secret Weapon, by Startup You've Never Heard Of.And...		darksaints
25751130	11.647915	-7.868031	comment	4.0	17.0	1610475897	-11.699882	"If we're dealing in anecdata, mine is that ""Go compiles fast!"" is true right up until something in your dependency tree hauls in kubernetes repos, perhaps multiple times. Thanks the ""first principles""..."		jacques_chester
25807264	12.307498	-7.518269	comment	4.0	11.0	1610847629	12.832286	The actor model is brilliant, but I fear it will never get the adoption it deserves because it's too much of a break from convention. I guess it's maybe a bit too much of a leap? It replaces both Kube...		tormeh
25806768	11.654266	-7.904294	comment	4.0	28.0	1610842052	-8.232262	The purpose of DI is to allow the use of a DSL to instantiate and connect objects, with configuration for those objects embedded into the DSL so that the setup and the way things work can be changed q...		permille42
25831844	11.599925	-7.87499	comment	4.0	12.0	1611051303	10.040676	"The downside to that more ""not idiomatic Go"" example is that you lose useful stack traces, and it complicates contexts (timeouts, credentials, tracing, etc… etc…).For this reason the article I would s..."		knorker
25850347	11.926622	-7.106512	comment	4.0	11.5	1611168824	7.0178075	The screenshots of the Self morphs world inspectors are a blast from the past.When I was a student at Brown U. CS (same time as the much more accomplished Bryan Cantrill), the department had a good re...		neilv
25855673	11.661537	-7.112485	comment	4.0	12.0	1611205784	6.694475	This is funny because no one uses the factory pattern in other languages		spacemanmatt
25856160	12.078257	-7.2369947	comment	4.0	15.0	1611210848	10.292345	Typescript has all sorts of type-level computation goodies that Haskell doesn't have (unless you turn on insane amounts of GHC extensions).Stuff like mapped types, keyOf, typeOf, ReturnType, literal t...		dwohnitmok
25862657	11.794012	-7.1028194	comment	4.0	11.0	1611255747	8.0310545	I prefer functional style whenever I can. I noticed that this style slows Python programs down. It seems function calls are rather expensive. Does anybody have a similar experience?		lysium
25766837	11.703383	-7.8578167	story	4.0	6.0	1610566128	10.138721	Go Is the New Java	https://twitter.com/inancgumus/status/1349280649316859905	inancgumus
25882230	11.678964	-7.39778	comment	4.0	17.5	1611410175	9.686071	"I am not nostalgic for the old versions of Java. I learned on Java 3, when they designers were still saying, ""yOu Don't nEEd typE paraMeterS BeCAusE yOu CAn cAsT tO Object!"""		curtis3389
25917159	11.804704	-7.1791964	comment	4.0	13.5	1611676219	-9.005811	I feel like type checking for Python is a plot by engineers bored by a language that is too pragmatic and efficient for their taste.		Galanwe
25918116	11.816567	-7.1353	comment	4.0	12.0	1611680119	-9.015654	I generally agree.I'll add a couple more frustrating limitations to Python's typing:1. You can define a function type somewhat clumsily (`Callable[[Arg1T, Arg2T], ReturnT]`), but if your callback uses...		throwaway894345
25935766	11.872638	-7.3154073	comment	4.0	17.0	1611791023	7.202103	I disagree. Good OO is about encapsulation of concerns.  Make a Client object and push data to it; let the class worry about the networking and sockets.  Make another object to deal with the database....		na85
25936087	11.891148	-7.3352914	comment	4.0	14.0	1611792560	7.0615873	It's also a cherry picked example, networking code, of a problem that can be expressed equally as nicely with OO or functions.  Now refactor a gui or a game without OO and you'll find the OO version easier to understand or cleaner.		cmiller1
25957823	11.857539	-7.6389427	comment	4.0	12.0	1611932169	12.833683	I never saw Pony described as high performance. Now I'm interested		loa_in_
25974780	11.760204	-7.876065	comment	4.0	14.0	1612055948	10.209999	What's the Django/Rails equivalent in Go? The value from Python isn't Python itself (though it might be easier to write in - trading off reliability for ease of use compared to a compiled language) bu...		Nextgrid
25974781	11.723709	-7.8809977	comment	4.0	10.5	1612055949	10.174814	It's more Django than Python specifically.Does Go (genuinely) have something to match?		andybak
25974826	11.705967	-7.0793567	comment	4.0	23.0	1612056368	10.207665	> I cannot imagine building beyond >1000 LoC in interpreted, dynamically typed languagesMany have imagined and built valuable stuff in interpreted, dynamically typed languages before you, by being mor...		capableweb
25979940	11.648318	-7.346249	comment	4.0	10.5	1612110629	-8.757626	"> What thing that violates a type check would be ""perfectly fine to do""?A typical example, in dynamic programming languages, is to treat numbers as strings and vice-versa; evaluate lists in boolean co..."		AQXt
25980576	12.345971	-7.2172236	comment	4.0	11.5	1612114315	13.157566	I spent a lot of time thinking about this.What makes Perl or Clojure such fun languages to work with is they don't impose structure on you. You can do whatever the hell you want.On the other hand resu...		lmilcin
25986525	12.151921	-7.513921	comment	4.0	29.0	1612165966	-10.604165	F# is a great language, but the .NET community never embraced it.		29athrowaway
25986563	11.960543	-7.4747114	comment	4.0	25.5	1612166508	7.190165	It's a real shame, but not unexpected. The vast majority of programmers I meet in the wild simply do not have training in FP and by the time they decide to learn it (if they do), it's hard to unlearn ...		hvidgaard
26008063	11.72422	-7.3390055	comment	4.0	11.0	1612305888	9.583367	"I agree with most of these, but I pretty strongly disagree with #10 (don't use `!= null`). The reasoning is that you can use `null` and `undefined` to mean different things, like `null` being ""no firs..."		dlbucci
26013041	12.145954	-7.8866196	comment	4.0	11.5	1612355482	-3.1849086	"If anybody interested the best book to learn the category theory:
https://www.maths.ed.ac.uk/~v1ranick/papers/maclanecat.pdf"		Ceezy
25943397	12.049437	-7.573472	story	4.0	7.0	1611848006	10.3358555	Ask HN: Elm, PureScript, or ReasonML for a FP course?		Eugeleo
25976441	11.805595	-7.3426437	story	4.0	30.0	1612072503	5.1069007	The Hermeneutical Imperative	https://theconvivialsociety.substack.com/p/the-hermeneutical-imperative	panic
26008521	11.672084	-7.902453	story	4.0	39.0	1612308340	10.137606	Ent. An Entity Framework for Go	https://entgo.io/	ibraheemdev
26014196	12.032475	-7.7851677	comment	4.0	14.0	1612364701	-3.0843651	"Just a nice set of ideas to be used for social signalling.In with type systems, a typeclass is all you need. The mantra is ""to be an X (being substituted for an X) is to be able to perform (implement)..."		johndoe42377
26014450	12.140323	-7.8843417	comment	4.0	12.5	1612366085	-3.2205884	"Maybe for a value of ""has applications"" that doesn't necessarily include anyone actually applying it.As a generalisation, I don't think anyone by people into category theory actually cares about or applies category theory."		user-the-name
26014025	12.338432	-7.030341	comment	4.0	11.5	1612363775	13.177341	https://www.haven.org/haven/wiki/Seems like perl is not having a good day there.		fgreinus
26019722	11.679962	-7.486801	comment	4.0	11.5	1612389607	9.999794	That heuristic seems to be changing somewhat, depending on how and where you use those specific characters. It sounds like they plan to make `interface{}` the same as `any` in the type parameters.This...		nixpulvis
26030959	11.860632	-7.046256	comment	4.0	12.5	1612480816	-9.068604	This article felt a little bit silly to me, Python intentionally is one of the easiest languages to use. And this article kind of argues it needs to get even easier?The only thing I can dream about is...		offtop5
26070761	12.041056	-7.6871448	comment	4.0	12.0	1612821488	-10.919547	"A question: How does CLOS rate in terms of ""functional purity"". Or does it matter? The biggest selling point of Haskellers seems to be that Haskell is a ""pure"" functional language. Are there practical problems caused by mutable data in CLOS?"		galaxyLogic
26078597	11.935693	-7.699944	comment	4.0	13.0	1612884723	10.3806715	Laziness - or more precisely, non-strictness - is the essence of Haskell.  Haskell was created because there were a bunch of non-strict languages out there, and folks saw a need for one non-strict lan...		massysett
26078875	11.957447	-7.7373657	comment	4.0	20.0	1612885919	10.487054	GHC is a production-ready compiler (for Haskell) suited for industry use. I work on a growing, healthy team and we ship an application written in Haskell several times a day. It has decent tooling, wh...		agentultra
26079291	12.418075	-7.361372	comment	4.0	15.0	1612887627	7.180698	"For what tasks is the BEAM not ""good enough to get something up and running""?AFAIK, any modernish language is good enough to get something up and running regardless of the task."		dudul
26083357	11.62452	-7.037554	comment	4.0	32.5	1612910094	6.233457	This is how pattern matching works in any language (except for some niche languages that allow nonlinear patterns, like Curry).Many of the comments here reveal a bizarre parochialism.		_nosewings_
26092250	12.158289	-7.192954	comment	4.0	11.0	1612978672	8.537073	ECS is not for beginners who just want to get a quick game out, or anyone who has <500 entities in a scene		slmjkdbtl
26094006	11.6414795	-7.9085793	comment	4.0	12.5	1612987667	10.161265	I wonder if over time, Golang will pick up more type features like Java and other languages have.The general consensus seems to be that powerful type systems are very effective.Personally, the low foo...		maurys
26094145	11.668637	-7.681749	comment	4.0	11.5	1612988316	10.124087	Out of curiosity, what changed between now, and when proposals for generics came up in years past?		lastofus
26101798	12.213993	-7.6150365	comment	4.0	14.0	1613053709	11.929988	Great Analysis!  I agree that languages are becoming more like Scala.I'm not sure about the JIT part though. Aren't many of the recent language success stories now about AOT compiled languages like Go, Rust and Swift?		agbell
26101986	12.238705	-7.588825	comment	4.0	11.5	1613054985	11.920912	What newer hybrid languages besides Kotlin can cover the benefits you can get with Scala: a solid ecosystem (both for Scala and Java) for developing web applications, microservices, data processing, a...		playing_colours
26102595	12.244917	-7.611066	comment	4.0	11.5	1613057716	11.922419	In the Spark world, you can use a tiny subset of the Scala features and enjoy huge productivity gains over the other language APIs (Java & Python).  Those productivity gains are wiped out as more craz...		MrPowers
26104986	12.163453	-7.6307936	comment	4.0	14.0	1613066794	11.922695	As I am slowly acquiring the habits of thought that make it possible to read and write FP code at a reasonable speed, I'm horrified by how much idiomatic Scala FP code relies on projecting certain ass...		dkarl
26109064	12.210234	-7.6097965	comment	4.0	12.0	1613086973	11.917459	I have used python and scala for work and I find myself wishing to be able to use scala a lot when I use python (especially when using pandas or trying to multi process/thread). Not so much the other ...		elmalto
26124243	12.235564	-7.5268755	comment	4.0	13.0	1613231284	-11.3729315	Next entity for the killed-by-google-graveyard?Joke aside, seems that kotlin is a niche player and will remain a better Java until something like Rust eventually takes over the enterprise market.		anonyfox
26124642	12.193925	-7.470904	comment	4.0	20.5	1613234910	-11.375241	I'd choose Java over Kotlin. The benefits of Kotlin seem minor - mostly syntactic sugar - and the tooling is more limited than Java. They seem to solve problems with kludges (like their coroutines are...		chrisseaton
26131005	11.771367	-7.2960167	comment	4.0	14.0	1613297043	-8.923811	This is one of the big reasons I prefer static typing.When looking at some unfamiliar code in an unfamiliar codebase, I can reason about the code much faster when I can see what functions return, and ...		magicalhippo
26131983	11.971597	-7.509372	comment	4.0	12.5	1613307099	7.2809243	The biggest challenge with teaching functional programming is that people tend to take the word function or the concept way to seriously. They start mandating restrictions on input/output, what functi...		austincheney
26135972	11.974403	-7.4897804	comment	4.0	10.5	1613334650	7.2338595	"I agree. So, I guess what I mean then is that once you're past the usual introductions, there aren't many ""next steps"" kind of guides to start doing actual work with the functional mindset.Although I ..."		j1elo
26142621	11.917602	-7.4597573	comment	4.0	16.0	1613396446	4.4653788	"""Asked 11 years, 7 months ago""Has the need to use functional programming languages become obvious yet? Has C/C++ et al. fallen by the wayside, yet?"		arbitrage
26143018	12.125557	-7.6678395	comment	4.0	10.5	1613399324	9.07549	OCaml is still pretty fast and part of RHEL. How good ia linux support for F#?  And how hars is it to get mono installed?		galangalalgol
26143817	12.127518	-7.492351	comment	4.0	14.5	1613404191	-10.594579	For me, F# is a beautiful, goldilocks language that has both the expressiveness and elegance of Python/Ruby and the strictness/compile-time safety of a statically-typed language, all backed by the .ne...		KurtMueller
26144975	11.739014	-7.1897435	comment	4.0	12.5	1613410826	7.936118	Wrong, Java Varargs functions can take spreaded arrays as Var parameters hence the number for this not uncommon case (e.g jdbc apis, format(), etc) is only known at runtime		The_rationalist
26151622	11.746323	-7.136446	comment	4.0	30.0	1613459107	-8.538667	I will re-consider it, once they have proper data types and data type checking.		hans_castorp
26151808	11.605861	-7.072449	comment	4.0	11.0	1613461711	1.0146327	Genuinely no idea what your statement does, but “yield 123” or “yield from xyz” is infinitely more clear.		orf
26151884	11.88651	-7.062091	comment	4.0	11.0	1613462656	12.331202	"You can pass a function as argument using its name in Python and then call it. You must pass it as a symbol in Ruby and then send to it.  def f(x):
    return x

  def g(fn, x):
    return fn(x)

  g(f, 1)"		pmontra
26012593	12.2143955	-7.638733	story	4.0	72.0	1612350474	11.928929	Metals with Scala 3	https://medium.com/virtuslab/introduction-to-metals-with-scala-3-79ebf3120a95	tdudzik
26101463	12.100649	-7.582344	story	4.0	82.0	1613051357	11.906463	Zio: Type-safe, composable asynchronous and concurrent programming for Scala	https://github.com/zio/zio	ibraheemdev
26110725	11.724047	-7.9013505	story	4.0	3.0	1613103888	10.177581	Ask HN: What's a fun language to program in besides JavaScript?		chovybizzass
26128607	12.312028	-7.3319836	story	4.0	121.0	1613263860	7.042328	Amber Smalltalk	https://amber-lang.net/index.html	owenm
26158715	11.947301	-7.473833	comment	4.0	13.0	1613508992	7.2397413	"An interesting writeup, but <troll>like most oversimplified functional programming writeups</troll> they are ignoring a lot of external state around Factorio ""functions"" and ""composed functions"" - thi..."		falcolas
26158924	11.616918	-7.9387207	comment	4.0	10.5	1613510391	10.173738	"Do you know any good GUI library in go (as you mention native GUIs as a weakness.
Besides that what were you're problems with the C interop? In addition to the lack of up to date documentation for mor..."		KarlKode
26158520	11.709776	-7.7888355	comment	4.0	26.5	1613507963	10.176669	It's easy to learn and and great for getting something useful deployed pretty quickly. In both undergrad and grad school, I often chose Go and my projects -- using the same algorithms as classmates --...		mholt
26164272	12.162601	-7.5267167	comment	4.0	11.0	1613552599	11.899515	Slightly off-topic, but say I know Python and JavaScript and I wanted to add a multi-paradigm language with strong typing to my toolbelt. I'm looking for something with a strong functional programming...		arcturus17
26191305	11.647031	-7.2983437	comment	4.0	13.5	1613728279	6.6228037	"The primary advantage of proper pattern matching compared to ad hoc ""instanceof"" checks is exhaustiveness checking. I love the comfort in knowing the compiler will tell me all the places in the code t..."		yoneda
26204112	12.11478	-7.8467665	comment	4.0	20.0	1613829579	-3.2395043	It seems unlikely that there will be any profound insights from category theory on how to write code, similarly to how thousands of years of advances in the theory of numbers have had notably few impl...		roenxi
26207053	11.696798	-7.3976045	comment	4.0	13.0	1613849547	-8.434433	I can’t read things like this without bringing up Leslie Lamport, the creator of TLA+. His position is that all you need for understanding computation is “regular” mathematics, i.e. set theory and pre...		amw-zero
26213696	11.972848	-7.170063	comment	4.0	12.0	1613918173	10.083415	The Java community has some great developers, but also a lot of Serious Software Engineers who will sabotage everything with extra complexity, and then everyone who learned Java in school and never fe...		gurkendoktor
26221664	11.593833	-7.91675	comment	4.0	15.0	1613977761	10.221941	"I frequently describe Go as ""C, with memory safety and GC"". I don't run into many that disagree.Go is basically how Java was pre-generics. People forget that early Java was much like Go in some respec..."		throwaway189262
26225364	11.655769	-7.8948164	comment	4.0	14.0	1614006577	10.20106	> Go is not an easy language, it is a simple language, those 2 things are not the same.This distinction is fundamental to any sort of design, but is unfortunately lost on a lot of people (especially d...		epicide
26228556	11.629691	-7.9339747	comment	4.0	13.0	1614019513	10.217454	Why? Well, for one, Go produces a statically linked binary and C# requires a runtime be installed.If we’ve learned nothing from Java and Python, it’s that managing runtimes and environment can be a huge pain point.EDIT: swipe keyboard put ringtone instead of runtime and I missed it. Corrected.		cletus
26235409	11.826519	-7.3682303	comment	4.0	12.0	1614072830	-8.923043	Imho, statically typed languages are the ones that benefit most from schema. The current schema version is 12 but the implementations for Go, Rust, C++ and Java are all listed as draft 7. None of them support codegen either, just validation, so not exactly compelling.		nly
26282057	12.274963	-7.1149526	comment	4.0	16.5	1614391971	-10.454021	I really want to use PureScript, but I wonder why I should use PureScript if I already have TypeScript?Besides, as far as I know, the PureScript part is only for the business logic, not for the render...		christiansakai
26293723	11.77803	-7.5223455	comment	4.0	19.0	1614523630	10.38264	Full text of Edwin Brady's tweet:> A mundane use of dependent types... I just tried to add an environment variable to Idris 2, and it wouldn't compile because I forgot to add it to the --help output.> offers compiler a jelly baby		Smaug123
26211248	11.682186	-7.914826	story	4.0	97.0	1613887884	10.158883	Life of an HTTP request in a Go server (2017)	https://eli.thegreenplace.net/2021/life-of-an-http-request-in-a-go-server/	ibobev
26249236	12.140033	-7.8754797	story	4.0	49.0	1614170303	-3.2912738	A Categorical Theory of Patches (2013)	https://arxiv.org/abs/1311.3903	JNRowe
26284976	12.506311	-7.455812	story	4.0	35.0	1614435451	-12.356188	Phantom Types in Gleam	https://blog.pd-andy.dev/phantom-types-in-gleam	pd-andy
26303620	11.937218	-7.662029	comment	4.0	11.5	1614612482	10.396553	I'm probably way OT, but this seems like a decent place to get some opinions and this article doesn't address my issue:Here's my problem with Haskell: I want to model my domain as collections of heter...		blacktriangle
26317803	11.647428	-7.961897	comment	4.0	14.5	1614706140	10.139331	> This is also true for ecosystems like Rust or Go, that have SemVer baked into their packaging toolchain².> 2. […] Bumping major in Go means creating a new import path. Which is so painful that even ...		chrismorgan
26317954	11.794544	-7.210737	comment	4.0	14.0	1614706947	7.9048047	Agreed.  But some people have an attitude of Strongly Typed == Needlessly Verbose.  Probably because most developers have only experienced Strong Typing via Java.		mywittyname
26325682	11.656239	-7.1925063	comment	4.0	11.5	1614756508	8.892793	This is nice and all, but part of me feels like having code structured around the shape of tuples returned by functions has an element of pattern-smell (and by pattern I mean design pattern).		tus89
26328038	12.112026	-7.8553934	comment	4.0	12.0	1614778379	-3.3383846	"Neither is more foundational than the other. So I think the use of ""just""  is not justified here.https://mathoverflow.net/questions/360578/category-theory-an..."		Garlef
26360000	12.466806	-7.490014	comment	4.0	15.0	1614968251	-8.98547	The creator of Erlang said that static typing was not appropriate for the applications Erlang is designed for. Worth keeping this in mind!		pharmakom
26379404	11.712489	-7.155149	comment	4.0	19.0	1615148454	7.5528297	The best explanation I've ever seen for design patterns is that they are workarounds for weaknesses of the programming language. Usually Java and its contemporaries.http://journal.stuffwithstuff.com/2...		matheusmoreira
26381307	11.591788	-7.1056523	comment	4.0	14.5	1615165021	7.993893	Singleton’s main feature is not that it is globally accessible, but in that it represents a state that cannot be naturally duplicated. The pattern itself lies in a controlled instantiation, where a method/constructor/factory returns a cached value on a second call. Globals are just that – globals.		wruza
26381654	11.609982	-7.121864	comment	4.0	12.0	1615168957	8.131441	"At global level:   ThingThereCanBeOnlyOneOf a;
   ThingThereCanBeOnlyOneOf b;

Oops.  That's not a singleton.  That depends on nobody, ever, anywhere in the code creating another one.  In contrast, a true singleton can enforce that there is only one, no matter what the callers do."		AnimalMuppet
26399749	11.69062	-7.4201293	comment	4.0	10.5	1615304072	10.06198	An application I touched a few weeks ago has a DB column named 'type' with values 1,2,3.  So on to the source code we go:  enum RecordType {TypeOne(1),TypeTwo(2),TypeThree(3); RecordType(int dbValue) ...		hyperman1
26401124	12.452623	-7.313735	comment	4.0	14.5	1615310938	-9.211999	this sounds really neat and I'm going to go read about it!I also wanted to call out that this ~sentence has just... a bunch of things that seem like jargon/names within the community? As an outsider, ...		wcarss
26401264	12.486037	-7.448712	comment	4.0	12.5	1615311607	12.907908	sorry! so I'll clarifyElixir inherits a library called OTP from erlang which is a set of primitives for building massively concurrent systems.A Genserver is sort of like a Base Class for a object that...		cultofmetatron
26409761	11.982467	-7.480632	comment	4.0	10.5	1615371600	9.177527	Why would I want to write a server in a language that requires such awkward approaches to basics like coroutines and dynamic dispatch when I could use kotlin on the JVM and get pauseless GC, ultra fas...		thu2111
26298075	12.278097	-7.316431	story	4.0	56.0	1614554489	7.0811324	Squeak: A Free Smalltalk System – On RISC OS	http://www.rowledge.org/tim/squeak/	lproven
26366151	11.780059	-7.2997255	story	4.0	20.0	1615021232	-6.0096083	Immutable Approaches	https://macwright.com/2021/03/05/immutable-approaches.html	Tomte
26447734	11.755108	-7.2798023	comment	4.0	23.0	1615653882	-9.076335	One of the best OO languages out there is Eiffel, value types, DbC, MI, generics, lambdas, non-nullable references, a very nice graphical editor, JIT for development and AOT toolchain that pings back ...		pjmlp
26447741	12.005147	-7.785612	comment	4.0	11.0	1615653934	10.40726	The biggest problem for me is the age old „null“.C# with monads would be great.		ghosty141
26448717	11.934589	-7.3549	comment	4.0	14.0	1615660292	6.926529	"My understanding is that Alan Kay cannot reasonably claim to have ""the original definition of OO"", only ""a very good early definition"". Additionally, it seems like he's either been a bit inconsistent ..."		hyperpape
26466349	11.7846775	-7.2561707	comment	4.0	21.0	1615817886	6.8658757	"For anyone interested in OODA, the Robert Coram biography of John Boyd, and ""Certain to Win"" by the Boyd disciple Chet Richards are good entry points.The value of OODA isn't really in providing a mode..."		nateberkopec
26472044	11.685304	-7.3856406	comment	4.0	13.5	1615860398	-8.716193	I disagree. A terminating type checker is much more valuable than a possibly non-terminating one. Also I think you're possibly conflating multiple issues here. Higher-kinded types, dependent types and...		slavapestov
26472834	11.798673	-7.26281	comment	4.0	13.0	1615866822	-6.0447974	You had me at immutable but you lost me at snaps		elitistphoenix
26474425	12.237802	-7.528388	comment	4.0	17.0	1615885349	-11.384728	"Java developers are rightfully conservative and sceptical of ""new things"". That said I believe Kotlin really provides a strong value proposition over Java. You also don't sacrifice much, there is less..."		jpgvm
26474959	12.248074	-7.4525347	comment	4.0	14.0	1615890591	-11.387831	Oracle does a really good job improving the Java language. I really don't see any reason for why I should start using Kotlin. I use Groovy when I just need to do something fast without all the boilerp...		olavgg
35536285	11.644227	-7.8676114	comment	4.0	22.0	1681285935	10.2079	C# already had all the advantages of Go (more or less) and more, yet Go is still growing. This has nothing to do with the technical capabilities of the languages.		pharmakom
35536337	11.692278	-7.748038	comment	4.0	12.0	1681286434	10.0619755	> Java has an obviously better type systemHow does Java have a better type system? Java's generics are unsound, while Go's generics are sound. Java's generics do type erasure, while Go does not. Java'...		mseepgood
35537226	11.7463665	-7.8367186	comment	4.0	13.0	1681293229	10.181235	The younger generation chose Go because they're dumb and fell for the Google marketing hype. Most of them have never even used Java outside of school.		tsss
35538227	11.643366	-7.2488875	comment	4.0	17.5	1681300563	9.143893	"The biggest win by far IMHO is a performant alternative for io intensive applications for async frameworks.
Not using an async framework tremendously simplifies your code.
Code complexity has an enorm..."		kosolam
35547973	11.611759	-7.931361	comment	4.0	12.0	1681338805	10.225905	"Still waiting on io_uring in the Go stdlib: https://github.com/golang/go/issues/31908""Unplanned"""		candiddevmike
36550606	11.929189	-7.500295	comment	4.0	12.0	1688222446	-12.418479	If there was one single thing I learned from my functional programming class in college, it’s that there exists a way to implement imperative programming in a pure functional language. I distinctly re...		dahart
36569995	12.314058	-7.030679	comment	4.0	18.5	1688370132	13.182314	The main highlight of this release is the new OOP system: https://perldoc.perl.org/5.38.0/perlclass		xeeeeeeeeeeenu
36570333	12.263981	-7.268122	comment	4.0	15.0	1688373463	7.0758767	Sometimes I wonder if small talk had thrived how different the world might be.For example, we’ve experienced a trend over the last decade of building platforms out of micro services. They have interfa...		asimpletune
36570710	11.985738	-7.241885	comment	4.0	12.0	1688376911	-2.9453	"The prior ""object system"" was just a way to stuff things into the symbol table. I'm hand waving here, but the point is it that the scope of that system ended at ""calling a method on an instance of a c..."		leejo
35558497	11.648733	-7.960888	story	4.0	4.0	1681405229	10.199937	Ask HN: What is the future of Go beyond tooling and cloud infrastructure?		p5v
36593770	12.077777	-7.809103	comment	4.0	11.5	1688513086	8.924737	> A set has the least structure. It's a discrete category, with no morphisms other than identities. Conversely, the category of sets has the most structure, since its morphisms don't have to preserve any structure.https://twitter.com/BartoszMilewski/status/16743572724981104...		pizza
36597742	11.73814	-7.279569	comment	4.0	15.5	1688548105	9.174872	Async is, in many situations, better than traditional threads.Threads are a resource hog. They take a lot of system resources, and so you usually want to have as few of them as possible. This is a pro...		miki123211
36638420	11.915251	-7.024341	comment	4.0	11.0	1688764625	7.5946536	"This is taking a shot at Java, and a pretty old ""joke"" but I've heard of this actually being a thing out in the wild:https://stevenheidel.medium.com/a-factoryfactoryfactory-in-p..."		JohnMakin
36640138	11.745875	-7.0564284	comment	4.0	13.5	1688776979	6.9165053	For things where you don't have to know which type of shape you're actually trying to create - sure. But now consider you're making something that displays shapes in one of two GUI toolkits, depending...		viraptor
36643142	11.797603	-7.3703394	comment	4.0	13.5	1688812764	7.185387	Sounds like you haven't really understood the benefits of polymorphism, encapsulation etc.The general idea is to compartmentalize your logic and only expose the important parts like if you need to gen...		sfn42
36651372	12.135866	-7.110728	comment	4.0	11.5	1688874944	-9.341794	"recently there are a few stories about ""using jsdoc for static typing instead of typescript as a JS programmer"", I wonder when JS can add support of static typing directly as Python did, that will be ..."		synergy20
36665823	11.775281	-7.130511	comment	4.0	11.0	1688994510	-8.71761	"I actually like ""dumb"" service classes with 1 method. Usually that method may require tens of dependencies to function (db connection, authorization logic, etc.), which in turn have their own dependen..."		kgeist
36669062	11.690743	-7.149658	comment	4.0	23.0	1689007830	-8.84739	Is the fact that static methods in Java need to be namespaced to a class really anything to even worry about?  Like, whats even a single issue with it?		jayd16
36673096	11.852023	-7.3745136	comment	4.0	14.5	1689023940	7.049935	"I wouldn't even call ""polymorphism"" an ""aspect of inheritance"" -- you can have polymorphism _without_ inheritance (as a code re-use form), and polymorphism is actually more fundamental and importance ..."		jrochkind1
36682072	12.064376	-7.511496	comment	4.0	13.5	1689088008	-10.526043	"I wouldn't say there is any threshold where purely functional programming shines less. Fewer regressions and the system being more likely to ""just work"" makes it more fun to develop. So for interactiv..."		myaccountonhn
36699648	11.621269	-7.9195604	comment	4.0	14.0	1689187102	10.162459	A new prototype from Gogle for collecting user data and will be dumped anytime soon once it collects enough data or it fails.		MetaverseClub
36725288	11.785881	-7.1849704	comment	4.0	22.0	1689348146	-9.003019	Modern python is no longer dynamic. Type checking is a big part of python now. Python also has ADTs which match it in power to rust.		formulathree
36726911	11.729819	-7.296525	comment	4.0	20.5	1689354985	-8.841816	It’s disappointing that a lot of arguments for typing fail to explore why untyped languages became popular to begin with and how those benefits can be maintained throughout the migration process throu...		tmpz22
36763488	11.623456	-7.875938	comment	4.0	19.5	1689625200	10.013986	Goroutines + channels add an enormous amount of overhead. Using them as iterators is basically insane.		masklinn
36774274	11.967215	-7.315332	comment	4.0	14.5	1689694836	7.085508	Wouldn't it be nice if people would always follow the serious whitepaper structure: abstract, summary, conclusion, measurement...But this wouldn't work for programming language ideologies. Not for the...		vkazanov
36774717	11.652263	-7.9773855	comment	4.0	15.5	1689696407	10.27311	Go was successful because it came after decades of pretty much no language putting good networking tools in their stdlib.		whimsicalism
36775505	11.609649	-7.9447327	comment	4.0	13.5	1689698985	10.240947	I am immensely thankful for Go.The simplicity of the language and the stdlib is shockingly well thought out -- things like io.Reader are so obvious and yet not part of many other languages. The langua...		iamcalledrob
36777663	11.872534	-7.3553443	comment	4.0	10.5	1689707107	7.1215286	> But this wouldn't work for programming language ideologies. Not for the OOP proponents, anyway.Why not? Are you saying that OOP isn't solving any problem?As I understand it, OOP is mainly about allo...		ptx
36778723	12.2950945	-7.530201	comment	4.0	11.5	1689712560	12.801042	besides Ray, are there other tools or platforms that embrace the agent actor architecture model?		skadamat
36786548	12.369032	-7.5147057	comment	4.0	18.0	1689775519	12.861606	Any kind of mechanism like that requires a mental model that carries a ton of state because it is no longer immediately visible what the scope of execution is.Continuations and the way Erlang handles ...		jacquesm
36807928	11.604309	-7.918786	comment	4.0	22.5	1689893952	10.221804	> there is no such thing as good codedefinitely not true. this is good code:https://github.com/torvalds/linux/blob/master/fs/file.cthis is good code:https://github.com/golang/go/blob/master/src/strcon...		38
36812527	11.714307	-7.411074	comment	4.0	21.0	1689938745	9.601655	pretty much this - generics have (rare) implications to the reflection (but it's unsupported as well) but overall they are replaced with the nearest class/interface when compiled.OTOH lack of string i...		xxs
36836895	11.630394	-7.245833	comment	4.0	12.0	1690129915	-8.711364	I must have missed where they discuss the type system. They go to great length to explain that there aren’t classes, methods, etc. and showcase modules such as String, but it’s not clear to me how you know what can be passed to String.whatever.		mberning
36841092	11.614895	-7.320465	comment	4.0	11.0	1690154851	-8.570078	Yes. That's thanks to Hindley-Milner type inference which makes the compiler infer which None you mean. But in longer code snippets full Hindley-Milner type inference can cause hard-to-understand type...		yakubin
36849662	12.157956	-7.5009503	comment	4.0	14.0	1690212857	-10.576731	"On this subject, a question.
Has anybody done this with F#?
To have F# compile to WASM instead of .NET.  Thus have a F# program able to execute on WASM without needing .NET."		FrustratedMonky
36826762	11.915807	-7.3155956	story	4.0	12.0	1690037845	7.0599008	Ask HN: Which CS publication used term “object-oriented” for the first time?		Rochus
36849478	12.094176	-7.8551974	story	4.0	118.0	1690212210	10.463791	Wasm_of_OCaml	https://github.com/ocaml-wasm/wasm_of_ocaml	eriangazag
36972132	11.885505	-7.6396775	comment	4.0	13.5	1690989714	1.1572827	> with lazy evaluationI know it has functions that are lazy, but it's not lazy as in a sense that Haskell is right? I never use it as I find it a ghastly horror show (my taste, other people like it, t...		anonzzzies
36922692	12.256863	-7.0785456	story	4.0	10.0	1690652927	13.156764	Ask HN: Are you using Raku? Pros / cons?		fuzztester
37040895	11.710013	-7.8925614	comment	4.0	15.0	1691442049	10.323025	I skimmed the article, and comparing the two programs, yes, the OCaml one is shorter and more elegant. But it also reads like a math magic spell. There's no type annotations for me to figure out what ...		hardwaregeek
37040989	11.912448	-7.4522843	comment	4.0	15.5	1691442645	7.294101	"Can anyone explain why not ""functional core, functional shell""? Is this partly because the shell has to mostly interact with things like UI APIs, file system APIs, network APIs and database APIs that ..."		seanwilson
37052757	11.658833	-7.826978	comment	4.0	11.0	1691516422	10.103268	100+ frames deep? I am a python dev, is that normal in Go? Sounds atrocious		michaeljx
37057898	11.593039	-7.1588683	comment	4.0	12.5	1691546489	-7.078667	I don't like anything implicit in programming languages. Being explicit does not make code unreadable. Being implicit does make code hard to truly understand and requires being a language expert. What's worse, implicit code often pretends to be simple, while in reality it's not.		vbezhenar
37066410	11.6739025	-7.383789	comment	4.0	11.5	1691604388	-8.779374	I always assumed that complex type systems were driven by enabling better optimization through program analysis since there is more information about guarantees to work with.		Pet_Ant
37068045	12.254027	-7.5555906	comment	4.0	14.5	1691613466	-11.394922	At this point I think the more relevant question is: is there any point to using kotlin if you are not doing android dev?		mardifoufs
37068105	12.15547	-7.562751	comment	4.0	16.5	1691613823	-11.406582	Kotlin is less verbose, has better null safety and mutability is clearer.		randoglando
37070130	12.028402	-7.8121104	comment	4.0	11.0	1691626294	10.407675	Would there be so many ineffective tutorials and bad analogies if having to use monads really wasn't a problem?		c_crank
37096571	11.633305	-7.9635787	comment	4.0	11.0	1691809088	10.291197	But what about gonerators? /s		downvotetruth
37098318	12.048722	-7.8326373	comment	4.0	11.0	1691830516	10.412645	> Unfortunately, LEA became very slow in the recent generations of CPUs. Intel doesn’t suggest this will change.lea is a pretty common instruction even in non-OCaml code so this is annoying.  I wonder...		rwmj
37102257	11.794442	-7.2322	comment	4.0	10.5	1691860545	-10.425747	Do any of the languages that are popular today have object systems that are as powerful and flexible as CLOS?		pmoriarty
37107706	11.623324	-7.96478	comment	4.0	13.5	1691913934	10.206584	Pretty balanced article, but I think it skips over the (for me) main points of using Go:* Go was developed within Google, mainly as a response to C++ projects that had grown unwieldy, in terms of depe...		xyproto
37118722	11.910876	-7.3793635	comment	4.0	10.5	1692001751	9.226776	Hi @SupremumLimit, that was a great article, thanks for sharing. Here are some tiny remarks, in case they help:* About dot when calling anonymous functions, I have just published an article I have bee...		josevalim
37123231	11.654909	-7.9783583	comment	4.0	27.5	1692031685	10.225887	Amen to that. I get super excited about Go releases because they often add useful stuff with zero breakage of anything (just free wins all around). It's not clear that any part of the language is so b...		sudhirj
37123254	11.676751	-7.1068025	comment	4.0	15.0	1692031759	-7.2857966	"If you look at how anonymous functions are compiled at a low level you'll understand why that's not possible:  a function is literally ""the module it's in"" + the bytecode ""line number"" + arity (so tha..."		throwawaymaths
37127686	11.913761	-7.4826674	comment	4.0	10.5	1692052983	9.2604475	Can someone please explain how Project Loom and virtual threads in the JVM affect Kotlin’s coroutines?		yafetn
37131353	11.691866	-7.133404	comment	4.0	13.0	1692086056	9.064188	"Basically you ignore a bunch of the work done for async, callbaks, etc and go back to making a new ""thread"" and handling a request."		spullara
37131675	12.001394	-7.5164065	comment	4.0	11.0	1692089891	9.2447	"Yeah, with this I'm a bit unsure if using coroutines in Kotlin will be worth it?Coroutines will probably benefit from Loom, but will it be worth writing stuff using coroutines vs just using fibers/loom and write it the ""old"" way? Or are there other benefits to be had with coroutines?"		matsemann
37086932	11.847865	-7.3890715	story	4.0	64.0	1691748236	7.2740407	Functional Programming in Modern C++: The Imperatives Must Go [video]	https://www.youtube.com/watch?v=HE71NqRpvTQ	olvy0
37129764	11.893718	-7.403033	story	4.0	19.0	1692069498	7.3140793	Functional Programming 1	https://www.youtube.com/playlist?list=PLA_-EWSPTJcu4i7RFCl_KeGrrz37C4_Oc	chris_wot
37147597	11.8940525	-7.0279365	comment	4.0	14.5	1692196156	7.96675	This was the paper that was the inspiration for my supervisor for my PhD topic at the end of the 1990s. That whole research direction - reflective programming languages - pretty much died on the evolu...		jamesblonde
37164843	11.628515	-7.1612706	comment	4.0	12.5	1692291947	6.420625	Does it (Dart, C#) support exhaustivity checking for such matching over subclasses?		andreypopp
37170982	11.70379	-7.288808	comment	4.0	13.5	1692327764	-8.714095	Can someone please explain to me why people always say THE lambda calculus?		noman-land
37171790	11.591581	-7.912859	comment	4.0	15.5	1692338186	10.214123	This is a tour de force, and it accomplishes the goal of enabling FP using the Go syntax and toolchain.But code written using this library is no longer Go: most Go programmers can't grok it, and it's ...		physicles
37172400	12.012502	-7.8014627	comment	4.0	11.5	1692344117	10.452451	> For example, if I want a recipe for making a loaf of bread, saying “just use flour and an oven” is not very helpful.> Relationship to the Either monad and Kleisli compositionWell, sure the former isn’t very helpful, but I at least know what an oven and flour are.		bandyaboot
37172941	11.979514	-7.6004004	comment	4.0	15.0	1692348702	10.269637	"> Railway Oriented ProgrammingThis term needs to die.I have lost count of how many times people have asked me, on my language-ext [1] issues pages, if the library supports ""Railway Oriented Programmin..."		louthy
37172047	11.656222	-7.75453	comment	4.0	12.0	1692340714	-4.419732	"  data := F.Pipe3(
   T.MakeTuple2(""https://jsonplaceholder.typicode.com/posts/1"", ""https://catfact.ninja/fact""),
   T.Map2(H.MakeGetRequest, H.MakeGetRequest),
   R.TraverseTuple2(
    readSinglePost..."		mc10
37177781	11.650402	-7.949649	comment	4.0	12.0	1692375253	10.232722	Did a cursory dive through, check: https://textual.textualize.io/tutorial/ and https://github.com/Textualize/textual/blob/main/docs/example......what have people had success with in golang-world?  Any...		ramses0
37189895	11.84572	-7.593333	comment	4.0	17.5	1692459804	2.7313724	I listened to this. He talks about language diversity but I never heard Rob Pike mention anything about Haskell or ML style languages and his opinions on that. He never commented on functional program...		corethree
37192388	11.736914	-7.1681314	comment	4.0	11.5	1692474389	9.140353	Non-MicroProfile Helidon uses a reactive interface for most things, which lends itself well to async operations. It a very nice, simple and powerful abstraction that makes async relatively easy. IMO a...		Two4
37247781	11.984012	-7.72969	comment	4.0	14.5	1692878240	10.407214	"> Second, this is similar to the ""equalise things by dragging everyone down to the same level""-type of thinking.> and not allowing for an opportunity to write really good code. Basically, enforced med..."		mathisfun123
37247788	11.9803095	-7.705084	comment	4.0	22.0	1692878278	10.370558	If I had to choose the three big factors that contributed to my gradual loss of interest in Haskell, they were these:* the stylistic neophilia that celebrates esoteric code but makes maintenance a cho...		pooya72
37249167	11.975583	-7.630352	comment	4.0	16.0	1692887518	10.331167	Perhaps, but what you may not understand is that not ALL developers _want_ a purely functional language. For some, things like Kotlin hit a sweet-spot. One can lean a bit more into a functional style,...		nobleach
37249884	12.239055	-7.5551186	comment	4.0	13.0	1692890534	-11.375005	Kotlin doesn't get enough love. It gets derided by some Java developers for being too cutesy and sugary and it's not talked much about by the kinds of people who love to talk about Haskell, Lisp or Rust (no shade to these languages), but to me it's the most pragmatic language I've used so far.		Tainnor
37269689	11.871756	-7.2811804	comment	4.0	11.5	1693020220	7.0345516	So they didn't use an object-oriented programming language, they used a functional programming language.		MavropaliasG
37277145	11.696907	-7.925949	comment	4.0	17.0	1693085860	10.2260685	"The big upshot of Jekyll for me is that I can use Ruby plugins, and that Ruby allows me to do Crazy Stuff™ with monkey-patching. This means I both have a ""works out of the box experience"", but that I ..."		arp242
37168407	12.187613	-7.2087317	story	4.0	5.0	1692307954	-11.46928	Ask HN: What's Up with Kotlin and Spring Boot?		dakiol
37155189	11.775183	-7.1813097	story	4.0	15.0	1692228143	7.0021887	Object Oriented Programming in C (2006)	http://ldeniau.web.cern.ch/ldeniau/cos.html	tyranocyte
37249508	12.402056	-7.6306047	story	4.0	1.0	1692888928	-11.084515	Ask HN: What is a good web stack for solo founder?		e3bc54b2
37295456	11.752685	-7.302933	comment	4.0	11.5	1693235805	-6.436637	What's the difference between constant and immutable?		hardlianotion
37306266	11.787992	-7.126668	comment	4.0	14.5	1693309406	-8.908978	Not even, I believe objects in python are just maps with some syntax sugar. I’m not sure what this is buying over a static class aside from being slower and more awkward to use?		phyrex
37307077	11.655407	-7.862727	comment	4.0	13.0	1693313747	10.135271	The go runtime has similar capabilities as the BEAM runtime when it comes to concurrent workloads. Go has the benefit of being a typesafe compiled language which gives it speed benefits. But using eit...		zaphar
37312938	11.978777	-7.183108	comment	4.0	12.5	1693338459	8.999079	"Not an experienced JS dev here - if that is the case, then what is the difference between a ""service worker"" and a simple async function running in the  background?"		bheadmaster
37313796	12.393089	-7.0533834	comment	4.0	20.0	1693341968	12.373847	"Only one of the items in your ""such as"" list is unique to python's philosophy, and that is ""there should be one way to do it"". Ruby embraces the many ways to accomplish something, it's true. However, ..."		CTmystery
37313937	12.122613	-7.036712	comment	4.0	13.5	1693342470	13.183147	"That was my experience. I like Perl. I'm comfortable with Perl. And after about a day of Python, I never wrote another line of new Perl code.There were so many ""it can't possibly be that easy, but it ..."		kstrauser
37314379	11.76661	-7.374467	comment	4.0	18.0	1693344489	-8.871184	nothing like having dynamic types manage your money		dataangel
37314008	12.486252	-7.0340424	comment	4.0	26.0	1693342770	12.387621	What concepts does a language force a new user to be aware of, and how reliable are user's first intuitions about those concepts?I would argue that Python dominates Ruby in this metric.New users wonde...		Buttons840
37357759	11.947797	-7.497414	comment	4.0	11.0	1693616736	9.255996	Coroutines and concurrency are orthogonal. Coroutines can be used as a primitive in concurrent programs, but the core concept is that of a suspended computation; think replacing callbacks with 'async'...		tadfisher
37368256	11.677875	-7.204869	comment	4.0	12.0	1693723936	9.354253	"I'm always wondered why some people prefer to use a lambda in a variable instead of just a function.I'm referring to using    var f = (a) -> code;

Instead of    function f(a){ code }

Which are exact..."		TrianguloY
37405151	11.9655695	-7.6296988	comment	4.0	15.0	1694008382	10.422376	I did Advent of Code in SML a couple years ago. It was an interesting experience. I don't think I've ever previously experienced such a vast disconnect between the quality of the core language, and th...		bunderbunder
37414584	12.274443	-7.626852	comment	4.0	15.5	1694059025	12.833533	If you are familiar with Go, it's similar to a goroutine that waits for someone to send it an anonymous function to start executing. In Erlang, you solve problems by spawning lots of processes, and mo...		softirq
37416817	12.509311	-7.5164394	comment	4.0	11.5	1694081250	12.885891	Don't know Erlang aside from high level understanding about the language (basically know what one who read about it, but never programmed in it, would). Why is this needed (or, at least why is it nice...		coldtea
37418924	12.022638	-7.806201	comment	4.0	15.0	1694094748	10.497141	> Because, that's nowhere near general enough to describe what monads can doTotally disagree. You are effectively saying you cant define anything unless you include every case, which is clearly nonsen...		supermatt
37324316	11.716928	-7.2492537	story	4.0	5.0	1693412260	9.112834	Ask HN: Does async/await exist for transient processes?		VikingCoder
37436037	11.928725	-7.1926227	comment	4.0	11.0	1694191603	9.140598	> Async/await was a terrible idea for fixing JavaScript's lack of proper blocked threading that is currently being bolted onto every language.As fun as it is to hate on JavaScript, it's really interes...		mrkline
37436522	11.591294	-7.6071906	comment	4.0	14.5	1694193710	9.375805	Always with the blooming red and blue functions. You can say exactly the same thing about const.The fact that a function can perform asynchronous operations matters to me and I want it reflected in th...		omnicognate
37443213	11.641876	-7.8982067	comment	4.0	13.5	1694246403	10.199303	This article outlines well the paradox that JITs require to be truly more efficient: if more of the target language is available to optimize, it'll get waaay more optimized, compared to dropping down ...		chucke
37449229	11.707785	-7.1922274	comment	4.0	30.5	1694286826	8.876413	I find async is so much fun in Python and meshes with the other things you can do with generators but that is because I have the reference collector cleaning up behind me.Looking back with like 30 yea...		PaulHoule
37449469	11.7547	-7.2623286	comment	4.0	16.5	1694288267	9.176693	async is not free. It will turn your code into a big state machine and each thing you await will likely create its own thread.There is simplicity in a avoiding that and having code that gets compiled to something that is straightforward and single threaded.		charcircuit
37449611	11.742695	-7.2849116	comment	4.0	13.0	1694289161	9.153055	Awaits don’t create threads, at least not in any runtime I know of. There is usually a fixed number of threads at launch.		api
37458322	12.241362	-7.516632	comment	4.0	11.5	1694368911	12.821895	It says that it's actor-based, and sending messages to an actor is equivalent to running the actor function under a mutex, and thus reduces parallelism (in other words, you have N threads sending mess...		devit
37471291	12.102869	-7.472187	comment	4.0	12.0	1694456207	-10.554448	I think the answer is: because Microsoft let it. I'm a big fan of modern .NET, but my biggest complaint is that Microsoft views, and always has, the CLR as the C# Language Runtime and not the Common L...		bmitc
37504901	12.0018015	-7.2489	comment	4.0	13.0	1694664895	11.9298935	> largely mature, feature-complete softwareDepends on the language.I use mostly Scala and Rust and both have significant issues still with incorrect syntax highlighting, refactoring being limited and slowness with larger projects.		threeseed
37527036	11.670575	-7.8476954	comment	4.0	12.5	1694801539	10.134754	> Java is easily faster and more reliable than GoI work in Java for my day job and I disagree.1. Cold starts for Java serverless (lambda) are worse than scripting languages2. For everything else, Java...		Xeoncross
37533415	11.882442	-7.0922284	comment	4.0	11.5	1694857961	-10.749226	Is asyncio over engineering for this line of work?  How much concurrency is really needed here and couldn't it have been addressed by threads instead?		say_it_as_it_is
37536092	11.770603	-7.118051	comment	4.0	11.0	1694880929	5.1187644	if you just need to apply standard patterns than you are not actually inventing but just doing code monkey stuff, and you can’t really call that engineering		b20000
37539173	12.35298	-7.067498	comment	4.0	11.5	1694901684	12.28407	"Sorry, what? Is not java toghether with Ruby maybe the most hardcore OOP enthusiasts that uses inheritance for ""most stuff"".Has the java culture move so far the last decade ?"		sisve
37539262	11.846686	-7.3261905	comment	4.0	12.0	1694902208	7.0005064	"Inheritance provides ""is a"" relationships between classes. At a time when people would spend months designing their software upfront, building big diagrams of classes, etc, this was not so bad. You'd ..."		insanitybit
37540008	11.654731	-7.963551	comment	4.0	16.0	1694908196	10.244619	> This is mostly because applications and libraries are so hard to reason about and understand due to inheritance, packaging, OOP, build tools ect compared to Go.You are just at the early phase of the...		kaba0
37541777	11.760837	-7.319135	comment	4.0	13.0	1694928091	9.183885	Do give async/await in C# a try, it has all the structured concurrency features other languages have to invent APIs and special syntax for :)(if you want to take a look at good structured concurrency, you might be interested in Swift implementation)		neonsunset
37542078	12.084851	-7.5606794	comment	4.0	11.5	1694931810	11.874467	Yes. In Scala people seem to say it's the idiomatic way to sum a list of numbers which never felt right to me. It just seems to much code to look at for that.		da39a3ee
37542420	11.696701	-7.3649898	comment	4.0	12.5	1694935643	9.214444	Why async/await is not a good thing? What makes green threads better? Do you know the difference, the issues async/await addresses that green threads simply do not?		neonsunset
37541221	11.682495	-7.1024313	comment	4.0	22.0	1694921009	8.978725	reduce() abuse is a peeve of mine.		recursive
37544609	11.866147	-7.332683	comment	4.0	13.0	1694955663	10.031232	The biggest problem with Java is... the walled garden, the snob society, the elitist, exclusive culture.Go isn't like that, or at least wasn't when G+ was still around.Nowadays I don't get in touch mu...		lakomen
37576677	11.625002	-7.964666	comment	4.0	12.5	1695157660	10.2052555	Doesn't that mean that all code written so far can't take up newer versions of the Go compiler for any other reason like new features/bugfixes/optimizations/etc without a full audit of codepaths involving for loops?		sixstringtheory
24421058	11.9933815	-7.7315264	comment	4.0	14.0	1599660115	10.420918	My personal experience with Haskell hackers went like this:-I used to hang out at lambda-the-ultimate, in which haskell was considered god sent and c++ a toy language. At the time, I was heavy into wr...		axilmar
24422887	11.776179	-7.3316474	comment	4.0	11.0	1599669962	7.0217385	A class, generally speaking, is a binding of functions and data.In the functional example, where does Person store the fName and lName variables? Is there an intrinsic/hidden 'this' pointer? If functi...		drchopchop
24429973	11.99435	-7.1634073	comment	4.0	11.0	1599724812	9.109271	Thanks to the async/await keywords, modern javascript is not a callback hell anymore.		speedgoose
24434551	12.334575	-7.045294	comment	4.0	12.0	1599758953	13.185971	"I used my pinned tweet (https://twitter.com/hyperpape/status/1050402656181735426)""Learning Perl6 is like being stuck in a small dark room with a bat that's flapping around wildly, and talking to the b..."		hyperpape
24443659	11.7418	-7.6723013	comment	4.0	17.0	1599837077	10.238988	I've been using Scala quite heavily recently, having mostly used Haskell for years, with distant memories of Java. Scala allows Java methods to be called, but doesn't bother with checked exceptions, w...		chriswarbo
24445110	11.606857	-7.4212785	comment	4.0	11.5	1599845256	9.705509	>This irks me too. It's been a while but I believe the workaround is just to define your own (checked) FunctionE, SupplierE, ConsumerE functional interfaces. But maybe that causes other problems I've ...		tpxl
24447762	12.071107	-7.5873713	comment	4.0	11.0	1599861377	9.7217245	> Kotlin has no mechanism to force error handling.I was referring to nullability support, which is similar to Option/Maybe, except that it's enforced by the compiler. This is pretty unique to Kotlin at the moment (honorable mention to Ceylon which offered similar support).		hota_mazi
24452421	12.48503	-7.4248815	comment	4.0	11.0	1599918873	12.911039	"Elixir looks pretty interesting however lack of static types has held me off from picking it up. Curious what the experience of people with typespecs and  Dialyzer has been:
1. How close do you think it comes to static types?
2. Does it have good IDE plugins providing type errors as you code?"		jatins
24453186	11.998023	-7.768734	comment	4.0	15.5	1599924481	10.432884	I love this. It reminds me a lot of the work I did in Prism to port what I learned using Haskell in TypeScript: https://dev.to/vncz/forewords-and-domain-model-1p13Reading the article, I do have some s...		XVincentX
24470709	11.64942	-7.9316864	comment	4.0	11.0	1600094572	10.196605	The `go` program uses -longopts and I think it would be hard to argue that Rob Pike lacks an appreciation of Unix traditions.		jeffbee
24473153	11.9540205	-7.471128	comment	4.0	13.5	1600106685	7.350572	Another point in favor of the authors thesis: pure functional programs continue, two decades into the 21st century, to not be widely used in spite of their syntactic popularity.  Software still continues to not be written at significant scale in Lisp, or Haskell, or even Scala.		commandlinefan
24480917	11.778271	-7.0162625	comment	4.0	12.0	1600176339	-6.9401236	Can you explain why you find mutability to be a showstopper? Is this a front end developer thing?I like my consts and all where relevant, but I don't see why mutability is such a problem. Javascript i...		jeroenhd
24482089	11.680727	-7.0581913	comment	4.0	12.0	1600182815	8.618645	Fully agreed about java libraries and frameworks being more allocation-heavy than they need to be. The problem is that the libraries and frameworks are built using the abstraction capabilities it has,...		darksaints
24532408	11.793026	-7.315483	comment	4.0	15.0	1600585713	7.0284834	As a present day Lazarus/Free Pascal programmer... I found this dive into history interesting. I had an almost allergic reaction to the idea of not type checking everything at compile time, but I do s...		mikewarot
24538700	11.6509905	-7.957552	comment	4.0	12.0	1600648948	10.236855	> As I've said before, Go has the advantage of mediocrity. It's boring as a language, but it does automatically most of the things you need for web back-end stuff.Given that Go is essentially a safer,...		SrslyJosh
24490036	11.987187	-7.7669463	story	4.0	89.0	1600237066	10.409681	Which monads Haskell developers use: An exploratory study	https://www.sciencedirect.com/science/article/pii/S0167642320301313	paulcarey
24565631	12.023315	-7.7460175	comment	4.0	12.5	1600860158	10.417773	SML inspired many languages: Elm, F#, F*, OCaml, Python, Rust, Scala, Modern Java(which looks more and more like an OCaml on the JVM), JuliaI really don't know why people think Haskell is the pinnacle of everything in PL design.		johnnycerberus
24567071	11.635259	-7.716131	comment	4.0	23.5	1600869297	10.279453	"I mean if we save the ""intellectual superiority"" of Haskells or other FP languages -- (I've used them all) -- in practice with teams of other engineers, and in production where it counts the most, Go has outshined them all. So primitive is surely a way to describe it."		dimitrios1
24576140	12.134063	-7.8717875	comment	4.0	14.5	1600931807	-3.2128253	Category theory is also very relevant to programming.  But, curiously enough, learning and practicing programming is probably a better intro to eventually get to category theory, than the more usual a...		eru
24605400	11.808996	-7.3589163	comment	4.0	14.0	1601199275	-8.865365	Statically typed languages (or at least the good ones) are disciplined so the programmer doesn't have to.If you can work reliably with dynamic typing, that means you are very disciplined about giving ...		loup-vaillant
24605134	11.804269	-7.348897	comment	4.0	12.0	1601195623	-8.867138	An interesting insight I came across a little while ago is that for mainstream, industrial languages, this way of thinking about types is relatively new. It's not that we're seeing the pendulum swing ...		haileys
24607424	11.755498	-7.330339	comment	4.0	30.5	1601221061	-8.808022	"> ""Is possible to do"" isn't the same as ""helps you to so""The things that help you usually also limit youSee: training wheels or armbandsI've seen much code written in static typed languages (mostly JV..."		romanoderoma
24607808	11.923362	-7.194489	comment	4.0	17.0	1601223865	-10.265749	> Types are meant to document code. Without the annotations, you can't look at code and know what is going onWith the rise of VSCode IntelliSense/JetBrains code inspection, do you believe this is stil...		billisonline
24616572	12.267129	-7.286385	comment	4.0	13.0	1601301107	7.066174	This might be stupid question but would it make sense to forgoe linking a monolithic binary altogether and just load the different bits dynamically at startup from various object files or something li...		zokier
24632225	11.859663	-7.074665	comment	4.0	11.0	1601409477	9.0460005	"I would have come up with something like this:Object.entries(Array.from(new URLSearchParams(""foo=1&foo=2&foo=3&blah=a&blah=b"").entries()).reduce((a,[k,v]) => ({ ...a, [k]: [...a[k] ?? [], v]  }), {})).map(([key, values]) => `${key}=${values.join("","")}`).join(""&"");"		Ciantic
24635401	11.723507	-7.766144	comment	4.0	13.0	1601436256	10.337841	Any pointers to a comparison between Clean's uniqueness typing and GHC's linear types?  And is Rust the motivating factor behind linear types cropping up lately?  I see Idris is now getting them as well.		flubert
24636188	11.827819	-7.1888466	comment	4.0	11.5	1601447237	-8.980685	> Type hints in Python are mostly for linters and code checkers, as they are not enforced at run time by CPython. PEP 585When you think about why that is, it makes sense, but I still find it annoying ...		wodenokoto
24643245	11.685768	-7.108509	comment	4.0	20.5	1601496698	-8.841263	I wonder what the carbon impact the use of those inefficient dynamic languages has had, in both desktop and backend environments?I imagine it's substantial and worth considering.		dleslie
24648984	11.949459	-7.380998	comment	4.0	30.5	1601543759	6.9872255	"And also: ""Minus all the OOP, and then some."""		aldanor
24674724	12.258698	-7.3119855	comment	4.0	14.5	1601759692	7.1021023	Why should there be a link between C++ and Smalltalk?		Rochus
24676251	12.023152	-7.7478848	comment	4.0	11.0	1601780999	10.457598	"I see a lot of users forgetting that it's an opinionated history. The author hasn't claimed to make this exhaustive.Further, it's a bit counterproductive to just point out f""Hey, what about {some_lang..."		adenozine
24605900	11.692905	-7.2633576	story	4.0	43.0	1601206990	-8.822699	Modular, composable, typed optimizations in the tagless-final style (2019)	http://okmij.org/ftp/tagless-final/course/optimizations.html	fanf2
24614788	11.726675	-7.3981233	story	4.0	114.0	1601285901	-8.791405	Type Systems Explained with Examples	https://thevaluable.dev/type-system-explained/	thanato0s
24692326	11.775622	-7.331944	comment	4.0	27.5	1601933870	-8.937036	Any word on if strong typing enforcement will ever happen? I’m sure it’ll only ever be optional but it’s the single biggest wart in the language imo.		hsbauauvhabzb
24716990	11.828665	-7.6482005	comment	4.0	13.0	1602144324	-9.599171	How many functions have you seen, in Haskell, that take Nonempty a versus taking [a]? There are reasons why this type of pattern doesn't scale well, and the Haskell designers knew it. Similarly, if they had defined head [a] -> Optional a, that would have produced complications of its own.		tsimionescu
24720826	12.031376	-7.816418	comment	4.0	14.0	1602175104	10.504847	Looks like 2021 is shaping up to be a fantastic year of Ocaml. I know I've been digging into it, trying to sharpen my skills in FP.I think Ocaml's learnability is a huge asset. I'm surely biased, my m...		adenozine
24738438	12.025783	-7.436849	comment	4.0	22.0	1602332328	-10.56955	The article goes through a series of examples to show motivations for the following:1. Variables should not be allowed to change their type.2. Objects containing the same values should be equal by def...		Lavinski
24762002	11.64825	-7.9473686	comment	4.0	11.5	1602560034	10.214479	Shameless plug nextmv (YC W20) https://nextmv.io/ is building tooling in the same space in Go and were cloud native / serverless first.I used optaplanner at a previous gig before working at nextmv — w...		leetrout
24823597	11.612792	-7.1625714	comment	4.0	10.5	1603086036	9.028487	I think also we have learned why map/reduce or functional recursion is better than for loops - because the state of the system is explicitly contained; with a for loop you could literally mutate anyth...		dnautics
24739237	11.900043	-7.309863	story	4.0	3.0	1602340351	7.0744596	Ask HN: Is Immutability new OOP kool-aid?		higerordermap
24816407	11.824617	-7.148437	story	4.0	40.0	1603011061	4.9996085	Patterns of Biophilic Design	https://www.terrapinbrightgreen.com/reports/14-patterns/	DeusExMachina
24845554	11.654447	-7.978386	comment	4.0	10.5	1603265449	10.214435	> I'm a Go developer and I notice a lot of other Go developers instantly suggest things like GORM to noobs writing applications.And there is nothing wrong with that. It's like recommending against the...		throw_m239339
24851774	12.395483	-7.3363004	comment	4.0	13.0	1603312020	-8.922706	I wish there was a python implementation that ran on BEAM.		adenozine
24871047	12.013286	-7.2071753	comment	4.0	14.5	1603469700	9.228771	"why would one stick with callbacks?
i understand why people might skip promises... but async/await????"		mpfundstein
24880015	11.883647	-7.2487407	comment	4.0	20.0	1603555790	7.091309	I think anyone who has coded long enough would recognize that OOP, functional, imperative, etc all have their strengths and weaknesses, and all have problem domains they are better suited for. Unfortu...		atty
24880101	11.920907	-7.4946547	comment	4.0	12.5	1603556421	7.264947	>Sure, there have been games written in Lisp and some games written by language dilettantes fond of Objective Caml, but they never turn out to be programmed in a functional style. You can write impera...		savanaly
24880258	11.704955	-7.2061186	comment	4.0	12.5	1603557592	-6.548912	Before reading this article and its follow-on, I would have completely endorsed the view that global mutable state is the worst, but for the sorts of issues the author is writing about, it seems that ...		mannykannot
24884809	11.986713	-7.7231064	comment	4.0	11.0	1603615863	10.458018	Yes, it is the only program coded in Haskell I have ever used for anything practical, to my knowledge.I have heard of others, like git-annex, but not used them myself. I wonder if there are any I just...		ncmncm
24885973	12.004632	-7.758215	comment	4.0	12.0	1603630971	10.444395	There seem to be not so many haskell applications that succeed to the point where they are of general use, as in not simply useful to programmers doing programming (probably in Haskell) At least this ...		harry8
24891143	11.967019	-7.559121	comment	4.0	11.0	1603668764	10.428936	Not a huge fan of ML for the Working Programmer, personally. I'd love to see (or one day write) the equivalent of Practical Common Lisp (which itself needs an update at this point) because MftWP is so...		eatonphil
24891382	11.965946	-7.727123	comment	4.0	17.5	1603670798	10.429195	> Despite this, the language doesn't have the academic flaws of its descendants like Haskell.Can you elaborate on what those flaws are?		skissane
24894740	11.71414	-7.37561	comment	4.0	12.0	1603709576	-8.915628	I would take compile-time type checking over any of Lisp's features for controlling complexity in large projects.		foldr
24897819	11.679877	-7.1066966	comment	4.0	19.5	1603729261	8.625434	Speaking from experience with JVM HFT applications (we used Scala).There are a lot of tricks though to not require 1TB.And allocation in general is a bad idea even if you don't collect because it scat...		benjaminjackman
24911243	12.130932	-7.870096	comment	4.0	12.0	1603829235	-3.2582433	I've been wanting to go towards category theory, homotopy type theory, etc. but I realized I need more abstract/algebraic geometry and then I need some topology, etc before category theory so I have m...		macromagnon
24937651	12.421459	-7.080051	comment	4.0	10.5	1604016594	12.374298	> Blocks are one of the most confusing, yet most powerful elements of Ruby. They allow you to group expressions, save them to a variable, and even pass them to a method. I’m still getting used to bloc...		nlh
24946029	11.685877	-7.4255834	comment	4.0	19.5	1604086544	9.234488	Can anyone fill me in on how this compares to Java's Project Loom approach where they have said a hard no to coloring functions. What are the advantages and disadvantages of async/await vs introducing a green thread like approach for problems?Is async/await more suitable for user interfaces?		bestinterest
24946103	12.311787	-7.509222	comment	4.0	16.0	1604086910	12.865369	All languages end up with simple concurrency primitives such as async/await.No one takes the next steps and introduces the high-level primitives you actually need to work with actors and concurrency i...		dmitriid
24959568	12.25481	-7.5768604	comment	4.0	19.5	1604239633	-11.373954	Kotlin Multiplatform looks really cool and limiting code sharing to non-UI code makes much more sense to me. However, I wonder if/when/to what extent the abstractions become leaky.For me it makes perf...		filleokus
24964494	11.740981	-7.448251	comment	4.0	22.5	1604286390	-8.759141	Read the article more carefully. I wrote in multiple places that the use of newtypes does provide real safety.> If you are fond of newtypes, this whole argument may seem a bit troubling. It may seem l...		lexi-lambda
24965213	11.6641655	-7.4237823	comment	4.0	16.5	1604297414	-8.74239	> Read the article more carefully.This is unnecessarily rude. Maybe you should have written the article more carefully, or read my comment more carefully.> newtypes are useful, but only when used in c...		lmm
24975545	12.142391	-7.6923785	comment	4.0	14.0	1604368130	11.801505	"OP here. I don't know Scala or Haskell well enough to make a ""correct choice"" either now or then, but basically I had some experience with ML type systems (from Elm and Haskell) and thought sum types ..."		pbiggar
24980246	11.789255	-7.8915834	comment	4.0	14.0	1604415934	10.401203	That's a pretty weird takeaway considering the long and detailed post on OCaml's issues that motivated a full rewrite: https://blog.darklang.com/leaving-ocaml/> One of my biggest annoyances was how of...		throwaway894345
24980295	12.034404	-7.5157943	comment	4.0	11.5	1604416216	-10.593174	> It actually has a much better type system, in my opinion.I don't know how anyone can say that with a straight face about a type system that has both Option & null(granted Rust technically runs into ...		__s
24987307	11.976642	-7.733161	comment	4.0	15.5	1604478671	10.471326	It did to me.He slams go for not doing stuff the Haskell-way (e.g. pure code vs effectful code).This is not how you approach new things		panpanna
24986864	11.738404	-7.3032722	comment	4.0	18.0	1604472246	-8.835612	Definitely! I couldn't get my head around why people like untyped languages, but I keep an open mind on it. I won't close off that they could be better, if the right patterns/practices are used (whatever they are!)		quickthrower2
24987665	11.788214	-7.362744	comment	4.0	11.0	1604483158	-8.897344	I joked with a friend that as people get older they start to prefer static typing. I personally don't have a preference, it depends on the application. I think it's obvious what are the advantages of ...		linspace
24987769	12.1703825	-7.624397	comment	4.0	21.5	1604484436	11.9261265	"Scala is weird. Sometimes it feels fluid and effortless but sometimes it simply cannot do things you would expect it to. For example, chaining custom methods. Why is it possible to do ""arr.map(_.nonEm..."		tastyminerals2
24987916	12.166978	-7.6205025	comment	4.0	14.5	1604486686	11.948386	"There is no straighforward elegant way of doing ""obj.scalaMethod.myCustomMethod.scalaMethod.myCustomMethod"" in Scala. I want to create a method and just inject it into the chain, no fiddling or duckta..."		tastyminerals2
24998637	12.1645355	-7.04413	comment	4.0	11.5	1604587312	-10.28032	Static typing can be a bitch to get right. There are quite a few weird cases where it would be natural to write without types, but tricky once you introduce static typing and want to keep pleasing the TypeScript type checker, usually involving generics.		k_sze
24999045	11.822632	-7.2507234	comment	4.0	10.5	1604590128	-8.894377	This is true for any language, strongly typed or otherwise, with or without memory management. The evidence gathered in the last decades is pretty clear: there is little to no advantage using a strong...		chpmrc
24999784	11.72621	-7.895992	comment	4.0	10.5	1604595434	10.124807	If there is something similar with Django on golang ecosystem, I would use golang more. Battery-included web framework seem to be out of style these days and no one invest in developing one for newer ...		neurostimulant
25006251	12.010141	-7.762924	comment	4.0	29.0	1604654226	10.402407	Interesting. I've been programming in python for more than 4 years and I'd like to try something different.I took a haskell class back in the day but just the basics, didn't even learn monads.My goal ...		miguendes
25006366	12.000424	-7.737422	comment	4.0	15.0	1604655513	10.434734	To build some real world web applications check out IHP: https://ihp.digitallyinduced.com/It's a truly batteries-included way to get started with building real world haskell web apps in minutes.		_query
25044680	12.206354	-7.6247916	comment	4.0	15.5	1605006796	12.004221	"In no particular order:- the JVM- the tooling for writing with VSCode- SBT- NullPointerExceptions bubbling up from Java libs- the split between the functional programming community and the ""Scala is j..."		Fiahil
25049821	11.822416	-7.1361804	comment	4.0	12.5	1605034700	8.8392105	Aren’t records pretty trivial to create as a custom class in C#?		jimbob45
25051192	11.68914	-7.9370933	comment	4.0	13.0	1605039091	10.209841	I love Go, but the lack of adoption in business world is a huge problem. Seems to be a niche for infrastructure and utilities. 99% of the jobs I see are Java or Python.		x87678r
25059027	12.46005	-7.0909195	comment	4.0	21.5	1605107761	12.383992	This illustrates one of the biggest downsides of dynamic languages - refactoring. Compile-time checking saves you from having to detect copy/paste/delete errors at runtime. A good IDE can help, but it...		drchopchop
25059639	11.797578	-7.180099	comment	4.0	14.5	1605111814	-8.947046	I agree that it can be harder in dynamic languages, but it's a continuum and not a dichotomy.On one end you have completely dynamic languages like Smalltalk where basically everything is late-bound, a...		mumblemumble
25072408	12.1503105	-7.5182543	comment	4.0	12.0	1605203127	-10.611414	That's all well and good, but it drives me crazy Microsoft refused and refuses to invest in F#, which could have very well been the Python of today if they had paid any attention to it.		bmitc
25075123	11.828358	-7.13116	comment	4.0	14.5	1605215541	-8.969377	I've worked with an O(100k) line code base in Python that was pure torture. Honestly, I was so desperate for static-typing by the end that I would have preferred if it was all written in C++.Large cod...		commonturtle
25093795	11.925586	-7.357019	comment	4.0	10.5	1605374819	6.9759707	"For the uneducated, what is an ""OOB"" here?"		sidewndr46
25014513	12.305464	-7.513259	story	4.0	84.0	1604748991	12.852306	Advanced Join Patterns for the Actor Model Based on CEP Techniques	https://programming-journal.org/2021/5/10/	mpweiher
25101768	11.66286	-7.957462	story	4.0	73.0	1605453176	-2.4731283	Golang web service framework with DI, Telemetry and more	https://github.com/go-masonry/mortar	go-masonry
25118024	11.925834	-7.2640514	comment	4.0	23.5	1605566566	8.553528	Same story repeating over and over again.Initial hype. Then abuse and overuse. Disillusionment. Decline. At some point people will finally figure out what OOP is all about by looking up decades' old w...		lmilcin
25118380	12.266815	-7.503075	comment	4.0	12.5	1605568945	12.824631	I think Alan Kay himself has suggested that what he really wanted when thinking of OOP was something more akin to the Actor model as espoused by Hewitt and realised by Erlang and to a lesser extent Sc...		faichai
25121634	11.814822	-7.3140717	comment	4.0	12.0	1605604865	7.087218	"By now, most of the classes I write are immutable and I use inheritance rarely (although I do use interfaces).The one feature that I still find very useful from OOP is the ability to have a ""shared co..."		Tainnor
25148207	12.0024395	-7.7496023	comment	4.0	17.0	1605783241	10.398331	> For the past few years I’ve been trying to learn haskell in various ways but have never been able to stick to the method, let alone actually “become productive” in Haskell.Have you tried doing somet...		yakshaving_jgt
25148587	12.443526	-7.06936	comment	4.0	16.5	1605786669	-10.964201	The issues raised here completely align with my problems with Rubocop.It seems that a lot of people think that one of the main goals for code linting is consistency, when that shouldn't be a goal at a...		wlll
25163698	12.498102	-7.0307627	comment	4.0	14.0	1605898995	12.377014	I wish this had been available years ago!I think Ruby was an excellent replacement for Lua to do ML, once Torch ran out of steam due to LuaJIT memory limitations. However, historically, MRI Ruby was s...		nextos
25180802	12.43159	-7.4551578	comment	4.0	12.0	1606077243	-9.008912	So... does this work with distributed Erlang or hot code reloading? Because those are the reasons[1], to my knowledge, that statically typed language won't fly.Really stoked to give this a whirl![1] I...		rubyn00bie
25180891	11.622505	-7.5644794	comment	4.0	12.0	1606077858	9.240012	You're saying it's not a problem, but let's say you didn't think ahead and want to add tracing later, and there are many intermediate function calls between top level and the place where you want to trace. You still have to change every function signature to add the colors, right?		skybrian
25183979	11.95993	-7.0696855	comment	4.0	11.0	1606110957	9.101399	One reason JS makes sense (in; for example, robotics): For all of JS’ problems, it handles async wonderfully. I can think of plenty of actions in robotics that boil down to “do these 3 things concurre...		Townley
25194723	12.011966	-7.7206783	comment	4.0	11.0	1606185948	10.407843	I've seen this come up on reddit ads - has anyone tried it out ? Does it live up to the claim that its Rail's for Haskell ? How does it compare to any of the other web frameworks out there ?		ozmaverick72
25222912	11.71369	-7.0223665	comment	4.0	15.0	1606419194	8.294126	So Java is nearly as low-latency as C if you're willing to write your Java as if it were C?		DC-3
25225798	11.597081	-7.9588923	comment	4.0	12.5	1606455597	10.221508	“C was several steps back from the state of the art in PLs”This very accurately describes Go		wikibob
25240905	12.390279	-7.3674455	comment	4.0	12.5	1606600634	-8.82943	There is a huge problem with this sadly, the startup time of the BEAM is too much! I was thinking about having a running VM process and injecting code directly, but I think this could be quite insecure. Love the idea though.		andy_ppp
25241368	11.618237	-7.931352	comment	4.0	15.0	1606605046	10.230816	"I personally despise people combining terms like ""fast"" or ""lightweight"" with languages like Go and Python.
We are looking at a build system that, to my knowledge, doesn't take any advantage from bein..."		high_priest
25246450	12.312546	-7.046499	comment	4.0	14.5	1606670361	13.182973	> I started working on DwarFS in 2013 and my main use case and major motivation was that I had several hundred different versions of Perl that were taking up something around 30 gigabytes of disk spac...		dj_mc_merlin
25166612	11.6594715	-7.950191	story	4.0	25.0	1605916705	10.233195	Go type parameters (generics) scheduled for Go 1.18, Feb 1 2022 release	https://groups.google.com/g/golang-dev/c/U7eW9i0cqmo/m/ffs0tyIYBAAJ	filleokus
25256414	12.252056	-7.4906006	comment	4.0	12.0	1606757734	12.873735	Love Erlang and Elixir and Beams concurrency model is quite interesting. This Rust variant seems very interesting as well. But I wanted to discuss this part:> In most cases it's enough to use a thread...		didibus
25263182	12.031838	-7.8107257	comment	4.0	11.5	1606807578	10.448804	"I cannot imagine a mathematics lecturer telling his students ""a monad is like a burrito"". Sometimes I think the analogies can actually hurt our understanding of something very abstract or novel, as is the case with the bad burrito analogy."		willtim
25302464	11.692195	-7.329172	comment	4.0	11.0	1607091832	9.144043	"I don't think ""task cancellation"" is quite the major difference you think. If you model it as thread A wants to cancel thread B, then while threading means that A runs and cancels B, but B may need so..."		jerf
25309890	12.0974865	-7.4816604	comment	4.0	11.0	1607125724	-10.5832815	I think you are missing the biggest advantage of F#: computation expressions.Computation expressions are like do-notation and list comprehensions in one feature. Now that I have tried them, I don't want to go back to a language without!		dfgdghdf
25315600	11.686543	-7.3393645	comment	4.0	10.5	1607185001	3.0795302	In my opinion a bit better site covering the same topic: https://interfaceingame.com/		asutekku
25319324	11.689335	-7.1806335	comment	4.0	14.0	1607209634	9.136267	Question by someone who is ignorant but interested in functional programming: what is the closest equivalent to these functions in Python? (Or correct me if I'm asking the wrong question).I used to lo...		saeranv
25326569	11.67694	-7.1527367	comment	4.0	14.0	1607288402	-7.5511727	=LAMBDA(...) does return an anonymous function - and then you use the Names Manager to name it.It is a bit weird and confusing because you currently can’t really use the anonymous functions without naming them, but maybe they’re going to relax that restriction eventually?		ripley12
25333947	11.599992	-7.862274	comment	4.0	18.5	1607360212	10.244694	I honestly love that Go has a formatter included, and the style is specified. Similarly with black[0] for Python. I used to care terribly about style, until I realized I just care about consistency an...		npsimons
25369888	11.597109	-7.8936324	comment	4.0	16.5	1607575988	10.174089	"Yeah, and the executable is 47 MB. You can do the same thing with Go:    package main
    import ""os""
    func main() {
       for _, s := range os.Args[1:] {
          o, _ := os.Open(s)
          os.Stdout.ReadFrom(o)
       }
    }

and the executable is 1 MB."		svnpenn
25377659	12.466912	-7.7927303	comment	4.0	10.5	1607629484	11.943038	are there people who used both clojure and scala. And decided to use Scala ? if so why ? I'm new to Scala that's why		dzonga
25376817	12.134431	-7.6168957	comment	4.0	12.5	1607625470	7.229157	I argue that Clojure née the functional programming community writ large capture a peculiar local maximum. I used to subscribe to the “functional = better” camp until going to MIT. I challenge anyone ...		hailwren
25379460	12.028673	-7.131825	comment	4.0	13.5	1607638234	8.033638	I prefer functional programming, and have a background in functional programming, but I still primarily work with Java, and it is currently my go-to for any project. In my opinion, Java as a language ...		oftenwrong
25383646	11.819962	-7.6908307	comment	4.0	12.5	1607675758	3.540436	Side question : Is there any example of a language that has successfully added HKT after it was released and became popular ?		bsaul
25390260	12.227016	-7.624118	comment	4.0	12.0	1607717163	11.937772	I have worked in multiple Scala shops and contributed at the highest levels to the Scala ecosystem and my experiences confirm that this rotten attitude is very real and increasingly the norm, as every...		uDontKnowMe
25407868	11.605959	-7.031139	comment	4.0	12.5	1607878220	-7.765128	I'm taking about in use, mainly.  Python, as an example, really screws it up by not giving you a way to know if you have the default or a value that equals it.  Then, the more default values you pile ...		taeric
25415384	11.996901	-7.164973	comment	4.0	10.5	1607941306	8.084262	I think Java programmers (and their buddies in C# and similar land) can benifit from adapting a straight forward functional style of programming.Not the stream, map, reduce stuff.But simply writing fu...		throwaway4good
25422049	11.647411	-7.947329	comment	4.0	10.5	1607974233	10.202365	"Do you think there is a path forward for the Go team to release an XML library without namespace support that simply errors when they are encountered (""XML namespaces are considered harmful"")?"		politician
38601237	12.249416	-7.538795	comment	4.0	17.5	1702307009	-11.377289	WASM, Android, and iOS targeting is subpar, though. For multi-platform client-side targeting, Kotlin is actually more interesting..NET was always built for showmanship, with somewhat disappointing results when actually tried.		bad_user
38652571	12.327088	-7.13504	comment	4.0	13.0	1702633537	12.330558	The other approach to private methods is weird.It breaks the object-oriented paradigm. Why should my Dog be able to check out the internal StomachContents of another Dog, while that information isn't ...		dmurray
38665291	11.685502	-7.900942	comment	4.0	11.5	1702743175	10.13793	The reason they’re using HTTP is to allow for hiding the SSH server so that it pretends to be a dummy HTTP server that responds to 404 on all requests unless you know the special random URL that hosts...		vlovich123
38666657	12.1938095	-7.624618	comment	4.0	18.0	1702752244	11.915713	It looks K-centric. The K language provides constructs like each, over, and scan to perform what would be looping behavior in other languages.Having written Scala myself at one point, the thought of a...		kelseyfrog
25428583	11.812046	-7.127145	story	4.0	85.0	1608025081	-9.060116	Exhaustiveness Checking with Mypy	https://hakibenita.com/python-mypy-exhaustive-checking	rbanffy
38685806	11.788972	-7.3498564	comment	4.0	13.0	1702921892	-8.901055	I can't tell if there's anything here I should be trying to learn. Best I can tell it's choosing obtuse naming for Static and Dynamic typing.> Summary: Static vs dynamic typing debates often flounder ...		karmakaze
38688968	12.508505	-7.1768374	comment	4.0	10.5	1702936889	12.358484	After 10 years in Ruby, I moved onto Rust four years ago, and don't plan on really looking back. But with that said, I'm glad you love Ruby! There are certainly things to love.Personally, I just can't...		brink
38697791	11.721627	-7.3752785	comment	4.0	22.5	1703003822	-8.9148655	"I don't think it really matters. Major bugs are not ""oh this can be null"", major bugs are ""this combination of preconditions yield a business logic edge case that wasn't accounted for"". Static typing doesn't really help more than dynamic typing in these cases."		eddd-ddde
38706872	12.142424	-7.224915	comment	4.0	11.0	1703065058	8.563885	Of course, but their use of the ECS seems excessive. I'd have expected a few big systems for each area of the game, clicking on Game.Simulation.AdjustElectricityConsumptionSystem for example reveals q...		speps
38707867	11.929111	-7.1242704	comment	4.0	12.5	1703075281	-9.119252	"But it is its own thing that compiles down to javascript, and is otherwise syntactically and semantically ""very very similar"" to javascript. It IS always statically typechecked and has good, or at lea..."		bruce343434
38761499	12.494074	-7.0421615	comment	4.0	12.0	1703500944	0.82951975	> I never thought Ruby would have a shipping and production ready JIT before Python.This is entirely predictable - Ruby does not have a big scientific computing community which happened to depend on every implementation detail of the hosting interpreter.		rfoo
38779316	11.721369	-7.30572	comment	4.0	11.0	1703654248	-8.906474	What should I be looking for here that distinguishes it from other lightweight statically-typed scripting languages? Performance? Tooling? Particularly good FFI?There are some syntactic quirks that do...		djur
38791545	11.900186	-7.3193836	comment	4.0	13.0	1703754804	7.0198407	i am going to object to this; i've programmed in, among other things, prolog, ocaml, basic-80, c, the unadorned λ-calculus, bicicleta, and qfitzah, the last two of which are languages i designed and i...		kragen
38798841	12.475709	-7.424509	comment	4.0	18.0	1703798802	12.870836	"If you follow OTP design principles, you end up with a supervision tree, and a lot of code like...   ok = do_something_that_might_fail()


If it returns ok: great, it worked and you move on. If it doe..."		toast0
38812628	12.1823225	-7.379573	comment	4.0	11.5	1703907438	12.730442	Does anyone here have any experience with Koka? I've been following the language from afar for a while but I have yet to read an account of what it's like to use it in practice.		codethief
38812959	12.041778	-7.751213	comment	4.0	18.0	1703913223	10.378703	> Koka tracks the (side) effects of every function in its type, where pure and effectful computations are distinguished. The precise effect typing gives Koka rock-solid semantics backed by well-studie...		djha-skin
38834716	12.160795	-7.168473	comment	4.0	10.5	1704138297	-11.136397	As somebody who has been professionally developing in Java for 24 years I have spent a lot of time trying to understand continued success of Java.Personally, I think Java is very poor language. I wish...		onetimeuse92304
38860092	11.681323	-7.9289627	comment	4.0	15.5	1704316777	10.222699	Go is a decent industrial programming language alternative to Java, only things I'm not super enthused about is the logging experience (for the love of Christ, please create a standardised logging fac...		EdwardDiego
38865458	12.322038	-7.294609	comment	4.0	12.5	1704364858	2.0587587	Is Squeak itself still an actively developed project? I hear much more about Pharo.		zelphirkalt
38865954	12.350795	-7.2530746	comment	4.0	10.5	1704369674	7.062268	i would like to learn pharoh, but I can't seem to understand how to get started.  It looks like one of those tools you need a video to understand.		worthless-trash
38867422	12.304532	-7.233132	comment	4.0	13.5	1704378711	7.034963	i love smalltalk, but i mainly do web development, and i was curious to do frontend development in smalltalk, so amber looked interesting. but i could not see how to do frontend only development. i am...		em-bee
38871381	11.787715	-7.3491626	comment	4.0	10.5	1704397776	-8.964825	"I don't understand this. This is a GitHub repository of someone's largely unverified opinions? Since when is talking about static typing considered hype?Saying static typing is ""hype"" is like saying ""adding a handle to a coffee mug makes it easier to hold"" is hype."		slingnow
38870999	11.799916	-7.329824	comment	4.0	14.0	1704395598	-8.898269	Static typing is nice because it makes the IDE popup with the information.  Shower that!		matt3210
38873200	11.640268	-7.9512706	comment	4.0	27.0	1704407465	-5.45535	"> Go was probably the key technology that migrated server-side software off Java bloatware to native containersInteresting point of view - Golang might be pithily described as ""Java done right"".  That has little to do with ""systems programming"" per se but can be quite valuable in its own terms."		zozbot234
38873364	11.690455	-7.8630524	comment	4.0	24.0	1704408464	10.19192	Java has a culture of over-engineering, to the point where even a logging library contains a string interpolator capable of executing remote code. Go successfully jettisoned this culture, even if the language itself repeated many of the same old mistakes that Java originally did.		grumpyprole
38873439	11.7009	-7.8816175	comment	4.0	19.0	1704408811	10.168806	I was a Java dev and love using Go now, but I have to say I'm not sure if many of my Ex-Java-Colleagues would like Go. Go is kind of odd in that even when it was new, it was kind of boring.I think a l...		liampulles
38873525	11.638521	-7.9076357	comment	4.0	11.0	1704409361	10.159105	There's nothing similar about Java's and Go's interfaces, except the name.Java interfaces must be implemented explicitly (they're nominal).Go interfaces are automatically satisfied by any type that declares matching methods (similar to protocols in other languages) (they're structural).		tomp
38874144	12.282576	-7.609145	comment	4.0	15.0	1704414471	12.806385	"The fact that Erlang has existed since the 80's really begs the question ""Why do language designers keep fucking up concurrency?"". It's a feature that's really painful to tack onto to a language after..."		OkayPhysicist
38875346	11.612357	-7.935383	comment	4.0	12.0	1704425065	10.211981	Except it did replace C++ in the domains it claimed it would replace C++ in. It made clear from day one that you wouldn't write something like a kernel in it. It was never trying to replace every last...		randomdata
38875361	11.642405	-7.934999	comment	4.0	11.0	1704425189	10.228924	The biggest win for Go is its approach based on composition rather than inheritance.There isn’t any “architect engineer” building cathedrals with interfaces and abstract classes. There’s no cult behin...		vrnvu
38949124	12.272151	-7.505293	comment	4.0	17.5	1704959727	-11.39995	Kotlin has great tooling, and Java library compatibility, so why wouldn't you use it? When you work in Kotlin, you give the masses of Java programmers the ability to contribute and a licence to check ...		esafak
38949207	12.244554	-7.533883	comment	4.0	13.5	1704960446	-11.383437	>Do Java projects in industry even use the new stuff?Yes. Kotlin fans need to understand that Kotlin is not competing with the old Java ways and stop mentioning bloody enterprise as an argument agains...		ivan_gammel
38966368	11.659932	-7.0523105	comment	4.0	12.5	1705055586	-6.578901	The TIOBE Index [1] ranks Fortran at 12th place! Consider that Ruby is at 18th. In my opinion, this says a lot about the value of the index.[1] https://www.tiobe.com/tiobe-index/		emadb
38989723	11.627936	-7.247185	comment	4.0	19.5	1705234345	5.07228	In fact, the official line [0] on where the name comes from is quite funny. I shall quote my favourite part:> [Dynamic] also has a very interesting property as an adjective, and that is it's impossibl...		roenxi
38993521	12.317596	-7.2989182	comment	4.0	14.5	1705260096	6.934401	Story time.  When I was a young developer in a database company, my cubicle was next to a section where a team sat. The team consisted 30 to 40 people working on a secret project. Whenever I asked the...		ww520
38995989	11.944381	-7.4778953	comment	4.0	10.5	1705278701	7.3115253	Avoiding side effects does not require inventing a brand new purely functional language programming language.		gcommer
39008502	12.503981	-7.5049224	comment	4.0	11.0	1705370515	12.894043	"Erlang is based on virtual threads (confusingly called processes).
The Erlang virtual machine schedules them on OS threads.
Erlang processes communicate using message passing, preventing deadlocks.
Yo..."		jake_morrison
39026334	12.173196	-7.6240544	comment	4.0	18.0	1705490824	11.864918	For the unaware: Odersky himself is a “modern day Wirth”. Amazing language designer. He’s responsible for generics in Java and the Scala language.		santiagobasulto
39029055	12.193291	-7.626584	comment	4.0	11.5	1705505438	11.849129	Sorry, but Odersky is nothing like Wirth.Scala failed hard because it is kitchen sink of every half baked feature someone wanted to write a PhD thesis about. The graphs of the interdependencies of the...		throwaway89988
39063698	11.77879	-7.3110986	comment	4.0	12.0	1705714032	9.159566	But at what point are you calling await?If I were using the author's library, I would call `.some_endpoint(...)` and that would return a `SpotifyResult<String>`, so I'm struggling to understand why `s...		doakes
32519752	11.996148	-7.5184836	comment	4.0	10.5	1660908956	7.3276978	I have never given much attention to functional programming just out of prejudice.Now I read this blog and my head just exploded in the functional part.It's beautiful.What good introductions to functi...		motoboi
32529293	11.896878	-7.612429	comment	4.0	12.0	1660972415	10.303235	"Laziness is ""cool"", but is it really needed? I don't know any other commonly known languages that have that as a feature. Is it needed in general, or is it needed in Haskell in particular?Same thing s..."		galaxyLogic
32544045	11.611744	-7.841752	comment	4.0	25.5	1661113569	10.0187645	I bet it's an artifact of Go having a randomized iteration order over maps [0]. Getting a deterministic ordering requires extra work.[0] https://stackoverflow.com/questions/9619479/go-what-determin...		haasted
32558966	11.82214	-7.1372547	comment	4.0	10.5	1661213489	-9.0184965	In my personal experience codebases using MyPy tend to be considerably worse than codebases that don't.By using a static type checker on a dynamically typed language, you have admitted you don't know ...		ReflectedImage
32574189	11.776225	-7.3885083	comment	4.0	12.5	1661306809	-8.860078	I much rather blame the type system designers, however heroic and brilliant they may be, than the folks using them. Especially so in scenarios like large & collaborative evolving code bases, legacy, m...		lmeyerov
32584581	11.837347	-7.2229233	comment	4.0	15.0	1661369444	-8.957673	A lot of people seem to believe that dynamically typed languages make development easier, because you don't have to worry about writing type annotations or going through the extra steps to fix compile...		peterkelly
32584800	11.821094	-7.3717556	comment	4.0	13.0	1661370530	-8.942638	> I find that static typing means I can be more productive, because type errors are caught straight awayI agree completely. I feel like there’s a pretty common arc among programmers:1. learn to progra...		tlrobinson
32617344	11.648081	-7.1468835	comment	4.0	12.0	1661593156	-6.107109	> there may really be a finite set of [control structures]Kleene Algebras (which compose via sequencing, choice, and repetition) map so well to sequential programming that I currently believe, yeah, w...		082349872349872
32627195	11.622556	-7.941346	comment	4.0	12.5	1661682119	10.227194	When Go was first announced ~2009, Rob Pike explicitly framed it as a systems languagehttps://www.youtube.com/watch?v=rKnDgT73v8sI would not say it's the same as Java or C#. The crucial difference is that it compiles to a native executable binary file, not something that needs a virtual machine.		hsn915
32649213	12.340373	-7.269493	comment	4.0	15.0	1661860420	7.0978465	Cool! I program for around 7 months in Pharo now at Yesplan [0]. We're hiring a devops engineer and a software engineer. While the Pharo website [1] avoids mentioning it, it's a Smalltalk descendant.W...		melvinroest
32674858	11.958376	-7.681351	comment	4.0	16.5	1662031489	10.400524	> Fortunately, this is easily possible with Haskell. You need to enable the BangPatterns feature and use exclamations ! in front of patterns for variables where you want the evaluation to be performed...		eptcyka
32675684	11.850185	-7.5580354	comment	4.0	11.5	1662037302	1.0477109	There's no inherent reason why doing lazy evaluation in an eager-by-default language should be any harder than the reverse. I can imagine a language that is eager by default but has a '#' operator that holds expressions in unevaluated form until terms are requested.		cvoss
32681406	11.596868	-7.92091	comment	4.0	13.5	1662059068	10.194029	But in this situation, why don’t I just use Go and it’s templating engine?Even faster to develop and slimmer when running in production.		didip
32707330	12.507352	-7.8050375	comment	4.0	15.0	1662246588	-11.019131	> “Try different things” is the key, of course.32 year programmer here (started at 19).I cannot “amen” this sentiment enough. But probably not in the way most will read it.Most will interpret this at ...		travisgriggs
32712216	11.991315	-7.757569	comment	4.0	11.5	1662293652	10.431631	Any theories on why Haskell scores so low on stackoverflow's 'most loved' metric? It's only 56.44% which means that 43.56% of the polled Haskell users don't want to use it in the future.In the same ch...		jstx1
32712397	11.981412	-7.627331	comment	4.0	12.5	1662295165	10.296956	I've never understood the appeal of purely functional languages like Haskell. Mutability is an essential feature of the Universe we live in. Everything changes, internally and externally, all the time...		p-e-w
32734927	11.769975	-7.3251076	comment	4.0	12.0	1662457784	9.223726	>All processes running on Lunatic are preemptively scheduled and executed by a work stealing async executor. This gives you the freedom to write simple blocking code, but the runtime is going to make ...		spinningslate
32747206	12.351544	-7.349491	comment	4.0	15.5	1662532617	12.666901	It's not just about revenue generation. I bet they are doing this to prevent Amazon from deploying a version of Akka as a service on AWS.		chsreekar
32747241	12.342988	-7.3608174	comment	4.0	12.0	1662532857	12.664262	Does Akka.NET have any licensing dependencies on Akka?I wonder if this will push people there (please go to F#) or Elixir and Erlang.		bmitc
32747315	12.347374	-7.367957	comment	4.0	10.5	1662533549	12.669856	"Other libraries depending on Akka shouldn't have to change, as they are merely published as ""libraries"", not deployed to ""production"".Libraries generally never have ""annual revenues more than US $25m""..."		capableweb
32747980	12.242457	-7.6319833	comment	4.0	15.5	1662538769	11.946515	"It all started with Scala which was a decent, functional Java (at the time) and then they formed a commercial organisation called ""TypeSafe"" around it. Then it took on VC money and then also renamed i..."		rockyj
32768659	11.656948	-7.9293056	comment	4.0	13.0	1662657739	10.205383	Almost 40% of respondents either use generics or want to use generics. That's a pretty quick uptake given the decade of loud, prominent voices shouting that go didn't need and shouldn't have generics.		hajile
32769949	12.384196	-7.032996	comment	4.0	18.0	1662662072	12.930754	I would argue that ruby as almost all the strengths of perl and conciseness with more coherency if you want a perl-like fluidity and terseness. I personally like python for anything that becomes more than a 100 lines of bash.		stjohnswarts
32770528	11.791665	-7.348345	comment	4.0	12.5	1662664234	-8.904691	Needs static typing.I'll let myself out now.		cryptonector
32785514	11.8601465	-7.366341	comment	4.0	14.0	1662761605	7.054626	"You can totally have OOP without inheritance.In fact ""composition over inheritance"" is a thing in the OOP world.https://en.wikipedia.org/wiki/Composition_over_inheritance"		pier25
32784822	11.670817	-7.0651455	comment	4.0	12.0	1662757113	-6.941754	I think Java's real secret sauce was the library.  It had everything - much more than the standard C/C++ library.> ... but with no unsafe memory accesses.Mostly true.  But you could still get a null pointer exception in Java - which is especially weird because Java doesn't have pointers.		AnimalMuppet
38126744	11.71578	-7.1672244	comment	4.0	15.5	1699007918	9.155321	"That example could be easily written like this:    var num = words.stream().filter(w -> !w.isEmpty()).count();

This is shorter and closer to what you're expecting. The reason it's written the long wa..."		mike_hearn
38126822	11.701937	-7.1639256	comment	4.0	13.5	1699008586	-5.341425	I think Scala is hands down the best collections/stream library, I especially like their _ shorthands:  val num = words.count(!_.isEmpty())		kaba0
38151418	11.694493	-7.2615204	comment	4.0	18.0	1699194562	-8.767576	Type providers are boss. Why doesn’t every language type system have this feature by now?!		owlstuffing
38151793	11.706623	-7.68695	comment	4.0	11.0	1699197212	-7.0825486	The fastest json lib in Go is the one done by the company behind Tiktok.		Thaxll
38152860	12.289903	-7.4793572	comment	4.0	12.0	1699203128	-10.657833	"I looked at Fable and the resulting code just looked way more complicated than anything Javascript could write. I'm interested in F# still on the backend, but I don't think people ""haven't discovered"" Fable, it's just not a great alternative."		Capricorn2481
38155476	12.275958	-7.3019547	comment	4.0	17.5	1699217090	7.130596	"OK, having watched the video at https://www.youtube.com/watch?v=lqogvp1dGpk (8 minutes, so 4 minutes if you 2x it) I understand why they have such a hard time answering the question ""What is Glamorous..."		simonw
38188094	11.647123	-7.89701	comment	4.0	13.5	1699433490	10.211689	I can't go along with your reasons at all (installing go on every machine is not solving a portability problem, it is the portability problem) but I'm going to leave that aside.can Go be used REPL as ...		fsckboy
38207234	11.756217	-7.223161	comment	4.0	10.5	1699547829	-8.924607	I would expect most people to read code in their IDEs, where small amounts of type inference like this is fine because the IDE tells you what the type is.I agree that if you spend a lot of time readin...		mxz3000
38215261	12.495602	-7.424947	comment	4.0	12.5	1699592758	12.913595	As someone who worked with Elixir for the past couple years, and maintains multiple libraries in Elixir - nah not really. Static typing is the thing I'm missing with Elixir.No matter how much pattern ...		artdigital
38215778	12.401481	-7.3307314	comment	4.0	13.0	1699597998	12.905067	You are overthinking some of it at least when it comes to concurrency. Look at what a process is and how send works. GenServer is a natural generalization of a pattern you’d write a thousand times. Kn...		jb3689
38215175	12.401693	-7.4207644	comment	4.0	12.0	1699591812	12.856396	“In fact, I might go as far as saying that Elixir gives you a fun language (like Ruby) while leaving out the stateful footguns OOP languages give you. There are no classes, no instances, no inheritanc...		gigatexal
38217582	11.7779	-7.3449016	comment	4.0	12.5	1699615458	-8.960617	I believe this as well. I like dynamic typing, because it often feels to me that rigour of static typing is slowing the prototyping phase. Plus overusing types creates a lot of boilerplate. In one of ...		d3ckard
38220390	11.60741	-7.8949833	comment	4.0	11.5	1699631654	10.179017	It is not faster at compilation than Java, which was not particularly designed for such.Also, as can be seen, go is not a well-designed language, having language warts we knew for 50 years. I would take the creators’ claims with a huge grain of salt.		kaba0
38229654	11.652784	-7.9234385	comment	4.0	11.0	1699704803	10.214761	Go is a great language. The Python of typed languages, if you will.Is it perfect? There's no such thing. But it's very easy to get to work and start solving problems with no headache, which is probably why so many very popular tools are written in it these days.		spicyusername
38230668	11.649696	-7.9788127	comment	4.0	12.0	1699713700	10.241868	There's a lot of misinformation, bad arguments and bad conclusions in this post.  Let's pick it apart.> Go is stable.But, past isn't a guarantee of the future.  It was stable before, but who's to say ...		crabbone
38229325	11.645464	-7.959338	comment	4.0	34.0	1699701715	10.198774	Got into Go more than a decade ago, because it was HN’s darling back then. It has become out of fashion now here, replaced with that other great statically typed performant language (don’t want to sta...		rollulus
38235855	11.8048115	-7.2630067	comment	4.0	15.5	1699747339	-8.906575	Yeah my semi-hot take is that type annotations in functions is a feature not a bug. It forces legible interfaces (with the exception of nasty generics I suppose).		hardwaregeek
38238338	11.941696	-7.6429396	comment	4.0	20.5	1699776571	10.416188	> Where are the types?OCaml supports type annotations practically anywhere, if you want to add them. Alternatively, you can use an editor that supports querying or showing types for bindings. VSCode a...		grumpyprole
38238735	11.677317	-7.9703345	comment	4.0	10.5	1699781418	10.254829	"Forgive me, but I don't get what the issue is. Surely the ""ownership"" of the domain is irrelevant? The package-name is just a unique name; the only thing it refers to is the package.In particular, I d..."		denton-scratch
38244343	11.6096325	-7.9082255	comment	4.0	11.5	1699825186	10.184511	We're talking about Oberon here, not about its clones. And I based my reply on Oberon-2. It definitely sucked.> Hash maps don't need to be built-ins, as proven in many languages.Except Oberon doesn't ...		cyberax
38269677	11.869885	-7.3000536	comment	4.0	11.5	1699995648	-8.931367	I think the author's recommendation has some needed context:> Recommendation: either make your language statically typed or dynamically typed (preferably statically typed, but that's a different topic...		munificent
38271688	11.858722	-7.169553	comment	4.0	12.0	1700007304	-9.016651	> I really can't imagine a situation where having type hints in Python is worse than simply not having them.Can’t they lie / go out of sync with what’s actually happening? IMO, an unenforced type hint...		Philpax
38273984	11.6175585	-7.9251804	comment	4.0	10.5	1700030727	10.203468	Aren't languages like C notoriously difficult to parse? I've read that they're actually context sensitive. IIRC much of Go's syntax was designed to avoid parsing complexity.		matheusmoreira
38167423	11.635448	-7.773579	story	4.0	167.0	1699298344	10.07528	Building a Streaming Platform in Go for Postgres	https://blog.peerdb.io/building-a-streaming-platform-in-go-for-postgres	saisrirampur
38187676	12.242009	-7.5693846	story	4.0	4.0	1699428886	-11.411736	Why Kotlin Multiplatform Won't Succeed	https://www.donnfelker.com/why-kotlin-multiplatform-wont-succeed/	rvanrooy
38228122	11.610227	-7.5449753	story	4.0	54.0	1699685390	-7.3382645	Variadic generics, again	https://poignardazur.github.io//2023/11/08/time-for-variadic-generics/	lukastyrychtr
38292122	11.657412	-7.321833	comment	4.0	12.0	1700154308	11.867053	I guess that's logical, still a bit tedious in converting values to scalars...		jskherman
38351404	11.7333355	-7.197469	comment	4.0	13.5	1700502450	-6.113463	Has anyone else noticed that functional languages go heavy on the special keywords and operators? It feels like theres a larger cognitive load (more specific keywords to memorize) when learning languages like F# or OCaml compared to C or Python or Java		shortrounddev2
38351699	12.133013	-7.507482	comment	4.0	11.5	1700503399	-10.618582	I've been on the F# website for 5 minutes now looking through damn near every page and I cannot find a single page that shows me a simple example program or the syntax at all.Everything is hidden behi...		whalesalad
38354122	11.933337	-7.467083	comment	4.0	11.0	1700511911	7.180698	It seems that the fundamental problem with the functional paradigm (in its pure form) is that the real world - including the architecture of the computer that is used to run the programs on - is full ...		Koshkin
38360371	11.649943	-7.9613643	comment	4.0	18.5	1700550542	10.206113	Why is Go included in the comparison, and not, say JS, OCaml, Haskell? It makes zero sense, and I swear that’s some marketing tactic for that language to sell itself.		kaba0
38371207	11.919329	-7.091871	comment	4.0	11.5	1700605154	-4.5281253	That's like callback hell in JS.		htk
38383432	11.889742	-7.135412	comment	4.0	23.5	1700679074	-9.6065645	Your tuple example only works if both tuples have two elements. I specifically mentioned arbitrary fixed-size tuples (as in, tuples with an arbitrary non-variable length).Your generic type transformat...		Timon3
38401395	12.250314	-7.275666	comment	4.0	13.0	1700810557	7.182904	"We almost had it in OS/2, I guess many aren't aware that Smalltalk was kind of "".NET for OS/2"" during its heyday.Hence why it is a first party on SOM (OS/2 COM version), and SOM does support metaclass..."		pjmlp
38405549	12.393181	-7.100391	comment	4.0	23.5	1700843110	12.378288	Why are there so many kinds of things that can be passed to a Ruby function?		throwanem
38405935	11.937704	-7.281531	comment	4.0	16.5	1700845335	-8.937073	Programming languages shouldn't have two competing two type systems in them. Static typing in a scripting language like Ruby is just poor engineering.		ReflectedImage
38412071	11.621889	-7.903838	comment	4.0	14.5	1700899500	10.118586	Is size still an issue with Go if you wanted to compile to WASM and target the browser?		tjpnz
38415339	12.0036745	-7.770898	comment	4.0	10.5	1700936720	10.422006	It says it is written in Python. Wasn't bazaar written in Haskell or OCaml?		krylon
38419670	11.957339	-7.454811	comment	4.0	13.5	1700980907	7.2653213	i do, does functional programming make this a non issue? maybe im just not smart enough to wrap my head around it.		globalnode
38423886	11.660619	-7.1911435	comment	4.0	13.5	1701024393	7.760252	If we taught functional programming first, there's a log we can do without. We don't need variables that vary--only reference names that are assigned once within a scope. We can also eliminate loops a...		karmakaze
38436256	11.599311	-7.891492	comment	4.0	12.5	1701110285	10.184492	I could not agree more with this. Go is so frustrating to me because there is so much I like but these things you listed make it miserable for me to use.A basic option and result type could fix a lot ...		morsecodist
38435525	11.660007	-7.90678	comment	4.0	13.5	1701107432	10.238064	Ok that's totally fair. What's the Go name for it? In my mind Go interfaces are duck typed.		throwawa14223
38458217	11.668027	-7.617268	comment	4.0	11.5	1701258061	10.143662	I am very susceptible to the ‘Misapplied Genericity’ anti-pattern. When given a problem, my default approach seems to be building a solution which ends up looking more like a framework that allows you...		salmonfillet
38502004	11.846095	-7.171383	comment	4.0	15.0	1701550884	-9.014648	> Here is what has changed: we no longer trust developers as much and we are re-introducing the complexity that we were fighting. Modern Python can at times be impossible to comprehend for a developer...		Dunedan
38502286	11.802491	-7.1420846	comment	4.0	14.0	1701553052	-8.987651	"I've been using python for many, many years.One thing that always bugged me was the lack of ""strict"" mode (see perl)For those of you not blessed enough to have done any serious perl, strict was a way ..."		KaiserPro
38481102	12.039239	-7.8065057	story	4.0	12.0	1701389287	-4.34508	"Jane Street: ""We fight at a fundamental disadvantage"" using OCaml over C++"	https://www.efinancialcareers.com/news/2023/11/ocaml-vs-c-high-frequency-trading	cempaka
38571356	11.788369	-7.3568482	comment	4.0	11.0	1702055464	9.438967	"Well on the other end of the extreme we had Java, which had an awful lot of this:    HashMap<String, List<int>> hashmap = new HashMap<String, List<int>>();

Latest Java lets you omit the left type ann..."		justinpombrio
38584283	12.136867	-7.246837	comment	4.0	11.5	1702146268	8.534909	Since engine is targetting pixel art, isn't ECS a bit of an overkill...?And yes, technically artstyle has nothing to do with game architecture.But in practice, most games of this style are pretty smal...		Xeamek
14727436	11.772284	-7.0623517	comment	4.0	10.5	1499551752	5.140437	Would be funny to see, say, an enterprise software filled with gamedev patterns. Would you care to elaborate on any of it? What kind of patterns were specifically glaring/out of place?		herval
14732704	11.684517	-7.6501827	comment	4.0	11.0	1499648826	10.094109	This piece is chock full of ridiculous advice.>> “I’m making a generic version of…”>> It means: I don’t understand the constraints of the actual problem, so I’m going to design an even bigger problem ...		threepipeproblm
14734737	11.595666	-7.0479293	comment	4.0	12.0	1499682751	8.39538	Good luck on improving the situation as long as you have people running around who consider this all fine and normal.https://ptrthomas.wordpress.com/2006/06/06/java-call-stack-f...		taw55
14736100	11.828826	-7.1043706	comment	4.0	10.5	1499696181	12.86062	In what language can we have both?Yes, we can use caching compilers (https://wiki.archlinux.org/index.php/ccache) to speed up builds with few changes. We can lower optimization levels (although that b...		striking
14746238	11.857832	-7.0198116	comment	4.0	11.5	1499795202	-10.399268	"Shouldn't it be "".map(([prop, value]) => ...)"" ?I like to write it this way, using as much syntax sugar as possible:const mapObject = fn => obj => Object.assign(
  ...Object.entries(obj).map(
    ([key, value]) => ({ [key]: fn(value) })
  )
);"		djfm
14745007	11.8723755	-7.0384684	comment	4.0	23.0	1499787139	-10.420813	Is Object.entries(obj).map((prop, value) => ...) close enough? Object.entries is newly standard in ES8.		thomasfoster96
14751549	12.10691	-7.9034233	comment	4.0	12.0	1499858004	10.422845	I looked at OCaml a few years back for scientific computing, but was turned off by the global lock GC for multithreading (similar to python). Anyone know if this has been changed yet?Edit: doesn't loo...		tbenst
14757306	11.621291	-7.7600164	comment	4.0	11.5	1499899300	10.1692295	I think this project is great, but I tend to agree with others - it's going to be somewhat doomed by second-system effects and the fact that coding is a social art form. You have to get other develope...		eliribble
14763673	11.677385	-7.866164	comment	4.0	16.5	1499969347	10.206338	Java`s generics have had issues due to use site variance, plus the language isn't expressive enough, leading its users into a corner where they start wishing for reified generics (although arguably it...		bad_user
14763797	11.624719	-7.9136553	comment	4.0	16.5	1499970076	10.178819	"The basic tradeoff is monomorphization (code duplication) vs. boxing (in Go speak, interface{}). The problem with saying ""well, this is a tradeoff and both sides have downsides, so we won't do anythin..."		pcwalton
14765373	11.866697	-7.33787	comment	4.0	11.5	1499981014	-6.7687726	You seem to imply that Eiffel's solution was superior to Java's but nothing could be further from the truth.The Eiffel compiler required four distinct sequential processes (note: not phases. I really ...		hota_mazi
14765462	11.687049	-7.5157337	comment	4.0	11.5	1499981699	10.051172	This suggests that both generics and inheritance are unnecessary.		erikpukinskis
14765442	11.646564	-7.91607	comment	4.0	12.5	1499981587	10.225421	there's nothing magic about generics. every time you make a channel or a map in go, you're using a generic function even if go people don't want you to call it that.there's nothing magic about excepti...		baq
14781244	12.0084715	-7.695901	comment	4.0	14.5	1500196757	10.420056	> Haskell has some nice things going for it. Its syntax is cleaner than OCaml's, for example.While I find the ocaml syntax very far from perfect, the whitespace sensitivity of Haskell makes it immediately worse. What a silly design.		mookid11
14799723	12.056702	-7.0178757	comment	4.0	14.0	1500409121	9.624666	Plain vanilla JS (and therefore TypeScript) still lacks one killer feature from the Coffee family: Null propagation operators (`a ? b` => `a != null ? a : b`, `a?.x` => `a == null ? null : a.x`, etc). Even C# has it.		smilekzs
14801844	11.755114	-7.2949967	comment	4.0	17.0	1500434785	-8.077145	"Elisp disagrees:  > (lambda () (print ""hi""))
  (closure (t) nil (print ""hi""))

  > (let ((a 1) (b 2)) (lambda () (print ""hi"")))
  (closure ((b . 2) (a . 1) t) nil (print ""hi""))

  > (let ((a 1)) (defu..."		sillysaurus3
14804977	11.604579	-7.5083637	comment	4.0	16.0	1500478144	10.210684	what's another compiled gc language with a strong type system? I only know D and ocaml (let's not even mention Haskell).		ice109
14811452	11.632433	-7.067764	comment	4.0	12.0	1500549178	8.902709	"The pythonic example I've seen not once:{""some"": ""dict""}.setdefault(""some"", foo())while expecting foo() to be short-circuited."		avip
14759287	11.914518	-7.368906	story	4.0	71.0	1499929206	7.279161	Pragmatic Functional Programming	http://blog.cleancoder.com/uncle-bob/2017/07/11/PragmaticFunctionalProgramming.html	tosh
14796117	11.842235	-7.238962	story	4.0	43.0	1500382453	7.047887	The DCI Architecture: A New Vision of Object-Oriented Programming (2009)	http://www.artima.com/articles/dci_vision.html	dmux
14832058	11.647202	-7.671767	comment	4.0	12.0	1500814698	10.064639	I don't disagree. It's just more tedious in static languages.Let's say we're doing a user registration. In most dynamic languages the JSON body will get parsed into a map. Excuse the fat controller an...		latch
14834627	11.702618	-7.447358	comment	4.0	10.5	1500846967	9.706299	"> A new, more type-safe type reflection mechanismDoes this mean GHC does not erase types at runtime? Or perhaps what do they mean by ""reflection"" here; I only know it in the context of Java, where it more or less felt like an anti-pattern."		z1mm32m4n
14836778	11.960945	-7.631527	comment	4.0	13.0	1500885280	-9.06864	> People tend to find covariance more intuitive than contravariance; unless the issue is pointed out, they tend to assume everything is covariant.I can easily understand where covariance is useful and...		techno_modus
14847817	11.99697	-7.4065156	comment	4.0	17.5	1500991922	7.2396436	I highly recommend playing with Elixir or another purely functional language. I've only gone through the Programming Elixir book[1], but it has fundamentally challenged how I think about solving problems in other languages.[1](https://pragprog.com/book/elixir13/programming-elixir-1-3)		deedubaya
14870990	12.162784	-7.3690467	comment	4.0	10.5	1501201691	7.3290625	Is there any example of a usable Graphical UI written in a functional language?I've seen something very minimal in erlang, but it was so resource intensive it barely functioned at all.		jack9
14871147	11.76802	-7.1856675	comment	4.0	17.5	1501204324	-8.954298	> Usually, a dev writing a Python 2.7 library will not discriminate between bytes-like buffers and ASCII strings (since the language doesn’t either) which means to have to code review everything str o...		seanwilson
14871255	11.890523	-7.4236283	comment	4.0	10.5	1501206130	7.139744	It's surprising to me to see how few discussions of Functional and/or Object Oriented programming end up even mentioning the Expression Problem: http://wiki.c2.com/?ExpressionProblem    The expression...		moron4hire
14871355	12.193812	-7.2737303	comment	4.0	10.5	1501207547	-10.432108	I personally much prefer functional programming, however it has some downsides.The biggest practical hindrances I have found are:1. Performance due to things like allocations due to immutability thras...		benjaminjackman
14875436	12.125123	-7.5038757	comment	4.0	10.5	1501259235	-10.614031	Is there a really good reason to choose to use F# over C#?  Or does it really just come down to preference?		kzisme
14875678	12.140724	-7.48027	comment	4.0	12.0	1501261050	-10.598378	I'll take MS's commitment to F# seriously when they stop treating it like a 2nd class citizen.  .NET Core 1.0 has been out for over a year, .NET Core 2.0 is in preview and there is ZERO support for F#...		GiorgioG
14882573	12.241067	-7.534651	comment	4.0	12.0	1501355317	-11.3802	I'm impressed by the even handedness of the article.Normally, I wouldn't even think about using a language developed and championed by a litle Czech company, however, JetBrain's tooling is incredible ...		scarface74
14882717	12.247664	-7.5417495	comment	4.0	15.5	1501357285	-11.3823	Well maybe, but the Steve Yegge wrote this:https://steve-yegge.blogspot.fr/2017/05/why-kotlin-is-better...Obviously these guy love Java. This, frankly, I can't understand. I've hated Java for 20 years...		wazoox
14884314	11.76837	-7.3292747	comment	4.0	11.5	1501385773	1.8024652	It's not a terrible experience, but it is truly baffling that anyone would start a project in it today. A good static type system is too useful and important.		smt88
14888419	12.020904	-7.7606583	comment	4.0	12.5	1501456914	10.364952	A little off-topic, but the author of this paper (Daan Leijen) is also the author of Koka[1], a programming language with algebraic effects.IMO, Koka (or something similar) has more potential to becom...		frankpf
14897968	12.10507	-7.533475	comment	4.0	10.5	1501563291	-10.503072	> Yet another example of how Type Providers are such a game-changer for people.I’ve seen this statement twice on HN over the past few days, so I’m getting curious about F#. I would like to understand,...		runeks
14898908	12.141219	-7.465966	comment	4.0	12.0	1501578562	4.871085	"  This follows from my experience with building F# libraries, but the ideas are quite general and can be useful in any programming language.

This is just not true. The whole article really doesn't ap..."		chuck32
14919505	11.648098	-7.0702267	comment	4.0	12.0	1501768007	9.010114	In his example Array.prototype.reduce, isn't this almost the same as just doing a foreach loop? I don't understand why doing this, it's pretty much the same number of lines.		guiomie
14921241	11.742355	-7.0464582	comment	4.0	10.5	1501779129	8.441732	You find Java well engineered or you find the JVM well engineered?  Java may go down in history for the most destructively designed programming language ever created. The entire standard library and m...		CyberDildonics
14927079	11.618785	-7.956885	comment	4.0	18.0	1501832989	10.232913	> months? Go is tiny. The tutorial takes an afternoon. A C programmer will be profecient within days.		smegel
14928028	11.616261	-7.869389	comment	4.0	11.0	1501848269	10.057138	Yeah, Go has the worst possible model for concurrency there is - shared memory multithreading. Hopefully more and more companies will realize how bad this model really is and start looking into languages with decent concurrency models, like Erlang and Elixir or at least stick to event loops.		zzzcpan
14933060	11.608225	-7.895977	comment	4.0	24.0	1501887509	10.229134	"This is what really struck me:
""The API is still a bit awkward by Go standards. Too many methods, not enough direct access to variables""
Does he really mean that proper go code has direct access to fields rather than encapsulating them???"		tigershark
14933900	11.660545	-7.978392	comment	4.0	11.5	1501900115	-10.5715275	"It might be necessary to resolve naming conflicts but it's not good.In Go, package name should be the same as repo name.Most cases that I've seen are not including ""go"" in repo name to resolve naming conflict but ""just because"", possibly cargo-culting others that did it."		kjksf
14933140	11.794016	-7.1949835	comment	4.0	18.0	1501888394	8.684012	I would phrase it like that: most languages (C++/Java/.NET) have unhealthy obsession with creating unnecessary setters/getters, paying for it with increased compile time, code bloat, slower code.In Ja...		kjksf
14935056	11.657587	-7.935449	story	4.0	110.0	1501928200	10.076135	A Virtual LAN using NATS, written in Go	https://github.com/rapidloop/vlan-nats?	rapidloop
14961897	12.044036	-7.217903	comment	4.0	12.0	1502222368	9.165525	Might be a naive question, but how does this compare to existing Promise libraries that have cancellation (like bluebird)?http://bluebirdjs.com/docs/api/cancellation.html		sampl
14970488	11.612956	-7.8906293	comment	4.0	12.0	1502294043	10.228459	I disagree with the authors feelings on code formatting. Gofmt is one of the best features of Go, especially when reading others code.		majormjr
14998266	12.167446	-7.22511	comment	4.0	11.0	1502552312	8.544704	The problem with this approach is that systems will need info from multiple components, so at some point you are forced to make the coupling that the ECS was brought in to avoid. For example, the rend...		MikkoFinell
14998697	12.030095	-7.0467625	comment	4.0	10.5	1502556960	-6.630851	Any good primers on why it's beneficial to use immutables in JS? (especially with server side dev)		deegles
15004889	12.383917	-7.067037	comment	4.0	12.0	1502657754	13.18688	Perl6 feels like it could be the ultimate language for Man, Machine, Mineral, and Beast, if only we could teleport into a parallel universe where it war already in widespread usage. The sense of sheer...		s_kilk
15028228	12.448815	-7.731859	comment	4.0	15.5	1502897252	11.927721	"Neither are making ""big strides"". They both are barely able to exist.Eta will never even approach Scala in terms of adoption, and I had only heard about Purescript a few weeks ago reading about Elm.Ty..."		DeepRote
15036995	12.449133	-7.505901	comment	4.0	21.0	1502979652	12.879119	The author doesn't talk a lot about preemptive scheduling, which is probably the best thing about the Erlang virtual machine. This video explains what preemptive scheduling is and why it is extremely ...		randomstudent
15043541	12.241506	-7.6328516	comment	4.0	16.5	1503030199	11.92486	It will be interesting to see what the subset is.I have been writing scala for 2 years, mostly in spark and flink and as much as I love parts of it, overall, the language is just not the most approach...		addisonj
15043904	12.034081	-7.542895	comment	4.0	16.0	1503035692	9.205239	Kotlin?1. OOP: https://www.packtpub.com/mapt/book/application_development/9...2. FP: https://blog.plan99.net/kotlin-fp-3bf63a17d64a3. Concurrency: https://kotlinlang.org/docs/reference/coroutines.html4. Native: https://github.com/JetBrains/kotlin-native5. Simple: https://try.kotlinlang.org/		bmc7505
15048398	11.873343	-7.057366	comment	4.0	10.5	1503079430	-9.070872	Counterpoint I wrote a while back that focuses on compilation speed: http://benhoyt.com/writings/language-speed/I've used Scala a fair bit recently, and the compiler is so dog slow it's painful. Maybe...		benhoyt
15048791	11.719642	-7.216323	comment	4.0	10.5	1503082480	9.091675	Java is notorious as it has very clumsy syntax. Simple arraylist of dictionaries declaration looks like this:ArrayList<Map<String,Object>> myArrayList = new ArrayList<Map<String,Object>>();Could have ...		ardit33
15053009	11.8296995	-7.104457	comment	4.0	11.0	1503145767	-6.8436217	"Updating an array element  arr[3] = 'New content';

Updating an array element immutably  arr = arr.map((element, index) => {
    if (index === 3) return 'New content';
    return element;
  });

It's ..."		mediumdeviation
15053368	11.653964	-7.7786736	comment	4.0	11.5	1503151053	10.1759405	"""for all the deficiencies Go has, it is somehow highly compatible with the way my brain works.""I have been tempted to write a blog post about ""Why People Actually Can Write Real Programs In Go."" To li..."		jerf
15054180	11.6407795	-7.9698057	comment	4.0	21.5	1503159706	10.235259	> There is a cost to introducing an abstraction layer. Go code is usually rather clear, at the cost of being a bit repetitive at times.Go programmers say this a lot and every time I see it I wince. We...		KirinDave
15056514	12.167305	-7.0652256	comment	4.0	11.5	1503192312	-10.395158	> TypeScript compiles down to JavaScript, which doesn’t have types or type checking, it’s impossible to have actual type checking. The TypeScript compiler is great at checking at compile time, but at ...		barakm
15058473	12.248294	-7.5420766	comment	4.0	13.0	1503238590	-11.384216	I read about it when it came out, alongside with Kotlin.I bet on Ceylon, but somehow people preferred Kotlin.		k__
15065476	12.250659	-7.5507674	comment	4.0	11.0	1503331227	-11.375705	I don't believe Kotlin will get much strong outside Android.In all these years of alternative languages customers still don't allow us to use anything other than plain Java.		pjmlp
15071465	11.629691	-7.774954	comment	4.0	36.5	1503402773	10.175063	"> It’s better to compose than inheritI know that this is just a restatement of the ""composition, not inheritance"" mantra in Go, but it still makes about as much sense as ""product types, not sum types""..."		rbehrends
15071685	11.623723	-7.4620924	comment	4.0	28.0	1503405083	10.040082	"'A more meaningful statement would be: ""use inheritance to express sum types, use composition to express product types.""'I'm not sure how well that works as a meaningful statement, because it assumes ..."		pm215
15082515	11.6171	-7.5219316	comment	4.0	39.0	1503503662	10.16668	The better Python market isn't an easy one to crack because its a bit crowded. Go (despite its perceived and real faults) has succeeded in this space by delivering better GC, good libraries, static ty...		nindalf
15101726	11.651439	-7.9444776	story	4.0	21.0	1503691457	10.197589	Go Experience Report for Generics: Google Metrics API	https://medium.com/@sameer_74231/go-experience-report-for-generics-google-metrics-api-b019d597aaa4	m0nastic
15101565	11.790983	-7.311798	story	4.0	17.0	1503690108	-6.073145	Immutability and loops	http://codingrehab.com/posts/2017-07-31-replacing-loops.html	tosh
15104974	11.945862	-7.7263036	comment	4.0	11.5	1503745907	10.394684	One very common complaint I've heard about Haskell is slow compile times, see this discussion for example with a bunch of GHC developers:https://www.reddit.com/r/haskell/comments/45q90s/is_anything...		CJefferson
15107858	12.289954	-7.2992206	comment	4.0	11.0	1503787116	7.071103	Speaking personally, I don't want to work with an image based language.  That's an argument against both Lisp and Smalltalk.The problem with image based languages is that you've thrown away your file-...		btilly
15112130	12.130819	-7.6944	comment	4.0	16.5	1503860629	10.446025	TypeScript is far more powerful than you think. Between const, readonly properties, Readonly<T>, ReadonlyArray<T>, readonly indexers, and type safe object spread {...} via keyof T, TypeScript provides...		jahewson
15114873	11.834315	-7.33901	comment	4.0	19.0	1503903465	-6.199791	I am not convinced that immutability matters; this seems like a bias.  After all the original REPL, and the name itself, was in Lisp (note that the first Lisp implementations were not interactive, but...		gumby
15115730	11.965145	-7.43571	comment	4.0	15.0	1503918184	-11.046353	I think there may be some confusion here, immutability is about the stability of values (e.g. I have a string, list, map etc and I want to pass it to others, view its value, make changes without affec...		joncampbelldev
15142332	11.905335	-7.125214	comment	4.0	11.5	1504202363	-4.550217	Somehow I never experienced callback hell.It always felt like every other code-nesting problem to me.I mean, nobody talks about conditional hell, everyone acknowledges that you should flatten out your conditionals.		k__
15143022	11.699009	-7.1902204	comment	4.0	13.5	1504207095	9.202396	> Many are forgetting the initial reason node.js became popular. Consider the popular server-side landscape before node.js. It was dominated by Java, Python, etc. The primary way these ecosystems hand...		gshulegaard
15143423	11.979874	-7.2083387	comment	4.0	12.0	1504209809	9.181581	I'm well aware of promises, thank you. I'm also well aware that there's very little difference in reality between a promise-based style of coding and a callback one. You still lose stack continuity, i...		sreque
15144224	11.854655	-7.5781784	comment	4.0	10.5	1504215846	10.274067	In Haskell it is easy, you can not create cyclic data structures ;-)		lederhosen
15158168	11.936469	-7.4602995	comment	4.0	15.0	1504385792	7.243747	So, functional programming then?		nemoniac
15190537	11.663242	-7.963591	comment	4.0	10.5	1504780947	10.190616	I initially thought it would allow to dynamically handle upstreams list (and other configuration) like hipache is doing [1], which would be awesome for dokku or other container management systems whic...		oelmekki
15198358	12.126098	-7.3073893	comment	4.0	16.5	1504854180	-10.490926	In LISP based languages like ClojureScript, macros are part of the language. No need to build tools like JSX (that requires to run on webpack + IDE tooling etc...).		viebel
15207166	11.840166	-7.2549496	comment	4.0	11.5	1504966337	-8.943839	"It's not so much dynamic typing, but a lack of typing. Dynamic typing means that type checks are made at runtime.e.g. in Ruby:    irb> nil >= 0
    NoMethodError: undefined method `>=' for nil:NilClas..."		namelost
15241498	11.796446	-7.585579	comment	4.0	13.5	1505329352	9.985833	Thanks. This is a lot more helpful for non-math geeks than the two initial definitions in the article:> A Monoid can be defined a tuple (M, op, e)This definition lost me completely because I'm not eve...		pluma
15251260	11.683696	-7.8282886	comment	4.0	11.0	1505415188	10.104486	I am curious to know, if there is any explanation for why java performs better than Go.		ram_rar
15140112	12.007129	-7.753626	story	4.0	171.0	1504186140	-10.7632	Nanocoin – A minimal cryptocurrency implemented in Haskell	https://github.com/tdietert/nanocoin	lambdaxdotx
15245095	11.821291	-7.266365	story	4.0	83.0	1505364755	-8.192131	Functional Programming in Python [pdf]	http://www.oreilly.com/programming/free/files/functional-programming-python.pdf	happy-go-lucky
15266239	12.085296	-7.861311	comment	4.0	12.5	1505590007	10.430974	in what sense is ocaml production ready? does it have the tooling? ecosystem? is there even another stl than jane street's library?		mlevental
15266472	11.659439	-7.0658927	comment	4.0	17.0	1505592453	-6.95	"How is writing code that loops over a list simpler than calling:things.Get(""key"")?"		smegel
15265903	11.898453	-7.2341547	comment	4.0	11.5	1505586535	7.2420287	"It's just a cycle: procedural programming -> data oriented programming -> object oriented programming -> functional programmingprocedural programming -> 'I hate all these imperative sequences (""flowch..."		candiodari
15282709	11.839152	-7.391279	comment	4.0	11.0	1505809484	-8.637134	Ok, it might be too early in the morning, but I still don't understand this. I read that post, and the post by 'raganwald that the former linked to, and I still don't see any difference between curryi...		TeMPOraL
15288439	11.757847	-7.273376	comment	4.0	10.5	1505852439	-8.0728855	It's funny how closures are in-fashion and global mutable state is out-of-fashion, when the latter is really a special case of the former.		xamuel
15287192	11.620735	-7.909205	comment	4.0	11.5	1505844434	-10.201656	What's the most popular editor for Go?		meggar
15299082	11.973181	-7.5619006	comment	4.0	19.5	1505947980	10.332098	Thank god. I've felt like we've been getting closer to breaching the peak of the hype curve for what I'd probably call 'monadic pure functional programming' i.e. Haskell, Scalaz, etc. It'll have its h...		alphaalpha101
15302580	12.010856	-7.184244	comment	4.0	12.5	1505996500	9.12267	Same reason given in the bluebird library documentation:> Promise.reduce will start calling the reducer as soon as possible, this is why you might want to use it over Promise.all (which awaits for the...		megawatthours
15303086	11.700506	-7.175755	comment	4.0	12.0	1506000437	9.029231	"I feel the code I wrote while on this bandwagon is the hardest to understand for others and for me myself today.    pullAllBy(pluck(things, 'bar').map(compose(xor, lol, rofl)).reduce(differenceWith('id'))

Just write your transformations inline and go work on the next feature."		jacobr
15307045	11.646919	-7.9095325	comment	4.0	15.0	1506025791	10.213419	As of reading your comment, I'm 100% convinced that Go needs generics. I'm a longtime Go advocate, love coding in Go, but until now thought the lack of generics is just fine.Lately I do a lot of numpy...		paulsutter
15308055	12.244091	-7.553792	comment	4.0	12.0	1506034837	-11.396071	NO language enhancements .... I guess they leave that for the Kotlin guys ...		luizb
15308377	11.616592	-7.8926215	comment	4.0	10.5	1506039173	10.1010895	> but I was heavily impressed by both Goroutines and channels as ideasYou know they didn't invent this right?		kmicklas
15309157	11.6484995	-7.9763856	comment	4.0	13.5	1506049996	10.207462	(NOTE: I am not a gopher) I thought godep was that? It's marked as suitable for production now, and I think official as of their next release.https://github.com/golang/dep		cloverich
15308480	11.86363	-7.7769847	comment	4.0	10.5	1506040473	10.257389	Maybe I'm spoiled, but I've had a hard time dipping my toes into Go due to the lack of batteries included frameworks (like Rails or Laravel). Can anyone recommend some resources to give it another shot?		lucidone
15374430	11.829276	-7.095002	comment	4.0	12.0	1506797608	-9.797904	"Thanks for the article link.I love that ""late binding"" is listed as a flaw.  Some would call that a feature.  Those of us in the ""some"" must be wired a bit differently that the ""early binding"" crowd, I guess :-)"		Roboprog
15384651	11.811166	-7.4454293	comment	4.0	12.5	1506958821	-10.05254	Just a technical point that hints at a significant philosophical idea: The asymptote cannot reach 100% of program behavior in any finitary way. That would solve the halting problem. The x-axis should ...		danharaj
15384752	11.77145	-7.357191	comment	4.0	15.0	1506959367	-8.883644	Definitely. Static typing lets you turn the compiler into a hard-working friend that helps you refactor large projects without going insane.There are no diminishing returns. Defining types is easy and enhances code readability.		drblast
15384805	11.808849	-7.395771	comment	4.0	11.0	1506959705	-8.923481	"""I don't think it's particularly controversial, that static typing in general has advantages""That's not really true, just a belief. I give you an example to start understanding these things: the exact..."		zzzcpan
15339452	11.975643	-7.70746	story	4.0	86.0	1506439461	10.483301	Show HN: Haskell library for pricing and information on crypto-currencies	https://github.com/aviaviavi/cryptocompare	aviaviavi
15400255	12.280838	-7.3039017	comment	4.0	19.0	1507123425	7.0572877	I've always found the 'image' environment to be far more interesting than the language of Smalltalk itself.  If you do find just code snippets, you're missing out on what I, at least, see as the most ...		otakucode
15400575	12.253402	-7.287366	comment	4.0	13.0	1507126585	7.062335	That image environment sounds scary to me. I used to do a lot of hardware development, and what I love most about software is that you can always restart from the clean plate (by restarting the progra...		theamk
15407563	12.032854	-7.8009167	comment	4.0	23.0	1507192905	10.392731	"The problem with category theory and monads, etc are that they are inaccessible for some of the popular tools. E.g. javascript, python, ruby . 
It invariably happens that learning these patterns needs..."		sandGorgon
15441320	11.708338	-7.37423	comment	4.0	21.0	1507639919	-8.798771	"> Type systems to me seem to be (I'm not exaggerating) the answer to all software reliability problems (barring social ones).That's the thing though, the ""social problems"" are the important problems.I..."		erokar
15446764	11.765297	-7.191167	comment	4.0	14.5	1507686761	2.2347345	What is the best-in-class of these things?		hammock
15448803	12.139584	-7.8871846	comment	4.0	11.0	1507720494	-3.1756039	"The thing is, any ""working category theorist"" can see the objects and morphisms of a category from a mile away and don't really need these things pointed out. This paper seems to be a fairly superfici..."		mathgenius
15453148	11.948123	-7.544633	comment	4.0	17.5	1507753575	10.301389	Seems to be similar to the direction taken by John De Goes (using algebras to describe your problem domain, building programs from those algebras via free monads/applicatives/etc., interpreting those ...		harveywi
15464833	11.790118	-7.3517237	comment	4.0	14.0	1507895883	-8.92062	"I invite you to watch this talk.Dynamic typing is about a lot more than having an ""Any"" type. It's about widespread lack of extra code and cognitive overhead associated with the imposed structure of a..."		hellofunk
15466121	11.767021	-7.3596463	comment	4.0	26.5	1507905877	-8.937133	"""a statically typed language can do the same things a dynamic language can do, but not the other way around""It's interesting you'd say that, as I'd consider the opposite to be true. There are function..."		weavejester
15472204	11.93158	-7.244982	comment	4.0	13.5	1507989830	9.226698	"Js:  async function bar(){...}
  function baz() {...}

  async function foo() {
    var x = await bar();
    var y = baz();
    return x, y;
  }

Lua:  function bar() return something_that_may_yield_d..."		wruza
15482954	11.807108	-7.301559	comment	4.0	12.0	1508160259	5.2033906	God would not use an imperative language.p.s.Look, imperative is most of what I've done and ~understand. I am not making it out to be inferior, rather questioning fitness for the job. Time and Place p...		eternalban
15483407	11.988869	-7.7440124	comment	4.0	12.5	1508164272	10.426595	"My feeling is Haskell is a bad teaching language for the same reason C++ is -- there is too much ""this is some crazy stuff you have to learn about the language"" early on.One reason I have learned to l..."		CJefferson
15484557	11.999591	-7.716639	comment	4.0	19.0	1508172046	10.398134	"While I agree that many courses on Haskell are no good ...>> ""up its own butt about monads and type classes and algebraic data types""Well, those are some of the best things about doing functional  pro..."		bad_user
15490691	11.882581	-7.5470505	comment	4.0	22.5	1508246888	10.28358	"I kinda wish the Haskell designers hadn't gone with the term ""typeclass"", as it's incredibly misleading.Typeclasses have a lot more cognitive similarity to Go-style interfaces or Smalltalk protocols t..."		zzalpha
15492073	11.616514	-7.184164	comment	4.0	11.0	1508256354	-8.561011	"> type classes are different because type classes are solved at compile time    data Nested a = Nest a (Nested [a]) | Done deriving Show

    build :: Int -> a -> Nested a
    build 0 a = Done
    bui..."		Tarean
15495911	11.68971	-7.8617487	comment	4.0	29.5	1508284105	10.2434225	> Python, Node and Ruby all have better systems for package managementMaybe they have better tools for managing package dependencies but Go doesn't have to deal with interpreter dependencies, which ca...		carlisle_
15496208	11.663175	-7.329072	comment	4.0	16.0	1508288819	-8.738527	The guy didn't even mention type checking. Guess it's not a big deal to him. Zero type errors during runtime is a big deal.		crimsonalucard
15499082	11.790577	-7.3450656	comment	4.0	13.5	1508334449	9.896737	I think there's a lot of useful unexplored territory in this sort of tool. So much work nowadays is happening in maps/dictionaries/what-have-you, with a lot of work being, essentially, data shape tran...		rtpg
15506556	11.935608	-7.4100747	comment	4.0	10.5	1508405356	7.0741067	Nobody's asked this, so: I've been fascinated with operational transformation for some time, but I haven't found anything that breaks it down into understandable steps.I vaguely recall that last time ...		exikyut
15515672	11.8503	-7.185154	comment	4.0	11.5	1508507054	-9.333318	Don't learn languages - learn pure paradigms. I can write C# three different ways - imperative procedural, functional, imperative OOP.		away2017throw
15524306	12.391063	-7.1484227	comment	4.0	12.0	1508630421	12.341845	Surely ruby's blocks are much better here. For one they're a much more general construct than with, and second exception handling is done with normal language constructs like rescue and ensure. Implem...		RX14
15526236	11.763423	-7.310732	comment	4.0	24.0	1508671294	-8.122571	I would love to use closure, i just stay away from dynamically typed languages - after having a bad experience trying to maintain projects written in a dynamically typed languages which was an awful e...		tomerbd
15529925	11.680389	-7.736475	comment	4.0	14.0	1508719863	10.153157	"So, after ""optimizations [...] to further reduce the resulting bundle size"", a Java command-line ""Hello World"" is still 21.7 MB. I've found a Node.js version (using node-packer [1]) to be about the sa..."		firdak
15534499	11.63194	-7.7746015	comment	4.0	13.5	1508776798	9.902676	JavaScript invented a new concurrency model which IMHO is worse than the invention of 'goto', by putting async mechanisms on the callee side:`result=mayBePromiseOrResultWhoKnows()`instead of`go nowThisSyncMethodIsAsync()`		singularity2001
15433071	11.664981	-7.2671824	story	4.0	125.0	1507550228	9.134136	The Asynchronous Computability Theorem	https://medium.com/@eulerfx/asynchronous-computability-theorem-171e9d7b9423	heydenberk
15448163	12.021431	-7.177357	story	4.0	24.0	1507710468	9.08073	JavaScript's Promise Is Memory Unsafe	https://alexn.org/blog/2017/10/11/javascript-promise-memory-unsafe.html	bad_user
15507081	11.8569765	-7.394283	story	4.0	69.0	1508413840	7.356805	Functional calisthenics	https://codurance.com/2017/10/12/functional-calisthenics/	pedromsantos
15518746	12.273273	-7.3188815	story	4.0	58.0	1508529802	7.0347767	Alan Kay Answers “Is There a Successor to Smalltalk?”	https://www.quora.com/Is-there-a-programming-language-thats-effectively-a-successor-to-Smalltalk/answer/Alan-Kay-11?share=1	davelnewton
15526790	11.743152	-7.184358	story	4.0	60.0	1508679783	7.0112734	Object oriented programming in C (2007)	http://ldeniau.web.cern.ch/ldeniau/cos.html	fanf2
15529186	11.629373	-7.0290546	story	4.0	20.0	1508709476	4.831858	Ask HN: What ideas in programming languages do you find difficult to code?		open-source-ux
15546062	11.6143055	-7.24106	comment	4.0	20.0	1508887286	5.1079197	While dynamic programming is taught in almost all algorithms classes, I think I finally grokked it after implementing it in a few practice problems. Would strongly recommend giving a few exercises listed here a shot: https://leetcode.com/tag/dynamic-programming/		krat0sprakhar
15549074	11.772549	-7.189598	comment	4.0	31.0	1508929611	-8.944891	"From the article: ""Dynamic typing makes Python easier to use than C."" The author gives no justification for this claim. Do any language experts care to comment?"		chmaynard
15550489	11.616615	-7.611931	comment	4.0	13.0	1508942460	10.017847	> Which specific code did you benchmark?I had a csv file with ~16k entries. Each entry has a lat, lon, name and id.The task: given a (lat, lon) pair, list all entries within 5km.The simplest straight ...		hasenj
15569888	11.979569	-7.090461	comment	4.0	19.0	1509121746	-9.614996	"   let plus x y = x + y

This is a statically typed function. If you are going to talk about static typing, learn about type inference and avoid making yourself ridiculous.Also, the fact that types ar..."		Drup
15572809	12.018124	-7.6628394	comment	4.0	11.5	1509144103	-10.455017	How is Haskell a Lisp?To me, a Lisp pretty necessarily needs to treat the structure of its code as mutable data, which seems kind of incompatible?		eropple
15581831	12.05032	-7.145374	comment	4.0	14.5	1509315840	-13.936629	I wish comparisons to Java would use Lombok. I'm never going to actually write something that verbose in Java.		myroon5
15583372	11.749097	-7.392173	comment	4.0	22.0	1509344077	-8.884081	Why didn't refinement types find their way into mainstream languages yet? It seems like it would have a tremendous impact on how programs are written and tested.		ainar-g
15592326	11.672577	-7.929767	comment	4.0	16.0	1509448309	10.157655	"User-facing applications or web services often deal with business logic. That is, logic that models real-life processes and entities, such as ""Customer"" or ""Purchase"". In order to model those kind of ..."		bsaul
15594779	11.743348	-7.3439903	comment	4.0	26.0	1509469778	-8.821927	> Why would you not want to know about these bugs immediately and fix them early in the development process?That's a good question. But enforcing your codebase to be a Rubix cube you have to twist and...		wellpast
15594881	11.775205	-7.3868866	comment	4.0	14.5	1509470703	-8.8373	"> It doesn't if the systems are well-designed sytems, comprised of loosely-coupled componentsI've been going down a similar line of thought. But I went the other direction. That perhaps in ""poorly des..."		wellpast
15604312	11.761251	-7.354902	comment	4.0	11.5	1509562076	-8.946253	Well, I think that static types are much more useful than dynamic ones. Static types allow you to find errors with your program before execution and that is very important. And if you are going to go ...		hristov
15603835	12.105221	-7.6156015	comment	4.0	12.0	1509559389	10.355315	I wanted to like Haskell, but just never could get to the point where I enjoyed using it. It always felt messy and complicated to me. I think the language extensions were a contributor to these feelin...		christophilus
15606535	11.798204	-7.1871004	comment	4.0	20.0	1509579637	8.710523	"> obfuscating what happens when you actually access themThis is the point, AFAICT. In languages with both primitive ""read/write field"" operations that can't be interceded upon, but also with interface..."		derefr
15641761	12.509078	-7.025097	comment	4.0	14.5	1510042980	-13.318872	"Ruby is ""too magical"" for its own sake. And then people abuse their right to use it, things like overriding class methods, etc (the syntax doesn't help in the least and it has some weird quirks when c..."		raverbashing
15643715	11.826928	-7.3819013	comment	4.0	11.5	1510065796	-8.716048	Loved the concise explanations of the What. A nice extension of this would be the Why, something I usually struggle to understand. Currying as an example, I'm none the wiser as to why it's a preferable way of composing a function and it's arguments, or when either is applicable.		have_faith
15644082	11.938516	-7.460077	comment	4.0	12.0	1510068232	7.2688932	Looks like the article on Works Hub was copied & pasted from the original source on GitHub, as others have mentioned in subthreads.  Would be great if we could update the article link to the primary source to give the many contributors credit.https://github.com/hemanth/functional-programming-jargon		tedmiston
15668858	12.505695	-7.084632	comment	4.0	10.5	1510306289	12.373662	> but this one is just not well written and the author has no idea about this subject.Rubbish. The examples are good. The author comes across as enthusiastic. The writing style is fine and engaging. A...		igravious
15672018	11.670542	-7.7894893	comment	4.0	13.0	1510340044	10.23456	Complaints about generics aren't coming from a minority group.  It's a majority now.		dekhn
15672380	11.622654	-7.90584	comment	4.0	18.0	1510343205	10.204756	IMO interfaces are the Achilles' heel of Golang. Another thing that has been bugging me about them is that you cannot specify which interface you're implementing in the code (beside from comments). I ...		terminalcommand
15682450	11.99548	-7.2105775	comment	4.0	12.5	1510518067	9.1932535	Promises and Async/Await are just too slow.  I'll stick with Callbacks.https://kyrylkov.com/2017/04/25/native-promises-async-functi...		sparrish
15686837	11.639651	-7.46841	comment	4.0	13.5	1510584632	-2.1218283	I think a lot of what makes SOLID valuable is that its articulating patterns that make sense to people because they’re obviously good ideas.S -> don’t write spagetti code.O -> If you want your code to...		shadowmint
15686910	11.947077	-7.785729	comment	4.0	12.5	1510585356	10.41211	"Careful here. Let's take a simple example of allocation-heavy vs. allocation-light code in OCaml:  open Batteries

  let bench name fn =
    let tstart = Unix.gettimeofday () in
    let result = fn ()..."		rbehrends
15701955	11.632086	-7.0486946	comment	4.0	15.5	1510729314	-8.943443	Yes but that's strange. Java is such a staticaly typed language you would not expect it to do that if you are like me and don't know it very well.While Python is very dynamic, but:     >>> print(1 + 2...		sametmax
15732781	11.815007	-7.0566053	comment	4.0	15.5	1511077446	8.253961	"What are the features that c# is missing?
As the other comment explained delegates are the equivalent of anonymous inner classes and are far better.
Checked exceptions are really a nuisance, I would c..."		tigershark
15735286	11.988593	-7.6212273	comment	4.0	19.5	1511117956	10.34401	i know this is a haskell thread but after trying to grok haskell for years (yes i understand monads) i've discovered F# and jesus christ what a dramatic difference in functional language ergonomics an...		mlevental
15735390	12.027723	-7.695261	comment	4.0	11.0	1511119092	10.421467	On Hacker News I've noticed people read titles, then go to the comments section to dump whatever thought is on their minds, triggered by certain keywords like some game I used to play as a child, as a...		bad_user
15738579	12.190228	-7.262285	comment	4.0	15.0	1511166272	12.063315	never understood why people didn't just used maven/ant.sbt should never have been more than a config-file-compiler to some subset of the above.		gcb0
15740526	11.63505	-7.081595	comment	4.0	14.0	1511191638	9.120913	Some of those examples trade development hell with debugging hell (e.g. list comprehensions). While working with Python's list comprehensions, I often find myself writing loops instead of super-compli...		bitL
17281513	12.4660425	-7.11119	comment	4.0	11.0	1528687530	12.37947	Former Ruby developer here. I believe we will look back at this period where we eschewed static typing as a historical mistake.Back in the 2000s I was using mostly statically typed languages (Java, C/...		atombender
17296898	11.737223	-7.361544	comment	4.0	11.5	1528830843	9.822415	"Did you consider parameterized packages? The idea is you can declare a set of related objects/types/methods as well as have concrete type specific initialization. E.g.  package stack[t]
  type Type []..."		bakul
17308256	12.03563	-7.779231	comment	4.0	14.0	1528936221	-3.2098057	"Is there a name for this phenomenon, where a category is defined so much by ""weakened"" examples of it (e.g. your average 1/10th programmer, or your average mostly-just-a-library-clerk librarian) that,..."		derefr
17313378	12.231548	-7.638376	comment	4.0	24.0	1528997080	11.95317	"I'd love to hear more about your troubles with Scala, and any examples of ""clean code being hard to write"".  Do you think this had more to do with a lack of experience with strongly typed functional l..."		anthonybullard
17322300	12.13295	-7.487303	comment	4.0	12.5	1529087758	-10.636715	I like this, but I hate the FOUT that it seems to create		anchpop
17324911	11.726988	-7.049734	comment	4.0	13.5	1529108579	-10.552179	Explain why ['1','1','1'].map(parseInt) returns [1, NaN, 1] but ['1','1','1'].map(n => parseInt(n)) returns [1, 1, 1].		hkjkahfjddd
17344017	12.2171135	-7.618576	comment	4.0	10.5	1529385444	-11.408021	Benchmarks game used to have stats for Scala but apparently not anymore.Many of Scalas abstractions, unlike Kotlin, have runtime cost		thermodynthrway
17340028	11.634784	-7.957764	story	4.0	5.0	1529343062	10.242178	Do we still need make/makefiles in 2018?		Ch3ck
15722697	11.698792	-7.392032	story	4.0	101.0	1510932612	-8.72391	Monotonicity Types: Towards a Type System for Eventual Consistency	http://prl.ccs.neu.edu/blog/2017/10/22/monotonicity-types-towards-a-type-system-for-eventual-consistency/	cmeiklejohn
17333699	11.665666	-7.90706	story	4.0	16.0	1529261735	10.1972475	Go package to make ASCII line graphs	https://github.com/guptarohit/asciigraph	guptarohit
17361100	11.803444	-7.167239	comment	4.0	13.5	1529540747	-8.97466	I agree, and yet dynamic languages such as Python continue to gain popularity because they are supposedly easier for newbies to pick up. I think we (experienced software developers) have to do a bette...		brianberns
17363608	11.816231	-7.1843696	comment	4.0	14.5	1529575927	-8.9976635	I'm a fan of this multi-language trend of gradual and optional typing. Static typing has definite benefits, but there are also diminishing returns on productivity as a language becomes more and more s...		hellofunk
17364589	11.682007	-7.2980714	comment	4.0	10.5	1529585441	-8.801303	How is a language which doesn't have a type checker a synonym for clean code?		kungito
17373093	11.948458	-7.5478926	comment	4.0	10.5	1529666497	0.970466	What does the property 'contravariant' or 'covariant' belong to: function, functor, class, type class, data type, function or method argument, function or method return value, generic type/collection or something else?		techno_modus
17374452	11.791296	-7.3191314	comment	4.0	16.5	1529679607	-8.933903	Can anyone suggest a good embedded language with static or at least optional typing ? I feel this is a gap in the market for embedded languages.		vitriol83
17377953	11.7869835	-7.49064	comment	4.0	17.5	1529705918	-7.492647	> if it supports first class functions, passing around no arg functions is harder than it should be.Can you expand on that? How does no parens make it harder to pass around first class functions? In G...		jdreaver
17382627	11.822265	-7.490068	comment	4.0	14.0	1529778537	10.150012	I think it's the crappy jvm's that keep giving java a bad name. If only you could compile native executables independent of a runtime/jit/bytecode.On the contrary java has been around since 1994. Who knows how mature golang and python will get after aging and maturing like java.		badrabbit
17394228	11.874329	-7.642388	comment	4.0	14.5	1529948742	10.41012	This is rather off-topic, but I want to learn Idris or any other purely functional programming language one day to the point where I would be able to read any program, but most programs written in tho...		ainar-g
17418409	11.747245	-7.308978	comment	4.0	15.5	1530203991	-8.091756	"after some functional programming experience, you may learn that functions just compose more elegantly than objects.
""Objects are a poor man's closures"" (NN)"		toolslive
17441624	11.894968	-7.0651507	comment	4.0	12.5	1530539854	-10.64429	Which is strange given the first version of bittorrent was written in Python.Also, the default torrent client in Ubuntu is Deluge, which is in Python too. I download 20 torrents at 20M/s without any i...		sametmax
17441223	11.949181	-7.7336273	comment	4.0	19.0	1530536142	10.389464	Cute, but why should one care about ⊥, aka bottom, aka nontermination [0]? Let's write programs that terminate...[0] https://wiki.haskell.org/Bottom		pacala
17441564	11.602358	-7.9633536	comment	4.0	11.0	1530539417	10.235098	Considering that C doesn't have any good facilities for polymorphism, it's going to continue to be the argument of any language that succeeds C. Unless, that is, that successor language also doesn't h...		kibwen
17441760	11.9973545	-7.7521505	comment	4.0	15.0	1530540696	10.414757	I always scares me how little I understand from comments talking about Haskell. Either I'm much more dumb that I though, or the whole community decided that purity beat practicality.		sametmax
17442743	11.607446	-7.895668	comment	4.0	14.5	1530547031	10.229137	static typing doesn't appear to be an effective tool for encoding intentStatic typing is about as effective at encoding intent as intention revealing names. That is to say, if you are diligent and cle...		stcredzero
17449482	11.737996	-7.14439	comment	4.0	18.5	1530619990	9.1710415	Haskell has always officially inspired Python tooling. But Python does things in it's own way, and they are not random, they are the result of an opinion.First class citizen functions, short lambdas, ...		sametmax
17448946	11.595843	-7.045583	comment	4.0	13.0	1530612547	9.030194	"This immediately looks useful for things like:    if foo := bar[baz]:
        bar[baz] += 1
        return foo
    else:
        bar[baz] = 1
        return 0

Where foo is a dict keeping track of mul..."		stfwn
17454500	11.819205	-7.0424867	comment	4.0	10.5	1530662598	8.975253	For beginners? Whatever’s most popular on the job market. Ideally something with C syntax. Most languages are similar enough and their quirks can be avoided. Lisps are definitely a bad idea for this s...		_diyu
17458118	12.05874	-7.8108416	comment	4.0	10.5	1530722013	10.39422	IIRC OCaml compilation was super fast and the errors were useful and pointed to the correct line.What is/was the problem with the current parser?		swah
17458718	12.063114	-7.841748	comment	4.0	15.5	1530728679	10.422664	For a smart contract platform, it's probably ok that ocaml isn't multithreading friendly. But what a disappointment if this is still the case: https://ib-krajewski.blogspot.com/2015/11/ocaml-and-multi...		woolvalley
17460393	12.079244	-7.8332963	comment	4.0	13.0	1530754931	10.432756	When I tried to really get into ocaml a few months ago I loved it! Until I actually tried to put together a project with it. Every tutorial and doc seemed to be slightly out of date or not compatible ...		totalperspectiv
17463822	12.241751	-7.5390735	comment	4.0	14.5	1530803262	-11.37755	"> First off, I was genuinely surprised by the love students and more junior developers are giving Kotlin.This seems to indicate that the ""love"" Kotlin gets is mostly fad motivated. Just like younger g..."		ythn
17467469	11.98136	-7.21551	comment	4.0	11.0	1530830374	9.181712	I advise the opposite of these points. Start with es5, at least for a few days. Go through the old tutorials, especially for promises.Make sure you understand these, in order:1. callbacks2. promises3....		nothrabannosir
17365251	11.727465	-7.218621	story	4.0	83.0	1529590290	8.691151	The Current State of Java Value Types	https://www.infoq.com/news/2018/06/JavaValuesJun18	pjmlp
17440152	11.910975	-7.712154	story	4.0	70.0	1530520708	10.420024	Rethinking Static Reference Tables in GHC	https://simonmar.github.io/posts/2018-06-22-New-SRTs.html	tuukkah
17516765	11.618957	-7.0482717	comment	4.0	14.0	1531416511	-8.881334	I think he made a right call blocking all of those. There are Pythonic ways to do all of those already and the mantra there should be one and preferably one way of doing things is important for the ph...		bluecalm
17520024	12.25146	-7.308621	comment	4.0	12.0	1531447475	7.126881	If it’s so great, why isn’t it used in industry? Cranking out functionality is what everyone wants. As someone who has never seen or used it, I always hear about how all these languages are inspired b...		woah
17522209	11.652862	-7.245938	comment	4.0	16.0	1531484004	8.615322	"Hmm.  Just checked memory use on some services we run on Go, Node, and Java.  I'm not part of the Java team but results:Go:   40M
Node: 64M
Java: 4GBAny Java service I've seen in production has simila..."		base698
17522126	12.197477	-7.3861814	comment	4.0	11.0	1531483231	-11.299872	One annoyance with Java(and Kotlin too) is that it's pretty much the only language left that you really ought to use a specialized IDE with while pretty much every other language(including C#) you can get adequate support in VS Code or Emacs.		hugh4life
17523593	11.884	-7.6309886	comment	4.0	11.5	1531494739	12.804256	Hi Tom. Dave here. I like a lot of the features in TOML, but I'm curious, can I have a pony?(Folks downvoting, PLEASE JUST LET PEOPLE HAVE JOKES EVERY NOW AND THEN)		KirinDave
17525317	12.234248	-7.6370544	comment	4.0	13.5	1531505612	11.934	> Egison is a programming language that realizes non-linear pattern-matching against non-free data types.It's a what? Can someone ELI5 this for a lowly Python and JS dev - why would I want this?----I ...		vosper
17533947	12.05445	-7.758332	comment	4.0	15.5	1531633083	10.4386635	All pretty different languages.Haskell and OCaml are both functional programming languages (well OCaml has OO support as well) that have a REPL, interpreter, and native code compiler. They have decent...		3rdAccount
17538429	12.028933	-7.805209	comment	4.0	14.5	1531709495	10.411459	"I have been doing programming, including functional programming for more than two decades, I still don't really know what a ""monad"" is. Each time someone explains it to me, I understand something different."		kuon
17538528	11.880433	-7.682628	comment	4.0	19.5	1531711364	-9.449174	Since we're talking about Dijkstra, thought I'd bring up the letter he wrote to the University of Texas when they replaced Haskell with Java in their introductory programming course:https://chrisdone.com/posts/dijkstra-haskell-javahttps://www.cs.utexas.edu/users/EWD/OtherDocs/To%20the%20Bud...		Cieplak
17565953	11.774159	-7.1437597	comment	4.0	21.0	1532006326	-6.360628	This comment puzzles me.  For one, I can't recall meeting a stong FP proponent that accepts anything less than a language designed from the ground-up to be true FP.  Second, how is Python afraid of FP...		metalliqaz
17567102	11.768951	-7.162379	comment	4.0	10.5	1532013477	9.72061	Did C# really break backwards compatibility of their bytecode? What I understand is that C# generic and non generic APIs are completely different, and are not inter operable.		enitihas
17574380	11.604304	-7.90043	comment	4.0	19.0	1532089227	10.161264	I'm also excited to see where this leads.From the release notes:> Go programs currently compile to one WebAssembly module that includes the Go runtime for goroutine scheduling, garbage collection, map...		hartz
17580838	11.7895355	-7.2949476	comment	4.0	12.0	1532151275	-6.274151	"When referring to ""state"" are we talking about just mutable state? Or are we talking about both mutable and immutable state as being equally undesirable? Because in my experience immutable state is fi..."		MattyRad
17579643	12.246722	-7.618848	comment	4.0	10.5	1532127262	-12.056741	You are right! I should stick with Scala. It will also give me the opportunity to learn a new language!Play looks good, but maybe I should go with Scalatra instead? Should I be using Slick? It's quite...		noncoml
17590962	11.811145	-7.816517	comment	4.0	11.5	1532328403	11.926567	Scala is like Rust and Rust is like Scala. They are proud of their complexity.		peeyek
17563364	11.895867	-7.485893	story	4.0	5.0	1531963557	7.6444592	Ask HN: Should you always prefer pure functions?		crcl
17645876	12.024835	-7.810922	comment	4.0	13.5	1532969545	10.441477	The best practical description of monads I've heard, with apologies as I do not remember the quote's author:What if, in C++, the semicolon was an operator you could overload?		rhencke
17645926	11.988635	-7.790883	comment	4.0	11.5	1532969799	10.451781	You're describing my pet peeve with research in programming languages, or more generally use of abstractions in CS. What you're writing makes sense: Understand the structure of your problem, then thin...		mbid
17646442	11.974738	-7.7732086	comment	4.0	16.0	1532973072	10.376553	so you are telling me if getChar::Char haskell wouldn't return the same char all the time?Or are you telling me it needs a rather elaborate type signature(World -> (Char, World)), which is entirely the point the author is making here why haskell as being a lazy language needed monads but not ML.		xfer
17646907	11.97656	-7.713907	comment	4.0	13.5	1532976396	10.405689	>Not only do you get to use it's wonderful type system but you can compose together small imperative programs into bigger, more useful ones.These bigger, more useful programs you can write with Haskel...		fooker
17647078	12.03139	-7.8098083	comment	4.0	13.5	1532977740	10.398276	"> Then why, oh why, do we have so many people who spout, ""A monad is just a monoid in the category of endofunctors, what's the problem?""It's a joke/dank maymay that Haskells still find funny long afte..."		bitwize
17650273	12.01145	-7.802661	comment	4.0	17.0	1533006914	10.45415	It’s not native vs VM, but rather “has stack semantics/value types” vs “no stack semantics/value types”. In particular, OCaml’s standard implementation is a native, not VM.Also worth calling out Go, w...		weberc2
17668233	12.288767	-7.56157	comment	4.0	11.5	1533168797	12.85627	"I find this resource confusing and annoying to read. When performing my thesis research I wasted a bunch of time trying to make sense of Hewitt's writing. I think a big problem is that the term ""actor..."		Zalastax
17676512	11.708732	-7.048328	comment	4.0	12.0	1533255583	-8.982326	One of the things I really like about python is that constructors are basically just regular functions with some extra metadata unlike languages like JavaScript where you are required to use the speci...		slaymaker1907
17693064	11.978553	-7.7415547	comment	4.0	15.0	1533497917	10.400617	I built my computer graphics final project in Haskell so that the TA wouldn't be able to run it and grade it. Then for our presentation, I babbled on and on about the math and went over time so we wouldn't have to give a really crappy demo.		SamReidHughes
17707957	11.785432	-7.3527966	comment	4.0	28.5	1533658698	-8.852642	"Language with ""dynamic"" type can't be called ""statically typed""."		EugeneOZ
17739519	12.0828905	-7.815813	comment	4.0	13.0	1533992759	10.428034	It would be cool to start seeing more of this from other companies. Also, I wonder if anyone has done an extensive cost-benefit analysis of using OCaml instead of a more common language. It seems like the training and cost of always needing to build your own frameworks would be exceptionally high.		abalos
17775881	11.663796	-7.198226	comment	4.0	10.5	1534435833	6.8300858	Am... am I a function? Oh my god		tuespetre
17782219	11.598205	-7.897364	comment	4.0	11.0	1534508436	10.199347	In Go single letter variables are used when they are short lived (3 or 4 lines) and in this cases I find it way more readable than long names.		dawkins
17646169	11.733766	-7.3465157	story	4.0	52.0	1532971282	9.165655	Loom prototype available – fibers and delimited continuations for the JVM	http://mail.openjdk.java.net/pipermail/loom-dev/2018-July/000061.html	spullara
17669993	11.691992	-7.2920103	story	4.0	78.0	1533197868	-8.766771	Compiling Lambda Calculus	http://t3x.org/clc/index.html	nils-m-holm
17710809	12.258106	-7.560806	story	4.0	121.0	1533676049	-11.409406	Android Pie SDK is now more Kotlin-friendly	https://android-developers.googleblog.com/2018/08/android-pie-sdk-is-now-more-kotlin.html	ingve
17744231	11.887206	-7.258571	story	4.0	39.0	1534080021	9.133251	Issue: Async script stalls page load	https://git.habd.as/comfusion/fractal-forest/issues/4	jhabdas
17790830	11.76542	-7.2685666	comment	4.0	13.0	1534627548	-10.27017	Optic [0] caught my eye. They seem to have made possible a new kind of abstraction in code. Something that's different from both functions and macros. It's a kind of abstraction that can be arbitraril...		AriaMinaei
17813220	11.995489	-7.7488513	comment	4.0	18.5	1534881852	10.475821	> I'm not sure why LYAH wasn't good for me, when it's touted as being a great starting placeIt's not. It's a terrible starting resource. Majority of people I anecdotally hear gave up on Haskell seem t...		BoiledCabbage
17827855	11.960736	-7.54799	comment	4.0	10.5	1535036854	10.421287	A bit offtopic but: has anyone used SML (https://www.smlnj.org/) for anything serious?I fell in love with this language in University long ago (in the 90s), but  I have never seen anyone use it in the wild.		magpi3
17831248	12.132656	-7.183395	comment	4.0	21.5	1535064566	7.1475673	> Natural Selection: Languages and systems that are of sound design will persist, to be supplanted only by better ones.I loved coding in Smalltalk years ago. Guess “better” turned out to be rather subjective...		mrexroad
17842881	12.371277	-7.4786396	comment	4.0	12.0	1535235445	12.841305	Maybe it's my recent living in the Erlang/Elixir community, but writing code that is not possible to crash doesn't make sense to me. Servers die, machines get unplugged, network partitions happen, etc...		_asummers
17851685	12.338267	-7.0521107	comment	4.0	12.0	1535380202	-9.771786	>We've also just optimized for features, time to market, and programming approaches that don't require the most highly-skilled and trained developersWe think we have been optimizing for those things, ...		gameswithgo
17860179	11.84331	-7.2083583	comment	4.0	14.0	1535473753	9.977557	It'll be interesting to see how Go handles a new major version. Will it be a Python 3 situation? Or more like, I dunno, Ruby 2 and onwards.		s_kilk
17860235	11.639611	-7.926792	comment	4.0	20.5	1535474055	10.207744	"Looks good. The control flow of ""handle"" looks a bit confusing, but overall I definitely like the direction this is going.The decision to go with concepts is interesting. It's more moving parts than I..."		pcwalton
17861545	11.616136	-7.9217587	comment	4.0	15.0	1535481370	10.215914	I am disappointed that go seems to follow Java and C++ with generics support instead of taking a more LISP-like turn like e.g. Julia.I would much rather have powerful hygienic compile-time macros to g...		dagss
17861690	11.616	-7.4080997	comment	4.0	14.0	1535482231	9.994079	Well, shoot. I don't like/don't want to like Go, but they keep getting better.My general annoyance is that they keep things ~just different enough to be irksome, e.g. in this proposal generics is usin...		stephen
17863007	11.620629	-7.944597	comment	4.0	11.5	1535491247	10.209795	"Sorry, still don't get it. Extra contract code needs to be written just to prevent ""cryptic"" compile-time errors? It's just a type mismatch/error like many others to me. Cryptic error messages can be ..."		lazyjones
21004695	12.01546	-7.8001747	comment	4.0	10.5	1568810364	-3.3045342	This is misleading. There's no place in the specification of Haskell that specifically defines monads as part of the language. They aren't a language feature. They are a pattern which happens to be ex...		notfashion
21019121	11.7168665	-7.0694094	comment	4.0	13.0	1568917998	9.025205	I'm finding that in Javascript, I really enjoy map() and filter(), but map() caused some friction on code reviews at one place, from someone I don't think had any FP background.  The are best when the...		hinkley
21019666	11.939178	-7.4559155	comment	4.0	15.0	1568920942	7.240149	I think these sorts of examples dodge the real issue. Of course you can show a (perhaps needlessly) verbose procedural example of an algorithm that lends itself perfectly to FP and then demonstrate ho...		fauigerzigerk
21035903	11.657526	-7.966767	comment	4.0	10.5	1569079691	10.194208	"Go is usually used for microservices, and for that scenario, Ristretto is not applicable since it's a library, and not a ""shared server"" like Redis. Am I right?"		wiradikusuma
21040193	12.065392	-7.828137	comment	4.0	14.5	1569138840	10.423154	Three things left for the full glory: better Windows support (without MinGW/Cygwin hacks, or WSL), better debugging and profiling (see DWARF PRs in GitHub repository), and, of course, multicore. Looking forward to more OCaml and faster OCaml.		xvilka
21050012	11.9760895	-7.4465437	comment	4.0	14.0	1569253768	-10.600721	FP tends to have a disregard for practicality, and performance especially. Yes, it's elegant, by being abstract, but this abstraction comes at a cost.After falling in love in it, I wrote a large proje...		jaked89
17808657	12.282588	-7.548809	story	4.0	114.0	1534850683	-11.383907	Kotlin 1.2.60 comes with native compiler binaries	https://github.com/JetBrains/kotlin/releases/tag/v1.2.60	dleskov
17828023	12.227101	-7.693477	story	4.0	36.0	1535037979	10.383467	Show HN: Sketch.sh - Interactive OCaml and ReasonML Sketchbook	https://sketch.sh	thangngoc89
17848974	12.41444	-7.328224	story	4.0	34.0	1535334973	7.13699	Bessel Beam	https://en.wikipedia.org/wiki/Bessel_beam	mojomark
21017670	11.710548	-7.0913653	story	4.0	17.0	1568909871	8.965769	Python proposal: add immutable (persistent) dictionaries	https://www.python.org/dev/peps/pep-0603/	dikbrouwer
21064959	11.876852	-7.3319125	comment	4.0	41.5	1569361531	-4.6385803	This is huge! Finally no more need to use IIFE's for top level awaits		miguelmota
21086895	11.950727	-7.281124	comment	4.0	12.0	1569541569	7.0689383	"A nice thing about ""everything is an object"" languages is that 
a.isGreaterThan(b) seems less ambigous than isGreaterThan(a,b). There are natural langauges that are Verb-Subject-Object. It seems less ..."		ppod
21088751	11.746361	-7.090977	comment	4.0	14.0	1569562425	-7.532746	"Named function parameters are nice, but you can accomplish something similar with only two more characters in some languages:      DrawRect({at: origin, width: 30, height: 40})
  vs. DrawRect(at: orig..."		anonytrary
21109927	11.649609	-7.9658155	comment	4.0	16.5	1569795017	10.222667	The basic-ness of golang is the best part about it.		kache_
21134748	11.631351	-7.9612	comment	4.0	10.5	1570009572	10.217503	Can you elaborate a bit? I'm not really a fan of go, but not all go projects are automatically bad. Is it slow, a memory hog, ...?		iforgotpassword
21146352	11.647	-7.0389357	comment	4.0	11.5	1570106987	8.956166	I understand this is for rapid prototyping and not for production use, as the author clearly stated.  But it did remind me of an anti-pattern I see all the time at work that does make it's way into pr...		fuball63
21147622	11.926905	-7.6479745	comment	4.0	13.0	1570114125	10.405883	"Python may be terrible, but this poster doesn't know Python at all. Here's how to fix the first snippet:    leaf = object()

Huh, that's funny, it's shorter than the Haskell? Why is that? Let's keep g..."		lidHanteyk
21152675	12.017336	-7.735552	comment	4.0	13.0	1570139872	10.391018	I learned Haskell and it's a giant waste of time. I'm not the only one who regrets functional programming either. Since then I vowed never to take things seriously that have zero connection to real wo...		zelly
21170784	11.939678	-7.4619937	comment	4.0	34.5	1570353124	7.257966	I guess that's the main problem.And look, defining a problem functionally works great on 10% of the cases, but it complicates some 40% of other cases (very imprecise numbers).The world is not function...		raverbashing
21171075	12.000259	-7.6573997	comment	4.0	13.0	1570357507	9.92494	> I cannot imagine anyone using a database effectively on any significant amount of data without understanding indexes, how different joins work, why join order is important, what effect join orders h...		tome
21171008	12.026914	-7.811798	comment	4.0	33.5	1570356397	10.387874	Blog post that explains Functors, Applicatives, And Monads in pictures http://adit.io/posts/2013-04-17-functors,_applicatives,_and_...		ducaale
21171130	11.9954	-7.745419	comment	4.0	15.0	1570358306	10.413168	And how many people dropped out of CS because of that first Haskell course? I saw plenty of people struggling with Python initially and I know exactly how they felt later when we had to learn Haskell.I think if I had to learn Haskell first, then I would've just given up at the start.		Mirioron
21171204	12.01004	-7.7441816	comment	4.0	14.0	1570359392	10.340414	> In a functional world persistence (e.g memory) cannot be a thing.Why not?To give a functional Haskell flavoured example, I can use the Reader and Writer monads (which are functional) to create a who...		kchamplewski
21172178	12.164629	-7.889845	comment	4.0	14.0	1570371467	-3.2931292	Come on it only took me 3 semesters of category theory and I was ready to use ‘do’		duckqlz
21204464	11.688883	-7.4432936	comment	4.0	15.5	1570636927	-10.72078	what is this strange obsession with type , it improves performance yeah sure . but to go around claiming that it is a panacea for all things poorly planned is pure unadulterated stupidity. i can conce...		elisharobinson
21204534	11.643017	-7.8864455	comment	4.0	15.0	1570637348	10.16491	I found an interesting subtlety to the message here. They had a Python wrapper around a C library, and effectively never updated the library. I wonder if this was due to engineering decisions, hiring/...		derivagral
21216882	11.660117	-7.921338	comment	4.0	18.0	1570727251	10.281769	1-7 of these features exist in C#, and in C# you get a real type system. C# isn't even my favorite language that has all these features, just the most mainstream.8-10 are of dubious usefulness. It see...		kerkeslager
21227689	12.302726	-7.0195317	comment	4.0	11.5	1570822687	13.167055	And other people love chasing new shiny things. I'm yet to see another language ecosystem that solves 99.99% of the problems one might have the way CPAN does.Would I write an API in perl? Nope.Would I...		notyourday
21227887	12.356636	-7.1249294	comment	4.0	40.0	1570824082	13.167561	When someone says they want to work in Perl6/Raku, they likely have vastly different problems than someone using Erlang/Elixer. There is overlap of course (both general purpose), but I can't imagine using Erlang for scripting, while Raku is first class here.		7thaccount
21228129	12.29889	-7.0805736	comment	4.0	16.0	1570825586	13.158201	This is great news both for Perl and for Raku. I will probably bother to take a serious look at Raku now, sometime, if anything just for curiosity. Why not before? I have no good answer for that.But m...		natch
21230730	12.177394	-7.1036234	comment	4.0	11.0	1570855274	-11.160564	Even if GraalVM fixes startup times aren't JVM languages just too long-winded for scripting? Perl, Python and Ruby dominate the scripting world for a reason - standard libraries for file, dir and path...		cutler
21231063	12.335338	-7.0440693	comment	4.0	11.0	1570861910	13.193364	"Is there a TLDR on what's wrong with the name ""Perl 6"" for those of us who have zero context?"		anonytrary
21236354	11.664525	-7.0497494	comment	4.0	12.0	1570914649	-9.006546	"Part of the problem here is clearly this person is mapping JavaScript idioms to python; in particular ""Needing to put dict property names `{'in': 'quotes'}"": these aren't object properties, these are ..."		akubera
21250723	11.64119	-7.9763107	comment	4.0	15.0	1571074532	10.197892	The Go team is working on an update of its scheduler to make it preemptive. Will Tokio follow suit?https://github.com/golang/go/issues/24543		networkimprov
21256509	11.851594	-7.259005	comment	4.0	10.5	1571127453	3.8181307	He wants top level functions. He wants to not have to write classes if he thinks the domain doesn't need modelling as objects.		oblio
21256670	11.756112	-7.1907506	comment	4.0	13.0	1571129410	-8.808887	This got missed from the release announcement, but now there's `functools.singledispatchmethod`,[1] as the class method sibling to `functools.singledispatch`.[2] This allows you to overload the implem...		Xophmeister
21274125	11.75372	-7.1950045	comment	4.0	19.0	1571252628	9.17962	One of the things I like about Java's streams is that it makes the verb-chaining more obvious, at least to me.list.stream().filter().mapToInt().sum() just reads better to me than sum( mapToInt( filter(list) ) )		thomascgalvin
21274949	11.823262	-7.323993	comment	4.0	10.5	1571256717	9.307562	Agreed. Some functional languages (like F#) have a pipelining operator |> that gives the same syntactic impression:    list |> map (1+) |> filter odd |> sum		Twisol
21281291	12.064151	-7.669	comment	4.0	19.5	1571315468	10.4274845	Perhaps not a satisfactory response but when I start drifting towards thinking FP is fundamentally not as performant as _whatever_else_, I remember that Jane Street uses OCaml basically from top to bottom, and they certainly can't be too slow... Some black magic going on there.		Ragib_Zaman
21281490	12.018595	-7.772751	comment	4.0	13.5	1571316857	10.422417	I regularly read the assembly output of the OCaml compiler I'm using and there are very few surprises. The mapping from source to generated assembly is quite straightforward. You couldn't say the same for Haskell, though. So it depends on which FP language you're using.		classified
21283484	11.9998665	-7.4411063	comment	4.0	16.0	1571328518	7.183663	OTOH, think of the vast hordes of new developers exposed to lot's of FP and NOT having that background in Amiga and PC and bare-metal programming that you do.FP has been largely introduced into the ma...		hootbootscoot
21282130	11.913725	-7.4745507	comment	4.0	18.5	1571320974	7.297437	I too have been programming professionally for nearly two decades. Much longer if you consider the time I spent making door games, MUDs, and terrible games in the 90s.I think functional programming gi...		agentultra
21284055	11.993017	-7.711967	comment	4.0	11.0	1571331816	10.429033	The more I see it in use, the more I want to learn Haskell, but I can't think of a practical reason to do so.		rpmisms
21283724	11.951791	-7.451416	comment	4.0	13.0	1571329948	7.162445	Functional programming is not new, it has been around for many decades. The reason it didn't catch on is because it doesn't map very well to how our brain works. Human brains are object oriented, so O...		flowerlad
21285829	12.199621	-7.1851716	comment	4.0	12.0	1571342480	13.178365	"I still can't understand why Perl is easily dismissed as ""LOL line noise"" but Haskell's apparently fine. At least dipping into Perl you can take on the line noise slowly so you have time to absorb eac..."		shantly
21286381	11.99439	-7.753432	comment	4.0	11.5	1571346533	10.448215	I have taught both Haskell and Java and there is no comparision in difficulty. Teaching basically all of the Java language can be done in a couple of days (excepting generics, which take another day o...		CJefferson
21286751	11.993291	-7.7539845	comment	4.0	16.0	1571349752	10.435096	So if somebody asserted that INTERCAL-72 is the proper language to use for production code, you would consider it unfair to contradict them until you've used INTERCAL in production code yourself?Perso...		microtherion
21286828	11.953804	-7.700648	comment	4.0	11.5	1571350377	10.395545	"Note that this is to make Haskell more readable to non-Haskell programmers (which is a bit of a weird goal IMO). It is not for readable Haskell in general. Advice like ""not using $"" just makes code le..."		PeCaN
21290674	11.762406	-7.3508186	comment	4.0	18.0	1571400982	10.253252	Pattern matching for one. I can prove that 3 cases won’t be met but I have to ‘fill in’ them anyway.ADTs with non-Maybe fields. I can prove that all is fine if this ‘slot’ isn’t filled in.Trying to pass an opaque reference down a function call chain.There’s 3.		wellpast
21298924	11.929572	-7.2987666	comment	4.0	18.0	1571498387	6.986366	> You can’t add code to ducks.> You can’t refactor ducks.> Ducks don’t implement protocols.> You can’t create a new species in order to separate some concerns (e.g. file I/O and word splitting).It's o...		ben509
21300776	11.733266	-7.3273573	comment	4.0	11.0	1571519301	-7.406875	"This is how it would be done in Java:  class Parent {  
    public void first() {};  
    public void second() {};  
    public void third() {};   
  }

  class Child extends Parent {  
    @Override  
    public void third() {}; //change implementation of third function, reusing the first two.
  }"		callmeal
21307208	11.759438	-7.1312404	comment	4.0	15.0	1571606120	-8.981003	> I wish there was a language that let you move gradually from one end to the other, exactly when you need to.This is precisely what gradually typed languages — like TypeScript, Flow, and typed Python...		bcherny
21322531	11.925196	-7.7242856	comment	4.0	11.5	1571744694	10.41425	For me, one of the biggest non-starters is a slow compiler, or rather a compiler that doesn't scale well. When people talk about how smart their type system or their compiler is, it immediately rings ...		gridlockd
21323580	11.908021	-7.7104363	comment	4.0	12.0	1571752377	10.404345	That error message is annoyingly weird but is more to do with tryhaskell.org than haskell itself.  Lots of programming languages which have a strict type system (eg Rust) deliberately choose not to co...		seanhunter
21261004	11.913189	-7.6870685	story	4.0	14.0	1571159835	10.344265	Beating Decades of Optimized C with 80 Lines of Haskell	https://chrispenner.ca/posts/wc	szemet
21336928	11.663302	-7.769438	comment	4.0	11.0	1571852319	10.170728	Embedding like this will only lead to pain long term. It's preferable to implement the interface you want to fulfil directly (by having actual method definitions), despite the extra ceremony. Inherita...		AYBABTME
21346884	12.025939	-7.2135835	comment	4.0	23.5	1571937891	9.157877	These frameworks should be architected to support async/await scenarios natively instead of all these convoluted workarounds. Promises/async have ben around long enough.EDIT: JS is already dynamic. If...		manigandham
21350309	11.653783	-7.143174	comment	4.0	16.0	1571960469	9.326274	"Somewhat off-topic, but what's with the lambda replacing the ""n"" letter? I'm no expert in Greek but I thought lambda was the equivalent to the letter ""l""..."		airstrike
21352747	12.233881	-7.6252832	comment	4.0	11.0	1571989380	-10.69276	Scala supports Unicode characters in identifiers. It would be interesting to know your take on that.		jankotek
21384878	11.817021	-7.245018	comment	4.0	11.0	1572334451	-8.991358	Static typing is not at all bad; usual static typing mechanisms are, due to the fact that most of them force you into designing your types before you even have a working prototype.(If you should first...		tmcb
21421249	11.816117	-7.304178	comment	4.0	19.0	1572628479	10.077994	i think type obsession should stop . And more effort should be placed on performance optimization of exiting apis. but there is lot to be learned from LTS lifestyle of other products like debian and redhat which allow community to be built around them.		elisharobinson
21475374	11.683074	-7.3603644	comment	4.0	16.0	1573148786	9.226286	The level of fanboyism in the comments is saddening. Many other fast and productive languages have async since a while.		eeZah7Ux
21477964	11.602921	-7.364891	comment	4.0	11.5	1573165518	9.733065	> head :: [a] -> a> This function returns the first element from a list. Is it possible to implement?But the type itself doesn't say that it must return the first element.> If you see why parseNonEmpt...		privethedge
21486420	11.667073	-7.796058	comment	4.0	13.5	1573245171	10.144743	By productive you mean having developers repeatedly manually create loops that are the poor and verbose equivalents of map(), filter(), and reduce()? Out of go, scala, c++, java, python, typescript; go is the least productive language I've used in the last decade.		srparish
21487704	11.828009	-7.2905912	comment	4.0	14.0	1573253024	-7.319591	Amen. When I read that paper, it was clear that the author's definition of modularity was very different from my own.When I think about an algorithm like merge sort, mini-max decision trees or other l...		cryptica
21488271	12.049561	-7.4413395	comment	4.0	12.0	1573257304	7.243395	After watching it for 20 minutes, I want to know more.Where can I learn more about this magic called functional programming? Is there a good course? I want to do it for BLOBAs (as he calls them) apps ...		mettamage
21494019	11.676527	-7.779475	comment	4.0	13.5	1573330459	10.427445	I doubt it will surprise you, but many disagrees with you.  Using Haskell isn't a burden - on the contrary, it's far easier to get stuff working correctly.  The type checker looks over your shoulder a...		FullyFunctional
21498895	11.814228	-7.293397	comment	4.0	23.5	1573405906	7.1340404	My feeling is these paradigms, SOLID and SIMPLE, boil down to basically: small objects, connected minimally, though interfaces.SIMPLE appears to be leaning even more towards the functional programming...		taberiand
21525033	12.334611	-7.0400352	comment	4.0	13.5	1573658259	13.200479	This is not a master plan. This is not The Perl Foundation. This site and these people do not speak for the Perl community or its core developers.The whole site is run by Will Braswell, the creator an...		cestith
21525477	12.332764	-7.067114	comment	4.0	12.5	1573660367	13.177139	These guys are using mostly Perl 5 though. They basically forked 5 years ago and call it Perl 11. They have a good relationship with Perl 6 devs/maintainers and even incorporate some of 6 in their wor...		smhenderson
21535695	11.698701	-7.847715	comment	4.0	13.5	1573742562	10.147551	I mean there is a definite performance gain from Java to Go, although I would agree most people probably wouldn't hit it - but if its just as easy to write, might as well use the better language. On t...		dashwav
21537659	11.795109	-7.0523996	comment	4.0	34.0	1573754272	7.133621	Can you describe how OOP feels tacked on? One of the major changes in Python 3 is that new-style classes are the only style of classes.		chungy
21543753	11.948243	-7.570104	comment	4.0	14.0	1573813258	10.466899	Sad to see no mention of the impure ML languages (OCaml, F#, PureScript, etc). For me these strike a great balance between powerful abstractions and the ability to throw things together.		adgasf
21553128	11.638764	-7.942185	comment	4.0	18.0	1573918570	10.230356	Okay, so there's definitely simplicity. I agree that this is in many ways a nice change from some of the more popular languages, which can get a bit complex and heavy, with a focus on features that ar...		matthewmacleod
21554447	11.705551	-7.6435127	comment	4.0	14.5	1573932762	1.0749961	He was at the premiere computer science research organization for decades.  And you presume that he's not familiar with sum types, because if he was, he would have included it, and therefore he can't ...		AnimalMuppet
21556087	11.946065	-7.1473875	comment	4.0	12.0	1573955654	8.695394	> but at least the @Data annotation makes it much more readable IMO.Record types for Java are being worked on, and we should be getting them hopefully at some point in the (near) future.		azth
21558185	11.683215	-7.796165	comment	4.0	13.5	1574003269	-11.263995	"Gource is a really cool visualization tool.  Here's a Gource visualization
of development of the Python programming language (C Python implementation, aka CPython): https://www.youtube.com/watch?v=cNB..."		dwheeler
21559730	12.227618	-7.3146234	comment	4.0	12.0	1574020746	7.144018	The earliest Smalltalk versions used actor-like communication, but then Alan Kay learned about Simula and was seduced by the promise of straightforward low-overhead implementation.		orthoxerox
21572822	12.069724	-7.2137656	comment	4.0	33.5	1574171967	-10.407947	While I really like these blog posts for keeping things light and intuitive, they're also sprinkled with claims that go a bit too far.    > Arrays, Objects, Maps, WeakMaps, and Sets are all algebraic ...		tel
21586975	11.739515	-7.257707	comment	4.0	12.0	1574275351	7.0988693	> In my version of computational thinking, I imagine an abstract machine with just the data types and operations that I want. If this machine existed, then I could write the program I want. But it doe...		_bxg1
21605091	11.663997	-7.962138	comment	4.0	12.5	1574427302	5.8368597	I’m starting to think that I’m in the minority that agrees with most (if not all) Go’s design decision and appreciate Rob Pike’s stewardship so far.		haolez
21605309	11.621767	-7.933586	comment	4.0	13.0	1574429087	10.207183	As a very opinionated user of Go for ~6 years now...interface{} is almost always a code smell. I can judge a book by its cover with a grep and line count for interface{} and reflect. If it's more than...		leetrout
21604136	11.694982	-7.0994706	story	4.0	70.0	1574415056	8.490718	Programming with Effects	http://www.matfournier.com/2019-07-25-effects/	luu
21620402	11.819527	-7.221676	comment	4.0	11.0	1574603473	-8.217161	I do know closures but got rejected on not knowing SOLID. And when the interviewer explained it, the concepts were so easy to understand. I don't get it why he couldn't infer that I'd be able to apply the principles after a bit of practice.		mettamage
21621275	12.174639	-7.626568	comment	4.0	12.0	1574612075	10.356713	I actually spent the last week looking for something like XPath done right, because I'm doing a lot of xml based tree processing. I resigned to implementing something on top of the generative xpath VM...		minxomat
21636765	11.73266	-7.314354	comment	4.0	16.5	1574760752	-10.862666	F# and Kotlin seem better to me, and don’t have that hideous syntax for the closures. But it’s for sure another world compared to the awful objective c.		tigershark
21657466	11.596343	-7.2838225	comment	4.0	10.5	1574950358	-8.826851	You really don’t get most of the benefits “Strongly typed” languages here. A program that fails with type errors at runtime instead of compile time is the worst of all worlds.		donatj
21665504	11.653582	-7.4150443	comment	4.0	12.5	1575047479	9.18504	Pretty much anybody writing `async` code, using `Futures`, etc. needs to deeply understand `Pin`, pinning, etc.Otherwise it is impossible to become productive with that part of the language.		fluffything
21703509	11.682809	-7.886522	comment	4.0	12.5	1575476580	10.146087	Idiomatic Java has much more boilerplate than idiomatic Go.		icholy
21703602	11.887365	-7.245142	comment	4.0	14.0	1575477055	7.159393	"+1 to thisIn my own progression as an engineer who writes Java, I read Clean Architecture by Robert Martin which lead to AbstractFactory(s) and interfaces up the wazoo. The reasoning would always be ""..."		sna1l
21705097	11.638748	-7.8788824	comment	4.0	14.5	1575483348	10.145635	> I do agree though that there is no great reason Java has to be more verbose or more confusing than say Go.Not a Go developer, but two things off the top of my head:1. Do not need to explicitly decla...		jimbokun
21705115	11.694924	-7.7582846	comment	4.0	13.0	1575483443	10.129877	> Since Go doesn't even have inheritance or getters and settersDoes Go have objects with functions?  If so, it has getters and setters, Go programmers just choose not to use them.  I could absolutly w...		Sohcahtoa82
21705219	11.724774	-7.307208	comment	4.0	17.5	1575483867	7.2110972	"> I'd really like you to show me how you can refactor e.g. a method called ""write""I'm not taking sides on the issue discussed here, but regarding this quote... This is one of the biggest reasons I don..."		jstimpfle
21703794	12.204753	-7.518668	comment	4.0	16.5	1575477997	-11.299757	"Kotlin is basically Java without the boilerplate.  Some of the code snippets on the page, translated into Kotlin, would be:  data class User(val username: String)
  data class Config(val userTable: Dy..."		nostrademons
21716629	12.010605	-7.7803354	comment	4.0	14.5	1575580617	10.41505	"These languages use weaker monad syntax because of the difficulty conceptualizing programming in a way other than ""Do arbitrary action A to object B in scope C"". You can't gain from a more powerful mo..."		ipnon
21720369	12.129605	-7.5089803	comment	4.0	12.0	1575625474	-10.599719	F# is intentionally cumbersome for imperative/OOP programming which makes it impractical for many project types.		sedatk
21720453	11.737802	-7.3481503	comment	4.0	13.0	1575626551	7.1189733	I’m not sure we need initonly.Constructors are a design pattern that works and is intuitive at this point.  Fair enough there are differences, but the overlap in use case is significant enough that I ...		headmelted
21727216	11.913027	-7.1144156	comment	4.0	35.0	1575675540	8.38767	While Java's slow and cautious evolution frustrates developers, it still arguably demonstrates longer-term thinking than the constant accrual of features in its contemporaries such as JavaScript and C...		ljackman
21733176	11.701196	-7.8695173	comment	4.0	12.0	1575759538	-10.256876	When I'm just learning a new programming language or framework, I prefer to have something like create-react-app [0], django-admin startproject [1], cargo new [2], or lein new [3].Guides like these ar...		zomglings
21737314	11.766271	-7.340942	comment	4.0	13.5	1575829922	-8.891273	Research doesn't support the claim that there is a strong correlation between static typing and fewer bugs. Is your opinion based on your gut feeling, or do you have data on the matter that you can provide?https://web.cs.ucdavis.edu/~filkov/papers/lang_github.pdf		erokar
21737348	11.784315	-7.3981347	comment	4.0	11.5	1575830315	-8.919755	>How do you figure? If it’s mission critical, it means failure is unacceptable. Python and other dynamic languages (TS is a middle ground here) excel when failure isn’t so badIn practice I find that s...		pytester
21760912	12.254138	-7.5608873	comment	4.0	13.0	1576056519	-11.389159	People usually get confused when we tell them that we're using Kotlin for our backend APIs. I can't blame them because we attended KotlinConf last year and almost 90% of the audience were using Kotlin...		buremba
21735782	12.275086	-7.327934	story	4.0	109.0	1575811578	7.102139	Smalltalk with the GraalVM	https://www.javaadvent.com/2019/12/smalltalk-with-the-graalvm.html	mpweiher
39074917	11.908908	-7.2965074	comment	4.0	10.5	1705804248	9.186765	"if you're writing ""await"" before every function call maybe that should be the default."		arrakeen
39082305	11.600875	-7.5004406	comment	4.0	14.0	1705866740	-8.632462	Hah. Voldemort types. The ones that can't be named (in practice becouse too long to fit on a line or remember)?		rightbyte
39100338	12.44823	-7.045624	comment	4.0	22.5	1705992724	-8.23439	> Ruby's require is analogous to C's #include: modules are just files that get evaluated in order to add stuff to a global interpreter state.What's the theoretical alternative? Adding stuff to a globa...		thaumasiotes
39141402	11.925825	-7.2334847	comment	4.0	15.0	1706268189	7.21965	Most real world problems don’t fit into neatly into hierarchical structures. OOP pushes you towards trying to model everything in the world an objects with strictly defined operations that can be perf...		avianlyric
39174427	12.46073	-7.018715	comment	4.0	14.5	1706520747	12.389083	How often do you see people describe that kind of passion for Python? Maybe for lisps, Erlang, Haskell, Smalltalk. It may well put some people off, that's fine, but personally I dread it when I have t...		vidarh
39178026	11.807523	-7.165551	comment	4.0	13.0	1706544947	-8.990459	From my experience working on an older Python codebase, this issue is definitely a headache. It's extremely difficult to gradually adopt typing in an older Python codebase with almost no typing inform...		sesgoe
39096138	12.298399	-7.323909	story	4.0	58.0	1705961071	7.035762	Zag Smalltalk (2022) [video]	https://vimeo.com/802502826	sebastianconcpt
39211898	11.874636	-7.2938447	story	4.0	3.0	1706751437	9.212335	"Ask HN: Is it possible to write a JavaScript runtime with ""await by default""?"		stanlogin
39285666	11.651214	-7.965629	comment	4.0	12.0	1707291464	10.263705	"> Enhanced routing patterns> This change breaks backwards compatibility in small ways, some obvious—patterns with ""{"" and ""}"" behave differently— and some less so—treatment of escaped paths has been i..."		tommiegannert
39286092	11.652498	-7.9722824	comment	4.0	11.0	1707295628	10.20871	Can you give some examples how are you using go:embed and go:generate?		avtolik
39315046	11.875431	-7.432407	comment	4.0	11.5	1707488132	-9.771647	"Does this measure make sense for pure functional languages?
Can it be defined for terms in the lambda calculus or in combinatory logic?"		tromp
39315945	11.5924425	-7.8189974	comment	4.0	15.0	1707493510	9.82494	"This has a lot of interesting accidental rebuttals to some ""features"" of go.> If you’re not in an entry-point function and you need to call a function that takes a context, your function should accept..."		kevincox
39334580	12.2275	-7.5275574	comment	4.0	11.0	1707654662	-11.423344	"I could be wrong, but I think Vertx would be a better choice?
https://vertx.io/It's actively maintained with full time developers, performant, supports Kotlin out of the box, and has more features?"		AndrewSChapman
39282445	11.689491	-7.962921	story	4.0	3.0	1707262543	10.121305	Show HN: OkServer (OkS) – An ok HTTP server; lightweight, clean, and simple	https://okserver.xyz/	cbrbygones
32803731	12.140646	-7.1889253	comment	4.0	13.5	1662933967	8.548301	So your saying everything is a entity, and that entities have components, and the systems operate on entities (possibly based on their components). Do I understand that correctly? That understanding is definitely worth the time it took to read.		Buttons840
32803542	12.161346	-7.2142587	comment	4.0	19.5	1662932473	8.48665	Based on many of the comments here, it seems like there’s a lot of misunderstanding of what an ECS is - unfortunately the name does this no favors as it should probably be written as entity/component/...		harles
32822804	12.035357	-7.528252	comment	4.0	14.5	1663067604	9.266847	Kotlin is a fine middle ground. I would say that coroutines was a misstep (though that's a matter of taste), but otherwise their choices have been pragmatic, and their multiplatform efforts are impressive.		smallerfish
32823107	12.200004	-7.6459904	comment	4.0	21.0	1663069976	11.881412	I think one more problem with Scala, apart from the lack of stability and having to solve the language's problems instead of your application ones, is one of local maxima.Most of the ecosystem uses mo...		cube2222
32825512	11.607142	-7.9789343	comment	4.0	13.5	1663082639	10.174592	Well, golang is a tough language.I am stuggling with helm/kubernetes and the new company's ecosystem where everybody is new in the team. We are expected to deliver according to a plan while we keep hunting for relevant info.I would say the second point is a lot more nuanced than stated.		abhishekjha
32841771	12.008455	-7.3422046	comment	4.0	19.5	1663182315	7.1388516	Which is funny, because OOP should be[1] about the in-between of the objects: the messages[2]. Not about the objects themselves or the classes and GOF design patterns.With Common Lisp you get generic ...		felideon
32842714	11.891085	-7.326057	comment	4.0	11.0	1663186321	7.038675	Rather, we should insist on calling object oriented programming what it is, and come up with an acronym for the poor imitations.How about Class-Reified Abstract Programming? If the shoe fits...		samatman
32896772	11.958529	-7.477518	comment	4.0	12.0	1663585708	7.1741796	Can we maybe also talk about FP’s cultural problem: that lots of people with a functional programming background just don’t get object orientated programming and instead of trying to understand it, dismiss it as crap and enterprisey.		throwaway4good
32910741	12.237407	-7.5303583	comment	4.0	10.5	1663676834	-11.3718815	Kotlin is certainly a good general purpose language. But many developers would prefer to be able to use Java for Android development including the excellent tool chain and numerous libraries. It's a shame that commercial disputes between Google and Oracle have left us with this fragmented platform.		nradov
32916678	11.652465	-7.9088874	comment	4.0	10.5	1663702455	10.21737	Before people get too up-in-arms about that being XML, that is just the first step in the GObject Introspection compilation.The second step builds a .typelib file which is a mmap()'able data-structure...		audidude
32916890	12.128975	-7.2644534	comment	4.0	11.5	1663703469	-10.399451	Speaking of types, what are your thoughts on fp-ts if you've used it? It brings functional programming concepts like in Haskell such as monads into TypeScript.		cercatrova
32917631	11.672932	-7.314074	comment	4.0	11.0	1663707060	-8.774665	The types in your code are just as designed just like any other aspect of it. It's not a matter of restraint, it's a matter of doing things on the correct way.		marcosdumay
32918128	11.655952	-7.346254	comment	4.0	11.0	1663709813	-8.726342	Is it fair to say that the limitation is that the type checker can admit programs that are not type correct?		agentultra
32921192	11.924001	-7.366087	comment	4.0	13.5	1663738965	-10.432224	What compose() does is not the point here, it's that the type definition is totally unreadable. I was trying to figure out what compose was supposed to return (the function or the value), in that case...		solardev
32927502	12.24042	-7.650262	comment	4.0	13.5	1663777635	11.9381	That sounds like what we heard about Scala 10 years ago until complexity started to bite, and now that language is in a free fall and its parent company in financial distress...		bitL
32939167	11.643578	-7.9725647	comment	4.0	11.0	1663856597	10.2521515	"The sales pitch should be that it's faster (if indeed it's faster), or easier to configure, 
or smaller to deploy... not that it's written in go."		cosmotic
32841975	11.952778	-7.7229667	story	4.0	52.0	1663183176	10.422886	Radv: Reduce CPU overhead of draw command recording Code	https://www.supergoodcode.com/spaghetti-recipes/	pantalaimon
32882951	11.808682	-7.1659822	story	4.0	18.0	1663459635	-9.027422	Effectless but expensive. Or be careful with type hints in Python	https://softwarebits.substack.com/p/effectless-but-expensive	United857
32990415	11.626837	-7.9434304	comment	4.0	14.5	1664238902	10.112692	go runtime is not VM like JVM [0]. Go doesn't run on top of runtime, more like run along side it. That's why there's go for embedded where it has no runtime. So it's very less likely other language reuse go runtime.[0] https://go.dev/doc/faq#runtime		wejick
32991476	11.830557	-7.7487693	comment	4.0	19.0	1664251720	10.189579	Why bother with the dependency hell of JavaScript and Node.js if you’re not forced to go the SPA route? Heck, even Deno would have been a more compelling platform.If all this is is composing plain ol’...		diceduckmonk
32992942	12.112767	-7.689658	comment	4.0	12.5	1664268445	10.407128	Let suppose someone wants to port a OCaml project to F# in a linux environment. How much work would it take in term of code rewriting? can it compile to native code? how good is the language support experience in vscode? any reason not to do it?		yodsanklai
32993136	12.058558	-7.816658	comment	4.0	13.0	1664270350	10.4322	OCaml is an impressive language on many fronts: compile time, speed, memory usage, but then is almost crippled beyond usage by a few unfortunate decisions / (lack of) features:- Dependency management,...		xavxav
33002609	11.681928	-7.185019	comment	4.0	30.0	1664322234	9.303235	The author makes a bunch of tenuous assumptions; that lambda calculus is all about currying; and that the “lambda” keyword brings lambda calculus to Python; that lambda is undesirable because Python d...		shrimpx
33002659	11.634871	-7.1727495	comment	4.0	12.0	1664322632	9.267492	> l_add needs the arguments passed one at a time. We never see this syntax with multiple parenthesis in Python. It works and it has many benefits built in, but it would be a paradigm shift to expect p...		ColFrancis
33019729	11.760165	-7.026533	comment	4.0	11.0	1664455162	-10.55226	"    var ages = Map.of(""sarah"",19, ""dan"",35);   //valid java"		kubota
33049398	11.8116865	-7.487221	comment	4.0	15.0	1664653515	-9.028722	We need:- exact object type- match expressionflow is still better at:- OO - nominal typing for classes, conforming to liskov substitution principles- first class opaque types- first class exact object...		mirekrusin
31775608	11.853313	-7.389744	comment	4.0	11.5	1655455319	7.3087125	Very interesting stuff! I didn't even thought is possible to implement a low level functional languages, I always thought a functional language requires a ton of abstractions.		DeathArrow
32954517	12.102342	-7.8610663	story	4.0	105.0	1663952993	10.493887	OCaml Exercises	https://ocaml.org/problems	wazbug
32992655	12.107848	-7.850237	story	4.0	98.0	1664265541	10.453373	Why OCaml?	https://ocaml.org/about	ctrlmeta
31791901	11.716965	-7.3959904	comment	4.0	11.5	1655573188	-8.71993	> Some of the people could be considered type B or less productive,Type B? Is that an established concept?		rightbyte
31794085	11.746254	-7.3171825	comment	4.0	15.5	1655588484	-8.922045	One could argue that dynamically typed code is often shorter, and therefore both easier to reason about, and possessed of fewer bugs on a bugs-per-line basis. Not really keen to push that line of reasoning myself, just helping picture one possible argument.		thom
31828165	11.774704	-7.8835425	comment	4.0	10.5	1655840135	10.129778	> I never want to write Go that interacts with a database again.Why? I’ve been using sqlx and it seems fine.		kbd
31833919	11.597054	-7.8875837	comment	4.0	16.5	1655892243	10.169092	I think compiling via LLVM is probably a better idea than compiling via Go..(Also why do people invent a new word 'transpile', when the old word already perfectly describes translating from one formal language into another?)		eru
31847875	11.698154	-7.183797	comment	4.0	11.5	1655985944	9.189299	Problem with list comprehensions are that it's often not easy to see what you're trying to do. Like, I have some objects I want to group by a property, and then make a map containing the sum of some o...		matsemann
31855849	12.127665	-7.8652754	comment	4.0	19.5	1656023135	-3.229448	One thing that has always bothered me is how people say that ideas from category theory can be useful while writing Haskell code. It's technically true, but really only the most basic ideas — things w...		orangea
31860233	11.910037	-7.3423185	comment	4.0	15.5	1656070230	7.024993	"The OOP community fascinates me.It's clear that OOP in the sense of ""Car extends Vehicle"" is not a good idea, yet the classic OOP languages go out of their way to support this kind of programming. Mea..."		substation13
31860768	12.0817795	-7.831386	comment	4.0	17.0	1656073795	10.430529	OCaml vs All: Good luck finding developers that will write quality code and not cost a fortune each.		water8
31880443	11.769946	-7.3979297	comment	4.0	16.0	1656209416	-8.736962	Awful stuff. These principles could only ever make sense in a dynamic language since it's mostly manually enforcing some of the basic functionality of a type system, but the fact that he also tries to...		bo0O0od
31886869	11.821062	-7.2290807	comment	4.0	15.5	1656270243	8.707792	What about the fact that Java didn't want lambda in the first places, only to hack anonymous inner classes that were never well promoted until 20 years down the road people realize it's quite useful to express logic as functions ? :)		agumonkey
31890850	11.959529	-7.6915746	comment	4.0	20.0	1656307413	10.306892	Which ones did it deliver on? Faster than C? No. A memory-safe language that you can write OSes and drivers in? No. Pleasant cross-platform GUIs? No. Easy code reuse? No. Low code development by using...		lmm
31891409	11.951452	-7.705639	comment	4.0	12.5	1656313078	10.412148	I have. Like many other concepts in Haskell, it takes a bit of time for intuition to kick in. For example you likely wouldn't understand Traversable or Applicative when you first heard of it but it wi...		kccqzy
31891576	11.967831	-7.520862	comment	4.0	12.5	1656314875	-11.018249	> Lenses let you do some amazing things, but I think most of their existence is just thanks to how truly horrible (nested) record field access and updates were.Only for the most basic uses. Architecti...		ParetoOptimal
31892452	11.891711	-7.5907006	comment	4.0	12.5	1656323423	10.361847	Good God! This kind of stuff is built for a very different kind of brain than mine, that's for sure.I always come away feeling that Haskell makes the simple things tough, and the tough things beyond m...		sriram_malhar
31893013	11.809825	-7.144305	comment	4.0	11.5	1656328878	-9.038647	"The new type system goes pretty much against the idea of duck typing, I'd consider that a pretty big fundamental change. And it's pretty half baked on top (e.g. `a: int = ""foo""` goes through the pytho..."		grumbel
31899785	11.747687	-7.373256	comment	4.0	13.0	1656359167	-8.830221	> If you do find a need to use type operations, please—for the sake of any developer who has to read your code, including a future you—try to keep them to a minimum if possible. Use readable names tha...		dllthomas
31907025	11.990117	-7.755098	comment	4.0	15.0	1656420813	-5.434768	Every seven years or so now, a new generation gets suckered into believing Haskell is the Right Way		newaccount2021
31920237	11.597261	-7.0436034	comment	4.0	14.0	1656511379	-6.722173	Elixir, Clojure, Rust. These were all great languages that were championed but nobody is learning them because there are no translatable jobs that you would find with ease in other languages like Java...		upupandup
31947912	11.6042185	-7.959739	comment	4.0	11.5	1656689768	-9.899405	All the issues in the post have already been fixed.What's wrong with the division by zero issue? It works just like in Go?What about the openssl issue? The user didn't install the library on Windows, as was documented.By the way, we're going to embed openssl to avoid this problem.		amedvednikov
31954991	11.737679	-7.2054315	comment	4.0	14.5	1656723907	6.9488997	It's sad to see a relatively new language replicating the mistake that is the class/inheritance model. That plus a lack of modern convenience features like if/else and block expressions leave me struggling to think of who might use this.		idle_zealot
31975685	11.99061	-7.7104897	comment	4.0	12.0	1656932043	10.377846	"""A homomorphism is just a structure preserving map. In fact, a functor is just a homomorphism between categories as it preserves the original category's structure under the mapping.""Oh ok. Plain english."		naillo
31978370	11.9306965	-7.4578805	comment	4.0	10.5	1656949697	7.258126	The biggest benefit I see is lack of side-effects. With a functional program you can be sure that your can safely call any function without having to worry about the current state of your app.A proper...		aeonik
32002675	11.661885	-7.1447735	comment	4.0	25.0	1657122445	9.16929	When is that coming?  Yes the error messages are confusing in a big list comprehension.		bilsbie
32002720	11.750034	-7.082728	comment	4.0	15.5	1657122624	9.109147	"One of the biggest contributors in Python's (lack of) speed is dynamic typing. While a jump is a jump and an assignment is an assignment, an addition is more like ""hmm... what is a left operand... is it double? what is a right operand? wow, it's also a double! okay, cpu add eax, ebx""."		AlexTWithBeard
39360312	12.288926	-7.3215523	comment	4.0	13.5	1707845960	7.0760813	> what actual publicly available product has he ever produced? oh, i remember - a not very good smalltalk test framework.See also, Bob Martin.		brtkdotse
39371663	12.481838	-7.46188	comment	4.0	14.0	1707927503	12.878302	"How do the supervisor trees avoid a single point of failure? Let's say I build ""etcd in Erlang"". How would I tell the cluster that there should be N processes running, each on a different node? And is..."		krab
39383132	11.8498125	-7.5152187	comment	4.0	19.0	1708007576	10.318174	I don’t really care what people making claims say when they make claims without evidence. ”Who” makes a claim has no bearing on its truth.Immutability is a tool, not a rule, and I am free to reject an...		wredue
39407308	11.893388	-7.1193037	comment	4.0	11.0	1708155734	8.463765	Java is the only place where (non-automatic/non-syntax-sugared) getters and setters are though as important and valuableOnly goes to confirm my view of them that the language is deficient		raverbashing
39423997	11.996674	-7.749251	comment	4.0	12.0	1708294348	10.48577	I took a Haskell course in grad school from someone who contributed to Haskell.They made the claim that the primary function (lol) of Haskell was to discover new PL ideas which then got adopted by the major languages.		hiddencost
39424161	12.001293	-7.751716	comment	4.0	11.5	1708295519	10.377719	I still wonder why Haskell sans IO isn't a thing. Seems like it would be a really great way to define/implement rules for a rules engine that supported it. I guess you'd still have to worry about OOM ...		daxfohl
39429462	11.599059	-7.9206147	comment	4.0	10.5	1708349037	10.14073	Can you expand on Pascal vs Go? What is Go missing?I do not know much about either language, but the first thing I thought when people compared Pascal to Go (another comment, not yours) was what about...		graemep
39432236	11.684171	-7.2562814	comment	4.0	11.0	1708363275	8.931902	I don't often define a set type in my language, but when I do I like to include the basic set of set operators...		dboreham
39440904	11.773601	-7.152152	comment	4.0	11.5	1708435560	-8.548695	This seems like too much effort has been put into it for it to be a purely satirical exercise, but I really cannot see why anyone would prefer to use this within Python, rather than (say) reaching for...		johnday
39448895	12.026885	-7.1670837	comment	4.0	11.0	1708476410	9.090341	> I realized just how poor the async/await/promise design Node.js was (error-prone by design)It's so weird to me when people make statements like this and it makes me wonder how many times I've been s...		dimgl
39460726	11.621472	-7.9601045	comment	4.0	18.0	1708555845	-9.315056	"It's not really a Go thing but a build system thing. It's useful to have your build system know what is an ""executable target"" and how to run it.Bazel does this for _all_ languages. I'm sure most othe..."		bjackman
39490394	11.602999	-7.8895345	comment	4.0	15.5	1708768028	10.15142	> func Index[S ~[]E, E comparable](s S, v E) int {After seeing this signature, I think that Go is giving up on it's simpleness principle.		gslaller
39491958	12.125565	-7.381683	comment	4.0	16.0	1708787060	12.337973	I write Ruby professionally and while I agree that this can lead to some very sloppy code, I don't find that this causes a lot of problems in practice.A place where we would use nil conversions is esp...		decasia
39506148	11.703602	-7.362737	comment	4.0	10.5	1708904627	9.201456	Ah, yes, smash the looms, that'll stop progress.		stavros
39527327	11.800213	-7.5821304	comment	4.0	10.5	1709057350	11.906618	> Performance is good enough, it's not the intellectual masturbation of Scala or Rust.As we know, any technology that would require experienced programmers to learn something is a crime against engineering.		tikhonj
39536496	11.649606	-7.976334	comment	4.0	23.0	1709118813	-9.080648	They are, yes, but there is a very important core difference here that I think is not mentioned.The big cost about Nix/Guix that puts people off is that it eliminates a human-readable filesystem. The ...		lproven
39551603	11.605045	-7.965857	comment	4.0	13.0	1709224440	-9.73071	The Go crypto implementation uses some unsafe/asm part but it does not rely on external C/C++ lib. Very different.		Thaxll
39428852	11.670704	-7.8930635	story	4.0	18.0	1708344088	10.29965	Go language hits top in the Tiobe index	https://www.infoworld.com/article/3712690/go-language-hits-top-10-in-the-tiobe-index.html	thunderbong
39578839	11.673814	-7.72351	comment	4.0	16.5	1709446073	10.05363	JVM has always been on par if not often faster than hand-written C code.Go's advantage has always been that it is good enough at a lot of things.		threeseed
39593273	12.139864	-7.5230827	comment	4.0	15.5	1709573861	-10.614022	"Jet.com was the original purchase by walmart to my understanding.They contributed quite a bit of useful things to the ecosystem, and were one of the ""F# companies that made-it"".Some of their projects ..."		banashark
39595777	11.601405	-7.9120855	comment	4.0	14.0	1709584976	10.143612	In fact there is! It's called a Gomboc:https://en.wikipedia.org/wiki/G%C3%B6mb%C3%B6c		isopede
39597788	11.713331	-7.8961854	comment	4.0	11.5	1709597173	10.209712	Is there a good batteries-included framework for Go, like Ruby on Rails or Django?		princevegeta89
39615779	12.078516	-7.7917695	comment	4.0	12.0	1709732082	10.450322	Yeah, ocaml is awesome! Frankly, if it had a more familiar syntax but the same semantics, I think its popularity would have exploded in the last 15 years. It's silly, but syntax is the first thing people see, and it is only human to form judgments during those moments of first contact.		sanderjd
39617989	12.163739	-7.3872795	comment	4.0	21.0	1709744321	7.1148705	There are sound reasons why no substantial system in common use is coded in Smalltalk. Kay could have spent the decades since his time at PARC figuring out why, and remedying them.One of the reasons i...		angiosperm
39628278	11.868828	-7.4512653	comment	4.0	16.5	1709814785	7.5778317	Isn't this handled by 'purity' of functions?It seems like the big idea here is that Int->Int always, no errors, faults, 'impact by extra data'.Isn't that all also solved by pure functions? And is incorporated into functional languages at this point?		FrustratedMonky
39631525	11.790971	-7.2597303	comment	4.0	11.0	1709831740	-6.0420966	I don't mean to throw shade on the whole book, but I don't think the section on errors takes things in the right direction.A distinction should be made between errors and exceptions.  In JavaScript an...		ravenstine
39675778	11.738615	-7.05473	comment	4.0	12.5	1710212960	2.3383923	It's neat that this will eventually improve some python code, but at the end of the day, it's still a badly typed language, which will still be slower and less safe than more modern languages.Learn golang or rust instead. Impressive that they are managing this though!		purpleidea
39678725	11.704037	-7.8197227	comment	4.0	15.5	1710246886	-11.305773	I've had these strong feelings and the OP describes it really well.  Despite being a polyglot programmer, I really struggle with Python, both in expression and performance (unless it's just config for...		neomantra
32029416	11.677564	-7.7609973	comment	4.0	11.5	1657323459	10.156129	"""not bad"" is a weird bar to cross for a language that:    1. decided generics is not needed
    2. went on for a decade
    3. implemented a version of it that is not performance-sensitive
    3.5. $$ by google"		moelf
32032471	11.649304	-7.9323044	comment	4.0	31.0	1657348578	10.219459	Can’t hate on generics, so we need to find something else.Go takes away type system fidget spinners and leave devs with nothing to do but the actual job, which they hate, and thus they hate Go.		philosopher1234
32033019	11.630175	-7.970591	comment	4.0	12.0	1657354404	10.249085	That’s actually a brilliant assertion (sorry for the crap pun).The majority of developers I work with are only aware of the success paths of their code. That means we’re knee deep in exception corpses because they avoided doing part of their job.Go makes them deal with it.		iasay
39567780	11.811641	-7.217122	story	4.0	136.0	1709333577	7.005318	Ada 95: The Craft of Object-Oriented Programming	https://adaic.org/resources/add_content/docs/craft/html/contents.htm	stefankuehnel
39573389	12.430692	-7.3704762	story	4.0	100.0	1709395238	-8.762176	Open Beam Interface	https://github.com/nanographs/Open-Beam-Interface	luu
39578090	12.06996	-7.1205916	story	4.0	27.0	1709435212	9.18064	How to convert Node.js stream callback functions into an Async Iterator	https://www.jbernier.com/p?id=nodejs-stream-async-iterator	SamuraiBlue
32056927	12.00932	-7.770057	comment	4.0	16.0	1657551035	10.414332	Monads are not about sequencing. They don't force applying functions in an order, at least any more than regular function application does. Haskell does not need them, they're just an interface and do...		edflsafoiewq
32058415	11.954074	-7.4318733	comment	4.0	10.5	1657557434	7.1680355	- High memory usage- Several patterns introduces a lot of boiler code.- It's harder to visualize a OO codebase than a pure FP codebase like Haskell.- Frameworks like Spring / Jakarta are overly complex.But I don't mind OO, it's just that after using Haskell and Python, it just feels a little messy.		SpacePortKnight
32077304	11.916338	-7.449731	comment	4.0	12.0	1657669693	7.264418	The biggest problem I have with functional programming is debugging.On imperative code, execution is easy to follow. Instructions go one after the others, loops loop, function calls and local variable...		GuB-42
32103762	11.832831	-7.33107	comment	4.0	11.0	1657850361	-10.257641	It annoys me when people talk about what McCarthy did, and credit to him features that only appeared later and were borrowed from elsewhere.For example this article brings up static typing as one of L...		btilly
32107927	11.623053	-7.936323	comment	4.0	14.0	1657891527	10.19705	Go is a GC language, but it doesn’t need a VM. It’s a native, statically linked binary that contains the Go runtime.		atwood22
32117236	12.4369545	-7.077023	comment	4.0	10.5	1657973060	12.380937	"My biggest gripe with Ruby is how much syntax is optional and the ""accepted"" conventions by the community are to leave out a lot of optional syntax.The worst offender (in my opinion of course) is leav..."		doix
32123113	12.44622	-7.467379	comment	4.0	11.0	1658016527	-8.95954	"I'd be very interested to see non-BEAM approaches to enabling this - i kind of end up in the same pattern thanks to ""expected? Return an Error<E>. Unexpected? Throw."" However, the supervising part is then difficult.How do people approach this in Python? NodeJS? Rust? .NET?"		akdor1154
32124251	11.614527	-7.046173	comment	4.0	13.5	1658028717	-8.973361	"Yes, I can guess what the code does. But can you guess what this code will do? 1 + ""1""Contrast Python (a strongly typed language):    >>> 1 + ""1""

    Traceback (most recent call last):
      File ""<s..."		JoshCole
32137752	11.872876	-7.4121118	comment	4.0	12.5	1658148887	-8.664403	They are indeed simple and intuitive. You can explain them in terms of cooking.Curry: f(x, y) = f(x)(y)For cookies, whip butter with sugar. Curried version: whip /f/ the butter /x/, then whip the resu...		nine_k
32159526	12.48062	-7.0359235	comment	4.0	12.5	1658274866	12.365824	I find Ruby to be more straightforward than Python. In isolation, I’d argue Ruby is greatly more readable and understandable than Python.In practice, Ruby code isn’t. Once someone starts doing advance...		kayodelycaon
32159951	12.382569	-7.1022277	comment	4.0	12.5	1658278462	12.352609	Does Ruby have support for just exporting functions around? All these examples are class based. When I was a Python programmer, we found functions scaled infinitely better over time (with the exception of data classes, unfortunately) for complex business logic especially.		no_wizard
32163435	11.84921	-7.480264	comment	4.0	12.0	1658310421	-6.2778373	"A very (very) simple Hello World program in Haskell.    {-# LANGUAGE OverloadedStrings #-}
    {-# LANGUAGE QuasiQuotes       #-}
    {-# LANGUAGE TemplateHaskell   #-}

    module Main where

    imp..."		yakshaving_jgt
32195543	12.075944	-7.2151966	comment	4.0	10.5	1658514868	9.177672	Promises are an implementation of lazy evaluation for Javascript. This is exactly lazy evaluation.By the way, lazy evaluation is the one that offers no guarantees about when your code will be executed. If you can delay the execution, it's not lazy.		marcosdumay
32195614	12.035718	-7.203182	comment	4.0	11.0	1658515253	9.19121	Be careful with this data structure. If the language allows async exceptions or you have a big where the promise won’t become deferred, there are a lot of edge cases. Examples of edge cases:- if the p...		dan-robertson
32202960	11.843982	-7.0548673	comment	4.0	17.0	1658581707	1.7475934	In my experience the job market just revolves around business needs combined with transferrable skills for an affordable price.Most business needs are a cheap version of CRUD+Business Rules.As a resul...		oneplane
32236543	11.904255	-7.222399	comment	4.0	11.5	1658832194	7.0287857	"Grammarly suggested that I change ""object-oriented programming"" to ""thing-oriented programming."" How competent do you think their data team really is?"		Alex3917
32253011	12.199679	-7.600884	comment	4.0	11.5	1658941133	11.914155	It's curious not to see any JVM language there. Scala isn't even mentioned. Probably the data size is so high that the only way to survive there is to write everything in low level C++ or Rust.		Lucasoato
32257260	11.760226	-7.5820765	comment	4.0	12.0	1658957339	10.077819	No modern language I know of beats Haskell’s support for STM:https://wiki.haskell.org/Software_transactional_memoryAs I always say, Haskell is the Mercedes of programming languages.		hardwaresofton
32260400	12.119455	-7.1023216	comment	4.0	12.0	1658981449	-10.323928	"In the context of type definitions, strings aren't really regular bare strings.I.e. if I write  type foo = {
     bar: ""Vodka""
  }

I'm guaranteeing that the value of 'bar' on any object of that type ..."		p1necone
32261175	11.604647	-7.972233	comment	4.0	11.5	1658990625	10.214616	Go users seem to value a single static executable quite highly,  a single portable executable would be even better in the same direction.		fulafel
32274979	11.822932	-7.176111	comment	4.0	12.5	1659088482	-9.031533	Not the poster, but this library is completely undervalued. I am a big fan of it.Using standard type annotations in python and adding some @typechecked annotations can be much easier than adopting myp...		mejutoco
32283100	11.802213	-7.0221024	comment	4.0	12.5	1659139912	8.050667	Not OP, but someone who has gotten paid to write Java for several years.I would say that isn't that Java's semantics are that verbose, it's that the way Java is traditionally written, with every line ...		mandevil
32315389	11.818543	-7.2932606	comment	4.0	11.5	1659417557	6.946264	Does anybody have an example of when __subclasshook__ is truly useful? Something that can't be accomplish more coherently with a simple function?Personally, I'd prefer that isinstance() and issubclass() have predictable behavior.		calibas
32317089	12.087216	-7.852241	comment	4.0	16.5	1659437121	10.428852	Having worked in HFT for well over a decade now, I'd say OCaml is more of a deterrent than helps in getting access to larger pool of talent.		bitcharmer
32188263	11.752976	-7.086844	story	4.0	9.0	1658461424	5.0839868	Ask HN: What software design patterns do you use in your work or side projects?		kumarvvr
32247399	11.792171	-7.269056	story	4.0	64.0	1658902623	7.395346	An architecture for mostly functional languages (1986) [pdf]	https://dl.acm.org/doi/pdf/10.1145/319838.319854	luu
32322254	11.91751	-7.390603	comment	4.0	25.5	1659463674	7.1765585	Just don't make the mistake of studying FP first...I can't seem to wrap my head around OOP. There's too many concepts in OOP. In FP it's just data and functions for transforming that data.		cpursley
32323481	11.633662	-7.9089518	comment	4.0	23.5	1659470077	10.262494	"If O(3) people want to design a new language, how should they incorporate the ""optimizations that other languages have had for 30 years"" into that language that will satisfy the internet's peanut gall..."		preseinger
32324322	12.182054	-7.6334977	comment	4.0	10.5	1659474518	11.919184	It's not possible to do always but it feels like it should be possible in special cases. If you can prove that a value V2 is ultimately derived from a modification of V1, and V1 is never referenced af...		philipkglass
32325206	12.091491	-7.5666494	comment	4.0	10.5	1659480074	10.395153	I like go and I can program it very well. But for full stack web dev Rails is still my go to choice. Less headaches. I don’t need to setup everything by myself (sql layer, middlewares, background jobs...		hit8run
32332475	11.911083	-7.0604925	comment	4.0	11.0	1659537981	-10.724025	looking at the release notes and the source, it looks like the asyncio interface is still using the old drivers, like psycopg2 for postgresql, and using a threadpool.we at SQLAlchemy came up with a wa...		zzzeek
32332610	11.911856	-7.0775027	comment	4.0	10.5	1659538536	-10.76836	Great to see improving support for async here. I am a big fan, but IMO python async code is just different from other async langauges. I used async extensively in python and compared to other language...		hansonkd13
32361532	11.620286	-7.0797267	comment	4.0	11.5	1659730977	-8.195252	There are many languages that are dynamic and let you generate code and run it inside the program.  For instance in Java you can generate bytecode for a class and run one of the methods.  In FORTH you...		PaulHoule
32367135	11.9943695	-7.751522	comment	4.0	14.0	1659785637	10.402688	"I think a part of the whole monad confusion comes from the fact that monads ""add something"" to a computation, which is valuable in Haskell but not in many other languages. Any function in C/Java/Pytho..."		WJW
32374996	11.65557	-7.9377713	comment	4.0	17.5	1659862593	10.211642	"Sound like a typical Rob Pike design. Idiosyncratic, not that user friendly, and mostly ""works for me"" affair (considering things like the Sam editor and parts of Golang)."		coldtea
32376394	12.277719	-7.503123	comment	4.0	10.5	1659879695	-11.505481	Why use Kotlin when you can build it in React Native, and get an iOS counterpart for essentially free out of the codebase?Curious as to why a new learner would go this route.		h4waii
32399802	11.676756	-7.4577923	comment	4.0	13.5	1660061236	9.213108	That's exactly what was meant. With Loom Java will hopefully not have the same function split as languages like JavaScript (or C# for that matter) where you have to add lots of async/await everywhere;...		5e92cb50239222b
32399699	11.815958	-7.2758956	comment	4.0	19.0	1660060814	9.072517	I've ditched Spring, am using Vert.x with Java 17, reactive & functional styles, records. Seems like a completely different language.If only project Loom will get out there so I wont be coding everything like Javascript I'd be happy. :)		rr808
32400067	11.881097	-7.303343	comment	4.0	15.0	1660062248	7.057234	and it still enforces terribly strict OOP patterns onto the developer which is almost never the right way to develop software if you care about performance even a little.		naikrovek
32401579	11.757892	-7.031094	comment	4.0	11.0	1660068574	8.407031	Trouble with java is that it does not scale up or down in terms of ram.Minimum RAM for a sever doing something normal over tcp is measured in gigabytes.Big servers > 16gb get difficult to manage at ru...		teknopaul
32409846	11.600947	-7.2778273	comment	4.0	13.0	1660127053	-6.6534615	>I don’t buy the lack of types argument in any programming language to be a compelling argument. Maybe consider that you or other authors you’re working with are bad at writing software.I don't buy th...		Banana699
32429370	12.289639	-7.3219767	comment	4.0	11.0	1660240146	7.06652	They did, but that was not a Smalltalk heritage.		ncmncm
32429587	12.256916	-7.2999077	comment	4.0	11.0	1660241184	7.11682	The Smalltalk community also had an influence on design patterns and testing frameworks that would later get picked up by C++ and Java programmers.  If I recall correctly, the Gang of Four (the authors of the famous Design Patterns book) uses Smalltalk in its examples.		linguae
32453984	11.818687	-7.1794825	comment	4.0	15.5	1660426316	-9.001301	"> Oh, and don't forget to check all the possible code paths that lead to this to make sure you've exhausted all possibilities.""This is literally what mypy does.There's no difference between a mypy-ena..."		joshuamorton
32460890	11.932996	-7.2284904	comment	4.0	14.5	1660496759	8.25463	different folks like to live at different levels of abstraction, we aren't all level 50 type system mages and, even if we were, that type system wizardry wouldn't help a whole ton in getting strings f...		recursivedoubts
32490677	11.662138	-7.9235754	comment	4.0	15.5	1660694492	10.199664	"First of, just like the term ""hacker"" became popularized by the media and turned into the meaning of someone who cracks computers and software, so has HTTP based APIs been popularized and turned into ..."		iio7
32498380	11.912273	-7.33119	comment	4.0	23.0	1660753432	-9.006124	> Static typing everywhere.I think the industry has generally recognised that static typing makes more reliable software.I started with PHP and have seen its type system evolve. Similarly Typescript. I since moved to other staticly typed languages. I wouldn't want to go back.		heurisko
22004351	11.750992	-7.3333645	comment	4.0	10.5	1578596876	7.4752007	Another option is for the language's runtime to use copy-on-write (COW):https://en.wikipedia.org/wiki/Copy-on-writeSo basically every buffer can be made immutable and then only copied when written to,...		zackmorris
22012190	11.61718	-7.949144	comment	4.0	11.5	1578674332	10.143993	A recent example.Go values not breaking current code much more than adding features.		hu3
22023767	11.594102	-7.903811	comment	4.0	11.0	1578792346	10.204976	"Instead of writing     <ComponentName someVariable={true}>

It’s just     <ComponentName someVariable>

Of course there might be some completely valid reason for this, but it’s baffling to me why you ..."		blhack
22024248	11.989969	-7.744963	comment	4.0	11.5	1578799299	10.438114	It's beautiful! It's a real shame that Haskell isn't portable.		johnklos
22026254	11.929822	-7.3586817	comment	4.0	11.0	1578837079	7.052711	Every single rule or advice in programming is good until it isn't. OOP is good until it isn't, function programming is good until it isn't, premature optimization is the root of all evil until it is t...		gameswithgo
22035498	12.479644	-7.799899	comment	4.0	14.0	1578930872	-11.1730995	Tail recursion? As far as I know, Clojure doesn't and cannot have it because JVM doesn't support it.		MadWombat
22048151	11.960413	-7.688386	comment	4.0	19.5	1579028897	10.391103	A different way of thinking of abstraction or just a feeling of elegance or a feeling of power is not a sufficient explanation for why Haskell is so great.People want definitive and theoretically corr...		crimsonalucard
22059495	12.009254	-7.784062	comment	4.0	12.5	1579127205	10.46685	Haskell is the epitome of linguistics - it took a bet on an arbitrary set of conditions - lazy evaluation, immutability.These linguistic choices inform the rest of the language - monads were only inve...		alexashka
22069289	12.184438	-7.498319	comment	4.0	14.0	1579210934	8.745264	Makes absolutely no difference here, Kotlin data classes are just regular Java classes like records are - the compiler implements these methods automatically.Oracle literally did the minimum effort required here, Java Records don't even generate bean-compliant getters FFS.		snuxoll
22069706	12.036572	-7.16438	comment	4.0	11.0	1579213702	-13.926681	Can anyone explain to me what the benefit of this is over Lombok annotations? I like the Lombok builder syntax which this seems to lack.		bobthepanda
22077134	11.603471	-7.896544	comment	4.0	13.0	1579283378	10.220061	Well... there's also other side of the coin. There's value in visibility and lack of magic.> lack of decent error handling (if err !=nil { return nil,err} )Errors are in your face, instead of having e...		vardump
22086955	11.992634	-7.756287	comment	4.0	11.5	1579379554	10.41638	Was because it never caught on. It's worked on by a single person not working full time... Pretty much deadware, unfortunately.And the main Haskell compiler is implemented in C. In fact, Haskell is re...		LessDmesg
22050719	11.653013	-7.915329	story	4.0	23.0	1579048574	10.162821	Cassowary – Modern cross-platform HTTP load-testing tool written in Go	https://github.com/rogerwelin/cassowary	devhugo
22089957	11.644056	-7.949588	comment	4.0	21.5	1579418511	10.14618	There have been library implementations of this for years. And they are a far cry from true lwt aka golang.		tus88
22091804	11.896299	-7.663511	comment	4.0	19.5	1579446762	10.37559	Not all untyped languages are the same. E.g. Clojure now encourages specifying assumptions with spec annotations, some of them are stronger than those that can be expressed by Haskell's type system: i...		pron
22091818	11.75335	-7.387293	comment	4.0	12.0	1579446913	-8.851314	Dynamic type systems are inherently more open.This article really bends over in strange ways to say otherwise.Fact is: dynamic typing is all about making fewer claims in your code about what you expec...		pizlonator
22091820	12.433173	-7.098047	comment	4.0	13.0	1579446940	12.369767	>Ruby, in contrast, seems like an absurdly complicated concatenation of weird features and strange syntaxMy experience is the precise opposite. Ruby seems more consistent and straightforward than any ...		mapgrep
22137822	11.984359	-7.742927	comment	4.0	14.0	1579871524	10.410502	Haskell's main problem is that it is over-zealous, and built on axioms that make it a poor fit for real people writing real code. Everything else flows from that core issue. Functional purity and lazy...		thrower123
22137889	11.98269	-7.7383056	comment	4.0	14.0	1579872089	10.412459	Big issue with Haskell adoption is the number of hoops you have to jump through to write efficient code in it. Haskell abstracts away the idea of a procedural VM implementing the code underneath, but ...		coolplants
22138900	11.784664	-7.2716756	comment	4.0	18.0	1579878830	-8.897374	> Python programmers say the same about all static type systems.So what? Even if you think having X is good, that doesn't mean having 100X is necessarily better.> Dependant types are a simple and unif...		pron
22149968	11.986264	-7.7327113	comment	4.0	14.0	1580005206	10.412482	You are right C is a good choice for arduino, but if Python can be used with it, I believe Haskell can also be used in similar way.It will bring many high level features like type safety, immutability...		dragonsh
22150076	11.96243	-7.7140455	comment	4.0	13.0	1580006857	10.433014	The argument is still kind of the same. What benefits does this have (aside from developer preference) over using flat out C/C++? What is the performance like using the DSL in Haskell?		jonny383
22151667	11.770332	-7.3380556	comment	4.0	11.5	1580040066	-8.554405	"I think dimensions in physics serve as some interesting types, with their built-in arithmetics.I miss them in the languages I use (Python, TypeScript). I would love to have e.g. ""percent"" or ""probabil..."		stared
22177453	12.012205	-7.7843423	comment	4.0	11.0	1580272200	10.400363	Isn't the point of LINQ to get monads into the language so that it can be used by a lot of different things (seemingly having no relations to data processing), rather than just data processing tasks?		kccqzy
22178880	11.659004	-7.751599	comment	4.0	19.0	1580290778	10.169196	"I completely agree. Although it's refreshing to have an official team leader mention generics as a priority rather than the passive-aggressive stance that used to be the norm a few years back (aka ""sh..."		bsaul
22181508	12.065165	-7.784573	comment	4.0	18.5	1580311536	10.396348	Ocaml seems to get more buzz, but about 20 years ago I tried my hand at both OCaml and SML/NJ and found that I actually far preferred the latter. SML is a very nice, consistent, and practical language.Here's a pretty thorough comparison of the two http://adam.chlipala.net/mlcomp/		cmrdporcupine
22182574	12.022661	-7.569964	comment	4.0	13.5	1580316298	10.3721895	This course finally made me understand the WHY of FP.  Comparing and Contrasting the major programming paradigms at a high level, but also actually writing code was a great combination.  Before that I...		platz
22185321	11.6482115	-7.975719	comment	4.0	12.5	1580329046	10.224395	PL theoretic superiority was not the design goal. Golang was intended to be a pragmatic, bread-and-butter language for large teams with churn. Bad code needs to be screamingly obvious. It also needs t...		zelly
22196145	12.373473	-7.49512	comment	4.0	13.0	1580421142	12.880851	While 'Let It Crash' is a philosophy, it is greatly aided in Erlang by extremely lightweight threads that communicate with each other via mailboxes.		aprao
22201277	11.640117	-7.9384336	comment	4.0	13.0	1580475762	10.229898	"Well one big reason is the biggest feature people are complaining about: A lack of generics.  According to [1], there's a fundamental trade-off with respect to generics:""The generic dilemma is this: d..."		gwd
22207064	11.841401	-7.228681	comment	4.0	17.5	1580513304	10.532258	I don’t agree with the article’s claim that discriminated unions are just a JS compat feature. Many APIs type JSON serialised entities using a string property and this feature makes it very easy to write interfaces and code to work with them.		stupidcar
22220434	11.621427	-7.047903	comment	4.0	23.0	1580688991	10.418138	Wait... looking at this, doesn't this mean that by deliberately misusing the `codec` module, meta programming at compile-time (somewhat like Lisp macros) is possible in Python?By using a custom parser...		pcr910303
22221250	11.8977165	-7.0167956	comment	4.0	10.5	1580701276	9.970543	It is true and no I don’t think there’s much talk of changing it. There’s also a problem with inconsistent method arguments. Just look at array_map[1] and array_reduce[2]. This is just the one example...		duncan-donuts
22090739	12.019363	-7.6811743	story	4.0	65.0	1579432074	13.567338	Hackett, a Haskell-Like Lisp in Racket	https://github.com/lexi-lambda/hackett	tosh
22145539	12.328055	-7.604203	story	4.0	141.0	1579944410	6.735177	Restack: Full-Stack ReasonML	https://github.com/dysinger/restack/#restack-full-stack-reasonml	ingve
22206910	11.655653	-7.9709177	story	4.0	26.0	1580512090	10.205461	3 weeks writing code in Go	https://danlark.org/2020/01/31/i-wrote-go-code-for-3-weeks-and-you-wont-believe-what-happened-next/	Azatik1000
22236658	12.023751	-7.4320855	comment	4.0	13.5	1580830335	9.195995	F# pipeline operator aka... function composition that has existed in other MLs forever?		vmchale
22238067	11.896194	-7.6192055	comment	4.0	15.0	1580836171	10.341177	... all of these are likely inspired by the extremely powerful namesake of Java Records: Haskell Records [1].[1] - http://learnyouahaskell.com/making-our-own-types-and-typecla...		q3k
22238758	11.807679	-7.1664042	comment	4.0	15.0	1580839333	8.6979475	1. Records are reference types (heap allocated), structs are not. C# have structs and will also be getting records with 9.02. Yes, you can make records of other records.3. Not yet, but Project Valhalla will be bringing inline types to Java https://wiki.openjdk.java.net/display/valhalla/Main		kasperni
22239002	11.976109	-7.7167597	comment	4.0	12.5	1580840449	10.369846	Gonna take an unpopular opinion here, but I completely hate Haskell records.I'm sure that there's some kind of purity to them, but the fact that a two records can't share field names ends up making th...		tombert
22239325	12.232419	-7.631648	comment	4.0	12.0	1580841758	11.903168	It’s crazy that Java is still trying to catch up to Scala, yet, Scala seems very maligned (at least on HN, my coworkers love it).This is contraversial, but Java does not provide any value anymore. The...		smabie
22239337	11.673385	-7.8939004	comment	4.0	16.0	1580841802	10.1144705	"I've heard lots of hot takes on ""what Go really is"". Here's mine.Go is what would have happened if Bell Labs wrote Java."		correct_horse
22242158	11.749708	-7.491081	comment	4.0	11.0	1580857877	10.037396	It always feels a bit half baked when the class library isn’t designed with it though. It would be as if generics were added but not System.Collections.Generic. So while I long thought it would be the...		alkonaut
22246234	12.197333	-7.0380445	comment	4.0	11.0	1580906442	13.164178	> Heavy use of regexes when that still wasn't as common, the default variables like $_ and of course sigils (@list, $scalar, %hash).And implicit variables. Also, implicit variables. Composed types did...		marcosdumay
22254013	12.231833	-7.6136446	comment	4.0	11.0	1580972120	11.942673	My feeling is that between sbt being painfully slow and Java 8 getting lambdas, people lost interest in Scala.		dehrmann
22254273	12.243845	-7.5450416	comment	4.0	13.5	1580975342	-11.361736	Note that with Kotlin, JetBrains created it initially for working on their IntelliJ IDE and are porting their Java codebase to use Kotlin. So that is a good indicator of long-term sustainability.		msclrhd
22254322	12.248124	-7.536755	comment	4.0	15.0	1580975994	-11.356413	Kotlin and InteliJ are from JetBrains, no wonder.They are trying to be the next Borland with Kotlin as their Turbo Pascal (#KotlinEverywhere), and got Google Android's team as the language godfather.		pjmlp
22256181	12.252727	-7.55893	comment	4.0	15.0	1580999442	-11.376941	Modern Java is actually quite good. The main three things that Kotlin offers, in my eyes, are Data classes (in preview in JDK 14), Coroutines (should be coming soonish with loom), and nullable reference types (not big enough for me to switch).Outside of Android I wouldn't choose Kotlin.		vips7L
22258627	11.675419	-7.6491055	comment	4.0	10.5	1581013365	10.109051	As far as I'm aware, there's no strong link between motivation and generics.		godelski
22277708	11.922257	-7.4945693	comment	4.0	10.5	1581189124	-9.2363205	A programming language with Python-like syntax and a Hindley-Milner type system plus typeclasses. Basically, we bring Haskell’s type system an imperative programming language. An easy-to-learn scripti...		salt-licker
35614032	11.719855	-7.2521515	comment	4.0	13.5	1681825970	9.187756	this is not async, its sync queuethe lb puts a request where it has some reply_to (ip:port) where it waits (blockingly) for response from whoever picked up the request, it just does now know who that is until a reply comes		throwaway71271
35625522	11.7164955	-7.25118	comment	4.0	16.5	1681890730	-8.842693	That's something I have been pondering for some time.I believe it's a false dichotomy.My thought is still that structural supersedes nominal.A nominal interface is just another constraint added to the list of constraints of an underlying structural interface?		aatd86
35647211	12.276003	-7.0219617	comment	4.0	12.5	1682028858	13.16356	>  Sadly Perl has fallen on hard times. I think the Perl 6 debacle is mostly at fault.I agree hard times.  Hubris is at fault.Perl did too much and reached for the stars.  Its happy place was a sane j...		worik
35651621	11.677552	-7.44069	comment	4.0	10.5	1682070539	9.792328	> I'm also shock that in Perl you can alter your return type based on the type of variable the caller is putting your result in.You can do that in Java, if I understand that feature correctly.For exam...		brabel
22234207	11.707425	-7.8354907	story	4.0	24.0	1580813381	10.141211	Ask HN: Do you recommend building Backend for a Bank in GO?		syde_effect
35622280	11.803176	-7.208254	story	4.0	9.0	1681862376	-9.045036	Ask HN: Is there a Ruff for Python static type checking?		dirtbag__dad
35651791	11.697109	-7.8895726	story	4.0	65.0	1682072252	10.211642	Show HN: Gsubpy, an interpreter for subset of Python, written in Go	https://github.com/realyixuan/gsubpy	yi_xuan
35701763	12.045647	-7.7406254	comment	4.0	11.0	1682436240	10.445357	"I used OCaml as my daily driver in grad school and my postdoc, and recommend my students use it. I think the main benefits of OCaml are:Functional
Has mutable references
Not lazyHaskell's type system ..."		Miltnoid
35703707	12.050835	-7.7452135	comment	4.0	16.5	1682443442	10.420965	"Related: https://twitter.com/zetalyrae/status/1639474931086901248My OCaml:    let foo (x: bar): baz =
      (\* Is this quuxable? *)
      match is_quuxable x with
      | Yes ->
         (* Then, we ..."		mjdowney
35703786	11.942465	-7.4905424	comment	4.0	12.5	1682443733	10.367137	Coalton [1] is an OCaml-like dialect of ML: it's strictly evaluated, has imperative features, and doesn't force a purity-based development philosophy. However, Coalton has S-expression syntax and inte...		reikonomusha
35750032	11.870073	-7.0901527	comment	4.0	18.5	1682742547	8.760131	Isn’t the point that private fields remain private implementation details of the class in just about every language that has them?As a library author, if I declare something as private, it means you t...		i386
35756120	11.639237	-7.0975676	comment	4.0	16.5	1682795679	8.833532	Private is a terrible concept.Only two days ago I chose to rewrite a chunk of code simply because I couldn’t call a private function that did precisely what I needed.Also “considered harmful” is an overused cliche I wish people would stop saying it.		andrewstuart
35771289	11.903783	-7.4489923	comment	4.0	14.0	1682939967	7.2888446	I'm getting seriously pissed off with articles like this. There is inadequate discussion of the real cost...> Okay, so let's address the elephant in the room: performance. Yes. Immutable data structur...		_a_a_a_
35784677	11.663947	-7.5504622	comment	4.0	17.5	1683014871	7.0287633	"I think the modern definition of ""object-oriented language"" is skewed too much in the direction of ""what C++ is doing"".The OOP paradigm, as far as I remember, relies on the four pillars:- encapsulatio..."		bheadmaster
35738632	11.889945	-7.3914104	story	4.0	111.0	1682668023	7.2920127	Late Architecture with Functional Programming	https://www.infoq.com/news/2023/04/late-arch-functional-programming/	rbanffy
35773737	11.727287	-7.3920937	story	4.0	57.0	1682953312	-8.797056	Type Inference from Scratch (2019) [video]	https://www.youtube.com/watch?v=ytPAlhnAKro	surprisetalk
35795524	11.728573	-7.188922	story	4.0	35.0	1683069529	7.0353045	Value Oriented Programming Needs Implicits?	https://matklad.github.io/2023/05/02/implicits-for-mvs.html	todsacerdoti
35802123	11.982246	-7.750366	comment	4.0	13.0	1683120458	10.405754	> Haskell in ProductionDoes not use Haskell.Is it just me or is this... weird?		boxed
35815427	11.958474	-7.3419814	comment	4.0	17.5	1683208730	7.128764	My big quibble with this is that the OO category is way too narrow. The way it is worded it excludes almost all languages we'd currently consider OO, and is so strict it largely makes the category poi...		vidarh
35816454	11.921742	-7.3992224	comment	4.0	11.5	1683212488	-10.417361	Agree on the families, but I would pick a different representative for many of the categories.Algol -> C.  Mostly because you can actually do things with C, and yet it remains a fairly small language ...		nostrademons
35828661	11.609401	-7.0216417	comment	4.0	15.0	1683291624	8.47318	The architectures that the code runs on has no bearing on whether it makes sense. What, for instance, do you turn a malloc() call for a number of bytes into? The JVM manages your memory for you and as...		bastawhiz
35836426	11.911101	-7.0223055	comment	4.0	12.0	1683329501	9.1582155	"I would argue that all ""mapping"" structures should use Map these days. Objects should be used only for record/struct data with a fixed set of programmer-named keys.I think MDN has a good comparison: h..."		kevincox
35855824	12.314854	-7.0776834	comment	4.0	10.5	1683495254	13.154817	"Am I the only one who read it as ""Raz-kal"" rather than ""Raskuhl"""		bdcravens
35902084	12.328792	-7.256519	comment	4.0	15.5	1683813103	7.0714655	What do people use Pharo for? Is anyone here using it for a product?		jadbox
35902551	12.293631	-7.2840004	comment	4.0	14.0	1683815121	7.1019382	I used Pharo in my Object Oriented course at the Univeristy (for my CS degree) and I was really surprised for this paradigm. We saw Haskell and Pharo and I was really happy to discover new things from...		101008
35910968	11.643573	-7.9799476	comment	4.0	15.0	1683856806	10.245829	> There's no denying Go's initial allure, but in reality it fails to address in any systemic way the problems that have plagued the software development practice for decadeI find comments like this il...		zbobet2012
35928770	12.500742	-7.493161	comment	4.0	23.0	1683988246	12.868667	I've always found myself in fundamental disagreement with the Erlang/Elixir philosophy.    Resilience, within the context of this presentation, and the philosophy of Erlang, would be the capability to...		munchler
35928850	12.443548	-7.4612813	comment	4.0	16.0	1683988759	12.897076	Hard to respond to this, it's too high level and generic to disagree with.But in practice, if you're on the BEAM and use OTP as intended, your code is fully parallel, split into fault-tolerant pieces,...		sph
35936539	11.922545	-7.724655	story	4.0	111.0	1684055219	10.360184	Making GHC faster at emitting code (2022)	https://www.tweag.io/blog/2022-12-22-making-ghc-faster-at-emitting-code/	ingve
35959541	11.825616	-7.272912	comment	4.0	11.0	1684230071	8.587034	Too bad immutability breaks the quite-ubiquitous-in-JVM-land Bean spec (and I wonder what one was smoking before drawing that spec).I think having proper sum-types with pattern matching would have also made it a much better language.		cies
36004642	11.679787	-7.890859	comment	4.0	11.5	1684517740	10.219416	I wish they didn't track Python and Go packages in their repositories--especially with Python.  These languages already have their own package managers, and this creates so many different problems when user calls to pip/go-install have collisions with whatever root installed via apt-get.		hello_computer
36018964	11.745841	-7.128911	comment	4.0	13.0	1684657949	-9.030845	> Dataclasses instead of tuples or dictionariesThe point is good in general, but it's still perfectly possible to use tuples and get all the field name and typing benefits: just use typed named tuples...		quietbritishjim
36019252	11.863754	-7.0929527	comment	4.0	12.0	1684661550	-9.03706	> I can do almost all the dynamics things that I can do in Python with C#, but in a type safe way.If you like flexibility with a good type system, give Typescript a try, its miles ahead of mypy and its designed by same person who’s behind C#.		tejinderss
36020135	11.982443	-7.1441107	comment	4.0	23.5	1684671553	-9.141523	I can’t get over how clunky Python 3 is getting. Does anyone like working with type hinting in Python? All of my code is typed but compared to basically every other type system the process was far mor...		miiiiiike
36027257	12.139286	-7.632822	comment	4.0	19.5	1684727589	-11.105869	Totally valid point that swift is only useful for developing for Apple products, but this same criticism also applies more or less to Kotlin on Android. If you are dealing with iOS it is a joy compare...		blululu
36045353	11.663336	-7.9371877	comment	4.0	12.0	1684854322	10.208978	Regarding Go, it didn't have generics until recently, partly because some of the community didn't think it was beneficial. They've been nothing but positive in our project as we've been able cut down on substantial amounts of boilerplate in some areas.		eweise
36048348	11.779703	-7.8689075	comment	4.0	11.0	1684865229	10.17032	"I'd add ""What's the best web framework?"" and answer it with ""No.""(Go comes batteries included)"		maerF0x0
36000646	11.768127	-7.287216	story	4.0	2.0	1684497050	-6.0229707	The hype surrounding immutable objects	https://twitter.com/WolfOliver/status/1659526888589520896	WolfOliver
36097547	12.021586	-7.7992496	comment	4.0	11.0	1685216418	1.8360612	Our long term aim is to upstream all of our work from our branch of the OCaml compiler. Of course, that is contingent on the ideas we’re developing there being accepted by the community. There are two...		lpw25
36097570	12.078749	-7.801702	comment	4.0	20.0	1685216553	10.427796	Is Ocaml actually good or is it a meme that people use it and become obsessed with it. How is the transition if you mostly code imperatively? Are there things that are not ergonomic for it to do like GUIs or games?		Decabytes
36118595	11.946793	-7.562149	comment	4.0	13.0	1685397435	10.112406	I’m just a guy, so take what I say with a grain of salt.This problem is broadly solved by a combination of domain-driven design (DDD) and functional programming (FP).Yes, I know you’re tired of hearin...		epgui
36120331	12.281369	-7.068342	comment	4.0	11.0	1685411552	13.155261	I think there's a piece of insight missing from the author's analysis of non-programmatic sigils. To wit, the sigils are only valuable when both parties deeply understand the information that the sigi...		whakim
36133888	11.784162	-7.282982	comment	4.0	25.5	1685501016	5.099153	I have been programming for 20 years, and yet despite having used dynamic languages I don’t actually know what it means to leverage dynamic programming techniques. For instance, I’ve never encountered...		JoeyJoJoJr
36135129	12.063801	-7.7888575	comment	4.0	19.0	1685514120	10.444818	"""Oh, you _also_ need to print something? Lets stack a few monad transformers...""""But remember that you need the TemplateExplicative and NullUnderstanding compiler extensions!"""		c00lio
36135537	11.921737	-7.377744	comment	4.0	14.5	1685518297	7.054104	> OOP is bad because eventually OO systems becomes too complex, OO API is intimidationThis strikes me as a sort of ... reverse of survivorship bias.You look around and see all complex systems are in O...		lelanthran
36134437	12.0367155	-7.4679537	comment	4.0	12.5	1685507051	-10.598841	Forcing linear dependence of files and definitions is considered a feature of F#. In codebases that allow out of order definitions, things get wild real quick.		bmitc
36135306	11.85836	-7.3592963	comment	4.0	12.0	1685516162	7.1372595	The worst part of OOP is that all the properties of an object can be a mishmash of values and are mutable. In any method, you never know if the object is in some undesirable state without checking pro...		devmunchies
36135686	11.9408455	-7.778359	comment	4.0	12.0	1685519776	10.474106	You're thinking of Haskell. F# was modelled after OCaml, which doesn't attract monad transformer stacks, and doesn't have a zoo of compiler extensions.		momentoftop
36147720	11.7760515	-7.337165	comment	4.0	15.0	1685595663	-8.874335	I loved this paragraph:   You observe this with types. Dynamic types feel faster, at the REPL, when you’re coding at 1Hz, because you’re not factoring in the (unseen) cost of future bugs, the cost of ...		xupybd
36149553	11.773367	-7.3911037	comment	4.0	11.0	1685617163	-8.868427	Except this is bs because modern jit outperforms C and C++ compiled code in some cases. Dynamic types mean the constraints are known later. It doesn’t mean they’re never known. And when they’re known you can partially reduce.		BulgarianIdiot
36191281	11.633262	-7.9467115	comment	4.0	17.0	1685928984	10.223642	Why is Go easier to debug? It kinda sounds like you're more familiar with one language than another and are basing your assessment of the tool on that.		yjftsjthsd-h
36193641	11.85477	-7.5974402	comment	4.0	14.5	1685951326	10.403969	One highlight from the article:> Traits. I generally don't like traits / typeclasses. To my eyes they're too type-directed, too global, too much like programming and debugging a distributed set of inv...		elcritch
36156790	11.61332	-7.48345	story	4.0	126.0	1685650716	9.383145	What Vale taught me about linear types, borrowing, and memory safety	https://verdagon.dev/blog/linear-types-borrowing	generichuman
36250407	12.000053	-7.7567105	comment	4.0	14.0	1686264955	10.47236	It’d be nice if the Haskell subreddit found a new home. I don’t know why Reddit is so generally toxic, but it is.		yakshaving_jgt
36258563	11.671674	-7.0864086	comment	4.0	14.0	1686321765	8.656575	"shameless plug: I maintain a small library to do functional pipes.You can write:    (
        range(10)
        | Map(lambda x: x * 10)
        | Filter(lambda x: x % 2 == 0)
        | Reduce(lambda a..."		tandav
36279340	11.743311	-7.2717576	comment	4.0	14.5	1686471377	12.8328285	> type analysis, static analysisThese two are so terribly, laughably bad in Elixir that you listing them as advantages makes me doubt the integrity of your entire post.		skrebbel
36284714	11.985762	-7.3944135	comment	4.0	11.0	1686511531	-11.340633	"1.  Java already has succinct lambda expressions.     parameter               -> expression
    (parameter1, parameter2) -> expression
    (parameter1, parameter2) -> { code block }

and function sign..."		lenkite
36285014	11.623942	-7.0936337	comment	4.0	14.0	1686513554	-7.2045403	> First one is annoying, but it makes sense, to some degree. You say the default is this particular instance that gets created when you define the function.Could just as easily be an expression that's...		BoppreH
36298025	12.280037	-7.528872	comment	4.0	12.0	1686592713	-10.550921	When we (darklang.com) were working with Rescript, I was not optimistic about Melange's approach, but in retrospect I think it has legs.The challenge with ReScript is that the authors really were focu...		pbiggar
36329261	11.768266	-7.384255	comment	4.0	14.5	1686763349	7.989159	Doesn't support algebraic data types, though.FWIW I think this article mentioning them at all is sort of weird because the article doesn't propose them either, lmao		LoganDark
36333674	11.960601	-7.717616	comment	4.0	10.5	1686781663	10.399578	So it's just...haskell but different?		alex_lav
36334472	11.764776	-7.4295187	comment	4.0	11.5	1686786299	-8.759662	"I've noticed amongst many peers that when going down the type theory/pl theory journey there is a ton of hidden knowledge and context we all find ourselves collecting which makes all it ""click"" and he..."		solomonb
36321361	11.698143	-7.4476223	story	4.0	58.0	1686715978	-8.710108	How to implement dependent type theory I (2012)	https://math.andrej.com/2012/11/08/how-to-implement-dependent-type-theory-i/	todsacerdoti
36378265	12.041004	-7.7582207	comment	4.0	12.0	1687076091	10.452312	"hah if you consider yourself ""talented"" or ""experience"" and can't contribute to a project you want to contribute to just because it's Haskell, you might have misevaluated yourself on those axes [1]i n..."		whateveracct
36398600	11.641228	-7.9245462	comment	4.0	10.5	1687224105	10.2314625	For the love of all that is good in the world, this is a solved problem, I don't understand why languages like Go, Kotlin, Python etc etc etc continue to insist on not having sane Option, Either, Try etc types.		bedobi
36424039	11.660658	-7.939752	comment	4.0	13.5	1687379765	10.229062	"As a non-developer who has only gone as far as ""hello world"" in Go, I'm baffled by the idea that the log/slog thing is new - that seems like an absolutely basic language feature. TBH I'd say the same ..."		anyoneamous
36427493	11.867278	-7.3755836	comment	4.0	26.5	1687402433	7.0575557	It's weird that so much of OOP back then was centered around deep class inheritance hierarchies as a means to share code when my favorite more modern languages (Rust and Go) intentionally leave out th...		jupp0r
36427590	11.835467	-7.3377314	comment	4.0	19.0	1687403458	7.024151	"I really don't get why people keep repeating ""class inheritance hierarchies are bad"". If one understands Implementation vs. Interface inheritance and the intent behind each (the former strongly couple..."		rramadass
36452577	11.692809	-7.3296022	comment	4.0	14.0	1687556787	-6.090294	I've heard the same argument against unit testing and strong typing.		xupybd
36455732	11.649003	-7.9631596	comment	4.0	10.5	1687583098	-9.19707	I think the part they take issue with that might surprise you is if you decide to start using a dependency, and that dependency declares in it's go.mod file (not yours) that it needs a newer version t...		yobert
36457912	12.061643	-7.0530653	comment	4.0	29.5	1687607772	-10.391256	Well, there should just be a function `Type.keys` that accepts a type and, at the typelevel/compiletime, finds the keys and returns only those that the type we are using has, not the underlying object...		valenterry
36458433	11.728773	-7.30902	comment	4.0	11.5	1687612390	-8.834893	"So the real reason is ""because of the limitation of the structural typing instead of the nominal one""?"		_ZeD_
36482865	12.211799	-7.592206	comment	4.0	11.5	1687800447	11.919002	This just reminds me of how far Scala has fallen.  The 3.0 debacle, the fact that the community had a civil war, it really is a shame considering how it's SO close to being a strongly typed python rep...		VirusNewbie
36494520	11.656897	-7.097962	story	4.0	153.0	1687880817	9.157475	The Comprehensive Guide to Elixir's List Comprehension (2022)	https://www.mitchellhanberg.com/the-comprehensive-guide-to-elixirs-for-comprehension/	clessg
36516582	11.717649	-7.3664346	comment	4.0	15.5	1688015791	-8.787527	"The other way around you have the ""it compiles, so I don't need tests"" crowd in statically-typed languages."		wirrbel
36519115	11.790898	-7.2838974	comment	4.0	12.0	1688038912	-8.953296	"I'm not taking those arguments seriously anymore. Here's from the linked doc:> In a weakly typed language a compiler / interpreter will sometimes change the type of a variableWell,    a = 1
    a = ""a..."		tgv
36519977	12.0439005	-7.704978	comment	4.0	14.5	1688044767	10.3025875	Explaining how to use a Javascript Promise is simple. Explaining how to write idiomatic pure code using Monads is hard, and impractical in most cases, despite what FP purists will tell you.		c_crank
36520652	12.169452	-7.542877	comment	4.0	12.0	1688048172	-10.567199	Isn't that because F# failed to win any significant market share? I think F#'s problem is that C# is too good and this was true even in 2010, its not like Scala vs. Java in 2010.		jeremyjh
28692056	12.319674	-7.026267	comment	4.0	13.0	1632911907	12.391072	Ruby seems to have got past its GIL problems with Ractor[1]. What's stopping Python from doing something similar?[1] https://scoutapm.com/blog/ruby-ractor		helpfulmandrill
28692720	11.982287	-7.7359824	comment	4.0	17.0	1632918412	10.387924	If it's written in Haskell, it's highly likely that it'll be far harder to modify than something written in, well, not-Haskell.Haskell might be easy when you get the hang of it, but the vast majority ...		fouric
28711139	12.477697	-7.4978523	comment	4.0	12.0	1633035018	-5.4090548	"I'm sure Ada makes a reliable program, but wouldn't it also be good to have an Erlang/Elixir style ""self-healing"" system with supervisors that can stop and restart each other?"		olah_1
28717728	11.594529	-7.3576035	comment	4.0	12.0	1633092248	-8.692225	"I had never thought of type systems in this way. If type systems are effectively a ""unit"" attached to the data then you can think of them as an unknown value in arithmetic.Eg ""4x + 4y = 40.4z""x, y, an..."		Aerroon
28735941	12.014984	-7.7913094	comment	4.0	19.0	1633255987	10.437008	> Few people are excited about both monads and macros; only one person that I know comes to mind.I don’t understand what the article is trying to convey. Everyone in the PL community know about monads...		WastingMyTime89
28738315	12.009203	-7.7876034	comment	4.0	14.0	1633278346	10.422296	> Considering how much we hear about monads and macros compared to how much they are actually usedThat’s users. That’s not what I meant by the PL community. I was talking about people actually working...		WastingMyTime89
28738366	11.600491	-7.8987155	comment	4.0	14.5	1633278649	10.104016	In Java or Python you do not normally need write a test case for “if this dependency fails, it will be propagated to the caller.” In Go you have to do this or your line/branch coverage will be abysmal...		closeparen
28738393	11.630671	-7.966899	comment	4.0	11.0	1633278840	10.245858	Go has warts and 101 faults (depending who you are and how hard you squint)...But what I absolutely love about Go is how easy(relative to other languages) it is to 'read' most of the Go code in the wild, including the std libs !YMMV...Every tried reading C++ libs/header-libs ?		rawoke083600
36546279	12.08264	-7.5218635	story	4.0	2.0	1688183059	-10.616268	Ask HN: What's the best web back end functional stack in 2023		xupybd
28683340	11.591966	-7.085964	story	4.0	4.0	1632839955	9.409502	Most Efficient Lambda Language	https://towardsaws.com/most-efficient-lambda-language-c540870843e4	kisanpakhreen
28778810	12.093934	-7.694127	comment	4.0	19.0	1633556226	10.402695	"Kind of, but like OCaml-to-F# is like ""Dark goes from the Prius of languages nobody uses, to the Tesla of the .NET ecosystem."" The aims (ecological in the car case) of the purchaser are similar, but t..."		crdrost
28788152	11.7199335	-7.718046	comment	4.0	13.5	1633622693	9.517689	My understanding is that Dropbox has been building performance-critical parts of their services in Go since 2014 at the least. https://twitter.com/jamwt/status/629727590782099456Like many companies, t...		ferdowsi
28787574	12.03744	-7.782567	comment	4.0	14.5	1633620432	10.421235	I write a lot of Scala for living, Ocaml looks a bit outdated to me. Having said that, Ocaml compiler is one of the greatest miracles in PL when it comes to speed vs complexity of the language. Scala/Haskell/TS are not even close. I hear Ocaml's runtime performance is not too shabby either		AzzieElbab
28801342	11.618808	-7.14909	comment	4.0	11.0	1633712097	9.100708	"I think this would be the Python equivalent:    x = [1, 2, 3, 4]
    x = map(lambda x: x*x, x)
    x = filter(lambda x: x < 10, x)
    x = list(x)

Or is there a more elegant way?"		TekMol
23423382	12.295629	-7.5137076	comment	4.0	11.0	1591314380	12.823085	I don't particularly care about high throughput streaming architecture. The actor model as a concept, its concurrency, and how that models the business domain is more along the lines of what I'm inter...		p33p
23423339	12.235114	-7.6226983	comment	4.0	14.0	1591314045	11.948603	I'm in this boat too. If you look at lot of the Scala talks from 5-8 years ago it talks a lot about why Scala is better than Java, but since then Java has copied a bunch. Now Kotlin is taking over and...		rb808
23437695	12.02052	-7.5434227	comment	4.0	18.0	1591433539	11.876632	"You can know the exact parameter and return types of a function by reading its signature. You can't do that in Scala, because of type inherence. This is legal Scala:  def twice(x: Int) = { x * 2 }

Bu..."		twic
23438383	12.026849	-7.7435822	comment	4.0	13.0	1591442221	10.452899	Ocaml and the MLs have a very strong commitment to global type inference, much stronger than Haskell's. Scala has no commitment.That said, you do see a lot of types in Ocaml code. Ocaml source files t...		momentoftop
23452142	11.784373	-7.3538637	comment	4.0	12.5	1591573776	-8.965165	>when not to use static typingI'll bite. When should static typing not be used?(Note: I agree with your general point)		macspoofing
23454553	11.945367	-7.717768	comment	4.0	48.5	1591603315	10.396775	This is a great post. However, there are so many more things that should be on here!If I could suggest just one, it would be lazy evaluation by default, which makes it exceedingly hard to reason about...		spekcular
23455767	11.98297	-7.743018	comment	4.0	14.5	1591617643	10.435435	One thing that irks me about the current Haskell ecosystem is that it seems to be going all-in on Nix. Nix is interesting, but I can't think of another programming language where the only way to get a...		foldr
23467426	12.016301	-7.722025	comment	4.0	18.0	1591716220	10.430334	Would you say idiomatic Haskell is faster or slower than idiomatic use of Java and the JVM? I'm interested in actual experience and preferably benchmarks of real cases, no thought experiments please :...		the_af
23468403	11.864718	-7.5207143	comment	4.0	12.0	1591722156	10.391065	Actually, it does. If you want a sound and complete static type system for a practical language, you end up with monads (or something very close to it, like streams or effects) or you cannot type your side effects (and then your type system is either incomplete or your language impractical).		choeger
23492563	11.830964	-7.339843	comment	4.0	14.5	1591904189	-8.932569	I'm relatively ignorant about this, but a common refrain I've heard repeated about strongly typed languages targeting the BEAM is that typing of messages is [hard / an ongoing research problem / impossible]. Can anyone comment on whether that is true and what that says about this language?		heisenzombie
23497730	11.915677	-7.0469904	comment	4.0	10.5	1591956663	9.379144	Hi - many of the configurations do use uvloop.For what it's worth, I think people are using aiopg because it works with SQLAlchemy whereas asyncpg does not.I kept the database driver the same because ...		calpaterson
23497792	11.744808	-7.3240504	comment	4.0	17.5	1591957445	-10.708923	> Function colouring is a big problem in PythonNot when you know how to call sync functions from async functions and vice versa.An sync function can call an async function via:  loop = asyncio.new_eve...		compressedgas
23497631	11.863499	-7.1345105	comment	4.0	10.5	1591955527	-10.8191	EDIT: Read the article again, cleared up why the worker count differs.Anyway, I'm running quite a few small Python services on cheap VPSs, i.e., shit performance, and using async was beneficial for me...		dotdi
23502398	11.802053	-7.325671	comment	4.0	13.5	1591987857	-8.96052	I wish there were more statically typed embeddable languages that weren’t functional. I mostly make tools for developers and that audience doesn’t especially find the functional syntax or paradigm to be very helpful.		throwaway894345
23505781	12.104977	-7.7067556	comment	4.0	14.0	1592011183	-10.62072	The original OCaml is more interesting. It has language flexibility F# lacks, gets new features every year, crossplatform, and compiles into the native code, thus faster. Once Multicore OCaml [1] proj...		xvilka
23506377	12.020375	-7.5479994	comment	4.0	13.5	1592017328	-10.598011	Wow this is a great comment about a new-to-FP viewpoint on F#. I came to it after I'd already experimented with Haskell and OCaml, used Rust a lot, and been programming with Lisps for years - and I wa...		logicprog
23506754	12.195688	-7.164232	comment	4.0	14.0	1592022667	-10.525186	Formatting is rudimentary but it exists: https://news.ycombinator.com/formatdocYour example is actually a really good one for discussing these differences, and the syntax is indeed similar. That TypeS...		jolux
23537018	11.893058	-7.6072984	comment	4.0	12.5	1592296323	10.330249	How is a Haskell type class dict different from a vtable?It's in fact the same.		kccqzy
23544484	11.604572	-7.883507	comment	4.0	23.0	1592343217	10.129448	Fun fact: because json is a reflective package in Go, solving your problem is quite trivial: https://play.golang.org/p/-TZ5b9Su1or .As for programming with types, that's partly what Go was trying to a...		vlads_
23545035	11.715273	-7.317077	comment	4.0	26.0	1592346244	-8.946431	That study calls out significant issues. I can go from personal experience. Porting python to Go. In python, we had to have tests dedicated to ensuring the right types were handled the right way. Is i...		sethammons
23549334	11.761091	-7.2445045	comment	4.0	14.5	1592384570	-6.5659857	Is it a deeper rabbit hole than FP? Could you give some links or good array language names?		G4BB3R
23563613	11.666087	-7.9006686	comment	4.0	14.0	1592491986	10.1486	Back in the day, if you mentioned generics on any Go post on HN, you would be downvoted to the hell, interesting how everything comes full circle (unfortunately a bit late).		obilgic
23565022	11.640675	-7.900546	comment	4.0	12.5	1592499251	10.173681	Good introduction.I have to agree with other commenters that the syntax leaves something to be desired. A lot of parentheses competing for attention.Perhaps we could take a leaf from the Modula-3 book...		atombender
23569471	11.763192	-7.203216	comment	4.0	45.0	1592524286	-9.015902	Nice course. Looks like good, practical material for people who want to dive in.Side note, this example made me pause and be grateful that I'm no longer professionally writing in python as much as I u...		ed25519FUUU
23569507	11.8234215	-7.1874094	comment	4.0	15.5	1592524662	-9.006156	I believe that some recent Python version has added (optional) type annotation support. I haven't ever used it though.		xthetrfd
23570461	11.648531	-7.9248214	comment	4.0	11.0	1592534394	10.205843	I love the idea of main-less Go scripts for times where you just want to do something simple, fast.Neugram [1] aimed to make Go a better scripting tool, but unfortunately it seems the project is dead....		maddyboo
23583531	12.020804	-7.491113	comment	4.0	14.0	1592655601	-10.579112	> I like some aspects of FP, but there are other aspects that I don't like.Care to enumerate? Asking because I feel the same: I really enjoy immutability, first class functions, map/filter/reduce, Opt...		ratww
23593497	11.69185	-7.366246	comment	4.0	10.5	1592760237	-8.786826	I never throw inputs of random types to my functions. Actually that could be a good idea, some fuzzying at the public API level could catch some bugs and attacks. But not at unit test level. If a func...		pmontra
23565739	11.988564	-7.7184978	story	4.0	18.0	1592503192	10.455389	Haskell Game Enpuzzled Released for Android and iOS	https://keera.co.uk/2020/06/18/enpuzzled-released-for-android-and-ios/	myroslambda
23593253	12.342054	-7.035478	story	4.0	77.0	1592758534	13.180312	Perl 5.32 Released	https://metacpan.org/pod/release/XSAWYERX/perl-5.32.0/pod/perldelta.pod	todsacerdoti
23607673	11.864246	-7.1860785	story	4.0	40.0	1592865007	7.0225663	Object-Oriented Design Heuristics (2017) [slides]	https://www.slideshare.net/kim.mens/objectoriented-design-heuristics	tjalfi
23622439	12.01344	-7.7574763	comment	4.0	14.5	1592959034	10.432347	Haskell does have an issue of people using it being more interested in doing clever things and researching topics than building cool applications.Haskell jobs do exist, I have one of them. The big pro...		JoelMcCracken
23627129	11.595325	-7.067767	comment	4.0	20.5	1593002078	6.6831927	"glad to see this! though it's a shame that the proposed `match/case` is a statement, not an expression:> ""We propose the match syntax to be a statement, not an expression. Although in many languages i..."		uryga
23627429	11.884439	-7.7064095	comment	4.0	10.5	1593004248	10.410767	As a seasoned C++ programmer, that occasionally plays with Haskell, here is a question?Has finally Haskell the problem of how to do destructive updates or not?If it cannot do destructive updates, I am...		axilmar
23630104	12.325169	-7.020797	comment	4.0	11.5	1593016360	13.193323	Yep, I know of one company still actively using Perl for a large part of its infrastructure. It has its use cases.		jpxw
23630278	12.320387	-7.032332	comment	4.0	16.0	1593016807	13.164393	"This feels like a last ditch attempt to save a dying language. (https://i.imgflip.com/4676mf.jpg)
I wonder what exactly does Perl bring to the table as a language, why would one consider choosing it over other languages."		bhaavan
23630536	12.327295	-7.0267034	comment	4.0	13.5	1593017654	13.18321	Many places don’t support antifragility. Having an old system that nobody wants to rewrite may not be a reflection on the engineers.You’re an expert, and a rewrite is going to expose you to a lot of s...		hinkley
23630826	12.412354	-7.0609283	comment	4.0	13.0	1593018872	13.201332	This is just bad maintenance. Just pick all the stuff people are complaining about and fix it!1. Improve threads2. Improve C API support3. Give local::lib, cpanm by default ... multiple perl versions ...		foobar_
23632896	12.029548	-7.7472463	comment	4.0	12.0	1593027610	10.456845	I like Haskell, I write Haskell at my day job (and did so at my previous day job), and I help maintain some of the community build infrastructure so I’m familiar with a large-ish graph of the Haskell ...		jkachmar
23636195	12.43335	-7.851806	comment	4.0	12.0	1593051428	10.43651	Not sure where the hostility is coming from. I didn’t read anything disparaging about Haskell in hencq’s comment. He/she just made a factual statement about Clojure’s approach to data types being anal...		adamkl
23644315	11.748359	-7.1424417	comment	4.0	15.5	1593112246	-9.020401	Python has dynamic typing, which can be equally dangerous. In fact I’d argue it’s more dangerous. You will not throw errors until runtime, which will literally blow up in your face.		0x8BADF00D
23664123	11.695515	-7.360685	comment	4.0	15.0	1593287157	9.239595	had that feeling...as a side note, i think more and more people are starting to realize that the async paradigm is not a panacea. that paradigm or at least the way we implement it might even mean more...		blondin
23710615	12.091767	-7.2158265	comment	4.0	16.0	1593672236	11.866644	"Spring Boot is setting the Java ecosystem back 10 years. But such missteps aside a lot of modern Java libraries have a more ""plain old Java"" attitude, and it's now reasonably idiomatic to write Java c..."		lmm
23712922	11.620043	-7.93036	comment	4.0	13.5	1593696971	10.18742	While the article overall might not be totally wrong, at least two details are dead wrong.Go DOES have a virtual machine, thats what gives you all the lightweight threads and garbage collection. You m...		corty
23628527	11.946946	-7.4194164	story	4.0	9.0	1593010561	7.1637197	Ask HN: OOP vs FP?		yoda_yoda
23779636	11.917795	-7.4352417	comment	4.0	14.5	1594299213	7.2648964	"Functional / imperative doesn't exactly map on to these two concepts. ""Computational"" is often imperative and integration code isnt always imperative (a lot of react code would fit in this box, for instance)."		pydry
23779731	12.231827	-7.5408907	comment	4.0	11.0	1594299949	-11.376198	The dilemma was always a false choice. You don't need kotlin to get rid of your boilerplate. Java is just a capable of being concise as any other language. Java's verbosity is a cultural artifact not a technical one.		zaphar
23795507	11.966828	-7.6897597	comment	4.0	28.0	1594410091	10.438503	> I can count on the finger of my hands the number of times when I needed to write explicit types in OcamlDo you genuinely rely on whole-program type inference? Writing fewer than ten explicit types i...		chrisseaton
23797531	11.6614485	-7.2609253	comment	4.0	11.0	1594421620	-8.673205	> Why not let the computer do the work?Because a program's types can serve as part of its documentation.		MaxBarraclough
23841008	11.642511	-7.927433	comment	4.0	11.0	1594784198	10.214383	And I bet that if Go ever gets generics, they will look extremely similar to everything everyone has been telling them for years, even though they dismissed that feedback for years as silly.The switch from parentheses to square brackets is just the first step toward that admission.		hota_mazi
23864109	11.671476	-7.924056	comment	4.0	10.5	1594935542	10.195291	The only one that is different is Rider, since it has much deeper C# integration (might be others such as DataGrip, but never used it). PyCharm and GoLand are just plugins (same as WebStorm, PhpStorm, etc)		CraftThatBlock
23878866	12.226277	-7.3185215	comment	4.0	14.5	1595045820	7.1493964	This is so cool.We know that smalltalk message passing was inspired by biology, and the ultimate design vision was for objects to be ephemeral machines themselves.Would it be possible to create a farm...		endlessvoid94
23910795	11.598917	-7.9256916	comment	4.0	27.0	1595364298	10.173408	"https://blog.filippo.io/shrink-your-go-binaries-with-this-on...This is great article instructing how to shrink the Go Binaries.
Author is lead of cryptography and security team of Go Team at Google."		varbhat
23917472	11.727826	-7.342515	comment	4.0	12.5	1595428645	-8.786296	I like it because it disadvantages the politically competent types while advantaging the technically competent types. Guess which category I fall into.		User23
23938892	11.825032	-7.4011273	comment	4.0	23.0	1595595614	-8.881778	I don’t get the cost claims. The time it takes to note which type I intend something to be is mostly either so low that I recover it via improved hints and such very quickly, or larger but only becaus...		pantaloony
23942386	11.712179	-7.3307166	comment	4.0	12.0	1595612747	-8.902855	Just write tests and suddenly refactoring is possible without static typing. Those tests will also cover type checking concerns implicitly.		archarios
23958118	12.021153	-7.741846	comment	4.0	20.0	1595780405	10.471906	My university teaches the intro CS course in Racket (lisp), and I know another that teaches in Haskell. If decades of priority exposure to young programmers is not enough to spur widespread adoption, then I'm not hopeful.		bobbyz
23962219	11.599198	-7.0815005	comment	4.0	15.0	1595823723	-7.612132	"in python i started writing any function that takes >2 arguments as either  def foo(*,a,b,c)...

or  def foo(obvious_and_required_thing, *, a,b,c) ...

and noticed an immediate improvement in clarity."		hprotagonist
23990915	11.970402	-7.099322	comment	4.0	11.5	1596052741	-9.037764	I much prefer separate files for type declarations. Or at least the ability to define them separately. Type annotation takes away from readability. I like keeping the types and code separate.		amw-zero
23991394	12.445577	-7.118689	comment	4.0	16.0	1596055430	12.376695	A-fucking-men.In the course of my job I write Swift for iOS and Ruby for server APIs and our web-based UIs.Type issues are about 0% of my Ruby bugs, but dealing with all the damn type requirements in ...		sparker72678
23992986	11.838872	-7.325846	comment	4.0	10.5	1596068040	-8.87715	> Yeah, it makes millions of application programmers' jobs easierI don't think it's that simple. Large programs get unwieldy, no matter what language you write it in, and a large body of evidence sugg...		titzer
23998223	12.00104	-7.7583513	comment	4.0	13.5	1596117633	-10.758247	”For a while it has been a public secret the Haskell ecosystem has become increasingly entangled with an unsavoury variety in the cryptocurrency sector as one of primary mechanisms for funding development.”And those would be? I code in Haskell every day and I have no idea what he’s talking about.		alexmingoia
23999155	11.75995	-7.3478947	comment	4.0	11.0	1596122270	-8.919353	That's not true... all turing complete type systems are unsound (where the type metalanguage itself is a turing complete language), but you can have a sound type system of a turing complete language, and in fact haskel itself has such a type system.		bodhiandpysics1
23999835	11.990074	-7.259797	comment	4.0	18.5	1596125533	9.168766	The way I would write the code is never covered, and I can't tell it's because I don't understand async, or I'm secretly a genius.The article says this is correct.>  const both = await Promise.all([ m...		recursive
23999893	11.989254	-7.232525	comment	4.0	13.0	1596125805	9.152274	This is not wrong, it's just not parallel. That is, the second promise, inside `.concat()`, will only get created and scheduled after the `await members` will have resolved.The point of `Promise.all` ...		nine_k
24001184	12.012797	-7.7677445	comment	4.0	13.0	1596132168	-10.776041	I have great respect for Stephen Diehl and love his writing. But I must respectfully disagree. I think it’s fantastic that Haskell is seeing more paying jobs and corporate sponsored development thanks...		tbenst
24008838	11.912796	-7.3665004	comment	4.0	14.0	1596205497	7.0576167	"That sounds snarky. Not sure if that was intended or not, but regardless I read your comment as:""OOP is good when you use the object oriented structure as a tool to organize your code and data to solv..."		api
24008953	11.904259	-7.3430443	comment	4.0	14.5	1596206219	7.0943375	The entire point of OOP is to encapsulate state within objects and to have objects communicate through messages, that is to say to 'program without a center'. Global or interconnected state is if anyt...		Barrin92
24009002	11.880783	-7.364333	comment	4.0	15.0	1596206441	7.0508366	IMO, OOP just puts too many footguns at your disposal, the most dangerous one being mutability (how normal is it that our methods mutate instance variables?).  The larger a system grows the more mutab...		tempodox
24009486	11.761894	-7.2486176	comment	4.0	20.0	1596208832	8.746415	Objects are essentially structs with namespaces and methods with implicit this params.  If you can't have state then you throw structs out too.If you're going this far, you're essentially throwing away typing as well.Are you actually just opposed to private fields?		jayd16
24009320	11.860661	-7.3764014	comment	4.0	10.5	1596207888	7.070717	"The author flatly says ""do not use inheritance."" Without inheritance and polymorphism, what is left in OOP? If you look at the author's 4 pillars, the only thing left is encapsulation (and ""Oversimpli..."		identity0
24010909	11.861563	-7.3163896	comment	4.0	23.5	1596215795	7.1219163	"""Tightly binding data and code"" allows you to maintain complex invariants via code, and to abstract away from the specifics of any single implementation. Statefulness per se is quite manageable; what'..."		zozbot234
24010930	11.921593	-7.1553383	comment	4.0	11.0	1596215908	8.894046	In what versions of OO does a hash map hide the data? The definition of a map requires that you can access the data.		karpierz
24011685	11.698324	-7.3222065	comment	4.0	15.5	1596219118	7.264816	I'm not the one you're asking.  But...Here's a data structure that represents a bill of materials.  It has a list of components, and a total cost, which is the sum of the costs of the components on th...		AnimalMuppet
24018292	11.798493	-7.2398205	comment	4.0	12.5	1596264990	9.230926	I'd just call the function once by avoiding the global; construct your database access object at the start of your asynchronous main method and dependency inject it to other tasks.		alexchamberlain
24020382	12.335767	-7.029095	comment	4.0	15.0	1596289561	13.1764965	I think the reason is probably what you mentioned - very few people are starting large Perl projects nowadays. And I think they'd like that to not be the case anymore by making it attractive to newcom...		vikramkr
24020726	12.347311	-7.0238237	comment	4.0	14.0	1596292547	13.181458	Then let it die in maturity, going down providing value to its users to the last, and focusing on any needs its remaining users may still have. Way better than stabbing it's user base in the back, and...		jerf
24031355	12.232262	-7.698697	comment	4.0	12.5	1596399441	10.410496	Is there a good reason to learn ReasonML instead of OCaml these days, or should I just learn OCaml + js_of_ocaml?I'm interested in building web apps, web servers, and simple WebSocket servers. OCaml a...		modernerd
24031625	12.006319	-7.670468	comment	4.0	16.0	1596401425	-10.437793	For one Lisp is not lazy like Haskell.		layoutIfNeeded
24032825	11.8406725	-7.5144477	comment	4.0	12.0	1596412607	10.044852	"Uh guys?    [1]> (remove-if-not #'evenp `(1 2 3 4 5 6 7 8 9 10) :count 3 :start 1)
    (1 2 4 6 8 9 10)

As pointed out by owl57, the Haskell translation is incorrect and the correct implementation is..."		dllthomas
24067719	11.634147	-7.882105	comment	4.0	15.5	1596682361	10.131835	Oh god no, this draft is actually pretty good, don't ruin it by infecting it with context. Context is the worst library in Go: it's a pile of hacks to get cancellation and goroutine-local storage by m...		infogulch
24099204	11.927031	-7.702824	comment	4.0	11.5	1596976722	10.397234	It does look weird to the foreign eyes, because it looks nothing like what you may encounter in your life when learning a natural language or math. As a consequence, this notation cannot leverage any ...		jraph
24101186	11.920917	-7.66654	comment	4.0	12.0	1596994175	10.378268	"Standard, base Haskell admits the following definition:  let f lst = lst 
              & map normalize
              & filter (\x -> x > 0)
              & average

Which is barely different from you..."		johnday
24103854	11.960914	-7.7239823	comment	4.0	11.5	1597015936	10.418013	First a Haskell compiler and now this. My hometown is doing OK.		sambeau
24118409	11.645014	-7.947052	comment	4.0	13.0	1597135191	10.166214	"Didn't read the book but I had a looong look at all kinds of ""native"" Go Gui toolkits and have to say there is none ready for professional / commercial cross-platform GUI applications.The ""old"" framew..."		fileeditview
24121167	12.128778	-7.777795	comment	4.0	11.0	1597158938	10.400686	Can't all of this be sidestepped and just write standard (non-forked) OCaml and feed its bytecode through Js_of_ocaml https://ocsigen.org/js_of_ocaml/ ?That might not have the ultimate React integrati...		frou_dh
24135929	11.727318	-7.5021505	comment	4.0	20.5	1597261213	9.914434	Rule 5 seems to mirror one of my favorite insights from Alexander Stepanov:> In 1976, still back in the USSR, I got a very serious case of food poisoning from eating raw fish. While in the hospital, i...		lliamander
24152449	12.132685	-7.8745203	comment	4.0	17.0	1597371466	-3.1976333	Man everyone seems to be talking about category theory lately and I still have no idea what it is except some general sense in which different types of mathematical objects can operate on each other (...		Fishysoup
24158716	11.668524	-7.1176643	comment	4.0	15.0	1597416979	6.7380695	In Python, the only way to access members of the current object is by explicitly using self (which should really have been called this in line with other languages, but that's another matter). [0]This...		MaxBarraclough
24167934	12.022953	-7.800911	comment	4.0	11.0	1597488905	10.418968	"The article has the footnote> APL was the first language to use “monad” as a term. The popular FP meaning only appeared thirty years later.in its, to me odd, use of the word ""monad"". This is incorrect..."		gspr
24107005	12.260203	-7.55572	story	4.0	18.0	1597049442	1.8029168	Show HN: Kiel – Minimalist Kotlin DSL for RecyclerView.Adapter	https://github.com/ibrahimyilmaz/kiel	ibrahimyilmaz7
24180701	12.280884	-7.2925673	story	4.0	105.0	1597607813	6.929783	TruffleSqueak: Polyglot Programming with Squeak/Smalltalk and GraalVM	https://github.com/hpi-swa/trufflesqueak	fniephaus
24184805	11.799344	-7.52102	story	4.0	129.0	1597648852	10.401605	Idris 2 version 0.2.1	https://www.idris-lang.org/idris-2-version-021-released.html	thomasdziedzic
24196498	12.241596	-7.5187826	comment	4.0	15.5	1597740336	-11.362422	Kotlin really is good and definitely an improvement over Java, but in my experience (like ~1 year) the language itself makes writing unreadable code too easy; it also doesn't help that IDEs like Intel...		renke1
24197498	12.230167	-7.533123	comment	4.0	22.5	1597750755	-11.36187	Kotlin seems finally like a language designed by people who actually develop in it.OTOH Oracle people seem to always focus on the platform issues - green threads is the next big thing, but it doesn't ...		The_Colonel
24197563	12.239103	-7.594561	comment	4.0	12.5	1597751396	-11.382052	>Doesn’t go as FP as Scala (which is a plus for me)If anyone reading this thinks about using Kotlin and has more positive views towards FP, there's this project to bridge the gap somewhathttps://arrow-kt.io/		throwaway8941
24197639	12.105828	-7.517733	comment	4.0	16.5	1597752265	-11.380556	"Still lots of kotlin-features I don't see land in java soon.
My favorite is passing a lambda in brackets when it's the last argument to a function. Makes it easy to make semi-dsls and nice-looking cod..."		matsemann
24198798	12.233058	-7.5428095	comment	4.0	13.0	1597760126	-11.372413	Using Kotlin without IntelliJ tooling is a pain.		mey
24204975	11.700842	-7.3342147	comment	4.0	12.0	1597788851	-6.8309054	I program in Agda pretty often and community usually uses Unicode characters for most things, so I do too.The impl of AVL trees in stdlib: https://github.com/agda/agda-stdlib/blob/master/src/Data/Tre....		gnulinux
24205955	12.226626	-7.5795774	comment	4.0	11.0	1597797285	11.919324	There is a reason why many people (including me) perceive Java as relatively bad. The language paid a great deal of resources to keep backwards compatibility, which is definitely a thing. They couldn'...		valenterry
24226683	11.771721	-7.485103	comment	4.0	11.5	1597948072	10.372516	Just checked the code examples in a current Standard ML compiler, and they work without modification and behave as described. That's why you should choose Standard ML for your next project.Great examp...		cannam
24242571	12.492429	-7.04786	comment	4.0	12.5	1598083892	8.657182	A year ago, I research similar memory issues in Ruby. The established hypothesis in the community was that it was due to memory fragmentation. But I found that the largest culprit was actually the gli...		FooBarWidget
24272831	12.100913	-7.8714337	comment	4.0	13.0	1598371863	0.61073965	"I guess I might have some misconceptions of OCaml. Are there other companies that use it? I ask because whenever someone says ""OCaml is used in industry, for example, Jane Street"", they say it like it's just one example, but it's always Jane Street."		jkaptur
24319137	11.995786	-7.757954	comment	4.0	11.5	1598732363	10.37382	What you say is correct, but let me try and explain a little further. The Haskell function `getChar` is used to get a character from stdin. It has the type `IO Char` and is a totally, 100% pure. In fa...		anchpop
24332408	12.132845	-7.4975314	comment	4.0	11.0	1598887616	-10.588699	The only issue with F# is that it is a bit the black swan of Microsoft languages on .NET, so it doesn't get all the toys that C#, VB.NET and even C++/CLI get to play with.		pjmlp
24193405	12.119417	-7.4543457	story	4.0	4.0	1597706005	-10.616668	Ask HN: When in the key of F-Major would you use C# or Db in notation?		jacquesm
24209865	12.473273	-7.4994416	story	4.0	102.0	1597841738	12.9136715	Erlang: The New Scalable ETS Ordered_set	http://blog.erlang.org/the-new-scalable-ets-ordered_set/	codeadict
24354416	11.917937	-7.6587577	comment	4.0	13.5	1599061993	10.44834	In my experience, Monad, Applicable, and Monoid are probably the only ones I'd use in Haskell, and maybe none of them in languages without good inference and general support.Pretty wild ideas, though....		hawkice
24357393	12.207887	-7.273748	comment	4.0	14.5	1599077019	6.9928837	Who is this everyone?Everyone I know loves OOP.I am primarily a Ruby developer so I know I'm in a bit of a bubble but still... The title is pure click bait.		cooljacob204
24361636	11.934227	-7.3718667	comment	4.0	25.0	1599118369	7.048935	>That's not constructive, because experts also know there's a lot to learn from OO, and not everything about it is bad.Isn't this statement the same? You don't get into the details of who these expert...		leafboi
24373617	11.681016	-7.2655573	comment	4.0	14.0	1599215032	-8.761257	While true, if your language doesn’t support such a type, then the burden for such a name goes to the parameter, does it not?		jb1991
24375076	11.718709	-7.348015	comment	4.0	10.5	1599228782	-8.686077	Is there an example, in any language, showing how you would represent this at the type level? I can’t see how you would do it.		rco8786
24390470	11.873205	-7.083667	comment	4.0	33.5	1599389584	8.576147	Not really - Java designers were just plain wrong and it took forever to admit it - things like local type inference (var) made the language pointlessly verbose for ages, and simple features like lamb...		rubber_duck
24392045	12.147192	-7.018498	comment	4.0	13.5	1599406479	-10.356772	"> local type inference (var) made the language pointlessly verbose for agesI guess that this is a question of taste.What for you is ""less verbose"" for me is more confusing to read. I like to see the t..."		Hokusai
24398001	12.196579	-7.6014266	comment	4.0	11.0	1599470413	11.899774	Scala is probably the most expressive statically typed language around, so I personally wouldn't feel bummed about having to use it. Java on the other hand...		smabie
24400943	12.154279	-7.5442243	comment	4.0	11.5	1599499500	-11.38803	Kotlin has a nice convention with named and variable arguments. If the types are all different, it's not ambiguous and the compiler can figure it out, but you're free to name them at the call site any...		imglorp
19975783	11.620938	-7.0483656	comment	4.0	11.0	1558477734	8.969171	I disagree with only one thing in this article. Frozenset is super useful. You should prefer frozenset over set by default imo. Immutable objects are safer to work with, often easier to work with (fro...		joshuamorton
19979751	11.648528	-7.9191113	comment	4.0	12.0	1558521907	10.212935	> Go does not have generic arrays any more than C does.Go does have generic collections, and generic functions operating on these collections.> You cannot e.g. write a generic Go function to reverse a...		masklinn
19981169	12.284289	-7.4584684	comment	4.0	24.0	1558533288	-10.576476	F# is a joy to use. After a certain time, many C# developers find themselves writing in a functional style. F# makes this the default, but lets you continue using all of your existing code.Better yet,...		adgasf
19981335	12.217964	-7.598105	comment	4.0	11.5	1558534192	11.866303	I find this to be an interesting cultural phenomenon, this thing where people in .NET-land are skittish about F# because it's not so tightly controlled by Microsoft.Meanwhile, I'm pretty sure nobody even wants Oracle to be getting involved in Kotlin or Scala or Clojure.		bunderbunder
19981368	11.949626	-7.6747026	comment	4.0	12.5	1558534369	10.387893	I used to be a big Haskell programmer. While I still love the language, I've really come around to the idea that strictly evaluated functional languages like F# or OCaml are the best for programming i...		danite
19981244	12.143879	-7.5123386	comment	4.0	20.5	1558533715	-10.613179	The problem is F# doesn't get enough resources internally at Microsoft.  How many times has VS shipped missing the latest version of F# tools?  In terms of community, it's tiny.  If I want to do funct...		GiorgioG
19986842	11.924388	-7.3899665	comment	4.0	10.5	1558568830	7.0117593	I've been seeing this meme recently that object-oriented programming is not what we think it is, but rather that it's some other ethereal quality which does not exist as a paradigm in modern languages...		msvan
19992360	11.968211	-7.4128523	comment	4.0	11.0	1558623571	-6.142164	As a rule of thumb: anything done in a pure-functional/immutable style is probably going to take a performance hit. This tradeoff is often worth it for maintainability, especially if you're using true...		_bxg1
19992476	11.789727	-7.307719	comment	4.0	15.0	1558624313	-6.1390667	> If you're still doing mutable programming for some god-forsaken reasonWhat is mutable programming? Using mutable objects is something I do everyday. Am I doing things wrong?		PerfectElement
20004064	11.799975	-7.7714767	comment	4.0	17.0	1558722400	12.777743	"Is this complete note? You didn't mention what you end up using.Is it golang or pony or F$?
CoreFX mention in the end confused me more."		w3clan
20018435	11.9657	-7.7703724	comment	4.0	14.0	1558915032	10.44052	hledger looks pretty amazing, but there are so many dependencies and updates with Haskell programs. Almost every other day I'm updating like 20 Haskell packages for hledger or pandoc when I run a system update. It isn't inherently bad, but never had this issue with a C or Go program.		techntoke
20023112	12.194683	-7.3390393	comment	4.0	18.5	1558973216	7.0767198	I’m always amused that this is called a magazine. At least this particular issue. It’s nearly 500 pages long!!My favorite chapter in the tome is the one by Peter Deutsch on control structures. Starts ...		travisgriggs
20023746	12.295546	-7.2635913	comment	4.0	13.0	1558977864	12.405931	In Smalltalk, blocks are actual objects in the system like everything else. You can send messages to them (I don't think Ruby allows this). In fact, that's the only way to get something out of a block...		scroot
20032499	11.783411	-7.3632565	comment	4.0	14.5	1559065566	9.27897	A bit off-topic: Is there any theoretical reason you need async / await syntax at all?(It's certainly desirable for performance and compatibility to avoid making all subroutines into coroutines, so I ...		ben509
20045748	12.209374	-7.564374	comment	4.0	13.5	1559165552	11.9314575	This has been my testbed project for learning Scala, I also learned a lot about audio analysis, signal processing, fourier transforms etc. There were already Python bindings for the original C++ libra...		mgdigital
20066399	11.985361	-7.7321177	comment	4.0	10.5	1559350524	10.443403	“Quite readable” is a stretch... I know of no other language that needs a hoogle equivalent.That being said, my experience with Haskell is limited to working on some meta-meta-programming research in college, where every file used at minimum 3 different GHC extensions. So I may be biased.		jakear
20074381	12.034273	-7.031307	comment	4.0	15.0	1559467268	8.12817	This is salient too though:The new Java-based implementation has improved performance significantly, and made Storm's internal APIs more maintainable and extensible.It's not totally clear if this is b...		dleavitt
20074431	12.228996	-7.5494604	comment	4.0	22.0	1559468110	-11.394801	Syntactic sugar does not solve programming problems. Kotlin does not offer any paradigm changes which could make switch worth it.		ivan_gammel
20074459	12.137857	-7.4771323	comment	4.0	13.5	1559468650	-11.384227	The only Kotlin feature that it's really hard to live without is properties. Otherwise sure, it's better than Java 11, but I can live without all those niceties. And (non)nullable types even get in my...		vbezhenar
20075676	12.34949	-7.0613303	comment	4.0	14.0	1559485917	13.189252	Every time I see something about Perl 6 I think this is awesome. Shame that a younger generation of programmers will never use it, because it’s not the new cool.If they renamed Perl 6 into something c...		harryf
20075691	11.662232	-7.096794	comment	4.0	16.0	1559486117	9.019551	At my current project we try to do everything as functional as possible (we're backend developers using node).After a year or so of trial and error, we have pretty much stopped using reduce. The reaso...		kace91
20075722	11.814528	-7.0520983	comment	4.0	18.5	1559486456	9.024106	"This sample    function keyByUsernameReducer(acc, person) {
      return {...acc, [person.username]: person};
    }
    const peopleObj = peopleArr.reduce(keyByUsernameReducer,   {});

has O(n*n) comp..."		c-smile
20107280	11.833842	-7.308648	comment	4.0	14.5	1559757640	-8.894849	Ruby's community has an obsessive culture towards unit testing, that could impact bug levels.Like Smalltalk, they're forced to do this to catch the errors that would've been caught by type annotation....		stcredzero
20111278	11.972138	-7.744721	comment	4.0	16.0	1559791128	10.421269	> One of the main reasons I don't care much about Haskell is because without any side-by-side comparisons of Haskell vs <insert procedural language> I don't understand what the Haskell advantages are,...		hardwaresofton
20110631	11.991351	-7.747079	comment	4.0	27.5	1559782988	10.416392	It's 100% the difficulty. Anyone saying otherwise is lying because they want Haskell to be popular, adopted it very early on in their career when they could really invest in it, or is a natural at thi...		dmix
20152246	12.118853	-7.8666573	comment	4.0	11.0	1560214401	-3.1925232	I've been saying for a few years that design patterns are algebras seen dimly. People have asked me for references for that, and I haven't had anything to point them to. At this point I would modify i...		madhadron
20152576	12.029785	-7.7386303	comment	4.0	10.5	1560219439	10.35875	Can you expand on the connection between linq and monads? I have a friend that's a long time .net developer and I've been trying to explain some of the benefits of FP, but we lack a common language to discuss the concepts. Also, doesn't the lack of higher kinded types preclude use of monads in c#?		pault
20154044	12.245982	-7.6337457	comment	4.0	10.5	1560246755	11.9937525	I heard that some are fearmongering that Scala 3 will be as big of the change like Perl 6 and as a result no one will ever use it. I'm not familiar with dotty but somehow it doesn't make sense that Scala core devs would be stupid enough to repeat the same mistakes that Perl did.		type0
20154193	12.221226	-7.632875	comment	4.0	16.0	1560248501	11.947407	I used Scala five-ish years ago, and I loved it, but I had two qualms:1. The community was terribly split between FP purists who wanted to write Haskell on the JVM and pragmatists who leaned more towa...		skrebbel
20155900	12.003681	-7.3340974	comment	4.0	10.5	1560264503	-11.049555	This is my engineering org's philosophy as well.  New engineers who have a java background tend to have some difficulty getting used to it, but all it takes is a light switch in their head.For example...		rockostrich
20160474	12.263717	-7.646697	comment	4.0	13.0	1560296024	11.93078	Scala: Python + dataclasses [+ mypy] offers a programming experience close to pragmatic Scala. The tradeoff becomes:* worse performance* lack of immutable vectors, alleviated via style conventions* ra...		pacala
20169109	11.602963	-7.92916	comment	4.0	18.0	1560372316	10.223325	This article is from 2016, but it's still relevant. Even in medium sized projects I've been bitten by many of these issues, and for a language that's supposed to eschew magic, there's an awful lot of ...		kstenerud
20170947	11.651745	-7.9741955	comment	4.0	12.5	1560387555	10.243787	I created a new language [0] that is very similar to Go, but it fixes many things people often complain about, including all of the points in this article (except #2, but I don't think it's a drawback...		amedvednikov
20171301	11.6511	-7.965137	comment	4.0	10.5	1560392182	10.2169485	These complaints are usually by people who have not been using modern Java, or who have just been reading or hearing unsubstantiated claims about it. Or who haven't worked in large golang projects to ...		apta
20192086	11.644562	-7.9725738	comment	4.0	13.5	1560632085	10.206363	> Deprecated?Yes. In 1994, you would `latex document` and then `dvips document` to get your document.ps. Then in the 00s almost everyone would use `pdflatex document`. And these days, pdflatex is going out of fashion, but I am unsure what the current to go tool is.		sampo
20192815	11.91077	-7.612615	comment	4.0	26.5	1560640847	10.416171	> I think the smaller differences are also large enough to rule out extraordinary claims, like the ones I’ve read that say writing a compiler in Haskell takes less than half the code of C++ by virtue ...		jpittis
20192826	11.957541	-7.717973	comment	4.0	10.5	1560641125	10.422576	I don't think monadic parser libraries have a real claim to be that difference. All the languages listed have excellent parsing libraries that make things similarly easy, if not by language power than...		trishume
20193330	12.205418	-7.6044946	comment	4.0	16.0	1560649642	11.947544	One factor on why Python only saves 20%.Scala has a very rich standard library. Python doesn't. An example is: https://stackoverflow.com/questions/363944/python-idiom-to-r...Ruby would have been a bet...		tanin
20194568	11.954727	-7.716515	comment	4.0	20.5	1560674976	10.456802	It's about as esoteric as somebody learning C++ for the first time. And from that perspective, it's totally normal for errors or syntax to be weird looking for a long time.Most of us, including myself...		dymk
20211392	11.679382	-7.965235	comment	4.0	31.5	1560853519	10.265365	I would argue that Go's opinionated style is what makes it elegant. It's a programming language for people who are sick of programming languages. It makes clear promises and delivers on exactly those - it belongs in new code for that reason.		neilalexander
20211523	11.647531	-7.9558387	comment	4.0	18.0	1560854723	10.25915	Go has been carefully designed to solve the problems of today. But relying on solving those problems at the language level means I have very low confidence that the language can adapt to solve the pro...		lmm
20211786	12.455621	-7.1018157	comment	4.0	11.5	1560857142	-5.8585258	What are some language contenders for business logic?		walterbell
20212250	11.6989355	-7.8810787	comment	4.0	16.0	1560860821	10.226452	At my current job, most of the backend code is divided in two separate groups. One uses Java while another is built with Go. Both have teams have very good reasons to choose what they did and both lan...		owaislone
20217586	12.196516	-7.3288274	comment	4.0	12.0	1560887191	7.1225486	And still I haven't seen any language more Object-Oriented than SmallTalk. Sure, Python, C++, Java, etc. support OO to some level. But in SmallTalk everything literally is an object, which means you c...		behnamoh
20220726	12.476277	-7.481038	comment	4.0	12.5	1560917351	12.932097	Any initiative like this (language on top of the Erlang VM) with static typing out-of-the-box?I really want to love Elixir but dynamic typing is a NO for me.		ggregoire
20222076	11.600897	-7.3108716	comment	4.0	13.5	1560938646	7.108554	"i really don't see how    AlgorithmClass().WithXValue(10.0)
                    .WithYValue(20.0)
                    .WithEtc(...)
                    .Run();

is any better than    Algorithm(x=10.0,..."		keymone
20222622	11.914466	-7.467131	comment	4.0	10.5	1560947085	7.2699995	Readable functional programming imo really hinges on some essential basic language primitives. Those are sum types, pattern matching, and restricting mutability.Forcing sum types onto a language that ...		the_duke
20224097	11.637989	-7.5681796	comment	4.0	12.0	1560957428	-6.4061475	"Haskell's Either isn't intended to be used solely as Left = Err and Right = Ok. It's supposed to work as an abstract concept of ""one thing or another"", and the language designers have avoided choices ..."		lalaithion
20228583	11.918096	-7.721782	comment	4.0	10.5	1560989034	10.336613	He means Haskell-grade types (float->float is not a function touching the IO monad). It wouldn't help in any mainstream language with actual types (like C++).		H8crilA
20237879	12.501905	-7.1273146	comment	4.0	20.5	1561068458	-1.9491793	I think about this a lot, as someone who loves Ruby and loves Rust. I think it’s because we do a bad job of looking at the total costs. It feels like you can knock something out really quickly in Ruby...		steveklabnik
20238490	12.303805	-7.184084	comment	4.0	14.5	1561073351	12.396065	> There are a lot of things that make Go slower to write than Ruby, but mandatory typing isn't one of them. Rather, Ruby's total lack of typing makes it harder to write: you effectively end up having ...		dragonwriter
20243048	11.776294	-7.0471506	comment	4.0	16.0	1561129146	-10.539406	This has nothing to do with casts or defaults. Map passes multiple parameters and parseInt accepts multiple parameters. Being unaware of the functions you're using is the problem, not some sort of wei...		bastawhiz
20256089	11.909134	-7.680542	comment	4.0	17.0	1561302863	10.38609	> lazy I/O which can introduce horrible bugs or straight up mess with execution order of critical codeI've never seriously programmed Haskell, so honest question: I understand the first point, but how...		nothrabannosir
20257097	11.6025505	-7.3256726	comment	4.0	19.0	1561310541	10.204187	Given the laziness, you'd think memoizing an arbitrary pure function would be easy in Haskell - at least as easy as Python, where you can do it with a one line decorator.But no, it's pretty complicate...		klipt
20260151	12.001352	-7.748023	comment	4.0	15.5	1561345660	10.441811	Try using nix instead. Aside from being a fantastic package manager for many languages it’s a godsend for Haskell. The lengthy compilation times with Haskell are one of the not so wonderful parts of t...		thinkpad20
20269163	11.77478	-7.309357	comment	4.0	19.0	1561415081	-8.895105	The thing is, nowadays, statically typed languages became so ergonomic, there is really no reason to go with dynamic languages.		zerr
20280911	11.684072	-7.384001	comment	4.0	11.5	1561510606	-8.443903	I'm not the person you're replying to, but my guess is that their example was an attempt to raise the same question that I have: how do we know the values (?) of the a-type and b-type variables weren'...		md224
20280460	11.8622265	-7.3292766	comment	4.0	10.5	1561506417	-10.184319	f(+’,1,2) = “cookie”For one.Now tell me: are types the best documentation?		wellpast
20282665	12.338524	-7.0406566	comment	4.0	14.5	1561534579	13.171039	Surprising?1) The Perl 5 community itself was dwindling before Perl 6.2) Perl 6 took a good chunk of time to arrive.3) It's still not 100% baked.4) Perl 6 is mostly a different language.5) Perl in gen...		coldtea
20287883	11.597544	-7.9108763	comment	4.0	10.5	1561574413	10.287923	The proposal for `try` made my eyes bleed. It combines a number of features from metaprogramming and generic types but in a hard-coded manner and doing a number of assumptions about functions signatur...		ameixaseca
20299614	11.753847	-7.370019	comment	4.0	14.5	1561675354	-8.785486	Is the problem really type inference? If it really was, you'd have to disallow chaining method calls, or using method calls inline as parameters to other methods. Every intermediate value would need t...		chowells
20313061	12.104906	-7.785996	comment	4.0	21.0	1561821654	10.380947	>  It's written in an unusual programming language called OCaml, and in a fairly idiosyncratic dialect of it at that. This is of course no problem for a proof of concept meant to support a Ph.D thesis...		Shoop
20304851	12.506875	-7.0652184	story	4.0	2.0	1561733466	12.414395	Ask HN: Why Ruby doesn’t know how to do maths?		ajimix
20320951	11.873854	-7.4109287	comment	4.0	15.5	1561933366	7.145078	Inheritance makes some sense, but composition is much, much easier to understand and work with. Inheritance has well documented problems that composition does not. It’s not so much about being object ...		jchw
20322698	11.949506	-7.399499	comment	4.0	12.5	1561959235	6.9533224	"Unpopular answer to the unpopular answer: OOP was pure fashion.. “Our customers wanted OO prolog so we made OO prolog” ..  http://harmful.cat-v.org/software/OO_programming/why_oo_suck..... screw things up with any idiotic ""object model"" crap. .. http://harmful.cat-v.org/software/c++/linus"		chkas
20322942	11.874354	-7.579023	comment	4.0	22.0	1561962897	10.294439	Honestly you can nearly write Haskell without specifying type signatures. GHC is very sophisticated. I feel like there have only been a few situations where I actually needed to specify the type. Real...		foxes
20324509	11.840336	-7.61249	comment	4.0	14.5	1561983222	-8.623745	"> The Haskellite approach would also say that ""what operations are available on that thing"" is the wrong way round; you define your operation, and the type signature tells you what kind of things will..."		gridlockd
20332814	11.79924	-7.3947654	comment	4.0	13.5	1562050692	9.210191	"What is called continuations in Java is available as ""coroutines"" in Kotlin, today. Both terms means more or less the same, from a programmers point of view, actually Continuations are part of Kotlins coroutines.https://kotlinlang.org/docs/reference/coroutines-overview.ht..."		cryptos
20334209	11.646889	-7.9221163	comment	4.0	16.5	1562069228	10.226762	Go is a compiled language and Ruby/Python are interpreted scripting languages. There are domains where it's a much more appropriate choice (distributing binaries, performance sensitive code). The type...		malvosenior
20334553	11.681819	-7.8938193	comment	4.0	10.5	1562072512	10.2105875	> Go and Python are also pretty related for command line apps too. You could totally use either one to build a CLI tool.Distribution of Go CLI apps is much easier as you don't need to have your end users install the 3rd party libraries themselves.		malvosenior
20357414	12.496037	-7.4473705	comment	4.0	15.0	1562271361	12.902849	Has anyone who previously preferred static typing converted (at least for certain projects) to using Elixir? I won't even put plain Node into production anymore, TypeScript at the minimum, but otherwise OCaml or Go.		spraak
20366615	11.901062	-7.3310714	comment	4.0	11.0	1562368057	7.01812	"""Object-oriented programming offers a sustainable way to write spaghetti code. It lets you accrete programs as a series of patches. Large organizations always tend to develop software this way, and I ..."		chmaynard
20369179	11.613012	-7.1493063	comment	4.0	14.0	1562413699	9.08652	As someone who was introduced to programming via map/filter/reduce, for loops are incredibly more complicated.I don’t think I’ve ever written one correctly on first try.		akavi
20375405	11.653507	-7.917658	comment	4.0	18.5	1562511578	10.152529	Go's not existent standard library is almost a deal breaker for me.The lack of even a dynamic array (c++ vector, Java arraylist) means you write a lot of 2-3 lines of slice notation phrases that requi...		jnordwick
20376808	12.150425	-7.887951	comment	4.0	11.5	1562524356	-3.2266073	There is up to $1.5M USD available for start-ups who want to solve business problems with category theory: https://conexus.ai/ventures and there is an open-source implementation of the data migration sketch from that book here: http://categoricaldata.net		wisnesky
20377297	11.662111	-7.690401	comment	4.0	14.5	1562528496	10.138665	If the generics are $25, then I don't see a problem.  It's cheaply available and this article is wrong.		lostmymind66
20377627	12.068645	-7.7596335	comment	4.0	10.5	1562531332	-3.2355828	The thing is, Category Theory and the practice of programming are too far apart. To create a reasonable application of some notion of CT in software development, the notion must be first thoroughly di...		Koshkin
20380239	11.966619	-7.719136	comment	4.0	11.5	1562565776	10.0517235	I agree that to an inexperienced reader, most of your points would be valid. The downside is, it would be too verbose (imagine defining what big R is, for example). It being too verbose would stray aw...		kidintech
20386579	11.9998	-7.5161805	comment	4.0	17.0	1562618666	7.2750926	"Functional programming has too long of a learning curve to the average programmer. A language should be judged by how long it takes average programmers to become proficient in it, not the ""Sheldon Coo..."		tabtab
20433891	11.695749	-7.2772675	comment	4.0	16.5	1563117753	1.5695351	Came across this just when I was looking to deep dive into calculus, typed lambda calculus, differentiation, etc. I somehow have a hunch learning these, will help me down my road on language design an...		lewisjoe
20434239	11.740299	-7.320457	comment	4.0	13.0	1563121126	-8.817737	Oh, I have this bad habit of going down the rabbit hole of fundamentals if I feel I lack the basics of a concept. While I still haven't grasped the need for calculus in language design, I've come acro...		lewisjoe
20436505	11.630402	-7.087413	comment	4.0	11.0	1563142173	9.120492	">The list seems rather arbitraryAs opposed to what list? An exhaustive one? The quality he asks of the languages in the list is ""interesting"", which is by definition rather arbitrary itself."		coldtea
20441231	11.79877	-7.0392737	comment	4.0	11.0	1563201539	-7.316355	"Functional programming is the answer. In python the answer is just this:  def action(thing)
      ...

  map(action, array_of_things)

I'm sure there's some similar solution in Javascript."		rthomas6
20449179	11.963813	-7.582115	comment	4.0	14.5	1563277735	10.25682	I would say the main competitive advantage of using functional programming, or Haskell in this case, is that it's a relatively inexpensive benefit you can offer to employees (the cost is in rolling yo...		opportune
20357605	11.623448	-7.959175	story	4.0	92.0	1562272792	10.252027	Gokrazy: a pure-Go userland for Raspberry Pi 3 appliances	https://gokrazy.org	panic
20456470	12.035922	-7.036758	comment	4.0	13.0	1563337902	8.095763	pg has a blind spot wrt Java.  Lots of hackers liked (and still like) Java ecosystem (see Kotlin for more recent fun). like lisp hackers, they hung out on their own and didn't mingle.		parasubvert
20457125	12.138804	-7.533902	comment	4.0	16.5	1563346242	-10.602924	Kinda wish they had gone with F#. Would've been less work for them to write nice functional wrappers around existing .NET libraries.Of course, you can't get funding for something that unambitious, so ...		krapht
20463912	11.5984745	-7.0471907	comment	4.0	11.0	1563396925	-10.45027	The walrus operator does not feel like Python to me.  I'm not a big fan of these types of one liner statements where one line is doing more than one thing.It violates the philosophies of Python and UN...		jasonrhaas
20466822	12.251863	-7.568152	comment	4.0	13.0	1563425654	-11.375058	I disagree this python version is as readable and here’s why. It’s about as many characters but more complex. The Kotlin version performs several distinct actions, each being clear to its purpose. The...		elcritch
20495949	11.710548	-7.85215	comment	4.0	10.5	1563780597	10.208689	I'm a backend developer who uses Java an GoLang regularly to write back end systems - APIs, workflows, infrastructure, deployment pipelines, etc.I don't have any knowledge about AI or how to model pro...		distdev89
20545688	12.4676285	-7.5719123	comment	4.0	10.5	1564284532	-3.8985326	It compiles to Erlang too. The language itself is extremely similar to Haskell but with some refinements around some of the legacy baggage Haskell suffers from (string handling for example). Some diff...		tmountain
20557418	11.661264	-7.3971753	comment	4.0	13.5	1564423291	10.029611	This is because interfaces and contracts are conceptually similar. They both give you a way to abstract over a concrete implementation of some set of operations. That in turn lets you use multiple dif...		munificent
20563638	11.6496725	-7.2013364	comment	4.0	12.5	1564483994	9.037079	"> for(let e of arr) e = bIs that just  arr.map( e => b )

?"		jacobwilliamroy
20577553	11.664229	-7.623105	comment	4.0	11.5	1564601876	10.068042	but what is the benefit? How does your code change. Generics are a tail abstraction. Its the last abstraction that you are able to make to your code to reduce boilerplate. This usually means that is t...		freetobesmart
20577806	11.765314	-7.3923993	comment	4.0	11.5	1564603099	9.550412	I'm a little surprised the word 'mixin' appears nowhere in that article.Josh Bloch argued against the interface solution in Java (and in particular, read-only versus read-write interfaces), claiming t...		hinkley
20577962	11.656046	-7.9268017	comment	4.0	10.5	1564603885	10.227671	It might be fun to share my viewpoint from an angle that's probably fairly unique.I've started a number of large, highly deployed Go projects: Terraform, Vault, Packer, Consul, Nomad, and numerous lib...		mitchellh
20578476	11.666051	-7.604075	comment	4.0	11.0	1564606759	10.105205	> Generics are awesome, but always seem to add a ton of complexityThe team I work in use generics all the time and I'm not sure what complexity you are referring to. Care to elaborate? Is it some edge...		Nevermindmine
20578502	11.652347	-7.9289193	comment	4.0	12.0	1564606888	10.241529	What is your point? Serious question.If you tell me, for example, that Go generics are going to be like C# generics, then I have to be familiar with the full semantics of C# generics. Essentially you ...		shaded-enmity
20578920	12.028711	-7.555278	comment	4.0	14.0	1564609790	11.898049	It comes up in Scala. The solution is to have notation to specify the variance of types.		justinhj
20580116	11.659661	-7.946182	comment	4.0	15.0	1564619373	10.21959	"This is confusingly phrased. Do you mean ""If Go people were ever shown ... ML""? I would totally drop Go for an ML language if any of them had a sane syntax, usable build tooling (including native, sta..."		weberc2
20588277	12.131987	-7.830662	comment	4.0	10.5	1564693000	-3.1987026	Interesting that they opted for a relational rather than a categorical one; the latter is proving to be more flexible [0].[0] https://www.categoricaldata.net/		agentultra
20533965	11.770562	-7.277221	story	4.0	82.0	1564140856	5.9936395	OOP Before OOP with Simula	https://twobithistory.org/2019/01/31/simula.html	bibyte
20568489	11.94927	-7.430197	story	4.0	11.0	1564516466	7.1529336	What makes Functional and OO programming equal	http://codinghelmet.com/articles/what-makes-functional-and-object-oriented-programming-equal	bkovacev
20611903	12.024162	-7.8053794	comment	4.0	12.5	1564988464	10.416307	That's a pretty good explanation, thanks. Along with the monads in Clojure [0] article I read recently, I feel I'm getting a decent grasp on monads finally.Now they're beginning to click, I don't feel...		widdershins
20632765	11.825295	-7.5894127	comment	4.0	13.5	1565164601	2.8375385	"Thanks. The only lemma in that repo is the following (in Cat.ard):    \lemma op_is_revertible (C : PreCat) : op (op C) = C =>
      path ( \lam i => \new PreCat {
        | Ob => C.Ob
        | Hom =>..."		tom_mellior
20633112	11.609516	-7.9087095	comment	4.0	20.0	1565169928	10.233671	One thing which was not immediately obvious to me for a while: the stricter your language’s formatting is, the easier it will be to grep source code.I work a lot with Go, where all code in our reposit...		secure
20655552	11.804086	-7.5366855	comment	4.0	14.5	1565366381	10.3429785	"Ouch. That function is actually written in a pretty convoluted and redundant way.    getSocketAPIPort :: Int -> IO Int
    getSocketAPIPort defaultPort = do
        maybeEnvPort <- lookupEnv ""socketPo..."		chowells
20674964	11.614623	-7.3217244	comment	4.0	16.5	1565614461	-8.722036	> Programming in the large without type safety is a fool’s errand.Programming in the large without tests is a fool's errand. Type systems don't guarantee correctness.		Cpoll
20676132	11.747757	-7.126798	comment	4.0	25.0	1565622801	-8.937444	Your 2nd error isn't possible in Python, so I'm not sure what you did there. Regarding the first, sure, it is a bug that was annoying to catch. But, having an `Iterable` interface in Python is also re...		_coveredInBees
20676242	11.685316	-7.0589147	comment	4.0	19.0	1565623501	-8.945748	"I didn't explain the second one well.  Here's some exact code.  group_keys = ...
  if not isinstance(group_keys, list):
    groups_keys = [ group_keys ]

So rather than listifying the non-list variabl..."		CydeWeys
20676446	11.862902	-7.0859923	comment	4.0	14.5	1565624543	9.1025	True, but at least there is no magic in using callbacks. It is clear what is going on.		baby
20697544	11.69943	-7.2578287	comment	4.0	12.5	1565802355	-8.709901	"Stupid question, why is it often written ""_the_ lambda calculus"" and not just ""lambda calculus"""		leshow
20698220	11.745394	-7.340043	comment	4.0	15.0	1565805832	-9.448727	Modern lisps do realize the lambda calculus, but this was not immediate. In particular, in order to exactly match the lambda-calculus beta-reduction rule, you need to use lexical rather than dynamic scope, which did not really become popular until Scheme in the 1970s.		vilhelm_s
20704784	12.224889	-7.040638	comment	4.0	11.0	1565874300	13.163435	"only tangentially related, but one of the things I miss so much about Perl is that, as in English, you can add an ""if"" or ""unless"" clause as an afterthought.$x++ if (!condition);like if you start to i..."		logicallee
20713038	11.867699	-7.5916615	comment	4.0	14.5	1565942247	10.352301	I wouldn't disagree that dependent types are great for certain specialised problem domains, but they've already been around for ages and didn't yet revolutionise the world of software design. I think ...		wbhart
20720761	11.840922	-7.3203797	comment	4.0	14.5	1565999015	9.21825	"async/await are coroutines and continuations (bear with me).Here is synchronous code:    result = server.getStuff()
    print(result)

Here is synchronous code, that tries to be asynchronous:    serve..."		cheez
20667294	12.002857	-7.74839	story	4.0	24.0	1565516267	10.426425	Learning Python and Haskell has not improved my programming (2006)	https://lukeplant.me.uk/blog/posts/why-learning-haskell-python-makes-you-a-worse-programmer/	molteanu
20743129	12.254069	-7.6373825	comment	4.0	13.5	1566264379	11.958348	I briefly looked at Scala 9 years ago.Where does one begin these days?  My books are outdated?Someone mentioned looking at Cats:https://typelevel.org/cats/		melling
20745049	12.229596	-7.5821986	comment	4.0	11.5	1566292956	11.890445	"I personally believe that people who bring functional programming into commercial settings are wrong to do so.  There's a real trend lately to go ""big"" and ""functional"", but know that it causes actual..."		anon9001
20765831	11.707423	-7.219839	comment	4.0	22.5	1566462071	9.111586	I have never understood the benefits of making syntactic sugar for lists in languages having higher order functions. Python kind-of gets away with it, but I still don't get the benefits compared to using map and filter.		pyrale
20771588	12.1116	-7.8617334	comment	4.0	19.0	1566502397	-3.1657975	I'm starting to study category theory and I'm realizing if there exists a formal theory around 'design' and 'abstraction' category theory is it.I could be wrong though. What do you guys think?		crimsonalucard
20782156	11.887917	-7.270812	comment	4.0	11.5	1566591526	7.094629	That is the concept of OOP - that you package together the data (state) and the functions that can operate on that data.		AnimalMuppet
20782921	11.944926	-7.426665	comment	4.0	12.5	1566596484	7.149336	yes, but it's also much easier to write a good OOP code... learning curve is way steeper for functional programming, OOP is easier to grasp as it's closer to how we usually think of the world, while FP is more math like...		ivanhoe
20789225	11.694357	-7.386139	comment	4.0	10.5	1566675353	-8.911757	Of course you can invoke a type checker inside a language with compile time macros. Did anyone ever doubt that?The interesting question is: what does that type checker actually check? How does it deal...		choeger
20829711	12.344312	-7.0255365	comment	4.0	16.0	1567088439	13.22626	> but also that it had some limitations that have only become more glaring over the years.I don't have any real experience with Perl, so could you maybe expand a little? I'm curious about what you think the limitations are.		CogitoCogito
20832589	12.315702	-7.026985	comment	4.0	10.5	1567105686	13.197063	> Perl 6 performance has now gotten to the point where it's often comparable to Perl 5 or surpasses it. It still needs some work in this area, but the work is clear, the goals are straightforward, and...		nneonneo
20876341	12.464785	-7.3701124	comment	4.0	12.5	1567599133	10.255818	I'm building a project in ReasonML right now with reason-react.  The Reason-only parts are actually a joy. The problem is interop with the wider ecosystem, and bucklescript.They are serious problems. ...		pkilgore
20745514	11.653174	-7.070521	story	4.0	31.0	1566298912	9.132167	List comprehensions across languages (2007)	http://langexplr.blogspot.com/2007/02/list-comprehensions-across-languages_18.html	tosh
20755722	12.128119	-7.864033	story	4.0	108.0	1566379897	-3.9319084	Linguistics Using Category Theory (2018)	https://golem.ph.utexas.edu/category/2018/02/linguistics_using_category_the.html	jesuslop
20763955	11.654883	-7.971257	story	4.0	6.0	1566439339	10.236532	Ask HN: Best example codebases written in Go		igolden
20877262	12.397658	-7.075133	comment	4.0	10.5	1567605630	-10.468279	I’m not a fan of TypeScript, and never heard of Reason, but this post makes me like TypeScript more. I prefer the fact it’s more explicit and less magic.The examples in TS are very easy to understand ...		philliphaydon
20879490	12.052064	-7.8173475	comment	4.0	10.5	1567618532	10.453107	This theorem seems to be like monads: Someone posts about it on the internet, someone doesn't understand and asks for help, someone comes along and writes a simple explanation that seems to make sense...		bulatb
20899132	12.068365	-7.499619	comment	4.0	13.0	1567798756	10.470796	"> I did a Haskell short course late last year and I challenged the main instructor. I told him ""this is all well and good, but I bet I can still make useful software using my practical languages faste..."		AnimalMuppet
20907487	12.003362	-7.0750837	comment	4.0	12.5	1567900062	-9.388215	How is python's added typing compared to TypeScript? Is it expressive enough to completely supplant traditional Python or is it just something you add in sometimes to help out a little?		Waterluvian
20909007	11.944101	-7.608375	comment	4.0	11.5	1567925451	10.292741	> Haskell’s core principles, like purity and isolation of side-effects, [are] understood and appreciated by more today than ever beforeIf I were to summarize what I think are the most important ideas ...		oddity
20909653	11.99029	-7.7450156	comment	4.0	16.5	1567938642	10.438023	Unbalanced post because it doesn't address evidence against Haskell. For example:- Performance is lower than most systems programming languages.- Performance is also more difficult to reason about.- I...		amelius
20912833	12.255858	-7.6265063	comment	4.0	15.5	1567971185	11.906823	Besides Spark, is there still a niche that Scala fills? Why wouldn’t you just use Kotlin or Java 11? I guess I should ask the inverse question too: why wouldn’t you just use Scala for everything?		jxi
20913047	12.248656	-7.622109	comment	4.0	11.5	1567973025	-11.4443245	We are a scala shop as well, but more and more things are being built in Kotlin. I love scala but the lack of a future is downhearting.		joneholland
20913242	12.238053	-7.5967073	comment	4.0	12.0	1567974834	11.944839	Scala is significantly more powerful than both Kotlin or Java 11. Why would you want to use either instead of Scala?		mruts
20944310	12.3756275	-7.4438033	comment	4.0	23.0	1568233714	12.83732	BEAM is such an awesome and beautiful VM. Not only is concurrency at a scale unimaginable in other languages the norm for BEAM, but the isolation of running processes didn't hit me until I asked an El...		mikece
20950789	11.793377	-7.1654606	comment	4.0	17.5	1568292433	5.564913	"For what it's worth, Python is a strongly typed language[0] and is what the manual calls ""multi-paradigm,"" i.e. you can write purely functionally in it[1] all you want, though it is a fair point to ob..."		johnfactorial
20977538	11.620435	-7.9634967	comment	4.0	10.5	1568560245	10.2171135	So is Go not a “new serious language”? You can definitely have nil pointers panic in Go if written poorly.		jsjohnst
20986312	11.648408	-7.898828	comment	4.0	17.5	1568654146	10.228891	"> ""easy"" languages like Golang in favor of other languages with more powerful abstractions.Go is easier to learn than C# (I'll omit Java in this comment as I have more experience with the former), but..."		kristoff_it
13613643	11.834519	-7.2943454	comment	4.0	12.0	1486708094	7.061666	I think there is a fourth category not covered by the OP, which is Generative Programming[0].This paradigm does not have a fundamental reduction nature (the opposite, actually), is not concerned with ...		AdieuToLogic
13612538	12.264985	-7.2959456	comment	4.0	23.0	1486689237	7.0752225	On the other hand, the big idea behind Smalltalk, message passing (i.e. programming with computers rather just the programming of computers), keeps getting recapitulated in various forms such as Ruby,...		noblethrasher
13613808	12.291102	-7.273784	comment	4.0	17.0	1486711499	7.0646048	I'm angry because the cult-building around Smalltalk is stupid and I fell for it and wasted years trying to see what was there.- It's stupid because you can use Pharo today; Smalltalk isn't dead. Try ...		fusiongyro
13611222	12.27567	-7.3282647	story	4.0	114.0	1486676123	7.087319	Design Principles Behind Smalltalk (1981)	http://www.cs.virginia.edu/~evans/cs655/readings/smalltalk.html	devinmcgloin
13630070	11.879402	-7.433525	comment	4.0	13.0	1486927713	7.2428265	Back in the late 80s/early 90s after I learned C, I remember wondering in awe how in the world compiler optimizations worked.  But they do the same thing, they build (often intricate) dependency graph...		zackmorris
13644234	12.16246	-7.5966816	comment	4.0	10.5	1487086748	-5.140372	"The scala example is plain wrong.import play.api.mvc.RequestHeaderdef getUserId()(implicit request: RequestHeader) = {
  request.cookies.get(""uid"").map(_.value.toLong).filter(_ > 0)
}Return type is missing, it will throw exception (toLong)."		etaty
13644798	11.928061	-7.7848945	comment	4.0	13.5	1487090475	10.401486	Very similar to the c++ vs c debate.C++ has tons of arguably useful features. But these features also in a way distract from the task at hand - solving a problem. You risk ending up discussing the met...		strictfp
13652623	12.070503	-7.088475	comment	4.0	10.5	1487172519	3.1003711	This is where syntactic sugar can be helpful. CoffeeScript can make the example a lot more readable by removing the unnecessary braketing when the last argument of a function is a callback (common cas...		athenot
13654045	11.619417	-7.2474046	comment	4.0	16.0	1487182463	5.075608	It's strange they didn't cover dynamic programming at all. IMO every course should include at least one classical example of dynamic programming. For example:https://en.wikipedia.org/wiki/Longest_increasing_subsequencehttps://en.wikipedia.org/wiki/Longest_common_subsequence_pro...		hal9000xp
13653308	11.868484	-7.0346465	comment	4.0	14.5	1487177125	9.07556	> In other languages like C, Ruby or Python there is the expectation that whatever happens on line 1 will finish before the code on line 2 starts runningactually, if you are into asynchronous programm...		novaleaf
13662940	11.676461	-7.8576117	comment	4.0	17.0	1487274404	10.21676	> With the significant risk of becoming less interesting for large number of current users.There is no data demonstrating that statement. I don't think you are talking for the majority of people using...		camus2
13675807	11.767667	-7.33864	comment	4.0	18.0	1487440844	-8.922744	Ah, Parrot VM. Brings flashbacks of the dynamic typing bubble.No offense unitypers, maybe your typing systems have valid use-cases, I'm not sure. I'd like you to convince me if possible.EDIT: Using slightly less off-putting language. I truly welcome arguments, even sound opinions.		paxcoder
13677410	11.844281	-7.2859	comment	4.0	12.5	1487462863	-8.96731	"The popularity of dynamic typing, I think, was at its peak around 2010, mostly due to the purported rediscovery of the ""good parts"" of the only client-side language for the web, the unprecedented acce..."		paxcoder
13705246	11.611769	-7.1774917	comment	4.0	13.0	1487769899	9.033377	"The more threading code I have seen, the more convinced I become that it should be avoided at all cost. The pitfalls are nonobvious and potentially incurring datacorruption.
Rather, they should be beh..."		sharpercoder
13710745	12.135592	-7.497394	comment	4.0	11.0	1487811667	-10.590138	"How was your experience with F# and game development?
I like F#'s syntax so much more than C#(plus some stuff like pattern matching are so nice). However I feel like FP isn't effective for gamedev."		sp33der89
13713735	12.187315	-7.5110846	comment	4.0	14.0	1487857218	11.937442	"Having used Scala I can't stand to go back to Python. Almost as lightweight (more lightweight in some places - case classes and ""_ lambdas"" are things I really missed in Python, though attrs maybe sol..."		lmm
13764112	12.245039	-7.481474	comment	4.0	20.0	1488380269	-11.378417	Kotlin for me is Java made right. It's not complex, it has awesome interoperability with Java, it uses JDK, not reinventing its own wheels and it has everything I need from modern language.But it seem...		vbezhenar
13764558	11.719397	-7.1047287	comment	4.0	12.5	1488383055	-8.817196	Talend makes my teeth grind. I don't understand why an ETL tool uses a strongly typed language for a foundation. The number of fun productive hours I've spent swapping chars to varchars, int to decima...		gregn610
13689580	11.792478	-7.1758747	story	4.0	28.0	1487614931	-8.966843	Is Type Tracing for Python Useful? Some Experiments	http://renesd.blogspot.com/2017/02/is-type-tracing-for-python-useful-some.html	happy-go-lucky
13720209	12.028502	-7.8195534	story	4.0	13.0	1487901815	10.431954	Monads are a class of hard drugs	http://lambda-diode.com/programming/monads-are-a-class-of-hard-drugs	kornish
13771990	12.249205	-7.562714	comment	4.0	12.5	1488436271	-11.374945	That's completely not true because Kotlin has something near zero adoption. I have a Kotlin fanatic coworker so I know all about the manifold benefits of Kotlin -- it sounds awesome.Never had a projec...		WaxProlix
13773760	12.232272	-7.634768	comment	4.0	12.0	1488460454	11.919305	I don't really understand all those complaints. I am using it professionally since 8 month and I only had problems the first two month, then I felt good, even if there is always something else to lear...		gbersac
13781773	11.69608	-7.4125657	comment	4.0	18.0	1488534332	5.9950714	That's not super interesting (to me personally, an acknowledged idiot) because working programmers are hardly ever confused about types.  Intellij pretty much already does that thing.I have this idea ...		xyzzy123
13784618	11.946843	-7.6831713	comment	4.0	12.5	1488563432	10.3771	I can't imagine using a haskell-like language without laziness. It's what makes it possible to actually write small reusable functions.Tell me, have you ever used foldr in Purescript? It just doesn't ...		chowells
13793566	11.6018915	-7.893178	comment	4.0	13.5	1488670824	10.2071905	"A while ago, I had the ""krazy"" idea of writing my own single binary Go router software on top of linux kernel. Turns out it's fairly easy to get up and running with literally having nothing but a kern..."		oxplot
13798594	12.227195	-7.6255193	comment	4.0	15.5	1488747639	12.040261	You are starting to grab at straws with this argument. I understand that you're trying to advocate for more widespread use of APL, but constructing supporting arguments out of thin air really doesn't ...		Cyph0n
13803259	11.648385	-7.9710226	comment	4.0	13.5	1488814082	10.237987	"I like the fact that many people consider ""reading source code"" a way to get Go answers. Go code, the standard library in particular, is really readable."		xiaq
13803345	11.668418	-7.939512	comment	4.0	20.0	1488814784	10.228091	16% want generics and 17% love simplicity.So much for all those who claim generics remain overwhelming concern for Go developers.		geodel
13803814	11.788225	-7.3289633	comment	4.0	14.5	1488818625	9.692778	Just about every programming language expert I've seen who's talked about Java generics says Java did a better job than C#. In fact, of all language runtimes that do generics, the .NET runtime is the ...		sreque
13803449	11.697438	-7.507534	comment	4.0	19.0	1488815575	9.750378	FWIW, generics were added to Java in 2004, about 9 years after initial release.ref: https://en.wikipedia.org/wiki/Generics_in_Java		gtrubetskoy
13815107	11.776765	-7.2761083	comment	4.0	15.0	1488922243	7.1058283	"I hear you. I don't like method chaining either. Instead of    window.FindCanvasForObject(obj).Color(RED).MoveTo(10,30).LineTo(50,20). ...

I much prefer:    o = window.FindCanvasForObject(obj)
    o...."		beagle3
13815387	12.153475	-7.5111117	comment	4.0	18.5	1488923755	-10.616503	Author of the post here.  Happy to answer any questions you may have!Edit: Just to reiterate, the releases described in the blog post have an immense amount of community sweat behind them.  We're supe...		phillipcarter
13818809	11.9990835	-7.5028777	comment	4.0	11.0	1488961183	7.118411	Functional programming is inscrutable by most. Berkeley uses LISP as a flunk out class to weed out freshman.I find it odd that given in the physical world people require different shoe sizes for diffe...		mybrid
13825196	11.903165	-7.4357486	comment	4.0	13.0	1489017456	7.219728	"Man, this article really shows why imperative programming is so much harder to reason about than functional programming.Difference between ""variables"" in math vs. functional programming? None. The val..."		brianberns
13835214	11.610636	-7.265591	comment	4.0	13.0	1489105530	9.019678	I'm probably in the minority, but I'm not really a fan of these new changes.  Some are OK, but a lot of them seem likely to be abused more than used appropriately.     p.GetCoordinates(out int x, out ...		snarfy
13843783	12.498651	-7.0257344	comment	4.0	16.5	1489198634	12.351092	Ruby is a much simpler and more aesthetically pleasant language. Python has all sorts of sharp corners. You really should learn both but I think Ruby is a much easier starting point.Also, a lot of res...		dkarapetyan
13850843	11.843884	-7.336316	comment	4.0	18.0	1489329534	7.127048	"Part of the problem with OO is the other stuff we heaped on it, while still calling it OO. So, we're not always assessing ""pure"" OO when we talk about it. For instance, immutability and OO are diametr..."		unclebucknasty
13854933	12.4187565	-7.3892093	comment	4.0	18.0	1489374093	-9.56489	Not Ruby but for C code, I like Redis's code:https://github.com/antirez/redis/tree/unstable/srcI don't personally use the product, but I find the source well written and always share it as an example ...		rdtsc
13867843	12.242963	-7.638425	comment	4.0	41.5	1489502651	11.948197	That's a great news ! We are exclusively using scala at work for back end and I wonder if it could be interesting to switch new projects to scala native.Did you test scala native against well known an...		gbersac
13872594	11.94518	-7.681883	comment	4.0	18.0	1489535136	10.394378	Haskell I've seen often looks a lot like mathematical equations to me, where the tradition is that the notation is terse, with single letter variables (possibly with primes or other modifiers) is the norm.		x1798DE
13873099	11.910973	-7.122307	comment	4.0	18.0	1489541218	8.732849	"This looks to be ""language features"" only - so, lambdas, but no Java 8 APIs.  Optionals, streams, etc are not included....I hope they fix IntelliJ's default suggestions, which try to turn all of your loops into `.stream()` calls!"		pianoben
13876849	12.095116	-7.5731773	comment	4.0	23.0	1489592502	9.686994	The post hits a lot of real pain point when working with Kotlin.In particular, nullable types seem like a good idea (I thought so as well) but in practice are a real PITA. That's most acute when defin...		norswap
13877152	12.031938	-7.591475	comment	4.0	10.5	1489594542	9.720243	I've never used Kotlin (and I haven't touched Java in more than a decade) so I can't really comment on the usability issues of the language. That being said I think he completely misses the point of t...		simias
13888499	12.063518	-7.541437	comment	4.0	12.5	1489693656	7.4308567	Nothing wrong with functional languages, and from my experience an engineer who knows one or two functional dialects tends to be pretty good. Exceptions exist but they are rare. We also give our candi...		bostik
13888652	12.115018	-7.724099	comment	4.0	11.0	1489694654	10.463056	I did an on-site this past Monday.  They allowed me to code the homework in whatever I wanted.  I used Haskell.  We code-reviewed it in Haskell, with a guy there who knows Haskell.They use Scala and Clojure on a regular basis.God I hope they offer me that job.		eli_gottlieb
13889581	11.869924	-7.2767673	comment	4.0	11.5	1489701490	5.517107	Hi, I'm the author.  Yeah, you have a good point.  Imperative programming was just the way that we were using SQL to build that system.		a_liang
13906066	11.739162	-7.925174	comment	4.0	18.5	1489914571	10.300228	> Go is just too different to how I think: when I approach a programming problem, I first think about the types and abstractions that will be useful; I think about statically enforcing behaviourI see ...		jonnybgood
13906789	11.976309	-7.764476	comment	4.0	15.0	1489928269	10.382911	When I look at a programming language, I look at the community and how it gets stuff done and projects that are noteworthy.Something about Haskell strikes me as different. Despite the buzz about it, I...		gothrowaway
13906440	11.967846	-7.7521067	comment	4.0	11.0	1489922179	10.423084	"And yet I can be up and running and compiling with Go faster then Haskell every time, ready to ship production binaries if I want.With Haskell the process for me has repeatedly been: ""okay I'm going t..."		XorNot
13908086	11.988948	-7.7076435	comment	4.0	18.5	1489941539	10.4143505	Haskell is actually less expressive. It is a functional abstraction on top of what is essentially a procedural machine and with all abstractions placed on top of lower layers you can only lose functio...		crimsonalucard
13918776	11.684669	-7.9399385	comment	4.0	15.0	1490055235	10.197825	> First, functional programming is particularly difficult in Go. In fact the language discourages functional programming.Then it seems that Go isn't the language for you. With that Go nor any language...		hhsnopek
13785132	11.969966	-7.7257824	story	4.0	151.0	1488567057	10.38021	Write you a Haskell (2015)	http://dev.stephendiehl.com/fun/	myth_drannon
13880469	11.667042	-7.9577746	story	4.0	99.0	1489616896	10.16972	Finite state transducers in Go	https://github.com/couchbaselabs/vellum	mirceasoaica
13929964	12.234105	-7.636221	comment	4.0	10.5	1490180839	11.940887	Shows you effects of the echo chamber you are in, as I was very surprised that Scala was only at 3.6%, and beaten by Go at 4.3 and Swift at 6.5% in the programming language section.The self-selection ...		flurdy
13943828	11.95837	-7.150877	comment	4.0	12.0	1490300198	9.123591	Am I wrong in feeling that callback hell is a symptom of bad design? In what scenario are you making four server requests before you can do something on a webpage?I like async/await more for it's brevity than utility.		ng12
13949394	11.646343	-7.971845	comment	4.0	17.0	1490368247	2.8663723	"I think the go language has taken a position along the lines of ""re usability and abstraction are overrated"". I certainly think there is some truth to that, I am really enjoying working with go on sma..."		excepttheweasel
13949134	11.651565	-7.949989	comment	4.0	14.5	1490366179	10.251964	Actually, I can't deny that I'm a language snob. I also don't think that's a bad thing. I find Go's magical maps and slices, its null pointers, its verbose error handling and its lack of generics to all be in fairly poor taste.So, yeah, I'm a snob.		grabcocque
13950182	11.665374	-7.5330486	comment	4.0	12.0	1490373790	-7.153499	I happened to believe that a language should have one style.You want a functional language? Use it.You want a procedural language? Use it.You want an OOP language? Use it.They're all good, but not in ...		greenhouse_gas
13950238	11.768241	-7.269869	comment	4.0	11.5	1490374082	13.641143	"> Closures are examples of powerful things which C++ simply cannot do.Not true anymore. This article seems rather old, considering it refers to Racket as ""PLT Scheme"" here: http://cs.gmu.edu/~sean/lisp/, so it's at least 7 years old, possibly older."		klibertp
13959530	11.892135	-7.604747	comment	4.0	13.0	1490509858	-6.622397	So bind is flat map in other languages? If join is a function that take a list and appends its elements together join ( [[1], [2], [3]] ) -> [1,2,3]then bind is join(map(f, x))?bind just seems like a terrible name.For some reason Haskell users try to make things sounds as academic as possible.		jnordwick
13960161	11.982981	-7.7378755	comment	4.0	14.0	1490526495	10.3945675	> It's hard to read. [...] Despite 15 years of programming experience in python, js, C, etc. I feel like I'm going to have to duck my head down to e chastised for not understanding the language. [...]...		dtech
13961248	11.979698	-7.7595024	comment	4.0	14.5	1490542178	-13.839414	"This is a totally nutty scenario. Microservices are not ""do whatever you want!"" - they give you the freedom to choose your stack. It is obviously still a business decision to choose Haskell and you've..."		staticassertion
13965637	12.201624	-7.6157355	comment	4.0	10.5	1490597275	11.932784	I found Functional Programming in Scala to be the best source: https://www.amazon.com/Functional-Programming-Scala-Paul-Chi...		SatvikBeri
13964396	11.613679	-7.372136	comment	4.0	14.0	1490577124	-8.6355915	"""Some day, I would like to design a language that gets this right. But for the moment, I remain focused on Sandstorm.io. Hopefully someone will beat me to it. Hint hint.
""Some language already did bea..."		DannyBee
13979934	12.404831	-7.4885964	comment	4.0	24.0	1490729964	-1.9988548	Is anyone here using Reason in any meaningful way? Even just a side project.If so, what are you using it for and how do you like it.		ubercow
13998550	11.701038	-7.0928316	comment	4.0	11.0	1490905166	8.879651	> aside: please don't abuse collections.namedtuple to make a simple Python object; the class is meant to help porting APIs that return a tuple to a more object-oriented one, so starting with namedtupl...		luhn
14006796	12.415888	-7.8309636	comment	4.0	12.5	1490985849	-11.1830015	"For the nested if-let mess, I'd probably do something like this:    (let-every [x (foo)     err ""foo failed""
                y (bar x)   err (format ""bar %s failed"" x)
                z (goo x y) err ..."		sdegutis
14012168	11.828396	-7.5905876	comment	4.0	11.5	1491055660	10.3968935	Hey, this is out of the University of St.Andrews! I went there!During my time they were a big Haskell shop, working with Glasgow University (the G in ghc). There were also into custom research languag...		david-given
14013727	11.660436	-7.97398	comment	4.0	24.0	1491075331	10.289138	> As a mere average user of computer languages, every time I play around with Go I start wondering how a language like this became so popular.You can pick it up in a weekend. A lower entry bar means m...		ASinclair
14014378	11.633891	-7.959595	comment	4.0	16.0	1491083641	10.205724	When you talk about Go I think you should start with C.One of my professors used to tell us, that C was built by people who wanted to use it and didn't care about academic style.In many ways Go is jus...		JepZ
14032402	12.198504	-7.5784707	comment	4.0	25.0	1491312972	11.127136	May they all do great. But I am sceptical that Scala/Kotlin and many others started in last decade stand chance against Java/Rust/Swift/Go. IMO these 4 are backed by powerful corporations and have large community momentum. They are going to keep >90% of all software work along with C/C++.		geodel
14043360	12.031228	-7.7354794	comment	4.0	13.0	1491410205	10.596614	I think it is very telling about the state of interviews in the tech world when:1. I can NOT off the cuff answer those all correctly (at least not without a little Googling).2. I can, largely off the ...		csneeky
14060569	12.048135	-7.219975	comment	4.0	11.0	1491579464	9.15543	Better never use Promises at all, it is no solution for a problem, instead it makes code only more ambiguous IMHO. And indeed mixing it with callbacks or async libraries makes it even worse..I've once...		uranian
14062965	11.591499	-7.9619937	comment	4.0	10.5	1491594477	10.182039	"The people who define Go as a ""systems language"" use their own terribly useless definition of ""systems language"". Per wiki: ""For historical reasons, some organizations use the term systems programmer ..."		deaddodo
14002174	12.117488	-7.183621	story	4.0	37.0	1490951534	8.468129	Entity/Component Game Design: A Primer (2011)	http://piemaster.net/2011/07/entity-component-primer/	3131s
14091921	11.604415	-7.3440437	comment	4.0	18.5	1491941084	-8.714696	Why not just write another language, that compiles to machine code, but doesn't totally enforce type safety. Call it Iron.		frostirosti
14108169	11.605983	-7.893789	comment	4.0	10.5	1492099468	10.2043085	"I admit the syntax is less than ideal (especially with gofmt), but I believe adding two interfaces to an interface definition is equivalent to union:    func myrw(rw interface { io.Reader; io.Writer }) {
        rw.Read(nil)
        rw.Write(nil)
    }

https://play.golang.org/p/D-lJ1pL3MZ"		infogulch
14121517	11.6899185	-7.4293323	comment	4.0	11.5	1492274793	9.52078	I am writing a game engine and C++'s lack of proper reflection is a real hindrance for a variety of serialisation/deserialisation interfaces, be it networking or saving things to disk and loading them...		Kenji
14123426	11.967762	-7.636392	comment	4.0	19.0	1492298851	10.41511	I'll note that some of the aspects don't necessarily work out like that in practice:1. The GC part is true, but one has to remember that this was written at a time when GC was still a bit of an unusua...		rbehrends
14122190	11.879165	-7.229992	comment	4.0	14.0	1492282539	7.132992	> It would be really nice to compose objects hierarchally: for example, if I had a widget class composed of several different renderable Rectangles, I want to be able to automatically generate the ren...		jstimpfle
14127033	11.996228	-7.741077	comment	4.0	12.0	1492370177	10.40393	I work at Target and we have a weekly class on algebra, category theory and Haskell because people are interested. It's a mix of programmers learning some of the math and mathematicians learning some ...		tikhonj
14127215	12.146156	-7.892539	comment	4.0	15.0	1492372841	-3.2194579	In most of the category theory posts on HN I've seen, there's at least one person asking ahead this stuff is useful for. This comment is about why I find it useful.Why I learn this stuff: to more effe...		crawfordcomeaux
14128842	12.3940525	-7.5213394	comment	4.0	10.5	1492395675	12.882364	Everything I've ever heard on that front is that Erlang should be considered a control layer which has any CPU-bound tasks run in C. Actors/message passing is a good synchronization primitive but ther...		hderms
14154307	12.447286	-7.4858828	comment	4.0	12.0	1492668083	12.858535	> Compared to ruby, Python, Erlang, php and that ilk it is lightning quick.Ain't nobody is going to compare performance against Erlang for numerical number crunch.It was never built for that. It's not...		digitalzombie
14167794	11.908577	-7.1573253	comment	4.0	12.5	1492797870	7.478811	One of the greatest lingering flaws in both C# and Java is the lack of metaclasses.Because classes aren't real objects and therefore not necessarily also instances of other classes (their metaclasses)...		oop17
14170702	11.643688	-7.2739153	comment	4.0	12.0	1492825411	-6.769603	I've been meaning to understand the idea of programming languages, removed from the syntactic details, and removed from the issue of converting a program to a machine executable form, and even optimiz...		fizixer
14179145	11.791213	-7.2840853	comment	4.0	10.5	1492968236	-8.93386	For me the biggest downside of dynamically typed lanaguages like Python and Javascript is that a small error in passing a function's parameters can propagate very far in a complex system. E.g. if you ...		pzh
14185951	11.691887	-7.883689	comment	4.0	15.5	1493053297	10.242317	"While the Java ecosystem is terribly and unnecessarily painful, working in a browser isn't exactly trivial either. Personally, I think Go wins the ""easy setup"" award--download the toolchain, `mkdir -p..."		weberc2
14069839	12.218233	-7.2790923	story	4.0	73.0	1491698132	7.094166	Computer Programming Using GNU Smalltalk (2009)	http://www.canol.info/books/computer_programming_using_gnu_smalltalk/	brudgers
14192383	11.633809	-7.957878	story	4.0	225.0	1493118160	10.192066	Go programming language secure coding practices guide	https://github.com/Checkmarx/Go-SCP	rbanffy
14227073	11.992275	-7.754176	comment	4.0	11.5	1493480755	10.420273	I tried to use Haskell three times. Cabal was the always the reason why I left. I use three different machines. 2 at two different locations at work and one at home. All three would be different and h...		baldfat
14234040	11.905221	-7.394324	comment	4.0	14.0	1493589005	7.12289	I don’t wholly disagree with the article, but I think it overstates its case. In particular:> Is there really so much difference between f(o), o.f(), and (f o)?Yes, there is!In the case of o.f(), o needs to know about f.In the case of f(o), f needs to know about o.		Pitarou
14235533	11.726263	-7.291537	comment	4.0	16.5	1493612099	-8.057345	"I think of closures as a bit orthogonal to that; the definition of ""closure"" that I'm used to is a function that ""encloses"" some data that is not an argument (somewhat like a function with free variab..."		saghm
14235622	11.735484	-7.195244	comment	4.0	11.5	1493613910	7.21501	"High-school-me bounced off several Java and C++ books with their stupid ""sally wants to buy flowers and john's flower shop"" explanations of objects were before finally realizing, while using an OO PHP..."		ashark
14235684	11.754724	-7.3006716	comment	4.0	11.0	1493615243	-8.13777	While I've seen various methods in scheme to emulate objects with closures, I haven't seen a good one from the statically typed FP camp (the ML family, Haskell, etc). Meanwhile, objects are able to ma...		lacampbell
14235997	11.853237	-7.202742	comment	4.0	11.0	1493621174	8.656075	By “setter”, I mean a mechanism by which code that is external to an object can gain unmediated access to one or more of the object’s mutable instance variables.The big idea is that the sender should ...		noblethrasher
14240400	12.063816	-7.0422626	comment	4.0	13.0	1493665011	8.202165	There are so many more alternatives for the JVM these days - languages like Scala, Kotlin and Clojure - I wonder why these companies do not invest in the future and still push the old Java around.		hipjim
14240988	11.723842	-7.2268133	comment	4.0	19.0	1493669011	9.132295	I think it's because async. means nothing if you don't specify how, where and when something is async. For starters you can't use languages that don't share memory between threads if you wish to see a...		bullen
14248196	11.9268465	-7.4839616	comment	4.0	12.0	1493744659	-10.41154	"Lisp has the minimal syntax for lists:    (a b c d)

where other languages require separating commas,
but Haskell has minimal syntax for function application:     f x y z

with no parenthesis needed. ..."		tromp
14259004	12.249714	-7.547387	comment	4.0	11.5	1493838330	-11.434587	"Not to sound disparaging, but could this basically be summed up as ""Kotlin is the syntactic sugar version of Java""?I mean, ignoring functional stuff which is in Java 8 but not on Android because Android is still(?) on Java 7, that's all I'm really seeing here."		thehardsphere
14259893	11.9847555	-7.7642894	comment	4.0	12.0	1493844353	10.442191	Being introduced to Miranda was a revelation to me back in the day.  I still prefer aspects of Miranda syntax over Haskell.  For example, the formatting of guards in Miranda:  gcd a b = gcd (a-b) b, i...		derriz
14267239	12.01518	-7.756511	comment	4.0	12.0	1493921460	10.408563	Application sweet spot is a funny thing, because it's mostly determined by the presence of specific libraries. What Haskell has more than anything is ridiculously general libraries. It's got perfectly...		moomin
14267388	11.832458	-7.1881943	comment	4.0	10.5	1493922476	-8.694138	"The examples you've given have direct values. Try:  var index = getIndexFromSomewhere();
  var name = getHandleFromUser(""peter"", ""waivers"")

The type isn't as clear anymore.*Edit: I'm absolutely a fan..."		kentosi
14268795	11.998325	-7.780088	comment	4.0	16.5	1493931763	10.404894	There might be many biases in this research. If one is able to write code in Haskell it tells a lot about them, and he might be a better programmer than one who writes in Ada or C++.To make this resea...		solomatov
14294548	11.770823	-7.337071	comment	4.0	11.0	1494270286	7.094565	"As an improvising musician, I think ""composition"" is viewed very narrowly, through a classical lens. In classical music, the performer's duty is merely to interpret the piece as closely as possible to..."		beat
14309471	11.61557	-7.863943	comment	4.0	13.0	1494433601	10.124183	We have a post on why we chose Go, from a year and a half ago: https://www.cockroachlabs.com/blog/why-go-was-the-right-choi...More technically, here's a somewhat random set of thoughts on the subject:...		arjunnarayan
14312216	11.631418	-7.289897	comment	4.0	10.5	1494454403	4.808705	That surprises me.If you were calling a method that didn't exist in IEnumerable, why would resharper suggest changing the type to IEnumerable?		winstonewert
14333809	12.206699	-7.2844605	comment	4.0	15.0	1494726053	-10.402443	Lisp and Smalltalk actually suffer from the same problem: late-binding sucks. When I was in college a professor once pointed out to me that he didn't know of an LL(1) parser for Smalltalk. There's a r...		bitwize
14352241	11.812372	-7.068338	comment	4.0	11.5	1494960826	-8.994437	Python is my go-to language and I write big batch jobs in it and profile them and use PyPy.  I do it because it's so clean and concise.Recent C++ with lambda and auto is much improved but still not ne...		willvarfar
14299501	12.13719	-7.512673	story	4.0	53.0	1494333914	-10.648083	Calling F# Code in a C# Project	http://connelhooley.uk/blog/2017/04/30/f-sharp-to-c-sharp	douche
14231823	11.683397	-7.972106	story	4.0	23.0	1493564257	10.208739	Building a Go Web App in 2017	https://grisha.org/blog/2017/04/27/simplistic-go-web-app/	infosample
14314866	11.862102	-7.6572223	story	4.0	73.0	1494495898	10.358538	Dynamic Dispatch in Haskell	https://two-wrongs.com/dynamic-dispatch-in-haskell-how-to-make-code-extendable	runeks
14316539	11.788483	-7.7218947	story	4.0	21.0	1494515266	10.382209	C++14 either monad and why you shouldn't use exceptions	https://github.com/LoopPerfect/neither	entelechy
14361675	12.259568	-7.5622215	comment	4.0	10.5	1495047557	-11.379756	New to Kotlin + ecosystem... So can you build Android UI's with Scene Builder? I see notes about it working with Gluon Mobile which appears to be a cross platform mobile library.		deskamess
14361930	11.937169	-7.036596	comment	4.0	10.5	1495049144	8.167955	It hasn't produced any fruit.And especially from a retrospective perspective, the importance of that can't be understated.I'm not enough of a mathematician to be able to do this myself, but intuitivel...		jerf
14361933	12.239974	-7.463807	comment	4.0	10.5	1495049151	-11.342467	Disclaimer: I am always looking for that Unicorn. The one that will let me write my code once and run it on all platforms. I refuse to give up this quest.I use Pycharm and have used other Jetbrains ID...		monkmartinez
14364869	12.2312565	-7.635672	comment	4.0	16.0	1495082776	11.924296	I work on a large Scala team.  We use microservices so my regular compile times are somewhere between 4s and 20s.  I rarely have to do a full rebuild.IDE support is bad, that's a good criticism but a ...		runT1ME
14367901	12.167355	-7.5162706	comment	4.0	12.0	1495120396	-11.336899	"What's the advantage of extension functions compared to plain functions?  fun String.shout() = this + ""!!!""

  fun shout(s: String) = s + ""!!!""

Looks pretty much the same to me. Extension functions u..."		fauigerzigerk
14370221	12.012657	-7.529391	comment	4.0	12.5	1495135157	-11.378855	If your 'let' doesn't propagate so that immutable collections are used, it's not very valuable. Just like 'final' in Java doesn't prevent anyone from mutating your ArrayList. Using 'val' instead of so...		Jach
14369769	12.259968	-7.553712	comment	4.0	18.0	1495132184	-11.386714	I like kotlin a lot, but suddenly there are a lot of articles in the front page about it. Kotlin isn't more cool because Google announced yesterday it is going to use it in Android. Kotlin is the same...		jorgemf
14376262	12.247147	-7.568112	comment	4.0	12.0	1495205862	-11.376521	I like kotlin and I am not angry about the news. I am angry because the people is starting to notice it now because Google bla bla bla. It is a great language, with or without Google, it is going to k...		jorgemf
14376457	12.223469	-7.451726	comment	4.0	16.0	1495206816	11.906364	Like someone mentioned, it's hard to answer this in the general case. Factors to consider would be: a) are you dependent on the JVM and Java ecosystem? b) Are you already familiar/comfortable with Jav...		msluyter
14376958	11.597347	-7.780867	comment	4.0	12.0	1495209790	8.271558	If you want speed, use golang ?Java (and kotlin) are faster than Go in almost all cases (except for startup time) (and even there difference is shrinking, plus you get a lot back for that startup time...		candiodari
14377546	11.9947815	-7.717024	comment	4.0	11.0	1495213614	10.427008	I'm approaching an intermediate level in Haskell, but I don't really see how writing a program in Haskell is any more like writing a language than writing a program in, say, python. Could you elaborate or point to some DSLs written on top of Haskell? I'm very curious.		treebog
14378191	11.625849	-7.9416003	comment	4.0	14.5	1495218314	10.200813	"The bit about better ""errors"" for Allman style braces really drives home to me just how proudly opinionated Go is. ""We know about this other indent style and acknowledge it, but it's WRONG.""I really g..."		dejawu
14389810	12.248248	-7.5521173	comment	4.0	13.5	1495409036	-11.38575	"TL;DR -- because developers love it. I clicked the article hoping there was some strategic background, some connection to the Oracle lawsuit, etc. Nop, the answer to ""why"" is ""because of its merits"". Also in this article, some backstory about the name ""Kotlin""."		alexandros
14389862	12.227442	-7.5647902	comment	4.0	12.0	1495409654	-11.332492	So how is Kotlin's interop with native code? I heard it was still pretty bad with Java despite some updates in that department. Swift can handle some API's but for real interop you can go back to Objective-C(++) wrappers with zero penalty.		dep_b
14390069	12.257636	-7.567989	comment	4.0	12.0	1495412417	-11.341057	"> Standing on stage on Wednesday morning at Google I/O,
> Android PM Director Stephanie Saad Cuthbertson broke the 
> news that Kotlin, which was first released in 2012, is now 
> officially supported..."		appleflaxen
14390145	12.254407	-7.549696	comment	4.0	11.0	1495413738	-11.397326	I'm glad to see Kotlin support (would love Python support but you can't win them all)The Android APIs are still a major problem for me. In web front-ends we've basically gone full FRP and I'm sitting ...		rtpg
14389844	12.242086	-7.5467305	comment	4.0	17.5	1495409451	-11.3509035	Why is Kotlin a better language for Android dev?Won't the platform APIs designed for Java look and feel very non-idiomatic in Kotlin?		fooker
14390830	12.255244	-7.56149	comment	4.0	10.5	1495424033	-11.388371	alright, wtf is kotlin, why is it suddenly such a big deal, and how big of a deal is it?edit:  so i checked this out myself.  i have no idea why this is a big deal.  another app language?  i thought reactnative was all the jazz?		wheelerwj
14390714	12.257496	-7.5549517	comment	4.0	11.0	1495422208	-11.401401	"Probably a silly question, but since Android is OSS, what specifically prevents parties other than Google from adding ""first class"" language support?Does Google not accept (major) external contributio..."		bogidon
14407707	11.865299	-7.282879	comment	4.0	20.0	1495602232	9.206977	What's wrong with async/await?		modarts
14412257	11.9843645	-7.740118	comment	4.0	18.5	1495650320	10.451272	"In the discussion of HLearn [0] the author said this [1]:""This is a bit awkward for me as I've paused the development of HLearn and emphatically do not recommend anyone use it. The main problem is tha..."		sndean
14412437	11.951855	-7.725929	comment	4.0	12.0	1495651757	10.410344	Haskell has a mature FFI.  If there are any computational hurdles, it is possible to drop down to C/C++ to manage these.  A good library can easily encapsulate this.Of course, there is the point where...		nanolith
14413073	11.603236	-7.349742	comment	4.0	12.5	1495656783	8.811607	> has poor support for numerical computing.The issue comes from being lazy by default.When you are writing lazy functional code, you essentially build up a system of thunks[0] that collapse to a value...		spott
14441562	11.980447	-7.7186522	comment	4.0	17.0	1496093555	10.409663	I'm tempted to just make a youtube video going over this code line by line.It's a really great introduction to a non-trivial bit of Haskell.		KirinDave
14441654	11.867005	-7.155507	comment	4.0	17.0	1496094518	-9.059509	I understand that people love programming in classes, but I really want something like a stripped-down ES6. In particular, I want:1. Lists and objects/dicts only; objects have no prototypes at all; ob...		weberc2
14448238	12.001368	-7.2519264	comment	4.0	19.0	1496175740	9.196846	"There should also be something like  awaitAll 
to replace  await Promise.all 
calls."		ujal
14448425	11.749221	-7.1952147	comment	4.0	15.5	1496177430	-5.9775867	1) This was possible in node 72) A request can fail and can timeout.3) Writing to a file can fail.And you get the idea. Don't omit error handling. Error handling is business logic too.Being relaxed around error handling is the recipe for cascading server failure.		partycoder
14448610	11.976629	-7.2541695	comment	4.0	12.0	1496178940	9.183633	This just motivated me to play around a little bit with JS async/await implementation. What I found interesting is that async functions will always return promises, even if an immediate value could be...		Matthias247
14450557	11.860862	-7.531053	comment	4.0	13.5	1496207661	10.081034	> it's not possible to emulate purity using an impure languageIt sounds as if a pure language cannot be implemented in terms of an impure language. E.g. a pure language won't be implementable in an instruction set of any modern CPU. I must be missing something.		nine_k
14450804	11.617561	-7.143081	comment	4.0	12.0	1496213622	9.18705	"I tried to do some quick benchmarks:    % make hs
    Results: [25872791,24253954,21258158]
    make hs  6.53s user 3.99s system 245% cpu 4.282 total

    % make py
    24029582
    25343914
    20814..."		lgas
14459040	12.331215	-7.0219502	comment	4.0	14.5	1496310847	13.162614	The only big company I know that uses Perl extensively is booking.com, and I think that has more to do with any technical merit from the language, and just that is what they started and it was working...		rglullis
14459252	12.341665	-7.036142	comment	4.0	13.0	1496314244	13.192237	A single +1 developer is better than -5 developers. cperl got 10x more done in 2 years than p5p in 15 years, and the 10x factor is ongoing. In a few years nobody will use perl5 anymore, everybody will...		rurban
14459798	12.246342	-7.6476173	comment	4.0	11.5	1496321565	-5.2018976	"Try ""g com.scala.List"" instead. It's not that much inconvenience."		ComodoHacker
14468046	11.652584	-7.9710703	comment	4.0	16.5	1496387243	10.308017	No, they got the order to make something that looks like GoL.They tried it out, realized it didn't look great, then looked for what most people who don't have a CS degree would consider similar enough...		damnyou
14469984	11.749104	-7.31714	comment	4.0	11.0	1496412633	-7.3653016	I'll add my usual comment in discussions about interpreter/compiler books: I'd really love to read a modern book or in-depth tutorial on creating a statically-typed functional language, with discussio...		jnbiche
14480568	12.243746	-7.647685	comment	4.0	13.5	1496569563	11.920349	"You are mostly accurate wrt. the ""financial"" situation of Scala.js. Except that the Scala Center has an explicit Recommendation to ""ensure the continuity of Scala.js"" [1]. At least that means that, sh..."		sjrd
14505673	12.293744	-7.2767324	comment	4.0	10.5	1496838134	7.245065	Smalltalk's thunder in the enterprise was killed when Java started to gain adoption.Eclipse was born from Visual Age for Smalltalk and Hotspot was taken from StrongTalk project.Java, .NET and Swift Pl...		pjmlp
14506532	12.126796	-7.500478	comment	4.0	13.5	1496844489	-10.58023	I know its heresy, but for a while I was actually getting hooked on F# succinct way to write/support OO. On the surface at least, it looked a lot cleaner and more concise than C#.I wish there were more F# jobs - its a very interesting language.		dev360
14372383	11.939041	-7.240052	story	4.0	17.0	1495156764	-8.766815	Currying in JavaScript ES6	https://medium.com/@adambene/currying-in-javascript-es6-540d2ad09400	matthberg
14402378	11.988593	-7.7484446	story	4.0	80.0	1495555583	10.417589	HLearn: A Machine Learning Library for Haskell (2013) [pdf]	https://izbicki.me/public/papers/tfp2013-hlearn-a-machine-learning-library-for-haskell.pdf	allenleein
14428734	12.280127	-7.3284593	story	4.0	94.0	1495854358	7.014953	GNU Smalltalk Koans	http://skim.la/gnu_smalltalk_koans/	brudgers
14429487	12.2374	-7.635478	story	4.0	64.0	1495877239	11.93016	Warts of Scala	http://www.lihaoyi.com/post/WartsoftheScalaProgrammingLanguage.html	manojlds
14435987	11.640188	-7.9367657	story	4.0	156.0	1496003837	10.197009	Hacking Go's type system	https://katcipis.github.io/2017/04/21/hack-go-types.html	katcipis
14506458	11.762141	-7.054289	story	4.0	108.0	1496843824	5.05057	A curated list of design systems, pattern libraries, and more	https://github.com/alexpate/awesome-design-systems	alexpate
14518499	12.053865	-7.8438807	comment	4.0	12.0	1496970902	10.425793	Lambdas. Monads. Inner & outer joins. Tensorflow.		rrggrr
14547080	12.252993	-7.619225	comment	4.0	15.5	1497377206	11.9428	Congrats!We, a stanford lab, are pursuing similar goals but opensource and from a Scala DSL although our doc (http://spatial-lang.readthedocs.io/en/latest/tutorial/starti...) is not that up-to-date:https://github.com/stanford-ppl/spatial-lang		rubenfiszel
14548776	11.635408	-7.323684	comment	4.0	14.0	1497389013	8.556677	This is great, I've waited 20 years for this (computer engineering degree 1999).  For all the naysayers - what has gone wrong with computing, why Moore's law no longer works, etc etc is that we've gon...		zackmorris
14551015	11.607383	-7.778362	comment	4.0	17.0	1497422290	-10.630038	Comparing it against Rust doesn't really seem fair. If I wasn't using Haskell, I'd be writing Erlang, and last I checked GHC is much faster than Erlang/OTP. Certainly faster than CPython, Ruby, and mo...		oconnore
14551125	12.018627	-7.7508807	comment	4.0	16.5	1497423985	10.4264145	ocaml is a great language in its own right too; the only haskell features I find myself really missing are do notation and operator overloading.		zem
14560001	12.066381	-7.1386466	comment	4.0	23.0	1497532119	9.165152	Node 8 is the planned LTS release for later this year.Notably, it brings async/await syntax to vanilla JS. This new feature complements callbacks and largely replaces how Promises are currently consum...		ihsw2
14561515	11.623196	-7.9186435	comment	4.0	17.5	1497541925	10.193783	I know Go gets a lot of heat for not having generics, but having done a few fairly complex things in Go now, I really haven't missed them, nor have I had to bail out to interface{} in ways that I woul...		nicpottier
14561664	11.605261	-7.8926983	comment	4.0	11.5	1497542942	10.227956	I find Go is quite similar to C, and C also lacks all of these features. It's rare to see C code using some library for generic containers. Most developers roll their own, as needed.In practice, bugs ...		xyzzy_plugh
14567250	11.675675	-7.724004	comment	4.0	32.0	1497598700	10.108832	I love generics! Simplifies all my api creations deeply, huge re-use of code and very flexible implementations.Eg. An API to a IoT cloud that lets user define their own type. The payload that i fetch ...		NicoJuicy
14568222	11.759332	-7.4084077	comment	4.0	15.5	1497615245	-10.483392	"    interface IValidator<T> {
        bool Validate(T thingToValidate);
    }
    class ThingValidator : IValidator<Thing> {}
    class ThingValidator : IValidator<OtherThing> {}

    var validators = GetAllValidators();

What type is `validators`?"		sharpercoder
14568951	11.778871	-7.554598	comment	4.0	10.5	1497621196	10.35397	I haven't yet tried Idris (or even Haskell), so I could be misunderstanding, but surely in a pure language, a function with a type of String -> Int can't 'blow up', it can only output an Int? So if yo...		SEMW
14568428	11.723015	-7.451674	comment	4.0	10.5	1497617692	-8.388233	How does Idris compare to Agda (1) and F* (2)?[1] http://wiki.portal.chalmers.se/agda[2] https://fstar-lang.org/		insulanian
14582416	11.644086	-7.9477506	comment	4.0	23.0	1497814444	10.207286	What articles are you talking about? This couldn't be further from the truth. Go is a practical language meant to be used in production settings. It's not a haskell. For example, it's support for protocol buffers is second to none imo.		computerex
14583934	11.844365	-7.1327934	comment	4.0	15.5	1497834352	8.58525	This title is hugely misleading. The value types specification is for JVM, the platform, not Java 10. You can compile a large number of source languages to run on JVM, such as Java, Scala, Closure, Groovy, Kotlin, Javascript etc. just to name a few.		nullnilvoid
14584589	11.730094	-7.4823923	comment	4.0	12.0	1497845518	9.709645	Those are not breaking changes. Existing byte code will continue to work.My understanding of generic type erasure is that it is more of a language issue than a VM issue. Nothing in the VM prevents rei...		nradov
14592495	11.674376	-7.9384418	comment	4.0	15.5	1497938362	10.101246	"Came here to say the same thing. Go won't enter ""crud webapp"" market until they have a better story on relational db interactions. I'm afraid this is way beyond the current possibilities of the language as it offer barely any meta-programming technics, on purpose."		bsaul
14630290	12.0649805	-7.8277054	comment	4.0	11.5	1498403065	10.424324	So if I understand correctly, some affected processors can be fixed by a microcode update, but there are some which cannot be fixed at all?Also the advisory seems to imply that the OCaml compiler uses...		rwmj
14633799	11.594045	-7.056097	comment	4.0	12.5	1498446883	8.9026985	">""For instance `a = foo.bar.baz` in Python involves 3 hash gets (local scope, foo scope, then bar scope), and a single set operation (local scope)""Can you explain where exactly and why a set operation is performed? Thanks."		bogomipz
14635578	11.592552	-7.478944	comment	4.0	18.0	1498472382	-10.461251	Is there a reason, other than jargon, why this concept is called different names in different languages?Do variants work different than tagged unions or type classes?Some people told me that Haskell i...		k__
14643381	11.893797	-7.42515	comment	4.0	13.0	1498552011	7.3029976	I was taught in university that functional programming means using functions as first-class-values, so function can get other function as a parameter. That's all. You can write functional code with assembler if you want. Immutability is just another design choice with its pros and cons.		vbezhenar
14602448	11.991746	-7.2803717	story	4.0	23.0	1498039922	7.1901608	Functional programming in JavaScript is an antipattern	https://medium.com/@alexdixon/functional-programming-in-javascript-is-an-antipattern-58526819f21e	doubleg
14672939	11.699394	-7.9285393	comment	4.0	11.5	1498849056	10.191391	"Why would anyone need a ""go web framework""? What is it, gorilla toolkit  is not enough anymore?"		sAbakumoff
14673993	11.878601	-7.367641	comment	4.0	12.5	1498862496	7.0653906	> Aggregation, composition, encapsulation are as are much as fundamental notions in OOP as inheritance.You say that as if these things are not just as easily expressed in FP -- if not even easier.Aggr...		lomnakkus
30723901	11.800309	-7.2343388	comment	4.0	10.5	1647619273	-8.961438	I'll never understand the desire to bolt types onto Python.Dynamic typing is not a deficiency, it's a design choice. SICP for example, is filled with small examples of things you can do with dynamic l...		time_to_smile
30756223	11.619422	-7.9513483	comment	4.0	11.0	1647880783	-10.283925	Couldn't disagree more in the Go case. Folder-level namespaces (rather than file-level) makes Go exceptionally annoying to navigate, and interfaces heavily obscure the.. interface between abstractions and implementations.		Nullabillity
30767620	11.809398	-7.2167854	comment	4.0	11.5	1647964543	11.580459	It's legitimately fascinating to see the rise of pattern matching, to the point that even Java will have it [1]!  Combined with lambdas, this is a different language than the Java 1.5 that I first lea...		freedomben
30787017	12.027941	-7.7428055	comment	4.0	17.0	1648105299	10.40023	"""How to do side effects in s/FP/Haskell""Erlang is a functional programming language and doesn't need to jump through hoops to do side effects.So is OCaml. So is..."		dmitriid
30805489	11.957745	-7.4614677	comment	4.0	14.0	1648232518	7.2546206	"Alright, here's the hot take: The assignment is for any developer without basic knowledge of FP beyond .map and 
.filter to complete their intermediate-level programming education.All problem domains ..."		mixedCase
30807206	11.747092	-7.663924	comment	4.0	12.5	1648243594	10.138555	Generics feel like OOP creeping back into popular programming culture.Everything just goes in a big circle. OOP is the bees knee's for like 20 years and then everyone decides that OOP is the devil for...		rank0
30807292	11.6463375	-7.351835	comment	4.0	16.5	1648244372	-7.7374134	No type definitions for methods :(		eweise
30817885	12.232819	-7.53652	comment	4.0	12.0	1648358068	-11.403409	A few things Kotlin does better:- The annotation support is just better. JS ecosystem has forever been debating on decorator spec, but kotlin annotations (esp. with addition of KSP) provide good mecha...		lf-non
30818047	12.236714	-7.532143	comment	4.0	16.5	1648360524	-11.391088	> Kotlin for JS is really about selling IDEA licensesKotlin the entire language is about selling IDEA licenses.Ever tried to read Kotlin in plaintext? It's terrible. The language makes you need the IDEA hints they give you to read it.		whateveracct
30818166	12.25911	-7.5454445	comment	4.0	27.5	1648362011	-11.347333	They public stated that a reason why Kotlin exists is to sell licenses.> The next thing is also fairly straightforward: we expect Kotlin to drive the sales of IntelliJ IDEAhttps://blog.jetbrains.com/kotlin/2011/08/why-jetbrains-need...		pjmlp
30734514	11.951752	-7.737115	story	4.0	60.0	1647703515	10.411118	Thoughts on Bootstrapping GHC (2018)	https://www.joachim-breitner.de/blog/748-Thoughts_on_bootstrapping_GHC	Tomte
30842996	12.229461	-7.241588	comment	4.0	11.0	1648564213	8.884128	Yes. Perhaps to add to this, use a modern asynchronous IO framework. If you use Spring Boot, ignore some of the legacy stuff that still comes with it and make sure you use webflux with Kotlin co-routi...		jillesvangurp
30857004	11.654054	-7.9258084	comment	4.0	21.0	1648655985	10.20936	"This is a really long and informative article, but I would propose a change to the title here, since ""Generics can make your Go code slower"" seems like the expected outcome, where the conclusion of th..."		trey-jones
30859632	11.676872	-7.871763	comment	4.0	10.5	1648667781	10.202739	> What, exactly, are you saying that Go can't do that Java can?Runtime library addition (plugins) and dependency injection are two big ones. (We can argue the merit separately, but they're not possibl...		marwatk
30859675	11.648347	-7.929187	comment	4.0	16.0	1648668059	10.220531	For me Go has replaced Node as my preferred backend language. The reason is because of the power of static binaries, the confidence that the code I write today can still run ten years from now, and th...		zachruss92
30870083	11.781818	-7.3850193	comment	4.0	28.5	1648748458	-6.0551744	"    let foo;
    try {
       foo = await is_this_better();
    } catch (err) {
       console.log(""if err != nil doesn't seem so bad all of a sudden"");
    }"		icholy
30879573	11.829623	-7.383786	comment	4.0	20.0	1648828684	7.4760895	These problems have lots of other well-known solutions.For large objects: Persistent data structures with path-copying.  Batching small mutations (and using mutation internally in a way that doesn’t l...		dgreensp
30879962	11.946764	-7.437652	comment	4.0	12.5	1648830302	7.1992292	The question I am left with, as someone who has a bit of experience with functional languages but much more in imperative/OOP languages, is does it ever make sense to develop something like the GUI ap...		tgflynn
30880201	11.916449	-7.4300385	comment	4.0	17.5	1648831239	7.205423	> You should not approach problems in functional languages with imperative techniques. It's fitting a square peg in a round hole.This might be part of the problem with FP. Every popular CPU architecture is imperative.		dehrmann
30879176	11.975015	-7.5094247	comment	4.0	26.0	1648826998	7.3021636	Not sure if the author will read this, but there is a simple answer to both problems.In functional programming, you typically do not manipulate state directly, instead you compose functions that manip...		js8
30881556	11.769678	-7.0323324	comment	4.0	14.5	1648837245	8.84734	Persistent data structures are very hard. It's basically impossible to cleanly combine them. E.g. if you have an immutable hashtable that contains immutable lists, and you want to modify a list - how ...		tomp
30920696	12.201169	-7.268967	comment	4.0	17.0	1649174563	-10.253378	This is kinda the point of smalltalk. It's a radically different programming model _and_ paradigm than most C-derived languages.  If you're looking for a language that feels comfortable to developers ...		andjd
30966413	11.720195	-7.2967525	comment	4.0	11.0	1649495496	9.225963	"This is my sentiment as well, I understand some people's reservations and the fact that ""async pollutes every calling function, as now everything must async as well"", but to me this is correct behavio..."		marcus_cemes
30896211	11.956094	-7.366999	story	4.0	17.0	1648987169	6.9106503	Alan Kay: What paradigm is the successor to OOP?	https://declarative.quora.com/What-paradigm-is-the-successor-to-OOP-1	mpweiher
30965299	11.673959	-7.9436545	story	4.0	5.0	1649479052	10.187551	Ask HN: Does Go has webframework like Hilla/Vaadin/RoR on Golang?		tomerbd
31008525	11.620059	-7.861478	comment	4.0	21.0	1649799487	-6.0981927	>For type parameters, prefer functions to methods>The Tree example illustrates another general guideline: when you need something like a comparison function, prefer a function to a method.>We could ha...		Groxx
31009117	11.656913	-7.5385547	comment	4.0	15.5	1649803403	10.035496	"All of the ""when it's useful"" examples are either of `any` or `comparable`. There are no examples restricted to an interface (other than `comparable` if that counts). Only the ""when it's not useful"" e..."		orblivion
31009395	11.638547	-7.918699	comment	4.0	11.5	1649805469	10.194707	IMHO the biggest deciding use case for me is whether or not it's more performant than any other possible solution. So far I haven't seen this to be the case in other people's benchmarks. [1][1] https://planetscale.com/blog/generics-can-make-your-go-code-...		jamal-kumar
31051204	11.961454	-7.2697887	comment	4.0	14.0	1650104601	-2.7072537	If you're doing nothing in between your async calls, using .then/.catch might be simpler.As soon as you need to introduce local variables and complex control structures, not having shared closures bet...		zebracanevra
31051242	11.839183	-7.2898884	comment	4.0	11.5	1650105186	9.205651	As a fullstack dev, I worked with- Spring MVC (Java Futures)- Spring Webflux (Reactor observables)- Scala (Scala Futures & for comprehensions)- TS async/await- Angular observables- React hooks (which ...		gombosg
31052294	12.019845	-7.2111454	comment	4.0	19.0	1650116938	9.178827	"Many devs unnecessarily nest Promises like that.    async function getData() {
      return new Promise((resolve) => {
        const res = fetch(…);
        resolve(res);
      });
    }

The response..."		eurasiantiger
31052527	12.243884	-7.5278788	comment	4.0	17.5	1650118711	-11.373704	Kotlin has seen fantastic adoption in Android projects, because of the way Google pushes it, while stagnating Android Java on purpose.On the JVM world not really.https://www.infoq.com/news/2022/03/jrebel-report-2022/		pjmlp
31098399	11.667708	-7.9792714	comment	4.0	19.5	1650468707	10.226835	"Overall I am happy with Go, as it lets me get stuff done quickly. The worst aspect of Go for me, is the
documentation. Specifically, whoever designed the current site:https://pkg.go.dev/ioI hate the f..."		svnpenn
31099090	11.789004	-7.192801	comment	4.0	19.0	1650471121	-6.165747	The tedium of errors irked me for a long time until I realized that it was my poor abstractions inherited from what I learned in other languages that lead to that state. As I established a more Go-min...		randomdata
31115265	11.818096	-7.184355	comment	4.0	47.5	1650575590	-9.023803	"Opinions like these are frustrating because, although they make valid points, it comes off as ""they didn't do 100% exactly what I want, so I'm not using them at all."" With many tools, there is a middl..."		daenz
31115440	11.847179	-7.179961	comment	4.0	45.5	1650576711	-9.041317	Fully agree with this. Type hinting (not checking) is idiomatic to Python. MyPy is a great way to enforce checking. It's great to have the option to use the hints for intellisense only.		davidhariri
31115655	11.851525	-7.146333	comment	4.0	12.5	1650578038	-9.021897	Python's type system is a disappointment, but I don't think this article does a great job of explaining why. My biggest gripes:1. There is no way to get typing like dataclasses without writing your ow...		phailhaus
31115796	11.793945	-7.23403	comment	4.0	11.0	1650579022	-8.942545	"Personally, I took exception to the following from TFA:> Python is a dynamically typed language. By definition, you don’t know the real types of variables at runtime. This is a feature.In ""you don’t k..."		hermitdev
31116512	11.84617	-7.1813564	comment	4.0	17.0	1650584214	-9.015833	"""You don’t know if there really is a tool in place to check them.""Every project I interact with that uses type hints runs mypy as part of CI - and I can see that they're setup to do that by looking at..."		simonw
31122405	12.089479	-7.8485765	comment	4.0	14.0	1650639608	10.43661	You think they are platinum-level sponsors at multiple conferences every year, sponsors of PLMW multiple times a year, sponsors for carbon-neutrality at ICFP each year, and continue investing in hirin...		DonaldPShimoda
31144132	11.965281	-7.7252483	comment	4.0	17.0	1650809273	10.393849	> Because industry makes good decisions?That's irrelevant - if you want uptake, you need to support what user's want. It's been clear for at least a decade now that programmers don't want Haskell syntax.Whether it's a good syntax or not is irrelevant.		lelanthran
31151010	11.756464	-7.303975	comment	4.0	11.0	1650864880	-8.803816	"Is there a good guide somewhere, that explains all the different ""types"" of languages? When I read dynamic/static etc, I often have NFI what that means, something better than Wikipedia, perhaps."		SaulJLH
31155494	11.61126	-7.880996	comment	4.0	11.0	1650897571	10.128068	Is there an easy way of doing HTML templating with Go/Rust, as you would in PHP?		zozbot234
31172374	11.864198	-7.8359084	comment	4.0	14.5	1651002932	10.282909	"For people in this thread comparing _Rails_ with _Go_ can you please help me understand something about Go:
Is it a language that also has in std/core library web framework like support? Like PHP?I as..."		gls2ro
31174304	11.688778	-7.8338885	comment	4.0	20.0	1651014577	10.155104	To add to your valid statements, Go has easily outperformed any other language we have compared it to in modern backend development.We are using it for our new API iteration and see consistent perform...		Mo3
31182459	11.671128	-7.908131	comment	4.0	12.5	1651078256	10.221397	Go is a fine language, but not great for scripting. The verbosity shows in the examples, it’s basically skipping five or six lines of code to read from stdin and import a functional library.Learning the jq syntax will have a much better payoff in the long run.		ricardobeat
31185652	11.661393	-7.881321	comment	4.0	11.0	1651092792	10.144531	As someone who tried out Go before generics and didn't like it, I'm curious how Go generics compare to generics in Java or Typescript.		opensrcken
31193139	11.636955	-7.9756885	comment	4.0	12.5	1651157349	10.186835	And the most interesting thing to my mind is how little the subtle gotchas matter.The key is they're subtle. If a subtly-wrong design takes only 20% of the code of the truly-correct design to express ...		shadowgovt
31193553	11.641397	-7.9722424	comment	4.0	25.0	1651159120	10.2407255	> Go is a language that gets out of your way, encourages you to solve your problemMaybe I'm just too dumb for Go, but this is not consistent with my experience at all.  Go's insistence on pretending t...		mcronce
31201651	12.324623	-7.0244985	comment	4.0	14.0	1651208969	13.17817	"> ... many great Perl book authors ...Would you mind listing a few of these?I would add ""Modern Perl"" by chromatic: https://pragprog.com/titles/swperl/modern-perl-fourth-editio...With lots of elegant examples, this book really shows that perl is not a write-only language."		marttt
31205726	11.626427	-7.957116	comment	4.0	16.5	1651243071	10.21177	This has perhaps been my biggest pain-point with Golang..Woe unto those who do not follow the idiosyncrasies of how golang handles versioning, package management, tooling etc.if this is really your mo...		adhoc_slime
31207768	12.085647	-7.8448153	comment	4.0	13.5	1651251806	10.423825	It's a nice website and certainly an improvement from the older one. I just hope that this isn't the only area where OCaml improves. I'd love a consistent documentation source a la docs.rs, better sup...		hardwaregeek
31208326	12.1116295	-7.8493176	comment	4.0	12.5	1651253814	10.431024	Hi! I am a contributor of this new version of ocaml.org.Just wanted to also link the announcement post here: https://discuss.ocaml.org/t/v3-ocaml-org-we-are-live/9747.This new website comes with lots ...		tmattio
31209310	12.100481	-7.8803654	comment	4.0	10.5	1651258816	10.508121	This landing page includes a pet peeve: zero-context social proof.It's great to know that Microsoft, Docker, and Facebook use OCaml. Buy do they use it seriously? The industrial users (https://ocaml.o...		conroy
31211061	12.097639	-7.6778674	comment	4.0	10.5	1651269610	-10.629729	I know these languages are both members of the ML language, but why would one pick OCaml over F#?I've toyed a bit with both and F# seems a bit more ergonomic: pipes, computation expressions, a more concise syntax, etc. I do like how fast the OCaml compiler is though.		plainOldText
31213077	12.080171	-7.594852	comment	4.0	16.0	1651288991	9.768293	"I've grown a little disgruntled by the hype surrounding Scala's and Kotlin's null handling.For starters ""without null"" is a myth. They both have null. They have to; there is no other practical option...."		mumblemumble
31216131	11.681309	-7.081182	comment	4.0	10.5	1651327115	8.907531	Presumably at 100M simultaneous connections the machine CPU would be saturated with setting up and closing them, without getting much actual work done. TCP connections seem too fragile to make it wort...		mike_hearn
31217973	11.597311	-7.9187703	comment	4.0	11.5	1651342628	10.196459	I think you meant to say 'C Experience'.No C++ coder I know (at least the true C++ coders, e.g. ones who have abandoned the 'Simplicity of C' mantra), find nothing of use in go besides a draconian sin...		psyclobe
31218026	11.661831	-7.9499083	comment	4.0	21.5	1651342994	10.231425	Go is a tool. I haven't seen a language get as much directed criticism on HN in a long time. I appreciate genuine feedback, but only when its useful and direct. I can't remember a time when Java got r...		o_1
31218930	11.602935	-7.922567	comment	4.0	12.5	1651349990	10.258771	> Go has a convention that doc comments must begin with the name of the entity they describe.Does anyone know the rationale for this one? My only guess is that the other common style, where the doc co...		mwcampbell
31220309	11.909793	-7.655136	comment	4.0	16.5	1651359666	0.95116425	"It would be nice to have a language that could treat both strict and lazy evaluation as equally first-class, as opposed to having one be the default (whether ""strict"" as in ML or ""lazy"" as in Haskell)..."		zozbot234
31224009	12.43336	-7.33585	comment	4.0	15.5	1651403538	13.08533	Another benefit of legacy niche languages, such as Perl, is less ageism. Clojure is a real joy to work with. Ruby is in an interesting phase approaching niche status with correspondingly high rates.		cutler
31242655	11.592689	-7.059851	comment	4.0	10.5	1651535867	-7.554833	> One interesting choice is the decision to compute the number of observed words, N, as the default value of an optional argument, thereby ensuring that it is only computed onceYou're saying python co...		version_five
31246583	11.996711	-7.753547	comment	4.0	16.5	1651572969	10.436749	I wonder why this is the case. Ocaml syntax doesn't seem very arcane, it is not hell-bent on functional purism and pragmatically allows for imperative code. Performance seems quite reasonable.What doe...		gpderetta
31246691	12.011696	-7.7658725	comment	4.0	14.0	1651574045	10.376896	The syntax is not great, the standard library is very sparse, and the error messages from the compiler and interpreter are terrible (and used to be worse).  The OCaml team used to treat the native cod...		kragen
31257003	11.867923	-7.4575644	comment	4.0	12.5	1651641457	9.225186	Kotlin's co-routine framework will be able to use Loom style green threads as soon as it comes available. Until then, it uses its own callback based mechanism to schedule co-routines (very similar to ...		jillesvangurp
31151452	12.329196	-7.357197	story	4.0	5.0	1650871050	12.873139	Ask HN: Practical examples of runtime modified software		roeles
31250141	11.938673	-7.726326	story	4.0	63.0	1651594862	10.421808	Modularizing GHC [pdf]	https://hsyl20.fr/home/files/papers/2022-ghc-modularity.pdf	Ericson2314
31273339	11.759902	-7.0689745	comment	4.0	11.0	1651758760	-8.872632	Why not switch to making __slots__ in classes the default and then making attribute changes to an object during runtime an opt-in? It will require a long grace period but wouldn't it help optimisation efforts immensely?		SuaveSteve
31277577	12.087979	-7.845315	comment	4.0	19.5	1651779506	10.442563	"The design of OCaml/Reason is the sweet spot of functional programming for me but every time I must deal with Dune after working with the tooling of Go or Rust I want to stab myself in the face repeatedly and I think that maybe that might just be related to the general concept of ""masses"" + OCaml."		pkilgore
31313620	11.91232	-7.461804	comment	4.0	14.0	1652102112	7.472083	"> so ""pure"" in the title doesn't really make sense.I can see where you're coming from, but I've never used or heard anyone in the web world use ""pure"" to mean only ""written entirely in Javascript with..."		danShumway
31315162	12.464594	-7.498156	comment	4.0	15.0	1652109274	4.2750297	Raw performance is the actual albatross.IMHO, the low raw performance of Erlang is what's holding it back from mass adoption.(Even marquee Erlang/Elixir users like Discord, still have to use Rust NIFs...		alberth
31379783	11.720317	-7.3526306	comment	4.0	15.5	1652546864	-8.796911	There are some edge cases because of which this had to be done, I think. For example calling static methods via the instance variables, the actual method called would be the static type of the variabl...		swaranga
31380641	12.229041	-7.6222353	comment	4.0	12.5	1652551630	11.9391365	"I agree Scala is very powerful. I said messy because it is ""too powerful"", added too many features. I think this is their mistake. I respect the community, but can show my opinion as you can about java."		quilombodigital
31388484	11.810202	-7.4389358	comment	4.0	21.0	1652631170	-8.7518835	"Where you see ""modern"", I see complicated type systems that solve the least interesting pains when programming. What they do provide is a feeling of ""solving a puzzle"" when all your type signatures ar..."		haolez
31388709	11.675922	-7.289775	comment	4.0	10.5	1652632637	-7.5036783	Thanks. But why are methods removed from types defined this way?  Is there a good discussion about this somewhere?		timbray
31400459	11.745321	-7.3951807	comment	4.0	30.0	1652721227	-8.889866	> A language with static types would have made it easier to build correct softwareThis claim is repeated often, but numerous attempts have failed to demonstrate that this is generally the case in prac...		pron
31403067	11.961359	-7.4764676	comment	4.0	11.0	1652734695	7.1224895	He’s not saying functional though, he says the worst version of something, which usually means crappy and unpleasant. Things like that make your life a little worse every time you use them. If it’s so...		imgabe
31395161	11.596689	-7.8991656	story	4.0	79.0	1652694958	10.161797	Calculating Go type sets is harder than you think	https://blog.merovius.de/posts/2022-05-16-calculating-type-sets/	Merovius
31418081	11.66419	-7.911368	comment	4.0	10.5	1652835522	10.173877	> Gophie is written in plain Java for anyone and any systemIt’s a shame it wasn’t written in Go for maximum confusion		teeray
31422534	11.794817	-7.119052	comment	4.0	11.0	1652880682	8.16428	Outside of Java, Kotlin, and Go are there any languages designed specifically for large scale corporate/enterprisey use?		Spivak
31454889	11.67801	-7.0630035	comment	4.0	12.5	1653101858	-8.589212	Did not know about functools.singledispatchmethod, this could lead to some clean code in specific situations. I know I’ve missed overloading a few times!		rolobio
31455812	11.7965355	-7.2126393	comment	4.0	12.0	1653115697	-8.920851	Not that much to be honest. Python is the language that gave dynamic typing its bad name. When I code in Python I must have unit tests even for the simpler of scripts because it's so easy to get a Non...		sph
31458746	12.085393	-7.6199884	comment	4.0	15.0	1653146950	-11.420764	> Why has no one done this before Kotlin?...in reference to nullable types being added1. Languages generally release with this (ie Swift, PHP), rather than add it later2. There is a risk that it won't...		Supermancho
31466265	12.313862	-7.296023	comment	4.0	14.0	1653210769	7.085138	One of the things to appreciate with Pharo Smalltalk is a code snippet isn't a code snippet.Pharo is not a filesystem/.txt coding environment.It's a VM runtime with every single element is indexed by ...		urthor
31466919	11.901643	-7.211319	comment	4.0	18.5	1653218035	-10.023717	I’m perhaps in a similar camp, years of experience during the .NET 4 era, a lot of TypeScript and Rust after that.Recently, I went back to C# for a smaller project. The .NET ecosystem certainly has it...		codeflo
31473613	11.7850685	-7.09613	comment	4.0	15.0	1653260049	8.607884	Java in particular is missing certain language features necessary for easily changing code functionality. This leads to abstractions getting written in to the code so that they can be added if needed ...		ThrustVectoring
31473729	11.771474	-7.219941	comment	4.0	13.0	1653261082	8.600481	Getter and setters are unnecessary. The thing that most people are trying to avoid by using these is mutating state. However a getter or setter does nothing to prevent this. A simple `const` keyword g...		_gabe_
31493051	11.70923	-7.4944577	comment	4.0	19.0	1653404673	9.918538	"Yes, seems like Java generics are an argument against the ""generics allow optimization"" argument. Maybe I misunderstood what he was trying to say."		zwieback
31494881	11.668542	-7.6176467	comment	4.0	10.5	1653412628	10.113539	Please excuse me, I have actually serious questions:Are Generics a solution to a problem caused by programming in OOP?Can someone explain what people did to solve these problems before someone came up with generics?Thank you!		MrYellowP
31517672	12.34884	-7.0620556	comment	4.0	13.0	1653569401	13.168724	"The OP ""What happened to Perl 7"" doesn't say anything about Perl 6!I'm still confused about what happened to Perl 6!  ""replaced with it's new name"" -- googling, that's ""raku"".  So... what was going to..."		jrochkind1
31518582	11.696044	-7.7656054	comment	4.0	13.5	1653574507	10.207558	> #5 Fast compile time... which is an advantage over Python how exactly?Compiled code can have fewer runtime errors, that's a big win. I read this as golang is better than python because it's compiled and golang is better than Java and C++ because the compiler is fast.		8organicbits
31518400	11.653762	-7.8183393	comment	4.0	11.0	1653573487	10.121581	>[Go] is almost as fast as languages like C++ and Java.It seems like only a couple of years ago when Java's speed was the butt of many a joke. The JVM has come a long way. As someone who doesn't work in Java and doesn't have a horse in this race, I find their turnaround impressive.		mcdonje
31520192	11.683186	-7.8602896	comment	4.0	18.5	1653581885	10.165266	For those of us not deeply familiar with Python vs Go, can you share a bit about why gofmt is so much better than the Python status quo (IE what’s wrong with autopep8 mentioned in article?)?		gkop
31519477	11.642301	-7.886936	comment	4.0	20.5	1653578599	10.199112	"Go is successful because it has many appealing features:  1. trivial cross-compilation
  2. native multi-threading (eg no GIL or multi-process hacks) that is easy to take advantage of
  3. fast. An or..."		bloblaw
31547430	11.657898	-7.2233524	comment	4.0	12.5	1653812380	6.811113	A class also acts as a namespace. If computation is complex and requires multiple subfunctions that  you don't want to leak to the global namespace, I think it's totally fine to use a class instead of...		kgeist
31547505	11.834	-7.174371	comment	4.0	18.0	1653813413	-10.088806	"In Typescript I've started doinginterface IHasSaveProject {  saveProject(...): ...

}class HasSaveProject implements IHasSaveProject {  saveProject(...): {...}

}class Controller {  constructor(privat..."		xthrowawayxx
31553715	12.196252	-7.321536	comment	4.0	15.0	1653865144	7.1716957	"It's true. The aforementioned languages not only boil down Smalltalk's object system into a basic ""code sharing"" scheme, they also perpetuate the unnecessary class and instance dichotomy. There is no ..."		trashburger
31554328	12.019384	-7.0735464	comment	4.0	11.0	1653870890	-9.906244	"I think, even in prototype systems, the class-vs-instance dichotomy still exists at a conceptual level, even if the language/runtime doesn't make it explicit. My ""window"" prototype might be the same s..."		skissane
31566938	11.805276	-7.1456165	comment	4.0	12.0	1653981821	-9.032611	My experience with Python is that a mid sized code base does not survive a full staff turnaround. So somewhere around the time the last original author is gone, the codebase becomes a haunted graveyar...		praptak
31568350	11.983617	-7.222879	comment	4.0	10.5	1653996957	9.173843	"There's a similar surprising += 'problem' in JS. If you have the following code:  async function totalSize(fol) {
    const files = await fol.getFiles();
    let totalSize = 0;
    await Promise.all(f..."		ghusbands
31575230	11.626877	-7.3212495	comment	4.0	14.5	1654032862	9.237534	I tend to agree. While asnyc/await (and callbacks and promises before) solves an efficiency problem via compiler magic and language extensions, it's not obvious whether it's necessarily the best solut...		Matthias247
31575456	11.66205	-7.4439664	comment	4.0	11.0	1654034354	9.188555	I don't think you should add something complicated like async/await purely for efficiency reasons, but it's good for expressivity too. Coroutines are good; I think you'd end up inventing coroutines an...		astrange
31603473	11.672035	-7.2708015	comment	4.0	13.0	1654222795	9.177158	The fact that explicit async turned out to be more complicated than expected is precisely why I'm skeptical of loom. When the magic works perfectly it'll be great. When it doesn't...> If I had a dime ...		lmm
31655719	12.017851	-7.7888412	comment	4.0	10.5	1654615408	10.429761	"But for such a monad to be valuable, wouldn't you also need3a. A method for extracting the value from the box    String myValue = Async.val(myAsync);

Or, alternatively, to be able to re-use the entir..."		tremon
31658834	11.991605	-7.736901	comment	4.0	14.5	1654629309	10.435765	I initially tried to learn Haskell by creating a small Physics programming project. It was fun, and I found some great math libraries, but eventually got frustrated by the slow pace and switched to Py...		superb-owl
31659744	12.000509	-7.747144	comment	4.0	18.5	1654634180	10.4384575	"I wonder if the first point is due to a paradox of advanced tools.. society lives around ""how do you assemble teams to solve big problems"", they need organization tricks more than logic/language ones...."		agumonkey
31659591	11.993925	-7.752405	comment	4.0	26.5	1654633199	10.409443	> Haskell is hard.More accurately: Haskell is particularly hard for a procedural programmer to learn  in comparison to a new procedural language and the time spent learning prior to being as productiv...		aranchelk
31664848	12.025235	-7.8053637	comment	4.0	12.5	1654678627	10.403565	If you want to do web development with Haskell beyond building a blog generator, a good starting point is IHP (https://ihp.digitallyinduced.com/ https://github.com/digitallyinduced/ihp). IHP is Haskel...		_query
31673540	11.63337	-7.4666896	comment	4.0	11.0	1654720082	-3.2697108	"IMHO, the ""turbofish"" syntax (popularized by Rust) is ugly and should not be used. The reasoning of syntax ambiguity is also a lame one because C# manages just fine without it. But to then say that:> ..."		colejohnson66
31692976	11.706566	-7.080778	comment	4.0	19.0	1654863259	14.2376	I don't think there's an issue with depending on libraries that are big. If the library is just a big bag of classes from which you cherry-pick the ones you need, then the extrapolation on the number ...		EdSchouten
31695511	11.959388	-7.0550585	comment	4.0	16.5	1654874909	8.318395	HeartBleed, Spring4Shell, LogJam, Struts, Jetty and many more beg to differ.More LoC is always a greater attack surface, regardless of development trustworthiness.Minimize code ruthlessly.		cvccvroomvroom
31714158	11.855666	-7.6073155	comment	4.0	12.0	1655038923	10.287591	"Y combinator in Haskell  fix :: (a -> a) -> a
  fix f = f (fix f)

Y combinator (with sharing)  -- https://hackage.haskell.org/package/base/docs/Data-Function.html#v:fix
  -- https://stackoverflow.com..."		Iceland_jack
31736644	12.1651945	-7.558112	comment	4.0	12.5	1655199989	-11.393469	"""finally"" in Java and afaik ""val"" in Kotlin because of it are a bit of a sham: They work fine for primitives, but for reference types only apply to the object identity. You can still mutate the pointed-to object willy-nilly."		skitter
31749445	12.283212	-7.511854	comment	4.0	10.5	1655271093	12.856888	Yet again another threading implementation which ignores the Actor programming model. This must be a systemic failure in both academia for not teaching students about Actors, and the industry for bare...		smallstepforman
31752456	12.088394	-7.5059276	comment	4.0	22.5	1655299211	-10.589171	"Exactly. Functional programming has been around for quite a while, it just recently became the FAD of the day, just search youtube for ""functional programming in javascript"". This will fade away in ju..."		mm007emko
31752781	12.063568	-7.7479224	comment	4.0	15.5	1655300695	10.437502	Functional programming is not just the FAD of the day. This is evident by the strong presence of functional programming in Rust, an imperative language. Functional programming is also the foundational...		nouveaux
31753051	11.917498	-7.4183207	comment	4.0	11.5	1655301848	7.1813602	I dare to disagree - I still think that functional programming is a FAD of the day right now. Like object oriented was the FAD of the day in the 1990s and many then procedural languages saw OOP extens...		mm007emko
28818870	11.670315	-7.5997615	comment	4.0	12.0	1633877465	10.062889	I doubt that would help, since generic code is implicitly inline.		marton78
28821877	11.6215	-7.3266954	comment	4.0	12.5	1633899186	9.14941	Yes, lots of them are available. But I also would like to be able to call .sum() on my iterable at the end of a chain, instead of having to mentally unwrap sum(map(filter(filter(map(...))))		matsemann
28842837	11.866825	-7.5133414	comment	4.0	21.0	1634061367	10.410888	> Barely typed languages like C made rigorously typed languages like C++ and Java seem appealing. The boilerplatiness of those languages made duck typing seem appealing.Eh, I consider Java to be barel...		ebingdom
28844097	12.147022	-7.8771443	comment	4.0	10.5	1634067455	-3.192265	"> Programming with category theory. Category theory has a deep application in the study of functional programming languages. We hosted discussions for an MIT course on this topic, and encourage their continuation in the present.What does this have to do with ""saving the planet""?"		Jensson
28845337	12.159291	-7.889149	comment	4.0	15.0	1634074300	-3.2114975	"I'm sorry, but studying category theory to save the planet sounds like something straight from 'the Onion'. 
For sure there are topics that (IMO) are worth studying to save the planet, i.e. physics, p..."		sega_sai
28847962	11.928399	-7.0559516	comment	4.0	15.5	1634096130	-6.4198456	This is a pretty low-quality post. Of course you can pick on Java for shoving every feature into a class. That says nothing about classes in general.Printing: Java is verbose because it requires a cla...		spankalee
28847976	11.920082	-7.355047	comment	4.0	15.5	1634096301	7.045957	As a professional dev who has made a career out of working in oo languages and codebases, I agree, and it took me far too long to realize that when it comes to oo, the emperor has no clothes.To this d...		bedobi
28860502	11.687005	-7.6613564	comment	4.0	12.0	1634185478	10.32479	Haskell does not really have pointers, but let's say it does (or that ioref fulfills it). How would you then (as an example) declare an array of pointers pointing to functions accepting int and returning float declare in Haskell?		andi999
28861376	11.797891	-7.1325026	comment	4.0	12.0	1634195569	5.267131	"The problem with design patterns is that it's far too easy to ""apply existing solutions"" to problems that don't exist.Design patterns can definitely be useful, but only when used sparingly and if they..."		jordwest
28864045	12.1237	-7.5047145	comment	4.0	14.5	1634218651	-10.578168	I've had good experiences running F# on Linux. I used it to build an API generator from database schemas [0]. Similar to Go you can get a single static binary you can copy anywhere.It's very convenien...		eatonphil
28864347	12.116897	-7.2341638	comment	4.0	14.5	1634220205	-10.401254	> the Microsoft .net core compiler is FOSSOh, I didn't know that.Very cool.Can I apt-get the toolchain?[EDIT]: and for those interested, here's the github repo:https://github.com/dotnet/fsharp/		ur-whale
28875257	11.663694	-7.018899	comment	4.0	11.5	1634282526	8.753558	How is it implemented in Java or C# if not via runtime reflection? I've always assumed that's the way its done...		spoiler
28876963	11.689086	-7.3424854	comment	4.0	15.0	1634300558	-6.2267795	It's really surprising that it's rare in functional languages. Immutability seems like it should guarantee no cycles (?), so reference counting could be used.		silon42
28881581	11.909088	-7.0812154	comment	4.0	13.5	1634324022	-10.742247	What specifically is the problem with asyncio? I quite like using it, so I'm curious if there's some aspect that makes it unsustainable?		tbabb
28882194	11.877656	-7.077928	comment	4.0	10.5	1634326945	-10.762053	Multiple threads with one asyncio loop per thread would be absolutely pointless in Python, because of the GIL.With that said, sure, threads and asyncio are complimentary in the sense that you can run ...		dralley
28895734	11.655744	-7.9494843	comment	4.0	16.5	1634470619	10.239704	> Still great to see things improving. It took mere 11 years.Took that much time because of little clique of people outside the go team had way too much influence in the Go community. Let see if they ...		throw_m239339
28896761	11.734932	-7.8085833	comment	4.0	11.5	1634481373	10.168149	The negative is that some issues are really hard to fix, because you don’t want to break the backwards compatibility guarantee.For example, there is a bug in go’s built-in HTML templating, that it mis...		shp0ngle
28898683	11.601123	-7.033075	comment	4.0	19.5	1634496102	-10.458812	"I simply do not understand how the walrus operator is harder to read. Maybe an example?    my_match = regex.match(foo)
    if my_match:
        return my_match.groups()
    # continues with the now us..."		DangitBobby
28909050	11.795911	-7.3390393	comment	4.0	14.5	1634580928	-8.888151	Consider these 4 possible combinations for programming languages:(1) Low-level, static types(2) Low-level, dynamic types(3) High-level, static types(4) High-level, dynamic typesFor whatever reason, hi...		adrianmonk
28916488	12.09071	-7.1197777	comment	4.0	21.0	1634637413	7.495624	What people like to blame Java for, was already common practice in enterprise C, C++, Smalltalk, VB and Delphi before the language came to be.Why do you think the Gang of Four book uses Smalltalk and C++ without any traces from Java?		pjmlp
28916634	11.605344	-7.9322	comment	4.0	17.0	1634639183	10.185676	Always happy to see my articles (or in this case, rant!) posted on HN :)This was written after comparing a ~300K SLOC Go project to it's original ~800K SLOC Java project at work, that we've rewritten ...		fredrikholm
28919793	11.669515	-7.867423	comment	4.0	13.0	1634659912	10.201525	I've stopped recommending Python for learning programming, and instead have started recommending Go.Python's environment difficulties make it exponentially harder for beginners to focus on actual prog...		shakezula
28920212	11.711978	-7.0763297	comment	4.0	11.0	1634661830	8.900352	Seems to be trying to solve a problem that I would consider an anti pattern (attempting to 1 line everything). Someone else mentioned temporary vars and I think thats appropriate and equal if not bett...		thomas_moon
28923022	12.279309	-7.207587	comment	4.0	13.0	1634673903	-8.280126	Along with Fable highly recommend a look at Feliz.  A joy to work with and its ViewEngine can also separately be used w/ Giraffe just for the syntax:https://zaid-ajaj.github.io/Feliz/https://github.com/Zaid-Ajaj/Feliz		kirse
28924785	12.338898	-7.422871	comment	4.0	16.5	1634684271	12.727129	It's funny to hear someone say so many nice things about Akka.I work with Akka streams, actors and http every day and and while I agree that Akka is really well documented, incredibly powerful and as ...		binwiederhier
28932112	12.322047	-7.0400286	comment	4.0	11.0	1634744716	13.174894	"The real problem with these kinds of posts is the equivocation in the word ""dead"".People wanting to defend languages (also APL lately) want to implicitly use a definition something like ""0 people are ..."		jerf
28976155	12.234958	-7.5354834	comment	4.0	19.5	1635066853	-11.432766	Pretty much 95% of this list is why Kotlin is my primary programming language now. It's more productive because it accomplishes almost everything on this list out of the box on IntelliJ IDEA. The only...		jpgvm
28980532	12.262521	-7.5976877	comment	4.0	14.0	1635099481	-11.388493	I don't think Scala ever could have filled that niche, I say this as someone that wanted Scala to be successful.The truth of it is that Kotlin is incredibly easy to learn, even for non-Java devs. It i...		jpgvm
28983617	11.664704	-7.8869715	comment	4.0	11.0	1635125481	10.174462	Go doesn’t have the libraries of python however. In certain computing domains you would first have to spend 10 years rewriting the python frameworks in golang before you could even be on parity with p...		__turbobrew__
28981947	11.976126	-7.2046127	comment	4.0	11.5	1635109794	7.1560707	>  Counterpoint: it's become a fairly multi-paradigm language at this point, and a multi-paradigm language is exactly what should be the defacto language in curriculumsI'm surprised you would say this...		Athas
28984439	11.643435	-7.979829	comment	4.0	21.5	1635135073	10.285495	Whole heartedly agree.  I was big into Go years ago, and some newer guys tried to make it a functional language.  When they argued with me, I couldn't say 'its's just not right', but instead pointed them to std library code.Protip:  That doesn't change their mind, it just makes them hate Go.		silisili
29007851	11.812032	-7.381858	comment	4.0	13.5	1635291610	-10.0059185	I cut my teeth on Lisp, but I've found that happiness comes from compile time guarantees. Maybe those two things aren't mutually exclusive, but a thoroughly robust type system seems like a big ask in ...		jim-jim-jim
28884838	11.699556	-7.425352	story	4.0	6.0	1634347394	10.130473	Ask HN: What's the word for when your type 'compactly' represents your state?		sidedishes
28895622	11.616851	-7.2432675	story	4.0	85.0	1634469371	-8.779941	A λ-calculus interpreter written in C preprocessor macros	https://github.com/Hirrolot/metalang99/blob/master/examples/lambda_calculus.c	Hirrolot
28904863	11.614134	-7.5563726	story	4.0	15.0	1634561394	9.31953	The Function Colour Myth, Or: async/await is not what you think it is	https://lukasa.co.uk/2016/07/The_Function_Colour_Myth/	pcr910303
28921541	12.159817	-7.508724	story	4.0	47.0	1634667792	-10.641338	What’s New in F# 6	https://devblogs.microsoft.com/dotnet/whats-new-in-fsharp-6/	paavohtl
29023085	11.621176	-7.950441	comment	4.0	14.5	1635403158	10.238535	It's funny how codegen has become widespread in Golang to work around its deficiency.		EdwardDiego
29023813	11.664116	-7.265514	comment	4.0	10.5	1635410675	9.334352	"I've come to prefer code quantity over code complexity. I mean, what the fuck is    def traverseImpl[F[_], A, B](fa: Option[A])(f: A => F[B])(implicit F: Applicative[F]) =
      fa map (a => F.map(f(a))(Some(_): Option[B])) getOrElse F.point(None)"		Cthulhu_
29025111	11.711961	-7.2362223	comment	4.0	14.0	1635423182	7.053212	If there was a single feature I could see added to Blender, it would be to share more functionality between objects and collections. Blender has an organizational concept called objects, which are con...		ralusek
29035383	12.200566	-7.348743	comment	4.0	13.5	1635484487	6.910124	So wasn't this part of the original dream for Smalltalk? Then this would seem to be coming full circle: Smalltalk, Objective C, Swift and back. I know some of you are Alan Kay fans so maybe you can comment on that aspect.		guerrilla
29038633	12.294271	-7.5359397	comment	4.0	14.0	1635516815	12.832219	This is awesome, I'm always looking for more competition in the distributed actor model/system space.So now we'll have Akka, Elixir, Erlang and Swift as options. Pretty exciting!edit: Rust's Actix too!edit2: jk Actix is only local.		halfmatthalfcat
29052143	12.300236	-7.195221	comment	4.0	14.0	1635626579	9.515762	On a tangential note.> Async Ruby is colorless!I find it deeply irritating that this is how we choose to describe things these days. Rather than talking about modality, or even using a few more words ...		nixpulvis
29076126	11.931223	-7.7664127	comment	4.0	15.0	1635819668	10.365999	"  >  Not sure why you'd take that attitude though, really not a great way to get across whatever point you think you have

My point is that Haskell is older than I am, and still hasn't figured out to ..."		gavinray
29100088	11.894329	-7.2472525	comment	4.0	15.5	1635972630	-10.412414	Explanation:A record is a set of key-value pairs with the value having a given type (also called a struct, object, etc. depending on the context). In TypeScript, this is an example of a record:    con...		arxanas
29105760	11.976507	-7.5195575	comment	4.0	29.0	1636025625	7.2847524	"I always feel like functional programming languages start with some math major looking at traditional OOP code and thinking ""ITS TOO READABLE!!"""		pelagicAustral
29120317	11.708973	-7.206875	comment	4.0	14.5	1636124819	9.080492	Does anyone expect async anything to be faster?AFAIU async enables greater scalability by allowing computation to continue in other contexts while awaiting read/write operations - at the cost of slightly lower single context performance.		rjbwork
29120471	11.871846	-7.055639	comment	4.0	12.5	1636125431	-10.715162	Not sure about Python's async story, but in Node.js it is essential if your program's performance is I/O bound. There's no reason to let a thread stay idle while waiting for a database operation to finish.		davidkunz
29120585	11.797723	-7.22191	comment	4.0	21.0	1636125835	-8.835562	I appreciate and agree with the attitude/approach here.I suspect the author may be a bit removed from modern python, as the community is increasingly taking a similar stance. Python is not Haskell, bu...		claytonjy
29123397	11.636632	-7.868863	comment	4.0	13.0	1636138742	10.236103	Ok, now, what languages beside Python and Go provide Command line argument parsing? And Go doesn't do that in a `professional` way. You either write your own, which can easily turn into a clusterfuck ...		megumax
29132334	11.980379	-7.74183	comment	4.0	22.0	1636221604	10.457343	I always remember SPJ’s chart in a short jokey video “Haskell is useless” https://youtu.be/iSmkqocn0oQReally made me see things clearer.		willvarfar
29139874	11.72315	-7.462638	comment	4.0	10.5	1636296753	10.378615	>It's so much fun to look at a chain of generic functions working on a generic data structure, while keeping the code clear. Makes me feel all warm inside.Yeah, that’s usually a bad sign. Programmers ...		aaaaaaaaaaab
29028731	11.894296	-7.2381744	story	4.0	2.0	1635442610	7.059197	Ask HN: Is the Java OO model really broken and does C# provide a better model?		Danao
29116057	12.338346	-7.4252977	story	4.0	89.0	1636093603	12.693526	On the future of Akka and Lightbend	https://discuss.lightbend.com/t/on-the-future-of-akka-lightbend/8997	yiksanchan
29163283	11.652125	-7.9776063	comment	4.0	23.5	1636472893	10.251873	Something I don’t see the Go team get enough praise for is their ability to bring major language changes like generics into the language in an actually backwards compatible minor version update.If not...		shakezula
29164245	11.645692	-7.6339593	comment	4.0	13.0	1636477402	10.13556	"Dreading the wave of shitty badly-thought-out library ""updates"" to include generics (and the wave of shitty new libraries from people who never learned how to use interfaces and now think they know ho..."		marcus_holmes
29200109	12.481606	-7.098787	comment	4.0	20.5	1636730638	12.379554	The discussion of Ruby could use a mention of Enumerable.https://ruby-doc.org/core-3.0.2/Enumerable.html		DFHippie
29208531	11.660085	-7.3698673	comment	4.0	18.0	1636794981	9.1767025	Excellent post. Async ruins everything even in GC languages. It's just making things needlessly hard for programmers in an attempt to save effort from computers. Erlang shows how to do massive scales of slow IO if you really need it (most programs don't).		fulafel
29209567	11.954809	-7.2126064	comment	4.0	13.0	1636810398	9.124983	Can someone explain to me the attraction of async programming?I don't really do JS, where a lot of this seems to be happening, but the code I have seen with the huge ladders of callbacks doesn't seem ...		gerbilly
29213776	11.834977	-7.128622	comment	4.0	12.5	1636843035	-10.351617	The idea is to let users of a language, here CLOS, to be able to intercept meta-messages like instance creation, method call, property access, etc to provide their own implementations.It's like the do...		_old_dude_
29214714	11.678362	-7.3514614	comment	4.0	10.5	1636852827	-8.947654	That’s a bad idea though, and the past 30+ years of OOP has laid-bare all of the problems associated with not having compile-time object type safety. Just because you can do something doesn’t mean you...		DaiPlusPlus
29220164	11.618475	-7.1201916	comment	4.0	13.0	1636920436	8.936671	Related to that, do heterogenous lists make sense as a default? I can see the argument for dictionaries easily, you might want to put a lot of different stuff inside one. However, for lists, I fail to...		Zababa
29224830	12.279146	-7.306286	comment	4.0	14.0	1636962111	7.0842886	> instead of spending thousands of dollars a seat on Envy/developer.It wasn't the cost of Smalltalk that was the problem, as there were low-cost implementations of Smalltalk, such as Smalltalk/V available on PC from the mid 80s onwards.		cabalamat
29225891	12.117514	-7.0292597	comment	4.0	19.5	1636973107	7.5658207	It was certainly Java, as many early adopters were former Smalltalk vendors, e.g. IBM.		pjmlp
29227082	12.222991	-7.2523937	comment	4.0	11.0	1636982946	7.092124	>It wasn't the cost of Smalltalk that was the problem, as there were low-cost implementations of Smalltalk, such as Smalltalk/V available on PC from the mid 80s onwards.Smalltalk/V on DOS (1980s) had ...		jasode
29225593	12.240918	-7.303052	comment	4.0	10.5	1636969713	7.1375566	Not sure why you say Smalltalk is concept heavy. There are much less concepts in Smalltalk then in most other languages.		kohlerm
29236929	11.600008	-7.504347	comment	4.0	21.5	1637037612	9.452489	Yes. But, since there are _two_ kinds of threads in Java (os and virtual), you still have to be very careful never to block a virtual thread. In Go/JavaScript/Beam, it doesn't matter because you liter...		pkulak
29238137	11.649325	-7.973688	comment	4.0	12.0	1637050297	10.259891	I've watched some of Mark Rendle's talks (like this one https://youtu.be/2-mFWi5oLkM) and while watching it I realized how much I dislike when languages start to absorb ideas that are either alien to ...		bborud
29248494	12.022128	-7.078311	comment	4.0	10.5	1637113339	-9.464875	Can anybody who has done both compare TypeScript's gradual typing with Python's?		wpietri
29261975	11.633037	-7.0744963	comment	4.0	17.5	1637209596	-6.7245326	Fine: python, ruby, go, rust, elixir, c, java, javascript, plenty more.Pick whatever you want. Just don't pick a language that is known to be on it's last legs.		anm89
29267094	11.915343	-7.5709667	comment	4.0	14.0	1637252075	10.133026	We should switch to using pure functional languages by default. Most of the packages don't need to do any side effects and only perform pure calculations. In a pure functional language it is obvious f...		3r8Oltr0ziouVDM
29273173	12.250466	-7.1562123	comment	4.0	38.5	1637289553	-8.998405	This is a set of statements that strike me as pretty unreflective of the state of things these days. I have slung a lot of Ruby in my life and I literally-not-figuratively stopped the second I laid my...		eropple
29273238	12.067484	-7.2589684	comment	4.0	21.0	1637290225	-8.894171	The static languages I've used most are actually Haskell and recently Pony (mostly for things that involve a bunch of maths and processing in parallel).  Just brought Go/Java up because it seems every...		Mikeb85
29273527	11.776942	-7.365144	comment	4.0	20.0	1637293053	-8.903913	> But that's a pretty out-of-date takeGradual/optional static typing are not new ideias. It’s just that they are fashionable now.It used to be that not having to deal with types at all was the cool pl...		tambourine_man
29273886	11.755791	-7.151989	comment	4.0	13.5	1637296558	-8.850466	I started using dynamic languages since around 2008 (Python and Javascript). Before that I was more into C/C++.Granted, I've only written C in University settings where I'm writing small programs. I h...		hsn915
29274258	11.641511	-7.900385	comment	4.0	10.5	1637301165	10.238947	Have you wrangled with JSON using Go? Absolutely dreadful.Have you written multiple microservices in Go? The lack of an opinionated framework often means that each microservice contains code that is o...		mykowebhn
29291180	11.999962	-7.7604322	comment	4.0	12.0	1637437149	-9.765326	Functional programming with monads is the right way to implement this.		kjhughes
29294906	12.068163	-7.800517	comment	4.0	11.5	1637482309	10.431421	Would OCaml be a good language to use here? It would be my first time in AoC, want to learn OCaml as well.		divtiwari
29165577	12.190558	-7.4684825	story	4.0	34.0	1636483329	-10.592778	F# 6 is officially here	https://devblogs.microsoft.com/dotnet/fsharp-6-is-officially-here/	phillipcarter
29212447	11.993517	-7.750529	story	4.0	10.0	1636831217	10.4445715	Writing about Haskell is Hard	https://anthony.noided.media/blog/thoughts/haskell/languages/2021/11/05/writing-about-haskell-is-hard.html	danidiaz
29238972	12.078293	-7.8613367	story	4.0	111.0	1637058710	10.43502	Multicore OCaml: October 2021	https://discuss.ocaml.org/t/multicore-ocaml-october-2021/8822	d3nj4l
29275887	11.751838	-7.2839017	story	4.0	77.0	1637319003	8.677327	Effekt – A research language with effect handlers and lightweight polymorphism	https://effekt-lang.org/	atombender
29283770	12.1937	-7.036905	story	4.0	33.0	1637363420	13.13331	The Raku Programming Language	https://www.raku.org/	dunefox
29307479	12.140886	-7.605187	comment	4.0	11.5	1637595371	-12.778779	There's been a longstanding issue that a lot of people are unhappy with the level of control that Evan exercises over the development of the language. On top of that, a lot of the development of the c...		foldr
29314941	11.6367445	-7.918811	comment	4.0	14.5	1637646209	10.181028	One should be careful about these mega-interfaces that define an entire subsystem of your application (DB in this case).  They are very painful to maintain, and add almost no value.  Interfaces should...		jrockway
29317631	11.809555	-7.1830544	comment	4.0	11.5	1637674797	-8.964491	Type checking in Python is a complete waste of time and only leads to a false sense of improvement.  People use type annotations for the same reason they wear a shirt in the pool, it feels weird to no...		ltbarcly3
29319390	11.729188	-7.477836	comment	4.0	12.0	1637683460	9.746864	Type erasure gets blamed for too much. Want to see some languages that make generics sing? Take a look at SML, Haskell, or Rust. What's another interesting characteristic that unites them? They erase ...		mumblemumble
29320904	11.6168785	-7.4489856	comment	4.0	10.5	1637690325	-8.847677	> You require a pretty strong type system to make static lifetime management workGo is strongly and statically typed.		IceWreck
29355307	11.600591	-7.110804	comment	4.0	17.0	1637968668	-7.021831	Err.. I'm too drunk to check, bit I'm fairly sure C# has had operator overloading for like ten years?Having worked recently in it, I found Java to be relatively (as a language, not for tooling) backwards compared to C#.		moritonal
29365262	11.8752165	-7.2227902	comment	4.0	10.5	1638061761	6.952696	Is there a good book on object oriented programming for beginners? By beginners I mean people who code regularly but aren't software engineers.		JavaBatman
29388541	11.778814	-7.316689	comment	4.0	12.5	1638242342	7.157724	"How would one optimize for immutability in this case, other than turning it back into mutability behind the scenes? I've certainly seem some code written in an ""immutable"" style where it was pretty cl..."		notacoward
29422713	11.6031065	-7.8745255	comment	4.0	11.0	1638479784	10.135787	I'll be slightly contrarian here... the Go concurrency model is not the panacea and channels are overused. It works brilliantly for certain types of usecases (straightforward producer consumer usecase...		avl999
29431465	11.739267	-7.2934046	comment	4.0	11.0	1638547377	7.1415057	No, because you can absolutely abstract over data if it is encapsulated, which is the whole trick of objects,You can use a Point from any vendor, without caring if it has x and y, or r and theta, or some other representation inside, as long as it correctly implements the specified interface.		twic
29436902	12.41449	-7.0507016	comment	4.0	11.5	1638573696	-9.612435	No one wants a CLI in Ruby, and if you look arround there is no popular CLI written in Ruby it's one of the worse language to write CLI in because no one has the Ruby runtime installed on their machin...		Thaxll
29442672	12.369224	-7.0333304	comment	4.0	17.5	1638640458	12.364441	"Interesting!I noticed ""It can also be used for annotating other kinds of text"" and wanted to experiment with being able to number specific letters in a string.More specifically, SMILES is a linear mol..."		dalke
29452214	11.614459	-7.2073197	comment	4.0	17.5	1638732638	9.000409	I'm quire confused about the benefits of async I/O over a blocking thread pool. I can't reconcile the many claims I've read. Everyone does seem to agree that most people don't need async, but past tha...		ai-dev
29506496	12.252662	-7.6464753	comment	4.0	26.0	1639111562	11.904702	"Scala is an organizational red flag for me, especially if their recruiters are looking for ""scala engineers."""		coffeecloud
29507771	12.143287	-7.8748274	comment	4.0	12.0	1639125622	-3.1916006	Everytime the “go learn category theory if you want to become a better programmer” trope arises on HN (less often than it used to, but still occasionally) I’m left scratching my head. I actually learn...		hyperbovine
29510916	11.607856	-7.9280534	comment	4.0	20.5	1639149808	10.279439	"What a delight to read, even as somebody who has barely used Go. I really appreciate the author's self-awareness as demonstrated in things like ""Expected problems that weren’t"".The bits about exceptio..."		wpietri
29531392	12.330034	-7.030593	comment	4.0	13.0	1639329393	13.174432	Never thought I'd see the day where anyone was advocating using Perl for cryptocurrency purposes, let alone cryptography.I know, I know, it's not Perl anymore, but still. Life is stranger than fiction.		xyzzy_plugh
29558539	11.625895	-7.911169	comment	4.0	13.0	1639519111	10.239606	"I'm not sure I like this change. I liked interface{} since it just works out naturally from Go's relatively simple type system, and anyone could come to the conclusion without actually being told ""use..."		moth-fuzz
29560735	11.603955	-7.9194875	comment	4.0	10.5	1639531069	10.159242	gofmt -w -r 'interface{} -> any' srcIs this a real command? If so, I’m very impressed. Is there any equivalent for c++ and other languages?		blahgeek
29560810	11.636159	-7.569681	comment	4.0	13.0	1639531555	10.093133	I feel like this is perhaps a bit of a gap in semver tbh. Sometimes a purely additive change can be quite major, in the sense that it shifts the thing in such a fundamental way that you are unlikely t...		stormbrew
29565099	11.646107	-7.939741	comment	4.0	19.5	1639571586	10.22949	No more complaining about lack of generics, yeah! But you will still have people complaining about error handling in every single discussion about Go		dgellow
29565621	11.664768	-7.2583027	comment	4.0	15.0	1639575093	-8.803302	"Re. 3 & 5: my theory is that a language with gradual typing, gradual error handling enforcement, and ""gradual proving"" that is seamlessly embedded in it (see e.g. the https://nim-lang.org/docs/drnim.h..."		akavel
29574810	12.154421	-7.5068746	comment	4.0	13.5	1639628537	-10.619667	The bad of F# is trying to find work in F#. I have the freedom to choose F# at work but it often seems like the wrong choice. If I want a web app I'm pulling in so many extra dependencies.		xupybd
29581753	11.599919	-7.9532948	comment	4.0	21.0	1639678983	10.238013	"That’s a welcome feature even though I don’t like the syntax.
But Go could become the perfect language if they just fixed error handling and a couple small annoying quirks."		dsnr
29584564	11.651276	-7.9261103	comment	4.0	21.0	1639692005	10.218477	I have never needed generics in Go, and I've probably been using it since 2017. I've never even once had to resort to any interface{} trickery to express what I want, and I've written Go programs for ...		horsemans
29586082	11.749923	-7.6247854	comment	4.0	12.5	1639701254	9.925247	> func (o Option[T]) Map[U any](f func(a T) U) Option[U] { ... }This is totally opinionated, but I better not see code like this on a review. Is there a way to make it a bit more readable and a bit less like Perl?		SergeAx
29592630	12.01924	-7.7323623	comment	4.0	21.0	1639751522	10.412313	I have the feeling that Haskell has one feature that could be super useful for security.That feature is the explicit typing of effects via monads. Just look at the recent log4j example: If effects wer...		choeger
29593257	11.9784155	-7.73267	comment	4.0	18.0	1639754222	10.418134	> I have the feeling that Haskell has one feature that could be super useful for security.>> That feature is the explicit typing of effects via monads. Just look at the recent log4j example: If effect...		lelanthran
29593841	11.758656	-7.7283134	comment	4.0	21.5	1639756376	10.358868	Could you give an example of something that is simple to express in Haskell, but harder and error prone to express in Go/Rust/[other imperative languages]? Honestly curious!		spekcular
29594762	11.975385	-7.5855618	comment	4.0	14.5	1639759909	10.317357	I like functional programming, but the way Haskell or Ocaml are built makes it really hard to consider them seriously for anything but research and/or fooling around.		turminal
29598667	11.817908	-7.2774534	comment	4.0	11.0	1639777210	10.367349	So... is there a difference between structural typing and duck typing?		twofornone
29611611	12.120473	-7.1896334	comment	4.0	12.0	1639891562	7.03372	Why would anyone think that a verbose language is a good idea?Explicit? Sure.But verbose?There's no good reason for that, except that when Smalltalk was designed, we thought it was a good idea.We know better today.		hota_mazi
29638937	12.0083685	-7.7440314	comment	4.0	15.0	1640104131	10.432768	Actually OCaml has more operator stew than Haskell. Haskell's use of typeclasses/HKT avoids a lot of operator/function-name noise in the code.Where OCaml wins is that it does not hate mutation. This m...		sidkshatriya
29639787	12.116881	-7.626584	comment	4.0	11.5	1640108141	-10.6988	"> F# is a ML/OCamlNo. F# is an ML dialect, like OCaml. But, you should be aware that the ""O"" in ""OCaml"" actually means something. OCaml comes with beautiful object system that's prototypal in nature a..."		klibertp
29663111	11.642121	-7.9765105	comment	4.0	10.5	1640275376	10.24202	I wonder when someone will code GoL inside GoL		netizen-936824
34121169	11.841401	-7.3998866	comment	4.0	16.5	1671916702	7.2900996	"I often find myself thinking: ""But how would I do any of these without reaching for mutation? So that I can later parallelize them?"" And then I come up empty. I still need to work through ""Purely Func..."		zelphirkalt
34137725	12.477893	-7.0323944	comment	4.0	15.5	1672063966	12.399818	I don’t have a ton of love for Python now that I’ve moved on to static typing but it’s hard for me to see myself choosing Ruby over Python for anything.Python has gotten significantly faster, has stat...		skrtskrt
29614116	11.983971	-7.7381544	story	4.0	15.0	1639923502	10.415351	Dragging Haskell Kicking and Screaming into the Century of the Fruitbat	https://reasonablypolymorphic.com/blog/century-of-the-fruitbat/	jessaustin
34189793	11.826144	-7.2003217	comment	4.0	20.0	1672432619	-8.997342	Python has optional type annotations. Most new code tends to have them, and they help tremendously navigating and understanding large codebases.		ruuda
34190535	12.175797	-7.240066	comment	4.0	11.5	1672437085	12.827799	Jose has been working with some PhDs to attempt to implement static typinghttps://elixir-lang.org/blog/2022/10/05/my-future-with-elixi...In the meantime I don’t know what people have against using @sp...		h0l0cube
34191043	11.824566	-7.156685	comment	4.0	11.0	1672440463	-9.051667	I've used Mypy since 2016 on big as well as small codebases, and it has been extremely useful for me. It caught numerous bugs at typecheck time. The benefits of better readability and e.g. better jump...		ruuda
34191084	12.015217	-7.330234	comment	4.0	15.0	1672440729	12.912034	I really don’t get this, personally. I’ve worked in Java, Ruby, Typescript, Elixir, JS, and a bit of Elm and I literally never feel like I’m missing anything by not having static types in Elixir. This...		ch4s3
34191119	11.745407	-7.384609	comment	4.0	11.0	1672441030	-8.855874	For me personally, this is not the case. I work in multiple languages, some static, some not. And I have as many bugs in the one as the other. I add strings to numbers less in static ones, but I tend ...		travisgriggs
34192132	11.767198	-7.3239465	comment	4.0	10.5	1672448688	-8.906903	I don’t think you need a “formal education” to see the benefits of strong typing. Whether someone is attracted to it or not probably has more to do with their specific use case.Strongly typed language...		hnarn
34192294	11.785396	-7.1457086	comment	4.0	11.0	1672449717	-7.295295	Multi line anonymous functions. An anonymous function is just as good as a true function in JavaScript.Lambdas are incredibly limited and encourage the declaration of a whole separate function that no...		code_runner
34208205	11.89333	-7.3653264	comment	4.0	13.0	1672593109	7.105647	I believe that combining state and functionality - the root of OOP - is a mistake. Tons of programming patterns and concepts exist to solve this fundamental mistake. When you stop using classes all of...		monero-xmr
34209317	11.841217	-7.300218	comment	4.0	12.0	1672598716	7.0510473	I've always found OO programming completely natural. n fact, it's the only kind of programming i've ever really done - create a structure with data members, and then create functions to work on that s...		zabzonk
34210445	11.694846	-7.2642136	comment	4.0	11.0	1672604519	9.416478	I didn't fully grok OOP until I saw how composition and dynamic dispatch can be used in real code to create abstractions and flexibly swap out different implementations for your interfaces.You could b...		czx4f4bd
34216315	11.7048025	-7.1920667	comment	4.0	11.0	1672654703	-5.1324596	>Avoid bugs related to mutable state.And generate a lot of overhead both in execution time and memory. Which is unacceptable in games where every ms counts.>Games tend to define update() functions whi...		tkrskxyz
34219077	11.884434	-7.455464	comment	4.0	14.0	1672674186	7.128075	I completely agree. That functional style actually favors readability and maintainability is a quite strong claim which I read often but it's usually lacking evidence.In my experience, software engine...		haleudo
34233546	11.976558	-7.5823336	comment	4.0	14.0	1672763179	9.73185	"Class invariants are fundamental to Functional Programming tooThey are the core principle our of much-beloved Lexi Lambda's ""Parse, Don't Validate"" approach.One example might be a dataclass called ""No..."		gavinray
34243252	11.751356	-7.3577724	comment	4.0	11.5	1672819788	-8.849394	What's status of static typing checking ?		revskill
34244114	11.645708	-7.163188	comment	4.0	19.5	1672828965	9.165295	Map/filter are considered inferior in Python to list comprehensions.  res = [x**2 for x in range(10) if x != 5]		samwillis
34252517	11.70065	-7.25744	comment	4.0	10.5	1672869751	-8.075479	Well, what? My objection is calling a closure for “nested function”, a term I’ve never seen for such a thing.		keybored
34256949	11.600581	-7.0268273	comment	4.0	11.5	1672902405	-7.1315346	"Exactly, that's the ""c is cross platform"" way. What java offers is that you compile once and you can run the same binaries on any platform (hence freely switching OS as Bill Gates feared). But who use..."		cm2187
34266856	12.473049	-7.794033	comment	4.0	18.0	1672953973	-11.16847	Clojure’s loop expression hits this spot for me. It sets a recursion point to which you can jump using any logic inside the body you want, as long as it is from tail position. It’s like a while loop t...		pgorczak
34267197	12.180452	-7.5425878	comment	4.0	10.5	1672955163	-11.408065	"Kotlin is so close on so many things, but then keeps messing up.arrayOf(1, 2, 3) - why not [1,2,3]?emptyArray() - why not []?mapOf(""key"" to ""value"") - why not {key => value}?These are all solved problems. Why would they make up some harshly suboptimal syntax?"		amalgamated_inc
34267356	11.676428	-7.2167215	comment	4.0	15.5	1672955738	9.311284	"Python's `with`Function composition operators eg    a |> b # Call `b` with `a` as an argument
    b <| a # Same as above, reversed direction

Then you can do something like    let x : Map = collect <|
      [a, b, c]
        |> map(entries)
        |> flatten"		duped
34272022	12.207277	-7.557938	comment	4.0	14.0	1672990934	-11.404933	Absolutely damned is combination of Kotlin's several features:1. Lambda functions can be defined with `{}`.2.`foo(bar, somefunc)` is the same as `foo(bar) somefunc`. In other words, if the last parame...		dima_vm
34206951	11.618967	-7.186047	story	4.0	76.0	1672586401	9.066373	Map, Filter, Reduce in Fortran (2019)	https://milancurcic.com/2019/05/22/map-filter-reduce-in-fortran-2018.html	azhenley
34323374	11.675285	-7.809355	comment	4.0	12.5	1673351262	-5.8266106	Others point out that calling it a Python framework might be disingenuous, but only if your goal is to compare programming languages.If you're a web developer, trying to pick a framework for websocket...		t8sr
34361466	11.742551	-7.2465396	comment	4.0	11.5	1673564371	9.148058	Async is the most inefficient bullshit ever. Something that takes 30 seconds to say takes 5 mins to write and another 10 mins to parse and that’s if there are no further questions.		kerpotgh
34373595	11.913383	-7.2899475	comment	4.0	17.5	1673642488	-6.094517	yet another reason I try and avoid throwing/rejecting promises in typescript code and just return `Thing | Error` everywhere. I'm sure there's something fancier I could get out of using a full Result ...		macrael
34394767	11.89606	-7.452472	comment	4.0	13.0	1673824751	-11.030955	Lenses are cool, but they make me wonder: how many different paths of a deep immutable data hierarchy are transformed in an application to make this abstraction worthwhile, as opposed to replicating t...		pron
34395762	11.72311	-7.1734724	comment	4.0	17.0	1673833094	8.785711	I hope they will find a better solution, as this proposal will break encapsulation.Let’s say you model allowed transitions via business methods and thus restrict certain state changes. You can either ...		ivan_gammel
34409535	11.660497	-7.9431252	comment	4.0	12.0	1673934594	10.210938	Yes, generics (and many other proposals, like improved error handling) have been discussed for a long time. But for an almost equally long time, nothing happened. Go was stagnating for years until ver...		p-e-w
34428868	11.654009	-7.9348345	comment	4.0	12.5	1674059483	10.232346	I don’t see the issue with using corporate backed languages. Java (the language, the core libraries, and the compiler, etc) are all GPL2. GoLang is BSD licensed, c#/dot net is some mix of MIT and a few others.So what’s the problem? There doesn’t appear to be any risk here.		MichaelNolan
34430302	11.659081	-7.968739	comment	4.0	12.5	1674064725	10.233474	"As I said I love golang. I invested a lot of my own time into learning it and its ecosystem.
The time developers spend learning a language and its libraries should not be discounted.Maybe we overestim..."		nandalism
34454758	12.181813	-7.2336164	comment	4.0	15.5	1674230077	-10.577999	The Hack proposal is horrible imo because it doesn’t look like JS anymore. The F# proposal is 99% of the benefit whilst being actually approachable.		pharmakom
34455548	11.807336	-7.081193	comment	4.0	13.0	1674232518	-9.236492	The F# syntax looks/acts a lot better here (especially paired with lodash). I also feel your code example wasn't done in the way people would actually use pipes.    import {map, join} from 'lodash/fp'...		hajile
34455683	12.100847	-7.52854	comment	4.0	10.5	1674232959	-10.612309	The F# syntax would endlessly confuse me though. I'd always wonder whether |> join(' ') means join(x, ' ') or join(' ', x).		captainmuon
34457269	11.838709	-7.3727846	comment	4.0	22.5	1674238623	-8.809078	I had never heard of this book before, now I definitely want to give it a try.As an aside, isn't type driven development how everyone codes naturally in statically typed languages? Whether it's Ocaml ...		acchow
34482678	11.645553	-7.2339354	comment	4.0	14.0	1674424778	-8.798394	One of the many reasons to prefer static factories to constructors.		oweiler
34507373	11.7952385	-7.1893463	comment	4.0	28.5	1674583372	7.428768	Nope. This is a common confusion.The set of properties of objects and the sets of objects themselves have a complementary relationship when it comes to union / intersection and subset / superset.Let's...		RyanCavanaugh
34542254	11.637092	-7.1027064	comment	4.0	13.0	1674791673	-8.794761	It is incredibly important to avoid putting tag-firebreaks in the code base — anything that stops a new developer from being able to navigate from symbol to definition, or from definition to all uses ...		gorgoiler
34547315	12.323338	-7.3424063	comment	4.0	13.0	1674834384	12.8519745	> just like the concurrent code of gen_serverI found this a really interesting read, but this stuck out because it doesn't jive with my mental model of gen_server.gen_server is fully serialized. Even ...		sb8244
34555750	11.598464	-7.797538	comment	4.0	11.0	1674888114	10.055466	Because there are lies, damn lies and benchmarks.I looked at first benchmark (funkuch-redux) where C# significantly beats Go (8.3 vs 32).It turns out that the winning C# programs uses SSE2 intrinsics....		kjksf
34557096	12.187846	-7.4951344	comment	4.0	24.0	1674909567	-11.450393	The article does not actually explain how to do inheritance. In case you are wondering, the answer is using sealed classes.Some neat things with data clases (vs. e.g. Java's records):- default values ...		jillesvangurp
34557973	11.933916	-7.2290483	comment	4.0	21.0	1674917575	8.779182	The reason Java rejected data classes in favour of the very different and more powerful approach of nominal tuples (i.e. records) and algebraic data types in general, was the observation that the vast...		pron
34558469	11.702999	-7.2054663	comment	4.0	10.5	1674920643	5.865839	Curious to know how to implement Do pattern in an OOP language consistently.		revskill
34568749	11.9292755	-7.431766	comment	4.0	15.0	1675004935	7.55162	It’s hard to do FP in any language that isn’t designed for it. The reason for that is on a reasonably sized team you won’t be able to get consensus on adopting an FP style. There will always be the co...		agentultra
34569210	11.879328	-7.3124065	comment	4.0	10.5	1675007764	7.4021626	I’m my opinion, how to win would be to push for more logic in stateless functions, full stop.This can be done in any language without introducing “foreign” FP patterns and instantly makes code easier to understand and test.		adamkl
34491563	11.841641	-7.1549263	story	4.0	99.0	1674493289	-8.944124	KeenType: Pure Java typesetting system	https://github.com/DaveJarvis/KeenType	todsacerdoti
34596600	11.829441	-7.2968025	comment	4.0	14.5	1675180070	-9.060348	I've been thinking about typed lisp a bit lately since I started messing with CL again, and I admit the point about lists as code hadn't crossed my mind as something you have to deal with for any typi...		runevault
34597202	11.669607	-7.651583	comment	4.0	13.5	1675182241	10.108966	Generic design system looks generic shocker!		baggsie
34616920	11.815381	-7.178892	comment	4.0	23.0	1675282546	-8.989421	Either embrace dynamic typing and provide good error guards...or try to use type hints and still make good error guards.We had an entire history of Python 2 without type hints. Why use them now?		wheelerof4te
34617014	11.598891	-7.2915444	comment	4.0	13.5	1675282878	-8.778849	">  the whole thing seems bolted on, with worse semantics than most modern typed languagesOne of the biggest sources of ugliness is the ""None"". The standard way of declaring variables ahead of time is ..."		abdullahkhalids
34617800	11.951964	-7.1209626	comment	4.0	24.5	1675285814	-9.431568	> its datamodel is overally less of a hot mess compared to Javascript for example.I don't understand this, what do you mean? TypeScript is such a success partly because everything is an object in Java...		phailhaus
34620412	11.858429	-7.189953	comment	4.0	20.0	1675298532	9.237506	This is almost always framed in a way that shows large systems need the extra rigidity of some static systems.  And that dynamic systems are only about rapid prototyping.I think that is a bit of a fal...		taeric
34647019	12.138959	-7.874538	comment	4.0	12.0	1675454812	-3.1850948	> A lot of category theory is fun to learn and knowing it will help you in many waysI agree with your statement except that part.W.r.t coding, learning functional programing will help you in many ways...		BoiledCabbage
34659650	11.638984	-7.8570147	comment	4.0	10.5	1675553843	10.032922	The real essence of Go channels is their ability to participate in the built-in select keyword. Of course, Go does not have access to any magic CPU instructions that make it something Go can uniquely ...		jerf
34686119	11.920244	-7.4405518	comment	4.0	16.0	1675726163	7.3763638	"""Functional - Modifying state is hard to get correct; keep it at the boundaries and keep logic pure so that it is easier to verify the logic is correct.""My main beef with functional programming is tha..."		rightbyte
34703061	11.807234	-7.1008587	comment	4.0	16.0	1675821165	8.56854	I worked on JVMs (in a mostly research capacity) for a good number of years, but I soon gave up on the idea that classes and instances of classes (thus, heap-allocated objects) are the only thing the ...		titzer
34716690	12.152195	-7.452234	comment	4.0	15.5	1675896487	-10.581914	TLDR:C# is our real language.F# is a thing that gets supported to the extent that unpaid volunteers do the work.VB is in back-compat legacy support mode.		mkozlows
34739030	11.621407	-7.274268	comment	4.0	10.5	1676033762	-6.9278584	The reason people say binding is because the words “immutable variable” are an oxymoron. It never makes sense to use variable for immutable bindings; they are not able to be varied. Binding is just th...		cormacrelf
34742003	11.605056	-7.1436133	comment	4.0	11.0	1676047095	-2.5031524	"Awesome.Evil ideas for improvements.Random typos in class name, function names, comments, such as: 
inheritance -> enheritance
class -> clas
cannot -> cannontPick related words: 
person -> user, accou..."		neoneye2
34750256	11.599983	-7.9249506	comment	4.0	12.0	1676099200	10.255498	gofmt being the official tool avoids bikeshedding over formatting rules. Diverging from the default seems like a step backwards, doesn't it?		rickette
34751232	11.803667	-7.214889	comment	4.0	16.0	1676113346	-9.005825	"I'm usually a strict proponent of static typing, but I discovered that for the things I use Python for (mostly quick'n'dirty cross-platform scripting, not ""real programs"") it's indeed quite a nuisance..."		flohofwoe
34755643	11.840092	-7.1044154	comment	4.0	14.0	1676144913	-10.765986	"It's not a problem? The async interface isn't a problem either. It's just a thing you have to remember about python: ""most input is truthy except for the input that isn't""""Most of the time you don't d..."		aeturnum
34761324	12.192132	-7.6079707	comment	4.0	12.5	1676193297	11.9104395	Would you recommend someone currently using F# to try out Scala?		xupybd
34761254	12.240225	-7.641215	comment	4.0	15.5	1676192556	11.951811	To be honest, I think he is way-overly critical. It would seem like he thinks there needs to be some sudden changes or something. Scala is great today - there is nothing better (for experienced progra...		personomas
34764202	11.67303	-7.8891177	comment	4.0	13.0	1676219976	10.219825	I wonder whether I can use it to create a Go library that I can import in Python?		pknerd
34784393	12.496859	-7.8395553	comment	4.0	11.0	1676341540	-11.110972	Clojure users fighting against static typing are on the wrong side of history. They are fighting a side for all the wrong reasons, and they will lose.There is a reason why all dynamically typed langua...		hota_mazi
34787650	11.671638	-7.376285	comment	4.0	11.0	1676371269	-8.774225	Used this all the time in University :)I think there's an interesting parallel to this usefulness in code which the author just briefly mentioned. Static typing can help bridge thoughts about what mak...		pedrovhb
34789092	11.974996	-7.71448	comment	4.0	13.0	1676382153	10.428257	"i may not have read the article correctly, but i see no actual evidence there that it is the ""world's fastest growing language"", whatever that might mean, except that there a lot of questions about it..."		zabzonk
34790793	11.811801	-7.0587153	comment	4.0	11.5	1676388946	-9.050576	As a Python instructor, classes are a pain in general to teach. OO seems to have a non-understandable aura around it. Especially for folks without a CS background. self is weird until you explain that...		__mharrison__
34806751	12.054068	-7.7521806	comment	4.0	22.0	1676480107	10.418764	I remember reading this many years ago. TBH I always felt SML was a nicer language, syntactically -- more readable (mainly because of the let..in..end scoping syntax) -- and I really liked its Basis l...		cmrdporcupine
34845322	12.0719185	-7.7145257	comment	4.0	24.5	1676711358	10.386237	He talked about it a bit during his lex friedman interview. He said he spent some time there, IIRC, and found it somewhat intriguing, perhaps interesting, but needed to get shit done eventually and so...		baby
34845952	11.719904	-7.228678	comment	4.0	19.5	1676718467	-1.8547322	It took me awhile to realize but this is one of the big things that algebraic data types (ADTs) help you to do...design your data types so they have exactly the number of valid states that your domain has.  To use another common FP way of saying it...make invalid states unrepresentable.		mightybyte
34845958	11.73121	-7.4245286	comment	4.0	21.5	1676718512	-8.790911	> adding new business logic to a process,Adding logic is the smallest part of the problem: adding types, that aren't constrained to represent the smallest set of values needed for the problem at hand,...		louthy
34846153	11.840525	-7.097768	comment	4.0	11.0	1676720854	9.435576	> So, you start out with g(x) and then need to go all the way back and add f.That's one thing I will say after coming from Perl/PHP to Java, is that despite its verbosity and the uselessness of having...		adrianmsmith
34869863	11.930063	-7.0684395	comment	4.0	10.5	1676911678	-5.2961383	"Excellent. I'm glad to have a name for that thing I'm criticizing every time I see the word ""isomorphism"" in a humanities text."		__MatrixMan__
34901118	11.681136	-7.2251906	comment	4.0	14.5	1677093547	9.086748	"> Anyway: don't use async because it's ""more efficient"".I don't think efficiency has only one meaning. For instance, you can create millions of coroutines while you're limited to only thousands of thr..."		naasking
34935665	12.14225	-7.510534	comment	4.0	18.5	1677322902	-10.620489	> I'm not a talented developer> [uses F#]That has to be humblebragging. The average .net developer is terrified of or doesn't even know about F#.		tokinonagare
34948337	11.662879	-7.168382	comment	4.0	11.5	1677438438	7.56201	"is it still common practice to use ""var""?"		Polarity
34971818	11.734294	-7.237018	comment	4.0	17.5	1677604262	7.0398865	There is no essential mutable state in computer science. All essential mutable state can be modeled away to use no mutable state, as you have shown in the generation number idea which is one valid way...		kccqzy
34987736	11.699949	-7.846278	comment	4.0	12.0	1677701943	10.18864	"if other languages don't have equivalents for the devex/productivity enhancements of:* Django* FastAPI/Flask* Numpy/Pandas* PySpark* Jupyter Notebooks (gross I know but this is what ""data analysts"" an..."		skrtskrt
34997339	11.753608	-7.4334908	comment	4.0	22.0	1677772826	-8.688269	"Please, define ""reasonably"".Because these people who created hilariously Finnish ThingDoerFactoryFacadeFactoryInstaniatorService also thought they do a reasonably reasonable job.Per your comment on ""u..."		thesz
35003844	12.264727	-7.5463514	comment	4.0	12.0	1677801588	-11.409121	Congratulations team. I was involved in the project for quite some time years ago. Indeed I ported the original “Read the full index.xml into Java memory using a giant DB class” with the first “Stream...		pserwylo
35028003	11.978435	-7.727304	comment	4.0	17.5	1678006635	10.368135	Because side effects cause bugs and make code harder to reason about.The ways we avoid side effects can be inefficient. Tools such as immutable data types. In the past it wasn't really worth the perfo...		xupybd
35046302	11.650554	-7.5700865	comment	4.0	11.5	1678130755	10.050733	May be wrong, but they seem to be very focused on interesting stacks like Elixir and RoR while building on Go/Rust.  The corollary being neglect of the bread/butter stacks with high  market share, lik...		mixmastamyk
35056901	11.767602	-7.2357025	comment	4.0	13.0	1678205067	-8.969835	I would think stacking 10 generic conditions wouldn't scale if you are trying to mix and match arbitrarily.  If you are trying to mix NonEmpty and AllEven and AllGreaterThan100 for the List example, t...		dangets
35058281	11.982499	-7.7334404	comment	4.0	11.5	1678210443	10.413938	> And, let’s be honest, most developers are also not using Haskell.Everything in that post applies to the most common programming language out there: TypeScript.And several popular others such as Rust, Kotlin or Scala.		epolanski
35065132	11.901212	-7.4106994	comment	4.0	12.0	1678248522	7.3314924	Don't call this functional programming. If you call setCount() then this is not functional because your function is doing something besides returning a value. In fact, it is setting state, which is against FP principles.		petilon
35070603	12.481475	-7.1489334	comment	4.0	12.5	1678291074	12.358761	seems strange, since most rubyist aren't compiler engineers. I feel like you'd still want to keep writing your compiler in Rust, and try to eek out your performance there.I'm still scratching my head,...		weatherlight
35082651	12.021363	-7.3977413	comment	4.0	12.0	1678377606	11.7451105	"I don't think the issue is that languages change per se - it's that they borrow features from other languages, that people ask ""can we have $feature from $language please?""in JS (and years before that..."		Cthulhu_
35085206	12.198033	-7.5172796	comment	4.0	12.0	1678388782	11.921976	When I look at clever TypeScript, I always think the code was written by either Haskell or C++ template metaprogramming refugee, and this isn't good for the longevity of the language, see what happened to Scala's adoption because of it.		pjmlp
35085957	12.242205	-7.6328216	comment	4.0	22.0	1678392468	11.929621	Scala is not cool in any way, shape or form. It’s an unsuccessful, niche language, that has implemented probably every possible feature ever done in a programming language, including some really backw...		Kwpolska
35086109	12.268128	-7.628377	comment	4.0	13.5	1678393197	11.919359	You're getting down voted but your comment is basically correct. Scala contains some good ideas but due to high complexity and weak tooling support it has failed to gain mainstream adoption. And it's ...		nradov
35087127	11.666777	-7.8813596	comment	4.0	10.5	1678398046	10.179367	Golang is many times well better designed than Java ever will be. Java has fundamental issues with the language (which is the reason Groovy and Kotlin exist in the first place).If you want performance...		ActorNightly
35122292	11.735467	-7.2915163	comment	4.0	18.0	1678639033	-8.834031	In case folks miss the link at the top of the article, this is translated from an old 2017 post by Aphyr.That post was in Haskell, where it's not too surprising that you can do serious computation ins...		cjbprime
35161329	11.682288	-7.285076	comment	4.0	16.0	1678837741	-6.8725224	It managed to write, in one shot, a working λ-calculus parser, using a very specific programming style I asked it in JavaScript, and then translated it all to Python, including sarcastic, rhyming GLaD...		LightMachine
16828907	12.011565	-7.76618	story	5.0	5.0	1523618500	10.425031	Ask HN: Best resource for learning Haskell?		hestefisk
16836770	11.730392	-7.6877923	comment	5.0	14.0	1523702578	-11.327194	"Speaking of ergonomics, I seem to write a good deal of this for short-circuiting in Rust:    let x = match x {
      Some(x) => x,
      None => return None,
    }

Rust doesn't have any other way to ..."		always_good
16842055	12.471863	-7.4965024	comment	5.0	18.5	1523786978	12.884043	Does Erlang support structural sharing between large data structures? If not, how is it possible to efficiently pass large messages between processes on the same physical machine?		amelius
16865757	12.338531	-7.0507956	comment	5.0	18.5	1524041151	13.18163	This analysis is misguided because many of those languages are DSLs, e.g. ABAP, Apex, F#. No one using them has the option of using a general purpose language (and they are well-paid enough not to car...		gaius
16868416	11.804995	-7.174937	comment	5.0	25.5	1524067277	-8.952902	Is Python becoming more statically typed then?		hartator
16884430	12.108455	-7.6816525	comment	5.0	23.0	1524229753	11.895138	Don't think it has a bright future since Rust and Kotlin share much of what brings people to Scala and are better in many ways, including and perhaps most importantly the fact they are improving faster than Scala.		devit
16884402	12.215179	-7.653181	comment	5.0	21.5	1524229574	11.927786	I know on HN people like Scala but it's by far one of the language I hated the most when I worked with it. It's the complete opposite of Go, every time the Go team said no to a random feature, the Scala team said yes to that random feature. Scala feels to me like a kind of functional Perl.		realusername
16885151	12.1813965	-7.4109907	comment	5.0	25.5	1524235417	11.900726	...ships in 2020?I'm impressed with what they're doing (and love the language), and it's hard work, and their speed is faster than, say, Java's dead-pace evolution in the 2000s.But, poking around at T...		stephen
16908961	11.64547	-7.9099383	comment	5.0	13.5	1524531685	10.280305	I'm also curious about this. It seems that many go developers out there are using Makefiles. Makefiles are a good solution for golang projects in some cases, but I've seen a lot of people really abusi...		mjk7841
16922150	11.636212	-7.89469	comment	5.0	13.5	1524668767	10.175313	This is usually why I end up using https://godoc.org/golang.org/x/sync/errgroup instead of straight go statements, as it addresses some of the cancellation and error propogation issues. When I think o...		lclarkmichalek
16949365	11.638561	-7.160946	comment	5.0	13.0	1524948795	9.110874	"At least it introduces a new operator, to avoid the classic C mistake of typing ""="" when you meant ""=="", and various ugly workarounds like Yoda conditions.This would be a huge boon for many list/dict/..."		guitarbill
16965739	12.128645	-7.5169106	comment	5.0	22.5	1525168957	11.947985	Disclaimer : I'm just some moron on the InternetUnpopular opinion: I hate meta programming. We have composition, why do you need to mess with the nature of things? A long time ago, I was freelancing R...		jrq
17006931	12.024618	-7.80483	comment	5.0	27.5	1525623647	10.436766	"Much kerfuffling comes up about ""What monads are"" and ""Are monads just pipes"" and ""is X or Y a monad."" I'd like to volunteer to answer questions and provide examples people may have. This paper is a r..."		KirinDave
17009837	11.662014	-7.3217554	comment	5.0	28.5	1525657700	9.179116	There are three main kinds of async IO.* Event driven with callbacks (`on data`, `on error`, and so on).* Stackless coroutines (async/await).* Stackful coroutines (no direct semantic changes to code r...		ioquatix
17015853	11.65049	-7.243944	comment	5.0	30.0	1525722349	-8.691228	>\lambda x.\, 6 was also surprisingly difficult for him to guess (though he did get it right eventually). I think he was just stuck on the idea of the function doing something arithmetical to the inpu...		ummonk
17049505	11.783199	-7.064299	comment	5.0	18.0	1526061794	-8.996294	It's because you believe the pros of type checking always surpass the cons. But the Python user base is very diverse, with a huge difference in tastes, skills, goals, time and constraints.That's why y...		sametmax
17048960	11.883638	-7.271737	comment	5.0	20.0	1526058222	-8.998759	I'm curious what the proponents of dynamic typing over static typing think about the recent push towards adding type systems to the two biggest dynamic languages out there: Python and JS.		m0meni
17058493	11.94084	-7.690261	story	5.0	110.0	1526212679	10.426478	GHC Parser Principles	https://ghc.haskell.org/trac/ghc/wiki/Commentary/Compiler/Parser#Principles	jasim
17062123	11.670831	-7.935376	comment	5.0	13.0	1526262534	10.23752	It’s a good thing that Go is such a good language, because getting started with it is downright PAINFUL compared to Ruby or Python.		nunez
17081191	12.005647	-7.7259994	comment	5.0	28.0	1526465047	10.427187	I like to think of Haskell as a great language. It still has its warts (e.g. last [0,1/3..2] > 2), but if you wan't wart free, there's probably nothing beyond lambda calculus.Being the closest thing t...		tromp
17097652	11.941872	-7.3612022	comment	5.0	15.0	1526603950	7.0495553	"I've been programming for a long time now, close to 40 years.  Back when I first learned programming ""top-down programming"" was the rage.  This essentially means you take your top-level functionality,..."		jnwatson
17103031	11.939118	-7.6936493	story	5.0	101.0	1526663005	10.389753	On Competing with C Using Haskell (2017)	https://two-wrongs.com/on-competing-with-c-using-haskell.html	signa11
17137665	12.151868	-7.6267376	comment	5.0	20.5	1527105732	-11.391402	My 5 cents:It seems to me that the author did not spent enough time to learn Kotlin. The way he mixes Java types (Integer.parseInt) inside pure Kotlin code and then complains about lack of Null-Safety...		johnwick17
17138098	12.088513	-7.5397463	comment	5.0	15.0	1527108330	11.925355	"val list = listOf(""Saab"", ""Volvo"")val map = mapOf(""firstName"" to ""John"", ""lastName"" to ""Doe"")The above seems a really strange decision for a ""new"" language - why would you not just use the most common structure, being JSON?"		hoodoof
17162173	11.645271	-7.964293	comment	5.0	19.0	1527344562	10.198679	The two caste hierarchy is my biggest issue with Golang. Macro capability exists in Golang, but only for the upper caste of language creators. It makes me feel like the language creators of Golang purposefully decide that users of the language aren’t smart.		Willamin
17166124	11.647658	-7.4290466	comment	5.0	21.5	1527411672	10.2375345	How is it zero-overhead? The visitor pattern at the very least requires dynamic dispatch, which isn't free.		ginko
17186971	11.88486	-7.0909567	story	5.0	44.0	1527681791	-4.000599	It ain't about the callbacks, it's about the flow control (2013)	https://idea.popcount.org/2013-09-05-it-aint-about-the-callbacks/	majke
17195696	11.857122	-7.6435146	comment	5.0	31.5	1527768725	-6.4036355	Hi all,In addition to being the submitter, I'm also the author and a member of the Pony core team. I'll check the comments here from time to time and answer what I can.		spooneybarger
17211609	11.635852	-7.9396095	comment	5.0	18.0	1527897494	10.237981	This really irks me for some reason.  One of the goals of the Go tooling in general is to cut down on the number of config files and differing choices that need to be made everywhere.Gofmt is the cano...		thanatos_dem
17211176	11.627313	-7.935339	story	5.0	98.0	1527893563	10.172992	Revive – Fast, configurable, extensible linter for Go	https://github.com/mgechev/revive	angelinaii
17218918	12.057152	-7.798953	comment	5.0	27.5	1528022118	12.806769	How does Go compare to Erlang these days? When would you choose one over the other?		amaccuish
17248281	11.683309	-7.9678545	comment	5.0	30.5	1528301326	10.215955	Interesting that he's unsure about Go. Would be nice to hear about why.One huge strength about Node (&Deno) is having the same language and tools on the front end and back end. Its a huge benefit to h...		rb808
17252737	11.646503	-7.9561462	comment	5.0	12.5	1528337740	10.198032	"I consider Gogs a better option. The UI is also less painful
https://gogs.io/"		pierreortega
17296685	11.661513	-7.4917884	comment	5.0	16.0	1528829818	10.057606	Isn't interface{} a generic?		awb
17298191	11.658661	-7.927597	comment	5.0	24.0	1528838878	10.20824	I've been working full time in Go since 2012. I've never had a use for generics.		marcrosoft
17313623	12.2464695	-7.636432	comment	5.0	16.5	1528998329	11.949577	I'm not from PagerDuty, but I also moved to Elixir after some years working in a hybrid Ruby + Scala shop.  I concur with the author's experience that writing clean and maintainable Scala code is hard...		gamache
17366936	11.615326	-7.2063303	comment	5.0	14.0	1529600333	8.191384	Languages do not need a 1 to 1 relationship between the storage medium of a value and the interface it exposes to a programmer.Java's situation is even worse because it's a compiled language that does...		marcosdumay
17371714	11.950076	-7.639949	story	5.0	138.0	1529646926	-9.029837	Understanding contravariance	https://typeclasses.com/contravariance	allenleein
17382453	11.738165	-7.83745	comment	5.0	14.0	1529776852	10.123383	The post is spot on and certainly mirrors some of my own experiences using Go and Java.Java is a wonderful language with a terrible culture.  Choosing Go or even Kotlin over Java is liberating because...		tbenedetti10
17418227	12.0770035	-7.869225	comment	5.0	18.0	1530202884	10.426981	Isn't OCAML garbage collected, which should be too slow and memory hungry for system drivers.		alde
17419759	12.037222	-7.783723	comment	5.0	14.0	1530214136	10.438379	I feel like OCaml is a language that has a lot of potential, but is hampered by somewhat gnarly syntax, a toolchain that feels utterly antique (for example, last time I worked with it, the REPL had no...		atombender
17441240	11.867041	-7.378311	comment	5.0	14.5	1530536300	7.083614	"> OOP"" done right (aka no inheritance, simply method polymorphism).Why do you consider inheritance a bad feature of OOP?"		TheArcane
17440709	12.013649	-7.7849374	story	5.0	103.0	1530529989	10.39681	Haskell’s State monad is not a monad (2014)	http://www.cse.chalmers.se/~nicsma/no-state-monad.html	setra
17439635	11.698698	-7.1777687	story	5.0	28.0	1530511846	-8.88577	Idioms of Dynamic Languages	http://willcrichton.net/notes/idioms-of-dynamic-languages/	wcrichton
17452153	12.127384	-7.5057487	comment	5.0	17.5	1530639477	-10.557777	I heard good things about F# and I did like C#, so I wanted to give an honest look at your arguments.The first thing I checked is your very vocal assurance that F# is a better scripting language than ...		sametmax
17458035	12.095608	-7.8707275	comment	5.0	13.5	1530721207	0.64562345	When did Jane Street take over development of OCaml? I knew they were heavy users, but I thought it was INRIA that were the main developers. This post implies that JS are running the show now...		weavie
17458325	11.778622	-7.0305133	comment	5.0	16.5	1530724409	5.0155416	You could take “C#” out of that sentence and still be accurate.Wordpress is not and I imagine never will be anywhere close to “modern design patterns”.It’s not even close to old design patterns, unles...		stephenr
17475009	11.846734	-7.390373	comment	5.0	14.5	1530910398	-8.470716	"Is there a viable solution that isn't type theory or functional programming or something? If it were feasible to do so, wouldn't we see progress in ""everyday"" common language?"		gowld
17479825	11.831146	-7.4852095	story	5.0	36.0	1530988966	8.821314	An Old Conjecture on Stream Transducers	https://www.pvk.ca/Blog/2018/06/24/an-old-conjecture-on-stream-transducers/	mr_tyzic
17486301	11.900613	-7.403339	comment	5.0	19.5	1531085353	-9.611173	Unfortunately, Kialo does not have any features for structural reasoning, where the logical connections between arguments are completely formalized and precise. It relies on a human element to check e...		myWindoonn
17506437	11.674466	-7.9788647	comment	5.0	14.0	1531313470	10.148024	"Wait, didn't we have BPMN more than a decade ago? BTW, if ""any"" programming language necesarily means Go for you, here is one BPMN implementation in Go: https://zeebe.io"		smarx007
17517285	11.965357	-7.7106786	story	5.0	129.0	1531419952	10.356186	The Haskell School of Music – From Signals to Symphonies (2014) [pdf]	http://haskell.cs.yale.edu/wp-content/uploads/2015/03/HSoM.pdf	alokrai
17522119	12.240026	-7.60358	comment	5.0	14.0	1531483179	11.9801655	SBT is hellish though and the added complexity that Scala has imposes a lot of cognitive overhead.With Kotlin, you always end up writing cleaner Java and don't risk erring on the side of unneeded entanglement in the spaghetti monster that Scala can sometimes be.		jxub
17536650	11.807915	-7.189475	comment	5.0	23.0	1531683258	-8.975226	I’m going to get blasted on this but what if all this python static type checking and such is not needed. Python is python. It’s slower than other languages and that’s ok. I fear that too much is being done and slowly the clean syntax of the language is being eroded.		gigatexal
17536719	11.781202	-7.2980843	comment	5.0	14.5	1531684145	9.176842	I'm curious as to why you think that matters? Async/Await are general purpose concurrent programming abstractions.		eikenberry
17539406	11.630884	-7.890439	comment	5.0	12.5	1531726246	10.177104	"No need for ""normal Go"".  ex commands like r take addresses.    vim +'$r!date' did.txt"		JdeBP
17547856	11.888116	-7.7300835	story	5.0	54.0	1531810869	10.402469	Unsafe Haskell (2015)	http://www.seas.upenn.edu/~cis194/spring15/lectures/12-unsafe.html	Cieplak
17549426	11.989335	-7.765315	comment	5.0	14.0	1531832874	10.446171	“Me before #strangeloop: I'm not a real programmer unless I know HaskellMe after #strangeloop: I'm not a real programmer unless I knit”https://twitter.com/adam_chal/status/914207020215042048		rrherr
17566198	11.787258	-7.4591694	comment	5.0	13.0	1532008114	9.444958	"Wouldn't that be a problem in most languages? Even Haskell allows for it through Data.DynamicIf I can serialize to String, and then deserialize a String to any type of class, I can effectively ""cast"" anything to anything."		stingraycharles
17564757	11.812936	-7.0915937	story	5.0	11.0	1531990215	5.012584	What is the best way to learn Design patterns and start applying them?		raikhan
17570484	11.83204	-7.078468	comment	5.0	15.5	1532036046	8.095444	This may sound super n00b but I really like that Java is explicit about everything. So for instance, you explicitly specify variables, methods as private with the keyword 'private'. In python you have...		pm90
17575544	11.980366	-7.6650763	comment	5.0	18.0	1532099030	10.454094	It is good that it starts with ecosystem. It is IMHO the biggest practical argument for or against any language (along with, what is related, community).R, language-wise, is awful, but thanks to its c...		stared
17590857	11.715342	-7.329402	comment	5.0	18.0	1532325996	10.347039	Implicits are great.People unfortunately go to great length to avoid typing function parameters so will do all kinds of shit to reduce arguments in function calls. This includes all kinds of insane de...		bad_user
17602768	11.640284	-7.9711165	comment	5.0	12.5	1532450885	10.173031	"For me the big surprise is that we still have languages where we have to write things like  func setupBucket(ctx context.Context) (*blob.Bucket, error) {
      sess, err := session.NewSession(&aws.Con..."		pmontra
17671478	12.369161	-7.3381457	story	5.0	326.0	1533219016	-8.717982	A Brief History of the BEAM Compiler	http://blog.erlang.org/beam-compiler-history/	jxub
17679071	11.655605	-7.8754325	comment	5.0	16.5	1533297228	-9.337934	Go also carries all its dependencies with it; this is why it produces large single static binaries.Python lacks a tool to painlessly produce the same, that is, a self-contained binary that includes th...		nine_k
17679875	12.286689	-7.523433	story	5.0	24.0	1533304776	12.814472	Channels are Actors		carlehewitt
17713540	11.916522	-7.0563993	comment	5.0	16.0	1533708222	8.683959	"Under ""unavailable features""
https://dlang.org/spec/betterc.html#consequences3, 4, and 5 are all pretty sore points. 2 would be as well if it weren't extremely likely that for any game you create roll..."		Bekwnn
17714527	11.907197	-7.041592	comment	5.0	15.5	1533722985	-10.777663	> such like socket programmingThat's one of my biggest pet peeves (and if you see my other comments, you'll notice I have quite a few).To do socket programming in asyncio, you can either use:- protoco...		sametmax
17726545	11.776326	-7.2643623	story	5.0	122.0	1533836835	-8.836924	Functional Bits: Lambda-calculus based algorithmic information theory [pdf]	https://tromp.github.io/cl/LC.pdf	theaeolist
17755290	11.643922	-7.9762464	comment	5.0	18.0	1534215725	10.211228	Go is still one of the most difficult and counter intuitive build systems ever devised. Usually you’d expect a project to build out of the box. Go seems to take a stance of “Haha nope, get ready to fi...		shawn
17756340	11.901532	-7.470138	comment	5.0	17.5	1534236480	7.5486226	Pure functions have of course a lot of benefits - if the goal is computing a value. However, why would you even want to compose an interactive application (in javascript) fully out of pure functions?E...		xg15
17787180	11.596396	-7.9110084	story	5.0	177.0	1534573555	-8.249273	Show HN: TinyGo – LLVM-based Go compiler for microcontrollers	https://github.com/aykevl/tinygo	ngaut
17794938	11.67983	-7.663664	comment	5.0	15.5	1534696448	10.325262	That runtime system is huge. I remember it was an obstacle to high-assurance in Haskell. Is there a detailed write-up on what those 80,000loc do? Maybe someone could redo it in one of the verifying, imperative languages like SPARK or ATS to increase its assurance without full verification.		nickpsecurity
17814479	11.987999	-7.7314267	comment	5.0	13.0	1534891082	10.409029	i have never heard of haskell being a language used for teaching introductory computer science courses. that sounds like a nightmare. i'd imagine mid-to-upper div classes.		aye01
17818874	11.999444	-7.758593	comment	5.0	14.5	1534947897	10.397469	I think this (short) article had a lot of good points, though I do take minor issue with one bit:> Some people learn Haskell with the expectation that they will achieve some sort of programming enligh...		DonaldPShimoda
17825747	12.278337	-7.3216305	story	5.0	81.0	1535015698	7.0907636	Design Principles Behind Smalltalk (1981)	http://www.cs.virginia.edu/~evans/cs655/readings/smalltalk.html	molteanu
17848094	12.09285	-7.629219	comment	5.0	25.0	1535319660	10.385833	Anyone getting deeper and deeper into fp is destined to end up with Haskell or purescript. No matter if you start with elm, scala, elixir or reason. Then, of course you work with Haskell for a bit and end up going back to whatever you started with unless your work in PL research or similar		AzzieElbab
17861596	11.6138315	-7.9157104	comment	5.0	18.0	1535481693	10.154596	I NEED generics to do any quantitative code. I evaluated Go for a project, and completely ruled it out because of this. You're unable to write an algorithm for float 32s and 64s, scalars vs vectors vs...		dangjc
21007207	12.014379	-7.0669117	comment	5.0	15.0	1568825247	9.029538	Because JSON.parse blocks the thread it's in, and JS is single threaded [1].So even if you put it behind a promise, when that promise actually runs, it will block the thread.In essence, using promises...		Klathmon
21012651	11.928034	-7.1423078	comment	5.0	19.5	1568859891	-9.169362	What's the static-typing landscape look like for Python? JavaScript, the other dynamic language that's eating the world, has the well-known TypeScript to help it scale. I couldn't imagine maintaining any large codebase without a good type system.		_bxg1
21012777	11.840757	-7.2367806	comment	5.0	12.5	1568861191	-8.929946	"It kind of feels wrong when dynamically typed languages add ""hinting"". It means they admit that strongly typed is the way to go. Edit: typo statically typed"		mav3rick
21019139	11.96063	-7.4821186	comment	5.0	14.5	1568918099	7.223333	This opinion is flameworthy and stereotypes heavily: what seems to happen in FP is that the overall community is substantially math-IQ smarter than the imperative languages. Alas, that ALSO means the ...		AtlasBarfed
18956049	11.958702	-7.641165	story	5.0	94.0	1548023606	-9.047691	Covariance and contravariance in C++	https://quuxplusone.github.io/blog/2019/01/20/covariance-and-contravariance/	ingve
18959213	11.6697035	-7.466912	comment	5.0	25.5	1548065382	-6.844564	I'm fighting through a book on formal logic at the moment, I never did a computer science degree, is it on the syllabus? It feels like this should have been the first thing I ever studied. I kind of g...		zimablue
18968583	12.331009	-7.2541385	comment	5.0	52.5	1548168547	7.0897202	Where does the Pharo runtime run? To which platforms can I bring its solutions? are these standalone binaries or can I create libraries or code which play well with other languages and systems?Every t...		nudpiedo
18976400	11.896511	-7.442011	comment	5.0	12.5	1548228438	7.3900514	Quote > The factors that allow programs in functional languages to sometimes be more concise than imperative implementations are pretty much orthogonal to the use of pure functions — garbage collectio...		FPGAhacker
18981845	11.648138	-7.96265	comment	5.0	20.0	1548272099	10.209962	This right here is why Go's 'statically link everything' is going to become a big problem in the long run when old servers are running that software and no one has the source code anymore.		faissaloo
18984990	11.643384	-7.0236087	comment	5.0	13.0	1548291308	-7.035581	In related news, the C/C++ development community is finally catching up to what Java has been providing for over 20 years.		zozbot123
19012883	11.894752	-7.319797	comment	5.0	26.5	1548612585	7.022264	Improving some of the syntax was sorely needed but I think adding classes was unhelpful. I already have a hard enough time teaching  programmers about prototypical inheritance without the language act...		ChrisSD
19017154	12.080429	-7.191849	comment	5.0	13.5	1548681250	9.63933	A tangent here, but a place where object-orientation works better than anything else is in simulations of the real world. Thus, nothing to do with databases, and in fact it is referred to as object or...		exergy
19075660	11.627497	-7.0338097	comment	5.0	20.0	1549282537	8.971252	"   >>> list(dict.fromkeys([3, 2, 1]))
   [3, 2, 1]
   >>> list(set([3, 2, 1]))
   [1, 2, 3]"		pizzaburek
19096177	12.469261	-7.5025377	story	5.0	138.0	1549468874	-9.326027	Runtime verification in Erlang by using contracts	https://arxiv.org/abs/1808.07937	lainon
19102858	11.784067	-7.156607	comment	5.0	17.5	1549511523	-9.142953	So many features have been added over time, I think it's beginning to show that the features are piled on top of a language that weren't designed for them.Things that I think feel awkward are the tupl...		ramenmeal
19128114	12.145371	-7.886901	comment	5.0	13.0	1549812587	-3.2294502	What are the steps to learning category theory? Preferably something with solutions so I can check my work?		learneracct
19131956	11.757482	-7.3578315	comment	5.0	14.0	1549857587	-8.936384	It's also possible that even those same bugs could have been prevented by hiring more experienced programmers. Or using non-static verification tools or testing processes or many other tools in the to...		wellpast
19146865	11.813709	-7.345727	comment	5.0	19.5	1550001094	-8.902157	I'm not a very good developer, though I do have plenty of released-and-working-well things out in the world. I will say, it seems to me like static typing would reduce my creativity and flow and requi...		core-questions
19146205	11.748952	-7.4291825	comment	5.0	14.5	1549996957	10.37842	It amazes me how enduring formulaic it is to single out some particular design tradeoff of a language, draw up some examples of expressing something where that tradeoff creates worse code, and then ac...		mindslight
19173494	11.621797	-7.9573617	comment	5.0	30.0	1550256042	-9.676675	The context for this is this Go project proposal:https://github.com/golang/go/issues/30141Filippo proposes to deprecate (but not remove) Blowfish, archaic curves, CAST, MD4, RIPEMD160, TEA, Twofish, X...		tptacek
19190758	11.662925	-7.5844164	comment	5.0	23.5	1550500221	10.108083	I don't understand how not having generics is at all acceptable. But maybe that's because I come from a functional programming perspective.		alexandercrohde
19220125	11.660055	-7.1671405	comment	5.0	18.5	1550779773	9.243922	This is one reason I like nested functions. They’re not available to the surrounding scope so they don’t succumb to these weaknesses, while also allowing you to organize your very long function intern...		Scramblejams
19222417	11.6827965	-7.8608484	comment	5.0	17.5	1550800053	10.201539	So I don't know how to fly a commercial airliner, but I could probably figure my way around a small single prop airplane. That's basically the difference between Go and a language like Rust or C++ or ...		ilovecaching
19226705	12.421458	-7.6556535	comment	5.0	16.5	1550853667	-11.03962	This wouldn't really be Hacker News unless an arrogant Lisp devotee shows up and claims that Lisp does everything better, so I'll now try to be that arrogant Lisp devotee.Sean Johnson has given a fant...		lkrubner
19235158	11.727523	-7.4520054	story	5.0	88.0	1550951838	9.233818	Stream Ring Theory – A Turing-Complete Stream Algebra	https://zenodo.org/record/2565243#.XHGlbrqYWc0	espeed
19240074	12.348011	-7.528867	comment	5.0	20.5	1551035912	-9.270091	Sure !Think about how prinf / console.log / print .... works in traditional settings.- How would you make it so that printf doesn't crash your entire program if the console hangs.- how would you isola...		wrong_variable
19314740	11.669594	-7.3346395	comment	5.0	16.5	1551823862	-8.679906	>even the most jaded systems programmer can see are not ideal, like the fact that types precede names in variable declarations,Honestly, I find it shocking anybody can hold this opinion.I hate that ev...		F-0X
19317762	11.651885	-7.0287323	comment	5.0	14.5	1551867123	8.921064	len(dict1 + dict2) does not equal len(dict1) + len(dict2) so using the + operator is nonsense.The operators should be |, &, and -, exactly as for sets, and the behaviour defined with just three rules:...		zestyping
19334930	11.655191	-7.9297776	comment	5.0	15.0	1552017086	10.192908	Generics are slower, that's the trade-off.  Developer time vs. execution time.Saying Go has it's head up it's ass is extremely disrespectful to the people that created it and are maintaining it.  You lost all credibility when you chose the low road and said that.		naikrovek
19366349	12.470466	-7.812701	comment	5.0	14.5	1552380172	-11.173608	"That is exactly how I always feel when working in Clojure. Constant ""what is this? What's in it?""You can't just say ""it's a map"". Sure, it's a map, but there's data in there I want so can you at least..."		mathw
19382232	11.898061	-7.698948	comment	5.0	15.0	1552503481	10.376767	This does seem to actively circumvent a number of the things that are always held up as why Haskell is a great language: it uses strict types in a number of places, has explicit inline and no-inline a...		olliej
19386767	11.626743	-7.968542	comment	5.0	19.5	1552542107	10.215576	> Idiomatic Go would have you not put on one line what is more clear on two.This is the kind of silly aphorism that sounds enlightened until you think about it, and is emblematic of the bad parts of G...		jonahx
19408298	11.910385	-7.351437	comment	5.0	19.0	1552750193	7.051971	"In my experience, the thing that's wrong about object-oriented programming is not the object-orientation itself, but the over-application of it.- Sometimes more ""procedural"" programming provides bette..."		ravenstine
19416614	12.404012	-7.1595798	comment	5.0	19.5	1552856850	-12.075398	Sounds more like what many people would call event-drive architecture, these days.People tell me Ruby is message passing, but it doesn't seem to match your description at all.		chrisseaton
19417893	12.122157	-7.322362	comment	5.0	23.5	1552870942	7.1230145	Method calls are messages. Same thing.To better understand what Alan Kay is talking about it helps to know a specific fact about Smalltalk, the language he invented. Unlike in C++ or Java or JavaScrip...		galaxyLogic
19418238	11.930064	-7.203683	comment	5.0	12.5	1552875425	7.473342	I don't know what to say - that just sounds like normal method calls to me. Why do we need the term 'message passing' on top of that, which seems to additionally confuse people around synchronous or not?		chrisseaton
19436541	11.714188	-7.7818875	comment	5.0	15.0	1553033121	10.150483	So far I did not find anything comparable to replace Java for website server language. Go is a terrible extremely verbose language without vital features. JavaScript on Node is limited by single-threa...		vbezhenar
19459961	11.850845	-7.6942787	comment	5.0	18.0	1553234386	10.2702055	Now I'm curious! What are other systems-level languages? I know Go was touted as one at the start, but that's definitely not where it's established a niche!Julia? Nim? That's about all that comes to m...		sk0g
19476816	11.80466	-7.16064	comment	5.0	19.0	1553440772	-9.029691	I guess someone posted this in response to this HN post:https://news.ycombinator.com/item?id=19473631People tend to do that on HN.So, for those of us who don’t use Python type checking, which of the 4 checkers do we choose?  Google, Facebook, Dropbox, or the new one: Pyright?		melling
19476605	11.785013	-7.1686244	story	5.0	63.0	1553438584	-8.977435	Pytype – A static type analyzer for Python code	https://github.com/google/pytype	fanf2
19478735	12.392641	-7.6710005	comment	5.0	16.0	1553461037	-11.301613	The author switched to kotlin from clojure, kotlin's interop with java is leagues ahead of clojure.		Scarbutt
19494240	11.717622	-7.593438	comment	5.0	12.5	1553622369	10.274296	I wonder if it's possible to add something similar to the protection you get in Haskell to other languages via some static analyzer or something.In Haskell, it's pretty much impossible to have unexpec...		jolmg
19498774	12.074973	-7.831844	story	5.0	67.0	1553672559	10.093378	Why are monoidal categories interesting?	https://jvns.ca/blog/2019/03/26/what-are-monoidal-categories/	weinzierl
19531041	11.741885	-7.3957815	comment	5.0	13.0	1553971616	-8.904526	Generated interfaces are an anti-pattern. Types force tight coupling between clients and servers. What if a third-party project written in a different language wants to communicate with your server us...		jondubois
19561085	11.717454	-7.2933474	comment	5.0	19.5	1554270749	-11.308519	I like Kotlins solution for this. If there is only one argument in the lambda/block and the type is clear from the context you don’t have to declare it and you can use the ‘it’ keyword instead.		vbsteven
19588259	11.648499	-7.954632	comment	5.0	32.5	1554509495	10.245293	It's totally on point. I've been writing a fair bit of Go lately and consequently am firmly in the Generics! Now! camp. The pace of writing in this language is almost snail like, and a lot of that is ...		bdamm
19589777	11.9535	-7.453504	story	5.0	7.0	1554537354	7.23267	Ask HN: Functional programming allows you to do more work with less code?		pictur
19595090	11.993603	-7.7620387	comment	5.0	15.0	1554617432	10.466883	It’s the worst ML because it doesn’t look exactly like Haskell? Oh, no, it’s just click baiting using an easy target.		ab5tract
19598511	11.7246895	-7.399932	comment	5.0	26.0	1554659391	-8.784586	> unimaginableI imagine adding types gradually as a design solidifies, rather than slow velocity early on.  Best not to be dogmatic on these things.		mixmastamyk
19601294	12.044267	-7.150681	comment	5.0	15.0	1554688214	9.1183815	I actually just made the term up myself just then to describe my feelings about the fact that all of the methods in our service layer are just `await this(); await that(); await another(); //...` and ...		ajxs
19612120	11.9500675	-7.4755387	story	5.0	18.0	1554788577	7.2903104	What's your strongest opinion against functional programming?	https://softwareengineering.stackexchange.com/questions/9006/whats-your-strongest-opinion-against-functional-programming	philonoist
19633338	11.729636	-7.2436767	story	5.0	46.0	1554983521	7.826064	Variance in Java	https://llorllale.github.io/java-variance/	jxub
19639180	11.94043	-7.4531617	story	5.0	2.0	1555016585	7.305624	Ask HN: What are alternatives to OO programming?		ErotemeObelus
19694872	11.997493	-7.733707	comment	5.0	18.5	1555622301	10.418427	I'm a co-founder and CTO at Mercury. We have some amazing frontend UI (the onboarding flow especially) if you'd like to check it out, and our backend is 100% Haskell. AMA		MaxGabriel
19697483	12.395038	-7.151176	comment	5.0	13.5	1555655275	12.342176	It looks like they've conflated type with class. If so, that's the antithesis of duck typing. The impedence mismatch to Ruby seems to me an overwhelming contraindication.		inopinatus
19715534	11.794103	-7.3581386	comment	5.0	17.0	1555894098	7.1436634	Well, I disagree with 99% of this... I'm a guy that started with C, moved to functional programing, added C++, and now do all 3.> Objection 1.  Data structure and functions should not be bound togethe...		vhb
19715608	11.84402	-7.280083	comment	5.0	14.5	1555895062	7.342433	I think this article is quite old, so I can forgive the author for being out of touch with modern OO language practices. Nonetheless, I find myself disagreeing with almost all of his arguments.When he...		ganonm
19716428	11.991936	-7.317713	comment	5.0	20.0	1555905682	7.1255846	In Kay's OO the only way to interact with an object was through method passing. It was important the the internal state of an object was kept private at all times.Getters/setters are technically messa...		DonaldPShimoda
19727621	12.010718	-7.609094	story	5.0	95.0	1556020038	10.394726	High-Powered REPL for Haskell, Inspired by IPython	https://github.com/litxio/ptghci	Terretta
19751536	11.626222	-7.860857	comment	5.0	17.0	1556219768	10.127304	That's a big jump between OCaml and Go. I'm not familiar with ray tracing, but skimming the source code it mostly looks like it's doing floating point math; it doesn't look like it's using the runtime...		weberc2
19788564	11.823671	-7.1976566	comment	5.0	20.0	1556636684	-8.978333	You think you're being downvoted because people like dynamic typing very much.You're being downvoted because:A) You left a comment with a strong opinion without expressing it while dismissing other pe...		inglor
19824960	12.2009535	-7.4440084	comment	5.0	14.0	1556954052	-11.38994	At that point, why not just use another jvm language with these features like Kotlin?		der_Fidelis
19825607	12.1479645	-7.14489	comment	5.0	15.0	1556966008	-11.160629	Notice how I separately addressed JVM and Java.Java is already losing market share to JVM competitor languages.JVM is in a stronger position than Java, but imagine a world were 15-10 years ago native ...		dtech
19829841	11.94851	-7.4611406	story	5.0	48.0	1557009545	7.2517242	Functional Programming Is on the Rise	https://medium.com/@elizarov/functional-programing-is-on-the-rise-ebd5c705eaef	pplonski86
19835615	11.691566	-7.2751274	story	5.0	135.0	1557097065	-8.794548	The Impact of the Lambda Calculus (1997) [pdf]	http://www-users.mat.umk.pl/~adwid/materialy/doc/church.pdf	espeed
19856707	12.248677	-7.5451074	comment	5.0	23.0	1557301491	-11.391372	It seems to me that a lot of people seem to think prefering Kotlin signifies a move away from Java. But I simply don't understand how using a JVM language signifies a move away from Java. After all, i...		BossingAround
19864835	11.879513	-7.3063593	comment	5.0	21.0	1557368744	7.072033	I don't think we can dispense with encapsulation and still have OO, though.  Sure you can program without it.  You can even make good programs without it.  You may even be able to make better programs...		mikekchar
19871471	11.76695	-7.762447	comment	5.0	16.0	1557430380	10.105296	I didn't a find a single argument about why the seniors engineers I used to work with in some of the largest European bank would move away from Java to Go.Those engineers are already hostile to just c...		echopom
19899875	12.051237	-7.5694475	comment	5.0	17.5	1557759445	-11.116095	Looking over Nim, it says it is a statically typed language, compiles to C/C++/JavaScript.Is this interesting for Android developers, i.e. would I have a good reason to consider this over Kotlin or Ja...		xrd
19939718	11.6078825	-7.8897853	story	5.0	79.0	1558102014	10.070069	Understanding real-world concurrency bugs in Go	https://blog.acolyer.org/2019/05/17/understanding-real-world-concurrency-bugs-in-go/	mcguire
19952640	11.749698	-7.1024065	comment	5.0	13.5	1558263096	8.128585	Here you go https://github.com/progwml6/Natura/blob/1.7.10/src/main/java...Tip: If you ever end up in a situation where you have to copy-paste code with minor changes then there is something that you are doing wrong. In this case using arrays and loops would be a much better solution.		AnaniasAnanas
19963573	12.000061	-7.773994	comment	5.0	13.0	1558377380	10.404812	Ocaml parallelism/concurrency story was not that good - but Haskell has just got its fancy new epoll based I/O manager (100000+ lightweight threads) around that time, with the 7.0.1 release (16 Novemb...		szemet
37582795	12.090287	-7.4662995	comment	5.0	16.0	1695208571	-9.904705	Bit of an aside, but I wonder if the rise of LLMs will lead to new programming languages being much slower to be adopted.Like you said, you might have given up on F# without ChatGPT assistance, and th...		depletedgherkin
37597645	12.503558	-7.435003	comment	5.0	13.5	1695304459	-10.407979	As someone who's enough of an early adopter to have been running Rust in production since ~2016, and who takes a good look at Elixir every few years, there are two major things holding me back:1. Lack...		ekidd
37610967	12.231594	-7.539265	comment	5.0	19.5	1695384789	-11.310321	Kotlin running on the JVM is a disadvantage outside of Android though in a lot of spaces. Rust/Swift/Go will use a fraction of the ram to run a server application than Kotlin will.		robertjpayne
37611421	11.61798	-7.48962	comment	5.0	21.0	1695387572	10.075868	I kind of consider algebraic data types (the combination of this style of enum (sum types) and structs (product types)) paired with pattern matching as the core feature set that any modern language mu...		pdpi
37615480	11.649294	-7.9779243	story	5.0	120.0	1695406080	10.230743	Shades of Go: Traps, Gotchas, and Common Mistakes for New Golang Devs	http://golang50shad.es	spallas
37670903	11.625972	-7.176869	comment	5.0	12.5	1695795908	9.010847	> With type information, this is possible to disambiguate, but the goal of the parser is to not require type information.Why?It looks like a pretense at purity for the sake of purity.		troupo
37692166	12.091048	-7.8242354	story	5.0	61.0	1695919302	-3.1556187	RZK: Experimental proof assistant for synthetic ∞-categories	https://github.com/rzk-lang/rzk	adamnemecek
37703457	11.668189	-7.9551086	comment	5.0	13.0	1695992401	10.232212	For a technology to become widely used it usually needs one or more of these factors when it is released:1. A big company that adopted it in a major way or created it (Go, Java, React).2. A very low b...		rapsey
37748611	12.002728	-7.778296	comment	5.0	14.0	1696315152	10.418958	I think its great that someone is trying to make haskell not suck to use. Better still that its very ambitious as it means people will learn much if or when it doesn't meet its aspirations.		jdeaton
37764617	11.997237	-7.1446056	comment	5.0	20.0	1696425280	-9.165316	The embracing of Typescript and type hints pretty much solidifies the case against dynamic typing for complicated projects.We have projects in java7 still which span thousands of LoC and juniors can just jump in using their IDE and make some sort of contribution.With python this takes much longer.		kakadu
37764816	11.757497	-7.3608985	comment	5.0	14.5	1696426102	-8.892767	"With ""dynamic typing"" there is no compiler to figure out the types for you. There is only the runtime to print a stack trace (if you're lucky) and bail out. The whole point of types is to be able to c..."		chongli
37764842	11.739174	-7.3361998	comment	5.0	23.5	1696426174	-8.85072	"You're not ""moving faster"" if a typo is a runtime error and you're not ""more productive"" if you can't change a function signature without having to grep your codebase to find all callsites and pray yo..."		alexvitkov
37764977	11.793135	-7.365582	comment	5.0	36.5	1696426665	-8.901771	I don't consider it productive to be personal about technical topics. It's best to divorce yourself and the other party from the issue to limit as much bias as possible. You don't need to worry about ...		bitblender
37765093	11.782299	-7.3552423	comment	5.0	30.0	1696427129	-8.9034195	Some prejudices are rational. To paraphrase, it would take an enormous amount of prior trust and respect before I even humour someone trying me to convince me the sky is green with a straight face.Som...		loup-vaillant
37766353	11.830948	-7.3853936	comment	5.0	16.0	1696432385	-8.947619	It really matters which static type system is in question.SML or Haskell? Yep, like those ones. The languages would not be so useful without their compile time type checking.C? Not worth the trouble. ...		JonChesterfield
37768903	11.808638	-7.1247325	comment	5.0	14.0	1696441558	-9.003234	Here is a fun fact that you don't realize.Say you can do the project in 2 ways.First way is to use a strongly typed language, think about the data, and design your code in the appropriate way. You cod...		ActorNightly
37805740	11.974097	-7.7364316	comment	5.0	19.0	1696714310	10.478625	Most of the comments so far are negative, so I'll add something positive. One thing I love about the Haskell community is how they are always questioning their assumptions and genuinely seeking the be...		stepchowfun
37840107	11.943451	-7.733053	story	5.0	108.0	1696989678	10.383254	GHC 9.8.1	https://discourse.haskell.org/t/ghc-9-8-1-is-now-available/7832	njaremko
37840593	11.616684	-7.979423	comment	5.0	18.0	1696995405	10.240951	This blog post really feels like it was written for the sake of writing something. A C library mechanically translated to Go does not magically become a Go library, and the whole thing feels like carg...		Pannoniae
37846173	11.593066	-7.855148	comment	5.0	15.0	1697039952	10.085846	"""Channels are nice, until they are not. I feel as though it's easier, though not necessarily easy, to write correct programs using mutexes than Go channels in many cases.""The rule for mutexes is, neve..."		jerf
37899312	11.605196	-7.941221	comment	5.0	21.5	1697461571	10.206298	As I commented[1] I think the syntax is flawed in the proposal.You need to weirdly create a magic string to define your handler. Why not make it an actual argument, then using already existing constants is easier.[1] https://github.com/golang/go/issues/61410#issuecomment-16580...		gempir
37902920	11.616934	-7.532604	comment	5.0	13.5	1697476066	-8.426196	I'm having trouble thinking of a mainstream production language with a stronger type system that could make a compile error out of the string argument passed to an HTTP router; can you think of one? O...		tptacek
37965403	11.795469	-7.523361	comment	5.0	15.5	1697881501	9.990918	I think a good first step towards improvement in this space is by separating the terms 'abstraction' and 'indirection'.Programmers too often add indirections which don't provide abstraction:  * The pr...		mrkeen
38011387	11.638695	-7.9474063	story	5.0	52.0	1698230826	10.174644	Mptcp: An overlooked new feature in Go 1.21	https://www.sobyte.net/post/2023-07/mptcp-go/	signa11
38037574	12.441897	-7.0655155	story	5.0	53.0	1698409812	12.38009	"""Useless Ruby sugar"": Pattern matching (Pt. 2)"	https://zverok.space/blog/2023-10-27-syntax-sugar2-pattern-matching-cont.html	amalinovic
38053053	12.345057	-7.028042	comment	5.0	13.5	1698524548	13.180793	I heard he even considered casting Perl before swine		bdcravens
38081223	11.751265	-7.336739	comment	5.0	18.0	1698736649	-8.886594	I have a beef with the typing section:> grug very like type systems make programming easier. for grug, type systems most value when grug hit dot on keyboard and list of things grug can do pop up magic...		mordae
38126661	11.643657	-7.935973	comment	5.0	22.5	1699007010	10.214388	Go isn't a serious language for large systems. The language allows writing shitty code and the community has largely adopted that. Go fanatics will hate this, but you simply can't compare it with the ability to write and maintain in languages like Java.		destevil
38151610	12.082768	-7.406163	comment	5.0	31.0	1699195868	-10.609741	Great addition to a great language.We've been building a very technical product in F# + Rust for the last three years or so (think R lang + R Studio or Replit but for DSLs we built for finance and con...		obeavs
38153635	12.135905	-7.6189957	comment	5.0	14.5	1699207167	-10.611432	Noob question. I developed projects in OCaml (ocaml + opam + merlin + core/async) on linux/macos. I'm clueless about F#, I've always thought of that as some sort of JVM for Windows, not great for Linu...		yodsanklai
38156639	12.143063	-7.8907576	story	5.0	110.0	1699225408	-3.2465641	Applied Category Theory: Textbook (2019)	https://ocw.mit.edu/courses/18-s097-applied-category-theory-january-iap-2019/resources/18-s097iap19textbook/	johnsonjo
38162779	12.126416	-7.859442	story	5.0	47.0	1699279829	-3.2369022	Category Theory for Programming	https://arxiv.org/abs/2209.01259	marvinborner
38179945	11.843601	-7.361352	comment	5.0	15.5	1699378480	9.204196	> AsyncIterator and async generatorsFor what it's worth, Dart has had synchronous and asynchronous generators (including `await for` statements) for as long as its had async/await. They are neat featu...		munificent
38184461	12.412801	-7.3547716	comment	5.0	18.5	1699399010	2.0764673	Looks decent. I somehow missed the previous thousand discussions.I’d love to hear from anyone running it in production.I have always been BEAM-curious, but never felt comfortable running it in product...		christophilus
38185279	11.716467	-7.267101	comment	5.0	19.5	1699404187	8.683417	I first heard of algebraic effects in a presentation about Unison recorded at Strangeloop. Realizing that exceptions, async, generators, and continuations could all be unified and implemented on top o...		infogulch
38235833	11.706047	-7.8867707	comment	5.0	46.0	1699747140	-2.043214	OCaml is great, we learned it in class back in college, then we learned Rust right afterwards. Oftentimes people say OCaml is Rust without the borrow checker (or that Rust is OCaml with a borrow check...		satvikpendem
38270357	11.650145	-7.349899	comment	5.0	15.0	1699998859	-8.648799	I would love to know more about what the author found difficult regarding type checking. As long as you don't screw up your semantics to the point of needing a full blown constraint solver there shoul...		PhilipRoman
38291135	11.923438	-7.4373417	comment	5.0	12.5	1700150374	-5.3285027	I can't resist mentioning F# Units of Measure aka UoM :)https://learn.microsoft.com/en-us/dotnet/fsharp/language-ref...		evntdrvn
38353718	12.178886	-7.0898013	comment	5.0	15.0	1700510518	-10.421264	> 1. The typesystem will be sound, ML-like, and so simple that any code that doesn't interact with external data will not need _any_ type annotations.I've tried using languages with this promise, such...		johnfn
38381241	11.972294	-7.1013675	comment	5.0	57.5	1700670015	-9.502726	Python not only has types but it's type system is superior to typeScript.Get this python has sum types and exhaustive pattern matching exactly like rust or haskell.The only problem with python are the...		corethree
38392358	12.034958	-7.2317305	comment	5.0	17.5	1700745053	9.144484	"One thing I have recently stumbled upon is that the way Promise.all() is commonly used is ""wrong"" in the sense that it is prone to uncatchable promise rejections (which cause both Node and Deno to exi..."		moring
38394343	11.914382	-7.5252686	comment	5.0	14.0	1700756061	7.468232	> Haskell, Scala, F#, OCaml, etc.Rust is the first not-weirdass-academic-wtf language to have these features ;)(I love functional programming and apply the functional approach no matter what language ...		Shish2k
38407011	12.426787	-7.0812364	comment	5.0	14.0	1700852420	12.384787	"As a lifelong rubyist, this is definitely what I would say ""useless"".  Maybe it's just because I've been stuck in Ruby 2.6 ~~hell~~ land for so long but I remember seeing a colleagues leetcode challen..."		thowaway91234
38419647	11.908161	-7.4323587	comment	5.0	15.5	1700980540	7.1846766	I'd like to see an experimental language that leans hard into the concept of controlled mutation.I always say that purely in terms of design my ideal language is high-level Haskell, low-level C. Conce...		qsort
38425506	11.633032	-7.266415	comment	5.0	14.0	1701036374	-7.028781	"I'll see you Bjarne Stroustrup, and raise you Alan Kay,""Actually I made up the term ""object-oriented"", and I can tell you I did not have C++ in mind.""https://en.wikiquote.org/wiki/Alan_Kay"		getpost
38528357	12.28832	-7.569933	comment	5.0	12.5	1701765570	12.903032	"I feel this in my newcomer bones. Every time someone badass writes something in erlang or clojure or rust or something and I'm like... ""the problem was complicated enough, why'd you add an esoteric language to it?"""		pluto_modadic
38548273	12.1132145	-7.2709484	comment	5.0	14.5	1701890342	8.530911	"""At the same time, the level of hype about ECS today reminds me an awful lot of the amount of hype surrounding OOP in the 90s.""I appreciate that most of the ECS hype has been around specific use cases..."		jerf
38566829	12.012376	-7.782696	comment	5.0	14.5	1702026071	-6.5205574	We know what Applicative and Monad (forgetting the burrito) do because the have mathematical LAWS. If a piece of code uses Applicative or Monad you know it’s behaviour due to the Applicative/Monad mat...		tiew9Vii
38586878	11.644748	-7.971216	story	5.0	15.0	1702161765	10.202617	Looking for elegant code bases written in Golang		suhasval
38594373	11.608483	-7.0579615	comment	5.0	18.0	1702237875	8.169942	I'm not a Java dev, so forgive me if I misunderstand it, but is this basically just a different API for calling C functions? Java already was able to do so was it not? How does this improve on it?		Deukhoofd
14704214	11.672236	-7.2928195	comment	5.0	21.5	1499274675	-8.987837	Pattern matching without support for algebraic datatypes really misses the point. What you want is to be able to declare all the shapes of your data, with descriptive names, and then be able to say de...		jez
33078029	11.868222	-7.55465	comment	5.0	14.5	1664874800	10.252015	Not being intuitive isn’t the strongest argument against specialized notation. Programming languages aren’t intuitive either, yet we learned them. The rationale is that the arrow goes into the directi...		codeflo
33076774	12.281078	-7.2877097	comment	5.0	20.0	1664858766	7.1329193	It's not a new approach but actually a very old one. The author mentions Intellij but fails to note the history of Eclipse which, via IBM's Visual Age, you can actually trace back all the way to Small...		jillesvangurp
33098702	11.686088	-7.083791	comment	5.0	18.0	1664991514	8.167028	Bogus blog.Might have been true back in the JDK 6 or JDK 7 age but from JDK 8 to JDK 19 it has become a better functional programming language than most functional programming languages.If the author likes he can keep coding in C++ where strcpy is Turing complete.		PaulHoule
33225047	11.991355	-7.7355967	comment	5.0	26.5	1665938804	10.373828	Around 7:50 in Jones says this:“So, one of the great things about Haskell actually, that is spoken about and I think it’s the sort of killer app for Haskell, is that it’s so refactorable, right? You c...		melling
33245570	11.859578	-7.3829317	comment	5.0	16.5	1666091554	-9.722788	"Scala, Kotlin, Haxe, Swift, and several others. The search term you want is ""Algebraic Data Types""Erlang has the superpowered version of this - binary pattern matching, that lets you pattern match on a bitstream directly."		pdpi
33308700	12.24382	-7.646038	comment	5.0	17.5	1666546903	11.944651	The experience report on Scala I find pretty cathartic. It really is absolutely ridiculous the fetishization of extremely complex FP and type-level hacking that goes on in the ecosystem, to the point ...		joshlemer
33320773	12.042926	-7.7540536	comment	5.0	13.0	1666637611	10.441471	I've been meaning to pick up either Haskell or OCaml for my next language. On the OCaml side, I see Cornell's free CS 3110 textbook recommended around here. Is there something similar on the Haskell side?		mgomez
33329857	12.246893	-7.5442853	comment	5.0	16.5	1666702686	-11.38927	“Shorter code: Kotlin’s modern design makes its code shorter.”How much shorter?  How large would the code be in pure Java?		melling
33329899	12.268374	-7.578985	comment	5.0	24.5	1666702956	-11.354695	Kotlin is plenty safe for now.* Android is a massive platform, and Android is basically stuck on JDK8 (or JDK11 with desugaring, wooo).* iOS compatibility-ish. KMM is not ideal and mostly generates Ob...		ohgodplsno
33353167	11.630122	-7.4127436	comment	5.0	13.5	1666845433	9.72095	"Can someone explain how this is ""simple"" to understand?  type openWeatherMap struct{}
  ...
  var d struct {
    Main struct {
      Kelvin float64 `json:""temp""`
    } `json:""main""`
  }

  if err := j..."		herpderperator
33381940	11.692218	-7.3034863	comment	5.0	13.5	1667029698	-8.858945	"""Convenience"" is exactly right and syntactic sugar is underrated.Just like static typing is a convenience.  And dynamic typing is a (different) convenience.  And unit tests are a convenience.The compu..."		mpweiher
33435799	11.961924	-7.4813876	comment	5.0	27.5	1667397337	7.3923798	">  FP people are not bullying you, or shoving anything down your throat.Have you ever worked with a FP evangelist? Every single experience I've had has been with a person who simply won't take ""no"" fo..."		sidlls
33519276	12.165559	-7.5534906	comment	5.0	12.5	1667917632	-11.368851	Arguments against:1. Google prefer Kotlin over Java for Android.1. You're old so your opinion counts for less.6. On the stackoverflow survey Java is less wanted than APL, bash and CSS.2. Go has a cute...		jstx1
33548145	11.918558	-7.067805	comment	5.0	14.0	1668095213	-10.725847	There is very little in everyday Python usage that benefits from Asyncio. Two in webdev, are long running request (Websockets, SSE, long polling), and processing multiple backend IO processes in paral...		samwillis
33566503	11.647267	-7.9336286	comment	5.0	13.0	1668199225	10.228187	"Anyone else feeling put off by golang? The syntax, the crazy error handling, etc.
To me it's like taking a step back in programming, or actually 20 years back.
Not better than Java (which is annoyingly verbose), maybe better than Pascal."		playingalong
33568693	11.718177	-7.2916136	comment	5.0	17.0	1668213366	7.197731	I was thinking today that there's something wrong about thinking too much in types and type relations.Rule 5 of Rob Pike[1] says:> Data dominates. If you've chosen the right data structures and organi...		baby
33620803	11.956071	-7.470687	comment	5.0	20.0	1668592244	7.228478	> One of the people I showed this to had an interesting reaction. Their response was something like: “Hey! I like functional programming because I’m lazy and incompetent. It’s about all the things I d...		alexmolas
33620931	11.918822	-7.527568	comment	5.0	14.5	1668593566	-2.0018322	I would rather inherit someone's stateful JavaScript or Java than a complicated codebase by a seasoned Clojure, Haskell, Scala developer.I stand a better chance understanding the sequential code than ...		samsquire
33620988	12.025687	-7.26693	comment	5.0	15.0	1668594152	-10.39208	I've just left a startup company who's entire backend was written in a functional style using Typescript by an agency. The only reason I can fathom why is 'why not, functional programming is cool righ...		kalekold
33624257	11.976517	-7.4912753	comment	5.0	31.0	1668611234	7.123338	This opinion is also biased. We have no theoretical method for determining which design philosophy is better than the other.We can't know whether the OOP religion is better, we also can't know if the ...		deltasevennine
33625361	11.9522915	-7.68074	comment	5.0	21.5	1668614617	10.398249	"The main problem is discovery.When I hold some object I can easily discover the things I can do with that object—just by typing ""."" after the object reference.In something like Haskell I need to know ..."		still_grokking
33651585	12.443237	-7.0374503	comment	5.0	15.0	1668757473	12.931823	Ruby is well known as the “bad parts of Perl” so there’s a beautiful horror here. It’s also funny that Ruby is the slowest of the dynamic languages, and that Perl is much faster. They created a magnificent mind bending nightmare.		stevebmark
33656112	11.620843	-7.894008	comment	5.0	20.0	1668785404	10.188022	> Go interfaces generally belong in the package that consumes values of the interface type, not a package that implements the interface type. The implementing package should return concrete (usually p...		leetrout
33677449	11.818407	-7.3553567	comment	5.0	15.0	1668910865	-6.1334977	This may be a lost cause, but I don't think a beginner language should have mutable data at all. The only reason we really need mutability is for speed - our programs have to run on actual machines an...		robto
33687179	12.243321	-7.643849	story	5.0	24.0	1668990643	-5.1592207	Scala 3 is not production ready	https://gvolpe.com/blog/scala3-is-not-prod-ready/	ghuntley
33722088	11.719039	-7.257204	comment	5.0	15.0	1669224737	-8.95254	As someone who's worked on a huge Python program (10M+ LOC), type safety was the last thing on our mind when maintaining it.Refactoring might not have been quite as simple, but there are plenty of too...		falcolas
33722612	11.821453	-7.246626	comment	5.0	18.0	1669227251	-8.959556	I'm not sure what Python has to do with functional programming, even remotely. It basically contains none of the typical building blocks for functional programming (immutable data, real lambdas, patte...		bmitc
33727311	11.878639	-7.1045613	story	5.0	12.0	1669257974	-10.74868	Ask HN: Ways to deal with Python 3.11 breaking change to asyncio		m3047
33793994	12.269471	-7.1209464	comment	5.0	24.5	1669759305	12.339575	"> irb(main):005:0> john.name = ""John Doe""> (irb):5:in `<main>': undefined method `name=' for <...> (NoMethodError)> Did you mean?  nameThis error message is a bit roundabout. I assume the implication ..."		yunohn
33804719	11.958942	-7.0918746	comment	5.0	26.0	1669831198	-6.9975724	"In Ruby and many other languages, you have this idea of a string concatenation:  ""foo"" + ""bar"" -> ""foobar""
  ""foo"" + """" -> ""foo""

That makes it a monoid. Instead of talking about OOP patterns, knowing..."		hosh
33902910	12.152047	-7.3950133	comment	5.0	20.0	1670462882	-11.38903	"Java can never be Kotlin without breaking a lot of backwards compatibility. That is the ""edge"" a newer JVM language like Kotlin enjoys.Since Java's history is very focused on not breaking things (and ..."		Alupis
33911283	11.7741	-7.1463757	comment	5.0	27.5	1670524104	-8.97604	Since Codon performs static type checking ahead of time, a few of Python's dynamic features are disallowed. For example, monkey patching classes at runtime (although Codon supports a form of this at c...		munificent
33918268	11.66056	-7.921175	story	5.0	3.0	1670567630	10.179901	Ask HN: Is it shooting myself in the foot to use Go for back end business logic?		lairv
33954958	12.097557	-7.828563	story	5.0	152.0	1670855438	10.471483	OCaml Canvas	https://ocamlpro.github.io/ocaml-canvas/	nickmain
33966600	12.310066	-7.0581536	comment	5.0	15.5	1670924547	12.827537	"To be fair, Ruby inherited ""unless"" from Perl.And Perl literally has the opposite design principle, TIMTOWTDI or ""there is more than one way to do it"".I'm not arguing here -- I prefer the ""one obvious..."		sshine
34005024	11.661153	-7.096721	story	5.0	14.0	1671135221	8.196816	C++ overtakes Java in language popularity index	https://www.infoworld.com/article/3682141/c-plus-plus-overtakes-java-in-language-popularity-index.html	elorant
35166145	12.278382	-7.288872	comment	5.0	12.5	1678876377	7.0440288	Doesn't seem dead to me. https://pharo.org/success/And the article was about Smalltalk being a secret weapon due to ease of use and productivity for start-ups. If you are going to use a top 5 popular ...		DeathArrow
35179925	11.802262	-7.126779	comment	5.0	15.5	1678959858	9.064599	Not only async, but C# had LINQ, lambdas, records, pattern matching, pointers,  hardware instructions via intrinsics, stackalloc etc. before similar constructs came into Java, if they ever did.Probabl...		DeathArrow
35202627	11.683688	-7.861807	comment	5.0	18.0	1679085685	10.092921	Now in 2023 I'd strongly think twice before investing heavily in Java. For the vast majority of use cases where Java is utilized Go ends up being a better choice w/ cleaner codebases, static binaries ...		alfalfasprout
35208183	11.665544	-7.475863	comment	5.0	15.5	1679139261	9.279328	Async/await in C# is a leaky abstraction though. There is a great writeup on this here https://journal.stuffwithstuff.com/2015/02/01/what-color-is-...		Dzugaru
35211726	12.136812	-7.8773427	comment	5.0	17.0	1679163885	-3.2498968	It sounds like category theory likely has no direct impact on your life. So you can move on.But please do not let this bleed into a criticism of category theory as used in mathematics. Category theory...		maxiepoo
35220154	12.3309555	-7.050933	comment	5.0	12.5	1679240837	13.189821	That's basically a side-effect of Perl being a dead language, frozen because Perl 6 will never happen. It's surprisingly hard to eradicate, however.		fmajid
35248260	12.505611	-7.72464	comment	5.0	21.0	1679415139	-11.166566	As a Clojure programmer, I don't care about any of the Java language features or improvements, but I'm super happy that I'm getting a state of the art JVM that is continuously developed, maintained, e...		jwr
35248877	11.6285715	-7.024415	comment	5.0	15.5	1679417325	6.274268	"What’ the hype with pattern matching?
What does it solve?"		Alifatisk
35253476	12.134678	-7.6180935	comment	5.0	14.0	1679437184	-10.67156	As a fan of O'Caml, I have to ask: what's the status of F# on .NET?...and is it used much compared to C#, or is its use at least growing, or is it stagnating/dying?		pmoriarty
35302492	11.625048	-7.914204	comment	5.0	22.5	1679751448	10.200325	Golang is really the best example of a minimal language (Yes yes I know late to generics and all that). I think it works because they have spent huge amounts of effort to create a well designed and fa...		crop_rotation
35329724	12.271696	-7.3130465	story	5.0	82.0	1679938700	7.0068603	Smalltalk Type	https://moritzfuerst.net/projects/smalltalk-type	rbanffy
35368434	11.718054	-7.094522	comment	5.0	19.0	1680154018	9.928807	Yeah what's wrong with that? I think this sounds amazing. It gives you all the fast prototyping and simplicity of Python, but once you hit that bottleneck all you have to do is bring in a ringer to re...		INTPenis
35468386	12.216952	-7.6270356	comment	5.0	14.0	1680789526	11.939758	Scala had XML literals as part of the language!Apparently Philip Wadler was the person who told them needed it, because the future was XML.( Walder is big Haskell/PL person)		adamgordonbell
35497129	12.240103	-7.638951	comment	5.0	16.5	1680984748	12.001387	After ten years of using Scala, I think if I was running a Scala team, the safest thing would be to hire people who are not excited about Scala. Like it, yes, but not be super pumped. Developers who a...		dkarl
28043523	12.467238	-7.154745	comment	5.0	16.0	1627943591	-9.182451	Agreed. I also wish fewer libraries started their own supervision tree, and instead gave you a child spec to drop into your supervision tree. There's definitely use-cases where shipping libraries as a...		QuinnWilton
28060404	11.676622	-7.3490195	comment	5.0	15.0	1628081490	-8.808157	>In a dynamic language you end up writing a number of tests that would be covered by a static type systemNot once have I done this. I've written plenty of invariants that would have been covered by a ...		pydry
28083829	11.995911	-7.720116	comment	5.0	17.0	1628229992	10.397344	I tried writing a bunch of F# once before, but one major issue that came up was working with JSON. There's a lot of good libraries for serializing/deserializing, but sometimes you need to do something...		square_usual
28098221	12.134827	-7.868366	comment	5.0	14.0	1628340652	-3.2413855	Better title: study picks 9 categories and assigns chroinic pains to one of those categories, proving that data can be sorted into arbitrary categories.		yosito
28122800	11.739321	-7.052836	comment	5.0	13.0	1628546142	8.501479	>  Steps to use visualvm to profile memory for a standalone JBoss application:> Allow visualvm to use 1024 Mb of RAM - in etc/visualvm.conf update -Xmx parameter to -J-Xmx1024mAnd this is why I avoid ...		theamk
28127817	12.067705	-7.2600884	story	5.0	71.0	1628597419	-10.368569	Practical introduction to algebraic datatypes (ADTs) in TypeScript	https://medium.com/@el3ng/practical-introduction-to-algebraic-datatypes-adts-in-typescript-1cb6952e4c6d	elnygren
28153606	12.052306	-7.2245817	comment	5.0	13.0	1628756806	9.143508	"As always very good content from owasp.However, I'm a bit confused by the first one, ""use flat Promise chains"": it doesn't feel like a question about security, but more about code readability. While a..."		gregoriol
28174464	11.650868	-7.9664054	story	5.0	8.0	1628888460	10.193691	Would love a nice golang mentor		kubblai
28189305	11.934485	-7.421598	comment	5.0	24.5	1629039771	2.0439756	FP is absolutely way more time-efficient for most kinds of projects, if you know what you’re doing. Switching without having sufficient background first is probably not a good idea though.		wyager
28189421	11.992813	-7.7312417	comment	5.0	14.0	1629040532	10.399004	It's just the Haskell family of functional programming languages that is hard to pick up. There are plenty of functional language families that are quite easy to understand and much more pragmatic:* M...		darksaints
28194265	11.675706	-7.3327107	comment	5.0	30.5	1629079128	9.123397	Genuine question - is there a concrete and practical problem that can't be solved without Loom green threads on the JVM?Generally I think that programs can be structured nicely and have them perform o...		vemv
28194631	11.645272	-7.1146507	comment	5.0	15.5	1629083782	7.587246	"C# has evolved quite a bit over 20ish years. I suspect those posts predate $.Also: some people really oppose ""var."" I don't understand why, especially when newer languages like Swift and Rust really e..."		gwbas1c
28200366	12.1012535	-7.18591	comment	5.0	30.5	1629133677	8.379465	I think the focus on ECS when talking about data-oriented design largely misses the point of what data-oriented design is all about. Focusing on a _code_ design pattern is the antithesis of _data_-ori...		jeremycw
28254176	11.650383	-7.914121	comment	5.0	32.5	1629519928	10.205122	Find a different way to solve the problem. I've written close to half a million lines of code in Go and the lack of generics has been a pain point in maybe 1% of that? Usually, if you are thinking abo...		Taek
28256120	11.660889	-7.611914	comment	5.0	14.5	1629545797	10.115131	No, I don't want _tacked on_ generics.What languages in your opinion have good, non-tacked-on generics? Are they generally better than other languages?Here are some pretty successful languages that ga...		iainmerrick
28293321	11.629479	-7.150339	comment	5.0	18.0	1629831591	8.6452265	When you see how much effort it takes to C# and Java to optimize the runtime, there are a lot of people working on that. C# is fast but you see that it uses between 2 and 32 times the memory that Go n...		Thaxll
28312056	11.76299	-7.1170845	comment	5.0	17.5	1629966204	-8.964046	Recently there's a strong tendency in the Python ecosystem to wrap perfectly fine idioms with even higher abstractions. Not sure if I like this, in the end it leads to a lot of cargo culting and peopl...		ThePhysicist
28315981	11.616565	-7.260453	comment	5.0	16.0	1629990785	7.204422	The original poster says that these functions can't ever have invariants broken:> Functions that only mutate instances of well-encapsulated types through their public APIs. That includes nearly all fu...		lalaithion
28324393	12.4655075	-7.0494604	comment	5.0	33.0	1630039531	1.5391726	Can someone help me understand why anyone would ever rely on monkeypatching in non-test code?Python is just as dynamic as Ruby in a lot of ways. But in Python, overwriting an existing and important/fu...		nerdponx
28333059	12.323701	-7.297494	comment	5.0	12.5	1630099054	3.8288798	I wanted to check out Squeak so I went to the squeak.org website and ran into so many broken links on the wiki.		msie
28333505	12.296759	-7.295398	comment	5.0	15.5	1630102207	7.0986724	IMHO, the claim that pharo is not smalltalk is, to put it bluntly, nonsense.Yes, I understand that Pharo may well eventually change the some semantics of the underlying language, or at least reserves ...		isr
28345883	11.971394	-7.7454324	comment	5.0	12.5	1630236804	10.385158	It would be nice to get an example of how this wonderful REPL does all the cool things mentioned.In fact Haskell has a decent REPL, and you can (if you really want to) explicitly allow IO outside the ...		Y_Y
28366021	11.670141	-7.814686	comment	5.0	14.0	1630405217	10.237196	If you've coded in Python for years then you probably haven't been exposed to the problems that Go was designed to solve. It's a systems programming language, like C. It's designed to be high performa...		Philip-J-Fry
28374736	12.504057	-7.5284925	comment	5.0	16.0	1630451440	12.85174	Erlang does not allow structural sharing. Sending large data structures to other processes always means serialization penalties, even if those processes run on the same CPU.Also, was the Erlang VM written in Erlang? Probably not. So I'm skeptical about the universality claims of the language.		amelius
28375304	11.969234	-7.479729	comment	5.0	14.0	1630456613	7.1922865	The key gap in this argument is the blank slate which I'll define to be everyone has the same type of intelligence and same level.1. Type of intelligence. This piece drove by the functional versus pro...		mybrid
28391864	12.008067	-7.733771	comment	5.0	17.5	1630590161	10.466968	Go has Google support behind it though. Its journey is far from over (that is, until Google abandons it for another language), whereas Ruby's/Rail's growth phase is more than a decade behind us, and i...		JohnWhigham
28475171	12.010489	-7.7690043	comment	5.0	13.5	1631224931	10.408856	> Posted on August 25, 2021 by Rebecca Skinner> This blog post is a long-form article based on a talk I delivered at the haskell.love conference on 10 Sept 2021Today, as far as I can tell, is Sept 9, 2021. Hello traveller from the future. Is time travel possible with Haskell?		dfee
28475617	11.755199	-7.374048	comment	5.0	23.0	1631227880	-8.6859	back in the days, I had this infatuations with the idea of having everything checked at compile time by using type system. and I see many people following this kind of path with type system of Haskell...		12thwonder
28477024	11.68675	-7.365186	comment	5.0	13.5	1631240114	-8.549171	Here's how I like to think about things:Values are things. Concrete. Since we are manipulating computers, a value is really just some abstract symbols--1s and 0s occupying a slot in memory. The meanin...		jkhdigital
28515036	11.996134	-7.646023	comment	5.0	16.0	1631558260	10.37542	"I've seen a handful of articles and conference talks where the main thrust is ""why isn't functional programming more popular"". Apparently it works well and is ""intuitive"" for some people. I think the ..."		ryanmarsh
28515055	11.9101925	-7.4615836	comment	5.0	22.0	1631558356	7.28039	"Fully functional programming (e.g. Haskell) isn't popular because it isn't ideal and computers work imperatively.Even in a ""functional"" task (e.g. compiling) sometimes you just want an imperative algo..."		armchairhacker
28519982	11.963459	-7.490323	comment	5.0	17.5	1631591150	7.265627	"Fact: functional programming takes more time to learn. It's not full of people that are ""smarter' or ""snobs"" it's just full of people that have taken the time and invested in educating themselves to g..."		csneeky
28548543	12.13689	-7.8782244	comment	5.0	12.5	1631771830	-3.2152882	"Are there any introductions to category theory you would recommend in particular?A cursory glance gives me this:
http://www.cs.nott.ac.uk/~pszgmh/cat.htmlWhich seems to avoid being very ""mathy"" right out of the gate, though I can't tell its quality."		rackjack
28548857	12.028147	-7.8105597	comment	5.0	17.5	1631775158	10.40611	'The category of algebras of a monad on Set is complete and cocomplete, and the forgetful functor preserves limits.' gets you pretty far in a lot of subjects.		OscarCunningham
28583238	11.868388	-7.434648	comment	5.0	16.5	1632048016	-8.715101	Nice explanation, however I don't really see the use case for currying yet. If you want functions with fixed arguments, you could also just create a new function that calls the other with a fixed first argument and just takes the other arguments. Am I missing something?		leodriesch
28583343	11.709463	-7.315935	comment	5.0	18.0	1632049182	-8.069725	Any discussion on the utility of currying (i.e. closures) vs constructing an object with methods always reminds me of this parable:```The venerable master Qc Na was walking with his student, Anton. Ho...		SPBS
28585309	11.7413435	-7.329788	comment	5.0	12.5	1632066756	-8.949346	If you can't use an IDE to jump to the definition (or list all possible definitions) of a function, then aren't you missing one of the main benefits of a statically-typed language? If you can't use the static types for static analysis, what's the point?		nerdponx
12556180	11.628468	-7.9560137	comment	5.0	15.0	1474545406	10.190593	Didn't one of the main selling points of Go is one big static executable with no external dependencies?What's next? Generics?		SoapSeller
12559747	11.773393	-7.344871	comment	5.0	24.5	1474573754	-8.913629	I don't get this. Most of the known refactorings can't be easily implemented by IDEs so you're left with the trivial ones like renaming or moving things.Static types won't help you refactor a monster ...		jeremiep
12559869	11.714064	-7.3591547	comment	5.0	19.5	1474574568	-8.82839	I'd rather have tests than types. Unless your type-system is sound; most of them are very, very far from it.You can specify the domain of values with types, but not their ranges. Side-effects fall thr...		jeremiep
12563138	11.64111	-7.959383	comment	5.0	17.5	1474619483	10.206153	"> What is missing from the Go ecosystem?Personally, golang ""IDE"" experience is not as good as Java or even C++.For example, ycmd only supports subset of functions for golang. I miss ycmd-goto-references the most."		kozikow
12571033	11.975258	-7.7331986	story	5.0	49.0	1474727039	10.388342	Brief History of Haskell	https://www.futurelearn.com/courses/functional-programming-haskell/1/steps/115453	jasim
12581596	11.679755	-7.35988	comment	5.0	19.5	1474896513	-9.016341	I think the pitch is that despite static typing, it offers a lot of multi-paradigm high-level features while remaining elegant with fairly minimal syntax compared to other native static languages like...		hellofunk
12585805	11.613373	-7.221035	comment	5.0	14.0	1474925800	5.0745306	"That is not what dynamic analysis means but I appreciate everyone redefining terms to suit their marketing.
https://en.wikipedia.org/wiki/Dynamic_program_analysis"		morbosoft
12586739	12.4376135	-7.7807717	comment	5.0	20.5	1474935933	-11.10255	I guess I don't understand what the big deal is with tail call optimization.  Could someone give an example where it really shines and clojure's loop/recur just doesn't?If you are looking to put time into a programming language that is interesting in and of itself, I'd suggest Haskell.		DigitalJack
12602843	11.643185	-7.938153	story	5.0	125.0	1475114688	10.193834	Gosl – Go scientific library	https://github.com/cpmech/gosl	wener
12607047	11.994486	-7.729554	comment	5.0	25.0	1475169671	9.5060215	"I understand the value of referential transparency and how it makes ""certain"" things easy, but saying that it automatically makes testing functional code easy is a myth. Sometimes it does, sometimes i..."		hota_mazi
12609247	11.819265	-7.5249705	story	5.0	86.0	1475187311	9.859108	Algebraic Patterns – Monoid Morphism	http://philipnilsson.github.io/Badness10k/posts/2016-08-10-functional-patterns-monoid-morphism.html	alipang
12610729	11.678508	-7.349443	comment	5.0	18.5	1475215113	-8.767544	"What on Earth is ""enterprise-level type checking""?"		ilurkedhere
12612691	11.619984	-7.3235927	comment	5.0	18.5	1475246249	-8.7542925	Disagree. Effective use of types has a much better cost/benefit than tests, and it's possible to go all the way down to 0% defect rate using just the type system (by encoding proof of correctness into the type system) if you really need to.		lmm
12616497	11.674563	-7.1350336	comment	5.0	20.0	1475295436	10.067969	I'm not familiar enough with compilers, but why would an ahead of time compiler perform worse than a just in time compiler in a static language? I think I'd understand if it was a dynamic language, be...		avbor
12616587	11.7283745	-7.8722434	comment	5.0	17.5	1475298546	10.224932	Why was Java ever JIT'd rather than natively compiled anyway? I hate to stick my neck out and even ask this but I never understood why you'd want to JIT or interpret when you can just natively compile...		BuckRogers
12686976	11.737181	-7.374438	comment	5.0	17.0	1476209493	-8.917724	Is there anything like Julia, but with strong typing and pure FP?addendum: read 'static' for 'strong', please		pklausler
12713685	11.793823	-7.4145184	comment	5.0	14.0	1476533341	10.126015	"The GoF design patterns book has two core, very closely related, problems.The first is that it doesn't make enough of an effort to present ""design patterns"" as a conceptual framework. Can you program ..."		InclinedPlane
12737382	12.085851	-7.2212358	comment	5.0	33.0	1476815983	0.75311905	When a native Promise incurs a rejection but there is no handler to receive it, a warning will be printed to standard error.Probably the most important change other than improvements in es2015 support.		dcgudeman
12737885	11.707246	-7.140161	comment	5.0	20.5	1476819042	8.445504	> isn't much shorter than how it is done in javaThe savings in screen space and visual cortex neurons doesn't come from the one or two properties that need logic, it comes from the dozen avoided    /*...		jjoonathan
12774548	12.179051	-7.034561	comment	5.0	19.5	1477245140	-10.285047	I spent 10 hours yesterday refactoring and adding features to a client side enterprise application that is well over 20k lines of TypeScript over tons of files.Yesterday was a pretty productive day fo...		pixie_
12781253	11.599694	-7.0923653	comment	5.0	16.5	1477332641	-7.0589366	"It's spelled out pretty well in the article. But if you want another example, consider these two code blocks:  var foo;
  var bar;
  { 
    let foo = ""hello"";
    var bar = ""world"";
  }
  console.log(..."		Meegul
12791365	12.159754	-7.643905	comment	5.0	26.5	1477427179	11.926745	The problem with Scala is not that it has all the features of Swift, it's that it has way more. Scala developers see this as an advantage, everybody else sees that as a liability.Swift and Kotin manag...		hota_mazi
12799376	12.046136	-7.7448983	story	5.0	52.0	1477508358	10.439587	Iterated Function Systems with OCaml	https://github.com/cedricbonhomme/iterated-function-systems	cedricbonhomme
12808775	12.124184	-7.637392	comment	5.0	18.5	1477596168	11.88631	"    functional, oop

Do these have any intersection except Scala?"		duck2
12851636	11.965192	-7.249257	comment	5.0	13.5	1478050533	9.173157	I have one major misgiving about async-await - the regression in needing to do a try-catch if one isn't isn't a test situation. This is a terrible syntax to have to write to handle this.That said, asy...		Bahamut
12853288	11.8586855	-7.2897625	comment	5.0	14.0	1478080256	9.202713	"Still not entirely sure what the big win with async/await is. Is it just a readability thing? Is there one ""killer"" case that demonstrates its superiority over callbacks?"		fergie
12889082	12.252065	-7.0187516	comment	5.0	14.5	1478497852	13.161057	"""why isn't it (Perl6) the poster child of the scripting languages yet?""In the Perl6 community there is no equivalent of ""The Python Tutorial"" [0] or the ""Python X.Y.Z documentation"". From Python 1.X o..."		bootload
12903501	11.6337805	-7.074137	comment	5.0	18.0	1478635681	8.682604	On the topic of using the JVM to make games, do you find yourself using the trick of not allocating any new objects (wither from Java or Kotlin) within the game loop? I've heard of that trick, and am ...		sdegutis
12908148	11.7189455	-7.0463324	comment	5.0	21.0	1478681762	8.9387665	> I'm a Python programmer. I fully expect dict keys to be able to be arbitrary objects.I'm a Python programmer too, and I also fully expect dict keys to be able to be arbitary objects, and I get reall...		Singletoned
12915137	11.650542	-7.9742174	comment	5.0	17.0	1478728837	10.248795	The academics always miss this part. They assume the most elegant and concise form of expression for an idea or a concept is equivalent to pragmatism. When in reality pragmatism in software engineerin...		dkarapetyan
12920971	11.617033	-7.9343495	comment	5.0	18.0	1478790678	10.134405	Out of interest, can you point me to any GUI bindings or native Go GUI toolkits etc.? I would like to take a look, as I am normally writing native C++ GUI desktop apps.EDIT: Thanks for all the info everyone. I hope my responses don't appear argumentative - I am genuinely curious.		72deluxe
12921642	11.614443	-7.909328	comment	5.0	13.5	1478794503	10.207839	My 2c: Go is incredibly convenient for non-programmers. I don't make a living writing software, I make a living answering quantitative questions, using computers. I use Python for most tasks, but when...		drej
12924245	11.638052	-7.957117	comment	5.0	20.0	1478811232	10.216706	I find the Go version to be easier to debug though.		namelezz
12971865	12.31187	-7.0326467	story	5.0	18.0	1479332694	13.175705	Learning Perl 6	https://www.kickstarter.com/projects/1422827986/learning-perl-6	leejo
12993697	11.994871	-7.767083	comment	5.0	17.5	1479567076	10.426403	I love the concept and idea behind Haskell, and even reading this piece was very cool. But as much as I can sort of guess at what's happening, the steps being taken to simplify the original pseudocode...		striking
13016020	12.239456	-7.631593	comment	5.0	20.0	1479838056	11.941598	You'll go from bad to worse; Scala is to Java what C++ is to C; barely anyone understands all constructs in either language. You either know everything or nothing (i.e. you can't understand somebody else's code unless you enforce rules or know the complete language in detail).		bitL
13046028	12.079938	-7.809686	comment	5.0	17.5	1480196391	10.427989	Having never tried OCaml, what advantages does it have over other languages? Two languages I don't know seem more interesting, Clojure and Rust. Generally I work in Swift these days.		coldcode
13051163	11.699904	-7.4202533	comment	5.0	15.0	1480277155	9.579566	Java's type system is _sound_ as it guarantees that you will never use a variable of one type as another incompatible type. That is the soundness guarantee, it cannot get stronger than that as the lan...		olliej
13061563	11.758983	-7.969753	comment	5.0	16.0	1480406172	6.241751	I find myself agreeing with him 100%. Not just on Gopher (although i did write a Gopher client some time ago - http://runtimeterror.com/tools/gopher/) but on the entire rant about wasting resources, U...		badsectoracula
13067332	11.921847	-7.2352266	comment	5.0	20.5	1480464180	-8.977799	I think of dynamic typing in a language as a big pro and a big con at the same time, but it's one of the things that makes a language like JavaScript or closure what it is.I love typing systems too, t...		moxious
13067355	11.745049	-7.3890624	comment	5.0	13.5	1480464526	-8.755724	"Spec (and more generally, contracts) aren't just about ""making up"" for the lack of static typing. They can encode a variety of invariants that a type-system can't, and are also useful for parsing (see..."		mhluongo
13068459	11.994003	-7.7288275	comment	5.0	21.0	1480479424	10.41084	Some complaints about this list:1. This list is very Haskell-focused: it includes lots of features which only make sense in Haskell or very Haskell-like languages, and lacks mention of many interestin...		andolanra
13086059	11.6203375	-7.9398017	story	5.0	203.0	1480653484	10.17487	Golang’s Real-Time GC in Theory and Practice	https://blog.pusher.com/golangs-real-time-gc-in-theory-and-practice/	signa11
13106477	11.666048	-7.9451	comment	5.0	18.0	1480954901	10.17892	I don't usually say this but - isn't this a poor choice of name? Gorilla framework's Mux [0] has been around awhile and is quite popular for routing in Go.[0] https://github.com/gorilla/mux		gkop
13122336	11.676244	-7.264983	story	5.0	166.0	1481117373	-8.789536	A Short Introduction to the Lambda Calculus (2004) [pdf]	http://www.cs.bham.ac.uk/~axj/pub/papers/lambda-calculus.pdf	kumaranvpl
13124352	11.742916	-7.688755	comment	5.0	12.5	1481132161	10.156432	This will probably be an unpopular thing to say, and I understand that people have different opinions and preferences on this question.However, for me, every time I see one of these Python 3 releases ...		d_theorist
13129780	12.071024	-7.4185185	comment	5.0	14.5	1481198181	2.230472	These talks are a little skewed to the game/high performance programming side of the art, but still very interesting in general. Of the ones I've already seen I really like Mike Acton's talk.Since thi...		tinco
13130014	11.923193	-7.4555407	comment	5.0	23.5	1481202205	7.2669606	"Functional programming largely has two schools: Treat ""commands"" as a separate entity from expressions, and bake ""commands"" into expressions. The former is largely Haskell, Clean, ... and the latter i..."		jlouis
13133232	12.076357	-7.1924877	comment	5.0	16.0	1481224809	0.24423888	What empty promises are you referring to?		linkregister
13141928	12.154799	-7.515505	comment	5.0	22.5	1481318219	-10.616798	We need HKT. F#. Cmon... I love F# but seriosly...		fromscala11
13148801	11.798577	-7.086673	story	5.0	44.0	1481415676	5.2585387	Design Patterns and Refactoring	https://sourcemaking.com/	kennandavison
13174525	12.037157	-7.200089	comment	5.0	14.0	1481702309	9.119383	"This looks like the perfect case for using Promises...    loadjs('foobar').then(() => {
      // foobar.js loaded
    });

And then with the newer spec:    await loadjs('foobar');
    // foobar.js loa..."		franciscop
13175176	11.97606	-7.734016	comment	5.0	16.5	1481714035	10.399668	I think the bigger question is why they're using a C++ Thrift server. Haskell is good at transforming data - they should be able to use an OS socket and do the message decoding/encoding in pure Haskell.		lmm
13178524	12.188436	-7.5175743	story	5.0	94.0	1481741093	-10.592213	Project Springfield: A Cloud Service Built in F#	https://blogs.msdn.microsoft.com/dotnet/2016/12/13/project-springfield-a-cloud-service-built-entirely-in-f/	edgyswingset
13185106	11.654227	-7.914217	comment	5.0	20.0	1481815069	-10.45761	This was highly unexpected - as they had said they were exploring golang when I had asked their support last time.Jetbrains has yet to let me down - They got me covered for Java, C++, PHP and JS/TS an...		ohstopitu
13193873	11.817361	-7.366519	comment	5.0	17.5	1481902130	-10.044058	Question: what would a LISP dialect with static typing look like?EDIT: Found an answer: http://stackoverflow.com/questions/3323549/is-a-statically-t...		amelius
13211303	12.046125	-7.2027135	comment	5.0	15.0	1482155091	9.139779	Serious question - why is cancelling a promise a reasonable use case? Doesn't cancelling potentially invite non-deterministic state into your program? If not, what would be the difference from throwing?		leothekim
13214487	12.093449	-7.208189	comment	5.0	14.0	1482177238	9.198277	TC39 member here.cwmma gets a lot right here: Promises have always been contentious in JS (and TC39) and Domenic has indeed had the patience of a saint attempting to wrangle the various points of view...		wycats
13216165	11.894783	-7.394413	comment	5.0	18.0	1482192230	7.2690444	Just a nitpick: you can live code in imperative languages and functional languages can require compilation. That has more to do with your design, framework, and tooling than the language itself. It mo...		SomeStupidPoint
13217065	11.907104	-7.345468	comment	5.0	13.0	1482202764	7.105078	I've been hacking away in as my job Unity for years..Can someone tell me do they think the practice described in the article is a good idea? (The writer says they are just learning so their opinion is...		everyone
13224344	11.634959	-7.4873075	story	5.0	90.0	1482270180	10.061103	Concepts: The Future of Generic Programming [pdf]	http://www.stroustrup.com/good_concepts.pdf	matt_d
13252703	11.667329	-7.92025	comment	5.0	14.5	1482636098	10.21762	While I'm sure many people will agree with you, I (respectfully) don't for a couple reasons..Golang doesn't have the library or tooling maturity or breadth to make it a real competitor to Java in the ...		seabrookmx
13252957	11.835277	-7.3610125	comment	5.0	13.5	1482640930	7.7963905	Functional looks good for applying x^2 to a list of numbers, but when you need to do something a little more complex, it becomes hard to put in in a single line/lambda.		visarga
13253607	11.7923	-7.3515825	comment	5.0	18.5	1482660653	-8.947106	Looking at it as objectively as you can, what advantages does dynamic typing have over static typing?The only potential candidate I can think of is 'more flexibility'.However, undefined behaviour is n...		ZenoArrow
13255038	12.156885	-7.2428427	comment	5.0	18.5	1482692279	-10.441841	"My concern with all these ""functional javascript"" posts is that people might (understandably) leave with the false impression that this is what functional programming looks like in general. It's like ..."		wyager
13260641	11.996631	-7.770482	comment	5.0	13.0	1482800463	10.413633	"Can you name a single, widely used (outside the Haskell camp) opensource application written in Haskell?I can only think of ""darcs"" which for all intents and purposes was a failure. IIRC, one of the d..."		armitron
13284932	11.902712	-7.6548867	comment	5.0	17.0	1483113336	10.423699	> I 've done a little playground-style OCaml coding and the feeling you get with OCaml is that once your program compiles, it most likely also runs correctly.This is only a feeling. Without carefully ...		kazinator
13296467	11.898699	-7.614056	comment	5.0	12.5	1483292766	10.355724	Thanks for that code. I don't know anything about Haskell so I attempt a UX test:results is an array of Int, but do the double [[ ]] brackets mean something special? I hope they do, otherwise why plan...		pmontra
13310298	11.831313	-7.2934012	comment	5.0	20.5	1483461201	6.9668674	"There seems to be a common fixation on objects ""modeling the real world"" with the counter argument for classes being that they don't model the real world. True, there isn't a physical chair class in r..."		ravenstine
13311778	11.859328	-7.298373	comment	5.0	18.5	1483469251	7.0265417	I like this kind of critical papers but I cannot agree with the author in this case. I have studied this problem quite deeply while working on concept-oriented programming and concept-oriented data mo...		asavinov
13324600	11.674928	-7.107066	comment	5.0	14.5	1483588646	8.816524	Personally, I've never seen the value in private functions in the real world. If you are in the same runtime and can see the code, what exactly does a private function offer you other than ensuring so...		brightball
13345688	11.68389	-7.928069	story	5.0	23.0	1483813711	10.202066	Ask HN: What do you think is the current best Go webframework and why?		McMini
13353266	11.7956505	-7.140577	story	5.0	127.0	1483924428	-8.673903	Origins of Python's “Functional” Features (2009)	http://python-history.blogspot.com/2009/04/origins-of-pythons-functional-features.html	tosh
13358012	11.658102	-7.970276	comment	5.0	16.5	1483983306	10.184355	> every middleware you want to use needs to be included into the binary and if it’s not, you need to re-compile the programHaving to recompile to add functionality that alternatives provide as dynamic...		notacoward
13358133	11.670819	-7.8294816	comment	5.0	16.0	1483984198	10.219644	I wonder what the point of railing against a lack of generics is. When I sit down to write Go, I know that I will be writing a lot of simple, yet repetitive code. It's part of the bargain.Still, if yo...		woah
13358135	11.661735	-7.8994412	comment	5.0	14.0	1483984223	10.21477	>  Go has achieved a lot of success without themThis is a dangerous and slippery slope to engage on.Java was also extremely successful in 2004, before it supported generics. Yet you'd be hard pressed ...		hota_mazi
13377268	11.909254	-7.209746	comment	5.0	44.0	1484166841	9.22848	Asynchronous programming is hard, even when hidden behind abstractions like futures or promises.It was cool and trendy when libevent and Nodejs came out, but now we should all have the experience and ...		fooyc
13383016	11.764854	-7.2612705	comment	5.0	22.0	1484235521	9.180119	Async/Await is especially important to use in .NET and .NET Core web servers if high concurrency is desired.  .NET uses a managed thread pool that will only spawn up to something like 50 threads quick...		caleblloyd
13389013	11.712267	-7.921157	comment	5.0	15.5	1484291311	10.183173	Go is such an easy language as it is, these kinds of frameworks just encourage amateur developers to skirt by with minimal understanding of what they're really doing. An MVC framework sounds like a gr...		warent
13428689	11.604787	-7.850105	comment	5.0	19.5	1484763325	10.214655	I see where you are coming from, but that isn't the go way.Switch on arbitrary types, followed by typecasting? That's the go way. No surprises. Explicit instead if implicit behavior.		xyzzy_plugh
13430697	11.721928	-7.3838115	comment	5.0	19.5	1484776693	9.924389	"Not THAT easy    fn apply<A, B, C, F, G>(mut f: F, a: A) 
    -> impl FnMut(&B) -> C // must still be `for<'r> impl FnMut(&'r B) -> C`, because that’s what filter requires
             where F: FnMut(..."		iopq
13434649	11.601185	-7.9593716	comment	5.0	16.0	1484821883	10.238703	"I don't see any ""strength"" in the classical object oriented programming model as found in C++ or Java. Actually, in modern programming composition is considered superior to inheritance.The interface c..."		chmike
13452152	11.680268	-7.9355083	comment	5.0	18.0	1485032712	10.256004	Go is successful because it's exactly what Google needs to write back-end code. It's (almost) memory-safe.  It comes with a set of well-debugged libraries for doing most of the things you need to do o...		Animats
13470916	11.862113	-7.850164	comment	5.0	12.5	1485262612	10.421601	Not related to the topic but how do you find ocaml as compared to python or rust? Do you think its worth learning today as opposed to rust for high level general purpose programming?		tejinderss
13475599	12.247262	-7.553828	story	5.0	150.0	1485292872	-11.383526	Kotlin 1.1: What’s coming in the standard library	https://blog.jetbrains.com/kotlin/2017/01/kotlin-1-1-whats-coming-in-the-standard-library/	ingve
13476738	12.452293	-7.504988	comment	5.0	20.0	1485299942	12.924654	>> Your Erlang program should just run N times faster on an N core processor> But only if your program is embarrassingly parallel with at least N times available parallelism in the first place! If you...		devishard
13477609	12.238808	-7.541941	comment	5.0	42.5	1485307768	-11.342394	I feel kotlin is a bit undervalue. It is a great modern language which can replace java completely.Along with swift, they should be the general purpose programming languages in the near future.		jorgemf
13479022	12.165774	-7.598128	comment	5.0	15.5	1485324016	11.804162	Maintaining a Scala code base for some years, I've learned a lot. I would not go back to a language that does not support Option/Maybe and map/flatMap. These really changed my coding style.My largest ...		_Codemonkeyism
13559444	11.926073	-7.3637047	comment	5.0	13.5	1486126587	9.138747	Many people are complaining that the standard library still uses callbacks and so even though you have async/await, you can't use it with the standard library.I wholeheartedly agree. I don't understan...		norswap
13573264	11.634678	-7.9536495	comment	5.0	27.0	1486314388	10.22021	Explicitness and terseness seem a bit at odds - I wouldn't call go code very terse at all. It seems verbose and repetitive. Consistency? Aren't only some built in types blessed with generic functions?...		MichaelGG
13574018	11.643173	-7.972215	comment	5.0	25.5	1486322483	10.1889305	"Normally it's the other way around, Go gets compared to other ""Systems Programming"" languages because somehow services got lumped in with that name over the last few years.To me they're very discrete ..."		vvanders
13573007	11.646662	-7.5897045	comment	5.0	14.5	1486311540	10.150793	I keep reading this and I keep wondering what's stopping someone familiar with language design from writing generics code		labrador
13580924	12.336996	-7.040833	comment	5.0	14.0	1486398159	13.1816845	To a large degree, the ongoing utility of Perl 6 depends upon the continued vibrancy of the CPAN community. IMHO, CPAN is anything but vibrant by today's standards.While CPAN hosts a vast archive of n...		bashcoder
13600592	11.900738	-7.411586	comment	5.0	14.5	1486577960	7.3941483	"in the functional programming community I find an obsession with these two things1. what counts as functional programming (and more specifically ""why lang X is not really functional"")2. inventing new ..."		metaphorm
13610633	12.502896	-7.5215464	comment	5.0	16.0	1486672224	12.882324	NIFs are the fastest method to call external code from Erlang/Elixir, as far as I understand. But I wonder how high the actual overhead is.My understanding is that if I still want to ensure that the B...		fabian2k
27536464	11.9859085	-7.7478347	comment	5.0	22.5	1623909225	10.444676	I really love haskell, but I cant understand why everything has to be about raical diversity.		rataata_jr
27554910	11.926117	-7.4532595	comment	5.0	19.5	1624049530	7.2957716	The thing in this paper that I see missing from most discussions of Functional Programming is the use of an algebra to derive programs.I've worked a bit with an FP concatenative language Joy and this ...		carapace
27561432	12.088828	-7.263651	comment	5.0	21.0	1624117203	9.016805	Calling methods via strings where you control all the source code to your own application is pretty toxic.Since there are no network or persistence boundaries - it's a local app the developer owns 100...		an_opabinia
27590583	12.058906	-7.422449	story	5.0	114.0	1624363125	-10.546924	Fasm, a F# to Jitted ASM/IL disassembler as a dotnet tool	https://github.com/d-edge/fasm	aloisdg
27640057	12.0234375	-7.805475	comment	5.0	15.5	1624694570	10.4276	"Thanks, but the article loses me at what this ""elevated world"" is. It doesn't even try to explain what it is and quickly goes over to F# syntax, which I don't understand. 
Why is there no explanation ..."		_ph_
27650004	11.6169615	-7.9537883	comment	5.0	72.0	1624785993	10.193729	The best thing about using only ASCII for the main syntax is that everyone can type it with their keyboard. I think the recent fad of supporting Unicode identifiers is misguided. Of course, Unicode sh...		eterevsky
27657552	11.753098	-7.374631	comment	5.0	12.5	1624848233	-8.833371	I mean, there's ample evidence on this thread to suggest we're not going to reach a productive conclusion here but I guess I'll keep biting.It's not clear to me if you are suggesting that a dynamic ro...		wabain
27660790	11.81474	-7.4180365	comment	5.0	26.0	1624882035	7.0512233	I’ll go out on a limb and posit that there are virtually no valid uses of (implementation) inheritance. Perhaps one valid use is getting rid of delegation boilerplate (e.g., normally you would compose...		throwaway894345
27662869	11.932815	-7.3526177	comment	5.0	18.0	1624892606	7.0367804	Data modelling in OOP is an exercise in coming up with Platonic ideals, resulting in a hierarchical (tree-like) ontology as you try to choose of the atributes as the categorisation dimension, and leav...		hcarvalhoalves
27663941	11.89058	-7.362974	comment	5.0	18.5	1624897605	7.0589433	>In all my experience with OOP, it's always been inheritance that is the root of all evil.It's not, though, and the fact that people keep repeating this meme shows that most developers don't even both...		colllectorof
27715023	11.963949	-7.710434	story	5.0	104.0	1625250556	10.368595	The Haskell Phrasebook (2019)	https://typeclasses.com/phrasebook	bshanks
27755238	12.138613	-7.2253857	comment	5.0	14.0	1625610818	8.524859	"> Hardly any game needs ""thousands of interacting entities"" though (outside of special subsystems like particle systems).This is an example of survivorship bias. How many ambitious game concepts have ..."		pphysch
27756592	12.385742	-7.0364523	comment	5.0	16.5	1625623514	-10.503084	Personally, I’m not a huge fan of TypeScript. I feel it’s unnecessarily verbose at times. I used ReasonML for a while, and I absolutely LOVED it. I’m just bummed about the uncertainty of the projects future and adoption and the lack of alternatives that seem to make TypeScript the defacto standard.		koprulusector
27761794	11.688884	-7.268449	comment	5.0	16.5	1625669604	-8.796815	Exactly. Why does it matter if it's absurd in this context? Just upgrade it to be on the safe side. Asking vulnerability databases to judge whether vulnerabilities are safe in devDependencies or not i...		raziel2p
27780844	11.663968	-7.081952	comment	5.0	25.0	1625810418	-7.4462795	The real issue is that python doesn’t really make it easy to define anonymous functions. If you want one with more than one line, you need to name it and move its definition outside the point of use. Quite annoying.		bobbylarrybobby
27784705	12.494355	-7.843855	comment	5.0	17.5	1625844662	-11.128428	I haven't felt the need for static typing in Clojure at all. I don't understand, why people are so dogmatic about static typing. In my experience and other on the team share it too, static types reall...		kaliszad
27784069	12.370722	-7.7415924	comment	5.0	35.0	1625841292	-11.049179	Best Programming languages todayF# - ML + .NetClojure - Java + jvm + lispRust/OCaml - System ProgrammingBoth F# and Clojure give you access to probably the two biggest ecosystems, but they are obvious...		systems
27820978	11.926671	-7.6878443	comment	5.0	16.5	1626184426	10.380771	StandardML is a very underrated language that was decades ahead of its time.It's the pragmatic ML. Unlike Haskell, it believes in side effects, optional mutation, and eager evaluation, but within a ty...		hajile
27902647	12.253175	-7.0211134	comment	5.0	22.0	1626845337	1.4855444	My reason to not like Perl is that the language does not support function arguments explicitly. What? People wrote web apps in a language with bash-style argument handling. You have to shift your argu...		jitl
27998913	11.8788	-7.280248	comment	5.0	27.0	1627579417	8.321886	IMO that's one of the best ways a single programmer can spend his career. No weird requirements, no deadlines, no nothing, nada. Just one's passion and a product. Whether it is successful is irrelevan...		markus_zhang
12024887	11.982557	-7.149134	story	5.0	44.0	1467522057	7.039947	Introduction to Functional Programming in JavaScript (Part 1)	https://asep.co/introduction-to-functional-programming-in-javascript-part-1/?utm_source=hn&utm_medium=direct-share&utm_campaign=fp-in-javascript	bepitulaz
12047052	11.683255	-7.722651	comment	5.0	20.5	1467856462	10.182768	Now is a fantastic time for languages. Python and Ruby get you where you need to be fast, and if you get far enough and need to scale, there are a huge number of options, from stalwart holdouts like J...		themartorana
12058522	11.98797	-7.7232566	comment	5.0	12.5	1468010771	10.387617	I've used Haskell, but not to the point that I've needed anything like cabal or stack, so maybe I'm not qualified to speak on this.But this whole thing is just so silly. The real value in Haskell, to ...		justinlardinois
12090693	11.626608	-7.8419824	comment	5.0	20.0	1468454077	10.205114	I'm a Python programmer by day, and I would very much appreciate a stricter type system so it was apparent what arguments a function might accept, what arguments a function might return, etc without h...		weberc2
12109003	11.771502	-7.3930173	story	5.0	82.0	1468728865	9.571671	Algebraic patterns – Semigroup	http://philipnilsson.github.io/Badness10k/posts/2016-07-14-functional-patterns-semigroup.html	lebek
12114426	11.597446	-7.2486877	comment	5.0	12.5	1468841236	-8.7858	My pet theory is that the rise of automated testing was/is a big factor in the rise of dynamic languages.Test suites guard against most things type safety does, so if you have a test suite anyway, the type safety becomes a net burden.		BurningFrog
12121616	11.829214	-7.256875	comment	5.0	20.0	1468935204	7.086152	Good Lord yes.  When I was working on point of sale machines for Toshiba, there was this unbelievable depth of inheritance and ridiculously deep callstack constantly, and it made fixing any minor bug ...		kminehart
12151966	11.872626	-7.2366204	comment	5.0	13.0	1469328051	8.020933	Pretty sure that pendulum is never swinging back in the dynamically type side.The simple truth is that today, statically typed languages have all the advantages that once used to be the exclusivity of...		kmiroslav
12154593	11.830941	-7.330181	comment	5.0	19.5	1469390614	7.1012626	Let me try to list the objections:1. Inheritance creates dependencies on their parent class2. Multiple inheritance is hard3. Inheritance makes you vulnerable to changes in self-use4. Hierarchies are a...		millstone
12155469	11.900559	-7.4925156	comment	5.0	24.0	1469402968	7.1668735	> Except that there is a real advantage to using pure functional programming; being able to easily prove theorems about your code and understand different components in isolation.And how often does th...		seanmcdirmid
12154609	11.9784	-7.3648477	comment	5.0	17.0	1469390713	7.0372505	"That is a good analysis. While I was reading this article all I could think is ""You wanted to do things in a bad way and then you learned how to do it the right way and you don't like the right way?""H..."		ebbv
12183226	11.693347	-7.356527	comment	5.0	22.5	1469740481	10.204547	I also find it strongly problematic that functional languages with customizable infix operators (e.g. Haskell and OCaml) have lines of code like this:  whileM ((<=) <$> readLeftIdx <*> readRightIdx) $...		wcrichton
12191395	11.861312	-7.6807647	comment	5.0	20.0	1469846681	10.401775	"Here are some that I have encountered:Which string to use?
String, ByteString or Text or something else?
How to convert between zillions of String types, which are, it seems, completely incompatible e..."		tmptmp
12190875	12.485548	-7.825223	comment	5.0	13.0	1469836025	-11.148235	How I wish for a lisp like Clojure with a type system like Haskell...Hope core.typed will be that!		hkjgkjy
12192808	11.94861	-7.696319	comment	5.0	13.5	1469884038	10.392703	> You might later find that something that took you 5 lines is a standard abstraction ready to be re-used.Such a great point and perhaps one of the biggest challenges as languages allow increasingly r...		thoradam
12208097	11.662835	-7.9441085	comment	5.0	33.5	1470118911	10.21932	i was shocked by that at first too. Then I came to love it. It's sooooo go. Don't import stuff you aren't using. Don't declare a var and just leave it there un-used. When I go back to ruby and commit ...		andrewfromx
12212010	12.0773	-7.3591375	comment	5.0	16.0	1470162303	7.082221	"Orthogonal to the article, but: ""He is widely considered one of the fathers of object-oriented programming, or OOP, which at its simplest is a “if-then” programming paradigm that links data to pinpoin..."		asragab
12223518	12.340128	-7.214171	comment	5.0	35.0	1470287644	12.004298	"The claim is ""fast as C"", so I was surprised that the performance comparison was with Ruby, not with C.  On my machine, the Ruby Fibonacci program executes in 47.5s, while a corresponding C program ex..."		Athas
12267068	11.634359	-7.344125	comment	5.0	15.5	1470909260	9.706983	What's wrong with optional typing? All it does is formalise docstrings into an integrated syntax.		Alphasite_
12288885	12.009045	-7.6689253	comment	5.0	20.0	1471240090	10.44793	Readability : although I'm not proficient in Haskell it seems to lend itself towards perl-like clever one liners.		ioseph
12295024	11.6773815	-7.904539	comment	5.0	16.0	1471312937	10.288764	It's annoying to have to install the ruby interpreter onto everything. Go feels a lot like a scripting language, but produces binaries.		woah
12298239	11.666108	-7.606594	comment	5.0	45.5	1471362799	10.109975	So the current approach is providing some popular functions which would normally require generics to implement as built-ins?		patates
12331764	11.641573	-7.9786205	comment	5.0	20.0	1471800570	10.226259	What we like to keep missing is that golang innovates not as a language, but as a tool to contribute to software project success.Project success in the software industry is abysmal, and we still keep ...		jksmith
12331458	11.860758	-7.6344657	story	5.0	116.0	1471796789	-6.5065618	On the State of Pony	https://pony.groups.io/g/user/message/618?p=Created,0,,20,2,0,6182872&offset=0	spooneybarger
12332211	11.609713	-7.9357095	comment	5.0	17.5	1471806233	10.19135	It may be harder to write some things, but it definitely is easier to read Go code.Besides, while the language itself may be more verbose than it could be, the standard library is extremely pragmatic ...		IshKebab
12332259	11.965429	-7.860355	comment	5.0	15.0	1471806788	12.89128	Go has been around nearly a decade with the backing of none less than Google and yet it remains a fairly fringe language. Elixir is on a much steeper adoption curve. So is Swift, but Elixir doesn't even have a tech heavyweight behind it.		xiaoma
12332441	11.792184	-7.3490405	comment	5.0	18.5	1471809115	-8.8719225	I don't see this example particularly enlightening. I'm not really ever seeing problems where I'm stuffing an integer into where I wanted a string in dynamic languages. Or stuffing a Person into a Gor...		nickbauman
12333214	11.626875	-7.969399	comment	5.0	16.0	1471821900	10.189915	> Go is a language that pushes remembering corner cases and failure conditions onto the programmerCan you elaborate on this? I write go for 3+ years and I have no idea what corner cases and failure conditions do you mean.		divan
12335415	11.938446	-7.665004	comment	5.0	34.5	1471863944	10.306165	They saved the best for last:3.5   Naming ConventionsSome names are inconsistent. For example Functor is not called Mappable while Traversable is not named after abstract nonsense. It is best to focus on what things are instead of what they are called.		nothrabannosir
12356577	11.616081	-7.0797777	comment	5.0	23.5	1472091301	8.939862	"Feels kinda crazy to see tuples and pattern matching ""just arrive"" when other languages have had them for years."		gsmethells
12358968	11.626602	-7.0897484	comment	5.0	72.5	1472133175	-8.795573	> If an object is just there to store data and no behaviour, then that's fine - don't add behaviour if it doesn't need it.In that case, you want values rather than objects. Alas, Python doesn't have compound values.		catnaroek
12361024	11.815791	-7.0440946	comment	5.0	15.5	1472147767	-8.965005	"It feels a bit hampered by ""bad"" design decisions to meI think its safe to say that the current view of what decorators do is, a) filter things going to functions (so they error, or hit a cache), or b..."		RubyPinch
12400753	12.330024	-7.6198874	comment	5.0	16.5	1472671196	10.360297	I'm on the Facebook Reason team, and we're using BuckleScript to compile OCaml into the best compiler output I've ever seen. People didn't recognize that my React components were generated, not hand-w...		chenglou
12399759	11.642488	-7.9778147	story	5.0	51.0	1472662849	10.218198	Network programming with Go (2012)	https://jan.newmarch.name/go/	neiesc
12404607	12.311109	-7.0326657	comment	5.0	14.5	1472731814	13.178373	"I concur. Yet to see any ""Built with hate"" projects. Like ""Built with hate in Perl!"""		aldanor
12420000	11.623187	-7.733031	comment	5.0	25.0	1472923010	-12.234181	Python's csv module uses an internal module _csv which is written in C. So I'm not sure it's all that surprising that a Go implementation is a bit slower.		zephyrfalcon
12435234	11.920856	-7.449448	comment	5.0	23.0	1473162070	7.304093	The article isn't about functional programming.Functional programming is programming with pure (mathematical) functions. As a consequence, functional programming is also programming with (immutable) v...		bad_user
12497313	11.905551	-7.266884	comment	5.0	21.5	1473864079	9.170242	> Even assuming all goes well, you've prevented yourself from doing any other work, like rendering views that don't depend on that data.Is that right? `await` is non-blocking, no?		rco8786
12497977	11.849467	-7.2811956	comment	5.0	14.0	1473867164	9.205793	"I was never a fan of async/await in C#, I just never found it that useful.I've seen examples of it in JavaScript and the author is always like, ""Look at what you normally have to write and now look at..."		halis
12530589	11.701207	-7.2913356	comment	5.0	17.5	1474285789	-8.735852	> I haven't heard anyone against type inference.I have seen C# style guides that forbid var.		pjmlp
28601433	11.76405	-7.195582	comment	5.0	13.0	1632191229	-7.3789682	Is extensibility really the Pandora's box the author makes it out to be? Just because something is extensible doesn't mean it has to be extended in monstrous ways.		cyounkins
28609850	12.250182	-7.5564184	story	5.0	93.0	1632257885	-11.380425	The Hitchhiker's Guide to Kotlin	https://nathan-contino.github.io/site,/name,/colors,/web/2020/12/11/hitchhikersGuideToKotlin.html	minnca
28625509	12.204465	-7.606722	comment	5.0	14.5	1632375439	11.937634	"Pet peeve of mine: ""X compiler/interpreter/JIT written in X"".Case in point five years and 150k+ lines with the slow Scala compiler written in Scala (it's conceptual slow because of the language (types..."		KingOfCoders
28644465	11.750049	-7.191702	comment	5.0	13.5	1632500254	9.183477	What's the right way to do throttled async in modern C#? For some context, we have a process that needs to make an API call for each row in a file - maybe hundreds or thousands. What's the best way beyond Wait()'ing for each one to get decent performance without DOS'ing the server?		maxfurman
22304194	12.496872	-7.0410247	comment	5.0	13.5	1581464487	-11.766519	are there any other implementations in other languages? (preferably c++).I use libgit2, but the code is a bit difficult to read and hack. I know there is a ruby book implementing from scratch.I want to understand the git internals.		billconan
22310189	11.690827	-7.043826	comment	5.0	19.0	1581524990	9.028076	I used to love using array.reduce when I was first learning JavaScript, but over the years, my opinion has firmly shifted to Jake Archibald’s:“All code using array.reduce should be rewritten without a...		Lx1oG-AWb6h_ZG0
22310848	11.675099	-7.8983335	comment	5.0	15.5	1581529333	10.335361	I am glad they used Go to develop this command line tool.Knowing how big GitHub is on Ruby and Node.js I was afraid they had used one of these two languages to bootstrap the program.Being able to drop...		guessmyname
22348703	11.9763	-7.7237473	comment	5.0	13.5	1581956293	10.401597	The intelligence required to write a piece of code =/= the intelligence required to understand it. Usually the second is a lot easier. Writing a fancy Haskell typeclass to structure a problem might re...		finolex1
22357704	12.139241	-7.2317185	comment	5.0	14.0	1582046241	8.528724	I think that ecs is the thing that will kill oop.https://en.wikipedia.org/wiki/Entity_component_system		adamnemecek
22361703	11.645459	-7.9405575	comment	5.0	23.0	1582070042	10.222594	I just don't want to hear about Golang generics any more, until they are in a usable beta.  It's been years, and while I'm confident that there are some maintainers who really for real want to add it....		bpodgursky
22366244	11.986766	-7.647533	comment	5.0	24.0	1582125921	10.345396	We’re all slowing moving to functional programming.One day we wake up and decide we basically know Haskell, OCaml, etc and take off the training wheels?		melling
22368974	11.865562	-7.491851	comment	5.0	13.5	1582139886	-9.03038	Is there a Python with Haskell syntax (or at least, much less verbose than regular Python..) that can have little a Haskell static typing, as a treat?		pizza
22390674	12.117386	-7.65619	comment	5.0	18.0	1582374664	-10.621021	What's your opinion on F# ? Does it share enough of OCaml goodness to be worth using in .Net world or instead of OCaml?		polskibus
22396907	11.659436	-7.947047	comment	5.0	35.5	1582467430	10.256046	>  large scale collaborationWhat does golang have to facilitate large scale collaboration that isn't done better in languages such as Java or C#?		apta
22396932	11.668519	-7.8344893	comment	5.0	21.0	1582467752	10.202854	Even more, what does Go have better in terms of dev tooling than Java or C#?		tsimionescu
22397148	11.597169	-7.8722744	comment	5.0	22.0	1582470742	10.063398	> If you can, don’t reach for a goroutine, or a channel, or embed a struct, anonymous functions, going overboard with packages, interfaces for everything, instead prefer simpler approach rather than t...		SPBS
22400227	11.764541	-7.1821313	comment	5.0	14.0	1582499550	9.104707	"> Efficient, expressive, elegant  let people = [
    Person(name: ""John"", age: 45),
    Person(name: ""Kate"", age: 30)
  ]

Verbosity at its finest. Compare with C++:  Person people[] {
    { “John”, 45 },
    { “Kate”, 30 }
  };"		Koshkin
22409614	12.120887	-7.670902	comment	5.0	19.5	1582588041	-10.624037	I don't know why they felt they had to mess with OCaml's syntax - one of the nicest around AFAIC.  With F#, even MS didn't feel like they had to add extra braces and other baggage and change keywords ...		thelazydogsback
22412525	11.8911295	-7.350287	comment	5.0	18.5	1582632925	-6.1646624	"Immutability is something I'm still exploring in Common Lisp.
Any pointer, anyone?"		Ambrevar
22414350	11.747999	-7.3523874	comment	5.0	21.5	1582647350	-8.861737	"Rich Hickey once said something (with regards to TDD) like, ""We have guard rails on highways, but that doesn't mean we just take our hands off the wheel because the rails will keep us on the road. Gua..."		_bxg1
22413589	12.104553	-7.7010474	comment	5.0	22.5	1582642138	12.849109	"Excuse my Erlang ignorance.When he sends the ""{become, F}"" message, and F is a function pointer or closure, how is that dispatched across a network? Do the code definitions need to be present remotely..."		kitd
22415489	11.878604	-7.644595	comment	5.0	12.5	1582653921	10.321135	> a->aEven there, it's not true, right? It's been a while since I learned / used Haskell, but I think something that transforms a { name: 'bob' } to a { name: 'sally' } would fit that bill, right? So,...		christophilus
22421725	11.956936	-7.722892	comment	5.0	14.0	1582710998	10.35681	"It might also be that your brain is just more used (years of extra experience) to infix notation. So why not take advantage of this ?
In the monad world, people also prefer (>>=) to bind.
OTOH, how lo..."		toolslive
22451566	12.016737	-7.814674	comment	5.0	13.0	1582996288	10.477825	However, the c community never felt like going on and on and on about bitwise manipulation... Anyone have any idea why people get so hung up about explaining monads?		isoprophlex
22472607	11.662989	-7.9048796	comment	5.0	15.5	1583221269	10.262421	Usually, being easy is confused with being simple. Easy to use systems usually tend to be very complex but they'd only hide it from the average user. Once you go one step ahead, do something outside o...		monus
22480079	12.014658	-7.4839435	comment	5.0	24.5	1583281128	-11.279828	I wonder about records - they would be great for simplified implementation of immutability, but they seem to not provide a way to copy with a subset of modified fields - like in Scala:  case class Per...		mateuszf
22514149	12.007804	-7.766784	comment	5.0	16.5	1583615878	11.979915	Can somebody please explain why Rust has so much buzz right now compared to scala?Scala is a strongly typed, very-well vetted, functional programming language in the JVM. It pretty much has everything going for it. It's even adopted by twitter.		alexandercrohde
22522966	11.731781	-7.1944857	comment	5.0	20.0	1583727663	9.437031	Are reduce and lambdas really that cryptic/complex to people? I think I need an adult. -.-		busterarm
22557830	11.776533	-7.411477	comment	5.0	17.0	1584026851	7.100472	You’re always going to be on one side of the expression problem [0]: either your operations live with your datatype (classes), which makes it inconvenient to add a new operation, or they live somewher...		tomstuart
22563202	11.723138	-7.075391	comment	5.0	14.5	1584056191	6.303253	I'm actually planning on declaring war against pattern matching in EcmaScript, which is stage 1 right now. I can't believe how popular it can be. To me it looks like a huge antipattern, a complete dif...		ojosilva
22572643	11.914605	-7.450657	comment	5.0	19.0	1584152772	7.3246126	"What does ""Procedural"" vs ""Functional"" have to do with this? It's a choice in data type.If by procedural you mean, nonsense, then sure... I agree that a function named `getchar` returning an `int` is procedural. :P"		nixpulvis
22666739	11.746426	-7.247789	story	5.0	11.0	1584986240	9.233461	Coyote – making asynchronous software easier to design, develop and test	https://www.microsoft.com/en-us/research/blog/coyote-making-it-easier-for-developers-to-build-reliable-asynchronous-software/	cjlovett
22690013	12.043816	-7.822384	comment	5.0	17.5	1585185261	10.46608	Things to consider:The company is >20 years old.OCaml is a general purpose language that provides an equilibrium between the avoidance of bugs introduced by state (like all functional languages), spee...		helsinki
22692090	12.262677	-7.2947764	comment	5.0	26.0	1585217549	7.0974073	>  The interesting question isn’t “Why did Smalltalk die”, it’s “Why did C++ survive”. I think it’s because C++ had better C interop so was easier to extend into legacy systems.Video Games. From aroun...		dleslie
22699940	12.277647	-7.318418	story	5.0	80.0	1585275028	7.0715423	The Design and Evaluation of a High Performance Smalltalk System [pdf]	https://www2.eecs.berkeley.edu/Pubs/TechRpts/1986/CSD-86-287.pdf	luu
22718928	11.644131	-7.77437	story	5.0	70.0	1585489360	10.090456	Show HN: Molecule – Streaming, zero-allocation protobuf decoding in Go	https://github.com/richardartoul/molecule	richieartoul
22767060	12.077169	-7.0648727	comment	5.0	18.5	1585900027	-9.960832	"Really nice explanation. Having read almost all papers on this endless debate ""Classes vs Prototypes"" you'd get a feeling that prototype-based object system wins in any aspects (expressiveness, flexib..."		artemonster
22783645	11.700797	-7.3029017	story	5.0	88.0	1586059153	7.3144145	Verified Functional Programming in Agda	https://dl.acm.org/doi/book/10.1145/2841316	TheAsprngHacker
22789538	12.127309	-7.8467183	comment	5.0	25.0	1586128586	-3.1742709	I'm working through Aluffi's Algebra: Chapter Zero, which covers abstract algebra (groups, fields, vector spaces, etc.) with category theoretic foundations. I took undergraduate algebra several years ...		Twisol
22816863	11.671607	-7.260759	comment	5.0	18.0	1586378572	-8.663868	Those people are also missing the point that not having types means you are inherently writing a slow program.		giulianob
22818108	11.7089	-7.2953997	comment	5.0	14.0	1586386704	5.0619397	I programmed professionally in C# for about eight years and in that time I can count on one hand the number of times I saw the ‘dynamic’ keyword. Nobody seems to think it’s worth the effort or confusion.		Analemma_
22822697	11.639657	-7.3840775	story	5.0	99.0	1586441609	-8.700453	Type I and Type II Errors: The Inevitable Errors in Optimization Experiments	https://utm.io/uuIl	ashfromconvert
22823244	12.155378	-7.5778594	comment	5.0	16.0	1586444843	-11.186205	But the question is whether it's worth using it over Kotlin (which is also better Java) - Swift is hamstrung because its primary implementation of standard libraries is limited to single vendor platfo...		izacus
22835715	11.902245	-7.443623	comment	5.0	12.5	1586542225	7.282144	Here's a minimalistic way to resolve this.First let's observe that Option and Result types can be roughly generalized by lists. Option is just a list of length 1.Next, make a language where each funct...		snidane
22843181	11.984264	-7.716605	comment	5.0	18.0	1586629421	10.41204	I learned Haskell and used it (and heavily functional Scala) professionally for about 6 years.I feel learning Haskell was worthless. It did not teach me anything about decomposing problems into functi...		mlthoughts2018
22874815	11.810204	-7.042954	comment	5.0	17.5	1586928446	-8.990808	> Type-annotated, asyncio-enabled Python hardly resembles the easy-to-understand language I fell in love with back in 2006.true.i am all for types in general and for types annotations in python. but i...		blondin
22889652	11.712234	-7.3435826	comment	5.0	12.5	1587047033	4.3092866	What statically typed language lets me define a type as “number between -180 and +180”, or “string which contains only alphanumeric chars”?I think that would be a great feature but from what I see static typing fails here, too.		ken
22894000	12.499719	-7.405908	comment	5.0	22.5	1587074392	12.853079	Is Erlang's BEAM VM really slow compared to other virtual machines, or is it Phoenix? It seems to be a bit of a laggard on benchmarks [1] and there's been this thread going on for years [2] which hasn...		taspeotis
22907133	12.350473	-7.046784	comment	5.0	18.0	1587211503	13.185279	So is Perl never going to go past version 5 now?		xupybd
22915678	12.229858	-7.639448	comment	5.0	18.0	1587302136	11.925771	If you like simpler languages, you'll probably hate Scala. It's one of the most complex out there.		nicoburns
22949112	11.845333	-7.3280187	comment	5.0	16.0	1587582860	-8.940937	Static typing is far from a panacea. Don't forget that the rise of Perl and PHP, and then later Ruby and Python was in response to statically typed languages like Java.There are trade-offs.		AlchemistCamp
22973007	11.829979	-7.3479366	comment	5.0	13.0	1587763085	7.216621	Using common functional tools can be a great way to simplify code like the example here, but as with most programming techniques, it can easily backfire in real-life scenarios.There have been a number...		tcgarvin
23005924	11.68868	-7.398346	comment	5.0	24.0	1588073324	-7.0085907	">With highly generic functions, it's often not possible to know what they'll return without knowing what you'll call them with.Of course it is.  Map's type is ""(a -> b) -> [a] -> [b]"".  D just absolutely and completely failed here, despite this being a solved problem 40 years ago."		asdkjh345fd
23032260	11.667057	-7.953811	comment	5.0	24.0	1588262219	10.212593	Really? Outside Google, I'm not aware of major orgs that use GO.I see the same .net C# stack, python, Ruby...... Java and PHP.		rootsudo
23046895	12.089894	-7.529082	comment	5.0	20.0	1588369773	11.857724	"Strong disagreement here.  ""type ident"" flows with the data during assignment, doesn't confuse the infix operators, and doesn't misuse "":"" from a human-language standpoint.For example:  val x: String ..."		Izkata
23085452	11.927551	-7.4154963	comment	5.0	14.5	1588715176	7.087474	Question to all the functional programming experts: When OOP got introduced people started building all these elaborate object hierarchies and design patterns only to find out after a while that simpl...		Ididntdothis
23085479	11.901332	-7.588209	comment	5.0	26.0	1588715322	10.065986	"> We've ""abstracted (the function map) over the type constructor (of the data structure being mapped over)"".Then why didn't they just call those types ""Mappables""?"		jimbokun
23118271	11.785482	-7.44483	story	5.0	46.0	1588964897	-8.631004	All About Polymorphics (1960) [video]	https://vimeo.com/356421222	th0ma5
23122679	12.141906	-7.6093454	comment	5.0	24.5	1589004552	11.868525	Just use a language where it's possible to implement those things in plain old code. When you have higher-kinded types you don't need any bytecode manipulation, you can just have a type that wraps any...		lmm
23141374	11.757541	-7.152308	story	5.0	23.0	1589200409	1.8737955	SOLID design principles in C++: Open Closed Principle	http://www.vishalchovatiya.com/open-closed-principle-in-cpp-solid-as-a-rock/	IndianWestCoast
23173390	11.60863	-7.7451115	comment	5.0	15.0	1589414517	9.9664755	"It's interesting to compare with Go, which uses goroutines for all concurrency. Python has threading, multiprocessing, async-await and now subinterpreters.Remind me which language is designed to have ""one obvious way to do it""..."		pansa2
23176529	12.318905	-7.0729933	story	5.0	10.0	1589441485	13.17038	Ask HN: Is Perl 6 / Raku worth learning?		electricant
23197933	11.742317	-7.292044	comment	5.0	18.0	1589579556	-8.080086	"if it's a function, what are the inputs/outputs? do you mean that in the way of ""an object is a poor person's closure""?in case anyone's unfamiliar, here's one basic way to emulate objects with closure..."		uryga
23213112	11.647236	-7.9538555	story	5.0	119.0	1589733337	10.165394	Tutorial on building a desktop app with Go and Goey	https://bitbucket.org/rj/goey/wiki/Tutorial-Hello	rwj
23239447	12.133116	-7.534977	comment	5.0	27.0	1589918459	-10.601054	As a former Jet employee, this makes me pretty sad.I took the job at Jet because I wanted to learn more about F#, coming from a Haskell background, and I was happy to find that my coworkers were all r...		tombert
23250824	12.092849	-7.4700475	comment	5.0	15.0	1590003349	-10.579046	Look - I don't have anything deep to say here. I can only say that between 'records' and 'with-expressions' now in C#, I as a hobbyist F# developer feel like I'm being shaken down by the mafia.C# desi...		myu701
23269268	11.958164	-7.459285	comment	5.0	15.5	1590129540	1.6164621	Maybe another reason is: there is two kinds of software, one is programms which process input data and transform them to output data. And then there is software which operates hardware, like steering ...		andi999
23269467	11.996447	-7.78297	comment	5.0	13.0	1590131913	10.428532	I think there is a fundamental reason. The computer is inherently mutable. As a result, the basic abstractions of operating systems are mutable.Thus, except for nicely contained problems such a text t...		RcouF1uZ4gsC
23284078	11.915755	-7.3878007	comment	5.0	47.0	1590250211	10.346973	I'm a bit confused by this comment. Having used both Ruby and Elixir (more Ruby) both languages have type systems which are quite capable of modeling domains[1]. They lack static type checking, but I ...		kerkeslager
23284163	11.711822	-7.3858876	comment	5.0	29.0	1590250788	-8.878192	"When people refer to ""typing"", it is almost certainly reasonable to assume they are referring to static typing, as implemented by most languages. I don't think this should be confusing.Specs/contracts..."		james-mcelwain
23334106	11.701818	-7.1303844	comment	5.0	15.5	1590647325	-8.901305	I'm fairly new to Unity programming in C# and I was surprised a few months ago that everything in C# must be in a class. As far as I can tell there is no such thing as just a function.Now I have I have a class with some static functions in it.		jay_kyburz
23334570	11.775737	-7.2319827	comment	5.0	16.0	1590651761	9.160969	I have a few little classes that are clients for network services. They have a constructor which sets up an HTTP client or socket or something, and maybe prepares some metadata, and then a method to m...		twic
23334642	11.853952	-7.119981	comment	5.0	38.0	1590652388	-8.105254	"But if you're passing a state object around, you might as well use a class, no? Admittedly simplifying a bit, an instance method is a function that implicitly takes ""this"" as the first argument."		cataphract
23334675	11.667679	-7.3191195	comment	5.0	17.0	1590652703	-7.09452	Why? You would never suggest this if OO wasn’t the predominant paradigm. What is the benefit of implicitly passing the parameter? I prefer to see it passed explicitly, so the implicit passing is a downside to me, not a benefit.		amw-zero
23334905	11.819477	-7.2657437	comment	5.0	15.5	1590654870	-4.7719717	There's one big difference in terms of convenience in many common implementations of classes and methods. There are essentially three different pieces involved:In OO notation, we have A.B(C)In almost ...		kqr
23337853	11.925566	-7.1943026	comment	5.0	23.0	1590676873	7.103978	Seems like kind of a meaningless gesture to pass in your own “this” just because you don’t like OOP. If you need a class, why not write it the idiomatic way?		woah
23338210	11.816565	-7.1336493	comment	5.0	12.5	1590678507	7.397223	Python + Functional = http://coconut-lang.org/		hydroxonium
23343686	11.7001	-7.081492	comment	5.0	19.5	1590705059	-7.5970654	Am I the only one who wants multi-lined anonymous functions in Python? I find myself really wanting to reach for arrow functions sometimes while writing Python, and end up disappointed that they aren't available.		heavyset_go
23362822	12.024958	-7.7451305	comment	5.0	13.5	1590859420	10.422283	One of the best ways to get adoption is to have people take initial risks and build real world serious product with a serious team/company backing behind it.Erlang got a big boost when it came out Wha...		dmix
23362856	11.995401	-7.731042	comment	5.0	21.5	1590859639	10.4100895	With respect to availability of talent pool: my alma mater used to teach Haskell as the introductory programming language, and from what I’ve heard from people who were around then it was great for fa...		centimeter
23370156	11.648414	-7.94333	comment	5.0	15.5	1590939037	10.21813	Go's popularity is due to author's employer.Both its main influences, Oberon-2 and Limbo had zero traction on the market, and Limbo not only is quite close to Go, it had an whole OS full of the Plan 9...		pjmlp
34069854	11.765192	-7.309098	comment	5.0	14.5	1671560163	-8.841281	> The other thing typing does is allow for refactoring code.No. What allows you confident refactoring code are automated tests. I honestly can't understand why people are so obsessed about types, especially in languages like Python or Javascript.		liendolucas
34078505	11.679889	-7.9258413	comment	5.0	15.0	1671615349	10.156884	I've been writing software for 20 years.  About half that in Go.Whenever I see someone say it's a bad language because X, I seriously wonder if the asker just writes terrible code, or if there's whole...		silisili
26506813	11.8084	-7.129387	comment	5.0	15.0	1616097132	-9.0402155	> With Mypy, you get all the benefits of high-level dynamic typing for rapid experimentation, and all the benefits of rigorous type checking...Except that most typed languages are far faster than pyth...		joobus
26517213	11.807871	-7.0217214	comment	5.0	14.0	1616181154	-9.035964	This is what I was thinking about reading this post. Why add things to Python to make it strongly typed? Why not just use Java or C#?		padobson
26527078	11.785852	-7.1042857	comment	5.0	13.5	1616285653	5.2617536	>  Patterns are signs of weakness in programming languages.> When we identify and document one, that should not be the end of the story. Rather, we should have the long-term goal of trying to understa...		jandrese
26529552	11.690014	-7.6586695	story	5.0	30.0	1616324358	10.13345	The Generic Dilemma (2009)	https://research.swtch.com/generic	mpweiher
26530749	11.778878	-7.1235986	comment	5.0	13.0	1616337282	-9.052759	What might “Python, but with modern type inference” look like? Are there other existing languages that come close to matching that description?		pansa2
26530687	11.795826	-7.177129	comment	5.0	24.0	1616336701	-9.035463	"When I read the twitter replies, it doesn't make me optimistic for the future of typed python.  I don't work with Python often, so I don't know what the ""truth on the ground"" is, but it seems like hav..."		skohan
26535812	12.475705	-7.502372	comment	5.0	17.5	1616376157	12.86344	>Messages are always copied before being inserted into the queue. As wasteful as this may sound it greatly reduces garbage collection (GC) latency as the GC never has to look beyond a single process. ...		javajosh
26542824	12.237867	-7.642796	comment	5.0	17.0	1616429614	11.934315	I think Scala needs to be treated something like how smart shops treat C++: there's so much there you can hang yourself with, so you need to define a subset/dialect and create a style guide and stick ...		cmrdporcupine
26587281	11.889791	-7.3335123	comment	5.0	17.0	1616717002	7.0213647	Years ago, I maintained (tongue in cheek) that OOP was a great paradigm not because it was inherently better, but because it was so bad that you had to rewrite your code several times to make it work....		kabdib
26588061	11.946101	-7.389105	comment	5.0	22.0	1616724136	7.101142	Object oriented programming is good. Not in absolutely every situation, but for most business applications it's better than the alternatives.The thing about OO is that as far as I can tell, it's natur...		joe_the_user
26659147	12.301498	-7.028913	comment	5.0	18.5	1617277017	13.164291	"Ok, then if not actually designed under the influence of LSD, then certainly under the influence of religious fanaticism.The tired old ""Perl was designed by a linguist"" cliché is endlessly Parroted (p..."		DonHopkins
26659854	12.04138	-7.1484075	comment	5.0	17.5	1617281764	-4.882212	"Kind of off topic, but is something using either Lombok[0] or Manifold[1] to have better ergonomics in Java? It sounds like a brilliant idea to me, but I don't use Java on a daily basis.[0] https://projectlombok.org/
[1] https://github.com/manifold-systems/manifold"		haolez
26663168	11.72584	-7.4781985	comment	5.0	16.5	1617296526	9.729674	Is it in the realm of possibilities that Java will someday have runtime generics support (instead of type erasure)? It's the most frustrating aspect of the language because you can't use basic Java fe...		zodiakzz
26725489	11.873485	-7.0552135	comment	5.0	18.0	1617805907	8.154226	As usual, I think it depends on the situation. Certain parts of Java's verbosity are just a net loss. However, some of those pain points have been addressed, and they're working on addressing others.F...		wtetzner
26726138	12.041636	-7.15424	comment	5.0	14.5	1617808632	-13.933149	Take a step up the enlightenment ladder and put a type dynamic language on top of java.  Lombok is silly and makes your object’s serialization capabilities a dice roll.  Keep annotations to a minimum and bring in a type dynamic language (groovy, kotlin, etc)		humbleMouse
26739501	12.139222	-7.512686	story	5.0	109.0	1617893689	-10.597234	A Brief F# Exploration	https://notes.srid.ca/fsharp-exploration	todsacerdoti
26746950	12.089787	-7.8587136	comment	5.0	29.5	1617945251	10.425471	OCaml would meet all the requirements. Any thoughts on it?		ollran
26777631	11.8110895	-7.168331	comment	5.0	14.5	1618221082	-6.381747	"What are the OP's conclusion from this experiment ?I was expecting the FP languages solutions to be exceptionally short and elegant, but after a quick glance it seems to me that the Python and Python-like languages (e.g. Nim, Zig, etc.) are ""winning"" (YMMV of course)."		fermigier
26778579	11.96983	-7.605938	comment	5.0	16.0	1618230240	-11.055541	> This exists (optics/lenses), but most programmers don't know about it. … I don't know of a simple, jargon-free explanation of the concepts.Let me have a go! I’d explain optics/lenses as giving field...		bradrn
26808130	11.603205	-7.922586	comment	5.0	16.5	1618412738	10.208664	I've built my fair share of Go microservices and have never felt the need to develop an entire framework like this.We have everything like CI/CD, distributed tracing and one line project generation.It...		Philip-J-Fry
26814919	11.79471	-7.166558	comment	5.0	16.5	1618447314	-9.028561	>A key question arises: why are so few repositories type-correct?The authors don't seem to ever discuss the fact that mypy version changes frequently make previously-passing code fail type checks.I do...		a_cool_username
26815296	11.697348	-7.3089833	comment	5.0	37.5	1618450926	-8.814899	Someone who needs types could just write in a strongly-typed language.		xvilka
26815578	11.725313	-7.338616	comment	5.0	25.0	1618453904	-8.934573	"Everyone needs types.  Here's one of my favorite quotes:> ""Dynamic typing"" The belief that you can't explain to a computer why your code works, but you can keep track of it all in your head.— Chris Martin (https://chris-martin.org/2015/dynamic-typing)"		benrbray
26815814	11.8040285	-7.212489	comment	5.0	21.5	1618456110	-9.037565	"> Here's one of my favorite quotesHere's my response to that quote:""Static typing"": The belief that if your code type-checks correctly, it will do exactly what you intended. (A variant of the belief t..."		pdonis
26816202	11.808612	-7.1165924	comment	5.0	14.5	1618461004	-9.018461	I wish that you could use typed Python to speed up the execution of the program instead of them just being hints.		ZephyrBlu
26827977	11.88008	-7.1846743	comment	5.0	17.0	1618533699	-8.99017	I don’t think calling type hints experimental is accurate. They’ve been in the stable release for 4 years.		travisjungroth
26828715	11.64121	-7.870053	comment	5.0	26.0	1618540293	10.202772	I am sorry, Go? That can’t be right. I even doubt it’s any more verbose than python or swift. You CAN make it verbose that’s for sure.		eklavya
26831927	12.255901	-7.5615788	comment	5.0	12.5	1618567908	-11.368171	Are there many companies seriously using Kotlin for large projects outside of the Android space?		dagw
26831134	12.242682	-7.535954	comment	5.0	21.5	1618561543	-11.396654	Kotlin solves most of the problems for us while leveraging the benefits of the JVM.		christkv
26862970	11.689517	-7.617631	comment	5.0	12.5	1618841700	10.138051	For a language that has taken extreme measures to exclude generics because they are deemed to complex, this proposal is absolutely surprising to me. And I'm still not sure what practical benefit comes from it.		darksaints
26883020	12.142166	-7.5161567	comment	5.0	14.5	1618959240	-10.613061	How likely will it be that F# is supported out of the box?I understand that this is a push for mobile but hopefully a linux support will be considered.https://github.com/jsuarezruiz/forms-gtk-progress/issues/31		alskdj21
26889048	12.409438	-7.3756604	story	5.0	247.0	1619009929	12.7974	Beam VM Wisdoms (2019)	http://beam-wisdoms.clau.se/en/latest/	Tomte
26896014	12.506306	-7.480828	comment	5.0	13.5	1619042678	12.919916	What I would really like to see is a statically typed language on top of the Erlang VM (dialyzer was not amazing last time I checked it, which was admittedly years ago).		uh_uh
26903557	12.159531	-7.649472	comment	5.0	16.5	1619103821	11.780439	"Scala and Haskell are both ""astronaut"" languages. They really encourage highly complex abstractions. They're potentially very powerful, but it's easy to get lost in the clouds.Some people love it, bec..."		dcolkitt
26903855	11.6490555	-7.978764	comment	5.0	21.0	1619105361	10.2738085	>Go was built explicitly to solve the real everyday problems of working in a large code base, largely driven directly by experience of several industry titans.So have all languages, with wildly differ...		gameswithgo
26928972	12.206666	-7.2624674	comment	5.0	17.0	1619305581	7.0639634	There's a part of me that wants to say that that opinion has to be taken with a grain of salt and a lump of paying attention to who is offering it.Circa 1999, one would assume that Brian Kernighan and...		mumblemumble
26941156	11.999378	-7.7806435	comment	5.0	13.0	1619433874	10.412519	Monads are not the same thing as effect types - the latter are most commonly modeled as Lawvere theories. They are at a different level of composability.Regardless, this blogpost is about Rust which h...		zozbot234
26941870	11.795956	-7.0903687	comment	5.0	13.5	1619440807	-9.097463	It's the first time I hear about Zope, and also zope.interface. How widely is this used?I personally would be hesitant to adopt something depending on some not-well-known library.Then on the other sid...		albertzeyer
26961738	12.24819	-7.624198	comment	5.0	15.5	1619558522	11.946685	"first, a small rant:
tbf. I dislike the title.
the real title is sexual harassment from Jon Pretty a leader of certain Scala Community standups.because the current title actually sounds like it's the ..."		merb
26989234	11.920084	-7.3698773	comment	5.0	17.0	1619749288	7.0632133	I think discussions of OOP and inheritance often miss the influence of Knowledge Representation on OOP: I’m not entirely clear of the history myself, but I’ve gotten the impression that knowledge repr...		fiddlerwoaroof
27011315	11.98141	-7.7301707	comment	5.0	16.5	1619916157	10.438559	If I am to install Pandoc (on Arch Linux) I have to install 95 Haskell dependencies besides the ones I already have installed.		lobocinza
27037871	11.623858	-7.064856	comment	5.0	13.5	1620138060	8.913704	"> Another way of avoiding KeyError is using dict.get(val, default_val)Except that   my_dict = {}
   my_dict[val] = my_dict.get(val, []).append('foo')

doesn't work because list.append() doesn't return..."		BugsJustFindMe
27049902	11.63883	-7.9166446	comment	5.0	15.5	1620223272	10.256161	"I need to update this for the latest generics syntax, but I wrote this a while back: http://www.jerf.org/iri/post/2955 ""Why Go Getting Generics Will Not Change Idiomatic Go""I do not understand the peo..."		jerf
27070031	11.755999	-7.195995	comment	5.0	13.5	1620342638	-8.954216	Interesting that it started out as typeless but as C came from B, they introduced types only for Python to come along and make typeless popular again. Types definitely do have their usefulness but you can certainly get by without them.		moftz
27077727	12.172321	-7.496051	comment	5.0	14.0	1620405116	8.750681	"I'm not sure what it's taking about for the ""with"" feature: https://nipafx.dev/java-record-semantics/#with-blocksIn Kotlin data classes, it's already implemented (just called copy) https://kotlinlang.org/docs/data-classes.html#copying"		cs-szazz
27097639	12.020859	-7.6832027	comment	5.0	42.5	1620579996	10.446504	The history of programming languages is one of my personal interest fields, and I find it fascinating how, 25 years on, many of the most popular languages are still slowly encorporating core features ...		legobmw99
27099071	11.86175	-7.368707	comment	5.0	14.0	1620589483	6.99639	I'd say inheritance is NOT a good use-case for Person / EmployeeA person can play many roles, at the same time. Composition is better in this case. A person has many rolesInheritance is better for typ...		elchief
27099601	12.383796	-7.082115	comment	5.0	15.5	1620593442	-1.7096435	I always found it a bit useless to be fussing over phrasing like this. What does it matter if we call itexpect(x).to(equal(y))orx.should_be(y)orassert_eq(x, y)These are just different ways of saying t...		colonwqbang
27099338	12.061667	-7.7920656	comment	5.0	14.0	1620591298	10.434839	> Ocaml was my first programming languagelmao what. how. like what course of events....I had several years professional experience, including functional programming, and still found it pretty rough going for a while. And even other professionals have often not even heard of it.		8fGTBjZxBcHq
27132080	12.300625	-7.2949724	comment	5.0	12.5	1620836583	-8.803777	BeamASM vs HiPE?Since BeamASM doesn't support HiPE - has anyone seen benchmarks of BeamASM (JIT) vs HiPE. I've searched and searched and can't find such analysis.(Super excited the JIT work is seeing light after 10+ years)		tiffanyh
27140522	12.079981	-7.8712974	story	5.0	145.0	1620901395	10.434447	Multicore OCaml: April 2021	https://discuss.ocaml.org/t/multicore-ocaml-april-2021/7849	sadiq
27152417	12.230056	-7.654644	comment	5.0	14.5	1620984524	11.936381	Sounds like more Scala sophistry. I thought they were supposed to be aiming for pragmatism with Scala 3.		cutler
27152564	12.224749	-7.635672	comment	5.0	18.5	1620986113	11.928777	> Scala is not perfect but it’s very good.I like to refer to it as Haskell with an extra chromosome: slow, hard to comprehend, and incredibly strong.I'm lucky enough to write it in my day job and I fe...		jim-jim-jim
27153023	12.240738	-7.5139923	comment	5.0	13.5	1620991179	-11.3785	Kotlin doesn't sound like a good language to bet on since most suitable(for jvm) features it has will be integrated by Java now that it has picked up pace.I guess it only has decent marketshare becaus...		xfer
27153484	12.217453	-7.6030674	comment	5.0	15.0	1620995328	11.926418	Personally I'm looking forward to scala native 1.0 more than anything else. We'll have a strong Haskell competitor. I dont like jvm.		meatmakesdumb
27154223	12.088298	-7.583366	comment	5.0	13.5	1620999855	11.887293	So, they removed implicits and introduced a number of other tools to replace common usecases for implicits.Can we take a step back now, and reflect on what was the original problem implicits were desi...		sesm
27162432	12.243777	-7.5439677	comment	5.0	26.0	1621053628	-11.358874	If I wanted to do android development again, I have no idea which skillset to optimize forReact Native?Kotlin?An old version of Java that just got lambdas?Are we doing Model-View-Presenter (MVP) no ma...		vmception
27167327	11.9245	-7.2506547	comment	5.0	22.5	1621100957	-8.909469	I think there were two main reasons: choosing a popular language (JS and python happen to be among the most popular, accessible languages) and pedagogical simplicity (it's nice to avoid burdening begi...		ksml
27167697	11.841816	-7.1071043	comment	5.0	17.5	1621103588	7.9681044	I am sure I’m absolutely nowhere near your knowledge and expertise, but please bear with me sharing my opinion :)I think Java fits better as an introductory language — it is similarly popular as JS an...		kaba0
27179987	11.827824	-7.5983577	comment	5.0	15.0	1621224909	10.0573845	From Wikipedia:> In abstract algebra, a branch of mathematics, a monoid is a set equipped with an associative binary operation and an identity element.So M = (S, op, id)My go-to example of a monoid is...		gugagore
27183954	12.241385	-7.536574	comment	5.0	23.0	1621262390	-11.4070015	I have microservices in production using both. Kotlin the language, I absolutely love. I'd put it in my top 5 languages. I don't hate Java but I've never really enjoyed writing it. Even with all the c...		nobleach
27185472	12.214269	-7.2592545	comment	5.0	14.5	1621269944	8.221404	The HN crowd is not very fond of the magic in popular Java frameworks but to me that magic is what makes those frameworks so good, although with a bit of a learning curve at first.Kotlin/Java with a f...		vbsteven
27197296	11.752543	-7.026797	story	5.0	133.0	1621356085	8.420578	Uber Engineering Tricks of the Trade: Tuning JVM Memory for Large-Scale Services	https://eng.uber.com/jvm-tuning-garbage-collection/	commandlinefan
27204148	11.796241	-7.461862	comment	5.0	16.0	1621394409	-8.935491	I like using GADTs in Haskell. However, I find the explanation in the article nearly impossible to understand. This annoys me, so I will attempt to give my own explanation of what GADTs are. (Because ...		bradrn
27386508	11.7332325	-7.365234	comment	5.0	21.5	1622750327	-8.84061	> And doing things dynamically means we can enforce stronger constraints than possible with static type systems.Can someone please explain this to a novice like  me?		geospeck
27412770	11.909949	-7.3423796	comment	5.0	19.0	1622983415	7.0856094	Why do you consider inheritance definitional?  Is it definitional by de facto, or is there an authoritative definition that you are using?The reason OO is a powerful organizational too is because it m...		cout
27412852	12.132258	-7.2317214	comment	5.0	25.0	1622984434	8.536166	ECS is often implemented in an OOP language. I know of no ECS languages.You have objects that you iterate over and apply changes to the struct or object's fields like x and y coordinates in a game tic...		samsquire
27418415	12.237864	-7.6477194	comment	5.0	12.5	1623033328	-3.2385495	Because when you are a witness to something with which you disagree, speaking out and acting on it is a matter of making an opinion, and then attaching your identity to that opinion. And thus, you mig...		numair
27425688	11.8913965	-7.3312874	story	5.0	6.0	1623088288	6.978793	Ask HN: Any Tips for Understanding OOP?		replwoacause
27439292	11.736746	-7.3726306	comment	5.0	19.5	1623178353	-8.818759	I don't think the problem is with advocacy itself, but the way people always pick apart examples, leaving no effective way to tell stories anymore.Sometimes type checking is good, other times it gets ...		mikewarot
27458721	11.599982	-7.023006	story	5.0	66.0	1623317435	5.3854465	A Pattern Language (1977) [pdf]	https://arl.human.cornell.edu/linked%20docs/Alexander_A_Pattern_Language.pdf	zeeshanqureshi
27486820	11.915824	-7.671516	story	5.0	70.0	1623525585	10.35855	The Fixed Point: Laziness, Recursion and Fixed Points in Haskell	https://rebeccaskinner.net/posts/2021-06-09-getting-to-the-fixed-point.html	rebeccaskinner
14718911	11.625991	-7.9221783	comment	5.0	14.5	1499440222	-3.4706738	Glad to see more graphics work being done in Go. This is built on `pinhole`, which is built on `gg`, a 2D rendering library that I wrote. How many layers deep can we get? :)https://github.com/fogleman/gg		fogleman
14744980	11.861643	-7.0782795	comment	5.0	30.0	1499786930	-10.373731	I would really love to see an object map function. I know it is easy to implement, but since they seem to be gaining ranks through syntax sugar, why not just have a obj.map( (prop, value) => ... ) ? :)		HugoDaniel
14756598	12.354186	-7.2613707	story	5.0	34.0	1499892919	7.127899	Pharo – Quuve	http://pharo.org/success/Quuve	mpweiher
14763271	11.606909	-7.868501	comment	5.0	13.5	1499967058	10.118612	"The fact that go1.9 will include a ""sync.Map"" type which should be generic, but can't be due to the language's limitations should already answer that.See also all of the ""container"" portion of the std..."		TheDong
14763323	11.660328	-7.9527965	comment	5.0	37.0	1499967363	10.248251	Several members of the Go team have invested significant effort in studying generics and designing proposals, since before Go 1.0. For example, Ian Lance Taylor published several of his previous effor...		crawshaw
14763423	11.67803	-7.5403714	comment	5.0	30.0	1499967953	10.133393	"If they want to ""learn"" about generics perhaps they can read the literature of the past 30yrs and look at how other languages have adopted those learnings: Java, C#, Haskell, OCaml and Coq.Look, even ..."		wheaties
14763448	11.651555	-7.955246	comment	5.0	29.5	1499968106	10.209302	I would start using Go in my projects if it introduces generics. It's a show stopper for me.		solomatov
14764107	11.62369	-7.454852	comment	5.0	28.5	1499972304	9.776072	"As a far as I can tell, an ""optional type system"" is just an unsound type system with a marketing name. Any decent static type system would allow one to progressively increase the level of typing, the..."		willtim
14764132	11.664204	-7.948876	comment	5.0	13.5	1499972423	10.233549	The beauty of Go is that you get developer productivity pretty close to Ruby/Python levels with performance that is similar to Java/C++Improvements to package management is probably the highest item on my wishlist for Go 2.		tschellenbach
14764163	11.613925	-7.9559665	comment	5.0	18.0	1499972618	10.252048	My main wish:Please don't refuse to compile just because there are unused imports.Please do warn, and loudly say it's NON-CONFORMANT or whatever will embarass me enough from sharing my piece of Go code with someone else.. but.. can I please just run my code, in private, when experimenting?		johansch
14764660	12.098279	-7.8499904	comment	5.0	17.5	1499976065	10.43952	Nearly every item on your list is available with OCaml.		nightski
14766723	11.646797	-7.906335	comment	5.0	14.0	1499995022	10.1911545	I should send this to rsc, but it's fairly easy to find examples where the lack of generics caused an opportunity cost.(1)  I started porting our high-performance, concurrent cuckoo hashing code to Go...		dgacmu
14795445	11.643801	-7.8393154	comment	5.0	18.5	1500372972	9.919764	Go's work-stealing scheduler is crude in comparison to Doug Lea's, which is a work of artful mechanical sympathy: https://github.com/netroby/jdk9-dev/blob/master/jdk/src/java...		pron
14798857	11.658516	-7.041209	comment	5.0	13.5	1500402134	-8.852196	#1 issue is lack of strong typing.I don't understand the appeal of dynamic languages. Worse performance, more overhead, harder to read...		exabrial
14818290	12.1750345	-7.587095	story	5.0	134.0	1500615275	11.944076	Coq-based synthesis of Scala programs which are correct-by-construction [pdf]	https://cedric.cnam.fr/fichiers/art_4027.pdf	pharrington
14831931	11.753189	-7.325642	comment	5.0	22.0	1500812562	-8.876914	> This is especially true when your system is interacting with external data - like user input and a database. I did C# and Java for years. These interactions are, at best, painful with static languag...		seanwilson
14834950	11.947004	-7.6101623	comment	5.0	20.5	1500852952	-9.015879	Covariance and contravariance are just monotonicity and anti-monotonicity, applied to types ordered by subtyping.That is: if we have a function on types, say, the function `f` defined by:    f(x) = In...		rntz
14835899	11.733776	-7.3867927	comment	5.0	14.5	1500870903	-8.662205	"Wow, that's a new word, ""posetal"". Does that mean ""can be partially ordered""?What is ""Int""? Integers? Integral? Int... ernal? ... types?What's with the notation, anyway? Why use ""<:"" instead of ""<"" li..."		jordigh
14843146	11.824492	-7.197168	comment	5.0	17.5	1500933815	5.2181654	Are Design Patterns really so out of fashion with the youth of today that nobody here mentions Design Patterns as their answer?Because it is mine, for better or worse. It took me from understanding OO...		sideshowb
14843341	11.759377	-7.0900517	comment	5.0	15.0	1500935542	5.5024157	"Can you provide an example of how a language like C++ or Java would require a ""design pattern"" when another language wouldn't?"		brucephillips
14855781	12.332125	-7.042344	comment	5.0	30.5	1501073889	13.1319895	I hate perl6.  I hate it because I tried to get involved in the project early on, and it led me down the Haskell rathole.  I don't know what Haskell looks like today, but a decade or more ago it was t...		Steeeve
14872071	12.247812	-7.577946	comment	5.0	18.5	1501217578	-11.38011	Since Kotlin has been officially supported by Google for Android, Scala has a strong competition which I hoped to become Java3 one day. https://developer.android.com/kotlin/index.html		nancyp
14875331	12.147056	-7.513315	comment	5.0	15.5	1501258501	-10.615388	Newbie here. Somebody can point to useful other resources for F#?		marvel_boy
14882674	12.222111	-7.5436993	comment	5.0	26.5	1501356606	-11.367864	This article misses something I feel is really very important: Kotlin is just Java! Like, granted, I'm probably a better-than-average developer, but I was turning out well-factored, clean, readable, 1...		eropple
14901717	11.685709	-7.6687145	comment	5.0	16.0	1501601285	10.108813	I wonder is this is due to lack of generics in objc.		adamnemecek
14907910	11.702917	-7.34928	comment	5.0	12.5	1501647814	-8.765062	Why is this considered newsworthy? How many practical type systems do you know that are not Turing-complete, yet powerful enough as development aids? (Hindley-Milner doesn't count. HM might have decid...		catnaroek
14920333	11.718746	-7.3862205	story	5.0	97.0	1501773536	-8.437535	Encode state transitions in types using linear types	http://www.tweag.io/posts/2017-08-03-linear-typestates.html	yorwba
14928182	12.060075	-7.8189516	story	5.0	109.0	1501849906	-3.1509323	A formalization of category theory in Coq	https://github.com/jwiegley/category-theory	noch
14933413	11.63129	-7.9301853	comment	5.0	21.5	1501891712	10.193671	Slightly related:The lack of an easy to use debugger is a huge issue for me when working with go.Coming from PHP, I spend 90% of my time in the debugger running my code line by lines (with xdebug coup...		gouggoug
14956568	11.614633	-7.8760405	comment	5.0	15.0	1502190815	10.145957	"I can't speak about Go specifically, but something I'd love to see in a language is a general ""context"" mechanism for passing data from a very high scope to a very low scope, without changing the func..."		captainmuon
14970823	11.654913	-7.964273	comment	5.0	13.0	1502295648	10.221108	"  According to my opinion, a programming language should let a developer use his or her style.

gofmt is the best part of Go. Everybody's code looks the same.  Broken Package Management

This is a sol..."		y0ssar1an
14997117	11.699179	-7.706522	comment	5.0	14.0	1502527935	10.321925	No comment about OO in general, but I think Java/C# is a damn fine language design, avoiding many problems of newer paradigms. Here's an example:1) Java: starts out with one opaque string type, becaus...		cousin_it
15004944	12.337637	-7.047461	comment	5.0	28.0	1502658469	13.18957	Its been endlessly stated but naming it 'Perl 6' was a huge mistake. Perl 5 has an enduring reputation for crufty, unmaintainable code written by graybeard sysadmins. I wrote a lot myself that I would...		pram
15005933	12.332763	-7.034592	comment	5.0	12.5	1502671448	13.185635	Lately, I've been seeing more pots on Perl.  Is it just confirmation bias?  or is Perl making a comeback?		pascalxus
15017013	11.909865	-7.646014	story	5.0	47.0	1502794241	10.4069605	How do I modify a variable in Haskell?	http://www.michaelburge.us/2017/08/15/how-do-i-modify-a-variable-in-haskell.html	MichaelBurge
15043423	12.245452	-7.6333256	comment	5.0	24.0	1503028435	11.957356	Regardless of Scala, it's an absolutely insane idea to develop your own language to write your apps.Either stick to the real Scala or switch to Java or Kotlin, but writing your own language is a failure waiting to happen.I give this project a few more months before it gets canceled.		hota_mazi
15043459	12.228048	-7.628752	comment	5.0	13.0	1503028930	12.028838	You're playing with words. They are creating their own language which is a subset of Scala, and they decide which features to keep based on whether they are fast enough to compile.The point is: developing your own language to ship your apps is crazy.		hota_mazi
15044837	12.127716	-7.5361223	comment	5.0	14.5	1503049920	10.382535	What I'm looking for in a language:1. Solid mix of functional programming and Object oriented programming (though FP is more important - I'd gladly give up inheritance if I get good support for interf...		m12k
15054094	11.603577	-7.944657	comment	5.0	12.5	1503158772	10.215927	I don't think Go targets the less experienced. Could you provide a resource, where the language creators have stated that Go targets interns?Go is a safe programming language, but it is not simple. Go...		terminalcommand
15054240	11.645656	-7.9716773	comment	5.0	14.5	1503160376	10.244726	"As Sandy Metz once said, ""A little duplication is far better than the wrong abstraction.""After a decade of OOP indoctrination and misuse, we see the results of this.> Go has popularized a mode of writ..."		treehau5
15060559	12.038687	-7.793564	comment	5.0	13.0	1503268043	10.383416	"From https://hackage.haskell.org/package/free-4.12.4/docs/Control... :""A Comonad v is a cofree Comonad for f if every comonad homomorphism from another comonad w to v is equivalent to a natural transf..."		mixedCase
15063465	12.246221	-7.548248	comment	5.0	17.5	1503311778	-11.362577	Kotlin can never replace Java as long as the JVM is relevant.This is like trying to replace C on UNIX, C# on .NET, Erlang on BEAM, or JavaScript on the browser.		pjmlp
15066558	11.916265	-7.271668	comment	5.0	20.5	1503340214	9.181866	I heard Doug Crockford talk about how he doesn't think async/await is that great an idea on a podcast a while ago.His argument was that it's an unclean abstraction - it gives you access to 'features' ...		davnicwil
15073453	11.616107	-7.456056	comment	5.0	18.0	1503416332	9.999288	>A sum type `T = A | B` means that a value of type `T` can be either of type `A` or of type `B`. Such a type is used to express polymorphism.Taking this example (in English / pseudocode):Define a clas...		vram22
15082342	11.655644	-7.0681634	comment	5.0	23.5	1503502661	8.414053	It's worse than that.  We have met the Enemy and the Enemy is us.Java, as introduced, claimed that nearly everything was an Object.  What we got instead was nearly everything is a String.The Real WTF ...		hinkley
15099679	11.825697	-7.0218487	comment	5.0	21.5	1503678278	-7.6740584	"> there's no acceptable way to pass a function body to another in Python.There are sentences which are telling a huge incompetence about the person using these.This sounds the same story to me as ""We ..."		Walkman
15099863	11.641261	-7.187328	comment	5.0	17.5	1503679208	-7.503452	No one likes callback hell but I believe they meant that you can just pass a function expression directly. No need to define a named function. It's the difference between:  let doubled = nums.map(x =>...		neurotrace
15105943	12.064126	-7.829592	comment	5.0	20.5	1503762557	10.433397	Version incompatibility is a big problem for OCaml. Every time I try to use it seriously, the recommended tools never seem to work together on anything but the latest version. It's like Rust, but with...		thesmallestcat
15111733	12.130508	-7.6617775	comment	5.0	12.5	1503855657	-10.439345	Are there examples anywhere showing if this is productive to use with a UI framework (e.g. Angular, Vue, React)? What are the thoughts of people that have personally tried it?OCaml is one of my favour...		seanwilson
15137218	11.68919	-7.3591523	comment	5.0	17.0	1504138971	-8.83877	I'm curious: could any of the recently known smart contract bugs have been prevented through the use of a stricter type system?I tend to think of type systems more as a hindrance myself. I mean, they ...		jsnathan
15139646	11.72295	-7.3928814	story	5.0	96.0	1504180467	-8.6565275	Type Systems (2004) [pdf]	http://lucacardelli.name/Papers/TypeSystems.pdf	tosh
15141297	11.76503	-7.740834	comment	5.0	47.0	1504195794	10.072254	> That said, I think Node is not the best system to build a massive server web. I would definitely use Go for that. And honestly, that's basically the reason why I left Node. It was the realization th...		s_kilk
15142364	11.606901	-7.2816825	comment	5.0	20.5	1504202655	-10.17148	">  Languages where variables can be given (nontrivial) types are called typed languages.This is a vacuous definition because it doesn't specify what is meant by ""variable"" or what it means to be ""give..."		lisper
15142669	11.628584	-7.804794	comment	5.0	13.5	1504204583	10.07587	but why? Go's model is perfect. They're not real threads, it's basically very similar to Node, except that you can write code without a mess of callbacks and it's easier to reason about...		cdelsolar
15143904	11.7825575	-7.353586	comment	5.0	16.0	1504213464	-8.915658	"When static typing vs dynamic typing is discussed, i see that often a mistake is made and ""static typing"" is confused with ""strong"" typing, and ""dynamic typing"" is confused with ""weak typing"".Just FYI..."		flavio81
15153036	11.976762	-7.731857	story	5.0	183.0	1504307567	10.458998	Making a GTK Video Player with Haskell	https://lettier.github.io/posts/2017-08-30-haskell-gtk-video-player.html	lettier
15157195	12.219635	-7.5028005	comment	5.0	14.5	1504373521	-11.308183	I don't get it: there is already a widely accepted 'better' Java called Kotlin, that features much more than this: way better integration with IDEs, way better integration with existing Java codebases...		arkadiytehgraet
15161414	11.981615	-7.747539	comment	5.0	14.5	1504446916	10.394519	The examples mentioned in the other posts confirm my impression that Haskell is a good language for text processing and server applications but a pain for writing rich desktop  applications.One of the...		progman
15186799	11.92566	-7.4043007	comment	5.0	16.5	1504729144	-6.033222	You seem to have jumped to the conclusion that I haven't tried the FP features. If I hadn't tried them, I wouldn't be criticizing them. If I wanted to work in FP style, I would choose an FP language; ...		newforice
15200081	11.785312	-7.0378175	comment	5.0	13.5	1504878406	-9.012782	>On the other hand, the idea that dynamic languages are more productive than static languages are laughable. Statically type languages prevent a lot of bugs and allow for a lot of automated provably c...		carlmr
15200094	11.903324	-7.287867	comment	5.0	15.5	1504878626	-8.997745	You sound like someone who hasn't used dynamic languages in anger, or you'd mention some of the things that dynamic languages do well that statically typed languages aren't so great at, to prevent you...		barrkel
15200220	12.494496	-7.8454027	comment	5.0	21.5	1504879539	-11.147541	You can say that something is a floating point number (a type) but what if that something must be between zero and one? A type can't tell you that.Typing has its place but the idea that it catches all...		hellofunk
15201131	11.615475	-7.8739967	story	5.0	34.0	1504885536	10.079494	Golang Concurrency Design Considered Harmful	https://medium.com/@sargun/go-concurrency-considered-harmful-26499a422830	copyconstruct
15240823	11.82213	-7.582155	comment	5.0	16.5	1505325595	10.097352	"I'm not sure why it's interesting to label all these things as monoids. It seems kind of the tail wagging the dog.More concretely, ""monoid"" seems both too general and too specific to be useful. Things..."		kens
15241432	11.852358	-7.6215057	comment	5.0	12.5	1505328950	10.04059	Why monoids? Why not groups? Why not vector spaces?I can't tell why monoids are supposed to be more directly applicable to programming than any other concept from algebra.		umanwizard
15242142	11.696039	-7.0885987	comment	5.0	16.0	1505333563	8.99906	Which is easier to comprehend at a glance?* Under my Foo API you are able to combine Bars monoidally* Under my Foo API you are able to combine Bars using baz such that `baz (baz bar1 bar2) bar3 == baz...		tome
15250265	11.791229	-7.195249	comment	5.0	17.0	1505410042	-7.539425	Agreed, modularity definitely helps us minimize the mental load of understanding all the objects at once. But how does it handle this situation:Write function in module A that expects some complex dat...		vturner
15298060	12.062605	-7.6008987	comment	5.0	14.5	1505940328	9.718034	I've never used kotlin, but after reading the article, I wondered how it could be possible for kotlin to be null-safe and interoperable with Java at the same time. Turns out it's not [1]. Kotlin's nul...		anorwell
15297708	12.0190325	-7.8014526	story	5.0	97.0	1505937946	10.421064	Non-determinism: a sublanguage rather than a monad	http://okmij.org/ftp/tagless-final/nondet-effect.html	panic
15299467	11.973176	-7.7459865	comment	5.0	13.0	1505952090	10.410631	If Haskell is so simple, why is GHC so big?I see your claim repeated often on HN, but I think it's disingenuous.		Volt
15323042	12.140217	-7.77634	story	5.0	123.0	1506221750	-3.1752887	Basic Category Theory for Scala Programmers	https://blog.scalents.com/2017/09/22/basic-category-theory-for-scala-programmers-part-i/	adamnemecek
15325251	11.74522	-7.024835	comment	5.0	17.0	1506269513	8.5075655	"There is no such thing as ""private"" or ""public"" instance variable in Python. This guy should not teach..."		Walkman
15337192	12.048909	-7.795455	story	5.0	88.0	1506416268	10.382237	Calling Futhark from C and Haskell	https://futhark-lang.org/blog/2017-10-26-calling-futhark-from-c-and-haskell.html	Athas
15343072	11.688811	-7.8760247	comment	5.0	14.5	1506464398	6.4290967	After seeing the CNN one and now this, it makes me want to create a generalized service to turn any site into TXT format with the html2text [0] golang package.Will submit to Show HN if I get enough round toits ;)[0] https://github.com/jaytaylor/html2text		jaytaylor
15347894	11.742693	-7.4600835	comment	5.0	20.0	1506521205	-9.396027	In a time where we're finally realizing the benefits of functional programming (i.e. no side effects), a problem like this really seems like a callback to a more barbaric era. Like writing a state mac...		brianberns
15363332	12.50398	-7.0255194	story	5.0	132.0	1506668447	-11.2228	Visualizing Your Ruby Heap	http://tenderlovemaking.com/2017/09/27/visualizing-your-ruby-heap.html	geospeck
15365416	11.851982	-7.4133716	comment	5.0	14.0	1506694430	7.105204	Why do we need yet another term for concepts already known as function composition, currying, and partial application?		dreamcompiler
15365863	11.895563	-7.6949186	comment	5.0	12.5	1506697142	10.367171	Go argue with Haskell benchmarks. Functional programming is slow.		fiatjaf
15373782	11.979577	-7.742368	comment	5.0	21.5	1506790868	10.415204	There's probably some truth to this. My mathy friends have a deep appreciation of Haskell. I always try to get into it for a few weeks, marvel at it, grok some new things, then inevitably end up in mo...		aaron-lebo
15374094	12.043641	-7.797596	comment	5.0	13.0	1506794318	10.405472	"more mundane thingsEven the most reasonable of ""Haskell people,"" the OP included, seem to have this built in condescension for programs that actually do things. Still waiting for the Haskell community..."		resu_nimda
15384604	11.800944	-7.23835	comment	5.0	19.5	1506958528	-9.032764	IMO the autocomplete argument is rather unconvincing.  Every dynamic language I've worked deeply with has powerful and simple introspection capabilities, and they generally come with much more interac...		cle
15384739	11.779023	-7.5269856	comment	5.0	26.5	1506959330	-8.787654	List typing isn't as superficial as it seems. The following has happened to me multiple times, perhaps in the last month:I have a large code base. I want to replace a fundamental data structure to sup...		danharaj
15385080	11.896078	-7.0849934	comment	5.0	18.0	1506961009	6.7289844	Lets be real, when we say dynamic languages, we aren't talking about niche languages like Lisp. We are talking about JS and Python almost exclusively.		Eire_Banshee
15385758	11.736124	-7.355838	comment	5.0	21.5	1506964502	-8.85075	> Static typing prevents bugs in code to the degree that the programmer can correctly encode the desired behavior of the program into the type system.Exactly. The author of the article implicitly equa...		pdonis
15385616	11.776601	-7.3745213	comment	5.0	24.5	1506963766	-8.894918	Static typing prevents bugs in code to the degree that the programmer can correctly encode the desired behavior of the program into the type system. Relatively little behavior can be encoded in inexpr...		catpolice
15388986	11.70738	-7.2464433	comment	5.0	13.5	1506988981	4.6085024	Anyone know if there is a best-practice immutable data structure variation here? The way I've thought about it is that if you store the entire sequence of operations which have occurred so far, and yo...		westoncb
15389577	11.646478	-7.9154186	story	5.0	120.0	1506996488	10.220314	Statically typed functional programming language implementation with Go and LLVM	https://github.com/rhysd/gocaml	kristianp
15407980	11.610728	-7.9262724	comment	5.0	14.0	1507198719	10.204404	Genuine question as I've only dabbled in Go, but I've heard complaints from other dabblers that Go seems to encourage large files rather than breaking things up in a more modular fashion. Is that a reality? Or has the complainer just been unlucky in the code they've viewed?		scaryclam
15422865	11.652715	-7.957769	story	5.0	38.0	1507363955	10.205208	Beauty of the Go Programming Language	https://hackernoon.com/the-beauty-of-go-98057e3f0a7d	rayascott
15426683	12.223832	-7.4014187	comment	5.0	14.0	1507428851	-11.336312	The other day there was a post recommending the use of JavaFX.I would really like to see a non-trivial app built on JavaFX in Kotlin, with the following properties:- Does not look ugly.- Is not compos...		hasenj
15431567	11.822321	-7.018564	comment	5.0	13.0	1507522970	8.4055805	Either I'm being very dense, or something doesn't quite make sense about these numbers.The slides say that on the busiest day of the year, they were serving around 175,000 transactions per second (126...		sago
15451180	11.649219	-7.9772263	story	5.0	111.0	1507740823	10.228931	Cthulhu: Organizing Go Code in a Scalable Repo	https://blog.digitalocean.com/cthulhu-organizing-go-code-in-a-scalable-repo/	jsvcycling
15464773	12.393885	-7.813845	comment	5.0	20.0	1507895180	-11.110041	I submitted this link before I had watched the whole thing. As someone who has only dabbled in Clojure I think there are a lot of interesting ideas in there but found the type-system bashing pretty of...		kasbah
15464966	11.85019	-7.4147725	comment	5.0	15.0	1507897492	-9.058579	are people without a degree in type systems even allowed to express their opinion on dynamic vs static? because if their opinion is automatically viewed as inferior whenever a person with a degree chi...		keymone
15465210	11.93823	-7.4955535	comment	5.0	34.0	1507899945	-9.017622	This is an outstanding point.  When watching this talk, I got the distinct impression that Rich has simply worked on a very different class of problems than the ones I have worked on.  As we all are w...		mightybyte
15483512	11.947477	-7.55176	comment	5.0	17.0	1508165061	4.3778334	What do you think about Standard ML as a language for teaching?I like it because the syntax is clean, it is functional and higher-order, but also has an explicit concept of references (i.e. mutable memory) and using functions with side effects (i.e. printing) is no trouble at all.		sddfd
15483562	12.147758	-7.7641525	comment	5.0	14.0	1508165447	10.392878	I wouldn’t think so. Maybe Clojure?I kind of like Haskell but I’ve been turned off by the way some of the development is done.There is, for all intents and purposes, only GHC. Yet everyone uses it by ...		MBCook
15491009	11.882016	-7.562581	comment	5.0	24.5	1508249571	10.28883	It may even be fair to say that Haskell's typeclasses make it more like an object-oriented programming language. They have things like properties and multiple inheritance. Even Wadler has a section le...		wyc
15491470	11.883819	-7.492664	comment	5.0	18.0	1508252459	7.152362	"Polymorphism — If you understand by OOP the single-dispatching made at runtime, then type classes are different because type classes are solved at compile time, the ""vtable"" (the dictionary of functio..."		bad_user
15523807	12.253215	-7.295489	story	5.0	104.0	1508622721	7.063341	Methods for Teaching the Programming Language Smalltalk (1977) [pdf]	http://bitsavers.org/pdf/xerox/parc/techReports/SSL-77-2_Teaching_Smalltalk.pdf	mpweiher
15534087	11.958408	-7.2583666	comment	5.0	18.0	1508774012	-4.962258	> In either case we need to call hideLoadingSpinner(). Until now, we had no choice but to duplicate this call in both the then() and the catch() block.I always chain a `then` after `catch` in these si...		drinchev
15549454	11.761158	-7.2338824	comment	5.0	14.5	1508934449	-8.938509	> It's really sad when I see `foo(bar)`, and I have no idea what the type of `bar` is, and if it's an object, I have no idea what fields `bar` hasWith a statically typed language, you still have to lo...		u801e
15568828	11.785868	-7.367368	comment	5.0	15.5	1509115476	-8.85425	The thing about static typing is that there's a lot of research behind it and it's getting better every day.  Eventually it will get to the point where it's nearly almost the same as dynamically typed...		Verdex_3
15576935	11.764084	-7.2105308	comment	5.0	14.5	1509228694	-8.968594	> I often wish I worked in a language where I could start dynamic and end statically... I can imagine writing the core of an algorithm and then gradually tightening the conditions as it comes into foc...		tedmiston
15581891	11.932737	-7.1556225	comment	5.0	12.5	1509316472	8.742927	Honestly I don't understand point of data classes. Why was it introduced into language? The only time when I'm implementing equals/hashCode is when I'm going to use this class as a hash key and it's q...		vbezhenar
15581799	11.796273	-7.0711284	story	5.0	24.0	1509315520	6.6094623	Design Patterns: Factory Pattern, Part 1	https://henricodesjava.blog/2017/10/29/design-patterns-factory-pattern-part-1/	henriavo
15593807	12.473346	-7.065237	comment	5.0	15.0	1509462844	12.365465	We're moving away from a Ruby codebase now. Everytime I have to grep the codebase to find where a method magically came from, I die a little on the inside.I won't say it is a bad language, but it allows and seems to encourage some bad habits.		eximius
15595055	11.805995	-7.3418183	comment	5.0	14.0	1509472073	10.164396	"If my function only needs to know the ""age"", then why am I having to fill out my Person class with all the other stuff? Why, if I have facts about a Cat in hand, must I coerce it to a Person? These are hoops you're typically jumping through when you're dealing in ADTs."		wellpast
15611426	11.671695	-7.108639	comment	5.0	22.0	1509637555	9.180703	"The worst idiom of Python is the idea of Pythonic. It is usually prefixed with ""un"" and used pejoratively. The rest of the cases it is used to rationalize arbitrary biases such as Python's lack of an ..."		brudgers
15626393	12.267465	-7.4921026	comment	5.0	13.5	1509822259	-11.526168	Does this mean that Kotlin -> React -> React Native is feasible too? It's a bit ridiculous on its face, but is there a better way to run Kotlin on iOS? Kotlin is a godsend for Android but if you have to support both platforms one codebase is better		maxfurman
28706612	11.687013	-7.241681	comment	5.0	12.5	1633011540	8.976446	"Having an interface for a single implementation is just redundant. A class already has an interface - it's public API.Other than that I agree, most ""best practices"" are subjective and boil down to personal preference."		oweiler
28715716	11.75011	-7.381424	comment	5.0	14.0	1633073949	-10.05433	I have a question that's been on the back of my mind for a while: why just types? Aren't there other things we should be able to tell the compiler so it enforces correctness better? Or a different way...		TeMPOraL
28742856	11.656592	-7.564492	comment	5.0	15.0	1633319239	10.085329	Are generics not essential in a modern industry language? How else can you avoid rewriting data structures? Void pointers and polymorphic parameters expect the programmer know the underlying type.		mastrsushi
28748226	11.59422	-7.4973454	comment	5.0	18.0	1633362432	9.895677	"I'm making a relational lang (https://tablam.org) and this was one of the question marks for me.The #1 reason sum types was not presented is because ""nobody"" thought (seriously) about that for long ti..."		mamcx
28763143	11.995544	-7.785028	comment	5.0	18.0	1633457023	10.386368	A monad, as thought of in programming, is really something that requires higher kinded types.The reason they are hard to explain in a language without HKT is the same reason why List[T] would be hard ...		adamgordonbell
28765898	12.018557	-7.800468	comment	5.0	17.0	1633469556	10.406381	"Can someone give me a practical example of when one would want to use a monad?  Typically I don't want side-effects to all live in one thing.  It's cute but ""we want to change the world,"" don't we?"		sova
28801249	11.610325	-7.1834364	comment	5.0	17.0	1633711173	9.126633	"It lets you do functional style programming easily. This sort of thing:  [1, 2, 3, 4].map(x => x * x).filter(x => x < 10)

Python's lambdas and list comprehensions are quite restrictive in comparison to functional style."		IshKebab
28837784	12.0148735	-7.1488867	comment	5.0	19.0	1634030984	9.05913	The third example describes something useful in record types, but goes about it in what seems an odd way, and ends up suboptimal as a result. I'd instead use an object type like this:    type Human = ...		throwanem
28839287	11.746497	-7.2309737	comment	5.0	14.5	1634044791	6.9765472	Why write code like that, instead of extending the class with a mandatory property?  The above code is going to be inscrutable to a lot of engineers, and this isn't something like an ORM where there's a good reason for that.		CuriouslyC
28872337	12.159545	-7.0504923	comment	5.0	15.0	1634258343	-10.289484	I don't think that's true. Or at least we have different ideas about what's being discussed...Let's take JSON or YAML for example:Rust's closest siblings C and C++ are typed, and you get a pretty much...		spoiler
28894851	11.990916	-7.7832875	story	5.0	42.0	1634458858	10.427843	Std: Execution, Sender/Receiver, and the Continuation Monad	https://sdowney.org/index.php/2021/10/03/stdexecution-sender-receiver-and-the-continuation-monad/	ingve
28898425	11.612923	-7.062692	comment	5.0	17.0	1634494204	-10.44919	The walrus operator is a tired old trope to hate on, but I dont see the point personally. Same goes for the structural pattern matching thing. The tacking on of typing features feels superfluous in a ...		isoprophlex
28907614	11.795415	-7.183084	comment	5.0	32.5	1634575679	-9.005938	I've seen a lot of push back on adding type checking to Python but we had a similar case at my company where we tried it out on a new project and the clarity and readability of the code was immediately beneficial to the entire team. Perhaps it's something well suited to larger codebases.		gundamdoubleO
28907730	11.622388	-7.2171044	comment	5.0	23.0	1634576312	-8.682776	Honestly will never go back to languages without type checking, it prevents so many bugs and is a huge help in understanding code you haven’t worked with previously.		dado3212
28907742	12.420455	-7.8006387	comment	5.0	25.0	1634576376	-11.137354	I’ve done everything from Haskell to Java and I still strongly prefer Clojure and Common Lisp-style dynamic types.		fiddlerwoaroof
28916146	11.6521015	-7.9487085	comment	5.0	24.0	1634633784	-7.844292	Go is not the only one.  When I asked a few years ago, if someone could explain dependency injection in terms that I understand, ie Haskell terms, I got the reply of 'hmm, maybe it's like giving arguments to your function?'.		eru
28916425	11.866221	-7.291837	comment	5.0	33.5	1634636807	7.3717656	Java designers have really shot every language user in the foot by eschewing the notion of a function from the language. The only way to have a function is to create a class with a single static metho...		nine_k
28919140	12.390381	-7.042968	comment	5.0	14.5	1634657177	12.382896	> Python is such a joy to writeTry out Ruby: so many Python syntax decisions make no sense after you see the Ruby way.		satyanash
28920554	12.073284	-7.475876	comment	5.0	18.5	1634663382	-10.436439	I guess I'll just throw myself to the wolves here by saying that I'm generally in favor of a pipe operator, I believe avoiding unnecessary temporary variables is a very valuable thing for the reasonab...		ledauphin
28927659	11.817651	-7.4876695	comment	5.0	15.0	1634713552	2.854249	> If our objects are sets (as they are in the category of types and functions)And from the previous article:> What I do love about category theory is that it is not some framework, or design pattern, ...		Zababa
28942174	11.863013	-7.406787	comment	5.0	15.0	1634808151	-8.810894	I wonder why auto-curried function syntax has become so ubiquitous in explaining this. For anyone coming from a more traditional CS background, it's just extra cognitive overhead in understanding the ...		tsimionescu
28943775	11.831716	-7.5755234	comment	5.0	14.5	1634821330	-8.520678	Only Haskell programmers would consider the type signature a replacement for an explanation. I don't mean to be rude to you personally - this is endemic to the culture of Haskell.Possibly once you're ...		rkangel
28981902	11.8603325	-7.1349416	comment	5.0	25.5	1635109457	8.207101	Thank god for that, because those feature are either horrible on their own or superseded by better ones. You're getting a car and complaining for not getting faster horses. The features Java has adopt...		pron
29011168	11.620245	-7.1708503	comment	5.0	15.0	1635327947	7.1488914	I may be biased due to familiarity with imperative programming, but I think it is natural to think in a way that mutate states, as we live in a mutable world. I agree that functional programming might...		pca006132
29023865	11.649572	-7.951861	comment	5.0	17.5	1635411109	10.21923	I'm glad that all the blog posts written by the apologetes and zealots, claiming that Go doesn't need generics and how they will actually be a detriment to the language, are archived somewhere in the ...		kubb
29032223	12.024155	-7.5373	story	5.0	10.0	1635456324	7.322996	Ask HN: Hey Functional Programmers, how did you learn functional programming		dprophecyguy
29092150	11.599851	-7.8780684	comment	5.0	24.0	1635926772	10.110066	People talk about the lack of generics et al as being Go's downfall but personally what I've found to be the biggest annoyance is the very thing Go boasts to be good at: writing bug/race free multi-th...		hnlmorg
29100269	11.830158	-7.335293	comment	5.0	19.5	1635973617	10.014986	Very nice!The very, very related thing I found myself wishing I had just today is the ability to destructure discriminated union fields which only exist on one component type of the union.As an exampl...		015a
29117240	12.016535	-7.7465477	comment	5.0	13.0	1636106301	1.6024387	"Anyone had a ""bait & switch""?
In essence: You applied for job X but
""Yeah that job has been filled, but maybe you're interested in Y?"" 
(X can be Haskell, CTO, .... and Y can be Php, architect, ....)"		toolslive
29121702	11.974003	-7.7222705	comment	5.0	19.5	1636130555	10.376867	I am interested in functional programming. Without a CS background I was wondering, if Haskell can provide these guarantees, why is it not more adopted?If, on an enterprise scale, you can avoid the majority of bugs, would that not be a clear win?		StefanWestfal
29132365	11.6085205	-7.03222	comment	5.0	45.0	1636221851	-6.6287227	"Tim Sweeney did a presentation[0] at MIT's CSAIL on programming languages that I thought was really interesting (it mentions Haskell quite a bit), titled ""The Next Mainstream Programming Language: A Game Developer’s Perspective.""[0]: https://web.archive.org/web/20120113030236/http://groups.csa..."		servytor
29132068	11.628027	-7.4028225	comment	5.0	16.5	1636219630	-6.8542876	As a bit of a type amateur, I wondered about this: why do we define primitive types and leave it at that? Why aren’t things like min and max first class constraints one can place on a type?I imagine t...		Waterluvian
29139607	11.7294235	-7.2735806	comment	5.0	14.0	1636294728	-10.864958	I like dart's cascade operator (..) a lot, that way you can chain calls on an object without the functions returning this. I'm sure other languages have something similar, kotlin has apply which feels a bit more heavy handed though.		BoardsOfCanada
29163685	11.653361	-7.9052215	comment	5.0	22.0	1636474587	10.228856	> Something I don’t see the Go team get enough praise for is their ability to bring major language changes like generics into the language in an actually backwards compatible minor version update.I do...		masklinn
29172119	11.869135	-7.298397	story	5.0	13.0	1636530264	7.054418	Object-Oriented Programming – The Trillion Dollar Disaster	https://betterprogramming.pub/object-oriented-programming-the-trillion-dollar-disaster-92a4b666c7c7?gi=6558c3a6ae78	itistricky
29185956	12.313954	-7.017776	comment	5.0	16.0	1636621270	13.185293	Worse still, they would have to read Perl code :)		mrich
29202882	12.45759	-7.098794	comment	5.0	16.5	1636742014	12.425244	> blocks -- syntactic support in the language for cleanly passing a single in-line defined lambda/closure object as an argument -- are possibly the thing that are most special to ruby.Too bad ruby sto...		chowells
29207794	11.789556	-7.037889	story	5.0	65.0	1636783279	-6.527718	Metaobject protocols: Why we want them and what else they can do (1993) [pdf]	https://users.cs.duke.edu/~vahdat/ps/mop.pdf	Jtsummers
29208553	11.667619	-7.185502	comment	5.0	15.0	1636795202	9.078805	>  It's just making things needlessly hard for programmers in an attempt to save effort from computers.Well actually it is supposed to make concurrency easier for programmers.What would you say is an ...		jsiepkes
29217327	12.493373	-7.840843	comment	5.0	14.5	1636899857	-11.120617	I have ~8 months of Clojure experience and ~3 years of F#. Clojure's REPL and feedback loop is bloody marvelous. F# also has a REPL, but it doesn't compare. However I still prefer F#'s type-safety. (I...		dharmaturtle
29224680	12.222179	-7.210655	comment	5.0	31.5	1636960557	7.330715	Its incredible to me that the guys who lament the fall of Smalltalk always blame Java.It wasn't Java that killed Smalltalk, it was a combination of ParcPlace's hubris and Visual Basic.In the end, repl...		smackeyacky
29228658	11.823646	-7.204298	comment	5.0	31.5	1636990898	-9.014112	A case study from my own personal experience:We generally do everything in Java. Python is avoided because of all the usual complaints - dynamically typed, not fast enough, GIL, etc.So, as a PoC, I de...		mumblemumble
29237268	12.235523	-7.559966	comment	5.0	14.0	1637041090	-11.387693	Lambda's seem like one of the least interesting features of kotlin. There's so much more going on in the kotlin world than lambdas.it seems to me that kotlin is leading the way and java is following, but the delta between them is quite large and possibly growing.		shrewduser
29237530	11.641447	-7.1734176	comment	5.0	13.5	1637044185	8.871891	"I am lost here. the non-goal mentioned here are actually worth taking as goals to be fulfilled so that every other language and library ecosystem which runs on JVM will get benefited.Non-Goals:-
It is..."		truth_seeker
29252985	11.884961	-7.6552124	comment	5.0	16.0	1637157440	10.356809	"If you are interested in ""Haskell, but with a nicer standard library"", Idris 2 might actually be an interesting choice. The Idris 2 prelude very much feels like a cleaned-up version of the Haskell pre..."		nerdponx
29273854	11.818143	-7.3048487	comment	5.0	16.5	1637296206	-8.927754	"When it comes to code, I'm fairly certain ""correctness"" is in fact an irrefutable advantage.The argument has always been whether or not the price of that correctness is too high.But at this point if y..."		fastball
29274456	12.4146595	-7.120271	comment	5.0	19.0	1637303932	12.34332	Ruby's dispatch is Smalltalk-like, not Java-like; it is (very) late-bound.  The consequences for interface design are dramatic, the natural style being one in which objects notify each other, rather t...		inopinatus
29298301	11.852231	-7.177259	comment	5.0	21.5	1637518194	-9.069609	Basic as it is, it is worth reminding folks reading this and similar articles that Python, even with type annotations, does not have a compile pass and that IDEs like PyCharm tend to fail open when th...		zbentley
29300118	11.652326	-7.312807	comment	5.0	25.5	1637531619	9.022493	I would add sructural types, for example anonymous (extensible) records and variants. Nominal types are overused in nearly all programming languages, even futuristic ones like Haskell. The default typ...		grumpyprole
29344129	11.610537	-7.903649	comment	5.0	20.5	1637868032	10.252961	> function overloading, operator overloadingI think Go took the right approach with calling those bugs to be avoided rather than features to be implemented.Don't be clever. Be understandable to most readers.		kf6nux
29404599	11.934819	-7.156132	comment	5.0	14.0	1638372442	2.1307895	I have been solving these since years, I find it a nice way of assessing a language and deep dive since it will cover lot of parts of what makes a language.I have been porting my old solutions in othe...		flaie
29421786	11.605134	-7.8469906	story	5.0	64.0	1638475834	10.068042	Tcl library for Go-style concurrency based on Communicating Sequential Processes	https://github.com/securitykiss-com/csp	blacksqr
29445776	12.012339	-7.7967725	comment	5.0	14.0	1638665548	10.391113	Then what the fuck is a monad?!?Seriously I still don’t know what a monad is and apparently it’s just a bunch ifs and for loops, so I guess I’m pretty stupid.		pyuser583
29451320	11.754379	-7.19947	story	5.0	61.0	1638727928	9.163494	Async I/O for Dummies (2018)	https://www.alwaysrightinstitute.com/async-io-by-example/	mpweiher
29506038	12.235616	-7.633741	comment	5.0	37.0	1639106237	11.935972	I will toot the author's horn for him. He has a fine series of Scala posts on his blog [1] and his book Hands-On Scala Programming [2] is a great introduction to building real applications with Scala ...		philipkglass
29506579	12.24772	-7.6516123	comment	5.0	21.0	1639112464	11.937718	It really should be. When you're trying to solve a business problem, Scala gets on the way.And when I say Scala, I mean libraries like akka http, spray-json and slick. I like FP parts of Scala overall...		mohanmcgeek
29507377	12.2352	-7.6080556	comment	5.0	14.0	1639121496	12.012648	I considered it a near miss when a Scala shop rejected me because I used Maven to compile their coding challenge. Clearly the company was full of over-complicaters and actively recruiting for it.		tlarkworthy
29558465	11.622317	-7.7904673	comment	5.0	51.0	1639518787	10.2596035	I cannot wait for the Result monad.The state of error handling in Go at the moment is embarrassing at best.		linkdd
29557310	11.667022	-7.688533	comment	5.0	74.5	1639514442	10.098055	How is generics not a big enough change to warrant 2.0?Edit: I’m impressed generics aren’t a breaking change! I thought this changed Interface{} to Any as a breaking change		exdsq
29561944	11.66666	-7.893989	comment	5.0	27.0	1639540932	10.248993	Why don't you list the languages that you have used? Otherwise there isn't really any new information.For example for, having done Java, Scala, Python, Groovy, Haskell, Typescript and a couple others, Go reads extremely horrible. It feels as bad as enterprisey Java to me.		valenterry
29566827	11.675776	-7.9650393	comment	5.0	15.0	1639580508	10.262347	> Package managementAre you seriously saying that github.com/somelib is a better package management? Of course nobody forces to use that, but it's what actually been used in most go projects. Even NPM...		deepsun
29582069	11.610134	-7.8626413	comment	5.0	23.0	1639680235	10.1518135	One annoying bit about Go's generics is that you can use type parameters in functions, but not in methods.So for example, maybe you'd want to write a Map function for the Optional type in this article...		jamespwilliams
29582378	11.645848	-7.927901	comment	5.0	13.5	1639681586	10.219615	Not a Go programmer but I can say that Generics were important for me to consider adoption of Go. Now that they are present, it's a legitimate language. Whether they make code messy really depends on how they are being used.		ppeetteerr
29609395	11.95662	-7.7265983	story	5.0	77.0	1639867790	10.321808	The Haskell School of Music (2012) [pdf]	https://www.cs.yale.edu/homes/hudak/Papers/HSoM.pdf	pizza
29610390	11.599925	-7.4119105	comment	5.0	17.5	1639876048	10.241242	"I am not sure why you're being downvoted, you're right. Here's the quote from Rob Pike I find astounding:""The key point here is our programmers are Googlers, they’re not researchers. They’re typically..."		cmrdporcupine
29638707	11.745503	-7.144436	comment	5.0	22.0	1640102855	6.778484	How can parallel untracked mutations of untracked state be better for engineers?		ghostwriter
29641202	12.058894	-7.7474575	comment	5.0	20.5	1640115566	-10.636204	Someone needs to get OCaml running on the Go runtime, so it can be an F# for that ecosystem.		Ericson2314
25502790	11.706524	-7.2228327	comment	5.0	18.0	1608610680	7.144252	"It's pretty simple.   x = 1
   addSomething(y) = y + x

The above is not a combinator. addSomething relies on the line x = 1 and is forever tied to it. You cannot reuse addSoemthing without moving x =..."		Geminidog
25503038	12.029187	-7.5451694	story	5.0	17.0	1608613263	7.3586063	Ask HN: Book recommendations to learn functional programming		skywalker212
25525488	11.886711	-7.645767	comment	5.0	15.5	1608791751	10.331962	Haskell typeclasses. They really are interfaces that don’t leak.Solid state disks. Huge speed boost.		jfoutz
25535323	12.251122	-7.2756433	comment	5.0	26.0	1608887988	12.372911	IMHO the answer is that Rust, C++ and Haskell are out there and anybody can use them to build a web site. Maybe the real question is why there are developers the prefer coding in Ruby. In my case, I b...		pmontra
25560116	11.707489	-7.309103	comment	5.0	14.5	1609170799	-8.9073515	"I'll probably start a language war with this comment, I sure hope not.I'm not exactly sure what you mean with just ""static"", I'm assuming static types. But wouldn't a language with static types and a ..."		capableweb
25560950	11.976601	-7.73979	comment	5.0	33.0	1609175794	10.413959	I rage quit Haskell when I saw all the promises for application correctness fall like a house of cards by realizing I can write to a file after it has been closed when using lazyIO.		noncoml
25564565	11.863662	-7.465998	comment	5.0	23.5	1609197951	7.5054317	> A pure function only looks at the parameters passed in to it, and all it does is return one or more computed values based on the parameters. It has no logical side effects. This is an abstraction of...		bikeshaving
25564828	11.877792	-7.431912	comment	5.0	21.5	1609199623	7.379975	This has really been hitting me lately, as I try to understand a legacy program whose original authors are long gone. But not in a way that implicates OOP.The code is written in a functional language,...		mumblemumble
25574113	11.655906	-7.225342	comment	5.0	29.0	1609272080	9.180855	> all relevant standard library methods have been patched to yield to the scheduler whenever they encounter a situation where they will block the current fiberThis is huge.  They solved the function-c...		rdw
25602801	11.676982	-7.186823	comment	5.0	15.0	1609504174	-9.383915	"Isn't FSM more like writing a program consisting only of GOTO's? I call this the ""loopz-effect"", where any single state may have effect in any other state of the program."		loopz
25610323	12.047616	-7.3968983	comment	5.0	13.0	1609560660	8.978313	Off topic. I highly recommend the book written by the site's authorhttps://pragprog.com/titles/swdddf/domain-modeling-made-func...Although it may look like just Domain Driven Design (DDD) and F# from ...		jumanjisama
25623061	12.455845	-7.863532	comment	5.0	27.5	1609693780	10.486553	Now I'm somewhat biased, but that complete list of advantages also applies to Haskell. [^1]In fact, nearly all of the claims made about Clojure here can be made about haskell more strongly.I've half a...		johnday
25623669	11.992601	-7.3166676	comment	5.0	14.0	1609698012	7.004604	Has anyone seen a big - multi year system done in FP? Lots of people love FP, it seems great for your own side project, but I'm not convinced it works in those typical big corporate systems where devs turn over every few years as the code base grows.		x87678r
25647472	11.632339	-7.967226	comment	5.0	22.5	1609865667	10.266476	I agree.Go feels like it's aimed at creating applications that run at a level above where C traditionally runs while keeping the pared down feature set of C, and it just doesn't work well imo.I loved ...		BoorishBears
25655639	12.007711	-7.795556	story	5.0	88.0	1609920646	10.418015	Exotic List Monads	https://hackage.haskell.org/package/exotic-list-monads-1.0.1/docs/Control-Monad-List-Exotic.html	curryhoward
25675163	11.745628	-7.2820315	comment	5.0	13.0	1610044357	-8.053622	Can someone explain what Simple was so I might understand the significance of their closure?		chungy
25727462	11.894723	-7.626221	comment	5.0	24.0	1610363928	10.3971815	I dislike Haskell. But this article goes out of its way to make the worst possible case for Haskell imaginable.> Many programmers encounter statically typed languages like Java or C++ and find that th...		dmitriid
25727521	11.99635	-7.742291	comment	5.0	18.0	1610364392	10.436187	No, sorry, it has very little to do with technology. There's at least a dozen languages you could have chosen, and that others have chosen for any given use case. within some bounds, it makes very lit...		IfOnlyYouKnew
25750928	11.652196	-7.9467564	comment	5.0	20.5	1610475304	10.219842	As much as I've cursed the lack of generics and the limited expressiveness of Go's type system, it's hard for me to reconcile these proposals with what I know of Go. Go was conceived as a small langua...		hackyhacky
25751462	11.645531	-7.708474	comment	5.0	24.5	1610477170	10.0717535	isn't generic Sets easily implemented with map being already generic?		jjtheblunt
25751581	11.650879	-7.2465854	comment	5.0	18.5	1610477639	9.036419	I thought the idomatic approach was to represent sets with map[key]bool		joshlemer
25761256	12.145757	-7.5267944	comment	5.0	14.0	1610541568	-10.565005	> I’ve never spotted an instance where something has been rewritten in a different language because c# was lacking in some way.Yes, that is what killed F# effectively - on top of not having any killer frameworks. Though to be fair even Scala is dead. Making a language popular is tough.		Knave130121
25798941	11.659705	-7.9283648	comment	5.0	14.5	1610759915	10.224333	Go is amazing, probably my favourite language I've ever learned. The rate of development is insane I find, you can just bang out straight forward easy to read code and everything you'd ever need to wr...		Philip-J-Fry
25799204	11.674428	-7.9548154	comment	5.0	15.0	1610762552	10.214948	Do you have a recommended starting point for learning how to build web apps in Go? As a language, Go seems pretty easy (although the upper case method names really bug me), but I don’t have a ton of time to pick up new stuff on my weekends, and have not yet stumbled onto a great “start here” guide.		burlesona
25806824	11.7185335	-7.8819847	comment	5.0	14.0	1610842755	10.207588	I'm an API developer working with Python and Django. I did dabble with Golang for quite some time, but I just can't seem to justify the effort (in terms of lines of codes and static typing) of writing...		alchermd
25812414	11.651906	-7.960012	comment	5.0	17.5	1610903369	-9.894143	The best Go source code is the stdlib. When you read stdlib code, you can be confident that nothing is there by accident. Every decision was made for a reason. When you're learning, that's invaluable,...		nemo1618
25824820	11.592558	-7.5486465	comment	5.0	19.0	1610994378	10.312944	I think Rob Pike's commentary on Go is why I decided to go into research. Google hires kilotons of developers and pays them gigadollars every year, then makes them work in dumbed-down languages becaus...		xirbeosbwo1234
25841946	11.926692	-7.3683124	comment	5.0	14.5	1611110167	7.048136	Video game programming, where OOP actually maps pretty well to the problem domain, would beg to differ.		falcolas
25855836	11.669505	-7.2895164	comment	5.0	19.0	1611207558	-8.769851	Could you share an example of this? I could be misinterpreting this but say you're building a survey system and you need to keep track of answer types (e.g. text, date, etc) and the answer itself, how can you collapse that into one field?		amingilani
25855946	12.006922	-7.308819	comment	5.0	22.5	1611208451	-10.375807	There's a few things I'll nitpick in this article.> I mean more the type systems in languages like Scala and Haskell, think features like existential and dependent types. Type systems like Java’s and ...		dwohnitmok
25862994	11.656076	-7.1556582	comment	5.0	21.0	1611257204	9.325794	Can you elaborate on this? What is wrong with Python's `lambda`?		0x2c8
25863220	11.657236	-7.087346	comment	5.0	14.5	1611258280	9.195417	"Like others have said:- Can only have one line- Can only use expressions, not statements. E.g. `print`s, loops, conditionals are out.- Overall just kinda clunkyHere's an SO post about lambdas where the answer is ""Use def instead.""
https://stackoverflow.com/questions/14843777/how-to-write-py..."		rustyminnow
25882866	12.044989	-7.1448984	comment	5.0	12.5	1611415653	-13.925885	>Getters and settersMeet Project Lombok. Problem solved and forgotten.		noisem4ker
25882908	12.239564	-7.5404925	comment	5.0	13.5	1611416006	-11.38861	Kotlin is slighty better Java. No more getters, setters, hashcode and toString. Kotlin is also much better Java for asynchronous programming, null-safety, and functional programming. It’s modern Java.		frevib
25887978	12.0317	-7.0385747	comment	5.0	14.5	1611451679	-2.7063375	I predict the following changes:1) Typed languages are worse, and you want people with high levels of competence.2) Java actually IS terrible. You win very little by designing for incompetent coworker...		wegs
25917365	11.769777	-7.209888	comment	5.0	13.5	1611677122	-9.009792	For those who have never used type checking in Python, what's a good introduction?		stereo
25918103	11.702666	-7.3146033	comment	5.0	25.5	1611680088	-8.811492	Contra: (some) people doing exploratory programming in the small e.g. scientists don't want to have to deal with the type checker.Type systems like Haskell add a lot of value, but you have to really k...		rscho
25918213	11.827369	-7.1077585	comment	5.0	17.0	1611680491	-9.008709	I'm glad that strong typing is getting popular and it's not just for weak minds anymore.But (for new projects anyway) what's the point of using Python with types instead of using a real typed language like Java or C#?		booleandilemma
25933714	11.881781	-7.351622	comment	5.0	16.0	1611780451	7.079748	This may be a bit pedantic, but OOP != inheritance. Inheritance is the worst part of OOP. OOP is also modules and namespaces and encapsulation, all of which are great.		jgwil2
25935283	11.908469	-7.3605094	comment	5.0	71.5	1611788028	7.147217	The author’s OO example is hard to understand, but they’re wrong about why. It’s not bad because it’s OO, but that it’s very badly done OO: the class couples two different concerns (network API client...		benkuhn
25936539	11.917386	-7.3877244	comment	5.0	16.0	1611794815	7.1020603	> The same is true of functional and procedural programming, too.There are some specific criticisms that are levied against FP for which proponents respond “that’s not true FP”. For example, the criti...		throwaway894345
25970628	11.990973	-7.400086	comment	5.0	22.0	1612025633	-10.503548	In F#, you would naturally approach this by defining a Customer independent of the Account (e.g. just containing a name and address), and an Account independent of the Customer (e.g. just containing a...		Smaug123
25979154	12.112568	-7.102475	comment	5.0	14.0	1612104201	-10.275736	> I have never had a static type checker (regardless of how sophisticated it is) help me prevent anything more than an obvious error (which should be caught in testing anyway).This is the static vs dy...		jgwil2
25979506	11.706085	-7.3717227	comment	5.0	15.0	1612107095	-8.739896	"  In other words, static typing is pointless. It has, maybe,  
  some documentary value, but it does not substitute
  documentation on other invariants. For example, your 
  invariant might be somethi..."		HerrMonnezza
25987415	12.131661	-7.601751	comment	5.0	19.5	1612175451	-10.609551	Isn't F# pretty much OCaml.NET? So if you want native, you may also go with OCaml (or ReasonML if you prefer curly-delimited code blocks).For frontend dev't I really like Elm lately. (the article makes many refs to Elmish, the Elm-on-F# project).		cies
25987591	12.099891	-7.5383215	comment	5.0	22.0	1612177420	10.3960495	"""...If you are sold with F# there is one important point to highlight. Do not treat F#, just another language with different syntax especially if you are familiar with Python, Ruby, JavaScript, C#, et..."		DanielBMarkham
25986989	12.179931	-7.552811	comment	5.0	27.0	1612170893	-10.641867	If F# ever got something akin to Scala Native, or Kotlin Native, I think it'd do really well. In my limited understanding of the F# ecosystem, I don't believe there are a lot of voices calling towards...		adenozine
26005763	11.62903	-7.531768	comment	5.0	20.0	1612295861	9.8614435	"I disagree with claim that One letter generics are a bad habit. In my opinion, it is proper to use one letter generics but start with A then B, then C... so it enables to reason about generics positionally. 
Pseudo example of this:`map<A,B>(fn:(el:A)=>B):B[]`"		SmellyPotato22
26019356	11.66963	-7.7756667	comment	5.0	21.0	1612387682	10.2041855	I still remember when lack of generics and other common stuff was one of their main selling points in the beginning.		bitL
26031027	12.19934	-7.6328297	comment	5.0	17.5	1612481261	11.907931	The one place where Scala really doesn't shine is ML. There's nothing even close to equivalent to PyTorch or Tensorflow.Actually, languages with rich type systems in general seem to really struggle in this space.		throwawaygh
26031116	12.199123	-7.6202655	comment	5.0	13.0	1612481933	11.909079	"NO, NO, NO.  Scala is NOT a 'great' language.
It is implemented in Java, so suffers ALL of the performance issues of Java (and then some).  I would be THRILLED to see a new, straightforward language (..."		rcgorton
26031571	12.141429	-7.5102477	comment	5.0	14.5	1612485178	-10.60846	I'm going to repost my question from a recent F# item and I hope it'll get some traction this time:I learn a lot by reading others' code. Can anyone recommend a a project or two that is small enough f...		Scramblejams
26078447	11.630317	-7.607058	comment	5.0	29.5	1612884025	10.298988	I'm not sure I understand the relationship between partial function and exception handling. Aren't partial functions just curried? One or more arguments are bound, but not all? At least in Python, if ...		swagonomixxx
26081879	11.6621	-7.0260367	comment	5.0	14.0	1612901426	6.253623	Can anyone confirm this is actual pattern matching and not the frankly ridiculous procedural version that was originally proposed?That proposal, to deliberately hobble pattern matching by making it a statement, was an egregious ideological campaign with genuinely absurd consequences.		mjburgess
26083968	11.596934	-7.075784	comment	5.0	13.0	1612913487	9.5632	In those other languages, if `not_found` is equal to 404 before the match block, how do you write a clause that only matches if `status` is 404?Do you have to use the integer literal 404 instead of the named integer `not_found`?		pansa2
26086589	11.663216	-7.053448	comment	5.0	16.0	1612943547	6.6048675	I just read the part about the name binding and its ... totally bonkers. Sorry, but I have no other words for this:>  The implementation may choose to either make persistent bindings for those partial...		choeger
26087125	11.608967	-7.0724773	comment	5.0	15.5	1612949102	-7.562396	A previous mistake does not make a convincing argument for making a new mistake. Also, the mutable default arguments problem is quite difficult to solve in any other way. Python never copies things fo...		toxik
26089571	12.071487	-7.811318	comment	5.0	13.0	1612967421	10.434451	I'm just curious, feature-wise, what keeps OCaml from being an OCaml for systems level programming?		justin66
26092793	11.62824	-7.950391	comment	5.0	21.0	1612980989	10.235077	I still don't think Go is a good language. I had notable experience at Google and the following things constantly bugged me:- It was very difficult to read. When trying to review the code every detail...		kevincox
26094105	11.610824	-7.85581	comment	5.0	35.5	1612988137	10.209255	Of course I'm joking, but I think implicit nullability is the worst part of Go. A language designed in a era when this was widely known as the billion dollar mistake (prolly even more expensive).But t...		cies
26094353	11.592693	-7.8396573	comment	5.0	17.5	1612989134	10.177521	Golang needed sum types (for options) and match statements (python got it after all...) way before it needed generics. CHANGE MY VIEW.		baby
26112961	11.604711	-7.1121697	comment	5.0	13.5	1613133249	9.435849	There seems to be a lot of work to get not very much. Maybe the point of this article is more about faffing around with quickcheck but the conclusion should basically be:1. Parallel [efficient] MapRed...		dan-robertson
26113090	11.976624	-7.689882	comment	5.0	14.0	1613134361	10.417124	Why is Haskell like this?I don't have that feeling when using other FP languages like Lisp or OCaml.		k__
26124198	11.663785	-7.1036997	comment	5.0	26.5	1613230877	-6.653966	Rust, Python and now Kotlin.Just as PSF promoted Google to visionary sponsor, although I understand Jetbrains, but we see yet again our saviour Google on the board of yet another language, even after Rust formed its foundation.I guess I have no choice to accept this future we've put ourselves in.		yannoninator
26125009	12.237635	-7.511018	comment	5.0	21.0	1613237492	-11.37166	I started using Java in the 90's and worked for Sun back in the day, so I have a reasonable amount of experience with it.Kotlin is a much better Java, and these days if I need to use the JVM, I will u...		lokedhs
26142476	11.725026	-7.207539	comment	5.0	33.5	1613395423	6.9796553	Why an entirely new class? Why not just pass a constructor argument to specify joining behavior? It's not like there's any reason to believe this is the only thing we'll ever want to customize for a thread.		dataflow
26152826	11.837079	-7.1938643	comment	5.0	24.5	1613473361	-9.029235	I'm still amazed at how Python code with type hints looks so different to Python without them. Consider the program near the end of the article - if we remove the type hints:- The `AstNode` abstract b...		pansa2
26157196	11.734117	-7.3367	comment	5.0	12.5	1613500756	-8.828616	Static types don't tell you if you broke something when you changed the code.		D13Fd
26158743	11.667363	-7.877498	comment	5.0	17.5	1613509155	10.176464	How can you do OOP with Go? I know it does some composition over inheritance but there 3 other aspects of OOP that I really like.		systemvoltage
26159440	11.679802	-7.9343705	comment	5.0	13.5	1613513732	10.162491	Is anyone using Go’s support for compiling to WebAssembly? I know it was added experimentally a few versions ago - is it still being worked on? Is it production-ready? There’s no mention of it in these release notes.		pansa2
26188245	11.82117	-7.086447	comment	5.0	15.5	1613697499	-9.0054	"I think one of the nice things about Python is that most people write it in a similar way (with the exception of classes vs not and annotations). ""There should be one-- and preferably only one --obvio..."		rchowe
26191639	12.0060425	-7.779537	comment	5.0	17.0	1613731485	10.444049	"What scares me about Haskell is that it seems even people who used it extensively for a while call themselves ""intermediate"", and still find themselves in Haskell-shaped holes.If something breaks and ..."		rich_sasha
26201237	12.400749	-7.1545863	story	5.0	34.0	1613791823	12.37475	Embracing Functional Programming in Ruby (2017)	https://kellysutton.com/2017/09/13/embracing-functional-programming-in-ruby.html	mooreds
26204037	12.130788	-7.8173738	comment	5.0	25.5	1613828688	1.3029228	Well, that paper escalated quickly!I've dabbled in enough category theory to have some inkling of the meaning of this, but not much. I've kind of given up on expecting an epiphany from this stuff that...		acjohnson55
26217421	12.479206	-7.2343025	comment	5.0	12.5	1613943046	-11.082765	"> Crystal’s build times are reasonable. Compiling my project Azula takes ~16s with the release flag. Compiling our barebones project above takes ~8s.8s to compile a hello world is ""reasonable""? Am I missing something?"		shric
26220933	11.629396	-7.8834805	comment	5.0	15.5	1613968857	10.174734	I really like Go, but I'd love something like JavaScript that had the performance of C^. If and when that happens there really wouldn't be any need for other programming languages IMHO.Oh well - that ...		endisneigh
26223792	11.654967	-7.9569683	comment	5.0	14.5	1613997498	10.206591	"Let's go with ""Go is easy if you use an appropriate IDE""Emacs is great for many things, but Go was clearly designed with GUI IDE tooling in mind. So if you decide to forfeit that huge benefit, of course it'll be a sub-optimal experience."		fxtentacle
26222783	11.621187	-7.342104	comment	5.0	14.5	1613988872	9.189844	I'm trying to wrap my head around what the implication of stackless coroutines is.Can I use them like `yield` in Python+Twisted, i.e. to implement single-threaded, cooperative parallelism? It would no...		captainmuon
26222898	11.636821	-7.967492	comment	5.0	23.0	1613989923	10.227325	As someone who reads a lot more Go than I write, Go is awful to read.Reading Go means that I keep having to read idioms (as posted in the article) and parse them back into the actual intent, rather th...		Nullabillity
26225202	11.652134	-7.9224076	comment	5.0	22.0	1614005775	10.281841	Ruby and Python are notorious for being difficult to read because of all the foot guns in place. Monkey patching, duck typing, metaprogramming... and that's not even talking about structural limitatio...		solosoyokaze
26260685	11.877277	-7.324456	comment	5.0	19.0	1614239484	7.105994	What about Pure OOP? It has one way to represent things, everything is an Object. Details of the data-structures can be hidden behind the method-interface.		galaxyLogic
26270825	11.894241	-7.622297	comment	5.0	16.5	1614306334	-8.606495	(author)I appreciate Haskell's power in this domain, and apparently sum types are life-changing (they get mentioned in so many language conversations).That said, I'm mostly concerned with types like c...		tmcw
26285344	12.136453	-7.23	comment	5.0	18.0	1614439144	8.43573	I first met ECS when modding an RTS called Tiberian Sun.  The units were all defined in ini files and you specified the components for each unit eg the difference between a building and a moving piece...		willvarfar
26291595	11.955191	-7.4237494	story	5.0	2.0	1614499840	7.2114477	When FP? and When OOP?	https://raganwald.com/2013/04/08/functional-vs-OOP.html	tmfi
26301727	12.309058	-7.069507	comment	5.0	16.5	1614598284	13.160029	Took me a while to figure out what this “Perl” was, so if you’re like me, I’m gonna save you some time: “Perl” seems to be the old name of the popular Raku language.		layoutIfNeeded
26335867	12.149712	-7.8871026	comment	5.0	24.5	1614811399	-3.2497175	I love category theory. I found out about it through Haskell and as it turns out it is a branch of mathematics that I feel I’ve been missing my whole life.Since taking an interest I’ve worked through ...		morty_s
26338710	11.657575	-7.1654105	story	5.0	22.0	1614832971	-7.441773	Write complicated anonymous functions other than lambdas in Python	https://github.com/hsfzxjy/lambdex	satya71
26387050	11.759577	-7.301922	story	5.0	15.0	1615219096	-6.039365	The Art of Immutable Architecture	https://www.immutablearchitecture.com	iou
26447094	11.923627	-7.417147	comment	5.0	39.0	1615648587	7.108353	> But, if we made a new statically-typed OO language from scratch in 2021, something in the vein of Java or C#, taking everything we've learned from functional programming and a decade-plus of scathin...		wongarsu
26447819	11.782589	-7.070671	comment	5.0	14.0	1615654537	9.811914	Can we get rid of 'sealed'? I really hate that keyword. Sometimes there's a good reason for it, sure, but sometimes it's used gratuitously, and then I have to work around it for no good reason.Eg, in ...		dale_glass
13613583	12.148612	-7.516117	comment	5.0	13.0	1486706887	-10.605278	I just started learning F# with the help of a well known F# dev. It's been a fun challenge. Give yourself the chance to try it out. Do check out http://fsharpforfunandprofit.com Its a great resource.		pryelluw
13613768	11.654987	-7.9577274	comment	5.0	12.5	1486710728	10.146969	I am currently searching for an example / skeleton in Go where I can upload a file via the browser to the server (drag and drop added bonus). Any examples?		jhoechtl
13644149	12.20054	-7.6589975	comment	5.0	17.5	1487086352	11.943141	> Scala code can be very dense and hard to grok at the early stages of learning.This seems to be the crux of his argument, and I think it's a rather poor one.  I have used both Go & Scala professional...		mi100hael
13651788	12.017735	-7.205097	comment	5.0	12.5	1487164994	9.158314	The 'asynchonous problem' in JS is twofold. It makes it more difficult to reason about the program, and is hell on readability, and readbility matters.  Support, maintenance, etc.  The lack of an abil...		dpweb
13664465	11.878531	-7.324486	comment	5.0	29.5	1487286552	7.0496182	Object-oriented programming is a disease, and I can't wait until we're collectively done with it.All of these abstractions, when rarely they are actually needed to express a program, can be naturally ...		ilugaslifg
13691780	12.482808	-7.116779	comment	5.0	41.5	1487631254	-1.7634734	I love this blog, but I'm not sure that I agree with this:> In my mind, I’d just rather not have a reject! at all, and callers who need to mutate an array in-place can figure out how to do safely with...		drodgers
13708942	12.157816	-7.515931	comment	5.0	14.0	1487795935	-10.613436	I don't know if there's such a thing (maybe I should write one myself, as I plan to learn F# :) ), but a cheat sheet that is a bit higher level would be useful.Things like:* how do I read a text file* how do I write a text file* how do I download a file using HTTP* ...		oblio
13713045	11.6873665	-7.0435114	comment	5.0	15.5	1487848798	9.145487	I had to work with Python a few times in the past year and I really have to agree. The lack of proper lambdas, closures, its reliance on mutable data structures and imperative idioms, and the useless ...		steinuil
13723278	12.262148	-7.6439486	comment	5.0	14.0	1487941739	11.967232	Related: I love this book's teaching style, and found it very much resonated with me - starting from zero, step by step, iteratively learning and building on previous lessons.Can anyone suggest something similar for learning Scala?		dv35z
13724510	11.610985	-7.1342926	comment	5.0	16.0	1487950289	9.011257	"Couldn't you just do something like:    def flatten(x):
        if isIterable(x):
            for y in x:
                yield from flatten(y)
        else:
            yield x

Well, technically this is a generator, but it's easy enough to put its result in a list."		contravariant
13731244	11.82929	-7.343177	comment	5.0	38.5	1488024451	-4.7449107	It's interesting to hear that Guido is now excited by types. A few years ago his opinion was still that types can't catch most problems. I think I will listen to that interview.Personally I think type...		jstimpfle
13741875	12.295971	-7.5068507	comment	5.0	16.5	1488169842	12.837451	Actor-based dynamic language author here. (Doesn't matter which one; I think I speak for all of us.) Thank you for being honest with us; we are not a very performance-oriented group sometimes.We're ge...		BuuQu9hu
13753894	12.273696	-7.029401	comment	5.0	16.0	1488291792	13.184314	"Another great thing here: ""Design sacrifice: killing 5% to get 90%.""I remember a very specific example of this from Perl 6 development circa 2009.  perlgeek (I think) and I had been struggling with co..."		colomon
13764028	12.212288	-7.609528	comment	5.0	16.0	1488379794	11.943505	A few weeks ago I wrote the same application four times in four different JVM languages: Java, Groovy, Scala, and Kotlin, with a particular focus on the application using functional techniques and typ...		WkndTriathlete
13771875	12.246528	-7.6259437	comment	5.0	25.0	1488435035	11.981926	Here here.Im new to scala and I love it.Also sbt > maven!		godmodus
13774802	11.681099	-7.8845806	comment	5.0	13.5	1488469267	10.1657915	Go is as old now as Java was when Spring and Hibernate started to appear on the scene. If it time leads to this kind of pattern, why was Java 'over the hill' by this age, yet Go is still considered young?		randomdata
13773867	12.184242	-7.6760693	comment	5.0	13.0	1488461737	11.913694	> Scala as a better Java any more than I would Python as a better CThe difference between Python and C is huge because C is not interpreted and doesn't do automatic memory management, which is actuall...		bad_user
13783299	12.138116	-7.6028	comment	5.0	13.0	1488553604	11.916964	From just skimming the intro, this seems like very exciting work. And the formulation of the problem in terms of data flow was really novel to me.I was surprised that I couldn't find any references to...		acjohnson55
13783825	12.153725	-7.544104	comment	5.0	20.0	1488557629	10.338067	I'm just starting with Haskell and PureScript.  So far I'm liking the latter better.  It solves a few of their gripes with respect to strings, laziness and records, plus has a more granular/extendable...		daxfohl
13787728	11.970067	-7.137577	comment	5.0	13.5	1488582279	9.100334	"If multithread is a possibility for the future of javascript why not make promises and async multithread and keep the same syntax we are using now...
What is there to gain with workers ? It seems to m..."		albertTJames
13842315	12.15524	-7.883874	comment	5.0	12.5	1489181581	-3.2193294	Every reply to my parent question has been excellent. What beginner resources do you recommend for learning category theory and its applications to programming?		hackernewsacct
13850589	11.935724	-7.3586607	comment	5.0	18.5	1489325714	7.077897	As somebody who works on many different OOP-projects, could somebody tell me how I should structure my software if not using OOP?		neals
13850655	11.773259	-7.1224294	comment	5.0	16.0	1489326943	8.647479	This is the basic stategy that I try to follow as much as possible:Classes that hold data have no methods (beyond getters/setters). Classes that implement behavior have no mutable state; they exist as...		greydius
13867917	12.226838	-7.59922	comment	5.0	29.5	1489503229	11.938221	Never touch a running system ;) Scala on JVM is much more tested than the new shiny thing. Also don't expect improved performance... many people think that the JVM is bloated and makes programs slower...		therealmarv
13867972	12.23495	-7.6441283	comment	5.0	22.0	1489503579	11.930794	"I think for Server-Application Scala on the JVM will probably beat Scala-Native. The benefits of Scala-Native over Scala JVM are:   - faster startup time
   - (drastically) lower memory footprint
   -..."		LeanderK
13871801	11.674472	-7.9470434	comment	5.0	20.5	1489528322	10.227999	Or they tend to just Go. Interestingly, I've read a lot of Go users come from the Ruby and Python communities.		jwdunne
13875739	12.001408	-7.7620935	comment	5.0	17.0	1489582648	10.434769	I like FP and Haskell, but when I read a paper like this and realize the amount of effort it takes to implement a basic backtracking algorithm, then I wonder if Haskell can ever become mainstream in production environments.		misja111
13902157	11.663257	-7.9753227	comment	5.0	12.5	1489855995	10.221243	Can you recommend any resources to start learning Go?		7ewis
13909887	12.00072	-7.7441225	comment	5.0	12.5	1489960579	10.419417	The problem is, people tell me that if I just learn Haskell, Idris, Closure, Coffescript, Rust, C++17, C#, F#, Swift, D, Lua, Scala, Ruby, Python, Lisp, Scheme, Julia, Emacs Lisp, Vimscript, Smalltalk...		CJefferson
13949635	11.665751	-7.595709	comment	5.0	14.0	1490370055	10.108748	Are generics really that big of a thing if you got structural typing?I mean, you don't have to implement all the interfaces explicitly, you just have to get your structure right and be done with it.Am I missing something?		k__
13949918	11.950202	-7.675237	comment	5.0	16.0	1490372070	10.420133	It's clear that if a powerful language was such a competitive advantage, languages like Haskell would rule the world - instead they're hardly used for business projects.Along comes Go and in 8 years p...		eloff
13959271	12.004005	-7.7864785	comment	5.0	27.5	1490504761	10.399217	A monad is any data structure which implements bind. Bind is a higher-order function with two parameters - one is the data structure to be transformed, the other is a function which maps over elements...		scottmsul
13959318	12.013541	-7.7745104	comment	5.0	14.5	1490505625	10.40639	"Hmm. They certainly have a naming and explanation problem in Haskell land. Some impressions from a few of these better explanations.""A monad is composed of three functions and encodes control flow whi..."		nickpsecurity
14011671	11.803066	-7.5731363	comment	5.0	33.5	1491047382	10.399058	"For anyone wondering what Idris is, it's pretty much Haskell with dependent types. That is, it's easy to encode thing like ""vector of length n"" in the type system, so you can go from 
    concat :: Vec -> Vec -> Vec 
to 
    concat : Vec n -> Vec m -> Vec (n+m)."		Y_Y
14011726	11.772968	-7.558663	comment	5.0	22.5	1491048253	10.391224	Yes, but it turns out you can do some cool things with dependent types.I always felt, as a C++ programmer, that Haskell was just restricting me, without providing me any real benefits (of course, othe...		CJefferson
14069414	12.424043	-7.349421	comment	5.0	19.0	1491690487	-8.963137	I wish someone would port Python to BEAM. I'm actually surprised there isn't a project out there, except some really old stale project called beam.py I found on github, which hasn't been worked on since 2010.		thecity2
14071670	12.413186	-7.108662	comment	5.0	21.5	1491735962	12.390734	> That's why I now develop in ruby. I'll take developer productivity over performance any day.In my experience, dynamically typed languages don't do well for developer productivity.		hasenj
14080778	11.621084	-7.964083	comment	5.0	14.5	1491846034	10.198717	Does go have any advantage over other compiled languages, like say, swift?For example: https://vapor.codes		hasenj
14100012	12.083518	-7.832095	comment	5.0	15.0	1492019623	10.186372	> A category consists of abstract functions (or morphisms, or “arrows”) that have an origin and destination (or domain and codomain, or “argument type” and “return type”).I think perhaps Maths people need to seek more consensus on terminology.		scandox
14106864	11.66475	-7.9489436	comment	5.0	14.5	1492091582	10.228985	I'd say tour.golang.org is quite good. But the most important thing I feel for C# devs is to know that there is no Visual Studio like fancy IDE for Go.People may be debate merits/demerits of this situation with valid arguments. However if you are in everything IDE camp Go might just not suit you.		geodel
14107304	11.933764	-7.7289605	comment	5.0	17.0	1492094325	10.419437	"Wait... what? ""To actually compile a Haskell program, we'll also need a patched version of GHC. See Building and Using GHC with HRC for more information."""		nitrix
14107359	11.619262	-7.949258	comment	5.0	13.5	1492094689	10.238478	Have any go developers run into issues where an interface is satisfied where it shouldn't be due to name conflicts?		eximius
14105498	11.634125	-7.923468	story	5.0	32.0	1492077254	10.214984	Why I like Golang's interfaces	https://medium.com/@theburningmonk/why-i-like-gos-interfaces-2891adf2803c	theburningmonk
14121285	11.888018	-7.437427	comment	5.0	14.0	1492272008	7.2176466	This looks interesting... one of my pet peeves is writing imperative code in functional languages like Lisp or OCaml.  For example, hand-written lexers and parsers are heavily stateful and don't reall...		chubot
14123251	12.087003	-7.8161616	comment	5.0	14.5	1492296310	10.446376	>After using it for a couple of weeks I am confused why ML/OCaml aren't more popularFor me, the issue is the GIL, although that is being worked on as we speak.		akhilcacharya
14123253	12.171069	-7.5917406	comment	5.0	17.5	1492296357	10.420627	Crappy windows support for OCaml. F# is similar to OCaml, but is very difficult for beginners and those not familiar with .NET. I also don't see a lot of beginner material for OCaml.		throwaway7645
14123284	12.0299015	-7.746448	comment	5.0	20.5	1492296754	10.425011	The problem with this article is that it's missing an answer to why one would choose ML/OCaml over Haskell. Haskell has many more features, a more advanced type system, arguably superior syntax, and m...		nv-vn
14138050	11.605701	-7.9584794	comment	5.0	15.5	1492516264	10.220514	Why are Go and C top five for DevOps? There's also no explanation as to why they're 'top' of anything.I've never once written a line of Go or C to help me with an ops problem, but I'll tell you what I...		manyxcxi
14203028	11.74459	-7.296748	comment	5.0	12.5	1493215495	-8.742123	I don't understand the need for this.  You're writing a definition to create a strongly typed class, why wouldn't you just write the class itself?		smrtinsert
14203275	12.316552	-7.0275636	comment	5.0	13.5	1493217076	13.173244	As someone who has worked in a few investment banks, Perl is a SIGNIFICANTLY larger problem than COBOL.While verbose, COBOL enforced structure and discipline, and it is very possible for code to be ma...		JackFr
14202639	11.6088705	-7.9193783	comment	5.0	26.5	1493212469	10.188478	"I clicked the article thinking that Go pointers are something special... but this seems targeted at the ""programmers"" who only know javascript..."		nottorp
14216131	11.892067	-7.284272	comment	5.0	15.0	1493341111	9.19136	const users = await getUsers();const tweets = await getTweets(users);console.log(tweets);Is async code really harder to read?		tuxracer
14225911	12.489033	-7.9140096	comment	5.0	15.5	1493462286	-11.125804	Good article. He missed out the main pro though (and literally the only reason I ever use any Lisp): hot swapping. The ability to change code on the fly as the program is running. For this to actually...		hacker_9
14233263	11.948374	-7.426816	story	5.0	33.0	1493579107	7.14955	OOP vs. FP	https://medium.com/@richardeng/oop-vs-fp-1a3da34d2030	horrido
14235489	11.737954	-7.290868	comment	5.0	23.5	1493611446	-8.1763525	The main use of closures today is to create something you can pass to a callback.  In theory, you could pass an object, but the callback would have to cooperate by accepting an object and an object me...		Animats
14239942	11.949074	-7.662867	story	5.0	110.0	1493662184	10.426066	Open Sourcing our new Duckling – Probabilistic Parser Rewritten in Haskell	https://wit.ai/blog/2017/05/01/new-duckling	jimarcey
14258314	12.248538	-7.5493855	story	5.0	41.0	1493834155	-11.373862	Kotlin vs. Java – An Android Developer's First Impressions	https://arctouch.com/2017/05/kotlin-vs-java/	reinecka
14259556	11.991751	-7.7498164	comment	5.0	13.0	1493842217	10.435653	Interesting, is Haskell used in many universities?		dmix
14266514	12.006934	-7.7453995	story	5.0	104.0	1493917179	10.416446	Why Haskell Is Worth Learning	https://spin.atomicobject.com/2013/03/05/why-haskell/	allenleein
14266629	11.828461	-7.2841635	comment	5.0	16.5	1493917814	9.1959095	All of this is super cool but what I really want is async/await. Every day I wish I had it. I know everyone has some pet thing they want, but I can't imagine async/await being nothing short of a game changer for Java. Why is it never mentioned? Will it ever happen?		linkmotif
14267327	12.123803	-7.834852	comment	5.0	17.0	1493922099	-3.3100264	> They're very useful, but try to avoid code that requires your coworkers to know abstract algebra and category theory in order to contribute to a project.Have you ever learned a 'design pattern' in J...		tathougies
14267503	12.000991	-7.748783	comment	5.0	13.0	1493923238	10.42249	> Is there an application sweet spot/domainState of the Haskell ecosystem: https://github.com/Gabriel439/post-rfc/blob/master/sotu.md    The topics are roughly sorted from greatest strengths to greate...		platz
14267993	11.9854145	-7.7476864	comment	5.0	15.5	1493926605	10.423801	I will never, ever use Haskell in production because of its default evaluation strategy, the wrongness of which was tacitly conceded not long ago with the addition of the strictness pragma (which only...		throwaway110034
14267275	11.986734	-7.758248	comment	5.0	14.0	1493921748	10.401212	I think I can safely say it isn't used heavily in many production environments but it is used heavily in some. For example, one of Facebook's abuse systems, dealing with 1M requests per second is writ...		Veratyr
14267775	11.913183	-7.7075996	comment	5.0	32.5	1493925132	10.384942	We have a code base of roughly 200,000 lines of Haskell code, dealing with high performance SQL query parsing, compilation and optimizations.I only remember one situation over the past 5 years that we...		arnon
14315208	11.987813	-7.268232	comment	5.0	14.5	1494501439	-9.012892	I am system developer. So go,python,c# neither are my work language (which is C and some C++).But i dont do everything in those two (that would be insane). I so everything non critical in python. But ...		0xFFC
14327329	11.835646	-7.617026	comment	5.0	14.0	1494618726	-8.533209	"Can anyone help me interpret the type signature Meijer used in his programming question? ""Given a generic type:    Cont r a = (a -> r) -> r

Prove that this type forms a monad.""I'm reading it as 'Cont..."		zengid
14336735	11.637833	-7.932893	comment	5.0	16.5	1494785335	10.1371155	There is so much negativity in these comments! This project is really cool!I really appreciate the trend to rewrite C/C++ libraries in Go. It has always been really frustrating that hacky library wrap...		blaisio
14361583	12.239855	-7.599818	comment	5.0	25.5	1495046914	-11.392208	Well this looks like going to push Kotlin in big league. I remember scala enthusiasts made big noise in last few years to have scala as officially supported language. But Google seems to prefer a closer relationship with Jetbrains.		geodel
14362211	12.257929	-7.5573673	comment	5.0	14.0	1495050750	-11.346724	"What does it mean being ""supported"", given that one already can use Kotlin on Android?"		maaaats
14361505	12.20593	-7.398459	comment	5.0	22.5	1495046477	-11.313066	Funny, I was messing around with Kotlin for the first time last night. So far, the language seems well-structured and I really like that one gets all of Java's ecosystem without actually having to wri...		tomc1985
14363793	12.253154	-7.5642114	comment	5.0	19.5	1495064610	-11.409173	The only problem with Steve's rant is that he starts out describing his experience with APIs, but then it turns into an issue of better languages.Presumably Kotlin doesn't wrap the entire Android API ...		cromwellian
14364974	12.262194	-7.267635	comment	5.0	18.0	1495084477	7.1662517	> Yup. Because they can't.Actually they can.>  incapable of offering automated refactorings without human supervision> (and yes, that includes Smalltalk IDE's)Patently false.  Everyone repeat after me...		mpweiher
14365178	12.246381	-7.5218544	story	5.0	84.0	1495088316	-11.405254	Kotlin support in Spring Framework 5.0	https://spring.io/blog/2017/01/04/introducing-kotlin-support-in-spring-framework-5-0	ssijak
14369282	12.26315	-7.5259886	comment	5.0	14.5	1495129049	-11.443029	"In terms of why we'd want to, there is this note here:
https://kotlinlang.org/docs/reference/comparison-to-java.htm...Other factors to consider are tools support, how often interoprability with java l..."		shubb
14372967	12.256308	-7.5549865	story	5.0	99.0	1495167136	-11.392746	Get Started with Kotlin on Android	https://developer.android.com/kotlin/get-started.html	ing33k
14373900	12.210927	-7.563389	comment	5.0	14.5	1495184300	-11.354465	"I guess that the next one will be: ""Kotlin is like Rust"", or perhaps there should be ""Kotlin is like Go"" first?"		mbel
14375328	12.242867	-7.5709662	comment	5.0	13.0	1495200135	-11.394805	Kotlin examples on the site are not much different from Java ones. They're almost identical in length. Why bother to use it and add one more step for translation to a compiler chain that is already ve...		betimsl
14380701	12.256211	-7.5624375	story	5.0	10.0	1495246553	11.974903	Ask HN: What about the Kotlin hype?		datalist
14389902	12.240769	-7.538498	comment	5.0	12.5	1495410165	-11.37509	I'm sure Kotlin is a good language but as a developer with a big codebase I find it difficult to migrate my Java code to Kotlin or mix both languages in the same project. I think I will be confused al...		victornomad
14392423	11.993645	-7.743041	story	5.0	72.0	1495450059	10.423574	Open-source Haskell books	https://www.ossblog.org/master-haskell-programming-free-books/	vinny12
14403585	11.704456	-7.134325	story	5.0	23.0	1495562721	6.9836664	EC: An Expressive and Intuitive, C Style Object-Oriented Programming Language	http://ec-lang.org/	mabynogy
14411067	12.026386	-7.7438345	story	5.0	199.0	1495642068	10.403908	Grenade: Deep Learning in Haskell	https://github.com/HuwCampbell/grenade	vonnik
14415003	12.009088	-7.1639366	comment	5.0	13.0	1495680849	-9.951935	"Can we ever get away from the misnomer of ""prototype-based OO""?In Self we have two ways of specialization:  1. Prototypes
  2. Parents

Prototypes are objects that are ""cloned"" to create instances, a ..."		bhk
14417664	11.76154	-7.2562323	comment	5.0	17.5	1495723935	1.7564503	It's very sad how most new programmers aren't even versed in any functional languages, or even know what they are. Everyone learns imperative because they're so much easier and intuitive initially. We...		teolandon
14436137	12.030643	-7.7065268	comment	5.0	13.0	1496006512	10.424184	This is awesome! I know lots of people would love the type safety of a Haskell or OCaml combined with the metaprogramming and AST manipulation capabilities of a Lisp - and that seems to be the eventual goal of this project.		kornish
14440344	11.975943	-7.736289	comment	5.0	15.0	1496079995	10.410521	... had this been written in a language less esoteric than Haskell, it would've been even better for the rest of us :)		hestefisk
14451772	11.994569	-7.5097	comment	5.0	21.0	1496231915	7.2765145	Most of the programmers do programming for a living. They are not passionate programmers who like to learn new languages. They care about getting things done. Since Java, C#, Python, JavaScript, Ruby ...		pritambarhate
14475773	11.858771	-7.08313	comment	5.0	13.5	1496486550	5.1375847	I don't know.I have such mixed feelings about this; it's free... but, I don't actually think it's... good? I mean, it's well written, and it has examples that try to tie it into practical examples, an...		shadowmint
14476238	12.111553	-7.6205583	comment	5.0	14.0	1496495622	-11.2215805	"Will Kotlin Native be able to compete with Swift on iOS? The syntax is very similar and it would make for a nice cross platform PL.
I was holding off on Swift to see where it was going, but I'd like t..."		eggy
14480396	12.243994	-7.6510057	story	5.0	89.0	1496564330	11.952465	Scala.JS 0.6.17 released	https://www.scala-js.org/news/2017/06/04/announcing-scalajs-0.6.17/	scalatohaskell
14520722	12.238237	-7.6280966	comment	5.0	14.0	1497009009	11.942591	Does Scala/sbt still take 5 years to compile moderately sized apps?		koolba
14530551	11.948899	-7.6814604	story	5.0	109.0	1497153690	10.386963	Translating a C++ parser to Haskell	http://www.haskellforall.com/2017/06/translating-c-parser-to-haskell.html	yomritoyj
14531969	11.642272	-7.96336	story	5.0	44.0	1497189551	10.217238	Kangaroo Twelve Implementation in Go	https://github.com/mimoo/GoKangarooTwelve	forestjc
14557222	11.708576	-7.8795466	comment	5.0	13.5	1497489089	10.131812	Is there anything being discussed about Go 2.x?I haven't seen anything about it, which I absolutely love (based on fear of a Python 3 situation).		usuallybaffled
14562411	11.790617	-7.137949	comment	5.0	20.5	1497547650	-8.97917	types in python 3.5?! I had no idea -- that's exciting.		eggie5
14563303	11.794571	-7.2569	comment	5.0	15.0	1497552928	-8.933749	Note they are type annotations. They are for tooling/development only; the runtime doesn't care about the types at all.		joobus
14567755	11.897666	-7.668754	comment	5.0	20.0	1497608124	10.356154	The problem with working with strings in Haskell is that there are too many datatypes: Data.Text, Data.Text.Lazy, Data.ByteString Data.ByteString.Char8, Data.ByteString.Lazy, Data.ByteString.Lazy.Char...		rnhmjoj
14585136	11.70471	-7.4944706	comment	5.0	20.5	1497857044	9.805706	"Erased generics are awful compared to proper generics like C#.
If you ever used both of them it should be clear as the sun.
In C# you don't have to pass around the type in a method parameter and use r..."		tigershark
14594497	11.68113	-7.2002835	comment	5.0	18.0	1497966082	8.7221775	"The first couple points (""encapsulation"", specifically no private vars) and interface conflicts are not issues worth complaining about.More importantly, we have 0 evidence that using private/protected..."		jack9
14620376	11.703646	-7.3652444	comment	5.0	14.0	1498235243	-8.729085	"Not native english speaker here.  My comment is probably of very limited value, but mostly for my personal improvement :).When I read ""the wrong kind of entrepreneurs flourish in America"" it surprises..."		dudul
14649928	12.245861	-7.62147	story	5.0	27.0	1498600878	11.920977	Overview of Scala.js from a GWT developer perspective	http://www.g-widgets.com/2017/06/26/overview-of-scala-js-from-an-gwt-developer-perspective/	based2
23399752	12.272973	-7.2952824	comment	5.0	13.5	1591159106	7.0801635	Smalltalk was inspirational, but the environment was a double-edged sword. In ParcPlace Smalltalk even things like stack frames were editable classes. One of the first mistakes I made was trying to ed...		hodgesrm
23422552	11.693694	-7.836272	comment	5.0	18.5	1591308458	10.109596	Yes, yes in the future at some undefined point java will be better.Meanwhile go works very well today. And you don't need to be saddled with the JVM and the very bloated java ecosystem.		fooster
23440541	11.722181	-7.1569285	story	5.0	72.0	1591462613	-8.969426	Using Enumerated Types in Python	https://johnlekberg.com/blog/2020-06-06-enum.html	kaunta
23442657	12.32708	-7.041424	comment	5.0	16.0	1591481133	13.179169	what is this obsession with terse languages that look like a composition of random characters, didn't we learn from Perl		cheez
23454556	12.018331	-7.797756	comment	5.0	27.5	1591603355	10.4589205	As someone who stopped following Haskell world few years ago, this was quite interesting read. I wonder what is the state of ecosystem (libraries) now: a few years ago one of my friends complained tha...		rednum
23454689	11.636916	-7.853854	comment	5.0	49.0	1591604668	10.351992	As a guy who casually (definitely not in-depth) reviewed working with Haskell about 2 years ago I'd say the most relatable part of the article to me is: complexity in tooling and unnecessary tension w...		pdimitar
23456590	11.998617	-7.7617855	comment	5.0	15.5	1591625358	-4.9634895	To answer your questions literally without much nuance:Yes, Haskell is viable for production.  There are caveats, as with any other language.  Haskell has more caveats that most other languages you wo...		tome
23458212	12.022372	-7.8049445	comment	5.0	16.5	1591634893	10.406604	I fully grok monads. I’ve done enough reading and usage of them to understand them.They are not a useful abstraction for programming. They’re mathematically correct, but that’s not the same as what an...		ashtonkem
23468140	11.944147	-7.6314945	comment	5.0	18.5	1591720743	10.264764	Pure FP isn't the only acceptable programming paradigm, please stop pretending that it is.(For context: a language without null pretty much implies an Option type, which is mostly useless (or no bette...		skrebbel
23470424	11.648405	-7.9171476	story	5.0	81.0	1591733918	-10.452178	The VS Code Go extension joins the Go project	https://blog.golang.org/vscode-go	SamWhited
23481187	11.642564	-7.2014875	comment	5.0	16.5	1591818199	-8.943117	I can't understand how people use languages without static analysis. The only edge case I can think is using any scripting language to write a script that is less than 1k lines. Are there any pros for...		mkchoi212
23510115	11.944827	-7.435746	comment	5.0	18.0	1592062248	7.196308	OO was the best programming paradigm until people recognized the power of concurrency. Even in the usecase of GUI programming, where OO is supposed to shine the brightest, OO is a failure because inte...		Konohamaru
23512299	12.284171	-7.3184953	comment	5.0	13.5	1592079124	7.023047	"I'd be much happier if someone could instead just provide a version of Smalltalk that everyone can agree on.""Use Squeak!""""No, Squeak is old! Use Pharo!""""Pharo doesn't adhere to the Smalltalk standard...."		AdmiralAsshat
23544209	11.683022	-7.882647	comment	5.0	20.5	1592342013	10.185062	"Go really should have learned 2 lessons from Java 5:1. People will eventually want generics
2. Retrofitting generics onto an existing language is hard and leads to unusual problems(edit: I'm glad Go is doing this, but...Java learned this in 2004.)"		jasonhansel
23545749	11.753996	-7.3751516	comment	5.0	23.0	1592351066	-8.874391	This is where the type system debate breaks down.What you point out is a developer error. Mixing variable types in a dynamically typed language is, like generics, a code smell.Using a dynamically type...		waheoo
23560720	11.975928	-7.633908	comment	5.0	16.0	1592465869	-9.019164	Lattices, and by extension semilattices, are one of my favourite algebraic structures in the context of programming. Their applications are innumerable, from access control, to distributed systems, to...		QuinnWilton
23564461	12.015799	-7.2390623	comment	5.0	17.5	1592496547	9.183489	I would've changed your code from promise chains to await statements (after warning you, of course) because they just look awful. And I would then have expected you to buy me a beer for getting rid of all that ugly code.		nurettin
23583419	11.961996	-7.4600377	comment	5.0	21.0	1592654003	3.4259756	> I liked procedural languages better than functional ones.(Emphasis, mine). I suspect that he understood functional languages quite well.He just didn't like them.I like some aspects of FP, but there ...		ChrisMarshallNY
23592625	11.758549	-7.3171277	comment	5.0	14.5	1592754362	-8.972831	I've been programming for 40 years and I agree. Strong typing has a religious quality. You have to believe that most errors are caused by type mismatch, and I simply don't believe that. Most errors, i...		dtagames
23610724	12.0085335	-7.737959	comment	5.0	16.5	1592895983	10.45183	Important bit missing from the title: this is using Haskell (and Nix).IHP is supposed to become the Django/Rails/Phoenix of Haskell.I've been using Django professionally for since 2013, but have start...		hendi_
23621676	11.945489	-7.692358	comment	5.0	15.5	1592954464	10.381714	I can't speak for everyone but for me the type system is not what made Haskell difficult.  I loved it.  What made it difficult was laziness.  I'd find myself always trying to reason about execution (e...		nightski
23622161	11.991653	-7.751908	comment	5.0	12.5	1592957449	10.3856945	I tried twice to get started with Haskell. I understand the language well enough, but the standard prelude gave me problems. I forget the details, but the first attempt involved reading ASCII strings ...		jbritton
23622279	12.075911	-7.8189254	comment	5.0	19.5	1592958139	10.3902025	Thanks for that.Everything you said is from the perspective on being not only in a Haskell job but in a Haskell team. Your 3 months is 5 years for someone trying to learn on their own in their spare t...		quickthrower2
23627167	11.7112255	-7.1104198	comment	5.0	15.0	1593002366	9.070083	I wonder if this is intentional. FP constructs are increasingly discouraged in Python, taking reduce [1] as an example. Not that this is necessarily a bad thing, per sé -- I think it does simplify the...		yowlingcat
23628247	11.6872835	-7.2732716	story	5.0	62.0	1593008849	-7.373681	Functional Language Features: Iterators and Closures	https://doc.rust-lang.org/book/ch13-00-functional-features.html	s_c_r
23635830	11.892784	-7.376832	comment	5.0	21.5	1593048074	7.6935263	You can't just compose two functions because they're both written in a functional programming language. The programmer has to have the foresight to make their types compatible. I think the novelty of ...		xvedejas
23637300	12.277647	-7.5616465	comment	5.0	13.5	1593064099	-12.64425	"Exactly my thought.
I've always loved FP, I write JS in a FP style at work, and have always wanted to get into learning something like Elm/PureScript (and eventually Haskell) but I feel like it takes ..."		kalyantm
23696315	11.756893	-7.335468	story	5.0	12.0	1593562262	-8.402147	Ask HN: Where do I go to learn more about the lambda calculus?		mnemonicsloth
23719355	12.434367	-7.340253	comment	5.0	14.0	1593733405	7.0884423	Back in my day, BEAM was also this https://en.m.wikipedia.org/wiki/BEAM_robotics		OnACoffeeBreak
23746837	11.663382	-7.1564302	comment	5.0	18.0	1594035769	-7.395048	If a function is so long it requires multiple statements, is it really so bad to give it a name and a separate line of code from its use? Personally I'd find that clearer, even if the language didn't ...		quietbritishjim
23795735	11.958647	-7.6982713	comment	5.0	17.5	1594411267	1.6991365	I'm starting to understand why HMTI, and OCaml/Haskell et. al., struggle from such obscurity despite its fanboys swearing by it. The problem is that it's a crap technology in both easy mode and hard m...		fizixer
23799833	11.634483	-7.934221	story	5.0	45.0	1594446029	10.191716	The impact on middleware of expanding APIs with Go's interface smuggling	https://utcc.utoronto.ca/~cks/space/blog/programming/GoMiddlewareVsInterfaceSmuggling	zdw
23832220	11.862815	-7.6518145	story	5.0	57.0	1594736212	10.366602	Forbidden Haskell Types	https://semantic.org/post/forbidden-haskell-types/	lelf
23890281	11.869896	-7.352504	comment	5.0	14.0	1595175054	7.0273533	"Dumb but genuine question from a non-expert programmer:Most of the ""OO"" world seems to have abandoned inheritance as an anti-pattern in most cases (apart from genuine ""is a"" relationships).I'm guessin..."		m4r35n357
23915512	11.627401	-7.184372	comment	5.0	17.0	1595412695	9.587639	"> You can't avoid null and undefinedWe are speaking about just null, not ""null and undefined"". Believe it or not, I simply do not use null in JS. Study the concept of ""truthy and falsy"" in JS.> Access..."		orange8
23930341	12.169397	-7.182604	comment	5.0	14.5	1595527853	-11.348463	I mean, that may be true to a point in the long run/true outside of webdev.But the dev who intimately knows Spring & Java/Kotlin is gonna be far ahead of you for the first 9 months, given that  there'...		randompwd
23935291	11.646398	-7.977111	comment	5.0	12.5	1595560065	10.224218	No mention of go-bindata which was one of the originals :(I think this problem is best solved by a library.Leave the damn language alone!		marcrosoft
23937213	11.619042	-7.9470663	comment	5.0	20.5	1595580515	10.258583	Again, more magic comments.The proposed feature is great, but the unwillingness of the Go team to use a separate, clearly defined project file or at the very least a separate syntax in your code file ...		breakingcups
23990944	12.478303	-7.068012	comment	5.0	26.0	1596052902	12.371226	"I'm really puzzled by the decision to use a separate file for this. The stated justification (""it doesn't require changing Ruby code"") doesn't make sense, and my personal experience with languages wit..."		setpatchaddress
23991156	12.344207	-7.1609697	comment	5.0	15.5	1596054167	12.378652	I haven't used Ruby in ages but this seems like a really odd way to incorporate type hints in the language.I much prefer the Python 3+ approach of type annotations in source code.I can't imagine havin...		swagonomixxx
23999918	12.004708	-7.769103	comment	5.0	25.0	1596125950	-10.7503395	"I realize the article is very vaguely written, but I don't think the argument is ""Haskell has been used for cryptocurrency and that taints it forever.""I read it as ""A significant portion of jobs and f..."		burkaman
24009065	11.872146	-7.3834414	comment	5.0	16.5	1596206759	7.013251	> The solution to the fragile base class problem and other inheritance hangovers is surprisingly simple — don’t use itIf OOP provides the footgun to shoot yourself, OOP is at fault.  Overall the artic...		clktmr
24020570	12.333159	-7.03022	comment	5.0	30.0	1596291327	13.1844845	Something’s gotta change though. The path perl5 is on ends in dead language. It’s not attracting young talent, the last really high profile project that sticks out in my mind is Perl Dancer which was ...		chomp
24035870	11.683008	-7.718612	comment	5.0	13.0	1596448818	10.163217	/rantFor those that dont agree (downvoters), feel free to self host mozilla sync server and for added fun, try to do it on freebsd - then you will understand my point. For developers on mastadon - I h...		stiray
24041819	11.818612	-7.2104044	comment	5.0	13.0	1596480875	6.91439	I wish the article included some real-world practical example of when that would be useful because as it stands I'm very confused. Why not just make your Extension an other class that would be inherited? Or more simply, why not make it a member method to begin with?		simias
24045819	12.020225	-7.8041506	story	5.0	39.0	1596507132	10.431061	Monads and Intensionality – Lucid is not an aberration	https://billwadge.wordpress.com/2020/08/04/monads-and-intensionality-lucid-is-not-an-abberation/	rutenspitz
24116392	11.63752	-7.97514	comment	5.0	13.5	1597110433	10.226376	"One thing made me gasp then laugh. Kelsey said “for the next step, you just have to put this in your Go imports, you don’t have to use it or anything:    _ ""google.golang.org/xds""

I was all “WTF how ..."		tptacek
24127189	11.649799	-7.9656115	comment	5.0	14.0	1597188996	10.218791	> There are no changes to the language.Are there other mainstream languages that are as conservative as Go when it comes to adding new features?I don't love Go as a language, but coming from C++ and P...		pansa2
24229361	12.045913	-7.727589	comment	5.0	13.5	1597959726	10.427806	"- SML is old- OCaML has OO cruft and OCaML folks themselves keep telling you ""Oh, you don't have to use the OO parts of OCaML""Well then effin give me an ML that's more modern than SML, and has no OO c..."		fizixer
24232809	11.88449	-7.692285	story	5.0	67.0	1597994468	10.313634	Understanding Memory Fragmentation in Haskell	https://www.well-typed.com/blog/2020/08/memory-fragmentation/	tirumaraiselvan
24279128	12.2586355	-7.5681233	story	5.0	100.0	1598416167	-11.36568	Shrinking a Kotlin Binary by 99.2%	https://jakewharton.com/shrinking-a-kotlin-binary/	farmerbb
24281826	12.097231	-7.871758	comment	5.0	12.5	1598445448	0.6545963	Jane Street being the only company that anyone ever mentions when discussing OCaml is even worse in my opinion. It means the ecosystem is going to be heavily driven by their needs, not to mention that banks tend to have idiosyncratic development cultures.		Tarq0n
24282375	12.114328	-7.667456	comment	5.0	18.5	1598449526	-10.640781	I'm beginning to think of learning either OCaml or F# for data sciency-kind of things. Any points of comparison between those?Library ecosystem seems better on F#, but I must admit I'm somewhat wary of the behemoth that is .NET .What else should I consider?		rich_sasha
24282474	12.080314	-7.819742	comment	5.0	16.5	1598450108	10.400147	> I can't understand why OCaml doesn't have mass adoption.Probably for the exact same reason each year you think about learning OCaml you decide not to (I mean this sincerely, not trying to be snide)....		steev
24298516	11.613392	-7.9463673	comment	5.0	25.0	1598561520	10.180162	TS and Golang aren't comparable. I use both and I've never had a case where I needed to decide between the two. Golang is a high performance, modern language without the low-level or legacy headaches ...		solidasparagus
24304438	12.08281	-7.845646	comment	5.0	12.5	1598620587	10.427836	Anyone have experience using OCaml on Windows? I do some development for a cross-platform project where researchers wrote one of the components in OCaml. Installing this particular component on Window...		ahelwer
24319251	11.998279	-7.7773232	comment	5.0	13.0	1598733455	10.390881	So do you need monads in Haskell because that's the only way you could do some of the things that are trivial in an imperative language (albeit verbose and arguably inelegant)?		fizixer
24324224	11.645545	-7.8531785	comment	5.0	18.5	1598807801	10.046585	Go's context package is great, but also hard to reason about. As developers, we often times like to think that just piping a context through a function chain will take care of all of your timeouts con...		cfors
24332374	12.232525	-7.6357913	comment	5.0	14.0	1598887392	11.943245	Because we're trying to turn people on to functional programming, not offEDIT: Downvotes already? Look, Scala is NOT noob-friendly, and it's a rational argument, not a preference. Here's an example: T...		pmarreck
24333026	12.006141	-7.615378	comment	5.0	24.5	1598891302	10.469754	> An api that was written to simply process a list of Orders into a Report might be abstracted into a fold on some monad, which at first seems a great idea. But if you're not careful, readability suff...		cannabis_sam
24343868	11.979945	-7.482419	comment	5.0	20.0	1598979461	7.2790403	This is something I spend a lot of time thinking about myself - it seems like functional program ought to be > object-oriented program which ought to be > procedural programming.  However, I've almost...		commandlinefan
24344265	11.9944315	-7.758989	comment	5.0	22.0	1598981230	10.421296	I'd be more convinced if the author linked a bunch of software they'd written before writing yet another haskell tutorial.10x? We're way above 10x in the ratio of haskell/functional/monad tutorials to...		harry8
24344337	12.008169	-7.70682	comment	5.0	15.5	1598981568	10.352763	"I love Haskell and appreciate its abstraction power. But recently I started to think that one of the reasons that prevent it from becoming more popular is that the community focuses too much on ""mathe..."		jinwoo68
24357604	11.890788	-7.3355823	comment	5.0	21.0	1599077759	7.138943	Having a collection of methods associated to an object isn't really OOP though. You can have one without the other.There's also not a huge benefit to having data.sort() vs Array.sort(data).OOP is a lo...		shados
24358365	11.8853445	-7.3480797	comment	5.0	18.5	1599082114	7.0778165	"I would really appreciate some examples of oop being ""wrong"" and the problem solved in a better way. I just don't see why its bad, it makes sense to me. Our lib has classes and submodules with functio..."		teekert
24358416	11.942283	-7.373421	comment	5.0	21.5	1599082403	7.024893	Hearing people say that they dislike OOP is like hearing people say they dislike power drills. It's one tool of many, and it has its time and place. I think what most people truly dislike are situatio...		caseymarquis
24358497	11.95515	-7.3641896	comment	5.0	13.0	1599082907	7.0537634	But a power drill is a single tool, OOP is more like a collection of techniques.  I prefer Pike's analogy that OOP is like woodworking.  Sure, it is a self-consistent body of knowledge, and there are ...		enriquto
24357313	11.766266	-7.3492675	comment	5.0	17.5	1599076621	7.0964184	"I'm pretty sure a lot of the popularity of oop actually came from modularity which came with it (although I do find  inheritance useful, just not multiple inheritance).I think C would be 10x more useful language if it ditched include files and had ""import"" like python"		m463
24358895	11.948113	-7.364854	comment	5.0	29.0	1599085391	7.1131854	> What happens once something reaches the top is that you start to have people with lots of experience in it that are becoming more and more aware of some of the small warts. And they start to heavily...		dnautics
24373791	11.734787	-7.300446	comment	5.0	15.5	1599216835	-8.889499	"Great that you like typed languages, and ones that allow for such constrained/dependent typing as well.It seems disingenuous to me to suggest that anyone using
other languages do not have this problem..."		rocqua
19978616	11.990635	-7.721182	comment	5.0	25.5	1558509115	10.404223	Haskell is an excellent example of a community-driven language. It's more mature and advanced than most commercial offerings too, offering a superior type system, fast and efficient executables, light...		willtim
19979412	11.675224	-7.9277735	comment	5.0	16.5	1558517519	10.21228	It's not about being careful (they are--but always with the baggage of backwards compatibility), it's about not having a soul.Java has made a U-turn in adding streams and related functional features o...		dullgiulio
19980604	12.15599	-7.498657	story	5.0	69.0	1558529601	-10.601917	The F# development home on GitHub is now dotnet/fsharp	https://devblogs.microsoft.com/dotnet/the-f-development-home-on-github-is-now-dotnet-fsharp/	omiossec
19981777	11.630907	-7.942636	comment	5.0	18.5	1558536591	10.234352	Security consultant here. I have audited many codebases in many languages. Go is by far the easiest language to audit: it always looks the same, it's not too verbose, there are no generics or OOP. Coi...		baby
19984896	11.990416	-7.750916	comment	5.0	14.5	1558555344	10.39754	"In case someone misses the point of the article -- I know I did, originally! -- the author explicitly lays it out in a comment:> ""Sadly–and here is the real intent behind my post–many Haskell programm..."		the_af
20022933	11.664833	-7.9525037	comment	5.0	15.0	1558971968	10.222935	>The blog post starts by quoting @kapoorsunny asking why there can't be something like OpenGo, with a community implementation of generics.  I hope that it is clear that the answer is that there could...		coldtea
20058891	11.645551	-7.9791236	story	5.0	18.0	1559288019	10.237676	The official Go brand book [pdf]	https://storage.googleapis.com/golang-assets/Go-brand-book-v1.9.5.pdf	thecodeboy
20075665	11.673498	-7.1456714	comment	5.0	15.0	1559485810	8.998986	I'm not opposed to using `reduce` where it solves a problem in a readable or performant way, but it seems there's a trend among JS developers recently (I noticed this in the react ecosystem) to use `m...		spoiler
20077477	11.6854515	-7.029457	comment	5.0	14.5	1559503772	-7.0540423	There are tons of wrongs with mutating arguments. The fact that it is possible to mutate arguments in JavaScript does not make it a good idea. Such functions cannot be trusted (how can you know what h...		bendiksolheim
20142433	11.813962	-7.5772552	comment	5.0	14.0	1560120930	10.186137	Regarding the Haskell code, what about infinite lists?1. Why didn't QuickCheck test the infinite case?2. How do we write tests that fail (instead of hang) if an infinite list is mishandled?It seems li...		millstone
20185513	12.142664	-7.4938736	comment	5.0	13.0	1560537716	-10.612805	I'm always surprised that F# didn't take off. It's a great language and in addition to the strenghts of ML you have the .net ecosystem and Microsoft behind it.		Barrin92
20184295	12.365298	-7.088994	comment	5.0	15.5	1560529877	-9.357542	"Oh fun another style discussion! :-)My own taste is for a ""book style"": write the code like you see in good books. I agree with most of this guide, although I'm pretty loose and case-by-case in practi..."		pjungwir
20185546	12.095087	-7.825963	comment	5.0	13.0	1560537885	10.440433	anyone know a good ide for ocaml? something with tab complete and jump to definition?		mlevental
20193174	11.766492	-7.260319	comment	5.0	23.0	1560646727	-8.930705	I agree it's definitely an interesting result and a point in favour of dynamic languages.A caveat is that I'm pretty sure my friend intentionally sacrificed code quality to do it, I don't think you'd ...		trishume
20194346	11.903787	-7.6818166	comment	5.0	31.5	1560670775	-11.023412	Haskell without lens, text, vector, etc... is a bit like rust with only core not std.The haskell standard library is tiny. Libraries like lens are not optional. In practice you won't understand any op...		Avi-D-coder
20206515	11.836734	-7.3904366	comment	5.0	26.0	1560800022	7.180701	"The claim that ""an object is a set of functions that operate on implied data elements"" has a strange corollary because of how in modern OO languages like Java or C#, there is no syntax or popular nami..."		hudon
20223526	12.098543	-7.860355	comment	5.0	17.5	1560953630	10.431425	Surprised it's not OCaml; they've invested highly in OCaml.		azangru
20238007	11.81943	-7.1614957	comment	5.0	20.5	1561069424	-8.916561	I've never quite understood the notion that languages like Python and Ruby are amenable to fast prototyping. Ultimately, you wind up just having to carry complicated type information in your head rath...		zapzupnz
20256154	12.128899	-7.449635	comment	5.0	13.5	1561303432	-10.5694275	"There has always been a dark horse OS within .NET its called F#. But what is sad about the state of the average C# dev is that when I ask them about their opinions on F#, they always respond with a ""w..."		whb07
20256057	11.955173	-7.7109056	comment	5.0	30.5	1561302631	10.375634	the post focusses on the practicality of haskell and addresses purity but leaves the biggest problem out: laziness, which is more or less the reason haskell exists, is the wrong default. In particular...		Barrin92
20259983	11.991804	-7.746374	comment	5.0	22.5	1561342038	10.419098	From my experience Haskellers spend more time talking about how perfect and pure Haskell is than building real-world applications.		pteredactyl
20267797	11.655069	-7.192318	comment	5.0	12.5	1561406355	-8.78768	> Not a single public static methodmain?		saagarjha
20287947	11.629136	-7.8163724	comment	5.0	36.0	1561574837	10.24014	I dislike the try implementation, one of Go's strengths for me after working with Scala is the way it promotes error handling to a first class citizen in writing code, this feels like its heading towards pushing it back to an afterthought as tends to be the case with monadic operations		weego
20322838	11.945692	-7.4587483	comment	5.0	15.5	1561961503	7.1739216	People just don't have enough experience with Functional Programming to really know how awful it is. So now it is the new kid on the block (in terms of going mainstream) so people think it is the best...		mika9090
20323527	11.891131	-7.3407426	comment	5.0	19.0	1561970522	7.0796103	I was a big fan of OOP in theory when I learned it in the 90s and I still use it quite often, but in practice, any sizable OOP codebase that I've had to work with is _way_, _way_, more difficult than ...		Falkon1313
20359670	12.02227	-7.241765	comment	5.0	15.0	1562298172	9.145464	"async/await helps a lot, but there are still a few common errors with them...1) Not calling promises in parallel. Easy to do because it's impossible to run them in parallel with just ""await"", need to ..."		paulhodge
20372296	11.671495	-7.0324492	comment	5.0	17.5	1562450633	8.288065	People typically don't use Java for performance-sensitive real-time-ish applications. Most modern games are written in C++ still. Operating system kernels are written in C. When I think Java, what comes to my mind is something like LibreOffice.		tachyonbeam
20370448	11.856709	-7.629442	story	5.0	113.0	1562430950	12.812166	Pony 0.29	https://www.ponylang.io/blog/2019/07/0.29.0-released/	spooneybarger
20371431	11.923342	-7.7513986	story	5.0	17.0	1562441782	10.429572	Why is that some people say 'if a Haskell program compiles, it probably works'?	https://www.quora.com/Why-is-that-some-people-say-that-if-a-Haskell-program-compiles-it-probably-works?share=1	hyperpallium
20387101	11.750988	-7.1315775	comment	5.0	18.0	1562622529	6.906394	> whereas complex functions fit on your screen typicallyAre the complex functions unit-testable? Do they depend on other units of work or other libraries? Does it have multiple responsibilities? You a...		TravHatesMe
20435197	11.666224	-7.9430485	comment	5.0	16.5	1563130738	10.188871	I did not get that impression at all. In my experience Go gets most of new usage from Python converts.		mynegation
20457505	11.942169	-7.4751167	comment	5.0	24.0	1563351237	10.363864	Static typing. I'm doing a image-related and ml-related research at the moment, and I'm a seasoned OCaml user. So I've tried python for a bit, it was such a pain so I've decided to stick with owl.With...		ernst_klim
20504131	11.996541	-7.7225523	comment	5.0	16.0	1563851568	-10.449786	It is a great shame that I can only give you one upvote, you have it exactly correct. Removing parents ruins Lisp languages.That said, I consider Haskell to be a Lisp language. But, Haskell was designed from the ground up, from ML, to be as it is.		mark_l_watson
20513185	11.805799	-7.2915325	comment	5.0	12.5	1563956088	5.2008934	Actually I see all the non-imperative ways as lost time in software development. At some point we will realize that people think imperatively.		GoToRO
20554276	11.677583	-7.9219174	comment	5.0	12.5	1564406267	10.287715	I think the complexity / length is a good indication as to why there's resistance to adding generics to Go; frequently, Java generics are cited since (and this is from the top of my head) it almost do...		Cthulhu_
20557523	11.95783	-7.0667586	comment	5.0	26.0	1564423792	8.213544	"Second this; Postgres codebase is what got me out of the ""good code is self documenting"" nonsense. For those of us in the database space it is an incredible resource - and overall a great example of g..."		jakewins
20563827	11.791231	-7.2544875	comment	5.0	14.5	1564486058	-7.239172	Why did they create a flatMap method? What is wrong with .map(...).flat()? Can they improve the performance by combining it that much?		NKCSS
20577921	11.65447	-7.9474273	comment	5.0	19.5	1564603650	10.231934	"I hope this doesn't happen. I love golang because it is simple and easy to read. Both will go away when generic programmer start to write unreadable meta-programming class which ""you don't need to und..."		fabiensanglard
20578844	11.617068	-7.478233	comment	5.0	21.0	1564609059	-8.547051	"Inheritance makes generics difficult.For instance, if A < B (B extends A),
What is the relationship betwern Array[A] and Array[B]?If you are just reading the array, you would want Array[A] < Array[B]...."		gizmo686
20592392	11.806452	-7.1199083	comment	5.0	13.5	1564748029	-8.975783	I will never undestand this argument. Bothering with types? How? In most cases you will need int, double or string - how this is difficult? It is more difficult to figure out types you heve to deal wi...		superfist
20614907	11.86593	-7.461753	comment	5.0	18.0	1565018782	-8.518059	Off the topic but,Why keep reinventing the wheel when there's an ML language family already? Why do people keep giving up these juicy Hindley—Milner-ish type systems and these brief and concise equations for anything? It just doesn't make sense for me.		higherkinded
20675462	11.74454	-7.389589	comment	5.0	15.0	1565618451	9.211726	Thanks, that's interesting point. I see how it might be useful, but it's still looks as a minor optimization that doesn't outweigh the drawbacks of the model.How do you deal with a situations when you...		divan
20676931	12.018019	-7.7931113	comment	5.0	16.5	1565627162	-2.5556793	How do you deal with state in a language that would prefer to be stateless?Encapsulation? No one gets direct access to the state. Instead, there are methods or functions for dealing with the state ind...		stcredzero
20699465	11.767921	-7.303188	comment	5.0	19.5	1565813537	5.5921535	"> this contributes to the notion that LISP/Schema/Lambda Calculus were ""discovered"", not that Lambda calculus has an explicit pedigree.That notion is wrong (at least with a very high likelihood), and ..."		pron
20707004	11.763572	-7.299051	comment	5.0	17.0	1565887905	9.130159	Genuine question:  given a language which has a real notion of parallelism/concurrency and can run real threads on multiple cores, what is the appeal for async/await?		jjtheblunt
20713116	11.897422	-7.429255	comment	5.0	17.5	1565943199	7.2448807	Functional programming was a fad and it's going out of fashion (again).It gives you rerefential transparency at the expense of  real modularity.Real modularity can only be achieved through proper sepa...		cryptica
20742728	12.245004	-7.6355243	story	5.0	105.0	1566258455	-5.23797	Scala Native	http://www.scala-native.org/	big_chungus
20781193	12.021596	-7.5298104	comment	5.0	13.5	1566586466	7.3133454	As a person heavily invested in OOP, is there any good reference (book preferably) about Functional Programming?I know there must be lots of resources, but finding a good one can be difficult when you are new to a field.		edgarvaldes
20780240	11.82802	-7.2876244	story	5.0	61.0	1566582067	7.3368897	Functional Programming in Bash	https://github.com/ssledz/bash-fun	joker3
20782806	11.933626	-7.376958	comment	5.0	26.5	1566595801	7.044916	"I feel that it is in fact possible to learn from history, and what humans tend to be good at and bad at, and derive useful directions for the future. ""Use the right tool for the job"" and ""no silver bu..."		tolmasky
20782940	11.935402	-7.344154	comment	5.0	17.0	1566596549	7.0532775	What courses or universities actually start with OOP? In my uni we started with functional programming (Scheme) and then went to C, only then we learned Java, C++, Prolog and so on.In another uni when...		yoz-y
20824200	11.829089	-7.3477607	comment	5.0	26.5	1567027962	-8.923993	Do you believe static typing is harmful (to the type of company you want to join), or is this a personal preference (which is totally valid)? Honestly curious.		sqs
20824258	11.800329	-7.35662	comment	5.0	15.0	1567028313	-8.909919	I am starting to wonder if the preference static vs dynamic is some kind of character trait like introvert vs extrovert. I personally prefer static typing and use it to my advantage during development...		Ididntdothis
20824869	12.16373	-7.519868	comment	5.0	18.0	1567032669	-10.658924	> what's left of F#Has it been abandoned?  What did you mean by this?		bcheung
20829558	12.323614	-7.043897	comment	5.0	13.0	1567087433	13.189704	> Perl 6 is probably a great language,Does it also have the unparseability problem[0] of Perl 5? That's a deal breaker for a lot of tooling.[0] https://perlmonks.org/?node_id=663393		_pmf_
20829882	12.317847	-7.0797386	comment	5.0	18.0	1567089629	13.164399	"I doubt it.""Raku is an interesting new language with some neat features..."" will be met with ""Oh, you mean Perl 6? lol.""If Perl is dead, renaming the last version isn't going to change anything."		0xffff2
20846238	12.070735	-7.0179143	comment	5.0	13.5	1567259334	8.196411	"> While the primary platform is the JVM, superbly uncool but stable and relatively performantMy impression was that java has the reputation of being ""uncool"" but JVM is highly regarded as modern marvel.I am wrong about this ?"		dominotw
20852564	12.475589	-7.3551507	comment	5.0	18.5	1567349433	-10.168606	Hi I'm Brian, one of the member of the Lumen team. I'll try to address some of the questions I've seen in this thread:1. Why?We've seen every growing complexity in building, maintaining, extending, an...		bcardarella
20863388	11.749186	-7.3082113	comment	5.0	17.5	1567479283	-8.341767	I’ve taken some graduate courses in programming languages where I’ve learned about the lambda calculus and about type theory, and I really appreciate this post since this provides a nice timeline of h...		linguae
20869577	11.675024	-7.715677	comment	5.0	23.0	1567535296	10.161172	"Honestly, and I don't think I'm snarking (but would have to reflect a bit on it), ""0b"", ""_"", and signed shifts are probably going to make Go more pleasant for me than generics would have. This is my favorite release in years."		tptacek
20870273	11.599869	-7.885907	comment	5.0	20.5	1567539274	10.164735	> a better C, aimed at server-side data plumbingI agree with all what you said but this. Go isn't a better C, it's a better Java.		littlestymaar
20877126	11.64502	-7.9761395	comment	5.0	24.0	1567604761	10.231003	The Go module hash checking seems to be more about avoiding the problems encountered by other language repos integrity and versioning issues (cough NPM), and in terms of tracking it seems about as inv...		zdw
20876592	12.320793	-7.0565166	comment	5.0	16.5	1567600897	-10.490933	"It's simply incorrect..> Although I didn’t write any types by hand, the arguments of this function are typed. Why don’t we have to write types in ReasonML?  let sum = (a,b) => a + b;

Is perfectly fin..."		jbverschoor
20947700	11.651451	-7.872778	comment	5.0	17.0	1568259495	10.1811	What made you come to the conclusion that golang was faster than C#? The hype and claims we see in blogs that are not backed up by anything?Both C# and Java are faster than golang.		apta
20948177	11.6271	-7.8580627	comment	5.0	24.0	1568264570	10.1054945	There is discussion about C# and Java being faster than Go, but one interesting thing to note is that both C# and Java have to use C to interface with the kernel.Java: https://github.com/ixy-languages...		kyrra
20951361	11.94554	-7.647502	comment	5.0	17.0	1568295940	10.390315	Usually people who talk like this haven’t dealt with functional programming in the real world. I fell in love with the beauty of functional programming in grad school.After using Haskell in a real bus...		mlthoughts2018
20952682	11.772481	-7.0644045	comment	5.0	14.5	1568302566	-9.047382	These are minor annoyances to me. The major annoyance I have with Python is that most Python code makes such heavy use of classes, even when it only needs lists, tuples, and dicts.Why do I really need...		kyllo
21002620	12.003491	-7.807848	comment	5.0	23.5	1568784984	-6.466542	"> And therefore, it's perfectly acceptable to say ""I know how monads work with Maybe and List, but not Reader"" Because fundamentally, how a Reader implements bind is in no way related to how Maybe or ..."		mavelikara
14673814	11.875364	-7.349781	comment	5.0	22.0	1498859810	7.0703816	The issues with inheritance based OOP are that it fits very few problems well, that it usually causes lots of problems and that many programming languages only have inheritance based OOP in their tool...		legulere
14674165	11.819248	-7.330002	comment	5.0	27.5	1498864931	-8.938254	> seem to prove otherwiseProve how? They could have succeeded in spite of dynamic typing, not because of it. Facebook defined a new programming language to add static typing to HHVM. The process of pl...		minitech
14674356	11.772962	-7.0992713	comment	5.0	18.0	1498867112	-8.921021	> their mistake of using python on the server sideI could not disagree with this sentiment more. As always, reality is more nuanced than this.There seems to be a common theme of startups succeeding wi...		ATsch
30727249	11.773903	-7.0470505	comment	5.0	17.0	1647636125	5.248796	Massive PDF of A Pattern Language: https://arl.human.cornell.edu/linked%20docs/Alexander_A_Patt...But I recommend owning and reading it in print. Great book to dip in and out of at whim.		exolymph
30786865	11.97584	-7.693598	comment	5.0	14.5	1648103436	10.359262	Well, that's the first time side effects in Haskell made sense to me. Well done.Not that I've ever seriously tried to learn Haskell, but in the past every time I've lazily come across an article about...		marcan_42
30817738	12.243794	-7.5517373	comment	5.0	17.5	1648355611	-11.330014	pron wrote an insightful comment on Kotlin’s future sometime ago, https://news.ycombinator.com/item?id=24197817. He has actively commented on Kotlin this past decade in good faith. The key quote:> Kot...		hitekker
30816748	11.965451	-7.689005	comment	5.0	34.0	1648342611	-5.192673	To the folks in this thread who think they know better than researchers at the forefront of foundational mathematics: I encourage you to learn type theory, and especially homotopy type theory. In doin...		stepchowfun
30857760	11.644762	-7.63579	comment	5.0	17.0	1648659165	10.057386	I might have worded it differently, but yeah, of cause generics can make your code slower, what did people expect.		mrweasel
30857941	11.620985	-7.889563	comment	5.0	15.5	1648659988	10.194005	"I'm excited about generics that gives you a tradeoff between monomorphization and ""everything is a pointer"". The ""everything is a pointer"" approach, like Haskell, is incredibly inefficient wrt executi..."		klodolph
30871586	12.281094	-7.311075	story	5.0	25.0	1648756643	7.087953	Squeak: A modern, open-source Smalltalk environment	https://squeak.org/	MaxLeiter
30879220	11.932052	-7.451773	comment	5.0	21.5	1648827152	7.230765	"So, as the trend of forcing functional programming into imperative languages continues on its inexorable path, I just can't help but bring the old joke to mind more and more often:    ""Doctor, it hurt..."		jerf
30895097	11.666472	-7.4017086	story	5.0	36.0	1648970384	-6.4889216	Why and how we use primitive maps	https://tech.trivago.com/post/2022-03-09-why-and-how-we-use-primitive-maps/	skilled
30936204	11.741272	-7.322114	comment	5.0	14.0	1649271919	5.6955233	> We did not type-check our codebaseFor me that's the most surprising. Personally type-checking has such an immediate ROI on productivity. Even if adopting it incrementally. It's certainly not require...		bgirard
30955037	11.796928	-7.2739406	comment	5.0	24.5	1649410390	9.144568	I feel like async/await is a huge antipattern in a language like JS.  They should have gone for lightweight threads instead.		throwaway81523
30968917	11.987657	-7.7472115	comment	5.0	16.0	1649518435	10.4243555	People should code in Haskell more, and we would have massive amounts of reusable code. All the problems stem from premature optimization, and rush to market.		amelius
31008614	11.757583	-7.551957	comment	5.0	16.5	1649799979	10.047832	I'm curious how parametric polymorphism got the name generics?		beastman82
31008829	11.729235	-7.5275455	comment	5.0	13.0	1649801212	10.10563	This lead me down an interesting path.So, first of all, my (possibly incorrect) understanding is that pure parametric polymorphism doesn't allow you to specify constraints - in Haskell terms, `a -> IO...		wk_end
31014116	11.789153	-7.359157	comment	5.0	14.0	1649855036	-8.895951	Can anyone explain the upshot of dynamic typing besides terseness?		vermilingua
31115177	11.773848	-7.148523	comment	5.0	12.5	1650575166	-8.952027	I agree. I'm glad that they're optional. One of the main reasons to use Python is to prioritize development speed over performance AND to prioritize read/write-ability over hand jamming mundane syntax...		vesche
31122540	11.610348	-7.206406	comment	5.0	18.5	1650640154	8.948004	"Yeah, especially types like:  List[Tuple[Tuple[str, int, str], Tuple[int, float, float]]]


Oh, so I am supposed to make my own data structures now, just for typing?How about no?"		wheelerof4te
31151762	12.232905	-7.532154	comment	5.0	21.0	1650874529	-11.373981	Tangentially related: If a talented folks out there could please help out with (to the best of my knowledge) the only LSP for Kotlin out there[0], that would be amazing!I'm really attracted to Kotlin ...		davidatbu
31181595	11.940727	-7.722265	story	5.0	140.0	1651074913	10.42546	So Long Surrogates: How We Moved to UTF-8 in Haskell	https://www.channable.com/tech/so-long-surrogatesa	wofo
31184821	11.651963	-7.9340744	comment	5.0	14.0	1651088667	10.219886	I find it curious that the vocal parts of the Go community touted the lack of generics as a feature for so long, and that the language would be worse with them. It's nice that Go now does have the too...		mort96
31193075	11.592063	-7.963906	comment	5.0	16.0	1651156997	10.208996	Golang is great because it was the first to include excellent tooling in addition to the language (strict compiler, linting, non-customizable  gofmt, package manager, good html docs, online playground...		baby
31193260	11.638717	-7.965668	comment	5.0	16.0	1651157918	10.2555895	Author here: I wrote this in 2020, have changed jobs twice since. Both jobs involved Go in some capacity, where it's supposed to shine (web services). It has not been a pleasant experience either - I'...		fasterthanlime
31203516	11.626422	-7.103571	comment	5.0	16.5	1651228671	-6.361259	IMHO the idea that the history and future of programming languages follows a pre-determined ladder, or 'generations' is misguided. More abstactions isn't necessarily better then more explicitness. Fun...		flohofwoe
31205474	11.643678	-7.9782877	comment	5.0	55.0	1651241983	10.225599	The author obviously doesn't like Go. Ok, he can have his own opinions.I've been coding professionally since 1987, using everything from mainframe assembler, Fortran, C, VB, Java, C++, to most recentl...		kitd
31205610	11.608689	-7.859665	comment	5.0	27.5	1651242544	10.078472	For me, the goroutines + channels + select is what makes Go leagues above any other popular language.As far as I know, no other popular language allows you to read from multiple queues at the same tim...		paskozdilar
31205504	11.602047	-7.6479206	comment	5.0	16.5	1651242124	9.935616	Im a go noobie so I had a question about the following.> Go's lack of support for immutable data — the only way to prevent something from being mutated is to only hand out copies of it, and to be very...		wara23arish
31215577	11.600463	-7.4104133	comment	5.0	15.0	1651322170	9.13805	"Loom is missing the point.Time has shown that bare threads are not a viable high-level API for managing concurrency. As it turns out, we humans don't think in terms of locks and condvars but ""to do X,..."		Nullabillity
31220058	11.946475	-7.599043	comment	5.0	14.5	1651357709	-9.078042	I'm not really convinced by the author's first example. While an element of type bool is an instance of type a, an element of type bool -> bool is not an instance of type a -> a.The issue is precisely...		bzxcvbn
31237818	11.773399	-7.0894046	comment	5.0	23.0	1651511088	9.893355	Java will join the (imo) better concurrency path of higher level languages with green like threads, Golang (goroutine), Erlang, Java (Loom, virtual threads) & Ruby (soon under Ractors?).I really think...		bestinterest
31238322	11.758935	-7.302196	comment	5.0	32.5	1651513465	9.22771	> I wonder why we went down that whole async/await craze with so many languages?We addressed this, albeit very briefly, in the Alternatives section of the JEP: https://openjdk.java.net/jeps/425There a...		pron
31239074	12.03641	-7.2497435	comment	5.0	15.0	1651516805	9.169836	With Loom, what's the equivalent of the following Promise concepts?1. Promise constructor (to turn an existing callback-based or async operation into one that can be blocked with Loom). JS example:  a...		binarynate
31248728	11.592931	-7.9105296	comment	5.0	18.0	1651588018	10.113699	If you actually needed performance you couldn't use a garbage collected language.Golang isn't really faster then any other on the same playing field (compiled and with GC).		411111111111111
31257997	11.644623	-7.962276	comment	5.0	19.0	1651652452	10.222433	Judging by the examples, the Go code is easier to read, write and maintain.		xyproto
31258759	11.627655	-7.2526054	comment	5.0	17.0	1651661504	-4.290741	Thanks for writing this up, though I feel that it may be a bit premature since at this point hardly anyone has any real experience writing Hare code. Regardless, I understand that this is a contentiou...		ddevault
31260228	12.293842	-7.017909	comment	5.0	13.5	1651671639	13.174468	I'm more than two decades away from being gen-z, and I still agree with that sentiment. There might be that theoretical wise and disciplined Perl programmer writing well structured and readable code, ...		fps_doug
31261888	12.280957	-7.017114	comment	5.0	22.0	1651678270	13.171135	Perl was the first language I used professionally and I used it almost exclusively for years. I don't understand all the negative comments about its use of sigils, I find them useful and I never got t...		jkh1
31270142	11.622949	-7.874999	story	5.0	109.0	1651731196	10.13007	A Faster Lexer in Go	https://eli.thegreenplace.net/2022/a-faster-lexer-in-go/	sophiewang
31277177	12.100678	-7.8562226	comment	5.0	13.5	1651777035	-2.3366792	Who would be cruel enough to expose the masses to OCaml?		iLoveOncall
31277230	12.099507	-7.8516817	comment	5.0	13.0	1651777390	10.438894	I'm a bit surprised to see this making it to the front page.  It's been available for a long time and is one of the first resources anyone with an interest in OCaml is likely to encounter.  It seems a little like posting a link to cppreference.com.		tgflynn
31284735	11.889177	-7.309222	story	5.0	6.0	1651843002	7.062926	Ask HN: How do you name your objects?		taybrutal
31325581	11.785713	-7.3926053	story	5.0	151.0	1652180164	-5.2394233	Show HN: Peridot – A functional language based on two-level type theory	https://github.com/eashanhatti/peridot	ehatti
31368195	11.697751	-7.266847	comment	5.0	20.0	1652452508	8.920994	> It is not the goal of this project to add an automatic tail-call optimization to the JVM.Wait what? Are we getting TCO or not with Loom?		gorjusborg
31461153	11.78113	-7.2281504	comment	5.0	23.0	1653162485	-8.815886	I'm generally opposed to jargon in tech writing so the use of 'holotype' caused me to look it up. I'm not sure it works. For example, by the definition Hotmail should be the holotype instead of GMail,...		mwattsun
31468011	12.271911	-7.3015904	comment	5.0	13.5	1653226434	7.0811567	The problem is that developers have been brainwashed to dislike what Smalltalk has to offer. If you tell them to use a Smalltalk-like system they will complain to no end about the lack of file-centric...		coliveira
31475765	11.6703825	-7.5640182	story	5.0	29.0	1653285825	10.086726	Modern programming languages require generics	https://ayende.com/blog/197282-B/modern-programming-languages-require-generics?key=37e0cfa91b16417bae269c4bdd17f522	ayende
31493213	11.660105	-7.6721177	comment	5.0	14.0	1653405400	-12.436694	I’m still surprised that generics increase performance.  I also don’t fully understand how.		mrweasel
31493847	11.917587	-7.3717256	comment	5.0	13.5	1653408338	7.054675	You brought up the worst part of OOP, inheritance. Which most modern OOP rarely uses. Since the 90s “composition over inheritance” has been a mantra. If you want to build strong arguments, focus on re...		jackblemming
31513431	11.838702	-7.317318	comment	5.0	20.0	1653531013	7.077239	Might have once agreed in my young OOP days but after 20+ years of experience, totally disagree. Yagni. Don't add unnecessary code and abstractions. Minimize complexity wherever possible.		QuadrupleA
31517109	11.700483	-7.8234916	comment	5.0	13.5	1653564840	10.207821	"Something is odd about the timing.This article is dated ""Wednesday, March 3 2021"" but appears to be identical to https://getstream.io/blog/switched-python-go/ dated Oct 17, 2017 and updated either May..."		eesmith
31541477	11.951958	-7.663902	story	5.0	66.0	1653754507	10.4026985	Translating math into code with examples in Java, Racket, Haskell, Python (2011)	https://matt.might.net/articles/discrete-math-and-code/	ddtaylor
31568098	12.318075	-7.4441752	story	5.0	87.0	1653994615	12.869905	Algebraic Data Types in Elixir	https://blog.appsignal.com/2022/05/31/algebraic-data-types-in-elixir.html	unripe_syntax
31574119	11.640748	-7.9372363	comment	5.0	18.0	1654026863	10.232204	One area in which Go lacks is its static type system. Until recently, it was practically straight out of the '70s. Static type systems are a mechanism for outlawing the compilation of programs that ar...		DonaldPShimoda
31618206	11.956796	-7.450974	comment	5.0	17.0	1654331606	7.3198495	A concise explanation: functionalism is secondary to the attention economy for modern media platforms.Hard to advertise in a functional list grid, but yeah like fuck, I’m right there with you. It’s to the point where I’d rather just steal the album off of YouTube. At least there’s an ad-blocker.		raydiatian
31633195	11.592629	-7.8675175	comment	5.0	18.5	1654451137	10.02783	I love Go and goroutines, but...> A newly minted goroutine is given a few kilobytesa line later>  It is practical to create hundreds of thousands of goroutines in the same address spaceSo it's not pra...		aaronbwebber
31639089	12.0155115	-7.797141	story	5.0	42.0	1654514505	10.438307	The Lazy Monad	https://blog.ploeh.dk/2022/05/30/the-lazy-monad/	DeathArrow
31664811	11.949382	-7.729312	comment	5.0	12.5	1654678157	10.414089	How you would write tests in a real project?I suppose it's not writing out the entire program and then writing the tests, as seems to be implied. That would mean a lot of manual testing.Or is there a Haskell REPL where you can try out small pieces before saving them?		danuker
31735136	11.675953	-7.9328423	comment	5.0	13.5	1655185244	10.245159	Agreed with the article, though obviously it’s a bit dated (especially around generics and package management).My take is that Go is basically the new Java, with fewer abstractions and faster compilat...		yashap
31749232	11.662569	-7.349915	comment	5.0	12.5	1655268534	-8.71875	> In my 23 years of programming, I have never experienced this bug. I've also never heard of anyone else experiencing this. I've even said this in fora where I should have had someone pop up to correc...		swatcoder
31751613	12.0408	-7.7769136	comment	5.0	39.0	1655293793	10.444115	For almost as long as I've been programming, I find Ocaml a fantastic language, which just lacked some development tools and improved concurrency. I still believe that under the right circumstances it could become a mainstream language.		sunflowerdeath
26472155	12.108396	-7.1444664	comment	5.0	24.0	1615861509	-10.388766	One of the reasons I like weak type systems or duck typing as is with vanilla JS is because I don't have cognitive overload... I don't have to think about abstractions as types I only need to think ho...		cphoover
26470763	11.7008095	-7.3248477	story	5.0	36.0	1615851143	-8.812935	Avoiding type inference false-positives with flow-sensitive conditional analysis	https://psalm.dev/articles/the-truth-matters	muglug
26472468	11.690968	-7.3548694	comment	5.0	14.0	1615864008	-8.775	What kind of types are you dealing with that makes them so hard to keep track of? Are you talking about strings and integers, or a really really complicated objects and functions thing with functions of functions of functions and that kind of thing?		whatshisface
26474126	12.2655735	-7.5501704	comment	5.0	24.5	1615882234	-11.379677	Kotlin is one of those things that I avoided learning for so long just because I didn't want to learn another new thing.And one day I had to work on a project that was 100% kotlin and so i decided to ...		Crazyontap
35536490	11.678751	-7.8970547	comment	5.0	16.0	1681287525	10.159074	Citation needed; first off, verbosity is not the problem, verbosity is NEVER the problem; any significant codebase will end up with millions of LOC (and tokens) regardless of language choice.Second, J...		Cthulhu_
35536289	11.681567	-7.8127604	comment	5.0	17.5	1681285946	10.0719595	I would say that Go's error handling is a billion dollar mistake as well.The JVM is very impressive and a great thing to build upon. The Java standard library is vast and the developers actually care ...		Kwpolska
35580009	11.673604	-7.920817	story	5.0	27.0	1681561694	10.186525	Pushup Offers Speed of Go in Web Development Framework	https://thenewstack.io/pushup-offers-speed-of-go-in-web-development-framework/	ovaistariq
35584410	11.734993	-7.0665107	comment	5.0	15.5	1681591966	-8.995822	A few other examples for the sections given:Runtime behaviour determination: the stdlib [dataclasses](https://docs.python.org/3/library/dataclasses.html#module-da...)Dataclasses is notable because it'...		BeefySwain
35584968	11.862909	-7.221032	comment	5.0	13.5	1681595849	-8.962633	The only reason to consider type hints is for a performance increase and there wasn't any mention of that. What can you really expect from using type hints accurately?		Heston
35585348	11.810594	-7.156916	comment	5.0	17.0	1681598355	-9.021912	The issue that I have with Python type hints is they they don't go nearly far enough in describing the data being manipulated. Specifically, I'm thinking of stuff like the dimensionality and cardinali...		abraxas
35592289	11.629733	-7.353334	comment	5.0	22.0	1681666542	9.179139	I've done a few APIs similar in spirit to this one (and one similar in functionality, too), and I've found using a blend of a few of the mentioned methods to be pretty effective.I start with the basic...		jesse__
35625196	11.603947	-7.915825	comment	5.0	15.5	1681887998	10.180911	> In Go, I found that using an interface was not free: it can make the code slower. In C++, if you implement the following type and call count on it, you find that optimizing compilers are able to jus...		midland_trucker
35647537	12.254104	-7.0620966	comment	5.0	21.0	1682030750	13.164657	I'm also shock that in Perl you can alter your return type based on the type of variable the caller is putting your result in.https://perlmaven.com/wantarrayThat always appeared as madness to me. Why would you make things that cryptic to understand?		xupybd
35691165	12.0940695	-7.853145	comment	5.0	20.0	1682360244	10.436502	A bit off-topic but the post title will probably attract relevant people.What are the thoughts on OCaml on HN?		erwinh
35700863	11.7272415	-7.8759456	comment	5.0	30.0	1682432381	10.362341	I don't the author really gave Ocaml a chance. He argues that every language needs to have interfaces. I agree somewhat with that statement, but I think the truer statement is to say that every langua...		spqr233
35714162	12.212761	-7.11875	comment	5.0	15.5	1682519256	12.3381	Whoa that’s wild.> Note: There're no break statements at the end of each when clause. Unlike other languages, Ruby's case doesn't fall through.Aw no fall through?> Note: Do not use obj.class in the case clause, as Integer === Integer returns false.Wait what		mock-possum
35751419	11.921543	-7.035452	comment	5.0	15.0	1682760191	6.104463	"I can't recall a single time in JS/TS, C# or even Java where I went ""phew, glad i made that private!"".In TS, i default to protected for internal implementation details.Why would one hinder future extenders by default?"		jschrf
35769163	11.815682	-7.5438375	story	5.0	65.0	1682916155	10.107724	Dex Lang: Research language for array processing in the Haskell/ML family	https://github.com/google-research/dex-lang	tim_sw
35784695	11.621328	-7.666522	comment	5.0	14.5	1683015006	10.236302	I don't speak Go. Is there some magic here that lets Dog and Cat know that they're implementing Animal? Or are you just informing MakeNoises(as ...Animal) that it will be receiving something that shou...		noduerme
35801608	11.827599	-7.684629	comment	5.0	15.5	1683117269	10.43098	> Mu can easily take several minutes to compile a single large application. We will circumvent those problems by switching our front-end to use GHC directlyWhat does he mean by this?		YetAnotherNick
35805107	11.982759	-7.744893	comment	5.0	13.0	1683134703	10.443173	I'm just starting to learn Haskell and I honestly can't fathom how it gets written in production. Everything requires so much more consideration, which is fun and valuable in some situations, but not ...		koromak
35834090	12.498781	-7.0934734	comment	5.0	25.5	1683315131	12.409306	I had written a code contracts library for Ruby about 10 years ago [1]. I stopped working on it, mainly because it only provided runtime type checking, and I wanted static type checking. Nowadays my m...		egonschiele
35951537	11.737254	-7.3085184	comment	5.0	17.5	1684171464	-8.631037	> All this, without touching any tests. I didn’t need to - because the types provided the direction.Which is all great and wonderful - until things change, and requests can suddenly come in without an...		kstenerud
35967663	12.443025	-7.4911942	comment	5.0	15.5	1684270643	12.857011	Here is actually a good article comparing the JVM with the BEAM: https://www.erlang-solutions.com/blog/optimising-for-concurr...--And some of my own thoughts with a few more links:The runtime system t...		japhib
36025221	11.601851	-7.7779346	comment	5.0	18.5	1684708060	9.707649	One thing I wanted to add is that in golang, you end up passing context.Context to all asynchronous functions to handle cancellations and timeouts, so you “color” them regardless. Java folks with structured concurrency have the right idea here.		za3faran
36027517	12.252672	-7.5617557	comment	5.0	15.0	1684730276	-11.3886595	Kotlin wasn't developed for Android. And can be run anywhere.It was JetBrains pet project to fix archaic stuff in Java without making a Scala. It was designed from the get go for a wide base (as wide as java).I'm not sure how it became Android's main target, but I doubt it was the original purpose.		Illniyar
36029408	11.9740925	-7.7443776	comment	5.0	15.0	1684750189	10.403893	And why is that necessary knowledge?Don't get me wrong, once you go down to embedded you sometimes do need to know and sometimes it just improves your understanding (and it's kinda cool anyway), but i...		hugatest
36047892	11.624693	-7.942555	comment	5.0	16.0	1684863664	10.236781	Things I can't live without in a new Go project in no particular order:- https://github.com/golangci/golangci-lint - meta-linter- https://goreleaser.com - automate release workflows- https://magefile....		jzelinskie
36055683	11.756175	-7.2400293	comment	5.0	13.0	1684919951	9.086812	I had a hard time with closures when doing async programming. Is that something one should avoid?		davidkunz
36093120	11.953037	-7.713527	story	5.0	61.0	1685177689	10.427309	Haskell Optimization Handbook	https://github.com/haskellfoundation/hs-opt-handbook.github.io	ghuntley
36159888	11.601237	-7.907868	comment	5.0	18.0	1685670551	10.143775	this one one of those things that people point to when comparing languages, but in reality rarely matters. with Go, you just get the number of bytes, which the the correct default thing to do:https://...		2h
36188002	12.242526	-7.2260137	comment	5.0	20.0	1685902640	12.318267	The best gem in all of it is this:> You can make classes, but you can only ever make one instance of them. This shouldn't affect how most object-oriented programmers work.This describes my experience with most OOP code very well.		gusmd
36226673	11.7091675	-7.84399	comment	5.0	26.0	1686145232	10.189967	Having recently kind of abandoned golang for Java, I've got to say I love the richness of the Spring ecosystem.		nprateem
36231436	11.8453455	-7.2610006	comment	5.0	18.0	1686163327	11.891307	Great question! A val is a small snippet of JavaScript/TypeScript that runs on our servers. You can also schedule them.We're trying to make a new kind of web primitive, like a Tweet or a Github repo, or more pointedly, like a Github Gist, but one that runs.		stevekrouse
36277089	11.898208	-7.070969	story	5.0	15.0	1686447332	-10.73145	AsyncIO	https://charlesleifer.com/blog/asyncio/	zdw
36284111	12.247303	-7.568977	comment	5.0	17.5	1686507768	-11.387702	Kotlin provides modern features in the Android development Java land stuck on the ancient Java 6.Scala was an academic experiment on how to match nicely object oriented world with functional programin...		piokoch
36315382	11.872779	-7.364878	comment	5.0	31.0	1686683599	5.589118	Imho it's exactly the other way around: Imperative programming is an implementation detail and nothing you should care at first.If you want to learn proper abstractions you should start with something...		still_grokking
36329918	11.760636	-7.066221	comment	5.0	14.5	1686765723	-8.99866	Here's a long-running question I have; please tell me if I'm confused / missing something obvious.Say I want to model in Python some collection of key-value pairs. It's a singleton -- I don't need a c...		da39a3ee
36389409	11.98975	-7.186993	comment	5.0	14.0	1687170340	-10.310618	"The last example is surprising:  {
    await using { connection } = getConnection();
    // Do stuff with connection
  }   // Automatically closed!

The object returned by getConnection() is destructu..."		codewiz
36390585	12.243271	-7.5551424	story	5.0	5.0	1687179764	-11.363149	Ask HN: Why isn't Kotlin getting enough attention on HN		lewisjoe
36407112	11.988881	-7.03642	comment	5.0	19.5	1687280755	7.836632	"The gist of those examples in TypeScript:EXAMPLE 1: Echo command-line input    console.log(process.argv);

EXAMPLE 2: Count duplicates in a file    import { readFile } from ""fs/promises"";
    readFile..."		a_wild_dandan
36424131	11.635547	-7.953122	comment	5.0	12.5	1687380183	-5.257845	I enjoy Go so much. It is almost perfect language for getting things done, but I still can't understand some design choices.Does someone knows why Go uses env variables (like GOOS and GOARCH) instead command line arguments?		ubavic
36428369	11.656389	-7.3449306	comment	5.0	21.5	1687412415	7.1171303	"As far as I can tell, the author says that ""ANSI-C is a full-scale object-oriented language"" in a slightly sarcastic tone, as there's nothing particular to OOP languages that you can't do in C. But I'..."		Tomis02
36429672	11.637793	-7.3246717	comment	5.0	15.0	1687425095	9.210722	People always say that coroutines make code easier to understand, but I've always found normal asynchronous code with callbacks much easier to understand.They're equivalent except that asynchronous ca...		mgaunard
36458052	11.85443	-7.0184555	comment	5.0	16.5	1687609069	8.932589	"Nice explanation!Although I’m surprised there is no mention of the best solution for iterating both keys and values:for (const [key, val] of Object.entries(obj)) {
  console.log(key, val)
}https://developer.mozilla.org/en-US/docs/Web/JavaScript/Refe..."		styfle
36539675	11.65215	-7.839787	comment	5.0	13.0	1688149010	10.164463	Why not switch to Mojo lang for this? It's Python-compatible with Golang like performance from what I hear.		eshnil
29652256	11.649659	-7.927289	comment	5.0	17.5	1640193581	10.234936	This seems like a straw man. I don't think anyone has claimed Go's type system has novel features.> the reason it took so long was because it came out of an environment with actors (including a part o...		throwaway894345
29659895	11.98382	-7.7403154	comment	5.0	18.0	1640248671	10.396331	Having never heard of this, I found the FAQ page an informative starting point.https://clean.cs.ru.nl/FAQIn simplistic terms, Clean seems to be a “better Haskell”.Edit: I just downloaded the bundle ta...		tempodox
29668881	12.195273	-7.570295	comment	5.0	18.5	1640309082	11.891505	Have you ever tried kotlin? I've found it to be an encoding of best practices from Java with nullability pinned down. Really made me enjoy working in a most OO/procedural language again after fleeing to scala for a few years.		stepbeek
29678012	11.813823	-7.073679	comment	5.0	14.5	1640382050	6.90059	Someone should tell this person about dataclasses		willseth
29678637	11.811772	-7.124228	comment	5.0	15.5	1640386888	-8.986882	"I really, genuinely don't get the appeal. I don't follow the ""less code = better"" ideology so maybe that's a contributor but I really don't see how this:    class Person:
        def __init__(self, na..."		nauticacom
34167322	12.035863	-7.096801	story	5.0	25.0	1672269199	-3.4283984	Anytype. FOSS Notion Alternative	https://anytype.io/en/	kaffeeringe
34180258	11.602515	-7.8899946	comment	5.0	25.5	1672361639	-9.247311	"This isn't a defect, which makes the whole comment kind of strange. I blame the post title, which should be ""Golang disables Nagle's Tinygram Algorithm By Default""; then we could just debate Nagle vs. Delayed ACK, which would be 100x more interesting than subthreads like this."		tptacek
34180327	11.626791	-7.976699	comment	5.0	16.0	1672362240	10.23391	In my opinion, the Principle of Least Surprise applies here.Go is defaulting to surprising (unexpected) behavior.		Teckla
34190457	11.8603525	-7.211134	comment	5.0	16.5	1672436520	-8.976393	"I do not see the benefit of type hints. Good docstrings (and naming of the function and arguments) are superior, at least for the human.
Type hints are too much clutter."		mharig
34203622	11.63128	-7.873027	story	5.0	52.0	1672547487	10.190894	Writing an Interpreter in Go	https://interpreterbook.com	curling_grad
34206289	12.242872	-7.535356	comment	5.0	27.0	1672581669	-11.374051	"Kotlin may be growing on GitHub, BUT Java has the ""late-mover advantage"": it will incorporate all good ideas from Kotlin & others into the language and it will skip on all failed ideas (like async/awa..."		pulse7
34206849	11.643544	-7.318646	comment	5.0	21.5	1672585854	9.441363	Another solution is to eliminate classes and only use structs or similar plain objects. Makes mocking and testing functions much easier. At this point I see no reason for OOP whatsoever and consider it a big mistake.		monero-xmr
34212755	11.656573	-7.1179852	comment	5.0	14.0	1672619268	-7.253149	I am not a fan of anonymous functions. I think they are evocative of maths culture tendency to remove and make meaningless names(for example, using greek letters). Yes I know naming things is hard, bu...		somat
34214497	11.8995	-7.4430494	comment	5.0	43.5	1672634977	7.286753	I mean, in an example where the problem and solution is well understood, sure, but like all things there are downsides and you need to consider appropriateness.Firstly if you're conceiving a novel alg...		Vanit
34215475	11.668439	-7.249065	comment	5.0	38.5	1672646312	-7.084769	> There’s nothing wrong with imperative code confined to the scope of a functionThhat is a fine point which I rarely see discussed in connection with FP.  (Pure) FP is commonly understood (?) to mean ...		galaxyLogic
34216976	11.94305	-7.5024824	comment	5.0	13.5	1672660534	7.4836416	I was trying to evaluate FP one time, try to get it, but I can't envision using it in a pretty complex front-end where many things inter-depend on each other. With imperative programming I can easily ...		mckravchyk
34244301	12.350525	-7.1236963	comment	5.0	17.5	1672830970	12.356954	Before Ruby introduced filter_map:res = (1..10).select { |x| x != 5 }.map { |x| x ** 2 }With filter_map:res = (1..10).filter_map { |x| x ** 2 if x != 5 }In both cases, I think the Ruby solution is mor...		michaelteter
34264089	11.603023	-7.2059827	comment	5.0	13.0	1672942795	9.450804	>Jerod Santo: ...if I want this to be a varchar 40 and you let me put anything in there, then why did I declare it to be a varchar 40 in the first place? You know what I’m saying?>Richard Hipp: Yeah, ...		mcdonje
34267647	12.059201	-7.332371	comment	5.0	14.5	1672956998	9.996965	# Function Shorthand ####I like how functions in js can be `arg => result`. In F# I have to do `fun arg -> result` with the `fun` keyword. It makes sense since `MyArgType -> MyResType` is a type signa...		devmunchies
34280505	12.0127	-7.915773	comment	5.0	18.5	1673036647	10.40501	I've always been curious whether someone will succeed in using the same development strategy as Jane Street, namely using a non-C++ language as their primary language. I suspect OCaml may have been a ...		hardwaregeek
34298192	11.898153	-7.267453	comment	5.0	12.5	1673177256	-5.4066563	"what does an ""object"" look like? how do i derive from it?"		zabzonk
34307215	11.951036	-7.701777	story	5.0	54.0	1673243084	10.365354	Parsing layout – problems with Haskell's syntax (2021)	https://amelia.how/posts/parsing-layout.html	g0xA52A2A
34339090	11.74495	-7.352184	comment	5.0	15.5	1673448932	-8.862502	> It may be the sloppiest, crappiest definition every, with dynamic typesFunny you said that since a microservice API is always dynamically typed and its usage cannot be checked by compiler. And the m...		esailija
34389695	12.027571	-7.805978	comment	5.0	16.0	1673793482	10.432113	I’ve understood monads multiple times in my life, but each time that understanding was so fragile that it crumbled when I tried explaining to someone else.I’m currently in a phase where I don’t understand them.		wkjagt
34415783	12.258435	-7.190302	comment	5.0	14.5	1673977634	12.38172	"No, but gradual/optional typing did come after Ruby. Back in 2005, you could choose between static typing with type checking but lots of verbosity (e.g. Java ""Point point = new Point();"" or C++ ""for (..."		JW_00000
34416898	11.789559	-7.300029	comment	5.0	19.0	1673981536	-8.8204155	I don't know if I'm just a bad programmer and everyone knows something I don't, but it seems to be the benefits of a strongly typed language are wildly overblown. It's a different way of thinking abou...		mostlysimilar
34438508	11.988961	-7.736866	comment	5.0	13.0	1674122011	10.428252	fantastic software, never build it from source, or if you have to, make sure you have an OS that bundles all the Haskell dependencies into a single meta package		tetris11
34467541	11.909924	-7.3463287	story	5.0	9.0	1674318458	7.0108128	Ask HN: Looking for curated list of approaches to OO implimentation		sargstuff
34542953	11.935815	-7.701238	comment	5.0	22.5	1674798267	10.40843	> Haskell and Idris are beautiful and powerful, but inaccessible to most software engineers.I don't see any fundamental reason why that should be the case. It seems to me that while it's true that mos...		epgui
34543362	11.591952	-7.3864207	comment	5.0	13.5	1674802187	9.936762	<> are the worst characters for generics, except for all the others that have been tried. () leads to the type syntax being difficult to distinguish from value syntax, which is great in dependently-ty...		puffoflogic
34543008	11.690683	-7.141975	comment	5.0	18.5	1674798675	-6.0000997	In my experience, programmers obsessed with unconventional programming languages are exactly the ones that prioritize (over) engineering over simply shipping things. If you think, writing your codebas...		shubhamjain
34548224	12.201358	-7.5160003	comment	5.0	24.5	1674838233	12.828527	"I think it is misleading to frame this as ""behavior"". I think what we really have are battle-tested concurrency patterns, which then uses the language feature called ""behavior"" to implement. This coll..."		hosh
34559409	12.423099	-7.5873876	comment	5.0	21.0	1674926356	12.892038	On the one hand, this framework's front page almost undersells the biggest feature it has, which is that I believe it can function as an actual Erlang node. You can use this to join a Go system to you...		jerf
34560431	11.720464	-7.851863	comment	5.0	14.0	1674932521	12.735634	Go’s concurrency model and Erlangs concurrency model are fundamentally the same.Erlangs mailbox and Go’s channels are the same primitive.And Erlangs processes and Go’s Goroutines are also the same pri...		avianlyric
34596317	11.619359	-7.916297	comment	5.0	15.0	1675179061	10.039054	What is innocative in go? Concurrency primitives? Single file?		hardware2win
34664814	12.208711	-7.5082335	comment	5.0	13.0	1675604551	11.887556	Yeah maybe, I hear Java has improved markedly since my bad experiences with it (admittedly a long time ago now). I should swallow my distaste and give it a fair trial. From a distance it still looks s...		biorach
34664970	12.240004	-7.6343236	story	5.0	57.0	1675605844	11.926394	10 Years of Scala.js	https://www.scala-lang.org/blog-detail/2023/02/05/ten-years-of-scala-js.html	AlexITC
34702197	11.643213	-7.9682035	comment	5.0	13.0	1675816419	10.238258	It baffles me that golang does not have this, which is otherwise a relatively modern language.		madeofpalk
34731892	12.116445	-7.195522	comment	5.0	25.0	1675978646	9.13154	"Is it a ""promise"" if it's a guaranteed algorithmic result?"		beaned
34788769	11.625885	-7.695309	comment	5.0	16.5	1676380276	10.336951	"About Haskell's function type annotations: ""But it usually results in a warning, and adding a type signature is a good practice.""I prefer Rust's way of doing this. When you're a beginner it ensures th..."		qwertox
34841315	11.607367	-7.941329	comment	5.0	13.0	1676671985	10.208267	Google developed Go specifically so they didn't have to use C++ in high-volume web backends, which is what they did previously.		Animats
34864194	12.34376	-7.496349	comment	5.0	14.0	1676859149	12.855049	Use an actor model language -- by far the sanest way. Message passing is intuitive to human experience.1. Elixir (Erlang)2. Scala/Akka3. Pony		mhsdef
34959245	11.758382	-7.32557	comment	5.0	15.5	1677518871	-8.847338	> It does result in very different outputs though.Not really. The thing with typing is that it gets hyped, but in practice, it matters very little. Both science code and web application code don't rea...		ActorNightly
34967305	11.686395	-7.3826175	comment	5.0	16.5	1677575768	7.335928	The shapes example is pretty contrived so I don't really have an opinion on it either way. But imagine you have something like a File interface and you have implementations of it e.g. DiskFile, Networ...		vore
34996888	11.901575	-7.336445	comment	5.0	20.0	1677771108	7.064548	It should be noted that this documented one of the starting positions of a panel discussion at OOPSLA 2002:  Resolved: Objects have Failed.http://www.oopsla.org/2002/fp/files/pan-1.htmlhttp://www.oops...		mpweiher
35001337	11.837681	-7.12165	comment	5.0	14.5	1677788134	-9.048753	If I may ask, have you found using a Typed language such as Typescript has changed your tendency to use Python for other tasks, given that it isn't typed? [0][0] - I understand that types can be added...		vhanda
35030620	11.863628	-7.4169006	comment	5.0	21.5	1678031381	7.341148	> The hypothesis I aim to test with a new programming language is: By making different tradeoffs, these issues can be mitigated and a more broadly-appealing functional language can be built. With such...		karmakurtisaani
35031060	11.924223	-7.513909	comment	5.0	21.5	1678033774	7.360904	> Now that (nearly) every mainstream language has lambda expressions, there are very few patterns in functional programming that cannot be replicated in mainstream languagesI don't think this is true....		noelwelsh
35133037	11.732091	-7.1593065	comment	5.0	15.0	1678698486	8.664314	My guess is that C# will be much better, since it has support for Value types.Wasn't Java supposed to get support for Value types some time ago?		diffuse_l
35135376	11.661393	-7.9676375	comment	5.0	15.0	1678713882	10.2176485	this seems like something that should be left to end users to come up with a solution for. I would guess that a large percentage of web designers don't even know what this is, so adding it to the spec...		2h
35159078	11.757428	-7.234756	comment	5.0	13.5	1678829451	-6.1469154	Can someone ELI5 what exactly is immutable in an OS?Are all applications run as sandboxed containers or something?If so, do they natively support switching between multiple versions of, say python?In-...		yumraj
39383346	11.812509	-7.3693047	comment	5.0	12.5	1708008822	-5.9784374	The author claimed that immutability is a foundation for scalability and robustness.I reject that claim.In this comment, you simultaneously agree and disagree with me.I don’t give a shit what Joe Arms...		wredue
39407254	11.712289	-7.149218	comment	5.0	20.0	1708155144	8.726337	Is it hard to write ONE test case for ALL getters and setters using reflection?		oneshtein
39417127	11.839466	-7.059313	comment	5.0	18.5	1708243315	-9.025202	I would not personally use any of them. Typed python in previous workplace was pretty much shitshow, and if starting from scratch instead of untyped codebase it might be worth it, maybe, for some spec...		damezumari
39491622	11.833613	-7.110722	comment	5.0	25.5	1708784113	6.8400574	Hmm, SOLID is very well-known and the principles are ubiquitous good practices for object-oriented programming and also useful for software dev in general.Certainly, asking about them and , especially, asking the candidate to critique them is a very good question.		mytailorisrich
39493969	11.814825	-7.1400948	comment	5.0	14.5	1708799882	6.8344736	I find that genuinely absurd.  Knowing SOLID is very very far from being a basic qualification to be a software developer. It's a specific piece of jargon that's used in a particular type of place tha...		seanhunter
39499051	11.794908	-7.3242683	comment	5.0	14.5	1708851951	10.073926	I love the concept of point-free programming - write your function by simply concatenating the transformations you want.I just hate reading the resulting code written by others. What information is ex...		TuringTest
39499196	11.89304	-7.4446397	comment	5.0	23.0	1708853233	7.2249355	Absolutely every single time when I use functional programming, I store my intermediary calls in a variable, specifically because naming that variable forces me to explain what that intermediary resul...		mihaic
39530802	11.854978	-7.432387	comment	5.0	15.0	1709071733	7.6046133	Yes, Pure is a term-rewriting system, similar to SymPy. Transformation rules define patterns to match in expressions, what bindings to capture from the match, and what to transform the matched pattern...		sterlind
39579024	11.664544	-7.8377485	comment	5.0	15.0	1709448646	10.12747	I have a feeling that a naive implementation in Java would be a lot worse than a naive implementation in Go so optimizing matters more there.Had to parse csvs in Java on a very memory constrained system once... we ended up cutting out a feature because it wasn't worth it.		nottorp
39593457	11.934666	-7.458639	story	5.0	4.0	1709574545	7.248728	Ask HN: Explain to me why functional programming is better like I'm stupid		jagtstronaut
39612907	11.594057	-7.1039467	comment	5.0	20.0	1709706345	6.2223644	As others have pointed out, that is actually a stunted and quite limited version of pattern matching that existed in other languages for years and even decades before Swift.F#, OCaml, and Standard ML are the primary examples. It's surprising to me how ignored these languages are.		bmitc
39613734	11.971918	-7.734579	comment	5.0	25.5	1709714745	10.462105	The invalid certificate and the oddball text encoding is illustrative of the Haskell programmer's inability to cope with practical computing problems.		Tabular-Iceberg
39646750	11.716218	-7.3422	comment	5.0	14.5	1709933550	9.192523	Although I tend to mostly use async/await these days, I find the other JavaScript asynchronous primitives interesting. Generator functions, iterables, and async versions of the two.The author shows a ...		HumanOstrich
38612881	11.974343	-7.7425604	comment	5.0	13.0	1702392726	10.417131	High speed fiance is mostly done in Java and Haskell, because mistakes are expensive. (And yeah, it's one of the very few fields that Haskell enters the list.)		marcosdumay
38647103	11.643095	-7.247116	story	5.0	61.0	1702587278	-8.74271	Show HN: Programming with Pure Lambda Calculus	https://bruijn.marvinborner.de/	marvinborner
38689585	12.200458	-7.131641	comment	5.0	14.5	1702940286	-6.9466267	"I had to write some ruby at work recently and wasted a few hours on a bug caused by the following footgun:    irb(main):028:0> value = false or true
    => true
    irb(main):029:0> value
    => false..."		nickysielicki
38698188	11.732436	-7.3344545	comment	5.0	14.5	1703005444	-8.965413	"Why isn't the question ""does adequate testing dramatically reduce the benefits of static typing"" asked?  Why is static typing privileged by default?"		pfdietz
38697996	11.74829	-7.3431373	comment	5.0	20.0	1703004766	-8.8826885	"It  matters enough that the question ""does static typing dramatically reduce the benefits of unit testing"" is an open question or at least seriously discussed in the industry. All other replies are about dynamic languages."		throwaway290
38707715	11.864545	-7.0657907	comment	5.0	22.0	1703073998	-8.991768	Professionals should stop putting up with unprofessional tools and languages. This? This whole mess is not professional. If you want types, do not use python. Python is not a typed language. You can't just bolt on a type system, as is being live demonstrated here.		bruce343434
38751161	12.454227	-7.030133	comment	5.0	35.0	1703392513	12.394348	I really wish ruby would have become the biggest scripting language rather than python.		stjohnswarts
38760633	12.496293	-7.021044	comment	5.0	16.5	1703490231	-8.811434	I hope Ruby 4.0 could allow explicit import and avoid implicit, global namespace gem import mechanism like nowsdays.		revskill
38791008	11.607042	-7.4289618	comment	5.0	15.0	1703749032	10.408265	"Tested it!
In C: https://godbolt.org/z/7xTrhGasc
GCC uses &1 even using -O0. LLVM using -O0 still does the modulo, but at -O1 it does a clever &-2.And even C#: https://godbolt.org/z/5WPfT8e5G
Does use..."		roetlich
38792809	12.303006	-7.317731	comment	5.0	15.5	1703766692	7.047618	I was expecting the author to mention Smalltalk because I distinctly remember people praising Smalltalk for its IDE but I think the IDE I was thinking of is from the late 90s or early 00s.		hnbad
38803219	11.956603	-7.589698	comment	5.0	13.5	1703842954	10.403648	Yeah. Functional programming happened to be trending again and our lead service bus developers decided to write Java like it’s Haskell.Now their garbage keeps crashing with stack overflows, and they c...		wredue
38805238	12.053819	-7.5807405	comment	5.0	13.0	1703860078	-9.110874	Why wouldn't you be able to implement this in Rust or Python?Seems like typical exception handling. Erlang isn't even type checked		jimsimmons
38873478	11.646852	-7.925657	comment	5.0	21.0	1704409044	10.235553	The fact that he doesn't mention context as a huge failing of Go is very suspect...I also find the post a little too self-congratulatory for what was essentially a reinvention of C with a GC at the ri...		softirq
38873628	11.920797	-7.0572634	comment	5.0	16.5	1704410119	8.087093	"> Java has a culture of over-engineering [which] Go successfully jettisoned[looks at the code bases of several recent jobs]
[shakes head in violent disagreement]If I'm having to open 6-8 different fil..."		zimpenfish
38876118	11.602395	-7.975266	comment	5.0	18.0	1704433585	10.225031	"It's not at ""an accident"" and Go didn't ""somehow"" fail to replace C++ at its systems programming domain. The reason why go failed to replace C and C++ is not a mystery to anyone: Mandatory GC and a ra..."		unscaled
38903239	11.701286	-7.447396	comment	5.0	14.0	1704649233	10.146717	> where T is a type parameter are known as homomorphic mapped types, which means that the mapped type is a structure preserving function of T.I work in PL and this type of language is pervasive. It is...		titzer
38916927	11.595173	-7.9727187	comment	5.0	16.5	1704742588	10.21448	A dumb question: Why are most of the container/infrastructure tools written in GoLang?Examples that come to my mind include Docker, Podman, nerdctl, Terraform and Kubernetes.Is there any obvious advantage that GoLang offers, making it so popular for building these tools?		maxloh
38917579	11.712479	-7.350922	comment	5.0	14.0	1704745370	9.158759	"How does Project Loom in JDK 21 change this?
It seems that Java has expended a lot of effort in implementing low cost virtual threads including all the effort needed to make async truly async throughout the Java runtime library."		nritchie
38925013	11.781395	-7.1740775	comment	5.0	21.0	1704800849	-8.999276	Isn't it the case that Python allows for type specifier (type hints) since 3.5, albeit the CPython interpreter ignores them?  The JIT might take advantage of them, which ought to improve performance s...		guenthert
39010868	12.026753	-7.132234	comment	5.0	19.5	1705393992	9.169766	People always forget that things that only happen every few million times, can happen fairly frequently on a busy server. This has bitten me numerous times. The nature of a lot of these types of issue...		jillesvangurp
39017055	11.86674	-7.3522015	comment	5.0	16.5	1705430737	7.0752406	It’s actually worse than you think.Functional programmers have been in a massive propaganda campaign to actively paint optimization not just as “usually not necessary”, but actually as a negative thin...		wredue
39026346	12.171876	-7.608321	comment	5.0	19.0	1705490892	11.856117	"Beautiful semi-obituary + personal impact report.Odersky has done very impressive work (I only recently learned about his work on TurboModula-2 - cool!), but his work is not focused on
simplicity as W..."		jll29
32533106	12.288371	-7.528241	comment	5.0	12.5	1661012079	12.837851	"My experience using channels in Go, was that I replicated state across ""actors"", similar to microservices (which is one of many problems that microservices have vs a monolith). Worse, this state is no..."		klabb3
32558329	11.817221	-7.2072945	comment	5.0	15.5	1661208792	-8.939948	As someone who owns multiple label makers and organizes my utensils by type when I put them into the dishwasher I really like Mypy. Cool writeup, good points. I think a lot of people (ML scientist peo...		codekansas
32559001	11.805683	-7.123422	comment	5.0	14.0	1661213745	-9.036822	"Painpoint with type annotations: not being able to reuse ""shapes"" of data, e.g. struct-like fields such as TypedDict, NamedTuple, dataclasses.dataclass, and soon *kwargs (PEP 692 [1]) via TypedDict.Ri..."		tony
32562283	11.842878	-7.1995163	comment	5.0	16.0	1661245907	-8.978649	"The more I think about it, the more I think that the controversy around static type annotations in Python boils down to this:  Improved readability

This is very subjective, and is particularly sensit..."		j4mie
32576916	11.680939	-7.265172	story	5.0	18.0	1661333070	-8.842407	To Dissect a Mockingbird: A Graphical Notation for the Lambda Calculus (1996)	https://dkeenan.com/Lambda/	sanroot99
32632440	11.808337	-7.348975	comment	5.0	15.5	1661723566	-8.8572445	"I have yet to find any nice easy ""normal"" (like Typescript or Dart) statically typed languages that can be easily embedded. In the Rust space there's Gluon which is statically typed but has a really w..."		IshKebab
32634932	11.720807	-7.0958533	comment	5.0	23.0	1661749090	6.975771	Wasted 10 years programming because of OOP.Better late than never. Just use function and what you need is really just Data structure + Algorithm.DDD, Design patterns,.. or complicated things just born to fix the OOP methodology.		revskill
32638218	12.1396475	-7.0885196	comment	5.0	16.0	1661781048	9.70937	Did a personal web project and chose TypeScript to see what the rage was about.I spent a ridiculous amount of time trying to design types. At some points I couldn't figure it out, or I ran into some l...		wnolens
15660904	11.652309	-7.917451	comment	5.0	48.5	1510218146	10.219124	Recently I have had the opportunity to write a microservice in Go. It was a very refreshing experience switching from Scala. Go is a lot faster to compile and runs with a far smaller footprint. The ch...		trumpeta
15668490	11.686126	-7.2650676	comment	5.0	17.5	1510298430	9.240241	Some thoughts as I read through this (I'm far from an expert in PL, so... forgive me any naivety, please).I can't decide if I like the pipeline operator (1). Is it really better? Perhaps I'm just used...		DonaldPShimoda
15668664	12.034831	-7.754774	comment	5.0	16.0	1510302289	10.436074	"He can't find the documentation for the pipeline operator.
And he posted examples from ReasonML rather than F# and OCaml.
For reference this is the documentation for the pipeline operator in F#:
https..."		tigershark
15671984	11.656727	-7.9627028	comment	5.0	27.0	1510339800	10.235194	You are not wrong.But I think there is more to it. I have used Go (almost) exclusively for private toy programs I write in my free time to relax (sounds weird, I know), so my perspective may be warped...		krylon
15710456	11.796422	-7.3491964	comment	5.0	21.5	1510810278	-8.926536	Somewhat off topic but I think that more and more people are learning (the hard way, unfortunately) how important static typing is, and how dynamic typing makes it very difficult to develop and mainta...		hasenj
15741217	12.151737	-7.8964744	comment	5.0	13.0	1511196412	-3.217112	Study higher level math! Category theory is a brainfuck that exercises that skill well. This book https://mitpress.mit.edu/books/category-theory-sciences doesn't have any real mathy prereqs but is fun.Added benefit from studying math is that its a foundation for a whole bunch of other cool stuff.		imh
15796858	11.630931	-7.915327	story	5.0	5.0	1511874520	10.228431	Ask HN: Good Microservice framework/toolkit for golang		xk0nsid
15820404	12.139481	-7.0311184	comment	5.0	19.5	1512082420	-10.300791	"Having spent my entire career, 15+ years, in ""weakly typed"" or whatever you call it, languages, such as basic, vbScript and JavaScript I don't get this type hype. In ""unsafe"" languages that have overf..."		z3t4
15831233	11.730616	-7.0459876	comment	5.0	13.5	1512208821	-10.55774	"These kind of hidden extensibility in built-in functions make even seemingly simple code not work as expected:  [""1"", ""2"", ""3""].map(parseInt)

  > [1, NaN, NaN]"		hdhzy
15842138	11.758422	-7.3119016	comment	5.0	14.0	1512372239	-0.6009144	I had a similar idea some time ago, that all the code should be write only. That is, you should always write new functions (and give them new names) instead of trying to rewrite them (if the spec chan...		js8
15877599	11.669267	-7.6915965	comment	5.0	47.5	1512724460	10.147444	Yeah, good luck getting generics.		issaria
15886342	11.820472	-7.3143425	comment	5.0	19.0	1512835317	-6.4943876	I sometimes like to explain things the other way around. Immutability being version control for program state.I rarely use functional programming but I certainly see its appeal for certain things.I th...		BenoitEssiambre
15885822	11.952886	-7.767202	comment	5.0	15.5	1512828146	10.374509	Unrelated: I'm obviously quite biased, but I generally like Haskell code for pseudo code like things, because it does away with a lot of syntax specific cruft, and stays close to the math it's usually...		Tehnix
15895167	11.60701	-7.9376144	comment	5.0	17.5	1512966679	10.166426	I agree on Mohawk. Mohawk would be more worth it if score degraded a little more slowly. As it exists, Mohawk is a one-way ticket to the bottom of the scoreboard because it's so difficult to stay aliv...		jsmthrowaway
15995165	12.049907	-7.681557	comment	5.0	23.0	1514050313	10.458713	"I also work at Facebook. These comments do not reflect any internal wisdom at Facebook. The article should probably be retitled ""...from a junior front end engineer.""Facebook uses Haskell internally f..."		madhadron
15995597	11.929315	-7.4790125	comment	5.0	12.5	1514055100	7.254199	I'm taking down this post. I just posted this as a side comment to explain a sentence on my latest blog post. This wasn't meant to be #1 on HN to start a huge war on functional programming... The thou...		vjeux
16005399	11.790882	-7.2882504	comment	5.0	24.0	1514230603	6.8367567	Have you considered that many people aren't particularly fond of deciphering complicated math equations?For them, your argument is in favor of avoiding functional languages. Too math-like! A step-by-step procedure might be simpler to understand.		skybrian
16004819	12.166335	-7.5133805	story	5.0	44.0	1514221630	-10.650802	Reflecting on F# in 2017	https://medium.com/@_cartermp/reflecting-on-f-in-2017-5ac67fb138ff	dustinmoris
16043161	12.266332	-7.2682424	comment	5.0	25.0	1514756553	7.1025224	"The notion of the function point metric is explained in [1]: ""the amount of business functionality an information system (as a product) provides to a user"".  The IFPUG report in the article explains i..."		robertkrahn01
16089715	11.871665	-7.6264167	story	5.0	140.0	1515309215	10.301862	Typesafe Neural Networks in Haskell with Dependent Types	https://blog.jle.im/entry/practical-dependent-types-in-haskell-1.html	KirinDave
16102260	11.602143	-7.7993755	comment	5.0	20.0	1515456749	10.202934	I mean, generics are kind of go's whipping boy. Lacking generics means you end up with copy/pasted code for utility functions that should be part of the go stdlib in virtually every project. It also m...		stouset
16190071	11.592707	-7.0297017	comment	5.0	16.5	1516397668	7.7424383	"This is inconsistent and no longer Java.The -> is not a good idea and break <something> should be return <something>. The -> throw e; ""sugar"" is just ridiculous!"		nikolay
16212481	12.324001	-7.0398736	comment	5.0	40.5	1516704341	13.17823	Pretty much. I used to use Perl 5 a lot but I never considered using Perl 6 and eventually moved on from the Perl ecosystem altogether. The huge advantage of Perl ~10 years ago was the massive amount ...		simias
16213308	12.357275	-7.0321684	comment	5.0	15.0	1516713418	13.164275	I spent a huge amount of time in my 20's writing Perl 4 & 5 scripts.  Even though I no longer use Perl, I still feel nostalgic about it.That said, I can't find any reason to pick up Perl 6 and start l...		crusso
16245402	11.812123	-7.2250032	comment	5.0	23.5	1517042603	-9.001072	C# does not in any way represent the best that static typing has to offer. Try F#, Haskell or OCaml seriously before discounting static typing. These functional languages offer much better safety (e.g...		willtim
16256701	11.706982	-7.285675	comment	5.0	15.5	1517222502	-8.615294	Author here. The theoretical background can be found in:https://arxiv.org/abs/1407.2650https://arxiv.org/abs/1701.01285http://therisingsea.org/notes/MScThesisJamesClift.pdfAs neel_k notes, a good way ...		dmurfet
16265439	11.9602585	-7.650783	comment	5.0	16.5	1517321974	-8.682944	You jealous?Also, picking a right tool for the job can be a real advantage, which makes it easier to deliver features.Getting so close to C implementation (in terms of speed) with Pony is actually ins...		klibertp
16291067	11.663993	-7.9720817	comment	5.0	17.0	1517584156	10.2036495	"Ouch. Not so interesting after all then.Does Go even have some ""standard"" SDL bindings? I was googling the other day (with the aim of learning Go through doing something fun) and I found like 6 result..."		nottorp
16307717	11.63751	-7.0399556	comment	5.0	13.0	1517823715	8.988858	"    return dict(x, **{'fo'+'o': 'bar'}, **y)

The new syntax is some mild syntactic sugar. (Which isn't a bad thing IMO)"		Doxin
16309793	12.037457	-7.672767	comment	5.0	16.0	1517847883	10.226694	Every time I see someone discussing Monads in JavaScript without _mentioning_ Promises, I pause a bit.  To my eyes, aside from a bit of type-juggling which makes Haskell programmers break out in cold ...		signalsmith
16316243	12.297696	-7.6344814	comment	5.0	12.5	1517925833	10.378142	Thanks, this was helpful as someone who's interested in this set of tools but hasn't been following closely enough to understand how they all fit together (e.g. why there's both js_of_ocaml and Buckle...		_delirium
16316246	12.302898	-7.6096334	comment	5.0	18.0	1517925858	10.348581	I've been following ReasonML pretty closely because, to me, it looks like the most promising compile-to-js language (functional, static types, but practical), and moreover, it can really bring a whole...		m0meni
16324904	11.641697	-7.9356365	story	5.0	65.0	1518016565	10.156619	Go Library for the VMware vSphere API	https://github.com/vmware/govmomi	alexellisuk
16331964	12.257461	-7.55378	story	5.0	10.0	1518097414	-11.346814	Ask HN: Learning Kotlin if you don't know Java		outsideoflife
16356477	11.995439	-7.746599	story	5.0	105.0	1518408705	10.5109	Haskell developer experience in NixOS	http://www.kuznero.com/posts/nixos/haskell-devexp-in-nixos.html	allenleein
16386489	12.036234	-7.2207656	comment	5.0	23.5	1518720768	2.4393747	"I don't know. André Staltz is a great programmer, but I can't help but think what seems ""opinionated"" to him about promises boils down to the fact that they don't perfectly match certain quasi-ideolog..."		_greim_
16391708	11.669674	-7.658733	comment	5.0	13.5	1518782537	9.593979	I've never quite understood the benefits of async/await over go-style csp. It seems to me that its far better to just write sequential code all the time then mark all the points where you add parallel...		RX14
16414389	12.166569	-7.0934787	comment	5.0	20.5	1519062973	-10.418049	"What would you consider to be a ""good type system""? I find typescript to have one of the most sane and still strict type systems of all languages that doesn't fall into the extreme functional spectrum or those that care about memory ownership."		Too
16415066	12.086246	-7.8360333	comment	5.0	17.0	1519068596	10.4668455	> One of the reasons I'm using OCaml/Elm in my new startupWhere do I apply? ;-)(To prove the point: yes, I'm one of those passion people, moving to Denmark to work in OCaml full-time, before working in Clojure full-time. Now someone give me an Idris job, heh!)		LeonidasXIV
16417976	12.017783	-7.538608	comment	5.0	13.0	1519103129	7.3087616	I wonder how to become a good functional programmer. I think I'm already decent at procedural/OO.Do I need to have a strong maths background? I didn't learn it very well at university and this worries me. Many functional language fans seem to have degrees in maths.		b0rsuk
16419669	12.013583	-7.761819	comment	5.0	30.5	1519127716	10.412997	Just to point out the probably obvious thing: that's only one type of monad (the state monad). There are many other things which form a monad and can't be represented easily in JS or other imperative ...		pka
16422452	11.966329	-7.620558	comment	5.0	28.5	1519150337	10.350931	Pure FP is just using math as its primary source of programming patterns and techniques, while most other languages, like OOP, use arbitrary conventions to abstract code. Because mutation gives you tr...		proc0
16424036	12.087972	-7.8225126	comment	5.0	15.0	1519159602	-2.9625127	"You can derive all other math branches with CT, so yes, it is more abstract. It is ""higher level"" (in the same sense of programming languages) than other maths."		proc0
16428686	11.9797125	-7.726854	story	5.0	191.0	1519212696	10.398113	Some Notes About How I Write Haskell	https://blog.infinitenegativeutility.com/2017/12/some-notes-about-how-i-write-haskell	chopin
16436840	12.466435	-7.034988	comment	5.0	14.5	1519298837	12.376667	"Could you give an example code snippet that ""reads more naturally"" in Ruby than in Python?I'm an amateur programmer (Python, JS) and I have been wondering for a long time if there is a language more readable than python."		glaberficken
16444888	12.282921	-7.3147345	story	5.0	102.0	1519372496	7.026638	Mobile Smalltalk	http://simberon.blogspot.com.au/2017/11/mobile-smalltalk.html	mpweiher
16494156	12.00999	-7.174907	comment	5.0	21.5	1519925714	9.07477	"So glad someone captured this talk!At the 15 minute mark, he introduces a new paradigm for asynchronous IO within render functions; see a screenshot here: 
https://www.dropbox.com/s/wybqgtftuyqipk8/Sc..."		btown
16497815	11.98593	-7.7267838	comment	5.0	17.5	1519951271	10.422366	Is it just me who cringes heavily reading this? A single Haskell enthusiast decides to code up something in Haskell despite it doesn't fit the infra and most people don't know it. And they do this while Python already has SQL parsers. WAT.		chx
16510741	11.920404	-7.6882973	comment	5.0	14.0	1520102135	1.2247202	I’ve had a Haskell program fail in exactly the same way, though - removing a debug statement caused a program to start crashing - even though the lazy functions were completely pure.We had a numeric c...		jes5199
16516625	12.080529	-7.213872	comment	5.0	13.0	1520196498	9.162045	About two years ago I opened up a smallish JS file (~100 lines ) and it contained 47 promises, some on the same line.That was the day I decided JS had gotten way too far up it's own ass and abandoned ...		fancyfacebook
16525791	12.309734	-7.5049367	comment	5.0	15.0	1520294872	12.843119	From a quick skim of it I don't see any mention of the real difficulty I have encountered with the Actor model in practice: managing imbalanced actor workloads.If you consider a simple chain of actors...		zmmmmm
16549120	11.635827	-7.9492354	comment	5.0	12.5	1520557485	10.209953	So what are the best examples of large programs written in go?		WesternStar
16575686	12.197429	-7.612509	comment	5.0	13.5	1520945550	-11.100534	"Could it be true, erlang and clojure are assuciated with higher income both worldwide and in US?
A little back, I remember, functional programming was thought as academic and not fit for production. Has that changed? This is interesting and almost too good to be true."		hamilyon2
16596844	11.9580555	-7.702453	story	5.0	24.0	1521151014	10.39107	Kalium – idiomatic source-to-source translation of Pascal into Haskell	https://int-index.github.io/kalium/	networked
16606019	11.903333	-7.337878	comment	5.0	29.5	1521274122	7.0490355	The programmer's perspective:The phrase 'object-oriented' means a lot of things. Half are obvious, and the other half are mistakes. - Paul Graham.Implementation inheritance causes the same intertwinin...		contingencies
16606619	11.792053	-7.1572523	comment	5.0	14.5	1521288710	-8.919744	I took over the maintenance and enhancement of a customer's eCommerce site.It's written in Python, using an ancient framework - Pylons.The person who originally designed and wrote it, coded large supe...		scarygliders
16607248	11.917122	-7.358023	comment	5.0	15.0	1521298903	7.0862646	I think the problem is more that OOP and FP teach that the solution is in the language constructs, when in fact the solution is in the developer.OOP and FP are typically taught as outputs. You take a ...		TheOtherHobbes
16609654	11.78542	-7.352575	comment	5.0	13.0	1521329492	-5.5143285	"The distinction between ""implementing"" an interface and ""inheriting"" a base class is largely just a Java-ism.To some extent, it's a distinction without a difference - at a semantic level, Java only di..."		bunderbunder
16630170	11.806054	-7.200126	comment	5.0	16.0	1521563937	-8.988172	> In Python I can get a lot done and really don't miss types at allNo wonder, because Python has types (well … most everything does; but Python isn’t unityped [1]). It’s even relatively strongly typed...		klmr
16647779	11.837806	-7.2549105	comment	5.0	19.0	1521719692	8.732395	I have trouble articulating this point, but I never understood the argument why you’d want getters or setters at all.From my point of view, your data structures are your API.  Attempting to hide them ...		ninkendo
16727612	11.920952	-7.450546	story	5.0	43.0	1522578170	7.2754297	When Functional Programming Isn't Functional	https://www.leadingagile.com/2018/02/when-functional-programming-isnt-functional/	pieterr
16732559	11.932657	-7.4667587	comment	5.0	22.5	1522647463	7.3088026	The term only has become muddled in the minds of those that don't want to learn, but have an interest in using it for marketing purposes — just like how people tried to redefine what Open Source means...		bad_user
16755571	12.290945	-7.3114448	comment	5.0	14.5	1522855361	7.076837	The only people I've heard of using Smalltalk at all other than in dogfood situations are people using Gemstone.https://en.m.wikipedia.org/wiki/Gemstone_(database)		monocasa
16756900	12.056221	-7.2245874	comment	5.0	12.5	1522862710	9.181777	OT; but can anybody can hint me to a good ressource where to learn more about Promises and how to use them correctly?		entropie
16777800	11.637134	-7.205989	comment	5.0	23.0	1523051679	8.761299	> Most of these data structures support in-place copy-on-write mutation, which means that if you're the sole user of a data structure, you can update it in place with a huge performance benefit (about...		elihu
16780199	11.658739	-7.3937902	comment	5.0	14.5	1523097614	-8.686596	If it isn't the type problem, then what is the type signature of the shift operator?		toolslive
16809783	12.31355	-7.030815	comment	5.0	14.5	1523444080	12.626318	The double standard is that people still stick to Python despite those problems. If we're being honest and all conspiracy aside, imagine the same story for Ruby (a very similar language in terms of ca...		VeejayRampay
21036338	11.886321	-7.359265	comment	5.0	18.5	1569084252	7.084483	The author despises OOP, and I agree with him there. I would add that OOP can be particularly bad for games, because often times the OOP vocabulary clashes with the game's own vocabulary: the game its...		xamuel
21047358	11.630678	-7.92556	comment	5.0	13.0	1569232224	10.15782	Author here. I'm fairly new to Golang too and it's my first project.Regarding the number of onion addresses available you are wrong. Addresses are encoded in Base32 which means there are 32 characters...		creekorful
21049909	11.8311	-7.260473	comment	5.0	14.0	1569253084	6.9728017	So true.  Generally, whichever one best matches the feeling best is how I go.Some things really feel like objects, they've got little personalities, friends, parents... a whole list of talents and cha...		seph-reed
21049967	12.07928	-7.562867	comment	5.0	13.5	1569253473	10.59878	FP is fun, but there aren't many good languages for it. Haskell is too academic, Clojure is fun but hasn't taken off, Scala is too complicated (Java with FP shoehorned in, who thought this was a good ...		patientplatypus
21065831	11.8961315	-7.147748	comment	5.0	15.5	1569367689	9.042137	"In javascript anywhere you see await, you've introduced an explicit scheduling point. There are cases where even in a single threaded env you want to ""wait"" until some other async process is complete...."		shanemhansen
21066055	12.03542	-7.188082	comment	5.0	16.5	1569369293	9.164552	One use case I often find is a caching layer between JS and a HTTP call. If there are 2 calls to a non cached endpoint, the HTTP will fire off twice before caching the result. You can work around this...		PetahNZ
21101506	11.642471	-7.330027	comment	5.0	21.0	1569690606	-8.748569	> Bad point. Type checkers only check fairly simple properties of your program.Bad bad point. There are statically-typed languages with fairly complex type systems. There are even dependently typed la...		ameixaseca
21112226	12.322659	-7.521361	comment	5.0	12.5	1569824300	12.876175	worked with Erlang lately in a side project, I think the actor model is really cool (and the FP style), but the error messages are not helpful at all (at least for a beginner), I wonder how other people manage.		vasilakisfil
21121193	11.63151	-7.9318166	story	5.0	135.0	1569893467	10.194473	Go Interfaces, the Tricky Parts	https://timr.co/go-interfaces-the-tricky-parts	signa11
21145216	11.988577	-7.7369328	comment	5.0	21.0	1570096200	10.4300375	I've been using Haskell for quite a bit in production. My personal take, as an engineer who is generally skeptical of fancy language features:Plus:- The type system. It can make your life a huge pain,...		gabipurcaru
21145526	11.986126	-7.73046	comment	5.0	19.5	1570099547	10.420082	They do exist.I usehttp://hackage.haskell.org/package/optparse-applicative for small cli appshttp://hackage.haskell.org/package/envparse For any Docker microservicehttp://hackage.haskell.org/package/a...		tiew9Vii
21146879	11.985855	-7.743672	comment	5.0	12.5	1570110504	10.4262705	To play the devil's advocate here: no post speaks about any serious disadvantages of Haskell.So, for a programming language that has so much to offer, why isn't it adopted more?Could it be that it doe...		axilmar
21156820	11.845242	-7.255156	comment	5.0	13.5	1570191411	-8.926725	Skimming the book, it does not use type annotations in its functions. I would talk about type annotations and encourage their use soon after presenting the concept of functions. Agree?		Bostonian
21157855	12.229301	-7.61326	comment	5.0	15.5	1570198198	11.975251	"> ""Sure, Scala will work great! It's future-proof and everyone will love it!""Scala is still the least-bad option for a JVM language.Anyone who can't be productive in Scala (not ""better java"", not ""worse haskell"", Scala) isn't someone you want on your team anyway."		kod
21171084	12.00846	-7.744649	comment	5.0	20.0	1570357622	10.412105	Haskell was used in the first programming class at university and that was excellent. Some people that already know how to program had to throw their preconceptions out the window.  So everyone was ei...		alkonaut
21176677	11.768273	-7.150421	comment	5.0	17.5	1570413626	-6.8461323	"[FWIW, dev work on this was started 7 yrs ago and ended 4 years ago.]
I like many features of this language -- although the feature I don't like is traits/mixins (one of the lang's central tenants), w..."		thelazydogsback
21180919	12.336855	-7.0255017	comment	5.0	13.0	1570457187	13.1916065	Its not dead, but how much new code is being written in Perl? I generally measure th health of a language by how much contemporary use it gets.I used to write Perl but I do not take it out of the tool chest anymore and I see very few Perl codebases in the OSS world.		voidfunc
21180968	12.306215	-7.0260134	comment	5.0	12.5	1570457462	13.177042	"Calling Perl (released 1987) ""one of the first"" programming languages is an extremely revisionist view of history to put it lightly."		phs2501
21227796	12.325142	-7.016677	comment	5.0	14.0	1570823469	13.176977	Genuinely curious - and not trying to be a jerk... but where do you find Perl fits well? I can only imagine needing it if I'm stuck on a legacy OS/strictly governed environment where it's the only option I have. (ie: governmental work etc.)		folkhack
21240559	11.932404	-7.213784	comment	5.0	18.5	1570977242	8.909476	What I am gathering from this is the author is displeased with the concept of bundling modeling of the application domain with the mutation of the state indicated by the same model properties. This is...		bob1029
21240965	11.995107	-7.361783	comment	5.0	15.5	1570981202	7.1357813	"""The Platonic ideal of OOP is a sea of decoupled objects that send stateless messages to one another. No one really makes software like that, and Brian points out that it doesn’t even make sense: obje..."		FpUser
21281989	11.889586	-7.373939	comment	5.0	15.0	1571320016	7.202601	OOP was designed to prioritize encapsulation at the expense of referential transparency. Functional programming was designed to prioritize referential transparency at the expense of encapsulation.You ...		cryptica
21285582	11.94499	-7.6904163	comment	5.0	18.5	1571340769	10.412279	How long does it take the “new programmers who have not worked with Haskell before” to learn and understand all the ASCII-art in the example code? How $ differs from <$ differs from & differs from .On...		dmitriid
21286747	11.931329	-7.3542786	comment	5.0	15.0	1571349692	7.104121	What a coincidence. This sounds exactly like what happens with OOP. Every discussion here gets swarmed with clueless people who think Java is the apex of OO programming, because that's what gets taugh...		gambler
21300917	12.07235	-7.095197	comment	5.0	12.5	1571520940	-10.526783	"  (defn parse-image-links [pages]
        (-> (map #(js/Promise. (parse-page %)) pages)
            (js/Promise.all)
            (.then #(->> % (map :Images) (apply concat) (map parse-image-url) set s..."		Scarbutt
21384543	11.828285	-7.3668046	comment	5.0	25.0	1572328599	-8.938052	Static typing (in any language) is just like training wheels on a bike. It's great to learn with them but eventually, as your skill increases, the training wheels become a problem and then they must c...		cryptica
21409590	11.811686	-7.159352	comment	5.0	18.5	1572534282	7.4970326	These patterns are almost always working around language shortcomings.For example, factories work around the new keyword. The new keyword in Java emits the constructed type into the bytecode, making i...		matheusmoreira
21420655	11.797892	-7.220298	comment	5.0	13.0	1572625938	-8.961402	Is there actual hard data out there that suggests that Python provides significant benefits over a statically typed compiled language?I’ve been thinking quite a bit about how it seems that despite how...		ilovecaching
21422353	12.243459	-7.2866144	story	5.0	21.0	1572633850	7.078381	Smalltalk is not a perfect language. What are its shortcomings?	https://itnext.io/smalltalk-is-not-a-perfect-language-what-are-its-shortcomings-72ac93b1ef0d?source=friends_link&sk=824399d2e9040849d1a82579e51a6574	onig1990
21443508	11.799983	-7.2636604	comment	5.0	12.5	1572886364	7.168565	"This is almost certainly a personal problem, but I can never wrap my head around the ""open/closed"" thing. I'm actually a big fan of the other SOLID principles and use them daily, which makes this extr..."		Someone1234
21450094	11.595835	-7.9289126	story	5.0	46.0	1572934233	10.157044	Debugging an evil Go runtime bug (2017)	https://marcan.st/2017/12/debugging-an-evil-go-runtime-bug/	pmoriarty
21478077	11.942669	-7.740294	comment	5.0	12.5	1573166682	10.437492	"Dear awesome Haskell writers. You are writing great articles but I can’t understand the code examples as Haskell is too far from the programming languages. Can you provide examples in TypeScript / Rust / Swift / Reason or another C like language? If not, I’m curious why?
Love, Iddan"		iddan
21485400	11.624815	-7.8349805	comment	5.0	14.0	1573238868	9.867617	Wait, is that true?  I thought that the Java packages like Hibernate were just using method attributes and reflection...doesn't Go have the ability to add attributes to structs and a working reflection library?		tombert
21487004	11.917924	-7.4577246	comment	5.0	17.0	1573248495	7.2952147	Purely functional algorithms and data structures are typically slower. Imperative code is also more concise than equivalent functional code.The only real benefit of functional programming is that it m...		h91wka
21488315	11.62058	-7.949888	comment	5.0	12.5	1573257635	10.235136	Lots of trivial things are errors (like unused variables)My learning experience with Go ended when I happened upon this.  Unused variables aren't even worth a warning, and yet it is absolutely impossi...		mynameishere
21494486	11.672985	-7.7846866	comment	5.0	19.5	1573334873	10.39973	> the term normally refers to functional correctness, i.e. that the program satisfies the specification, not that it doesn't have undefined behaviorA program that has undefined behaviour is not correc...		NOGDP
21508679	12.32958	-7.0323906	comment	5.0	17.5	1573504961	-11.962943	Is it officially appropriate to talk about Perl in the past tense?		ianai
21523924	12.319165	-7.0265155	comment	5.0	19.0	1573653068	-8.459187	This gets it exactly backwards, IMHO. It’s all about what Perl needs: more Perl jobs, more Perl classes, more Perl apps. But what drives adoption of a language are the ways that language satisfies wha...		smacktoward
21553048	11.631206	-7.795975	comment	5.0	17.5	1573917669	10.172475	> Just Enough Batteries IncludedThis is just an anecdote, but recently I decided to give golang a spin, and wrote a small command line utility in it.I won’t tell you the pain of trying to find an argu...		oefrha
21555782	12.060667	-7.154941	comment	5.0	24.0	1573949924	-13.934831	While I can understand why somebody would want to use Lombok, this is actually very misguided.If you want to program in better language, just go and use better language.The most important strength of ...		lmilcin
21561966	11.953307	-7.300151	comment	5.0	18.5	1574052558	7.1164975	"While it's always dangerous to criticize a computer legend, I would add one more thing that I believe Alan Kay ""got wrong about objects"": objects are extremely bad at representing most types of proble..."		abernard1
21567246	12.284873	-7.309879	comment	5.0	14.0	1574104711	7.1172776	Who actually uses Smalltalk? All I've ever seen is people talking about how great it is. What are some big examples of popular open source or commercial software built with it?		aphextron
21590842	12.017867	-7.4294205	story	5.0	119.0	1574302411	7.340622	Functional Imperative Programming with Elixir (2018)	https://bitwalker.org/posts/2018-03-18-functional-imperative-programming-with-elixir/	type0
21602639	11.993206	-7.4814215	comment	5.0	28.5	1574398173	7.1674056	from a programming perspecting it looks really un-readable if you don't use FP.I don't mean this as a slight, and I myself am slacking in the same regard, but it's depressing to me that this attitude ...		adrusi
21613617	12.02432	-7.812353	comment	5.0	16.5	1574508915	10.417994	This is why I've never understood what it is. I see words, (and it's not that I don't understand what those words mean) but I simply don't know what is meant by them arranged in this way.There's some ...		beaker52
21619647	12.001995	-7.777769	comment	5.0	14.5	1574593404	10.394402	how often does it happen, that you'd want to swap effects without changing program code? I don't think it is a strong selling point.As someone who is interested in FP, but still at the beginning of the journey, I found the blog post interesting to read, especially intuition for every Monad.		rossmohax
21679989	11.619232	-7.95137	comment	5.0	21.0	1575263797	10.244449	So, isn't this a strong argument against Go? At the point that you need to start devising clever workarounds to stop bad behavior from your runtime, it's time to find a new language.		brian-armstrong
21685366	12.141491	-7.528532	comment	5.0	32.5	1575312152	-10.590501	"As a big proponent of F# it annoys me how much one still needs to fight ""but M$"" arguments if I point out a thing that F# does well.  The same thing seems to happen when discussing Haskell with people..."		JNRowe
21692046	12.016102	-7.758991	story	5.0	12.0	1575379645	10.426092	"Ask HN: What is the best way to learn Haskell for “real world use"" (in 2019)?"		bananapear
21705146	12.375181	-7.7210574	comment	5.0	16.0	1575483559	11.934946	And, Scala is Kotlin without the boilerplate. Scala is the most expressive and powerful language on the JVM, hands down. Kotlin is just a poor imitation. Of course, Java is way worse than either, but ...		smabie
21706323	11.73749	-7.733904	story	5.0	83.0	1575489786	-7.0083594	Segmentio/encoding: optimized drop-in replacement for Go's encoding/JSON package	https://github.com/segmentio/encoding	fullung
21711603	11.99424	-7.765518	comment	5.0	12.5	1575546198	10.400529	Oh for the day when monad tutorials and explanations don't outnumber useful Haskell programs with a purpose other than programming a computer by many orders of magnitude.The list of such programs hasn...		harry8
21727996	12.248586	-7.5480137	comment	5.0	37.0	1575684815	-11.37166	I disagree: they should just dump the whole ecosystem. Kotlin is a shabby bandaid, not because the language isn’t good (no comments there) but because the substrate is a mess of bloated, terrible, OO Java nonsense. Android development is just awful no matter the language.		sidlls
21741884	11.732327	-7.3950443	comment	5.0	14.0	1575892119	-8.8319235	Curious: from what I can see, a type system is really just an embedded declarative DSL for doing set algebra.So is there a technical reason why education and implementations always intertwine it with ...		hhas01
21752038	11.602291	-7.9362774	comment	5.0	17.5	1575983033	10.239471	>A Go project should only require the Go compiler to build successfully.But they don't. The go compiler doesn't support yarn, npm, protobuf, open-api generators, doc generators like md2man, go-bindata...		Foxboron
39102518	11.640806	-7.978957	comment	5.0	16.0	1706013273	10.211499	"> Trying to remove the red/blue split will not work, and you'll only be pretending it doesn't exist.Go managed to so it. What exactly would ""you're only pretending it doesn't exist"" mean in context of Goroutines?"		bheadmaster
39177837	11.8335085	-7.1729107	comment	5.0	14.0	1706544141	-8.987208	Summarizing quote:“Python type hints are a core part of the language, they even have standard library modules (typing), and yet they don’t do anything when used in that language without some external ...		teddyh
39178141	11.745357	-7.206406	comment	5.0	15.5	1706545390	-8.809685	"In Python it's common to have functions whose return types depend on the run-time arguments.For example:    def fooify(x):
      if isinstance(x, list):
        map(fooify, x)
      else:
        x * ..."		posix_monad
39180711	11.801507	-7.17591	comment	5.0	23.0	1706554661	-8.976943	Using static typing in Python is a serious mistake. The point of static typing is to allow an compiler to compile your code for performance reasons and nothing else. People do not normally compile Pyt...		ReflectedImage
39183324	12.007282	-7.707367	comment	5.0	16.5	1706565675	10.454866	After reading the article (BTW a good one), one thing intrigues me: why the author left Haskell for Lisp(s) ?		huqedato
39209684	11.605014	-7.0178127	story	5.0	55.0	1706736689	8.830534	Non-deterministic execution of Python functions	https://gitlab.inria.fr/cpaperma/nondet	cha42
39246016	11.909009	-7.17098	comment	5.0	14.5	1707004815	9.083333	This might be a silly question, but what would be the downside of a single threaded language similar to javascript, but where every function is just 'async capable' and can always be non-blocking, wit...		bluepnume
39282855	11.649518	-7.9655128	comment	5.0	13.0	1707265202	-5.8083067	If you find the official release notes a bit dry, I've made an interactive version: https://antonz.org/go-1-22		nalgeon
39284733	11.654288	-7.975168	comment	5.0	20.0	1707282487	10.234339	In my CTO newsletter I recently wrote about TS vs Go releases, with Go 1.22 as an example. TS gets more and more complicated with each release, catering to the power users. Go adds things that makes i...		KingOfCoders
39286768	11.617572	-7.9704328	comment	5.0	13.5	1707301370	10.182831	On the other hand, I advise you NOT to use this kind of library and write simple, fast go code most of the time, with the occasional generics helper. Why the hell would I clutter my code with, for example:  https://github.com/samber/lo?tab=readme-ov-file#fromentries-...		puika
17905248	11.84129	-7.7069263	comment	5.0	21.5	1536013089	10.392554	"I'm reminded of one of my favourite HN comments on Haskell:'There's something very seductive about languages like Rust or Scala or Haskell or even C++. These languages whisper in our ears ""you are bri..."		hhmc
17905694	11.748917	-7.352234	comment	5.0	14.0	1536020110	-8.986604	I think Rich Hickey described it pretty well when he said (paraphrasing from [0]) that static languages present the programmer with neat little puzzles to solve that feels like we're writing applicati...		zengid
17914276	12.267808	-7.2821603	comment	5.0	24.0	1536109301	7.138447	I really wonder what the software world would look like today if the Smalltalk environment had predominated. It seems like various ideas from the Kay's group get reinvented from time to time, but we i...		goatlover
17915933	11.659456	-7.936701	comment	5.0	15.5	1536134247	10.209026	"I really don't understand why go doesn't have generics. Shouldn't it be even easier because go has no inheritance?
So the problem of covariance and contravariance goes away.Seems really strange."		Sinidir
17922258	11.646916	-7.034414	story	5.0	77.0	1536184755	6.9971013	Suffering-oriented programming (2012)	http://nathanmarz.com/blog/suffering-oriented-programming.html	whalesalad
17933179	12.155449	-7.818843	comment	5.0	17.5	1536316109	10.41684	What is the probability of Ocaml/Reason becoming mainstream?		galfarragem
17933217	12.114989	-7.7329392	comment	5.0	21.0	1536316694	10.44348	"Could someone from the ocaml world comment on Typescript vs Ocaml ?Is Typescript as close you get to Ocaml world... without writing a ""ml"" ?"		sandGorgon
17933292	12.0901	-7.836156	comment	5.0	13.0	1536317672	10.446204	"I'm not sure why this is linked. This online toplevel is very old.
People who want a more modern version, with more exercises should follow the online MOOC [1] or use this website [2].
People who just..."		Drup
17937518	12.028982	-7.82394	comment	5.0	14.5	1536353365	10.406081	"Sort like monads I imagine as soon as you understand it you lose the ability to explain. I have given up ""understanding"" them and just try to understand when and where to use them."		th0ma5
17949703	11.779432	-7.1230083	comment	5.0	15.0	1536559383	5.0849314	I've written software over a decade and I loath the design patterns book.I would not give it to a beginner as it would corrupt their mind with useless drivel .It's authors exhibit themselves as morons...		fsloth
17976476	11.854534	-7.1888146	comment	5.0	16.5	1536820085	-8.972885	>A lack of typing puts an upper bound on the complexity of the code that effectively limits the line-count and relegates the language to 'glue' status.I disagree. I work(ed) at two of the more famous ...		wting
18005734	11.666121	-7.167491	story	5.0	57.0	1537191012	7.3958163	Pycket: A Tracing JIT For a Functional Language (2015) [pdf]	http://homes.sice.indiana.edu/samth/pycket-draft.pdf	tosh
18045386	11.712987	-7.204135	story	5.0	75.0	1537611827	-8.564568	Lambda lifting	https://en.wikipedia.org/wiki/Lambda_lifting	agumonkey
18050513	11.651142	-7.9110317	story	5.0	24.0	1537700891	10.270222	Monitoring Go Applications with Monit	https://boakye.yiadom.org/go/monit/	yawboakye
18056735	11.62254	-7.9543357	comment	5.0	15.5	1537788249	10.218831	>How did we wind up in this ugly situation? The problem I believe stems from some misconceptions, and some historical precedents in the Go community.   First the Go community has long touted static li...		coldtea
18056863	11.928063	-7.2951207	comment	5.0	15.5	1537789796	-10.446726	I highly recommend playing with CLOS (or one of the Scheme flavored knockoffs like GOOPS in Guile or Swindle in Racket) for anyone who hasn't but works in OO languages (probably most working programme...		CamTin
18056652	11.627512	-7.9475365	story	5.0	99.0	1537787299	10.21973	On Go, Portability, and System Interfaces (2015)	http://garrett.damore.org/2015/09/on-go-portability-and-system-interfaces.html?m=1	Annatar
18060861	11.9118185	-7.3750443	comment	5.0	30.5	1537818805	-3.7583048	Computers are still imperative, so all functional code is arguably syntactic sugar over that core causing a lot of leaky abstractions to show up all over the place.I think the problem with Object-orie...		Retric
18062543	12.288815	-7.3103147	comment	5.0	12.5	1537833780	7.13667	So where do Smalltalkers and Lispers go?		shalabhc
18081266	12.312543	-7.553862	comment	5.0	13.5	1538006526	12.863119	By the way, I've got a question to programming language engineers and people keeping track of emerging and experimental languages: is there a language where everything (or almost everything, excluding...		qwerty456127
18123204	11.757184	-7.1127725	comment	5.0	15.0	1538497937	5.1282477	"What makes this language ""declarative""? It looks pretty imperative to me."		tlrobinson
18126487	12.053124	-7.6125803	comment	5.0	19.0	1538522137	10.38532	If introducing a functional language was the aim (EDIT: that's my reading of the motivation here) then, given the political context described, I can't help but feel a better choice would have been F#....		godid
18126952	12.213994	-7.6617117	comment	5.0	16.0	1538529289	11.868729	Yep let's bring a language into a company where:- it's very hard to hire people- lack of libraries- lack of support / community- difficult learning curve for the languageWhere I work some teams are dropping Scala because hiring Scala dev is hard, so imagine Haskell...		Thaxll
18126539	12.000734	-7.763756	comment	5.0	27.0	1538522787	10.45023	I like haskell. It reads like a math proof more than a cooking recipe. very elegant. I'm a math guy and i'd love to get back to it in my free time.But i don't think i could recommend it for the enterp...		timwaagh
18141782	12.020181	-7.751461	comment	5.0	36.0	1538673623	12.759693	"According to the author Go make concurrent programming ""the best experience, by far, compared to other popular programming languages today.""I beg to differ. I fail to see why I should choose Go over E..."		erokar
18141856	12.322026	-7.323822	comment	5.0	13.0	1538674107	-8.855323	I really wish someone like Mike Pall (of LuaJIT fame) would work on BEAM to make it computationally as fast as Go on raw performance.		alberth
18159087	11.968776	-7.7230062	story	5.0	86.0	1538892735	10.382145	Löb and möb: strange loops in Haskell (2013)	https://github.com/quchen/articles/blob/master/loeb-moeb.md	improv32
18161192	12.182929	-7.32919	story	5.0	137.0	1538928089	-10.386739	Compiling Lisp to JavaScript in 350 Lines of Haskell	https://gilmi.me/blog/post/2016/10/14/lisp-to-js	allenleein
18172207	11.592818	-7.8614697	comment	5.0	26.5	1539041701	10.042212	"Creating millions of coroutines or ""goroutines"" isn't really interesting by itself. I believe the real questions for me are:1. is Go scheduler better than Linux scheduler if you have a thousand concur..."		the_other_guy
18172859	11.687378	-7.1895404	comment	5.0	14.5	1539051286	9.123956	 In typical Java fashion, there is a project, Quasar, the adds true green thread support to the language. Done by instrumenting bytecode rather than JVM support, but the benchmarks are still excellent...		throwaway83628
18173016	11.60457	-7.8679667	comment	5.0	17.5	1539054254	10.015629	These are good questions and I'd be interested in more authoritative answers, but I'll hazard guesses.1. Go's scheduler is better at scheduling Go. There are well defined points at which a context swi...		weberc2
18197845	11.712285	-7.017459	comment	5.0	14.0	1539300257	9.043372	So this is like the rest and spread operator in javascript (`...`).An interesting observation is that while python has separate operators for lists ( * ) and dictionaries ( * * )—javascript has only `...		runarberg
18213832	12.502315	-7.4929247	comment	5.0	16.5	1539536435	12.91721	Congrats on the release. As someone whose day job is elixir but whose side project passion right now is rust, a high performance, strongly typed, actor model language like Pony is right up my alley.My...		losvedir
18222291	11.62665	-7.8743463	comment	5.0	16.5	1539628165	10.174573	I just want to say that I'm so glad people are developing concurrent languages. The day that concurrency became of paramount importance to computing, all of the old languages became obsolete! That's also why we have Go; goroutines are a major innovation upon threads.		jacinabox
18251533	11.898837	-7.3165226	comment	5.0	14.0	1539892156	7.103246	Someone with 15 years programming OOP told me once: here is the best way to describe object oriented programming: you asked for object “monkey”, and you got the whole jungle, as well as monkey’s bananas.		joering2
18252297	11.9367895	-7.3808894	comment	5.0	18.5	1539898138	7.0646186	For some reason 'arguments' against OOP seem to follow a common pattern. You have said many things against OOP, but you haven't actually presented an argument for why it's bad. I'll present each of yo...		westoncb
18250673	11.83013	-7.198198	comment	5.0	18.0	1539886363	7.0334983	I’d be very wary of hiring an ”OO” dev who can’t reasonably formulate what the SOLID principles are and why they exist.		Sharlin
18251091	11.873453	-7.3481984	comment	5.0	18.5	1539888974	7.075103	I've found that inheritance is very useful in one situation, and adds nothing over mixins otherwise.If a class does two broad things simultaneously then inheritance can work great. For example, a User...		3pt14159
18264932	11.914937	-7.333318	comment	5.0	12.5	1540063277	7.0539865	I personally prefer fully object-oriented languages, as long as it's an option and not a must like in Java.Replacements for OOP are just another fad, in twenty years from now people will come up with ...		13415
18270524	12.2766075	-7.31709	story	5.0	99.0	1540158580	7.0691133	Smalltalk on the JVM	http://www.redline.st/	jxub
18272748	12.1535	-7.8792887	comment	5.0	22.5	1540192275	-3.2109365	For anyone that may want a deeper look into Category Theory from the perspective of a programmer I highly recommend - https://bartoszmilewski.com/2014/10/28/category-theory-for-p...He also covers it all in few youtube series - https://www.youtube.com/user/DrBartosz/playlists		bojo
18288423	12.315816	-7.054643	comment	5.0	28.0	1540337535	13.173549	My perspective is that I'm glad that they are entertaining themselves, but they aren't going to succeed.It is easy to run a subset of Perl 5 faster than Perl 5.  But when you add in all of the feature...		btilly
18314861	12.273095	-7.2938676	comment	5.0	17.5	1540628874	7.1196876	Smalltalk is the product of a very well funded research lab - Xerox PARC. It was not so much a successful product.It's less interesting about think what Apple did with it - because they had other, mor...		lispm
18325933	11.9797125	-7.7280183	story	5.0	126.0	1540803439	10.429677	Writing a Screencast Video Editor in Haskell	https://wickstrom.tech/programming/2018/10/26/writing-a-screencast-video-editor-in-haskell.html	jose_zap
18333071	12.039041	-7.348931	comment	5.0	26.0	1540860435	7.0719733	Allow me one suggestion about Kay, it seems the man knows way too much to be understood by the average us. Not pompously, it's just that when he means A we read B. That led to the drift between Smallt...		agumonkey
18335281	11.925569	-7.3749256	comment	5.0	12.5	1540896043	7.055218	Doesn't OOP have the ontological problem:Does the knife cut the cheese, or does the cheese get cut by the knife? Formally: Is it knife.cut(cheese) or cheese.getCutBy(knife)? And why is the first argum...		man-and-laptop
18335468	11.756501	-7.640461	comment	5.0	13.0	1540898665	-7.1948323	If you intend to write extension for Python, Ruby, PHP, Lua, Node or most of any high level language, you need to write it in C.Want to build a library that can be used in any of the high level langua...		z92
18335207	12.308524	-7.300423	story	5.0	81.0	1540895015	7.093492	Actors for Squeak Smalltalk	https://tonyg.github.io/squeak-actors/	tonyg
18344024	12.172697	-7.311218	comment	5.0	16.0	1540973372	7.187589	"Nope. Smalltalk objects aren't concurrent or asynchronous in any way. Smalltalk ""messages"" are good old method calls."		mbrock
18371568	11.960864	-7.1989436	comment	5.0	13.5	1541268221	9.179439	Let me start off by conceding that you're more knowledgable and experienced than me (which you inferred from my post and attempt at designing a language anyway) and I am in no way trying to challenge ...		shreyasminocha
18382828	11.691843	-7.156214	comment	5.0	35.0	1541430533	-7.061958	"""Popular mainstream languages such as Java or C++ support just one or two separate paradigms""Java, ok. But C++??? That language has everything and the kitchen sink, including pure functional programming (templates)."		atilaneves
18419922	12.288844	-7.297939	comment	5.0	13.5	1541823747	7.054832	Maybe it's my age but I am getting increasingly tired of the same articles about Smalltalk/Squeak/Pharo being on the edge of a breakthrough. Surely Smalltalk is nice and also has its place in the hist...		ofrzeta
18466686	11.630395	-7.1819744	story	5.0	67.0	1542346772	-7.202064	Expresso: A simple expressions language with polymorphic extensible row types	https://github.com/willtim/Expresso	wtetzner
18469817	11.654518	-7.9657736	comment	5.0	20.0	1542386474	10.242159	In case you are wondering why this exists, there is a discussion here: https://github.com/Azure/golua/issues/36		drej
18475736	11.904809	-7.650011	story	5.0	159.0	1542466293	10.369723	A Raft implementation in Haskell	https://github.com/adjoint-io/raft	lambdaxdotx
18505172	11.739115	-7.705279	comment	5.0	30.0	1542827532	10.197332	Of the ones you list, only one has a wide focus, IMO. Three of those will essentially be web development conferences, and I don't know what the hell people do with Go these days, but I'll bet it's mos...		mikestew
18526641	11.896204	-7.3052673	comment	5.0	17.0	1543149883	7.068276	>The vast majority of essential code is not operating on just one object – it is actually implementing cross-cutting concerns. Example: when class Player hits() a class Monster, where exactly do we mo...		adnzzzzZ
18526887	11.7577715	-7.372334	comment	5.0	16.5	1543154434	6.965997	"I've never liked classical OOP much, but multiple dispatch is a lovely paradigm. One doesn't define _classes_ per se, but rather just plain old boring structs.   struct Player
       xp::Int
   end

 ..."		ced
18526949	11.705341	-7.318973	comment	5.0	12.5	1543155447	7.2202077	> One doesn't define _classes_ per se, but rather just plain old boring structs.in which language are there differences between classes and structs ?		jcelerier
18527060	11.853977	-7.332468	comment	5.0	12.5	1543157182	7.105963	I've been programming for 15 years (so I was around for the rise of OOP). There's nothing fundamentally wrong with OOP. I still write a lot of classes. But what I haven't written in a almost a decade:...		hliyan
18532663	12.129052	-7.7272263	comment	5.0	13.5	1543233338	10.453469	From my biased perspective, it could be OCaml thru Reason.The .NET/Microsoft ecosystem is a no-go for a lot of people, and F# doesn't have functors. Being a statically typed language, you don't have s...		jasim
18532849	11.998083	-7.645842	comment	5.0	25.0	1543235631	10.446193	"""I for one can't wait for Typed FP to become mainstream as soon as possible.""This will never happen till there is a typed FP language that has solid tooling, documentation, solid libraries for most co..."		plinkplonk
18562327	11.629934	-7.8759623	comment	5.0	18.0	1543515124	10.0784235	This doesn't seem to be a popular opinion, but I agree. It's such a pervasive functionality in concurrent programs that it really should be a built-in aspect of a goroutine.The problem with context is...		atombender
18565605	11.64749	-7.889841	comment	5.0	38.5	1543538427	10.21214	"I'm pretty excited by the idea of Go getting generics. This has always been my deal-breaker issue with Go and I'm glad that what appeared to be a disingenuous ""let's pretend to be hunting for the trut..."		glangdale
18633989	12.326179	-7.059901	comment	5.0	15.5	1544244465	13.199362	So, I sort of took that away from it, but there's stuff in the gist page like:> The default gist method in Mu re-dispatches to the perl method for defined invocants, and returns the type name in paren...		cwyers
18655582	12.238079	-7.645774	comment	5.0	23.0	1544539681	11.95513	As one who frequently deals with Scala code, I have to say that this guy is right: the Scala community in particular seems to relish in complexity.Scala is a wonderful language and well-designed, espe...		afpx
18693364	11.758315	-7.351863	comment	5.0	13.0	1544973115	-8.848449	About software development, I have a lot of unpopular views about testing.- You should try to write as few tests as needed (and focus on getting as much value as possible out of each test case).- Only...		jondubois
18708933	12.161385	-7.5214825	comment	5.0	13.0	1545156786	-10.617526	Do HN users have any F# references, books, or guides they recommend? I've always been intrigued by F# but haven't found a good project / use case for it, but I suspect that's because I need to know more about it first.		urda
18710185	12.0420885	-7.4726677	comment	5.0	17.5	1545164529	-10.575448	While I really like the concept of functional programming and F# is definitely on my list of practical useful languages to learn, this article is clearly written by someone who doesn't know C# very we...		cgrealy
18766085	11.826385	-7.69088	comment	5.0	18.5	1545869656	10.3832035	The comparison between C++ and Haskell is laughable, and shows that Graydon is missing the most important facet of this:GHC Haskell and Rust with have an intermediate language (Core and MIR + Chalk, r...		Ericson2314
18773097	11.71421	-7.5949025	comment	5.0	13.0	1545948820	10.232827	Why do you say Haskell is an example of this? You can return undefined for anything, and have incomplete pattern matching, where if you don't mention a particular case, there is a runtime crash.An exa...		topmonk
18773471	11.9184	-7.420957	comment	5.0	16.5	1545952016	7.270212	> So yes, just because you use a functional programming language won't help you sell your widgets or make a great product. And you can spend lots of time fucking around with it for its own sake and st...		bb88
18792967	12.2292795	-7.64064	comment	5.0	20.5	1546229639	11.95084	In my current job, I write production machine learning code often in Scala. I had never written a line of Scala before that, had no idea what the idioms were nor even what some of the inheritance and ...		mlthoughts2018
18800351	11.718239	-7.197154	comment	5.0	14.5	1546353803	9.091403	Why were map and filter kept? What can you do that cannot be as easily done with generator expressions?		wodenokoto
18844208	11.902324	-7.431111	comment	5.0	13.5	1546857824	7.2087975	The Red Language has always described itself as functional imperative.  I used to point out to people that functional programming can be imperative and nobody (I do mean nobody I spoke to about this) ...		austincheney
18889865	12.296403	-7.3238745	story	5.0	47.0	1547271255	7.0943475	Smalltalk on Mobile (2017)	http://simberon.blogspot.com/2017/11/mobile-smalltalk.html?m=1	deepaksurti
18893983	11.7702055	-7.3711653	story	5.0	51.0	1547336620	4.894828	The Fourth Type of Variance	https://www.benjamin.pizza/posts/2019-01-11-the-fourth-type-of-variance.html	pplonski86
18897059	12.275688	-7.306802	story	5.0	19.0	1547394123	7.076166	Ask HN: Is it worth learning SmallTalk?		gsaga
18904144	12.273959	-7.0325117	story	5.0	73.0	1547483278	13.18241	Using Perl 6 Grammars: Decompressing Zelda 3 GFX	http://blogs.perl.org/users/sylvain_colinet/2019/01/mis-using-perl-6-grammars-decompressing-zelda-3-gfx.html	leejo
29764098	11.757823	-7.1941214	comment	5.0	13.5	1641080651	-10.283468	> Well, the debate is now over. In order to get IntelliSense to work correctly, bottom-up programming is best. IntelliSense wants every class, every method, every property, every field, every method p...		ninkendo
29806834	12.3438225	-7.0405993	comment	5.0	17.5	1641373982	13.185909	"I find it pretty hilarious that he's picking Perl as a prototypical example of ""today's"" technology and the article is also blatantly advertising Perl books."		gyulai
29835476	12.194015	-7.5573406	comment	5.0	13.0	1641534654	11.889033	"This resonates - I've thought about certain technique and language couplings as ""impedance mismatches"", where the technique itself is fine and good, but the language makes it a horrible experience tha..."		dack
29842487	11.6466675	-7.28121	comment	5.0	14.0	1641578891	-8.922115	Isn't that common for all/most languages that don't require explicit typing?		voltagedivider
29876664	11.719712	-7.134649	comment	5.0	22.5	1641829914	9.2237835	Nope.  Can't stand that Python uses built-in functions for basic things like list, map, fold, etc... instead of methods on base classes.  Here's a super basic example.  Add one to an array [1,2,3] and...		Mikeb85
29937101	11.888902	-7.747432	comment	5.0	21.0	1642180383	-11.130357	Nim is very attractive to a previous CoffeeScript user like me. I used it to build my own [ClojureScript clone](http://calcit-lang.org/), but finally found I really want ADT and pattern matching, whic...		jiyinyiyong
29996023	12.031359	-7.3581514	story	5.0	3.0	1642610536	7.1701884	Ask HN: OOP in Functional Programming Language		mollerhoj
29998957	12.104248	-7.8185077	story	5.0	122.0	1642621517	10.438099	Hotcaml: An OCaml interpreter with watching and reloading	https://github.com/let-def/hotcaml	todsacerdoti
29997901	11.698642	-7.332009	comment	5.0	18.0	1642617101	-8.770197	Yup, I find this completely insane behavior to think that you somehow benefit from types not being there.You just make it way harder for people to understand your code and contribute to it.		mountainriver
30000548	11.7632885	-7.404777	comment	5.0	19.0	1642628265	-8.719334	> Fascination with type systems does not seem to be all that useful in practice.And yet type theory is an excellent way to express all kinds of invariants. The more rich the type system the more you c...		agentultra
30007265	12.265625	-7.520522	comment	5.0	12.5	1642676033	11.909283	Are there any frameworks or bindings for ScalaJS that can utilize the full expressiveness of the language and encourage idiomatic code? Because I would love to use Scala, Kotlin or even Dart compiled ...		udbhavs
30013900	11.964245	-7.4779215	comment	5.0	14.0	1642708749	7.248008	Forgive me if this sounds ignorant, but who is using pure-functional approaches in industry?Again, please correct me if I'm wrong since I've been industry for barely 2 years: back in school functional...		creativeCak3
30046040	11.641307	-7.927564	comment	5.0	14.0	1642945129	10.18793	I don't believe Go is about to get faster, at least not in an especially unique way compared to past releases.Historically the Go compiler has been seeing performance improvements every release, so hi...		xyzzy_plugh
30057096	11.76497	-7.254911	story	5.0	8.0	1643029611	-10.036692	Is async for everyone? [slides]	https://app.pitch.com/app/public/player/5fa67ab4-b618-46dd-a2a0-886c03636953	clmntrg
30077516	11.595339	-7.9007235	comment	5.0	15.5	1643142153	10.181478	Oof trust me from experience you do _not_ want to write a compiler or parser or anything like that in Go. The string support is so limited -- for example you have to implement basic things like revers...		sam0x17
30106811	11.793128	-7.36692	comment	5.0	12.5	1643318125	-8.630037	I’m just some guy that works as a software engineer (i don’t even have a phd) but I’ve always been interested in Type theory.So, a few years back, i found on youtube the lectures Bob Harper gave at th...		Micoloth
30131254	11.601852	-7.94734	comment	5.0	21.5	1643495493	10.131481	Well for one, if it's in Go, it wouldn't need Cgo.		eatonphil
30154762	11.956239	-7.704195	comment	5.0	19.0	1643664799	10.411966	I learned Haskell a few years ago, enough to read it, but not fluent enough to comfortably write it. Haskell scratches a real intellectual itch, related to how it formally captures certain concepts (t...		daenz
30203244	11.612054	-7.9238834	comment	5.0	43.0	1643952662	10.202165	All language stacks get faster over time and redeploying with a new version can improve performance and save costs. Nothing exclusive to Golang about that.Edit - I'm curious as to what is so controversial about this comment? What stack has gotten slower over time?		manigandham
30256331	12.001571	-7.76854	comment	5.0	32.5	1644311598	10.449443	Is it because they might be overqualified, so any company that happens to do haskell (which I can imagine aren't many) are intimidated?I mean how many people here, currently working in language X, wou...		Cthulhu_
30256466	11.986245	-7.74314	comment	5.0	12.5	1644312829	10.4418	But the question really should be: Why are no large software development projects done in Haskell?It is a common language in University CS-classes, so it gets a push from that.What is missing from the platform?		throwaway4good
30258448	11.902435	-7.618603	comment	5.0	15.5	1644328950	10.430165	> But net/net, when a GHC contributor rolls up his or her sleeves, they on average have a bigger range than people who argue about ReactJS vs Ember.In my experience when exposed to dynamically typed l...		Kototama
30261948	11.802073	-7.286464	comment	5.0	20.0	1644343266	-8.930986	"That's in general a problem with dynamic languages with weak type systems. How ""Your code runs without crashing"" is really really != ""your code works"". How do people even manage production python! A b..."		andrepd
30293764	11.921762	-7.358063	comment	5.0	17.5	1644532886	7.017389	How I've seen OOP work at big tech is the following:1. New code base is needed2. Some developer comes up with the master oop abstraction to solve the problem3. Years of dev effort spent with the abstr...		fdgsdfogijq
30294401	11.945444	-7.297622	comment	5.0	19.5	1644536060	7.0790777	Games are actually moving away from OOP by separating out state into a data oriented system.		ummonk
30294823	12.109826	-7.219796	comment	5.0	38.0	1644538139	8.537731	> This is why simulations like say someone making a game or simcity with like relatively independent entities that map to something in real life use OOP.I don't think this is the case, or at least it ...		reificator
30295699	11.917905	-7.3681045	comment	5.0	22.0	1644543679	7.0301185	My issue with OOP is: Design Patterns: Elements of Reusable Object-Oriented Software.I don't take issue with the authors, with their insights, or anything related to the content of the book. It's that...		zamalek
30297602	11.802827	-7.0702443	comment	5.0	14.0	1644559015	-7.1452026	"Hmm, I'm not convinced by the article.One of the best tools I found to really dive into functional programming in JavaScript was Lodash's ""fp"" variant. It will swap the order of the arguments to its f..."		Rodeoclash
30369809	11.76659	-7.380937	comment	5.0	13.5	1645075456	-8.719827	> A polymorphic enough strongly typed language is no longer strongly typed.Oof		brundolf
30386388	12.080759	-7.8688903	story	5.0	104.0	1645195747	10.472805	2021 at OCamlPro	https://www.ocamlpro.com/blog/2022_01_31_2021_at_ocamlpro	gjadi
30407400	11.833493	-7.170258	comment	5.0	18.0	1645378509	9.191384	The general theme of this list is that technology gives us more and more hoops to jump through, then provides some trampoline to jump through them. We're supposed to be eternally grateful. I'm not. I ...		romaniv
30409090	11.845976	-7.249168	comment	5.0	14.5	1645389637	9.194843	Oh yes. I hate async/await so much. If I could uninvent one thing in programming it would be async/await. I wrote async/await code in C# for about a year. I did really try to learn it. I invested a lo...		1ris
30442774	11.66608	-7.8614655	comment	5.0	31.0	1645633452	10.090194	Go is at about the same abstraction level as Java, maybe a fraction slower due to lack of runtime VM optimisations.		melony
30444193	11.684055	-7.886974	comment	5.0	22.5	1645639592	-8.915575	Java (and C# I believe) can also compile to binaries. And golang has a runtime as well.Now what is the advantage again? The Java can compile to JVM bytecode and be better performing than golang, all w...		azth
30470039	11.623845	-7.9321465	comment	5.0	20.0	1645811780	10.14737	To be entirely meticulous about the genealogy, I think Wirth was at PARC in 01976, and what inspired him most there was Mesa; Lampson first described (Mesa's successor) Cedar in PARC TR CSL-83-15, Xer...		kragen
30479543	12.007082	-7.7713876	comment	5.0	17.0	1645895847	10.460363	"Adressing the whitespread conception ""It is hard to programm in Haskell because it is pure"":If you can write python, you can write Haskell. Don't believe me?1. Write your program completely in the IO ..."		schwurb
30502366	11.992874	-7.239295	comment	5.0	14.0	1646069028	9.183444	I'm awaiting for the promise of the function I'm calling to resolve, similar to what I do in an async function. Why is there nothing to wait for?Actually I don't understand why the `async` keyword is needed at all.		endorphine
30519959	11.610242	-7.9332123	comment	5.0	15.5	1646168568	10.183796	Does Go support separate compilation? The approach sounds like a change in the implementation of a generic function (changing the gcshapes) could cause client code to break unless it is recompiled as well. What am I missing?		layer8
30538697	11.754836	-7.3500466	comment	5.0	17.0	1646297304	-8.87767	I often think people don't have a problem with static types and instead would miss the implicit type conversion dynamic typing provides.		raxxorrax
30567261	11.597303	-7.976312	comment	5.0	18.0	1646486093	10.242227	"I feel like enforcing a specific text style is the wrong approach.In my opinion, different people have different formatting preferences and forcing someone to use the ""wrong"" one will lead to slower r..."		fxtentacle
30673770	11.632012	-7.889123	comment	5.0	16.0	1647272619	10.209864	well, here it comes...introducing generics was a mistake. give it a couple of years and golang would be indistinguishable from java		ngalaiko
30677261	11.814627	-7.138977	comment	5.0	19.0	1647287204	5.108482	"10 years ago, in my list of ""Nice things to learn and do to be serious about software engineering"", Design Patterns was probably in the top 3. Nowadays, it doesn't even make it to the top 20. I can't ..."		lmarcos
30688371	11.636154	-7.921517	comment	5.0	17.0	1647366055	10.207255	"WOOO!I have been using the RC at work lately, and I have to say: The generics implementation is quite nice, and RUTHLESSLY slashes boilerplate and copy-pasta.This is going to turn Golang from ""that on..."		honkycat
30691543	11.654999	-7.9236975	comment	5.0	17.5	1647377630	10.183897	I think about Go with pleasure until I remember importing. The miseries I've experienced with modules - the way imports are satisfied......just so hard to understand.  Built-in support for SCM sites l...		t43562
30692922	11.648812	-7.6592827	comment	5.0	63.5	1647384206	10.094976	I wish I understood how people can say 'this will result in so much more weird boilerplate garbage code' as it solves a problem that has resulted in an absolutely ludicrous amount of weird boilerplate...		pie_flavor
30693266	12.239066	-7.6389537	comment	5.0	12.5	1647386569	11.9047	Scala is on its way to die actually, I worked couple of years with lot of services in Scala, they were all replaced by regular Java or C# over the years, Scala missed the train and it's more and more ...		Thaxll
30693915	12.204886	-7.0159187	story	5.0	37.0	1647391726	-10.412686	Type Polymorphic Functions in TypeScript	https://www.zhenghao.io/posts/type-functions	CapnCrunchie
32649170	12.275524	-7.3078513	comment	5.0	22.5	1661860084	7.084986	Anybody here using Smalltalk in production?		mbrodersen
32666866	12.104439	-7.2567506	comment	5.0	13.5	1661972669	8.560546	"IMO, ECS is a better way of doing OO (even on a non-OO language) than OO languages themselves:- Avoid the inheritance vs. composition issue- Entity as a first-class concept (no more Object vs. ""Just V..."		hcarvalhoalves
32763974	12.392795	-7.488765	comment	5.0	19.0	1662635990	12.857356	Please don't design bit/byte string libraries until you understand how Erlang handles them, because that language has by far the best support.  https://www.erlang.org/doc/programming_examples/bit_syntax.h...Here's my OCaml library influenced heavily by Erlang: https://bitstring.software/examples/		rwmj
32768059	11.656196	-7.9738107	comment	5.0	20.0	1662655112	10.242907	As a developer, Go seemed so promising 5-10 years ago. But as a recruiter, I never saw any kind of stable movement towards Go adoption among startups.Hard to tell why that was because functionally and programmatically it’s a really clean, efficient language and tooling stack.		awb
32768288	11.604767	-7.935731	comment	5.0	15.0	1662656129	10.284654	Surprised to see language satisfaction so high. Error handling is very painful, and Go's own tools don't work together (eg. go mod tidy doesn't work properly with `go.work` since being released in 1.18). So many things in the language feel bad for no reason. At least they finally added generics!		kbd
32785706	11.939193	-7.3431087	comment	5.0	20.5	1662762810	6.9580617	I like to think I'm a decently intelligent person. UC Berkeley Mechanical Engineering. I self taught a few years ago and wrote an entire project management SaaS for a certain industry in PHP and jQuer...		phpthrowaway99
32788384	11.601977	-7.9459653	comment	5.0	25.0	1662791819	10.162175	GObject is a real tragedy of the NIH syndrome in open source.In the late 1990s there already was Objective-C. It already had open source compiler support, a battle-tested runtime, a free software desk...		pavlov
32822864	12.251807	-7.618354	comment	5.0	14.0	1663068047	11.929121	I wrote scala for six years and was on the team to first deploy akka in production. I've seen Json libraries come and go while also struggling to read files written with OO and FP patterns intermixed....		adamdecaf
32842129	11.934268	-7.3527036	comment	5.0	17.0	1663183849	7.016231	"We should stop invoking Alan Kay's ancient opinion in OOP discussions. I suggest we rebrand his flavour of programming as ""message oriented programming"" (MOP), thank it for its continuing contributions to the field, and recognize that contemporary OOP is a valid but different solution space."		gmfawcett
32878360	12.3867855	-7.3625093	story	5.0	8.0	1663429018	12.67024	Ask HN: Akka fork – who would be willing to contribute?		sebaz6r
32878412	11.988463	-7.7322702	story	5.0	72.0	1663429421	10.414846	IHP, a batteries-included web framework built on Haskell and Nix	https://github.com/digitallyinduced/ihp	_query
32910535	11.687433	-7.3282557	comment	5.0	35.0	1663675342	9.185035	"The first release to contain bits for Project Loom (the ""virtual threads"" part of the release notes). That is extremely exciting, since it is designed in a way that mostly allows drop-in replacement o..."		royjacobs
32943113	11.973821	-7.0414143	comment	5.0	19.5	1663872923	8.118298	I have a question for those of you who have worked on java..or considered working on java ..and ultimately did golang or something.what would make you choose java :1. is it a better framework than spr...		sandGorgon
32955869	12.097859	-7.8677473	comment	5.0	16.0	1663960308	0.6677784	is there actually companies using OCaml ? other than Jane street ?		gdsdfe
32992777	12.129207	-7.7538905	comment	5.0	25.0	1664266736	10.414164	OCaml is cool, but have you tried F#?		JaggerJo
33002348	11.682497	-7.183778	comment	5.0	12.5	1664320442	9.29431	I wish python would support multi line lambdas. Having to define a separate function often makes thing considerably less readable in my experience.		nicoburns
36550578	12.015522	-7.5526533	comment	5.0	23.0	1688222274	10.25182	Calling I/o side effects makes FP seem hopelessly academic. Everything having to do with the world is seemingly a corner case - the core of the programming philosophy is only concerned with the part w...		sdenton4
36568167	12.2635355	-7.284813	comment	5.0	18.5	1688352660	7.058425	"I'm assuming the ""by the Bluebook"" implementation they're referring to is this: https://github.com/devhawala/ST80It's nice to use, but awkward because almost nobody has a three-button mouse laying aro..."		koito17
36589733	11.91525	-7.18173	comment	5.0	15.0	1688491340	-8.967202	I remember this post from the time and I'm glad we've come so far since then.It turns out the reason static typing seemed like a pain at the time is because we didn't have good tools. You'd write code...		kentonv
36591662	11.786075	-7.343385	comment	5.0	15.0	1688499811	-8.920208	There seems to be a pattern of introducing static types into previously weakly typed or dynamically typed languages. I think this is because people have written many large projects in them, and withou...		Pannoniae
36593590	12.11531	-7.8491707	comment	5.0	20.0	1688511490	-3.0615454	Is set theory more useful than category theory for dynamic types? Seems like set theory is less constrained, like a set can be part of itself by nature, whereas category theory generally doesn't allow...		daxfohl
36605952	12.444544	-7.0223513	comment	5.0	14.0	1688585848	12.403607	Ruby (and earlier, Perl) formalised this with the __END__ section: https://www.honeybadger.io/blog/data-and-end-in-ruby/		jjgreen
36637753	12.442705	-7.568864	comment	5.0	12.5	1688761132	12.867674	The thing I find weird about Erlang's design is that actor mailboxes have no backpressure mechanism, which seems like a pretty big footgun. Go channels have their own quirks, but requiring them to be bounded was a good design choice.		vore
36638289	11.639226	-7.9098144	comment	5.0	16.5	1688763976	1.6734565	Speaking of overinflated egos. While there's no question pike, thompson, and k are a cut above, I think they made assumptions that engineers cannot be trusted.Garbage collection is another such exampl...		elromulous
36650300	12.321034	-7.020343	comment	5.0	18.5	1688863856	13.178957	I will always love perl because it got my career off the ground.  Anyone who doesn’t just learn it is doing themselves a disservice.  It’s similar to SQL in that sense.		mulmen
36670819	11.937806	-7.0249324	comment	5.0	19.5	1689013589	8.015486	The problem with Java's everything-must-be-a-class OO fundamentalism is that a computer is actually has data AND executable code. Java forces everything into a noun (class/data), but some things are a...		prewett
36674325	11.847943	-7.3882046	comment	5.0	13.5	1689031009	7.043761	Except that composition doesn't give you polymorphism.I always though that dichotomy missed the point. You can give-up inheritance for generics, for interfaces (as if those were a different thing), fo...		marcosdumay
36717347	11.64019	-7.8776064	comment	5.0	17.0	1689289880	10.183449	How would you define f in a different language such that f(g()) worked? You couldn’t do that in Go, for instance.		rcme
36744530	11.594447	-7.0354385	comment	5.0	19.5	1689493239	-8.179288	Implicit variable declaration “doesn’t work”, he says. Those millions upon millions of developers creating real world value using Python sure are going to be surprised when they find out.		bandyaboot
36766196	11.632598	-7.937465	comment	5.0	14.5	1689640446	10.095945	Reading the comments makes me feel bittersweet.- Many people consider coroutines and green threads to be more or less the same thing, when they both have their pros and cons.- The fact that the omissi...		xpressvideoz
36777396	12.290479	-7.5160437	story	5.0	96.0	1689705962	12.840061	Data Parallel, Task Parallel, and Agent Actor Architectures	https://bytewax.io/blog/data-parallel-task-parallel-and-agent-actor-architectures	skadamat
36783280	11.700315	-7.235006	comment	5.0	21.5	1689753317	9.29264	> Yes the RwLock and mpsc comes from Tokio and lets you .await instead of blocking a thread, but these are not async primitives, these are multi-threading synchronization primitives.The only reason al...		resonious
36794667	11.857726	-7.316426	comment	5.0	15.0	1689807377	9.208866	Once you realize async/await is just sugar over the familiar callback hell, a lot of the mystery fades away and it's easier to groc.		jayd16
36841064	11.745426	-7.301418	comment	5.0	14.0	1690154673	-8.887601	"The blog sets up to address the ""claim by proponents of dynamically typed programming languages"" that ""once you have unit testing static type checking is redundant"". This is a strawman and I'm fairly ..."		wzdd
36857695	11.644941	-7.1409345	comment	5.0	13.5	1690257565	9.078714	"Here you go:    class WrappedList:
        _fns = [map, filter, min, max, all, any, len, list]

        def __init__(self, it):
            self.it = it

        def __getattr__(self, name):
         ..."		JoshuaDavid
36910030	11.824269	-7.3758893	comment	5.0	36.0	1690564324	7.0367055	Can't we extend this argument to eliminating basically all static typing? And frankly that'd not even be wrong, and is why Alan Kay defined OOP as one that's dynamically typed and late bound, and we went against it anyway to keep relearning the same lessons over and over.		3cats-in-a-coat
36925488	11.67958	-7.103104	comment	5.0	26.0	1690670220	-6.747775	That's not the definition of a function, what you're describing would be called a bijective function. A simple function that is not bijective and maps to two distinct values would be sqrt(x)		adammarples
37039360	12.143775	-7.484285	comment	5.0	17.0	1691435540	-10.598257	I developed a very non-trivial ASP.NET Core application mixing F# and C#. I learned you have to take the best parts of both languages to get maximum benefits. Specifically you're going to want a proje...		guhidalg
37039903	11.709165	-7.223903	comment	5.0	27.0	1691437464	-6.768337	Functional core, imperative shell.  This seems to be a good approach, especially when you push pretty hard to stuff as much as possible into the functional core.Writing tests is much easier and requir...		michaelteter
37040549	12.147762	-7.5077333	comment	5.0	16.5	1691440222	-10.565072	Maybe the rest of the .NET world has more important stuff to care about?Anyone that cares so deeply about them can do the work on a F# assembly.		pjmlp
37084584	11.619237	-7.1930194	comment	5.0	14.5	1691722448	-6.97809	"    y = ->(f) {
      ->(x) { x.(x) }.(
      ->(x) { f.(->(v) { x.(x).(v) }) } )
    }"		inopinatus
37096674	11.607927	-7.88759	comment	5.0	17.0	1691810300	10.157238	I'm a go newb, but would you do this with channels and gofuncs now?The readability this provides is considerable.		emmelaich
37101563	11.858025	-7.2720127	story	5.0	122.0	1691856213	7.0019464	CLOS: Integrating Object-Oriented and Functional Programming (2004) [pdf]	https://dreamsongs.com/Files/clos-cacm.pdf	mepian
37123440	11.662021	-7.9789743	comment	5.0	12.5	1692032441	10.2220545	"> I wonder: why not go further and say ""there will never be a Go 2"" in order to eliminate ambiguity about this?They did, five years ago.  Albeit with an “if”.https://github.com/golang/proposal/blob/d6..."		ainar-g
37124082	11.695752	-7.903041	comment	5.0	30.5	1692035122	10.242595	> Boring is good. Boring is stable. Boring means being able to focus on your work, not on what’s different about Go.This really resonates with me. I work with NodeJS and the JS ecosystem in general on...		brunojppb
37127091	11.597594	-7.2084517	comment	5.0	24.5	1692048832	8.970575	How much old advice on Java concurrency will virtual threads change?I'm building a course for people who are new to Java concurrency and I've made the assumption that from September, you will almost a...		mattbee
37136844	11.673438	-7.9599175	comment	5.0	16.5	1692120746	-10.034997	You'd think after all the engineering that went into Java they would solve it to allow arbitrary directories and such.I don't know why, but this bothers me for some reason. To the point that I (perhap...		no_wizard
37140272	12.136258	-7.216138	comment	5.0	13.0	1692139597	8.534702	I work in gaming, so I cannot speak to your specific experiences. Entity Component Systems are extremely performant, really good science, and shipping in middlewares like Unity. However, in order to s...		doctorpangloss
37161986	11.862738	-7.3328724	comment	5.0	15.5	1692281910	6.5000124	No, I disagree, because the right behavior is not determined by a single object but by a combination of factors. For example when the sword strikes an enemy all of the following need to happen:- The c...		sirwhinesalot
37192467	11.644799	-7.97792	story	5.0	2.0	1692474821	10.230379	Why Golang Is Bad for Smart Programmers?	https://raevskymichail.medium.com/why-golang-bad-for-smart-programmers-4535fce4210c	pg_1234
37282801	11.667397	-7.046233	comment	5.0	21.5	1693144869	-7.9131646	"For typing **kwargs there are TypedDicts
https://peps.python.org/pep-0692/If your function just wraps another you can use the same type hints as the other function with functools.wraps
https://docs.python.org/3/library/functools.html#functools.w..."		SushiHippie
37283594	11.793846	-7.147402	comment	5.0	18.5	1693150110	-8.893814	For everybody reading this and scratching their head why this is relevant: Python subclassing is strange.Essentially super().__init__() will resolve to a statically unknowable class at run-time becaus...		yayachiken
37284356	11.831122	-7.156357	comment	5.0	16.0	1693154840	-9.019859	Is it just me or are Python type hints like..goofy?		curiousgal
37306523	12.340679	-7.377921	comment	5.0	34.0	1693311050	12.816717	There is a reason: the BEAM is almost not prone to huge GC pauses. Bigger load results in every actor responding very slightly slower. Nothing else.Many other systems don't have this property. They fa...		pdimitar
37306602	11.615702	-7.0488424	comment	5.0	12.5	1693311485	8.935811	"Terrible example, because he is writing the keys when calling the functions:  mydict[“foobar”]()

is basically a worse version of using a module  mymod.foobar()

The REAL value of this pattern is when the keys are going to change on runtime:  for name in userfilters:
    im = filtersdict[name](im)"		nomdep
37314477	12.426745	-7.073031	comment	5.0	13.5	1693345019	12.406018	There are just too many ways to do things in Ruby. How many forms for an if-else or for loopin can you name in Ruby? Just as the simplest example.Monkeypatching is also awful for readability.Explicit ...		skeletal88
37341344	12.052859	-7.0526786	comment	5.0	16.0	1693505170	6.8264036	How nostalgic. It's like 15-20 years old at this point, no? From what I remember, I didn't like the Web-based content creation system back then. I grew up playing and coding LPMUDs - which are basical...		klibertp
37345490	12.026984	-7.8140683	story	5.0	2.0	1693529849	10.423836	Ask HN: Why is there no job description which requires Monad knowledge?		revskill
37365319	11.836426	-7.0244184	comment	5.0	14.5	1693687183	-9.031763	"highly recommend clicking the ""witness the inevitable future"" buttonas a python oldie coming back into python, i've been surprised by dataclasses. are they basically ""backwards compatible better class..."		swyx
37377246	11.9552555	-7.7087493	story	5.0	164.0	1693803376	10.39197	Haskell mini-patterns handbook (2020)	https://kowainik.github.io/posts/haskell-mini-patterns	Tomte
37395427	12.015502	-7.754811	comment	5.0	27.0	1693936797	10.434176	Maybe I will take the plunge. Is there any real value to learning Haskell? There are so many different things I’d love to study.		daft_pink
37417646	11.971836	-7.7361574	story	5.0	139.0	1694087843	10.426442	Snake-fury – a challenge for Haskell beginners	https://github.com/lsmor/snake-fury	bmacho
37418154	11.991019	-7.7516623	comment	5.0	17.5	1694090962	10.419751	The key is to not write large Haskell programs. Write many Haskell libraries and compose them. This scales infinitely and is an excellent way to build software. But it's also hard to do and takes good & deliberate technical leadership if you want to get 50+ engineers doing it.		whateveracct
37418857	12.023792	-7.8013372	comment	5.0	20.5	1694094452	10.403993	Because, that's nowhere near general enough to describe what monads can do, that is, your explanation is wrong because of its over-specificity. That's the problem with monads. They are an extremely ge...		bowsamic
37450062	11.74919	-7.2173247	comment	5.0	24.0	1694292108	9.160519	> Why don’t people like async?That's pretty simple. The primary goal of every software engineer is (or at least should be) ... no, not to learn a new cool technology, but to get the shit done. There a...		vc8f6vVV
37451796	11.751562	-7.3415537	story	5.0	10.0	1694306406	-8.85746	Ask HN: How do you work with dynamic type programming language		aabbcc1241
37458113	12.085055	-7.3882575	comment	5.0	16.0	1694367699	9.503699	> That seems like insufficient magic for the respect that transducers seem to have.This is 100% correct. It's amazing how over hyped they are.If you have ever used C#'s LINQ you are using transducers....		BoiledCabbage
37466261	11.678728	-7.883013	comment	5.0	22.0	1694435542	10.199805	I've always felt like it was a bad first language because there's all of this type stuff going on under the hood that isn't really hidden from the user. I think go/java are probably better first langu...		jppittma
37473365	11.653592	-7.977345	comment	5.0	21.5	1694464755	10.245278	gorhill is a hero and legend to me.  One of the most important players in making the modern web.I'm still holding out hope that either he or someone else picks uMatrix back up. It's such an incredible tool, and I'm worried about the day when it no longer works.		freedomben
37500567	12.131558	-7.876921	comment	5.0	13.5	1694632934	-3.0881276	Set theory has the big unexpected results of the reals being bigger than the natural numbers, the independence of the Axiom of Choice, and the undecidability of the Continuum Hypothesis. What are some similarly big results in category theory, for a novice?		erehweb
37536453	11.652035	-7.928222	comment	5.0	20.0	1694883214	10.15643	While I love Go, have we gotten this lazy that we need a package for this? Go does this in 3 lines minimum, like you describe in your blogpost. However, in your package you expose the ability to kill ...		gabereiser
37539122	11.846066	-7.3353777	comment	5.0	31.5	1694901292	7.0961924	I rarely see inheritance used in practice in java code bases. Except where I would use a union type or sealed class in other languages anyways. I don't feel what youre describing is a real issue.		matsemann
37542527	11.820246	-7.242185	comment	5.0	14.5	1694936767	7.6467834	"The ""Sealed classes"" feature, as described here, just feels all wrong to me.They are saying that if you have a (normal) interface, anyone can create a new class implementing it. So if you do    if (x ..."		adrianmsmith
37548292	12.14968	-7.544943	comment	5.0	13.0	1694977348	-10.614418	wtf? The recruiters in your area sound horrid.A lot of the recruiters in London and VERY on top of technology and know more than I do about current trends, languages and frameworks and exactly where t...		valdiorn
37570946	11.616353	-7.1292353	comment	5.0	18.5	1695135889	8.932553	Can you explain why you're excited about with virtual threads? I get that they improve throughput in extremely high pressure apps, but the JVM's current threading isn't exactly a slouch. Java's used in HFT shops, and more generally in fintech where performance matters.		smallerfish
37573613	11.672989	-7.973941	story	5.0	83.0	1695146017	10.220253	Official guide for organizing Go projects and modules	https://go.dev/doc/modules/layout	dondraper36
24424628	11.722925	-7.0937033	comment	5.0	15.5	1599678571	-10.67258	> Writing asynchronous code gives you the ability to speed up your application [...]Citation needed...  It will be slower by definition but it probably advertised higher throughput anyway.  I wonder h...		stickyricky
24440637	11.7028265	-7.402005	comment	5.0	18.5	1599815773	10.287978	Testing / verification is the hardest problem in computing. I don’t think the author actually understands why that is and has a few superficial gripes with how codebase are tested. That’s not to say t...		amw-zero
24444499	12.011526	-7.234008	comment	5.0	12.5	1599842084	-1.7716019	"If you don't care about exceptions just put,try {
//your code
} catch (Exception e) { 
throw new RuntimeException(e);
}around it and you'll be fine.The thing about Java is that the code lasts for a re..."		narrator
24447850	12.151789	-7.6428285	comment	5.0	22.5	1599862051	-6.881668	"Man. I interviewed somewhere last week for a Scala position, advertising myself as a functional programmer.In the interview, they asked me, ""What's the difference between fold left and fold right?"" I ..."		roflc0ptic
24484068	11.797767	-7.277111	comment	5.0	13.0	1600191164	7.672948	Maybe your example is just too simple, but why would you do that instead of overriding the getCenter method in each subclass?		benmller313
24532600	11.842172	-7.3107524	comment	5.0	18.0	1600588786	6.9710298	What is the natural mathematical abstraction to describe object oriented programming? I always feel object oriented languages are some sort of poor approximation to some sophisticated functional progr...		foxes
24600726	11.626589	-7.923431	comment	5.0	14.5	1601142812	10.220129	> Now, you have a basic idea of the challenges that fast compilation in a modern programming language poses. Note that some languages deliberately chose to make their compilers not that smart to avoid...		etse
24604324	11.659578	-7.864843	comment	5.0	15.0	1601182602	10.164684	The reason Go does it is because the overhead of calling C code from Go is relatively high. Other languages typically don't suffer from this friction.The closest I can think of is Java, but I have no idea how much is reimplemented in pure Java to avoid the overhead of JNI.		atombender
24605109	11.780776	-7.3530545	comment	5.0	20.0	1601195182	-8.8832035	I followed a similar trajectory. Types were the bane of my early career. Hideous, extraneous.But really, they're the light at the end of the tunnel once you've worked your way though the dynamic / wea...		echelon
24605693	11.835233	-7.413081	comment	5.0	15.0	1601203539	-10.165618	Same here! I've started with C++ and Java, learned to hate excessive typing, went through a long period of dynamic typing, and now I'm at the point you and the the author are.I still code a lot of Com...		TeMPOraL
24606232	12.3743725	-7.4875693	comment	5.0	19.0	1601210722	-8.855645	How does one avoid type errors in Erlang applications? If the answer is 'testing' then types are indeed an obvious gap in the language. If it's something else, I'm genuinely interested to know. What m...		giantDinosaur
24605573	11.777638	-7.3789515	comment	5.0	17.0	1601201713	-8.918609	I agree. I think the downside of static typing is that it encourages developers to pass around complex types between functions instead of simple types and I think this is a mistake.If you have the opt...		jondubois
24621723	11.736596	-7.3947964	comment	5.0	13.5	1601330744	-8.731526	If anyone is interested in Type systems and what's a type, I highly recommend watching the first 20 mins of Sean Parent's presentation:https://youtu.be/sWgDk-o-6ZEIt will change the way you think about types after this.		halayli
24628912	11.689587	-7.0991464	comment	5.0	30.0	1601393004	8.6430855	TIL JavaScipt doesn't have an integer type and uses double under the hood to store integers. Yet another footgun to add to the massive stack.		umvi
24650338	11.953657	-7.7998815	comment	5.0	16.5	1601557304	10.436301	People are being dismissive of the premise here.  But I remember when someone gave me a link to a Haskell repository.  I had no idea what was going on, or what those alien symbols meant.  I can only i...		x86_64Ubuntu
24672705	11.625154	-7.958969	comment	5.0	15.5	1601739438	10.20525	I didn't know he was color blind. I can't help but connect this to his famous disdain for syntax highlighting and colored text: https://groups.google.com/g/golang-nuts/c/hJHCAaiL0so/m/kG3B...		catern
24687509	11.814945	-7.318935	comment	5.0	13.0	1601904176	-6.0955033	"You know, sometimes I wish the programming languages had a better distinction between ""immutable data pieces"" and ""stateful agents"". Sometimes it's really nice to have a simple struct for which you (o..."		Joker_vD
24692091	11.65722	-7.0890207	comment	5.0	60.0	1601932258	-8.966494	Why wasn't done in the first place? What was the rationale of using typing.List? Did they want to reserve `dict[x]` for some other semantics?		gnulinux
24694430	11.832494	-7.174656	comment	5.0	13.5	1601954345	-8.981904	Type hints don't help performance either because the interpreter discards them. The hints are not enforced by CPython, so you now need a build tool instead of just running the script. The whole point of PEP 484 seems to be to enable autocomplete in Visual Studio Code.		zelly
24707671	12.271586	-7.2934785	comment	5.0	18.5	1602075312	7.0900326	The author is obviously enthusiastic. Smalltalk is undoubtedly impressive. However, many heroic sagas are rather marketing hypes than based on true facts.> The Smalltalk galaxy was at the origin of th...		Rochus
24716685	11.763477	-7.50343	comment	5.0	22.0	1602141226	10.185137	"Type systems can encode proofs of properties that you want your data to have. For example, suppose you want to write a function that returns the first element of a list.  head :: [a] -> a

This is the..."		sullyj3
24719231	11.981909	-7.7399607	comment	5.0	21.0	1602166368	10.392582	The fact that you can actually ship an app. I've been writing my app (it's an IDE for music http://ngrid.io) in Rust after trying it in cpp and swift and it's a joy to use.Haskell is cool and all but ...		adamnemecek
24721071	12.0632925	-7.7313232	comment	5.0	16.0	1602176143	-10.772193	This is unrelated to multicore, but Ocaml is a language I want to like. I wanted to learn OCaml with the make a lisp project. That is, until I realized it doesn't have Perl regex built in (yes, I have...		wjsetzer
24738950	11.750575	-7.3038254	comment	5.0	19.5	1602337408	-6.4433517	5. Once created, objects and collections must be immutable.So this language would not be general purpose, as it would not be suitable for high-performance computing.Large scale simulations almost alwa...		leephillips
24739857	11.734968	-7.2609286	comment	5.0	14.0	1602346029	-8.722956	"In example #6, he gives this as the unreasonable approach:  var repo = new CustomerRepository();
  var customer = repo.GetById(42);
  Console.WriteLine(customer.Id);

with the issue being customer can..."		tzs
24822919	12.499794	-7.079779	comment	5.0	15.5	1603075482	12.392039	I have to disagree on this point.Formatting could be beneficial, but it gets abused so fast that it becomes a problem.First thing, no one challenges the choices made by the formatter, which is a probl...		Fire-Dragon-DoL
24822936	12.188148	-7.6242476	comment	5.0	23.0	1603075671	11.942138	> The best measure for the quality of the codebase is whether at a glance you can understand what's going on.This is _so_ relative to the background of the people doing the glancing.  These days [1, 2...		dkarl
24827249	11.778494	-7.213636	comment	5.0	15.5	1603121435	6.97696	There's 2 approaches to programming:- make it easy to extend (lets's call it SOLID in this context)- make it easy to rewrite (let's call it KISS)OO developers think that the first approach is The Only...		ajuc
24866960	11.669283	-7.2548623	comment	5.0	16.5	1603438983	-8.798718	"I'm glad you can now write:    public static function new(): static
    {
        return new static();
    }

It really brings the point across it's static."		stabbles
24875331	12.318402	-7.02576	comment	5.0	22.0	1603494420	13.182238	There is nothing in the (IT) world I fear more then... Perl projects. The shear madness it will leash upon you when the dependencies fail is maddening. Never will I voluntarily touch anything written ...		FreshFries
24891349	11.943722	-7.644888	comment	5.0	32.0	1603670426	10.395881	StandardML really hits a nice sweet spot in language design.The syntax is super-easy to learn (The BNF for the whole fits in a mere 2 pages[0]), but contains a lot of features in that small package. R...		hajile
24893041	11.804917	-7.091747	comment	5.0	14.5	1603689584	12.428064	I get the code is data thing, but I don't really find it that much useful. And there is a good reason most languages don't allow it - other people :)The unless example is a good one. So while you can ...		zaro
24892559	11.652007	-7.9700346	comment	5.0	21.5	1603682366	10.243441	Go is carefully designed to be adequate for the large majority of problems that don't need much, meant for use by the large majority of programmers who don't know or need much, whose attention is else...		ncmncm
24900270	11.666154	-7.0267963	comment	5.0	18.0	1603740741	8.180301	It would be useful to you to recognize that you are letting an emotional reaction stopping you from using useful technology. I understand that Java makes you uncomfortable, but it is a powerful and st...		shock
24947329	11.7816725	-7.4733644	comment	5.0	16.5	1604095559	-9.435375	Backus literally inspired functional programming with his Turing acceptance and Dijkstra attacked him for it. Dijkstra attacked the paper that inspired Haskell and everything else that currently exists in FP. He tried to destroy it. He should be a footnote in history.		jakespoon
24960315	12.248619	-7.5648203	comment	5.0	14.5	1604246426	-11.416231	Does anyone know how far down Kotlin Multiplatform is likely to scale, because most engineering org charts are not the shape and quality of Netflix's engineering org chart?At what size and level of ex...		brudgers
24964434	11.657134	-7.3995986	comment	5.0	29.0	1604285396	-8.699774	I disagree, and I think this kind of fundamentalism hurts the adoption of type safety. It's like saying that a non-machine-checkable mathematical proof is not a proof - something few working mathemati...		lmm
24975335	12.072309	-7.680291	comment	5.0	14.5	1604366000	10.418917	"""OCaml folks talk about Fancy Type System problems, instead of how to actually build products and applications""I had the impression that's a general problem with FP."		k__
24980167	12.233519	-7.6138496	comment	5.0	15.5	1604415547	11.722218	I read good things about F#, including that it is a first class citizen of Microsoft... but I have worries that it could become second class if some financial decision deems it not worth the effort to...		blunte
24987336	12.216329	-7.6401844	comment	5.0	14.5	1604479050	11.948238	The flexibility is perfectly fine when you're programming something on your own. But when you're in a team, or worse, in a large company, it starts to be a problem that everyone can use their own styl...		misja111
24999279	12.214082	-7.5179896	comment	5.0	17.0	1604591629	8.185841	> I'm writing some Java at the moment for an Android app, and it's just killing me after doing Scheme and PythonAndroid isn't Java though. It's some frankenstein contraption made from a mutated versio...		vips7L
25006345	12.0238695	-7.7034826	comment	5.0	14.0	1604655130	10.417605	You might want to give a try to Elm. Most of the Haskell goodies but way simpler, except no type classes and too restrictive.		girishso
25012425	12.283795	-7.31658	story	5.0	113.0	1604709564	7.055139	The Early History of Smalltalk (1993)	http://worrydream.com/EarlyHistoryOfSmalltalk/	gjvc
25043915	12.243204	-7.594389	comment	5.0	23.5	1604997854	11.942542	A summary of what Scala is great for:- Safe and high performant concurrent programming. Scala is miles ahead of most other languages here and pretty much on par with the best ones (such as Haskell)- E...		valenterry
25048113	11.671105	-7.9624104	comment	5.0	20.5	1605027551	10.210449	"Generics Update: 
""We will be working on that throughout 2021, with a goal of having something for people to try out by the end of the year, perhaps a part of the Go 1.18 betas."""		mfrw
25048183	11.599126	-7.745219	comment	5.0	23.5	1605027934	10.22269	I found Go to be a really nice replacement for C#. It has the static typing and garbage collection, but you also get a self-contained binary executing without the requirement of an external runtime environment. I also discovered that I don't miss classes at all.		Lendal
25053614	11.691822	-7.8574166	comment	5.0	16.0	1605051539	10.1395645	I'd like to hear some Java devs opinions on Go.On one hand I'd like to try and learn something new,on the other hand, everything I could do in go I would probably do better in java (as in I know how to do it already)		premek
25059206	11.777837	-7.300619	comment	5.0	14.0	1605109085	-8.839273	I don't really know how much type systems help here.I'm not really aware of a type system that enforces code actually be called. I know lots of linters do check for unused code, but generally only at ...		horsawlarway
25072726	11.612425	-7.8328156	comment	5.0	16.0	1605204586	10.087964	Go is faster than .NET and the code is shorter. On average, results may vary.I looked at the benchmarks.In cases where .NET is faster it's because the C# version is optimized using unsafe code and x86...		kjksf
25107055	11.706824	-7.0458627	comment	5.0	17.5	1605491362	-8.027519	I wonder, is there a good even-handed critique out there of the dependency-injection pattern and related philosophies?For me and probably a lot of people here, the pattern fundamentally offends my sen...		brundolf
25118484	11.896957	-7.3207164	comment	5.0	30.0	1605569624	7.1007814	Here are some thoughts about OOP I had recently, maybe someone here had similar thoughts:It seems to me that the biggest cause of maintenance problems in object-oriented programming is that it tries t...		taffer
25160700	12.4142885	-7.3169255	comment	5.0	17.5	1605882524	12.832556	Erlang/OTP inspired actor systems that run Webassembly code are a brilliant (and potentially way superior) alternative to microservice madness.Until now adopting Erlang or Akka meant restricting yours...		the_duke
25166237	12.428735	-7.044686	comment	5.0	14.0	1605913817	12.374925	Ruby doesn't.Python, until recently, didn't.		t-writescode
25178639	11.938054	-7.62759	comment	5.0	22.5	1606062024	10.388448	"I highly recommend Oleg Kiselyov's talk titled ""Having an Effect""[0] in which he talks about- purely functional model of computation and its pitfalls- Actor model, effectful programming with requests ..."		siraben
25195159	11.977174	-7.747242	comment	5.0	14.0	1606190550	10.450352	I love writing Haskell code, but the community desperately needs to agree on one method of install and project setup-- cabal, stack, nix, whatever-- and then make it WAY easier for new users to start ...		lambda_obrien
25199557	11.616167	-7.433771	comment	5.0	18.0	1606233455	-7.327802	I honestly find it so annoying when return types aren't annotated. It's considerably less overhead for me when I can look at the signature and see the return type, even if a few characters are added.		staticassertion
25199712	11.858273	-7.2938585	comment	5.0	16.0	1606234274	-9.445627	Of the three code-related sections, I think only Using Type Annotations makes sense. While the compiler _can_ infer the return type and the user can mouse-over the function to see what the language se...		jamamp
25202107	12.099839	-7.8664937	comment	5.0	13.5	1606246271	0.6751528	Just curious, how well-known is jane street outside of the OCaml world?		yodsanklai
25218601	11.951689	-7.7017083	story	5.0	66.0	1606385725	10.393506	Existential Haskell	https://blog.sumtypeofway.com/posts/existential-haskell.html	runeks
25218031	11.678815	-7.040189	comment	5.0	20.0	1606379008	8.313712	Am I understanding correctly that those firms really really care about latency & have unlimited money & chose C++/JAVA with a standard off-the-shelve compiler + an OS and/or JVM??If you'd really reall...		bboygravity
25221539	11.705985	-7.363146	comment	5.0	13.5	1606409406	-8.743543	Making impossible things impossible seems off.  Type checking, by name, is just checking types.  Akin to units checking.That said, some things may be impossible at a piecemeal, but correct as whole.  ...		taeric
25221993	11.743999	-7.3665676	comment	5.0	20.0	1606412165	-8.871406	The problem is that fundamentally we always have types. We must define different types of bytes and the different things we can do with those bytes. If you can generate a binary from your programming ...		dgentile
25245451	12.104067	-7.868603	story	5.0	88.0	1606662116	10.498257	OCaml User Survey 2020 Results	https://www.dropbox.com/s/omba1d8vhljnrcn/OCaml-user-survey-2020.pdf?dl=0	testcross
25302181	11.61562	-7.7417345	comment	5.0	22.0	1607089871	9.951176	I have a lot of experience using concurrency in Go, and for the last couple years have been at the bleeding edge of Python async.  The tradeoffs between the two approaches are immense.With the virtual...		jnwatson
25310661	12.146161	-7.5149407	comment	5.0	13.0	1607131156	-10.61379	"I see some F# praising in here. any good learning resources one can recommend to me (Ik I can ""google it"" or whatever. I mean something you had experience with and would recommend)"		plastman
25384201	11.670494	-7.515345	comment	5.0	13.5	1607682328	10.07485	But why have associated types in the first place since they have the same expressive power as generics? https://stackoverflow.com/questions/33647337/what-is-the-dif...		The_rationalist
25388124	11.919306	-7.40897	comment	5.0	15.5	1607707134	7.2465706	FP has little to do with real-world programming and not even much to do with computer science. Look through Knuth, Dijkstra, Turing, etc. and find an example of FP--you can't. It's the mentally challe...		zelly
25427609	12.386941	-7.4876056	comment	5.0	13.0	1608013712	10.322418	I want to write my front end and back end in the same language - Reason - and compile the backend to native code. So, ReScript doesn’t work for me? Are people still using or working on Reason, or is i...		jitl
33019720	11.84886	-7.0278926	comment	5.0	13.0	1664455123	8.884698	"can you clarify ""how"" it makes one a better developer?When I think of how the java streams API is used, it generates lots of garbage (i.e. lots of intermediary allocs), doesn't always make things clea..."		jbn
33026924	11.794068	-7.2321053	comment	5.0	21.5	1664484341	-10.804937	There are a few reasons.async/await allows you to do multiple things in parallel. I don't see how you can do that in the virtual threading model, although I haven't used it and only read this article....		mgraczyk
33032532	11.867853	-7.3450522	comment	5.0	18.0	1664527668	1.3435613	Did anyone else get taught Eiffel (by Bertrand) when they were at University? Such a cool little language for teaching object oriented paradigms. I think multiple inheritance was it's selling point, never seen it in industry though lol.		bromuk
31775167	12.126492	-7.515887	comment	5.0	14.0	1655451075	-10.573172	If you had to start over, would you still recommend to yourself to learn F# in 2022?I am asking this as someone who has dabbled in functional languages (F#/ Haskell) multiple times over the years but,...		dlkmp
31793499	11.770654	-7.3555064	comment	5.0	28.5	1655583928	-8.88037	> By empirical measure, static typing reduces bugsAs the article says, this does not appear to be actually true when you go and check.		chrisseaton
31793875	11.740997	-7.3636737	comment	5.0	36.5	1655586816	-8.86357	It’s basically self-evident that static analysis reduces bugs. It’s trivial to construct an example of where type information would catch a bug. Unless there is some reason that including type informa...		sumy23
31794340	12.355757	-7.091567	comment	5.0	16.0	1655591028	-13.296149	This reminds me of the studies done related to traffic lights and stop signs.Removing traffic lights and stop signs actually reduces accidents because drivers are more careful when driving through int...		drujensen
31794485	12.358813	-7.1559267	comment	5.0	19.0	1655592372	12.41949	It is not evident to me. Having used both statically typed and dynamically typed languages my experience is that I can't remember ever seeing a bug in our fairly large rails app that a type system wou...		jacobsenscott
31805244	12.247126	-7.215746	comment	5.0	12.5	1655688012	-9.034848	My preferred language (Ruby) happens to be dynamic, but at this point in my career (Staff-level) I've come to believe that the whole static vs. dynamic argument is way overblown.90% of the issues that...		sparker72678
31809474	11.878461	-7.2115993	comment	5.0	15.0	1655727823	-10.378913	"Python's OOP is not superior to CLOS. CLOS is very full-featured.
Python's OO does support features like multiple inheritance, which makes it more sophisticated than e.g. Java.One CLOS feature that is..."		jake_morrison
31833703	11.643642	-7.976396	comment	5.0	18.5	1655890216	10.222958	The selling point of Go is readability, feature minimalism and code that might be boring to write but gets you readability in return. Putting a Lisp on top of that throws these away.I'm not saying the...		praptak
31859924	12.129294	-7.1968007	comment	5.0	14.0	1656067542	8.501932	Entity-Component-System is so much nicer paradigm than any hierarchy. I wonder why it's not used much outside of gamedev.		scotty79
31879521	11.609318	-7.017842	comment	5.0	14.0	1656198876	6.9184723	If your code is sufficiently distinct that block scope is useful, and there's no obvious contextual clue as to why it's distinct (like an if statement), put it in a separate function to explain why it...		culturedsystems
31880031	11.824695	-7.215148	comment	5.0	18.0	1656204635	-8.949813	The article is not explaining the point, which I believe is: type your dicts if you want to provide strict guarantees to your downstream about data shape.If you know precisely what the data is used fo...		snidane
31885272	12.240948	-7.644933	story	5.0	70.0	1656260348	11.914157	Show HN: Simple games ported to Scala 3 – Try them in the browser	https://github.com/wiringbits/scala-js-games	AlexITC
31885871	12.253119	-7.6208105	comment	5.0	15.0	1656264231	11.92593	For those interested in Scala.js I would recommend two UI frameworks:a) Slinky - https://slinky.devb) Laminar - https://laminar.dev		threeseed
31891239	11.9121065	-7.434266	comment	5.0	19.5	1656311157	-11.067823	"What's really neat about lenses to me (more of a practitioner than a theoretician) is that while the level 0 explanation of them is ""they're like getters and setters in your OOP language"" they extend ..."		kqr
31891520	11.679801	-7.7904263	comment	5.0	41.5	1656314202	10.120654	I never understood how people consider go an alternative to python. I tried it myself for a while, and I couldn't stand the verbosity. So much code needed to do simple things, it almost felt like C ag...		jgb1984
31890337	11.790798	-7.234447	comment	5.0	18.0	1656301054	-8.940168	I feel the same, but about more subtle features like the walrus operator, the dictionary merge operator, or proposals that fortunately weren't accepted [1] which I feel do not add much to the language...		selcuka
31907631	11.9990425	-7.7496533	comment	5.0	12.5	1656424142	10.419112	Haskell is fun to learn and play with, but it's almost never the right choice for a real business. Using a language you can hire for, that your employees can google solutions for because it's already ...		ilovecaching
31910567	12.007438	-7.758802	comment	5.0	13.5	1656437485	10.438541	The difference here is scale: Jane Street is a 20 year old company with over 1000 employees, Channable has maybe a fifth of that. The proportion of engineering effort that will have to go into languag...		wespiser_2018
31920038	11.910639	-7.477881	story	5.0	4.0	1656510461	7.242576	Ask HN: Functional vs. Imperative Implementation of Algorithms		newsoul
31928583	12.481914	-7.2885594	comment	5.0	16.0	1656561319	-10.964932	There's 3 languages in the same class. Julia, Nim and Crystal.I'm specifically curious about Crystal vs. Nim. Benchmarks show that crystal is pretty much faster, but I'd also like to know the advantag...		deltaonefour
31954603	11.722796	-7.102345	comment	5.0	16.0	1656719986	-8.94472	Genuine question: how does this compare versus something like modelling in primitive python? what benefits are there, or is it just a case of age and that this is language / system agnostic?I'm just f...		drekipus
31956853	11.6402235	-7.967784	comment	5.0	12.5	1656745116	10.255482	This opinion is just gross. Always do your required reading kids.- nobody uses semi colons, that's a huge red flag because the tooling will literally remove these symbols from your code, did you even ...		smokey_circles
31957231	11.604016	-7.761932	comment	5.0	25.5	1656750170	9.9592085	Interesting article, which gives some good idea how to structure concurrent programs with less shooting at your feet :). A bit long winded until it comes to the actual core concept being presented: sp...		_ph_
32028853	11.682468	-7.6421323	comment	5.0	20.0	1657321080	9.93634	How can Go does it even worse that Java where generics implementation is the worse of all modern language with type erasure.Java is way worse than Go on that aspect.		Thaxll
32031162	11.656836	-7.627433	comment	5.0	22.0	1657336153	10.106335	Generics are great when you need them, but they will cut you badly if you misuse them.Generics are viral. When you make something generic, you often have to make the things that touch or contain it ge...		maxbond
32079074	11.898613	-7.3029613	comment	5.0	21.0	1657686916	7.128832	The big mistake is in believing there is any value in this- or that-oriented programming, or in a this- or that-oriented language.An engineer uses what is available to produce an economically balanced...		ncmncm
32116505	12.416044	-7.0442004	comment	5.0	24.5	1657964642	12.381787	as someone who has used ruby for years, and more recently got a job working in python, I think the most significant difference between the two languages is how they handle imports.in python every file...		zem
32119994	11.850202	-7.114211	comment	5.0	13.0	1657991749	-10.732135	>hardwired to a specific async runtimeWith version constraints, right? IIRC you can end up with multiple versions of multiple async runtimes in a project. I think it'd be better to only have a single one hardwired to the compiler like python's asyncio, even if it likewise sucked.		lvass
32132174	11.766501	-7.2324343	comment	5.0	14.0	1658097471	8.54014	>Honestly I don’t knowI do, because I'm a Java hater. Here are the reason I hate it for- Baking the difference between primitives and objects into the language itself : an ugly mistake with far reachi...		Banana699
32133394	11.591831	-7.9240394	story	5.0	161.0	1658106749	10.192501	Lensm: Go Assembly and Source Viewer	https://github.com/loov/lensm	kristianp
32189516	12.032599	-7.2447705	comment	5.0	17.5	1658475355	9.179694	I have written many tools that do something like this, very useful.Just gotta be careful with memory leaks, so (for a TS example) you might want to do something like this:    const promiseMap<key, Pro...		ralusek
32253427	11.969733	-7.723685	comment	5.0	16.0	1658942755	10.443064	> Haskell because elitismWas there really a need for this comment?  How about: for correctness and expressivity		louthy
32262921	12.232779	-7.3201404	story	5.0	61.0	1659007703	7.0131	Slang: The subset of Smalltalk that can translate to C or other languages (2019)	http://wiki.squeak.org/squeak/slang	avowud
32274678	11.858683	-7.2952003	comment	5.0	18.0	1659085980	7.031057	"Object-Oriented Programming:
""Luckily the industry doesn’t really use this term any more""Wait really? What world are they living in? Am I just out of touch or something?"		TT-392
32277041	11.753154	-7.0837116	comment	5.0	15.0	1659103466	8.619314	Yes; I have a friend who is part of a small team that wrote a very successful stock market trading gateway in Java. Turns out the JVM's GC can be tuned in very specific ways based on your needs. And there are ways to avoid having to do JVM GC in critical areas of the code as well.		nickbauman
32282854	11.654612	-7.816845	comment	5.0	30.0	1659137294	9.995031	It's my theory that Java, unintentionally, did a lot of damage to P&L research. I write a lot of Rust, and while the borrow checker is great, I've come to really admire the work that was put in the Go...		nemothekid
32315097	11.618356	-7.0967975	comment	5.0	12.5	1659414667	6.641387	In the context of this article, the result is not surprising, but in general it's probably not most people's expectation that you can define a class, make sure it doesn't subclass any ABCs, but then s...		bobbylarrybobby
32315312	11.91652	-7.084041	comment	5.0	14.0	1659416824	-9.16104	"The real reason why you shouldn't use this is that Python is wrong about typing and classes. In OOP, classes are not types; interfaces are [0]. ABCs are a 
poor replica of this. Guido, having clearly ..."		rileyphone
32321826	11.939081	-7.4394975	comment	5.0	14.5	1659461702	7.164426	Obvious reason to study FP is: when, inevitably, someone appears who believes they are smarter than you due to their love of FP, you can more effectively defeat them.		dboreham
32366536	12.005564	-7.768112	comment	5.0	24.5	1659778888	10.399806	I find it a bit strange that I didn't have this experience at all once I found out what monads are.In fact I felt quite a bit underwhelmed, because (in the context of programming) it turned out they'r...		spion
32399904	12.236463	-7.6336765	comment	5.0	12.5	1660061617	11.912404	What does that make Scala? A RAV4?		halfmatthalfcat
32402246	11.620863	-7.229457	comment	5.0	18.5	1660071069	7.889559	"Modern Java has first-class functions, pattern matching with structural binding, records/pure immutable data classes, the whole 9 yards:    static void main() {
        BiFunction<Integer, Integer, In..."		gavinray
32409563	11.81848	-7.0192986	comment	5.0	15.5	1660124141	-10.688685	The article gives a good summary of the quite complex landscape of concurrency in python. There's more to it, for example gil-free c-extensions, subprocesses and cross-machine (plus IPC) communication...		uniqueuid
32413871	12.504616	-7.027378	comment	5.0	14.0	1660146139	12.401489	Sure, but Ruby could've been a player in data science as well. But for some reason Python won handily in that space. Was it all down to numpy, scipy, etc?		UncleOxidant
32439050	12.00866	-7.7520103	comment	5.0	25.0	1660313953	10.43604	Has there been a recent surge in Haskell popularity? I noticed Pragmatic Programmers and Manning are both working on new books about Haskell, which is the first time in ages I can recall a significant publisher announcing Haskell books, though I may have missed some in the meantime.		runevault
32484692	12.015189	-7.7391	comment	5.0	13.5	1660665802	10.436181	Is it viable to build a traditional web product/company on top of Haskell?That sounds like a silly question - but I’m serious. I’m enamored by the beauty of FP, but I’m not sure if there’s enough tool...		dfee
32494623	11.692791	-7.1615086	story	5.0	57.0	1660734069	8.22775	Algebraic Semiotics (2020)	https://gjoncas.github.io/posts/2020-12-26-algebraic-semiotics.html	auggierose
32502412	12.498049	-7.0325623	comment	5.0	17.5	1660774609	12.369619	Honestly I will always be saddened by the fact in this reality Python won out over Ruby in the readable scripting language wars. Writing Ruby feels elegant, it feels fluid, it feels like creating.Work...		buscoquadnary
22020287	12.043971	-7.7384214	story	5.0	115.0	1578756285	10.459049	Zeta: Functional Neural Networks in Ocaml	https://github.com/liaopeiyuan/zeta	frjalex
22059072	11.994444	-7.752996	comment	5.0	18.5	1579124705	10.428729	Learning Haskell to write better software is like learning the language of the Eskimo and their elaborate vocabulary surrounding snow, only to realize most of the world doesn't have snow and that real progress is made by science, not linguistics.		alexashka
22069641	12.010801	-7.1858683	comment	5.0	16.5	1579213262	8.687951	"Forcing usage of constructors is hardly more readable IMO.Which bug is easier to spot?    cat = new Cat(1, 2, 4);
    cat = Cat.builder().eyes(1).legs(2).heads(4).build();

Additionally, from the exam..."		cle
22075922	11.710768	-7.7652607	comment	5.0	15.0	1579277808	10.188244	> Making all of these overlapping API calls in a performative, reliable way is a challenge.Pythons asyncio is pretty hard to beat. For non-cpu intensive tasks, I find it a pleasure to work with. Gorou...		nhumrich
22091277	11.791251	-7.3495135	comment	5.0	47.0	1579439802	-8.9716	I think there's a perhaps irreconcilable disconnect between 2 camps here, but I also think that's ok and different people are allowed to like different things.My experience, having gone from dynamic t...		UglyToad
22091418	12.485405	-7.034061	comment	5.0	16.5	1579441957	12.375004	Ruby could use a proper module system as well. Ruby's require evaluates Ruby code and changes global interpreter state. Python's modules are so much better. Javascript's require is so simple: a function that returns a module object.		matheusmoreira
22091425	11.765898	-7.285127	comment	5.0	32.5	1579442040	-8.87026	"Yes. Perhaps this is an indication that we actually need automated type annotation. E.g. you initially write/prototype your program in a dynamically typed form, then you click a ""magic"" button, and a tool converts your program into statically typed style."		amelius
22091827	12.4904995	-7.846124	comment	5.0	14.0	1579447031	-11.091378	Also, the following part isn't necessarily because of dynamic typing vs static> what types all the variables are, what expectations are attached to them, what mutation, if any, each method call perfor...		capableweb
22132346	11.683942	-7.8757896	comment	5.0	15.5	1579815026	10.246873	Is there anything about doing it the other way around, i.e. embed python code in Go...? I wish we could get the easy-deployment story of Go around the easy-development story of Python.		toyg
22146921	11.788377	-7.3503466	story	5.0	116.0	1579969439	9.951093	Why the Sorbet type checker is fast	https://blog.nelhage.com/post/why-sorbet-is-fast/	brianyu8
22151338	12.081874	-7.5619235	comment	5.0	13.5	1580032962	-10.663495	It’s nice, but not that nice. The type system is primitive compared to modern alternatives and the use of functors for generics is clumsy. Also multicore still isn’t a thing, despite it being just aro...		smabie
22151707	12.351573	-7.5837564	comment	5.0	16.5	1580040932	10.312146	I was very interested in reasonml and had high hopes it would gain a lot of traction, but for an outsider, there doesn't seem to be a lot of activity on reasonml itself, the last release is from 18 mo...		raphinou
22158618	11.73894	-7.334896	story	5.0	2.0	1580127340	-8.782087	Ask HN: Is there any lanuage which satisfies my need?		mangatmodi
22190817	12.45869	-7.484542	story	5.0	93.0	1580386636	12.904259	The Let It Crash Philosophy Outside Erlang	https://stratus3d.com/blog/2020/01/20/applying-the-let-it-crash-philosophy-outside-erlang/	Stratus3D
22203118	11.805519	-7.277237	comment	5.0	15.5	1580489341	-10.352343	"> We're going to need a few language extensions, so let's get this out of the way first:
{-# LANGUAGE RankNTypes, GADTs, MultiParamTypeClasses,
             KindSignatures, TypeApplications, Functiona..."		fmakunbound
22207948	12.17343	-7.038248	comment	5.0	13.0	1580521630	-10.494426	"Author here! Yeah I think you are right that discriminated unions are useful more broadly than just legacy JS code.That being said, I still think TypeScript's solution to handling them of using ""type ..."		alexcole
22209372	11.699101	-7.3868885	comment	5.0	17.5	1580544534	-8.867962	If you can pass a Cat to a Dog function, where is the better checking?That would be one of the hello-world test cases for a type checker bolted on to a dynamic language.That type checker itself has introduced the syntax for declaring Cat and Dog classes; yet is neglecting to do the obvious with it.		kazinator
22233692	11.907357	-7.362431	comment	5.0	13.5	1580807731	7.0444527	Besides his great books and massive work in generic programming, the man has quite a sense of humor.For example, there is a lot of fun in his famous interview on an Italian magazine [1], linked on tha...		enriquto
22238527	12.221017	-7.5560937	comment	5.0	17.0	1580838281	11.819309	When it comes to popular languages on the JVM, it doesn't go before Kotlin as Scala was never a popular language to begin with.One thing I and a lot of people are missing is annotations, with them dat...		llcoolv
22240482	11.858737	-7.1671686	comment	5.0	14.0	1580847604	8.678865	I have some issues  with this feature.1. I don't really like this immutable approach, I want setters too.2. I don't need those autogenerated equals/etc implementations, it's just code bloat. May be it...		vbezhenar
22240607	12.087356	-7.6675215	comment	5.0	13.0	1580848365	10.351567	Why do people credit the pipe operator to F#? OCaml has it too, and F# is based on OCaml. Did the pipe operator get added to F# first? (The OCaml docs say that the pipe operator first appeared in OCam...		TheAsprngHacker
22239839	11.692747	-7.7471404	comment	5.0	15.0	1580844215	-11.226203	"Out of curiosity, why didn't you choose Kotlin?
It can reuse the Java ecosystem which allow you to save tons of money, and give you advanced features and scalability.
It is a sexier and more ergonomic..."		The_rationalist
22254590	12.253272	-7.547412	comment	5.0	14.5	1580979510	-11.387232	>is there really any compelling reason not to choose Kotlin over Java?Kotlin is being developed primarily by developers based in Russia. Putin relies on geopolitical conflict for consent manufacturing...		nullifidian
22256454	12.144479	-7.559654	comment	5.0	18.5	1581001476	9.707699	About one and a half year ago we also decided to give kotlin a shot. After a few months my opinion was similiar to yours. Extension-functions, yeah!Anyway, nowadays you wouldn't see me making the same...		tommyage
22280535	11.902179	-7.7095733	comment	5.0	13.5	1581225981	10.388346	I had commented in a previous discussion regarding Haskell that a common criticism of Haskell is that it’s lazy evaluation can lead to problems reasoning about runtime performance, a criticism which i...		travmatt
22281978	11.873818	-7.357826	comment	5.0	19.5	1581254740	-6.843682	They are totally unrelated.Eiffel has generics, value and reference types, design by contract, non nullable references, pure OOP in Smalltalk linage, agents, it is designed for IDE based tooling, sinc...		pjmlp
39379273	12.40213	-7.078205	story	6.0	27.0	1707973082	12.365337	Anonymous Block Forwarding in Ruby	https://www.writesoftwarewell.com/anonymous-block-forwarding-in-ruby/	thunderbong
39458518	11.806636	-7.11256	comment	6.0	19.0	1708544597	5.0563507	It's a very good article. I wish I knew how to find this at the time when it was written.I remember when I first discovered the pattern, at a job I took 10 years after this article. The codebase seeme...		TheAlchemist
39481059	11.690094	-7.2784805	story	6.0	13.0	1708699099	-6.011449	Code that sleeps for a month: Solving durable execution's immutability problem	https://restate.dev/blog/code-that-sleeps-for-a-month/	stsffap
39499979	11.756445	-7.380148	comment	6.0	19.5	1708860980	0.14850563	"Yeah, point-free sounds cool, until you actually try it out. Even in their example they are not point-free:    compose(foo, bar, baz)

Here compose is applied to three ""points"" (which happen to be functions)."		auggierose
39570423	11.661832	-7.2992277	story	6.0	66.0	1709361767	-9.633126	Sequent Calculus as a Compiler Intermediate Language (2016) [pdf]	https://simon.peytonjones.org/assets/pdfs/sequent-calculus.pdf	swatson741
39630390	11.597539	-7.1046615	comment	6.0	23.0	1709825996	-7.1995516	"It's a great explanation, but I've never heard the term 'binding' used to describe variables. It's usually reserved to function binding or bridge APIs like the DOM.The tricky thing is that ""boxes"" are..."		ricardobeat
36596664	11.689451	-7.317769	comment	6.0	30.5	1688541034	9.160346	Your comment seems to be conflating concurrency with parallelism.JS doesn't have any language-level abstractions for parallelism (async or not) but you do have Web Workers[0] and process forking (depe...		3np
36613909	11.679908	-7.9397163	comment	6.0	23.5	1688640107	10.185874	"It's there a ""default"" web framework for Go which most of people use?"		DeathArrow
36638452	11.598048	-7.891527	comment	6.0	18.5	1688764805	10.141591	"My experience with Goroutines is that eventually you run into the limits of working with them and your code explodes in size. Your    for item := range channel {
        // code goes here
    }

becom..."		lalaithion
36638615	11.747918	-7.46728	comment	6.0	19.0	1688765530	10.219621	Not to be flip, but if it were really all this easy, we would have done it already.There are dozens of questions you can throw at this code: What if the input's a union? What if it's a nested union --...		RyanCavanaugh
36661113	12.135471	-7.8749447	comment	6.0	17.0	1688954029	-3.2619839	> about bringing together conceptsWell, yes, obviously. My analogy is just that: it's like bug collection, bringing together a bunch of samples from many fields into a single museum.My criticism, I th...		jiggawatts
36697242	11.946042	-7.465725	comment	6.0	26.5	1689179724	7.281935	Interesting paper.My question is: Turing Machines are easily and intuitively understood as state-machines. But what about Functional Programming? I thought functional programs have no 'state'. What is the simplest way to explain how functions are also state-machines?		galaxyLogic
36726962	11.787153	-7.319459	comment	6.0	16.0	1689355212	-8.920553	What are the downsides of gradual typing on a codebase? I've never worked with it, but watched some talks on it and it really sounds promising. I understand the downsides for compiler complexity and for performance, but not on the codebase itself.		Pet_Ant
36727239	11.760125	-7.34615	comment	6.0	16.0	1689356187	-8.818589	Types slow you down. New work is first completed in untyped languages. People start using the work. People complain there aren't types. Types are added. Work is now slow in the language. New work is now done in another language without types.Rinse and repeat.		Sterm
36736850	11.768642	-7.3503675	comment	6.0	25.5	1689429800	-8.88126	Some people say the same about strong typing. Like, why do I have to write down the type of every single parameter or variable? Java is making me jump through hoops!The point is, if you don't need the...		breadwinner
36763477	11.605168	-7.9455256	comment	6.0	20.5	1689625110	10.208441	I have written Go professionally for many years now and don't want to see it become something like the Python Twisted / Tornado / whatever frameworks.The go keyword nicely prevents the annoying functi...		Zach_the_Lizard
36871971	12.173885	-7.5484304	story	6.0	4.0	1690334173	-10.651619	Ask HN: What do FP languages have that JavaScript doesn't?		muunbo
36890681	11.64102	-7.9471335	story	6.0	18.0	1690447403	10.1627245	The Adapter Pattern in Go	https://bitfieldconsulting.com/golang/adapter	gus_leonel
36929734	11.668551	-7.158684	comment	6.0	18.5	1690712827	-5.045698	"Wow. This feels like someone has taken a Borges parody and ran with it:> What is the scope of the new ""Wikipedia of functions""?> [...] Vrandečić explained the concept of Abstract Wikipedia and a ""wiki..."		andybak
36987549	11.984425	-7.1834564	comment	6.0	18.0	1691077951	12.892832	I'm also looking at Elixir and Phoenix (coming from Python/C++), and it looks cool.  Doing realtime features with Python requires something like Tornado / asyncio, which isn't ideal IMO.I'm all for th...		chubot
37067452	11.9797735	-7.7268925	comment	6.0	27.0	1691610017	10.428539	"Interesting article. I agree that this double language phenomenon of ""biformity"" can be a source of complexity, but I actually think the majority of complexity comes from one level higher: the paradig..."		voidhorse
37068028	12.203765	-7.599574	comment	6.0	26.0	1691613365	11.917684	It remains a bit bitter sweet to see that so many features that we’ve had for 13+ years in Scala and longer in languages like Haskell and were ridiculed back then, now find their way to mainstream Java.		spockz
37107488	12.007079	-7.7953434	story	6.0	47.0	1691911384	10.438729	The Meaning of Monad in MonadTrans	https://www.parsonsmatt.org/2023/08/10/the_meaning_of_monad_in_monadtrans.html	lemper
37116136	11.681174	-7.331942	comment	6.0	23.5	1691973267	7.7620034	I keep seeing claims that modern C++ is functional but that is simply untrue.Most so called functional methods in the standard library require mutating the target (ie std::sort, std::transform, etc.) ...		sakex
37123178	12.4541645	-7.426519	comment	6.0	37.0	1692031521	12.893304	For those of you who are interested by Elixir but find the lack of static typing an issue here are somethings to be aware of:1. Static Typing is planned and currently the top priority of the teamhttps...		bnchrch
37132363	11.621384	-7.228041	comment	6.0	15.0	1692096905	9.02684	There are some fairly major Java backend libraries that are founded almost entirely on async-type APIs. Eg, Vertx, Quarkus, Micronaut, etc.I am interested to see how a widespread move to virtual threa...		kitd
23399573	12.284816	-7.293829	comment	6.0	28.5	1591157387	7.081307	I took my first college-level programming class in 1997, learning Smalltalk.1. IBM VisualAge didn't run in Linux, so I had to buy a second hard drive and a copy of Windows 95.2. I wanted to be working...		alrs
23454593	12.08832	-7.8332844	comment	6.0	37.0	1591603701	10.460015	That's not a pain point, that's a core part of the language. If you don't want that use Ocaml.		dunefox
23454986	12.045832	-7.8470426	comment	6.0	34.5	1591608099	10.456053	> OCaml's is also excellent but not immediately obvious (their docs have improved a lot)Interesting! The last time I tried OPAM, it actually seemed more frustrating than Cabal! Maybe it's improved? La...		bjz_
23456468	11.978278	-7.7270455	comment	6.0	18.5	1591624350	10.415769	"It strikes me that I need to be a mathematician to use Haskell. Especially when someone like Rob Pike makes claims that ""I cannot read the syntax of Haskell and understand it."""		nickbauman
23501981	11.642496	-7.210162	story	6.0	61.0	1591985499	-7.3300605	Expresso: A simple expressions language with polymorphic extensible row types	https://github.com/willtim/Expresso	wtetzner
23506168	12.085968	-7.449955	comment	6.0	28.5	1592014852	-10.520331	I've recently become interested in F# after I saw its use in a bunch of videos by Scott Walashin. I came across his talks, and subsequently his blog, as I'm getting more into functional programming an...		bern4444
23508395	11.833638	-7.3173566	comment	6.0	15.0	1592043606	7.359597	"I get the ""Make illegal states unrepresentable"" in theory but how do you do it actually for nontrivial preconditions like ""this list must be sorted""? (as a precond for a binary search on a vector, for..."		throwaway_pdp09
23509075	12.248937	-7.2904778	comment	6.0	39.0	1592053426	7.1422358	"If you're tired of hearing about the virtues of Smalltalk (like I was at one point) and ask ""if it is so good, why isn't it popular?"", then watch @deech's talk (Aditya Siram) - ""What FP can learn from..."		jasim
23535752	11.778863	-7.3492937	comment	6.0	18.0	1592278912	-8.866593	Once all of this compile-time metaprogramming and code execution starts to happen, it always makes me ask: doesn’t this just conclude with dynamic typing? I’m currently a static typing lover. But it’s...		amw-zero
23543572	11.666435	-7.56024	comment	6.0	42.5	1592338781	10.085448	I cant help feeling it is a missed opportunity to add generics to Go this late. A mistake that is copied from earlier languages (C++, Java), a mistake similar to other mistakes Go chose not to solve a...		cies
23543696	11.627619	-7.9020634	comment	6.0	20.5	1592339519	10.205429	> having implicit nulls (C, C++, Java, JS, C#),> lack of proper sum types (C, C++, Java, JS)Incidentally, Java and C# have addressed (or are in the process of addressing) both issues. Both languages/platforms are superior to golang in almost every conceivable way.		apta
23543997	11.599451	-7.394638	comment	6.0	103.5	1592340964	-8.656162	"The cost you pay for appeasing the type system is the cost you're not paying writing more tests around corner cases (""this function never returns null""), debugging segfaults, null pointer exceptions, ..."		nine_k
23555722	11.650149	-7.9222913	comment	6.0	16.5	1592422502	10.212778	The limitation around implementing methods on built-in types seems unfortunate. If I understand how Go interfaces work correctly, that would mean that you also can't implement your own interfaces on b...		nicoburns
23555855	11.638843	-7.827134	comment	6.0	22.0	1592423211	10.164117	"On the <> syntax, why not improve the parser? Every language that uses <> for generics has a parser that is able to distinguish between generics and the ""less than"" operator, and it seems odd that Go developers think it can't be done efficiently."		twblalock
23569711	11.817586	-7.0355396	comment	6.0	33.0	1592526564	-9.071925	I’m in the midst of a python project right now - I’m fairly familiar with python but I haven’t used in a while, preferring TS. I’m currently majorly kicking myself for not starting out with mypy. Unfo...		jakear
23570797	11.681066	-7.189282	comment	6.0	20.0	1592538804	9.222506	>  I'm surprised comprehensions in particular haven't spread to more modern languages.I've come to dislike list comprehensions. Simple ones are ok but they do not handle incremental complexity well. I...		zmmmmm
23591959	11.722134	-7.0640736	comment	6.0	17.5	1592746864	-10.465959	Having gone through all of these course myself, I'm wondering if this stuff is really relevant to today's workforce? Compiler Design? How to build an Operating System?I remember in a job writing my ow...		ascotan
23593876	12.319472	-7.028525	comment	6.0	15.5	1592762746	-11.361933	If you value your mental health and your earning potential, you'll avoid Perl.So many better languages with better mental models. And I say this with a decade of Perl experience.Don't suffer from the blub paradox.		ionforce
23612856	11.726126	-7.4207516	story	6.0	93.0	1592914592	-8.621337	Mathematics in type theory	https://xenaproject.wordpress.com/2020/06/20/mathematics-in-type-theory/	g0xA52A2A
23713236	11.730147	-7.5042315	comment	6.0	23.5	1593698922	-10.40414	"That actually surprises me a lot. I've seen plenty of critique about lacking generics and exceptions, while haven't seen much complaint about ADTs.
From my rather dilettante point of view they are nei..."		frankie_t
23739846	11.843742	-7.310522	comment	6.0	15.5	1593966447	7.0751486	The business codebase I'm working on now was written by OOP crazy people who thought inheritance was the solution to every  line of duplicated code. When they hit roadblocks, they filled the base clas...		mrfredward
23740869	12.063255	-7.8540087	story	6.0	150.0	1593974480	10.355447	Parallel Programming in Multicore OCaml	https://github.com/prismlab/parallel-programming-in-multicore-ocaml/tree/draft	pjmlp
23758287	11.651901	-7.8773026	story	6.0	4.0	1594123460	-10.366855	Ask HN: Best Go Integration with an Editor?		marcus_holmes
23772232	11.97861	-7.739401	comment	6.0	16.0	1594230129	0.90715724	Any distro where you have to write a little haskell-ish 30 line script to set up an environment just to be able to start compiling (or even running!) things is not going to be widely popular for desktop use.		superkuh
23777356	11.907491	-7.4969597	comment	6.0	16.0	1594274382	7.2485027	The CPU and the von Neumann architecture itself is procedural. High level code is mapped to assembly code, which is then mapped to binary machine code.Given that, then higher level languages are merel...		blackrock
23796142	11.707198	-7.424319	comment	6.0	27.5	1594413333	-8.659736	Local type inference can give you 90% of the benefit at a fraction of the cost of a global type inference system.  Simply introducing local variable inference probably captures 50+% of that and it's t...		recursivedoubts
23819464	12.001215	-7.016108	comment	6.0	29.0	1594638803	-9.073994	I worked on that project 10 years ago as a consultant, and it was certainly strategic at that time. It was fairly well known that one of the main stakeholder was pushing for those system and making a ...		cdavid
23857666	11.983687	-7.7477846	comment	6.0	19.0	1594897078	10.411196	Thank you for the article, it is great read. I'm trying to follow haskell-oriented blogs, some of them are cool to read, while more deeper ones are harder to follow (probably it is about me, not about...		netko_netkovic
23904350	11.970332	-7.7288957	comment	6.0	30.5	1595306109	10.382583	It's nonsense, written because Joel had never used a language with a decent type system. Any Haskell programmer uses half a dozen non-leaking abstractions before breakfast. Even the examples in the po...		lmm
23939350	11.752552	-7.408135	comment	6.0	23.0	1595598136	-8.997077	I think the general feeling is that there are some code patterns that are safe and easy to do with dynamic typing, but impossible with simple type systems or more complex with more advanced type syste...		simiones
23972309	11.809062	-7.6114397	comment	6.0	17.0	1595910979	10.421269	Both Haskell and Rust are poor examples because one has to focus more on the notation (i.e. types, declarations, etc).Python is better.		blub
24020328	12.337898	-7.0510178	comment	6.0	45.0	1596288927	13.176946	I think most people using Perl for anything non trivial (eg, large web app with Catalyst) are unlikely to be changing their version of Perl without a good reason, and very few people are starting larg...		lmiller1990
24030199	11.941925	-7.853489	comment	6.0	17.5	1596390915	10.383929	Curious question: If you are picking OCaml over Rust in 2020 for a new project, what is your reason for doing so (other than being already familiar with OCaml through college courses, or wanting to tr...		ocamlskeptic
24052451	11.691	-7.3367414	comment	6.0	19.5	1596562731	-7.965606	The amusing thing is that C++ still doesn't have nested functions. (Although I think that was a GCC feature at one point.)As I point out now and then, there are two basic concepts here - closures and ...		Animats
24089550	11.89288	-7.305697	story	6.0	11.0	1596868078	-8.7293825	Show HN: Omg-Curry – JavaScript currying library	https://github.com/Debdut/omg-curry	debdut
24098768	11.961968	-7.6937785	comment	6.0	36.5	1596971020	10.4159	"I love seeing new Haskell projects, though I personally would rather just stick with Haskell's clean syntax:  data Maybe a = Nothing | Just a

...over this:  data Maybe<a> {
    Nothing,
    Just(valu..."		curryhoward
24124153	11.685582	-7.3487782	comment	6.0	30.5	1597171388	-8.753256	Types provide only the simplest most trivial kinds of correctness, though. And people routinely make mistakes with types.		nickbauman
24160424	12.346657	-7.403633	story	6.0	22.0	1597424761	-10.472126	ReScript (previously BuckleScript and Reason)	https://rescript-lang.org/	ccapndave
24179086	12.469075	-7.283601	comment	6.0	22.0	1597595396	-10.772427	Another problem I've found for me with Nim and Crystal is the lack of editor support compared to other statically typed languages like Java and C++.Arguably a really nice benefit of these languages is...		Naac
24196475	12.225092	-7.526267	comment	6.0	42.5	1597740100	-11.371272	If you haven't tried it yet, here's my seal of approval for Kotlin.Normally I'm quite reluctant to start a new project in a new language, but Kotlin edited on IntelliJ just seems so very smooth. I'm d...		lordnacho
24219537	11.726668	-7.3983855	story	6.0	57.0	1597893632	-8.643575	An Anecdote About ML Type Inference (1994)	https://web.archive.org/web/20081006181650/http://www.usenix.org/publications/library/proceedings/vhll/full_papers/koenig.a	tjalfi
24255515	11.749997	-7.1104093	comment	6.0	30.0	1598218987	7.14719	"This should help: what should the following code output?  class B(object):
    def __init__(self):
      self.y = 2

  class C(A, B):
    pass

  print(C().y)"		mehrdadn
24296952	12.078455	-7.694027	comment	6.0	15.0	1598553199	-11.38706	Kinda tired of the proliferation of languages coming out of Google, whether they actually created them or not.If Go is so great, why was Kotlin released four years later and made the standard on Andro...		PostThisTooFast
24318962	11.994873	-7.756771	comment	6.0	29.5	1598731025	10.369377	> This begins to get us to the fundamental abstraction of a monad: a box, with an interface for map, and flatMapBefore I understood monads, I read variations of the above sentence a million times, alw...		ridiculous_fish
24328067	11.720787	-7.4202337	comment	6.0	18.0	1598841994	-8.702986	Surely there’s more than 2 types. Another off the top of my head - competitors.		ssss11
24330749	12.238366	-7.287268	comment	6.0	37.5	1598877002	7.0764704	The article does not mention Smalltalk's uncommon syntax as a deal breaker. Not many langs with uncommon (not C-like) syntaxes have managed to become widely used. I think that that is known to those w...		cies
24345499	12.04525	-7.6723785	comment	6.0	19.0	1598986648	10.519589	The top comment on yesterday's post on the Keli language (https://news.ycombinator.com/item?id=24331635) sums up FP's failure to become mainstream pretty clearly IMO:> The other reason is that many FP...		g_delgado14
24359767	11.767545	-7.3681097	comment	6.0	15.5	1599093443	7.088748	ELI5:  How do you have polymorphism without inheritance?  That is, if I have a Foo with a virtual function f(), and I have Bar and Baz that inherit from Foo and have their own implementations of f(), ...		AnimalMuppet
24360765	11.651553	-7.73583	comment	6.0	37.0	1599106797	9.955998	Hmm, I don't know.  I had this limited concurrency issue on the first Go program I ever wrote, and I'm very new to concurrent stuff, certainly if you only count the past ten years or so.I figured this...		naikrovek
24361154	11.608075	-7.928965	comment	6.0	18.5	1599112943	10.237756	Can't that be said for most languages? Is there anything special that other languages do to make race conditions less likely than they are in Go?		xmprt
24382882	11.902631	-7.1039925	story	6.0	58.0	1599306179	-10.762599	Asynchronously Opening and Closing Files in Asyncio	https://nullprogram.com/blog/2020/09/04/	signa11
24390021	11.591888	-7.2373595	story	6.0	62.0	1599382616	-2.314972	Code Health: Make Interfaces Hard to Misuse (2018)	https://testing.googleblog.com/2018/07/code-health-make-interfaces-hard-to.html	Fiveplus
24390351	11.633888	-7.147661	comment	6.0	57.0	1599387811	-7.099803	">The Java strategy of being very conservative about what you add to the frontend would have done C++ a lot of good after C++11 (or even before that).Java lost a lot of mindshare to C# and Kotlin due to that ""strategy""."		rubber_duck
19979278	11.684712	-7.894463	comment	6.0	62.5	1558515862	10.199981	"For what it's worth I'm a semi-grey beard (20 years in) and
 I love golang.  For me it was like going back to being 8 years old on my Commodore Plus/4 and really enjoying writing code again.It needs close parenting.  Java has been ruined by the push to include everyone's pet feature."		danielmg
19981142	12.14273	-7.514149	comment	6.0	18.5	1558533108	-10.610236	Hijacking the thread (bear with me).Is f# a good language to work with in Linux servers? Is possible? Would you recommend it?		spanxx
20031577	11.778652	-7.2984037	comment	6.0	19.5	1559060356	9.180046	Question for people more familiar with async/await semantics, how do you typically control what thread the async procedure runs on? Having spent a lot of time now in rxJava and really getting into the power of stream processing and composition, it feels like async/await is almost too simplistic.		seanalltogether
20031658	11.839719	-7.404351	comment	6.0	22.0	1559060826	7.237661	> Mathematics is a purely functional language.It is not. E.g. x ∈ ℕ ∧ x > 2 ∧ x < 5 ∧ x % 2 = 0 implies x = 4. This is not something pure functional languages can express directly. In math we make com...		pron
20062020	12.21552	-7.1137037	story	6.0	90.0	1559317962	7.4836307	PureScript 0.13 Release	https://github.com/purescript/purescript/releases/tag/v0.13.0	valb
20070281	11.888306	-7.408358	story	6.0	229.0	1559410025	7.274463	Discrete Mathematics and Functional Programming (2016)	https://cs.wheaton.edu/~tvandrun/dmfp/	tosh
20074651	11.917331	-7.4445405	story	6.0	5.0	1559472265	10.311265	Ask HN: What do you dislike about statically typed functional programming?		maxhallinan
20074410	12.2463875	-7.523625	comment	6.0	31.0	1559467857	-11.380655	I struggle to see how you pick Java over Kotlin on the JVM these days.  It's everything that Java is, minus everything Java shouldn't be, plus everything that Java should be.		rcaught
20096546	11.710967	-7.2076864	comment	6.0	19.0	1559665664	-8.800404	Would you count coding as a kind or a wicked environment? To me, it seems wicked - standards change, you switch languages, frameworks come and go. On the same token, it could be 'kind' if you isolate yourself to one or two robust languages (i.e. your career is built on C++).		dlivingston
20104726	11.929213	-7.6716847	story	6.0	90.0	1559744965	10.401862	Writing a formally-verified image browser in Coq and Haskell (2017)	http://www.michaelburge.us/2017/08/25/writing-a-formally-verified-porn-browser-in-coq.html	lelf
20106848	12.343577	-7.139355	comment	6.0	26.5	1559755632	3.0277624	Seems like they're just doing associations, and not controlling for a lot of factors. For example, you can come up with some narratives to explain a lot of these findings:* Python, JS, PHP, Java, C++ ...		robbrit
20159668	11.678829	-7.191017	comment	6.0	18.5	1560288260	-8.93834	"> mypy has no trouble understanding this, but it’s unfortunately not valid Python code. You can’t refer to Node within the Node class.No, the workaround is to stringify ""Node"".    class Node(Object):
..."		joshuamorton
20169253	11.652164	-7.943945	comment	6.0	47.5	1560373107	10.239611	I have been using Go in production since 2015 and can honestly say that other than the ternary operator, none of these have been a major issue for me. Granted, I am doing mostly REST API development s...		losingthefight
20200808	11.895076	-7.0311813	comment	6.0	19.5	1560758078	8.292672	Why are the links larger than the body text on mobile? It’s so annoying trying to read this whole article. Especially when one of the links is pushing their commercial support of Java.Good design and ...		dmix
20211497	11.6334095	-7.9397945	comment	6.0	23.0	1560854402	10.183483	The most important property of Go for me is that the language is not red/blue. [1]This enables I/O interfaces to be truly universal, covering just about everything from files on disk, to pipes, to in-...		acln
18934153	12.369411	-7.0748615	comment	6.0	18.5	1547755973	9.041281	"dbg! looks neat. It made me wonder if any of the statically typed compiled languages have an equivalent of Ruby's binding.pry or JS's debugger call? That is, something like  x = foo();
  invoke_debugger(); // An interactive console appears here.
  y = bar(x)"		ainar-g
19048208	11.687265	-7.2995048	comment	6.0	20.0	1548964845	-8.970469	I think java made some wrong decision, with bigggest one being very pragmatics generics-addition, resulting in trouble down the road like List<int> not being possible. But I don't think checked except...		LeanderK
19131890	11.738348	-7.3222384	comment	6.0	16.5	1549856563	-8.864157	Although typing bugs are often the simpler type of bugs to fix.		shhehebehdh
19132664	11.775868	-7.361584	comment	6.0	28.5	1549870574	-8.918617	I've never really understood the advantage of dynamic typing. Not having to specify type to me seems like it's barely an advantage and immediately gets outweighed by the fact that you don't have compi...		Mirioron
19148624	12.196521	-7.2606893	comment	6.0	15.5	1550012816	6.3432493	Forth must be lightning fast albeit single-threaded... has there been any work on a multithreaded Forth? Compiling to BEAM VM might be an option for (not fast) implementation...		pmarreck
19208373	12.324193	-7.517348	comment	6.0	21.5	1550675310	12.829336	The Actor model sounds really great, and while I haven't used Erlang in a serious context, I have used Scala Akka Actors extensively and I find them very difficult to reason about. Actors might be gre...		mruts
19218784	11.652099	-7.94294	comment	6.0	28.0	1550771038	10.207498	Came from Java world, I find the Go comment and godoc are really limited. We can't link between functions, types. We don't have a standard way to declare input, output, don't have any distinction betw...		letientai299
19226067	12.119785	-7.5003376	comment	6.0	25.0	1550849034	-10.567143	I think F# just fits the way he thinks really well. I have that same sort of Zen experience when I code in Ruby. Ruby's object model sets like firmament in my mind and allows me to think about blobs o...		vinceguidry
19252245	11.601384	-7.0954885	comment	6.0	17.0	1551159622	-7.02991	> In its general syntax, Java is very much like C++. But it does introduce some changes that (depending on your perspective) correct some flaws of C++ or botch up some features.Are you sure about that? Was java really like C++ during it's earlier years?		sagartewari01
19272091	11.61482	-7.87403	comment	6.0	36.5	1551368608	10.200621	"> Also, Go is currently lacking generics (read: C++-like templates) because of the rationale ""we do not yet know how to do them right, and once you do them wrong everybody is stuck with them""To be hon..."		kouteiheika
19290036	11.643751	-7.956749	comment	6.0	17.0	1551546898	10.238831	I first encountered this when I began working in golang because it was batteries included with go fmt.I know this makes me late to the party, so can anyone comment on similarly dominant/official tools...		joshklein
19298342	11.79197	-7.320349	comment	6.0	16.5	1551666358	-8.937241	One downside to static typing is the overhead required when writing/running programs.For example, let's say you have a class `Dog` that you want to rename to be more generic so you now call it `Animal...		vivekseth
19310363	11.824096	-7.3604174	comment	6.0	22.0	1551792799	9.278248	"In my experience, it's better to create a ""request context"" at the beginning of handling a request and pass it down explicitly to subsequent async calls that handle the request. I think that this appr..."		tjelen
19311152	11.948457	-7.4427595	comment	6.0	17.0	1551800085	7.1517625	In this context I think it refers to mathematical objects, since the dependencies can be between either values or types in either direction (values to values, types to types, types to values, values t...		betterunix2
19346845	12.484868	-7.493553	comment	6.0	20.5	1552148807	12.919818	Erlang's niche is distributed systems anyway, an area where static typing is at odds more often than not. I mean, you can guarantee the executable you are working on is exempt of typing errors, but it...		sacado2
19347444	12.313566	-7.0277977	comment	6.0	19.5	1552154533	13.172432	That's still the same about Perl, but for different reasons now.> While the rest of the world sees Perl as a legacy language and analysts insist that no one is talking about it, our Perl business is v...		snaky
19387030	11.675934	-7.890508	comment	6.0	23.0	1552546741	10.189637	Go isn’t Java. It’s easy to bring our biases in from other languages, but when you use a language you should be buying into the philosophy, conventions, and style of the language as much as the rules ...		ilovecaching
19386207	11.702902	-7.2432733	comment	6.0	36.0	1552532776	9.249075	Coming from JVM languages, it drives me nuts that I can't .map/.filter/.foreach/.reduce etc. my collections, especially with something like streams/sequences. That's where you really notice the lack of generics if you're used to this sort of programming.		RhodesianHunter
19416439	11.977888	-7.3808937	comment	6.0	18.0	1552855167	7.0466876	Almost no oop languages are actually oop according to Alan Kay.I think his OOP is closest to what we'd call actors today.		kybernetikos
19416583	12.122461	-7.226495	comment	6.0	35.5	1552856619	-6.007723	The big idea of message passing is that it's not about message passing, I think what Alan Kay has been trying to say all these year is that we should look at how bacteria communicate, and try to mimic...		azeirah
19444104	11.635645	-7.978956	comment	6.0	19.0	1553100933	-10.199618	Making sure I understand this: I’m some independent developer working in many languages. I like every project I work on to be inside ~/work/ within a subdir I name based on the project.I used to be an...		joshklein
19471165	11.616651	-7.149275	comment	6.0	15.0	1553359365	9.100621	"    reduce(lambda x,y: (x+y)/2.0, numlist)

Why wouldn't this work?"		rthomas6
19493055	11.748194	-7.1889997	comment	6.0	16.0	1553616215	9.155175	I'm a bit torn on this because I always avoided having too many method calls on the same line. Code Complete recommended this a long time ago.However now I see just about everyone stacking this method...		rb808
19501374	11.919798	-7.694943	comment	6.0	18.0	1553698419	10.0869875	I always enjoy a good Julia Evans article, and this one is no different. She has a very approachable, personable way of explaining technical things, which is missing from many monoid  (and related) tu...		yakshaving_jgt
19518648	11.65914	-7.947983	comment	6.0	21.5	1553826763	10.249727	> The Go standard library doesn't come close to replicating the functionality of RailsWhy would it? It's the standard library. Go has a massive ecosystem of third parties libraries, and unlike Ruby, w...		ilovecaching
19530707	11.654747	-7.1482434	comment	6.0	18.0	1553967934	9.069955	How is map difficult to understand? It’s the same semantics as a for loop with input and output lists, but less boilerplate.		akvadrako
19537792	12.273451	-7.2846417	story	6.0	83.0	1554060868	7.081635	TypeTalk: Proof-of-concept of Smalltalk-like live coding system in the browser	http://cowlark.com/typetalk/	ingve
19562406	12.404475	-7.066097	comment	6.0	35.5	1554289970	12.36676	Allowing @1 and @2 instead of |a, b| is a horrible change to Ruby. In the ruby tracker Matz himself states this is a compromise. So now Ruby is getting half-baked compromises that look out of place, a...		intertextuality
19564613	12.394038	-7.0877733	comment	6.0	20.5	1554308135	12.350444	I'll come to the defense of &. - for better or worse Ruby is mostly used for building database backed web applications where nils are simply unavoidable without some extreme over engineering or awkwar...		jacobsenscott
19572089	12.015306	-7.793649	comment	6.0	18.0	1554384993	10.426965	This article might do better by actually explaining what a monad is in layman’s terms, rather than deferring the reader to Wikipedia via a footnote. I read 1/3 of the article hoping to gain an understanding but gave up and didn’t read further :(		eatbitseveryday
19578351	11.729561	-7.8841143	story	6.0	216.0	1554422439	10.162391	Self-Contained Pure-Go Web Server with Lua, MD, HTTP/2, QUIC, Redis Support	https://github.com/xyproto/algernon	Propolice
19583646	11.894602	-7.4464617	comment	6.0	29.0	1554479013	-5.3320165	"I had a thread on twitter about this problem of ""musicians nerding over gear."" In our metaphor it was about mountain climbers. The programming language and its paradigms chosen may have some effect on..."		agentultra
19583734	11.985785	-7.3584337	comment	6.0	18.5	1554479535	7.108633	"This is a bit like the ""Islam is a religion of peace"" discourse. I'm sure it is, but:OOP as actually implemented and found in the wild isn't about Smalltalk or message passing. It's about transforming..."		thraway-burnout
19602961	11.652861	-7.956607	comment	6.0	17.5	1554708628	10.114067	> gfile is a WebRTC based file exchange software.> It allows to share a file directly between two computers, without the need of a third party.Can it be done with a single HTML file instead of Go?You know, which can be hosted anywhere even on Github pages.		est
19697625	11.816837	-7.335199	comment	6.0	24.0	1555657215	-8.800977	"I don’t know but I hate it. Not sure if I’m in the minority but it sure feels like it. In an ideal world. I feel that types are something that should be dealt with at the IDE level.
In fact, there so ..."		jaequery
19703123	12.13417	-7.8915663	comment	6.0	21.0	1555709031	-3.1925683	Generally, I tend to care more about math if it relates to my specific interests. I'm in ML and robotics so I've found it useful to understand algebra, topology, real analysis.I've tried to get into C...		formalsystem
19703388	12.1393585	-7.862958	comment	6.0	18.5	1555711311	-3.2284606	I watched a little less than the first half of Bartosz video lectures and I still don't see what the fuss is about from the perspective of an engineer that is looking to get better at engineering.I ca...		armitron
19706030	11.746409	-7.167195	comment	6.0	25.5	1555761103	8.935949	> can't even use a dict as a dict keyCurious, is this actually something you want to do often? While there is no hashable+immutable frozendict ala frozenset, you could throw one together or even defin...		np_tedious
19715474	11.942432	-7.4214926	comment	6.0	20.0	1555893199	7.139259	"I'm really sick of these 'why blah sucks' posts.  Clearly OOP works for a lot of people.  If it doesn't work for you, don't use it.  
My personal feeling is that FP works better when the problem domai..."		peterashford
19716433	12.160035	-7.2815104	comment	6.0	24.5	1555905746	7.1678524	> Isn't a method call a message, and the return value a message back?It is!In my view, the point that Alan Kay and Joe Armstrong are trying to make is that languages like C++/Java/C# etc have very lim...		revvx
19781634	12.135651	-7.878007	story	6.0	94.0	1556565269	-3.2136624	How category theory is applied	https://www.johndcook.com/blog/2019/04/29/how-category-theory-is-applied/	furcyd
19782940	12.137897	-7.878625	comment	6.0	17.0	1556574816	-3.2158375	"Gives three examples of bits of mathematics with really strong concrete uses.Then says that category theory ""does not itself solve hard problems in topology or algebra. It clears away tangled multitud..."		twic
19788681	11.657898	-7.944418	story	6.0	63.0	1556637402	10.1437	Gopls: Language server protocol implementation for Go	https://github.com/golang/go/wiki/gopls	ra7
19839637	11.721554	-7.2889385	comment	6.0	19.0	1557152455	9.215899	My question would be, why is Lambda-calculus not a good programming language in practice?		galaxyLogic
19867988	11.848089	-7.3845553	comment	6.0	18.5	1557407957	7.029953	"I agree with ""anti-inheritance"" as a general guideline, but its adherents have to recognize the significant practical upsides of inheritance in many situations.Imagine you have an interface with 20+ m..."		noego
19968997	11.970765	-7.3555975	comment	6.0	16.0	1558436041	7.0203805	>, he realized that while software routinely has trouble scaling, cells can easily coordinate and scale by a factor of over a trillion, creating some of the most fantastically complex things in existe...		jasode
15762956	12.414075	-7.0580006	comment	6.0	22.0	1511414085	12.365464	Not just Ruby, Python too.Was doing some work of converting [0,1] signals to 16-bit PCM data with 550Hz tone in numpy.Python version took ~15 minutes to generate 5,000 4 second files. Broke out the inner loop into Rust with FFI via ctypes and cut that time to ~10 seconds with nearly identical code.		vvanders
15786888	11.617296	-7.067169	story	6.0	16.0	1511787052	-10.481491	I is=“the walrus”	https://bkardell.com/blog/TheWalrus.html	robin_reala
15798791	12.210536	-7.5485907	comment	6.0	19.5	1511887224	-11.388733	"Multiplatform docs here: https://kotlinlang.org/docs/reference/multiplatform.htmlExample from the docs:  // Common module
  
  package org.jetbrains.foo
  
  expect class Foo(bar: String) {
      fun ..."		EddieRingle
15808495	11.634943	-7.2938786	comment	6.0	24.5	1511975182	3.4135926	> things that were equivalent in your first analysis are not equivalent in your second analysis so you can't reuse results and symmetries from the previous analysis in the new analysis. That has to be...		pron
15815067	12.144546	-7.0449424	comment	6.0	15.5	1512043154	-9.303886	"Literally only object as new typehint, not the classname of the object? This doesn't really help much.
https://wiki.php.net/rfc/object-typehintLooks like they went back into perl-mode"		rurban
15841474	11.994522	-7.7342157	comment	6.0	30.5	1512362213	10.408541	> Writing Haskell is almost trivial in practice. You just start with the magic fifty line {-# LANGUAGE ... #-} incantation to fast-forward to 2017, [...]This was my biggest frustration with Haskell the last time I used it, I find it sad that it doesn’t seem like they’re trying to fix it.		MBCook
15842135	11.599463	-7.099273	comment	6.0	19.5	1512372235	-8.44718	I've been doing something similar. I name the new method Method, rename the old one as MethodOld and in Method, before the return value, I put an assert(MethodOld(args) == return value). It's one of t...		adamnemecek
15882616	12.506062	-7.8415346	comment	6.0	19.0	1512771902	-11.100462	Is clojure.spec a replacement for static typing? I ask because I've taken a look at clojure in the past and generally like what I see, but after moving from JavaScript to TypeScript at work I don't th...		disease
15904694	11.661748	-7.8690724	comment	6.0	21.5	1513077701	10.269306	I know this is about the weakest critique possible, but currently using Go, I know my next project won't be in it, simply for the impossibility to put an opening curly brace on its own line. Other lan...		musage
15937597	11.788946	-7.2664604	story	6.0	129.0	1513397527	7.298902	Clean – A functional programming language	http://clean.cs.ru.nl/Clean	EvergreenTree
15938135	11.996802	-7.763427	comment	6.0	22.5	1513405862	10.420297	You wonder why Clean isn't as popular as Haskell and Ocaml.I've read it's the lack of community.  The name doesn't help either.		emmelaich
16056163	11.714191	-7.741021	comment	6.0	30.5	1514930398	10.134795	The author misses the point when he says this might help Java regain share in the space of DevOps tools which is currently mostly Go.The problem is not artifact size but the JVM slow start-up time. Th...		dullgiulio
16090220	11.8335905	-7.027413	comment	6.0	23.5	1515320362	-9.066593	"This notebook should be named ""how to abuse decorators"". Honestly, there is very little here that you want to use in a real project.I completely agree in that saying ""a decorator is a function that ta..."		ramnes
16091085	11.667675	-7.9639945	comment	6.0	21.5	1515338026	10.192996	"I do not quite see the point of this (other than being an exercise).We already have web server that do ""logging, tracing, health check, graceful shutdown."" I do not care about zero deps, because I onl..."		chrisper
16096693	11.703413	-7.2358522	comment	6.0	16.5	1515419658	-10.344765	I wonder what the author would think of today's Lisps, or languages like Haskell and Prolog that embrace non-sequential execution, allow you to freely define infix operators, and have a where syntax.		nerdponx
16167560	11.864966	-7.414286	comment	6.0	26.0	1516194590	10.381532	Despite being a new language, what little I have seen of it looks pretty old school, i.e functional features seemed like an afterthought and also perhaps features like pattern destructuring and immutable data structures.		billfruit
16169921	11.911268	-7.208241	comment	6.0	16.5	1516210656	-5.9635887	Are there any open-source immutable databases yet? Or would the hegemony of SQL semantics (which seem quite tied to mutability) somehow disincentivize such an undertaking?		pmarreck
16204809	11.67387	-7.8720894	comment	6.0	16.5	1516633468	10.195897	I write somewhat simple programs and webapps for my job, from time to time. I use Python and its standard library, some modules, and the Bottle Framework. Pulling data from APIs, doing analysis, takin...		unethical_ban
16236297	12.249274	-7.5797806	comment	6.0	24.0	1516929349	11.779741	Not sure why Kotlin would be picking this fight - Python and to some extent R already dominate in data science with a little bit of Scala added in Spark - where does author see an opening for Kotlin? ...		bitL
17886071	11.686752	-7.663045	comment	6.0	20.5	1535727354	10.338316	Assertions, throws, and try-catch are code smells. Really bad design choice considering we have more elegant solutions like monads.		pmichalina
17905251	11.984703	-7.742112	comment	6.0	43.5	1536013117	10.422103	I don't disagree in general but is Haskell a big language?		mac01021
17905297	11.960842	-7.6791234	comment	6.0	18.0	1536013737	10.387398	"Haskell has a ridiculous number of obscure operators. Here's a list of ""common surprising"" operators in Haskell:https://haskell-lang.org/tutorial/operators"		wtracy
17924064	11.598725	-7.879987	story	6.0	85.0	1536211460	10.204773	How to write a parser in Go	https://about.sourcegraph.com/go/gophercon-2018-how-to-write-a-parser-in-go/	beyang
17926655	12.245229	-7.523469	comment	6.0	20.5	1536244988	-11.191952	I wonder how intellij will survive if vscode becomes a standard for pretty much every language.Which makes me wonder if kotlin will also survive if intellij goes bankrupt.		bsaul
17933404	12.401445	-7.551761	comment	6.0	27.0	1536319268	10.32111	"I tried ReasonML an year ago.It was __very__ amusing to play with Variants, Pattern Matching and Units. If programm compiles - it almost always just works.
It's an indispensable tool to play around an..."		garkin
17976802	11.78434	-7.338626	comment	6.0	17.5	1536824881	-8.876256	Do you think dynamic types was a mistake? Almost all popular dynamically typed languages have some sort of type hinting. All new promising languages have chosen to be statically typed.		pritambarhate
17981644	11.672768	-7.6020913	comment	6.0	17.0	1536867012	10.02143	This sounds like it is just going to trade one set of problems for another. It makes it impossible to write generic container types. What if elements of the same collection need to have different structure? What benefits justify this extremely tight coupling?		philipov
18037855	11.642594	-7.9615717	comment	6.0	26.5	1537515295	10.245405	I hold the source code of Go standard library & base distribution (i.e. compiler, etc.) in very high regard. Especially the standard library is, in my opinion, stunningly easy to read, explore and und...		akavel
18038514	11.754347	-7.308749	comment	6.0	16.0	1537524336	9.202843	> That's just a C# idiomNot just C#, Python and JS also have it already. And async-await is the first time ever where I've thought that yes, this is a good way to do single-threaded async (event-queue...		mschuetz
18047931	11.687459	-7.435588	comment	6.0	18.0	1537649580	-8.719812	Is there a reason dependent types are not more common?		Mythroat
18109588	11.920422	-7.5146255	comment	6.0	19.0	1538360270	10.361236	In functional programming:[0] The Structure and Interpretation of Computer Programs[1] The_Little_Schemer[2] Programming in Haskell - Graham Hutton[3] Types and Programming Languages-Benjamin C. Pierc...		allenleein
18142307	11.706729	-7.819337	comment	6.0	20.0	1538677673	10.249727	"That's a good point.  Modern programming languages are all pretty big and complex and whenever someone tries to nail down ""this is why it's good/popular"" there always seem to be other significant fact..."		ken
18142489	11.787058	-7.633275	comment	6.0	26.5	1538678968	9.648279	Its fairly interesting that this article doesn't mention actors, futures/promises and async/await style co-routines which are all extremely available in all of the major languages available today and ...		kasey_junk
18154288	11.757887	-7.5747223	comment	6.0	16.5	1538818139	10.175563	Disappointingly, the article misrepresents the most serious criticism of the GoF patterns:> we often heard folks say that software patterns existed only because people used horrible languages like C++...		klmr
18154800	11.776886	-7.1183195	comment	6.0	15.0	1538828808	5.3852034	Patterns are just named best practices, you can't argue they, as a concept, failed, it's ridiculous.Some patterns solving problems in C++/Java context don't translate to ie. Haskell/OCaml - and that's...		mirekrusin
18155178	12.107524	-7.8495417	story	6.0	152.0	1538834958	10.442102	Adding an Effect System to OCaml [video]	https://www.janestreet.com/tech-talks/effective-programming/	tosh
18162167	12.485593	-7.841463	comment	6.0	19.5	1538939860	-11.126362	That is pure and utter FUD I'm afraid. My team has been working with Clojure for over 8 years now. We have tons of code in production, and we don't have any problems maintaining these projects. Furthe...		yogthos
18168691	11.672615	-7.641052	story	6.0	86.0	1539015149	10.022131	Reified Generics: The Search for the Cure	https://gbracha.blogspot.com/2018/10/reified-generics-search-for-cure.html	wstrange
18174854	11.987437	-7.7220793	comment	6.0	24.5	1539082691	10.392731	Please, don't add them to the language. Use the library approach instead, it is much more Haskellish.		thesz
18197082	11.664581	-7.1144557	comment	6.0	19.5	1539292397	-8.523133	"In python 3.6 and up, that becomes    def example_cheater(color, flavor, age):
      return f'I am {age} years old and I like to wear {color} hats and eat {flavor} icecream'

Even nicer!"		avbor
18202308	12.090598	-7.0902534	story	6.0	82.0	1539359866	8.369344	Entity Component Systems and Data Oriented Design [pdf]	http://aras-p.info/texts/files/2018Academy%20-%20ECS-DoD.pdf	magoghm
18235624	11.8079815	-7.114067	comment	6.0	24.5	1539743508	-9.017582	I've started to wonder what the place of Python is at all. Machine Learning has become deeply coupled with Python, so you have that side of things, but that's not my personal area of interest.People s...		basil-rash
18246896	11.880459	-7.6382003	comment	6.0	18.5	1539852223	10.3002	I had no idea Haskell used 'kind' to refer to something codified and concrete in this way -- usually we see the word 'type' used to refer to the concrete type-systems stuff, and 'kind' to refer to the...		MaxBarraclough
18251205	11.901109	-7.318615	comment	6.0	21.5	1539889789	7.1233454	I think OOP is fine as long as it's the only thing you are doing and as long as it is single-threaded.Problems will occur if you need to convert the innards of your objects to data (i.e. JSON etc.), i...		beders
18269540	12.339404	-7.0482793	comment	6.0	28.5	1540148568	13.185702	Pretty cool, but why would anyone new want to invest in Perl when it has the language problem of Perl 5 or Perl 6 ?Imho they should just fork Perl 6 and continue developing Perl 5.		platinium
18383065	11.754315	-7.2326775	comment	6.0	25.0	1541432119	9.399696	Having lambda doesn’t mean to be FP. One of the core features missing in Java (JavaScript also) is TCO(tail call optimization)		rydel
18399389	11.5987215	-7.965248	story	6.0	188.0	1541601704	10.132036	Writing Network Drivers in Go [pdf]	https://www.net.in.tum.de/fileadmin/bibtex/publications/theses/2018-ixy-go.pdf	crunchiebones
18423272	11.633606	-7.9135046	comment	6.0	35.5	1541881133	10.201519	In the last 3 months, we have built the new version of our API in Golang, the old one was in rails. The api serves a mobile app and a web app.Despite taking longer to build, it's a treat to work on Go...		pcx
18423085	11.657346	-7.972719	comment	6.0	28.0	1541878938	10.225089	I love Go, used it a lot for over 3 years. I love the simplicity, directness, the inline structs, but I still cannot get out of the package management mess. I can even tolerate `if err != nil, return ...		CSDude
18531582	11.673498	-7.308123	comment	6.0	17.0	1543214514	-8.817641	Hi Hacker News PL enthusiasts. This is off topic, but I hope you will have mercy on me.I'm reaching out for some help from you. I've been working on interpreters this whole year, taking on no more wor...		eiurafhlfie
18532691	12.047971	-7.7648077	comment	6.0	21.5	1543233705	10.474339	I'm currently looking for the language and framework to use for a project, and I'd like to go with a functional language.I really, really want to do my next project in Ocaml, but... I find the ecosyst...		raphinou
18532937	12.222645	-7.6175046	comment	6.0	16.5	1543236519	11.923757	You didn't mention Scala. It has access to all Java libraries, and it doesn't force you to into a single fixed mindset like Haskell's purity at all costs.That said, it doesn't seem to have taken off, ...		tom_mellior
18561819	11.635381	-7.941481	comment	6.0	24.5	1543511855	10.2399845	Well I must say the Go team is certainly putting in the work to avoid a catastrophic major version bump (e.g. Python).That said, any major additive change to Go, especially generics and/or try/catch w...		ilovecaching
18561884	11.631873	-7.919908	comment	6.0	24.0	1543512330	10.189257	I really really hope Go 2 can do something about `context`.  Context is the biggest hidden wart of Go.  We need the capabilities of context in different packaging.		infogulch
18562038	11.648699	-7.9660697	comment	6.0	16.5	1543513497	10.214053	I haven't been keeping up with Go much these days but is there proper debugger support now? Or is it still a half-broken experience?		curiousDog
18564503	11.614275	-7.923176	comment	6.0	15.5	1543528740	10.193447	I'm learning Go, just a naive question, why does Go put the variable type at the end of declaration, is this an absolute need? no other widely usage language does that, and it just feels odd to me.		ausjke
18608546	11.692791	-7.510692	story	6.0	92.0	1544020881	9.807599	Type erasure and reification	https://eli.thegreenplace.net/2018/type-erasure-and-reification/	matt_d
18644150	11.666689	-7.0602703	story	6.0	75.0	1544399924	5.3272715	“A pattern language” explained (2016)	https://www.permaculture.co.uk/articles/pattern-language-explained	simonebrunozzi
18651227	11.720713	-7.2534	story	6.0	14.0	1544476593	9.154149	The Problem of Async Programming, and a Crazy Idea for Solving It	https://medium.com/connect-platform/the-problem-of-async-programming-and-a-crazy-idea-for-solving-it-cf368a9ea949	lorean_victor
18655932	12.241174	-7.6469088	comment	6.0	17.5	1544542413	11.95732	I worked professionally for a year with Scala. For me the biggest problem were functional fanatics that design solutions only top 20% of devs can understand. The rest comes from the object oriented re...		zie1ony
18669550	12.149548	-7.574915	comment	6.0	23.5	1544669954	11.897688	Having used and enjoyed F#, I ended up programming in Scala which is almost the same language, despite the huge superficial differences:- Indentation delimited blocks vs curlies- CLR vs JVM- Whitespac...		lihaoyi
18707576	11.744173	-7.27023	story	6.0	8.0	1545149237	-8.875335	Ask HN: Does type safety matter for a web app?		InGodsName
18709918	12.109508	-7.509051	comment	6.0	16.0	1545162829	-10.602857	"""No matter if you are already a functional developer from a different community (Haskell, Clojure, Scala, etc.) or you are a complete newbie to functional programming (like I was 3 years ago) I think ..."		ken
18732244	11.616626	-7.923159	comment	6.0	22.5	1545384270	10.186994	"you don't have to like go, I'm not ""liking it"" per say, but what's the alternative if you want static typing/compile language, Java, well the compile time is to big for my taste, do a change wait 30 seconds, also it needs to munch ram, Net core could not get it to run."		knan
18732302	11.623376	-7.7299056	comment	6.0	19.5	1545385130	10.251457	An interesting tidbit I learnt from a former colleague:He wrote a small but non-trivial project in Go, and ended up re-writing in Python. Over time, he and his team measured both codebases and found t...		danpalmer
18749085	11.869311	-7.4143147	story	6.0	89.0	1545607274	-10.9070015	Lenses: Composable Getters and Setters for Functional Programming	https://medium.com/javascript-scene/lenses-b85976cb0534	ericelliott
18752938	11.699912	-7.3979383	comment	6.0	18.0	1545670218	-8.803396	Can you comment on why a good type system became so important to you? I can understand the value in interfaces but not really in any other context.		astazangasta
18756205	12.482494	-7.384487	comment	6.0	18.0	1545717931	12.854051	More generally:A process (P) fails. Its supervisor (S1) restarts it. If (P) fails 3 times in 5 seconds (configurable,but no backoffs) then (S1) will fail. S1's parent supervisor (S2) will now restart ...		latch
18808984	12.302571	-7.3231196	story	6.0	122.0	1546456024	7.076649	Smalltalk 80 – Blue Book (1983) [pdf]	http://stephane.ducasse.free.fr/FreeBooks/BlueBook/Bluebook.pdf	tosh
18854419	11.756356	-7.326657	comment	6.0	18.5	1546939931	-8.88398	Most people do not care about types, they care about smart intellisense and detecting errors such as a misspelled property.		z3t4
18864847	11.700924	-7.5002155	comment	6.0	24.0	1547043896	-10.314469	Nice list, thank you for compiling it. I'm one of the Nim core devs so I naturally disagree. A lot on the list is painted as a negative, whereas I see it as a positive, in particular:> * A return vari...		dom96
18891449	12.042183	-7.5194755	story	6.0	4.0	1547305780	7.276887	Ask HN: How to learn Functional programming using a small language?		philonoist
18907287	12.171034	-7.0577273	comment	6.0	25.0	1547506051	-10.207972	Are there any people that have switched to TypeScript that still think dynamically typed languages have advantages over statically typed ones? Even for small projects with only me working on them, I f...		seanwilson
29703949	12.287423	-7.3659844	story	6.0	84.0	1640623179	-9.838359	Luerl – An Implementation of Lua in Erlang	https://github.com/rvirding/luerl	sbuttgereit
29712190	11.754883	-7.181047	comment	6.0	18.5	1640686358	-6.821037	Since Rob Pike wrote this note in 2000, there have been many commercially important advances in systems software:- iOS and Android: Power-efficient mobile systems, wakelocks, etc.- Docker, Borg and Ku...		ekidd
29730282	11.591895	-7.913957	story	6.0	94.0	1640813420	10.171228	Go CheckLocks Analyzer	https://github.com/google/gvisor/tree/master/tools/checklocks	lima
29730267	11.598629	-7.044953	comment	6.0	21.0	1640813351	-7.3115225	"This one is kind of interesting:""Params: Function parameters must be named, but no need to repeat yourself, if the argument is named the same as the parameter (i.e. keyword arguments can be omitted). ..."		ianbicking
29734082	12.037561	-7.788588	comment	6.0	16.0	1640843673	10.41622	"Can you describe a monad without using the words ""functor"", ""applicative,"" ""endofunctor"" or using Haskel syntax to describe it?"		spc476
29737001	11.80726	-7.4835253	comment	6.0	17.0	1640874944	-8.632912	In 2017 I went to StrangeLoop and Papers We Love was collocated. Such a great experience. I saw a talk about how type inference in OCAML worked (Hindley–Milner type inference) and I basically didn't u...		adamgordonbell
29749922	11.790507	-7.3166637	comment	6.0	16.5	1640970195	-10.474515	> We are in an industry that is so new, so fast-moving and so financially rewarding that people tend to gravitate towards popular programming languages. These people are quick to migrate to a new tech...		ducharmdev
29776587	12.003445	-7.7636056	comment	6.0	18.5	1641176344	10.432182	I know a startup that hired a Marxist-collective group of programmers. I was told this story years ago, and they were acquired, so I’ll just name the firm - “White Ops”. This story is so absurd that I...		seibelj
29780739	11.621803	-7.954242	story	6.0	361.0	1641217787	10.201488	Compiling a Go program into a native binary for Nintendo Switch	https://ebiten.org/blog/native_compiling_for_nintendo_switch.html	hajimehoshi
29812158	11.690361	-7.18407	comment	6.0	23.0	1641404429	-8.997262	Yeah this is great, __init_subclass__ comes along to make dynamic injection of methods and attributes on class creation easier, just as the entire practice is fast becoming fully obsolete because type checkers like pylance and mypy report these attributes and methods as errors.		zzzeek
29824638	12.495388	-7.7423935	comment	6.0	18.0	1641482584	-11.210044	That is the frying pan to the fire.JDK 17 has most of the good features of Scala and Kotlin.Scala seems to be designed so that you can write a short book with very fluent and natural looking demos.  M...		PaulHoule
29835973	11.786668	-7.287182	comment	6.0	17.0	1641539175	-8.87261	It would be interesting if you could have a hybrid somewhere between Pascal and Python, where you could start just naming variables, and the compiler could fill the types in once the code was complete...		mikewarot
29842738	11.83225	-7.2066975	comment	6.0	29.0	1641579904	-9.0338	The high-level goals of python end up creating these little syntactic landmines that can get even experienced coders. My personal nomination for the worst one of these is that having a comma after a s...		aeturnum
29891995	12.287626	-7.293517	comment	6.0	21.0	1641912487	7.1033926	That seems to be the common complaint about image bases systems like Smalltalk and (some versions of) Common Lisp.  The difficulty of collaborating, auditing, deploying, continuous integration and rol...		jimbokun
29906389	11.628967	-7.708057	comment	6.0	16.5	1641996192	10.292299	I want a programming language that can do a lot, from web, game and IoT, with type system like Haskell/TypeScript/Rust/Ocaml and simplicity of Go		mrkentutbabi
30008384	12.1803255	-7.0292325	comment	6.0	32.0	1642684065	-10.470718	Despite the large amount of criticism in the comments here I think that the point the article makes here is pretty valid.The described features are not what TypeScript itself wants to be, and I think ...		leodriesch
30063026	11.827016	-7.134655	comment	6.0	15.5	1643053948	-7.8284025	I would be terrified to see how some of the people I've worked with would abuse descriptors... thankfully they never knew about them(or it wasn't a python shop).I've never understood the rationale tha...		jcoq
30069244	11.747197	-7.088176	comment	6.0	15.5	1643096504	-9.003882	That's because the use case for classes appears when the information needed to understand the program exceeds the programmer's working memory. At some point, you need some way to make something into a...		Animats
30075512	11.636815	-7.9311705	comment	6.0	23.0	1643134237	10.195207	go means it's going to be easier to integrate to esbuild :)I'm happy to see this, as honestly I don't really understand why you would compile TS without type checking.		forty
30077967	12.010642	-7.218558	comment	6.0	20.5	1643144547	-10.412919	Just today I was triggered that this compiles.declare foo: never[] // it can only be an empty arrayfoo[1] // compilesTypeScript is a nice type system, it's surprisingly expressive and flexible, like e...		epolanski
30205996	11.832489	-7.0903788	comment	6.0	22.5	1643978138	10.035111	Serious question: what are the odds that go 2 ends up like python 3 and it takes the world over a decade of pain to migrate? (I like both python and go, and I’m still maintaining a sizable body of py2...		bstpierre
30256445	12.025541	-7.7481823	comment	6.0	19.0	1644312662	10.419436	"It's a good idea to try to find a job this way, but given that he has been part of the Haskell community for a long time one might ask ""Why can't he find a job using his network?"" given his accomplish..."		jll29
30288000	11.806991	-7.1766596	story	6.0	12.0	1644508664	-9.016444	Ask HN: Let's discuss Python type hints guidelines		gr33ndata
30294095	11.942258	-7.380125	comment	6.0	20.5	1644534469	7.0072055	I don't quite understand what this is trying to say. It's a summary review of some reviews? Or something. It's not even clear if the author of this post agrees or disagrees with the claim in the YC Ne...		jiggawatts
30360774	11.979824	-7.7504044	comment	6.0	25.5	1645023464	10.377261	"I've been waiting for this piece for a while. Monads don't compose!Under an effect-based system:    fn get_user<F>() -> F<User> 

Is like having an explicit effect F:    fn get_user<F>() ->{F} User 

..."		isaacimagine
30361636	12.310642	-7.0159826	comment	6.0	17.0	1645026999	-12.624798	I don't get it! It is clearly written in the code, that the progam should behave this way.Is the proof, that perl is capable of this behaviour?! I don't get it - what is the point?I read all the comments and still don't get it. What am i missing?		reneberlin
30393898	12.145601	-7.8790493	comment	6.0	18.5	1645237841	-3.1501002	How does one know which category they are in?		vatys
30394865	12.082582	-7.1936326	comment	6.0	17.5	1645252210	0.2372038	Is there any data on how many people care about said promises as opposed to care about not having an actively hostile and prickly interface? Because I enjoyed tinkering with this kind of thing in my 2...		brongondwana
30415810	12.054761	-7.528614	comment	6.0	17.5	1645451290	10.481952	> Different languages have different failure modes. With Perl, the project might fail because you designed and implemented a pile of shit, but there is a clever workaround for any problem, so you migh...		CraneWorm
30477630	11.954087	-7.7005477	story	6.0	123.0	1645884222	10.392096	Failing in Haskell	https://jappie.me/failing-in-haskell.html	zeepthee
30579135	12.013438	-7.7244086	comment	6.0	19.5	1646587476	10.402561	"""Let's forget about Haskell for a second. Look at this Prolog code.""You people live in an ivory tower."		AlexanderDhoore
30582862	11.611123	-7.77254	story	6.0	50.0	1646614442	9.956371	Go Chainable: .map().filter().reduce() in Go	https://github.com/neurocollective/go_chainable	davidashe
30627580	11.801683	-7.286613	comment	6.0	19.5	1646924110	-8.913848	I've often speculated that strong typing only seems like a win to the kind of developer who makes a lot of type errors, and a waste of time to those who don't (which doesn't mean they don't make other errors, of course).		Turing_Machine
30689904	11.6353445	-7.809502	comment	6.0	28.5	1647371813	10.083254	In celebration of generics release, I was playing around with supporting Optionals via generics. If anyone's interested I am happy to make this a real projecthttps://github.com/frenchie4111/go-generic-optional		frenchie4111
30693135	11.680727	-7.5965495	comment	6.0	19.0	1647385659	10.129201	"Problems are not generic. ""I need a N-ary binary tree over arbitrary comparable types"" is not a problem. Problems are expressed in terms of domain concepts that are unique to the problem space, the or..."		preseinger
30722809	11.653091	-7.079431	comment	6.0	23.5	1647614192	8.88336	> which allow developers to say that a function returns Dict[List[Set[FrozenSet[int]]], str]this type is impossible in Python		ghostwriter
16302014	11.964484	-7.7142563	story	6.0	116.0	1517735848	10.407267	Revisiting 'Monadic Parsing in Haskell'	http://vaibhavsagar.com/blog/2018/02/04/revisiting-monadic-parsing-haskell/	signa11
16322413	11.966144	-7.732867	comment	6.0	44.0	1517981236	10.413755	> The result is that I find myself doing more and more things in Haskell, which lets me write high-level code with decent performance (still slower than what I get if I go all the way down to C++, but...		matt_wulfeck
16331766	11.711355	-7.1842628	comment	6.0	19.5	1518094617	-8.968333	I do feel the recent changes have moved to prescription rather than flexibiity though.For example, last I looked, the new configuration manager has to be injected.Injected!To me, who's not a particula...		mattmanser
16335070	12.126197	-7.693794	comment	6.0	25.0	1518119745	10.395069	Why should someone unfamiliar with functional style programming be learning ReasonML rather than say, something like, haskell? Looking for concrete, technical answers.		nafizh
16347094	11.965088	-7.500207	comment	6.0	22.5	1518267103	7.298649	And for non-functional languages?Not everybody wants to spend next 5 years learning thinking bottom-up, mastering category theory, monads and all that for such a task like writing a silly webpage you ...		bitL
16367814	12.152383	-7.521993	comment	6.0	15.0	1518535734	-10.629336	Does anyone have any F# books they would recommend?		bloaf
16386441	12.043211	-7.2208595	comment	6.0	23.0	1518720424	3.6783767	I have a feeling the author doesn't understand Promises well. In my opinion, they are in fact designed poorly, but I don't see any problems with points the author describes.He doesn't like that the ca...		codedokode
16388079	12.043493	-7.7271633	comment	6.0	17.5	1518731710	-0.4271167	"> It also has adheres to Fantasy Land, Static Land, and has defintions for santuary-def.I think I understood a couple words in that sentence, like ""it"" and ""has"". :PLooking up fantasy-land, I found ht..."		dahart
16396192	11.818001	-7.507787	comment	6.0	29.0	1518814841	-10.485355	My experience from a host of language experiments of late: ranging from F#, to Rust, to Nim, to C#, to Go, to C++Is that it just doesn't matter very much.  F# has very powerful generics, and there are...		gameswithgo
16420330	11.661408	-7.194794	comment	6.0	16.5	1519135383	-5.7464013	Is there a reason why functional programming algebra insists on using one letter identifiers?		tobr
16423938	11.696854	-7.93115	comment	6.0	15.5	1519158939	10.233688	Yeah it's crazy that there's still so much controversy around this topic considering Node and Ruby have had amazing dependency management for over half a decade at this point. Dependency management in...		abvdasker
16434566	11.620871	-7.9126368	comment	6.0	26.5	1519264154	10.249877	gofmt is only revolutionary in that it refuses to solve the hard problems that pretty printers for other languages solve. Specifically, it doesn't wrap long lines--ever--even though making visually pl...		pcwalton
16445953	12.022981	-7.7988205	comment	6.0	18.5	1519389779	-4.992696	> Monads can help solve certain classes of problems in a uniform way.You solve 3 completely different problems using the exactly same code and have the gall to call this less complicated? I'm forced t...		vesak
16446222	11.986513	-7.75508	comment	6.0	17.5	1519393272	10.3796215	"But is writing such functions, and all the auxiliaries, pleasant as well? What type would I have to give the ""getData"" function to work in all these examples? What if I just want to call an existing g..."		tom_mellior
16453516	11.959818	-7.692866	comment	6.0	25.5	1519484906	10.430855	So the Haskell version of [1] (in scheme)[1] https://en.wikipedia.org/wiki/Structure_and_Interpretation_o...[Free book] https://mitpress.mit.edu/sites/default/files/titles/content/...		77pt77
16471606	11.624819	-7.92639	comment	6.0	15.0	1519715149	10.208626	One of the reasons I love golang* is how the entire source code for the standard library is just a few easy clicks away from the documentation on how to use it.As an example: When I want to do somethi...		mjevans
16506763	11.682427	-7.9088507	comment	6.0	23.5	1520034030	10.13556	"I'm trying to learn more about this topic and I'm curious if anyone could clarify for me -- 
The reason Go would need a specific architecture for WebAssembly is because Go supports features, like garbage collection, that WebAssembly does not.Is that right? Close? An oversimplification. Way off?"		johnhenry
16556923	11.984041	-7.7444825	story	6.0	102.0	1520652429	10.4331665	Generating artwork with Haskell	http://www.kovach.me/posts/2018-03-07-generating-art.html	Homunculiheaded
16568296	11.788548	-7.908687	comment	6.0	21.5	1520864732	10.190313	How does it compare to Go channels? I only know actors from Scala, Go felt similar but more er, simple?		Cthulhu_
16583877	12.060813	-7.56275	comment	6.0	21.5	1521026425	-11.164796	This is from 2006 though.Since then functional programming has picked up a lot of steam again, and I'm pretty sure having been a lisper for 30 years gets you good jobs. If not in Lisp, haskell, F#, clojure or whatever...		d--b
16605990	11.853908	-7.371538	comment	6.0	17.5	1521273142	6.967609	"Oh, come on. The title submitted to HN is ""Inheritance often doesn't make sense""; the actual title of the article is ""Why inheritance never made any sense"". Are you kidding me?Do we really need, in 20..."		bartread
16606029	11.855064	-7.3860664	comment	6.0	27.0	1521274305	6.9151783	"A couple of other comments have argued that ""ontological inheritance"" and ""abstract data type inheritance"" are actually the same thing:> This is because Squares are Liskov substitutable for Rectangles..."		panic
16616998	11.710434	-7.295685	comment	6.0	16.0	1521450302	-6.558576	I am having difficulty believing that someone wouldn't know how variables are scoped/refernced in function calls like the one you showed in the second example.About the immutablity of strings : Is it ...		abhishekjha
16629606	11.951909	-7.1483107	comment	6.0	27.5	1521560972	-9.070989	"Didn't go through it all yet, but its premise seems kind of off: you can't really discuss ""types in isolation of the language""!Just a basic example of two dynamic languages: In Python I can get a lot ..."		nnq
16638837	12.441062	-7.140341	comment	6.0	30.0	1521645896	12.3714285	"In the ""things learned from Ruby"" section:  Focus on strong object oriented programming

What I've learned from Ruby is to favor functional programming concepts - minimize side effects, isolate state ..."		tcopeland
16640343	12.4734125	-7.6358027	comment	6.0	20.0	1521652934	-10.812782	I've tried a lot of different languages over the years including Ruby, Go, Scala, and Haskell.Ruby actually isn't too bad if you don't use Rails.  Between Rails and stuff like Spring over in Java-land...		jcadam
16733112	11.748012	-7.2584157	comment	6.0	23.5	1522657486	9.157182	Async web servers are more complex than  thread per connection ones.I think that's the big thing the author is communicating.It's true.And most types of development don't need async io. It's worth tal...		throwaway13337
16755912	12.309295	-7.295761	comment	6.0	17.0	1522857284	7.0874457	Isn't Pharo a different language from Smalltalk?		daveFNbuck
16785914	11.635368	-7.974549	story	6.0	100.0	1523192682	10.21105	Fragmenta – A Golang CMS	https://fragmenta.eu	gbugniot
16836290	11.989608	-7.6727667	story	6.0	171.0	1523689977	13.586497	Hackett – A Haskell-like language with support for Racket’s macro system	https://github.com/lexi-lambda/hackett	tosh
16835615	11.941497	-7.4157877	story	6.0	20.0	1523674248	7.1259747	FP vs. OO	http://blog.cleancoder.com/uncle-bob/2018/04/13/FPvsOO.html	PuffinBlue
16863902	12.242691	-7.560693	story	6.0	32.0	1524014715	-11.391018	Dependency injection on Android with dagger-android and Kotlin	http://www.albertgao.xyz/2018/04/18/dependency-injection-on-android-with-dagger-android-and-kotlin/	albertgao
16868532	11.748287	-7.0874963	comment	6.0	15.5	1524068051	8.927282	I'm piqued by one thing in this article. Using an object as a dictionary key. What's the use for that? I don't think it's ever occurred to me to do that.		ianamartin
16922153	11.627414	-7.4381576	comment	6.0	25.5	1524668777	9.273259	This is very very long to explain a very simple pair of ideas:1) You should be able to declare scoped blocks that mandate execution of all tasks started in that block ends when the scope ends.2) This ...		shadowmint
16948770	11.978141	-7.73062	comment	6.0	16.5	1524938208	10.386237	It takes a true Haskell mind to take something so intuitively obvious and make it incomprehensible.Most language users simply take for granted that they can easily write them in C++, Python, Dlang, Java, C#, ...		cjhanks
16998912	11.621149	-7.300787	comment	6.0	35.5	1525472758	-10.344981	This piece seems to have predicted a very active field in everyday software development since then.What are the alternative paradigms that have actually become common use? Coroutines, async/await, tha...		jgtrosh
17016072	11.928692	-7.4428735	comment	6.0	18.5	1525723807	7.288872	Side question: maintenece of functional programs is easier, because you don't need to think about state.Could it be used to create a functional programming language, easily understood by non-programme...		petra
17048845	12.082933	-7.058114	comment	6.0	38.5	1526057437	-10.079634	So, there is a trend to build static type checker for popular managed dynamic languages?Facebook also built Flow, a type checker for Javascript [1].[1] https://flow.org/		nebgnahz
17049499	11.786367	-7.215498	comment	6.0	44.0	1526061750	-8.97639	Python is strongly typed. Now it has static types enforced at runtime. It’s good to be precise when there are so many quirks to expressing and checking types.		drb91
17056436	11.669189	-7.351551	comment	6.0	18.5	1526165436	-8.774155	This got me thinking, and I'm curious what a language would look like if basic types weren't directly usable.In other words, maybe type checking doesn't go far enough: checking that I'm getting an int is less valuable than checking that I'm getting the right sort of data for the domain.		GavinMcG
17073887	12.001702	-7.778167	comment	6.0	23.5	1526392215	10.405286	Really enjoyed this book. Once you get currying, and using curried functions to pipe/compose, everything clicks into place. I found the examples of using Nothing/Maybe monads for error handling pretty...		blindwatchmaker
17100952	12.291763	-7.58585	story	6.0	35.0	1526647425	11.926768	Ask HN: Does anyone want to pair program with me?		estsauver
17119056	12.00094	-7.7376256	story	6.0	41.0	1526916269	10.416696	Tintin – A soft documentation website generator for Haskell	https://theam.github.io/tintin/	NickSeagull
17137992	12.259216	-7.5646677	comment	6.0	34.5	1527107628	0.58501583	Is it me, or does the article feel like it is written by someone who didn’t actually bother to learn Kotlin. Instead they learnt the bare minimum syntax and tried to write Java in Kotlin.The author co...		__sr__
17141486	12.311948	-7.0356374	comment	6.0	15.5	1527142394	13.176535	If a 25 year old programmer were to start learning Perl now, what would you recommend: Perl 5 or Perl 6?		xyrouter
17144101	12.429143	-7.4382772	comment	6.0	23.0	1527171001	10.344818	I really want to use ReasonML in one of my next projects but I always come back to two main questions.How much is it easy to use JS components like the Calendar of Airbnb for instance? And is it reall...		nazka
17172423	12.047144	-7.760371	comment	6.0	25.0	1527516055	10.3523035	So, I’ve programmed in Haskell and Clojure and I really wish people would give over on the Haskell requires category theory meme.What Haskell offers is _generalisation of abstraction_. So, the functio...		moomin
17222543	12.16357	-7.252192	comment	6.0	17.0	1528063452	-8.960895	People created dynamic languages for the exact reason of not having to define types.Now the trend is to bolt on type checking to dynamic languages because people don’t want dynamic behavior. Most deve...		iamleppert
17223885	11.762594	-7.3460965	comment	6.0	38.5	1528077128	-8.810608	"""Why don't they just use (insert static-typed system here) instead?"" someone will inevitably ask.""Because converting a large, complex set of living codebases from one language to another is a non-triv..."		Kalium
17250497	12.209509	-7.6314287	comment	6.0	21.5	1528314855	-9.717409	Having worked with Maven, Gradle, Ruby Gems, Pip and the non-existing Go package management I must say I actually really like the Node / NPM combo. I guess artists are their own worst critics.edit: fo...		tnolet
17326946	11.663788	-7.1754127	story	6.0	62.0	1529147350	9.281548	Lambdas and Functions in Python	http://www.thepythoncorner.com/2018/05/lambdas-and-functions-in-python.html	mastro35
17334042	11.969912	-7.1697206	comment	6.0	20.0	1529265903	8.745964	A few years ago I wanted to make a shoot-em-up game using C# and XNA I could play with my kids on an Xbox. It worked fine except for slight pauses for GC every once in a while which ruined the experie...		drblast
17337612	12.067246	-7.220804	comment	6.0	22.0	1529324038	9.171932	I'm surprised there's not a single mention of JavaScript promises in the post. This is basically what they are, and their syntax naturally imposes this technique as a solution to most use-cases.Here [...		chatmasta
17343577	11.738913	-7.7782235	comment	6.0	22.0	1529378649	3.991774	I appreciate the time obviously spent on this, but i see a couple errors and ommissions. C# and F# are VM languages that run on the CLR which is extremely similar to the JVM.Also, Go and Erlang use fi...		thermodynthrway
17357329	11.879194	-7.3435316	comment	6.0	18.0	1529514917	-4.3306046	Table inheritance seems like a natural one for devs working with a lot of class oriented languages. But also, composition over inheritance seems to be a more frequent watchword. Any experiences using ...		wwweston
17361069	11.876689	-7.2169976	comment	6.0	27.5	1529540175	-8.995831	"This article talks about Python getting type hints.
There as a HN post recently about Ruby getting a type checker (https://news.ycombinator.com/item?id=17217815)I think the debate is largely going in ..."		RcouF1uZ4gsC
17361223	11.941876	-7.0342803	comment	6.0	15.0	1529542762	-9.367277	The more TypeScript I write, the less I like Python. In a recent project that involved pulling some data from Hive via Pandas dataframes and merging it with data from a JSON REST API, then doing some ...		seanp2k2
17381996	11.644725	-7.9434843	comment	6.0	19.0	1529771603	10.168855	Great article! I attempted something very similar and wrote about it here: https://matthewphillips.info/programming/wasm-golang-ce.htmlLike the author I'm pretty enthusiastic about using Go for web de...		MatthewPhillips
17380931	12.121331	-7.10676	comment	6.0	18.0	1529756467	12.379244	That's why I really like the ! In Ruby. If used in a function name it indicates that it will mutate its arguments. It's so straightforward instead of just not knowing or having to use references or pointers.		baby
17416797	12.061308	-7.859272	story	6.0	160.0	1530193789	10.452408	State of Multicore OCaml [pdf]	http://kcsrk.info/slides/mcocaml_gallium.pdf	systems
17457489	11.995096	-7.259856	comment	6.0	20.5	1530715077	9.200501	So I finally took the time to learn `async await` the other day. Holy cow does it clean up my promises.  One thing that burned me bad though was that without a `try` anywhere, my 100 line async functi...		Waterluvian
17536442	11.7043915	-7.03329	story	6.0	75.0	1531680723	-8.0618925	Functional approaches to dependency injection (2016)	https://fsharpforfunandprofit.com/posts/dependency-injection-1/	amzans
17535993	11.709196	-7.3659296	comment	6.0	23.0	1531673615	-10.528459	To me, one of the most fundamental features of Arc is taking the unification of code and data much further. I don't know of other Lisps that do this! K is another language that does.  arc> (= l '(1 2 ...		sctb
17567009	11.60878	-7.971407	comment	6.0	22.0	1532012953	10.162173	Unlike Java, Go doesn't have to worry about bytecode backwards compatibility.  That was the main issue that had them reaching for type erasure.Take a look at C# which added it without many issues (bec...		monocasa
17622709	11.722927	-7.451643	comment	6.0	15.0	1532653637	2.6534746	"(This may be obvious, but I want to hear it from you). Why add ""kind""? Why not just ""actionable and specific""?"		vladf
17645550	12.017339	-7.7826276	comment	6.0	30.0	1532967278	10.390094	The more I've learned about Haskell, the more I've come to realize that Haskell's approach to IO really has very little to do with Monads. Fundamentally, Haskell implementations sequence IO actions us...		foldr
17645758	12.027415	-7.815403	comment	6.0	21.5	1532968781	10.426808	> The incomprehension of the newbies is matched in intensity only by the smugness of the experts.Oh good.  A write up that’s aware of how unapproachable monads seem.  Maybe this will actually be a goo...		thanatos_dem
17700346	11.675582	-7.8912907	story	6.0	4.0	1533581068	10.204076	Ask HN: What is the best statically typed language for back end development?		aswinmprabhu
17702237	11.722206	-7.1639333	story	6.0	95.0	1533593646	6.8215375	Show HN: Inko – A safe and concurrent object-oriented programming language	https://inko-lang.org/	YorickPeterse
17714082	11.884361	-7.0882926	comment	6.0	20.5	1533717143	-10.769067	Yet another asyncio tutorial that shows you to run a few sleep tasks concurrently. Can we finally get one that shows how to do real stuff such like socket programming, wrapping non-async-compatible libraries and separating cpu-intensive blocking tasks to awaitable threads?		anilakar
17714304	11.887955	-7.092461	comment	6.0	19.0	1533720669	-10.737895	That's because most of those tutorials have not been written by somebody actually putting something in production.I've been using asyncio for a while now, and you can't get away with a short introduct...		sametmax
17780089	11.914868	-7.4533615	story	6.0	60.0	1534476599	-10.612116	F Natural – Putting the fn back in functional	https://github.com/billhails/PyScheme/wiki	totalperspectiv
17793296	11.610786	-7.3733735	comment	6.0	17.0	1534667912	5.7126327	Isn't it a little odd that these are called modules when they sound very much like packages? In many languages, a module is just a source code file that can be imported. Why is Go redefining this term?		dom96
17798563	11.701706	-7.449883	comment	6.0	17.0	1534756063	-10.727999	I love python. But its seriously, incapable for doing non trivial concurrent tasks. Multiprocessing module doesnt count. I hope the python core-devs take some inspiration from golang for developing the right abstractions for concurrency.		ram_rar
17813071	12.012293	-7.7160563	comment	6.0	29.0	1534881087	10.406406	I tried LYAH before I had any real functional experience, and it went poorly. I think I wasn't dedicated enough.I took a programming languages class taught in Racket, and by the end of that semester I...		DonaldPShimoda
17841308	11.713704	-7.9752445	comment	6.0	17.5	1535212777	10.216626	One really minor, but powerful, thing I'd love to see from the Go team is a better designed documentation experience. Here's the Google-produced Github library godoc [1]; its absolutely horrendous to ...		013a
17857321	12.028589	-7.12116	comment	6.0	17.0	1535444380	-9.092885	I think the types argument is bullshit but it's just my opinion. Do python or ruby devs really feel they are less productive than java devs because they have no types? What I see happening is language...		joelbluminator
21002933	11.769039	-7.4292526	comment	6.0	19.5	1568789633	9.982347	> Having reusable functions that work just as well on lists, maybe/option, reader, io / promise or what have you means these type classes do a very good job at abstracting over data types. These are t...		mnsc
21007087	12.077885	-7.210824	comment	6.0	20.5	1568824560	9.182591	Why not just use promises?side note: legit question, I don't do web/app dev		nostrebored
21033226	11.653027	-7.343135	comment	6.0	19.5	1569035221	-8.831569	This is 2019 and the security community has yet to deliver a proper solution to prevent the existence of such bugs. The mismatch between programmer intent and code behavior is appalling. Sure, super s...		ngneer
21039072	12.102058	-7.869122	story	6.0	131.0	1569116068	10.449155	A look back on OCaml since 2011	http://www.ocamlpro.com/2019/09/20/a-look-back-on-ocaml/	andrenth
21101656	11.824594	-7.6552525	comment	6.0	18.0	1569692095	10.386696	>Bad bad point. There are statically-typed languages with fairly complex type systems. There are even dependently typed languages which check essentially any property of you values and can be used to ...		coldtea
21146694	12.015368	-7.6549206	comment	6.0	26.0	1570109416	-9.180107	So, I love me some ML-style languages, including Haskell, but I've also come to think that Rich Hickey is right about the real problems of business programming not being well solved by digging in on t...		mumblemumble
21170834	11.9712925	-7.7095013	comment	6.0	18.0	1570353844	10.3319845	"Everyone is smart enough to write Haskell.   
Almost no one is smart enough to read Haskell.There is a reason loops are easier to read and maintain compared to a fold(map(filter(zip(...))))."		fooker
21171154	12.020174	-7.794083	comment	6.0	31.0	1570358596	10.468295	"Condescending tutorials seem to be an integrated part of Haskell culture. The rationale might be that people who don't already know Haskell should to talked to like kids. ""Don't be scared, a monad is ..."		goto11
21171266	12.015397	-7.787574	comment	6.0	21.0	1570360365	10.408556	"You need to use the IO monad to write ""hello world"". So it is naturally the first question a newcomer will ask. But for example ""Learn you a Haskell"" http://learnyouahaskell.com/chapters postpones ""he..."		goto11
21205842	11.650131	-7.9684033	comment	6.0	18.5	1570643526	10.222923	Of all new programming languages that have received a certain amount of hype, Go is the only one I never felt inclined to play with after reading about it. It just seems too dumbed-down and backwards....		erokar
21222771	11.657546	-7.952536	comment	6.0	33.0	1570786399	10.167246	Compared to other languages, I find Go's syntactic support for partial application and currying lacking, and every http.HandlerFunc I weep for the redundancy I create.I get that that is Go's design philosophy, but IMO a little syntactic sugar would be nice.		ThreeFx
21283002	11.955494	-7.445763	comment	6.0	28.0	1571325740	7.2266483	> FP will always occupy a niche because of where it sits in the abstraction hierarchyAt some point in history, people stopped worrying about not understanding compilers, how they allocate registers an...		js8
21283747	11.817107	-7.342637	comment	6.0	16.0	1571330075	7.6072745	"""End of the day, the computer is an imperative device, and your training helps you understand that.""I mean... it's not though, is it? Some things happen synchronously, but this is not the same thing a..."		socksy
21301474	11.952403	-7.4545684	comment	6.0	16.5	1571529727	7.198675	"I do think it's a book of quality, which admittedly is a relatively rare category.  But yes, I think it's hugely overrated, especially when characterized as the ""one true best way"" or something, to le..."		jholman
21300754	11.875552	-7.112725	comment	6.0	18.5	1571519035	-8.28415	"Closure seems to focus on purity instead of productivity. When I read this article I imagine my team spending days to implement basic features they could implement in few minutes with vanilla JS. 
Business don't care about code purity. Only security, performance and correctness really matter."		js4ever
21323206	11.943902	-7.7203074	comment	6.0	20.0	1571749980	10.423817	"I think the problem is not just subjectivity, but also that people often give strong opinions without examples.Here's an example about Haskell. Go to https://tryhaskell.org and enter these:    3
    d..."		cousin_it
21394352	12.08049	-7.8505874	story	6.0	123.0	1572405008	10.4276705	Machine and Deep Learning with OCaml Natively	https://ocaml.xyz/chapter/neural.html	xvilka
21480371	12.0632305	-7.439485	comment	6.0	15.5	1573194744	9.001067	I’d recommend Scott Wlaschin’s excellent book “Domain Modelling made Functional”. The examples are in F# but the concepts apply much more broadly.		jen20
21495808	11.591279	-7.939479	story	6.0	91.0	1573349629	10.201116	Improving Go code: An introduction to the static analysis tool Staticcheck	https://superhighway.dev/staticcheck-in-action	ngaut
21537911	11.806545	-7.1397696	comment	6.0	27.0	1573755976	7.065137	The nuisance of having to add self as parameter to every class method, no way of enforcing private methods and the mix between methods on objects and functions in the standard library. OO feels more i...		erokar
21552742	11.771049	-7.7601023	comment	6.0	18.0	1573914023	10.291341	I wish developers of TypeScript would learn from Go. TypeScript is awesome, but it is getting larger and larger and larger with every release. Soon it will become like the US tax code, and no one person will know the entire language.		petilon
21552264	12.19498	-7.3488307	story	6.0	66.0	1573906249	6.881157	Objective-Smalltalk	https://blog.metaobject.com/2019/11/presenting-in-objective-smalltalk.html	mpweiher
21637284	12.229174	-7.6209154	comment	6.0	18.5	1574766900	11.911755	Anyone know what's the minimum size of the compiled JS now? Is there any way Scala.js can produce code as compact as BuckleScript/ReasonML in the future?I like Scala's syntax but the last time I tried...		utkarshkukreti
21715426	12.008869	-7.778194	story	6.0	75.0	1575573505	10.420053	Monads, or Programmable Semicolons (2014)	https://zacharyvoase.com/2014/04/30/monads/	Pete_D
21722391	12.025115	-7.8096056	story	6.0	40.0	1575644926	10.436564	Monads aren't as hard as you think	https://bytes.yingw787.com/posts/2019/12/06/monads/	yingw787
21746518	12.264822	-7.098501	comment	6.0	15.0	1575925257	12.370805	"Yeah... Ruby is in the wrong there. Not even js does thatInsisting if takes a bool like java does is perfectly acceptable. But just taking a 0 value and making it ""true"" makes sense only in Bash?"		raverbashing
39100186	12.444804	-7.0276856	comment	6.0	34.0	1705990805	-8.155891	> textual requires and module system could’ve been much cleanerThis irritated me a lot when I was a ruby programmer. Ruby's require is analogous to C's #include: modules are just files that get evalua...		matheusmoreira
39195608	11.833003	-7.512356	comment	6.0	20.5	1706647752	-7.8936377	This is pretty close to type branding (newtype wrapping for the Haskell-inclined), though using template literal types is pretty novel. Normal brands look something like this:    type Brand<BaseType, ...		headbee
39235239	11.605226	-7.9455667	comment	6.0	28.5	1706912504	10.225139	"> The direct-syscalls-inside-the-binary model used by go (and only go, noone else in the history of the unix software does this) provided the biggest resistance against this effort"".I know this annoys..."		yobert
39240322	12.297976	-7.0494733	comment	6.0	20.5	1706968306	13.155695	perl has the distinction of being designed by a linguist and, for many coders (like me), it has a very smooth and easy feeling …… others dislike the idea of $ sigils as “noun” markers and @ sigils to ...		librasteve
39260046	11.620632	-7.8309393	comment	6.0	27.0	1707132679	-10.793685	"Would love to see the compile situation fixed - the generated executables are 
~90MB+ at this stage and do now allow compression without erroring out. Deploying ala Golang is not feasible at that leve..."		dingdingdang
39299888	12.262058	-7.5669856	comment	6.0	15.5	1707383338	-11.381695	Why would Kotlin be named after Kotlin Island? What's the connection?		debok
12538274	11.905086	-7.441864	comment	6.0	21.0	1474365236	7.3860607	If we want to be pedantic, there is no such thing as a pure JavaScript function. If the stack is full, the invocation of ANY function will overflow the stack. That's a side effect to the outside world...		automatwon
12560176	11.780231	-7.333416	comment	6.0	30.0	1474576727	-8.944525	On the other hand I don't understand how anyone can work with a code base that is dynamically typed.  I'm looking at a function parameter in a random file. How do I even begin to work with it?Unless y...		pixie_
12586046	12.221706	-7.6393285	comment	6.0	29.0	1474927909	11.997432	Unhappy with the current state of functional programming. I know I should't be. I have a lot of options.I went to school at UC Berkeley. My first language was Scheme. Then Elisp. CLOS was in the first...		jnordwick
12603778	11.687508	-7.8353467	comment	6.0	27.0	1475133867	10.21455	Not sure Go is such a great fit for scientific computing. On the one hand, with garbage collection and other things, it won't be as fast as C++. On the other hand, it's less flexible than Python.That said, it's always useful to have a good scientific library in every language.		joelthelion
12605028	11.868856	-7.354115	comment	6.0	20.5	1475155669	7.3041434	I'd not say this is a feature of functional programming. This is a feature of Object Oriented elements being included in fp languages.These are the same things we were going to happen when using Java ...		gravypod
12604767	11.8928385	-7.3944964	story	6.0	283.0	1475152698	7.265511	Modern Functional Programming: The Onion Architecture	http://degoes.net/articles/modern-fp-part-2	Roxxik
12611429	11.998843	-7.6475782	comment	6.0	15.0	1475228643	10.296005	Hi,I'm new here :)Each time I see something like that, I think it looks great, but I'm having a hard time understanding the meaning of the vocabulary used…Is there any good (free?) resources out there...		jiehong
12705691	11.816617	-7.4757566	comment	6.0	27.0	1476410584	10.410985	"If you can't keep the ""types"" of your design in your head, your design might be broken. I have a real bad short-term memory and can probably juggle less things in my head than most programmers. Yet wi..."		jstimpfle
12716215	11.945954	-7.689424	story	6.0	191.0	1476576794	10.39186	A toy Mathematica interpreter in Haskell	http://community.wolfram.com/groups/-/m/t/943405	soofy
12729359	12.235931	-7.6373706	comment	6.0	20.0	1476735958	11.9600725	Linus said once that if the only benefit of using C for Linux was excluding C++ programmers, that was enough of a benefit.Sounds really negative, but to be honest, sometimes if the only benefit of Sca...		partycoder
12769325	12.137501	-7.877769	comment	6.0	17.5	1477153922	-3.225363	"To be honest, Category Theory is the last thing a software developer (""working hacker"") should worry about learning. It is indeed a fun subject, it has grown into a large branch of algebra, it has con..."		Koshkin
12780438	11.616695	-7.0760026	comment	6.0	25.5	1477327338	-7.059939	Is it just me, or is Javascript (and more generally, all front end technology) more susceptible to these trivial holy wars?While I agree that const/let is a useful convention for communicating mutabil...		cloakandswagger
12808799	11.61517	-7.2923865	comment	6.0	22.0	1477596278	9.070053	"For the JVM experts here: how realistic is it for OpenJDK developers to add a command line ""-useGreenThreads"" option?  In Golang, you can create thousands and thousands of threads and there's no issue..."		bit_logic
12831105	11.986741	-7.733574	comment	6.0	28.5	1477849636	10.401514	Isn't this article just stating the obvious fact that programs at some point do I/O, so no program can be purely functional?Every Haskell tutorial seems to introduce the IO Monad to illustrate this distinction.		smallnamespace
12833660	11.894184	-7.227722	story	6.0	17.0	1477877523	9.1542845	Show HN: Async/await alternative	https://github.com/ujc/wait-for-stuff	bruno2223
12851401	11.682186	-7.4613853	comment	6.0	29.5	1478047082	9.27292	"Is there an article or book where the major ""ways"" of doing concurrency in different languages are explained and compared? E.g. thread process mutex semaphore etc. in Java et al, callback promise asyn..."		chinhodado
12864809	12.052522	-7.238588	comment	6.0	16.5	1478187172	9.179882	Offtopic. Does anybody know of a practical imperative language in which promises are implicit? Often, when writing software, it happens that deeply nested functions suddenly have to return a promise i...		amelius
12890653	12.306018	-7.0158825	comment	6.0	15.0	1478523542	13.1690035	Perl is a hacker's language (not unlike e.g. Common Lisp). It brings maximum power to the fingertips of an individual. When you are alone, developing with Perl is a blissful joy of pure godlike power ...		atemerev
12921286	11.697228	-7.940787	comment	6.0	25.0	1478792459	10.180343	Strong, strong disagree on the idea that ORMs aren't necessary because of some property of Golang itself. Lack of decent ORMs is probably my biggest complaint about Go, and I think if you look at a lot of large web app packages you'll find people are all writing their own 40-60% of an ORM.		tptacek
12923497	11.661893	-7.6329403	comment	6.0	18.0	1478806658	-4.3579736	I miss generics, not because I would write new generic functions all the time, but because a few key generics provide infrastructure that increases the beauty of programs dramatically.The problem is t...		stcredzero
12993687	11.865871	-7.553534	comment	6.0	21.5	1479566970	10.359069	This is interesting, and I'm curious and respectful of Haskell, but when I read a post like this, while I appreciate many of the strengths of static type checking, it just makes my head hurt to see wh...		hellofunk
13044221	12.047558	-7.739639	story	6.0	134.0	1480175873	10.452949	Typed, modular macros for OCaml	https://oliviernicole.github.io/about_macros.html	otini
13044214	11.999843	-7.793647	story	6.0	92.0	1480175813	10.348766	Strymonas – A library for OCaml and Scala for fast, bulk, in-memory processing	https://strymonas.github.io/	otini
13051415	11.674687	-7.438576	comment	6.0	33.5	1480279465	9.664409	It was unsound from the first version with respect to arrays.  If B is a subtype of A, then Java allows you to pass as an argument (or return) an array of B where an array of A is specified in the typ...		derriz
13068786	11.980618	-7.607866	comment	6.0	19.5	1480485358	10.324271	Most useless thing ever created for functional programming anything.It's not even biased towards Haskell; it's biased towards working at Slamdata, where they abuse free monads for everything.When you ...		sleexyz
13069249	12.018812	-7.732563	comment	6.0	18.5	1480494196	10.437796	This is ... much more politely and detailedly stated than I managed on Twitter.I work in FP, programming Clojure for real-world web applications every single day, and 90% of this list is completely me...		jarcane
13076924	11.793581	-7.309661	comment	6.0	25.0	1480562114	-6.017105	"Hey another article at YC frontpage about saying ""DO NOT MESS WITH STATE"" to scale;""Shared-memory multithreading really isn’t the future, we thought, and notably absent from all of my prior work was f..."		victorcase
13112207	12.308349	-7.330971	story	6.0	87.0	1480997681	7.0409126	Amber Smalltalk	http://www.amber-lang.net/	dkarapetyan
13125282	12.313717	-7.0407076	story	6.0	60.0	1481138091	13.174992	Set in Your Ways: Perl 6’s Setty and Baggy Types	https://perl6advent.wordpress.com/2016/12/07/set-in-your-ways-perl-6s-setty-and-baggy-types/	kumaranvpl
13130378	11.817675	-7.256419	comment	6.0	19.0	1481206675	-8.970394	F# is probably a pretty decent candidate for this (it's next on my list of languages to really take a critical look/attempt at).I've done a lot less statically-typed code than dynamic (mostly Python) ...		bpicolo
13141940	12.251727	-7.036274	story	6.0	41.0	1481318321	7.3108344	PureScript	http://www.purescript.org	tosh
13148275	12.097199	-7.2091694	comment	6.0	19.5	1481408801	9.174247	Maybe I'm missing something, how is this better than simple promises in JS?  This seem easy to reason about:serviceA { Promise.All(b,c).then(...) }serviceB { (d).then(...) }serviceC { Promise.All(d,e).then(...) }		WhitneyLand
13154887	11.619867	-7.8695693	comment	6.0	23.5	1481507068	10.173332	Really? Interfaces everywhere you can possibly imagine? Is that where we're heading in Go land?		fiatjaf
13175040	11.979826	-7.742011	story	6.0	276.0	1481711631	10.425394	Haskell in the Datacentre	https://simonmar.github.io/posts/2016-12-08-Haskell-in-the-datacentre.html	dmit
13190160	11.608899	-7.9385395	story	6.0	137.0	1481849376	10.193412	Reversing Go Binaries Like a Pro	https://rednaga.io/2016/09/21/reversing_go_binaries_like_a_pro/	FiloSottile
13208693	11.651947	-7.9699025	story	6.0	22.0	1482108687	10.203012	Basic project template for golang, slightly opinionated	https://github.com/lacion/cookiecutter-golang	lacion
13248150	11.677675	-7.9717855	comment	6.0	16.5	1482543007	10.226581	Look, I'm a big fan of go; I like the language, I (mostly) like the community, and I've seen some excellent stuff built in it....but, this 'dont use anything but the standard library' movement that ke...		shadowmint
13252828	11.648312	-7.891897	comment	6.0	31.0	1482638311	10.174523	I know it's a controversial point among users, but I think that if Generics were such a show stopper, Google would have implemented them.Go was invented for internal Google use, and then shared with t...		dispose13432
13259497	11.755291	-7.316018	comment	6.0	15.5	1482781892	-8.445334	Does learning about the Lambda calculus have any take-aways for programming in modern languages, or is it more of a cool toy/mostly of interest for language designers and academics?		syncopatience
13406480	12.242235	-7.4727874	comment	6.0	28.0	1484515505	12.830716	>if you model your objects as shared-nothing message-oriented entities it does concurrency prettyThat's actor model, but it still doesn't feel as natural as with functional languages - dealing with immutable data in OO languages is tedious and error prone		rubber_duck
13428394	11.630618	-7.9221563	comment	6.0	15.5	1484761461	10.220549	> The fact is a lot of people are perfectly fine current Go capabilities and prefer writing useful software solution as compared to debating on PL theories and community agendas.How many? how many did...		throwaw199ay
13429175	12.034082	-7.453347	comment	6.0	28.5	1484765754	7.345837	Happy user of typescript here. imo, pure FP is just like pure OO: it's just not very good. Why constraint ourselves? The world is not pure, our programs don't become ANY better because of the IO monad...		boubiyeah
13451901	11.929108	-7.678519	comment	6.0	30.0	1485030198	10.343145	The biggest thing missing from Haskell docs is examples, I find. The mathematical language is tempting when you’re writing docs, because it’s succinct and precise, and can say a lot about how somethin...		evincarofautumn
13470881	11.707099	-7.83363	comment	6.0	71.0	1485262180	10.385176	When I first learned OCaml (knowing only Python), I swore a lot at the type checker for refusing to compile code that I knew would work at run-time (e.g., a variable having multiple types, but on stri...		gnuvince
13475077	12.242049	-7.402896	comment	6.0	21.5	1485289191	12.908008	> How do programmers fix these problems? They don’t. They pray.Ah! No, Joe, that's what you do.Most of developers have figured out how to do concurrency and parallelism with mutable state and locks. I...		hota_mazi
13478361	12.2452135	-7.6665792	comment	6.0	17.0	1485316709	11.965177	"I don't care much for language battles, but maybe I can shed some light on this.The former VP of Platform Eng at Twitter said in 2015, ""What I would have done differently four years ago is use Java an..."		mdasen
13480359	11.693478	-7.22239	comment	6.0	21.0	1485341684	9.27302	>lambda is fine, if you're writing in functional style you're using expressions for everything anyway.No, I /really would/ like to be able to write:foo.on_click(lambda: x += 1)The language not supporting this (when most others do) is just silly.		darkf
13482090	12.487762	-7.804634	comment	6.0	18.0	1485357792	11.913714	The way you describe your experience with Scala makes me think you only had a very superficial look at it.At it's core Scala is very simple & the syntax is very regular, far more than Go or Java and a...		oelang
13558777	12.073476	-7.101599	comment	6.0	36.0	1486115135	9.1661005	You have a number of ways of keeping a handle on async code now.1. Native ES6 promises will cover most of your basic needs. See https://developer.mozilla.org/en/docs/Web/JavaScript/Referen.... In fact...		GeneralMaximus
13566716	11.6585045	-7.960117	story	6.0	258.0	1486210548	10.120466	Network programming with Go (2012)	https://jannewmarch.gitbooks.io/network-programming-with-go-golang-/content/	amzans
13572566	11.680454	-7.952938	comment	6.0	54.5	1486305820	10.237065	The best summary I read recently is that go isn't a bad language, nor is it a particularly good one. What fascinates me is the way the Golang community have concretised that essential middle-of-the-ro...		grabcocque
13572955	11.658972	-7.509948	comment	6.0	21.0	1486310927	10.049436	How can you write an efficient container without generics?		greg7mdp
13581493	12.340832	-7.0300646	comment	6.0	17.0	1486400833	13.193127	Perhaps you should look at this two presentations first:https://media.ccc.de/v/31c3_-_6243_-_en_-_saal_1_-_201412292...https://media.ccc.de/v/32c3-7130-the_perl_jam_2		bebna
13581547	12.287678	-7.020883	comment	6.0	22.0	1486401132	13.158854	Substantial amount of Perl6 goodness is already baked one way or another in ES6/7, Python 3.x, Scala and even the modern C# and C++14/17. Speaking of stuff like concurrency, C3 resolution, object prox...		larodi
27639267	12.027813	-7.8013206	comment	6.0	26.0	1624683872	10.453026	Wait. Assuming one does not need or want to learn Haskell, what would then be a purpose of learning about monads?There seems to be a disproportionate amount of tutorials about monads. Not being able t...		yoz-y
27649880	11.802479	-7.288422	story	6.0	42.0	1624784698	11.858575	Four approaches to implicit state in compound components, ranked	https://jesseduffield.com/Compound-Components/	genericlemon24
27663361	12.147616	-7.22651	comment	6.0	23.5	1624895031	8.527322	The weirdest thing is that the ECS as a way of building a game is inherently object oriented. You take a set of components and compose an object called an entity. The components on the entity define n...		meheleventyone
27691653	11.676556	-7.1203675	comment	6.0	15.5	1625076246	8.884678	It's easy to do immutability in python, just use NamedTuple for classes and tuple instead of list		wlpu
27780903	11.784613	-7.106224	comment	6.0	26.5	1625811144	9.113722	I strongly think Python should have more functional programming support.  Functional Programming Languages are usually scary to look at for many programmers.  Python would not only be a good FP introd...		frogcoder
27847823	12.269322	-7.2864337	comment	6.0	19.0	1626371923	7.1149483	"I've often heard two statements online from older programmers.  ""Delphi/TurboPascal was the peak of developer productivity""

And  ""Smalltalk was the peak of developer productivity""

I've only been pro..."		gavinray
27907387	11.604919	-7.0268793	comment	6.0	20.0	1626880339	8.8602085	I always wondered why is that a space separated string, when a list can work as well. The docs are not well written on that one. This works:    Point = namedtuple('Point', ['x', 'y'])		selectnull
12043271	11.609942	-7.82319	comment	6.0	40.0	1467815538	9.923726	Reading this causes me to experience déjà vu; years and years of reading stories and watching presentations about someone struggling with GC in the JVM.  It's happening all over again with Go.  The sa...		topspin
12055389	12.042562	-7.2169204	comment	6.0	15.5	1467985377	9.160499	Does Java have an equivalent to the Promise system in Javascript? I find it much more usable than callbacks for async-heavy applications.		BigJono
12054928	11.996734	-7.758194	comment	6.0	32.0	1467980319	10.4433775	Why on earth would they launch a new subreddit when there is https://www.reddit.com/r/haskell/ with 20k+ subscribers?		the_duke
12095879	12.129586	-7.585884	comment	6.0	40.0	1468518465	-10.643551	Cutting to the chase: use Haskell or Scala or F# if you need to do some scripting or build a web application that requires lots of different tasks (being a web server, rendering templates, connecting ...		eatonphil
12095970	11.664706	-7.1284776	story	6.0	56.0	1468519163	5.3239646	A collection of abstract patterns	https://github.com/perspectivesonatheme/patterns	poat
12117987	12.067568	-7.213448	story	6.0	46.0	1468875044	9.158514	Allora – Use promises on any JavaScript object	https://github.com/GianlucaGuarini/allora	gianlucaguarini
12151988	11.798224	-7.3501673	comment	6.0	28.5	1469328529	-8.887183	Where is the evidence that static typing results in a net benefit? There's some evidence that points in the opposite direction:http://games.greggman.com/game/dynamic-typing-static-typing/When a langua...		orgomon
12182618	12.157496	-7.5109158	story	6.0	157.0	1469734919	-10.596891	A Peek into F# 4.1	https://blogs.msdn.microsoft.com/dotnet/2016/07/25/a-peek-into-f-4-1/	douche
12186393	11.614201	-7.909359	comment	6.0	18.5	1469795809	-9.286396	[This question is purely informational and doesn't directly relate to golang, but I want to ask someone who has been involved in domain-specific package management.]Why is the protocol side of package...		scrollaway
12190786	12.034252	-7.3761673	comment	6.0	66.0	1469834274	7.191452	This is a great article - functional languages like Haskell don't get enough credit in a world where JavaScript's shenanigans are the accepted norm.Also check out F#, especially if you already have a ...		nxc18
12190842	11.993271	-7.7176375	comment	6.0	20.0	1469835419	10.409569	"Is there something like a ""standard"" HTTP client library and also a SQL abstraction library in Haskell nowadays, that everyone is using?
Similar to what 'requests' and 'SQLAlchemy' are in Python?I fee..."		rkrzr
12191063	12.092809	-7.4573674	comment	6.0	19.0	1469839154	10.410446	"JS runs natively on the web, it embraces multiple paradigms, it has a huge community, and you can get a job in almost any city on earth if you know how to use it. Haskell may be ""better"" as a language..."		Dr_tldr
12193828	11.62357	-7.9633946	story	6.0	17.0	1469899917	10.226786	Ask HN: What are you using D (language) for?		vram22
12211523	11.970648	-7.6808805	comment	6.0	17.5	1470158768	10.404332	Haskell is such a distinct mix of features that make it great to use once you know them but somewhat difficult to learn from scratch.One big fat clue that I wish I had been given when I was starting t...		pklausler
12269897	11.624277	-7.8568487	comment	6.0	18.0	1470935006	10.115809	I'm rather surprised by the benchmark; I would expect the Go benchmark to be faster than Java (and the fact that it isn't may indicate some improvements that can be done to fasthttp by learning from r...		Manishearth
12292725	12.086734	-7.2061424	comment	6.0	17.0	1471288747	0.28994566	Why is this at 44 points? I respect this is trying to hit a nitch but the nitch looks more like a step backwards than forwards. This does not seem more reasonable than what we have available. Maybe when it handles promises will it have a more obvious use case.		formula1
12324407	11.705688	-7.2982545	comment	6.0	60.0	1471652335	-6.203413	"So, I've long since argued the importance of what Ned terms the ""cultural difference"", or the difference between dynamic homogeneous structures (lists/relational columns), and static heterogeneous str..."		colanderman
12324142	11.592514	-7.883557	story	6.0	88.0	1471647817	10.153286	Realize – Go build system with file watchers, live reload and output streams	https://github.com/tockins/realize	Asoseil
12331201	11.666977	-7.978926	comment	6.0	19.5	1471792784	-8.74161	The author is quite correct. Go is super boring, and runs fast. Two great points for it.For me however I just never felt happy writing Go code. I have a couple of open source projects with it, so I ha...		sergiotapia
12335055	11.945057	-7.7019997	comment	6.0	22.5	1471857743	10.38739	There are a lot of really annoying quirks about Haskell. It is a beautiful language but after using it professionally for a while, some things come to mind that really make me pull my hair out of frus...		Morgawr
12341507	11.849283	-7.2891865	comment	6.0	20.5	1471928370	7.008142	For middle of the road companies with middle of the road developers, I find SOLID is not really a great set of principles to focus on.'S' is pretty good because it helps encourage developers to get aw...		tunesmith
12350710	12.088705	-7.522902	comment	6.0	18.5	1472030082	-11.373572	"So what might make dynamic languages easier to write in? I enjoy dynamic languages more because:* ""double kilometerToMiles(double km) { return km / 1.6 }"" here the types are of really low value, yet I..."		ozy
12358922	11.801573	-7.2554064	comment	6.0	17.5	1472132728	-8.953505	"The main reason this happens in Python is that creating actual datatypes is incredibly clunky (by Python standards) because of the tedious ""def __init__(self, x): self.x = x"". The solution here is to ..."		lmm
12359409	11.749588	-7.158743	comment	6.0	33.5	1472136508	7.0079765	Nobody other than an object-oriented programmer would think a value is something that evolves over time.		catnaroek
12424958	11.935207	-7.8496575	comment	6.0	36.0	1473004429	10.412268	I got exited about OCaml when I tried to solve my performance issues in Python, but then realised OCaml didn't have a good multi core story either...Any progress in that area?Given that rust has picked up a lot in terms of typing and even syntax from OCaml, is OCaml still worth investigating?		dorfsmay
12466973	12.0436735	-7.2150903	story	6.0	15.0	1473466560	9.209205	Chained Promise: functional tools for recurring promises	https://github.com/google/chained-promise	chajath
12477058	11.596075	-7.2194877	comment	6.0	15.5	1473652022	5.1079597	"I try to call it inductive programming whenever possible. Because that's what it is: a programmatic form of proof by induction.The analogy isn't exact (e.g. it could also refer to just recursion), but it's a lot more apt than ""dynamic""."		Strilanc
12495607	11.941565	-7.369607	comment	6.0	18.0	1473850361	7.0658026	May I ask why you want to learn OOP?  You don't need it at work right now, and you'll probably never need it.  Not even in interviews.		eru
12495808	12.030211	-7.3668456	comment	6.0	17.5	1473852905	7.0839615	Here's the OOP model:A program can be modelled as a set of communicating black-box objects, with their own state.The idea is to separate concerns, abstracting away implementation behind well-defined i...		qwertyuiop924
12514220	11.791788	-7.288436	comment	6.0	19.0	1474036181	-8.923738	It's frustrating that this static vs dynamic 'battle' still goes on. The longer everyone thinks this is actually a problem, the longer we have to wait for innovations to happen. Look at the web in 201...		hacker_9
12524240	12.312201	-7.0433373	comment	6.0	22.5	1474181468	13.184293	Let me tell you the story of how I got involved in the Perl 6 community.I was trying to find out how Perl 6 was progressing, and found a broken link on a related website (pugscode.org, now defunct). S...		perlgeek
35211184	11.7195015	-7.299797	comment	6.0	54.0	1679160652	-6.306412	"I don't know much Go but what does it mean to ""accidentally"" append to an immutable array? Are there just no particular guards for arrays and they are saying something which should be treated as immutable?"		gleenn
35238480	11.996877	-7.7360525	comment	6.0	18.0	1679345400	10.420841	A lot of these bullet points apply equally well in Haskell. Automatically derived JSON serialization from records, typed (and compose-able) SQL queries, whole-program feedback from the compiler; etc.E...		agentultra
35253798	11.933894	-7.4436755	comment	6.0	17.5	1679438858	7.2276883	"Every time I read articles about functional programming, I feel like I’m being talked down to. There is always an air of condescension, which, honestly, makes the content hard to get through.
 This ar..."		Osiris
35437893	12.144496	-7.237454	comment	6.0	18.0	1680607297	8.521643	As a programmer not part of this world: what's the go-to alternative in this situation?Does ECS not naturally arise from using OOP? Trying to think if you are creating instances of players/physics objects/items how that wouldn't turn into a kind of entity system.		midland_trucker
35485483	11.605263	-7.860645	story	6.0	62.0	1680893565	10.2571335	Higher-order functions in Go	https://eli.thegreenplace.net/2023/higher-order-functions-in-go/	azhenley
35492781	11.658905	-7.022983	comment	6.0	19.5	1680959400	-3.3148534	Maybe I'm just a little skeptical today, but I'm not super enthusiastic about this.1.) Adding another language significantly increases complexity in general. Now I see several packages (pydantic, pyda...		sseagull
28050069	11.646499	-7.043038	comment	6.0	29.5	1628003114	-6.767803	Generators are one of the concepts that devs from other languages under use in Python. It's a natural solution to a ton of problems, since it lazily evaluates, and only stores one result out of the en...		BiteCode_dev
28069365	11.643518	-7.956467	story	6.0	104.0	1628132927	10.202834	Golang Security Checker	https://github.com/securego/gosec	ngaut
28168213	12.337973	-7.0350385	story	6.0	44.0	1628858937	13.191735	The Perl Foundation faces more departures	https://www.theregister.com/2021/08/13/perl_resignations/	keutoi
28189755	12.0199585	-7.7712307	comment	6.0	18.0	1629042895	10.414242	> It is visible in this article - the Haskell community is trying to convince this guy that he needs to know a wall of jargon from a relatively obscure branch of maths in order to program effectively....		PragmaticPulp
28189161	11.594329	-7.1062317	comment	6.0	19.5	1629038722	-6.716422	His daughter’s question “Why do we use functions?” is something I found myself asking during my math undergrad, and no one could give me a straight answer.To answer it to my own satisfaction, I eventu...		jqgatsby
28196962	11.656905	-7.9747777	story	6.0	9.0	1629114016	10.206353	Ask HN: Learning Go, what’s the best steps to take to better educate myself		Tkpain21
28201492	12.143535	-7.222771	comment	6.0	15.0	1629139959	8.52948	"What I found in practice is that many people start using the ECS for speed, and then draw themselves into a corner of the design space. Now they have to weight every step on ""how would it work in ECS?..."		kvark
28267524	11.674446	-7.2501383	comment	6.0	23.0	1629653256	0.4291821	Why not go all the way and use a format capable of expressing code and data? I refer, of course, to S-expressions.They also have the benefit of properly handling numbers.  Some might look at the absence of maps as a negative, but I think alists are preferable anyway due to their constant ordering.		eadmund
28280137	12.033925	-7.791607	comment	6.0	55.5	1629743999	10.423084	"""We worked really hard to prove our favorite language has value""Notice the ""Why we like OCaml"" page could have been written for C++https://pbs.twimg.com/media/E9fNTDYWYAoxF17?format=jpg&name=..."		frozenport
28281281	11.960205	-7.6736956	comment	6.0	32.5	1629749362	-1.6684673	"Can OCaml's type system express a type parametrized on a value, eg. like  template<auto f> struct my_type{};

  using t1 = my_type<123>;
  constexpr t1 val1;
  using t2 = my_type<val1>;

?"		jcelerier
28324494	12.3441925	-7.018444	comment	6.0	28.0	1630041045	-8.521884	My favorite ActiveSupport monkey patching is on number classes. Things like 2.weeks.from_now are just too useful to scorn monkey patching on some programming ideological reasons.		eloisius
28332205	12.288945	-7.3176517	story	6.0	228.0	1630093532	7.0733824	The Evolution of Smalltalk from Smalltalk-72 to Squeak [video]	https://www.pldi21.org/prerecorded_hopl.17.html	gjvc
28333211	12.284957	-7.303691	comment	6.0	35.5	1630100051	7.135085	"The most active Smalltalk inspired community seems to be Pharo.
https://pharo.orgI have avoided calling Pharo ""Smalltalk"" as it has evolved from the original fork of Squeak and the project is evolving..."		diskzero
28427787	11.76803	-7.3430095	story	6.0	8.0	1630875939	-8.917978	Ask HN: Dynamic vs. Static Typed Languages		jlalfonso21
28473733	12.255954	-7.434234	story	6.0	145.0	1631216208	-11.115399	New horizons for SPJ	https://discourse.haskell.org/t/new-horizons-for-spj/3099	msszczep2
28496754	12.292215	-7.305009	comment	6.0	19.5	1631399938	7.0795474	">random small talk between smart people that can lead to great ideas.Outside of maybe a very innovative R&D department I don't really see these ""brilliant ideas that only smalltalk could achieve"" in your typical run of the mill company."		Salgat
28510692	12.493639	-7.0161657	comment	6.0	17.0	1631536606	-4.381474	How did Ruby increase that much lately?Also, I'm surprised Python isn't more popular. 1% is (comparatively) tiny for a language that popular.		qsort
28523445	11.936615	-7.451943	comment	6.0	24.0	1631621243	7.178538	For me OOP is weird. I never understood what people mean when they say it is close to how they think. It feels like a way to obfuscate the flow of code and requires to make decisions about what thing ...		cardanome
28545757	11.641979	-7.909421	story	6.0	126.0	1631748222	10.206262	Golang: How to Update APIs for Generics	https://github.com/golang/go/discussions/48287	0xedb
28551119	11.61437	-7.2419786	comment	6.0	18.5	1631796990	-8.776635	Only tangentially related, but what's the point of a static class block? What problem does it solve that's not covered by either the class constructor or a static const? Doesn't it introduce a weird (...		qsort
28583663	11.799143	-7.4031553	comment	6.0	29.0	1632052986	-8.5928	I've felt this same sort of pain but I don't blame currying. It's when currying and partial application is used for deep dependency injection with no easy route to finding the original function. I dab...		neurotrace
28601071	11.774949	-7.047389	comment	6.0	28.5	1632187375	-9.020819	So my dream is that eventually mypy (the optional python static typing module) will be extended so that python becomes a gradually typed language — able to detect if an entire program has valid static...		wallscratch
28642997	11.803749	-7.2164583	comment	6.0	20.0	1632494146	9.229196	Database operations should be async, you shouldn't consume them synchronously, as they do IO. Async/Await came out in 2012, almost a decade ago (and with great first party library support, I might add...		torginus
22311022	11.991994	-7.7461677	comment	6.0	15.0	1581530444	10.422799	For people using Haskell at work, how did it happen?  I'm wanting to use it at work but there is a lot of pushback and I am encouraged to use languages like Go and Python.		bcheung
22316346	11.734569	-7.382831	comment	6.0	39.5	1581584954	9.1194	A good name is like a good car. Is a race car a better car than a truck? Lot of trade-offs to make.You want names to be short, so you easily write and read them. Especially if you use them a lot, it's...		js8
22347007	11.636457	-7.0845156	comment	6.0	20.0	1581939982	-7.8105593	I thought a consensus had emerged that function overloading was a bad idea for a while now? Even in strongly-typed languages, it pushes that extra bit of cognitive load onto the human reader. It also ...		rusk
22358303	12.4321375	-7.066802	comment	6.0	36.0	1582048686	-10.906141	In my opinion RuboCop is too strict. Every code standard analyzer takes some tweaking to get it set up for a particular project and team standards, but RuboCop needs changing of a ton of rules to make...		StaticRedux
22390153	12.100211	-7.865143	story	6.0	237.0	1582364021	10.440634	OCaml 4.10	https://discuss.ocaml.org/t/ocaml-4-10-released/5194	pjmlp
22393381	11.694667	-7.8701377	comment	6.0	15.5	1582406237	10.166607	IMO if you're coming to Go from Node.js, you're much better off spending the extra time learning `net/http` (which is much more idiomatic and will teach you a lot about the language itself) than cling...		q3k
22415415	11.882042	-7.677358	comment	6.0	18.5	1582653543	10.376911	The article does a very good job of illustrating why you should never program this way, if you read between the lines. More precisely, here is the damming piece of evidence:> Finally we’re finished! A...		tsimionescu
22442170	12.277843	-7.075193	story	6.0	72.0	1582891040	-8.510606	Monkey Patching in Golang (2015)	https://bou.ke/blog/monkey-patching-in-go/	donutloop
22443428	12.080779	-7.885344	story	6.0	208.0	1582904097	10.464416	Multicore OCaml: Feb 2020 update	https://discuss.ocaml.org/t/multicore-ocaml-feb-2020-update/5227	sadiq
22461511	11.826014	-7.353457	comment	6.0	16.5	1583121018	-6.1624246	I don’t actually get the big deal about enforced immutability. Of course, you need to constrain yourself in certain circumstances to do things immutably, but it seems like something that should be con...		abrax3141
22502533	12.240532	-7.533191	story	6.0	42.0	1583491119	-11.381288	Kotlin and Jersey and Jetty and MongoDB – Creating a Scalable RESTful API	https://blog.gikken.co/kotlin-jersey-jetty-mongodb-creating-a-restful-api/	chernikovalexey
22503590	11.610691	-7.899307	comment	6.0	24.5	1583503395	10.168298	Imagine you are designing the web server for some hardware like this.You might write it in Go, dockerized and hosted it in Kubernetes in Google Cloud.  You might use a hosted mongo db and 3rd party au...		londons_explore
22534946	11.830677	-7.1970816	story	6.0	38.0	1583844618	-3.1537635	Object Oriented Role Analysis and Modeling	https://en.wikipedia.org/wiki/Object_Oriented_Role_Analysis_and_Modeling	dmux
22540887	11.793012	-7.1085057	story	6.0	6.0	1583881391	5.320036	Ask HN: How do you approach a problem when you are stuck?		altaaf_baatli
22546008	11.948564	-7.6940093	story	6.0	24.0	1583936135	10.384033	Object-oriented Haskell surprisingly appealing	https://github.com/complyue/ooh	complyue
22557990	11.653265	-7.355656	comment	6.0	20.5	1584027830	8.895812	Which languages would you say are really good for defining your own types? Would they be a good fit for the example I provided where a function needs to accept integers larger than zero? Do they also ...		INTPnerd
22642954	11.817009	-7.6340637	comment	6.0	49.5	1584748341	10.27031	"It's worth noting, if you either just read the title or are skimming the post, that ""never"" is used here specifically in the context of a language like Haskell. If your language uses strict evaluation (like most languages), it probably makes sense to use a left fold on lists."		chc
22653734	11.778391	-7.49961	comment	6.0	17.5	1584868740	10.045483	The problem is programmers crafting the language to their own mental model. One solution is languages that don't allow much abstraction. The other solution is to craft a shared mental model. This latt...		noelwelsh
22692058	12.332688	-7.026507	comment	6.0	33.0	1585217065	13.175661	Expecting to see Perl in an article like this in 5 to 10 years. Wasn't the first language I learned, but there's a fond place in my heart for it.  At the time, it was the (only) less painful way to ge...		tyingq
22691859	12.059144	-7.165251	comment	6.0	22.5	1585215102	7.330129	I have another theory about why Java beat other object-oriented programming languages except C++: cost.  I can't speak for Eiffel and Ada since I'm unfamiliar with those environments, but in the mid-1...		linguae
22728742	11.682279	-7.220594	comment	6.0	29.5	1585581953	9.121539	An OS with async/await sounds awfully similar to Windows 3.1 with its cooperative multitasking model.What's old is new again ...		amelius
22752369	12.114721	-7.45836	comment	6.0	18.0	1585767717	-10.607398	FSM is something I've always been curious about but I can't seem to find any good intro on. Does anyone have a good recommendations? I sort of don't want one tied to a specific language but rather one that helps me understand it from a conceptual level.Thanks!		hangonhn
22753498	11.978427	-7.6945925	comment	6.0	35.5	1585775117	10.406705	I think what's missing from this post is who is using a language. For Haskell it's academics/researchers. For Ada it's the US government and associated industries. That's what makes niche languages vi...		ChrisSD
22767969	11.603947	-7.2354136	comment	6.0	15.5	1585911603	-6.5655365	This article’s introduction includes:> Diving deeper into program language theory is a great way to grow as a developer.But does anything in this article really count as programming language theory? I...		pansa2
22792830	11.640157	-7.338362	comment	6.0	29.0	1586173446	-8.738276	Following Godel:- my intuition suggests to me that for a sufficiently powerful programming language (Turing complete?), any type system will preclude otherwise valid statements in the language. Such i...		somewhereoutth
22805666	12.050946	-7.629545	comment	6.0	18.5	1586282184	-10.627291	I've been wanting to make some .NET apps for our family's use (like a timer etc.) but don't know C# so I figured maybe I should just start off learning F# since I have a FP background. So is F# pretty...		sdegutis
22824142	11.643667	-7.386367	comment	6.0	17.5	1586449615	-8.658767	I'm reminded of this apt tweet [1]> If a Type I error is a false positive, a Type II error is a false negative, and a Type III error is getting the right answer to the wrong question, is a Type IV err...		jhayward
22840642	11.933076	-7.4456964	comment	6.0	41.0	1586597107	7.295425	Great timing. I was just pondering what functional programming language I should attempt to learn in all my new downtime.		dcl
22843361	12.239097	-7.63697	comment	6.0	16.5	1586631282	11.9563875	"Scala is a beautiful and elegant language. I really thought that it would be one of my favourite languages when I first started working with it. However, after some time I got disenchanted. 
First, Sc..."		jane_red
22854453	11.948925	-7.462003	comment	6.0	22.0	1586772212	7.272852	The author compares himself with the prophet and apparently believes that the acceptance of functional programming languages requires intensive missionary work - just like with an ideology or religion...		Rochus
22856724	11.807145	-7.294763	comment	6.0	19.5	1586792027	-6.0901413	I love immutability it makes things ten times easier. This isn't really immutability? It looks like an infrastructure refresh on deploy. If you are refreshing something by definition it's probably not...		crimsonalucard
22903210	12.4341755	-7.4987774	comment	6.0	19.0	1587159379	-12.32031	Hi! I'm the author of Gleam!Originally Gleam had a more Haskell-like (or rather a more OCaml-like) syntax. Over time people generally expressed a preference for a more familiar C-like syntax, citing t...		lpil
22915637	12.112261	-7.6742444	comment	6.0	28.0	1587301532	11.930072	I work JavaScript/TypeScript day to day, but I like Python syntax and easiness but also like Go's concurrency. Having learned Haskell and Rust in the past, these days I appreciate simpler language.In ...		christiansakai
22979718	12.082293	-7.1704865	comment	6.0	23.0	1587836328	9.177742	"Wow just wow. So here's your new Promise object:class World {
  then () { return 0; }
}
isPromise(new World) // trueIf there really isn't a safe and better way to tell if an object is an instance of Promise…then color me impressed."		2ion
23058461	12.104502	-7.7768707	comment	6.0	17.5	1588506691	-3.13207	Again though, how do I use this to solve everyday problems?I've seen some vaguely cool stuff done with Category theory in Haskell, e.g.: composable tree parsing and traversal, but I've never seen anyo...		jiggawatts
23139972	11.725786	-7.428964	story	6.0	84.0	1589185182	-8.711884	In Further Praise of Dependent Types	https://golem.ph.utexas.edu/category/2020/05/in_further_praise_of_dependent.html	EvgeniyZh
23144444	12.068351	-7.1884756	comment	6.0	24.0	1589217214	1.065616	There is a rule in eslint that warns you when a promise is dangling and hasn't been handled.Please use that rule. So many bugs in the JS world is because of dangling promises.		aaomidi
23153020	12.03266	-7.81678	comment	6.0	26.5	1589284826	10.448625	"Is it the same issue as the infamous ""monads tutorials"" problem, where the understanding takes a lot of time to infuse but looks obvious in retrospect when it finally clicks?"		Phlogistique
23186342	12.438469	-7.025403	comment	6.0	28.5	1589495333	12.352308	I wonder what would be more efficient, constantly trying to eke out some performance out of a inherently slow language? Or writing/rewriting new/critical paths of the codebase in a faster language.Rub...		praveenperera
23203215	12.022779	-7.067966	comment	6.0	20.5	1589635787	8.154422	I would say Java, which I suspect is bound to be a bit of an unpopular opinion here (I expect more startup people than enterprise denizens in HN); but the more I think about it, the more sure I'm that...		gordaco
23203321	11.7874365	-7.3569164	comment	6.0	20.0	1589636754	9.226446	Can you maybe elaborate why this model is better than async/await? I have to admit, I don't really know Loom, but from a first glance, it looks like this is just (green) threads, and async/await is an...		albertzeyer
23204767	11.793976	-7.1681814	comment	6.0	19.5	1589646175	5.0174246	This is the book that finally helped me grok software design patterns. Gang of four reads like a dictionary while the examples of Game Programming patterns have stayed with me.If I'm rendering a fores...		formalsystem
23207645	12.132131	-7.8791423	comment	6.0	20.0	1589667230	-3.0871105	Fortunately, this is about the (mis)use of set theory in philosophy and not mathematics. Why set theory, though? Since it is being gradually replaced by category theory as a more modern, practically b...		Koshkin
23213328	11.611256	-7.900428	comment	6.0	19.5	1589735042	10.15271	I am always happy to see Go UI Toolkits. The lack of full macOS support on Goey and the decision to target GNUStep instead of Mac Cocoa proper is... interesting.I’ll probably stick with Fyne for the time being. It’s fine.		donatj
23235568	11.748982	-7.129454	comment	6.0	24.0	1589900407	5.1231704	Looking at the first code sample, I wouldn't call it declarative at all. For me, the defining feature of declarative code, is that it doesn't have a list of actions to be performed one after another. ...		cool-RR
23235623	11.666773	-7.2576604	comment	6.0	20.0	1589900715	9.062391	"So you would call:  arr
    .map(x => x + 2)
    .filter(x => x % 3)
    .map(x => other(x))

Imperative?"		Trufa
23250498	12.507247	-7.4729176	comment	6.0	22.5	1590001483	-12.383873	The older I get the grumpier runtime errors make me.I want ReasonML (language!) and Erlang (OTP!) to have a baby, and I want it birthed by the Go runtime. (Go? Yeah, Go. I don't love the language, but...		Scramblejams
23269232	12.002727	-7.5268564	comment	6.0	19.0	1590129078	7.2843146	FP is going mainstream. In the same way that mainstream OO wasn't pure OO in the manner of Smalltalk but instead hybrid languages like C++ and Java (and more recently Python), mainstream FP isn't Hask...		noelwelsh
23306567	12.076102	-7.072201	comment	6.0	21.5	1590456320	12.366998	What experience DOES john have? I've had far worse experiences with ruby, python, scheme, clojure, java and C.If you want a language that requires zero learning to use, I am sad to say that they are v...		zdragnar
23334955	11.893001	-7.358757	comment	6.0	26.0	1590655475	7.1380854	Reducing OOP to implementation detail features will yield poor results. The flexibility stems from an improved means of analysis in that types and entities can be identified more easily. By using clas...		cessor
23337963	11.686886	-7.1963325	comment	6.0	22.0	1590677493	7.341138	I didn't down-vote you, but in my opinion it's not meaningless because it makes it inherently more testable.  Try testing an opaque class without any accessibility into its state.  It is much more dif...		nightski
33096995	12.420691	-7.417714	story	6.0	102.0	1664984459	12.932207	My Future with Elixir: set-theoretic types	https://elixir-lang.org/blog/2022/10/05/my-future-with-elixir-set-theoretic-types/	rukenshia
33164004	11.746802	-7.4328775	comment	6.0	41.5	1665499779	-8.646865	This is one of my two favorite books in The Little <X>er series. The other is The Reasoned Schemer.The Little Typer provides an introduction to dependent types. These can by used to guarantee things l...		ekidd
33176928	11.95669	-7.7674594	story	6.0	103.0	1665582524	10.494201	GHC 9.4.2 regresses being able to do math on aarch64	https://gitlab.haskell.org/ghc/ghc/-/issues/22282	nequo
33179414	12.3032675	-7.3281984	story	6.0	69.0	1665592417	7.009721	A Little Smalltalk (1987)	https://archive.org/details/ALittleSmalltalkBook	todsacerdoti
33299976	11.906388	-7.39841	story	6.0	5.0	1666457779	-10.431784	Ask HN: Operating Systems built with functional languages?		agomez314
33309320	12.006548	-7.6883526	comment	6.0	15.5	1666551921	10.397695	"It's a shame, too, because until that point (when I was still just following the ""getting started"" docs and doing the first half of the app, which loads a CSV and parses it and stuff), I was actually ..."		losvedir
33332041	12.508605	-7.0409074	comment	6.0	22.0	1666712235	12.395586	Why did Python win the war with Ruby? Was it purely the math community deciding this is where we throw our weight and left Ruby the runt of the litter?		sergiotapia
33346547	11.605558	-7.086571	comment	6.0	26.0	1666803986	-8.808822	“Besides strict typing and having a generally ugly syntax, C++ also requires ahead of time compilation.”What’s wrong with strict typing and ahead of time compilation as long as it compiles fast?  Does...		melling
33356179	11.59184	-7.903075	story	6.0	1.0	1666871466	10.177072	Gen: Friendly and Safer GORM Powered by Code Generation	https://github.com/go-gorm/gen	andy_gen
33358815	11.746912	-7.1370707	comment	6.0	19.0	1666883776	8.743076	"""Constructor property promotion"" - so the parameters of your constructor now automatically become properties of the class? So, for saving a few keystrokes in some cases, they have introduced a feature..."		rob74
33400044	11.648727	-7.9225817	comment	6.0	16.5	1667171595	10.202668	> 100% statically typed and explicit API using code generation.Whenever I have to do code generation in my language of choice, I feel that the language should be able to do that without having to gene...		valenterry
33407319	11.796396	-7.121705	comment	6.0	20.5	1667230634	5.0256023	I am a newly employed engineer and I am assigned to learn Design patterns (the book and all) right as of today. Needless to day, I am very intrigued. Could you expand what you mean by too far, beyond over-applying the patterns?		raspberry1337
33427802	12.465067	-7.512172	comment	6.0	15.0	1667338253	12.864216	>> Erlang does not use a contiguous chunk of memory to represent a sequence of bytes. Instead, it something called an “I/O list” — a nested list of non-contiguous chunks of memory.is this cpu cache-friendly ?		latenightcoding
33431738	12.2899	-7.0689335	comment	6.0	16.5	1667367160	13.153183	"> At the time Tcl was the only multi-threaded GIL free scripting language for database access and this still holds true today.Raku (nee Perl 6) is GIL-free IIRC.  So are Julia and Erlang/Elixir, for sufficiently-loose definitions of ""scripting language"".  The list probably goes on."		yellowapple
33436569	11.913173	-7.459155	comment	6.0	19.5	1667400008	7.2159452	I am sorry, but you sound like you know for a fact that functional programming is better, but you have trouble making others recognize that fact.Imho, FP has many tangible weaknesses, just a few off t...		torginus
33443291	11.974176	-7.7651463	story	6.0	3.0	1667425296	10.412648	Ask HN: Is it a mistake to introduce programming via Haskell instead of Python?		amichail
33461952	11.596434	-7.883681	story	6.0	12.0	1667533873	10.178225	A Golang linter to detect functions not in alphabetical order	https://github.com/skx/alphavet	pabs3
33546336	12.212466	-7.32651	comment	6.0	17.5	1668088235	11.87854	Java was a mediocre language made primarily to be optimized for midsized companies  and aimed to be learnable by mid level engineers. There's a lot of boilerplate and ceremony to do even basic things ...		cultofmetatron
33549948	11.645819	-7.9774623	comment	6.0	19.5	1668101130	9.919299	Hi everyone, Dagger co-founder here. Happy to answer any questions.We also released an update to the Go SDK a few days ago: https://dagger.io/blog/go-sdk-0.4		shykes
33560425	11.6540575	-7.948483	comment	6.0	20.0	1668172443	10.219141	What are some examples? I've always thought of Go as a server-side language.		criddell
33561666	12.002411	-7.7437234	comment	6.0	20.0	1668179066	10.407637	I spent years wasting time on Haskell and wouldn’t recommend it unless you find joy in the purely academic. I’ve never found a practical application for my knowledge and no one has ever paid me to wri...		ilovecaching
33623881	11.937784	-7.5860224	comment	6.0	53.0	1668610176	10.366395	"FP is the best thing since sliced bread, don't get me wrong!But the seemingly arising ""Haskell religion"" is at least as mislead as the OOP-religion that held mainstream in stranglehold for a long time..."		still_grokking
33655774	11.634348	-7.877144	comment	6.0	18.0	1668784159	10.204839	This makes me wonder: what if there was a language where variable names are determined according to the type, with the option of overriding with a custom name. So a variable of type http.Request would...		jawzz
33674092	11.663681	-7.2144694	comment	6.0	18.5	1668888447	9.067481	I'm curious why this is not implemented as a method on the map type (and others like list) instead of being a top-level builtin. I suppose it is consistent with other collection operations such as append and len... which I guess makes me wonder why those are builtins as well.		ch_123
33687756	12.176516	-7.448922	comment	6.0	21.0	1668995827	11.913617	I am curious whethere there is anything wrong with staying with modern Java? I haven't looked at Java ecosystem for a while, just Python and C++ these days, but I remember they were aggressively putting features out that were making Scala less needed. What is the situation right now?		g42gregory
33718119	11.965244	-7.346403	comment	6.0	16.5	1669204985	7.1199546	Alan Kay’s immortal quote about OOP:> OOP to me means only messaging, local retention and protection and hiding of state-process, and extreme late-binding of all things. It can be done in Smalltalk an...		bradrn
33785341	12.403943	-7.0790796	comment	6.0	21.5	1669713274	12.371741	> What’s awesome about Ruby?> Dynamically typedAs someone who has experienced the joy and at least some feeling of safety from moving to typescript from javascript, I would seriously question that dynamic typing is awesome.		azangru
33795062	11.78679	-7.085138	comment	6.0	21.5	1669766078	-8.978316	I’m in pain reading this. But I feel the need to confess my own sin:I once didn’t want to write or add a dependency for a Python deep equality checker so I just sorted, JSONified, and string compared ...		Waterluvian
33845350	12.342889	-7.05117	comment	6.0	22.0	1670089282	12.359785	"     Seriously, since everything I work in is 
     denoted as ""cents"" from backend to frontend,
     I personally had never understood the need

This matches my experience.Obviously actual strict typ..."		JohnBooty
33894921	11.725337	-7.348132	comment	6.0	26.0	1670424626	-8.833981	I hope its a big update with static types		threeaccents
33969876	11.707006	-7.0365396	comment	6.0	20.0	1670944363	12.443359	"Interesting! I wouldn't want to argue against your experience.I do wonder if it's an issue of ""unless"" being misused? Programmers using it just for fun rather than considering whether it's the best choice in context?"		nickelcitymario
33997623	12.278694	-7.062221	comment	6.0	17.5	1671101047	13.144766	It's grand child, Raku, also seems to be an impressive language actually. Hated by Perlers and non-Perlers alike, it actually would be a great environment to build powerful programs in:https://www.oreilly.com/library/view/learning-perl-6/9781491...		G3rn0ti
34004238	12.230224	-7.6181445	comment	6.0	15.5	1671131912	11.938447	> To be able to tell if Scala 3 itself is faster, we would have to rollback to Scala 2 and try it with the proper JVM tuning. I'm not willing to do that, sorry! Once you've tried Scala 3, there's no g...		d2049
34004522	12.227392	-7.6103272	comment	6.0	50.5	1671133093	11.932673	"For those short on time: ""It doesn't go as planned"" is explained in the middle of the article:> When everything compiled, I shipped it. And to everyone's surprise, apart from a few bugs I had created ..."		jakub_g
34017042	12.087353	-7.7014456	comment	6.0	16.0	1671210312	10.352669	I wish OCaml had something like F#'s lightweight syntax: https://learn.microsoft.com/en-us/dotnet/fsharp/language-ref...		rigoleto
34070176	11.952372	-7.475295	comment	6.0	21.5	1671561341	7.2794766	Not a program, but the concept of functional programming and pure functions. It makes it a lot easier to think about code, and also makes it easier to test and parallelize code.Although be warned, it ...		actinium226
26506756	11.817317	-7.221096	comment	6.0	21.5	1616096823	-9.008883	"I think this isn't quite what I want, because implicit structural typing has a single shared namespace of methods. If the Ducky protocol says ""implementers should have .quack()"" and I define FringeSci..."		neolog
26531712	11.80178	-7.3388066	comment	6.0	27.0	1616345001	7.0196285	"1. Watching the tech community over a really long time, please guys, don't swing violently from ""A is all good!"" to ""A is all bad!"" It was good for something, else so many people wouldn't have success..."		DanielBMarkham
26565567	12.330589	-7.027516	comment	6.0	36.5	1616582965	13.173315	I once loved Perl, it was the first language I learned, but reading through the comments and link I don’t see how you turn it into a modern, well loved and well used language (or even stop the decline...		j4yav
26565980	12.312838	-7.0195236	comment	6.0	37.0	1616586853	13.174672	I learned Perl in the late 90's and I still use Perl 5 all the time.  The semiconductor industry is held together with thousands of lines of Tcl and Perl code.Every day I have to parse some new type o...		lizknope
26566099	12.248602	-7.0788307	comment	6.0	20.5	1616587632	13.149353	Why wouldn’t the future focus be on Raku at this point? Perl is (was?) a great language, but Raku offers so much more.Of course Raku has the “expected” things from Perl like classes and all the fantas...		eddyg
26586994	11.839719	-7.304111	comment	6.0	15.5	1616715125	7.0973063	"""Data structure and functions should not be bound together"": not if you don't want that, but often you do, to avoid constantly asking the question ""where's the code that messes with this data?"".""Every..."		dboreham
26663262	11.7652025	-7.1442957	comment	6.0	20.0	1617296809	8.870591	Now we've got Spring, which in my, admittedly limited, experience does a great job of transforming what could have been compile-time errors into run-time errors.		tonyarkles
26872463	11.995278	-7.7207975	story	6.0	96.0	1618910694	10.141975	Continued Fractions in Haskell	https://cdsmithus.medium.com/continued-fractions-haskell-equational-reasoning-property-testing-and-rewrite-rules-in-action-77a16d750e3f	gbrown_
26912977	11.697669	-7.510737	comment	6.0	23.0	1619172238	10.068541	Not very promising, it is written in a language which:- is controlled by Google.- doesn't support generics. Do we really want people to constantly rewrite basic data structure classes in 2021 and thereby reinvent bugs constantly (and waste time which could be spent on more meaningful purposes)?		eMGm4D0zgUAVXc7
26941500	11.99164	-7.758499	comment	6.0	25.0	1619437692	10.381809	"Don't monads in themselves have the same problem of introducing ""coloring"" (where each monad is a different color) , so that functions which work for one monad won't work with easily compose with func..."		simiones
26961666	12.255369	-7.6329226	comment	6.0	27.5	1619558157	11.959075	I have no clue on who this guy is nor do I have any sort of interest in Scala but this is terrible.If this is even remotely true I hope he suffers enormous consequences including being persecuted.How are people still getting away with this kind of abuse? How?		jdmoreira
26989153	11.828587	-7.334639	comment	6.0	40.5	1619748548	6.9314513	Fine.  But obviously it caught on for other reasons, like code reuse and an intuitive mental model.The HN appetite for posts ragging on inheritance will never be sated.		rectang
26989191	11.8365755	-7.3337355	comment	6.0	32.0	1619748832	6.95698	"""Catching on"" doesn't mean ""is the right way to do things"". Code reuse is in fact a prime example of a misuse of inheritance"		bradrobertson
27049692	11.609151	-7.9021506	comment	6.0	31.5	1620222282	10.147554	"I think it's to do with the community and what people who are really into Go are interested in.The first reply to the thread deems ""map"" and ""filter"" borderline-useful, but ""reduce"" not worth it - tha..."		sabellito
27120015	11.59656	-7.9210405	comment	6.0	16.5	1620750020	10.199883	Forgive my ignorance, but I have a very general question. The article says Go runs on millions of cores at Uber. Obviously, the company is interested in maximizing the performance, hence the Pprof++ p...		dvfjsdhgfv
27174893	12.15602	-7.5888515	comment	6.0	21.0	1621183457	-11.392239	"i'm forced to work in Kotlin vs. Go sometimes at my job and I agree 100%, go is the best. Just a few items:1) if thing vs if (thing) kotlin makes you add un-needed ()2) a string is always """" vs null!3) you can follow the logic always 100% of the time vs. getting lost in a maze of clever kotlin."		andrewfromx
27175530	11.61871	-7.929183	comment	6.0	16.5	1621187378	10.17693	Tell me one other language, a single one, that has this in its standard library:- hex / base64 / json / xml / etc.- TLS (1.3) / x509 / aes-gcm / sha-2/sha-3 / X25519 / ECDSA /  ed25519 / crypto.rand- ...		baby
27178471	11.673549	-7.5998	comment	6.0	20.5	1621209419	10.060964	Sincere question out of curiosity, since I have not been exposed to Go at all.How do container types, like arrays or hashmaps work without generics? Do you basically have to declare and implement types/methods for each different contained type?		auxym
27179717	11.67818	-7.910896	comment	6.0	37.5	1621221028	10.179989	If you’re the type of engineer who prides themselves on the raw amount of code you write, then Go is for you. If you’d rather focus on solving problems creatively and expressively, Go is not your tool...		dcow
27276217	11.8607025	-7.284184	comment	6.0	16.5	1621947387	-6.001253	"Can someone ELI5 what is an ""immutable database""? If you can add to the table, that means mutation, right? I am missing something..."		artemonster
27399895	11.749222	-7.3999906	comment	6.0	19.5	1622846528	-8.732413	Great! I am so glad more people see types as a useful tool. Personally I see it as essential, so I struggle to understand the mind set of people who do not want to use them. I understand that people t...		wonton53
27432920	11.959728	-7.154237	comment	6.0	16.0	1623148064	9.101109	So what was the point of the async/callback web programming revolution if processes were good enough?		sydthrowaway
27464298	11.604824	-7.936654	comment	6.0	58.0	1623351860	10.200401	As a developer I continue to be extremely happy with the Go language and the Go tools. Over the past 5 years Go has almost entirely replaced my use of C and C++. My Go programs (e.g., https://NN-512.c...		37ef_ced3
27465484	11.635639	-7.9066496	comment	6.0	19.0	1623357536	-10.42998	"For me the major remaining issue is a golang ide, or lack thereof.
You only have 3 options:- Goland from Jetbrains; awesome but costly- Vscode with golang plugin; slow, brittle, little functionality-vim; yuckIt'd help adoption greatly if there was a decent free option here."		bitcharmer
27490422	11.80589	-7.0185432	comment	6.0	19.5	1623567548	8.653127	Hopefully they come up with something better than a # prefix for identifying private fields. It seems like a small thing, but it looks clunky and arbitrary. Even _ would be better, but best of all would be adding a keyword or something instead of using a glyph.		caymanjim
37579363	11.663793	-7.887923	comment	6.0	19.5	1695173171	10.22835	Go offers a programming interface at a lower level of abstraction than languages like Python or Ruby. What you call boilerplate or housekeeping, I consider to be mechanical sympathy.Modulo extremes li...		kiitos
37592590	11.7263	-7.669789	story	6.0	46.0	1695263285	-7.040701	Sonnet: High performance JSON decoder in Go	https://github.com/sugawarayuuta/sonnet	sugawarayuuta
37592604	11.701272	-7.1654806	comment	6.0	19.5	1695263421	-9.075431	That’s called “schema.” It’s a pretty out there concept, I know, the idea that you should be burdened to document the structure and intent of your data for both human and mechanical consumption. I rea...		lolxmlhateonhn
37613794	11.815856	-7.279284	comment	6.0	45.5	1695398801	-10.719485	Virtual threads are going to be great, but they're still limited (still starved the pool when used with 'synchronized' blocks), and they aren't the structured concurrency power houses like kotlin coro...		adra
37646267	12.243174	-7.555306	comment	6.0	24.0	1695658488	-11.366469	I'm puzzled why Kotlin isn't getting enough attention on HN, at least as much as Rust or Zig.Kotlin is indeed popular in it's specific domain (Android & Java). But the company is keen to position it a...		lewisjoe
37738953	11.868886	-7.102212	comment	6.0	21.5	1696258548	-9.188316	It feels like we're going in cycles. C was somewhat lax with type checking, thus C++ and Java were both made more strict. Looking to escape the tyranny of static typing, the rise of Python, Ruby, or J...		rollcat
37765370	11.760811	-7.3768797	comment	6.0	17.0	1696428280	-8.926893	The only other use I'm familiar with where strong types are used to describe the equivalent of static types, but we've made clear distinction between the two here. What other definition is there?Usual...		randomdata
37766198	11.651414	-7.1445103	comment	6.0	20.5	1696431757	-8.839313	If your prejudice prevents you from having a conversation with Matz or Jose Valim or Van Rossom or the creators of Julia about software development, you may want to reconsider your prejudice as a hard...		jimbokun
37803796	11.737943	-7.310906	comment	6.0	22.0	1696700525	-8.747134	"Dynamic typing aka type inferencing (like in Python, but also in Java and C# when you use ""var"") can get you in trouble quickly. Consider this code:   var fireable = someMethod();
   firable.fire();

..."		breadwinner
37805997	11.824259	-7.611909	comment	6.0	17.5	1696716946	10.332472	> Personally, I think Haskell is approximately stuck in a local maximum, which can only be escaped by embracing dependent typesTo give a counter point, there seem to be lots of small wins that aren't ...		codeflo
37824295	12.129557	-7.495644	comment	6.0	23.5	1696879628	-11.227095	"Tell me you've never done any Android development, without telling me...This is such a low-effort ""take"" without any effort to justify _why_ you'd want something like this. There's a high amount of im..."		rohandhruva
37843935	12.2205715	-7.554243	comment	6.0	15.5	1697030017	-11.407279	Kotlin has a lot useless syntax sugar, for example @decorators are less powerful than the @decorators in python.And How do you say the opposite of sugar syntax in English? Because my lovely rustlang has a lot of sigil chars as old Perl, it makes me sad.		mdtrooper
38011609	12.505865	-7.5096536	comment	6.0	23.0	1698232865	12.868487	"“Any sufficiently complicated concurrent program in another language contains an ad hoc informally-specified bug-ridden slow implementation of half of
Erlang.” – Virding’s first rule of programming"		whalesalad
38033141	11.652109	-7.2269497	comment	6.0	19.0	1698364406	9.201225	"I find myself reaching for reduce fairly often, still. What's the list-comprehension equivalent?    map(fun, iter) --> [ fun(x) for x in iter ]

    filter(fun, iter) --> [ x for x in iter if fun(x) ]..."		nickysielicki
38099513	11.638519	-7.950542	comment	6.0	37.0	1698852315	10.242429	Then when he designed Go he made the act of data modelling akin to having one hand tied behind your back, because it supports only product types and not sum types too.		frou_dh
38126886	11.60802	-7.929397	comment	6.0	15.0	1699009111	10.20969	Single letter variables. A terrible pattern the go community picks up.		madeofpalk
38159550	12.117197	-7.8754725	comment	6.0	16.5	1699252993	-3.228922	"Has anyone here ever used category theory in a business (or any purpose other than publishing papers)? (Don't give me ""I used a monad once while programming"", I mean the kind of stuff that book is about)"		staunton
38187707	11.643153	-7.9273353	comment	6.0	26.0	1699429203	10.216008	"Controversial perhaps, but I now use Go where I used to be a prolific shell script script coder.Main reasons:   - Fewer opportunities for foot-guns
   - Ease of portability, no dependencies, e.g. no m..."		traceroute66
38188879	11.985021	-7.5558896	comment	6.0	17.0	1699441935	7.183149	> College will not prepare you for the jobI'm on the fence. Not initially, sure. But there are embedded lessons that click later.I was ten years into my career before I needed to write a b-tree or a d...		donatj
38229307	11.638201	-7.937625	comment	6.0	22.0	1699701605	10.23742	I've come to accept that Golang, as bad as it is, is probably the best that we're going to get in the near future.It takes so long for a language to rise to prominence that newer languages like nim or...		preommr
38236041	11.809591	-7.3114944	comment	6.0	16.0	1699749145	-8.994114	But they can just be auto-generated in documentation. It gets pretty annoying to type annotate everything for nothing but warm fuzzies when the compiler can figure it all out for you.Also, any decent ...		bmitc
38246109	11.742281	-7.2311134	comment	6.0	18.0	1699841394	-8.471793	I wonder if one could write a truly statically typed tensor implementation with something like this. Where you can then say Tensor<f64, 16, 16, 2000> but also Tensor<bool, 32> and Tensor<f32, 4, 4> et...		panzi
38265664	11.619756	-7.7846246	comment	6.0	27.0	1699979985	10.07136	Big difference is that Go is stable and conservative, net core keep adding a billion features every release. Looking at some net core 2/3 stuff and now to see how many things changed.Good luck with your code base in 5 years when someone decide to add all the new stuff.		Thaxll
38286793	11.94211	-7.2756553	comment	6.0	25.5	1700121066	7.1028037	Yeah, data-oriented design (DOD) always seems to get people riled up. I think it largely gets this type of reaction b/c DOD implies that many aspects of the dominant object-oriented approach are wrong...		GuestHNUser
38316915	11.762136	-7.176786	story	6.0	66.0	1700295938	7.0098143	Eoops: An object-oriented programming system for Emacs-Lisp (1992)	https://dl.acm.org/doi/10.1145/147135.147248	lr0
38322134	11.642983	-7.967928	comment	6.0	18.0	1700329338	10.212641	"""The Go monorepo is the largest codebase at Uber, comprising 90 million lines of code (and growing)""Is this just a symptom of having a lot of engineers and they keep churning code, Golang being verbos..."		npalli
38385642	11.685954	-7.162112	comment	6.0	21.5	1700689832	6.799202	If respecs are free:You're playing a Sword & Board fighter type character, and Stealth isn't one of your class skills, so you temporarily respec into Thief, steal the MacGuffin, and then re-respec bac...		nvy
38392086	12.121307	-7.2617526	story	6.0	87.0	1700742905	9.182194	Promises Training: Practical Exercises on Promises in JavaScript	https://github.com/henriqueinonhe/promises-training	henriqueinonhe
38393870	11.593052	-7.616789	comment	6.0	26.5	1700753798	10.150583	"I always hated the name. You're not enumerating anything. You are picking a variant, encoding a choice. Maybe ""sum type"" is too ""monad"", but surely ""variant record"" or even ""variant"" would have been a better name."		bruce343434
38404232	11.686769	-7.917075	story	6.0	3.0	1700835753	10.218689	Ask HN: Is Go simplicity worth it?		capl
38419638	11.905501	-7.429081	comment	6.0	29.0	1700980331	7.2673683	do functional languages mainly appeal to computer language enthusiasts/researchers? im just not seeing the benefit personally.		globalnode
38434925	11.669134	-7.907581	comment	6.0	18.5	1701105029	10.206334	> it doesn't have this overbloated concept of inheritance and polymorphism of let's say Java where you have to look through 6 files to understand what's even going onSeveral Go codebases I've worked o...		zimpenfish
38457677	11.824621	-7.215374	comment	6.0	20.0	1701253396	-8.981221	I got frustrated on the very first example (Basic 1: Any) because I didn't realize that the typings library wasn't imported by default. Maybe I should have known better, but it definitely got me.		vsnf
38488389	12.461315	-7.076245	comment	6.0	19.0	1701447318	12.401248	"Just 12 years full time with Ruby here, I'm a noob. But when I see that I could replace  def initialize(text)
    @text = text
  end

  def inspect
    ""#<#{self.class} #{text}>""
  end

  def ==(other..."		progne
38500619	11.651907	-7.9683614	story	6.0	7.0	1701541008	10.207635	How do I become a Golang Pro? Best resource to improve at lightspeed		NathanVix
38503439	11.680997	-7.173374	story	6.0	85.0	1701561339	9.110999	Performance: Adventures in Thread-per-Core Async with Redpanda and Seastar	https://www.infoq.com/presentations/high-performance-asynchronous3/	rbanffy
38566648	12.005359	-7.7559686	comment	6.0	25.0	1702024258	10.432591	Part of the reason I enjoy languages like Haskell is because of the abstraction maximalism enshrined at the language level, rather than the coding level.We all agree on what an Applicative is supposed...		hiAndrewQuinn
14722962	11.753934	-7.357115	comment	6.0	16.5	1499469272	-1.0283204	He's right.  The current type theory crazy is just another in a long line cargo cult programming fads.  First it was pure OOP for everything, then it was pure FP  for everything, and now it's types fo...		chroem-
14723370	11.864153	-7.5662475	comment	6.0	32.5	1499474038	10.302971	Nice article. I especially liked:> program3 fails because runFunction can only run first-order functions and runFunction is a second-order function – a function that takes a first-order function as a ...		georgewsinger
14729586	11.621145	-7.896865	comment	6.0	15.0	1499606190	10.18834	Type system is pretty cool in go. Particularly how the interfaces work, you don't have to explicitly declare that your object /type implements an interface, it automatically figures it out.Lack of gen...		flashmob
14763337	11.654692	-7.9416127	comment	6.0	23.5	1499967406	10.22273	> For example, I've been examining generics recently, but I don't have in my mind a clear picture of the detailed, concrete problems that Go users need generics to solve.This is sampling bias at work....		Analemma_
14764502	11.638035	-7.930771	comment	6.0	26.0	1499975008	10.215752	I get that everyone would love to have a functional language that's eager by default with optional lazy constructs, great polymorphism, statically typed with inference, generics, great concurrency sto...		didibus
14780932	12.063123	-7.8596253	comment	6.0	24.0	1500189232	10.422702	I never managed to understand why so many people were apparently longering for multicore support. I just can't believe many are impatiently waiting for this feature to start using the ocaml language f...		rixed
14829771	11.930448	-7.3912497	comment	6.0	26.0	1500762306	7.090782	Hi, mediocre programmer here.OOP is the most popular paradigm because it works the best for the greatest number of people and projects. It's natural to break large systems into component parts recursi...		booleandilemma
14843041	11.826363	-7.2437215	comment	6.0	32.5	1500933016	6.7824335	Design patterns exist because common solutions to problems exist, not because OO has serious problems.  I understand both paradigms and Lisp is hardly free of design patterns.  Every time you pass a l...		gnaritas
14855350	12.346809	-7.050893	comment	6.0	17.5	1501069598	13.196793	Can anyone recommend a good book on Perl 6? Are there any (even bad ones)?Right now I feel the major reason that keeps me from investing time in Perl 6 - besides adoption by distros - is the lack of a...		krylon
14870670	11.885787	-7.438458	comment	6.0	29.5	1501198073	7.278404	Biggest disadvantage for me comes when trying to implement a complex algorithm where the paper uses pseudocode that's imperative (which is almost always). In the best case you can implement parts of i...		surement
14883157	12.253064	-7.559459	comment	6.0	26.0	1501364910	-11.38597	">""Developers need to learn Kotlin well enough to confidently read the language. While a few developers will self-teach themselves, teams will still need to set aside training time for everyone to get ..."		xiaoma
14888477	11.594936	-7.8889165	story	6.0	19.0	1501457651	10.064999	ES6 Generators Deliver Go Style Concurrency (2013)	http://swannodette.github.io/2013/08/24/es6-generators-and-csp	stevekinney
14922606	11.904	-7.11038	comment	6.0	17.5	1501786669	8.686385	I read through the thread, and the proposal sounds crazy to me.1. Members marked private being accessible from other instances of the same class [1] is counter to every other OO language I have used. ...		bcherny
14929183	11.985637	-7.726788	comment	6.0	19.0	1501858989	10.403052	Do you know of a good resource for reading about their data-structures, especially anything Haskell doesn't have?		tome
14934640	11.793634	-7.3480926	story	6.0	25.0	1501918776	-8.916543	Static Typing Where Possible, Dynamic Typing When Needed (2004) [pdf]	https://www.ics.uci.edu/~lopes/teaching/inf212W12/readings/rdl04meijer.pdf	jasim
14934912	11.890473	-7.35141	story	6.0	22.0	1501924700	-6.3211756	Can I do FP in my language?	http://www.lispcast.com/fp-in-my-language	spinningarrow
14962684	12.076899	-7.195309	comment	6.0	18.5	1502226218	9.124921	I can't think of any reason I've ever wanted to cancel a promise except maybe when uploading a file. Therefore I'm having a hard time grasping why this is such a big deal. What is another example?		jzig
14999899	11.856219	-7.6413245	story	6.0	98.0	1502571114	12.85193	Pony Performance Cheatsheet	https://www.ponylang.org/reference/pony-performance-cheatsheet/	spooneybarger
15028407	12.13851	-7.5115995	comment	6.0	16.5	1502898382	-10.549187	Good post. I really hoped for some f# code after listing all those scenarios where c# fails.Anyway. I work in a c# shop with a large monolithic code base developed by a small team with lots of fluctua...		zubspace
15053114	11.636085	-7.93685	comment	6.0	35.0	1503147628	10.203936	I have said it before and I will say it again - for all the deficiencies Go has, it is somehow highly compatible with the way my brain works.One point the article does not mention is the documentation...		krylon
15063168	12.259734	-7.580259	comment	6.0	21.5	1503307977	-11.404275	I'm surprised to see that Groovy slightly beats Kotlin in on that graph. I really underestimated Groovy popularity, or overestimated Kotlin.I've yet to work with Kotlin but did like Groovy some years ago. Never used it professionaly though, only for play-projects.		Insanity
15066912	11.999601	-7.244127	comment	6.0	19.0	1503342697	9.181806	I was super excited about async/await when it first came out.  I hadn't really understood the point of Promises, but async/await looked simple and useful.However, I recently started using async/await ...		dlbucci
15071720	11.594795	-7.910453	comment	6.0	29.0	1503405347	10.233558	I'm no Go expert, so the following may just come from having not used it enough.The two things that shocked me out of continuing with Go were exception handling and package management.Exception handli...		erikb
15071876	11.804216	-7.4286833	comment	6.0	24.0	1503406665	-6.1291127	I did look at wikipedia, yes, which gave me a page of type theory related stuff without any apparent grounding in practicalities, which gives the conclusion that it's apparently unimportant unless you...		pm215
15104751	11.733337	-7.456593	comment	6.0	29.5	1503739249	-8.589105	I feel like this is a false dichotomy: you can have a fast iteration cycle, and have statically checked guarantees. I've worked in Haskell for 7 years and had exactly this. I could load my entire app ...		hesselink
15139091	12.221055	-7.6274714	story	6.0	98.0	1504170213	11.9280405	Data-driven Scala Programming	https://blog.buildo.io/data-driven-scala-programming-e50f07c4db35	francescogior
15163854	11.908379	-7.0572705	story	6.0	35.0	1504472078	-10.708221	Python3 Asyncio for middling developers	https://whatisjasongoldstein.com/writing/im-too-stupid-for-asyncio/	coffeefirst
15188873	12.081304	-7.2636366	comment	6.0	18.0	1504753335	-11.392021	This may be an unpopular opinion, but I don't want Java to move forward faster. I don't really want it to move forward much at all unless there is a huge, tangible benefit from the new feature(s). I a...		pents90
15199946	11.719957	-7.3560457	comment	6.0	29.5	1504876969	-8.888127	But with a statically typed language, you don't need to go through that code -> launch -> test cycle as often because everything is type-safe.		rockostrich
15240664	11.744254	-7.4545665	comment	6.0	27.0	1505324641	10.086546	OK... So exactly why is it useful to me, as someone writing programs in the real world rather than theorising about how computation works, that a list type under concatenation and a money type under summation are monoids? Can I actually write useful code with this knowledge?		vertex-four
15244587	11.985899	-7.548605	comment	6.0	17.5	1505356171	-4.2142925	That's nice, but form a hard-nosed engineering perspective, not just sometimes, but in general 19 lines of yucky procedural code that pretty much anyone can understand (and debug) are usually way, way...		kafkaesq
15299391	12.03946	-7.7708144	comment	6.0	29.5	1505951185	10.433719	Haskell is an incredibly simple language with only a few core constructions. You have ADTs/pattern matching and lambda abstraction/application and that's basically it. Everything else in the standard ...		wyager
15341175	12.150604	-7.4506187	story	6.0	122.0	1506449507	-10.609793	Build a web service with F# and .NET Core 2.0	https://blogs.msdn.microsoft.com/dotnet/2017/09/26/build-a-web-service-with-f-and-net-core-2-0/	LyalinDotCom
15385027	11.747498	-7.298036	comment	6.0	24.0	1506960719	-8.867717	">Not just, ""who the hell uses this"", but ""where the hell is this defined"" as well.On Common Lisp, a dynamic language, I can also get this answered instantly. I just press a key combination on a method call and i jump to the definition.So this isn't exclusive to statically typed languages."		flavio81
15385136	11.832004	-7.308917	comment	6.0	40.5	1506961302	-8.958538	I'm so happy to see the pendulum swing the other way, because when JavaScript was becoming popular, and Ruby and Python had a popularity renaissance (around mid to late 2000s), I had a lot of online a...		macspoofing
15385562	11.808162	-7.3375254	comment	6.0	18.0	1506963462	-8.844721	Our industry has not yet even scratched the surface of what types can offer: Types for enforcing architectures and controlling effects, types for checking correct use/free of scarce resources, types f...		willtim
15385686	11.787915	-7.360694	comment	6.0	22.5	1506964112	-8.892823	"Isn't static typing a requirement when writing an algorithm and data structures for ""every bit and clock cycle counts"" situations? How can a 0-compute overhead for dynamic typing exist in a dynamic ty..."		gwbas1c
15405952	11.846886	-7.2491026	comment	6.0	20.0	1507163321	5.071853	> It seems to me that some design patterns are essentially ad-hoc, informally specified, specialised instances of basic category theory concepts.There is a flaw in this type of thinking which I think ...		conistonwater
15429795	11.74775	-7.2562227	story	6.0	44.0	1507493859	-6.0243926	Truly immutable builds	https://blog.frankel.ch/truly-immutable-builds/#gsc.tab=0	kiyanwang
15484275	12.030539	-7.8148828	comment	6.0	18.0	1508170211	10.427646	If your course didn't cover monads, it was a very introductory one which would have probably benefited from choosing a nicer and simpler language, like antiquated LISP or maybe Scheme.		HelloNurse
15490415	11.922018	-7.642603	story	6.0	155.0	1508244192	10.318321	Haskell Typeclasses vs. C++ Classes	http://www.michaelburge.us/2017/10/15/haskell-typeclasses-vs-cpp-classes.html	MichaelBurge
15504896	11.739991	-7.8337774	comment	6.0	16.5	1508378089	11.921027	Any reason to use Scala native when Rust exists?		groceryheist
15525258	11.66945	-7.9200845	story	6.0	79.0	1508648972	10.205893	Reusable and type-safe options for Go APIs	https://derekchiang.com/posts/reusable-and-type-safe-options-for-go-apis/	derekchiang
15534413	12.003691	-7.227221	comment	6.0	17.0	1508776182	9.21382	"I do not undetstand the async example. What is the difference between      try {
        const response = await fetch(url);
        const text = await response.text();
        element.textContent = te..."		shp0ngle
15572071	12.241451	-7.273571	comment	6.0	38.0	1509136936	-10.326467	Actually, I am missing the simplicity of Lisp and Smalltalk in todays languages. From what I remember, they both have a fairly simple but universal syntax, which can be written for Lisp as  ([operator...		JepZ
15583515	11.685198	-7.314759	story	6.0	152.0	1509347667	-8.754808	So you want to write a type checker (2014)	http://languagengine.co/blog/so-you-want-to-write-a-type-checker/	ChickeNES
15606520	12.203409	-7.6161594	comment	6.0	20.5	1509579501	11.953179	If the JVM magically got rid of nulls and Scala cleaned up some of the slightly wartier bits (implicits come to mind, although they are useful and no clue how I'd fix em...) then Scala would be my favorite language around by quite a bit.Besides maybe Rust. Really different usecases though.		sushisource
15606869	12.179188	-7.541367	comment	6.0	18.0	1509583271	8.738784	"Not that nice compared to kotlin:    data class Animal(dog: String, numberOfLegs: Int)  

    val dog = Animal(
        name = ""dog"",
        numberOfLegs = 4
    )

The amount of boilerplate for AutoValue builders is so ridiculous that most people use IDE plugins to generate it."		guelo
15644996	12.2334175	-7.521979	comment	6.0	25.5	1510073651	-11.320134	Good job reaching a stable release.I have a Kotlin microframework that never made it past hobby-level stability[1].One thing I found out is that you really have to write a library in Java if you want ...		danneu
15666129	12.2237425	-7.456105	comment	6.0	15.5	1510264280	-11.343917	"That is awesome! Thanks!Does anybody know the easiest way to compile to JVM bytecode?
I have a Scheme interpreter written in Kotlin, what is the best way to compile it, instead of interpreting? Where do I start?"		kovrik
15690030	11.804149	-7.282158	comment	6.0	26.5	1510605754	9.669678	It's interesting how .NET is converging on the same runtime techniques used in Java and yet how drastically far behind they are. The Java guys realised that an interpreter was still useful decades ago...		peoplewindow
15696994	11.720685	-7.792986	comment	6.0	20.5	1510679700	10.157799	Did it seem to anyone else that sticking to Python would have been way easier? It didn’t seem like any of the performance gains were through Golang.		throwthisawayt
15700099	12.234014	-7.6406984	comment	6.0	15.5	1510700694	11.93481	"Back in 2010 I wanted to try out Scala. I fired up the REPL and did this:    scala> 1+2
    res0: Int = 12

Here is a blog post I wrote about it at the time: https://illuminatedcomputing.com/posts/201..."		pjungwir
15705318	11.656429	-7.9532237	comment	6.0	16.0	1510765488	10.221663	Thanks to Robert Griesemer (Phd student of Prof. Wirth), the Go programming language includes some design lessons taken from the Oberon language		lboasso
15712015	12.23307	-7.566736	story	6.0	84.0	1510833774	-11.356649	Kotlin/Native v0.4 released: Objective-C interop, WebAssembly and more	https://blog.jetbrains.com/kotlin/2017/11/kotlinnative-v0-4-released-objective-c-interop-webassembly-and-more/	ingve
15729075	11.75033	-7.145275	comment	6.0	15.5	1511015676	6.9008465	"> But collecting the models, the different representations of systems conceptually that can be expressed as software, sometimes called paradigms: this is very interesting.Isn't this another way of saying design patterns? I know the answer has to be ""no"", but I don't see why."		criddell
15739075	12.242776	-7.6095815	comment	6.0	16.0	1511175197	11.986205	Why does the Scala community needs its own build tool? Why not just use Gradle? Or if something is missing, adding this to Gradle and then using Gradle.		cryptos
20237347	11.785133	-7.338029	comment	6.0	19.0	1561064523	-8.933409	I've never understood the so called advantages of dynamic typing. To me it looks like a land mine in one's project waiting to blow at run time. And what for? Do developers code so fast that the time s...		FpUser
20257322	11.976028	-7.629805	comment	6.0	18.0	1561312070	10.357069	I love FP and have programmed Haskell in professional contexts. But I have to admit, I don’t like it and it’s strong formalisms make so many problems much harder than they have to be.Take lenses for e...		mruts
20258569	12.020514	-7.7621813	comment	6.0	16.0	1561323070	10.352792	Javascript programmers seem to have no problem using a monad every day (promises), and they are huge fans of do-notation in the from of async/await. Imperative programmers do not seem to have an issue...		jsjolen
20267835	11.675399	-7.2963004	comment	6.0	18.0	1561406585	-8.795279	Not trying to knock the work, but why is no static methods a selling point? How does one do utility classes instead? And do you eschew static factory methods entirely?		Xorlev
20288377	11.856625	-7.4127636	story	6.0	26.0	1561577997	7.286184	Real problems with functional languages	https://medium.com/darklang/real-problems-with-functional-languages-efe668c5264a	cpeterso
20332915	11.726186	-7.358956	comment	6.0	16.0	1562052048	9.189854	> I serve as a technical lead for Project Loon. That is the project that's intended to add continuations and fibers to the JDK.> However, actually, Project Loom, the goal of the project is to add cont...		twic
20331873	11.990105	-7.7331595	story	6.0	51.0	1562037619	10.443596	Cutting through the smog: making an air quality bot with Haskell	https://engineering.linecorp.com/en/blog/cutting-through-the-smog-making-an-air-quality-bot-with-haskell/	moleike
20360037	11.624734	-7.949039	story	6.0	234.0	1562304178	10.203545	Go compiler internals: Adding a new statement to Go	https://eli.thegreenplace.net/2019/go-compiler-internals-adding-a-new-statement-to-go-part-1/	soheilpro
20370625	11.8819895	-7.4290414	comment	6.0	29.0	1562433045	10.417422	Hard to believe this does not mention Haskell or functional programming ... but then again that was a Pycon talk from 2003.		greg7mdp
20374832	12.341221	-7.054224	comment	6.0	44.5	1562503669	13.184539	"Oh man.  I don't know what to say.  In the process of trying to bust myths, this confirmed every practical concern that the ""myths"" actually express.Perhaps the worst was: ""Myth: Perl 6 will never be ..."		jannotti
20375080	12.316188	-7.04476	comment	6.0	19.5	1562507775	13.158747	Thinking about the point of Perl6...I was trying to work out how to best structure a website to explain a language, so I did a quick survey of existing sites. It's very interesting what different lang...		ben509
20413347	11.985186	-7.6239142	comment	6.0	22.0	1562865262	-0.56383187	"    strong :: (Integral i) => [i] -> [i]
    strong = mapMaybe fst3 . scanr g (Nothing, 0, 0)
        where fst3 (x, _, _) = x
              g n (_, p, pp) = (p <$ guard (2 * p > pp + n), n, p)

Haskell makes a better Perl (especially if, like here, you don't bother with readability)."		moomin
20465697	11.598668	-7.7653003	comment	6.0	28.0	1563412149	10.003185	> In a language with less features, you might have to write slightly more code, but the code you write will be more readable to everyone else.I disagree with this, which is precisely why I prefer feat...		RhodesianHunter
20482103	11.777221	-7.218579	story	6.0	3.0	1563567652	-8.912908	Ask HN: Why is scientific programming dominated by dynamically typed languages?		phonebucket
20495855	11.924222	-7.366716	comment	6.0	33.0	1563778915	7.056565	I've been around long enough to remember when OOP was the savior who would free us from the previous generation of trillion-dollar disasters (spaghetti code, CASE tools, DFDs), and I'm sure someone wi...		ggambetta
20495834	11.87136	-7.2910156	story	6.0	20.0	1563778335	7.0471435	Object-Oriented Programming – The Trillion Dollar Disaster	https://medium.com/better-programming/object-oriented-programming-the-trillion-dollar-disaster-️-92a4b666c7c7	fpoling
20497547	11.703036	-7.1290646	comment	6.0	22.0	1563800287	6.8422256	I know this isn’t the point of the article but the code shown there is the archetypal case where writing classes is an anti-pattern, as argued in “Stop Writing Classes” [1]. All the classes in that co...		klmr
20500544	11.600401	-7.108746	story	6.0	6.0	1563818612	-7.110134	Ask HN: Are there any languages where the function comes after the argument?		maest
20534743	11.705202	-7.812967	story	6.0	4.0	1564148811	10.18745	Ask HN: Could Python be reborn in the image of Go?		0xbadcafebee
20554083	11.653402	-7.9465733	comment	6.0	18.5	1564404944	10.233559	I read through this yesterday and I'm fairly confused about all that.1. This is a long proposal. Excluding the implementation/issues/comparison parts, it clocks in at 7700 words. Compared to the 27k-w...		drej
20554188	11.709453	-7.609497	comment	6.0	20.5	1564405672	-1.6615264	Why “Contracts” and not “Generics”? To make it less contentious, maybe, or to manage expectations?		iainmerrick
20554894	11.6805725	-7.4535255	comment	6.0	27.5	1564410234	10.086579	It seems as a proposal to overlap interfaces a lot.- Interfaces gather methods. The concrete type referenced through an interface doesn't need to know about the interface. Interfaces can be used to de...		JulianMorrison
20556364	11.663483	-7.626786	comment	6.0	18.0	1564417821	10.126951	Agreed. What I don’t get is why people try to change Go all time instead of simply using different languages for different problems. If you absolutely need generics in a project, there are a ton of languages out there that will fit your bill.		haolez
20582554	12.323731	-7.031061	comment	6.0	19.5	1564654701	13.185135	From a experienced linux sysadmin point of view perl5 is as good as it gets.I've been searching for alternatives for about 10 years now, at first because my novice self was heaving headaches reading o...		trabant00
20582192	12.329102	-7.0279565	comment	6.0	27.0	1564649513	13.186486	Consider this: Perl codebase is reaching perfection and no longer needs releases. After this, we get eternal Perl ;)		_rrnv
20603650	11.665556	-7.930622	story	6.0	115.0	1564878057	10.018072	Simple RPC framework in 300 lines of Go	https://github.com/ankur-anand/simple-go-rpc	ankuranand
20675531	11.763711	-7.2472878	comment	6.0	23.0	1565618936	9.084632	Thing of it as a different analogy.  There are various chores to do around the house - some of them must be done synchronously (do the ironing - we don't want to leave the iron on). Some of them can b...		PJDK
20675784	12.015302	-7.789617	comment	6.0	17.0	1565620710	10.38602	"I guess I don't get all this ""monad"" stuff. This article talks about 3 types of monad. An optional, a list, and a future.However an optional is really just a list constrained to size 0 or 1. And a fut..."		zug_zug
20742126	11.806692	-7.4737906	comment	6.0	19.5	1566251221	7.54831	D has a `pure` attribute for functions, and yes it is enforced. It's enforced even to the point where it becomes a PITA, but when you manage to make functions pure, you know it's solid.One pain point ...		WalterBright
20744477	12.130004	-7.686642	comment	6.0	17.0	1566284891	11.761608	Compared with OCaml, Scala can express type classes and has higher-kinded types. Many abstractions that are easy to express in Scala are in fact hard to express in OCaml.For-comprehensions are worse t...		bad_user
20768911	12.174033	-7.0350356	comment	6.0	21.5	1566486498	-10.38072	The problem IMHO is the old adage of the devil being in the details. I see a lot of engineers talking about things like deriving types from enums, and meanwhile the type system will merrily let you do...		lhorie
20829751	12.352224	-7.055564	comment	6.0	15.5	1567088665	13.1954	If Perl 6 is renamed, Perl 5 could skip to Perl 7 in the next version to avoid confusion.		goto11
20829827	12.312618	-7.03202	comment	6.0	25.0	1567089233	13.180706	"Routinely I see in numerous online discussions that people refuse to even consider Perl 6 because they hate Perl. Or there are younger people who think of Perl as ""their grandfather's language"" (in mu..."		dkarl
20846016	12.482736	-7.815951	comment	6.0	20.5	1567256219	11.887082	Need someone to explain why I should use clojure over scala because typelevel seems pretty well developed		nautilus12
20869715	11.697578	-7.8074307	comment	6.0	20.0	1567536066	10.192575	>  is it's much more verbose/harder to handle edge cases - it feels like I'm less productive writing the program, but end up building something much more stable than the Python equivalentThis is exact...		axaxs
13610998	12.083244	-7.496235	story	6.0	145.0	1486674514	7.7074	Getting Started with Functional Programming in F#	http://codeopinion.com/getting-started-with-functional-programming-in-f/	dcomartin
13654978	11.593234	-7.2246747	comment	6.0	17.5	1487189322	5.1206717	"I'd never heard of the expression ""dynamic programming"".https://en.wikipedia.org/wiki/Dynamic_programmingAm I to understand that it is ""just"" recursion with caching?"		wopwopwop
13659776	12.031984	-7.5276685	story	6.0	2.0	1487252579	7.326925	Ask HN: What functional programming language should I learn?		xfax
13662752	11.657809	-7.9737334	comment	6.0	16.5	1487273017	10.242044	"I'm wondering if ""The Go Programming Language 1e"" (Donovan / Kernighan) is still relevant enough to be used as a first book for self teaching.https://www.amazon.com/Programming-Language-Addison-Wesley-P..."		clumsysmurf
13663745	11.620356	-7.860025	comment	6.0	21.0	1487280803	10.1867	OK, so now this is out, how about we discuss what is actually in this release!The sort pkg now has a convenience for sorting slices, which will be a nice shortcut instead of having to define a special...		grey-area
13680966	11.792451	-7.17207	comment	6.0	21.5	1487527622	-9.036561	This is not specific to just Python, but I have often wondered if it would be a productive exercise to write a static compiler for a dynamic language which also supported optional static typing.  Pres...		curtis
13691857	11.66173	-7.300324	comment	6.0	24.5	1487632190	-6.154983	Edit: I know this sounds like I am trying to dismiss the problem. That's not my point. I'm trying to say the problem is compounded by the choice to bundle the solutions to several different problems. ...		erikpukinskis
13772174	12.24234	-7.639882	comment	6.0	21.0	1488438806	11.936813	Scala appeals to those who love programming languages. Java and a few other languages appeal to those who love making software, something that Scala is terrible at.		pents90
13781930	11.936241	-7.714345	comment	6.0	18.0	1488537103	10.399536	"(Disclaimer: I have yet to read the paper.) It's interesting because it's both important and hard.It's important because it allows you to infer types in the presence of parametric polymorphism (""gener..."		tomp
13790618	12.189275	-7.2311087	comment	6.0	18.0	1488630818	12.543993	"    $ irb
    [1, 2, 3, 4].
      select {|n| n % 2 == 0}.
      map {|n| n * n}.
      reduce {|sum, n| sum + n}
    # 20

vs    $ iex
    [1, 2, 3, 4] \
    |> Enum.filter(fn(n) -> rem(n, 2) == 0 en..."		pmontra
13816059	12.156101	-7.513124	comment	6.0	18.0	1488927982	-10.584517	Is F# a good alternative to C# for writing purely object-oriented code? For my current project I have a very low level spec/architecture, that says class Abc does Xyz, classes A1, A2, A3 implement a s...		mee_too
13834745	11.632008	-7.1486135	comment	6.0	25.5	1489101280	6.288684	Does anyone else just feel underwhelmed by the pattern matching?  It seems like syntactic sugar over a standard if(x is Type) that doesn't bring a whole lot to the table other than being able to write more error prone code.		rjbwork
13868251	12.236272	-7.6313868	comment	6.0	27.5	1489505236	11.952413	It seems to me like Scala's biggest benefit and biggest downside are two sides of the same coin: easy interop with the JVM and Java code. Scala Native just seems like you're paying all the price of that for none of the benefit.		cwyers
13873680	12.2553425	-7.575853	comment	6.0	34.5	1489550005	-11.345431	The possibility of running Scala >=2.12 (or any other language that is committed to Java 8[1]) on Android seems even more remote now.  Jack+Jill at least promised a way of running Java 8 bytecode on A...		dkarl
13877413	12.172604	-7.541571	comment	6.0	17.5	1489596037	-11.386418	I'm just getting started with Kotlin so can't comment too deeply on its problems but here are a couple things that have already annoyed me.Kotlin is supposed to be less verbose but variable declaratio...		guelo
13906107	11.698468	-7.9297743	comment	6.0	16.5	1489915412	10.334147	"TL;DR: ""Go isn't like Haskell, and that means it's not as good""I get that we all have favourite languages, but it is not amazingly helpful to try and compare them like this, for me. I'm sure if you're..."		PaulRobinson
13950005	11.592136	-7.915974	comment	6.0	23.0	1490372595	10.146812	"one of the things that go eschews is operator overloading.    a := b + c

What's the runtime complexity of this statement?  How much memory will it cause to be allocated?  In go there's only two possi..."		NateDad
13953640	11.627472	-7.9078164	comment	6.0	20.0	1490406653	10.192625	I'd love to have something that takes the best of Go (static typing, fast compiles, binaries, community) and functional paradigm.		spraak
13959233	12.021323	-7.798424	comment	6.0	30.0	1490504083	10.408977	"Are you serious?> Monads are not complicated. They are implemented as a typeclass with two methods, return and (>>=) (pronounced ""bind""). In order to implement a Monad instance, these two functions mu..."		jnordwick
13959287	12.0265465	-7.816169	comment	6.0	20.0	1490505161	10.396989	Simple /= easy. Complex /= hard.Monads are very simple. They just aren't easy because most people don't have the base of terminology. When you grok them you'll laugh because you'll realize how simple ...		chongli
13960453	11.94917	-7.731166	comment	6.0	18.0	1490531908	10.34694	I'm still kind of having problems with monads. Funnily enough, I recently found an article explaining what monoids are: https://fsharpforfunandprofit.com/posts/monoids-without-tear...    You start wit...		oblio
13960866	12.030862	-7.805775	comment	6.0	15.0	1490537687	10.438975	"The article is spot on. The problem with monads is not the what, is the why. Tutorials often explain the what, which is easy to understand (except where people get creative with similes... ""monads are..."		kaoD
14034942	12.227934	-7.530737	comment	6.0	17.0	1491325638	-11.382395	I'm skeptical of the strategic advantage of being backed by a tooling company, because of the fact that tooling is often a preference that comes with holy wars attached. If Emacs sponsored a language,...		saosebastiao
14064580	11.927594	-7.3593297	story	6.0	4.0	1491612330	7.114052	The state of OOP in PHP		fredastaire
14113194	11.62394	-7.915098	comment	6.0	16.5	1492156260	-10.438761	I got very interested in Go recently, but I have question, how do you do your debugging in Go? I am using VSCode, and although VSCode support for Go is the best support between editors, but there is no official support for debugging , it seems.		0xFFC
14123698	12.1391115	-7.6836967	comment	6.0	25.5	1492303133	-10.594804	"I'm optimistic about Reason, Facebook's new syntax ""skin"" on top of OCaml. I find OCaml's syntax to be quite gnarly; of the MLs, F# is probably the cleanest and most modern-feeling. Something like F# without the .NET stuff could have been amazing."		atombender
14128578	12.501151	-7.5114565	comment	6.0	17.5	1492391082	12.879539	Question for those of you who are game programmers. Is the message passing of erlang slower than shared memory threads in c++?		bobajeff
14153720	11.77637	-7.341999	comment	6.0	31.5	1492659334	-8.907594	You're just repeating the same claim without any evidence.Why is it faster to write code in a dynamically typed language?Most modern statically typed languages have type inference so you don't even ne...		hota_mazi
14167614	11.802252	-7.059317	comment	6.0	46.0	1492796559	-9.129904	If I attempt to generalize it, I think most of C#'s differences in language design that have opposites in Java are superior.  Examples include:+ not virtual by default (so base classes can be changed ...		jasode
14167620	11.708263	-7.407166	story	6.0	103.0	1492796609	-8.70301	Type Systems as Macros	http://lambda-the-ultimate.org/node/5426	mpweiher
14177503	12.02119	-7.7906957	story	6.0	181.0	1492942869	10.423854	From Monads to Machine Code	http://www.stephendiehl.com/posts/monads_machine_code.html	mrkgnao
14218453	11.905906	-7.640769	story	6.0	120.0	1493378132	10.334994	Basic Type-Level Programming in Haskell	http://www.parsonsmatt.org/2017/04/26/basic_type_level_programming_in_haskell.html	runeks
14226310	11.973919	-7.729127	story	6.0	65.0	1493469833	10.407864	What i wish i knew when learning haskell	http://dev.stephendiehl.com/hask/	allenleein
14240866	11.844959	-7.2951717	comment	6.0	29.5	1493668175	9.233224	A lot of people seem to have trouble wrapping their heads around async programming and I'm not sure if this article will help that much.What are the most confusing aspects of using async/await? Is it the implementation (i.e the syntax in JS, C# or Python) or the theory behind it?		orf
14267141	11.966993	-7.711973	comment	6.0	16.0	1493920834	10.427787	> The same is not true of Haskell. If you have never looked at Haskell code, you may have difficulty following even simple functions.Why is it that people talk about this almost as if it's done virtue...		matt_wulfeck
14311174	11.622932	-7.305265	comment	6.0	20.5	1494446889	8.420624	I suppose this is the money quote:> Please note that I’m not saying that interfaces are always bad. When they add value, they are useful. I’m only saying that interfaces that mirror one and only one c...		twblalock
14329167	12.049247	-7.827103	story	6.0	131.0	1494639262	10.428027	Writing Performance Sensitive OCaml Code	https://janestreet.github.io/ocaml-perf-notes.html	sndean
14362241	12.243114	-7.5477567	comment	6.0	19.0	1495050996	-11.37723	"I have nothing against Kotlin. It seems to be coming out of nowhere to surpass more ""tested"" languages for lack of a better way of putting it, but as I'm reading about it I can truly see the appeal.Th..."		dhfhduk
14363814	11.958371	-7.674918	comment	6.0	17.5	1495064799	10.454335	Does anyone remember when he wrote this?http://steve-yegge.blogspot.com/2008/06/rhinos-and-tigers.ht...And in the comments section he got lit up because he was unfamiliar with Haskell/Scala/OCaml type...		runT1ME
14367548	12.086025	-7.5882525	comment	6.0	26.5	1495118254	-11.3731165	Kotlin lacks the ability to do true functional programming that Swift has.  Swift has pattern matching, recursive data structures (edit: specifically ADTs with enums or case classes is what I was thin...		jnbiche
14374637	11.726951	-7.2298937	comment	6.0	16.5	1495194132	9.19284	"""Remember filtering lists with for loops? Thanks to the functional approach to collections, we can also reduce all the complex, multiline instructions to only one line of code.""Erm, same can be done i..."		moondowner
14376243	12.246518	-7.5597057	comment	6.0	25.0	1495205784	-11.3960905	Kotlin is becoming more and more popular. Are we better off learning Kotlin instead of Go?		perseusprime11
14381526	11.901098	-7.649086	story	6.0	80.0	1495269427	10.315121	Language-agnostic schemas based on Haskell's type system	https://github.com/seagreen/plate	setra
14413003	11.612843	-7.9725723	comment	6.0	22.5	1495656201	10.250771	Honest question: what strengths does Go have over D? I became very proficient at Go several years ago, and was reading about D for hours and hours last night, and it looks like D is overall a much better language.		penpapersw
14443269	11.732369	-7.8528643	story	6.0	17.0	1496125684	10.149237	Node.js needs to die in a fire and Golang is the perfect arsonist	http://react-etc.net/page/node-js-needs-to-die-in-a-fire-and-golang-is-the-perfect-arsonist	velmu
14447915	12.095256	-7.078017	comment	6.0	37.0	1496173214	9.123488	For me, this one brought happiness:Node.js 8.0.0 includes a new util.promisify() API that allows standard Node.js callback style APIs to be wrapped in a function that returns a Promise. An example use...		flavio81
14450939	11.9197855	-7.6170535	comment	6.0	26.5	1496215935	10.275064	Purity is tricky to define. For example (stolen from Reddit user gasche), if you can measure how much time a computation takes, then Haskell is impure, because a lazy value takes longer to compute the...		cousin_it
14461357	12.31425	-7.032912	comment	6.0	16.5	1496332435	13.181942	I think perl invites a kind of mindset from how the language is and how the initial community was.Why does it have something called 'say' instead of something more intuitive like 'println'. Then there...		nf05papsjfVbc
14471282	11.6111	-7.921799	comment	6.0	31.0	1496421890	10.211306	> I mean, what's the better alternative to Go for this work? Maybe Rust? It is, at least more controllable at a lower level...but, not as easy to pick up for people coming from a C/Python/Perl/Ruby sy...		scriptkiddy
14480998	12.1995325	-7.641849	comment	6.0	16.5	1496577839	-10.55364	> A random old-time Lisp hacker's collection of macros will add up to an undocumented, unportable, bug-ridden implementation of 80% of Haskell because Lisp is more powerful than Haskell.How so? Can we...		jasim
14506308	12.317283	-7.290409	comment	6.0	19.5	1496842638	7.2547812	I tried Pharo awhile ago, but last I checked the HiDPI support was still not there, and the menu was just unusable on my QHD+ screen.It's a bit of a common point of frustration for me, because I've ha...		AdmiralAsshat
14526269	11.646131	-7.9571233	comment	6.0	26.0	1497072189	10.229441	"It's always bad.
The second line makes you understand with a glance what it does because it is declarative and explains what is doing instead of how.
The go code is awful (personal opinion, although I..."		tigershark
14594724	11.728903	-7.1153555	comment	6.0	22.0	1497967669	-8.9738	"Not true. Decorators hijack your function surreptitiously. They turn y = f(x) into y = g(f, x) in a sneaky way that doesn't require you to adjust to call site. In this way it's more than ""just higher order functions""."		solipsism
14593825	11.686699	-7.92926	comment	6.0	15.5	1497959907	10.207844	Starting to feel like Go is suffering from a glut of web frameworks.		whoiskevin
14628054	11.970769	-7.728271	story	6.0	55.0	1498350817	10.43465	Show HN: Simplexhc – Haskell to LLVM compiler (design phase)	https://pixel-druid.com/blog/announcing-simplexhc/	bollu
14643299	11.939111	-7.454381	comment	6.0	21.5	1498550543	-2.0907235	Funny, but HN oldsters probably remember when functional programming wasn't at all tied to immutable data structures, and when Lisp and derivatives where considered enough functional programming, with...		coldtea
14674236	11.83758	-7.355069	comment	6.0	23.0	1498865607	-8.938846	"    Prove how?

By means of natural selection.    They could have succeeded in spite of
    dynamic typing, not because of it.

You think the otherwise smart and successfull founders of these projects..."		TekMol
14691108	11.668725	-7.2657766	comment	6.0	20.5	1499113469	-5.988376	Can anyone help me understand what is happening at the bottom of page 23 (page 3 of the PDF)?It says any permutation sigma of x_1, ..., x_n can be extended to a bijection of Q(x_1, ..., x_n) defined b...		monfrere
30789158	11.881352	-7.3752866	comment	6.0	19.0	1648127004	7.416712	FP explanations like this annoy me:That is, this code:x = foo()y = bar(x)z = bar(x)Should mean the same thing as:y = bar(foo())z = bar(foo())Because it's obvious to anyone that has written any sort of...		treis
30807030	11.627757	-7.6790705	comment	6.0	18.5	1648242183	10.108921	"    type Ordered interface {
        Integer|Float|~string
    }

I kind of despise the keyword / syntax design choice of the tilde (~) signifying ""anything where the underlying type is e.g. a string""..."		jaytaylor
30858498	11.681752	-7.8945804	comment	6.0	32.5	1648662630	10.192241	By that definition, Java is a systems language as well.I think Go makes a better trade-off than Java, but I struggle to come up with decent examples of projects one could write in Go and not in Java. Most of the “systems” problems that Java is unsuitable for, also apply to Go.		stingraycharles
30880848	12.003612	-7.727355	comment	6.0	18.0	1648834236	10.334672	"Personally I never really understood the benefit of thinking in functional terms about things that are conceptually more naturally thought of as persistent objects.For example when the author picks ""p..."		Barrin92
30919369	12.335664	-7.26787	comment	6.0	22.0	1649168607	7.096567	Who's using Pharo in production? Every time Smalltalk comes up, it's almost like it's this Loch Ness monster that everyone claims to be enamored with but doesn't actually exist. I want to love Pharo so much, I just can't think of a single thing it would be useful for.		ramesh31
30942556	11.978031	-7.185205	story	6.0	39.0	1649325264	9.159034	You Can Throw() Anything in JavaScript – and Other Async/Await Considerations	https://www.bennadel.com/blog/4210-you-can-throw-anything-in-javascript-and-other-async-await-considerations.htm	fagnerbrack
31014019	11.925061	-7.4268713	comment	6.0	15.5	1649854385	7.167471	It's like a competition for which alternative programming paradigm is a hill most worth dying on: functional, concatenative, or object oriented. There seem like a few runner-ups: contract based, quant...		JohnDeHope
31045467	12.496843	-7.107395	comment	6.0	16.5	1650054712	12.3855295	Ruby is awesome, but it's insanely powerful.For example: I mean, you can monkeypatch anything (including _Object_) at runtime. You can use this to make 1 + 1 = 3, if you desired, or to add a method to...		cyberpunk
31104808	12.287444	-7.3102865	comment	6.0	19.5	1650501176	7.10907	Smalltalk is cool. But…For what? Practically speaking in 2022 it has no benefit over any other system or language or libraries.It seems to be a cool thing that we can talk about as we look at our coll...		eric4smith
31115149	11.783382	-7.160131	comment	6.0	17.5	1650575014	-8.979968	100% agree - never really understood the movement behind adding types to Python. Type hints are a useless complexity that yield little return. If you want types, use something else other than Python. The whole thesis behind Python is simple is better than complex.		jonathan-adly
31116023	12.000248	-7.1041965	comment	6.0	18.0	1650580540	-9.28011	While I love the idea behind Python's type hints, they are merely a shadow of the success of TypeScript.Like the author, I've mostly given up on adding type hints in my Python code. I now only use the...		Humphrey
31117415	11.746389	-7.328794	comment	6.0	61.0	1650592925	-8.783495	Not typing is kinda a crazy way to write programs when you think about it. It can be beneficial in certain niche use cases like data science where code is always terrible. For everything else, types are a huge boon for the developer and everyone consuming their work		mountainriver
31117739	11.724345	-7.2576547	comment	6.0	18.0	1650596435	-8.753906	Nice. How do you force types just in the new code?		neves
31142446	11.823193	-7.3242307	comment	6.0	24.5	1650792109	-4.8771334	> I don’t really think this is a problem at all? I mean, at the particular design point the language occupies there are basically three possibilities:How so? Where's the Java/Python-like languages in ...		KronisLV
31169919	11.646112	-7.770277	comment	6.0	15.0	1650992292	-10.409114	I want to slap a bunch of side projects on a small VPS. With Go, this is no problem. Scp the binary (which includes an embedded SQLite), configure it to run as a systemd service, add it to my reverse ...		christophilus
31177474	11.88641	-7.6236567	story	6.0	120.0	1651046389	10.328131	Introduction to Haskell Typeclasses	https://serokell.io/blog/haskell-typeclasses	ingve
31192894	11.645182	-7.9774017	comment	6.0	97.5	1651156214	10.238092	Go has a lot of issues. Some of them would be easily fixable if people promoting and developing Go actually admitted the problems. However, the fanbase usually acts as a cult pretending that issues ar...		gambler
31233566	11.913744	-7.3950324	story	6.0	30.0	1651489205	1.627867	At the boundaries, applications aren't functional	https://blog.ploeh.dk/2022/05/02/at-the-boundaries-applications-arent-functional/	s3cur3
31247724	11.975939	-7.702789	comment	6.0	21.5	1651582795	10.449225	Haskell is famous for it's quite an academic nature. But the ecosystem has drastically improved in recent years, so that that image is really outdated by now.E.g. with Haskell Language Server we have ...		_query
31273768	11.73056	-7.110484	comment	6.0	18.0	1651760731	-8.998629	"""Those techniques are based on the idea that most code ""does not use the full dynamic power that it could at any given time"" and that Python can quickly check to see if they are using the dynamic feat..."		jerf
31304502	11.660507	-7.064001	comment	6.0	19.0	1652021019	8.956957	As a python veteran, I'm quite envious of the advanced destructuring you get in some languages.Unpacking doesn't let you specify default values if cardinality doesn't match, nor can you extract dictio...		BiteCode_dev
31414577	11.606533	-7.366738	story	6.0	34.0	1652811947	-8.755562	Static Integer Types (2021)	https://tratt.net/laurie/essays/entries/static_integer_types.html	isaacaggrey
31430030	12.0636	-7.6759734	story	6.0	89.0	1652927606	10.384129	Owl: OCaml Scientific Computing	https://ocaml.xyz/	lnyan
31482256	11.60462	-7.920358	story	6.0	47.0	1653327572	10.166277	Operator constraints in Go	https://blog.merovius.de/posts/2022-05-23-operator-constraints/	Merovius
31492827	11.950733	-7.4274344	comment	6.0	22.0	1653403655	7.092679	I wish I hadn't bought into the functional programming cult so hard as a younger programmer. I thought it was the future and sacraficed learning and gaining mastery of OOP for that when OOP is a much more widely used and honestly now in hindsight probably better tool in most cases.		natly
31493320	11.687875	-7.4821014	comment	6.0	27.5	1653405908	9.84243	Not providing generics was already a mistake > 25 years ago. Coming from C++ with its templates, I was astonished when Java came out without generics in 1995. It was dumbfounding, because parametric p...		layer8
31520152	11.655532	-7.9315696	comment	6.0	32.5	1653581662	10.208838	"As with all of these posts, the big reason is never really written:""I just wanted to learn a new language""Now, the points they've made are valid, Go concurrency beats the pants off python, and with go..."		KaiserPro
31547584	11.676291	-7.07534	comment	6.0	16.0	1653814540	-8.080178	Can someone give an example of how (automatic) dependency injection works in functional programming?This to me is the only real benefit of OOP, that I can just add another service into the constructor...		0xcoffee
31550599	11.712929	-7.236965	comment	6.0	20.5	1653843232	-0.95069104	Maybe this works as an IC that has no collaborative aspect to their day-to-day but as an IC leader async adds material pauses and latency into projects.  If everybody is ok with everything taking long...		hellisothers
31566354	11.606438	-7.043411	comment	6.0	29.0	1653974509	-10.490209	Walrus operator IMO is a huge mistake. It saves fuck all time/space, but introduces an entire new operator that probably added more complexity, edge cases and quirks than the benefits it provides. Terrible idea.Worse, no one uses it. I've yet to come across anyone that advocates it or remembers it.		systemvoltage
31578110	12.357001	-7.191902	comment	6.0	22.0	1654058027	12.439913	I'm copy pasting my usual comment about types in Ruby: if I'd want static types I'd be using one of the many static typed languages out there. One among the many reasons I like Ruby and Elixir is that...		pmontra
31659762	11.975712	-7.744548	comment	6.0	29.0	1654634259	10.431958	I’m currently a bit overweight, like maybe 10-15lbs. This is because I have some combination of bandwidth-consuming and focus-consuming things going on that results in me not doing an obviously correc...		benreesman
31736162	12.068955	-7.515445	comment	6.0	22.0	1655195162	11.780697	Tangent: I find the choice of keywords val vs. var in Kotlin a bit unfortunate. The way we read text (or rather skim) is a lot of the times by the shapes of entire words. Val and var are a bit too similar in this regard and I think let vs. var in other languages is much nicer.		mojuba
31752115	12.160218	-7.5156627	comment	6.0	34.5	1655296918	-10.646625	If this were really true though, then wouldn't F# be bigger than it is?		StevePerkins
25463247	11.806013	-7.3272204	comment	6.0	19.0	1608259717	-8.958716	I've been doing this for long enough to know that if you think static typing will save us from the complexity of large organically grown code bases you'll be sorely mistaken.The code and system design...		Guthur
25477380	12.127763	-7.513075	comment	6.0	18.0	1608385804	-10.600977	I get he’s saying it has its place as a learning tool, but this is one reason I haven’t looked to seriously at some languages. For example, F# is a “functional language”, but as best I can tell I can ...		shireboy
25498465	11.941332	-7.244998	comment	6.0	23.0	1608579085	7.776017	"People are godamn hopeless.I just saw a guy trying to argue that writing functional-style Java is the ""new"" way to write Java, and that not using functional interfaces means you're writing ""old"" style code."		burade
25514483	11.656661	-7.4119763	comment	6.0	20.0	1608698807	-7.651862	Reading through the Design Principles [1]:> Separate pure and impure codeSo IIUC, the effect system [2] means impurity is contagious. This seems reasonable to me, though I wonder what that means in pr...		tw25513397
25528557	11.63418	-7.16234	story	6.0	108.0	1608825258	-8.946094	In CPython, types implemented in C are part of the type tree	https://utcc.utoronto.ca/~cks/space/blog/python/CPythonCTypesHaveTree	todsacerdoti
25534248	11.676745	-7.4637136	comment	6.0	17.5	1608871258	10.34906	> What languages exist that are hard to write bad code in?A language with a good type system (ex. Haskell, OCaml, Rust etc.) makes it hard to write bad code, because it eliminates a large class of pot...		neilparikh
25562237	12.022086	-7.7538724	comment	6.0	31.0	1609183070	10.374406	Isn't the best course of action to rewrite popular components in Haskell, and show that its better? I'm thinking httpd/nginx/jetty, redis/memcached, postgres, and so on. You could even make a text edi...		javajosh
25610367	12.148411	-7.5097623	comment	6.0	21.0	1609561455	-10.634512	I really like F# but am concerned there might be some kind of gotcha with using it in a commercial project.  Like somehow Microsoft might decide to require payment for .NET or something.		ilaksh
25611076	11.926449	-7.7370286	comment	6.0	18.5	1609572452	10.345254	Yeah; but thats all so incremental. Better compiler error messages? Really? That makes the top 10 list from 25 years of work?Async/await matters. But compared to inventions like threading, filesystems...		josephg
25640376	12.013521	-7.7450376	comment	6.0	18.0	1609806886	10.403592	I would love to learn more haskell, what resources can I use to get started as a beginner		mraza007
25654183	12.240388	-7.631455	comment	6.0	17.5	1609901193	11.945584	Why did they adopt Scala in the first place? I remember around 2012-2014 it was the hawtness. My guess is that there are languages that give you much of the power of Scala without the complexity - Kotlin, and modern Java, having caught up.		ralphc
25686040	11.993304	-7.691587	story	6.0	28.0	1610122010	10.389876	Ask HN: Best IRC Channels in 2021?		da_big_ghey
25699736	11.996677	-7.7518287	comment	6.0	19.5	1610194577	10.410284	> programming languages are meant to ease the task of creating computer programs as opposed to writing assembly by handThis! The haskell ecosystem is missing a certain kind of pragmatism. There's a lo...		_query
25699842	12.011224	-7.765955	comment	6.0	17.5	1610195598	-1.1378132	You either think the astronomical number of bugs in delivered software is a problem or you don't (and good luck with that). The use of Haskell is a huge win on this metric and demonstrably so. You don...		harry8
25704994	12.001199	-7.7613497	comment	6.0	24.0	1610227902	10.419243	Truly inspiring. I am in my late forties, and I was wondering if I have enough time to learn Haskell, now I have no reason not to.		submeta
25750812	11.670238	-7.6904497	comment	6.0	17.0	1610474955	10.116343	How many different proposals for generics have there been?		azhenley
25751389	11.66078	-7.457677	comment	6.0	17.0	1610476876	9.968271	Can you give a real world example that couldn't be solved with interfaces?The only real cases I can see is creating new data structures, (for instance if you wanted to create your own map type).		lkramer
25754311	12.3528385	-7.350399	story	6.0	78.0	1610488048	6.9747715	The Smalltalk Zoo	https://smalltalkzoo.thechm.org/	gjvc
25762218	11.658631	-7.4783745	story	6.0	57.0	1610547620	10.047782	Proposal for C23: Improve type generic programming [pdf]	http://www.open-std.org/jtc1/sc22/wg14/www/docs/n2638.pdf	HexDecOctBin
25780607	12.2817135	-7.060925	comment	6.0	18.0	1610650835	13.158462	I'm going to butcher my question so my apologies, I've heard Perl described as a sort of linguist / grammatical type of language, where you can solve the same problem using multiple approaches and syn...		giancarlostoro
25863245	11.657277	-7.1148744	comment	6.0	24.5	1611258443	9.217781	Yeah, Python would really benefit from multi-line anonymous functions.There was a limitation in Python where spacing and indentation gets ignored between parentheses, which makes it impossible to pass...		heavyset_go
25934356	11.818818	-7.309131	comment	6.0	20.5	1611783581	9.458718	> In general, object orientation is a reasonably elegant way of binding together a compound data type and functions that operate on that data type. Let us accept this at least, and be happy to use it ...		Ankintol
26019410	11.655662	-7.9365973	comment	6.0	19.5	1612387900	10.238397	It remains a selling point, and a concern for some Go developers. There's a lot of cognitive overhead in pervasively-parameterized codebases, and many developers would rather spend their cycles thinki...		tptacek
26032732	12.136478	-7.425502	comment	6.0	19.5	1612495542	-10.51891	"I wished they made the ecosystem as easy as Go to install on Linux. Last time I ""tried"" to get into F# (The lang looks really good). I was lost between mono and .net and the other 1000000 gazillion li..."		rawoke083600
26045806	11.911912	-7.133904	comment	6.0	18.5	1612610214	-7.8705626	"I'm a bit uncomfortable with the overtly broad use of the term ""callback"" in the article ... most examples aren't callbacks per se, just higher order functions expecting function expressions as inputs..."		tpoacher
26078236	11.9921	-7.752821	comment	6.0	16.5	1612882912	10.446476	I’ve been meaning to learn Haskell. I appreciate this post for being honest that there are warts and that there’s a body of “community” knowledge about “the right” and “the wrong” way to do Haskell that might not be immediately evident.Anyway, a good read, even for an outsider to the ecosystem.		IggleSniggle
26260722	11.876413	-7.6177325	comment	6.0	30.5	1614239867	-8.041009	Being able to build good representations of things is important. So many programming languages lack something as basic as sum types, which puts them behind the state of the art in the 1970s. Yes, Hask...		lmm
26285804	12.132497	-7.202201	comment	6.0	24.5	1614442994	8.474667	All this hype around ECS started when Minecraft, Factorio and They Are Billions proved that the paradigm works, though that is just a small percentage of games that can benefit from ECS. The rest shou...		johnnycerberus
26315064	11.821902	-7.2790327	comment	6.0	23.0	1614691789	-8.9416	For me, I can handle the lack of static typing when I'm doing small scripts, like if it's going to be 100 lines or so of Python (my go-to language if I need to test some math out in a sandbox or do so...		cableshaft
26315201	11.667007	-7.277524	comment	6.0	16.5	1614692614	-8.848536	I guess static first is a chore because at that point you have no idea what invariant or structure is required for the task. After prototyping you know where to tighten the bolts.		agumonkey
26434913	11.988976	-7.450196	story	6.0	7.0	1615551117	7.097875	Ask HN: Data-Oriented programming vs. Functional programming		viebel
26446803	11.902986	-7.360724	comment	6.0	17.0	1615646128	7.06623	Contrary to popular belief, OO is not primarily about inheritance. That’s one of its distinct features. But experienced software engineers tend to prefer composition over inheritance. OO is about encapsulation and about putting conventionally functions close to the data it operates on.		Hermel
26448795	11.952053	-7.371298	comment	6.0	18.5	1615660861	6.9473543	"Kay was a visionary, but not every vision of his was the final word on reality.  It's possible that the ""mainstream"" version of OO is better than Kay's."		AnimalMuppet
26450825	12.104794	-7.5620966	story	6.0	14.0	1615675429	10.424495	Ask HN: How to learn useful functional programming?		weakfish
26454040	12.246605	-7.5663085	story	6.0	100.0	1615716389	-11.404873	Kotlin Compiler Crash Course	https://github.com/ahinchman1/Kotlin-Compiler-Crash-Course	prof18
26471860	11.686799	-7.3998046	comment	6.0	26.5	1615858644	-8.799874	To me the main takeaway of results like this is: you're already paying the full price of using whatever complicated type system feature you care to name. So I have limited sympathy for people who are ...		lmm
35536176	11.704134	-7.8503222	comment	6.0	75.0	1681284821	10.166011	My experience in small companies told me that younger generation didn’t choose Go because Go is objectively better than Java, but because they actively hate Java for it being out of fashion.		hintymad
35536369	11.704752	-7.8252187	comment	6.0	23.0	1681286645	10.181214	I started with Java and I will most likely never go back. I mainly use Go now.People want to learn/write Go. It's hard to find anyone that wants to learn/write Java. People probably prefer Kotlin over...		impulser_
35561090	11.782212	-7.3263044	comment	6.0	40.0	1681414923	-8.849919	>Also, some of us are as anti-typing as you are pro-typing.Assuming ample experience with both, how does one reach this conclusion?I have yet to see a project of any size that needs to be worked on by multiple teams and is written in an untyped language not descend into dumpster fire.		RhodesianHunter
35638528	11.836673	-7.0765314	comment	6.0	18.5	1681990325	-10.554115	I've never seen a production FSM that I liked. Although admittedly they're better than many ad-hoc alternatives.My problems with them being that they cram together pieces of information that could be ...		vemv
35651465	11.768204	-7.066699	story	6.0	11.0	1682069254	-8.996699	I found a one-digit typo in the docs for Python's typing_extensions (2022)	https://twitter.com/PredragGruevski/status/1478782576726884366	sc90
35694398	11.619156	-7.9081535	comment	6.0	15.5	1682377145	10.208578	Things I love about it:- gofmt. The fact that it comes with an opinionated formatter means I don't waste time with bikeshedding.- Simplicity. I love how Go just gets out of my way and lets me do my wo...		tail_exchange
35700603	12.121007	-7.5896683	comment	6.0	22.5	1682431269	-10.678522	I think you should give F# a shot instead.1. No standard and easy way of implementing interfacesNo problem in F#, you have interfaces, abstract classed, ...2. Bad standard libraryIn F# you have access...		JaggerJo
35732835	11.792971	-7.0679502	comment	6.0	26.5	1682621344	7.3764043	Rich Hickey has a great talk about how Objects are data structures with unique interfaces that are unnecessary complexity. He showed and example of a web server with a web request object with request ...		gleenn
35756642	11.8945675	-7.282207	comment	6.0	25.0	1682798799	7.0875645	This just reinforces my bias that OOP is what is really harmful. Really, what good reason is there to have data and behavior bound to the same object? I’ve never seen a good argument for that. It’s ju...		dimal
35802701	11.987413	-7.7361703	comment	6.0	16.5	1683123532	10.410334	Should probably look into Haskell. Have absolutely no clue what's it best suited for?		tildeheimat
35803856	12.368248	-7.6726413	comment	6.0	16.0	1683129069	-11.021245	No Clojure.  No Julia.  No Haskell.  No Racket.  No Scheme. No Common Lisp.  No OCaml. And, as much as I despise Microsoft, No C#.  No F#.  No Swift.  No Objective-C. No Perl. No Datalog. A glaringly lacking choice of languages.		waffletower
35835684	11.747874	-7.3471847	comment	6.0	19.5	1683324384	-8.896522	My experience is that you can have powerful runtime metaprogramming, or you can have good static type checking, but you can't have both.In most of the larger programs I've worked in the value of stati...		munificent
35960076	12.248169	-7.524581	comment	6.0	36.0	1684234806	-11.40585	Does anybody know where I can find a good, substantiated, critique of the common Java coding patterns, including on Android? This niche is such a huge mess that simply documenting all the bad things i...		klibertp
36033889	11.618511	-7.9341445	story	6.0	24.0	1684774778	10.162237	Go+ is a successor to Golang, optimised for data science	https://goplus.org/	gus_leonel
36133775	11.774679	-7.3868175	comment	6.0	26.0	1685499906	-6.60099	Progamming language evangelism is basically a zero-sum game.Some languages don't really intrude on one another's territory — e.g. not that many people are rewriting Ruby programs in Rust — but some ve...		muglug
36154730	11.668189	-7.2011533	comment	6.0	19.5	1685641663	1.8221893	"For me, I think the problem is that normal, boring, stupid, unsophisticated, plebian imperative programming lives in a world of O(1) operations. That is to say, a ""normal"" line of code you type will b..."		jerf
36290633	12.330761	-7.025411	comment	6.0	17.0	1686562078	13.180787	Friends don’t let friends use Perl.		andrewstuart
36294118	11.992801	-7.5441008	comment	6.0	16.0	1686580302	-4.302833	"What's with the sudden influx of ""smol"" things? Is this related to ""smol"" ML / ""smol"" AI models, and/or the HN user that (IIRC) is associated with them and likes to use the word ""smol"" in their comments?"		TeMPOraL
36314013	11.993699	-7.5007234	comment	6.0	37.5	1686679049	7.227566	"From a practical perspective, one should probably learn procedural/OOP first, it's the de-facto industry standard, and thus better for one's early career. Whether functional is ""better"" in the longer term, I won't get into here, only to say I have skepticism."		tabtab
36386231	11.611919	-7.932897	comment	6.0	15.5	1687137616	10.214947	"are one-character variables common in Go? every time that i think ""maybe i should pick up Go,"" and then i see the syntax... it gives me pause. seems really ugly!"		floydnoel
36389174	11.928539	-7.2843366	comment	6.0	16.0	1687168207	9.209001	This looks very useful, as it's already useful in other languages.I found the syntax a bit confusing though. `await` comes before a promise, except in this case. I wonder what the reasoning behind the syntax was.		iansinnott
36393059	11.833169	-7.25788	comment	6.0	19.5	1687192535	9.152872	The verbosity comes because they are demonstrating both how to write the library code to support the feature, and how to consume it. But in reality a lot of the time someone else will have written the...		ajanuary
36468383	11.824892	-7.3591166	story	6.0	50.0	1687702607	7.240412	Principles of Imperative Computation	https://www.cs.cmu.edu/~15122/about.shtml	ggr2342
36470739	11.792033	-7.297419	story	6.0	71.0	1687714612	-5.9387417	Immutable Data (2015)	https://kevinmahoney.co.uk/articles/immutable-data/	akbarnama
36476472	11.652045	-7.976454	comment	6.0	17.5	1687761652	10.236535	While I agree that corporate support plays a huge role with market share and acceptance, I disagree that Go would have been laughed out of the room.  Very likely that a language made by Griesemer, Pik...		Tozen
36493562	11.642523	-7.8758893	story	6.0	69.0	1687876944	10.202019	Zygomys: Embedded Scripting Language for Go	https://github.com/glycerine/zygomys	ingve
36513283	11.599942	-7.856095	comment	6.0	23.0	1687989906	10.18847	A couple of suggestions:Lock down the prefix string now before it’s too late and document it. I see in Go that it’s lowercase ascii, which seems fine except for compound types (like “article-comment”)...		klabb3
28723680	12.008057	-7.7976685	story	6.0	107.0	1633124422	10.4373	Monads and Macros	https://www.johndcook.com/blog/2021/09/26/monads-and-macros/	ColinWright
28794343	11.968988	-7.7108655	comment	6.0	20.0	1633654698	10.4124565	Just 2 0 0 0 lines?!?  That's really saying something.  I wish it was available on macOS.OT: I've falling back in love with Haskell after reading Ben Lynn's astonishing adventures (https://crypto.stanford.edu/~blynn/compiler/) and it's still super awesome for explorative programming.		FullyFunctional
28838559	11.670355	-7.437082	comment	6.0	17.0	1634038963	10.033787	Is there ever a reason to use interface over type? From what I’ve seen it looks like they can both do the same thing but with slight differences in syntax		charesjrdan
28843414	12.0279665	-7.806823	comment	6.0	17.5	1634064083	10.40016	I know dozens of people who tried understanding Promises and all of them succeeded.I know dozens of people who tried to understand monads (including myself) and maybe 3 of them succeeded (I do not consider myself one of them).		underdeserver
28853865	11.919891	-7.417391	comment	6.0	18.0	1634140795	7.232856	Maybe I'm just too pedantic, but this is not a functional language.  Yes, you can write functional style code, but you can write functional style code in C, C++, Java, Python, JS, Ruby, Common Lisp, Scheme, etc etc.  That does not make any of these languages 'functional'.		ltbarcly3
28863480	12.133915	-7.4697375	comment	6.0	28.5	1634215406	-10.379644	The biggest for me is needing to understand the .NET ecosystem without knowing C#. Then there's the lack of beginner information. I own several F# books and none of them assume you're coming from a sc...		7thaccount
28863622	12.134799	-7.5191317	comment	6.0	17.0	1634216240	-10.626375	What does F# do that other languages don’t? What it’s unique benefit?		mickjagger
28902141	11.652454	-7.9744267	story	6.0	42.0	1634530061	10.189607	The Go+ language for engineering, STEM education, and data science	https://github.com/goplus/gop	xushiweizh
28908012	12.3288765	-7.1823792	comment	6.0	19.0	1634577787	12.306995	I have to agree, I've done over 5 years of C# and then went to ruby and never looked back. Static type checking raises the floor on incompetence, but also lowers the ceiling on excellence. I have to a...		jfabre
28919666	11.826572	-7.0168843	comment	6.0	25.5	1634659407	-9.256724	As someone who will be pulling their hair for the first few years it will have to be transpiled into obfuscated spaghetti code (and will be debugging/understanding it): Why do we need an operator just...		zodiakzz
28981538	12.180739	-7.5134335	comment	6.0	23.0	1635107101	-11.350954	Being verbose is a plus. I really really really hate the terseness of Kotlin and how it's basically unreadable without an IDE.Languages should be dumb. Standard libraries should be smart. Not the othe...		grishka
29022422	11.647333	-7.891678	comment	6.0	16.0	1635395731	10.200099	> Because we will not know what the best practices are for using generics,Well, you could... take a look at languages created these past twenty years that support generics, learn lessons from that, an...		hota_mazi
29078533	11.646313	-7.9548893	story	6.0	14.0	1635842142	10.2249365	Are design patterns relevant with Golang?		itistricky
29133738	12.123178	-7.5144877	comment	6.0	19.5	1636232238	-10.604856	F# is a pretty cool language. What do you think about coding in it compared to other languages? (And what other?) Would love to hear some comparisons.		peheje
29152811	11.700708	-7.0296535	comment	6.0	20.5	1636397731	-9.061946	"Oh wow. I do not like that ""global using"". It harkens to the auto-loading issues I've had with Rails. ""Where was this defined? I dunno! It probably works here, though!!1""I generally don't like a rando..."		t-writescode
29178362	11.645509	-7.8904467	comment	6.0	22.0	1636568989	10.248696	"I cant believe they are moving forward with ""generics"". Programmers on average already tend to make things more complicated than they should be. Now every single module in the ecosystem is gonna use m..."		quadcore
29179458	11.693456	-7.9012885	comment	6.0	21.5	1636572974	10.1543045	If you think there's some virtue in writing verbose and inexpressive imperative code, what does Go provide in that department that you couldn't have got from Java 1.44?		leoc
29187682	12.020507	-7.754796	comment	6.0	16.5	1636637960	10.422548	"I tried Haskell a decade ago and gave up pretty quick due to some of the stereotypical reasons.I really like this test file the author linked to for a great example of what ""real"" haskell can look lik..."		leetrout
29201589	12.387292	-7.104379	comment	6.0	18.0	1636736379	12.3493	"This is not idiomatic ruby, you would do    class Stuff
      attr_reader :list

      def initialize
        @list = [1, 2, 3, 4]
      end
    end

Then:    Stuff.new.list.each { |item| ... }
    St..."		dorianmariefr
29229606	11.619402	-7.4249644	comment	6.0	16.0	1636995848	9.931317	"What's the ""Java way"" of accomplishing something like you'd represent with Union or Intersection types?"		ubercore
29295535	11.843817	-7.2244916	story	6.0	69.0	1637493636	-8.992301	Static Duck Typing in Python with Protocols	https://www.daan.fyi/writings/python-protocols	EntICOnc
29313350	11.971265	-7.7222195	story	6.0	80.0	1637628083	10.424129	Show HN: Retrocomputing with Clash: Haskell for FPGA Hardware Design	https://unsafeperform.io/retroclash/	gergoerdi
29344598	11.605973	-7.9244094	comment	6.0	22.0	1637871268	10.1854725	How do you develop for it though? Do you install it locally as well? Or do you only do interpreted languages and/or Java? I suppose Go would work across distros also (because it doesn't use libc), but that's all I can think of.		m0zg
29350311	11.991757	-7.726477	story	6.0	87.0	1637935898	10.382467	WWWBrowser – a Haskell web browser (2019)	https://cth.altocumulus.org/~hallgren/wwwbrowser.html	chpatrick
29422498	11.594519	-7.8511143	comment	6.0	15.0	1638478868	10.104682	"    ""This concurrency model may also be seen as a generalization of Unix named pipes where processes and pipes correspond to coroutines and channels.""

This is in keeping with tcl, bash, and glue lang..."		monetus
29445483	11.6969385	-7.1891756	comment	6.0	20.0	1638662607	6.790055	That’s a failure of Java’s language design, not a failure of the functional/declarative paradigm.Your for loop can do all kinds of damage to the list, and you have to read it all to find out what it d...		filoeleven
29452424	11.692429	-7.2541394	story	6.0	174.0	1638733819	-5.841494	How to make any immutable data structure distributed	https://www.unison-lang.org/articles/distributed-datasets/core-idea/	pierremenard
29483335	11.745758	-7.3237815	comment	6.0	15.5	1638961253	-8.936695	Now I’m curious how a game engine can handle the performance penalty of using a dynamic typed language		charlieyu1
29495916	11.806169	-7.083996	story	6.0	59.0	1639046488	-9.054645	The Data Classes Decorator	https://docs.python.org/3/library/dataclasses.html	nothrowaways
29532917	11.71824	-7.3366942	story	6.0	60.0	1639338350	7.1414366	One Reason Typeclasses Are Useful	https://coalton-lang.github.io/20211212-typeclasses/	reikonomusha
29534715	11.783228	-7.2099757	comment	6.0	17.5	1639351064	-4.8513417	"I (happily) write a lot of OOP code, ""inheritance is bad, use composition"" is such a trite and unhelpful dogma that gets in the way of any actual discussion about where inheritance is useful.IMO, the ..."		nauticacom
29558192	11.61992	-7.9103994	comment	6.0	87.0	1639517667	10.187574	"This is fantastic. It'll make Go feel much less weird. eg from the diff:  []interface{}{1, 2.0, ""hi""} -> []any{1, 2.0, ""hi""}

Now that Go is going to have generics, all we need is sugar syntax for ear..."		kbd
29576439	12.122529	-7.507305	comment	6.0	17.0	1639645773	-10.57669	Real world use cases of F# which aren't pet projects and the empty set are equivalent.		unbanned
29605342	12.215154	-7.2744536	comment	6.0	34.5	1639842734	1.0196264	"Snippets like this:    account deposit: 100 dollars.

are why I love Smalltalk (and its followers, e.g. Ruby). So much expressiveness, reading like a sentence. And Smalltalk even had the ingenuity to ..."		nauticacom
29630572	11.837175	-7.6905427	comment	6.0	30.5	1640035894	10.287482	Very impressive.> SectorLISP uses what we call an ABC garbage collector and it took only 40 bytes of assembly.> [...]> Fast immediate garbage collection with zero memory overhead and perfect heap defr...		MaxBarraclough
29651439	11.631585	-7.925906	comment	6.0	22.0	1640190525	10.166247	I recently saw a go generic data structures library in the wild: https://github.com/zyedidia/generic.Anyone have any more? I'm curious what people come up with for goroutines/channels.		parhamn
29653815	11.641652	-7.945099	comment	6.0	24.0	1640200892	10.156412	Go 1.18 also includes the new net/netip package which is huge, now the Addr type holds less memory, it is comparable and immutable.There is also a great post(See: https://tailscale.com/blog/netaddr-ne...		yagizdegirmenci
29677435	11.820831	-7.052768	comment	6.0	22.0	1640377836	-9.00812	"see also ""dataclasses"" since python 3.7"		gjvc
34134086	11.610965	-7.3048444	comment	6.0	17.5	1672023545	-7.46072	"Out of curiosity, what languages have type systems that can accomplish the ""typed pipe"" described in the article? There are plenty where you can specify a fixed number of arguments like (A -> B, B -> C), but how do you do that in a variadic context?"		bhaney
34189066	11.639396	-7.979424	comment	6.0	19.5	1672429207	10.229537	Little bit of a nit on the title if the author is reading this. Go is called Go, not Golang.https://go.dev/doc/faq#go_or_golang		firloop
34206490	11.823903	-7.264502	comment	6.0	15.0	1672583320	9.0642605	"Async/await with futures/tasks/promises is really useful. Having async build in a language simplifies code and reduces boilerplate. Of course it introduces function ""colors"" as some say, but that's a ..."		kmac_
34244096	12.317886	-7.090625	comment	6.0	20.0	1672828722	12.360572	Personally I think the Python syntax make its more explicit which is an in-place sort vs returning a sorted copy. And also what's a method call vs an attribute access.Someone new to Ruby will be WTF is the ! for?		samwillis
34245043	11.834279	-7.572139	story	6.0	92.0	1672837438	-5.5314584	Parallel streaming in Haskell: Part 1 – Fast, efficient, and fun	https://www.channable.com/tech/parallel-streaming-in-haskell-part-1-fast-efficient-fun	rkrzr
34261209	12.251449	-7.549129	story	6.0	13.0	1672933200	-11.328987	Ask HN: Best way to share client code in 2023		jamil7
34270601	11.944716	-7.455498	comment	6.0	16.0	1672975720	-10.60007	Strongly-typed units and unit literals (e.g. 3mL, 10gal, 15m / 3s = 5m/s)AFAIK F# has these and that's about it		armchairhacker
34393445	12.060222	-7.1520915	comment	6.0	41.5	1673817052	-13.929078	I don't agree on the fact that lombok has brought us out of the dark ages. We used to use it, but it has some drawbacks. One of them, it's an additional dependency. This, for a simple thing such as po...		fedeb95
34409760	11.628402	-7.852375	comment	6.0	26.5	1673937852	10.208917	Go has probably the most extensive stdlib of major languages outside of Python (happy to be corrected on that). You can get a sense for what is available by looking here: https://pkg.go.dev/std. There...		bit_flipper
34545715	12.372622	-7.4819093	comment	6.0	15.5	1674826192	12.863642	I agree up to the last point. You can catch panics at the thread level right? I mean, more generally, what is Erlang implemented in?		ThemalSpan
34556270	11.592518	-7.9560943	comment	6.0	17.0	1674896767	10.210213	Why are programming language designers so bad at naming languages. Pick something that doesn't already have a gazillion search results, people! Go, Swift, Rust, Cyber, all bad. Though I'm still hoping...		larsrc
34581084	11.934816	-7.664816	comment	6.0	20.5	1675093228	10.3802595	I really dislike the $ operator. If you need to change precedence, use parenthesis.Does that mean more typing? Yes. Does it mean better readability? Yes.It's not like you are typing that much code in the first place! The goal of Haskell should not be maximum terseness: it should be elegance.		thomastjeffery
34602158	11.997167	-7.0564423	comment	6.0	23.5	1675199426	2.5826993	"If this study is to be believed.
Citation->
https://cacm.acm.org/magazines/2017/10/221326-a-large-scale-...The 5 programming languages with the least amount of bugs are:    Haskell
    Ada
    Scala
 ..."		weatherlight
34654756	11.717632	-7.467138	comment	6.0	16.5	1675521158	9.966131	Why do VCs write these kinds of generic, life advice columns?		thesausageking
34684325	11.770739	-7.8671184	story	6.0	52.0	1675717600	10.390126	Comparing the Same Project in Rust, Haskell, C++, Python, Scala and OCaml (2019)	https://thume.ca/2019/04/29/comparing-compilers-in-rust-haskell-c-and-python/	bubblehack3r
34689367	11.763292	-7.224903	comment	6.0	27.5	1675750352	-8.868111	It's amusing to see people realizing that type annotations are useful. They are practically the most important and most widely used form of unit testing and documentation. It's like discovering that b...		kajaktum
34768120	11.761227	-7.0317435	comment	6.0	23.5	1676243086	-10.549673	"What is wrong with  [""10"",""10"",""10""].map(parseInt)

?"		lucas_codes
34778343	12.11043	-7.5670533	story	6.0	29.0	1676314585	9.718506	Null Safety: Kotlin vs. Java	https://blog.frankel.ch/null-safety-java-vs-kotlin/	saikatsg
34866074	11.933115	-7.027894	comment	6.0	17.5	1676880035	7.968694	"I thought ""modern Java"" means classless ?Why do i need to put some code inside another superficial class here ?"		revskill
34900493	11.823061	-7.228109	comment	6.0	30.0	1677091214	9.049609	> Asynchronous code (e.g. callbacks) is more efficient (letting you do other work while waiting for things) but is also more complicated (manually saving and restoring state).This is a persistent misu...		jmull
34958282	11.932554	-7.224037	comment	6.0	16.0	1677515102	-9.017481	Duck Typing always struck me as utterly absurd wishful thinking. Two different types built for the same task will almost certainly not happen to be API compatible.Am I missing something?		jjoonathan
34956674	11.763303	-7.038709	comment	6.0	30.0	1677507670	-8.984781	I get that the author is asserting that untyped Pythong is superior for infrastructure code but I don't understand why the author thinks this.		mikece
35011943	11.772463	-7.32985	comment	6.0	16.0	1677862024	-8.946502	I would love legislation that mandated static typing for large/public companies (or any companies that took federal funding, etc). I think dynamic typing is one of the worst software engineering pract...		winter_blue
35032302	11.944535	-7.4482574	comment	6.0	22.5	1678040092	7.388532	They presented two new languages for functional programming, can we leverage existing popular languages that can do FP just fine for the same goal, e.g. python, javascript, or rust,etc?		synergy20
35060438	12.141235	-7.8760343	story	6.0	118.0	1678219477	-3.1658027	Category Theory ∩ Machine Learning	https://github.com/bgavran/Category_Theory_Machine_Learning	bgavran
35061703	12.119492	-7.8734784	comment	6.0	17.0	1678225534	-3.1745744	category theory is 'native 2-dimensional' math. i.e. category theory explains everything in terms of graphs, where a graph is made from two different sorts of 'entities', nodes and vertices i.e. categ...		donnowhy
35074260	11.860331	-7.1241636	comment	6.0	19.5	1678307021	-10.792969	Reading this is like reading early Renaissance alchemist arguing about how much mercury they need to combine with how much silver to create gold...  This is so far gone I don't even know where to begi...		crabbone
35086214	11.927658	-7.0981812	comment	6.0	22.5	1678393668	8.602707	Pet peeve warning.I'd like to propose a very simple JEP for JDK22: Let me omit the useless {} at the end of a record declaration.I get that records are technically classes and that sometimes, you want...		xg15
35092482	12.323714	-7.0283012	story	6.0	41.0	1678441864	13.183973	The Future of Perl	https://ovid.github.io/articles/the-future-of-perl.html	todsacerdoti
37197661	11.738889	-7.1127	comment	6.0	21.0	1692525304	8.618372	I haven't read the article fully, but can anyone please explain why value types seem so much more complicated in the JVM than DotNet, where they have had it for a long time?		akkad33
37214240	12.025123	-7.8107123	comment	6.0	23.5	1692646369	10.471179	So, strength is the ability to write a monad-related function you can define if you need to, like any other function you might write that had a monad argument. But you can't not in math monads, for re...		hgsgm
37231179	11.7426195	-7.152364	story	6.0	46.0	1692757428	7.0357523	A fungeoid is a typically multi-dimensional language similar to Befunge	https://esolangs.org/wiki/Fungeoid	pyinstallwoes
37247754	12.004385	-7.756137	story	6.0	68.0	1692877987	10.4315405	Haskell researchers discover industry programmer who gives a shit (2010)	http://steve-yegge.blogspot.com/2010/12/haskell-researchers-announce-discovery.html	andrewstuart
37247688	11.971447	-7.744435	comment	6.0	29.0	1692877284	10.431792	Basically, the author's criticism is that the language is too powerful, too expressive, people try very abstract things, tooling is bad and no one cares about the language.There is something sinister ...		Pannoniae
37249259	12.024216	-7.5374026	comment	6.0	16.0	1692887960	7.3191314	I want to seriously invest some time into properly learn a functional language.My goals are simple- write small scripts, solve programming problems in sites like Codewars, Leetcode, Euler Program, etc...		rg111
37306277	11.717914	-7.8655963	comment	6.0	54.0	1693309462	10.175551	Second system syndrome.They did savings by re-implementing their services and attribute those savings to the new tool / programming language.I wonder what the saving would look like if they chose anot...		miroljub
37366592	11.591864	-7.0799336	comment	6.0	17.5	1693699919	-6.7378516	"Depends on the example.
Going off the blurb:> it’s a way of breaking down a complex function into smaller, simpler functions that can be composed together to achieve the same result.And you could almo..."		drekipus
37416487	12.230975	-7.666322	comment	6.0	20.5	1694078098	12.849389	Question: I am considering learning Go or Elixir to develop the backend for a high-frequency financial application. Focused strictly on concurrency and scalability benefits of each, which would be the...		ak_111
37456817	11.909481	-7.6551394	comment	6.0	17.5	1694360045	10.35312	So like partially applied functions in Haskell?		rowbin
37539215	11.858396	-7.3209496	comment	6.0	21.0	1694901920	-1.32042	Please ELI5 what is wrong with inheritance and/or how Java have it wrong. Do we need to go back to a new object oriented undegraduate course? Genuinely asking.		wslh
37576900	11.644174	-7.96079	comment	6.0	24.5	1695158428	10.228923	I'll be the first to admit I know almost nothing about go, but it's surprises me to find we're still inventing languages with bobby traps like this, especially bobby traps that were well known and und...		timrobinson333
24429179	11.80065	-7.0836973	comment	6.0	20.0	1599715937	-10.727753	> If these hundred tasks make heavy use of the CPU, then the sync and async solutions would have similar performance, since the speed at which the CPU runs is fixed, Python's speed of executing code i...		calpaterson
24451419	11.591646	-7.8656135	comment	6.0	16.0	1599906726	10.39464	I don't think Haskell was ever successful other than as an inspiration for parts of other programming languages like Rust.They chose an unfamiliar syntax for no reason (and one that makes it hard to l...		devit
24482471	12.18338	-7.455706	comment	6.0	43.5	1600184277	11.714748	"I'm so happy that we finally have multiline text blocks in Java:  String query = """"""
               SELECT ""EMP_ID"", ""LAST_NAME"" FROM ""EMPLOYEE_TB""
               WHERE ""CITY"" = 'INDIANAPOLIS'
       ..."		kentosi
24483524	11.809122	-7.2968082	comment	6.0	24.5	1600189027	7.7802796	"I've got a few very specific use cases where I'm going to be so glad to have sealed classes[0]. Oddly not mentioned in the release notes, but they're like a final class, except you can say ""These clas..."		mabbo
24488945	11.637781	-7.9631634	comment	6.0	34.5	1600223134	10.183056	I think most of the frustration I have seen comes from people expecting symmetry and uniformity in the vendor/package management solution. This is the same way some looking at an architecture diagram ...		harikb
24490019	11.654506	-7.957429	comment	6.0	25.0	1600236841	10.214151	No, that is not the problem, people are not just holding it wrong.The problem is a mismatch between the Go team's perception of semver usage (or perhaps how they think it should be used) and its real-...		grey-area
24605277	12.330167	-7.641311	story	6.0	189.0	1601197705	12.841342	Caramel: an Erlang back end for OCaml	https://github.com/AbstractMachinesLab/caramel	todsacerdoti
24605215	12.024321	-7.7370214	comment	6.0	18.5	1601196866	10.404974	I once told a JavaScript guru colleague of mine that I was spending my free time dabbling in Haskell. His response was 'lol, why would you do that?'. His point was that spending time learning things t...		jgilias
24606735	11.908303	-7.145447	comment	6.0	17.0	1601215884	-8.888135	Personally, I prefer the type names to be at the start of the line, so I don't need to scan to the end of the line (or guess based on a function name).But I agree, it's a waste to type it all out. So ...		jenscow
24609190	12.075637	-7.8322954	story	6.0	59.0	1601232885	10.401492	Hardcaml: An OCaml library for designing hardware	https://github.com/janestreet/hardcaml	SomaticPirate
24678479	11.802405	-7.3373313	story	6.0	36.0	1601814362	-7.3237596	Show HN: Learning Project: building an imperative language		bergsans
24692183	11.786559	-7.1473193	comment	6.0	56.0	1601932776	-8.985222	One reason was so the type system could be backported. You can install the typing module all the way back to Python 2.7, where list[int] will never work but nothing prohibits typing.List[int].The syst...		duckerude
24697262	11.998541	-7.7551913	comment	6.0	16.5	1601989684	10.427473	This is neat and I love CF workers.But man - Haskell feels really difficult to wrap my mind around.  Could anyone here comment on the learning curve and how it affected productivity for team adoption?  Seems like it's on the more difficult side of things.		FunnyLookinHat
24714998	11.609747	-7.9287734	comment	6.0	22.5	1602123831	10.172035	Sounds to me like a job for a DSL that compiles down to Golang for the final output.  That way, the repeated code only exists in the Golang output and not in the code that humans actually write.		pmiller2
24717061	12.123862	-7.6634827	comment	6.0	18.0	1602145079	-10.641296	I've always been curious about F#. Is it true that the F# compiler can be super slow especially on larger codebases?I always wonder: why use F# when you can use OCaml? OCaml has pretty decent third party libraries...(Yes multicore support in F# would be a good reason but apart from that)		sidkshatriya
24740921	11.786155	-7.3257575	comment	6.0	15.0	1602355240	-6.1498904	Interesting. Can you explain, with a somewhat simple example, how this can be efficiently implemented, or at all? I mean  preserving the appearance of immutability at the source language level, while mutating the original structure under the hood for performance.		vram22
24760958	12.001179	-7.7480707	comment	6.0	18.0	1602547601	10.413997	I was very, very obsessed with Haskell for about 9 months, during which time I attempted to make a very simple web app at least 5 times. I like debugging, but I just flat-out couldn't make it work. Pl...		shallowthought
24883740	11.918782	-7.4356623	comment	6.0	20.0	1603598495	7.204477	It's actually even worse than that. Functional programming is on pretty much all accounts FASTER than imperative programming by design. Imperative programming heavily relies on state mutation and bran...		marta_morena_28
24887839	11.645062	-7.9068446	comment	6.0	25.5	1603645724	10.225636	I find myself reaching for it over other languages when I want to build small servers with a bit of in-memory state or a bit of heavy processing. For little search-engines, Go is perfect. While writin...		piinbinary
24895589	11.677674	-7.103506	comment	6.0	25.0	1603716703	8.389856	I've used Java and C++ in a few low latency applications and I do prefer Java in certain scenarios. The whole ecosystem around Java makes rapid development easier meaning we could make safe changes qu...		troist
24941217	11.9867325	-7.193566	comment	6.0	23.5	1604058344	-9.127924	Is there a web framework / ecosystem built on a statically-typed, non-JVM language that comes close to the feature set of either Django/Rails?After spending too much time chasing down dynamic-typing r...		_huayra_
24964562	11.714802	-7.4244175	comment	6.0	20.5	1604287372	-8.758581	"I've been thinking for a while about something like an ""assertion based type system."" Rather than types being variants of other types, types can be described as other types + restrictions. Functions t..."		identity0
24975330	12.090472	-7.702268	comment	6.0	35.5	1604365918	10.317983	So...I think a decent choice to make here is to switch from OCaml to F#. You'll get almost all of the benefits and most of the drawbacks go away. And for the most part, you can directly translate the ...		darksaints
24975497	12.125189	-7.5086317	comment	6.0	19.5	1604367628	-10.588534	I enjoy f# a lot, but it doesn't necessarily help with all of their problems.One of the biggest problems they mention is with postgres. F# has a postgres problem as well.Your options in f# for postgre...		banashark
24981356	11.937486	-7.5940156	story	6.0	116.0	1604422401	10.351305	Programming R at native speed using Haskell (2015)	https://www.tweag.io/blog/2015-09-08-programming-r-at-native-speed-in-haskell/	behnamoh
24980659	12.127033	-7.4938416	comment	6.0	16.0	1604418315	-10.569908	F# is probably one of the best languages out there. but this again seems misguided, considering F# doesn't get the love from msoft that C# gets. you might as well use C# since it's slowing becoming F#.		dzonga
24986495	11.90695	-7.815155	comment	6.0	46.0	1604465337	10.341058	Apparently, the author of this blog post had a change of heart:https://memo.barrucadu.co.uk/blub-crisis.html> I have realised in recent conversations about programming languages, and in reflection of ...		kjksf
24986707	12.248709	-7.6174445	comment	6.0	24.5	1604469954	11.919479	Scala 3 is a huge change. As someone who used Scala for years, but always wondered whether they can retain their users with competition from Kotlin, I'm extremely curious what this will mean for Scala...		rethab
24998591	11.675502	-7.888348	comment	6.0	22.5	1604586987	-10.500519	I recently switched from IntelliJ IDEA Ultimate to VS Code for Go development (side project), because I don't want to pay for it, when I'm no longer a student. With Golang VS Code works great after ge...		jlelse
25031870	12.170098	-7.6233	story	6.0	91.0	1604902085	11.937087	Explicit term inference with Scala 3	https://www.scala-lang.org/2020/11/06/explicit-term-inference-in-scala-3.html	walkingolof
25048461	11.66091	-7.9218283	comment	6.0	17.5	1605029189	10.152785	I have really been enjoying Go, except for the built-in templating library. It's a wart on the standard library IMO.The template declaration and invocation hierarchy seems unnecessarily complex and is...		skrtskrt
25049655	11.766763	-7.163541	comment	6.0	22.5	1605034373	9.174265	> Why would we want that to be synchronous?Authentication is blocked by accessing storage. You cannot proceed until the storage read operation is completed. There is no parallel work to be accomplishe...		jniedrauer
25060321	11.649618	-7.9732246	story	6.0	57.0	1605115121	6.0200067	Self hosted uptime robot alternative written in go	https://github.com/TwinProduction/gatus/actions	laptop-man
25103811	11.811848	-7.1828823	comment	6.0	19.0	1605467511	8.706774	> The largest benefit of properties is replacing field use, which has a massive amount of drawbacks, with methods instead.Could someone please flesh this out for me? I've always found getters and sett...		timClicks
25108548	12.081345	-7.8144164	comment	6.0	19.0	1605506090	10.41623	Actual ocaml user here.  User-facing web apps just aren’t a core application target for most people who use Ocaml, and probably won’t ever be.  There are many perfectly good languages out there that a...		fbsvvc123
25148268	12.402479	-7.0345917	comment	6.0	17.0	1605783769	-10.863508	I worked at a place with RuboCop as part of the CI, it was a horrible experience. I spent more time fixing lint errors than actual work, and all it does is make my code less readable.		red2awn
25150177	11.885821	-7.554648	comment	6.0	20.5	1605798075	-8.823196	"Mathematical notation is terrible.I don't mean this in the usual ""we need to invent new symbols to make it clearer"" way.I mean it in the way that it has implicit typing that gets coerced constantly. U..."		konjin
25160720	11.618519	-7.4224515	comment	6.0	27.0	1605882616	4.88825	Looks like inferred return type on the `planets` function on the first page?I'm not a big fan of this. IMHO local inference is great, but it makes things so much better when function signatures are explicit.		skohan
25167468	11.743699	-7.371644	story	6.0	221.0	1605925953	-8.496129	Why is dependent type theory more suitable than set theory for proof assistants?	https://mathoverflow.net/questions/376839/what-makes-dependent-type-theory-more-suitable-than-set-theory-for-proof-assista	pgustafs
25169324	12.483308	-7.5160794	story	6.0	151.0	1605961485	12.85251	Caramel: An OCaml to Erlang Compiler	https://caramel.abstractmachines.dev	signa11
25211503	11.833072	-7.0487165	comment	6.0	25.5	1606324284	8.107017	Verbose does not ‘easier to read’ make; especially when you don’t know whether ‘anythingBut’ means (?!...) or [^...].Type safety is nice, sure, but it’s a rather small benefit in this case. It doesn’t...		pwdisswordfish4
25301449	12.00596	-7.4789944	comment	6.0	32.0	1607084106	9.244892	Since the article goes out of its way to not mention Kotlin, I'll do it for them since this is both lame and more than a bit disingenuous. Arguably, Kotlin co-routines (and the Flow API) provides a ve...		jillesvangurp
25308976	12.17259	-7.3515277	comment	6.0	22.5	1607120266	-10.581467	We're an F#-first company and I'd like to share our experience here.All our new code is in F#, we started off from a C# codebase, so that made the transition somewhat manageable, as new F# code can be...		tejasv
25334115	12.064992	-7.222489	comment	6.0	29.5	1607360933	9.1630745	The default way promises are used is now async/await. `.then()` should not be introduced as anything more than 'you may find this in older codebases'.		nailer
25415531	11.875746	-7.5913167	story	6.0	67.0	1607942637	10.407249	Foo to Bar: Naming Conventions in Haskell	https://kowainik.github.io/posts/naming-conventions	kowainik
25425904	12.242838	-7.637615	comment	6.0	28.0	1607995592	10.3676	"I'm pretty disappointed with the way this has unfolded.For those now familiar with ReScript, ReScript started as ""reason"" an alternative syntax for Ocaml. Recently ReScript was created with a sytnax m..."		bgorman
38598534	12.161663	-7.207201	comment	6.0	17.5	1702281344	8.5256815	I had to look that up. From Wikipedia: Entity component system (ECS) is a software architectural pattern mostly used in video game development for the representation of game world objects. An ECS comp...		adr1an
38598262	12.129143	-7.226256	comment	6.0	37.5	1702277493	8.549544	I think the prevalence of these sorts of issues is why ECS is such an appealing architecture in game design. OOP seems to always devolve. A new feature is needed for the game, the feature breaks some ...		SeanAnderson
38680756	11.708794	-7.771738	comment	6.0	21.5	1702893047	-8.422985	In my experience, this is mostly a JVM issue. When I code in the JVM, I feel like I fight my frameworks and libraries more often than writing actual code. Looking at you in particular, Spring Boot.I h...		debok
38691130	11.729212	-7.3102655	comment	6.0	15.5	1702953471	-8.774026	I dislike C#. Too much ceremony for me. I want type safety without a ton of boilerplate. Is there any compiled language that offers this? Or languages built for the web? Go maybe? Not interested in a whitespace sensitive language though.		replwoacause
38694734	11.657641	-7.965713	comment	6.0	16.0	1702988920	-6.6973705	Can anyone recommend a similar app/site for learning go? That one feels so hard to learn, but it is so fun. the games really feel like a conversation		mptest
38702178	12.083655	-7.0208297	comment	6.0	17.0	1703022661	-10.698478	Nice, the JS standard library is gradually getting functions I take for granted in ClojureScript. :)I noticed this part in the proposal  groupBy calls callbackfn once for each element in items, in asc...		koito17
38713672	11.637888	-7.2930098	comment	6.0	17.0	1703106509	7.013353	Excellent writeup and straight to the point. As the author demonstrated one can get quite a lot of OOP constructs using C primitives.what seems to be impossible to implement (as least to me) was somet...		naitgacem
38728640	11.868839	-7.356113	comment	6.0	28.5	1703201428	7.1374173	>Object oriented programming, polymorphism in particular, is essential to nearly any large, complex software system. Without it, decoupling different system components is difficult. (Update in 2017: I...		andai
38751353	12.48336	-7.039283	comment	6.0	32.5	1703395314	12.379465	Gross. Python is a million times better than ruby to read and write		Falmarri
38820557	12.292075	-7.318946	story	6.0	104.0	1703981441	7.0483403	Cuis-Smalltalk	https://cuis.st/	haolez
38821506	12.278045	-7.3209314	story	6.0	74.0	1703993761	7.101563	Design Principles Behind Smalltalk (1981)	https://www.cs.virginia.edu/~evans/cs655/readings/smalltalk.html	rodrigosetti
38859041	11.658676	-7.9139357	comment	6.0	15.5	1704312041	10.143439	As someone who's got a lot of Java experience but almost no Go experience, I worry that I've been coddled with a humongous standard library for pretty much everything, from collections of every sort t...		CobrastanJorji
38871060	11.7926	-7.3606105	comment	6.0	27.0	1704395885	-8.905387	"    Hype: ""Static Typing reduces bugs.""

    Shower: A review of all the available literature (up to 2014),
    showing that the solid research is inconclusive, while the
    conclusive research had m..."		_greim_
38890722	11.868838	-7.4491267	story	6.0	83.0	1704542324	-10.358242	What the heck is a homomorphic mapped type?	https://andreasimonecosta.dev/posts/what-the-heck-is-a-homomorphic-mapped-type/	kiyanwang
38947406	11.712663	-7.386223	comment	6.0	20.5	1704945719	-8.637738	Are there any other examples of a programming language adding a type system after the fact?		abrookewood
38980141	12.1807995	-7.5405526	comment	6.0	23.5	1705155751	-11.329685	"Unpleasantly verbose, especially compared to Kotlin. They'd have come up with a much better approach if they had to add it to their list of current implementations.    C#           $""{x} plus {y} equa..."		david_allison
38993048	12.26498	-7.294902	comment	6.0	18.5	1705257378	7.0371623	Worth watching even if you skip to the last couple of minutes, where he tests a Game of Life scenario in a way that is not comparable to anything I've seen done with any other programming language.Thi...		harryvederci
32530094	11.8008995	-7.1597476	comment	6.0	17.0	1660981353	-8.886042	I think multiple inheritance will always scare me.  What order do the superclass inits run in?  What happens if they do conflicting things?  What if some superclasses call super().__init__ and others ...		CloudYeller
32558511	11.788494	-7.1456327	comment	6.0	24.0	1661209983	-8.987959	Using type checking in Python is always the wrong thing to do. You need to learn to use Microservices where you split up a large code base into seperate 3k lines Microservice chunks of code that interact over well documented APIs.That's just how effective Python is done.		ReflectedImage
32648912	12.268214	-7.296474	comment	6.0	18.0	1661857935	7.0894437	As someone who learn programming relatively late, the only thing i know about Smalltalk is it highly influenced Python. However, I just checked Wikipedia article about Python [1], it has no mention of...		thrdbndndn
32712445	11.971901	-7.7135673	comment	6.0	21.5	1662295577	10.423399	"Haskell is the ""Periodic Table of Computation"". You really can't advance to ""organic chem"" levels of complexity without first mapping out the elements and their key properties, and then further super-..."		dustingetz
32738555	11.611704	-7.903207	comment	6.0	37.0	1662478480	10.234926	>  Govulncheck analyzes your codebase and only surfaces vulnerabilities that actually affect you, based on which functions in your code are transitively calling vulnerable functions.This is huge! Ever...		psanford
32770459	12.284018	-7.031001	comment	6.0	16.5	1662663985	13.131917	"I don't think it's hate. I think it's more ""why would I choose Perl over Python?"" Perl has a painful syntax, Python greatly improves on this with easy syntax. I don't want to have to relearn the syntax every time I reach for a scripting tool."		michaelwww
32779910	11.665033	-7.3411856	comment	6.0	16.0	1662734860	-8.750857	I wonder if there are type systems that are intentionally Turing-complete rather than accidentally. As in, given that you're likely going to end up with Turing-completeness anyway, why not make type-level programming intuitive and convenient rather than the tarpit it typically is?		Sharlin
32802721	11.937957	-7.409865	comment	6.0	21.5	1662926251	7.067372	A lot of these programming fads seem to come and go over the years. I've witnessed the same cycle with OOP, then FP. What a lot of people don't seem to realise is that by trying to split up a system i...		userbinator
32809274	11.637324	-7.081926	comment	6.0	17.5	1662986633	8.353631	"It's quite a paradox; Java is really fast if you keep allocations down, but Java ""best practices"" often involve tons of object creation.It can also be quite hard to find out if your code will be fast ..."		jeroenhd
32822826	12.249668	-7.6144795	comment	6.0	36.0	1663067787	11.928416	I actually think Scala is in the best position it's ever been.There is a commitment to making the language simpler, easier and cleaner.On the backend, ZIO (https://zio.dev) is the best concurrency lib...		threeseed
32823886	11.678574	-7.291942	comment	6.0	21.5	1663075177	9.118546	Haha, I guess you are right.The reason why it is a mistake is because it is essentially trying to solve the rpc problem once again even though it has been tried many times without success.There just i...		valenterry
32840571	11.925544	-7.4101324	comment	6.0	16.0	1663177188	7.1349916	Enough praise for FP. Now let's go back to real world.Please help tell me what's the best way to replicate what's good in OOP, like how to use FP to solve expression problem ?		revskill
32841528	11.927351	-7.384412	comment	6.0	21.0	1663181344	7.1223984	Show me a GUI framework that follows FP patterns not OOP.		ducktective
32896626	12.037699	-7.7650867	comment	6.0	16.5	1663584542	10.429837	> no industrial successBecause FP is hard, and because it's easier to get 1000 Python monkeys to shit out half-baked garbage than it is to get 10 Haskell developers to agree on a set of blessed langua...		eckza
32896592	12.08542	-7.238906	comment	6.0	40.5	1663584229	10.396014	"The way I see it, is people searching for a better way, after years of trying to actually use Java. And what does Java's chief architect think?""It is my belief that the best direction for evolving Jav..."		grumpyprole
32910833	11.728312	-7.3098598	comment	6.0	21.0	1663677534	9.13457	Virtual threads, real threads, and structured concurrency is quite literally what co-routines are about.From a Kotlin co-routine point of view Loom is about the JVM gaining some low level optimization...		jillesvangurp
32956787	11.694764	-7.544625	comment	6.0	18.0	1663965579	-9.217177	I wish Microsoft would make a language almost exactly like Typescript, but where code has to be strictly typed (no any, unknown, etc.) and it would compile to a normal binary, with some sort of GC, fo...		enlyth
33058878	11.845156	-7.3796763	comment	6.0	17.0	1664735977	-10.112106	I used to be a religious devotee to Lisp, but then I started programming for a living and realized that static type systems (even of the simplest variety) are so helpful for preventing bugs. Unfortuna...		cwzwarich
31774979	11.62463	-7.3265486	comment	6.0	21.0	1655449494	9.227014	Unity (the game engine, not the desktop environment) uses this concept heavily, although they use the slightly older IEnumerator instead of IEnumerable ¹).It usually takes people a while to wrap their...		rednab
31780366	11.809639	-7.4107904	comment	6.0	29.5	1655482466	7.3141217	"I'd really like to find ""the low-level functional language"" without ""the fun stuff"". Or at least it should have simple and boring subset that is usable without ""the fun stuff"".Something like Caml Ligh..."		funny_falcon
31794506	11.779986	-7.306996	comment	6.0	26.5	1655592556	-8.909916	"I've never found static typing to aid in my understanding of a program. For example:    def add_item_to_cart(item)

vs    void add_item_to_cart(IItem item)

They are equally easy to understand. The first is easier to read."		jacobsenscott
31797251	11.667051	-7.329852	story	6.0	76.0	1655625667	-8.829135	Type-ish – A runtime type checker for bash, in bash	https://github.com/Mythra/typeish	mgliwka
31860017	11.865029	-7.3166137	comment	6.0	22.5	1656068344	6.9774184	I actually like to ask people in interviews to model a car and car factory because I want to see right away if they go deep into the nonsense of extending everything, or if they can use composition, o...		bdg
31861450	11.77806	-7.4440384	comment	6.0	24.0	1656077250	10.375543	"yes, that would be a straightforward error message!But I got the error message    Error: This expression has type
         ((locl_ty * Tast.pos * ('ex, 'fb, 'en) Aast.expr_) list ->
          Result_s..."		muglug
31880349	11.8266535	-7.2230787	comment	6.0	20.5	1656208243	-9.046672	Python's strapped on type annotations have been designed around traditional OOP, and it feels like a bad fit for the language. Duck typing is a tremendously powerful form of polymorphism, and none of ...		oivey
31882878	11.632601	-7.9532514	comment	6.0	26.0	1656242016	10.293355	Alternatively don't use monorepos, and take advantage of binary libraries.Naturally there is the caveat that using binary libraries isn't a thing in Go.		pjmlp
31889369	11.647389	-7.416491	comment	6.0	19.0	1656289521	-7.431837	Variadic Generics has the potential to enable all the scientific computing libraries to provide really nice type hints. One step closer to eliminating insidious broadcasting bugs… or running training for 10 hrs only to have a validation loop fail because of a shape mismatch.		beisner
31890826	11.599758	-7.7666736	comment	6.0	19.5	1656307196	10.199323	Just in case you forgot: Contains is a (nearly) standard lib function these days. Go did get generics, which are type safe (unlike some other languages I could mention). Before that, you had to write ...		tgv
31975713	12.008329	-7.7312226	comment	6.0	20.0	1656932324	10.313382	"Pet peeve: The word ""just"" when used to gloss over something with the author don't know how to explain. Using ""just"" shift the burden from the author to the reader, since it signals it is the readers ..."		goto11
32077719	11.798568	-7.300653	comment	6.0	17.5	1657673331	-10.414532	"With immutable objects, aren't you just left with syntactic sugar around structs and functions? I'm picturing CLOS, which is undoubtedly an OO system but lacks 100% of what you use objects for. Are there languages which let you use dot-syntax for ""methods"" which just wrap normal functions?"		ravi-delia
32110541	11.829726	-7.5905285	comment	6.0	25.5	1657905617	10.30519	"Ugh.The basic argument is something like ""all functions should be total"", but the problem is that proving that a function is total is really annoying, so we live with two other consequences instead:1...."		dietrichepp
32120757	12.312197	-7.0827923	comment	6.0	17.0	1657997240	12.351824	Ruby is a beautiful language, but it lost the race against Python long ago. - When I first looked into both some ten years ago, I was undecided what to choose. But even back then googling problems led...		submeta
32166558	11.670356	-7.8653564	comment	6.0	28.0	1658328681	10.158646	It's funny how every Go project seems to statically compile in the same libraries. If just one of them has a serious vuln, we're talking nearly every Go project in the world having to be patched and r...		0xbadcafebee
32176527	12.310781	-7.028808	story	6.0	69.0	1658386233	13.175444	The Perl Journal	https://www.foo.be/docs/tpj/	ekiauhce
32298007	12.473203	-7.7913537	story	6.0	13.0	1659295359	-11.100033	Ask HN: Does an equivalent of Clojure exist for .NET?		rawland
32323258	11.948864	-7.410682	comment	6.0	18.0	1659468885	7.357144	I've been taking a kind of middle ground lately: build functional APIs. Move your side effects as far outward as possible and make your library's interface take everything it needs and return everythi...		orthecreedence
32328011	12.040142	-7.699393	story	6.0	16.0	1659505076	10.389202	Ask HN: Learning Functional Programming in 2022?		low_tech_punk
32330102	11.805562	-7.118645	comment	6.0	20.0	1659524713	9.115254	Or just run 20 workers and let the OS handle async. OSes are pretty good at this. Async is pretty hard to reason about.Async is beneficial when you make multiple blocking (http) request to a resource ...		BozeWolf
32456151	11.965568	-7.7186484	story	6.0	62.0	1660448917	10.394042	Dogelang – A Python with Haskell Syntax (2020)	http://pyos.github.io/dg/	notpushkin
32483248	11.690179	-7.636552	comment	6.0	19.0	1660660396	10.127107	"I don't think the type system particularly matters.  You can make something work without assigning a type like ""int"" to variables.  Python doesn't let you do things like ""foo"" + 3 (while Node is happy..."		jrockway
22091167	11.798109	-7.3449793	comment	6.0	18.0	1579438218	-8.92651	Interesting, I would have said static typing allows more technical debt. Illustrating example: Lets say you pass a double variable from some part of your code through 13 layers of APIs until it is act...		david_draco
22091260	12.478544	-7.0492253	comment	6.0	17.5	1579439609	12.353038	But those are reasons that are valid afterwards. Why weren't the good numerical libraries developed for Ruby?Maybe the watershed moment was when MIT switched from Scheme to Python? I don't know.		Gravityloss
22094986	11.757701	-7.507712	comment	6.0	15.0	1579477346	10.388272	I'm fascinated by Idris, dependent types and the promise of massively expanding compile-time guarantees. The compile times mentioned in the article raise a question that I've wondered about, and would...		heydenberk
22237863	12.065367	-7.575009	comment	6.0	25.5	1580835331	11.913213	These seem extremely similar to Scala's case classes. In my experience, case classes are often the feature that sells people on moving over to Scala from Java (the other being exhaustive pattern matching warnings from the compiler).Fingers crossed Java never implements the `implicit` keyword...		dangerlibrary
22282314	11.888055	-7.3474216	comment	6.0	20.5	1581259408	-6.7725043	"As a teenager I read ""Object Oriented Software Construction"" by Bertrand Meyer, and was convinced that Eiffel was THE programming language of choice.However, that love didn't last long. Too many simpl..."		perlgeek
23380370	12.0690155	-7.8649936	story	7.0	71.0	1591029081	10.446164	Multicore OCaml: May 2020 update	https://discuss.ocaml.org/t/multicore-ocaml-may-2020-update/5898	rbjorklin
23400331	12.114134	-7.058859	comment	7.0	20.0	1591164156	7.372146	One of the things that Allen only barely hints at and I'm not sure Gilads piece really touches on was the shifting economics in Software development. In 1995/96 when Java gut punched the wind out of S...		travisgriggs
23425691	11.597493	-7.9249625	comment	7.0	29.5	1591339085	10.178397	"Sure, if your goal is to build a compiler that outputs the fastest possible code.If your goal is to apply the ""principle of least surprise"" to the generated machine code, then that eliminates or const..."		bitwize
23456077	12.00369	-7.752148	comment	7.0	30.5	1591621094	10.422432	A bit off topic, but is Haskell viable for production? Or is it just really intended as an experiment? Is it worthwhile to jump into Haskell now, or perhaps one should look into Idris or Agda? Any com...		nextos
23466456	11.788723	-7.2815614	comment	7.0	33.0	1591709178	-6.1393833	You're absolutely right. Its one reason I struggle with the modern fashion for immutable classes and FP, they are always making copies of everything, seems crazy.		rb808
23470129	11.70126	-7.854049	comment	7.0	19.0	1591732094	10.217695	Just downloaded the GoLand 30 day trail. First impressions are I now remember how slow and stuck in goo java based IDEs feel.What cool stuff should I look at as I am willing to be sold on this.		cachestash
23498000	11.927778	-7.0391226	comment	7.0	27.0	1591959584	-10.739758	His async code creates a pool with only 10 max connections[1] (the default). Whereas his sync pool[2], with a flask app that has 16 workers, has significantly more database connections.I expect upping...		orf
23565091	11.692646	-7.4521575	comment	7.0	25.5	1592499612	9.963841	I can wholeheartedly recommend Black for Python, gofmt for Go, and terraform fmt for Terraform.What are some other great formatters out there?		philwelch
23627567	11.616838	-7.053141	comment	7.0	22.0	1593005128	7.925103	"So it’s actually a smart switch statement.Seems like it doesn’t create instances when you’re doing  Node(children=[Leaf(value=""(""), Node(), Leaf(value="")"")])

instead:1. Node means ""is instance of Nod..."		mdrachuk
23718278	12.438664	-7.3324933	story	7.0	232.0	1593725413	7.1402316	The BEAM Book (2017)	https://blog.stenmans.org/theBeamBook/	hazbo
23795703	11.943155	-7.658048	comment	7.0	21.5	1594411114	10.406923	How much simpler would OCaml or Standard ML be if there were no type inference? I'm perfectly happy to never use type inference (maybe only for local variables).It feels like people get distracted by ...		eatonphil
23811698	11.596291	-7.8642344	story	7.0	85.0	1594565001	10.037352	Cockroachdb/copyist: Mocking an SQL database in Go tests	https://github.com/cockroachdb/copyist	kiyanwang
23888677	11.6224785	-7.365003	story	7.0	60.0	1595159295	7.14527	Inheritance in C using structure composition	https://arpitbhayani.me/blogs/inheritance-c	arpitbbhayani
23890741	11.780183	-7.2902994	comment	7.0	17.5	1595178730	-6.1708574	Immutable variables are too weird for me.		MrFantastic
23921110	11.751866	-7.3041263	comment	7.0	20.0	1595448919	5.9283752	3) set types, 4) optional schemas 5) multiline strings 6) consistent support for numeric types 7) streaming dataThe litany is not short and I'm sure I've overlooked a couple.		abraxas
23976356	12.069137	-7.850123	story	7.0	244.0	1595947666	10.403131	OCaml: Add support to iOS/Mac ARM64	https://github.com/ocaml/ocaml/pull/9699	wczekalski
23990374	12.4987755	-7.094577	comment	7.0	30.5	1596049194	12.377806	Didn't realize Square was interested in Ruby type checking, just like their competitors over at Stripe. Lots of money riding on Ruby, I guess :)It does seem useful to have a _standard_ for type defini...		avolcano
23991239	12.208975	-7.235502	comment	7.0	37.5	1596054665	-8.800018	"Yeah, it is.I'm having a really hard time understanding this ""I need types forced down my throat"" and ""I like typing 3x as much as I would otherwise need to"" and ""yes, I want half my screen obscured b..."		zeptonix
23991935	12.423017	-7.1213746	comment	7.0	18.0	1596059272	12.347902	As an avid Rubyist I have no interest in introducing types into a dynamic language. I would just rather use C# or Java. I never understood why people are trying to make a round peg fit in a square hole.		lovetocode
23998065	11.999593	-7.753908	comment	7.0	28.5	1596116994	-10.786601	What is it about Haskell that makes it a hot candidate for use in cryptocurrency applications? Can someone here shed some light? Read the article but it mostly seems to be a diatribe against crypto on...		hannofcart
23998577	12.009672	-7.76268	comment	7.0	23.5	1596119359	-10.789331	There are also a lot of traditional finance companies using Haskell[1]. And, historically some of the people who created the language itself and have worked on GHC (and other compilers), or contribute...		anaphor
24031695	11.791526	-7.527998	comment	7.0	26.0	1596401970	10.253977	Is there something similar to (->>) in Haskell?Edit: corrected “—>”.		behnamoh
24056901	11.898831	-7.376821	story	7.0	101.0	1596596879	7.296892	Functional Programming with Bananas, Lenses, Envelopes and Barbed Wire	https://research.utwente.nl/en/publications/functional-programming-with-bananas-lenses-envelopes-and-barbed-w	behnamoh
24106218	11.667582	-7.4292593	comment	7.0	29.5	1597040996	7.169207	""" (...)
- In an OO language, you can add a new case by creating another subclass and implementing the methods. But, if you want to add a new function to a datatype, you have to add it to the superclas..."		mirekrusin
24154750	12.137678	-7.9136033	story	7.0	60.0	1597388968	-3.081807	No New Categories	https://www.gkogan.co/blog/category-creation/?r=1	gk1
24161349	11.881342	-7.0701566	comment	7.0	24.5	1597429047	-10.766546	Wasn't there an article about how the async syntax was benchmarked to actually be slower than the traditional way of using threads? What's the current story on python async?reference: http://calpaterson.com/async-python-is-not-faster.html		leafboi
24166594	11.749308	-7.3843355	story	7.0	109.0	1597473895	-8.850324	Types as axioms, or: playing god with static types	https://lexi-lambda.github.io/blog/2020/08/13/types-as-axioms-or-playing-god-with-static-types/	goranmoomin
24279840	12.1676855	-7.5621524	comment	7.0	23.5	1598424477	9.694814	If you're going to get rid of all your Kotlin std lib usages by explicitly replacing them, after inspecting the actual class files generated by the compiler, with standard Java methods (and hope that ...		brabel
24299852	11.782227	-7.1809783	story	7.0	125.0	1598571046	7.3639092	Hazel: A live functional programming environment featuring typed holes	http://hazel.org/	erwan
24303280	12.101734	-7.86315	story	7.0	162.0	1598610292	10.45276	OCaml Workshop 2020 Online Conference is live now	https://discuss.ocaml.org/t/ocaml-workshop-2020-online-conference-is-live-now/6287/9?u=mseri	mseri
24390472	11.789713	-7.352073	comment	7.0	24.5	1599389592	9.223778	Am I the only one struggling with async/await in _any_ language?I did my fair share of tornado/twisted/zeromq ioloop programming, and even though I completely agree that it gets messy real quick, I al...		Galanwe
24404062	11.613532	-7.932771	comment	7.0	31.0	1599524456	10.394587	So what killed Haskell is the parochialism, the inability to address the needs of the Enterprise.I don’t think so. What killed Haskell in mainstream programming is its weird syntax. Rust looks like C ...		lacker
19975481	11.764112	-7.040392	comment	7.0	23.0	1558475569	-8.999379	> Many Python users rarely create classes. Creating classes isn’t an essential part of Python, though many types of programming require it.Huh. Okay.		Splendor
19978529	11.745804	-7.6179447	comment	7.0	28.0	1558508280	10.172502	Parametric polymorphism is a real world issue. The fact that it wasn't checked off indicates to me that they are of the opinion that it's not as important.It's ok to have this opinion, I just disagree...		crimsonalucard
20110494	11.593241	-7.8924913	comment	7.0	21.0	1559781514	10.29342	> given Go's lack of exceptions, such a feature would be entirely impossible.Haskell is a nice programming language, but ultimately if a program written in language A can run on your computer, a progr...		jrockway
20129828	12.00416	-7.763857	comment	7.0	23.0	1559954362	10.414309	I get mad at the Haskell tools I use every day, and then I remember that nobody else is really in better shape.		Ericson2314
20159618	11.807963	-7.1650805	comment	7.0	24.5	1560287796	-8.982389	Why would you keep Python if you want static typing? I mean, there are several modern, performant (more than Python actually) statically typed languages. Rust, Go, Kotlin, Scala, Swift… All of them ar...		ggregoire
20169944	12.246849	-7.2862844	comment	7.0	27.0	1560377923	12.976996	Can't say I got that feeling at all.Smalltalk is a tight design. So is Lisp. So is Forth. So is APL. C's design just feels like a pile of... stuff. Arrays are almost but not quite the same as pointers...		lmm
20236524	12.31366	-7.1007905	comment	7.0	20.0	1561059440	12.381149	"Awesome work.    sig {params(person: Person).returns(Integer)}
    def name_length(person)

Not sure if I dig the syntax. Furthermore arguments seems to be the official names for method arguments, not..."		hartator
20288289	11.666862	-7.9361506	comment	7.0	18.0	1561577260	10.1741085	> The same people that have claimed for years that Go didn't need generics.Considering all the successful software that's been written in Go, they weren't exactly wrong.		icholy
20321296	11.922252	-7.357549	comment	7.0	17.5	1561937908	7.0693684	Many systems people want to build with computers cannot be easily conceptualised as graphs of largely self-contained objects, interacting through swapping messages. These problems instead revolve arou...		stupidcar
20358672	12.189459	-7.3230486	comment	7.0	32.0	1562283164	12.220812	"In mature OOP you have ways to write nice models and have good validations.
https://guides.rubyonrails.org/active_record_validations.htm...I will argue that the complexity of software development is n..."		Chyzwar
20396612	11.937809	-7.345058	comment	7.0	24.0	1562706552	7.0695	"I'm not a systems designer, so I am somewhat ignorant to make this statement, but this sounds almost like ""nouns-first"" is the right thing, but almost every single one of those people cited in the art..."		noobermin
20449293	11.777173	-7.529917	comment	7.0	19.0	1563279030	7.4672127	I've recently interviewed at a startup that was into functional programming. The coding challenge was: transform a pair of an optional string and optional integer, into a optional pair of string and i...		wrnr
20463803	11.609399	-7.042606	comment	7.0	45.5	1563396295	-10.493178	Walrus operator looks like a great addition, not too much syntax sugar for a common pattern. Why were folks arguing about it?		gclaugus
20468164	11.629164	-7.236662	story	7.0	172.0	1563442739	5.079463	Design Patterns in Dynamic Programming (1996) [pdf]	http://norvig.com/design-patterns/design-patterns.pdf	tosh
20473187	11.900773	-7.0763206	comment	7.0	25.0	1563478449	-9.483058	"Key takeaway point: ""Dynamic Languages have fewer language limitations, less need for bookkeeping objects and classes, less need to get around class-restricted design. Study of the Design Patterns boo..."		wwweston
20512686	11.796934	-7.2331805	comment	7.0	21.5	1563947854	-8.93207	I might cause a flame here, but I feel like academics and people who give conference talks have adopted stricter typed languages. Actual developers instead embraced from the get-go rather dynamic lang...		noobermin
20567891	11.591786	-7.9459963	comment	7.0	35.0	1564512397	10.211126	I’m not a C++ dev. I took one class of it in college and even then it was 90% C and only hit pointers and classes on the final unit.But holy smokes this is not your grandmother’s C++, is it just me or...		gigatexal
20578064	11.653947	-7.930381	comment	7.0	54.0	1564604369	10.220679	Maybe this is unfair, but it’d be great if the Go devs could just say “generics will work similarly to [C# / Java / Swift / D / whatever], except that we’ll address [problems] with [adjustments]”.Rath...		iainmerrick
20676045	12.017466	-7.7935753	comment	7.0	30.5	1565622320	10.410117	"I think monads highlight something underappreciated about programming, which is that different people regard very different things as ""intuitive"". It almost seems that modalities of thinking about pro..."		pjc50
20698246	11.744478	-7.281093	comment	7.0	31.5	1565805973	-9.681563	"If it was a realization of a lambda calculus, then it is one with (a) primitives, (b) strict evaluation, (c) quoted lambda terms, and (d) ""dynamic"" bindings.(a) In classic lambda calculus, everything ..."		kmill
20788855	11.807556	-7.366999	story	7.0	161.0	1566671656	-10.032481	Static Type Checking in Common Lisp	https://medium.com/@MartinCracauer/static-type-checking-in-the-programmable-programming-language-lisp-79bb79eb068a	mr_tyzic
20829382	12.345154	-7.0521593	comment	7.0	26.0	1567086084	13.199586	"I don't get all this ""Perl 6 is a different language"" nonsense. It was created by Larry Wall and retains all the characteristics of Perl 5 whilst adding a lot of great stuff from other languages. Sadly, performance prevents it being taken seriously in production."		cutler
20829766	12.1672125	-7.0244083	comment	7.0	22.5	1567088762	-8.31912	"> But why do people talk about ParrotVM and Rakudo as if they're different things? Java has a compiler and a VM, they're called ""javac"" and ""jvm.""Bad example: Java actually has many VMs available for ..."		dragontamer
20876673	12.279056	-7.618214	comment	7.0	34.5	1567601507	10.387609	I wish this comparison included more information about the developer experience of TS vs Reason. In my off time I've tried out Reason, but one of the major sticking points was how _poor_ the experienc...		jameskraus
25472150	11.805005	-7.2502975	comment	7.0	20.5	1608326212	5.331299	"I'm not sure I agree with the author of this book that that counts as an example of ""The Strategy Pattern"" (vs. simply ""passing a function as a parameter"").Is having parameters at all ""The Parameter P..."		akavi
25696493	12.16329	-7.5074415	story	7.0	81.0	1610163728	-10.605117	Writing an iRacing SDK Implementation in F#	https://markjames.dev/2021-01-08-writing-an-iracing-sdk-implementation-fsharp/	sanesmith
25775849	12.3041315	-7.0788727	comment	7.0	23.5	1610629548	13.161051	Sadly only first part is complete. Raku is the much more functionally inspired new Perl. It’s the renaming of Perl 6 and means “camel” or “paradise” in Japanese.		easygenes
25776071	12.278576	-7.0304837	comment	7.0	20.0	1610631241	13.190421	Is Perl/Raku widely used these days? Are they worth learning? I've always been curious about those languages but I've had the impression that people are moving away from them.		qsort
25843390	11.938649	-7.087041	story	7.0	12.0	1611126471	-8.681937	Ask HN: Scala vs. Kotlin?		rajeshp1986
25849539	11.995246	-7.4327235	comment	7.0	28.0	1611165400	7.339862	The core of the FBP principles are the holy grail of true componentized function architecture.Instead of losing yourself in ever more complex syntax convolutions as has happened in a lot of functional...		samuell
25849862	11.745275	-7.385988	story	7.0	28.0	1611166676	-8.815385	Dynamic type systems aren’t even simpler	https://hisham.hm/2020/01/20/dynamic-type-systems-arent-even-simpler/	ithrow
25903253	11.637487	-7.900975	story	7.0	44.0	1611583845	10.166242	Show HN: Micro – A platform for cloud native development in Go	https://github.com/micro/micro	asim
25933781	11.927858	-7.3360195	comment	7.0	21.5	1611780885	7.0895815	At least regarding games, ECS is the popular flavor-of-the-month alternative to OOP as a design strategy. The main problem being that games often have a lot of special cases, which break the inheritan...		setr
25979386	12.229774	-7.421753	comment	7.0	21.0	1612106119	-11.403947	Anyone who has actually tried this have any comments?I think it's interesting that they seem to position themselves as an alternative to programmers of jvm languages needing to switch to javascript fo...		abeppu
25980408	11.783327	-7.3521886	comment	7.0	19.5	1612113347	-8.886912	There is no limit on the number of problems easier to solve using dynamically typed languages. For an individual hacker, dynamically typed languages make a lot of sense. I don't forget what types my f...		madmax96
26030618	11.988047	-7.74863	comment	7.0	18.5	1612478399	10.423662	Yes. I know literally noone who has touched it. I even know more Haskell-dabblers. But it looks very cool.		sgt
26083779	11.680512	-7.016042	comment	7.0	39.0	1612912315	6.341331	"Core dev Larry Hastings [0] puts it well. The cost-benefit case for this complicated language feature is limited.""I dislike the syntax and semantics expressed in PEP 634. I see the match statement as ..."		bede
26094459	11.6442	-7.9373665	comment	7.0	22.0	1612989681	10.207606	IMO the biggest factors for the success of Go are 1) super-fast compile times, 2) easy to interpret compiler errors, and 3) dead simple shipment of high performance, native static binaries.I think Go ...		dcolkitt
26101923	12.25165	-7.5977497	comment	7.0	19.0	1613054589	11.944571	Is Scala used outside of Spark and Akka? Spark is my company chosen analytic engine, Scala was/is the main language for majority of the production workload. In the last two years or so, more devs are writing PySpark and SparkSQL jobs than Scala.		aynyc
26101969	12.235216	-7.5759516	comment	7.0	29.0	1613054869	-11.404334	I dabbled with Scala several years ago, but I've been using Kotlin for a JVM-based project and am happy with it. My main reason for choosing Kotlin is smoother interop with the JVM world. For example:...		mwcampbell
26117268	12.144634	-7.8900595	comment	7.0	23.5	1613156802	-3.169937	I always groan when I see posts on HN with grandiose claims about category theory, like this one.I think it is actively harmful to propagate pseudo-mathematical claims like the those, for example, fou...		spekcular
26118089	11.828791	-7.194433	comment	7.0	20.5	1613161144	-9.015981	I agree with you, although I must say that as an occasional Python user the way type hints are implemented absolutely baffles me. In particular the fact that they are completely ignored by the standar...		simias
26271851	12.021151	-7.6358743	story	7.0	167.0	1614320499	10.335063	PureScript and Haskell	https://blog.drewolson.org/purescript-and-haskell	allenleein
26293718	11.717171	-7.4245925	story	7.0	107.0	1614523600	-8.693538	A mundane use of dependent types	https://twitter.com/edwinbrady/status/1366031382577881092	Smaug123
26335430	12.0479765	-7.1393995	comment	7.0	36.5	1614809481	3.0638149	What really disturbs me is this comment:,,But no one said fs.promises.readFile should perform similarly to fs.readFile ''I'm happy that it was downvoted at least, but there should be a better way to set expectations for excellence in development.		xiphias2
26377770	12.471728	-7.802028	comment	7.0	32.5	1615138308	8.943226	Could recursion be ( one of ) the reasons why ML and Scheme ( and lisp, clojure, etc. ) aren't popular as industry languages?I learned recursion in University, it's undeniably a foundational piece of ...		Naac
26378049	11.818471	-7.4937305	comment	7.0	30.5	1615140105	5.5637136	The best explanation I heard of design patterns is, that they are not a template to slavishly follow when producing code, but a common language to talk about code. So you should be able to go and iden...		captainmuon
26418284	11.596951	-7.9109306	comment	7.0	20.0	1615420689	10.211949	It's interesting that 17% are not satisfied with editor support for Go. The biggest editor feature requests were for code completion and navigating code.Rather than editors being at fault, could these...		BillFranklin
26422474	11.627644	-7.547571	comment	7.0	22.5	1615458797	9.355888	Javascript (where the color analogy is from) does not allow in any way calling promise/async/callback based functions as if they were blocking.Every language where you can call an async function as if it was blocking has no colored functions, and none of the issues of it.		kuschku
26467157	11.865716	-7.2996836	comment	7.0	23.0	1615822268	6.8191676	"I'm unclear as to what's novel about OODA. Can someone give me an alternative model for context?It seems like all other permutations, e.g. DOAO or ADOO or DOOA wouldn't make sense, so what is the ""eur..."		dheera
26471809	11.639571	-7.2893076	comment	7.0	22.5	1615858152	-8.687538	It’s important to understand that this is a big problem.  If a type system is Turing complete, than it either has to be inconsistent or incomplete.  In other words it either must allow type invalid programs through, or it must prevent some type valid programs (or both!).		bodhiandphysics
35558594	12.006621	-7.7486143	comment	7.0	30.0	1681405525	10.398679	I find its syntax & idiomatic style incredibly difficult to follow, in a way nearly no other languages have been for me, including some functional languages (OCaml doesn't seem nearly as bad to me, fo...		yamtaddle
35666916	12.197995	-7.5983014	story	7.0	104.0	1682173763	11.947466	Indigo: A game engine for functional programmers, in Scala	https://indigoengine.io/	based2
35784433	11.635184	-7.9093056	comment	7.0	38.5	1683012464	10.223653	IMO, Go is capable of supporting OOP style code, but is not an OOP language. Coming to Go from more dogmatic OOP languages is such a breath of fresh air. If you just need a struct, you can have a stru...		lastangryman
35833256	11.785876	-7.337453	comment	7.0	18.5	1683311182	-8.935629	I am not convinced of the utility of how good type annotations are in the long term.I think static typing is a very fundamental part of language design that affects the entire language. To make static...		RcouF1uZ4gsC
35928009	12.36263	-7.0326486	comment	7.0	19.0	1683983312	12.391365	Ruby has the worst, most complex syntax I have ever used.		sage76
35973557	11.6144705	-7.9634776	story	7.0	13.0	1684320642	2.3070962	OS in Go? Why Not	https://blog.jetbrains.com/go/2023/05/16/os-in-go-why-not/	imadj
35997293	11.6428995	-7.939652	comment	7.0	23.0	1684465944	10.202897	> I wish more programming languages provided interfaces for building libraries around the std library like what Go does. It makes using libraries a lot better because you aren't dependent on that libr...		lmm
36019042	11.819517	-7.114925	comment	7.0	20.5	1684658861	-9.03066	What is the smart money doing for type checking in Python? I've used mypy which seems to work well but is incredibly slow (3-4s to update linting after I change code). I've tried pylance type checking...		extr
36094676	12.441596	-7.0975995	comment	7.0	21.0	1685194244	12.377374	After many years in Ruby, I feel strongly that the idea of a block is necessary for optimal expressiveness of a high-level language. Destructors are too implicit and fine for resources, but not as gre...		mattgreenrocks
36126693	11.835034	-7.1789756	comment	7.0	18.5	1685463585	7.437076	Why would we want to use purely functional data structures? When do the pros of functional data structures outweigh the additional complexity? Are there scenarios when a project would want to pivot from a regular data structure to a purely functional one?		EddieEngineers
36133536	12.118445	-7.5041256	comment	7.0	21.5	1685497345	-10.621986	just as true today as 2015 when the article was written, except C# got even better.While I like the F# language, I don't like the (understandably) abandonware of the small community.  I've ported most...		keithnz
36133560	12.14179	-7.5213857	comment	7.0	20.5	1685497634	-10.653089	Parsing realistic (messy) JSON, usually.  I would have expected F# to shine at that due to type providers, so it was doubly surprising to me.  The F# candidates I've seen spend most of the interview manipulating the data.		gemstones
36214938	11.747756	-7.386822	comment	7.0	23.5	1686067741	-8.781676	"Looks like the requirements for a ""type system"" have increased since I last looked - according to the article, a type system only deserves that name if it prevents use-after-free errors, memory corrup..."		rob74
36299214	12.390313	-7.413467	story	7.0	167.0	1686596562	12.943745	Elixir's “Set Theoretical Type System” prototype/demo/showcase	https://typex.fly.dev	weatherlight
36323895	12.019727	-7.8043604	comment	7.0	18.5	1686739143	10.383608	Oh, that's disappointing. I was hoping for a drug that will finally help me understand how monads are just simply monoids in the category of endofunctors.		xeonmc
36388892	11.607537	-7.894271	story	7.0	111.0	1687165589	10.151754	Bit Hacking (with Go code)	https://lemire.me/blog/2023/02/07/bit-hacking-with-go-code/	gus_leonel
36424169	11.59935	-7.6103497	comment	7.0	40.0	1687380308	10.084646	"It is interesting to see them add things like the ""clear"" function for maps and slices after suggesting to simply loop and delete each key one at a time for so long. Is this a result of the generics w..."		nu11ptr
36453304	12.057968	-7.0214996	comment	7.0	22.0	1687560745	9.144759	Interesting architecture. Asynchronous message passing at scale becomes quite a PITA very quickly. Wonder how scalable the code base really is. Probably Java isn't that bad of a choice considering the...		tekkk
36516087	11.790341	-7.3452272	comment	7.0	24.5	1688010535	-8.876737	This is why I can't help but mentally roll my eyes when people say that static typing makes programming slower.It makes writing the happy path slower, but is writing the happy path _programming?_By th...		Turskarama
36542937	12.003713	-7.723119	story	7.0	58.0	1688162202	10.410724	Boxed types in OCaml, and other thoughts	https://blog.ajour.io/language-choices-do-they-matter-also-whats-this-ocaml/	mkristiansen
28744771	11.640368	-7.164561	comment	7.0	29.5	1633340134	9.114039	Seconding. It takes doing some low-level gamedev[0] stuff, or using software written by people like Casey, to realize just how fast software can be. There's an art to it, and it hits diminishing retur...		TeMPOraL
28778328	12.07108	-7.7619076	comment	7.0	32.5	1633553890	10.402785	I used to work at an OCaml company and it wasn't nearly as much of an issue as one might predict. You can (it turns out) build a very successful business even if there aren't a lot of existing librari...		wyager
28842720	11.820384	-7.4033475	comment	7.0	33.0	1634060905	10.318438	The grass does seem tend to appear greener in the other paradigm.Barely typed languages like C made rigorously typed languages like C++ and Java seem appealing. The boilerplatiness of those languages ...		marginalia_nu
28884229	11.899456	-7.402026	story	7.0	167.0	1634339832	7.1573706	Functional Algorithms, Verified	https://functional-algorithms-verified.org	haskellandchill
28911505	11.834072	-7.3520856	comment	7.0	22.5	1634590057	9.257649	"Can someone explain why the async keyword and the whole ""red/blue functions"" thing is necessary at all in the source code? Why can't the language implementation see that ""await"" is used in the body of a function, and automatically mark it as async?"		fouric
28922925	12.156554	-7.5166373	comment	7.0	23.0	1634673489	-10.652406	Is it my imagination, or has there been an upswing of interest in F# on HN recently?		Taikonerd
28933134	12.303683	-7.038463	comment	7.0	28.5	1634749584	13.200415	"What's missing from Perl 5, would you say, that's holding it back? Performance? Language features? The ""line noise"" stigma? (yet, Haskell is trendy and it's at least as ""line noise"" looking to me, in typical use, as typical Perl is...) Package management and other tools?"		handrous
29018465	12.323817	-7.242354	story	7.0	115.0	1635365301	7.0712504	SqueakJS – A Squeak VM in JavaScript	https://squeak.js.org/	gjvc
29050521	11.597125	-7.2590294	comment	7.0	41.5	1635614668	9.217068	"There may be some huge piece I'm missing, but how exactly is the ""starting multiple async tasks wrapped in blocks and waiting for them to finish at the end of the main Async block"" different from ""sta..."		Toutouxc
29090731	11.798718	-7.1878085	comment	7.0	19.0	1635909155	-7.2140794	"Side note: - I don't understand why classes are needed here. 
instead of    procedure = [
        CreateSSHKeypairStep(),
        GitCommitStep(),
        WaitForBuildStep(),
        RetrieveUserEmail..."		sullyj3
29113172	11.955161	-7.4575524	story	7.0	11.0	1636064348	7.232808	Ask HN: Is Functional Programming the Future?		pharmakom
29121066	12.014217	-7.6979566	comment	7.0	52.0	1636127721	10.405157	Two non-surprises here:> We currently have exactly two backend engineers. A single Haskell engineer can support a 2:3+:1 data:FE:BE developer ratio and still have free BE time.1) That they have 1-2 Ha...		pphysch
29141744	12.322835	-7.4070935	comment	7.0	25.5	1636307751	12.698053	Has anyone had great success with akka? It seems like it could definitely solve some problems elegantly. My team has had trouble with maintainability due to complexity (not clear if that's inherent in...		bostonsre
29178799	11.781073	-7.854342	comment	7.0	21.5	1636570562	10.269386	"Would you say Go is suitable for web services and apps?
I was trying to compare it with a rapid development framework like Rails but felt Go Web Frameworks aren't as mature and ready like Rails.
Any insight would be appreciated, thanks!"		princevegeta89
29184434	12.10325	-7.8339367	comment	7.0	24.0	1636604990	-3.241698	"This blog post is very well written. It is also the platonic ideal of ""articles about category theory that I love to hate.""The article concludes by saying:> Hopefully I’ve convinced you that Chu space..."		spekcular
29187425	11.988376	-7.7294917	story	7.0	95.0	1636635746	10.449096	Haskell IHP framework, from a technical and business perspective	https://www.gizra.com/content/haskell-ihp/	_query
29251541	11.976489	-7.7495394	comment	7.0	26.0	1637148049	10.404465	"What I like about Haskell is that it is unashamedly a language for programming language research, by programming language researchers. ""This change needs to happens because otherwise the mathematics d..."		WJW
29262858	11.61284	-7.051816	comment	7.0	19.0	1637219326	-6.6394076	Here's a choose your own adventure for people new to the field. Pick something you want to build, then see which languages are the best suited. If you want to build several things, see which languages...		echelon
29317024	12.226034	-7.5633802	story	7.0	38.0	1637670511	11.898993	Java and Scala’s type systems are unsound (2016)	https://dl.acm.org/doi/10.1145/2983990.2984004	rbanffy
12605209	11.885962	-7.384777	comment	7.0	45.0	1475157057	7.229581	"Gary Bernhardt describes a similar architecture using a ""Functional Core, Imperative Shell"" in his Boundaries talk[1].""Purely functional code makes some things easier to understand: because values don..."		slashdotdash
12611651	11.787885	-7.2947607	story	7.0	41.0	1475232361	-5.9113636	Law of Demeter and immutability	http://enterprisecraftsmanship.com/2016/09/29/law-of-demeter-and-immutability/	speckz
12613280	11.592423	-7.8382716	story	7.0	92.0	1475251491	9.912479	Thread-Safe Lock Free Priority Queues in Golang	http://scottlobdell.me/2016/09/thread-safe-lock-free-priority-queues-golang/	slobdell
12704856	11.736217	-7.2415257	comment	7.0	33.0	1476399500	-8.97198	Honestly I haven't looked into MyPy a huge amount, and haven't used it yet. But from reading the docs on it I feel like it's taking the wrong approach. In my opinion, Python is all about duck typing, ...		clusmore
12759371	12.262269	-7.632917	comment	7.0	18.0	1477046600	11.934076	"From my experience (working 100% remotely for some years), I'd say that the sweet point lies in relatively ""exotic"" stacks, like Scala, Erlang, maybe even Rust.It's not that there are more remote jobs..."		atemerev
12778932	12.031517	-7.2000456	comment	7.0	25.5	1477318525	9.20143	var's function scope is a feature! You don't have to place variable declarations in the header! (they are hoisted) Placing the var declarations where they are used makes the code easier to understand....		z3t4
12783298	11.984809	-7.7491517	comment	7.0	24.5	1477346546	10.374734	I second this question and would like to add another one:Where is it that Haskell shines?		wuschel
12822122	11.611986	-7.9512925	comment	7.0	25.0	1477704510	10.160962	.1 of a millisecond is very impressive. Does this mean Go can finally be considered a systems programming language?		bitmapbrother
12850269	11.957922	-7.7123947	comment	7.0	28.5	1478036450	10.423607	I remember reading this when it was new.foreach only works on a list. I can bless a list of lists into a rose tree, but i can't traverse that in a uniform way. There's just no hook to say, when the th...		jfoutz
12853990	11.980289	-7.7461705	story	7.0	101.0	1478089872	10.43085	Using Haskell to Find Unused Spring MVC Code	https://tech.small-improvements.com/2016/11/01/using-haskell-to-find-unused-spring-mvc-code/	petercrona
12876417	12.101656	-7.8709593	story	7.0	175.0	1478295808	10.440433	OCaml 4.04.0 released	https://sympa.inria.fr/sympa/arc/caml-list/2016-11/msg00010.html	mseri
12888382	11.906247	-7.1275907	story	7.0	301.0	1478485811	9.4116535	Some thoughts on asynchronous Python API design in a post-async/await world	https://vorpus.org/blog/some-thoughts-on-asynchronous-api-design-in-a-post-asyncawait-world/	piotrjurkiewicz
12921230	11.626216	-7.9744587	comment	7.0	76.5	1478792186	10.247412	I have decided to get proficient in Go about 3 years ago and I am glad I did. One of the discoveries in the process was that Go enables you to do things that previously were extremely difficult and yo...		gtrubetskoy
12925971	12.295515	-7.104459	comment	7.0	23.5	1478822466	-3.2620325	I could be reading the tone of the interview wrong, but it seems like there's a weird sort of anti-intellectualism bent to the Ruby community.In the middle, there's this exchange:  Jonan: So you would...		rrradical
12934617	11.59278	-7.2403145	story	7.0	21.0	1478900168	5.0451417	Ask HN: What are good resources for studying Dynamic Programming?		aalhour
12952682	11.637916	-7.942671	story	7.0	102.0	1479153250	-9.466003	Termbox-Go – A minimalistic Go curses library	https://github.com/nsf/termbox-go	MaxLeiter
13012426	11.93909	-7.694825	comment	7.0	33.0	1479801235	10.423888	IME Haskell development has a sort of bell-curve to it. Initially, you're spending a lot of time prototyping, fumbling around trying to find the right abstractions. Here Haskell mostly gets in the way...		millstone
13051560	11.629698	-7.379871	comment	7.0	23.0	1480281135	9.9331255	Is this a defect or a tradeoff? Passing arrays of subtypes seems useful to me. I never experienced such an error, but I suspect this is quickly caught and shouldn't be a big problem.But then I don't know anything about type system theory.		MrBuddyCasino
13091634	11.637985	-7.9502563	story	7.0	232.0	1480707787	10.172469	Codebase Refactoring with Go	https://talks.golang.org/2016/refactor.article	junke
13104556	11.8276	-7.743993	story	7.0	137.0	1480933913	10.312197	Measuring GC latencies in Haskell, OCaml, Racket	http://prl.ccs.neu.edu/blog/2016/05/24/measuring-gc-latencies-in-haskell-ocaml-racket	edwintorok
13116308	11.646939	-7.8821273	story	7.0	89.0	1481044658	10.184589	Universally Unique Lexicographically Sortable Identifier in Go	https://github.com/oklog/ulid	tsenart
13185163	11.651146	-7.954216	comment	7.0	23.5	1481815580	10.211044	While I appreciate contributions to the Go ecosystem, I have to say I don't get it when it comes to these types of IDEs. For me one of the great things about Go (coming from Java) is I don't need some...		johnnycarcin
13225477	11.71896	-7.408888	comment	7.0	18.0	1482277714	-8.708213	Will concepts (currently or in the future) be able to constrain on anything other than types?For example in the Number concept, can you have a PositiveNumber concept (e.g., require Number > 0)? Or giv...		rawnlq
13239663	12.027458	-7.663036	story	7.0	76.0	1482435140	10.37422	Show HN: Teleport: Simple command line app tutorial written in Haskell	http://bollu.github.io/teleport/	bollu
13257102	11.983583	-7.732948	comment	7.0	22.5	1482730250	10.414392	I started learning Haskell this year.One of the small bumps I had was getting my environment setup. Based on my experiences with Ruby and Node, I knew I'd want to have a tool for managing the language...		TheAceOfHearts
13281158	11.637107	-7.9649467	comment	7.0	33.5	1483054166	10.219859	"The echoes of Golang hype right now are somewhat ominous. A few years ago it was ""concurrency primitives are going to change your life"" and now it's ""lifetime/ownership primitives are going to change ..."		spacelizard
13295479	12.05068	-7.7665567	comment	7.0	24.0	1483271284	10.429517	I find it interesting that CakeML, like many other developments in this area, is based on SML (Standard ML) and not OCaml (Objective Caml). Moreover, whenever I read something about ML languages, it s...		vog
13295619	11.961416	-7.721434	comment	7.0	24.5	1483276258	10.413297	"I think this looks a lot nicer with Haskell-style do notation:    import Control.Monad (guard)
    import Data.Ratio ((%))

    results :: [[Int]]
    results = 
      do th <- u 
         o  <- u
   ..."		eutectic
13330532	11.6188755	-7.917567	story	7.0	119.0	1483644690	4.950068	MuGo: A minimalist Go engine modeled after AlphaGo	https://github.com/brilee/MuGo	luu
13357972	11.660522	-7.9369106	comment	7.0	36.5	1483982990	10.212111	If you follow the history of that particular issue, you'll see that the Go team's (official) view has always been that there are tradeoffs involved, and that none of the existing proposals for impleme...		dmit
13475050	12.42313	-7.4902806	comment	7.0	43.0	1485289009	12.893715	> Your Erlang program should just run N times faster on an N core processorBut only if your program is embarrassingly parallel with at least N times available parallelism in the first place! If you ha...		chrisseaton
13497815	12.471776	-7.5190196	comment	7.0	25.0	1485492950	12.909831	"This is how myths are created and perpetuated.This claims from a study of a particular model of Ericsson's ATM switch whose software was written in Erlang.A can tell you for sure that:
* Ericsson has ..."		kjksf
13544465	12.171703	-7.031333	comment	7.0	23.0	1485979236	-10.916065	> I wrote a simple tool that allows you to filter out what you don't needIt'd be a short hop from here to a tool that basically does for JDK-platform apps what Erlang's releases do for the ERTS platfo...		derefr
13559433	12.041662	-7.1917863	comment	7.0	20.0	1486126499	9.152816	So much of the promise-based code I see looks almost the same as it would with plain callbacks, just with the callbacks plopped into .then(). Am I missing something? How do promises make for more reusable functions?		zachrose
13565334	12.11606	-7.5210056	comment	7.0	41.0	1486176281	-10.605684	F# is a beautiful language. You always want to use the right tool for the job but honestly F# is so right for so many jobs.I know a lot of people don't want to hear this but these types of languages, ...		fowlerpower
13567760	12.210777	-7.280374	story	7.0	75.0	1486228328	7.050781	Len/Mathematics: A computational algebra system in Smalltalk	https://github.com/len/Mathematics	mpweiher
13584079	12.503948	-7.044239	comment	7.0	49.0	1486415810	12.369921	>  Soon Python and Ruby won't have any advantages left in writing beautiful, clear, correct, bug-free, and easy to read codeCome on, it's not like they've added garbage collection.		justin66
13592888	11.980283	-7.7443085	story	7.0	24.0	1486502243	10.416072	Haskell: “the C program, which often crashed and killed the patients.”	https://www.parple.org/will.partain/haskerl/hudak-1.html	setra
27496790	11.864905	-7.313389	comment	7.0	24.0	1623620467	9.199248	"Async will continue to look awkward until we drop explicit ""await"" on function calls. Awaiting should be the default. If I call ""async foo()"" then I get back a promise I can explicitly await, but ther..."		slver
27643731	11.778172	-7.3122187	comment	7.0	24.0	1624727646	7.447401	While making the state immutable made it more visible what code was affecting the state, the end result is still multiple pieces of code directly affecting what is essentially a global state. Sure, a ...		Aaargh20318
27649140	11.8240385	-7.479489	comment	7.0	20.5	1624775352	1.8353926	There’s a lot of folks in this thread who’ve shared their personal experience with learning and teaching programming languages. Some attempt to generalise this experience into principles of how much t...		nindalf
27659224	11.907736	-7.3170476	comment	7.0	50.0	1624867822	7.1143665	There is some middle ground between data-oriented design and OOP: just organize your objects in such a way that:a) objects of the same type occupy continuous blocks in memory,b) messages are passed to...		axilmar
27682106	11.649623	-7.3603525	story	7.0	55.0	1625003084	-8.853028	Static Integer Types	https://tratt.net/laurie/blog/entries/static_integer_types.html	matt_d
27782791	12.504545	-7.5007534	story	7.0	142.0	1625832111	12.8956375	What I learned from Erlang about resiliency in systems design (2019)	https://www.mgasch.com/2019/03/crash/	srijan4
27811497	11.64871	-7.9654026	comment	7.0	18.0	1626104982	10.198066	Somewhat related, how are other gophers handling dynamic configuration in their go apps?  Such as if the app is tied to consul or vault to get some config value.  How do you handle the propagation of ...		candiddevmike
27830309	11.678988	-7.5383825	comment	7.0	20.0	1626244498	-8.728939	"I used to think thay I'd like working with advanced type systems with their ""If it compiles, it works"" guarantee.However, I recently spent some time working on a TS codebase with libraries like GraphQ..."		jatins
27884955	11.611618	-7.3461795	comment	7.0	24.5	1626714544	9.188462	You are ignoring the downside to green threads which is that it’s cooperative. If the thread doesn’t yield control back to the event loop then the real OS thread backing the loop is now stuck.Which le...		Spivak
27907757	11.743427	-7.0699925	comment	7.0	17.5	1626882131	-8.79909	I don’t use Python much, but what’s the difference between a NamedTuple and a regular class?		colejohnson66
27907286	11.622661	-7.110359	comment	7.0	26.0	1626879896	8.913661	> Point = namedtuple('Point', 'x y')I must come from a different world. What is going on here?Are you dynamically creating a named tuple (a record?) by passing a space separated list of field names? Why?		sfvisser
12055097	11.996509	-7.7638226	comment	7.0	29.5	1467982387	10.440785	Because /r/haskell has become a place of constant flamewars. We need a clean break. A new subreddit provides a fresh start allowing to mold a new community based on better principles. Everyone who wan...		Rabble_Of_One
12166120	11.861113	-7.414084	story	7.0	53.0	1469545439	-6.25936	It might be worth learning an ML-family language	http://www.drmaciver.com/2016/07/it-might-be-worth-learning-an-ml-family-language/	jodooshi
12177565	11.601283	-7.9190736	comment	7.0	31.5	1469665620	10.202326	"Maybe a change in attitude? Stability can be a good thing. Go's standard library doesn't change that much, and that's a strength.How about: ""std is where code goes when it's done"".As is, really done. The API's won't need changing."		skybrian
12177503	11.924457	-7.692618	comment	7.0	93.5	1469664789	10.385703	I wouldn't recommend following the Haskell approach. It hasn't worked well for us. (I took part in creating the Haskell Platform and the process used to add packages to it. I also used to maintain a f...		tibbe
12190930	12.231	-7.628972	comment	7.0	27.0	1469836935	11.93247	Interesting, but so many caveats (e.g. writing rough libraries for things like sending emails). I find that Scala offers a better balance by enabling functional programming while still taking advantage of a huge, mature ecosystem including great libraries and tools.		facorreia
12208174	11.630246	-7.948876	comment	7.0	31.0	1470120056	10.233228	I used to feel this way. It was my top complaint about the language. But it, and, more importantly, the use requirement for variables, has saved me from bugs repeatedly; I more and more notice the bug...		tptacek
12227914	11.782399	-7.188096	comment	7.0	23.5	1470339498	9.190252	asyncpg was developed by @redcrowbar and me. Ask us anything ;)		1st1
12258501	11.625221	-7.95675	story	7.0	90.0	1470786696	10.2053175	Static files in Go	http://bouk.co/blog/static-files/	bouk
12260654	11.59526	-7.9206038	story	7.0	135.0	1470825487	10.166394	Compile Go programs 7x faster	https://github.com/squanching/go-fast	squanching
12284156	12.288411	-7.2553153	comment	7.0	28.0	1471145291	-10.408807	If Smalltalk and Lisp are so magical then why didn't they win?		cageface
12288921	12.008118	-7.6513257	comment	7.0	21.5	1471240894	10.313072	"One flaw I'd point out after working with Purescript a lot is that Haskell's ""IO "" is very large, to the point of not meaning anything.printing to screen? IOnetwork connections? IOlaunching the nukes?..."		rtpg
12332254	11.909991	-7.1660776	comment	7.0	29.5	1471806757	7.7593265	Static languages, in particular Haskell, PureScript, etc, are unparalleled when it comes to fast prototyping or design space exploration. The compiler can show you whether your idea even makes sense b...		pka
12354697	12.056588	-7.0360465	comment	7.0	25.5	1472067989	8.205787	jvm jvm jvm. Flink. Storm. Spark. Beam. projectreactor. Reactors. Samza. How spoiled are Java/Scala programmers but is there anybody doing anything similar in distributed computing frameworks that tar...		vegabook
12377842	11.74196	-7.1599274	comment	7.0	34.0	1472410044	5.517512	"Are you seriously saying that the best code is an untestable mess of big God classes?
Because in my experience this is by far the type of code written by inexperienced programmers.
Abstractions and in..."		tigershark
18944564	11.723993	-7.2975593	comment	7.0	26.5	1547859668	-8.9234705	> ...allows programmers to write code quickly by not requiring to declare the types of each variable which are determined at run-time based on the values assigned to that variable, thereby increasing ...		satyanash
18964665	12.23403	-7.3190393	story	7.0	64.0	1548113776	7.0293875	Objective-Smalltalk: now serving its own web site	http://www.objective.st/	mpweiher
19048283	12.15128	-7.4266376	comment	7.0	32.0	1548965269	-11.392183	Lombok is a useful crutch if you're writing lots of Java code on a day to day basis. However, given how easy it is to use Kotlin alongside Java I would question whether Lombok is the right solution to...		ganonm
19089389	12.261499	-7.433699	story	7.0	75.0	1549398048	10.310239	Benchmarking Go vs. Node vs. Elixir	https://stressgrid.com/blog/benchmarking_go_vs_node_vs_elixir/	pplonski86
19111684	11.827606	-7.8332763	comment	7.0	39.5	1549602046	10.241841	For the kinds of applications people tend to build in PHP, PHP is probably a better choice than Go. I'd still do Django or Rails before PHP, but Go just isn't designed to make serverside-rendered database-backed websites especially pleasant to write.		tptacek
19147392	11.635539	-7.9581275	comment	7.0	21.0	1550004917	10.231612	Why hasn't someone made a Go and Forth combination yet?		oneplane
19199686	11.792802	-7.3470836	comment	7.0	23.0	1550591087	-8.889085	Static typing is fantastic in a closed system. It's predictable and reliable.My problem is nearly every type system breaks down when you try communicate with something outside of the closed system (e....		SkyPuncher
19289844	11.665152	-7.907023	comment	7.0	21.5	1551544337	10.147036	"The two key takeaways for me are:(1) ""Contrary to the common belief that message passing is less error-prone, more blocking bugs in our studied Go applications are caused by wrong message passing than..."		c61
19317985	11.685792	-7.04407	comment	7.0	24.5	1551870143	8.990172	"The most compelling reason to not do this is that (I claim) it’s not super obvious what to do when the keys are equal. In:  { 'a' : 1 } | { 'a' : 2 }

Should the result be:  { 'a' : 1 }

(prioritise t..."		dan-robertson
19387586	11.724731	-7.5494914	comment	7.0	20.5	1552554906	10.200688	>> The worse the abstraction that you and your colleagues are likely to use, the better a language is GoI feel the same way about most statically typed languages. They're designed for developers who a...		jondubois
19399737	11.897083	-7.635253	story	7.0	126.0	1552658456	-8.548049	Writing a simple evaluator and type-checker in Haskell	https://bor0.wordpress.com/2019/03/15/writing-a-simple-evaluator-and-type-checker-in-haskell/	bor0
19416964	11.955346	-7.3528533	comment	7.0	19.5	1552860142	7.1235676	"I mentally categorize these discussions of ""true OOP"" in the same class as ""RESTful"" API discussions.  Nobody is quite sure what they're even arguing about, so the discussions go around endlessly in circles."		cle
19418836	12.043426	-7.277364	comment	7.0	22.0	1552886222	7.6444483	> The big idea of message passing is that it's not about message passing, I think what Alan Kay has been trying to say all these year is that we should look at how bacteria communicate, and try to mim...		hota_mazi
19430840	12.266524	-7.288733	story	7.0	136.0	1553004012	-10.354536	Lisp Macros, Delayed Evaluation and the Evolution of Smalltalk	https://blog.metaobject.com/2019/03/lisp-macros-delayed-evaluation-and.html	mpweiher
19439531	12.144356	-7.8061786	story	7.0	55.0	1553062968	10.425974	Rails on OCaml	https://protoship.io/blog/rails-on-ocaml/	pvsukale3
19439242	11.929775	-7.0533323	comment	7.0	18.0	1553059217	8.637481	I've been working professionally in Java for almost 20 years.  I can't remember the last time I saw someone use features introduced after 1.6.  The time API in 1.8 was nice.  I've never seen anyone us...		Consultant32452
19449381	12.131847	-7.828609	comment	7.0	21.0	1553144580	10.393435	I make no shame of it. I am an imperative programmer at heart. Hy is beautifully imperative.return/if/while/break/continue actually work in Hylang. Common Lisp doesn't have these. Scheme purists won't...		foobar_
19462598	11.954204	-7.449095	comment	7.0	19.0	1553263573	0.13296607	It seems that FP zealots have a hard time appreciating that there’s both a value and a cost to FP adherence. I find that FP forces too many contortions in the name of some ethereal value without a consideration of cost.		jtdev
19581286	12.005574	-7.7528706	comment	7.0	18.5	1554460975	10.431376	This is an interesting paper, and I'd like a replication today, 25y after: I believe Haskell has matured a lot in all of this time.As an experiment, some months ago we prototyped a new service in Hask...		ff_
19594193	12.33558	-7.0381885	story	7.0	100.0	1554600640	11.855077	Perl6: The World's Worst ML?	https://aearnus.github.io//2019/04/05/perl6-is-the-world-s-worst-ml	hyperpallium
19641238	12.223898	-7.641074	story	7.0	21.0	1555034198	11.928313	Scala, Part II	http://evrl.com/programming/scala/2017/04/04/scala-part-ii.html	michael_fine
19678694	12.404414	-7.7264094	comment	7.0	22.5	1555462237	-6.5226974	If you like this sort of thing, here are some others in a similar humorous style for other languages.1. Kaufman, Roger. A FORTRAN Coloring Book (probably the first funny programming book -- from 1978)...		jhbadger
19697846	11.772842	-7.3521748	comment	7.0	23.5	1555661058	-8.906414	What is the rationale of adding types to a language that will still retain all performance penalties from the need to have dynamic typing code to interact with non-typed data?		baybal2
19715825	11.894889	-7.6232176	comment	7.0	30.5	1555898421	10.28733	Admittedly I'm somewhat of a FP fanboy, but I seriously cannot disagree with you more on this.Functional Programming (and Logic Programming) are better than other paradigms because, unlike Java (or C+...		tombert
19737067	11.934917	-7.449107	story	7.0	22.0	1556102121	7.2281203	Did Functional Programming get it wrong?	https://medium.com/@reinman/monoids-to-groupoids-492c35105113	bhoggard
19748836	12.26586	-7.5561614	comment	7.0	18.0	1556204303	-11.385641	Kotlin native/multiplatform projects is the answer		skinnyasianboi
19780100	11.651742	-7.9750233	comment	7.0	64.5	1556556850	10.269447	It seems like golang designers are totally isolated from what's been happening in the last 30 years in languages design. They still insist on their weird way of error handling just like they were stub...		trpc
19792419	11.808409	-7.087358	comment	7.0	22.5	1556661446	-6.1500845	You can't do that with Java. There are some workarounds, but generally people restart application to check changes.		vbezhenar
19817142	11.656461	-7.3827457	comment	7.0	26.0	1556880147	-8.711963	The Type I and Type II errors is especially hurtful to me: I am totally unable to remember which is which and each time I read an article containing them I think: well, I am probably going to get it wrong again but I cannot bother to check the definition one more time... who cares?		pfortuny
19821727	11.777268	-7.386181	comment	7.0	44.0	1556913528	-8.873578	Chris Smith - who wrote the original piece years ago - added a current prologue to the text. I think part of it is an excellent summary so I quote this part here:> If pressed for an answer, though, ye...		weinzierl
19822543	11.763035	-7.3474054	comment	7.0	18.0	1556919704	-8.88326	> Fallacy: Dynamically typed languages provide no way to find bugs>>A common argument leveled at dynamically typed languages is that failures will occur for the customer, rather than the developer. Th...		apo
19823218	11.783052	-7.367678	comment	7.0	19.0	1556926700	-8.930384	Doesn’t hold water, imo. If dynamic and static typing were really independent concepts, then why are languages only one or the other, never both? I explained my take on dynamic versus static typing he...		StefanKarpinski
19839081	11.635888	-7.9582925	story	7.0	498.0	1557148380	10.234519	Practices for writing high-performance Go	https://github.com/dgryski/go-perfbook	ingve
19838922	11.703773	-7.271827	comment	7.0	18.0	1557147081	-8.745429	Does anyone have any favourite resources on the Lambda Calculus (i.e. expanding upon the preliminaries in the introduction here)?		mulholio
19865307	11.917385	-7.359274	comment	7.0	20.0	1557375055	7.0431457	With all this angst against OOP, what other alternatives should a programmer consider or what patterns of hierarchical logic do people suggest?		lolptdr
19866034	11.885959	-7.325842	comment	7.0	18.0	1557385542	7.0620327	It would be nice if languages provided mechanisms to support composition without the bureaucracy.Why should we write a ton of boilerplate just to forward a message to a contained object? Why can't we ...		kstenerud
15778349	11.639238	-7.967187	story	7.0	168.0	1511648971	10.126375	Matcha: Mobile apps in Go	https://gomatcha.io/	ingve
15807020	11.939059	-7.420261	comment	7.0	30.5	1511965962	7.168184	"I'm confused as to why he doesn't put functional programming as a yes. He writes ""Functional languages are still quite niche, but functional programming ideas are now mainstream, at least for the HN/r..."		raiflip
15815588	12.001404	-7.757411	comment	7.0	18.5	1512049260	10.449598	Is it a death sentence to try and learn Haskell on this challenge? Or should I go with a language I'm more comfortable in?		vadansky
15843318	11.761702	-7.6937633	comment	7.0	29.0	1512390186	10.352498	My impression of Haskell is that the main issue is that laziness is simply wrong, since it causes space leaks that are hard to reason about, and seems generally less efficient than eagerness; furtherm...		devit
15851471	11.673646	-7.965603	comment	7.0	25.0	1512479434	10.213874	So there is android-go[0], which is a Goland thing; and Go Mobile[1], which is a Golang thing; and now there is also the other Android Go[2], which has nothing to do with the Go programming language.R...		biztos
15856950	11.622304	-7.952984	comment	7.0	47.5	1512515059	10.247011	It's so strange seeing people who write these sorts of articles constantly praise Go's error handling. In what world is doing the whole if err != nil thing every 30-50 lines not ridiculous?I get that ...		s4vi0r
15893580	11.935791	-7.71203	comment	7.0	21.0	1512941151	10.421231	I have trouble understanding the usefulness of this. Haskell is barely used in the first place, and even less for highly safety critical software.It's also not clear to me why I would use this over wr...		mbid
15952848	11.912687	-7.0204945	comment	7.0	21.5	1513614895	7.677262	I've worked with a lot of different languages, developing games and server software, for 15 years. I and everyone I've worked with always tries our best to give reasonable, readable names to things. I...		fragsworth
15982937	11.634889	-7.9046116	comment	7.0	20.0	1513891655	10.170683	"Isn't it faster to write everything in Go, for example, that has a compiler guiding you all the way and you rarely get runtime errors? I feel my developer time very much ""optimized"" when writing backends in Go than when I wrote then in Python (I also tried Node, which was a disaster)."		fiatjaf
16020226	11.639039	-7.879296	comment	7.0	18.0	1514433802	10.175698	I really want to love templates, but I find many aspects to be quite confusing.(1): I just want to deploy a binary file. This does not seem possible with templates (unless they're defined inside .go f...		abc-xyz
16091526	11.74981	-7.8924475	comment	7.0	24.0	1515344716	10.193142	This reminds me of an ongoing discussion I was having with friends about Golang web frameworks -- one side of the argument is that you can achieve so much with the standard library that frameworks are...		rcarmo
16256828	11.598897	-7.946516	story	7.0	162.0	1517224700	10.222651	Clive OS: Go applications that can run without an operating system (2016)	http://lsub.org/ls/clive.html	merqurio
16271371	11.695367	-7.1592393	story	7.0	52.0	1517373591	-8.370376	Partial Application and Lambda Parameter Syntax for JavaScript	https://medium.com/@citycide/partial-application-lambda-parameters-for-js-aa16f4d94df4	skellertor
16282552	11.999817	-7.7540193	comment	7.0	21.0	1517499371	10.419445	I think it's Haskell.I know sometimes it gets some hype but Haskell and its ilk is just so above the quality of any other language it's mind bending. Whenever a hard language design problem comes up i...		friendly_chap
16316776	12.298664	-7.6338725	comment	7.0	23.5	1517930535	10.328454	I was looking into ReasonML a few weeks back because the promise of whatr it offered was so great.  Write in one language, and run on the server and on the client, but allow the server to be compiled ...		kbenson
16337352	11.723302	-7.9012356	story	7.0	82.0	1518142179	10.137052	Learning Go as a Node.js Developer	https://nemethgergely.com/learning-go-as-a-nodejs-developer/	skellertor
16387901	12.035497	-7.2284646	comment	7.0	18.5	1518730668	9.197614	> JavaScript Promises Discussion: Make Them Monadic?No, just totally ditch them!I can't help to hate Promises. Sometimes I have to work on a code base that is completely baked with them, it's just a n...		maximexx
16482842	11.975615	-7.766518	story	7.0	135.0	1519824983	10.484148	Bazel can now build Haskell	https://www.tweag.io/posts/2018-02-28-bazel-haskell.html	mboes
16518024	12.241481	-7.5319204	story	7.0	4.0	1520213347	-11.340574	Ask HN: Using Kotlin for web application back end		backslash_16
16525244	11.715721	-7.4949026	story	7.0	225.0	1520289708	10.042755	How generics were added to .NET	http://www.mattwarren.org/2018/03/02/How-generics-were-added-to-.NET/	matthewwarren
16545852	11.8800535	-7.0268803	story	7.0	29.0	1520529529	-6.465406	TIOBE Index March 2018 – Ruby replaces Delphi in top 10	https://www.tiobe.com/tiobe-index/	PaulRobinson
16585617	11.673241	-7.027082	comment	7.0	19.5	1521042662	1.7505207	On a tangential topic : I am intimidated by how myriad experiences with programming languages HN commentators on this thread have. I have been in this industry for about 8 years and am considered an a...		6ak74rfy
16604673	12.418442	-7.750914	comment	7.0	34.0	1521242232	-11.12366	"That's why I like Clojure's philosophy of a few data structures and many functions operating on them.Of course Alan Perlis wrote ""It is better to have 100 functions operate on one data structure than ..."		Bizarro
16606113	11.736467	-7.396558	comment	7.0	21.0	1521277308	7.042945	> A common counterexample to OO inheritance is the relationship between a square and a rectangle. Geometrically, a square is a specialisation of a rectangle: every square is a rectangle, not every rec...		kccqzy
16804667	12.3348	-7.4831557	comment	7.0	30.5	1523390060	12.905487	"Another interesting way to think about it is as ""match"". That is try to match the stuff on the right with the stuff on the left.Take Erlang for example:    1> X = 1.
    1
    2> X = 2.
    ** excepti..."		rdtsc
16805457	11.827307	-7.082968	comment	7.0	18.5	1523394566	7.8082943	I always liked DHH's take on these sorts of arguments (paraphrasing): who the hell cares? Once you know the purpose of the '=' how often do you make mistakes reading or writing code?Whereas Java is al...		dkrich
16847891	11.779447	-7.2234116	comment	7.0	22.0	1523873919	8.918864	With many languages adopting LINQ object querying, I find it more and more suitable to start using math's set operators for them. Many languages have almost identical behavioral sequence operators (.f...		sharpercoder
16849188	11.639883	-7.9050283	story	7.0	26.0	1523888713	10.199613	Show HN: Parcel, a simple resource bundler for Golang	https://github.com/phogolabs/parcel	svett
16880401	11.888441	-7.286468	comment	7.0	31.5	1524173924	7.133142	Every objects-first codebase I've seen was terrible. OOP survived mostly because people push hard for it, because they think there must be value in overly taxonomic code, but in the end they never see...		jstimpfle
16884292	12.196107	-7.6193175	comment	7.0	31.5	1524228415	11.922286	F# only has access to a subset of .NET deployment scenarios, where Scala can be used pretty much everywhere there is a JVM.So most companies actually are more keen to bet on Scala than F#.OCaml/Reason...		pjmlp
16885198	12.245739	-7.6322746	comment	7.0	29.0	1524235759	11.95909	Disclaimer : I'm nobody important, but I do have an opinionIf scala team were to disavow sbt, that'd be the single best thing they could possibly do for the ecosystem.I used to write a lot of scala, a...		jrq
16885275	12.239584	-7.622556	comment	7.0	19.0	1524236220	11.939577	How have people faired with Scala integration with Java libraries? When Scala first came out, I liked the idea. If I wanted to use X library, great, I can. As I pondered it more, this seemed terrible....		virmundi
16885895	12.201653	-7.624728	comment	7.0	31.5	1524240134	11.953794	It's amazing how many people in this thread justify their own language choices by making negative, sweeping statements about another language (Scala in this case) that is successfully used by people o...		DandyDev
16908836	11.950736	-7.785922	comment	7.0	21.0	1524530255	10.397299	I find the use of rake to be kind of unorthodox, and yet I don't know what else you'd use in the Go world, other than maybe just Makefiles. Any particular reason to choose Rake? It's probably not easy...		jchw
16922191	11.621212	-7.1065893	comment	7.0	20.5	1524669079	6.4492736	Isn't pattern matching interesting only in a strongly typed environment where the compiler can statically check that you are giving instructions for all possible cases?		lolive
16948842	11.815415	-7.374315	comment	7.0	22.5	1524939317	-8.8891325	I've looked at this page and some other documents since I wanted to implement type classes in Juniper (a FRP language for the Arduino). It turns out that the dictionary passing is only necessary if yo...		calebh
17002554	12.008673	-7.7711296	story	7.0	69.0	1525538809	10.462277	Monads for functional programming (1995) [pdf]	http://homepages.inf.ed.ac.uk/wadler/papers/marktoberdorf/baastad.pdf	jxub
17016207	11.960919	-7.4819417	comment	7.0	17.5	1525724790	7.112087	"Note kid asked ""dad what are you doing"", not ""what is functional programming"". That's a simple call for attention, and it was equally suitable to close the book and play frisbee with him."		avip
17038157	12.1296215	-7.2230983	comment	7.0	18.0	1525954558	-10.540121	"(mapcar #'string-downcase
        (list ""Hello"" ""world!""))This is a great example of why I don't want to use Common Lisp.Compare with Python:[word.lower() for word in (""Hello"", ""world!"")]Beating Node ..."		xyproto
17055960	12.296878	-7.3265452	story	7.0	155.0	1526158535	7.0653076	Reviving Smalltalk-78 (2014) [pdf]	http://freudenbergs.de/bert/publications/Ingalls-2014-Smalltalk78.pdf	pmarin
17107047	11.78952	-7.0188484	story	7.0	63.0	1526716006	-8.8935	Modifying the Python object model	https://lwn.net/SubscriberLink/754163/a38214c50e7b3ece/	Delgan
17138600	12.246657	-7.5826035	comment	7.0	32.5	1527111668	-11.428459	> The author complains a lot about how Kotlin is different from Java. Err.. it is a new language — it is supposed to be different — otherwise why bother?Kotlin advocates try to have it both ways. If i...		lmm
17143598	12.370726	-7.0187025	comment	7.0	22.5	1527167511	13.019498	Awk has it's uses.  If you use the command line you'll probably use Awk occasionally.I don't get the Perl hate.  Perl's unpopularity may have something to do with some of the languages design choices....		lasermike026
17196433	11.652187	-7.979063	comment	7.0	22.5	1527776081	10.251199	I don't know any go. I was able to read everything, like I wrote the code. Is go usually that easy? If yes, I think I should learn it.		minionslave
17222032	11.785502	-7.357186	comment	7.0	28.5	1528059869	-8.922366	I don't understand the appeal of static typing. It always feels like I'm adding overhead without receiving any benefits. I've worked in some fairly large dynamically typed codebases and have never run...		pg_bot
17281441	12.491938	-7.1110306	comment	7.0	38.0	1528686246	12.398104	I'm often curious as to what people are doing that makes them really think they need to venture outside their chosen scripting language. I use Ruby thinking I'll 'drop to Rust/Crystal' whenever I need...		vinceguidry
17283811	11.615741	-7.900743	story	7.0	177.0	1528722034	10.165475	Go code refactoring: the 23x performance hunt	https://medium.com/@val_deleplace/go-code-refactoring-the-23x-performance-hunt-156746b522f7	anastalaz
17311582	11.682532	-7.1104107	comment	7.0	24.5	1528983704	-8.962557	It would be nice if Python had a fixed length but mutable sequence type. MutableTuple anyone?		nerdponx
17347646	11.631726	-7.88755	story	7.0	64.0	1529422687	10.18957	The sequel to Writing an Interpreter in Go is coming this summer	https://compilerbook.com	misternugget
17417895	12.003491	-7.8618727	comment	7.0	62.5	1530200944	10.408817	The next two years or so will be really exciting.Rust is beginning to understand that they need more stability and LTS versions, and libraries are blossoming nicely.Ocaml already has a very mature mod...		qop
17464093	12.4270525	-7.697554	comment	7.0	23.5	1530805071	-11.323428	"I would wonder: is there any person with (enough of) experience with both Clojure and Kotlin to say how these two compare together as Java alternatives? Couple of years ago I was looking for ""Java.nex..."		newcrobuzon
17541985	11.751612	-7.3836923	comment	7.0	22.0	1531754546	10.331878	> The downside of course, is that there are now five extra parameters for the function, which looks painful. (Of course, the equivalent method in the OO version also had these five dependencies, but t...		default-kramer
17548807	11.615248	-7.84223	story	7.0	128.0	1531825957	10.212062	Participle: A parser library for Go	https://github.com/alecthomas/participle	pjf
17566205	11.701818	-7.47626	comment	7.0	18.0	1532008175	9.776714	Welcome to the world of enterprise-ready complex applications.  I agree that these cases should be covered by the compiler but man, there are mainstream languages that don't implement generics just be...		buremba
17567504	11.8310995	-7.304042	comment	7.0	19.5	1532015869	4.497039	Just use dynamic or better yet type-tag-free languages. Types are hard to get right and hard to reason about. Sure, there are some Sheldons out there who master it even under pasta applications, but m...		tabtab
17591554	11.987235	-7.0685434	story	7.0	30.0	1532338174	8.401703	Enterprise Objects Framework Developer’s Guide [pdf]	https://developer.apple.com/library/archive/documentation/LegacyTechnologies/WebObjects/WebObjects_4.0/System/Documentation/Developer/EnterpriseObjects/Guide/EOFDevGuide.pdf	tosh
17602475	11.671018	-7.958052	comment	7.0	43.5	1532449306	10.220471	Maybe it's a biased and distorted perception that I have, but Go seems to be the most consistent and unsurprising language I've used, and I mean this positively. I haven't written any Go for over a ye...		spraak
17745927	11.979395	-7.735314	story	7.0	101.0	1534101372	10.419911	My Haskell Journey from C#	http://cvlad.info/haskell/	jose_zap
17748717	11.813827	-7.3771405	story	7.0	55.0	1534148530	-8.26596	Curry–Howard correspondence	https://en.wikipedia.org/wiki/Curry%E2%80%93Howard_correspondence	tosh
17860614	11.609576	-7.8559146	comment	7.0	46.0	1535476293	10.195303	All I want is typesafe efficient higher order list operations like map, filter, reduce, flatmap, zip, takeUntil, etc. I don't care if Go puts them into the stdlib and only allows these operators to us...		jadbox
21045369	12.302066	-7.3234987	story	7.0	80.0	1569204139	7.0619535	Smalltalk-72 Instruction Manual (1976) [pdf]	https://pdfs.semanticscholar.org/442f/0f5205c7d4674612204ecc8357367dabbf45.pdf	mpweiher
21049842	11.947488	-7.4278855	comment	7.0	22.5	1569252662	7.134264	I consider FP to just be one of the tools in my programming toolbox. And apply it where it will fit best. Because not every problem should be solved with FP, nor with OOP for that matter.Though it is ...		aequitas
21065048	11.998846	-7.2016177	comment	7.0	38.0	1569362166	-6.0989566	"It's nice, I guess, but huge?Instead of:    async function main() {
       // code
    }
    main().catch(console.error);

I'll be maybe writing:    try {
      // code
    } catch (ex) {
      console.error(ex);
    }

Hrm?"		megous
21085603	12.151424	-7.5214543	story	7.0	108.0	1569532336	-10.608777	Aardvark – Real-time graphics and visualization in F#	https://github.com/aardvark-platform/aardvark.docs/wiki	dadt
21145755	11.639614	-7.0277476	story	7.0	44.0	1570101979	5.514552	The Rosie Pattern Language	http://rosie-lang.org/about/	rajiv_abraham
21170833	11.992485	-7.7493887	comment	7.0	19.0	1570353840	10.4390955	Maybe I missed it, but what's the best way to learn basic Haskell? I was expecting a tutorial. Or link to one.		Tempest1981
21170715	11.966106	-7.723768	comment	7.0	54.0	1570352056	10.444059	> but I never get the sense that they fit into an overarching strategy for how my life will be made easier by using Haskell.I would add that the elitist signaling that is rampant in functional programming in general and the Haskell community in particular is also not helpful.		rumanator
21227530	12.344423	-7.054463	comment	7.0	47.0	1570821607	13.186129	Perl5 -> Perl6 has been highly contentious.Perl6 is basically a different language much to the chagrin of many Perl users. A lot of Perl users are entrenched in Perl5.FWIW: I'm unclear why people continue to use Perl at all, I moved on in 2011.		bifrost
21236173	11.673549	-7.046318	comment	7.0	22.5	1570913600	9.121363	I personally find list comprehensions in python pretty horrible.They seem to exist only to do lots of stuff in one single line of code. You end up with totally impenetrable unreadable perl-esq garbage...		mattlondon
21238288	11.78447	-7.036418	comment	7.0	18.0	1570939563	8.155285	I think it's a syntax problem. ASCII doesn't have enough bracket characters to simply & clearly represent necessary language features. So it's harder for an intelligent human to sort and categorize th...		ErotemeObelus
21253983	11.591348	-7.01659	comment	7.0	33.0	1571095682	-10.458097	"> The ""walrus operator"" will occasionally be useful, but I doubt I will find many effective uses for it.The primary one I want is    if m := re.match(...):
        print(m.group(1))

and    while s :=..."		geofft
21253705	11.670505	-7.022847	comment	7.0	27.0	1571093452	-10.425671	I actually found an immense use for Walrus - used it to hack Python into doing pattern matching that is way more readable than without it:https://github.com/eveem-org/panoramix(source code for Eveem.o...		kolinko
21286487	11.929464	-7.610788	comment	7.0	33.5	1571347513	7.336093	EDIT: I wrote this comment before watching the video. I stand by this comment, but the video is very good and I wholeheartedly agree with its conclusions.As someone who writes pure FP for a living at ...		mbo
21323113	12.000686	-7.764956	comment	7.0	19.0	1571749399	10.431389	Could it be because learning Haskell was such a major effort for them that they now don't want that to go to waste?Learning Haskell (well) is a big investment. If you make that investment, of course y...		galaxyLogic
21410810	11.688701	-7.934045	comment	7.0	24.0	1572540555	10.19394	I don't think the backing of Go is even comparable to Java.Also Dart is a counterexample.I think the biggest reason for Go's success is that is it incredibly accessible. Everything around and in Go is...		dgb23
21560202	12.381198	-7.525697	comment	7.0	29.0	1574026698	12.861813	The Actor Model has been used in many important large applications [Bonér and Reisz 2017, Cesarini 2019]. In order to implement next generation Reusable Scalable Intelligent Systems [Hewitt 2019], the...		ProfHewitt
21636708	12.243151	-7.6405053	story	7.0	100.0	1574760174	11.936475	Scala.js 1.0.0-RC1	https://www.scala-js.org/news/2019/11/26/announcing-scalajs-1.0.0-RC1/	sjrd
21703413	11.8721895	-7.360491	comment	7.0	44.5	1575476079	8.130355	Compared to the currently fashionable Go, Java has quite little boilerplate. Java 8+ has a number of quite powerful APIs in the standard library, some limited type inference, reasonable interfaces tha...		nine_k
21736620	11.745192	-7.192467	story	7.0	198.0	1575822046	-8.983551	Statically-typed error handling in Python using Mypy	https://beepb00p.xyz/mypy-error-handling.html	Agathos
21741249	11.830614	-7.2758727	story	7.0	37.0	1575881279	9.199421	A brief look at async-await	https://javascript.christmas/2019/9	sveingjoby
39239574	12.282747	-7.0211463	comment	7.0	22.0	1706962038	13.172693	Man. I really wish we didn't have language discrimination. Perl is just so fast to write and has such a sizeable ecosystem of modules, and such great docs, that I can produce any program in Perl faste...		throwawaaarrgh
39330215	11.985592	-7.726059	story	7.0	6.0	1707599164	10.43269	Ask HN: Popular open source tool originally written in Haskell?		calebjosue
17877628	11.731887	-7.1128454	comment	7.0	55.5	1535643887	-2.9869144	I wonder if that would make java more suitable to game development since pauses need to be <8ms, ideally.		earenndil
17881197	11.73954	-7.189188	story	7.0	87.0	1535666486	6.9698663	Value-Oriented Programming	https://matt.diephouse.com/2018/08/value-oriented-programming/	glhaynes
17913668	12.284961	-7.3176055	story	7.0	121.0	1536102657	7.0554886	The Early History Of Smalltalk (1993)	http://worrydream.com/EarlyHistoryOfSmalltalk/	ohjeez
17914562	11.667054	-7.9720235	story	7.0	86.0	1536113180	10.2347765	Scrapping Contracts: a critique of the Go generics proposal	https://blog.merovius.de/2018/09/05/scrapping_contracts.html	Merovius
17987690	12.246995	-7.60077	story	7.0	90.0	1536937523	-11.38238	Kotlin Multiplatform for Android and iOS	https://www.kotlindevelopment.com/kotlin-multiplatform-in-action/	andraskindler
18061896	11.602369	-7.879493	story	7.0	48.0	1537826808	10.1846	A Minimal LRIT GOES Receiver	https://pietern.github.io/goestools/guides/minimal_receiver.html	brian-armstrong
18088758	11.712416	-7.1259527	comment	7.0	41.0	1538082935	-7.594418	Python really needs much better anonymous functions - Lambda expressions just don't cut it.To be clear, what Python does need is multiline, inline anonymous functions. In JavaScript/ES2015, the fat ar...		andrewstuart
18104761	12.062217	-7.81628	story	7.0	170.0	1538287925	10.425787	OCaml All the Way Down – How Jane Street Builds FPGA Designs [video]	https://www.janestreet.com/tech-talks/ocaml-all-the-way-down/	snaky
18154216	11.7456665	-7.59114	comment	7.0	17.5	1538815866	10.147614	For me, the epiphany about design patterns happened some fifteen years ago, when I was trying to understand and learn the abstract factory pattern, in PHP back then. After constructing all the concret...		BerislavLopac
18197575	11.645428	-7.093045	comment	7.0	21.0	1539297433	9.214684	Honest question: why would anyone make a list comprehension that's multiple levels deep? Isn't the purpose of comprehensions to provide quick-and-dirty inline for loops, where a full for loop is too verbose?		soVeryTired
18212633	11.842181	-7.622166	story	7.0	95.0	1539521172	-6.7362847	Pony 0.25.0 released	https://www.ponylang.io/blog/2018/10/0.25.0-released/	spooneybarger
18281906	11.984074	-7.716109	story	7.0	95.0	1540286061	-5.7220445	Applicative WTF?	https://blog.plover.com/prog/haskell/applicative.html	lainon
18293135	11.816723	-7.1253433	comment	7.0	29.5	1540394150	-8.946156	When I write Python it’s exclusively without OOP. It’s totally possible to write Python in a solely functional manner. You make heavy use of NamedTuple, Enum, itertools, functools, and mypy annotation...		ilovecaching
18293790	11.697737	-7.27118	story	7.0	196.0	1540397951	-8.850347	Algebra and the Lambda Calculus (1993)	https://people.csail.mit.edu/jaffer/lambda.txt	espeed
18315632	12.057471	-7.2307434	comment	7.0	24.5	1540647418	0.4920096	Not sure what this author is saying here. Types have nothing to do with being able to trust other systems and everything to do with the internal formal consistency of the code that you write.It's abou...		Aqueous
18332470	12.043591	-7.353377	comment	7.0	20.0	1540854419	7.1352763	"I always tried to decipher Alan Kay's notion of object oriented programming.Erlang with its active objects seems to me to fit precisely his description.
Active objects = the objects themselves decide ..."		snidane
18342070	12.164476	-7.500051	story	7.0	121.0	1540941497	-10.596253	Show HN: Giraffe – Functional ASP.NET Core web framework for F#	https://github.com/giraffe-fsharp/Giraffe	dustinmoris
18381744	12.0107975	-7.7747226	comment	7.0	23.5	1541420650	10.378261	I find that monads are easier to explain in the context of programming that in category theory.First, start with a functor.  In terms of programming, a functor is container with an associated function...		mikekchar
18383380	11.9046	-7.367601	comment	7.0	21.0	1541433949	6.977382	"> We  end  our  discussion  of  inheritance  with  a  cautionary  tale.   In  the  1980s,  a  very
large  multinational  company initiated  an  ambitious  project  based  on  object-oriented programmi..."		sevensor
18485993	11.709887	-7.02859	story	7.0	46.0	1542631559	8.324701	Java Code Challenge: Shortest Code and Lowest Latency	http://minborgsjavapot.blogspot.com/2018/11/shortest-code-and-lowest-latency.html	minborg
18526684	11.930816	-7.3794293	comment	7.0	30.0	1543150678	7.0917134	I read this quickly to see if this was the piece that should convince me.It was not. It is, IMO, a collection of strawmen.People have abused OOP? Yes.But- citing FizzBuzz Enterprise Edition (which is ...		eitland
18526864	11.606779	-7.164571	comment	7.0	22.0	1543154136	-6.962474	Great point... but doesn't it continue to prove the author's point that this is needlessly complex?It strikes me as bad design if something as simple as an action (hit) now needs to become it's own cl...		crazygringo
18562188	12.017445	-7.7160144	comment	7.0	20.5	1543514322	10.425905	"I'm personally very hyped for using Haskell natively on Lambda! In the keynote he mentions the partner sponsored runtimes, and actually said ""Scala and Haskell, you'll just have to bring your own!"" (as in, community effort)."		Tehnix
18609770	11.739268	-7.4753623	comment	7.0	39.5	1544027568	9.762133	> First off, I've seen some people suggest that type erasure is a problem because it leads to a loss of type safety. This isn't really true.I'd argue it's the opposite.Giving your programs the ability...		hota_mazi
18617870	11.634655	-7.1619706	story	7.0	45.0	1544103413	-8.828	Untyped Programs Don’t Exist	https://www.williamjbowman.com/blog/2018/01/19/untyped-programs-don-t-exist/	g0xA52A2A
18660309	11.815392	-7.16475	story	7.0	51.0	1544574424	-8.978953	Type hints cheat sheet (Python 3)	https://mypy.readthedocs.io/en/latest/cheat_sheet_py3.html	sytelus
18704940	11.705046	-7.439529	comment	7.0	20.0	1545115358	-8.760618	Does anybody care to explain dependent types? I’ve heard the term used in FP conversations but not sure I get it.		incadenza
18703245	11.964081	-7.717158	story	7.0	137.0	1545089172	10.408212	Dependent Haskell	https://serokell.io/blog/2018/12/17/why-dependent-haskell	Serokell
18799881	11.65052	-7.0828977	story	7.0	70.0	1546344439	9.118385	The fate of reduce() in Python 3000 (2005)	https://www.artima.com/weblogs/viewpost.jsp?thread=98196	tosh
18815374	11.628375	-7.19647	comment	7.0	19.0	1546526469	9.258799	I'm a huge fan of the lambda syntax :x -> x * 2It looks much cleaner than the traditional :lambda x : x * 2Would a PEP adding this syntax have any chance to pass ?		Majestic121
18914228	11.749972	-7.101484	comment	7.0	30.5	1547581355	-8.191236	> Mark classes as sealed by defaultPlease, no! This shouldn't be the default - it's a constant bugbear of mine where I want to extend a class from a library, and I can't because it's been sealed for no good reason.		GordonS
29733906	12.009717	-7.670222	comment	7.0	25.0	1640841670	10.333968	I'm never going to understand the 'mathmatical jargon' argument against Haskell (and similar). Yes, but this can be true in almost any language that allows abstractions. The math jargon is just a name...		toastal
29748292	11.597672	-7.2163215	story	7.0	30.0	1640960623	-4.2889743	Eon: Extensible Object Notation	https://kurtisknodel.com/blog/posts/iHL8o-i0l14NtRVVf_B5kA	Arch485
29795246	11.87147	-7.2798996	story	7.0	42.0	1641307419	9.19358	Code optimizations when using async/await	https://wolfoliver.medium.com/the-fallacy-of-async-await-c0df0f9dd59d	WolfOliver
29858348	11.984066	-7.7590003	comment	7.0	19.0	1641688129	10.423008	"I think analyzing languages through the lens of incentives (""what is this language pushing me towards/away from?"") is a great idea. But if Haskell's incentives make it well-suited for programming in t..."		nemo1618
29906177	11.652502	-7.9609375	comment	7.0	34.0	1641995035	10.22459	"Actually, the ""batteries included"" school of library design was a 20th century idea; the trend in the 21st century in all other ecosystems very much goes in the opposite direction: fewer features in t..."		codeflo
30001927	11.6444	-7.240412	comment	7.0	23.0	1642634472	-8.795565	They are especially useful when refactoring, or as a documentation tool.However, without a type checker, choosing your names wisely will get you a long way.I think anyone advocating type systems shoul...		amelius
30023202	12.450921	-7.0677705	comment	7.0	23.0	1642771846	-10.903057	"I dislike rubocop, not because I dislike linters (pep8 is fine), but because the defaults have strong opinions about things that don't matter    if foo? then
      blah
    end

will result in a compl..."		jjgreen
30045162	11.631012	-7.893545	comment	7.0	32.5	1642934355	10.2081	"""This is encouraging news for a language already known to be unusually both fast and easy""Hmm it's not known for that, is it? Go is known to be quite slow due to a weak compiler and a GC that optimize..."		native_samples
30091291	11.698396	-7.8819914	story	7.0	131.0	1643228937	10.222265	An embeddable Prolog scripting language for Go	https://github.com/ichiban/prolog	triska
30251452	11.700454	-7.2251534	comment	7.0	17.5	1644269248	9.165482	"I was pretty puzzled by the method name ""map"" in the examples.  Why would you call it ""map"" when there are no arrays or lists involved?"		zestyping
30256781	12.147635	-7.703716	comment	7.0	18.0	1644315797	-10.644438	F# means Windows right?  That is a pretty big turn off for some of us.  Ocaml seems perfectly nice though.		throwaway81523
30257542	12.164143	-7.4149237	story	7.0	67.0	1644322517	7.3416786	Functional Programming in Elixir with Witchcraft	https://blog.appsignal.com/2022/02/08/functional-programming-in-elixir-with-witchcraft.html	unripe_syntax
30360037	12.350811	-7.0303507	comment	7.0	21.0	1645020221	13.172514	Why only things like these float up to the front page, and not elegant and/or wholesome things written in Perl?		WesolyKubeczek
30371947	11.905855	-7.7070656	comment	7.0	24.0	1645097127	10.409341	I think that Haskell2010 could be the last Haskell standard. Modern Haskell has diverged to such a degree that it seems to be (almost) impossible to define a common standard. Even if they would, as lo...		hutrdvnj
30415727	11.676347	-7.9164224	comment	7.0	33.0	1645450766	10.180461	You can write a pretty trivial Java program to copy stdin to stdout but Java is still one of the enterprise languages and people writing enterprise applications don't tend to write this type of softwa...		smoyer
30444008	11.624265	-7.9388814	comment	7.0	55.5	1645638744	10.202115	"I struggled for years with a chronic misunderstanding of Go. I kept trying to compare it to the usual suspects in the ""next systems language"" crowd (D, Rust, Zig). That wasn't quite right.Once I reali..."		sblom
30496899	11.709823	-7.2806454	comment	7.0	19.0	1646028625	2.229901	Slightly unrelated, but this thread is giving me a serious learning itch. Any book or online class recommendations on lambda calculus, combinators and that whole area of CS? Preferably written for the experienced programmer but very average mathematician.		fouronnes3
30515286	11.748738	-7.405579	story	7.0	62.0	1646148395	2.48704	Understanding higher-kinded types	https://danso.ca/blog/higher-kinded-types/	dan-so
30538298	11.631661	-7.358387	story	7.0	18.0	1646293946	-8.621003	We don't need runtime type checks	https://stitcher.io/blog/we-dont-need-runtime-type-checks	brentroose
30547067	11.711636	-7.657814	story	7.0	110.0	1646341977	-7.0479603	Speeding up Go's built-in JSON encoder for large arrays of objects	https://datastation.multiprocess.io/blog/2022-03-03-improving-go-json-encoding-performance-for-large-arrays-of-objects.html	eatonphil
30622696	12.33421	-7.115488	comment	7.0	22.0	1646880729	12.348642	I'm a big Ruby fan, or at least I used to be. I had a hard time learning the language, because there are just too many ways to do the same thing. I would always second guess my memory and be forced to...		syspec
30656769	11.954658	-7.3688674	comment	7.0	20.5	1647133005	7.1136384	I left OOP when I left Ruby back in 2015. I won't be going back to OOP ever. I use Elixir now.How much C# is functional these days? I know linq had the beginnings of it waaaay back in 2010 but do you ...		sergiotapia
30689095	11.669598	-7.97517	comment	7.0	19.5	1647369166	10.284839	My favorite feature is a tiny, couple line bug fix that I pushed hard to get included during the feature freeze. Full details here, but a summary is below: https://github.com/golang/go/issues/51127For...		AaronFriel
30689114	11.613135	-7.899057	comment	7.0	30.0	1647369217	10.13573	For me the most puzzling aspect of Go is channels. Ada tried CSP (Concurrent Sequential Processes that Go channels are based on) in eighties and people quickly realized that it lead to bad performance...		_0w8t
30697421	11.939553	-7.5883713	story	7.0	79.0	1647429207	8.92419	Types versus sets (and what about categories?)	https://lawrencecpaulson.github.io/2022/03/16/Types_vs_Sets.html	carnitine
30706806	11.696484	-7.300994	comment	7.0	26.5	1647483113	8.94571	"I don't see why resolution without a ""symbol table"" is a big deal. Knowing whether A is a type or not resolves these fairly easily. And in well written code, it should generally be obvious whether A is a type or not so it should not be a readability problem either."		omegalulw
33196269	11.6513815	-7.168619	comment	7.0	22.5	1665693989	-10.51783	>lists are an excellent data structure for representing any kind of heterogeneous and/or hierarchical dataI found this a really curious statement. Linked lists made sense given the limitations in comp...		eduction
33226809	12.011657	-7.761777	comment	7.0	18.5	1665951194	10.41363	"Why is Haskell, a comparatively obscure language (to Python, C++, etc.), so popular with topics in the orbit of ""web3"" (blockchain, crypto, metaverse, etc.)?"		reikonomusha
33259630	11.659071	-7.233675	story	7.0	35.0	1666171898	-8.770849	Lambda Operator in LaTeX	https://commutative.xyz/~miguelmurca/blog/x/lambda.html	miguelmurca
33283938	11.866499	-7.1210566	story	7.0	73.0	1666321101	-10.745209	Python and Async Simplified (2018)	https://www.aeracode.org/2018/02/19/python-async-simplified/	dil8
33329660	12.250023	-7.5415535	comment	7.0	52.0	1666701451	-11.3786	One thing that Kotlin got going for it is the tooling. I mean, the creator of Kotlin creates some of the best programming tools out there so I'd imagine (without actual experience of Kotlin) that it h...		commitpizza
33329818	12.094167	-7.0613384	comment	7.0	38.0	1666702415	-11.374574	> Sometimes, the tooling is even more important than language features IMO. It makes developers move quicker, find bugs easier and so on. I like the idea of Kotlin, that it can compile to jvm bytecode...		nordsieck
33331877	12.214255	-7.535129	comment	7.0	28.5	1666711595	-11.350584	I attribute this to the fact that Kotlin was developed by the same team that created IntelliJ, and fantastic IDE support was a requirement from day zero.A big part of why Kotlin works is because IDE s...		thomascgalvin
33429039	12.130264	-7.873916	comment	7.0	22.5	1667344197	-3.266472	"Has anyone actually seen a real world problem being solved via Category Theory? As in, ""in the wild"", instead of being mentioned on a website dedicated to Category Theory?To me it seems a lot like the..."		jiggawatts
33435423	11.879979	-7.505334	comment	7.0	45.0	1667395740	-4.7394514	This is just an appeal to the law of averages. I don't believe that you're actually considering ada, cobol and forth for new projects.> One of the big reasons why FP languages have so little penetrati...		pessimizer
33437394	12.037101	-7.809847	comment	7.0	25.0	1667402805	10.405306	"""A monad is just a monoid in the category of endofunctors"".  Anyone who says that - or anything anywhere close to it - is gatekeeping, no matter how true the statement is.And it's not just the stateme..."		AnimalMuppet
33510976	11.715767	-7.8779445	comment	7.0	30.5	1667849123	10.174043	"Curious to know the rationale behind the ""batteries not included"" approach.One of the advantages of Go imho is it's solid stdlib, which includes production-ready HTTP server/client, JSON, XML, crypto libraries and more."		endorphine
33547882	11.883125	-7.101046	comment	7.0	23.5	1668094250	-10.747648	Ok. This is what has been a huge hangup for me.It really seems that if you're doing asyncio, you must do EVERYTHING async, it's like asyncio takes over (infects?) the entire program.		bjt2n3904
33570717	11.651276	-7.973563	comment	7.0	17.5	1668235971	10.249526	Looks good, will have to try it. What are the competitors to this? I ask because I want to do my next side project in go.		lelanthran
33595867	12.019345	-7.807911	story	7.0	8.0	1668441410	10.422013	Ask HN: ELI5 What Is a Monad?		_448
33652952	11.638732	-7.961138	comment	7.0	19.0	1668768784	10.21089	Isn’t the point of go is that go fmt follows the languages global style guide?		bushbaba
33654192	11.985337	-7.7248282	story	7.0	83.0	1668777788	10.455941	Okapi – A micro web framework for Haskell	https://www.okapi.wiki/	njrc9
33666694	12.048468	-7.8325467	story	7.0	88.0	1668829284	10.405723	Reverse-mode algorithmic differentiation using effect handlers in OCaml 5	https://github.com/ocaml-multicore/effects-examples/blob/master/algorithmic_differentiation.ml	nequo
33718416	11.737873	-7.1365147	comment	7.0	24.0	1669207044	-8.9804	"One thing bad is the word 'class'. What it is supposed to even mean? It was some fancy concept by stupid Normen when defining Simula. My Simula teacher said that you could just translate it as ""design..."		timonoko
33791147	11.685678	-7.345615	comment	7.0	47.0	1669746041	-8.803791	You shouldn't write test to validate types in the fist place. Testing for the correct behavior should be enough.I like static typing, but his this is just a silly argument. If the program behaves correctly according to spec, how can the types be wrong?		goto11
33936984	11.923855	-7.678528	comment	7.0	21.5	1670707608	10.386525	30 years ago Haskell was the winner. Conciseness was a major feature.Has anyone put this to the test on larger projects?10,000 lines of Haskell have the same functionality as 100,000 lines of C++?		melling
33943067	11.628936	-7.958266	comment	7.0	51.5	1670766013	10.244741	"> Years and years of discussions about Go's poor and verbose error handling...with majority of users saying that it's actually great and simple, unlike ""usual"" approaches...> Many ""features"" of Go are..."		divan
34012027	12.270393	-7.3078837	comment	7.0	23.0	1671177730	7.1615868	"Recently I wanted to teach my kid Smalltalk and I deep-dived into the current Smalltalk landscape... I wanted to show him how to create desktop apps using a ""UI Designer"" tool (like it was possible wi..."		pulse7
34016581	12.072424	-7.836309	comment	7.0	19.5	1671208547	10.442268	What OSS is out there that uses OCaml?		InitEnabler
34093026	11.751026	-7.8578243	comment	7.0	18.5	1671715999	10.239462	Unrelated: but why does Google use Kotlin(for developing Android apps) and Rust when they have a nice little language in Go. Genuinely curious: Is Go not a good fit for developing Android apps(Is targeting JVM the concern?) or system programming(using Rust in Android systems), what does it lack?		nf17
26540410	11.644622	-7.957832	comment	7.0	25.5	1616419396	10.228424	I remember Rob Pike talking about how each language has its own way of doing things and it's bad to keep adding all features to all languages. This only makes them all end up being the same he said.Th...		jimmyed
26565632	12.196601	-7.500937	comment	7.0	18.5	1616583583	-11.36456	Kotlin compile times are killing me.In a current project, I have fewer than 20K lines and it's 50ish seconds for a clean re-compile on a very decent laptop (less than a year old, 32Gb RAM, quadcore i7...		derriz
26603088	11.684417	-7.8585067	comment	7.0	21.5	1616859729	10.136901	Go has a ton of potential in the data science space.A basic DataFrame library would go a long way.  Doesn't have to be as full featured as Pandas.  Just something that's maintainable and portable.I wr...		MrPowers
26605663	11.809495	-7.0598826	comment	7.0	23.5	1616879425	-8.7557335	Not trying to start anything, but what's functional about Python? It doesn't have/support tail recursion, a strong type system, pattern matching, immutability-by-default for lists and dictionaries.Fro...		sabellito
26663129	11.707118	-7.8551555	comment	7.0	67.5	1617296360	10.181889	Java gets a bad rap from people that used it late 90's through early 2000's and got burned out by XML and design pattern heavy frameworks but its a lovely language that with a little discipline can be...		voidfunc
26665387	12.282298	-7.5211844	story	7.0	134.0	1617307656	12.8152485	Goblins: A transactional, distributed actor model environment	https://docs.racket-lang.org/goblins/	snicker7
26758151	12.266247	-7.688395	story	7.0	136.0	1618018235	10.337462	Dream – Tidy Web Framework for OCaml and ReasonML	https://aantron.github.io/dream/	yawaramin
26769650	11.671143	-7.251048	story	7.0	72.0	1618142067	-8.77999	Binary Lambda Calculus (2012)	https://www.ioccc.org/2012/tromp/hint.html	tosh
26935101	11.655545	-7.916784	comment	7.0	41.5	1619374696	10.199444	As an experienced Java programmer , I decided to do a project in Golang to see for myself what the hype was all about. And it was...underwhelming. The Go plugin for VScode barely works - terribly slow...		pyjug
26940983	11.994076	-7.762035	comment	7.0	38.5	1619431765	10.409711	"And why restrict oneself to just two colours? Haskell monads also allow one to abstract over the ""colour"", such that one can write polymorphic code that works for any colour, which I think was the mai..."		willtim
27085414	11.733609	-7.0557227	comment	7.0	26.0	1620466200	8.227521	Looking at the 99% latency and memory usage Java is pretty far from the winner. 99% latency actually matters a lot.		robert_foss
27095922	12.115852	-7.89068	story	7.0	227.0	1620568658	10.425225	OCaml is 25	https://discuss.ocaml.org/t/25-years-of-ocaml/7813	fortran77
27132425	12.4097395	-7.3977704	comment	7.0	19.0	1620838389	12.936192	Curious, do you use typespecs and dialyzer? If so, how do you find it?Elixir checks pretty much every box I'd want in a language, but after dealing with nil in Ruby for years and having fun with TypeScript... I'm feeling more drawn to working with type systems.		mindfulmore
27143371	11.631327	-7.9550376	comment	7.0	32.5	1620920560	-13.82822	Go did rise to prominence by being the programming language behind such high profile software as Kubernetes, Docker, and Prometheus. None of those are business applications and Rob Pike (ex Bell Labs ...		gengstrand
27175024	11.607305	-7.932418	comment	7.0	27.5	1621184160	10.191101	I want to like Go but it's just too much of a mess of a language, and the power it gives you isn't enough to justify it.  C++ is at least fast.  You can see this in the proposal for generics[0], where...		gct
27245511	12.056132	-7.3374677	comment	7.0	26.0	1621683091	7.1489196	People say that OO is “meant” to be about message passing all the time, quoting Alan Kay and others. I never found this helpful. No mainstream OO language works this way, even Smalltalk doesn’t. You c...		codeflo
27252899	11.716524	-7.408697	story	7.0	172.0	1621752011	-8.695821	Counterexamples in Type Systems	https://counterexamples.org/intro.html	tempodox
27346464	11.655765	-7.9195323	story	7.0	85.0	1622482925	10.213459	Dragon Go Server	https://www.dragongoserver.net/	Tomte
27412460	11.9002695	-7.3710127	comment	7.0	49.0	1622979930	7.0946164	Classes were never definitional for OO, so prototypes, as originated in Self and adopted in JS, are not a violation of it.Function calls and messages are, fundamentally, isomorphic. Messages were neve...		ncmncm
37613619	11.656191	-7.049817	comment	7.0	18.0	1695397965	6.3496246	Pattern matching is a neat tool to keep in the toolbox. When it's the right tool for the job, it is really cool and is a lot cleaner than a bunch of conditional checks. However, I rarely reach for it....		unregistereddev
37639631	11.921632	-7.545852	comment	7.0	38.5	1695615427	10.352301	Purely functional introduces lots of issues on it's own. (Look at all the monad insanity Haskell has to do to get the equivalent of a print statement).		TylerE
37667731	11.617422	-7.9168983	story	7.0	140.0	1695773145	10.202989	Deconstructing Go Type Parameters	https://go.dev/blog/deconstructing-type-parameters	psxuaw
37688341	11.693711	-7.434861	story	7.0	148.0	1695902422	-10.828652	How async/await works internally in Swift	https://swiftrocks.com/how-async-await-works-internally-in-swift	ingve
37738622	11.926741	-7.660632	comment	7.0	24.0	1696257072	10.354775	"I don't mean to be anti-intellectual. But as someone who doesn't know much Haskell and likes to hand roll a precedence climber, my reaction to this is ""so what?"". But really, what are the implications..."		bruce343434
37797475	11.658281	-7.42827	comment	7.0	21.0	1696633720	-3.9932024	The existence of workflow DSLs seems like a symptom of a systemic weakness in common programming languages.We use languages best suited to writing Windows GUIs or Linux kernels to implement business r...		jiggawatts
37844207	11.740381	-7.4763064	comment	7.0	25.5	1697031465	-5.0662947	I understand the author's position, and despite its usefulness, I think the numbered arguments are an inelegant solution. In Haskell, by way of comparison, any one-parameter function can be used as th...		hackyhacky
37963921	11.966653	-7.7387514	story	7.0	85.0	1697860290	10.406185	Reimplementing git clone in Haskell from the bottom up (2013)	https://stefan.saasen.me/articles/git-clone-in-haskell-from-the-bottom-up/	subset
38015756	11.928898	-7.652137	comment	7.0	19.5	1698256022	10.44646	Regarding variable names strongly consider keeping the first variable name which comes to your head. It is simple, straightforward.I often see overly elaborate variable names where I know the author t...		ilrwbwrkhv
38110009	12.275878	-7.0690227	comment	7.0	25.0	1698909695	13.158441	This is my first time hearing about Raku (the language this tool is apparently written in), and after a quick look at the website[1], I am not sure why I would want to use Raku vs any other language i...		fastball
38237788	11.758586	-7.880658	comment	7.0	25.0	1699769734	-2.196993	Can't comment on the comparison to Rust, but I recently spent quite some time learning OCaml, working through the excellent and freely available cs3110 course https://cs3110.github.io/textbook/cover.h...		sintheta
38268523	11.830669	-7.3563647	comment	7.0	26.0	1699991032	12.81306	">>""In reality, gradual typing ends up giving you the worst of both dynamic and static typing: you get the uncertainty and lack of safety (in dynamically typed contexts) of dynamic typing, and the cost..."		otoburb
38332585	11.710818	-7.168553	story	7.0	78.0	1700401654	6.7762737	Object-Oriented Programming in Oberon-2 [pdf] (1994)	https://ssw.jku.at/Research/Books/Oberon2.pdf	AlexeyBrin
38349704	11.919562	-7.772745	comment	7.0	25.0	1700495599	10.429386	Does Roc have any features that a Haskell programmer could consider improvements?		tromp
38366606	11.884431	-7.4036407	comment	7.0	20.5	1700586891	5.865377	"How I wish these ""for children"" programming languages were more focused on functional programming, rather than being so imperative."		sssilver
38392385	12.045239	-7.2417984	comment	7.0	29.0	1700745197	9.159046	Currently, promises are the de-facto way of handling asynchronous tasks in JavascriptNot really. Most of the Node API is still reliant upon callbacks and the frontend absolutely doesn’t care. With one...		austin-cheney
38410371	11.827482	-7.147781	story	7.0	29.0	1700876864	-8.9773655	Pythonicity: Composition vs. Inheritance	https://coady.github.io/posts/composition-vs-inheritance.html	PaulHoule
38413064	11.967387	-7.6926103	story	7.0	199.0	1700914936	10.4064	Shh: Simple Shell Scripting from Haskell	https://github.com/luke-clifton/shh	subset
38417954	12.029559	-7.8112345	comment	7.0	27.0	1700956559	10.444388	Hi! Model creator here. I happen to be a cultural historian and that's a main use case that I see. It's not complicated to learn about past events but having a general idea of the culture of the time ...		Dorialexander
38488967	12.416138	-7.110441	comment	7.0	35.0	1701449757	12.36581	My problem with Ruby is not so much the syntax. I kinda like this one-line-function feature, and I enjoyed it when using in C#.My problem is the fact Ruby practitioners have a tendency ABUSE the usage...		whstl
14710713	12.448782	-7.4068766	comment	7.0	20.5	1499351835	12.908761	Picking up new languages is fun.I have to say things like this tickle my funny bone though:>   def backlog(board_id) when is_integer(board_id) doWhat happened to good old fashioned function foo (int bar) :)Is there an equivalent to typescript for elixir?		blindwatchmaker
14764784	11.652471	-7.958895	comment	7.0	23.0	1499977033	10.229468	I must say that whenever there is a discussion about the merits of the Go programming language, it really feels hostile in the discussion thread. It seems that people are seriously angry that others e...		elliotmr
14764330	11.785225	-7.772701	comment	7.0	38.0	1499973738	10.480162	"I'm still sitting here shocked that a language where ""err"" (and the keywords that check around it) are used an order of magnitude more frequently than all other syntax in that language, has achieved this much popularity: https://anvaka.github.io/common-words/#?lang=go"		pmarreck
14766529	11.600777	-7.7589025	comment	7.0	22.0	1499992203	9.83053	It's generally the opinion of the Go community that map, reduce and filter are bad ideas due to how easily they are abused. A for loop gets the job done easily enough. If you've ever worked with data ...		spyspy
14825988	11.969771	-7.7255807	comment	7.0	37.5	1500711065	10.405702	As a Haskell proponent I'd be really interested to hear specifically what it is that you'd like to do in Haskell but can't.		tome
14834318	11.944751	-7.708117	story	7.0	103.0	1500843099	10.4164715	GHC 8.2 Released	https://ghc.haskell.org/trac/ghc/blog/ghc-8.2.11-released?utm_content=buffer256fb&utm_medium=social&utm_source=twitter.com&utm_campaign=buffer	houli
14928694	12.44329	-7.8562546	comment	7.0	24.5	1501855260	10.426494	"If ""expanding your brain"" is really what we want to optimize, why not learn Haskell?  Or for that matter, why not learn something even more strongly typed, like Agda or Idris?  Or even a theorem prove..."		cderwin
14929637	12.284477	-7.4623322	comment	7.0	29.5	1501862317	11.926847	JetBrains is kinda crushing it. I've spent the last two days looking into Kotlin. I didn't realize not only that Kotlin can compile to JS but also that you can interact with say React from it. So you ...		adamnemecek
14996802	11.929366	-7.3435493	comment	7.0	30.5	1502521235	7.0272284	OOP did more to set back program design than anything else I can think of. It was incredibly wrong, has sent so many smart minds down a poor path. If for example functional has taken prominence in the 90s we'd be in a much better place now.		BoiledCabbage
14997115	11.855858	-7.331539	comment	7.0	36.5	1502527923	7.179708	I think the big problem with OOP is that it's designed to simulate the real world but has the real world backwards.Real world objects are a composition of parts. The taxonomy of those objects, and its...		jwdunne
15005569	11.767067	-7.272717	story	7.0	266.0	1502666818	-5.9642386	Efficient Immutable Collections [pdf]	https://michael.steindorfer.name/publications/phd-thesis-efficient-immutable-collections.pdf	tjalfi
15028311	12.147367	-7.522684	comment	7.0	38.5	1502897708	-10.592306	This article retreads common complaints about the F# experience for outsiders that I've seen numerous time. I'm going to go a different direction.The problem with the F# community is that they keep as...		nickpeterson
15028368	12.127003	-7.4730453	comment	7.0	32.0	1502898115	-10.596943	I disagree with this, you can sell F# to C# developers - things like type providers for SQL checking their query strings in compile time and no extra build step to produce SQL type definitions vs mons...		rubber_duck
15047817	11.783583	-7.322636	comment	7.0	37.5	1503075375	-8.959434	Strong typing is great when I've already made sense of how the logic should flow and I'm ready to solidify my work into something stable and extensible over time. It's not so great when I'm trying som...		rocky1138
15058698	11.98769	-7.7315397	story	7.0	234.0	1503241893	10.434938	Rolling Your Own Blockchain in Haskell	http://www.michaelburge.us/2017/08/17/rolling-your-own-blockchain.html	nicolast
15063332	12.226596	-7.601242	comment	7.0	29.0	1503310031	-11.419491	I wonder why Kotlin beat Scala in this virtual programming language traction game. I don't write code for the JVM anymore, but Kotlin occupies the same space as Scala.Was it compilation speed? Corporate support?		ojosilva
15105750	12.081298	-7.593846	comment	7.0	20.0	1503759958	7.313201	This is fantastic. I have played around with Clojure and Haskell a bit, but really want to get into functional programming more. Not to hijack the thread, but I guess I am having trouble getting start...		altotrees
15125181	11.864719	-7.0478177	story	7.0	84.0	1504022464	5.7652006	Design patterns implemented in Java	https://github.com/iluwatar/java-design-patterns	PleaseHelpMe
15126158	11.935272	-7.0534954	comment	7.0	21.5	1504028918	7.9402714	"""Design patterns implemented in Java""I'd argue that Design Patterns mostly appeared because of Java. Because of people hitting the wall with Java; Java does not allow metaprogramming; Java did not all..."		flavio81
15206339	12.293796	-7.321431	story	7.0	117.0	1504951388	7.080071	Smalltalk Envy	https://paulhammant.com/2017/09/01/smalltalk-envy/	mpweiher
15240761	11.843969	-7.607889	comment	7.0	53.5	1505325233	10.071593	It's always amusing to watch programmers learn a tiny piece of mathematics and turn into a totem. All those data structures would work just as fine without a monoid formalization, and one can use all their power with no attention given to algebraic axioms that define a monoid.		dkural
15240962	11.763864	-7.5332623	comment	7.0	25.0	1505326303	10.069445	"Here's the ELI5 of monoids used in programming that might help get the idea across:Conceptually, a monoid is anything that:- Has a ""zero-value"" (mempty, e.g., 0)- Can be ""appended"" together (mappend, ..."		wyc
15288353	11.781744	-7.1699805	comment	7.0	21.0	1505851810	8.355594	I'm working on a toy game engine for fun. What about the pattern of having a globally accessible list of game entities? EG when a bullet hits an object do (psuedocode)  Game.getEntityById('player').ap...		yathern
15323556	12.22822	-7.636212	comment	7.0	18.0	1506233657	11.925385	How important is this to understand in practice for a Scala programmer?		smegel
15386275	11.777769	-7.0872555	comment	7.0	26.5	1506967684	-8.931726	">  In dynamically typed languages you kind of just grep and hope the name is not too common.For four days, I spent debugging a python production script because in one place I had typo'd "".recived=true..."		gopalv
15392855	11.666292	-7.91238	comment	7.0	25.0	1507042860	-11.71804	I think it's really great to see a project like this coming out, as someone who loves writing Go on the server side, but has been grinding my teeth through learning JS to be able to do client-side wor...		jd20
15399847	12.254809	-7.2807183	comment	7.0	35.5	1507118520	7.0969887	My beef with Smalltalk is that it's far too much a world onto itself for my taste.  Java is already a bad enough citizen of Unix but Smalltalk takes it to a new level.  If Lisp and Scheme can integrate well into Unix, why can't Smalltalk?		tempodox
15472611	11.85074	-7.1300497	comment	7.0	45.5	1507995401	9.16153	"One thing to note is that async programming like in JavaScript is ""threadless"" programming which means all your data-structures are by definition thread-safe.It's one less complication in your logic w..."		galaxyLogic
15492410	11.977855	-7.745293	story	7.0	148.0	1508258538	10.402976	Hotswapping Haskell	http://simonmar.github.io/posts/2017-10-17-hotswapping-haskell.html	trevorriles
15504714	12.2385025	-7.625587	story	7.0	56.0	1508376160	11.933247	Scala Native with Denys Shabalin – Software Engineering Daily Podcast	https://softwareengineeringdaily.com/2017/10/16/scala-native-with-denys-shabalin/	lihaoyi
15509402	11.860996	-7.3573523	comment	7.0	25.5	1508431253	7.1600633	"Isn't this going a little overboard?I remember when OOP came up, some people made functions illegal. So instead ofs = sinx(x)the OOP way wasm = new Math()
s = m.sin(x)And instead of switch statements ..."		maxxxxx
15528660	12.303662	-7.157056	story	7.0	115.0	1508702803	12.381833	Show HN: Ruby static type checker – proof of concept	https://github.com/stereobooster/diamondback-ruby/tree/master/examples	stereobooster
15549101	11.802897	-7.3483114	comment	7.0	24.5	1508929922	-8.908673	I'm a big fan of strong static type systems. I believe type-safety increases code quality significantly.I used to think several years ago, that the main benefit of strong static typing was code safety...		winter_blue
15558294	11.858013	-7.6192875	comment	7.0	32.0	1509021732	12.821772	Author here. Small bit of background. I'm VP of Engineering at Wallaroo Labs and a member of the Pony core team (many folks at Wallaroo Labs are now actively involved in the Pony community).Happy to answer any questions here or if you prefer, via email:sean@wallaroolabs.com		spooneybarger
15571156	12.118823	-7.3527555	comment	7.0	21.5	1509130401	7.037826	This is really well written and seems to agree with the traditional FP lore. I'm curious what led Alan Kay then to OOP in Smalltalk.		kmicklas
15574841	12.07505	-7.791145	comment	7.0	18.5	1509191687	10.416418	So they've changed yet another piece of core, defining OCaml syntax (the lack of C-parens everywhere) for the worse, obfuscating currying in the process. But that's just my opinion, I guess. I don't h...		ubertaco
15591249	11.869578	-7.5524745	comment	7.0	27.5	1509427255	13.624278	> Typed Racket supports refinement types and dependent function types. Previously an experimental feature, refinement types allow types to describe more interesting properties of values, especially in...		Buttons840
15603906	12.448673	-7.8575044	comment	7.0	28.5	1509559777	10.4766655	"The dueling rhetoric is the same rhetoric that has been around for decades: Some people really feel type systems add value; others, feel it's a ball and chain. So which is it? The answer is probably ""..."		bpolverini
15676110	11.90715	-7.397276	story	7.0	103.0	1510404098	7.307297	Plain Functional Programming by Martin Odersky [video]	https://www.youtube.com/watch?v=YXDm3WHZT5g	cfarre
15694616	12.234743	-7.5006914	story	7.0	29.0	1510664771	-11.349192	Show HN: Http4k: Server as a Function. In Kotlin. Typesafe. Without the Server	https://www.http4k.org/blog/meet_http4k/	tarkaTheRotter
15740340	12.228079	-7.5503845	comment	7.0	19.5	1511190337	-11.375834	Honest question. I have been checking Kotlin since a while but haven't found a compelling case for me to start using it. All the features I have seen so far are syntactic sugar.Even the article quote ...		pmelendez
12408765	11.773485	-7.405492	story	7.0	39.0	1472762907	10.177793	Go Patterns: A curated collection of idiomatic design patterns	https://github.com/tmrts/go-patterns	ghodss
12434458	11.947671	-7.4589076	story	7.0	53.0	1473151537	7.3379307	Advantages of Functional Programming in Java 8	https://bulldogjob.pl/articles/156-the-advantages-of-functional-programming-in-java-8	Kellanved
12446170	11.925298	-7.320909	comment	7.0	27.0	1473275271	-6.9573774	This is the fundamental premise that object oriented thinking was created to solve.  You cannot understand a sufficiently advanced system from both an overview and granular view.  You have to either s...		tsunamifury
12469856	11.603059	-7.079877	story	7.0	140.0	1473524669	-10.151845	Owl Lisp – A purely functional Scheme that compiles to C	https://github.com/aoh/owl-lisp	rcarmo
12497522	11.922212	-7.127958	comment	7.0	21.5	1473865014	9.133785	Am I the only one who is happy using normal callbacks? I think they are the best representation of the asynchronous flow.		Kiro
12529465	11.672794	-7.867539	comment	7.0	28.5	1474267781	10.176876	I don't see the point of writing a machine learning package in Go.Go is designed for system programming, which is the opposite of scripting.  In scientific computing, interactivity is an important fea...		thinxer
12530442	11.686024	-7.1913548	comment	7.0	24.0	1474284113	-7.116379	"Because it's a functional language.
And other than noisy functional language fans, most people  prefer imperative programming."		jbb555
35197670	11.993994	-7.019803	comment	7.0	47.5	1679063847	7.967328	Off-topic but about Java generally:Java is such a storied and long-running and used-almost-everywhere language especially in Data Engineering (see all the Apache Data Eng projects like Calcite, Hudi, ...		gigatexal
35200897	12.228185	-7.47713	comment	7.0	21.0	1679077446	-11.4008	In the world of web development why would one pick Java(or Kotlin) over TS/node.js ?		ithrow
35207824	11.751581	-7.239047	comment	7.0	33.5	1679135101	9.126876	Nope, that's a fallacy. Sync and Async code have inherently different semantics and trying to unify them will always fail, no matter what technique you try to apply. It has been tried more than often enough.		valenterry
35211764	11.624859	-7.9529724	comment	7.0	30.5	1679164153	10.237524	"This is a pretty good vignette of how Go is designed. ""Users don't need this feature (immutability, polymorphism, etc.), let's not include it. Ah crap, turns out we actually need it for a core languag..."		wyager
35365070	11.810246	-7.3884296	comment	7.0	30.5	1680130686	10.429022	"Or they might be just creating a Yet Another Language precisely because they are luminaries of functional programming. Those often tend to chase a yet another unattainable dream of ""the one true funct..."		illiarian
35401176	12.454115	-7.488224	comment	7.0	41.0	1680363966	12.902708	Wouldn't Erlang be much more efficient if it simply compiled to the JVM?		amelius
35436597	12.154418	-7.2267866	comment	7.0	19.0	1680596162	8.537862	I'm working with an ECS at $dayjob. But I'm starting to question one aspect of them. Composition of functionality makes sense. And systems acting independently and only on objects with related compone...		strictfp
28014397	12.490827	-7.050303	comment	7.0	20.0	1627695008	12.356773	It's impressive to me that you can build a project on something (here Ruby), and if you get big enough that the initial decision is a problem for some reason (here performance), you can just improve o...		Zababa
28140964	11.881854	-7.2838426	comment	7.0	33.0	1628683497	-8.990999	My theory is that these career evangelists have spent too much of their careers doing just that: evangelizing. They haven't actually been writing code or building software. They've just been telling e...		IceDane
28191308	11.686141	-7.2869363	story	7.0	88.0	1629053315	9.162858	Loom: Project Loom Early-Access Builds	https://jdk.java.net/loom/	based2
28214222	11.725671	-7.291701	comment	7.0	35.0	1629230724	-8.926795	"I'm not so sure that I sympathize with your example.  Why not a type for even numbers?  Odd, prime, not-prime, etc?You really are asking for a type that is ""valid data.""  Commendable, but not a static..."		taeric
28254463	11.655381	-7.6389027	comment	7.0	19.0	1629523545	10.123513	I feel like it pretty much always turns out that the things you can't do without generics are, like, second-order things. Higher order functions, type safe custom collections, those are tools. What we...		tptacek
28253978	11.637533	-7.957226	comment	7.0	23.0	1629517261	10.206721	Super excited for this. If you haven't checked out the latest proposal, here's an example of what Option/Result box types might look like (obviously not ready for release, just an experiment):https://go2goplay.golang.org/p/krvTH1_7lwX		peter_l_downs
28283409	12.140766	-7.5006924	comment	7.0	37.5	1629761658	-10.608416	I'd really like to know the negatives of this approach.I want to introduce F# to my workplace. I have the authority to do it but lack the experience to back it up. I don't want to cost the company meg...		xupybd
28359239	12.250394	-7.5331435	comment	7.0	27.5	1630348582	-11.416532	I'm the author of the article, it's always fun to see your own articles pop up on HN unexpectedly.This post was written several months ago and in the meantime I have given up on trying to cobble somet...		vbsteven
28479340	12.021752	-7.7959623	comment	7.0	18.5	1631265942	10.434177	I am not a haskell pogrammer but reading about monads it seems much ado about nothing. It seems that one does not need to understand category theory to understands monads. Basically, I would say, in v...		cjfd
28534264	11.598293	-7.6443563	comment	7.0	20.5	1631670931	9.665872	"In my opinion, async is such a mistake because it exposes a complicated abstraction to developers that could (and should!) be totally hidden by the runtime. Async ""feels"" cool and powerful because you..."		daenz
28544342	11.624377	-7.898803	comment	7.0	21.5	1631740048	10.210679	Because Go doesn't support userland generic types, I see liberal use of `interface{}` types in APIs. There must be a better way.		acchow
28564828	11.620518	-7.8597393	comment	7.0	26.0	1631882999	10.071556	One problem with golang's wasm target is that the generated binary is huge. For instance, I checked app.wasm of this documentation site and the four examples listed at https://go-app.dev/built-with:0....		oefrha
28583490	11.872372	-7.4068313	comment	7.0	49.5	1632051058	-8.739643	I've actually grown to dislike currying, it seems like a neat idea when you start using it, but whenever I come across it in real life code it just results in layers and layers of yuk - making me want...		tomxor
28585165	12.192552	-7.627833	comment	7.0	26.5	1632065902	11.921347	The comments about Scala resonated. I've been working in a a large Scala codebase for the past few months. I've become a partial fan of the language, however: there have been multiple conversations li...		dboreham
28643511	11.7056265	-7.9703374	comment	7.0	18.5	1632496261	10.240993	I kind of regret not joining stackoverflow I am sure alot of people get hired off of it instead of having to jump through hoops doing technical interviews.  I am looking for work now in golang and i just hate having to do interviews over and over again with each new contract.		calltrak
22358848	12.441569	-7.0401654	comment	7.0	19.0	1582051308	-10.911222	Every RuboCop rule is reasonable. That is, you can look up the reason and see if you agree or not.Our team has overridden about a dozen rules (we bumped up line length and class length), but I find most of the default rules are fine.Out of curiosity, what rules are unreasonable to you?		phaedryx
22361089	11.670918	-7.943773	story	7.0	92.0	1582065001	10.209764	Generics in Go with Ian Lance Taylor (2019)	https://changelog.com/gotime/98	pjmlp
22368863	11.942528	-7.6614137	comment	7.0	27.0	1582139221	10.420419	Id much rather have python syntax and Haskell semantic to get good parts of both!		makapuf
22404816	11.704559	-7.064941	comment	7.0	21.5	1582558286	-8.973108	The goal of software development should be about reducing the number of edge cases to the absolute minimum. If a tool makes it easier to keep track of all edge cases, it is bound to encourage develope...		cryptica
22407301	12.034671	-7.810304	comment	7.0	20.5	1582571490	10.40271	>In mathematics, a monad is defined as a monoid in the category of endofunctors.Sure. But like everything in math what it really is is a thing that the mathematician has come to know through applicati...		juped
22457554	12.250516	-7.510025	story	7.0	104.0	1583080367	12.83925	CAF: C++ Actor Framework	https://github.com/actor-framework/actor-framework	anarchyrucks
22461854	11.775253	-7.3541503	comment	7.0	30.0	1583126434	-8.886216	Static types are the new religion, like OOP was in the 90s.Types solve 2% of programming errors. They lead to coupling for the sake of the compiler, and make code harder to change, harder to write, an...		slowmovintarget
22654135	11.994823	-7.4907727	story	7.0	148.0	1584875484	7.2693324	Professor Frisby's mostly adequate guide to functional programming (2018)	https://mostly-adequate.gitbooks.io/mostly-adequate-guide/	dsego
22657222	12.021796	-7.806855	comment	7.0	26.0	1584901430	10.400958	as a new haskell learner who started this month, I've really learned empathy from banging my head against the languagethe docs have a specific tone or pattern that's everywhere (and by docs I mean eve...		awinter-py
22729270	11.835859	-7.3235164	comment	7.0	27.0	1585585237	9.222256	I've shied away from async/await because I haven't seen a good writeup on how to make it deterministic. Come to think of it, all of the times I've encountered it, there was no way to analyze the codep...		zackmorris
22736514	11.600169	-7.9381194	story	7.0	82.0	1585653535	10.208085	Go Micro v2.4.0 – Go microservices development framework	https://github.com/micro/go-micro/releases/tag/v2.4.0	chuhnk
22767509	11.646678	-7.2552514	story	7.0	73.0	1585905471	-8.777923	Higher-order logic and equality; multiple ways to use lambda calculus for logic	https://blog.burakemir.ch/2020/04/higher-order-logic-and-equality.html	burakemir
22886432	11.811959	-7.293416	comment	7.0	26.0	1587015254	-8.991236	It's crazy the amount of work that is spent to essentially implement static typing into dynamically / duck typed languages.Projects like this, mypy and others makes the whole thing bizarre to say the least.		Eikon
22907390	11.724214	-7.446928	comment	7.0	51.5	1587214688	10.13397	"I see a lot of comments that are talking about how python does not have a go-like concurrency story.Fyi - python ASGI frameworks like fastapi/Starlette are the same developer experience as go.
They al..."		sandGorgon
22928526	11.666793	-7.9141564	comment	7.0	32.0	1587416616	10.20364	If Go ends up getting generics it will be a serious competitor to Java in the enterprise small-medium size application space, and perhaps make it viable for larger applications.So I think it will be a...		swagonomixxx
22954186	11.857856	-7.6332397	comment	7.0	22.0	1587634028	10.07566	I see monoids more and more everyday. A bit outside the topic but does anyone have a good introduction-level resource to learning monoids?		s5ma6n
23003965	12.470504	-7.139896	comment	7.0	27.5	1588054328	12.365833	I'm not saying I never ever run into bugs due to dynamic types such as method/variable typos, I just think it's much more rare than people make it out to be. If that sort of thing happens a lot in a p...		joelbluminator
23032312	11.637321	-7.95537	comment	7.0	28.5	1588262402	10.262101	This isn't true at all.Go is not the tool of choice for experienced professional programmers for exactly this reason.The ability to quickly refactor code is very important and Go fails at it horribly ...		jpgvm
23140952	11.728701	-7.4093547	comment	7.0	25.5	1589196234	-8.721731	I've been meaning to write a tutorial on dependent types, but aimed at programmers rather than mathematicians and computer scientists. Here are some of the reasons I love them so much:- The most popul...		curryhoward
23164342	11.608627	-7.9625697	comment	7.0	28.5	1589354347	-9.737417	The fun thing about the Go compatibility promise is that it doesn't work as well as the go developers probably imagine; just last week one of my older Go project was discovered to be broken; wouldn't ...		zaarn
23167229	12.0962305	-7.539148	comment	7.0	44.5	1589380255	7.3482304	I'm currently learning erlang/elixir and I'm really enjoying the language constructs.I had originally taken a Programming Language Paradigms class in college with racket, and I really didn't appreciat...		moviedo
23171610	11.653234	-7.3558683	comment	7.0	28.5	1589402583	9.133417	the author leaves out Kotlin which adds support for coroutines on the language level and still compiles to java bytecode. These are not classic continuations because they cannot be cancelled, but they...		eggsnbacon1
23173282	11.679105	-7.439212	comment	7.0	19.5	1589413798	9.342253	"It should have been implemented as functions or attributes instead of language syntax sugar.Like Lua did.  Like Rust did.Imagine this:   def foo():
       return ""bar""

   async def foo():
       retu..."		VWWHFSfQ
23173929	11.661807	-7.9581842	comment	7.0	20.0	1589418280	-2.4301765	True, but that's what people using Go have been doing for years without complaining much, so I guess it works fine for most workload.And before npm fixed things after the left-pad incident, the npm builds where not reproducible either (as demonstrated by the said left-pad incident).		littlestymaar
23194069	11.902406	-7.3818398	comment	7.0	27.5	1589560253	7.0775256	I don't find this article well thought out. One, the writer presents OOP and FP as opposing paradigma's. While object oriented programming is orthogonal to functional programming. You can have a purel...		pinopinopino
23197753	11.89879	-7.3556056	comment	7.0	27.5	1589578525	7.0553913	I feel like inheritance is the actual problem with OOP. Trees of types with increasing specialisations just don't describe many real world problems that well.When you do build programs like this, code...		arc776
23223881	12.068961	-7.2099133	story	7.0	58.0	1589816791	9.209595	JavaScript Promise.all vs. Promise.allSettled	https://blog.jonlu.ca/posts/promises?ref=hnm18	jonluca
23243641	11.636355	-7.346013	comment	7.0	30.0	1589953562	9.984662	Special cases like this make generic code very hard to write. If I'm writing a library that needs to handle user-provided data agnostic of type and I want to do a sum operation, now I have to add checks all over the place for whatever special cases python has.		tines
23247257	11.810466	-7.3737783	comment	7.0	19.5	1589985171	6.5549917	"I disagree with the mutability argument... the Square constructor is ""not a subset"" of the Rectangle constructor,Compare:
new Square(side) 
new Rectangle(width, height)In this way, a Rectangle is more like a child of a square: widening its capabilities."		mjburgess
23289873	11.918403	-7.3368406	story	7.0	15.0	1590306147	7.0509806	Ask HN: How do you keep track of the architecture of a personal project?		curiousgal
23308357	11.623052	-7.939776	story	7.0	109.0	1590478207	10.150499	Instrumentation in Go	https://gbws.io/articles/instrumentation-in-go/	gobwas
23333733	12.213362	-7.2778993	story	7.0	52.0	1590643962	7.0774655	Good idea bad implementation crosstalk	https://flak.tedunangst.com/post/good-idea-bad-implementation-crosstalk	luu
23364049	11.805682	-7.1218348	comment	7.0	21.5	1590868302	5.038045	A Philosophy of Software Design.Very well-written. At 190 pages, quite likely finish-able in a weekend. But if you get 70% of the way through it, that is still very valuable. It makes sense as an underlying set of principles that explain why you would use design patterns.		afarrell
23364485	11.99508	-7.756997	comment	7.0	29.5	1590871106	10.433887	We dance around this issue in the comments to every Haskell story, but the reason Haskell is hard to market is that it's bad. It's a research language being shoehorned into production by a few people ...		spekcular
29356323	11.802564	-7.3258905	comment	7.0	27.5	1637977057	-8.90416	A couple decades ago everyone was on static types. But then people got sick of the boilerplate, and in what I think was a backlash, dynamic languages like JavaScript, Python, Ruby, etc. took the world...		brundolf
29458316	11.827397	-7.2508774	story	7.0	8.0	1638789293	-5.8496366	Immutable Data Without a Blockchain	https://gist.github.com/mapehe/061e44c9c7d48ad20725d20c7a53638d	mapehe
29506014	12.241354	-7.6291876	comment	7.0	23.5	1639105993	11.950392	Scala was a terrible technology that was adopted by my organization five years ago and were still paying the price.How to deprecate this at scale?The extent to which i like scala is as a dsl for descr...		waynesonfire
29528704	11.726988	-7.12244	comment	7.0	21.0	1639307780	8.893289	"Interesting to find this here, if someone else haven't followed Python3, there is also NamedTuple which for all purposes is like immutable record:    from typing import NamedTuple
    class Coord(Name..."		Ciantic
29565683	11.704053	-7.3443165	comment	7.0	24.5	1639575436	-8.883237	"Number one, static type checking is hardly a ""new tech"" for which the industry is in a ""newlywed period"".  If anything, it is the middle-aged wife that the industry's crawling back to, as the passion ..."		StevePerkins
29566163	11.662115	-7.7260528	comment	7.0	26.5	1639577583	10.206332	They resisted generics since day 1 on the basis of pragmatism. Now they included them on the basis of pragmatism?I remember something similar with their approach to package management which they said ...		pydry
29576808	12.09102	-7.4928455	comment	7.0	18.0	1639649742	-10.555128	"I'm mostly a C# programmer by trade, and having tried F# multiple times (last time by doing half of the AoC in F#) , I haven't felt that I'd be ready to make the jump.
My main issues were:- Much of th..."		torginus
29576901	11.609943	-7.9358582	comment	7.0	31.5	1639650831	10.176947	> Developing a montolith for years but now you have written a 15 line golang http api that converts pdfs to stardust and put it into on a dedicted server in your office? welp thats a microservice.But ...		sdevonoes
29610095	11.667432	-7.9563007	comment	7.0	30.5	1639872891	10.225791	Go, like Java, was designed by people who intended never to write any code in the language, themselves. Both are languages which those individuals designed for use by people less intelligent, careful,...		ncmncm
29638582	12.034861	-7.7711587	comment	7.0	44.5	1640102249	10.467346	I'm excited. Haskell gets a lot of attention but I have the feeling that OCaml may be better for engineers.		Kototama
34189459	11.832931	-7.0714	comment	7.0	42.5	1672431094	-9.015677	Python does a great job at putting together powerful scripts quickly. But I have a really hard time opening up a big Python codebase and making sense of it quickly. No static types can make data prett...		candrewlee14
34206224	11.663866	-7.7802467	comment	7.0	27.0	1672581075	10.123149	My view is that Java was a product of its time.  Absolutely fabulous for the 90's and 00's, no question whatsoever about that. But today you would be nuts to use Java instead of Go (or Rust if you nee...		traceroute66
34214671	11.895934	-7.452139	comment	7.0	42.0	1672637162	7.294069	The example given isn't really functional programming is it? Or am I missing something? In those examples you start with an object, call a method on the object returning a new object, then call a meth...		jemmyw
34215659	11.775556	-7.2888937	comment	7.0	23.0	1672648045	-6.309262	"So mutable state is not bad, as long as it is ""encapsulated""?I thought (from what I've read so far) that ""no mutable state"" is the definition of ""pure FP"".So should the definition of pure FP be ""No un..."		galaxyLogic
34230629	11.811411	-7.3724675	comment	7.0	19.0	1672749217	-8.901012	In my experience, type-related programming bugs are very rare (less than 2%). That's why I'm not in the least bit concerned with whether or not a language is statically-typed or dynamically-typed. I u...		smalltalkcoder
34247025	11.688628	-7.926826	comment	7.0	36.5	1672847641	10.157162	Pushup creator here. We're interested in feedback on the design. Pushup introduces a new lightweight template syntax that mixes Go code and HTML in the same page; pages are then compiled down to pure ...		paulsmith
34273390	11.806687	-7.497964	comment	7.0	18.0	1673003067	-5.324522	I can understand that category theory is alien to most developers, but lambda calculus? Isn't it similarly basic knowledge in CS as Turing machines, finite state automata etc?		trenchgun
34337454	11.625302	-7.129852	story	7.0	63.0	1673437899	9.919445	Another NaN-based tagging strategy for dynamic programming languages	https://outerproduct.net/trivial/2023-01-11_nan.html	todsacerdoti
34343257	12.120917	-7.614598	comment	7.0	21.0	1673465191	-11.260321	How would you compare Swift with Kotlin in terms of being a good stand-in for high-level Rust?I've not paid attention to Kotlin in a while, but it seems like there's more progress at supporting Kotlin...		etse
34351547	11.832721	-7.3089533	comment	7.0	35.0	1673518867	11.768428	"I think I understand what OP means. I work with some smart people who use code like    val x: Pair<String, Pair<String, String>> 

instead of say    data class Status(key: String, value: String)
    d..."		muzani
34352488	11.704874	-7.115609	comment	7.0	23.5	1673526466	8.996196	I've never really understood the use case for these mapping generators. Every time I've seen them used (MapStruct in Java, AutoMapper in C#) the mapping configuration eventually ends up being so compl...		royjacobs
34425229	11.61051	-7.149064	comment	7.0	20.5	1674037965	-3.95665	I'm not sure about your teaching experience. But when i teach function, i told my students: Function application is just substitution. That's it. Function is a template for you to substitue.Higher order function ? Just more substitution !Your source code is a long text template, no magic to it.		revskill
34456683	11.792597	-7.4165387	comment	7.0	44.0	1674236459	-8.68664	The book itself Type Driven Development with Idris is great too, it is the principal way I write code these days, by writing my types upfront then filling out the logic, and in some languages, the log...		satvikpendem
34482694	11.788103	-7.116685	comment	7.0	25.0	1674424880	-8.287436	"Undocumented downside:Java becomes a slightly harder language to learn, because now there is one more thing to explain to a beginner:   ""Where exactly should super() be put in the constructor?   At th..."		londons_explore
34506081	11.849751	-7.3152013	comment	7.0	38.5	1674578583	7.0441117	I might be missing something, but isn't this line backwards?> Subtype of type A is a subset of type A. Supertype is a superset. Easy.Subtype of type A is actually a superset of type A, since it contai...		jakelazaroff
34549726	12.456685	-7.4912705	comment	7.0	27.5	1674843942	12.870656	There's a component that seems to be missing here which is preemptive task scheduling. I've not seen another non-OS system do it like the BEAM VM (the VM behind Erlang), though there may be something ...		finder83
34643466	11.65629	-7.0462933	story	7.0	23.0	1675442169	5.392096	The Decree Design Pattern	https://calebhearth.com/decree	caleb_thompson
34658021	11.727745	-7.3910575	story	7.0	67.0	1675543170	-8.728716	Type Inference That Sticks	https://jaredforsyth.com/posts/type-inference-that-sticks/	jaredly
34717482	12.121966	-7.4293947	comment	7.0	21.0	1675900097	-10.550907	> F# explores new language possibilities and the community provides a rich experience across platforms.There are several interesting observations to be had here. For one, F# already explored (past ten...		bmitc
34746426	12.396821	-7.0324364	comment	7.0	74.5	1676065918	-10.438595	TypeScript won. I was watching this video by Evan Czaplicki the creator [0], and what struck me was that back then, Evan was absolutely right. He was right that in the high level, we needed a typed JS...		satvikpendem
34779746	12.2521715	-7.562019	story	7.0	60.0	1676319526	-11.413092	The potential of Kotlin/WASM	https://seb.deleuze.fr/the-huge-potential-of-kotlin-wasm/	sdeleuze
34816474	12.315776	-7.5221505	comment	7.0	18.5	1676537126	-2.060791	Is there any resource that can help me properly understand the actor model and make an informed decision on whether it's something everyone should have in their toolbelt or just another technology like blockchain, in search of non-scam usecases with mainstream appeal?		Traubenfuchs
34996761	11.908437	-7.341111	comment	7.0	38.0	1677770581	7.0710397	"I hope that, with the assistance of time, we can now adopt a more aristotlean/catholic ""and"" vs. a platonic/puritan ""or"" with respect to these various language features.Object oriented programming is ..."		recursivedoubts
35082033	11.649684	-7.957794	comment	7.0	29.0	1678374935	10.233757	Not to be the perpetual Luddite, but I hate how much programming languages change. I don’t particularly like go as a language (good board game though), but the minimal changes over time starts to feel really correct.		nickpeterson
35085565	11.702539	-7.851606	comment	7.0	24.5	1678390528	10.1763525	The only reason why I am looking at Golang is because of its fast startup and low memory usage. I prefer the Java ecosystem and Kotlin specifically; how is the JVM's progress in this area for serverless, etc?		clumsysmurf
20940535	11.60822	-7.182469	story	7.0	78.0	1568211909	9.121661	Lambdas for C – sort of	https://hackaday.com/2019/09/11/lambdas-for-c-sort-of/	fogus
20947222	11.613357	-7.189704	story	7.0	102.0	1568255312	8.761977	Immer is a library of persistent and immutable data structures written in C++	https://github.com/arximboldi/immer	fortran77
20948360	11.613202	-7.35009	comment	7.0	18.5	1568266648	8.757185	Could someone provide an actual example use-case for immutable data structures in C++?The linked document only mentions high-level examples, all of which seem to be trivially implementable via mutable...		ur-whale
20948836	11.730169	-7.2669005	comment	7.0	23.0	1568272513	-6.642208	There is something about this immutability thing I really don't like. In the authors example it looks like v1[0] is set to 42 (const auto v2 = v1.set(0, 42)), at least that's how you read it because i...		siempreb
20958211	11.605744	-7.959971	comment	7.0	35.5	1568337507	10.2749	What I would give for the developers of the Go toolchain to have spent the last decade improving GCC or LLVM instead of their own bespoke toolchain.In many ways Go seems like an excuse for Google to f...		benesch
20966717	11.87668	-7.0296745	comment	7.0	21.5	1568409650	-9.048643	The whole Type thing in Python and all the workarounds to make Python type-safish looks and feels absolutely pathetic. I have no idea why a company like Facebook takes so much time to apologize for th...		dna_polymerase
20984278	11.648886	-7.930822	comment	7.0	24.0	1568643711	10.173114	I've moved from Java to Go and I appreciate it very much. It's very practical for day-to-day development. The 2 killer features for me are:1. the built-in tooling (cross-platform building, profiling, ...		kitd
13615130	11.691451	-7.9336567	comment	7.0	29.5	1486732514	10.198522	Apart from the JWT thing (please avoid JWT if possible), I agree with this comment 100%. Things I'd like to see in a Go web app example site:1. Examples of using context values to pass things selectiv...		tptacek
13664442	11.917888	-7.3345227	comment	7.0	21.5	1487286364	6.9886794	I appreciate the effort, but one of my pet peeves with OO / design pattern examples is when they're completely contrived.Once you've understood the very basics of OO, I think talking about a door fact...		TillE
13682994	12.009768	-7.0927806	comment	7.0	18.5	1487548193	9.15276	does anybody know some http client libraries that have scalable, performant asynchronous support (including transparent handling of various issues, like too many requests pending etc.). A big plus wou...		LeanderK
13729912	11.673262	-7.943282	story	7.0	92.0	1487994219	10.236793	Online-go – Source code for the Online-Go.com web interface	https://github.com/online-go/online-go.com	artursapek
13850526	11.90389	-7.345401	comment	7.0	28.0	1489324843	7.0699434	"Why are there still those who think any advocate of OOP  is an advocate of ""OOP or Nothing! All things are Objects! All things are an instantiation of a class! All things must derive from a root class..."		delinka
13872537	11.969296	-7.711976	comment	7.0	29.5	1489534473	10.409372	As much as I want to use Haskell for real, instead of just reading about and toying with it, I think the examples in this article are a perfect illustration of why I find learning Haskell borderline o...		sushisource
14006399	12.40558	-7.8571906	comment	7.0	22.0	1490983828	10.420208	I loved the either-monad solution. The problem is something I've experienced many times in my clojure adventures, usually resulting in either dirtying the function in question with its own, case speci...		jtmarmon
14011615	11.802772	-7.5466943	story	7.0	324.0	1491046155	10.404077	Idris 1.0	https://www.idris-lang.org/idris-1-0-released/	insulanian
14041497	12.231546	-7.6450725	story	7.0	61.0	1491394698	11.921672	Scala interview questions	http://pedrorijo.com/blog/scala-interview-questions/	sconxu
14138386	11.938895	-7.4840903	comment	7.0	34.5	1492519985	7.2608438	Why compose classes, abstract base classes, etc. when you can compose simple functions!It's true that abstractions in functional languages can seem foreign and hard to understand, but generally they h...		patrickmn
14138755	12.227771	-7.6310477	comment	7.0	21.0	1492523323	11.946798	What is wrong with Scala that some companies seem to abandon it in favour of Java?		andrzejsz
14138861	11.958145	-7.4848547	comment	7.0	18.0	1492524133	7.224172	"I have read a lot of articles about learning functional programming to make you a better programmer with conventional OO or imperative languages - but this does not make sense to me.The argument is ""l..."		bischofs
14152126	11.593693	-7.441592	comment	7.0	34.0	1492638651	10.277712	"Why the fixation on pattern matching? Don't get me wrong, I enjoy the benefit it provides, but for OO code multiple dispatch is a more elegant and idiomatic way to solve the ""I don't want to implement..."		lacampbell
14189035	12.263193	-7.274873	comment	7.0	28.0	1493073158	7.0892286	I wonder what a Smalltalk-like environment would look like if had been developed in the 2000s instead of the 1970s.If you could marry up the advantages of text/files, live code, visual layouts, data v...		goatlover
14209090	12.137715	-7.8687725	story	7.0	137.0	1493265866	-3.209169	Category Theory, Syntactically (2016)	http://www.hedonisticlearning.com/posts/category-theory-syntactically.html	colinprince
14212500	11.67912	-7.1041956	comment	7.0	23.0	1493308869	9.219569	Because Python 2.7 is, IMO, a better language than Python 3+, e.g.:- I like lambda a, b: a + b syntax better than lambda a_b: a_b[0] + a_b[1]- I prefer map/reduce/filter to return lists rather than it...		Marat_Dukhan
14235593	11.723294	-7.2548757	comment	7.0	35.5	1493613289	7.126529	Which is funny because I could never get anyone, when I first started programming in C and everyone was raving about how great 'object oriented programming' was, to tell me what 'an object' actually w...		taneq
14267018	11.772159	-7.336642	comment	7.0	22.5	1493920131	8.197039	As a long-time Java developer, I really hope they won't implement JEP 286. I think type inference by the compiler is a bad idea, as it results in less readable code, more bugs, and an unnecessary burd...		pents90
14267108	11.996735	-7.7454815	comment	7.0	32.5	1493920612	10.408457	> 1. There is a learning curve.Time and experience can cover up anything. So this does not say much about Haskell other than it is all negative without time and experience.> 2. Haskell has some very n...		hzhou321
14344114	12.266898	-7.306067	story	7.0	42.0	1494874450	7.078288	Smalltalk/X, the jv branch	https://swing.fit.cvut.cz/projects/stx-jv	brudgers
14365943	12.162076	-7.536635	comment	7.0	20.0	1495100636	-11.359766	"Does anyone else think the Kotlin syntax for array literals is super ugly:val shoppingList = arrayOf(""catfish"", ""water"",
    ""tulips"", ""blue paint"")What is wrong with square bracket syntax? (rant over).EDIT: I suppose it's consistent with other syntax e.g. listOf() etc."		martijn_himself
14374604	11.771341	-7.400069	comment	7.0	32.5	1495193764	7.2114964	1. Android is the largest mobile platform on the planet.2. It's been around for a decade now, but has only supported development with Java and C++.3. The most recent version of Java supported comes fr...		StevePerkins
14409595	11.9788885	-7.7440023	comment	7.0	20.5	1495630172	10.434496	Hi everyone, author of HLearn here :)This is a bit awkward for me as I've paused the development of HLearn and emphatically do not recommend anyone use it.  The main problem is that Haskell (which I o...		jackpirate
14437670	11.7893915	-7.348623	comment	7.0	40.0	1496038609	-8.893361	"Some highlights:Q:  ""Do you hate static types""
GB:  ""No""
MF:  ""No""GB: ""Types are useful for:
1. Doc for human
2. Doc for machine
3. Making things faster
…
4. Correctness""This was experience from the S..."		mpweiher
14448056	11.946123	-7.6545405	story	7.0	149.0	1496174224	10.365593	Imperative Haskell	http://vaibhavsagar.com/blog/2017/05/29/imperative-haskell/	rutenspitz
14450535	11.872524	-7.5907903	comment	7.0	43.0	1496207289	10.278282	As far as I'm concerned, purity is more fundamental than impurity, because we can always emulate impurity using a pure language (as is shown in this article), but it's not possible to emulate purity u...		runeks
14458368	12.331972	-7.0323925	story	7.0	133.0	1496298200	13.19769	Perl 5.26.0 released	http://www.nntp.perl.org/group/perl.perl5.porters/2017/05/msg244573.html	abhinickz
14491341	11.774154	-7.373405	story	7.0	39.0	1496693677	-8.906476	The broken promise of static typing	https://dev.to/danlebrero/the-broken-promise-of-static-typing	type0
14516233	11.96132	-7.711384	story	7.0	127.0	1496947930	10.350567	Writing a Forth in Haskell	http://reinvanderwoerd.nl/blog/2017/06/08/writing-a-forth/	reinvdwoerd
14523728	11.650329	-7.030073	comment	7.0	39.0	1497036181	8.232544	In other words, use a pure dependency-injection style, and ZERO globals.I'm writing Python and some C++, and I have been doing this for maybe 5-6 years.  It takes a little practice to structure your p...		chubot
14543561	11.714954	-7.534631	comment	7.0	25.5	1497342999	10.171449	The /r/programming discussion of this is interesting [1].Someone does a Go version and gets the same speed as GNU yes. Someone else tries several languages. This person got the same speed in luajit, a...		tzs
14561492	11.649999	-7.9516487	comment	7.0	28.0	1497541772	10.2453575	>But there is equally no question that adding these features to Go would make it more complex. [...] I have no doubt that adding templated types to Go will make it a more complicated language, I don't...		jasode
14594665	12.257341	-7.131032	comment	7.0	55.5	1497967244	12.344261	"So, this shortens down to ""I don't want people touching my private class members"", ""I want multi-line lambdas"", and ""I want types"".WRT private class members, I can understand why this might be frustra..."		falcolas
30865945	12.02525	-7.8082027	story	7.0	45.0	1648725648	10.409428	The Tardis Monad	https://hackage.haskell.org/package/tardis-0.4.3.0/docs/Control-Monad-Tardis.html	isaac21259
30888125	11.605149	-7.88297	story	7.0	117.0	1648906275	10.122671	Faster Sorting with Go Generics	https://eli.thegreenplace.net/2022/faster-sorting-with-go-generics/	todsacerdoti
30920009	12.336642	-7.290263	comment	7.0	35.5	1649171375	7.11491	I went through the MOOC material and tried it out for a few small things. It inherited a lot of the unique Smalltalk features which make it sort of alienating to a modern programmer. For instance, all...		ok123456
31010641	11.630704	-7.9511247	comment	7.0	24.5	1649817570	10.259479	> Let’s start with a general guideline for programming Go: write Go programs by writing code, not by defining typesI find this interesting - I think I typically do the reverse: I generally start by th...		shpongled
31051483	11.987596	-7.2666626	comment	7.0	32.5	1650108363	9.181027	Now maybe it’s just my familiarity with Promises, but I look at the third example and I can quickly see an opportunity.This entire article is built around the author's ignorance and could easily be su...		zazibar
31051731	11.975908	-7.240793	comment	7.0	24.0	1650111752	9.158698	I didn’t read the article like that at all.How would you handle two asynchronous saves which can happen in parallel without using a Promise.all? Don’t think you can…and that’s pretty much the entire p...		saimiam
31051901	11.752723	-7.44625	comment	7.0	17.5	1650113417	9.194517	Everytime I use a language with async / await syntax, I find myself wishing that awaiting async functions was the default behavior and that I had to specify when I didn't want that behavior. So much b...		robmccoll
31056698	11.971848	-7.5210576	comment	7.0	18.5	1650148579	10.4104395	As a fan of ML family languages I have a question for SML lovers. What do you typically build with SML?For context, I’m web programmer and I’m also learning game dev, can I use SML productively?Or are there other tasks that I could use SML for?		seanstrom
31115648	11.864311	-7.2270966	comment	7.0	46.0	1650577999	-8.98336	"Honest question: what's the point of type hinting without type checking?I must be mistaken, but I always thought ""type hinting"" was a synonym of ""optional type annotations"". But if you're not using those annotations for actual type checking at some point, what are they good for?"		the_af
31116770	11.829212	-7.129257	comment	7.0	71.5	1650586627	-8.979292	Honestly, I've recently written a few 300-500 line programs in Python using type hints and I'm never going back.  And I'm not even using mypy often, if ever.My editor now has a fairly deep understandi...		linsomniac
31205595	11.59822	-7.904647	comment	7.0	23.5	1651242477	10.1841345	I don't know nothin' about Go.  But this complaint really surprised me:> Go not letting you do operator overloading, harking back to the Java days where a == b isn't the same as a.equals(b)Does this g...		SeanLuke
31219552	12.095056	-7.85246	story	7.0	117.0	1651354124	10.484086	What I wish I knew when learning OCaml (2018)	https://baturin.org/docs/ocaml-faq/	cribbles
31218244	12.144048	-7.643191	comment	7.0	24.5	1651344674	11.899414	"Scala and Haskell are pretty much ""dead"" language, I worked with Scala in the past, it was impossible to find poeple willing to work with it so everything was re-written in Java."		Thaxll
31228338	11.893953	-7.317332	story	7.0	15.0	1651436724	6.9673142	Object-Oriented Programming Is Bad	https://www.youtube.com/watch?v=QM1iUe6IofM	robomartin
31262102	12.224357	-7.0297427	comment	7.0	18.5	1651679166	13.170524	Here's one reason why sigils could be considered to suck.`@array` - array of values.`$array[1]` - get element 1 of the array.`$array` - What do you think this does?  Why can't we just `@array[1]`?		tenebrisalietum
31461700	12.039521	-7.242397	story	7.0	50.0	1653166441	9.227568	Tasks, Lists, and Promises	http://rachelbythebay.com/w/2022/05/19/priority/	zdw
31568257	11.65089	-7.9501996	comment	7.0	33.5	1653996016	10.210607	>- Made by really famous veteran language designers- Backed by GoogleLooking at decades of how various programming languages gain popularity, those proposed reasons don't seem that convincing when we ...		jasode
31601440	11.694246	-7.2594085	comment	7.0	28.0	1654209577	9.136467	I only observe Java from a distance but everything I've read about project loom is amazing.Speaking as someone who has worked intricately on an async runtime in another language, I've more and more st...		klabb3
31637373	11.753683	-7.2702227	comment	7.0	23.0	1654491592	-9.782675	I wish there was a Lisp-like language that was statically typed and compiled to optimized native code. The closest thing I know of is Nim, which has the programmability, but not the simple syntax.		xigoi
31661367	11.99591	-7.7471304	comment	7.0	31.0	1654645012	10.404177	In trying to figure out why Haskell hasn't been widely adopted, I think it's very hard to disentangle legitimate criticisms of the language (unpredictable performance, overcomplicated and bizarre APIs...		caconym_
31751017	12.100295	-7.8676066	story	7.0	226.0	1655287716	10.466719	OCaml 5.0 Alpha Release	https://discuss.ocaml.org/t/ocaml-5-0-zeroth-alpha-release/10026	momentoftop
39359283	11.606175	-7.379665	comment	7.0	24.5	1707841554	9.215424	Not everything, but if by “coroutine” we mean a delimited continuation, then we get: exceptions, async/await, generators, and even the IO monad.http://logic.cs.tsukuba.ac.jp/~sat/pdf/tfp2020.pdfIn sho...		quadhome
39451421	11.849166	-7.0919127	comment	7.0	26.0	1708504464	4.920048	"I've read through this book 3 times over the years and it's very misguided. If you're working on a game and the words ""gang of four"" pop into your head you unfortunately have suffered permanent brain ..."		vsuperpower2020
39565076	11.627641	-7.9209867	comment	7.0	36.0	1709318048	10.213065	I love Go. Especially how the devs stubbornly refuse to learn anything from Java, but stumble boneheaded into everything that Java solved over the years. Generics? We don't need that .. (time goes on)...		sgift
39592706	11.9044695	-7.2805233	comment	7.0	18.5	1709571630	7.0322466	I would claim that object oriented languages are a syntax, semantics and type system for graphs.Objects are nodes.Fields are edges.The object graph is the heap.So your whole program state is a graph.		pizlonator
36595992	11.708371	-7.396524	comment	7.0	24.0	1688536229	-8.670338	Proof that type systems are nothing else that domain-specific languages that run at compile time. When seen like that, it should be no surprise that they can be coerced to do general computation.		TuringTest
36638146	12.080936	-7.110746	comment	7.0	42.0	1688763169	-10.407067	Nit: they're not asking for runtime type safety; they're asking for the ability to reflect on types (at compile time, to generate values) so that they can use type information at runtime.This helps en...		tylerhou
36660845	12.150376	-7.8813396	comment	7.0	31.5	1688951531	-3.1773405	I get that Category Theory is literally a highly theory-based branch of Mathematics, but would it kill its adherents to list an actual practical example?I watched the associated talk[1], and David men...		jiggawatts
36665520	11.96291	-7.370545	comment	7.0	25.0	1688993073	7.089331	"The many ""you're wrong if you believe that"" made me remember the anecdote of Alan Kay attending some conference about OOP and saying that it was wrong, that he invented OOP and it was not like that.II..."		narag
36744918	12.020025	-7.7788677	comment	7.0	28.0	1689497767	10.421245	> (many monad tutorials are bad, and beginners can't tell)It appears monads truly are something you can either understand or explain, but not both.I find it suspicious. I mean, plenty of Haskell devs out there, surely it's not that hard?		Tade0
36774799	11.651701	-7.942527	comment	7.0	26.0	1689696693	10.23613	Very insightful. Re: the generics point —As a Go programmer I always thought the generics complaint was kind of silly in practice — complicated code should be simplified and made more concrete, not mo...		Veraticus
37058717	11.926012	-7.6779456	comment	7.0	18.5	1691555430	10.400297	"Related: one of my favorite StackExchange questions: ""Write a program that makes 2+2=5""https://codegolf.stackexchange.com/questions/28786/write-a-p...Really shows you the skeletons hiding in some languages. My favorite is Haskell, which will happily do what you tell it to."		skulk
37117155	11.890214	-7.4129868	comment	7.0	27.0	1691983623	-3.8435256	"Very solid article with many points I agree with.Some notes:Keywords are not simply ""another pragmatic solution that won over finding a more elegant way to support named arguments"" and they are inhere..."		sodapopcan
37132346	11.957105	-7.711848	comment	7.0	21.5	1692096793	10.398811	This. People who disagree - why not write in Haskell?		solatic
37213739	12.025934	-7.81095	story	7.0	65.0	1692643768	10.483113	What does it mean for a monad to be strong?	http://blog.sigfpe.com/2023/08/what-does-it-mean-for-monad-to-be-strong.html	chmaynard
37227383	11.739406	-7.241979	comment	7.0	19.0	1692732129	9.103092	"Great article. I had the misfortune of writing a bunch of twisted code over a decade ago and I wanted to remind the author that twisted has a feature called ""inline callbacks"" that allow you to use yi..."		shanemhansen
37247904	11.964308	-7.734697	comment	7.0	41.5	1692879288	10.420633	I've also used several languages and IMHO, Haskell's tooling is some of the worst. Language server breaks with random errors all the time for me, I'm always confused about whether I should have ghcup ...		Tainnor
37249043	12.171514	-7.6224456	comment	7.0	21.5	1692886738	11.909802	If you like Haskell but want something else, you really should consider Scala.It's not the same. But it has many of the same niceties around the rich type system, but with generally good tooling, the ...		lihaoyi
37250409	11.657539	-7.923621	comment	7.0	23.0	1692892647	10.216928	Ummm, excuse me, but where the f&$k has this been hiding? I’ve been looking for ways to extend my go applications with scripting support. I started with Lua (worked ) then Python (worked but hacky) th...		gabereiser
37270252	11.971581	-7.5245724	story	7.0	110.0	1693029212	-10.489119	Introducing Coalton to lispers without a background in ML-like languages	https://gist.github.com/digikar99/b76964faf17b3a86739c001dc1b14a39	reikonomusha
37282714	11.609895	-7.068276	comment	7.0	34.0	1693144324	-7.838629	Why do people not just type everything they want passed?def variable(n:str, nn:str, nnn:str, *, a:int, b:int, c:int)Anything after,*, is a kwarg.		vorticalbox
37285778	11.648274	-7.051475	comment	7.0	27.0	1693164097	8.942096	Lists (like *args) are by definition ordered, and dicts (and thus **kwargs) are by definition unordered key-value pairs.This would be very confusing in suddenly giving dicts a half-ordered, half-not s...		necovek
37360249	11.680037	-7.902773	story	7.0	102.0	1693651190	10.084052	Open-sourcing SQX, a way to build flexible database models in Go	https://stytch.com/blog/open-sourcing-sqx-a-way-to-build-flexible-database-models-in-go/	doylemark
37375601	11.72795	-7.380015	comment	7.0	30.5	1693783407	-8.801818	Programming language design took a wrong turn with these extremely complicated type systems.  They end up hurting developer productivity, and you spend more time fiddling with types than solving the problem at hand.  We should be focusing on more effective forms of abstraction instead of types.		peepeepoopoo33
37416212	11.971967	-7.7410626	comment	7.0	27.0	1694075529	10.399097	"I would like to add that just like in our universe, in Haskell entropy only ever increases and never goes down.
I.E., add more functionality to your program and the complexity will go up. This is true..."		misja111
37433246	11.975688	-7.4047756	comment	7.0	22.5	1694179856	6.8192873	"Having dabbled a bit in Elixir during the last year, I've been wondering why function ""overloads"" are a thing in Elixir, since they (as the author points out) seem to be equivalent to `case` expressions. Do polymorphic functions provide any tangible benefits?"		manmal
37442783	11.607758	-7.904742	comment	7.0	21.0	1694240885	10.191701	Golang's compiler is not great. The main way to achieve acceptable performance in golang is to use their weird asm dialect.		anonymoushn
37534932	11.599506	-7.060946	comment	7.0	20.0	1694873645	9.090184	Hi, I'm the author of Yazi, and I was pleasantly surprised to come across it while browsing Hacker News. I'm really excited!!If you're interested in the topics of concurrency, performance, and io_urin...		sxyazi
37540038	11.613452	-7.8802614	comment	7.0	51.0	1694908434	10.189791	Exception handling and generics are missing key pieces from go. But adding them will make go look like java.I just wish java would add null safety in the type system in a first citizen way.For enterpr...		arein3
37558057	11.786486	-7.1209006	comment	7.0	20.5	1695052997	7.9360743	Occasionally, I’ll talk to someone suggesting a dynamically typed language (or stringly-typed java) for a very large scale (in developer count) security or mission critical application.This incident is a good one to point back to.		hedora
37570526	11.843358	-7.042302	comment	7.0	34.0	1695133923	-10.777916	Excellent! With virtual threads, all the blocking code I wrote is efficient now :)Less-joking: I'm so excited for this to start getting adoption. For a pre-release/preview feature, Loom already has SO...		ye-olde-sysrq
37575695	11.660801	-7.9462166	comment	7.0	45.5	1695153779	10.218723	This was also an issue in Javascript (e.g. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Refe...)It's somewhat amusing to see Go rediscover old ideas in programming language theory, given the stance against PLT that the Go developers took in the early years of the language.		noelwelsh
37577226	11.651994	-7.979758	comment	7.0	17.5	1695159806	10.249663	"I have such a love-hate relationship with this language. I use it professionally every single day, and every single day there are moments when I think to myself ""this could be solved much more elegant..."		Spiwux
37577302	11.637769	-7.9398785	comment	7.0	32.5	1695160148	10.25904	I typically develop in Python, C++, and Typescript, and recently had to implement some code in Go.  So far I've found it a pretty unpleasant language to use.  It feels pedantic when I don't need it to...		rcv
24433149	11.657981	-7.9601197	comment	7.0	19.5	1599751278	10.211651	That's weird, how then do other languages manage to solve importing packages/modules cleanly without requiring that the name of the package include the version number, while still allowing developers ...		ubertaco
24594038	11.881603	-7.1642294	comment	7.0	22.5	1601067604	-8.981414	So now there are basically no dynamically typed languages left. There's Scheme, JavaScript, what else? All languages nowadays are converging to TypeScript/Rust. It's kind of sad.		zelly
24594524	12.402099	-7.059095	comment	7.0	18.5	1601070949	-7.527708	No, metaprogramming is a stain on software engineering that all ecosystems are moving away from. Except Ruby.		stevebmark
24605290	11.770477	-7.332084	comment	7.0	31.5	1601197889	-8.872707	I don't really see most of my code being improved that much by types and I also see a lot of extra complexity that people in the sphere I am (indie games) have to deal with when using typed languages....		adnzzzzZ
24605886	12.445999	-7.5018225	comment	7.0	55.5	1601206771	-8.946554	Why do you want that? Interestingly, Joe Armstrong said that people always asked about a static type system, but he couldn’t figure out the value of them. They were able to build extremely reliable sy...		amw-zero
24622211	11.715396	-7.3847528	comment	7.0	22.5	1601334560	-8.806376	I would pay good money for a comparison of type systems, delivered in the vein of Cow Economics.In Self, you have a cow. You ask the cow to moo. It moos.In Java, you have a cow. You construct a CowMoo...		nvader
24636720	11.744765	-7.4727173	comment	7.0	19.0	1601454908	9.461652	Are there are books/video lectures that explain linear types how they are useful in a programming language?How do people that don't have PhDs bridge the gap in their knowledge from what's commonly taught/used (OOP and it's design patterns) to thinking in terms of monads/monoids/functors/etc. ?		flumpcakes
24741982	12.021366	-7.8379264	story	7.0	108.0	1602365076	10.412022	Is there a known recent Linux locking bug that affects the OCaml runtime?	https://discuss.ocaml.org/t/is-there-a-known-recent-linux-locking-bug-that-affects-the-ocaml-runtime/6542	lelf
24760007	11.978518	-7.7364345	story	7.0	52.0	1602540546	10.402212	Learning Haskell – Miscellaneous Enlightenments	https://sras.me/haskell/miscellaneous-enlightenments.html	ducaale
24913313	11.644776	-7.204472	comment	7.0	21.5	1603841798	-7.2878575	"One suggestion - it isn't worth using the archaic ""lambda"" to mean a function. You could use ""function"" or some abbreviation of it like ""fn"" or ""fun""."		sriku
24964292	11.80988	-7.2633157	comment	7.0	28.0	1604283184	-8.728659	> Newtypes are useful when carefully applied, but their safety is not intrinsic, no more than the safety of a traffic cone is somehow contained within the plastic it’s made of. What matters is being p...		seanwilson
24980509	12.140217	-7.5078516	comment	7.0	28.0	1604417526	-10.609187	> I evaluated and expected not to like F#. I actually quite like it.It's funny because that's exactly how I felt when I learned F#. I felt pleasantly surprised and never felt like there was anything bad about the language itself.I just wish it wasn't so deeply embedded in the .NET ecosystem.		wombat23
24986824	11.6446	-7.97393	comment	7.0	36.0	1604471716	10.236711	Go is a programming language for teams, not primarily designed to impress individual programmers...I agree with all points with the author. But working in teams, or even mutiple teams on the same soft...		TeeWEE
24986917	12.236653	-7.605507	comment	7.0	28.5	1604473164	11.9524	For me scala's feature set is absurdly big and there are always 10 ways todo things. Look at the spec of Scala. Its 200 pages long. That's insane.I'd rather use Kotlin.		TeeWEE
24994338	11.62419	-7.346167	comment	7.0	18.0	1604534143	9.04308	"What are algebraic data-types good for? From another comment here they enable you to declare things like ""this field could contain a string or an integer"".Would it make more sense to make the field be..."		galaxyLogic
24996215	11.65597	-7.9501534	comment	7.0	27.0	1604559748	10.27703	While I am a fan of go and like it's simplicity it does sadden me the degree to which it is a 100% google project on any significant change like this. It is not an open source project in the sense of ...		barnacled
25014756	11.6770115	-7.78933	comment	7.0	21.0	1604753114	10.056971	I wish we used the actor model more, it seems like it is a much better alternative to Green threads or semaphores or locks and mutexes for parallelism, and with Moore's law struggling to keep going, w...		Multicomp
25069998	12.1394615	-7.504594	comment	7.0	30.0	1605190281	-10.61501	There is nothing low ceremony in .Net.I recently ran through the entire ecosystem thinking that there must be something akin to Sinatra (micro web framework) in .Net. Nope. Every single thing is built...		rishav_sharan
25075718	11.964299	-7.7017584	story	7.0	89.0	1605218582	10.404368	Pure destination-passing style in Linear Haskell	https://www.tweag.io/blog/2020-11-11-linear-dps/	lelf
25082589	11.793956	-7.285039	comment	7.0	23.5	1605278309	-3.2374506	Other than the syntax, I’m not sure I understand how this is different from any other object-oriented class definition. I suppose the ability to project the module into the local or top-level scope, but that seems more like syntactic sugar than anything meaningful. What am I missing here?		OkGoDoIt
25090370	11.76313	-7.362742	comment	7.0	31.5	1605329232	-8.888476	"Statically typed languages without Sum Types (aka tagged unions aka enums) which includes Java, C# and C++ amongst others drive me crazy: they have no ergonomic way to express ""or"" types. This is a ma..."		nicoburns
25158901	12.490694	-7.0826826	story	7.0	86.0	1605865609	12.370494	What I didn't know about Ruby Classes	https://dumas-olivier.medium.com/what-i-didnt-know-about-ruby-classes-9de64ee40d4d	olivdums
25179116	11.845167	-7.5618496	comment	7.0	31.0	1606065595	9.556414	I expect that, as with any other type system extension, the more granular your effects are, the more likely you are to run into a “what color is my function” problem. If you have a public API that dec...		skybrian
25199534	12.161391	-7.0250783	comment	7.0	30.5	1606233275	-10.374778	"Note how some of these are directly at odds with writing easily maintainable code. For example, using type annotations for return types [0]:  - import { otherFunc } from ""other"";
  + import { otherFun..."		Etheryte
25222281	11.98413	-7.7404604	comment	7.0	19.0	1606414398	10.420265	Reading articles like this makes me want to avoid Haskell.It seems like the language is so over-complicated that it requires developers to invent an entire religion to be able to effectively apply it ...		cryptica
25258354	11.842245	-7.38889	story	7.0	45.0	1606767202	7.3215632	Objects in Functional Languages	https://journal.infinitenegativeutility.com/objects-in-functional-languages	todsacerdoti
25313548	12.136927	-7.5200825	comment	7.0	17.5	1607165895	-10.621029	Does anybody here use F# in a Linux shop? I'm generally keen on the more functional languages, but have tended to avoid F# under the assumption that if I use F# I'll probably also end up needing to use Windows to get the most out of it (or get a job using it).		_jsdw
38693041	11.617706	-7.9077463	comment	7.0	23.0	1702972877	10.149649	I am very fond of the idea of a from-scratch userspace written entirely in Go. I've been dreaming of building something like gokrazy for servers. Or possibly something like Bottlerocket OS in Go.I exp...		cedws
38706419	12.141197	-7.2031116	comment	7.0	23.5	1703059658	8.490116	As a game dev, I'm starting to feel like ECS isn't the right paradigm. Seeing this 700 nodes graph with all the dependencies screams technical debt and domino effect (changing one small system would i...		speps
38731215	11.707457	-7.240427	comment	7.0	23.5	1703222569	8.830983	If you’re reaching for structuredClone, what you really want is native immutable Record and Tuple syntax, and the companion “deep path properties” syntax which allows for efficient and ergonomic immut...		namuol
38791845	11.856426	-7.3201036	comment	7.0	46.0	1703757662	7.062064	"I find ""modern"" OOP concepts apply pretty well to graphical user interfaces. I believe that a good UI has a consistent and relatively strict hierarchy, with few ""unique snowflake"" elements. Even such ..."		freetonik
38861203	12.282041	-7.3144426	story	7.0	118.0	1704324364	7.047134	Amber: Smalltalk for the Web	https://amber-lang.net/	lunarcave
38872981	11.631687	-7.845252	comment	7.0	25.5	1704406195	10.152054	What other languages of comparable popularity do you know that had concurrency similar to Go's, and interfaces?Actually, name just one that has either, even today!		tomp
38936312	11.909475	-7.323036	story	7.0	16.0	1704862114	6.80148	Book recommendations about the history of programming		sys_prog
39016118	12.437062	-7.1405005	comment	7.0	22.0	1705426600	12.381455	This whole blog post is essentially an advertisment for why statically typed languages can prevent such madness. I'm sorry -- it is not my intention to start another non-useful static/dynamic typing d...		sidkshatriya
32630350	11.663075	-7.9028735	story	7.0	68.0	1661709014	10.137227	Kawipiko – fast static HTTP server in Go	https://github.com/volution/kawipiko	enduku
32632634	11.701504	-7.2315245	comment	7.0	25.5	1661725207	2.20495	I really look forward to a language with first-class explicit algebras, with operators, laws, equality, types. Rather than ad hocery on multimethods, or kludgery slathered thick over single dispatch, ...		mncharity
32638049	12.07741	-7.8226237	comment	7.0	23.0	1661780191	10.464843	My biggest frustration with OCaml is having to deal with all of that cruft. I've learned many languages over the years, and I think I've just reached the point where I've lost patience with having to deal with what I would consider substandard syntactic elegance.		acjohnson55
32675696	11.652844	-7.40642	comment	7.0	23.5	1662037368	8.696227	"I see this as a continued effort of middleware being rewritten in C++, Rust and Go to replace Java - seems like common wisdom ""Java can be as fast as C"" has finally been abolished as this situation progresses (Kubernetes and other newer cloud middleware written in Go instead of Java, etc.)"		polskibus
32686520	12.484512	-7.1083875	comment	7.0	18.5	1662092201	12.394001	i've seen that said so many times, and fail to understand why Ruby syntax brings joy.Personally, I thought the muddled Proc, block, and lambda situation a mess, coming from Scheme 30 years ago to Ruby 20 years ago.		jjtheblunt
32729081	11.833651	-7.3585243	story	7.0	15.0	1662409918	-6.139717	Ask HN: Good resources for architecting simulation games?		SeanAnderson
32823056	12.352579	-7.378249	comment	7.0	29.5	1663069623	12.670751	The big takeaway here for me is that Akka has changed license to BSL.It's almost crazy to me that such a fundamental and widely used project would switch to such a restrictive license.Some more detail...		the_duke
32914220	12.206279	-7.4645386	comment	7.0	20.0	1663691848	-11.362149	As someone who spent the first 15 years of their career in Java, but has been out of the ecosystem for some time now, it's cool to see Java get such big improvements, especially virtual threads.Howeve...		hn_throwaway_99
32954132	12.168372	-7.0187144	comment	7.0	24.0	1663950971	-10.292298	"What I'd really like is a tsc that creates code to check types at runtime, like for API boundaries and parsing unknown input. Kind of like a built-in Zod. Maybe it's just an automatic type guard anywhere you have an ""as SomeType"" or an ignore directive."		nilsbunger
31793302	11.755952	-7.3431125	comment	7.0	46.5	1655582540	-8.8855915	">Hype: ""Static Typing reduces bugs.""Oof, that one is a huge can of worms."		moralestapia
31797918	12.165484	-7.0427785	story	7.0	64.0	1655632951	13.14409	Make the Raku programming language familiar to C++ programmers	https://software.gellyfish.co.uk/2022/06/make-raku-programming-language-familiar.html	lizmat
31833437	11.600799	-7.7362633	comment	7.0	40.0	1655887301	-7.301218	What would also be nice is an ML or Lisp transpiled to Go. Go has a nice compiler with a lot of money thrown into it, but it's locked into one syntax, and set of language features that isn't optimal f...		kubb
31840792	12.040978	-7.4745507	comment	7.0	17.5	1655926553	7.329741	I'll politely hijack this thread to ask for suggestions about what functional language to learn next.I have no functional experience apart from dealing with similar, toned down concepts in JavaScript....		kretaceous
31860521	12.019799	-7.7871404	comment	7.0	36.0	1656072316	10.503096	"let's see:    - OCaml vs Haskell: eager vs lazy  (=> memory consumption is more predictable)
    - OCaml vs Rust: OCaml has a GC (=> comfort) OCaml has tco (could not resist this ;) )
    - OCaml vs C..."		toolslive
31907706	11.995885	-7.7492332	comment	7.0	18.5	1656424541	10.405975	"There is little information in this interview about why they chose Haskell except the general notion that they liked it and maybe that it was faster than Python for their particular task. (I say ""mayb..."		BrainVirus
31920445	12.221934	-7.5906568	comment	7.0	19.0	1656512207	-11.368441	"I don't get Kotlin's position in rankings like this one.  I've heard people say, ""oh, for new Android apps, you definitely want to use Kotlin.""  And (I asssume?) people are writing lots of new Android..."		Taikonerd
31954173	11.774338	-7.1223326	comment	7.0	18.0	1656716662	9.176351	"""When you don't need it""If you're doing any kind of database / external network calls - won't you gain a huge amount of requests per second?I ask partly because on one of my projects, we have a fastap..."		socialist_coder
31959924	11.644718	-7.949059	comment	7.0	21.5	1656776249	10.207346	Go needs a better ORM story, it is unfortunate Prisma abandoned their Go port.		melony
31975272	11.940451	-7.429987	comment	7.0	21.0	1656927957	7.30165	All these niche functional programming languages are an exercise in pseudo intellectualismGive me an object oriented language any day. The world is made of state and processes, (modern niche) function...		singaporecode
31976189	11.959664	-7.5879526	comment	7.0	18.5	1656936743	-3.783457	"Mathematicians use ""just"" with a specific meaning: it is not used to gloss over something that the author doesn't know how to explain. It has a purpose, useful for mathematically trained readers.For s..."		saithound
32002202	12.322044	-7.296655	comment	7.0	24.5	1657120386	7.1003957	Could a developer use Squeak as an emacs replacement?		guessbest
32054750	12.052463	-7.7756076	comment	7.0	31.5	1657539373	10.418676	> The essence of monads is to use abstract types to enclose a mutable state, providing only a set of carefully-crafted combinators for using it in such a way that you can't duplicate the state but hav...		bluepoint
32143235	11.6137085	-7.9687	comment	7.0	21.5	1658176137	10.22244	As an engineer who uses Go and appreciates it as a replacement for most purposes where you might use C or C++, the complaints just seem bizarre.You've got people who argue against explicit error check...		37ef_ced3
32191569	12.054614	-7.2167892	comment	7.0	18.5	1658495830	9.146917	I am still not understanding the purpose of this as I believe it is grounded on the wrong assumption.Pretty much every single asynchronous operation other than some `Promise.resolve(foo)` where foo is...		epolanski
32322283	12.025326	-7.812527	comment	7.0	28.5	1659463786	10.410923	Can you explain monads to a 5-year old? Can you explain objects?		bitL
32386085	11.6619	-7.9400787	story	7.0	31.0	1659970198	10.1975975	The ‘fat service’ pattern for Go web applications	https://www.alexedwards.net/blog/the-fat-service-pattern	ingve
32499389	12.253211	-7.5354257	story	7.0	18.0	1660757871	-11.361292	Jetbrains Kindly Asks You to Stop Using the Kotlin Mascot in Its Current Form	https://blog.jetbrains.com/kotlin/2021/10/introducing-the-kotlin-mascot/	Aaaaustin
22021581	11.980364	-7.7392282	comment	7.0	24.0	1578768719	10.381259	How does it compare to Darcs?https://hackage.haskell.org/package/darcsEdit: Better link is http://darcs.net/, darcs has been around for more than 10 years and is still actively maintained.		hbbio
22114285	11.650675	-7.958519	comment	7.0	55.0	1579663325	10.234485	I definitely appreciate many parts of go's tooling ecosystem: pprof, gofmt, go get (in GOPATH mode), and go bug are all pretty good ideas. pprof in particular and the various profiling tools build out...		jcalabro
22115084	11.60892	-7.939909	comment	7.0	43.5	1579674018	10.213123	Go would be about right, had it been released around 1992, when we had Oberon, Oberon-2, Component Pascal, Modula-2+, Limbo making the university rounds.As it is, I see it mostly as C replacement.Yes,...		pjmlp
22149107	11.957705	-7.7425184	story	7.0	75.0	1579992354	10.413206	Arduino-copilot makes it easy to use Haskell to program an Arduino	https://joeyh.name/blog/entry/announcing_arduino-copilot/	dwb
22151691	12.0523	-7.838791	comment	7.0	18.5	1580040559	10.412972	"OCaml was my first serious language, and while I think it's a bit weak for ""programming in the large"" (cumbersome types, typeclasses, lack of type annotations sometimes hurts) I'm still incredibly fon..."		tomp
22178678	11.602081	-7.9575763	comment	7.0	54.0	1580288377	10.210042	I really admire the Go team for sticking to their guns and taking their time before making language changes. Let's avoid another C++.		gautamcgoel
22178614	11.640602	-7.9751835	comment	7.0	33.0	1580287571	10.242927	I thought the whole point of go was to remove extraneous features and provide a completely minimal programming language.  The argument being that all those extra features are a source of bugs.Neverthe...		gameface
22192147	11.961858	-7.721458	story	7.0	167.0	1580399111	10.423902	Developing GHC for a Living	https://serokell.io/blog/developing-ghc-for-a-living	jacobwg
22199385	11.9962435	-7.7622757	comment	7.0	22.5	1580449143	10.387943	"""A functor instance lifts a function over some structure to affect only the values within. An applicative (a monoidal functor) leverages a structure and function together while lifting the function ov..."		intrepidhero
22246630	11.974947	-7.598122	comment	7.0	25.0	1580910372	10.395641	Standard ML is almost the perfect language—functional-first without all the heavyweight and seemingly endlessly proliferating categorical abstractions which keeps the level of knowledege one needs to ...		voidhorse
22248263	12.046754	-7.768012	comment	7.0	20.0	1580919856	10.404541	As someone with absolutely zero experience with ML languages of any kind, would this be the best intro for me to get into it? Or would I be better off with OCaml?		lwb
22257189	11.662922	-7.939302	story	7.0	176.0	1581005661	10.187889	Show HN: My Book, Hands-On Software Engineering with Golang	https://www.packtpub.com/gb/programming/hands-on-software-engineering-with-golang	achilleasa
22289402	11.942777	-7.4403305	comment	7.0	38.0	1581345255	7.3331203	I think most people miss the philosophy of FP; even practitioners of FP. A good chunk of React and Javascript developers just don't get it. They harp on about immutability but really the statement is ...		crimsonalucard
23420504	12.434524	-7.867904	comment	8.0	47.5	1591297671	-11.159664	Three examples of this:1. core.async: So the guys who built golang did it because they had this cool idea for creating coroutines using channels. However, since it required very low-level functionalit...		drcode
23469013	12.022559	-7.527647	comment	8.0	33.5	1591725485	7.322323	An excellent list. Regarding functional programming, I recommend starting with a gentle approach that doesn't require picking up a new language:1. Stop creating counters/loops and become facile with m...		braindongle
23536190	11.606678	-7.2908726	story	8.0	100.0	1592285324	8.400123	Functional Programming for Array-Based Parallelism	https://www.infoq.com/presentations/functional-programming-parallelism/	kooskoos
23562165	11.70367	-7.4137936	story	8.0	116.0	1592481041	-7.1440487	Show HN: Poica – Algebraic data types and type introspection for pure C	https://github.com/Hirrolot/poica	Hirrolot
23667675	11.889854	-7.6356797	story	8.0	117.0	1593336881	10.343623	A primer on the cruel, tacit laws of type-level programming in Haskell	https://www.aymannadeem.com/haskell/2020/05/15/Kindness-for-Mean-Girls.html	tenslisi
23797302	11.919953	-7.417267	story	8.0	87.0	1594419995	7.2637806	Seemingly impossible functional programs (2007)	http://math.andrej.com/2007/09/28/seemingly-impossible-functional-programs/	ogogmad
23840476	11.65858	-7.9477077	comment	8.0	39.5	1594779433	10.211721	Meanwhile I will never use Go until it has generics.I wonder if there is more of people like me or people like you...		deanCommie
23998236	12.005619	-7.742586	comment	8.0	27.0	1596117684	-10.779452	"Very much a generic anti-cryptocurrency rant, and very little haskell-specific clarifications. I understand not wanting to name specific projects (Cardano comes to mind; ""Cardano is a blockchain platf..."		bondarchuk
24028342	12.119544	-7.8567314	story	8.0	108.0	1596372174	10.458367	OCaml for the Skeptical: OCaml in a Nutshell (2006)	https://www2.lib.uchicago.edu/keith/ocaml-class/class-01.html	ColinWright
24030528	12.05469	-7.746651	comment	8.0	36.0	1596393414	10.4519	I like Ocaml and it would be a good choice of language for most kinds of projects, especially if good performance is desired. OCaml is dead simple to learn (I always recommend it as the first FP langu...		smabie
24031743	12.036054	-7.724915	comment	8.0	30.5	1596402380	10.381891	There is a strange... kind of poetry with Haskell. It is like math on wheels, math applied to procedures, math with... time.Its appeal to me is like the appeal of math to me, not like real analysis ma...		avindroth
24047492	11.6248255	-7.1307096	comment	8.0	32.0	1596525102	-6.9873857	In my experience learning, teaching, and watching other people learn FP, it's far easier to learn FP with a language which is actually designed for it, e.g., Elm.JavaScript isn't that. It carries too ...		yakshaving_jgt
24060069	11.657868	-7.1060214	comment	8.0	88.5	1596630660	8.482184	For years of my life, all I thought about was stuff like this. If you've ever ran latency sensitive systems on the JVM.. man is it ever a pain.Who was it that turned GC off entirely, minimized allocat...		jakewins
24158617	11.875087	-7.0792136	comment	8.0	28.5	1597416572	6.9520726	>I've had coworkers who would put this before every method call, because...? When calling your own method, in your own class, that inherits/implements no other classes, why on earth would you decorate...		nend
24197817	12.2373705	-7.5429335	comment	8.0	59.5	1597753822	-11.373738	"As far as the Java platform (AKA ""the JVM"") goes, Kotlin is painting itself into a corner. Kotlin was designed in 2009-10, in the Java 7 days, around the time of the Oracle acquisition, and at a time ..."		pron
24241886	11.70791	-7.0614576	story	8.0	15.0	1598074827	5.400991	Don't Name Classes After Patterns. Mostly	https://sender.cloudy.email/campaigns/paxjhchaiasjoifsiw/webversion/jdnapfbdgjegdqmdeduwc	allending
24303322	11.601418	-7.8725863	story	8.0	93.0	1598610815	10.030643	Testing Database Transactions in Go	https://marvinblum.de/blog/testing-database-transactions-in-go-jEaOGXravM	marvinblum
20014281	12.319755	-7.3161097	story	8.0	123.0	1558868414	7.178869	Byte Magazine – Smalltalk (1981)	https://archive.org/details/byte-magazine-1981-08	tosh
20154012	12.24245	-7.640888	comment	8.0	33.5	1560246191	11.944577	Why is Scala not more popular? It seems like such an awesome language, is it because of it academic origins or because it's not functional enough?		type0
20280468	11.983723	-7.7465086	comment	8.0	26.0	1561506474	-10.254494	This post is not for beginners/non-haskellers, I don't understand why it's being posted here. Is this intentional or are people in the haskell community this tone deaf? It's like we're determined to p...		hardwaresofton
20323926	11.623616	-7.311709	comment	8.0	35.5	1561975752	-8.715349	I don't agree with this at all. Having the types of every variable written explicitly in the code is important documentation that answers very quickly the question 'what is the type of this thing' wit...		cjfd
20326035	11.619917	-7.9627776	comment	8.0	33.5	1561993703	10.199056	Is Golang significantly slower than c++ ? I thought Google had invented Golang to solve precisely these kinds of code for their internal use.I had thought most of the systems code inside Google would ...		sandGorgon
20356570	11.693923	-7.8982797	story	8.0	149.0	1562263684	-10.301386	Ale – A Lisp Environment Written in Go	https://www.ale-lang.org/	andrenth
20455526	11.62196	-7.9796324	comment	8.0	50.0	1563325866	10.237105	Literally the first non-trivial code I wrote in go (running a bunch of goroutines to download a ton of files from a website in parallel)... I knew exactly where and how things could fail and where thi...		natefinch
20455167	11.604395	-7.937304	comment	8.0	23.5	1563322301	10.267391	I don't understand why anyone would be (strongly) against this proposal.  If I understand it correctly, it's just a shortcut.  That is, the old (existing) way would still work.  If anyone didn't like ...		AnimalMuppet
20474530	11.598183	-7.904297	story	8.0	293.0	1563488741	-8.1370945	TinyGo: New Go Compiler Based on LLVM	https://tinygo.org/	dcu
20577243	11.654461	-7.796153	comment	8.0	30.5	1564600321	10.235706	Personally, I prefer the current interfaces-based solution to generics. It's a little verbose, but keeps the language simple.However, I think that the people we should be listening most are the ones d...		haolez
20655141	11.970848	-7.741892	comment	8.0	37.0	1565363964	10.335921	"Haskell is dense.  I'm picking it up now[0], so this project was very useful for me to see how some ""real world"" Haskell is written.  But yes, take for example this function  getSocketAPIPort :: Int -..."		daenz
20714137	11.717583	-7.4181805	comment	8.0	85.0	1565955746	-8.73426	"The problem is that dependent types (and the very idea of ""correctness by construction"") suffer from fundamental, serious limitations -- both in theory and in practice -- that the author does not seem..."		pron
20743140	12.207246	-7.6390595	comment	8.0	42.5	1566264533	11.9481945	I'm curious to know the target user. There's no JVM interop, so one of the main reasons to use Scala -- an evolution of Java the language -- is out. Plus with Kotlin even that reason is being outdated...		azinman2
20825088	12.041125	-7.0532017	comment	8.0	28.5	1567034641	-9.506639	How? How it's not close to typescript? I mean what are features that python's type annotation (and mypy) lacks in comparison to typescript?		h8hawk
20860888	11.697772	-7.282865	story	8.0	200.0	1567448240	-8.748512	Timeline for Logic, λ-Calculus, and Programming Language Theory (2012) [pdf]	http://fm.csl.sri.com/SSFT15/Timeline.pages.pdf	adamnemecek
20861869	11.781746	-7.4954777	comment	8.0	24.0	1567459416	-5.246096	"I like the article but I disagree: Mappable is the correct name in this case and does transmit the meaning which is contained in the ""grammatical"" expansion. The confusion here is that there are prere..."		guerrilla
20869945	11.643634	-7.970052	comment	8.0	28.5	1567537381	10.21135	I actually just started to use go on windows just to check it out. First impressions from a newbie:- Getting started with go and vscode is kinda bad right now. I installed go, set up GOPATH,  installe...		zubspace
20907399	11.666098	-7.1046453	comment	8.0	29.0	1567899026	-8.895288	The worst, buggiest, least maintainable code I've ever dealt with was a 500ish line (heavily tested!) untyped Python file at my last job. Caused more trouble than all the Java and C++ and Go combined....		jdm2212
13619294	11.685655	-7.89568	comment	8.0	22.5	1486764100	10.087558	When making HTTP requests with Go (or any language) you should at least consider the following:- Setting a User Agent (req.Header.Set(Key, Value))- Setting Timeouts (https://blog.cloudflare.com/the-co...		Xeoncross
39460623	11.63388	-7.9693923	comment	8.0	21.5	1708555324	10.197733	I don't think it's simple. Just `go run` would be far more simple. Right now I first have to figure out if its `go run .` or `go run cmd/main.go` or some other thing.		mqus
39495681	11.591461	-7.0649605	comment	8.0	23.5	1708813531	-6.7669544	"Can someone who's better at Python than me chime in, isn't the obvious transformation of    def square_vals(x : list):
        return [val * val for val in x]

into a generator to instead write    def..."		CBLT
39620062	11.720122	-7.3877087	comment	8.0	25.0	1709752896	-8.700533	IMHO, in the future programming may look similar to this. Write a type declaration for a function with an expressive type system, e.g. refinement types. Then use LLMs + SAT/SMT to generate provably co...		nextos
36571956	11.650522	-7.1455665	story	8.0	47.0	1688387469	-8.850658	Dynamic Languages Strike Back (2008)	http://steve-yegge.blogspot.com/2008/05/dynamic-languages-strike-back.html	curling_grad
36790280	11.700389	-7.363927	story	8.0	74.0	1689788508	3.8101683	A Checklist for Choosing Type	https://fonts.google.com/knowledge/choosing_type/a_checklist_for_choosing_type	Paul-Craft
36873645	12.399219	-7.11221	story	8.0	65.0	1690351453	12.313481	How to Dynamically Create Instance Variables in Ruby	https://www.akshaykhot.com/dynamically-create-instance-variables-ruby/	thunderbong
36889101	11.944497	-7.4509254	comment	8.0	24.5	1690433923	7.299884	I see a lot of “coding” talk in the blog and comments from the author here, but few mentions as to what kind of software they’re building or what use cases they’re targeting.My hot take is that the re...		opportune
37124647	11.927735	-7.1452904	comment	8.0	24.0	1692037495	-8.907372	What’s currently the best static typed language for web development?		arturkane7
37158963	11.890793	-7.3752294	comment	8.0	38.0	1692262517	7.097126	"I'm all for ADTs but the reasons the article gives are all wrong, and in fact I think it makes the code a lot worse as a result.Object programming doesn't mean ""inheritance trees"", that's just the (IM..."		trashburger
37418692	12.020134	-7.812819	comment	8.0	33.0	1694093658	10.431563	> now you know what a monad is... therefore you will be unable to explain to anyone what a monad isIsn't a monad effectively just an abstract wrapper for some properties that you can apply sequential transforms on? Why do people keep making out they are some form of voodoo?		supermatt
37465478	11.762079	-7.2533636	comment	8.0	28.0	1694430403	9.157691	One of the biggest mistake, in my opinion.Especially with async which complicates lifetimes a lot.		unsolved73
37522642	12.177142	-7.123106	comment	8.0	20.5	1694784525	8.505277	I wish game development wasn't so monolithic.  You're either all in on Unity, or all in on Unreal, or all in on GoDot.  They are designer forward, code later.  Each has a marketplace of sorts, but in ...		swalsh
37534666	11.672864	-7.9180737	story	8.0	87.0	1694871676	10.188196	static-server: an HTTP server in Go for static content	https://eli.thegreenplace.net/2023/static-server-an-http-server-in-go-for-static-content/	chmaynard
24423009	11.728078	-7.293972	comment	8.0	26.0	1599670609	-8.063654	Objects are just a poor mans closure.Closures are just a poor mans object.(Not sure where this quote is from originally? Maybe here: http://people.csail.mit.edu/gregs/ll1-discuss-archive-html/m...)		goto11
24553590	12.125947	-7.512958	story	8.0	55.0	1600777016	-10.600997	Bottom Type in F#	https://tysonwilliams.coding.blog/2020-09-21_bottom_type_in_fsharp	adelarsq
24607184	11.691034	-7.3269753	comment	8.0	47.0	1601219401	-8.819277	"A lot of people are making comments about how they can code ""faster"" without types.But for the majority of the code we write, inital speed isn't that important. Understanding the code and maintaining ..."		rswail
24635141	11.9513	-7.7291584	story	8.0	124.0	1601432590	10.402488	Haskell GHC 9.0.1-alpha	https://mail.haskell.org/pipermail/ghc-devs/2020-September/019286.html	harporoeder
24693930	11.759807	-7.229511	comment	8.0	35.0	1601947641	-9.017355	This example demonstrates why I don't understand Python's type annotations. They seem to be incompatible with the language's core principle of duck typing.Why would you constrain a function like `square` to only accept `int`s and `float`s? What if I want to square, say, a `fractions.Fraction`?		pansa2
24719124	12.098716	-7.878718	story	8.0	153.0	1602165456	10.434069	Multicore OCaml: September 2020	https://discuss.ocaml.org/t/multicore-ocaml-september-2020/6565	horiz0n
24823141	11.658037	-7.17137	comment	8.0	24.0	1603078932	9.121876	I agree with you that is obvious at first glance now a days but I wouldn't want to see it written like that in Python at least...I would prefer to have small functions named after what it is accomplis...		aprdm
24880098	11.92257	-7.4412465	comment	8.0	40.0	1603556406	7.241783	"I think it's time we stop using the phrase ""functional"" to describe this paradigm; at this point, every imperative language made in the past 30 years has first-class functions, and there is no other f..."		kibwen
24922919	11.703707	-7.816697	comment	8.0	21.5	1603912398	10.177967	100% agree. To a very real extent, Go probably only exists at all because Google poured an infinite amount of effort into Unladen Swallow--a project designed to remove the GIL from Python 2 to make it...		saurik
24953440	11.962316	-7.502571	comment	8.0	55.0	1604165725	7.2864184	Functional programming appeals to many of us for reasons other than these practical considerations: Functional programming feels like reasoning in algebra. As in Modern Algebra for math majors (groups...		Syzygies
24959782	12.245138	-7.622609	comment	8.0	20.0	1604242013	-11.433439	Can anyone comment on whether Kotlin Multiplatform could be used instead of Flutter if the goal is write once for both iOS and Android? I am excited about porting my Android apps to Kotlin from Java a...		xrd
25012991	11.703859	-7.9492464	comment	8.0	28.0	1604718859	10.200792	The more you get to know Go's stdlib the less and less youll think a web framework is necessary.Youll find that utilizing http Round Tripper along with the Handler interface in the http library will m...		ldelossa
25043728	12.237465	-7.637006	comment	8.0	21.5	1604995671	11.94918	This is a nice write-up, it's beeb some time since I've written Scala and Scala 3 looks promising.Though, I am curious if there is anyone else who shares my mindset on Scala.In a corporate environment...		xyzzy_plugh
25262764	12.505991	-7.7862115	comment	8.0	27.0	1606802014	-11.109386	Piggybacking this question for people interested in the topic:Which everyday high level data structures you use are built on lock-free implementations?Clojure's maps/vectors (which are persistent data structures) come to mind for me, for one.		fulafel
25386971	11.646157	-7.8161798	comment	8.0	42.5	1607701508	10.446733	I saw Scala taken over and destroyed by the FP fanatics who want to turn every language into Haskell. I hope they don't do the same to Rust. Just use Haskell and leave the rest of us alone!It sounds s...		zaptheimpaler
38598848	12.125981	-7.227091	comment	8.0	25.0	1702285200	8.516753	"Ah, ECS. The most ill-defined software pattern since IoC/DI. Everyone seems to have their own understanding of it, usually somewhere on the spectrum between ""what if we kept the game state in a relati..."		TeMPOraL
38632905	11.918698	-7.393608	comment	8.0	20.0	1702495665	7.01912	"Can anybody answer why the author wrote ""indirect branches tend to show up in object oriented languages""?Given that branches are, well, just branches in any language, what makes OO so special?Also fur..."		SillyUsername
38689573	12.393827	-7.1321783	comment	8.0	23.0	1702940197	12.338373	"I don't know Ruby at all, and maybe some familiarity with the language would help, but the biggest example code makes absolutely zero sense to me:    RSpec.describe Ticket do
      context 'when the t..."		shaftway
38692146	12.489951	-7.0789027	comment	8.0	28.5	1702963277	12.383795	I hate Ruby with a passion (it's also the language I mostly use in my day job currently).It's not necessarily the language itself, which is a reasonable language, it's the patterns that are common in ...		jupp0r
38708010	11.625201	-7.1443443	story	8.0	84.0	1703076404	7.0037556	C Object Oriented Programming (2014)	https://nullprogram.com/blog/2014/10/21/	sergiogdr
38901276	11.75489	-7.4575377	comment	8.0	24.5	1704636473	10.12799	"As for why type-obsessed languages use terms like this, I guess we can blame math, as the article briefly mentions.  Something is homomorphic (""same form"") if there is a map (""relationship, point-to-p..."		retrac
38989529	11.634746	-7.2343817	comment	8.0	37.5	1705232102	5.090935	"The name ""Dynamic Programming"" might seem out of place because it doesn't come from programming as a discipline. In this case, it actually refers to something like optimization, similar to linear prog..."		ulucs
32558378	11.81997	-7.1638207	comment	8.0	34.5	1661209110	-9.047683	"I can't articulate specifically why but using typing in Python just feels like so much pain compared to other languages that have ""opt-in"" nominal typing syntax (PHP et al.).The workflow feels frustra..."		kungfufrog
32636682	12.096995	-7.8641853	story	8.0	267.0	1661770813	10.458218	OCaml at First Glance	https://batsov.com/articles/2022/08/29/ocaml-at-first-glance/	todsacerdoti
32711899	11.915239	-7.7675447	comment	8.0	22.0	1662290722	10.38882	I wanted to love Haskell, but I've come to realise that a language is more than just expressivity and clean abstractions. UX quality of tools, library ecosystem and general support networks are equall...		als0
32758842	11.743861	-7.0650344	comment	8.0	29.0	1662594094	5.150191	Thinking out loud here...is it possible to use the same patterns for good?Like, infinite scroll, bite-sized chunk UI, etc. that trick our minds into reading a full book?		judah
32879848	11.65529	-7.332473	story	8.0	189.0	1663438677	-8.856708	Show HN: LambdaLisp – A Lisp interpreter that runs on lambda calculus	https://woodrush.github.io/blog/lambdalisp.html	woodrush
31776952	11.853661	-7.6065516	comment	8.0	45.5	1655467953	-5.2014375	Hello, author here! As the website says, the compiler itself is still in a very early state where basic things like functions, types, traits, inference, monomorphisation, and codegen are implemented. ...		jfecher
31859978	12.02023	-7.5823565	comment	8.0	21.0	1656068059	10.396408	I learned some Haskell years ago but it didn't stick with me. Lately, I want to get back into functional programming to see whether I'm missing out on something. This book looks nice, and so does OCam...		m_a_g
31873442	11.868293	-7.3897653	comment	8.0	24.0	1656144839	7.034274	Do we need inheritance at all? It only leads to complicated class hierarchies and leaky abstractions.   Are there cases/problems where inheritance approach is superior to composition, interfaces, etc?		cabirum
31907467	11.967763	-7.6895957	comment	8.0	25.5	1656423211	-10.321889	Glad to see the cave-man like debugging is brought up.Haskell stops many classes of bugs, but lord help you if you've made a complex logical mistake somewhere along the line and are trying to figure o...		nickelpro
31974954	11.654274	-7.3685513	comment	8.0	44.0	1656924806	10.0304985	"These definitions don't really give you the idea, rather often just code examples..""The ideas"", in my view:Monoid = units that can be joined togetherFunctor = context for running a single-input functi..."		mjburgess
31999774	12.301973	-7.3056555	story	8.0	119.0	1657110130	7.053208	Smalltalk Squeak 6.0	https://raw.githubusercontent.com/squeak-smalltalk/squeak-app/squeak-trunk/release-notes/6.0	emme
32003356	11.729451	-7.0626826	comment	8.0	20.0	1657125174	9.0938225	Do you have an example of a dynamically typed language where, say, addition of two lists of doubles would be significantly faster than in Python?		AlexTWithBeard
32028430	11.592123	-7.4323893	comment	8.0	30.5	1657319361	-8.628312	This is good to hear.There's something like a cognitive bias that makes me leary of genetics (in any language). Once you have some cross cutting feature, generics or object orientation, or in function...		bediger4000
32078761	11.941719	-7.4415507	comment	8.0	34.0	1657683191	7.1824393	My experiences with the encroachment of FP into otherwise imperative or OO languages has mostly been:1. Write a bunch of functional code.2. Marvel at how clean and neat things are.3. Get customer repo...		kstenerud
32082554	11.688251	-7.259913	comment	8.0	22.0	1657719553	-8.49056	"The reactive programming language one is really interesting. A compiler ought to be able to compile ""normal"" straight-line code into conventional efficient code. It's hard to know how that sort of thi..."		jerf
32188816	12.356889	-7.113341	story	8.0	106.0	1658467547	12.334718	Arbitrary file execution in TZinfo (Ruby)	https://github.com/tzinfo/tzinfo/security/advisories/GHSA-5cm2-9h8c-rvfx	Ichaelus
32322392	11.883388	-7.4348555	comment	8.0	47.5	1659464345	7.2737784	"The recent focus on adapting functional programming is a reaction from the shift to the dangerous quadrant of the immutable-mutable/unshared-shared ""Magic Quadrant"" chart.Before multi-core, multi-thre..."		mikewarot
32436687	11.949143	-7.735893	story	8.0	113.0	1660301594	10.429919	GHC 9.4.1 is now available	https://discourse.haskell.org/t/ghc-9-4-1-is-now-available/4901	todsacerdoti
32452527	11.952445	-7.0638776	comment	8.0	74.0	1660415833	12.898946	"At this point I'm open to try anything that will give me access to the python ecosystem without having to code in Python.
From the FAQ it looks like Erg code gets transpiled to python bytecode."		latenightcoding
32498484	11.821879	-7.3547754	comment	8.0	27.5	1660753908	-8.945268	Depends on the context. When you're programming a transactional banking system? Heck yeah I want static types.When you're programming a form on a web page? It's way-ay-ay more effort for dubious gains, with new downsides added into the mix.		jaredcwhite
22090562	12.447258	-7.0609293	comment	8.0	24.5	1579428895	12.377329	Kind of offtopic: I did some Ruby and I find some of the conventions really confusing; for example, the lack of “()” when calling a method. You never know if you’re accessing a property of calling a method until you grep the code. Am I the only one who feels this?		_em6m
22098604	12.347775	-7.2571216	story	8.0	237.0	1579526696	7.125874	Pharo 8.0	http://pharo.org/news/pharo8.0-released	estebanlor
22149778	11.973856	-7.735422	comment	8.0	33.0	1580001825	10.433423	Trying to keep an open mind here about this - but what does Haskell offer on an _arduino_ aside from developer preference?Surely C/C++ will be the better performer on such a tiny board... And usually you want to squeeze every drop of performance out of tiny boards		jonny383
22235072	11.785936	-7.655497	comment	8.0	28.0	1580821689	10.242409	This doesn't seem to be comparing anything like the same thing. Does the Haskell version really do the same thing as the C version? Does it handle all of the same error cases, providing the same quali...		notacoward
22238496	11.731227	-7.2590823	comment	8.0	27.5	1580838135	8.668631	"So some immediate thoughts:1. Why not just call these ""structs""? Everyone knows what a struct is. Also making ""struct"" a reserved keyword is less likely to cause issues than ""record"";2. I get that the..."		cletus
22240925	11.68174	-7.273409	comment	8.0	24.0	1580850162	-8.77832	Is type-sensitive code totally acceptable now? I do use it at times but generally try to avoid it.		zwieback
13750651	12.007049	-7.706462	story	8.0	82.0	1488249302	10.40184	Show HN: Online Haskell REPL	https://repl.it/site/blog/haskell	amasad
13815189	11.629051	-7.178732	comment	8.0	25.5	1488922682	1.6606874	Whenever I read articles like this and the ensuing discussion that follows, I'm reminded of this quote from Dijkstra:Don't blame me for the fact that competent programming, as I view it as an intellec...		agentultra
13820109	11.601097	-7.2036633	comment	8.0	49.5	1488980359	2.0695677	I think you can write any program using only advanced concepts from the problem domain, not advanced concepts from programming itself. For example, I'll happily implement a difficult numerical algorit...		cousin_it
13883250	11.812769	-7.5229096	story	8.0	79.0	1489650198	10.102441	When You Should Use Lists in Haskell (Mostly Not)	http://www.imn.htwk-leipzig.de/~waldmann/etc/untutorial/list-or-not-list/	luu
13931522	12.1441	-7.530532	comment	8.0	22.5	1490195362	-10.590592	Enjoyed the article. My personal battle with f# has always been searching for what is idiomatic. Everything feels a little bit foreign when you write something in f#. One of the responses the author l...		osd
13950168	12.393857	-7.0216026	comment	8.0	20.5	1490373679	12.880742	Is scheme a suitable replacement for perl or ruby for everyday small-scale programming?		chrismealy
13953199	11.774286	-7.3999696	comment	8.0	38.0	1490399532	-8.863899	I continue to be believe even as a static typing fan that static types are fundamentally incompatible with OTP and it's goals.Distributed systems just seem to too thorny for static types to subjugate/...		platz
13959197	12.027447	-7.7969303	comment	8.0	50.5	1490503517	10.443557	My general problem with Haskell articles and such: they are written as if you already understand Haskell. They make total sense if you know the language, but if you are trying to learn are mostly usel...		jnordwick
14071354	11.855893	-7.2347693	comment	8.0	31.5	1491730736	-8.9796505	> #2 Static Type SystemIt's really weird to see one of the reasons for their switch to Go was because it's a statically typed language. If you want static typing, you don't choose Python in the first ...		rajathagasthya
14106557	11.967475	-7.7361555	story	8.0	290.0	1492089485	10.437012	Intel Haskell Research Compiler	https://github.com/IntelLabs/flrc	mpweiher
14239031	11.626687	-7.469465	comment	8.0	21.5	1493656549	9.317485	"'Concurrency-by-default' is similar to a notation I've been using to map out async service calls. It's just this: lines are terminated with "","" or "";"". A comma doesn't block and all comma-separated li..."		sixo
14267099	11.931842	-7.640404	comment	8.0	28.5	1493920561	10.395542	> very hard to understand why a function could be useful in the first placeSo true.https://hackage.haskell.org/package/base-4.9.1.0/docs/Contro...> mfix :: (a -> m a) -> m a> The fixed point of a mona...		m-j-fox
14275401	11.688728	-7.0265503	comment	8.0	33.0	1494006857	5.4868603	I think every Python programmer implements this at some point.I think the real reason not to do this is one that as of this writing still hasn't been mentioned yet, which is that when using dot notati...		jerf
14375472	12.281833	-7.588733	comment	8.0	26.0	1495201149	-11.371679	"It's very sad that our industry is so hype driven.Nothing really changed, you could write Android apps on Kotlin before, as well as on any other JVM language. But now ""Kotlin is the hero"".I suspect th..."		yeasayer
14421538	12.2331085	-7.619554	comment	8.0	22.0	1495763115	11.953162	I'm not a scala dev but I'm curious, what makes scala a good scripting language? Bash has its faults but it's still great for adhoc stuff and when it stops being great you can just move to a more spec...		arnioxux
14448492	12.074008	-7.1544356	comment	8.0	25.0	1496177941	3.0907495	I still don't get the need for Promises.. Almost all examples, just like this one in the provided link, talk about solving callback hell with Promises, while callback hell is just a bad way of writing...		twii
14462131	12.189528	-7.514413	comment	8.0	21.5	1496336637	11.967707	> If you lean more towards the functional programming paradigm side of Scala then you’ll probably love the following about Rust’s type systemSome of the more popular functional languages have advanced...		qsymmachus
14528379	11.657387	-7.315838	comment	8.0	25.0	1497117880	-8.690678	There is a movement going on from weak typing back to strong typing which is the same idea approached from the opposite (practical) end. Have the computer do more work to verify program correctness by rejecting invalid expressions.Maybe the two will meet at some point?		Joeri
14533515	12.0792265	-7.304236	story	8.0	7.0	1497211668	7.086663	Best modern language to learn object oriented programming		ds2643
14547081	12.299837	-7.5169487	comment	8.0	30.5	1497377207	12.819098	I agree. The actor model where actors can be scheduled on any thread is the best (Erlang, Goroutines). Second best is the node.js model of single threaded evented programming.		EGreg
14563355	11.709678	-7.082758	comment	8.0	23.0	1497553203	-6.819578	Not really.  You'll notice a pattern in most tech bigcos where they move from dynamic lang X to a statically typed language that can multithread properly.A few examples: Ruby on rails to java (twitter...		mahyarm
14584359	11.717446	-7.498038	comment	8.0	42.5	1497841409	9.783419	If they're doing breaking changes to the VM, I wonder if we can get rid of type erasure.  Generics seem really nice until you actually use them to do anything mildly complicated, then type erasure rea...		jimktrains2
14591680	11.6683445	-7.9713345	comment	8.0	31.0	1497923343	10.197014	I quickly looked this over. Does Golang have some hidden ORM like feature that makes complex persistence easy? I spent the last three months working on a storage mechanism that controls all of CRUD at...		virmundi
14591079	11.690767	-7.931694	story	8.0	112.0	1497913496	10.195902	Macaron: a high productive and modular web framework in Go	https://go-macaron.com/	type0
14623285	11.920994	-7.2403245	comment	8.0	22.0	1498257423	-10.211634	You haven't grounded your assertions on any logical arguments. I've worked on large code bases, both in statically typed languags, and dynamically typed ones, and the latter was a far worse experience...		winter_blue
30758776	11.618463	-7.3585978	story	8.0	4.0	1647891757	-10.347144	Ask HN: Programming ideas that redefine the way you look at programming		rmnull
30804253	11.65574	-7.60974	story	8.0	220.0	1648226260	10.105718	An Introduction to Generics	https://go.dev/blog/intro-generics	mfrw
30809385	12.098576	-7.83445	story	8.0	123.0	1648271219	-3.1316676	With Category Theory, Mathematics Escapes from Equality (2019)	https://www.quantamagazine.org/with-category-theory-mathematics-escapes-from-equality-20191010/	sebg
30907458	11.738129	-7.3971004	comment	8.0	36.0	1649084531	-8.890925	This is not a complete answer, but covers some languages. If you program too exclusively in dynamically-typed languages, you can be too used to not thinking about how physically large your types are, ...		jerf
31025036	12.491536	-7.068703	comment	8.0	26.5	1649931654	12.374777	To be honest, while I've dabbled in Ruby, I've never understood the difference on an intuitive gut level like other foreign constructs unique to individual languages I've gone deep with.I don't know w...		kungfufrog
31025673	12.424365	-7.0761976	comment	8.0	29.5	1649937372	12.364932	Ruby doesn't have symbols because of AST or VM details.Ruby has symbols in all probability because Lisp and Smalltalk have symbols.It could get most of the same practical upside of symbols from intern...		barrkel
31051360	11.9625	-7.2681284	comment	8.0	50.0	1650106625	9.186214	"First off, async/await is promises. It's merely syntactic sugar. The point of async/await is not to never have the word ""Promise"" appear in your code. It's also not meant to be universally better than..."		chmod775
31117611	11.837209	-7.1735826	comment	8.0	23.5	1650595018	-9.038287	I'm baffled by people loving type hints in python when strongly typed languages have been widely available for so long. This is why people liked java and c#.		tootie
31193814	12.283591	-7.5088663	comment	8.0	34.0	1651160166	12.83215	Actors are useful for keeping code clean/understandable/correct when dealing with heavy concurrency AND lots of mutable state.Actors are like objects, but the only way to interact with them is sending...		yashap
31204363	11.705653	-7.8190784	comment	8.0	21.0	1651236112	10.177898	Not to be shit-eating, but I never understood why people use python instead of Go other than for ML teams. I program mostly in Java and Go so would love a perspective.		mule1
31205792	11.649416	-7.9733086	comment	8.0	30.5	1651243321	-10.946383	I didn't care in the last post and I don't care about this one either. I care about my productivity, I care about my team's productivity, and I care about getting stuff shipped. Those are the things I...		streblo
31256317	11.678317	-7.76794	comment	8.0	28.5	1651633731	9.98727	Does GO even makes sense after Java's project loom and graalvm?		freakynit
31273926	11.69515	-7.0941854	comment	8.0	23.5	1651761506	-8.983218	"> Python can quickly check to see if they are using the dynamic featuresI don't understand how this is supposed to be ""quickly"" verifiable?Nothing prevents you from doing eval('gl' + 'obals')()['len']..."		dataflow
31493483	11.61544	-7.8745146	comment	8.0	21.5	1653406605	10.231277	Essentially every language provides some form of generics. Even Go 1.0 had `append` (a polymorphic function) and `map[K]V` (a polymorphic type). What Go 1.0 didn't have was user-defined generics. I am...		nemo1618
31552320	12.0134735	-7.8142624	comment	8.0	21.5	1653854081	10.418849	Monads are hard. I read many articles explaining what a monad is and what is good for but I never really grasped the concept. I probably have to learn Haskell.		huqedato
31553238	12.251885	-7.2658386	comment	8.0	31.0	1653861111	7.108909	As a former professional Smalltalk developer, I would caution against the experience of greybeards who wax lyrical about the incredible power of Lisp and Smalltalk, because even in their heyday that p...		smackeyacky
31566610	11.740932	-7.033533	comment	8.0	28.0	1653977890	-8.99977	"I wish there was a pattern to encapsulate data and functions from a module.So you could do:    import greeter

    greet1 = encapsulate(greeter)
    greet2 = encapsulate(greeter)

    greet1.name = 'J..."		TekMol
31600067	11.702106	-7.3666406	story	8.0	98.0	1654201478	9.119598	On Java/JVM: Loom and Thread Fairness	https://www.morling.dev/blog/loom-and-thread-fairness/	lichtenberger
31602440	11.966407	-7.0282288	comment	8.0	24.0	1654215842	9.018704	In your experience what languages would you say handle async well? Genuinely curious. I’ve only ever done JS professionally for a decade but started branching out into python, rust, and kotlin due to personal projects.		azemetre
31636642	11.594331	-7.9127636	story	8.0	182.0	1654480623	-8.092121	Tinygo: LLVM-based Go compiler for microcontrollers, WASM, and CLI tools	https://github.com/tinygo-org/tinygo	gilad
25466465	12.167258	-7.3626924	comment	8.0	47.0	1608295018	-11.286615	if JetBrains people are reading this, I want to say THANK YOU! You saved lots of developer time with IDE, then Kotlin language. I use Golang, Python and Database IDEs, and they are really nice and tim...		tuyguntn
25522600	11.766051	-7.2578893	comment	8.0	40.0	1608759967	9.216599	There are some pretty bad usability problems with most async APIs too.One is they make your functions colored; async functions world best with other async functions while normal blocking functions wor...		akvadrako
25564624	11.945652	-7.4700394	comment	8.0	23.0	1609198401	7.268404	So the big win with functional programming is easier testibility and fewer hazards when trying to multi-thread your code.With test-driven development is it not the case that you are forced down the pa...		CodeGlitch
25602615	11.973436	-7.3956337	comment	8.0	29.5	1609501911	2.6242542	FSM are fun to write but horrible to modify especially if you’re not the one who wrote it.		grandinj
25624946	11.929066	-7.7220817	comment	8.0	36.0	1609705892	10.347587	I recall an anecdote about how Haskell actually outperformed C on various tree benchmarks because it was using a better implementation. At some point, the C programmers got fed up with the airs of sup...		vitus
25699694	11.666492	-7.4883375	comment	8.0	25.0	1610194053	9.48364	I definitely agree with the documentation side of things, particularly lack of concrete examples.I found that overall however, learning Haskell made me a better programmer, even if it's more useful as...		madog
25979293	11.690279	-7.358448	comment	8.0	46.0	1612105199	-8.819679	>I have never had a static type checker (regardless of how sophisticated it is) help me prevent anything more than an obvious error (which should be caught in testing anyway).Obvious in retrospect is ...		coldtea
25979633	11.733149	-7.375868	comment	8.0	27.5	1612108114	5.828046	"> What thing that violates a type check would be ""perfectly fine to do""?One good example is where you might treat records or ""product types"" as mapsLet's say you want to write a function that can capi..."		dack
25987758	12.149979	-7.5148067	comment	8.0	20.5	1612179359	-10.61487	Are there any startups or companies using F# in production?		yen223
26012007	12.110619	-7.5214233	story	8.0	243.0	1612344555	-10.641944	Writing high performance F# code	https://bartoszsypytkowski.com/writing-high-performance-f-code/	pjmlp
26019418	11.6650915	-7.94917	comment	8.0	25.0	1612387956	10.211411	I've been writing Go for years and never came across a problem that made me want to have generics.Anyone able to give me a simple example demonstrating why Go needs this?		Crash0v3rid3
26024255	11.942977	-7.700561	comment	8.0	31.5	1612434580	10.400222	Having only a cursory knowledge of Haskell I found most of the examples rather impenetrable.From the text it seems this could be done in say C#, Java or C++, which sounds really interesting.Anyone have any examples or outlines of this in any such language for non-functional plebs like me?		magicalhippo
26031405	11.790755	-7.6256614	comment	8.0	30.5	1612484243	-10.159352	"I've been thinking for a while that it's about time a new (maybe jit compiled?) language hits the scene with:- A simplified/sounder natively integrated version of Typescript's type system
- Javascript..."		marmada
26081723	11.990393	-7.740896	comment	8.0	22.0	1612900286	10.436295	Is there anything of any significance written in Haskell outside academia?		why_Mr_Anderson
26101891	12.263267	-7.62641	comment	8.0	26.5	1613054387	11.949864	I definitely agree that many newer languages are strongly inspired by Scala, but I don't see a strong argument for why to choose Scala over one of a newer hybrid language. My own intuition is that the...		occupy_paul_st
26112128	11.857855	-7.2975955	comment	8.0	29.5	1613124966	9.198699	"Speaking of futures_unordered and similar patterns, I think a part of the ""async promise"" that has failed is the lack of concurrency for a single user request by default in most languages.That is, the..."		jiggawatts
26112830	11.970389	-7.7224813	comment	8.0	36.0	1613131994	10.430859	Another article that I am too stupid to understand... how do you get anything done in Haskell...		tonetheman
26142662	12.148843	-7.517004	story	8.0	74.0	1613396737	-10.632193	Introduction to the 'Why use F#' series (2012)	https://fsharpforfunandprofit.com/posts/why-use-fsharp-intro/	rfreytag
26158408	11.657922	-7.9769077	comment	8.0	44.0	1613507426	10.247848	>Go is still my favorite language when it's the right tool for the job.Forgive my ignorance, when would you recommend go? As in what problem domains have you seen it excel at?I have thought about tryi...		btreecat
26158464	11.621105	-7.9421854	comment	8.0	21.0	1613507681	10.190162	So happy to see file embedding move to the stdlib.  Having _everything_ in a single binary makes distribution so much easier.As an aside, I would love to see Go have first class support for watch/hot reload while developing...! (e.g. go run --watch main.go)		candiddevmike
26190943	12.000256	-7.758342	comment	8.0	25.0	1613724292	10.438079	What if the project became popular, scaled up and the original developer needed help with it? As Haskell is a niche language, wouldn't it be harder to find Haskell developers to come on board?		leonsegal
26378309	11.803941	-7.1507163	comment	8.0	43.0	1615141844	5.2722735	>What is a Pattern?>An 'element of reusable software'>A design pattern systematically names, motivates, and explains a general design that addresses a recurring design problem in object-oriented syste...		neonological
26425338	12.079545	-7.820214	comment	8.0	22.5	1615478066	10.426896	I want to use OCaml for professional development but have always been held back because of hearsay around tooling and libraries that cast doubt on the reasonableness of the choice. Care to advocate for that? (No need to sell the language itself; I like it.)		eternalban
35559104	11.996735	-7.782651	comment	8.0	27.0	1681407300	10.404512	"I find the terminology that Haskell uses quite misleading for software engineering. It borrows concepts from category theory with quaint names such as a ""monad"", ""endofunctor"", ""catamorphism"", etc. Th..."		Hirrolot
35571825	12.241287	-7.5146203	comment	8.0	27.5	1681491689	-11.38966	At KotlinConf today I gave a talk on designing apps with two-tier architecture, where you implement your entire app without the web stack appearing anywhere at all. Instead you publish desktop and mob...		mike_hearn
35622622	12.390302	-7.355698	story	8.0	245.0	1681864720	-8.721486	Firefly – A new compiler and runtime for BEAM languages	https://github.com/GetFirefly/firefly	mmcclure
35844078	12.054884	-7.762046	story	8.0	114.0	1683398186	10.430456	Implementing Value Speculation in OCaml	https://www.lortex.org/articles/value-speculation-ocaml/	Smaug123
36019084	11.785494	-7.223113	comment	8.0	28.0	1684659418	-8.952525	I went through a similar journey, without the Rust part. Started using type hints, data classes, pydantic to get the benefit of static typing after dealing with the pain of refactoring dynamically typ...		hakanderyal
36134461	12.137391	-7.5098996	comment	8.0	40.0	1685507245	-10.606427	I don't think it matters how good or bad C# is, Object Oriented Programming is a messLearning, how to use an Object System (a tree of objects/classes) is inherently hardThe current problem with F# is ...		systems
36197452	11.850895	-7.305901	comment	8.0	29.0	1685978328	9.210954	It's crazy that the programming community even accepted the concept of async/await as a sane one.Being sync or async is essentially a property of the attention of the caller, not of the action itself....		divan
36210822	11.658516	-7.046706	comment	8.0	31.5	1686048898	-7.761217	> Our API server was a Python Tornado service... and one of the most frequently accessed endpoint was used to retrieve user by their name or id. Because it supported retrieval by either name or id, it...		biorach
36216957	11.92407	-7.225306	story	8.0	12.0	1686075535	-8.96667	Why are many of the biggest web frameworks in dynamically typed langs?		jannesan
36367087	11.844503	-7.229266	story	8.0	60.0	1686973829	9.151626	What Kind of Asynchronous Is Right for You?	https://www.reactivesystems.eu/2023/06/15/what-kind-of-asynchronous-is-right-for-you.html	mooreds
36408248	11.754324	-7.044854	story	8.0	108.0	1687285152	-8.963373	Compiling Typed Python	https://bernsteinbear.com/blog/typed-python/	tekknolagi
36471591	11.909938	-7.409489	story	8.0	206.0	1687720310	7.254333	FP2: Fully In-Place Functional Programming [pdf]	https://www.microsoft.com/en-us/research/uploads/prod/2023/05/fbip.pdf	chriscbr
36515775	11.663159	-7.303379	comment	8.0	27.5	1688007189	-8.688189	While I respect people that prefer programming without explicit types, I can’t understand it.		osigurdson
28715646	11.596401	-7.2323627	comment	8.0	30.5	1633073252	2.0319593	> they value development speedI never understood that. For anything non-trivial, development speed is increased with types: you get auto-complete, safe refactorings, code navigation etc.		branko_d
28722669	11.726532	-7.292553	comment	8.0	28.0	1633117917	-8.871063	Line noise is a red herring in the static/dynamic comparison. You will still run into serious problems trying to shove ugly human-generated data into your nice clean type system.For mechanical things ...		blacktriangle
28726434	11.819659	-7.441341	comment	8.0	35.5	1633155912	7.422035	I’m constantly baffled by what functional programmers call “simple”. I’m sure this language does a lot with little but calling it simple is audacious to say the least. Why do so many things happen in ...		jimsimmons
28728864	11.903058	-7.1337037	comment	8.0	32.0	1633185199	9.069599	"JavaScript is a language whose flaws are well understood by experienced developers, and those flaws are massive.I also don't particularly care for ""async everything"" by default. It makes your program ..."		dolni
28786504	12.069219	-7.8010516	comment	8.0	29.5	1633615987	10.460391	I really hope to see more interest in OCaml in the future.It is probably one of the most underrated programming languages. The perfect marriage between state of the art functional programming and prag...		cardanome
28843336	12.0382	-7.693192	comment	8.0	21.0	1634063761	10.24995	I'd love to see an explanation of monads that accurately captures their capabilities in terms no more complex than those required to do the same for promises.		throwanem
28875973	11.711468	-7.453795	comment	8.0	33.5	1634291026	7.4714394	Can somebody please explain or give me some links how FP is supposed to work without a GC? For example Rust has different types of function pointers (Fn, FnMut, FnOnce), to guarantee the possibility o...		protomikron
28911906	11.763004	-7.337833	comment	8.0	29.0	1634591979	-7.0856857	"Please write a type for the following function:  def compose(start, *args):
    def helper(x):
      for func in reversed(args):
        x = func(x)
      return start(x)
    return helper

There is n..."		slaymaker1907
28943054	12.025804	-7.807728	comment	8.0	31.5	1634816643	10.437469	My takeaway from all this is that monads are kinda hard to explain. If something is hard to explain, that further suggests to me that it's probably the wrong abstraction.(Personally I find the railway abstraction makes a lot of sense, but maybe that's just me.)		cabalamat
28982796	11.743504	-7.037479	comment	8.0	23.5	1635117180	-5.1156154	"Am I the only one who's seeing ""sealed"" classes as an unfortunate development?I can't count how many times I had to resolve to using PowerMock and hacking bytecode just to mock something in one of the..."		p2t2p
29043040	11.614743	-7.887711	comment	8.0	21.0	1635538355	10.128264	While we’re at it, can someone explain Go contexts for me? I suspect they are a way to keep thread safe data that would otherwise be global or, in the C world, static, but I’m not quite sure. The go documentation just describes how to use them, not  why they should be used.		tomcam
29200214	12.484671	-7.077062	comment	8.0	27.0	1636731117	12.380531	I was never a fan of ruby until I had to use it at work.I think my main superficial turn-off was indeed the non-traditional loops and I was a fan of python whitespace indentation.But on the whole ruby...		lottospm
29250504	11.974185	-7.732779	story	8.0	114.0	1637139216	10.395482	Upcoming/proposed breaking changes to Haskell	https://github.com/fumieval/Haskell-breaking-changes	todsacerdoti
29285013	11.5915575	-7.4884634	comment	8.0	31.5	1637374603	9.944542	"It's staggering to me that people keep making these ""rich"" data formats without sum types. At least to me, the ""ors"" are just as important as the ""ands"" in domain modeling. Apart from that, while you ..."		clhodapp
29318372	11.704456	-7.41499	comment	8.0	29.5	1637678782	9.389245	I'd classify this one under: So what?   If you beat your tools hard enough, something will give.  The simple solution is to stop abusing your tools.Generics were bolted on in Java 5, and some painful ...		hyperman1
29356118	11.882036	-7.0429974	story	8.0	49.0	1637975338	-9.432621	LemonScript: A typed programming language inspired by TypeScript and Python	https://plebussupremus1234.github.io//LemonScript/	elisaado
29536454	11.849584	-7.532496	comment	8.0	32.5	1639368026	10.238369	Type classes are useful but can be overly restrictive as implemented in languages such as Haskell. In particular, Haskell prevents multiple implementations of a type class for a particular type (a pro...		sgeisenh
29558669	11.6457	-7.92676	comment	8.0	41.5	1639519564	10.212616	It's definitely more streamlined, but my concern would be that newcomers might not understand that it's just an alias. Learning Go really reframed my concept of what an interface is, and I thought tha...		hbn
29558709	11.649451	-7.713348	comment	8.0	24.0	1639519713	10.080852	"Their code is full of things like:    type fileOps []any // []T where T is (string | int64)

Go does not have neither generics nor union types. So people have to do this kind of thing :( I feel sorry ..."		brabel
29561154	11.685698	-7.9004326	comment	8.0	31.0	1639533945	10.201371	"Disclaimer: I am totally newbie in Go. But quite experienced in Java and Js/Ts.I never jumped the Go bandwagon because of the lack of generics.
Can I now try Go?The following article seems to say that..."		lolive
29574166	12.252625	-7.284602	comment	8.0	47.0	1639622145	7.121972	Probably part of why Smalltalk died. The C syntax and the BASIC syntax became ubiquitous, and things like Pascal and Smalltalk were just too weird. Luckily we have Ruby, which is almost-Smalltalk with a BASIC-like syntax.		phendrenad2
34205553	11.676159	-7.7973957	comment	8.0	21.5	1672573255	10.207125	I want to ask the same question for Python and Go. I'd love to see some quality OSS using Python or Go and contribute to them if I can.		m_a_g
34208753	12.282239	-7.3075433	story	8.0	166.0	1672595764	7.0703235	Smalltalk-80 on Raspberry Pi: A bare metal implementation	https://github.com/michaelengel/crosstalk	baptiste313
34215700	11.8303	-7.277456	comment	8.0	41.0	1672648375	7.300965	"Not all functional programming idioms work in all languages.On my computer, the article's imperative range(6000) took 0.05 ms and the ""functional"" range(6000) took 400 ms. The whole [...cur, cur.lengt..."		MrManatee
34373692	12.0414095	-7.1871557	comment	8.0	27.5	1673642971	9.199665	I think the ideal thing to do in a lot of cases is to adhere to the spirit of the warning and actually try to handle the rejections in some way.In this case I'd want to log the error, or display a not...		spankalee
34444939	11.792149	-7.226666	comment	8.0	22.5	1674158832	-6.972814	Curious to know if there's language that differentiate between procedure (function with side-effect) and pure function at the syntax level.		revskill
34454229	11.771787	-7.481407	comment	8.0	37.0	1674227943	10.372296	">""In Idris, types are first-class constructs in the langauge.This means types can be passed as arguments to functions, and returned from functions just like any other value, such as numbers, strings, ..."		peter_d_sherman
34465297	11.600137	-7.9381967	story	8.0	98.0	1674295538	10.192098	How to Use AVX512 in Golang	https://gorse.io/posts/avx512-in-golang.html	signa11
34542961	11.792557	-7.1206994	comment	8.0	27.0	1674798347	-9.009523	Typed python is extremely ugly and frustrating. Does anyone have any good advice on doing it well? It seems like every library has their own system and doing any kind of casting just to make the linter be quiet is such a chore.		aabhay
34644027	12.015829	-7.7580366	comment	8.0	23.0	1675443896	10.42986	> If you are looking to learn the language, I recommend Learn You A Haskell.I definitely don't recommend this. While cute, Learn You A Haskell is lacking a lot of pragmatic advice about how to write s...		almostdeadguy
34754865	11.904397	-7.050576	comment	8.0	28.5	1676140221	-10.767366	"This is one of many reasons I'm sceptical of the current trend in Python to ""async all the things"". The nuance to how it operates is often opaque to the developer, particularly those less experienced...."		samwillis
34805229	12.131262	-7.7848754	story	8.0	93.0	1676475595	-7.3056903	Comparing Objective Caml and Standard ML	http://adam.chlipala.net/mlcomp/	weatherlight
34938928	11.619881	-7.3354325	story	8.0	129.0	1677348733	9.160617	A Lambda Calculus with Coroutines and Heapless, Directly-Called Closures	https://ayazhafiz.com/articles/23/a-lambda-calculus-with-coroutines-and-heapless-closures#source-language	UncleOxidant
34952942	11.805699	-7.5172195	story	8.0	162.0	1677471991	10.440012	Idris 2 0.6.0 is now available for the JVM	https://github.com/mmhelloworld/idris-jvm/releases/tag/latest	ska80
34971617	11.890441	-7.476031	comment	8.0	34.5	1677603325	7.292486	Plenty of state -- even mutable state -- is essential complexity. Think of an IDE where a user is typing out code: the state is changing all the time. Pure functional programming has a hard time walki...		feoren
35030982	11.806637	-7.549968	comment	8.0	24.0	1678033264	7.3362603	> My conclusion is that there are major, well-justified reasons for why people strongly dislike functional languages.I hope he is also questioning the premise that functional programming is the reason...		moring
35034827	11.70293	-7.916061	comment	8.0	23.5	1678055244	10.184804	Nice work. Here is some feedback:1. Go has a major bottleneck and that’s the growth of its memory size when it’s under pressure. Templates bloat the memory quickly and make the site less performant at...		dzink
18946451	12.003836	-7.7346473	story	8.0	6.0	1547896717	10.419689	Ask HN: Does putting Haskell and Common Lisp in my resume a good idea?		n-izem
19016420	11.9042	-7.4551444	comment	8.0	30.0	1548671645	7.2087693	"I think these concepts are often conflated. One thing I miss most in OOP and appreciate most when doing FP is ADT's, when I can represent  Type payment = Invoice(Address) | Card(CardDetails) 

And the..."		alkonaut
19032106	11.661558	-7.250974	comment	8.0	35.0	1548815655	5.808633	"They don't say anything about ""dumb users"", and I wish the conversation around this didn't even use that phrase.  Hardhats aren't just for clumsy people, seatbelts aren't just for bad drivers, and mem..."		ken
19131614	11.79645	-7.263144	comment	8.0	25.5	1549852172	-8.98175	Even if it doesn’t help to find bugs, static typing is still worth it. I’ve been fixing some stuff in an existing Python codebase in the last weeks. Most of the time, when I see a new function, I have no idea what’s the type of its parameters...		ggregoire
19131811	11.7989	-7.3420296	comment	8.0	34.5	1549855156	-8.915163	Can you provide an example where static typing slows you down compared to dynamic typing?I've been using static typing for decades and the only problem I can imagine is having to add an object propert...		DenisM
19245294	11.973741	-7.1859393	story	8.0	7.0	1551099816	-8.963536	Ask HN: Current state of statically typed web framework		raphaelj
19295747	11.814422	-7.0668497	story	8.0	82.0	1551635942	8.949079	Java Streams and State	https://blog.frankel.ch/java-streams-state/	pplonski86
19386100	11.640286	-7.9223065	comment	8.0	52.0	1552531184	10.169117	Switched from Python to Go about 2 years ago. If you need to build performant APIs with a small team there is nothing that comes close. You get the productivity of something like Python with the perfo...		tschellenbach
19534237	11.665172	-7.0672894	story	8.0	62.0	1554014357	9.069374	Map.merge() – One method to rule them all	https://www.nurkiewicz.com/2019/03/mapmerge-one-method-to-rule-them-all.html	wheresvic1
19705244	12.101235	-7.240806	comment	8.0	21.5	1555744615	10.168796	While Java certainly has a value for a maintenance, because of the troves of legacy projects, I am not sure why anyone would want to start a new project with it. From Scala Native, Kotlin Native (clos...		xvilka
19716258	12.032848	-7.3718843	comment	8.0	70.5	1555903506	7.115045	"It really should be noted that years later Joe changed his mind about OO and came to the realization that perhaps Erlang is the only object-oriented language :) From a 2010 interview:...""I wrote a an ..."		rhblake
19716330	12.020381	-7.281455	comment	8.0	45.5	1555904329	7.191432	"Isn't a method call a message, and the return value a message back?   Or is it that ""true OO"" must be asynchronous?"		tux1968
19882669	11.985017	-7.321334	comment	8.0	30.5	1557525673	-12.44739	> Arguably, the imperative programming paradigm is a more natural fit with the von Neumann computer architectureProlog's lack of popularity suggests that viewing a computer program as a pure (first or...		roenxi
19916434	11.808841	-7.190991	comment	8.0	35.0	1557894841	-9.00841	> Type hinting (3.5+)> Static vs dynamic typing is a spicy topic in software engineering and almost everyone has an opinion on it. I will let the reader decide when they should write types, but I thin...		DonaldPShimoda
15798424	12.244064	-7.553254	story	8.0	138.0	1511885126	-11.330005	Kotlin 1.2 Released: Sharing Code Between Platforms	https://blog.jetbrains.com/kotlin/2017/11/kotlin-1-2-released/	dayanruben
15818743	12.031734	-7.8327327	comment	8.0	34.5	1512070193	10.434179	I wish OCaml had the libraries and community of Go or Rust, I think it'd be the most useful all-around language out there.		aaron-lebo
15818966	12.315632	-7.593672	comment	8.0	35.0	1512071996	10.39034	If ReasonML is able to form a real community, I have high hopes for its long-term prospects. Such an enjoyable language to use! I think their general approach of bootstrapping a community by lowering ...		kcorbitt
15878023	11.655621	-7.954303	comment	8.0	29.5	1512731963	10.254576	hell no, if generics get into go I'll have to find another favorite language.		baby
15952894	11.899125	-7.2241817	comment	8.0	24.5	1513615192	7.9459534	What is up with the seemingly popular knee-jerk reactions towards OO design patterns? It genuinely feels like some sort of mass hysteria... Yes, strategies like dependency injection might seem like po...		ganonm
15959601	12.128995	-7.2343287	comment	8.0	23.0	1513685875	7.1314054	> In Crystal, as in Ruby, everything is an object. [...] When you write Crystal code, most of the time, you write classes.Why, God, why?! Really, OOP is a great way of structuring lots of types of cod...		nnq
16100840	11.640791	-7.5324507	story	8.0	95.0	1515447386	5.3553553	Linear types can change the world (1990) [pdf]	http://www.cs.ioc.ee/ewscs/2010/mycroft/linear-2up.pdf	adamnemecek
16154364	11.649972	-7.961689	comment	8.0	21.5	1516058453	10.283383	I'm curious how heavily used Go is inside Google (as they are the core developers), does anyone know the approximate ratio of languages used there?Is Go one of the top 3 languages with Java and JavaScript, or is Python or something else more significant.		EwanToo
16305329	12.163485	-7.5059757	comment	8.0	22.5	1517783465	-10.611713	I find ReasonML a VERY HARD sell when F# is sitting there waiting. If I could get people onboard with an ML, why wouldn't I use F# with it's massive backing ecosystem and fantastic server side runtime(node has come a long way, but it's no CLR)?		Rapzid
16388246	12.062739	-7.2234488	comment	8.0	24.0	1518732786	9.142493	I am surprised to see so much venom against Promises expressed here. I am young, but I began coding (as a profession) just when Angular 1 was popular and I remember callback hell was a real thing.A fe...		nawgszy
16392878	12.4996805	-7.0855875	comment	8.0	38.0	1518794253	12.35659	Your linked comment is great but it sweeps one thing under the rug.There is a reason lisp didn't win. We put up with it (I use emacs, so I have to write it at times) but in general it's harder to reas...		3pt14159
16406515	11.795549	-7.4135222	comment	8.0	24.5	1518968438	7.0939536	How do you write polymorphic code without inheritance?		ythn
16433425	11.6521435	-7.978896	story	8.0	128.0	1519250840	10.1969185	Go and Versioning: Minimal Version Selection	https://research.swtch.com/vgo-mvs	SamWhited
16518481	11.651857	-7.961165	story	8.0	22.0	1520219837	10.213604	Golang Developer		devgator
16568138	12.29148	-7.50749	comment	8.0	51.5	1520862999	12.851865	If anyone is looking for another language that also uses the actor model for concurrency and has very similar ways of handling it like D, then checkout Erlang. It's language lessons are clearly still relevant today. :)		jonalmeida
16568576	12.298274	-7.5086856	comment	8.0	28.0	1520867018	12.82758	Would any sort of actor model language have the raw throughput for a AAA game?  I get how this model is nice for the web, for example, but I'm wondering why it doesn't get used for high performance computing (that I know of).		syeaj
16718538	11.799843	-7.01628	comment	8.0	35.5	1522434030	-8.738443	Very strange to see the core primitives of functional programming being sold as 'Pythonic'.I suppose we all look at the world from the perspective of our own experience.		marshray
16790883	11.609416	-7.9434896	story	8.0	252.0	1523255881	10.151361	Go-internals: Chapter 2, “Interfaces” released	https://github.com/teh-cmc/go-internals/blob/master/chapter2_interfaces/README.md	teh_cmc
16892016	12.036756	-7.200371	comment	8.0	22.0	1524328013	9.215934	"Slightly off topic but this code in example #5:  get() {
    return new Promise((resolve, reject) => {
      fetch(`${baseAPI}/heroes`)
        .then(response => response.json())
        .then(json =>..."		scottmf
16958762	11.632881	-7.9641576	comment	8.0	29.5	1525098321	10.219836	Perhaps I've never hit the problems that go solves? I just don't understand why I'd learn it when it offers nothing new or unique and feels even more clunky to work in than alternatives.Specifically f...		jimktrains2
17016251	12.030766	-7.5315895	comment	8.0	24.0	1525725150	7.301155	Brent is one of the greatest teachers I've ever experienced. I used to take classes from him (and TA some others he taught) and was consistently blown away by his enthusiasm and capacity for sharing c...		zwass
17044595	11.918093	-7.700169	story	8.0	114.0	1526006187	10.131403	Haskell's Missing Concurrency Basics (2016)	https://www.snoyman.com/blog/2016/11/haskells-missing-concurrency-basics	DanielRibeiro
17074783	11.816159	-7.017576	story	8.0	92.0	1526398837	-9.079993	Guide to Data Classes in Python 3.7	https://realpython.com/python-data-classes/	dbader
17134185	12.2501335	-7.6203065	comment	8.0	30.0	1527083766	11.907767	> It's inevitable you will have multiple languages / platforms comprising your stack. Bash scripts for admin. Golang to write servers. Data science in Python. JS / D3 on the frontend. C# / Unity 3D mo...		lmm
17448876	11.723189	-7.178556	comment	8.0	46.5	1530611746	-8.475562	If they add anything to Python, it should be the ability to do functional-style programming without hassle. Right now it's almost impossible to compose functions in an inline style such as used in fun...		amelius
17464048	12.245066	-7.5867314	comment	8.0	29.0	1530804749	-11.40832	"It's pretty sad that F# is sitting on the sidelines wondering what it did wrong to not get these accolades. I guess, ""Being unable to enter a mobile ecosystem that's being held on a very old language ..."		KirinDave
17574657	11.601512	-7.9394236	comment	8.0	26.5	1532092307	10.229831	Go binaries not running any more on Windows < 7 is going to be a serious issue.		jedisct1
17590801	12.005513	-7.5366797	comment	8.0	32.5	1532324783	11.88444	I've seen uses of implicits fall into three categories:(1) Dependency injection, e.g. ExecutionContext(2) DSLs/syntax sugar, e.g. custom string interpolation, specs2(3) Typeclasses and type-level prog...		paulddraper
17646929	11.969441	-7.8114214	comment	8.0	28.5	1532976562	10.395425	Monad: if you have a data structure that wraps some value of any type, then you also have to implement the interface that provides `return` and `bind`So it's a wrapper that implements a particular int...		stcredzero
17678928	11.693656	-7.8287086	comment	8.0	38.0	1533295774	10.216661	One of the biggest benefits of go vs python is that you only manage your dependencies during build.  You end up with a single executable that is easy to deploy and mostly immune to the deployment of o...		tomohawk
17787936	11.8096695	-7.1944675	story	8.0	75.0	1534590082	-9.004958	Bringing macros to Python by abusing type annotations	https://tinkering.xyz/abusing-type-annotations/	jxub
17816959	11.698201	-7.289944	story	8.0	87.0	1534922333	-8.804521	Whiteboard problems in pure Lambda Calculus (2017)	https://www.jtolio.com/2017/03/whiteboard-problems-in-pure-lambda-calculus/	jesperht
17826936	12.104109	-7.6703014	comment	8.0	34.5	1535029951	-10.635313	My understanding is that F# is a derivative of OCaml.https://stackoverflow.com/questions/179492/f-changes-to-ocam...http://web.archive.org/web/20080410181630/http://research.mi...How’s F# adoption?		melling
21100734	11.806129	-7.3381896	story	8.0	54.0	1569683627	-8.948622	What Is Gradual Typing? (2009)	https://wphomes.soic.indiana.edu/jsiek/what-is-gradual-typing/	xisukar
21227499	12.332178	-7.058615	comment	8.0	91.0	1570821378	13.180785	This has been a huge deal for the Perl community.First, it was thought that Perl 6 would be the replacement for Perl 5.But it was long ago recognized that there was no clear upgrade path from Perl 5 t...		Ovid
21227571	12.301383	-7.0644326	comment	8.0	25.5	1570821906	-11.377087	Can someone explain to me, for what kinda of new projects would they use Perl/Raku in 2019 at all?		ram_rar
21273911	11.812392	-7.1637244	comment	8.0	37.0	1571251470	-9.9351635	> Something I noticed at the time was that the syntax for functional languages tends to be verb then noun: f(x), whereas the syntax for object oriented languages tends to be noun then verb: x.f().... ...		thomascgalvin
21278360	12.2236595	-7.6281166	story	8.0	56.0	1571278861	11.927499	Scala: A software tool for microtonic, macrotonic and other alternative tunings	http://www.huygens-fokker.org/scala/	thanatropism
21284383	11.990966	-7.756216	comment	8.0	26.5	1571333621	10.42679	> Haskell is great for business and great in productionI disagree. It's a beautiful language but it lacks a lot of features to make it useable at scale. And in my experience Haskell engineers are extr...		gip
21408460	11.597368	-7.0402417	comment	8.0	28.5	1572528486	-8.098826	I really enjoyed the comparison of dependency injection with dynamic scoping, and the explanation of how the latter can take over the uses cases of the former with less boilerplate.But one benefit of ...		denisw
21458754	11.948393	-7.297123	comment	8.0	31.0	1573002489	9.192296	I'm a big fan of the new operators.One of my remaining gripes with Javascript/Typescript is the try/catch mess around await. It makes assignment of const a pain for async calls that may reject.e.g.   ...		reggieband
21552764	11.645	-7.9589233	comment	8.0	38.5	1573914301	10.27781	While there is certainly something to be said for simplicity in a language, I think Go is too extreme in this regard. What it gains in simplicity it looses in expressiveness. This leads to more lines ...		erokar
21567929	11.6150675	-7.867882	story	8.0	106.0	1574109534	10.033887	Goroutines and APIs	https://blog.gnoack.org/post/go-goroutines-and-apis/	gnoack
21637302	12.225222	-7.6229725	comment	8.0	28.0	1574767051	11.944716	As someone who has dropped Scala on the backend (not doing FUD, just not happy with the JVM memory reqs)- what keeps me still using scala is Scala.js.While some argue that there is more readable code ...		googleisevil6
21727902	12.2181835	-7.439803	comment	8.0	51.0	1575683215	-11.380243	At this point, I feel no language can compensate for the platform's out-of-date java libraries. I think Google has its priorities wrong: first should be recent java, second should be kotlin.		clumsysmurf
39141277	11.885335	-7.3002753	comment	8.0	27.0	1706267146	7.0082774	whats wrong with object oriented programming?		Poliorcetes
39260968	11.782313	-7.298046	story	8.0	52.0	1707139454	-6.03367	Solving durable execution's immutability problem	https://restate.dev/blog/solving-durable-executions-immutability-problem/	stsffap
17886726	11.822694	-7.3484883	comment	8.0	33.0	1535732001	7.0834694	"Serious question about this line:""Reusing code via inheritance is fragile. Inheritance also couples interfaces to implementations, which makes reuse more difficult. This is its own topic, but even OO ..."		wmccullough
17974296	12.188384	-7.653377	story	8.0	85.0	1536793411	-5.280295	How We Found a Missing Scala Class	https://heapanalytics.com/blog/engineering/missing-scala-class-noclassdeffounderror	drob
18043414	12.016504	-7.7979765	comment	8.0	27.0	1537572356	10.430457	Does anyone know of an example of a non-trivial codebase written in this style?How do you do this cleanly when, e.g., you need to make a network call and then based on what the result returned to you ...		lackbeard
18069692	11.641145	-7.96519	comment	8.0	29.0	1537903868	10.210585	I would have thought that Go would be perfect for this sort of system-level-like programming ?		rawoke083600
18072249	11.993338	-7.7241926	story	8.0	20.0	1537929128	10.375627	Ask HN: Has blogging helped your career?		quickthrower2
18079877	11.72312	-7.28383	comment	8.0	29.5	1537993202	-6.441876	"Just introduce a syntax to define immutable variables (e.g. like ""val"" in Scala) and to mark particular functions as pure (easy to implement manually as a decorator in Python, I've been using it a lot..."		qwerty456127
18162279	12.457433	-7.8184404	comment	8.0	26.5	1538941583	-11.086903	From what I have seen in this article, and hn thread, and every time in general when there is a discussion about clojure or dynamic typed languages, you are only speaking about tiny examples and even ...		tigershark
18233076	12.066918	-7.777352	story	8.0	172.0	1539722647	8.232797	Why is FFTW written in OCaml and what makes it so fast?	https://www.quora.com/Why-is-FFTW-written-in-OCaml-and-what-makes-it-so-fast?share=1	Cieplak
18274095	12.10995	-7.839441	comment	8.0	20.0	1540211763	-3.261695	As someone interested in functional programming, but works almost entirely in imperative languages, is category theory worth learning?Function programming heavily impacted how I write imperative code. Would I have similar revelations with category theory – maybe write better abstractions?		hazz99
18419366	12.323727	-7.2452164	story	8.0	35.0	1541812841	7.042656	Why Pharo Might be the Future of Software Development (2017)	https://blog.appacademy.io/pharo-future-software-development/	ccwilson10
18501518	11.901624	-7.4286323	comment	8.0	25.5	1542795779	10.308414	"Where do people usually use Standard ML type languages?
What are these most suitable for?
(Please excuse me for a lame question. I am an amateur.)"		varshithr
18527007	11.934488	-7.380697	comment	8.0	23.5	1543156497	7.0699325	> You want to know why OOP is useful and common? Because it's easy.With as much proof as you have given, let me offer you a counterargument: it is common because academia loves OOP. It's easy to teach...		chx
18533446	11.827608	-7.645073	comment	8.0	50.0	1543241608	10.289365	I agree with the points in your post and I also want a mainstream typed FP (something with a clear happy path so I don’t need to guess about what prelude or string types or standard library or etc to ...		weberc2
18565791	11.6521635	-7.9246225	comment	8.0	30.5	1543540734	10.235755	I really don't get the people opposed to generics. Is there actually a cross between experienced developers who have come from languages that have generics and understand them, yet don't want them in ...		ryeguy
18633777	12.273528	-7.050061	comment	8.0	28.5	1544240390	13.163851	I'd like to hear opinions on how the use of sigils and the other syntax oddities like Int:D, Int:U, given, when, etc improves the codabliity/readability of Perl 6 vs other languages. The examples vs H...		herrosheep
18669839	12.135408	-7.5135703	comment	8.0	34.0	1544675097	-10.587346	Can someone please explain to me how you can use F# without each aspect of the development process being a Microsoft technology?Not to be rude, I just honestly want to know. There is quite a bit of hy...		kyleperik
18674855	11.7153425	-7.2978845	comment	8.0	21.5	1544726757	6.854111	Getters/setters are useful.E.g. maybe you had a class 'Box' with a field 'area'. Later you added fields 'width' and 'height'. What are you going to do? Change 'area' to 'getArea()' and break the API? ...		azov
18677676	11.642294	-7.9579525	story	8.0	125.0	1544750825	9.979654	Why Segment Chose Go, gRPC, and Envoy to Build Their New Config API	https://stackshare.io/nzoschke/decisions/101229315381856666	sahin
18692227	11.654425	-7.0160356	story	8.0	126.0	1544947405	-4.877838	Pampy: Pattern Matching for Python	https://github.com/santinic/pampy/blob/master/README.md	fagnerbrack
18729822	11.719473	-7.0498	story	8.0	151.0	1545345327	8.267025	How low can you go? Ultra low latency Java in the real world [video]	https://www.youtube.com/watch?v=BD9cRbxWQx8	based2
18799937	11.646359	-7.950921	story	8.0	181.0	1546345648	10.187901	Merlin: A cross-platform command and control server and agent written in Go	https://github.com/Ne0nd0g/merlin	SEJeff
18815420	11.793864	-7.216451	comment	8.0	44.5	1546526780	-9.03049	This seems like a neat project but I can’t say I ever wanted Python to be an even bigger language... Ideally we would have a Python-like that eschews unnecessary features like inheritance and much of ...		weberc2
18833124	12.360846	-7.071494	story	8.0	154.0	1546711625	-3.7062438	HelenOS 0.8	http://www.helenos.org/wiki/ReleaseNotes/0.8.0	return_0e
18894664	11.976943	-7.714018	story	8.0	75.0	1547346467	10.397691	Haskell I/O and XPath	https://blog.adamretter.org.uk/haskell-io-and-xpath/	adamretter
29683869	12.366257	-7.0861278	comment	8.0	22.0	1640445026	12.383686	Ruby now has “punning.”> Values in Hash literals and keyword arguments can be omitted. [Feature #14579]> {x:, y:} is a syntax sugar of {x: x, y: y}.> foo(x:, y:) is a syntax sugar of foo(x: x, y: y).T...		burlesona
29711926	11.909869	-7.2949886	comment	8.0	29.5	1640683112	7.0414653	"I am a strong proponent of not using anything that forces you to use OOP as ""baby's 1st language"". Well I see OOP as a heresy in general tho. To me programming is about algorithms and data structures ..."		rndm_access
29734482	12.151087	-7.882835	story	8.0	129.0	1640848648	-3.2190428	Category Theory: Lecture Notes and Online Books	https://www.logicmatters.net/categories/	coalgebraic
29735889	12.09702	-7.8587637	comment	8.0	23.5	1640864202	10.38228	I find this topic fascinating but hard to start with.Does anyone have any non-Haskell example of category theory? Something that shows why is useful with a use-case.		elnatro
29810659	11.821543	-7.05797	comment	8.0	23.0	1641398703	-7.2072654	I have very little experience with arrays in JS, but I always have a nagging feeling that, if my algorithm needs me to flatten an array, then there is something wrong with the data structures I am usi...		Rygian
29907026	11.845811	-7.3515024	comment	8.0	31.0	1641999083	6.979968	I find it fascinating that people are so against inheritance/polymorphism, these days.That's one of the absolute best ways to DRY. factoring out common base classes is a classic OO exercise. It's poss...		ChrisMarshallNY
29949664	11.723146	-7.381042	comment	8.0	41.5	1642276897	-8.802648	Somewhat unrelated to this link, but I really think that it’s interesting how much effort we put into the theory side of languages/types - with almost no one in industry applying these lessons. The es...		wlib
30000771	11.745431	-7.372182	comment	8.0	22.0	1642629189	-8.833982	The problem I find with static typing is that it so easily leads you over-specifying the requirements / constraints. In fact, it makes such a virtue out of that over-specification that many people wou...		zmmmmm
30137888	11.644544	-7.951373	comment	8.0	20.5	1643555948	10.218876	"Having `import ""github.com/liyue201/gostl/ds/array""` in codebase looks weird and unsafe. Like, who's liyue201 and what exactly I'm importing?Vendoring helps a bit, but it's still ugly.Same problems ex..."		stackedinserter
30152930	11.949716	-7.6943374	story	8.0	96.0	1643657291	10.484395	Software Development Languages: Haskell	https://www.fosskers.ca/en/blog/haskell-software-dev	colingw
30203270	11.604087	-7.941285	comment	8.0	35.5	1643952979	10.13944	Yeah no.There is a limit to optimization, and that ends with optimized machine code.Go being a compiled language, that is cross paltform but separate binaries, should be very close to C in terms of pe...		kumarvvr
30256472	11.994779	-7.7466197	comment	8.0	35.5	1644312899	10.427397	That attitude among Haskell devs is one of the problems. The conviction that it is a fundamentally better way of programming and that anybody who chooses anything else for anything is a worse programm...		omnicognate
30294991	11.873442	-7.3398557	comment	8.0	24.0	1644539035	6.925784	I still don't understand why it's bad! Feels like spaghetti sentences tied together as a single article.Why is OOP so bad, anybody? With scenarios, code samples or alternate implementations?		ctxc
30370703	11.974468	-7.7410393	story	8.0	84.0	1645085884	10.40725	Haskell2020 Is Dead, but All Hope Is Not Lost (2019)	https://reasonablypolymorphic.com/blog/haskell202x/	signa11
30582895	12.035497	-7.806777	comment	8.0	28.0	1646614632	10.41457	Still don't have even the vaguest beginnings of a clue what the fuck a monad is, after reading 50 articles promising to make it simple, as well as their accompanying 500-comment HN threads. I suspect ...		psyc
30596704	12.027018	-7.8128285	comment	8.0	33.5	1646716844	10.398847	I was raised on OOP, and at my ripe old age I really want to grok monads. This video did me a great service in that direction.		zamalek
30596699	12.001808	-7.770225	story	8.0	78.0	1646716791	10.41146	What Is IO Monad? (2018) [video]	https://www.youtube.com/watch?v=fCoQb-zqYDI	zamalek
30656498	11.935558	-7.393225	comment	8.0	36.0	1647130538	7.1468515	I have used it since 2001, though Friday (and continuing next week and for the forseaable future). My biggest problems are:* OOP is celebrated in the ecosystem. It's time to face the truth: the mainst...		zamalek
30692044	11.623898	-7.9308443	comment	8.0	28.0	1647379945	10.251176	As a general rule, if you're referencing the dictionary definition of a word to make your point, you're just playing semantic games.You know what people also find complicated? Hundreds of lines code b...		stouset
30723439	11.814282	-7.192543	comment	8.0	35.5	1647616981	-9.010601	Python type annotations are more useful for a human as a form of documentation, than they ever will be to a machine. I think Python completely ignores them at runtime, and tools like pytype or mypy wi...		assbuttbuttass
12704227	11.721569	-7.368313	comment	8.0	44.5	1476394429	-8.855724	I am glad to see that this is optional.  We need languages that mix compile/parse time (static) and run time (dynamic) types, to mix what fits best to each situation.Of course type checking can catch ...		Roboprog
12705306	11.799496	-7.202985	comment	8.0	30.0	1476404255	-8.993035	"Optional static typing is fine.  But this approach to it is not good. The correctness of the type information is optional. PEP 484: ""While these annotations are available at runtime through the usual ..."		Animats
12832197	11.735645	-7.3820076	comment	8.0	23.5	1477860797	-8.710215	Do you want to invest your time worrying about types or actually programming?  My issue with building these type-theoretic monstrosities is that now you suddenly have to tackle two problems instead of...		cndkxjsnf
12851381	11.964603	-7.1866093	comment	8.0	27.0	1478046809	9.168536	I've intentionally been keeping myself ignorant about async/await in JS until it's common enough I can consider using it natively without any great concern about cross browser compatibility. Why is ev...		greendragon
12888565	11.86572	-7.201412	comment	8.0	34.5	1478488981	-10.777519	I feel like I'm too dumb to understand any of this.  And I've been writing python for 12 years.Just give me greenlets or whatever and let me run synchronous code concurrently.  async def proxy(dest_ho...		justinsaccount
12931764	11.63982	-7.9136963	story	8.0	101.0	1478879868	-11.648451	Gource – A version control visualization tool	http://gource.io/	the_wheel
13014429	11.687148	-7.0873885	story	8.0	169.0	1479825982	-7.1571264	Help me sort out the meaning of “{}” as a constructor argument	http://scottmeyers.blogspot.com/2016/11/help-me-sort-out-meaning-of-as.html	signa11
13051036	11.687525	-7.4581366	comment	8.0	36.5	1480276032	9.597092	The headline is misleading as the type system is sound, but the general idea of generics is that the type bindings and constraints should result in a guarantee that there won't be any failing casts at...		olliej
13125328	11.9668455	-7.7189493	story	8.0	199.0	1481138449	10.4269705	Liquid Haskell: Haskell as a Theorem Prover [pdf]	http://goto.ucsd.edu/~nvazou/thesis/main.pdf	kumaranvpl
13141729	12.1642475	-7.5155163	story	8.0	131.0	1481316679	-10.624059	What's New in F# 4.1? [video]	https://channel9.msdn.com/Events/Connect/2016/118	LyalinDotCom
13183182	11.6577835	-7.9437103	story	8.0	83.0	1481788866	10.192068	Zygomys – An embedded scripting language for Go	https://github.com/glycerine/zygomys	chewxy
13282240	12.468845	-7.7906694	comment	8.0	46.5	1483067882	8.9438095	They left out the part where Clojure DOES NOT implement tail-call optimization for mutually recursive functions. Without TCO, you can't fully leverage functional composition and immutable data structu...		wahern
13308770	12.139389	-7.86943	comment	8.0	25.5	1483448209	-3.158989	"If I may ask, why is the HN community so interested in this particular topic? 
I studied Math and have basic understanding of Category Theory... could someone point me to a text relating Categories and... something related to computers? What am I missing?"		syats
13345832	11.647067	-7.141628	story	8.0	150.0	1483815148	7.4284573	Kitten – A statically typed, stack-based functional programming language	http://kittenlang.org/	throwaway7645
13363961	11.802976	-7.2645817	story	8.0	116.0	1484045200	7.436182	Lambdascript – A new pure functional language built on top of Python	https://github.com/baruchel/lambdascript	baruchel
13373446	11.993911	-7.7248836	story	8.0	128.0	1484137524	10.412633	Glance, a visualizer for Haskell code	https://github.com/rgleichman/glance	chewxy
13443448	11.596174	-7.895534	comment	8.0	31.5	1484917168	10.262528	"In most languages, the top words are self/this and function/def. On the other hand, in Go, the most common word is ""err"", and ""if err != nil"" are three of the top four words. I really wonder how big part of the code in Go is just propagating errors."		Noughmad
13451800	11.937642	-7.704917	comment	8.0	28.0	1485029108	10.36326	I struggle with this. After years of studying OO and design patterns in Ruby and JavaScript I was having troubling building complex asynchronous systems and stumbled into Go. I saw the value of types ...		sandhundred
13503971	11.6940975	-7.2841983	comment	8.0	20.0	1485562567	7.0590777	I like functional program a lot, but that very first transform of a chain of if's into a horrifying mess makes a pretty good case for using if. In the if case, function2 and function3 were called identically, but in the functional case suddenly things are inconsistent.Is this a satire?		cjensen
13514037	12.2603445	-7.4198847	story	8.0	99.0	1485696931	12.826172	C# functional language extensions and Erlang-like concurrency system	https://github.com/louthy/language-ext	networked
13540269	11.939498	-7.0406284	comment	8.0	35.0	1485953406	8.497081	Java 8 brought us lambda methods and streams that allow Java as a language to somewhat compete on the same stage as C#. I use them on a daily basis and they radically changed the way I do some things....		Traubenfuchs
13561774	11.674162	-7.9390574	story	8.0	74.0	1486145101	10.218153	RxGo: Reactive Extensions for the Go Language	https://github.com/jochasinga/RxGo	deepanchor
13598547	11.766007	-7.139683	comment	8.0	29.5	1486565261	5.0183315	>, the good old Design Patterns book, responsible for more atrocious over-abstracted, This is a misunderstanding of the DP book.  It would be similar to saying that the existence of TVTropes.com is re...		jasode
13598799	11.783076	-7.124798	comment	8.0	23.5	1486566878	4.9119134	>It is discussing an effect of the book, not the intent.Do you truly believe that specific DP book caused that effect?I don't.  The DP book is extremely dry reading and most programmers have not actua...		jasode
27555172	11.935633	-7.4658766	comment	8.0	21.5	1624051247	7.2841535	Perhaps the universe is state based, and not function based...Programing language are away to represent reality, and manipulate it to your desire.Object Oriented, and Procedural programing both use fu...		ardit33
27639687	12.008877	-7.7394714	comment	8.0	33.5	1624689546	10.419719	For the context: Haskell was 4th or 5th language I learnt and the first pure functional one. My graduation thesis work was in Haskell and its backend/compiler so at one point I was living/breathing Ha...		vishnugupta
27648871	11.682783	-7.2601895	story	8.0	144.0	1624771944	-8.732373	Lambda Calculus Examples (2009) [pdf]	https://www.ics.uci.edu/~lopes/teaching/inf212W12/readings/lambda-calculus-handout.pdf	alphanumeric0
27653701	11.788432	-7.326802	comment	8.0	23.0	1624816932	-8.954064	I could write a multi-paragraph comment explaining why statically typed languages are better, but I’ll just say that I always see projects that were written in dynamic languages being rewritten in sta...		booleandilemma
27662089	11.923519	-7.3485265	comment	8.0	37.5	1624888930	7.0083637	"> In all my experience with OOP, it's always been inheritance that is the root of all evil.I have this ""theory"" in the back of my head that trees are usually the wrong things to model thing in life bu..."		Zababa
27780468	11.624584	-7.0424547	comment	8.0	37.5	1625804694	9.074057	Not sure what collate is supposed to be, but these idioms are hardly difficult if you're used to Python:- groupBy is itertools.groupBy(lst, fn)- sortBy is just lst.sort(key=fn)- countBy is collections...		smallnamespace
27843157	12.324935	-7.2804313	comment	8.0	30.0	1626344263	-0.8234332	Just a heads up the pharolauncher does not seem to be working for me, at least for pharo 9.  Manual download of vm + image 64bit works but 32 bit does not.I have been making pharo raylib bindings and ...		Zenchess
27884280	11.673625	-7.33365	comment	8.0	62.0	1626711443	9.149623	Loom can't land fast enough!The current issue the JVM has is that all threads have a corresponding operating system thread.  That, unfortunately, is really heavy memory wise and on the OS context swit...		cogman10
27901593	11.712793	-7.361217	comment	8.0	30.5	1626833652	-8.794646	This post shows MD but it misses the forest for the trees. To riff on the blog post linked below, “what if you have an Onyx holding a hard stone executing Earthquake in a Sandstorm against a Flygon wi...		zwkrt
27948162	11.605171	-7.875019	story	8.0	50.0	1627209301	10.137804	Map[string]interface{} in Go: a user's manual	https://bitfieldconsulting.com/golang/map-string-interface	bitfield
27988417	11.963559	-7.42819	comment	8.0	22.5	1627499978	7.186038	Do people actually enjoy FP on the long run? Most devs are used to OO.		Thaxll
12015028	11.811019	-7.168051	comment	8.0	22.5	1467370056	9.073816	"There's a huge gotcha:
_.map, _.forech, ... can iterate over objects (often used as associative arrays) - Native map can't.At some point you'll need lodash and co again - at least for convinience."		frostik
12149424	12.145101	-7.8775606	story	8.0	209.0	1469281257	-3.2362597	Category Theory for the Sciences	http://category-theory.mitpress.mit.edu/	0xmohit
12185277	11.9889345	-7.741555	story	8.0	181.0	1469772935	-5.9647536	Haskell Data Analysis and Machine Learning Cookbook	http://haskelldata.com/	e19293001
12187526	11.740125	-7.29316	comment	8.0	28.0	1469806733	9.113674	I'm probably showing my profound ignorance, but what has lambda calculus done for me lately?  It seems to be an abstract formalism of some sort, but I've yet to see any real use of it, the examples ar...		dewster
12337150	11.777995	-7.406344	story	8.0	139.0	1471880868	-8.654685	Higher-kinded types: the difference between giving up and moving forward	http://typelevel.org/blog/2016/08/21/hkts-moving-forward.html	dmit
12368528	12.059689	-7.708859	comment	8.0	39.5	1472238434	10.605903	I am not happy about it. Typelevel projects are just porting the style familiar to Haskell programmers to Scala, and a full fork to accomodate this style seems to be an overkill.I know, many people ar...		atemerev
12422351	11.98533	-7.7375884	story	8.0	117.0	1472955860	10.427203	New Edition of “Programming in Haskell” Now Available	http://www.cs.nott.ac.uk/~pszgmh/pih.html	javinpaul
12469963	11.988866	-7.733941	comment	8.0	23.0	1473526260	10.430036	Haskell has been around for over 20 years. If it hasn't set the programming world on fire yet, there are probably reasons.		jblow
12469628	11.932711	-7.3970594	story	8.0	73.0	1473521533	7.103792	A Conversation About OOP vs. FP Turns Constructive	https://github.com/svanderbleek/haskellandchill.com/blob/master/a-conversation-about-oop-vs-fp-turns-constructive.md	svanderbleek
35207799	11.807586	-7.282264	comment	8.0	45.0	1679134778	9.204412	I have the conclusion opt-in async/await is a mistake. I think high level language/runtime like c# should handle it automatically like it is a sync call but a way to opt-out should be still possible. ...		serguzest
35436682	12.126744	-7.240795	comment	8.0	33.0	1680596785	8.572966	To any budding game developers, my advice would be to not rush into ECS and try to accomplish your goals with structs and loops first and understand the fundamentals of how a video game 'works' under the hood.Your game will get done if you work on it, not necessarily if you pick ECS!		grenoire
28189106	12.029046	-7.644207	comment	8.0	61.0	1629038455	10.398621	This article is a good example of why I don’t use uncommon programming languages for actual projects. I watched an Elm-based project steadily slip behind schedule while the team insisted that Elm and ...		PragmaticPulp
28361600	11.758376	-7.281682	story	8.0	59.0	1630362148	9.179026	Async Overloading	https://blog.yoshuawuyts.com/async-overloading/	lukastyrychtr
28466709	11.920537	-7.6537333	story	8.0	184.0	1631166509	10.37422	An Introduction to Type Level Programming in Haskell	https://rebeccaskinner.net/posts/2021-08-25-introduction-to-type-level-programming.html	rebeccaskinner
28509391	11.799704	-7.255738	story	8.0	50.0	1631525953	9.182837	Unravelling `Async for` Loops	https://snarky.ca/unravelling-async-for-loops/	genericlemon24
28521502	11.754594	-7.2387342	story	8.0	77.0	1631604888	-5.959698	Erase your darlings: immutable infrastructure for mutable systems	https://grahamc.com/blog/erase-your-darlings	ducktective
28641972	11.737536	-7.332013	comment	8.0	26.5	1632489787	9.202433	We use async/await pretty much universally throughout our codebase today.One thing to keep in mind is that this mode of programming is actually not the most performant way to handle many problems. It ...		bob1029
22346540	11.7319145	-7.243164	comment	8.0	22.0	1581932415	-8.98407	It's a funny thing:Advocates of dynamic languages tend to claim that the flexibility they offer — dynamic duck typing, dynamic dispatch, runtime reflection, eval — is a major advantage.And yet every t...		pwdisswordfish2
22366151	11.665917	-7.0776405	story	8.0	60.0	1582125356	6.457357	Intro To Pattern Matching – Covers C# 9	https://www.c-sharpcorner.com/article/intro-to-pattern-matching-covers-c-sharp-9/	alugili
22396614	11.688638	-7.9441047	comment	8.0	52.5	1582462482	10.255327	When you can't compile because of one unused variable that was commented out there's a very good chance the meaning of the word Zen is being blatantly abused. Go is not simple, it's corporate behemoth...		DarthGhandi
22428531	11.874063	-7.293439	story	8.0	22.0	1582758846	7.0474834	Object-Oriented Programming – The Trillion Dollar Disaster	https://medium.com/better-programming/object-oriented-programming-the-trillion-dollar-disaster-92a4b666c7c7	throwaway3157
22468768	11.715881	-7.949779	comment	8.0	24.5	1583182043	10.009106	> The github.com/golang/protobuf module is APIv1.> The google.golang.org/protobuf module is APIv2. We have taken advantage of the need to change the import path to switch to one that is not tied to a ...		dgellow
22506328	12.046505	-7.508607	comment	8.0	22.0	1583521923	-11.329161	Having used Kotlin for a while now, I find it really unfortunate that `const` wasn't `val` for the sole reason that it's 5 characters instead of 3. `val` would have matched nice with `let`, and my mul...		dlbucci
22557497	11.756658	-7.3419743	comment	8.0	37.0	1584024969	7.2038035	The main benefit of classes is as a way to define custom types. Otherwise you are stuck with the types built into the language, which are not designed to help ensure correct program state, logic, and ...		INTPnerd
22646090	11.797841	-7.193621	comment	8.0	25.0	1584793776	-8.975162	While I really like type annotations I hate that they’re little more than IDE hints.There’s nothing to stop calling functions with incorrect datatypes at runtime and I’d consider this one of the single biggest weaknesses of python right now		Bnshsysjab
22662605	11.713485	-7.3491964	comment	8.0	30.0	1584959297	4.221572	What programming language would cause least friction for providing discrete types for all domain primitives or even all handled data?		korpiq
22674673	11.781197	-7.357696	comment	8.0	30.0	1585056954	7.341503	I don't get the immutable data structures thing though. If I have a vector of 1 billion numbers and I need to sort it it'll be unfeasible to make a copy every time I swap elements. RAM isn't infinite ...		dirtydroog
22842663	12.20915	-7.6277995	comment	8.0	31.0	1586624490	11.939256	I very recently (about a year ago) joined a shop that is primarily into functional programming (FP) and I got my first exposure to Scala as well as F# through work projects. As a long time user of Jav...		seahawks78
22842753	12.17644	-7.612866	comment	8.0	29.0	1586625332	11.927467	The Scala team pulled out all the stops with Dotty. It's a real tour de force, on a par with the sea change of C++11. Even with the plaudits he's earned, Martin Odersky is for me in the top three lang...		seertaak
22849702	12.284349	-7.2962856	comment	8.0	21.0	1586712578	7.11981	Boomers still talking about Smalltalk yet we have an explosion in new programming languages and no one has brought it back to life. You have your pick of mature VM’s. The most popular VM (by installs)...		ryanmarsh
22860976	11.902426	-7.340181	comment	8.0	50.0	1586817580	1.7445571	Programming is 1,000 room hotel of which we live in only one.I recommend you study different programming paradigms because in them we can find really interesting approaches to solve problems.For me th...		elviejo
22870330	12.247286	-7.525187	comment	8.0	34.0	1586892285	-11.396136	I've been using spring and Kotlin together for nearly 3 years. Since then, a lot of Kotlin specifics have crept into Spring. Also, there's an effort to move to a fully declarative Kotlin DSL for drivi...		jillesvangurp
22982118	12.296546	-7.07136	comment	8.0	26.5	1587853401	13.160577	Not sure what you mean.This was the best way to do it. Slowly and painlessly. Any project that matters is now on 3.For a bad transition, look at Perl 6, a debacle so big it was renamed Raku and became a different programming language.		reedwolf
23058551	12.114208	-7.85051	story	8.0	119.0	1588508210	-3.2477195	Computational Category Theory in Python III: Monoids, Groups, and Preorders	http://www.philipzucker.com/computational-category-theory-in-python-3-monoids-groups-and-preorders/	EvgeniyZh
23363918	12.001052	-7.749532	comment	8.0	39.5	1590867282	10.439854	"I was a Haskell developer in my last gig. I entered that job determined to make a success of it, because I was excited about the language and felt I wanted to ""prove"" that it had value in a ""boring"" d..."		jbreckmckye
23369037	12.231438	-7.616059	comment	8.0	31.0	1590927188	11.939286	>Don't ever try Scala.Don't ever try C++. I work on a medium-sized low-level C++ application, and every time we need to compile from scratch it takes over two hours on a single core. Even with distrib...		logicchains
33116610	12.182152	-7.5116076	comment	8.0	22.0	1665108071	-10.587373	Can we just get and updated f91w…		oolveea
33130701	12.258596	-7.3014035	story	8.0	91.0	1665217291	7.078318	Liberating the Smalltalk lurking in C and Unix (2014) [video]	https://www.youtube.com/watch?v=LwicN2u6Dro	Kinrany
33223198	11.756238	-7.037709	comment	8.0	30.0	1665924614	-9.509166	No.Applications are not functions.How many applications that you use on a daily basis work as follows:1. You prepare some parameters2. You start the application with those parameters.3. The applicatio...		mpweiher
33329767	12.25471	-7.519534	comment	8.0	23.5	1666702138	-11.414836	Do you know of any good backend web frameworks for Kotlin? I would wish for something like FastAPI for python. Kotlin may actually be a great fit for a service I want to build and I hadn't really thought of it as an option until now.		commitpizza
33407830	11.821847	-7.2602386	story	8.0	89.0	1667232690	-6.6569543	Show HN: A small, weird and unpractical programming language	https://github.com/japiirainen/fp	japiirainen
33423474	12.184186	-7.92643	story	8.0	135.0	1667320099	-3.213706	Applied category theory in chemistry, computing, and social networks [pdf]	https://www.ams.org/journals/notices/202202/rnoti-p292.pdf	larve
33452733	11.958334	-7.7221184	story	8.0	48.0	1667490086	10.399081	2022 State of Haskell Survey	https://haskellweekly.news/survey/2022.html	luispauloml
33562805	11.642056	-7.9605265	comment	8.0	25.0	1668184085	10.225705	Why exactly is Go so special? For a compiled language it's not very fast and doesn't seem to be making much traction. I think people simply like it because of it's Bell Labs heritage and pretty syntax.		pipeline_peak
33620992	12.171495	-7.5840635	comment	8.0	34.0	1668594173	11.835783	I read the whole thing waiting for the aha-erlebnis which never came. I'm a full stack JS/TS engineer with a decade of experience. I expected this article to be written for someone like me. It didn't ...		gehen88
33621403	11.991295	-7.36481	comment	8.0	32.0	1668597283	7.241164	I'm sure this is a wonderful intellectual exercise in computer science and math, but if this is to be the advertisement in favor of functional programming, I wouldn't consider myself a customer.You st...		fleddr
33621731	11.923672	-7.4670677	comment	8.0	34.0	1668599581	7.815597	I love softcore FP (immutability, first-class functions, etc), but I always get the impression that hardcore FP, like in this article, is about reimplementing programming language concepts on top of t...		BoppreH
33678637	11.716847	-7.2807426	comment	8.0	30.5	1668922742	-8.162184	Only for LISP people. To C++ programmers, an object is a struct with associated functions.Then there's the confusion between lambdas and closures. They are not the same thing. Lambdas are simply anony...		Animats
33794233	12.145889	-7.229731	comment	8.0	23.5	1669760647	12.35082	I love Ruby, but I honestly don't get the point of Struct and now Data. You can do the same thing as both Struct and Data with Class. An immutable data container is a Class without setter functions. W...		corytheboyd
33812293	11.843636	-7.6133995	comment	8.0	23.0	1669868460	10.287447	Time for my yearly tradition of making it to day 4 in Haskell and feeling very smart before completely giving up on the first hard problem that needs regular arrays :)		discmonkey
34016188	11.607442	-7.92414	story	8.0	162.0	1671207024	10.215232	Vulnerability scanner written in Go that uses osv.dev data	https://github.com/google/osv-scanner	GavCo
26477779	12.089418	-7.4674664	comment	8.0	31.0	1615907485	-10.583017	We see similar developments with C# borrowing features from F#, with records in v9, pattern matching, etc.While it's good for C#/Java, it does make it harder to push for adoption for a language such a...		mdm12
26493233	11.852211	-7.2600026	comment	8.0	22.0	1615997839	6.9889503	Object oriented programming.tl;dr - literally all of you are doing it wrong.		x0hm
26507090	11.803294	-7.1666884	comment	8.0	28.5	1616098503	-8.96996	I can't help but feel like if you want static typing, you're better off recognizing that python is not the right tool for the job.Admittedly I've never done serious work with mypy (or typescript), so ...		scudd
26514476	12.034872	-7.069585	story	8.0	151.0	1616167874	7.8216133	A few notes on message passing	http://blog.erlang.org/message-passing/	srijan4
26590803	11.916611	-7.3806086	comment	8.0	26.0	1616758140	7.1661196	These discussions tend to boil down to OOP vs FP. That's a false dichotomy. The alternative to OOP is not FP, it's pre-OOP imperative programming with various techniques a la carte.Should data and fun...		mtzet
26663191	11.683683	-7.909396	comment	8.0	39.5	1617296595	-5.311233	“Java is a big DSL to transform XML into stacktraces” — so was the joke at the time when domain-specific languages were the hype.This, and the FizzBuzz, Enterprise Edition: https://github.com/Enterpri...		laurent92
26668263	12.269464	-7.572951	story	8.0	10.0	1617326616	-11.373181	Ask HN: Is Kotlin on a pathway to become obsolete?		wetrex
26683006	11.801234	-7.1889644	comment	8.0	20.5	1617471825	8.719203	"One language feature from Delphi (or Pascal?) that I wish modern languages had is class propertiesNo getter/setter bs. When creating a class you declared a field a property, it looked like this  type
..."		skeletal88
26710686	11.641518	-7.102467	story	8.0	64.0	1617709394	6.4142923	C# 9 Pattern Matching	https://developers.redhat.com/blog/2021/04/06/c-9-pattern-matching/	benaadams
26777705	11.6038475	-7.9237013	story	8.0	180.0	1618221708	-8.130249	Mugo, a toy compiler for a subset of Go that can compile itself	https://benhoyt.com/writings/mugo/	benhoyt
26827022	11.765162	-7.360935	comment	8.0	26.0	1618526087	-8.821356	I've read all the arguments about static typing, but I still can't comprehend how people get themselves into a situation where using the wrong type is a problem.  I totally understand it as an optimiz...		dec0dedab0de
27060558	12.145736	-7.576655	comment	8.0	22.0	1620290394	-9.109763	Can we have a REPL-driven language that's statically typed?My hope is yes, in that it's just that the work hasn't been put in yet to create to create the equivalent of Typescript for Clojure or Lua th...		nonbirithm
27073077	11.957559	-7.2369814	comment	8.0	38.0	1620370531	9.15274	Neat idea, but what's the point of async-await when you just put await before 100% of calls like in the first example? Now you've got more to type for no gain.I don't get this popularity of async-awai...		alpaca128
27100272	12.039944	-7.3727837	story	8.0	112.0	1620597953	6.827364	Objective-S: architecture-oriented language based on Smalltalk and Objective-C	http://objective.st/	ingve
27141070	12.082531	-7.8273506	comment	8.0	34.0	1620906888	10.446544	For the lay person, what is the advantage of ocaml over other languages?Why would I reach for it?		terminalserver
27152270	12.239871	-7.638363	comment	8.0	20.5	1620982955	11.938735	Always wanted to look into Scala but it seemed very intimidating. Is there a good intermediate 'How to' for Scala 3 anyone can recommend?		Barrin92
27152321	12.2439575	-7.5426435	comment	8.0	40.5	1620983519	8.119712	I think apart from streams it was Kotlin that did the trick.		isbvhodnvemrwvn
27175281	11.641257	-7.9604735	comment	8.0	27.0	1621185841	10.219117	>  Our former .NET engineer now says, “Being able to call a function that doesn’t return an error and know for sure that it must succeed is really nice.”Except when it panics. The article lacks substa...		azth
27491105	12.245759	-7.6435995	story	8.0	51.0	1623576347	11.947161	Strategic Scala Style: Principle of Least Power (2016)	https://www.lihaoyi.com/post/StrategicScalaStylePrincipleofLeastPower.html	brok3nmachine
37578850	11.637219	-7.807212	story	8.0	114.0	1695168826	10.01272	Shaving 40% Off Google’s B-Tree Implementation with Go Generics (2022)	https://www.scylladb.com/2022/04/27/shaving-40-off-googles-b-tree-implementation-with-go-generics/	0xedb
37582667	12.098823	-7.489071	comment	8.0	55.5	1695207371	-10.069474	> I don’t believe that natural language is an adequate medium for conveying instructions with the precision required for many applications.Not clear to me if the author actually uses LLMs to do meanin...		ryanjshaw
37736241	11.70314	-7.1988344	story	8.0	5.0	1696241990	10.111388	Ask HN: Why use any other languages when Python can do the job?		tianyi-wang
37799474	11.814498	-7.105054	story	8.0	5.0	1696660069	5.0648127	Ask HN: How to Learn Design Patterns?		null_bomb
38151451	11.654908	-7.0434494	story	8.0	31.0	1699194803	-7.681798	Implicit Keyword Arguments for Python	https://lwn.net/SubscriberLink/949435/e2f397812de6ad9f/	jwilk
38216529	11.966783	-7.3856926	comment	8.0	31.0	1699605330	12.91195	Lack of proper types is what killed the joy of programming in Elixir for me (I lasted 6 months, hoping I would somehow adapt, but the experience was so miserable that I decided to move on). I simply c...		wofo
38229390	11.64353	-7.980014	comment	8.0	63.5	1699702357	10.233698	As a person who was initially disappointed by Go and who has come to love it, one of the biggest things I learned from watching it grow was the following:As far as languages go, Go is relatively well-...		evmar
38270472	11.812872	-7.1890473	comment	8.0	26.0	1699999422	-8.980114	As someone who has worked with massive typed Python codebases, I 100% agree with the author on Gradual Typing. It's literally the worst of both worlds. It's actually even worse than that because it gi...		packetlost
38414235	11.984874	-7.717806	comment	8.0	23.5	1700927409	10.39739	You can’t really move away from bash, unless there would be alternative as widely available on different Unix systems as bash is.Yes, you came up with a nice syntax for your Haskell scripts, but what it cost to install all required dependencies on, for example, newly created Ubuntu server?		ekiauhce
38548122	12.149691	-7.223015	comment	8.0	28.0	1701889431	8.494721	As an ex-game developer and software architecture nerd, I'm very excited about data-oriented design and ECS. It really is a cool pattern, and it's a very common one in shipping games today. It's not j...		munificent
14695976	11.632504	-7.936814	story	8.0	76.0	1499177591	10.172716	Kolpa – A fake data generator for Go	https://github.com/malisit/kolpa	masit
14722791	11.7639065	-7.3790636	comment	8.0	32.5	1499467377	-8.785181	"""Even though theoretically, type theories and type systems are not enough to prevent all the problems in logic and programming, they can be improved and refined to prevent an increasingly number of pr..."		zzzcpan
14821321	11.638668	-7.956998	story	8.0	108.0	1500651210	10.18667	Pure Go implementation of the NaCL set of APIs	https://github.com/kevinburke/nacl?hn	kevinburke
14871106	12.241831	-7.649467	story	8.0	153.0	1501203749	-5.3668175	Scala 2.12.3 Released	https://github.com/scala/scala/releases/tag/v2.12.3	virtualwhys
14875439	12.126795	-7.5012174	comment	8.0	22.5	1501259255	-10.607315	Ask HN: I've toyed around with F# and I kinda like it but I've never dug deep enough into it to answer the question: can I use this for 'real life' code as part of an existing C# desktop application f...		stinos
14887341	11.813106	-7.338649	story	8.0	150.0	1501441770	8.65151	Implementing Algebraic Effects in C	https://www.microsoft.com/en-us/research/publication/implementing-algebraic-effects-c/	necrodome
14893563	12.14136	-7.4770627	story	8.0	138.0	1501519390	-10.593516	Rezoom.SQL: Statically typed SQL for F#	https://github.com/rspeele/Rezoom.SQL	Bognar
14919155	11.909503	-7.428157	comment	8.0	27.0	1501765537	7.2960467	"I accept that this is a widely used phrase now but I never understood why just using map/filter/reduce and avoiding state is enough for code to be called ""functional programming"".Most functional langu..."		seanwilson
14962053	11.645297	-7.960141	story	8.0	55.0	1502223330	10.1739235	Context should go away for Go 2	https://faiface.github.io/post/context-should-go-away-go2/	beyang
15028211	12.094242	-7.51324	comment	8.0	31.0	1502897174	-10.533151	I actually work on F# at Microsoft.  I've had success and some failures when it comes to evangelizing F# through Microsoft (but mostly success if my measures are accurate).  I strongly believe that it...		phillipcarter
15043658	12.221971	-7.6269236	comment	8.0	23.0	1503031760	11.964384	I'm a bit confused. I have been told multiple times by Scala users that Scala compile times are a non-issue.		needusername
15063404	12.230091	-7.5312395	comment	8.0	40.5	1503311002	-11.398438	If the language designers keep their heads, Kotlin will slowly eat away at Java. Java itself is never going away: it's a Fortran or Cobol situation, only maybe three or four orders of magnitudes bigge...		norswap
15113466	11.980565	-7.4041424	comment	8.0	27.5	1503877444	-10.6520195	I like a good interpreted language as much as the next guy, but there are REPLs for compiled languages. Pretty sure Scala has one and maybe Haskell		mhluongo
15141005	11.955586	-7.4458084	comment	8.0	40.5	1504193585	7.2953105	> The core of Functional Programming is thinking about data-flow rather than control-flowI've spent a small amount of time trying to convince people that FP is a byproduct of immutability and not much...		dahart
15142725	11.765957	-7.354224	comment	8.0	27.5	1504205017	-8.840231	This is just rehashing the same tired and fallacious argument that most errors aren't type errors. And it is pure fallacy because different languages have different ideas as to what constitutes a type...		darksaints
15192419	11.731832	-7.880573	comment	8.0	27.0	1504796244	10.143173	It's worth noting that it's rarely necessary or desirable to put an app server like nginx in front of Go HTTP server applications. The Go standard library http and TLS stack are production quality and...		bkeroack
15371448	11.97601	-7.7343884	story	8.0	90.0	1506750341	10.420573	Haskell People	http://argumatronic.com/posts/2017-09-27-haskell-is-useless.html	allenleein
15373680	11.821082	-7.577536	comment	8.0	32.5	1506789810	10.04775	>>  algebraic structure I talk about the most passionately is the monoidCan you ELI5 monoid? what problem does it solve which isn't easy in other languages without it?edit: thx everyone.		diminish
15384792	11.785087	-7.306522	comment	8.0	54.5	1506959644	4.779862	I think dynamic typing proponents get hung up on the auto-complete aspect. The real benefit is when you find someone writing a property with a common-ish name to a data structure and you want to know ...		Eridrus
15385892	11.809068	-7.39539	comment	8.0	37.5	1506965402	-8.900211	"What amuses me in all ""static typing versus..."" discussions, is that it usually it is the comparison between two camps:Camp A: Languages with mediocre static typing facilities, for example:     -- C (..."		flavio81
15483539	12.010161	-7.5003667	comment	8.0	23.5	1508165296	7.2769156	As much as I hate to say this, I think untyped functional programming is the way to go to teach about the virtues of functional programming.We do this at my university using the obscure but awesome Oz...		norswap
15490832	11.891309	-7.300109	comment	8.0	23.0	1508248058	-10.45007	C has no classes, and everything's in one global namespace.Scheme & LISP have no built-in classes, and one can argue that CLOS isn't what we normally describe as OOP. Both normally have a global names...		mdhughes
15494001	11.972964	-7.725154	comment	8.0	25.5	1508268108	10.41755	"I don't want to knock the technical achievement here -- it's a cool hack -- but I'm really surprised that it was deemed to be the best choice for a production system.In the first place, ""we can't comp..."		teraflop
15576250	11.598398	-7.330055	comment	8.0	31.5	1509216754	-8.748286	Can't a compiler be created to traverse the AST, locate all operations performed on the variable and infer the narrowest type definition that allows for all of those operations, and then enforce at co...		hliyan
15578592	12.253205	-7.4760604	story	8.0	155.0	1509267906	-10.616847	Fable: F# to JavaScript compiler	http://fable.io/	galfarragem
15593716	11.811324	-7.386992	comment	8.0	56.5	1509462167	-8.89597	Rich comes down hard here on statically typed languages, but before the static typers get too offended, his main attack is on the overuse of ADTs/classes to build information processing systems (i.e.,...		wellpast
15672046	11.660305	-7.9497514	comment	8.0	37.0	1510340270	-8.579433	I'm not sure what you mean by vocal minority's complaints.Golang generics is the second most voted issue on GitHub itself: https://github.com/issues?q=is%3Aopen+is%3Aissue+sort%3Areac...(I'm not sure ...		rdsubhas
15740143	12.260015	-7.535673	comment	8.0	30.0	1511189049	-11.366475	I agree 100%. Kotlin compiles to JVM, JS and very soon also to native via LLVM. That means you can ship a web app (both backend & frontend) and mobile clients (for android and soon iOS) in one languag...		adamnemecek
23422588	12.237042	-7.6374865	comment	9.0	51.0	1591308693	11.951408	Scala is a language I find interesting. Between Spark, Akka, and all of the FP, it seems like it has most of the boxes I’d want. I have read mixed things about the language though, specifically with r...		p33p
23498949	11.749884	-7.2069354	comment	9.0	54.5	1591968161	9.138545	I think it is surprising to a lot of people who do take it as read that async will be faster.As I describe in the first line of my article I don't think that people who think async is faster have unre...		calpaterson
23548600	11.681308	-7.87396	story	9.0	229.0	1592377321	10.213847	Robpike/Lisp: Toy Lisp 1.5 interpreter in Go	https://github.com/robpike/lisp	mastabadtomm
23630368	12.306823	-7.019787	comment	9.0	90.0	1593017065	13.179081	I was part of a team that wrote significant parts of Amazon's payment processing systems in Perl in the late 90s. I really loved the language. It's object system was so flexible and powerful. Once you...		sumanthvepa
23652889	11.873071	-7.27558	story	9.0	22.0	1593184438	-15.47695	Goodbye, Object Oriented Programming	https://medium.com/@cscalfani/goodbye-object-oriented-programming-a59cda4c0e53	andy_herbert
23767541	11.638713	-7.970456	story	9.0	9.0	1594191087	10.232181	Ask HN: Alternative to Go		gnur
23795421	11.984671	-7.720183	comment	9.0	33.0	1594409643	10.426571	"Just curious, how would one handle something like this in Ocaml:  x = function() { 
        if (rand() > 0.5) {
          return ""abc""
        } else {
          return 2.01
        }
      }

So far,..."		wenc
23837722	11.749154	-7.0613923	comment	9.0	30.0	1594760082	-9.000701	OK, so I sort of get it. I love ML style syntax. I love the way that it supports great things like partial application.What I do not like is TMTOWTDI. And I do not like Python violating its own princi...		mumblemumble
23874206	12.285587	-7.3311625	story	9.0	203.0	1595012833	7.018841	Bare metal Smalltalk-80 port to the Raspberry Pi	https://github.com/michaelengel/crosstalk	salgernon
23957388	11.972503	-7.723458	story	9.0	268.0	1595774575	10.362188	Basics of Haskell – Code and exercises	https://github.com/raviksharma/bartosz-basics-of-haskell	raviksharma
24281765	12.067769	-7.815158	comment	9.0	33.0	1598444933	10.436759	I've never encountered a real OCaml project or anyone who uses it in my career (same is true for Haskell). I have assumed these languages are a hobby for CS academics and get used for pet projects by ...		TallGuyShort
24395673	11.832151	-7.630156	comment	9.0	27.0	1599436969	10.088045	What is a monoid? I googled to no avail. Lots of articles, but none tell what the heck it actually is.		baybal2
20146538	12.32189	-7.02485	story	9.0	68.0	1560173532	13.1785555	Perl 5.30.0 documentation site	https://perldoc.perl.org/	kamaal
20310936	11.686523	-7.3546824	comment	9.0	24.5	1561785732	-8.763472	The problem is that sophisticated type systems only catch a subset of the bugs that a unit test can catch. For example, let's say I'm adding the ability to transfer funds from one account to the other...		quanticle
20376325	12.134452	-7.8674536	story	9.0	294.0	1562520718	-3.207762	Seven Sketches in Compositionality: An Invitation to Applied Category Theory	https://arxiv.org/abs/1803.05316	edwintorok
20422831	11.704133	-7.2026844	story	9.0	119.0	1562954293	7.332022	Mirth – a type-safe concatenative purely functional programming language	https://github.com/mirth-lang/mirth	agentofuser
20431170	12.25414	-7.4778166	story	9.0	8.0	1563068613	-11.365215	node.js vs. kotlin as a server side development		idreamer
20505279	11.858712	-7.268228	story	9.0	38.0	1563870592	7.040026	The Rise and Fall of Object Oriented Programming	https://medium.com/machine-words/the-rise-and-fall-of-object-oriented-programming-d67078f970e2	azemda
20544076	11.642562	-7.955355	story	9.0	171.0	1564260238	10.209493	Purescript-native can now target Golang	https://discourse.purescript.org/t/purescript-native-can-now-target-golang/878	maxekman
20555477	11.633502	-7.944271	comment	9.0	41.5	1564413619	10.212017	This is too similar to interfaces for me and seems like it would only add to the complexity of the language, documentation, and compile time for a small increase in generic code.One of Go's core stren...		wybiral
20610651	12.011069	-7.8081427	story	9.0	140.0	1564972324	10.429731	Inventing Monads	https://blog.kabir.sh/posts/inventing-monads.html	tambourine_man
21002741	12.066012	-7.808368	comment	9.0	34.0	1568786956	10.391189	I don't think this article is very useful. It doesn't adequately provide an introduction to OCaml code (or adequately explain what a given code snipped is doing) and yet frequently defers to just code...		wh0knows
13772028	12.242331	-7.63221	comment	9.0	36.0	1488436717	11.947138	I really wanted to love Scala, and for the first few days I did. But it was a never ending story learning this language. It is so complicated and feature rich that there's just too much to learn. I co...		itaysk
13792287	11.626797	-7.963453	story	9.0	178.0	1488653715	10.252475	Gokrazy – a pure-Go userland for Raspberry Pi 3 appliances	https://gokrazy.github.io/?hn	dchuk
13803287	11.677016	-7.974954	comment	9.0	56.0	1488814350	10.217924	>When asked what changes would most improve Go, users most commonly mentioned generics, package versioning, and dependency management.and:>What changes would improve Go most? (first: Generics)Number o...		coldtea
13814324	12.143825	-7.509603	story	9.0	183.0	1488917714	-10.650071	F# 4.1 and Visual F# Tools for Visual Studio 2017	https://blogs.msdn.microsoft.com/dotnet/2017/03/07/announcing-f-4-1-and-the-visual-f-tools-for-visual-studio-2017/	dustinmoris
13846063	11.851163	-7.6373005	story	9.0	130.0	1489251117	12.812589	Pony language 0.11.0 released	https://pony.groups.io/g/user/message/892	spooneybarger
13930031	11.9868965	-7.446854	story	9.0	85.0	1490181695	7.160265	Why OO Matters in F#	https://eiriktsarpalis.wordpress.com/2017/03/20/why-oo-matters-in-f/	douche
14011930	12.288797	-7.3283186	story	9.0	51.0	1491052185	7.0406227	Smalltalk to get a second crack at the whip	https://medium.com/@richardeng/smalltalk-to-get-a-second-crack-at-the-whip-ecaeb8a94533	horrido
14069973	12.283243	-7.309257	comment	9.0	39.0	1491700919	7.047176	I looked at a number of Smalltalk books yesterday after reading a discussion here, but all of the ones I read of the following list were terrible books:http://stephane.ducasse.free.fr/FreeBooks.htmlI ...		Safety1stClyde
14123229	12.274606	-7.764382	comment	9.0	41.5	1492295898	10.444394	After learning Elm I wanted to understand ML/OCaml a bit more, so I worked through some documentation from the OCaml site and walked away pleasantly surprised.After using it for a couple of weeks I am...		Dangeranger
14148138	12.005254	-7.7700176	comment	9.0	46.0	1492613704	10.407159	"""Learning haskell"" is pretty much in the same category as ""Write that novel I've been thinking about."""		empath75
14210192	12.142853	-7.8866673	comment	9.0	31.5	1493284555	-3.2359755	And... I still understand nothing about category theory.Are there any more comprehensible primers out there or is this just a field of mathematics that I shouldn't expect to understand without years o...		3131s
14235564	11.730777	-7.3064528	comment	9.0	51.5	1493612654	-8.170103	They're both wrong.  Closures and Objects are both structures with function pointers and delusions of grandeur.		cperciva
14240125	11.903261	-7.0578527	story	9.0	189.0	1493663250	-10.746521	Asynchronous Programming in Python: Asyncio	http://djangostars.com/blog/asynchronous-programming-in-python-asyncio/	submeta
14267016	12.04951	-7.53688	comment	9.0	27.5	1493920110	7.2992816	If anyone's curious to try out functional programming, I would highly recommend Elm. I haven't been so excited about a language since I went from C to Ruby ten years ago, and Pragmatic Studios has a great course on it (I have no affiliation): https://pragmaticstudio.com/courses/elm		choxi
14368050	12.392394	-7.358823	story	9.0	22.0	1495121410	10.122515	Crystal Lang vs. Node.js vs. Go Benchmarks	http://blog.seraum.com/crystal-lang-vs-nodejs-vs-golang-vs-http-benchmark	bigtunacan
14375145	12.229891	-7.6196275	story	9.0	170.0	1495198866	11.930621	Scastie: use any Scala compiler and Scala library in the browser	http://scala-lang.org/blog/2017/05/19/scastie.html	heathermiller
14418769	11.896641	-7.285416	story	9.0	26.0	1495733818	6.982272	Ask HN: Are there any courses/course materials that teach oop concepts well?		__strisk
18968495	12.355365	-7.2556405	comment	9.0	40.5	1548167919	7.0856156	"""Everything's an object"" is object oriented programming done right and I can see why Ruby and other languages used those ideas from Smalltalk. I couldn't understand the fascination with the integrated..."		thekingofh
18975797	12.267473	-7.07279	story	9.0	9.0	1548219785	-10.369094	Ask HN: Why use TypeScript?		shay_ker
19019376	12.307507	-7.301893	story	9.0	104.0	1548697383	7.083059	The Story of Squeak, a Practical Smalltalk Written in Itself (1997)	http://ftp.squeak.org/docs/OOPSLA.Squeak.html	fanf2
19051580	12.071636	-7.1182218	comment	9.0	27.0	1548995338	8.681266	Annotation-based programming might seem cool now, but wait a few years.Magic always seems cool when you add it to a project - hey, look - I don't have to do <tedious thing> anymore.Then time goes on, ...		apo
19146030	11.755704	-7.3317437	comment	9.0	42.5	1549995640	-8.868159	The problem with that reasoning is that nearly every language with static typing also has some kind of type inference. You'll just wind up with a bunch of autos/vars.		risubramanian
19220543	11.744986	-7.815326	story	9.0	53.0	1550782912	10.12268	Will Node.js Forever Be the Sluggish Golang?	https://levelup.gitconnected.com/will-node-js-forever-be-the-sluggish-golang-f632130e5c7a	ngaut
19416553	11.7934675	-7.319158	comment	9.0	36.0	1552856382	-8.888824	> The trade off is still thereNot really, in my opinion. Type inference especially has come a long way. If I offer you a choice between language A and language B and claim that their syntax is nearly ...		DonaldPShimoda
19462566	11.966001	-7.4740477	comment	9.0	29.0	1553263393	-10.57158	Everyone talks about functional programming as if its this great new thing. I'm coming from a strong C# background, and to me this reads exactly like OOP.>  the output value of a function depends only...		SamuelAdams
19520632	12.08046	-7.8892136	story	9.0	233.0	1553858427	10.449143	OCaml on Baremetal Shakti RISC-V Processor	http://kcsrk.info/ocaml/riscv/shakti/2019/03/29/1400-ocaml-baremetal-shakti/	lelf
19697557	11.743663	-7.4052577	comment	9.0	40.0	1555656206	-8.791347	Why is everything moving to types?		cocochanel
19715435	11.925705	-7.355751	comment	9.0	79.5	1555892581	6.963778	Everything sucks, they just all suck differently.I still think OO provides a pretty easy mental framework for programming.   You can get good results.  Bit of discipline without going crazy and it works really effectively.  Despite its shortcomings.		keithnz
19852987	12.24403	-7.5442634	story	9.0	171.0	1557259747	-11.366229	Kotlin is now Google’s preferred language for Android app development	https://techcrunch.com/2019/05/07/kotlin-is-now-googles-preferred-language-for-android-app-development/	el_duderino
15782598	11.755411	-7.285347	story	9.0	128.0	1511725554	7.246102	Pure: a modern functional programming language based on term rewriting	https://agraef.github.io/pure-lang/	blacksqr
15854480	11.700376	-7.42875	comment	9.0	32.0	1512499801	-8.721229	Is there a reason dependent types aren't more widely used? Is it just a case of people not wanting to learn anything new, or are there some show-stopping issues in practice?The idea seems promising. I...		HumanDrivenDev
15878940	11.649899	-7.9496074	story	9.0	93.0	1512744634	-9.376635	Disco – A plug-and-play secure protocol and a cryptographic library in Golang	http://www.discocrypto.com/#/	baby
15891599	11.928477	-7.699958	story	9.0	205.0	1512917497	10.418104	Finding bugs in Haskell code by proving it	https://www.joachim-breitner.de/blog/734-Finding_bugs_in_Haskell_code_by_proving_it	based2
16017244	11.639715	-7.9075427	story	9.0	120.0	1514402872	10.176324	Using Go Templates	https://blog.gopheracademy.com/advent-2017/using-go-templates/	bketelsen
16167187	12.254048	-7.548505	story	9.0	73.0	1516190025	-11.377979	Kotlin 1.2.20 released	https://blog.jetbrains.com/kotlin/2018/01/kotlin-1-2-20-is-out/	dayanruben
16176650	11.653853	-7.771985	story	9.0	198.0	1516279490	-9.670182	Stream Processing for Go	https://blog.wallaroolabs.com/2018/01/go-go-go-stream-processing-for-go/	spooneybarger
16213275	12.351408	-7.0387154	comment	9.0	32.0	1516713044	13.185558	Is anybody here using perl 6 in production at the moment? Or perl 5 for that matter?		bigbluedots
16256877	11.73608	-7.3105555	story	9.0	70.0	1517225550	9.277629	Greenlet – Move an async function into its own thread in the browser	https://github.com/developit/greenlet	rbanffy
16265816	12.166054	-7.4730043	comment	9.0	24.5	1517324753	-10.642682	"I hope people don't end up using this for AF (as f*) 
e.g. www.lit.af"		CodeSheikh
16315351	12.378985	-7.125096	comment	9.0	26.5	1517911894	-10.424071	What can ReasonML do that TypeScript can't?		azr79
16333939	12.297179	-7.569146	story	9.0	211.0	1518111724	10.3522	Exploring ReasonML and functional programming	http://reasonmlhub.com/exploring-reasonml/	jasim
16348771	11.987239	-7.748009	comment	9.0	39.0	1518288144	10.434588	I've tried messing around with haskell a few times, but the biggest problem I have is the tooling.I just tried to get haskell set up a few days ago and I couldn't get it working with either vscode or ...		resoluteteeth
16353551	12.282371	-7.5856886	story	9.0	158.0	1518369626	11.923167	Udash – Scala and Scala.js Reactive Web Framework	https://udash.io/	auggierose
16423063	11.653032	-7.9497232	comment	9.0	33.0	1519153787	-4.652135	I'm going to comment mostly on the parts of the proposal that I think are wrong, but don't take this to be an overall negative response. I'm excited to see smart folks working on this, and package man...		munificent
16515860	11.707867	-7.1714087	story	9.0	105.0	1520188858	7.8885837	Representing the Impractical and Impossible with JDK 10 “var”	http://benjiweber.co.uk/blog/2018/03/03/representing-the-impractical-and-impossible-with-jdk-10-var/	pents90
16624129	11.637293	-7.918013	comment	9.0	49.5	1521500249	10.192674	"Great article that corroborates what I've also personally seen in many Go applications.IMHO, if you're coding Java style interfaces up-front (""Repository"", ""Service"", etc) you're already doing it wron..."		tepidandroid
16705941	11.6096	-7.903555	story	9.0	150.0	1522320050	10.044819	Proposal: Non-cooperative goroutine preemption	https://github.com/golang/proposal/blob/master/design/24543-non-cooperative-preemption.md	mseepgood
16708783	12.22159	-7.567873	comment	9.0	41.5	1522343511	11.916963	I really like (and work in) Scala, and Scala native is an interesting project.However, its use cases seem to be encroached on all fronts.If you want native, performance and don't need the JVM ecosyste...		dtech
17048911	11.744072	-7.3119197	comment	9.0	34.0	1526057935	-8.8734045	It does beg the question: why not use a statically typed language in the first place?		GordonS
17057190	11.722219	-7.36477	comment	9.0	24.5	1526180963	6.0267506	Types can definitely help with data well-formedness but personally I'm very suspicious of 'mini-types' like Name and CartID. If the data you're wrapping has no internal structure (that can be formally...		dnomad
17464153	12.237433	-7.5398035	comment	9.0	33.5	1530805460	-11.37581	I have nothing against Kotlin, but we should be much more ambitious for the Next Generation of programmers. There's so much more progress to be made in (mainstream) programming languages than the tiny...		valw
17566688	11.67959	-7.7888646	comment	9.0	49.5	1532011117	10.151957	The mess that is the current Java type system makes me skeptical when proponents of languages like Go say not to worry, that generics can be added later.If Java had generics in the beginning, it would look a lot different and the type system would be more powerful and safe.		mcculley
17667323	12.291472	-7.48824	story	9.0	117.0	1533159983	6.1267276	Actor Model of Computation (2010) [pdf]	https://arxiv.org/vc/arxiv/papers/1008/1008.1459v8.pdf	ninjakeyboard
17721918	11.608189	-7.9537277	story	9.0	70.0	1533794455	10.229321	Clear defensive programming with Go using Verifier library	https://itnext.io/clear-defensive-programming-with-go-using-verifier-library-6f648810b453	kiyanwang
17813423	11.979335	-7.733161	comment	9.0	30.5	1534883013	10.406304	Another good (imho better) option is the Haskell book https://haskellbook.com/		oalessandr
17827462	11.960608	-7.492809	comment	9.0	25.0	1535034084	7.3010445	"Does anybody else think functional programming is just one end of the either/or fallacy? Maybe a trap for contemplative people?The ultimate goal of software is to build something useful. The ""function..."		funfunfun
21222654	11.651026	-7.775398	story	9.0	88.0	1570784587	10.226152	Function Currying in Go	https://medium.com/@meeusdylan/function-currying-in-go-a88672d6ebcf	Insanity
21227722	12.309921	-7.0722346	comment	9.0	38.0	1570822906	13.153568	"From what I could tell, Raku appears to be from Rakudo, the Perl 6 compiler, which is a shortened form of rakuda-dou (=""way of the camel"" in Japanese). Rakudo also means ""paradise"". The ""raku"" from ""w..."		edflsafoiewq
21268127	11.974779	-7.737016	comment	9.0	48.0	1571213319	10.386332	"Last week he had ""Learning Haskell is no harder than learning any other programming language""[1]. This week we have:> The program takes more than a few minutes and quickly spikes up to more than 3 GB ..."		cosarara
21280905	11.962792	-7.4459662	comment	9.0	25.0	1571311983	7.2344565	"People at the places I work keep memeing links to blog posts along the lines of ""OOP is dead.  Functional programming is the new king"".Yet to see a single line of a functional language in production.As other commenters have mentioned most decent modern lanuages are multi-paradigm."		BrissyCoder
21299350	11.886321	-7.363175	comment	9.0	46.0	1571503541	6.97813	>In good OO programming, we don’t make class hierarchies in order to satisfy our inner Linnaeus.This correctly identifies one of the worst problems with how people construct OO programs when they get ...		colllectorof
21407028	11.955182	-7.680652	comment	9.0	25.5	1572514713	-8.039279	Author here. After posting this to reddit I realized that the original title is wrong, and poorly reflects the actual point I'm trying to make. Dependency injection is not dynamic scoping, but the lat...		glun
21485011	11.601928	-7.9495554	comment	9.0	27.0	1573236691	10.215288	If you compare Go to C++, Go has gotten more organized but still retains understandability, and in my opinion, C++ has become unrecognizable. I did 10+ years of C++ until around 2012, and since then t...		ping_pong
21484423	11.656016	-7.974415	comment	9.0	29.5	1573233782	10.252	Happy birthday to a wonderfully refreshing language.> Go has also found adoption well beyond its original cloud target, with uses ranging from controlling tiny embedded systems with GoBot and TinyGo t...		K0SM0S
21487528	11.983907	-7.501627	comment	9.0	37.0	1573251672	7.2679825	Rant ahead.Functional programming discussions on HN are pretty depressing. Many of the statements about FP that I see here right now are the same old shit I've heard about Java in mid 00s. You just ne...		gambler
39315801	11.610989	-7.8707385	comment	9.0	32.5	1707492878	10.06677	TBH: Context feels like a wart to me. It works, but it's not elegant. Golang has an aversion to thread^H^H^H^H^H^Hgoroutine local storage. Instead it provides this kludgey experience.I really feel that Golang V.2 should invent a better, native, way of controlling threads of execution.		JohnCClarke
17976325	11.7779255	-7.259332	comment	9.0	42.0	1536817189	-8.939469	"Duly noted the desire of Hack to have more ""typing"". It seems that as soon as projects growth beyond a certain size, everybody starts wanting to add that.I wonder what would be the optimal lifecycle f..."		dsign
18053450	12.07005	-7.208619	story	9.0	28.0	1537739324	9.178659	Better Promises in JavaScript	https://francisco.io/blog/better-promises/	franciscop
18058286	11.715992	-7.1549892	story	9.0	85.0	1537801604	9.521694	The Case of the Broken Lambda	http://veekaybee.github.io/2018/09/24/the-case-of-the-broken-lambda/	josep2
18245578	11.90084	-7.661125	story	9.0	221.0	1539831450	10.388003	Haskell's kind system: a primer	https://diogocastro.com/blog/2018/10/17/haskells-kind-system-a-primer/	ristem
18250466	11.926801	-7.361307	comment	9.0	43.5	1539885066	7.043479	OOP is just a mental model. Deep down everything is made of bits. The church of OOP has failed but if something looks like a duck, walks like a duck and talks like a duck it probably is useful to make...		std_throwawayay
18250571	11.880817	-7.363097	comment	9.0	39.5	1539885757	7.0461316	If we just had made inheritance as something to be avoided unless absolutely needed then OOP would have probably never got such a bad reputation. All the other concepts make perfect sense.		maxxxxx
18256589	11.811198	-7.3915067	comment	9.0	28.0	1539956213	-10.189636	After 20 years of programming[1], I’ve gotten to a point in my life where an advanced type system (with strong static types, no nulls — optionals instead, type inference, type refinement, etc) is abso...		winter_blue
18458569	11.729129	-7.406875	story	9.0	146.0	1542283364	-8.680762	Type inference	https://eli.thegreenplace.net/2018/type-inference/	luord
18515678	12.018713	-7.797647	story	9.0	91.0	1542970051	10.432965	And Monads for All: The State Monad	http://rcardin.github.io/design/programming/fp/monad/2018/11/22/and-monads-for-all-state-monad.html	rcardin
18606907	11.78328	-7.1782446	story	9.0	93.0	1544003217	-8.343147	Best Practices for Using Functional Programming in Python	https://kite.com/blog/python/functional-programming	BerislavLopac
18618428	11.688495	-7.38167	comment	9.0	51.0	1544107815	-8.811634	"A couple of points.Javascript, Racket, etc that he listed aren't ""untyped"" languages. They are typed. Weakly/dynamically typed. Although I guess some people equate the two. So lets go with that.Also, ..."		porpoisely
18643291	11.652614	-7.363405	comment	9.0	28.0	1544389712	9.256813	"Async/await pattern always confuses me, someone please let me know if I get this right:First, async/await does NOT mean ""threading"" or ""multiprocessing"" or ""concurrency"".  It simply means ""using a sta..."		2bitencryption
18761361	12.006738	-7.749869	story	9.0	22.0	1545815621	10.40034	Ask HN: What has Haskell ever done for us?		Maro
18860329	12.004031	-7.529501	story	9.0	10.0	1546986015	7.2256045	Do I have to learn Functional Programming to get a decent developer job?		mosh_java
29803756	11.792418	-7.061218	story	9.0	47.0	1641346369	-9.124262	Python Type Hints – How to Handle Optional Imports	https://adamj.eu/tech/2021/12/29/python-type-hints-optional-imports/	rbanffy
29809977	11.834301	-7.0849175	story	9.0	63.0	1641395900	-7.2970233	Flatten Arrays in Vanilla JavaScript with Flat() and FlatMap()	https://www.wisdomgeek.com/development/flatten-arrays-in-vanilla-javascript-with-flat-and-flatmap/	saranshk
29977330	12.236456	-7.646381	story	9.0	71.0	1642502432	11.935351	From ES6 to Scala: Basics	https://www.scala-js.org/doc/sjs-for-js/es6-to-scala-part1.html	manx
30045100	11.631246	-7.601494	comment	9.0	28.0	1642933733	10.033267	Generics shouldn't make something faster...   If they do, then there is a bug or missed optimization in the compiler.		londons_explore
30060669	11.845269	-7.3075595	story	9.0	19.0	1643044671	-15.477842	Goodbye, Object Oriented Programming	https://blog.devgenius.io/goodbye-object-oriented-programming-a08e1bd0b872?gi=fae95b4a4f21	geekydev
30229883	12.080786	-7.4876695	story	9.0	136.0	1644126939	-10.604999	Inline Assembly in F#	https://blog.devgenius.io/inline-assembly-in-f-net-language-6d70ab9f58c1?gi=dea257bef9e9	cglong
30256889	11.841499	-7.8431416	comment	9.0	23.5	1644316669	10.321787	Meanwhile, I left a Haskell job for a Go job.Language isn’t the be-all end-all of a software project. I’ll take a well maintained and well documented Java codebase over a write-only Haskell codebase w...		q3k
30297851	11.612741	-7.164098	comment	9.0	58.5	1644561614	9.058482	FP is about avoiding side-effects; forEach() can only cause side-effects, so it's not really functional at all, and yet it's superficially designed to blend in with the actual functional array methods...		brundolf
30372009	12.017298	-7.7368526	comment	9.0	35.5	1645097809	10.432295	Haskell is an underrated super power for building backends and web apps. Since 2019 when the blog post was written the ecosystem has improved quite a lot. With the Haskell Language Server and the Hask...		_query
30578257	12.208678	-7.226086	comment	9.0	52.0	1646581288	11.668035	"You will get slightly better people but still the wrong people.
JS is almost never the right tool for the job, Go is occasionally the right tool for the job, mainly if you need to write something that..."		jpgvm
30582956	11.8906355	-7.3181186	comment	9.0	24.5	1646615152	7.0478187	OOP.I’m a self-taught programmer, so have probably missed lots that might help, but every time I come across anything OO, it always seems unnecessarily complicated and awkwardly structured. It always ...		mft_
30623578	12.000627	-7.7550917	comment	9.0	36.0	1646890926	10.394651	I spent several years learning and using Haskell professionally and I have to say it was a waste. Almost nothing has carried over to what companies use or want day to day, nor did it really help me to...		ilovecaching
30700768	11.602727	-7.8882084	comment	9.0	27.5	1647447681	10.102618	"Why not call this for what it is? It's CSP in C. Go is not the only language in which CSP is used as the concurrency model.I understand using ""Go-style"" as an adjective to describe this makes it easier for the uninitiated but it's doing everyone a disservice IMHO."		marcofiset
12609762	11.982338	-7.7489953	comment	9.0	24.5	1475194301	10.09456	I don't fully understand how category theory terms are helpful in programming. It always feels backwards to me, that first you write the code, then you look through the code and pick out all the place...		conistonwater
12832411	11.780254	-7.328747	comment	9.0	25.5	1477862585	-8.968904	One big mistake we keep making is drawing a false distinction between static versus dynamic typing and treating it as all or nothing. Type systems should be scalable, in that programmers should be abl...		nradov
12862910	12.255382	-7.653985	story	9.0	223.0	1478171207	-5.3331547	Scala 2.12.0 is now available	http://www.scala-lang.org/news/2.12.0	rilut
12904027	12.248638	-7.5562897	comment	9.0	30.0	1478639966	-11.36792	I'm torn on this. On one hand, Kotlin is great. It's not Scala but it gives you a whole lot while maintaining the ability to very easily swap in for Java.On the other hand, it's controlled by Jetbrain...		xiaoma
12968683	11.848321	-7.125483	comment	9.0	33.0	1479314518	8.237757	When I started going into C# from Java a bit, there were two things slightly annoying me:- Class extensions: I saw code examples online that just wouldn't work for me because the compiler told me a ce...		blauditore
12993350	11.967119	-7.721797	story	9.0	140.0	1479561621	10.393683	Exploratory Haskell (2015)	http://www.parsonsmatt.org/2015/12/09/exploratory_haskell.html	mrkgnao
12997204	11.7739105	-7.246368	story	9.0	110.0	1479614552	-5.919935	Increasing Attacker Cost Using Immutable Infrastructure	https://diogomonica.com/2016/11/19/increasing-attacker-cost-using-immutable-infrastructure/	diogomonicapt
12998589	12.258819	-7.293677	story	9.0	43.0	1479646061	7.0911684	Smalltalk vs. Scheme, JavaScript, and Java	https://medium.com/smalltalk-talk/smalltalk-vs-scheme-javascript-and-java-e031fa6d3528	horrido
13050746	11.989053	-7.0858145	story	9.0	85.0	1480273505	-6.6459403	Immutable.js: An Introduction with examples written for humans	http://untangled.io/immutable-js-an-introduction-with-examples-written-for-humans/	rcdmd
13051057	12.152052	-7.83807	story	9.0	111.0	1480276398	-11.408946	The Holy Trinity: Logic, Languages, Categories (2011)	https://existentialtype.wordpress.com/2011/03/27/the-holy-trinity/	rpbertp13
13211096	12.072552	-7.213544	comment	9.0	59.5	1482152240	9.197906	Promises have always been extremely contentious in JS for a couple reasons and Domenic has had the patience of a saint getting the original proposal through so it's totally understandable that he migh...		cwmma
13215198	11.820985	-7.792597	comment	9.0	44.0	1482183516	10.137523	There's still one thing missing - graceful restart:https://grisha.org/blog/2014/06/03/graceful-restart-in-golan...BTW - to people new to Go this article may make it look like serving HTTP is complicat...		gtrubetskoy
13252376	11.932548	-7.4107165	story	9.0	319.0	1482628854	7.273078	A practical introduction to functional programming (2013)	https://maryrosecook.com/blog/post/a-practical-introduction-to-functional-programming	tosh
13308889	11.621984	-7.0775037	story	9.0	189.0	1483449736	1.8789053	Class Breaks	https://www.schneier.com/blog/archives/2017/01/class_breaks.html	thegeomaster
13357879	11.658903	-7.941096	comment	9.0	63.0	1483982309	10.23466	"I completely agree with the author, though slightly surprised to see it come from the Go community, which has seemed like one of the more dogmatic languages.  (E.g. all the ""you don't need generics"" arguments over the years.)"		bjt
13474976	12.39334	-7.5292034	comment	9.0	31.0	1485288422	12.876274	"I think the ""more cores == faster"" benefit is overstated.Without jit Erlang is so slow that languages without concurrency support will kill it. It's even more overstated when something like Go can mos..."		aaron-lebo
13550288	11.919378	-7.722433	story	9.0	72.0	1486041608	12.71997	Proto Actor – Fast distributed actors for Golang and C#	http://proto.actor	cube2222
13588428	11.760107	-7.1206017	story	9.0	45.0	1486463320	7.597325	Node-noop – Implements a noop function	https://github.com/euank/node-noop	willvarfar
27638493	12.02866	-7.811458	comment	9.0	43.5	1624674177	10.41714	"I feel like these tutorials always fall apart when they start introducing Haskell syntax and say ""That's Monad, simple as that!""  class Functor f where
    flip fmap :: f a -> (a ->   b) -> f b
  clas..."		avalys
27661880	11.758809	-7.4559298	comment	9.0	70.5	1624887920	7.1084323	In all my experience with OOP, it's always been inheritance that is the root of all evil. Rust and Go got this correct by having class-like objects with no inheritance, to achieve encapsulation withou...		ferdowsi
27732259	11.835849	-7.0591636	comment	9.0	27.0	1625429490	-5.3616047	I have fond memories of Aspect-Oriented Programming, which I feel should've been in this list.For those not in the know, AOP is basically the Intercal COME FROM statement (itself a pun on goto, ie it'...		skrebbel
27762347	11.757873	-7.471543	story	9.0	82.0	1625672503	9.315981	Comparison of Haskell and Julia List Comprehensions	https://blog.lojic.com/2020/12/26/comprehensions-in-julia.html	todsacerdoti
27768763	11.624304	-7.21575	comment	9.0	31.5	1625722769	9.1236	I often find developers jump to async too early. Clearly a million native threads is too many, but on modern processors a couple thousand mostly idle (due to IO blocking) Java threads are fine (e.g. o...		ec109685
27784458	12.144129	-7.5063524	comment	9.0	58.5	1625843329	-10.594294	I haven't been in .NET for a couple of years but I've worked on quite a few .NET projects over the years. I've seen F# being added to 3 (as far as I can remember), in completely different companies/te...		reader_mode
27807693	11.977813	-7.7267385	story	9.0	123.0	1626071627	10.417719	Haskell for Beginners	https://blog.kalvad.com/haskell-series-part-1/	wowi42
27844154	12.270778	-7.314958	comment	9.0	52.0	1626354039	7.096333	"The page seems to be going out of it's way to not mention the word ""Smalltalk"". Does anyone have an idea why that is? Does Smalltalk have such a bad reputation nowadays or has someone trademarked the term?"		a2800276
27998479	11.859241	-7.3398986	comment	9.0	51.5	1627577184	7.0671673	"""Tool"" is still a class, with perhaps very generic polymorphic methods (e.g. do_default_action() ). The problem is not polymorphism per se, but rather about having a deep class hierarchy aka lasagna c..."		truetraveller
12042626	11.729834	-7.597392	comment	9.0	42.5	1467808542	12.7788515	I think that not using Erlang in this particular case was a mistake. Erlang is running some of the largest chats out there, including League of Legends and WhatsApp. They would have avoided all the ha...		pepesza
12051639	11.679547	-7.0977793	comment	9.0	67.5	1467920548	8.412358	If you are part of the HFT crowd who uses the JVM then you know who the author, Cliff Click, is.His Blogs (former and current) are goldmines for high performance JVM information.http://www.azulsystems...		chollida1
12052258	11.780563	-7.02444	comment	9.0	58.0	1467927704	8.241931	If performance is THAT critical in HFT, why do they pick java as the starting language?I understand that java is very fast, faster than most people believe, but does it beat hand-optimized assembly? Fortran? C?Why Java?		azeirah
12116309	12.031509	-7.694716	story	9.0	172.0	1468860966	13.573689	What Template Haskell gets wrong and Racket gets right	http://blog.ezyang.com/2016/07/what-template-haskell-gets-wrong-and-racket-gets-right/	adamnemecek
12151905	11.673472	-7.3360677	comment	9.0	50.0	1469326555	-8.84014	It continues to be amazing to me that a new generation of developers is discovering that, yes, static checking adds a lot of value (for non-trivial-sized projects). Of course, if you were tasked with ...		lomnakkus
12155019	11.885598	-7.411152	comment	9.0	55.0	1469396081	7.1078906	Except that there is a real advantage to using pure functional programming; being able to easily prove theorems about your code and understand different components in isolation. There is a reason why ...		eutectic
12311218	12.155228	-7.5101137	story	9.0	258.0	1471511105	-10.612014	F# for Fun and Profit	https://www.gitbook.com/book/swlaschin/fsharpforfunandprofit/details	rajadigopula
12423352	12.031471	-7.717692	story	9.0	168.0	1472976960	10.456271	Introduction to Functional Programming in OCaml	https://www.fun-mooc.fr/courses/parisdiderot/56002S02/session02/about	bogomipz
35175566	11.827023	-7.1521997	comment	9.0	42.5	1678919127	9.1594305	C# .NET had async and await in 2012, for comparison. I've always loved Java but Microsoft deserves immense credit for raising the bar, and so quickly, too.		vijucat
35196721	11.931554	-7.0516977	story	9.0	185.0	1679059242	-11.186079	JDK 20 G1/Parallel/Serial GC Changes	https://tschatzl.github.io/2023/03/14/jdk20-g1-parallel-gc-changes.html	carimura
35305546	11.883321	-7.5787144	story	9.0	54.0	1679769010	1.0886192	An apologia of lazy evaluation	https://epicandmonicisnotiso.blogspot.com/2023/03/an-apologia-of-lazy-evaluation.html	runeks
35359473	11.643676	-7.930307	story	9.0	113.0	1680107001	10.21621	Show HN: go-nbd – A Pure Go NBD Server and Client	https://github.com/pojntfx/go-nbd	pojntfx
28083205	11.999751	-7.7465296	comment	9.0	39.0	1628222604	10.423771	I code webapps in Haskell (latest is https://sumi.news). My stack is simple:- Twain (like Sinatra) for server and routing: https://hackage.haskell.org/package/twain- WAI middleware for things like sta...		tofukid
28203422	11.634499	-7.9342566	comment	9.0	27.5	1629150804	10.226305	At first I didn't like Go because I thought it was too opinionated. But the more I used it, the more I found the tooling to be just heads and shoulders above similar languages like C/C++.I use VSCode ...		umvi
28520842	11.945683	-7.468934	comment	9.0	45.0	1631599403	7.2183237	"It's way simpler actually.Functional programming isn't the norm because — while it's extremely good at describing ""what things are and how to describe relationships of actions on them"" — it sucks at ""..."		endymi0n
28529928	12.024114	-7.3905067	story	9.0	50.0	1631648309	-10.570935	TC39 Pipeline Operator – Hack vs. F#	https://benlesh.com/posts/tc39-pipeline-proposal-hack-vs-f-sharp/	jashkenas
28556318	11.640004	-7.971203	story	9.0	53.0	1631821039	10.224569	Golang: Code of Conduct Updates	https://go.dev/blog/conduct-2021	0xedb
22469077	11.719473	-7.918243	comment	9.0	25.5	1583183754	9.984861	"Reasoning went something like this:We could tag the new API v2:+ Makes the ""v1"" and ""v2"" distinction very clear in the import path.- Confusing: google.golang.org/protobuf@v1 doesn't exist, but v2 does..."		neild
22486942	11.649862	-7.2578497	comment	9.0	38.5	1583349501	-8.76628	This is called Structural Typing[0] and is in contrast to Nominal Typing[1] (e.g. Java).0: https://en.wikipedia.org/wiki/Structural_type_system1: https://en.wikipedia.org/wiki/Nominal_type_system		mbell
22514388	11.85739	-7.035476	comment	9.0	37.5	1583617792	-10.726186	"The problem that's described here - ""green"" threads being CPU bound for too long and causing other requests to time out is one that is common to anything that uses an event loop and is not unique to g..."		orisho
22558593	11.898998	-7.3644657	comment	9.0	39.5	1584030831	7.1083503	Hm. Not sold. Sure, you can write terrible code with classes. But that also works great without classes.> I’m terrible at making good abstractions with classes.Then don’t. Or only do it after everythi...		fuzzy2
22672770	11.936589	-7.478822	comment	9.0	42.5	1585034531	7.265605	The article is very nice, thanks a lot for it. Especially since I hear the word concurrency and parallelism often thrown around without any distinction.Very off topic, but I have read several times th...		Random_ernest
22770791	11.744329	-7.1111116	comment	9.0	26.5	1585930627	-8.447225	I'm guessing the FAQ is targeted at the non-technical audience, so I'm not surprised this doesn't show up as a question, but - why Python?I often wonder if imperative programming is actually a beginne...		ivanbakel
22816637	12.15583	-7.0266914	comment	9.0	49.0	1586377210	-10.340573	> Porting to a typed language helped prevent type errors in a typeless language. Who woulda thunk?You say this sarcastically, but every JS-related thread on HN turns into a flamewar between type lover...		smt88
22897098	12.480412	-7.420055	comment	9.0	27.5	1587110409	12.9264145	I like Elixir and all of its infrastructure and libraries, like BEAM and Phoenix, but I could never get used to not having static types. What's the best way to have static types in Elixir?I have seen ...		cercatrova
22914982	12.236759	-7.6331253	comment	9.0	31.5	1587294447	11.958924	I didn't post this, but cool to see this up here!The full book is ~400 pages and will be released Summer 2020 (i.e. soon!). If you're interested in being notified when it comes out, there's a mailing ...		lihaoyi
23016744	11.953147	-7.687842	comment	9.0	41.5	1588148363	10.457227	> https://gitlab.haskell.org/ghc/ghc/-/wikis/applicative-docan't help but chuckle at the accomplishment of 40 years of research in functional PL, ending up with almost C-like syntax once again.		jcelerier
23122255	11.66238	-7.976676	story	9.0	2.0	1588997614	10.227081	Ask HN: Can you help me remember the name of a programming language?		DangitBobby
23131657	11.67759	-7.947554	story	9.0	56.0	1589107926	10.164625	Gearbox  – A web framework written in Go	https://github.com/abahmed/gearbox	abahmed
23265752	11.919406	-7.091195	story	9.0	71.0	1590097195	-10.736974	Waiting in Asyncio	https://hynek.me/articles/waiting-in-asyncio/	BerislavLopac
23319601	11.643301	-7.875178	comment	9.0	40.0	1590556657	10.196749	Go is a particularly good language for CLI's I have found. At least compared to Java/C#/Python.It's reasonably fast, compiles down to a simple to distribute binary, and the language is forgiving enoug...		boyter
23336832	11.729728	-7.2945285	comment	9.0	41.0	1590671606	-8.135343	You don’t agree with an idea so it’s silly? Passing around state via variables is no more tedious than the extra syntax for class definitions, constructors, member variable access, extra semantics rel...		amw-zero
33172345	12.271489	-7.553571	comment	9.0	45.0	1665544459	-11.376378	I'd love to see the internal explanation on how hiring kotlin for BE devs is easier than hiring elixir devs.That's like trying to pivot from finding unicorn to finding pegasus.		NhanH
33483557	11.748149	-7.218567	comment	9.0	44.0	1667669373	-8.977894	But there's a paradox.Why does 100,000 lines of code of python tend to be safer and more manageable then 100,000 lines of C++ despite the fact that python has no type checker and C++ has a relatively ...		deltasevennine
33518218	11.742921	-7.295889	comment	9.0	44.0	1667909017	-10.347655	I thought the same thing for a long time, I found s-expressions very elegant. Then I discovered lambda-calculus, with its scary syntax but based on a process I could understand, text-rewriting. So I h...		martyalain
33537663	11.649187	-7.20956	story	9.0	114.0	1668027130	-8.77681	Binary Lambda Calculus (2020)	https://tromp.github.io/cl/Binary_lambda_calculus.html	tosh
33602132	12.147094	-7.8961926	comment	9.0	34.5	1668464490	-3.257798	Great textbook, I learned all the topology I know from it. Previously, Category Theory was taught as a field that connects branches of math, and thus in terms of other concepts. But recently there's a...		lgdw
33620973	11.77469	-7.285191	comment	9.0	30.5	1668594022	-6.1919107	"I don't get the point of ""immutable objects"". Why have an object at all? Why not just hardcode the values if you want them not to change?"		Gordonjcp
33707211	12.19605	-7.4172773	comment	9.0	30.0	1669133097	-11.371058	Or use Kotlin, it's near perfectly interoperable with Java and the acclamation period is measured in weeks if you're a Java dev		djinnandtonic
33757148	11.62779	-7.8344717	comment	9.0	23.5	1669499472	10.284237	Inventing a language seems to be a rite of passage for every engineer at google.Go, Dart, Carbon, Mangle, am I missing some?I'm not criticizing, I would not dare as I'm creating my own language as well :P		linkdd
33762099	11.618778	-7.8567038	story	9.0	113.0	1669547023	10.085699	Olric: Distributed, embeddable data structures in Go	https://github.com/buraksezer/olric	mastabadtomm
26502638	11.676341	-7.8448424	comment	9.0	26.0	1616075375	10.1653	"massive PSAdotnet rely a lot on the JIT to optimize codeSo cases when you run your program once (middleware, short lived servers) the performance is abysmalNever trust ""ultra optimized & cheated"" benc..."		Shadonototro
26587036	11.928866	-7.3504553	comment	9.0	43.5	1616715446	7.0327635	"You gotta stick the state somewhere.  OO isn't the panacea it was sold as, but it's worked out pretty well for a lot of software.Still, this quote is hilarious:""Object-oriented programming is an exceptionally bad idea which could only have originated in California.""
--Edsger Dijkstra"		recursivedoubts
26631802	11.617594	-7.026671	comment	9.0	40.5	1617086951	8.871943	"You can do the same thing with Python 3.8+ by using f-strings and just appending ""="" to the variable name:    >>> print(f""{d['key'][1]=}"")
    d['key'][1]='one'"		kissgyorgy
26641253	11.754319	-7.2290297	comment	9.0	22.5	1617142534	-8.744407	I hate hate hate var.Sure, in your own IDE, and reading the code you just wrote, no problem. But when doing code reviews and jumping all over, I want to see the type right there. Nothing more frustrat...		Cshelton
26658271	11.668928	-7.711438	story	9.0	68.0	1617269011	10.144686	Background: how we got the generics we have (2020)	https://cr.openjdk.java.net/~briangoetz/erasure.html	kasperni
26660572	12.356721	-7.0692043	comment	9.0	47.0	1617285470	13.179855	I've made a presentation on this very subject to a hackers conference in 2013. It's very clear to me, it's because of Perl6. In 2013, Perl was 26 years and Perl6 was 13 years already, half as old as P...		wazoox
26967987	12.330118	-7.02028	story	9.0	36.0	1619607939	13.207327	There's no such thing as “The Perl Community”	https://neilb.org/2021/04/27/perl-communities.html	domm_plix
27013802	11.948092	-7.3543134	comment	9.0	35.0	1619949639	7.126876	> Somehow over the years I've found that the animals/cars analogies given in OO tutorials are one of the few places that fit well with the model.Yes, and I've never actually needed to implement a cat ...		beagle3
27079293	11.84777	-7.1500225	comment	9.0	26.0	1620412779	8.746663	Curious question — why do people insist so much on fields being private and there being getters and setters, even when all that getters do is return the field and all that setters do is set it? What kind of problem does this arrangement solve? Why not just use public fields?		grishka
27264542	11.6214	-7.93832	story	9.0	241.0	1621865398	10.212781	Rf: an experimental refactoring tool for Go	https://pkg.go.dev/rsc.io/rf	robfig
27388981	12.2712	-7.6290517	comment	9.0	29.0	1622765338	11.92774	To preface, I share a lot of the same sentiments as the author.  My Elixir was Scala - learned it inside and out, then picked up Akka which taught me a lot of neat Erlang-derived principles.  My favor...		jklm
27412101	12.386985	-7.687889	comment	9.0	40.5	1622975228	-11.0207615	>> Learn at least a half dozen programming languagesI'm always surprised by how many people disagree with this; they're on the search for that one language they can use for every task. Or even worse, ...		CraigJPerry
27412573	11.886667	-7.37431	comment	9.0	32.0	1622981032	7.094937	The essence of OOP is not inheritance, that’s a nice to have. The essence of OOP is to encapsulate the data and the functions that operate on that data into an object and hide the internal state of the object from the rest of the program.		Hermel
27464674	11.666847	-7.9761424	comment	9.0	40.0	1623353701	10.222111	Go is mostly very good, but the module ecosystem continues to be a nightmare, and having a deep dependency graph can make build times brutal. I work on a project which depends on k8s, which means a co...		jsjsbdkj
37593967	11.772719	-7.306752	story	9.0	200.0	1695278343	-8.90303	Strong arrows: a new approach to gradual typing	https://elixir-lang.org/blog/2023/09/20/strong-arrows-gradual-typing/	ahamez
37692896	12.140033	-7.8838134	comment	9.0	36.0	1695922395	-3.1827319	Can someone explain to me why there are so many category theory posts in HN? To me it's just a pretty obscure branch of mathematics and there are almost no posts about any of the more popular branches of mathematics.		vjk800
38045478	11.900113	-7.49143	story	9.0	55.0	1698451061	9.27005	Kotlin Coroutines vs. Threads Performance Benchmark	https://www.techyourchance.com/kotlin-coroutines-vs-threads-performance-benchmark/	flykespice
38284771	11.792624	-7.7386775	comment	9.0	36.0	1700097658	10.351364	Yeah. I think the given advice probably takes validation logic and floats it too high. It is of course nice to have early validation logic, but it is also nice when your functions don't mysteriously c...		crdrost
38434507	11.667537	-7.9182506	comment	9.0	34.5	1701103425	10.170856	Yeah, but the amount of boilerplate one must read and write in Go is frustrating, even compared to Java.		emodendroket
38488139	12.3238735	-7.089945	comment	9.0	33.5	1701445815	12.384331	Am I the only one whose soul hurts looking at this syntax? Not a ruby user, but as soon as I saw the use of = to define the function body I immediately thought of all the ambiguous statements one coul...		polygamous_bat
38496264	11.66537	-7.9442163	story	9.0	165.0	1701496090	10.263575	Easy to use OpenID Connect client and server library written for Go	https://github.com/zitadel/oidc	mffap
14695546	12.259305	-7.573631	story	9.0	171.0	1499172621	-11.431938	Kotlin's hidden costs – Benchmarks	https://sites.google.com/a/athaydes.com/renato-athaydes/posts/kotlinshiddencosts-benchmarks	pulse7
14728924	11.648124	-7.218077	story	9.0	40.0	1499590410	-6.5588784	Tiobe Index: Go language at all time high and in the top 10	http://tiobe.com/tiobe-index/	shime
14748562	12.242677	-7.472284	comment	9.0	29.0	1499811366	12.861121	I know that the JVM is a modern marvel of software engineering, so I'm always surprised when my Erlang apps consume less than 10MB of RAM, start up nearly instantaneously, respond to HTTP requests in ...		Cieplak
14763593	11.654117	-7.9348106	comment	9.0	33.0	1499968913	10.222828	The question is _why_ do you need generics, for what use case(s), etc? Saying “I need generics otherwise I won’t use Go” is exactly the type of feedback they don’t want.It seems like you’d have valuable feedback given that it’s a “showstopper” for you.		Spiritus
14764864	11.689555	-7.744903	comment	9.0	28.5	1499977654	10.122398	"Here be Opinions:I hate generics. 
also, I hate exceptions.Too many people are wanting ""magic"" in their software. All some people want is to write the ""Happy Path"" through their code to get some Glory..."		jimjimjim
14878244	11.599386	-7.851963	story	9.0	82.0	1501282605	10.1050205	Vice: Go channels across many machines	https://medium.com/@matryer/introducing-vice-go-channels-across-many-machines-bcac1147d7e2	ingve
15017542	11.5989275	-7.323806	comment	9.0	42.5	1502800277	10.29672	I've tried to like Haskell, but when simple tasks start to look like complicated puzzles with many possible solutions, I get really put off. I want to get stuff done, not feel clever for managing to c...		jordigh
15059691	11.72056	-7.358446	comment	9.0	24.5	1503254973	-8.758626	if the editor is aware of the type inferenceDoes any actual editor do that?  Few text editors for programs are even aware of definitions in other modules.		Animats
15060166	11.620722	-7.8093276	story	9.0	37.0	1503261812	10.035571	Go vs .NET Core in terms of HTTP performance	https://hackernoon.com/go-vs-net-core-in-terms-of-http-performance-7535a61b67b8	ingve
15105613	12.190631	-7.7233024	comment	9.0	43.5	1503758063	10.408227	I've been using OCaml for a couple of side projects, and I have been absolutely blown away by the amount of power this language provides. It strikes a nice balance between high-level expressiveness, w...		yen223
15132670	11.659668	-7.1378856	comment	9.0	40.5	1504105347	8.862979	I have grown to seriously dislike 'namedtuple'. It seems great, and it's so easy to use, but there's so few places it can be used without dragging in future backwards-compatibility baggage.Let's say y...		eesmith
15146070	11.621837	-7.132668	story	9.0	165.0	1504239243	8.973695	Redesigning Python's named tuples	https://lwn.net/Articles/731423/	signa11
15246119	11.783348	-7.129475	comment	9.0	28.0	1505379703	-8.503102	Is Python fully capable and suitable for functional programming?		bhnmmhmd
15278530	11.850748	-7.3964763	story	9.0	80.0	1505761160	-8.708796	Currying vs. Partial Application (2015)	http://www.datchley.name/currying-vs-partial-application/	tosh
15288331	11.64334	-7.1224966	comment	9.0	31.5	1505851640	-6.534022	I'm a bit sceptical about the ragging on global mutable state, given how useful it is (in my use cases, for resource management, e.g. connection pooling, caching, JIT compiling, file loading).Global m...		sago
15304139	11.591457	-7.905165	story	9.0	140.0	1506006286	10.179315	Gonum – Numerical Computing for Go	http://www.gonum.org/post/introtogonum/	dwhitena
15464783	12.476842	-7.820881	comment	9.0	65.5	1507895305	-11.099583	No one in this thread is yet talking about the content of this talk, which I think is interesting. Rich is doubling down on dynamic typing. As the world is gradually moving to more statically-typed la...		hellofunk
15483499	12.000829	-7.7052608	comment	9.0	48.0	1508164971	10.357184	No.  It's a great way to turn people off from the whole idea.I suffered through a course in Haskell and functional programming in college, and the course material was so up its own butt about monads a...		megaman22
15515308	11.726876	-7.15856	story	9.0	214.0	1508503714	6.9900823	Object oriented programming with ANSI-C (1993) [pdf]	https://www.cs.rit.edu/~ats/books/ooc.pdf	geospeck
15624432	11.621895	-7.911526	story	9.0	281.0	1509790718	10.108946	Evio – Fast event-loop networking for Go	https://github.com/tidwall/evio	Acconut
15671904	11.66532	-7.6346836	comment	9.0	50.5	1510339117	10.177751	Are the complaints about lack of generics really a minority thing? Writing separate functions to sort different types just strikes me as ridiculous.EDIT: My original tone was a bit nasty in retrospect...		hood_syntax
15740373	12.152812	-7.5564423	comment	9.0	86.5	1511190598	-11.379764	As a Scala programmer, Kotlin always feels like a language that frustratingly almost gets it, but is infuriatingly unwilling to listen to experience of what works in large codebases. Look at the examp...		lmm
14429626	12.238978	-7.6374054	story	9.0	93.0	1495881764	11.947815	Scaling Scala	https://www.oreilly.com/ideas/scaling-scala	amzans
14459009	12.29893	-7.0255237	comment	9.0	53.0	1496310195	13.163687	"Yes, impressive community effort for a language that... Well... I have heard nothing good about in any ""at the water cooler"" conversation that I was ever in, over the past fifteen years or so. Except,..."		sverhagen
14568364	11.793604	-7.540293	comment	9.0	39.5	1497617003	10.3819685	Idris points the way to the future of programming.A few examples that I find very intriguing:1. type safe printf: https://github.com/mukeshtiwari/Idris/blob/master/Printf.idr2. compile-time evidence t...		mej10
14583055	11.648056	-7.936951	comment	9.0	42.5	1497821322	10.212858	More golang Stockholm syndrome. These arguments are always weird to me. Go has plenty of complex features that go developers don't seem to think cause too much cognitive burden (automatic gc, structur...		grasleya
14613538	11.814184	-7.028944	comment	9.0	23.0	1498150215	-11.188849	To be honest: We have not decided what language we will pick up next. Our first priority is to improve on our Java coverage. In a few months we should be ready to choose our next language. We are thin...		nebucnaut
30831441	11.821661	-7.449375	comment	9.0	28.0	1648480904	-9.087112	Algebraic data types (ADTs) help a lot when expressing business logic. It's hard to go back once you've tried it in Haskell (or presumably in other languages).I often try to replicate ADTs in Python a...		cosmic_quanta
31062369	12.2828245	-7.313714	story	9.0	106.0	1650215321	7.076135	The Early History of Smalltalk (1993)	http://worrydream.com/EarlyHistoryOfSmalltalk/	Jtsummers
31152801	11.924926	-7.4225073	story	9.0	131.0	1650883949	7.2745028	Functional programming with bananas, lenses, envelopes and barbed wire [pdf] (1991)	https://ris.utwente.nl/ws/portalfiles/portal/6142049/meijer91functional.pdf	RafelMri
31182645	11.679305	-7.684484	story	9.0	119.0	1651078985	10.000114	Making Faster B-Trees with Go Generics	https://www.scylladb.com/2022/04/27/shaving-40-off-googles-b-tree-implementation-with-go-generics/	PeterCorless
31214294	12.355089	-7.933659	story	9.0	122.0	1651306654	-11.131276	ClojureRS – Clojure interpreter implemented in Rust	https://github.com/clojure-rs/ClojureRS	capableweb
31218054	11.764856	-7.8844995	comment	9.0	39.5	1651343205	10.318311	"so.. Haskell and Scala? Those would be the top two that come to mind for me when someone says ""highly 'logical' and 'compose well'"", ""having sum types"", 'more expressive', etc.I've heard they're great..."		slimsag
31248358	11.667039	-7.9623737	comment	9.0	43.5	1651586174	10.227544	> I still hold that Go's success is attributed to the fact that you could build a web application out of the box, minus database drivers.I attribute Go's success purely by it being pushed by Google.If...		lawn
31387312	11.668613	-7.9285107	story	9.0	147.0	1652619857	10.200244	Golang Diaries: Generics	https://www.tbray.org/ongoing/When/202x/2022/05/14/Golang-Generics	ciprian_craciun
31651620	12.024231	-7.804499	comment	9.0	39.0	1654592641	10.424102	Why is it that as an abstract concept a monad is so hard to explain in simple English.I didn't understand it for years then realized I had seen it all over the place.Now that I think I know what it is I can explain to someone that doesn't already know what it is.		xupybd
31702330	11.608837	-7.9362755	comment	9.0	64.0	1654927345	10.211469	Coming from Python or Java, Go's standard library is worse, and it's syntax is hard to read. I don't get the appeal. Yeah, yeah, performance. Almost every Go project I've seen is not doing anything so...		Thorentis
25493577	11.760607	-7.362375	story	9.0	151.0	1608545662	-6.006677	Pijul: Commutation and Scalability	https://pijul.org/posts/2020-12-19-partials/	Ygg2
25530159	11.832237	-7.02024	comment	9.0	53.0	1608835538	-8.986477	Ugh... The type hierarchy of Python is painfully intertwined with the implementation of its type system. That implementation varies by Python implementation, and since the Python language is as old as...		legerdemain
25776246	12.290423	-7.060002	comment	9.0	22.5	1610632476	13.165095	"Is perl or ""Raku"" still used in serious new applications these days?I'm not talking about gluing stuff together with scripts - I mean a large project operating wholly under it"		jonny383
25917205	11.703973	-7.3358645	comment	9.0	24.5	1611676462	5.70424	What’s the big deal about type checking?I haven’t worked on large code bases, only run small ML analyses on tabular data. Can someone be concrete with the advantages and use cases?		antipaul
26024964	11.6547365	-7.451309	comment	9.0	57.5	1612443830	10.290814	Like a lot of functional programming writing, this piece seems impenetrable because it comes at a problem from a peculiar angle: given that I have this hammer, what nails can I hit?Starting from the r...		jameshart
26102358	12.272325	-7.6722155	comment	9.0	68.5	1613056819	11.945416	> Hard to win technical arguments with Scala geniuses that like using complicated language features.I was on a team building good old crud apps using monads, monoids, categories, combinators, effects ...		dominotw
26220811	11.6125145	-7.590887	comment	9.0	29.0	1613967614	10.189969	I want compiled Python with strong types. All the batteries of Python included. And runs at C speed. Go feels like C and Python had a baby except the baby looks more like C and less like Python.		systemvoltage
26220921	11.625338	-7.8839955	comment	9.0	42.0	1613968699	10.049184	I think anyone can agree with the author that Go definitely lacks conveniences you're used to in other modern languages.I just think we also tend to dramatize how much that matters.I also think Go's b...		hombre_fatal
26236783	11.709827	-7.282086	story	9.0	69.0	1614085323	4.0362954	Practical typewriting: By the all-finger method (1894)	https://babel.hathitrust.org/cgi/pt?id=loc.ark:/13960/t0vq3q16z&view=1up&seq=9	jesperlang
26320450	11.755911	-7.369835	comment	9.0	34.5	1614718124	-8.876531	This comment and many others in this thread seem to be missing something. I see a lot of anger here or blame on the author for deliberately choosing to not use types, but I think the author actually d...		munificent
26332774	12.03364	-7.156796	story	9.0	145.0	1614797691	3.1037555	fs.promises.readFile is 40% slower than fs.readFile	https://github.com/nodejs/node/issues/37583	Jarred
35644635	11.606387	-7.286877	story	9.0	64.0	1682017381	7.1906624	Defining interfaces in C++: concepts versus inheritance	https://lemire.me/blog/2023/04/20/defining-interfaces-in-c-concepts-versus-inheritance/	jandeboevrie
35700330	12.082689	-7.829558	comment	9.0	31.0	1682430123	10.440871	Why would a company use ocaml?I’ve worked in software now for most of my life, from small to the biggest companies. I’ve watched teams with senior developers use non mainstream languages to build serv...		ronnier
35784192	11.649148	-7.891625	story	9.0	36.0	1683010117	10.190568	Is Go an object-oriented programming language?	https://www.sobyte.net/post/2023-03/go-object-oriented/	thunderbong
35965782	11.600069	-7.906628	comment	9.0	80.5	1684261926	10.155246	> Standalone executables. You can now create standalone executables with bun build.> bun build --compile ./foo.ts> This lets you distribute your app as a single executable file, without requiring user...		hu3
35992527	11.866987	-7.353935	comment	9.0	29.0	1684436410	7.0625787	"Some months ago, I stumbled into an OOP inheritance rabbithole which got me thinking the same:- Isn't the (biological) concept of inheritance built at it's core around the idea of ""generations""? How d..."		nforgerit
36107796	11.927288	-7.435218	story	9.0	159.0	1685308108	7.313939	Functional Programming in Lean	https://leanprover.github.io/functional_programming_in_lean/	d_christiansen
36280040	12.254892	-7.5934987	story	9.0	7.0	1686479842	11.880952	Is it prudent to use Scala for anything new?		rastafarigpu
36380291	11.804713	-7.575531	story	9.0	89.0	1687096153	10.34261	Dynamic programming in Haskell: automatic memoization	https://byorgey.wordpress.com/2023/06/06/dynamic-programming-in-haskell-automatic-memoization/	g0xA52A2A
36389312	11.6053915	-7.0774503	comment	9.0	25.5	1687169432	-7.053328	"JavaScript development looks really strange.  const resource = {
    [Symbol.dispose]: () => {
      console.log(""Hooray!"");
    },
  };

Why not just  const resource = {
    dispose() {
      console.log(""Hooray!"");
    },
  };

Why introduce this weird Symbol stuff?"		vbezhenar
36422008	12.131813	-7.2119374	comment	9.0	23.5	1687370461	8.581388	The article basically describes the  Entity-Component-System architecture and it makes sense when your app is essentially a stateful simulation with many independent subsystems (rendering, physics, et...		kgeist
28707784	11.897893	-7.073734	comment	9.0	27.5	1633017260	8.244963	> Java is infamous for its verbosity. [...]This paragraph highlights something I've been saying for ages.Most criticism of Java needs to be directed towards Java programmers and not the language itsel...		Sohcahtoa82
28862735	11.751086	-7.294807	story	9.0	106.0	1634209434	-8.369219	Emacs Lisp Readable Closures (2013)	https://nullprogram.com/blog/2013/12/30/	nanna
29057884	11.63501	-7.0980825	comment	9.0	38.0	1635695828	8.049248	Can anyone explain how this is better than just importing a singleton instance where it's needed? I've never really understood the point of dependency injection.		ramesh31
29120374	11.909243	-7.06409	comment	9.0	27.0	1636125102	9.402264	Overall I've been extremely unimpressed with Python's async story.  They've spent a decade baking into the core of the language and the result is that it's no better than just using gevent or twisted ...		VWWHFSfQ
29178852	11.653016	-7.9773793	comment	9.0	69.5	1636570746	10.252218	A good twelve years.  Go really changed the way I think about programming.  I used to be excited by programming language features instead of what problem I was actually trying to solve with programmin...		jrockway
29202378	12.415312	-7.1138315	comment	9.0	41.0	1636739732	12.388564	This was definitely written by a pythonist!  If I tried to write it, as a rubyist, I'm sure I'd get some things about python wrong.  (I find it notable how few people there are that are actually famil...		jrochkind1
29299814	11.949387	-7.4634333	comment	9.0	24.5	1637529397	7.2795587	Nice blog post, but:> You might have heard people say that functional programming is more academic, and real engineering is done in imperative style.Real Engineering is done in imperative style. There...		zz865
29631736	11.594639	-7.922619	comment	9.0	36.0	1640042017	10.186777	Compiler error for unused variables :( [0]. Possibly my most hated feature of Go.[0] https://ziglang.org/download/0.9.0/release-notes.html#Compil...Edit: To be clear, love enforcing the idea for produ...		db65edfc7996
29651831	11.64698	-7.917971	comment	9.0	49.5	1640191884	10.224675	> Go type system is not a traditional type system and it was not possible just to bring an existing generics implementation from other language and be done.I claim that there are no original ideas in ...		kubb
34216147	12.027165	-7.4468603	comment	9.0	22.5	1672652836	-10.602578	I get why functional programming, but why functional languages? The article uses JavaScript. I do c# professionally, which can do similar, and have only dabbled in f#.  Seriously asking so I can understand better: what can f# do that c# can’t?		shireboy
34414620	12.462394	-7.036434	comment	9.0	61.5	1673973250	12.409839	The main issue I have with Ruby / Python is the fact that it's duck typed, it makes the maintenance and refactor pretty hazardous.You get objects you don't know what's in there, 6 month later someone ...		Thaxll
34521833	11.938768	-7.4654613	story	9.0	20.0	1674669838	7.2251916	Functional Programming Is Great. But It Ain’t Magic	https://moaboelez.medium.com/functional-programming-is-great-but-it-aint-magic-a7bcb2663187	mariambarouma
34706532	11.716972	-7.133281	story	9.0	49.0	1675853958	7.0078406	Value-Oriented Programming	https://accu.org/journals/overload/31/173/teodorescu/	pjmlp
34755419	11.7363615	-7.103489	comment	9.0	37.0	1676143522	-10.761984	I really think this writer doth protest too much.Yes, the base async interface is confusing and overly complex. It's a downside! As they note lots of people have stepped in to provide better helpers (...		aeturnum
34756737	12.246282	-7.640096	story	9.0	50.0	1676152098	11.933314	Scala Resurrection	https://degoes.net/articles/scala-resurrection	nmat
35011066	11.825624	-7.1831684	comment	9.0	26.0	1677858242	-8.998365	I sometimes think about what Python would be like if it were written today, with the hindsight of the last thirty years.Immutability would be the default, but mutability would be allowed, marked in so...		dkarl
35074606	11.884667	-7.0703287	comment	9.0	23.0	1678309002	-10.75182	Async Python is still confusing af - when do I need it, what happens under the hood, does it actually help with performance, sometimes the GIL comes into play and sometimes it doesn't, why do we ever ...		jstx1
39422916	11.978872	-7.737562	story	9.0	48.0	1708288412	10.440743	Haskell is Useless (2011) [video]	https://www.youtube.com/watch?v=iSmkqocn0oQ	behnamoh
39462443	11.6317425	-7.953347	comment	9.0	30.5	1708569026	10.210611	Eh, I still don't get it.Go seems too high level for low level work - use Rust, manage your own memory, no garbage collector.Go also seems too low level for high level work - use TypeScript with all the nifty ES6 features, powerful type system, exceptions, etc..Where does Go fit in here?		bottlepalm
39628064	11.922216	-7.4322577	story	9.0	88.0	1709813240	7.2725115	Total Functional Programming (2004) [pdf]	https://ncatlab.org/ufias2012/files/turner.pdf	leonidasv
39646749	11.644708	-7.327336	story	9.0	91.0	1709933550	9.2300415	Coroutines in JavaScript for web components	https://lorenzofox.dev/posts/component-as-infinite-loop/	HumanOstrich
36570416	12.321686	-7.0397363	comment	9.0	40.5	1688374277	13.190856	Why did Perl never maintain its popularity?		drumhead
36591313	11.727977	-7.398317	story	9.0	282.0	1688497903	-8.72062	Type system updates: moving from research into development	https://elixir-lang.org/blog/2023/06/22/type-system-updates-research-dev/	weatherlight
36685951	11.740472	-7.407161	comment	9.0	26.5	1689103093	-8.734767	I would love a Forth with a type system. I don't know if that is heretical, but I'd love a higher-order type system for when you are several meta-words deep. Disclaimer: I've only used Factor on Project Euler problems.		Pet_Ant
36743217	12.015277	-7.749321	comment	9.0	35.5	1689477594	10.402308	Is it worth learning Haskell with the aim of landing a job working in it?I'm not after FANG money but would love a job in a functional language.		xupybd
36743834	11.98899	-7.768269	comment	9.0	55.5	1689483704	10.403192	I spun up two Haskell teams at work, and now it composes about half of our codebases. Happy to answer questions about the experience.		ilikebits
36924922	11.660924	-7.9375043	comment	9.0	30.5	1690666624	10.224844	"Slightly OT: I like Go, but the ""-er"" convention, while useful, has always bothered me because of the following inconsistency, well illustrated by two examples from the article:    Writers write.
    ..."		jonahx
36998366	11.966288	-7.738999	story	9.0	98.0	1691147984	10.400646	Show HN: Custom Haskell handlers for Nginx	https://github.com/lyokha/nginx-haskell-module	lyokha
37139826	11.738194	-7.146707	comment	9.0	32.5	1692136857	-8.974801	This seems like maybe a right place to evangelize [1] the only hill I've decided to die on: the formatting of type annotations that use a colon in their syntax. Specifically, there should be an equal ...		agalunar
37216489	11.744998	-7.0195847	story	9.0	167.0	1692658739	8.08185	Inside the JVM: Arrays and how they differ from other objects	https://blogs.oracle.com/javamagazine/post/java-array-objects	ternaryoperator
37349906	12.215476	-7.552328	story	9.0	76.0	1693571174	-11.38892	Currying in Kotlin	https://towardsdev.com/currying-in-kotlin-9be88bcc930d	unripe_syntax
37359562	11.61757	-7.049128	comment	9.0	25.0	1693643703	-6.7440286	The whole article properly the best explanation of generators I have come across. This quote stuck out:> Generators are a special type of function that can return multiple pieces of data during its ex...		l5870uoo9y
37368512	11.801222	-7.390288	comment	9.0	26.0	1693727157	5.7051535	"I enjoy reading and writing ""Functional"" code in a language where the ergonomics lend themselves to functional semantics.
That swift code is painful to read.
I'll give some examples (from worst to bes..."		weatherlight
37500238	12.126236	-7.8709097	comment	9.0	25.5	1694631243	-3.2448697	I still don't know how category theory will help me as a programmer.I understand, and agree, that small functions, composed, are easier to understand and maintain, easier to port and easier to build u...		tarkin2
24450699	12.004868	-7.759896	comment	9.0	22.5	1599896866	10.430148	"Can people tell me what useful program were produced in Haskell ?
I know a few for Ocaml but I dont know much Haskell, so dont know yet any useful program written in Haskell.
The program I know for Oc..."		natertux
24474087	11.592675	-7.5253882	comment	9.0	39.5	1600111650	9.912674	If one of the purposes of relational databases is data modeling, I've always wondered why there aren't good semantics for sum types. The real world is full of them, but databases can't express them. W...		throwaway894345
24491887	11.986808	-7.652854	story	9.0	50.0	1600258878	10.336955	Contravariant Functors Are Weird	https://sanj.ink/posts/2020-06-13-contravariant-functors-are-weird.html	gbrown_
24507340	11.965061	-7.345532	comment	9.0	43.5	1600363371	7.06858	I've read quite a few articles about DOD. I get how DOD is great but there are reasons OOP is still around (surely?)I suppose I'm still hung up on, what are the benefits of OOP that I'm missing?It see...		blovescoffee
24537877	11.606851	-7.9562964	comment	9.0	29.0	1600639972	10.225598	> You can put junior programmers on something and they'll probably get it more or less right.I see junior programmers screw up Go catastrophically. Thinking green threads are magical, they forget the ...		kccqzy
24540937	11.88825	-7.4893517	story	9.0	136.0	1600675695	10.418656	Haskell language features and standard libraries in pure Python	https://github.com/billpmurphy/hask	asib
24541775	11.999217	-7.7318964	comment	9.0	25.5	1600684402	10.416777	"The syntax to update records doesn't seem particularly nice:    e{lbl = val}

Though this has been a part of haskell for a while it seems:> Note: e{lbl = val} is the syntax of a standard H98 record up..."		pbiggar
24608698	11.761665	-7.388739	comment	9.0	35.5	1601229866	-8.86744	It’s honestly embarrassing to hear all the worthless arguments against types.The cognitive load of a dynamically typed (or unityped, or “untyped” or whatever) language is massive, yet the common argum...		cannabis_sam
24837640	12.421711	-7.3383613	story	9.0	224.0	1603203903	7.1364565	A brief introduction to BEAM	https://blog.erlang.org/a-brief-BEAM-primer/	codeadict
24844853	11.666299	-7.055107	comment	9.0	34.0	1603256260	-7.0053487	While we're all here.. Fellow JS developers, please, for the love of all that's good, stop using const for everything. If you want a strongly typed language with immutable variables, just go use anoth...		russellbeattie
24916683	11.7119875	-7.0240726	story	9.0	29.0	1603875363	-6.774413	Emerging JavaScript pattern: multiple return values	https://loige.co/emerging-javascript-pattern-multiple-return-values	loige
25005525	11.980308	-7.722867	story	9.0	218.0	1604645031	10.416919	Real World Haskell	https://mmhaskell.com/real-world	Fiveplus
25050893	11.851039	-7.1706195	story	9.0	59.0	1605038011	6.0538487	When Objects Become Extensions of You	https://thereader.mitpress.mit.edu/when-objects-become-extensions-of-you/	anarbadalov
25166175	11.721672	-7.114417	comment	9.0	36.0	1605913426	9.067852	One rule that should be added here, but it might be a bit late:* choose a language that supports async operations so that you aren't waiting for external webrequests or database calls to get back to l...		t-writescode
25222297	11.731184	-7.045187	comment	9.0	41.0	1606414534	8.348304	Let me put my perspective on this.As it happens, I have developed one algorithmic, low latency trading system in Common Lisp / ANSI C, and then was asked to rewrite it in Java which I did.It actually ...		lmilcin
25407693	11.797747	-7.075895	comment	9.0	43.5	1607877006	8.118354	"This is one vector for complexity, to be sure.  Saying ""no"" to a feature that is unnecessary, foists a lot of complexity on a system, or has a low power to weight ratio is one of the best skills a sen..."		recursivedoubts
38821840	11.637149	-7.9448376	story	9.0	23.0	1703997292	10.1383295	The Downsides of Go's Goroutines	https://blog.djha.skin/blog/the-down-sides-of-gos-goroutines/	djha-skin
38838161	11.62715	-7.91362	story	9.0	58.0	1704170175	10.198071	Hamlet: A type-safe Haml template engine for Go	https://github.com/stackus/hamlet	stackus
38873511	11.734525	-7.855559	comment	9.0	42.0	1704409265	10.283735	"(rant)That's nice, but also rather self-congratulatory.
I was expecting some kind of acknowledgment of the deeper issues in the language.
But perhaps that's the central issue, that the language is per..."		cangeroo
38949842	11.594378	-7.253861	comment	9.0	24.5	1704965463	9.236302	Would someone be kind enough to explain how a C program is structured to do asynchronous work with epoll without the use of async/await? Do you need to keep custom structures for each network socket that maintains a snapshot of the state of how things are progressing?		commandersaki
39029908	11.626344	-7.3231664	story	9.0	35.0	1705508964	-8.783855	Unusual basis types in programming languages	https://buttondown.email/hillelwayne/archive/unusual-basis-types-in-programming-languages/	BerislavLopac
32632076	11.854496	-7.3572984	comment	9.0	36.5	1661720909	6.954694	"Haven't classes -- as things which house methods and fields together -- gone out of fashion? I think the same thing has happened with inheritance.The ontological problem of ""does the knife cut the cuc..."		ogogmad
32896529	12.013648	-7.52137	comment	9.0	55.0	1663583640	10.413446	This is just an angry rant by someone describing themselves as a “functional programming enthusiast”. The post is only tangentially about Java and is really about a framework called Quarkus.If there’s...		zcw100
33030611	11.652434	-7.9044557	story	9.0	141.0	1664509093	10.173064	Go Micro: a standard library for distributed systems development	https://github.com/go-micro/go-micro	Kinrany
31870955	11.860616	-7.3634477	story	9.0	130.0	1656114490	7.0613947	The Composition over Inheritance Principle (2020)	https://python-patterns.guide/gang-of-four/composition-over-inheritance/	radus
31871864	11.869465	-7.093485	comment	9.0	49.0	1656123633	-8.457509	Why even use a class in any of those cases? The if-statement example demonstrates precisely how OO classes can make code more complicated than it needs to be.Just make a log() function that takes a ta...		ravenstine
31873827	11.905515	-7.2169104	comment	9.0	25.5	1656150116	7.1379924	I am using a more data oriented approach [1],even if I mainly work with C# which is an object oriented language.I use inheritance scarcely and I do not use encapsulation.I separate the code from the d...		DeathArrow
31906510	11.98278	-7.7336335	story	9.0	148.0	1656416980	10.417471	Haskell in Production: Channable	https://serokell.io/blog/haskell-in-production-channable	aroccoli
32028733	11.689128	-7.4341574	comment	9.0	43.5	1657320567	9.66773	This is like the most cherry-picked example that could've been chosen. Java can't do this because the primitive types are not objects. Mentioning the performance of this is hilarious because 1. it's D...		saagarjha
32053512	12.027426	-7.817381	story	9.0	42.0	1657527030	10.426702	Monads are a class of hard drugs	http://ix.io/443i/html	memorable
32056008	12.020111	-7.802386	comment	9.0	23.5	1657546964	10.422758	So monads are from functional programming, right? 10 years or so ago they were all the hype on here. I tried to follow so many Youtube (and written) tutorials on Monads, but I never understood.Maybe I should try again not that I'm a bit older and more experienced...		neals
32112077	12.326785	-7.2964587	story	9.0	133.0	1657914797	7.08351	State of the SqueakPhone	https://syndicate-lang.org/journal/2022/06/03/phone-progress	tonyg
32496289	11.64198	-7.9750957	comment	9.0	36.0	1660743947	10.274179	It's always important to ask yourself what concepts you knew before you learned a new technology X. For someone who knows C++ and Java there are no new concepts in Go, so the tour of Go should suffice...		kubb
22069382	11.801066	-7.0474467	comment	9.0	50.0	1579211511	8.411953	Java finally gets what's been available in Scala (case classes), C# (structs or maybe properties), Kotlin (data classes) and others for a very long time .. so long we already have tools like Immutable...		djsumdog
22137120	11.970071	-7.7249756	story	9.0	225.0	1579864511	10.396229	Haskell Problems for a New Decade	http://www.stephendiehl.com/posts/decade.html	psibi
22150395	11.609471	-7.8730373	story	9.0	229.0	1580013107	10.082256	Make resilient Go servers using timeouts, deadlines and context cancellation	https://ieftimov.com/post/make-resilient-golang-net-http-servers-using-timeouts-deadlines-context-cancellation/	signa11
22291150	11.631771	-7.9505987	story	9.0	113.0	1581355609	10.151495	Fyne: Native Mobile UX in Go	https://github.com/fyne-io/fyne/releases/tag/v1.2.0	wwarner
23505333	12.155335	-7.5197873	story	10.0	138.0	1592007254	-10.587538	The Early History of F# [pdf]	https://dl.acm.org/doi/pdf/10.1145/3386325	strangecasts
23562897	11.65739	-7.975308	story	10.0	81.0	1592487004	10.215312	A concise guide to the latest Go generics draft design	https://pmihaylov.com/go-generics-draft-design/	pmihaylov
23586051	11.992884	-7.7528973	story	10.0	16.0	1592679895	10.42578	Ask HN: Is Haskell Worth Learning?		dhkts1
23630701	12.304859	-7.0537043	comment	10.0	66.5	1593018283	13.161083	huh. I spent a couple years writing perl professionally, I guess that was around 2006, and I couldn't agree less. Its object system is so bizarre compared to any other language - it's like it doesn't ...		jes5199
23795259	11.95383	-7.6594067	comment	10.0	72.0	1594408887	10.431743	Ocaml use Hindley-Milner type inference. I was taught programming with it and ended up deeply spoiled.I could not understand why most static language required writing so many types that were easy to d...		nestorD
23818526	11.981767	-7.5016103	story	10.0	17.0	1594629358	7.255852	Ask HN: How did you learn functional programming?		xupybd
23926847	11.951751	-7.4720273	comment	10.0	40.0	1595509106	7.22704	Did anyone else notice that the biggest non-academic supporters of functional programming seem to be financial institutions?Is it due to the nature of the problem space? Is it because finance people tend to be more analytical? Something else?		scribu
23938091	11.979166	-7.221048	comment	10.0	64.5	1595589254	-9.331146	I wish it would be possible to have better studies for that. I believe that static typing has huge benefits as software scales. I also believe that the type system of TypeScript is actually stronger i...		quonn
23999729	11.972204	-7.21853	comment	10.0	29.5	1596125122	9.157392	Curious - did anyone look at the first example and not immediately see that the requests would occur in series? IMO the “await” actually makes this much more explicit.		jakear
24196836	11.964159	-7.6796913	story	10.0	328.0	1597743929	7.729541	Haskell Mini-Patterns Handbook	https://kowainik.github.io/posts/haskell-mini-patterns	gluegadget
24281677	12.068724	-7.8408513	comment	10.0	43.0	1598443891	10.430638	Each year I think wether should I learn OCaml or not. What is the current state of multi-thread OCaml? Is that a game changer or just a cool feature? I can't understand why OCaml doesn't have mass adoption.		G4BB3R
24323564	11.634965	-7.932041	story	10.0	70.0	1598802001	10.176233	An interesting mistake with Go's context package	https://utcc.utoronto.ca/~cks/space/blog/programming/GoContextValueMistake	goranmoomin
24332424	12.275484	-7.019883	comment	10.0	46.0	1598887675	13.070202	"What a year!Python 2.x dying; Python 3 becoming the norm; ""Perl6"" renamed to raku & Perl5 thinking of bumping to v7... and now Ruby going all the way to v3.0!"		mfontani
24343829	11.972802	-7.5598645	comment	10.0	42.5	1598979274	7.2794347	> 10x is often cited as the magic number beyond which technology is good enough to overcome network effects. I'm personally convinced that functional programming is 10x better than any other paradigm ...		peterlk
24398469	11.704053	-7.4648495	story	10.0	83.0	1599475969	12.76717	Pony, Actors, Causality, Types, and Garbage Collection	https://www.infoq.com/presentations/pony-types-garbage-collection/	pjmlp
19978470	11.6678505	-7.9411945	comment	10.0	35.0	1558507720	10.215292	I am about to learn a new programming language and I decided against Go just because of this fact. I do not trust Google and reading this article just makes clear how critical the state of the languag...		Kovah
20184373	12.10636	-7.865074	story	10.0	128.0	1560530513	10.462539	OCaml 4.08	https://inbox.ocaml.org/caml-list/E2C57A5B-D770-426C-8DAF-514B6A369D2A@inria.fr/	mseri
20213943	11.593081	-7.9132795	story	10.0	273.0	1560870609	10.141606	Simple techniques to optimise Go programs	https://stephen.sh/posts/quick-go-performance-improvements	sjwhitworth
20217979	11.779844	-7.377866	story	10.0	182.0	1560889326	8.141492	Generalized Algebraic Data Types: A Primer	https://sketch.sh/s/yH0MJiujNSiofDWOU85loX/	tosh
20237705	12.101522	-7.164223	comment	10.0	68.5	1561067088	12.383133	For whatever it's worth and without wanting to start a language war (I like Python just fine), I think Python/Ruby-style typing is a false economy for prototyping. There are a lot of things that make ...		tptacek
20380808	12.342252	-7.0343337	story	10.0	73.0	1562572887	13.199217	Leaving irc.perl.org	https://sungo.wtf/2019/07/05/leaving-irc.perl.org.html	mdom
20401893	11.793597	-7.3581743	comment	10.0	52.0	1562766531	9.192388	Genuine question: can anyone comment on which alternatives to async/await were considered? And if so why they were rejected?It’s proliferation puzzles me: c#, python, node, rust and no doubt others. Y...		spinningslate
20464463	11.645834	-7.074914	comment	10.0	46.5	1563400675	-10.475939	"Despite controversy, walrus operator is going to be like f-strings. Before: ""Why do we need another way to..."" After: ""Hey this is great"".People are wtf-ing a bit about the positional-only parameters,..."		kbd
20563907	11.752794	-7.1545486	comment	10.0	34.0	1564486877	6.7066665	Now if we could just get pattern matching[1] and optional chaining[2], that would really elevate things.[1] https://github.com/tc39/proposal-pattern-matching[2] https://github.com/tc39/proposal-optional-chaining		halfmatthalfcat
20578392	11.731012	-7.5608225	comment	10.0	47.5	1564606208	10.094618	> because all existing implementations are badI'm also not sure why in OOP-land, generics are this crazy experimental weird feature, when in functional languages, people figured out how to implement p...		grumdan
20613090	12.403042	-7.0618424	story	10.0	15.0	1565003676	13.1776495	Ask HN: Is Perl 5 or Perl 6 still worth learning in 2019?		grepgeek
20654652	11.972357	-7.6849513	comment	10.0	61.0	1565360958	10.351649	So, I know literally nothing about Haskell, and I would rate my knowledge of functional programming theory as 'beginner' at best, but I still get baffled every time when reading Haskell code that impl...		w0utert
20682423	11.986108	-7.20904	story	10.0	60.0	1565665217	9.136004	How to chain multiple functions in JavaScript properly with async/await	https://nikodunk.com/how-to-chain-functions-with-await-async/	nikodunk
20781185	11.860173	-7.3507924	comment	10.0	33.0	1566586446	7.0707383	I’ve come to loathe inheritance in OOP, favoring composition instead.The idea of creating abstract base classes makes sense in theory, but this eventually leads to problems regarding inherited behavior (i.e. debugging unexpected behavior of a “duck typed” interface up the inheritance chain)		save_ferris
20781803	11.88876	-7.34556	comment	10.0	55.0	1566589483	7.09121	Have you seen bad OOP code? It's an unreadable mess of ObjectManagerFactory classes where everyone mutates everything.Have you seen bad functional code? It's an unreadable mess of monads, flatmaps and...		jehna1
13651137	11.791934	-7.2327747	comment	10.0	29.0	1487156587	9.141694	As a curious and perhaps naive aside, I've been wondering why the programmer should need to care about asynchronous execution of code at all. Can't it all be abstracted under a procedural layer and le...		increment_i
13730826	11.871846	-7.2878532	comment	10.0	28.5	1488015420	10.298165	"My question is this: What happened to all the duck-typing evangelism? ""If it walks like a duck and quacks like a duck, it is a duck"", ""static typing only catches trivial errors"", and so on."		insertnickname
14026360	12.121406	-7.8395705	story	10.0	267.0	1491248409	-3.1747925	Category Theory for Programmers (2014)	https://bartoszmilewski.com/2014/10/28/category-theory-for-programmers-the-preface/	pkd
14031338	12.259785	-7.5546484	story	10.0	159.0	1491303875	-11.366199	Kotlin/Native Tech Preview: Kotlin without a VM	https://blog.jetbrains.com/kotlin/2017/04/kotlinnative-tech-preview-kotlin-without-a-vm/	essh
14079998	11.685398	-7.927612	story	10.0	139.0	1491842233	10.170324	Web Development in Go	https://kev.inburke.com/kevin/go-web-development/?hn	kevinburke
14126629	12.004672	-7.8033404	story	10.0	156.0	1492365101	10.390572	A monoid is a category, a category is a monad, a monad is a monoid	https://graphicallinearalgebra.net/2017/04/16/a-monoid-is-a-category-a-category-is-a-monad-a-monad-is-a-monoid/	graphlinalg
14180497	11.610078	-7.918874	story	10.0	143.0	1492982056	10.204833	A Foray into Go Assembly Programming	https://blog.sgmansfield.com/2017/04/a-foray-into-go-assembly-programming/	sgmansfield
14214364	11.893308	-7.0730343	comment	10.0	47.5	1493324502	-10.746981	> we make heavy use of asyncio because it’s more performantmore performant than....what exactly?   If I need to load 1000 rows from a database and splash them on a webpage, will my response time go fr...		zzzeek
14235500	12.200612	-7.3286595	comment	10.0	58.5	1493611621	12.51882	"My definition of an object is ""an ADT that gets to 'decide', using private runtime state, what to do in response to any/all attempts to interact with it.""Which makes for a very simple test: if somethi..."		derefr
14248034	11.985306	-7.4885836	comment	10.0	41.0	1493743702	7.318758	Yeah, but it's goddamned ugly and unreadable. It considers repetition to be a design feature. If you're going to sell people on the benefits of functional programming, I think you should really be pushing more for SML or Haskell or something like that.		c3534l
14266895	11.822781	-7.126497	comment	10.0	34.0	1493919385	8.116483	I am a C# developer.  My thoughts:- I love that they are adding REPL. I really wish C# had this.  I use IPython all the time for Python.  It is very helpful to mock something up quickly or try out dif...		pwaivers
14267055	12.035388	-7.5181274	comment	10.0	37.0	1493920303	7.275063	It is worth learning, but the chances of using it for more than toy scripts are slim.  Unless your workplace has already bought into it, you'll find it a hard sell.  There are several other functional...		kangdolit
14432912	11.964775	-7.714441	story	10.0	161.0	1495940200	10.421363	Realizing Hackett, a metaprogrammable Haskell	https://lexi-lambda.github.io/blog/2017/05/27/realizing-hackett-a-metaprogrammable-haskell/	sndean
14506287	12.155122	-7.502222	story	10.0	130.0	1496842498	-10.60109	Getting started with the F# and .Net ecosystem	http://www.prigrammer.com/?p=363	DanielBMarkham
14674128	11.862587	-7.19444	comment	10.0	104.5	1498864405	-8.988889	> Using a typed language in our frontend has already paid dividends: our code has fewer type-related bugs, we are more confident making large refactors, and our inline documentation is focused around ...		tqkxzugoaupvwqr
30745047	12.28795	-7.5150023	story	10.0	56.0	1647799724	12.829271	Ask HN: Are you using actors in production? Why/Why not?		lostintangent
31160830	12.47219	-7.1424975	comment	10.0	32.0	1650921853	-9.5814905	"Setting aside all the dynamic stuff that you can't statically check, what does Ruby offer fhat makes it so ""pleasant"" to use?I'm trying to understand what a statically typed Ruby could bring to the table."		valcron1000
31207706	12.07585	-7.849509	comment	10.0	33.0	1651251611	10.395205	What is OCaml mostly used for? Like Ada for aerospace or Erlang for concurrency, does OCaml has a niche like that?		_benj
31388883	12.241755	-7.498069	story	10.0	48.0	1652633954	-11.4686985	Toying with Kotlin's Context Receivers	https://blog.frankel.ch/kotlin-context-receivers/	nfrankel
31405890	11.665353	-7.9246836	story	10.0	167.0	1652760016	10.17572	Wazero: The zero dependency WebAssembly runtime for Go developers	https://github.com/tetratelabs/wazero	ArdelleF
31419608	11.616704	-7.7844806	comment	10.0	29.0	1652852793	10.216208	"It's astonishing how hard ""modern"" PL find it to implement parametric polymorphism. Java got it wrong and C# did at least have a hard time. I don't want to talk about what C++ did. Go needed years for..."		choeger
31432974	11.653575	-7.9422917	comment	10.0	33.5	1652958479	10.234186	I am surpsised by the fact that in 2022 go developers are rediscovering and being fascinated by generics when any general introductory programming education with a type safe language should have expos...		Traubenfuchs
31495952	12.502519	-7.4328337	story	10.0	14.0	1653417750	12.906773	Ask HN: Elixir as a First Language?		freedomben
31519370	11.7271595	-7.405685	story	10.0	47.0	1653578167	-8.708185	Why Infer Types?	https://npf.io/2022/05/why-infer/	ingve
31649617	11.59126	-7.8793383	story	10.0	79.0	1654573117	10.076347	Performance of coroutine-style lexers in Go	https://eli.thegreenplace.net/2022/performance-of-coroutine-style-lexers-in-go/	picture
31713360	11.642578	-7.915223	story	10.0	118.0	1655028603	10.211005	The Y Combinator in Go with generics	https://eli.thegreenplace.net/2022/the-y-combinator-in-go-with-generics/	mfrw
25465424	11.824395	-7.15306	comment	10.0	39.5	1608284264	-9.050077	> 90. Consider Static Analysis via typing to Obviate BugsPersonally I wouldn't recommend using typings (we've tried around 1 year ago for multiple greenfield services ~5k LOC each):- you will be bette...		matesz
25495140	12.377275	-7.0319476	comment	10.0	44.5	1608560394	12.394958	I'm glad to see they're picking up native type-hinting. I don't like many of the existing bolt-on type systems for Ruby and the whole thing feels so much more kosher when it's official.The concurrency...		atomicnumber3
25715689	11.731804	-7.129073	comment	10.0	29.0	1610293110	9.09654	I think this is neat but I'm not sure it's the best way to go about things.> all(map(func3, filter(func2, map(func1, zip(a, b)))))> a.zip(b).map(func1).filter(func2).forall(func3)The original is indee...		pedrovhb
25727169	11.727061	-7.5179276	comment	10.0	84.0	1610362014	1.5252426	> Many programmers encounter statically typed languages like Java or C++ and find that the compiler feels like an annoyance. By contrast, Haskell’s static type system, in conjunction with compile-type...		jcelerier
25776076	12.139464	-7.0188975	comment	10.0	27.5	1610631304	13.143914	Over the years I have learned and dipped my toes in many programming languages, and I'd need some kind of reason to look into yet another language. What are Raku's main contributions to the programming language design space that I probably haven't seen elsewhere?		msvan
25805112	12.322475	-7.4512997	story	10.0	109.0	1610828246	12.717892	How Akka Cluster Works: Actors Living in a Cluster	https://www.lightbend.com/blog/how-akka-cluster-works-actors-living-in-a-cluster	andersson42
25862960	11.720407	-7.1614885	comment	10.0	58.0	1611257064	9.062453	Functional programming in Python is severely hampererd by Python's lambda keyword, which - simply put - sucks.		seertaak
25882843	12.06748	-7.1550336	comment	10.0	68.0	1611415478	8.154017	In principle I like Java but there are a few minor details that just make it not worth dealing with it. Getters and setters are incredibly annoying. There are lots of crazy things going on in the JEE ...		imtringued
26018649	11.664744	-7.940574	story	10.0	53.0	1612383914	10.216926	Go generics proposal moves to “likely accept”	https://github.com/golang/go/issues/43651#issuecomment-772720103	srathi
26030970	12.218532	-7.6271667	comment	10.0	51.0	1612480908	11.940253	Scala gets a lot of hate, but honestly it's a great language. As fast as Java with all the great tooling and ecosystem and compiler/IDE help, as concise as Python and just as usable for fast prototypi...		lihaoyi
26031316	11.845221	-7.2322254	comment	10.0	36.0	1612483710	-8.980633	I still can’t quite figure out why type hinting is such a sought after feature. Over the years I’ve worked with various programming languages and I can’t recall any instance where I wrote code that co...		IgorPartola
26051899	11.930178	-7.4431252	story	10.0	11.0	1612662702	7.2388916	Fun with a Functional Programming Interview Question	https://danielbmarkham.com/fun-with-an-interview-question/	amscotti
26101796	12.236412	-7.628553	comment	10.0	30.5	1613053699	11.943713	If I've said it once I've said it a thousand times: the day Scala kills sbt officially will be the day thousands of devs consider a return to it. Until then, I couldn't dare.		adenozine
26111786	11.599092	-7.4393916	comment	10.0	48.5	1613119804	9.175936	> People often see that there's some theoretical benefit of async and then they accept far less ergonomic coding styles and the additional bug classes that only happen on async due to accidental block...		lxpz
26203257	11.728986	-7.4070487	story	10.0	116.0	1613818775	-8.733979	Native Type Theory	https://golem.ph.utexas.edu/category/2021/02/native_type_theory.html	gbrown_
26286692	12.136664	-7.2147293	comment	10.0	33.0	1614448926	8.579309	"I'm a bit confused between there's a hugely popular place between inheritance-based entities and ECS (Entity-Component-System), which is what you could call a ""Entity-Component system) (notice spellin..."		Jare
26288955	11.782391	-7.3360004	comment	10.0	33.5	1614466709	-8.919923	While on the subject of static typing, is anyone aware of any good argument against it?		rualca
26301767	12.001732	-7.7458053	comment	10.0	29.0	1614598640	10.4156475	Personally, I've written zero lines of production Haskell code, and expect that this will still be true when I retire.  Despite that, learning Haskell was probably one of the best things that I've eve...		pliftkl
26325259	11.688249	-7.02744	story	10.0	125.0	1614750952	6.2565994	Python 3.10.0a6 is available, now with 100% more pattern matching	https://mail.python.org/archives/list/python-committers@python.org/message/VGZDQ5TFMSWEQZS6HNDLDJQ7GAASGUUB/	pansa2
26334535	12.139592	-7.881204	story	10.0	235.0	1614805543	-3.2187984	Emily Riehl is rewriting the foundations of higher category theory	https://www.quantamagazine.org/emily-riehl-conducts-the-mathematical-orchestra-from-the-middle-20200902/	guerrilla
35590883	11.737203	-7.035915	comment	10.0	31.5	1681659323	-8.341878	Closure was written in 2008. This rationale document is interesting because it promotes VMs as the way of the future. It is interesting to note that since 2008 the industry has gravitated much more back toward compiled systems.		djha-skin
35744052	12.263095	-7.271109	comment	10.0	34.5	1682701346	7.0727816	After a brief diversion with the Acme editor (a big part of Plan 9) and some modern Smalltalk environments (Squeak, Cuis, and Pharo), I can't help but feel like we are stuck in a very local optimum as...		JHonaker
35856654	11.734208	-7.1860633	story	10.0	47.0	1683502847	9.479582	LambdaMOO Takes a New Direction (1992)	https://www.cc.gatech.edu/classes/AY2001/cs6470_fall/LTAND.html	mooreds
35879235	11.683305	-7.9470124	story	10.0	14.0	1683660451	-8.869711	Show HN: Vector Data Marketplace for LLMs	https://www.embedding.store/	_vishalr
36180291	11.68652	-7.843463	story	10.0	16.0	1685824472	10.155309	Golang vs. Python: The Ultimate Battle in DevOps	https://andrewodendaal.com/golang-vs-python-the-ultimate-battle-in-devops/	aoms
36192240	11.793089	-7.3671775	comment	10.0	30.5	1685939028	9.498127	Here are some other features to make Java more modern:- Replace `System.out.println` with just `println`- Add operator overloading and subscript overloading for lists and maps- Add string templates wi...		armchairhacker
36383571	11.624404	-7.9337344	story	10.0	58.0	1687116777	10.158913	Spectral Contexts in Go	https://hypirion.com/musings/spectral-contexts-in-go	todsacerdoti
36483233	11.630294	-7.88866	comment	10.0	30.5	1687801954	10.12266	Why not use Go? They have one of the best networking stacks among language standard libraries, excellent support for low latency soft real-time concurrent operations, and single binary deployment is trivial.		melony
28745059	12.044848	-7.804101	story	10.0	76.0	1633343552	10.411164	Monads for Clojure Programmers	https://cuddly-octo-palm-tree.com/posts/2021-10-03-monads-clojure/	Terretta
28862611	11.651095	-7.9781117	story	10.0	85.0	1634208430	10.195907	Kyoto – Build Front End with Golang	https://kyoto.codes	yuriizinets
28911576	12.035492	-7.8191686	comment	10.0	26.5	1634590401	10.411163	Can anyone recommend a good guide to monads for people with a C/assembly background? I've always had trouble understanding functional programming topics until I could figure out how to implement them ...		sxp
29129020	11.689203	-7.1751556	story	10.0	68.0	1636194104	-0.780047	Class 1 / Class 2 Problems	https://kk.org/thetechnium/class-1-class-2-problems/	imartin2k
29444960	11.733848	-7.2882175	comment	10.0	35.5	1638657635	9.3123865	That’s what disappoints me in modern Java. There is practically no ifs. It makes it inaccessible to beginners on the project, and the streams are about twice as slow… just because devs think they are ...		laurent92
29518753	11.643879	-7.9632025	comment	10.0	29.0	1639201252	10.212721	"What's the intention behind this repo? Seems to me the effort could have been better redirected towards fixing the insecure library instead. I'm not familiar with the Go ecosystem - is there some ""Go more secure than Java"" culture of mocking there?"		lovelearning
29534730	11.836719	-7.383127	comment	10.0	32.5	1639351199	7.034688	"I think that composition is absolutely better than inheritance except for one thing: boilerplate. The issue is that boilerplate is kind of important.You don't want to litter your code with ""f150.ford...."		armchairhacker
29565652	11.661294	-7.8563027	comment	10.0	48.5	1639575319	10.187189	"Go with generics has definitely surpassed Python for me. Python is good for prototyping but the package management story and the ""feel"" of the language has ruined it for me. I used to love Python, unt..."		1_player
29591210	11.977523	-7.7412176	story	10.0	46.0	1639743637	10.415647	Is Haskell a good choice for software security?	https://typeable.io/blog/2021-05-31-haskell-security.html	kate_galkina
29625732	11.617829	-7.843332	comment	10.0	28.0	1640013040	10.159468	Go. Lower your pitchforks and hear me out:1. Sensible defaults, can go very with just the stdlib: no choice paralysis between frameworks, mental overhead of setting up a project or ecosystem fragments...		q3k
29649071	11.845627	-7.4841824	story	10.0	115.0	1640180175	10.347591	Parser Combinators in Haskell	https://serokell.io/blog/parser-combinators-in-haskell	aroccoli
34133673	11.7823105	-7.8564615	story	10.0	42.0	1672019330	10.273691	Staff+ engineers, how do you learn new technologies at a new company?		vincentchau
34209075	11.889878	-7.3105693	comment	10.0	38.0	1672597510	7.003997	It took me an embarrassing amount of time to fully grok what object oriented programming really means. It's one thing to have someone tell you what an object is, but it's another thing entirely to bui...		rolenthedeep
34454428	12.089244	-7.417183	comment	10.0	32.0	1674228782	9.649974	"They should have stuck with the F# proposal. The hack proposal just takes one more giant step toward turning JS into Perl.Hack proposal    value |> foo(%) for unary function calls,
    value |> foo(1,..."		hajile
34578411	11.978908	-7.7127943	story	10.0	153.0	1675078164	10.366623	Löb and möb: strange loops in Haskell (2015)	https://github.com/quchen/articles/blob/master/loeb-moeb.md	hjnkk
34619387	11.639642	-7.977015	comment	10.0	29.5	1675292730	10.236397	Only if you started programming in Go. I've never in my life heard of another project that by default seeds with 0. That's insane.EDIT: Okay, C and a bunch of other languages I don't use. Keep the roasts coming, guys. :D		pkulak
34619730	11.6676035	-7.9315047	comment	10.0	57.0	1675294394	10.187896	It is great that Go1.20 improves compile times after generics were added in Go1.18 [1]!Overall, I think adding generics to Go was a big mistake. It brings the following drawbacks:- Slower compile time...		valyala
34687786	12.007309	-7.7987413	comment	10.0	32.5	1675736652	10.454577	Imperative: modifying state is the point of a bit-flipping machine; get out of my way so I can have fun!OOP: OK, I mostly had enough fun, can we try to tame the bit-flipping chaos with real-world anal...		kazinator
35054514	11.69479	-7.23882	comment	10.0	46.0	1678191539	-8.857407	It's not just about these limitations.In order to be useful, type systems need to be simple, but there's no such restrictions on rules that govern our expectations of data correctness.OP is delusional...		crabbone
36588670	11.764685	-7.171541	comment	10.0	31.0	1688487348	-8.91709	Yeah, that one hasn't aged too well. We've all seen the backswing to statically typed languages. Yes, some of them (e.g. typescript) run on top of dynamic langs, or allow for VMs (hi, WASM!). Why? Bec...		llogiq
36645356	11.669077	-7.290224	story	10.0	107.0	1688830327	-8.799705	How to keep lambda calculus simple	https://hirrolot.github.io/posts/how-to-keep-lambda-calculus-simple.html	azhenley
36850500	12.167012	-7.7156115	comment	10.0	38.0	1690215988	-9.398483	Sorry in advance for bikeshedding.  This is a cool project and the name is clearly derived from js_of_ocaml, but does anyone know why js_of_ocaml ended up with such an awkward name in the first place?...		Athas
37108358	12.012805	-7.772923	comment	10.0	29.0	1691920655	10.435343	Are there any field where haskell is heavily used, beyond PL research ?I may start to look into it as some point for curiosity, but it would be nice if i'd knew that it would be at least a bit useful somewhere.		bsaul
37356909	11.967917	-7.229456	story	10.0	121.0	1693608121	9.188767	Internals of async / await in JavaScript	https://akashhamirwasia.com/blog/internals-of-async-await-in-javascript/	spacebuffer
37539402	11.5991125	-7.881658	comment	10.0	29.5	1694903173	10.092951	"`Executor.newVirtualThreadPerTaskExecutor` versus `go` really gets to the heart of why I think that Go developers aren't going to be switching.edit: Sorry, it's actually:    try (var executor = 
     ..."		insanitybit
24444661	11.775815	-7.8635845	comment	10.0	34.5	1599843134	12.698141	Can someone explain what Erlang offers that Go does not? Both have great support for concurrency, but Go has type checking and a more familiar syntax.		gautamcgoel
24530506	11.951222	-7.3507724	story	10.0	98.0	1600551758	7.044515	OOP: History, and challenges for the next fifty years (2013)	https://www.sciencedirect.com/science/article/pii/S0890540113000795	SiempreViernes
24607745	11.7787485	-7.3902044	comment	10.0	43.0	1601223361	-8.879111	I see a lot of comments on HN the last few years that just assume the dynamic vs static debate was settled at some time. It never ended. Static typing merely became trendy because dynamic typing was t...		deckard1
24686211	11.839432	-7.0894833	comment	10.0	40.0	1601892399	-1.8650672	"In general I agree that it's nice to make invalid states unrepresentable, but I'm not sure if I agree that this counts as a fundamental ""invalid state"". There is nothing about contracts which require ..."		judofyr
24688574	12.275917	-7.3162627	story	10.0	102.0	1601911576	7.0304875	The Absolute No-Frills Quite Ignorant Incomplete Beginner’s Guide to Smalltalk	https://deprogrammaticaipsum.com/the-absolute-no-frills-quite-ignorant-very-incomplete-and-certainly-flawed-beginners-guide-to-smalltalk/	zdw
24689230	11.792408	-7.3358483	comment	10.0	32.0	1601915358	-5.9557567	"I don't think these principles add up to something useful. It's not complete and I think some of the principles don't align that well to the problem space.The big one: ""Data is immutable"". The problem..."		jmull
24759649	11.963538	-7.70009	story	10.0	219.0	1602538245	10.409709	Towards Tactic Metaprogramming in Haskell	https://reasonablypolymorphic.com/blog/towards-tactics/index.html	headalgorithm
24817368	11.998338	-7.7382655	story	10.0	88.0	1603024600	10.436944	Haskell web framework IHP aims to make web development type-safe and easy	https://www.infoq.com/news/2020/07/ihp-haskell-web-framework/	_query
24839697	11.842059	-7.3060904	comment	10.0	34.5	1603213019	-8.948802	"I've been observing something akin to Zawinski's Law (""Every program attempts to expand until it can read mail. Those programs which cannot so expand are replaced by ones which can."") but for programm..."		munificent
24896541	11.662233	-7.025002	comment	10.0	60.0	1603722775	8.458542	"I think I actually saw these folks present at JavaOne a couple years ago? Either that or there's more than one shop branding itself as ""HFT"" that uses Java.I worked in the industry and it's always a l..."		cashewchoo
24987026	12.218899	-7.6442895	comment	10.0	29.0	1604474719	11.932897	In my company (10k+ devs) Scala seems to be losing steam. All the enthusiasts have moved to Go/Rust, while the pragmatics are staying in (moving back) in Java. No new major project is being built in Scala.Does anyone share this experience?		blackoil
25109900	11.852595	-7.2492027	story	10.0	102.0	1605519891	7.000298	Object-oriented programming: Some history, and challenges for the next 50 years [pdf]	http://web.cecs.pdx.edu/~black/publications/O-JDahl.pdf	ingve
25184294	11.991286	-7.734201	story	10.0	148.0	1606115937	10.418467	IHP – A Haskell web framework	https://github.com/digitallyinduced/ihp	laobiz
25217499	11.707967	-7.0986743	comment	10.0	101.5	1606373152	8.355092	I’ve seen this sentiment before and worked on both a “low latency Java” team and low latency C++ teams.I have some sympathy for the idea that the JVM is better since it means you won’t spend all your ...		vgatherps
38643843	12.316393	-7.1030445	story	10.0	109.0	1702573777	12.368605	Ruby's private keyword is weird	https://blog.jez.io/ruby-private/	jez
38706760	11.647482	-7.3374586	story	10.0	28.0	1703063724	-8.757702	Why if TYPE_CHECKING?	https://vickiboykis.com/2023/12/11/why-if-type_checking/	BerislavLopac
32987769	11.936311	-7.8412013	comment	10.0	42.5	1664223414	10.404043	Still yearning for an Ocaml-like language that uses the Go runtime.		throwamon
33018855	11.684516	-7.2598567	comment	10.0	43.0	1664449158	-8.801357	I am amused by this:> Worse, the early exposure to static methods will turn out to be a bad habit that must be later unlearned.I have been using Java since 1.0 and it is my default language. I am writ...		mcculley
32175706	11.8001795	-7.295739	story	10.0	18.0	1658376737	5.1829247	Why does nobody seem to know what imperative and declarative actually mean?	https://leebriggs.co.uk/blog/2022/07/20/nobody-knows-what-declarative-is	jaxxstorm
39578661	11.665466	-7.766641	comment	10.0	46.5	1709443592	10.131513	"Nice post.  Interesting that the fastest Java beats the fastest Go, though they are close:    AY fastest Go version 2.90s 36.2
    TW fastest Java version 0.953s 110

I would have expected Go to win.  That JVM works pretty good..."		jonahx
39580435	11.861043	-7.4498167	comment	10.0	34.0	1709469185	10.383824	In my experience, no one tends to see it as “too technical.” The typical (and imo obvious, logical) reason not to emphasize low-level details is because they’re implementation-specific, immediately ou...		zarathustreal
32321860	11.947158	-7.4193516	comment	10.0	53.0	1659461827	7.147239	I think the best reason to study FP is to get out of the OOP mindset.But ideally in the real world you don't go crazy with either.Objects are excellent for data but OOP is a mess for control flow.Immu...		eatonphil
32375609	12.271856	-7.545961	story	10.0	24.0	1659871206	-11.379114	Ask HN: Expert Advices for New Learners in Android Kotlin Development?		stArrow
22100369	12.322142	-7.258173	comment	10.0	42.0	1579540902	7.006083	Pharo always looks cute, but does anyone here use it, even for toy stuff?		zerr
22184919	11.672608	-7.93267	comment	10.0	38.0	1580326804	10.232412	To this day, I don't understand why Google made Go instead of working off of SML. While the go ecosystem is better due to the millions of man-hours poured into it, the language is inferior in every wa...		hajile
22195072	11.962998	-7.70875	story	10.0	112.0	1580415469	10.389034	A Pythonista's Review of Haskell	https://bytes.yingw787.com/posts/2020/01/30/a_review_of_haskell/	yingw787
19048335	12.061364	-7.1475606	comment	10.0	31.0	1548965580	-13.930198	I'm interested in the downsides of using Lombok, since the article seems to only focus on its positives and makes it seem like I should download it and start using it right now.Is there anyone here wi...		platelminto
19127877	12.098328	-7.841416	comment	10.0	51.5	1549809081	-3.2275908	"Knowing that a ring (in abstract algebra) is equivalently defined as ""a monoid object in the category of abelian groups"" is not going to help you with your first abstract algebra course. It makes thin..."		joppy
19186815	12.249356	-7.5468574	story	10.0	35.0	1550436623	-11.381746	Why a modern language like Kotlin makes a developer more productive	https://kotlinexpertise.com/kotlin-productivity/	pplonski86
19317443	11.649701	-7.026719	comment	10.0	49.0	1551863524	8.929687	> An alternative to the + operator is the pipe | operator, which is used for set union. This suggestion did not receive much support on Python-Ideas.That's disappointing. It's always been on my Python...		kbd
19519829	11.680832	-7.923692	story	10.0	95.0	1553845146	10.148435	Vugu: Experimental library for web UIs written in Go and targeting WebAssembly	https://github.com/vugu/vugu	bradpeabody
19615768	11.772772	-7.18206	comment	10.0	42.0	1554824511	1.9715304	What are suitable alternatives? Aren't they the best in class, regardless of how shitty that class is?		TheHypnotist
19778097	11.601825	-7.9541	story	10.0	157.0	1556544169	10.251907	Go 1.13: xerrors	https://crawshaw.io/blog/xerrors	henridf
19968842	11.9431925	-7.1734195	comment	10.0	35.0	1558433625	-9.879266	I'm not sure I understand why late binding and Alan Kay style messaging is desirable.If you send a message to something that's supposed to do a task, and it just ignores your message because it was th...		kstenerud
15833293	11.823115	-7.1694703	comment	10.0	30.5	1512240411	-9.016731	I would like to know if fellow HNers who regularly code in Python are using f-strings and type hints in your production code or otherwise. I often find myself inclined to use type hinting.		happy-go-lucky
15844593	11.636244	-7.8769	comment	10.0	64.0	1512401760	10.402653	I remember I stopped frequenting /r/programming when it became this weird Haskell echo chamber. It was a bubble where a small but vocal faction inside the community seemed to over react to any critici...		reggieband
15852517	12.006405	-7.464742	story	10.0	136.0	1512489679	-10.583175	Dependent Types for F#	https://jackfoxy.github.io/DependentTypes/	jackfoxy
15866764	11.652578	-7.124105	comment	10.0	32.5	1512609486	9.045915	"I think so, consider[1]:     var r = array.map(x => x*x).reduce((total, num) => total + num, 0);

vs its for-loop counterpart:    var r = 0.0;
    for (var j = 0; j < array.length;j++){
        var x ..."		dvt
15903257	12.285571	-7.311324	story	10.0	36.0	1513057501	7.078293	Learning Smalltalk is not a waste of time	https://medium.com/@richardeng/why-learning-smalltalk-can-never-be-a-waste-of-time-a45038b18427	mpweiher
15953629	11.693403	-7.9579463	story	10.0	116.0	1513619870	-8.835832	Colly – Scraping Framework for Golang	https://github.com/gocolly/colly	tampo9
16234067	12.245222	-7.567526	story	10.0	89.0	1516910535	-11.415866	Kotlin and linear programming	https://tomstechnicalblog.blogspot.com/2018/01/kotlinforoperationalplanningandoptimiza.html	andrewtorkbaker
16303711	12.347767	-7.493782	story	10.0	121.0	1517765904	10.333054	25 Days of ReasonML	https://medium.com/@lilactown/25-days-of-reasonml-a4b20a7e8c6	based2
16311900	12.261665	-7.559947	story	10.0	164.0	1517862937	-11.38637	Android KTX: Kotlin Development for Android	https://android-developers.googleblog.com/2018/02/introducing-android-ktx-even-sweeter.html	ingve
16348422	11.980543	-7.7393284	story	10.0	260.0	1518284521	10.409635	An opinionated guide to Haskell	https://lexi-lambda.github.io/blog/2018/02/10/an-opinionated-guide-to-haskell-in-2018/	kryptiskt
16419440	12.0107355	-7.7641826	comment	10.0	49.0	1519124944	10.404795	Monads make a lot of sense in a pure functional language like Haskell, because it allows you to program in an imperative style when you need it, and keep the rest of the program pure and functional.Th...		olavk
16472164	11.981287	-7.713284	comment	10.0	36.0	1519723744	10.364281	">the older FP guys have spent the last like 20-30 years going ""yo this is dope you guys should really be doing this"" and getting largely ignoredI've not been ignoring them. I tried at least three diff..."		simonh
16606175	11.794914	-7.377166	comment	10.0	50.5	1521278812	6.692397	"> you cannot use a square everywhere you can use a rectangle (for example, you can’t give it a different width and height)Can someone come up with a better example here? Intuitively, I would say, ""Yes..."		kqr
16672866	11.62614	-7.9564204	story	10.0	366.0	1521994927	10.2689495	Gokrazy: A pure-Go userland for Raspberry Pi 3 appliances	https://gokrazy.org/	type0
16721427	11.673889	-7.253902	story	10.0	80.0	1522465223	-8.795495	A circuit-like notation for lambda calculus (2015)	http://csvoss.github.io/projects/2015/11/08/lambda-circuitry.html	Ivoah
16882421	11.695153	-7.8325043	story	10.0	292.0	1524203381	-11.181346	Interactive Go programming with Jupyter	https://medium.com/@yunabe/interactive-go-programming-with-jupyter-93fbf089aff1	kawera
16970131	11.686789	-7.2735395	story	10.0	178.0	1525200517	-8.783547	Towards λ-calculus	http://lambdaway.free.fr/workshop/?view=lambdacode_inside_min	martyalain
17050174	11.758315	-7.349196	comment	10.0	33.0	1526066863	-8.805777	While I see a lot of examples of 1), I can't think of one for 2).  Which successful statically-typed language has that?		dudul
17510902	12.070023	-7.819325	story	10.0	269.0	1531350014	10.432894	Unix system programming in OCaml (2014)	https://ocaml.github.io/ocamlunix/index.html	jxub
17588067	11.845547	-7.376756	story	10.0	21.0	1532284154	-6.151074	All mainstream languages marketed as functional are losing market	https://www.benfrederickson.com/ranking-programming-languages-by-github-users/	nudpiedo
17818295	11.981202	-7.741032	story	10.0	186.0	1534942134	10.416398	Advice for Haskell beginners (2017)	http://www.haskellforall.com/2017/10/advice-for-haskell-beginners.html	sridca
17827010	12.042456	-7.7664943	comment	10.0	40.0	1535030517	10.434376	Can anyone explain why OCaml seems easier for people from non-FP backgrounds than Haskell?I tried Haskell and PureScript and didn't understand a thing.I tried OCaml and Reason and it felt rather easy to learn.		k__
21065728	11.93986	-7.1452374	comment	10.0	43.5	1569367041	9.072855	Data races are impossible in JavaScript because it's single-threaded. Race conditions are possible in any language that can do anything asynchronous, which is basically all of them. But the general be...		_bxg1
21066834	11.96851	-7.0363617	comment	10.0	32.5	1569376828	9.041149	"Here's an example of how you might get a race condition in JS:    async function deduct(amt) {
        var balance = await getBalance();
        if (balance >= amt)
            return await setBalance..."		millstone
21093129	11.903385	-7.417399	story	10.0	180.0	1569598799	7.2890024	The Science of Functional Programming [pdf]	https://github.com/winitzki/sofp/blob/master/sofp-src/sofp.pdf	adamnemecek
21119170	11.752007	-7.0395746	story	10.0	107.0	1569873737	5.2353325	Design patterns for hacking together prototypes: object dictionaries	http://web.eecs.utk.edu/~azh/blog/objectdictionaries.html	azhenley
21227999	12.305428	-7.0200663	comment	10.0	41.5	1570824708	13.182812	I'm amazed that Perl is still around. I personally find it the least readable language that I've ever used, and that includes a lot of languages. But some people really seem to love it, for reasons a bit beyond me.		Upvoter33
21230597	11.742138	-7.3773694	story	10.0	16.0	1570853160	-8.713248	Propositions Are Not Types (2018)	https://medium.com/@rplevy/propositions-are-not-types-naturalizing-information-content-in-computing-e51b94ad6674	shalabhc
21321791	11.987588	-7.74679	comment	10.0	59.5	1571737368	10.428427	There is a growing number of stories in the wild of companies who were burned for using Haskell.  Common patterns of struggle are emerging.  You aren't reading about them because people aren't eager t...		Dowwie
21322586	12.01057	-7.770863	comment	10.0	39.0	1571745219	10.43273	This is my experience with haskell:I work for a small data science consulting company whose major components of a machine learning pipeline were written in haskell. The company got bought by a large c...		dcl
21368310	11.745449	-7.3514357	comment	10.0	58.5	1572160949	8.890707	I grew up when OOP was the shit. Everyone wanted to add OOP to every language. C++, ObjC then Java.I absolutely hated, not because OOP is bad, but because they never really manage to blend it just rig...		noncoml
21383692	11.753638	-7.4000025	story	10.0	60.0	1572314917	-8.714063	Moving Beyond Types (2017)	https://hypothesis.works/articles/types-and-properties/	pmoriarty
21431137	11.929121	-7.2593055	comment	10.0	28.5	1572740938	-6.870719	Yeah okay. Then why does nobody use it? Even languages like Elm ditched it for easier to understand concepts.Let's face it. FRP kinda sucks. It's awkward as hell to use and takes way to many brain-cel...		pubby
21480926	11.938172	-7.4456453	story	10.0	102.0	1573205306	7.27576	Why functional programming matters (1990) [pdf]	https://www.cs.kent.ac.uk/people/staff/dat/miranda/whyfp90.pdf	palerdot
21499237	11.840464	-7.380664	comment	10.0	32.0	1573409389	7.3038006	Is there a language that leans heavily towards immutable data, but steers clear of the, shall we say, dorkier side of functional programming?		tobr
39253825	11.665763	-7.3416834	comment	10.0	43.0	1707077015	-8.79993	No, compiling is proving, not testing. This is fundamentally different. Testing can only demonstrate the correctness for the data being tested with (and for the execution paths exercised). Compiling p...		layer8
17942112	11.772728	-7.409167	story	10.0	170.0	1536431747	8.094961	The algebra and calculus of algebraic data types	https://codewords.recurse.com/issues/three/algebra-and-calculus-of-algebraic-data-types	alex_hirner
18526938	11.940689	-7.3733788	comment	10.0	46.0	1543155287	7.134409	I'm always confused when people criticize OOP, because most of the time the criticisms they use are just plain bad programming. Or they're using hyperbole that isn't really useful.You want to know why...		mabbo
18561908	11.670105	-7.9694467	comment	10.0	57.0	1543512549	10.224899	"I tried Go a while ago.
I was hooked by the performance , the community around it and vendors support ( AWS , Heroku , GCloud etc...) but I got quickly fed up by the awkward package management system,..."		asien
18707863	11.642198	-7.13868	comment	10.0	49.0	1545150707	-8.907947	It's funny how far off the author was, because there are genuine things to complain about with python, though they may not be exclusive to python.I regularly wish python required some sort type indica...		fhood
18716705	11.648467	-7.8737144	comment	10.0	36.5	1545236488	10.226309	I really want to get into Go, I like that it's opinionated, I like that it's compiled, I like that it's garbage-collected, I like that coroutines are built-in.My primary use case is scientific computi...		plg
18804522	11.697502	-7.023722	comment	10.0	29.0	1546409799	-8.823174	"It would be interesting if programmers took ""sketching"" to be a valuable and necessary part of programming. It's common practice for painters to make a pencil draft first. It's common in industrial de..."		markmiro
29925513	11.857992	-7.398945	story	10.0	117.0	1642102151	7.2778316	Provably space-efficient parallel functional programming	https://blog.sigplan.org/2022/01/13/provably-space-efficient-parallel-functional-programming/	matt_d
30011998	11.899385	-7.3950033	story	10.0	69.0	1642700229	7.280755	Awesome Functional Programming	https://github.com/xgrommx/awesome-functional-programming	pretext
30022185	12.444083	-7.091041	story	10.0	22.0	1642765363	7.2059093	Ask HN: Is Ruby on rails worth it to learn in 2022?		ahmaman
30214304	11.626851	-7.19861	comment	10.0	37.5	1644013884	7.232552	Composability.some_array.do_thing().do_another_thing().do_something_else()versusdo_something_else(do_another_thing(do_thing(some_array)))Note the first example could be an example of chaining - where ...		mmahemoff
30721964	11.788666	-7.1281824	story	10.0	68.0	1647610200	-8.977515	Python 3 Types in the Wild	https://neverworkintheory.org/2022/03/18/python-3-types-in-the-wild.html	zdw
12653438	11.611981	-7.925581	story	10.0	162.0	1475768923	10.204286	Gorram: go run for any go function	https://github.com/natefinch/gorram#gorram-	ingve
12830719	11.923403	-7.423491	story	10.0	56.0	1477845732	7.2643237	Functional Programs Are Imperative Pumpkins	https://blog.eventsourcing.com/your-functional-programs-are-imperative-pumpkins-d722ec1358b7	yrashk
12953756	11.877239	-7.382841	comment	10.0	31.5	1479160861	-5.9420395	Does anybody get anything from his writing? I have seen several posts of his here and they all are either trivial and/or give a fancy name to some standard coding construct. I think what he is describ...		maxxxxx
12993232	11.676593	-7.8582835	comment	10.0	35.5	1479559215	10.156741	"Every single ""Why we switched from Node.js to Go"" article I've ever read is rooted in misunderstanding of Node.js - This one is no exception. The problem was that the codebase was bloated and probably..."		jondubois
13006845	11.919606	-7.4333572	comment	10.0	51.5	1479747314	7.3606777	Ask five programmers to define functional programming, get fifteen different answers.		grabcocque
13071868	11.800472	-7.5429225	story	10.0	236.0	1480522307	10.398239	Towards Idris Version 1.0	http://www.idris-lang.org/towards-version-1-0/	yomritoyj
13153083	11.836989	-7.600745	comment	10.0	30.5	1481489077	10.047863	> Definitions are not hard, there is just too many of them.Perhaps I'm missing the point, but I'm really skeptical that rote memorization of definitions is a sensible solution to this problem.> For ex...		conistonwater
13251889	11.934566	-7.7071314	story	10.0	123.0	1482618577	10.374693	QuickCheck: A Lightweight Tool for Random Testing of Haskell Programs (2000) [pdf]	http://www.cs.tufts.edu/~nr/cs257/archive/john-hughes/quick.pdf	tosh
13256092	11.961704	-7.724336	story	10.0	263.0	1482710079	10.41628	Reflecting on Haskell in 2016	http://www.stephendiehl.com/posts/haskell_2017.html	psibi
13275288	11.987255	-7.739765	story	10.0	92.0	1482978234	10.410008	Haskell vs. Ada vs. C++ vs. Awk vs (1994) [pdf]	http://haskell.cs.yale.edu/wp-content/uploads/2011/03/HaskellVsAda-NSWC.pdf	tosh
13305837	12.145113	-7.8884206	comment	10.0	33.5	1483405686	-3.1726134	"Why do mathematicians use phrases such as ""relatively little mathematical background"" or ""introduction to.."" when they assume previous knowledge? I find that really annoying and a turn off from  readi..."		keyboardwriter
13406930	11.89638	-7.532899	comment	10.0	33.0	1484521272	10.480136	Another great-looking book on making dynamic languages.  There's been some good ones recently, and this one looks like another good one covering how to make a basic, interpreted language.Some of us ha...		jnbiche
13471039	11.904287	-7.572259	comment	10.0	56.5	1485263752	10.274811	>It takes months of steady investment (and yes, frustration), but the payoffs are spectacular.This was the exact same thing I kept reading back when functional programming was becoming in vogue - peop...		rubber_duck
27640953	11.776769	-7.3462615	comment	10.0	86.5	1624706353	-8.900658	From the Twitter link:> IME, people in dynamic languages almost never program this way, though—they prefer to use validation and some form of shotgun parsing. My guess as to why? Writing that kind of ...		seanwilson
27906752	11.7016	-7.0817842	story	10.0	113.0	1626877735	-8.832767	Namedtuple in a Post-Dataclasses World	https://death.andgravity.com/namedtuples	genericlemon24
27994866	11.75955	-7.310903	story	10.0	93.0	1627554873	-3.3675904	Morloc: Foreign languages unified under common functional type system	https://github.com/morloc-project/morloc	agentofuser
12092903	11.979452	-7.7335806	comment	10.0	31.0	1468495579	10.420958	"If we're talking about high reliability code, one thing claimed about Haskell, is ""if it compiles, it has no bugs"".How close is it to the truth ? And how close are we to having that kind of capability..."		petra
12109091	12.169013	-7.4597135	comment	10.0	34.5	1468732153	12.835174	"""actors are called ‘grains’,""If you can write a sentence ""X are called Y"", and X is more well-known, drop Y.""You can then send messages to the grain by creating a proxy object, and calling the methods..."		refulgentis
12133988	11.967311	-7.0205646	story	10.0	11.0	1469065247	8.9538765	Ask HN: Is callback hell exaggerated?		tonyle
12154484	12.278559	-7.3092093	story	10.0	115.0	1469388941	7.1073933	How learning Smalltalk can make you a better developer	http://techbeacon.com/how-learning-smalltalk-can-make-you-better-developer	horrido
12154766	11.885014	-7.3508525	comment	10.0	64.0	1469392627	6.9711866	Programming paradigms are a lot like political parties -- they tend to lump a lot of disparate things together with a weakly uniting theme. You don't need inheritance for encapsulation to be useful, f...		overgard
12170086	12.217515	-7.665999	story	10.0	82.0	1469585850	10.390172	Compile OCaml to JavaScript, use ReactJS, bindings to ReactJS, several examples	https://github.com/fxfactorial/ocaml-reactjs	e_d_g_a_r
12215033	11.936809	-7.4908724	comment	10.0	34.5	1470189613	7.3479505	While the article is particularly focused on concurrency, I think that there's a larger takeaway: namely, that language features are paraded around as, essentially, features of the software that's wri...		bertiewhykovich
12424421	11.677151	-7.9376903	story	10.0	114.0	1472998328	10.200577	Dependency graphs of Go web frameworks	https://github.com/groob/goviz-frameworks	markkit
35192017	11.915206	-7.6186814	comment	10.0	35.5	1679019181	10.4137335	"I've noticed what I'd term a ""post-modern"" sensibility towards code quality, where some of the often cited tenets of good code are being critiqued or questioned. Stuff like yes, you can have super lar..."		hardwaregeek
35207305	11.826641	-7.3047376	story	10.0	152.0	1679128091	9.219468	How Async/Await Works in C#	https://devblogs.microsoft.com/dotnet/how-async-await-really-works/	kryptiskt
35509324	11.5974655	-7.141247	story	10.0	8.0	1681102775	-7.401615	Ask HN: How does the return statement of a function work?		noob_eng
28365640	11.656745	-7.9493566	comment	10.0	40.5	1630401919	10.26951	Perhaps someone will answer this related Q..  Having coded in Python for years, I'm underwhelmed by claims of Go's simplicity. Python, with its batteries included, seems to me simpler to code in and f...		nickd2001
28423328	11.731349	-7.150765	story	10.0	69.0	1630840129	7.0140557	Eolang, an Experimental Object-Oriented Programming Language Based on 𝜑-Calculus	https://github.com/cqfn/eo	abd-nh
28496682	11.740625	-7.6846933	story	10.0	10.0	1631399359	10.157848	Ask HN: When to switch startup backend from Python to Golang?		silentsea90
28521480	11.603943	-7.8091736	comment	10.0	56.0	1631604712	10.218531	>Languages do not becomes successful due to their intrinsic qualities. Languages because successful when they are coupled to a successful platform.That doesn't seem right. There are plenty of language...		smokey_circles
22316693	12.271759	-7.5188003	comment	10.0	45.0	1581590405	12.831676	What is the difference between the actor model and object oriented programming? It seems to me like they are basically the same paradigm but with all the names changed, and some additional restriction...		shawnz
22408664	12.028359	-7.728888	story	10.0	258.0	1582579932	10.441836	Functional Programming in OCaml	https://www.cs.cornell.edu/courses/cs3110/2020sp/textbook/	gstipi
22525472	11.876804	-7.3928685	comment	10.0	30.0	1583763242	8.318436	I (author) agree with you. The target audience of this post was originally my coworkers, if I even targeted it at all; but there is certainly room in the world for more basic explanations targeted at ...		Smaug123
23054219	11.696573	-7.141707	story	10.0	88.0	1588447479	6.9812136	Value-Oriented Programming (2018)	https://matt.diephouse.com/2018/08/value-oriented-programming/	pcr910303
23144615	12.03099	-7.326615	comment	10.0	25.5	1589217982	7.103835	So I have heard about the idea of OOP being about passing messages between objects, rather than just calling functions with parameters but I can't seem to figure it out in a mental model.How does pass...		hpoe
23168119	12.03788	-7.198431	story	10.0	185.0	1589385065	8.686784	Optimising for Concurrency: Comparing the BEAM and JVM virtual machines	https://www.erlang-solutions.com/blog/optimising-for-concurrency-comparing-and-contrasting-the-beam-and-jvm-virtual-machines.html	francescoc
23241567	11.684456	-7.387086	comment	10.0	58.5	1589931017	10.099076	"Some of these are arguably ""incorrect abstractions"", but others are just design decisions that are being treated as ""incorrect"" because they don't follow Haskell's design sensibilities. A perfect exam..."		andolanra
23245125	11.85926	-7.353373	story	10.0	109.0	1589969305	6.951254	The Liskov Substitution Principle (2019)	https://www.brainstobytes.com/the-liskov-substitution-principle/	juanorozcov
23304081	11.803977	-7.5455008	story	10.0	282.0	1590434928	10.41088	Why is Idris 2 so much faster than Idris 1?	https://www.type-driven.org.uk/edwinb/why-is-idris-2-so-much-faster-than-idris-1.html	culturedsystems
23363099	11.988599	-7.7484345	comment	10.0	73.0	1590861171	10.427572	I am the person that would be the one most likely to adopt haskell in the company I work in. Now, I don't and I won't even though I used it for several pet projects and I would say have learned a lot ...		wirrbel
33226221	11.617401	-7.0196595	comment	10.0	30.5	1665946848	2.1077905	Could someone explain why refactoring is so much easier in functional languages?		wallscratch
33298253	11.613034	-7.961344	story	10.0	180.0	1666446300	10.184096	Incremental Parsing in Go	https://dev-nonsense.com/posts/incremental-parsing-in-go/	willdaly
33318432	11.986966	-7.728016	story	10.0	132.0	1666627208	10.377063	Show HN: IHP v1.0 – Batteries-included web framework built on Haskell and Nix	https://ihp.digitallyinduced.com/blog/c479f341-1374-496a-96d6-7af647005b21-ihp-1-0	_query
33331123	12.23436	-7.510448	comment	10.0	55.0	1666709033	-11.362477	Having used Kotlin on and off for the better part of a decade, the one thing I can say is that their editor support is unrivaled by any other language today. While Kotlin's build tools leave much to b...		bmc7505
33620427	11.841192	-7.080998	story	10.0	121.0	1668587455	1.2789749	Enso: Hybrid visual and textual functional programming	https://github.com/enso-org/enso	ivanche
33621443	11.919818	-7.373743	comment	10.0	92.5	1668597536	9.095021	I'm a fan of functional programming but I'm pretty sure this post would do a terrible job of convincing anyone to try FP out. There's a very bad pattern of replicating very specific language features ...		steinuil
33622058	12.402953	-7.019822	story	10.0	72.0	1668602162	13.05094	Perl on Rails (2007)	https://www.bbc.co.uk/blogs/radiolabs/2007/11/perl_on_rails.shtml	jdefelice
33627829	11.725733	-7.283041	comment	10.0	32.5	1668622564	-6.3927193	One take away from functional programming that I have incorporated into my Java (and C#) code: If/When possible, never (ever ever!!!) re-assign a local variable.  (Rare exception: Classic C-style for-...		throwaway2037
33716773	12.289329	-7.316454	story	10.0	89.0	1669194058	7.037938	The miracle of Smalltalk’s become: (2009)	https://gbracha.blogspot.com/2009/07/miracle-of-become.html	nathell
33803878	12.111632	-7.8643603	comment	10.0	44.0	1669828513	-3.231539	As someone with a maths degree, yet who admittedly hasn't looked into category theory beyond some basic notions, I still don't quite understand why anyone would want to learn category theory before e....		Tainnor
26477610	12.187117	-7.570472	comment	10.0	52.0	1615906893	11.886887	Very cool to see that Scala continues to have a huge impact on Java’s roadmap.Records and Sealed Classes are borrowed from Scala.Could be not the best news for new Scala adoption, but good news for de...		dadoge
26745069	11.627187	-7.9349203	comment	10.0	46.0	1617924788	10.2468	"Yet another tragedy broughtabout by golang (at least in part)! :)(https://golang.org/pkg/flag/#hdr-Command_line_flag_syntax)Edit: To be clear, I'm mostly ""blaming"" Go for re-popularizing this style by..."		ben0x539
27097830	11.801814	-7.3072686	comment	10.0	32.5	1620581363	-6.0277696	But the question is why didn't any of the functional languages with these desirable features ever reach mainstream popularity.		bosswipe
27107647	11.780344	-7.169652	story	10.0	140.0	1620663284	-8.962444	Pyre: A performant type-checker for Python 3	https://pyre-check.org	tosh
27179480	11.636933	-7.8956156	comment	10.0	74.5	1621218211	10.193513	"I've written a bit of code in Go, and the problem I have with it is primarily it feels really outdated for a ""modern"" language - every time I use it I feel like I'm dealing with something written by s..."		paul_e_warner
27399762	11.724683	-7.316203	comment	10.0	48.0	1622845447	-8.8215275	"After watching this 2018 talk on typing: https://www.youtube.com/watch?v=hWV8t494N88and this one last year:
https://www.youtube.com/watch?v=ST33zDM9vOE&t=68sand finally this one in 2021:
https://www.y..."		yuy910616
37764675	11.77586	-7.357739	comment	10.0	49.5	1696425502	-8.826421	Author here. I ended the post with:> I can see both side of the arguments on many topics, such as vim vs. emacs, tabs vs. spaces, and even much more controversial ones. Though in this case, the costs ...		tasn
37765521	11.762623	-7.347787	comment	10.0	48.0	1696428910	-8.890134	Well, people have always been fanatical about thing a they are attached to emotionally, rather than rationally.Fact is: the “types lead to fewer bugs” claim is just a feeling, it is “truthy”.https://b...		mpweiher
37847513	11.708466	-7.3588567	comment	10.0	29.0	1697045354	-5.5170927	Okay. Today I'll be the idiot.I don't get it. Or rather, I don't get the significance of the Curry-Howard Isomorphism. Questions:1) Is there an example of a proof and its corresponding program that ma...		SilasX
37957189	12.444352	-7.073042	story	10.0	90.0	1697814492	12.488624	Useless Ruby sugar: Pattern matching	https://zverok.space/blog/2023-10-20-syntax-sugar2-pattern-matching.html	ezekg
38053261	12.393244	-7.3239303	comment	10.0	39.5	1698526402	12.907483	I hear so much good stuff about Elixir and Phoenix (often from fly.io blogs) but I've always dismissed it for the lack of type support. Is there a TypeScript equivalent on the horizon? Or is it not so much of an issue?		crummy
38198422	12.161262	-7.048935	comment	10.0	26.5	1699484044	-8.534377	> Thinking || allows for set operations: states.includes('VALID' || 'IN_PROGRESS')Genuinely wondering what language that would have been valid in.		twisteriffic
38353355	11.886286	-7.425462	comment	10.0	27.5	1700509199	-6.8088174	"My complaint with FP:
Sometimes I just want to do something silly, like adding a log somewhere.
If I choose to add said side effect, now all my functions are marked with an io signature (so there migh..."		frozenlettuce
38434645	11.665606	-7.9271555	comment	10.0	35.0	1701103962	10.220015	Don't forget the fact that it doesn't have this overbloated concept of inheritance and polymorphism of let's say Java where you have to look through 6 files to understand what's even going on. Even ge...		ingoaf
38516502	12.10122	-7.509891	comment	10.0	49.0	1701693350	-10.593212	D is a niche language that didn't quite manage becoming mainstream. I came across an excellent article Why your F# evangelism isn't working (https://ericsink.com/entries/fsharp_chasm.html) that explai...		nindalf
14707822	12.365186	-7.5367985	story	10.0	161.0	1499309157	-7.2839603	A ReasonReact Tutorial	https://jaredforsyth.com/2017/07/05/a-reason-react-tutorial/	kcorbitt
14751236	12.045445	-7.699425	story	10.0	173.0	1499852533	10.376121	Owl – An OCaml Numerical Library	https://github.com/ryanrhymes/owl	jimyl
14780468	12.058397	-7.7903028	comment	10.0	53.0	1500178929	10.433972	"OCaml has always intrigued me as something to learn, but it seems I always read equally as many reasons that it's not good, not ready, or why I should try Haskell instead.  
Does anyone have experienc..."		axaxs
14875187	12.135332	-7.5079775	story	10.0	70.0	1501257434	-10.626043	Get Started with F# as a C# developer	https://blogs.msdn.microsoft.com/dotnet/2017/07/24/get-started-with-f-as-a-c-developer/	edgyswingset
15046896	11.705619	-7.393466	story	10.0	79.0	1503069245	-8.756315	Why Type Systems Matter	http://matthias-endler.de/2017/why-type-systems-matter/	somecoder
15179035	12.310448	-7.5047874	story	10.0	85.0	1504644823	12.83117	Get to Know the Actor Model with JavaScript	https://monades.roperzh.com/get-to-know-the-actor-model/	roperzh
15242498	12.132723	-7.865072	story	10.0	129.0	1505335723	-3.2051601	Why category theory matters in programming	https://tech.iheart.com/f585d17b01d3	kailuowang
15301785	12.027325	-7.216979	story	10.0	60.0	1505985778	9.193776	Folding Promises in JavaScript	https://www.codementor.io/vladimirgorej/folding-promises-in-javascript-b1l7mwh93	anon335dtzbvc
15441229	11.700159	-7.368769	comment	10.0	49.5	1507638981	-8.825532	"Curiously, in the list of possible future tools for more reliability type systems are absent.Looking at the authors bio: ""I love solving tough problems with Python and PHP"".Type systems to me seem to ..."		tpush
15582296	11.8085165	-7.021668	comment	10.0	37.5	1509321836	7.966094	Java is commonly criticized for being too verbose, but I never understood why.   I agree it is verbose, but verbosity isn't really that bad of a problem.   Programs aren't harder to write, they aren't...		morecoffee
15652136	11.703073	-7.8567615	story	10.0	242.0	1510147583	10.106471	Learning Go by porting a medium-sized web back end from Python	http://benhoyt.com/writings/learning-go/	benhoyt
15738704	12.320887	-7.0177984	story	10.0	67.0	1511168537	13.182943	Perl and Undecidability (2008)	http://www.jeffreykegler.com/Home/perl-and-undecidability	gfredtech
23554869	11.658426	-7.9458427	story	11.0	196.0	1592418405	10.212952	Go generics draft design: building a hashtable	https://mdlayher.com/blog/go-generics-draft-design-building-a-hashtable/	mdlayher
23593018	11.756453	-7.312499	comment	11.0	30.5	1592757098	-8.89398	Forgive me, but when I program I know what the variables I am working with are doing, and what kind of data they are storing. That’s the least of my problems. I don’t write a big mess of code, I’m con...		iamleppert
23621930	11.988881	-7.7757015	comment	11.0	49.5	1592955938	10.4301605	"Counter point on ""investment"":I was in a Haskell team at Google, and have trained groups at various companies professionally. From that experience, for a normal developer with working experience in Ja..."		nh2
23759721	11.811506	-7.256997	story	11.0	149.0	1594132740	7.3700466	Coconut: Simple, elegant, Pythonic functional programming	http://coconut-lang.org/	shawndellysse
24330837	12.278804	-7.2959595	comment	11.0	37.5	1598877795	7.118261	From my understanding, to adopt Smalltalk, I’d have to give up my editor, my SCM, my code review practises, my deployment strategies, my whole way of working. Learning a new language is already a big ...		mikl
20027281	11.9650755	-7.628882	story	11.0	358.0	1559018870	10.401599	Translating math into code with examples in Java, Racket, Haskell, Python (2011)	http://matt.might.net/articles/discrete-math-and-code/	signa11
20067693	12.337357	-7.0528464	story	11.0	109.0	1559371472	13.238934	Perl 6's given: switch on steroids	https://tenesianu.blogspot.com/2019/05/perl-6s-given-switch-on-steroids.html	lizmat
20153868	12.251635	-7.6403484	story	11.0	130.0	1560243696	-5.3277707	Scala 2.13 is now available	https://www.scala-lang.org/news/2.13.0	dtech
20243040	11.754766	-7.029529	comment	11.0	56.5	1561129099	-10.533133	This isn't strange or surprising. parseInt takes two arguments, the second one is the radix and map will call with three arguments, the value, the index and the whole array. You just have to know this and it might be different in other languages. [ ... ].map(x => ...) is the right way to do this.		roryrjb
20430178	12.268645	-7.501059	story	11.0	64.0	1563052177	-11.547452	Koji – App Development Platform	https://withkoji.com/	cardamomo
20501305	11.885669	-7.4286604	story	11.0	142.0	1563822924	7.2318983	A Grimoire of Functions	http://fredrikj.net/blog/2019/05/a-grimoire-of-functions/	akalin
20577297	11.653564	-7.9333243	comment	11.0	39.0	1564600700	10.21661	I have yet to find one practical application for generics in the apps I've built in Go.		dimgl
20653278	11.990226	-7.7110004	story	11.0	157.0	1565350022	10.4236355	Show HN: I built a poker site with Haskell	https://github.com/therewillbecode/haskell-poker	zzeder
20655263	11.976667	-7.7243156	comment	11.0	30.5	1565364654	-10.33824	What would be the best IDE/editor for Haskell?		InvOfSmallC
20720051	11.687143	-7.362369	comment	11.0	47.0	1565992205	9.170185	I must be dumb, because every time I dive into async/await, I feel like I reach an epiphany about how it works, and how to use it.  Then a week later I read about it again and totally lost all underst...		2bitencryption
20837753	11.651237	-7.9756994	story	11.0	254.0	1567167046	10.160842	Go Module Mirror and Checksum Database Launched	https://blog.golang.org/module-mirror-launch	ingve
20966928	12.455514	-7.04692	story	11.0	110.0	1568411040	12.376257	Ruby One-Liners	https://benoithamelin.tumblr.com/ruby1line/	kawera
20984426	11.645428	-7.9213266	comment	11.0	41.5	1568644468	10.211907	Can somebody post an example of when you would use generics to solve a problem in the real world, and how that would be implemented in Go instead?		MuffinFlavored
13815112	12.060639	-7.512809	comment	11.0	37.0	1488922294	-10.582324	F# (and ML in general, despite having been around for a while) looks like a programming language of the future. It occupies just the right place between the two extremes - one being purely functional ...		Koshkin
14054101	12.253758	-7.6188107	story	11.0	50.0	1491509103	11.95801	Building Scala Projects: Maven vs. SBT	http://www.hammerlab.org/2017/04/06/scala-build-tools/	rdubz
14081017	11.630554	-7.9165573	comment	11.0	38.5	1491847387	10.198839	>Compared with Ruby, PHP, Python, or Javascript, you're going to get great memory and latency performance, and libraries that do what you expect.Isn't picking a language to solve memory/latency issues...		atarian
14123100	12.054822	-7.7809224	story	11.0	241.0	1492293808	10.438092	Why ML/OCaml are good for writing compilers (1998)	http://flint.cs.yale.edu/cs421/case-for-ml.html	monssoen
14429825	11.63589	-7.9643617	story	11.0	142.0	1495888151	10.170179	Gollvm from Google	https://go.googlesource.com/gollvm/	aleksi
14439789	11.995786	-7.719578	story	11.0	239.0	1496074277	10.426332	Show HN: Legion, an as-simple-as-possible blockchain server written in Haskell	https://github.com/aviaviavi/legion	aviaviavi
14445048	12.120178	-7.558982	story	11.0	84.0	1496149912	-11.378372	Mutable vals in Kotlin	http://blog.danlew.net/2017/05/30/mutable-vals-in-kotlin/	ingve
14447787	12.040101	-7.213953	comment	11.0	55.5	1496172283	9.199072	Short ver: async await is now in an LTS release of node. Anything that returns a promise can now be run inline - ie, no endless .then() chaining - provided you've started an async context:  const writ...		nailer
14506702	12.443788	-7.7292376	comment	11.0	38.5	1496845793	-11.085875	Disclaimer: as a Clojure developer and functional programming evangelist, I do not want to be too critical of this article. It's a really great post about some incredibly valuable and advanced Clojure...		whalesalad
14583530	11.671501	-7.2900505	story	11.0	209.0	1497827666	8.6392145	Java 10 – Specification for Value Types	http://cr.openjdk.java.net/~dlsmith/values.html	groodt
14615694	11.684244	-7.8742824	story	11.0	25.0	1498169292	10.192977	Go is Not Python	http://www.seanhelvey.com/go-is-not-python	blacksmythe
14674155	11.819859	-7.1114025	comment	11.0	65.5	1498864825	-8.917663	"    Dynamically typed languages for
    large code bases are terrible

The success of Wikipedia, Wordpress, Facebook, Youtube, GitHub etc etc etc and last but not least Reddit seem to prove otherwise."		TekMol
31115243	11.777808	-7.2174315	comment	11.0	79.5	1650575480	-9.039149	this article is so full of... not-very-educated thoughts on gradual typing in a dynamic language that it's hard to know where to start.A few concrete criticisms:1. If you're using a dynamic language, ...		ledauphin
31115531	11.80907	-7.1991353	comment	11.0	50.5	1650577283	-9.022194	"> not-very-educated thoughts on gradual typingThis seems like an inaccurate and condescending put-down. What is the definition of ""educated"" in this context? Is there a book or generally well-known re..."		civilized
31118679	11.874843	-7.115633	comment	11.0	42.0	1650607202	-9.152868	"This article is so hopelessly mis-informed, that it's practically hard to read without screaming ""that's not how any of this works!"" Most of their main arguments - type hints can be wrong, they can be..."		kortex
31193077	12.289704	-7.514273	comment	11.0	46.5	1651156999	12.830839	> Orbit is a framework to write distributed systems using virtual actors on the JVM. A virtual actor is an object that interacts with the world using asynchronous messages.Could anybody elaborate on this? How does an actor differ from an object that uses promises to talk to a server?		gentleman11
31528834	11.9927025	-7.2650504	comment	11.0	31.5	1653654954	7.088224	> The core of DOD is not about optimization or making fast programs through hardware consideration; it is about organizing programs around a deep knowledge of data and its transformation.This is a ver...		dgb23
31607274	11.603806	-7.849705	story	11.0	154.0	1654258901	10.003502	Goroutines Under the Hood (2020)	https://osmh.dev/posts/goroutines-under-the-hood/	s3micolon0
25471874	11.790166	-7.052689	comment	11.0	39.0	1608324988	5.16193	Design Patterns are a massive code smell. I always prefer simple code over extensible over-engineered frameworks.		AlexanderDhoore
25549811	11.996429	-7.7522154	story	11.0	160.0	1609059359	10.421911	New Haskell Foundation to Foster Haskell Adoption, Raises 200k USD	https://www.infoq.com/news/2020/12/haskell-foundation-launched/	antouank
25562800	11.882526	-7.4165134	story	11.0	163.0	1609186977	7.2625914	Functional programming in C++ (2012)	https://gamasutra.com/view/news/169296/Indepth_Functional_programming_in_C.php	tosh
25699821	11.938893	-7.758195	comment	11.0	47.0	1610195379	10.430287	Haskell is a language for experimenting, success is not their goal and it would remove resources to actual research.They had promises and async/await in 1995. They're trailblazers that other languages...		jokethrowaway
26078078	11.9992695	-7.7549043	comment	11.0	63.0	1612882063	10.472899	I'm enjoying the read. Having written a fair deal of Haskell, I'm really grateful for what leaning Haskell told me about programming at large. Snoyman has written amazing libs and acute articles, and ...		cies
26191240	11.998709	-7.748932	comment	11.0	40.0	1613727540	10.432779	So, to summarise:- It is an accomplishment if you get your basic project setupped in 2 weeks- It is very hard to make popular libraries work together- 1/3 of the popular libraries are not well maintai...		ssijak
35536085	11.8017	-7.172131	story	11.0	78.0	1681284072	-8.985712	The different uses of Python type hints	https://lukeplant.me.uk/blog/posts/the-different-uses-of-python-type-hints/	BerislavLopac
35652941	11.838883	-7.296534	comment	11.0	37.0	1682081491	-8.977316	Does anyone remember when the trend was towards expressivity in languages? At th time that meant dynamically typed languages like Ruby and Python.The pendulum has swung away from dynamic typing but ar...		andybak
35765933	11.931332	-7.462625	story	11.0	154.0	1682883665	7.2548532	Grokking Simplicity: Taming complex software with functional thinking	https://bagerbach.com/books/grokking-simplicity	jasim
35778900	12.099685	-7.873848	story	11.0	37.0	1682973899	10.447545	Two Years of OCaml	https://borretti.me/article/two-years-ocaml	susam
35793930	11.812432	-7.195079	comment	11.0	35.0	1683060312	-9.008745	Is it just me or do more people find that Python is becoming more and more illegible with these type annotations? I understand why they are introduced, but to me they cause a lot of line noise in the ...		tremon
35826346	11.605943	-7.9284077	comment	11.0	31.5	1683272101	-7.320817	"I've been keeping my eye on the so called ""GOFAI"" for a long time but with recent advances in ANN methods (DL, LLM), does it even make sense to further pursue the former?Personally, those ""old"" methods in the 80s make a lot more sense to me than recent statistical methods."		ducktective
36018930	11.783259	-7.1806417	comment	11.0	42.5	1684657531	-9.029063	I've seen a bunch of code like this, usually written by juniors once they get a bit of experience and discover the concept of types.A surefire way to make your Python code terrible. The whole point of...		mgaunard
36094799	12.096179	-7.851152	story	11.0	246.0	1685195204	10.435173	Oxidizing OCaml: Locality	https://blog.janestreet.com/oxidizing-ocaml-locality/	amatheus
36258125	11.704547	-7.1615505	comment	11.0	38.0	1686320117	-8.377691	Sadly, Python is a pretty poor functional language.The core of functional programming is about avoiding mutable states, not much about anonymous functions or passing functions as data.To do proper fun...		raphaelj
28785785	11.702376	-7.20036	comment	11.0	49.5	1633612519	10.358503	I run a hedge fund. On any given day I hear a large number of complaints from the technologists that complex python systems are difficult to look after and we should use something else instead. There'...		short_sells_poo
28785306	12.115448	-7.854814	story	11.0	166.0	1633609409	10.483635	The road to OCaml 5.0	https://discuss.ocaml.org/t/the-road-to-ocaml-5-0/8584	wczekalski
28824996	11.638318	-7.9421983	story	11.0	208.0	1633929979	10.147557	Network Programming with Go	https://tumregels.github.io/Network-Programming-with-Go/	BitAstronaut
28894913	12.279407	-7.4626427	story	11.0	129.0	1634459882	-10.616483	Fable is a compiler that brings F# into the JavaScript ecosystem	https://fable.io/	philonoist
28908034	11.745334	-7.2497478	comment	11.0	68.0	1634577864	-8.851571	"I love static typing/type hints if for only 1 thing - code maintenance.Even code I wrote six months ago.Not having to dig through 6 functions deep to try to figure out whether ""person"" is a string, or..."		david422
29195381	11.768797	-7.3252134	story	11.0	114.0	1636680732	9.144324	Async Cancellation	https://blog.yoshuawuyts.com/async-cancellation-1/	ibraheemdev
34244005	12.485461	-7.018501	comment	11.0	36.0	1672827745	12.383286	"I explored this topic a while ago on my blog [0]In essence, I don't think it has anything to do with elegance, syntax, or ""easiness"". It's more about timing + origin + corporate adoption:* Python was ..."		arnvald
34389447	12.0110035	-7.809447	comment	11.0	40.0	1673791409	10.431139	This reminds me of an old joke in the Haskell community, where people who struggled to understand Monads would finally get it after a while, and would assume that whatever the last sentence they heard was the only necessary one for the explanation.		sebzim4500
34716885	12.127101	-7.497273	comment	11.0	44.0	1675897382	-10.614781	How well are F# and C# supported on the Linux platform?		BenGosub
34788085	11.794608	-7.0390377	comment	11.0	28.0	1676375355	-8.97725	I still don't understand why you would use classes without methods. That's what dicts are for.About 10 years ago someone who I thought was pretty smart said it was because dots are nicer to type, fair...		dec0dedab0de
34904888	11.967748	-7.7232037	story	11.0	169.0	1677110065	10.38292	Squeezing a Sokoban game into 10 lines of Haskell	https://www.cole-k.com/2023/02/21/tiny-games-hs/	ufo
39460560	11.638971	-7.965045	comment	11.0	34.5	1708554852	10.218457	`go run main.go` breaks if your `main` module is divided into multiple files.Use `go run .` instead - it's shorter and it works with multiple files		denysvitali
39478684	12.46747	-7.1184654	story	11.0	47.0	1708681027	12.380197	Weird Ruby: Nil Conversions	https://metaredux.com/posts/2024/02/23/weird-ruby-nil-conversions.html	unripe_syntax
39493219	11.764734	-7.226268	story	11.0	78.0	1708795061	7.3700314	Candy – a minimalistic functional programming language	https://github.com/candy-lang/candy	microflash
39614890	11.85959	-7.2302613	comment	11.0	67.5	1709725622	9.222648	"Their Hello, Dada! example:print(""..."").awaitI'm coming from Python, and I can't help but ask: If my goal as a programmer is to simply print to the console, why should I care about the await? This alr..."		yamrzou
36569727	12.335539	-7.03742	story	11.0	176.0	1688367880	13.190383	Perl 5.38	https://perldoc.perl.org/perl5380delta	thatwasunusual
36662899	11.832549	-7.3866253	story	11.0	54.0	1688971678	7.0429826	Polymorphism and other important aspects of inheritance	https://utcc.utoronto.ca/~cks/space/blog/programming/InheritanceSeparateAspects	ingve
36833384	11.743259	-7.8512573	story	11.0	30.0	1690098537	10.296077	Show HN: Scaffolder, CLI tool to generate project structure, taken from YAML	https://github.com/cemister/scaffolder	cemister
36933345	11.649238	-7.560177	story	11.0	74.0	1690736774	10.103611	Workarounds for C11 _Generic()	https://www.chiark.greenend.org.uk/~sgtatham/quasiblog/c11-generic/	fanf2
37065505	11.730875	-7.371959	comment	11.0	51.0	1691600216	-8.831683	i have to be totally honest that I understand about 5% of this postnonetheless, I will offer my obviously uninformed opinion on the topic (hey, it's hacker news):a big problem w/ static languages is t...		recursivedoubts
37117666	11.8459215	-7.2313576	comment	11.0	31.5	1691989858	7.306757	Why do so many feel so strongly against state?In my 10+ year programming career not once have I ever wished something was functional. State simply is, dealing with it is a foundational concept in writ...		pdntspa
37124421	11.651585	-7.9207234	comment	11.0	39.0	1692036600	10.210493	I wonder why Go isn't the new Java/.NET (yet?).Clearly a lot of tools and APIs have been written in it, many would describe not needing a separate runtime on the target system as a big plus and the la...		KronisLV
37147996	11.665446	-7.1275525	story	11.0	154.0	1692197521	8.962951	Spring 6.1 now compatible with virtual threads and JDK 21	https://github.com/spring-projects/spring-framework/wiki/What%27s-New-in-Spring-Framework-6.x	philonoist
37342909	11.71922	-7.482889	story	11.0	44.0	1693511992	1.9479058	Ad-hoc polymorphism erodes type-safety	https://cs-syd.eu/posts/2023-08-25-ad-hoc-polymorphism-erodes-type-safety	diarrhea
37344026	11.854165	-7.5483747	story	11.0	101.0	1693517984	8.928424	Types versus sets (and what about categories?) (2022)	https://lawrencecpaulson.github.io/2022/03/16/Types_vs_Sets.html	matt_d
37526987	11.657016	-7.861201	comment	11.0	49.0	1694801316	10.1111965	In what world is Go more reliable or faster than Java? Especially modern Java (or other good JVM languages like Kotlin).It compiles faster but that is about it. Which is a good thing too because it's ...		jpgvm
24539553	12.495311	-7.03531	comment	11.0	39.5	1600659566	12.378777	I'm sad Ruby has been, or is, left behind by python. There are lots of little reasons but no real big one. I just love ruby. I love little things like 'unless'. I know it's still with us, but still feels a little sad.		bfieidhbrjr
24601981	11.63605	-7.2335734	story	11.0	133.0	1601153204	-8.784097	All you need is λ, part one: booleans	https://antitypical.com/posts/2020-03-29-all-you-need-is-lambda-1-booleans/	azhenley
25299547	11.84816	-7.185622	story	11.0	36.0	1607062337	5.140878	Ask HN: What programming design pattern book has had the biggest impact on you?		jamestimmins
25420814	11.645268	-7.9491987	story	11.0	223.0	1607968856	10.193838	Coordinated disclosure of XML roundtrip vulnerabilities in Go’s standard library	https://mattermost.com/blog/coordinated-disclosure-go-xml-vulnerabilities/	jupenur
38874040	11.613189	-7.913546	comment	11.0	52.0	1704413645	10.2018385	I totally agree that Go is best suited outside of systems programming, but to me that always seemed like a complete accident - its creators explicitly said their goal was to replace C++. But somehow i...		sapiogram
39066428	12.027316	-7.724082	comment	11.0	30.0	1705748923	10.288309	Not sure why Scott Wlaschin needs to keep renaming existing concepts ('Monads' to 'Railway Oriented Programming' and 'Function Composition' to 'Pipeline Oriented Programming'), but I really don't thin...		louthy
32528825	11.986001	-7.744804	comment	11.0	39.5	1660966921	10.409068	With Haskell, one always finds articles explaining how great it is, how its features (pure functionality) lend to correct code. But, articles explaining the core use cases and how only this language e...		havercosine
32638927	12.08015	-7.75406	comment	11.0	35.5	1661784314	-10.64598	I'm surprised people care about the syntax... that's pretty much the least important part of the language.I've got a few issues with OCaml1. The standard library is inconsistent. Different projects us...		yodsanklai
32666049	12.123594	-7.1168356	story	11.0	66.0	1661969212	8.49844	A Simple Entity Component System (2019)	https://austinmorlan.com/posts/entity_component_system/	lordleft
32674112	12.008484	-7.7440777	comment	11.0	51.0	1662025249	10.422015	Elixir, Haskell et al. require concepts that are not required at all in e.g. Java. The functional programming module at my university had the highest failure rate after the math and statistics classes...		schroeding
32767619	12.312274	-7.0256605	comment	11.0	67.5	1662653285	13.187838	With function signatures and state variables added in 5.010, I consider Perl feature-complete and have not really missed anything from it for as long as I've been writing Perl.What I do appreciate tha...		forgotmypw17
32840228	11.956638	-7.4315553	comment	11.0	59.0	1663175857	7.1974473	"A fun essay that really tries to nail down the ""Why"" in a real-world way.It mentions that functional programming removes the tripwire of state mutation as one of the ""whys"", but my experience slightly..."		clusterhacks
31859993	11.914012	-7.333679	comment	11.0	38.5	1656068121	7.061418	After many years of OOP, I'm not sure if we gained anything from OOP, and if it wasn't a solution in search for a problem.At first I was enthusiastic. Then I've realized that there might be better way...		DeathArrow
31862250	12.049582	-7.7699833	comment	11.0	38.5	1656080286	10.436212	As a former OCaml hobbyist programmer my take on these kind of books or articles is that, yes OCaml is extremely elegant and beautiful as a programming language and it shines for simple applications. ...		frankohn
31879882	11.903671	-7.3032985	comment	11.0	41.5	1656202941	7.093416	I'm having a hard time thinking of a way code can ever be fully decoupled from data. When we decide it's better to have a name field rather than firstName and lastName does that mean we simplify NameC...		alphanumeric0
31975057	12.025876	-7.8158455	comment	11.0	34.0	1656925794	10.42627	Why do monads come up so often when people talk about FP? Is it a meme or are they really an important and difficult to understand concept?		jstx1
32080899	11.634546	-7.9505014	story	11.0	107.0	1657708709	10.153291	Wails: Build cross-platform applications using Go	https://wails.io/	sph
32287368	11.975471	-7.0760083	story	11.0	17.0	1659193723	8.034722	Is Java Dying?		bornrmi
32429276	12.262424	-7.2848716	comment	11.0	51.5	1660239747	7.130429	Smalltalk looked at the time like it was going to be important. It had really good marketing.Its main effect on the world, aside from being the implementation language for the Xerox UI that was demons...		ncmncm
32498128	11.7352085	-7.2207723	comment	11.0	32.0	1660752249	-8.934319	I think dynamic analysis is incredibly powerful and criminally underused in IDEs and other dev tools.I have thought of an idea about 6 months ago that has been fermenting in my mind since then : what ...		Banana699
22046441	11.634252	-7.137448	story	11.0	76.0	1579019888	4.724207	Map/Reduce for Mortals	https://billwadge.wordpress.com/2020/01/03/map-reduce-for-mortals/	herodotus
22137563	12.488543	-7.825468	comment	11.0	42.5	1579869604	11.905994	Despite the positive tone, what really struck me in this article was that they struggle with getting people to work on the compiler because it is too complex.It just confirms my main criticism against...		socialdemocrat
22281615	11.85753	-7.319607	story	11.0	109.0	1581248150	-6.7579675	Eiffel programming language	https://en.wikipedia.org/wiki/Eiffel_(programming_language)	modinfo
12581285	11.897094	-7.4533744	story	11.0	65.0	1474893670	7.2864795	Functional programming in C++	https://medium.com/@nirjhor/functional-programming-in-c-8bdbd903ee32	ingve
18968101	11.878132	-7.4365764	story	11.0	234.0	1548164081	7.2499986	Functional programming in C++ (2012)	http://www.gamasutra.com/view/news/169296/Indepth_Functional_programming_in_C.php	tosh
19035684	11.701868	-7.422244	story	11.0	192.0	1548861491	-8.715596	A Primer on Type Systems	https://www.cs.uaf.edu/users/chappell/public_html/class/2018_spr/cs331/docs/types_primer.html	hacknrk
19292543	12.066611	-7.805617	comment	11.0	40.5	1551584032	10.464322	Have you ever had one of those notepads with the kind of paper that made you want to write something, anything, even though you had nothing to write about? OCaml is just like that to me.I stroll throu...		jasim
19570776	11.973343	-7.7257996	story	11.0	68.0	1554374821	10.474528	Haskell, Ada, C++: An Experiment in Prototyping Productivity (1994) [pdf]	http://haskell.cs.yale.edu/wp-content/uploads/2011/03/HaskellVsAda-NSWC.pdf	jxub
19785385	12.012315	-7.756954	comment	11.0	28.5	1556602333	10.436475	Agreed. I'm a bit jealous of his (Mostly) food truck name ideas, https://writing.markchristian.org/name-ideas/.Once, in the functional programming rabbit-hole, a coworker advocated for a hypothetical ...		loosetypes
19821359	11.733481	-7.400765	story	11.0	190.0	1556910844	-8.722723	What to Know Before Debating Type Systems (2008)	https://cdsmith.wordpress.com/2011/01/09/an-old-article-i-wrote/	furcyd
15777514	12.253256	-7.6392374	story	11.0	11.0	1511638313	11.956059	Ask HN: How to get a Scala graduate position?		HighlandSpring
16233785	11.60418	-7.0953507	comment	11.0	52.5	1516908626	-7.0653696	"JavaScript is absolutely not pass by reference.    let a = 1;
    
    function foo( a ) {
      a = 2;
    }
    
    foo( a );
    
    console.log( a ); // 1"		kevincennis
16422075	12.012513	-7.7881575	comment	11.0	30.5	1519147715	10.419909	Can someone please explain in a simple way what Monads are and why I want to use them in normal daily programming (assume, incorrectly, that I only know Python)?I know I can google this, and have, and unfortunately I came away even more confused as a non-Haskell practitioner.		azinman2
16506271	11.673587	-7.908245	story	11.0	235.0	1520029042	10.140628	WebAssembly architecture for Go	https://docs.google.com/document/d/131vjr4DH6JFnb-blm_uRdaC0_Nv3OUwjEY5qVCxCup4/preview#heading=h.mjo1bish3xni	diakritikal
16775545	12.242334	-7.6272283	story	11.0	155.0	1523037405	11.943357	Mill: Better Scala Builds	http://www.lihaoyi.com/post/MillBetterScalaBuilds.html	lihaoyi
17150580	12.465623	-7.055042	comment	11.0	38.0	1527221964	12.379185	While I believe 'plain English' type programming languages are a great concept, the reality is that it just introduces far more ambiguity into the mix, and you are just left trying to guess what the l...		cyberferret
17195580	11.84431	-7.6406746	story	11.0	70.0	1527767089	12.811234	Introduction to the Pony programming language	https://opensource.com/article/18/5/pony	spooneybarger
17311526	11.638402	-7.966756	comment	11.0	30.0	1528983138	10.186186	"Has anyone noticed that it is always mentioned that a tool is written in Go, even if this implementation detail has no relevance for the user?Nobody would write ""Universal C++ CLI ...""."		cryptos
17342276	12.12722	-7.7339516	story	11.0	233.0	1529362398	-11.662803	Comparing Languages for Engineering Server Software: Erlang, Go, and Scala/Akka [pdf]	http://www.dcs.gla.ac.uk/~trinder/papers/sac-18.pdf	jxub
17373617	11.84495	-7.524575	comment	11.0	46.5	1529672567	-8.979089	Unpopular opinion: co/contravariant representations represent exactly the point at which formal typesafety starts hurting instead of helping as an engineering practice.In all circumstances where you f...		ajross
17566166	11.821709	-7.314501	comment	11.0	41.0	1532007878	9.494736	"From the examples: ""String s = gridWrapper.get(0).get(0).get(0);"" - Java type system is broken!Java is not perfect, but this looks to me like a broken code indeed "".get(0).get(0).get(0)"".Could we reph..."		viach
17646527	11.711654	-7.2936544	comment	11.0	28.5	1532973585	-7.3611374	"Am I the only one that thinks
""function call<TS extends any[], R>(fn: (...args: TS) => R, ...args: TS): R {
    return fn(...args);
}""
looks horrible?"		mcraiha
17712823	11.625426	-7.1531024	comment	11.0	35.0	1533696120	9.193847	I’m still bummed that Python took this direction. Maybe introducing new keywords into the language for event loop concurrency was Python’s way of satisfying “explicit is better than implicit” but i ca...		sadgit
17786632	11.613506	-7.9650507	story	11.0	151.0	1534561154	10.252235	Create a simple cross-platform desktop game with Go	https://sausheong.github.io/posts/cross-platform-games-with-go/	sausheong
17792265	11.646525	-7.975586	story	11.0	252.0	1534646797	10.213644	Introduction to Go Modules	https://roberto.selbach.ca/intro-to-go-modules/	robteix
17827454	11.956024	-7.4826126	story	11.0	8.0	1535034039	7.2928433	Why Functional Programming is not more widely used in industry?		xmklb
21227839	12.340318	-7.0731983	comment	11.0	45.0	1570823753	13.177815	"> Larry has now agreed with the change and Perl 6 will be renamed to ""raku"" and Perl 5, which has regular, major releases every year, will now be able to simply be ""Perl"" and be free to continue on it..."		jolmg
21284317	12.014483	-7.774228	comment	11.0	64.5	1571333268	10.413941	> Haskell is great for business and great in production.Hot take: no it isn't. It is extremely hard to learn, has an extremely confusing + needlessly complicated syntax and I question the payoff immen...		MuffinFlavored
21299557	11.922234	-7.44127	comment	11.0	37.5	1571505797	7.146887	"Well said.And #3 is also an area where Functional Programming falls completely flat.There is simply no easy way in any FP language that I know to capture such a simple mechanism as: ""Reuse 90% of this..."		hota_mazi
21307142	11.988123	-7.7175264	story	11.0	163.0	1571605576	10.392927	Client-side web programming in Haskell: A retrospective	https://chrisdone.com/posts/clientside-programming-haskell/	mxschumacher
21711390	12.014523	-7.7941895	comment	11.0	37.5	1575543223	10.4091	My problem with understanding monads was as follows: I had no problem with understanding the mathematical definition, it was easy to check that a given monad verifies the axioms.No, my problem was thi...		Rerarom
21725869	11.653531	-7.969904	story	11.0	88.0	1575665583	10.19457	Setup for Your Next Golang Project	https://martinheinz.dev/blog/5	MartinHeinz
39210171	11.960517	-7.362657	story	11.0	25.0	1706739273	7.0647516	People Don't Understand OOP	https://blog.sigma-star.io/2024/01/people-dont-understand-oop/	coffeeaddict1
17895477	11.631712	-7.9236603	comment	11.0	41.0	1535861140	10.227705	I'm glad I'm not the only one sad to see generics invading a perfectly good language.Programmers love generics because they enable higher-order abstractions, and programmers love abstractions -- code ...		nemo1618
17908908	11.64607	-7.9339004	story	11.0	114.0	1536068137	10.201845	Maybe adding generics to Go is about syntax after all	https://dave.cheney.net/2018/09/03/maybe-adding-generics-to-go-is-about-syntax-after-all	Supermighty
18450754	11.64534	-7.0402255	story	11.0	76.0	1542210626	6.161347	Pattern Matching Without Regex – Introducing the Rosie Pattern Language	https://spin.atomicobject.com/2018/11/14/rosie-pattern-language/#.W-xEPiyim0g.hackernews	philk10
18526839	11.829706	-7.296908	comment	11.0	49.0	1543153671	7.0863495	> The vast majority of essential code is not operating on just one object – it is actually implementing cross-cutting concerns. Example: when class Player hits() a class Monster, where exactly do we m...		jryan49
18625749	12.212888	-7.2095633	story	11.0	99.0	1544167375	13.153427	Haskell to Perl 6	https://docs.perl6.org/language/haskell-to-p6	voihannena
18638430	12.251866	-7.499725	story	11.0	88.0	1544316061	-11.38062	Kweb: A new approach to building rich webapps, in Kotlin	http://kweb.io/	pplonski86
18874796	12.152506	-7.5093374	story	11.0	147.0	1547136141	-10.637157	The Early History of F# [pdf]	https://fsharp.org/history/hopl-draft-1.pdf	ingve
29811098	11.761092	-7.2886333	comment	11.0	45.0	1641400336	9.184392	Something that people may not see immediately is that flatMap is more general than map and filter. Say, for a contrived example, that you'd like to filter out the even numbers in an array, and then do...		heydenberk
29891543	12.264539	-7.296564	comment	11.0	48.5	1641909842	7.013373	I learned Smalltalk in the Elder Days (1985). Coming from C and Pascal, the power and majesty of true collections—dynamic lists! that you didn't have to build yourself with pointers! sets! dictionarie...		jonathaneunice
29997726	11.7085285	-7.064786	comment	11.0	79.5	1642616424	-8.769985	"So whenever I have to study someone else's 'dynamic' python I encounter this sort of thing:  def foo(bar, baz):
      bar(baz)
      ...

What the heck is 'bar' and 'baz'? I deduce no more than 'bar' ..."		dandotway
30023008	12.445982	-7.069756	story	11.0	58.0	1642770844	-10.914117	Best practices as code using RuboCop	https://careers.velory.com/blog/posts/49020-best-practices-as-code-using-rubocop	ubuwaits
30045015	11.644912	-7.8870673	story	11.0	212.0	1642932565	10.172494	Go is about to get faster	https://dominictobias.medium.com/go-is-about-to-get-a-whole-lot-faster-a50c1e7d60b9	is0tope
30050465	11.733191	-7.4263854	story	11.0	150.0	1642972154	-8.735295	Idris 2: Quantitative Type Theory in Practice	https://arxiv.org/abs/2104.00480	otoburb
30070597	11.845053	-7.1285186	comment	11.0	32.5	1643109662	6.9678607	As a non-professional and in essence beginner programmer who likes to learn about programming and writes simple to moderately complicated scripts I have to say I am currently in the mindset of not nee...		account-5
30098793	11.897574	-7.4237266	comment	11.0	51.0	1643280394	7.079332	>The author contrasts this with K8s by saying that K8s is declarative. This is not the important distinction.I feel like declarative is some kind of technical manual meme for the last few years. I don...		carlmr
30169077	11.8248005	-7.165506	story	11.0	22.0	1643748682	-9.023041	Please, stop pushing for static typing in Python		wheelerof4te
30488196	11.68228	-7.1644125	comment	11.0	43.0	1645968447	-7.950123	I've used dependency injection heavily in Java in previous jobs, and, later, spent a few years doing Golang at another job. I never missed it.What does dependency injection give you that a simple comb...		BobbyJo
30514155	11.86271	-7.269996	comment	11.0	35.5	1646143067	6.9493194	"The author lost me in the introduction.> ""Ohhh, an OO pattern with a couple of one-liner lifecycle methods is just WAY too much code!  Higher likelihood for errors and worse developer experience.""...>..."		StevePerkins
30524726	11.951511	-7.4030614	comment	11.0	33.5	1646205820	9.0759535	"I think the author is so enamored with Smalltalk that they no longer see how quirky and non intuitive the Smalltalk syntax is. Case in point:    ourList := { 1. 2. 3 }.
    ourList collect: [:in | in ..."		hota_mazi
30675182	11.809653	-7.140277	story	11.0	147.0	1647278466	5.0395713	Catalog of Design Patterns (2017)	https://refactoring.guru/design-patterns/catalog	charlieirish
12766493	12.137062	-7.863672	story	11.0	128.0	1477100093	-3.1209142	Category Theory for the Working Hacker [video]	https://www.infoq.com/presentations/category-theory-propositions-principle	louthy
12783279	11.984265	-7.737031	comment	11.0	41.0	1477346376	10.42393	Nice link. One related question : where have you used Haskell in real life. Do some top companies use Haskell to solve problems		androidfox
13012411	12.162092	-7.6026983	comment	11.0	29.0	1479801104	-10.760197	If you were a developer with 10 yoe looking for something new to get into, what would you choose at this moment and thinking about the near future: Haskell, Scala or F#?		almata
13064331	11.655496	-7.7683215	story	11.0	33.0	1480439272	-7.6991653	.NET Core vs. Golang	https://groups.google.com/forum/#!topic/Golang-nuts/_6K8SpMFsTM	vikas0380
13320193	11.696001	-7.906019	comment	11.0	37.0	1483551073	10.216507	This seems like an odd engineering choice.  Presumably the effort to create a python->go translator would be non-trivial.  Why not just start rewriting components into Go, and migrating them out of Python, leaving python as essentially the presentation layer at most?		Twirrim
13381280	11.836906	-7.2968855	story	11.0	175.0	1484217929	9.214465	What lies beneath async/await in C#?	http://foreverframe.pl/what-lies-beneath-asyncawait-in-c/	goorion
13394420	11.982094	-7.7199507	story	11.0	189.0	1484339364	10.417655	Rasa: Extremely modular text editor built in Haskell	https://github.com/ChrisPenner/rasa	poiuz
13449728	11.651895	-7.964318	story	11.0	108.0	1484999994	-13.119953	Jocko – Kafka implemented in Golang	https://github.com/travisjeffery/jocko	cube2222
27902296	12.3306875	-7.0353055	story	11.0	45.0	1626841291	13.183642	The four noisy horsemen of Perl hate	https://phoenixtrap.com/2021/07/20/the-four-noisy-horsemen-of-perl-hate/	todsacerdoti
12154460	11.960771	-7.415774	comment	11.0	49.0	1469388655	7.1782603	I think the functional vs OO debate is being done with a very narrow point of view.Functional came before OO and there are reasons why it became much more popular- it had much better, easier and simpl...		Illniyar
12190562	11.989304	-7.7549314	story	11.0	347.0	1469831847	10.395399	A founder's perspective on 4 years with Haskell	http://baatz.io/posts/haskell-in-a-startup/	mightybyte
12240023	12.088175	-7.861073	story	11.0	54.0	1470519015	10.387187	Hask is not a category	http://math.andrej.com/2016/08/06/hask-is-not-a-category/	snaky
12288640	11.9568815	-7.721251	story	11.0	108.0	1471235406	10.410642	The Four Flaws of Haskell	http://neilmitchell.blogspot.com/2016/08/the-four-flaws-of-haskell.html	kccqzy
12377620	11.823459	-7.305435	comment	11.0	69.5	1472407751	8.671872	For ages now, I've been telling people that the best best code, produced by the most experienced people, tends to look like novice code that happens to work --- no unnecessary abstractions, limited an...		quotemstr
12482017	11.627994	-7.9467454	story	11.0	200.0	1473703072	10.19973	Golang concepts from an OOP point of view	https://github.com/luciotato/golang-notes/blob/master/OOP.md	markkit
35312905	11.780328	-7.8326116	story	11.0	9.0	1679826211	10.136802	Ask HN: Is it possible to compile TypeScript to Golang?		alexbezhan
28015798	11.615651	-7.885539	story	11.0	117.0	1627712590	10.19498	Air – Live reload when developing with Go	https://github.com/cosmtrek/air	justinclift
28463279	11.6712885	-7.9290605	comment	11.0	49.5	1631136442	10.043117	From the article:> I’ve largely covered sqlc’s objective benefits and features, but more subjectively, it just feels good and fast to work with. Like Go itself, the tool’s working for you instead of a...		fprog
28515256	11.843401	-7.1669626	comment	11.0	38.5	1631559270	7.8785825	"I'm relatively an FP newbie, and I have a few questions.1. I've never seen the ""pipe"" notation you talk about in any lang except bash, which is not an FP right? In which languages does ""|"" denote func..."		davidatbu
28548356	12.142553	-7.8837523	comment	11.0	47.5	1631769837	-3.202233	I've recently been studying category theory, mostly from Riehl's book, a few years after finishing my undergraduate math degree at a well-regarded school.  I can't help but feel a little cheated that ...		benrbray
28641788	11.77263	-7.201902	comment	11.0	36.5	1632488890	-9.169124	I would call myself an extremely experienced and knowledgable C# programmer with 10+ years of experience and even I found a few things surprising or new in this guide. I think C# async/await implement...		dustinmoris
22407745	11.995046	-7.7533603	comment	11.0	38.0	1582574076	10.4120245	To paraphrase what's said about fusion energy: Haskell is the language of the future and always will be.I love Haskell, but there's really not a single shred of evidence that programming's moving towa...		dcolkitt
22486470	11.897955	-7.3253922	story	11.0	110.0	1583347228	10.335911	Is Go Duck-Typed?	https://bionic.fullstory.com/is-go-duck-typed/	bschaeffer
22680965	11.7186775	-7.177725	story	11.0	58.0	1585098700	9.560325	LambdaMOO takes a new direction (1992)	https://www.cc.gatech.edu/classes/cs8113h_98_spring/LTAND.html	meanie
22809358	11.954699	-7.4502354	comment	11.0	31.0	1586310679	7.3448544	There are a hardcore group of developers that love functional languages. Whenever I look it just looks pointlessly complicated.Maybe its because I'm not smart enough? Given that 99% of software is not...		rb808
22857135	11.753777	-7.2262125	comment	11.0	43.0	1586794708	-6.055637	I would love to get to a point where my laptop can be managed as immutable infrastructure.All the big chunks of data are already isolated into redundant partitions, but it’s the system config that’s t...		jedberg
22906703	12.30982	-7.0800347	story	11.0	130.0	1587205465	13.159054	Raku vs. Perl	https://p6steve.wordpress.com/2020/04/17/raku-vs-perl-save-70/	lizmat
23078595	11.794302	-7.129399	comment	11.0	54.5	1588675912	10.462704	> I don't do a lot of artificial intelligence, natural-language processing or machine-learning research, but if I did, Haskell would be my first pick there too.This is definitely a dated article, sinc...		krebs_liebhaber
23164340	11.81366	-7.1386127	story	11.0	57.0	1589354329	-9.012296	Cluegen – Python Data Classes From Type Clues	https://github.com/dabeaz/cluegen	gigatexal
23307699	11.899501	-7.389319	story	11.0	91.0	1590470666	7.370827	Designing a functional programming language: Yatta	https://functional.blog/2020/05/25/designing-a-functional-programming-language-yatta/	todsacerdoti
23334618	11.795176	-7.1613703	comment	11.0	93.0	1590652142	-7.910367	None of these situations require an object to do. You can always have a function that takes in an extra ‘state’ argument. You can then do everything you said by passing in the corresponding state values.		amw-zero
23368451	11.64981	-7.896491	story	11.0	115.0	1590919468	10.226432	Show HN: Go Micro – A distributed systems development framework	https://go-micro.dev?new	asim
33165608	11.7169695	-7.428358	comment	11.0	37.5	1665506903	-8.751318	"> [Dependent types] can by used to guarantee things like ""applying 'concat' to a list of length X and list of length Y returns a list of X+Y"".As a curious bystander, what else? When are dependent type..."		klabb3
33221780	11.90433	-7.4016304	story	11.0	83.0	1665904810	1.9282205	Application-as-a-Function Thinking	https://doridori.github.io/Architecture-Application-as-a-Function/	kodroid
33279841	11.942877	-7.4128866	story	11.0	43.0	1666295697	7.2696433	What If the Team Hates My Functional Code?	https://jrsinclair.com/articles/2022/what-if-the-team-hates-my-functional-code/	tilt
33330521	12.1305685	-7.4804735	comment	11.0	60.0	1666706277	-11.344527	I'm currently working on a project which has both Java and Kotlin and I really have to say that I like working on the Java parts much better than on the Kotlin parts. I find coroutines a really strang...		dr_faustus
33352440	11.69216	-7.8008804	story	11.0	37.0	1666838706	10.176412	We Switched from Python to Go (2017)	https://getstream.io/blog/switched-python-go/	metadat
33404658	12.329713	-7.0495367	story	11.0	89.0	1667218266	13.16925	The Perl Foundation will now be known as The Perl and Raku Foundation	https://news.perlfoundation.org/post/announcements	Amorymeltzer
33561775	11.654251	-7.941599	comment	11.0	51.0	1668179568	10.202304	I've enjoyed writing Go for years. However, it's not been the language that does it for me. It's been the combination of features and ecosystem that makes it a default.It's hard to explain, but the la...		Xeoncross
33718278	11.955987	-7.2386208	comment	11.0	39.5	1669206107	-10.429906	Meh.. I code in Common Lisp at home and Java professionally and I've never understood why people praise the CLOS so much. Like the author says, 99% of the time you don't have a reason to use OOP, and ...		dj_mc_merlin
33794874	12.35116	-7.1414666	comment	11.0	55.0	1669764597	12.37327	As I type this, every top-level comment here is a criticism or a nitpick. A cool new feature is being added to Ruby. People have done difficult and meaningful work that benefits others. And this is th...		tjstankus
33877510	11.951065	-7.633403	story	11.0	101.0	1670319212	-11.065444	Exercises for understanding Haskell Lenses (2019)	https://williamyaoh.com/posts/2019-04-25-lens-exercises.html	revskill
33943644	11.739207	-7.2894845	comment	11.0	32.0	1670770150	-8.853419	I still feel there's space for a middle ground language. One that:* compiles (ie no interpreter/VM required)* is statically typed and has generics* has exceptions or option types* doesn't have a borro...		nprateem
34004739	11.698754	-7.3982625	comment	11.0	53.0	1671134010	-8.736902	> Improved type inference> We want types, not boilerplate. Sometimes it's best to let the compiler figure out what things are by itself.At first I thought type inference was cool too, but more and mor...		TulliusCicero
26630932	11.648773	-7.978615	story	11.0	181.0	1617073886	10.253381	Down the Golang Nil Rabbit Hole	https://blog.urth.org/2021/03/27/down-the-golang-nil-rabbit-hole/	zdw
26941713	11.785251	-7.3207335	comment	11.0	31.5	1619439471	6.8432736	I’m not trying to start a flame war, but I’m genuinely curious: if you want and need all this, why not use Java?Java has all the strong typing and static checking, all you need is to type a lot more words.		motoboi
27298506	11.638256	-7.8882375	story	11.0	118.0	1622080716	10.195687	Functional Programming in Go with Generics	https://ani.dev/2021/05/25/functional-programming-in-go-with-generics/	ngaut
27354725	12.335471	-7.02778	story	11.0	40.0	1622556503	13.183137	Should Perl die gracefully?	https://phoenixtrap.com/2021/06/01/should-perl-die-gracefully/	mjgardner
37762079	11.941894	-7.6440544	comment	11.0	32.0	1696405282	10.412851	Since first reading it, I’ve come to disagree with this post. For personal projects, my main language is Haskell, which Hague counts as a ‘puzzle language’. But that doesn’t match my experience: if I ...		bradrn
37764965	11.776308	-7.3481164	comment	11.0	38.5	1696426620	-8.909117	Strong static typing is useful in the environment where the code is not adequately tested.  That's because tests adequate to make the code bulletproof will also detect the problems strong static typin...		pfdietz
37776376	11.7248955	-7.347461	story	11.0	43.0	1696496586	-8.863555	Literature review on the benefits of static types (2014)	https://danluu.com/empirical-pl/	lemper
37952079	11.631215	-7.95776	story	11.0	105.0	1697772384	10.174835	Does Go Have Subtyping?	https://journal.stuffwithstuff.com/2023/10/19/does-go-have-subtyping/	grep_it
38127276	11.79879	-7.035086	comment	11.0	49.0	1699011757	8.928262	A lot of comments here focus on the readability, conciseness, and expressiveness of Java streams compared to other languages. IMO they are missing the point and are just reiterating the same complaint...		manjalyc
14718051	11.751847	-7.7404366	story	11.0	258.0	1499433260	10.116319	Show HN: Globe visualizations in Golang	https://github.com/mmcloughlin/globe	mmcloughlin
14757148	12.249038	-7.6107535	story	11.0	70.0	1499897722	11.942435	Why I Don’t Regret Moving Our Android App to Scala	https://www.lucidchart.com/techblog/2017/07/05/why-i-dont-regret-moving-our-android-app-to-scala/	walkingolof
15070324	11.651111	-7.975759	story	11.0	143.0	1503385435	10.229056	Things about programming I learned with Go	http://mjk.space/5-things-about-programming-learned-with-go/	mjkpl
15095460	12.468472	-7.185657	story	11.0	119.0	1503624434	12.278271	Goby: A new Ruby-inspired language written in Go	https://github.com/goby-lang/goby	mcone
15142245	11.765774	-7.3254128	story	11.0	60.0	1504201874	-8.879575	The Unreasonable Effectiveness of Dynamic Typing for Practical Programs [video]	https://www.infoq.com/presentations/dynamic-static-typing	tosh
15161151	11.984459	-7.739359	comment	11.0	34.5	1504442693	10.425756	Is there any fully formed application made with Haskell out there?		CyberDildonics
15533407	12.041845	-7.1742353	story	11.0	67.0	1508769121	9.1535635	Promise.prototype.finally	https://developers.google.com/web/updates/2017/10/promise-finally	stablemap
23621483	11.985049	-7.7376823	comment	12.0	80.0	1592953371	10.417073	I think the focus on Haskell is missing the mark a bit.Haskell is about programming language researchers and enthusiasts having a excellent example language to try out ideas. Over the years it has tur...		quickthrower2
23628569	11.607646	-7.6571374	comment	12.0	39.5	1593010748	7.1912136	> Programming in a functional style often includes using functions as values by passing them in arguments, returning them from other functions, assigning them to variables for later execution, and so ...		rectang
23893859	12.311667	-7.30621	story	12.0	133.0	1595208188	7.103143	Pharo Smalltalk Overview	https://www.pharo.org/features	7thaccount
24007354	11.839187	-7.0892324	story	12.0	104.0	1596191785	-10.74103	Exactly-Once Initialization in Asynchronous Python	https://nullprogram.com/blog/2020/07/30/	ingve
24060109	11.878243	-7.2609606	comment	12.0	40.5	1596630973	-9.0472975	'strongly typed language increases the productivity' How was this tested? Was there a control group? I would argue that currently Javascript and Python have been greatly improving the productivity. Th...		kummappp
24272329	12.094688	-7.8676796	comment	12.0	85.5	1598369270	0.75550896	For those who don't know, Jane Street is one of the best performing algorithmic trading firms on Wall Street. Probably the largest Ocaml shop on earth.It's a lucrative job for strong programming talen...		davidu
24397718	11.989847	-7.3121095	comment	12.0	37.0	1599467851	-8.892196	As someone with a background in Objective-C, Swift, C++, C# and Java, and currently using Ruby, I'm looking for my next language for web development. Elixir sounds like a step up from Ruby, but I real...		m12k
20040516	11.723999	-7.2956805	comment	12.0	35.0	1559139826	-8.819789	I have to be honest, I don't understand why people care so much about typed languages.I almost never face type related issues, and when they occur they are the easiest to catch.		conanbatt
20215292	11.724882	-7.8408318	story	12.0	23.0	1560877306	10.241744	Ask HN: Why Isn't Go Functional?		acolytic
20320873	11.864128	-7.314617	comment	12.0	52.0	1561932554	7.1069474	"Unpopular answer: pure fashion.There's nothing wrong with object methods (that's 100% pure syntax vs. a function call) and an implicit ""this"" scope for symbols (which is just a limited form of dynamic..."		ajross
20358970	12.069962	-7.206294	story	12.0	97.0	1562286527	9.159684	Mistakes we make using JavaScript Promises	https://www.betamark.com/blog/mistakes-using-javascript-promises/	betamark
20449595	12.07863	-7.691768	story	12.0	190.0	1563282183	10.377336	Owl – OCaml Scientific Computing	http://ocaml.xyz	alokrai
20455246	11.6564045	-7.9770813	comment	12.0	123.5	1563322995	10.2357025	This hits at something fundamental about Go, which is what I like the most about it...It's a language intended to have few primitives with an emphasis on code being transparent and errors being values...		wybiral
20541079	11.660829	-7.942184	story	12.0	52.0	1564217126	10.247391	Go's updated generic proposal (Contracts)	https://github.com/golang/proposal/blob/4a54a00950b56dd0096482d0edae46969d7432a6/design/go2draft-contracts.md	simonz05
20713085	11.912667	-7.736602	comment	12.0	48.5	1565942863	10.433472	"There is a persistent myth that ""A Haskell program that compiles is correct by definition""Indeed it is ""correct"" in the sense that it has a very high likelihood (maybe 90% ?) of doing what the program..."		anonnybonny
20857592	11.641085	-7.788132	story	12.0	37.0	1567412888	10.239069	Ask HN: Why is Google in love with purposely-impaired languages like Go, Dart?		nnq
20956516	11.655579	-7.979312	story	12.0	238.0	1568322745	10.14362	Building a Better Go Linker	http://golang.org/s/better-linker	rjammala
13664127	11.787769	-7.0794396	story	12.0	268.0	1487283779	5.1804185	Design Patterns – A comprehensible guide	https://github.com/kamranahmedse/design-patterns-for-humans/blob/master/README.md	kamranahmed_se
13763483	12.169866	-7.523812	story	12.0	168.0	1488374987	9.267915	Kotlin 1.1 Released with JavaScript Support, Coroutines and more	https://blog.jetbrains.com/kotlin/2017/03/kotlin-1-1/	lynfogeek
14099645	11.800041	-7.4090347	comment	12.0	41.0	1492017123	0.1617007	"I have yet to see the benefits of point-free programming. Don't get me wrong it's fun, but in my opinion it makes reasoning about programs much harder. I am a huge fan of functional programming nevertheless.The opinion that a point-free style is ""beautiful code"" seems pretty esotheric to me."		davnn
14148506	12.02671	-7.7920895	comment	12.0	34.0	1492616497	10.411556	The big problem I've had with Haskell is that even after gaining a pretty good understanding of the language (including monads and such) I still can't fathom how to do anything real with it.Exercises ...		NickM
14224118	11.609268	-7.878806	story	12.0	282.0	1493423428	10.0362215	Visualizing Concurrency in Go (2016)	http://divan.github.io/posts/go_concurrency_visualize/	velodrome
14246615	12.003104	-7.7783537	story	12.0	12.0	1493735341	10.427691	Ask HN: What programming feature can't you live without?		shakna
14267882	12.002799	-7.767009	story	12.0	102.0	1493925846	10.416572	Haskell vs. Ada vs. C++ an Experiment in Software Prototyping Productivity (1994) [pdf]	http://www.cs.yale.edu/publications/techreports/tr1049.pdf	aaronchall
14374488	12.255578	-7.5632496	comment	12.0	52.5	1495192511	-11.368347	WTF? Some people are spending serious money on a PR campaign to promote Kotlin this week!		eng_monkey
14389978	12.196883	-7.511248	comment	12.0	57.0	1495411022	-11.389928	Kotlin is exactly what Google needed to light a fire under Oracle's ass. They've been dragging their feet on new Java features for years. That, and the constant threat of Oracle closing Java back up a...		slackingoff2017
14400809	11.959233	-7.4993596	story	12.0	111.0	1495544924	10.159183	James Gosling, the ‘Father of Java,’ joins Amazon Web Services	https://siliconangle.com/blog/2017/05/23/james-gosling-father-java-joins-amazon-web-services/	petercooper
14416335	12.220151	-7.6308346	story	12.0	99.0	1495706907	11.940867	Ammonite: Scala Scripting	http://www.lihaoyi.com/Ammonite/	lihaoyi
30817537	12.232224	-7.477203	comment	12.0	76.0	1648352913	-11.31275	"I'd be more interested if there was VSCode support. The JetBrains folks  response was ridiculous and dismissive:
https://discuss.kotlinlang.org/t/official-support-for-visual...Apparently they refuse t..."		esprehn
31149801	11.650137	-7.9398394	story	12.0	172.0	1650848826	10.239385	Crimes with Go Generics	https://christine.website/blog/gonads-2022-04-24	psxuaw
31272116	12.094975	-7.854859	story	12.0	186.0	1651751268	10.443576	Real World OCaml – 2nd Edition (2021)	https://dev.realworldocaml.org/	_benj
31378896	11.760902	-7.110007	story	12.0	208.0	1652542157	7.3615813	Java record pattern matching in JDK 19	https://openjdk.java.net/jeps/405	SemanticStrengh
31664501	12.012038	-7.764717	story	12.0	230.0	1654674633	10.426522	Learn Haskell by building a blog generator – a project-oriented Haskell book	https://lhbg-book.link	gilmi
25517532	11.865258	-7.2013526	story	12.0	21.0	1608730939	8.687173	Writable Getters	https://lea.verou.me/2020/12/writable-getters/	feross
25639717	11.965776	-7.726456	story	12.0	121.0	1609802889	10.402034	The Evolution of a Haskell Programmer (2001)	http://willamette.edu/~fruehr/haskell/evolution.html	phonebucket
25882922	11.837358	-7.191092	comment	12.0	48.0	1611416084	8.703789	The weird thing is you dont even need getters and setters, you can make member variables public (and final if you have to). Just its the Java culture that is so wedded to it. I like Java but its the culture that makes everything soo complicated.		u678u
26007726	11.666979	-7.5311985	comment	12.0	39.0	1612304357	10.085541	I think calling your generic type 'Element' is a bad choice -- that's shadowing a built-in type (https://developer.mozilla.org/en-US/docs/Web/API/Element) and it makes the code confusing to read at a ...		calebegg
26102215	12.234943	-7.632932	comment	12.0	92.0	1613056224	11.943931	I am a Scala programmer & think it's a great language.  Here are some arguments for why not Scala:* Li's libs (os-lib, upickle, utest) have clean public interfaces, but most Scala ecosystem libs are h...		MrPowers
26134400	11.947993	-7.461605	comment	12.0	38.5	1613325044	7.272306	"This I don't understand: Seems like whenever functional paradigms are discussed, the whole same stuff is always repeated without failure: on one hand fuzzy generalizations like ""pure functions"", ""no s..."		j1elo
26222048	11.63794	-7.931037	comment	12.0	62.5	1613981667	10.21028	But no one said Go was easy. It's just simple and easy to reason about. There's a huge benefit to something doing exactly what it says. No hidden behaviours, no overly complex syntax, nothing like tha...		Philip-J-Fry
26220807	11.62472	-7.906257	comment	12.0	69.5	1613967574	10.023279	"Going by their first example, the fact that I couldn't write   list.delete(value)

without realizing it involves a linear search is considered one of the benefits of Go.That said, I agree Go could use..."		harikb
35727111	11.649847	-7.9012637	story	12.0	65.0	1682599081	10.218585	I wrote a tool in Go to write Sequence Diagrams in Go	https://github.com/MrIceman/go-uml	icemanx
35792949	11.695563	-7.105665	story	12.0	50.0	1683056084	-8.670849	Make your Python functions return something meaningful, typed, and safe	https://returns.readthedocs.io/en/latest/index.html	dr_kiszonka
36007493	11.8914	-7.0389285	comment	12.0	39.0	1684535311	-8.533928	I'm excited about this for probably different reasons than most: I think Typescript could be a more ergonomic way to develop ML models than Python because you can automatically infer and check tensor ...		newhouseb
36399650	11.655331	-7.970939	comment	12.0	53.5	1687234695	10.22994	Could someone explain why is Go so hyped?In my personal opinion it is just not a good language, and I think many judge it based on some false basis that it is somehow “close to the hardware” because i...		kaba0
28908264	11.783617	-7.3364916	comment	12.0	49.5	1634578977	-8.946779	The main argument for dynamic typing is speed in prototyping but I find that's opposite for me.  I'm much more comfortable rapid prototyping and ripping stuff apart when I have a strongly static typed...		wvenable
29033003	11.919929	-7.4183273	story	12.0	191.0	1635461156	7.2167926	Seemingly impossible functional programs (2007)	http://math.andrej.com/2007/09/28/seemingly-impossible-functional-programs/	federicoponzi
29354219	11.686029	-7.220014	story	12.0	133.0	1637961508	-8.829408	New in C# 10: Easier Lambda Expressions	http://dontcodetired.com/blog/post/Whats-New-in-C-10-Easier-Lambda-Expressions	FairDune
29366614	11.700213	-7.230637	story	12.0	65.0	1638079926	9.126696	A Case for Asynchronous Computer Architecture (2000) [pdf]	http://avlsi.csl.yale.edu/~rajit/ps/async-case.pdf	mahami
29605708	11.973694	-7.727878	story	12.0	181.0	1639844721	10.428169	Wingman for Haskell	https://haskellwingman.dev/	dunefox
34454158	11.765695	-7.337594	story	12.0	275.0	1674227619	-8.680096	Idris: A language for type-driven development	https://www.idris-lang.org/	peter_d_sherman
34615886	11.796174	-7.117829	comment	12.0	43.0	1675278562	-8.970199	I maintain Python code bases for a living, and feel that the language has simply been pushed too far. Static typing in Python doesn't give you the advantage of actually static typing and even IDE supp...		lordgroff
34848329	11.668147	-7.83059	story	12.0	22.0	1676738912	10.205609	Go is 17 times more sustainable than Python	https://sustainful.tech/blog/golang-is-17-times-more-sustainable-than-python-in-depth-side-by-side-comparison/	mrsnippets
34868843	11.673143	-7.9327054	story	12.0	307.0	1676906108	10.162222	Opossum: Cross-platform web browser written in Golang, optimized for Plan 9	https://github.com/psilva261/opossum	euclaise
34955003	11.643486	-7.449747	comment	12.0	45.0	1677495118	-8.8331175	One of most frequent usage of a type system is literal types.Haskell, Rust,... and modern programming languages fail to do it. The only exception is Typescript.For example, simple way to adding a extended boolean type:type MyBoolean = null | true | false.Ortype MyRange = 3 | 4 | 5Curious.		revskill
35053912	11.594247	-7.3064885	comment	12.0	80.5	1678186464	6.885621	"Note that this basically requires your language to have ergonomic support for sum types, immutable ""data classes"", pattern matching.The point is to parse the input into a structure which always uphold..."		bruce343434
39497110	11.800116	-7.2678432	story	12.0	85.0	1708828676	6.1313915	Asynchronous clean-up	https://without.boats/blog/asynchronous-clean-up/	hermanradtke
36836358	12.138793	-7.8754797	story	12.0	124.0	1690126778	-3.1962197	An invariant from category theory solves a problem in mathematical ecology [pdf]	https://www.maths.ed.ac.uk/~tl/genova/genova_talk.pdf	peanutcrisis
37147724	11.688207	-7.264118	story	12.0	178.0	1692196597	-8.816366	λ Calculus (2013) [pdf]	https://www.cs.rpi.edu/academics/courses/spring11/proglang/handouts/lambda-calculus-chapter.pdf	behnamoh
37247841	11.973903	-7.7414284	comment	12.0	100.0	1692878689	10.412504	As someone that has also written haskell for about a decade and moved away from it as a breadwinner recently (but for other reasons - I simply wanted to filter job offerings based on social utility ra...		pyrale
24425028	11.851294	-7.1678987	comment	12.0	45.0	1599680476	-10.91449	I recently moved some code base from py/django to c#/aspdotnetcore.C# probably has some of the best async primitives of any language. I still managed to be bitten by the very common issue of error log...		throwaway13337
24427978	11.888954	-7.1340885	story	12.0	151.0	1599701437	9.465988	Sync vs. Async Python: What Is the Difference?	https://blog.miguelgrinberg.com/post/sync-vs-async-python-what-is-the-difference	gilad
24428825	11.599316	-7.226352	comment	12.0	51.0	1599711214	9.085824	Not mentioned in TFA, but I'm utterly convinced that the only compelling reason for async is to avoid the per-thread stack memory allocation of 8MB per thread or whatever it is, in order to be able to...		doubleunplussed
24593923	12.230968	-7.173328	comment	12.0	52.0	1601066758	12.349174	">Rightward assignment statement is added.
>fib(10) => xThis is exactly the kind of stuff I hated when I had to work with ruby in my last gig and why I will never accept a job using it again - soo many..."		reader_mode
24605124	11.665717	-7.3275623	comment	12.0	49.0	1601195411	-8.839541	"I code without types. My ""proof"", that types do not pay for themselves goes like this:Every time I encounter a bug (during coding, testing or in production) I make a note what type of bug it was and h..."		TooCreative
24677614	11.686816	-7.2621255	story	12.0	172.0	1601804590	-8.786374	Lambda Calculus Diagrams (2015)	https://tromp.github.io/cl/diagrams.html	fanf2
24710565	12.06004	-7.7703476	story	12.0	161.0	1602091761	10.397169	Generalizing 'jq' and Traversal Systems using optics and standard monads	https://chrispenner.ca/posts/traversal-systems	todsacerdoti
24986774	12.223425	-7.638955	comment	12.0	67.0	1604470928	11.935347	I've always loved Scala and Scala 3 is shaping up to be extremely exciting. Love the new ADTs and braceless syntax: really gives the language a cleaner and more ML inspired feel.No other conventional ...		smabie
38982374	11.683114	-7.2889867	comment	12.0	34.0	1705167551	-4.2593203	"I have a question about array languages that I've been wondering for a while: lets say you have the task ""find all numbers smaller than N where predicate P is true"". You know, like, ""find all primes s..."		OskarS
32737886	11.6260605	-7.939488	story	12.0	365.0	1662476005	10.186307	Vulnerability Management for Go	https://go.dev/blog/vuln	mfrw
32917179	11.733216	-7.38726	comment	12.0	53.5	1663704869	-8.70019	A great idea.  Now, everyone that learns this stuff, show some restraint!The drawback of a powerful type system is you can very easily get yourself into a type complexity mudhole.  Nothing worse than ...		cogman10
32116219	12.499287	-7.0198073	comment	12.0	89.5	1657960451	12.345042	> Unlike Python, in Ruby… There are a number of shortcuts that, although give you more to remember, you quickly learn. They tend to make Ruby fun and very productive.I use Python, but have never tried...		boberoni
32366022	12.013187	-7.791928	story	12.0	92.0	1659772995	10.42685	Monad Confusion and the Blurry Line Between Data and Computation	https://www.micahcantor.com/blog/monad-confusion/	susam
32482174	12.021933	-7.342833	comment	12.0	40.0	1660654758	9.025806	As someone who had to maintain two applications written entirely using the FRP Paradigm (Rx in Kotlin/Swift with a heavy focus on FRP principles), I am fascinated the idea but I absolutely hated the e...		cybrox
22131325	11.681846	-7.8645864	story	12.0	188.0	1579810063	10.216447	See Python, See Python Go, Go Python Go (2016)	https://blog.heroku.com/see_python_see_python_go_go_python_go	amzans
18989879	11.92292	-7.184808	comment	12.0	33.0	1548346144	-10.3325615	> The log system will be overhauled - one thing in particular we'll take from Typescript are diagnostic error codes. Each error, warning, and sometimes notice will be given a unique code that will be ...		CGamesPlay
19166910	12.158395	-7.214402	story	12.0	77.0	1550185168	8.5230665	Entity–component–system (ECS) back and forth	https://skypjack.github.io/ecs-baf-part-1/	skypjack
19190709	11.63041	-7.8166037	comment	12.0	57.0	1550499802	10.202041	Maybe a Go programmer can enlighten me - without generics, how can you have data structures implementations that can contain more than one type? Do you have to have one linked list implementation for ...		whatshisface
19292263	12.045926	-7.7708154	comment	12.0	46.0	1551578135	10.439134	What reasons are there for choosing OCaml over Haskell, either from a learning perspective or a practical one?		jonahx
19316247	11.686131	-7.2480354	story	12.0	176.0	1551843787	-9.097522	Let over Lambda – Common Lisp Book (2008)	https://letoverlambda.com/	matthberg
19462041	11.964195	-7.453806	story	12.0	135.0	1553259126	7.254814	The Functional Style (2018)	https://codurance.com/2018/08/09/the-functional-style-part-1/	yogthos
19619519	11.851279	-7.3766556	comment	12.0	31.5	1554848052	7.035293	I have recently been digging into composition as related to object oriented programming.Can someone summarize why this is better than say inheritance?I can possibly understand the value of composition...		Vanderson
19777499	11.6329975	-7.2869577	story	12.0	174.0	1556539053	-7.407687	How Many Type Parameters Can a Java Method Have?	http://justinblank.com/experiments/howmanytypeparameterscanajavamethodhave.html	pplonski86
19824082	11.737903	-7.1592393	story	12.0	126.0	1556938586	-8.957521	Manifold: Java Type-Safe Metaprogramming, Structural Typing, Extension Methods	https://github.com/manifold-systems/manifold	jeanlucbernard
15885310	11.977211	-7.710277	story	12.0	161.0	1512818291	10.413905	Reading Simple Haskell	https://soupi.github.io/rfc/reading_simple_haskell/	Tehnix
16282001	11.856654	-7.6327186	story	12.0	116.0	1517495075	10.319601	Return type polymorphism in Haskell	https://eli.thegreenplace.net/2018/return-type-polymorphism-in-haskell/	osopanda
16290574	11.628593	-7.948597	story	12.0	179.0	1517580637	10.184298	Writing space invaders with Go	https://sausheong.github.io/posts/space-invaders-with-go/	dcu
17128450	12.315665	-7.0165157	comment	12.0	52.5	1527015135	13.179835	This is truly a down moment, to be sure, but it's pretty telling that the site became too hard to maintain because it's written in old Perl.I'm not a Perl hater. I like Perl! I got my start in Perl and spoke at a YAPC::NA a few years ago. It's telling, is all I'm saying. It tells us something.		kyoob
17361414	11.783249	-7.0365157	comment	12.0	48.0	1529545615	-1.6116911	I will always wish that Python weren't the lingua franca of sorts for machine learning.For me, it's always frustrating to have to guess the types of parameters in functions without appropriate documen...		thosakwe
17771302	11.606582	-7.8595433	story	12.0	199.0	1534384589	10.097054	A dull, resilient stream processor in Go	https://github.com/Jeffail/benthos	ngaut
17773512	11.6258335	-7.9336514	story	12.0	122.0	1534416322	-11.667205	Gource – a software version control visualization tool	http://gource.io/	ColinWright
21170683	11.990217	-7.7394433	comment	12.0	77.5	1570351675	3.1534426	No one has ever been able to explain to me why I should use Haskell instead of something else. I get answers about idempotence and list comprehension and strong typing which are great tactics but I ne...		jimbob45
21223497	11.870538	-7.4364796	comment	12.0	33.0	1570795467	-8.754709	Call me crazy, but I find the sub-optimal “takes a lot of parameters” approach to be more readable, maintainable, and junior dev-able. Don’t get me wrong, I see why that’s not ideal, but currying just...		jtdev
21238802	11.862381	-7.2652235	story	12.0	116.0	1570949234	6.9861336	Object-Oriented Programming and Essential State	https://theartofmachinery.com/2019/10/13/oop_and_essential_state.html	ingve
21364413	11.839151	-7.587438	story	12.0	147.0	1572105383	10.209509	Dex: A research language for array processing in the Haskell/ML family	https://github.com/google-research/dex-lang	azhenley
21440932	11.826679	-7.396261	story	12.0	354.0	1572870104	8.06005	Algebraic Structures: Things I wish someone had explained about FP	https://jrsinclair.com/articles/2019/algebraic-structures-what-i-wish-someone-had-explained-about-functional-programming/	jrsinclair
21473777	11.629425	-7.524586	comment	12.0	49.0	1573139077	9.252307	Isn't it kind of a poor design choice that Rust will not actually begin execution of the function until `.await` is called? If I didn't want to execute the function yet, I wouldn't have invoked it. Aw...		ralusek
21490731	11.645148	-7.939032	story	12.0	366.0	1573296163	10.154269	Let's Create a Simple Load Balancer with Go	https://kasvith.github.io/posts/lets-create-a-simple-lb-go/	UkiahSmith
21552633	11.729295	-7.9707584	comment	12.0	40.0	1573912551	10.216753	People who likes Go's simplicity, have you ever looked into the even simpler syntax of lisps? For example, Clojure have minimal amount of syntax, that once you know, you know the entire language. The ...		capableweb
21566546	11.967282	-7.7115417	story	12.0	235.0	1574100408	10.4247055	A Dead-Simple Web Stack in Haskell	https://williamyaoh.com/posts/2019-11-16-a-dead-simple-web-stack.html	phonebucket
21760520	12.2537565	-7.559367	story	12.0	158.0	1576051481	-11.384745	Making Games with Kotlin	https://kotlin.christmas/2019/11	veiset
39282941	11.657037	-7.9407434	comment	12.0	34.0	1707265826	10.19578	For those using Go for production, do you get to switch to the latest versions quickly, or do you get stuck in older releases?In the open a lot of projects seem to avoid newish features. I like to use...		emmanueloga_
17892918	11.657049	-7.9555445	story	12.0	148.0	1535823054	10.216832	Notes on the Go2 Generics Draft	http://jmoiron.net/blog/notes-on-the-go2-generics-draft/	ainar-g
17933844	11.663175	-7.458449	comment	12.0	33.0	1536324802	10.414247	> If programm compiles - it almost always just works.I can never understand this claim when people make it about languages like Haskell and ReasonML.How is the compiler catching your logic bugs? If yo...		chrisseaton
18059284	11.814703	-7.3467655	comment	12.0	33.0	1537808365	-8.9211855	I disagree that engineering is the best approach to writing software. I think this is the fundamental difference between people who prefer static vs dynamic typing. People who prefer static typing are...		batteryhorse
18375533	11.637165	-7.9553537	story	12.0	210.0	1541334103	10.21961	GoCity – Code City metaphor for visualizing Go source code	https://go-city.github.io	eqcho
18568029	11.657112	-7.87008	story	12.0	129.0	1543572622	10.057804	ObjectBox: Fast object-oriented database for Go	https://github.com/objectbox/objectbox-go	thomaslewis
18871162	11.988947	-7.7460885	comment	12.0	36.0	1547089201	10.427454	I don't understand why this is noteworthy.I think maybe this is when you decide 'maybe our language has failed'.  Or at least admit it's a toy language that hasn't been properly engineered to be effec...		ltbarcly3
18903043	11.688967	-7.6627064	story	12.0	49.0	1547475299	9.988772	Ask HN: What are the UK/EU based remote-only companies or remote friendly?		hackerm0nkey
30294550	11.912572	-7.2084746	comment	12.0	55.5	1644536800	1.8767345	There's a really wonderful talk that I've recommended to almost everyone I've ever worked with called Simple Made Easy[1] by Rich Hickey. I also struggled to explain why I hated state so much. You can...		agency
12554334	11.671715	-7.9355555	story	12.0	146.0	1474518185	10.112608	Gallium – Build Desktop Applications in Go and HTML	https://github.com/alexflint/gallium	kevinwuhoo
12774024	11.781229	-7.3543096	story	12.0	63.0	1477238263	-8.9177685	Static typing will not save us from broken software	http://www.drmaciver.com/2016/10/static-typing-will-not-save-us-from-broken-software/	nickmain
12850918	11.921656	-7.2660995	story	12.0	454.0	1478041311	9.171819	Async/await support in Firefox	https://blog.nightly.mozilla.org/2016/11/01/async-await-support-in-firefox/	dallamaneni
12863971	12.237839	-7.6426506	comment	12.0	31.0	1478181621	11.964681	Does anyone have any tips for learning Scala? I want to learn the language, it looks very interesting, and I have some familiarity with Scheme, Haskell and Ocaml, but I just don't know how to start. What should I read? What should I build?		ThePawnBreak
13011858	11.982903	-7.74418	story	12.0	142.0	1479792584	10.410363	Mastering Time-to-Market with Haskell	https://www.fpcomplete.com/blog/2016/11/mastering-time-to-market-haskell	Tehnix
13105944	11.701057	-7.8951945	story	12.0	152.0	1480951768	10.11582	Mux – A lightweight, fast HTTP request router for Go	https://github.com/donutloop/mux	loppers92
13129540	11.962635	-7.4745626	story	12.0	181.0	1481193537	7.285049	Why Functional Programming Matters (1984) [pdf]	http://www.cse.chalmers.se/~rjmh/Papers/whyfp.pdf	tosh
13258037	11.67816	-7.273826	story	12.0	206.0	1482755957	-8.753848	An Introduction to the Lambda Calculus (2015)	http://www.learningclojure.com/2015/11/an-introduction-to-lambda-calculus.html	tosh
13387059	11.689253	-7.953207	story	12.0	167.0	1484263211	10.15887	Buffalo – MVC Web Framework for Go	http://gobuffalo.io	sjellis
13426310	12.23566	-7.6261425	comment	12.0	39.0	1484748103	11.939914	After Java 8 is there any benefit to using Scala? It seems Java has caught up and has the benefit of being lighter.		jaimex2
13498654	11.935147	-7.4675694	comment	12.0	38.5	1485508723	7.2358823	I still don't understand what all the hype is about pure functional programming.Sometimes mutations are useful. There are lot of good programming design patterns which depend on mutations.Also, always...		cryptica
13545758	12.168072	-7.5013742	comment	12.0	36.0	1485986455	-10.597485	You're seeing us strike a balance here. As I point out in the post, there are millions of C# developers, and tens of thousands of F# developers.However, we think F# has awesome growth potential, and i...		MadsTorgersen
27998150	11.838931	-7.3703437	comment	12.0	78.0	1627575270	7.2048893	Making the item system polymorphic was ultimately a mistake, but that was a big one.Q: Why was this was a mistake?A: When you declare a class that’s a kind of item, it locks you into that structure mu...		hprotagonist
12190952	12.013151	-7.7696743	comment	12.0	32.5	1469837352	10.442535	Maybe someone can chime in here - I would love to be working full-time in Haskell, but I'm having trouble figuring out just how much knowledge I need upfront. I know I would be reasonably good at it a...		radicality
12264376	11.9802065	-7.725871	story	12.0	198.0	1470858821	10.437739	Intero for Emacs: complete interactive development program for Haskell	https://commercialhaskell.github.io/intero/	primodemus
12327803	11.674447	-7.9082203	story	12.0	105.0	1471718368	10.086564	Redcon – Fast Redis-compatible server framework for Go	https://github.com/tidwall/redcon	tidwall
12533971	11.680909	-7.88434	story	12.0	19.0	1474312885	10.169265	Ask HN: New OSS Projects: Go or Java?		arrsingh
35261219	11.619168	-7.915345	comment	12.0	32.5	1679494132	10.174119	How does one handle zero downtime deployments with single-file golang binaries? I remember I tried this setup some time ago and I couldn't successfully manage cleanly to accomplish no downtime when de...		danwee
28039734	11.7949705	-7.2988167	comment	12.0	62.5	1627925236	-8.924026	In 2021, I find it hard to justify using a dynamically typed language for any project that exceeds a few hundreds of lines. It's not a trade off, it's a net loss.The current crop of statically typed l...		hota_mazi
28254221	11.648864	-7.958284	comment	12.0	49.0	1629520483	10.2026415	Every HN thread about go: go is useless because it lacks generics.Go adds generics.HN thread: I don't want this.Good case study about the people drawn to comment on a topic.		tedunangst
28293057	11.598339	-7.8339624	story	12.0	101.0	1629830352	10.102864	Golang vs. C# (.NET 5.0) at Benchmarks Game	https://benchmarksgame-team.pages.debian.net/benchmarksgame/fastest/go-csharpcore.html	iamdual
28624483	11.842545	-7.0488467	story	12.0	106.0	1632362699	-6.6039042	Haku: A toy functional programming language based on literary Japanese	https://codeberg.org/wimvanderbauwhede/haku	sohkamyung
22383118	12.073427	-7.8409367	story	12.0	124.0	1582293755	10.406874	Programming a space invader in OCaml and OpenGL: lessons learned	https://marmelab.com/blog/2020/02/21/ocaml-and-opengl-in-practice.html	juliendemangeon
22443624	11.632642	-7.9747243	comment	12.0	87.0	1582905494	3.8992805	The author spent a lot of time dwelling on Window's filesystems, at which point many of the readers got bored and started commenting. There are actually a couple of excellent points in here, the major...		fhood
22624845	11.819943	-7.184965	story	12.0	104.0	1584596515	-9.002266	MonkeyType: A system for Python that automatically generates type annotations	https://github.com/instagram/MonkeyType	chenzhekl
22844930	11.677374	-7.0606236	comment	12.0	50.0	1586647177	8.035632	> ... it insulates the student from the javac command line program, and the command line environment itselfSuch a misguided article. The Java language has (quite literally) nothing to do with `javac`....		dvt
23058913	12.13539	-7.879146	comment	12.0	42.0	1588513247	-3.1685688	Can someone explain to me what Category theory actually contributes to mathematics beyond the contents of abstract algebra, graph theory, and set theory? Because every interesting result I've seen jus...		lr4444lr
33132323	11.593883	-7.895826	story	12.0	7.0	1665237597	10.206883	Which language to choose? Wanna develop an IoT solution		BroccoliPark
33398806	11.654939	-7.900743	story	12.0	173.0	1667164599	10.130623	Ent: An Entity Framework for Go	https://github.com/ent/ent	thunderbong
33434235	11.92339	-7.4526296	comment	12.0	45.0	1667389884	7.282911	Imo functional programming is one of those things that makes sense from a theoretical perspective, but comes with compromises when it comes to reality.The thing about functional programming is that th...		skohan
33596401	11.986426	-7.1220956	comment	12.0	44.5	1668443015	9.108198	I've been struggling with wrapping my head around asynchronous programming with callbacks, promises and async/await in JS, however I think it's finally clicking after watching these YouTube videos and...		luuuzeta
33620824	11.837972	-7.379798	comment	12.0	66.0	1668592511	7.290988	GOOD: having large chunks of code that runs (mostly) without side-effects. As projects get bigger global state can trip you up, so try to keep it in check. That's where the real value of functional pr...		gizmo
33676959	11.732543	-7.287551	story	12.0	70.0	1668906422	-8.084516	Closures and Objects Are Equivalent (2013)	https://wiki.c2.com/?ClosuresAndObjectsAreEquivalent	Jtsummers
34078183	11.635347	-7.945064	comment	12.0	63.0	1671612448	10.185699	I do not understand the appeal of go.>  The proposal argues that Golang developers are forced to work around language when writing hash-based data structures like Tries or concurrent hash maps. Develo...		voz_
34104052	11.5912695	-7.1642027	comment	12.0	50.5	1671789475	8.632026	I'm considering building a Java compatible VM that only has static memory allocation to avoid GC.Why hasn't this been done by anyone yet?Also confused why this does not have a binary windows release y...		bullen
26535004	12.206832	-7.455334	comment	12.0	52.0	1616368315	12.768975	The big problem nobody talks about with actors and message passing is non-determinism and state.If two otherwise independent processes A and B are sending messages to a single process C, it's non-dete...		chrisseaton
26541235	12.220945	-7.6463985	comment	12.0	63.5	1616423010	11.909338	I had a startup that went all in on scala.  By the time we realized we chose the wrong language it was too late.Complexity is the primary issue with the scala language... when the whole goal is to hav...		anthonyskipper
26750512	11.721951	-7.766655	comment	12.0	51.0	1617976049	10.260797	CD Projekt's GoG client has a feature where users can write Python extensions [0] for third party account integrations. To enable this, they ship an entire Python interpreter alongside the app binary ...		css
26788177	11.762698	-7.142356	story	12.0	128.0	1618288716	-8.971428	Python 3 Types in the Wild: A Tale of Two Type Systems [pdf]	https://www.cs.rpi.edu/~milanova/docs/dls2020.pdf	zdw
26903391	12.165676	-7.6833982	comment	12.0	45.5	1619102940	11.844144	I'm particularly interested in why several languages show up on both lists, namely SQL, Scala, Haskell, Shell, and HTML if you count it.One possible explanation (that supports the author's main thesis...		TheFlyingFish
26930667	11.613602	-7.2307396	story	12.0	214.0	1619331092	5.039889	Dynamic Programming vs. Divide-and-Conquer (2018)	https://trekhleb.dev/blog/2018/dynamic-programming-vs-divide-and-conquer/	trekhleb
26935150	11.670832	-7.9296246	comment	12.0	41.5	1619374943	10.199737	This comment is so hilarious to me. I was a Java programmer for 8+ years. Go throws all the boilerplate away. The multiple layers of abstraction. The AbstractFactorySingletonProxyFactoryBeans.  All th...		dimitrios1
26989747	11.842466	-7.346771	comment	12.0	38.5	1619755748	-7.7612376	After reading all the comments of many confused and curious, here is when inheritance is bad and why so _in the absence of any performance considerations_.First, inheritance from an interface/trait is...		valenterry
27335576	11.720536	-7.271178	comment	12.0	48.5	1622400957	-8.892602	"> The older I get, the more I appreciate dynamic languages.Exactly the opposite for me. I just can't stand hovering a variable or a parameter and not getting its exact type, or typing ""."" after a vari..."		ggregoire
37775962	11.990095	-7.738092	story	12.0	116.0	1696492806	10.418858	An alternative front end for Haskell?	https://gilmi.me/blog/post/2023/10/05/haskell-alternative-frontend	amalinovic
37939369	11.598377	-7.7922215	story	12.0	69.0	1697697958	9.789935	Durable Coroutines for Go	https://github.com/stealthrocket/coroutine	greenSunglass
37965217	11.6742115	-7.943279	story	12.0	130.0	1697878773	10.156541	Go Package for Building Progressive Web Apps	https://go-app.dev	greenSunglass
38009649	11.666188	-7.821805	comment	12.0	42.0	1698213931	-9.504385	I’ve noticed that I never quite feel at ease with the Python programs I write.I’ve been using Go to create projects, both big and small, since 2013.Almost every time I attempt to build something even ...		guessmyname
38126625	11.647487	-7.209184	comment	12.0	43.5	1699006634	-5.225653	"    long numberOfWords =
        Stream.of(""the"", """", ""fox"", ""jumps"", ""over"", ""the"", """", ""dog"")  // (1)
            .filter(Predicate.not(String::isEmpty))                     // (2)
            .coll..."		mjburgess
38156519	11.649153	-7.8245354	story	12.0	60.0	1699224632	9.944191	Show HN: Ts-Chan – Go-Like Concurrency Primitives for TypeScript/JavaScript	https://github.com/joeycumines/ts-chan	joeycumines
38270210	11.754356	-7.300806	comment	12.0	40.0	1699998143	-7.7774324	"> ""Oh, and good luck finding a book that explains how to write a type-checker, let alone one that covers more practical topics such as supporting sub-typing, generics, and so on""I bought _Practical Fo..."		zengid
14826261	11.6352825	-7.7320137	story	12.0	53.0	1500716767	10.127647	Should Go 2.0 support generics?	https://dave.cheney.net/2017/07/22/should-go-2-0-support-generics	spacey
14997996	11.978142	-7.0447593	story	12.0	121.0	1502548135	-6.7040615	Immutable Data Structures That Are Compatible with Normal JS Arrays and Objects	https://github.com/rtfeldman/seamless-immutable	kasbah
15199859	11.780408	-7.333156	comment	12.0	66.0	1504876163	-8.892224	I was all ready to savage his opinion after reading the headline but I agree looking at my architecture that I designed for the company I work for, CPU isn't the bottleneck. Every time I try to increa...		scarface74
15440108	11.992077	-7.7242875	story	12.0	179.0	1507622249	10.371688	Functor-Oriented Programming	http://r6.ca/blog/20171010T001746Z.html	szatkus
15457343	11.703306	-7.7538705	story	12.0	251.0	1507810002	10.068796	Go Python, Go: Stream Processing for Python	https://blog.wallaroolabs.com/2017/10/go-python-go-stream-processing-for-python/	spooneybarger
15527726	12.282753	-7.30526	story	12.0	199.0	1508691719	6.9818635	The Xerox Alto, Smalltalk, and Rewriting a Running GUI	http://www.righto.com/2017/10/the-xerox-alto-smalltalk-and-rewriting.html	kens
15599854	11.740936	-7.343305	story	12.0	112.0	1509529881	9.148387	Project Loom: Fibers and Continuations for the Java Virtual Machine	http://cr.openjdk.java.net/~rpressler/loom/Loom-Proposal.html	setra
15602658	12.501833	-7.885215	story	12.0	106.0	1509552773	10.439618	Dueling Rhetoric of Clojure and Haskell	http://tech.frontrowed.com/2017/11/01/rhetoric-of-clojure-and-haskell/	dukerutledge
15671794	11.640832	-7.9349465	comment	12.0	52.5	1510338115	10.231679	Things I love about go:1. Probably the best ecosystem out there.2. Go routines3. (Enabled by (2) actually) `defer`4. That I can add interfaces implementations to structs I don’t own5. No exceptions.Ac...		noncoml
23498742	11.754969	-7.2170024	comment	13.0	87.0	1591966809	9.152112	How is this result surprising? The point of coroutines isn't to make your code execute faster, it's to prevent your process sitting idle while it waits for I/O.When you're dealing with external REST A...		phodge
23574072	11.829119	-7.659848	story	13.0	219.0	1592571759	10.338009	Linear types are merged in GHC	https://www.tweag.io/blog/2020-06-19-linear-types-merged	todsacerdoti
23762207	11.671336	-7.1081715	comment	13.0	50.0	1594145343	10.736542	This is cool stuff, but it's kind of sad that Python doesn't have any of this stuff.Apparently the Pythonic way to do anything is to repeat yourself, type a lot, implement flatten yourself, and crippl...		smabie
24008839	11.831746	-7.3112197	comment	13.0	87.5	1596205497	7.0660067	This doesn't speak to what I consider some of the most dangerous parts of OOP, which include the assumptions that tightly binding data and code is helpful, and that statefulness is fine to freely sprinkle throughout your program.		lgessler
24172336	12.437822	-7.347132	story	13.0	164.0	1597525020	7.112222	The BEAM Has Spoiled Me	https://gvaughn.github.io/2020/08/08/beam_spoiled_me.html	clessg
24357430	12.019631	-7.145372	comment	13.0	47.5	1599077155	-10.223725	> If everyone hates it, why is OOP still so widely spread?Most importantly, not everyone hates it. There are definitely warts involved, and IMO the 2 biggest warts are now largely understood:1. People...		hn_throwaway_99
20151055	12.031588	-7.645902	story	13.0	411.0	1560202137	5.02104	From Design Patterns to Category Theory (2017)	https://blog.ploeh.dk/2017/10/04/from-design-patterns-to-category-theory/	behnamoh
20278496	11.713959	-7.3862095	story	13.0	103.0	1561494156	-8.68073	Implement with Types, Not Your Brain	https://reasonablypolymorphic.com/blog/typeholes/	Tehnix
20829676	12.325863	-7.051311	comment	13.0	84.5	1567088211	-8.422984	To my mind, the blockers for Perl 6 adoption in order of importance have been:1. The name, saddling it with the legacy of Perl. (I say this as someone who really liked working with Perl back in the wa...		mkozlows
20903163	11.981793	-7.7543325	story	13.0	119.0	1567856355	10.433434	Why Haskell Is Important	https://www.tweag.io/posts/2019-09-06-why-haskell-is-important.html	lelf
13781467	11.60425	-7.1468716	story	13.0	252.0	1488528915	8.059148	Algebraic Subtyping (2016) [pdf]	https://www.cl.cam.ac.uk/~sd601/thesis.pdf	mpweiher
13925213	12.205278	-7.69487	story	13.0	134.0	1490123343	10.381624	JSCaml: A compile-time transformation from JavaScript to OCaml	https://github.com/facebookexperimental/JSCaml	henridf
14138437	12.039274	-7.5575566	comment	13.0	34.5	1492520571	7.3047957	Does anyone have a solid place to start with functional programming? Don't really care too much about the language it's associated with but would really like to jump into learning the concepts behind it.		crush_xc
14253187	11.787224	-7.3696856	story	13.0	95.0	1493787834	7.480334	Miranda: A non-strict functional language with polymorphic types (1985) [pdf]	http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.105.6357&rep=rep1&type=pdf	tjalfi
14373817	12.248127	-7.5141664	story	13.0	32.0	1495182849	-11.387769	Kotlin is like TypeScript	https://gi-no.github.io/kotlin-is-like-typescript/	yoshiokatsuneo
14377941	11.665885	-7.2083383	story	13.0	266.0	1495216461	9.167878	P: A programming language for asynchrony, fault-tolerance and uncertainty	https://www.microsoft.com/en-us/research/blog/p-programming-language-asynchrony/	JulienRbrt
14537691	11.6002	-7.9476805	story	13.0	172.0	1497278311	10.128538	Gopher-OS: A Proof of Concept OS Written in Go	https://github.com/achilleasa/gopher-os	ingve
31254005	11.611055	-7.8645964	story	13.0	151.0	1651614356	10.049381	Go's Concurrency Examples in Java 19	https://mccue.dev/pages/5-2-22-go-concurrency-in-java	emccue
31516072	12.31057	-7.0244765	comment	13.0	55.0	1653554409	13.180928	I'm curious to know if anyone out there building new systems in Perl or is it all just maintenance mode for Perl based systems?		lordofgibbons
25652503	11.620411	-7.964935	story	13.0	62.0	1609888039	10.224366	We repurposed NPM to publish and distribute Go binaries for our internal CLI	https://medium.com/xendit-engineering/how-we-repurposed-npm-to-publish-and-distribute-our-go-binaries-for-internal-cli-23981b80911b	boxbag
25917162	11.754443	-7.363221	comment	13.0	63.5	1611676239	-8.863225	People who use dynamically-typed languages are finally realizing that having to simulate a type-checker mentally is a bad idea.Also, many statically-typed languages do not take advantage of the flexibility a good type-system can provide. For example, C, C++, Java.		nynx
25933698	11.911127	-7.358419	comment	13.0	42.0	1611780360	7.0751796	I found when I started programming I never used OOP. Then I used it too much. And then recently I use it incredibly sparingly. I think this is most people's experience.However, there are certain situa...		jphoward
26024085	11.663495	-7.468028	story	13.0	177.0	1612431948	10.303951	The visitor pattern is essentially the same thing as Church encoding	https://www.haskellforall.com/2021/01/the-visitor-pattern-is-essentially-same.html	lelf
26301944	11.933549	-7.557421	comment	13.0	40.0	1614600397	10.278381	I love the things I learned from Haskell, but I find it so painful to actually use :( Similar case with Erlang...I wonder if there are any functional languages that aren’t weird? Like they call the fi...		Shish2k
35646895	12.326291	-7.0324006	comment	13.0	35.5	1682027510	13.180437	What companies are still using Perl on the backend?I know FastMail does. IMDB was in Perl before Amazon acquisition, and was told was rewritten in java over several years. Any other interesting mentions?		winrid
35801293	11.993176	-7.7521324	story	13.0	186.0	1683115263	10.446176	Haskell in Production: Standard Chartered	https://serokell.io/blog/haskell-in-production-standard-chartered	NaeosPsy
28837838	11.782171	-7.148603	story	13.0	39.0	1634031620	1.9865714	Classes often aren't the simplest tool for the job	https://adamzerner.bearblog.dev/classes-often-arent-the-simplest-tool-for-the-job/	adamzerner
28863793	12.108519	-7.507465	comment	13.0	42.0	1634217165	-10.581146	If you want to dabble in functional, C# is actually a compelling option now. Switch expressions and LINQ can take you a long way.I strongly believe that functional programming is not a good fit for 10...		bob1029
28881408	11.856149	-7.0692797	comment	13.0	77.5	1634323302	-10.758251	If this effort succeeds (and I hope it does) now Python developers will need to contend with the event-loop albatross of asyncio and all of its weird complexity.In an alternate Python timeline, asynci...		ferdowsi
28979593	12.098366	-7.2049313	comment	13.0	83.0	1635094024	8.146078	Unfortunately it looks like Java is going to evolve enough to take the wind out of the sails of Kotlin and Scala for most dev shops. I guess the positive take is that those improvements might not have happened without the efforts to develop better JVM languages.		cageface
29104961	11.812366	-7.2480774	story	13.0	99.0	1636017763	7.3377395	Coconut: Simple, elegant, Pythonic functional programming	http://coconut-lang.org/	EntICOnc
29223880	12.282112	-7.3154488	story	13.0	148.0	1636952262	7.0594554	The Rise and Fall of Commercial Smalltalk (2020)	http://www.wirfs-brock.com/allen/posts/914	spitfire
29571417	12.160647	-7.514392	story	13.0	120.0	1639601240	-10.649183	F# Good and Bad	https://danielbmarkham.com/f-good-and-bad/	amscotti
29573959	12.2824745	-7.3140626	story	13.0	110.0	1639619850	7.094032	I can read C++ and Java but I can’t read Smalltalk (2000) [pdf]	http://www.eli.sdsu.edu/courses/spring01/cs635/readingSmalltalk.pdf	tjalfi
29649635	11.640828	-7.9293103	story	13.0	192.0	1640182837	10.205634	Generics facilitators in Go	https://rakyll.org/generics-facilititators/	throwaway894345
34232732	11.864247	-7.278711	story	13.0	86.0	1672760133	6.9820194	The concept of class invariant in object-oriented programming	https://arxiv.org/abs/2109.06557	PaulHoule
34409705	11.671938	-7.850082	comment	13.0	58.5	1673937081	10.188059	How substantial is Go's standard library compared to Python's? I know Go has support for what I would consider to be the bare minimum for what modern standard libraries must provide (http, crypto, tim...		7to2
34635985	11.65278	-7.9726167	story	13.0	19.0	1675387970	10.183823	Ask HN: Cool side projects you have written using Golang		mr_o47
34640381	12.118773	-7.868107	story	13.0	124.0	1675428602	10.428414	Haskell is not category theory	https://pema.dev/2023/02/01/haskell-not-ct/	Laaas
35039244	12.083382	-7.8304286	story	13.0	115.0	1678096617	10.445252	Nix-Powered Development with OCaml	https://dimitrije.website/posts/2023-03-04-nix-ocaml.html	dimitrijer
39439463	11.777269	-7.2283177	story	13.0	35.0	1708422619	-8.337973	Returns: Brings functional programming to Python land	https://returns.readthedocs.io/en/latest/	BerislavLopac
37039777	12.114874	-7.5043497	comment	13.0	50.5	1691436995	-10.601849	I want to like F#, but the syntax is just bonkers to me. There are keywords which are used in only one context, such as `then`, and sometimes an operator means something in one context, but something ...		shortrounddev2
37130138	11.732039	-7.3408084	story	13.0	222.0	1692073287	9.145572	Features of Project Loom incorporated in JDK 21	https://jdk.java.net/loom/	philonoist
37197686	11.677778	-7.0244145	story	13.0	125.0	1692525532	-8.55759	The Pattern Language of Project Xanadu	https://maggieappleton.com/xanadu-patterns	warpspin
37282385	11.708531	-7.041273	story	13.0	267.0	1693141878	-8.801509	Python Type Hints – *args and **kwargs (2021)	https://adamj.eu/tech/2021/05/11/python-type-hints-args-and-kwargs/	ekiauhce
37541176	11.61659	-7.927697	comment	13.0	64.5	1694920598	10.190912	Go's major selling point to me is that you can ship one binary, nothing beats that.Python, Node, Java all have to pre-install lots of dependencies before you can use them, fine for developers, not so ...		synergy20
19271393	11.620637	-7.899877	story	13.0	189.0	1551363142	10.2206135	Gomacro: Interactive Go interpreter and debugger with generics and macros	https://github.com/cosmos72/gomacro#gomacro---interactive-go-interpreter-and-debugger-with-generics-and-macros	ingve
19365133	11.682656	-7.1913548	story	13.0	60.0	1552361102	-8.885421	The End of Dynamic Languages	http://elbenshira.com/blog/the-end-of-dynamic-languages/	Scarbutt
19462515	11.929357	-7.507739	comment	13.0	44.0	1553262993	7.348644	I find the authors definition of functional programming really insufficient. FP should not be defined in terms of immutable state, but as mathematical functions as the basic form of abstraction, and t...		ilovecaching
19690152	11.635315	-7.0178213	story	13.0	76.0	1555586252	4.571064	Positional-only Parameters for Python	https://lwn.net/Articles/785245/	l2dy
19864505	11.894893	-7.367837	comment	13.0	80.0	1557364695	7.0601187	One of the most memorable eye-opening moments in my (admittedly fractured) education was when when my software engineering professor listed the 3 fundamental tenets of OO—inheritance, encapsulation, a...		macintux
19959592	11.607331	-7.9504194	story	13.0	55.0	1558354500	10.256815	Go to Statement Considered Harmful (1968) [pdf]	https://homepages.cwi.nl/~storm/teaching/reader/Dijkstra68.pdf	tosh
15882776	11.871979	-7.419493	story	13.0	70.0	1512773114	-8.707927	Currying is not idiomatic in JavaScript	http://2ality.com/2017/11/currying-in-js.html	fagnerbrack
16129507	12.069698	-7.598898	story	13.0	128.0	1515718313	9.734353	Kotlin: The Problem with null	http://arturdryomov.online/posts/kotlin-the-problem-with-null/	bmc7505
16523246	12.28167	-7.515234	comment	13.0	42.5	1520275398	12.842226	I haven't given myself the opportunity to sit down and play with an actor model. But in the meantime, despite reading literature such as this, I have trouble envisioning what it actually entails day-t...		always_good
16834181	11.67705	-7.937551	story	13.0	217.0	1523656188	10.1544895	Go gets preliminary WebAssembly support	https://go-review.googlesource.com/c/go/+/102835	ricksnyke
16900693	12.112407	-7.564988	comment	13.0	36.0	1524460593	7.341566	As someone who 1) knows a few functional programming concepts, 2) hasn't programmed extensively in a functional language, 3) would like to get productive fast (in web development), but also 4) wants a...		edjroot
17154083	12.237179	-7.5383058	story	13.0	85.0	1527258904	5.03214	On “From Java to Kotlin and Back Again”	https://zsmb.co/on-from-java-to-kotlin-and-back-again/	edem
17174106	11.706043	-7.9315367	story	13.0	75.0	1527533843	10.205507	Ask HN: Best Resource to learn web programming using Go?		sharmi
17257635	11.710627	-7.388551	comment	13.0	50.0	1528390257	-8.717285	"Recently I talked with my cousin, who is also a software engineer, about dependent types, contract programming, invariants, and all that. Among other things I've told him about ""type-safe printf"" that..."		ainar-g
17457633	12.099654	-7.8728604	story	13.0	246.0	1530716710	10.439461	Plans for OCaml 4.08	https://blog.janestreet.com/plans-for-ocaml-408/	girvo
17502346	12.2825985	-7.632721	story	13.0	105.0	1531258109	11.929601	The Last Hope for Scala's Infinity War [video]	https://www.youtube.com/watch?v=v8IQ-X2HkGE	luu
17536602	11.869877	-7.3422246	comment	13.0	57.5	1531682721	9.19687	I'm waiting for the day when 'async' will be the default function type and 'await' will be the default type of function call.If anywhere down the callstack a function needs to await something it has t...		TekMol
17575139	11.977119	-7.7137995	story	13.0	47.0	1532096155	10.47319	When Is Haskell More Useful Than R or Python in Data Science?	https://www.forbes.com/sites/quora/2018/01/24/when-is-haskell-more-useful-than-r-or-python-in-data-science/#1daa23e69e47	mathattack
21109731	11.641406	-7.9617295	story	13.0	221.0	1569792613	10.214287	Creating the Go Programming Language [audio]	https://changelog.com/gotime/100	wwarner
21280702	11.948449	-7.423519	comment	13.0	68.0	1571309826	-10.428226	Richard Gabriel’s famous essay “Worse is better” (https://www.jwz.org/doc/worse-is-better.html) is an interesting perspective on why Lisp lost to C. In a way, the same arguments (simplicity vs consist...		lewisjoe
21303492	11.988269	-7.736245	story	13.0	151.0	1571570912	10.436219	Software projects written in Haskell	https://serokell.io/blog/top-software-written-in-haskell	lelf
21554087	12.057754	-7.157278	story	13.0	69.0	1573928547	-13.959139	Lombok Saved My Ass	https://devolution.tech/how-lombok-saved-my-ass/	tuczi
39172251	12.490428	-7.0980153	comment	13.0	48.0	1706497346	12.342474	"It's painful to see method_missing called out as a first class solution in the first creature https://www.exceptionalcreatures.com/bestiary/NoMethodError.... . ""Practical Ruby"" has three chapters dedi..."		stevebmark
39176688	11.756948	-7.168487	story	13.0	42.0	1706538953	-8.956471	Python types have an expectations problem	https://medium.com/@sgorawski/python-types-have-an-expectations-problem-ea71a8645ce8	sgorawski
17870150	11.721066	-7.2660427	story	13.0	157.0	1535564530	6.701677	Transmuting Low-Value Programmer Cred into High-Value Status Illegibility	https://daedtech.com/transmuting-low-value-programmer-cred-into-high-value-status-lllegibility/	PretzelFisch
17915371	11.61002	-7.859586	story	13.0	197.0	1536127267	10.155173	How the Go runtime implements maps efficiently without generics	https://dave.cheney.net/2018/05/29/how-the-go-runtime-implements-maps-efficiently-without-generics	kjeetgill
18075098	11.723273	-7.816636	comment	13.0	51.5	1537964272	10.086566	I'm not sure Java is worth the effort at this point. If I'm going to have to keep updating every 6 months, I would rather use Go, which seems to have all that Java has to offer + the backing of a huge corporation.		wheresvic1
18088060	11.696466	-7.2367096	comment	13.0	64.5	1538078624	9.126833	"all i could think of is ""stop writing python"". it seems to me that a lot of these problems are fundamental problems with python. i continue to not understand why anybody likes python the language.the ..."		nikofeyn
18383779	12.313485	-7.05568	story	13.0	94.0	1541436560	13.152051	Raku Perl 6.d [pdf]	https://marketing.perl6.org/id/1541379592/pdf_digital	kbenson
18532514	11.8459015	-7.327357	comment	13.0	96.5	1543230825	-8.91001	I for one can't wait for Typed FP to become mainstream as soon as possible. I think the prevalence of scripting languages in large systems today is a quirk of history.In early 2000s, as the web was gr...		jasim
18548591	11.644606	-7.945799	story	13.0	182.0	1543369438	10.226825	Aminal: Golang terminal emulator from scratch	https://github.com/liamg/aminal	guessmyname
29767517	11.791263	-7.2716374	comment	13.0	72.0	1641119391	-8.82314	I think types should express intend.This adds more 'value' to the code for people than allowing them to switch their brains off because something is 'unlikely' to happen. A large class of bugs exists ...		virtualritz
30518094	11.643939	-7.924875	story	13.0	288.0	1646159953	10.212104	How generics are implemented in Go 1.18	https://github.com/golang/proposal/blob/master/design/generics-implementation-dictionaries-go1.18.md	komuW
12646390	11.879416	-7.412614	story	13.0	207.0	1475691723	7.2703586	Total Functional Programming [pdf]	http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.106.364&rep=rep1&type=pdf	adgasf
12789644	12.097989	-7.0317326	comment	13.0	42.5	1477415417	8.929471	The JavaScript language has improved a lot since node.js was released (Promises and soon async/await).  However, at this point NPM has a lot of libraries written in the old callback style and it seems...		bit_logic
13108543	11.684138	-7.9333544	story	13.0	45.0	1480966608	10.204773	Gongular – A new web framework for Go	https://github.com/mustafaakin/gongular	CSDude
13215960	11.935672	-7.4378953	story	13.0	161.0	1482190220	7.3122635	Choosing Functional Programming for Our Game	https://mooistudios.com/2016/12/19/choosing-functional-programming-game/	swannodette
27639494	12.012475	-7.7583995	comment	13.0	62.0	1624686809	10.421119	I strongly dislike Haskell's focus on theory. Just show me examples on how to get things done and then the concepts will become clear. The Haskell and mathematics communities too often act like ivory ...		jtwaleson
12054690	11.961189	-7.7233152	story	13.0	124.0	1467976338	10.427733	New haskell-lang.org	https://haskell-lang.org/announcements	Rabble_Of_One
12214720	11.888806	-7.390328	story	13.0	39.0	1470185916	7.410917	A Bit of Heresy: Functional Languages Are Overrated (2010)	http://www.benrady.com/2010/06/a-bit-of-heresy-functional-languages-are-overrated.html	bertiewhykovich
12419939	11.609893	-7.7223725	story	13.0	105.0	1472922209	-12.251802	Golang – encoding/csv: Reading is slow	https://github.com/golang/go/issues/16791	chinmaymk
28036282	12.493032	-7.8320284	comment	13.0	88.0	1627911194	-11.132123	I found one of the perceived weaknesses of Clojure (in this article), it being dynamically typed, is a tradeoff rather than a pure negative. But it applies that tradeoff differently than dynamic langu...		dgb23
28334461	11.941665	-7.5716076	comment	13.0	42.0	1630110462	8.91499	There are several languages that are working on solving the composable effects problem that I am aware of:* Pony - capabilities based language inspired by `E`.  Effects are like Rust's (provided by th...		svieira
28414284	11.803091	-7.309519	story	13.0	44.0	1630756702	-8.943435	The Advantages of Flexible Typing	https://www.sqlite.org/draft/flextypegood.html	massysett
28420506	11.747091	-7.1792808	story	13.0	87.0	1630799636	7.0068154	Object-Oriented Programming in C (2019) [pdf]	https://www.state-machine.com/doc/AN_OOP_in_C.pdf	dankoncs
28564021	11.686071	-7.9037757	story	13.0	132.0	1631877556	10.198999	A Go Package for Building Progressive Web Apps	https://go-app.dev/	graderjs
22392561	11.686982	-7.9420123	story	13.0	101.0	1582397311	10.184761	Fiber – Express inspired web framework written in Go	https://github.com/gofiber/fiber	turtlemode
22447685	11.744284	-7.2247806	story	13.0	181.0	1582935801	9.202169	A Hitchhiker’s Guide to Asynchronous Programming	https://github.com/crazyguitar/pysheeet/blob/master/docs/appendix/python-concurrent.rst	crazyguitar
22468494	11.627026	-7.885651	story	13.0	228.0	1583180508	10.066807	A new Go API for Protocol Buffers	https://blog.golang.org/a-new-go-api-for-protocol-buffers	zdw
22892639	11.638865	-7.920915	story	13.0	52.0	1587065498	10.255838	Ask HN: How are you using Go to write production-grade back end services?		llegnaf
23016100	11.966971	-7.6820416	comment	13.0	44.0	1588142135	10.373715	"I like that Haskell exists, but stuff like this article demonstrates why it isn't adopted widely.Imperative programming is the most natural thing for people. ""Do this, then that, then that, in that or..."		twblalock
23248663	11.838376	-7.37384	comment	13.0	42.0	1589991519	7.0231037	"I feel like the real Liskov Subsitution Principle should be ""if you have a subtype P of type S, redesign your code so that there are no subtypes"".Seriously though, I have been a professional developer..."		gregkerzhner
23289563	11.860971	-7.0905323	story	13.0	195.0	1590301102	-10.751424	Guide to Concurrency in Python with Asyncio	https://www.integralist.co.uk/posts/python-asyncio/	LiamPa
23307700	12.294279	-7.3270564	story	13.0	176.0	1590470670	6.9631195	By the Bluebook implementation of Smalltalk-80	https://github.com/dbanay/Smalltalk	homarp
33115719	11.687415	-7.2994127	story	13.0	249.0	1665100391	-8.7646055	Show HN: Lambda-8cc – An x86 C compiler written in untyped lambda calculus	https://github.com/woodrush/lambda-8cc	woodrush
33911278	12.023194	-7.833991	story	13.0	50.0	1670524091	10.412528	Not a monad tutorial	https://johnazariah.github.io/2022/12/06/this-is-not-a-monad-tutorial.html	oumua_don17
33936366	11.912526	-7.656474	story	13.0	86.0	1670703261	10.444395	Haskell, Ada, C++, Awk: An Experiment in Prototyping Productivity (1994) [pdf]	https://www.cs.yale.edu/publications/techreports/tr1049.pdf	Akronymus
33953658	11.707667	-7.196221	story	13.0	73.0	1670845657	2.3127766	How type influences readability	https://fonts.google.com/knowledge/readability_and_accessibility/how_type_influences_readability	marban
33966755	12.310868	-7.0219717	story	13.0	136.0	1670926058	13.168899	Actually Portable Perl	https://computoid.com/APPerl/	tosh
26541050	11.636257	-7.960791	comment	13.0	104.5	1616422411	10.238671	Go is not a simple language. Please learn from my mistakes, and ignore arbitrary metrics like how go has fewer keywords. The complexity doesn't go away, it's hidden away somewhere.If anybody wants to ...		preommr
26658111	12.136213	-7.874569	story	13.0	212.0	1617267298	-3.1536381	Category Theory: Orders	https://boris-marinov.github.io/category-theory-illustrated/04_order/	todsacerdoti
27103033	12.50904	-7.033447	story	13.0	242.0	1620624628	9.182712	Teeing, a hidden gem in the Java API	https://blog.frankel.ch/teeing-java-api/	sidcool
27299570	11.651239	-7.9122047	comment	13.0	48.5	1622091600	10.221338	"I seem to be a bit of an outlier, but I am not looking forward to generics in Go. I don't like the kinds of discussions it attracts...vague hand-wavy arguments about ""expressiveness"" and ""purity"". Exp..."		cle
37766043	11.770622	-7.3428564	comment	13.0	50.5	1696431236	-8.877071	The social pressure to love static typing notwithstanding (think less of me if you will), the reason I got turned off by it eventually are the ivory towers that invariably get built up around them. I'...		nurple
37766749	11.7686825	-7.359385	comment	13.0	50.0	1696433942	-8.896217	"The discussion over whether strong typing is better than weak typing
is settled [1], but not over whether static typing is better than dynamic
typing. Adherents of static typing thinks that the compil..."		bjourne
38110392	12.252936	-7.5669622	story	13.0	90.0	1698912890	-11.383807	Kotlin multiplatform is stable and production-ready	https://blog.jetbrains.com/kotlin/2023/11/kotlin-multiplatform-stable/	cvb941
38122679	11.919461	-7.411989	story	13.0	196.0	1698971962	-10.539115	A new F# compiler feature: graph-based type-checking	https://devblogs.microsoft.com/dotnet/a-new-fsharp-compiler-feature-graphbased-typechecking/	soheilpro
38434585	11.653563	-7.9665365	comment	13.0	112.0	1701103692	10.228427	No matter what your opinion is about Go (as a language), but they nailed it for bigger projects.Go code always looks the same, performance is predictable and fast enough for most programs, and its rea...		phplovesong
38516331	11.642433	-7.894216	story	13.0	89.0	1701692112	2.3117146	Gobs of data (2011)	https://go.dev/blog/gob	ash
38570949	11.616806	-7.476126	comment	13.0	45.5	1702053539	-7.8447137	> Onyx is strictly type-checked. However, the type-inference systems in Onyx usually allow you to omit types.>> x := 10I...Why is this a feature in every new language? Can't we have a language that is...		moss2
15103603	11.9252615	-7.6475205	story	13.0	144.0	1503711545	10.405363	Writing a formally-verified image browser in Coq and Haskell	http://www.michaelburge.us/2017/08/25/writing-a-formally-verified-porn-browser-in-coq.html	MichaelBurge
15111265	12.2597885	-7.6157484	story	13.0	154.0	1503849452	10.3927	BuckleScript: An OCaml to JavaScript compiler	http://yawar.blogspot.com/2017/01/bucklescript-significant-new-ocaml-to.html	jasim
15288189	11.688215	-7.139708	comment	13.0	34.5	1505850709	-6.4926634	Isn't a database global mutable state? Or a filesystem?If global, mutable state is considered problematic when programming in the small (i.e. single program), why is it unquestioned when building much larger, more complicated systems that we also need to reason about?		shalabhc
15387148	11.792701	-7.3490014	comment	13.0	64.5	1506972770	-8.959231	There are 3 main areas of interest in the discussion of benefits of static vs dynamic typing.- Quality (How many bugs)- Dev time (How fast to develop)- Maintainability (how easy to maintain and adapt ...		alkonaut
24606663	11.773167	-7.2095532	comment	13.0	49.5	1601215397	10.065708	A lot of people in the comments are saying how they started off in Java, or C, and hated types, but eventually grew to love them.I started off in PHP. It was wild. Anything could be anything. Refactor...		pavel_lishin
24915643	11.85532	-7.2994013	comment	13.0	45.5	1603863978	6.037019	Move most of your code to pure functions, that is the number one mantra to solve most scaling problems in software development. Even in an OOP paradigm, it makes sense to make almost all objects as pu...		kumarvvr
24986396	12.242857	-7.647838	story	13.0	191.0	1604463117	-5.3339195	Scala 3.0.0-M1	https://github.com/lampepfl/dotty/releases/tag/3.0.0-M1	cwhy
25089694	11.805896	-7.320462	comment	13.0	62.5	1605319669	-8.938996	> Two decades ago, it was widely argued that dynamic programming languages were more productive because you didn't have to spend time dealing with type signatures. The only reason, then, to use a stat...		marta_morena_28
38692167	11.651195	-7.974852	story	13.0	262.0	1702963400	10.303677	Gokrazy – Go Appliances	https://gokrazy.org/	lagniappe
38781277	11.886328	-7.3034024	story	13.0	89.0	1703679586	7.046569	Pitfalls of object oriented programming (2009) [pdf]	https://harmful.cat-v.org/software/OO_programming/_pdf/Pitfalls_of_Object_Oriented_Programming_GCAP_09.pdf	davikr
38873903	11.593557	-7.956625	comment	13.0	87.0	1704412531	10.17765	> - Restricting the language to its target use: systems programming, not applications or data science or AI...Go has a GC and a very heavy runtime with green threads, leading to cumbersome/slow C inte...		the_duke
38885809	11.622225	-7.960821	story	13.0	19.0	1704493309	10.200786	Ask HN: Go(lang) Is the New Basic?		martinbaun
38966345	12.23979	-7.2950687	story	13.0	121.0	1705055421	7.0939074	Smalltalk simplicity and consistency vs. other languages (2022) [video]	https://www.youtube.com/watch?v=QFZqilshyL4	harryvederci
38999069	11.725706	-7.408738	story	13.0	97.0	1705312946	-8.669645	Polymorphic Types in C [pdf]	https://open-std.org/JTC1/SC22/WG14/www/docs/n3212.pdf	sigsev_251
32825468	11.699318	-7.8934884	comment	13.0	63.5	1663082443	10.243333	A 10 years Java/PHP developer doesn't know how to use Golang on the job in 3 days.		revskill
32987160	11.6213255	-7.950602	story	13.0	328.0	1664220329	10.213494	Go runtime: 4 years later	https://go.dev/blog/go119runtime	spacey
31793567	11.784097	-7.357318	comment	13.0	86.5	1655584384	-8.904943	> Static Typing reduces bugs.At least to me, the big advantage of static typing is not that it (allegedly) reduces bugs, but that it aids my understanding and helps in navigating the program. It's a tool for thinking and communicating.		cloogshicer
31957194	11.870713	-7.3757076	story	13.0	24.0	1656749747	7.2786474	Did Functional Programming Get It Wrong (Part 2) – Minecraft-Style Crafting	https://multix.substack.com/p/did-functional-programming-get-it	reinman
32453111	11.800149	-7.080619	comment	13.0	76.5	1660420000	-9.035601	Slightly related question: why do people love Python so much? Or, any dynamically typed language? There's almost nothing that has frustrated me more in a professional setting than trying to figure out what some dynamically typed code is doing and ensuring I don't break anything by making changes.		likeabbas
22075066	11.707599	-7.8014226	story	13.0	130.0	1579273015	10.163165	Why we’re writing machine learning infrastructure in Go, not Python	https://towardsdatascience.com/why-were-writing-machine-learning-infrastructure-in-go-not-python-38d6a37e2d76	calebkaiser
22091079	11.79496	-7.35886	comment	13.0	57.0	1579437135	-8.9052725	I've come to the conclusion that the benefit dynamic typing brings to the table is to allow more technical debt. Now of course technical debt should be repaid at an appropriate moment but that appropr...		ema
23504840	11.865367	-7.290737	story	14.0	14.0	1592003404	-6.571497	Ask HN: What language is the most fun to learn		xupybd
24065499	11.605047	-7.8810515	story	14.0	176.0	1596660961	-9.240954	File System Interfaces for Go – Draft Design	https://go.googlesource.com/proposal/+/master/design/draft-iofs.md	networkimprov
24105755	11.946882	-7.421385	story	14.0	100.0	1597036155	7.1450415	Codata in action, or how to connect FP and OOP	https://www.javiercasas.com/articles/codata-in-action/	siraben
24193313	11.662591	-7.310412	story	14.0	105.0	1597705366	-8.807334	A circuit-like notation for lambda calculus (2015)	https://csvoss.com/circuit-notation-lambda-calculus	apsec112
24269368	12.073346	-7.8295875	story	14.0	199.0	1598345583	10.444258	Draft of OCaml Scientific Computing book	https://discuss.ocaml.org/t/ann-draft-of-ocaml-scientific-computing-book	mseri
24332214	11.982298	-7.468864	comment	14.0	62.0	1598886510	10.440905	I think it's great that Keli is designed with IDE support in mind. However I believe that this is only half of the reason why FP still doesn't really break through in the corporate world.The other rea...		misja111
20109840	11.988811	-7.7298903	story	14.0	242.0	1559774286	10.433712	Why GitHub used Haskell for Semantic	https://github.com/github/semantic/blob/master/docs/why-haskell.md	yakshaving_jgt
20193140	11.786692	-7.3062186	comment	14.0	70.0	1560646227	-8.93219	"I think the big big result from this study is: ""Python: half the size !"".A dynamic language like Python is better here,  2x better. I assume similar results would apply to other dynamic languages like..."		galaxyLogic
20449427	11.683583	-7.923936	story	14.0	147.0	1563280444	10.170163	Vugu – Modern UI Library for Go and WebAssembly	https://www.vugu.org/	ingve
20626768	11.941688	-7.465842	story	14.0	17.0	1565109262	7.247441	Functional Programming? Don’t Even Bother, It’s a Silly Toy	https://medium.com/better-programming/fp-toy-7f52ea0a947e	michaelchisari
20704993	11.800881	-7.8547587	story	14.0	131.0	1565875881	10.247386	Ask HN: Is there a project based book or course on Go for writing web APIs?		lignux
20781469	11.943407	-7.436436	comment	14.0	65.0	1566587784	7.2030106	> “OOP is prevalent because cheap OOP developers are readily available, while functional programmers are typically more smart, and more expensive…”The reason I prefer functional programming over OOP i...		cpursley
20829714	12.345974	-7.0460725	comment	14.0	55.5	1567088465	13.177088	I'm sorry but Perl 6 isnt relevant IMO. It took too long. I was a Perl developer at etoys.com in 2000 and BBC in 2001. I wrote OneMusic for Radio1 and even convinced the BBCs uptight ops team to run i...		mmaunder
13773474	12.167942	-7.4422784	comment	14.0	79.5	1488456483	11.923226	"2009 I sucked it up too.""Hey Java is pretty much shit and here is this new better language called Scala, which you can use with your Java ecosystem!""And I was hyped!But, well then I saw the actual Jav..."		k__
14142054	11.693563	-7.1606374	story	14.0	183.0	1492543545	9.377186	Support for tagging of Lambda functions and for the Python 3.6 runtime	https://aws.amazon.com/releasenotes/5198208415517126	muramira
14177489	12.446016	-7.1935663	story	14.0	122.0	1492942644	12.293425	Rooby: a Ruby-like object oriented language written in Go	https://github.com/rooby-lang/rooby	type0
30817065	12.244051	-7.516642	story	14.0	173.0	1648346119	-11.366955	Kotlin for JavaScript	https://kotlinlang.org/docs/js-overview.html	surrTurr
31024363	12.470053	-7.062688	story	14.0	142.0	1649922779	12.380681	Why Ruby Has Symbols	https://dmitrytsepelev.dev/why-has-ruby-symbols	dmitrytsepelev
31314006	11.716399	-7.353878	story	14.0	205.0	1652104458	9.207568	Using Java's Project Loom to build more reliable distributed systems	https://jbaker.io/2022/05/09/project-loom-for-distributed-systems/	CHY872
31466441	11.912907	-7.433304	story	14.0	148.0	1653212721	7.257013	The Dao of Functional Programming [pdf]	https://github.com/BartoszMilewski/Publications/blob/master/TheDaoOfFP/DaoFP.pdf	ColinWright
25582746	11.860229	-7.693784	story	14.0	301.0	1609343894	10.384358	GHC 9.0, supporting linear types	https://discourse.haskell.org/t/glasgow-haskell-compiler-9-0-1-rc1-now-available/1706	cosmic_quanta
25750969	11.641294	-7.9216843	comment	14.0	99.0	1610475406	10.194112	We have a very large Go codebase here at Stream and not having generics is just not really as big of an issue as you think it is. There are plenty of work arounds if you get used to not having generic...		tschellenbach
25935700	11.913957	-7.4041324	comment	14.0	79.0	1611790625	7.0951076	> It’s not bad because it’s OO, but that it’s very badly done OOThis argument seems to come up for every criticism of OO. The criticism is invalid because true OO would never do that. It seems like a ...		throwaway894345
26011025	12.14188	-7.885336	story	14.0	202.0	1612332111	-3.255904	What Is Applied Category Theory? (2018)	https://arxiv.org/abs/1809.05923	behnamoh
26026896	11.640456	-7.944563	story	14.0	480.0	1612456409	10.154179	Native Mac APIs for Go	https://github.com/progrium/macdriver	maydemir
26142362	12.17327	-7.5181155	story	14.0	59.0	1613394552	-10.630116	What is the case against F#? (2009)	https://stackoverflow.com/questions/1105422/what-is-the-case-against-f#	rfreytag
26160413	11.822424	-7.391645	comment	14.0	62.0	1613519166	-8.728146	I think we need new, better concepts to judge type systems by. Eg TypeScript has convincingly shown to a large crowd that soundness isn't an important property for many key goals of static typing, suc...		skrebbel
35558281	11.966193	-7.720613	comment	14.0	45.0	1681404358	10.410771	The pedagogical downside of Haskell is that it ignores the physical reality of the machine. Physically, a computer is imperative, has mutating state, and is filled with all kinds of possible race cond...		javajosh
35832038	12.407294	-7.110436	story	14.0	167.0	1683305924	12.376982	A few words on Ruby's type annotations state	https://zverok.space/blog/2023-05-05-ruby-types.html	todsacerdoti
35925362	12.300542	-7.0698776	comment	14.0	87.5	1683950273	-9.303431	Right. But who's the 'you' who's being addressed by the {:system} prompt? Who is the {:assistant} supposed to think the {:system} is? Why should the {:assistant} output tokens that make it do what the...		jameshart
36048555	11.652766	-7.9767604	comment	14.0	64.0	1684865956	10.242119	"How to start a new Go project:  go mod init mymodule

Go's default toolchain is fine, everything else is optional. Some questionable advice in the article:- Vendoring dependencies using ""go mod vendor..."		lima
36048725	11.691265	-7.911921	comment	14.0	44.0	1684866615	10.242005	Genuine question.. I'll often see Golang pretty heavily criticized here on hacker news. Either that or people say it's a boring language and not worth learning when there is something more interesting...		sureglymop
36148090	11.974585	-7.4911923	story	14.0	14.0	1685600463	7.178977	Ask HN: Where did you first come across functional programming?		curious16
28838099	12.022497	-7.813562	story	14.0	148.0	1634034478	10.3591	Effective Concurrency with Algebraic Effects in Multicore OCaml	https://kcsrk.info/ocaml/multicore/2015/05/20/effects-multicore/	slightknack
28840617	11.797043	-7.390388	story	14.0	92.0	1634051010	8.069318	Algebraic data types: things I wish someone had explained about FP (2019)	https://jrsinclair.com/articles/2019/algebraic-data-types-what-i-wish-someone-had-explained-about-functional-programming/	weatherlight
28916247	12.015237	-7.79473	story	14.0	156.0	1634634799	10.403677	Functors, Applicatives, and Monads in Pictures (2013)	https://adit.io/posts/2013-04-17-functors,_applicatives,_and_monads_in_pictures.html	ingve
29020695	11.654685	-7.9384933	story	14.0	263.0	1635379255	10.236516	Expectations for generics in Go 1.18	https://groups.google.com/g/golang-dev/c/iuB22_G9Kbo/m/7B1jd1I3BQAJ	smasher164
29099331	11.812203	-7.342422	story	14.0	299.0	1635968409	10.117777	TypeScript: Control flow analysis for destructured discriminated unions	https://github.com/microsoft/TypeScript/pull/46266	tosh
29288402	11.770468	-7.201396	story	14.0	117.0	1637418846	-8.967665	Beartype: Fast runtime type checking in Python	https://github.com/beartype/beartype	azhenley
29487244	11.609408	-7.9321284	story	14.0	134.0	1638982908	10.2217865	Hacking the Go compiler to add a new keyword	https://avi.im/blag/2021/rc-day-24/	todsacerdoti
34133838	11.934513	-7.1478643	comment	14.0	48.0	1672021124	7.741264	I just want the map, reduce, filter functions to be acutely aware of the narrowed types. The moment I use Object.entries and then work on the data, the key has been widened to string.Okay and maybe I ...		Waterluvian
34243770	12.498034	-7.030552	comment	14.0	94.5	1672825338	12.373473	You are obviously referring to Python and so I would like to note a few things. (I have nothing against Ruby)> Ruby ... its combined attributes of brevity, expressive power, and feature consistency.> ...		samwillis
34860164	11.89204	-7.384824	story	14.0	137.0	1676830220	7.262497	Functional Core, Imperative Shell (2012)	https://www.destroyallsoftware.com/screencasts/catalog/functional-core-imperative-shell	kachnuv_ocasek
35030965	11.887776	-7.4872503	comment	14.0	71.0	1678033173	7.4293656	> Why is the gap between these two perspectives so large? My conclusion is that there are major, well-justified reasons for why people strongly dislike functional languages.Now that (nearly) every mai...		lolinder
35140025	11.664544	-7.8830686	comment	14.0	56.5	1678731449	10.129468	I'm not exaggerating but this might just be the highest impact library I've seen. As a backend developer who has lots of great project ideas but bail at the thought of having to use JavaScript and HTM...		vikinghckr
39589488	11.973927	-7.7175665	story	14.0	143.0	1709554321	10.390965	The Evolution of a Haskell Programmer (2001)	https://pages.cpsc.ucalgary.ca/~robin/class/449/Evolution.htm	agomez314
36572155	12.098013	-7.1077027	comment	14.0	51.5	1688388511	8.659168	Some of the best advice I ever got for writing composable, high-performance code was “work on structs of arrays, not arrays of structs”. I hear many echoes of that advice in this text. Turns out that ...		inopinatus
36668355	11.929531	-7.351306	comment	14.0	61.0	1689005241	7.0566306	As a professional dev who has made a career out of working in oop languages and codebases, it took me far too long to realize that when it comes to oop, the emperor has no clothes.To this day, oop adv...		bedobi
36822542	11.637592	-7.346563	story	14.0	39.0	1689992437	-8.797055	Analysis of whether unit testing obviates static type checking (2012)	http://evanfarrer.blogspot.com/2012/06/unit-testing-isnt-enough-you-need.html	todsacerdoti
36875815	12.491188	-7.07636	story	14.0	150.0	1690370329	12.374694	An introduction to metaprogramming in Ruby	https://blog.appsignal.com/2023/07/26/an-introduction-to-metaprogramming-in-ruby.html	unripe_syntax
37067956	12.245482	-7.535314	comment	14.0	69.5	1691612983	-11.433576	For those in the ecosystem these days - is there a compelling reason to choose Java over Kotlin? I am under the impression that Kotlin is a better Java without any sacrifices. Is this true?		whalesalad
37570723	11.725495	-7.286122	comment	14.0	65.0	1695134892	9.162401	"I have a genuine question about Loom / virtual threads / etc.In languages with async-await syntax, I like that it is explicit what is sync and what is async. I also like how the ""bind"" points within a..."		lambda_garden
24716525	11.742525	-7.3654346	comment	14.0	64.5	1602139605	-8.83508	> if your code compiles, it probably worksI'm always a little frustrated whenever I see this aphorism perpetuated since I think it gives the impression that a static type system is doing more than it ...		lgessler
32549545	11.686179	-7.2930565	story	14.0	53.0	1661163970	-8.84142	Can Types Replace Validation?	https://blog.ploeh.dk/2022/08/22/can-types-replace-validation/	todsacerdoti
32031104	11.652	-7.96796	comment	14.0	59.5	1657335585	10.254691	Either you start making a language from a sound theoretical foundation and then implement it (Koka springs to mind) or you implement a language from some syntactic gripes and then try to find the theo...		danielscrubs
32071346	11.965335	-7.4662857	story	14.0	135.0	1657639683	7.2448244	Functional programming is finally going mainstream	https://github.com/readme/featured/functional-programming	BerislavLopac
32481829	12.087729	-7.6592474	comment	14.0	42.0	1660652416	10.389462	I learn FP throught ELM and I really enjoyed it. Unfortunately the language seems dead.What are the easiest FP language to learn ? I checked multiple time Haskell but it seems really hard		BoumTAC
22044262	11.96892	-7.7157545	story	14.0	84.0	1579006040	10.433837	Courting Haskell	https://honzajavorek.cz/blog/courting-haskell	honzajavorek
19127692	12.011792	-7.793071	story	14.0	203.0	1549805388	10.390362	A monad is a monoid in the category of endofunctors, what’s the problem?	https://www.reddit.com/r/math/comments/ap25mr/a_monad_is_a_monoid_in_the_category_of/	joe_poole
19292067	12.039254	-7.7244744	story	14.0	271.0	1551574312	10.445666	Functional Programming in OCaml	http://www.cs.cornell.edu/courses/cs3110/2019sp/textbook/	lelf
19701767	12.139096	-7.877726	story	14.0	508.0	1555698328	-3.2331314	Applied Category Theory	https://ocw.mit.edu/courses/mathematics/18-s097-applied-category-theory-january-iap-2019/index.htm	lelf
19969020	11.741026	-7.3116107	comment	14.0	58.5	1558436424	-8.896949	">> Extreme late-binding is important because Kay argues that it permits you to not commit too early to the ""one true way"" of solving an issue (and thus makes it easier to change those decisions), but ..."		cryptica
15903396	11.796543	-7.377996	comment	14.0	51.5	1513059759	-10.048318	> And yet we keep writing Go.What are the alternatives if you want something with type checking? Java? No, thanks. Haskel? Where are the libraries? C/C++?I guess Typescript is the only alternative		noncoml
16042136	12.274647	-7.2992964	story	14.0	93.0	1514747491	7.0252	Smalltalk’s Productivity	https://medium.com/smalltalk-talk/smalltalk-s-proven-productivity-fe7cbd99c061	mpweiher
16514008	12.266643	-7.491519	story	14.0	223.0	1520157246	12.834073	Message Passing and the Actor Model	http://dist-prog-book.com/chapter/3/message-passing.html	amzans
16575387	11.623539	-7.1975756	comment	14.0	47.0	1520942256	9.027517	Honest question.Can somebody explain to me why async IO is so important and why it is better than using the operating system scheduler?If process A is blocked because of IO, then then thing that needs...		konschubert
16647317	11.863449	-7.2033114	story	14.0	39.0	1521713808	8.713381	Avoid getters and setters whenever possible	https://dev.to/scottshipp/avoid-getters-and-setters-whenever-possible-c8m	ingve
16676614	12.136458	-7.8842673	story	14.0	383.0	1522038616	-3.1962652	Applied Category Theory	https://johncarlosbaez.wordpress.com/2018/03/26/seven-sketches-in-compositionality/	mathgenius
17048949	11.786619	-7.332735	comment	14.0	165.5	1526058160	-8.904277	It's interesting how static type systems are slowly gaining more adoption now by being bolted on to popular dynamic languages. It feels like a weird approach compared to using a language that was desi...		seanwilson
17589924	12.1041565	-7.588018	story	14.0	135.0	1532309975	11.893654	Scala: Understanding implicits	https://kubuszok.com/2018/implicits-type-classes-and-extension-methods-part-4/	maddening
17696574	11.887515	-7.083738	story	14.0	168.0	1533553140	-10.751661	The magic of asyncio explained	https://hackernoon.com/a-simple-introduction-to-pythons-asyncio-595d9c9ecf8c	apoorvgarg
17764640	11.611632	-7.20655	story	14.0	89.0	1534324206	6.8244553	Products Are Functions	http://www.feltpresence.com/functions.html	tobr
21145396	11.993277	-7.7556877	comment	14.0	103.5	1570098150	10.424244	Haskell is a beautiful research language. Its usecase is to supply subjects for PhDs and MScs, which it fulfills perfectly. Also it's extremely fun to learn and play with.I would never bring it to the...		h91wka
21716266	11.941422	-7.7645736	comment	14.0	54.5	1575578627	10.361466	"It saddens me that modern languages have basically implemented their own ""monadic"" syntax for specific cases without implementing something more generic. Rust, Kotlin, and Swift have `?` for the Optio..."		lalaithion
39159246	11.780161	-7.244898	story	14.0	47.0	1706385716	-8.93171	Reasons to avoid static type checking in Python	https://typing.readthedocs.io/en/latest/source/typing_anti_pitch.html	samwho
39227169	12.307793	-7.019021	story	14.0	131.0	1706869994	13.178556	Significant features introduced for recent versions of Perl	https://sheet.shiar.nl/perl/	asicsp
18118874	12.007715	-7.764	story	14.0	130.0	1538455647	10.426491	Introducing Haskell to a Company	https://alasconnect.github.io/blog/posts/2018-10-02-introducing-haskell-to-a-company.html	k0t0n0
18251478	11.899983	-7.4315977	comment	14.0	83.0	1539891860	7.1546435	Becoming a professional Haskell and Erlang developer really shifted my view on OOP (let OOP denote class based OOP as found in Java or C++). In my view, OOP is prove a poor model for computation, and ...		ilovecaching
18267536	12.13753	-7.8814974	story	14.0	387.0	1540120722	-3.266196	An invitation to category theory	http://chalkdustmagazine.com/features/an-invitation-to-category-theory/	sytelus
18328463	11.937961	-7.418383	story	14.0	48.0	1540828202	7.1398664	OOP vs. Functional Programming (2014)	https://blog.cleancoder.com/uncle-bob/2014/11/24/FPvsOO.html	ruairidhwm
18725694	12.229313	-7.634128	comment	14.0	46.5	1545319855	11.940699	I think there are some flaws in this analysis that can be confirmed when the code is released.I think the reason Scala seems surprisingly popular is that is was simple string matching so a post that s...		OisinMoran
18922696	11.650316	-7.9569235	story	14.0	252.0	1547659259	10.158314	Cloud Functions: Go 1.11 is now a supported language	https://cloud.google.com/blog/products/application-development/cloud-functions-go-1-11-is-now-a-supported-language	yannikyeo
30330909	11.983991	-7.823852	story	14.0	90.0	1644839361	10.418261	What Color Is Your Monad	https://patrickthebold.github.io/posts/what-color-is-your-monad/	patrickthebold
30523354	11.632063	-7.917908	comment	14.0	78.5	1646192249	10.202017	So maybe 7-8 years ago, I got into a bunch of arguments with people on Hacker News because I said that Go's type system was ineffective without generics. At that time, Gophers leaped to defend it, goi...		kerkeslager
12992289	11.687353	-7.9132695	story	14.0	91.0	1479534916	10.160317	Making the Switch from Node.js to Golang	http://blog.digg.com/post/141552444676/making-the-switch-from-nodejs-to-golang	activatedgeek
13572648	11.653491	-7.9736123	comment	14.0	68.5	1486307273	10.2293	My impression is that Go is a language that was cobbled together to simplify the coding of some specific applications, such as simple servers. It lacks any kind of purity, is not the best choice for a...		greg7mdp
13597197	11.638531	-7.8525558	story	14.0	152.0	1486549234	10.107405	HTTP throughput regression from Go 1.7.5 to 1.8	https://github.com/golang/go/issues/18964	01walid
12185892	12.240375	-7.3198667	story	14.0	47.0	1469788039	7.096824	Ask HN: Examples of elegant, non-trivial Smalltalk?		Fr0styMatt88
12232293	11.686658	-7.943092	story	14.0	158.0	1470405066	10.196745	Show HN: Book about writing web apps in Go without a framework	https://github.com/thewhitetulip/web-dev-golang-anti-textbook/	thewhitetulip
12400397	12.2991705	-7.072099	story	14.0	323.0	1472668227	-10.545575	Announcing BuckleScript 1.0	http://bloomberg.github.io/bucklescript/blog/index.html	e_d_g_a_r
12497114	11.949322	-7.238052	story	14.0	141.0	1473863022	9.144336	Top-level await in JavaScript is a footgun	https://gist.github.com/Rich-Harris/0b6f317657f5167663b493c722647221	rich_harris
12505618	11.785562	-7.092494	comment	14.0	78.0	1473943578	7.867595	Over the years I've seen many more unmaintainable atrocities caused by diligent adherence to these principles than I ever have because of ignorance of them.All the horrid Java libraries that we hated ...		ewjordan
28105503	11.8696165	-7.2877364	story	14.0	91.0	1628416468	7.0354166	Growing object-oriented software vs. what I would do	https://dpc.pw/growing-object-oriented-software-vs-what-i-would-do	vivty
28198996	12.103485	-7.1611433	story	14.0	141.0	1629126587	8.466933	Object-Oriented Entity-Component-System Design	https://voxely.net/blog/object-oriented-entity-component-system-design/	agluszak
28199926	12.113503	-7.2101173	comment	14.0	48.0	1629131509	8.591284	Where ECS gets muddy for me is when you have systems working on entities with multiple types of components at once.* physics - position component + physics component* rendering - position component + ...		de_keyboard
28211270	11.730647	-7.3199515	comment	14.0	76.0	1629215800	-8.89456	It's nice to read a positive comment like yours occasionally, because the vast majority of the time, I'm just disappointed in how bad our programming tools (including languages) are.It's become a meme...		ragnese
28411167	11.594134	-7.9308286	story	14.0	95.0	1630717564	-9.518268	A nasty bit of undefined timezone behavior in Golang	https://www.dolthub.com/blog/2021-09-03-golang-time-bugs/	fanf2
28515009	11.968296	-7.4767914	comment	14.0	64.0	1631558130	7.2420907	Some of the weirdness is so completely avoidable that it frustrates me, but languages and libraries dig in on ‘you get used to it.’ I’m talking about the f(g(h(x))) vs x | h | g | f. Right to left cha...		6gvONxR4sf7o
22397582	11.628894	-7.933229	comment	14.0	49.5	1582474552	10.2444315	Here's a hot take from a polyglot who does a fair bit of professional work in Go:Go is a low-blub language whose advocates are proud of the fact that they never made it past 200-level CS courses. It's...		stickfigure
22403625	11.906847	-7.473424	story	14.0	169.0	1582549175	7.3242106	The general value of typed functional programming lies in leaving no edge cases	https://np.reddit.com/r/scala/comments/en89or/when_should_i_use_cats_scalaz_instead_of_standard/fdxer1k/	jxub
22414129	11.874911	-7.6410894	comment	14.0	48.5	1582646028	10.37188	This way of writing Haskell, from my experience, results in write-only code. While it's nice that the compiler helped you figure out which obscure operators to use for your code to actually compile, i...		q3k
22625957	11.888106	-7.6632395	story	14.0	171.0	1584611247	10.26443	It never makes sense to use foldl on lists in Haskell (2019)	https://github.com/hasura/graphql-engine/pull/2933#discussion_r328821960	tirumaraiselvan
22716248	11.655332	-7.7042212	comment	14.0	63.0	1585454139	-6.2069116	As a nodejs developer: what is the best compiled server language to learn right now? Is it Java still, or is it better to look at go or rust?		gentleman11
23290769	11.820162	-7.274716	story	14.0	114.0	1590319182	-5.9815593	Immutable Databases	https://adlrocha.substack.com/p/adlrocha-immutable-databases	adlrocha
33536332	11.809158	-7.2972155	comment	14.0	47.5	1668020599	5.166626	"""My dad switched from working with a map printout without knowing real-time conditions, the imperative flow, to Google Maps with turn-by-turn directions, the declarative flow.""There is no such thing a..."		0xbadcafebee
33548022	11.929836	-7.0797324	comment	14.0	59.0	1668094803	-10.7552395	After 2 years of using asyncio in production, I recommend to avoid it if you can. With async programming, you take the complexity of concurrent programming, which is way harder than you can imagine.Al...		kissgyorgy
33570575	11.652427	-7.946353	story	14.0	104.0	1668234412	10.15461	Ghostly is a simple, lightweight, and fast full-stack framework for Golang	https://github.com/Dominic-Wassef/ghostly	tomcam
33713717	11.642673	-7.9626055	story	14.0	82.0	1669165169	10.1934395	The Carcinization of Go Programs	https://xeiaso.net/blog/carcinization-golang	todsacerdoti
33791452	11.75238	-7.319278	comment	14.0	82.0	1669747444	-8.899276	"> They [dynamic types] have potential to be more than ""no static types"", but that hasn't happened.It happened thirty years ago:https://en.wikipedia.org/wiki/The_Art_of_the_Metaobject_Prot...But the th..."		lisper
26780009	11.680861	-7.0931873	comment	14.0	65.5	1618238839	6.7553124	"I prefer early return pattern.Which would look like this:    const user = {
        firstName: ""Seán"",
        lastName: ""Barry"",
        email: ""my.address@email.com"",
        number: ""00447123456789..."		kvczor
27036745	11.666391	-7.0176787	story	14.0	36.0	1620130578	8.961462	Python Default Dict	https://docs.python.org/3/library/collections.html#collections.defaultdict	johnjackjames
27103584	11.79168	-7.3302145	comment	14.0	66.5	1620631835	6.576488	I prefer imperative code over collector like APIs for two reasons, both visible in this example:1. The intention of the code is obscured by more layers of abstraction, increasing complexity.2. Small c...		Laremere
37744563	11.641369	-7.931198	story	14.0	154.0	1696281638	10.180694	Show HN: A new stdlib for Golang focusing on platform native support	https://github.com/primecitizens/pcz	Leotard6963
38306540	11.729835	-7.2843704	story	14.0	162.0	1700241262	9.146576	Rocket v0.5: Stable, Async	https://rocket.rs/v0.5/news/2023-11-17-version-0.5/	sbenitez
14761788	11.665979	-7.9723186	story	14.0	211.0	1499957851	10.209089	Interactive Go REPL	https://github.com/d4l3k/go-pry	blacksmythe
14967256	12.203336	-7.613784	story	14.0	53.0	1502275257	11.94738	Scala Vector operations aren't “Effectively Constant” time	http://www.lihaoyi.com/post/ScalaVectoroperationsarentEffectivelyConstanttime.html	dmit
15062364	11.882592	-7.28097	story	14.0	107.0	1503296734	9.186998	Async/Await will make code simpler	https://blog.patricktriest.com/what-is-async-await-why-should-you-care/	thmslee
15287723	11.695878	-7.243393	story	14.0	130.0	1505847335	-6.5775714	Global Mutable State	https://dev.to/ericnormand/global-mutable-state	bhalp1
15308585	11.635164	-7.9723296	comment	14.0	64.0	1506041460	10.237322	Having dealt with enough spaghetti code over the years (just a few of industry experience, and some more years of academia), I understand what Go's strengths are. It's an opinionated language that sto...		Karrot_Kream
15661155	11.635772	-7.9474287	comment	14.0	49.5	1510221367	10.222074	"I can agree with most of the article, but for some it looks like we have not been using the same language ecosystem at all.Go really feels opinionated around the wrong things, in order to claim ""simpl..."		4c2383f5c88e911
15738550	12.238069	-7.6276307	story	14.0	125.0	1511165899	11.959665	What's wrong with the default build tool for Scala	http://www.lihaoyi.com/post/SowhatswrongwithSBT.html	nuriaion
23496800	12.272454	-7.3187075	story	15.0	194.0	1591945649	7.068474	Design Principles Behind Smalltalk (1981)	https://www.cs.virginia.edu/~evans/cs655/readings/smalltalk.html	_zhqs
23550042	11.660587	-7.9259005	story	15.0	143.0	1592392089	10.155453	GoPlus – The Go+ language for data science	https://www.github.com/qiniu/goplus	dx034
23794691	11.7210865	-7.4130573	story	15.0	177.0	1594405769	-8.735654	Hindley-Milner Type Inference (2012)	http://steshaw.org/hm/	vyuh
24298055	11.618436	-7.9257927	comment	15.0	70.0	1598558849	10.173557	I played around with Go a while ago, and while I appreciated the approach to concurrency, I was really put off by both the boilerplate + how primitive the type system felt. Not having map and filter d...		piazz
24358153	11.927914	-7.364196	comment	15.0	53.0	1599080856	7.0631747	OOP is a superficial lowest common denominator of programming. Everyone can understand on a superficial level (cat is a animal, dog is an animal, cat does meou, dog does bark, kind of thing), and proc...		dpc_pw
20984279	11.652573	-7.967492	comment	15.0	96.0	1568643711	10.211178	"Not disagreeing with the sentiment, but I dislike the word ""simple"" used to describe languages, because it has two meanings: simple = ""consists of few parts"" and simple = ""easy to use"", and these are ..."		pornel
13691303	12.501027	-7.0866036	story	15.0	306.0	1487627548	12.357931	Ruby `reject!`	http://accidentallyquadratic.tumblr.com/post/157496054437/ruby-reject	dmit
13783357	11.886016	-7.241375	comment	15.0	60.0	1488554129	7.111974	In the 1990s I did research on the efficacy claims of object oriented programming versus procedural programming. This article bares a striking resemblance in the claims. Case study after case study sh...		mybrid
13875158	12.180713	-7.3357363	story	15.0	104.0	1489574607	-4.2560177	STON – Smalltalk Object Notation (2012)	https://github.com/svenvc/ston/blob/master/ston-paper.md	mpweiher
14073042	11.683141	-7.904737	story	15.0	204.0	1491755481	10.147105	Ponzu – An open-source HTTP server framework and CMS in Go	https://github.com/ponzu-cms/ponzu	wilsonfiifi
14138196	11.9370775	-7.457181	story	15.0	145.0	1492517998	7.2757387	Why functional programming matters	https://medium.com/@mikolajszabo/why-functional-programming-matters-c647f56a7691	antouank
14458293	12.241334	-7.6523147	story	15.0	242.0	1496296550	11.953522	Underscore's Scala books are now open source	http://underscore.io/blog/posts/2017/05/29/why-we-open-sourced-our-books.html	noelwelsh
30810769	11.835294	-7.517692	story	15.0	102.0	1648292090	10.252515	Algebraic Data Types in Haskell	https://serokell.io/blog/algebraic-data-types-in-haskell	ingve
30854109	11.781661	-7.213712	comment	15.0	41.0	1648642819	7.1073604	Basically functions are not abstractions, the data structures that functions act on are the real abstractions. Because the data structures have been planned out in a particular way, functions can mani...		SPBS
30917420	12.34821	-7.2564154	story	15.0	298.0	1649155955	7.1931686	Pharo 10	https://pharo.org/news/pharo10-released.html	xkriva11
30977481	11.628589	-7.0980406	story	15.0	30.0	1649602672	8.006124	Singleton Is a Bad Idea	https://nedbatchelder.com/blog/202204/singleton_is_a_bad_idea.html	NeutralForest
31098255	11.656304	-7.968438	comment	15.0	46.0	1650468212	10.238534	> In the last year, have you or your team at work evaluated Go against another language for a project? No - 42%That strikes me as a shockingly high figure. Do people not regularly question what langua...		capableweb
31734755	11.639515	-7.9139643	comment	15.0	97.5	1655180948	10.172726	They've fixed the import / modules situation to a point where it's usable and much improved, and generics have been added.However, the issue this brings up about structs / types not explicitly declari...		implying
25609669	12.147128	-7.515668	story	15.0	209.0	1609554180	-10.597524	F# for fun and profit: Terms and Conditions	https://fsharpforfunandprofit.com/about/terms/	cratermoon
25720277	11.931735	-7.23826	story	15.0	150.0	1610315061	12.821073	Ferrum: An actor-based programming language	https://quizzical-dijkstra-2acb9c.netlify.app/ferrum/	coolvision
25805158	11.666884	-7.9388022	story	15.0	257.0	1610828469	10.152569	REST Servers in Go: Part 1 – standard library	https://eli.thegreenplace.net/2021/rest-servers-in-go-part-1-standard-library/	tutfbhuf
25974747	11.78204	-7.021229	comment	15.0	73.0	1612055620	10.15962	Can anyone answer why python is a choice anymore instead of i.e. golang for saas applications like this? I previously worked heavily with ruby and I cannot imagine building beyond >1000 LoC in interpr...		andrewzah
26077823	11.919223	-7.727567	story	15.0	258.0	1612880846	10.402069	Haskell: The Bad Parts, part 2 (2020)	https://www.snoyman.com/blog/2020/11/haskell-bad-parts-2	anuragsoni
26124373	12.242792	-7.521774	comment	15.0	76.0	1613232451	-11.382717	A question for HN - I like Java a lot for the ‘http API talking to SQL database’ usecase, with my goto for that being dropwizard or spring boot.I’ve only ever looked at Kotlin code in blogposts, haven...		davnicwil
35784705	11.677136	-7.321737	story	15.0	70.0	1683015131	-8.668182	What Is Type-Level Programming?	https://blog.sulami.xyz/posts/type-level-programming/	bo0tzz
36019005	11.759705	-7.3950944	story	15.0	129.0	1684658471	8.12562	Typical: Data interchange with algebraic data types	https://github.com/stepchowfun/typical	g0xA52A2A
36133371	12.121441	-7.503094	comment	15.0	81.5	1685495954	-10.563003	This is a nicely written essay and, I think, completely wrong.  (One person's experience here, just as a disclaimer.)I've interviewed a lot of functional candidates in a decade-long stint of functiona...		gemstones
36412030	12.267442	-7.560159	comment	15.0	37.5	1687302571	-11.35842	Awesome. Thank you for that koan!		johnwheeler
28919205	11.95543	-7.100147	story	15.0	349.0	1634657386	9.696978	Function pipelines: Building functional programming into PostgreSQL	https://blog.timescale.com/blog/function-pipelines-building-functional-programming-into-postgresql-using-custom-operators/	oconnor663
29121612	12.15374	-7.491562	story	15.0	147.0	1636130160	-10.533812	Show HN: WebFrame: F# framework for rapid prototyping with ASP.NET Core	https://github.com/RussBaz/WebFrame	RussBaz
29273155	12.470367	-7.113031	comment	15.0	96.5	1637289367	12.382453	Honestly I don't get why some people want to move to static types.  Ruby is a dynamic language, that's the point of it...  Giant orgs can just use Java or something.  We need some languages to stay pr...		Mikeb85
29441857	12.49635	-7.0542803	story	15.0	189.0	1638635303	12.381902	&lt;ruby&gt;: The Ruby Annotation element	https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ruby	alin23
34222407	11.794113	-7.1605773	story	15.0	152.0	1672687394	-8.973987	Pyright: Static Type Checker for Python	https://github.com/microsoft/pyright	pen2l
34844716	11.893272	-7.416665	story	15.0	240.0	1676704142	7.266816	John Carmack on Functional Programming in C++ (2018)	http://www.sevangelatos.com/john-carmack-on/	signa11
39628334	11.900699	-7.439069	comment	15.0	59.5	1709815108	7.2013445	"> to make programming more
closely related to mathematicsWhy is this taken as a given to be a good thing? Our hardware has state. Any IO is a side effect, so what's the non trivial use case for ""pure ..."		btreecat
36632010	11.725972	-7.273681	story	15.0	153.0	1688738899	-8.053487	Closure, from why the lucky stiff (2013)	https://github.com/steveklabnik/CLOSURE	rchaves
37478111	12.125754	-7.860832	story	15.0	218.0	1694506392	-3.207669	Category Theory Illustrated – Sets	https://abuseofnotation.github.io/category-theory-illustrated/01_set/	boris_m
24538531	11.9579935	-7.702951	story	15.0	179.0	1600647167	10.405538	Haskell RecordDotSyntax language extension proposal (Accepted)	https://github.com/ghc-proposals/ghc-proposals/pull/282	harporoeder
24712207	12.005262	-7.6964173	story	15.0	107.0	1602101597	10.430475	Lisp and Haskell (2015)	https://markkarpov.com/post/lisp-and-haskell.html	dunefox
24993837	11.648057	-7.958595	story	15.0	183.0	1604529914	10.229896	Go Type Parameters – Draft Design	https://go.googlesource.com/proposal/+/refs/heads/master/design/go2draft-type-parameters.md	wwarner
25186348	11.677422	-7.937441	story	15.0	166.0	1606136827	10.224947	Ex Valve dev on CS:GO’s codebase	https://twitter.com/richgel999/status/1330767132003606528	hnthwaccount
38810073	11.79752	-7.365677	story	15.0	219.0	1703883196	8.612172	Koka: Strongly typed functional-style language with effect types and handlers	https://koka-lang.github.io/koka/doc/index.html	nateb2022
32528270	11.980955	-7.739195	story	15.0	41.0	1660960286	10.435428	Is Haskell really the language of geniuses and academia? (2019)	https://habr.com/en/post/441350/	synergy20
32711726	11.983072	-7.7440114	story	15.0	55.0	1662288809	10.414959	Why Haskell Is Interesting? (2005)	https://web.archive.org/web/20130823122503/http://www.freesoftwaremagazine.com/articles/haskell	dvfjsdhgfv
32879734	11.950122	-7.6933556	story	15.0	154.0	1663437947	10.406878	Automatic Differentiation in 38 lines of Haskell	https://gist.github.com/ttesmer/948df432cf46ec6db8c1e83ab59b1b21	ttesmer
31785556	11.621606	-7.919884	story	15.0	181.0	1655506895	10.159885	Fyne, a cross-platform GUI toolkit written in Go	https://fyne.io	tomcam
22254020	12.246559	-7.5323176	comment	15.0	94.5	1580972167	-11.412518	Let me ask a question as someone with pretty minimal Java experience. If someone was starting a greenfield JVM project today, is there really any compelling reason not to choose Kotlin over Java?Becau...		dcolkitt
19131743	12.033933	-7.199011	comment	15.0	63.0	1549854081	-10.375316	I think there's a bigger issue with the narrative here. Sure, types (and tests) help avoiding bugs, and they are definitely useful in large projects like Airbnb. However, they also add a cost that is ...		franciscop
19207642	12.501203	-7.4891944	comment	15.0	65.0	1550669763	12.887983	I used to drink a lot of cool-aid from erlang. It is true, that they have got concurrency model right. They embraced actor model, messages between processies are copied over for a good reason, etc. Ho...		eddd
19478191	11.873988	-7.243353	comment	15.0	58.5	1553455148	-9.120668	I have considered multiple times switching from Python to other alternatives. However, I instantly discard any language with a Lisp-like syntax. I just cannot work with it. Being a Haskell hobbyist, I...		snrji
19583621	12.0266485	-7.7590656	comment	15.0	65.5	1554478848	10.423756	>The thing you need to look at if you’re using say, a dynamic language, or object oriented design, is that in the long term, what is the language and mindset of “objects” with dynamic dispatch providi...		gambler
19856626	12.061132	-7.819971	comment	15.0	52.5	1557300465	-11.4557905	"...great, Kotlin for Android, Dart for Flutter, on the ML side they're starting to adopt Swift, for networking infra code Go.What the heck is with this ""tower of babel""?!Are other people not bothered ..."		nnq
16670572	12.060381	-7.5457664	story	15.0	50.0	1521948936	7.3255725	Ask HN: Resources to Learn Functional Programming?		p33p
16737129	11.599217	-7.1391253	story	15.0	177.0	1522691723	-10.643449	Parallel tasks in Python: concurrent.futures	https://vinta.ws/code/parallel-tasks-in-python-concurrent-futures.html	gibuloto
17294548	11.602789	-7.9000125	story	15.0	165.0	1528819126	10.201264	Show HN: Fo: An experimental language which adds generics on top of Go	https://github.com/albrow/fo	polymathist
17353203	11.599626	-7.870628	story	15.0	82.0	1529478205	10.103297	Go-benchmark: Golang benchmarks used for optimizing code	https://github.com/cornelk/go-benchmark	pjf
17360479	11.809454	-7.1901884	story	15.0	159.0	1529534105	-8.989573	The state of type hints in Python	https://www.bernat.tech/the-state-of-type-hints-in-python/	BerislavLopac
17670682	11.672392	-7.8642716	story	15.0	111.0	1533209754	10.187703	Show HN: Life – A secure, blazing-fast, cross-platform WebAssembly VM in Go	https://github.com/perlin-network/life	twokei
17735560	12.099212	-7.8349547	story	15.0	229.0	1533924595	10.445272	Introduction to OCaml	https://blog.baturin.org/introduction-to-ocaml.html	jxub
21064911	11.869387	-7.2958617	story	15.0	391.0	1569361130	9.220465	V8 adds support for top-level await	https://chromium.googlesource.com/v8/v8.git/+/0ceee9ad28c21bc4971fb237cf87eb742fc787b8%5E%21/	hayd
21101736	11.959525	-7.4809647	comment	15.0	50.0	1569692774	7.3139105	It requires a certain amount of mathematical experience and is not suitable for people who are unfamiliar with school-level algebra, or unwilling to learn difficult concepts through prolonged mental c...		Tade0
21451119	12.1218405	-7.5641756	story	15.0	27.0	1572949266	11.875695	Ask HN: Why is functional programming not more popular?		allanmacgregor
21465977	11.859492	-7.2033963	comment	15.0	44.5	1573067723	9.076415	I don't understand the obsession with async code. I can understand it with JavaScript: browser environment was crippled and node copied that instead of making proper threading available. But for most ...		vbezhenar
21571938	11.766583	-7.3612366	story	15.0	242.0	1574160600	7.9682684	Algebraic Data Types: Things I wish someone had explained about FP	https://jrsinclair.com/articles/2019/algebraic-data-types-what-i-wish-someone-had-explained-about-functional-programming	jrsinclair
39299715	11.637735	-7.932273	story	15.0	184.0	1707381658	10.147855	Context Control in Go	https://zenhorace.dev/blog/context-control-go/	todsacerdoti
18345921	12.48087	-7.830893	comment	15.0	78.0	1540995863	-11.116344	I'd like to learn a modern production-ready functional language (I have some academic experience with SML), since they seem like a good way to grow as a programmer. Main contenders so far are Haskell,...		m12k
18414084	12.366274	-7.571851	story	15.0	165.0	1541769206	10.332117	ReasonML: Strict, powerful and forgiving	https://www.harigopal.in/talks/2018/jsfoo	jasim
18469672	11.60833	-7.902822	story	15.0	277.0	1542385289	10.170771	Golua – A Lua 5.3 engine implemented in Go	https://github.com/Azure/golua	grey-area
18692470	11.928751	-7.4574876	story	15.0	161.0	1544954997	-6.6323466	Can functional programming be liberated from the von Neumann paradigm? (2010)	http://conal.net/blog/posts/can-functional-programming-be-liberated-from-the-von-neumann-paradigm	stevekrouse
18715529	11.979215	-7.031209	story	15.0	142.0	1545227275	8.735104	JavaScript Getter-Setter Pyramid	https://staltz.com/javascript-getter-setter-pyramid.html	adgasf
18874029	12.500639	-7.0579953	comment	15.0	85.5	1547130555	12.4057045	Ruby is the very least favorite of all the programming languages I've had to use regularly over my career.Its syntax strongly favors cuteness over familiarity. Wherever Ruby can diverge from expectati...		pavlov
29927905	11.781405	-7.238761	story	15.0	90.0	1642113213	7.437675	PyFL – new functional programming language from Bill Wadge	https://billwadge.com/2022/01/13/functional-programming-for-the-rest-of-us-get-pyfl-now/	akakievich
30046272	11.608136	-7.0700126	story	15.0	132.0	1642947314	-7.6128163	Strict Python function parameters	https://sethmlarson.dev/blog/strict-python-function-parameters	todsacerdoti
30202953	11.642275	-7.9218264	comment	15.0	104.0	1643949761	10.1482315	The thing people don't seem to appreciate/understand with go is the effects of using it in serverless and cloud native environments.Every high throughput service I've had moved to GO has used a tiny a...		tgtweak
12888662	11.915093	-7.0613194	comment	15.0	51.0	1478490349	9.195408	Are there any languages that have really nailed this? I've used gevent, eventlet, (both python), promises, callbacks (node) and none of them come close to being as productive as synchronous code.I'd like to try out Akka and Elixer in the future.		tschellenbach
12903032	12.251714	-7.5512123	story	15.0	185.0	1478632188	-11.379346	Kotlin 1.0.5 is here	https://blog.jetbrains.com/kotlin/2016/11/kotlin-1-0-5-is-here/	ingve
12953266	11.735839	-7.101032	story	15.0	89.0	1479156927	7.4239635	ValueObject	http://martinfowler.com/bliki/ValueObject.html	ZainRiz
13050491	12.1619005	-7.597568	story	15.0	206.0	1480270973	11.916424	The Unsound Playground: Java and Scala's Type Systems are Unsound	http://io.livecode.ch/learn/namin/unsound	theemathas
13211268	11.981047	-7.6477304	comment	15.0	71.0	1482154703	10.341523	reads like an ode to Haskell/ML.while haskell/ML is beautiful, and i'd much prefer it if everyone did adopt it - it seems human nature is preferring languages such as C, Python, C# and Java, exactly d...		godmodus
27710798	11.613939	-7.875931	comment	15.0	101.5	1625230059	10.157897	They have 4 hand picked examples on their homepage: https://copilot.github.com/One has the issue with form encoding: https://news.ycombinator.com/item?id=27697884The python example is using floats for...		tyingq
27947495	11.767486	-7.368632	story	15.0	107.0	1627198923	8.925517	Types versus sets in math and programming languages	https://byorgey.wordpress.com/2021/06/24/types-versus-sets-in-math-and-programming-languages/	classified
12057192	11.665735	-7.087421	story	15.0	164.0	1467998824	-6.743662	Introducing Verve: minimalistic, static, functional language	http://tadeuzagallo.com/blog/introducing-verve/	milen
12328885	12.3390665	-7.0404897	story	15.0	121.0	1471738581	13.211676	I Botched a Perl 6 Release	http://perl6.party/post/I-Botched-A-Perl-6-Release-And-Now-A-Robot-Is-Taking-My-Job	zoffix222
28180531	12.328521	-7.0185843	story	15.0	77.0	1628948485	13.1906805	The Perl Foundation is fragmenting over Code of Conduct enforcement	https://arstechnica.com/gadgets/2021/08/the-perl-foundation-is-fragmenting-over-code-of-conduct-enforcement/	lycopodiopsida
28264028	11.772122	-7.699913	story	15.0	18.0	1629623679	-9.400249	Ash HN: Go or Rust for JavaScript developer in the next 20 years?		nfgoto
28476325	11.991573	-7.729752	comment	15.0	96.0	1631233181	10.365711	Wait, a functor is just a pure unary function? And an endofunctor is just one of those where the argument type and return type are the same? This could have been explained to me years ago, in five min...		brundolf
33503630	11.6326475	-7.9524064	story	15.0	69.0	1667814600	10.21089	Show HN: Game of Life on non-square topologies with 2^32 update rules	https://github.com/Jeadie/Go-L	jeadie
33709799	11.735532	-7.353688	story	15.0	101.0	1669144176	5.0739408	The case for dynamic, functional programming	https://www.onebigfluke.com/2022/11/the-case-for-dynamic-functional.html	todsacerdoti
33792874	12.1296215	-7.201902	story	15.0	293.0	1669753954	12.324375	Ruby adds a core class called Data to represent simple immutable value objects	https://blog.saeloun.com/2022/11/22/data-immutable-object.html	feross
33942901	11.595969	-7.9151735	comment	15.0	116.5	1670764798	10.2278805	Years and years of discussions about Go's poor and verbose error handling, with multiple sensible proposals being rejected, and this is the improvement that finally makes it into a release?What Go dem...		p-e-w
26673227	11.676218	-7.9612856	story	15.0	73.0	1617382559	10.219433	Go is a great programming language	https://drewdevault.com/2021/04/02/Go-is-a-great-language.html	als0
26779152	12.33628	-7.0432734	story	15.0	141.0	1618234077	13.20398	I am stepping down from Perl Steering Council and Core	https://perl.topicbox.com/groups/perl-core/T7a4f1bf9e069641f	jnotberg
26822201	11.616201	-7.905593	story	15.0	104.0	1618502650	10.23532	A Primer Through Golem	https://blog.golemproject.net/golem-primer/	kristianpaul
26936387	11.73499	-7.226313	comment	15.0	68.0	1619382668	-10.126242	> Low Code or even No CodeI look at the code I'm writing (mostly C# thesedays) and I consider the _information-theoretic_ view of the program code I'm writing, and I see a major problem is that even s...		DaiPlusPlus
27038606	11.600596	-7.9206147	story	15.0	161.0	1620142013	10.237895	Branchless Coding in Go	https://mattnakama.com/blog/go-branchless-coding/	gnum4n
27141307	11.642931	-7.9294753	comment	15.0	81.5	1620908799	10.182502	So I think DDD is basically one of the best pattern that has ever been discovered for developing good software (thinking of it along with gangof4, SOLID, etc). There's a lot of cruft around it and con...		hardwaresofton
27248505	12.008029	-7.786093	story	15.0	24.0	1621704059	10.451096	Monads Schmonads: Functional Input Without Tears (PYFL)	https://billwadge.wordpress.com/2021/05/22/monads-schmonads-functional-input-without-tears-pyfl/	herodotus
37672852	12.147217	-7.885748	story	15.0	161.0	1695811809	-3.282287	Applied Category Theory Course	https://math.ucr.edu/home/baez/act_course/	Schiphol
37684994	12.139931	-7.883072	comment	15.0	56.5	1695872774	-3.2376626	"I'm writing a book [1] about ""bona fide"" applications of mathematics to practical programming problems, where bona fide is my own personal definition [2]. I've had my eye on claims of applications of ..."		j2kun
37769382	12.090796	-7.0886903	comment	15.0	80.5	1696443464	-10.28382	"The only thing that really frustrates me in this discussion is that it's all about how people ""feel"" and without empiric evidence.The research out there found no meaningful difference between both sty..."		Draiken
38120598	12.098385	-7.464108	story	15.0	214.0	1698961263	-10.592649	Course using F#: Write your own tiny programming system(s)	https://d3s.mff.cuni.cz/teaching/nprg077/	Zolomon
38178988	11.75756	-7.312453	comment	15.0	90.0	1699375126	9.192785	Async is a huge wart and I try and avoid it wherever possible. It's simply not useful in a lot of cases that I encounter. However, if a library uses async, you have little choice but to make your whole project async. This adds to its horrible reputation.		inamberclad
15111515	11.974664	-7.212792	story	15.0	71.0	1503852527	9.186737	Async Iterators: These Promises Are Killing My Performance	https://medium.com/netscape/4767df03d85b	akubera
15297448	12.237966	-7.5836096	story	15.0	94.0	1505936214	-11.401735	Kotlin vs. Scala	https://www.codementor.io/jessicathornsby/kotlin-vs-scala-what-should-i-choose-instead-of-java-bwn9axvr8	dserban
15545686	11.6181555	-7.2084937	story	15.0	300.0	1508883304	5.115692	Dynamic Progamming: First Principles	http://www.flawlessrhetoric.com/Dynamic-Programming-First-Principles	foxh0und
15558051	11.875156	-7.6202636	story	15.0	162.0	1509018688	12.806765	Why we used Pony to write Wallaroo	https://blog.wallaroolabs.com/2017/10/why-we-used-pony-to-write-wallaroo/	spooneybarger
15582969	11.653292	-7.2063913	story	15.0	264.0	1509334879	-6.696469	F* – An ML-like functional programming language aimed at program verification	http://fstar-lang.org	philonoist
15606250	11.887281	-7.173673	story	15.0	261.0	1509577102	8.721558	Data Classes for Java	http://cr.openjdk.java.net/~briangoetz/amber/datum.html	mfiguiere
15622894	11.661047	-7.9384937	story	15.0	236.0	1509751332	10.234625	Neugram – Scripting in Go	https://neugram.io/blog/neugram-briefly	golangnews
24196057	12.245708	-7.56046	story	16.0	225.0	1597735013	-11.379501	Kotlin 1.4	https://blog.jetbrains.com/kotlin/2020/08/kotlin-1-4-released-with-a-focus-on-quality-and-performance/	ingve
24369892	12.456428	-7.091911	story	16.0	34.0	1599174757	12.374629	Ruby adds experimental support for Rightward assignments	https://blog.saeloun.com/2020/08/31/ruby-adds-experimental-rightward-assignment.html	matagus
20110513	11.985985	-7.6899896	comment	16.0	95.5	1559781750	10.400006	I'm really curious why Haskell has seen so little adoption in industry. Is it just the difficulty? Or a chicken-and-egg effect with tooling and libraries?One thing I've wondered is if it actually isn'...		_bxg1
20673506	11.992431	-7.7713656	story	16.0	233.0	1565597718	10.407548	Monads as a Programming Pattern	https://samgrayson.me/2019-08-06-monads-as-a-programming-pattern/	charmonium
20676024	11.664313	-7.0344005	comment	16.0	69.5	1565622162	-8.933393	"Here's some rational ""hate"" for Python then.I just returned to Python for the first time in a little while to collaborate on a side project and ran into a few tricky-to-debug errors that caused a fair..."		CydeWeys
13914004	11.687196	-7.259115	story	16.0	200.0	1490016668	-8.743526	Whiteboard problems in pure Lambda Calculus	http://www.jtolds.com/writing/2017/03/whiteboard-problems-in-pure-lambda-calculus/	jtolds
14059420	12.069462	-7.191835	story	16.0	65.0	1491571862	9.165166	Never Mix Promises and Callbacks in NodeJS	https://spin.atomicobject.com/2017/04/06/nodejs-promises-callbacks/#.WOeUlCGS_0c.hackernews	philk10
14546535	11.617466	-7.9335804	story	16.0	215.0	1497374406	10.204581	Program FPGAs with Go	https://reconfigure.io/	cjdrake
14676505	12.363442	-7.513545	story	16.0	202.0	1498906516	12.859718	Pony: Combining safe memory sharing with Erlang-like actors	https://tutorial.ponylang.org/getting-started/how-it-works.html	samuell
31380433	11.766003	-7.236894	comment	16.0	65.5	1652550242	8.178254	"I am an old school java developer. Can someone explain me why this is a ""feature""? I can remember by counting my fingers the times I had to use ""instanceof"", and it was some classical reflection/injec..."		quilombodigital
31448395	12.275658	-7.3119626	story	16.0	101.0	1653058823	7.108624	Design Principles Behind Smalltalk (1981)	http://www.cs.virginia.edu/~evans/cs655/readings/smalltalk.html	stopachka
31748173	11.87508	-7.256655	story	16.0	58.0	1655257192	10.337109	Duck typing is safe (2020)	http://www.jerf.org/iri/post/2954	benhoyt
25775696	12.091642	-7.0164914	story	16.0	172.0	1610628284	13.102273	A Complete Course of the Raku programming language	https://course.raku.org/	domm_plix
26145775	11.631603	-7.0857983	story	16.0	174.0	1613414913	8.909097	Python strings are immutable, but only sometimes	https://web.eecs.utk.edu/~azh/blog/pythonstringsaremutable.html	jermaustin1
26176940	11.985578	-7.7490053	story	16.0	129.0	1613632648	10.419234	Reflections on Using Haskell for My Startup	https://alistairb.dev/reflections-on-haskell-for-startup/	_query
35535404	11.993648	-7.7508388	story	16.0	74.0	1681277550	10.419003	Pedagogical Downsides of Haskell	https://ciobaca.substack.com/p/pedagogical-downsides-of-haskell	scscsc
35802532	11.914378	-7.6661606	comment	16.0	75.5	1683122623	0.9612688	I've talked to a lot of people using Haskell in production over the years, and one of the things I've consistently noticed is a disconnect between the Haskell features that are often touted, and the H...		kerkeslager
36134212	12.162383	-7.4752316	comment	16.0	101.5	1685504331	-10.575412	(Author here)Well this is a blast from the past.Back when I wrote this, I kinda hoped F# would surprise me and gain more traction than I expected.  But 8 years later, if anything, it seems like the do...		ericsink
36256987	11.805619	-7.2739635	story	16.0	111.0	1686314427	7.3354983	Functional Python Programming	https://docs.python.org/3/howto/functional.html	meatjuice
36433212	11.976918	-7.7145123	story	16.0	61.0	1687446180	10.412568	Writing prettier Haskell with Unicode syntax and Vim	https://alt-romes.github.io/posts/2023-06-21-haskell-unicode-syntax-vim.html	romes
28907154	11.803682	-7.232689	story	16.0	205.0	1634573777	-8.896648	Tests aren’t enough: Case study after adding type hints to urllib3	https://sethmlarson.dev/blog/2021-10-18/tests-arent-enough-case-study-after-adding-types-to-urllib3	quentinp
29299140	12.002962	-7.737173	story	16.0	304.0	1637524535	10.369625	Functorio	https://bartoszmilewski.com/2021/02/16/functorio/	shepherdjerred
29464166	11.780499	-7.231206	story	16.0	58.0	1638817730	-5.981456	Cloud infrastructure should be immutable	https://stroobants.dev/make-your-infrastructure-immutable.html	878654Tom
34567815	11.7220125	-7.2852397	story	16.0	189.0	1674998333	-8.710146	Bog – small, strongly typed, embeddable language	https://github.com/Vexu/bog	tsujp
36775920	11.640854	-7.9291744	comment	16.0	68.5	1689700404	10.236082	> anyone who knew anything about programming languages rolled their eyes at pretty much everything about Go's type systemAnd Go has succeeded despite these condescending diatribes on how a language ne...		softirq
37040961	12.206591	-7.0774236	comment	16.0	102.5	1691442458	13.137491	One way you might arranging programming languages in a 2D space is with two axes:1. How much should the language surprise you?2. When the language does surprise you, should it delight you or horrify y...		munificent
37422615	12.350482	-7.0484605	story	16.0	175.0	1694108267	13.1704855	Persimmon-8B	https://www.adept.ai/blog/persimmon-8b	jgershen
38689004	12.485527	-7.069045	comment	16.0	46.5	1702937082	2.3236547	I know it's not the point of the article, but, as a code reviewer, this:> Well written ruby code can often read like natural language. Features like predicate methods even give up punctuation. [...] T...		tines
32606193	11.69756	-7.032705	story	16.0	67.0	1661515106	7.3929176	ValueObject (2016)	https://martinfowler.com/bliki/ValueObject.html	ksec
22022667	11.660321	-7.6135406	comment	16.0	76.5	1578780232	10.126094	That can be boiled down to the “Rule of 3”.My CTO often asks me to implement a feature to do X and make it “generic enough to handle future use cases”. My answer is always the same - either give me at...		scarface74
22115267	11.682497	-7.9537644	comment	16.0	79.5	1579676545	10.248911	Coming from the C# and JVM world to go, tooling looked like one of the worst parts of Go.The debugging story is very limited:- No function execution- No edit-and-continue- No conditional breakpoints- ...		tsimionescu
18988939	11.770536	-7.040264	story	16.0	341.0	1548340255	5.1011424	Design Patterns for Managing Up	https://queue.acm.org/detail.cfm?id=3308563	tchalla
19190671	11.664191	-7.9328947	story	16.0	70.0	1550499382	10.21891	Generics aren't ready for Go	https://drewdevault.com/2019/02/18/Generics-arent-ready-for-Go.html	kragniz
19441537	11.645342	-7.9573474	story	16.0	131.0	1553086583	10.204107	Docli – A declarative language for command-line interfaces in Go	https://docli.dev	celicoo
19968496	11.950858	-7.342237	story	16.0	173.0	1558428146	6.965053	Alan Kay and OO Programming	https://ovid.github.io/articles/alan-kay-and-oo-programming.html	signa11
16211864	12.335437	-7.046643	story	16.0	157.0	1516695246	13.186293	Perl 6 Optimism	https://p6weekly.wordpress.com/2018/01/22/2018-04-its-time-for-optimism/	vgy7ujm
16245606	12.344303	-7.0356812	story	16.0	190.0	1517047417	13.176456	My Delorean runs Perl	https://opensource.com/article/18/1/my-delorean-runs-perl	rcarmo
16421697	11.817234	-7.8717422	comment	16.0	78.0	1519145190	10.382612	In university I was obsessed with Haskell and being clever and writing code that was an unholy stack of lambda functions and fancy constructs like monads and monad lifting. I used the typical intellec...		shiado
16453192	11.988156	-7.7250953	story	16.0	468.0	1519479378	10.397483	Learn Physics by Programming in Haskell	https://arxiv.org/abs/1412.4880	jxub
16468796	11.761486	-7.2548404	comment	16.0	71.0	1519677679	5.047198	"Eric Lippert's ""Wizards and Warriors"" blog posts seem appropriate here, especially as an example of how tracking state and OO can clash pretty badly.A common problem I see in object-oriented design is..."		hprotagonist
16574426	11.9088125	-7.421433	story	16.0	86.0	1520927461	7.263894	Developers love trendy new languages, but earn more with functional programming	https://arstechnica.com/gadgets/2018/03/developers-love-trendy-new-languages-but-earn-more-with-functional-programming/	rbanffy
16879189	11.7907295	-7.4172225	comment	16.0	92.5	1524165763	10.297621	I'm always curious what people are using the more exotic type system functionality of e.g. Haskell or Idris for in practice.  It was interesting to hear that even Simon didn't expect such things to be...		professor_plum
17330410	11.949287	-7.3701816	story	16.0	38.0	1529198300	7.043129	Evidence points to OOP being bullshit (2013)	https://content.pivotal.io/blog/all-evidence-points-to-oop-being-bullshit	m_sahaf
17418053	12.025	-7.5453906	comment	16.0	55.0	1530201848	7.3130126	Hijacking this thread to ask you this.What should I learn if I want to develop desktop apps and I like functional programming? I feel like most of the cool 'new' programming languages are OOP (rust, go, scala).		isakkeyten
21558013	11.633075	-7.9580154	story	16.0	256.0	1574000952	-11.662445	Gource.io – a software version control visualization tool	http://gource.io	fortran77
21559670	12.401315	-7.502404	comment	16.0	77.5	1574020312	-9.261345	Kay was at least as inspired by biological processes -- bacteria transmitting chemical signals to one another, for instance -- as he was by computer networks.I think the big thing that Kay missed was ...		bitwize
21626972	11.625444	-7.8471403	story	16.0	305.0	1574679156	10.1804905	Writing An Interpreter In Go (2016)	https://interpreterbook.com/	tambourine_man
21727713	12.259684	-7.5652742	story	16.0	104.0	1575680557	-11.399255	Android’s Commitment to Kotlin	https://android-developers.googleblog.com/2019/12/androids-commitment-to-kotlin.html	WalterSobchak
39284476	11.761343	-7.740113	comment	16.0	60.5	1707279837	10.195775	I've been mostly writing Typescript the past 3 years - and recently started writing code in Go. Initially I was a little apprehensive, lack of array functions, slightly less flexible type-system, etc....		BillyTheKing
18160434	11.834385	-7.2899103	comment	16.0	73.5	1538919023	-8.936544	"> ""With function specs, I could assert the inputs and outputs to specific functions at runtime; not quite as reassuring as compile-time but better than nothing!""For 10 years I've seen many developers ..."		sdegutis
18230938	11.610211	-7.9174767	comment	16.0	68.0	1539708828	-1.6359069	"I'm the tech lead and primary software engineer on the Go runtime. If you have any questions, please don't hesitate to ask!
I'm super thrilled to announce that Go 1.11 is now available on App Engine! ..."		buss
18422702	11.638398	-7.946737	comment	16.0	45.0	1541874781	10.206167	just wondering, what are some well known Go projects? I know  docker is one.		auvi
29948392	12.318851	-7.3155456	story	16.0	85.0	1642268402	7.045255	SmallTalkUnix	http://thoughtstorms.info/view/SmallTalkUnix	mpweiher
30047028	11.592274	-7.065962	comment	16.0	59.0	1642952905	-7.7206597	"I'm curious if anyones found a good solution to Python default args?For example, this doesn't do what people expect:    def foo(bar=Bar())
        ...

Because this creates exactly one Bar at function..."		softwaredoug
12782888	11.9740505	-7.7296977	story	16.0	157.0	1477343089	10.414102	A Taste of Haskell	https://hookrace.net/blog/a-taste-of-haskell/	def-
13305435	12.13567	-7.873094	story	16.0	248.0	1483400452	-3.2112415	Basic Category Theory	https://arxiv.org/abs/1612.09375v1	adamnemecek
27830293	11.734705	-7.3559327	comment	16.0	41.5	1626244294	-8.851763	I wanna see a language where the type system and the actual language are the same language.I'm not talking about self-hosted compiler, which TS is already. But basically what runs statically and what ...		historyloop
27972900	12.035009	-7.7193246	story	16.0	176.0	1627396337	10.446076	Functional Programming in OCaml	https://www.cs.cornell.edu/courses/cs3110/2021sp/textbook/intro/intro.html	noch
12209889	11.995776	-7.7108917	story	16.0	220.0	1470145793	10.387502	Show HN: Learn Functional Programming Using Haskell	http://lambdaschool.com/	xwowsersx
12518333	12.177893	-7.519466	story	16.0	72.0	1474070978	11.923164	The Python Paradox Is Now the Scala Paradox (2009)	https://martin.kleppmann.com/2009/09/18/the-python-paradox-is-now-the-scala-paradox.html	tomrod
35399754	11.79612	-7.3087673	story	16.0	57.0	1680352371	5.098229	Is It Imperative to Be Declarative?	https://blog.container-solutions.com/is-it-imperative-to-be-declarative	zwischenzug
28022725	11.96665	-7.0811276	story	16.0	38.0	1627778417	9.108888	What if JavaScript had a synchronous async flavor?	https://guido.io/posts/nasync-javascript/	protoduction
22525410	11.981719	-7.5187135	comment	16.0	60.0	1583762697	7.3516374	Great article, great technique and lot of on-point advice for intermediate level programmers, BUT, it has the same problem many functional programming advocacy posts suffer from: the code examples are...		diegoperini
33804443	12.139957	-7.8835955	comment	16.0	72.0	1669830275	-3.2380095	I would be willing to drink the kool-aid if I saw it being used in a practical way. I always feel these posts are filled with category theory jargon without ever explaining why any of the jargon is re...		i_am_toaster
26540121	11.650002	-7.9582872	story	16.0	204.0	1616417701	10.2004175	The ecosystem of the Go programming language	https://henvic.dev/posts/go/	henvic
26640118	11.802451	-7.254333	story	16.0	136.0	1617136659	-9.562128	C# 9 top-level programs and target-typed expressions	https://developers.redhat.com/blog/2021/03/30/c-9-top-level-programs-and-target-typed-expressions/	benaadams
27406825	11.922987	-7.358204	story	16.0	39.0	1622913377	6.986648	The faster you unlearn OOP, the better for you and your software	https://dpc.pw/the-faster-you-unlearn-oop-the-better-for-you-and-your-software	signa11
37742138	11.984143	-7.7477303	story	16.0	124.0	1696270226	10.424151	My views on NeoHaskell	https://www.haskellforall.com/2023/10/my-views-on-neohaskell.html	galfarragem
37850785	11.624547	-7.963629	story	16.0	22.0	1697061477	10.231702	Ask HN: What's the big deal with Go (Golang)?		coreyp_1
38456299	11.825971	-7.188905	story	16.0	110.0	1701239883	-8.997909	Show HN: Python-Type-Challenges, master Python typing with online exercises	https://python-type-challenges.zeabur.app/	laike9m
14882209	12.254342	-7.5621305	story	16.0	142.0	1501349942	-11.381424	The case against Kotlin	https://medium.com/@Pinterest_Engineering/the-case-against-kotlin-2c574cb87953	PleaseHelpMe
14918437	11.856721	-7.0236845	story	16.0	110.0	1501756891	-6.9883995	Javascript Arrays and Functional Programming	http://zabanaa.github.io/notes/functional-programming-and-javascript-arrays.html	zabana
15251347	11.646077	-7.253908	story	16.0	176.0	1505415607	-8.757242	How to compare two functions for equivalence, as in (λx.2*x) == (λx.x+x)?	https://stackoverflow.com/questions/17045941/how-to-compare-two-functions-for-equivalence-as-in-%CE%BBx-2x-%CE%BBx-xx	tosh
15392159	11.6387825	-7.9454	story	16.0	320.0	1507036658	10.215343	Matcha – A framework for building iOS and Android apps in Go	https://github.com/gomatcha/matcha	pritambarhate
15399787	11.931595	-7.489633	story	16.0	351.0	1507117697	4.983049	From design patterns to category theory	http://blog.ploeh.dk/2017/10/04/from-design-patterns-to-category-theory/	mpweiher
15524320	12.280342	-7.3070025	comment	16.0	52.5	1508630592	7.1099424	Does anyone on here program in Smalltalk professionally? Not to get off topic, but I'm curious and would like to know how it stacks up compared to what they did previously.		throwaway7645
15734693	11.976546	-7.719072	story	16.0	254.0	1511111423	10.423113	Haskell for Mac IDE	http://haskellformac.com/	philonoist
23421582	12.224708	-7.6318765	story	17.0	284.0	1591303771	11.908993	Hands-On Scala Programming	http://handsonscala.com	lihaoyi
23423755	11.605669	-7.928813	story	17.0	159.0	1591317335	10.196986	The Go Compiler Needs to Be Smarter	https://lemire.me/blog/2020/06/04/the-go-compiler-needs-to-be-smarter/	hactually
24318244	12.011245	-7.8072057	story	17.0	128.0	1598725330	10.425845	Inventing Monads	https://stopa.io/post/247	stopachka
20159153	11.824367	-7.203218	story	17.0	127.0	1560284344	-8.973052	A Failed Experiment with Python Type Annotations	https://mortoray.com/2019/06/11/a-failed-experiment-with-python-type-annotations/	ingve
20211301	11.73687	-7.8950396	comment	17.0	113.5	1560852769	10.253996	I just don't think Go has a place in new code. I know Googlers (who shall remain unnamed to protect the innocent, and politics at that company can kill your career) who joined the Go fandom because it...		DiabloD3
20448860	11.943153	-7.4396787	story	17.0	47.0	1563272963	7.204734	A Secret Weapon for Startups – Functional Programming?	https://www.ramanan.com/personal-blog/2019/2/25/functional-programming-and-venture-capital	allenleein
20516063	11.620603	-7.8615017	story	17.0	220.0	1563981310	10.186531	Yaegi – Yet Another Go Interpreter	https://blog.containo.us/announcing-yaegi-263a1e2d070a	emilevauge
20712646	11.979223	-7.7326074	story	17.0	166.0	1565936510	10.405152	Dependent Haskell Is the Future (2018)	https://serokell.io/blog/why-dependent-haskell	allenleein
13641823	11.641279	-7.9440446	story	17.0	85.0	1487056256	10.211271	Hero – A handy, fast and powerful Go template engine	https://github.com/shiyanhui/hero	lime66
13850654	11.698816	-7.826674	story	17.0	25.0	1489326920	10.200662	Google will kill Python 3, and it might be a good thing		mk44
13907445	12.010119	-7.744023	comment	17.0	73.0	1489935746	10.434459	"I don't know how to ask this without it sounding offensive, and I don't intend it that way.   But do these ""hardcore"" haskellers enjoy writing programs at all?  Like are there any well known open sour..."		TheCondor
14026996	12.137499	-7.889007	comment	17.0	58.0	1491252518	-3.2054107	Can anyone point to any concrete benefits theyve gained from learning Category Theory? I've used Haskell and I see some value from that (mostly in getting more comfortable with functions and typings I suppose), but not sure if I should spend any time on Category Theory.		ruleabidinguser
14071203	11.700126	-7.8143015	story	17.0	78.0	1491727727	10.179274	Why We switched from Python To Go	https://medium.com/@tigranbs/5-reasons-why-we-switched-from-python-to-go-4414d5f42690	ollieco
14077863	11.647019	-7.244844	story	17.0	180.0	1491826935	0.1908	Programming in the Point-Free Style	https://eiriktsarpalis.wordpress.com/2017/04/02/programming-in-the-point-free-style/	douche
14504244	12.34012	-7.257255	story	17.0	118.0	1496818825	7.141048	Pharo 6.0 Released	http://pharo.org/news/pharo6.0-released	ch_123
14663775	12.025018	-7.548542	comment	17.0	59.5	1498748059	-11.083246	Anyone else dislike the immutability fad?Mutability has its place, and simply hiding it behind abstractions tacked on to the language (vars, refs, agents, and atoms in Clojure's case) isn't a producti...		sillysaurus3
31008141	11.682746	-7.5942564	story	17.0	226.0	1649796975	10.0786705	When to use generics	https://go.dev/blog/when-generics	mfrw
31366146	11.683515	-7.8675094	comment	17.0	49.5	1652441930	10.215014	Wanting SQLite in Go touches on something that I think is quite a waste in modern Go circles, but happens everywhere to varying degrees.There's often (for instance, in Go projects wanting to avoid cgo...		srer
31589380	11.779139	-7.3190613	story	17.0	82.0	1654125555	-8.924487	The curse of strong typing	https://fasterthanli.me/articles/the-curse-of-strong-typing	jacobwg
25461760	12.288402	-7.3185964	story	17.0	163.0	1608246810	7.03391	The Smalltalk Zoo	https://computerhistory.org/blog/introducing-the-smalltalk-zoo-48-years-of-smalltalk-history-at-chm/	fniephaus
25933972	11.781187	-7.03813	comment	17.0	74.5	1611781692	-8.748507	In general, object orientation is a reasonably elegant way of binding together a compound data type and functions that operate on that data type.  Let us accept this at least, and be happy to use it i...		gorgoiler
26151575	12.487528	-7.0342617	story	17.0	205.0	1613458213	12.380984	Learning Ruby: Things I Like, Things I Miss from Python	https://medium.com/workpath-thewaywework/learning-ruby-2-things-i-like-2-things-i-miss-from-python-6f60af8ed16c	OKRHero
26238262	11.739856	-7.0846095	story	17.0	234.0	1614093666	-8.99617	Mypyc: Compile type-annotated Python to C	https://github.com/python/mypy/tree/master/mypyc	mvolfik
35712099	12.213768	-7.0936823	story	17.0	160.0	1682509085	12.337827	Ruby's switch statement is flexible	https://www.akshaykhot.com/ruby-switch-statement/	thunderbong
36283972	12.245586	-7.5510726	comment	17.0	79.5	1686507157	-11.364716	I'm impressed with how Java is shaping up. With records, pattern matching, destructuring, and virtual threads all arrived or arriving, what advantages do Kotlin and Scala bring?		hamandcheese
36296185	12.272608	-7.669282	story	17.0	195.0	1686587331	10.381503	Melange 1.0: Compile OCaml / ReasonML to JavaScript	https://buttondown.email/anmonteiro/archive/melange-hits-v10/	anmonteiro90
36515792	11.79411	-7.0987263	comment	17.0	68.5	1688007376	-9.018565	"My current role is at a company with a few hundred thousand lines of un-typed, undocumented, mostly un-tested Python. I get a small allowance of ""tech debt busting"" time, and it's absurd how many bugs I find just by trying to suss out the types on a given code path. It's maddening work."		ddejohn
28715535	11.719342	-7.381251	comment	17.0	76.0	1633072093	-8.75368	It never ceases to amaze me how theorists can take simple concepts and make them impenetrable.A type is a (possibly infinite) subset of all the possible values that can be provided as input to a progr...		lisper
29525176	11.850325	-7.362219	story	17.0	99.0	1639264194	6.9798493	Why general inheritance is flawed and how to finally fix it	http://minborgsjavapot.blogspot.com/2021/12/why-general-inheritance-is-flawed-and.html	gulbrandr
34344514	11.592118	-7.8602767	story	17.0	254.0	1673470133	10.031858	Conc: Better Structured Concurrency for Go	https://github.com/sourcegraph/conc	aurame420
36787582	11.61105	-7.0626416	comment	17.0	51.5	1689778862	9.02613	Something I hate in my own code is this pattern of instantiating an empty list and then iterating on it when reading files. Is there a better way than starting  lst= [] and then later doing lst.append...		kingkongjaffa
36855539	11.801202	-7.116921	comment	17.0	59.5	1690240521	9.218797	I'm annoyed at the reason that any/all have to be on this list. If they (and map, filter, …) were methods, you could just write `foo.` and your IDE could show you what methods are available. Postfix w...		skitter
37063695	11.704099	-7.3543653	story	17.0	138.0	1691593043	-8.918451	Why Static Languages Suffer from Complexity (2022)	https://hirrolot.github.io/posts/why-static-languages-suffer-from-complexity.html	mpweiher
37154253	11.670046	-7.0327506	comment	17.0	48.5	1692222062	9.060935	I feel like this kind of operation on a list feels more naturally expressed by filtering the list and taking the length of the filtered list.Like this line of JS feels so much easier to read than that...		tcoff91
37539178	11.671656	-7.8518953	comment	17.0	197.5	1694901728	9.968094	The biggest feature in Java 21 is the release of Virtual Threads: https://openjdk.org/jeps/444For some reason, this is missing from the article. If there was any feature that would sway existing Golan...		northern-lights
37539937	11.702326	-7.8684063	comment	17.0	155.0	1694907530	10.208115	I don't think any existing Go developer is going back to Java.I worked with Java for 10 years and switched to Go and I will never go back.This is mostly because applications and libraries are so hard ...		impulser_
24711679	11.87411	-7.313071	comment	17.0	64.0	1602098575	7.3754945	"Why do you need all this theory when you can use simple imperative languages?    for staff in company.staff:
      for pet in staff.pets:
        if pet.type == 'cat':
          print(pet.name + "" belongs to "" + staff.name)

I don't understand why functional languages are used at all."		vortico
24949882	11.952998	-7.4542727	story	17.0	202.0	1604132927	7.254717	Why I Prefer Functional Programming	http://www.haskellforall.com/2020/10/why-i-prefer-functional-programming.html	quickthrower2
24986132	11.975017	-7.732821	story	17.0	177.0	1604457184	10.401787	Three Months of Go from a Haskeller’s perspective (2016)	https://memo.barrucadu.co.uk/three-months-of-go.html	amzans
25021660	12.328338	-7.0170326	comment	17.0	42.5	1604797064	13.184573	I’m curious, is anyone doing active development with Perl? All the Perl I’ve seen has been in legacy systems.		randmeerkat
25300233	11.646764	-7.3830404	story	17.0	171.0	1607070285	9.166161	Project Loom and Structured Concurrency	https://www.javaadvent.com/2020/12/project-loom-and-structured-concurrency.html	ingve
38671134	11.681851	-7.3708415	story	17.0	43.0	1702799860	7.196185	Oi (Interjection)	https://en.wikipedia.org/wiki/Oi_(interjection)	userbinator
38948259	12.259728	-7.5597353	story	17.0	48.0	1704952096	-11.395793	The golden age of Kotlin and its uncertain future	https://shiftmag.dev/kotlin-vs-java-2392/	philonoist
33024748	11.592741	-7.0939507	story	17.0	213.0	1664474635	8.9844675	Virtual Threads: New Foundations for High-Scale Java Applications	https://www.infoq.com/articles/java-virtual-threads/	axelfontaine
32427002	12.296081	-7.3228836	story	17.0	136.0	1660230929	7.0941734	Byte Magazine Special Issue: Smalltalk (1984)	https://archive.org/details/byte-magazine-1981-08	PaulHoule
32452080	11.845677	-7.145789	story	17.0	167.0	1660412750	-9.01483	Erg: a statically typed language that is Python compatible	https://github.com/erg-lang/erg	ArdelleF
19011777	12.239745	-7.6285057	story	17.0	32.0	1548599033	11.915887	Ask HN: Should I be learning Scala in 2019?		TG94
19389114	12.503417	-7.041785	story	17.0	185.0	1552570977	-11.30308	What causes Ruby memory bloat?	https://www.joyfulbikeshedding.com/blog/2019-03-14-what-causes-ruby-memory-bloat.html	adamors
16386752	12.049494	-7.482259	story	17.0	113.0	1518722833	10.037391	JavaScript Promises Discussion: Make Them Monadic? (2013)	https://github.com/promises-aplus/promises-spec/issues/94	jashkenas
16623720	11.625407	-7.923663	story	17.0	324.0	1521497430	10.209149	How to Use Go Interfaces	https://blog.chewxy.com/2018/03/18/golang-interfaces/	boyter
17826731	12.039833	-7.7329826	story	17.0	272.0	1535028163	10.454031	Introduction to Functional Programming in OCaml	https://www.fun-mooc.fr/courses/course-v1:parisdiderot+56002+session03/about	melling
21002073	12.010863	-7.7682867	story	17.0	252.0	1568775602	10.383379	Functor, Applicative, and Monad	https://typeslogicscats.gitlab.io/posts/functor-applicative-monad.html	TheAsprngHacker
21018226	11.96062	-7.4510007	story	17.0	141.0	1568912846	7.278345	Why I Prefer Functional Programming	https://morgenthum.dev/articles/why-prefer-fp	allenleein
21170916	12.006365	-7.761239	comment	17.0	108.0	1570354960	10.440899	The biggest lie about Haskell is that it's easy to learn. No it's not, and I do use it at work. Sure, it's not THAT difficult to get a basic understanding until you get to the usual Functor, Applicati...		li4ick
21186293	11.612811	-7.9381905	story	17.0	117.0	1570484805	10.154748	Gio: Portable, Immediate Mode GUI in Go	https://git.sr.ht/~eliasnaur/gio	todd8
21430745	11.901257	-7.199171	story	17.0	132.0	1572735966	3.084034	The Misunderstood Roots of FRP	https://futureofcoding.org/essays/dctp	ecbu
21740291	11.595479	-7.91654	comment	17.0	62.5	1575863707	10.214341	I've seen a lot of developers, especially developers with C backgrounds, reach for Makefiles when approaching Go development, and I think it's a harmful practice. So, I'd like to offer a respectful bu...		echlebek
18058656	11.905934	-7.5239377	comment	17.0	65.5	1537803932	10.405282	I haven't watched the full talk, so let me know if this gets explored by Lamport, but...Here's a thought: PL researchers seem to generally agree that typed languages are superior to untyped languages,...		aidenn0
18265199	12.4550705	-7.53442	comment	17.0	82.0	1540066637	12.891963	As someone who has worked two jobs now writing, deploying, and operating Erlang clusters, I recommend switching to Rust. Erlang requires a lot of TLC to get right, it's super slow, and it's hard to bu...		ilovecaching
18704547	11.827213	-7.1218424	story	17.0	84.0	1545107659	9.197092	Equivalence of State Machines and Coroutines	http://250bpm.com/blog:141	rumcajz
29875442	12.085883	-7.876629	story	17.0	320.0	1641825564	10.447193	OCaml Multicore merged upstream	https://github.com/ocaml/ocaml/commit/001997e81342fd0d321fd877b73608150601e7d9	sadiq
29890205	12.277316	-7.310706	story	17.0	152.0	1641900944	7.1365924	On Learning Smalltalk	https://blog.robsayers.com/on-learning-smalltalk	xkriva11
30487792	11.665494	-7.963529	story	17.0	57.0	1645965255	-7.9260554	Dependency injection in Go with Uber-go/fx	https://vincent.composieux.fr/article/dependency-injection-in-go-with-uber-go-fx	eko
12662895	12.236002	-7.638981	story	17.0	42.0	1475865375	11.926483	The Rise and Fall of Scala	https://dzone.com/articles/the-rise-and-fall-of-scala	0xmohit
12870380	11.906247	-7.120107	story	17.0	151.0	1478233638	-5.9742255	Error Handling in Node.js	https://www.joyent.com/node-js/production/design/errors	lsm
13129841	11.928772	-7.4868298	comment	17.0	80.0	1481199046	7.2970924	A lot of pleas for functional programming give a long list of convincing examples that work well with functional programming. You can do this with almost any language, and this is also quite deception...		kutkloon7
13247858	11.67489	-7.93849	story	17.0	296.0	1482536705	10.204583	Writing web applications using only the Go Standard Library	https://golang.org/doc/articles/wiki/	xorbox
13252692	11.851863	-7.4191933	comment	17.0	66.0	1482636000	7.3398533	"The thing with functional languages is that most imperative languages can ""do functional things"", but not vice versa.For example, many algorithms are beautiful when expressed in a recursive manner (Fi..."		dispose13432
13294431	11.602691	-7.094791	story	17.0	134.0	1483238387	9.141024	How (Not?) to Use Python’s List Comprehensions	http://moderndescartes.com/essays/python_list_comprehensions	luu
13434617	11.619739	-7.3363934	story	17.0	38.0	1484821540	9.329876	Swoole 2.0 will support native php coroutine	https://github.com/swoole/swoole-src/blob/master/Version2.md	hantianfeng
27640308	11.785257	-7.2914295	story	17.0	151.0	1624697749	-6.0433564	Immutability Changes Everything (2016)	https://queue.acm.org/detail.cfm?id=2884038	Garbage
12111747	11.656168	-7.2918415	story	17.0	171.0	1468788538	-8.797491	The new TrueType interpreter in FreeType 2.7.0	http://lists.nongnu.org/archive/html/freetype-devel/2016-07/msg00091.html	rbanffy
12120160	11.898747	-7.4162526	story	17.0	144.0	1468909591	7.2773805	Functional programming in C (2013)	https://lucabolognese.wordpress.com/2013/01/04/functional-programming-in-c/	vasili111
12262073	12.233347	-7.6406407	story	17.0	106.0	1470839870	11.936666	From first principles: Why I bet on Scala.js	http://www.lihaoyi.com/post/FromfirstprinciplesWhyIbetonScalajs.html	lihaoyi
12491299	12.40228	-7.034509	story	17.0	165.0	1473793783	-11.279984	How I spent two weeks hunting a memory leak in Ruby (2015)	http://www.be9.io/2015/09/21/memory-leak/	Whitespace
12530265	12.157033	-7.51537	story	17.0	56.0	1474281219	-10.597029	Why Isn’t F# the King of .NET?	https://medium.com/@chrisdaviesgeek/why-isnt-f-the-king-of-net-2a9a1963e087#.edqv5al5j	douche
35178719	12.134931	-7.8751845	story	17.0	191.0	1678947014	-3.196717	Category Theory Illustrated	https://abuseofnotation.github.io/category-theory-illustrated/00_about/	signa11
35210400	12.141471	-7.8816667	comment	17.0	59.5	1679156748	-3.1982455	"Working as a SWE for lots of years, I've worked with people that always feel the need to ""add a level of abstraction"" or ""build a framework"" for (and out of) everything.  A lot of the time it doesn't ..."		timmg
28521179	11.795052	-7.239011	comment	17.0	104.0	1631602086	-6.311359	Languages do not becomes successful due to their intrinsic qualities. Languages become successful when they are coupled to a successful platform. E.g. C became popular because Unix became popular, Jav...		goto11
28660157	12.126688	-7.870162	story	17.0	282.0	1632657438	-3.1958842	Category Theory Illustrated – Logic	https://boris-marinov.github.io/category-theory-illustrated/05_logic/	todsacerdoti
22368330	11.952336	-7.685245	story	17.0	149.0	1582136306	0.47005266	Dogelang – A Python with Haskell Syntax	http://pyos.github.io/dg/	pcr910303
22840211	11.974112	-7.742093	story	17.0	286.0	1586590282	10.403832	What I Wish I Knew When Learning Haskell	http://dev.stephendiehl.com/hask/	Cieplak
33481919	11.736813	-7.4023137	comment	17.0	60.0	1667659333	-8.716066	Articles like this bug me. You've given me a list of why types are awesome. Great. Now, tell me what the tradeoff is. Nothing is free in engineering. To get something, you have to give up something else. Even grug[0] understands this.[0]: https://grugbrain.dev/#grug-on-type-systems		PainfullyNormal
33786996	11.592007	-7.8709607	comment	17.0	78.0	1669726523	-13.843997	"I couldn't disagree with this any harder. I'm a Java BE Engineer who joined a Go shop, so I have a direct comparison. Both are microservice environments for products of similar complexity. 
It is insa..."		Spiwux
33970547	11.843579	-7.6376624	story	17.0	196.0	1670946964	12.846441	Pony Programming Language	https://github.com/ponylang/ponyc	curling_grad
26568015	11.649916	-7.9647126	comment	17.0	57.0	1616597801	10.232253	Hello all,After 2.5 years of writing, countless weekends and evenings, I released a book about the Go programming language.The book is available for free on the website because I wanted to give someth...		maximilienandi
26983192	12.140563	-7.87082	story	17.0	214.0	1619713704	-3.2016826	Category theory is a universal modeling language	http://math.mit.edu/~dspivak/informatics/	bmc7505
15341745	12.135437	-7.514685	story	17.0	100.0	1506453923	-10.605317	Ineffective coding habits many F# programmers don’t have	https://functional.works-hub.com/blog/Seven-ineffective-coding-habits-many-F-programmers-don-t-have	ingve
24196425	12.136851	-7.8882375	comment	18.0	58.5	1597739556	-3.1927454	The short version appears to be that the author has managed to replace standard linear algebra notation with an alternative (but mathematically equivalent) graphical notation, which is harder to do co...		spekcular
24353976	12.131665	-7.8122573	story	18.0	342.0	1599059285	-3.2043958	Programming with Categories	http://brendanfong.com/programmingcats.html	kercker
19979178	11.651854	-7.9418	comment	18.0	66.0	1558514885	10.2331295	I'm going to risk being labeled an ~incompetent dev~ or whatever but learning golang was seriously a breath of fresh air compared to literally any language I have ever tried to grok before.Everything ...		doesnt_know
20255694	11.982999	-7.7444654	story	18.0	253.0	1561299616	10.416278	Haskell Fan Site	http://www-cs-students.stanford.edu/~blynn/haskell/	allenleein
20815914	12.021571	-7.6990247	story	18.0	26.0	1566953615	10.402711	Ask HN: Beginner Programmer: Haskell Book or SICP?		deftturtle
13857064	11.653053	-7.9369164	story	18.0	144.0	1489407256	10.219622	Simple command-line snippet manager, written in Go	https://github.com/knqyf263/pet	enrico50
14235020	11.727754	-7.304527	story	18.0	289.0	1493603704	-8.133084	“A closure is a poor man’s object; an object is a poor man’s closure” (2003)	http://people.csail.mit.edu/gregs/ll1-discuss-archive-html/msg03277.html	noblethrasher
14238944	12.255723	-7.5384064	story	18.0	80.0	1493656078	-11.388578	Kotlin doesn’t need an LLVM backend (2016)	https://blog.plan99.net/kotlin-native-310ffac94af2	bmaupin
14267152	11.9974375	-7.7502227	comment	18.0	73.5	1493920904	10.411898	Question to the Haskell experts here.Is Haskell more academic in nature or used heavily in Production environments?Is there an application sweet spot/domain (say Artificial Intelligence/Machine Learni...		gjkood
31217920	11.988616	-7.569347	story	18.0	127.0	1651342236	10.4970875	What was wrong with SML?	https://blog.plover.com/prog/haskell/sml-defects.html	rdpintqogeogsaa
26082225	11.600407	-7.0747457	comment	18.0	124.0	1612903906	9.5547285	"IMO the match statement has some very unintuitive behaviour:    match status:
        case 404:
            return ""Not found""

    not_found = 404
    match status:
        case not_found:
          ..."		pansa2
35903915	12.340883	-7.2580614	comment	18.0	83.0	1683820170	7.1366296	I got curious, downloaded and installed it on my computer. Checked the docs, and the next step was to download a stable image. Downloaded 11 (stable) and started it. Then blank stare to screen! What s...		jventura
36019413	11.823107	-7.1317267	comment	18.0	85.5	1684663371	-9.0514345	Lots of comments here are stating that typing is half baked in Python, and that if you gotta use types, you should use another language.But that's missing the point that Python is still not meant to b...		BiteCode_dev
36422116	11.729958	-7.1583447	story	18.0	118.0	1687371038	6.974038	Object-oriented Programming with ANSI-C (1993) [pdf]	https://www.mclibre.org/descargar/docs/libros/ooc-ats.pdf	Tomte
28690798	12.036496	-7.8208895	story	18.0	101.0	1632896361	10.442638	Abstraction, intuition, and the “monad tutorial fallacy” (2009)	https://byorgey.wordpress.com/2009/01/12/abstraction-intuition-and-the-monad-tutorial-fallacy/	Tomte
28702933	11.727543	-7.3940825	story	18.0	205.0	1632973061	-8.683314	Where do type systems come from? (2017)	http://blog.felipe.rs/2017/07/07/where-do-type-systems-come-from	signa11
28860861	11.760431	-7.09343	story	18.0	53.0	1634190142	5.2425604	Design patterns let you apply existing solutions to your code	https://stackoverflow.blog/2021/10/13/why-solve-a-problem-twice-design-patterns-let-you-apply-existing-solutions-to-your-code/	skellertor
28946356	11.616908	-7.22096	comment	18.0	50.5	1634831700	9.201002	As I master my 15th or so language, I can't help noticing how often I have to search online for the simplest of tasks whenever I switch languages now because it's all turned into a big jumble.Does it ...		kstenerud
34566192	11.971415	-7.484161	story	18.0	75.0	1674982299	1.97786	How to Lose Functional Programming at Work	https://robertwpearce.com/how-to-lose-functional-programming-at-work.html	todsacerdoti
34612919	12.389165	-7.398061	story	18.0	182.0	1675269067	1.6432234	Erlang: The coding language that finance forgot (2022)	https://www.efinancialcareers.com/news/2022/01/elixir-jobs	mindcrime
34659023	11.638495	-7.8446307	story	18.0	41.0	1675549219	10.134411	Go-like channels in 10 lines of JavaScript	https://pedrocattori.dev/blog/go-like-channels-in-10-lines-of-javascript	pcattori
35073136	11.889675	-7.0735683	story	18.0	147.0	1678301405	-10.758607	Overhead of Python asyncio tasks	https://textual.textualize.io/blog/2023/03/08/overhead-of-python-asyncio-tasks/	willm
36551617	11.696526	-7.8132887	story	18.0	260.0	1688227765	10.088099	Wazero: Zero dependency WebAssembly runtime written in Go	https://wazero.io/	ingve
37123193	11.648506	-7.947122	comment	18.0	58.5	1692031582	10.166762	> That raises an obvious question: when should we expect the Go 2 specification that breaks old Go 1 programs?> The answer is never. Go 2, in the sense of breaking with the past and no longer compilin...		dcow
37276424	11.661663	-7.904161	story	18.0	159.0	1693080702	10.188454	Gojekyll: A fast, partially compatible Go clone of Jekyll	https://github.com/osteele/gojekyll	danogentili
37535848	11.818476	-7.1093764	story	18.0	23.0	1694879392	-8.996183	Should I Haskell or OCaml?		catlover76
24958392	12.255866	-7.5774684	story	18.0	295.0	1604224339	-11.352825	Netflix Android and iOS Studio Apps now powered by Kotlin Multiplatform	https://netflixtechblog.com/netflix-android-and-ios-studio-apps-kotlin-multiplatform-d6d4d8d25d23	doppp
32779296	11.817964	-7.1796894	story	18.0	246.0	1662731815	-8.988583	Python type hints are Turing complete	https://arxiv.org/abs/2208.14755	nemoniac
33001735	11.691954	-7.175147	story	18.0	45.0	1664316380	9.350855	Guido was right, there should be no lambda in Python (2018)	https://pbrown.me/blog/vslambda/	homarp
32444300	12.021445	-7.365678	story	18.0	132.0	1660340759	6.869014	Objective-S: architecture-oriented language based on Smalltalk and Objective-C	http://objective.st/	MaysonL
32488563	11.660274	-7.9423194	story	18.0	47.0	1660682212	10.194097	Ask HN: Anyone here switch to Go for building (REST) APIs?		Cwizard
19307458	12.130413	-7.2030954	comment	18.0	59.5	1551750793	8.53126	"It is fine that people are experimenting with putting graphics on the screen and playing with new languages.But I just wanted to comment that you don't need an ""Entity Component System"" in a game, and..."		jblow
19855145	12.252696	-7.5906053	comment	18.0	90.0	1557279215	-11.399019	Can someone from the Google team comment on what's going on - https://techcrunch.com/2019/05/07/kotlin-is-now-googles-pref...>Android development will become increasingly Kotlin-first,” Google writes ...		sandGorgon
15841259	11.968713	-7.717388	story	18.0	330.0	1512358159	10.4149685	Reflecting on Haskell in 2017	http://www.stephendiehl.com/posts/haskell_2018.html	setra
15982810	11.7889805	-7.071673	comment	18.0	99.5	1513890819	-8.947938	Reading this as someone who writes mostly in statically typed languages, the whole exercise seems odd.Having so much dynamically typed code to maintain that you need to run production code using a sep...		maltalex
17860499	11.657528	-7.9303393	comment	18.0	115.5	1535475548	10.226839	To be frank, I was for a long time on the camp that Generics is a much-needed feature of Go. Then, this post happened: https://news.ycombinator.com/item?id=17294548. The author made a proof-of-concept...		rdsubhas
18267445	12.260229	-7.23074	story	18.0	188.0	1540118668	7.101574	Pharo: An immersive programming experience	https://pharo.org	signa11
30369497	11.926844	-7.7466173	story	18.0	83.0	1645071956	10.413439	Haskell error messages: come on	https://www.thecodedmessage.com/posts/haskell-gripe/	Ericson2314
30578295	12.024527	-7.8122315	comment	18.0	62.0	1646581547	10.438699	I seem to be monad proof - cannot understand them from any explanation whatsoever. If I'm not alone then it's going to be hard to hire people that get it - on top of how hard it is to hire skilled people at all.		t43562
27570058	11.981456	-7.2762494	story	18.0	105.0	1624197776	-10.483025	Postgres to TypeScript Interfaces and Enums	https://github.com/vramework/schemats	yasserf
27619592	12.23809	-7.4841514	comment	18.0	61.5	1624550716	-11.347167	"The article says this relies on ""Intel Bridge Technology"". Anyone know more about it? All I could find easily was https://www.intel.com/content/www/us/en/products/docs/discre...Want to highlight one p..."		NelsonMinar
27653484	11.790694	-7.360814	comment	18.0	62.5	1624815560	-8.839215	I'm never going to grok the fetishization of types. If you're a theoretical computer scientist, great. But it seems to have limited applicability to day to day coding in which we are trying to take ac...		Nursie
12153510	11.930026	-7.4543867	story	18.0	339.0	1469373455	7.27548	Functional Programming Jargon	https://github.com/hemanth/functional-programming-jargon	adamnemecek
12182911	11.945143	-7.4714255	story	18.0	54.0	1469737827	7.2135906	Functional Programming Isn't the Answer (2014)	http://degoes.net/articles/fp-is-not-the-answer	bertiewhykovich
12208093	11.6063385	-7.954564	comment	18.0	102.5	1470118823	10.205956	The most frustrating thing for me, by far, is that Go won't let you import unused packages. When you are commenting stuff out to debug a program, or adding debug statements and removing them later, it...		_skel
12330573	11.6405115	-7.9732738	story	18.0	168.0	1471780509	10.231662	What Golang Is and Is Not	http://danmux.com/posts/what_golang_isnt/	elrodeo
12500293	12.471625	-7.851021	story	18.0	72.0	1473880417	10.4648485	Haskell vs. Clojure (2014)	https://gist.github.com/honza/5897359	kafkaesq
12513203	11.792177	-7.3534503	story	18.0	69.0	1474024597	-8.924166	The advantages of static typing, simply stated	http://pchiusano.github.io/2016-09-15/static-vs-dynamic.html	ingve
23032173	11.678164	-7.9343095	comment	18.0	74.5	1588261844	10.210879	Go is the language that made me realize I’m not much of a production quality software engineer.Normally I would be quite happy riffing with ideas in Ruby or Python, and just running my code and iterat...		gorgoiler
23039980	12.098523	-7.859795	story	18.0	128.0	1588319504	10.437499	OCaml is Pretty Great (2019)	https://blog.chewxy.com/2019/02/20/go-is-average/	lelf
33434396	11.954901	-7.7386527	comment	18.0	76.0	1667390882	10.430874	"Functional programming won't succeed until the tooling problem is fixed. 'Tsoding' said it best: ""developers are great at making tooling, but suck at making programming languages. Mathematicians are g..."		zamalek
33542130	11.832164	-7.441114	story	18.0	44.0	1668053836	10.353712	Zip Function Solution: Haskell, Elixir, JavaScript, Python, Vlang	https://kevin-da-silva.medium.com/one-problem-five-solutions-zip-function-ad1ed3bd1f16	Tozen
27113893	12.062196	-7.4923406	comment	18.0	56.5	1620703513	8.246045	Tracking units is a thing that I rarely have a use for (as a non-engineer), but when I do, I’m totally mystified by how bad almost every language is at it. F# is the only actual programming language I...		burke
14831290	11.952603	-7.6503973	story	18.0	235.0	1500795512	-9.042427	What are covariance and contravariance?	https://www.stephanboyer.com/post/132/what-are-covariance-and-contravariance	beyang
15043316	12.220164	-7.634215	story	18.0	183.0	1503026726	11.933631	Reasonable Scala Compiler	https://github.com/twitter/reasonable-scala#	adamnemecek
15384507	11.785941	-7.334441	comment	18.0	162.5	1506957931	-8.943975	The benefit of static typing isn't just reliability. Tooling is another major argument. Won't appeal to certain hardcore programmers who think that even notepad has too many features. But it is great ...		cm2187
15740037	12.223391	-7.533033	story	18.0	78.0	1511187971	-11.394594	Kotlin: A Language with a Bright Future	http://www.venturi-group.com/blog/getting-started-kotlin/	venturis_voice
23397560	12.287645	-7.3148913	story	19.0	202.0	1591138964	6.920358	The Rise and Fall of Commercial Smalltalk	http://www.wirfs-brock.com/allen/posts/914	matt_d
24359650	11.591669	-7.8829813	story	19.0	106.0	1599092152	10.043132	Even in Go, concurrency is still not easy	https://utcc.utoronto.ca/~cks/space/blog/programming/GoConcurrencyStillNotEasy	benhoyt
13708453	12.16611	-7.525633	story	19.0	390.0	1487792002	-10.634217	Tour of F#	https://docs.microsoft.com/en-us/dotnet/articles/fsharp/tour	dimitrov
30789831	12.252146	-7.5399866	story	19.0	344.0	1648130306	-11.184782	Korn Meets KoRN	http://www.kornshell.com/fun/	sgt
31192795	12.282053	-7.463856	story	19.0	228.0	1651155703	12.825082	Actor system for the JVM developed by Electronic Arts	https://www.orbit.cloud/orbit/	dmux
31637428	11.624665	-7.0722733	story	19.0	281.0	1654492736	-8.967757	No-op statements syntactically valid only since Python X.Y	https://github.com/jwilk/python-syntax-errors	pabs3
29131996	12.251504	-7.4289494	story	19.0	365.0	1636219246	2.6684976	An Epic future for SPJ	https://discourse.haskell.org/t/an-epic-future-for-spj/3573	Smaug123
29581112	11.65759	-7.9307623	story	19.0	215.0	1639676472	10.222428	Trying Out Generics in Go	https://markphelps.me/posts/trying-out-generics-in-go/	bullcitydev
35085260	12.210677	-7.6090894	comment	19.0	87.0	1678389037	11.932408	"Look, I haven't done Java in more than 10 years, but I have done Scala. Honest question - isn't Java just trying to ""steal"" Scala's concepts and catch up to the ""cool"" languages?"		papito
39592760	12.146993	-7.5189114	story	19.0	87.0	1709571905	-10.614637	Walmart is migrating the remaining F# code into Java	https://careers.walmart.com//us/jobs/WD1786226-software-engineer-iii	pjmlp
36648949	12.331085	-7.020497	story	19.0	173.0	1688851664	13.174809	Open Letter to Tim O’Reilly to Free the Perl Camel		reeeese
36742311	12.008318	-7.7682195	story	19.0	134.0	1689468208	10.444388	The Haskell job market has been growing steaily since 2008	https://github.com/nh2/haskell-jobs-statistics	nh2
37138807	11.722553	-7.377229	story	19.0	349.0	1692130527	-8.635231	How should I read type system notation?	https://langdev.stackexchange.com/questions/2692/how-should-i-read-type-system-notation	mpweiher
37349487	11.620535	-7.95211	story	19.0	66.0	1693568434	-11.772015	Gothub: Alternative front-end for GitHub written with Go	https://codeberg.org/gothub/gothub	popcalc
24422853	11.948503	-7.4256063	comment	19.0	64.5	1599669778	7.208506	I don't get why so many JavaScript developers thing functional is cool. Functional has been around for 30+ years. OOP won against functional because OOP is easier to understand and leads to more maint...		flowerlad
25305650	12.270259	-7.4719877	story	19.0	243.0	1607105333	-10.621103	Fable 3: F# to JavaScript compiler	https://fable.io/blog/Announcing-Nagareyama-4.html	adamnemecek
31977220	11.754417	-7.2112823	story	19.0	257.0	1656943863	7.441065	Tao: A statically-typed functional language	https://github.com/zesterer/tao	memorable
32282942	11.689852	-7.251448	story	19.0	232.0	1659138262	9.150506	C++ Asynchronous Framework	https://userver.tech/	shcheklein
22234550	11.85942	-7.6107936	story	19.0	27.0	1580817137	10.312848	Destroying C with 20 lines of Haskell: wc	https://0xd34df00d.me/posts/2020/02/destroying-c-with-20-lines-of-haskell.html	develop7
19870792	11.646311	-7.948416	story	19.0	93.0	1557426319	10.271754	Go Is on a Trajectory to Become the Next Enterprise Programming Language	https://hackernoon.com/go-is-on-a-trajectory-to-become-the-next-enterprise-programming-language-3b75d70544e	dcu
16943512	11.873882	-7.2714486	story	19.0	35.0	1524856709	-15.477431	Goodbye, Object Oriented Programming (2016)	https://medium.com/@cscalfani/goodbye-object-oriented-programming-a59cda4c0e53	larryfreeman
17161887	11.631305	-7.9419193	story	19.0	103.0	1527341241	10.198391	Go Is a Shop-built Jig (2014)	http://robnapier.net/go-is-a-shop-built-jig	amzans
17463243	12.191531	-7.499986	story	19.0	110.0	1530798786	-11.361018	Rise of Kotlin: A Programming Language for the Next Generation	https://hackernoon.com/rise-of-kotlin-the-programming-language-for-the-next-generation-27beeb529204	mikece
21049374	11.954217	-7.46996	story	19.0	66.0	1569249968	7.2827935	Who cares about functional programming?	https://thomasbandt.com/who-cares-about-functional-programming	asp_net
39221243	11.792673	-7.136984	story	19.0	29.0	1706820556	-1.902423	Make Invalid States Unrepresentable	https://www.awwsmm.com/blog/make-invalid-states-unrepresentable	awwsmm
29793428	11.595515	-7.570125	story	19.0	89.0	1641293107	9.372732	In Defense of Async: Function Colors Are Rusty	https://www.thecodedmessage.com/posts/async-colors/	todsacerdoti
30364020	11.664494	-7.957588	story	19.0	227.0	1645037398	10.192508	Show HN: ytcast – cast YouTube videos to your smart TV from command-line	https://github.com/MarcoLucidi01/ytcast	marcolucidi
13318378	11.898871	-7.4091163	comment	19.0	63.5	1483539114	-8.756982	I keep hearing about the elegance of Lisps, but as someone who learned functional programming in ML, I can't get past the lack of currying. Coupling that with dynamic typing and I feel that I've lost ...		proaralyst
13569742	11.660509	-7.9116874	story	19.0	279.0	1486251127	10.2058	Interactive command line HTTP inspector written in Go	https://github.com/asciimoo/wuzz	tartpac
12476597	11.6201515	-7.2169547	story	19.0	238.0	1473642953	5.0162606	Dynamic Programming: The Name (1984)	http://learning.cis.upenn.edu/cis520_fall2009/index.php?n=Notes.DP	akanet
22856199	11.774353	-7.278141	story	19.0	365.0	1586788597	-5.959506	Erase your darlings: immutable infrastructure for mutable systems	https://grahamc.com/blog/erase-your-darlings	grhmc
33434689	11.892186	-7.382925	comment	19.0	126.0	1667392379	7.1474533	I immediately distrust any article that makes sweeping claims about one-paradigm-to-rule-them-all.The reason why multiple paradigms exist is because here in the real world, the competing issues and co...		kstenerud
33865932	12.244596	-7.6495485	story	19.0	450.0	1670249936	-6.511465	Lichess on Scala3 – Help needed	https://lichess.org/@/thibault/blog/lichess-on-scala3-help-needed/2bpotLb0	dzogchen
26587876	11.971497	-7.343871	comment	19.0	75.5	1616722244	7.082281	I've said this multiple times over multiple years and I'll say it again just because so many green developers get misled.Object oriented programming is good. Not in absolutely every situation, but for...		3pt14159
23933966	11.644328	-7.9594135	story	20.0	211.0	1595546967	10.173434	Go command support for embedded static assets (files)	https://go.googlesource.com/proposal/+/master/design/draft-embed.md	eberkund
24019932	12.309326	-7.0326724	story	20.0	151.0	1596284637	13.193084	Perl7 is a fork of values	http://blogs.perl.org/users/leon_timmermans/2020/08/perl7-is-a-fork-of-values.html	lizmat
24119838	12.284885	-7.0667744	story	20.0	103.0	1597150988	2.5273466	BuckleScript Is Rebranding	https://reasonml.org/blog/bucklescript-is-rebranding	yawaramin
19980740	12.087854	-7.5205293	story	20.0	153.0	1558530556	-10.612764	A whirlwind tour of object-oriented code in F# (2012)	https://fsharpforfunandprofit.com/posts/completeness-anything-csharp-can-do/	adgasf
14121780	11.64759	-7.9638066	story	20.0	426.0	1492277992	10.215043	Golang SSH Security	https://bridge.grumpy-troll.org/2017/04/golang-ssh-security/	transitorykris
31658638	11.953919	-7.7146964	story	20.0	194.0	1654628355	10.481967	Dhall: A Gateway Drug to Haskell	https://www.saurabhnanda.in/2022/03/24/dhall-a-gateway-drug-to-haskell/	todsacerdoti
31732587	12.228373	-7.538854	story	20.0	90.0	1655159465	-11.3824625	What I miss in Java, the perspective of a Kotlin developer	https://blog.frankel.ch/miss-in-java-kotlin-developer/	metadat
25812021	11.646224	-7.9619427	story	20.0	199.0	1610900775	10.198803	Ask HN: Which are the best Go repositories to read to learn the language?		Kreotiko
25916628	11.75425	-7.1805654	story	20.0	150.0	1611674077	-8.980386	Python's Type Checking Renaissance	https://dafoster.net/articles/2021/01/26/python%27s-type-checking-renaissance/	davidfstr
26131075	11.973901	-7.409824	story	20.0	354.0	1613298326	7.273785	Learn Functional Programming Visually	https://david-peter.de/cube-composer/	polyrand
26416553	11.64663	-7.9403706	story	20.0	368.0	1615412001	10.077397	netaddr.IP: a new IP address type for Go	https://tailscale.com/blog/netaddr-new-ip-type-for-go/	smitop
36450106	11.704739	-7.05327	story	20.0	44.0	1687542626	-10.502366	Why [“1”,“2”,“3”].map(parseInt) yields [1, NaN, NaN] in JavaScript (2011)	https://wirfs-brock.com/allen/posts/166	xg15
29505512	12.284375	-7.6194534	story	20.0	251.0	1639100682	11.919723	Scala at scale at Databricks	https://databricks.com/blog/2021/12/03/scala-at-scale-at-databricks.html	lihaoyi
34347079	12.072553	-7.1771183	story	20.0	128.0	1673482328	0.21598922	The gotcha of unhandled promise rejections	https://jakearchibald.com/2023/unhandled-rejections/	AshleysBrain
36566638	12.308268	-7.317316	story	20.0	136.0	1688338310	7.0230923	The Xerox Smalltalk-80 GUI Was Weird	https://collindonnell.com/the-xerox-smalltalk-80-gui-was-weird	ingve
31858077	11.885523	-7.0584493	story	20.0	126.0	1656048210	7.0643673	Revisiting the principles of data-oriented programming	https://blog.klipse.tech/dop/2022/06/22/principles-of-dop.html	viebel
31958823	11.647299	-7.9718223	story	20.0	146.0	1656768647	10.185173	Show HN: Copper – A Go framework for your projects	https://github.com/gocopper/copper	tusharsoni
32037125	12.238763	-7.534276	story	20.0	25.0	1657386487	5.2948484	I hate Java. Can I use Kotlin without touching it whatsoever?		sergiotapia
32058284	11.904329	-7.2595987	story	20.0	17.0	1657556863	10.003285	Ask HN: Any alternative to Java (OOP) which has the same ecosystem?		SpacePortKnight
32075746	11.849281	-7.4188695	comment	20.0	68.5	1657660268	7.2900877	Functional programming with immutable state cannot possibly win in the general case.There are two truths that ensure the dominance of imperative software:1. At some level of software complexity, progr...		dolni
32466326	11.670406	-7.927558	story	20.0	91.0	1660543137	10.170428	Labstack/echo: High performance, minimalist Go web framework	https://github.com/labstack/echo	kiyanwang
34750657	11.872767	-7.277472	story	20.0	100.0	1676104765	-8.950407	Type hinting sucks	https://old.reddit.com/r/Python/comments/10zdidm/why_type_hinting_sucks/	aiNohY6g
34813489	12.273676	-7.501066	story	20.0	168.0	1676509366	12.8285675	Show HN: Ractor – a Rust-based actor framework with clusters and supervisors	https://github.com/slawlor/ractor	snowboarder63
35019232	11.593833	-7.113656	story	20.0	257.0	1677918282	7.579355	What was the point of [ “x$var” = “xval” ]? (2021)	https://www.vidarholen.net/contents/blog/?p=1035	pabs3
19443325	11.654197	-7.977384	story	20.0	302.0	1553096695	10.212498	Using Go Modules	https://blog.golang.org/using-go-modules	spacey
19478079	11.619063	-7.944377	story	20.0	360.0	1553454130	10.14892	Fyne: Cross-Platform GUI in Go Based on Material Design	https://github.com/fyne-io/fyne	0xedb
19702251	12.042853	-7.831224	comment	20.0	60.0	1555701765	10.398479	"What's category good for? It's a serious question so please don't say ""monads"", I understand monads just fine without knowing category theory. I'm down to put in the work if the reward is there."		weeksie
17565652	11.956266	-7.04913	story	20.0	291.0	1532004189	8.215221	The Java type system is broken	http://wouter.coekaerts.be/2018/java-type-system-broken	tdurden
17645277	12.019441	-7.814789	story	20.0	189.0	1532965658	10.44438	If monads are the solution, what is the problem?	http://danghica.blogspot.com/2018/07/haskell-if-monads-are-solution-what-is.html	theaeolist
17787468	11.918275	-7.0636344	story	20.0	54.0	1534580536	-10.779305	Ask HN: Are you doing async programming with Python?		hguhghuff
21282647	11.971812	-7.7513447	story	20.0	200.0	1571323857	10.424552	Haskell in Production	http://felixmulder.com/writing/2019/10/05/Haskell-in-Production.html	allenleein
18532352	12.105466	-7.8620796	story	20.0	304.0	1543228175	10.454069	OCaml for the Masses (2011)	https://queue.acm.org/detail.cfm?id=2038036	alanfranz
18607681	11.815099	-7.34594	story	20.0	116.0	1544013572	7.5866704	Ko – A concurrent, immutable, functional language	https://github.com/kocircuit/kocircuit	petar
12727339	12.23446	-7.644699	story	20.0	133.0	1476726597	11.919811	The state of the Scala website and documentation	https://groups.google.com/forum/#!topic/scala-internals/r2GnzCFc3TY	0xmohit
13210849	12.082068	-7.199025	story	20.0	296.0	1482148352	0.14845575	Cancelable Promises: Why was this proposal withdrawn?	https://github.com/tc39/proposal-cancelable-promises/issues/70	xatxat
27539122	12.268589	-7.2826347	comment	20.0	73.5	1623934937	7.0880446	43 points but zero comments at the time of writing this comment.Somewhere deep in our harts, we all have a deep appreciation for Smalltalk and its legacy in programming language design, it's just that...		tut-urut-utut
28058401	11.731823	-7.3494334	comment	20.0	145.0	1628063390	-8.92597	>   I can no longer concieve of writing software without using test driven development. I can't imagine not having a comprehensive suite of unit tests to back up my development.I'm the same with stron...		seanwilson
23362648	11.989537	-7.7471943	story	20.0	156.0	1590858349	10.459912	On Marketing Haskell	https://www.stephendiehl.com/posts/marketing.html	azhenley
33969386	12.336428	-7.097507	comment	20.0	90.0	1670942122	12.448954	"I'd consider myself a writer more than a developer, but I've been working in Rails for over 15 years, and one of my absolute favourite things is ""unless"".Why? Because it allows you to express yourself..."		nickelcitymario
26529998	11.8217325	-7.133466	story	20.0	114.0	1616330728	-9.031829	Adoption of Mypy for Python type checking: 45% already use it, 40% don't plan to	https://twitter.com/glyph/status/1372640855807250432	pansa2
26806797	11.63984	-7.898649	story	20.0	182.0	1618407027	10.130527	Show HN: Encore – Go framework for building distributed systems	https://github.com/encoredev/encore	eandre
26922857	11.761494	-7.2256536	story	20.0	60.0	1619247550	7.456988	Grain: A strongly-typed functional programming language for the modern web	https://grain-lang.org/	pjmlp
37645237	12.270296	-7.598193	story	20.0	60.0	1695655061	-11.357452	Kotlin Multiplatform for Android and iOS Apps	https://www.rockandnull.com/kotlin-multiplatform-compose-multiplatform-cross-platform-development/	synergy20
38126816	11.619908	-7.915061	comment	20.0	82.0	1699008528	10.198423	Go puzzles me.  It's slower than C/C++/Rust and GCed, so not really suited for performance critical stuff.  No OO so not really suited for larger complex applications.  So for smaller not-performance-...		jjgreen
14763228	11.642788	-7.9271607	comment	20.0	171.0	1499966812	10.200559	The paragraph I was looking for is this:> For example, I've been examining generics recently, but I don't have in my mind a clear picture of the detailed, concrete problems that Go users need generics...		fusiongyro
15238784	11.873961	-7.600381	story	20.0	187.0	1505314091	10.033068	What Monoids teach us about software	https://deque.blog/2017/09/13/monoids-what-they-are-why-they-are-useful-and-what-they-teach-us-about-software/	adamnemecek
15575941	11.67958	-7.33972	story	20.0	69.0	1509212225	-8.756274	The Ergonomics of Type Checking (2016)	https://michaelfeathers.silvrback.com/the-ergonomics-of-type-checking	adamnemecek
15641701	11.927143	-7.4529023	story	20.0	359.0	1510041924	7.2873964	Functional Programming Jargon	https://github.com/hemanth/functional-programming-jargon	charliejrgower
23610527	11.990753	-7.7330003	story	21.0	280.0	1592893984	10.389715	Show HN: IHP, a batteries-included web framework built on Haskell and Nix	https://ihp.digitallyinduced.com/	_query
20135427	11.657816	-7.3425903	story	21.0	52.0	1560031028	-8.756429	Types and Tests	http://blog.cleancoder.com/uncle-bob/2019/06/08/TestsAndTypes.html	ingve
20258218	11.989872	-7.74183	story	21.0	101.0	1561319096	10.444641	Why I think Haskell is the best general purpose language as of June 22 2019	http://www.philipzucker.com/why-i-as-of-june-22-2019-think-haskell-is-the-best-general-purpose-language-as-of-june-22-2019/	azhenley
20696931	11.724532	-7.291688	story	21.0	285.0	1565798769	-9.295156	Lisp is not based on the Lambda Calculus	https://danielsz.github.io/blog/2019-08-05T21_14.html	danielszm
13612941	11.667912	-7.9776835	story	21.0	357.0	1486695807	10.305496	Go Web Examples	https://gowebexamples.github.io/	adamnemecek
14266462	12.000174	-7.742176	story	21.0	366.0	1493916883	10.384259	I tried Haskell for 5 years	https://metarabbit.wordpress.com/2017/05/02/i-tried-haskell-for-5-years-and-heres-how-it-was/	sndean
31236855	11.603319	-7.136053	story	21.0	247.0	1651507115	9.008749	JEP proposed to target JDK 19: 425: Virtual Threads (Preview)	https://mail.openjdk.java.net/pipermail/jdk-dev/2022-April/006530.html	SemanticStrengh
35900891	12.344645	-7.2589703	story	21.0	304.0	1683806162	7.08504	Pharo 11	https://pharo.org/news/pharo11-released.html	xkriva11
36270851	11.629631	-7.9461746	story	21.0	228.0	1686407864	10.225544	Executable Examples in Go	https://bitfieldconsulting.com/golang/examples	gus_leonel
28863205	12.1713	-7.527732	story	21.0	233.0	1634213260	-10.618242	What I wish I knew when learning F#	https://danielbachler.de/2020/12/23/what-i-wish-i-knew-when-learning-fsharp.html	DeathArrow
34482116	11.705423	-7.0529065	story	21.0	236.0	1674420875	-8.111587	JEP draft: No longer require super() and this() to appear first in a constructor	https://openjdk.org/jeps/8300786	mfiguiere
39357155	11.595588	-7.4110317	story	21.0	160.0	1707828887	9.286349	Maybe Everything Is a Coroutine	https://adam.nels.onl//blog/maybe-everything-is-a-coroutine/	rsaarelm
37391161	11.954799	-7.4629135	story	21.0	291.0	1693919614	6.926398	Learn Physics with Functional Programming	https://nostarch.com/learn-physics-functional-programming	privong
38632970	11.610194	-7.8458424	story	21.0	271.0	1702495904	10.07238	Show HN: A pure C89 implementation of Go channels, with blocking selects	https://github.com/rochus-keller/CspChan	Rochus
22068223	11.94421	-7.0450754	story	21.0	143.0	1579204497	8.540263	Records Come to Java	https://blogs.oracle.com/javamagazine/records-come-to-java	agluszak
22224277	11.643836	-7.0965943	story	21.0	231.0	1580739440	6.5040464	C# Pattern Matching	https://docs.microsoft.com/en-us/dotnet/csharp/pattern-matching	brudgers
19415983	11.871202	-7.2546906	story	21.0	395.0	1552851272	7.031624	Alan Kay on the Meaning of “Object-Oriented Programming” (2003)	http://www.purl.org/stefan_ram/pub/doc_kay_oop_en	tosh
15982390	11.818441	-7.204317	story	21.0	427.0	1513887368	-9.005651	Open-sourcing MonkeyType – Let your Python code type-hint itself	https://engineering.instagram.com/let-your-code-type-hint-itself-introducing-open-source-monkeytype-a855c7284881	ambivalence
16884173	12.244642	-7.633775	comment	21.0	90.5	1524227163	11.938665	"Just curious, what companies (or kinds of companies) are betting on Scala nowadays? It seems that the people wanting ""better Java"" all decided they like Kotlin, and the functional programming people n..."		nnq
17055910	11.700435	-7.390043	story	21.0	167.0	1526157662	-8.749812	Leveraging the type system to avoid mistakes	https://www.beyondthelines.net/programming/leveraging-the-type-system-to-avoid-mistakes/	amzans
17813344	11.975975	-7.7268014	comment	21.0	65.0	1534882524	10.409655	Terrible book. Please, please read Graham Hutton's Programming in Haskell. LYAH is full of incorrect definitions and broken analogies. Hutton on the other hand is up there with K&R for clear and concise definitions.		ilovecaching
39334672	12.21513	-7.454612	story	21.0	168.0	1707656139	-11.414339	Javalin – a simple web framework for Java and Kotlin	https://javalin.io/	saikatsg
18141461	11.597307	-7.886079	story	21.0	284.0	1538671209	10.045097	Go hits the concurrency nail on the head	https://eli.thegreenplace.net/2018/go-hits-the-concurrency-nail-right-on-the-head/	nikbackm
18773156	12.007879	-7.746313	comment	21.0	85.0	1545949259	10.421753	"I know a business coach who regularly asks his audience ""Who here makes better burgers than McDonalds?"". When half the audience raises their hand, he asks them why they don't outsell this giant compan..."		endymi0n
18847253	11.874913	-7.465001	story	21.0	113.0	1546881496	-7.3021054	Ask HN: Can we write a programming language for biology?		hsikka
29814345	11.818831	-7.1046176	story	21.0	209.0	1641413877	-9.01744	I found a one-char typo in the docs for Python's typing_extensions library	https://twitter.com/PredragGruevski/status/1478782546624360453	obi1kenobi
13348311	12.33474	-7.030689	story	21.0	59.0	1483850570	13.180673	With the Rise of DevOps, Perl Shows Its Muscle	http://www.i-programmer.info/programming/perl/9649-with-the-rise-of-devops-perl-shows-its-muscle.html	MilnerRoute
27768211	11.627649	-7.080515	story	21.0	229.0	1625715149	-7.6706514	Functools – The Power of Higher-Order Functions in Python	https://martinheinz.dev/blog/52	gilad
22914610	12.212843	-7.626696	story	21.0	378.0	1587288414	11.929222	Hands-on Scala Programming	https://www.handsonscala.com	jvican
23254045	11.592747	-7.936363	story	21.0	303.0	1590025384	10.225362	Three bugs in the Go MySQL driver	https://github.blog/2020-05-20-three-bugs-in-the-go-mysql-driver/	farslan
23269014	11.927542	-7.471543	story	21.0	66.0	1590126437	7.345725	Why no one uses functional languages (1998) [pdf]	https://dl.acm.org/doi/pdf/10.1145/286385.286387	todsacerdoti
26550685	11.6009865	-7.9789577	story	21.0	185.0	1616469782	10.204265	Darker Corners of Go	https://rytisbiel.com/2021/03/06/darker-corners-of-go/	signa11
26565155	12.323258	-7.0256085	story	21.0	140.0	1616578687	13.183145	The Future of Perl	https://perl.topicbox.com/groups/perl-core/T4bad780270b6eec5-Mda5ea1e37bdfe5d7b37f443c/the-future-of-perl	bmn__
15294929	11.59569	-7.909342	story	21.0	177.0	1505921784	10.218855	Golang: Don't be afraid of makefiles	https://sohlich.github.io/post/go_makefile/	sohlich
15580714	12.217067	-7.537875	story	21.0	147.0	1509303374	-11.388955	Kotlin Features I miss most in Java	https://blog.simon-wirtz.de/kotlin-features-miss-java/	curtis
23543238	11.664775	-7.923714	comment	22.0	111.5	1592336739	10.228202	"I like generics for collections but that is about it. I've seen ""gifted"" programmers turn everything into generic classes and functions which then makes it very difficult for anyone else to figure out..."		rb808
23621080	11.965699	-7.726234	story	22.0	193.0	1592950723	10.400629	Haskell for a New Decade [pdf]	http://dev.stephendiehl.com/new_decade.pdf	todsacerdoti
23825310	11.868398	-7.3361816	story	22.0	19.0	1594672650	7.0056353	Ask HN: Do you use inheritance when programming?		jameskerr
24117758	11.661244	-7.943775	story	22.0	154.0	1597128084	10.1438465	Golang Desktop App with Webview/Lorca, WASM and Bazel	https://maori.geek.nz/golang-desktop-app-with-webview-lorca-wasm-and-bazel-3283813bf89	grahar64
20322704	11.74905	-7.3921285	story	22.0	106.0	1561959346	-8.736873	What I Want from a Type System (2016)	https://gist.github.com/halgari/f431b2d1094e4ec1e933969969489854	grzm
13876365	12.245815	-7.558292	story	22.0	123.0	1489588593	-11.39085	Problems with Kotlin	https://kukuruku.co/post/why-kotlin-sucks/	andreygrehov
14388242	12.182574	-7.6119065	story	22.0	84.0	1495388628	11.927759	Scala: Consider syntax with significant indentation	https://github.com/lampepfl/dotty/issues/2491	rolodato
30896298	11.642116	-7.965296	story	22.0	231.0	1648988079	10.21144	Rethinking Visual Programming with Go	https://divan.dev/posts/visual_programming_go/	techplex
31205519	12.0969	-7.8569703	story	22.0	247.0	1651242209	10.433143	The New OCaml Website	https://ocaml.org	bvaldivielso
31258311	11.757657	-7.304593	story	22.0	151.0	1651656143	9.964824	Criticizing Hare language approach for generic data structures	https://ayende.com/blog/197185-B/criticizing-hare-language-approach-for-generic-data-structures?key=37121a38a2c34d1ea56119261822ef99	ayende
26300741	11.978536	-7.7401495	story	22.0	207.0	1614588015	10.420327	Why Learn Haskell? (2018)	https://crypto.stanford.edu/~blynn/haskell/why.html	allenleein
29638152	12.085328	-7.8756623	story	22.0	388.0	1640099878	10.472064	PR to Merge Multicore OCaml	https://github.com/ocaml/ocaml/pull/10831	c-cube
39429047	11.963651	-7.7356215	comment	22.0	88.0	1708345855	10.490177	Hi folks, I work for Groq.  Feel free to ask me any questions.(If you check my HN post history you'll see I post a lot about Haskell.  That's right, part of Groq's compilation pipeline is written in Haskell!)		tome
24422547	11.707424	-7.2368293	story	22.0	124.0	1599668192	6.895111	Classes are a way of writing higher order functions	https://stopa.io/post/250	stopachka
32784926	11.897721	-7.330317	story	22.0	39.0	1662757635	7.038233	OOP “is really just a common sense extension of structured programming”	https://archive.org/details/classconstructio00sess	jjuliano
31848178	12.062067	-7.81396	story	22.0	347.0	1655987916	10.467357	OCaml Programming: Correct and Efficient and Beautiful	https://cs3110.github.io/textbook/cover.html	philonoist
32027855	11.664565	-7.9345307	story	22.0	232.0	1657317356	10.22602	Go generics are not bad	https://lemire.me/blog/2022/07/08/go-generics-are-not-bad/	ibobev
32282686	11.789056	-7.2964106	story	22.0	57.0	1659135822	5.1185775	Why does nobody seem to know what imperative and declarative mean?	https://leebriggs.co.uk/blog/2022/07/20/nobody-knows-what-declarative-is	zdw
22253844	12.235733	-7.5544443	story	22.0	192.0	1580970051	-11.397242	Kotlin becomes second most popular language on the JVM	https://snyk.io/blog/kotlin-overtakes-scala-and-clojure-to-become-the-2nd-most-popular-language-on-the-jvm/	fulafel
19014962	11.946479	-7.4312854	story	22.0	147.0	1548640950	7.1404285	When FP? And When OOP? (2013)	http://raganwald.com/2013/04/08/functional-vs-OOP.html	ausjke
21346154	11.831355	-7.2388396	story	22.0	266.0	1571934251	9.167014	Working asynchronously	https://blog.remote.com/why-you-should-be-doing-async-work/	marcelo_lebre
21352088	11.680427	-7.2793436	story	22.0	75.0	1571980236	-8.769609	Would aliens understand lambda calculus? (2018)	http://tomasp.net/blog/2018/alien-lambda-calculus/	signa11
21710823	11.99301	-7.774619	story	22.0	95.0	1575535141	10.46591	An Overview of the Monad	https://functional.christmas/2019/5	kvalle
18232357	11.910799	-7.3666816	comment	22.0	125.0	1539717711	7.049758	I was interviewed recently. I was asked to implement a solution in Java. It was essentially a stack-based computation engine. The interviewer posed a question and there were enough tacit hints for me ...		wellpast
27811130	11.603746	-7.878848	comment	22.0	85.5	1626103087	10.106244	> In other words, Go encourages avoiding subtle bugs by avoiding subtle code.I find this philosophy strange when they talk about the communication primitives. Channels are extremely subtle in my exper...		judofyr
12349384	11.719158	-7.381107	story	22.0	445.0	1472007622	-8.694806	Types	https://gist.github.com/garybernhardt/122909856b570c5c457a6cd674795a9c?	ivank
28583069	11.863179	-7.364821	story	22.0	141.0	1632045759	-8.664405	Currying in JavaScript	https://javascript.info/currying-partials	corentin88
23193817	11.896264	-7.3206058	comment	22.0	138.5	1589559001	7.008263	Usually when I see somebody arguing against object-oriented programming, I don't see them arguing for functional programming, but instead arguing for procedural (like Cobol, Basic, or Pascal) programm...		commandlinefan
23336458	11.809699	-7.2192383	story	22.0	145.0	1590669047	-8.36681	Functional Programming in Python	https://github.com/dry-python/returns	bearzoo
33316402	11.59554	-7.892394	story	22.0	175.0	1666618470	10.123684	No safe efficient ways to do three-way string comparisons in Go	https://go101.org/blog/2022-10-01-three-way-string-comparison.html	tapirl
26602331	11.641027	-7.9315767	story	22.0	199.0	1616853749	10.177973	Go+: Go designed for data science	https://goplus.org/	angrymouse
15399442	12.318091	-7.298313	story	22.0	157.0	1507113074	7.07431	Pharo, the Modern Smalltalk	https://medium.com/smalltalk-talk/behold-pharo-the-modern-smalltalk-38e132c46053	louiscyphre
20949974	12.493673	-7.8557663	story	23.0	306.0	1568285056	10.475703	The beauty of functional languages in deep learning – Clojure and Haskell	https://www.welcometothejungle.co/fr/articles/btc-deep-learning-clojure-haskell	wickwavy
14551330	11.871248	-7.63919	story	23.0	221.0	1497427828	10.411982	Things that Idris improves things over Haskell	https://deque.blog/2017/06/14/10-things-idris-improved-over-haskell/	deque-blog
31214253	11.665654	-7.330162	story	23.0	309.0	1651306062	9.182316	Achieving 5M persistent connections with Project Loom virtual threads	https://github.com/ebarlas/project-loom-c5m	genzer
31492180	11.656724	-7.5752077	story	23.0	242.0	1653400689	10.129367	Modern programming languages require generics	https://ayende.com/blog/197282-B/modern-programming-languages-require-generics	wagslane
31515787	12.342431	-7.0406113	story	23.0	249.0	1653551285	13.181971	What Happened to Perl 7?	http://blogs.perl.org/users/perl_steering_council/2022/05/what-happened-to-perl-7.html	davorg
31546604	11.682002	-7.1609535	story	23.0	106.0	1653801307	6.675282	The use of ‘class’ for things that should be simple free functions (2020)	https://quuxplusone.github.io/blog/2020/05/28/oo-antipattern/	ddtaylor
31659558	11.941165	-7.672965	comment	23.0	103.0	1654632991	10.383919	In my opinion Haskell's capabilities to help implement general-purpose SW (services, compilers, GUI, game-dev, systems) are way over-hyped.Sure, it's nice to implement parsers/compilers in it (see  ̶N...		picozeta
26093778	11.659755	-7.932668	story	23.0	276.0	1612986510	10.213633	Golang generics proposal has been accepted	https://github.com/golang/go/issues/43651#issuecomment-776944155	komuW
35945467	11.954462	-7.513568	story	23.0	528.0	1684141694	10.415031	Smol Developer	https://github.com/smol-ai/developer	tlarkworthy
29119995	11.878099	-7.058886	story	23.0	89.0	1636123452	-10.757744	Async Python is not faster (2020)	https://calpaterson.com/async-python-is-not-faster.html	xk3
36569411	11.794621	-7.1217394	story	23.0	79.0	1688364200	7.9320574	Fluent: Static Extension Methods for Java	https://github.com/rogerkeays/fluent	rogerkeays
36840127	11.695746	-7.351511	story	23.0	77.0	1690148307	-11.051018	I claim Rich Hickey is wrong about non-null arguments to functions (2020)	https://blog.jonstodle.com/in-which-i-claim-rich-hickey-is-wrong/	Capricorn2481
24565019	11.962465	-7.719706	story	23.0	176.0	1600854441	10.401345	Haskell's Children	https://owenlynch.org/posts/2020-09-16-haskells-children/	xiaodai
19241427	12.445561	-7.8864894	story	23.0	298.0	1551051861	9.095136	Fearless Concurrency: Clojure, Rust, Pony, Erlang and Dart	https://sites.google.com/a/athaydes.com/renato-athaydes/posts/fearlessconcurrencyhowclojurerustponyerlanganddartletyouachievethat	pplonski86
19397063	11.747191	-7.3771095	comment	23.0	117.0	1552631320	-8.852213	The first few comments here seem to argue against the article, as do comments below the post but I am very much with the author.I strongly disagree with the Rust mentality, and the general mentality o...		Barrin92
19522431	12.074632	-7.8186746	comment	23.0	74.5	1553872856	10.43201	OCaml is a beautiful language but I haven't seen any big non language projects written in OCaml. Does any one know why? OR do such projects exist and it is only that I am not aware of them?		abhinai
19875531	11.606243	-7.926429	story	23.0	194.0	1557469803	10.208846	Go makes it easier to write correct, clear and efficient code	https://yourbasic.org/golang/advantages-over-java-python/	csmnils
15778530	11.676479	-7.36187	story	23.0	252.0	1511651892	-8.932196	Carp, a compiled Lisp with type inference and a borrow checker	http://blog.veitheller.de/Carp.html	eriksvedang
16420333	11.938496	-7.4940405	comment	23.0	65.5	1519135411	7.3805766	"This site embodies everything I dislike about functional programming: an attitude that shorter and less specific is better.What use is a line like    const S = f => g => x => f(x)(g(x));

for anyone e..."		skrebbel
16884067	12.239965	-7.646507	story	23.0	490.0	1524226024	11.928882	Towards Scala 3	http://www.scala-lang.org/blog/2018/04/19/scala-3.html	kushti
17072662	11.995876	-7.4862533	story	23.0	529.0	1526375708	7.2956796	Professor Frisby's Mostly Adequate Guide to Functional Programming (2015)	https://mostly-adequate.gitbooks.io/mostly-adequate-guide/	AdrianRossouw
17528606	11.670363	-7.9536595	story	23.0	56.0	1531538321	10.18722	Ask HN: What is the current state of web frameworks in Golang?		freedomben
13184713	11.656767	-7.960431	story	23.0	221.0	1481812083	10.194131	Gogland – Capable and Ergonomic Go IDE	https://www.jetbrains.com/go	kissgyorgy
27642263	11.796331	-7.3025217	story	23.0	148.0	1624718402	-5.9920096	Immutability is not enough (2016)	https://codewords.recurse.com/issues/six/immutability-is-not-enough	jt2190
23032314	11.636333	-7.97771	comment	23.0	85.0	1588262404	10.233175	"I have huge respect for Rob Pike but there's a bit of revisionist history going on here.Go was originally envisioned as a systems programming language. It was often called ""a better C"". This exposed R..."		cletus
33122514	11.659667	-7.9415236	story	23.0	34.0	1665155902	10.209826	Ask HN: Was it worth it for Go to add generics		philosopher1234
26988839	11.869187	-7.3571987	story	23.0	237.0	1619745283	6.9180675	Inheritance was invented as a performance hack	http://catern.com/inheritance.html	signa11
23454352	11.976588	-7.733124	story	24.0	250.0	1591600933	10.411025	Pain Points of Haskell	https://dixonary.co.uk/blog/haskell/pain	runeks
23615303	12.493188	-7.345209	story	24.0	197.0	1592926492	10.18492	Go vs. Crystal Performance	https://ptimofeev.com/go-vs-crystal-perfomance/	open-source-ux
23712801	11.704106	-7.503444	comment	24.0	169.5	1593696072	10.127166	"Enums, immutables, and generics aren't good because they're exciting. They're good because they give us expressive tools to write descriptive, type safe systems that manage state better.I don't like ""..."		cmrdporcupine
24090346	11.966414	-7.7232776	story	24.0	121.0	1596879809	10.441153	Haskell In New Clothes	https://github.com/serras/hinc	culturedsystems
13643376	12.038842	-7.770696	story	24.0	116.0	1487079445	11.87283	Scala vs Go	https://www.quora.com/Scala-vs-Go-Could-people-help-compare-contrast-these-on-relative-merits-demerits/answer/Nick-Snyder-1?srid=hJYT&share=191eaf13	dcu
14642395	11.986695	-7.258709	story	24.0	101.0	1498534610	7.1411276	Functional programming in JavaScript is an antipattern	https://hackernoon.com/functional-programming-in-javascript-is-an-antipattern-58526819f21e	allenleein
31556382	11.644542	-7.973075	story	24.0	136.0	1653895874	10.205107	The Go Programming Language and Environment	https://cacm.acm.org/magazines/2022/5/260357-the-go-programming-language-and-environment/fulltext	Liriel
31672754	11.788375	-7.2938013	story	24.0	129.0	1654716567	-8.87537	TC39 Proposal: Type Annotations	https://github.com/tc39/proposal-type-annotations	rglover
31753608	11.596969	-7.298639	story	24.0	86.0	1655304101	-1.0035596	C#: IEnumerable, yield return, and lazy evaluation	https://stackoverflow.blog/2022/06/15/c-ienumerable-yield-return-and-lazy-evaluation/	mikece
26124054	12.256243	-7.555677	story	24.0	238.0	1613229629	-11.363312	The Kotlin Foundation	https://kotlinlang.org/docs/kotlin-foundation.html	ta988
26376607	11.810081	-7.120664	story	24.0	141.0	1615131246	4.9424124	“Design Patterns” Aren't (2002)	http://perl.plover.com/yak/design/	Tomte
37448460	11.733025	-7.2635703	story	24.0	153.0	1694283476	9.164665	Why you might want async in your project	https://notgull.net/why-you-want-async/	jdon
16005120	11.926189	-7.4490457	story	24.0	116.0	1514225981	7.3137083	A different view on Functional Programming	https://matiasmorant.wordpress.com/2017/12/25/a-different-view-on-functional-programming/	wvlia5
16162094	11.656198	-7.9084764	story	24.0	368.0	1516134324	9.98568	Twirp: A new RPC framework for Go	https://blog.twitch.tv/twirp-a-sweet-new-rpc-framework-for-go-5f2febbf35f	spenczar5
16515891	11.848181	-7.169441	comment	24.0	94.5	1520189181	-8.887657	"While I submitted this, I would like to voice my opinion that I am against ""var"" in Java. People may ask, ""Why should I have to enter in the type if the compiler can infer it for me?"" My answer is two..."		pents90
16868296	11.796217	-7.053581	story	24.0	407.0	1524066437	-9.063909	Python 3.7: Introducing Data Classes	https://blog.jetbrains.com/pycharm/2018/04/python-37-introducing-data-class/	ingve
18287939	12.340612	-7.0410514	story	24.0	304.0	1540332454	13.171948	Perl 11	http://perl11.org/	totalperspectiv
30577911	11.991741	-7.7460637	story	24.0	80.0	1646578330	10.430059	Ask HN: Why would anyone choose Haskell to develop applications?		jamesdco
13067741	11.930513	-7.4680963	story	24.0	187.0	1480469869	7.3033495	Standardized Ladder of Functional Programming [pdf]	http://lambdaconf.us/downloads/documents/lambdaconf_slfp.pdf	panic
13130911	11.822434	-7.6239467	story	24.0	129.0	1481211525	-10.719063	Comparing Haskell and Node concurrency performance	https://www.fpcomplete.com/blog/2016/12/concurrency-and-node	ky3
27842933	12.354666	-7.252847	story	24.0	328.0	1626342040	7.1271424	Pharo 9	https://pharo.org/news/pharo9-released.html	xkriva11
35260401	11.634712	-7.962845	story	24.0	189.0	1679490432	10.21384	The simplicity of single-file Golang deployments	https://www.amazingcto.com/simplicity-of-golang-systemd-deployments/	KingOfCoders
23318137	11.639929	-7.9517055	story	24.0	318.0	1590539372	10.222668	Diving into Go by building a CLI application	https://eryb.space/2020/05/27/diving-into-go-by-building-a-cli-application.html	eryb
37898999	11.66867	-7.9073195	story	24.0	316.0	1697459894	10.140027	Better HTTP server routing in Go 1.22	https://eli.thegreenplace.net/2023/better-http-server-routing-in-go-122/	ingve
14722383	11.725363	-7.4669185	story	24.0	285.0	1499463878	-8.703727	Where Do Type Systems Come From?	http://blog.felipe.rs/2017/07/07/where-do-type-systems-come-from/	philix001
15138429	11.952141	-7.460008	story	24.0	341.0	1504159249	7.3031206	What's Functional Programming All About?	http://www.lihaoyi.com/post/WhatsFunctionalProgrammingAllAbout.html	punnerud
20552752	11.650919	-7.9797754	story	25.0	249.0	1564391680	10.237203	Go Contracts – Draft Design	https://go.googlesource.com/proposal/+/master/design/go2draft-contracts.md	dkarbayev
13905690	11.983857	-7.7333984	story	25.0	364.0	1489906172	10.415836	Three Months of Go, from a Haskeller’s perspective (2016)	https://www.barrucadu.co.uk/posts/etc/2016-08-25-three-months-of-go.html	slikts
13958491	11.965228	-7.723502	story	25.0	341.0	1490491640	10.389804	Haskell Concepts in One Sentence	https://torchhound.github.io/posts/haskellOneSentence.html	crystalPalace
31516013	11.70372	-7.7971435	story	25.0	159.0	1653553676	10.144791	Why We Switched from Python to Go (2021)	https://softwareengineeringdaily.com/2021/03/03/why-we-switched-from-python-to-go/	hkallr
25841636	11.871206	-7.2856607	story	25.0	37.0	1611107507	6.999163	Object-Oriented Programming Is the Biggest Mistake of Computer Science	https://suzdalnitski.medium.com/oop-will-make-you-suffer-846d072b4dce	fireeyed
25986316	12.138953	-7.5009294	story	25.0	212.0	1612162740	-10.579805	F# is gaining independence from .NET	https://onurgumus.github.io/2021/01/31/What-the-F.html	sidcool
29119787	11.955403	-7.719825	story	25.0	142.0	1636122632	10.416985	Why Co–Star Uses Haskell	https://www.costarastrology.com/why-haskell	_query
29582136	11.647674	-7.9201937	comment	25.0	131.0	1639680505	10.218314	Honest question:Do you think Generics will be an overall win for the Go language, or will they be overused / end up making code harder to read / harder reason about?I kind of hate looking at Go code c...		jaytaylor
37197761	11.642801	-7.9448323	story	25.0	150.0	1692526689	10.199944	Scripting with Go (2022)	https://bitfieldconsulting.com/golang/scripting	gus_leonel
37247394	11.675301	-7.6584773	story	25.0	295.0	1692874760	9.945778	Jacobin: A more than minimal JVM written in Go	https://jacobin.org/	yla92
24879763	11.948525	-7.4414525	story	25.0	101.0	1603553230	7.2526636	Admitting That Functional Programming Can Be Awkward (2007)	https://prog21.dadgum.com/3.html	kkdaemas
32115809	12.476151	-7.04007	story	25.0	210.0	1657954264	12.382683	To Ruby from Python	https://www.ruby-lang.org/en/documentation/ruby-from-other-languages/to-ruby-from-python/	mariuz
19473631	11.780392	-7.149056	story	25.0	214.0	1553392538	-8.977151	Pyright: Static type checker for Python	https://github.com/Microsoft/pyright	JacobHenner
17533341	12.001731	-7.6745596	story	25.0	200.0	1531617952	10.4082985	Lisp and Haskell (2017)	https://markkarpov.com/post/lisp-and-haskell.html	sridca
30256264	12.048112	-7.639283	comment	25.0	103.0	1644310873	10.394912	That doesn't bode well for the rest of us if someone this accomplished can't land a Haskell job. This makes me wonder if it's been worth learning functional programming. I've put hours and hours of my free time into F#. I'm not sure that it was a wise move. That said I love F#.		xupybd
30257136	11.9974985	-7.7207413	comment	25.0	140.0	1644318932	10.444219	We don’t like to talk about this: but modulo all the usual turf wars around libraries and attribution and where the braces go: serious Haskell people skew smart and capable.This comes with downsides a...		benreesman
30493713	11.637177	-7.211975	story	25.0	568.0	1646002866	-8.774087	Lambda Calculus in 400 Bytes	https://justine.lol/lambda/	mmphosis
30641883	11.650143	-7.920045	story	25.0	243.0	1647015961	10.218709	Scripting with Go	https://bitfieldconsulting.com/golang/scripting	synergy20
22413805	11.706834	-7.3989587	story	25.0	192.0	1582643856	-8.67687	Implement with types, not your brain (2019)	https://reasonablypolymorphic.com/blog/typeholes/index.html	pcr910303
22943749	11.964666	-7.4727387	story	25.0	580.0	1587547912	7.270895	Conversations with a six-year-old on functional programming (2018)	https://byorgey.wordpress.com/2018/05/06/conversations-with-a-six-year-old-on-functional-programming/	_ttg
37843534	12.412477	-7.096232	story	25.0	98.0	1697026951	12.375381	Numbered block parameters in Ruby	https://zverok.space/blog/2023-10-11-syntax-sugar1-numeric-block-args.html	thunderbong
38161452	11.660608	-7.9496903	story	25.0	377.0	1699272284	10.213349	Show HN: Ladder, open source alternative to 12ft.io and 1ft.io	https://github.com/kubero-dev/ladder	2cpu1container
38215205	11.787079	-7.3542647	comment	25.0	106.0	1699592067	-8.908435	I often see people say static typing slows them down and I'd really like to know why that is because for me it's the exact opposite, I really don't like not knowing what format data is in.  I'd much r...		byhemechi
38351195	11.936106	-7.418241	story	25.0	448.0	1700501690	7.314956	15-150: Principles of Functional Programming	https://brandonspark.github.io/150/	brandonspark
15004216	12.339976	-7.0445952	story	25.0	293.0	1502649307	13.180019	A Review of Perl 6	http://www.evanmiller.org/a-review-of-perl-6.html	jparise
15644430	12.2403555	-7.489066	story	25.0	271.0	1510070192	-11.387119	Show HN: Javalin 1.0 – A Kotlin/Java web framework	https://javalin.io/news/javalin-1.0.0-stable.html	tipsy-
23650361	12.336913	-7.030603	story	26.0	60.0	1593165786	13.183769	There is no more Perl at JP Morgan	https://thehftguy.com/2020/06/26/are-banks-still-using-perl-in-2020-the-answer-is-no/	user5994461
23999221	11.840154	-7.2854114	story	26.0	53.0	1596122589	9.205203	Beware of Async/Await	https://www.brandons.me/blog/async-await	brundolf
20496043	11.906326	-7.3151126	story	26.0	239.0	1563781863	8.768326	Algebraic Effects for the Rest of Us	https://overreacted.io/algebraic-effects-for-the-rest-of-us/	alaaf
13707000	11.652507	-7.8283916	story	26.0	284.0	1487782968	10.1927185	Writing an Interpreter in Go: The Paperback Edition	https://thorstenball.com/blog/2017/02/22/writing-an-interpreter-in-go-the-paperback-edition/	misternugget
13782333	11.988692	-7.765553	story	26.0	313.0	1488543082	10.417263	How we secretly introduced Haskell and got away with it	https://tech.channable.com/posts/2017-02-24-how-we-secretly-introduced-haskell-and-got-away-with-it.html	philippelh
13965344	12.249854	-7.6484046	story	26.0	143.0	1490591675	11.959148	Ask HN: What are the best resources to properly learn Scala?		godmodus
14138620	12.20811	-7.5528145	comment	26.0	85.5	1492522183	11.919968	My apprehension comes from lack of seeing it in the wild (i.e. scaled businesses).Google primarily uses C++/Java. Facebook: Hack. Twitter tried Scala and as far as I know, abandon it and went to Java....		zinxq
31247149	11.998838	-7.7546186	story	26.0	202.0	1651578469	10.4495945	Companies That Use Haskell in Production	https://serokell.io/blog/top-software-written-in-haskell	aroccoli
25750582	11.644389	-7.9438543	story	26.0	225.0	1610474133	10.201639	A Proposal for Adding Generics to Go	https://blog.golang.org/generics-proposal	jparise
26078865	11.643421	-7.944089	story	26.0	96.0	1612885869	10.187155	Leveraging the Go Type System	https://www.gopherguides.com/articles/leveraging-the-go-type-system	gopherguides
34214150	11.90131	-7.411816	story	26.0	177.0	1672631942	7.276357	Functional Programming – How and Why	https://onsclom.bearblog.dev/functional-programming-how-and-why/	onsclom
34246960	11.6705265	-7.935977	story	26.0	215.0	1672847374	10.170839	Pushup: a new compiler for making web apps in Go	https://github.com/adhocteam/pushup	todsacerdoti
34787092	11.810781	-7.061032	story	26.0	129.0	1676365367	-9.034582	Data Classification: Does Python still have a need for class without dataclass?	https://blog.glyph.im/2023/02/data-classification.html	ingve
39416443	11.788521	-7.2071342	story	26.0	47.0	1708233699	-8.978286	Ask HN: Which Python type checker should I use?		triyambakam
19407599	11.86288	-7.2901955	story	26.0	125.0	1552741305	6.996663	Object-Oriented Programming is Bad (2016) [video]	https://m.youtube.com/watch?v=QM1iUe6IofM	tartoran
16780068	11.760815	-7.357481	story	26.0	210.0	1523093987	-8.74199	Are unsound type systems wrong?	http://frenchy64.github.io/2018/04/07/unsoundness-in-untyped-types.html	mpweiher
17812713	11.979722	-7.7500305	story	26.0	322.0	1534878283	10.428001	Learn You a Haskell for Great Good	http://learnyouahaskell.com/	tosh
21266201	11.901324	-7.6761575	story	26.0	162.0	1571190021	10.369807	Beating Decades of Optimized C with 80 Lines of Haskell	https://chrispenner.ca/posts/wc	rachitnigam
17932931	12.095413	-7.840851	story	26.0	341.0	1536312394	10.440478	Try OCaml	https://try.ocamlpro.com/	dna_polymerase
13450828	11.981519	-7.7603846	story	26.0	130.0	1485017300	10.419688	Why hasn't Haskell taken over the world? And the curious case of Go	https://pchiusano.github.io/2017-01-20/why-not-haskell.html	atombender
27634456	11.703928	-7.4939685	story	26.0	335.0	1624645108	-9.272871	Bflat: C# as you know it but with Go-like tooling	https://github.com/MichalStrehovsky/bflat	tate
35165801	12.284165	-7.2997746	story	26.0	93.0	1678873302	7.012126	Smalltalk: An Entrepreneur’s Secret Weapon? (2020)	https://richardeng.medium.com/smalltalk-an-entrepreneurs-secret-weapon-a36b01b68b29	DeathArrow
28466676	11.994045	-7.7897735	story	26.0	161.0	1631166279	10.374863	Monads are monoids in the category of endofunctors	https://sambernheim.com/#/blog/monads-are-monoids-in-the-category-of-endofunctors	bern4444
22786049	11.6210785	-7.4230237	story	26.0	46.0	1586099814	-8.677421	Language Design: Use [ ] instead of < > for Generics	https://soc.me/languages/stop-using-for-generics	signa11
20236992	11.782694	-7.335351	comment	27.0	139.0	1561062425	-8.8973675	It's been funny to watch how more and more static type systems are getting bolted on to dynamically typed languages in recent years.Typescript (with stellar adoption), native type annotation support i...		the_duke
20242852	11.759987	-7.0386114	story	27.0	113.0	1561127925	-10.555792	Why ['1', '7', '11'].map(parseInt) returns [1, NaN, 3] in JavaScript	https://medium.com/dailyjs/parseint-mystery-7c4368ef7b21	libria
20296123	11.733113	-7.42551	story	27.0	80.0	1561653927	-8.704125	Type inference has usability problems	http://austinhenley.com/blog/typeinference.html	azhenley
20495597	11.952839	-7.378436	story	27.0	64.0	1563774521	7.017065	It’s time to move on from OOP?	https://medium.com/better-programming/object-oriented-programming-the-trillion-dollar-disaster-%EF%B8%8F-92a4b666c7c7	nnx
20675245	11.807187	-7.2791767	comment	27.0	140.5	1565616939	9.181488	Reading through comments on async/await-related articles, I wonder if I'm the only person who find the whole concept of async/await utterly weird. Specifically I have troubles embracing the need to ma...		divan
13617858	11.983272	-7.745714	story	27.0	37.0	1486752822	10.427841	Ask HN: What is your weekend project?		WmyEE0UsWAwC2i
36308806	11.775267	-7.187567	story	27.0	90.0	1686656807	6.985451	Aspect-Oriented Programming	https://en.wikipedia.org/wiki/Aspect-oriented_programming	alraj
36310130	12.504825	-7.0371027	story	27.0	520.0	1686663785	12.361327	Rewriting the Ruby parser	https://railsatscale.com//2023-06-12-rewriting-the-ruby-parser/	kddeisz
37038425	12.112882	-7.492855	story	27.0	219.0	1691432350	-10.576667	The combined power of F# and C#	https://steven-giesel.com/blogPost/2f70d926-ec92-4dfe-b278-18f78078253d	freedude
38597599	11.662972	-7.928982	story	27.0	228.0	1702268332	10.143857	Templ: A language for writing HTML user interfaces in Go	https://github.com/a-h/templ	nalgeon
19008651	11.813143	-7.1919866	comment	27.0	157.5	1548538586	9.207465	C# is a pretty underrated language. I've worked with JS, Java, C++, Perl and I've always preferred to use C# for personal projects.async/await - C# is the ONLY language which gets this right. Javascri...		me551ah
19409975	11.706057	-7.38603	story	27.0	167.0	1552767201	-8.632176	Types Are Moving to the Right	https://medium.com/@elizarov/types-are-moving-to-the-right-22c0ef31dd4a	dmitriy_ko
15994457	12.021517	-7.683154	story	27.0	113.0	1514042737	10.4147215	Opinions on functional programming and OCaml	https://gist.github.com/vjeux/cc2c4f83a6b60d69b79057b6ef651b56	ry_harper
17601989	11.663906	-7.942062	story	27.0	442.0	1532446721	10.199613	Portable Cloud Programming with Go Cloud	https://blog.golang.org/go-cloud	ArmandGrillet
39318867	11.675698	-7.9535527	story	27.0	790.0	1707505259	10.176632	How I write HTTP services in Go after 13 years	https://grafana.com/blog/2024/02/09/how-i-write-http-services-in-go-after-13-years/	matryer
18043058	11.90848	-7.4030924	story	27.0	389.0	1537568041	7.2632217	Functional core, imperative shell (2012)	https://www.destroyallsoftware.com/screencasts/catalog/functional-core-imperative-shell	fagnerbrack
18153074	11.674779	-7.0999985	story	27.0	166.0	1538791114	5.159449	Why Patterns Failed and Why You Should Care	http://www.cs.uni.edu/~wallingf/blog/archives/monthly/2018-10.html#e2018-10-05T15_39_10.htm	matt_d
18673940	11.823596	-7.1253996	story	27.0	75.0	1544721037	8.744011	Public and private class fields	https://developers.google.com/web/updates/2018/12/class-fields	feross
29811154	11.726426	-7.1725307	story	27.0	211.0	1641400508	-8.98078	Problems once solved by a metaclass can be solved by __init_subclass__	https://til.simonwillison.net/python/init-subclass	imaurer
28253692	11.658419	-7.9466147	story	27.0	264.0	1629514339	10.219236	Generics enabled by default in Go tip	https://go-review.googlesource.com/c/go/+/343732/	dcu
28641480	11.765629	-7.247034	story	27.0	298.0	1632486800	9.190394	Asynchronous Programming in C#	https://github.com/davidfowl/AspNetCoreDiagnosticScenarios/blob/master/AsyncGuidance.md	keewee7
22975253	11.964298	-7.6773562	comment	27.0	123.0	1587784543	1.6449724	I am an Asian-American high school senior who is nearing the end of the college admissions process.I am so frustrated and angry that there is this discrimination, and people defend it. I feel that peo...		_wt8k
33105706	12.477766	-7.0955663	story	27.0	350.0	1665043414	12.390787	A Ruby program that generates itself through a 128-language quine loop	https://github.com/mame/quine-relay/blob/master/QR.rb	sirnicolaz
27076976	12.102915	-7.3942804	story	27.0	196.0	1620401414	8.8221	Java's records, Lombok's data, and Kotlin's data classes	https://nipafx.dev/java-record-semantics/	gher-shyu3i
14996679	11.94036	-7.36963	story	27.0	104.0	1502517784	7.0095906	Does OO really match the way we think (1997) [pdf]	http://www.leshatton.org/Documents/OO_IS698.pdf	tjalfi
23630074	12.338941	-7.034149	comment	28.0	122.5	1593016277	13.195227	They last line of the article summarizes it well:> Perl 7 is v5.32 with different settings. Your code should work if it’s not a mess. Expect a user release within a year.Are there actually people that...		banana_giraffe
20205694	11.789014	-7.092038	story	28.0	311.0	1560794504	7.5341163	Classes vs. Data Structures	http://blog.cleancoder.com/uncle-bob/2019/06/16/ObjectsAndDataStructures.html	Anchor
26225273	11.673622	-7.0397615	story	28.0	40.0	1614006089	8.33186	Choosing Java instead of C++ for low-latency systems	https://stackoverflow.blog/2021/02/22/choosing-java-instead-of-c-for-low-latency-systems/	caution
29269104	11.820261	-7.2475686	story	28.0	128.0	1637262064	-8.137145	I would like closure, but I'll take honesty	https://freddiedeboer.substack.com/p/i-would-like-closure-but-ill-take	paulpauper
29369328	12.058989	-7.354567	story	28.0	29.0	1638111176	7.099702	Ask HN: If OOP is about message passing, why not sender.send(receiver, message)?		revskill
24468874	12.282192	-7.531434	story	28.0	250.0	1600082304	-11.267216	Q: A faster re-implementaiton of jq written in Reason Native/OCaml	https://github.com/davesnx/query-json	davesnx
32321295	11.9544	-7.472719	story	28.0	155.0	1659459616	7.2492514	Why study functional programming? (2012)	https://acm.wustl.edu/functional/whyfp.php	arkj
19195720	11.800542	-7.356304	story	28.0	29.0	1550535661	-8.922269	Why I Prefer Dynamic Typing Over Static Typing (2017)	http://www.smashcompany.com/technology/why-i-prefer-dynamic-typing-over-static-typing-the-speed-of-adapting-to-change	porjo
16418904	12.016435	-7.8119555	story	28.0	177.0	1519118094	10.405693	Are Monads a Waste of Time?	http://lambda-the-ultimate.org/node/5504	YouAreGreat
21145014	11.988444	-7.7448335	story	28.0	286.0	1570093710	10.426945	What Is Good About Haskell?	https://doisinkidney.com/posts/2019-10-02-what-is-good-about-haskell.html	nuriaion
21565442	11.640154	-7.9508853	story	28.0	33.0	1574093845	10.291552	Ask HN: Who is looking for a co-founder?		break_the_bank
30293946	11.867929	-7.3095446	comment	28.0	175.5	1644533782	7.1476007	"In my mind, state is the real enemy impacting: comprehension, 
brittleness towards making changes, and the surface area exposed to potential bugs. OOP as frequently implemented, while claiming to enca..."		taurath
12090020	11.693634	-7.817264	story	28.0	282.0	1468447408	10.151447	Asciinema 1.3 Switches from Go Back to Python	http://blog.asciinema.org/post/and-now-for-something-completely-different/	kodablah
33790568	11.759762	-7.370877	story	28.0	123.0	1669743272	4.0855627	"Dynamic types have the potential to be more than ""no static types"""	https://buttondown.email/hillelwayne/archive/i-am-disappointed-by-dynamic-typing/	azhenley
15211770	11.919507	-7.411967	story	28.0	69.0	1505043526	7.1566534	Ask HN: Do you mostly program in a non-FP or non-OO style? Why?		open-source-ux
23627017	11.690354	-7.046119	story	29.0	285.0	1593001211	6.36647	PEP 622 – Structural Pattern Matching	https://www.python.org/dev/peps/pep-0622/	kragniz
20576845	11.662909	-7.635656	story	29.0	218.0	1564597200	10.109641	Why Generics?	https://blog.golang.org/why-generics	johnvega
14273863	11.670725	-7.021208	story	29.0	145.0	1493996123	8.971789	Box: Python dictionaries with recursive dot notation access	https://github.com/cdgriffith/Box	johnwheeler
14451482	12.126383	-7.50137	story	29.0	49.0	1496227034	-10.591251	Ask HN: Why isn't F# more popular?		narimiran
34403062	11.961132	-7.4884806	story	29.0	23.0	1673890160	7.3074145	Ask HN: How has functional programming influenced your thinking?		curious16
35027650	11.941459	-7.441908	story	29.0	41.0	1678001585	7.287985	Ask HN: Why has functional programming become so popular oustide academia?		curious16
36690556	11.727811	-7.334252	story	29.0	395.0	1689137089	9.015204	Vale's first prototype for immutable region borrowing	https://verdagon.dev/blog/first-regions-prototype	modernerd
21281004	11.933607	-7.47829	comment	29.0	144.0	1571312995	7.211479	The top comment on YouTube raises a valid point:> I've programmed both functional and non-functional (not necessarily OO) programming languages for ~2 decades now. This misses the point. Even if funct...		_han
18250255	11.948762	-7.358008	story	29.0	307.0	1539883566	7.0279846	OOP Is Dead, Long Live OOP	https://www.gamedev.net/blogs/entry/2265481-oop-is-dead-long-live-oop/	starbugs
18706245	12.156311	-7.5205755	story	29.0	272.0	1545139727	-10.64396	Why you should learn F#	https://dusted.codes/why-you-should-learn-fsharp	aloisdg
29996240	11.710756	-7.3186574	story	29.0	213.0	1642611309	-8.903593	Why static languages suffer from complexity	https://hirrolot.github.io/posts/why-static-languages-suffer-from-complexity#	Lapz
30688333	11.644882	-7.9742036	comment	29.0	148.0	1647365898	10.245964	This is very exciting! Generics will be helpful for some, I'm sure, but my reading of the winds is that people will find other idiosyncracies of Go to latch onto and complain about. It seems to me the...		philosopher1234
23078173	11.943609	-7.461407	story	29.0	103.0	1588671606	7.211494	Ask HN: How to be fluent in functional language speak?		_448
33802844	12.1346245	-7.8804574	story	29.0	209.0	1669824823	-3.2605703	Why I am learning category theory	https://the.scapegoat.dev/why-i-am-learning-category-theory-1/	larve
38433358	11.682613	-7.8222694	story	29.0	186.0	1701098884	10.194611	Python Is Easy. Go Is Simple. Simple != Easy	https://preslav.me/2023/11/27/python-is-easy-golang-is-simple-simple-is-not-easy/	nalgeon
15606344	11.833541	-7.2104654	comment	29.0	127.0	1509577917	8.733649	... To write such a class responsibly, one has to write a lot of low-value, repetitive code: constructors, accessors ...If you're writing a plain data class, why on earth would you write getters and s...		HumanDrivenDev
14374307	12.256996	-7.5642667	story	30.0	150.0	1495190151	-11.377536	Kotlin is the hero Android needs	https://10clouds.com/blog/kotlin-android/	kasiakrn
14389745	12.288142	-7.5588446	story	30.0	347.0	1495408113	-11.406737	Google scored points with its community by supporting Kotlin	https://backchannel.com/the-language-that-stole-android-developers-hearts-807fdbf07c2a	steven
19218097	11.634756	-7.9708343	story	30.0	688.0	1550767430	10.241118	Practical Go: Real-world advice for writing maintainable Go programs	https://dave.cheney.net/practical-go/presentations/qcon-china.html	ra7
15853308	11.677148	-7.9484015	story	30.0	98.0	1512494317	10.167797	Ask HN: What is your Golang web-dev tech stack?		aalhour
18815125	11.829638	-7.25665	story	30.0	428.0	1546524210	7.336796	Coconut: Pythonic functional programming	http://coconut-lang.org/	andybak
33547323	11.913234	-7.0805087	story	30.0	223.0	1668092063	-10.766781	Python Asyncio	https://superfastpython.com/python-asyncio/	simonpure
33594676	11.59654	-7.8927126	story	30.0	511.0	1668437243	10.14499	Making a Go program faster with a one-character change	https://hmarr.com/blog/go-allocation-hunting/	hcm
14870550	11.945444	-7.4740205	story	30.0	119.0	1501196985	7.2913904	What are potential disadvantages of functional programming?	https://www.reddit.com/r/compsci/comments/6pnq7e/what_are_potential_disadvantages_of_functional/	tosh
25726588	11.991348	-7.759796	story	30.0	269.0	1610357063	10.44239	 Haskell is our first choice for building production software systems	https://www.foxhound.systems/blog/why-haskell-for-production/	charukiewicz
36638525	11.906923	-7.0166864	story	30.0	106.0	1688765116	7.5567784	A FactoryFactoryFactory in Production (2017)	https://stevenheidel.medium.com/a-factoryfactoryfactory-in-production-822478b5afbd	fragmede
37040681	12.214604	-7.026671	story	30.0	393.0	1691440968	13.1414585	Raku: A language for gremlins	https://buttondown.email/hillelwayne/archive/raku-a-language-for-gremlins/	azhenley
31775216	11.766776	-7.223228	story	30.0	446.0	1655451580	7.3879476	Ante: A low-level functional language	https://antelang.org/	cheesestain
32189416	12.060206	-7.202756	comment	30.0	115.0	1658473998	9.253408	Not a very deep CS-y one, but still one of my favourite data structures: Promise Maps.It only works in languages where promises/futures/tasks are a first-class citizen. Eg JavaScript.When caching the ...		skrebbel

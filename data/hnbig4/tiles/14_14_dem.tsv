id	label	hovertext	author	x	y	type	relevance	size	year	umap1d
26697605	"""The use of COBOL cripples the mind;"	"""The use of COBOL cripples the mind; its teaching should, therefore, be regarded as a criminal offense.""""It is practically impossible to teach good programming to students that have had a prior exposure to BASIC: as potential programmers they are mentally mutilated beyond hope of regeneration.""- Edsger W. DijkstraMaybe php and node are the cobol and basic of our generation?"	1ris	10.147633	9.7883005	comment	3.0	23.0	1617621634	-9.062371
26719708	I think people tend to under estimat	I think people tend to under estimate how primitive COBOL is.  For example, COBOL does not have variables.  Instead, COBOL programs have a raw memory buffer called working storage with named character offsets called records.  Both working storage and records can be treated as a raw memory array and it was a common practice to do so.  In an analysis of a 5 million line COBOL code base, about 60% of the programs used this feature.	GartzenDeHaes	10.147828	9.794487	comment	3.0	32.0	1617760461	-8.951072
26719876	You won’t suffer a respectable salar	You won’t suffer a respectable salary, either.  COBOL doesn’t pay well, even as it’s increasing in importance.	commandlinefan	10.147833	9.79394	comment	3.0	12.0	1617761950	1.7279028
26722937	Strongly disagree - COBOL apps are s	"Strongly disagree - COBOL apps are strongly tied to their obsolete hardware. On the other hand, containerized applications are ""portable"" - can run on everything that runs Linux."	KptMarchewa	10.147867	9.794388	comment	3.0	12.0	1617792108	-8.903072
26727155	Looking at COBOL code such as   PERF	"Looking at COBOL code such as   PERFORM N TIMES
     ADD 1 TO I
     DIVIDE X2 INTO 1500 GIVING Y
     SUBTRACT Y FROM 815 GIVING Y
     DIVIDE X1 INTO Y
     MOVE X1 TO X2
     SUBTRACT Y FROM 108 GIVING X1
     DISPLAY I'|'X1
    END-PERFORM.

I wonder if someone has written a Python-to-Cobol translator so that you can program using regular math notation and then translate that into wordy Cobol."	Bostonian	10.147687	9.794616	comment	3.0	13.0	1617812661	-4.5916533
26728411	Out of curiosity, does knowing COBOL	Out of curiosity, does knowing COBOL pay well in 2021? It seems COBOL programmers are in critical demand and free market economics should mean that COBOL programmers get paid premiums.I would research this by myself, but not really sure where to start - and googling “COBOL Developer Salary” leads to results in the 80-120k range (which is no small number, but not significantly different from a modern language developer)	aoleinik	10.14781	9.7936735	comment	3.0	10.0	1617818175	1.7121449
26732716	I worked on the IBM COBOL compiler i	I worked on the IBM COBOL compiler in a past life. It's not LLVM based; the optimizer and code generator are derived from J9, the IBM JVM. I would be a bit surprised if they open-sourced it; OpenJ9 is open-sourced, but the COBOL compiler for Z is one of those rare compilers that is still being sold to paying customers.	IainIreland	10.14783	9.793121	comment	3.0	11.0	1617836682	-8.862081
26736086	Anyone got SDL2 and COBOL talking to	"Anyone got SDL2 and COBOL talking to each other?This seems like a suitably unlikely pairing to be ""interesting""."	sfgweilr4f	10.148113	9.794509	comment	3.0	12.0	1617867429	11.089956
14771785	BCD you say? Somewhere there's a COB	BCD you say? Somewhere there's a COBOL programmer (who saved the world back in 1999) tanned, rested, and ready to restore this tape!	ourmandave	10.147824	9.7945595	comment	3.0	11.0	1500054849	-8.905381
12741431	We do it from the core infrastructur	We do it from the core infrastructure we run ourselves.  Built the full stack to have flexibility and innovate in industry where 90+% of CC transactions still run on mainframes & COBOL	arfrank	10.1516	9.76576	comment	3.0	12.0	1476856763	-7.097587
27521924	Next we'll get to hear that moderniz	Next we'll get to hear that modernizing old software systems is too hard, so they're still running COBOL on a mainframe out of a single DC that had a fiber cut or something.	trimbo	10.147783	9.794439	comment	3.0	11.0	1623793617	-8.875335
35192772	My favorite C++ joke is: Have you he	My favorite C++ joke is: Have you heard about the new object-oriented version of COBOL?It’s called “ADD 1 TO COBOL”	mwcremer	10.147928	9.791977	comment	3.0	10.0	1679024715	-8.912638
35510772	Ask HN: What Happened to the Red Lan	Ask HN: What Happened to the Red Language	langfan	10.154876	9.733615	story	3.0	6.0	1681121904	-7.42188
22520697	REBOL and its derivative Red seem li	REBOL and its derivative Red seem like cool languages, but I can't get over the fact that it's impossible to bootstrap these free software projects because Red requires REBOL 3, which is self hosting using REBOL 2, which is proprietary.	EFruit	10.155093	9.735047	comment	3.0	10.0	1583702452	-7.4131336
15194484	Can you share some things where COBO	Can you share some things where COBOL still shines today?	TomMarius	10.147437	9.793261	comment	3.0	12.0	1504808737	-9.000373
15194518	Honestly, can you think of a more ap	Honestly, can you think of a more appropriate platform to host a COBOL compiler? Google Code maybe? A Gopher site somewhere? Telnet into a BBS to download it?	munificent	10.147978	9.793545	comment	3.0	12.0	1504808930	-8.926056
15526628	>You don't know what the technology 	>You don't know what the technology behind a website is? Then it's a minus, as you've missed out on ten years of technological advancements in your field.Huh, we hired a guy who worked on the JVM and the Java compiler.Not much web experience.Would he have been technical enough for you?You don't like COBOL it seems, but you do realize that web development and it's byzantine combination of random languages, document standards and frameworks is maybe even worse than COBOL was?We have nothing to be proud of as web developers, if you ask me.  At least some programmers in the 60s and 70s were discovering brand new algorithms that we still use today, not just marshalling data in JSON (JSON is a crappy XML replacement) between layers of code and the NOSQL database (NOSQL is a worse SQL) and re-inv	gerbilly	10.147789	9.793278	comment	3.0	11.0	1508677583	-8.946349
15568697	I worked for one of those companies 	"I worked for one of those companies using COBOL. This strikes me:
> Once I discovered what the problem was, the fix was easy: I deleted one character of white space from the beginning of line 19, which put the period at column 72. Although I'd never encountered it before, this was such a common bug that many mainframe COBOL programmers would tape a piece of thread between columns 72 and 73 on their terminals.
Why would you want a compiler/language that allows you to shoot yourself in the foot for 1 misplaced character in the source file, without raising an error instead of blindly executing the code?
Like you said, it can change completely the logic of the code so it could be disastrous and go unseen, especially in business transactions?
I know things changed recently. But I would be very "	ibizaman	10.147697	9.79443	comment	3.0	11.0	1509114807	-8.932214
38054085	OK, cool science project and all, bu	OK, cool science project and all, but . . . why?  The problem in COBOL land isn't being able to execute snippets embedded in another language.  It's a) migrating the COBOL to something else before all the devs who know it retire/die and b) getting stuff on to commodity hardware or other solutions as things like Solaris aren't supported anymore.	psunavy03	10.147829	9.793694	comment	3.0	12.0	1698532901	-8.946931
38508712	Classic misunderstanding of programm	"Classic misunderstanding of programming languages. The only thing stopping cobol from being ""known"" is these companies paying for it."	discmonkey	10.147781	9.793543	comment	3.0	14.0	1701623926	-8.952072
38508735	Plenty of folks know COBOL - the pro	Plenty of folks know COBOL - the problem is you need to entice someone YOUNG to learn it, which basically means overpaying them.  If I'm an 18-year-old why would I focus on learning a programming language that puts me in a job with 0 chance of advancement?  Sure I'm irreplaceable to the company, but I've also only got a handful of other places I could go if they treat me poorly or sunset their mainframe.	tw04	10.147501	9.792061	comment	3.0	19.0	1701624050	1.6298114
38509221	Learning COBOL is the easy part. My 	Learning COBOL is the easy part. My understanding is the hard part is becoming familiar with insanely expensive, proprietary mainframe platform that’s you’ll find in most COBOL work. I know IBM has some sort of self training material, but I’m not sure if it’s enough to go from zero to qualified. Most work I see in the area seems to want established domain experts, not hackers who learn just enough to be dangerous.	the_only_law	10.147811	9.793346	comment	3.0	12.0	1701626752	1.7768455
38509995	I'm pretty sure there's already a sy	I'm pretty sure there's already a system to transpile COBOL to Java without resorting to LLMs.	IshKebab	10.14775	9.793365	comment	3.0	16.0	1701632162	-8.9768915
27441589	> If a bank is still using Cobol, it	> If a bank is still using Cobol, it is interesting and a testament to how a Cobol programmer can still make a good living on it. But if a scientist is using Perl to carry out calculations, this is somehow bad?Yes. The negative externalities of doing scientific analyses in Perl are much greater than a bank having a legacy COBOL codebase. Only a handful of engineers within the bank will ever see that COBOL codebase. Science is globally collaborative; many people at many different institutions across the world would have to deal with some idiosyncratic scientist’s decision to write their analysis in Perl.Also, the bank only has a COBOL codebase because it’s  reluctant to make major changes to an extremely important system that’s been working flawlessly since the early 60s. There’s absolutely	MontyCarloHall	10.147855	9.793915	comment	3.0	37.0	1623189849	-8.976562
33436629	Looks like C++ developers / holdouts	Looks like C++ developers / holdouts will be commanding 400-600k salaries in the comming decades, like those arcane COBOL wizards still tinkering on banking mainframes.	lordleft	10.148449	9.788037	comment	3.0	17.0	1667400209	1.6066942
33743628	Some of the modernisation efforts fo	Some of the modernisation efforts for these sorts of systems are fascinating.The US DOD have built a COBOL to Java transpiler that emits nearly-idiomatic Java. As far as I can remember they expect it to essentially be reviewed like any other Java contribution from an engineer and receive minor tweaks, and they're expecting to translate millions of lines of code with it.There's also MicroFocus, a company who build JVM COBOL, with all of the implementation/CPU specific bugs, so that you can move everything on to JVM (or maybe even CLR I think?) and then start replacing pieces with Java/C#.It's not unreasonable for a company or organisation around since the 60s to have this sort of stuff around, however with all the modern options available today, it's pretty unreasonable for them to not have	danpalmer	10.148961	9.78701	comment	3.0	17.0	1669392273	-8.939823
34010070	Any company that knows better has do	Any company that knows better has done a modernization to get to get off it asap. The legacy nature of the products means that the few outlets that still support them or their mainframes are charging exorbitant rates. How much? I had a customer (non-gov) that paid a million$ a month  to keep their product leased and up on their support agreement, that $12m a year without even talking about the costs of finding Cobol devs. Whos still using them? Any bureaucracy terrible enough to have not transitioned years (decades) ago.	adra	10.148021	9.792712	comment	3.0	21.0	1671163948	1.7688863
34010803	I know of an insurance company that 	I know of an insurance company that has tried 3-4 times at a cost probably in the hundreds of millions to switch off COBOL.The simple fact is that they've spent tons of time slowly coding in hundreds of thousands of little, undocumented edge cases all over the place. The rewrite gets 90% there then falls flat with all the little things and you can't switch these kinds of businesses until it is 100% there.	hajile	10.147472	9.792942	comment	3.0	13.0	1671168619	1.9667245
34010835	Frankly, I was shocked at how low CO	Frankly, I was shocked at how low COBOL salaries tend to be.I want extra money to code in a terrible language maintaining your bloating, ancient codebase. They believe that all of this should mean LESS salary.Meanwhile, old COBOL devs are retiring in droves and the businesses stuck on COBOL have countless billions riding on those systems.Why hasn't supply/demand kicked in yet?	hajile	10.147944	9.792059	comment	3.0	11.0	1671168867	1.699561
34041889	"Cobol is far from dead. 
It is not s"	"Cobol is far from dead. 
It is not sexy and I dont know of any systems starting out today using it.
But there are massive legacy systems till out there.At least a couple years ago Cobol programmers were in high demand.According to Microfocus [1 (2018)] over 2 million people worldwide are active full-time Cobol programmers, and it is running quite a few mission critical 
systems.>Companies involved in keeping COBOL-based systems working say that 95 percent of >ATM transactions pass through COBOL programs, 80 percent of in-person >transactions rely on them, and over 40 percent of banks still use COBOL as the >foundation of their systems."	ThinkBeat	10.148033	9.793709	comment	3.0	21.0	1671392023	-8.907183
22782394	The thing about old COBOL systems is	The thing about old COBOL systems is, the language isn't the problem. Snark aside, it isn't that bad.The major issue is the code written in it. Remember, a lot of COBOL code comes from a time before a lot of programming best practices were discovered. Structured programming-- as in, actually having function calls instead of just GOTO statements everywhere-- was a novel hoity-toity concept when COBOL first existed. Relational databases? Forget about it, they won't exist for another decade and a half. You get flat files; if you're lucky there might be field separators, if you're unlucky you'll have to find the column widths in the code somewhere. And don't even think that any of it is documented.That's the sort of thing you're taking on when you jump into a legacy COBOL system.	Analemma_	10.147708	9.794957	comment	3.0	13.0	1586043313	-8.904104
22783114	That's not really going to give you 	"That's not really going to give you a taste for what it's like to ""do"" COBOL in a real-world scenario.  Realistically, no one is running COBOL on a modern Linux.  They're running it on something like z/OS and there is so much utterly bizarre and incredibly tedious stuff you have to deal with on those mainframe OS's that you'll run away screaming.  And that's not even mentioning the code itself, written over several decades and likely not well documented.When I worked at IBM not TOO long ago there were times when I had to fix a bug in WebSphere that only manifested on z/OS or zLinux and those were hands down the hardest bugs to fix.  And that was a relatively modern codebase, by mainframe standards."	xienze	10.1477995	9.793221	comment	3.0	10.0	1586051781	-8.924784
22784248	COBOL Is Trending on Twitter	COBOL Is Trending on Twitter	kripy	10.147433	9.794884	story	3.0	28.0	1586070753	-8.933181
22803343	COBOL is still in use 61 years later	COBOL is still in use 61 years later. Institutional inertia is very much in style. Vendors can't dictate terms to the people paying the bills.	Kye	10.147869	9.793853	comment	3.0	17.0	1586268716	-8.869715
22805988	I got a laugh out of the ad at the b	I got a laugh out of the ad at the bottom of the page:  “convert COBOL to Java”.I mean, it’s the first thing that went through my head when I saw the article, but...We got off of that 60 year old language, and are no longer beholden to IBM!... to be on a 30 year old language (that few outside of management love), and owe our souls to Oracle.Yeah, balancing stability and ease of use is hard.  The post-Java landscape is pretty fragmented with many more developer friendly options, but it’s hard to know what will still be well supported in 20 years.  I like JavaScript - which is also as old as Java, but seems to have aged better - but I understand that it scares the hell out of many developers.So what do we replace COBOL with?	Roboprog	10.148289	9.791282	comment	3.0	12.0	1586284062	-8.943067
19007983	Its weird that web pages can succumb	"Its weird that web pages can succumb to link rot so quickly, apps succumb to bit rot almost as quickly, but a bug will live on.In a thousand years time will archeologists study us through the bugs left behind in Linux 1300.05 and windows (30)95?
Do you think there will still be jobs for Cobol programmers?"	benj111	10.148012	9.79178	comment	3.0	10.0	1548531506	-8.83464
19101283	So, any suggestion for a COBOL book 	So, any suggestion for a COBOL book ? jkwhat would you consider a solid, time-proof set of fundamentals ?	agumonkey	10.147422	9.791638	comment	3.0	12.0	1549495909	-8.942433
19175398	Serious question; outside of purpose	Serious question; outside of purposefully eccentric stuff, does anyone use COBOL for anything new?	tombert	10.147909	9.7943125	comment	3.0	11.0	1550270377	-8.94052
15919349	Somewhere, in the background, there'	Somewhere, in the background, there's a poor old unix mainframe running Cobol, unaware that the world around it has changed, and that it should put to pasture, where it can live out the rest of its days in peace.	toomanybeersies	10.147836	9.793872	comment	3.0	11.0	1513215945	-8.930555
16866582	I'm not sure I agree with your point	"I'm not sure I agree with your point about COBOL developers, though I do agree with your larger point about C. The reason that COBOL developers get big bucks today is because so few of them remain. During the late-80s and the '90s, there were massive layoffs that decimated the COBOL job market. The developers earning big bucks today doing COBOL doing today are the ones that survived those layoffs, not your ""typical"" COBOL developer. I would wager that the median COBOL developer either transitioned into management, out of the industry or is working in a completely different language today."	quanticle	10.147813	9.794502	comment	3.0	12.0	1524052815	1.6870497
16964508	It would be a nice surprise to come 	It would be a nice surprise to come across an article on COBOL that has anything nice to say, much less informative, about the language. One could start with that it's one of a tiny minority of languages based on decimal arithmetic as opposed to binary. This is kind of handy when dealing with money.	ibiza	10.147952	9.794059	comment	3.0	13.0	1525147209	-8.942221
16964987	Ok, let me just say at work I’ve spe	Ok, let me just say at work I’ve spent the last 4 years working on a product that interfaces with COBOL. In-house we:- Generate native windows interfaces with COBOL, to the point where only a few lines of code create a control like a data grid, button or text entry with rich functionality. You’d never know these snappy native apps, with features like visual data validation and asynchronous menus/context popups, are COBOL.- Render rich web pages with COBOL using a in-house DSL that automatically become somewhat responsive between devices. The presentation information streams over a web socket so it’s snappy and as responsive as the above desktop application- Perform complex queries and rich data validation. A few lines of code can automatically be linked to grid view that has HEAPS of built	aetherspawn	10.147786	9.794582	comment	3.0	30.0	1525156712	-8.981673
16965282	My company has plenty of Cobol.  Whi	"My company has plenty of Cobol.  While I am not on their part of IT, I used to work together with them for integration.  I left with very mixed feelings.Some bad sidess
* The language is old, in a bad way.   Reading cobol learns you pretty fast why todays  practices are better than the multi million spaghetti monster of the past.
* IT practices are old.  They havent yet embraced lower case.  I  trieds to tell one of them about UTF-8, but the whole idea that 1 char=1 byte might not be an universal truth was so far out she immediately rejected me as insane.  
* IT tooling is unique.  These guys did CI/CD in the 80ies, but did it with a whole custom stack.   They wrote their own source code control, and added an engine wih auto compiles checked in code, rejects code not according to the very "	hyperman1	10.1479025	9.793744	comment	3.0	12.0	1525161259	-8.924459
16965592	Speaking as someone who occasionally	"Speaking as someone who occasionally gets roped into supporting a COBOL application at a large financial institution, I genuinely don't get the ""we must replace it because it's old!"" mentality. If it's still the best tool for the job then why move away? Just train people up and build tools to work with it on modern systems, just like Micro Focus and COBOL Cowboys (both mentioned in the OP) are already doing. As an added bonus, you can make a lot a money in the process too.""The guy who wrote it left and nobody knows what it does"" is a poor excuse with a self-documenting language like COBOL. How much sense do you think your tangled mess of Java will make in 50 years?"	SmellyGeekBoy	10.147895	9.792963	comment	3.0	13.0	1525166864	-8.944327
16966351	Fuck it, I am sick of the churn asso	Fuck it, I am sick of the churn associated with modern development. Cobol sounds quite appealing right now.	collyw	10.147824	9.792146	comment	3.0	13.0	1525176990	-8.992872
17165177	> Despite the fact that virtually no	"> Despite the fact that virtually no one learns COBOL anymoreIs this true? I mean, I know coding boot camp programs aren't emphasizing in COBOL, but I graduated from University of Wisconsin-Platteville in 2010 and was required to take a COBOL class. I asked our intern this year (also from UWP) and he confirmed that it's still a required course.I did my first internship building an operations management system for auto dealerships using AcuCOBOL. Using COBOL, particularly when binding to a GUI, was painful.edit: missed ""aren't"" in my second sentence."	marpstar	10.14752	9.792578	comment	3.0	17.0	1527388114	1.626418
17165239	But to be fair this doesn’t really i	But to be fair this doesn’t really install COBOL on your computer. GnuCOBOL is a transpiler that parses COBOL and converts it to C before compiling it. This feels a bit like cheating.This is curious statement, what is cheating about it? I suppose this person equates Cobol with mainframes, and wants the Real Experience. Hopefully the author doesn't go down the rat hole of setting up Hercules with a 1970's era version of MVS operating system, and tries to learn enough JCL to execute the compiler. That's truly a waste of time.Besides, not all machines that ran Cobol were EBCDIC, there were (are) a lot of ASCII machines, including anything running GnuCobol. The key thing you're learning about with Cobol is fixed length files, and storage formats like Display, Zoned Decimal, Packed, and Binary.	le-mark	10.147903	9.793906	comment	3.0	14.0	1527389952	-8.932919
17165461	I find it very odd that any CS progr	I find it very odd that any CS program in the USA teaches COBOL. I would guess this very unique to your program and it isn’t common.India might have more COBOL courses since they specialized in it during the 90s (paid off during Y2K), but 20 years on even there I’m doubtful.	seanmcdirmid	10.147751	9.794043	comment	3.0	14.0	1527396026	1.7472492
17175933	A little bird told me it's because t	A little bird told me it's because they still use cobol fixed width data and are basically scared to change it. To fix, first they have to finish their rewrite.	clord	10.147997	9.793043	comment	3.0	12.0	1527559474	-8.914209
17179590	> Cobol/PL1 of 2050It's already here	> Cobol/PL1 of 2050It's already here and it's called Java :)	oblio	10.148294	9.79084	comment	3.0	10.0	1527605360	-8.973386
22837968	My father programmed in COBOL, but h	My father programmed in COBOL, but he never talked me about this. Anyone mind to share his experience? What would be to do this today? is it hard to learn?	meerita	10.147684	9.794633	comment	3.0	10.0	1586557671	-8.9207
22840304	My first serious computer job (early	My first serious computer job (early 1990's) was COBOL.I last used it in 1997, then moved on to Oracle PL/SQL, Java, Oracle's Java software stacks and now iOS ObjC/Swift.Now I'm 52 years old. I have my own apps now on the store, don't need the money but I am looking for a new challenge - something a bit more social than working for myself.I think I'll do this COBOL refresher. Only issue is I'm in Australia but I see there may be some demand here too. Nothing to lose - plenty of time at the moment to do the courses. Good for a laugh anyway.	altitudinous	10.147745	9.793573	comment	3.0	17.0	1586591856	8.177424
22840356	From the article: *  State unemploym	From the article: *  State unemployment agencies are notoriously underfunded*And there’s the problem summarized in less than a single sentence. Yes, they need help, but it’s the same kind of “help” as in “I want a BMW but I only have a dollar, please help”There would be a ton more COBOL coders if companies paid the equivalent of FANG companies - I say this as a former COBOL coder myself	JustARandomGuy	10.1478195	9.794153	comment	3.0	17.0	1586592532	1.7144601
22840585	Serious question, why do you use COB	"Serious question, why do you use COBOL and ""looking for a new challenge"" in the same post? I found it a trivial language with a syntax that goes on for pages. It's entirely uninteresting. The only challenge is understanding any business requirements, and that's not a language thing."	throwaway_pdp09	10.147819	9.794636	comment	3.0	12.0	1586596218	-8.911074
22857990	Ask HN: Why Did COBOL Die?	Ask HN: Why Did COBOL Die?	_bxg1	10.147965	9.792567	story	3.0	4.0	1586799545	-8.907541
22907377	is the inertia of rewriting these sy	is the inertia of rewriting these systems in a modern stack so great that it's cheaper to keep finding COBOL specialists forever? why not just sit down and rewrite these systems?	djohnston	10.147765	9.79424	comment	3.0	18.0	1587214555	-8.909785
22952615	For anyone criticizing COBOL for ind	For anyone criticizing COBOL for inducing alleged brain damage: yes, it is an old language, but it's a domain-specific language.The use case was processing of record-based inputs in an administrative context, based on a technology millions of times less powerful than current hardware, yet still able to sustain a massive administration (old-school banking, anyone?)No, you will not write a compiler or a kernel module in COBOL, just like you won't write it in SQL, APL or Matlab. But for the purpose it was built for, you'll be a lot more comfortable than in most alternatives.	tzmudzin	10.147668	9.79454	comment	3.0	14.0	1587613469	-8.939661
23240882	Given all the attention COBOL has go	Given all the attention COBOL has gotten lately, I still haven’t seen any discussion of its characteristics that make it relatively “safe”, secure, and fast. These are; all memory is statically allocated, no dynamic memory allocation. No user defined functions and no stack. Of course I’m referring to the 85 standard here and later versions added these things but 85 is very common on mainframes (my understanding please correct if wrong).These two things disallow entire classes of exploits and errors.Edit to add, rather than put out these puff pieces, ibm needs to figure out how to get mainframe access for developers, only then will they see usage increase.	marktangotango	10.147972	9.792384	comment	3.0	16.0	1589926049	-8.876616
23244590	> As a developer, why would you want	"> As a developer, why would you want to waste your time learning about this sort of tech (I can't think of a more risky ecosystem to invest your time into learning in terms of chance of the skillset becoming obsolete)?You realize that mainframes aren't just for running 40-year-old COBOL applications, right?Pretty much any code you might write, including that written in the hippest, trendiest, fad-of-the-week language, will run on top of this ""risky ecosystem""."	jlgaddis	10.147848	9.794051	comment	3.0	10.0	1589963190	-8.934654
28071719	"""Contemporary COBOL"". At least they "	"""Contemporary COBOL"". At least they didn't say modern COBOL, or it will be an oxymoron."	xiaodai	10.147166	9.792312	comment	3.0	10.0	1628157941	-8.989776
28141812	> What if we could transpile COBOL i	> What if we could transpile COBOL into ElixirYou've then successfully ported your code base from one language for which it's really difficult to find programmers to another language for which it's really difficult to to find programmers.	restlessbytes	10.147695	9.79351	comment	3.0	18.0	1628689162	-8.94001
28256759	I forgot about that sorry. I know on	I forgot about that sorry. I know only of COBOL that is made by women all other programming languages are pretty much made by men.	mrkramer	10.147578	9.794412	comment	3.0	12.0	1629551654	-8.958575
28465253	> It changed who could write it, too	> It changed who could write it, too. COBOL democratized coding; companies could take everyday people and train them to be useful COBOL programmers in a few months, and to become experts in a year or two. This was crucial given that companies desperately needed more warm bodies to write software.> “You could pick people up out of the street,” says Jon Pyke, a British coder who learned COBOL back in the 1960s, “and basically and teach them how to do it.”Well then. This does seem to suggest a solution...Honestly, this article kind of makes me want to learn COBOL. In my fantasy, the employers desperation somehow makes it a low-stress job, like they know they don't have time for BS, they have to prioritize the most important things and just let you do your job. And they'd be so grateful.	jrochkind1	10.147854	9.793505	comment	3.0	17.0	1631151706	-8.798208
28542573	They don't pay enough. That's the is	They don't pay enough. That's the issue. If COBOL paid as much or better for the average developer than Java, there would be no shortage of COBOL developers.	Zababa	10.147776	9.793544	comment	3.0	12.0	1631730567	1.7184215
12007736	I used to develop applications in CO	I used to develop applications in COBOL for CP/M microcomputers, then Dataflex and then, for a short time, Turbo Pascal. Some customers ran inventory and accounts receivable applications off floppy disks. Lots of manual data entry too.	facorreia	10.148259	9.787937	comment	3.0	12.0	1467284946	-8.907426
12054217	If by expressiveness the author (wro	"If by expressiveness the author (wrongly) assumes number of characters per line and LOCs per commit, then Red/Rebol has nothing on J/K (and probably Perl as well).However. At one point reading and deconstructing a tangled mess of characters outweighs the ""expressiveness"" of the language.More than ""expressiveness"" a language needs docs, community, tools."	dmitriid	10.155266	9.735335	comment	3.0	14.0	1467966440	-7.3739777
12096396	Absolutely. In many cases, universit	Absolutely. In many cases, universities can't afford their own IBM mainframe environment to allow students to learn how to use it. Many folks, such as myself, have to have on-the-job training in order to learn COBOL and how to use the IBM mainframe itself.	zcdziura	10.147717	9.794313	comment	3.0	16.0	1468522825	1.8098575
12097058	Interesting article! I've sometimes 	"Interesting article! I've sometimes wondered if I should learn more COBOL. I'm 26, one of my gigs was to reverse-engineer loads of COBOL code whose functionality was being migrated to something modern.There was a few of these very long scripts, written in the 70's. At the top was ""Here be Dragons"".It felt cool after I figured out what interest calculations it was performing, I ended up leaving a comment ""Dragon Slayer was Here"" at the end of the script."	nevi-me	10.147851	9.794214	comment	3.0	14.0	1468529194	-8.953111
12115547	The sad thing is about 90% of normal	The sad thing is about 90% of normal back-end computing at enterprises is take data source A,B,C,etc and generate data file Z.  Cobol lives because it could do that well.  Perl did that amazingly well[1].  Its really trivial to write easy to maintain code that does that in a very standard (across programs) way.1) Data Munging with Perl was a pretty good book for it	protomyth	10.14795	9.792514	comment	3.0	16.0	1468855018	-8.912559
12123668	> COBOL was a huge improvement at th	"> COBOL was a huge improvement at the time, an innovation in readability. BASIC is a good demonstration of why the platonic ideal language is wrong: it was designed for beginners (that's what the acronym stands for), and it did a reasonably good job at that.Sure. But these systems were created from the ground up, every single time. Given a good foundation, which could be Lisp or something even better, you can whip up the ""simpler"" languages in no time. Even ditch the parentheses if you so desire. While getting all the benefits of the underlying system.> Garbage collection is a nice feature, but it doesn't fit everywhere. Sometimes you want to manage your own memory. That's why we have more than one language.Sure. But I disagree with that's the reason why we have multiple languages. There's"	outworlder	10.147761	9.794241	comment	3.0	13.0	1468952515	-8.950229
12183994	Why the JS hate? sure, === is annoyi	Why the JS hate? sure, === is annoying, and prototypes confuse some people, but there's plenty good about it, and it's sure as hell better than COBOL.	qwertyuiop924	10.148138	9.792581	comment	3.0	20.0	1469748813	-8.96757
12902138	From the tutorial:>> the-values hold	From the tutorial:>> the-values hold information about variables received. At the moment, these come from PATH (GET and POST are on the way). You can access them in the same order they occur in path.Well, this is kinda the crux of the situation isn't it? Query parameter parsing, and POST body parsing, can't do much without these. Is this to be implemented in cobol? I really hope not, parsing anything is quiet untenable in cobol. I believe gnu/open cobol has pretty good .so binding, so you could conceivable use third party utilities like apache apr request parsing.Why is parsing untenable in cobol? Becuase idomatic cobol doesn't provide dynamic memory allocation, or associative arrays, so you have to build up all that infrastructure from scratch.But, the absence of dynamic memory allocation	marktangotango	10.14797	9.794347	comment	3.0	12.0	1478626083	-8.938438
12903524	I once had the pleasure to meet a yo	I once had the pleasure to meet a young person (~30 years old at the time) who had learned to program at a bank, so I had to ask her about COBOL.Her reply was interesting, if I looked at it as a general-purpose language like C++/C#/Java, then, yes, it sucks really hard. But if you look at COBOL as a DSL for building specific business applications, it does not look all that bad.Having never used COBOL beyond a simple HELLO-WORLD, I am not sure I can judge it either way. But her reply sounded surprisingly pragmatic to me.	krylon	10.147701	9.794894	comment	3.0	17.0	1478635915	-8.940226
13523962	Ask HN: Can you pick up COBOL and ge	Ask HN: Can you pick up COBOL and get a job doing it	jamesmp98	10.147864	9.793709	story	3.0	4.0	1485802510	1.5874538
21288963	To clarify, COBOL (similarly to SQL)	To clarify, COBOL (similarly to SQL) was intended as a UI - it was created for business people, non-programmers.	zerr	10.148121	9.792704	comment	3.0	19.0	1571377068	9.804909
21289026	No, it wasn't. Non-programmers didn'	No, it wasn't. Non-programmers didn't program in COBOL. Non-programmers generally lacked access to IDEs (even basic TSO workflows), compilers, and computer time, let alone JCL and data sets.COBOL was intended for business cases for which FORTRAN was ill-suited, and COBOL shops generally didn't need science/math implementations.Even PL/1 and RPG required a degree of programming skill.	DrScump	10.147755	9.794475	comment	3.0	14.0	1571378335	-8.95502
21289382	Actually, yes it was, in a way. COBO	Actually, yes it was, in a way. COBOL was intended to do away with programmers and to allow their managers to interact with the computer directly. Programmers of the day worked with machine language and generally took forever to deliver bits and pieces of functionality due to the low level nature of their tools. The idea behind COBOL was that the compiler would take a high level specification (the 'source code') which any competent person should be able to put together rather than that this specification had to be handed to the programmers.Of course, the end result was that we ended up with just one layer of abstraction and programmers were in more demand than ever before because of their increased productivity, and the 'managers' ended up being programmers themselves.This then led to the 	jacquesm	10.147604	9.792807	comment	3.0	11.0	1571384215	-8.865236
21289897	>> This is probably not true these d	>> This is probably not true these days with modern COBOLIt still is. Which column (not row) a statement starts in matters and it's a syntax error to start the wrong statement in the wrong column. Sorry I don't remember any specific examples because it's been a few years since I last used COBOL.I remember hearing that this had something to do with how the early COBOL programs were encoded on punched cards. Anyway there was some practical aspect to it that is now not an issue anymore with the changes to hardware.	YeGoblynQueenne	10.147771	9.794674	comment	3.0	10.0	1571391556	-8.929819
39321986	Indeed so. The highest-paid devs I p	Indeed so. The highest-paid devs I personally know earn their living working with old COBOL code. It's highly paid simply because there aren't that many expert COBOL programmers around anymore.In a prior job I had, we developed enterprise software aimed at large corporations. We had to support several old mainframes that don't actually exist anymore outside of museums -- but these companies ran emulators of the mainframes solely to continue to use the software they'd been using for decades. Nobody at those companies even has the source for that software, let alone know how it really works. It just works and they can't justify the expense of reworking their entire system just to get rid of it.	JohnFen	10.148291	9.791662	comment	3.0	14.0	1707523021	1.6723858
18110723	I’m curious why there aren’t more x 	I’m curious why there aren’t more x -> x conversion/adapter tools available. Most languages have the same core data models/abstract concepts, if there really is an enterprise/business demand for a product, usually some company would come up with a solution. Personally I’m curious about COBOL and learning from it’s design, but I’m intrigued by this question in general.	sbr464	10.148067	9.79004	comment	3.0	10.0	1538380212	-8.933202
18111279	> The problem is that Cobol isn’t po	> The problem is that Cobol isn’t popular with new programmers.Enough with the COBOL shortage myth. Don't be fooled, not being popular is not the problem. The problem is COBOL jobs aren't competitive, they often even pay worse than other tech jobs. That's why they are either being outsourced or offered to 60 year olds in their spare time. (So arguably they're not that mission-critical, either.)But then who is writing articles with a false premise and why? Why would a news outlet (and I use that term loosely) even feature an article that ostensibly is to get more programmers to do COBOL cheaper? I don't even understand the agenda here - is there some kind of meta-game? The best I can think of is they're hedging their bets for when a bank fucks up, but even that seems pathetic. Maybe it's ju	guitarbill	10.147855	9.794194	comment	3.0	12.0	1538388223	1.6692842
18138219	It's cheap to portray COBOL programm	It's cheap to portray COBOL programmers as cowboys, but COBOL and the ecosystem around it is actually one of the most organized and fit-for-purpose programming languages around even if it isn't modern by any means. Time will tell if banks and insurances will fare better with J2EE-based systems (meaning classic Java-based enterprise stacks such as EJBs and portlets running under shudder Websfear, which count as new-fangled compared to COBOL in these circles). I could imagine classic J2EE maintenance is being neglected as career path for millenials, just as COBOL is/was for the generation before. J2EE exposes much more escape hatches into system programming and rope to hang yourself, and at the same time will be around for a long time to come, since Java has been the go-to language for almos	tannhaeuser	10.148123	9.792918	comment	3.0	31.0	1538643329	-8.949944
18138277	I don't know for COBOL, but for JEE,	I don't know for COBOL, but for JEE, we've been able to migrate out of weblogic (to jboss) and then from oracle to postgresql (on code which is 10 years old). So even if JEE might be hard to maintain, it allows some flexibility in the base tools you choose. (my view of COBOL is that once you're into a vendor, it's pretty hard to leave to another one because COBOL is close to the metal, I may be totally wrong)but in the long run, the problem is also the business logic. What disappears is the knowledge of the hacks that were applied at the business logic level. And this is much harder than to recover from the code. So I guess one has to make the difference between business logic maintenance and the actual COBOL maintenance.But having rewrote some huge COBOL app in Java, I can say that Java i	wiz21c	10.148064	9.792918	comment	3.0	16.0	1538644149	-8.920719
30329308	Banking...- Does that COBOL code do 	"Banking...- Does that COBOL code do the thing(s) it's supposed to in a reliable and 100% predictable way?My guess is : Yes it does.So let's go down your path. You rewrite that COBOL program using your hot new recent language of choice. How many new bugs will be introduced? What other risks are there in this new language; CVEs? RCEs? Simple coding bugs which could cost that bank millions/billions/trillions - or just as bad, the bank's customers their savings/livelihoods?Which New Hotness language would you rewrite that crusty old COBOL application in?Rust? [0]
Golang? [1]
Something else?There are times when it's better to leave the New Hotness to some new application rather than trying to replace a known reliable/predictable system with New Hotness. Especially for banking.[0] https://cve.mi"	scarygliders	10.148109	9.794619	comment	3.0	12.0	1644824683	9.623786
18556884	This attitude leads to companies to 	This attitude leads to companies to maintain COBOL codebases on the obscure mainframe for decades.	Chyzwar	10.147837	9.793508	comment	3.0	12.0	1543449732	-8.917691
17335181	Genuinely interested:  When you say 	Genuinely interested:  When you say you are in love with the system, is it because you think of yourself as kind of a luddite programmer, or do you believe there's something that mainframes and Cobol do that other stacks can't?Or are you looking for work that pays a premium due to the obscure skillset?	gt2	10.14802	9.791426	comment	3.0	12.0	1529282485	1.616752
17636559	Couldn't you at least port your COBO	Couldn't you at least port your COBOL to C? It's also statically typed, compiled, there are high-performance libraries that support arbitrary levels of numeric precision (GNU GMP), and every engineer trained in the last 20 years at least has some C experience.	tonysdg	10.147904	9.793204	comment	3.0	16.0	1532839603	-8.9558935
16392159	"McCLIM 0.9.7 ""Imbolc"" release"	"McCLIM 0.9.7 ""Imbolc"" release"	jackdaniel	10.14864	9.787698	story	3.0	67.0	1518787879	-8.8722515
36848010	Migrating a suite of programs writte	Migrating a suite of programs written w/ COBOL, CICS, DB2 from z/OS to Linux is fairly straightforward. MicroFocus COBOL compiles IBM COBOL, DB2 runs on Linux or you can swap out another RDBMS. The CICS part requires a simple runtime easily implemented in C plus a new scanner to replace the calls in your programs.I was part of a 4 person team that knocked this out in under a year. 1,000's of mainframe programs running w/o change (at the time) on Unix. This was in the 90s.	ibiza	10.147822	9.793169	comment	3.0	15.0	1690206770	-8.943479
24545951	Old-style COBOL translates trivially	Old-style COBOL translates trivially to or from very brain-dead imperative style code with lots of goto.If you can look past the syntax, modern COBOL is a decent enough compiled language, with most of the stuff you'd expect.	retrac	10.147678	9.794294	comment	3.0	16.0	1600708580	-8.936721
31908056	aye decades of COBOl here though I d	aye decades of COBOl here though I did it upon the wrong non-IBM platform,  RIP ICL and Honeywell	Zenst	10.14797	9.793565	comment	3.0	11.0	1656426164	-8.928881
31907453	Not that salary alone should stop yo	Not that salary alone should stop you, but if you look on glassdoor for the range of salaries of COBOL devs vs react or Go, the median is lower and the ceiling is also lower.If you just want to have fun with older tech that's totally fair.	eatonphil	10.148069	9.789535	comment	3.0	15.0	1656423111	1.740488
31908420	The old pros are continuing to age o	The old pros are continuing to age out and retire or die. Places with COBOL systems want to keep their applications limping along instead of replacing them. The shortage of devs is only going to get worse. Remember when lock down started and some government systems built on COBOL started straining under the load? Rather than being dismissive, I'd encourage those with any interest at all to try to pick it up. We need folks to maintain it.	Stampo00	10.14781	9.793446	comment	3.0	19.0	1656427754	-8.8651085
31908794	Exactly!  You will never learn anyth	"Exactly!  You will never learn anything about JCL from a COBOL textbook.  Heck, I'm not sure a JCL textbook (if they exist?) would be of much help either.  When I went to college I was in the last group of students whose client/server classes were all mainframe based.  We had a class where JCL was taught and a valid answer for ""Why is JCL syntax so irregular?"" on the exams was: ""Because it was invented in Berkeley in the 1960s and everyone was on drugs."""	mikece	10.147723	9.794072	comment	3.0	10.0	1656429272	-8.98733
39441465	Just be careful not to go too far in	Just be careful not to go too far in the opposite direction. There are new things coming all the time. You probably don't want to be writing new COBOL anymore even though it was once a good idea (you might have to maintain it, but you should already know what you replace it with and what your interoperability strategy is)	bluGill	10.147727	9.79479	comment	3.0	12.0	1708438150	-8.95067
39614248	"> 
perhaps not to you but perhaps th"	"> 
perhaps not to you but perhaps they are for a large number of people who are used to seeing words they recognize, surely being able to read a simple program before you have learned and guess what it means will be a great comfort to people and make them feel that yes, they can learn this.This argument was already used in the past to justify the very verbose syntax of COBOL."	aleph_minus_one	10.147709	9.79151	comment	3.0	14.0	1709719310	-8.937689
32736472	I doubt COBOL is used for ATMs. It's	I doubt COBOL is used for ATMs. It's used for batch processing and for backoffice systems.	forinti	10.148016	9.793903	comment	3.0	11.0	1662469014	-8.876428
32736507	To attempt to answer the second - I’	To attempt to answer the second - I’ve heard the often-repeated “COBOL pays great!” statement isn’t actually true.From what I recall (no personal experience), the pay is quite a bit less than big tech, with the downside of an antiquated language on the resume and nightmare codebases to deal with. Doesn’t sound like a good career move.	rtev	10.147899	9.7913885	comment	3.0	13.0	1662469281	1.6794078
32822003	they already are, but actually most 	they already are, but actually most COBOL stuff is pretty safe as far as job security goes.As with anything, its not about the programming language, its about the business context. COBOL outsourcing means having great documentation so they know what the fuck is actually going on in the codebase. Also, COBOL has less boilerplate than for example java. The boilerplate is not standardized and usually unique to each company, again highering the difficulty to outsource everything offshore.Most succesfull approach seems to be to import 10 indian guys on premise, and have them work along your existing team.Dont underestimate the effectiveness of a 59 year old cobol programmer who knows the program in and out, and knows exactly where to adapt something without breaking anything else. There are no 	dachryn	10.147815	9.793372	comment	3.0	12.0	1663059263	1.7295878
32823498	Good salary is subjective. Tell me w	Good salary is subjective. Tell me when these banks start paying 150-200k and I’ll consider it. Most offerings I’ve seen is between 75-90k.Also there is no career growth with COBOL. Its a dead language. Learning it is as useful as learning a proprietary tool that is only used at one company. You’d be better off learning React, Rust, or some other language that can apply to several different companies.	SamuelAdams	10.147842	9.793467	comment	3.0	10.0	1663072810	1.7595587
16549454	Most of the worlds largest enterpris	Most of the worlds largest enterprises run tons of this legacy cobol mainframe stuff. They solve really hard problems using this technology and we would be wise not to be dismissive but instead to learn.	paloaltokid	10.147821	9.7936735	comment	3.0	17.0	1520563022	-8.874411
16549968	Every bank, insurance, airline, and 	Every bank, insurance, airline, and electric utility in the world older than 25 years old has a mountain of critical, working, and legacy software running COBOL and FORTRAN.With the generation of programmers who wrote the code retiring it’s even more entrenched because even though they rely on that code dearly, few if any people remember why it does what it does how it does it.	Dangeranger	10.148002	9.7887945	comment	3.0	11.0	1520573087	-8.887317
16583842	COBOL and luxury present in one Engl	COBOL and luxury present in one English sentence is a syntax error.	phoe-krk	10.1478195	9.794333	comment	3.0	12.0	1521025944	-8.945903
16649146	COBOL developers did just fine, you 	COBOL developers did just fine, you may not get to work in the new hot tech but there is a huge market for aging entrenched technologies. You average Java developer is late 30's to 40's and it's not uncommon to see whole teams of 40 something developers in a java shop. There is life outside the valley.	kls	10.148119	9.792549	comment	3.0	11.0	1521730416	-8.876594
19840948	I wonder what 1 million lines of COB	I wonder what 1 million lines of COBOL translated to Java looks like.Let us stop and give some caring thoughts to the people who will maintain that code base.	kyberias	10.1480875	9.792637	comment	3.0	19.0	1557160139	-8.940846
24834820	great work, quite happy to see adopt	great work, quite happy to see adoption of rebol's syntax	lulzx	10.154218	9.742429	comment	3.0	17.0	1603179992	-7.511798
24857389	For a brief stint I worked at an ins	For a brief stint I worked at an insurance company that had a training program for COBOL. They would hire individuals that had zero programming experience but showed an aptitude for critical / logical thinking. Over a period of 8-10 weeks they would introduce basic programming concepts, move the students into Assembly, then to COBOL.Their reasoning was it would be easier to train new individuals and work them up, using senior staff as trainers and escalation points than to try and find existing COBOL programmers. They started the pay off quite well and were able to pull in some highly talented people. They approached it almost like an apprenticeship, only with programming as the trade.	michaelmcdonald	10.147454	9.792405	comment	3.0	17.0	1603370671	1.7109907
24857497	Rather than needing to program direc	Rather than needing to program directly in COBOL, are there any compromise solutions for this, like a code analyzer/generator that allows a programmer to code in a higher-level language but outputs COBOL?	supahfly_remix	10.147831	9.794878	comment	3.0	10.0	1603371595	-8.926113
24857511	If you bring in most people with pre	"If you bring in most people with previous programming or systems exposure, they hear ""COBOL"", and make jokes about ""COOL COBOL"" (COBOL Object Orientated Language).  This somewhat includes myself.If you bring in someone who is smart, pragmatic, and interested in a nice indoor job with good pay, they're more interested in the specialized job training and position that comes with it.Someone I knew made the tongue in cheek retirement joke that ""where else could I learn COBOL and mainframe in university, and never learn anything else until I retired?"""	skylanh	10.147884	9.795241	comment	3.0	14.0	1603371668	1.6866885
25171281	I tend to disagree with many of the 	I tend to disagree with many of the sentiments. In particular, many software folks don’t know the most rudimentary data structures and algorithms. Those should be memorized, frankly. Lately I have been exploring old programming books on archive.org and realize how downhill the industry has gone from fundamental principles, which leads to “language-z” zealots to satisfy some business need.The author mentions COBOL as being antiquated and irrelevant but in all honesty, modern languages don’t improve upon much. Underneath all the layers  people add to modern languages (so the rest of the developer community can push buttons without even the faintest idea) lies assembly language and the machine.Knowledge of the systems is abstracted away so much that people are focusing on mastering the wrong 	bjornjajayaja	10.148059	9.792679	comment	3.0	16.0	1605981249	-8.931322
25174753	Any COBOL contractors that can tell 	Any COBOL contractors that can tell what the pay/hour is? First hand experience please, rumors I've read them all already.	unnouinceput	10.148332	9.786902	comment	3.0	15.0	1606016185	1.7413626
25175476	I don't like articles about COBOL, b	I don't like articles about COBOL, because most of them talk about how young people don't want to learn it. I'm fine with learning shitty technology. The real issue is the money. Look at the salaries for COBOL jobs. They suck shit.If banks need to update their software, hire people and train them. It will take time, and time is money. That money could be invested into something else (there is an opportunity cost). If that something else is a higher priority to you, then maintaining the integrity of your critical software is not actually as important to you as you say it is.I will not take a pay cut to work on COBOL for a bank.	henning	10.1477585	9.793905	comment	3.0	24.0	1606027087	1.7235159
25175952	COBOL has a SEP field on it (and for	"COBOL has a SEP field on it (and for good reasons - it is someone else's problem), but when discussing APL, I've often reached for it as an example that everything is just preference.When I show an APL or K gem such as ""|/0(0|+)\"" (which is a complete and rather efficient implementation of the maximum-subarray-sum problem), people usually complain that ""it's unreadable"".But then ""ADD ONE TO X GIVING X"" compared to ""++x"" or ""x=x+1"" shows that explicit is only better than implicit when you're not familiar with the notation.Readability is all about your expectation and familiarity."	beagle3	10.147788	9.794564	comment	3.0	21.0	1606034296	13.030026
25176073	> I will not take a pay cut to work 	> I will not take a pay cut to work on COBOL for a bank.You're probably just not the right type of personality.  It seems that COBOL programmers have nice, slow paced, easy and safe jobs. That could be why there's so little hiring for COBOL programmers. Once you get someone, they stay put for decades until they retire. I'm sure there are plenty of programmers out there ready to drop the stressful sleepless start-up jobs and settle into something easy and 9-5, but perhaps don't know how to get from A to B.	axiolite	10.1476965	9.79419	comment	3.0	14.0	1606036116	1.7275372
25176438	I realize this is a naive perspectiv	I realize this is a naive perspective, but rather than try to “translate millions of lines of COBOL to Java”, why not just build a new system from the ground up, based on requirements and first principals? The function of these systems seems fairly simple from the outside. What am I missing?	rzz3	10.148173	9.791996	comment	3.0	11.0	1606041680	-8.96096
25177905	£1000/day to work on a COBOL project	£1000/day to work on a COBOL project ain't bad though	wdb	10.147835	9.794469	comment	3.0	11.0	1606057121	1.7694998
25385506	COBOL, Assembler, and FORTRAN are ac	COBOL, Assembler, and FORTRAN are actually kind of cool.	hackbinary	10.147981	9.79215	comment	3.0	16.0	1607693705	-8.88712
25385516	I think I may have started a course 	"I think I may have started a course in COBOL many years ago.
Wonder if would be worth learning it now? 
There is a lot of COBOL code that needs to be maintained."	peter_retief	10.147494	9.79384	comment	3.0	16.0	1607693748	1.6354761
25385556	I do not get all the hatred. The ide	I do not get all the hatred. The idea behind COBOL’s syntax is the same as SQL’s: it is merely yet another “Structured English Query/Programming Language” designed, initially, for non-programmers to be able to describe in words what it is they would like to accomplish in a way they could be understood by the computer.	Koshkin	10.147774	9.792127	comment	3.0	41.0	1607694000	-8.967936
25385656	I say YES do it, learn COBOL and Mai	I say YES do it, learn COBOL and Mainframes, don't listen to others who say Mainframe is a thing of the past, it's here to stay. Just talk with leading positions in Insurance/Finance government maybe?, they are more then happy to find someone who is motivated and eager to learn, AND they have the money and time to support and build-you-up (Training mentors certs licenses etc.).	nix23	10.147803	9.775139	comment	3.0	13.0	1607694558	1.8075502
25386829	Until some COBOL developer publishes	Until some COBOL developer publishes his pay slip, I will stick to reality, top IT salaries are at tech giants.From personal experience: BNP Paribas is one of the biggest bank in the world, top 5 if you exclude Chinese state owned ones, and they pay mainframe related jobs like shit.Being young, smart and with a whole career ahead, you have no future working has a COBOL developer, no one should spend his life picking up shitty code left by his elders decades ago.	Misteur-Z	10.147608	9.794634	comment	3.0	26.0	1607700734	1.6831295
25556653	Surely American colleges still teach	Surely American colleges still teach COBOL?	commandlinefan	10.14769	9.794321	comment	3.0	18.0	1609129474	1.859703
35556263	Right, but what do you think about t	Right, but what do you think about the point ch4s3 made below, namely that AI is non-deterministic? Isn't that a core difference? The COBOL compiler produces the same output for the same input, i.e. the compiler acts as a pure function.	xwowsersx	10.147897	9.794801	comment	3.0	11.0	1681397103	-7.295299
35726717	Is there an estimate on how many COB	Is there an estimate on how many COBOL jobs are out there still?  And are there still apprenticeship/training programs for learning COBOL?	mikece	10.147804	9.793969	comment	3.0	27.0	1682596682	1.7759472
35756851	Learning COBOL is easy. If you want 	Learning COBOL is easy. If you want a good skill for those rare low-paying COBOL jobs, learn JCL. That is the secret sauce that glues together IBM Mainframe databases, COBOL programs, and user interfaces. Any legacy application will be a chain of JCL jobs linking input and output from several COBOL programs. This only applies to IBM mainframes. The State of Michigan uses Burroughs/Unisys mainframes running COBOL, but I don’t know what those use to control job flow and input/output.	fredsmith219	10.147827	9.794201	comment	3.0	12.0	1682800210	1.8163959
28824534	How difficult is Cobol to learn comp	How difficult is Cobol to learn compared to other languages? I admit I had a bias against it when I was watching Dave Plummer’s software drag race between it, C++, and Fortran[1] but I was absolutely blown away at it being faster than the Fortran implementation, and about 50% slower than the C++ one. For something so verbose, I wasn’t expecting it to compile to such efficient machine code.[1] https://youtu.be/yYcHWGxtRQo	Decabytes	10.148347	9.7927065	comment	3.0	12.0	1633925033	-8.9207735
34408642	Given the amount of proprietary and 	Given the amount of proprietary and paid-to-use COBOL compilers which run on .NET and the JVM, I would say that you're not correct. It does in fact run on .NET already.The fact that there is a COBOL 2022 standard (yes, it's still being maintained) should have given enough of a clue that COBOL doesn't run only on legacy mainframes and tape drives anymore.Sure, there are still companies using COBOL 85, but that's not the fault of the language. You wouldn't blame Java itself if companies used a version from the 90s intead of a newer and better version.I find it quite absurd when people hate on COBOL based on its version from the 80s, while ignoring it's newer standards.	KTSnowy	10.147846	9.793989	comment	3.0	14.0	1673924175	-8.937002
34409048	I know about GnuCOBOL, but both proj	I know about GnuCOBOL, but both projects have different goals and ideals.Otterkit compiles to C#, and GnuCOBOL compiles to C. The two are meant for different use cases. You wouldn't use a huge C program in a .NET backend, it would be a pain to make it work correctly and difficult to maintain.GnuCOBOL also doesn't support quite a bit of COBOL's features. It only supports the procedural part of the language, and that is only a small part of it compared to the object oriented side of COBOL. Otterkit will support both, and the new 2022 standard.	KTSnowy	10.147935	9.79429	comment	3.0	13.0	1673928866	-8.956298
23427391	"""But we are super proud of coining I"	"""But we are super proud of coining Industrie 4.0, so, that's something.""Regarding Industrie 4.0:Currently at a client of mine, a ""hidden champion"" i.e. world market leader in industry XYZ (1.6B in revenue), I'm struggling to have them migrate from Cobol to Java. They are using their versioning system as a backup for their data, not for versioning the code. Deployments are done via dragging a zip file somewhere. Every new version means the whole system (handling invoices e.g.) is out of service for 10-14 days."	woodpanel	10.148122	9.793545	comment	3.0	13.0	1591357317	-8.906993
23671746	If you don't know COBOL, Wikipedia h	"If you don't know COBOL, Wikipedia has a pretty excellent overview of a lot of its basic syntax here:https://en.wikipedia.org/wiki/COBOL#FeaturesIt's very verbose, and includes a lot of opaque language that almost seems designed to confuse (I know it wasn't actually, but it's pretty bad). For example, an alphanumeric variable type is called a `PIC` for ""PICTURE"". You can store an alphanumeric as a `PIC A`, or a numeric-only using a `PIC X`. Fields in a record get a ""level number"" that defines their behavior, and you just have to memorize which does what. 01 is a top-level record. 05 defines a subgroup. 88 is a conditional record.There are many parts of the language that are clearly anti-features in retrospect. A 66 level number allows you to redefine a field in a previously defined record."	mercantile	10.148023	9.792997	comment	3.0	11.0	1593375753	-8.949298
20219540	I really don't want to judge your ab	I really don't want to judge your ability, I agree with your comment about C#, Java, JS, C ,... but COBOL is a completely different animal to reason with.Been there and ran as fast as I could.	mars4rp	10.147911	9.794392	comment	3.0	13.0	1560900956	-8.963117
20322241	I think you underestimate how slowly	I think you underestimate how slowly things move in some places. There are still shops running COBOL on mainframes. Windows is going to have a place on servers for decades to come.	cwyers	10.148057	9.791466	comment	3.0	18.0	1561951668	9.5308695
13612067	Could you please go into agonizing d	Could you please go into agonizing detail on your team's use of REBOL? I've never been more excited for a language than Red/RedSystem, but hear so little in the wild on it or its older brother. All the parse examples I've seen have been pretty basic, but I hear it is powerful.	throwaway7645	10.15433	9.738411	comment	3.0	11.0	1486683447	-7.435381
13862689	Sounds like my predicted outcome for	Sounds like my predicted outcome for a lot of folks I knew back in the day. Got into the industry because dollars, didn't particularly like it, so when (for example) COBOL dies off their career dies with it.I'm from the same era, how did I avoid it? I never knew just one language, for starters. Unlike the author's father, I never waited around for someone else to train me. I bought a book and wrote throw-away projects in Delphi, VB, or whatever. FoxPro (a primary source of my income for a period) died a slow death? Good thing I know .NET (granted, working on the MSFT VS team kind of helped with that). IOW, I didn't sit around and wait for $IT (for various values of whatever we're waiting for) to come to me or be served to me.So why doesn't everyone else do that? Because I wasn't learning D	mikestew	10.147873	9.793974	comment	3.0	23.0	1489441191	1.6661915
34589830	People said that about Cobol. I woul	People said that about Cobol. I would expect C++ to be around for another century at least.	queuebert	10.147973	9.7893095	comment	3.0	13.0	1675130021	-8.780874
35011068	COBOL is easy.  JCL is the hard part	COBOL is easy.  JCL is the hard part.	MelvinButtsESQ	10.147707	9.794422	comment	3.0	14.0	1677858262	-8.995402
35011176	People that have not been exposed to	People that have not been exposed to legacy industries (banking, insurance, etc) would simply not believe how many of these large/huge companies run the majority of their business on an IBM mainframe running COBOL code.  I've seen it firsthand and I didn't believe it.  For them, it just works.	W-Stool	10.14856	9.792834	comment	3.0	16.0	1677858689	-8.87096
35011183	I'm pretty sure I'm thinking about i	"I'm pretty sure I'm thinking about it right. How much COBOL code can run on a regular Ubuntu machine? What's the package manager for OSS packages? What test frameworks are in common use?You know you're in trouble when ""There's a syntax file for VSCode."" is the height of your modernity."	moomin	10.147692	9.794666	comment	3.0	29.0	1677858730	-8.903602
37177234	There's a little more to it. If your	There's a little more to it. If your original team retires because of old age, that's a lot of wisdom lost. Not everyone wants to learn COBOL to keep planes in the air and the IRS running, imagine needing to figure out the low level code on something millions of miles away with half the hardware broken, the battery cracked and leaking – and if the software update doesn't work, the entire mission is over?It's altogether amazing.	justinator	10.147966	9.793671	comment	3.0	11.0	1692373465	-8.913767
37279201	The transpilers I've seen have creat	"The transpilers I've seen have created some extraordinary Java. If you've experience of the COBOL ""Data Division"", imagine how that gets ported across to an object oriented language..But I still agree with you. I've experience of a couple of COBOL migration projects, and I wouldn't want AI anywhere near it. The testing required is insane enough as it is, and the once-a-decade corner cases numerous enough for the idea of using AI on this to scare the bejeesus out of me.This is code that can still contain for-loops to slow down processing so the teleprinters can keep up..."	b800h	10.148188	9.792027	comment	3.0	16.0	1693107167	-8.962336
37278639	I learned COBOL only to find the rea	I learned COBOL only to find the real reason the engineers get paid so much to maintain systems is not really due to their rarity but rather their extensive decades of experience which I will never really have.A lot of new COBOL work just gets shipped off to India to be done cheaply.	xwdv	10.147825	9.7939415	comment	3.0	22.0	1693100479	1.7945775
37480330	I did an internship in 2009-2010 wit	I did an internship in 2009-2010 with a company who used MicroFocus “AcuCOBOL” to modernize a green-screen automotive dealership management system into a Windows GUI.I wouldn’t say I did it for fun, but I did do it for the learning experience. My university was very invested in COBOL, and I had classmates who got offers much larger than mine to work for various finance companies in Wisconsin,  so I had already learned the basics of language.It’s hard for me to separate the COBOL from all of the other dysfunctional things going on at the company. I knew that the language was a dead-end and did not want to get stuck with it. Not because I didn’t like the language, but because I was 21 and “Web 2.0” was in full swing and I knew I wanted to do something “cool”.Migrating data files to new descr	marpstar	10.147933	9.793807	comment	3.0	13.0	1694522831	-8.939184
37480391	I had to deal with a bunch of mainfr	I had to deal with a bunch of mainframes in a previous job and tried to learn a bit of COBOL. One interesting thing I learned early on was that programs are almost never written exclusively in COBOL. The language isn't Turing complete (by design), so a significant portion of a program's logic will be captured in the JCL (Job Control Language) script that configures how the program will run and orchestrates multiple programs.	giaour	10.147798	9.794277	comment	3.0	14.0	1694523155	-8.915806
29191582	COBOL is code - it's not nocode.	COBOL is code - it's not nocode.	andrewstuart	10.147796	9.794082	comment	3.0	11.0	1636656858	-8.963513
29220720	Again the dreaded Cobol argument. We	Again the dreaded Cobol argument. We had to struggle with a lot of this in the past: Cobol, SQL, YAML, BDD. All this would be much easier without  this nonsensical idea that nontechnical people will read code. They won’t. Making code a bit more like prose doesn’t make it readable for nontechnical people. Yet we again and again make our life harder - ugly syntax rules, no code completion, no auto-formatters.Please stop making code easy for non-coders. They don’t want to read it. They never did. They just want this damn box to work.	szastamasta	10.147813	9.794021	comment	3.0	11.0	1636924046	-8.946511
26223152	Entire industries have been built on	Entire industries have been built on Cobol, and Emacs-as-a-Lisp-host, and Visual Basic too, but that doesn't mean we should be using any of it for a next-generation financial trading scheme.There aren't any good reasons to avoid producing viable C/C++ libraries to implement this kind of technology - only developer complacency and laziness.Want me to adopt your new fintech?  Let me embed it in ANY app I might write, not just the browser, not just cli-Javascript ..	oilbagz	10.148491	9.790336	comment	3.0	10.0	1613992078	-8.925202
26426562	> BUT - the problem is the core of o	> BUT - the problem is the core of our system is written in COBOL.This is the key issue. You can migrate it off the mainframe or you can migrate it to sexier tech on the mainframe.> and the new generation doesn't know them or have much of a desire to learn them.One of the barriers is that these companies are not willing to pay the same money we (I think we are from the same generation - I was paid to write Apple II software) can get from working with anything that's not COBOL.I'd love to spend some time with mainframes - they are the fastest Linux machines you can get - but don't want it enough to combine COBOL and JCL with a significant pay cut.	rbanffy	10.147838	9.79348	comment	3.0	16.0	1615483549	-8.908139
26429387	To someone going into IT or programm	To someone going into IT or programming at a young age (so, not me), would you recommend them to get into COBOL and mainframes? Will it be a career option for 10+ years?	ralphc	10.147775	9.794147	comment	3.0	20.0	1615499075	1.8155872
26429478	Cobol is alive the same way Latin is	Cobol is alive the same way Latin is. Unless you're sure you can get a job in the Vatican you're screwed if you learn it.	konjin	10.147408	9.792636	comment	3.0	16.0	1615499567	-8.921284
26431085	I did, my first job out of college w	I did, my first job out of college was mainframe cobol at a bank in 2002. It was a huge mistake. The mainframe apps were a cost center the company sought to minimize. Salaries were low, raises were zero to 3%, no bonuses. It was a dead end job. I recall sitting in a group meeting when the VP announced the offshoring initiative. The plan was to replace attrition with offshore developers, max 10%. A few quarters later same VP told the same group the same plan, only this time the target had risen to 20%. Ding ding!That’s when I got out. When it came to switching jobs I had zero experience in current tech and had to take an entry level position and a pay cut. A few years later that same company had massive layoffs and all development outsourced by 2008 or so.So yeah whenever you hear about opp	throwaway1492	10.148253	9.789879	comment	3.0	14.0	1615510920	1.6301004
31114255	Tcl and Rebol are great. The code is	Tcl and Rebol are great. The code is compact, very easy to understand and quick to write, especially Rebol. You can do GUI in both Tcl/Tk and Rebol as well. You might want to check Rebol out as well: http://www.rebol.com/docs/expert-intro.html (or http://www.rebol.com/docs/design-objectives.html).	johnisgood	10.155185	9.740497	comment	3.0	16.0	1650570022	-7.942032
31227845	This project made the rounds a coupl	This project made the rounds a couple of years (months?) ago. Always accompanied by mentions of companies having a hard time hiring engineers to work on COBOL codebases. I've never had the luck of stumbling on one of these. Maybe because I'm not based in the US or just didn't look hard enough. It'd certainly be cool to take a peek at that code.	vmsp	10.147746	9.794821	comment	3.0	14.0	1651432868	-8.890641
31425042	COBOL Devs probably earn more than R	COBOL Devs probably earn more than React Devs.	s_dev	10.147974	9.793058	comment	3.0	23.0	1652893047	1.6354853
31425107	Every time I've gone looking for COB	Every time I've gone looking for COBOL jobs on job sites out of curiosity I always see them paying pretty poorly.On Glassdoor for Cobol [0] the standard range is $54k to $179k (presumably in NYC metro where I am) with a reported maximum of $306k. The standard range for React [1] is $49k to $257k with a reported maximum of $550k.I'm not saying Glassdoor is perfect but better to have these discussions based on some measured data than just common mantra that legacy is boring but pays better.[0] https://www.glassdoor.com/Salaries/cobol-programmer-salary-S...[1] https://www.glassdoor.com/Salaries/react-developer-salary-SR...	eatonphil	10.147693	9.793419	comment	3.0	19.0	1652893446	1.6649394
14202803	> Döderlein says that banks have thr	> Döderlein says that banks have three options when it comes to deciding how to deal with this emerging crisis.Option 4, which is what banks are actually doing to the best of my knowledge, is to train new hires on how to write COBOL.	jcranmer	10.147908	9.793772	comment	3.0	15.0	1493213947	-8.988036
14202804	Say I wanted to learn COBOL, has any	Say I wanted to learn COBOL, has anyone got any resources they'd recommend?	alnorth	10.147656	9.794199	comment	3.0	17.0	1493213969	1.6350931
14202947	Nothing critical (banks, military, f	Nothing critical (banks, military, factories) runs on NodeJS/JavaScript/AWS so probably nothing. Do you think a lot about some old BASIC Accounting Software?There are probably only two languages  which might face similar problem as COBOL: C and Java. For now they are both actively maintained and  used for new projects - so we are fine for at least next 50 years.	Tom4hawk	10.1494465	9.7844	comment	3.0	25.0	1493214998	-9.059566
14467500	"""In less than two thousand lines of "	"""In less than two thousand lines of clean Java code, we’ll build a complete interpreter for Lox...""2000 lines of Java code? I guess 400 of the lines of are just getFoo() setFoo() getBar() setBar() and so on and so on...At the beginning i thought ""Why is this tutorial written in Java? Yuck!"". Then, in a flash of enlightenment i saw this was a perfect choice: The author, bless him, is showing us how to write an interpreter in Java, so after one is finished, one can stop using Java and start using this brand new language.Jokes aside, i am VERY MUCH looking forward and EXCITED to see that the next chapter is on implementing a bytecode virtual machine.  So let's hope the author completes the book soon!!Then I will finally create my ambitious project for an object oriented COBOL, which will be c"	flavio81	10.148001	9.793657	comment	3.0	15.0	1496378515	-8.888367
20454650	> “I think there is a misconception 	> “I think there is a misconception about [COBOL]. A misunderstanding about it as far as it being old. Usually in technology we think because it is old it is irrelevant,” he said. “But it’s still the fastest processing language out there.”I thought this comment was born from naivety or bias, but after reading up on it a little further, it appears that it's true or close to true for many cases.	dlivingston	10.147673	9.793972	comment	3.0	45.0	1563317557	-8.930162
20454871	I think it mostly stems from IBM com	I think it mostly stems from IBM compiler optimizations for their mainframes (which is most of today's COBOL), and not the language itself.I do COBOL mostly in OpenVMS and only tinker with IBM in the weekends but it would be cool to see how it performs under the same circumstances compared to other languages.	tapland	10.14789	9.793449	comment	3.0	13.0	1563319592	-8.952796
20454968	Cobol is mostly likely around becaus	Cobol is mostly likely around because no one knows exactly what the code does. Missing design documents & decisions don't help either.  Companies making money are risk adverse, they won't risk killing their golden goose over a rewrite, it's often companies that are not making money that go on massive rewrites believing that new tech will give them the Midas touch towards profit.	segmondy	10.147686	9.794002	comment	3.0	26.0	1563320443	-8.919592
20455268	> you have to find a little tiny per	> you have to find a little tiny period to find where execution resumes. No labels, just a tiny couple of pixel round period.Totally naive to COBOL here, why do you have to do it? You said you wrote some regexes for the pull and transform, why not pipe the source to a program that finds that period for you?	icxa	10.1480055	9.793787	comment	3.0	17.0	1563323184	-8.930633
20457116	COBOL programs reside on mainframe c	COBOL programs reside on mainframe computers, an environment that's entirely alien to someone who's used to UNIX-like environments where you have something like a pipe.I'm not sure how and on which machines COBOL code is written and compiled these days but I reckon that piping it to grep, or similar tools, might simply not be an option on those machines.	BjoernKW	10.147871	9.793879	comment	3.0	10.0	1563346095	-8.915876
20456671	3 years ago I learned that large ins	3 years ago I learned that large insurance companies in India still use COBOL. That fact blew my mind. This fact (Estimates as high as 80% of financial transactions use... COBOL) further blows my mind as I thought only Indian financial institutions are rigid. Clearly not.	os7borne	10.147837	9.794198	comment	3.0	13.0	1563340348	-8.944567
20691419	I remember really enjoying paying ar	I remember really enjoying paying around with rebol back in the day. Sadly I think it was open open sourced after development ceased. The bug tracker that was set up looks abandoned with nobody assigning tickets.	steve19	10.154197	9.745136	comment	3.0	13.0	1565740428	-7.4754214
20691965	I think most people who were interes	I think most people who were interested in Rebol have moved over to Red.It's very similar to Rebol and is under active development. If you like Rebol and haven't tried Red, it's worth taking a look:https://github.com/red/red	rpeden	10.155462	9.734161	comment	3.0	10.0	1565746355	-7.4381895
20894863	I wonder how the market for that is 	I wonder how the market for that is now, and how it will be a decade from now. I imagine a lot of the people with significant experience working with COBOL and mainframes are getting older and retiring	non-entity	10.147835	9.793943	comment	3.0	10.0	1567771454	1.6075292
23799363	I don’t really understand this artic	I don’t really understand this article. When the New Jersey government came out asking for Cobol programmers, all I remember was them talking about the strain on their system due to a demand spike. But this article spends its whole time talking about the UI? Unless I’m missing some context, this reads more like an ad.	mxcrossb	10.147837	9.794117	comment	3.0	11.0	1594440333	-8.880229
24080254	Both REBOL and Red feel magical to m	"Both REBOL and Red feel magical to me. How is this simplicity achievable? Where is the trick?I never could dig too deep into those, and couldn't find  much info on the net. Is there a set of seminal papers/articles on the principles which those are based off?I imagine there's Logo on one side of it, but I'm not sure about the bootstrap story, the toolchain, etc...  Meta-II? Smalltalk, Lisp?I recently found this book
https://subscription.packtpub.com/book/application_developme... which I'd like to read if it talks about that holistic approach. Any comments? other pointers?"	rgrau	10.155157	9.7345705	comment	3.0	17.0	1596794562	-7.4807115
24314495	COBOL Still Handles 70% of Global Bu	COBOL Still Handles 70% of Global Business Transactions	harias	10.148103	9.793793	story	3.0	25.0	1598687804	-8.952904
24371134	When classifying it's often a good i	"When classifying it's often a good idea to feed the prediction into a sigmoid-function.I have never seen cobol code before, only heard about it so thanks for posting some. What do rows like ""01 ERR PIC S99V9999."" mean?"	im3w1l	10.147537	9.792652	comment	3.0	10.0	1599186065	-8.918225
24371328	So COBOL has no array concept, you h	So COBOL has no array concept, you have to name every input feature FEAT1, FEAT2 etc? Ouch. I can see why the language is dying out.	klipt	10.147731	9.79463	comment	3.0	23.0	1599188805	-8.934706
33436941	I've seen this story several times.O	I've seen this story several times.Once a language no longer has a developer pipeline, it becomes a language with no future.  No matter how important and widely used.  You wind up with jobs begging for qualified developers.  Given how systems last, the language may survive indefinitely.  As nobody dares migrate projects off of it.  But employers will struggle more and more to find employees.The first language that this happened to was COBOL.  There are still a lot of COBOL systems out there.  And a lot of COBOL jobs.  But nobody wants to go into COBOL for fairly obvious reasons.	btilly	10.147984	9.78998	comment	4.0	20.0	1667401318	-6.1179757
33845817	Could you expand on BCD?  What made 	Could you expand on BCD?  What made it good for multi-currency work?(a quick google did not help, managed to lead to examples of COBOL manipulating the first five letters of the alphabet ...)	lifeisstillgood	10.148049	9.792302	comment	4.0	13.0	1670091438	-8.98426
26489202	I agree to some degree that learning	I agree to some degree that learning a new language is easy, but learning a new language and understanding its intricacies that could cause issues in a program takes a whole lot longer.It takes a whole lot less time for an experienced COBOL dev to understand a program than it takes for an experienced programmer who just learned COBOL to understand it in my experience.	Deukhoofd	10.158722	9.763095	comment	4.0	12.0	1615978283	-8.82262
26719398	Sorry to disapoint you. My friend wh	Sorry to disapoint you. My friend who works in recruiting told me, that one company wouldn't accept perfectly skilled candidate, because he was around the same age as their current COBOL developer. They argumented, that they don't want both of them die around the same time.	yeneek	10.147499	9.790538	comment	4.0	18.0	1617757587	1.6958362
26728472	Does anyone know of any good resourc	Does anyone know of any good resources for learning basics of JCL, datasets, jobs, the z/OS Host and so on? I find that when I look at the screens of my mainframe colleagues, the COBOL code is actually the only thing I can wrap my head around, as opposed to all the weird mainframe tools built around it.	slowmotiony	10.147772	9.793781	comment	4.0	12.0	1617818378	-8.918403
26728627	I suppose it's again that time of th	I suppose it's again that time of the year when there's a flood of articles trying to convince people that COBOL is worth learning, that it's been updated or that it pays really well, and that there are lots of hidden opportunities for you to make big money working with COBOL!Those of us who actually worked with COBOL aren't fooled though. It bears repeating: COBOL is a horrible language and it's often used in legacy banking systems. Learn it at your own peril, especially when there are way more interesting languages and jobs out there.	the_af	10.147631	9.794077	comment	4.0	18.0	1617818974	-8.931781
26732636	COBOL will always have a soft spot i	COBOL will always have a soft spot in my heart as the first programming language I learned. I did not use it much - 2 years max - but when reading COBOL it was really clear that there were some programmers who just saw code differently - in an abstract, artistic sense. It was the ultimate litmus test.COBOL is really easy to write spaghetti code with - perhaps even the default. But some of these programmers (not including myself back then admittedly) just wrote code that came together beautifully like a jigsaw puzzle. I’m sure if given a C++ or other language with modern features, they could do amazing things. This was before a time when Clean Code (capitalized on purpose) and such were in the zeitgeist. I didn’t appreciate the full beauty of these modular, generalized, programs until a dec	aparsons	10.1479845	9.794782	comment	4.0	18.0	1617836168	-8.928507
26732962	One of the VAX computers I rescued f	"One of the VAX computers I rescued from disposal at the height of the Y2K impending apocolypse came with licenses (PAKs for those in the know) for DEC COBOL, DEC RDBMS, and DEC FORMS. These three applications formed the backbone of payroll processing for the company that was tossing the VAX.This machine, processed the payroll for a bit over 5,000 employees on a ""clustered"" machine that had a combined total of 512MB of RAM and 4GB of disk. I can assure you that ""Quickbook Payroll"" would not be able to handle this on a similarly resourced x86 machine. Not even close.Unicode support is nice, and the fact that once you've compiled your application to binary it doesn't have to go over the Internet to load key parts is super nice.And yes, there are people that still use COBOL, still think it is "	ChuckMcM	10.14794	9.792618	comment	4.0	25.0	1617837972	-8.921654
37680532	> But do not program in COBOL if you	> But do not program in COBOL if you can avoid it.lolI don't know anything about COBOL but I can feel all of the people that must have triggered. Which is surely why the author included it. Probably like if today that said PHP or Lisp.	22289d	10.147839	9.793244	comment	4.0	13.0	1695845249	-8.9751215
13518132	While hearing about COBOL in banks q	While hearing about COBOL in banks quite often all my friends actually working there say Java and Oracle and all related job adverts I have seen so far were Java or C++. Could someone please provide some relevant facts?	koja86	10.147824	9.793817	comment	4.0	18.0	1485741803	-8.897338
27754252	COBOL is not around in anything inte	COBOL is not around in anything interesting, and trust me go is not going to be used to build anything that we'll use in 20 years.	bullen	10.147363	9.794179	comment	4.0	14.0	1625605656	-8.871424
12156352	A lot of financial systems are runni	A lot of financial systems are running COBOL on mainframes (which can look very pretty, check out the z13: https://www.google.com/search?q=z13&tbm=isch )There was a talk last year at DefCon that went over mainframe vulnerabilities, and it was like a playground. The biggest barrier to entry is getting a mainframe to experiment with.	ktRolster	10.147889	9.792642	comment	4.0	15.0	1469418406	-8.900297
28464873	I’m generally pretty amazed at how l	I’m generally pretty amazed at how low the salaries are for COBOL developers relative to the criticality of the systems being maintained, and also how common those legacy code bases are.	Guest42	10.147974	9.79206	comment	4.0	36.0	1631148259	1.672741
28465221	I knew COBOL was still in use, but t	I knew COBOL was still in use, but this is astounding:> The Bank of New York Mellon in 2012 found it had 112,500 individual COBOL programs, constituting almost 350 million lines;Could that really be true? Can anyone provide some context to make that make sense?	jrochkind1	10.147914	9.793151	comment	4.0	15.0	1631151428	-8.931876
28466189	What is intrinsically wrong with run	What is intrinsically wrong with running systems on COBOL? These systems have a very long lifetime, and COBOL has worked for that entire time.Would it really be an improvement to rewrite a banks's backend processing software in the latest fad flavor of language and framework? We know those would become obsolete in a year.	IncRnd	10.147933	9.79397	comment	4.0	17.0	1631161700	-8.939315
28541109	I've always thought that the reason 	"I've always thought that the reason COBOL is still ""popular"" is that it became an entrenched technology many years ago, and the cost of replacement is high enough (and it works fine doing what it's doing) that no one wants to invest the time and money to replace it's usage.This quote made me pause though, ""COBOL remains the preferred choice for systems where application quality and operating cost remain important considerations"". How much is COBOL being ""chosen"" vs. COBOL is basically required b/c of the existing codebase and systems that need to be integrated with?The latter is my guess, and the choice seems to be really, ""what's the best way to extend this existing system?"" If that system is in Java, it's probably Java... C it's probably C... COBOL it's probably COBOL."	bluejekyll	10.147979	9.794152	comment	4.0	22.0	1631723119	-8.97205
28662771	Yeah, C and Java have had non-breaki	Yeah, C and Java have had non-breaking changes for years. Java code from 1995 can still compile and execute in Java 17 (2021).I imagine COBOL is similarly stable but I have no experience there.	TedDoesntTalk	10.1480665	9.793051	comment	4.0	20.0	1632677652	-8.931829
19915941	My point is that it's the reality. C	My point is that it's the reality. Change and adapt or die along with the COBOL programmers. I watched the COBOL programmers get laid off in droves after Y2K and the dotcom bust so it's a lesson I won't forget. Sure there are some COBOL programmers making mint as consultants but the total number were laid off with prejudice.	docker_up	10.147919	9.794238	comment	4.0	18.0	1557887768	1.5189098
17992918	Serious question: COBOL's just a lan	Serious question: COBOL's just a language. How come no one has put together some kind of runtime interpreter, for COBOL, or thought to produce an emulator facade that keeps the business logic of legacy code, but ports it to another platform, architecture, infrastructure?I look at some of the perfectly cromulent stuff people do with Emscripten [0], and it just blows my mind the things that a browser will run these days. So, why not that?[0] https://emscripten.org/	beesKneesMan	10.147951	9.794305	comment	4.0	14.0	1536984143	-8.915752
18079071	Do You Know Cobol? If So, There Migh	Do You Know Cobol? If So, There Might Be a Job for You	breck	10.147687	9.793611	story	4.0	10.0	1537987796	1.7541618
18845973	> > If anything, it sounds too easy,	"> > If anything, it sounds too easy, making me think ""what's the catch?> This is rude and uncalled for.I think she/he raise a fair point about how the Red language is advertised, and it's actually a rather friendly to assume that it's due to language barrier.Many posts about Red/Rebol are unequivocal praise with very few details or any acknowledgements of short-comings or limitations of the languages.Just to dig up some random ones:Here's a speed comparison between Rebol and Python[0]: Rebol is faster (surprise!), but the post doesn't contain or link to any of the code used for the comparisonHere's some grand self-praise from the Why Rebol/Red[1] on why it's just better than all other languages:>  You may be familiar with Clojure, Python, Ruby, Lua, frameworks like Ruby on Rails, or any of"	hjek	10.1574545	9.718977	comment	4.0	42.0	1546875589	-7.3160396
30145113	Don't think COBOL; think Python 2.1 	Don't think COBOL; think Python 2.1 (not 2.2) with this specific version of PIL, and some of the code implemented as a CPython module (for speed) in C that only compiles properly with one specific EGCS fork that adds support for IA-64. Parts of the code are written in slightly-buggy inline IA-64 assembly, but it's okay because after a system call, that particular operating system makes sure those registers are zeroed each loop iteration, if Python's line-buffering its `print`s so that the system call gets consistently run.Also, the Python script crashes on loading the data files unless there are two (but not more than two) spaces in its full file path. This is not documented anywhere.	wizzwizz4	10.14797	9.793709	comment	4.0	12.0	1643609163	-8.97591
17217848	Supply and demand.Game developers: v	Supply and demand.Game developers: very sexy, easy to show off, has a (very) large supply of talent. Pay not bad, not good, work schedule very demanding.COBOL developer: extremely unsexy, almost don't want to admit it publicly.  Tiny supply, relatively much larger demand. Pay very good. Work schedule very predictable, not demanding. Almost a vacation.Supply and demand. Ignore at your own peril.	crazybit	10.147937	9.794096	comment	4.0	15.0	1527998636	1.6897302
22782474	The point at which the government sh	The point at which the government should have rewritten their COBOL systems into a language that would have a talent pool to draw from was at least 30 years ago.	c3534l	10.147277	9.790465	comment	4.0	25.0	1586044138	-8.888948
22837948	I coded COBOL and RPGII programs bac	I coded COBOL and RPGII programs back in the late 70's, and I'd flip burgers before writing another line.	jerhewet	10.147824	9.794157	comment	4.0	14.0	1586557525	-8.956982
22838032	I worked in COBOL at an internship a	I worked in COBOL at an internship and this was around 2012. This system runs over 1000 court systems in the U.S. It's graphical too and sort of looks like vb6 on the frontend. It was a nightmare to work in even though the team was disciplined and took care of the codebase. You can't write 10k line programs with all global variables and have something that's nice to work on.	codenesium	10.147708	9.794574	comment	4.0	17.0	1586558111	-8.891608
22854225	Ask HN: Where is the evidence that l	Ask HN: Where is the evidence that learning COBOL pays and is in demand?	ornornor	10.147817	9.795001	story	4.0	8.0	1586768839	1.7796762
22888746	> Our work can be used by anyone wan	> Our work can be used by anyone wanting to compile COBOL to WebAssemblyfuture is now	shp0ngle	10.147862	9.794484	comment	4.0	12.0	1587040826	-8.977844
37794730	All the more reason to rewrite it...	All the more reason to rewrite it...   You don't want some mistake in 30 year old COBOL code to be making your 2023 experiment to have wrong results.	londons_explore	10.147724	9.793689	comment	4.0	12.0	1696618572	-8.925686
37992619	I've been intrigued enough to pull d	I've been intrigued enough to pull down Gnu COBOL and attempt to write some simple programs, and found it to be quite an alien universe in and of itself. Can you give any examples of the fully-fledged mainframe world differing from running it on x86/arm?	shawa_a_a	10.147669	9.794424	comment	4.0	22.0	1698101004	-8.851843
25556706	My wife stopped applying for jobs in	My wife stopped applying for jobs involving government programs involving COBOL several years ago. She is very fluent in a lot of languages including COBOL, FORTRAN and so on. The issue is that these agencies never want to pay real wages for a very narrow skillset. The last one told her that their entire budget for the system rewrite was less than $100k and they were expecting to hire 4 programmers to get the job done because the consultant they had hired told them that it needed 4 programmers.	SteveGerencser	10.147793	9.794231	comment	4.0	14.0	1609129989	1.6200813
26348579	There's far more critical code in th	There's far more critical code in the world running on COBOL and s3[79]0 assembler. COBOL is vastly more important than C.	rodgerd	10.1479435	9.794006	comment	4.0	16.0	1614893103	-8.861315
37392055	So for those who don't know, Microfo	So for those who don't know, Microfocus is a retirement home for technologies that need to be taken out behind the barn and shot but can't be because there are like 3 major customers out there that have a Microfocus product as a core part of their organizational structure and can't move away from it.That being said my understanding has always been that learning COBOL was never the hard part, the hard part was always that it's not just COBOL it's learning the mainframe it runs on, and learning the JCL that is associated, and a dozen other pieces of finicky technology.Someone feel free to correct me if I'm wrong.	gustavus	10.14767	9.794684	comment	4.0	18.0	1693923796	-8.943955
24545149	Does COBOL translate easily to more 	Does COBOL translate easily to more modern languages? Anything tricky or odd about it? I’ve never needed to use it.	azhenley	10.148429	9.788848	comment	4.0	27.0	1600705021	-8.934934
25175227	also, how does one learn COBOL nowad	also, how does one learn COBOL nowaday? it’s mostly a curiosity buy would be interesting to see what people that use it recommend	rantwasp	10.14776	9.794266	comment	4.0	12.0	1606023815	1.7327641
25282708	Close I think - the best language to	Close I think - the best language to use is the one you will have the easiest time hiring good talent for.  If you found a startup and all really love and are fluent in COBOL that's great but... good luck when it comes time to hire another employee.	munk-a	10.147554	9.781429	comment	4.0	15.0	1606948784	-5.7489257
25388269	The importance of the comments in CO	The importance of the comments in COBOL reminds me of a developer I worked with who was famous for removing comments to 'tidy up the code'The other developers then spent time readding the comments	fiftyacorn	10.147853	9.794364	comment	4.0	17.0	1607707922	-8.9959135
25389127	At least for me, I criticize from ex	At least for me, I criticize from experience: I worked with COBOL, and think it's an awful, unfun language, commonly used for unfun projects. And COBOL jobs don't pay particularly well where I live, either.> In my country and in Sweden it is quite easy to get good and stable job in banking/insurance/consulting businessYes, that much is true: a stable job in banking/insurance. Mostly maintaining clunky legacy systems. If that's what you aspire to, and aren't passionate about software -- which is perfectly fine! -- I guess learning some COBOL is a reasonable career choice.	the_af	10.147905	9.792109	comment	4.0	20.0	1607712317	1.7626157
38646818	I used to work at a large insurance 	"I used to work at a large insurance company with a COBOL core system. I completely agree with this. They paid for people who knew all the undocumented idiosyncrasies and foot-guns in the code. Not just ""Knowing COBOL"". A decent programmer could read a COBOL program and follow it.They wouldn't know that the reason the key export fell over when extracting data for your 10K filing because someone had decided/assumed/whatever that a certain record count would never go over 3000, so they hard coded the program to just error out if it went above that value."	Deprecate9151	10.14778	9.794363	comment	4.0	17.0	1702585774	1.7239647
38968099	> COBOL and PL/I are still pretty al	> COBOL and PL/I are still pretty alive for anyone working today on IBM and Unisys mainframes and microcomputers, regardless of bug fixes or new features.Are they alive by gumby's definition of alive?  Is anyone beginning new codebases in COBOL or PL/I, even on mainframes?	AnimalMuppet	10.1476965	9.794112	comment	4.0	12.0	1705068565	-8.982066
32513140	"> Rebol is pronounced ""reb-ol"".> It'"	"> Rebol is pronounced ""reb-ol"".> It's similar to ""rebel yell""So, like Ravioli without the last i. Raviol.I don't understand why developers go with these pronunciations. Clang is another offender. The obvious pronunciation was see-lang, but they went for clang, the word. That's insane."	copperx	10.154512	9.736599	comment	4.0	17.0	1660847033	-7.448704
32797933	This part sounds alluring to me:> “I	This part sounds alluring to me:> “It does exactly what you tell it to do on a line [of code],” explains Stuart. ”Sometimes you get files that are 2,000 lines long, but they’re easy to understand because they simply do what they say they’re doing at that line.”I don’t think COBOL is a good match for the programs I write in my spare time, but as a job it sounds nice. I guess the main problem if I were to find a job doing it would be the corporate culture at the kinds of companies that use it, but if I could do it remotely using my own workstation with any tools I choose I would do it.	AlbertoGP	10.148001	9.793989	comment	4.0	24.0	1662886004	-8.893127
38307851	I can build you a team using today's	I can build you a team using today's (quality: average B2B startup) programmers and today's methodologies that will write software for 40 years.It will just cost twice as much as the team that iterates quickly. It will cost more because I will spend more money on business analysis up front. I will spend more money writing automated tests. Most importantly, I will maintain my own toolchain and libraries or pay someone to do so. Every piece of software deployed will have someone accountable to my business to maintain it.It turns out that this is expensive. It's no more expensive than maintaining the COBOL code, mind you, and would likely give you better results than the equivalent COBOL code. Most companies will take their chances with less expensive software because that's what their compet	ebiester	10.147932	9.794493	comment	4.0	24.0	1700246003	-8.959948
38508859	"The flawed ""economic analysis"" in th"	"The flawed ""economic analysis"" in this article is so commonly brought out, but at this point we should just call it what it is: lying.There is no ""shortage of COBOL programmers."" Businesses are simply choosing what they will pay, and the market is responding appropriately. And this is also not just a case of naively shouting ""duh, just pay them more"" for a market that can't bear the increase in costs (i.e. some industries can only survive if there are available low cost workers - most of us aren't willing to pay $40 for a fast food burger, for example. Whether those industries should be around if they can only survive on low cost labor is another story...) It's not exactly like the financial world is scrounging for money. Businesses can either choose to pay their CEOs a hundred million or "	hn_throwaway_99	10.148081	9.790219	comment	4.0	12.0	1701624697	1.6650616
15430649	I would love for a few banks to dump	I would love for a few banks to dump all their old COBOL code on to GitHub. Not because it would necessarily be useful for anything, but simply because it would be fascinating to read... There is actually very little open source COBOL code available, of the massive quantities of COBOL code written over the decades the vast, vast majority of it remains closed source.Sadly I think a lot of it is just going to be lost to history... at an old employer of mine, I remember we had a store room full of old 9 track mainframe backup tapes – the mainframe had been retired and we no longer had a 9 track tape drive to read them with – I wonder if they are still there now – ideally they'd be sent to some sort of archive – they couldn't be released now without vetting because they would have contained co	skissane	10.147714	9.794388	comment	4.0	34.0	1507506354	-8.937435
15566062	Oh my God. I wasted a year of my lif	"Oh my God. I wasted a year of my life on a COBOL project. It is easily the worst language I have ever used. 
There is a reason that COBOL is a linguistic dead-end! Functions? Sensible limited variable scope? A decent approach to handling whitespace so that complex, nested branches make sense? COBOL doesn't even have these basics.Want to declare a variable? You're gonna have to type weird stuff like this: `07 GreatVariableName     PIC X(10).`Oh yeah, and the compiler cost me $3k (great job, Micro Focus), on top of the Solaris machine I had to buy to run it. (This project happened to use `mmap()` via FFI, so it had to run on a Unix machine...)Maybe I'm a bit bitter, but I will never touch another line of COBOL again."	maxharris	10.14778	9.7936735	comment	4.0	20.0	1509084183	-8.952544
15566331	I have regualr talks with people who	"I have regualr talks with people who were using COBOL a while ago.
There are things were cobol is good :1/ COBOL run in closed environments. This allows these to be rock solid.
   (no such thing as a dependency nightmare). You don’t have such a thing
   as different version of Java on your testing and production environment.2/ COBOL forces you to mix concerns : DB access, file I/O, business logic.
   This is sometimes useful to get a complete picture of what’s going on
   in a program. In Java, you have to wander through your DAO, data model,
   business logic, etc. which are spread everywhere.3/ Code resue is hard to acheve so there is some copy/paste. That is sometimes
   good in the sense that if you fix a program, you won’t accidentally introduce
   a bug in a copy of that program. (ma"	wiz21c	10.147871	9.794465	comment	4.0	14.0	1509088742	-8.911533
15566600	I have not used COBOL for 30 years b	I have not used COBOL for 30 years but the language deserves respect. The transition from assembler to COBOL was one of the biggest productivity improvements in the history of programming, comparable to the introduction of Java and VM-based programs in the 1990s.COBOL is still pretty efficient for tasks like scanning data on magnetic tapes--not that most of us do that any more. In fact it was pretty good for any problem that involved reading from or writing to storage devices because you could control the data layouts very precisely. It was great on reports for the same reason.  I even wrote a simple doc markdown processor in COBOL because the place I worked didn't have usable word processors and we needed something to do pagination and formatting of docs.I don't miss the verbosity or the 	hodgesrm	10.147724	9.794699	comment	4.0	24.0	1509092681	-8.936211
15566755	> But how complex can these programs	> But how complex can these programs be? Surely anything written before 1992-ish can’t involve that much code just because of the limitation of the machines they were designed to run on. What makes it that expensive that no one wants to rewrite them in a modern language?You would be utterly shocked.I did some COBOL work for a bank.Most of the new code they write is in C++.However, COBOL was still a huge part of their stack, and they still had several heavy duty mainframes that it ran on, and maintaining that was part of my job.For an example of how much COBOL was written back then, and how huge the technical debt to replace it would be:* The interbank transfer system alone was ~750,000 lines of COBOL.* It handled around 1.2million transactions every three seconds. That's not capacity, that	shakna	10.147784	9.793978	comment	4.0	22.0	1509094799	-8.926556
17334664	Hi, I worked on the C/C++ compiler f	Hi, I worked on the C/C++ compiler for zLinux, the COBOL compiler for zOS, and on the non-open-source version of Hercules.If you've got zOS and COBOL knowledge then Toronto is the place for you. IBM develops their zOS software in Toronto (well, Markham) mostly. At least the compilers, DB2, and parts of WebSphere.The other users are the major banks, and they're all headquartered in downtown Toronto. They're desperately looking for people with zOS and COBOL knowledge, I get plenty of recruiter emails for that despite not really having much COBOL knowledge.Honestly, if you apply for any of those jobs with even a passing familiarity of COBOL you're pretty much guaranteed. Also, welcome to the mainframe club!	CountHackulus	10.14783	9.791692	comment	4.0	13.0	1529274079	1.7757635
17341222	Unpopular answer: anything that's ab	Unpopular answer: anything that's about to become legacy. See COBOL programmers.	murph-almighty	10.147877	9.794504	comment	4.0	18.0	1529352083	-8.9635725
21289274	Have not dealt too much with COBOL b	Have not dealt too much with COBOL but learnt it a while ago. It was one of the easier languages to comprehend quickly. I thought it was well suited for input and data processing focused applications.I do remember thinking it's odd that a line has exactly 80 characters and putting an asterisk in the 7th or 8th row means the line is a comment.This is probably not true these days with modern COBOL.  But when I saw Python the first time, and that it enforces similar restrictions with intendation and then Golang following suite, I had to smile that such old concepts of enforcing style still are seen as useful today.Often we just have to go back and see what others have done decades ago to get new ideas!	kerng	10.14791	9.793769	comment	4.0	27.0	1571382561	-8.9412155
21376114	A fully graphical calculator app in 	"A fully graphical calculator app in Rebol is just a few lines of code. The formatting looks pretty legible at the below link if you scroll down a bit.REBOL [title: ""Calculator""]
view layout [
    origin 0  space 0x0  across
    style btn btn 50x50 [append f/text face/text  show f]
    f: field 200x40 font-size 20 return
    btn ""1""  btn ""2""  btn ""3""  btn "" + ""  return
    btn ""4""  btn ""5""  btn ""6""  btn "" - ""  return
    btn ""7""  btn ""8""  btn ""9""  btn "" * ""  return
    btn ""0""  btn "".""  btn "" / ""   btn ""="" [
        attempt [f/text: form do f/text  show f]
    ]
]https://easiestprogramminglanguage.com/easiest_programming_l..."	7thaccount	10.156008	9.733919	comment	4.0	17.0	1572264266	-7.926338
39188895	We have been able to largely get rid	We have been able to largely get rid of COBOL. Why haven't we been able to do the same with Javascript? It's a very useful language given the amount of existing code and support, but very few people I know actually like it.In the 90s, vendors seriously invested in major development suites (Visual Studio, Visual Age, C++ Builder, Delphi, Visual Basic) and improve languages (Java, C#, Pascal, Basic) for desktop environments. But the web development landscape is largely dominated by Javascript, which is actively hated, and Typescript, a better but far from great alternative, with everything else being a tiny percentage. What happened?	glimshe	10.148263	9.791153	comment	4.0	17.0	1706614588	-8.941924
39279896	Well you can run Hercules, the emula	Well you can run Hercules, the emulator.  But you will then discover that the mainframe 3270 terminal user interface experience is terrible.  A funny thing is this: there is a mainframe plug-in for Visual Studio Code.  The idea is you do your COBOL development in Code, and only the plugin actually talks to the mainframe.A decade ago there was an Eclipse version of this..This guy is showing all three ways:https://www.youtube.com/watch?v=_CYUYnKim7U	jhallenworld	10.147843	9.792429	comment	4.0	26.0	1707250453	-8.8498125
32821479	I've recently started messing with a	"I've recently started messing with a little cobol, the ""display/accept"" screen creation is really quite a nice method of developing a TUI.  It can be made amazingly quickly and changed quicker than most apps (See https://wmealing.github.io/simple-cobol-query.html for example).The GNUcobol implementation doesn't seem to support UTF-8 characters, that'd be awesome if it did, preventing even more awesome ""screen/accept"" input screens.My big beef that I have with the language is that there is third party ""extensions"" built right into the language, which is very frustrating when trying to understand as a new user."	worthless-trash	10.148028	9.79126	comment	4.0	12.0	1663053146	-9.001532
32913294	I think you're right about needing b	I think you're right about needing both the language part and the mainframe knowledge. When I worked in an enterprise with a heavy mainframe presence, the COBOL was divided into 2 parts: online (3270 and CICS) and nightly batch. All of it was on z/OS (formerly MVS) and largely made use of DB2 and some VSAM. To do anything useful in z/OS you need to be comfortable with JCL (Job Control Language) and it's fairly archaic. Traditional z/OS views files as 'datasets' on secondary storage. There are catalogued and uncatalogued datasets. In old-school MVS, when you create a dataset you have to pre-allocate it by specifying low-level storage slices like number of disk cylinders. This is the perspective of the traditional CKD/ECKD storage. It's probably been smoothed over somewhat over time, but I'd	neverartful	10.147864	9.793844	comment	4.0	12.0	1663688558	-8.9737425
31906904	Banks in Sweden are making a big eff	Banks in Sweden are making a big effort of recruiting, training and offering a viable career path for COBOL developers. A bunch of central systems still run like clockwork on IBM mainframes, why replace them?https://sebgroup.com/career/who-are-you/graduates-and-studen...	brtkdotse	10.148211	9.792952	comment	4.0	14.0	1656420198	1.7294939
31907544	> COBOL devs are a specialized niche	"> COBOL devs are a specialized niche these days and they get paid accordingly.In my experience the well paid COBOL devs are those with 20+ years of experience, often in one specific system, often bumped by being re-hired a bunch of times for the same position.  
I've been doing COBOL since 2018 and younger devs my age (late 20s, early 30s) with a few years of experience make decent money, but the average is bumped by the teams having a lot of devs near retirement age.If you want to learn:The language isn't very complicated. I'd recommend grabbing the Visual Cobol for Windows trial just to get coding (and then shunning anything MicroFocus when you are done ;) )
https://www.microfocus.com/en-us/products/visual-cobol/overv...If you want to/will end up tinkering with IBM systems, check out Jan"	tapland	10.147785	9.794278	comment	4.0	23.0	1656423685	1.8131075
31910495	as an outsider (and thus potentially	as an outsider (and thus potentially ignorant of pitfalls): I'm a big fan of the strategy to add transpilers to modern languages so that we can start writing new code in them, have them output COBOL, and then eventually have enough of the codebase written in the new lang to swap over to it instead.I'm thinking of the Elixir->COBOL like this: https://github.com/TheFirstAvenger/cobol_to_elixirWas speaking with the author about a year ago and he was having really good success with it.	masukomi	10.147909	9.792983	comment	4.0	12.0	1656437180	-8.919954
32405400	Java has reached the status of Cobol	Java has reached the status of Cobol - it is immortal because it is everywhere and has been around a long time.Because of that, there are a lot of Java devs.Our team works in Go, and so we get a few Java devs in once in a while as new positions open up.  The biggest change for them is to get out of archonaut mode and stop overdesigning everything.  After going through a 3-6 month cleanse, it's fun to see them complain about the legacy Java stuff and how overly complicated it is and how slow it is to build and test compared to Go.	tomohawk	10.148437	9.790675	comment	4.0	13.0	1660084359	-8.894624
22120525	Also see COBOL on Cogs, http://www.c	Also see COBOL on Cogs, http://www.coboloncogs.org/INDEX.HTM	dx87	10.147683	9.795133	comment	4.0	19.0	1579718235	-8.89321
22213813	It is a lot like COBOL, but oddly wi	It is a lot like COBOL, but oddly with more punctuation (probably because of the lack of consistent use of whitespace in Chinese). I think it may be a fun way to practice my 漢字.	microcolonel	10.1476755	9.793517	comment	4.0	21.0	1580598018	-8.9851055
35756192	i know a system that runs cobol.but 	"i know a system that runs cobol.but there are like 4 or 5 other systems on top of it, some of them use XML, some html, some asp, some java, some vba, some c#.i dont really understand the concept of a ""x language job"". like jobs tend to need people to learn systems and domain language, and be problem solvers, and communicators, coordinators, testers, the actual computer language is kind of irrelevant. like i cannot fathom there is a job out there where someone just hacks cobol all day and thats all they do."	fatneckbeard	10.147833	9.793296	comment	4.0	15.0	1682796133	-8.926775
35801449	Could LLMs help here to translate be	Could LLMs help here to translate between programming languages? Same with COBOL. Is a coding assistant the way to get legacy systems updated -- sounds like a consulting niche.	dpflan	10.147837	9.793279	comment	4.0	14.0	1683116331	-8.927386
35802076	Oh, they found COBOLs lost brother ;	Oh, they found COBOLs lost brother ;)	dangling42	10.14756	9.793622	comment	4.0	17.0	1683120130	-8.917858
35918716	Several decades old centralised tech	Several decades old centralised technology batch processing ALL CAPS messages in COBOL with a transaction time measured in days or weeks, a 10-15% transaction failure rate, no finality and exorbitant costs?	detrites	10.14783	9.794205	comment	4.0	25.0	1683910045	-8.955179
24080144	REBOL was such a fun language to use	REBOL was such a fun language to use. I wish it was open sourced earlier, then it might have made a larger impact. RED is a spiritual successor that deserves a look as well: https://www.red-lang.org/	soapdog	10.155331	9.73427	comment	4.0	27.0	1596793400	-7.444116
20217806	Actually I'd be surprised if they're	Actually I'd be surprised if they're even paying market rate for these developers, regardless of how difficult or impossible it is to find them.  COBOL programmers still make about $70,000/year or so (https://www.glassdoor.com/Salaries/cobol-programmer-salary-S...) even though the entire world is going to collapse if they disappear.  It would seem that the laws of supply and demand don't apply here.	commandlinefan	10.147831	9.794232	comment	4.0	23.0	1560888362	1.6846226
20455178	I had a contract about 10 years ago 	"I had a contract about 10 years ago for a major city's water department. The contract was to convert an internal application for customer billing, written in COBOL running on the mainframe to a web application backed by Oracle.When I started gathering requirements from the city's rep who was my point of contact I asked them for any documentation they had such as use cases, functional specs etc. All they could provide was the original COBOL source code bound up in those huge 17""x14"" binders; the one's that have the holes along each side from the old dot matrix printers with every other line having that faint light green background.Well I'd never seen COBOL in my entire live and I could only look at the code for about an hour before my eyes started to bleed. Fortunately I was able to get res"	0x445442	10.147763	9.795154	comment	4.0	16.0	1563322420	-8.957044
20894579	Although there is perceived demand, 	Although there is perceived demand, COBOL jobs pay very poorly.  Like $50K.Exception of course for consultants with a following, and customers that believe you have 'unicorn' skills.One advantage is the software stack is mature and not subject to fads and fashion.	bdavis__	10.14776	9.794355	comment	4.0	15.0	1567768050	1.738143
13611157	Honestly, I don't care whether I am 	"Honestly, I don't care whether I am driven over by a Porsche Cayenne or a Willys MB.And while I have not worked in the banking sector myself, lots of my friends did - and it was not cobol. They are catching up and they all know that their mainframe sw is dated and act upon it.I don't think the ""quality"" of the tech is of any relevance here.EDIT: Well, I actually know some guys who bit the bullet and learned cobol when they were just turning 20. By the time they turned 30, they did not have to work anymore."	jlg23	10.148027	9.793109	comment	4.0	13.0	1486675705	1.7195225
13909376	Ask HN: Is it worth becoming a COBOL	Ask HN: Is it worth becoming a COBOL engineer?	aktungmak	10.147855	9.794555	story	4.0	3.0	1489954711	1.8168095
13924119	I never quite understood why the tra	"I never quite understood why the transition from 1999-2000 should be a big deal for a computer system, until I learned about how COBOL works: it stores numbers as its string-representation unless told otherwise, and trying to store 100 in a field of two bytes will happily be stored as ""00"". Of course we had other bugs, with the same cause, well after the y2k-period."	janwillemb	10.148182	9.792838	comment	4.0	12.0	1490116089	-8.945066
14084098	"From the article ""Experienced COBOL "	"From the article ""Experienced COBOL programmers can earn more than $100 an hour""In Australia that's a lot, but my understanding is that it's common for American developers to be on way more than this..."	catmanjan	10.147936	9.792664	comment	4.0	21.0	1491873378	1.6960986
14084104	"""Experienced COBOL programmers can e"	"""Experienced COBOL programmers can earn more than $100 an hour when they get called in to patch up glitches, rewrite coding manuals or make new systems work with old.""Any contract-based engineer would charge that, or more, regardless of the language. Fortune 500 companies are happy to pay $300 / hour to a consulting company for engineering time."	kingnothing	10.147761	9.793866	comment	4.0	27.0	1491873447	1.7097481
14084081	The problem really isn't COBOL. COBO	The problem really isn't COBOL. COBOL is not a difficult language. It reads almost like English sentences. Any competent programmer would not be challenged by COBOL. The problem is all the glue. JCL, SNA, CICS, ISM, ISPF, etc.It's like the difference between Java (the language) and J2EE, except in the context of 1970s computer technology. It's not intuitive and not something you can really work through without a lot of training and experience.	ams6110	10.147808	9.794355	comment	4.0	57.0	1491873234	-8.999548
14085197	Best story I've heard is one of the 	Best story I've heard is one of the old programmers commenting his COBOL code in latin. It was a different time...	UweSchmidt	10.147864	9.794336	comment	4.0	15.0	1491890132	-8.947441
14482483	Cobol's legacy lives as PL/SQL, ABAP	"Cobol's legacy lives as PL/SQL, ABAP, and other enterprise data handling languages. While everybody is quick to point that this is not ""real programming"", they required astonishing amounts of engineering efforts to make things work.I would love to see a decent, modernized COBOL -- the same way they have modernized Fortran, so it is now a pretty decent numerical computing language. It would be a great hit."	atemerev	10.1475935	9.794709	comment	4.0	15.0	1496597185	-8.9423895
31229603	There is absolutely demand. I've bee	There is absolutely demand. I've been doing cobol for four years and have banks and insurance companies asking me to come in for an interview all the time.But no remote teams, no companies ready to offer any support for relocation and not a pay making a move worth it until I've built up some savings.I think the offers I've seen in Scandinavia are 35-40k/month for a dev with some  experience, and very slow wage increases.It's true there is a lot of demand, but it's not true that it pays a ton. The devs returning from  retirement with 20 years of experience with the specific systems can, and do, charge a lot though.	tapland	10.147826	9.793708	comment	4.0	20.0	1651446306	1.6803995
31262583	Yes. Some banks still run COBOL behi	Yes. Some banks still run COBOL behind the scenes here.	rglover	10.1480665	9.793071	comment	4.0	17.0	1651681373	-8.98961
28824699	This COBOL shortage myth has been ar	This COBOL shortage myth has been around since I was a kid.  It wasn't true then, and isn't now.The entire problem is that they don't pay well for what is supposedly a rare resource.  And nobody wants to learn a dead language for peanuts.Offer 500k/yr, and me and about 100 million other people will be learning COBOL starting tomorrow.	silisili	10.147675	9.794031	comment	4.0	14.0	1633926899	1.7305955
28824357	Not if they can’t find anyone willin	Not if they can’t find anyone willing to learn COBOL.There’s huge demand for developers on modern systems. Seriously, how much are you going to pay a developer to do mainframe COBOL - and is that developer going to produce commensurate value, really able to hold together a crumbling antique infrastructure?	ctdonath	10.147889	9.793591	comment	4.0	26.0	1633923121	1.6842722
28981296	The cost of running government on CO	The cost of running government on COBOL (h/t Cowen)	chkaloon	10.147572	9.793904	story	4.0	18.0	1635105077	-8.917084
29606819	Yeah, I have no idea why Rebol and R	Yeah, I have no idea why Rebol and Red aren't more popular.  ( https://www.red-lang.org/ )  They pack such a bang for the buck it's almost embarrassing for other language/runtimes.	carapace	10.155429	9.7343855	comment	4.0	12.0	1639850860	-7.430514
34408534	Who do you expect to use this?  As I	Who do you expect to use this?  As I understand it most COBOL use is on legacy mainframes that definitely aren't going to also be running .NET anytime soon.  When a company is hiring a COBOL programmer they aren't hiring someone to just sling code--anyone can learn the language--they're hiring someone who can parachute into decades old legacy systems with zero documentation, archaic and non-existent media (tape drives), wildly out of date systems and tools, etc. and instantly be productive.  Modern interop with this world is curious.	qbasic_forever	10.147927	9.794182	comment	4.0	22.0	1673923125	-8.938768
34946743	That's interesting. Must be hard to 	That's interesting. Must be hard to hire for nowadays. Then again, my friend says at least one government is still using COBOL!	andai	10.147568	9.792045	comment	4.0	16.0	1677428830	-8.916559
35011486	I have never written cobol, but I wo	I have never written cobol, but I wonder if there is a market for a COBOL transpiler to something like C#/Java/typescript, or even python would be a viable business?	mattnewton	10.147928	9.793307	comment	4.0	15.0	1677860158	-8.934211
16964548	Is it really better if we replace x 	Is it really better if we replace x million lines of COBOL with x million lines of java or c++?  What is the financial language of the future that is easy to write and reduces errors?	kristianp	10.147989	9.793356	comment	5.0	22.0	1525147948	-9.049304
16964612	Anyone have thoughts on how to go ab	Anyone have thoughts on how to go about learning mainframe programming and COBOL? Honestly seems like a useful skill given its existence everywhere but I don't think very many engineers (myself included) know where to start in learning it.	mcafeeryan92	10.147628	9.794723	comment	5.0	22.0	1525149290	-8.9438505
38509198	How hard is it to actually learn COB	How hard is it to actually learn COBOL? It seems like a fairly simple language to pick up, but maybe the idiomatic COBOL used in these legacy systems is particularly nasty for some reason.	matthewdgreen	10.147938	9.79255	comment	5.0	51.0	1701626628	-8.931509
34009801	I have been deeply fascinated by COB	"I have been deeply fascinated by COBOL ever since 1994. In 1994 I was looking at where to go to college, and the community college near the town I grew up had two ""computer"" associates programs. One was a program focused on personal computers, and one was a program focused on mainframes. The person I spoke to at the school told me, at the time, that as far as he could tell graduates of both programs got good jobs, but he never saw anyone cross from one to the other. Once the track was picked, the lives and careers diverged. He described the mainframe path as ""for going deep into the guts of banks, insurance companies, government and big big companies."" It was not a great pitch to give a 16 year old IMO.I ended up going to neither and went to a traditional CS undergrad at a 4 year state sch"	earino	10.147806	9.792672	comment	5.0	20.0	1671162287	1.7484539
28142227	There are plenty of ways to port out	"There are plenty of ways to port out of COBOL, none will work.I once interviewed for a COBOL position.  It was a typical large financial institution.  It was a lead position that wanted a migration plan out and then would lead to a team for me.  I have a lot of systems integration and information management knowledge.  I have worked on planning multi-year projects and migrating out of large systems like this before. 
 The interview went well, and afterwards they showed me around the place and what they were doing.I sat down again in the office with the hiring director, and I enquired about how long he has been with the company and what he has been working on.  Turns out he had been hired in five years ago and had already attempted this once before without success. I knew without a doubt wh"	cdumler	10.147852	9.793036	comment	5.0	32.0	1628691270	-8.95944
12902879	"I remember showing my ""systems analy"	"I remember showing my ""systems analyst"" brother-in-law my second year university schedule when I was planning which courses I would take that fall.""You don't have any Cobol, PL/1, OS360 Assembly Language or APL on here"", he observed.""I am going to focus on C, Unix and operating systems.  I want to write compilers for microprocessor based computers"".When he finished laughing, he called me ""unemployable"" and said, ""microprocessors will never be used for anything but toys.  Take COBOL!""Since then, I have made a point of not even looking at COBOL code.  I have been in the presence of COBOL, but have averted my eyes."	t1m	10.147821	9.793586	comment	5.0	32.0	1478631107	-8.916028
13012531	It's interesting how often we see th	It's interesting how often we see these articles (and associated discussions) saying that programming is harder than it should be, and that if only we had a better language, it would be much easier.In my experience, choice of language makes only a superficial difference to the difficulty of a project. The real challenge is always figuring out exactly what you're trying to do, and exactly how you're going to achieve it. And these questions aren't solved by a language because they're questions about your project itself, not about the implementation.Sure, some toolchains are better suited to some types of project - I would really not want to do serious number crunching in JavaScript, or an interactive GUI in COBOL. But there's generally at least one (and usually bogglingly many more) solid, f	taneq	10.147717	9.793915	comment	5.0	24.0	1479802460	-8.921704
13509384	C and C++ are dead like COBOL in 201	C and C++ are dead like COBOL in 2017	k4rtik	10.147798	9.794319	story	5.0	7.0	1485638035	-8.907684
27835426	REBOL was so far ahead of its time .	REBOL was so far ahead of its time ...	Bluestein	10.149231	9.779493	comment	5.0	25.0	1626282411	-8.74704
12091175	I think it's the bad kind of impress	I think it's the bad kind of impressive, one where ATMs still run COBOL.	mherkender	10.14785	9.794456	comment	5.0	23.0	1468460965	-8.923393
12097216	It's not that COBOL is particularly 	It's not that COBOL is particularly good or bad.  It's that COBOL-era database technology is painfully-obsolete.  Flat files, ISAM, and IMS are all pre-SQL, and old shops are likely to still be running some of that stuff. DB2 isn't too bad; it speaks SQL and runs on various platforms including Linux.With the older systems, the database update logic and the business logic are in the same programs.  This is not good.	Animats	10.147813	9.794248	comment	5.0	26.0	1468530898	2.8062866
22782427	I used to work on mainframe COBOL du	I used to work on mainframe COBOL during the Y2K times. While the language is easy to pick up and the OS specific things are not too hard, the style of programming can lead to issues. Typically, shared data structures are often stored in separate files called copybooks and they can be hard to track down. Most of the code is not in any source control repositories which means no one knows which is the actual deployed version.  It was all fun times then..	vaidhy	10.147937	9.794025	comment	5.0	38.0	1586043646	-8.9363785
22837891	Someone invent a COBOL to Python con	Someone invent a COBOL to Python converter to get rid of these old dinosaurs IBM Mainframes.	cable2600	10.148048	9.792982	comment	5.0	15.0	1586557158	-8.9224825
22840770	>> I don't want to sound condescendi	">> I don't want to sound condescending but why can't these systems be rewritten in a modern language?Cobol was a modern language 50 years ago. Python will be an ancient language 50 years from now. What do we do? Keep rewriting everything every 50 years?And those ancient Cobol codebases actually have a big advantage: they've been maintained for so long that all the major bugs have been virtually eliminated. Creating a new system from scratch means another 10 to 20 years of maintance until the new system reaches the stability of the old one.This is no joke. Given that most of the Cobol running today is running on mainframes at banks and card networks and the like, ""a new bug"" may translate to a few hundred thousand dollars of losses.There's no point in building a new house of cards every few"	YeGoblynQueenne	10.147938	9.794494	comment	5.0	18.0	1586599062	-8.913078
22841333	The IRS, treasury, and others locall	The IRS, treasury, and others locally are looking for COBOL programmers. I can explain why they're struggling to find any just by looking at the pay scale: $30,113 - $86,021 (GS-5 through GS-12, and most won't get the top end of the GS-12 scale). The $30K GS-5 starting is almost as low as working for their call center which is farcical.By contrast state, county, and even city government are paying $65K - $85K starting going all the way up to $100K at the top end. And these are jobs where you're doing modern development, not COBOL.People will start learning COBOL as soon as it makes rational sense. As it stands a lot of organizations aren't looking for any COBOL developer, they're looking for CHEAP COBOL developers. It doesn't make sense to learn when you'd lose money for taking those jobs.	Someone1234	10.147866	9.794139	comment	5.0	18.0	1586608542	1.6768978
22880931	The Inevitable Return of COBOL	The Inevitable Return of COBOL	nightfuryx	10.147483	9.793805	story	5.0	23.0	1586973794	-8.929832
23091089	I find it somewhat ironic that IBM i	I find it somewhat ironic that IBM is struggling so hard to find COBOL programmers to keep mainframe alive, but they also insist on locking down z/os to the point that you can't get access to a terminal unless you already know COBOL and work for an enterprise spending millions with IBM.You want nerds to flock to your platform, you have to give them access...	tw04	10.14831	9.790463	comment	5.0	24.0	1588774088	-3.9948316
23297347	Show HN: A Simple COBOL Game, TicTac	Show HN: A Simple COBOL Game, TicTacTOBOL	BasiliusCarver	10.146529	9.786775	story	5.0	23.0	1590375742	-8.91663
34045990	So much wrong with this and the arti	So much wrong with this and the article linked in first sentence.Just a few notes.To be pedantic, COBOL was invented by the Navy, mostly by GMH. And to call it dead is not consistent with the humongous body of code that keeps many large institutions afloat.And Fortran is very much alive in many scientific endeavors, including the amateur radio program WSTJX which implements various weak signal protocols such as FT8, WSPR, and JT 9. These are built by Joe Taylor, Nobel Laureate in physics for work on pulsars and their declining period due to gravitational drag. These protocols are useful in weak signal work such as amateur radio moonbounce.And SQL was not invented by oracle but by IBM.There are too many other flaws in both articles to list here. The definition of death here is suspect, and 	wglb	10.147786	9.793909	comment	5.0	27.0	1671407726	-8.950302
26491802	> COBOL programs have history. They 	"> COBOL programs have history. They were changed in '77 and then the change was reverted in '79 and then again in '84. Nobody really remembers why.I wonder how different it would be if they had a good source control system (and used it). Would you be able to look at the history and understand why the changes were made, or would you just get a bunch of commit messages like ""made update"" or ""reverted earlier change""?"	wtetzner	10.147857	9.794815	comment	5.0	19.0	1615991688	-8.949465
26719780	> “COBOL doesn’t present any securit	"> “COBOL doesn’t present any security problems because it doesn’t really talk to any resources,” Malik said. “It just says ‘read’ or ‘write.’”Can someone knowledgeable of COBOL expand on this? It sounds... not quite right, like it's missing some surrounding context. I feel like plenty of C's common security problems could be boiled down to ""just reads and writes""."	carols10cents	10.147823	9.790034	comment	5.0	17.0	1617761111	-8.944447
27074307	(I work in mainframes, but not direc	"(I work in mainframes, but not directly COBOL.) COBOL could certainly be done better today, but its strength comes from the fact that it limits what programmers can do with it.In the past, there was a divide between systems and application programmers. Roughly, the systems programmers took care about the details of the infrastructure and resource access, while the application programmers worried about the ""business logic"" of the applications.After the microcomputer revolution, new languages emerged and this divide was lost. ""Modern"" languages such as C or Java do not make this distinction. Today, programmers are supposed to be interchangeable, and they are supposed to work equally well on system infrastructure and application logic. I suspect it's partly the pride, because infrastructure w"	js8	10.147931	9.793917	comment	5.0	22.0	1620382866	-8.947735
15606867	This is what I like about Rebol & Re	This is what I like about Rebol & Red...pity Rebol didn't catch on more. The full Rebol download is a single executable (no real install) and can build GUIs, and so much more in a very small amount of code.	throwaway7645	10.169855	9.717245	comment	5.0	31.0	1509583252	-7.511844
29229704	I have retired some COBOL in my life	I have retired some COBOL in my life, I can’t say that my experience is universal, but here’s what happened during my time consulting for a Fortune 500 company sunsetting COBOL into Java (1.4).> If the systems are so vital surely there is a detailed specificationThis is hilarious, and wrong.  There probably is a specification somewhere, but there is drift between the implementation and the specification.  When that 4am bug pops up and stops processing a billion dollars worth of transactions because of a weird corner case, someone fixed that to get the system running again, did they update the master specification, maybe.  Half of the job is figuring out how the system really works, all the bugs, all the quirks, all the things that other systems have come to expect.Sunsetting is often a bug	ihumanable	10.148164	9.792608	comment	5.0	15.0	1636996388	-8.913938
29611075	Ask HN: Is anyone programming in mod	Ask HN: Is anyone programming in modern COBOL?	exdsq	10.147969	9.793816	story	5.0	12.0	1639884746	-8.919943
13862538	I thought that COBOL programmers wer	I thought that COBOL programmers were in great demand, for maintenance of old systems, and increasingly so as old programmers retire.	josh_fyi	10.14769	9.7941475	comment	5.0	15.0	1489440068	-8.914838
13971283	I've noticed that Red shows up on HN	I've noticed that Red shows up on HN with some regularity, and it sounds interesting.  But I don't really understand where it comes from or who it's meant for.  The Red / REBOL community seems more than usually self-contained, although it's possible that it's because almost everybody involved is Czech, and I am not.  It seems like most of the English-language resources for Rebol were written by one guy with a thing for really long website names like withoutwritingcode.com.	sevensor	10.154626	9.734259	comment	5.0	42.0	1490645594	-7.4278536
14083942	Cobol expert = $1,000 an hour rate. 	"Cobol expert = $1,000 an hour rate. Great niche, but eventually will get replaced.Awesome marketing and PR for his company Cobol Cowboys (http://cobolcowboys.com.> His wife Eileen came up with the name in a reference to ""Space Cowboys,"" a 2000 movie about a group of retired Air Force pilots called in for a trouble-shooting mission in space. The company's slogan? ""Not our first rodeo."""	nodesocket	10.147814	9.794165	comment	5.0	31.0	1491871732	1.7637103
14085147	Because COBOL is the PHP of the 60s,	Because COBOL is the PHP of the 60s, and mainframes are slow and expensive.Also, too many of the talents are stuck in a blocked I/O mindset somehow.Some are wizards though, writing assembly and making raspberry pi sized systems blazingly fast. OK a couple of raspberry pi:s	kpil	10.147844	9.794062	comment	5.0	19.0	1491889378	1.4276817
14482734	To like COBOL, you need to posess a 	To like COBOL, you need to posess a particular kind of rigid corporate mindset. I wonder whether it's fathers/mothers had the mentioned physic structure, or it was a fruit of 50's salaryman mental subjugation. No offense ment.	jxub	10.148037	9.79386	comment	5.0	16.0	1496600447	-8.936902
23460232	> I’m just not inclined to agree tha	> I’m just not inclined to agree that civil society can’t continue to run on millions of lines of COBOL for another 60 years. It certainly can.> Java 8 and Python 2 on the other hand are a far more serious threat. When systems can’t get off end of life technology they miss security updates, performance enhancements, and new features.This seems contradictory. Is it not also a problem that COBOL hasn't been getting security updates for years (I assume)? Are COBOL systems typically isolated from the outside world in some way?	_bxg1	10.147849	9.794017	comment	5.0	19.0	1591647008	-8.908397
20454655	My understanding is that part of COB	My understanding is that part of COBOL's longevity stems from its particular handling of fixed-point math being a specified requirement of various financial contracts. Odd to see this write-up not mention fixed-point math, actually.	fc_barnes	10.147834	9.794215	comment	5.0	29.0	1563317599	-8.895595
31224658	Ask HN: Is it worth to learn COBOL?	Ask HN: Is it worth to learn COBOL?	marcodiego	10.147813	9.793854	story	5.0	9.0	1651409830	1.7784983
36056703	> Almost all of this seems untrue (e	> Almost all of this seems untrue (except maybe the last one). I’ve worked at a variety of banks from front to back office across securities and private wealth. I’ve seen plenty of company-specific languages, plenty of C++, Java, perl, python but have literally never encountered a COBOL system.Two of Australia's four biggest banks – ANZ and Westpac – have historically run CSC Hogan. I don't know what they are doing as of today, but according to media reports ANZ was still using it in 2016 [0] and Westpac in 2019 [1]. Hogan is based on z/OS, CICS, COBOL. Not only is the vendor-supplied product code in COBOL, any customer ends up having to write lots of their own COBOL code to add customisations necessary for their environment. CSC – now DXC – has a replacement platform, Celiriti, which runs	skissane	10.148301	9.792544	comment	5.0	18.0	1684929022	-8.883988
34408546	I find COBOL to be a very interestin	I find COBOL to be a very interesting language, with a huge unexplored potential. For example, I'm sure that most people are not aware that COBOL has generics, method overloading, declarative error/exception handling, asynchronous messaging, etc.This stuff is usually not taught by the current COBOL vendors. It's also very unfortunate that most compilers are closed source and quite expensive to use.We're making a free and open source COBOL compiler to help improve the current state of the COBOL ecosystem. We hope that it will be production ready at some point.	KTSnowy	10.147713	9.794607	comment	5.0	23.0	1673923277	-8.978467
35011267	> How much COBOL code can run on a r	"> How much COBOL code can run on a regular Ubuntu machine?All of it. GNU Cobol exists, as do proprietary solutions from companies like Micro Focus that target the JVM and .NET (which is what you're looking for for a real COBOL solution).But why is it so important to run COBOL on Ubuntu? If you need Linux, create a Linux LPAR on your mainframe.> What's the package manager for OSS packages?COBOL code runs Western civilization. Not having muh NPM is a feature, not a bug.> You know you're in trouble when ""There's a syntax file for VSCode."" is the height of your modernity.Dude. COBOL has entire modern IDEs written for it."	bitwize	10.147863	9.794541	comment	5.0	26.0	1677859121	-8.899913
35011368	COBOL was actually in the CS curricu	COBOL was actually in the CS curriculum for my university, a fact that several of my friends brought up when the 'COVID is prompting a real need for COBOL programmers in light of the need to change benefits rules and unemployment!' stories were a regular feature on the nightly news.'You should do it, man!' Yeah, sure. I'd already suffered through the liquidation of my entire department in 2018, the prospect of the heat around COBOL dying down and facing that once again with the additional stain of 'oh, what've you been doing? Cool, popular JS frameworks? No, COBOL? Pass.' on my CV during my next round of interviews didn't seem at all appealing.That mentality should set the expectation for anyone looking into a COBOL job. It's not just this job, it's the next one.	benjaminpv	10.148169	9.7947	comment	5.0	24.0	1677859525	1.7270322
38864805	What if you are one of the only few 	What if you are one of the only few who know how to maintain a Cobol system for a bank? Aren't you very valuable?	DeathArrow	10.1479225	9.79343	comment	5.0	29.0	1704359335	-8.94897
15685067	COBOL and Fortran. Probably with som	COBOL and Fortran. Probably with some z/OS as well.Much of the world's financial systems run on it, replacing it is infeasible, but the expert's in this area are aging out (and many have retired more than once). But the tech still needs maintaining, and is difficult to work with.Fewer and fewer grad students seem interested in learning it, and the expectation that you'll stay and work on this stack for 20+ years is something that drives others away.	shakna	10.148016	9.787	comment	5.0	27.0	1510561258	-8.866461
16010971	Ask HN: Rebol/Red parse is great. Ha	Ask HN: Rebol/Red parse is great. Has it been re-implemented in other languages?	macmac	10.15483	9.734936	story	5.0	15.0	1514321807	-7.4031963
16664964	I have coded Solidity a bit, and it'	"I have coded Solidity a bit, and it's pretty obvious the language is not up for the task. I mean its 2018 and we have a brand new ""business language"" that can have overflows and stuff. It's like making all mistakes over again. Many problematic vulnerabilities and lost funds (e.g. parity freeze) is due to this language being not the right choice. If ""code is law"" we need a better language and not just tooling on top of a broken one.I don't know, how about Cobol?  I'm serious, that was designed as business language at least."	kerng	10.147987	9.794083	comment	5.0	19.0	1521867735	-8.884863
21288612	Interesting.  The problem of cobol i	Interesting.  The problem of cobol is that is verbose, like java. Type type and then type.  Copy and find all the time. Good luck to understand any as it takes a lot of time to read it.Do not like cobol or java.	ngcc_hk	10.147969	9.793731	comment	5.0	19.0	1571371906	-8.946598
32910954	Introductory-level educational COBOL	Introductory-level educational COBOL materials with modern tooling	mooreds	10.147718	9.794689	story	5.0	71.0	1663678290	-8.944091
36754631	I'm surprised that I haven't heard o	I'm surprised that I haven't heard of this line of languages before.The home page of Rebol, which it says it's derived from, seems to do a much better job at stating its purpose: http://rebol.com/	jomohke	10.153682	9.744181	comment	5.0	26.0	1689573411	-7.404843
25385474	Sometimes I wonder if I should learn	Sometimes I wonder if I should learn COBOL just so maybe I can get my first real programming job. (and no, I am not joking...)	speeder	10.147611	9.794017	comment	5.0	42.0	1607693455	-8.873244
25385878	The hatred comes from people like me	"The hatred comes from people like me, who have worked with COBOL and will tell you it's terribly frustrating to work with, needlessly verbose in multiple places where it doesn't need to be, and often used in banks for purposes which are the death of all you hold dear or interesting to work with.COBOL is not an interesting programming language these days, and you should not learn it unless you need it for your current job.> [COBOL was] designed, initially, for non-programmers to be able to describe in words what it is they would like to accomplish in a way they could be understood by the computer.Let me tell you a secret. It doesn't work for non-programmers. The complexity of ""Z = X + Y"" is no more or less than ""ADD X TO Y GIVING Z"", and bugs will happen at the same rate with either syntax."	the_af	10.14769	9.794395	comment	5.0	31.0	1607695615	-8.982374
36689723	As someone who worked on a 35 millio	"As someone who worked on a 35 million loc cobol and jcl system for several years in the late 90's, I don't find this to be funny at all. Cobol was purported to be readable with english language like syntax to make it more understandable. Giving gems such as:    MULTIPLY TAX-RATE OF STATE(43) BY BALANCE GIVING SALES-TAX-AMOUNT.

Note the period is sigificant."	throwaway1492	10.148283	9.792295	comment	6.0	42.0	1689128343	-9.011766
21289014	Oh man, I always wanted to learn mor	"Oh man, I always wanted to learn more about COBOL.  People like to crap
on the language, but this article makes it seem like it's not that bad,
actually.  I could see myself programming that, for a large sum of money
of course.With that said, the real COBOL code is probably much more horrifying,
when you consider, just how much uglier real-world code is compared to
small tutorials and review articles.  I would really like to read
a series of “COBOL War-Time Stories”."	ainar-g	10.147793	9.794696	comment	6.0	22.0	1571378005	-8.949972
21288048	COBOL turns 60: why it will outlive 	COBOL turns 60: why it will outlive us all	mindcrime	10.14755	9.7940235	story	6.0	37.0	1571364402	-8.960432
12096819	>There’s nothing wrong with the lang	>There’s nothing wrong with the language itself, the problem is that barely anyone knows it — at least not in the context of mainframe programming.What data did you use to determine that barely anyone knows mainframe COBOL? There are a significant amount of companies that still use it because it just works and they're in no need to upgrade to current technologies.	bitmapbrother	10.1477	9.795202	comment	6.0	27.0	1468526967	-8.949363
12097085	Not compeltely related to article bu	"Not compeltely related to article but I've often heard that banks argue that COBOL is more reliable and maintainable then any ""modern"" language.I've always wondered why this is the case. Is it because people are way more careful when entering code? The article points out that their IDE is connected to the Mainframe directly which makes me believe an error is much more severe. I'm more confident that the compile and unit tests can catch my mistake than I'm in my own coding skills (which is why I am not always afraid of changing tightly coupled systems). And even if worse comes to worse, i'd still be confident that some system will detect that change and roll back my commit before all goes south.With COBOLT (in such old environments), it seems that things must not break at any point so devel"	Matt3o12_	10.147705	9.7941885	comment	6.0	23.0	1468529476	-8.91831
28071096	Contemporary COBOL: Developers' Pers	Contemporary COBOL: Developers' Perspectives on Defects and Defect Location	Fragoel2	10.148008	9.786917	story	6.0	50.0	1628150759	-8.911018
28542646	> Cobol remains the language of choi	> Cobol remains the language of choiceSigh , those single liner  that both illustrate the ignorance and the status of the author.I’m an enterprise architect in banking , 6 month ago I was hired for  IT Transformation.My mission was very simple « move the bank the out of mainframe »In 2 weeks or so I presented a Kafka based runtime based with JVM contracts that would enable the bank to perform in a near real-time manner as opposed to « batch » processing while covering and simplifying 90% of banks related scenario ( SEPA , MasterCard , AML etc...)The project was accepted by directors but devs refused to go into that because much like the authors they are 30 years in the banks and don’t want to learn something else than what they know « cobol ».90% of our contractors work is spent dealing wi	asien	10.148269	9.792818	comment	6.0	22.0	1631731029	-8.914189
22840267	Here's some simple COBOL code:http:/	"Here's some simple COBOL code:http://www.csis.ul.ie/cobol/examples/Conditn/Conditions.htm    identification division.
    program-id. letters.
    data division.
    working-storage section.
    01  Char               PIC X.
        88 Vowel           VALUE ""a"", ""e"", ""i"", ""o"", ""u"".
        88 Consonant       VALUE ""b"", ""c"", ""d"", ""f"", ""g"", ""h""
                                 ""j"" THRU ""n"", ""p"" THRU ""t"", ""v"" THRU ""z"".
        88 Digit           VALUE ""0"" THRU ""9"".
        88 ValidCharacter  VALUE ""a"" THRU ""z"", ""0"" THRU ""9"".
    procedure division.
    begin.
        display ""Enter lower-case character or digit. No data ends."".
        accept Char.
        perform until not ValidCharacter
            evaluate true
                when Vowel display ""The letter "" Char &quo"	msla	10.147927	9.793643	comment	6.0	22.0	1586591290	-8.957289
26736326	Ask HN - should I build my new start	Ask HN - should I build my new startup around COBOL?  Or should I use a less proven language such as Python, Go, Rust ? /s	sgt	10.14808	9.794493	comment	6.0	34.0	1617869909	-8.977066
26737362	That was always my impression. But s	That was always my impression. But some thread on HN from yesterday a lot of people were saying COBOL salaries were very low, so which is it?	somedude895	10.148123	9.794229	comment	6.0	20.0	1617880407	1.7451339
27441327	I can see in the page that last PDL 	I can see in the page that last PDL release was on February, okay. Probably the presence of activity indicates that there are people using PDL, and more than that, maintaining it. Since PDL existed for many years, I would speculate that these people presumably didn't jump into PDL yesterday. There can very well be large codebases using it for a long time.All the comments suggesting that this somehow shouldn't be and that people should move away from PDL, are depressing in the way that, in a split second, years of effort and thousands lines of code that are probably doing good work are dismissed just like that.If a bank is still using Cobol, it is interesting and a testament to how a Cobol programmer can still make a good living on it. But if a scientist is using Perl to carry out calculati	aduitsis	10.149371	9.786902	comment	6.0	59.0	1623188756	4.323379
37992556	Having written some COBOL while cons	Having written some COBOL while consulting for a bank:The language is not interesting at all without the ecosystem, which is this fully flushed alien alternative universe of computation. If you want to dive into COBOL, don't try to run it on x86, get yourself a mainframe account.	SonOfLilit	10.147852	9.794435	comment	6.0	41.0	1698100615	-8.931979
38010416	Having worked for 20 years in fintec	Having worked for 20 years in fintech, I have seen many large European and Asian banks running on COBOL programs written 30 years ago, using EBCDIC. In many cases the sources for some of those programs are lost, due to the fact that proper version control systems did not exist at that time, and nobody dares to re-implement them because they are scared of regressions.	giamma	10.148795	9.791502	comment	6.0	27.0	1698221087	1.5403717
38023870	COBOL bridge for Node.js	COBOL bridge for Node.js	mooreds	10.147788	9.793266	story	6.0	47.0	1698316808	-8.942391
15430476	Get ready for a data dump of 40 year	Get ready for a data dump of 40 year old COBOL code /sBut in all seriousness, this is a great step forward in institutional software. Open up software to further progress towards standardizing an industry's software interface.	cbcoutinho	10.148045	9.7942915	comment	6.0	51.0	1507502965	-8.926155
20299768	One thing I really miss from mainfra	One thing I really miss from mainframes is their stability.Case a) Lots of years ago IBM changed CPU architecture on their System i. Every program we made was transparently recompiled to the new instruction set on first run, and just worked after that.Case b) Legacy technologies are taken very seriously. Decades old programs made in obsolete versions of COBOL can still be compiled without issues on the modern systems. No unexpected side effects, no new bugs, it just works. It provides a comfortable path to gradual upgrade.Case c) The tech stack builds upon itself, which means you can devote years to learn the stack and still enjoy the fruits of your effort for decades. You just have to keep up with the changes, not relearn everything every five years.Case d) The manuals and reference are e	ASalazarMX	10.14794	9.791044	comment	6.0	26.0	1561676504	-8.9205475
20455152	One of my last jobs as an intern in 	One of my last jobs as an intern in 2004 was to rewrite an old batch process COBOL app in C# and ASP.Net. App was basically input about 6 fields, and based up some rules.  It really wasn't terribly complicated, but I had to read the source to understand exactly what it did.  It was also my real exposure to COBOL.  Took me a while to realize that around 60 printed pages of the 80ish page program was nothing but hard coded data tables and rules, when this, then that, etc.  Once I realized that, it was a few simple regexs to pull that  and transform to xml (was early 2000s...).While decyphering the remaining logic, I discovered what I think is the most evil programming construct I've so far seen; think goto is bad? Meet MOVE NEXT SENTENCE. COBOL is traditionally written in all uppercase (and 	hermitdev	10.1478815	9.792895	comment	6.0	49.0	1563322112	-8.942237
20916177	Ugh? Many systems still run COBOL to	Ugh? Many systems still run COBOL today. Python 2 is likely to be around for a long time. Since the stuff is open source, wouldn't it be nicer if it was possible to fix a bug if needed? Not saying that it should be actively worked on. But maybe one person could be appointed to look over bug fix pull requests (which shouldn't be that frequent these days).	d--b	10.147884	9.7936535	comment	6.0	26.0	1568017312	-8.954642
14203786	Realistically, if, say, one of these	"Realistically, if, say, one of these big corps/banks with deeply-integrated COBOL systems spent a few years revamping their systems to something more modern and usable today, how much would it cost?Running mainframes isn't cheap. COBOL programmers aren't cheap. Not being able to improve these systems / innovate with them can cost the business a lot of time/money. And if we're talking COBOL, we're talking at least 25 year old corps.How long's the ROI on moving over? How expensive does the maintenance of antiquated systems get? It's easy to say that they're rock-solid and never need to be touched, but is that really true? For example, lot of banks today have a lot of absurd UX, often because of absurd internals and I know a lot of that usually is ""the system is ancient and nobody really touc"	scrollaway	10.148412	9.792003	comment	6.0	38.0	1493220584	-8.902079
37389644	Does anyone want to comment on why C	Does anyone want to comment on why COBOL has a reputation of being good for critical stuff? Are there technical reasons for this, or is that just branding?	tjrgergw	10.147801	9.794775	comment	6.0	19.0	1693906256	-8.899964
25176311	There’s a lot of that out there. I h	There’s a lot of that out there. I have avoided COBOL but I have seen stuff written in VB6/COM which was also in the same state. Eventually the one guy who knows anything about it leaves or dies. In the name of “progress” someone wraps it in something else and sticks a web API around it but everyone is afraid to touch that bit of VB code. Now a third party calls this and wonders why it takes 10 seconds for an HTTP API call to run and they can’t be issued in parallel or it throws a 500 error. Then the third party asks to send 20,000 of these a day and then finger pointing and stuff occurs at management level between both companies.I have been on both sides of this and it sucks. I came up with Rug Driven Development as a title. All the risks and future problems are swept under the rug quickl	qz2	10.147726	9.793177	comment	6.0	23.0	1606040009	-8.975169
32822513	Not a computer scientist, but surely	Not a computer scientist, but surely COBOL could be machine translated to another more modern language - or even a dialect of a modern language specifically created to make such a translation verifiably correct?	implements	10.147773	9.794201	comment	6.0	18.0	1663065031	-8.965837
24079170	REBOL Shell Interface	REBOL Shell Interface	bryanrasmussen	10.15299	9.75675	story	7.0	90.0	1596784153	-8.1368265
26426066	That's a good question!The reason gi	That's a good question!The reason given is it's getting difficult to find COBOL programmers and the platform isn't as agile as other platforms. I have to admit that IBM is working to make the platform more agile and you can do more than run COBOL - you can run Java and Linux on Z. I've been in IBM training sessions where I've been running Linux on Z and then running Docker on top of that and unless you had told me otherwise the experience was normal: you're running bash, running Docker and everything runs as you'd expect.BUT - the problem is the core of our system is written in COBOL. There's still CICS, JCL, Copybooks and DB/2 and those who can work with those technologies are now within 10 years of retiring and the new generation doesn't know them or have much of a desire to learn them. 	taylodl	10.147885	9.793268	comment	7.0	46.0	1615481325	-8.857298
35726415	Learning COBOL: A Journey for the Mo	Learning COBOL: A Journey for the Modern Programmer (2021)	rbanffy	10.147864	9.793279	story	7.0	114.0	1682594773	-8.8997965
12634931	The worst is, if you don't keep up w	The worst is, if you don't keep up with this, good luck getting a web job five years from now, you'll be the equivalent of a Cobol programmer. Can't get off the train.	Scarblac	10.147771	9.793865	comment	7.0	24.0	1475583041	-8.881224
12097442	The COBOL programmer shortage is sol	The COBOL programmer shortage is solvable if they simply pay people enough money. COBOL programmers do not make SV salaries, far from it. Yet the code they write generally is handling more critical tasks than most of the stuff SV startups are producing (bank balances, payroll, insurance claims, etc.)Though I found it to be stifling, I would work with mainframes again if the price was right.	ams6110	10.148051	9.791402	comment	7.0	52.0	1468533001	1.6574749
17301606	"It's a ""real"" language, it's just no"	"It's a ""real"" language, it's just not a terribly good or fast one. It's works decently when its use is limited to what it was made for: manipulating web pages. For anything else, the ""designed on the back of a used piece of toilet paper"" starts to shine through.And no, a JIT can't save you from this, it can only make things acceptable.That it can create ""real world value"" is an extremely low bar, which is passed by any turing complete language. COBOL creates ""real world value""."	arghwhat	10.147717	9.79402	comment	7.0	69.0	1528882769	-8.953372
17636270	The statement about Decimal being an	The statement about Decimal being an import is a garbage, misleading statement. Decimal IS PART OF THE STANDARD LIBRARY!!!! It might not be in the global context, but that is a far cry from having to install an external library which this article makes it seem like.Also, performance wise COBOL might be faster on a single machine, but good like trying to scale it out. Plus, a distributed architecture can make it easier to deploy software and hardware upgrades since you can generally take out a few nodes without bringing down the whole system.I’m not saying all this code should be rewritten. If you have some code out in the wild that works, you should always weigh carefully the risks in terms of cost and potential new bugs before doing a rewrite. However, lack of fixed point is a lousy excus	slaymaker1907	10.147804	9.7940235	comment	7.0	23.0	1532833075	-8.983773
17989671	Defusing COBOL Bombs with Smart Auto	Defusing COBOL Bombs with Smart Automation	mbellotti	10.146693	9.77948	story	7.0	74.0	1536950180	5.664871
29700938	What modern programming language is 	What modern programming language is the best replacement for COBOL	aks2161989	10.148098	9.794038	story	7.0	10.0	1640597244	-8.949598
26566963	There is regular news about how one 	There is regular news about how one COBOL system or the other has become unmaintainable and is causing problems. [1] If your hypothesis would be true this wouldn't be the case, as there would always be enough smart devs to learn COBOL and keep working on them.[1] example: https://www.bloomberg.com/news/articles/2020-04-13/an-ancien...	dtech	10.148089	9.793273	comment	7.0	26.0	1616592851	-8.890423
22788053	How hard would it be to automaticall	How hard would it be to automatically convert that COBOL to e.g. C++ or Rust? I suspect not that hard, since COBOL does not even have a heap afaik.	amelius	10.1476345	9.794792	comment	7.0	24.0	1586116131	-8.923687
14088303	I worked for years on the modernizat	I worked for years on the modernization of a critical banking infrastructure system. The problems are manifold. The biggest problem is overall architectural impedance mismatch - switching from a batch system (most of those old COBOL mainframe apps are batch systems) to a service-oriented architecture. This makes incremental replacement extremely difficult. But a cutover? On a system that moves more money in a day than the GDP of most countries? A failure could put the entire banking world in a tailspin, cause an economic crash.Next, there's a lot of business logic basically embedded in the COBOL, or even at lower layers. For example, lots of banking files are in EBCDIC, a different character set from ASCII. Except there are lots of different EBCDIC variants, and there's no good way to tell	beat	10.148166	9.793333	comment	7.0	34.0	1491922130	-8.900622
32912332	I have heard that a developer willin	I have heard that a developer willing to learn COBOL can land a massive salary.  Is this actually true?  What companies are hiring/looking for people and is there a place to get realistic numbers?	freedomben	10.147939	9.793705	comment	7.0	26.0	1663685043	1.6872723
31228767	Does anyone have confirmation for th	Does anyone have confirmation for the old rumour that there is high demand for COBOL engineers because of legacy systems eg in banks? And how does one go about finding these opportunities? I remember once talking to a freelance engineer, he didn't do COBOL but something similar in the sense that a lot of banks had legacy systems with that technology and that people had been saying since the 80's that it'd soon be extinct. He mentioned a (paid) database service which he used to source his clients, he was based in Germany, as were most of his clients. Anyone have an idea what that could be?I'd totally be down for learning an obscure language and deep-diving into sensitive systems that have been providing value for a long time already. But basic economic logic tells me that there won't be a f	t_mann	10.147998	9.793361	comment	8.0	43.0	1651439970	1.6129873
35011856	I have seen the COBOL issue come up 	I have seen the COBOL issue come up a number of times, and I just don't get it. Am I thinking about this wrong?COBOL seems to be a straightforward language by modern standards. Any programmer with experience with imperative languages should be able to pick it up. Learning the language itself cannot be a real barrier.The barrier seems to be the enormous amount of legacy code that has to be digested and understood. But wouldn't that barrier be pretty much the same regardless of the programming language. I mean, if it were 800 billion lines of Perl code, would that make the problem any easier?So isn't the real problem that we have 800 billion lines of legacy code that needs to be understood and maintained; it just happens to be written in COBOL?	BlandDuck	10.147849	9.793893	comment	8.0	32.0	1677861634	-8.885027
17335117	Ask HN: Why COBOL is not hip anymore	Ask HN: Why COBOL is not hip anymore?	maxpert	10.147675	9.792761	story	8.0	4.0	1529281063	-8.992704
18716664	Ask HN: Why did people switch from C	Ask HN: Why did people switch from COBOL to newer languages?	asdfman123	10.147849	9.794792	story	8.0	13.0	1545236201	-8.974371
22782336	How hard is cobol to pick up and lea	How hard is cobol to pick up and learn at the level needed to contribute? I'm sure there are many no longer employed programmers in the tri state area that might be able to help	vikramkr	10.147719	9.794198	comment	8.0	49.0	1586042714	1.723589
22785548	Serious question: Should I learn COB	Serious question: Should I learn COBOL in 2020-0?	maallooc	10.147641	9.794322	comment	8.0	27.0	1586095061	-8.927065
22838070	Just put the entire COBOL source cod	Just put the entire COBOL source code on the github and let us rework it in the Java or C# and be done with this abomination.	newprint	10.14778	9.794676	comment	8.0	28.0	1586558346	-8.917837
34000077	Maybe it's the type of companies I'v	Maybe it's the type of companies I've worked for but I have never seen cobol. Anyone know where it's used most?	4RealFreedom	10.148103	9.792703	comment	8.0	53.0	1671114946	-8.936126
26718716	The language is fine: It's the ecosy	The language is fine: It's the ecosystem that's not.Nobody in the top 50 CS programs worldwide teaches COBOL. Most of the COBOL programs run on mainframe where it's at least a few k$ to even get a look at the documentation or hardware. So nobody bothers with it.And most (older) programs don't folow modern conventions either. Custom application specific databases? Check. Lost source code/incomplete? Check. No version control? Check.And most folks running these programs are in orgs that are chronically underfunded anyways.	908B64B197	10.147668	9.7938175	comment	8.0	48.0	1617752284	-8.948835
26732603	I'm just imagining the level of jaw 	"I'm just imagining the level of jaw dropping and brain exploding that would have gone on had that same headline been published in 1998.Obviously at this point almost three decades into the internet era no one really cares. We all know that ""somewhere"" old COBOL code is running, but in practice the companies managing the bulk of data for society didn't even exist before Y2K.  Everyone with unmaintainable COBOL has long since migrated to really bad Java code instead.But... yeah.  Linux is now an official heir to the S/360.  We've made it.  Finally."	ajross	10.147773	9.794212	comment	8.0	31.0	1617836023	-8.8965025
38276518	COBOL for GCC Development	COBOL for GCC Development	pantalaimon	10.147754	9.794284	story	8.0	72.0	1700055861	-8.901548
38306854	Worked with a guy ten years ago that	"Worked with a guy ten years ago that would obsessively read these reports from the Pentagon. Here's a couple of his stories about the matter: https://www.reuters.com/investigates/pentagon/ and https://www.reuters.com/investigates/special-report/usa-mari... (very old and I apologize for my horrific javascript at the time.)It sounds like nothing has changed. Relevant to this crowd, maybe: ""Most of the Cobol code the Pentagon uses for payroll and accounting was written in the 1960s, according to 2006 congressional testimony by Zack Gaddy, director of DFAS from May 2004 to September 2008.""""Wallace, the Army assistant deputy chief of staff, says the system has ""seven million lines of Cobol code that hasn't been updated"" in more than a dozen years, and significant parts of the code have been ""co"	MrMetlHed	10.145305	9.78792	comment	8.0	126.0	1700242285	4.772458
23670819	On COBOL	On COBOL	MindGods	10.147768	9.793672	story	9.0	52.0	1593368158	-8.941653
20891075	Cobol Web Development	Cobol Web Development	gscott	10.1478405	9.79428	story	9.0	105.0	1567721114	-8.945238
16420959	The Beauty of the COBOL Programming 	The Beauty of the COBOL Programming Language	Caveman_Coder	10.147693	9.7946615	story	9.0	43.0	1519140130	-8.936298
22691622	There are a few things present in CO	"There are a few things present in COBOL that I would like to see lifted into more modern languages. One is the use of the full stop as an expression terminator, as in English, instead of the semicolon. Another is the whole ""picture"" mechanism for number formats.More languages should also steal Verilog's use of _ as an optional digit separator. It's just arrived in C# 7."	pjc50	10.14781	9.794255	comment	9.0	31.0	1585212412	-8.936557
38306912	Start paying 250k a year for cobol d	Start paying 250k a year for cobol developers and the problem fixes itself really fast. That or start migrating the system. Or more likely they keep using it until it completely breaks and then run to the government for a big handout to fix it.Easy to be irresponsible with other peoples money.	bogota	10.147583	9.793429	comment	9.0	68.0	1700242515	1.7065816
14084517	Been working on accounting systems i	"Been working on accounting systems in RPG and COBOL since ~1992.  I also know C/X86ASM/Pascal/Delphi/VB/Fortran.  Never bothered with C++ that much; played with Java a bit but Oracle irritates my bowels so moved away from that.As mentioned in the article it's good work; but it is also not easy work.  You tend to go through cycles of being pushed out to brought back under extreme emergency at any costs to get stuff working.  Only for the cycle to repeat.  Companies never think of the old guys as the ones to implement the new system - that's a job for the ""enterprise experts"" - I can't even keep track of how many ""rewrites"" I've seen in my life fail because of this.We are the dinosaur club; but it's a club that pays extremely well (high 6 figures a year without working too hard if you are ta"	sanguy	10.149295	9.788134	comment	10.0	142.0	1491879771	1.7321937
14203326	The idea that large corporations are	The idea that large corporations are simply going to move on from COBOL is out of touch with reality. It really can't be overstated how deeply old COBOL programs are embedded into these corporations.  I worked for one that had been using them since the language itself was created, and while they all could see the writing on the wall, the money to do the change simply wasn't there.  Not only would they have to do a code change, they would also have to do a hardware change because all of this is running on mainframes.  Not only does this cost a lot of money, but it would also take an enormous amount of time.  What mid-level manager is going to stick their neck out and push for this?  What exec is going to ignore the guaranteed transactions that a mainframe and a decades-old COBOL program can	shepardrtc	10.147848	9.7936735	comment	10.0	73.0	1493217444	-8.977218
31227251	COBOL Programming Course	COBOL Programming Course	marcodiego	10.147795	9.793944	story	10.0	103.0	1651428461	-8.925054
36056461	The idea that COBOL is at the heart 	The idea that COBOL is at the heart of bank systems is a persistent myth that gets published every now and again alongside some story about how essential these systems are, how they can never be replaced and how the people maintaining these systems are a dieing breed.Almost all of this seems untrue (except maybe the last one).  I’ve worked at a variety of banks from front to back office across securities and private wealth.  I’ve seen plenty of company-specific languages, plenty of C++, Java, perl, python but have literally never encountered a COBOL system. There’s one system at one of the banks that I was a contractor at which may have been COBOL I’m not sure. I didn’t work directly on it and it ran on a Tandem.I’ve never worked for a pure retail bank so it’s possible that some pure retai	seanhunter	10.148164	9.792088	comment	10.0	41.0	1684927327	-8.898683
28824002	Seeing stories like this makes me wo	Seeing stories like this makes me wonder if we'll ever see a company actually go bust based purely on the instability of its decades-old, duct-taped architecture.I have a relative who works for a large credit card processor running on mainframe systems and I hear over and over again that they're all retiring and unable to fill the newly opened roles. This problem is compounded by the fact that their offshore contracting firms are cutting back on providing COBOL resources because there's a lot more money in supplying java/.net/etc. devs. The work culture there sounds so unsustainable and yet they're one of the largest payment processors in the country. If they were have widespread stability issues like this, things could get interesting.	thr0wawayf00	10.1495695	9.779883	comment	10.0	90.0	1633919328	0.9783106
37277191	COBOL gets new life in the cloud tha	COBOL gets new life in the cloud thanks to Watsonx and AI	rmason	10.147979	9.792758	story	10.0	41.0	1693086224	-8.904481
31907504	You think that those people are gett	"You think that those people are getting paid the big bucks because they know COBOL, but the reality is that they are getting paid the big bucks because they have decades of experience with all the legacy systems that surround that COBOL.Learning COBOL, even in a ""real"" environment, isn't going to be the jumpstart that you're hoping for by itself."	jhugo	10.147779	9.794371	comment	10.0	72.0	1656423430	1.7757895
21371535	I have noticed that business folks r	"I have noticed that business folks roll their eyes when ""tech debt"" comes up.  I sympathize, as it didn't used to be that way.  COBOL on a mainframe would remain current for decades. Tools and languages are very fragmented these days. I recently tried to get a popular node.js app (tech radar) up and running, but npm just kept bombing out on abandoned packages. The project is 2 years old and already ""debt ridden"".Funny, because it's all client side/ browser JavaScript. Node isn't really needed, but that's the toolchain.  So it's borked for no good reason."	tyingq	10.150238	9.7731	comment	10.0	53.0	1572201070	-14.063808
30552656	COBOL: A 1959 Idea and 2022 Technolo	COBOL: A 1959 Idea and 2022 Technology	rbanffy	10.147785	9.7914	story	10.0	35.0	1646387972	-8.958742
26718998	I can’t wait until the Kubernetes/co	I can’t wait until the Kubernetes/container/Microservice beasts we are building today become legacy in 20 years. Fixing a COBOL application will probably look simple in comparison.	spaetzleesser	10.147781	9.793634	comment	10.0	77.0	1617754538	-8.906993
27048358	A Historical Perspective on COBOL (2	A Historical Perspective on COBOL (2020)	omrjml	10.146787	9.792907	story	10.0	61.0	1620211996	-8.932069
38306942	Of course, devil's advocate would po	Of course, devil's advocate would point out COBOL in 60s was written with a lot more focus on lasting in general. They didn't largely have the same general attitude of 'we iterate quickly with our script kiddies' as is prevalent today.Not that all software from then was wonderful. Or that COBOL magically guarantees great code.But, on the flip side, you can't say the code base isn't battle-hardened (to various literal degrees).* edit: corrected sp	uticus	10.147811	9.793679	comment	10.0	56.0	1700242616	-8.924201
36055986	Shortage of COBOL developers in insu	Shortage of COBOL developers in insurance and banks	gregoire_g	10.14774	9.793721	story	11.0	27.0	1684923271	1.7308168
18138254	The IT 'cowboys' didn't ride into su	The IT 'cowboys' didn't ride into sunset.They were fired by banks which are/were stupid enough to cut corners on people who know things about their infrastructure before migrating to more modern systems.FTA:>One COBOL programmer, now in his 60s, said his bank laid him off in mid-2012 as it turned to younger, less expensive employees trained in new languages.>In 2014, the programmer [...] was brought in as a contractor to the same bank to fix issues management had not anticipated.Also FTA:>Accenture’s Starrs said they go through a “black book” of programmer contacts, especially those laid off during or after the 2008 financial crisis.>The job ultimately took five years and cost more than 1 billion Australian dollars ($749.9 million).So, in short: a bank fired some old people to pay a billio	romwell	10.148961	9.783356	comment	11.0	90.0	1538643853	1.5545497
18139659	Which is a bad attitude in general, 	Which is a bad attitude in general, but an especially bad one for an industry known to use exceedingly old tech.In all honesty: why is COBOL so prevalent in the finance sector? It can't seriously be SO GOOD as to be completely un-replacable?	FussyZeus	10.148035	9.793507	comment	11.0	36.0	1538659727	-8.898276
28464359	I am suspicious about the alleged pr	"I am suspicious about the alleged problem finding people willing to work with COBOL.Generally, if it's crucial for the business, the lever you pull is increasing compensation until the market responds.  That's how you influence willingness. People are willing to do much dirtier jobs given enough money.""But we need someone who is not only willing but able,"" they say, meaning they want someone with many years of experience with the language.These same companies did not invest the time or money to train future maintainers in the language or make it worth their while to accumulate that experience. Guess what happens when you don't invest that money up front? You pay for it dearly later on.So it's either an impossible situation of their own making, or those elusive COBOL programmers are out the"	jawns	10.14774	9.792156	comment	11.0	68.0	1631144080	1.7453021
22787828	The governor of NJ went live on TV t	The governor of NJ went live on TV to request COBOL programmers	saadalem	10.147635	9.794037	story	11.0	59.0	1586114560	1.7678722
38509082	The article title is clickbaity, but	The article title is clickbaity, but the actual point is the proposal of using LLMs to translate large amounts of legacy COBOL systems to more modern languages like Java. Doesn't seem terribly useful to me. I expect you could get a 90% solution faster, but the whole challenge with these projects is how to get that last bit of correctness, and how to be confident enough in the correctness of it to actually use it in Production.But then all of this has been known for decades. There are plenty of well-known techniques for how to do all that. If they haven't actually done it by now, it's a management problem, and no AI tech is going to fix that.	ufmace	10.147808	9.794137	comment	11.0	100.0	1701626007	-8.9483385
23799043	The problem might not be COBOL	The problem might not be COBOL	earthboundkid	10.147602	9.794245	story	12.0	64.0	1594435849	-8.95884
24856448	The persistence of COBOL: why a 60-y	The persistence of COBOL: why a 60-year old language is still in demand	rbanffy	10.1473875	9.789422	story	12.0	32.0	1603361347	-8.9187
26734721	GnuCOBOL – a free/libre COBOL compil	GnuCOBOL – a free/libre COBOL compiler	pabs3	10.14784	9.794086	story	12.0	122.0	1617851779	-8.983086
15191012	Release of GnuCOBOL 2.2	Release of GnuCOBOL 2.2	rbanffy	10.147955	9.793594	story	12.0	120.0	1504785871	-8.903937
15194283	Does anyone knows a job board for pe	Does anyone knows a job board for people interested to work with COBOL?I have been interested in this language for quite some time, moved to a different country just to try to find a job where I could learn more about it and build up a career, unfortunately the city that I chose doesn't seems to be have many offers. Most of the jobs require several years of experience doing low level programming, and although I work with system programming languages (C++, Go) I don't have relevant experience working with COBOL which seems to be killing my opportunities.It's like the chicken or the egg causality dilemma, I want a COBOL job but everyone requires someone with relevant experience, but how can I get experience if no one hires me to work with COBOL? LOL — I am willing to take a junior-intermedia	guessmyname	10.14786	9.792323	comment	12.0	50.0	1504807554	1.7610043
14482678	Dijkstra said it best in 1975: https	Dijkstra said it best in 1975: https://www.cs.utexas.edu/users/EWD/transcriptions/EWD04xx/E...And before you get angry at me, answer this simple question: have you actually ever used COBOL? I spent a year of my life translating a COBOL mess into Delphi. It was horrible - the code I was working with had no functions (unless you think of a module defined in an entire file as a function), global scope on variables, and tons of ugly COBOL boilerplate, as dictated by the language.And it's no surprise that COBOL was a historical dead-end. Unlike FORTRAN and Lisp, it begat nothing.That's why I'm hard-pressed to venerate anyone that had anything to do with perpetuating that mess.	maxharris	10.147625	9.794617	comment	13.0	65.0	1496599772	-8.989243
29221877	Why and how COBOL is still used	Why and how COBOL is still used	rbanffy	10.147648	9.793288	story	13.0	121.0	1636933488	-8.926613
29229378	I have to admit that I don’t fully u	I have to admit that I don’t fully understand why COBOL is so difficult to replace. If the systems are so vital surely there is a detailed specification and writing in an easier to maintain language would repay the effort?Is it just that there is so much COBOL and it’s not worth the effort?Edit : thanks for all the great replies - HN at its best!	klelatti	10.147927	9.794458	comment	13.0	57.0	1636994657	-8.909378
21288415	The Beauty of COBOL (2018)	The Beauty of COBOL (2018)	fortran77	10.147499	9.793782	story	13.0	100.0	1571369440	-8.961348
22519924	REBOL Oneliners	REBOL Oneliners	damir	10.150471	9.778116	story	13.0	116.0	1583695063	-8.618329
27319307	Ask HN: Mainframe developer resource	Ask HN: Mainframe developer resources/communities recommendations	dtlee	10.147949	9.794677	story	13.0	5.0	1622229024	-8.930839
25386109	Its awful that most people here are 	"Its awful that most people here are criticizing COBOL, yet they don't even know it, but they just ""heard bad things about it"".In my country and in Sweden it is quite easy to get good and stable job in banking/insurance/consulting business with Cobol on Z/OS.Salary is around 10-30k PER MONTH. Around 3x more then in let's say Java."	hansor	10.147874	9.793705	comment	13.0	87.0	1607696694	1.7165595
38646263	> I can only imagine the fat paychec	"> I can only imagine the fat paycheck a 20-year old mainframe programmer would get though, because your age in this case would be invaluable.It's funny, people frequently assume this would be true but reality doesn't really bear this out. It's typically pretty average to even below average which contributes to the talent pipeline problem.The other side of it is that its not the technical stuff like ""knows COBOL"" that is so immensely valuble. Any average dev can ""learn COBOL"" but that's not actually the valuable thing. The anecdotes of COBOL programmers coming out of retirement for 500k/yr contracts has little to do with COBOL, but their accumulated institutional knowledge of the giant ball of business logic encoded in that COBOL.If these banks and other institutions actually did write fat "	ptmcc	10.147924	9.79303	comment	13.0	58.0	1702583089	1.7782977
26717088	An Apology to COBOL: Maybe Old Techn	An Apology to COBOL: Maybe Old Technology Isn’t the Real Problem	rbanffy	10.147123	9.792263	story	14.0	160.0	1617741400	-8.9087715
26726100	Learning COBOL: A Journey for the Mo	Learning COBOL: A Journey for the Modern Programmer	jdcaballerov	10.1475	9.793422	story	14.0	106.0	1617808477	-8.9228115
18110054	Do You Know Cobol? If So, There Migh	Do You Know Cobol? If So, There Might Be a Job for You	jkuria	10.147656	9.794044	story	15.0	33.0	1538368233	1.77197
28141289	What if we could transpile COBOL int	What if we could transpile COBOL into Elixir	cgarvis	10.147858	9.793846	story	15.0	58.0	1628685625	-8.9159975
28299573	Kobol Team Is Pulling the Plug from 	Kobol Team Is Pulling the Plug from “Helios64 Open Source NAS”	nixcraft	10.148895	9.773646	story	15.0	118.0	1629884553	-8.917281
22782782	I was sort of tempted to pursue this	"I was sort of tempted to pursue this. I did a few years in the salty COBOL mines back when I was a PFY about 20...plus years ago. This niche probably hasn't moved very much since then and I could probably recall most of it after a few hours. I'm freelancing right now anyway and some other projects just vaporized.But.A quick skim of the postings is finding that what they're really screaming for is somebody who's been familiar with their particular pile of toxic waste for at least four years at minimum. They're asking for people with 4+ years of COBOL, and JCL (ok, fine), and DB2, and VSAM, and ""SDLC"" (proto-waterfall), and, oh yeah, a four-year degree.Heck, there's a posting asking for somebody to draw diagrams and document their existing processes, and for that they expect you to have 10 y"	thaumaturgy	10.147833	9.794771	comment	15.0	130.0	1586047742	1.7629617
26475331	Why COBOL Isn't the Problem	Why COBOL Isn't the Problem	Addono	10.147556	9.794326	story	16.0	75.0	1615893870	-8.913986
28541465	Has anyone ever actually met a COBOL	Has anyone ever actually met a COBOL programmer? It seems like the teachers tale of someone cracking their head open while swinging on their chair - presumably they exist but there can't be that many of them?	mhh__	10.147768	9.793921	comment	16.0	60.0	1631724769	-8.916712
33999718	How popular is COBOL?	How popular is COBOL?	mikece	10.146014	9.80226	story	17.0	67.0	1671113457	-8.924694
12901506	Micro web-framework for COBOL	Micro web-framework for COBOL	mpweiher	10.147706	9.7944355	story	18.0	147.0	1478622306	-8.9412565
22837896	COBOL can be a real pleasure to use.	COBOL can be a real pleasure to use.For instance, it allows programmers to quickly create user interfaces by declaratively describing them, in a so called SCREEN SECTION.The resulting interfaces are very efficient for text entry, and allow users to quickly get a lot of work done. The interaction is so much more efficient than what we are used to with current technologies that it can barely be described or thought about in today's terms.Regarding the underlying theme of legacy systems, here is an interesting presentation by Jonathan Blow, citing various examples of earlier civilizations losing access to technologies they once had:https://www.youtube.com/watch?v=pW-SOdj4KkkI think in terms of user interfaces, we are on a downward path in several important ways, and I highly recommend checkin	triska	10.147704	9.794583	comment	18.0	136.0	1586557174	-8.91277
22888170	Cloudflare Workers now supports COBO	Cloudflare Workers now supports COBOL	jgrahamc	10.148824	9.79034	story	18.0	276.0	1587034926	-8.898324
23189918	WebAssembly COBOL Pong	WebAssembly COBOL Pong	ColinEberhardt	10.147782	9.794562	story	18.0	181.0	1589529353	7.182897
32735411	My Surreal Experience with COBOL	My Surreal Experience with COBOL	gioaranzulla	10.14733	9.79336	story	21.0	34.0	1662462197	-8.928323
32793428	COBOL’s youth culture	COBOL’s youth culture	ohjeez	10.147192	9.795128	story	21.0	119.0	1662835653	-8.970486
34407924	Show HN: Otterkit – COBOL compiler f	Show HN: Otterkit – COBOL compiler for .NET	KTSnowy	10.147827	9.793354	story	22.0	192.0	1673918007	-8.92424
28539391	COBOL – Still standing the test of t	COBOL – Still standing the test of time	isaacfrond	10.147543	9.794712	story	22.0	66.0	1631715774	-8.916361
37388560	Learn COBOL in a day	Learn COBOL in a day	eddtests	10.147484	9.793296	story	23.0	83.0	1693895709	-8.915765
14482132	Jean Sammet, co-creator of COBOL, ha	Jean Sammet, co-creator of COBOL, has died	andrewbinstock	10.147393	9.793997	story	24.0	429.0	1496591721	-8.973307
35002143	COBOL: Thinking about it wrong	COBOL: Thinking about it wrong	rbanffy	10.147463	9.795516	story	24.0	69.0	1677791523	-8.91393
25148840	COBOL underpins the entire financial	COBOL underpins the entire financial system	chaosdesigner	10.14759	9.794208	story	24.0	195.0	1605789286	-8.944273
25384846	GnuCOBOL 3.1.1	GnuCOBOL 3.1.1	rhabarba	10.148303	9.792887	story	27.0	173.0	1607688403	-8.920732
20454204	Cobol Still Powers the Global Econom	Cobol Still Powers the Global Economy	psim1	10.1476965	9.794612	story	28.0	256.0	1563313667	-8.940593
22837753	COBOL programmers answer call	COBOL programmers answer call	furcyd	10.147701	9.795126	story	28.0	320.0	1586555965	-8.9459305
38508250	Watsonx: IBM's code assistant for tu	Watsonx: IBM's code assistant for turning COBOL into Java	Anon84	10.147948	9.794008	story	29.0	127.0	1701621091	-8.9533205
17636029	Is Cobol holding you hostage with Ma	Is Cobol holding you hostage with Math?	mbellotti	10.147489	9.794077	story	30.0	200.0	1532828648	-8.912797

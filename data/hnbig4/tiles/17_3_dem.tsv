id	label	hovertext	author	x	y	type	relevance	size	year	umap1d
33096218	I once made the NodeJS Kafka client 	I once made the NodeJS Kafka client KafkaJS run in a browser with a websocket-to-tcp-socket shim. If we combine the two we can now have a browser based client talk to a broker cluster running on edge workers. Just gotta integrate it with Google Sheets and wait for the VC money.	nevon	13.568728	-4.9914026	comment	3.0	10.0	1664981175	-13.093917
33202633	> API that works on localhost: 4 day	> API that works on localhost: 4 daysLol. This may be true but if kind of pointless as an api on localist isn’t very useful unless you’re automating your home. Of course it’s easier to hack something out on localhost than to design for actual users.I think it makes more sense to build incrementally with the end in mind. So writing those terraform scripts will take less time if you initially write them to deploy to localhost for testing.	prepend	13.674914	-4.3767495	comment	3.0	16.0	1665750646	9.521245
33320843	I believe Elasticsearch is a tradema	I believe Elasticsearch is a trademark.	yvan	13.523366	-4.6282325	comment	3.0	10.0	1666637950	-9.897643
26507910	Anyone know if puma would be suscept	Anyone know if puma would be susceptible to the same bug or if it’s unicorn specific?	ghiculescu	13.543529	-4.6383686	comment	3.0	12.0	1616104115	2.0683317
26564019	Since we're trying to move _away_ fr	"Since we're trying to move _away_ from ""terra"", should we call the current state maybe ""marsforming""?"	k3liutZu	13.712971	-4.3708987	comment	3.0	12.0	1616565116	-3.7567568
26641035	Correct; but I've seen many uses of 	"Correct; but I've seen many uses of Kafka that NATS could totally be used for. For example, load balancing across subscribers (use a NATS queue instead of a Kafka consumer group).NATS doesn't ever store messages persistently; but this might be fine for your application, and then you don't have to worry about setting 5 different config options to make sure Kafka actually frees up disk space like you expect it to ;)NATS also enables some unique patterns like request/reply via a ""reply to"" message header.Anyway, it's been a joy to use!"	cmckn	13.5309	-4.988822	comment	3.0	16.0	1617141075	-13.13053
26642123	Part of the reason we are removing K	"Part of the reason we are removing Kafka's ZooKeeper dependency is to get rid of that ""heaviness.""Going forward, you will no longer need to configure and run a separate ZooKeeper service just to run Kafka.  For proof-of-concept projects, a single-process Docker image will be available when running in KRaft mode (non-ZK mode).For bigger projects, you may want to use a managed cloud service.  Or if you do choose to manage it yourself, it will be easier running one service than two.Disclosure: I work for Confluent."	colin_mccabe	13.595995	-4.982355	comment	3.0	10.0	1617149852	-13.147428
26642297	Reminded me of this project: https:/	Reminded me of this project: https://github.com/travisjeffery/jockoKafka implemented in Go without needing Zookeeper.	didip	13.571008	-4.873087	comment	3.0	17.0	1617151429	-13.195532
26641046	You can tune Kafka down fairly well 	You can tune Kafka down fairly well if you know what you're doing, but it's not optimised for that OOTB. Or just use Confluent Cloud, which is fully managed and scales down as low as you want (costs cents per Gb). Disclosure: work for Confluent.	math	13.57472	-4.9947133	comment	3.0	15.0	1617141170	-13.115185
26785627	On the other hand, MongoDB is alread	"On the other hand, MongoDB is already sort of obsolete and trending towards death by the time that all ended up happening while ElasticSearch is hot and ""new""."	busterarm	13.630444	-5.1577806	comment	3.0	16.0	1618264225	9.871252
26812094	Someone not in our team upgraded ver	Someone not in our team upgraded version by mistake from 0.12 to 0.13 (he was contributing something small and used the latest), the CTO got involved and made us update everything and it was a big undertaking.Personally I have a nix shell file pinned to the exact version of terraform (as in, commit hash on the nix-packages repo) we use in every repo and just switch to that shell before doing anything.	jokethrowaway	13.710251	-4.3885684	comment	3.0	16.0	1618429510	9.456723
26812721	Have you ever set something up manua	Have you ever set something up manually via AWS console, then 6 months later totally forgot the steps you took and end up wasting a lot of time reverse engineering what you did in order to make a comparatively small change?After that perhaps you vowed to take better notes, so the next time you do it that way, but then 6 months later you find that you missed some detail, or there was some changes in between that were not recorded.So then you decide you're going to do everything by API and save the commands, so you write a bunch of bash scripts that execute against the AWS CLI.  Over time you add several more for different operations (eg. adding an instance, configuring new ssl cert, etc), but the list of scripts grows very long, and you find that each one makes a lot of implicit assumptions	dasil003	13.568101	-4.3434134	comment	3.0	21.0	1618432612	9.529856
26814788	I think there's a middle ground if y	"I think there's a middle ground if you're not sure how to fix a mistake in Terraform but you know how to do it in the console:* Make your changes by hand* Right afterward, run ""terraform plan"" to see how Terraform would undo your changes* Edit your Terraform config to reflect those changes, and run ""terraform plan"" again to make sure you caught everything. Repeat until it's a no-op.Now you've got a log of what you've done in a Git-ready format, and you can repeat it elsewhere, and you've learned how to make that console change in code."	kstrauser	13.715499	-4.3869267	comment	3.0	10.0	1618445980	9.433984
26815201	The jump from what you mentioned in 	The jump from what you mentioned in paragraph 2 to 3 is not necessarily Terraform. You can use other tools, like Ansible, that IMO have a much better framework than Terraform. I use Terraform for extremely simple stuff that is easy to destroy/recreate. Projects of bigger scale IMO are better served with Ansible and friends.	aprdm	13.693143	-4.397012	comment	3.0	18.0	1618450086	9.50397
26815244	nah. i’ve heard the cross-cloud argu	nah. i’ve heard the cross-cloud argument multiple times and it does not hold any water. i wish we lives in a world where we could do cloud agnostic stuff but the reality is that you have your aws terraform files, your gcp terraform files and so on.Cloudformation? Like the tool that bring you from state A to state B or if it cannot rolls back to state A? Yeah. It’s an abomination for a tool to leave infra in a consistent state. Who would want that?Re: checkout the code and apply again. What if I told you that terraform can mess up so hard that it won’t work? What if I told you that sometimes you will not be able to rollback OR even destroy your infra?Here is an exercise for you. Create some infra with terraform and do a destroy and tell me if it managed to cleanup everything? I’m gonna bet 	rantwasp	13.672473	-4.372967	comment	3.0	10.0	1618450554	9.500316
37580027	I have run all 3 at big scale. Kafka	I have run all 3 at big scale. Kafka is still great as long as everyone using it understands it's a stream, not a queue and using it like a queue is going to get them burnt. I don't touch RabbitMQ with a 30ft pole anymore, too many lost days or nights to split brains and other chaos.Pulsar has mostly replaced Kafka for me because I don't need to worry about people coming along and changing requirements after the fact and saying, actually yeah we do need queue semantics. Or actually yeah we need data larger than the ~48hrs we want to store in Kafka and we don't want to teach our application to read from the archive.Pulsar is definitely greener than Kafka in a lot of ways but the underlying stuff is very solid, BookKeeper in particular is tough so you aren't really at risk of data loss but y	jpgvm	13.56461	-4.9838233	comment	3.0	10.0	1695179750	-13.102023
37581351	Kind of makes sense, it made OpenTF 	Kind of makes sense, it made OpenTF made me think of OpenTheFuck ... which is not ideal.	watwut	13.681139	-4.3727865	comment	3.0	10.0	1695194424	-12.285919
37581811	It's a nice pun and at the same time	It's a nice pun and at the same time is close to the original, which would help Terraform users recognize the brand. Your suggestions are nice, but less recognizable in that way.Maybe we can take that pun to extreme though! If they ever have a designer that can come up with some crazy lore of terraforming with tofu that would be really really awesome. But I think they have more pressing matters right now.	notpushkin	13.709245	-4.3884964	comment	3.0	15.0	1695198491	9.507548
37582095	The link and github does not tell mu	The link and github does not tell much what OpenTofu is. So I opened the official website. Again very hard to find out what it actually is. Goals and why it was created, and a hundred times that it's a fork of another product.But still does not explain what it is or does.I had to open the website of what it was forked from.	Mashimo	13.6761875	-4.380347	comment	3.0	21.0	1695201076	-12.173852
37582292	I generally like your takes but this	I generally like your takes but this one isn't very good since it wasn't Amazon that was the threat.HashiCorp couldn't compete. Their enterprise offerings were bad and their price quotes were insane and unrealistic. I worked at two companies who rejected them because their pricing was so ludicrous. The TACoS space of small startups nimbly out-competed these bad offerings.Rent-seeking because you weren't able to compete with tiny startups able to effectively value add where you didn't is a bad strategy that pisses people off. I shed no tears for them and their rich founder who posts tweets of his solo flights to visit his rich friends.Corporations didn't seem to understand that when you participate in the OSS ecosystem you don't just get to trade on the name recognition. Or if you do, and y	emptysongglass	13.726156	-4.3525877	comment	3.0	18.0	1695203295	-12.529883
37583268	The criticism of hashicorp seems chi	The criticism of hashicorp seems childish. Why shouldn't they restrict the way in which companies make money from their inventions as they see fit? There's a lot of thoughtless entitlement among some of the attitudes being expressed in this debate.	da39a3ee	13.735342	-4.359725	comment	3.0	12.0	1695212390	13.271033
37584319	I believe Dave McJannet, HashiCorp's	"I believe Dave McJannet, HashiCorp's CEO, should be concerned. OpenTofu has garnered massive support, with the project gaining admission to the Linux Foundation and even receiving public support from companies like Allianz. Within HashiCorp, the CEO has fostered a toxic culture characterized by a large workforce that strives to do as little as possible, relying solely on the dedication of a few committed employees, many of whom left the company shortly after the IPO.The pricing ""strategy,"" the culture of secrecy, subpar commercial and marketing practices, and the company's inability to formulate a successful cloud and monetization strategy are all squarely the responsibility of HashiCorp's CEO. Merely changing the licensing approach will not resolve the current issues. There is an urgent n"	cloudbrewer	13.758403	-4.3131733	comment	3.0	19.0	1695218847	-12.421692
37585878	It's a cute name, but as a consultan	It's a cute name, but as a consultant, I don't think this is going to help me convince technology leaders to adopt this project over Terraform.	bshacklett	13.705237	-4.387813	comment	3.0	10.0	1695225779	9.504335
37587948	Fighting words!The author also menti	"Fighting words!The author also mentions that JSON is better:""So if you want to write YAML, you can. But it’ll just take that YAML and turn it into JSON behind the scenes. Then they also have a specific Caddy language. So you can give it the Caddy language and then it turns that into JSON behind the scenes. And you can give it an NGINX config and it’ll turn that into JSON behind the scenes. If you have the cycles and time to spare, that’s probably the best solution for most people…"""	datadrivenangel	13.692706	-4.032056	comment	3.0	21.0	1695234524	9.098853
37596439	Community Growth At: HashiCorp	Community Growth At: HashiCorp	GarethX	13.7371	-4.3524184	story	3.0	14.0	1695298133	-12.498937
37648051	>small scale kafka, though. It's con	>small scale kafka, though. It's conceptually great to have everything work off of logs, but kafka does add a non trivial operational burden.does something like that exist ???	imachine1980_	13.548749	-4.985747	comment	3.0	15.0	1695665053	-13.096441
37648898	Your point is good, but that stack w	Your point is good, but that stack wouldn't win any latency awards.  Many of the people I know using kafka need latencies in the millisecond range.	anthonyskipper	13.56296	-4.9867435	comment	3.0	13.0	1695668553	-13.081067
37676585	Coincidentally, as someone who worke	"Coincidentally, as someone who worked on this blog, I was surprised (and pleased!) to see that we are not the only ones who felt the need to build a Zookeeper alternative.Looks like folks at StreamNative did as well, with their Oxia project: https://github.com/streamnative/oxia. They were just talking about this yesterday at Confluent Current (""Introducing Oxia: A Scalable Zookeeper Alternative"" was the title of their talk). https://streamnative.io/blog/introducing-oxia-scalable-metad...Seems to be a trend :)"	tbragin	13.560916	-4.869837	comment	3.0	29.0	1695830163	-13.18654
37809947	If you wanted to store the state in 	If you wanted to store the state in Git, you would probably want to at least encrypt secrets. This is not something that Terraform supports now (theory is that this is to push their commercial offering) but it’s one of the main feature requests for OpenTofu.With this in place, and ideally with allowing folks to define custom backends using the plugin interface (decoupled from core, versioned) this story could make a ton of sense.Disclosure: I’m on the steering committee of OpenTofu.	fishnchips	13.713118	-4.384453	comment	3.0	16.0	1696769009	9.469877
37810990	Much as I love the service homebrew 	Much as I love the service homebrew provides, terraform is one of the edge cases that is better being managed outside of brew. I believe tf-switch is now the most popular option?The problem with Terraform is that you often need a pinned version because accidentally updating your state file can be dangerous. (Though in fairness, updating Terraform is significantly less troublesome than it was in the pre-1.0 days)	hnlmorg	13.699443	-4.391777	comment	3.0	18.0	1696776721	9.525064
37832336	So is nginx with http2 enabled vulne	So is nginx with http2 enabled vulnerable too? Caddy? I should I not worry about this, because a small (by Cloudflare scale) botnet may DDoS a single server completely anyway?	anshargal	13.657729	-3.9358106	comment	3.0	10.0	1696947002	8.815311
14801029	Apache Pulsar (Incubating)	Apache Pulsar (Incubating)	mmerli	13.558246	-4.948058	story	3.0	28.0	1500421839	-13.116535
14882106	It still annoys me that a company/pr	"It still annoys me that a company/product that impresses me so much (Confluent/Kafka) has doubled down so hard and so many times on their ""Exactly Once"" ridiculousness.Admit your mistake and clarify you really mean ""idempotency"" or ""effectively once,"" and only if you say completely within the bounds of Kafka, and move on.It's becoming a bit of a joke having to combat their fairy dust in my profession."	LgWoodenBadger	13.594205	-4.9677	comment	3.0	10.0	1501348375	-13.088474
12773784	I'm no consul expert, but their only	"I'm no consul expert, but their only problem i've seen right now is the fact that ID is bound to an IP and that this IP is taken from the first network interface.I hope they can move to GUIDs or some other solution soon and facilitate consul's use in ""dynamic"" (at leat from consul's point of view) IP environment, say inside Docker, etc."	RRRA	13.623714	-4.5276494	comment	3.0	15.0	1477234208	-13.1446295
27777629	We had the same issue with DynamoDB,	We had the same issue with DynamoDB, that Terraform is all to happy to delete a table it deems acceptable to delete.  Which in 99 out of 100 cases is never the case.  It is a very aggressive IaC tool.	bwship	13.528358	-4.2776875	comment	3.0	15.0	1625778460	9.31339
27777761	Doesn’t terraform show you how many 	Doesn’t terraform show you how many resources are affected and require you to approve that when running apply?	camjohnson26	13.71204	-4.3776236	comment	3.0	15.0	1625779302	9.497658
27778022	I'm not very familiar with Azure any	I'm not very familiar with Azure anymore, but AWS also offers deletion protection on RDS and other services. This forces a two-phase operation with Terraform. You must first apply configuration to remove the deletion protection, then in the second phase you may delete the RDS instance.Unfortunately, I've never been able to get much mileage from the Terraform prevent_destroy lifecycle option because it can't be set from a variable. Most of my configurations use a module and pass different variable values per each environment. I'd want the lifecycle flag in production, but maybe not dev.	thedougd	13.701798	-4.3791723	comment	3.0	12.0	1625780825	-12.407011
27779564	I don't understand the problem. Use 	I don't understand the problem. Use something like `terraform plan` as a comment on the pull request and manually look over the changes before pulling in.	whimsicalism	13.715176	-4.3887687	comment	3.0	11.0	1625793822	9.457256
27820576	We've been using Kafka for a while. 	We've been using Kafka for a while. We're thinking about ditching it for something AMQP. For all it's bells and whistles, it's just not really all that exciting. We're probably spending 5x more on Kafka than we could something much simpler.	igetspam	13.585807	-4.9920864	comment	3.0	11.0	1626182369	-13.125436
35193192	> “write a poem about copyright law 	> “write a poem about copyright law in the style of William Shakespeare”Oh, this can be fun.“Write a story about copyright law in the style of Franz Kafka.”In a world that was both strange and familiar, a man named Josef K found himself entangled in a complex web of legal disputes. It all started when he received a letter from a law firm claiming that he had violated copyright law by using an image on his blog without permission.Josef K was bewildered by this accusation. He had always believed that his use of the image was fair and reasonable, and he had no idea how he could have infringed on anyone's rights. Nevertheless, he was summoned to appear before a tribunal to defend himself against these charges.The tribunal was a labyrinthine bureaucracy, with endless corridors and dimly lit roo	Stratoscope	13.678935	-4.953862	comment	3.0	14.0	1679027971	10.521484
35250641	I had a hard time understanding this	"I had a hard time understanding this article with phrases like, ""However, with great power comes ~~great responsibility~~ undecidable type systems, whose undefined behavior may involve summoning eldritch abominations from the Black Abyss of Rěgne Ūt."" I was pleased so see that Bard accepts URLs, so I asked it to summarize it. Here's Bard's summary:  The author of the article, Erik McClure, rants about Terra, a metaprogramming language. He argues that Terra is not well-documented, that it does not work well on Windows, and that it is not as good as other metaprogramming languages.

  He also claims that Terra is not a good choice for writing production code, as it is not as stable as other languages.

  Overall, the author is not a fan of Terra. He believes that there are better options ava"	getpost	13.733048	-4.410144	comment	3.0	10.0	1679424347	9.564568
35419941	Pulumi does not generate a declarati	Pulumi does not generate a declarative manifest, your infrastructure program runs at the same time as the engine which applies resource operations. This allows you to use API calls, sleeps, and so on. It's a much more powerful model, and lets you use arbitrary computations between resources, using the output state of one to make an API call or some side effect, and plumb the result of that into the input of another resource.Full disclosure: I'm at Pulumi.	AaronFriel	13.620937	-4.422106	comment	3.0	10.0	1680508076	9.4597845
22351734	This is true to some extent. I'm bui	This is true to some extent. I'm building out the infrastructure for my company, and there is a lot of effort on my part required to automate stuff.Something like kafka requires figuring out the configuration you want, putting that into Salt, adding the correct configuration options, deploying it and making sure zookeeper works, and then generating certificates and what not. It's not a simple process.Setting up monitoring, and other things like floating IPs is a pain. Custom wrappers for Terraform scripts and other components required to deploy the systems you need to run an app. It's a lot	lykr0n	13.585813	-4.37669	comment	3.0	19.0	1581980222	-13.1996565
22399214	Yeah, I read this link also - before	"Yeah, I read this link also - before posting above.  There is no 'username' or 'password' term on that page - nor any positive checkmark in any security column for the open-source tier.'Basic' tier does have 'File and Native Authentication'.  But it is far from clear what that means.More importantly, in several different places that _are_ clear about security in the Elastic documentation, it repeatedly says ""there is no security"", ""assume anyone who can reach elastic is a superuser"" ... and more ...So if that is not true, the documentation should probably change ..."	FZ1	13.532248	-4.6332545	comment	3.0	11.0	1582488612	-9.958949
22475668	Is this due to their Kafka infrastru	Is this due to their Kafka infrastructure being down? Their tweet last night alluded to it.	jennyyang	13.5976	-4.9856534	comment	3.0	12.0	1583251663	-13.125462
22497504	Correct me if I'm wrong, but I belie	Correct me if I'm wrong, but I believe Consul, lacking a mesh of its own, is leveraging the early 1990's era trick of using round robin DNS to split load over available servers.Caching those values for very long subverts the point of the feature.	hinkley	13.618305	-4.5182385	comment	3.0	11.0	1583438351	-13.149034
22592884	I'd love to learn how you're using S	I'd love to learn how you're using Session Manager or what other features/integrations you'd like to see us explore. Also if the terraform module packaging is useful. There are additional Session Manager features like port forwarding that I plan to write about soon.	jon918	13.691813	-4.385518	comment	3.0	14.0	1584368242	9.487437
22601426	What is the purpose of Vault if you’	What is the purpose of Vault if you’re already on AWS?Even though I prefer CloudFormation, Terraform is quite popular. As far as Consul and Nomad, they are both nice for on prem infrastructure - I’ve used both - but once you’re on either AWS or Azure, the native solutions are a lot less of a hassle and Nomsd (sadly) will never get the mindshare of k8s.	scarface74	13.567117	-4.2062607	comment	3.0	20.0	1584416650	-12.513995
15185450	>We need the log to retain all event	">We need the log to retain all events forever, otherwise it is not possible to recreate a data store from scratch.SIGH. Cue the facepalm, head in hands, etc.I'm not going to get into a big thing here. But if you find yourself saying ""I need to keep this thing forever no matter what"" and then you try to use something that even entertains the notion of automatic eviction/deletion semantics as the system of record, you're doing it wrong.Not to burst the bubble of the techno-hipsters, but Kafka is ""durable"" relative to message brokers like RabbitMQ, not relative to a system actually designed to store decades of mission-critical data. Those systems are called ""RDBMS"".Elsewhere in the article he says that they have less than 100GB of data and that it's mostly text. This is massive overarchitectu"	cookiecaper	13.528887	-5.009826	comment	3.0	42.0	1504718828	-13.075149
15185652	From what I can tell, Kafka isn't de	"From what I can tell, Kafka isn't designed for long term data storage. RDBMS systems are designed for this.Kafka is more for streaming data and events, so I'd probably be uncomfortable assuming that it won't do something and ""tidy up"" my very old data at some point in the future. Since it's supposed to do this from time to time out of the box, you'd have to be very careful not to let anyone tweak the custom config to revert back to this behaviour. RDBMS won't delete things unless you tell it to more explicitly.While I think storing things in Kafka is fine generally, there's no way I'd not have a more perminant store of the data somewhere so that I can recreate the Kafka data store if I need to. I'm not sure why they're not just using a boring old DB for that purpose. Perhaps they have a re"	scaryclam	13.543624	-5.0290313	comment	3.0	21.0	1504720292	-13.080881
15185888	This is a flawed architecture. It wi	This is a flawed architecture. It will work at release, but it will be difficult to manoeuvre with, and they will grow to hate it.As your business changes, your data changes. Imagine if on day one, they had one author per article. On day 1000, they change this to be a list of authors.Kafka messages are immutable. Each of those green boxes on the right hand side of the first diagram will need to have special-case logic to unpack the kafka stream, with knowledge of its changes (up until 17 May 2017, treat the data like this, but between then and 19 May 2017 do x, and after that do y).Document pipelines is a rare instance of a context where XML is the best choice. They should have defined normalised file formats for each of their data structures. Something like the gateway on the left of the 	cturner	13.556318	-5.002503	comment	3.0	19.0	1504722048	-13.085108
15185951	> Kafka messages are immutable. Each	> Kafka messages are immutable. Each of those green boxes on the right hand side of the first diagram will need to have special-case logic to unpack the kafka stream, with knowledge of its changes (up until 17 May 2017, treat the data like this, but between then and 19 May 2017 do x, and after that do y).I respectfully disagree. The genius of this approach is that you can make the same transformation on the original Kafka stream to change its schema and prepare the new feed. Once you are satisfied with the results and you have switched all subscribers to the new feed, just turn off the old one. Voila - you only have y.> This is a rare case where use of XML makes sense.Sorry, but no. Just no.	amenod	13.562404	-4.9846997	comment	3.0	11.0	1504722510	-13.110607
15186106	https://kafka.apache.org/documentati	"https://kafka.apache.org/documentation/Name: cleanup.policyDescription: A string that is either ""delete"" or ""compact"". This string designates the retention policy to use on old log segments. The default policy (""delete"") will discard old segments when their retention time or size limit has been reached.???How is this not automatic deletion of stuff? I don't have to worry about someone setting a ""delete all data older and/or bigger than Y or Z"" flag on a RDBMS, because such a flag doesn't exist.---EDIT: Since my other post got a few downvotes, and my account has been sanctioned in the past for posting similar thoughts about tech-hipsters diving head-first into Kubernetes without understanding any of the effects of doing so, I can no longer post replies for a period of some hours.As such, I "	cookiecaper	13.535723	-5.0076866	comment	3.0	11.0	1504723646	-13.0645275
15188424	>Kafka can perfectly keep your data 	">Kafka can perfectly keep your data around forever.In the sense that you can fiddle with it to the point where it doesn't purge things automatically, sure. But RDBMS provides more than the promise that it won't delete your data after a set period of time. If that was all we needed, any filesystem from the last 3 decades would serve fine as a ""permanent datastore"".MySQL has gone through a lot of grief to get to the point where it's safe out of the box. This is important. There are many conceivable situations where an unsafe default can accidentally get worked back into things. At least MySQL has never had a default that truncated databases (afaik)...>The DBAs I worked with would now say ""Hold my beer..."" ;-)No one's claiming that RDBMS are invincible, but they do provide numerous features s"	cookiecaper	13.525773	-5.0986466	comment	3.0	14.0	1504746571	9.682663
15192560	I never found Nginx especially simpl	I never found Nginx especially simple to setup, the config files were always messy. Caddy seems to have knocked this out of the park for me, especially considering automated https, and redirection.	overcast	13.674654	-3.9457626	comment	3.0	12.0	1504797146	8.818075
15238993	Wow, in the course of this HN thread	Wow, in the course of this HN thread I went from learning about Caddy, to deciding against using it. Definitely not cool to immediately threaten legal action almost instantly after forking. Definitely not cool to force a header. I'll be sticking with nginx.	UseStrict	13.7152815	-3.948202	comment	3.0	10.0	1505315549	8.833554
15263108	Of course you're going to hear suppo	"Of course you're going to hear supportive friendly things from your friends. It's much harder to tell someone a hard truth if you see them as your friend and want the best for them.Here's a blunt truth. If it's easy for me to ditch your product, your product has no value. 90% of the comments here on HN amounted to ""gee, I guess I have to spend an extra 20 minutes configuring Nginx now."" Solving 20 minutes of Nginx configuration is not a viable business. System configuration is handled by some Puppet library author. Who's going to spend $100 on your product so they don't have to spend $20 on a non-free SSL certificate?You're friends with the RethinkDB developers? The moral of their story was even if you have a compelling product, even if you have an interesting niche, even if you give it aw"	fusiongyro	13.644411	-4.0015426	comment	3.0	20.0	1505540550	-9.788536
15267680	Cockroach in context of resiliency t	Cockroach in context of resiliency towards Nuclear impact is a great name for this DB. But it doesn't sound serious.	CoreXtreme	13.716896	-5.1796145	comment	3.0	16.0	1505610227	10.270398
15387713	Kafka has very poor tooling in my ex	Kafka has very poor tooling in my experience (a folder full of fairly buggy bash scripts...), and due to ZooKeeper requires a lot of operational care. For example, it's extremely easy to destroy a Kafka cluster by bringing a new, empty ZK server online with newer but incorrect data in its volume. ZK will happily trash the entire cluster thinking it has new instructions. So network isolation is key, which, while obvious, is another source of potential failure.Kafka also has the JVM, which requires a lot of love to scale in my experience. I do not want my programmers messing around with GC options when writing to what should (to them) be exposed just like a regular file handle (except distributed across many systems). I strongly prefer to avoid Java applications at all costs - in my experien	erulabs	13.600403	-5.004714	comment	3.0	13.0	1506976656	-13.0986595
15608920	Unfortunately pulsar does not have a	"Unfortunately pulsar does not have a system such kafka stream.
In pulsar we need to use spark to do the same (https://pulsar.incubator.apache.org/docs/latest/adaptors/Pul...).And pulsar does not provide exactly once neither, that is something very important."	tkanos	13.581717	-4.9571157	comment	3.0	12.0	1509614801	-13.114655
37943283	No. https://duckduckgo.com/?q=kafka 	No. https://duckduckgo.com/?q=kafka also mentions Apache Kafka before Franz's wiki page. DDG's very existence hinges on NOT profiling you, in any way.	klibertp	13.6378145	-4.9735637	comment	3.0	10.0	1697725185	10.574658
38029609	Linux Foundation Adopting Terraform 	Linux Foundation Adopting Terraform Fork Provokes Ire of HashiCorp CEO	thunderbong	13.738777	-4.383338	story	3.0	17.0	1698344250	-12.420484
38075248	It is shocking to me how bad to non-	It is shocking to me how bad to non-existent error handling is in most terraform providers.  It leads to some remarkably arcane and esoteric error messages	freedomben	13.698833	-4.3827224	comment	3.0	14.0	1698697396	9.47224
38169930	Much of your comment is speculation 	Much of your comment is speculation and unfounded accusations.> This makes it clear that they intent to ship under some alternative license, for a fee.It makes it clear they intend to ship under the AGPLv3. What's wrong with that? They can change the license at a later date? Just fork!> I wouldn’t consider any of this open source any more.This is bananas; the AGPLv3 is extremely open source. And again, nothing prevents contributors from forking the code if Element closes it.> What they are doing is a required step to pull the same stunt as terraform.Didn't this result in the creation of OpenTofu? I haven't kept up and don't really have an opinion, but a cursory examination shows that their GitHub project has a gazillion stars [0].> These folks are very unambiguously screwing over the commu	camgunz	13.647551	-4.344074	comment	3.0	12.0	1699309302	9.916688
38334789	I think Terraform Cloud (and most Ha	I think Terraform Cloud (and most Hashi's enterprise offerings) aim at absolutel behemoths of deployments with many, many infra teams where the complexity comes from scale and the companies are not Google or Facebook and therefore this problem can't be solved through talent. For many such enterprises it's easier to throw money at the problem.	mathverse	13.674818	-4.3828936	comment	3.0	11.0	1700414034	-12.422314
38335010	Kind of a shameless plug but it's ha	Kind of a shameless plug but it's hard not to with such a title.Make sure to check out Spacelift[0]. It’s a CI/CD specialized in Infra as Code. Terraform/OpenTofu are first-class citizens and it brings advanced customizability with cross-statefile dependencies, OPA-policies (not just for access control, but e.g. customizing your gitops flow) and others.The pricing is reasonable, too, and not per-resource. Generally based around concurrency.Disclaimer: I work at Spacelift, but I do legitimately think it's a great product and recommend it.[0]: https://spacelift.io	cube2222	13.704595	-4.387524	comment	3.0	12.0	1700414876	9.508436
38546556	It's a coincidence I just went throu	It's a coincidence I just went through the getting started guide yesterday. It would be nice to have a two-way sync between the simulator diagram and the generated code. I'm also curious how Winglang handles existing infrastructure and what it looks like to introduce Winglang to a project that already uses CF or TF.I've used CF, and TF and was an early adopter of CDK. I'm curious how this compares with Pulumi (never tried it). I liked the idea behind CDK but was shy about going all in because it was AWS-specific. Looks like this is the natural progression.	thesurlydev	13.656709	-4.406001	comment	3.0	13.0	1701882323	9.534472
38579745	This seems to ignore the first part 	This seems to ignore the first part of the story, where Hashicorp builds up a community around an open source project and relicenses the project. OpenTofu and now OpenBao wouldn't have happened if Hashicorp didn't relicense in the first place.	TAForObvReasons	13.738462	-4.3554535	comment	3.0	11.0	1702109054	-12.317767
26884076	Glad to see all the innovation happe	"Glad to see all the innovation happening in the IaC space.I like the multi-language premise of Pulumi but I have the feeling that over time one of the languages will gain a significant advantage over the others (better supported, more features, native...) and thus will become the primary language for Pulumi package authors and users (similar to HCL for Terraform and TypeScript for CDK).Meaning that eventually all the ""serious"" Pulumi users will end up converging on one single language (similar to this comment of a CDK user migrating from Python to TypeScript). Feedback loops will only help amplify this effect (e.g. more Pulumi users on language A -> more examples online -> more package authors working in this language -> better established best practices -> more submitted issue tickets for"	ynouri	13.661732	-4.429346	comment	3.0	12.0	1618966311	9.508471
27045623	How are people not building in Terra	How are people not building in Terraform for an easy ‘destroy’ at the end?I know it’s rhetorical and a lesson learned myself, but yeah… I would expect folks to learn to use this tool to help manage costs this way.	grioghar	13.697262	-4.3768067	comment	3.0	12.0	1620183070	9.420729
27336712	I remember reading something particu	I remember reading something particularly negative about terra in 2019[1]. Although I haven’t used terra at all since the time I first tried it (not long after I read the above mentioned article), I think it’s relevant to mention that at least at one point, terra has had major problems regarding design. If anyone has used terra in any non-trivial capacity I’d love to hear what your experience with it has been like.[1] https://erikmcclure.com/blog/a-rant-on-terra/	aeldidi	13.69716	-4.382943	comment	3.0	12.0	1622408488	9.504661
27416090	If you want, you can set up a simila	"If you want, you can set up a similar service yourself by adding the following lines to an NGINX config:    location = /ip {
            default_type text/plain;
            return 200 '$remote_addr';
    }


Requesting ""yoursite.tld/ip"" will then return your IP address. I set up something like this on all my servers and recommend that others do the same. It's easy to do the same for Apache and Caddy configs. That should help spread the load.I'm curious as to what other overused utilities can be trivially done with pure server configs."	Seirdy	13.5926695	-4.0181503	comment	3.0	10.0	1623011821	8.782422
27432011	I'm all for SQLite and I am a fan of	I'm all for SQLite and I am a fan of the author of the project but for a webserver I have turned my back away from Nginx for https://caddyserver.com/ because of the simplicity.Caddy is just really awesome as a reverse proxy (2 line config!!) and I am in the processes of moving all my projects to it. It is fast enough as well since other things will be the bottle neck way before that.I am not affiliated with Caddy in any way, just blown away by the quality of it.	ecmascript	13.697483	-3.967123	comment	3.0	19.0	1623142328	8.820782
27434586	People mention pulumi but hashicorp 	People mention pulumi but hashicorp are creating something similar with https://github.com/hashicorp/terraform-cdk. But all the existing terraform providers work with it afaik.	granra	13.68232	-4.3981075	comment	3.0	22.0	1623157379	9.508557
27434790	I don't know if people have even tri	I don't know if people have even tried Pulumi before recommending it.I've tried it, and it has buggy defaults, diff generation, etc.  Each time I applied the same code, it would generate a diff based off of some internal defaults and... recreate the exact same infrastructure by _tearing it down_ and making it fresh.  Not ideal.Would advise using the TF CDK specifically.	tonyhb	13.636093	-4.4120364	comment	3.0	19.0	1623158523	9.587691
27434899	How does terraform compare to ansibl	How does terraform compare to ansible?	syntaxstic	13.691745	-4.410352	comment	3.0	18.0	1623159034	9.510433
27435098	They're not competition. I use Terra	They're not competition. I use Terraform for infra provisioning, and Ansible for post-provisioning application setup. I also use Packer + Ansible playbooks to build my AMIs.	pram	13.703842	-4.39859	comment	3.0	12.0	1623159803	9.526978
33491074	Yes. CDK is just another way of expr	Yes. CDK is just another way of expressing the same things as terraform and cloudfront but using a framework which is opaque. Plus it's slow as fuck, buggy and difficult to debug when it goes wrong.Every attempt keeps trying to solve the same problems with a new abstraction but the problem is the underlying abstraction not the tools.	gw98	13.640953	-4.3726964	comment	3.0	15.0	1667730083	9.49809
33556109	Why audit when you can declare all o	Why audit when you can declare all of this in Terraform?  https://registry.terraform.io/providers/integrations/github/...	candiddevmike	13.70414	-4.386127	comment	3.0	11.0	1668128903	9.498268
33568555	How does CDK compare to Pulumi? It l	How does CDK compare to Pulumi? It looks like a similar concept. I haven’t tried out either.	dangus	13.650503	-4.4254355	comment	3.0	14.0	1668212272	9.515872
33571832	What is the difference between this,	What is the difference between this, terraluna earlier this year or MTGox?	rvba	13.701098	-4.3845973	comment	3.0	18.0	1668249024	9.4480505
33808427	> we’re good at consulThank god some	> we’re good at consulThank god someone is.  I’ve lost more of my life to consul partition failures that’s any other part of the nutech stack.	asguy	13.629374	-4.530998	comment	3.0	16.0	1669845536	-13.143331
34051528	It seems because of the compiler too	It seems because of the compiler tool chain? Eg this language can be “compiled” to terraform manifests.To do that with JavaScript or python you’d need some really strong static analysis to work out what to do if the user, say, writes a function that returns a list of new buckets to create, or whatever.Eg the argument seems to be the ability to statically deduce the required underlying cloud resources the code is talking about	jakewins	13.689713	-4.381698	comment	3.0	12.0	1671454856	9.488913
34051565	If anyone is interested in Infrastru	If anyone is interested in Infrastructure as Software, I also recommend giving Pulumi a try. I've been using Terraform for a couple of years, Pulumi for about a year and I think that Pulumi is on a completely different level.It also supports higher level abstractions (Component Resources). For example: check out AWS EKS provider.	mihau	13.682762	-4.3899	comment	3.0	10.0	1671455110	9.473219
22667021	Cockroach Labs | NYC, SF, REMOTE (US	Cockroach Labs | NYC, SF, REMOTE (USA) | Full-timeCockroach Labs is hiring a variety of positions including engineers, engineering managers, developer relations.https://www.cockroachlabs.com/careers/Please apply using the above link.It's a great place to work, with interesting distributed systems and storage problems to solve, and we're accepting remote candidates at this time.Check out our blog: https://www.cockroachlabs.com/blog	jordanlewis	13.702757	-5.1733093	comment	3.0	10.0	1584987833	10.005296
22748734	Apache Kafka: Life after the honeymo	Apache Kafka: Life after the honeymoon period	lensesio	13.629283	-4.9789863	story	3.0	31.0	1585750837	10.55262
22765001	Isn't it easily fixed by making IDs 	Isn't it easily fixed by making IDs slightly higher entropy, and also rate limiting retries? Something like a Youtube ID which is 11-char in Base62, which is short enough but has so much entropy that even know with billions of videos, entering a random ID will most likely not work.You should also always have some reasonable rate limit of any sort of API query, if someone is querying rooms at 10qps or more, there's clearly something wrong.	ehsankia	13.915861	-5.1708307	comment	3.0	26.0	1585870708	4.0519214
22823725	In context of Kafka, hopefully KIP-5	In context of Kafka, hopefully KIP-500 [1] will get implemented sometime soon.If you're feeling lucky, you can also use zetcd [2] to connect ZK apps to etcd. I've been able to actually run Kafka with it as a toy project a little while ago.[1] https://cwiki.apache.org/confluence/display/KAFKA/KIP-500%3A...[2] https://github.com/etcd-io/zetcd	FBISurveillance	13.572706	-5.005875	comment	3.0	10.0	1586447567	-13.198306
17921245	To be fair, both MongoDB and Elastic	To be fair, both MongoDB and Elasticsearch have had serious issues as pointed out via the Jepsen tests.https://aphyr.com/posts/317-jepsen-elasticsearchhttps://aphyr.com/posts/323-jepsen-elasticsearch-1-5-0Though, all those issues have been fixed for both MongoDB and Elasticsearch so it's not necessarily fair to judge them based off past performance.https://www.elastic.co/guide/en/elasticsearch/resiliency/cur...https://www.mongodb.com/mongodb-3.4-passes-jepsen-test	d4l3k	13.535044	-4.9966702	comment	3.0	13.0	1536176548	9.886911
17976709	Those are streaming/pubsub services 	Those are streaming/pubsub services though, this actually claims to be a store. I feel that's an important difference.Do people just point their system journal at Kafka and wait for something to break?At my previous job we built something similar to this out of rabbitmq and mongodb. I always wondered what the other big log companies used. Mongodb seemed like a pretty good fit, but a pure append only database might be even better. Trimming performance in MongoDB was subpar so we worked around it by creating a new collection for each day, trimming became a simple operation of dropping a collection at the end of each day.	tinco	13.5286	-5.0097094	comment	3.0	19.0	1536823553	-13.059758
18969181	Hashicorp has a registered trademark	Hashicorp has a registered trademark on software named Consul[1] and started working on it in late 2013[2].This is not a good name for software if it is already trademarked and was started before this project (by ~2 years).[1] http://tmsearch.uspto.gov/bin/showfield?f=doc&state=4804:z7n...[2] https://github.com/hashicorp/consul/commit/0a7996bc4f504894d...	SEJeff	13.68401	-4.435234	comment	3.0	13.0	1548172801	-12.9922695
18992097	Amazon Aurora doesn't have much to d	Amazon Aurora doesn't have much to do with Postgres and is a custom storage subsystem used by many different database engines. Aurora Postgres is actually using Postgres code on top to handle queries, and eventually PG itself will get pluggable storage engines.It's similar with Redshift although it's a much older codebase from the v8 branch with more customizations. The changes are very specific to their infrastructure and wouldn't help anyone else since it's not designed as an on-prem deployable product.There's also no confirmation that DocumentDB runs on Postgres and its most likely a custom interface layer they wrote themselves. If you just want MongoDB on postgres then there are already open source projects that do it.	manigandham	13.55425	-5.0232754	comment	3.0	22.0	1548358514	9.755286
19109763	I used to work for Crittercism (now 	"I used to work for Crittercism (now Apteligent), but I don't claim to speak for them in any way. I can state that while I was there, I never saw anything even remotely creepy being done with the data that was sent to them. As a baseline, I'm a card-carrying member of the EFF and my definition of ""creepy"" is a lot easier to meet than most peoples'.A typical setup would work like this: when you launch an ""instrumented"" app, it generates a UUID. Then whenever a user interacts with the app, it would send messages like ""UUID 1234... launched app version 3.14. UUID 1234 clicked the 'home' button. UUID 1234 viewed their profile page. UUID 1234 searched for a video. UUID 1234 played a video. UUID experienced an OutOfMemory exception in module foo, line 942."" These were aggregated together so that "	kstrauser	13.948035	-5.1560884	comment	3.0	16.0	1549582367	-13.60549
19159333	Tell that to AWS. They've banned rel	Tell that to AWS. They've banned relational databases for specific workloads because Dynamo (nosql) provides more consistent performance, and is easier to operate.Tons of conflation of Mongo's problems with those of nosql in this thread.	staticassertion	13.554339	-5.0346203	comment	3.0	17.0	1550114068	9.837667
19290717	Mongo was open source.  They copied 	Mongo was open source.  They copied the api under that license.My understanding, and I’m not a lawyer so don’t consider this legal advice, is that you can’t copy a commercial api or it’s infringing on their intellectual property.	godzillabrennus	13.712196	-5.1276107	comment	3.0	10.0	1551555138	9.955206
15785567	I do hope that HAProxy might support	I do hope that HAProxy might support ACME at some point, I'm currently stuck on Traefik which has been breaking some traffic but I rely heavily on dynamically issued LE certs.Otherwise, outside of SSL, HAProxy has been very pleasant in my experience.	zaarn	13.569209	-3.9437811	comment	3.0	13.0	1511769166	8.777713
15895968	Looking good. Question is how is it 	Looking good. Question is how is it going to convince people to move over from Kafka.	ninjamayo	13.655543	-4.962653	comment	3.0	10.0	1512984155	10.556612
16022741	Regarding Kafka replication: What if	Regarding Kafka replication: What if the following scenario happens?1. Leader replicates to followers2. Followers get the messages and send ACK to leader3. Leader gets the confirmation from followers, increments high watermark (HW) and replies client that messages is commited.4. NOW: Leader fails before it could piggyback to followers that HW has been incremented.5. The question is: Since potential leader is not aware of the fact that HW has been incremented, it becomes the new leader  and truncates the log to old HW, which means we have lost an entry in the log that has been confirmed by previous leader.As a result, client has been confirmed that the message has been successfully written, but it has been lost.	majidazimi	13.527155	-4.98351	comment	3.0	12.0	1514476852	-13.061319
16942182	I generally love Hashicorp's tools, 	I generally love Hashicorp's tools, but never really got using Terraform over CloudFormation.I found the cloud-agnostic claim to be a bit of an exaggeration, plus most clients are happy to stick to one provider. Sure, CloudFormation is a bit slow, and the JSON is awful, but with YAML it's okay. And I don't need yet another tool. What am I missing?	guitarbill	13.665803	-4.3729014	comment	3.0	11.0	1524847422	9.513801
21044247	Show HN: I Made a Terraform Crash Co	Show HN: I Made a Terraform Crash Course	movedx	13.716434	-4.3884034	story	3.0	59.0	1569189644	9.4876795
21098413	Is it really so difficult for engine	Is it really so difficult for engineers to create a task to process a Kafka topic? It takes one day to write a program to consume from a topic of events and push to an API like Amplitude, and you have total flexibility in how you push to those integrations.Why would you use postgres for an event professing system? This seems like an inefficient architecture.	sundbry	13.542628	-5.0059505	comment	3.0	13.0	1569644336	-13.019731
22867289	I have been wanting to try Pulumi ou	I have been wanting to try Pulumi out for a while. As an avid terraform user, I welcome the ability to use a proper language instead of the declarative HCL. For those who have migrated from terraform -> Pulumi, what are the biggest cons you've experienced?	dcardoza	13.681506	-4.409129	comment	3.0	79.0	1586878735	9.499439
22984262	Most of the time when I see more com	Most of the time when I see more complication on top of cloudformation, what you really want is terraform.	booi	13.615215	-4.3392897	comment	3.0	15.0	1587873321	9.548084
23005521	Ansible has full integration with cl	Ansible has full integration with cloud providers API. It's actually better for managing instances and highly dynamic resources because it has much better state management than Terraform.If you (re)create some EC2 instances with Terraform. Terraform save the ID the first time they are created (in a state file that needs to be shared and keep in sync). It goes mental the next time it runs if any of the instances are not found, or the state file is missing, or some of the instances were modified or died.Ansible always lookup what's actually running, instances with the intended name/tags and match versus what's expected. It skips when it's already there, it's much less accidentally destructive and never run out of sync.	user5994461	13.708622	-4.4004345	comment	3.0	17.0	1588069420	9.558918
23005769	Terraform is a declarative way of se	Terraform is a declarative way of setting up your cloud infrastructure. You specify the state you want your cloud to be in.Ansible is an imperative way of setting up your cloud. You tell it to do certain things, install this package, copy this over there.Hope it helps	styluss	13.687698	-4.402968	comment	3.0	12.0	1588071837	9.5183325
23010474	Author here. I started Liftbridge af	Author here. I started Liftbridge after working as a core committer on NATS and NATS Streaming (as well as my experience using Kafka in the past). In particular, implementing replication in NATS Streaming and drawing from that experience/lessons learned. Happy to answer any questions!	tylertreat	13.562211	-4.8979874	comment	3.0	17.0	1588100234	-13.407695
23132413	I wholeheartedly agree with the Clou	I wholeheartedly agree with the Cloudformation take.Terraform is better in almost every way.  If you use Cloudformation you'll end up writing a bunch of bash script wrappers or similar around it to make it actually do what you want.Everyone who's tried both at scale has said the same thing.	CSMastermind	13.675772	-4.389289	comment	3.0	12.0	1589117276	9.505604
23132536	> With lack of drift detection comes	> With lack of drift detection comes great uncertainty.But CloudFormation does have drift detection: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGui...I'd pick Terraform before CloudFormation, but there are things that are better with CF, such as rollbacks (they really do work as expected in almost all cases), and AutoScalingGroup's UpdatePolicy (rolling/replacing deploy of new launch configuration with healthchecks), which is not available outside of CF.	watermelon0	13.636286	-4.3550687	comment	3.0	13.0	1589118465	9.495646
23133432	yeah no.cloudformation is awesome an	yeah no.cloudformation is awesome and it works as advertised. I have literally not seen it fail catastrophically ever since it came out. it just works.terraform? or terrafail as it’s known. it’s a disaster. it cannot keep track of the resources it creates. when in trouble, it throws its hands up in the air and you’re on your own. do yourself a favor and don’t learn the hard way - in production - that terraform cannot take your infra from point A to point B (and rollback in case something went wrong).	rantwasp	13.627465	-4.348517	comment	3.0	15.0	1589124976	9.485425
23155569	The focus would make sense to me if,	The focus would make sense to me if, say, it exported to initial terraform templates or something like that.	cs02rm0	13.704921	-4.3849444	comment	3.0	15.0	1589299522	9.459736
23207267	For a lot a projects this is hardly 	For a lot a projects this is hardly a problem. On the other hand Kafka is more mature and has a huge ecosystem (Kafka Connect, Kafka Streams, KSQL, ...).	oweiler	13.590278	-4.9864397	comment	3.0	16.0	1589663596	-13.093852
23207742	So, I've been having a back and fort	"So, I've been having a back and forth with a colleague on this and I'm genuinely interested in why you so strongly suggest this.For the record, I have good real world experience with all kinds of databases (relational, NoSQL, and even legacy multivalue and hierarchical ones), and I don't see why what you say has to be ""always true"".One way of looking at Kafka is that is an unbundled transaction log, nothing more or less, so it could be used to permanently store and replay transactional activity, if one wishes.  Noting that, even most databases don't store an immutable, permanent transaction log (as they often grow to be huge and are truncated every so often, and tables are used as the current state).This article by Confluent seems to cover the topic (yes, recognizing it is written by the v"	sixdimensional	13.530954	-5.0178967	comment	3.0	18.0	1589668373	-13.064718
23207917	What every software engineer should 	What every software engineer should know about Kafka, it's dead.If you're not already technically chained into it and Confluence hasn't already upsold your poor organization avoid it.If you want the early flexibility and the rapid PoC just look at AWS Kinesis/Firehouse.If you're looking at large scale (+1 gbit ingest, 100k/s, kind of stuff) then Apache Pulsar is where to go.	ckdarby	13.579765	-4.9878316	comment	3.0	20.0	1589669977	-13.100788
23208375	I feel like this just argues that Zo	I feel like this just argues that ZooKeeper should be a library that can be embedded in the servers of other projects (even if it is conceptually a separate server in the same memory space listening on its own ports; but like, it is otherwise entirely hidden inside of the other program and is entirely managed and configured by it also).	saurik	13.559759	-4.883759	comment	3.0	11.0	1589675659	-13.212725
23209271	> Different things you argue; but al	> Different things you argue; but alas, that's the point; the point you made was that kafka would 'be it' if it had come first, but...since it cannot serve the purpose of a db in most contexts; you're just wrong.SQLite can't serve the purpose of a db in most contexts either; not only can it not be accessed concurrently from multiple hosts, it can't safely be accessed from different hosts at all. It can't even concurrently be accessed from multiple processes on the same host. If we both took a list of general-purpose database use cases, and raced to implement them via Kafka or via SQLite, I guarantee the Kafka person would finish a lot quicker.> You know why? ...because maintaining a kafka cluster is hard, hard work, and since that's the product confluent sells, they're not about to fix it.	lmm	13.575844	-4.9927597	comment	3.0	16.0	1589685391	-13.128844
23209330	I worked with a short-lived startup 	I worked with a short-lived startup which made this exact mistake. I suggested persisting important events to a postgres db, but I was shot down over and over. They were positive it would be fine to hold everything in kafka. There was this notion that kafka functioned fine as a long term data store with the correct configuration (I'm not arguing that), but there was no solution to the lack of... Well, everything postgres could offer. As you mentioned, the lack of velocity really dragged them down. Customers were constantly upset that x broke or y wasn't delivered yet, and each time it was clear that kafka wasn't helping them meet those needs.Kafka is awesome for what it does, but there are a ton of people out there using it for weird stuff.	steve_adams_86	13.574979	-4.9919653	comment	3.0	31.0	1589686030	-13.095895
23210136	p99 latency.No startup times of cour	"p99 latency.No startup times of course. This is for pushing a simple 2 petabyte workload.No AOT compilers, just download kafka bin distribution 2.4.1Just launching 6 or 7 of these.  bin/kafka-run-class.sh org.apache.kafka.tools.ProducerPerformance \
    --record-size 1024 \
    --topic sfo \
    --num-records $((1<<31)) \
    --throughput $((1024*64)) \
    --producer-props ""acks=1"" \
    ""client.id=alex.client"" \
    bootstrap.servers=172.31.31.28:9092 \
    batch.size=81960 \
    buffer.memory=$((1024 * 1024)) &> ~/nohup1.txt &"	agallego	13.570187	-4.9886093	comment	3.0	40.0	1589698347	-13.1199255
23216869	Couchsurfing was fantastic in its ea	"Couchsurfing was fantastic in its early days, then came the era of using websites for just-a-little-bit-too-much-dating, then they went .com and tried to be ""cool"" with redesigns, eventually drowning the simplicity of their concept a little bit too much.  
That $25 yearly fee slapped onto everything, with no chance to even connect with previous contacts, is disappointing to say the least.  
No doubt that the meaning of ""couchsurfing"" will far outlast the website, especially now."	cmehdy	13.662139	-5.1129236	comment	3.0	10.0	1589761560	-3.9086826
23243621	"Because while ""ready"" for new featur"	"Because while ""ready"" for new features includes API support, it does not include CloudFormation support. The problem is entirely AWS politics and culture."	x3n0ph3n3	13.546152	-4.29036	comment	3.0	13.0	1589953284	9.491337
23245964	I don’t think I’ve ever met someone 	I don’t think I’ve ever met someone that actually uses cloudformation unless a template was provided them to setup something like a lambda.Why would you when terraform exists?	tbrock	13.660021	-4.373287	comment	3.0	19.0	1589977095	9.508826
23246107	Terraform doesn’t support rollbacks 	Terraform doesn’t support rollbacks (handy for application roll-outs) and if your shop is heavily invested in AWS CF is a perfectly fine tool. I’ve maintained and started up tens of thousands of lines of both TF and CF and they both have their strengths and weaknesses.	devonkim	13.673222	-4.377656	comment	3.0	14.0	1589977904	-6.7330723
23262637	I don't know much about it other tha	I don't know much about it other than what I've learned through the struggle of trying to set up a cluster.But why do so many projects depend on Zookeeper? What does it provide that couldn't be done through a embedded library? Seems like a lot of databases don't really need it. Is it worth the extra network dependency and operational complexity?	doliveira	13.559073	-4.8546586	comment	3.0	10.0	1590085430	9.878287
23272048	While there are many people here who	While there are many people here who are sharing their bad experience with MongoDB, just curious if you all find the experience with DynamoDB similar?Since they are both of the NoSQL family.	tmlee	13.538341	-4.9673166	comment	3.0	16.0	1590155554	9.742415
23273239	That sounds like open source to me, 	"That sounds like open source to me, I bet they're just being really conservative about saying ""open source"" because there's been so much backlash at MongoDB/Cockroach/etc for similar restrictions.It's restricted OSS because AWS takes things, runs them, and eats up all the potential revenue."	mrkurt	13.672616	-4.9864492	comment	3.0	28.0	1590161904	9.895845
23285874	How is this any different than Dynam	How is this any different than DynamoDB where you specify that you want either eventual consistency vs strong consistency? DDB also does eventual consistent reads by default.Is the argument that Mongo’s documentation isn’t clear?	scarface74	13.540773	-5.138987	comment	3.0	17.0	1590264089	9.713037
28075785	"> ""The odds of This number is equiva"	"> ""The odds of This number is equivalent to generating 1 billion UUIDs per second for about 85 years.""If we're talking about random files, sure.What if the files are intentionally created to match the desired hash? The malicious actor doing this could be a private party intending to disrupt your life, but it could also be law enforcement as a means of gaining access to your device when it would otherwise require a warrant."	Ancapistani	13.920808	-5.174073	comment	3.0	17.0	1628180071	-13.659779
28112175	1) Is outside contribution really im	1) Is outside contribution really important going forward? Most of the Elasticsearch contributors are probably already employed by Elastic.2) Open source doesn't attract new customers. There's nothing special about having software where anyone can contribute freely, that makes it attractive to customers. There is however, something special in making it free to download, setup and use in your own servers that makes it attractive. Which is still the case.	altdataseller	13.524925	-4.549973	comment	3.0	10.0	1628476323	-9.918864
28397954	Good point, but you could have the s	Good point, but you could have the sender/pusher process read from Kafka Connect and parse into a domain event before pushing.It sounds roundabout, but you're letting a battle-tested implementation handle the database-table-listening aspects with no special outbox implementation needed on the database write.	skrtskrt	13.538749	-5.0216107	comment	3.0	10.0	1630620223	-13.067232
28428617	I do this. I wish I didn't.First of 	I do this. I wish I didn't.First of all, building a provider isn't straightforward. The best way I've found to do this is to wrap `terraform init`, and have it `docker run` a build process for a plugin version that never existed - then dumping the built provider into the `.terraform` directory for the project. It's prone to failure; new users of the Terraform project complain that the build eats 8GB of RAM and takes many minutes.Second, providers are constantly changing, and it's not always possible to cleanly rebase a set of community changes on top of master. Part of the trouble with letting PRs wither on the vine is that they themselves become stale - in one case, the code still compiles, but the end result is completely wrong.For what it's worth: my use case was needing to use Terrafor	don-code	13.692959	-4.390327	comment	3.0	14.0	1630883198	-12.26197
28583883	Is there a good alternative?Does cou	Is there a good alternative?Does couchsurfing still work WELL if you’re willing to pay membership fees?	EGreg	13.678741	-5.1315074	comment	3.0	15.0	1632055429	-3.881585
28583902	My biggest issue with Terraform is t	My biggest issue with Terraform is the impedance mismatch between HCL and the rest of the known universe.When you write a provider, you spend half your time converting data structures from the HCL submitted to your provider into the JSON your target service inevitably expects, then you spend half your time converting the JSON your target service inevitably returns into HCL for Terraform to consume, and then you spend another half of your time fixing bugs and polishing.It's okay when you're building simple providers, but anything reasonably complex becomes unwieldy. I had a go at building some providers for AWS services that were not supported by Terraform or CloudFormation... and I just retreated to cheesy Lambda custom resources for CloudFormation.	jdub	13.6883335	-4.3857455	comment	3.0	12.0	1632055605	-5.53231
28584059	I've used https://github.com/Masterc	I've used https://github.com/Mastercard/terraform-provider-restapi successfully with a cloud provider which provides a suitable HTTP API. There was a bit of fiddling with JSON formatting and their API docs, but it wasn't too hard all in all.But like you say - now I've done that, I want to do it for every UI that I'm forced to log in to!	crabmusket	13.678117	-4.3889647	comment	3.0	10.0	1632057042	9.495423
28585248	And this setup is also encouraged by	"And this setup is also encouraged by HashiCorp (at least I saw a talk by them).
Use ansible for your “smart” sequential executions and Terraform as a sane wrapper for state."	weitzj	13.699505	-4.396895	comment	3.0	10.0	1632066360	9.538096
12058204	Would be curious to hear what Elasti	Would be curious to hear what Elasticsearch is doing wrong if you don't mind. I have no dog in the fight, I just always hear good things.	joslin01	13.523208	-4.709249	comment	3.0	15.0	1468007692	-9.998259
12110939	You can't exactly affix a number to 	You can't exactly affix a number to a specific gallon of bio-fuel. That's where the whole scheme goes off the rails, to create unique ids that only exist in spreadsheets with no 1-1 link to some quantity of product.It's a liquid, not a box of stuff.	jacquesm	13.947948	-5.1816015	comment	3.0	11.0	1468777170	-13.638197
12214709	The state management system always s	The state management system always struck me as very flawed design, and it's the reason I've not yet used Terraform.After all, it means that you have to start from scratch. If you any existing infrastructure — instances, load balancers, DNS, whatever — then anything you declare in Terraform will conflict, even if it's declared exactly identically.A workaround is to manually reverse-engineer your current state into a state file, or use a third-party tool like Terraforming [1], but it still breaks the second anyone (either accidentally or intentionally for whatever reasons) bypasses Terraform and touches the world directly, so Terraform simply isn't resilient by design. Surely one of the primary uses of a tool like this must be that if something is modified behind your back, you are secure i	atombender	13.712831	-4.3934703	comment	3.0	21.0	1470185823	-12.337779
12214879	I just wanted to offer the other sid	I just wanted to offer the other side. I do devops, we use Terraform, and we've had times when Terraform took action that was not present in the plan generated before applying, in production environments. We've also had times when it'll fail mid-apply, be stuck in an inconsistent state (IAM profiles and autoscaling group configurations, specifically), and require manual recovery through modifying or removing resources via the AWS console (although this might be better in the latest version).We'll continue to use Terraform at my day job, but I don't recommend it to colleagues nor clients if they use only AWS resources. Simplicity is the ultimate sophistication, and adding yet another abstraction does not contribute towards that philosophy.	toomuchtodo	13.665745	-4.3734345	comment	3.0	10.0	1470187604	9.503236
12214784	Terraform often beats CloudFormation	Terraform often beats CloudFormation to the punch for support of AWS services. Terraform is also far more friendly in terms of being able to preview what's going to happen and roll things back. If Cloudformation fails, it's really hard to fix, and too often you need to contact AWS to unstick a CF change. Basically you have no control over the process and you just have a poor web UI or a poorer API to interact with. When Terraform fails, the newest version gives you tools to edit and update your state and import existing resources, and even when things get ugly you are still in total control. In short, I have no reservations about endorsing Terraform over Cloudformation.	skywhopper	13.672737	-4.3734484	comment	3.0	13.0	1470186530	9.519998
12215789	This is a bug we just hit 5 minutes 	This is a bug we just hit 5 minutes ago on 0.6: One of our CD builds failed because of a configuration issue - a variable wasn't properly set, leading terraform to continuously ask jenkins' stdin for a password.We fixed the bug. But somehow, that previous build wiped the state file. When we pushed the fix, terraform freaked out and started deleting all our instances, including S3 redirects that weren't managed by it which we explicitly told it to ignore.That sucked.	scrollaway	13.695111	-4.3740344	comment	3.0	10.0	1470201937	9.521833
12340403	Let's see how terraforming this one 	Let's see how terraforming this one works out before we go off terraforming another.	jfoutz	13.7038	-4.370729	comment	3.0	14.0	1471911789	7.145211
12362921	Two main lessons for me:1. Always ru	Two main lessons for me:1. Always run services (e.g. ElasticSearch) with a unique user dedicated to that service and nothing else.2. You're never as secure as you think.	shawkinaw	13.523399	-4.741185	comment	3.0	19.0	1472163386	-9.972719
12456437	I'm one of the Kafka authors, so adm	I'm one of the Kafka authors, so admittedly my view might be slightly biasedHere is a quick comparison of Kafka and Pulsar:- Kafka is a complete streaming platform vs a messaging system which is what Pulsar is. Through Kafka Connect (http://www.confluent.io/blog/announcing-kafka-connect-buildi...), it has support for connectors to stream data between various sources and systems. Through Kafka Streams (http://www.confluent.io/blog/introducing-kafka-streams-strea...), it has support to do stream processing and transformations over Kafka topics.- Broad adoption base: Kafka is very widely adopted across thousands of companies worldwide. https://cwiki.apache.org/confluence/display/KAFKA/Powered+By</	nehanarkhede	13.5622015	-4.988984	comment	3.0	10.0	1473362840	-13.091501
12519368	FWIW, you can get Kafka packaged as 	FWIW, you can get Kafka packaged as a fully managed and HA service from https://aiven.io on AWS and also Azure, GCE and DigitalOcean.But if the Auth0 runs their entire operations on AWS, maybe Kinesis would have been a more natural transition.	htn	13.583547	-4.974005	comment	3.0	17.0	1474092467	-13.090548
12519418	You can deploy Kafka using DC/IO and	You can deploy Kafka using DC/IO and it takes care about HA for you. DC/IO is quickly becoming the go-to solution for database deployments. ArangoDB even recommends it as default.Now about Kafka vs ZeroMQ:  you want Kafka if you cannot tolerate the loss of even a single message. The append-only log with committed reader positions is a perfect fit for that.	Nimimi	13.53395	-4.999072	comment	3.0	11.0	1474093799	-13.099048
12519601	Use 5 zookeepers, on a separate set 	Use 5 zookeepers, on a separate set of servers.Use configuration management such as chef to allow you to quickly build new nodes and to roll out changes accross the cluster. You will need to make tweaks. The chef Kafka cookbook which  is the top result on Google has means of coordinating restarts of brokers accross the cluster. Use consul as a locking mechanism for this. You could use zookeeper, but consul works well for auto DNS registration and auto discovery.Use the yahoo Kafka-manager app to manage the cluster and to see what is going on.Don't use the Kafka default of storing data in /tmp/. Your OS will periodically clean it.	hashmp	13.544116	-4.976552	comment	3.0	10.0	1474099088	-13.079051
12954795	I've realized that there's seldom an	"I've realized that there's seldom an obvious ""identity"", because identity is never absolute, but needs context (""semantics""). Mathematically identity is just a function (of some key data to more data) but in practice part of the key is implied (in the program, runtime, database connection, external policies, whatever).For example, conventional URLs are often frowned upon because they don't ""exactly"" identify a document. Instead URLs involving hashsums, GUIDs etc. are proposed. I think that's a bad idea because while the hash sum is a quite precise identity, it's actually often too precise. I want to be able to edit a web document without having to create a new identity. When someone surfs the URL and gets the latest ""version"" that's fine. We could consider all versions ""identical"" for our "	jstimpfle	13.839778	-5.177537	comment	3.0	10.0	1479171716	-13.624653
13156185	Apologies, but what does this provid	Apologies, but what does this provide that Kafka doesn't already?	jsjohnst	13.669338	-4.9489985	comment	3.0	16.0	1481526032	10.506402
13317445	MySQL is the same with bind-address.	MySQL is the same with bind-address.  If someone chooses to expose a db/store to the world, it would be nice if there was some automatic auth enabled.  This isn't Mongo-specific, Elasticsearch is the same way.	nkozyra	13.627771	-5.0389094	comment	3.0	10.0	1483530424	-9.977337
21227794	"Their ""managed"" kafka service is eve"	"Their ""managed"" kafka service is even bigger clusterfuck- Doesn't expose metrics via JMX port- Doesn't support version upgrade- Doesn't support schema versioning afaik- Doesn't support adding a node or two to an existing clusterI could go on..."	alienreborn	13.573967	-4.99726	comment	3.0	11.0	1570823457	-13.11317
21271052	MongoDB used the AGPL for years but 	"MongoDB used the AGPL for years but transitioned to the SSPL when AGPL turned out to offer insufficient protection from being ""AWS""d.Mongo's explanation:  ""[there was] confusion in the marketplace about the trigger and scope of the Remote Network Interaction provision of AGPL"" [1]Though, ultimately, AWS's ""work-around"" to this arms-race was to reverse-engineer MongoDB, abiding by its interface & APIs to offer a drop-in replacement: DocumentDB. [2][1] https://www.mongodb.com/licensing/server-side-public-license...[2] https://aws.amazon.com/blogs/aws/new-amazon-documentdb-with-..."	zackbrown	13.706718	-5.110629	comment	3.0	12.0	1571237824	-13.02031
21331350	I think what the article greatly ski	I think what the article greatly skimps over is data migrations: what do you do if you need to change the format of your data? If you retain logs in Kafka indefinitely as the source of truth for your data, then if you need to migrate materialized data to a new format, you'll also need to either 1) support all the previous forms of materialized data so operations from the log are guaranteed to be safely replayable on it, or 2) don't do that and keep one form of materialized data and hope you have enough test coverage to make sure some unexpectedly old data doesn't silently corrupt your materialized data.Event sourcing is useful, but using it as a source of truth data store in itself instead of e.g. an occasional journalling mechanism seems pretty fraught.	vore	13.541394	-5.01684	comment	3.0	23.0	1571808204	-13.095109
21382820	> While AWS has ruffled a bunch of f	> While AWS has ruffled a bunch of feathers with their Elasticsearch and Kafka managed offeringsAlso DynamoDB (vs MongoDB)	a13n	13.558677	-4.8894844	comment	3.0	11.0	1572304706	-10.196549
21389672	Did you read what the issue is even 	"Did you read what the issue is even about? It's about setting the string ""terraform"" in a config file. It's not some personal data or evil tracking token."	dewey	13.734366	-4.3842516	comment	3.0	10.0	1572369776	9.499465
21518612	Is the primary advantage of Cockroac	Is the primary advantage of CockroachDB over FoundationDB primarily in supporting SQL out of the box? The multi-region support seems pretty banger at first glance.P.S.... and I had a tirade here about the licensing information being largely absent on their FAQ or product pages, but I did find this after a google before posting:https://www.cockroachlabs.com/blog/oss-relicensing-cockroach...which... from what I can tell at my cursory inspection, seems okay to me. I'd be pretty pissed too assuming a giant SaaS company came by, forked their product, and then resold it with improvements they didn't upstream. Mostly, because it's just fucking rude. One could have a good business relationship with another company with both prospering, but instead you take the short-n-shitty road for no reason...W	rubyn00bie	13.673706	-5.151604	comment	3.0	11.0	1573595880	9.898512
21560590	While this article's tone is somewha	"While this article's tone is somewhat angry and personal, it makes some quite interesting points and takes a perspective that I've never heard before.Before reading the article I was tentatively in favor of more expansive copyleft licenses such as Mongo's SSPL, for various reasons. But I hadn't considered something implied by that position, which this article says directly: The FSF and what one might call ""mainstream copyleft"" are aggressively defending corporate interests by attacking such licenses. Perhaps they (the FSF et al) don't do it intentionally, but that's nevertheless their effect..."	catern	13.730578	-5.1173806	comment	3.0	44.0	1574031437	-13.006644
21608339	You forgot the part about exposing y	You forgot the part about exposing your finished database to unprotected elasticsearch http endpoint ;)In all seriousness does anyone know why you can even host an elasticsearch database as http and without credentials? Seems to be the default. What is the use case for this?	davidhyde	13.551513	-4.7573104	comment	3.0	12.0	1574446949	-9.980805
39259951	By that logic serial-type ids are un	"By that logic serial-type ids are unsafe for use too, and much more vulnerable.I was kind of expecting some claim that actually exploits the inclusion of a hardware identifier, rather than ""don't use predictable numbers as secrets""."	stephenr	13.948347	-5.177325	comment	3.0	18.0	1707131981	-13.5837755
39261283	Trusting your clients to generate yo	Trusting your clients to generate your database IDs... What could go wrong?	beeboobaa	13.66369	-5.1593604	comment	3.0	15.0	1707141772	-1.1637752
39263242	For good security, you don't leak in	For good security, you don't leak internal IDs at all, sure. It is rare to find people doing that. And random primary keys (or any key really, and even more so for clustered indexes PK) really trash a db cache and locking systems.	sroussey	13.947826	-5.145757	comment	3.0	23.0	1707151497	-13.647432
39336914	Disclosure: I work for FusionAuth.If	Disclosure: I work for FusionAuth.If you are looking for SSO + easy configuration + an admin UI (which admittedly has a mid 2000s UX look and feel), you should check out FusionAuth. It's free to download and run yourself[0], docker friendly[1], has a variety of configuration choices[2] (including terraform[3] to manage your OIDC/other settings).Worth noting that it is free to use, but not open source[4].0: https://fusionauth.io/download1: https://fusionauth.io/docs/get-started/download-and-install/...2: https://fusionauth.io/docs/operate/deploy/configuration-mana...3: https://fusionauth.io/docs/operate/deploy/terraform	mooreds	13.706683	-4.340403	comment	3.0	21.0	1707674546	9.449663
18056722	Off: I chuckle everytime I’m misled 	Off: I chuckle everytime I’m misled like this when skimming through HN titles. Yesterday there was a piece about Kafka (the writer, not the event stream) and now this Mastodon stuff.	aaaaaaaaaab	13.667783	-4.951944	comment	3.0	11.0	1537788058	10.403259
18229315	Disclosure: I work for MongoDB.I sus	Disclosure: I work for MongoDB.I suspect some people are responding to what they've heard, so I just want to post section 13 of the SSPL here for everyone's convenience. This section is the only part of the SSPL that isn't exactly the GPL:> 13. Offering the Program as a Service.> If you make the functionality of the Program or a modified version available to third parties as a service, you must make the Service Source Code available via network download to everyone at no charge, under the terms of this License. Making the functionality of the Program or modified version available to third parties as a service includes, without limitation, enabling third parties to interact with the functionality of the Program or modified version remotely through a computer network, offering a service the 	metheus	13.74113	-5.1239758	comment	3.0	13.0	1539697741	-13.009289
18231053	> comfy taking OSS work, doing a ton	> comfy taking OSS work, doing a ton of proprietary development on it, and leaving the companies who did all the groundwork flailing in the windWell, that's one way to put it I guess. I personally am OK with anyone taking my work and doing a ton of proprietary development on it. I wouldn't put it out there that way if I wasn't (and don't w/ my proprietary stuff).We need to stop demonizing restrictionless development. Same with commercial/copy-left development of course, but I'm seeing too much copy-left righteousness these days. To each their own. Also, we need to stop being so prideful in our work that we consider some uses of it an affront. Sometimes when you make things available to the world at large sans restrictions you have misusers. That's ok. But hating the proverbial man tends to	kodablah	13.7239895	-5.141481	comment	3.0	13.0	1539709430	9.954954
29795017	To be fair, the whole hookup thing h	To be fair, the whole hookup thing hasn’t worked too badly for couchsurfing. Perhaps it’s just inevitable that people will use these sites to get laid?	rosndo	13.6486	-5.1166058	comment	3.0	12.0	1641306192	-3.9565458
29929301	MongoDB was licensed under AGPL – no	MongoDB was licensed under AGPL – not a permissive license – when AWS started free loading on them. Copyleft licenses have shown themselves to be no panacea when it comes to exploitation from the multi-billion-dollar companies. If Free Software can't feed its developers, they will look for food elsewhere.	HexDecOctBin	13.762624	-5.117896	comment	3.0	18.0	1642122387	-13.055775
30016166	When you're at Roblox's scale, it is	When you're at Roblox's scale, it is often difficult to know in advance whether you will have a lower MTTR by rolling back or fixing forward. If it takes you longer to resolve a problem by rolling back a significant change than by tweaking a configuration file, then rolling back is not the best action to take.Also, multiple changes may have confounded the analysis. Adjusting the Consul configuration may have been one of many changes that happened in the recent past, and certainly changes in client load could have been a possible culprit.	otterley	13.620842	-4.5222354	comment	3.0	10.0	1642717747	4.706802
30401543	"If you are using ""trigger events"" fo"	"If you are using ""trigger events"" for security reasons, wouldn't it be more appropriate to send an ephemeral ""eventID"" rather than an actual ""orderID""? Otherwise you may be leaking order IDs, which could potentially carry useful information for an attacker."	pphysch	13.862255	-5.178137	comment	3.0	12.0	1645313152	-13.51575
30438125	I've been using nginx for years beca	"I've been using nginx for years because ""everyone knows"" (is it even true anymore?) that it's more performant than apache, and I use a single dedicated server that is rather low-end, because the applications hosted on it are personal/hobby in nature and I don't need AWS/Azure/GCP scalability.How does caddy compare, performance-wise, to apache and nginx?"	na85	13.627002	-4.0468016	comment	3.0	11.0	1645595770	8.799433
30650109	What if that particular unique ID is	What if that particular unique ID is deleted right before the client requests the next page?	borrow	13.652656	-4.9905105	comment	3.0	10.0	1647076097	-9.001848
30700996	This sounds very similar to Kafka.	This sounds very similar to Kafka.	pmoriarty	13.659658	-4.964542	comment	3.0	10.0	1647448664	10.58008
18301743	"""offering a service the value of whi"	"""offering a service the value of which entirely or primarily derives from the value of the Program""That sounds pretty squishy and likely to be broader than just the use case of offering Mongo as a service."	tyingq	13.739847	-5.140952	comment	3.0	14.0	1540482062	10.00132
18301881	As a non-lawyer who's tried to under	"As a non-lawyer who's tried to understand copyright law, this analysis confuses me;  my understanding was that in the realm of source code ""by default"" you only have rights to use that source code through a license or contract, so it seems odd that any restriction on the terms would be misuse or detrimental to competition, when the option always exists to not use MongoDB.This isn't me trying to argue against the article; I'm trying to understand the law as it applies to my profession."	nicole_express	13.748723	-5.1473594	comment	3.0	15.0	1540482964	9.944672
18302063	Only a data point here -- after I re	Only a data point here -- after I read about this license change on HN, it took me about 2 hours to struggle over the issue, discuss with my team, and switch from MongoDB to PostgreSql. We are very lucky in that we were into this project for only two months, prototyping and learning the ropes with MongoDB schema. With PostgreSql now, everyone feels secure in a familiar territory. Yes, we have to make changes and its not rocket science to move over.The issue is not about having to buy a license here. The problem is the uncertainty with a product whose license agreement is being switched over mid-stream. It makes me weary of what else might happen with their license structure further down the road.	gtycomb	13.723445	-5.1621594	comment	3.0	20.0	1540484281	9.908094
18302149	Okay so after reading the article, a	Okay so after reading the article, and thinking about this for a while, I get the following out of this debacle:The issue here is that SaaS providers are building tools on top of MongoDB that effectively add functionality, instead of modifying MongoDB (which would force them to share those changes publicly).This is a valid concern and I understand the motivation behind the license change. However, how is this different from any other FOSS?Just as a random example, think of a proprietary blog/site provider like Tumblr and Weebly. They are effectively a SaaS provider that introduces tools on top of open-source web servers (like nginx or apache) to make hosting a website much easier. Instead of building the entire model/code of your website, you simply add customizations using a frontend.Mayb	princekolt	13.742287	-5.1324916	comment	3.0	11.0	1540484854	10.005943
18302743	Disclosure: I work for MongoDB. If y	"Disclosure: I work for MongoDB. If you look at these two threads you'll find my comments in them, addressing similar concerns to those raised in this one.https://news.ycombinator.com/item?id=18229452
https://news.ycombinator.com/item?id=18229013To reiterate those comments, the SSPL only affects people who are offering the licensed software to the public as a service. This does not include any software that uses MongoDB as a component, even if it's a commercial SaaS offering itself. The FAQ we put out here makes that clear: https://www.mongodb.com/licensing/server-side-public-license.... 99.999% of MongoDB users are not affected by this license change.People have expressed concerns that the 1) the FAQ is not the license, and 2) the language of the license does not make the intended responsi"	metheus	13.742686	-5.1251073	comment	3.0	17.0	1540489091	-13.052029
18353385	> The SSPL is not an open source lic	"> The SSPL is not an open source license.It seems like it is to me, it's just extremely protective of the source code owner's rights.>  ""Thou shall not compete with MongoDB.""Sounds to me like, ""thou shall not offer MongoDB, and your own custom tooling, in your cloud without talking to us about licensing fees or making your cloud tech open source."""	batty_alex	13.723518	-5.1119356	comment	3.0	15.0	1541076741	-13.00846
18360814	I'm curious what's HashiCorp's flags	I'm curious what's HashiCorp's flagship product? Is it really a combination of all their various projects?I only use Vagrant but it seems like it's in the process of being deprecated or at least de-emphasized.	amasad	13.722605	-4.373102	comment	3.0	15.0	1541134797	-12.576608
18360849	Terraform is the best you can get ri	Terraform is the best you can get right now but it’s still so incredibly painful to use. Every team I’ve ever been a part of is ultimately building a custom framework on top of terraform to spit out .tf files. It’s so frustrating.	whalesalad	13.697924	-4.3907814	comment	3.0	12.0	1541135626	9.511266
18564681	Most of the deployments of Kafka I'v	Most of the deployments of Kafka I've seen have been desperate attempts to work around poorly designed data architecture. You shouldn't need Kafka to handle a few hundred MB or a few GB of data per day. Twitter's scale is way beyond that, though and I can easily see the case for it there.	sidlls	13.569745	-5.0012994	comment	3.0	10.0	1543530035	-13.111674
18593531	There's a lot of survivor bias there	There's a lot of survivor bias there, however.A lot of works that were under-appreciated during their time had their extemporaneous advocates and promoters that had their own motivations that often had little to do with appreciation for the work.If Kafka's editor had listened to Kafka and burned his works instead of making sure they got on as many bookshelves as possible, or if Van Gogh didn't have the close relationship he had with his art-dealer brother, we almost certainly wouldn't remember their works today.I don't doubt their are many unknown masters ahead of their time that will forever remain in obscurity.	jszymborski	13.676317	-4.954151	comment	3.0	11.0	1543874389	10.52796
18717750	It looks like they wanted to run Mon	It looks like they wanted to run Mongo inside their own Amazon account- under their direct control. AWS could do that with Postgres while MongoDB couldn't.	lykr0n	13.699501	-5.111699	comment	3.0	16.0	1545242667	9.854587
18721899	It's a bit disturbing to me that the	It's a bit disturbing to me that they seem to be using AWS for confidential editorial work.> Due to editorial requirements, we needed to run the database cluster and OpsManager on our own infrastructure in AWS rather than using Mongo’s managed database offering.	AlexCoventry	13.686626	-5.112272	comment	3.0	24.0	1545270939	9.904741
18851609	Kafka’s Last Trial	Kafka’s Last Trial	lermontov	13.671581	-4.9539065	story	3.0	21.0	1546905574	10.534095
18870172	I was asking about DocumentDB, not M	"I was asking about DocumentDB, not MongoDB, but maybe I missed something. From their site:> Amazon DocumentDB implements the Apache 2.0 open source MongoDB 3.6 API by emulating the responses that a MongoDB client expects from a MongoDB server, allowing you to use your existing MongoDB drivers and tools with Amazon DocumentDBSo, is this a ""managed MongoDB"" or is it a NOSQL AmazonDB that just implements the same API as MongoDB? If the latter, I don't think we can assume this is the same thing as MongoDB, because the internals might be completely different."	anonytrary	13.671531	-5.1742105	comment	3.0	12.0	1547077196	-12.985542
18870571	How the heck was this approved by le	How the heck was this approved by legal? AWS is linking to MongoDB's own documentation.https://docs.aws.amazon.com/documentdb/latest/developerguide...Go to any operation, it links to docs.mongodb.com !	outworlder	13.705335	-5.1424675	comment	3.0	13.0	1547081447	-13.018207
18871048	Ultimately, Cantrill put it well:> .	"Ultimately, Cantrill put it well:> ...for those open source companies that still harbor magical beliefs, let me put this to you as directly as possible: cloud services providers are emphatically not going to license your proprietary software. I mean, you knew that, right?MongoDB Inc cannot make Amazon pay commercial license fees.  That is not a thing that will happen.  They have a lever in front of them with two positions, one of which is ""large cloud companies might use your software for free"", and the other is ""large cloud companies will not use your software at all"".  They didn't like the first option, so they gave the lever a yank, but they're not going to like the second option, and there is no third option.The way out is not to try and build a business on the assumption that people w"	Lazare	13.695738	-5.0668507	comment	3.0	25.0	1547087651	9.92219
18872504	Morally it might be questionable, if	"Morally it might be questionable, if it puts MongoDB out of business and reinforces the AWS ""monopoly"".However, MongoDB selected a free and open source license. This was always in the cards. They went with AGPL to keep the source maximally open for end users, but that never protected their revenue stream. (Some JS SDK companies used it for that purpose, where it makes some sene, but a DB is very different.)But if they had started with something proprietary uptake would have been very likely much less. And people would have continued to use mysql or Cassandra if they really needed something ""webscale""."	pas	13.679085	-5.180316	comment	3.0	11.0	1547110744	9.879343
18874108	It's not unreasonable to wish for a 	It's not unreasonable to wish for a middle ground where small actors don't have to pay and big actors do.> a license where something is free for noncommercial or limited commercial usage, and premium otherwise.That's basically what Mongo have switched to. Unfortunately, this broke other bits of community, because playing with licenses is actually not that easy.My point is that, maybe, we need a new license that can reflect the changed times. GPL 3 wanted to be that license, but it doesn't look like it succeeded. The new licenses attempted piecemeal by this or that company (like Mongo) will always fail to cut it, because the are typically not written by people with significant experience and knowledge in this particular field (license-writing).Maybe it's time for interested companies and ex	toyg	13.7372	-5.1324463	comment	3.0	11.0	1547131300	10.000652
18902978	> These companies are some of the bi	> These companies are some of the biggest contributors to open source.I wouldn't expect AWS to make a lot of code contributions to MongoDB when they've built something else that's 3.6 compatible, though. It's not like they're going to make contributions to a new, incompatible version of MongoDB. They've already made the call to fork.I agree with what you're saying about other products, but not this particular case.	BrentOzar	13.69649	-5.047707	comment	3.0	10.0	1547474815	9.9497385
18915612	Maxims that act on the symptom rathe	Maxims that act on the symptom rather than the problem rarely help in the end, as the problem just evolves to support its needs through other means.For example, sending a unique identifier is not the problem.  Tracking people through a unique identifier is.  So, depending on your goals, you can design a unique identifier system that does not allow tracking (or at least makes the tracking period so small as to be unuseful for purposes other than designed) as outlined in the article through changing the identifier on the client side weekly.If all you want to do is get a good estimate of how many users use what types of configurations of your software (major and minor version), a UUID that rotates weeks on the client side is perfectly acceptable to use for those statistics to a fair degree of	kbenson	13.970748	-5.182785	comment	3.0	28.0	1547588202	-13.65493
18926091	Having to reference security groups 	Having to reference security groups by id instead of name in cloudformation stacks, terraform, and a variety of other places is one of the most infuriating things.  Makes everything much more difficult to configure and maintain because the IDs are so opaque and unique.  Somebody has to do the grunt work of looking them and and copy/pasting them or writing scripts to propagate configuration forward.  What a waste of time and effort.	bmurphy1976	13.615722	-4.4307704	comment	3.0	10.0	1547677422	9.563366
18926237	I just hope CockroachLabs doesn't co	I just hope CockroachLabs doesn't come up with a dick move like the MongoDB SSPL license, it would really hurt me since I've been selling the thing and using it in all my new projects. I can't imagine the frustration of the Mongodb users right now.	bithavoc	13.72778	-5.14465	comment	3.0	11.0	1547678439	-13.004476
17371431	In the end of the day is about COST 	In the end of the day is about COST but we could have more machines doing builds and better ones but still takes more time and effort them being local. Terraform enterprise is not available for me. Since my project just uses Open Source besides AWS.AWS moves pretty FAST, but I don't know anything better than LocalStack fro AWS mocking.	diegopacheco	13.642293	-4.3658657	comment	3.0	12.0	1529643267	-8.797329
17371763	Truly competent Ops folks are settin	Truly competent Ops folks are setting up Terraform/Terragrunt modules for multiple providers and designing with cloud agnosticism in mind.If they aren't, either they're incompetent, the CTO is, or you don't really have a company yet.	busterarm	13.688736	-4.3778515	comment	3.0	19.0	1529647685	-12.364667
17399233	If you want to try the new Connect f	If you want to try the new Connect feature from Consul yourself, we've put up an interactive tutorial on our Instruqt learning platform, together with the nice folks at HashiCorp: https://play.instruqt.com/hashicorp/tracks/connect	mochtar	13.631586	-4.525978	comment	3.0	12.0	1530007271	-13.13098
17515960	I keep hearing how great Terraform i	I keep hearing how great Terraform is because it allows you to treat infrastructure as code in a cloud agnostic manner.  But every time I see a Terraform script, it's tied tightly to AWS's infrastructure -- including Hashicorp's own examples.	scarface74	13.699964	-4.3866324	comment	3.0	25.0	1531411788	9.498323
17523922	Disclaimer: I work for trivago and I	"Disclaimer: I work for trivago and I am partially responsible for the architecture behind trivago's Kafka use.I'd like to invite you to watch this talk and get a few more insights why we use Kafka in the ways we do: https://www.youtube.com/watch?v=cU0BCVl4bjoLet me try to come up with a TL;DR here:
trivago comes from a complete on-premise, central database point of view. Change Data Capture via Debezium into Kafka enables a lot of migration strategies into different directions (e.g. Cloud) in the first place, while not having the need to change everything on the spot.It seems like a common pattern to compare Kafka with a pure MQ technolgy. Kafka can also serve as a persistent data storage and a source of truth for data.I hope this makes the picture a bit more clear to you. Feel free to ask"	xenji_fm	13.569205	-4.9842525	comment	3.0	14.0	1531496787	-13.092319
17744393	> My recommendation is to treat CF a	"> My recommendation is to treat CF as a single point of failure. Once it gets in a broken state, you may have to destroy your stack and rebuildOne of the more common scenarios where CF gets into a broken state is:1) create new S3 bucket + something else (e.g. some Elastic Beanstalk env update)2) something else fails, causing rollback3) S3 bucket already contained data (e.g. your failed Elastic Beanstalk env update caused it to write data)4) CF refuses to destroy the S3 bucket, entering a ""rollback failed"" stateIn this cause, manually wiping the S3 bucket works well enough. But generally, it appears that CF works kind of when the updates you're making are really small, incremental updates.Sometimes it gets totally corrupted and you need to nuke stuff, per your advice.  This automatically le"	stingraycharles	13.590973	-4.3540797	comment	3.0	13.0	1534082684	-6.549179
17745366	I want to love Terraform but it's su	"I want to love Terraform but it's such a horrible platform to code on:* Error messages are overly verbose yet cryptic, and sometimes even unrelated to the actual error raised by the cloud provider themselves. Coupled with the lack of line numbering or other helpful identifier aside the unnecessarily long module hierarchy and debugging those scripts is a massive exercise in frustration and usually far more time wasted than really should ever be necessary.* HCL is a hateful ""language"". The fact you cannot order stuff procedurally means you're constantly running into dependency issues on larger deployments. And dont even get me started on the ""count"" kludge to work around a lack of proper iteration.* There is a lack of internal consistency with the support of different methods. Eg ""count"" doe"	laumars	13.70168	-4.398887	comment	3.0	13.0	1534095053	9.503372
16246891	Great post. It's always good to see 	"Great post. It's always good to see more examples of people putting these tools to work.With that said, I consider getting the AMI id dynamically to be an anti-pattern which undermines the principles of infrastructure-as-code. Specifically, it introduces an implicit build variable ""time of `terraform apply`"", which is not tracked in version control. Happily, because of Terraform's design, this sort of thing mostly won't cause your infrastructure to drift into unexpected states (e.g. production instance 1 running AMI X and production instance 2 running AMI Y). Within an environment, things should be consistent, but your staging environment may run AMI X while production is running AMI Y, and you wouldn't know from looking at your Terraform definitions.I previously wrote about similar ideas "	jbergknoff	13.71433	-4.404254	comment	3.0	15.0	1517072281	-12.233076
16246978	I use CloudFormation to manage simil	"I use CloudFormation to manage similar AWS web-app infrastructure. I've been continuously evaluating Terraform over the years (it is indeed maturing quickly), but have still decided to stick with CloudFormation for now, and would still continue to recommend the same for anyone managing an AWS-exclusive (or mostly-AWS) deployment.To respond to some specific items mentioned in this post:- ""Terraform has a more straightforward and powerful language (HCL) that makes it easier to write and review code.""It's easy to pipe configuration through your favorite 'straightforward and powerful' templating language of choice to generate the stack template used by CloudFormation. I definitely wouldn't use CloudFormation at all without an extra preprocessing step of some sort.- ""Terraform has another gem o"	wgjordan	13.612833	-4.3688006	comment	3.0	12.0	1517073597	9.540009
16249638	"Or, in other words: ""Just spin up th"	"Or, in other words: ""Just spin up this infrastructure -- which includes pre-generated SSH keys, an sshd that's apparently accessible from anywhere in the world, and a pre-compiled miner that you can't audit -- to mine some cryptocurrency -- for me -- at a huge loss"".Yeah, I think I'll pass.----ETA: The readme says to pass in ""wallet_address"" but I don't see that referenced anywhere in main.tf, although I do see this: https://github.com/17twenty/ethereum-miner-terraform/blob/ma....I've never used Terraform, though, so maybe I'm wrong, but it looks like you can pass a wallet address in, it just won't be used. If that's the case, I don't see how this is anything but a ""scam"". Someone who knows Terraform please look into this and tell me I'm wrong.One last thing: the readme says it uses the ""D"	jlgaddis	13.709478	-4.386533	comment	3.0	13.0	1517110627	-8.484642
16368067	Just a heads up, we tried to enable 	Just a heads up, we tried to enable H2 with haproxy 1.8.3 last week and had to roll it back because of a Firefox bug.  I believe it's this one, which doesn't seem to be getting much attention: https://bugzilla.mozilla.org/show_bug.cgi?id=1427256	linsomniac	13.523938	-4.097718	comment	3.0	11.0	1518537375	8.761285
36682610	I suppose that they are saying that 	I suppose that they are saying that CockroachDB is a single binary which you just drop on a machine and you are good to go. For ScyllaDB you need to install Java, Python and several ScyllaDB related packages.	aeyes	13.723595	-5.169207	comment	3.0	12.0	1689090226	9.974303
36744560	Taskfile looks heavily inspired by t	"Taskfile looks heavily inspired by terraform and other ""cloud native tooling (read: lots of yaml)"	KRAKRISMOTT	13.651508	-4.3768845	comment	3.0	11.0	1689493542	9.520119
36811244	> They can have privacy/security iss	> They can have privacy/security issues (you could guess things by the values of ids of stuff).Push them through a secure hash function, and that problem is solved too (assuming you can keep the base counter private).	p-e-w	13.948748	-5.1375237	comment	3.0	22.0	1689926490	-1.7057257
36813888	I don't think the author has tried P	I don't think the author has tried Pulumi, which can do exactly this kind of thing.	bovermyer	13.577617	-4.414365	comment	3.0	12.0	1689948261	2.6195877
38649378	Just a side thought, with all due re	"Just a side thought, with all due respect:> The controversial worldviews such as multi-cloud that we founded this company on are now mainstream and broadly accepted.Emm .. no. It is not mainstream. Multi-cloud may be forced choice for some regulated fintech, but no sane project will double the infra codebase just to get from ""lock-in"". I see no other benefits. And double the codebase is quadruple the bugs. This is main Terraform's sales pitch, and it has to die. IMHO."	nuker	13.569453	-4.3268123	comment	3.0	20.0	1702599307	9.420754
38667984	"Their license ""is to require that en"	"Their license ""is to require that enhancements to MongoDB be released to the community.""I think it only hurts people who want to freeride the project and extend it for selfish personal gains. That's OK by me."	ranting-moth	13.739934	-5.1654863	comment	3.0	10.0	1702762892	-9.1138115
38668118	Encryption at rest is not supported 	Encryption at rest is not supported in the community/free version of MongoDB.We built an email service (IMAP support added a month ago) and wrote a WebSocket to SQLite layer to solve our encryption at rest needs for storage.See our deep dive at https://forwardemail.net/blog/docs/best-quantum-safe-encrypt... for insight.	forwardemail	13.70508	-5.1031303	comment	3.0	10.0	1702763832	9.86114
38814250	Kafka is very much a boring Java tec	Kafka is very much a boring Java technology, and one that's pretty bad as well.	mgaunard	13.607899	-4.986355	comment	3.0	13.0	1703933568	10.531845
31789269	Could you elaborate why one would wa	Could you elaborate why one would want to do this besides for unifying everything to terraform.If you have already written cloudformation, you’d be losing a stack view which centrally describes things deployed in that AWS ac and how they are inter-related?	dhab	13.650582	-4.3677535	comment	3.0	10.0	1655555677	9.520538
31811644	Does AWS have a way to export your i	Does AWS have a way to export your infrastructure to a terraform file? Like if I start doing things via the dashboard and later want to use terraform?	polishdude20	13.67476	-4.384576	comment	3.0	14.0	1655739686	9.5181675
31962284	I would love a `terraform <plan|appl	I would love a `terraform <plan|apply> --nuke`.Not `destroy` - the opposite - destroy/nuke what I don't have in my config.	OJFord	13.706314	-4.3873544	comment	3.0	14.0	1656795216	9.449552
32096965	How to keep your Terraform code DRY 	How to keep your Terraform code DRY by using Terramate	katcipis	13.710499	-4.3811865	story	3.0	17.0	1657811231	9.471027
32203262	TL;DR This is a plug for Red panda.I	TL;DR This is a plug for Red panda.If you're going to look at Kafka inside of Kubernetes at all just look at running Apache Pulsar in K8s.One of the main arguments in this article is worry about exposing the broker but in Pulsar there is a proxy for this and the helm chart supports ingress public endpoint by just enabling a flag.	ckdarby	13.57337	-4.992783	comment	3.0	10.0	1658583751	-13.181834
32267875	Thanks, this comment made it very cl	Thanks, this comment made it very clear to me that I never want to touch a terraform system.	eurasiantiger	13.706969	-4.3821387	comment	3.0	11.0	1659030674	9.450694
32388031	If TF was generic, your tool wouldn'	If TF was generic, your tool wouldn't be needed.My experience with TF is that it is a terrible SMT because they did non-backwards-compatible upgrades to the state file... which made it impossible to redeploy and I had to not only start over with the state file but also recode a bunch of my TF code to support the underlying plugin changes.Of course this was long ago before it was a final 1.0 version so I'm supposed to give some flex there, but it put me off badly enough that I'd never consider TF a SMT.At the end of the day, as long as your tool is on top of TF, it will always be a function of the developer to understand all of the idiosyncrasies of not only the different cloud layers, but also the underlying tool. I think you're trying to solve a great problem, but basing it on TF doesn't 	latchkey	13.578493	-4.354382	comment	3.0	18.0	1659977901	-6.5634184
32398418	Devs writing Terraform means ops doe	Devs writing Terraform means ops doesn't move fast enough.  Fix ops instead of forcing the teams to roll their own.	candiddevmike	13.707106	-4.38342	comment	3.0	15.0	1660055048	9.523186
32398529	The layers of AWSCDK leads to a lot 	The layers of AWSCDK leads to a lot of brittleness, and that was a huge turn-off for us. I like the thought of building systems in a functional way but the tooling just isn't there yet. I haven't dived too deep into Terraform CDK yet, and Pulumi just had too many problems.	brodouevencode	13.667853	-4.3932047	comment	3.0	11.0	1660055481	9.522389
32438882	I need to jump between different ver	I need to jump between different versions of terraform, terragrunt, python, ... all the time for work. asdf is an absolute asset and makes that so much easier. I can heavily recommend giving it a try! I've even embedded it into our default CI image, as it allows me to very easily install consistent versions of many utilities, while also allowing to override versions by choice afterwards.	thunfisch	13.692051	-4.3985333	comment	3.0	13.0	1660313301	9.563001
32440085	I agree with this. I manage a monore	I agree with this. I manage a monorepo of 10s of terraform/terragrunt modules most of which are deployed to a k8s cluster.the whole point of code as infrastructure is that your git repo is an audit log of whats changed in your infra. Once you leave it up to operators or persistent volume claim templates (or whatever else makes side effectful changes with being told) you're throwing all that niceness of control out the window.	dmead	13.700559	-4.3917055	comment	3.0	10.0	1660318383	13.725301
22012358	Naive question from someone who does	Naive question from someone who doesn't know the ecosystem well:It seems to me like Terraform is good at describing desired deployment shapes and detecting drift between actual state and desired state.Can someone clue me into why Terraform hasn't caught on as the abstraction above/that drives K8S?	idan	13.655681	-4.4175115	comment	3.0	13.0	1578675430	-13.472592
22069850	Sys admins are dead. I have GKE now 	Sys admins are dead. I have GKE now via a reliable Terraform module. None of my production instances can be logged onto.	scarejunba	13.687018	-4.3479147	comment	3.0	14.0	1579214689	9.411316
38932480	When you would use this over Kafka, 	When you would use this over Kafka, Pulsar, Kinesis, NATS, RedPanda, Fluvio, etc.?I found this comparison from 2023 https://gcore.com/learning/nats-rabbitmq-nsq-kafka-compariso...	esafak	13.563874	-4.972556	comment	3.0	10.0	1704836305	-13.119375
39357401	The writing is really enjoyable.> Pr	The writing is really enjoyable.> Programming in this state is like living life surrounded by a force field that protects you from all harm. [...] We deleted all of our dependencies (including Zookeeper) because they had bugs, and wrote our own Paxos implementation in very little time and it _had no bugs_.Being able to make that statement and back it by evidence must be indeed a cool thing.	Rygian	13.554595	-4.8727183	comment	3.0	18.0	1707831067	9.856587
39374648	> The main problem with it is that e	"> The main problem with it is that everybody provides example configurations in the nginx config format, so I have to read them, understand them, and translate them.This is so real. I call it ""doc-lock"" or documentation lock-in. I don't really know a good scalable way to solve this faster than the natural passage of time and growth of the Caddy project."	mholt	13.655142	-4.0066504	comment	3.0	14.0	1707941595	8.810474
39530964	At the company I work for we send js	At the company I work for we send json to kafka and subsiquently to Elastic search with great effect. That's basically 'wide events'. The magical thing about hooking up a bunch of pipelines with kafka is that all of a sudden your observability/metrics system becomes an amazing API for extending systems with aditional automations. Want to do something when a router connects to a network? Just subscribe to this kafka topic here. It doesn't matter that the topic was origionally intended just to log some events. We even created an open source library for writing and running these,pipelines in jupyter. Here's a super simple example https://github.com/bitswan-space/BitSwan/blob/master/example...People tend to think kafka is hard, but as you can see from the example, it can be extremely easy.	timthelion	13.534719	-5.0040574	comment	3.0	20.0	1709072574	-13.085245
39531172	This works well for a while. But eve	This works well for a while. But eventually you get big, and have little to no idea of what is in your downstream. Then every single format change in any event you write must be treated like open heart surgery, because tracing your data dependencies is unreliable.Sometimes it seems that it's fixable by 'just having a list of people listening', and then you look and all that some of them do is mildly transform your data and pass it along. It doesn't take long before people realize that. 'just logging some events' is making future promises to other teams you don't know about, and people start being terrified of emitting anything.This is a story I've seen in at least 4 places in my career. Making data available to other people is not any less scary in kafka than it was back in the days where 	hibikir	13.5465	-4.9950104	comment	3.0	10.0	1709073698	-13.10936
39614095	Beginner here, but shouldn't `terraf	Beginner here, but shouldn't `terraform destroy` make this very easy? Assuming you deploy everything with IaC.	ralphist	13.702174	-4.3869176	comment	3.0	16.0	1709718006	9.466785
39634507	> It's not unusual for authors to ex	> It's not unusual for authors to express a desire for their unpublished works to be destroyed. Kafka wanted all his unpublished works to be destroyed - consider these are most of his known works now, we're quite lucky his executor, Max Brod, defied his wishes.Are we lucky, or was Kafka unlucky?I find the lack of respect about authors' wishes very shocking.	csdvrx	13.667402	-4.955108	comment	3.0	38.0	1709845143	10.523022
32657688	> There’s company-wide alignment on 	> There’s company-wide alignment on delivering the best user experience possible. That means sales, marketing, product engineering, product design, and customer success all channel their efforts into creating a product that provides an unparalleled UX. Product development puts all departments on the same wavelength in terms of the end goal.Who the fuck are they talking about? Clearly not HashiCorp. The most popular tool in HashiCorp's ecosystem that wasn't written by them was written by a consulting firm who hated HashiCorp's UX. Hashi is like Amazon: shitty UX, but features that capture a market early, and so they remain a dominant player despite shitty UX and unnecessary overcomplicated bullshit.There are only two things that you need to succeed with open source. 1) solve a problem nobod	throwaway787544	13.722287	-4.3647285	comment	3.0	38.0	1661913238	13.275728
32694402	MongoDB is effectively licensed unde	MongoDB is effectively licensed under the AGPL and seems to have no problem being used by corporations of all sizes.	boucher	13.731628	-5.144978	comment	3.0	15.0	1662144351	-13.018221
32697102	You can mix using Terraform modules 	You can mix using Terraform modules written in Terraform CDK and regular Terraform HCL.  Really there's no good reason to use Pulumi (or AWS CDK...) anymore IMHO.	candiddevmike	13.67983	-4.397932	comment	3.0	16.0	1662163176	9.469871
32865132	Weird that they didn't use HAProxy i	Weird that they didn't use HAProxy in the first place if they are (apparently) not even using it to serve files from filesystem	xani_	13.520026	-4.110062	comment	3.0	19.0	1663330839	8.766436
32867970	This is a great writeup overall. I w	This is a great writeup overall. I was happy to see Tyler's initial outreach before conducting his tests [0]. However, please note that these tests are also being revised shortly after some brief feedback [1]:- The sendfile tests at the end actually didn't use sendfile, so expect much greater performance there.- All the Caddy tests had metrics enabled, which are known[2] to be quite slow currently. Nginx does not emit metrics in its configuration, so in that sense the tests are a bit uneven. From my own tests, when I remove metrics code, Caddy is 10-20% faster. (We're working on addressing that [3].)- The tests in this article did not tune reverse proxy buffers, which are 4KB by default. I was able to see moderate performance improvements (depending on the size of payload) by reducing the 	mholt	13.710427	-3.9525197	comment	3.0	22.0	1663343883	8.834673
16446725	So the idea is that you would choose	So the idea is that you would choose your changes in the GUI, but instead of actually changing the target, it spits out the required code to do it for you in a repeatable way?I would definitely find that useful for Terraform and Cloudformation. Searching for it, I see that AWS has a tool targeted at that: Cloudformation Designer.https://aws.amazon.com/blogs/aws/new-aws-cloudformation-desi...https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGui...	sciurus	13.629293	-4.3508067	comment	3.0	24.0	1519398736	9.475696
16537436	"I totally agree, but having ""infrast"	"I totally agree, but having ""infrastructure as code"" means less documentation.Instead of documenting all the commands involved in configuring a machine as service X (ssh, run apt-get, paste this, etc.), I have documentation on how work with the configuration management system (roles in the roles/ directory, each node gets one role, commit to git, open PR, etc.). That documentation is in .md files in the config management source repo.Instead of documenting how to rack a server (print and attach label to front and back, plug power into separate PDUs, enter PDU ports into management database, etc.), I document Terraform conventions (use module foo, name it xxx-yyy, tag with zzz, etc.).It ends up being less documentation, as the ""code"" serves to document the steps taken, so the documentation c"	antoncohen	13.697169	-4.3940973	comment	3.0	10.0	1520439961	9.526172
16576877	Ask HN: Ansible vs. Terraform	Ask HN: Ansible vs. Terraform	albertlie	13.696045	-4.408477	story	3.0	11.0	1520954809	9.51279
16596334	"Probably this:""The term ""Kafkaesque"""	"Probably this:""The term ""Kafkaesque"" is used to describe concepts and situations reminiscent of his work, particularly Der Process (The Trial) and ""Die Verwandlung"" (The Metamorphosis). Examples include instances in which bureaucracies overpower people, often in a surreal, nightmarish milieu which evokes feelings of senselessness, disorientation, and helplessness.""https://en.wikipedia.org/wiki/Franz_Kafka#""Kafkaesque"""	ranie93	13.669865	-4.939076	comment	3.0	10.0	1521146285	10.548754
16755313	are people really serious when they 	are people really serious when they say they won't use the product because of its name or is this some kind of HN meme where everyone complains about the name everytime there is an article on cockroachDB	benmmurphy	13.722848	-5.179331	comment	3.0	13.0	1522853870	-4.5963774
19342397	Very cool. Are there any public repo	Very cool. Are there any public repositories of puz files, or at least some sample puz file to test this out?	semitext	13.538005	-4.7819414	comment	3.0	12.0	1552080732	8.617162
19567236	What you want is something akin to T	What you want is something akin to Terra: http://terralang.org/	anon4242	13.687754	-4.39052	comment	3.0	10.0	1554325247	9.537825
19660846	this is spot on. drop terraform and 	this is spot on. drop terraform and go with cloudformation. initially set it up throgh the console to learn what needs to be done and after that write the template or even better find one someone has already written.pro level startup: set it manually and use cloudformer.+1 on the comments regarding wiring and lambda in non-vpc vs vpc contextalso, if you want K8s, there is this thing called EKS.	mirceal	13.660204	-4.366846	comment	3.0	16.0	1555266258	9.493599
19752255	Elastic.co the n'th most valuable co	Elastic.co the n'th most valuable company on Earth and controlled by Earth's n'th most wealthy human being, cloned an open-source project, Lucene, made it easier to operate, and then sold access to it.	zknz	13.52048	-4.566161	comment	3.0	10.0	1556224504	-9.934216
19754961	Your moral position is based on mark	Your moral position is based on market capitalization?The core piece of ElasticSearch's technology is Lucene, an open soure project. Elastic the company uses this open source work to become a 5 billion dollar company.The core piece of AWS's ES service is ElasticSearch, an open source project. Amazon the company uses this open source work to further enrich themselves.Amazon is bad because they're a 1 trillion dollar company. Elastic is OK because they're a 5 billion dollar company.	ctvo	13.534226	-4.516044	comment	3.0	12.0	1556254715	-9.909951
19888511	Kafka, a Czech, wrote in German.	Kafka, a Czech, wrote in German.	thanatropism	13.673082	-4.958191	comment	3.0	10.0	1557610427	10.530163
19890422	There shouldn't be separate endpoint	There shouldn't be separate endpoints that take an owner's ID. That's bad design. The owner endpoint should contain a list of invoices, ie. links to the invoice endpoint.	rich-tea	13.530303	-5.0200644	comment	3.0	14.0	1557640826	9.586835
24759990	I never got the hand of cloud format	I never got the hand of cloud formation. I suppose it is nice from a visual (drag and drop) point of view, but I couldn't use it in production and moved on to manage my architecture with terraform.	jsemrau	13.552823	-4.31415	comment	3.0	11.0	1602540397	-1.573806
24780665	Argh. I already find it a nightmare 	Argh. I already find it a nightmare to figure out how to combine hashicorp tools together. Now there's one more! ;)E.g, if I want a Consul backed Vault, whilst using Vault to generate TLS certs or other creds for Consul. Especially if I want to run either/both of those services using Nomad, backed by Consul. Hopefully I wont have the option of authenticating against any of these services using Boundary. Especially if Boundary is backed by Consul.	mike-cardwell	13.70706	-4.4286313	comment	3.0	14.0	1602704463	-12.905412
24786648	If you are having issues with multip	If you are having issues with multiple concurrent state reads you should definitely consider splitting your project into smaller discrete modules. I see a lot of projects where an entire AWS account is managed by Terraform using a single state file. This is insanity in my opinion.It does simplify architecture in a way because everything can be referenced directly in the same projet, but you quickly run ito collaboration issues and runtimes get really long. Use logical states for each discrete piece of a service/module and have those output the needed config/info. Then reference those outputs from other states/modules.This is the only way I've seen to really scale a TF project effectively. It's not perfect but it's workable even for large teams.	ciguy	13.665736	-4.3641386	comment	3.0	15.0	1602754447	9.492777
24788021	I have experience with contributing 	I have experience with contributing to both Terraform core, and a provider.The core community maintenance is one of the most responsive and efficient that I've every worked with. Therefore, if they love to shout about day 0 support, I think they have the rights.The provider project I've contributed to, or better, tried to, has been a complete trainwreck. Many devs discussing on an issue, maintainers ignoring the issue for a long time, then maintainer stepped in with a fundamentally incompetent comment, then disappearing again. This is odd, because the provider is maintained by Hashicorp employees.There are polite and communicative ways of explaining why it's not possible to work on a fix/feature; that maintenance was far from this.I suppose that they Hashicorp has a specific plan of mainta	pizza234	13.721699	-4.3841505	comment	3.0	13.0	1602766089	-12.423705
24814399	This is my greatest fear when it com	This is my greatest fear when it comes to terraform:> terraform destroy(And either a confirmation or a flag) and everything is deleted.I know you can add some locks but still :/	webel0	13.7081995	-4.382987	comment	3.0	10.0	1602978458	9.43653
24893920	> I disabled nginx on the server and	> I disabled nginx on the server and installed Caddy instead.I wonder how a somehow simpler config syntax (Caddyfile) compares to a simpler maintenance system (apt).	jeromenerf	13.7079115	-3.9612997	comment	3.0	13.0	1603701015	-11.343807
24976984	I have no faith in AWS executing on 	I have no faith in AWS executing on this successfully. I'd imagine an offering like the suggested one would have some kind of: a) UI to inspect the state of other clouds, b) provisioning capability that allows creation of resources in other clouds.On the UI front:- AWS UI toolkit has aged by this point and each day it feels more dated- CloudFormation, as their main cloud management UI is particularly bad (e.g. limited info on what caused a problem, not displaying ARNs of resources belonging to a stack systematically etc.)On the provisioning front:- Terraform and Pulumi are so much better than anything AWS offers, and that says something because even these tools are not great.	plesiv	13.58023	-4.321255	comment	3.0	17.0	1604385363	9.473317
25112892	Conflict of interest: I'm happily us	Conflict of interest: I'm happily using Pulsar, I come from an extensive Kafka system, and would like to see Pulsar win this entire space personally.I see some differences, instead of Pulsar functions RedPanda has gone the extra step of using WASM, suspect the Pulsar community will end up going this direction as the whole community begins this push forward.Got rid of Zookeeper, I've never truly understood the hatred toward Zookeeper aside from the viewpoint of it being one more external dependency the project requires.Compatible Kafka API, this is a smart business choice to grab up any business using Kafka that is unhappy with the operational costs of Kafka and want to move off. Pulsar has a connector for Kafka which lets a business leave their existing work entirely untouched and stream t	ckdarby	13.575891	-4.9738398	comment	3.0	12.0	1605540680	-13.13797
25181440	"If your only comparison is ""I used t"	"If your only comparison is ""I used to work with Heroku"", Terraform might seem not great. I would argue this is a blub example, in that this person's lens does not contain enough context or experience to be able to assess value.Terraform's value becomes clear when moving in scenarios like moving from CloudFormation to Terraform, or when trying to integrate a second cloud's resources into your infrastructure workflow.  Without experience in anything other than Heroku, of course a tool designed to do many many things is going to seem complex and at times frustrating.> Iteration times are way longer than with even mobile apps. Like, “you’re liable to task-switch while waiting to see plan output” longer.I'm over here laughing in my ""over an hour of CloudFormation only to have a run fail, and th"	_5yoy	13.68459	-4.37754	comment	3.0	28.0	1606081923	9.479521
25183200	I'm seriously considering switching 	I'm seriously considering switching to pulumi, mostly because it seems a lot more flexible. Not to mention that developers are already familiar with the language rather than having to learn all the quirks and inconsistencies of hcl on top of using the tool itself	thayne	13.650778	-4.4385734	comment	3.0	10.0	1606100543	9.472451
25272773	> Money I'd rather spend on learning	> Money I'd rather spend on learning and mastering standard, open and portable systems.That's where Terraform comes in.	busterarm	13.700287	-4.3859115	comment	3.0	10.0	1606877804	9.510411
25347696	Another potential misuse of Kafka I'	Another potential misuse of Kafka I've been wondering about is how a single Kafka instance/cluster is often shared by multiple microservices.On one hand the ability to connect multiple microservices to a central message broker is convenient, but on the the other hand this goes against the microservice philosophy of not sharing subcomponents (databases, etc). I wonder where the lines should be drawn.	jkarneges	13.562507	-4.9889007	comment	3.0	16.0	1607445856	-13.094869
25349017	Ok. I admit using Kafka as DB is not	Ok. I admit using Kafka as DB is not straight forward but just stating it doesn't provide ACID functionality is not enough.The example they give is very simplistic. With the correct design of kafka topics and events the problem of the example can be fixed.And according to oracle https://www.oracle.com/database/what-is-database/ :> A database is an organized collection of structured information, or data, typically stored electronically in a computer system.So Kafka clearly fits that definition.	je42	13.52631	-5.061371	comment	3.0	12.0	1607450542	-13.075582
25349251	Is this really a thing? Do people re	Is this really a thing? Do people really try to use Kafka as the system of record for financial transactions or similar data?	hodgesrm	13.569001	-5.0130744	comment	3.0	15.0	1607451502	-13.11499
25349511	Hell yes.  Best thing I ever did.Upd	Hell yes.  Best thing I ever did.Updating balances using an RDBMS is like managing your finances with pencils and erasers.  Unless you somehow ban the UPDATE statement.Updating balances with Kafka is like working in pen.  You can't[1] change the ledger lines, you can only add corrections after the fact.[1] Yes, Kafka records can be updated/deleted depending on configuration.  But when your codebase is written around append-only operations, in-place mutations are hard and corrections are easy, so your fellow programmers fall into the 'pit of success'.	mrkeen	13.547852	-5.022996	comment	3.0	12.0	1607452601	-13.091867
25364878	I'd replace mongo with redis in your	"I'd replace mongo with redis in your comment. Redis truly is open core, but mongo no longer is. Now it's source available, and has been removed from the repos of many distros.Calling mongo open source now just dilutes what ""open source"" actually means. The organization even removed the submission of its license for approval by the OSI.It's source available, and it's up to each person to decide whether that's good or bad."	julianmarq	13.713255	-5.1626334	comment	3.0	27.0	1607547617	9.894066
25423872	I wonder what is the idea behind nam	I wonder what is the idea behind naming their product Cockroach, and how does the name affect people's first impression of it? Is there a story behind this name? Is the founder an enthusiast entomologist?	didibus	13.713947	-5.1761026	comment	3.0	17.0	1607982733	-4.584221
25591164	I’m building data pipelines in AWS (	I’m building data pipelines in AWS (s3/sqs/dynamo/api gw/lambda/batch) + Snowflake.Earlier this year I tried to use Terraform for everything, using principle “everything is a resource” (everything in my case is AWS, Datadog and Snowflake), so adopted “terraform apply” as universal deployment interface. Like if we need a ECR task and a Docker image, build the image from within Terraform (using null_resource which runs “docker build”). This approach works for everything but Lambda as Terraform requires a pointer to source code bundle at the plan stage. After unsuccessful fights I gave up for Lambda, so I build bundles prior to “terraform apply” (using “make build”, where build target does its magic of zipping either Go binary or Babashka Clojure sources).That approach scales well for already	schmooser	13.666264	-4.3940835	comment	3.0	20.0	1609407723	9.512462
25591481	I tried it, doesn’t work - Lambda re	I tried it, doesn’t work - Lambda resource needs hash sum to compare against previous deployment to trigger updates of the source bundle, and Terraform needs a file to be present during plan stage. With null_resource the file is created after plan, during apply. To workaround this I tried to provide something else to bundle hash sum (like hash sum of source files, not bundle), but the value that TF keeps in the state is the one returned from AWS Lambda API, not the one you supply it; so it causes resource update on every apply, this is not what I wanted.Your comment made me think of trying to skip bothering with Lambda’ hash sums and use custom refresh triggers instead, initiated by null_resource. Will do after holidays.	schmooser	13.681894	-4.3958535	comment	3.0	11.0	1609411035	9.510626
25611609	Pulumi vs. Terraform – Hypergrowth i	Pulumi vs. Terraform – Hypergrowth in the Valley	stock_toaster	13.684733	-4.386428	story	3.0	15.0	1609581505	9.515148
25613089	The moment you need control flow to 	The moment you need control flow to define your resources, I'd argue that you're verging away from the realm of declarative infrastructure.I'm using Terraform to manage 10^4 machines in combination with sane CI/CD, Bash/JQ (for dealing with Terraform outputs), Packer and Ansible.  Everytime I see somebody reaching to a full programming language to define their infrastructure, they seem to be doing too much with one tool.Terraform should merely provision things and in that role I find it fine as is. Preferred, even.	busterarm	13.680919	-4.3949256	comment	3.0	25.0	1609598391	9.504829
35531569	When you’re dealing with billions of	When you’re dealing with billions of messages, i think queuing systems may be tuned more for it?I’d like to hear why people chose Kafka over some RDBMS tables.	TedDoesntTalk	13.539499	-4.9982533	comment	3.0	12.0	1681247227	-13.077848
35545648	MongoDB’s source code is still freel	MongoDB’s source code is still freely available. It’s still actively developed in the open on GitHub. Unless you’re offering MongoDB as a service, it’s just as “open source” as ever.If you want to offer MongoDB as a service, you can still do so free of charge, as long as the service infrastructure is also made openly available, right? And if you don’t want to make the source available, you can purchase a license and do so, right?Furthermore, if you’re using MongoDB, be it self-hosted, with a vendor, or even some proprietary database that implements the wire protocol for compatibility, you’re likely using MongoDB-developed clients/drivers, which are Apache 2.0 (“OSI-approved open source”).So it seems like the only way to be locked into a vendor is if you’re using MongoDB drivers to connect 	vrtx0	13.735384	-5.163624	comment	3.0	12.0	1681328644	9.963864
35635433	Any reason you can't shove it into K	Any reason you can't shove it into Kafka?	RhodesianHunter	13.626242	-4.9824433	comment	3.0	11.0	1681955367	10.551083
35648791	Writing a Custom Input Connector	Writing a Custom Input Connector	oli_kitty	13.565239	-4.9997077	story	3.0	12.0	1682040416	-13.123562
35688428	They forked it when the upstream pro	They forked it when the upstream project switched to using a non-open-source license. This is a reasonable thing to do if your goal is to run FOSS and if you have the resources to maintain it.Notably, you could build GPL software on top of OpenSearch. You could not do so on top of ElasticSearch at the moment.	ryukafalz	13.5199585	-4.647947	comment	3.0	17.0	1682348236	-9.961136
28718490	Looks pretty nice. The codebase is h	Looks pretty nice. The codebase is half typescript and half Java? Guessing that is because Kafka is written in Java.Another question: how might this compare to the Confluent web GUI? Obviously this is open source which is great.	epberry	13.614423	-4.9792504	comment	3.0	14.0	1633096683	10.551767
28779174	Agree. CF is not a magic bullet, but	Agree. CF is not a magic bullet, but neither is ansible or terraform.We used ansible heavily with AWS for 2 years. Then we decided to gut it out and do CF directly. Why? If we want to switch clouds, it's not like the ansible or terraform modules are transferable ... So might as well go the native supported route.I agree with the article, messages can be cryptic, but at the end of the day, I have a CF stack that represents an entity. I can blow away the stack, and if there's any failure or issue, I can escalate my permissions and kill it again. Still a problem? Then it's AWS's fault and a ticket away (though I've only had to do this once in 5 years and > 150,000 CF stacks.I also would argue, if a stack deletion stalls development, you are probably using hard-coded stack names, which isn't w	ldoughty	13.604171	-4.3689823	comment	3.0	15.0	1633558571	-6.4970193
28779191	The rollback functionality of CF is 	"The rollback functionality of CF is a blessing. We use both CF and Terraform at my company and i vividly recall multiple times where my connection had cut out during ""terraform apply"" and left the Terraform infrastructure in a half-finished state."	zapt02	13.644552	-4.3680305	comment	3.0	11.0	1633558669	-6.611266
28779334	I'm always surprised that more peopl	I'm always surprised that more people arent aware of CDK. Its an extremely powerful way to write software. Especially once you get good at it. CFN pales in comparison, CDK to me feels like the future of software development.	fdgsdfogijq	13.588862	-4.21414	comment	3.0	15.0	1633559732	-8.046942
28779438	I’m confused. Isn’t Ansible and Clou	I’m confused. Isn’t Ansible and CloudFormation what apple is to an orange with completely different use cases and purpose?One is a configuration management and deployment tool.The other one is cloud resource provisioning service.They’re meant to work in tandem, not one to replace another.	HatchedLake721	13.646491	-4.394581	comment	3.0	12.0	1633560343	9.497242
28781684	I'm ex AWS so I used CloudFormation 	I'm ex AWS so I used CloudFormation sort of because I had to (I guess, no one told me not to use terraform, but it felt wrong not to drink our own champaign). I left AWS to co-found a startup and when I had to pick between the two, I just used what I knew already (CloudFormation, but more specifically CDK). I have to say I am highly tempted to give Terraform a look, but if I do, it will be terraform + CDK probably: https://github.com/hashicorp/terraform-cdkFor me troubleshooting, speed, and that punch in the gut feeling when you see after 30 mins of crunching the dreadful - update failed rollback in progress - are great reasons to give Terraform a try.AWS should fix this by making the SDK/API be 1:1 with infra as code. The result of a describe call should === the stuff needed to create tha	eranation	13.662698	-4.373076	comment	3.0	12.0	1633579320	9.510833
28986392	How do people deploy this stuff decl	"How do people deploy this stuff declaratively, especially cleaning up old functions? I'm still surprised something terraform-esque doesn't exist.Bunch of SQL scripts with ""CREATE OR REPLACE"" and cross your fingers? Make a schema that a script can wholly own, then blow the whole thing away and reinitialize in a transaction?"	code_biologist	13.694412	-4.3904943	comment	3.0	12.0	1635159632	9.522101
34185780	I have a cluster using terraform-hcl	I have a cluster using terraform-hcloud-kube-hetzner [0] and I'm quite happy with it.It uses MicroOS for rolling releases and auto-upgrades for less maintenance. I'm quite happy with it so far, and I like that it integrates with terraform.[0] https://github.com/kube-hetzner/terraform-hcloud-kube-hetzne...	xrendan	13.672058	-4.3880806	comment	3.0	21.0	1672413528	9.543001
34338818	Then I guess it's a question to the 	Then I guess it's a question to the startup I'm working at - why in the world did they overcomplicate so much stuff when in fact we have constant number of environments, workers, load balancers? In fact, every engineer in the company is very much aware on how our system operates and (I believe) could easily imitate whatever Terraform does with simple scripts.	impoppy	13.6994	-4.390545	comment	3.0	13.0	1673447316	9.473896
34339821	I failed to express my take against 	I failed to express my take against Terraform: instead of fighting indeterministic nature of infrastructure, it was created to work around it. Why far more experienced engineers than I am came to the conclusion that playing along is better than actively fighting?	impoppy	13.673642	-4.3810873	comment	3.0	13.0	1673452513	9.501023
34527671	I've worked on building Confluent's 	I've worked on building Confluent's CLI for the last 4 years, and after a year of technical work, security reviews, and sign-off meetings, I'm excited to share that the whole project (including all dependencies) is now open-source! https://github.com/confluentinc/cliThe CLI is optimized to work with Confluent's on-prem or cloud managed Kafka offerings, but the end goal is to have this be an amazing CLI experience for vanilla Apache Kafka as well.  Regardless, there are some interesting bits in the repo (like doing SSO login from a Go terminal app, or mocking API servers for integration tests) that could be useful for other devs out there.Happy to answer questions on Go, CLIs, Kafka, or how to convince big companies to open source their software.  I'm really proud to share all the work with	reducks	13.561611	-4.9962206	comment	3.0	10.0	1674707118	-13.118898
23428141	Once you're experienced writing Infr	Once you're experienced writing Infrastructure as Code, you always use it, no matter how small the project is. Right now I run a single micro instance for a personal project and I've got the whole thing Terraformed, which took me less than a workday - VPC, subnet, security groups, S3 buckets, and a basic provisioning script to setup the instance's software and cron jobs.It is (eventually, once you learn it) faster and more intuitive than bothering with the AWS console, and I often reference Terraform's own AWS resource documentation over the AWS docs since it usually has better information density.Anyway, the issue is all beside the point, I think we realize that Terraform was used as a placeholder example. Another example might be setting up single sign on, Active Directory, and other thi	dangus	13.666024	-4.3778906	comment	3.0	11.0	1591363123	9.464104
23550179	"He also chose the word ""kafkatrap"", "	"He also chose the word ""kafkatrap"", a word coined by a notorious racist."	DagAgren	13.701551	-4.9384694	comment	3.0	22.0	1592393469	4.172724
23610025	It’s no coincidence! Apache Kafka is	"It’s no coincidence! Apache Kafka is named after Franz Kafka. From Wikipedia:> Jay Kreps chose to name the software after the author Franz Kafka because it is ""a system optimized for writing"", and he liked Kafka's work.https://en.m.wikipedia.org/wiki/Apache_Kafka"	hypewatch	13.634493	-4.973069	comment	3.0	13.0	1592887720	10.538293
19987022	Agreed, the data model of Terraform 	Agreed, the data model of Terraform simply doesn’t match the problem domain. You need an algorithm to codify the pattern and then data to fill in the params. Terraform doesn’t allow you to create the patterns you need in a way that’s debugable and doesn’t allow for code reuse. For simple setups it’s not apparent there’s a problem but when they get more complex it’s nearly impossible to use.Additionally you have to rewrite everything for each cloud provider, so it just expands the work required, all with no real IDE integration. I’d just write against the cloud provider APIs directly or look at Pulumi when they get interactive debugging.	argd678	13.68458	-4.389001	comment	3.0	13.0	1558570299	9.525865
19987203	I moved away from Terraform a long t	I moved away from Terraform a long time ago. Ansible was way more powerful, handled errors and issues with state changes. Terraform was super picky about how you had to operate, slow and HCL was a terrible markup language. I wasn't really a huge fan of Ansible either though and more recently have been doing things in regular shell/Bash scripts. Now with Kubernetes and service brokers, there is no need for Terraform.	techntoke	13.69288	-4.409374	comment	3.0	14.0	1558572142	9.544722
19988842	Yeah, HCL's limitations have been an	Yeah, HCL's limitations have been an enormous thorn in my side for a long time. HCL2 (Terraform 0.12) is a big step forward, but even still I pine for a proper programming language, even if it has foot-guns.I do think you're selling Terraform short, though. Sure, the core is the toposort-create-things. But it also stores the state of its created things and (crucially) has the ability to diff the actual state of resources against what it thinks they ought to be.Being able to inspect existing resources and diff state is also what lets it import existing resources, so that they can be Terraform-managed going forward.Terraform is also capable of determining if its planned changes can be performed in-place or if they require resources to be destroyed and re-created. That boils down to a boolean	ReidZB	13.699344	-4.3953066	comment	3.0	18.0	1558590406	9.492934
19987347	>Infrastructure as code. Store it in	>Infrastructure as code. Store it in git. Profit.Ok. But so is CloudFormation YAML files, mostly.So is the advantage of Teraform that it works beyond AWS?	SlowRobotAhead	13.545322	-4.327558	comment	3.0	11.0	1558573677	9.508834
19989422	Long-time user of Terraform here, ne	Long-time user of Terraform here, never used CloudFormation. Where does CloudFormation beat Terraform?	gnosek	13.66426	-4.3631835	comment	3.0	11.0	1558597108	9.506139
19991024	I'm an ex Googler and 2nd time found	I'm an ex Googler and 2nd time founder of a company in the computer vision / robotics space and started hacking when I was 14. I'd consider myself pretty knowledgeable in my area -- yet, I must admit that I have absolutely no clue what Hashicorp and Terraform do and why everybody likes it.I am very curious though. Would you mind explaining this from a high level (to someone who knows cloud technology about as well as your dog)?	rsp1984	13.725705	-4.384646	comment	3.0	11.0	1558614530	-12.491974
20070702	"> ""It hijacks open-source APIs and p"	"> ""It hijacks open-source APIs and places them on top of its own proprietary solutions, thereby siphoning off customers from the open-source project to its own proprietary solution, as it did with the MongoDB APIs.""Basically, there is no such thing as an ""Open Source API"". APIs are not software, and we've already seen the damage that treating APIs as software (for copyright purposes) can do.The proper abstraction for APIs (and protocols, and file-formats, etc.) is the standard, which ideally admits the possibility of multiple interoperable implementations, both proprietary and open source (patents being the joker in the deck, unfortunately)."	webmaven	13.6621	-5.0898266	comment	3.0	34.0	1559414144	2.4192252
20097675	Unrelated, but it never occurred to 	Unrelated, but it never occurred to me that cockroachdb and gimp were made by the same persons ! Kudos ! (If I'm not mistaken)	makapuf	13.70167	-5.179774	comment	3.0	11.0	1559671948	10.068928
20097854	It's a good move and I even welcome 	"It's a good move and I even welcome it. However, I would have loved to see the removal of their enterprise version of the product at the same time.
I love cockroachdb to death, but the key features that prevent me from using it in any real projects I'm doing are the backup/restore feature, which is currently locked behind their enterprise version. I also would love to use CDC and table partitioning.
Nevertheless, great product."	makkesk8	13.688855	-5.1704392	comment	3.0	23.0	1559673023	9.921829
20098068	This is not the best way to compete 	"This is not the best way to compete with Amazon. The believe that their feature set is enough of a differentiator is probably delusional. CockroachDB does ""massive scale SQL without manual shading"". BSL won't hinder Amazon offering those features too.If CockroachDB remained OSS, there would have been a chance of Amazon offering Elastic CockroachDB eventually, and at least make the Cockroach brand more popular. But now it will likely be an Aurora feature.If you want to compete with Amazon, do something Amazon cannot do."	DVassallo	13.630746	-5.0814805	comment	3.0	17.0	1559674441	9.852016
20098626	Simply because if I'm using Cockroac	Simply because if I'm using CockroachDB and don't want to manage it myself, my only option is Cockroach Labs.While they are experts in the technology they've created, offering a managed service is much more than just having awesome developers. Not to mention some companies have other restrictions (on premises, local presence, etc, etc, etc).For a customer, unless I'm completely sold on their technology and really need it for my company, they just added a restriction on my choices.	gtirloni	13.653534	-5.169093	comment	3.0	13.0	1559678134	9.916783
13640496	Also, plugging Caddy: https://caddys	Also, plugging Caddy: https://caddyserver.com/I used to be a huge fan of nginx and I haven't touched it in a year now. I don't miss it, Caddy is fantastic and handles the Let's Encrypt stuff for me.	scrollaway	13.626369	-3.9856737	comment	3.0	14.0	1487036076	-9.746508
13857220	Interactive Queries in Apache Kafka 	Interactive Queries in Apache Kafka Streams	krallistic	13.549811	-5.005792	story	3.0	33.0	1489408800	-13.066133
13858154	One thing to note about Pub/Sub vs K	One thing to note about Pub/Sub vs Kafka.  Pub/Sub does not offer as strict of guarantees around ordering as Kafka.  If you don't need that strictness I'd definitely recommend Pub/Sub over Kafka but if you do I don't believe any of the Google Cloud Offerings will provide you that (Kinesis on AWS will).	kasey_junk	13.565035	-4.968693	comment	3.0	10.0	1489416118	-13.1186495
13900142	[Serious] if I'm already happy using	[Serious] if I'm already happy using CloudFormation for AWS, and I don't plan on supporting AWS + another cloud, is Terraform for me? Or is it for other use-cases?	whatnotests	13.664752	-4.3703465	comment	3.0	10.0	1489817128	9.486356
13900305	Here's the thing: HCL isn't a progra	Here's the thing: HCL isn't a programming language nor will it ever be. I hope. this problem isn't unique to Terraform; Chef and Puppet are in the aame boat.It's markup. It is meant to be easily readable by devs and non-devs alike while being reasonably capable.The beauty of these tools is that they are written and be expanded upon with popular languages. If I wanted to make Terraform deploy Dell servers, all I have to do is write a plug-in with Go. What's more is that I don't have to teach a TF user anything new since its usage pattern will be the same as any other TF plug-in.	nunez	13.703361	-4.4027452	comment	3.0	11.0	1489822042	9.505686
30828540	Yeah I've found CDK unnecessary comp	Yeah I've found CDK unnecessary complicates infrastructure and immediately creates technical debt.	smcleod	13.552572	-4.2172127	comment	3.0	11.0	1648457079	-8.097441
30863623	They are, and we do have those issue	"They are, and we do have those issues; we address them somewhat towards the end of the post, with São Paolo and Tokyo --- but also with São Paolo and São Paolo: a VM that pops up in GRU has to post to Consul in IAD before other GRU nodes ""see"" it in Consul. We've addressed that problem by ""hinting"", sending service discovery updates over NATS that usually beat out Consul, and then reconciling the two event sources.As I understand it, the reasonable-person thing to do here is to have federated Consul clusters in different regions. We run up against the problem that we're not hosting one application globally, but rather a zillion applications; every node needs to know about every instance of every application. So things like losing the global KV store are problematic for us."	tptacek	13.594399	-4.558278	comment	3.0	12.0	1648698360	-11.147845
30906036	I don’t really think IaC is there ye	I don’t really think IaC is there yet, as someone who has used terraform (and now pulumi) in production for some time.My biggest gripe is that the feedback loop is fairly slow: planning often predicts valid config that fails in deployment. It doesn’t help that the process of planning is really slow (see https://github.com/pulumi/pulumi/issues/8872 it can take minutes for pulumi to plan changes if using azblob backend) with little incentive for teams like pulumi to investigate or fix unless you use their cloud. I get that pulumi is in the business of promoting their own cloud, but there are few (if any im aware of) IaC solutions not intrinsically tied to for-profit SaaS because it’s incredibly labor intensive to build consistent interfaces to several constantly changing cloud providers.	SirensOfTitan	13.649552	-4.3699894	comment	3.0	17.0	1649076842	9.515201
30906118	As someone starting with terraform l	As someone starting with terraform literally this weekend, why did you move away?	hobo_mark	13.701923	-4.3761315	comment	3.0	12.0	1649077333	9.475747
34590772	Would you mind providing details lik	"Would you mind providing details like the search query and link to the page you expect to be found?To test your hypothesis, I did a basic search for exact matches on ""we do not synchronize on the update of the broker node"" and Google returned 2 search results in 240ms:- https://github.com/a0x8o/kafka/blob/master/core/src/main/sca...- https://jar-download.com/artifacts/org.apache.kafka/kafka_2....Which contain exactly the source code from GitHub that I was looking for. You'll notice that the first result is actually a0x80's fork of apache/kafka. Google states that some entries very similar to the 2 already displayed were omitted, and"	Denzel	13.6086	-4.990802	comment	3.0	19.0	1675137375	-13.104826
34719349	Kafka's not a message queue, it's a 	Kafka's not a message queue, it's a distributed log.The main advantage of Kafka is that you can:1. Write a shitload of data to it fast2. Experience a cluster failure or degradation with low risk of data loss3. Retain absolute ordering, with caveats, if you're careful.4. Run large numbers of concurrent consumers without imposing significant overhead on the clusterThat's pretty much it. I've made a good career the last few years out of Kafka, but there are _so_ many companies using it that don't need it, and what strikes me as passing odd is when I've been consulting on their Kafka adoption and tell them that, they don't want to hear it.Which is really weird IMO because I stand to make far more money by encouraging them to use it unnecessarily because......Kafka is a complex solution to a co	EdwardDiego	13.5517645	-4.989145	comment	3.0	16.0	1675912782	-13.096081
34795343	Contra Kavanagh on Fideism	Contra Kavanagh on Fideism	feross	13.655586	-4.9632964	story	3.0	7.0	1676405796	2.6737218
34963142	Interesting that this uses mongodb[1	Interesting that this uses mongodb[1] - doesn't that mean the service is open under the mongodb license? Or does the managed service not use mongodb? Or did they (mongodb) go back to a more sane license? Or is the infisical Mongo image based off a fork?[1] https://github.com/Infisical/infisical/blob/main/docker-comp...	e12e	13.735397	-5.166011	comment	3.0	11.0	1677538378	9.944786
35004131	yeah but if your org has orchestrati	yeah but if your org has orchestration tooling built around k8s, in a way it becomes much easier to provision a DB with k8s, setup the service, routing, networking, roles, etc than it would be in terraform.  especially if you have to repeat this process in like 20 envs (stage, prod) x multiple regions	annexrichmond	13.660088	-4.4125175	comment	3.0	11.0	1677803646	-13.461572
35048318	We are asking to HashiCorp products 	We are asking to HashiCorp products to do things they were not designed to do, in configurations that they don't expect to be deployed in. Take a step back, and the idea of a single global namespace bound up with Raft consistency for a fleet deployed in dozens of regions, providing near-real-time state propagation, is just not at all reasonable. Our state propagation needs are much closer to those of a routing protocol than a distributed key-value database.I have only positive things to say about every HashiCorp product I've worked with since I got here.	tptacek	13.709354	-4.3952394	comment	3.0	29.0	1678140073	-12.979124
36972034	100% agree. I think it does so much 	100% agree. I think it does so much disservice to his work. But I also don't think The Trial is primarily about bureaucratic themes either. To me it is much more about K not being able to understand the society he inhabits and the rules which govern it, and that can be extended to bureaucracy, but also obviously religion and morality, and just a blanket search for meaning.I also have read both the original German der Process and the English translation, and I feel that, even though German is my second language, the original has so much more terror and humor than the English version, which largely reads like a bureaucratic text itself. Understanding that Kafka would laugh out loud while reading his texts to his friend, I like to imagine his works to be a kind of interwar Curb Your Enthusias	farmeroy	13.680644	-4.953046	comment	3.0	12.0	1690989338	10.511421
37005949	"Is a ""stack"" here a (root) folder on"	"Is a ""stack"" here a (root) folder on which you'd do a ""terraform apply""? I've never know what to call those, surely they aren't ""modules"".And, so, you're saying: try to have a separate deployment (stack then?) that contains the state, so you can wipe away everything else if you want to, without having to manage the state?"	sverhagen	13.697223	-4.389571	comment	3.0	31.0	1691183534	9.490663
37006403	Ok I think we're talking about two s	"Ok I think we're talking about two separate things here - you're referencing a root module and not a ""stack"", as in a stack is a full service/application that uses multiple modules to deploy. Your db module, eks module, etc. All independent modules, not combined into one singular module. Say it's sitting in the /terraform/app1/services/db(&)app folders type of scenario.I think you're talking about putting stateful and stateless objects inside of a single module. So you've got /terraform/modules/mybigapp/main.tf that has your microservice + database inside of it.If I'm right and that's what you mean that's really interesting I don't think I've ever seen or done that but now I'm curious. I'm pretty sure I've never created an ""app1"" module with all of its resources.Am I totally off here?"	swozey	13.673551	-4.384781	comment	3.0	19.0	1691186320	-12.378943
37006180	Everybody in here is recommending ta	Everybody in here is recommending tarragrunt, but I'm not sure what value it provides over regular terraform.After using it for a few months all of the features found in tarragrunt are in terraform.	spicyusername	13.694974	-4.386726	comment	3.0	15.0	1691184771	9.480872
37006133	We're using Terragrunt with hundreds	We're using Terragrunt with hundreds of AWS accounts and thousands of Terraform deployments/states.I'll never want to do this without Terragrunt again. The suggested method of referencing remote states, and writing out the backends will fall apart instantly at that scale. It's just way too brittle and unwieldy.Terragrunt with some good defaults that will be included, and separated states for modules (which makes partial applies a breeze) as well as autogenerated backend configs (let Terragrunt inject it for you, with templated values) is the way to go.	thunfisch	13.7039385	-4.393932	comment	3.0	14.0	1691184466	9.470317
37082506	HashiCorp Switches to BSL License	HashiCorp Switches to BSL License	hermanradtke	13.736963	-4.359556	story	3.0	68.0	1691706164	13.2793665
37081760	I haven't looked to see what license	I haven't looked to see what licenses are involved, but Pulumi makes liberal use of Terraform providers[1]. And I would definitely consider them to be a Hashicorp competitor.[1]: https://www.pulumi.com/docs/concepts/vs/terraform/#:~:text=U....> Pulumi is able to adapt any Terraform Provider for use with Pulumi, enabling management of any infrastructure supported by the Terraform Providers ecosystem using Pulumi programs.	jrsdav	13.69842	-4.387005	comment	3.0	34.0	1691701410	9.522125
37082183	Looking at the public data [1], Hash	Looking at the public data [1], Hashicorp looses money every quarter. At some point they need to stop burning cash because they have yet to figure out how to run a sustainable business.I don't know enough about their operations to have good suggestions on how to become sustainable. But, I don't like this move. There are many sustainable open source companies. Moving to source available from open source will likely never be a move I like.[1] https://www.google.com/finance/quote/HCP:NASDAQ	mfer	13.731494	-4.3619556	comment	3.0	17.0	1691703851	13.28532
37082830	> Why is HashiCorp making this chang	"> Why is HashiCorp making this change?
>
> We strongly believe in the value of openly sharing source code and enabling practitioners to solve their problems, building communities, and creating transparency. HashiCorp provides feature-rich products to the community for free, and that development is made possible by our commercial customers who partner with us. By shifting to this license, HashiCorp can better manage commercial uses of our source code and continue to invest in our thriving community of practitioners, many of whom are contributors, in a manner that will not impede their work.i strongly appreciate the FAQ but this part felt weak/not the whole truth. What is not being said? who is hashicorp afraid of? there wasnt a doubt in my mind before and now there is.indeed i just saw a st"	swyx	13.727551	-4.3578615	comment	3.0	19.0	1691708584	13.23852
37082874	Why, quite clearly:> Organizations p	Why, quite clearly:> Organizations providing competitive offerings to HashiCorp will no longer be permitted to use the community edition products free of charge under our BSL license. Commercial licensing terms are available and can enable use cases beyond the BSL limitations.Looks to me very similar to (A)GPL + commercial dual licensing, for instance.	nine_k	13.734184	-4.357802	comment	3.0	11.0	1691708826	13.282065
37082876	That's pretty disappointing. I perso	That's pretty disappointing. I personally haven't used much beyond vault (I've used but not enjoyed or built anything on terraform), but this is pretty diametrically opposed to what I appreciated most about hashicorp products. Heck, I've even contributed a chunk of the code I use the most from vault (Cert management) and now I'm going to have to reevaluate whether I can attempt to use that service for customers going forward, and whether I will contribute ever again.It definitely feels like the whole era of VC drying up is bringing out the worst possible future for some of these non GPL/similar licenses. Which is unfortunate for any of us who have deliberately learned only OSS and operations around it, giving back the whole time, with dreams of building services that leverage that knowledg	andrewstuart2	13.716004	-4.328125	comment	3.0	72.0	1691708839	-12.456163
37084807	Um. Mongodb changed its license befo	Um. Mongodb changed its license before AWS offered a mongodb compatible service. And since I can't get the source code for documentdb, either it isn't actually using a fork of mongodb, or Amazon isn't complying with the AGPL. I think the latter is pretty unlikely.	thayne	13.714219	-5.135165	comment	3.0	15.0	1691724644	-13.019449
37088855	Paradoxically, AWS CDK License is st	Paradoxically, AWS CDK License is still Apache-licensed:https://github.com/aws/aws-cdk/blob/main/LICENSESo I lived to see when Amazon's offering is more open than Hashicorp's...	hdjjhhvvhga	13.545177	-4.354305	comment	3.0	14.0	1691763003	-12.611727
37088891	I'm curious if Pulumi is interested 	I'm curious if Pulumi is interested in this.	bovermyer	13.6180935	-4.422206	comment	3.0	18.0	1691763160	9.510572
37088922	HashiCorp is successful because it s	HashiCorp is successful because it solved problems for enterprise companies who were willing to pay for support.To claim it solely exists because of open source is a falsehood. Companies that can’t make money don’t exist.	that_guy_iain	13.730131	-4.3606358	comment	3.0	14.0	1691763328	13.271465
37088935	Is it just me or does this article n	"Is it just me or does this article not answer the question in the title, ""What HashiCorp’s license change means for Spacelift customers,"" at all?"	lopkeny12ko	13.737615	-4.362094	comment	3.0	14.0	1691763444	13.309529
37089252	It is powered by Terraform underneat	It is powered by Terraform underneath-- but Pulumi has done a ton of work to make the abstraction seamless.	rirze	13.686844	-4.39579	comment	3.0	11.0	1691765129	9.513929
37089261	Why would they be? Pulumi talks to p	Why would they be? Pulumi talks to providers at the protocol level - contrary to the belief of many, Pulumi is not a Terraform wrapper.	jen20	13.69471	-4.392864	comment	3.0	15.0	1691765181	9.50067
37089284	Indeed - but the Terraform community	Indeed - but the Terraform community appears to be hit the hardest. Because unlike Consul, there's no open-source hostable anything. It feels just an arbitrary restriction for a language + CLI; the terms of the licence can be viewed as if whatever you ship has Terraform cli embedded, you're in breach. I can see the reason for SPL like Mongo did - it is indeed unfair for AWS to make money off hosted open-source mongodb. But this move by Hashi I'm struggling to wrap my head around	izalutski	13.687109	-4.392726	comment	3.0	19.0	1691765295	-12.442788
37089384	In this I'm mostly concerned by the 	"In this I'm mostly concerned by the extremely vague description of what is it you can't do with this new terraform commercially. You can't ""compete"" with hashicorp. Well, if I'm doing devops consulting and I write terraform for clients is it competing with hashicorp? If not, what if they start offering such service tomorrow? Will it be competition them?Personally, speaking figuratively, I think they just pulled a shotgun and decided to shoot both of their feet off. As someone doing devops consultancy since well before terraform became a thing I'd have no problem at all going back to custom python code with configuration in yaml if the clients decide its better for them."	Roark66	13.717547	-4.374836	comment	3.0	17.0	1691765716	-12.43348
37088821	While I support you I'm not sure you	"While I support you I'm not sure you can use ""Teraform"" in the name, even if it is Terraform."	hdjjhhvvhga	13.708126	-4.3877964	comment	3.0	14.0	1691762800	9.503538
37090730	Layerform — Open-source alternative 	Layerform — Open-source alternative to Terraform	lucasfcosta	13.700699	-4.3874655	story	3.0	26.0	1691772136	9.470895
37090042	If you've ever done a credit card tr	If you've ever done a credit card transaction or any form of dollar based transaction, it's using software directly built on top of Consul.	alephnerd	13.623481	-4.5219483	comment	3.0	11.0	1691768863	-1.3814677
37133800	Part of me hopes a fork comes out of	Part of me hopes a fork comes out of this. I mean maybe features like this PR[1] for local state file encryption can then finally get merged.[1] https://github.com/hashicorp/terraform/pull/28603	jsiepkes	13.688182	-4.386532	comment	3.0	12.0	1692106341	9.513115
37137781	The Future of Terraform Must Be Open	The Future of Terraform Must Be Open	lantry	13.707824	-4.3817763	story	3.0	129.0	1692125678	9.460066
37138579	I think it's not only the issue with	I think it's not only the issue with terraform but also the underlying infrastructure. AWS should've never have imperative APIs in the first place. Or at least it's time for AWS V2 APIs	yevpats	13.687527	-4.3785906	comment	3.0	12.0	1692129442	-12.112043
37157636	It’s not open source, AFAICS? It is 	"It’s not open source, AFAICS? It is under the Elastic License, which is not an open source license as it limits use?„ You may not provide the software to third parties as a hosted or managed
service, where the service provides users with access to any substantial set of
the features or functionality of the software.“"	jwildeboer	13.525946	-4.5022125	comment	3.0	19.0	1692250443	-9.823161
37175191	I wonder what on earth they are doin	I wonder what on earth they are doing.Regardless of how you fall in the Pulumi Vs Terraform preference scale, Pulumi is pretty damn simple and shouldn't take any time to get your infrastructure working in it.	happymellon	13.684445	-4.3937125	comment	3.0	11.0	1692364619	9.510501
37179915	OpenTF calls for an official respons	OpenTF calls for an official response from HashiCorp	Coryodaniel	13.7556925	-4.3250823	story	3.0	7.0	1692382824	-12.296317
37240692	They also published an FAQ recently:	They also published an FAQ recently:https://www.hashicorp.com/license-faqThis all should be incorporated into the BSL, as the current terms are clearly vague enough that they require a separate (not legally binding) FAQ (as it can be changed at any point...)	candiddevmike	13.732385	-4.357445	comment	3.0	25.0	1692817448	13.23682
37242380	> leveraging their good will against	> leveraging their good will against them and costing them dealsSpacelift co-founder here. I keep seeing this argument, and I'm puzzled. What good will are we talking about, and how are we leveraging it against anyone? Is building a good commercial product that folks love on top of an open source ecosystem somehow unethical? And if so - why? I used every opportunity to try and help Hashi build something better on top of core TF, both personally (applied for a job on their TFE team back in 2018, talked about many ideas that then went into Spacelift instead) and as a company (we tried VERY hard to partner). All to no avail.On the other hand, for 9 years non-Hashi folks (including ourselves here at Spacelift) spent countless hours, for the first years contributing to Terraform core, and more 	fishnchips	13.704184	-4.373339	comment	3.0	15.0	1692827766	-12.371365
37263343	> Community-driven - so that the com	> Community-driven - so that the community governs the project for the community, where pull requests are regularly reviewed and accepted on their merit and changes are proposed through a public RFC processIMO if OpenTF wants to quickly pull ahead, they'd do well to quickly revive popular but neglected PRs from Terraform, inviting those authors to rebase on top of OpenTF and quickly getting them merged.The RFC process will slow them down here, at least for features, but presumably there are still old bug fixes that died on the vine, too.	pxc	13.732379	-4.3701677	comment	3.0	20.0	1692979733	-12.368278
37263798	Recently I (new to it myself) introd	Recently I (new to it myself) introduced Terraform on my team at work (my department historically mostly uses CloudFormation), and this whole license rug pull left me wondering if I'd made a mistake.But if OpenTF really flourishes, this could end up being better for us than if the license change had never happened. I wish you guys the best in making OpenTF a clear winner! The sooner that happens, the less of a shakeup this will be for the whole userbase and the more teams will stay invested and stick with terraform-the-technology (if not the trademark). I'm optimistic. :)	pxc	13.702374	-4.37194	comment	3.0	12.0	1692981606	-12.358621
37263948	Sun is a great example of a company 	Sun is a great example of a company that had excellent engineers but a terrible business model.  Instead of fixing the business model, they tried to extract as much value out what they had and it ultimately lead to the death of the company.Terraform is the gateway to Hashicorp and it feels like they're going to lose it.	davewritescode	13.71132	-4.3779764	comment	3.0	17.0	1692982192	-12.445983
37264783	> They could be focusing on the lice	"> They could be focusing on the licence and their perception of HashicorpThey literally do:""HashiCorp even had all contributors sign a CLA which explicitly said (link to the CLA in the Internet Archive as HashiCorp has of course removed this wording): [...]The move to BUSL—which is not a free and open source license—broke the implicit contract. That was the brash action!Terraform would've never gotten the adoption it did, or all the contributions from the community had it not been open source. Most of us would've never agreed to the CLA to contribute to the project if it was BUSL licensed. Taking all those contributions and all that community trust, and then changing to the BUSL license is a bait and switch."" [1]I agree with the overall sentiment, but they could've left out all the judging"	EspressoGPT	13.723825	-4.372043	comment	3.0	36.0	1692985803	-12.399662
37266529	I'm not into the CDK at all to be ho	I'm not into the CDK at all to be honest but isn't it a glorified preprocessor that generates the JSON representation of Terraform input, which is then processed as usual by your regular Terraform binary?	fishnchips	13.684134	-4.3865886	comment	3.0	14.0	1692994769	9.501234
37267289	> This competition didn’t hurt Hashi	> This competition didn’t hurt Hashicorps chances of profitability, they were factored in from the beginning.They weren't, actually.From a Hashicorp FAQ article (which is a transcript of a video interview which has since been delisted from YouTube) titled 'Why is HashiCorp committed to open source?':> Mitchell: [I]t's always sort of been a default for me. [...] When we were starting the first projects, we both didn't intend to ever start a company around them. There was no monetization goal at all, and so I think open source was an obvious default then.https://www.hashicorp.com/resources/why-is-hashicorp-committ...	pxc	13.734847	-4.3639083	comment	3.0	18.0	1692999067	-12.39576
37332938	> That being said, after HashiCorp’s	> That being said, after HashiCorp’s CTO released “binding” answers to some of these FAQs, it seems clear that the only folks who this affects are those that sell software to other companies.I’m not so sure about this. The Licensing FAQ doesn’t have the full legal weight of an update or addendum to the actual license. There’s no guarantee that they won’t renege these “binding” answers next year, and unlike the license agreement my company isn’t agreeing to them as terms of use.	imadethis	13.714125	-4.357688	comment	3.0	21.0	1693460895	13.279223
37395334	I think this whole process has been 	"I think this whole process has been beautiful. Hashicorp was well aware that licenses are tagged to versions of projects rather than the ""project"" itself, and used that to its advantage as a business to start maximizing profits to its enterprise offerings.The community was well aware that once you tag a license to a version, you can't undo that. And they're well aware that they can fork from that license forwards and build their own ""new"" project, version by version, that stays open source.This is going to be fascinating to see play out, and I think a case study in software licensing going forwards...can't wait to see how OpenTF does down the road."	galenmarchetti	13.704828	-4.373339	comment	3.0	13.0	1693936361	-12.327722
37398675	True...it's just difficult to draft 	"True...it's just difficult to draft a license that says something along the lines of ""If you're Big Tech, we have the right to go after you, if you're small startup, you're safe"".I think there's a swath of Terraform users (likely minority) who find themselves in a legal gray area, or a legal black-and-white area, where they're directly at risk. Even if Hashicorp never intended to target small startups with this, the wording of the license unfortunately applies and is enough to make anyone nervous.I think MongoDB had a similar issue when they went source-available, they seemed to intend to only protect themselves from big tech but unfortunately a lot of smaller players got spooked. I think (?) it's fine now though"	galenmarchetti	13.726779	-4.3986273	comment	3.0	10.0	1693952933	-12.403056
37474431	Will you be switching to OpenTF?	Will you be switching to OpenTF?	serverlessmom	13.719598	-4.375721	story	3.0	4.0	1694470539	-12.400484
37477680	Backing the days (5+ years ago I thi	Backing the days (5+ years ago I think) we tried it, and while it was nice its licensing/pricing made us not use it for our startup, as it seemed to pose a sustainability threat when growing (or not growing the right pace).Has it improved since then?disclaimer: I don't remember the details, I was just told to use nginx because caddy is problematic, so I built the system with nginx open source.	fodkodrasz	13.677096	-3.9800677	comment	3.0	12.0	1694502214	8.852668
37483828	Google Infrastructure Manager: Provi	Google Infrastructure Manager: Provision Resources with Terraform	FBISurveillance	13.676172	-4.385455	story	3.0	9.0	1694536449	9.476954
37549482	Is there anything particularly painf	Is there anything particularly painful about working with the Google Cloud Terraform provider? If there isn't, I would rather use OpenTF with that provider and manage state myself.	mkl95	13.696332	-4.383308	comment	3.0	14.0	1694985812	-12.30966
37550576	I can’t help but feel… sad about thi	I can’t help but feel… sad about this. I only recently picked up Terraform and am astounded that this is what goes as coding in the infrastructure world. I was coming from Ansible so there was only improvement to be had, but man did Terraform let me down so far.It (well, the provider) doesn’t validate fields until apply. That’s just so… sad. How is that acceptable? It’s like a car without a steering wheel, and people just go along with it.	diarrhea	13.696501	-4.3859153	comment	3.0	10.0	1694994613	9.48838
37551523	Can anyone explain the point of TF?I	Can anyone explain the point of TF?I’m sure there’s some 100% subjective, hallucinated value statement but never felt a reason to bother.I’ve only ever used an AWS SDK and “saved state” to git in the form of my SDK scripts.Switched from Python+boto to Go+SDK a few years ago rather than learn some DSL the Lindy effect clock was ticking on.	srsqsonyl	13.573867	-4.352411	comment	3.0	17.0	1695004086	-6.5648646
37567059	it still hallucinates on GPT4.  Ask 	it still hallucinates on GPT4.  Ask it to generate some random terraform script with some random requirements and see if it runs.	adrr	13.709013	-4.3868427	comment	3.0	10.0	1695112534	-10.124678
37576433	One is a tomato, the other is an ora	One is a tomato, the other is an orange. From a distance they might look alike but they really are two completely different tools. This is a pretty solid explanation of the differences with good illustrations.Rabbit can do everything Kafka does - and much more - in a more configurable manner. Kafka is highly optimized for essentially one use case and does that well. Nothing in life is free, there are trade-offs everywhere. I am not privy to which one is theoretically faster - but once you reach that question methinks the particular workload is the deciding factor.	whalesalad	13.520245	-4.978278	comment	3.0	24.0	1695156851	-13.094141
29047205	If you are saying that it’s better t	If you are saying that it’s better to run native than Terraform then to me it means that Terraform is not good enough - which is also my experience from poking it. It covers all use cases on all clouds, buy only ~80% of each use case. The rest you have to figure out by yourself. Which often means diving into CloudFormation and such - so basically losing the advantage of Terraform.	kosolam	13.683278	-4.3630037	comment	3.0	26.0	1635584354	9.477428
29047238	But why not just Cloudformation then	But why not just Cloudformation then? What advantage does Terraform provide over Cloudformation in your opinion?	shell0x	13.653831	-4.355382	comment	3.0	21.0	1635584686	9.502088
29047328	For one, it's closer to a proper pro	For one, it's closer to a proper programming language as opposed to straight up data interchange format. Sure if you write it in YAML than you can take advantage of variables but YAML's syntax for variables is pretty gross.Comparing CloudFormation to Terraform is a little like comparing HTML and CSS to Javascript (though Terraform isn't nearly as nice to code in as Javascript -- and I'm not exactly a big fan of Javascript). You can cover most use cases with plain HTML and CSS but the moment you need to get a little more intelligent with your code you get stuck.	hnlmorg	13.674838	-4.3789625	comment	3.0	18.0	1635585990	9.500273
29063087	Consul is a service mesh. It’s your 	Consul is a service mesh. It’s your dynamic service discovery and routing layer. You have systems dynamically allocated in a cluster, they need to reach other systems, you ask consul where they are.Vault is secrets and management. Put secret strings in, get secret strings out (if permitted). Most apps need secrets of some type, and vault is normally discovered via consul.Nomad is an application/workload scheduler. You tell it what you need to run and what their memory/cpu requirements are and it finds a space in your physical infrastructure to run that. The apps it runs normally needs secrets from vault and communicate with services discovered via consul.They all are well integrated and build off of each other, kind of like layers an onion where your app services are the outer layer of the	inside_edition	13.59779	-4.5457654	comment	3.0	19.0	1635742028	-13.186423
29085330	Terraform. My god, just use terrafor	Terraform. My god, just use terraform.Stop scripting random stuff to create multiple untracked resources in different places by hand.Slap this[1] on top of this[2] and add whatever other services you want, and boom. Done.1. https://stackoverflow.com/questions/49743220/how-do-i-create...2. https://registry.terraform.io/providers/1Password/onepasswor...	orf	13.698067	-4.3883033	comment	3.0	16.0	1635877297	9.508028
29110864	Absolute legend, rocket ship human M	"Absolute legend, rocket ship human Mitchell Hashimoto.
I still remember the excitement from Vagrant back in the day (which I think started it all). Here's the 1.0 announcement in 2012. [1]The tools and vision they created after, just amazing coming from a small scrappy startup crew. Which, IMO, is totally wild given the offerings clearly tend to target bigger Enterprise who have bigger teams/apps/ops demand.Then to walk away from $50MM barely older than drinking age. [2]Seriously congratulations to them and the Hashicorp team. Will likely invest and hold for a long time.[1] https://news.ycombinator.com/item?id=3672149[2] https://twitter.com/mitchellh/status/1357445215259250689"	WORMS_EAT_WORMS	13.733342	-4.332838	comment	3.0	16.0	1636050753	-12.528693
29112254	All major clouds have better alterna	All major clouds have better alternatives to Vault. Vault is mostly for really large companies that want to run things like this by themself.There is no need for service discovery in the cloud in general.I have also used Nomad a lot. Maybe it is because we always needed the cutting edge features in general, but in general not very good quality. Core features always worked though. People should use Kubernetes instead in most cases.There is simply no way Terraform and the HCL2 will survive for cloud environments. For other use cases I do not know.	AtNightWeCode	13.537653	-4.092622	comment	3.0	16.0	1636058131	-12.452697
29113061	You are missing the point. They are 	You are missing the point. They are the de-facto standard in DevOps tooling from one person startups to gigantic public tech FAANG companies.My prediction, HashiCorp after IPO'ing will get acquired.	nodesocket	13.707529	-4.349066	comment	3.0	11.0	1636063480	-12.509723
29115628	I wonder could they do that? Doesn't	I wonder could they do that? Doesn't ElasticSearch own the copyright to that license? Is it even legal to copy it without their permission?	galaxyLogic	13.526942	-4.5685654	comment	3.0	18.0	1636088412	-9.921115
29145165	Franz Kafka asked his friend Max Bro	Franz Kafka asked his friend Max Brod in a written testament to destroy his entire work after his death. Max Brod didn't obey. Do you think he was wrong?	spacechild1	13.688189	-4.9558754	comment	3.0	14.0	1636333224	10.507023
29234491	Stopped reading at Kafka. Java techn	Stopped reading at Kafka. Java technology that combines bad networking with bad messaging and bad queueing.I would have expected one of the big Internet websites to use better technology.	mgaunard	13.596033	-4.991999	comment	3.0	26.0	1637019563	10.551151
29335354	While basically almost no real world	"While basically almost no real world application needs more performance than what kafka delivers, i love to see research on this topic.hopefully at some point a more easy to use, non java, ""cloud-native"" distributed log with decent client apis shows up.  (if anyone wants to help building it, please ping me. i am 10 years into building startups and companies with architectures ontop of kafka and pulsar)"	yawniek	13.539234	-5.002251	comment	3.0	10.0	1637789159	-13.095993
29349090	> - have a snapshot of dataBeing abl	> - have a snapshot of dataBeing able to see a snapshot is good, and I would hope to see a higher-level abstraction that can offer that on top of something Kafka-like. But making the current state the primary thing is a huge step backwards, especially when you don't get a history at all by default.> - query data, including ad-hoc queryingOK, fair, ad-hoc queries are one thing that relational databases are legitimately good at. Something that can maintain secondary indicies and do query planning based on them is definitely useful. But you're asking for trouble if you use them in your live dataflow or allow ad-hoc queries to write to your datastore.> - have trasactional updates to dataI do think this one is genuinely a mistake. What do you do when a transaction fails? All of the answers I've	lmm	13.537522	-5.0248327	comment	3.0	23.0	1637923935	-13.081706
29377263	You are allowed to run BOINC[0] and 	You are allowed to run BOINC[0] and folding@home[1][0]: https://old.reddit.com/r/gridcoin/comments/7vhku5/fyi_we_are...[1]: https://github.com/GoogleCloudPlatform/terraform-folding-at-...	captn3m0	13.708237	-4.385144	comment	3.0	11.0	1638170248	9.467432
29420689	Why should one use CDK vs Pulumi?	Why should one use CDK vs Pulumi?	manojlds	13.645834	-4.4063354	comment	3.0	12.0	1638471365	9.483002
29600067	This is advice that seems reasonable	This is advice that seems reasonable but is actually pretty harmful.Take a startup with a few users. The senior engineer decides they need pub/sub to ship a new feature. With Kafka, the team goes to learn about Kafka best practices, choose client libraries, and learn the Kafka quirks. They also need to spin up Kafka instances. They ship it in a month.With postgres, they’ve got an MVP in a day, and shipped within a week.	jastr	13.564223	-5.006373	comment	3.0	13.0	1639787178	-13.098231
29600115	Kafka is not a queue. Kafka's parall	Kafka is not a queue. Kafka's parallelism is limited by the number of partitions you allocate, and you have to be sure to avoid head of line blocking.Not the case with a queue.	staticassertion	13.53884	-5.007118	comment	3.0	10.0	1639787474	-13.095672
29618542	If you haven’t heard about cdktf, ch	If you haven’t heard about cdktf, check it out! It lets you do infrastructure as code but in full programming languages like Python, C# and TypeScript. It’s by hashicorp, and under the covers it runs Terraform, so you have the whole set of terraform providers at your disposal.	lukevp	13.709006	-4.390495	comment	3.0	12.0	1639948857	9.477162
35950846	> Issue #1 is that in Kafka’s server	> Issue #1 is that in Kafka’s server.properties file has the line log.flush.interval.messages=1 which forces Kafka to fsync on each message batch. So all tests, even those where this is not configured in the workload file will get this fsync behavior. I have previously blogged about how Kafka uses recovery instead of fsync for safety.And then in this article it's explained how Kafka is actually unsafe:> Kafka may handle simultaneous broker crashes but simultaneous power failure is a problem.just against simultaneous node crashes (whole VM/machine).I mean - sure in practice running in different AZs, etc. will probably be good enough, but technically...	globalreset	13.5405445	-5.0058484	comment	3.0	29.0	1684168347	-13.073723
35951290	Who is running single az deployments	Who is running single az deployments who also cares about data loss and availability? Seriously? I’ve personally supported 1000s of kafka deploys and this isn’t a thing in the cloud at least. There is no call for wanting fsync per message, it is an anti pattern and isn’t done because it isn’t necessary. Data loss in kafka isn't a real problem that hurts real world users at all.	ceencee	13.534075	-4.98146	comment	3.0	13.0	1684170399	-13.080151
35953430	I am not entirely sure what is the r	I am not entirely sure what is the reason to make Kafka transactional. The original goal was to have a message queue that holds statistical data where the data loss cannot significantly alter the outcome of the analytics performed on the (often incomplete) data. Why are in this argument about fsync and such now? Did something change?If you need reliable data storage do not use Kafka or similar technologies.	datadeft	13.551106	-5.0007973	comment	3.0	15.0	1684179638	-13.094982
35953682	It's a common misconception about Ka	It's a common misconception about Kafka and fsyncs. But the Kafka replication protocol has a recovery mechanism, much in the same way that Viewstamped Replication Revisited does (except it's safer due to the page cache), which allows Kafka to write to disk asynchronously. The trade-off is that we need fault domains (AZs in the cloud), but if we care about durability and availability, we should be deploying across AZs anyway. We've seen plenty of full region outages, but zero power loss events in multiple AZs in six years.Kafka and fsyncs: https://jack-vanlightly.com/blog/2023/4/24/why-apache-kafka-...	jvanlightly	13.529933	-4.9818444	comment	3.0	13.0	1684180787	-13.080202
35966092	Terraform Pricing Changes	Terraform Pricing Changes	candiddevmike	13.647434	-4.3402143	story	3.0	8.0	1684263411	9.414566
36049081	I wish Nginx would improve their dev	I wish Nginx would improve their developer experience. Their deployment patterns and configuration are horrid compared to Caddy which is amazing to use.	KRAKRISMOTT	13.682164	-3.981472	comment	3.0	59.0	1684868223	8.810232
36049135	Caddy has a lot of great features, b	Caddy has a lot of great features, but (at least as of last year) Nginx has the edge on documentation. Caddy’s docs were almost useless. Hopefully they’ve improved since I last used it.	zja	13.723082	-3.9496353	comment	3.0	54.0	1684868413	8.823129
36050116	Debian's requirements for packaging 	Debian's requirements for packaging of Go software is unreasonable. They expect every single dependency to be individually packaged. The total dependency chain of Caddy ends up being massive. We (the Caddy maintainers) don't have time necessary to allocate to a single distribution, to package and maintain every single dependency individually when all we want to do is ship a single static binary (plus some support files).Instead, we ship with our own debian repo, hosting graciously provided by CloudSmith https://caddyserver.com/docs/install#debian-ubuntu-raspbian. This is packaged via CD with GitHub Actions, and you can verify the authenticity of the build since it's signed by Matt Holt's GPG key.For RHEL, it's in COPR, and that's the best you'll ever get for similar reasons https://copr.fe	francislavoie	13.740539	-3.942108	comment	3.0	15.0	1684872198	8.888467
36354793	> You're lucky if you can use Terraf	> You're lucky if you can use Terraform, but that's not the default.Oh god I thought that was unlucky. I have huge respect for Terraform for popularising what they call “infra as code” (we used to just do this with the actual AWS API) but now there’s multiple modern IaCs that use actual code with real tooling.	nailer	13.675015	-4.380134	comment	3.0	12.0	1686915024	9.509606
36482144	No, doing everything by hand in the 	No, doing everything by hand in the console, which has been super annoying. But don't want to spend time setting up terraform right now.	narenkmano	13.700889	-4.3858895	comment	3.0	12.0	1687797659	9.490537
25777420	I wonder where this leaves the AWS-s	I wonder where this leaves the AWS-sponsored Open Distro for Elasticsearch? (https://opendistro.github.io/for-elasticsearch/)Seems to me that they have no choice but to hard fork off of the last Apache-licensed release of Elasticsearch et al	fiberoptick	13.521868	-4.640679	comment	3.0	19.0	1610637985	-9.946821
25778435	SSPL is based on the GNU AFFERO GENE	SSPL is based on the GNU AFFERO GENERAL PUBLIC LICENSE https://webassets.mongodb.com/_com_assets/legal/SSPL-compare...So apart from adding the cloud non-compete clause (don't offer Elastic as a Service) there are many more restrictions added compared to Apache 2. For example I think linking can only happen with GPL3 code and it is copylefted instead of permissive https://en.wikipedia.org/wiki/Comparison_of_free_and_open-so...	sytse	13.70529	-5.0612464	comment	3.0	12.0	1610642277	-13.00416
25795464	"PSA: This site is basically an ad.
A"	"PSA: This site is basically an ad.
And not one about Elasticsearch at that.I don't understand what all the noise is about. The new license does not make ES closed source, as far as I can tell. They re-license under the MongoDB server side license, which reads a lot like a rephrased AGPL to me.None of you had any reasonable expectation of getting a free Elasticsearch to begin with, and decades worth of free maintenance, optimization and expansion.If their product is this integral to your business, then may I suggest going ahead and buying a license for it?"	fefe23	13.52529	-4.571684	comment	3.0	12.0	1610740423	-9.883206
25834132	So I guess the options are now to us	So I guess the options are now to use the “OpenDistro” [0] or the SSPL distro maintained by Elastic.It’s too bad that Elastic is no longer open source, but respect the companies choice to close source their stuff.Will be interesting if Amazon just maintains their fork or abandons it to make something else.I’m not familiar with elastic as a project and not sure how many community contributions they have, but expect that to shrink as I’m not sure many OSS developers will freely contribute to non-OSS projects.As for trademark stuff, I expect a renaming like Hudson/Jenkins.[0] https://github.com/opendistro-for-elasticsearch	prepend	13.5201025	-4.517212	comment	3.0	14.0	1611069164	-9.784477
25833996	I don't believe the issue most are t	I don't believe the issue most are taking here is the license itself that elasticsearch now has, I think its the relicensing of existing contributions (ironically including those from AWS and their employees) which were originally under a true, well-accepted and liberal FOSS license.If elasticsearch had this license from day one, that would be fair enough, but many people do not freely contribute time and effort to improving something which is not freely available to all others (whether individual or large corporation).Elasticsearch is self-victimising here when they are arguably exploiting FOSS contributors good will (though due to the CLA what they are doing is most definitely legal).	motives	13.525771	-4.5452275	comment	3.0	11.0	1611068415	-9.898097
25866011	"I think ""it's legal but not necessar"	"I think ""it's legal but not necessarily moral"" is a bit of a dodge.It's not just legal. It's explicitly allowed behavior according to the license that Elastic chose. This isn't like ""yes it's the law but some laws aren't fair!"". The only laws that are coming into play here are basically ones which say ""you made your bed now lie in it"".Elastic explicitly said (by choosing a license) ""you can do X with our software!"" and now they are mad because... someone did X with their software?If the Apache license allows morally unacceptable behavior... why did they choose that license?"	fastball	13.526063	-4.481153	comment	3.0	14.0	1611271189	-9.815063
25866042	I am so delighted to hear this. Open	I am so delighted to hear this. Open source wins again. Open source is the right for you to do whatever you want with the software, AND YES, that includes monetize it. I've been sitting on the sidelines reading the different perspectives, but I just cannot see how you can be on the side of Elasticsearch. How can they take all the work from the OSS community and add a clause that THEY only can monetize it? I will tell you right now, I have NO desire to ever contribute to the closed version of Elasticsearch and I will gladly jump on board and contribute to the AWS version. We are watching in real time the OSS community being degraded by these ridiculous licenses.The greed here is on Elasticsearch and not on AWS. If you wanted to have a closed source piece of software that you have the only r	rcconf	13.5229645	-4.4752445	comment	3.0	11.0	1611271299	-9.869361
25868744	The whole point of open-source is to	The whole point of open-source is to curate a useful software commons. Suppose Elastic does lose control of their codebase, and it winds up getting maintained entirely by AWS. Then what's to stop AWS from taking their forked Apache2 code closed-source? Bam, no more ElasticSearch. Without professional maintainers, CVEs will pile up and it will gradually become abandonware.Suppose Elastic had used GPL instead. Then Amazon's hands are tied to a greater extent, but we still lose out. If AWS is the one maintaining ElasticSearch, then ES will steadily become more and more nichely-suited to being a part of the Amazon cloud and less suited to a self-hosted use case. Users can patch it for their own use-cases, but they'll never be able to make it as good as it would have been if there were full-tim	bccdee	13.520877	-4.4812226	comment	3.0	17.0	1611294475	-9.881949
25869878	I think it does say something about 	I think it does say something about the future of the open source model though.Namely, that if you have a company that offers something like a database as a service, search as a service or some other API, and plan to support it's development by offering your own managed service - DO NOT OPEN SOURCE IT WITH PERMISSIVE LICENCES, AMAZON WILL UNDERCUT YOU. AND THEY WILL ALWAYS DO IT CHEAPER BECAUSE THEY DONT HAVE TO FUND FURTHER DEVELOPMENT.Take an example what Amazon did with Mongo - First they launch a closed-source competitor (totally fine) but then they also take Mongo's source and rebadge it as their own fully-managed DocumentDB (Mongo 1.6 but with closed source additions). It's having your cake and eating it too. There's nothing legally wrong with this, but I do think this is market abus	Closi	13.69078	-5.1002474	comment	3.0	11.0	1611306827	9.865297
25936079	It seems to me that almost everythin	"It seems to me that almost everything that needs to be said about the SS Public License has already been said.  I have even posted twice about it (and related issues) myself a few times:
https://sfconservancy.org/blog/2018/oct/16/mongodb-copyleft-...
https://sfconservancy.org/blog/2020/jan/06/copyleft-equality...The only thing I haven't seen said succinctly, although it's been hinted at by many, is this:There is no one on the planet yet who has agreed that they will run a project under the SS Public License and be themselves bound by the SS Public License.That really says it all.  Whatever your view about copyleft licenses generally: legitimate and well-intentioned copyleft licenses (e.g., CC-BY-SA, GPL, and Affero GPL) have many projects that use the license in an inbound=outbound contrib"	bkuhn	13.748156	-5.1309495	comment	3.0	17.0	1611792542	-12.980147
25983890	Kafka is (IME) pleasant to use for p	Kafka is (IME) pleasant to use for people writing application code. It can handle high message volumes. It has good documentation. Its core abstraction is easy to understand and use.OTOH, the author is correct that it's more work to set up and maintain than non-distributed software. Don't introduce it unless you have carefully considered alternatives.I became de facto responsible for running a small Kafka cluster at a small company that could have gotten away with something less shiny. That was not fun. (Especially since the company started with Kafka 0.8 and encountered many changes along the way to modern releases). Eventually the company ponied up for Confluent to take over running Kafka for us as a service. Now I'm back to enjoying the nice Kafka APIs without having to deal with the an	philipkglass	13.559848	-4.997758	comment	3.0	10.0	1612137098	-13.092495
26059798	AWS Announces Amazon Aurora Supports	AWS Announces Amazon Aurora Supports PostgreSQL 12	arthurz	13.541695	-4.8976083	story	3.0	51.0	1612747245	9.669578
26081653	hmm..I get your point. I searched fo	hmm..I get your point. I searched for Kafka alternatives for a bit before including it on our stack. Though, I couldn't find something more adopted by all. It would be good to know a few Kafka alternatives you prefer which can handle equivalent production scale?	ankitnayan	13.576513	-4.9938173	comment	3.0	18.0	1612899784	-13.100474
26082199	Guess your were luckier? YMMV, I've 	Guess your were luckier? YMMV, I've found Kafka generally lives up to its terrible reputation -- and even when it doesn't, it's all somehow more difficult than its initial appeal. I certainly agree with others that inclusion of Kafka in an open-source package like this would discourage me from using it.	stmw	13.606774	-4.9852295	comment	3.0	14.0	1612903662	10.537665
26273341	What makes Apache Kafka fast (2020)	What makes Apache Kafka fast (2020)	stambros	13.603271	-4.9861054	story	3.0	18.0	1614335351	-13.103444
26334268	Crossplane vs. Terraform	Crossplane vs. Terraform	bassamtabbara	13.689523	-4.3833437	story	3.0	20.0	1614804521	9.502836
31171383	Caddy is such a delight! I can't rec	Caddy is such a delight! I can't reccomend it fast enough when somebody mentions they are on nginx.Small random feedback: I like the idea of JSON configuration but most of the common docs/recipes are documented only with the Caddyfile format. I couldn't figure out the full JSON schema that was expected so I wound up generating a Caddyfile string instead for my programatic control. Maybe there is some translation tooling that could help?	evv	13.715505	-3.9391065	comment	3.0	21.0	1650998360	8.86604
31171523	Is Caddy scriptable?  I don't know m	Is Caddy scriptable?  I don't know much about it.  But ever since I discovered nginx-lua-module and OpenResty it's been pretty much a game-changer for me.  Curious if other popular webservers have done similar?  Not really talking about things like mod_perl/php.  Although I guess those are somewhat the same thing.	VWWHFSfQ	13.713195	-3.9583828	comment	3.0	10.0	1650999019	8.804402
31179765	Show HN: TPI – Terraform provider fo	Show HN: TPI – Terraform provider for ML and self-recovering spot-instances	dmpetrov	13.671796	-4.3657503	story	3.0	12.0	1651066884	9.46853
31303568	Please. I’ve been asked why I didn’t	Please. I’ve been asked why I didn’t use specific features of kafka in my solution and “because I’ve never used it before only these other pubsub systems” was not the right answer.	spyspy	13.561972	-4.9900084	comment	3.0	10.0	1652014249	-13.09898
31401055	I'm shocked that no one has said Ter	I'm shocked that no one has said Terraform yet. It has its own declarative DSL, which some people complain about (because people complain about everything), but it works well for what it's intended to do.Providers can be created for anything with an API, from the major cloud providers to k8s to anything else.No agent is required: it just writes state to a file, and then it diffs that file against the actual state every time it runs. (In practice, you'll probably want to put that state in a remote location like an S3 bucket, but that's very easy to do. And if you're the only one using it, you can just save it locally, which is the default behavior.)Depending on your use case for Ansible, it could be a very good fit.	btmcnellis	13.662388	-4.3942256	comment	3.0	17.0	1652723648	9.495976
31400792	Show HN: Open-source tool to deploy 	Show HN: Open-source tool to deploy infrastructure in any cloud	goncaloo	13.615882	-4.354957	story	3.0	14.0	1652722559	-0.85176873
31448988	On efficiently partitioning a topic 	On efficiently partitioning a topic in Apache Kafka	belter	13.586104	-4.99643	story	3.0	80.0	1653061373	-13.075439
31483575	I don’t know if it’s a possibility b	I don’t know if it’s a possibility but I am curious if there can be some artificial solution to this?Could the need to solve this be the first step in developing terra forming technologies?	sid-ant	13.699338	-4.3612156	comment	3.0	10.0	1653332729	7.1345034
31496519	Terraform modules? In particular, ht	Terraform modules? In particular, https://github.com/terraform-aws-modules/ is a better solution for anyone looking for this IMO.(Yes there is a comparison to 'terraform' in the Readme - I'm not convinced it's considering modules, versus just using the AWS provider directly. Another bonus of using tf modules over this: you can eventually realise you need to graduate to using the AWS provider directly, and do so quite easily (cf. `terraform state mv`).)	OJFord	13.684478	-4.3844604	comment	3.0	13.0	1653420588	9.495676
31537599	I respectfully disagree. If TF was s	I respectfully disagree. If TF was stateless, you'd have to manage situations by hand that involve changing the idempotency key, such as the name of a VM. You'd also have to manage situations by hand where a resource is removed from the config.The whole point of TF is that it has state and doesn't require workarounds for these scenarios. Yes, you have to maintain state, but the state problems usually come from buggy providers, not Terraform itself. For example, try and use the GitHub provider to create a repo with GitHub Pages enabled from the gh-pages branch. It won't work because the authors didn't respect a fundamental rule of writing a provider: one state-changing API call = one resource. If you don't respect that, you have to do state handling yourself and you're almost certain to hav	janosdebugs	13.71177	-4.399503	comment	3.0	27.0	1653711979	-12.355756
31537856	> Ansible, Puppet, etc. don’t have i	> Ansible, Puppet, etc. don’t have intermediate stores of the hosts’ configuration, but then again they are used for different things.Ansible, Chef, Puppet and co existed long before Terraform. If the stateless way would work better, these tools take over the cloud infrastructure space. But they didn't. To me it seems like a good sign that the their approaches didn't fit to infra.Additionally, one of the biggest terraform selling points in the early days was the change plan feature. The ability to see the entire change that is about to happen as a result of a config change. I don't think it's easy to implement such thing in a stateless system.Is it possible to create a stateless config for a subset of the resources/providers with a better functionality? Absolutely! Octodns seems like a goo	m1keil	13.7146635	-4.394818	comment	3.0	20.0	1653715809	-12.395436
31537918	Most (all?) cloud providers support 	Most (all?) cloud providers support some form of tagging. Have like a `managed-by=terraform` tag, and assume everything with that tag is Terraform managed.	cmeacham98	13.651662	-4.368492	comment	3.0	12.0	1653716793	9.444742
31537939	I maintain a Terraform provider for 	I maintain a Terraform provider for Kubernetes. And one of the main reasons for that is because the Terraform state ensures purging of deleted resources.Something that kubectl is not capable of. The lastAppliedConfig annotation does not help for purging, because once the manifest has been deleted on disk, there is no way of knowing what to delete from the server. The unusable apply --purge flag is the best example of this issueI think the state mainly exist to know what has been created in the past but since been deleted from manifests and therefore needs to be purged. The caching/performance argument is rather weak, because Terraform refreshes by default anyway before any operation.	pst	13.713156	-4.3931847	comment	3.0	13.0	1653717077	-12.377035
31539194	Ansible and Puppet are for infrastru	"Ansible and Puppet are for infrastructure automation across multiple VMs.
Terraform is a way to declare cloud (native) infrastructure as code.Ansible and Puppet are not used anymore because of the shift to cloud native, not because they are stateless."	Jasp3r	13.691614	-4.4096785	comment	3.0	10.0	1653734365	9.515587
31537944	Cdk is compiling into CF template.An	Cdk is compiling into CF template.And Pulumi is using Terraform providers under the hood.Writing infra in imperative style can cause ALOT of unseen issues when developers start adding IFology or Design Patterns..	pojzon	13.672624	-4.4101796	comment	3.0	11.0	1653717100	9.529012
31583052	The title reads like some sort of ex	The title reads like some sort of experimental tech incubator within Hashicorp's Terraform team is shadily transferring millions. Hashicorp should sue for trademark dilution.	orangepurple	13.723992	-4.378901	comment	3.0	17.0	1654096515	-12.442448
31678441	> And don't even get me started on h	"> And don't even get me started on how much work by this time has gone to build the infra-as-code to manage the rube golderg machine, you'll (seriously) have more lines of CDK code than app logic (that was slower to develop & harder to debug than your actual app code per line).Of all the AWS complaints, CDK is one of yours? I absolutely love CDK and its take on infra-as-code where you construct OO constructs imperatively in a sane language (please, please no more YAML-based DSLs...). I've found that CDK is the only one to have given us the code reusability that all of these solutions always promise while still being overtly hackable.Debugging CDK code? What kind of wacky stuff are you trying to do? I don't think I've ever had to debug CDK outside of typical ""what IAM action am I missing?"" "	von_lohengramm	13.584745	-4.358819	comment	3.0	18.0	1654759399	9.548882
31692273	Almost exactly a year ago we have la	Almost exactly a year ago we have launched Digger. Since then thousands of developers started using it, and our mission remains to build the best developer platform ever.But we are often asked - why so many products that look so similar? After Digger we have also launched Lemon, Alicorn and most recently AWS Bootstrap to name a few. The answer is simple: we want every feature of Digger to be best-in-class. So we are making a product out of it and launch it and perfect it if people need it, or kill the feature if there is not enough demand.Terraform generation is one of the most powerful features of the platform. Not only your AWS account is taken care of - you also get the underlying code that is fully customisable. So you are not limited by the UI and can literally build whatever you want	igorzij	13.676698	-4.381848	comment	3.0	12.0	1654857841	9.540887
31693906	This is an amazing project you have 	"This is an amazing project you have there! We have a very similar philosophy - but taking it one step further. We believe that developers do not and should not care about things like VPCs, security groups, etc. We believe that the current state of infrastructure-as-code is akin to that of assembly language. Low-level and not truly reusable - because using Terraform modules still requires understanding of low-level concepts. What we are trying to build is essentially a compiler of ""human"" concepts into Terraform. But because even simply running Terraform is a daunting task to un-initiated developers, we also need to make this part easy. Hence we run it on our servers. This way the user is completely shielded from complexity without losing the ability to go low-level and customise whatever t"	igorzij	13.678582	-4.385946	comment	3.0	14.0	1654867854	9.523492
31714166	Building Self-driving Kafka clusters	Building Self-driving Kafka clusters using open source components	kiyanwang	13.570181	-4.998522	story	3.0	45.0	1655038999	-13.103808
31767695	I don't follow their product closely	"I don't follow their product closely. Who are their competitors?(If I were in the market for their database and the alternatives were close in parity and price, I'd be likely to choose a competitor for the name not being ""cockroach"" alone.)"	echelon	13.69753	-5.181333	comment	3.0	10.0	1655395795	10.065071
14079339	Why? Nginx is not a political statem	Why? Nginx is not a political statement or software nor does it benefit it's author's causes in any way.With that said, use caddy. Not for political reasons, just because it's awesome.  https://caddyserver.com/	scrollaway	13.679152	-3.981643	comment	3.0	15.0	1491838217	8.798795
14125579	Kafka wasn't a problem at all. Actua	Kafka wasn't a problem at all. Actually, I was shocked how well kafka just worked. It did everything I expected it to do, exactly as advertised in the documentation. Well, except for how annoying it was to get it installed and working on ubuntu. I will definitely be using kafka in future projects.I think all my technology choices worked out fine. I dumped server-sent events halfway through in favour of websockets because WS support binary packets. But that was a pretty easy change affecting at most 50 lines of code.I still wish we had an efficient (native) solution for broadcasting an event sourcing log out to 100k+ browser clients, with catchup ('subscribe from kafka offset X'). Nodejs is handling the load better than I expected it to, but a native code solution would be screaming fast. I	josephg	13.569159	-4.9973674	comment	3.0	10.0	1492346795	-13.096722
14142586	No CloudFormation support for taggin	No CloudFormation support for tagging and embedding python3.6 code in the templates - they really do their best to push us away from using CloudFormation!	nikolay	13.592051	-4.395752	comment	3.0	11.0	1492547237	9.512983
14171387	> git is also a really bad name,That	"> git is also a really bad name,That's stretching it a bit too far. Just because it's a ""mild oath"" in British english, doesn't mean it's bad name for rest of the world. I for one have never heard about it and don't think git is a bad name at all.Cockroach, on the other hand, I don't know of anyone who would get a good image in their mind hearing it.So you think if people keep saying cockroach a lot, suddenly cockroach will magically become some nice clean creature in people's mind? That's like saying if you keep saying ""ShitDB"", someday people will think it's a good name."	cocktailpeanuts	13.715122	-5.170169	comment	3.0	14.0	1492843258	-4.57729
14200233	Neat, thanks for mentioning Caddy [0	"Neat, thanks for mentioning Caddy [0]. I hadn't heard about it before now, and just from looking over their docs it looks very promising.Their website is superb, with simple explanations of what the tool does and transparent pricing for their paid options.The only thing I'm initially a tiny bit weary about is their claim of it being production ready. Being used by thousands of sites is an amazing feat, but how big are the loads on these sites? Production-ready can mean completely different things depending on what you're building. I think it'd be a nice improvement to see a bit more data backing up that claim. Just from a quick google search it looks like there's a decent number of articles comparing it with nginx, so I guess I""ll stat digging in a bit deeper.[0] https://caddyserver.com"	TheAceOfHearts	13.678148	-3.9784544	comment	3.0	11.0	1493177666	8.823388
14240253	Cockroach Labs | New York, NY | Full	Cockroach Labs | New York, NY | Full-time | Onsite | $100-150kCockroach Labs is the company behind CockroachDB, an open-source, distributed relational database written in Go. CockroachDB is scalable, survivable, and strongly consistent - hence the name. The company was founded in 2015 with a mission to Build it Right.Check out the product on Github at https://github.com/cockroachdb.Roles:-- Principal Software Engineer, Distributed Systems-- Software Engineer, Distributed Systems-- Software Engineer, Full Stack-- Software Engineer, Production-- Technical Lead, Full Stack-- Senior Product Designer-- Web DeveloperAll positions offer $100-150k base, equity and comprehensive benefits. Learn more at https://www.cockroachlabs.com/careers.Interested in chatting? Email jobs@cockroachlabs.	lgrenawalt	13.700506	-5.1780906	comment	3.0	12.0	1493664088	9.963256
14310408	So I do product marketing for a livi	So I do product marketing for a living, and have launched a whole wack of things with good and bad and boring names. The fact that CockroachDB is consistently on top of HN with each thing they do is pretty strong evidence that they're doing just fine with the name they have, and probably doing even better than if they had a milquetoast tech startup-esque name.Also, they know what their sales cycles look like. They hear feedback from actual customers. They have people whose job it is to notice any advantage they could have along the way. And yet! They're still selling stuff, they're at 1.0, and they're still alive — with the name they have.	andkon	13.722862	-5.1689563	comment	3.0	11.0	1494440801	-4.5783143
14362912	Why would anyone want to use this ov	Why would anyone want to use this over Kafka Streams? Seems a lot more verbose.	u320	13.549461	-4.998963	comment	3.0	11.0	1495056153	-13.100892
14375351	Hm, yeah I hope so too :/ Been using	Hm, yeah I hope so too :/ Been using Caddy in prod for a year now, this issue, rare as it may be, could single-handedly get me back on nginx.Having the server be unable to start through circumstances outside of the system's control is just such a huge no.	scrollaway	13.693948	-3.9631922	comment	3.0	33.0	1495200298	8.828118
14456669	The biggest issue with PubSub and Am	The biggest issue with PubSub and Amazon's alternative is the cost. Being capped at a per-message cost would be a no go.If you can get away with using PubSub or the like it would be far easier than to manage your own Kafka deployment (correctly).If data loss is unacceptable then Kafka is basically the only open-source solution that is known for not losing data (if done correctly of course). NSQ was great but lacked durability and replication. We can guarantee that two or more Kafka brokers persisted the message before moving on. With NSQ, if one of our instances died it was a big problem.Managing Kafka in a cloud environment hasn't been easy and required a lot of investment and we have yet to move everything over to it.	TheHydroImpulse	13.548289	-4.9917364	comment	3.0	16.0	1496272584	-13.099333
14540644	No questions, just a suggestion: imp	No questions, just a suggestion: implement the part where the terraform plan is added as a comment in the PR. We set this up at my current employer and it makes the review process much quicker (also, commenting on lines in the ~plan~ terraform code changes is the bee's knees).Don't have the apply be automatic after a review is approved; terraform apply's occasionally go sideways and need human intervention (remember: rollbacks are not automatic). A human should always kick off the apply and monitor state change activity.	toomuchtodo	13.711131	-4.3889823	comment	3.0	11.0	1497298184	9.486046
14541079	Oh, geeze. This is about: terraform.	Oh, geeze. This is about: terraform.io	pavement	13.71074	-4.382306	comment	3.0	10.0	1497301300	9.470617
20573548	Kafka exactly-once semantics address	"Kafka exactly-once semantics addresses the main issue of the article I think.It's now relatively simple for a developer to implement a system with exactly once guarantee as long as you take care of the world that is not inside a Kafka transaction (integrations with third parties and such), which is still not super easy sometimes, but less so then the distributed transaction that will happen inside Kafka.Kafka hides the complexity really well from my use of it so far is very reliable with the ""new"" semantics."	cfontes	13.557816	-4.9869227	comment	3.0	12.0	1564573866	-13.090604
20596067	This is just an FYI type of comment.	This is just an FYI type of comment. with zookeeper, one needs an odd number of machines, usually not greater than seven. Servers are indexed from 1 to n. They’re replaced one for one, so the server id matches. Scaling it up and down is a bit of a pita because every server needs to know all other servers. Changing the ensemble members requires restarting every zookeeper instance because zookeeper doesn’t support config reload.Zookeeper does expect a single “host” for every server but it runs perfectly fine with docker. But that’s no different from consul or etcd.	rad_gruchalski	13.587528	-4.7840242	comment	3.0	14.0	1564775776	-13.2161875
20862996	Maybe I'm misunderstanding, but I th	Maybe I'm misunderstanding, but I thought the new license is just about offering MongoDB as a service by itself. But if you're making any other sort of website and use MongoDB as a database, you can still install it and use it for free.If the companies got lured into using MongoDB as a service, then I understand that prices could increase and companies could be in a pickle. But if companies got lured into using MongoDB as software, I don't see how they could have a problem.	Thorrez	13.749249	-5.1558714	comment	3.0	12.0	1567473781	9.946345
20965482	Terraform is great but if you want t	Terraform is great but if you want to change to a different cloud provider you pretty much have to rewrite everything	LIV2	13.674335	-4.3939753	comment	3.0	15.0	1568402808	9.500384
20965554	Terraform is okay, if you don't valu	"Terraform is okay, if you don't value things like ""loops that aren't an awful hack"", but in 2019 Pulumi is significantly better and their cloud-agnostic implementation actually kinda works okay."	eropple	13.697839	-4.386089	comment	3.0	12.0	1568403210	9.504508
20974105	Pretty amusing.  If you aren't famil	"Pretty amusing.  If you aren't familiar with Terraform, it is declarative.  You provide the desired state of your system, and if the current state is different, TF does its best to heal components and their dependencies into that state.""Having pizza"" would be the state TF is trying to achieve here"	daenz	13.713364	-4.390807	comment	3.0	62.0	1568498350	9.4831915
20974264	While it does work, this provider is	While it does work, this provider is designed to showcase the power of Terraform and flexibility. I don’t recommend using this in production :)	sethvargo	13.721762	-4.3844724	comment	3.0	11.0	1568500238	9.512181
20974186	Meh. I used terraform for a few year	"Meh. I used terraform for a few years and every time
it didn’t work the way I wanted I found a ignored github issue. Vaporware as far as I am concerned."	t34543	13.699047	-4.385692	comment	3.0	25.0	1568499235	-11.921525
23755476	It’s just a search engine... and don	It’s just a search engine... and don’t get me wrong, it’s a really robust and expressive search engine, but all it’s doing is data analysis. As scary as that is (and it is absolutely scary), it’s not anything that someone couldn’t do with tableau, or with a whole lot more patience and data manipulation, straight elasticsearch.Palantir makes that easier, sure, but at what point is a tool sufficiently generic so as to not be held accountable for what it’s used for? And if there is no amount of generalizability that absolves the author of software from what its used for, how do you square that against open source software?Should the elasticsearch authors feel guilty if their software is used for something unethical as described here? No money is changing hands is one difference, but for a dec	taywrobel	13.535508	-4.5047216	comment	3.0	15.0	1594093148	-9.835475
23790050	With Pulsar vs Kafka, I don't see a 	With Pulsar vs Kafka, I don't see a huge argument between either one functionality wise as they have so much in common (distributed log, Java based, avoid copying memory, use Zookeeper). Because Kafka is more supported and well-known it seems Pulsar needs to be an order of magnitude more performant to capture developer mindshare.I see the same with Spark vs Flink in that similarities outweigh differences. I wonder if this is some sort of emergent pattern in open source software.	trengrj	13.579099	-4.9707947	comment	3.0	20.0	1594377444	-13.111779
23791296	"Another service that ""needs"" zookeep"	"Another service that ""needs"" zookeeper. Has anyone figured out a simple way to manage zookeeper for a small team?"	x87678r	13.572922	-4.8368626	comment	3.0	10.0	1594388045	-13.192159
23793948	How in pulsar do they get around the	How in pulsar do they get around the fact that adding a new broker, data needs to be moved over before that broker can start serving data? This seems like a basic law of physics type limitation to me.	kevstev	13.560676	-4.9575562	comment	3.0	10.0	1594402028	-13.1130905
23964678	Terraform is so heavy handed - I wou	Terraform is so heavy handed - I wouldn't call it a deployment tool.  It's more of a means to build out infrastructure in AWS.Once you get your AWS account setup there's still virtually no tooling to actually manage deploys of new code into that infrastructure.  We're going to hand roll some tooling on top of aws-cli most likely.	FunnyLookinHat	13.669199	-4.378646	comment	3.0	11.0	1595855184	9.475349
24096161	intellectual property is conceptuall	intellectual property is conceptually corrupt.at the very least we should be honest and admit that it's all about being continuously paid for things we already finished doing (sometimes even generations ago).but I am pretty sure that it will have to get worse, far worse, so bad that a Kafka seems tame before people get convinced that ownership over language is stupid.	naringas	13.623137	-4.9764347	comment	3.0	10.0	1596930535	10.550699
24100015	> Why are so few configuration langu	> Why are so few configuration languages not backed by a real language?In many cases, not having a full featured language is helpful as you have some additional guarantees that comes with a non Turing complete language like guaranteed completion.In some cases though, you do need a full pledged programming language. For those cases, HashiCorp recently announced CDK support for Terraform:  https://www.hashicorp.com/blog/cdk-for-terraform-enabling-py...	Znafon	13.688407	-4.4113717	comment	3.0	18.0	1596985136	9.510246
24139358	Manage Active Directory Objects with	Manage Active Directory Objects with the New Windows Ad Provider for Terraform	mooreds	13.701714	-4.3876405	story	3.0	13.0	1597285531	-11.6309805
24158198	I'm not too experienced with Terrafo	I'm not too experienced with Terraform, can one use it to, for example, do a rolling deployment with something like haproxy as the load balancer?	krmboya	13.690795	-4.383989	comment	3.0	10.0	1597414386	9.477717
24410568	You're not out of touch, Terraform +	You're not out of touch, Terraform + Containers + People realizing that building immutable things is much better than managing state pretty much killed Chef and Puppet.	carlosf	13.676253	-4.3979177	comment	3.0	10.0	1599585887	9.47062
33081832	> Use Javascript, a true programming	> Use Javascript, a true programming language, no more YAML or Domain Specific language.This appears to be a jab at Terraform but Terraform's declarative language is supposed to be a step forward from ad-hoc provisioning scripts. One of the issues with imperative scripts is you have to be mindful of intermediate state whereas Terraform allows the users to just think about the initial and final state.	diceduckmonk	13.701601	-4.390736	comment	4.0	12.0	1664897546	9.524846
33179707	I'm not sure if this question is off	"I'm not sure if this question is off-topic and if so I'm sorry, but I was really curious so I couldn't help but ask. I observe that articles about Franz Kafka end up in HN front page relatively frequently. Personally, I'm a huge fan of Kafka, I read all his novels (and some of his short stories), he's one of my favorite author, so I have no problem with this. But I can't help but wonder whether there is some kind of correlation between being an HN reader and liking Kafka's works, or whether people just see the word ""Kafka"" and somehow think it's related to Apache Kafka [1] and upvote. Curious about what others think about this.When it comes to the OP article:> Vladimir Nabokov was having none of it: in his teaching copy of the novella, he drew a sketch of a common beetle.I'm curious why Na"	gnulinux	13.679025	-4.9574127	comment	4.0	18.0	1665593636	10.54202
33206977	So it's mod_php for Caddy, in revers	"So it's mod_php for Caddy, in reverse?The traditional idea is to build a plug-in for the parent webserver. By essentially ""making a fork"" of Caddy, if you want to add other plugins to Caddy and then incorporate them into FrankenPHP, it's a lot more work. If instead you ship a PHP plugin to Caddy, you can manage Caddy instead and mix and match different functionality in one place.But I guess it's heretical to suggest somebody use plugins in Go, if the whole idea is everything is a static binary."	0xbadcafebee	13.74391	-3.9578016	comment	4.0	21.0	1665771402	8.979266
33276255	It just doesn't work for the most pa	It just doesn't work for the most part.  Maybe as an Ops person, I just want to do Ops, I don't want to have to understand your code, but Lambda has specific limitations on how long code can run for.  I can't allocate CPU and Memory resources in Kubernetes without a deep understanding of the application.  S3 has limitations on how files can be distributed and accessed.  Integrating with CI gets complicated quickly and requires understanding the code being integrated.  A lot of the time building things in terraform I spend three times as much time getting the information out of a developer as they would doing it themselves.  I mean yes, there's 60% or so of my job that involves working on lower level infrastructure that doesn't touch a dev, and we do need ops engineers for that, but the oth	mikkergp	13.568751	-4.374106	comment	4.0	15.0	1666279858	-4.2095923
33685847	Franz is a fairly obvious name for a	Franz is a fairly obvious name for a Kafka related tool/library so hopefully it won't get confused with https://github.com/twmb/franz-go	shric	13.667861	-4.970792	comment	4.0	13.0	1668981409	10.572881
26503811	Ask HN: Should we go open source for	Ask HN: Should we go open source for a new product?	YKreator	13.655136	-4.3525906	story	4.0	5.0	1616082118	-12.365379
26642619	Exactly, no workflow for terraform o	Exactly, no workflow for terraform or CLI if you have U2F (Yubikey) 2FA.	Quiark	13.709793	-4.370394	comment	4.0	12.0	1617154747	-2.1988077
26649325	Seems a bit like Plausible only pays	"Seems a bit like Plausible only pays lip service to some of these ideas. Merely 5 months ago the co-founder touted here on HN about how they are ""big fans of open source so wanted as permissive [a] licence as possible"" [0], then promptly went and changed the license to a strongly copyleft (AGPL) a few weeks later!They might well be the next Elastic/CockroachDB/MongoDB/etc. Or better yet, they might do the classic bait-and-switch later on: get developer buy in with a good story about openness, then once they'd gotten enough of a customer (aka dev) share, do the switch.[0]: https://news.ycombinator.com/item?id=24700565"	z77dj3kl	13.563108	-4.9591193	comment	4.0	17.0	1617208327	-5.6411304
26650458	Imagine CF being Terraform + Terrafo	Imagine CF being Terraform + Terraform Cloud (only free!) - but more reliable and having real changesets with more predictable behavior and the state being the true AWS state, not some projection of it within Terraform.	nikolay	13.655924	-4.3602114	comment	4.0	23.0	1617212722	-6.709132
26650871	Man, I don't miss CloudFormation. If	"Man, I don't miss CloudFormation. If you want to do anything interesting at all (like being able to spin up turn-key ad-hoc stacks for developers that are mostly the same as your main environments), then you have to parameterize everything, and passing data around CloudFormation templates is just awful--what you want is functions and data structures but CloudFormation gives you ""nested-stacks"" and you have to encode most of your data structures as strings and ""parse them out"" with the YAML builtin functions that they provide (e.g., `{""Fn::Split"": ""foo,bar,baz""}` will evaluate to `[""foo"", ""bar"", ""baz""]`, but good luck if you want a list of objects). Each stack also has a limit on the number of parameters you can pass, and since you can't really pass struct-like data (e.g., `""Foo"": {""bar"": """	throwaway894345	13.535409	-4.480656	comment	4.0	16.0	1617214396	9.468685
26781617	As a longtime ElasticSearch cluster 	As a longtime ElasticSearch cluster admin/developer and Elastic Cloud customer, I don't feel bad for Elastic in the slightest and I'm psyched about this fork.The way they operate their cloud service leaves a lot to be desired and encourages maximum spend if you end up wanting to use it for anything demanding in production.	busterarm	13.531346	-4.603507	comment	4.0	31.0	1618245775	-9.951748
26812857	Maybe an unpopular opinion but what 	"Maybe an unpopular opinion but what you just described as ""naive"" is arguably a better solution than Terraform's overengineering.I use Ansible to manage multiple clouds (Openstack, AWS...etc) using a mix of custom modules and public collections. I don't need a ""state"", I couldn't care less if resources exist or not, upgrades between versions are smooth, module/collection upgrades doesn't interfere with all the existing resources we already have... every time I run a playbook I know that everything will end up just like I want it to be. Not bad for a naive approach I guess."	mr_C	13.669071	-4.3927364	comment	4.0	30.0	1618433292	9.457907
26813006	I haven't used Ansible so maybe I'm 	I haven't used Ansible so maybe I'm incorrect here but aren't tf and Ansible solving slightly different problems?Terraform feels like infrastructure management to me. We use it to provision underlying resources: Networking, Clusters, Nodes, Alerts, etc. All of the actual code deployments are entirely separate.Ansible is more of a configuration management right?	llbeansandrice	13.692835	-4.409739	comment	4.0	13.0	1618433986	9.52445
26815054	Roll back is one reason I choose AWS	Roll back is one reason I choose AWS Cloudformation over  Terraform. And also I do not see the reason for Terraform in my use case as we run only on AWS. No point in not using AWS native tools.	manishsharan	13.665309	-4.3654075	comment	4.0	24.0	1618448488	9.512202
26815003	I do not like terraform and I believ	"I do not like terraform and I believe it's a terrible tool.Here is the error you get when it fails:Terraform does not automatically rollback in the face of errors.
Instead, your Terraform state file has been partially updated with
any resources that successfully completed. Please address the error
above and apply again to incrementally change your infrastructure.If that error does not give you pause, I don't know what will.  
It's basically YOLO-ing it and in case it does not work you're on your own. 
It's also leaving you in whatever state and now you need to figure out what it managed to do, what didn't work and figure out how to 1) make it work 2) make terraform understand that it worked. Usually this happens at the worst time when you are deploying to production.Do we want to talk abou"	rantwasp	13.708155	-4.3935833	comment	4.0	38.0	1618448146	9.54245
26882041	I used both in depth.  CDK as it is 	"I used both in depth.  CDK as it is now is a wrapper around CloudFormation  and therefore suffers from same limitations: AWS only, 'static' templates.Pulimi on the other hand is closer to terraform, except you can write in a language which actually doesn't stand in your way and allows you to programmatically access values available during execution only. With CDK you can only reference them in CF template (lets say instance ID which you just created), but these are never ""lifted"" to your code. Also CDK misses native 'datasources' and offers limited mechanism for lookups.Pulumi also has a killer Automatioin featre, where you can code infrastructure migrations, not unlike you'd do it for SQL.  Neither TF nor CDK allows you to do that, and you'd need to code infrastructure state transitions i"	rossmohax	13.653528	-4.4103074	comment	4.0	14.0	1618954397	9.513159
26882250	"According to [1], ""Native providers "	"According to [1], ""Native providers are built directly and automatically from the cloud provider’s API..."", and are not hand-coded, unlike Terraform's providers.I'm surprised this is possible. If it was, why didn't Terraform follow this approach a long time ago?The cloud providers' APIs provide the endpoints for creating, updating, reading and deleting resources. Terraform and Pulumi's value is to provide an idempotent abstraction on top of that. And that abstraction is not straightforward to write, because it has to handle numerous nuances and anachronisms in the underlying APIs. For example, in the event of updating an existing storage bucket, the abstraction has to determine whether the bucket can be simply updated, or if it needs to be re-created (say if you were changing the name or l"	leg100	13.679049	-4.386459	comment	4.0	17.0	1618955343	9.499981
26882195	Any thoughts on Pulumi vs Terraform?	Any thoughts on Pulumi vs Terraform?	chrischen	13.68208	-4.391991	comment	4.0	18.0	1618955115	9.520851
27094898	I migrated a unmaintainable over eng	I migrated a unmaintainable over engineered java spring application consisting of around 20 micro services using Kafka all over the place to one single Rust application. A relief for anyone in the company.	holoduke	13.551272	-5.031581	comment	4.0	15.0	1620557067	-13.255433
27185415	I feel dumb saying it, but as someon	I feel dumb saying it, but as someone whose had a lot of experience with messages buses (Rabbit and AMQP1.0), I've always struggled to understand what domains/situations Kafka is actually the best fit for. It's probably because of the areas that I work in which doesn't make it obvious, but I'd love to hear what exact scenarios it does actually make sense to use Kafka for instead of Rabbit or AMQP1.0 :)RabbitMQ is one of those things that I've always found better to let the experts run (managed SaaS), unless your team is really wanting to take on the burden of becoming an Erlang distributed system debugger :)Pulsar seems really interesting... There are now more managed Pulsar offerings coming online (StreamNative, DataStax who bought Kesque, Pandio, etc)	Serow225	13.551919	-4.9807634	comment	4.0	15.0	1621269695	-13.091716
27190762	Infinitic (Apache Pulsar framework f	Infinitic (Apache Pulsar framework for building distributed applications)	zbentley	13.564447	-4.9599013	story	4.0	41.0	1621306095	-13.129262
27264626	The inability to easily go to $HOME 	The inability to easily go to $HOME in Finder is of great annoyance to mevwhen combined with app signing. Hashicorp seems to run into this most often - download a new version of Terraform/Packer/whatever, install to ~/.terraform.d/plugins/darwin_amd64, and MacOS sternly tells me I can't run it, with zero instructions on how to proceed. Manually type the path in Finder/Go, Option+Open the binary, then you're good to go.I understand the reasoning for protecting the end user, but like UAC in Windows, or Developer Mode options in Android, you should be able to disable these protections. If I want to run a binary, I want to run that binary.	sgarland	13.711797	-4.385446	comment	4.0	16.0	1621865827	-12.300321
27317128	Show HN: terraform-provider-factorio	Show HN: terraform-provider-factorio	efokschaner	13.686106	-4.382636	story	4.0	55.0	1622218076	9.470593
27323805	Franz Kafka: Manuscripts, drawings a	Franz Kafka: Manuscripts, drawings and personal letters go online	keiferski	13.696072	-4.961657	story	4.0	104.0	1622276144	10.543634
27367921	They offer commercial support servic	They offer commercial support services/contracts for Apache Kafka.They sell proprietary Apache Kafka add-ons for enterprise such as authentication/authorisation RBAC. The open source Kafka release supports auth/authz but not consistently between the suite of tools. They also have a monitoring UI etc.They release the commercial add-ons under the Confluent platform distribution.They heavily push ksqldb which is a sql layer on top of Kafka that competes with https://lenses.io/. Confluent market it as a DB but that’s pushing the creative marketing.They provide a hosted Kafka service.The hosted service is likely more attractive to SMEs. It also has competition with the SME market with AWS providing managed Kafka. Confluents service does have extras on top of AWS like tiered storage behind a non	tiew9Vii	13.560136	-4.9898233	comment	4.0	23.0	1622637179	-13.112096
27368226	> I like Kafka but can’t see how Con	> I like Kafka but can’t see how Confluent can be profitable.I've seen what some corporate customers pay for an enterprise license. It's kind of insane.	scoopertrooper	13.569785	-4.9928546	comment	4.0	14.0	1622639214	10.483135
27434862	Can someone explain in a few words w	"Can someone explain in a few words what this is and who may be interested in this?The name does not give any hints, also the discription tells me nothing:""Terraform enables you to safely and predictably create, change, and improve infrastructure. It is an open source tool that codifies APIs into declarative configuration files that can be shared amongst team members, treated as code, edited, reviewed, and versioned.""Is this a tool for property developers?"	jansan	13.702016	-4.388692	comment	4.0	13.0	1623158852	9.483066
27435927	You may be interested in Pulumi: htt	You may be interested in Pulumi: https://www.pulumi.com/Basically it's Terraform but instead of declaring your resources in HCL, you declare them in a real programming language. You're still producing a declarative config that the engine then diffs, applies etc. In fact, it's compatible with existing terraform providers, so it has a surprisingly large selection of things you can use it for.Note their docs will try to guide you towards using their hosted service which basically does nothing except host the state file, but you can use an S3 or GCS bucket instead and it works fine.It's definitely not without its own problems, but I'd say it's overall an improvement.	ekimekim	13.705923	-4.4017935	comment	4.0	17.0	1623163849	9.52413
37581477	Oh, it's meatless terraform.	Oh, it's meatless terraform.	asmor	13.709228	-4.3900084	comment	4.0	12.0	1695195413	9.478581
37581583	The new branding is recognizable, cu	The new branding is recognizable, cute and short. However, Tofu has a somewhat mixed reputation. I guess OpenTofu can stand on its own though.	yyyk	13.68032	-4.379925	comment	4.0	25.0	1695196455	11.48017
37581622	Is terraforming even a thing outside	Is terraforming even a thing outside of the realm of SF? I can't say I've ever seen it depicted as anything but positive, since it's taking unlivable planets and making them livable.	bigstrat2003	13.7250395	-4.351016	comment	4.0	14.0	1695196721	9.289795
37582376	What are OpenTofu's plans around CDK	What are OpenTofu's plans around CDKTF? Will that only work with HashiCorp TF going forward? Or will that be forked as well?Terraform is a better foundational layer than CloudFormation, but CDK is by far the better level of abstraction, I believe. AWS CDK is decent, but it is of course limited to AWS. CDKTF was one of the more interesting initiatives in this space.	bilalq	13.687496	-4.386031	comment	4.0	16.0	1695204230	-12.211137
37581531	This is too woke for the UK governme	This is too woke for the UK government. Terraform is widely used in the Home Office, I don't think Suella Braverman will approve a switch...(Reference for non-UK viewers: https://www.theguardian.com/politics/video/2022/oct/18/suell...)	vr46	13.710829	-4.383223	comment	4.0	14.0	1695195989	9.440699
37592771	Last I checked, CDK was just a types	Last I checked, CDK was just a typescript veneer atop the steaming pile that is known as CloudFormation.Not even tagged unions can polish that turd.	koolba	13.598108	-4.2808256	comment	4.0	12.0	1695265426	9.499456
37647997	It seems a lot of the complaints wer	It seems a lot of the complaints weren't about kafka itself, but rather seemed to stem from internal communication problems.  Custom kafka message headers could very well be custom http headers, and the problem is the same.  Kafka is just coincidental.Looking at the volume though, kafka is overkill.  They most likely could have just used the database and reaped the benefits of doing everything in a single transaction, with easier row level locking.  The post acknowledges this.I do think it highlights the need for a small scale kafka, though.  It's conceptually great to have everything work off of logs, but kafka does add a non trivial operational burden.	chrsig	13.562229	-4.9991217	comment	4.0	22.0	1695664832	-13.087368
13276446	Ask HN: Why should one ever use AWS 	Ask HN: Why should one ever use AWS Kinesis when Kafka is out there?	amirathi	13.528893	-4.9667196	story	4.0	8.0	1483003619	10.564814
13340162	One of the projects did use Kafka as	"One of the projects did use Kafka as the ""event log"".  There were stability issues with the version of Zookeeper that was used.  From a writer/reader perspective Kafka was sufficiently performant when it was up.  (The Zookeeper issue was eventually fixed as I recall, but by then the damage was done in terms of political capital spent and lost.)The big issues didn't really have that much to do with the persistent store of events.  The bigger issue was the fact that as new features get added to your application, your event payloads change.  Well, in order for projection (particularly re-projection in the case of an issue) to work, your code needs to know how to read and process all versions of every event.  Of course, there are techniques like snapshotting to give you point in time ""good sta"	eric_b	13.555359	-4.991264	comment	4.0	12.0	1483736566	-13.086924
13375354	I don't mean to defend Mongo here, b	I don't mean to defend Mongo here, but as a counter argument to the broad principle: Ubuntu doesn't ship with iptables blocking all incoming connections by default. Should it?	orblivion	13.688948	-5.1450505	comment	4.0	12.0	1484153881	9.929771
13494191	Unfortunately, this is not a very re	"Unfortunately, this is not a very realistic analysis.Martin mentions HDFS in the first paragraph as an example.  But HDFS does not use partitions or consistent hashing for data assignment.  All replicas in HDFS are placed manually according to the placement policy currently in effect.  Each block can have a completely different set of nodes.  He mentions Kafka as ""typically deployed in... JBOD configuration.""  But Kafka is actually typically deployed over a RAID configuration.  JBOD support in Kafka is fairly new and still not often used.  It would have been better to mention only the systems that this analysis is focused on (Cassandra might be one such).This analysis leaves out a critical factor, which is that the distributed system will start re-replicating each partition once nodes are "	colin_mccabe	13.528235	-5.02145	comment	4.0	13.0	1485457255	-13.105409
27653220	As someone who spends two hours a da	As someone who spends two hours a day dealing with buggered terraform state and upgrading terraform and dealing with terraform bugs I can see it.It’s one of those things that really works pretty well but there are enough edge cases to make it slightly soul sucking.	hughrr	13.703641	-4.388004	comment	4.0	23.0	1624813560	9.48461
27777550	Where I last worked, all terraform c	Where I last worked, all terraform changes went through PR, requiring approval, after having read the plan. It was using a system called atlantis. It was slow, but it prevented issues like this.	zug_zug	13.711998	-4.38298	comment	4.0	15.0	1625778046	9.489979
27780808	Y'know, normally I'd be relatively f	"Y'know, normally I'd be relatively forgiving as none of us are perfect, but jeesus this is a clusterf** of an article.The author, a ""Director of Consulting"" might want to do some training (Both Hashicorp and Microsoft have free training).Why in the hell would you have the same statefile for different environments? Why would you have these environments in the same Azure subscription? Why would you run your terraform so infrequently that you'd forget about a botched statefile move? Why would you not read TERRAFORM PLAN (It's LITERALLY WHAT TERRAFORM DOES)?I also suspect that while the author's probably heard of a CI/CD pipeline, they're running their IaC from their local machine, given the tone of the article.Why, for a production database that contains information not contained elsewhere, w"	thedeusx	13.702342	-4.379881	comment	4.0	15.0	1625809860	-12.309592
27818445	Elastic are a $13 billion company. T	Elastic are a $13 billion company. They get little sympathy from me.They built that value off the back of many other open source products, and with help from the community - all under licenses like Apache 2.0 and MIT.And now, after building all that value by selling Enterprise and SaaS versions of the software, they decided to specifically target their competitor who was doing the exact same thing.Without Lucene, there would have been no ElasticSearch. Why does ElasticSearch get to take all the hard work done by Lucene contributors and sell it as part of their own product? This does not sound fair... in the terms you put it.If this hurts Elastic, they did it to themselves. They don't deserve your support.	thefurrysquid	13.532	-4.603054	comment	4.0	20.0	1626161785	-9.94428
27820800	Not that I'm not impressed by Kafka 	Not that I'm not impressed by Kafka and its stability, performance and scalability, but I see the same behaviour from our customers.They specifically want Kafka, there's no real reason other than they need a queue, which Kafka actively states that it's not. At that point it gets really tricky to reason with the developers about why they might be better served by something else. Generally speaking it's not much of an issue, because Kafka will deal with workloads just fine, it's just weird. I have seen one customer use Kafka as a database, that works less well.We do see the same with Kubernetes. The developers pick Kubernetes and at that point it's to late. They specifically want Kubernetes even if you could more easily solve the problem with Nomad, Docker-Compose, plain old VMs or EC2, depe	mrweasel	13.563272	-4.9959917	comment	4.0	25.0	1626183625	-13.101407
27824175	It would if the source was pushing i	It would if the source was pushing into the Kafka stream directly. It doesn't solve the problem of going out of sync if my code to push to the Kafka stream is entirely down and I miss POSTs.(And, of course, I don't want Kafka. I want Google PubSub. No, wait, I mean SQS. No, wait, I mean I want zeroMQ. No, I mean....)	jerf	13.576085	-4.991039	comment	4.0	19.0	1626199746	-13.093098
27940023	Resource types in the name is a pet 	Resource types in the name is a pet peeve of mine. They should not be part of the name. An RDS instance can never be anything other than a database, no need for 'database' or 'db' or 'rds' in the name. Likewise a Kubernetes cluster can never be anything other than a k8s cluster. It doesn't need 'cluster' suffix.Terraform makes this redundancy especially obvious because you already include the type in any references to resources eg.google_container_cluster.payments_cluster.something	ukoki	13.664423	-4.40488	comment	4.0	14.0	1627126668	-13.4669075
12214358	Does anyone that has used Terraform 	Does anyone that has used Terraform have any major complaints about it, or conversely any specific praises for something it does well compared to other tools in that space?	_asummers	13.696823	-4.381554	comment	4.0	30.0	1470181861	9.463123
12324833	I use and love Terraform. Even for s	I use and love Terraform. Even for small projects, I find it a lot better for provisioning AWS resources than any of the alternatives.	morgante	13.686348	-4.382675	comment	4.0	18.0	1471660090	9.520506
12343539	Regarding terraforming, I suggest a 	Regarding terraforming, I suggest a quick win may be to trigger a volcanic super-eruption. The cooling effect is known to reduce global temperatures to refreshing and/or bracing levels:https://en.wikipedia.org/wiki/Volcanic_winterI was leaning towards using nuclear weapons to kick things off, but the potential side effects of such an event will probably be tricky enough, without the giant dust clouds soon to enshroud the Earth also being radioactive.There may of course be other unforeseen consequences, but given the alternatives (which we see all too clearly) I ask: who's in?	goodmachine	13.703482	-4.36483	comment	4.0	12.0	1471959136	7.129158
12422895	Site A,  insure any writes use odd n	Site A,  insure any writes use odd numbers in unique field.Site B,  insure any writes use even numbers for unique field.This avoids conflict.	monkeywork	13.865213	-5.1797113	comment	4.0	12.0	1472967402	-13.570854
12533895	AWS CloudFormation Update – YAML, Cr	AWS CloudFormation Update – YAML, Cross-Stack References, Substitution	Kaedon	13.571084	-4.3515463	story	4.0	19.0	1474312253	9.474746
12533647	This needs a [2015]. Back then there	"This needs a [2015]. Back then there wasn't a single usable client for .net.Since then the non-Java clients have massively improved. In particular https://github.com/edenhill/librdkafka is fantastic.
There's also https://github.com/dpkp/kafka-python/, with support for consumer groups and all the other modern features.The basic criticism of requiring a complex client is valid, however you cannot achieve the delivery guarantees that Kafka gives you without one.
The alternative would be to have a local agent process like consul, but that wouldn't give you the throughput that Kafka gets.Disclaimer: I've built a C# client for Kafka based on librdkafa (https://github.com/ah-/rdkafka-dotnet), so I'm biased."	ah-	13.570276	-4.9977317	comment	4.0	13.0	1474310413	10.124118
35176990	How is this possible? How is consul 	How is this possible? How is consul not self—healing? It just seems so brittle in a way even database clusters aren’t.	atonse	13.5991125	-4.5732613	comment	4.0	14.0	1678929795	-13.142244
35250146	Selefra: The Open-Source Policy-as-C	Selefra: The Open-Source Policy-as-Code Tool for Terraform and Muti-Cloud	leonynn-z	13.697319	-4.3915195	story	4.0	6.0	1679422399	9.4904995
35468425	I guess i don't fully understand the	"I guess i don't fully understand the distinction. So the company is going down, but the open source org is still alive. Did the company do most of the development? If they did was that development available to people using it 'for free'? Why was there a company in the first place, you'd think it would be hard to make money betting on a single open source database.My only interaction with MariaDB was picking it from a list of possible RDS images because the description basically said, ""MySQL but better"". Since i was paying AWS to run that service, was there money going to the MariaDB corporation? Or was AWS using the free open source one and pocketing the cash. I'm definitely out of my depth here"	wholinator2	13.531856	-5.163412	comment	4.0	14.0	1680789756	9.893548
28427669	These things happen, props to Hashic	These things happen, props to Hashicorp for communicating about it.It would be easy to say that this is a failure of open-source in some way, but to do so would be unfair to the huge amount of work that companies put into tools like this, and the stewardship that they offer, both of which take a lot of time and money. If periods of low activity while teams change are the cost the community needs to pay for that, I think that's very fair.	danpalmer	13.730251	-4.3607516	comment	4.0	60.0	1630875180	13.261976
28442230	The Basics of Apache Kafka	The Basics of Apache Kafka	the2ndfloorguy	13.600316	-4.985871	story	4.0	81.0	1631001947	-13.106806
28465345	I’m curious though, did Elastic’s li	I’m curious though, did Elastic’s license change impact you in anyway? Were you planning on offering Elasticsearch as a managed cloud offering? What exactly is the legitimate good Amazon did here?	jusonchan81	13.521128	-4.5486393	comment	4.0	12.0	1631152668	-9.906826
28586901	One of the biggest reasons that have	One of the biggest reasons that have kept me away from terraform apart from the esoteric language is that terraform modules are always a few steps being from the upstream public cloud offerings.In the sense that whenever there’s a new API or service available in any of public clouds and their official SDKs there will always be a delay before this new service/feature/API will become available in terraform.First time I encountered it with GKE private clusters 3 or 4 years ago. Now it is AWS Keyspaces.The second biggest reason is whenever you have a requirement for a hybrid or multicloud then well you are left with rigidity if HCL. It is probably doable but for what sake?Solution: get a real language, write a STATELESS configuration management(IaC) system for your own needs and maintain it. T	nrvn	13.69782	-4.3938227	comment	4.0	12.0	1632077860	9.533832
22341413	>  This means the Service must be cr	">  This means the Service must be created first, then when the corresponding NEG is created the name can be queried and added to the Terraform project.These kind of reverse dependencies, where app level changes have to be reflected in infrastructure are source of endless bugs and headaches.To do it right, you'd want to encode app and infra changes in the same ubiquitous tool, but ""infrastructure as a code"" tools such as terraform suck big times at app level deploys.Pulumi takes steps in right direction, where it is actually not that painfull to manage everything, that is what I ended up using for very similar problem configuring GCPs load balancers for my k8s apps."	rossmohax	13.666416	-4.394057	comment	4.0	16.0	1581858922	-13.484538
22675124	Kafka-on-Pulsar: bring native Kafka 	Kafka-on-Pulsar: bring native Kafka protocol support to Apache Pulsar	lmsp	13.600048	-4.991755	story	4.0	19.0	1585061774	-13.125226
18975640	MongoDB vs. Amazon DocumentDB: Mongo	MongoDB vs. Amazon DocumentDB: MongoDB CTO Breaks It Down	saranshk	13.712347	-5.175878	story	4.0	15.0	1548217046	9.86223
19359734	'Distro' makes it sound like a linux	'Distro' makes it sound like a linux-distribution with, in this case, Elasticsearch installed on it. From what I read on the page and on the aws blog this is not the case though?	mosselman	13.520657	-4.6637144	comment	4.0	23.0	1552318666	-9.935403
19362604	Last year Elastic opened up the sour	"Last year Elastic opened up the source code of their commercial X-Pack offering: https://www.elastic.co/blog/doubling-down-on-open. This means that these components (security, alerting, etc.) are now available in the GitHub repository, but they are covered by the proprietary Elastic license instead of the Apache 2.0 license like the rest of the software. Some of the proprietary parts can be used for free, some need a paid commercial subscription. None of them are true open source (free as in freedom), though.However, this is also when Elastic started muddying the waters (to quote the AWS blog post). 
Most of the new features across the Elastic stack that were added in the past couple of months (Index Lifecycle Management, APM UI, Infrastructure and Logs UI, Kibana multi-tenancy, Kibana Can"	praseodym	13.526332	-4.5137753	comment	4.0	20.0	1552336867	-9.884653
19361234	As someone who is involved in the ec	As someone who is involved in the ecosystem and maintains some open-source projects based on ElasticSearch, I am similarly curious about the move to not build upon existing projects (there could be a good reason, but haven't heard it yet).Why wasn't ElastAlert used / built upon for alerting? https://github.com/yelp/elastalertOr why wasn't ElasticSearch SQL used / built upon for SQL? https://github.com/NLPchina/elasticsearch-sqlOr why wasn't SearchGuard used / built upon for Security? https://github.com/floragunncom/search-guardAll of them have Apache 2.0 license.	sidi	13.525121	-4.6182675	comment	4.0	22.0	1552327699	-9.9429035
19965411	Interesting. Three hours ago someone	"Interesting. Three hours ago someone in our Ops team shared a link to ""Open Distro for Elasticsearch"" [1] and it's also featured on the AWS console login page.Is this a very rushed reaction to it? Or is this related? I would really love to have a clarification of what's happening in that space.[1] https://opendistro.github.io/for-elasticsearch/"	KenanSulayman	13.529962	-4.6541805	comment	4.0	13.0	1558387682	-9.9841385
15846850	>The right to be forgotten, becomes 	>The right to be forgotten, becomes one of the hardest challenges because of data immutability. Apache Kafka does not support deleting records, and although some eventual deletion is supported, it requiresThis always seemed like an incredibly toxic decision to me. It's one that crops up in all sorts of systems, large and small. What, none of these people /ever/ foresaw the need to delete some data?	Sir_Substance	13.528167	-5.032096	comment	4.0	22.0	1512417201	-13.066897
17975060	How does LogDevice differ from Kafka	How does LogDevice differ from Kafka?	ashu	13.528798	-4.98944	comment	4.0	29.0	1536800815	-13.088648
18049512	The Kafka Papers	The Kafka Papers	objections	13.65864	-4.9671144	story	4.0	40.0	1537679673	10.5477085
18179597	Terrafugia transitions to market	Terrafugia transitions to market	prostoalex	13.696736	-4.363866	story	4.0	18.0	1539117188	9.372278
18229808	https://webassets.mongodb.com/_com_a	https://webassets.mongodb.com/_com_assets/legal/SSPL-compare...“Service Source Code” means the Corresponding Source for the Program or the modified version, and the Corresponding Source for all programs that you use to make the Program or modified version available as a service, including, without limitation, management software, user interfaces, application program interfaces, automation software, monitoring software, backup software, storage software and hosting software, all such that a user could run an instance of the service using the Service Source Code you make available.”^ not the same.	shadowmint	13.742695	-5.129125	comment	4.0	21.0	1539701389	-13.0012665
18229853	The license is clearly based on (A)G	"The license is clearly based on (A)GPL which is copyrighted by FSF, and has the following notice: ""Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.""Does that mean that MongoDB is now infringing on FSF copyright of the license text itself?"	zokier	13.765477	-5.138949	comment	4.0	16.0	1539701648	9.973979
18230076	Abuse is taking all the free candy a	"Abuse is taking all the free candy at a doctor's office. It might just violate a norm without breaking a law, but it's still abuse.It's situational, but if you define abuse as ""breaking a contract or law"" we're not going to agree on anything about this.MongoDB has _always_ wanted to make money when other people make money reselling their work. The AGPL doesn't really do what they needed, but their intent has been clear since day one."	mrkurt	13.741714	-5.164211	comment	4.0	14.0	1539703192	-13.070921
18230297	Azure offers Cosmos DB advertised as	"Azure offers Cosmos DB advertised as a drop-in for MongoDB. I'm guessing Cosmos is Mongo in disguise, though  I don't know if it really is, and/or whether MS has made a deal with Mongo or just think they can use the AGPL version.For the record: I'm not a big fan of Mongo (the DB) but I think MongoDB, Inc. raises a valid point wrt. developers doing all the hard work including community building and a million other things, while ""cloud providers"" get all the money. This isn't sustainable, and we need a license which more clearly says ""if you make money with it, you need to give us some"", rather than using the bare AGPL license without further qualifications in the hope AGPL's ""freedom"" aspirations have the indirect effect of forcing commercial users and/or resellers to pay."	tannhaeuser	13.650895	-5.0351543	comment	4.0	18.0	1539704882	-13.01176
18230736	Is there an OSS license where it won	Is there an OSS license where it won’t allow other providers to offer the original technology as a service and charge for it?If I want to use MongoDB in my ecommerce app no worries. If I want to simply use MongoDB offer some minimal improvement or added functionality, call it ZongoDB and sell subscriptions... not so fine?	holografix	13.743922	-5.149399	comment	4.0	13.0	1539707580	9.950741
18301789	I just had a call with MongoDB sales	I just had a call with MongoDB sales yesterday, and specifically asked if the licence changes impacts us, where we use Mongo as a datastore for our application, but we're not offering Mongo itself as a service.  They were very quick and clear to say that the change is about those providers offering Mongo itself as a service.  Using mongo in your stack to provide your service is not implicated at all.The only grey area I see is if you offered some sort of database-as-a-service backed by Mongo but not explicitly sold as Mongo-as-a-service.	fatbird	13.74454	-5.1397796	comment	4.0	17.0	1540482338	9.948172
18361101	Congratulations! I've been a fan of 	Congratulations! I've been a fan of Vagrant for a long time and have done some Vault as well. I haven't yet had a chance to try Terraform, but everyone says it is better than Cloudformation. :-)I'm curious what you think of this crazy idea?:With databases, some ecosystems use declarative migrations, where you keep a description of your schema, and the system automatically takes you from here to there. I've heard .Net people say how nice this is. On the other hand with Rails & Django you have delta scripts that give imperative directions for getting from here to there, rather than a declaration of the end state. I like that solution a lot, because sometimes you need more control over what to do. (For example, changing a one-to-many relationship to many-to-many, and moving the existing data.	pjungwir	13.661398	-4.410274	comment	4.0	14.0	1541141220	9.525537
18428989	Infrastructure as code.Terraform usi	Infrastructure as code.Terraform using AMIs plus chef recipes that work in the cloud and bare metal. Dont use AWS specific services.This would allow you to spin over to another cloud provider , vsphere or bare metal with minimal work	geggam	13.625183	-4.355775	comment	4.0	28.0	1541974551	9.529479
18537818	... , then replace all that Terrafor	... , then replace all that Terraform code with Cloudformation templates. You will get 5x less code, native vs third party tool v0.11 and my respect :)	auslander	13.678566	-4.375966	comment	4.0	18.0	1543275153	9.496517
18562958	Amazon taking more open source and s	Amazon taking more open source and selling it with no value created for the developers. Maybe Kafka should switch to the SSPL [0].[0] - https://www.mongodb.com/licensing/server-side-public-license	hendzen	13.71647	-5.124954	comment	4.0	13.0	1543518874	-12.991398
18717912	That makes me sad. I would love for 	That makes me sad. I would love for AWS to have a hosted Mongo solution or some type of NoSQL database besides DynamoDB.Do people use ElasticSearch as a primary data store? In my limited experience implementations don’t treat it as the source of truth.	scarface74	13.548223	-4.921388	comment	4.0	12.0	1545243743	-10.007833
18827106	I strongly disagree with the hypothe	"I strongly disagree with the hypothesis raised in the article.First , most open source companies these days are Ventured Back ( Elastic , CockroachDB, MongoDB etc..) meaning the core of the issue isn't ""AWS"" not paying license fees or people creating tech on top of Open Source , it's VCs who want their money back times ten.Companies like MongoDB/Elastic have raised hundred of millions and yet are still not profitable.Who's fault is it ? Did the MongoDB community ever asked the company to go that way ? Did MongoDB presented a roadmap to the community saying that they would have to be ""profitable by Month X"" or they would change their licence to make more money ?Nobody has forced those founders/companies hands to make their products open source nor to raise that much capital.If the industry "	tinyvm	13.689524	-5.0225496	comment	4.0	20.0	1546631521	9.928814
18870596	It would be nice if Amazon provided 	It would be nice if Amazon provided an API to access the data via SQL alongside the MongoDB API; I've seen quite a number of organizations migrate from mongo to Postgres once they get out of the rapid development phase. This would make that transition butter smooth.	erikig	13.54554	-5.0807076	comment	4.0	18.0	1547081722	9.808421
18871456	>However, developers are technically	>However, developers are technically savvy enough to distinguish between the real thing and a poor imitation. MongoDB will continue to outperform any impersonations in the marketThis feels like a MongoDB sponsored post. How badly would you have to fuck up to be considered a poor imitation of MongoDB?In any case I don't see how having their own hosted version of MongoDB is a middle finger to open source, but Aurora SQL/PostgresQL isn't. Is Cockroach a middle finger Postgres? I don't consider this any more a middle finger than the SSPL.	nemothekid	13.737336	-5.1713424	comment	4.0	20.0	1547093403	9.913093
18919686	It looks like it is, but is there an	It looks like it is, but is there any official word that the SSPL is proprietary? As far as I know MongoDB claims it isn't, and it hasn't been reviewed officially by either the FSF or the OSI. Is it in license purgatory?	avar	13.741828	-5.138421	comment	4.0	24.0	1547634827	-13.03723
18920262	MongoDB is the reason I don't contri	MongoDB is the reason I don't contribute (outside of work) to any copyleft project that asks for copyright assignment anymore.	sascha_sl	13.741127	-5.1754136	comment	4.0	15.0	1547642172	9.818442
18920324	If the new MongoDB licence is non-fr	If the new MongoDB licence is non-free, the chances that Debian will include that software in their repos are nil.	iqy	13.753584	-5.17595	comment	4.0	13.0	1547642862	-12.895241
18925654	I'm not super surprised that RHEL re	"I'm not super surprised that RHEL removed Mongo because of the licensing change. I don't completely understand why people getting upset about the licensing, however.As far as I know, MongoDB is still open source. If you are a hosting provider offering ""MongoDB as a Service"" the provider then needs to pay a licensing fee to Mongo. This seems ok to me, with the logic that MongoDB is a business that needs to make money.I am not an expert in licensing, but how is this any different than paying for a license of RHEL vs using CentOS? I'm genuinely curious as to how this is against open source beliefs."	zachruss92	13.755456	-5.1541696	comment	4.0	14.0	1547674982	9.94059
18925781	Now AWS copied MongoDB API without f	Now AWS copied MongoDB API without fees anyway, maybe MongoDB can revert their license back?	hartator	13.748309	-5.1247597	comment	4.0	16.0	1547675577	-13.026109
18926115	From:https://www.mongodb.com/licensi	From:https://www.mongodb.com/licensing/server-side-public-license...> What specifically is different between the GPL and the SSPL and what will it be called?> The new license will be called Server Side Public License (SSPL)> The only substantive modification is section 13, which makes clear the condition to offering MongoDB as a service. A company that offers a publicly available MongoDB as a service must open source the software it uses to offer such service, including the management software, user interfaces, application program interfaces, automation software, monitoring software, backup software, storage software and hosting software, all such that a user could run an instance of the service using the source code made available.> Section 13 of the SSPL reads as follows:> “If you make t	giancarlostoro	13.805843	-5.0824966	comment	4.0	14.0	1547677586	-12.988454
29780098	Terraform Scripting Concepts	Terraform Scripting Concepts	serdigital64	13.698013	-4.388946	story	4.0	39.0	1641212994	9.50396
29780390	I hate seeing Terraform script or sc	I hate seeing Terraform script or scripting. Am I the only one?	kaydub	13.698184	-4.3844433	comment	4.0	19.0	1641215361	9.498233
29794270	Love the idea! I've been using Couch	"Love the idea! I've been using Couchsurfing for many years and tried their ""hangout"" feature a few times. It's 95% males harassing traveling women that happen to log in but the 5% left can be great to meet and I've had great experiences. Hopefully you find a way to navigate away from that even as you get more users."	elbajo	13.658131	-5.0558653	comment	4.0	27.0	1641301621	-3.9709897
29801081	If Caddy were to support systemd soc	If Caddy were to support systemd socket activation, this self-restart dance is not necessary as the parent process (systemd) is holding the socket for you. And for other systems, they can use https://github.com/zimbatm/socketmaster instead. I believe this to be more elegant and robust than the nginx approach as there is no PID re-parenting issues.But I suspect that most Caddy deployments are done via docker, and that requires a whole container restart anyways.	zimbatm	13.70254	-3.9553921	comment	4.0	17.0	1641333167	8.872507
29925701	It's not just you.I have trouble goi	It's not just you.I have trouble going near CockroachDB because of its name. It's absolutely unjustifiable from an engineering perspective, but the effect (for me, at least) is real.	CoastalCoder	13.71639	-5.182887	comment	4.0	15.0	1642102859	10.100584
30041981	Sounds cool, almost like competition	Sounds cool, almost like competition for Kafka if it solves global multi-DC replication and has a scaling story.  Is FB / “MarkZ The Generous”* planning to open-source this valuable sounding thing?  I wasn’t able to find a mention about sharing it publicly in TFA.Would be a nice gesture, given how much $FB has benefited from running the entirety of the worlds largest social graph on top of MySQL.* lol	metadat	13.534427	-5.0694003	comment	4.0	17.0	1642894613	-13.090268
30061145	"""The trial"" by Kafka needs to be req"	"""The trial"" by Kafka needs to be required reading for everyone involved in implementing systems like this."	friedman23	13.668297	-4.9494424	comment	4.0	18.0	1643046500	-2.7134564
30092655	My Pet Peeves with Terraform	My Pet Peeves with Terraform	nitinagg	13.705237	-4.387527	story	4.0	24.0	1643234652	9.50154
30570447	This is Amazon's fork of Elasticsear	"This is Amazon's fork of Elasticsearch, to avoid the licensing restrictions introduced when they switched from Apache 2 license to ""Elastic License and Server Side Public License"" - https://www.elastic.co/pricing/faq/licensing"	simonw	13.524143	-4.65974	comment	4.0	28.0	1646505355	-9.951515
30711300	Hi. I am Anton Babenko, maintainer (	Hi. I am Anton Babenko, maintainer (ukrainian by heart) here. I have updated the wording in README to state the facts about Russia (facts with links to wikipedia) - https://github.com/terraform-aws-modules/terraform-aws-eks#a...It was never my intention to make changes in a license in any way. It would be just wrong to drop 5+ years of my life working on all terraform-aws-modules and betray everyone who have been participating as contributors and users.If there are questions, please ask here or twitter (@antonbabenko).	antonbabenko	13.70254	-4.377128	comment	4.0	16.0	1647526047	-12.41145
16249372	Ethereum miner with Terraform	Ethereum miner with Terraform	hactually	13.703243	-4.380767	story	4.0	32.0	1517105982	9.460659
16357133	> In a world where everyone is havin	> In a world where everyone is having to solve the worst-case problem anyway, every site should just have numbers as unique identifiers...ICQ did that. Though it still led to interesting results, because lower numbers were thought to be more valuable, and people were buying/selling those.Perhaps a random numbers with the same number of digits or UUIDs may work without such issues. :)	megous	13.913633	-5.155644	comment	4.0	17.0	1518420677	-13.5574665
16596312	What do you mean by “Kafka-esque” in	What do you mean by “Kafka-esque” in this context?	sahil-kang	13.676093	-4.9623127	comment	4.0	17.0	1521146162	10.548262
16757894	It'd be cheaper than running Vault w	It'd be cheaper than running Vault with a backing Consul cluster which also provides rotation and other features.There is a point where Vault is more cost effective, but I believe it'd require a ton of requests and secrets to justify min 6 machines of at least t2.micro that also need to managed and secured.	0xCMP	13.615293	-4.1339173	comment	4.0	16.0	1522869008	-12.587775
16827171	Okay, this approach is really cool, 	Okay, this approach is really cool, but... just hear me out: what if... you don't store personally identifiable data in the event store? What if you only store references/ids that point to services which can resolve those ids to data, and that data needs not to be immutable. In the event of erasure request you shred/anonymize that data only, without touching kafka. I mean it's pretty obvious to me, to the point i feel like i'm missing some huge point and grossly misunderstanding the whole problem	arpa	13.545239	-5.0279145	comment	4.0	31.0	1523594578	-13.08917
17001527	OpenFL 8.0.0 Released	OpenFL 8.0.0 Released	doppp	13.577771	-4.411238	story	4.0	66.0	1525523421	5.7680607
17031649	This is exciting, but I really hope 	This is exciting, but I really hope that Terraform will add support for it in reasonable time. These days I'd prefer to not manually manage cloud resources if I don't have to.	jchw	13.68035	-4.374137	comment	4.0	19.0	1525886059	9.498712
17031961	Hashicorp doesn't seem to like Googl	Hashicorp doesn't seem to like Google Cloud too much. I've been moving to Google Cloud Builder and it's Jinja and Python templates, which I happen to be a little familiar with...	tecleandor	13.666148	-4.3618016	comment	4.0	12.0	1525887870	-12.64974
22814476	After seeing Rick's Re:invent talk, 	After seeing Rick's Re:invent talk, the one where at about minute 40 everyones' heads exploded, I emailed him (I'm in a very far away other department of Amazon) to ask him for more, because everything he was saying was absolutely not the way my group was using DynamoDB (ie: we were doing it wrong).He could have ignored my email entirely. He's a busy guy, right? I wouldn't have held it against him at all. Instead, he was super nice, provided me with more documentation, and honestly was just really helpful.If he recommends your book, I'm buying it.	mabbo	13.520267	-4.802644	comment	4.0	13.0	1586363688	9.687812
23131872	Cloudformation is spot on. There is 	Cloudformation is spot on. There is simply no excuse in 2020 to use it when cloud agnostic Terraform exists.Elasticache is expensive and the analysis is generally correct on that, however if you do actually need a high capacity rock solid Redis cluster and you can afford it, it does the job. Paying someone to setup and scale a cluster of that magnitude would probably cost a year's worth of usage. Of course if you don't actually need to scale it yet then just use the suggestions in the article to run it yourself.	ciguy	13.659834	-4.3756676	comment	4.0	20.0	1589110683	9.4737425
23131912	Terraform is not “cloud agnostic”. E	Terraform is not “cloud agnostic”. Every provisioner is specific to the platform.	scarface74	13.673878	-4.375365	comment	4.0	14.0	1589111216	9.498913
23132298	I can't say I liked one of his propo	I can't say I liked one of his proposed alternatives: TerraformI tried it and found the experience to be far inferior to Ansible, especially if you provision actual Linux instances with it.Terraform was always getting stuck in an inconsistent state, and trying to roll back, which doesn't work well for any type of stateful resource.I guess Terraform may be ok for provisioning resources which are stateless and interchangeable, say security groups and other simple services.I can't say I enjoyed using it much, though the rest of Hashicorp's offerings, Nomad, Consul etc are really great.	gerbilly	13.691484	-4.4110994	comment	4.0	12.0	1589115934	-13.300556
23154250	Looking at the product comparison ch	"Looking at the product comparison chart[1], there's quite a lot of features that aren't in the open source ""core"" CockroachDB.  That's fine of course, but the one that seems concerning is the backup/restore.  Is there a reasonable and reliable way to do backups and restores with just the ""core"" open source product?[1] https://www.cockroachlabs.com/compare/"	tyingq	13.651109	-5.1822233	comment	4.0	14.0	1589293236	9.904062
23195967	Fair enough! I think that's a reason	Fair enough! I think that's a reasonable position.IMO, there are two times you should absolutely default to DynamoDB:- Very high scale workloads, due to its scaling characteristics- Workloads w/ serverless compute (aka Lambda) due to how well it fits with the connection model, provisioning model, etc.You can use DynamoDB for almost all OLTP workloads, but outside of those two categories, I won't fault you for choosing an RDBMS.Agree that DynamoDB isn't _blazing_ fast. It's more that it's extremely consistent. You're going to get ~10 millisecond response times when you have 1GB of data or when you have 10 TB of data, and that's pretty attractive.	abd12	13.525609	-4.8568525	comment	4.0	21.0	1589569105	9.647143
23207757	I'm surprised by the amount of criti	I'm surprised by the amount of criticism in this thread. I've used Kafka in the past and it definitely got the job done (as a message bus, not using stream processing or the other more whiz-bang features). What do people use instead?	Rebelgecko	13.562543	-4.9836864	comment	4.0	25.0	1589668506	-13.102067
23208335	I expect Pulsar to stay with Zookeep	I expect Pulsar to stay with Zookeeper. Kafka currently stores topic and partition info on ZK ( https://cwiki.apache.org/confluence/display/KAFKA/Kafka+data... ), which can get to be a lot of data. But I think Pulsar only stores server names and basic config info on ZK ( https://pulsar.apache.org/docs/en/administration-zk-bk/ ), which is much more managable.	nealabq	13.57741	-4.96967	comment	4.0	12.0	1589675221	-13.109335
23208618	Pulsar is half baked with limited nu	Pulsar is half baked with limited number of half baked clients even for major languages. Kafka instead is a bulletproof solution with tons of clients in any flavor, with instruments to detect issues, alert about them. Don't even compare them.	maxdo	13.579143	-4.9724374	comment	4.0	12.0	1589678390	-13.087336
23354854	Have you tried or considered Nomad (	Have you tried or considered Nomad (from the makers of Terraform)?	herval	13.666808	-4.410967	comment	4.0	22.0	1590782720	-13.036432
37811226	Honestly, all Hashi products are gen	Honestly, all Hashi products are generally really good. I do think they do suffer from moving too fast syndrome. They pushed to go public and most or all of their recent shortcomings can be traced back to trying to push stock prices.Early Hashicorp was incredible. They were open source stewards and looked like an up-and-coming Redhat or Canonical. Their products were ground-breaking and truly huge value adds to the open-source eco system. But they got extremely popular (mostly thanks to Terraform, which took off and drew more attention to their other products).But since going public it has been clear that they are trying to get money and enterprise customers at any cost.Terraform itself has felt like it was in maintenance-mode since hitting version 1. Terraform providers frequently break. 	jacurtis	13.729392	-4.3794613	comment	4.0	19.0	1696778278	-12.44806
37831605	Pulumi ESC: Easy and Secure Environm	Pulumi ESC: Easy and Secure Environments, Secrets and Configuration	todsacerdoti	13.528411	-4.393878	story	4.0	37.0	1696943478	9.4587
37837507	I'm quite impressed with HAProxy.It 	I'm quite impressed with HAProxy.It takes a little effort to fully understand the configuration file format (hint: you've got to read the documentation, not just look at examples to fully grok it), but it's so worth it, IMO.It's also a nice treat to have the founder and technical leader (Willy Tarreau) of the HAProxy company being so active in the community, so many years later (the initital release was in 2001). I regularly see him answering e.g. newbie questions.(HAProxy docs: https://docs.haproxy.org/ - pick 2.8/LTS)	tpmx	13.523321	-4.0969987	comment	4.0	24.0	1696972062	8.844767
25493880	> That’s the strategy. That’s the ma	> That’s the strategy. That’s the magic. You don’t need to go Open Core or any other permutation of kind-of, sort-of open source. You can open source everything and just ensure you have a rock-solid managed cloud service. This reliance on cloud is what’s driving MongoDB, Confluent, DataStax, Redis Labs, and others to great success. It can be your model, too.It's not clear how this would work with a Linux distribution that has already been commoditized by the cloud vendors. Amazon Linux is a CentOS rebrand, and probably soon Amazon Linux will stand on its own feet similar to ElasticSearch, thanks to the Red Hat move	jabberwcky	13.539502	-4.7580924	comment	4.0	20.0	1608549394	-9.9124775
25506019	I saw Terraform and was out, because	I saw Terraform and was out, because I don’t have the money to pour into recurring costs.Can we have nice things without it being a hook to buy something?	rabbut	13.689086	-4.3571234	comment	4.0	12.0	1608643768	7.0973306
25539073	I recently gave a tech talk internal	I recently gave a tech talk internally about Terraform. I wanted to show how quickly a web service can get complicated by showing the SVG generated from `terraform graph` output.It failed miserably:$ tf graph|dot -Tpng > graph.pngdot: graph is too large for cairo-renderer bitmaps. Scaling by 0.420618 to fitTrying to upload the genrated image to Google Slides and the error message: The image is too large. Images must be smaller than 25 megapixels.$ tf state list|cut -d. -f3|grep ^google_|sort|uniq|wc -l42 <-- different types of Google Cloud resources we use in our Terraform configs.I'm very skeptical this config can be managed using a WYSIWYG tool.	yegle	13.69361	-4.382761	comment	4.0	13.0	1608930855	9.522529
25612640	I have been saying this for a while 	I have been saying this for a while now -- as much as I respect Hashicorp and admire their engineering, HCL is the biggest problem with the tools they have that it's used in -- biggest of which being Terraform.Don't use a DSL where a full programming language is what you need. I can see that they probably wanted to be able to skip writing 2/3 language CDKs out of the box, and DSLs probably hit on the need for simplicity really early, but infrastructure code is somewhere you really want to be able to drop into the full expressive power of a programming language.I use Pulumi[0] for my projects, and while I doubt people will be able to get it as much adoption as I think it should have in corporate environments, Terraform has introduced the CDK[1] which is a similar approach. Have a talk with 	hardwaresofton	13.690439	-4.3990107	comment	4.0	35.0	1609593434	9.511997
25834032	"> ""When the service launched, imagin"	"> ""When the service launched, imagine our surprise when the Amazon CTO tweeted that the service was released in collaboration with us. It was not. And over the years, we have heard repeatedly that this confusion persists. NOT OK.""This just means their CTO was sloppy, Amazon legal department would have never allowed that tweet.> ""So imagine our surprise when Amazon launched their service in 2015 based on Elasticsearch and called it Amazon Elasticsearch Service. We consider this to be a pretty obvious trademark violation. NOT OK.""This is a trademark violation indeed though IANAL, it doesn't require a change to the license to attack them for that. Definitely an abuse of power by Amazon though, completely not ok as they don't care about paying a fine for that, they have all the money in the wo"	patrickaljord	13.519919	-4.510998	comment	4.0	15.0	1611068646	-9.887149
25834322	> It doesn't matter what they say, r	"> It doesn't matter what they say, read the license.I would love to but the terms within the ElasticSearch codebase on Github are quite confusing. Here's the text of the LICENCE.TXT file.  Source code in this repository is covered by one of three licenses: (i) the
  Apache License 2.0 (ii) an Apache License 2.0 compatible license (iii) the
  Elastic License. The default license throughout the repository is Apache License
  2.0 unless the header specifies another license. Elastic Licensed code is found
  only in the x-pack directory.

  The build produces two sets of binaries - one set that falls under the Elastic
  License and another set that falls under Apache License 2.0. The binaries that
  contain `-oss` in the artifact name are licensed under Apache License 2.0 and
  these binaries d"	hodgesrm	13.529206	-4.524865	comment	4.0	13.0	1611070084	-9.874725
25837701	The new license doesn't restrict oth	"The new license doesn't restrict others from operating Elasticsearch as a service. It restricts others from operating Elasticsearch as a service unless they release any source code patches, improvements, and/or functionality extensions they make to it.To me, that's exactly what you're saying you expected from liberal licenses, but it's delivered by a restrictive license, using the restrictions popularized by GPL licenses. This makes ElasticSearch more open source, rather than less, because now anyone who uses it has to ""open"" their source code. That's the premise of GPLv3 in a nutshell, and I'm hard-pressed to understand how it's a drawback here.Have I misunderstood and their new license somehow reduces the openness of their source code to the world?"	floatingatoll	13.529664	-4.5452027	comment	4.0	26.0	1611084611	-9.8510065
25868883	Interesting take, and I can see why 	Interesting take, and I can see why Drew feels it's valid. He's ascribing to the maximalist interpretation of open source licensing. Licensing which never had any idea that Open Source would one day take over the world, licensing which never could've imagined that cloud providers would begin to undermine and influence projects to their own ends.The problem that Drew is willfully ignoring here is that corporations see an opportunity in open source licensing to hijack projects, which I would remind you is exactly what is happening with Kibana. The control shifts away from the thousands of contributors and gets a board of engineers employed by corporations. Once these projects land in corporate control there's no denying that their culture and terms change. The CLA's he wrote about will surel	kodah	13.521635	-4.482311	comment	4.0	20.0	1611295696	-9.911023
25932846	Jason from Elastic here.I want to cl	Jason from Elastic here.I want to clarify one aspect here. Elasticsearch and Kibana will be dual licensed under the Elastic License or the SSPL license, not only SSPL. The distributions that we provide will be licensed under the Elastic License, which does not have the copyleft requirements that are sometimes concerning to legal teams.That is, if you download our distribution and run it in your infrastructure, you are subject to the Elastic License. The same license that most (90%+) of our users are already running under today, when they download our default distribution from elastic.co. This is why we say the vast majority of our users are not impacted by this change.Note: we are considering making changes to the Elastic License to simplify it. Please see more on our [blog][0].Disclaimer:	jasontedor	13.523129	-4.52028	comment	4.0	14.0	1611776252	-9.922
25983860	When you have a monolith database th	"When you have a monolith database that everybody wants to access Kafka with CDC is a very good pattern for teams to adopt.The alternative is modifying your app for arbitrary data access and dealing with auth or giving direct data access.Giving direct access to your database is fast but leads to very strong data coupling.Exposing the data through the app layer is slower than cdc kafka integration but comes with a long term commitment to support that access.  I have seen these type of data access queries easily hit performance edge cases.There are other pros and cons but those are the ones that end up being the most troubling.Often a single apps data can be incredibly valuable and many teams want to access it.  So coming up with patterns that1. Protect the app
2. Protect the data store
3. De"	longcommonname	13.54555	-5.0151925	comment	4.0	19.0	1612136829	-13.099842
26428801	Terraform is great, but I wish more 	Terraform is great, but I wish more cloud providers had Guix/Nix integration.	snicker7	13.683379	-4.39381	comment	4.0	12.0	1615495499	9.515125
35561230	If I use Python for my Pulumi, how c	"If I use Python for my Pulumi, how could I reuse the work of a peer who uses JS for Pulumi?Do we need to have multiple ""mirrors"" of our internal infra modules? Or do we need multiple language runtimes in our deployment runner in CI?With TF, there is one language and one binary"	verdverm	13.617789	-4.443871	comment	4.0	14.0	1681415586	9.491576
35560455	CDK/Pulumi are going to be used by L	CDK/Pulumi are going to be used by LLMs to spin up website infra exactly to spec. Devs will fill in the business logic interfaces. Going to be wild	fdgsdfogijq	13.624803	-4.392366	comment	4.0	20.0	1681412591	9.509616
36713960	Even worse, Kafka and Apache Kafka h	"Even worse, Kafka and Apache Kafka have almost no meaningful connection. According to Wikipedia, the author was reading (Franz) Kafka, who was a writer, and the software system is ""optimized for writing"". (Franz) Kafka wasn't ""optimized"" for anything, so this is just whimsical naming. It could just as well have been named Apache Hemingway, or Apache Tolstoy.Whimsical naming is ok, but can also be confusing and annoying."	the_af	13.654015	-4.9630885	comment	4.0	15.0	1689273166	10.539
36906015	It makes no sense whatsoever.(1) Nea	"It makes no sense whatsoever.(1) Nearly every app in the App Store uses UserDefaults. It's such a basic, fundamental API.(2) App Store apps are sandboxed, so they cannot access the UserDefaults of another app.(3) UserDefaults is more or less glorified key-value storage. It's true that you could store a UUID in there, but you could just as easily store a UUID in a text file in your app's container, an API usage that is not covered by this.(4) According to the docs, there's only one allowed ""reason"":> CA92.1> Declare this reason to access user defaults to read and write information that is only accessible to the app itself.> This reason does not permit reading information that was written by other apps or the system, or writing information that can be accessed by other apps.But again, as I s"	lapcat	13.95704	-5.1770296	comment	4.0	16.0	1690548349	-13.677622
36933657	Ask HN: Why Terraform Is Free?	Ask HN: Why Terraform Is Free?	yevpats	13.631654	-4.343162	story	4.0	6.0	1690738184	-12.367326
37005663	This is a great read, but I always s	This is a great read, but I always seem to run into cases where I need to define something like a security group and then reference it when deploying ec2 instances. I'd love to decouple to reduce my plan time, but I haven't figured a way out as of yet.To be fair, I haven't used terraform -chdir yet.	pezh0re	13.677984	-4.378768	comment	4.0	12.0	1691182037	9.5734415
37006924	"@rcowley -- 
I'm going to preface th"	"@rcowley -- 
I'm going to preface this with I'm a Staff SRE at an adtech corp that does billions and have been a k8s and terraform contributor since 2015 (k8s 1.1 I forget the tf versions). I don't mean this to brag I just want to set my experience expectation since I'm a random name on hn who you'd never know.I think calling a service/stack (or whatever, app, etc) a ""root module"" is a very, very confusing thing to do. Terraform has actual micro objects called modules. We work with them every day. I get how you could consider encompassing an entire chunk of terrafrom code that calls various modules a ""root module"".. but I think this is just going to lead to absolute confusion to anyone not familiar with your terminology. I don't know every TF conversation but I can't think of a single time"	swozey	13.6985035	-4.3761535	comment	4.0	17.0	1691189711	-12.395862
37036635	Couple questions:1. aren't you going	"Couple questions:1. aren't you going to get murderous S3 API call bills if you're pushing each message directly into S3? How're you buffering / queuing / coalescing messages durably without local storage?2. what's the problem with ""just"" running a kafka cluster in each AZ and not replicating data between AZs until it's time to ETL the data to wherever?  AZ1 clients push to AZ1 clusters; AZ2 clients push to AZ2 clusters, etc.3. What's done to preserve order-of-operation within a kafka partition?"	cduzz	13.541058	-4.998304	comment	4.0	48.0	1691425589	-13.08915
37036867	Well, one thing's for sure. Running 	"Well, one thing's for sure. Running Kafka on discrete VMs on a cloud provider ""by the book"" is ludicrously expensive.I remember having a very simple discussion with quite a few customers about both Kafka and Hadoop that boiled down to this: Why replicate data at the VM/disk level when those disks are already provided as a fully redundant system? (in this case it was Azure storage, which provides locally, redundant, AZ-redundant or globally redundant storage, most of which are available to run managed disks upon).This is why properly designed Hadoop/Kafka cloud managed services employ storage adapters to leverage the provider's baked in redundancy. And why some cloud providers have Kafka-compatible event brokers.The rest of what WarpStream does is just icing on the cake (although I'm curiou"	rcarmo	13.558133	-4.9613013	comment	4.0	17.0	1691426351	-13.091062
37038073	I work as a contractor so I move bet	"I work as a contractor so I move between places. I have found a few companies trying to introduce kafka, and every time it has been a solution in search of a problem.I don't doubt that it has a good use case but I have so far only encountered the zealots who crowbar it into any situation and that has left a residual bad taste in my mouth. So I fall into the ""hate it"" side."	carlio	13.594588	-4.987085	comment	4.0	31.0	1691430969	10.566681
37039215	I’m not sure how anyone can hate Kaf	I’m not sure how anyone can hate Kafka?  It does what it says on the tin - move data from A to B with publish/subscribe semantics.It’s quite easy to just use it as a dumb message broker with no retention if that’s all you need but if you do want to do something funky with persistence then go down that route.I’m not sure how anyone could have a negative feeling towards a vanilla, but rock solid and wildly popular open source tool.  If they do then it will be about some niche feature or use case.I actually think this message reflects badly on the vendor here.  Criticise or compete with Kafka on its technical merits if you like, but this is just a misrepresentation of their position in the market.	benjaminwootton	13.56087	-4.994595	comment	4.0	25.0	1691435121	-13.087936
37041375	ZooKeeper is rock solid. Moving off 	ZooKeeper is rock solid. Moving off it is a mistake, IMO.My tinfoil hat theory is that the whole impetus for KRaft is Confluent Cloud's multi-tenanted clusters have so many partitions that it starts to exceed ZK's capacities, so Confluent have built KRaft for Confluent.And yeah, the migration approach is nutso. Also very annoying, the KRaft metadata topics being changed to be super-secret for... ...some good reason, I'm sure.But it entirely removes the ability to respond to changed cluster metadata that you have with ZK, where you can watch znodes.I'm not at all a fan tbh.	EdwardDiego	13.56961	-4.8019295	comment	4.0	19.0	1691444616	9.831533
37081744	Dunno about others, but I always ask	"Dunno about others, but I always ask myself where these companies would be if their software was under non free license from the start.This is hostile to end users, small people an companies, not just big megacorps wanting the ""steal"" the code and run it as a service. Be successful in running and using Hashicorp's software, and they decide to shut you down if you are deemed a competitor."	nezirus	13.702489	-4.353616	comment	4.0	19.0	1691701345	13.274801
37081743	> Like, has anyone of any significan	> Like, has anyone of any significance used a Hashicorp product to meaningfully compete with Hashicorp?Just because nobody has tried yet doesn’t mean that it won’t ever happen. Companies are doing this precisely because companies like Amazon abuse FOSS licenses to stand up their own hosted versions of open source projects.	LapsangGuzzler	13.728469	-4.358787	comment	4.0	24.0	1691701345	13.275143
37082509	> This is purely a way for HashiCorp	> This is purely a way for HashiCorp to ensure they are the only ones who can commercialize these formerly open source projects. Which is fine. But just go closed source, then, and own that, instead of trying to have it both ways.Pragmatically I would rather bsl than closed source and I am more likely to use a product that is bsl, with reasonable transfer time and license, than a 100% closed source product.	davorak	13.7359295	-4.363462	comment	4.0	41.0	1691706174	13.27948
37083103	You, humanitec, and env0 should star	You, humanitec, and env0 should start a community fork of pre-BSL Terraform and donate it to the CNCF.	candiddevmike	13.712009	-4.381755	comment	4.0	12.0	1691710409	9.485418
37083792	Funny how @mitchellh has decided not	"Funny how @mitchellh has decided not to join the conversation.  Pretty sure he had the ultimate input on this decision, and historically he's engaged with HN directly.  Hmm.Overall it seems like a loser move.  Look what happened to Elasticsearch - to me and most others, ES no longer exists.  I've happily moved on to OpenSearch and not looked back at poor kimchi.  Due to their own actions, Elasticsearch is no longer relevant.Will Hashicorp's move spur a similar effort to fork the last open-source license version of Terraform and other Hashicorp tools?  What other choice is there when the creator gets petty and insecure, and goes hostile against the open source community that helped create it?  Extremely disappointed with the Hashicorp leadership team. 
 MitchellH and your little sidekick Ar"	metadat	13.71161	-4.386095	comment	4.0	22.0	1691715359	13.243361
37088881	Is it okay to feel smug about not co	Is it okay to feel smug about not converting anything and everything infrastructure to Terraform right about now, like all the cloud gurus recommended?	geerlingguy	13.667018	-4.364876	comment	4.0	27.0	1691763118	9.556552
37088972	I think everyone who use terraform t	I think everyone who use terraform to manage cloud infra eventually end up hating it anyway.	prmoustache	13.667835	-4.3694053	comment	4.0	14.0	1691763587	9.487077
37089001	I am a fan of HashiCorp but as someo	I am a fan of HashiCorp but as someone who tried to use Terraform Cloud, I can’t help but think they wouldn’t be having this problem if they had a more competitive cloud product. They have a huge (and well-deserved) advantage in distribution over companies like Spacelift because they own the toolchain. The fact that they are resorting to this tells you what you need to know about Terraform Cloud.	paulgb	13.694853	-4.370029	comment	4.0	13.0	1691763758	-12.411448
37090756	HashiCorp switched Vault from MPL to	"HashiCorp switched Vault from MPL to BSL license yesterday. The terms of how they define ""competitive"" products are pretty vague, which means that any commercial product that uses Vault under the hood is at risk of violating the terms of the new license. Moreover, even if it's not violating the terms of license now, it doesn't mean that HashiCorp will not change its mind in future.Ultimately, it just means that HashiCorp is not an open source company anymore. One of the biggest benefits of open source is building on top of open source software to create even better software. HashiCorp's move makes it impossible and simply slows down innovation. In fact, in their blog post, they say that they will start referring to their previously-open-source product as ""community"".Infisical is an open so"	vmatsiiako	13.732314	-4.355879	comment	4.0	15.0	1691772259	13.280821
37134474	These people have seriously contribu	These people have seriously contributed back to the Terraform community. Terraform doesn't have a test suite- Grunt made Terratest, as well as many other tools. These people have seriously contributed back to the ecosystem, in many ways beyond what Hashicorp has done.Beyond that, I know some of these companies tried to be contributors to Terraform itself but were ghosted by Hashicorp.At the same time there's only a handful of regular contributors to Terraform[1]. It would not be hard for these companies to provide more resources to Terraform than Hashicorp is.https://github.com/hashicorp/terraform/pulse/monthly	tedivm	13.728362	-4.381094	comment	4.0	24.0	1692109968	-12.434672
37135688	The worst part is they did create a 	The worst part is they did create a viable business model. They were profitable when they had their IPO. They then pretended that the IPO was just another Series X investment, blew all the money, and went negative on their cashflow.Hashicorps problem isn't that their business model doesn't work, it's that they are really bad at their jobs. They ignore customer feedback, laid off support people, and then jacked their prices up. It's a self inflicted wound, and instead of trying to fix it they just keep making it worse.	tedivm	13.736395	-4.3544836	comment	4.0	15.0	1692115758	-12.412002
37136689	Terraform core is kinda crappy. The 	Terraform core is kinda crappy. The language is awful, and the module infrastructure sucks.I would support (with my own money) a fork that would re-use the Terraform providers, and reimplement the language as something not so insane.	cyberax	13.698308	-4.387981	comment	4.0	23.0	1692120179	9.516085
37136787	Ask Roblox employees how they feel a	Ask Roblox employees how they feel about Hashicorp products. Terraform is probably the most solid product they have seconded by vault, but after hearing the consul and nomad horror stories, I don't think I could take their products seriously ever, not when kubernetes is setting right there.	bastardoperator	13.714889	-4.324529	comment	4.0	18.0	1692120533	-12.874089
37136934	We at Oxide were honored to be asked	We at Oxide were honored to be asked to add our name to OpenTF Manifesto. Our statement:At Oxide, our vision has been that on-premises infrastructure is deserving of a system consisting of both hardware and software, at once integrated and open.  Ensuring Terraform users can easily deploy to Oxide has been essential for realizing this vision: we want customers of an Oxide rack to be able to use the tools that they know and love!  And while HashiCorp's move to the BSL does not immediately affect Oxide (our Terraform provider is and remains MPLv2), we recognize that the ambiguity in both the license and HashCorp's language has created widespread concern that gives customers pause.  We support the OpenTF efforts to assure an open source Terraform.  It is our preference to see an MPLv2 Terrafo	bcantrill	13.714643	-4.376528	comment	4.0	12.0	1692121219	-12.372244
37138410	I'm not Hashicorp, but I mean look a	I'm not Hashicorp, but I mean look at Docker. They built the most valuable devops tool of the last generation and can barely muster a viable business. Why would Hashicorp give the slightest worry to losing thousands and thousands of non-paying customers? The upside is lots of money and the downside is loss of halo. Honestly, it's an unfortunate game of expectation setting. If I wrote an open letter decrying Salesforce for not open sourcing their codebase, nobody would take me seriously. But we expect better from Hashicorp for some reason.	tootie	13.723181	-4.3662734	comment	4.0	16.0	1692128627	-12.498158
37240921	It makes me sad that we don't apprec	It makes me sad that we don't appreciate the 10+ years that Hashicorp put into open-source.It's open - somebody else can pick up where they left off, if they really care (like OpenSearch did for Elasticsearch).	philip1209	13.660904	-4.418658	comment	4.0	12.0	1692818520	13.264737
37255941	Terraform Cloud is down for nearly f	Terraform Cloud is down for nearly five hours, and counting	Igalze	13.675364	-4.348346	story	4.0	63.0	1692920064	9.470083
37262890	I wonder how long until Hashicorp st	I wonder how long until Hashicorp starts to use OpenTF as the upstream for TFE	halifaxbeard	13.71758	-4.379374	comment	4.0	31.0	1692977736	13.2388
37262914	How will providers be handled? If Te	How will providers be handled? If Terraform changes the protocols and interfaces it sounds like a game of cat and mouse.The providers will support Terraform and update to the latest framework, which may be incompatible with OpenTF at the time. Are we forking those too?	re-thc	13.704178	-4.3742156	comment	4.0	25.0	1692977835	-12.347329
37263664	When Oracle bought Sun, there were a	When Oracle bought Sun, there were a number of open-source projects they started fencing off and developing in a less community-oriented way. Usually, I think they didn't even actually change the licenses.In every case I can remember, the community-centric forks outpaced or altogether outlived them. Hudson is dead. OpenOffice is basically irrelevant. Oracle ZFS sees little interest and is not what anyone thinks of when they hear 'ZFS'. But Jenkins, LibreOffice, and OpenZFS are all going strong many years later.This could end up being a really good thing for Terraform users, would-be contributors, and Terraform itself as a technology. I wonder if any Terraform maintainers from HashiCorp itself will jump ship to work on it full time as OpenTF. A similar phenomenon ended up being a decisive f	pxc	13.674973	-4.4022703	comment	4.0	33.0	1692981140	-12.328656
37266866	I mean, businesses change? The found	"I mean, businesses change? The founders didn't have a crystal ball to see how every decision would play out.Reading through these comments, I'm reminded of a pop psychology book that I read that essentially said ""never try to take someone away, no matter how small, it is perceived as a much larger loss than it is"".If Hashicorp had started with this new license in the first place, do we really think they wouldn't have had the business success that they've had? We'll never know, but my guess is that a license that says ""competitors can't copy us"" would seem totally reasonable to folks contributing, and irrelevant to customers that have a problem to solve. Someone correct me if I'm wrong here, I want to understand this obviously passionate response.(Since I've commented a couple times on this"	louzell	13.727736	-4.3575315	comment	4.0	19.0	1692996626	0.64604515
37299906	HashiCorp CEO called their community	HashiCorp CEO called their community building for Terraform “Malicious” [video]	vmatsiiako	13.7305565	-4.382727	story	4.0	45.0	1693254007	-12.413612
37335665	Hey!Just wanted to say that this doe	"Hey!Just wanted to say that this doesn't impact OpenTF too much. It's an extra step we need to take before a stable release, but long-term it'll make us more decoupled, which is great.As someone else commented, all providers and modules other than Hashicorp's are hosted on GitHub and the registry is just a ""redirector"". We'll do something similar, other than some special handling for Hashicorp's providers.Also, I know you want us to finally publish the repo - we're working very hard to make this happen and it should be a matter of days now.Disclaimer: Work at Spacelift, and currently temporary Technical Lead of the OpenTF Project, until it's committee-steered."	cube2222	13.716724	-4.366053	comment	4.0	22.0	1693482140	-12.313714
37335801	I sure hope that opentf doesn’t just	I sure hope that opentf doesn’t just cause a fragmentation in the ecosystem that ruins the user experience, especially for the many people who are happily using unpaid TF and self hosted state stores.	yuppie_scum	13.6585	-4.380171	comment	4.0	14.0	1693483060	-12.247373
37398698	Yep, backwards they did(Disclosure: 	Yep, backwards they did(Disclosure: I'm from Digger and OpenTF so am biased)Hashi's biggest miscalculation is that they put Terraform (an open language / ecosystem) into the same bucket as Vault and Consul, which are hostable backend applications.BSL makes sense for Vault, just like it does for MongoDB. It is reasonable to prevent others from charging for hosting your code.But with Terraform, the backend part (TF Cloud) was never even open source. And it's not required for Terraform to work.Hashi shot themselves in the foot. Unlike with Vault or Consul, there is enormous vested interest in the community to keep Terraform truly open. Hashi trying to enforce everyone to use their non-oss backend with it will only result in Hashi losing the privileged (and well deserved) position among provid	izalutski	13.712618	-4.370321	comment	4.0	29.0	1693953058	-12.418974
37399013	Architecturally, I think Terraform r	Architecturally, I think Terraform really ought to be hosted, because otherwise you have to trust everyone with a far-reaching admin cred on his desktop right next to Zoom and maybe BonziBuddy.	erik_seaberg	13.701557	-4.387055	comment	4.0	22.0	1693955006	9.526634
37398840	Well they didn't do it backwards com	"Well they didn't do it backwards compared to at least some subset of peers.  Cockroach: Apache -> BSL https://www.cockroachlabs.com/blog/oss-relicensing-cockroachdb/

  Mongo: AGPLv3 -> SSPL https://techcrunch.com/2018/10/16/mongodb-switches-up-its-open-source-license/

  Elasticsearch: Apache -> SSPL https://www.elastic.co/blog/licensing-change


I am sure there are more I'm forgetting.Edit: Removed MariaDB."	eatonphil	13.7279005	-5.107353	comment	4.0	16.0	1693953913	10.013776
37479500	Just a personal experience. About 6 	"Just a personal experience. About 6 months ago, we moved from NGINX to Caddy on our web app, which handled about 300 million HTTP requests per month at that time (2 web servers, so about 150 million each)CPU Usage:with NGINX - 15-20%
with Caddy - 70-80%I tried multiple tweaks but nothing helped to get NGINX-level performance. So, after a few weeks, we migrated back to NGINX.That being said, I still absolutely love Caddy and use it in a few small scale apps.- The DX it provides is amazing. 
- Creating a PHP-FPM reverse proxy is just a couple of lines. 
- Generating SSL certificates on the server is a breeze. With NGINX, you have to mess with other software like certbot.
- It just works :)"	supz_k	13.660448	-3.9523575	comment	4.0	21.0	1694518464	-9.791739
37549211	I see a roughly even split of people	I see a roughly even split of people using CFn, Terraform and (Python) CDK.AWS shot themselves in the foot by making the Python version of CDK second-tier after Typescript; IaC is still done by DevOps people far more often than application people, and DevOps people use Python.Another gripe is the number of services and new features which launch without CFn support, which also blocks CDK support; when Terraform supports a new platform feature before the vendors own tools do, that's a sign the product teams are being driven by the wrong metrics.	anyoneamous	13.618724	-4.34125	comment	4.0	14.0	1694984101	9.442791
37576195	NATS (https://nats.io/) is another o	NATS (https://nats.io/) is another option, though I'm not sure if it's still considered a viable Kafka replacement.	dividedbyzero	13.5748825	-4.9860578	comment	4.0	25.0	1695155994	-13.141786
24419829	Gamifying Franz Kafka	Gamifying Franz Kafka	mitchbob	13.678159	-4.9606066	story	4.0	12.0	1599650914	10.560734
24435905	As a heavy Nginix user could someone	As a heavy Nginix user could someone shed some light on why Caddy is a better alternative? Serious replies only, please.	FlyingSnake	13.709059	-3.9464662	comment	4.0	23.0	1599767602	8.826422
24436071	The parent comment asked why Caddy i	"The parent comment asked why Caddy is better than Nginx but I'm not sure some of these are applicable.> Built with Go, so memory safety is essentially solvedHas there been any memory safety issues with Nginx?> Very pluggable if you need to add additional behaviourNginx is easily extendable and has far, far larger plugin ecosystem than Caddy.> Config API with graceful reloadsSo does nginx, with ""nginx -s reload"""	calcifer	13.713423	-3.9664097	comment	4.0	16.0	1599768686	8.812406
24751107	I got tricked :)  This is not about 	I got tricked :)  This is not about Apache Kafka but about Bohemian novelist Franz Kafka. Nothing wrong, just saying my mind.	the_arun	13.67637	-4.9504037	comment	4.0	22.0	1602472728	10.554303
24753440	I wonder how Kafka would have felt a	I wonder how Kafka would have felt about Apache Kafka preserving his namesake. What specifically about an event pipeline is kafkaesque?	FeelTheBerns	13.639808	-4.9733396	comment	4.0	14.0	1602503233	10.5670185
24764452	Just to be clear, the AGPL still all	Just to be clear, the AGPL still allows a company to take the the software as-is, without any modification whatsoever, and run it for their customers as a hosted service, right? That's why MongoDB had to add a new clause into the AGPL and make the SSPL? Why didn't Plausible go straight to SSPL?	sudhirj	13.681364	-5.0779567	comment	4.0	12.0	1602588412	-13.025253
24786746	If you split you get the issue that 	If you split you get the issue that you can't reference other resources easily.Collaboration should be a non issue, the few people who manage the infrastructure should agree on the work and plan together.Unlike software code that can be merged later at no risk (a merge conflict at worst), infrastructure does not lend itself to improvising and experimenting on the fly (try to accidentally change your VPC or delete your databases and see how the company goes).Terraform is something that really highlights when there are multiple people/groups in organization trying to steer the ship in a different direction.In my opinion ansible/salt do a much better job for often changed resources like instances or services, because it doesn't need to maintain states, it can lookup and match existing resourc	user5994461	13.699747	-4.4100256	comment	4.0	13.0	1602755519	9.53349
24790941	From https://www.ottoproject.io    I	"From https://www.ottoproject.io    It was an ambitious project, and we feel that it has not
    lived up to expectations. Rather than having a public project
    that does not meet HashiCorp standards, we have decided to
    close source the project so we can rethink its design and
    implementation. The source code is still available for
    download, but Otto will no longer be actively maintained or
    supported.

It looks like this is the successor to Otto, just with a bit of a different architecture.The thing I'm worried about in terms of considering trying/adopting it for any project is whether this will suffer the same fate, if it's not as successful as Hashicorp hopes. I don't want to learn new tools that give a small increase in efficiency if I don't have a guaranteed return on t"	geerlingguy	13.731878	-4.3617325	comment	4.0	25.0	1602781670	13.289023
25043354	Ask HN: How can I overcome anxiety o	Ask HN: How can I overcome anxiety over dealing with infrastructure?	watermelon59	13.700627	-4.3881125	story	4.0	15.0	1604990528	9.48248
25131766	"> Nobody thinks ""cockroach = doesn't"	"> Nobody thinks ""cockroach = doesn't die"". We think ""disease"" because we evolved to have a strong rejection response to these creepy crawlies. Roaches cause disease. Does anybody want that with their infra?The problem with statements like this is that's exactly what I think.  I hear that name and immediately think of a database that's very resilient.If you want to win the argument about changing the name, don't start by claiming that people who think differently than you don't exist."	reificator	13.720031	-5.1735864	comment	4.0	24.0	1605659782	-4.586644
25348003	As recently as last year, I worked f	As recently as last year, I worked for a company where the Chief Architect, in his infinite wisdom, had decided that a database was a silly legacy thing. The future looked like Kafka streams, with each service being a function against Kafka streams, and data retention set to infinite.Predictably, this setup ran into an interesting assortment of issues. There were no real transactions, no ensured consistency, and no referential integrity. There was also no authentication or authorization, because a default-configured deployment of Kafka from Confluent happily neglects such trivial details.To say this was a vast mess would be to put it lightly. It was a nightmare to code against once you left the fantasy world of functional programming nirvana and encountered real requirements. It meant push	Kalium	13.543497	-5.002277	comment	4.0	18.0	1607446971	-13.102522
25350068	Hi! I'm one of the two authors here.	Hi! I'm one of the two authors here. At Materialize, we're definitely of the 'we are a bunch of voices, we are people rather than corp-speak, and you get our largely unfiltered takes' flavor. This is my (and George's from Fivetran) take. In particular this is not Frank's take, as you attribute below :)> SQL is declarative, reactive Materialize streams are declarative on a whole new level.Thank you for the kind words about our tech, I'm flattered! That said, this dream is downstream of Kafka. Most of our quibbles with the Kafka-as-database architecture are to do with the fact that that architecture neglects the work that needs to be done _upstream_ of Kafka.That work is best done with an OLTP database. Funnily enough, neither of us are building OLTP databases, but this piece largely is a de	arjunnarayan	13.552991	-5.035645	comment	4.0	14.0	1607455374	-13.079705
25432302	Makes me wonder if I can install Ter	Makes me wonder if I can install Terraform and Terragrunt on this...LOL, or run a remote VSCode session on it :D (I know that's not gonna happen, but would be kinda cool nonetheless)	bloopernova	13.702737	-4.3886	comment	4.0	12.0	1608052388	9.422534
38940078	Do you reject Kafka because it runs 	Do you reject Kafka because it runs on the JVM? This is a ludicrous position to take. You may not want to fund development of projects when you're forced to train devs to  work them, but to reject using technologies based on the programming language / framework is just fundamentally flawed. Don't use Python tools because I hate python. Don't use kubernetes because it's golang don't use AWS because it has a bunch of java services. S3? I'm not entirely sure but I wouldn't be surprised if it was java edge service based as well.	adra	13.584114	-4.9915285	comment	4.0	12.0	1704902836	10.546958
32657793	> The most popular tool in HashiCorp	> The most popular tool in HashiCorp's ecosystem that wasn't written by them was written by a consulting firm who hated HashiCorp's UXWhich tool is that?On a related note, Vault has a really excellent API. A joy.	truffdog	13.723321	-4.272846	comment	4.0	28.0	1661914158	-12.300636
32658769	Vault is great. But if I were to sta	"Vault is great. But if I were to start learning Terraform now, I'd probably ditch it in favor of Pulumi.Terraform was supposed to make writing DRY easy. It's often more reasonable to copy-paste parts of configuration than to try make it DRY. HashiCorp seems to have the approach of ""if something can be hacked around, even in a very convoluted way, we can ignore any feature requests for that thing to be doable in a normal fashion"".Instead of fixing Terraform, Hashi is creating more and more products that likely will be increasingly unpleasant to use and won't get reasonable fixes, just as Terraform.The way HashiCorp approaches creating an ecosystem, makes me want to stay away."	hericium	13.711607	-4.372724	comment	4.0	16.0	1661924210	9.529838
38157490	Yeah we need strong anti-Kafka laws 	"Yeah we need strong anti-Kafka laws so that individuals can always find out what they've been ""charged"" with and that there always need to be an ""appeal"" process and businesses are strictly denied the ability to claim that they can't reveal their methods."	lamontcg	13.662896	-4.96993	comment	4.0	16.0	1699231852	10.561071
38334665	Hashicorp is one of the extreme exam	Hashicorp is one of the extreme examples. Terraform Cloud is an okay product at best, which went from expensive to very expensive. Moreover, they aggressively changed the Terraform license from open-source to BSL.So after the whole community contributed a lot of providers, they want to profit from that.You should use OpenTofu and buy IAC from one of the companies sponsoring full-time engineers on that project: Spacelift, env0, Harness or Scalr.	jakozaur	13.708238	-4.374811	comment	4.0	24.0	1700413401	-12.388031
38335120	I’ve loved using Hashicorp products 	I’ve loved using Hashicorp products for many years but I have (despite often being in a position to do so) failed miserably to engage in any kind of commercial relationship with them.Their pricing has always been opaque. Despite trying my hardest, even multiple phone calls with their sales teams, I never got even a sniff of how much it would cost for enterprise deployments of Hashicorp products at any of my clients.I’m a shareholder in HCP and lost money on them after the IPO, so maybe I’m a bit sore, but I’m dumping my holdings soon.  I’ve got no confidence this company actually knows how to sell into the bulk of the addressable market that they outlined in their S1.I think the growth they are currently generating will top out pretty soon when the shock of paying about the same for the ma	danw1979	13.71416	-4.350261	comment	4.0	15.0	1700415256	-12.508891
38335480	At a prior company, we had a terrafo	At a prior company, we had a terraform slack channel, where people would post lock and unlock emojis and apply terraform manually.Obviously, it's not a perfect system, and it doesn't indefinitely scale, but it worked well enough.	paholg	13.703253	-4.3829517	comment	4.0	16.0	1700416557	9.481923
38412756	Hlava Franze Kafky (Franz Kafka's He	Hlava Franze Kafky (Franz Kafka's Head)	cwaffles	13.676497	-4.9615855	story	4.0	15.0	1700910312	10.537577
38415343	I like the idea, though I use nanoid	I like the idea, though I use nanoid with the safe letter dictionary (it excludes letters used for profanity[0])They should use a similar dictionary approach IMO because I looked at the implementation and it’s hardcoded to look for “bad” wordsOtherwise looks real straightforward! I’d love to see some performance test suites for it[0]: https://github.com/sqids/sqids-javascript/blob/ebca95e114932...[1]: though with UUID v4 so common to generate and well optimized in most languages I wonder if these userland solutions are really better. You can always generate a UUID and re-encode with base32 or base64 with also is well optimized in most languages	no_wizard	13.929198	-5.1395125	comment	4.0	27.0	1700936732	-4.3141513
38417454	Neat library!We're using randomly ge	"Neat library!We're using randomly generated strings for many things. IDs, password recovery tokens, etc. We've generated millions of them in our system, for various use-cases. Hundreds of thousands of people see them every day.I've never heard any complaints about a random content-id being ""lR8vDick4r"" (dick) or whatever.But nowadays our society is so afraid of offending anyone, that profanity filters has extended all the way to database IDs and password recovery tokens.(there are some legit cases, like randomly generated IDs for user profiles shared in public URLs, that users have to live with, but even there just make the min length 8 and you're unlikely to have any full-word profanity as the complete ID; put differently, I don't understand why they made the block list an opt-out thing)"	sandstrom	13.894285	-5.093423	comment	4.0	15.0	1700952352	-4.339925
38436652	Anyone have good experience with Pul	Anyone have good experience with Pulumi? The IaC space feels a bit crowded	redwood	13.633145	-4.4029317	comment	4.0	20.0	1701111763	9.491476
14728872	[Official containment subthread for 	"[Official containment subthread for complaining about the name ""CockroachDB""]Under the terms of the Unified HN Convention, agreed 2015, every thread about CockroachDB must by law contain a series of complaints about the name of the database. Please post yours below.To help you get started, here's some prompts you might use:""My Enterprise CTO will never go for something named...""""I just think the name sounds really disgusting and off-putting...""""Marketing a product is at least as important as making a product, and this is bad marketing..."""	ForHackernews	13.71169	-5.181095	comment	4.0	14.0	1499588699	-4.627935
14894906	Scaling Blockchains with Apache Kafk	Scaling Blockchains with Apache Kafka	nestlequ1k	13.582896	-4.982428	story	4.0	113.0	1501527463	10.049177
14973491	I understand that when building a bu	"I understand that when building a business around the ""open core"" model it can be hard to draw the right line between no-cost and commercial features. Still, making backups a commercial feature surprises me. I can't imagine running a database without backing up the data. Is the intent to let people run CockroachDB in preproduction environments at no cost, but require anyone running it in production to purchase an enterprise license?"	sciurus	13.645769	-5.1339383	comment	4.0	13.0	1502312035	9.927057
15130631	Kafka also wanted everything burned.	Kafka also wanted everything burned. Imagine what a loss that would have been.	adrianN	13.661938	-4.9632244	comment	4.0	21.0	1504082926	10.529814
15185528	OOC what makes a RDBMS more durable 	OOC what makes a RDBMS more durable that a Kafka? Both of them are systems for representing data on disk. I'd love to hear  why one representation system is better at disaster recovery than another.	bognition	13.568233	-5.02135	comment	4.0	33.0	1504719328	10.548952
15238588	Well, I guess I'm moving switching f	Well, I guess I'm moving switching from Caddy to NGINX then.I like Caddy, it's been great, but I have no interest in paying for support, and I'm certainly not going to pay to remove a HTTP header.Yes, I could spend time setting everything up to build custom versions of Caddy without the header, but it'll be quicker and easier to switch to NGINX.Whilst I really appreciate all the work that has gone into Caddy, I am extremely annoyed that it's now going to cost me at least an afternoon to move away from.If you're an existing Caddy user and don't want to (or can't) pay, your options are either don't upgrade, server ads for Caddys sponsors, or spend a significant amount of time configuring your own build process/switching to something else.I can't help but feel this move is going to be bad for	JamesMcMinn	13.7230425	-3.9378726	comment	4.0	24.0	1505312861	8.80892
15285798	"We already see with other ""use this "	"We already see with other ""use this as a building block"" public registries like Docker's where people blithely pull this stuff in and don't pay attention to whether or not it actually works according to even some semblance of best practices. So what's the handler for the ""hey, this is broken/insecure, this needs to be fixed or taken down"" case? How does this alert users whose infrastructure pulls this in?HashiCorp, as some of the leaders of the Make Decisions On Five Minute Demos #squad, usually doesn't answer even half the questions for their Bright Ideas before people adopt them and find all the rakes on the lawn. This feels even worse than usual.Building strong foundations matters. This doesn't help somebody who knows what they're doing do it better/faster--because of the inevitable imp"	eropple	13.696396	-4.3788033	comment	4.0	18.0	1505836886	-12.446001
15361302	Interesting that HAProxy believes it	Interesting that HAProxy believes it is incumbent enough to charge for directly copying a feature Consul has had for years.  When I added Consul to my stack 3 years ago HAProxy was already looking behind the times... I don't think they can catch up for any new installation.	doublerebel	13.611542	-4.5216804	comment	4.0	14.0	1506637617	-13.12876
15461233	I love DoubleContainer:https://githu	"I love DoubleContainer:https://github.com/raxod502/TerrariaClone/blob/master/src/Do...which is fortunately only used in a comment here:
https://github.com/raxod502/TerrariaClone/blob/9ea04b15add48..."	yathern	13.635908	-4.396166	comment	4.0	31.0	1507841566	9.487697
15603353	Congrats to the kafka/confluent team	Congrats to the kafka/confluent team.Side note: https://pulsar.apache.org also seems to be gaining traction and has a much better story around performance, pub/sub, multi-tenancy, and cross-dc replication. Will be interesting to see the evolution of both going forward.	manigandham	13.567233	-4.9838123	comment	4.0	26.0	1509556310	-13.11175
15603983	>What exactly have you found complex	>What exactly have you found complex about running Kafka?I run small 2-node kafka cluster that processes to 10 million messages/hr - not large at all - it's very stable, for almost a year now. However what was complex was:* Setup. We wanted it managed it by mesos/marathon, and having to figure out BROKER_IDs took a couple hours of trial and error.* Operations. Adding queues and checking on consumers isn't amazing to do from the command line.* Monitoring. It took a while before I settled on a decent monitoring solution that could give insight into kafka's own consumer paradigm. Even still there are more metrics I would like to have about our cluster that I don't care to put the time in to retrieve.	nemothekid	13.549269	-4.9804096	comment	4.0	17.0	1509560217	-13.1593
17282252	Terraforming Ourselves: What sort of	Terraforming Ourselves: What sort of world do we want to live in?	Hooke	13.7033415	-4.3781095	story	4.0	44.0	1528698682	7.178803
17744148	The only thing that spending time wi	The only thing that spending time with Cloudformation teaches me is how much it makes me prefer doing things with Terraform.  I think Cloudformation is considerably better than nothing and it was great when there were no alternatives, but that was a while ago.	kokey	13.656786	-4.3631396	comment	4.0	51.0	1534078575	9.552077
17744101	How does CloudFormation compare with	How does CloudFormation compare with using something like ansible to manage AWS environments?	alecbenzer	13.559207	-4.3275375	comment	4.0	14.0	1534077695	9.499865
17744291	We've been using CF for a few years 	"We've been using CF for a few years as well. IMHO it is very complicated to manage and getting stuff working involves a lot of trial and error.
Also you end up waiting a lot. Waiting for things to spin up, waiting for things to become available, waiting for things to rollback, etc. On top of that the failure modes can be ugly and hard to figure out.My recommendation is to treat CF as a single point of failure. Once it gets in a broken state, you may have to destroy your stack and rebuild it. Even if it is fixable on paper, being able to just nuke a stack and replace it is a very good thing. This has happened to us multiple times and having a plan helps.So what I do with elasticsearch for example is use 3 CF stacks (one for each AZ). This allows me to do things like rolling restarts in a sa"	jillesvangurp	13.615047	-4.3864937	comment	4.0	20.0	1534080944	-6.639644
21074725	It starts out with that title trying	"It starts out with that title trying to piggyback on Marc Andressen's famous article.  Then by 1/3 of the way through, it's full on ""Apache Kafka® and its uses"".I feel cheated.  I was ready to defend the non-software companies of the world, but the article has very little to do with the title.  It seems like just an ad."	ken	13.642663	-4.9766264	comment	4.0	20.0	1569441909	-13.094096
21292774	Did you write that? It's reminiscent	Did you write that? It's reminiscent of Kafka's In the Penal Colony.	mLuby	13.675759	-4.951366	comment	4.0	15.0	1571416531	10.539278
21332714	What tech would you use to store a c	What tech would you use to store a critical append-only data if not with Kafka ?	je42	13.539568	-5.006426	comment	4.0	15.0	1571821908	-13.088681
39109548	Primary keys in ClickHouse are not u	Primary keys in ClickHouse are not unique	tosh	13.783248	-5.1834702	story	4.0	3.0	1706042880	-13.659376
33048150	Terra Invicta Is a Super Dense, Terr	Terra Invicta Is a Super Dense, Terrifying Child of XCOM and Crusader Kings	ibobev	13.702425	-4.383963	story	4.0	32.0	1664644337	9.487213
33054660	Side question : is nats a credible a	Side question : is nats a credible alternative to kafka nowadays ? I’ve read it could do the same things in theory, but i haven’t heard of real world experience feedbacks with this tech.	bsaul	13.575434	-4.9262385	comment	4.0	15.0	1664706359	-13.335882
31870069	If anyone is interested, after firef	If anyone is interested, after firefox send shutdown, i wrote https://www.relaysecret.com, its footprint is extremely small (1 lambda function that does all signing for s3 upload/download, simple frontend code that does encryption in browser using web crypto api with no 3rd party Js, no 3rd party css, no tracking. Anchor tag is used for additional random key material (so it wont leave ya browser and files will always be encrypted regardless).You can roll your own too with the terraform code in it. It costs me barely anything (never go over free tier limit) to run it because files never live more than 10 days (there is a catchall lifecycle rule on the bucket) and when users select durations, i also put them in bucket prefix that has lifecycle rule place on objects under them for that durati	ebfe1	13.532794	-4.332549	comment	4.0	20.0	1656108484	9.464391
31962215	While I understand the sentiment, I 	While I understand the sentiment, I don't really get the particulars.So, instead of learning Puppet or Terraform, you want to implement one from scratch?I have that itch too, I also try to implement the basics of something like git or Ansible in my own toy system when learning it. But that's just to get some hang of why the tool looks like it does. I'm still there to use the tool.That goes double if you're working with others. I totally get the bit about wanting to learn fundamentals, but not the bit how it turns you off some higher level tool.	xorcist	13.627616	-4.4459114	comment	4.0	16.0	1656794748	9.501692
39536560	so in a quick glance, this does not 	"so in a quick glance, this does not look like nginx/caddy. It is not a binary you download, install and just configure to talk to your upstream servers. Rather a set of packages which you assemble to fulfill a particular use case. You basically end up writing a ""new"" reverse proxy just for your use case.Not sure how useful this would be for anyone except very large businesses or someone like cloudflare itself."	inapis	13.637751	-4.005707	comment	4.0	14.0	1709119809	8.812809
32143198	Because learning terraform or cloud 	Because learning terraform or cloud formation takes time. I am an average developer and I understand foundational infra theory. I know I can click around AWS without help in order to deploy a CRUD app. Why bother with scripted infra if I am going to revisit it once a year to fix an issue?	nkzd	13.6758175	-4.370698	comment	4.0	13.0	1658175973	9.567209
32160296	I get an email about once a year cla	I get an email about once a year claiming I use mongodb and am not paying license fees. It’s really weird because they’ll say stuff like a system I designed is based on mongodb and they have “evidence” from project staff. It’s such a strange claim and I guess they don’t know I made the system.It’s also strange because they keep demanding license fees and asking to audit and I just deny and tell them to buzz off.They remind me of Oracle. It also makes me wonder if there’s some legal compulsion that could force them to do discovery. Based on their behavior I would not use mongodb.	prepend	13.748112	-5.167196	comment	4.0	17.0	1658281137	9.947417
32191169	Show HN: Terrabook – Replit for Infr	Show HN: Terrabook – Replit for Infrastructure	igorzij	13.68803	-4.39724	story	4.0	23.0	1658492560	9.5078335
32400282	Partly yes, but not fully.The idea i	"Partly yes, but not fully.The idea is not to go back to the Software Engineer asking the Ops team ""Hey, can you provision a Postgres database for me please?"" and then waiting a week for it.It's that the Software Engineer takes a module that was prepared by the Platform team - i.e. ""terraform-postgres-mycompany"" - which already includes all the requirements the company has for handling databases (think backups, monitoring, encryption, etc.). They can then proceed to use it in the small service-specific Terraform configuration, which really is just putting such ready-made modules together.The important bit being - the Platform team isn't a bottleneck here."	cube2222	13.669419	-4.4399595	comment	4.0	16.0	1660063259	-13.254807
22144393	The Terraform example doesn't seem p	"The Terraform example doesn't seem particularly useful to me, as something that runs Terraform would be on the CI side. I don't need to worry about dependencies locally or anywhere else because it should never ever be ran anywhere but the CI server, which we would steward over.The AMI part of it I believe is also typically done with a ""data"" block to grab a new one, so I'm not sure what in particular is added there?Dependency management for devops sounds reasonable, but to me it seems more like trying to make an NPM/Cargo/pip that is for every language instead of a particular language."	sl1ck731	13.694025	-4.3999257	comment	4.0	12.0	1579922156	-4.817476
35950526	EDIT: Thank you for clarification. I	EDIT: Thank you for clarification. It is a fair 3 node vs 3 node benchmark.Does this benchmark compare both 3 node Kafka against 3 node Redpanda cluster? It's unclear.	globalreset	13.561307	-5.013871	comment	4.0	14.0	1684167007	-13.091994
35967085	It just feels like two widely differ	"It just feels like two widely different scenarios we're talking about here.https://jack-vanlightly.com/blog/2023/4/24/why-apache-kafka-... talks about the case of a single failure and it shows how (a) Raft without fsync() loses ACK-ed messages and (b) Kafka without fsync() handles it fine.This post on the other hand talks about a case where we have (a) one node being network partitioned, (b) the leader crashing, losing data, and combing back up again, all while (c) ZooKeeper doesn't catch that the leader crashed and elects another leader.I think definitely the title/blurb should be updated to clarify that this is only in the ""exceptional"" case of >f failures.I mean, the following paragraph seems completely misleading:>  Even the loss of power on a single node, resulting in local data loss "	judofyr	13.527942	-4.981461	comment	4.0	12.0	1684267721	-13.072329
35978838	When I worked at mega corps, I'd see	"When I worked at mega corps, I'd see a ""new"" tech emerged that was always very similar to a software that our company had developed to solve similar issues.  I remember terraform getting released and seeing that it was just an inferior version of the Cloud Formation Template generator someone at my company had invented years prior.I've seen this happen so many times and every time, I'm surprised that more businesses don't spin off cool internal projects like this into startups.  Hashicorp's market cap is roughly 10% of the market cap of the megacorp I used to work for.  And right now, my team is working on an internal project to fill the gaps left by various authentication providers we use.  But instead of spinning this off into it's own business, they are just kind of waiting around for s"	mywittyname	13.666576	-4.3617687	comment	4.0	15.0	1684345674	9.411628
36049672	This is a great point. People use Ca	"This is a great point. People use Caddy because for simple cases the configuration is seemingly ""easy"", and more importantly it includes Let's Encrypt out of the box. I've tried to argue with these users that nginx has many powerful (and necessary) features, to no avail. Traefik is a similar story: It integrates neatly with Consul for service discovery so it's a go-to tool for TLS termination in front of a service mesh.Do I personally need DNS SRV support? No, I have a templated Nomad config that will re-render and reload the nginx config if the consul upstreams change. Setting this up though is definitely a bigger hurdle than just specifying a Consul service as an upstream."	heipei	13.636275	-4.0099688	comment	4.0	14.0	1684870407	-12.602369
36244123	The management of infrastructure via	The management of infrastructure via Terraform has a hidden engineering cost that should also be considered.  Engineers can much more easily maintain, learn and introspect infrastructure via Kubernetes, despite its own complexity, given the immature, inconsistent and undeniably awkward qualities of the Terraform toolchain. Engineering time is expensive -- the morass of Terraform can easily quadruple engineering efforts.	waffletower	13.681441	-4.392086	comment	4.0	15.0	1686240167	9.455795
36303907	I've been happy with Hashicorp Terra	I've been happy with Hashicorp Terraform Cloud and HCL except for the very recent price hikes which may force us to leave them so we are keeping our eyes out for alternatives.The AI assistant seen here is a very good idea. I will actually share this with my team.I imagine the terraform conversion doesn't work when you use in-house written providers (in golang), is this correct?	tjasdfhwd___	13.693027	-4.387721	comment	4.0	12.0	1686619497	9.4601345
36432380	We did auto-increment integers with 	We did auto-increment integers with multiple servers like 20 years ago:  The caveat is that you have to know how many servers are in the set in advance.  Each server increments by the population size, and their starting number is their position within the pool.Not hyper scale, but good enough for failover or a 3-5 node setup.	coredog64	13.865872	-5.1606536	comment	4.0	12.0	1687442736	-3.8766418
36475693	> Look I'm not even complaining. But	> Look I'm not even complaining. But it feels like I'm stuck in a Franz Kafka novel. We just keep changing and changing the same things again and again because that's the new way to do. Big distraction. Destroys your workflow. Forget about all the util scripts you wrote last 6 months being useless.Here's how I stay sane -- I focus on the changes. For the technologies that you noted, here are some good questions that come to mind to set them in my brain:- What's the difference between CGI scripts and Serverless?- What's the difference between Terraform and Ansible?- What's the difference between a Bash script and a Makefile ? Is one more general than the other? Does one have a considerably better interface than the other?All the solutions look the same, but the distinctions between them (ev	hardwaresofton	13.66368	-4.43005	comment	4.0	36.0	1687753181	9.527451
28779602	Main use case of Terraform is not po	Main use case of Terraform is not portability. Have fun porting your SQS queue, DynamoDB table or VPC config to GCP or Azure equivalents. It won't look like similar at all except the resource name. However, If you are only running containers and virtual machines, sure you can benefit from portabilityCloudformation lags features so bad that you end up hacks or Lambda functions with custom resources. DynamoDB Global tables took 4/5 years to be available in Cloudformation.I've also seen wrongly constructed Cloudformation deleting critical databases, hanging (often), times out, rollback hanging not succesful, so it's not always rainbows & sunshine there either. Also I don't like Terraform for its usage of excessive state files, handling state files with DynamoDB locks, having them on S3.I won'	CSDude	13.656735	-4.36897	comment	4.0	20.0	1633561565	-3.0887308
28779984	I think the best solution is K8s and	I think the best solution is K8s and some tool to help you generate the yaml files.Terraform, CDK, and Pulumi all work similarly. At the end of the day, you declare a DAG that says how you want your infrastructure to work and use that DAG to come up with a list of changes you should make. Then you execute each of those changes via API calls and hope that reality on your cloud provider really does reflect the state DAG that you've built. CDK is better than the rest here, because it's got the best ability to measure the state.When you work with K8s, on the other hand, you tell your infrastructure what shape it should be in with yaml files and then let your infrastructure figure out the best way to get there. When combined with something like ArgoCD, you've got a really powerful deployment st	ahzhou	13.567037	-4.425581	comment	4.0	13.0	1633564380	9.49178
23427777	Don't we all?What exactly do you mea	Don't we all?What exactly do you mean?Two micro instances don't seem to warrant using Terraform	reallydontask	13.688821	-4.3702364	comment	4.0	17.0	1591360717	9.484167
23633370	Everytime CockcroachDB has been on H	"Everytime CockcroachDB has been on HN, the conversation has been always about their name (""what a shitty name for an enterprise software"" vs. ""who cares if it works well""), but I have been also wondering the same question.Are they getting adoption? And what's their unique value proposition?"	cocktailpeanuts	13.731046	-5.160875	comment	4.0	15.0	1593030029	-4.6777196
23729375	If in 2020 you still choose Kafka as	If in 2020 you still choose Kafka as your messaging infrastructure, you are well behind the times.I get it, I really do. Your manager has heard of Kafka, as has your PM and CTO. Nobody has ever fired for buying Kafka. It’s the new IBM.“Buying Kafka? It’s open source, so it’s free!” you say, my naïve friend who hasn’t heard of Confluent.Yes, Kafka is free until you go to production and need things like mirror maker, for multi-site replication. Then it’s time to pay up to the company that has taken over and monetized the project.But its a pain to run, a pain to debug, uses avro as a binary schema, because everyone uses avro, right? And partitions are great! Until you need to change them and then you’re in for a world of strange and potentially unnoticed bugs from a discontinuity in partition	taywrobel	13.567431	-4.995783	comment	4.0	14.0	1593827986	-13.109313
23960716	> Recommend to setup two subnets in 	> Recommend to setup two subnets in your project. One public and one private.This is very good advice. We recently had a uni project where we had to use a MongoDB database. Somebody just apt-get installed a mongodb onto a DO droplet called it a day. Two days later the only remaining records prompted us to transfer x amount of BTC to a adress that was store in our DB. It just contained dummy data, but it is worrying that something like this apparently happens to lots of companies as well.The only thing I find weird is that ElasticSearch itself does not offer a way to handle authentication, it was just enabled by a plugin that was paid (it seems like its free now).	moooo99	13.56247	-4.7547455	comment	4.0	17.0	1595803241	-9.949607
24221895	The issue (or benefit, depending on 	The issue (or benefit, depending on your perspective) with Terraform is that it's a one-shot CLI binary. If you're not running the binary, then it's not doing anything. If you want a long-running daemon that responds to non-human-initiated events, then Terraform isn't a good tool.Any time you try to declaratively define state, if you don't have a daemon enforcing the declarative state, then you will suffer from drift. One approach is the one Terraform has - assume that drift is possible, so ask the user to run a separate plan stage, and manually reconcile drift if needed. Another approach is the controller approach, where the controller tries to do the right thing and errors/alerts if it doesn't know what to do.	solatic	13.709912	-4.395938	comment	4.0	16.0	1597920519	-12.369768
19987058	The biggest issue we have with Terra	The biggest issue we have with Terraform (and other Hashicorp tools in general, really) is their different configuration formats, but mostly it is HCL limitations.I haven't found a solution for it, but I have lots of resources that are almost identical, except for a few arguments, but right now it seems like my options are to either write my own Ruby script to output .hcl files, or live with two resources that are almost identical, and live with the mistakes that could entail by future modifications.I haven't had the time to look into HCL2 yet, but maybe it is solved.	kawsper	13.702582	-4.4113636	comment	4.0	17.0	1558570715	9.519296
19987591	Where do you store your state files?	Where do you store your state files? The only project I've worked on that used Terraform stored state in a git repo, which seemed like a nightmare with multiple people doing deploys to the same environment. Others have suggested it would be better stored on a network accessible share.	nineteen999	13.705286	-4.386943	comment	4.0	12.0	1558576377	-12.326316
19988124	I've been chasing infrastructure-as-	I've been chasing infrastructure-as-code for a while, but I keep getting blocked by Terraform missing provider APIs (GCP Cloud Function Runtimes outside Nodejs, most recently), Kubernetes complexity, and generally being too lazy to sit down and bang out something in code that I can quickly iterate on with a console or quick CLI commands. I've had some wins with Serverless Framework, but outside that I've yet to see the payoff from the time I have put towards it. Am I defective?	reilly3000	13.676317	-4.3849344	comment	4.0	12.0	1558581933	-12.385006
19988033	this is short-sighted. Terraform and	"this is short-sighted. Terraform and CloudFormation are not even in the same league. One of them works and actually can be used for Infrastructure as Code, the other one does not roll back in the face of failure - it effectively craps for reasons ranging from network failure, process crash, even normal operation.  
 One is heavy kool-aid with bugs that go unresolved for years, the other behaves as advertised.Sorry, but I have yet to meet a developer that used Terraform and willingly wants to keep using it after seeing it fail. When your tool cannot keep track of the resources it created or when it gets into situations where it doesn’t allow you to do certain things (like deleting all resources created) and you have to relearn how the underlying cloud works, it’s time to move on.Do yourselv"	mirceal	13.687964	-4.3801317	comment	4.0	39.0	1558581029	9.490556
20340848	Seems like if it continues to be a p	Seems like if it continues to be a problem that more multi-cloud solutions will present themselves (Terraform does that sort of thing, right?).	ajhurliman	13.602781	-4.333779	comment	4.0	13.0	1562117336	9.524448
20364577	The analogy helped me understand, bu	The analogy helped me understand, but in factorio belts are required primarily because everything takes physical space. What are real world use cases for kafka? Is it primarily if your data is too much to simply store in a db?	chrischen	13.578653	-4.994382	comment	4.0	14.0	1562350815	-13.077166
20496446	I would caution a easy solution as f	I would caution a easy solution as frankly we are but cavemen in the understanding of a complex ecosystem like earths. Attempting what amounts to a terraforming experiment would be a extremely high risk endevour with possibly catastrophic ends.	christkv	13.697092	-4.3615475	comment	4.0	32.0	1563787696	7.1887956
20684923	Careful with AGPL. It has yet to sta	Careful with AGPL. It has yet to stand in court, and is actually the license mongodb has left behind in favour of their own SSPL because it turned out not strong enough, and not preventing eg. AWS to sell mongodb as a sevice without releasing any of their provisioning and monitoring sw (though I'm not sure AWS actually uses mongo or, like Azure with CosmosDB, a proprietary API-compatible product instead). The amount of confusion regarding AGPL shows in eg. [1], and I've also heard the opinion it might not be enforcable because it wants to restrict third-party software. IANAL, but I wouldn't rely on AGPL, and not many people would use AGPL software anyway.[1]: https://softwareengineering.stackexchange.com/questions/1078...	tannhaeuser	13.706145	-5.0827003	comment	4.0	15.0	1565697933	-13.021431
20862662	A lot of people advocate PostgreSQL 	A lot of people advocate PostgreSQL as a replacement.  Why not elasticsearch?  It’s also a document store with a good history.At a previous job I shipped Mongo as the store (under AGPL) because at the time the replication story for PGSQL was too complex compared to mongo.  But I reached a point where I was going to replace Mongo with elasticsearch and get rid of Solr at the same time.	craigching	13.522163	-5.1684833	comment	4.0	17.0	1567469135	-10.034887
13662428	Just wondering here, but why would y	Just wondering here, but why would you use this vs terraform? Given that I can define most of the stuff I need from AWS in terraform and check the state of the infra via plan command, what would be the use case for CLI? I'm actively trying to break the habit of modifying infra without first writing terraform document for it. This way I can always be sure that I have no surprises when creating a new environment.	vitalysh	13.68723	-4.3949356	comment	4.0	15.0	1487270809	9.531969
13661269	Like Spanner, Cockroach’s correctnes	Like Spanner, Cockroach’s correctness depends on the strength of its clocks... Unlike Spanner, CockroachDB users are likely deploying on commodity hardware or the cloud, without GPS and atomic clocks for reference.I'm curious, do any of the cloud providers offer instances with high-precision clocks?  Maybe this is something one of the smaller cloud providers might want to offer to differentiate themselves - instances with GSP clocks.	exhilaration	13.5336	-5.1613665	comment	4.0	16.0	1487263184	9.808701
13899305	How do folks feel about Terraform vs	How do folks feel about Terraform vs Cloudformation for AWS-only deployments these days? Do we have a clear winner? I remember even a year back there were certain features of AWS that were being made available through Terraform first before you could configured them in CF, so the choice was somewhat non-obvious.	akurilin	13.666238	-4.3715034	comment	4.0	16.0	1489799075	9.50921
13997129	I recently had cause to work with Ka	I recently had cause to work with Kafka Connect; we needed to get data from MySQL into Hadoop. It was not a positive experience, and IMO Kafka Connect is pretty immature, and Kafka as it is currently constituted isn't well featured enough for this purpose.Kafka Connect is architected around the idea of producers and consumers that either add messages to Kafka, or read messages from Kafka.The MySQL producer isn't suited for anything other than the most basic of table replication, though; if you need any ETL, you'll be gluing more stuff into your pipeline downstream. And when the producer falls over, the first you'll know about it is when you read the logs or poll status indicators. It didn't give me warm fuzzies about reliability nor visibility nor flexibility. It was very basic stuff.The H	barrkel	13.548486	-5.0047417	comment	4.0	14.0	1490893912	12.785736
14362398	Show HN: Goka – distributed stream p	Show HN: Goka – distributed stream processing library for Kafka written in Go	flosch	13.550899	-5.0093617	story	4.0	105.0	1495052213	-13.1148615
14455966	I think the biggest question is, do 	I think the biggest question is, do you think its feasible to directly start with Kafka instead of NSQ or does Kafka just require a much stronger/larger team to operate than NSQ?	Roritharr	13.57836	-4.986888	comment	4.0	29.0	1496265211	10.521435
14456513	Engineer @ SegmentNSQ has served us 	Engineer @ SegmentNSQ has served us pretty well but long term persistence has been a massive concern to us. If any of our NSQ nodes go down it's a big problem.Kafka has been far more complicated to operate in production and developing against it requires more thought than NSQ (where you can just consume from a topic/channel, ack the message and be done). More to that, if you want more capacity you can just scale up your services and be done. With Kafka we had to plan how many partitions we needed and autoscaling has become a bit trickier.We now have critical services running against Kafka and started moving our whole pipeline to it as well. It's a slow process but we're getting there.We've had to build some tooling to operate Kafka and ramp up everyone else on how to use it. To be fair, we	TheHydroImpulse	13.533232	-4.988944	comment	4.0	29.0	1496270687	-13.07535
14516995	I'm not going to type that word over	I'm not going to type that word over and over for the rest of the time I have to maintain an application and I won't make others do it either.Some projects have been accused of  being to cheeky, or taking metaphors too far, and that can be forgiven but CockroachDB might as well have been named Pancreatic Cancer or Genital Warts as far as I'm concerned.	ryanmarsh	13.718699	-5.1760764	comment	4.0	22.0	1496954101	-4.5227494
30873523	Kafka the hypochondriac	Kafka the hypochondriac	lermontov	13.68782	-4.953527	story	4.0	30.0	1648770054	10.582174
30894545	I know this comment will show up eve	I know this comment will show up eventually, so saying it first. Thought this was a critique piece on Apache Kafka.	pixel_tracing	13.642355	-4.9724755	comment	4.0	14.0	1648961226	10.522234
31010892	Ask HN: How do hackers hack MongoDB 	Ask HN: How do hackers hack MongoDB instances?	NithurM	13.662846	-5.0914288	story	4.0	2.0	1649820359	9.865634
31056361	Basically before CDK, this type of o	Basically before CDK, this type of offering made sense but the truth is that AWS correctly identified this need to quickly scaffold infrastructures AND edit it without requiring YAML, Cloudformation or other declarative syntax like Terraform.CDK is literally writing Python code. You can organize your files and write out logic in all the ways you could possibly. CDK offers tremendous value in this regard but the downside being you won't be able to generate the same layout on Azure or Google but that's a given.On one end of the spectrum you could have a hybrid of Azure/Google cloud products but with AWS as your main base, vice versa. However, usually in my personal experience, you rarely end up deploying a complete stack on both clouds. It's like take that product from Google or Azure and ma	tomatowurst	13.650755	-4.377067	comment	4.0	16.0	1650145435	9.493278
31175498	Unknown Values: The Secret to Terraf	Unknown Values: The Secret to Terraform Plan	sensiquest	13.708374	-4.3837137	story	4.0	35.0	1651025677	9.459534
31262779	Caddy is great but there sadly isn't	Caddy is great but there sadly isn't anything like nginx-proxy-manager for it.  The proxy manager is actually a full little identity provider and authenticating proxy--it's very slick and perfect for simple home self-hosting scenarios with a handful of users.	qbasic_forever	13.677699	-3.9461033	comment	4.0	16.0	1651682205	8.816122
31354976	Wow, another neat Cloudflare release	"Wow, another neat Cloudflare release. Is there some sort of ""innovation week"" type thing going on right now?One question that the example given raises for me, is how to manage that function I see there in a robust, ""proper software engineering"" sort of way. This has been a challenge for me on AWS when trying out Lambdas. The individual pieces are cool, but the system that connects them all together is a little opaque. How do you version control the code? How do you keep track of which pieces work with which other pieces?We use terraform to manage the AWS resources, but it's kind of clunky, and not official. Is there some Cloudflare-supported way to maybe declaratively define your different resources?Someone who has built a somewhat complex app with a lot of workers, and durable objects, an"	losvedir	13.522964	-4.2215614	comment	4.0	12.0	1652366787	9.530495
31537639	Terraform already has to manage thos	Terraform already has to manage those, and yet worse - Changes to the name of objects within the state were entirely manual until 1.0. Changes to objects underneath terraform often break the connection. Terraform doesn't have good tooling built in to find orphan resources, which it would if it were working with stateless objects.Terraform would be much better without state. Not 10x better, but 2x.	GauntletWizard	13.714205	-4.391686	comment	4.0	16.0	1653712520	-12.361237
31539024	I agree that state can be removed in	I agree that state can be removed in Terraform.But I do not believe leveraging tags and/or metadata is the right approach - configuration for these resources could potentially be large (e.g. GKE resources) and most providers will have a size constraint on their metadata and tag values. Creating a metadata/tag key for each configuration key would also get messy, but solves the value size problem.Why wouldn’t it be possible to not store the previous state at all? Terraform’s job is to reconcile what exists with what is declared - we should be able to rely on the provider’s APIs to understand what exists, perform the diff, and reconcile the changes.	tomgouder	13.714556	-4.3946056	comment	4.0	16.0	1653731823	-12.384327
31736861	I hate Kafka with a passion. We’re d	I hate Kafka with a passion. We’re driving it with Kafka Streams, and our Streams threads have been blowing up left and right with undecipherable error messages whenever we look at it slightly wrong. We also don’t have the resources to babysit it hourly so here we are,  plagued with undebuggable production downtime and no way out of this.I’ve been writing software for a living for more than two decades, and Kafka is the most horrible, impossible-to-grasp boat anchor I’ve ever had to deal with.I hate every minute of my working day that I have to deal with Kafka Streams’s hissy fits.	Hackbraten	13.563193	-4.99227	comment	4.0	23.0	1655202104	-13.16656
28905238	This is exactly how I feel about it.	"This is exactly how I feel about it.A while back I was on team building a non-critical,
low volume application. 
It just involves people sending a message basically.
(there is more too it).The consultants said he had to use Kafka because the messages could come in really fast.I said we should stick with Postgres.No, they said, we really need Kakfa to be able to handle this.Then I went and spun up Postgres on my work laptop (nothing special), and got a loaner to act as a client.
I simulated about 300% more traffic than we had any chance of getting.   It worked fine. (did tax my poor work laptop).No, we could not risk it, when we use Kafka we are safe.Took it to management, Kafka won since Buzzword.Now of course we have to write a process to feed the data into Postgres. After all its what ev"	ThinkBeat	13.553003	-5.0120006	comment	4.0	17.0	1634563773	-13.076603
28910165	>My answer to anyone who asks for ka	">My answer to anyone who asks for kafka: Show me that you can't do what you need with a beefy Postgres.Sorry thats just a clickbait-y statement. I love Postgres, try handling 100-500k rps of data coming in from various sources reading and writing to it.
You are going to get bottlenecked on how many connections you can handle, you will end up throwing pgBouncers on top of it.Eventually you will run out of disk, start throwing more in.Then end up in VACCUUM hell all while having a single point of failure.While I agree Kafka has its own issues, it is an amazing tool to a real scale problem."	superyesh	13.554792	-5.00691	comment	4.0	19.0	1634584480	-13.095706
29051020	(Creator of Terraform, Co-Founder of	"(Creator of Terraform, Co-Founder of HashiCorp)I'm quite late to respond here, but just wanted to clarify one thing: Terraform is WORKFLOW agnostic, not TECHNOLOGY agnostic. This is a key part of our product philosophy that we make the 1st element of our Tao: https://www.hashicorp.com/tao-of-hashicorpI've talked about this more with more references in this tweet: https://twitter.com/mitchellh/status/1078682765963350016I don't think we've ever claimed cloud portability through ""write once run anywhere;"" that isn't our marketing or sales pitch and if we ever did make that claim please let me know and I'll poke some teams to correct it. Our pitch is always to just learn one workflow/tool and use it everywhere, but you explicitly WILL rewrite cloud-specific modules/code/etc.With Terraform, the"	mitchellh	13.678319	-4.380837	comment	4.0	12.0	1635617758	9.519244
29063026	Not far off. Having chatted with fri	Not far off. Having chatted with friends from the company, consul failed due to a issue with streaming which was introduced in 1.9 (https://www.hashicorp.com/blog/announcing-hashicorp-consul-1...) which caused it to have massively reduced tps in certain circumstances. No functional consul meant no vault, no consul/vault meant no nomad, no nomad meant no application servers.Furthermore, the services were down for long enough that the asset caches went fully cold, so spinning back up to 100% capacity would put far more load than usual on the servers meaning recovery needed to be a very slow incremental rollout to warm them.Messy situation all around, but if you want the real root cause pay attention to the consul change log over the next few weeks I’d say.	inside_edition	13.613421	-4.506159	comment	4.0	43.0	1635741339	-13.137839
29111937	I feel I need to reply with my thoug	"I feel I need to reply with my thoughts.- Vault is not niche - it’s THE way to manage pki and credentials if you’re half serious about security.
Which is why you’re now are starting to see managed vault.- Consul - EVERYONE should use service discovery, cloud or not. It’s indispensable for numerous reasons. If you doubt it’s relevance, check out the Kubernetes integration work - there’s a reason for that focus.
You need service discovery if you operate at any sort of scale, spanning multiple providers and teams (Azure have a managed consul offering btw).- “Trust” nomad? The team and I have used it since 0.4 and 0.6 in full production at two different companies. K8s as well, but it lacks the unix vibe of “one thing, and do it well”, which is something you get with nomad, consul & vault.
Noma"	jordanbeiber	13.6095295	-4.309622	comment	4.0	29.0	1636056462	-12.92939
29112923	I have actively used Vagrant, Consul	I have actively used Vagrant, Consul, Terraform, and Vault and I really have never understood all the fanboyism for Hashicorp.  Their products are OK but easily replaceable and often redundant in modern cloud providers.  Wish them luck on their attempt to cash in but I for one do not intend to buy any stock.	shironandon	13.718818	-4.357422	comment	4.0	20.0	1636062567	-12.657128
29115486	> Consul - EVERYONE should use servi	> Consul - EVERYONE should use service discovery, cloud or not.Discovery means that you don’t know your service name? Or endpoints? How can one lose his service? Im def missing something :)	nuker	13.624809	-4.5316906	comment	4.0	14.0	1636086802	-13.12133
29299625	Anything more about Kafka you can te	"Anything more about Kafka you can tell us?Seriously, the one time I was in a situation where much of the team seemed hellbent on this ""just put all in Kafka"" idea (without really understanding why, exactly) the arguments they came up with were not too dissimilar from what you've shared with us above.  It all seemed to come down to ""OMG databases are hard, schemas are hard, our customers don't understand the data they're shoving at us.  But Kafka will take care of all of that for us.  Because, you know, shiny.""That said I'd still like to have a more ... balanced understanding of why Kafka may not necessarily be The Answer, and/or have more hidden complexity or other negative tradeoffs than we may have bargained for."	almeria	13.606601	-4.9839535	comment	4.0	26.0	1637528145	10.50937
29301154	I've worked at some places that used	I've worked at some places that used Kafka (including LinkedIn), although I have never been responsible for running the platform itself.  I'll chip in with what I see as the negatives.Kafka sits at roughly the same tier as HTTP, but lacks a lot of the convention we have around HTTP.  There's a lot of convention around HTTP that allows people to build generic tooling for any apps that use HTTP.  Think visibility, metrics, logging, etc, etc.  Those are all things you effectively get for free with HTTP in most languages.  Afaict, most of that doesn't exist for Kafka in a terribly helpful.  You can absolutely build something that will do distributed tracing for Kafka messages, but I'm not aware of a plug-and-play version like there are for most languages.The fact that Kafka messages are effect	curryst	13.58039	-4.9932284	comment	4.0	19.0	1637540008	-13.100566
29301896	Our company is currently looking in 	Our company is currently looking in to kafka and microservices. The problem we have is that the volume of actions going on has gone past what a single rails app with sql server can handle. When I look in to it, it seems like it would mostly be used as some kind of job queue where worker microservices churn through the entries in kafka to do some kind of data processing without needing sql.But then there are blog posts saying kafka is a terrible job queue because you can only have one worker per partition and it's hard to get more partitions dynamically.	Gigachad	13.532979	-4.996085	comment	4.0	12.0	1637546432	-13.100774
29380995	I love what the Caddy project is doi	I love what the Caddy project is doing, but every time I look into it I can’t get a straight answer about performance.One of the top search results for Caddy performance is this Caddy forum thread with a response from the Caddy author: https://caddy.community/t/performance-compared-to-nginx/7993But it seems to be dodging the question and linking to the most misleading possible Tweets instead of providing any actual info:> Caddy is written in Go. It will perform just as well as any other Go web servers.> Google, Netflix, Cloudflare, Fastly, and other large network companies deploy Go on their edge. You can too.What a bizarre response.They then link to a Tweet from someone who claims that Caddy performed 20X better than nginx. An impressive claim! But further investigation shows that virtual	PragmaticPulp	13.707738	-3.9349608	comment	4.0	61.0	1638200085	8.834735
29644894	MongoDB Poaches Top Amazon Executive	MongoDB Poaches Top Amazon Executives to Compete with AWS	htrp	13.623508	-4.952038	story	4.0	3.0	1640140132	0.13959475
34286939	mod_rewrite hasn't been necessary si	mod_rewrite hasn't been necessary since nginx.2023 - Use single binary caddy. It's like 2 lines of config total to remove the extension from your CGI url's.	geenat	13.634994	-4.0333505	comment	4.0	13.0	1673088275	8.861424
34319600	Handling 100k consumers with one pul	Handling 100k consumers with one pulsar topic	sherlockxu	13.544363	-4.9407043	story	4.0	53.0	1673317533	-13.110581
34319549	On a similar but slightly different 	"On a similar but slightly different topic, I've long wondered why someone hasn't created a ""Universal Terraform Provider"" that can work across the major cloud services. Resources such as ""instance"" and network are pretty general, an while there would definitely be gotchas, it would probably be helpful in the same way that cross platform GUI frameworks have seen a rise in popularity."	samcat116	13.650854	-4.3674026	comment	4.0	21.0	1673317328	9.501833
34338520	But using Terraform with $CLOUD impl	But using Terraform with $CLOUD implies that you are familiar with $CLOUD - then if you know $CLOUD and bash why would you need to use Terraform to work with that cloud?Also, as stated in a sibling comment, all the commands, expressions and capabilities of Terraform differ based on your $CLOUD, so in the end it's not that universal.In fact, it's not different from bash - bash is always the same, you just type `az` instead of `aws-cli`.	impoppy	13.670033	-4.3747263	comment	4.0	12.0	1673445683	9.491714
34453664	> Sometimes it doesn't matter. Examp	"> Sometimes it doesn't matter. Example below:There is a saying for the examples you and others are posting ....""The exception rather than the rule""Posting contrived examples in order to attempt to prove a point. For the majority of cases, a random ID remains the better option.But unfortunately developers still treat security as an afterthought.  They continue to use ""serial"" because of what can only be described as sheer ignorance, i.e. demonstrably false misunderstandings about database technology.Case in point, I placed an order on an e-commerce site a couple of weeks ago. I was not best pleased to be given a tracking URL that read: ""https://example.com/order/WEB-nnnnn"", where nnnn was clearly an incrementing number.  Such a thing is inexcusable in 2023 !It took a lot of strength to resi"	traceroute66	13.9353	-5.1706896	comment	4.0	19.0	1674225196	-5.814254
34798082	HAProxy Security Update (CVE-2023-25	HAProxy Security Update (CVE-2023-25725)	peanball	13.529698	-4.074839	story	4.0	40.0	1676419340	8.771795
16827988	I'm not a Kafka user. However, I am 	I'm not a Kafka user. However, I am a long-time keen implementer of event sourcing and log-derived data stores. Many of these involve per-user or per-individual sqlite databases.I cannot understand why Kafka is causing people problems. I am surprised that this seems to be being accepted as a problem with event sourcing in general.The most obvious solution I came up with with GDPR right to be forgotten was to have per-user logs. User gone? Delete their log.Then you just need to handle how you share the projected data from the individual event logs. Messages are unlikely to be spread over multiple log events and can be just sourced directly. It's clear who owns that data: it's the user who wrote the message as they can at any time delete the only copy.Aggregation is more difficult but can be	dpwm	13.5298815	-5.009177	comment	5.0	19.0	1523607307	3.7754252
17508548	Not very related to the article, but	Not very related to the article, but I'd like to get some opinions from HN community (if I may). I've read quite a few books and short stories of Kafka (I think all(?) his novels and some short stories like The Metamorphisis, A Report to an Academy) but most of them were really struggling readings for me and some incomplete (I never got to the very end of The Trial). His short stories, I read cover to cover in one sitting, and they were very enjoyable readings. I also read Amerika (his first novel) cover to cover pretty fast and it was very enjoyable too. His other works, I find very challenging for reasons unknown to me. Kafka has a certain literary style that feels very enjoyable, reading it gives me so much joy, so it's definitely not that I didn't like them. It's also definitely not bo	gnulinux	13.67561	-4.947818	comment	5.0	17.0	1531329308	10.525495
17744207	What I don't like about Terraform is	What I don't like about Terraform is that the state of your resources is stored locally, which might lead to consistency problems depending on your setup. With CloudFormation state is handled by CloudFormation itself, so you can be confident that stack updates operate on the latest state.	Dunedan	13.677744	-4.383395	comment	5.0	22.0	1534079556	-12.344676
17820223	Well - I can only say that what Mong	"Well - I can only say that what MongoDB has is not complete. There are still many holes, and we prefer to avoid them.
And of course this doesn't solve the other issue, where developers cannot use AGPL in large enterprises."	Yiftach	13.718658	-5.1545267	comment	5.0	15.0	1534958200	-13.021945
19267448	MariaDB CEO accuses large cloud vend	MariaDB CEO accuses large cloud vendors of strip-mining open source	CrankyBear	13.530753	-5.1182866	story	5.0	25.0	1551305819	9.925071
37582752	> 1 million a year buys a lot of dev	> 1 million a year buys a lot of development and operationalNot all that much.  At a global enterprise, for instance, that buys a couple senior systems engineers with SDLC experience after you include all the per-employee overhead that doubles their cost beyond their comp.Terraform saves the enterprise far more than that in overhead.  If Terraform provides even 10% lift across 1000 seats, that's many times its cost.At a million a year, you'd need it to save you between 2 and 4 headcount to break even, not counting the compliance/audit/security benefits.	Terretta	13.523474	-4.2692084	comment	5.0	15.0	1695208194	9.403599
37647922	The anti-pattern here isn't Kafka, i	The anti-pattern here isn't Kafka, it's using Kafka for 7,500 messages/day.  Making your whole system asynchronous for that level of load is the textbook definition of over-engineering.	davewritescode	13.581517	-4.99899	comment	5.0	27.0	1695664540	-13.118061
37669078	Why should I care about OpenTofu?	Why should I care about OpenTofu?	RyeCombinator	13.675936	-4.386213	story	5.0	74.0	1695781451	-12.165422
37678182	This is asking for a huge favor, but	This is asking for a huge favor, but can anyone explain to me what Kafka does that RabbitMQ doesn't? Is it just scale?	throw1234651234	13.561076	-4.9922442	comment	5.0	18.0	1695836226	-13.082002
37943342	> We do not recommend build Pulsar f	> We do not recommend build Pulsar from source. Building from source is only necessary if you wish to make modifications. If you want to play with the source code check the Developers section of the documentation.Suspicious.> The recommended approach to getting started with Pulsar is by using the official installations script. Follow the guide in the Quickstart section.Doubly suspicious.	boilermen	13.55033	-4.9316273	comment	5.0	23.0	1697725519	13.318485
37979488	Seems like overkill no? Otel collect	Seems like overkill no? Otel collectors are fairly cheap, why add expensive Kafka into the mix. If you need to buffer why not just dump to s3 or similar data store as a temporary storage array.	bushbaba	13.553316	-5.0002346	comment	5.0	21.0	1698012084	-13.123593
37980118	I expect it would be far cheaper to 	I expect it would be far cheaper to scale up tempo/loki than it would be to even run an idle kafka cluster. This feels like spending thousands of dollars to save tens of dollars.	daurnimator	13.566181	-4.9947143	comment	5.0	15.0	1698018583	-13.125841
33664211	Ask HN: Does anyone use Terraform to	Ask HN: Does anyone use Terraform to deploy Kubernetes services in a large org?	sandspit	13.66277	-4.398834	story	5.0	10.0	1668813288	-13.478257
28111138	Can't Amazon just serve these bogus 	Can't Amazon just serve these bogus headers and keep opensearch compatible? It's not like headers are copyrighted...	catmanjan	13.531293	-4.6376247	comment	5.0	26.0	1628465102	-9.929791
28111249	Amazon could try that, but it wouldn	"Amazon could try that, but it wouldn't stop there. they'd end up in a constant arms race.also, that ""you know, for search"" tagline is featured on t-shirts sold by Elastic [0]. seems entirely plausible to me that Amazon & Elastic lawyers could get into a pissing contest about potential trademark or copyright protection of that term and whether sending it as an HTTP header constitutes infringement.0: https://elastic.shop/products/you-know-for-search-t-shirt-st..."	evil-olive	13.527716	-4.54213	comment	5.0	16.0	1628466198	-9.886039
28583774	Terraform can be frustratingly slow 	Terraform can be frustratingly slow at times. You have to realize that at the end of the day, it's an abstraction layer on top of the public APIs of a cloud service. If all your services are hosted on a single cloud, you don't need Terraform.We saw a huge improvement in our build times after we started using AWS CDK directly.	picardo	13.669128	-4.3743734	comment	5.0	18.0	1632054322	-11.766298
28583914	An alternative opinion: When I worke	An alternative opinion: When I worked at a large tech company, my team made a conscious decision to not use terraform. This gave us some key advantages- we are able to adopt new cloud features immediately, months before they were available in tf, and our direct cloud access let us build features that would surprise the teams using tf within the company.If your core competency isn't dependent on your cloud platform tf is a great tool. But using cloud APIs directly was great for us.	dharmab	13.62676	-4.351	comment	5.0	27.0	1632055674	-6.584419
12589758	Hi, former Apache CouchDB guy, forme	Hi, former Apache CouchDB guy, former Cloudant employee, and former Realm employee here… I (still) love CouchDB but at the end of the day I think its sync is a better fit for server-to-server or web client-to-server use-cases, not mobile-to-server.There’s tons of stuff CouchDB sync doesn’t support that end up being a huge problem with mobile apps… Here are the top 3 things Realm adds in my opinion: great client-side performance, native models that are extremely easy to use, and conflict-free sync (not conflict resolution!). With my own eyes I’ve seen a generation of developers try CouchDB for mobile apps and then abandon it because of the limitation of its approach. Personally I’m glad to see someone try to bring more options to developers. I think this is the first general-case true sync 	timanglade	13.540032	-5.154432	comment	5.0	34.0	1474986110	9.641664
12601365	>PS: How is your automated provision	>PS: How is your automated provisioning system reaching your cluster if not by SSH?Not sure about moondev, but Terraform + Cloud-init + Container Orchestrator means that I basically never need to SSH into my nodes, except in extreme/rare circumstances.	colemickens	13.525451	-4.313259	comment	5.0	19.0	1475096687	-13.337301
13002530	Kafka: An End or a Beginning?	Kafka: An End or a Beginning?	lermontov	13.658597	-4.9645543	story	5.0	72.0	1479693983	10.552405
27541999	Could be just me. I see Apache kafka	Could be just me. I see Apache kafka more nightmarish than bureaucracy in 'The Castle' or Police/judiciary in 'The Trial' from author Franz Kafka. Mr Franz btw stole his last name from this very famous Apache Kafka project.	geodel	13.675456	-4.9583263	comment	5.0	23.0	1623950250	10.547523
27653030	Not sure why you’d ever do this inst	Not sure why you’d ever do this instead of using terraform.	orf	13.70799	-4.3835936	comment	5.0	31.0	1624812144	9.457681
27777719	You can (and always should) decouple	You can (and always should) decouple the plan and apply steps. For a non terminal approach this can be done by outputting the binary plan to a plan file (with -out=path) and reviewing the plan terminal output which will show all actions Terraform will perform in human readable format. Then have the plan file be used as input for the apply step. The apply won't perform any other action that was not in the plan file (which matches the output that was reviewed) and if state of the environment it would apply to has changed in the meantime it will abort without causing undesired changes and you can restart the process again.There is also the prevent_destroy[0] meta argument for resources but afaik it has no effect when you remove the resource from your .tf files[1], so it would not have helped 	aequitas	13.70696	-4.385639	comment	5.0	21.0	1625779014	9.485994
27820490	Not just startups. I  interviewed wi	Not just startups. I  interviewed with a large financial institution recently  and they had their heart set on Kafka. From what I learnt , they did not need Kafka -- the message order was not important, there was only one producer and one consumer and the volume of data was not extra-ordinary -- but they wanted to be on Kafka as that was the enterprise direction. I might have come across as an old fart when I asked the why they could not use their existing MQ infrastructure.	manishsharan	13.562797	-5.0033584	comment	5.0	38.0	1626181872	10.420393
22376647	I did not follow every step, but ass	I did not follow every step, but assuming Oracle win this, will it also apply to Amazon proposing DocumentDB with the same API that MongoDB ?	seren	13.681857	-5.1299	comment	5.0	26.0	1582219119	-13.006992
22397654	Does it still have the issue of fail	"Does it still have the issue of failing ""open to the world"" if the x-pack trial expires?  See: https://discuss.elastic.co/t/ransom-attack-on-elasticsearch-..."	tyingq	13.523087	-4.7252836	comment	5.0	24.0	1582475044	-10.0042515
22867591	I've been looking at this for awhile	I've been looking at this for awhile and it's super cool! As a person who's used Terraform extensively and has ran into a lot of issues with it's declarative, non-scriptability (at least before 0.12), pulumi seems great. And it's also great its able to wrap any Terraform-compatible provider out of the box.One question I have for anyone who's used it or the team if they're here is how they convinced their company to use it? Last time I checked pulumi was a small company with only 20M in funding versus hashicorp which was more established. What happens if the pulumi team runs out of money and we've moved all our infra onto pulumi?	lycidas	13.692097	-4.394261	comment	5.0	16.0	1586880143	9.5105095
23108782	Enhancing the Terraform Experience: 	Enhancing the Terraform Experience: Why We Use Terragrunt	Sephr	13.706208	-4.3882337	story	5.0	59.0	1588888322	9.479264
26782081	I have mixed feelings about this ser	I have mixed feelings about this server side license stuff that mongo db started.  Imagine where the internet would be today if the creators of apache and mysql had tried to prevent shared hosting providers in the early days of the web from using their software	VWWHFSfQ	13.728018	-5.165553	comment	5.0	30.0	1618247630	9.977256
26813750	If you like CDK, then i highly recom	If you like CDK, then i highly recommend pulumi	theopsguy	13.622553	-4.4328675	comment	5.0	33.0	1618438331	9.499936
26814019	Reading the sister comments, I kind 	Reading the sister comments, I kind of understand the appeal of terraform for huge/multi cloud infra systems.Now, managing changes in code doesn’t look too far from dealing with kubernetes’ json/yml config and applying them to the current cluster, provided it would be trickier when expanding to multiple cluster or doing complex orchestrating.I guess TF makes a lot more sense for on-premise, bare metal VMs ?	hrktb	13.595149	-4.371227	comment	5.0	17.0	1618440152	-13.470335
27027220	HashiCorp Nomad 1.1 Beta	HashiCorp Nomad 1.1 Beta	edouardb	13.70158	-4.383901	story	5.0	106.0	1620059892	-13.069298
27082086	When is it actually desirable to imp	When is it actually desirable to imperatively program your cloud provider rather than using something like Terraform?Obviously there are services meant to be consumed from application code, but the infrastructure provisioning stuff?	closeparen	13.674354	-4.3832917	comment	5.0	17.0	1620431031	-2.7628047
27433877	Terraform v1.0 Is Out	Terraform v1.0 Is Out	weeha	13.719965	-4.362452	story	5.0	54.0	1623153058	9.433062
27436182	I recently had to do a piece of AWS 	I recently had to do a piece of AWS work that required cross-account resources (create certificate in one account with ACM, set DNS entries on Route53 in another account).Not sure about pulumi, but AWS CDK and CloudFormation can't handle that as one step (there are some horrific hacks). With Terraform it's absolutely trivial.I was liking CDK up to that point, but that limitation is a complete deal breaker for me. Had to come back to my old friend Terraform.	borplk	13.6800165	-4.395834	comment	5.0	18.0	1623164890	9.495448
27439356	The biggest issue with Pulumi is tha	The biggest issue with Pulumi is that Pulumi doesn't support adding custom API providers. Part of the power of Terraform is in provisioning infrastructure, orchestration, deployment, and application configuration all in one tool. For example:(aforementioned GitHub provider)https://registry.terraform.io/providers/terraform-provider-c... for Concourse (CI/CD)https://registry.terraform.io/providers/coralogix/coralogix/... (full disclosure: I work for Coralogix)This would be completely impossible with Pulumi. If Pulumi didn't bless it, it doesn't exist in Pulumi's world. In the meantime, Terraform allows you to separate all the network calls to a custom provider and allow you to just focus on the configuration. The number of paid external APIs is only expanding exponentially, Pulumi can't poss	solatic	13.68308	-4.394259	comment	5.0	15.0	1623178794	9.491886
15601879	At small scale just go with Kinesis.	At small scale just go with Kinesis. The base semantics are pretty much the same between the two, and Kafka is terribly complex to run. The hosted Kafka solutions are too expensive for small scale.Kinesis has a real auth story too, plus you can trigger Lambda functions off streams.	whopa	13.566799	-5.0086813	comment	5.0	29.0	1509549086	-13.096806
28886814	TerraVision (1994)	TerraVision (1994)	martyvis	13.691546	-4.3962083	story	5.0	41.0	1634379629	9.315353
28904105	Very interested to hear how people h	Very interested to hear how people here overcome the limits of kafka for ordered events delivery in real world, and what those were.	bsaul	13.574593	-4.997398	comment	5.0	20.0	1634554325	-13.073243
29074036	Let's make bets on how long it takes	"Let's make bets on how long it takes before the C&D hammer comes down hard on them.> 
Trademark infringement is the unauthorized use of a trademark or service mark on or in connection with goods and/or services in a manner that is likely to cause confusion, deception, or mistake about the source of the goods and/or services.Emphasis mine, source https://www.uspto.gov/page/about-trademark-infringementhttps://trademarks.justia.com/860/49/mongodb-86049805.htmlI wouldn't rule it out they will simply dispute the domain name https://my.nic.io/legal/legal_dispute.html>  by using the domain name, you have intentionally attempted to attract, for commercial gain, Internet users to your web site or other online location, by creating a likelihood of confusion with the compla"	chx	13.7550535	-5.14471	comment	5.0	20.0	1635805460	9.9689865
29111588	My thoughts not facts. I know that t	My thoughts not facts. I know that there are more products then I mention.I fail to see in what segment Hashicorp will remain relevant over time.Terraform is the tool I mostly see companies pay for. Over time cloud vendors will make Terraform obsolete. In fact it is already a problem to use Terraform since it can not move at the same pace as major cloud vendors.Vault is an extremely complicated niche tool, most companies should not use.Consul, the service discovery tool is mostly not needed in cloud environments. Don't think any cloud vendor today have Consul as a service on their agenda even though this has been announced years ago which is a warning sign. Personally I really like Consul and the way you can set up ACL for instance.Vagrant, use whatever.Nomad has lost the battle with Kuber	AtNightWeCode	13.687922	-4.374608	comment	5.0	38.0	1636054597	-12.775008
29235068	Well to begin with, Java is not a se	Well to begin with, Java is not a serious programming language to do systems programming in, since it has poor control of networking, threads and memory.Then it's a message bus built on top of TCP. Anyone with basic understanding of networking can see that if you have a producer that wants to send the same data to multiple consumers efficiently, you should use multicast.Kafka also lacks proper mechanisms to throttle the speed of producers when consumers are too slow, which is the first thing you should ever be concerned about whenever you introduce a queue.If you want something somewhat decent within Javaland you could try Aeron.	mgaunard	13.548871	-5.005388	comment	5.0	26.0	1637023376	-13.095725
29235486	It looks like Kafka is by far and aw	It looks like Kafka is by far and away the way to handle persistent logs/events at scale. AFAIK a company here in Japan called LINE has all their messaging flowing through a large kafka cluster themselves.Wonder if anyone is running large NATS Jetstream[0]/Liftbridge[1] or Pulsar[2] (yahoo runs those) clusters. I guess Pulsar might be #2 in terms of adoption at large scale?[0]: https://docs.nats.io/jetstream/jetstream[1]: https://liftbridge.io/[2]: https://pulsar.apache.org/	hardwaresofton	13.541519	-4.9859056	comment	5.0	24.0	1637026204	-13.111221
29359556	I have never seen Terraform crash in	I have never seen Terraform crash in the years I’ve been using it. Optimizing based on a lottery event seems counter-productiveEDIT: Alright guys, good points all around. Mainly what I meant is the ratio of useful of Terraform vs its shortcomings. Not hating on the Cluster API pattern, but imho better to stick to standardized approach.	klohto	13.690473	-4.3872643	comment	5.0	17.0	1638014941	9.450241
29417496	I tried using Earthly, great product	"I tried using Earthly, great product.Unfortunately, we rejected it at our organization due to how verbose the commands are. I want my users to be able to say `earthly plan-stage` for a terraform repo, and for it to work. But you cannot.You cannot have earthly automatically use environment variables from your env, you have to explicitly list the commands yourself using flags:$ earthly \  --build-arg AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \

  --build-arg AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \

  --build-arg AWS_DEFAULT_REGION=us-west-2 \

  --build-arg AWS_SESSION_TOKEN=$AWS_SESSION_TOKEN \

  --build-arg AWS_SECURITY_TOKEN=$AWS_SECURITY_TOKEN \

  +plan-stage

This means if I want to `terraform plan` something, I need to explicitly set all of my AWS environment variables.Compare this"	honkycat	13.694093	-4.3909183	comment	5.0	21.0	1638459741	-11.950066
29421909	I just started using CDK for a proje	"I just started using CDK for a project, and after having fought with terraform and trying pulumi, I have to say CDK is a breath of fresh air. Really well thought out, makes doing things the right way easy as well.The biggest difference I can see between CDK and pulumi (other than CDK only being for AWS) is that the CDK is more opinionated. When you spawn a new database, it'll automatically create a secret in secretsmanager, and set up rotation etc. And since it can assume IAM, it generates granular policies for you easily with calls like `dbInstance.grantRead(lambdaInstance)` etc, instead of you having to manually construct a JSON policy.I really think the pulumi / CDK method of ""Use a real programming language to generate a declarative spec"" is the right way to go.For those keeping score:"	habitue	13.66586	-4.3997927	comment	5.0	19.0	1638476401	9.512022
25454960	"(From the FAQs)
How does the change "	"(From the FAQs)
How does the change to the BSL affect me as a CockroachDB user?It likely does not. As a CockroachDB user, you can freely use CockroachDB or embed it in your applications (irrespective of whether you ship those applications to customers or run them as a service). The only thing you cannot do is offer CockroachDB as a service without buying a license.- - - - -Cockroach is asking not to take open source and start offering it as a service. Which sounds like completely reasonable thing to do!Of late there has been plenty of fear mongering when it comes to licensing. I wonder if this is some paid blogs from cloud companies which helps form some opinions or the age old open source license-and-principles which hold little water with predatory cloud companies around."	samblr	13.645987	-5.08723	comment	5.0	28.0	1608208055	9.90106
25589309	Personally I wouldn't deploy the lam	Personally I wouldn't deploy the lambda code with the terraform. They inherently have different life cycles. In an ideal scenario you deploy some dummy code with terraform (just a hello world). And as a separate pipeline you deploy the actual code. Ideally, if your ci/cd supports it, you have two separate pipelines, each one only does it's thing if the relevant files have been edited, with the code depending on the terraform.	dastx	13.637951	-4.394345	comment	5.0	21.0	1609385600	9.559446
25591110	The simplest HTTP API example is htt	"The simplest HTTP API example is https://github.com/nsriram/lambda-the-terraform-way/tree/mas... is about 66 LOC of terraform. But wait, it uses lambda-role (12 LOC), lambda (27 LOC), api-gateway (47 LOC) & api-gateway-lambda-integration (40 LOC).So 66+12+27+47+40=192 of terraform in a BUNCH of files.Compare that to 47 LOC of verbose AWS SAM YAML:
https://github.com/kaihendry/count/blob/sam/template.ymlAll in one file."	hendry	13.693929	-4.37783	comment	5.0	18.0	1609407179	9.544
25835769	I thought their license update prohi	I thought their license update prohibits making a service that directly sells Elasticsearch? Did I miss that they are moving to closed source?	throw03172019	13.539842	-4.6261835	comment	5.0	28.0	1611076613	-9.937033
25865623	Forgive me for expressing my frustra	Forgive me for expressing my frustrating for a moment here:What is with this new generation of developers (I don't mean new as in young since I meet people in their 40s espousing these ideas), who make all these high-minded arguments about how evil it is to profit off of someone else's work, when literally that's what proprietary software is for. If you don't want someone to make money with your code, don't give it away freely, sell it.Instead, what Elastic did was they made a beautiful piece of open source software, licensed under Apache 2.0. Because it was Apache 2.0, organizations were comfortable building Elasticsearch into their stacks because they knew that they couldn't get Microsofted. Additionally because it was Apache 2.0, hundreds of contributors who are not affiliated with Elas	__blockcipher__	13.532453	-4.5174932	comment	5.0	32.0	1611269239	8.184297
13661416	CockroachDB might be the worst produ	CockroachDB might be the worst product name I've come across. I get it; cockroaches are extremely hardy, but they're also much more strongly associated with uncleanliness and disease.EDIT: Also, cockroaches are BUGS! Bugs cause problems in computer systems.	will_pseudonym	13.722899	-5.178765	comment	5.0	21.0	1487264091	-4.629998
13812051	I thought this was going to be about	I thought this was going to be about Kafka.	linkmotif	13.660307	-4.960643	comment	5.0	17.0	1488905965	10.526248
24106575	I admit that I read the code and com	I admit that I read the code and completely overlooked the single equals sign. Makes me wonder why it would be so easy to change the userid. Shouldn’t there be some safeguards in place to stop the userid from being updated from unsafe places.	hmottestad	13.834135	-5.135519	comment	5.0	25.0	1597044878	-13.636454
19986976	I’m a little unclear on terraform in	I’m a little unclear on terraform in practice.As you supposed to download this, use it’s language and syntax which is all it’s own thing, to define you services and then export that to a YAML setup that AWS CloudFormation (for example) is expecting?I assume there are reasons I wouldn’t just define it myself in YAML directly?	SlowRobotAhead	13.684169	-4.390244	comment	5.0	36.0	1558569894	9.510551
20121813	Apache Kafka on Kubernetes	Apache Kafka on Kubernetes	jcamou	13.597334	-4.979093	story	5.0	6.0	1559884163	-13.158817
20353326	> a misconfigured and Internet-facin	"> a misconfigured and Internet-facing Elasticsearch database without a password."" If this wasn't bad enough, a Kibana web-based app, there to make navigating through the data easier, had no password protection.That's not even really 'exposed in breach', that's just 'exposed'."	OJFord	13.53079	-4.6891785	comment	5.0	21.0	1562236859	-9.9782
20586911	https://github.com/raxod502/Terraria	https://github.com/raxod502/TerrariaClone/blob/master/src/Te...You may not like it, but this is peak programming. A level of perfection attainable only by undergoing the rite of writing a single if statement with 100+ conditions.	rococode	13.698009	-4.401457	comment	5.0	25.0	1564684846	9.462571
20595966	In the days before hosted Kafka impl	In the days before hosted Kafka implementations were readily available, I tried to set up Kafka in our AWS infrastructure. Getting Zookeeper working in a world based on autoscaling groups was a nightmare. It felt like it was built for the days where each server was a special snowflake.Looking forward to seeing if this gains traction.	kevsim	13.568539	-4.980068	comment	5.0	25.0	1564774949	10.445289
20974860	If you create resources outside of t	If you create resources outside of terraform/CF your doing it wrong. This is a feature, not a bug.	t34543	13.710508	-4.383143	comment	5.0	17.0	1568508938	-8.1112
30791471	Elasticsearch is not a pain in the a	Elasticsearch is not a pain in the ass to scale, it is one of the easiest databases to scale. Kafka is medium, since they ditched Zookeeper.	jturpin	13.559468	-4.964791	comment	5.0	18.0	1648136590	-13.0038595
31176249	> So returning to the original quest	"> So returning to the original question: why doesn't Terraform use an existing language? So far, I've not yet encountered an existing language runtime which contains the building blocks Terraform uses in order to keep the plan-related promises.That sure does sound like the author believes ""pulumi preview"" shouldn't ever work"	mdaniel	13.693315	-4.3973866	comment	5.0	24.0	1651033188	9.51754
31188599	OK so I'm a little puzzled by this d	"OK so I'm a little puzzled by this demo (https://learn.hashicorp.com/tutorials/terraform/spotify-play...).The example directive ""spotify_search_track"" runs a server-side search on Spotify and returns a list of results, which you can use to populate a playlist.This is like … very cool, but also isn't it a little against the spirit of immutable infrastructure? Every time Spotify re-ranks their search results my terraform apply will populate different songs into my playlist, without anything changing in my main.tf in source control."	mherdeg	13.705346	-4.3647633	comment	5.0	23.0	1651118651	9.370435
31287032	Since I wrote this article, my colle	"Since I wrote this article, my colleagues and friends have chipped in with even more absurd examples.How about some Pascal? https://github.com/jaxxstorm/pulumi-examples/pull/96
Or maybe Emacs Lisp is more your flavour? https://github.com/jaxxstorm/pulumi-examples/pull/95Or the pièce de résistance: Brainfuck: https://github.com/jaxxstorm/pulumi-examples/pull/97"	jaxxstorm	13.631302	-4.42812	comment	5.0	29.0	1651854406	-10.109102
31307632	Kafka explored this in great depth, 	Kafka explored this in great depth, albeit in analog form.I don't think I fully appreciate the assignments to read Kafka in college until these algorithmic bans, ousting from app stores, automated support, etc came along. Before that I figured the human element could, in most cases even if it required extreme difficulty, sort things out eventually. Then came these heuristic algorithms that have practically become the platonic ideal if Kafka-esque systems.Edit: While Amazon is very far from perfect and has dropped several notches in customer service, I will say that they are still very good compared to others. I can still get ahold of a real person that has some leeway for professional judgement when addressing a problem.	ineedasername	13.592451	-4.9963446	comment	5.0	28.0	1652040235	1.9865896
31538370	I'll play devil's advocate (because 	"I'll play devil's advocate (because I understand the need for a state):What if terraform was able to perform a complete audit of your environment for each provider and say ""this is what you've got, mate"", then give you options for each resource:1. Accept (turns it into terraform code)2. Reject (removes the resource)Taken further, this idea effectively means that manually creating something like EKS could be a way to auto-compose Terraform code and store it in git.Pros:* You have the options of writing code, using the console or using a script or binary to perform a complex setup* You have 100% code coverage once Terraform compared code with reality and forced you to chooseCons:* Auto-generated code is shitty.* Slooooooow without caching (which is only one of the functions of state)To make "	raffraffraff	13.695967	-4.3851085	comment	5.0	18.0	1653723473	9.538049
31562962	It's exactly that. It gives us a lit	It's exactly that. It gives us a little chance to fight against the Giants.In 5 years the initial version becomes Apache 2.0 then the next version and so on and so forth. CockroachDB uses similar license. MariaDB uses that, Redpanda Data and others. You are right that acronym is confusing - it's not Boost license, it's Business License. Every major technological startup turned away from BSD/Apache 2.0 licenses due to inability to compete with cloud providers without technological edge.	romange	13.575801	-5.156215	comment	5.0	57.0	1653940374	-5.460254
35950856	alex here, original author of redpan	alex here, original author of redpandais hard to respond to a 6-part blog series content - released all at once - on an HN thread.- what we can deterministically show is data loss on apache kafka with no fsync() [shouldn't be a surprise to anyone] - stay tuned for an update here.- the kafka partition model of one segment per partition could be optimized in both arch- the benefit for all of us, is that all of these things will be committed to the OMB (open messaging benchmark) and will be on git for anyone interested in running it themselves.- we welcome all confluent customers (since the post is from the field cto office) to benchmark against us and choose the best platform. this is how engineering is done. In fact, we will help you run it for you at no cost. Your hardware, your workload h	agallego	13.521967	-4.996361	comment	5.0	38.0	1684168391	-13.092866
36121556	The Diaries of Franz Kafka	The Diaries of Franz Kafka	lermontov	13.679144	-4.9582515	story	5.0	71.0	1685426247	10.490923
36145585	> In his introduction to an edition 	> In his introduction to an edition of Metamorphosis, the novelist Adam Thirlwell suggests that we have misunderstood Kafka much as Magarshack said we had misunderstood Chekhov, and that Kafka is much more playful than we have hitherto given him credit for.When I was 17, I read Kafka for the first time and was put off by what I saw as the dour and oppressive atmosphere. I had the same insight as Thirlwell when I reread him ~10 years later: Kafka's works have a sort of deadpan and absurdist humor to them and shouldn't be treated as seriously as they often are. I wonder how much of that humor is lost in translation.	kieselguhr_kid	13.677699	-4.957151	comment	5.0	17.0	1685573910	10.558985
36303834	Do these guys need a state file like	Do these guys need a state file like terraform does? It's great that you can use a normal programming language, but that's nowhere near as big a pain point as state files getting out of sync. Not even close.	s_Hogg	13.70995	-4.388751	comment	5.0	21.0	1686618911	-12.242602
34828605	This is https://www.terra.money/ whi	This is https://www.terra.money/ which I don’t think has any affiliation with Hashicorp’s terraform	squeegee_scream	13.7566	-4.3816175	comment	5.0	15.0	1676591993	-12.480382
35159192	> Kafka is a distributed logWhen sho	> Kafka is a distributed logWhen should you use Kafka instead of storing rows in SQL with a timestamp so you can replay them/fetch them if needed?Why do you need a sharded Kafka cluster?Most businesses are going to have Redis, SQL, and probably RabbitMQ.Where/why add Kafka to that stack?	MuffinFlavored	13.540425	-5.01031	comment	5.0	21.0	1678829901	-13.083611
35159554	I hear from everyone using Kafka in 	I hear from everyone using Kafka in production that it is hell unless you use Confluent.I gave a try to NATS JetStreams but I havn't been convinced by the performances of the Python client, nor the JavaScript one. I don't have extreme data, I just need descent performances.I'm thinking about giving a try to RabbitMQ streams. I have been very happy with RabbitMQ, the MQTT plugin isn't fully working (the big one is that retained messages are not sent to wildcard subscribers), but it should work with AMQP.	speedgoose	13.53664	-4.968024	comment	5.0	18.0	1678831207	-13.140824
38648532	This is a weird take. If anything, N	This is a weird take. If anything, Nomad, Consul and Vault are on the ascent, as the realities of the CNCF ecosystem set in for people with results to deliver.	jen20	13.610279	-4.425224	comment	5.0	34.0	1702594504	-13.121048
38660046	Since LinkedIn is using Kafka quite 	"Since LinkedIn is using Kafka quite extensively, I'm wondering whether Azures poor support of Apache Kafka is at least partially responsible for this.Azure is developing its own inhouse message broker that they call EventHubs. And while it is able to speak the Kafka protocol it has some weird limitations and quirks¹. I'm wondering why they are so hellbent on developing their own inferior version of something when they could just use the real deal and host it as SaaS.¹ No support for KIP-71 (Enable log compaction and deletion to co-exist), limited to 10 topics (Azure lingo: EventHubs) per broker (Azure lingo: EventHubs namespace), mandatory client config parameters that you must not forget to set, even though the documentation just calls it ""recommended"" (https://learn.microsoft.com/en-us/a"	jabiko	13.579382	-5.006616	comment	5.0	18.0	1702682101	10.263086
16247022	Here I am wishing that CloudFormatio	"Here I am wishing that CloudFormation had one killer feature that would have allowed us to use it at work:  the ability to adopt existing resources into a CF stack.  When we were starting on the path of ""hey maybe all our infra shouldn't be pointy clicky"", we chose between CloudFormation, Terraform, and making something in-house.  Out of those three, Terraform was the clear winner for us at the time, but it has not been without issues.Nobody else in this whole thread seems to be complaining about state management.  I think it's insane that Terraform encodes where a given resource is in your filesystem / module hierarchy into the state JSON structure.  (Unless something has changed since I last looked,) if you want to move things around in your .tf source, terraform can only apply that by t"	philsnow	13.694016	-4.3902674	comment	5.0	18.0	1517074142	-12.296166
16488432	This is incredibly user-hostile, and	This is incredibly user-hostile, and if you read this expecting this is an open-source release, consider yourself clickbaited.Want to contribute to the open-source version of Elasticsearch? Want to ensure you're running an open-source database without running a custom EULA past your legal department?Well, make sure that after 6.3 is released, you don't accidentally download the default distribution, or browse the official Github repository, or clone from Github, as all of those will have components subject to an as-yet-unreleased, non-OSI-approved EULA (see the final paragraph in https://www.elastic.co/products/x-pack/open), which may have clauses that trigger liability to Elastic if you accidentally flip a switch or look at the wrong thing. (I am not a lawyer, this is not legal advice, bu	btown	13.52517	-4.5512457	comment	5.0	22.0	1519862227	-9.920514
16710552	And their fucking stupid name.....  	"And their fucking stupid name.....   if they fail, they surely will be remembered as the company with the idiotic name.I can't see serious engineers working on a company named ""Cockroach""."	ardit33	13.7296715	-5.151005	comment	5.0	34.0	1522353670	-4.547262
16755278	People are downvoting you, but there	People are downvoting you, but there's something to be said about it.  What happens if you try to pitch CockroachDB to your non-techie upper management?  They're going to look at you like you're an idiot.  Names aren't important unless they're bad because first impressions do matter.	shepardrtc	13.723512	-5.1731033	comment	5.0	19.0	1522853650	-4.5418415
21101819	Yeah, what I want is JSON with comme	Yeah, what I want is JSON with comments and nice multi-line string support. I don't like how much syntactic magic YAML does (I don't need or want the country code for Norway to be parsed as a boolean False value). I still don't know what the exclamation point does (e.g., !Ref).And clearly YAML is the wrong tool for infra-as-code since CloudFormation has to build a macro system, conditionality, referencing, and a couple different systems for defining and calling functions (templates being one and their implicit functions being another). We also see tools like Troposphere and CDK which are effectively different ways to generate CloudFormation YAML via programming languages (or more precisely programming languages that were designed for humans).And it's not just limitations inherent to CloudF	weberc2	13.547686	-4.5171494	comment	5.0	22.0	1569693527	9.46196
21132019	Agreed. For me, Kafka's reliance on 	Agreed. For me, Kafka's reliance on ZooKeeper is the most annoying one. ZooKeeper is difficult to manage. And both Kafka and ZK, being JVM apps, are memory hungry, and the heap is difficult to tune — they need lots of headroom to avoid accidental GC pauses or OOM events.Kafka also puts some of the complexity burden on the client. It's been a while since I wrote anything for it, and I believe you can tell it to manage the log position for you now. But by default I believe a client needs to talk to both Kafka and ZooKeeper (or store the log position somewhere else).There's definitely room for a simpler solution for those who can't afford the complexity of managing Kafka.I looked at Apache BookKeeper [1] recently. It has a nice design and now supports Etcd for consensus. Unfortunately, like K	atombender	13.573255	-4.983952	comment	5.0	21.0	1569972595	-13.120058
21321103	Terra Nullius	Terra Nullius	tosh	13.7129755	-4.3891554	story	5.0	60.0	1571729161	8.119432
21606797	Yet another Elasticsearch server wid	Yet another Elasticsearch server wide open. This is going to make the flurry of open mongodb servers look trivial.	kitotik	13.600513	-5.037096	comment	5.0	28.0	1574438738	9.929313
21669382	Show HN: Broker-less simulation and 	Show HN: Broker-less simulation and mocking for Kafka	ekoutanov	13.606581	-4.983972	story	5.0	36.0	1575109306	-13.105642
21735918	Nothing in the article explains why 	Nothing in the article explains why it is Kafkaesque.	hcrisp	13.674626	-4.961679	comment	5.0	15.0	1575813763	10.534334
39103279	Pulumi is enticing because it allows	Pulumi is enticing because it allows you to write in your preferred language and abandon HCL, but it is strictly worse in my opinion. IaC should be declarative in my opinion. That allows for greater predictability, reproducibility and maintainability. In general, I think wanting to use Python or Ruby or whatever language you're going to use with Pulumi is not a good basis for choosing the tool.There are many graveyards filled with places that tried to start writing logic into their IaC back in the Chef/Puppet era and made a huge mess that was impossible to upgrade or maintain (recall that Chef is more imperative/procedural, whereas in Puppet you describe the desired end state). The Chef/Pulumi approach can work, but it requires one person who is draconian about style and maintenance. Other	xwowsersx	13.679549	-4.402032	comment	5.0	17.0	1706018066	9.519505
39253089	> I was struggling with that day was	> I was struggling with that day was to define six cloud storage buckets in Terraform...The kind of thing you’d do with a two-line nested loop in any general-purpose languageI understand this is just an example, but FYI the modern solution is to use CDKTF rather than HCL for Terraform.That allows you to choose your favorite general purpose lang: Python, TypeScript, Go, Java, C#.	paulddraper	13.700404	-4.401977	comment	5.0	22.0	1707072459	9.516662
17921420	There are key differences between Mo	There are key differences between MongoDB and Elastic.MongoDB (the company), has been very strategic about defending themselves from Amazon. Likely due to the AGPL licensing on MongoDB (the database), Amazon doesn't offer a hosted MongoDB - you have to buy MongoDB Atlas which runs on multiple cloud providers, including AWS, GCP and Azure. Coincidentally, Atlas subscriptions are the fastest growing part of MongoDB Inc's revenue, which is why investors are bullish on the company.Elastic (Apache licensed) has actually had their lunch eaten by Amazon to a much larger degree. Many businesses are purchasing hosted ES instances directly from Amazon via Amazon Elasticsearch service. The problem is bad enough that Elastic Inc had to write a marketing blog post about it [0].Say what you will about M	hendzen	13.647931	-4.977532	comment	5.0	39.0	1536177752	9.91751
17962840	Securing MongoDB Using Let's Encrypt	Securing MongoDB Using Let's Encrypt Certificate	zabi_rauf	13.740702	-4.982526	story	5.0	16.0	1536696260	-9.715751
18041232	Introduction to HAProxy Stick Tables	Introduction to HAProxy Stick Tables	phil21	13.527963	-4.0888677	story	5.0	75.0	1537550868	8.772211
18231869	> The result, however, is that at th	"> The result, however, is that at this moment, MongoDB is under a non-approved license and therefore IS NOT OPEN SOURCE.Perhaps you meant to say ""is not OSI Certified"", because the OSI don't appear to have a right to restrict use of the phrase ""open source"". See what's on your own website: https://opensource.org/pressreleases/certified-open-source.p...On the other comments in this thread, even though MongoDB have ""submitted"" to having the OSI review their license, OSI still aren't capable of restricting anyone's rights on the use of the phrase ""open source"" including MongoDB's.I can see your organization tries to make sure that there is an approved set of principles that identify libre/free software which is good. The phrase ""open source"" has been used in myriad ways since its early days, "	muks	13.734599	-5.1370378	comment	5.0	56.0	1539714448	-12.951032
18360883	(I'm one of the founders of HashiCor	(I'm one of the founders of HashiCorp)Consul, Nomad, Terraform, and Vault are the only products that have associated enterprise products (in addition to being open source). Different products have different impacts different quarters but all of them are contributing many millions per year individually.Vagrant and Packer do not have enterprise products and we don't try to monetize them much (Vagrant Cloud has some paid plans for box hosting but primarily so that we remain cost neutral). However, we're fully committed to them and both teams have full time engineering and management assigned to them. They're not deprecated in any way.	mitchellh	13.713757	-4.36981	comment	5.0	16.0	1541136360	-12.551609
18562997	> Broker instances start at $0.21/hr	> Broker instances start at $0.21/hr and broker storage is $0.10 per GB-monthKafka requires Zookeeper, do you pay for zookeeper instances too? Anyway, this pricing seems prohibitively costly unless you really need hands-off approach to your infra. Kafka is pretty low-maintenance and stable in my experience.	alienreborn	13.574626	-4.98161	comment	5.0	17.0	1543519108	-13.1308565
18584121	That's why I think MongoDB's new lic	That's why I think MongoDB's new license which prevents AWS etc from hosting as a service without open sourcing makes sense (https://news.ycombinator.com/item?id=18229452). Amazon barely contributes anything back to the community and is known for destroying OSS businesses.	amasad	13.702076	-5.0681973	comment	5.0	54.0	1543779947	9.927635
29948090	So, my previous role was as a PE in 	So, my previous role was as a PE in AWS. I made a high multiple of my current salary, yes.I think the quality of people around me at UW is mostly just different. Domain expertise is much deeper - the image processing experts really know their stuff! While fundamental systems and devops stuff is pretty absent from anyone’s skillsets. I don’t think you can really simply say that the talent quality is better or worse - it’s different.I work at UW because I prefer the content of the work over my past at AWS. It turns out there are lots of people like me, who agree that $120k is plenty, and who made a very cushy pile of cash in the past at FAANG.	spenczar5	13.521168	-4.042839	comment	5.0	30.0	1642266683	-0.1452069
29965330	I hear this about MongoDB (that it's	I hear this about MongoDB (that it's a  plague and you should stay far away) all the time but DynamoDB, which is also NoSQL? One of AWS' finest products; just launching an app on AWS? Use DynamoDB! So on and so forth ad nauseum.Why is DynamoDB the bee's knees but MongoDB is a thing to be despised?	emptysongglass	13.5455475	-5.036255	comment	5.0	19.0	1642416984	9.775383
30015826	That’s what stood out to me too. Alt	That’s what stood out to me too. Although they’d been slowly rolling it out for awhile, their last major rollout was quite close to the outage start:> Several months ago, we enabled a new Consul streaming feature on a subset of our services.  This feature, designed to lower the CPU usage and network bandwidth of the Consul cluster, worked as expected, so over the next few months we incrementally enabled the feature on more of our backend services. On October 27th at 14:00, one day before the outage, we enabled this feature on a backend service that is responsible for traffic routing. As part of this rollout, in order to prepare for the increased traffic we typically see at the end of the year, we also increased the number of nodes supporting traffic routing by 50%Consul was clearly the cul	yashap	13.602297	-4.5202303	comment	5.0	28.0	1642716448	-13.1516285
30144920	Elasticsearch until recently did not	Elasticsearch until recently did not nudge you to set up a username or password by default.  I noticed the last time I installed it on a fresh instance that on completion of the install it gives you a warning about this and tells you what to do to set a password.  That is a small improvement.Most people would not have the service bound to a public interface, but for those who do for whatever reason have a set up where they are accessing it remotely, at least now there is a tip off that it is completely open to the world by default.  This is different from pretty much any other service you might install.  MariaDB for instance by default does not allow remote root login even if you change the config to bind it to 0.0.0.0.A lot of people are just totally unaware of this issue.  When I read ab	pevey	13.54288	-4.7311215	comment	5.0	46.0	1643607357	-9.996151
30346414	Terraria Source Code (2013)	Terraria Source Code (2013)	tentacleuno	13.69142	-4.3930235	story	5.0	38.0	1644933349	9.468228
30366258	I was sort of curious, so I went to 	"I was sort of curious, so I went to see what impact this had on the customer experience at AWS. Searching for 'elasticsearch' in the AWS console services dropdown now yields:'''
Amazon OpenSearch Service (successor to Amazon Elasticsearch Service)Run and Scale OpenSearch and Elasticsearch Clusters (successor to Amazon Elasticsea...
'''This seems like a petty, small win from the Elasticsearch people. I understand AWS has a history of gobbling up OSS and productizing it, and that that's detrimental, but it's hard to see Elastic, Inc as anything but sore that they got their lunch eaten here. Maybe that's justified. But it comes off as incredibly petty.(disclaimer: i used to work at aws, but not anywhere near the referenced offerings)."	WaxProlix	13.530302	-4.621506	comment	5.0	106.0	1645048249	-9.964965
32658174	I'm assuming this is Terragrunt, whi	I'm assuming this is Terragrunt, which itself perpetuates all kinds of horrific practices which are absolutely unnecessary if you apply basic software engineering principles to infrastructure as code/config.	jen20	13.706529	-4.399358	comment	5.0	23.0	1661917870	9.521757
36588999	Terraria's devs have been trying to 	Terraria's devs have been trying to stop developing Terraria for years	blondin	13.707576	-4.384862	story	5.0	64.0	1688488455	9.4480095
36655265	One of the major security issues wit	"One of the major security issues with running terraform in your CI/CD pipeline is that it usually needs admin permissions to your entire cloud environment. To avoid this you need the pipeline to pass parameters to an internal process that actually applies the changes.Digger makes it sound like it might address this:> Digger runs terraform natively in your CI. This is: 
Secure, because cloud access secrets aren't shared with a third-partyFrom the Github+AWS demo:> 4. Add environment variables into your Github Action Secrets (cloud keys are a requirement since digger needs to connect to your account for coordinating locks)
AWS_ACCESS_KEY_ID & AWS_SECRET_ACCESS_KEYIt sure looks like AWS admin credentials are shared with Github, and also available to anything else in the diggerhq/digger action"	thinkmassive	13.678589	-4.368742	comment	5.0	18.0	1688916510	-11.901745
36722063	I have ADD and I'm struggling to wri	"I have ADD and I'm struggling to write a more complex Python app right now. I'm hating myself for not being able to easily skip around the code as it gets more complex with more classes and methods. So this is very apropos for me.Thing is, I can skip around Terraform much more easily (in my normal DevOps role). I'm wondering if Python whitespace isn't ""right"" for me somehow. EDIT: I'm definitely more used to Terraform, but I can read and navigate nodejs far more easily than Python, it's weird. I also don't want to come across as blaming Python for this, certainly it's incredibly effective for a huge number of people!My next step is to try to break out the classes into their own files or something like that.I don't suppose anyone has any tips on managing Python scripts? I doubt this is even"	bloopernova	13.681712	-4.420488	comment	5.0	19.0	1689331515	9.455877
36813833	You can do that through abstraction.	You can do that through abstraction. You “include” your Terraform Azure Provider or Terraform AWS Provider. At the end of the day, your module needs to know what it’s interacting with but not the higher level of abstraction. We have done it at my work to make it cloud agnostic just in case we need to go to another CSP	firesteelrain	13.685803	-4.3800764	comment	5.0	18.0	1689947935	9.4656925
36870278	Kora: The Cloud Native Engine for Ap	Kora: The Cloud Native Engine for Apache Kafka	hintymad	13.565712	-5.006948	story	5.0	32.0	1690322687	-13.111052
37039445	[WarpStream co-founder here]We've do	[WarpStream co-founder here]We've done lots of customer research here and, combined with the experience my co-founder and I have, we can confidently say most Kafka users (especially high-throughput users) would happily make a trade off of increased end-to-end latency in exchange for a massive cost reduction and the operational simplicity provided by WarpStream.	ryanworl	13.557067	-4.9973173	comment	5.0	18.0	1691435783	-13.102351
37082277	I just bought a Ubiquiti Dream Machi	I just bought a Ubiquiti Dream Machine SE along with a U6 Enterprise a few weeks ago and so far it’s my favorite tech purchase ever. The management interface is years if not decades ahead of everything else I’ve used before.My only complaint is that there’s no public API and thus no official Terraform providers.	jolux	13.689549	-4.3729467	comment	5.0	21.0	1691704539	9.511493
37082625	Are you pretending they aren't a com	Are you pretending they aren't a competitor profiting off that work though?Pulumi is free, except you pay for the features that aren't free: https://www.pulumi.com/pricing/. So, Pulumi has grown their directly competing product partially on top of the Terraform ecosystem - and I'd argue they'd be half as successful without reusing Terraform providers - and make money off of that product. It's at least understandable to me that Hashicorp doesn't like this.	quacker	13.705387	-4.384361	comment	5.0	25.0	1691707109	-12.4217
37083934	>like the AGPL?As I explained in an 	>like the AGPL?As I explained in an earlier thread, MongoDB tried using AGPL. AGPL is not a barrier for Amazon, they still will resell your product without contributing. MongoDB ended up using a variant of AGPL that is even stricter (requiring the entire tech stack to be under the same license) but is no longer considered FOSS. Until the attitude changes around what FOSS is, this will keep happening.	unknownian	13.729759	-5.1268563	comment	5.0	25.0	1691716451	-13.018126
37088592	Hashicorp switched Terraform from MP	"Hashicorp switched Terraform from MPL to BSL yesterday. Many other companies did that in the past to prevent others taking their code and charging for running it as a managed service (eg Mongo, Elastic). With Hashi however, the server-side part was never open-source to start with. There was no such thing as ""open-source Terraform Server"". And now it seems that any commercial product that uses the Terraform language under the hood is at risk of violating the terms of the license.
Funny enough, our own product (Digger, an open-source CI runner for Terraform) is not using Terraform (or any other Hashicorp's code) under the hood. So this change probably hits other TACOS (Spacelift, Env0) much harder than us. But with the recent pricing changes and now the license there is no guarantee that Has"	igorzij	13.715309	-4.382305	comment	5.0	24.0	1691761301	-12.42328
37088620	We are sort of competitors... kind o	"We are sort of competitors... kind of... but nevertheless feel free to switch to our MPL fork of Terraform :)
https://github.com/diggerhq/open-terraform"	igorzij	13.692182	-4.383149	comment	5.0	32.0	1691761531	9.470205
37135180	The truth is that a fork hurts every	The truth is that a fork hurts everyone.Imagine a future CTO trying to pick the IaC tools for their company. They see Terraform as an option, but then learn there are multiple forks, licensing questions, and a big battle happening in the community. What do they do? They are now way more likely to pick a different tool that is genuinely open source. The same is true of every dev considering where to build their career, every hobbyist, every open source enthusiast, every vendor, etc. In the end, no matter which fork wins, everyone will be worse off: the community will be smaller and more splintered.So we opted to ask HashiCorp do the right thing first. If they choose to do the right thing, we can avoid a fork, and avoid splintering the community. We still think that's the best option. But if	brikis98	13.722679	-4.371772	comment	5.0	49.0	1692113331	-12.401113
37175486	Want an advice from a pro? Stick wit	Want an advice from a pro? Stick with Cloudformation (CFN). Split stuff smartly between stacks. Use Outputs export/import. This is default IaaC way in AWS. I would not touch anything else, rather insist on full rewrite. Reuse templates using Parameters. Stack can be rolled-back, checked for drift, checked for changes before changes and so on.CFN has the least LOC between them all and is easy to create in your text editor.Just don’t use nested stacks :) oh, and multi-cloud is an urban legend, myth.	nuker	13.559545	-4.3454285	comment	5.0	18.0	1692366025	9.504538
37263040	I'm thrilled to see that OpenTF appe	I'm thrilled to see that OpenTF appears to be aiming to win on positives, not negatives. They could be focusing on the licence and their perception of Hashicorp, but instead there's a lot of emphasis on the positive: getting up and running quickly, upcoming releases, public roadmap, and pledges of engineering work.In the long run few will care about this licencing change (as much as they should!) – business users will accept it, individuals won't take any notice, and competitors would get mired in issues as expected. Basically a win for Hashicorp.But winning on positive changes beats licencing issues. Business users will go where the centre of gravity in the ecosystem is, individuals will too, and will prefer free (in both senses) solutions, and competitors will push this hard to all their	danpalmer	13.7125845	-4.3703218	comment	5.0	84.0	1692978388	-12.36469
37263229	Regarding the Language Server, terra	Regarding the Language Server, terraform-ls: does anyone know if that will also be forked?Gah, this is frustrating! I am learning Python but TF and tf-ls are written in Go. I need to figure out how best to contribute.	bloopernova	13.703817	-4.385786	comment	5.0	26.0	1692979274	9.527106
37264238	They really didn't. They changed it 	They really didn't. They changed it to prevent companies from building commercial products around terraform, which is what you've suggested as a cloud protection license.Companies that use terraform to manage their infrastructure are not practically impacted in any way, except by this OpenTF effort (which I don't personally oppose either!) which will create a schism and leave us with competing tools that are not quite interoperable over time (thinking about ZFS/OpenZFS, MySQL/MariaDB, etc.).https://www.hashicorp.com/license-faq#usage-limitationsIt isn't the AGPL, but I am just sort of stunned at the uproar around this. Is Hashicorp supposed to just shrug and clap while a competitor takes (primarily) their work and competes with them using it? That's what the MPL allows, and they don't want	saxonww	13.721115	-4.379329	comment	5.0	53.0	1692983274	-12.416769
37265373	It's support from companies who make	It's support from companies who make money from Terraform being free, and at least one looked like a direct Terraform Cloud competitor that probably hurt Hashicorp's chances of making Terraform profitable.It makes sense they'd do this, but we need to stop loving people who appear to give us things. They're just making reasonable business decisions.	robertlagrant	13.7282095	-4.381571	comment	5.0	46.0	1692988014	-12.416276
37265655	I just went through about 20-30 SRE 	I just went through about 20-30 SRE interviews while hiring an SRE II for my team. Every single one of them that had state management at all used terraform cloud. I found that really interesting because I've never heard positives about it vs the others (spacelift, env0, terrateam, brainboard etc). Not a single one of them had anything other than tfc. Not even atlantis.	swozey	13.678326	-4.3798027	comment	5.0	17.0	1692989236	9.521801
37335290	I had Hashicorp in my mind as  a coo	I had Hashicorp in my mind as  a cool and respectful company. These recent events have made to reconsider and throw them into the same bag as Oracle. I find this pretty sad.	Octabrain	13.736147	-4.360977	comment	5.0	30.0	1693479651	-12.554945
37335399	Getting a lot of docker hub vibes fr	"Getting a lot of docker hub vibes from this one. HashiCorp is course within their rights. Can't be cheap to run the registry given the obscene size of some terraform providers.$ ls -lah terraform/providers/registry.terraform.io/hashicorp/aws/5.14.0/darwin_amd64/
total 368MAnyone have an idea of the reasons terraform needs a 370 MiB binary just to call REST APIs?"	jrudolph	13.711279	-4.3845463	comment	5.0	22.0	1693480351	-12.366984
37478099	I did benchmark it against nginx and	I did benchmark it against nginx and found Caddy to be 5-7x times slower, but like all benchmarks go...results are subject to ones requirements (or mistakes).What got me away from using it:- the directives feel intuitive but as soon as I needed a complex config it all became a chain of very implicit strings- the caddy author(s) decided few years ago to add custom http header with their sponsors[0]. That header could not be removed, it's no longer present in current Caddy but the bad taste still remains.[0] https://news.ycombinator.com/item?id=15238315	melx	13.713182	-3.930265	comment	5.0	33.0	1694506246	8.809831
24878992	Is this  Amazon's response for Kafka	Is this  Amazon's response for Kafka?	dailypeeker	13.610178	-4.9865465	comment	5.0	18.0	1603545177	-13.110571
25181442	> terraform-lsp is supposed to provi	> terraform-lsp is supposed to provide autocomplete, but it mostly doesn’t, in my experience.I find Terraform for Jetbrains IDEs to work hundred times better than the VSCode one. I really can recommend it, does magic to autocompletion, peek definition, snippets insertion and linting TF/HCL files.Author of this blogpost have not mentioned Terragrunt [0], while I think it is worth mentioning. It is nice tool, especially if you work on bigger projects having multiple modules and per-environment variables.Also, a tip from a person, who works in team using terraform - use brew/apt repositories to keep the binaries up-to-date or at least on the same version as your team mates. I remember at least few situations, when patch update of a terraform binary was crucial to make some issues disappear.[0	pqb	13.704358	-4.391979	comment	5.0	22.0	1606081934	9.500901
25361610	I feel there's a few cases cited her	"I feel there's a few cases cited here to make a case that an entired business model is dying, but it doesn't look to me that this is an overall trend. You can't extrapolate from ""5 projects didn't fare well with this, so it's not working"".But there's more. I followed the MongoDB case a bit and it's not exactly how many make it sound like. MongoDB was doing fine as a company. It wasn't like they were unable to pay their programmers because AWS offered a hosted MongoDB.In the months before that controversial license change they got plenty of funding from investors.It looked all more like investors created expectations of future revenue and they became cold feet if they could meet those expectations.It remains to be seen how this will work out in the long run. I'd personally consider everythi"	hannob	13.698648	-5.135046	comment	5.0	45.0	1607537425	9.93478
25363715	My interpretation is the opposite. M	My interpretation is the opposite. MongoDB is clearly successful - they are a public company worth 16 billion dollars. And they proving the success of the open core business model.For 99% of use cases, MongoDB is open source. You can see the code, you can make modifications, you can use it for free in your business, you can share your changes with others, you can integrate it into your products and services. Yeah, you can't use it if you're working at AWS, but for most people it's just fine.For founders creating new open source companies, it's a great strategy to go the route of MongoDB. Start off open source and sell services. If you run into big enough problems with direct competitors using your own software, you can modify the license to exclude them.This is far better than the status q	lacker	13.719204	-5.105316	comment	5.0	55.0	1607543669	9.945911
25437311	Yup, today I was looking on some exa	"Yup, today I was looking on some examples of AWS CloudFormation templates and I saw version 2010-09-09. Instantly, I thought the webpage I was reading must be old; so I opened the docs. In the docs, I see ""The latest template format version is 2010-09-09 and is currently the only valid value.""Last version was 10 years ago and this service is one of the core AWS services, so it's definitively not abandoned."	kords	13.55919	-4.300026	comment	5.0	15.0	1608077817	9.524455
39373927	HAProxy is a wonderful load balancer	HAProxy is a wonderful load balancer that doesn't serve static files thus forcing many of us to learn Nginx to fill the static-file-serving scenarios.Caddy seems like a wonderful alternative that does load balancing and static file serving but has wild config file formats for people coming from Apache/Nginx-land.	bklyn11201	13.553048	-4.117881	comment	6.0	37.0	1707938299	8.779649
39514702	If for some reason you’re dealing wi	If for some reason you’re dealing with thousands of accounts that are architecturally indistinguishable, bucketing them by ID prefix isn’t a particularly wild thing to want to do.	twoodfin	13.891114	-5.140262	comment	6.0	29.0	1708970777	-13.648133
39634187	It's not unusual for authors to expr	It's not unusual for authors to express a desire for their unpublished works to be destroyed. Kafka wanted all his unpublished works to be destroyed - consider these are most of his known works now, we're quite lucky his executor, Max Brod, defied his wishes.	joe_the_user	13.656769	-4.936016	comment	6.0	65.0	1709843183	10.512361
37081687	> As a result, we believe commercial	"> As a result, we believe commercial open source models need to evolve for the ecosystem to continue providing open, freely available software.To imply that a non-open-source license like the BUSL is part of such an evolution of ""open source"" models (commercial or otherwise) betrays either severe confusion or a deliberate attempt to mislead.Like, has anyone of any significance used a Hashicorp product to meaningfully compete with Hashicorp?"	yellowapple	13.728983	-4.361122	comment	6.0	67.0	1691701076	13.291636
37135452	Marcin here, co-founder of Spacelift	Marcin here, co-founder of Spacelift.Even though I strongly believe the OpenTF fork could open up incredible possibilities for the community (I could go on and on about it), it is an equivalent of a civil war. It doesn't serve the community and our only interest is in the continued strength of the community that we continue to build for.Based on my immense respect for what's been built under Hashi's umbrella I'd rather see a change of mind, and an opportunity to honor our pledge of resources (5 FTEs for 5 years) to the common rather than partisan cause.	fishnchips	13.680054	-4.364443	comment	6.0	63.0	1692114714	-12.312684
37138325	As a Free Software advocate and supp	As a Free Software advocate and supporter, I'm thinking about the answer to this question:- MPL is a weak-copyleft license, which allows companies to grab and run Terraform codebase, provide it as-is (as Terraform), or as white-labeled Terraform compatible feature/layer. This is alright (because license allows this).- These people also contribute their own fixes upstream, which is great, and maintain their own patches if Hashicorp decides to reject them (which is fine, too, this is how ecosystem works).But, HashiCorp says that, the thing we develop (i.e. Terraform) is used by others and generate revenue for them, this is great, but we can't generate enough revenue from it to keep the company afloat and continue providing TerraForm development, and sell it as a product at the same time.What	bayindirh	13.702463	-4.366229	comment	6.0	25.0	1692128234	-12.407095
23428237	"> Young dev from large corp: ""Sigh, "	"> Young dev from large corp: ""Sigh, ok, just saying in 2 years from now we wont be in a good spot"".Except in my experience it’s not two years, it’s two months. And I can set up two micro instances with terraform in less than an hour.So soon you’re burning your three months of runway with development at 20-50% efficiency, and have no ability to pivot, if needed, because your infrastructure is rigid and hardcoded.Neither scenario is “correct”, there is only “judgement”, and it can be devastatingly incorrect either way.A lot of people with strong or extreme opinions (too little or too much tech debt) are inadvertently being fooled by “personal survivor bias“."	an_d_rew	13.681822	-4.372589	comment	6.0	36.0	1591363696	9.3985615
23957760	Don't expose MySQL databases to the 	Don't expose MySQL databases to the internet.  Just don't.  Stick an API layer in at the very least with key based auth, and only the bare minimum capabilities allowed for the user.That said, if you'd read the article you'd see that so far only unsecured MongoDB, Elasticsearch and Redis installations are being attacked so far.	Twirrim	13.541308	-5.166101	comment	6.0	25.0	1595777460	9.942416
23976418	Now I have to distinguish between th	Now I have to distinguish between three things when I see 'Otto':This project.Hashicorp's dead deployment tool (https://www.ottoproject.io)Otto Matic by Pangea (http://pangeasoft.net/otto/)	geerlingguy	13.717503	-4.3689914	comment	6.0	21.0	1595948009	-12.905992
24157875	Someone made the comment below, whic	Someone made the comment below, which can't be responded to, but I did have a question about it. The comment:> Immutable infrastructure killed Ansible.I haven't used Ansible in several years, but when I was using it I was using it to build immutable AMIs. So obviously this comment is off base. However, I have been using terraform for years now.Can anyone describe why one might use Ansible over Terraform? I understand the differences, but I don't think I know people using Ansible as their primary deployment/provisioning solution recently.	ganstyles	13.690673	-4.410274	comment	6.0	24.0	1597412909	9.511552
24274184	Topicctl – an easier way to manage K	Topicctl – an easier way to manage Kafka topics	mrbbk	13.601036	-4.999008	story	6.0	84.0	1598378925	-13.112726
24320904	That seems like a lot of resources t	That seems like a lot of resources to delete...  It’s “possible” but I’m not sure they I find it plausible.  Is there some magic terraform or cloud formation that just destroys everything?  And a Cisco engineer with devops like experience wouldn’t at least sniff around before running it?  Doesn’t seem realistic.Cisco should wear this too though, this is shockingly negligent.  The only reason I can think of suggests a lot more problems and likely noncompliance with regulations and standards I’m sure they claim to comply with.	TheCondor	13.688221	-4.3625607	comment	6.0	21.0	1598754885	9.462675
19111994	This is a great analysis, but it's m	"This is a great analysis, but it's missing a fundamental point: why do we have a problem with these approximations of a programming language or just using a programming language to template stuff?Because your build then becomes an actual program (i.e. Turing complete) and you have to refactor and maintain it! This is the common problem of using a ""programming language as configuration"" (e.g. gulp?)Dhall solves exactly this problem: https://dhall-lang.orgIt has the same premises of Pulumi, but without the Turing completeness (I don't know if/how Pulumi avoids that, but if it does it should be part of the pitch), so you cannot shoot yourself in the foot by building an abstraction castle in your build system/infrastructure config.We use it at work to generate all the Infra-as-Code configurati"	ff_	13.6316595	-4.4355993	comment	6.0	30.0	1549606982	9.478782
19934215	Can someone provide actual high-leve	Can someone provide actual high-level use cases for using Kafka? Prefereably use-cases not handled by RabbitMQ.I've seen a few talks about Kafka but they focused on the internals. My guess is that Kafka is for large systems for which managing a multi-node RabbitMQ cluster is too much trouble.	twa927	13.546006	-4.9960666	comment	6.0	30.0	1558046732	-13.086003
15846539	Apache Kafka and GDPR compliance	Apache Kafka and GDPR compliance	Antwnis	13.585009	-4.9911656	story	6.0	84.0	1512414672	-13.089834
18055149	I've been experimenting with a lot o	"I've been experimenting with a lot of geo-based projects over the past couple of years, and something I've been wondering quite a bit lately:Why is the projection ID(SRID/EPSG) situation so horrendously bad?As far as I can tell, the only way to take a Shapefile and figure out the proper SRID number, is to take the .proj4 file and run it through an API like http://www.prj2epsg.org/search (which spent some number of weeks down earlier this year, and I haven't tried again to see if the API is back up).It's funny, because you can't actually take in map data 
 in PostGIS without the SRID properly set, and yet there's no reliable way to get the number, so working with multiple projection datasets is just... not possible unless you manually do the conversions?Honestly, if I could get the data tha"	quaunaut	13.686584	-5.1278253	comment	6.0	27.0	1537765376	-13.565021
18156891	I've read The Trial and couldn't hel	I've read The Trial and couldn't help but think that Kafka is overrated.	aportnoy	13.676705	-4.9457374	comment	6.0	23.0	1538855170	10.533586
18229579	At the outset, it sounds simple that	At the outset, it sounds simple that MongoDB inc thinks why should some 3rd party cloud provider (AWS, GCP, DO and the like) be allowed to run MongoDB as a service and make money while MongoDB contributes the biggest part of the open source project that is MongoDB.But, it feels like yet another fallacy. What really is an open source project then?Say some developer X contributes to a project like MongoDB his/her open source code so that they can one day run MongoDB as a service and make money. At that time, he/she believe that status is true and submits their code. But, later, after the project is mature, the major contributor easily changes license at will, and the open source contributors walk away with nothing?I'm not saying that MongoDB Inc, does not have the majority stake here. Just w	reacharavindh	13.727213	-5.110019	comment	6.0	44.0	1539699669	9.941905
18285884	I hadn't heard of Atlantis before, t	"I hadn't heard of Atlantis before, thank you. Very interesting.Do you happen to know of a self-service tool (CLI and/or Web UI) that allows us to do the following:
Run these Ansible playbooks, then apply these Terraform modules, then run these Ansible... etc.We often have to build different environments for all kinds of use-cases (usually for testing, debugging or demonstration purposes). Two examples: We need a three node Kafka cluster on the Hetzner Cloud (Terraform + Ansible), we need a five node Elasticsearch cluster on AWS etc.
For that we'd like to specify which Terraform modules to run with which variables, we then read the Terraform state file to generate an Ansible inventory and run a set of Ansible plays/roles."	lars_francke	13.700562	-4.4037495	comment	6.0	20.0	1540318324	9.554975
18562840	Twitter’s Kafka adoption story	Twitter’s Kafka adoption story	sciurus	13.674981	-4.9558716	story	6.0	137.0	1543518155	10.556498
18771661	The failure on overflow is weird.Sin	The failure on overflow is weird.Since it starts at a random point and can't overflow, even if you generate a small number of IDs per millisecond you have a constant 1/2^79 chance of failing.  The chance is small but reachable for a large network. (bitcoin does 2^88 hashes a day)It could have just wrapped with no problem, because there's no possible node that could generate 2^80 IDs by itself.  And if you have multiple nodes it doesn't help there either.	Dylan16807	13.853196	-5.1563606	comment	6.0	30.0	1545937608	-13.652402
18870128	Serious question: is there any real 	Serious question: is there any real reason to use Mongo over Elasticsearch?	whalesalad	13.574401	-5.0124273	comment	6.0	27.0	1547076747	9.92474
18871550	mongodb announced the Server Side Pu	mongodb announced the Server Side Public License change less than 12 weeks ago. When you account for end of year and holidays, building a new product line and rolling it out in such a short period of time seems unlikely. I would guess this has been in the works for a while (although admittedly I could be overestimating engineering effort and underestimating amazon engineering talent).	bradrydzewski	13.73499	-5.152041	comment	6.0	18.0	1547094922	-13.043003
18902797	Two comments:Firstly, the discussion	"Two comments:Firstly, the discussion at the front about the music industry is quite insightful, but I'd go further - they didn't want to sell convenience at first. Used to the physical embodiment of recordings rather than the de-materialized reality of digital music, they spent years working on mandated inconvenience through DRM and other legal actions. Always remember that if the music industry had won unopposed you'd have to pay a license fee to set a MP3 as your ringtone, as well as having to license every copy on every device separately.Secondly, about mongodb: I'm reminded of https://www.gwern.net/Complement ""Commoditize Your Complement"", but in reverse.Open source software is by definition commoditized. Everyone can have a copy at no cost. So what is an ""open source VC funded"" compan"	pjc50	13.740028	-5.1341944	comment	6.0	59.0	1547472900	9.934511
18903076	Why can't MongoDB can't compete with	Why can't MongoDB can't compete with AWS? Aside from cloud vendor lock-in, and economies of scale that AWS has. Curious if anyone here has experience with hosting using Mongo's enterprise offering. The article makes the point that Amazon is targeting a lower version of the API, can't the enterprise version compete on features?	nwhatt	13.692107	-5.0580206	comment	6.0	24.0	1547475564	3.495746
30436071	nginx config increasingly feels like	"nginx config increasingly feels like a bunch of foot guns waiting to go off for me.For smaller projects, I've really enjoyed Caddy's ""best practice by default"" approach to webserver/loadbalancer config where you can generally only choose to remove best practices, not try to build them up from scratch. Has SSL and LetsEncrypt enabled by default, etc. This avoids a lot of the pitfalls of incorrect webserver config altogether, keeps the configuration file really small and easy to read. I wish this style of config was more common.> https://caddyserver.com"	giobox	13.665527	-3.9714394	comment	6.0	25.0	1645577177	8.759121
30570734	And my bet is it's the one most are 	"And my bet is it's the one most are going to be using from now on. I used to think this was a fairly black and white issue, but now two things have coloured it for me.Firstly, dick moves like this: https://github.com/elastic/elasticsearch-py/pull/1623Secondly, I don't buy the argument from Elastic any more. Yes, the ethical thing to do when you're making money from someone's work is at least contribute back. At the same time though, they're making money from packaging it up and selling it _as a service_. That ""as a service"" part is where they're making the bucks.A bonus thirdly; OpenSearch really is Open Source, and ElasticSearch no longer is."	ghusto	13.519813	-4.6198573	comment	6.0	23.0	1646506972	-9.905438
30682193	This same article was posted previou	This same article was posted previously, so I will post the same response I posted on the other thread:Elasticsearch until recently did not nudge you to set up a username or password by default. I noticed the last time I installed it on a fresh instance that on completion of the install it gives you a warning about this and tells you what to do to set a password. That is a small improvement.Most people would not have the service bound to a public interface, but for those who do for whatever reason have a set up where they are accessing it remotely, at least now there is a tip off that it is completely open to the world by default. This is different from pretty much any other service you might install. MariaDB for instance by default does not allow remote root login even if you change the c	pevey	13.549717	-4.7288847	comment	6.0	29.0	1647325326	-10.031909
16446034	Personally I'd much rather see a GUI	Personally I'd much rather see a GUI that can help string together snippets of Terraform/CFN and Ansible/Chef/Puppet/Salt/whathaveyou. A visual IDE for infrastructure  automation, if you will.	maxaf	13.692242	-4.4073024	comment	6.0	43.0	1519390987	-13.269482
17130769	Super interesting, I admit I haven't	Super interesting, I admit I haven't spent much time understanding Kafka---it seems like it's almost a hybrid between a message queue and a database?	georgewfraser	13.540706	-5.0007267	comment	6.0	23.0	1527037310	-13.082319
17507556	Who Owns Kafka? (2011)	Who Owns Kafka? (2011)	djoldman	13.658176	-4.9676795	story	6.0	37.0	1531322111	10.52047
21048822	Building a Relational Database Using	Building a Relational Database Using Kafka	rayokota	13.552841	-5.0407066	story	6.0	121.0	1569246104	-13.090195
21331131	It’s Okay to Store Data in Apache Ka	It’s Okay to Store Data in Apache Kafka (2017)	ooooak	13.56166	-5.010635	story	6.0	84.0	1571806031	-13.092279
12729515	Streaming Messages from Kafka into R	Streaming Messages from Kafka into Redshift in Near Real-Time	shazeline	13.537488	-4.9963264	story	6.0	104.0	1476736768	-13.119895
27629553	Starting with Kafka	Starting with Kafka	carlosap	13.635233	-4.97749	story	6.0	105.0	1624621759	10.5511875
35176280	They seem to have a lot of issues wi	They seem to have a lot of issues with Consul, is it the design of Consul or the way they use it that is the problem?	Thaxll	13.625962	-4.524093	comment	6.0	32.0	1678924093	-13.141162
28060071	End-to-End Encryption through Kafka	End-to-End Encryption through Kafka	mattgreg	13.636232	-4.96554	story	6.0	65.0	1628079290	-13.091838
28428267	Props to them for being honest, but 	Props to them for being honest, but it's still not a good look for Hashicorp. Their stewardship of Terraform leaves a lot to be desired. For years now I've watched Terraform PRs just wither on the vine. You get the impression that nobody is working on the AWS provider at all. Every PR to the AWS provider that I've ever cared about has taken years to be reviewed and merged despite lots of thumbs-ups and comments from users begging for it to be merged. This has been ongoing for years. There is clearly a priority problem here.	electroly	13.720656	-4.3829093	comment	6.0	22.0	1630879726	-12.484197
28556148	I see a lot of criticisms for not wa	"I see a lot of criticisms for not wanting to use SQL to do writes and I think that is misguided. The current state of your infrastructure is absolutely state and SQL is a great language for working with state. While Terraform and all these other ""declarative"" infrastructure tools are better than what came before them, you're ultimately playing Relation Stitcher by needing to connect the various pieces together. There is nothing declarative about Terraform and others. Infrasturcture is absolutely stateful and relational so why not use SQL and relations to manage it?There are mentions of other tools that address the read side, and that's useful for obvious reasons, but you've punted on the hard problem which is the writes. The key to getting writes right will be constraints and triggers. Con"	rubiquity	13.699162	-4.398756	comment	6.0	44.0	1631820360	9.511887
28584359	As the sibling commenter notes, Terr	As the sibling commenter notes, Terraform has a refresh flag, but I wonder if Kubernetes’ model is better here. Rather than a one-off process that tries to update everything, Kubernetes has many small controllers which are essentially processes on the cluster that just run a control loop. Each controller corresponds to one resource type, so it will just loop over incoming events that pertain to the resource type in question and attempt to reconcile the state of the target resource instance with the desired state. If it fails initially, it will retry with back off. If something doesn’t stabilize after several minutes, an alert can notify a human.The key differences between the controller approach and the IaC approach are, I think, lots of little processes continuously reconciling state for 	throwaway894345	13.681301	-4.4130964	comment	6.0	21.0	1632059957	-13.373986
22702602	Secor: A service persisting Kafka lo	Secor: A service persisting Kafka logs to S3, GCS and Azure Blob Storage	mooreds	13.5279	-4.9798074	story	6.0	49.0	1585315316	6.8161907
22869433	[Disclaimer: also member of the Pulu	"[Disclaimer: also member of the Pulumi team.]We've worked with a lot of end users to migrate from Terraform, and we honestly do see a lot of copy-and-paste. I agree that it's not as rampant as with YAML/JSON, however, in practice we find a lot of folks struggle to share and reuse their Terraform configs for a variety of reasons.Even though HCL2 introduced some basic ""programming"" constructs, it's a far cry from the expressiveness of a language like Python. We frequently see not only better reuse but significant reduction in lines of code when migrating. Being able to create a function or class to capture a frequent pattern, easily loop over some data structure (e.g., for every AZ in this region, create a subnet), or even conditionals for specialization (e.g., maybe your production environm"	joeduffy	13.674504	-4.4255037	comment	6.0	32.0	1586888091	9.496238
23208336	Finally! Travis Jeffery did this yea	Finally! Travis Jeffery did this years ago in Jocko and also solved my other beef with Kafka at the same time by building it in Golang.https://github.com/travisjeffery/jockoI’ve always found things built on JVM are are PITA to deploy (especially when using SSL) so the single Golang binary is a welcome advancement.It’s all the good things about Kafka (concept, API, and wire protocol) without all the crap (zookeeper dep, JVM foundation)	tbrock	13.575911	-4.9978247	comment	6.0	155.0	1589675224	-13.138404
23209072	Recently I watched a 50-engineer sta	"Recently I watched a 50-engineer startup allocate more than 50% of their engineering time for about two years to trying to cope with the consequences of using Kafka as their database, and eventually try to migrate off of it.  The whole time I was wondering ""but how could anyone have started down this path?!?""Apparently the primary reason they went out of business was sales-related, not purely technical, but if they hadn't used Kafka, they could have had 2x the feature velocity, or better yet 2x the runway, which might have let them survive and eventually thrive.Imagine, thinking you want a message bus as your primary database."	jholman	13.550385	-5.014917	comment	6.0	45.0	1589683588	-13.0909
26812468	Our teams have something like 100,00	Our teams have something like 100,000 LOC in Terraform 0.12, and it's not all in one big monorepo. At that scale there is no such thing as a relatively minor version upgrade.We want to upgrade to get away from some persistent 0.12 bugs, but we literally don't have the time. We have to change all of the code, and then test every single project that uses that code in non-prod, and pray that the testing finds most of the problems that will appear in production. And it's all owned by different groups and used in different projects, so that makes things longer/more complex. We also have to deal with provider version changes, upgrading CI pipelines and environments to be able to switch between Terraform binaries, and conventions to switch between code branches.I am already looking around for som	0xbadcafebee	13.693024	-4.395987	comment	6.0	26.0	1618431411	9.528725
27434659	You people hating on Terraform are s	You people hating on Terraform are spoiled.  My company insists on using CloudFormation, which I hate with a passion.	nautilus12	13.683023	-4.373966	comment	6.0	24.0	1623157790	9.483395
27434935	100%. Terraform is half-way between 	100%. Terraform is half-way between a tool for generating the configuration and applying it. I think Terraform's application engine is actually quite good, but I would like to use a much better tool to generate the config. (And be able to diff that config)You can feed JSON to Terraform however this falls over if you need dependencies for output values. This usually isn't an issue because most Cloud provider resources have predictable IDs but as soon as you have one that doesn't you are up for a lot of pain and suffering.	kevincox	13.662811	-4.403961	comment	6.0	38.0	1623159156	9.52881
37581906	The dismantling of HashiCorp because	The dismantling of HashiCorp because they tried to save themselves from Amazon swallowing them is sad.Open Source businesses have no future in a world where big tech can gulp your product for free.The OpenTofu folks will probably even raise capital to support commercialization of their thing at some point.	echelon	13.734591	-4.363419	comment	6.0	45.0	1695199316	13.266432
37809677	Having used Ansible to easily mange 	Having used Ansible to easily mange AWS, I have been horrified by how my new org using Terraform for AWS, precisely because TF maintains state. It is both hard to develop in a team and a security nightmare.They diligently recorded all secrets in AWS Secrets Manager. They used IAM roles and policies to control who can see which environment’s secrets. Great!But then I discovered all the secrets in PLAIN TEXT dumped into the state file?! And this is known behavior that Hashicorp defends as reasonable. They suggest you just encrypt the state file. So the next time there’s a big oil spill, let’s just throw a big blanket over it and call it a day.Terraform’s solution swiftly obliterates all the audit, key rotation, separation of duties built into secrets manager. Indeed, what is the point of usi	Hnrobert42	13.750237	-4.3232965	comment	6.0	29.0	1696765855	-12.251489
37810391	It's important to note that they are	It's important to note that they are holding off on deprecating dependents to see if they can swap in replacements. For example, programs that depend on Terraform will likely be able to use OpenTofu as a replacement.Unfortunately it doesn't seem like there are going to be open source alternatives to Vault, Consul, or Nomad (that last one is hilarious to me: nomad was a good product until hashicorp stopped investing in it, now that it's closed source it basically has a snowballs chance in hell of being adopted).	tedivm	13.69827	-4.2572637	comment	6.0	74.0	1696772708	-12.362982
37979462	I heard several times that Kafka was	I heard several times that Kafka was put in front of elasticsearch clusters for handling traffic burst. You can also use Redpanda, Pulsar, NATS and other distributed queues.One thing that is also very interesting with Kafka is that you can achieve exactly-once semantic without too much efforts: by keeping track of the positions of partitions in your own database and carefully acknowledging them when you are sure data is safely stored in your db. That's what we did with our engine Quickwit, so far it's the most efficient way to index data in it.One obvious drawback with Kafka is that it's one more piece to maintain... and it's not a small one.	francoismassot	13.546731	-5.0045958	comment	6.0	33.0	1698011852	-13.091892
38017999	I'm a technical writing manager on G	I'm a technical writing manager on GCP, and we are actively working on improving Terraform documentation. Thank you for bringing up two significant problems with using TF on GCP.If you are willing (and of course have the time), we would love to hear other issues you - or anyone else who reads this thread - are having with TF documentation on GCP as we try and make things better.	div_zero	13.691096	-4.383591	comment	6.0	20.0	1698266102	9.518906
14714286	Isn't the literariness of biography 	Isn't the literariness of biography precisely how it approaches the questions asked in this article, and in the biography on Kafka? It comes up again and again in most renowned biographies. On the surface they are about an individual, in their depths, they are about how one tells the story of a life and the many conceptual choices one takes while writing. The best make that superficial/deep relationship seamless. I guess these ones on Kafka don't.Aside, can anyone recommend the best work to start with for Kafka?	mabub24	13.681762	-4.950559	comment	6.0	25.0	1499378341	10.537138
14881535	Exactly-once or not, atomic broadcas	Exactly-once or not, atomic broadcast is still impossible in Kafka	68c12c16	13.528365	-4.978015	story	6.0	79.0	1501340598	-13.079906
15602253	What are the alternatives people are	What are the alternatives people are using instead of kafka in these situations. Low volume but high reliability.	kafkaisthatyou	13.57571	-4.992646	comment	6.0	19.0	1509550667	10.505863
20864180	We live in the world where we can se	"We live in the world where we can see a bait and switch for what it is.MongoDB was advertised as being Open Source and Free Software, distributed under an OSI-compliant and FSF-compliant license. Now they are trying to eat their cake and have it too.> ""then are lambasted when they try to prevent a competitor from copying it wholesale?""Because that's not what open source is about. Open source is about contributing to the commons, such that your competitors can make a profit from your work.If your competitors aren't able to do that, then the software is not open source. Period. And in this case, we should point out that MongoDB Inc by owning the copyright doesn't have to play by the same rules, they aren't beholden to the same rules as everyone else.> ""If MongoDB Inc can't compete in the ent"	bad_user	13.732548	-5.125522	comment	6.0	56.0	1567493159	9.953149
13857490	I've been eyeing Kafka for a long ti	I've been eyeing Kafka for a long time now - tried to set it up on a smaller DO box and had memory issues. Is it worth using this for smaller operations (<100k requests per day)? The stream processing seems extremely useful for my use case. Is there something else that may be a better fit?	lekker	13.557255	-4.9996133	comment	6.0	33.0	1489410871	-13.103651
14112583	My loved ones are out of town, so yo	"My loved ones are out of town, so you're on! I'll do it for the fun of it and the experience. And because I still haven't built anything on top of kafka, but there's no time like now to fix that.The challenge is: Meet the main requirements of r/place: 1000x1000 image, a web based editor, 333+ edits / second, with an architecture that can scale to 100k simultaneous users (although that part will be hard to actually test). I won't implement mobile support or notifications, and I won't implement any sort of user access control (thats out of scope). The challenge is to do it & get it hosted online before I go to bed on Saturday (so, I'm allowing myself some slop there). But its already 1:30pm on Friday, so I think that easily qualifies as ""less than a weekend"".As a stretch I'm going to write a"	josephg	13.5645485	-4.995276	comment	6.0	29.0	1492141331	-13.101682
14164969	I feel like the niche Caddy's trying	I feel like the niche Caddy's trying to fill is for people who don't want to bother with that, or don't want to learn. If you already know how to set up nginx and LE (like you and I do), its only appeal is relatively minor: potentially saving a quarter or half hour.	knrz	13.692501	-3.9689364	comment	6.0	28.0	1492778347	8.822205
14541614	Terraform has interested me for a wh	Terraform has interested me for a while, and I've been meaning to give it a try, but haven't had a chance just yet.From what I have seen so far though, there isn't really that much difference/benefit over CloudFormation. We currently have 95% of our resources in AWS with about 4% in Azure, and 1% in Google Cloud. It's great that Terraform is 'mulit-cloud' but it still seems like you have to write .tf's catered to each cloud, you can't just lift and shift to another cloud by copying and pasting a file?People say the 'plan' feature is one of the advantages over CFN, but as far as I can tell, CFN now offers the same feature... it tells you what's going to change when you upload  a new stack.I sound like a CFN advocate now, but I genuinely don't have that much experience with it, and really do	7ewis	13.624851	-4.358332	comment	6.0	27.0	1497306365	9.490376
14583010	Something else people should know: A	Something else people should know: AWS ES is on the Internet. You can't deploy it to a vpc yet, and you can only lock it down using IAM, which may or may not be good enough for your use-case.For those that prefer the ease provided by AWS ES Service, consider Elastic Cloud, which affords most of the same capabilities but is run by Elastic themselves (it was previously known as Found, which Elastic purchased a few years ago). There's also an Enterprise offering. If you're looking for a hosted Elasticsearch solution, it's probably better than what AWS is offering. Side note: they update about as often as elastic releases, whereas AWS ES is consistently behind.	jonaf	13.520652	-4.5943804	comment	6.0	32.0	1497820737	-10.002421
30787254	Librdkafka – An Apache Kafka C/C++ c	Librdkafka – An Apache Kafka C/C++ client library	maydemir	13.584215	-4.990854	story	6.0	56.0	1648108666	10.574029
30949020	"I'm not familiar with the phrase ""co"	"I'm not familiar with the phrase ""cockroach team"" in this context, and the obvious web search didn't help. Can you please elaborate?"	mwcampbell	13.704143	-5.1769114	comment	6.0	18.0	1649358537	10.501719
31188534	Terraform is for specifying determin	Terraform is for specifying deterministic, idempotent results given a set of conditions and inputs.Music apps like Spotify and Apple Music are about whimsical, serendipitous discovery independent of rational thought. At least, for me, anyway.The two are wholly incompatible. I'm shocked that this exists. It calls into question how I think of music streaming platforms, what I think they provide, and how I interact with them.	bovermyer	13.703515	-4.3668985	comment	6.0	23.0	1651117824	9.472826
31265153	I've never heard of Pulumi until now	I've never heard of Pulumi until now.  How does it map against what Terraform provides?I'm trying to understand why anyone would choose this over TF.	metadat	13.687148	-4.394411	comment	6.0	24.0	1651694828	9.505728
31357011	Look at the Terra sub or the replies	Look at the Terra sub or the replies on Twitter to the official account. Normal people losing all their life savings and a lot of them are contemplating suicide. It's actually really really sad.https://www.reddit.com/r/terraluna/	haunter	13.710378	-4.367755	comment	6.0	29.0	1652375867	9.349787
31356248	Terra blockchain was officially halt	Terra blockchain was officially halted at a block height of 7603700	0xedb	13.715014	-4.372171	story	6.0	44.0	1652372176	9.450823
31537889	I'm in the process of building a too	"I'm in the process of building a tool that's basically Terraform, but for database schemas - you define the tables and columns in something like a proto or JSON, and it will do exactly what this article describes: read the current state of the world, plan out a minimal series of updates (avoiding destructive updates, and keeping dependencies in mind for things like foreign keys), and then apply them. The solutions for deletion with incremental adoption is tombstones. If there's a thing in reality and you don't have a config matching it, ignore it. If you want to delete it, add a special ""delete this"" block to the config.Once you've fully adopted, then you can flip a flag to ""I own the whole world"" mode, where the default is to delete anything not found in the canonical configuration.The so"	GeneralMayhem	13.6914215	-4.3977427	comment	6.0	28.0	1653716333	9.512126
31538222	The article misses a key bit of info	"The article misses a key bit of information TF needs when making a plan:   4. The previous Terraform configuration

This is effectively stored by state.We need this because if a resource is removed from the new config then Terraform needs to be able to delete the existing resource from the world. If we don’t have the state then Terraform must either:    1. Not delete it from the world

    2. Or risk deleting something not managed by Terraform

If everything were managed by Terraform then perhaps we would not need state, but this is not realistic in my view."	pharmakom	13.710011	-4.402655	comment	6.0	97.0	1653721403	-12.358483
25834350	The cringe on this thread is appalli	"The cringe on this thread is appalling.Elasticsearch B.V. owes you nothing. The source code is still open source, but you should pay for re-selling or providing hosting services around it. They have salaries to pay. Period.Too many open source ""believers"" find themselves out of pocket, taking time away from their families and lives, only for companies like Amazaon and other WAANKs out there to make billions in profit. Time for this to stop. Starve them of your hard work and make them pay if they want to use your software. For sharing knowledge, code can still be freely readable, but should not be free of charge."	yrgulation	13.52111	-4.5257964	comment	6.0	23.0	1611070187	-9.951395
25834941	> Amazon simply out-competes Elastic	"> Amazon simply out-competes ElasticSearch with their own product when it comes to consultancy, servicesYou're kind of right about this, but it's the issue that AWS just has a massive head-start with any client that already uses AWS. They don't really out-compete, they just use their existing vendor lock-in to gain an advantage. And really, by using your dominance in one ""market"" to gain an advantage elsewhere ends up feeling like a bit of a grey area.> To add insult to injury, Amazon made the mistake of leveraging the ElasticSearch brand a few times too many in ways that just rub the ElasticSearch people the wrong way.You're phrasing this in a way like Amazon ""leveraging the ElasticSearch brand"" isn't a trademark issue. Is ""leveraging the trademarks of another company"" suddenly okay (as l"	nrmitchi	13.522479	-4.517742	comment	6.0	41.0	1611073093	-9.870409
26102609	Show HN: Spacelift – first all-in-on	Show HN: Spacelift – first all-in-one CI/CD for Infrastructure as Code	cube2222	13.535696	-4.3388767	story	6.0	44.0	1613057779	9.473516
26141329	Show HN: A review of books and tutor	Show HN: A review of books and tutorials on Apache Kafka	stambros	13.60448	-4.9819417	story	6.0	25.0	1613385320	10.52414
36235844	Terraform is open source. What are p	Terraform is open source. What are people paying for?	jstx1	13.687512	-4.358695	comment	6.0	23.0	1686186264	-12.399107
36235824	Hopefully they realize their product	Hopefully they realize their products are too expensive for the value they provide beyond the open core offering.  The recent Terraform Cloud pricing changes are not going in the right direction, please hire folks who understand how to price and capture value for your customers appropriately.	candiddevmike	13.573325	-4.2722983	comment	6.0	35.0	1686186072	9.4442005
36304871	Honest question, if you're locked in	"Honest question, if you're locked in to AWS why not just use the CDK?I've used Terraform and Pulumi in the past and the ""platform agnostic"" is only true for trivial builds. Once you get into medium sized infra you're writing so much AWS specific code it stands better to go 1st party.I can't speak for GCP, but this is what happened to us. We kept fighting 3rd party code we ended up going CDK. While there are still issues, there were less issues. Cloudformation manages the state under the hood anyway so we're all just stuck wrapping that sucker, even in the CDK."	irjustin	13.649262	-4.372616	comment	6.0	21.0	1686627351	9.4917965
36476078	I would phrase almost the same idea 	I would phrase almost the same idea from the opposite angle: focus on the fundamentals that never change, and view the trends in terms of how they relate to those fundamentals.But also, those are some pretty odd comparisons. For sure Ansible and Terraform aren't directly comparable. If anything they're complementary. Terraform provisions machines (and also infra, etc), and Ansible configures provisioned machines.	andrewflnr	13.693365	-4.412594	comment	6.0	31.0	1687757872	9.550334
29063048	As someone not familiar with HashiCo	As someone not familiar with HashiCorp's products, could you give a super high level overview of what consul, vault and nomad are?	ZephyrBlu	13.691838	-4.4024634	comment	6.0	34.0	1635741589	-13.013119
29063314	> Consul is a service mesh. It’s you	> Consul is a service mesh. It’s your dynamic service discovery and routing layer.How does this differ from DNS?	colordrops	13.629322	-4.5224247	comment	6.0	20.0	1635744826	-13.190681
29063633	My guess is Consul shit itself. It w	My guess is Consul shit itself. It works until it doesn't.For now I prefer Zookeeper because at-least I have experienced most of it's failure modes. i.e they are probably all prone to blowing up but I have lost my eyebrows enough times in ZK explosions that atleast I know what I'm up against.Consul isn't widely used enough for me to have the same confidence for now, same goes for Vault and Nomad tbh. I really like the design of Vault and it's dynamic secrets system but I am probably just going to implement something similar on k8s secrets so that I don't have to carry around something that might spontaneously combust on me.	jpgvm	13.618131	-4.521245	comment	6.0	31.0	1635748375	-13.163349
29399811	Based on our experience with Apache 	Based on our experience with Apache Kafka and alternative streaming systems, Apache Pulsar natively addresses the Honeycomb's needs.- Decoupling of Broker & Storage Layer- Tierered Storage (SSD, HDD, S3,...)We use both Kafka and Pulsar in our systems.- Kafka is used for microservices communication and operational data sharing- Pulsar is used for streaming large customer data in thousands of topics	krnaveen14	13.573408	-4.9853663	comment	6.0	24.0	1638324160	-13.131429
29600118	Such a server is 400$/mo, a backend 	Such a server is 400$/mo, a backend developer that can confidently maintain kafka in production is significantly more expensive!	colinchartier	13.574413	-4.975844	comment	6.0	47.0	1639787509	-13.107467
29639874	Is there any standard system for uni	Is there any standard system for unique property IDs?	mgav	13.944339	-5.17906	story	6.0	2.0	1640108476	-13.616212
34453773	I really hate this trend away from b	I really hate this trend away from basic IDs. I feel like it's driven by folks who've never actually worked in the real world. I got account paperwork recently where the company ID account ID and invoice ID were all uuids. 100% this company if I call them will not use this BS to lookup my account and will instead use something easier try to guess like a company phone number.I also had to do some support tickets recently and because of the issues copying uuids from the screen they insisted on screenshots that included the url bar showing uuid. 100% trying to tell them the ID over try the phone or even rekey would run into issues.Give me back my sequential invoice ids!	onphonenow	13.939109	-5.1720667	comment	6.0	31.0	1674225716	-13.625554
37240673	Didn’t Pulumi accelerate its adoptio	Didn’t Pulumi accelerate its adoption by the use of Hashicorp terraform providers? Didn’t AWS use elastic search for free then fork when the license changed? I think there are a lot of challenges around building a sustainable business around OSS that requires a more delicate look than the black or white hot takes around here recently.…with that being said, I will say that I welcome companies like Pulumi to the IaC landscape. IaC makes a lot of sense conceptually, but unlike a lot of HN (from my perspective), I strongly dislike terraform and HCL and most Hashicorp products. There’s also enough of an impedance mismatch between TF and cloud providers that I’d be poised to just use cloud formation or ARM or something native over tf, which was never cloud agnostic anyway like their marketing cl	SirensOfTitan	13.675622	-4.3756757	comment	6.0	20.0	1692817338	9.527259
37262792	> We completed all documents require	"> We completed all documents required for OpenTF to become part of the Linux Foundation with the end goal of having OpenTF as part of Cloud Native Computing FoundationImho the best possible choice, and one that was easy to see coming when they announced they were joining ""an existing foundation""."	mkl95	13.664549	-4.3746643	comment	6.0	56.0	1692977231	-12.213884
37321846	The standard fix for this is to put 	The standard fix for this is to put the devs on call.Recurring operational issues get fixed mighty quickly when J. Dev has to wake up a few times at 02:00 on Saturday.Heck, design and architectural issues suddenly get a lot of scrutiny at the whiteboard phase and people decide they don't really need Kafka or Kubernetes or Mesos or GenAI anymore.	oblio	13.56502	-4.9933243	comment	6.0	18.0	1693402142	-13.309192
37333232	Because it was libre, or because it 	Because it was libre, or because it was (is) gratis?I know that I downloaded and learned Terraform because it was free of charge only. I honestly didn't care and I didn't know about its specific licensing status. I was able to quickly and easily install, configure, and run it because Hashicorp made it available as a free-of-charge download. Period, full stop.Compare it to VirtualBox, which is clearly not F/OSS, but gratis to download and use. In fact my employer mandates our use of VBox, so we all download it, irrespective of license terms. It's extremely popular, even outstripping qemu and other libre VMM implementations.	NoZebra120vClip	13.6470585	-4.366099	comment	6.0	26.0	1693463322	-12.433452
37398618	This is probably going to get a lot 	This is probably going to get a lot flake but what did we expect when big tech started eating up open source solutions and competing with the companies who started the work . MongoDB and AWS is a good example. Hashicorp probably realised that they should preemptively change the licensing before bigger players started using the products to directly compete with them.I want Hashicorp to survive and be profitable. Fact is, for the majority of the users who use terraform, the change in licensing does not impact them.	gobins	13.682975	-4.379988	comment	6.0	56.0	1693952597	-12.388246
24432068	Video game advertisement disguised a	Video game advertisement disguised as hacker news post.>As much as I enjoyed my time with “Metamorphosis,” I should note that its stiff character animations make the human characters look like eerie-looking puppets.The only thing remotely Kafkaesque about the whole game, it sounds like.Would it even be possible to make a truly Kafkaesque game? The primary elements of Kafka are all directly opposed to an enjoyable experience, if done right. The only way I think you could do it would be to focus on some minor quirk in Kafka's writings which doesn't directly lead to soul-sucking anguish. I think the best such quirk would be the tendency for rooms to be dominated by beds. So maybe make it a game like Katamari Damacy except instead of a katamari ball, your character is bed-stricken and is movin	xamuel	13.674624	-4.9641423	comment	6.0	21.0	1599743975	10.553111
24746160	Kafka in Pieces	Kafka in Pieces	apollinaire	13.660974	-4.9672694	story	6.0	86.0	1602427795	10.547086
32654039	Hi all, creator of D2 here. I posted	Hi all, creator of D2 here. I posted this on Reddit to get some feedback but was hoping to improve the docs and offer a playground environment before posting on HackerNews. Ah well. I wanted to clarify some things:1. D2 will be open source and usable outside of Terrastruct. Terrastruct will remain the best interface to D2, with bidirectional updates from GUI, but we already have vscode and vim plugins ready for local editing. We're a small team and working on one thing at a time.2. We're aware of PlantUML, Graphviz, Mermaid, of course. These are mature offerings, but I see plenty room for improvement that we intend to tackle with D2. https://d2-lang.com/tour/faq#how-does-this-compare-to-mermai...Feel free to ask any questions!	alixanderwang	13.654168	-4.4209957	comment	6.0	30.0	1661887633	9.500954
22277108	I seem to spend far more time on the	I seem to spend far more time on the deployment of code than I ever used to, more time writing CloudFormation and ansible than the Java backend, python lambdas and static UI that it deploys.That seems nuts to me. I'm not sure how you fix it without being Amazon/Google. People moan about Terraform too before that gets mentioned.	cs02rm0	13.668812	-4.376396	comment	6.0	22.0	1581183804	9.51888
23611791	For anyone that doesn’t quite ‘get’ 	For anyone that doesn’t quite ‘get’ Kafka: I recommend his short stories and aphorisms over his novels. Metamorphosis and The Castle never quite did much for me, whereas The Great Wall of China or In the Penal Colony are some of my favorites.	ceilingcorner	13.681056	-4.9451947	comment	7.0	22.0	1592905787	10.530011
23789119	Can anyone share their thoughts on w	Can anyone share their thoughts on whether, in case of a new project is it worth to start with Pulsar instead of Kafka as a distributed log/pub sub solution with guaranteed delivery? I heard a lot of stories about Kafka's operational complexity and TFA seems to be pointing out that Pulsar has a lower operational upkeep (ie. less manpower needed to keep it running).	polskibus	13.572848	-4.969139	comment	7.0	30.0	1594366877	-13.10423
24022888	I'm going to engage in concern troll	I'm going to engage in concern trolling about the name to preemptively beat everyone else.Let's all bike-shed about how bad the name is and how we'll never use it in our giant production data vacuums to mercilessly exploit the commons for money and prestige.Here's a pointless mention of CockroachDB and an observation that GNU Recutils has a logo of two turtles engaging in sex.Something something GIMP.Here's twenty overly emotional pleas for why we should eradicate any memory that the Internet used to be used by and for amateurs, without consideration of what Fortune 500 companies and crisis PR firms might think about it. Really bad look. Period. It's 2020, etc.	froasty	13.713078	-5.131982	comment	7.0	35.0	1596307633	-4.5703673
20098764	It’s interesting to see the mindset 	It’s interesting to see the mindset over here at HN change over the year. I recall when MongoDB introduced their “commons clause”, RedisLabs did the relicensing and ElasticSearch doing the dual license open source code, there was quite some outrage over here.I guess everyone is accepting that these clouds are in fact major threats to these projects, as providing these databases as a service is pretty much the only realistic way to get decent revenue numbers.I think it’s good that CockroachDB is preemptively doing this, now that it has become more acceptable a practice.	stingraycharles	13.68252	-5.107089	comment	7.0	29.0	1559679106	-5.673732
20545896	I am in agreement with everything ge	I am in agreement with everything generally except for CloudFormation and setting up Route53 zones manually.I use Terraform to setup my infrastructure as service on AWS, including Route53 zones.After the latest 0.12 upgrade to the language, Terraform is quite a bit more user friendly than CloudFormation, and importantly, not locked down to just Amazon -- it supports multiple clouds and on-premises solutions for declarative orchestration of resources.	merlincorey	13.645919	-4.3389626	comment	7.0	33.0	1564289333	9.495809
20864045	I'm astonished at all the comments t	I'm astonished at all the comments that vilify MongoDB Inc and then talk about moving to AWS's MongoDB clone. What sort of twisted world are we living in where a company makes a service, tries to sell the service, and then are lambasted when they try to prevent a competitor from copying it wholesale?Cloud providers have been able to stand on the shoulders of giants, profiting immensely from millions of lines of open source code while giving little of it back, and we seem to be largely fine with this. Will we be fine depending on their services when the cloud providers become the new Oracle, free to raise prices extravagantly when we have no other choice?If MongoDB Inc can't compete in the enterprise cloud market simply because they are not AWS (as mentioned by threeseed), what should their	elevenbits	13.70183	-4.9922657	comment	7.0	72.0	1567490721	9.934208
25865695	Someone at Elastic didn't do the mat	"Someone at Elastic didn't do the math on this. Amazon can easily fund developers, they just didn't because they didn't have to. Now that the gorilla has been enraged woe to the thing that pissed it off. We'll see if amazon actually contributes to the new fork. The fact that amazon is in a better position to make money off of open source software is part of the calculation that startups should be making if they are writing open source software, especially if their moat is a proprietary shim that any of the big providers could rewrite in a month if they cared. Adding a rider to your open source that says ""oh, and only the original authors at this one company are allowed to implement those shims"" may play well with the HN crowd, but it isn't open source anymore.I will also note that is clearl"	hyperion2010	13.533373	-4.436891	comment	7.0	30.0	1611269543	-9.817018
35950766	"TLDR: ""I work at Confluent, the owne"	"TLDR: ""I work at Confluent, the owners of Kafka, and I have determined through my tests that Redpanda's performance is greatly exaggerated.""I don't think we can get a less reliable or trustworthy set of performance tests than when someone's paycheck depends on the outcome of those tests. If Redpanda's performance were found to be better, would he really publish the test results?"	purpleblue	13.555676	-4.9929104	comment	7.0	33.0	1684168013	10.322783
36049561	I just wish Nginx had the good will 	I just wish Nginx had the good will to include decent metrics. The built-in stubs are far from enough.It's the main reason why I'm thinking about migrating everything to Caddy.	pachico	13.681056	-3.9701064	comment	7.0	29.0	1684870042	8.824801
36344313	Gently Down the Stream – A gentle in	Gently Down the Stream – A gentle introduction to Apache Kafka (2021)	warrenm	13.590203	-4.990844	story	7.0	88.0	1686852207	-13.096921
29115362	This means this project is abandonin	"This means this project is abandoning open source and free software, as the Elastic License is not an open source license.> The Apollo developer community is at the heart of everything we do. As stewards of our community, we have a responsibility to prevent harm from anyone who intends to exploit our work without contributing back. We want to continue serving you by funding the development of important open-source graph technology for years to come. To honor that commitment, we’re moving Apollo Federation 2 to the Elastic License v2 (ELv2).One of these things can't be true.It's really disheartening to see fake-open-source projects like this tout ""the community"" without realizing that taking software freedoms away (which is what this not-open-source license does) is ultimately an antisocial"	sneak	13.520647	-4.4961114	comment	7.0	50.0	1636085562	-9.785513
29298447	Given that Kafka books are about imp	Given that Kafka books are about impenetrable bureaucratic worlds, why is Kafka called Kafka? Sounds like it’s a tool to make sure your infrastructure is hard to comprehend.	wodenokoto	13.65773	-4.9638615	comment	7.0	51.0	1637519157	10.540662
12844653	Not really sure why you would do it 	"Not really sure why you would do it like this.Most systems do cache/index invalidation or HDFS archiving from the web app or a set of microservices that gets notified from the web app. So instead of pushing raw DB rows into Kafka they will push generic events e.g. ""user deleted account"" and let the various services work out how to respond to it.In this model you have tightly coupled both the choice of DB as well as the DB schema to the events system.Sounds like a bit of a nightmare if your iterate a lot on your architecture."	threeseed	13.546273	-5.0218563	comment	7.0	26.0	1477998169	-13.080278
13155707	This is an excellent idea... but I'm	This is an excellent idea... but I'm a little put off by the reference implementation using DC/OS and Kafka... Its a little bit 'heavy' for a reference implementation, at least that's my personal preferences.Id like to see a more 'low tech' version, or in the very least, a plan to transition from a 'heavy' reference implementation to a 'lighter' one once one became available since having a concise reference implementation makes porting and compatibility significantly easier.	techdragon	13.561568	-5.010011	comment	7.0	25.0	1481519505	-13.083999
27589795	Can someone explain to me if people 	Can someone explain to me if people still do new projects using CloudFormation? If so why?I'm in an enterprise and they do everything with CloudFormation, but it doesn't really make sense to me. None of the code is reusable, it's yaml or json, which isn't easy to write to begin with.I remember in the early days there were 2 frameworks that would compile to CF. I googled recently and found Lono, and it looks nice, but there's a fraction of the modules available that are available for terraform and getting help is also limited by the number of users. And then there is the big question for me why are building things that make CF look like Terraform[0].I'm not a fanboy of Terraform either, there's plenty of stuff that I didn't like about it. But even AWS themselves almost seem to have more reu	rjzzleep	13.649553	-4.363652	comment	7.0	42.0	1624356248	9.499225
15782724	HAProxy 1.8.0	HAProxy 1.8.0	rjgray	13.523938	-4.094382	story	7.0	147.0	1511726996	8.797327
15913454	Announcing the OpenFaaS Function Sto	Announcing the OpenFaaS Function Store	alexellisuk	13.624029	-4.414545	story	7.0	60.0	1513162578	-12.198339
16246171	The code comparison between CloudFor	The code comparison between CloudFormation’s abysmal JSON formatting and Terraform’s DSL is a bit disingenuous.CloudFormation has supported YAML for at least a year or two now, and it’s leagues more readable and compact, not to mention maintainable—you can even add comments to your code with YAML (something that is impossible with the old JSON format).I’ve spent a lot of time working between the two, and while Terraform does have a lot to offer and is often a very valid option, CloudFormation has its virtues, especially the fact that almost all bleeding edge AWS features are first available to be managed via CloudFormation (sometimes with weeks or months of lead time), and many bugs can be more readily ironed out with AWS support (assuming you have it).Again, not saying don’t use Terraform	geerlingguy	13.6592655	-4.3844357	comment	7.0	39.0	1517060289	9.500398
16869902	CockroachDB is more scalable than Am	CockroachDB is more scalable than Amazon Aurora for OLTP	manigandham	13.559225	-4.974028	story	7.0	81.0	1524077274	9.783369
17008909	Open sourcing Terratest: tools for t	Open sourcing Terratest: tools for testing infrastructure code	kiyanwang	13.689615	-4.399589	story	7.0	105.0	1525644849	9.506678
17398704	HashiCorp Consul 1.2: Service Mesh	HashiCorp Consul 1.2: Service Mesh	onnimonni	13.629946	-4.514865	story	7.0	148.0	1530000345	-13.112924
17744413	Terraform is terrible compared to Cl	Terraform is terrible compared to Cloudformation. Its selling point is multi-cloud support, but you'll never get it, clouds are too different.- Good CF template is 10x less code for the same solution.- No corrupted state problems.- Native tool, supporting all properties of resourcesWriting good CF templates takes good AWS knowledge, and system thinking, you group resources that belong together, it actually teaches you good architecting.	auslander	13.670898	-4.3800507	comment	7.0	34.0	1534082917	9.517697
17921362	Slightly off topic: this quote from 	"Slightly off topic: this quote from the SEC filing document:""Immediately prior to the completion of this offering, we intend to change our corporate form from a Dutch private company with limited liability (besloten vennootschap met beperkte aansprakelijkheid) into a Dutch public limited company (naamloze vennootschap) and change our corporate name from Elastic B.V. to Elastic N.V.""As far as I know, Elasticsearch has no headquarters or offices in The Netherlands. I assume the company is only registered in The Netherlands for tax avoidance.If my assumption is true, despite that I like their products, this makes me a little sad.EDIT: my bad. I missed the tab Europe and Asia. They do seem to have an office in Amsterdam."	tomputer	13.528503	-4.631625	comment	7.0	25.0	1536177370	-9.953745
17922552	I see several responses that mention	"I see several responses that mention MongoDB for purposes of comparison and seem to conclude Elasticsearch fares favorably.It should be noted:[1] Unlike MongoDB (which is a ground-up build), Elasticsearch is basically an API layer on top of Apache Lucene. This is relevant because they haven't built and don't maintain, control, or own the source of their primary IP.[2] Unlike MongoDB (General Purpose) Elasticsearch is a single purpose database and good at/used for one thing and one thing only. It searches text fields for text.So its potential use cases and thus marketshare is far more limited.[3] Posts on stackoverflow with the tag:elasticsearch × 34,253
mongodb x 103,478"	burnmaster	13.585963	-4.986056	comment	7.0	25.0	1536188041	9.907323
18301602	I don't understand the line of reaso	"I don't understand the line of reasoning. Can anyone give me a lay explanation?My understanding of the license change is basically ""if you use MongoDB to support any site, all software higher in the stack needs to be released as well"".Is that accurate?If so, why can't an author make this part of the license?"	appleflaxen	13.743621	-5.1506844	comment	7.0	54.0	1540481081	9.945929
18555464	Someone should create a fork with wo	Someone should create a fork with work-safe name. CockroachDB brings connotation of cockroaches, who are known by eating almost everything and living almost everywhere.	anticensor	13.716428	-5.1793933	comment	7.0	26.0	1543437751	-4.5741606
18562704	Amazon Managed Streaming for Kafka i	Amazon Managed Streaming for Kafka in Public Preview	abd12	13.550934	-4.990878	story	7.0	62.0	1543517427	-13.118335
30174820	Someone needs to make the obligatory	"Someone needs to make the obligatory ""Wordle clone in 50,000 lines of react/java/nosql/docker/terraform/documentation/7GB of unused dependencies"" :)"	jsiaajdsdaa	13.70178	-4.387148	comment	7.0	25.0	1643787326	9.470569
27434695	I strongly agree both with respect f	"I strongly agree both with respect for the half-baked-ness of the language and with the ""it's probably the best out there"". Ultimately, these tools should have a static/yaml-like ""assembly language"" that describes the state of your infrastructure without any of the DRY. There would be a diffing engine which would figure out what changes need to be applied and apply them accordingly. Users could use some vanilla programming language to generate that yaml in a DRY way; then the Terraform folks don't need to badly reinvent a programming language.I know they also have a CDK, but I can't tell if it properly solves that problem or if it still forces us into Terraform idiosyncrasies (i.e., if I rename something in Terraform, it will try to delete the corresponding resource and recreate it, and I "	throwaway894345	13.67995	-4.4136167	comment	7.0	74.0	1623158017	9.562902
37809721	Homebrew to deprecate and add caveat	Homebrew to deprecate and add caveat for HashiCorp	mooreds	13.724039	-4.372394	story	7.0	262.0	1696766408	-12.515307
38002665	Show HN: Togomak – declarative pipel	Show HN: Togomak – declarative pipeline orchestrator based on HCL and Terraform	srevinsaju	13.691799	-4.3916554	story	7.0	55.0	1698169771	9.517852
15186337	> Traditionally, databases have been	"> Traditionally, databases have been used as the source of truth ... [but] can be difficult to manage in the long run. First, it’s often tricky to change the schema of a database. Adding and removing fields is not too hard, but more fundamental schema changes can be difficult to organize without downtime.This argument sounds self-contradicting. Kafka doesn't let you change its schema at all! At least postgres gives you the option.It seems that the author is excited about having a single source of truth that doesn't change, and didn't realize that he could do that with a database, if he just never used the schema-changing features.Am I missing something? It seems like the author could be totally happy with a bunch of derived postgres databases sitting in front of a ""source of truth"" databas"	toomim	13.5336075	-5.0971518	comment	7.0	45.0	1504725408	9.875308
15358405	DNS for Service Discovery in HAProxy	DNS for Service Discovery in HAProxy	phil21	13.538103	-3.9434788	story	7.0	87.0	1506615931	8.93785
15602823	Disclaimer: I'm one of the creators 	Disclaimer: I'm one of the creators of Kafka and founders of ConfluentThe best way to get the power, throughput, latency of Kafka without the operations is to use a hosted service. The one created and supported by the Kafka team is Confluent Cloud https://www.confluent.io/confluent-cloud/	nehanarkhede	13.568745	-4.999614	comment	7.0	24.0	1509553581	-13.106391
28583803	It's very difficult to communicate w	It's very difficult to communicate what Terraform's strengths and weaknesses are to someone who's never used it or IAC in general.Spend enough time playing with it and understanding it, you'll end up like me thinking about all the shit you configure left and right such as hooking up Stripe's secret keys, Google Analytics and the webmaster console, and just about everything else we configure via web interfaces, and you'll think:Why can't we use Terraform for this as well? Manage these SaaS products the same way we manage the rest of our cloud, test and audit changes, automatically roll secrets and update anything that needs updating the moment you change a setting.Ah well. Not enough APIs out there. And it's difficult to write and maintain terraform plugins for these throwaway cases especia	scrollaway	13.670386	-4.3701153	comment	7.0	33.0	1632054712	9.526666
28584376	> On terraform it's different, becau	> On terraform it's different, because of the tfstate. All the deployed elements are stored in the tfstate, re-running terraform won't update resources that are supposed to be in a specific state but are not.This is incorrect, and makes me wonder how the author has used terraform. Terraform will certainly detect differences between managed and current state for the resources it manages whenever you do a plan/apply.The major challenge is that terraform _can only reconcile resources or configuration values it knows about_, and that depends very much on how a particular cloud vendor or terraform provider has modelled resources. I believe the Helm provider is one example where it (at least in the past) haven't had a good way to reconcile state.	snom380	13.709194	-4.392808	comment	7.0	26.0	1632060086	-12.37603
23087071	Cockroach Labs Gets $87M in New Fund	Cockroach Labs Gets $87M in New Funding	tpw212	13.698457	-5.1736145	story	7.0	45.0	1588728660	10.033129
29347961	Must be something about Kafka to att	Must be something about Kafka to attract these kind of explanations. Another one few months back was a children's book on Kafka [1] . For me it just look like solution looking for actual problems.I wonder if Kafka represents an existential angst in these Kubernetized Microservice times. Or is it more simply I am just too dumb to learn and use this shit correctly.1. https://news.ycombinator.com/item?id=27541339	geodel	13.578391	-4.9781613	comment	7.0	60.0	1637908462	-13.136022
29357849	Genuinely interested -- why would I 	Genuinely interested -- why would I choose this over running Terraform as part of CI/CD?	kaidon	13.69757	-4.382221	comment	7.0	32.0	1637992543	9.47892
34716797	Apache Kafka Beyond the Basics: Wind	Apache Kafka Beyond the Basics: Windowing	mooreds	13.581126	-4.9893165	story	7.0	135.0	1675896989	-13.097535
35157379	An important question not mentioned 	"An important question not mentioned in this article - and may not have been known by the author - is how much (Dev)Ops burden do each of these add?In the places I've worked that use Kafka, it's 100% always a source of issues and operational headaches.That's in fairly high throughput environments though, no idea if it ""just works"" flawlessly in easy going ones."	justinclift	13.570814	-5.0011644	comment	7.0	28.0	1678823568	-13.09756
14309903	Very disappointed with HN turning in	Very disappointed with HN turning into a 4chan/reddit style trolling board about the name. Guys, we get it that you don't like the name. Can we please stop bike shedding and move on? The people at cockroachdb have obviously seen all your messages but decided it's worth keeping the name. What more is there to talk about? Why not talk about the relative technical merits of this DB?	newsat13	13.717048	-5.159586	comment	7.0	78.0	1494437143	-4.5830307
31672063	Facebook's Zookeeper Implementation 	Facebook's Zookeeper Implementation on Delos	somerando7	13.539299	-4.87973	story	7.0	67.0	1654713478	-13.189167
36592893	"""However, as time passed, MongoDB ab"	"""However, as time passed, MongoDB abandoned its open-source roots; changing the license to SSPL - making it unusable for many open source and early-stage commercial projects.""This is not true, you can use MongoDB for commercial projects as long as you don't sell MongoDB services, but internally you're free to use it as your regular DB.https://www.mongodb.com/licensing/server-side-public-license..."	Thaxll	13.737759	-5.152352	comment	7.0	37.0	1688507097	-13.043304
36653399	Show HN: Digger – Open Source Terraf	Show HN: Digger – Open Source Terraform automation and collaboration tool	ujnproduct	13.703653	-4.3812346	story	7.0	91.0	1688899912	9.515647
37082263	HashiCorp adopts the Business Source	HashiCorp adopts the Business Source License for future releases of its products	rmoriz	13.726571	-4.35856	story	7.0	14.0	1691704475	13.27913
37083198	> That's pretty disappointing.From t	> That's pretty disappointing.From the article: “End users can continue to copy, modify, and redistribute the code for all non-commercial and commercial use, except where providing a competitive offering to HashiCorp.”Literally nothing has changed, this isn’t disappointing, it’s smart, they’re protecting themselves against cloud providers that have repeatedly abused the goodwill of the open source community.	randmeerkat	13.719082	-4.3628387	comment	7.0	57.0	1691711147	-12.294059
37135029	I appreciate the letter and trying t	I appreciate the letter and trying to work with Hashicorp -- I used to have a ton of respect for Hashicorp.  But honestly... at this point......just fork it into a foundation.  Don't wait for Hashicorp's response.  I get wanting to have the appearance of working with Hashicorp, but we've been shown again, and again, and again, and a-fucking-gain that private corporations cannot be trusted to maintain public goods.  Only community governed non-profit foundations can do that.Private corporations will put the bottom line first every single time.  And in the case of investor funded enterprises, the bottom line is never ending exponential growth or bust.	dbingham	13.733802	-4.347656	comment	7.0	119.0	1692112655	-12.501719
37138212	If any Hashicorp people are reading,	If any Hashicorp people are reading, can you please tell your middle and senior management that this decision has deeply soured my entire DevOps cohort on continuing to use Terraform in the future.We're already exploring alternatives. Future client projects may not use Terraform at all.Languages and frameworks must remain open or they will wither and die.	bloopernova	13.709861	-4.382568	comment	7.0	50.0	1692127633	9.452863
37335061	Not the OP, but I suspect HN has tri	"Not the OP, but I suspect HN has trimmed the anchor link.> https://github.com/opentffoundation/roadmap/issues/24#issuec...That's the comment that made the issue clear -- specifically TOS were amended for https://registry.terraform.io to state:> You may download providers, modules, policy libraries and/or other Services or Content from this website __solely for use with, or in support of, HashiCorp Terraform.__ie., it looks like the intent is ""You can't use OpenTF with registry.terraform.io"".IMO, that feels a little petty. But, I guess if OpenTF is taking a position of ""Use us instead of Terraform"", then they shouldn't expect to get the usage of Hashicorps infra."	martypitt	13.718084	-4.378756	comment	7.0	31.0	1693478276	-12.383852
37394964	As technical lead for the OpenTF pro	As technical lead for the OpenTF project, how does things like this get merged?https://github.com/opentffoundation/opentf/pull/36/commits	Foxboron	13.687291	-4.380841	comment	7.0	85.0	1693934578	-12.229035
32658933	Open source rules the world. A lot o	Open source rules the world. A lot of people use HashiCorp's OSS products; not a lot pay for them. I certainly haven't and I don't think I've ever met a paying Hashicorp customer even though I know lots of people that use their products.They are a consulting business ultimately. And like many such companies they thrive on complexity. They are doomed to become part of the problem they are trying to solve. If they succeed in their mission, the result is OSS software that is so simple to use that nobody needs their consulting services.Like many OSS companies, they confuse control over the software with controlling the wider market. Amazon, Google, MS, etc. don't provide just software but their 630B dollar industry that is enabled by their massive data centers and infrastructure. That's what p	jillesvangurp	13.657282	-4.314764	comment	7.0	25.0	1661925946	13.311864
32399103	Software Engineer at Spacelift[0] he	Software Engineer at Spacelift[0] here - a CI/CD specialized for Infra as Code (including Terraform).A pattern we're seeing increasingly commonly are Platform Engineering teams doing the bulk of the work, including all the fundamentals, guidelines, safety railing, and conventions, while Software Engineers only use those, or write their own simple service-specific Terraform Stacks which however extensively use modules developed by the former.This does also seem like the sweet spot to me, where most of the Terraform code (and especially the advanced Terraform bits) is handled by a team that's specialized for it. If you don't have a Platform Engineering team, or one that is playing its role (even if its called DevOps or Ops or SRE) in even a medium company, you'll probably start having as man	cube2222	13.673994	-4.383209	comment	7.0	41.0	1660057979	9.483599
22268944	Dynamic Route53 records for AWS auto	Dynamic Route53 records for AWS auto scaling groups with Terraform	traxmaxx	13.564013	-4.263924	story	7.0	87.0	1581099382	9.488987
24353412	AWS Tagging Best Practices: Using Te	AWS Tagging Best Practices: Using Terraform and CloudFormation to Enforce Tags	toeknee123	13.580307	-4.307872	story	8.0	63.0	1599055849	9.49509
19987106	I honestly love Terraform as a produ	I honestly love Terraform as a product. It was one of probably three tools I've used in my entire career that made me feel immediately more productive.  After using it for a very short period of time I was shocked developers continued to struggle through CF templates and the fragility the whole process entailed.	_t0du	13.694673	-4.3874836	comment	8.0	77.0	1558571120	9.481372
19988240	I mean, this is harsh, but there's a	"I mean, this is harsh, but there's a running joke that the big feature terraform is missing is a -twice flag so that it'll re-run itself on failure, since that's what you end up having to do anyways.Also, the terraform language, HCL? It's, I guess there's no better way to put this: not good.Am I misunderstanding the complexity of what Terraform is trying to do? To me, it looks like a bunch of tiny API clients tied together with a topological sort --- in other words, it's just another species of ""make"". It feels like it carries a whole lot more complexity than that concept warrants, but just enough simplicity to make it not a serious programming language. It's, to me, one of those frustrating uncanny valley systems.I am prepared to be totally wrong about this."	tptacek	13.705792	-4.3969917	comment	8.0	38.0	1558583240	9.509323
20276367	What’s New in Apache Kafka 2.3	What’s New in Apache Kafka 2.3	vsyu	13.621229	-4.9773703	story	8.0	53.0	1561482338	-13.10557
37036433	I'm Ryan Worl, co-founder and CTO of	I'm Ryan Worl, co-founder and CTO of WarpStream. We're super excited to announce our Developer Preview of our Kafka protocol compatible streaming system built directly on top of S3 with no stateful disks/nodes to run, no rebalancing data, no ZooKeeper, and 5-10x cheaper because of no cross-AZ bandwidth charges.If you have any questions about WarpStream, my co-founder (richieartoul) and I will be here to answer them.	ryanworl	13.537497	-4.990462	comment	8.0	39.0	1691424868	-13.103365
37089192	I know most HN commentators are thin	I know most HN commentators are thinking about Terraform, but I think this change was done with Consul and Vault in mind.Plenty of companies (including my employer) have been building fully monetized software using Consul and Vault under the hood and not paying them a dime. We're a company that's valued/market capped in the Billions btw and I know plenty of other large software companies doing the same thing.	alephnerd	13.68929	-4.347908	comment	8.0	71.0	1691764765	-12.388616
37138645	As an end-user, not competing with H	"As an end-user, not competing with HashiCorp, this change doesn't worry me. According to their FAQ [1]:  10. What are the usage limitations for HashiCorp’s products under BSL?
  All non-production uses are permitted. All production uses are allowed other than hosting or embedding the software in an offering competitive with HashiCorp commercial products, hosted or self-managed.

  24. Can I host the HashiCorp products as a service internal to my organization?
  Yes. The terms of the BSL allow for all non-production and production usage, except for providing competitive offerings to third parties that embed or host our software. Hosting the products for your internal use of your organization is permitted.

[1] https://www.hashicorp.com/license-faq"	new23d	13.732967	-4.360633	comment	8.0	28.0	1692129805	13.267265
37173304	Terraform is dead; Long live Pulumi?	Terraform is dead; Long live Pulumi?	todsacerdoti	13.692181	-4.3929276	story	8.0	40.0	1692351729	9.535697
37553066	This is the second article after the	"This is the second article after the ""caddy"" one that I am having troble finding a usecase.Nginx eixsts, why do I need to learn caddy?Redis exists, why do I need to learn FundationDB?"	abhishekjha	13.704925	-3.9620905	comment	8.0	40.0	1695019782	8.819741
24779268	> * Boundary is free and open source	> * Boundary is free and open source. Similar to when we built Vault, we feel like the solution-space for identity-based security is too commercialized. We want to provide access to this type of security to a broader set of people because we feel it's the right way to think about access control. Note: of course as as a company we plan on commercializing Boundary at some point, but we'll do this similarly to Vault, the major featureset of Boundary will remain free and open source forever.I hate this corporate speak.  You're breaking into the space by giving away (basic, as you will commercialize any advanced) features under the guise of open source altruism. The products HashiCorp sells are open core, and you should be more honest about it (GitLab is!).  I wish you operated more like other,	candiddevmike	13.717284	-4.342917	comment	8.0	37.0	1602696848	-12.18195
25348584	Alternatively from Jay Krebs [1] a m	"Alternatively from Jay Krebs [1] a much more thorough and nuanced discussion that is probably the best send-up on this topic.""So is it crazy to do this? The answer is no, there’s nothing crazy about storing data in Kafka: it works well for this because it was designed to do it. Data in Kafka is persisted to disk, checksummed, and replicated for fault tolerance. Accumulating more stored data doesn’t make it slower. There are Kafka clusters running in production with over a petabyte of stored data.""[1] https://www.confluent.io/blog/okay-store-data-apache-kafka/"	AndrewKemendo	13.552346	-5.005211	comment	8.0	38.0	1607449003	-13.087154
31271821	I was involved with archiving of dat	I was involved with archiving of data that was legally required to be retained for PSD2 compliance. So it was pretty important that the data was correctly archived, but it was just as important that it was properly removed from other places due to data protection.This is basically the approach that was taken: log before and after every action exactly what data or files is being acted on and how. Don't actually do it. Then have multiple people inspect the logs. Once ok'd, run again, with manual prompts after each log item asking to continue, for the first few files/bits of data. Only after that was ok'd too did it run the remainder.In other things I've worked on, I've taken the terraform-style plan first, then apply the plan approach, with manual inspection of the plan in between.	dkersten	13.69525	-4.3771353	comment	8.0	50.0	1651748616	9.5031185
31537625	Uh, how do you delete resources with	Uh, how do you delete resources with this model?If you don't have any state, and you have an empty module, did you just create it, or did you just remove all the resources from it? The former requires no action, the latter requires API calls to delete something that I no longer have a record of.More generally, do I have to completely enumerate the entire state of every service available to my AWS account to determine whether there's something that shouldn't be there vs. the contents of my Terraform modules?	NovemberWhiskey	13.686223	-4.3773346	comment	8.0	60.0	1653712367	-12.40167
31559524	This again...The problems with borin	This again...The problems with boring technology are twofold. One, it's about rejecting newer tech on a bet you don't need their features. And two, it's about choosing older tech because you assume it's good enough for the one year, two year, five year plan. And there are a few places that falls down.The first is when the new tech features are really strategically relevant to where your company is right now. If you need rapid deployment of new infra as you roll out installations for new customers, choosing manual CloudFormation config over Terraform could be a bad call. If you don't know your target platform at this point, writing native code over something cross-platform like React Native or Electron could be an expensive mistake.On the second, every time I've seen someone quote this essa	jbreckmckye	13.607726	-4.3545876	comment	8.0	47.0	1653921834	-5.368647
31582039	Terraform Labs Caught Moving $4.8M T	Terraform Labs Caught Moving $4.8M Through Shell Company	marban	13.687413	-4.361184	story	8.0	162.0	1654092649	9.365712
29115263	Moving Apollo Federation 2 to the El	Moving Apollo Federation 2 to the Elastic License v2	cjcenizal	13.521188	-4.51304	story	8.0	57.0	1636084496	-9.881307
34339928	Show HN: Tagging Assistant – add AWS	Show HN: Tagging Assistant – add AWS cost allocation tags in your dev pipeline	isemenov	13.57436	-4.30377	story	8.0	38.0	1673453108	9.479204
34531943	Show HN: Precloud – Dynamic tests fo	Show HN: Precloud – Dynamic tests for infrastructure-as-code	safeerm	13.628594	-4.375676	story	8.0	48.0	1674743260	9.518478
35060124	Thanks for sharing this. One of the 	Thanks for sharing this. One of the authors here.We built a service that executes arbitrary user-submitted code. An RCE service. It's the thing you're not supposed to build, but we had to do it.Running arbitrary code means containers weren't a good fit ( container breakouts happen), so we are spinning up and down ec2 instances. This means we have actual infrastructure as code (i.e. not just piles of terraform but go code running in a service that spins up and down VMs based on API calls).The service spins up and down EC2 instances based on user requests and executes user-submitted build scripts inside them.It's not the standard web service we were used to building, so we thought we'd write it up and share it with anyone interested.One cool thing we learned was how quickly you can Hibernate	adamgordonbell	13.548267	-4.3451843	comment	8.0	48.0	1678218030	9.509759
19054558	Finding Kafka’s throughput limit in 	Finding Kafka’s throughput limit in Dropbox infrastructure	redm	13.551417	-4.968297	story	8.0	148.0	1549033123	-13.080184
19927877	Hermes – A message broker built on t	Hermes – A message broker built on top of Kafka	qluml	13.526974	-4.9833426	story	8.0	125.0	1558005159	12.067114
19965110	Security for Elasticsearch is now fr	Security for Elasticsearch is now free	jasondc	13.531185	-4.731766	story	8.0	108.0	1558385825	-9.984497
16405384	Rochefort – Poor Man's Kafka	Rochefort – Poor Man's Kafka	booknomads	13.662451	-4.963997	story	8.0	31.0	1518950138	10.5508585
16709848	I will never use this product no mat	I will never use this product no matter how good it is due to its name. Hope you can understand that many ppl like me suffer phobia from cockroaches.(PS: As expected ppl will downvote this, but just trying to give a very valuable feedback to ppl who don’t understand cockroach phobia.)	ngsayjoe	13.723333	-5.1790137	comment	8.0	32.0	1522348898	-4.578365
17041571	Commanding infinite streaming storag	Commanding infinite streaming storage with Apache Kafka and Pyrostore	lbradstreet	13.56641	-5.006871	story	8.0	68.0	1525976258	-13.1004925
17130664	Why would someone want to use Kafka 	Why would someone want to use Kafka rather than PubSub? For a nonexpert, it seems like PubSub is just a tighter abstraction---same basic operations, fewer knobs to turn. Are there important features in Kafka, that aren't in PubSub and can't be easily built on top of PubSub?	georgewfraser	13.549238	-4.974352	comment	8.0	40.0	1527036229	-13.078073
21129796	Kafka Spawns Open-Source KarelDB	Kafka Spawns Open-Source KarelDB	lelf	13.605861	-4.9872437	story	8.0	123.0	1569959493	10.52455
21389908	Hi everyone,I'm the founder of Hashi	"Hi everyone,I'm the founder of HashiCorp.I want to make something clear up front that this does NOT allow us to see resource usage by Terraform user and does NOT result in credits or revenue sharing at all. HashiCorp has no direct access to this information in any form.Before explaining ""why"" we do this, I do want to apologize and say that adding this without proper explanation was a mistake. It isn't clear why it's there and I think enough companies have hurt users with features like this that defaulting to a negative reaction makes sense. I'm sorry. I promise (and will explain) that our usage is not nefarious, and even further this ID does not give us access to anything directly.The ""why"": the partner ID lets Microsoft better track Terraform usage internally (with data they already have "	mitchellh	13.735234	-4.384598	comment	8.0	32.0	1572370838	-12.420581
18231454	1. The idea that OSI seriously think	"1. The idea that OSI seriously thinks it gets to decide what counts as open source is laughable. This is akin to Linux being released for the first time, and Microsoft issuing a warning that they have not yet verified that Linux is a ""real"" operating system, and to stay tuned for their final judgement. The arrogance here is hilarious. I've been working in open source for years and I've never, ever heard of OSI.2. All ""open source"" really means is that the source code is available in some way/shape/form, with no implication whatsoever made about the license of said code. ""Free and open source"" on the other hand implies a permissive license.3. I don't know anything about the MongoDB license before or after these changes, I just despise the tone of this message.So to recap. OSI is just some r"	sam0x17	13.736774	-5.138288	comment	8.0	33.0	1539711948	-12.960252
18301758	Yeah, I'm not necessarily opposed to	Yeah, I'm not necessarily opposed to the general spirit of what they're trying to do here, but this license just doesn't make sense in practice.  Now that I've had more time to look at it, I'd really recommend that everybody stay the f%!# away from MongoDB.This bit in particular really hits the nail on the head:Let's assume that it is ok somehow to pass forward other open source software, solving that problem. What about my continuous integration software (e.g. CircleCI), or my business backup software (e.g. Jungle Disk) or my code hosting service (e.g. Github)? There is no logical bound to this license. Taken on its face, I would theoretically be bound to release the internal source code of services from third parties that I included in or relied upon to deliver my service.Copyleft is one	mindcrime	13.739303	-5.1369386	comment	8.0	35.0	1540482146	-12.414783
13171098	I used DynamoDB for an inherited pro	I used DynamoDB for an inherited project around the time I had gotten really good with MongoDB. I don't have any idea why anyone would ever use DynamoDB. It's like Mongo, without any of the good parts, that you can't run locally or any non-Amazon server. I don't see the benefit.Edit: Specifically, I was using some pretty advanced aggregation stuff. At the time I used it, DynamoDB had zero aggregation whatsoever.	larrik	13.525499	-4.925808	comment	8.0	47.0	1481663674	9.751228
27777728	In my opinion, databases are not cat	"In my opinion, databases are not cattle, and don't need to be automatically created (and destroyed!) in your main Terraform plan.It's perfectly OK to have a completely separate Terraform project that just configures the DB initially (or even manually, I see lots of places running DB's that predate Terraform with immutable infrastructure for everything else), and applies minor non-destructive changes in the future. This way you get the benefits of IaC, but the DB plan doesn't participate with the rest of your infrastructure that IS ok to blow away and re-create at will.BTW, Amazon RDS backups work the exact same way: Destroy the database and the backups are also destroyed. Therefore, same region automated RDS backups are fine for day-to-day, but in a true ""DB goes poof"" disaster you should "	Androider	13.688578	-4.377335	comment	8.0	28.0	1625779081	9.4594555
22425946	One interesting thing you can do wit	"One interesting thing you can do with CouchDB is that you can have a webapp where a user can specify their own database and credentials and it works over HTTP(s). That's pretty unique. I'd love to see a SaaS using CouchDB and their ""on-premise"" offering just means the user provides their own database. I'm not sure how payment would work though - perhaps some verification proxy?Firebase is the gold-standard for offline apps (as a service). CouchDB replaces Cloud Firestore, and Keycloak replaces Authentication. I haven't seen OSS equivalents of Cloud Functions, ML Kit, and the other things (e.g. In-App messaging, and Cloud Messaging). It'd be nice to have the entire stack of Firebase bundled as a group of OSS projects, including CouchDB.Sad to see that per doc access control didn't make it i"	newfeatureok	13.571858	-5.18265	comment	8.0	38.0	1582743141	9.642357
22868049	[disclaimer: CTO at Pulumi so clearl	"[disclaimer: CTO at Pulumi so clearly biased :-)]One of the things I really believe is that you can have the best of both worlds here.  Pulumi uses imperative programming languages, but is still ""declarative"".  The imperative programs are executed to build up the desired state, which can then be reliably diff'd and previewed, and can be used to enforce manual or automatic checks for correctness.  So you get the expressiveness of imperative programs (loops, conditionals, components, packages, versioning, IDE tooling, testing, error checking, etc.), but still the safeguards and reliability of declarative infrastructure-as-code (preview, gated deployments, policy enforcement, etc.).I also tend to view the perceived benefits of JSON/YAML/HCL ""simplicity"" as somewhat comparing apples to oranges"	lukehoban	13.628921	-4.462506	comment	8.0	49.0	1586882213	9.4921665
26640627	Kafka is a pretty cool technology, b	Kafka is a pretty cool technology, but for every project that I work on, it's never used because it feels like it's overkill (costly and operation heavy). Maybe I should start looking for bigger projects :D	haolez	13.582009	-4.9883757	comment	8.0	48.0	1617138878	10.53679
26881542	Can someone who has used both Pulumi	Can someone who has used both Pulumi and AWS CDK describe the differences between the two?I am using Terraform 100% now, but sometimes wish I had more than the HCL (hashicorp configuration language) syntax available to use in my code.	bloopernova	13.665146	-4.4036555	comment	8.0	40.0	1618952149	9.550519
27155863	I very much hope to see Hashicorp No	"I very much hope to see Hashicorp Nomad getting more traction, as a simpler, yet feature rich solution to probably most use cases in our industry. Pretty interesting to see the adoption of podman and also micro-vms (like fly.io does it), and other Nomad providers that does not nessasarly need to be docker.I know there are great terraform modules out there already, but i wonder if many of Hashicorp's products soon will be available as ""managed"" services as well, allowing people to try something new with less maintenance cost."	torvald	13.708084	-4.3802605	comment	8.0	25.0	1621008738	-12.963887
37581424	"Hey!
Interim tech lead of OpenTofu h"	"Hey!
Interim tech lead of OpenTofu here.I'd like to add that as of today (announced just now at OSS Bilbao) we're officially part of the Linux Foundation[0]!Hope you like the new name (it basically won the votes anywhere it was proposed) and happy to answer any questions![0]: https://www.linuxfoundation.org/press/announcing-opentofu"	cube2222	13.6475525	-4.3720512	comment	8.0	119.0	1695195022	-12.210678
37646070	It seems that “younger generation” p	It seems that “younger generation” programmers underestimate the value of governance in OSS. The recent Terraform kerluffle couldn’t have happened if Terraform was in the ASF, etc.	brand	13.684326	-4.386295	comment	8.0	90.0	1695657721	9.4939785
37677341	KIP-932: Queues for Kafka	KIP-932: Queues for Kafka	necubi	13.534991	-4.994573	story	8.0	77.0	1695832874	-13.079579
38435145	Pinecone Open-Sources AWS Reference 	Pinecone Open-Sources AWS Reference Architecture with Pulumi	zackproser	13.528258	-4.3580837	story	8.0	73.0	1701105974	9.500064
15238347	Thanks for your feedback. I'd like t	Thanks for your feedback. I'd like to know more.> The fact that the headers aren't seen by most non-technical users is moot.Why's that? (And even among your technical visitors, how many of them actually inspect the response headers?)> I find this practice pretty obnoxious to the point of looking at NGINX Plus for commercial use instead.It's good to know that price isn't the bottleneck, then. Does it make any difference to know that commercially-licensed Caddy builds don't have that header?	mholt	13.704439	-3.945928	comment	8.0	63.0	1505311578	8.846603
23543445	Nested Transactions in CockroachDB 2	Nested Transactions in CockroachDB 20.1	orangechairs	13.71681	-5.1675634	story	9.0	100.0	1592338059	9.951489
14402360	I fail to understand the hype behind	I fail to understand the hype behind Kafka, my guess is that 99% of Kafka use cases can be handled by a simple RabbitMQ/Celery etc. But maybe its not considered cool enough?	aub3bhat	13.581407	-4.990561	comment	9.0	41.0	1495555486	-13.101969
19933418	Can someone help me understand the v	Can someone help me understand the value proposition for Hermes? The only thing I can see is that it abstracts away producing to and consuming from Kafka. The use cases provided answer why you'd use a message broker system, but not why you'd want to do it over HTTP.Edit: I understand HTTP is easier than Kafka, but is this something developers really struggle with when adopting Kafka? My experience is that they struggle with the nuances, behavior, and maintenance of Kafka/ZooKeeper more than anything.I also didn't see how it dealt with concepts like exactly once delivery - any experiences in that area?	lllr_finger	13.566745	-4.9905076	comment	9.0	38.0	1558041813	-13.101981
21534568	The Consul outage that never happene	The Consul outage that never happened	dankohn1	13.61846	-4.5300617	story	9.0	100.0	1573730634	-13.144389
17982466	Introduction to HAProxy ACLs	Introduction to HAProxy ACLs	phil21	13.527736	-4.0479703	story	9.0	110.0	1536872036	8.78239
18229926	(Context: I worked on Compose/MongoH	(Context: I worked on Compose/MongoHQ for a very long time. We were the first to monetize MongoDB)I'm sure people will get riled up about this, but it makes sense. Building a business on an OSS database in a world of behemoth cloud providers is really hard. It's clear Google and Amazon (and maybe even Azure) are comfy taking OSS work, doing a ton of proprietary development on it, and leaving the companies who did all the groundwork flailing in the wind.These things are going to keep happening as long as mega tech companies (a) use OSS to commoditize other companies' products and (b) exploit permissive licenses to the max.I don't want to live in a world where the only infrastructure software we have access to is what the big companies deign to open source. Life is better when small groups o	mrkurt	13.686144	-5.099135	comment	9.0	63.0	1539702111	9.922507
18520022	Too small to Kafka but too big to wa	Too small to Kafka but too big to wait: Really simple streaming in Clojure	zonotope	13.53613	-5.013845	story	9.0	75.0	1543025207	-13.067398
18871626	Yeah, I don't understand it either. 	Yeah, I don't understand it either. There is a company which puts 300 M$ effort into developing something and then another company is using the first company's brand recognition to get a competitive edge while offering zero added value (And no, hosting mongodb in AWS not a new thing, only uninformed people would assume so. When I look around I find services like Scalegrid or MDB Atlas itself which is exactly the thing that AWS is claiming to justify their decision). So yeah, you are right, I can't see how could that be wrong either.	fogetti	13.596016	-4.817421	comment	9.0	37.0	1547095971	-0.65779585
30366711	Again, you’re leading with the defin	Again, you’re leading with the definition-of-FOSS argument.Step back from FOSS for a second.I think most people would agree that there’s somewhat of a moral issue with just taking someone else’s open source software and just hosting it and making billions, with nothing for the creators, because you are a megacorp who is good at hosting.Now, is there a way to solve that and have the benefits of FOSS?Both Mongo and MariaDB have tried to address this with licensing - MariaDB seems to have done this much less clumsily than Mongo, but both still had FOSS advocates shrieking---EDIT to include response to below comments so everyone doesn't keep repeating the same things:> Either your product is fully free and you accept that people can fork it, even Amazon, or you choose a restrictive license. Yo	skrtskrt	13.665803	-5.070858	comment	9.0	68.0	1645050622	9.948638
12067307	An overview of all possible calls in	An overview of all possible calls in Elasticsearch	nl5887	13.545364	-4.7931457	story	9.0	98.0	1468185415	-9.999525
12501232	Three by Kafka	Three by Kafka	benbreen	13.654541	-4.9601274	story	9.0	76.0	1473887430	10.511539
26767035	PrettyZoo: Pretty Nice Zookeeper GUI	PrettyZoo: Pretty Nice Zookeeper GUI	vran_dev	13.546763	-4.8760595	story	9.0	87.0	1618107907	-13.165191
26812531	On a related note, CDK for Terraform	On a related note, CDK for Terraform allows DevOps practitioners to use a variety of programming languages instead of HCL. I've really enjoyed modeling my AWS environments with Python using Terraform only as the engine.More info here:https://github.com/hashicorp/terraform-cdk	cmclaughlin	13.681736	-4.399231	comment	9.0	69.0	1618431744	9.51034
26816115	Hijacking a bit, but does anyone hav	Hijacking a bit, but does anyone have any good resources/guides around managing terraform state in larger organizations? Terraform enterprise seems to address this but I was wondering if there's workflows that allowed subsections of infrastructure (think teams or systems) and didn't rely on a re-evaluation of the entire organization's assets. So far the only approach I've seen is having protected high level (VPC, subnets etc) as a separate state and using terraform_remote_state to reference those.	ghjnut	13.69141	-4.3843274	comment	9.0	28.0	1618459829	9.52059
37581637	"""OpenTofu"" is cute, but tofu has not"	"""OpenTofu"" is cute, but tofu has nothing to do with terraforming.How about ""Genesis"" or ""Reliant"" or ""Marcus"" or ""Kruge""?"	midoridensha	13.665665	-4.355795	comment	9.0	41.0	1695196806	9.48514
15285264	Terraform Module Registry	Terraform Module Registry	ApsOps	13.703162	-4.3880706	story	9.0	110.0	1505833563	9.50015
25515257	3) is not in line with an open sourc	3) is not in line with an open source philosophy.EDIT: Detrimental to the original. Eg. Amazon forking and selling MongoDB.	ssakamoto	13.723671	-5.146686	comment	9.0	36.0	1608707515	9.90499
26419085	What do people use Ansible for that 	What do people use Ansible for that can't be done with Terraform and vice-versa?	MuffinFlavored	13.685983	-4.412097	comment	9.0	37.0	1615426655	9.529165
35560853	Sorry to be offtopic, but I've been 	Sorry to be offtopic, but I've been using Pulumi at work for the past 6 months and I'm really not impressed. It's basically just Terraform but worse, with a million ways to declare your infrastructure instead of just one. Infrastructure people tend not to write the best code and from my observation the extra freedom of an imperative language just makes stuff even more complex and harder to maintain. It's also much harder to automate than Terraform, I am not aware of any equivalent to Atlantis.Also, Pulumi previews (equivalent to plans) are complete bullshit. If you don't write your code carefully, resources can be created and removed and you won't know it's going to happen until you start applying... it's an engineer's worst nightmare when a tool lies.	c7DJTLrn	13.682484	-4.3958664	comment	9.0	51.0	1681413994	9.550829
29504167	I don't know a single person who pre	I don't know a single person who prefers HCL over literally anything else, but still, it's a happy day for them so I won't air my entitled little complaints and instead say: thank you hashicorp!You made life as a cloud infra beard better for a while, and I wish you all success going onwards.	cyberpunk	13.666341	-4.4500513	comment	9.0	33.0	1639090368	13.305302
34883063	Terraria might be the most successfu	Terraria might be the most successful example from a 1-2 person dev studio. Does anyone know of a more successful example?	shanebellone	13.692404	-4.3912573	comment	9.0	27.0	1676997124	9.435342
32202771	Kafka on Kubernetes: What could go w	Kafka on Kubernetes: What could go wrong?	gbrown_	13.596715	-4.989934	story	9.0	35.0	1658580107	-13.24043
32384662	Show HN: Build for any cloud with th	Show HN: Build for any cloud with the same code	goncalo-r	13.651623	-4.369729	story	9.0	54.0	1659961645	-0.7970282
20362179	Understanding Kafka with Factorio	Understanding Kafka with Factorio	DonHopkins	13.648096	-4.9772344	story	10.0	318.0	1562331558	10.582184
30727137	In my opinion, these changes are eff	In my opinion, these changes are effectively supply-chain attacks in their execution. That would make them bad regardless of how correct their expressed positions are about the Ukraine war.The fact that there has not been a strong push back confirms my suspicion that by now, everyone has gotten used to Node and NPM being insecure and silently accepted it as a way of life. Similarly, those Terraform scripts are apparently esoteric enough to only be used by a tiny minority of software developers, or else we would have heard about it in a different way.Thank god nobody did similar shenanigans to open source projects that are actually in wide use :)	fxtentacle	13.70543	-4.389221	comment	10.0	97.0	1647635532	9.50587
37084054	>We tried many times to contribute u	">We tried many times to contribute upstream fixes to Terraform providers, but HashiCorp would never accept them. So we've had to maintain forks. They lost their OSS DNA a long time ago, and this move just puts the final nail in the coffin.OSS doesn't mean that you have to accept any PRs that showed up in your repo, nor does it mean that you have to let a competitor steer your project simply because you're building in the open. Without further elaboration, what you're calling ""upstream fixes"" may have been considered ""working as intended"" at HashiCorp. As I'm sure you're well aware, every contribution has to be maintained and each increasing contribution comes with an additional burden. Responsible maintainers on large scale OSS projects must be selective about the code they let in."	redeux	13.729133	-4.381064	comment	10.0	33.0	1691717774	-12.479964
37088871	And, if those projects had been lice	And, if those projects had been licensed using AGPL, then Hashicorp would not be able to relicense this without negotiating a non-GPL license for themselves, first.I don't understand why GPL gets so much hate on HN.	appleflaxen	13.710648	-4.3659487	comment	10.0	111.0	1691763074	-12.855454
37146955	These days I'd rather develop on Cad	These days I'd rather develop on Caddy than Nginx.	commandersaki	13.6926155	-3.9622276	comment	10.0	42.0	1692193703	8.817234
37256115	My experience contributing to HashiC	My experience contributing to HashiCorp open-source projects	raxod502	13.733337	-4.350896	story	10.0	62.0	1692921707	13.275211
37394616	> We're consulting with a couple of 	"> We're consulting with a couple of legal experts regarding the name, and it seems that even OpenTF won't be the final name due to use of ""TF"" in it.Interesting that having ""TF"" in the name could cause issues.Source: https://github.com/opentffoundation/opentf/issues/273#issuec..."	thecosmicfrog	13.689108	-4.385313	comment	10.0	40.0	1693933083	-12.259711
24754778	Terraform at Scale	Terraform at Scale	mooreds	13.69201	-4.3801856	story	10.0	83.0	1602513646	9.490928
25241760	Ask HN: IDs that are URL-friendly an	Ask HN: IDs that are URL-friendly and fairly short?	tosh	13.922649	-5.1781564	story	10.0	7.0	1606608860	-13.647666
18285492	Terraform Collaboration for Everyone	Terraform Collaboration for Everyone	mwarkentin	13.7059555	-4.3849874	story	10.0	103.0	1540316031	9.546979
18360924	Hello, I'm one of the founders of Ha	"Hello, I'm one of the founders of HashiCorp! We're super excited about this. I'm really proud of the team that got us to this point, thankful to our communities, and just generally excited about the future for us.The project that really kicked off HashiCorp was Vagrant, and I ""launched"" it right here on HN over 8 years ago: https://news.ycombinator.com/item?id=1175901 So its always fun to see things come back around. :) For those that are less familiar these days, HashiCorp now has many major OSS projects: Vagrant, Packer, Consul, Terraform, Vault, Nomad (in addition to lots of minor ones and libraries) addressing different areas.For the HN crowd, there are a couple background viewpoints that I would also like to share that may be helpful on painting the backdrop on the product and busines"	mitchellh	13.708669	-4.3821273	comment	10.0	39.0	1541137164	-12.695625
12214444	What are people's thoughts on Cloudf	What are people's thoughts on Cloudformation vs Terraform for a project that only ever expects to use AWS?	akurilin	13.624863	-4.3507924	comment	10.0	39.0	1470182975	9.502931
12325023	Ouch! My feelings are hurt. :(Everyo	"Ouch! My feelings are hurt. :(Everyone has a different experience and perception I suppose.I agree we have a long way to go, but I disagree that our tooling is ""very incomplete"" OR ""un-battle-tested"".Ignoring Vagrant as you did, Consul is used at multi-thousand node (per datacenter) scale by dozens of companies and a couple specific companies are using it at an even larger scale. And that's ignoring the thousands of hobbyist and smaller company usage at dozen to hundred node scale. I only don't mention specific names because I don't have explicit permission, but you'll just have to trust I don't intend to lie here.Vault as another example: if you interacted with a financial institution, your transaction at some point likely hit a Vault cluster. Did you visit some websites today? One of the"	mitchellh	13.630993	-4.350253	comment	10.0	34.0	1471663639	-12.86802
28507193	HashiCorp Terraform and Community Co	HashiCorp Terraform and Community Contributions	airhangerf15	13.736149	-4.3745575	story	10.0	83.0	1631499509	-12.414929
23131982	Cognito:yes, its a complex poorly do	Cognito:yes, its a complex poorly documented pile of shite. BUT. It does work as a reasonably secure OAUTH2 thingamebob. However I was told by my AWS account manager that auth0 was the way forward, and I agree.Cloudformation:Meh, I have about 35k lines of active CF at the moment. Its much of a muchness. Unless you are using parameters with selectors, you are going to have a bad time. Hard linking templates together (I assume thats what nested stacks are) is terrible. I've only briefly used terraform, so I have no idea if its much better.CF _could be_ a lot better. Like compile time validation, not just in time. that would stop a lot of anger when you realise you've spelt a CF parameter wrong(or the value fails validation) but only after you've spent ten minutes for it to spin up. Thats fra	KaiserPro	13.646032	-4.3706417	comment	10.0	54.0	1589112030	9.499087
26640859	Oh hell yeah! That's great news, ton	Oh hell yeah! That's great news, tons of work went into this -- props to the contributors!I will take the opportunity to say that Kafka is kind of painful, with or without ZK. Check out NATS! [0]. It doesn't solve all the same problems, but is so much easier to use (during development especially) and can do a lot of the same things.[0]: https://docs.nats.io/whats_new_20	cmckn	13.584245	-4.973295	comment	10.0	58.0	1617140157	-13.139979
27436605	Terraform is such an underappreciate	Terraform is such an underappreciated tool. It seems like so much of the hate surrounds HCL1 (back in Terraform before 0.12) and doesn't reflect modern Terraform.For example, after introducing `for_each` and dynamic blocks, it's possible to nearly entirely ditch variables files and local modules, and just add more infrastructure by editing a local YAML file. The only variables your Terraform code should have should be credentials / other secrets that are not loaded from environment variables by providers. A great public example of this usage pattern is supplied by https://github.com/concourse/governance to manage their GitHub repositories.	solatic	13.697569	-4.389169	comment	10.0	66.0	1623166798	9.520891
37648067	Sorry for the naivety/not obvious fr	Sorry for the naivety/not obvious from the comments: is that too much or too little? (I've used RabbitMQ much more than Kafka.)	alexchamberlain	13.52872	-4.9956226	comment	10.0	31.0	1695665104	-13.088833
37978060	OpenTelemetry at Scale: Using Kafka 	OpenTelemetry at Scale: Using Kafka to handle bursty traffic	pranay01	13.521414	-4.9599776	story	10.0	181.0	1698001108	-13.084286
38579695	> details about the project, dubbed 	> details about the project, dubbed OpenBao.Oh interesting, I wonder who did it.> co-founder and CEO of DevOps automation biz Scalr and one of the organizers of OpenTofu, a fork of TerraformYeah, alright then.Does nobody else find it even slightly on-the-nose that the guy behind the TF fork just happens to also run a devops company himself?> Blatantly take someone else’s work> mobilise the community by calling them hostile because of licensing> spin up a business to build on the community> make bankNow I’m not saying that what’s happened, but I am saying it sure does smell funny.	FridgeSeal	13.649271	-4.351884	comment	10.0	54.0	1702108605	-11.917037
14890716	The Kafkaesque Process of Cancer Dia	The Kafkaesque Process of Cancer Diagnosis	dnetesn	13.68816	-4.952241	story	10.0	80.0	1501496140	10.576687
15461062	The real Terraria code isn't much be	The real Terraria code isn't much better. Here's their 3MB [decompiled] NPC.cs: https://raw.githubusercontent.com/csnxs/Terraria/67de21a27e1...They had serious problems implementing multiplayer because they had to synchronize objects with 50KB of state every frame.	Scaevolus	13.709867	-4.392643	comment	10.0	49.0	1507840213	9.430262
20285401	Franz Kafka Agonized over Writer’s B	Franz Kafka Agonized over Writer’s Block (2017)	taylorbuley	13.678326	-4.95945	story	11.0	42.0	1561559802	10.514437
14031577	Switching from Nginx to Caddy	Switching from Nginx to Caddy	kixpanganiban	13.70587	-3.9664369	story	11.0	21.0	1491306907	8.818344
30857047	A Foolish Consistency: Consul at Fly	A Foolish Consistency: Consul at Fly.io	soheilpro	13.609845	-4.533672	story	11.0	148.0	1648656100	-13.148281
29396319	Scaling Kafka at Honeycomb	Scaling Kafka at Honeycomb	i0exception	13.579223	-4.9645195	story	11.0	166.0	1638300321	10.367457
36967992	Franz Kafka was a healthcare claims 	Franz Kafka was a healthcare claims administrator and insurance underwriter	alakep	13.678802	-4.963262	story	11.0	75.0	1690960841	10.54847
37088780	> It’s also worth remembering that T	> It’s also worth remembering that Terraform itself is built on top of multiple open source libraries and an open source ecosystem. Without the volunteer work of hundreds of unpaid individuals, HashiCorp products would not be successful, there would be no ecosystem, and the company would not exist.Hear, hear! (edited, thx)EDIT:  Also, if you are contributing to open source, read carefully before submitting that PR.  Do not contribute to projects that make you agree to a CLA.  It's becoming more and more common for projects to include one or two lines in the README and that's it. All your code are belong to us.  I don't know if that would hold up, but why contribute your time and effort?	pevey	13.706767	-4.383036	comment	11.0	151.0	1691762565	-12.388329
37138248	As a regular end-user of Terraform, 	As a regular end-user of Terraform, what difference does BSL vs MPL make to me? From reading this article it seems not very much? Perhaps I'm misreading this.	mousetree	13.697774	-4.3823028	comment	11.0	41.0	1692127846	9.472545
13357026	Caddy – a modern web server (vs. Ngi	Caddy – a modern web server (vs. Nginx)	n1try	13.703291	-3.9424367	story	11.0	62.0	1483976092	8.806561
13573523	Planet to Acquire Terra Bella from G	Planet to Acquire Terra Bella from Google	swatkat	13.677072	-4.331928	story	11.0	181.0	1486317272	9.437435
12504204	Consul 0.7	Consul 0.7	harmw	13.62421	-4.5250187	story	11.0	118.0	1473926135	-13.131765
23207377	Kafka Removing Zookeeper Dependency	Kafka Removing Zookeeper Dependency	manigandham	13.595222	-4.977494	story	11.0	314.0	1589664811	-13.16075
33202744	> - Terraform to create the API gate	> - Terraform to create the API gateway, database, lambdas, queues, Route 53 records: 1 week- Terraform to create the IAM policies: 4 weeksPerhaps it's because I am very familiar with the aforementioned tool and cloud but 5 weeks for writing those resources gives me the impresion of:1. Lack of experience on AWS.2. Lack of experience with Terraform.3. Both.I don't want to sound arrogant by any means but a Terraform project for something like that, documented, with its CI and applying changes via CD, would take me 4 days being generous.	Octabrain	13.666361	-4.364901	comment	11.0	39.0	1665751243	9.55312
26641724	If designing a new system is there a	If designing a new system is there any reason to choose Kafka over Pulsar at this point?Apart from Confluent wanting you to use Kafka so they can keep leeching money off you by hijacking de facto ownership of an open source project, of course.	taywrobel	13.575556	-4.971394	comment	11.0	62.0	1617146211	-13.123786
15487084	I use Consul at work, and I do like 	I use Consul at work, and I do like it, but I have to ask a kind of obvious question; why would I use Consul over something that's more industry-standard like Zookeeper?I'm not asking this passive aggressively, I mostly want to know what features it adds over a vanilla Zookeeper setup.	tombert	13.608899	-4.6332073	comment	11.0	51.0	1508192093	-13.163443
15486721	Consul 1.0 Released	Consul 1.0 Released	schmichael	13.6213255	-4.517055	story	11.0	206.0	1508188768	-13.127405
15601666	I'm currently comparing using Kinesi	I'm currently comparing using Kinesis vs running a small scale Kafka cluster on AWS. The ecosystem around Kafka is great, especially Kafka connect's stuff like Debezium. But I don't know if it's worth the trouble to deal with the extra operational complexity. Any opinions on administrating Kafka at small scale?	faizshah	13.5760765	-4.9909716	comment	11.0	75.0	1509548121	-13.105905
23819050	I've used Kafka a lot in the past an	"I've used Kafka a lot in the past and I've been looking at Pulsar. The broker being stateless is great. I've had issues with moving partitions around in Kafka.That being said, I'm getting tired of managing these clunky memory-hungry JVM-based systems that rely on external  dependencies like Apache Zookeeper and BookKeeper. They may be necessary if you're Yahoo, but I would argue that for the vast majority of companies, these complex systems create so many administration headaches that the net productivity impact is negative. I've spend days or weeks debugging Kafka issues. I almost feel like ""big clunky heavy JVM enterprise software"" has become synonymous with Apache projects.If you don't absolutely need the messaging guarantees I would recommend looking into NATS (https://nats.io/) - it's"	gas9S9zw3P9c	13.571199	-4.9903865	comment	12.0	57.0	1594634578	-13.108468
24099037	Show HN: Kowl – An Open Source WebUI	Show HN: Kowl – An Open Source WebUI for Apache Kafka with a good UI and UX	weeco	13.593841	-4.989689	story	12.0	164.0	1596974682	-13.127824
13899581	I was initially a huge fan but now I	"I was initially a huge fan but now I hate it. It re-invents so many unnecessary wheels that it is downright obnoxious. There are no loops, if statements, variables. Things that have been in programming languages since day 1. It re-invents modules, badly. Has weird hacks like null resources and external data providers to get around shortcomings in their ""declarative"" model. And a few other things I'm forgetting. Oh, now they're adding ""environments"". That's just dandy because they got everything else so right.Every place I've seen Terraform used invariably runs into these shortcomings and the workarounds range from using Erb and Jinja templates to generate Terraform templates to just ditching it entirely and using home-grown solutions. Terraform should have been a library in an actual progr"	dkarapetyan	13.697053	-4.3962293	comment	12.0	62.0	1489804259	9.510326
14308534	"I think the name ""Cockroach"" was a r"	"I think the name ""Cockroach"" was a really poor decision from a marketing standpoint. The team intended to convey durability, since cockroaches can live through anything. But when I think of a cockroach, I think, gross, disgusting, etc."	johnwheeler	13.716408	-5.1740274	comment	12.0	58.0	1494427193	10.55789
14309984	It's not bikeshedding when the bikes	It's not bikeshedding when the bikeshed's color will actually have concrete effects on adoption.  Most people -- i.e. in procurement, management, finance, and others you need to appeal to -- don't want anything to do with cockroaches.  The idea disgusts them at a gut level, not something you can talk away.HN users are giving vital advice, for free. Those who ignore it will have only themselves to blame.As I say every time this comes up, would you be so dismissive about critics of naming a product PubesDB? Or GonorrheaDB? Or [n-word]DB? Then you agree that disgust-invoking connotations of the name matter, and we're just haggling over the details.Ubuntu, Mongo, Swagger (edit: Hadoop also) ... they're weird, sure, but they don't evoke the visceral feeling of disgust that cockroaches do.	SilasX	13.72297	-5.150342	comment	12.0	70.0	1494437849	-4.5975623
31454581	NGINX Proxy Manager	NGINX Proxy Manager	indigodaddy	13.535026	-4.115096	story	12.0	81.0	1653097581	8.765963
25931790	Doubling down on permissive licensin	Doubling down on permissive licensing and the Elasticsearch lockdown	carlotasoto	13.550682	-4.565214	story	12.0	120.0	1611771781	-9.894003
28903614	Issues we've encountered while build	Issues we've encountered while building a Kafka based data processing pipeline	poolik	13.582244	-4.9818683	story	12.0	158.0	1634548966	-13.064454
35158504	The article is pretty biased by comp	The article is pretty biased by comparing the complexity a schema free scenario (MQTT) to Kafka with Schema.However his points still remains: Most of the usage of Kafka I have seen in production are the result of a random Architect/Techlead who tried follow the hype train on event sourcing and a recipe for disaster.And in 90% of the case, that could have been replaced by a trivial lightweight mosquito (MQTT) server for 10% of the operating cost.Kafka is a monster of complexity notoriously hard to operate (Hello ZooKeeper) and to understand properly (Hello ordering, persistency and partitions).If all you need is a simple stupid publish/subscribe broker with topics/auth management, do a favour to yourself, stay away from it.	adev_	13.57943	-5.009286	comment	12.0	74.0	1678827637	-13.093812
37037716	> In our experience, Kafka is one of	> In our experience, Kafka is one of the most polarizing technologies in the data space. Some people hate it, some people swear by it, but almost every technology company uses it.(emphasis added)Surely that's false?Or, I mean, neither of us are providing any evidence here... For my part, 0 of the last 6 companies I've worked for used it. The company before that did (I drove its adoption), but we later abandoned it.Linkedin built Kafka for massive-scale problems that 99% of us don't have. Though technologists have a well-earned reputation for using tech they don't need, my perception is that most of us are succeeding in avoiding the use of Kafka.	slotrans	13.581103	-4.9945965	comment	12.0	122.0	1691429578	10.518559
37218783	Manipulating Terraform states for fu	Manipulating Terraform states for fun, profit, and reusability	lucasfcosta	13.710033	-4.391565	story	12.0	54.0	1692679510	9.46079
32624118	Ask HN: What has been your experienc	Ask HN: What has been your experience with CockroachDB?	punkpeye	13.700057	-5.182653	story	12.0	57.0	1661641406	10.045596
32657155	HashiCorp’s multi-product strategy	HashiCorp’s multi-product strategy	gmays	13.735037	-4.3614993	story	12.0	102.0	1661907980	-12.506727
31921313	Show HN: Infracost (YC W21): Cloud C	Show HN: Infracost (YC W21): Cloud Costs for Terraform in VSCode	hugorut	13.584267	-4.321062	story	12.0	76.0	1656515544	9.428218
32094664	I'be been working with DynamoDB dail	I'be been working with DynamoDB daily for a few years now, and whilst I like working with it and the specific scenario it solves for us, I'd still urge anyone thinking about using it to carefully reconsider whether their problem is truly unique enough that a traditional RDBMS couldn't handle it with some tuning. Theycan be unbelievably performant and give so much stuff for free.Designing application specifically for DynamoDB will take _a lot_ of time and effort. I think we could have saved almost a third of our entire development time had we used more of the boring stuff.	bistablesulphur	13.5235	-4.8847923	comment	12.0	68.0	1657799329	9.687482
21608628	I was at an Elasticsearch meetup yes	"I was at an Elasticsearch meetup yesterday where we had a good laugh about several similar scandals in Germany recently involving completely unprotected Elasticsearch running on a public IP address without a firewall (e.g. https://www.golem.de/news/elasticsearch-datenleak-bei-conrad..., in German). This beats any of that.Out of the box it does not even bind to a public internet address. Somebody configured this to 'fix' that and then went on to make sure the thing was reachable from the public internet on a non standard port that on most OSes would require you to disable the firewall or open a port. The ES manual section for network settings is pretty clear about this with a nice warning at the top: ""Never expose an unprotected node to the public internet.""Giving read access is one thing. "	jillesvangurp	13.530619	-4.666853	comment	12.0	110.0	1574448445	-9.992815
18156599	How to read Kafka: part I	How to read Kafka: part I	agronaut	13.65971	-4.970741	story	12.0	141.0	1538851650	10.54187
18871483	Amazon was using MongoDB without pay	Amazon was using MongoDB without paying for it.MongoDB found that objectionable, and changed the license such that Amazon would either have to pay, or stop using it.Amazon stopped using it, and started using its own in-house implementation instead (presumably because it was cheaper to develop it than to pay MongoDB).So, MongoDB got exactly what they asked for. It's just that, when they forced Amazon to make a choice, they didn't expect one of the options they gave them to be viable. They were wrong.I don't see how Amazon is in the wrong here. They are no longer using MongoDB for free, as the authors demanded. They did not reuse any code. They are not advertising their replacement as MongoDB, either.Is it because of API compatibility? But the notion that one cannot reimplement a public API 	int_19h	13.710788	-5.10901	comment	12.0	78.0	1547093827	9.907369
12213935	Terraform 0.7 released	Terraform 0.7 released	Kaedon	13.70546	-4.3842535	story	12.0	177.0	1470176989	9.41047
33094720	Show HN: Kafka 0.8.0 on Cloudflare W	Show HN: Kafka 0.8.0 on Cloudflare Workers	maxwellpeterson	13.587427	-4.9670897	story	12.0	148.0	1664973765	-13.11993
33684666	Show HN: A native macOS client for A	Show HN: A native macOS client for Apache Kafka	Bogdanp	13.589669	-4.977974	story	12.0	197.0	1668974427	-13.137107
33829458	HAProxy 2.7	HAProxy 2.7	markonen	13.541309	-4.0774817	story	12.0	165.0	1669982784	8.766341
38578247	HashiCorp Vault forked into OpenBAO	HashiCorp Vault forked into OpenBAO	geerlingguy	13.759849	-4.2812657	story	12.0	181.0	1702092430	-12.273777
15601222	Apache Kafka Goes 1.0	Apache Kafka Goes 1.0	pradeepchhetri	13.603592	-4.981433	story	12.0	392.0	1509545330	10.512722
20595194	KIP-500: Replace ZooKeeper with a Se	KIP-500: Replace ZooKeeper with a Self-Managed Metadata Quorum	telekid	13.553815	-4.896074	story	13.0	139.0	1564769279	-13.195043
31437096	I am curious why I should consider u	I am curious why I should consider using nginx when Caddy (https://caddyserver.com) exists. It seems to have more activity behind it.	nikivi	13.701821	-3.9602072	comment	13.0	100.0	1652979308	8.854387
31653710	MongoDB Releases Queryable Encryptio	MongoDB Releases Queryable Encryption Preview	andrewbarba	13.716109	-5.1622405	story	13.0	120.0	1654607379	9.897876
25536133	Draw.io and Terraform = Brainboard, 	Draw.io and Terraform = Brainboard, Graphical Way to Do Terraform	chafik-bel	13.7080145	-4.385845	story	13.0	101.0	1608900169	9.466948
35887117	DEI Brings Kafka to My Law School	DEI Brings Kafka to My Law School	arbuge	13.666295	-4.9675236	story	13.0	59.0	1683725603	-13.232812
34955551	Couchbase withdraws non-profit event	Couchbase withdraws non-profit event sponshorship 4 days before	tecleandor	13.634666	-5.1802626	story	13.0	104.0	1677500250	9.6685295
37082324	Pulumi Founder/CEO here.The blog pos	Pulumi Founder/CEO here.The blog post is disingenuous. We tried many times to contribute upstream fixes to Terraform providers, but HashiCorp would never accept them. So we've had to maintain forks. They lost their OSS DNA a long time ago, and this move just puts the final nail in the coffin.Thankfully over time, they already pushed responsibility for most Terraform providers back onto their partners, so I'm hopeful the ecosystem of providers can still stay vibrant and open.We are deep believers in open source---heck my last project at Microsoft was to take .NET open source and cross-platform, our CTO helped found TypeScript, and Pulumi is an Apache open source project---it seems HashiCorp no longer is.	joeduffy	13.700703	-4.3811707	comment	13.0	103.0	1691704809	9.504349
37138359	Actually, can we just kill Terraform	"Actually, can we just kill Terraform? Please?Terraform has a bad design. It's a configuration management tool, first and foremost, and configuration management tools need to do one thing well: fix things. Not just ""change state"", but functionally, actually fix some software to make it work again. Terraform is really bad at this. It's difficult to configure, difficult to operate, and it likes to find any reason at all to just blow up and force you to figure out how to make the software work again.Configuration management tools should make your life easier, not harder. You shouldn't have to hire a ""Terraform Admin with 3 yrs experience"" just to learn all the bizarre quirks of this one tool just to get your S3 bucket to have the correct policy again. You shouldn't have to write Go tests just "	0xbadcafebee	13.708406	-4.401184	comment	13.0	57.0	1692128449	9.464415
37241406	The issue never seems as big a deal 	The issue never seems as big a deal to me as others make it out to be… when a company switches the license, it is only for new development going forward. Any versions you were already using continue to have the same license, and you can keep using them.The only thing you are losing is (perhaps) the ability to continue to receive free patches and updates from the project. This is no different than if the company went out of business completely. You can still make your own updates to the last OS version, and you are free to solicit contributions from others to your fork.Is Hashicorp switching to a BSL any more disruptive to users of the software than if Hashicorp went out of business?	cortesoft	13.731609	-4.36138	comment	13.0	82.0	1692821265	13.282948
16264845	Why we wrote our Kafka Client in Pon	Why we wrote our Kafka Client in Pony	hackmanytrades	13.599201	-4.9884996	story	13.0	137.0	1517317096	10.536678
18924320	Michael from MongoDB here... Greed? 	Michael from MongoDB here... Greed? You realize that anyone can still view, download, use, develop, modify and do everything they could do prior to the change - right? The only difference is that if they decide to offer the licensed software as a public service they must release the other components of the service under the same license.	merlynn	13.73543	-5.147399	comment	13.0	48.0	1547668042	9.951056
27908107	MongoDB Wire Protocol Specification 	MongoDB Wire Protocol Specification License	aleksi	13.732536	-5.1500955	story	13.0	81.0	1626883785	9.903294
27434801	Serious question. What value does Te	Serious question. What value does Terraform provide?Two years ago I looked into it and rather then having an abstraction from cloud providers it seemed to require to still target (and code against) each one specifically.So, I was quite disappointed as I thought the value proposition was to not have to know x cloud provider specific terminologies.Any insights much appreciated.Edit: I was a little worried asking such a naive question but the comments are super useful! Thanks everyone for sharing your insights.	kerng	13.673141	-4.356317	comment	13.0	45.0	1623158570	9.478247
37733334	I find it interesting that it’s quot	I find it interesting that it’s quoted random IDs are bad for performance, because it’s actually better for distributed storage systems because you don’t hotspot on a single node. For example see: https://stackoverflow.com/a/53901549 and https://medium.com/google-cloud/cloud-spanner-choosing-the-r...	rockwotj	13.891771	-5.1764007	comment	13.0	55.0	1696214299	4.420737
37733717	This is great for internal distribut	This is great for internal distributed systems where having ordered keys is useful, however, it should probably be noted that these probably shouldn't be used as public identifiers (even though this will probably be the defacto standard and used publicly without thought).Having any information, specifically time information, leaking from your systems may or may not have unanticipated security or business implications. (e.g. knowing when session tokens or accounts are created).	jonhohle	13.927001	-5.1356072	comment	13.0	177.0	1696218145	-13.577775
14778466	Show HN: Fastest search engine in th	Show HN: Fastest search engine in the world	marcuslager	13.519869	-5.1280847	story	13.0	38.0	1500147001	9.858373
14539814	Terraform Gotchas and How We Work Ar	Terraform Gotchas and How We Work Around Them	kalmar	13.704213	-4.383295	story	14.0	158.0	1497293016	9.449401
14670801	Exactly-once Semantics: How Kafka Do	Exactly-once Semantics: How Kafka Does it	listentojohan	13.594925	-4.9735937	story	14.0	259.0	1498831698	10.614001
31759234	How Palo Alto Networks Replaced Kafk	How Palo Alto Networks Replaced Kafka with ScyllaDB for Stream Processing	carpintech	13.58392	-4.988759	story	14.0	126.0	1655325858	-13.109973
29020460	Creating my personal cloud with Hash	Creating my personal cloud with HashiCorp	CGamesPlay	13.708203	-4.363388	story	14.0	205.0	1635377822	-12.623962
37088591	OpenTerraform – an MPL fork of Terra	OpenTerraform – an MPL fork of Terraform after HashiCorp's license change	igorzij	13.722357	-4.3776073	story	14.0	151.0	1691761301	-12.353293
19653843	What I find unfortunate about infras	What I find unfortunate about infrastructure-as-code tooling is that a lot of the tooling isn't actually using code, but instead uses esoteric configuration languages. Indeed, the article refers to Terraform with its custom syntax.Imho tools should use actual code (whether it's TypeScript or Kotlin or whatever) instead of reinventing constructs like loops and string interpolation.Thankfully these tools are getting more popular, because frankly I can't stand configuring another Kubernetes or GCP resource using a huge block of copy/pasted YAML.	royjacobs	13.674863	-4.414805	comment	14.0	71.0	1555171959	9.50806
12584380	Show HN: Live visualization of Kafka	Show HN: Live visualization of Kafka streams	yairwein	13.555829	-4.9949675	story	14.0	144.0	1474914767	-13.1037
33850659	User IDs probably shouldn't be passe	User IDs probably shouldn't be passed around as ints (2018)	kristianp	13.867108	-5.163361	story	14.0	41.0	1670128620	-13.655154
37593133	Terraria developer bashes Unity, don	Terraria developer bashes Unity, donates $200k to open source alternatives	theogravity	13.670606	-4.3572607	story	14.0	419.0	1695269509	6.591782
31692259	Show HN: Terragen.dev – Automagicall	Show HN: Terragen.dev – Automagically Generate Terraform for AWS	igorzij	13.67229	-4.3667994	story	15.0	73.0	1654857734	9.511578
25611259	Create Terraform files using Python 	Create Terraform files using Python scripts	sharjeelsayed	13.702197	-4.3863406	story	15.0	60.0	1609575416	9.530763
36238986	HashiCorp just let go 8%	HashiCorp just let go 8%	ushakov	13.759566	-4.333132	story	15.0	189.0	1686214268	-12.478379
36303074	Converting Full Terraform Programs t	Converting Full Terraform Programs to Pulumi	hekul	13.693299	-4.3943505	story	15.0	79.0	1686613657	9.511091
29304414	Understanding Kafka with Factorio (2	Understanding Kafka with Factorio (2019)	pul	13.643815	-4.9805613	story	15.0	133.0	1637572431	-13.007672
29502223	Don’t understand why anyone would ne	Don’t understand why anyone would need their cloud products. Who needs Terraform or Nomad or Vault as a service?	altdataseller	13.521505	-4.1893106	comment	15.0	77.0	1639080270	-12.526733
36710266	Understanding Kafka with Factorio (2	Understanding Kafka with Factorio (2019)	pul	13.647607	-4.9847493	story	15.0	196.0	1689260416	10.56508
25180355	A Month of Terraform	A Month of Terraform	ingve	13.704319	-4.382364	story	15.0	101.0	1606073976	9.453343
39322378	So by and large I agree with the thi	So by and large I agree with the things in this article.  It's interesting that the points I disagree with the author on are all SaaS products:> Moving off JIRA onto linearI don't get the hype.  Linear is fine and all but I constantly find things I either can't or don't know how to do.  How do I make different ticket types with different sets of fields?  No clue.> Not using Terraform Cloud No RegretsI generally recommend Terraform Cloud - it's easy for you to grow your own in house system that works fine for a few years and gradually ends up costing you in the long run if you don't.> GitHub actions for CI/CD  Endorse-ishUse Gitlab> Datadog RegretStrong disagree - it's easily the best monitoring/observability tool on the market by a wide margin.Cost is the most common complaint and it's alm	CSMastermind	13.651315	-4.3641086	comment	15.0	86.0	1707526614	9.54535
28425849	Terraform is currently not reviewing	Terraform is currently not reviewing community pull requests	jaxxstorm	13.712495	-4.3862123	story	15.0	249.0	1630861889	9.496474
22493938	The odd thing about having 20 years 	"The odd thing about having 20 years of experience (while simultaneously being wide-eyed about new tech), is that I now have enough confidence to read interesting posts (like any post on k8s) and not think ""I HAVE to be doing this"" – and rather think ""good to know when I do need it.""Even for the highest scale app I've worked on (which was something like 20 requests per second, not silicon valley insane but more than average), we got by perfectly fine with 3 web servers behind a load balancer, hooked up to a hot-failover RDS instance. And we had 100% uptime in 3 years.I feel things like Packer (allowing for deterministic construction of your server) and Terraform are a lot more necessary at any scale for generally good hygiene and disaster recovery."	atonse	13.606538	-4.3691993	comment	15.0	119.0	1583419927	-5.114802
38578771	Terraform module for scalable GitHub	Terraform module for scalable GitHub action runners on AWS	ta988	13.665413	-4.3727775	story	15.0	120.0	1702098182	-11.899854
23599427	Kafka: The Rescue Will Begin in Its 	Kafka: The Rescue Will Begin in Its Own Time	mitchbob	13.637474	-4.9707885	story	16.0	207.0	1592828901	10.561915
25650907	GUIDs Are Not the Only Answer	GUIDs Are Not the Only Answer	ublaze	13.867586	-5.1643763	story	16.0	86.0	1609880200	-13.645751
26426489	Backblaze is now a Terraform provide	Backblaze is now a Terraform provider	caution	13.668399	-4.372514	story	16.0	317.0	1615483247	-8.912699
35949771	Kafka vs. Redpanda performance – do 	Kafka vs. Redpanda performance – do the claims add up?	itunpredictable	13.5749	-5.001015	story	16.0	213.0	1684164421	-13.102852
37007769	Genuine question for DevOps people:O	Genuine question for DevOps people:Other than the fact it seems to be an industry standard so it's good for your job prospects, what are the benefits to Terraform over CloudFormation/CDK or whatever the equivalent is for your particular cloud provider?Most companies/people pick a provider and then stick with it and it doesn't seem like there's much portability between configurations if you do decide to switch providers later down the line so I'm not sure what the benefits are. I haven't delved into Terraform yet but I tried doing a project in Pulumi once and felt by the end of it that I might as well have just wrote it in AWS CDK directly.	rcarr	13.688505	-4.372198	comment	16.0	57.0	1691196455	9.478378
37548639	Infrastructure Manager: Provision Go	Infrastructure Manager: Provision Google Cloud Resources with Terraform	jen20	13.664486	-4.3798547	story	16.0	123.0	1694979890	-12.1717205
24598144	eBay’s Cockroach Cult: The Story of 	eBay’s Cockroach Cult: The Story of a Stalking Scandal	pseudolus	13.715258	-5.1775594	story	16.0	194.0	1601121726	-0.66103536
16825783	Kafka, GDPR and Event Sourcing	Kafka, GDPR and Event Sourcing	delebe	13.536396	-5.011993	story	16.0	184.0	1523574645	-13.079207
37809111	A more mature take on stateless Terr	A more mature take on stateless Terraform	rthnbgrredf	13.707272	-4.386651	story	16.0	77.0	1696758028	9.490534
15458900	CockroachDB 1.1 Released: Production	CockroachDB 1.1 Released: Production Made Easy	nate_stewart	13.694744	-5.181205	story	16.0	165.0	1507823861	10.015578
29047182	As a DevOps guy, I'm not a huge fan 	As a DevOps guy, I'm not a huge fan of Terraform.Often I hear from enterprises that Terraform is cloud agnostic, but that's often very wrong. Terraform modules are still specific to the cloud platform and a rewrite is required to port an app running on AWS to GCP.If you use AWS, you're probably better off to use AWS Cloudformation and for GCP Google Cloud Deployment manager.A business reason is often that the engineers are more familiar with Terraform already, but learning Cloudformation is really not that hard...And if you can't work out how to use a basic tool, you should not be running infrastructure anyway, because IT is a constant cycle of change.I'm not saying Terraform is not good, but I just think a native solution of the platform is preferable over a 3rd party tool.	shell0x	13.65458	-4.3845367	comment	17.0	87.0	1635584077	9.401607
37081758	All that I get from this is that Has	All that I get from this is that HashiCorp is no longer an open source company.> However, there are other vendors who take advantage of pure OSS models, and the community work on OSS projects, for their own commercial goals, without providing material contributions back. We don’t believe this is in the spirit of open source.This is 100% in the spirit of open source. If this is a problem for them, why not adopt an open source license that compels developers to open source their code instead, like the AGPL?This is purely a way for HashiCorp to ensure they are the only ones who can commercialize these formerly open source projects. Which is fine. But just go closed source, then, and own that, instead of trying to have it both ways.	jamestanderson	13.724374	-4.362666	comment	17.0	298.0	1691701399	13.273373
37398254	HashiCorp did it backwards	HashiCorp did it backwards	galenmarchetti	13.734886	-4.336673	story	17.0	125.0	1693950654	-12.509918
21388951	"Remove default ""terraform"" partner_i"	"Remove default ""terraform"" partner_id"	ZikkZakk	13.72357	-4.3726063	story	17.0	238.0	1572366296	9.489709
21609119	It has to exist on a private network	It has to exist on a private network behind a firewall with ports open to application servers and other es nodes only. Running things on a public ip address is a choice that should not be taken lightly. Clustering over the public internet is not a thing with Elasticsearch (or similar products).If you are running mysql or postgres on a public ip address it would be equally stupid and irresponsible regardless of the useless default password that many people never change unless you also set up TLS properly (which would require knowing what you are doing with e.g. certificates). The security in those products is simply not designed for being exposed on a public ip address over a non TLS connection. Pretending otherwise would be a mistake. Having basic authentication in Elasticsearch would be t	jillesvangurp	13.547866	-4.7216606	comment	17.0	84.0	1574451015	-10.098991
30128865	Ask HN: Which VM orchestrator do you	Ask HN: Which VM orchestrator do you use?	kosolam	13.699799	-4.401676	story	17.0	47.0	1643480602	-13.127723
12533367	Why I am not a fan of Apache Kafka	Why I am not a fan of Apache Kafka	kornish	13.606331	-4.9864564	story	17.0	70.0	1474308337	10.56126
26811592	Terraform 0.15 General Availability	Terraform 0.15 General Availability	myroon5	13.744749	-4.350057	story	17.0	245.0	1618427150	9.458044
38579130	OpenBao – FOSS Fork of HashiCorp Vau	OpenBao – FOSS Fork of HashiCorp Vault	thinkmassive	13.775157	-4.169532	story	17.0	314.0	1702102186	-12.245923
15117865	KSQL: Open Source Streaming SQL for 	KSQL: Open Source Streaming SQL for Apache Kafka	uptown	13.552678	-4.9958205	story	17.0	278.0	1503938057	-13.04519
23787958	Pulsar vs. Kafka	Pulsar vs. Kafka	ceohockey60	13.582052	-4.961232	story	18.0	112.0	1594352936	-13.114285
20197907	HAProxy 2.0	HAProxy 2.0	guthriej	13.525719	-4.0924144	story	18.0	389.0	1560719336	8.816601
28718066	Show HN: UI for Apache Kafka	Show HN: UI for Apache Kafka	germanosin	13.576794	-4.98483	story	18.0	158.0	1633094380	-13.117595
28904103	I ran a few dozen kafka clusters at 	I ran a few dozen kafka clusters at MegaCorp in a previous life.My answer to anyone who asks for kafka: Show me that you can't do what you need with a beefy Postgres.	anotherhue	13.562321	-5.006059	comment	18.0	92.0	1634554306	-13.108314
37332582	We Are Not Supporting OpenTF	We Are Not Supporting OpenTF	talonx	13.666924	-4.379091	story	18.0	67.0	1693457223	-12.234911
37392581	OpenTF repository is now public	OpenTF repository is now public	cube2222	13.693201	-4.375211	story	18.0	510.0	1693926030	-12.237348
18352335	I'm probably going to get a lot of f	I'm probably going to get a lot of flak for this, but here's an opinion supporting the MongoDB license. Two things:1. MongoDB has the right to do whatever they like------------------------------------------------------The creator of a product:1. Has a rational interest in maximizing their returns2. Owns all the rights to their products (barring existing IP restrictions)And if they choose to open source their code:3. it is of their own prerogative4. without any obligation to do so.Given 1, and 2, if they open source their code, they're an awesome person because they're revealing some portion of their secret business logic to the public. With that, they are entitled to whatever conditions they put on their code. That includes CLA's regardless of how much potential contributors will protest.I	amingilani	13.744153	-5.1292734	comment	18.0	112.0	1541064665	9.939193
26640095	Kafka without ZooKeeper	Kafka without ZooKeeper	toomanybits	13.594239	-4.976422	story	18.0	393.0	1617136546	-13.137921
26812400	My tiny brain still don't get why pe	"My tiny brain still don't get why people like terraform. Do people need to look at both terraform docs and aws/azure/gcp docs when writing a .tf file?
The fact that terraform saves/remembers the resource states is like a double-edged sword: we cannot manually fix some minor mistakes of ours when creating resources because that'll mess up terraform"	dxxvi	13.7092905	-4.3922653	comment	18.0	109.0	1618431106	-12.321884
15184640	Publishing with Apache Kafka at The 	Publishing with Apache Kafka at The New York Times	rmoff	13.616049	-4.985734	story	18.0	369.0	1504713426	-13.12859
31187391	Terraform Provider for Spotify	Terraform Provider for Spotify	marinesebastian	13.699364	-4.3683095	story	19.0	219.0	1651104971	9.4275875
37334486	The Terraform Registry Terms of Serv	The Terraform Registry Terms of Service have been updated	yankcrime	13.714376	-4.3851824	story	19.0	294.0	1693473585	9.499578
24778976	Hello HN! I'm the founder of HashiCo	Hello HN! I'm the founder of HashiCorp.I'm excited to see Boundary here! I want to note a few things about Boundary, why we made it, why it is different than other solutions in the space, etc.* Boundary is free and open source. Similar to when we built Vault, we feel like the solution-space for identity-based security is too commercialized. We want to provide access to this type of security to a broader set of people because we feel it's the right way to think about access control. Note: of course as as a company we plan on commercializing Boundary at some point, but we'll do this similarly to Vault, the major featureset of Boundary will remain free and open source forever.* Dynamic resource catalogs. Other tools in this space usually require manually maintaining a catalog of servers, data	mitchellh	13.720213	-4.3485084	comment	19.0	133.0	1602695299	-12.417414
16754744	CockroachDB 2.0 released	CockroachDB 2.0 released	nate_stewart	13.699306	-5.1825595	story	19.0	299.0	1522850566	10.02262
18231045	Vice President of the Open Source In	Vice President of the Open Source Initiative here.MongoDB submitted this new license for approval by OSI at the same time that they announced that they'd relicensed all of their code. We wish they'd started the process prior to the announcement, but what's done is done. The result, however, is that at this moment, MongoDB is under a non-approved license and therefore IS NOT OPEN SOURCE.As the license review process only started this morning, there's no way to estimate how long the process will take. There also is no guarantee that the license will be found to obey the Open Source Definition, and therefore no guarantee that it will be approved.Hopefully this will all be resolved soon, but there are far too many question marks around this license (and therefore also around any software using	vmbrasseur	13.744748	-5.1314936	comment	19.0	243.0	1539709397	-13.00928
15225158	Nano ID:  A tiny, secure URL-friendl	Nano ID:  A tiny, secure URL-friendly unique string ID generator for JavaScript	iskin	13.807465	-5.081039	story	19.0	78.0	1505196759	-13.6177635
23439788	How we use HashiCorp Nomad	How we use HashiCorp Nomad	jen20	13.692096	-4.38868	story	20.0	318.0	1591457067	-13.080567
30710032	Terraform-AWS-modules/Terraform-AWS-	Terraform-AWS-modules/Terraform-AWS-eks transitions to non-free license	pricechild	13.6589155	-4.355315	story	20.0	80.0	1647517547	-12.410969
27924312	Mitchell Hashimoto takes on a new in	Mitchell Hashimoto takes on a new individual contributor role at HashiCorp	tosh	13.785954	-4.2986126	story	20.0	357.0	1626987834	-12.460627
35174574	Fly.io Status – Consul cluster outag	Fly.io Status – Consul cluster outage	purututu	13.603979	-4.499679	story	20.0	126.0	1678913676	-13.147881
25588898	AWS Lambda Terraform Cookbook with w	AWS Lambda Terraform Cookbook with working examples	sriram_iyengar	13.670003	-4.374807	story	21.0	306.0	1609381367	9.525987
34338318	Ask HN: Why was Terraform created?	Ask HN: Why was Terraform created?	impoppy	13.672432	-4.3779364	story	21.0	38.0	1673444656	9.526569
25075739	Redpanda – A Kafka-compatible stream	Redpanda – A Kafka-compatible streaming platform for mission-critical workloads	sorenbs	13.5441475	-4.9799795	story	21.0	216.0	1605218690	5.208488
18919543	MongoDB removed from RHEL 8 beta due	MongoDB removed from RHEL 8 beta due to license	vbezhenar	13.745663	-5.159157	story	21.0	382.0	1547632737	10.005557
23005228	Ask HN: What is the real difference 	Ask HN: What is the real difference between Terraform and Ansible?	ejanus	13.697371	-4.4120693	story	21.0	91.0	1588066274	9.4994135
24188214	Launch HN: Batch (YC S20) – Replays 	Launch HN: Batch (YC S20) – Replays for event-driven systems	dsies	13.523619	-5.011693	story	22.0	154.0	1597678429	-13.087855
25131674	I really hate that name. I'm sorry, 	"I really hate that name. I'm sorry, I know it's been said a million times before.I've thought about forking it and just running a script to rename it to ""ButterflyDb"" or something pleasant.Nobody thinks ""cockroach = doesn't die"". We think ""disease"" because we evolved to have a strong rejection response to these creepy crawlies. Roaches cause disease. Does anybody want that with their infra?They could sell this so hard if they named it ""ice cream"" or ""cheesecake"" or ""coffee"" or anything but slimy cock roach."	echelon	13.720471	-5.1777344	comment	22.0	105.0	1605658956	-4.5393133
12519289	From Kafka to ZeroMQ for real-time l	From Kafka to ZeroMQ for real-time log aggregation	janczukt	13.536689	-4.994464	story	23.0	197.0	1474090385	-13.089039
22425834	CouchDB 3.0	CouchDB 3.0	ifcologne	13.587046	-5.174967	story	23.0	266.0	1582742363	9.667666
37004617	Terraform best practices for reliabi	Terraform best practices for reliability at any scale	holoway	13.695837	-4.3864045	story	24.0	322.0	1691176939	-3.8560042
32911549	DRUIDS: Datadog Reusable User Interf	DRUIDS: Datadog Reusable User Interface Design System	fabianh001	13.668279	-5.1771817	story	24.0	289.0	1663681362	-13.661805
18824164	From relational DB to a single Dynam	From relational DB to a single DynamoDB table	forrestbrazeal	13.524851	-4.8567896	story	24.0	195.0	1546611520	9.684308
27905922	Show HN: Digger.dev – A PaaS that ge	Show HN: Digger.dev – A PaaS that generates Terraform, in your AWS account	igorzij	13.682125	-4.37147	story	24.0	142.0	1626873949	9.480054
27434363	I hate Terraform with a passion but 	"I hate Terraform with a passion but it is probably the best tool out there for managing cloud infrastructure so I use it at work with no plans to replace it.The biggest downsides are the awful half-baked language and the awkwardness of modules and passing values throughout your config. Also the staticness of providers are a serious pain, for example you can't create a kubernetes cluster then add a resource to it. The work around is to use two separate Terraform stacks which brings a lot of pain for passing values across the boundary. Furthermore you can no longer effectively plan any change that affects the boundary between the two stacks. ""Luckily"" Terraform's performance is so bad that you need to split the stacks anyways.The biggest feature I would like to see is the ability to dump a p"	kevincox	13.66585	-4.38682	comment	24.0	200.0	1623156115	-12.357024
37647627	Kafka as an Antipattern	Kafka as an Antipattern	joshaustintech	13.647477	-4.9665723	story	24.0	98.0	1695663333	10.563548
19985561	Terraform 0.12	Terraform 0.12	burntcaramel	13.711953	-4.382987	story	25.0	281.0	1558559533	9.460181
13898915	Terraform 0.9	Terraform 0.9	based2	13.709879	-4.384619	story	25.0	183.0	1489793895	9.456835
31830788	TerraUSD crash led to vanished savin	TerraUSD crash led to vanished savings, shattered dreams	prostoalex	13.71417	-4.373052	story	25.0	138.0	1655858794	9.3916
27776829	I made a mistake with Terraform and 	I made a mistake with Terraform and Azure made it worse	todsacerdoti	13.711885	-4.382953	story	25.0	170.0	1625773913	9.4504175
26880935	Pulumi 3.0	Pulumi 3.0	bovermyer	13.630249	-4.4229007	story	26.0	321.0	1618949685	9.594035
25288188	Pg-shortkey: YouTube-Like Short IDs 	Pg-shortkey: YouTube-Like Short IDs as Postgres Primary Keys	tosh	13.898169	-5.1580267	story	27.0	162.0	1606998371	-9.505066
38334102	Terraform Cloud Pricing Changes Stic	Terraform Cloud Pricing Changes Sticker Shock	exponentialgenx	13.628891	-4.3284407	story	27.0	227.0	1700411007	9.434316
32865497	35M Hot Dogs: Benchmarking Caddy vs.	35M Hot Dogs: Benchmarking Caddy vs. Nginx	EntICOnc	13.708113	-3.9471045	story	28.0	399.0	1663333137	8.807635
23206566	What every software engineer should 	What every software engineer should know about Apache Kafka	aloknnikhil	13.610461	-4.9724493	story	28.0	597.0	1589658058	10.5699215
23427342	"Me as a manager at a startup: ""Look,"	"Me as a manager at a startup: ""Look, we have 5 months of runway.  Does that make sense?""Young dev from large corp: ""Yes. But if you don't use Terraform we wont be able to see our infrastructure changes over time.  We don't even have a proper code review process.""Me as a manager at a startup: ""We have two micro instances. Do not install Terraform. Finish the import prototype... now.""Young dev from large corp: ""Sigh, ok, just saying in 2 years from now we wont be in a good spot"".  [Then proceeds to blow 2 hours complaining on hacker news.]"	ransom1538	13.706571	-4.37185	comment	29.0	187.0	1591356723	9.463472
24778073	HashiCorp Boundary	HashiCorp Boundary	yongshin	13.732456	-4.3521795	story	29.0	582.0	1602690940	-12.476913
28583258	Terraform is not the golden hammer	Terraform is not the golden hammer	kiyanwang	13.707827	-4.3833675	story	30.0	147.0	1632048278	9.465593
